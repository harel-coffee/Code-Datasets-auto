arg	[arg_1] j ||| [arg_2] [arg_1]	count=3
module	lual_buffer) uma cadeia ||| lual	count=1
function	retoma ||| resume	count=1
module	valor tp o qual ||| lua	count=1
module	pila actual y ||| lua	count=1
function	false ; en ||| assert	count=1
module	del valor ||| lua	count=1
module	similar a lua_settable ||| lua	count=1
module	as the ||| lual	count=1
module	this index to ||| lua	count=1
module	nuevo ||| lua	count=1
arg	continúa la ejecución ||| co val1	count=1
arg	or continues the execution ||| val1	count=1
module	n copiada anteriormente ||| lual	count=1
arg	eine verknüpfung [arg] kopien der ||| s [arg]	count=1
module	is not null fills ||| lual	count=1
module	welcher von require ||| package	count=1
module	essa tabela ||| lual	count=1
module	es el valor en ||| lua	count=2
arg	a2 performing the ||| a2	count=1
module	gegebenen gültigen [module] auf dem ||| [module]	count=1
module	l (mas não ||| lual	count=1
module	same version of lua ||| lual	count=1
module	lua_integer ||| lual	count=1
arg	a field [arg_2] ||| [arg_2] [arg_1]	count=1
module	one ||| lua	count=1
module	erro ||| lua	count=1
module	lual_buffer) ||| lual	count=4
module	0 caso contrário ||| lua	count=6
module	de "pánico" (véase ||| lual	count=1
module	onto the stack ||| lua	count=2
module	equivalente de ||| lua	count=1
module	fornecido é um ||| lua	count=4
module	in list ||| lual	count=1
module	es no válido ||| lua	count=1
module	de la pila actual ||| lua	count=1
module	la salida ||| lual	count=1
module	it does not ||| debug	count=1
module	the [module] to the ||| [module]	count=1
arg	message ||| message level	count=1
module	número y retorna el ||| lual	count=1
module	convierte el ||| lua	count=3
function	of the version number ||| version	count=1
arg	pattern ||| pattern	count=2
function	ejecuta el fichero ||| dofile	count=1
module	vuelca una función en ||| lua	count=1
module	valores entre ||| lua	count=1
module	na pilha o ||| lua	count=1
module	of ||| math	count=5
function	dumps a ||| dump	count=1
module	changes the allocator ||| lua	count=1
function	de gancho corrente (como ||| gethook	count=1
function	de fato) ||| newlibtable	count=1
module	índice idx ||| lual	count=1
module	o elemento ||| lua	count=1
module	cadeia e 0 caso ||| lua	count=1
module	estándar de ||| lual	count=1
module	retorna la "longitud" de ||| lua	count=1
module	de error en caso ||| lual	count=1
module	tabela e coloca essa ||| lual	count=1
module	de pánico ||| lua	count=1
function	kann ||| seeall	count=1
module	lua invocando lua_newstate ||| lual	count=1
module	o buraco ||| lua	count=1
module	pila a ||| lua	count=1
arg	if repl is a ||| pattern repl n	count=1
module	fecho ||| lua	count=3
module	string then its value ||| string	count=1
function	new lua state ||| newstate	count=1
arg	do fecho lua f1 ||| f1	count=2
module	of information about a ||| lua	count=1
module	menor que el ||| lua	count=1
module	elements ||| lual	count=1
module	values returned by ||| lua	count=1
module	copia ||| lual	count=1
module	um valor no ||| lua	count=1
module	lua state and ||| lual	count=1
module	to the buffer b ||| lual	count=1
module	= v onde ||| lua	count=1
module	value at the given ||| lual	count=1
function	nil if it ||| getmetatable	count=1
module	é equivalente a ||| lua	count=1
module	reemplazando cualquier ||| lual	count=1
function	it does not have ||| getmetatable	count=1
arg	verknüpfung [arg] kopien der ||| s [arg]	count=1
module	esse tamanho ||| lual	count=1
module	grande o ||| math	count=1
module	valor más ||| math	count=1
arg	esta função retorna message ||| message	count=1
module	given valid index shifting ||| lua	count=1
module	esta função produz os ||| lual	count=2
module	reserva de memoria basada ||| lual	count=1
arg	[arg_1] [arg_2] os elementos list[pos], list[pos+1], ||| [arg_2] [arg_1]	count=4
module	deve ser um ||| lua	count=1
module	usado por [module] procurar por ||| [module]	count=2
module	the registry ||| lual	count=1
module	von require ||| package	count=1
module	mismo para una tabla ||| lua	count=1
arg	to the [arg] plus ||| whence [arg]	count=1
module	mismo para una ||| lua	count=1
module	byte c ao buffer ||| lual	count=1
module	shifting ||| lua	count=1
module	realloc y estableciendo ||| lual	count=1
module	función debug ||| debug	count=1
arg	the cosine of x ||| x	count=1
module	returns a binary string ||| string	count=1
module	in list l ||| lual	count=1
module	fornecido é nil e ||| lua	count=1
arg	insere o elemento value ||| value	count=1
module	elements raising an ||| lual	count=1
arg	a2 performing the ||| e t a2	count=1
module	returns ||| math	count=1
function	é um fluxo de ||| isthread	count=1
module	lual_prepbuffsize with ||| lual	count=1
module	[module] de ||| [module]	count=1
module	os elementos acima ||| lua	count=1
module	o valor no topo ||| lua	count=1
module	que el situado ||| lua	count=1
module	la posición ||| lua	count=9
function	la cesión de ||| yield	count=1
module	different pieces ||| lua	count=1
module	onto the ||| lua	count=2
module	execução da co-rotina co ||| coroutine	count=1
module	arrays ||| lual	count=2
module	for the ||| lual	count=1
module	el mismo para otros ||| lua	count=1
module	the new ||| lua	count=1
module	um valor maior ou ||| math	count=1
arg	если значение [arg] равно false ||| [arg]	count=1
module	de la parte ||| lua	count=2
module	uma ||| lua	count=20
module	para el valor ||| lua	count=1
function	literal string ||| pushliteral	count=1
module	[module] fornecido ||| [module]	count=1
function	функцию [function] с опциональным ||| [function]	count=1
arg	of its argument v ||| v message	count=1
function	predefined size lual_buffersize ||| prepbuffer	count=1
function	have a ||| getmetatable	count=1
function	returns the [function] ||| [function]	count=3
arg	a2 performing the equivalent ||| e t a2	count=1
module	zeile der [module] liefert ||| [module]	count=1
module	"pánico" (véase ||| lual	count=1
function	converte o valor lua ||| tolstring	count=1
module	en el estado dado ||| lua	count=1
module	comprimento ||| lual	count=1
module	descarrega uma função como ||| lua	count=1
module	the given lua ||| lua	count=1
arg	loads ||| chunkname mode env	count=1
module	and pushes that ||| lual	count=1
module	tamaño del bloque de ||| lua	count=1
arg	da co-rotina co ||| co	count=1
module	operador ||| lua	count=1
function	dekadischen logarithmus ||| log10	count=1
module	table and pushes that ||| lual	count=1
arg	se repl é uma ||| s pattern repl n	count=1
function	total size ||| stringtonumber	count=1
module	qualquer ||| math	count=1
module	of the object ||| lual	count=1
module	situación del ||| lua	count=3
function	erzeugt einen lua-fehler ||| error	count=1
arg	são necessariamente portáveis ||| i j	count=1
module	la metatabla del ||| lual	count=1
arg	asigna el ||| valor	count=1
module	y hora formateada de ||| os	count=1
module	un string es la ||| lua	count=1
function	a temporary ||| tmpfile	count=1
arg	función asigna el valor ||| valor	count=1
module	userdata del ||| lual	count=1
module	da pilha para top ||| lual	count=1
module	pilha e ||| lua	count=1
function_arg	parte fracionária [arg_2] ||| [arg_2] [function_1]	count=1
module	[module] string pointed ||| [module]	count=2
module	de memoria ||| lua	count=3
module	v es el ||| lua	count=2
module	should be ||| lua	count=1
module	lua state and the ||| lual	count=1
module	dado estado ||| lua	count=1
function	sin invocar ningún ||| rawequal	count=1
module	integer and ||| lual	count=1
arg	index [arg] der funktion ||| func [arg]	count=1
arg	no base ||| e base	count=1
module	el valor en ||| lua	count=10
module	índice fornecido é uma ||| lua	count=3
module	valor no topo ||| lual	count=1
function	fluxo de ||| isthread	count=1
function_arg	[function_1] x en ||| [arg_2] [function_1]	count=4
arg	t1 para ||| t1	count=1
arg	zeichenkette [arg] angegebenen modus ||| filename [arg]	count=1
module	given ||| lua	count=8
arg	called with no base ||| base	count=1
function	muda a função alocadora ||| setallocf	count=1
module	converte ||| lua	count=4
arg	[arg_1] is a ||| [arg_2] [arg_1]	count=1
function	la cesión ||| yield	count=1
module	estabelece a função ||| lua	count=1
module	um número ou uma ||| lua	count=1
arg	this function returns table ||| table index value	count=1
module	a tabela ||| lua	count=2
module	equivalente a lual_prepbuffsize ||| lual	count=1
module	values returned ||| lua	count=1
module	si existe) y libera ||| lua	count=1
function	string (const char*) ||| tolstring	count=1
module	different pieces of ||| lua	count=1
module	de gancho ||| lua	count=1
module	tabela na ||| lual	count=1
module	по заданному ||| lua	count=4
module	para una ||| lua	count=1
module	string ||| lua	count=4
function	current hook count ||| gethookcount	count=1
arg	a2 ||| t a2	count=1
module	top of ||| lual	count=3
module	en la parte ||| lua	count=3
module	aceptable o lua_tnone si ||| lua	count=1
module	a string and returns ||| lual	count=2
function	la tabla [function] un ||| [function]	count=1
module	usado pela api de ||| lua	count=1
function	negação bit ||| bnot	count=1
arg	y que ||| y	count=1
module	creates and returns ||| lual	count=1
module	nueva función de pánico ||| lua	count=1
module	the same state ||| lua	count=1
module	dado estado para ||| lua	count=1
function_arg	table t ||| ipairs t	count=1
module	the table at ||| lual	count=1
module	índice como ||| lua	count=1
module	v ||| lua	count=4
module	operador longitud ('#'); para ||| lua	count=1
module	state ||| lual	count=1
function	tangente hiperbólica de ||| tanh	count=1
module	den ||| math	count=1
module	nombre del tipo ||| lua	count=1
module	returns the ||| debug	count=1
module	the function argument ||| lual	count=5
module	a la posición ||| lua	count=1
arg	libname ||| libname	count=3
module	o valor t[fname], ||| lual	count=1
module	usada para ||| lua	count=1
function	de chunk binario ||| dump	count=1
module	lual_newmetatable) e ||| lual	count=1
module	ou um registro de ||| lua	count=1
arg	al nivel dado en ||| nivel	count=1
function_arg	квадратный корень [arg_2] ||| [arg_2] [function_1]	count=1
arg	or continues the ||| co val1	count=1
module	igual a ||| math	count=1
module	y estableciendo una función ||| lual	count=1
arg	[arg_1] width ||| [arg_2] [arg_1]	count=3
module	and returns this integer ||| lual	count=1
arg	value ||| value	count=8
module	se refiere a un ||| lua	count=1
module	index1 es ||| lua	count=1
module	die ausführung der koroutine ||| coroutine	count=1
module	above this ||| lua	count=1
module	associated with the ||| lua	count=1
module	procesos [module] mismo estado ||| [module]	count=1
arg	f2 ||| f2	count=3
arg	если значение [arg] равно ||| [arg]	count=1
module	error position [module] the beginning ||| [module]	count=1
arg	value ohne ||| value	count=1
module	um registro de ||| lua	count=1
module	existe) y libera ||| lua	count=1
module	fornecido e ||| lua	count=1
module	which must be ||| lua	count=1
function	de função específica ||| getinfo	count=1
module	operador longitud ('#'); ||| lua	count=1
function	metamethoden aufzurufen ||| rawset	count=1
function	comienza o ||| resume	count=1
function	returns the metatable ||| getmetatable	count=1
module	los objetos ||| lua	count=1
module	lo ||| lua	count=2
arg	posição [arg] list ||| list [arg]	count=1
function	posición dada) ||| replace	count=1
function	the global environment onto ||| pushglobaltable	count=1
module	if l is ||| lual	count=1
module	estabelece esse ||| lua	count=1
module	pop их, [module] оставляет результат ||| [module]	count=1
arg	given [arg] which can ||| value [arg]	count=1
module	допустимому индексу: ||| lua	count=1
module	all entries in ||| lual	count=1
module	up ||| lua	count=1
module	creates ||| lual	count=4
module	la dirección es ||| lua	count=1
arg	y/x in radiant ||| y	count=1
module	o tamanho ||| lua	count=1
function	is a literal string ||| pushliteral	count=1
module	onto the stack the ||| lua	count=2
module	the corresponding value ||| lua	count=1
module	возвращает ||| math	count=5
arg	of pattern ||| s pattern	count=2
module	gancho de ||| lua	count=1
arg	of [arg_2] ||| [arg_2] [arg_1]	count=2
module	nil if it ||| debug	count=1
module	liberador de memoria ||| lua	count=1
module	troca valores entre ||| lua	count=1
module	из файла [module] в ||| [module]	count=1
module	ao buffer ||| lual	count=3
module	liberación de memoria si ||| lua	count=1
module	sz elementos lançando um ||| lual	count=1
function	[function] hora ||| [function]	count=3
module	above this index ||| lua	count=1
module	the call are all ||| lual	count=1
module	es un ||| lual	count=6
module	index to a ||| lual	count=1
module	a função chamada ||| lua	count=2
module	macro is equivalent to ||| lua	count=1
module	uma co-rotina em ||| lua	count=1
function	pila) ||| type	count=1
function	[function] and ||| [function]	count=1
module	changes ||| lua	count=1
module	the metatable ||| debug	count=1
module	en la ||| lua	count=21
module	no tiene metatabla ||| debug	count=1
module	estándar realloc y ||| lual	count=1
module	para top ||| lual	count=1
module	objeto en la ||| lual	count=1
module	establece ||| lua	count=3
module	no topo ||| lual	count=2
arg	gegebene funktion als hook ||| thread hook mask count	count=1
module	not ||| debug	count=1
function_arg	if [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] v1 ||| [arg_1] [arg_2]	count=1
module	la salida estándar de ||| lual	count=1
module	un userdata ||| lua	count=2
function	va_list ao invés ||| pushvfstring	count=1
module	para um número ||| lua	count=1
function	de entorno de ||| setfenv	count=1
module	the ||| lua	count=51
module	tamanho fornecido ||| lua	count=1
module	am gegebenen [module] auf dem ||| [module]	count=2
module	y lo elimina de ||| lua	count=1
module	fornecido para uma cadeia ||| lua	count=1
arg	the first match of ||| s	count=1
module	para o ||| lua	count=3
arg	n from ||| n	count=1
module	valid index ||| lua	count=2
module	lua_pushfstring exceto que ||| lua	count=1
arg	y that ||| y	count=1
module	o programa ||| os	count=1
module	un intérprete ||| lua	count=1
function	converte ||| tolstring	count=1
module	para um fluxo ||| lua	count=1
function	su bloque ||| touserdata	count=1
module	mismo para otros ||| lua	count=1
module	structure ||| lua	count=1
module	chamada ||| lua	count=2
module	objetos en ||| lua	count=1
module	função é ||| lua	count=1
function_arg	натуральный логарифм [arg_2] ||| [arg_2] [function_1]	count=1
module	a new panic ||| lua	count=1
module	o tipo usado pela ||| lua	count=1
module	is not ||| lual	count=1
module	índice como o topo ||| lua	count=1
function	the current hook ||| gethook	count=1
module	between the valid index ||| lua	count=1
module	t[k] = v ||| lua	count=1
module	um novo fluxo ||| lua	count=1
function	of global name ||| register	count=1
module	crea un nuevo proceso ||| lua	count=1
arg	verknüpfung [arg] ||| s [arg]	count=1
module	checks whether the core ||| lual	count=1
module	index1 ||| lua	count=1
module	[module] стек ||| [module]	count=1
module	el índice dado ||| lua	count=1
module	tamanho otimizado para armazenar ||| lual	count=1
function	serem registradas por lual_setfuncs ||| reg	count=1
module	establece la función ||| lua	count=1
function	controla o coletor de ||| gc	count=1
module	using the same version ||| lual	count=1
module	que ela recebe ||| lua	count=1
module	returns the address ||| lua	count=1
module	string in a ||| lual	count=1
module	a la posición dada ||| lua	count=1
module	0 и ставит вершину ||| lua	count=1
module	nuevo ||| lual	count=1
module	and returns this ||| lual	count=4
module	desse índice para ||| lua	count=1
module	function argument arg is ||| lual	count=5
module	b (see lual_buffer) ||| lual	count=1
module	onto the [module] a ||| [module]	count=1
module	lua value ||| lua	count=1
module	type of ||| lua	count=1
module	a ||| debug	count=2
function	de um upvalue ||| setupvalue	count=1
module	tabla ||| lual	count=1
arg	from table a1 ||| a1 f e	count=1
module	a [module] ||| [module]	count=1
module	null fills ||| lual	count=1
function	unsigned version of lua_integer ||| unsigned	count=1
module	converte o valor no ||| lua	count=2
module	top ||| lual	count=5
module	lua_tnone si la dirección ||| lua	count=1
module	função produz os ||| lual	count=2
module	that size ||| lual	count=1
module	aus [module] ||| [module]	count=3
module	retornados ||| lua	count=1
module	funções a ||| lual	count=1
module	seu [module] como ||| [module]	count=1
module	the ||| lual	count=38
function_arg	arco tangente [arg_2] ||| [arg_2] [function_1]	count=3
module	a função ||| lua	count=4
module	no topo ||| lua	count=1
module	com o tamanho fornecido ||| lua	count=1
arg	a2 ||| e t a2	count=1
module	sets the c ||| lua	count=1
module	maior ou igual a ||| math	count=1
module	posición del ||| lual	count=2
module	estado de lua ||| lual	count=1
arg	tangente de y/x en ||| y x	count=1
module	de un valor ||| lua	count=2
function	nova tabela vazia e ||| newtable	count=1
module	retorna el nombre del ||| lua	count=1
function	stack cannot grow to ||| checkstack	count=1
module	pela api ||| lua	count=1
module	to an integer and ||| lual	count=1
function	mismo ||| checknumber	count=1
module	fornecido ||| lua	count=19
module	si ||| debug	count=1
function	der globalen umgebung ||| seeall	count=1
module	el tipo del valor ||| lua	count=1
module	estado ||| lual	count=1
function	sets ||| setmetatable	count=2
arg	cosine of x ||| x	count=1
module	the stack the lua ||| lua	count=1
module	[module] string ||| [module]	count=2
module	es inválida ||| lua	count=1
module	e a ||| lua	count=3
module	aceptable ||| lua	count=12
module	elimina el mismo ||| lual	count=1
module	registro de ||| lua	count=3
module	argument ||| lual	count=5
function	chunk binario ||| dump	count=1
function	devuelve la vieja ||| atpanic	count=1
module	из файла ||| io	count=1
module	sets the ||| lua	count=2
arg	o elemento value ||| value	count=1
module	в ||| lua	count=4
module	en la pila ||| lua	count=4
arg	el valor de x ||| x	count=1
module	tipo tname (veja ||| lual	count=1
module	userdata do tipo ||| lual	count=1
module	la posición dada y ||| lua	count=1
module	конвертирует значение ||| lua	count=2
module	é uma tabela ||| lua	count=1
module	aceptable en un booleano ||| lua	count=1
arg	file ||| file	count=1
module	fluxos ||| lua	count=1
module	associado a ||| debug	count=1
module	metamétodo ||| lua	count=1
module	del índice aceptable en ||| lua	count=3
module	la parte ||| lua	count=6
module	with name tname ||| lual	count=1
module	carrega ||| lua	count=1
module	current [module] 0 otherwise ||| [module]	count=1
module	aceptable index2 ||| lua	count=1
module	instead of raising an ||| lual	count=1
module	uma função ou ||| lua	count=2
module	number and returns ||| lual	count=1
arg	программу ??? (если mode ||| mode	count=1
module	retorna 1 ||| lua	count=11
module	es un ||| lua	count=3
module	local de un ||| lua	count=2
module	variável local com ||| debug	count=1
module	uma cadeia ||| lua	count=4
module	situado en la posición ||| lual	count=1
function	nombre global ||| getglobal	count=1
arg	dem index [arg] der ||| func [arg]	count=1
module	fornecido é uma ||| lua	count=3
function	garante que o ||| getsubtable	count=1
module	s is ||| lua	count=1
module	anfang der datei ||| file	count=1
module	if ||| lual	count=3
function	this function allocates a ||| newuserdata	count=1
arg	to x ||| x	count=1
function	campo e de ||| getmetafield	count=1
module	tanto reemplazando ||| lua	count=1
module	rodando ||| lua	count=1
module	qualquer outro valor ||| math	count=1
module	una tabla es el ||| lua	count=1
module	del índice obj ||| lual	count=1
function	um novo estado independente ||| newstate	count=1
module	del mismo ||| lua	count=1
module	proceso lo coloca ||| lua	count=1
arg	[arg] como un ||| [arg]	count=3
module	one the values returned ||| lua	count=1
arg	para a tabela fornecida ||| table metatable	count=1
module	tiene metatabla ||| debug	count=1
module	userdata completo com o ||| lua	count=1
arg	given by offset ||| offset	count=1
module	retorna ||| lua	count=24
module	the stack elements ||| lua	count=1
function	error adiciona alguma ||| error	count=1
function	version number ||| version	count=1
module	vuelca ||| lua	count=1
module	da pilha para ||| lual	count=1
module	valores retornados ||| lua	count=1
module	top element into ||| lua	count=1
module	da pilha ||| lua	count=3
module	abaixo ||| lual	count=1
module	e indiretamente ||| lua	count=1
module	a c static variable ||| lua	count=1
function	dumps a function as ||| dump	count=1
module	variable local ||| lua	count=2
module	faz ||| lua	count=2
function	del [function] ||| [function]	count=1
module	de reserva de ||| lual	count=1
arg	bis j erstreckt i ||| i	count=1
module	returns a pointer to ||| lua	count=1
module	arg is a string ||| lual	count=2
module	dirección es inválida ||| lua	count=1
module	onde t é ||| lual	count=1
module	1 se o ||| lua	count=8
function	un upavalue de una ||| getupvalue	count=1
module	integer cast to ||| lual	count=1
module	in a ||| lual	count=1
module	works ||| lual	count=1
module	buffer b (see lual_buffer) ||| lual	count=1
module	pointer to a ||| lua	count=1
module	is a number and ||| lual	count=1
arg	continúa ||| val1	count=1
module	static ||| lua	count=1
module	l (mas não as ||| lual	count=1
module	más grande ||| math	count=1
module	v es el valor ||| lua	count=2
arg	path fornecido ||| path sep rep	count=1
module	to carry different pieces ||| lua	count=1
arg	function at [arg] of the ||| [arg] local	count=1
module	given ||| lual	count=1
arg	времени [arg] до ||| t2 [arg]	count=1
function	cesión de una co-rutina ||| yield	count=1
arg	равенства [arg] и ||| [arg]	count=1
module	top of ||| lua	count=1
module	associated with name tname ||| lual	count=1
module	tamanho otimizado para ||| lual	count=1
module	v1 es igual a ||| lua	count=1
arg	que [arg] = ||| [arg]	count=1
module	está ||| lua	count=1
module	y [module] especificadas ||| [module]	count=1
module	заданному допустимому индексу в ||| lua	count=2
module	nova tabela com um ||| lual	count=1
module	o nome do ||| lua	count=1
module	lua invocando lua_newstate con ||| lual	count=1
arg	de um ||| table	count=1
module	leve e v ||| lua	count=1
module	shifting up the ||| lua	count=1
module	completo com o ||| lua	count=1
function	setzt die ||| sethook	count=1
module	structure used ||| lua	count=1
arg	value à ||| value	count=1
module	produce la ||| lua	count=1
function_arg	the table [arg_2] ||| [function_1] [arg_2]	count=4
module	uma tabela e ||| lual	count=1
module	stack to ||| lual	count=1
module	расположенных по заданному ||| lua	count=1
function	or nil if ||| getmetatable	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=111
module	estado dado ||| lua	count=1
module	the value at index ||| lual	count=1
module	entre diferentes fluxos de ||| lua	count=1
function	parte fracionária ||| modf	count=1
module	para uma cadeia c ||| lua	count=1
module	estableciendo ||| lual	count=1
arg	x em ||| x	count=1
module	coloca essa ||| lual	count=1
module	devuelve ||| lua	count=1
module	whether the core ||| lual	count=1
module	mensaje en ||| lual	count=1
module	created the lua ||| lual	count=1
module	the functions in ||| lual	count=1
module	cadeia e retorna ||| lual	count=1
module	no índice ||| lual	count=1
module	en caso ||| lua	count=2
module	de [module] ||| [module]	count=4
module	stack size to ||| lual	count=1
module	the top of ||| lua	count=1
module	un userdata del ||| lual	count=1
module	must be one the ||| lua	count=1
module	si la dirección ||| lua	count=1
module	optimized ||| lual	count=1
module	a qualquer outro valor ||| math	count=1
module	argument arg is ||| lual	count=5
function	[function] с ||| [function]	count=1
arg	[arg_1] width ||| [arg_1] [arg_2]	count=3
function	a mesma versão ||| checkversion	count=1
module	new value ||| lua	count=1
module	el contador ||| lua	count=1
arg	[arg_1] y ||| fmod [arg_1] [arg_2]	count=3
function	string convertible to ||| isnumber	count=1
module	индексу: для ||| lua	count=1
function	adds the value ||| addvalue	count=1
module	pila y elimina el ||| lual	count=1
module	no índice idx ||| lual	count=1
module	fichero que se puede ||| io	count=1
module	of raising an error ||| lual	count=1
module	un acceso directo ||| lua	count=1
function	as the error object ||| error	count=1
arg	чисел параметром [arg] ("seed"): каждый ||| [arg]	count=1
module	de error en ||| lual	count=1
module	tipo usado por la ||| lua	count=1
arg	a2 performing ||| t a2	count=1
module	del bloque ||| lua	count=1
module	hora formateada de ||| os	count=1
arg	a2 performing the ||| t a2	count=1
module	the core running the ||| lual	count=1
module	und [module] uhrzeit ||| [module]	count=1
module	gegebenen [module] eine ||| [module]	count=3
module	y libera toda ||| lua	count=1
arg	palavras da cadeia s ||| s pattern	count=1
module	el valor en la ||| lua	count=9
module	cria ||| lua	count=3
module	[module] boolean ||| [module]	count=1
function	функция чтения, используемая ||| reader	count=1
module	valor t[fname], ||| lual	count=1
module	pushes that ||| lual	count=1
arg	of pattern [arg_2] ||| [arg_1] [arg_2]	count=1
module	nueva función ||| lua	count=1
module	para guardar pedaços ||| lua	count=1
module	función c estándar ||| lual	count=1
module	and the top ||| lua	count=1
module	crea y retorna ||| lual	count=1
arg	[arg_1] v1 v2 ||| [arg_1] [arg_2]	count=1
module	c el ||| lua	count=1
module	l is ||| lual	count=1
function	tonumber tries ||| tonumber	count=1
module	de lua invocando lua_newstate ||| lual	count=1
function	of floats in lua ||| number	count=1
module	en la ||| lual	count=7
arg	[arg] por ||| [arg]	count=3
function	type encoded by ||| typename	count=1
module	"pánico" (véase lua_atpanic) que ||| lual	count=1
module	na [module] e ||| [module]	count=1
module	diferentes procesos [module] mismo estado ||| [module]	count=1
module	valor no índice ||| lual	count=1
module	der ||| package	count=2
module	número e retorna ||| lual	count=3
module	to lua_pushstring but ||| lua	count=1
module	registra todas as funções ||| lual	count=1
module	userdata es el ||| lua	count=1
function	value [function] is the ||| [function]	count=2
module	la pila la ||| lua	count=1
module	up the ||| lua	count=1
module	de la metatabla ||| lual	count=1
arg	ruft die [arg] mit ||| [arg]	count=1
module	de informação sobre uma ||| lua	count=1
function	вставляет копию элемента ||| pushvalue	count=1
module	pila y la ||| lua	count=2
module	hacia el [module] válido dado ||| [module]	count=1
module	valor lua no índice ||| lua	count=3
module	that ||| lual	count=5
arg	the angle [arg] from ||| [arg]	count=1
module	size ||| lual	count=3
module	numérico cualquiera ||| math	count=1
arg	i ||| i j	count=1
module	the [module] sets it ||| [module]	count=2
function	kleinsten wert seiner argumente ||| min	count=1
module	existe) y libera toda ||| lua	count=1
module	uma cadeia ou um ||| lua	count=1
module	índice válido y ||| lua	count=2
function	hook ||| gethook	count=1
module	função chamada ||| lua	count=2
module	valor en el índice ||| lua	count=2
function	0 caso contrário ||| istable	count=1
module	when the ||| lual	count=1
module	whether the function argument ||| lual	count=2
arg	[arg_1] a table ||| [arg_2] [arg_1]	count=2
module	un ||| math	count=1
function	elemento fuera de la ||| isnone	count=1
module	a given state to ||| lua	count=1
module	para o estado ||| lua	count=1
module	quociente [module] direção a ||| [module]	count=1
function_arg	coseno hiperbólico [arg_2] ||| [arg_2] [function_1]	count=1
function	uma nova tabela vazia ||| newtable	count=1
function	veja a seguir ||| setfuncs	count=1
module	c string ||| lual	count=1
module	estabelece a ||| lua	count=1
arg	up ||| up	count=3
module	local com ||| debug	count=1
function	um manipulador de arquivo ||| type	count=1
function	a raiz quadrada ||| sqrt	count=1
module	tname in the ||| lual	count=1
module	la situación del índice ||| lua	count=3
module	retorna el tipo ||| lua	count=1
module	object ||| lual	count=3
module	no índice fornecido ||| lua	count=17
module	relacionadas ||| lual	count=2
module	that the ||| lual	count=1
module	the elements ||| lua	count=1
module	coletor de lixo ||| lua	count=1
function	el string r ||| gsub	count=1
arg	uma cadeia então seu ||| pattern	count=1
module	uma estrutura usada ||| lua	count=1
arg	tales que [arg] = ||| [arg]	count=1
arg	f1 refer to the ||| f1 n1	count=1
module	e a coloca ||| lua	count=1
module	значение ||| lua	count=2
function	returns the old one ||| atpanic	count=1
module	[module] длину ||| [module]	count=3
function	nova metatabela para o ||| setmetatable	count=1
module	liefert eine kopie von ||| string	count=1
arg	[arg] número ||| [arg]	count=1
module	stack ||| lua	count=21
function	fractional part ||| modf	count=1
module	pila y elimina ||| lual	count=1
module	are all ||| lual	count=1
module	la longitud del ||| lua	count=1
module	given index ||| lual	count=1
module	salida estándar de error ||| lual	count=1
arg	[arg] mit den ||| [arg]	count=1
module	a cadeia fornecida ||| lual	count=1
arg	[arg_1] (see §6 ||| [arg_1] [arg_2]	count=5
arg	[arg] равен ||| prog [arg]	count=3
module	la función es ||| lual	count=6
module	número ||| lual	count=8
module	nuevo proceso ||| lua	count=1
function	lua float to ||| numbertointeger	count=1
arg	f1 refer to ||| f1 n1	count=1
module	faz o equivalente ||| lua	count=1
module	índice t ||| lual	count=1
module	elemento de la ||| lua	count=1
module	o elemento no ||| lua	count=1
function	remove o ||| remove	count=1
module	at index idx ||| lual	count=1
module	deslocando ||| lua	count=1
module	la pila ||| lual	count=3
module	o argumento arg da ||| lual	count=6
module	tabela com um ||| lual	count=1
module	información ||| lua	count=2
module	aceptable en un ||| lua	count=3
arg	if repl ||| repl	count=1
function	de um tabela ||| next	count=1
function	un string (const char*) ||| tolstring	count=1
module	número variável de ||| lua	count=1
arg	function at [arg] ||| [arg] local	count=1
module	o equivalente ||| lua	count=1
module	cadeia e ||| lua	count=1
module	the functions in list ||| lual	count=1
function	hook de depuración ||| sethook	count=1
module	with a size optimized ||| lual	count=1
module	value associated with ||| lua	count=1
module	os elementos ||| lua	count=1
arg	value value to ||| value	count=1
module	lua situado en ||| lua	count=2
function	генерирует ошибку lua ||| error	count=1
function	elimina n elementos de ||| pop	count=1
function	a string convertible to ||| isnumber	count=1
arg	the angle [arg] from radians ||| [arg]	count=1
module	función c estándar realloc ||| lual	count=1
module	with the ||| lual	count=2
module	расположенных по заданному допустимому ||| lua	count=1
module	e 0 caso ||| lua	count=6
module	0 и ставит ||| lua	count=1
module	retorna esse endereço ||| lua	count=1
arg	from table a1 ||| a1	count=1
module	(sin ||| lua	count=1
module	la metatabla del objeto ||| lual	count=1
function	como um trecho binário ||| dump	count=1
module	função de ||| lua	count=2
module	estabelece o valor ||| lua	count=1
module	convierte el valor ||| lua	count=3
module	un índice ||| lua	count=1
module	de memoria ||| lual	count=1
module	a structure ||| lua	count=1
function	arco seno ||| asin	count=1
function	geralmente error adiciona alguma ||| error	count=1
function_arg	table [arg_2] ||| [function_1] [arg_2]	count=4
module	onto the [module] a new ||| [module]	count=1
module	y elimina el mismo ||| lual	count=1
module	and returns ||| lua	count=1
module	é o valor ||| lual	count=1
function_arg	[function_1] libname ||| [function_1] [arg_2]	count=3
module	posición del índice ||| lua	count=8
function	global name ||| getglobal	count=1
module	guardar pedaços ||| lua	count=1
module	sobre uma função ||| lua	count=2
module	0 и ||| lua	count=1
function	un upavalue ||| getupvalue	count=1
arg	параметром [arg] плюс значение ||| whence [arg]	count=1
module	situado en la ||| lua	count=5
module	pieces of information ||| lua	count=1
module	in ||| math	count=3
module	todos los objetos en ||| lua	count=1
arg	felder einer [arg] ||| [arg]	count=1
module	the buffer ||| lual	count=1
module	de arquivo ||| io	count=1
arg	invoca [arg_1] [arg_2] en modo protegido ||| lua pcall [arg_1] [arg_2]	count=1
module	é nil e ||| lua	count=1
module	the c ||| lua	count=1
module	[module] the main ||| [module]	count=1
function	ejecuta el fichero dado ||| dofile	count=1
arg	pattern na cadeia ||| pattern	count=1
module	parte superior de la ||| lual	count=2
module	null instead ||| lual	count=1
arg	программу [arg] ||| [arg]	count=3
module	una copia del ||| lual	count=1
module	de um fecho ||| lua	count=2
module	state to ||| lua	count=1
module	toda ||| lua	count=1
module	uma função ou invocação ||| lua	count=1
function_arg	tangente hiperbólica [arg_2] ||| [arg_2] [function_1]	count=1
module	indiretamente ||| lua	count=1
arg	[arg] as ||| [arg]	count=3
module	el tamaño del ||| lua	count=1
module	uma co-rotina ||| lua	count=1
module	o estado inteiro de ||| lua	count=1
function	starts ||| resume	count=1
module	hook de ||| lua	count=1
module	os ||| lua	count=1
module	função produz os valores ||| lual	count=2
function	__ipairs ||| ipairs	count=1
module	y elimina el ||| lual	count=1
function	квадратный корень ||| sqrt	count=1
arg	перехвата hook ||| thread hook	count=2
function	globalen umgebung ||| seeall	count=1
module	raising an ||| lual	count=2
function	zero-terminated string pointed to ||| pushstring	count=1
module	del operador ||| lua	count=1
module	erro se a ||| lual	count=1
module	e v é ||| lua	count=1
module	de memoria basada ||| lual	count=1
module	valores retornados ||| lual	count=2
module	the top element into ||| lua	count=1
module	essa tabela na pilha ||| lual	count=1
module	posición ||| lual	count=2
arg	o continúa ||| co val1	count=1
module	instead of raising ||| lual	count=1
module	coloca en ||| lua	count=5
arg	función func [arg_2] ||| [arg_2] [arg_1]	count=1
module	lo coloca en la ||| lua	count=1
module	like lual_checkudata ||| lual	count=1
module	that ||| lua	count=1
module	similar a ||| lua	count=3
module	é uma ||| lua	count=3
module	índice t para ||| lual	count=1
module	the functions ||| lual	count=1
module	um número retorna ||| lual	count=1
module	type ||| lua	count=1
module	metatable of ||| lual	count=1
module	given index to ||| lual	count=1
module	call are ||| lual	count=1
module	ensures that ||| lual	count=1
module	desempilha ||| lua	count=1
module	returns a pointer ||| lua	count=1
module	byte c ao ||| lual	count=1
module	al correspondiente ||| lua	count=1
module	crea una ||| lual	count=1
module	same version of ||| lual	count=1
module	pedaços ||| lua	count=1
function	erben kann ||| seeall	count=1
arg	la función func_hook ||| proceso func_hook	count=2
module	used to carry ||| lua	count=1
module	0 en caso ||| lua	count=2
module	(véase lua_atpanic) que ||| lual	count=1
function	non-valid but acceptable ||| type	count=1
function	and pushes a traceback ||| traceback	count=1
module	the called ||| lua	count=1
module	es un número y ||| lual	count=2
module	a função chamada ceder ||| lua	count=2
module	(esto ||| lua	count=2
arg	na posição [arg] list deslocando ||| list [arg]	count=1
module	uma nova tabela ||| lual	count=1
function	функцию [function] с ||| [function]	count=1
module	imprime un ||| lual	count=1
module	is equivalent to ||| lua	count=1
arg	на буферизованный режим ||| mode size	count=1
module	de lua ||| lua	count=6
module	gültigen [module] auf dem ||| [module]	count=1
module	associated with name ||| lual	count=1
module	the metatable ||| lual	count=2
module	del ||| lual	count=6
module	crea un ||| lua	count=1
function	retorna o valor lua ||| getuservalue	count=1
module	que el ||| lua	count=1
module	= v onde t ||| lua	count=1
module	do tipo tname (veja ||| lual	count=1
module	de los valores ||| lua	count=1
function	metatable ||| getmetatable	count=2
arg	of coroutine co ||| co	count=1
module	the lua value associated ||| lua	count=1
module	é um ||| lua	count=4
function	o valor absoluto ||| abs	count=1
function_arg	[function_1] o continúa ||| [function_1] [arg_2]	count=1
arg	path fornecido ||| path sep	count=1
module	desempilha uma tabela da ||| lua	count=1
module	elementos acima ||| lua	count=1
module	information about ||| lua	count=1
module	whether the function ||| lual	count=2
arg	the given value or ||| value	count=1
module	es la longitud del ||| lua	count=1
module	de un valor situado ||| lua	count=1
module	valor no índice ||| lua	count=13
module	of a given ||| lua	count=1
module	am gegebenen [module] ein ||| [module]	count=1
function	descriptor_de_fichero flush aplicado al ||| flush	count=1
module	deslocando para baixo os ||| lua	count=1
module	tabla es ||| lua	count=1
module	a pointer to ||| lua	count=1
module	e k ||| lua	count=1
module	c function ||| lua	count=1
module	fornecido e k é ||| lua	count=1
arg	[arg_1] + width ||| [arg_2] [arg_1]	count=4
module	o nil si éste ||| debug	count=1
module	cast to ||| lual	count=1
module	la longitud del mismo ||| lua	count=1
module	índice ||| lual	count=3
function	estabelece a metatabela para ||| setmetatable	count=1
module	table with ||| lual	count=1
module	destruye todos los ||| lua	count=1
module	del objeto ||| lual	count=1
module	da pilha ao buffer ||| lual	count=1
module	call the core ||| lual	count=1
module	top + sz elementos ||| lual	count=1
module	o [module] fornecido é ||| [module]	count=1
module	расположенных по ||| lua	count=1
module	string and returns this ||| lual	count=2
arg	a2 performing the equivalent ||| a2	count=1
module	on the [module] returns ||| [module]	count=1
arg	contendo [arg] ||| format [arg]	count=1
module	and pops ||| lual	count=1
module	above ||| lua	count=1
module	table onto the stack ||| lual	count=1
module	to a c string ||| lual	count=1
arg	todas o las n ||| n	count=1
module	which must ||| lua	count=1
module	стек по заданному валидному ||| lua	count=1
arg	cadeia [arg_2] ||| [arg_2] [arg_1]	count=2
function	value of global name ||| register	count=1
function	version number a c ||| version	count=1
module	error en ||| lual	count=1
function	de hook actual ||| gethookcount	count=1
module	a c string in ||| lual	count=1
module	para f ||| lua	count=1
module	registro ||| lua	count=3
function	éste no tiene metatabla ||| getmetatable	count=1
function	returns ||| getmetatable	count=1
function	total size of the ||| stringtonumber	count=1
module	pila y ||| lual	count=1
module	por ||| lual	count=3
module	at the given index ||| lual	count=1
module	shifting up ||| lua	count=1
module	t[fname], onde t é ||| lual	count=1
module	stack the lua value ||| lua	count=1
module	elements raising ||| lual	count=1
module	cast to a lua_integer ||| lual	count=1
module	si el valor ||| lua	count=4
module	estándar realloc y estableciendo ||| lual	count=1
arg	[arg] равен "w") ||| prog [arg]	count=3
module	the [module] returns a ||| [module]	count=1
module	número e 0 ||| lua	count=1
module	al correspondiente metamétodo ||| lua	count=1
module	tipo usado pela api ||| lua	count=1
function	adiciona o ||| addchar	count=1
module	string of ||| lual	count=1
module	o valor no índice ||| lua	count=11
module	except that it ||| lua	count=1
module	función en forma de ||| lua	count=1
module	c ||| lual	count=3
module	crea un ||| lual	count=1
module	an integer ||| lual	count=1
module	index shifting up ||| lua	count=1
module	local de un registro ||| lua	count=2
module	name ||| lua	count=1
module	el índice ||| lua	count=5
arg	um den ||| x	count=1
function	the predefined size lual_buffersize ||| prepbuffer	count=1
module	función es un userdata ||| lual	count=1
module	fills *l with the ||| lual	count=1
function	upavalue ||| getupvalue	count=1
module	para baixo os ||| lua	count=1
function	formatted string ||| pushfstring	count=1
arg	estabelece a table ||| table	count=1
module	returns ||| lua	count=9
module	tostring calls [module] with v ||| [module]	count=1
module	like lual_checkudata except that ||| lual	count=1
module	size to top + ||| lual	count=1
module	el equivalente a ||| lua	count=2
module	el mismo para ||| lua	count=1
arg	metatable for [arg_2] ||| [arg_2] [arg_1]	count=2
module	para el valor situado ||| lua	count=1
module	position [module] the beginning ||| [module]	count=1
module	binary ||| lua	count=1
function	interface genérica para o ||| assert	count=1
module	chamada ceder (veja §4 ||| lua	count=2
module	string if ||| lual	count=1
arg	f [arg_2] ||| [arg_2] [arg_1]	count=1
module	('#'); para ||| lua	count=1
module	lua (esto es puede ||| lua	count=1
module	el liberador de ||| lua	count=1
module	list ||| lual	count=1
module	tabela no ||| lual	count=1
module	onde t é ||| lua	count=2
module	name tname in ||| lual	count=1
arg	da cadeia s ||| s pattern	count=2
arg	f ||| f	count=4
module	registra ||| lual	count=1
module	um número e ||| lua	count=1
module	elemento que está ||| lua	count=1
function	sets the metatable for ||| setmetatable	count=1
module	el elemento que está ||| lua	count=1
module	anteriormente para ||| lual	count=1
arg	la variable local ||| local	count=1
module	um tamanho ||| lual	count=1
module	el tipo usado por ||| lua	count=1
module	en un booleano de ||| lua	count=1
module	retorna ||| debug	count=1
module	de ||| bit32	count=1
function	no ||| getmetatable	count=1
module	of the stack as ||| lual	count=1
module	argumento narg de ||| lual	count=6
module	uma tabela ||| lual	count=1
function	[function] whence ||| [function]	count=3
arg	ou continua ||| co val1	count=1
module	if it does ||| debug	count=1
function	especificado en ||| open	count=1
module	de arquivo válido ||| io	count=1
module	maior ou igual ||| math	count=1
module	creates a new ||| lual	count=1
module	deslocando para baixo ||| lua	count=1
function	type for c functions ||| cfunction	count=1
module	exceto que ela recebe ||| lua	count=1
module	whether the ||| lual	count=3
module	string s reemplazando ||| lual	count=1
module	el valor tp ||| lua	count=1
module	dado ||| lual	count=1
module	função chamada ceder ||| lua	count=2
function	convierte en una función ||| tocfunction	count=1
module	ao buffer b (veja ||| lual	count=3
module	na pilha um ||| lua	count=1
module	retorna el contador de ||| lua	count=1
module	memoria si existe) ||| lua	count=1
module	com ||| lual	count=4
module	uma cadeia formatada e ||| lua	count=1
module	returns 1 ||| lua	count=1
module	v é o ||| lua	count=1
arg	liefert eine tabelle ||| what	count=1
function	date and time specified ||| time	count=1
arg	containing the values v1 ||| fmt v1	count=1
module	index2 siguiendo la ||| lua	count=1
module	uma interpretador ||| lua	count=1
module	o byte ||| lual	count=1
arg	с индексом [arg] функции func ||| func [arg]	count=2
module	if ||| lua	count=1
module	tamaño del ||| lua	count=1
module	elimina ||| lua	count=3
module	situado en el índice ||| lua	count=3
arg	[arg_1] перехвата ||| [arg_2] [arg_1]	count=1
module	idx ||| lua	count=1
module	lua_pushfstring except that it ||| lua	count=1
module	convierte el valor de ||| lua	count=2
module	value of ||| lua	count=1
arg	lua closure f1 refer ||| f1	count=1
arg	devuelve ||| s i	count=1
function	e retorna esse número ||| checknumber	count=1
module	the base [module] natural logarithms ||| [module]	count=1
module	pila el ||| lual	count=1
module	armazenar todas ||| lual	count=1
function_arg	setzt die [arg_2] ||| [function_1] thread hook [arg_2]	count=1
arg	if repl [arg_2] ||| [arg_1] [arg_2]	count=1
module	uma tabela da ||| lua	count=1
module	c static variable stored ||| lua	count=1
module	manipulador de arquivo válido ||| io	count=1
module	require verwendet wird um ||| package	count=1
module	del operador longitud ('#'); ||| lua	count=1
module	a pointer ||| lua	count=1
module	novo fecho ||| lua	count=1
module	de un registro ||| lua	count=2
arg	f1 ||| f1	count=3
function	состояние нити l ||| status	count=1
module	do tipo codificado ||| lua	count=1
module	la situación del ||| lua	count=3
module	this index ||| lua	count=1
function	genera un error de ||| error	count=1
function	um ||| next	count=1
module	co-rutina ||| lua	count=1
module	string if l ||| lual	count=1
module	el objeto ||| lual	count=1
function	гиперболический тангенс ||| tanh	count=1
module	índice fornecido é ||| lua	count=8
module	allocator ||| lua	count=1
module	(sin metamétodos) ||| lua	count=1
module	любой допустимый индекс, ||| lua	count=1
function	контролироет сборщик мусора ||| gc	count=1
function	registro de ativação ||| debug	count=1
module	the top element ||| lua	count=1
module	cadeia ||| lual	count=3
module	onde t é o ||| lual	count=1
module	siguiendo la ||| lua	count=1
module	lual_checkudata except that ||| lual	count=1
module	pilha o valor ||| lua	count=1
module	new table ||| lual	count=1
function	de ativação ||| debug	count=1
module	valor situado en el ||| lua	count=3
module	fluxo) ||| lua	count=1
arg	de x em ||| x	count=1
module	nil e ||| lua	count=1
module	gegebenen gültigen [module] zu einem ||| [module]	count=1
module	no índice fornecido para ||| lua	count=6
arg	el estatus [arg] ||| [arg]	count=1
arg	su argumento v ||| v	count=1
module	aumenta ||| lual	count=1
function	the test fails it ||| testudata	count=1
module	the given index is ||| lua	count=1
module	raising ||| lual	count=2
module	portanto o [module] naquela ||| [module]	count=1
module	crea un nuevo ||| lual	count=1
module	файла ||| io	count=2
arg	um tabela ||| table	count=1
module	as a binary ||| lua	count=1
module	element into the ||| lua	count=1
module	valor no topo ||| lua	count=1
function	valor absoluto ||| abs	count=2
module	y hora ||| os	count=1
function	have ||| getmetatable	count=1
module	objeto en la parte ||| lual	count=1
module	forma ||| lua	count=1
module	size optimized to store ||| lual	count=1
module	c el valor ||| lua	count=1
arg	[arg_1] a chunk ||| [arg_2] [arg_1]	count=2
module	de comprimento ||| lual	count=1
arg	cadeia s ||| s pattern	count=2
module	уровнем lvl [module] ||| [module]	count=2
module	в стек ||| lua	count=1
module	si el argumento ||| lual	count=6
arg	with no base ||| e base	count=1
module	uma cadeia e 0 ||| lua	count=1
module	la tabla de ||| lua	count=1
module	k ||| lua	count=2
arg	por [arg] quociente ||| x [arg]	count=1
module	aceptable index1 es ||| lua	count=1
module	[module] im angegebenen ||| [module]	count=1
module	longitud ('#'); ||| lua	count=1
arg	вызывает функцию [arg] ||| [arg]	count=1
module	valores es ||| lua	count=1
module	local de ||| lua	count=2
module	string es ||| lua	count=1
module	entradas no array ||| lual	count=1
function	o seno hiperbólico de ||| sinh	count=1
module	aparición del ||| lual	count=1
module	no tiene ||| debug	count=1
module	éste no ||| debug	count=1
module	one the ||| lua	count=1
module	valor en la parte ||| lua	count=2
module	acceso directo (sin ||| lua	count=1
module	valor de una ||| lua	count=1
function	t[n], donde t es ||| rawgeti	count=1
module	moves ||| lua	count=1
module	es puede invocar metamétodos) ||| lua	count=1
arg	v ||| v message	count=1
module	está en la parte ||| lua	count=1
module	returns the metatable of ||| debug	count=1
module	der globalen ||| package	count=1
module	заданному допустимому индексу ||| lua	count=2
module	estado dado de lua ||| lua	count=1
function_arg	[function_1] [arg_2] a hora ||| os [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] index local of the ||| [function_1] [arg_2]	count=4
module	endereço ||| lua	count=1
module	it does ||| debug	count=1
function	checks whether the ||| checknumber	count=1
function	controla el ||| gc	count=1
arg	de y/x ||| y x	count=1
module	string if l is ||| lual	count=1
module	el [module] válido dado ||| [module]	count=1
arg	if repl ||| s pattern repl	count=1
module	loads a ||| lua	count=1
module	um erro se ||| lual	count=1
module	if the ||| lua	count=1
function	chama uma função ||| call	count=1
module	la función c estándar ||| lual	count=1
module	the called function ||| lua	count=1
function	аналогична ||| read	count=1
arg	índice up de la ||| up	count=1
arg	[arg_1] v1 v2 ||| [arg_2] [arg_1]	count=1
module	de un intérprete de ||| lua	count=1
module	stored in the ||| lua	count=1
module	cadeia ||| lua	count=4
function_arg	гиперболический тангенс x ||| tanh x	count=1
arg	is a ||| n	count=1
module	de um número variável ||| lua	count=1
module	not have a metatable ||| debug	count=1
function	upavalue de una instancia ||| getupvalue	count=1
module	der pfad welcher ||| package	count=1
module	uma co-rotina em um ||| lua	count=1
module	similar a lua_settable mas ||| lua	count=1
module	fecha y hora ||| os	count=1
module	outro valor numérico ||| math	count=1
module	el valor ||| math	count=1
module	(esto es puede invocar ||| lua	count=1
module	and returns this string ||| lual	count=2
function	nach [function] ||| [function]	count=3
module	na [module] e retorna ||| [module]	count=1
module	com o tamanho ||| lua	count=1
arg	hook ||| thread hook	count=1
module	rodando em ||| lua	count=1
module	se a ||| lual	count=1
module	de la pila sin ||| lua	count=1
arg	by offset ||| offset	count=1
module	this macro ||| lua	count=1
arg	negativos i ||| i j	count=1
function	a new lua state ||| newstate	count=1
function	cual debe ser uno ||| typename	count=1
module	portanto o [module] naquela posição) ||| [module]	count=1
module	element ||| lua	count=1
module	macro ||| lua	count=1
module	todas as funções ||| lual	count=1
module	fornecido para um ||| lua	count=2
module	indiretamente (através do fluxo) ||| lua	count=1
module	the [module] with the ||| [module]	count=1
module	da co-rotina ||| coroutine	count=1
module	buffer ||| lual	count=5
module	valor lua associado a ||| debug	count=1
module	carrega um ||| lua	count=1
module	вызова ||| lual	count=1
module	de memória com o ||| lua	count=1
function_arg	raiz quadrada [arg_2] ||| [function_1] [arg_2]	count=1
module	posición "vacía" en ||| lua	count=1
arg	nombre_viejo a ||| nombre_viejo	count=1
module	el valor situado ||| lua	count=3
module	and returns this number ||| lual	count=1
module	валидному ||| lua	count=1
module	('#'); para un ||| lua	count=1
function	retorna o seno hiperbólico ||| sinh	count=1
module	not null fills *l ||| lual	count=1
module	un string y ||| lual	count=1
module	no ||| lua	count=22
module	lua_newstate con una ||| lual	count=1
module	stored in ||| lua	count=1
arg	функцией перехвата [arg_2] ||| [arg_1] [arg_2]	count=1
module	string p por el ||| lual	count=1
arg	параметром [arg] ("seed"): ||| [arg]	count=1
module	función c ||| lual	count=1
module	realloc y estableciendo una ||| lual	count=1
function	натуральный логарифм ||| log	count=1
arg	tangente de y/x ||| y x	count=1
module	lançando um erro ||| lual	count=1
module	new table with ||| lual	count=1
module	coloca en ||| lual	count=1
module	cadeia formatada e retorna ||| lua	count=1
module	idx and the top ||| lua	count=1
function_arg	[function_1] t and ||| [function_1] [arg_2]	count=4
module	of the stack ||| lua	count=1
function	userdata completo ou leve ||| isuserdata	count=1
function	número de segundos da ||| difftime	count=1
module	a new [module] with ||| [module]	count=1
module	valor no ||| lual	count=2
module	from the [module] sets ||| [module]	count=2
module	posición ||| lua	count=10
function	returns the logarithm ||| log	count=1
function	en la pila) ||| type	count=1
arg	x durch [arg] welche ||| x [arg]	count=1
arg	dem index [arg] der funktion ||| func [arg]	count=1
function	de números em lua ||| number	count=1
function	adds ||| addvalue	count=1
module	coloca ||| lua	count=9
arg	tabla conteniendo la ||| tiempo	count=1
arg	t ||| t	count=2
module	value tp which must ||| lua	count=1
module	nuevo proceso lo ||| lua	count=1
module	(llamando al correspondiente metamétodo ||| lua	count=1
arg	invoca la [arg_1] [arg_2] en modo protegido ||| [arg_1] [arg_2]	count=1
module	the name of the ||| lua	count=1
module	elemento de la misma ||| lua	count=1
module	lua ||| lua	count=18
module	continuação (veja §4 ||| lua	count=1
module	é o valor ||| lua	count=1
module	допустимому ||| lua	count=3
arg	valor value à variável ||| value	count=1
module	стек ||| lua	count=1
module	superior de la ||| lua	count=6
module	to carry different ||| lua	count=1
module	relacionadas a ||| lual	count=2
module	obtém informação sobre uma ||| lua	count=1
arg	se repl é uma ||| pattern repl n	count=1
arg	alle (bzw ||| repl	count=1
module	de la pila y ||| lua	count=2
module	e a estabelece como ||| lua	count=1
module	a empilha na pilha ||| lua	count=1
module	interpretador ||| lua	count=1
module	del índice t para ||| lual	count=1
arg	esta função ||| index	count=1
module	as armazena ||| lual	count=1
module	um erro lua ||| lua	count=1
function	éste como un int ||| optint	count=1
module	variable stored in ||| lua	count=1
module	function to yield ||| lua	count=1
module	be used only ||| lua	count=1
module	given index is ||| lua	count=1
module	erben ||| package	count=1
function	informationen ||| getinfo	count=1
module	table with a ||| lual	count=1
module	returns this integer ||| lual	count=1
function	or ||| getmetatable	count=1
module	lua_newstate con ||| lual	count=1
module	correspondiente metamétodo de liberación ||| lua	count=1
module	obtiene información acerca ||| lua	count=2
module	[module] metatabelle für ||| [module]	count=1
arg	devuelve ||| s i j	count=1
module	puntero a ||| lua	count=2
module	index shifting ||| lua	count=1
function	valor lua ||| getuservalue	count=1
arg	estabelece [arg] como ||| [arg]	count=1
module	con una función ||| lual	count=1
module	to lua_pushstring but should ||| lua	count=1
module	é uma cadeia ||| lual	count=1
module	this ||| lual	count=5
module	la pila ||| lua	count=13
function	etc ||| pack	count=1
function	una referencia ||| ref	count=1
function	el cuadrante del resultado ||| atan2	count=1
module	na pilha um novo ||| lua	count=1
module	si existe) y ||| lua	count=1
module	é uma cadeia ||| lua	count=1
module	de argumentos ||| lua	count=1
module	as a ||| lua	count=1
module	aceptable es ||| lua	count=3
function	erben ||| seeall	count=1
module	1 if the value ||| lua	count=1
module	válido y v es ||| lua	count=2
module	v1 es igual ||| lua	count=1
function	para representar um conjunto ||| upper	count=1
function	cesión ||| yield	count=1
module	function of ||| lua	count=1
module	la tabla ||| lua	count=1
function	true when the running ||| running	count=1
module	entries in the ||| lual	count=1
module	or nil ||| debug	count=1
module	e 0 caso contrário ||| lua	count=6
module	function f ||| lua	count=1
arg	+ width ||| width	count=1
module	a table ||| lual	count=1
module	in the lua ||| lua	count=1
arg	invoca la [arg_1] [arg_2] en modo protegido ||| lua pcall [arg_1] [arg_2]	count=1
module	variável de argumentos ||| lua	count=1
module	equivalente a ||| lua	count=7
arg	mode "w" ist) ||| mode	count=1
module	de un intérprete ||| lua	count=1
function	de entorno ||| getfenv	count=1
module	cadeia e ||| lual	count=1
module	coloca na pilha uma ||| lua	count=1
function_arg	starts [arg_2] ||| [function_1] [arg_2]	count=4
module	допустимый ||| lua	count=1
module	(esto es un índice ||| lua	count=1
module	an integer and returns ||| lual	count=1
function	a raiz quadrada de ||| sqrt	count=1
function	é um fluxo ||| isthread	count=1
module	integer and returns this ||| lual	count=1
module	tabela no índice fornecido ||| lua	count=2
module	pedaços diferentes de informação ||| lua	count=1
function	initializes a buffer ||| buffinit	count=1
arg	da cadeia [arg_2] ||| [arg_2] [arg_1]	count=2
function	number returns this number ||| optnumber	count=1
arg	u ||| u	count=1
module	function f as ||| lua	count=1
module	es un número ||| lual	count=4
function	a [function] and returns ||| [function]	count=1
module	superior de la ||| lual	count=2
module	una función de ||| lual	count=2
module	la pila y la ||| lua	count=2
function_arg	the table t ||| ipairs t	count=1
module	en la función c ||| lual	count=1
arg	mode ||| mode	count=5
module	call ||| lual	count=2
module	de upvalues ||| lual	count=1
arg	locale ||| locale	count=2
module	proceso de ||| lua	count=1
module	la pila en ||| lua	count=1
arg	número [arg] número ||| [arg]	count=1
module	a coloca ||| lua	count=1
arg	s [arg_2] ||| [arg_1] [arg_2]	count=1
module	destruye todos los objetos ||| lua	count=1
module	a empilha ||| lua	count=1
module	o nil ||| debug	count=1
arg	ou continua a ||| val1	count=1
arg	at [arg] ||| [arg] local	count=1
module	acerca de una ||| lua	count=1
module	lual_prepbuffsize with the ||| lual	count=1
module	1 si el ||| lua	count=3
arg	t and ||| t	count=1
module	as the ||| lua	count=1
arg	the metatable for the ||| metatable	count=1
module	[module] o núcleo ||| [module]	count=1
function	de arquivo ||| type	count=1
arg	pos de ||| pos	count=1
module	fornecido coloca ||| lua	count=1
module	dada y lo ||| lua	count=1
module	of ||| lual	count=8
module	este ||| lua	count=2
module	reemplazando el valor en ||| lua	count=1
module	es menor que ||| lua	count=1
module	call are all ||| lual	count=1
module	globalen umgebung erben kann ||| package	count=1
module	gegebenen [module] auf ||| [module]	count=2
module	to ||| lua	count=10
module	index is ||| lua	count=1
function_arg	seno hiperbólico [arg_2] ||| [arg_2] [function_1]	count=2
function	fato) ||| newlibtable	count=1
function	o valor absoluto de ||| abs	count=1
module	válido ||| io	count=1
module	the [module] ||| [module]	count=5
arg	calls [arg] ||| [arg]	count=2
function	if it ||| getmetatable	count=1
module	object at ||| lual	count=2
arg	de índices negativos i ||| i	count=1
arg	[arg_1] y que ||| fmod [arg_1] [arg_2]	count=3
module	в стек по ||| lua	count=1
function	the [function] ||| [function]	count=4
function	pilha a metatabela associada ||| getmetatable	count=1
module	be one ||| lua	count=1
module	arrays de funções a ||| lual	count=1
arg	nombre_viejo a [arg_2] ||| [arg_2] [arg_1]	count=1
module	index2 siguiendo ||| lua	count=1
module	новую строчку из файла ||| io	count=1
module	obtém informação sobre ||| lua	count=1
module	lançando ||| lual	count=1
module	la salida estándar ||| lual	count=1
module	userdata ||| lual	count=2
module	todas ||| lual	count=2
module	and pushes that table ||| lual	count=1
function	caso de error fatal ||| newstate	count=1
module	é uma tabela e ||| lua	count=1
module	un mensaje ||| lual	count=1
module	function works like lual_checkudata ||| lual	count=1
module	interpretador lua ||| lua	count=1
module	índice idx é uma ||| lual	count=1
module	memória com ||| lua	count=1
module	un valor en el ||| lua	count=1
module	é a ||| lua	count=2
module	panic function and returns ||| lua	count=1
module	if the function ||| lual	count=1
module	eine zeichenkette und liefert ||| string	count=1
function	not have a metatable ||| getmetatable	count=1
function	segundos da ||| difftime	count=1
module	um dado estado para ||| lua	count=1
function_arg	arco tangente [arg_2] ||| [function_1] [arg_2]	count=3
module	at ||| lua	count=3
module	del string p ||| lual	count=1
module	equivalent to lual_prepbuffsize ||| lual	count=1
module	de lua invocando ||| lual	count=1
module	la posición del ||| lual	count=2
module	número o ||| lua	count=1
module	the object at ||| lual	count=2
function	[function] count (as ||| [function]	count=3
arg	são necessariamente ||| i j	count=1
module	tamanho ||| lua	count=1
module	when s is ||| lua	count=1
module	variável ||| lua	count=1
module	store all ||| lual	count=1
module	f as the new ||| lua	count=1
function	metatabela para a ||| setmetatable	count=1
module	um ||| math	count=1
module	new panic function ||| lua	count=1
arg	s ||| s i j	count=1
module	booleano de ||| lua	count=1
module	den [module] des ||| [module]	count=1
module	o valor lua no ||| lua	count=3
arg	[arg_1] s ||| [arg_2] [arg_1]	count=14
module	(por ||| lua	count=1
module	as the metatable ||| lual	count=1
module	sequences [module] numbers ||| [module]	count=1
module	the stack as the ||| lual	count=1
function	not have a ||| getmetatable	count=1
module	address of the ||| lua	count=1
module	in radiant in ||| math	count=1
function	função é interface genérica ||| assert	count=1
module	dem [module] ab und ||| [module]	count=1
arg	esta função retorna table ||| table index value	count=1
arg	associado a u ||| u	count=1
arg	de x ||| x	count=20
module	execução rodando em um ||| lua	count=1
module	upvalue de ||| lua	count=1
arg	x en ||| x	count=2
module	running ||| lual	count=1
module	a lua_pushfstring ||| lua	count=1
function_arg	local variable [arg_2] ||| [function_1] [arg_2] f local	count=1
arg	bits field a field ||| field	count=1
module	por [module] ||| [module]	count=2
function	conjunto de caracteres ||| upper	count=1
module	superior de la pila ||| lua	count=6
function	e retorna essa cadeia ||| checkstring	count=1
module	allocator function of ||| lua	count=1
module	lua по заданному допустимому ||| lua	count=1
function	new c closure onto ||| pushcclosure	count=1
module	ensures that the ||| lual	count=1
module	tabela ||| lual	count=4
module	loads ||| lual	count=1
module	começa ||| lua	count=1
module	require verwendet ||| package	count=1
function	lua chunk ||| loadstring	count=1
module	arquivo válido ||| io	count=1
module	el resultado del ||| lua	count=1
module	carry different pieces ||| lua	count=1
module	función es un número ||| lual	count=4
module	o tamanho da ||| lual	count=1
function	ex ||| exp	count=1
function	uma va_list ao invés ||| pushvfstring	count=1
module	pila en este índice ||| lua	count=1
arg	y/x in radiant aber ||| y	count=1
module	call are all using ||| lual	count=1
module	opcionais ||| lual	count=1
module	tname (veja lual_newmetatable) ||| lual	count=1
module	whether the core running ||| lual	count=1
function	a parte fracionária ||| modf	count=1
module	checks whether the function ||| lual	count=2
arg	[arg] de ||| [arg]	count=2
module	[module] bis zur ||| [module]	count=3
module	tname ||| lual	count=2
module	lua_settable ||| lua	count=1
module	der globalen umgebung ||| package	count=1
module	new panic function and ||| lua	count=1
arg	[arg] as a ||| [arg]	count=3
module	si éste ||| debug	count=1
module	возвращает длину данных, ||| lua	count=1
module	y retorna un ||| lua	count=1
module	válido esto es si ||| lua	count=1
module	of a given state ||| lua	count=1
module	situación del índice ||| lua	count=3
module	arg da função é ||| lual	count=6
module	be one the ||| lua	count=1
function	como tipo lua_integer ||| checkinteger	count=1
module	the allocator function of ||| lua	count=1
module	c el valor situado ||| lua	count=1
module	is a string and ||| lual	count=2
module	por funções relacionadas a ||| lual	count=2
arg	zeichenkette [arg] angegebenen ||| filename [arg]	count=1
function	parte fracionária de ||| modf	count=1
module	estado de un ||| lua	count=1
arg	índices negativos i ||| i j	count=1
module	verifica si el ||| lual	count=4
module	copiada anteriormente para ||| lual	count=1
module	pilha para ||| lual	count=1
function	ponteiro para essa cadeia ||| pushfstring	count=1
module	index idx and ||| lua	count=1
module	(através do ||| lua	count=1
module	current [module] 0 ||| [module]	count=1
module	la función es un ||| lual	count=6
arg	local ||| local	count=2
function	um registro de ativação ||| debug	count=1
module	la tabla en la ||| lual	count=1
arg	[arg_1] [arg_2] quociente ||| fmod [arg_1] [arg_2]	count=3
function	a nova metatabela para ||| setmetatable	count=1
module	de la ||| lua	count=12
module	t[k] = ||| lua	count=1
module	returns the address of ||| lua	count=1
module	the value at ||| lua	count=2
module	es menor que el ||| lua	count=1
module	to store all ||| lual	count=1
module	função é equivalente a ||| lua	count=1
module	on the [module] returns a ||| [module]	count=1
arg	функцией перехвата [arg_2] ||| [arg_2] [arg_1]	count=1
module	into ||| lua	count=1
module	if the value ||| lua	count=1
module	un booleano ||| lua	count=1
module	é o valor no ||| lua	count=1
module	otro valor numérico cualquiera ||| math	count=1
module	del índice t ||| lual	count=1
arg	[arg_1] mit ||| [arg_2] [arg_1]	count=6
module	da função é ||| lual	count=6
arg	[arg_1] [arg_2] deslocando os elementos list[pos], ||| [arg_2] [arg_1]	count=4
module	mensaje en la ||| lual	count=1
function	index to open space ||| insert	count=1
function	false ; en otro ||| assert	count=1
module	uma função como ||| lua	count=1
module	when s is a ||| lua	count=1
module	y retorna el ||| lual	count=1
module	codificado pelo valor ||| lua	count=1
function	the fractional part ||| modf	count=1
module	hora formatada ||| os	count=1
module	nome do ||| lua	count=1
arg	функцию функцией перехвата ||| thread	count=1
module	para f com ||| lua	count=1
function	to lua_settable but does ||| rawset	count=1
function	rotacionado ||| rrotate	count=1
function	memoria reservado para el ||| objlen	count=1
arg	s ||| s pattern	count=1
module	função ou um registro ||| lua	count=1
module	of the ||| debug	count=1
module	returns this ||| lual	count=4
module	[module] with v ||| [module]	count=2
arg	la función func ||| func	count=1
module	стек по заданному ||| lua	count=1
module	1 se ||| lua	count=8
module	liefert eine kopie ||| string	count=1
module	stack ||| lual	count=5
module	comprimento n ||| lual	count=1
function_arg	[function_1] x ||| [function_1] [arg_2]	count=25
module	assignment ||| lua	count=1
module	welche eine zeichenkette ||| string	count=1
function	o ||| getmetatable	count=1
function	começa ||| resume	count=1
module	más grande o ||| math	count=1
function_arg	натуральный логарифм x ||| log x	count=1
module	lua value associated with ||| lua	count=1
module	number and returns this ||| lual	count=1
function_arg	variable [arg_2] ||| [function_1] [arg_2] f local	count=1
module	array l ||| lual	count=2
module	like lual_checkudata except ||| lual	count=1
function	raiz quadrada de ||| sqrt	count=1
module	es si ||| lua	count=1
arg	message ||| message	count=1
function_arg	гиперболический тангенс [arg_2] ||| [function_1] [arg_2]	count=1
module	t[k] = v onde ||| lua	count=1
module	um upvalue de ||| lua	count=1
module	posición dada y ||| lua	count=1
function	the interpreter runtime ||| getstack	count=1
module	função ou invocação de ||| lua	count=1
module	coroutine ||| coroutine	count=4
function	pila el campo e ||| getmetafield	count=1
function	with the string's length ||| checklstring	count=1
module	valor no índice idx ||| lual	count=1
arg	перехвата [arg_2] ||| [arg_2] [arg_1]	count=1
module	para el ||| lual	count=1
module	index idx is a ||| lual	count=1
module	in the ||| lual	count=2
module	un mensaje en ||| lual	count=1
module	the given index to ||| lual	count=1
module	the call the ||| lual	count=1
module	índice a una posición ||| lua	count=1
arg	func_hook como ||| func_hook	count=1
module	o tamanho fornecido coloca ||| lua	count=1
module	valor no topo da ||| lual	count=1
module	la función hook ||| lua	count=1
arg	dinamicamente liga o ||| funcname	count=1
function	de activación dado ||| getlocal	count=1
function	un elemento fuera ||| isnone	count=1
function	adiciona ||| addvalue	count=1
module	grande ||| math	count=1
module	version of ||| lual	count=1
function	empilha um ||| pushcclosure	count=1
module	debe ser un string ||| string	count=1
module	del string ||| lual	count=2
module	metatable associated ||| lual	count=1
function_arg	setzt die [arg_2] ||| [function_1] [arg_2]	count=1
arg	valor de x ||| x	count=1
function	local variable ||| getlocal	count=1
module	com o ||| lua	count=2
module	(llamando ||| lua	count=1
module	en ||| lua	count=35
function	produce la cesión de ||| yield	count=1
arg	com número [arg] da ||| f [arg]	count=1
module	em um dado fluxo ||| lua	count=1
arg	if repl ||| pattern repl	count=1
module	globalen umgebung ||| package	count=1
module	equivalente ||| lua	count=8
module	a lua_integer ||| lual	count=1
module	stack elements ||| lua	count=1
module	índice idx é ||| lual	count=1
module	gültigen [module] zu ||| [module]	count=1
module	grows the stack ||| lual	count=1
module	metamétodo de liberación de ||| lua	count=1
function	geralmente error ||| error	count=1
arg	[arg] в защищенном ||| [arg]	count=1
function	error fatal ||| newstate	count=1
function	false ||| assert	count=1
module	does ||| debug	count=1
function	modul ||| module	count=1
module	cria um novo ||| lua	count=1
module	execução e indiretamente (através ||| lua	count=1
module	valor t[k], onde t ||| lua	count=1
module	конвертирует значение по ||| lua	count=1
module	qualquer outro valor numérico ||| math	count=1
module	nome ||| lua	count=1
function	this function allocates ||| newuserdata	count=1
module	pilha uma ||| lua	count=1
module	as the new value ||| lua	count=1
module	depuración ||| lua	count=1
module	um acesso primitivo (i ||| lua	count=1
module	of [module] ||| [module]	count=1
arg	y ||| y	count=3
arg	the given value ||| value	count=1
arg	name ||| name	count=1
function	stack a [function] and returns ||| [function]	count=1
function	of ||| getmetatable	count=1
module	función de "pánico" (véase ||| lual	count=1
function	ohne dabei metamethoden aufzurufen ||| rawset	count=1
function_arg	metatabela [arg_2] ||| [function_1] [arg_2]	count=1
function	reference in ||| ref	count=1
module	pila sin desplazar ||| lua	count=1
arg	devuelve ||| s	count=2
arg	of x ||| x	count=1
module	para guardar ||| lua	count=1
module	si el valor situado ||| lua	count=1
module	globalen umgebung erben ||| package	count=1
arg	match of ||| s	count=1
arg	o valor value ||| value	count=2
arg	the given [arg] which can ||| value [arg]	count=1
module	all entries in the ||| lual	count=1
module	en el ||| lua	count=6
function	rotates the stack ||| rotate	count=1
function	dabei metamethoden ||| rawset	count=1
module	function to yield (see ||| lua	count=1
module	or nil if ||| debug	count=1
function	empilha um novo ||| pushcclosure	count=1
module	all entries ||| lual	count=1
module	valor t[k], onde ||| lua	count=1
module	estándar realloc ||| lual	count=1
arg	[arg] of the ||| [arg] local	count=1
function	the local variable ||| getlocal	count=1
module	y v ||| lua	count=2
arg	y that rounds the ||| y	count=1
module	sets a new ||| lua	count=1
module	troca valores entre diferentes ||| lua	count=1
arg	do fecho lua f1 ||| f1 n1	count=2
module	"vacía" ||| lua	count=1
module	bloque de ||| lua	count=1
module	gancho ||| lua	count=1
function	campo e ||| getmetafield	count=1
module	o estado ||| lua	count=1
module	gültigen [module] auf ||| [module]	count=1
module	libera toda ||| lua	count=1
arg	de um tabela ||| table	count=1
module	using the same ||| lual	count=1
module	no array l ||| lual	count=2
module	um tamanho otimizado ||| lual	count=1
module	function of a ||| lua	count=1
module	aceptable es no válido ||| lua	count=1
arg	[arg_1] nombre_nuevo ||| [arg_2] [arg_1]	count=2
module	para top + sz ||| lual	count=1
arg	pattern in der ||| pattern	count=1
function	um upvalue de ||| setupvalue	count=1
function	y ejecuta ||| dofile	count=1
module	a empilha na ||| lua	count=1
module	auf dem [module] ab und ||| [module]	count=1
module	using ||| lual	count=1
module	coloca-o na [module] e retorna ||| [module]	count=1
module	fichero ||| io	count=2
function	arco tangente de ||| atan	count=1
module	is equivalent ||| lua	count=1
module	indiretamente (através ||| lua	count=1
arg	de su argumento v ||| v	count=1
module	a estabelece como ||| lua	count=1
module	equivalent to ||| lua	count=3
module	длину данных, расположенных по ||| lua	count=1
module	by os ||| os	count=1
module	índice aceptable ||| lua	count=12
module	es si se ||| lua	count=1
module	um erro ||| lua	count=1
module	the function argument arg ||| lual	count=5
module	retorna la dirección de ||| lua	count=1
module	value at the given ||| lua	count=2
module	equivalent to ||| lual	count=1
module	k é ||| lua	count=2
module	si el ||| lual	count=6
function	a literal string ||| pushliteral	count=1
module	index2 ||| lua	count=1
function	tabela ||| next	count=1
module	fornecido coloca na ||| lua	count=1
function	stack a [function] and ||| [function]	count=1
module	c function f ||| lua	count=1
module	ningún elemento de la ||| lua	count=1
arg	função retorna message ||| message level	count=1
function	valor lua associado ||| getuservalue	count=1
arg	the [arg] ||| [arg]	count=1
module	puede ||| lua	count=1
module	yield (see ||| lua	count=1
module	topo da pilha ao ||| lual	count=1
module	function of a given ||| lua	count=1
module	la posición del índice ||| lual	count=2
module	at the given ||| lual	count=1
module	same ||| lua	count=1
module	função é um ||| lual	count=5
module	para una tabla ||| lua	count=1
function	the full userdata at ||| getuservalue	count=1
module	argumentos ||| lua	count=1
module	retorna un puntero a ||| lua	count=2
function	remove de ||| remove	count=1
function_arg	arco seno [arg_2] ||| [function_1] [arg_2]	count=3
module	a number and ||| lual	count=1
function_arg	raiz cuadrada [arg_2] ||| [arg_2] [function_1]	count=1
module	produz os ||| lual	count=2
module	uma tabela e ||| lua	count=1
function	lua_settable but does a ||| rawset	count=1
function	gera ||| error	count=1
module	fornecido para uma ||| lua	count=2
function	it ||| getmetatable	count=1
module	estrutura usada para ||| lua	count=1
module	a given state ||| lua	count=2
function	the current hook function ||| gethook	count=1
module	and returns the ||| lua	count=1
module	que ||| math	count=1
module	valor no índice fornecido ||| lua	count=12
module	argumento arg da ||| lual	count=6
arg	la [arg] ||| [arg]	count=1
module	el argumento ||| lual	count=6
module	la tabla ||| lual	count=1
module	der koroutine ||| coroutine	count=1
module	version ||| lual	count=1
module	the table ||| lual	count=1
module	obtém ||| lua	count=1
arg	estatus [arg] como un ||| [arg]	count=1
function	code making ||| checkversion	count=1
module	mueve ||| lua	count=1
module	um upvalue ||| lua	count=1
module	éste no tiene ||| debug	count=1
module	to top ||| lual	count=1
function	type for continuation-function contexts ||| kcontext	count=1
function	de entorno de un ||| getfenv	count=1
module	the valid index ||| lua	count=1
function_arg	segundos da [arg_2] ||| os [function_1] [arg_2]	count=3
module	o ||| lua	count=36
module	el valor de ||| lua	count=3
module	associated with ||| lua	count=1
module	o nil si ||| debug	count=1
module	elemento de ||| lua	count=1
module	o qual deve ser ||| lua	count=1
module	para preencher o buraco ||| lua	count=1
arg	функцию функцией перехвата hook ||| thread hook	count=1
module	el valor ||| lua	count=17
module	es si se refiere ||| lua	count=1
function	o false ; en ||| assert	count=1
arg	argumento número [arg] número ||| [arg]	count=1
module	tamanho fornecido coloca ||| lua	count=1
module	данных, расположенных ||| lua	count=1
function_arg	[function_1] with ||| [function_1] [arg_2] f local	count=4
module	para uma função ||| lua	count=1
function	a [function] ||| [function]	count=2
module	api de ||| lua	count=2
module	yield ||| lua	count=1
arg	prog in einem separaten ||| prog	count=1
module	used only ||| lua	count=1
module	допустимый индекс, ||| lua	count=1
module	arguments ||| lua	count=1
module	na pilha uma cadeia ||| lua	count=1
module	converte o ||| lua	count=4
function	returns the metatable of ||| getmetatable	count=1
module	hora formatada de ||| os	count=1
function	endereço do bloco ||| newuserdata	count=1
module	de t[k] = ||| lua	count=1
module	é um número ||| lual	count=4
function	un upavalue de ||| getupvalue	count=1
function	if it does not ||| getmetatable	count=1
module	establece una nueva función ||| lua	count=1
arg	перехвата [arg_2] ||| [arg_1] [arg_2]	count=1
module	pushes that table ||| lual	count=1
module	raising an error ||| lual	count=2
module	with a size ||| lual	count=1
module	by lua_type ||| lua	count=1
function	convierte en una ||| tocfunction	count=1
module	sz elements raising ||| lual	count=1
function	sinus ||| sin	count=1
module	of ||| lua	count=9
arg	der zeichenkette [arg] angegebenen ||| filename [arg]	count=1
module	state and the ||| lual	count=1
arg	el [arg] ||| [arg]	count=3
function	current hook ||| gethook	count=1
module	para baixo os elementos ||| lua	count=1
module	upvalues opcionais ||| lual	count=1
module	função é um número ||| lual	count=4
module	lua_type ||| lua	count=2
module	any lua ||| lual	count=1
function	lua associado ||| getuservalue	count=1
module	lua_pushstring but should ||| lua	count=1
module	copiada anteriormente para a ||| lual	count=1
module	all ||| lual	count=2
arg	prog in einem ||| prog	count=1
module	informação sobre ||| lua	count=2
module	that table onto the ||| lual	count=1
function	va_list instead of a ||| pushvfstring	count=1
module	número y retorna ||| lual	count=1
arg	field + [arg_2] ||| [arg_1] [arg_2]	count=1
function	la vieja ||| atpanic	count=1
module	es puede ||| lua	count=1
module	in the registry (see ||| lual	count=1
module	esto es si se ||| lua	count=1
module	no ||| lual	count=5
module	string y ||| lua	count=1
module	corresponding value ||| lua	count=1
arg	de la función ||| proceso	count=3
module	desplazar ningún elemento de ||| lua	count=1
module	tabela no índice ||| lua	count=2
arg	todos os elementos são ||| i j	count=1
module	the current [module] 0 ||| [module]	count=1
module	para el ||| lua	count=1
function_arg	valor absoluto [arg_2] ||| [arg_2] [function_1]	count=2
module	любой допустимый индекс, или ||| lua	count=1
module	e retorna ||| lual	count=5
module	fornecido é um número ||| lua	count=1
module	tipo de ||| lua	count=1
module	o [module] naquela ||| [module]	count=1
module	receives a ||| lua	count=1
module	a buffer b ||| lual	count=1
module	(através do fluxo) para ||| lua	count=1
function	retoma uma co-rotina ||| resume	count=1
module	pointer ||| lua	count=1
module	[module] 0 ||| [module]	count=1
module	realloc ||| lual	count=1
module	da função ||| lual	count=6
module	lua_tnone si ||| lua	count=1
module	tipo codificado pelo ||| lua	count=1
module	with name tname in ||| lual	count=1
module	la pila en este ||| lua	count=1
module	lo retorna ||| lual	count=1
module	null ||| lual	count=2
module	igual a qualquer outro ||| math	count=1
module	new panic ||| lua	count=1
module	el estado dado ||| lua	count=1
module	los valores retornados lua_type ||| lua	count=1
module	[module] bis ||| [module]	count=3
function	del [function] en la ||| [function]	count=1
function	metatabela associada ||| setmetatable	count=1
module	value at index idx ||| lual	count=1
module	a função de gancho ||| lua	count=1
module	del operador longitud ||| lua	count=1
arg	tabelle zu ||| table	count=1
module	función es ||| lual	count=6
module	значение lua по ||| lua	count=1
module	dirección ||| lua	count=2
function	la [function] ||| [function]	count=4
module	not ||| lual	count=1
module	elements above this ||| lua	count=1
module	bloco ||| lua	count=1
module	por el valor tp ||| lua	count=1
arg	with no base ||| base	count=1
module	valor lua ||| lua	count=3
module	o nome ||| lua	count=1
module	pops the object ||| lual	count=1
arg	[arg] of ||| [arg] local	count=1
module	um userdata ||| lua	count=2
function	de su bloque ||| touserdata	count=1
module	otro ||| math	count=1
function_arg	[function_1] [arg_2] of ||| [function_1] [arg_2]	count=2
module	в стек по заданному ||| lua	count=1
function	umgebung ||| seeall	count=1
module	todos los ||| lua	count=1
module	size optimized ||| lual	count=1
module	и ставит вершину стека ||| lua	count=1
module	to lua_pushfstring except that ||| lua	count=1
arg	match of [arg_2] ||| [arg_2] [arg_1]	count=2
module	de execução e ||| lua	count=2
arg	são necessariamente portáveis entre ||| i j	count=1
module	o argumento arg ||| lual	count=6
module	é um número ou ||| lua	count=1
module	stack and ||| lual	count=1
module	name ||| lual	count=1
function_arg	começa ou continua ||| resume co val1	count=1
function	al ||| getlocal	count=1
arg	lee [arg] (si ||| [arg]	count=1
module	con ||| lual	count=1
arg	func ||| func	count=1
module	a variable number ||| lua	count=1
module	de funções ||| lual	count=1
function	garante que o valor ||| getsubtable	count=1
function	reference in the table ||| ref	count=1
module	de pánico y ||| lua	count=1
module	como o topo ||| lua	count=1
function	string's length ||| checklstring	count=1
function	metatabla asociada con ||| getmetatable	count=1
function	um fluxo de execução ||| isthread	count=1
module	t[fname], onde t ||| lual	count=1
module	string o ||| lua	count=1
module	uma nova tabela com ||| lual	count=1
module	del índice ||| lua	count=11
module	elimina una tabla de ||| lua	count=2
module	aceptable index2 siguiendo la ||| lua	count=1
arg	[arg_1] [arg_2] list deslocando os elementos ||| [arg_2] [arg_1]	count=4
module	top + ||| lual	count=2
function	produce la cesión ||| yield	count=1
function	la función hook actual ||| gethook	count=1
arg	n from the given ||| n	count=1
function_arg	segundos da [arg_2] ||| [arg_2] [function_1]	count=3
module	memória com o tamanho ||| lua	count=1
arg	a2 ||| a2	count=1
arg	a nombre_nuevo ||| nombre_nuevo	count=1
module	userdata completo com ||| lua	count=1
module	elements between the valid ||| lua	count=1
module	t é ||| lual	count=1
arg	v2 ||| v2	count=1
module	the [module] to ||| [module]	count=1
arg	metatable for the given ||| metatable	count=1
module	that when ||| lual	count=1
module	pelo valor tp o ||| lua	count=1
module	(esto es un ||| lua	count=1
module	the registry (see ||| lual	count=1
arg	[arg_1] hook ||| [arg_2] [arg_1]	count=5
arg	ou continua a execução ||| co val1	count=1
module	static variable stored ||| lua	count=1
module	index idx and the ||| lua	count=1
module	crea y ||| lual	count=1
function	memory-allocation function of a ||| getallocf	count=1
module	uma tabela da pilha ||| lua	count=1
module	para esse tamanho ||| lual	count=1
arg	und [arg] können ||| s i [arg]	count=1
module	entre ||| lua	count=1
module	retorna 1 se ||| lua	count=8
module	to lua_pushstring ||| lua	count=1
module	a function ||| lua	count=1
arg	a2 performing ||| a2	count=1
function	to open space ||| insert	count=1
module	estándar ||| lual	count=2
module	any lua value ||| lual	count=1
module	value tp ||| lua	count=1
module	de una instancia ||| lua	count=1
module	fornecido k ||| lua	count=1
module	verifica si ||| lua	count=1
module	function ||| lua	count=5
arg	funktion f ||| f	count=1
module	lo elimina ||| lua	count=1
module	funções no array l ||| lual	count=1
module	valor tp ||| lua	count=2
function	возвращаер хендлер для временного ||| tmpfile	count=1
function	the string ||| seek	count=1
module	werte aus [module] ||| [module]	count=3
module	misma (por ||| lua	count=1
module	and ||| lua	count=4
module	una instancia ||| lua	count=1
module	função é uma cadeia ||| lual	count=1
module	com o ||| lual	count=1
module	at index ||| lua	count=1
module	de lua ||| lual	count=1
function	time specified ||| time	count=1
arg	format ||| format	count=1
function	cesión de ||| yield	count=1
module	ou um registro ||| lua	count=1
module	of the stack to ||| lual	count=1
module	sin desplazar ||| lua	count=1
module	o byte c ao ||| lual	count=1
module	y 0 en ||| lua	count=2
function	raiz cuadrada de ||| sqrt	count=1
module	stack size to top ||| lual	count=1
module	welcher ||| package	count=1
module	o lua_tnone si ||| lua	count=1
module	una copia del string ||| lual	count=1
module	записывает в ||| lual	count=1
arg	lua f1 ||| f1 n1	count=2
module	é nil ||| lua	count=1
function	handle for a temporary ||| tmpfile	count=1
module	associated ||| lua	count=1
module	whether ||| lual	count=3
module	acerca de un ||| lua	count=1
arg	вставляет элемент [arg] в позицию ||| table pos [arg]	count=1
arg	[arg] mit ||| [arg]	count=1
module	pilha um novo userdata ||| lua	count=1
module	индекс, ||| lua	count=1
module	aloca um novo bloco ||| lua	count=1
module	this integer ||| lual	count=1
function	переданной в качестве параметра ||| len	count=1
module	erro lua ||| lua	count=1
module	gegebenen [module] ein thread ||| [module]	count=1
module	una función de reserva ||| lual	count=1
module	manipulador de ||| io	count=1
function	pi ||| pi	count=1
function_arg	starts or continues ||| resume co val1	count=1
module	no válido esto es ||| lua	count=1
function	não é válido ||| isnone	count=1
module	de ||| lual	count=21
module	que ela recebe uma ||| lua	count=1
module	una nueva función ||| lua	count=1
module	pieces ||| lua	count=1
function	adiciona o ||| addvalue	count=1
function_arg	[function_1] t1 para ||| [arg_2] [function_1]	count=3
module	que deve ||| string	count=1
module	em ||| lua	count=2
module	o valor lua ||| debug	count=1
module	that table ||| lual	count=1
module	stack elements between ||| lua	count=1
module	é uma tabela e ||| lual	count=1
module	stack and pops ||| lual	count=1
module	da pilha abaixo ||| lual	count=1
module	variable local de ||| lua	count=2
arg	n ||| n	count=5
arg	значение [arg] равно ||| [arg]	count=1
module	upvalue de um ||| lua	count=1
module	ou uma ||| lua	count=1
module	una función c ||| lua	count=1
arg	v1 v2 ||| v1 v2	count=2
module	um número o ||| lua	count=1
module	a lua_pushfstring exceto ||| lua	count=1
arg	uma cadeia ||| pattern	count=1
module	un valor ||| lua	count=2
module	b (veja lual_buffer) uma ||| lual	count=1
module	um número ||| lua	count=4
function	gleich ||| rawequal	count=1
module	it ||| debug	count=1
module	valor no topo da ||| lua	count=1
module	ao ||| lual	count=3
function	as a lua chunk ||| loadstring	count=1
arg	function f with the ||| f	count=1
arg	posição [arg] list deslocando ||| list [arg]	count=1
module	l is not null ||| lual	count=1
module	индексу: ||| lua	count=1
module	converts a ||| lua	count=1
module	v es ||| lua	count=2
function	stack cannot grow ||| checkstack	count=1
module	ela recebe ||| lua	count=1
module	to lual_prepbuffsize with the ||| lual	count=1
module	baixo os elementos ||| lua	count=1
module	el índice aceptable ||| lua	count=3
module	but should be ||| lua	count=1
module	otros ||| lua	count=1
arg	[arg] локальной ||| func up [arg]	count=3
arg	[arg] равно ||| [arg]	count=1
module	do fluxo) para o ||| lua	count=1
module	é um userdata do ||| lual	count=1
module	returns a ||| math	count=1
module	core that created the ||| lual	count=1
module	function to ||| lua	count=1
module	função chamada ceder (veja ||| lua	count=2
arg	elementos são ||| i j	count=1
arg	at [arg] of ||| [arg] local	count=1
arg	[arg] a hora ||| t2 [arg]	count=1
module	éste ||| debug	count=1
module	a variable number of ||| lua	count=1
arg	[arg] kopien ||| s [arg]	count=1
module	aceptable es un string ||| lua	count=1
arg	nombre_viejo a nombre_nuevo ||| nombre_viejo nombre_nuevo	count=1
module	creates and ||| lual	count=1
module	y ||| lua	count=11
module	acerca de una variable ||| lua	count=1
module	uma cadeia c ||| lua	count=1
module	de memória ||| lua	count=1
function	entorno de un valor ||| getfenv	count=1
module	que ||| lua	count=3
module	sz elementos lançando ||| lual	count=1
module	lua (llamando al ||| lua	count=1
module	[module] sets ||| [module]	count=2
function	a metatabela associada ||| getmetatable	count=1
module	o tamanho ||| lual	count=1
module	argumento arg da função ||| lual	count=6
function	índice del [function] en ||| [function]	count=1
module	значение по заданному допустимому ||| lua	count=1
module	строчку из файла ||| io	count=1
module	error en caso de ||| lual	count=1
module	todos los objetos ||| lua	count=1
module	la parte superior ||| lual	count=2
module	userdata completo retorna ||| lua	count=1
module	at the top of ||| lual	count=3
module	o valor no ||| lual	count=2
function	тип для функций c ||| cfunction	count=1
module	tabla de la parte ||| lua	count=1
module	retorna el contador ||| lua	count=1
module	on the [module] ||| [module]	count=1
arg	or continues the execution ||| co val1	count=1
module	índice fornecido e k ||| lua	count=1
function	[function] is the ||| [function]	count=2
arg	nombre_viejo ||| nombre_viejo	count=1
module	argument arg is a ||| lual	count=4
module	estado inteiro de uma ||| lua	count=1
arg	índices negativos i ||| i	count=1
module	welche [module] quotienten ||| [module]	count=1
module	de pánico y devuelve ||| lua	count=1
module	es no ||| lua	count=1
arg	einer [arg] ||| [arg]	count=1
module	el [module] ||| [module]	count=1
module	da pilha abaixo de ||| lual	count=1
module	optimized to ||| lual	count=1
module	o tipo de ||| lua	count=1
arg	asigna valor a ||| valor	count=1
module	arg da função ||| lual	count=6
module	integer and returns ||| lual	count=1
module	индексу: для строк, возвращает ||| lua	count=1
module	un número retorna ||| lual	count=2
module	função ||| lual	count=8
module	with ||| lua	count=1
module	equivalente a ||| lual	count=1
function	lua_settable but does ||| rawset	count=1
function	elimina n elementos ||| pop	count=1
function	y ejecuta el ||| dofile	count=1
module	tamanho da pilha para ||| lual	count=1
module	destruye todos ||| lua	count=1
function	the metatable of ||| getmetatable	count=1
module	tabela com um tamanho ||| lual	count=1
module	diferentes fluxos ||| lua	count=1
function	returns a reference in ||| ref	count=1
arg	[arg_1] v2 ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] de x ||| [function_1] [arg_2]	count=28
module	invocação de ||| lua	count=1
module	verifica si el argumento ||| lual	count=4
module	o valor ||| lua	count=17
module	lua_settable mas ||| lua	count=1
module	stored ||| lua	count=1
arg	v ||| v	count=1
module	um dado estado ||| lua	count=1
module	string p ||| lual	count=1
arg	die zeichenkette [arg] umgekehrt darstellt ||| [arg]	count=1
module	fecho c na ||| lua	count=1
module	co-rutina ||| coroutine	count=4
function	y retorna el mismo ||| checknumber	count=1
module	v onde t ||| lua	count=1
module	registra todas ||| lual	count=1
arg	la función [arg_2] ||| [arg_2] [arg_1]	count=7
module	anteil [module] x ||| [module]	count=1
module	t[fname], ||| lual	count=1
module	of lua ||| lual	count=1
module	upvalues opcionais veja a ||| lual	count=1
module	pila y ||| lua	count=3
module	running the call ||| lual	count=1
module	destruye ||| lua	count=1
arg	с данными параметрами ||| arg1	count=1
function	informationen zu ||| getinfo	count=1
module	del string s ||| lual	count=1
module	valid index idx ||| lua	count=1
module	p por ||| lual	count=1
module	и ||| lua	count=2
module	com ||| lua	count=3
function	nil if it does ||| getmetatable	count=1
module	an error if ||| lual	count=1
module	equivalent to lual_prepbuffsize with ||| lual	count=1
arg	closure f1 refer ||| f1	count=1
module	string una ||| string	count=1
module	fornecido para um fluxo ||| lua	count=1
function	valor huge_val ||| huge	count=2
module	given valid ||| lua	count=1
module	outro valor ||| math	count=1
arg	e ||| e	count=1
arg	do arquivo filename ||| filename	count=1
function	geralmente error adiciona ||| error	count=1
function	does ||| getmetatable	count=1
module	l (veja ||| lual	count=1
module	fichero ||| lual	count=1
module	desse índice para preencher ||| lua	count=1
module	tabela no topo da ||| lual	count=1
module	a lua ||| lua	count=1
function_arg	variable [arg_2] ||| [arg_2] [function_1]	count=1
module	a raw assignment (i ||| lua	count=1
module	one the values ||| lua	count=1
arg	eine tabelle mit ||| function what	count=1
arg	closure f1 ||| f1	count=1
module	not null fills ||| lual	count=1
module	v onde t é ||| lua	count=1
arg	a chunk ||| chunk	count=1
module	com userdata ud ||| lua	count=1
arg	continúa la ||| val1	count=1
function	umgebung erben kann ||| seeall	count=1
module	retorna 1 si el ||| lua	count=3
arg	значение [arg] равно false ||| [arg]	count=1
module	o valor no índice ||| lual	count=1
arg	die [arg] ||| [arg]	count=1
module	de error ||| lual	count=1
module	the called function to ||| lua	count=1
arg	field [arg_2] ||| [arg_2] [arg_1]	count=1
module	opcionais veja a ||| lual	count=1
module	índice válido ||| lua	count=3
module	si la dirección es ||| lua	count=1
module	el elemento que ||| lua	count=1
module	execução e indiretamente ||| lua	count=1
module	function works like ||| lual	count=1
function	[function] с опциональным ||| [function]	count=1
module	to a c ||| lual	count=1
module	un índice a una ||| lua	count=1
module	to an integer ||| lual	count=1
function	um tabela ||| next	count=1
function	um userdata leve e ||| islightuserdata	count=1
arg	table das [arg] an ||| table pos [arg]	count=1
function	функцию-итератор [function] которая ||| [function]	count=1
module	índice válido y v ||| lua	count=2
module	object at the ||| lual	count=2
module	otimizado ||| lual	count=1
arg	se repl é ||| repl n	count=1
module	la posición del ||| lua	count=8
module	un puntero a este ||| lua	count=1
module	um número ||| lual	count=4
module	pedaços diferentes ||| lua	count=1
arg	asigna el valor a ||| valor	count=1
module	de la pila el ||| lual	count=1
module	стеке вызова ||| lual	count=1
module	lua_pushfstring ||| lua	count=2
arg	das [arg] ||| table pos [arg]	count=1
module	returns null instead of ||| lual	count=1
module	en la pila y ||| lua	count=1
arg	[arg_1] [arg_2] os elementos list[pos], list[pos+1], ||| table insert [arg_2] [arg_1]	count=4
module	am gegebenen [module] eine ||| [module]	count=3
arg	path ||| path	count=1
module	new ||| lua	count=2
rep	возвращает [function_arg_2] ||| [module_1] [function_arg_2]	count=6
module	tipo usado por ||| lua	count=1
function_arg	biblioteca c [arg_2] ||| [arg_2] [function_1]	count=1
function	качестве параметра ||| len	count=1
function	adiciona o byte c ||| addchar	count=1
module	completo retorna la dirección ||| lua	count=1
function	valor lua associado a ||| getuservalue	count=1
module	are all using ||| lual	count=1
function	to a [function] ||| [function]	count=1
arg	значение [arg] ||| [arg]	count=1
module	only ||| lua	count=1
module	y devuelve ||| lua	count=1
function	it does ||| getmetatable	count=1
module	index to a c ||| lual	count=1
module	v1 es ||| lua	count=1
module	as entradas ||| lual	count=1
module	stack size ||| lual	count=1
arg	valor value ||| value	count=2
arg	valor value à ||| value	count=1
module	"longitud" de un valor ||| lua	count=1
arg	j ||| j	count=1
module	en la tabla en ||| lual	count=1
arg	de s ||| s	count=1
module	y v es ||| lua	count=2
module	a c ||| lua	count=1
module	para el objeto en ||| lual	count=1
module	índice fornecido é um ||| lua	count=4
arg	liefert eine tabelle mit ||| thread function what	count=1
function	a metatabela associada ||| setmetatable	count=1
module	el tipo usado ||| lua	count=1
module	tabela ||| lua	count=5
module	en el índice dado ||| lua	count=1
module	del índice ||| lual	count=2
module	qual ||| lua	count=1
function	sets the ||| setmetatable	count=2
arg	durch [arg] gegebenen position ||| whence [arg]	count=1
module	caso contrario ||| lua	count=2
module	retorna o ||| lual	count=1
arg	von s ||| s	count=1
module	+ sz elementos lançando ||| lual	count=1
module	allocator function ||| lua	count=1
module	nil if it does ||| debug	count=1
module	y hora formateada ||| os	count=1
module	um número variável de ||| lua	count=1
module	copia del string s ||| lual	count=1
module	idx is ||| lual	count=1
function	nova tabela vazia e ||| createtable	count=1
module	índice dado ||| lua	count=1
module	this function ||| lual	count=1
arg	status of coroutine co ||| co	count=1
function	especificado en el string ||| open	count=1
module	(por tanto ||| lua	count=1
module	index t ||| lual	count=1
module	a cadeia ||| lual	count=1
module	si existe) ||| lua	count=1
function	0 caso contrário ||| isnil	count=1
module	longitud ||| lua	count=2
module	aceptable en ||| lua	count=3
module	válido esto es ||| lua	count=1
module	retorna la "longitud" ||| lua	count=1
module	a number ||| lual	count=1
module	an integer and ||| lual	count=1
arg	asigna ||| valor	count=1
module	para uma cadeia e ||| lua	count=1
module	una nueva ||| lua	count=1
function	[function] en ||| [function]	count=2
module	nil ||| debug	count=2
module	valor del ||| lua	count=2
module	si v1 ||| lua	count=1
module	un string ||| lual	count=1
arg	чисел параметром [arg] ("seed"): ||| [arg]	count=1
module	values ||| lua	count=1
module	y libera toda la ||| lua	count=1
module	значение по заданному ||| lua	count=1
module	('#'); para un userdata ||| lua	count=1
module	0 ||| lua	count=10
module	top of the stack ||| lual	count=3
arg	argumento número [arg] ||| [arg]	count=1
module	a buffer ||| lual	count=1
module	ser um ||| lua	count=1
module	nil if ||| debug	count=1
function	fluxo ||| isthread	count=1
arg	of the given value ||| value	count=1
module	de ||| math	count=1
module	índice fornecido k ||| lua	count=1
module	de un ||| lua	count=6
module	array l (mas não ||| lual	count=1
module	lua (llamando al correspondiente ||| lua	count=1
module	welcher von ||| package	count=1
module	indiretamente (através do ||| lua	count=1
function	execução do mesmo estado ||| xmove	count=1
module	metatable associated with ||| lual	count=1
module	está en ||| lua	count=1
module	lua no ||| lua	count=3
arg	estabelece [arg] como a ||| [arg]	count=1
module	index ||| lua	count=18
module	(veja ||| lua	count=3
module	reemplazando el ||| lua	count=1
module	[module] returns ||| [module]	count=2
module	realloc y ||| lual	count=1
module	as the new ||| lua	count=1
module	veja a ||| lual	count=1
module	pilha ||| lua	count=11
module	de la misma (por ||| lua	count=1
module	produz ||| lual	count=2
module	si v1 es ||| lua	count=1
module	datei-handle ||| io	count=1
module	cadeia ou ||| lua	count=1
module	o [module] naquela posição) ||| [module]	count=1
arg	вызывает функцию [arg] в ||| [arg]	count=1
function_arg	[function_1] continúa la ||| [arg_2] [function_1]	count=1
module	pushes onto the ||| lua	count=2
module	metatable ||| lual	count=2
module	function argument arg ||| lual	count=5
module	of the same state ||| lua	count=1
module	objeto situado en ||| lual	count=1
module	pilha e a estabelece ||| lua	count=1
module	al correspondiente metamétodo de ||| lua	count=1
function	not have ||| getmetatable	count=1
module	que está en ||| lua	count=1
module	o qual deve ||| lua	count=1
module	en la salida estándar ||| lual	count=1
module	uma cadeia de comprimento ||| lual	count=1
arg	loads a chunk ||| chunk chunkname mode env	count=1
module	menor que el situado ||| lua	count=1
module	estado dado de ||| lua	count=1
module	novo fecho c ||| lua	count=1
arg	[arg_1] [arg_2] list deslocando os elementos ||| table insert [arg_2] [arg_1]	count=4
function	checks whether ||| checknumber	count=1
arg	t2 ||| t2	count=4
module	no índice idx é ||| lual	count=1
module	pila en este ||| lua	count=1
module	de lua (llamando al ||| lua	count=1
module	up the elements ||| lua	count=1
module	the given index ||| lua	count=3
module	to that size ||| lual	count=1
module	a un string y ||| lua	count=1
module	файла записи output file ||| file	count=1
module	given index ||| lua	count=3
function	atribuição primitiva (i ||| rawset	count=1
module	size to ||| lual	count=1
module	se ||| lua	count=9
module	informação sobre uma ||| lua	count=2
module	"pánico" (véase lua_atpanic) ||| lual	count=1
module	should be used only ||| lua	count=1
module	numérico ||| math	count=2
module	null ||| lua	count=4
function	running ||| running	count=1
function	данная таблица используется функцией ||| loaded	count=1
module	índice válido fornecido deslocando ||| lua	count=1
arg	que [arg] = m ||| [arg]	count=1
module	posición "vacía" ||| lua	count=1
module	para esse ||| lual	count=1
module	liefert den [module] des ||| [module]	count=1
module	macro is ||| lua	count=1
arg	[arg_1] is a ||| [arg_1] [arg_2]	count=1
function_arg	table t and ||| ipairs t	count=1
module	e retorna o ||| lual	count=1
module	the [module] with ||| [module]	count=1
function_arg	metatabela para [arg_2] ||| [arg_2] [function_1]	count=1
module	más grande o igual ||| math	count=1
arg	pattern in ||| pattern	count=2
module	a new table ||| lual	count=1
module	bloco de memória ||| lua	count=1
arg	continúa la ||| co val1	count=1
function	natürlichen logarithmus ||| log	count=1
module	y lo retorna ||| lual	count=1
module	(esto es ||| lua	count=2
module	l (mas ||| lual	count=1
module	buffer b ||| lual	count=5
module	un puntero a ||| lua	count=2
arg	level level ||| level	count=1
module	file ||| file	count=6
module	de gancho de ||| lua	count=1
module	una función ||| lua	count=2
module	essa tabela na ||| lual	count=1
module	или 0 ||| lua	count=1
module	e ||| lua	count=18
module	la [module] ||| [module]	count=1
module	about ||| lua	count=1
module	userdata ud ||| lua	count=1
function	nova metatabela para ||| setmetatable	count=1
module	maior ||| math	count=1
module	es un string y ||| lual	count=1
module	index shifting up the ||| lua	count=1
module	tname in ||| lual	count=1
arg	de [arg] ||| [arg]	count=1
module	von require verwendet ||| package	count=1
module	metatabla ||| debug	count=1
module	[module] the ||| [module]	count=1
module	instead ||| lual	count=1
arg	field a field + ||| field	count=1
module	dado de lua (llamando ||| lua	count=1
module	in the lua core ||| lua	count=1
module	función en ||| lua	count=1
module	un string y retorna ||| lual	count=1
function_arg	[function_1] ou continua ||| [arg_2] [function_1]	count=1
arg	[arg_1] func ||| [arg_1] [arg_2]	count=2
module	y estableciendo ||| lual	count=1
arg	procura pelo primeiro casamento ||| init plain	count=1
module	intérprete de lua ||| lua	count=1
function	or nil ||| getmetatable	count=1
arg	проверка равенства [arg] и v2 ||| [arg]	count=1
module	parte superior ||| lua	count=6
module	the core ||| lual	count=2
arg	arguments [arg] falsch also ||| [arg]	count=1
module	конвертирует ||| lua	count=2
module	fornecido para uma função ||| lua	count=1
function	and the current hook ||| gethook	count=1
arg	containing the values ||| fmt	count=1
arg	[arg] of ||| [arg]	count=1
module	the current [module] 0 otherwise ||| [module]	count=1
module	índice a ||| lua	count=1
module	sets the c function ||| lua	count=1
module	sin ||| lua	count=1
function	global name ||| register	count=1
module	un string o ||| lua	count=1
function	la tabla de entorno ||| getfenv	count=1
module	вершину ||| lua	count=1
module	instead of ||| lual	count=1
module	situado en ||| lua	count=8
module	la pila sin ||| lua	count=1
module	descarrega uma função ||| lua	count=1
function	setzt ||| seeall	count=1
module	core running the ||| lual	count=1
module	y lo ||| lual	count=1
module	stack as the metatable ||| lual	count=1
arg	v1 ||| v1	count=4
module	pointer to ||| lua	count=1
module	raw assignment (i ||| lua	count=1
module	idx is a ||| lual	count=1
module	registry (see ||| lual	count=1
function	and the code making ||| checkversion	count=1
module	associated with ||| lual	count=1
module	argumento [module] ||| [module]	count=3
module	lua invocando ||| lual	count=1
function	a [function] and ||| [function]	count=1
module	a una ||| lua	count=1
module	recebe ||| lua	count=1
arg	func_hook como hook ||| func_hook	count=1
arg	lua associado a u ||| u	count=1
function_arg	a metatabela [arg_2] ||| [function_1] [arg_2]	count=1
module	como o topo da ||| lua	count=1
module	(veja lual_reg) na ||| lual	count=1
module	der pfad welcher von ||| package	count=1
module	salida ||| lual	count=1
module	the metatable associated with ||| lual	count=1
module	null instead of raising ||| lual	count=1
module	[module] procurar por ||| [module]	count=2
module	called function ||| lua	count=1
module	t ||| lual	count=3
module	and the top of ||| lua	count=1
function	seno hiperbólico ||| sinh	count=2
module	lual_buffer) uma ||| lual	count=1
module	si el ||| lua	count=4
module	except that ||| lua	count=1
module	integer cast ||| lual	count=1
module	igual ||| lua	count=1
module	funções no ||| lual	count=1
module	works like ||| lual	count=1
module	comprimento n copiada anteriormente ||| lual	count=1
module	índice fornecido para o ||| lua	count=2
module	to yield (see §4 ||| lua	count=1
arg	given value or ||| value	count=1
module	или ||| lua	count=1
module	static variable stored in ||| lua	count=1
module	tname in the registry ||| lual	count=1
function	a string convertible ||| isnumber	count=1
module	coloca en la ||| lua	count=5
module	ou igual ||| math	count=1
arg	de [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
arg	zeichenkette [arg] darstellt ||| [arg]	count=1
module	coloca en la ||| lual	count=1
module	this string ||| lual	count=2
arg	time t1 ||| t1	count=1
module	coloca-o na [module] e ||| [module]	count=1
module	hora formateada ||| os	count=1
arg	tangente de y/x ||| y	count=1
module	only when s is ||| lua	count=1
module	name of the ||| lua	count=1
function	tabla [function] un objeto ||| [function]	count=1
module	stack and pops the ||| lual	count=1
module	información acerca ||| lua	count=2
module	otimizado para armazenar todas ||| lual	count=1
arg	índice local ||| local	count=1
module	como um ||| lua	count=1
module	lual_checkudata ||| lual	count=1
module	with name ||| lual	count=1
module	state and ||| lual	count=1
arg	función asigna el ||| valor	count=1
module	un valor en ||| lua	count=1
module	pánico y ||| lua	count=1
module	structure used to ||| lua	count=1
module	para ||| lua	count=18
module	fluxo de execução ||| lua	count=3
arg	der zeichenkette [arg] angegebenen modus ||| filename [arg]	count=1
module	onde t é a ||| lua	count=2
module	de los ||| lua	count=1
module	returns a ||| lua	count=1
module	a string and ||| lual	count=2
module	nuevo proceso lo coloca ||| lua	count=1
function	especificado ||| open	count=1
module	un número y lo ||| lual	count=1
module	novo userdata ||| lua	count=1
module	mismo ||| lua	count=2
module	den [module] des obersten ||| [module]	count=1
module	tipo usado ||| lua	count=2
module	t é a tabela ||| lua	count=2
module	of raising ||| lual	count=1
module	índice para ||| lua	count=1
arg	as palavras da cadeia ||| pattern	count=1
module	as entradas no array ||| lual	count=1
module	y lo ||| lua	count=1
module	elemento no ||| lua	count=1
module	e coloca essa ||| lual	count=1
module	un valor más ||| math	count=1
module	the object ||| lual	count=3
arg	[arg_1] returns table ||| [arg_2] [arg_1]	count=4
arg	una [arg] ||| formato [arg]	count=3
module	abaixo de ||| lual	count=1
module	estado de ||| lual	count=1
arg	or continues ||| val1	count=1
module	valor t[k], ||| lua	count=1
function	elemento situado ||| gettop	count=1
function	é interface genérica para ||| assert	count=1
function_arg	[function_1] or continues ||| [arg_2] [function_1]	count=1
function	de gancho de depuração ||| sethook	count=1
module	are all using the ||| lual	count=1
module	valor numérico ||| math	count=2
module	válido y ||| lua	count=2
module	resultado del ||| lua	count=1
module	stack as ||| lual	count=1
arg	de y/x en ||| y	count=1
module	is a string ||| lual	count=2
function	arco seno de ||| asin	count=1
module	válido fornecido deslocando ||| lua	count=1
arg	[arg] durchlaufen ||| [arg]	count=1
module	setzt ||| package	count=1
module	gegebenen [module] eine zahl ||| [module]	count=1
arg	de la variable local ||| local	count=1
function	entre sus argumentos ||| max	count=1
function	elemento fuera ||| isnone	count=1
arg	checks whether obj ||| obj	count=1
arg	y/x en ||| y x	count=1
arg	[arg_1] func_hook como ||| [arg_1] [arg_2]	count=1
arg	field + ||| field	count=1
module	value ||| lua	count=7
module	acesso primitivo ||| lua	count=1
module	tostring calls [module] ||| [module]	count=1
module	moves the top element ||| lua	count=1
module	o valor t[k], onde ||| lua	count=1
module	core ||| lual	count=2
module	pilha um ||| lua	count=1
module	el fichero ||| lual	count=1
module	a function as ||| lua	count=1
module	valor de ||| math	count=1
module	de la función es ||| lual	count=6
function	índice del [function] en la ||| [function]	count=1
module	exceto que ||| lua	count=1
module	file handle ||| io	count=1
module	un proceso de ||| lua	count=1
module	elemento que está en ||| lua	count=1
module	não as ||| lual	count=1
module	verifica se o argumento ||| lual	count=5
arg	[arg] primeras ||| s patrón reemplazamiento [arg]	count=3
module	obtiene ||| lua	count=2
module	valor en el ||| lua	count=2
module	to top + ||| lual	count=1
function_arg	[function_1] [arg_2] hora ||| os [function_1] [arg_2]	count=6
module	nueva ||| lua	count=1
module	the top ||| lua	count=2
module	a este string ||| lua	count=1
module	y 0 en caso ||| lua	count=2
module	the same version ||| lual	count=1
module	(see lual_buffer) ||| lual	count=1
module	pilha abaixo ||| lual	count=1
module	não as armazena ||| lual	count=1
arg	функцию [arg] в защищенном ||| [arg]	count=1
module	execução rodando em ||| lua	count=1
module	procesos [module] mismo ||| [module]	count=1
function	the metatable of the ||| getmetatable	count=1
module	estabelece seu [module] como o ||| [module]	count=1
module	the current [module] ||| [module]	count=1
module	um novo bloco ||| lua	count=1
module	t é o ||| lual	count=1
module	acima desse índice para ||| lua	count=1
function	gera um erro lua ||| error	count=1
module	estableciendo una función de ||| lual	count=1
module	parte ||| lua	count=6
arg	y/x ||| y x	count=1
function	tipo tname (véase lual_newmetatable) ||| checkudata	count=1
function	adiciona o byte ||| addchar	count=1
module	erro ||| lual	count=1
arg	função no ||| thread	count=1
module	retorna a função de ||| lua	count=1
module	inteiro ||| lua	count=1
module	de liberación ||| lua	count=1
module	onto the stack ||| lual	count=1
module	nova tabela ||| lual	count=1
module	lua_atpanic) ||| lual	count=1
module	the value ||| lua	count=3
module	e retorna esse ||| lua	count=1
function	controla o ||| gc	count=1
module	the address of ||| lua	count=1
module	index to ||| lua	count=1
module	un índice a ||| lua	count=1
module	liest [module] im angegebenen ||| [module]	count=1
module	pops ||| lual	count=1
function	the current hook count ||| gethookcount	count=1
module	tamanho da ||| lual	count=1
arg	lua closure f1 ||| f1 n1	count=1
arg	[arg_1] y ||| [arg_2] [arg_1]	count=3
module	elementos acima desse índice ||| lua	count=1
arg	invoca la función [arg_1] [arg_2] en modo protegido ||| [arg_1] [arg_2]	count=1
module	the lua ||| lual	count=1
module	a tabela no ||| lua	count=2
module	para uma função c ||| lua	count=1
module	индексу в ||| lua	count=2
module	a new ||| lual	count=1
module	a string as ||| lual	count=1
module	all using the ||| lual	count=1
module	aceptable es no ||| lua	count=1
arg	elements from table a1 ||| a1 f	count=1
module	carry ||| lua	count=1
module	loads a string as ||| lual	count=1
arg	prog в отдельном процессе ||| prog	count=1
module	da pilha e ||| lua	count=1
module	cualquier aparición ||| lual	count=1
module	uma cadeia formatada ||| lua	count=1
module	as the metatable associated ||| lual	count=1
module	metatable of ||| debug	count=1
function	variable ||| getlocal	count=1
module	misma (por tanto reemplazando ||| lua	count=1
function	or nil if it ||| getmetatable	count=1
module	co-rotina em um dado ||| lua	count=1
module	aceptable para un ||| lua	count=1
module	onto ||| lua	count=2
function	metatabla ||| getmetatable	count=1
module	de upvalues opcionais ||| lual	count=1
module	if the function argument ||| lual	count=1
module	works like lual_checkudata ||| lual	count=1
module	del string s reemplazando ||| lual	count=1
module	local ||| lua	count=2
function_arg	[function_1] [arg_2] ||| os [function_1] [arg_2]	count=6
arg	[arg_1] [arg_2] ||| fmod [arg_1] [arg_2]	count=9
arg	функцию [arg] ||| [arg]	count=1
module	cria uma ||| lua	count=2
arg	a table ||| table	count=2
module	anteriormente ||| lual	count=1
module	carga ||| lual	count=1
function	the metatable ||| getmetatable	count=1
arg	traverse all fields ||| index	count=1
module	recebe uma ||| lua	count=1
function	la ||| getmetatable	count=1
module	returns this integer cast ||| lual	count=1
module	is ||| lua	count=4
function	tabla [function] ||| [function]	count=2
module	lançando um ||| lual	count=1
function	reference in the ||| ref	count=1
arg	параметра v ||| v	count=1
module	en la tabla ||| lual	count=1
module	la [module] ha ||| [module]	count=1
module	the stack the ||| lua	count=2
module	x ||| math	count=1
function	opcionais veja a seguir ||| setfuncs	count=1
module	number of arguments ||| lua	count=1
module	de comprimento n copiada ||| lual	count=1
function	estabelece a metatabela ||| setmetatable	count=1
module	el elemento ||| lua	count=1
function	é interface genérica ||| assert	count=1
module	ningún elemento ||| lua	count=1
module	cadeia ou um ||| lua	count=1
module	del mismo para ||| lua	count=1
module	puntero a este string ||| lua	count=1
module	un proceso ||| lua	count=1
module	cast to a ||| lual	count=1
module	setzt eine ||| package	count=1
module	calls [module] with ||| [module]	count=1
module	at the top ||| lual	count=3
module	función hook de ||| lua	count=1
function	esse número ||| checknumber	count=1
arg	given base ||| base	count=1
module	inválida (esto es ||| lua	count=1
module	y retorna ||| lua	count=1
arg	la función [arg] ||| [arg]	count=1
module	estabelece a função de ||| lua	count=1
module	tname (veja ||| lual	count=1
arg	with ||| thread	count=1
module	um userdata do ||| lual	count=1
module	t[k], onde ||| lua	count=1
module	возвращает ||| lua	count=4
module	desse ||| lua	count=1
module	realiza el equivalente ||| lua	count=2
module	pushes the ||| lua	count=4
module	the lua ||| lua	count=2
module	o ||| math	count=2
function	temporary ||| tmpfile	count=1
module	la api ||| lua	count=1
module	index is a ||| lua	count=1
module	it receives a ||| lua	count=1
module	número ||| lua	count=4
arg	a field + ||| field	count=1
module	memória com o ||| lua	count=1
module	uma ||| lual	count=4
module	cualquier aparición del ||| lual	count=1
module	lua situado ||| lua	count=2
module	associado ||| debug	count=1
module	coletor ||| lua	count=1
module	um valor ||| lua	count=1
module	contador ||| lua	count=1
module	of information ||| lua	count=1
module	se o ||| lual	count=6
module	dado fluxo ||| lua	count=1
module	c na pilha ||| lua	count=1
module	no array ||| lual	count=2
arg	no base ||| base	count=1
module	libera toda la ||| lua	count=1
module	a qualquer outro ||| math	count=1
module	userdata completo retorna la ||| lua	count=1
module	retorna el ||| lua	count=3
module	establece la función hook ||| lua	count=1
module	función ||| lua	count=4
module	mensaje en la salida ||| lual	count=1
module	sobre ||| lua	count=2
module	codificado ||| lua	count=2
module	verwendet wird ||| package	count=1
function	tabla [function] un ||| [function]	count=1
module	assignment (i ||| lua	count=1
arg	las n ||| n	count=1
module	abaixo de upvalues opcionais ||| lual	count=1
module	the call the core ||| lual	count=1
function	de activación dado ||| setlocal	count=1
module	execução rodando ||| lua	count=1
module	returned by ||| lua	count=1
module	la longitud ||| lua	count=1
module	um número e 0 ||| lua	count=1
function	função de gancho corrente ||| gethook	count=1
arg	die zeichenkette [arg] umgekehrt ||| [arg]	count=1
arg	o continúa la ||| co val1	count=1
module	"longitud" ||| lua	count=1
arg	a1 ||| a1 f	count=1
module	the core that created ||| lual	count=1
module	aparición ||| lual	count=1
function	valor huge_val um valor ||| huge	count=1
module	ou um número o ||| lua	count=1
module	información acerca de una ||| lua	count=1
module	t[fname], onde ||| lual	count=1
arg	s ||| s	count=16
module	returns null instead ||| lual	count=1
function_arg	[function_1] [arg_2] a hora ||| [function_1] [arg_2]	count=6
module	заданному валидному индексу ||| lua	count=1
function	tamanho pré-definido lual_buffersize ||| prepbuffer	count=1
module	a lual_prepbuffsize ||| lual	count=1
module	except ||| lua	count=1
function	nil ||| getenv	count=1
function	string como chunk ||| loadstring	count=1
function	dabei metamethoden aufzurufen ||| rawset	count=1
module	la posición ||| lual	count=2
module	de la metatabla del ||| lual	count=1
module	nueva función de ||| lua	count=1
module	address ||| lua	count=1
module	of the ||| lua	count=4
module	terminar [module] hospedeiro ||| [module]	count=1
module	actual ||| lua	count=1
arg	uma cadeia então ||| s pattern	count=1
module	a string as a ||| lual	count=1
module	eine ||| package	count=1
module	t for the ||| lual	count=1
function	[function] которая при ||| [function]	count=1
function_arg	квадратный корень x ||| sqrt x	count=1
module	índice aceptable index2 ||| lua	count=1
module	cadeia ou um número ||| lua	count=1
module	esse índice como ||| lua	count=1
module	imprime ||| lual	count=1
module	éste no tiene metatabla ||| debug	count=1
function	[function] is ||| [function]	count=2
module	adiciona ||| lual	count=1
module	con una función de ||| lual	count=1
module	function and ||| lua	count=1
module	shifting up the elements ||| lua	count=1
module	tamanho ||| lual	count=3
arg	открывает ||| filename	count=1
module	onto the ||| lual	count=1
module	stack to the buffer ||| lual	count=1
module	element into the given ||| lua	count=1
function	los códigos numéricos internos ||| byte	count=1
function	o valor lua associado ||| getuservalue	count=1
module	en el índice válido ||| lua	count=1
module	posición "vacía" en la ||| lua	count=1
arg	[arg_1] v1 ||| [arg_2] [arg_1]	count=1
arg	tangente de y/x en ||| y	count=1
module	el situado ||| lua	count=1
module	допустимому индексу в ||| lua	count=2
module	y lo elimina ||| lua	count=1
function	conjunto de ||| upper	count=1
module	(see §4 ||| lua	count=1
module	equivalente ||| lual	count=1
module	adiciona ao buffer ||| lual	count=1
function	la tabla [function] ||| [function]	count=2
module	s ||| lual	count=1
module	de lua (esto es ||| lua	count=1
module	é um número e ||| lual	count=3
function	el mismo como lua_integer ||| optinteger	count=1
arg	eine tabelle ||| what	count=1
module	el nombre del ||| lua	count=1
arg	[arg_1] [arg_2] können negativ sein ||| string sub [arg_1] [arg_2]	count=3
module	valor tp el ||| lua	count=1
module	(mas não as armazena ||| lual	count=1
module	userdata leve ||| lua	count=2
module	core that created ||| lual	count=1
module	stack as the ||| lual	count=1
function	стека в этот индекс ||| settop	count=1
arg	[arg_1] [arg_2] quociente ||| [arg_1] [arg_2]	count=3
module	el ||| lua	count=37
module	tp which must be ||| lua	count=1
arg	trecho do arquivo filename ||| filename	count=1
module	fluxo) para o estado ||| lua	count=1
module	os valores ||| lual	count=2
module	el valor tp el ||| lua	count=1
module	continuação (veja ||| lua	count=1
arg	or continues the ||| val1	count=1
function	boolean and 0 otherwise ||| isboolean	count=1
arg	tabelle mit ||| thread function what	count=2
module	función de reserva ||| lual	count=1
function	a ||| getuservalue	count=1
function	test fails it ||| testudata	count=1
module	os ||| lual	count=2
module	libera ||| lua	count=1
module	topo ||| lua	count=2
arg	параметром [arg] плюс ||| whence [arg]	count=1
module	address of ||| lua	count=1
module	usado por ||| lua	count=1
module	de los valores retornados ||| lua	count=1
function	rotates ||| rotate	count=1
function	table ||| ipairs	count=1
module	tipo usado pela ||| lua	count=1
module	aceptable o ||| lua	count=1
module	verifica si v1 es ||| lua	count=1
module	string una tabla o ||| string	count=1
module	establece una nueva ||| lua	count=1
arg	por [arg] más la ||| de_dónde [arg]	count=1
module	estabelece o valor de ||| lua	count=1
module	and pushes ||| lual	count=1
module	if l is not ||| lual	count=1
module	da função é um ||| lual	count=5
module	é um userdata ||| lual	count=1
module	es la ||| lua	count=1
module	arg da ||| lual	count=6
module	optimized to store all ||| lual	count=1
function	userdata leve ||| islightuserdata	count=1
module	faz o ||| lua	count=1
module	objeto en ||| lual	count=1
module	to store ||| lual	count=1
function	lua_integer ||| checkinteger	count=1
function	começa e retoma uma ||| resume	count=1
function	cuadrante del resultado ||| atan2	count=1
arg	[arg] primeras si ||| s patrón reemplazamiento [arg]	count=3
module	es un userdata ||| lual	count=1
module	se ||| lual	count=7
module	index t for the ||| lual	count=1
module	similar to ||| lua	count=1
module	una función en forma ||| lua	count=1
function	de un upavalue ||| getupvalue	count=1
function	especificado en el ||| open	count=1
module	that it ||| lua	count=1
module	arrays de funções ||| lual	count=1
module	the lua state ||| lual	count=1
arg	elemento value [arg_2] ||| [arg_2] [arg_1]	count=3
module	estado inteiro de ||| lua	count=1
module	as a binary chunk ||| lua	count=1
function	elementos para abrir hueco ||| insert	count=1
function	the code making the ||| checkversion	count=1
module	that it receives ||| lua	count=1
module	hacia el [module] válido ||| [module]	count=1
module	tipo codificado por el ||| lua	count=1
function	no tiene metatabla ||| getmetatable	count=1
module	except that it receives ||| lua	count=1
arg	first match of ||| s	count=1
function	checks whether the function ||| checkstring	count=1
module	e a [module] especificados ||| [module]	count=1
arg	элемент [arg] в ||| table pos [arg]	count=1
module	del índice aceptable es ||| lua	count=3
module	between ||| lua	count=1
module	estado para ||| lua	count=1
module	un registro de ||| lua	count=2
module	un nuevo proceso lo ||| lua	count=1
module	returns null ||| lual	count=1
module	the address of the ||| lua	count=1
module	der globalen umgebung erben ||| package	count=1
module	índice fornecido é nil ||| lua	count=1
module	para uma ||| lua	count=3
function_arg	começa [arg_2] ||| [arg_2] [function_1]	count=3
module	valor de lua ||| lua	count=2
module	los valores ||| lua	count=1
module	um fluxo ||| lua	count=2
function	the logarithm ||| log	count=1
function_arg	[function_1] t1 ||| [arg_2] [function_1]	count=3
function	de um upvalue de ||| setupvalue	count=1
module	de liberación de ||| lua	count=1
module	longitud del mismo ||| lua	count=1
function	retorna una referencia ||| ref	count=1
module	uma estrutura usada para ||| lua	count=1
function	valor huge_val un valor ||| huge	count=1
module	a size optimized ||| lual	count=1
module	intérprete ||| lua	count=1
module	tipo del ||| lua	count=1
function_arg	biblioteca c libname ||| loadlib libname	count=1
module	narg de la función ||| lual	count=6
module	variável de ||| lua	count=1
arg	closure f1 ||| f1 n1	count=1
module	current [module] ||| [module]	count=1
module	fecha y hora formateada ||| os	count=1
module	um novo userdata completo ||| lua	count=1
module	opens ||| io	count=1
arg	de n ||| n	count=1
function	de su bloque de ||| touserdata	count=1
module	codificado por el valor ||| lua	count=1
function	tangente hiperbólica ||| tanh	count=1
function	возвращает функцию-итератор [function] ||| [function]	count=1
module	fornecido é uma tabela ||| lua	count=1
module	elements between ||| lua	count=1
function	вызывает функцию [function] с ||| [function]	count=1
module	en la parte superior ||| lua	count=3
module	igual que otro ||| math	count=1
module	value tp which ||| lua	count=1
module	and the ||| lua	count=1
function	éste no ||| getmetatable	count=1
module	arg is a number ||| lual	count=1
arg	a2 performing the equivalent ||| t a2	count=1
arg	metatable for ||| metatable	count=1
module	io ||| io	count=4
module	variable number of arguments ||| lua	count=1
module	dado ||| lua	count=4
function	o nil si ||| getmetatable	count=1
function	traceback ||| traceback	count=1
module	lua_atpanic) que ||| lual	count=1
module	top of the ||| lual	count=3
module	returns the ||| lua	count=7
function	userdata leve e ||| islightuserdata	count=1
module	not null ||| lual	count=1
module	lua_newstate con una función ||| lual	count=1
module	index to ||| lual	count=1
arg	o una [arg] ||| formato [arg]	count=3
module	значение lua по заданному ||| lua	count=1
function	carrega e executa a ||| dostring	count=1
arg	erstellt ein ||| name	count=1
module	equivalent to lua_pushstring ||| lua	count=1
arg	esta função retorna table ||| table index	count=1
module	en caso de ||| lual	count=1
function	obtém informação sobre um ||| getupvalue	count=1
module	la pila y retorna ||| lua	count=1
module	to that ||| lual	count=1
function	semántica del operador < ||| lessthan	count=1
module	o tipo ||| lua	count=2
function	ohne dabei metamethoden ||| rawset	count=1
module	um número e retorna ||| lual	count=3
function	вызывает функцию [function] с опциональным ||| [function]	count=1
module	the new value ||| lua	count=1
function	campo e de la ||| getmetafield	count=1
arg	na [arg] ||| x [arg]	count=1
function	current hook mask ||| gethookmask	count=1
module	execução e ||| lua	count=2
module	lual_checkudata except ||| lual	count=1
module	a binary string ||| string	count=1
arg	asigna valor ||| valor	count=1
module	está en la ||| lua	count=1
module	cria um ||| lua	count=1
module	ser ||| lua	count=1
module	into the given valid ||| lua	count=1
module	вершину стека ||| lua	count=1
module	string in ||| lual	count=1
module	devuelve la ||| lua	count=1
arg	path fornecido ||| path	count=1
module	proceso lo ||| lua	count=1
module	gegebenen gültigen [module] auf ||| [module]	count=1
module	tp o qual ||| lua	count=1
module	cadeia de ||| lual	count=1
arg	[arg_1] функцией перехвата ||| [arg_2] hook [arg_1]	count=1
function_arg	[function_1] tabela fornecida ||| [arg_2] [function_1]	count=2
module	y estableciendo una ||| lual	count=1
function	el [function] ||| [function]	count=11
function	the zero-terminated string pointed ||| pushstring	count=1
module	sets a ||| lua	count=1
module	mueve el elemento que ||| lua	count=1
module	creates a ||| lual	count=3
function	the ||| getmetatable	count=2
function	retorna o ||| getuservalue	count=1
module	yield (see §4 ||| lua	count=1
module	es 0 ||| lua	count=1
module	e k é ||| lua	count=1
arg	filename ||| filename	count=1
arg	das [arg] an ||| table pos [arg]	count=1
module	core running the call ||| lual	count=1
module	pilha ||| lual	count=4
module	elements ||| lua	count=2
module	faz o equivalente de ||| lua	count=1
module	длину ||| lua	count=1
function_arg	comienza o [arg_2] ||| [arg_2] [function_1]	count=5
module	+ sz elements ||| lual	count=1
module	superior ||| lua	count=6
module	a coloca na pilha ||| lua	count=1
function	the type encoded by ||| typename	count=1
module	в ||| lual	count=2
module	uma função c ||| lua	count=1
module	muda a ||| lua	count=1
module	fornecido é nil ||| lua	count=1
module	lual_reg) na ||| lual	count=1
arg	вызывает функцию [arg] в защищенном ||| [arg]	count=1
function	retorna o valor ||| getuservalue	count=1
module	valor maior ||| math	count=1
arg	at [arg] of the ||| [arg] local	count=1
module	at ||| lual	count=6
module	posición del índice válido ||| lua	count=1
module	the type of ||| lua	count=1
module	codificado pelo valor tp ||| lua	count=1
module	co-rotina ||| lua	count=1
function	unten verschoben werden ||| remove	count=1
arg	esta função retorna ||| index value	count=1
module	userdata leve e v ||| lua	count=1
module	if it ||| debug	count=1
function	retoma uma ||| resume	count=1
function	ponteiro p representado como ||| rawgetp	count=1
module	valor en ||| lua	count=11
module	intérprete de ||| lua	count=1
module	metatable associated with name ||| lual	count=1
function	error ||| error	count=1
module	lua value ||| lual	count=1
module	função ou invocação ||| lua	count=1
function	[function] whence as ||| [function]	count=3
function	setzt eine ||| seeall	count=1
module	function argument ||| lual	count=5
arg	перехвата ||| thread	count=1
module	acceso directo ||| lua	count=1
function_arg	натуральный логарифм [arg_2] ||| [function_1] [arg_2]	count=1
module	quociente [module] direção ||| [module]	count=1
module	como ||| lua	count=3
module	retorna um ||| lua	count=1
module	index1 es menor que ||| lua	count=1
module	их, [module] оставляет ||| [module]	count=1
module	esta função ||| lua	count=2
module	variable number ||| lua	count=1
module	pila actual ||| lua	count=1
module	s reemplazando cualquier ||| lual	count=1
module	f ||| lua	count=2
arg	de índices negativos i ||| i j	count=1
module	el índice válido y ||| lua	count=1
module	pilha um novo ||| lua	count=1
module	equivalent ||| io	count=1
module	as ||| lual	count=5
module	correspondiente ||| lua	count=1
arg	arquivo filename ||| filename	count=1
module	índice aceptable en un ||| lua	count=3
arg	lee [arg] (si modo ||| [arg]	count=1
arg	table a1 ||| a1 f e t	count=1
module	top of the stack ||| lua	count=1
module	checks ||| lual	count=3
function	error adiciona ||| error	count=1
module	f as the ||| lua	count=1
module	valor de ||| lua	count=4
module	table onto ||| lual	count=1
module	fornecido para ||| lua	count=6
arg	[arg_1] + width ||| [arg_1] [arg_2]	count=4
module	usado por [module] ||| [module]	count=2
module	la fecha y hora ||| os	count=1
module	loads a string ||| lual	count=1
arg	??? (если mode ||| mode	count=1
module	стек по ||| lua	count=1
module	is a table and ||| lual	count=1
arg	time t1 to ||| t1	count=1
module	argumento arg ||| lual	count=6
module	la ||| lua	count=52
module	a structure used ||| lua	count=1
module	pilha ao buffer ||| lual	count=1
module	c string in a ||| lual	count=1
module	uma função como um ||| lua	count=1
module	sz elements raising an ||| lual	count=1
module	estabelece ||| lua	count=4
module	para terminar [module] hospedeiro ||| [module]	count=1
module	the c function ||| lua	count=1
module	é o ||| lua	count=3
module	äquivalent zu file ||| io	count=1
module	contador de ||| lua	count=1
module	tipo ||| lua	count=6
module	si el argumento narg ||| lual	count=6
module	de la misma ||| lua	count=1
module	objetos ||| lua	count=1
module	de uma interpretador lua ||| lua	count=1
module	the lua core ||| lua	count=1
function	die quadratwurzel ||| sqrt	count=1
module	começa e ||| lua	count=1
module	the values ||| lua	count=1
module	estado inteiro ||| lua	count=1
module	dada uma ||| table	count=1
module	el índice aceptable para ||| lua	count=1
function	o valor huge_val um ||| huge	count=1
arg	den ||| x	count=1
module	no array l (mas ||| lual	count=1
module	o tamanho fornecido ||| lua	count=1
module	no ||| debug	count=1
module	sets a new panic ||| lua	count=1
module	del índice aceptable index1 ||| lua	count=1
module	el estado dado de ||| lua	count=1
module	novo fluxo de ||| lua	count=1
module	baixo os ||| lua	count=1
module	given state to ||| lua	count=1
function	fractional part of ||| mininteger	count=1
module	is ||| lual	count=7
module	конвертирует значение lua по ||| lua	count=1
module	binary string ||| string	count=1
module	not have a ||| debug	count=1
function	não é válido e ||| isnone	count=1
module	el resultado del operador ||| lua	count=1
arg	[arg] como ||| [arg]	count=6
module	o byte c ||| lual	count=1
module	tabla en la ||| lual	count=1
module	memoria ||| lua	count=3
function	t[k], where t ||| getfield	count=1
module	lual_newmetatable) e retorna o ||| lual	count=1
function	lua_gettable mas faz um ||| rawget	count=1
function	as armazena de fato) ||| newlibtable	count=1
module	si el valor en ||| lua	count=3
module	size optimized to ||| lual	count=1
module	die datei file ||| file	count=1
module	1 ||| lua	count=12
module	fornecida ||| lual	count=1
arg	y que arredonda o ||| y	count=1
arg	es falso por ejemplo ||| mensaje	count=1
function	[function] and returns ||| [function]	count=1
module	uma cadeia e ||| lua	count=1
function	arquivo válido ||| type	count=1
module	salida estándar de ||| lual	count=1
module	o valor de ||| lua	count=1
module	es un userdata completo ||| lua	count=1
module	the function ||| lual	count=5
module	reserva de memoria ||| lual	count=1
module	grande o igual ||| math	count=1
function	ativação ||| debug	count=1
function	a reasonable format ||| tolstring	count=1
arg	функция присваивает значение value ||| value	count=1
function	code making the call ||| checkversion	count=1
arg	the given table ||| table	count=1
function_arg	[function_1] t1 ||| os [function_1] t2 [arg_2]	count=3
arg	retorna o ||| x	count=1
module	raw ||| lua	count=1
module	el situado en la ||| lua	count=1
module	actual y 0 en ||| lua	count=1
module	valor no ||| lua	count=13
module	de execução e 0 ||| lua	count=1
arg	tabelle ||| what	count=1
module	otros valores es 0 ||| lua	count=1
arg	f con ||| f	count=1
module	na tabela ||| lual	count=1
module	[module] with ||| [module]	count=2
module	um manipulador de arquivo ||| io	count=1
module	coloca ||| lual	count=2
module	se refiere ||| lua	count=1
arg	eine tabelle mit ||| thread function what	count=2
module	if l ||| lual	count=1
module	um fluxo de execução ||| lua	count=1
module	la "longitud" ||| lua	count=1
arg	definido pela função ||| thread	count=1
function	[function] count ||| [function]	count=3
module	refiere ||| lua	count=1
module	returns 1 if ||| lua	count=1
module	índice t para el ||| lual	count=1
arg	of pattern (see §6 ||| s pattern init plain	count=1
arg	[arg] plus ||| whence [arg]	count=3
arg	[arg] to ||| [arg]	count=3
function	tonumber tries to ||| tonumber	count=1
arg	base ||| e base	count=1
arg	arco tangente de y/x ||| y x	count=1
module	e retorna esse endereço ||| lua	count=1
module	do fluxo) ||| lua	count=1
module	the top ||| lual	count=3
module	upvalue ||| lua	count=1
module	formatada e retorna ||| lua	count=1
module	diferentes de informação sobre ||| lua	count=1
module	outro ||| math	count=1
function	um trecho binário ||| dump	count=1
module	retornados lua_type ||| lua	count=1
module	para preencher ||| lua	count=1
arg	por offset ||| offset	count=1
function	в этот индекс ||| settop	count=1
module	a null ||| lua	count=3
module	el índice aceptable o ||| lua	count=1
module	string ||| lual	count=12
module	entradas no array l ||| lual	count=1
function	memory-allocation function of ||| getallocf	count=1
arg	prog ||| prog	count=3
arg	[arg_1] uma ||| [arg_2] [arg_1]	count=2
function	registro de activación dado ||| setlocal	count=1
arg	zeichenkette [arg] umgekehrt darstellt ||| [arg]	count=1
module	конвертирует значение lua ||| lua	count=1
module	the registry (see lual_newmetatable) ||| lual	count=1
module	la situación ||| lua	count=3
module	nombre del ||| lua	count=1
module	execução da co-rotina ||| coroutine	count=1
function	lua float to a ||| numbertointeger	count=1
module	tipo para arrays ||| lual	count=2
arg	function f with ||| f	count=1
module	es un userdata ||| lua	count=1
module	a estabelece como a ||| lua	count=1
module	lua (llamando ||| lua	count=1
arg	tabela ||| table	count=1
module	o nome do tipo ||| lua	count=1
module	returns ||| lual	count=6
module	o lua_tnone ||| lua	count=1
arg	sets the metatable for ||| metatable	count=1
module	a new panic function ||| lua	count=1
arg	статус [arg] ||| [arg]	count=3
function	a va_list instead of ||| pushvfstring	count=1
module	invocação ||| lua	count=1
module	leve e ||| lua	count=1
function	função alocadora de um ||| setallocf	count=1
arg	n from the ||| n	count=1
module	argumento ||| lual	count=12
module	posición del ||| lua	count=8
module	aceptable index2 siguiendo ||| lua	count=1
module	допустимый индекс, или 0 ||| lua	count=1
module	com um tamanho ||| lual	count=1
module	o equivalente de ||| lua	count=1
module	the elements above this ||| lua	count=1
arg	функцией перехвата ||| thread	count=1
function	controla ||| gc	count=2
arg	cadeia [arg] fornecida ||| [arg]	count=1
module	gegebenen [module] ein ||| [module]	count=1
module	de t[k] ||| lua	count=1
module	una posición "vacía" en ||| lua	count=1
module	estabelece seu [module] como ||| [module]	count=1
function	converte um valor no ||| tocfunction	count=1
module	aceptable para ||| lua	count=1
arg	to the [arg] ||| whence [arg]	count=1
function	garante que ||| getsubtable	count=1
module	1 if ||| lua	count=1
arg	función [arg] ||| [arg]	count=1
module	um novo bloco de ||| lua	count=1
module	puede invocar metamétodos) ||| lua	count=1
module	de uma interpretador ||| lua	count=1
module	acima desse índice ||| lua	count=1
module	pushes onto ||| lua	count=2
module	usado ||| lua	count=2
module	pushes that table onto ||| lual	count=1
module	em um dado ||| lua	count=1
module	é o ||| lual	count=1
arg	von s [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg] равно false ||| [arg]	count=1
module	metatabla del objeto ||| lual	count=1
module	ou invocação de ||| lua	count=1
module	tname (veja lual_newmetatable) e ||| lual	count=1
module	допустимому индексу: для ||| lua	count=1
module	o valor no ||| lua	count=12
module	ставит ||| lua	count=1
module	número retorna ||| lual	count=3
function_arg	[function_1] continúa ||| [function_1] [arg_2]	count=1
function	começa e retoma ||| resume	count=1
module	(see ||| lual	count=3
module	un puntero ||| lua	count=2
module	tabla en ||| lual	count=1
module	um novo fecho c ||| lua	count=1
module	función c el valor ||| lua	count=1
module	la función hook de ||| lua	count=1
module	stack the lua ||| lua	count=1
function	the value [function] is ||| [function]	count=2
module	coloca en la pila ||| lua	count=4
function	checks whether ||| checkstring	count=1
module	igual a ||| lua	count=1
module	created the lua state ||| lual	count=1
module	de lua situado en ||| lua	count=2
module	function as a binary ||| lua	count=1
module	into the [module] returns ||| [module]	count=1
module	a pointer to a ||| lua	count=1
arg	retorna table ||| table	count=2
arg	por [arg] más ||| de_dónde [arg]	count=1
module	len onto [module] ||| [module]	count=2
module	element into ||| lua	count=1
module	chamada ceder ||| lua	count=2
module	of raising an ||| lual	count=1
arg	[arg_1] nombre_nuevo ||| [arg_1] [arg_2]	count=2
module	es inválida (esto ||| lua	count=1
function	retorna el mismo ||| checknumber	count=1
function	si éste ||| getmetatable	count=1
arg	der zeichenkette [arg] darstellt ||| [arg]	count=1
function	code making the ||| checkversion	count=1
module	é um ||| lual	count=5
function	carga y ejecuta ||| dofile	count=1
module	de execução rodando em ||| lua	count=1
module	[module] procurar ||| [module]	count=2
module	caso ||| lual	count=1
module	a lual_prepbuffsize com ||| lual	count=1
function	a metatabela para a ||| setmetatable	count=1
module	tabela na pilha ||| lual	count=1
module	vuelca una función ||| lua	count=1
module	userdata es el tamaño ||| lua	count=1
module	da ||| lual	count=10
module	arrays de ||| lual	count=2
arg	esta função ||| index value	count=1
module	pilha o valor t[k], ||| lua	count=1
arg	(если mode ||| mode	count=1
module	situado ||| lua	count=8
module	carga un ||| lual	count=1
module	novo bloco de memória ||| lua	count=1
function	the square root ||| sqrt	count=1
arg	índice local [arg] ||| [arg] nivel	count=1
module	igual ||| math	count=2
module	the [module] a new ||| [module]	count=1
module	válido fornecido deslocando para ||| lua	count=1
function_arg	[function_1] with ||| [arg_2] [function_1]	count=4
module	uma cadeia e retorna ||| lual	count=1
arg	x na [arg] ||| x [arg]	count=1
module	es puede invocar ||| lua	count=1
arg	loads [arg_2] ||| [arg_2] [arg_1]	count=2
module	s ||| lua	count=1
module	store all entries ||| lual	count=1
function	false ; ||| assert	count=1
module	en caso contrario ||| lua	count=2
module	parte ||| lual	count=2
module	a binary chunk ||| lua	count=1
function	and the fractional part ||| modf	count=1
module	la parte superior de ||| lua	count=6
module	da [module] com ||| [module]	count=1
module	com userdata ||| lua	count=1
module	del tipo codificado ||| lua	count=1
module	that created the lua ||| lual	count=1
arg	given [arg] which ||| value [arg]	count=1
arg	функцию [arg] в ||| [arg]	count=1
module	em ||| math	count=1
module	when ||| lua	count=1
module	codificado por el ||| lua	count=1
module	topo da pilha abaixo ||| lual	count=1
arg	función func ||| func	count=1
function	devuelve ||| getmetatable	count=1
function	liefert die aktuelle hook-maske ||| gethookmask	count=1
module	função ou um ||| lua	count=1
module	new [module] with all ||| [module]	count=1
arg	[arg_1] chunk ||| [arg_2] [arg_1]	count=2
module	as entradas no ||| lual	count=1
module	pfad welcher von ||| package	count=1
module	por el ||| lua	count=1
module	array l (veja ||| lual	count=1
module	é uma ||| lual	count=2
arg	esta función asigna el ||| valor	count=1
module	situado en ||| lual	count=1
module	do tipo tname ||| lual	count=1
module	above this index to ||| lua	count=1
function	registro de activación dado ||| getlocal	count=1
module	liefert eine ||| string	count=1
module	dado fluxo de execução ||| lua	count=1
function	interface genérica ||| assert	count=1
module	de lua (llamando ||| lua	count=1
function_arg	[function_1] [arg_2] ||| [function_1] thread hook [arg_2]	count=1
module	se o [module] fornecido é ||| [module]	count=1
module	para un string es ||| lua	count=1
module	no índice fornecido é ||| lua	count=8
module	um manipulador de ||| io	count=1
module	tamaño del bloque ||| lua	count=1
arg	first match of pattern ||| s pattern	count=1
module	de um ||| lua	count=5
arg	делает данную [arg_2] ||| [arg_2] hook [arg_1]	count=1
function	de depuração ||| sethook	count=1
function	en la posición dada) ||| replace	count=1
module	un userdata es el ||| lua	count=1
module	only when ||| lua	count=1
arg	seconds from time t1 ||| t1	count=1
module	longitud ('#'); para un ||| lua	count=1
function	full userdata at ||| getuservalue	count=1
module	resultado ||| lua	count=1
module	top ||| lua	count=2
module	lual_reg) na tabela ||| lual	count=1
module	da ||| lua	count=3
module	si éste no ||| debug	count=1
module	raw assignment ||| lua	count=1
module	and returns a ||| lual	count=1
module	o igual que otro ||| math	count=1
arg	v1 [arg_2] ||| [arg_1] [arg_2]	count=1
module	si se ||| lua	count=1
function	lua ||| getuservalue	count=1
module	ceder (veja ||| lua	count=2
module	pops the ||| lual	count=1
module	em um ||| lua	count=2
module	valor en la situación ||| lua	count=3
module	variable ||| lua	count=4
module	con una ||| lual	count=1
module	lua_tnone si la ||| lua	count=1
module	dem [module] ab ||| [module]	count=1
module	retorna esse ||| lua	count=1
module	o tipo ||| lual	count=1
function	va_list instead of ||| pushvfstring	count=1
module	string y retorna ||| lual	count=1
module	uma continuação (veja ||| lua	count=1
module	metamétodo de liberación ||| lua	count=1
arg	de la ordenación ||| tabla comparador	count=1
module	para armazenar todas as ||| lual	count=1
module	acesso ||| lua	count=1
module	um userdata do tipo ||| lual	count=1
module	liberación de ||| lua	count=1
module	rodando em um ||| lua	count=1
module	table with a size ||| lual	count=1
function	metatabla asociada con el ||| getmetatable	count=1
module	de la pila ||| lual	count=3
arg	the value value to ||| value	count=1
module	liest [module] ||| [module]	count=1
module	cadeia c ||| lua	count=1
module	e indiretamente (através do ||| lua	count=1
module	basada en la ||| lual	count=1
module	la dirección es inválida ||| lua	count=1
module	índice aceptable o ||| lua	count=1
module	fecha y [module] especificadas en ||| [module]	count=1
module	um upvalue de um ||| lua	count=1
module	except that when the ||| lual	count=1
module	desplazar ningún elemento ||| lua	count=1
function	0 de tal modo ||| ipairs	count=1
function	o tamanho pré-definido lual_buffersize ||| prepbuffer	count=1
arg	(wenn [arg] ||| prog [arg]	count=2
module	this macro is equivalent ||| lua	count=1
module	pilha para top ||| lual	count=1
module	estabelece como ||| lua	count=1
module	metamétodos) ||| lua	count=2
module	umgebung erben kann ||| package	count=1
function	__pairs ||| pairs	count=1
module	una posición "vacía" ||| lua	count=1
module	o topo da pilha ||| lua	count=1
module	fichero dado ||| lual	count=1
module	número e ||| lua	count=1
module	índice aceptable es no ||| lua	count=1
module	um número ou ||| lua	count=1
arg	que lee [arg] (si ||| [arg]	count=1
module	buraco ||| lua	count=1
module	este índice ||| lua	count=1
module	se o argumento arg ||| lual	count=6
module	formatada e retorna um ||| lua	count=1
module	idx is a table ||| lual	count=1
arg	[arg] número negativo ||| [arg]	count=1
function	e retoma uma ||| resume	count=1
arg	continúa la ejecución ||| val1	count=1
module	the value at ||| lual	count=2
module	actual y 0 ||| lua	count=1
function	sin invocar ||| rawequal	count=1
module	nova ||| lual	count=1
module	ser un [module] ||| [module]	count=3
function	nil ||| getmetatable	count=2
function	deslocado ||| arshift	count=1
module	converts any lua ||| lual	count=1
arg	the lua closure f1 ||| f1 n1	count=1
arg	nombre_nuevo ||| nombre_nuevo	count=1
arg	liefert eine tabelle mit ||| function what	count=1
module	el valor de lua ||| lua	count=2
function	в качестве параметра ||| len	count=1
function	возвращает функцию-итератор [function] которая ||| [function]	count=1
function	type encoded by the ||| typename	count=1
module	(através ||| lua	count=1
module	the given valid index ||| lua	count=1
module	integer cast to a ||| lual	count=1
module	en la salida ||| lual	count=1
module	novo ||| lua	count=4
function	the stack cannot grow ||| checkstack	count=1
module	liberación ||| lua	count=1
function	a lua_gettable pero realiza ||| rawget	count=1
module	devuelve un [module] ||| [module]	count=1
module	invocar ||| lua	count=1
module	esse índice como o ||| lua	count=1
function	remove o elemento ||| remove	count=1
function	representar um conjunto ||| upper	count=1
function	the value [function] is the ||| [function]	count=2
arg	invoca la función [arg_1] [arg_2] en modo protegido ||| lua pcall [arg_1] [arg_2]	count=1
arg	field a field ||| field	count=1
function	o false ||| assert	count=1
module	vom anfang der datei ||| file	count=1
arg	loads a [arg_2] ||| [arg_2] [arg_1]	count=2
function	or a string convertible ||| isnumber	count=1
module	does not have a ||| debug	count=1
module	valor lua associado ||| debug	count=1
module	función de reserva de ||| lual	count=1
module	la api de ||| lua	count=1
module	grande o igual que ||| math	count=1
module	cria uma nova ||| lual	count=1
function_arg	[function_1] libname ||| [arg_2] [function_1]	count=3
module	elementos lançando um erro ||| lual	count=1
module	liefert den [module] des obersten ||| [module]	count=1
module	the stack to ||| lual	count=1
function	la pila) ||| type	count=1
function	the version number a ||| version	count=1
module	tp el ||| lua	count=1
module	into the [module] returns the ||| [module]	count=1
module	equivalent ||| lua	count=3
module	por la api ||| lua	count=1
module	e indiretamente (através ||| lua	count=1
module	misma ||| lua	count=1
module	mueve el ||| lua	count=1
module	checks whether the ||| lual	count=3
module	the values returned ||| lua	count=1
function	um conjunto de caracteres ||| upper	count=1
function	der globalen ||| seeall	count=1
module	valor maior ou ||| math	count=1
module	de execução rodando ||| lua	count=1
arg	присваивает значение value ||| value	count=1
module	de una ||| lua	count=4
module	basada ||| lual	count=1
module	obj ||| lual	count=1
arg	schreiben (wenn [arg] ||| prog [arg]	count=2
module	retorna o ||| debug	count=1
arg	given table ||| table	count=2
module	longitud del ||| lua	count=1
module	pila el [module] ||| [module]	count=1
function_arg	tangente hiperbólica [arg_2] ||| [function_1] [arg_2]	count=1
arg	uma cadeia então seu ||| s pattern	count=1
module	running the call the ||| lual	count=1
function	valor huge_val um ||| huge	count=1
module	un valor situado en ||| lua	count=1
function	converte o valor ||| tolstring	count=1
arg	x ||| x	count=56
module	superior de ||| lua	count=6
module	или 0 и ставит ||| lua	count=1
module	la parte superior de ||| lual	count=2
module	onde ||| lua	count=2
function	возвращает текущую маску hook’а ||| gethookmask	count=1
module	nome do tipo codificado ||| lua	count=1
arg	des arguments [arg] falsch also ||| [arg]	count=1
module	list l ||| lual	count=1
module	diferentes de informação ||| lua	count=1
arg	usando la función func ||| func	count=1
module	top element into the ||| lua	count=1
module	tabela e ||| lua	count=1
function	retorna o valor absoluto ||| abs	count=1
module	establece el ||| lua	count=1
module	posición del índice obj ||| lual	count=1
module	a ||| bit32	count=1
module	un registro ||| lua	count=2
module	lua (esto es ||| lua	count=1
arg	ou continua ||| val1	count=1
module	ausführung der koroutine ||| coroutine	count=1
arg	[arg] quociente ||| x [arg]	count=1
module	vorgabe welche eine zeichenkette ||| string	count=1
module	para top + ||| lual	count=1
module	this string if ||| lual	count=1
module	de la parte superior ||| lua	count=2
module	al ||| lua	count=1
function	false (i ||| assert	count=1
module	la tabla en ||| lual	count=1
arg	if repl [arg_2] ||| [arg_2] [arg_1]	count=1
module	índice fornecido para ||| lua	count=6
module	basada en la función ||| lual	count=1
function	flush für die standard-ausgabedatei ||| flush	count=1
module	cadeia de comprimento ||| lual	count=1
function	the debugging hook function ||| sethook	count=1
module	los ||| lua	count=2
function	upavalue de una ||| getupvalue	count=1
arg	делает данную [arg_2] ||| [arg_2] [arg_1]	count=3
function	nil if ||| getmetatable	count=1
module	reemplazando cualquier aparición ||| lual	count=1
arg	table das [arg] an position ||| table pos [arg]	count=1
module	de memoria basada en ||| lual	count=1
module	ela ||| lua	count=1
module	userdata ||| lua	count=6
function	va_list ao invés de ||| pushvfstring	count=1
module	situado ||| lual	count=1
module	del bloque de ||| lua	count=1
module	заданному допустимому ||| lua	count=3
module	aceptable para un string ||| lua	count=1
module	retorna a ||| lua	count=1
module	elements above ||| lua	count=1
module	de una variable local ||| lua	count=2
module	todas as ||| lual	count=2
function_arg	comienza o continúa ||| resume co val1	count=2
function	a un elemento fuera ||| isnone	count=1
module	заданному допустимому индексу: для ||| lua	count=1
module	topo da pilha ||| lua	count=2
module	y libera ||| lua	count=1
function	the version number ||| version	count=1
module	0 en ||| lua	count=2
module	fornecido deslocando ||| lua	count=1
module	función ||| lual	count=9
function_arg	coseno hiperbólico [arg_2] ||| [function_1] [arg_2]	count=1
module	tipo ||| lual	count=3
module	função é uma ||| lual	count=1
module	when ||| lual	count=1
module	el índice válido ||| lua	count=1
module	vuelca una ||| lua	count=1
arg	la función func_hook como ||| proceso func_hook	count=1
module	be one the values ||| lua	count=1
arg	offset ||| offset	count=3
module	стека ||| lua	count=1
module	onde t ||| lual	count=1
module	coroutine co ||| coroutine	count=1
function	tabla de entorno de ||| getfenv	count=1
module	la coloca ||| lua	count=2
function	light userdata onto ||| pushlightuserdata	count=1
module	valor ||| lua	count=46
function	trecho binário ||| dump	count=1
module	hora formatada de acordo ||| os	count=1
module	uma função ||| lua	count=4
module	in the registry ||| lual	count=1
module	armazenar ||| lual	count=1
module	superior de ||| lual	count=2
arg	match of pattern ||| s pattern	count=2
module	resultado del operador longitud ||| lua	count=1
module	fornecido é uma cadeia ||| lua	count=1
module	array ||| lual	count=2
module	qual deve ||| lua	count=1
module	wird ||| package	count=1
module	novo userdata completo ||| lua	count=1
function	pushes a traceback ||| traceback	count=1
module	formatada ||| lua	count=1
module	no válido ||| lua	count=1
module	the lua state and ||| lual	count=1
module	esse ||| lual	count=1
module	cria ||| lual	count=1
module	um dado ||| lua	count=2
module	número ou ||| lua	count=1
module	длину данных, ||| lua	count=1
module	es la longitud ||| lua	count=1
module	forma de ||| lua	count=1
module	string una tabla ||| string	count=1
module	en la parte superior ||| lual	count=2
module	допустимый индекс, или ||| lua	count=1
function	un tiempo [function] la ||| [function]	count=1
module	0 en caso contrario ||| lua	count=2
module	armazena de ||| lual	count=1
module	elimina de la parte ||| lua	count=1
module	[module] 0 otherwise ||| [module]	count=1
module	pánico y devuelve ||| lua	count=1
module	verwendet wird um ||| package	count=1
module	fecha y [module] especificadas ||| [module]	count=1
module	parte superior de la ||| lua	count=6
module	mismo de ||| lual	count=1
module	usado por la api ||| lua	count=1
function	минимальный из аргументов ||| min	count=1
module	top element ||| lua	count=1
function	remove o elemento no ||| remove	count=1
module	refiere a un ||| lua	count=1
module	no índice ||| lua	count=18
module	stack and ||| lua	count=6
function	version number a ||| version	count=1
module	pfad ||| package	count=1
module	for the object at ||| lual	count=1
arg	заданную параметром [arg] плюс значение ||| whence [arg]	count=1
arg	[arg] в защищенном ||| f [arg]	count=1
module	crea un nuevo estado ||| lual	count=1
module	created ||| lual	count=1
module	die c-funktion ||| os	count=1
module	receives ||| lua	count=1
module	índice aceptable index2 siguiendo ||| lua	count=1
function_arg	parte fracionária [arg_2] ||| [function_1] [arg_2]	count=1
module	liberación de memoria ||| lua	count=1
module	[module] returns the ||| [module]	count=1
module	se o valor no ||| lua	count=8
function	userdata leve e 0 ||| islightuserdata	count=1
module	armazena ||| lual	count=1
arg	de la co-rutina co ||| co	count=1
arg	o continúa la ejecución ||| val1	count=1
module	en la situación ||| lua	count=3
function	función hook actual ||| gethook	count=1
module	pedaços diferentes de ||| lua	count=1
module	+ sz elements raising ||| lual	count=1
module	tabla es el resultado ||| lua	count=1
function_arg	[function_1] x en ||| [function_1] [arg_2]	count=4
module	стека в ||| lua	count=1
module	fluxo) para ||| lua	count=1
module	the [module] returns ||| [module]	count=2
module	pilha o ||| lua	count=1
module	acceso directo (sin metamétodos) ||| lua	count=1
module	de ||| io	count=1
module	tabla es el ||| lua	count=1
module	string and returns ||| lual	count=2
module	desse índice ||| lua	count=1
arg	f1 ||| f1 n1	count=3
function	if it does ||| getmetatable	count=1
arg	if repl is a ||| s pattern repl n	count=1
function	função c ou lua ||| isfunction	count=1
arg	[arg_1] v2 ||| [arg_1] [arg_2]	count=2
function	de arquivo válido ||| type	count=1
arg	this function returns table ||| table index	count=1
arg	value value to the ||| value	count=1
module	estrutura usada ||| lua	count=1
module	function and returns the ||| lua	count=1
module	narg de la ||| lual	count=6
module	para un userdata ||| lua	count=1
module	número e ||| lual	count=3
module	liefert ||| lua	count=1
arg	uma ||| s pattern	count=1
module	produce ||| lua	count=1
arg	f2 ||| n1 f2	count=3
module	de um número ||| lua	count=1
module	de informação sobre ||| lua	count=1
module	их, [module] оставляет результат ||| [module]	count=1
module	string que ||| string	count=1
module	topo da [module] com ||| [module]	count=1
arg	elemento value [arg_2] ||| table insert [arg_2] [arg_1]	count=3
module	name tname ||| lual	count=1
module	de depuración ||| lua	count=1
module	aceptable en un proceso ||| lua	count=1
function	string r ||| gsub	count=1
arg	esta função [arg_2] ||| [arg_2] [arg_1]	count=4
module	un número ||| lual	count=4
module	fornecido deslocando para baixo ||| lua	count=1
function_arg	квадратный корень [arg_2] ||| [function_1] [arg_2]	count=1
module	tabela com ||| lual	count=1
module	valor t[fname], onde t ||| lual	count=1
arg	tabelle ||| table	count=1
module	el valor de ||| math	count=1
module	для ||| lua	count=1
module	lual_newmetatable) ||| lual	count=2
function	retorna esse número ||| checknumber	count=1
module	a lua integer ||| lua	count=1
function	si ||| getmetatable	count=1
module	ou igual a ||| math	count=1
module	ceder (veja §4 ||| lua	count=2
arg	número [arg] da ||| f [arg]	count=1
module	e v é o ||| lua	count=1
module	lua_pushfstring except ||| lua	count=1
module	una copia ||| lual	count=1
module	pilha uma cadeia formatada ||| lua	count=1
module	t é o valor ||| lual	count=1
arg	[arg_1] func_hook como ||| [arg_2] [arg_1]	count=1
module	tabela da pilha e ||| lua	count=1
module	el tipo ||| lua	count=2
module	the value ||| lual	count=2
function	por el string r ||| gsub	count=1
module	en un proceso de ||| lua	count=1
arg	de y/x en radianes ||| y	count=1
arg	nombre_viejo [arg_2] ||| [arg_1] [arg_2]	count=1
module	siguiendo ||| lua	count=1
function	metatable of the ||| getmetatable	count=1
module	buffer b (see ||| lual	count=1
function	converts ||| tocfunction	count=1
module	size to top ||| lual	count=1
module	returned by lua_type ||| lua	count=1
module	función de "pánico" ||| lual	count=1
arg	of [arg_2] ||| [arg_1] [arg_2]	count=2
module	valor numérico cualquiera ||| math	count=1
module	table at index t ||| lual	count=1
module	es un string ||| lual	count=1
module	se o [module] fornecido ||| [module]	count=1
function	string y retorna éste ||| checkstring	count=1
function	o valor huge_val ||| huge	count=1
module	the top of the ||| lua	count=1
module	retorna ||| lual	count=12
module	es no válido esto ||| lua	count=1
module	y 0 ||| lua	count=2
module	tabela no ||| lua	count=2
module	a given ||| lua	count=2
module	invocando lua_newstate con ||| lual	count=1
function	carga y ejecuta el ||| dofile	count=1
module	ruft die c-funktion ||| os	count=1
function	convierte ||| tocfunction	count=1
module	formatada e ||| lua	count=1
function	la cesión de una ||| yield	count=1
module	which ||| lua	count=1
module	o ||| lual	count=14
function	dessen länge ||| len	count=1
module	gegebenen gültigen [module] zu ||| [module]	count=1
module	entre diferentes ||| lua	count=1
function	notwendig nach [function] ||| [function]	count=3
function	entorno de un ||| getfenv	count=1
module	que otro ||| math	count=1
module	liest [module] im ||| [module]	count=1
module	copia del string ||| lual	count=1
arg	se repl é uma ||| pattern repl	count=1
arg	la función ||| proceso	count=4
module	de liberación de memoria ||| lua	count=1
module	obtiene información ||| lua	count=2
module	buffer b (veja ||| lual	count=3
module	ao buffer b ||| lual	count=3
function	возвращает состояние нити l ||| status	count=1
function	el valor huge_val un ||| huge	count=1
module	converts ||| lua	count=1
module	variable stored in the ||| lua	count=1
arg	el estatus [arg] como ||| [arg]	count=1
module	am gegebenen [module] eine tabelle ||| [module]	count=1
function	tiempo [function] la fecha ||| [function]	count=1
module	de memoria si existe) ||| lua	count=1
function	sets the metatable of ||| setmetatable	count=1
arg	от времени [arg] до времени ||| t2 [arg]	count=1
module	no topo da pilha ||| lual	count=2
function	äquivalent ||| write	count=1
module	aceptable es un userdata ||| lua	count=1
function_arg	if [arg_2] ||| [arg_2] [function_1]	count=1
module	la parte ||| lual	count=2
module	be used only when ||| lua	count=1
module	co-rutina co ||| coroutine	count=1
module	tipo para arrays de ||| lual	count=2
function	возвращает функцию-итератор [function] которая при ||| [function]	count=1
module	com um tamanho otimizado ||| lual	count=1
function	logaritmo decimal base 10 ||| log10	count=1
function	coseno hiperbólico de ||| cosh	count=1
arg	de la función func ||| proceso func	count=1
module	é uma tabela ||| lual	count=1
module	un ||| lua	count=20
function	function the table ||| ipairs	count=1
module	o [module] ||| [module]	count=2
arg	[arg_1] pattern ||| [arg_2] [arg_1]	count=4
module	dada ||| lua	count=1
module	should be used ||| lua	count=1
arg	fecho lua f1 ||| f1 n1	count=2
module	el estado de ||| lua	count=1
module	no válido esto ||| lua	count=1
module	función c el ||| lua	count=1
function	o nil si éste ||| getmetatable	count=1
function	current hook function ||| gethook	count=1
arg	von s [arg_2] ||| [arg_1] [arg_2]	count=1
module	não as armazena de ||| lual	count=1
module	are ||| lual	count=1
function	y devuelve la vieja ||| atpanic	count=1
module	lua ||| debug	count=1
module	byte ||| lual	count=1
module	estado para f ||| lua	count=1
module	индекс, или 0 ||| lua	count=1
module	establece el valor de ||| lua	count=1
module	lua_atpanic) que imprime un ||| lual	count=1
arg	the given [arg] which ||| value [arg]	count=1
module	idx ||| lual	count=2
arg	проверка равенства [arg] и ||| [arg]	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=81
arg	posição [arg] ||| list [arg]	count=1
module	works like lual_checkudata except ||| lual	count=1
module	aparición del string p ||| lual	count=1
module	similar ||| lua	count=4
module	b (see ||| lual	count=1
module	função aloca ||| lua	count=1
module	el equivalente ||| lua	count=2
function	stack a [function] ||| [function]	count=1
module	*l ||| lual	count=1
module	armazenar todas as ||| lual	count=1
module	called function to ||| lua	count=1
function	invocação de função específica ||| getinfo	count=1
module	un intérprete de ||| lua	count=1
module	creates a new table ||| lual	count=1
module	esta função produz ||| lual	count=2
module	índice ||| lua	count=39
function_arg	el [function_1] [arg_2] ||| [function_1] [arg_2]	count=38
module	establece el valor ||| lua	count=1
module	index idx ||| lua	count=1
module	com um ||| lual	count=1
arg	are ||| i j	count=2
function	adiciona ||| addchar	count=1
module	t é ||| lua	count=2
module	a la ||| lua	count=1
module	idx and ||| lua	count=1
function	retorna una referencia en ||| ref	count=1
module	datum und [module] uhrzeit entsprechend ||| [module]	count=1
arg	[arg] fornecida ||| value [arg]	count=2
module	the top of ||| lual	count=3
module	elementos lançando ||| lual	count=1
module	é uma cadeia e ||| lual	count=1
module	value at the top ||| lual	count=1
module	estándar de error ||| lual	count=1
module	и ставит ||| lua	count=1
function	una referencia en la ||| ref	count=1
function	um ||| type	count=1
module	função é ||| lual	count=6
module	es un userdata del ||| lual	count=1
function	if ||| getmetatable	count=2
module	la pila actual y ||| lua	count=1
function	interpreter runtime ||| getstack	count=1
module	proceso lo coloca en ||| lua	count=1
arg	fichero en el ||| nombre_de_fichero	count=1
arg	a field ||| field	count=1
module	é ||| lua	count=14
module	in ||| lual	count=4
module	nombre del tipo codificado ||| lua	count=1
function	tonumber tries to convert ||| tonumber	count=1
module	el objeto en la ||| lual	count=1
module	y la ||| lua	count=2
module	tamanho fornecido coloca na ||| lua	count=1
function	máscara del hook actual ||| gethookmask	count=1
module	fornecido é ||| lua	count=8
module	o tipo para arrays ||| lual	count=1
module	comprimento n copiada ||| lual	count=1
arg	local [arg] ||| [arg] nivel	count=1
module	retorna el nombre ||| lua	count=1
function	retorna como tipo lua_integer ||| checkinteger	count=1
function	returns the square root ||| sqrt	count=1
module	manipulador de arquivo ||| io	count=1
module	idx and the ||| lua	count=1
module	una tabla de ||| lua	count=2
module	una función c el ||| lua	count=1
module	un valor ||| math	count=1
function	desde el proceso principal ||| running	count=1
module	co-rotina co ||| coroutine	count=1
function	adds the value at ||| addvalue	count=1
function	a reference in ||| ref	count=1
module	inválida (esto ||| lua	count=1
module	exceto que ela ||| lua	count=1
module	o valor no topo ||| lual	count=1
module	any lua value at ||| lual	count=1
module	para arrays ||| lual	count=2
module	no índice válido fornecido ||| lua	count=1
module	fluxo) para o ||| lua	count=1
module	running the ||| lual	count=1
module	and pops the ||| lual	count=1
arg	tangente de x ||| x	count=1
module	mas faz ||| lua	count=1
module	table at index ||| lual	count=1
module	registry ||| lual	count=1
function	una referencia en ||| ref	count=1
function	fluxo de execução e ||| isthread	count=1
module	esta função é ||| lua	count=1
module	be ||| lua	count=2
function	a ||| getmetatable	count=1
module	by ||| lua	count=1
module	[module] стек строку, ||| [module]	count=1
function	entorno de ||| setfenv	count=1
module	argumento narg ||| lual	count=6
arg	если значение [arg] ||| [arg]	count=1
arg	с индексом [arg] функции ||| func [arg]	count=2
arg	table a1 ||| a1 f e	count=1
function	activación dado ||| getlocal	count=1
arg	das [arg] an position ||| table pos [arg]	count=1
function_arg	[function_1] t ||| [function_1] [arg_2]	count=4
module	does not have ||| debug	count=1
module	[module] hospedeiro ||| [module]	count=1
module	igual a qualquer ||| math	count=1
arg	эта функция эквивалентна функции ||| command	count=1
module	índice para preencher ||| lua	count=1
arg	la ordenación ||| tabla comparador	count=1
module	the valid index idx ||| lua	count=1
module	um ||| package	count=1
module	bloco de memória com ||| lua	count=1
function	acerca de un upavalue ||| getupvalue	count=1
function	valor ||| getuservalue	count=1
arg	die [arg] mit ||| [arg]	count=1
function	elemento fuera de ||| isnone	count=1
module	retorna o nome ||| lua	count=1
function	um manipulador ||| type	count=1
module	aceptable o lua_tnone ||| lua	count=1
module	datei-handle ist ||| io	count=1
module	fluxo de execução e ||| lua	count=1
module	en una función c ||| lua	count=1
module	to lual_prepbuffsize ||| lual	count=1
module	es un string ||| lua	count=1
module	índice aceptable para ||| lua	count=1
arg	t1 to ||| t1	count=1
module	pila sin ||| lua	count=1
module	erben kann ||| package	count=1
module	f as ||| lua	count=1
function_arg	raiz quadrada [arg_2] ||| [arg_2] [function_1]	count=1
function	devuelve la ||| getmetatable	count=1
function	éste ||| getmetatable	count=1
arg	v1 [arg_2] ||| [arg_2] [arg_1]	count=1
module	nil si éste no ||| debug	count=1
function	tangens ||| tan	count=1
module	pila la tabla de ||| lua	count=1
arg	the [arg] ||| whence [arg]	count=1
module	completo ||| lua	count=2
module	un intérprete de lua ||| lua	count=1
function	[function] un ||| [function]	count=2
function	exit ||| exit	count=1
arg	closure f1 refer to ||| f1	count=1
module	tabela e ||| lual	count=1
module	the metatable of the ||| debug	count=1
module	el mismo de la ||| lual	count=1
module	gültigen [module] zu einem ||| [module]	count=1
module	um tamanho otimizado para ||| lual	count=1
function	the table ||| ipairs	count=1
arg	invoca [arg_1] [arg_2] en modo protegido ||| [arg_1] [arg_2]	count=1
module	obtiene información acerca de ||| lua	count=2
arg	на буферизованный режим ||| size	count=1
module	valid index shifting up ||| lua	count=1
module	un userdata es ||| lua	count=1
module	dado estado para f ||| lua	count=1
module	e retorna um ||| lua	count=1
arg	arguments [arg] falsch ||| [arg]	count=1
module	string p por ||| lual	count=1
arg	al nivel ||| nivel	count=1
function	unten ||| remove	count=1
module	si la [module] ha ||| [module]	count=1
module	salida estándar ||| lual	count=1
module	using the ||| lual	count=1
module	esto ||| lua	count=1
arg	o las n ||| n	count=1
module	c ao ||| lual	count=1
module	= ||| lua	count=1
module	"vacía" en ||| lua	count=1
arg	[arg] list ||| list [arg]	count=1
module	los objetos en el ||| lua	count=1
module	top of the ||| lua	count=1
module	si la ||| lua	count=1
module	de um dado ||| lua	count=1
module	información acerca de ||| lua	count=2
module	optimized to store ||| lual	count=1
module	t para el ||| lual	count=1
module	uma cadeia ||| lual	count=3
function	el valor de pi ||| pi	count=1
module	registra todas as ||| lual	count=1
module	checks whether ||| lual	count=3
function	números em lua ||| number	count=1
arg	retorna message ||| message level	count=1
function	comienza ||| resume	count=1
module	ensures ||| lual	count=1
module	require ||| package	count=2
arg	elemento value ||| value	count=1
function	the value [function] ||| [function]	count=2
arg	y/x en ||| y	count=1
module	si la [module] ha finalizado ||| [module]	count=1
function	iterator function ||| lines	count=1
module	array l (mas ||| lual	count=1
function	deslocado ||| rshift	count=1
module	mismo de la pila ||| lual	count=1
module	para a ||| lual	count=1
module	función de ||| lual	count=2
module	por la ||| lua	count=1
module	l is not ||| lual	count=1
module	um fluxo de ||| lua	count=2
function	éste no tiene ||| getmetatable	count=1
module	por [module] procurar por ||| [module]	count=2
module	array l (veja lual_reg) ||| lual	count=1
function	c (0 ó 1) ||| toboolean	count=1
arg	[arg_1] pattern ||| [arg_1] [arg_2]	count=4
arg	[arg] a ||| t2 [arg]	count=1
module	a un string ||| lua	count=1
function	dumps a function ||| dump	count=1
module	a tabela no índice ||| lua	count=2
module	that it receives a ||| lua	count=1
arg	pattern na cadeia s ||| s pattern	count=1
module	índice como o ||| lua	count=1
arg	zur durch [arg] gegebenen position ||| whence [arg]	count=1
module	como a ||| lua	count=1
module	função é equivalente ||| lua	count=1
module	pilha abaixo de ||| lual	count=1
module	ud ||| lua	count=1
function	gancho corrente (como ||| gethook	count=1
module	número y ||| lual	count=2
function	coloca una función c ||| pushcfunction	count=1
module	the same ||| lual	count=1
module	el liberador ||| lua	count=1
module	debug ||| debug	count=4
function	when the running ||| running	count=1
module	o valor ||| lual	count=3
function	convierte en ||| tocfunction	count=1
function	la tabla [function] un objeto ||| [function]	count=1
arg	traverse all fields of ||| index	count=1
module	upvalues ||| lual	count=1
function	nil si ||| getmetatable	count=1
module	índice fornecido para uma ||| lua	count=2
module	en la posición ||| lua	count=8
module	del tipo ||| lua	count=1
function	c system ||| execute	count=1
module	reemplazando cualquier aparición del ||| lual	count=1
function_arg	the table [arg_2] ||| [arg_2] [function_1]	count=4
function	этот индекс ||| settop	count=1
module	between the valid ||| lua	count=1
module	must ||| lua	count=1
module	called function to yield ||| lua	count=1
module	the given valid ||| lua	count=1
module	que imprime un ||| lual	count=1
module	la pila y elimina ||| lual	count=1
arg	arco tangente de y/x ||| y	count=1
module	índice válido fornecido ||| lua	count=1
module	para otros ||| lua	count=1
module	el tipo del ||| lua	count=1
module	converte o valor lua ||| lua	count=2
arg	[arg_1] table ||| [arg_2] [arg_1]	count=10
arg	de pattern na cadeia ||| pattern	count=1
module	equivalente a lua_pushfstring exceto ||| lua	count=1
module	1 se o valor ||| lua	count=8
module	or nil if it ||| debug	count=1
arg	mode "w" ||| mode	count=1
function	de segundos da ||| difftime	count=1
module	same ||| lual	count=1
module	the base [module] natural ||| [module]	count=1
module	c string in ||| lual	count=1
function	el proceso principal ||| running	count=1
arg	uma cadeia ||| s pattern	count=1
arg	la concatenación de n ||| n	count=1
module	ou ||| math	count=1
module	acesso primitivo (i ||| lua	count=1
function_arg	[function_1] o continúa ||| [arg_2] [function_1]	count=1
function	y ejecuta el fichero ||| dofile	count=1
module	the metatable of ||| lual	count=1
function	gera um erro ||| error	count=1
module	= v ||| lua	count=1
function	der ||| seeall	count=1
function	no tiene ||| getmetatable	count=1
module	that created ||| lual	count=1
module	of the same ||| lua	count=1
module	na pilha o valor ||| lua	count=1
module	cualquier aparición del string ||| lual	count=1
module	the elements above ||| lua	count=1
module	onto ||| lual	count=1
module	this number ||| lual	count=1
arg	position given by offset ||| offset	count=1
module	as ||| lua	count=2
module	fills *l with ||| lual	count=1
module	usado por [module] procurar ||| [module]	count=2
module	a ||| lua	count=52
function	generic c pointer (void*) ||| topointer	count=1
module	que ||| string	count=2
module	acceso ||| lua	count=1
arg	argumento número [arg] número negativo ||| [arg]	count=1
module	radiant in ||| math	count=1
module	objeto ||| lual	count=2
arg	local de la función ||| proceso	count=1
module	string and ||| lual	count=2
arg	dada por [arg] más ||| de_dónde [arg]	count=1
arg	al nivel dado ||| nivel	count=1
module	y elimina ||| lual	count=1
function	executando é a principal ||| running	count=1
module	the stack and pops ||| lual	count=1
module	lua no índice ||| lua	count=3
module	en el estado ||| lua	count=1
function	controla el liberador de ||| gc	count=1
function	si éste no ||| getmetatable	count=1
module	number ||| lua	count=1
function	a seguir ||| setfuncs	count=1
module	error position [module] the ||| [module]	count=1
module	the metatable of ||| debug	count=1
arg	to traverse all fields ||| index	count=1
arg	nombre_viejo a [arg_2] ||| [arg_1] [arg_2]	count=1
module	cadeia e 0 ||| lua	count=1
module	bloque ||| lua	count=1
function_arg	seno hiperbólico [arg_2] ||| [function_1] [arg_2]	count=2
module	function as a ||| lua	count=1
module	name of ||| lua	count=1
function	tonumber ||| tonumber	count=1
module	ningún elemento de ||| lua	count=1
module	acerca ||| lua	count=2
function	the current hook mask ||| gethookmask	count=1
module	deslocando para ||| lua	count=1
function	загружает chunk lua ||| reader	count=1
function	novo estado independente ||| newstate	count=1
module	retornados por ||| lual	count=2
module	onde t ||| lua	count=2
arg	[arg_1] a nombre_nuevo ||| [arg_1] [arg_2]	count=1
arg	retorna uma tabela ||| what	count=1
module	[module] fornecido é ||| [module]	count=1
arg	mit ||| thread function	count=1
module	(veja lual_buffer) ||| lual	count=3
arg	tabela contendo [arg] ||| format [arg]	count=1
function	string como chunk de ||| loadstring	count=1
module	un nuevo estado de ||| lual	count=1
module	retorna 1 se o ||| lua	count=8
module	a un ||| lua	count=2
module	que está ||| lua	count=1
module	pelo valor ||| lua	count=1
function_arg	[function_1] [arg_2] index local of the ||| [function_1] [arg_2] f local	count=4
function	nil na pilha ||| pushnil	count=1
module	допустимому индексу: для строк, ||| lua	count=1
arg	os elementos são ||| i j	count=1
arg	asigna el valor ||| valor	count=1
module	coletor de ||| lua	count=1
module	posición dada ||| lua	count=1
module	sobre uma função ou ||| lua	count=2
module	verifica si v1 ||| lua	count=1
function	безтиповой указатель c (void*) ||| topointer	count=1
module	index t for ||| lual	count=1
arg	fecho lua f1 ||| f1	count=2
module	aloca um ||| lua	count=1
function	um conjunto ||| upper	count=1
module	into the given ||| lua	count=1
function	pilha não pode aumentar ||| checkstack	count=1
arg	a x ||| x	count=1
arg	делает данную функцию ||| mask count	count=1
module	lua value at the ||| lual	count=1
module	arquivo ||| io	count=1
module	null instead of ||| lual	count=1
function	contador de hook actual ||| gethookcount	count=1
module	fluxos de ||| lua	count=1
module	e coloca essa tabela ||| lual	count=1
arg	sets [arg] as the ||| [arg]	count=1
module	el argumento narg ||| lual	count=6
module	los valores retornados ||| lua	count=1
module	una variable ||| lua	count=2
module	given lua ||| lua	count=1
module	a ||| lual	count=24
module	b ||| lual	count=5
module	von require verwendet wird ||| package	count=1
module	tipo del valor ||| lua	count=1
module	ставит вершину стека ||| lua	count=1
function	zero-terminated string pointed ||| pushstring	count=1
arg	a u ||| u	count=1
module	nuevo estado ||| lual	count=1
module	o tipo usado ||| lua	count=1
module	valores entre diferentes fluxos ||| lua	count=1
module	(véase lua_atpanic) que imprime ||| lual	count=1
function	como a metatabela associada ||| setmetatable	count=1
arg	um ||| table	count=1
module	un número y retorna ||| lual	count=1
module	es un número retorna ||| lual	count=2
module	función es un ||| lual	count=6
module	para um número e ||| lua	count=1
arg	dinamicamente liga ||| funcname	count=1
module	una variable local ||| lua	count=2
arg	делает данную ||| mask count	count=1
arg	número [arg] número negativo ||| [arg]	count=1
module	the stack size to ||| lual	count=1
function	globalen umgebung erben ||| seeall	count=1
function	gera um ||| error	count=1
module	converts any ||| lual	count=1
module	macro is equivalent ||| lua	count=1
module	pfad welcher ||| package	count=1
module	codificado por ||| lua	count=1
arg	[arg_1] uma cadeia ||| [arg_2] [arg_1]	count=2
module	elimina el mismo de ||| lual	count=1
module	lo coloca ||| lua	count=1
function	equivalente ||| write	count=1
module	por funções relacionadas ||| lual	count=2
module	equivalent to lua_pushfstring ||| lua	count=1
arg	eine verknüpfung [arg] kopien ||| s [arg]	count=1
module	en la posición ||| lual	count=2
module	onde ||| lual	count=1
module	same version ||| lual	count=1
arg	verknüpfung [arg] kopien ||| s [arg]	count=1
module	la dirección de ||| lua	count=1
function	raiz quadrada ||| sqrt	count=1
module	like ||| lual	count=1
module	e estabelece ||| lua	count=1
module	(llamando al ||| lua	count=1
module	the core running ||| lual	count=1
function	de ||| next	count=1
module	retorna 1 si ||| lua	count=3
module	the call are ||| lual	count=1
module	sin desplazar ningún ||| lua	count=1
module	o coletor de ||| lua	count=1
function	interface genérica para ||| assert	count=1
module	es igual ||| lua	count=1
function	string ||| seek	count=1
module	elemento que ||| lua	count=1
module	é o valor no ||| lual	count=1
module	baixo ||| lua	count=1
function	um fluxo de ||| isthread	count=1
module	primitivo (i ||| lua	count=1
module	information ||| lua	count=1
function	nil si éste no ||| getmetatable	count=1
module	por la función debug ||| debug	count=1
module	a execução da co-rotina ||| coroutine	count=1
module	basada en ||| lual	count=1
module	correspondiente metamétodo ||| lua	count=1
module	estado para f com ||| lua	count=1
module	um ||| lua	count=31
module	es el valor ||| lua	count=2
module	stack the ||| lua	count=2
module	función de ||| lua	count=1
module	troca ||| lua	count=1
arg	mit ||| function	count=1
function_arg	comienza [arg_2] ||| [function_1] [arg_2]	count=5
module	caso ||| lua	count=8
module	+ sz elementos ||| lual	count=1
module	cria um novo fluxo ||| lua	count=1
module	a size optimized to ||| lual	count=1
module	um ||| lual	count=11
function	globalen ||| seeall	count=1
module	value associated with the ||| lua	count=1
arg	[arg_1] [arg_2] ||| [arg_2] hook [arg_1]	count=3
module	do tipo codificado pelo ||| lua	count=1
module	del valor situado ||| lua	count=1
module	inteiro de uma ||| lua	count=1
module	variable local de un ||| lua	count=2
arg	[arg] korrekten ||| y [arg]	count=3
function_arg	table [arg_2] ||| [arg_2] [function_1]	count=4
arg	fornecida como um ||| hook mask count	count=1
arg	table das [arg] ||| table pos [arg]	count=1
module	lua_pushstring ||| lua	count=1
module	del valor situado en ||| lua	count=1
module	to a ||| lual	count=2
module	gegebenen [module] auf dem ||| [module]	count=2
module	usado pela api ||| lua	count=1
module	a c ||| lual	count=1
module	si se refiere ||| lua	count=1
module	as funções ||| lual	count=1
module	lo elimina de ||| lua	count=1
module	aceptable es un ||| lua	count=2
module	error ||| lual	count=3
arg	esta função retorna ||| index	count=1
module	или 0 и ||| lua	count=1
module	elements raising an error ||| lual	count=1
module	по заданному валидному ||| lua	count=1
function	nil por lo ||| pairs	count=1
module	tabela da ||| lua	count=1
module	de informação ||| lua	count=1
module	todas as entradas ||| lual	count=1
module	na pilha ||| lua	count=6
module	crea ||| lua	count=1
module	given lua state ||| lua	count=1
module	a [module] especificados ||| [module]	count=1
module	different pieces of information ||| lua	count=1
arg	einer [arg] durchlaufen ||| [arg]	count=1
module	integer ||| lua	count=1
module	retornados ||| lual	count=2
function_arg	la [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
module	lual_newmetatable) e retorna ||| lual	count=1
module	this string if l ||| lual	count=1
module	desempilha uma ||| lua	count=1
arg	prog в ||| prog	count=1
module	value at index ||| lual	count=1
function	kosinus ||| cos	count=1
function_arg	гиперболический тангенс [arg_2] ||| [arg_2] [function_1]	count=1
arg	from time t1 ||| t1	count=1
module	pila la tabla ||| lua	count=1
function	größten wert seiner argumente ||| max	count=1
module	tostring calls [module] with ||| [module]	count=1
module	posición del índice aceptable ||| lua	count=6
module	tp ||| lua	count=3
arg	metatabla del objeto dado ||| objeto	count=1
function	a função alocadora de ||| setallocf	count=1
module	una función ||| lual	count=2
module	lua associado ||| debug	count=1
module	pela ||| lua	count=1
module	esse ||| lua	count=2
module	de la pila y ||| lual	count=1
module	qualquer outro ||| math	count=1
module	a function as a ||| lua	count=1
module	en la posición del ||| lua	count=8
module	el situado en ||| lua	count=1
module	un acceso directo (sin ||| lua	count=1
module	t for ||| lual	count=1
function	manipulador ||| type	count=1
module	para baixo ||| lua	count=1
module	файла [module] в ||| [module]	count=1
module	lual_checkudata except that when ||| lual	count=1
module	lua_settable mas faz uma ||| lua	count=1
module	valor de lua situado ||| lua	count=2
module	given state ||| lua	count=2
module	guardar pedaços diferentes de ||| lua	count=1
module	de un registro de ||| lua	count=2
function_arg	setzt die [arg_2] ||| [arg_2] [function_1]	count=2
arg	y that rounds ||| y	count=1
function	y retorna una referencia ||| ref	count=1
module	situado en la posición ||| lua	count=5
module	have ||| debug	count=1
function	función hook de depuración ||| sethook	count=1
module	mueve el elemento ||| lua	count=1
module	p ||| lual	count=1
module	pelo valor tp ||| lua	count=1
module	valor ||| debug	count=1
module	de upvalues opcionais veja ||| lual	count=1
module	o ||| debug	count=2
module	os valores retornados ||| lual	count=2
module	un string ||| lua	count=3
module	adiciona ao buffer b ||| lual	count=1
module	v é ||| lua	count=1
arg	field [arg_2] ||| [arg_1] [arg_2]	count=1
module	nome do tipo ||| lua	count=1
arg	eine verknüpfung [arg] ||| s [arg]	count=1
arg	[arg_1] retorna table ||| [arg_2] [arg_1]	count=4
function	adiciona o valor no ||| addvalue	count=1
module	pelo ||| lua	count=1
module	the c function f ||| lua	count=1
module	o tamanho da pilha ||| lual	count=1
module	metatable ||| debug	count=2
module	of the [module] with ||| [module]	count=1
module	ou um número ||| lua	count=1
arg	a1 ||| a1 f e	count=1
module	una nueva función de ||| lua	count=1
module	0 caso ||| lua	count=6
module	a coloca na ||| lua	count=1
arg	posição dada por offset ||| offset	count=1
arg	verifica se obj é ||| obj	count=1
module	el valor en el ||| lua	count=1
module	esse índice ||| lua	count=1
module	lua_pushfstring except that ||| lua	count=1
function	[function] которая ||| [function]	count=1
module	the table at index ||| lual	count=1
module	в стеке вызова ||| lual	count=1
module	o equivalente de t[k] ||| lua	count=1
module	mas ||| lua	count=1
module	a qualquer ||| math	count=1
module	estableciendo una ||| lual	count=1
module	c estándar ||| lual	count=1
module	tamanho otimizado ||| lual	count=1
module	be used ||| lua	count=1
module	mas faz uma ||| lua	count=1
module	por el ||| lual	count=1
arg	this function ||| index value	count=1
module	verifica si ||| lual	count=4
module	função como um ||| lua	count=1
function	e a parte fracionária ||| modf	count=1
module	nil si ||| debug	count=1
module	que imprime un mensaje ||| lual	count=1
arg	kopie von s ||| s	count=1
function	not ||| getmetatable	count=1
module	возвращает длину ||| lua	count=1
arg	índice up de ||| up	count=1
module	the buffer b ||| lual	count=1
module	completo retorna la ||| lua	count=1
module	the given lua state ||| lua	count=1
module	posición del índice t ||| lual	count=1
module	la dirección ||| lua	count=2
module	any ||| lual	count=1
module	novo fluxo de execução ||| lua	count=1
module	cria uma nova tabela ||| lual	count=1
function	de error fatal ||| newstate	count=1
module	fills ||| lual	count=1
module	por ||| lua	count=2
arg	a2 ||| f e t a2	count=1
module	mensaje ||| lual	count=1
arg	match of [arg_2] ||| [arg_1] [arg_2]	count=2
module	a table and ||| lual	count=1
module	error if ||| lual	count=1
module	t[k], onde t é ||| lua	count=1
function	c exit ||| exit	count=1
module	(mas ||| lual	count=1
arg	o continúa la ejecución ||| co val1	count=1
function	have a metatable ||| getmetatable	count=1
module	registry (see lual_newmetatable) ||| lual	count=1
function	nil o false ||| assert	count=1
module	"longitud" de un ||| lua	count=1
module	created the ||| lual	count=1
arg	com número [arg] da função ||| f [arg]	count=1
module	must be one ||| lua	count=1
module	en una función ||| lua	count=1
module	this function works like ||| lual	count=1
module	memoria basada en la ||| lual	count=1
rep	[module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=30
function	valor huge_val un ||| huge	count=1
arg	da divisão de x ||| x	count=1
module	menor que ||| lua	count=1
function	функцию [function] ||| [function]	count=1
module	en el índice aceptable ||| lua	count=3
module	valor t[fname], onde ||| lual	count=1
module	objeto situado en la ||| lual	count=1
module	at index t for ||| lual	count=1
module	función es un string ||| lual	count=1
module	dado fluxo de ||| lua	count=1
arg	ruft die [arg] mit den ||| [arg]	count=1
module	tamanho da pilha ||| lual	count=1
module	manipulador ||| io	count=2
function	representando ||| time	count=1
function	the top element in ||| gettop	count=1
module	call the ||| lual	count=1
module	valor lua no ||| lua	count=3
module	no topo da ||| lua	count=1
function	o valor ||| getuservalue	count=1
module	cadeia fornecida ||| lual	count=1
module	baixo os elementos acima ||| lua	count=1
function	valor absoluto de ||| abs	count=2
module	gegebenen gültigen [module] ist ||| [module]	count=1
module	índice aceptable index1 ||| lua	count=1
module	y v es el ||| lua	count=2
module	a raw assignment ||| lua	count=1
function	o false ; ||| assert	count=1
arg	a1 ||| a1	count=1
arg	this function returns ||| index	count=1
function	o valor lua ||| getuservalue	count=1
module	el argumento narg de ||| lual	count=6
function	memoria reservado para ||| objlen	count=1
module	os elementos acima desse ||| lua	count=1
function	manipulador de arquivo ||| type	count=1
module	na ||| lual	count=2
function_arg	arco seno [arg_2] ||| [arg_2] [function_1]	count=3
module	igual que otro valor ||| math	count=1
function_arg	raiz cuadrada [arg_2] ||| [function_1] [arg_2]	count=1
arg	erstreckt i ||| i	count=1
function	dirección de su bloque ||| touserdata	count=1
module	pila a la ||| lua	count=1
module	given valid index ||| lua	count=1
module	otimizado para armazenar ||| lual	count=1
function	retorna a raiz quadrada ||| sqrt	count=1
module	gültigen [module] ist ||| [module]	count=1
module	na tabela no ||| lual	count=1
module	superior de [module] ||| [module]	count=1
module	fills *l ||| lual	count=1
module	elemento no índice ||| lua	count=1
arg	field + width ||| field width	count=3
module	valores ||| lual	count=2
module	to yield (see ||| lua	count=1
module	coloca essa tabela ||| lual	count=1
module	t ||| lua	count=2
arg	field ||| field	count=1
arg	codes are ||| i j	count=1
module	existe) y ||| lua	count=1
module	función hook ||| lua	count=1
module	es un string o ||| lua	count=1
module	tp which ||| lua	count=1
arg	función asigna ||| valor	count=1
module	the given ||| lual	count=1
module	dada y ||| lua	count=1
module	индексу: для строк, ||| lua	count=1
module	lua situado en la ||| lua	count=2
module	descriptor de [module] ||| [module]	count=3
module	panic function ||| lua	count=1
module	função produz ||| lual	count=2
function	a mesma versão de ||| checkversion	count=1
module	coloca na pilha ||| lua	count=4
arg	[arg_1] a nombre_nuevo ||| [arg_2] [arg_1]	count=1
module	guardar pedaços diferentes ||| lua	count=1
function	rotates the ||| rotate	count=1
module	returns ||| debug	count=1
arg	(see §6 ||| init plain	count=1
module	de "pánico" ||| lual	count=1
module	contrario ||| lua	count=2
arg	f с данными параметрами ||| f arg1	count=1
module	un string es ||| lua	count=1
module	argumento narg de la ||| lual	count=6
function	otros [function] ||| [function]	count=1
function	retorna essa cadeia ||| checkstring	count=1
function	lua_gettable pero realiza ||| rawget	count=1
module	el ||| math	count=2
module	(see lual_newmetatable) ||| lual	count=1
module	metamétodo de ||| lua	count=1
arg	[arg] kopien der ||| s [arg]	count=1
function	tiene ||| getmetatable	count=1
arg	f1 refer to ||| f1	count=1
function	adelante otros [function] ||| [function]	count=1
module	new [module] with ||| [module]	count=1
module	a lua_pushfstring exceto que ||| lua	count=1
arg	f1 refer ||| f1 n1	count=1
function	absoluten betrag ||| abs	count=1
module	used only when s ||| lua	count=1
module	parte superior ||| lual	count=2
module	core running ||| lual	count=1
module	string y ||| lual	count=1
module	fornecido deslocando para ||| lua	count=1
arg	called with no base ||| e base	count=1
module	tanto reemplazando el ||| lua	count=1
module	la pila actual ||| lua	count=1
module	lua value associated ||| lua	count=1
module	from the [module] sets it ||| [module]	count=2
module	um valor ||| math	count=1
module	tp o qual deve ||| lua	count=1
module	fornecido coloca na pilha ||| lua	count=1
module	imprime un mensaje ||| lual	count=1
module	um userdata leve e ||| lua	count=1
module	e a estabelece ||| lua	count=1
module	tabela e coloca ||| lual	count=1
function	armazena de fato) ||| newlibtable	count=1
module	e retorna ||| lua	count=2
module	usada para guardar ||| lua	count=1
module	de reserva ||| lual	count=1
arg	si la variable no ||| variable	count=1
module	carga y ||| lual	count=1
module	por [module] procurar ||| [module]	count=2
module	only when s ||| lua	count=1
module	functions in list l ||| lual	count=1
function	e retoma uma co-rotina ||| resume	count=1
function	an iterator function that ||| lines	count=1
module	sz elements ||| lual	count=1
module	the value tp ||| lua	count=1
module	la pila y ||| lual	count=1
arg	of ||| s	count=1
function	copias del ||| rep	count=1
module	um número e ||| lual	count=3
module	el mismo ||| lua	count=1
module	coloca en la parte ||| lual	count=1
module	el liberador de memoria ||| lua	count=1
module	inteiro de ||| lua	count=1
module	grows the stack size ||| lual	count=1
module	es el resultado del ||| lua	count=1
module	la pila y ||| lua	count=3
arg	erhält ||| s	count=1
module	pila y retorna un ||| lua	count=1
arg	a2 performing ||| f e t a2	count=1
module	el mismo ||| lual	count=1
module	onto [module] ||| [module]	count=2
arg	[arg_1] функцией перехвата ||| [arg_2] [arg_1]	count=1
function	logarithm ||| log	count=1
module	sz elementos ||| lual	count=1
module	índice fornecido k é ||| lua	count=1
function	a c function onto ||| pushcfunction	count=1
module	un valor situado ||| lua	count=1
module	tipo tname ||| lual	count=1
module	used to carry different ||| lua	count=1
arg	element value ||| value	count=1
module	la función ||| lua	count=1
module	по заданному допустимому индексу ||| lua	count=2
module	do ||| lua	count=2
module	retorna un ||| lua	count=2
module	string es la ||| lua	count=1
arg	table a1 ||| a1 f	count=1
arg	given value or nil ||| value	count=1
arg	индексом [arg] функции ||| func [arg]	count=2
module	é ||| lual	count=8
function	вызывает функцию [function] ||| [function]	count=1
module	valor maior ou igual ||| math	count=1
module	situado en la ||| lual	count=1
module	narg de ||| lual	count=6
arg	pos ||| pos	count=2
function	toma como nuevo entorno ||| setfenv	count=1
arg	запускает программу [arg] ||| [arg]	count=3
function	com a biblioteca c ||| loadlib	count=1
arg	la función func ||| proceso func	count=2
arg	t and 0 ||| t	count=1
function	fluxo de execução ||| isthread	count=1
function_arg	[function_1] [arg_2] la ||| [function_1] [arg_2]	count=4
arg	el estatus [arg] como un ||| [arg]	count=1
module	carry different ||| lua	count=1
arg	elements from table a1 ||| a1 f e t	count=1
function	informationen zu einer funktion ||| getinfo	count=1
module	del índice aceptable ||| lua	count=9
arg	para obtener sus partes ||| nombre_de_chunk	count=1
function	arco tangente ||| atan	count=1
module	directo ||| lua	count=1
function_arg	comienza [arg_2] ||| [arg_2] [function_1]	count=5
module	that created the ||| lual	count=1
module	the stack as ||| lual	count=1
function	open space ||| insert	count=1
function	si éste no tiene ||| getmetatable	count=1
module	de t[k] = v ||| lua	count=1
arg	se repl é ||| repl	count=1
module	pila y retorna ||| lua	count=1
module	valores retornados por funções ||| lual	count=2
function	representar um conjunto de ||| upper	count=1
module	state ||| lua	count=4
module	co-rotina em um ||| lua	count=1
module	the object at the ||| lual	count=2
arg	data e ||| time	count=1
arg	metatable for the ||| metatable	count=1
module	elimina el ||| lual	count=1
module	valor situado en ||| lua	count=5
module	chunk ||| lua	count=1
module	estándar de error en ||| lual	count=1
arg	[arg] na posição ||| list pos [arg]	count=3
function	lua associado a ||| getuservalue	count=1
module	the [module] returns the ||| [module]	count=1
module	un nuevo ||| lua	count=1
module	grows the ||| lual	count=1
arg	hora [arg] a hora ||| t2 [arg]	count=1
arg	divisão de x ||| x	count=1
module	if ||| debug	count=1
module	completo com ||| lua	count=1
arg	времени [arg] до времени ||| t2 [arg]	count=1
module	faz uma ||| lua	count=1
module	value associated ||| lua	count=1
module	elimina de la ||| lua	count=1
module	function f as the ||| lua	count=1
arg	número [arg] da função ||| f [arg]	count=1
arg	ou continua a execução ||| val1	count=1
function	retoma uma co-rotina em ||| resume	count=1
module	a c string ||| lual	count=1
module	elements between the ||| lua	count=1
module	pushes onto the stack ||| lua	count=2
arg	[arg_1] [arg_2] deslocando os elementos list[pos], ||| table insert [arg_2] [arg_1]	count=4
module	valid index shifting ||| lua	count=1
module	devuelve ||| debug	count=1
arg	f con [arg_2] ||| lua pcall [arg_1] [arg_2]	count=1
function	forma de chunk binario ||| dump	count=1
module	um erro ||| lual	count=1
arg	gegebene funktion als hook ||| hook mask count	count=1
function	gancho de depuração ||| sethook	count=1
arg	подпрограммы co в виде ||| co	count=1
function	valor de pi ||| pi	count=1
function	unten verschoben werden um ||| remove	count=1
module	the stack size ||| lual	count=1
module	produz os valores ||| lual	count=2
module	the core that ||| lual	count=1
module	kann ||| package	count=1
module	índice aceptable es un ||| lua	count=2
module	descarrega uma ||| lua	count=1
function	a lua float to ||| numbertointeger	count=1
module	la posición del índice ||| lua	count=8
module	estableciendo una función ||| lual	count=1
module	is equivalent to lua_pushstring ||| lua	count=1
module	um erro se a ||| lual	count=1
module	del ||| lua	count=21
module	lual_prepbuffsize ||| lual	count=2
module	static variable ||| lua	count=1
function	vieja ||| atpanic	count=1
module	valor en la ||| lua	count=9
module	null fills *l ||| lual	count=1
function	índice del [function] ||| [function]	count=1
module	del objeto situado ||| lual	count=1
module	invocar metamétodos) ||| lua	count=1
arg	this function [arg_2] ||| [arg_2] [arg_1]	count=4
arg	o continúa la ||| val1	count=1
module	situación del índice aceptable ||| lua	count=3
function	rotates the stack elements ||| rotate	count=1
function	um upvalue de um ||| setupvalue	count=1
module	to top + sz ||| lual	count=1
module	function and returns ||| lua	count=1
arg	[arg_1] func ||| [arg_2] [arg_1]	count=2
module	elementos ||| lua	count=1
arg	función func [arg_2] ||| [arg_1] [arg_2]	count=1
arg	y/x en radianes pero ||| y x	count=1
function	it does not ||| getmetatable	count=1
module	topo da [module] com o ||| [module]	count=1
module	un [module] ||| [module]	count=4
module	n ||| lual	count=1
function	ponteiro p representado como ||| rawsetp	count=1
module	verwendet ||| package	count=1
module	s reemplazando ||| lual	count=1
module	objetos en el ||| lua	count=1
function	depuração ||| sethook	count=1
module	pieces of ||| lua	count=1
module	table ||| lual	count=4
module	la pila la ||| lual	count=1
module	puede invocar ||| lua	count=1
arg	path ||| path sep rep	count=1
module	top + sz elements ||| lual	count=1
module	this ||| lua	count=2
arg	cadeia ||| pattern	count=1
module	if it does not ||| debug	count=1
module	válido y v ||| lua	count=2
module	changes the allocator function ||| lua	count=1
module	usada para guardar pedaços ||| lua	count=1
module	api ||| lua	count=2
arg	pattern [arg_2] ||| [arg_2] [arg_1]	count=1
module	o topo ||| lua	count=1
function	uma atribuição primitiva (i ||| rawset	count=1
arg	tabelle mit ||| function what	count=1
function	specified by the string ||| seek	count=1
function	metatabela ||| setmetatable	count=1
module	produz os valores retornados ||| lual	count=2
module	into the ||| lua	count=1
module	contrário ||| lua	count=6
module	pilha ao ||| lual	count=1
module	que deve ser ||| string	count=1
module	correspondiente metamétodo de ||| lua	count=1
module	the stack and ||| lual	count=1
module	instancia ||| lua	count=1
module	qual deve ser um ||| lua	count=1
module	cast ||| lual	count=1
module	любой ||| lua	count=1
module	ставит вершину ||| lua	count=1
module	obtém informação ||| lua	count=1
arg	index um ||| index	count=1
module	null fills *l with ||| lual	count=1
function	el valor huge_val ||| huge	count=1
module	en ||| lual	count=8
module	table and pushes ||| lual	count=1
function	[function] un objeto ||| [function]	count=2
arg	esta função retorna message ||| message level	count=1
module	and ||| lual	count=8
function	of the [function] ||| [function]	count=1
module	error if the ||| lual	count=1
module	pilha abaixo de upvalues ||| lual	count=1
function	sets the metatable ||| setmetatable	count=2
module	la función ||| lual	count=7
module	para otros valores ||| lua	count=1
module	el nombre ||| lua	count=1
module	la posición dada ||| lua	count=1
module	error en caso ||| lual	count=1
module	a metatable ||| debug	count=1
module	novo fluxo ||| lua	count=1
function_arg	[function_1] t and ||| [arg_2] [function_1]	count=4
module	arg is a ||| lual	count=4
module	values returned by lua_type ||| lua	count=1
arg	tabla conteniendo la fecha ||| tiempo	count=1
module	entries in ||| lual	count=1
module	returns the name ||| lua	count=1
module	1 si el valor ||| lua	count=3
arg	felder einer [arg] durchlaufen ||| [arg]	count=1
module	для строк, ||| lua	count=1
module	file ||| io	count=1
module	c ao buffer ||| lual	count=1
module	elimina de ||| lua	count=1
function	"vacía" en la pila) ||| type	count=1
module	calls [module] ||| [module]	count=1
arg	tabelle [arg_2] ||| [arg_2] [arg_1]	count=2
module	значение lua ||| lua	count=1
module	(veja lual_buffer) uma cadeia ||| lual	count=1
module	retorna o nome do ||| lua	count=1
module	na pilha uma ||| lua	count=1
function	arquivo ||| type	count=1
module	dirección de ||| lua	count=1
arg	значение value ||| value	count=1
arg	ruft die [arg] ||| [arg]	count=1
module	um acesso ||| lua	count=1
arg	estado da co-rotina co ||| co	count=1
arg	j erstreckt i ||| i	count=1
module	o valor lua ||| lua	count=3
module	string y 0 ||| lua	count=1
arg	[arg] en ||| [arg] patrón reemplazamiento	count=3
module	funções relacionadas ||| lual	count=2
arg	[arg_1] (see §6 ||| [arg_2] [arg_1]	count=5
arg	object does not have ||| object	count=1
module	índice fornecido para um ||| lua	count=2
arg	[arg] в ||| f [arg]	count=1
module	longitud ('#'); para ||| lua	count=1
function	manipulador de arquivo válido ||| type	count=1
module	tipo tname (veja lual_newmetatable) ||| lual	count=1
module	y retorna ||| lual	count=3
function	sin invocar ningún metamétodo ||| rawequal	count=1
module	convierte ||| lua	count=3
module	metatable of the ||| lual	count=1
module	elimina una tabla ||| lua	count=2
module	sets ||| lua	count=3
module	para el objeto ||| lual	count=1
module	as armazena de ||| lual	count=1
module	uma continuação ||| lua	count=1
module	with ||| lual	count=4
module	with the ||| lua	count=1
module	the value at the ||| lua	count=2
module	informação ||| lua	count=2
module	y/x [module] radians but ||| [module]	count=1
module	value at the ||| lual	count=2
arg	concatenación de n ||| n	count=1
module	integer ||| lual	count=2
module	da pilha ao ||| lual	count=1
function	the code making ||| checkversion	count=1
module	of y/x [module] radians ||| [module]	count=1
module	verifica se o ||| lual	count=5
module	crea ||| lual	count=3
function	lua_gettable mas faz ||| rawget	count=1
module	valores ||| lua	count=3
module	un booleano de ||| lua	count=1
module	pushes a ||| lua	count=3
module	um tabela ||| lua	count=1
function_arg	biblioteca c [arg_2] ||| [function_1] [arg_2]	count=1
module	invocando ||| lual	count=1
arg	m ||| m	count=1
module	uma estrutura ||| lua	count=1
module	value at ||| lual	count=3
module	at index idx is ||| lual	count=1
module	um userdata ||| lual	count=1
module	userdata es ||| lua	count=1
module	buffer b (veja lual_buffer) ||| lual	count=3
module	the given ||| lua	count=5
function	top element in ||| gettop	count=1
module	dada ||| table	count=1
function	empilha um novo fecho ||| pushcclosure	count=1
module	(veja ||| lual	count=5
arg	a2 performing the equivalent ||| f e t a2	count=1
module	proceso ||| lua	count=2
module	equivalent to lua_pushstring but ||| lua	count=1
function	entorno ||| getfenv	count=1
module	cria uma ||| lual	count=1
module	pilha para top + ||| lual	count=1
arg	value ohne dabei ||| value	count=1
module	возвращает длину данных, расположенных ||| lua	count=1
arg	заданную параметром [arg] плюс ||| whence [arg]	count=1
function_arg	starts [arg_2] ||| [arg_2] [function_1]	count=4
module	la pila el ||| lual	count=1
module	the value tp which ||| lua	count=1
module	valores retornados lua_type ||| lua	count=1
module	la "longitud" de ||| lua	count=1
module	no índice válido ||| lua	count=1
module	número variável de argumentos ||| lua	count=1
module	[module] metatabelle ||| [module]	count=1
module	erro se ||| lual	count=1
module	ceder ||| lua	count=2
module	строк, ||| lua	count=1
arg	co-rutina co ||| co	count=1
arg	lua closure f1 refer ||| f1 n1	count=1
module	the buffer b (see ||| lual	count=1
module	but ||| lua	count=1
module	returns 1 if the ||| lua	count=1
module	novo userdata completo com ||| lua	count=1
module	no topo da ||| lual	count=2
module	función c ||| lua	count=1
module	número variável ||| lua	count=1
function	ejecuta el ||| dofile	count=1
module	para arrays de ||| lual	count=2
module	table onto the ||| lual	count=1
module	lua value at ||| lual	count=1
module	globalen ||| package	count=1
function	seno hiperbólico de ||| sinh	count=2
module	maior ou ||| math	count=1
module	da pilha ||| lual	count=3
arg	bei welcher alle (bzw ||| pattern repl n	count=1
arg	nombre_viejo [arg_2] ||| [arg_2] [arg_1]	count=1
function	nil o false ; ||| assert	count=1
module	menor ||| lua	count=1
module	igual que ||| math	count=1
module	заданному валидному ||| lua	count=1
module	un nuevo proceso ||| lua	count=1
arg	função retorna message ||| message	count=1
module	a lua_settable mas ||| lua	count=1
module	c estándar realloc ||| lual	count=1
arg	de ||| table	count=1
function	e 0 caso contrário ||| isnil	count=1
function	global environment onto ||| pushglobaltable	count=1
function	does not have ||| getmetatable	count=1
module	por la api de ||| lua	count=1
module	uma tabela e coloca ||| lual	count=1
module	записи output file ||| file	count=1
module	convierte el valor en ||| lua	count=1
module	pfad welcher von require ||| package	count=1
module	empilha na pilha ||| lua	count=1
function	metamethoden ||| rawset	count=1
module	topo da ||| lua	count=2
module	it ||| lua	count=1
module	equivalent ||| lual	count=1
module	retorna la ||| lua	count=4
module	deve ser ||| lua	count=1
module	to lua_pushfstring ||| lua	count=1
module	cualquiera ||| math	count=1
module	tabla de la pila ||| lua	count=1
function	test fails it returns ||| testudata	count=1
module	adiciona ao ||| lual	count=1
module	de lixo ||| lua	count=1
module	função é um userdata ||| lual	count=1
module	valor en la posición ||| lua	count=3
function	genera un error ||| error	count=1
module	f com userdata ||| lua	count=1
module	existe) ||| lua	count=1
module	el ||| lual	count=12
module	verifica ||| lual	count=9
module	v1 ||| lua	count=1
module	estrutura ||| lua	count=1
function	kosinus hyperbolicus ||| cosh	count=1
function_arg	[function_1] [arg_2] de la ||| [function_1] [arg_2]	count=4
module	sobre uma ||| lua	count=2
function	o nil ||| getmetatable	count=1
module	must be ||| lua	count=1
module	die ||| os	count=1
arg	palavras da cadeia ||| pattern	count=1
function	la posición dada) ||| replace	count=1
module	abaixo de upvalues ||| lual	count=1
module	de funções a ||| lual	count=1
module	(veja lual_reg) ||| lual	count=1
function	функцию-итератор [function] ||| [function]	count=1
module	um novo userdata ||| lua	count=1
module	call the core that ||| lual	count=1
function	a metatabela para ||| setmetatable	count=1
function	функцию-итератор [function] которая при ||| [function]	count=1
module	binary chunk ||| lua	count=1
module	"vacía" en la ||| lua	count=1
arg	index [arg] der ||| func [arg]	count=1
module	empilha na ||| lua	count=1
module	valor ||| math	count=6
module	de ||| lua	count=71
module	exceto ||| lua	count=1
module	(veja lual_newmetatable) ||| lual	count=1
function	does not have a ||| getmetatable	count=1
module	se o argumento ||| lual	count=6
module	otimizado para ||| lual	count=1
module	pop их, [module] оставляет ||| [module]	count=1
module	when s ||| lua	count=1
module	fichero que se ||| io	count=1
module	returns this string ||| lual	count=2
module	object at the top ||| lual	count=2
module	aceptable index1 es menor ||| lua	count=1
module	invocando lua_newstate con una ||| lual	count=1
arg	das programm [arg] ||| [arg]	count=3
module	na ||| lua	count=6
module	execução e 0 caso ||| lua	count=1
module	e coloca ||| lual	count=1
module	retorna a função ||| lua	count=1
module	into the [module] ||| [module]	count=1
function	cesión de una ||| yield	count=1
module	t para el objeto ||| lual	count=1
arg	with ||| thread f	count=1
function	global environment onto the ||| pushglobaltable	count=1
module	estado de ||| lua	count=1
module	ningún ||| lua	count=1
module	deve ||| lua	count=1
module	diferentes de ||| lua	count=1
module	del mismo para una ||| lua	count=1
module	loads a ||| lual	count=1
arg	los argumentos dados ||| arg1	count=1
module	la pila a ||| lua	count=1
module	dado de lua ||| lua	count=1
module	c function f as ||| lua	count=1
module	el contador de ||| lua	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=188
module	da [module] com o ||| [module]	count=1
module	es igual a ||| lua	count=1
arg	de x en radianes ||| x	count=2
module	table at ||| lual	count=1
module	desplazar ningún ||| lua	count=1
module	at the ||| lual	count=4
module	tipo codificado pelo valor ||| lua	count=1
module	function ||| lual	count=6
module	nil ||| lua	count=1
module	de una co-rutina ||| lua	count=1
module	индекс, или ||| lua	count=1
module	diferentes ||| lua	count=2
module	el fichero dado ||| lual	count=1
module	equal sequences [module] numbers ||| [module]	count=1
module	otros valores ||| lua	count=1
module	retornados por funções relacionadas ||| lual	count=2
arg	tabla conteniendo ||| tiempo	count=1
arg	tales que [arg] = m ||| [arg]	count=1
module	if the value at ||| lua	count=1
module	se refiere a ||| lua	count=1
module	fornecido e k ||| lua	count=1
module	otros valores es ||| lua	count=1
module	un userdata completo ||| lua	count=1
function	the old one ||| atpanic	count=1
function	primer argumento ||| format	count=1
module	tp which must ||| lua	count=1
module	am gegebenen [module] ein thread ||| [module]	count=1
function	valor de um upvalue ||| setupvalue	count=1
arg	angle [arg] from radians ||| [arg]	count=1
module	вершину стека в ||| lua	count=1
module	to lual_prepbuffsize with ||| lual	count=1
module	del tipo codificado por ||| lua	count=1
module	metatabla del objeto situado ||| lual	count=1
arg	por [arg] ||| x [arg]	count=3
module	to carry ||| lua	count=1
module	para f com userdata ||| lua	count=1
module	it receives ||| lua	count=1
arg	numeric codes are ||| i j	count=1
module	lual_buffer) uma cadeia de ||| lual	count=1
arg	beider parameter um den ||| x	count=1
module	más ||| math	count=1
module	para preencher o ||| lua	count=1
module	n copiada anteriormente para ||| lual	count=1
function	in a reasonable format ||| tolstring	count=1
arg	de y/x en radianes ||| y x	count=1
module	functions ||| lual	count=1
module	parte superior de ||| lual	count=2
function	o endereço do bloco ||| newuserdata	count=1
module	o argumento ||| lual	count=6
module	lançando um erro se ||| lual	count=1
arg	a tabela fornecida ||| table metatable	count=1
module	am gegebenen [module] auf ||| [module]	count=2
module	creates and returns a ||| lual	count=1
function	um conjunto de ||| upper	count=1
arg	returns table ||| table	count=2
arg	[arg_1] [arg_2] können negativ sein ||| [arg_1] [arg_2]	count=3
module	am gegebenen [module] eine zahl ||| [module]	count=1
module	e a coloca na ||| lua	count=1
module	lua_pushfstring exceto que ela ||| lua	count=1
function	nova tabela vazia ||| createtable	count=1
module	der datei ||| file	count=1
module	un valor más grande ||| math	count=1
module	nombre ||| lua	count=1
module	la misma (por tanto ||| lua	count=1
function	old one ||| atpanic	count=1
function	de um ||| next	count=1
module	a string ||| lual	count=3
module	o valor t[k], ||| lua	count=1
arg	возвращает статус [arg] ||| [arg]	count=3
module	to the ||| lual	count=1
module	as a ||| lual	count=1
module	a una posición "vacía" ||| lua	count=1
module	of y/x [module] radians but ||| [module]	count=1
module	valid index idx and ||| lua	count=1
module	função aloca um ||| lua	count=1
module	if the ||| lual	count=2
module	un nuevo ||| lual	count=1
function	de entorno de ||| getfenv	count=1
module	la función debug ||| debug	count=1
module	el valor situado en ||| lua	count=3
module	valor lua ||| debug	count=1
module	string ||| string	count=12
arg	[arg_1] al nivel ||| [arg_1] [arg_2]	count=3
arg	this function ||| index	count=1
module	used only when ||| lua	count=1
arg	desplazamiento ||| desplazamiento	count=1
arg	[arg_1] y que ||| [arg_2] [arg_1]	count=3
module	é um número retorna ||| lual	count=1
module	the same version of ||| lual	count=1
module	desplazar ||| lua	count=1
module	na tabela no topo ||| lual	count=1
module	para uma cadeia ||| lua	count=2
module	lua по заданному ||| lua	count=1
function	un tiempo [function] la fecha ||| [function]	count=1
function_arg	[function_1] continúa la ||| [function_1] [arg_2]	count=1
function	hook actual ||| gethookcount	count=1
module	valor situado en la ||| lua	count=2
module	the value at the ||| lual	count=1
arg	a2 performing ||| e t a2	count=1
module	devuelve la ||| debug	count=1
module	converts ||| lual	count=1
module	lua_newstate ||| lual	count=1
module	do tipo ||| lua	count=1
arg	después de la ordenación ||| tabla comparador	count=1
function_arg	[function_1] x ||| [arg_2] [function_1]	count=25
module	de la pila a ||| lua	count=1
module	novo bloco de ||| lua	count=1
module	валидному индексу ||| lua	count=1
module	una función de "pánico" ||| lual	count=1
module	no topo da pilha ||| lua	count=1
module	esta função é equivalente ||| lua	count=1
arg	y/x in ||| y	count=1
module	do ||| lual	count=1
module	that when the ||| lual	count=1
module	empilha ||| lua	count=1
module	by ||| os	count=1
module	lua integer ||| lua	count=1
module	gegebenen [module] eine zeichenkette ||| [module]	count=1
module	y ||| lual	count=7
module	принивает ||| lua	count=1
module	§4 ||| lua	count=4
arg	loads a ||| chunkname mode env	count=1
module	novo bloco ||| lua	count=1
arg	s ||| s i	count=1
function	a non-valid but acceptable ||| type	count=1
module	chamada ceder (veja ||| lua	count=2
module	is a ||| lua	count=2
module	dada uma lista onde ||| table	count=1
module	for ||| lual	count=1
module	se o ||| lua	count=8
module	usada ||| lua	count=1
module	a size ||| lual	count=1
function	função específica ||| getinfo	count=1
module	pánico y devuelve la ||| lua	count=1
function	fornecido é um fluxo ||| isthread	count=1
module	terminar [module] ||| [module]	count=1
module	that table onto ||| lual	count=1
module	una posición ||| lua	count=1
module	allocator function of a ||| lua	count=1
function	[function] en la ||| [function]	count=2
arg	width ||| width	count=1
function	value [function] is ||| [function]	count=2
module	del índice válido y ||| lua	count=1
function	associado ||| getuservalue	count=1
module	leve ||| lua	count=2
module	directo (sin ||| lua	count=1
arg	tabela ||| what	count=1
arg	dada ||| table	count=1
module	string s ||| lual	count=1
module	cualquier ||| lual	count=1
module	como o ||| lua	count=1
module	continuação ||| lua	count=1
function_arg	local variable [arg_2] ||| [arg_2] [function_1]	count=1
module	at index t ||| lual	count=1
module	returns this string if ||| lual	count=1
module	a este ||| lua	count=1
module	para um fluxo de ||| lua	count=1
module	about a ||| lua	count=1
module	userdata completo ||| lua	count=2
module	the ||| debug	count=2
module	the stack to the ||| lual	count=1
module	panic ||| lua	count=1
function	square root ||| sqrt	count=1
function	el campo e ||| getmetafield	count=1
arg	is below integer n ||| n	count=1
module	of the stack ||| lual	count=3
arg	or continues ||| co val1	count=1
module	mismo para otros valores ||| lua	count=1
function	controla o coletor ||| gc	count=1
module	metatabla del ||| lual	count=1
module	por el valor ||| lua	count=1
module	o tipo para ||| lual	count=1
function	metatabela associada ||| getmetatable	count=1
function_arg	[function_1] ou continua ||| [function_1] [arg_2]	count=1
arg	tabela fornecida ||| table metatable	count=1
module	1 if the ||| lua	count=1
module	fecho c na pilha ||| lua	count=1
arg	from table a1 ||| a1 f e t	count=1
module	a number and returns ||| lual	count=1
module	carry different pieces of ||| lua	count=1
function	lua_gettable pero realiza un ||| rawget	count=1
module	índice aceptable es ||| lua	count=3
function_arg	metatabela [arg_2] ||| [arg_2] [function_1]	count=1
module	number and ||| lual	count=1
module	except that when ||| lual	count=1
module	en la pila la ||| lua	count=1
module	lual_prepbuffsize com ||| lual	count=1
module	1 si ||| lua	count=3
module	memória ||| lua	count=1
module	der pfad ||| package	count=1
module	de la ||| lual	count=10
function	retorna ||| getuservalue	count=1
module	longitud del mismo para ||| lua	count=1
module	at the given index ||| lua	count=2
module	la ||| lual	count=17
module	o igual que ||| math	count=1
function	gancho corrente ||| gethook	count=1
module	refiere a ||| lua	count=1
module	um userdata leve ||| lua	count=2
module	(véase ||| lual	count=1
module	crea una copia del ||| lual	count=1
arg	la co-rutina co ||| co	count=1
function	informationen zu einer ||| getinfo	count=1
module	diferentes procesos [module] mismo ||| [module]	count=1
module	estabelece esse índice como ||| lua	count=1
module	fluxo ||| lua	count=4
module	es ||| lual	count=6
function_arg	[function_1] t ||| [arg_2] [function_1]	count=4
module	puntero ||| lua	count=2
module	c ||| lua	count=6
module	hora ||| os	count=4
module	função c ||| lua	count=1
module	la misma (por ||| lua	count=1
module	es el ||| lua	count=4
module	k é o ||| lua	count=2
module	es el resultado ||| lua	count=1
function_arg	a metatabela [arg_2] ||| [arg_2] [function_1]	count=1
rep	devuelve [function_arg_2] ||| [module_1] [function_arg_2]	count=24
module	se o [module] ||| [module]	count=2
module	по заданному допустимому ||| lua	count=3
module	equivalente a lua_pushfstring ||| lua	count=1
function	upavalue de ||| getupvalue	count=1
module	para terminar [module] ||| [module]	count=1
arg	ou continua a ||| co val1	count=1
function	um userdata leve ||| islightuserdata	count=1
module	dada uma lista ||| table	count=1
module	la función c ||| lual	count=1
module	índice aceptable en ||| lua	count=3
module	number of ||| lua	count=1
module	y devuelve la ||| lua	count=1
module	tanto ||| lua	count=1
module	índice fornecido ||| lua	count=18
module	f com ||| lua	count=1
function	converte um valor ||| tocfunction	count=1
arg	from table a1 ||| a1 f	count=1
module	à variável local com ||| debug	count=1
module	functions in list ||| lual	count=1
module	tipo para ||| lual	count=2
module	el nombre del tipo ||| lua	count=1
module	reemplazando el valor ||| lua	count=1
module	um número variável ||| lua	count=1
module	[module] returns a ||| [module]	count=1
module	é a tabela no ||| lua	count=2
module	принивает любой допустимый ||| lua	count=1
module	e a empilha na ||| lua	count=1
module	índice fornecido e ||| lua	count=1
module	does not ||| debug	count=1
arg	элемент [arg] в позицию ||| table pos [arg]	count=1
module	e v ||| lua	count=1
module	pilha e a ||| lua	count=1
function	coseno hiperbólico ||| cosh	count=1
module	(esto es puede ||| lua	count=1
module	de execução ||| lua	count=4
module	um fecho ||| lua	count=2
module	índice aceptable index1 es ||| lua	count=1
arg	variable local ||| local	count=1
module	umgebung ||| package	count=1
module	an error if the ||| lual	count=1
module	at the ||| lua	count=2
module	userdata leve e ||| lua	count=1
function	biblioteca c ||| loadlib	count=1
module	welcher von require verwendet ||| package	count=1
module	otro valor ||| math	count=1
arg	estatus [arg] como ||| [arg]	count=1
arg	s [arg_2] ||| [arg_2] [arg_1]	count=1
function	string convertible ||| isnumber	count=1
module	pánico ||| lua	count=1
module	en este índice ||| lua	count=1
module	this integer cast to ||| lual	count=1
arg	[arg] an ||| table pos [arg]	count=1
module	returns the metatable ||| debug	count=1
module	aloca um novo ||| lua	count=1
module	iso ||| os	count=2
function	by the string ||| seek	count=1
module	nuevo estado de lua ||| lual	count=1
module	записывает ||| lual	count=1
arg	estatus [arg] ||| [arg]	count=1
module	string then ||| string	count=1
function	conjunto ||| upper	count=1
module	lua_pushstring but ||| lua	count=1
module	caso contrário ||| lua	count=6
module	un string ||| string	count=1
arg	вызывает функцию [arg_1] [arg_2] в защищенном режиме protected ||| lua pcall [arg_1] [arg_2]	count=1
module	una tabla es ||| lua	count=1
module	ou um ||| lua	count=2
module	string s reemplazando cualquier ||| lual	count=1
function	der globalen umgebung erben ||| seeall	count=1
module	el valor de una ||| lua	count=1
module	given index is a ||| lua	count=1
module	narg ||| lual	count=7
function	un elemento fuera de ||| isnone	count=1
module	y retorna un puntero ||| lua	count=1
module	si ||| lual	count=6
function	tabla de entorno ||| getfenv	count=1
module	from the [module] ||| [module]	count=3
module	esta função aloca ||| lua	count=1
function	a metatable ||| getmetatable	count=1
module	um novo fluxo de ||| lua	count=1
function	light userdata onto the ||| pushlightuserdata	count=1
arg	hora [arg] ||| t2 [arg]	count=1
module	+ sz ||| lual	count=2
module	converts any lua value ||| lual	count=1
module	upvalue de um fecho ||| lua	count=1
module	(mas não as ||| lual	count=1
module	esta ||| lual	count=2
module	es ||| lua	count=15
module	длину данных, расположенных ||| lua	count=1
module	of the [module] with the ||| [module]	count=1
module	function works ||| lual	count=1
module	string es la longitud ||| lua	count=1
function	erro ||| error	count=1
arg	sets [arg] as ||| [arg]	count=1
module	leve e v é ||| lua	count=1
module	t for the object ||| lual	count=1
module	table and ||| lual	count=1
module	the name ||| lua	count=1
module	o valor ||| debug	count=1
module	una ||| lual	count=3
module	заданному допустимому индексу: ||| lua	count=1
function	steuert die automatische speicherbereinigung ||| gc	count=1
module	except ||| lual	count=1
module	to the buffer ||| lual	count=1
module	"pánico" ||| lual	count=1
module	estado de un intérprete ||| lua	count=1
arg	от времени [arg] до ||| t2 [arg]	count=1
module	equivalente de t[k] ||| lua	count=1
module	der zeichenkette ||| string	count=2
module	realiza ||| lua	count=2
module	entradas no ||| lual	count=1
module	seu [module] como o ||| [module]	count=1
module	an error ||| lual	count=2
function	mesma versão de lua ||| checkversion	count=1
module	ansi ||| os	count=1
module	entries ||| lual	count=1
module	del objeto situado en ||| lual	count=1
module	ou invocação ||| lua	count=1
module	função ou ||| lua	count=2
module	o estado inteiro ||| lua	count=1
module	in the ||| lua	count=1
module	e a empilha ||| lua	count=1
module	valor situado ||| lua	count=5
arg	pattern (see §6 ||| pattern init plain	count=2
module	t[k] ||| lua	count=1
module	this macro is ||| lua	count=1
module	aumenta o ||| lual	count=1
module	establece una ||| lua	count=1
function	tiempo [function] la ||| [function]	count=1
module	to null ||| lua	count=1
function	a traceback ||| traceback	count=1
module	fornecido para o ||| lua	count=2
function	"w") ||| popen	count=1
module	coloca na pilha o ||| lua	count=1
module	el objeto en ||| lual	count=1
arg	вызывает функцию [arg_1] [arg_2] в защищенном режиме protected ||| [arg_1] [arg_2]	count=1
module	com ||| debug	count=1
module	a new [module] with all ||| [module]	count=1
module	da função é uma ||| lual	count=1
module	é a tabela ||| lua	count=2
function	el campo e de ||| getmetafield	count=1
function	uma nova tabela vazia ||| createtable	count=1
module	uma tabela ||| lua	count=2
module	equivalente a lual_prepbuffsize com ||| lual	count=1
module	t[k], ||| lua	count=1
arg	base ||| base	count=3
module	objeto situado ||| lual	count=1
module	lo elimina de la ||| lua	count=1
arg	zur durch [arg] gegebenen ||| whence [arg]	count=1
module	copiada ||| lual	count=1
arg	lua closure f1 ||| f1	count=1
module	é um número ||| lua	count=1
module	índice a una ||| lua	count=1
module	en la posición del ||| lual	count=2
arg	if repl is a ||| repl n	count=1
module	aumenta o tamanho ||| lual	count=1
function_arg	[function_1] t1 para ||| os [function_1] t2 [arg_2]	count=3
function	reasonable format ||| tolstring	count=1
function	e 0 caso contrário ||| istable	count=1
module	puntero a este ||| lua	count=1
arg	programm [arg] ||| [arg]	count=3
function_arg	valor absoluto [arg_2] ||| [function_1] [arg_2]	count=2
module	pila ||| lua	count=13
arg	of pattern [arg_2] ||| [arg_2] [arg_1]	count=1
module	bloco de ||| lua	count=1
module	un userdata completo retorna ||| lua	count=1
function	eine ||| seeall	count=1
module	lual_reg) na tabela no ||| lual	count=1
module	a table and pushes ||| lual	count=1
module	un string y 0 ||| lua	count=1
module	para una tabla es ||| lua	count=1
module	funções relacionadas a ||| lual	count=2
module	una ||| lua	count=12
module	en una ||| lua	count=1
module	version of lua ||| lual	count=1
module	e estabelece esse índice ||| lua	count=1
module	returns the name of ||| lua	count=1
arg	elements from table a1 ||| a1	count=1
arg	[arg] de la ||| [arg]	count=2
module	из файла [module] в соответствии ||| [module]	count=1
function	a reference in the ||| ref	count=1
module	lvl [module] ||| [module]	count=2
arg	retorna ||| x	count=2
module	of the [module] to ||| [module]	count=1
module	l (veja lual_reg) na ||| lual	count=1
arg	de y/x en ||| y x	count=1
module	tabla de ||| lua	count=3
arg	[arg] und ||| s [arg]	count=3
function	c function onto ||| pushcfunction	count=1
module	y/x [module] radians ||| [module]	count=1
function	tiene metatabla ||| getmetatable	count=1
function	mesma versão de ||| checkversion	count=1
module	lua по ||| lua	count=1
module	o igual ||| math	count=1
module	que el situado en ||| lua	count=1
module	de comprimento n ||| lual	count=1
module	estado de lua invocando ||| lual	count=1
module	para un ||| lua	count=2
module	en la parte ||| lual	count=2
function	o seno hiperbólico ||| sinh	count=1
arg	eine tabelle [arg_2] ||| [arg_2] [arg_1]	count=2
module	reemplazando ||| lual	count=1
module	retorna el tipo del ||| lua	count=1
arg	i ||| i	count=2
module	the same ||| lua	count=1
function	lua_tolstring com len igual ||| tostring	count=1
function	checks whether the ||| checkstring	count=1
module	coloca na pilha um ||| lua	count=1
function	controla el liberador ||| gc	count=1
function	carrega e executa ||| dostring	count=1
function	de memoria reservado para ||| objlen	count=1
module	the valid ||| lua	count=1
module	lual_buffer) a [module] ||| [module]	count=1
module	top + sz ||| lual	count=2
module	the lua value ||| lua	count=1
function	lua (representado como lua_state*) ||| tothread	count=1
module	não ||| lual	count=1
function	essa cadeia ||| checkstring	count=1
module	the type ||| lua	count=1
arg	[arg_1] given table ||| [arg_2] [arg_1]	count=4
arg	y que arredonda ||| y	count=1
module	cadeia formatada ||| lua	count=1
module	um ||| io	count=1
module	función de pánico y ||| lua	count=1
module	memoria si existe) y ||| lua	count=1
module	lua associado a ||| debug	count=1
module	la pila la tabla ||| lua	count=1
arg	zeichenkette [arg] umgekehrt ||| [arg]	count=1
module	descarrega ||| lua	count=1
module	index ||| lual	count=3
module	coloca essa tabela na ||| lual	count=1
module	esta função aloca um ||| lua	count=1
module	по заданному допустимому индексу: ||| lua	count=1
module	or ||| debug	count=1
module	en el índice ||| lua	count=5
arg	o valor value à ||| value	count=1
module	a lua_settable mas faz ||| lua	count=1
function	lua_tolstring with len equal ||| tostring	count=1
arg	t1 ||| t1	count=4
module	realiza el equivalente a ||| lua	count=2
arg	a field [arg_2] ||| [arg_1] [arg_2]	count=1
module	lua core ||| lua	count=1
module	esto es ||| lua	count=1
module	superior de la pila ||| lual	count=2
module	índice aceptable o lua_tnone ||| lua	count=1
function	remove ||| remove	count=2
function	depuración ||| sethook	count=1
module	uma cadeia ou ||| lua	count=1
module	tipo del valor situado ||| lua	count=1
module	topo ||| lual	count=2
function	éste ||| checkstring	count=1
module	to lua_pushfstring except ||| lua	count=1
module	parte superior de ||| lua	count=6
module	retorna o ||| lua	count=1
module	um acesso primitivo ||| lua	count=1
module	mismo para ||| lua	count=2
module	e a [module] especificados pela ||| [module]	count=1
arg	uma cadeia então ||| pattern	count=1
arg	hook ||| hook	count=2
arg	подпрограммы co в ||| co	count=1
arg	[arg] an position ||| table pos [arg]	count=1
module	copia del ||| lual	count=1
module	no array l (veja ||| lual	count=1
module	sin desplazar ningún elemento ||| lua	count=1
module	gegebenen [module] eine tabelle ||| [module]	count=1
module	zeichenkette ||| string	count=1
module	dirección es ||| lua	count=1
arg	una copia de s ||| s	count=1
module	variable stored ||| lua	count=1
function	lua_tonumberx com isnum igual ||| tonumber	count=1
module	função de gancho ||| lua	count=1
module	resultado del operador ||| lua	count=1
module	pieces of information about ||| lua	count=1
module	la "longitud" de un ||| lua	count=1
module	файла [module] в соответствии ||| [module]	count=1
function	ejecuta ||| dofile	count=1
module	to store all entries ||| lual	count=1
module	função ||| lua	count=10
arg	[arg_1] перехвата hook ||| [arg_2] [arg_1]	count=2
module	de uma ||| lua	count=1
function	pushes that metatable onto ||| getmetatable	count=1
module	metatabla ||| lual	count=1
module	idx é uma ||| lual	count=1
module	userdata do tipo tname ||| lual	count=1
function	of the local variable ||| getlocal	count=1
arg	coroutine co ||| co	count=1
function	su bloque de ||| touserdata	count=1
arg	durch [arg] welche ||| x [arg]	count=1
module	es un índice ||| lua	count=1
arg	parameter um den ||| x	count=1
module	dada y lo elimina ||| lua	count=1
module	que ela ||| lua	count=1
module	a c static ||| lua	count=1
module	require para ||| package	count=3
module	wird um ||| package	count=1
module	o elemento no índice ||| lua	count=1
module	stack elements between the ||| lua	count=1
function	empilha ||| pushcclosure	count=1
function	nova tabela vazia ||| newtable	count=1
function	nil si éste ||| getmetatable	count=1
arg	se repl é uma ||| s pattern repl	count=1
module	índice para preencher o ||| lua	count=1
function	del [function] en ||| [function]	count=1
module	valid ||| lua	count=2
module	s is a ||| lua	count=1
module	returned ||| lua	count=1
arg	seno de x ||| x	count=1
function	- 1 ||| extract	count=1
module	de una variable ||| lua	count=2
module	заданному ||| lua	count=4
module	nuevo estado de ||| lual	count=1
module	значение по ||| lua	count=1
module	конвертирует значение по заданному ||| lua	count=1
module	válido esto ||| lua	count=1
module	tamaño ||| lua	count=1
arg	chunk ||| chunk	count=1
module	verifica ||| lua	count=1
function	endereço do bloco e ||| newuserdata	count=1
function	checks whether the function ||| checknumber	count=1
module	número y lo ||| lual	count=1
arg	elements from table a1 ||| a1 f e	count=1
arg	table with information about ||| thread f what	count=1
module	любой допустимый ||| lua	count=1
module	retorna el ||| lual	count=1
module	topo da pilha ||| lual	count=2
module	primeiro argumento [module] ||| [module]	count=3
arg	the [arg] plus ||| whence [arg]	count=1
module	coroutine is ||| coroutine	count=1
module	of the stack and ||| lual	count=1
arg	pattern [arg_2] ||| [arg_1] [arg_2]	count=1
module	usado pela ||| lua	count=1
module	a variable ||| lua	count=1
module	de memoria si ||| lua	count=1
module	uma cadeia de ||| lual	count=1
module	valores es 0 ||| lua	count=1
arg	a field + width ||| field width	count=1
function	iterator function the table ||| ipairs	count=1
module	estabelece esse índice ||| lua	count=1
arg	field + [arg_2] ||| [arg_2] [arg_1]	count=1
function	de depuración ||| sethook	count=1
function_arg	[function_1] [arg_2] ||| os [function_1] t2 [arg_2]	count=3
module	que otro valor numérico ||| math	count=1
module	данных, расположенных по заданному ||| lua	count=1
function_arg	[function_1] [arg_2] hora ||| [function_1] [arg_2]	count=6
module	a new table with ||| lual	count=1
module	(por tanto reemplazando el ||| lua	count=1
module	co-rotina ||| coroutine	count=4
module	lança um ||| lual	count=1
module	в стеке ||| lual	count=1
module	esto es si ||| lua	count=1
module	es menor ||| lua	count=1
module	es el tamaño del ||| lua	count=1
module	o valor t[fname], onde ||| lual	count=1
function	função alocadora ||| setallocf	count=1
module	b (veja lual_buffer) ||| lual	count=3
module	el estado de un ||| lua	count=1
arg	closure f1 refer to ||| f1 n1	count=1
arg	uma tabela ||| what	count=1
module	acerca de ||| lua	count=2
module	the new value of ||| lua	count=1
arg	[arg_1] перехвата ||| [arg_2] hook [arg_1]	count=1
arg	value à variável local ||| value	count=1
module	la [module] ha finalizado ||| [module]	count=1
module	la coloca en ||| lua	count=2
arg	f [arg_2] ||| lua pcall [arg_1] [arg_2]	count=1
module	von ||| math	count=11
module	uma nova ||| lual	count=1
arg	of a table ||| table	count=1
module	a binary ||| lua	count=1
module	lua_pushstring but should be ||| lua	count=1
module	number ||| lual	count=2
module	um dado fluxo ||| lua	count=1
module	this function works ||| lual	count=1
module	position [module] the ||| [module]	count=1
module	devuelve ||| math	count=18
module	na pilha ||| lual	count=1
module	um novo fecho ||| lua	count=1
module	l ||| lual	count=4
module	entre diferentes fluxos ||| lua	count=1
function	a light userdata onto ||| pushlightuserdata	count=1
module	tp o ||| lua	count=1
module	up the elements above ||| lua	count=1
module	nova tabela com ||| lual	count=1
module	for the object ||| lual	count=1
module	lua ||| lual	count=4
module	lua (esto ||| lua	count=1
function	su bloque de memoria ||| touserdata	count=1
module	function as ||| lua	count=1
module	do tipo ||| lual	count=1
module	an ||| lual	count=3
module	el tamaño del bloque ||| lua	count=1
module	crea un nuevo ||| lua	count=1
module	('#'); ||| lua	count=1
module	função como ||| lua	count=1
module	da co-rotina co ||| coroutine	count=1
module	value at ||| lua	count=2
module	pila en ||| lua	count=1
arg	negativos i ||| i	count=1
module	misma (por tanto ||| lua	count=1
function	metatabela para ||| setmetatable	count=1
function	um manipulador de ||| type	count=1
module	pila a la posición ||| lua	count=1
arg	s liefert ||| s	count=1
module	essa ||| lual	count=1
module	a una posición ||| lua	count=1
module	fornecido k é ||| lua	count=1
module	is a number ||| lual	count=1
module	ставит вершину стека в ||| lua	count=1
module	the allocator ||| lua	count=1
module	completo retorna ||| lua	count=1
module	os valores retornados por ||| lual	count=2
module	to an ||| lual	count=1
module	un nuevo estado ||| lual	count=1
module	lua no índice fornecido ||| lua	count=3
module	desempilha uma tabela ||| lua	count=1
module	p por el ||| lual	count=1
function_arg	[function_1] de x ||| [arg_2] [function_1]	count=28
function	full userdata at the ||| getuservalue	count=1
module	todos ||| lua	count=1
module	*l with ||| lual	count=1
module	lua state ||| lua	count=1
function	el mismo ||| checknumber	count=1
arg	da cadeia ||| pattern	count=1
module	[module] boolean true ||| [module]	count=1
module	have a ||| debug	count=1
module	to yield ||| lua	count=1
module	lua_settable mas faz ||| lua	count=1
module	equivalent to lua_pushfstring except ||| lua	count=1
module	information about a ||| lua	count=1
module	(veja lual_reg) na tabela ||| lual	count=1
module	a ||| math	count=1
module	для строк, возвращает ||| lua	count=1
module	stored in the lua ||| lua	count=1
function_arg	começa [arg_2] ||| [function_1] [arg_2]	count=3
function	y retorna éste ||| checkstring	count=1
module	string as a ||| lual	count=1
arg	na posição [arg] ||| list [arg]	count=1
module	metatable of the object ||| lual	count=1
module	стеке ||| lual	count=1
module	+ ||| lual	count=2
module	información acerca de un ||| lua	count=1
arg	prog in ||| prog	count=1
module	objetos en el estado ||| lua	count=1
module	fichero que ||| io	count=1
module	novo fecho c na ||| lua	count=1
module	расположенных ||| lua	count=1
module	função de gancho de ||| lua	count=1
module	to ||| lual	count=8
module	a new ||| lua	count=1
module	lua_atpanic) que imprime ||| lual	count=1
module	not have ||| debug	count=1
module	value at the ||| lua	count=2
function	wert ex ||| exp	count=1
arg	la función [arg_2] ||| [arg_1] [arg_2]	count=7
module	[module] длину строки; ||| [module]	count=3
module	of ||| debug	count=1
module	uma função ou um ||| lua	count=1
function	the running ||| running	count=1
module	have a metatable ||| debug	count=1
module	del índice aceptable index2 ||| lua	count=1
arg	continúa ||| co val1	count=1
module	is a ||| lual	count=5
module	a structure used to ||| lua	count=1
arg	copia de s ||| s	count=1
module	of arguments ||| lua	count=1
module	argument arg ||| lual	count=5
module	datei ||| file	count=2
module	new value of ||| lua	count=1
module	troca valores ||| lua	count=1
module	para o estado inteiro ||| lua	count=1
module	c ao buffer b ||| lual	count=1
module	estrutura usada para guardar ||| lua	count=1
module	данных, ||| lua	count=1
module	value ||| lual	count=3
module	co-rotina em ||| lua	count=1
module	called ||| lua	count=1
module	acima desse ||| lua	count=1
module	retornados por funções ||| lual	count=2
module	"longitud" de ||| lua	count=1
module	core ||| lua	count=1
module	para un userdata es ||| lua	count=1
module	(veja lual_newmetatable) e ||| lual	count=1
arg	atribui o valor value ||| value	count=2
function	unten verschoben ||| remove	count=1
module	lual_prepbuffsize com o ||| lual	count=1
module	принивает любой ||| lua	count=1
module	uma continuação (veja §4 ||| lua	count=1
module	invocando lua_newstate ||| lual	count=1
module	arg is ||| lual	count=5
module	и ставит вершину ||| lua	count=1
module	metatable of the ||| debug	count=1
arg	level level ||| thread level	count=1
module	codificado pelo ||| lua	count=1
module	se o valor ||| lua	count=8
function	raiz cuadrada ||| sqrt	count=1
module	(veja lual_buffer) uma ||| lual	count=1
module	base [module] natural ||| [module]	count=1
arg	this function returns ||| index value	count=1
module	um dado fluxo de ||| lua	count=1
function	um fluxo ||| isthread	count=1
module	establece la ||| lua	count=1
function	mesma versão ||| checkversion	count=1
module	esta ||| lua	count=2
arg	[arg] en ||| f [arg]	count=1
function	a lua chunk ||| loadstring	count=1
function	total size of ||| stringtonumber	count=1
module	pila la ||| lua	count=1
module	associated ||| lual	count=1
function	запускает ||| resume	count=1
module	ou ||| lua	count=4
module	si ||| lua	count=8
module	given index to a ||| lual	count=1
function	converte o ||| tolstring	count=1
module	un string y ||| lua	count=1
module	(através do fluxo) ||| lua	count=1
function	string convertible to a ||| isnumber	count=1
module	of the ||| lual	count=4
module	es inválida (esto es ||| lua	count=1
module	the stack elements between ||| lua	count=1
arg	[arg] mais ||| whence [arg]	count=3
module	used ||| lua	count=2
arg	f con [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] tabela fornecida ||| [function_1] [arg_2]	count=2
module	imprime un mensaje en ||| lual	count=1
module	liberador de ||| lua	count=1
module	o valor lua associado ||| debug	count=1
module	a [module] especificados pela ||| [module]	count=1
module	zu io ||| io	count=1
function	error adiciona alguma informação ||| error	count=1
module	converte o valor ||| lua	count=4
arg	value [arg_2] ||| table insert [arg_2] [arg_1]	count=3
module	returns a ||| lual	count=1
module	t[k], onde t ||| lua	count=1
module	mismo ||| lual	count=1
module	memoria ||| lual	count=1
module	changes the ||| lua	count=1
module	принивает любой допустимый индекс, ||| lua	count=1
module	crea una copia ||| lual	count=1
arg	prog в отдельном ||| prog	count=1
module	del string p por ||| lual	count=1
module	допустимому индексу ||| lua	count=2
module	que está en la ||| lua	count=1
function_arg	comienza o [arg_2] ||| [function_1] [arg_2]	count=5
module	verifica se ||| lual	count=6
arg	o continúa ||| val1	count=1
arg	esta función asigna ||| valor	count=1
arg	gegebene funktion als ||| mask count	count=1
module	grows ||| lual	count=1
function	the memory-allocation function of ||| getallocf	count=1
module	the metatable of the ||| lual	count=1
module	memoria basada en ||| lual	count=1
module	topo da ||| lual	count=2
module	o [module] fornecido ||| [module]	count=1
module	que imprime ||| lual	count=1
module	un mensaje en la ||| lual	count=1
module	funções ||| lual	count=4
module	la misma ||| lua	count=1
module	(por tanto reemplazando ||| lua	count=1
module	pilha ao buffer b ||| lual	count=1
module	dirección es inválida (esto ||| lua	count=1
arg	y/x en radianes pero ||| y	count=1
function	dumps ||| dump	count=1
arg	string ||| string	count=1
arg	uma ||| pattern	count=1
module	index idx ||| lual	count=1
function	e retoma ||| resume	count=1
module	índice obj ||| lual	count=1
module	tabla de la ||| lua	count=2
module	lua_tnone ||| lua	count=1
module	at index ||| lual	count=2
module	all using ||| lual	count=1
module	äquivalent zu ||| io	count=1
arg	closure f1 refer ||| f1 n1	count=1
module	строк, возвращает ||| lua	count=1
function	de gancho corrente ||| gethook	count=1
module	una función en ||| lua	count=1
module	preencher ||| lua	count=1
function	válido ||| type	count=1
module	en la función ||| lual	count=1
module	un acceso ||| lua	count=1
module	es un índice a ||| lua	count=1
module	in ||| lua	count=1
function	initializes ||| buffinit	count=1
function	and time specified ||| time	count=1
module	liberador ||| lua	count=1
module	para ||| lual	count=7
module	is not null ||| lual	count=1
module	do fluxo) para ||| lua	count=1
module	aceptable index1 ||| lua	count=1
module	the address ||| lua	count=1
module	la pila sin desplazar ||| lua	count=1
module	индекс, или 0 и ||| lua	count=1
module	elimina una ||| lua	count=2
module	store all entries in ||| lual	count=1
module	*l with the ||| lual	count=1
arg	[arg_1] hook ||| [arg_1] [arg_2]	count=3
module	valor de una variable ||| lua	count=1
module	o topo da ||| lua	count=1
module	un ||| lual	count=10
module	fluxo de ||| lua	count=4
module	cadeia formatada e ||| lua	count=1
arg	value [arg_2] ||| [arg_2] [arg_1]	count=3
module	tiene ||| debug	count=1
module	para armazenar todas ||| lual	count=1
arg	a1 ||| a1 f e t	count=1
module	loads ||| lua	count=1
module	o coletor de lixo ||| lua	count=1
module	booleano ||| lua	count=1
module	lua_pushfstring exceto ||| lua	count=1
module	auf dem [module] ab ||| [module]	count=1
module	lixo ||| lua	count=1
arg	подпрограммы co ||| co	count=1
module	the stack ||| lua	count=11
module	veja ||| lual	count=1
module	en este ||| lua	count=1
module	para um ||| lua	count=3
module	reemplazando ||| lua	count=1
module	reserva ||| lual	count=1
module	el [module] válido ||| [module]	count=1
module	table ||| table	count=2
function	c function onto the ||| pushcfunction	count=1
module	memoria si ||| lua	count=1
arg	func_hook ||| func_hook	count=1
function	adds the ||| addvalue	count=1
module	de um dado estado ||| lua	count=1
module	[module] o ||| [module]	count=1
module	functions in ||| lual	count=1
function	adiciona o valor ||| addvalue	count=1
function	globalen umgebung erben kann ||| seeall	count=1
arg	y/x en radianes ||| y x	count=1
module	en un proceso ||| lua	count=1
module	elementos lançando um ||| lual	count=1
module	la parte superior ||| lua	count=6
module	arg ||| lual	count=11
module	la pila a la ||| lua	count=1
function	initializes a ||| buffinit	count=1
module	si se refiere a ||| lua	count=1
module	dado de ||| lua	count=1
module	execução e 0 ||| lua	count=1
function	a metatabela ||| setmetatable	count=1
function	debugging hook function ||| sethook	count=1
module	(mas não ||| lual	count=1
module	new ||| lual	count=1
module	elemento ||| lua	count=3
arg	co ||| co	count=3
module	preencher o buraco ||| lua	count=1
module	fluxo de execução rodando ||| lua	count=1
module	si éste no tiene ||| debug	count=1
module	индексу ||| lua	count=3
arg	são ||| i j	count=2
module	the [module] a ||| [module]	count=1
module	store ||| lual	count=1
module	the stack ||| lual	count=5
module	cadeia de comprimento n ||| lual	count=1
module	inteiro de uma interpretador ||| lua	count=1
module	the allocator function ||| lua	count=1
arg	de x en ||| x	count=2
module	el resultado ||| lua	count=1
module	de la función ||| lual	count=6
module	usado por la ||| lua	count=1
module	índice aceptable para un ||| lua	count=1
module	pila ||| lual	count=3
module	to a lua_integer ||| lual	count=1
module	aumenta o tamanho da ||| lual	count=1
function	um upvalue ||| setupvalue	count=1
arg	the metatable for ||| metatable	count=1
module	pushes ||| lua	count=9
module	sz ||| lual	count=2
arg	von n ||| n	count=1
module	para guardar pedaços diferentes ||| lua	count=1
module	muda ||| lua	count=1
function	the fractional part of ||| mininteger	count=1
module	para armazenar ||| lual	count=1
module	estabelece o ||| lua	count=1
arg	[arg_1] func_hook ||| [arg_1] [arg_2]	count=1
module	función en forma ||| lua	count=1
module	para otros valores es ||| lua	count=1
module	o lua_tnone si la ||| lua	count=1
module	upvalues opcionais veja ||| lual	count=1
arg	[arg_1] func_hook ||| [arg_2] [arg_1]	count=1
function	a parte fracionária de ||| modf	count=1
module	of a ||| lua	count=1
module	la ||| debug	count=1
function_arg	metatabela para [arg_2] ||| [function_1] [arg_2]	count=1
function	tangens hyperbolicus ||| tanh	count=1
module	c na ||| lua	count=1
module	base [module] natural logarithms ||| [module]	count=1
function	renombra un fichero ||| rename	count=1
module	função aloca um novo ||| lua	count=1
module	the given index ||| lual	count=1
module	una tabla ||| lua	count=3
arg	retorna message ||| message	count=1
module	execução ||| lua	count=4
module	tanto reemplazando el valor ||| lua	count=1
module	una co-rutina ||| lua	count=1
module	und [module] uhrzeit entsprechend ||| [module]	count=1
module	que otro valor ||| math	count=1
module	de un valor en ||| lua	count=1
module	o coletor ||| lua	count=1
arg	[arg] korrekten quadranten ||| y [arg]	count=3
module	guardar ||| lua	count=1
module	que deve ser uma ||| string	count=1
module	c static variable ||| lua	count=1
arg	co-rotina co ||| co	count=1
module	the name of ||| lua	count=1
module	a lual_prepbuffsize com o ||| lual	count=1
function	entorno ||| setfenv	count=1
module	elemento no índice válido ||| lua	count=1
module	de la [module] ||| [module]	count=1
module	panic function and ||| lua	count=1
function	a biblioteca c ||| loadlib	count=1
module	uma cadeia e ||| lual	count=1
module	de lua situado ||| lua	count=2
arg	base dada ||| base	count=1
module	en forma de ||| lua	count=1
module	tipo codificado ||| lua	count=2
module	used to ||| lua	count=1
module	retorna la dirección ||| lua	count=1
module	lual_reg) ||| lual	count=1
module	raising an error if ||| lual	count=1
arg	делает данную функцию функцией ||| mask count	count=1
module	función de pánico ||| lua	count=1
module	which must be one ||| lua	count=1
function	pops n elements from ||| pop	count=1
module	of the [module] to the ||| [module]	count=1
module	is a table ||| lual	count=1
module	esse endereço ||| lua	count=1
module	stack to the ||| lual	count=1
module	en un ||| lua	count=3
module	una variable local de ||| lua	count=2
module	welche [module] quotienten auf ||| [module]	count=1
module	umgebung erben ||| package	count=1
arg	given value ||| value	count=1
module	between the ||| lua	count=1
arg	функцией перехвата hook ||| thread hook	count=2
module	calls [module] with v ||| [module]	count=1
module	da pilha e a ||| lua	count=1
function	trecho lua (sem executá-lo) ||| load	count=1
module	(veja lual_newmetatable) e retorna ||| lual	count=1
module	es el tamaño ||| lua	count=1
function	converte um ||| tocfunction	count=1
arg	from time t1 to ||| t1	count=1
module	reserva de ||| lual	count=1
module	este string ||| lua	count=1
module	new table with a ||| lual	count=1
function	is a valid ||| type	count=1
module	un número y ||| lual	count=2
module	idx é ||| lual	count=1
function	o ||| getuservalue	count=1
module	estado ||| lua	count=4
module	informação sobre uma função ||| lua	count=2
function	umgebung erben ||| seeall	count=1
arg	[arg] list deslocando ||| list [arg]	count=1
arg	dada por offset ||| offset	count=1
arg	la función al nivel ||| proceso nivel	count=1
module	tabla en la posición ||| lual	count=1
arg	lua f1 ||| f1	count=2
arg	of its argument v ||| v	count=1
arg	número [arg] ||| [arg]	count=1
module	moves the top ||| lua	count=1
module	t para ||| lual	count=1
module	pilha uma cadeia ||| lua	count=1
module	pushes ||| lual	count=1
arg	t and 0 so ||| t	count=1
module	coloca na ||| lua	count=4
module	v onde ||| lua	count=1
module	estabelece como a ||| lua	count=1
arg	[arg] локальной внешней ||| func up [arg]	count=3
module	opcionais veja ||| lual	count=1
module	de la pila en ||| lua	count=1
arg	параметром [arg] ("seed"): каждый ||| [arg]	count=1
module	diferentes fluxos de ||| lua	count=1
arg	table ||| table	count=8
arg	na posição [arg] list ||| list [arg]	count=1
function	de un upavalue de ||| getupvalue	count=1
function	about the interpreter runtime ||| getstack	count=1
arg	que lee [arg] (si modo ||| [arg]	count=1
module	idx é uma tabela ||| lual	count=1
module	данных, расположенных по ||| lua	count=1
module	um valor maior ||| math	count=1
module	valores retornados por ||| lual	count=2
module	elementos ||| lual	count=1
module	um manipulador ||| io	count=1
module	la coloca en la ||| lua	count=2
module	as funções no array ||| lual	count=1
module	string then its ||| string	count=1
module	should ||| lua	count=1
module	mismo de la ||| lual	count=1
arg	value à variável ||| value	count=1
module	en forma ||| lua	count=1
module	and pops the object ||| lual	count=1
module	aparición del string ||| lual	count=1
module	en caso ||| lual	count=1
arg	y/x en radianes ||| y	count=1
arg	вставляет элемент [arg] в ||| table pos [arg]	count=1
function	for a temporary ||| tmpfile	count=1
module	tabla ||| lua	count=4
module	returns this number ||| lual	count=1
module	no índice fornecido e ||| lua	count=1
module	entradas ||| lual	count=1
module	nil si éste ||| debug	count=1
module	string y 0 en ||| lua	count=1
module	string as ||| lual	count=1
module	lo coloca en ||| lua	count=1
module	n copiada ||| lual	count=1
module	elementos acima desse ||| lua	count=1
function	a função alocadora ||| setallocf	count=1
arg	dinamicamente liga o programa ||| funcname	count=1
module	del índice válido ||| lua	count=1
module	v é o valor ||| lua	count=1
function	value [function] ||| [function]	count=2
arg	y/x ||| y	count=2
arg	function at [arg] of ||| [arg] local	count=1
module	esta função ||| lual	count=2
module	name tname in the ||| lual	count=1
arg	равенства [arg] и v2 ||| [arg]	count=1
function_arg	[function_1] continúa ||| [arg_2] [function_1]	count=1
module	index idx is ||| lual	count=1
module	funções no array ||| lual	count=1
module	same state ||| lua	count=1
module	tipo codificado por ||| lua	count=1
module	equivalente de t[k] = ||| lua	count=1
arg	[arg] en modo ||| f [arg]	count=1
module	una tabla de la ||| lua	count=2
module	fecho c ||| lua	count=1
module	si v1 es igual ||| lua	count=1
module	directo (sin metamétodos) ||| lua	count=1
function	equivalent ||| flush	count=1
module	e estabelece esse ||| lua	count=1
module	retorna o valor ||| debug	count=1
module	o qual ||| lua	count=1
module	número e 0 caso ||| lua	count=1
module	a função de ||| lua	count=2
module	para arrays de funções ||| lual	count=1
module	y [module] especificadas en ||| [module]	count=1
module	except that ||| lual	count=1
module	different ||| lua	count=1
module	am gegebenen [module] eine zeichenkette ||| [module]	count=1
arg	índice up ||| up	count=3
module	um novo ||| lua	count=4
module	the values returned by ||| lua	count=1
arg	dada por [arg] más la ||| de_dónde [arg]	count=1
module	index1 es menor ||| lua	count=1
arg	[arg_1] j ||| string sub [arg_1] [arg_2]	count=3
module	valor ||| lual	count=3
module	superior ||| lual	count=2
module	todas as funções no ||| lual	count=1
arg	[arg] в ||| [arg]	count=1
function	ponteiro c genérico (void*) ||| topointer	count=1
module	core that ||| lual	count=1
module	é uma cadeia ou ||| lua	count=1
function	de pi ||| pi	count=1
function_arg	[function_1] or continues ||| [function_1] [arg_2]	count=1
arg	função ||| thread	count=1
module	posición dada y lo ||| lua	count=1
module	(i ||| lua	count=2
function	proceso principal ||| running	count=1
function	associado a ||| getuservalue	count=1
module	inválida ||| lua	count=1
arg	the lua closure f1 ||| f1	count=1
module	de reserva de memoria ||| lual	count=1
module	qual deve ser ||| lua	count=1
module	pila actual y 0 ||| lua	count=1
function	a lua_gettable mas faz ||| rawget	count=1
module	no índice fornecido k ||| lua	count=1
module	e 0 ||| lua	count=6
arg	[arg] na ||| list pos [arg]	count=3
arg	table a1 ||| a1	count=1
module	pila sin desplazar ningún ||| lua	count=1
function	floats in lua ||| number	count=1
module	de memória com ||| lua	count=1
function	вставляет копию элемента в ||| pushvalue	count=1
module	aloca ||| lua	count=1
module	preencher o ||| lua	count=1
module	s reemplazando cualquier aparición ||| lual	count=1
module	variable number of ||| lua	count=1
arg	hora [arg] a ||| t2 [arg]	count=1
module	the metatable associated ||| lual	count=1
module	por funções ||| lual	count=2
function	de entorno ||| setfenv	count=1
module	primitivo ||| lua	count=1
module	the call ||| lual	count=2
module	situado en el ||| lua	count=3
function	é um userdata leve ||| islightuserdata	count=1
function	of the ||| getmetatable	count=1
module	um registro ||| lua	count=1
module	valor más grande o ||| math	count=1
module	c static ||| lua	count=1
module	elimina ||| lual	count=1
module	[module] im ||| [module]	count=1
module	uma interpretador lua ||| lua	count=1
arg	de y/x ||| y	count=1
module	the [module] sets ||| [module]	count=2
module	it does not have ||| debug	count=1
module	un userdata ||| lual	count=1
module	retorna o valor lua ||| debug	count=1
module	t é a ||| lua	count=2
module	handle ||| io	count=1
module	o directorio ||| os	count=1
module	todas as entradas no ||| lual	count=1
module	of the object at ||| lual	count=1
module	la metatabla ||| lual	count=1
module	elements above this index ||| lua	count=1
module	de "pánico" (véase lua_atpanic) ||| lual	count=1
function	função alocadora de ||| setallocf	count=1
module	the top of the ||| lual	count=3
module	der [module] liefert ||| [module]	count=1
function_arg	[function_1] [arg_2] a hora ||| os [function_1] t2 [arg_2]	count=3
arg	f1 refer to the ||| f1	count=1
module	e ||| lual	count=6
module	situación ||| lua	count=3
function	does not ||| getmetatable	count=1
module	lua state ||| lual	count=1
arg	durch [arg] gegebenen ||| whence [arg]	count=1
module	acima ||| lua	count=1
module	ou igual a qualquer ||| math	count=1
module	userdata do ||| lual	count=1
function	obtém informação sobre ||| getupvalue	count=1
module	lo ||| lual	count=1
function	tipo para funciones hook ||| hook	count=1
arg	[arg] como uma ||| [arg]	count=3
module	actual y ||| lua	count=1
module	hora formateada de acuerdo ||| os	count=1
module	hook ||| lua	count=1
module	byte c ||| lual	count=1
arg	path ||| path sep	count=1
module	e k é o ||| lua	count=1
module	of information about ||| lua	count=1
module	tabela da pilha ||| lua	count=1
function	[function] the stack ||| [function]	count=1
function	usando a mesma versão ||| checkversion	count=1
function	system ||| execute	count=1
arg	[arg] fornecida que ||| value [arg]	count=2
function	seguir ||| setfuncs	count=1
arg	die [arg] mit den ||| [arg]	count=1
module	en la situación del ||| lua	count=3
arg	индексом [arg] функции func ||| func [arg]	count=2
module	f com userdata ud ||| lua	count=1
module	retorna un puntero ||| lua	count=2
module	по ||| lua	count=4
module	los objetos en ||| lua	count=1
module	and returns ||| lual	count=5
module	valores entre diferentes ||| lua	count=1
module	número y lo retorna ||| lual	count=1
function	manipulador de ||| type	count=1
module	posición del índice ||| lual	count=2
module	valor más grande ||| math	count=1
module	de execução e indiretamente ||| lua	count=1
function	returns the ||| getmetatable	count=1
module	ela recebe uma ||| lua	count=1
module	en un booleano ||| lua	count=1
module	(see ||| lua	count=1
module	realiza el ||| lua	count=2
module	el tamaño ||| lua	count=1
module	a lua_settable ||| lua	count=1
function	converte ||| tocfunction	count=1
module	output file ||| file	count=1
module	(llamando al correspondiente ||| lua	count=1
module	é equivalente ||| lua	count=1
arg	a2 performing the ||| f e t a2	count=1
module	and the ||| lual	count=1
module	[module] sets it ||| [module]	count=2
module	toda la ||| lua	count=1
module	inválida (esto es un ||| lua	count=1
function	metatable of ||| getmetatable	count=1
module	caso de ||| lual	count=1
arg	x en radianes ||| x	count=2
module	de um tabela ||| lua	count=1
module	copiada anteriormente ||| lual	count=1
function	[function] the ||| [function]	count=4
function	the string's length ||| checklstring	count=1
arg	the [arg] ||| x [arg]	count=1
function	de ||| type	count=1
arg	des arguments [arg] falsch ||| [arg]	count=1
module	but should ||| lua	count=1
module	operador longitud ||| lua	count=1
arg	angle [arg] from ||| [arg]	count=1
module	el mismo de ||| lual	count=1
module	um valor no índice ||| lua	count=1
module	tabela no topo ||| lual	count=1
function	retorna éste ||| checkstring	count=1
module	fornecido k é o ||| lua	count=1
function	de entre sus argumentos ||| max	count=1
module	as funções no ||| lual	count=1
function	entorno de ||| getfenv	count=1
module	válido ||| lua	count=4
module	all using the same ||| lual	count=1
function	t[n], where t ||| rawgeti	count=1
module	de lua (esto ||| lua	count=1
function	invocante ||| yield	count=1
module	по заданному валидному индексу ||| lua	count=1
arg	und [arg] können negativ ||| s i [arg]	count=1
module	memoria basada ||| lual	count=1
module	l (veja lual_reg) ||| lual	count=1
module	this integer cast ||| lual	count=1
module	armazenar todas as entradas ||| lual	count=1
module	ser un string ||| string	count=1
module	require verwendet wird ||| package	count=1
module	anteriormente para a ||| lual	count=1
function	activación dado ||| setlocal	count=1
arg	f1 refer ||| f1	count=1
arg	[arg] mais uma ||| whence [arg]	count=3
module	(véase lua_atpanic) ||| lual	count=1
module	at the given ||| lua	count=2
module	otro valor numérico ||| math	count=1
module	c estándar realloc y ||| lual	count=1
arg	[arg_1] al nivel ||| [arg_2] [arg_1]	count=3
module	to a ||| lua	count=1
module	with a ||| lual	count=1
function	lua_tolstring con len igual ||| tostring	count=1
module	moves the ||| lua	count=1
module	valor tp o ||| lua	count=1
module	b (veja ||| lual	count=3
module	que ||| lual	count=1
module	structure used to carry ||| lua	count=1
module	gebrochenen anteil [module] x ||| [module]	count=1
module	de la pila ||| lua	count=9
module	válido fornecido ||| lua	count=1
module	a estabelece ||| lua	count=1
module	pela api de ||| lua	count=1
module	datum und [module] uhrzeit ||| [module]	count=1
function	initializes a buffer b ||| buffinit	count=1
module	but should be used ||| lua	count=1
module	el estado ||| lua	count=2
module	para un string ||| lua	count=1
module	(veja §4 ||| lua	count=3
arg	coseno de x ||| x	count=1
module	a raw ||| lua	count=1
module	von ||| package	count=1
module	número ou uma ||| lua	count=1
