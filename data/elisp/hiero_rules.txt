function	if ||| coordinates in window p	count=1
function	into ||| kbd	count=1
arg	value for parameter ||| parameter	count=1
function	name and process id ||| list	count=1
function	display-buffer may ||| pop up	count=1
function_arg	stores [arg_2] ||| [function_1] plist property [arg_2]	count=1
function	the object ||| object	count=2
arg	function ||| props	count=1
function_arg	[function_1] index index ||| [function_1] ring [arg_2]	count=1
arg	count screen lines down ||| count	count=1
function	fit the ||| fit	count=1
arg	this function returns t [arg_1] [arg_2] have equal components and ||| [arg_1] [arg_2]	count=1
function	to offer to save ||| save	count=1
function	of all expressions debugged ||| test	count=1
module	[module] string ||| [module] 1	count=1
function_arg	the symbol [arg_2] ||| [function_1] [arg_2]	count=3
module	variables ||| 11 11	count=2
function	by the fieldth ||| numeric fields	count=1
module	string or ||| 21	count=1
function	buffer [function_2] ||| [function_1] [function_2] p flag	count=1
function	not ||| auto save list file	count=1
function	symbolic file mode ||| symbolic	count=1
arg	key to ||| key	count=1
arg	sublists [arg] ||| [arg]	count=1
arg	named function symbol ||| symbol function	count=2
module	character sets ||| 32	count=1
module	returns ||| 6	count=6
arg	from the alist parameters ||| parameters	count=1
arg	and end ||| end	count=2
function	by eval-expression and thus ||| eval expression print	count=1
function_arg	forward [arg_2] ||| [function_1] [arg_2]	count=3
module	the entire contents ||| 29 4	count=1
function	are t ||| count population	count=1
function	members ||| difference	count=1
module	auto-save-list-file-name if ||| 25 2	count=1
function	coding systems ||| find coding systems for	count=1
arg	[arg_1] and object2 ||| [arg_2] [arg_1]	count=1
function	value for ||| window	count=1
function	across characters whose syntax ||| syntax	count=1
arg	[arg_1] end into ||| [arg_2] [arg_1]	count=1
arg	function returns the ||| window	count=8
arg	end on ||| end	count=1
function	and then ||| then	count=1
arg	the file filename as ||| filename	count=1
arg	then ||| then	count=1
arg	binding for [arg_2] ||| [arg_1] [arg_2]	count=1
function	function returns the binding ||| binding	count=2
function	warning ||| warning	count=1
function_arg	[function_1] after node ||| [arg_2] [function_1]	count=1
module	defines ||| 35 2	count=1
function	of attributes of ||| face all attributes	count=1
function	[function_1] symbolic ||| [function_1] [function_2]	count=3
arg	command copies the ||| keep-time parents copy-contents	count=1
function	non-nil ||| p	count=1
function	body of ||| body	count=1
module	minibuffer a ||| 19 13	count=1
function	returns the backing ||| backing	count=1
module	name and ||| 25 2	count=1
arg	fn returns a ||| fn	count=1
function	image cache ||| image cache	count=2
function	means display-buffer ||| up	count=1
module	is [module] and returns ||| [module]	count=1
module	this function returns ||| 12.12	count=1
function	total width in columns ||| total width	count=1
function	of consecutive button presses ||| click	count=1
function	is on a ||| on	count=1
arg	providing completion ||| directory default require-match initial predicate	count=1
function	sets the parent ||| set keymap parent	count=1
function	include [function] part ||| [function]	count=1
function	coding system to use ||| terminal coding system	count=1
arg	font-spec for [arg_2] ||| [arg_2] [arg_1]	count=2
function	character of command ||| char exclusive	count=1
module	this variable ||| 27 11	count=1
function	function returns window’s value ||| window parameter	count=1
function_arg	a serial [arg_2] ||| [function_1] [arg_2]	count=1
arg	suffixes in suffixes ||| suffixes predicate	count=1
arg	start within strings ||| start	count=1
function	to titleized words ||| s titleized words	count=2
arg	regexp [arg_2] ||| [arg_2] [arg_1]	count=1
module	accessible ||| 4	count=1
function	[function_1] user ||| [function_2] mail [function_1]	count=1
function	the byte ||| byte	count=1
function	[function] named ||| [function] abbrev	count=2
function	moves point to the ||| ewoc goto	count=1
function	the truename of ||| truename	count=1
function_arg	register name [arg_2] ||| [function_1] read with preview [arg_2]	count=1
arg	according to the ||| no-remap	count=1
function	a minibuffer window ||| minibuffer	count=1
function	configurations as regards ||| configurations	count=1
arg	automatically from filename ||| filename	count=1
function	replace first ||| map first	count=1
module	this function returns the ||| 12	count=2
module	a key sequence ||| 21	count=1
function	not already set it ||| auto save list file	count=1
arg	face to [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	attributes of [arg_2] ||| [arg_2] [function_1]	count=3
function	already set it non-nil ||| file	count=1
arg	all x in list ||| list	count=2
arg	[arg_1] args ||| [arg_1] [arg_2]	count=3
arg	that symbol ||| symbol value	count=1
function	ring ||| ring	count=1
function	make a ||| pop	count=1
function	of color [function_2] ||| [function_2] [function_1]	count=4
function	are t [function_2] ||| [function_2] vector [function_1]	count=1
function	global keymap ||| global map	count=2
arg	match-form and [arg_2] ||| [arg_1] [arg_2]	count=1
function	the previous buffer in ||| prev buffer	count=1
function_arg	[function_1] newname ||| [arg_2] [function_1]	count=3
function	clears ||| clear	count=1
function	previous buffer ||| prev buffer	count=2
arg	alist has ||| alist	count=1
function	you have not ||| file	count=1
function	byte-code ||| byte code	count=1
function	is obsolete ||| make obsolete	count=1
function	name ||| auto	count=1
function	and ||| normal	count=1
arg	the width of ||| width pretend	count=1
function	list of color ||| color	count=1
function_arg	[function_1] in ||| [function_1] window from [arg_2] x-limit y-limit mode-and-header-line	count=2
arg	[arg_1] and end ||| [arg_1] [arg_2] translation	count=1
arg	filename ||| filename id-format	count=1
arg	this function returns the ||| window	count=8
function_arg	[function_1] value from ||| [arg_2] [function_1]	count=4
function_arg	parent [arg_2] ||| [arg_2] [function_1]	count=1
function	function defines an ||| define	count=1
function	beginning of ||| beginning	count=2
module	must be allocated ||| e 3	count=1
function	marks window as dedicated ||| window dedicated p	count=1
function	current buffer as auto-saved ||| buffer auto saved	count=1
function	history element that ||| history element	count=2
function	xml rather than html ||| xml region	count=1
function_arg	[function_1] of fn ||| [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] symbol element [arg_2]	count=1
arg	count repetitions of character ||| count character	count=1
function	0 ||| buffer end	count=1
arg	[arg_1] [arg_2] ||| [arg_2] definitions [arg_1]	count=12
module	set in ||| 3 8	count=1
arg	and opens a ||| must-suffix	count=1
module	[module] emacs ||| [module]	count=3
function_arg	split s [arg_2] ||| [function_1] separator [arg_2]	count=2
function	of the line ||| line	count=1
function	process ||| list file	count=1
function	[function_1] [function_2] ||| [function_1] user [function_2]	count=6
function	inserts a portion ||| insert buffer substring	count=1
arg	to inverse-video-p ||| inverse-video-p frame	count=1
function	host name and ||| save	count=1
function	the accessible portion ||| narrow	count=1
arg	buffer and ranges from ||| front-advance rear-advance	count=1
module	list containing all the [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	property list of ||| charset plist	count=1
arg	by providing completion ||| predicate require-match initial history default inherit-input-method	count=1
function	has ||| map char table	count=2
function	indentation of the current ||| indentation	count=1
arg	[arg_1] tabname ||| [arg_2] definitions [arg_1]	count=3
arg	dividend by divisor ||| dividend divisor	count=4
function	of justification ||| default justification	count=1
function	has a non-nil ||| char table	count=1
function	each element of ||| map	count=1
function	the elements ||| vconcat	count=1
module	the elements ||| 6	count=1
arg	[arg_1] and to ||| [arg_2] [arg_1]	count=1
module	point is at ||| 31	count=2
arg	reg ||| reg	count=1
module	line which is the ||| 17.1	count=1
function	defines an abbrev ||| define	count=1
function	function reads abbrev ||| read abbrev	count=2
function	to its initials ||| s word initials	count=1
module	line which is ||| 31 17.1	count=1
arg	of filename [arg_2] ||| [arg_2] [arg_1]	count=2
function	face ||| face	count=3
function	[function_1] area ||| [function_2] [function_1]	count=5
function	eval-expression and ||| eval expression print	count=1
function	slot ||| slot	count=2
function	variable ||| ring	count=1
arg	a ||| format-string	count=1
function	in the region from ||| region	count=1
arg	for key with value ||| key	count=1
arg	position in [arg_2] ||| [arg_2] [arg_1]	count=1
arg	positions markers or integers ||| integers	count=1
module	this function ||| 36 3	count=1
arg	evaluate form and ||| form	count=1
function_arg	character [arg_2] ||| [function_1] [arg_2]	count=1
function	function returns [function] all ||| terminal [function]	count=1
function	it initializes ||| auto save	count=1
function	the file name of ||| terminal name	count=1
module	this function returns ||| 31 1	count=2
function	scroll ||| window scroll	count=1
function	terminal [function] that process ||| process tty [function]	count=1
function	indentation of the ||| indentation	count=1
function	file [function_2] ||| [function_2] [function_1]	count=17
function	you compare two ||| compare buffer	count=1
arg	the named function symbol ||| symbol where function props	count=1
function_arg	[function_1] [arg_2] in ||| 12 10.1 [function_1] [arg_2]	count=2
function	some other ||| replace	count=1
function	the number of items ||| count	count=1
module	on ||| 25	count=1
module	the value of this ||| 30 7	count=1
module	frames in the opposite ||| 28	count=1
module	ending ||| 20	count=1
module	this ||| 30 6	count=1
function	creates and [function_2] ||| [function_2] [function_1]	count=1
arg	file filename ||| filename	count=10
arg	[arg_1] defines ||| [arg_2] [arg_1]	count=4
module	this function returns ||| 29	count=1
function	the ||| auto save list file	count=1
module	already set it non-nil ||| 2	count=1
arg	[arg] any ||| [arg]	count=1
function	a single paragraph ||| paragraph	count=1
arg	prompting with prompt ||| prompt directory	count=1
arg	and [arg] in the ||| [arg]	count=1
arg	that x [arg_2] ||| set mouse pixel position [arg_1] [arg_2]	count=3
module	sent by emacs ||| 38	count=1
rep	of [function_arg_2] ||| [function_arg_2] [module_1]	count=1
arg	of the nth ||| n	count=4
function	[function_1] minibuffer ||| [function_2] [function_1]	count=5
function	of ||| format seconds	count=2
function	window as ||| window	count=1
arg	the text from beg ||| beg	count=1
function	no match ||| string match	count=1
function	[function_1] category table ||| [function_1] [function_2]	count=1
arg	but allows only ||| default require-match initial	count=1
function_arg	table according to ||| table keyword-args	count=1
function	your init ||| auto save list file	count=1
arg	filename to [arg_2] ||| [arg_2] [arg_1]	count=2
arg	index from to index ||| from	count=1
function_arg	tree for [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] docstring ||| [arg_1] [arg_2]	count=4
module	in a ||| 27 1	count=1
arg	match-form and executes ||| match-form &rest	count=2
function	left and right margins ||| window margins	count=1
arg	the arguments args ||| args	count=1
function	of reporting progress ||| progress	count=1
function	new fontset according ||| create fontset from fontset spec	count=1
function	process id ||| auto	count=1
module	limits ||| 2.3	count=2
module	the [module] of ||| [module] 19.9	count=1
function	directory name ||| file directory	count=1
module	return pred ||| dash	count=1
arg	list with ||| list	count=2
arg	according to coding-system ||| coding-system nocopy buffer	count=1
arg	option symbol [arg_2] ||| [arg_2] [arg_1]	count=3
module	is non-nil the ||| 5	count=1
function	[function] contents ||| [function] complete	count=1
arg	function finds and opens ||| nomessage nosuffix must-suffix	count=1
function	function sets its ||| set	count=1
function	[function_1] just inserted ||| [function_2] [function_1]	count=4
arg	symbol of frame ||| frame	count=1
function	return the reverse of ||| reverse	count=1
arg	associates sentinel with process ||| process sentinel	count=1
function	[function_1] case ||| describe [function_1] [function_2]	count=1
function_arg	region from start ||| fill region start	count=2
function	echo [function_2] ||| [function_1] [function_2]	count=2
function	when their wildcards argument ||| file wildcards	count=1
arg	prop ||| prop object	count=1
function_arg	the modifiers [arg_2] ||| [arg_2] [function_1]	count=2
module	files ||| 24 11	count=1
module	is non-nil the default ||| 27 5	count=1
function	after emacs ||| auto	count=1
module	[module] a ||| [module]	count=4
function	if ||| pop	count=2
arg	buffer ||| buffer	count=6
module	if non-nil ||| 17	count=1
function	converts the region ||| decode region	count=1
function	substrings of the same ||| buffer substrings	count=1
arg	string or buffer object ||| object	count=4
function	[function_1] containing ||| [function_2] [function_1]	count=2
function	the abbrev ||| abbrev	count=2
module	in ||| 27 14	count=2
module	function returns a ||| 35 1	count=1
function	not already set ||| file	count=1
function	objects created in ||| memory use counts	count=1
module	line which ||| 31	count=1
function	keymap ||| keymap parent	count=1
function	the message currently ||| message	count=1
module	variable is ||| 7	count=1
module	key sequence a string ||| 21 1	count=1
arg	command command synchronously ||| command infile	count=1
function	[function_1] configurations ||| [function_2] [function_1]	count=5
arg	returns number converted to ||| number	count=1
module	variable ||| 27 11	count=2
module	list of ||| 14 3	count=1
function	inserts before point ||| insert	count=1
function	use global abbrevs ||| only global abbrevs	count=1
function	beginning of a ||| bolp	count=1
function	is on [function_2] ||| [function_1] [function_2]	count=1
function	first ||| map first	count=1
function	the current line ||| line	count=2
function	each element of ||| map char	count=1
arg	[arg_1] function ||| [arg_2] [arg_1]	count=17
arg	parser state state ||| state	count=1
function	returns window’s value for ||| parameter	count=1
arg	all elements in list ||| list	count=3
function	emacs makes backups ||| backup	count=2
arg	functions with [arg] measured ||| [arg]	count=1
module	scans [module] ||| [module] 19.3	count=3
function	creates a new syntax ||| make syntax	count=1
function	in shell ||| shell	count=1
module	last of arguments is ||| 12 5	count=1
arg	will call [arg] ||| [arg]	count=3
arg	of list without ||| list	count=1
arg	s1 ||| s1	count=2
function	system name ||| system	count=1
function	this function returns ||| buffer	count=1
module	[module] function of ||| [module]	count=1
module	elements are thrown away ||| 31 8.6	count=1
function_arg	this [function_1] [arg_2] in ||| 12 10.1 [function_1] [arg_2]	count=2
function	a live window ||| window live	count=1
function	position of the end ||| end	count=2
function	[function] of the ||| notifications get [function]	count=2
function	wrap the ||| wrap	count=1
function	the directory name ||| file directory	count=1
function	non-nil based on ||| auto save list	count=1
arg	key must be ||| key	count=1
function	of coding systems ||| find coding systems	count=5
arg	count [arg_2] ||| [arg_2] [arg_1]	count=3
function	the default file ||| abbrev file	count=2
function	status of process ||| status	count=1
function	epoch to a ||| seconds to time	count=2
module	frames and several ||| 28 23	count=1
function	print-length and print-level used ||| length	count=1
function_arg	[function_1] list ||| [arg_2] [function_1]	count=3
arg	command fills each paragraph ||| start end justify	count=1
function	buffer text with the ||| buffer	count=1
arg	props see ||| props	count=1
function	this prefix adding the ||| auto save list file prefix	count=1
module	this returns ||| 6	count=1
function	display-buffer is allowed ||| pop	count=1
function	buffers ||| pop up	count=1
function_arg	[function_1] width ||| [function_1] frame [arg_2]	count=2
function	the ||| current	count=4
function	[function_1] name for ||| [function_1] [function_2]	count=3
function_arg	process named [arg_2] ||| [function_1] [arg_2]	count=4
function	get input from ||| from	count=1
module	keymap or ||| 21 11	count=1
function	[function_1] the syntax ||| [function_1] [function_2]	count=1
module	by emacs ||| 38	count=1
function	the nearest ||| round	count=1
module	the current ||| 17.1	count=1
function	a mode [function] construct ||| mode [function]	count=1
arg	specified by order ||| order	count=1
function	backup versions to ||| versions	count=1
function_arg	string made [arg_2] ||| [arg_2] [function_1]	count=4
function	currently enabled [function_2] ||| [function_2] [function_1]	count=2
function	of justification to ||| justification	count=1
arg	command adjusts the size ||| max-height min-height max-width min-width	count=1
function	leftmost child ||| window child	count=1
function_arg	this function [function_1] [arg_2] ||| 3 4 [function_1] [arg_2]	count=1
arg	for the character char ||| char	count=1
module	function returns a ||| 6	count=1
function	set it non-nil based ||| list	count=1
function	for void [function_2] ||| [function_2] [function_1]	count=1
arg	base [arg] ||| [arg]	count=1
function_arg	the property [arg_2] ||| [arg_2] [function_1]	count=5
function	shell syntax an argument ||| shell quote	count=1
function_arg	font [arg_2] ||| [function_1] [arg_2]	count=2
function	after emacs ||| save list file	count=1
function	point to the end ||| end	count=2
function	is allowed to ||| pop up	count=1
function	s to titleized words ||| s titleized words	count=1
module	is a list of ||| 6.6	count=1
arg	id ||| id	count=1
function_arg	or match [arg_2] ||| [arg_2] [function_1]	count=1
arg	are consistent with existing ||| command icon map props	count=1
module	events for this-command-keys ||| 20 5	count=1
function	a minibuffer ||| minibuffer	count=1
function	destroy the ||| destroy	count=1
function	etc ||| seconds	count=1
function	being [function] by ||| [function] file	count=1
module	value ||| 6	count=2
module	this function returns the ||| 3	count=3
function	function returns the property ||| symbol plist	count=1
function	live window ||| window live	count=1
function_arg	[function_1] [arg_2] ||| [function_1] read with preview [arg_2]	count=3
function	window’s bottom ||| window bottom	count=1
function	the key sequence as ||| key sequence	count=1
arg	from to index to ||| from	count=1
function	marks the current buffer ||| buffer	count=2
function	command inserts the contents ||| insert	count=1
module	parenthesis ||| 37 20	count=1
function	function calls its argument ||| map	count=1
function	command runs a garbage ||| garbage	count=1
module	current buffer corresponding ||| 29 2.4	count=1
function	text [function_2] ||| [function_1] [function_2]	count=2
function	controlling terminal ||| controlling tty	count=1
function	[function] if ||| set buffer [function] p	count=1
module	obscured by other frames ||| 28	count=1
function	the right ||| scroll right	count=1
function_arg	previous buffer [arg_2] ||| [arg_2] [function_1]	count=1
module	of mark-ring ||| 30 7	count=1
arg	inserting [arg] ||| symbol [arg]	count=3
arg	[arg] in ||| n [arg]	count=2
arg	consing ||| append compare-fn	count=1
module	file file converting ||| 24 12.2	count=1
function	standard x ||| x	count=1
arg	only live window ||| no-mini all-frames	count=2
function	is on a ||| mouse on	count=1
function	expands [function_2] ||| [function_1] [function_2]	count=1
function	of ||| event	count=1
function_arg	an alias [arg_2] ||| [function_1] obsolete-face [arg_2]	count=3
function	in list replaced ||| update at	count=1
function_arg	this [function_1] [arg_2] in ||| [function_1] [arg_2]	count=2
arg	spec font-spec ||| font-spec	count=1
function	puts value onto ||| put	count=1
function	this prefix adding ||| auto save list file prefix	count=1
function	like next-single-property-change ||| next single	count=1
function	function returns a string ||| to string	count=1
module	existing ||| 14	count=1
arg	with prompt and ||| prompt directory	count=1
module	window’s value ||| 27 25	count=1
arg	according to the current ||| no-remap	count=1
arg	regexp ||| regexp s &optional start	count=1
function	the [function] item ||| [function] item	count=1
function_arg	list replaced [arg_2] ||| [arg_2] [function_1]	count=2
function	of syntax class ||| skip syntax forward	count=1
module	the minibuffer a ||| 19	count=1
function	the next [function_2] ||| [function_2] [function_1]	count=8
function_arg	the length [arg_2] ||| [arg_2] [function_1]	count=1
function	of coding systems ||| coding systems for	count=1
function	this ||| auto	count=1
function_arg	modifiers [arg_2] ||| [arg_2] [function_1]	count=2
arg	width of frame ||| frame width pretend	count=1
function	[function_1] cells the ||| [function_1] [function_2]	count=4
function	arg ||| backward list	count=1
function	it the window as ||| get window	count=1
function	edebug tests coverage of ||| edebug test coverage	count=1
function	can execute [function_2] ||| [function_2] [function_1]	count=2
arg	with font-spec for ||| font-spec frame	count=1
arg	frame frame based on ||| frame	count=1
arg	eval-region but the arguments ||| buffer-or-name stream	count=1
function	[function_1] indirect ||| [function_1] [function_2]	count=1
module	position of ||| 17.1	count=1
function_arg	of elements [arg_2] ||| [function_1] [arg_2]	count=1
function	each element ||| table	count=1
function	the current global ||| global key	count=1
function_arg	sum [arg_2] ||| [arg_2] [function_1]	count=1
rep	converts the [function_arg_2] ||| [module_1] [function_arg_2]	count=4
function_arg	button [arg_2] ||| [arg_2] [function_1]	count=15
arg	[arg_1] in list ||| [arg_1] [arg_2]	count=4
module	value of this ||| 14	count=2
module	object is ||| 5	count=1
arg	of lists using function ||| lists	count=1
module	for auto-saving ||| 25 2	count=1
function_arg	group [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] replaced ||| x [arg]	count=1
function	least fixpoint of ||| fixfn	count=1
module	reads ||| 25 2	count=2
arg	element of tree and ||| init-value tree	count=1
function_arg	[function_1] pos ||| [function_1] [arg_2]	count=4
function	returns the end ||| end	count=1
module	if object is ||| 5	count=1
function	or the leftmost child ||| child	count=1
function	auto-save-list-file-name if you ||| save list	count=1
function	[function_1] frame number ||| [function_1] [function_2]	count=4
arg	variable references in filename ||| filename	count=1
function	returns the subtype symbol ||| table subtype	count=1
function_arg	reverse [arg_2] ||| [function_1] [arg_2]	count=1
function	the overlay that the ||| overlay	count=1
module	nonblank ||| 31 17.1	count=2
function	this function [function] ||| [function]	count=3
function	to a ||| to	count=1
arg	to end in the ||| end	count=2
function	the minimum ||| min	count=1
function	init file ||| list	count=1
module	returns ||| 26 3	count=2
arg	according to format format ||| file format	count=1
module	arguments is ||| 5	count=1
module	to process process ||| 8	count=1
function	a defun ||| defun	count=2
arg	collection ||| collection	count=2
function	abbrev ||| define abbrev	count=1
arg	[arg_1] of char-table ||| [arg_2] [arg_1]	count=4
function	buffer’s case [function_2] ||| describe [function_1] [function_2]	count=1
rep	this function returns a [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	this function calls its ||| char table	count=1
function	combination ||| window combination	count=1
module	containing ||| 6	count=1
arg	filename if the ||| filename	count=1
function	argument function ||| map char table	count=1
function	to specify margins around ||| buffer margins	count=1
arg	[arg_1] symbol ||| [arg_2] [arg_1]	count=15
function	init file it initializes ||| list	count=1
module	the strings ||| 4	count=1
function	a [function] that would ||| generate new buffer [function]	count=1
module	that the entire contents ||| 4	count=1
function	beginning of the line ||| line	count=1
arg	of directories given ||| path	count=1
function	split s up to ||| split up to	count=1
function	the abbrev [function_2] ||| [function_1] [function_2]	count=1
arg	command fills each ||| start end justify citation-regexp	count=1
arg	prefix and [arg_2] ||| [arg_2] [arg_1]	count=2
module	this is non-nil the ||| 16 3	count=1
arg	value value in alist ||| value alist	count=2
function	reads your init file ||| auto	count=1
arg	with prompt and providing ||| prompt initial history	count=1
function	name and process id ||| list file	count=1
function	function sets the syntax ||| syntax	count=1
function	the host ||| list	count=1
function	a file in ||| in	count=1
function	subcommands of the prefix ||| prefix	count=1
arg	parent keymap of keymap ||| keymap	count=1
function_arg	[function_1] for current-face ||| [function_1] obsolete-face [arg_2]	count=2
arg	from to index to ||| from &optional to step	count=1
function	of register ||| register	count=1
module	emacs reads your ||| 2	count=1
function	file name of the ||| terminal name	count=1
function	bool ||| bool vector union	count=2
module	function returns the symbol ||| 6	count=1
function	window as dedicated to ||| dedicated	count=1
function_arg	[function_1] [arg_2] ||| [function_1] reverse [arg_2]	count=1
arg	symbol add value to ||| symbol value	count=1
module	into list of ||| sel	count=1
function	non-nil ||| save	count=1
module	non-nil that means ||| 27	count=1
module	this function ||| 19 12	count=2
function_arg	[function_1] [arg_2] and call ||| [function_1] [arg_2]	count=2
arg	object ||| pos prop object limit	count=1
function	startup ||| inhibit startup	count=2
function	function sends a ||| signal process	count=1
module	into a key ||| 21 1	count=1
module	all expressions debugged ||| 2.16	count=1
module	function returns the ||| 38 3	count=1
function	have ||| list	count=1
arg	face in ||| face	count=1
module	the string ||| 8	count=1
arg	by [arg] ||| [arg]	count=1
function	the beginning of ||| beginning	count=2
function	list specifies which warning ||| warning	count=1
function	style symbols ||| styles	count=1
function	it ||| auto save	count=2
function	the edge coordinates of ||| edges	count=1
function_arg	function stores [arg_2] ||| [arg_2] [function_1]	count=1
arg	function so ||| function	count=1
module	prefix argument for this ||| 20 5	count=1
arg	flag is non-nil and ||| flag	count=1
module	string ||| 21	count=2
function	returns the parent ||| table parent	count=1
function	position of ||| end	count=1
arg	of file filename ||| filename visit beg	count=1
function_arg	text of [arg_2] ||| [function_1] pixel size [arg_2] mode-and-header-line	count=1
function_arg	[function_1] of fun ||| [function_1] [arg_2]	count=2
function	sequence as a vector ||| sequence vector	count=1
arg	with font-spec for ||| font-spec	count=1
module	a new window for ||| 27 14	count=1
arg	and executes ||| &rest	count=1
function	[function_1] shell command ||| [function_1] [function_2]	count=3
function_arg	[function_1] display-table ||| [function_1] [arg_2]	count=1
module	for displaying frame ||| 37	count=1
arg	of condition ||| condition	count=1
module	at ||| 1	count=2
module	edebug ||| 2.16	count=1
function	all the elements ||| vconcat	count=1
arg	to val ||| val	count=1
arg	function calls its ||| function	count=1
function	newer than [function_2] ||| [function_1] [function_2]	count=1
function	the [function] sentence ||| [function]	count=1
module	by other frames and ||| 28	count=1
function	abbrev table ||| define abbrev table	count=2
arg	plist ||| plist	count=1
function	for [function_2] ||| [function_2] [function_1]	count=7
function	child ||| child	count=1
module	option specifies the ||| 27	count=2
arg	within the range ||| window partially	count=1
module	may display ||| 14	count=1
function	the end [function] and ||| [function] end double	count=1
arg	map for key with ||| map key	count=1
function	initializes ||| auto	count=1
arg	function returns filename ||| filename	count=1
function	function destroy [function_2] ||| [function_2] [function_1]	count=3
arg	current buffer ||| buffer	count=2
function	command displays ||| describe	count=2
module	current buffer so ||| 4	count=1
function	inserts the contents ||| insert	count=1
arg	string [arg_2] ||| [arg_1] [arg_2]	count=1
function	initial [function_2] ||| [function_1] [function_2]	count=1
function_arg	stores [arg_2] ||| [function_1] property char propname [arg_2]	count=1
arg	scans forward count ||| count depth	count=1
function	will make it ||| variable buffer	count=1
function	find-file ||| find	count=1
arg	[arg_1] newname ||| [arg_2] [arg_1]	count=4
function	existing ||| pop	count=1
function	that ||| enable recursive	count=1
function	function returns the truename ||| truename	count=1
function	less than ||| less?	count=1
function_arg	function displays [arg_2] ||| [arg_2] [function_1]	count=8
arg	end [arg] ||| [arg]	count=1
arg	coding system coding-system ||| coding-system	count=2
function	or body width of ||| body size	count=1
function	top entry in ||| window top	count=1
function	make ||| up	count=1
function_arg	method input-method ||| method input-method	count=1
arg	position ||| position window	count=1
function	a pair ||| syntax pair	count=1
function	the window ||| posn window	count=1
function	window [function_2] ||| [function_2] [function_1]	count=7
arg	of charset ||| charset	count=1
function	documentation string of ||| documentation	count=2
module	your init ||| 25	count=1
function	new fontset ||| from fontset spec	count=1
function	edge coordinates of ||| edges	count=1
arg	function defines ||| docstring interactive	count=1
module	for ||| 6	count=2
module	all frames ||| 28	count=1
function	of the ||| of	count=3
function	floating-point number ||| float	count=1
module	if you have ||| 2	count=1
arg	system coding-system ||| coding-system destination	count=2
function	contents of extra ||| extra	count=1
function	considers [function] of ||| [function] as paragraph	count=1
function	newer than ||| file newer than	count=2
function	the region defined by ||| region	count=5
function	a ||| pop up	count=1
function	function for each element ||| char table	count=1
function	s to titleized ||| titleized	count=1
arg	from-buffer-or-name into the ||| from-buffer-or-name	count=1
function_arg	like assoc [arg_2] ||| [arg_2] [function_1]	count=2
module	this command which ||| 27 20	count=1
module	the horizontal ||| 31 17.1	count=1
function	a list of suffixes ||| suffixes	count=1
arg	if bold-p ||| face bold-p frame	count=1
arg	its buffer if flag ||| window flag	count=1
function	trigger another ||| gc cons threshold	count=1
function	by the current ||| types	count=1
function	regenerate the help ||| help	count=1
arg	with process ||| process	count=1
function	encapsulating ||| ewoc enter first	count=1
arg	within the ||| partially	count=1
function	the truename of the ||| file truename	count=1
module	emacs process ||| 38	count=2
function	a list specifying ||| prev buffers	count=1
arg	x2 ||| x2	count=1
module	destructively and returns the ||| 5	count=1
function	property named ||| get	count=1
function	contents of ||| contents	count=1
arg	the window window ||| window	count=1
function	sets the ||| set right	count=1
module	you ||| 2	count=1
function_arg	[function_1] operation ||| [arg_2] [function_1]	count=3
function	window’s header [function_2] ||| [function_1] [function_2]	count=1
function	from the ||| read from	count=1
module	the current line which ||| 31 17.1	count=1
function	than file ||| than file	count=2
function	must be [function] at ||| [function]	count=1
function	sets the :inverse-video ||| set face inverse video	count=1
function	buffer to start at ||| to	count=1
function	marks window as dedicated ||| dedicated p	count=1
function	emacs standard notation for ||| key description	count=1
arg	of face in the ||| face	count=1
function	by eval-expression ||| eval expression print	count=1
rep	text in [function_arg_2] ||| [module_1] 8.2 kill [function_arg_2]	count=2
arg	char-table that ||| char-table	count=1
function	name ||| auto save	count=1
function_arg	replaces [arg_2] ||| [function_1] regexp rep string [arg_2]	count=2
function_arg	iterated applications [arg_2] ||| [arg_2] [function_1]	count=3
arg	[arg_1] in abbrev-table ||| [arg_2] [arg_1]	count=1
function	[function_1] smie ||| [function_2] [function_1]	count=2
module	a ||| 14	count=4
function_arg	[function_1] in list ||| [function_1] pred [arg_2]	count=4
function	the value of ||| mark	count=1
function	previous ||| window prev	count=1
arg	to format format ||| format beg	count=1
module	directory for emacs ||| 38	count=1
function	[function_1] bottom ||| [function_2] [function_1]	count=4
arg	lisp [arg] any time ||| [arg]	count=1
arg	of regexp in ||| regexp s &optional	count=1
arg	hook with [arg_2] ||| expansion [arg_1] [arg_2]	count=2
function	sets the ||| set keymap parent	count=1
function	to the top entry ||| window top line	count=1
function	sexp ||| partial sexp	count=1
function	name [function_2] ||| [function_1] [function_2]	count=2
function	for the category ||| category	count=1
function	reads your ||| auto save list	count=1
arg	sends a signal to ||| signal	count=1
module	that has ||| 6	count=2
function	fit by ||| fit frame	count=1
function	of the startup echo ||| inhibit startup echo	count=1
function	[function] which ||| [function] live p	count=1
function_arg	[function_1] number number ||| [function_1] define name [arg_2]	count=1
arg	in non-nil thread it ||| &optional	count=1
function	the category ||| category	count=2
function	you have not already ||| auto save list file	count=1
arg	command fills each paragraph ||| start end justify citation-regexp	count=1
function	function calls ||| char	count=1
arg	[arg_1] new in ||| [arg_1] [arg_2]	count=2
function	a symbolic file mode ||| file modes symbolic	count=1
arg	proper offset to ||| offset	count=1
function	the horizontal ||| current	count=1
arg	do then ||| then	count=1
arg	args and additional ||| args	count=1
arg	[arg_1] exponent exp ||| [arg_1] [arg_2]	count=1
function	new vector ||| vconcat	count=1
function	standard [function_2] ||| [function_1] [function_2]	count=2
module	frames ||| 28 3.4	count=1
module	files can ||| 24	count=1
arg	[arg_1] cdr ||| dash !cons [arg_1] [arg_2]	count=3
function	the list of active ||| active	count=1
function	the next sibling ||| window next sibling	count=2
arg	resulting sequence ||| sequence	count=1
module	[module_1] is non-nil ||| [module_2] [module_1] byte compile dynamic docstrings	count=1
function_arg	face [arg_2] ||| [function_1] face attribute frame [arg_2]	count=1
function	the current [function_1] [function_2] ||| describe [function_1] [function_2]	count=3
function_arg	matched by [arg_2] ||| [arg_2] [function_1]	count=1
module	the text between ||| 31 19.2	count=1
arg	questions reading a single-character ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
module	argument function for ||| 6 6	count=1
arg	an [arg] ||| [arg]	count=1
function	new ||| other	count=1
function	current local keymap or ||| local	count=1
function	window’s bottom edge ||| adjust window trailing edge	count=1
arg	returns filename ||| filename	count=1
function	the combination limit for ||| combination limit	count=1
module	floating ||| 3	count=1
module	major ||| 22 2	count=1
function	vertical position in the ||| position	count=1
function	on this prefix adding ||| auto save list file prefix	count=1
function	end of ||| end of	count=3
function	point-min ||| buffer	count=1
arg	list-of-strings ||| list-of-strings	count=1
arg	a list ||| list	count=3
function	and ||| save list file	count=1
module	to the list of ||| 3	count=1
arg	if n [arg_2] ||| [arg_1] [arg_2]	count=1
arg	lisp expression ||| initial	count=1
arg	marker marker ||| marker	count=1
arg	value—or [arg] if ||| [arg]	count=1
function_arg	an autoload [arg_2] ||| [arg_2] [function_1]	count=1
function	current global [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] buffer in ||| [function_2] [function_1]	count=2
function	displays the ||| switch to buffer	count=2
arg	marker marker [arg_2] ||| [arg_2] [arg_1]	count=1
function	a ||| vconcat	count=1
function	renames ||| rename	count=1
function	directories ||| path	count=1
function	and ||| auto	count=1
function	modulo divisor ||| mod	count=1
arg	current active keymaps ||| keymaps	count=1
arg	alist for a match ||| alist	count=1
function_arg	of attributes [arg_2] ||| [arg_2] [function_1]	count=2
function	bool vectors a and ||| bool	count=1
arg	as old-pos ||| old-pos escape-from-edge	count=1
function	region ||| decode region	count=1
function	to ask ||| ask	count=1
function	hours ||| format	count=1
function	the end of ||| end of buffer	count=2
function	file it initializes ||| save list file	count=1
function	character—the [function] ||| [function]	count=1
function	print-length and print-level ||| print length	count=1
arg	to-file ||| to-file	count=1
function_arg	subtype [arg_2] ||| [function_1] p type [arg_2]	count=1
function	existing window to ||| up	count=1
function	the rehash threshold ||| hash table rehash threshold	count=1
function	shell ||| call process shell command	count=1
function	the file ||| save file	count=1
function_arg	[function_1] [arg_2] ||| [function_1] alias obsolete-name [arg_2]	count=3
function	non-nil display-buffer is ||| pop up	count=1
function	argument function for each ||| table	count=1
function	auto-save-list-file-name if you have ||| save	count=1
module	nonblank ||| 17.1	count=1
function	id ||| list	count=1
function	point ||| thing at point	count=1
module	and ||| 25 2	count=2
arg	predicates preds [arg_2] ||| [arg_2] [arg_1]	count=2
function	next-single-property-change except that it ||| next single	count=1
module	sends ||| 8	count=1
module	text between ||| 19.2	count=1
module	this function returns the ||| 36 6	count=3
module	of the current ||| 17.1	count=1
module	to process process ||| 36	count=1
function	you ||| list file	count=1
arg	buffer for visiting filename ||| filename	count=1
function	specify margins around ||| to buffer margins	count=1
arg	[arg_1] s ||| [arg_1] [arg_2]	count=1
function	[function] except that ||| posix [function]	count=1
function	tab in most editing ||| tab	count=1
function_arg	the font [arg_2] ||| [function_1] name character [arg_2]	count=2
arg	function returns a ||| window	count=3
module	returns ||| 31	count=3
function	this command indents the ||| indent	count=1
arg	for current-face ||| current-face	count=1
module	variable ||| 14	count=2
arg	message ||| message	count=3
function_arg	between positions beg ||| region beg	count=1
function	reads a shell command ||| read shell command	count=1
arg	if ||| face	count=1
arg	new-alias as ||| new-alias	count=1
function	of extra ||| char table extra	count=1
function	seconds ||| seconds	count=1
arg	function returns an ||| frame	count=1
arg	character at position pos ||| pos	count=1
module	non-nil edebug ||| 2.16	count=1
function	mode or [function_2] ||| [function_1] [function_2]	count=2
arg	at [arg] in ||| [arg]	count=1
function	consecutive button presses ||| click count	count=1
function	[function_1] case table ||| [function_1] [function_2]	count=3
module	variable is non-nil that ||| 14	count=1
module	and process id ||| 25 2	count=1
module	though [module] ||| [module] 6.3	count=3
function	window’s value for ||| window	count=1
function_arg	[function_1] current-face ||| [function_1] obsolete-face [arg_2]	count=2
arg	in syntaxes a string ||| syntaxes	count=1
function	based ||| save list	count=1
function	fit the text ||| fit	count=1
arg	pattern pattern returning a ||| pattern	count=1
function	the exit ||| process exit	count=1
arg	symbol [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] [arg_2] a string containing the ||| [function_1] set mnemonics [arg_2]	count=1
module	function returns ||| 19 12	count=2
function	-filter pred list -remove ||| separate	count=1
module	for ||| 3	count=1
function	[function] specifying ||| default frame [function]	count=3
function	buffer [function_2] ||| [function_2] [function_1]	count=5
function	in directory ||| in directory	count=1
function_arg	buffer to [arg_2] ||| [function_1] [arg_2]	count=1
arg	function makes buffer-or-name the ||| buffer-or-name	count=1
module	new window for ||| 27	count=1
function	the parameters of ||| frame parameters	count=1
function	or permissions of ||| file modes	count=2
function	other i/o device) ||| regular	count=1
function	attributes ||| all attributes	count=1
function	it receives this event ||| event	count=1
module	have permission [module] ||| [module] 6.1	count=1
module	initializes auto-save-list-file-name ||| 25	count=1
arg	up of count repetitions ||| count character	count=1
function_arg	the binding [arg_2] ||| [arg_2] [function_1]	count=5
function_arg	the value [arg_2] ||| [arg_2] [function_1]	count=1
function	days ||| seconds	count=1
arg	to type ||| type	count=1
module	frames to be ||| 28 3.4	count=1
module	this function ||| 25 2	count=1
arg	that key ||| key	count=1
arg	offsets step ||| step	count=1
function	as dedicated to ||| window dedicated	count=1
module	function returns the ||| 13	count=1
function	modifiers ||| modifiers	count=1
module	current buffer so ||| 29 4	count=1
function	position of ||| event	count=1
module	minibuffer a nonnegative integer ||| 19	count=1
function	this command [function] the ||| [function] region	count=1
function	if [function] is ||| [function] narrowed	count=1
module	returns the symbol network ||| 6	count=1
arg	prefix and optionally suffix ||| prefix &optional suffix	count=1
function	non-nil ||| map char table	count=2
function	based on ||| save list file	count=1
function	display ||| window display table	count=1
function	of all expressions ||| edebug	count=1
function	buffer’s local [function] or ||| current local [function]	count=1
function	regular expression [function_2] ||| [function_2] [function_1]	count=1
function_arg	last [arg_2] ||| drop [function_1] [arg_2]	count=1
function	rendered using imagemagick regardless ||| imagemagick types	count=1
arg	[arg_1] exponent exp ||| [arg_2] [arg_1]	count=1
arg	symbol by ||| symbol	count=1
module	may display buffers by ||| 27 14	count=1
function	argument is strictly ||| >	count=1
function_arg	[function_1] [arg_2] ||| [function_1] obsolete-face [arg_2]	count=14
function_arg	insertion type [arg_2] ||| [arg_2] [function_1]	count=4
function	you have not already ||| save	count=1
function	process ||| list	count=1
function	represents in shell ||| shell quote	count=1
function	[function_1] mode or ||| [function_2] [function_1]	count=1
arg	obarray has no ||| obarray	count=1
function	have ||| save list file	count=1
function_arg	[function_1] alist ||| [arg_2] [function_1]	count=6
function	print-length and print-level ||| length	count=1
function	window for displaying in ||| pop up windows	count=1
arg	case-invariant with syntax syntax ||| char syntax case-table	count=1
function	buffer ||| set buffer	count=2
function	the help ||| help	count=1
arg	position in [arg_2] ||| [arg_1] [arg_2]	count=1
function	as xml rather ||| parse xml region	count=2
module	it non-nil based ||| 2	count=1
function	specify the dimensions ||| mm dimensions	count=1
function	this ||| ring	count=1
module	this function returns the ||| 32 7	count=1
arg	of list ||| list	count=15
arg	[arg_1] [arg_2] holds ||| [arg_2] [arg_1]	count=6
arg	command replaces [arg] ||| [arg]	count=2
function	split ||| s split up to	count=1
function	characters ||| skip chars	count=1
arg	in object if no ||| object	count=1
function	current insertion type ||| insertion type	count=1
function	[function_1] string made ||| [function_2] [function_1]	count=1
function	wrap string ||| wrap	count=1
function	[function_1] selected window ||| [function_1] [function_2]	count=3
module	if [module_1] [module_2] byte compiler generates compiled ||| [module_2] [module_1] byte compile dynamic docstrings	count=1
arg	and returns object ||| object	count=1
function	command quits window ||| quit	count=1
function	frame that the ||| frame	count=1
function	ewoc ||| ewoc	count=1
function	this returns a copy ||| overlay properties	count=1
module	all the elements ||| 6 5	count=1
module	that means ||| 27 14	count=1
module	etc ||| 38 7	count=2
function	this function defines ||| define	count=1
function	history element ||| matching history element	count=2
function	that are t in ||| count population	count=1
arg	function warps the mouse [arg_1] [arg_2] ||| set mouse pixel position [arg_1] [arg_2]	count=2
function	this function destroy the ||| destroy	count=1
module	function sends ||| 36	count=1
module	string constant ||| 21 1	count=1
module	[module] byte compiler ||| [module] 3	count=1
function	[function_1] line ||| [function_2] [function_1]	count=12
function	a non-nil value ||| char	count=1
module	character sets ||| 32 10.3	count=1
module	file it ||| 25	count=1
function_arg	frame and [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	buffer [arg_2] ||| [arg_2] [function_1]	count=2
arg	and call [arg] ||| [arg]	count=3
function	[function_1] the minibuffer ||| [function_2] [function_1]	count=4
arg	array bindat-raw according to ||| bindat-raw	count=1
function	of years ||| format	count=1
function	to make ||| pop	count=1
function	[function] scan-lists and ||| [function] ignore	count=3
function	variable ||| mark	count=1
function	called when an error ||| error	count=1
function	this function ||| end	count=1
arg	program ||| program	count=1
function	history [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] to ||| [arg_2] [arg_1]	count=2
function	it initializes ||| file	count=1
module	defines ||| 12 11	count=1
function	fill mode is ||| fill mode	count=2
arg	set-mouse-position [arg] ||| [arg]	count=1
arg	function with arguments args ||| repeat function args	count=1
function	vector containing ||| vconcat	count=1
function	the selinux ||| file selinux	count=2
function	a window at the ||| display buffer at	count=1
function	the current buffer ||| current buffer	count=2
function	string in the ||| ip to string	count=1
arg	for [arg] ||| [arg]	count=2
rep	of [function_arg_2] ||| [module_1] [function_arg_2]	count=5
function	last ||| last	count=6
module	keymaps that would be ||| 21 7	count=1
function	function sets ||| set window fringes	count=1
function	fit the text in ||| fit	count=1
function	the attributes of remote ||| remote file name	count=1
function	buffer text with ||| buffer	count=1
function	marker nil otherwise ||| marker	count=2
rep	alters [function_arg_2] ||| [module_1] [function_arg_2]	count=4
module	function returns a ||| 1	count=1
module	vector containing ||| 5	count=1
arg	to non-nil ||| &rest	count=1
function	asin ||| asin	count=1
function	[function_1] that ||| 8 [function_2] [function_1]	count=3
function	from the minibuffer ||| read from minibuffer	count=3
function_arg	lines in [arg_2] ||| [arg_2] [function_1]	count=2
arg	[arg_1] on ||| [arg_2] [arg_1]	count=1
function	list of color ||| tty color	count=1
function	default file ||| default file	count=1
function	keyboard macro ||| macro	count=1
function	next-single-char-property-change ||| single char	count=1
function_arg	[function_1] lists ||| [function_1] [arg_2]	count=1
function	in the current ||| in	count=1
function	[function_1] mode ||| [function_1] input [function_2]	count=4
module	is ||| 3	count=1
function	has been fully specified ||| provide	count=1
function	minibuffer window ||| minibuffer	count=3
function	modifying the match ||| string match	count=1
function	the acl for ||| acl	count=1
arg	element of char-table that ||| function char-table	count=1
module	this variable is ||| 7	count=1
function_arg	zip lists ||| zip &rest lists	count=1
function	the indentation ||| current indentation	count=1
module	nonnegative integer ||| 19 13	count=1
arg	that start within strings ||| start	count=1
module	have not ||| 25 2	count=1
function	of all ||| all	count=1
function	fails [function_2] ||| [function_2] p [function_1]	count=2
function	this sets the :inverse-video ||| set face inverse video	count=1
function_arg	the variable [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	permissions [arg_2] ||| [arg_2] [function_1]	count=3
module	years days hours ||| 7	count=1
function	[function] for ||| window configuration [function]	count=1
arg	but allows only directory ||| prompt directory default require-match initial	count=1
function	inserts the ||| insert	count=4
function	single space or ||| space	count=1
function	auto-save-list-file-name if you have ||| save list file	count=1
arg	integers that record all ||| integers reuse reseat	count=1
function	[function_1] by copying ||| [function_1] [function_2]	count=9
function	a live ||| live	count=1
module	so that ||| 4	count=1
function	if non-nil ||| edebug	count=1
function	beginning of the ||| beginning	count=1
function	to answer within ||| y or n	count=1
function	the minibuffer text for ||| minibuffer	count=1
function	nil switch-to-buffer ||| buffer preserve window	count=1
module	windows [module] the buffer ||| [module]	count=1
module	basic windows and ||| 27	count=1
function	[function_1] symbolic ||| [function_2] [function_1]	count=3
function	returns the property ||| plist	count=1
function	buffer-invisibility-spec ||| invisibility spec	count=2
function	file it initializes ||| save	count=1
function	is ||| current	count=1
arg	providing completion ||| require-match initial predicate	count=1
arg	in sequence ||| sequence prefix	count=1
arg	the contents of string ||| string	count=1
function	number of lines ||| count lines	count=1
function	subtype symbol of ||| subtype	count=1
function	function inserts [function_2] ||| [function_2] [function_1]	count=1
function	creates a [function_2] ||| [function_2] [function_1]	count=1
function	height of [function_2] ||| [function_2] [function_1]	count=1
function	button at ||| button	count=1
arg	finds and opens a ||| missing-ok nomessage nosuffix must-suffix	count=1
arg	layout of this string ||| string	count=1
function	already set it ||| save list	count=1
module	into a key sequence ||| 21 1	count=1
arg	of string as standard ||| string	count=1
module	if there is none ||| 37 21.3	count=1
function	specify the dimensions ||| mm dimensions alist	count=1
function	returns the name ||| name	count=2
module	days ||| 38	count=1
function	newline just inserted ||| newline and	count=2
function	point to the start ||| goto	count=1
arg	apply [arg] each ||| [arg]	count=1
module	minibuffer ||| 19 14	count=1
function	function for ||| map char	count=1
arg	focus-frame ||| focus-frame	count=1
arg	sets the prop ||| prop	count=1
module	non-nil based ||| 25	count=1
function	all expressions debugged ||| edebug test	count=1
module	this is ||| 33 5	count=2
arg	index from to index ||| from &optional to step	count=1
function	xml rather ||| xml region	count=1
function	recursive edit ||| recursive edit	count=2
function	the number of screen ||| count screen	count=1
module	this function defines ||| 5	count=1
function	returns the subtype symbol ||| subtype	count=1
arg	and docstring and ||| docstring	count=1
function	the minimum [function_2] ||| [function_2] [function_1]	count=1
function	non-nil display-buffer is allowed ||| pop	count=1
module	decodes ||| 32 10.7	count=2
module	this ||| 20 5	count=1
module	deleting other windows ||| 27	count=1
function	function clears ||| clear	count=1
function_arg	[function_1] [arg_2] ||| [function_1] process datagram address [arg_2]	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=1
function	existing window ||| pop	count=1
function	truename of the ||| file truename	count=1
module	creates ||| 28 2	count=1
arg	this function returns window’s ||| window	count=1
arg	handy way to add ||| function append local	count=1
function	[function_1] bool ||| [function_2] vector [function_1]	count=2
arg	and exponent exp ||| exp	count=1
function	left or to the ||| scroll left	count=1
module	all the elements of ||| 6	count=1
function	buffer to ||| buffer	count=1
function	[function_1] symbolic link ||| [function_2] [function_1]	count=3
module	well as [module] properties ||| [module] 19.3	count=1
function_arg	[function_1] [arg_2] and ||| [function_1] reverse [arg_2]	count=1
arg	[arg_1] a list ||| [arg_2] [arg_1]	count=3
function	a newline ||| newline	count=1
arg	pred ||| pred	count=7
function	[function_1] keyboard input ||| [function_2] [function_1]	count=2
function_arg	attributes for filename ||| attributes filename attribute-alist	count=1
function	new frame and displays ||| frame	count=1
function_arg	[function_1] in string ||| [function_1] [arg_2]	count=4
function	the window as an ||| get window	count=1
function	position if no change ||| change	count=1
function	a list of image ||| find image	count=1
arg	property property ||| property	count=1
arg	integers that [arg_2] ||| [arg_2] [arg_1]	count=3
function	of the position ||| position	count=1
arg	of file filename ||| filename visit beg end replace	count=1
function	least recently-used window ||| display buffer pop up window	count=1
function	set it ||| list file	count=1
arg	marker marker to ||| marker	count=1
function	if [function] ||| [function] visible p	count=1
function	list buffer see ||| list	count=1
function	fringe ||| fringe bitmap	count=1
arg	copies string and ||| string	count=1
function	[function_1] number ||| [function_1] [function_2]	count=4
function_arg	insertion [arg_2] ||| [function_1] [arg_2]	count=2
function	cancels any narrowing in ||| widen	count=1
function	[function_1] available ||| [function_2] [function_1]	count=2
function	returns a frame ||| frame	count=1
module	greater than ||| 29 1	count=1
module	text according to ||| 31 8.3	count=1
function	or least recently-used ||| buffer pop up	count=1
function	file permissions as ||| file modes	count=2
function_arg	[function_1] to newname ||| [arg_2] [function_1]	count=3
module	years days hours etc ||| 38	count=1
function	the name [function_2] ||| [function_1] [function_2]	count=2
arg	if count is ||| count	count=1
module	greater ||| 29 1	count=2
function	[function_1] the window ||| [function_2] [function_1]	count=2
function	already set it non-nil ||| auto save list file	count=1
module	this function returns ||| 32 3	count=1
arg	tail [arg] ||| pred [arg]	count=3
arg	function scans forward count ||| count depth	count=1
module	[module] dumps the ||| e [module]	count=1
function	set it non-nil based ||| auto save list file	count=1
arg	that x ||| frame x	count=1
arg	fringe widths [arg_2] ||| [arg_2] [arg_1]	count=2
function	a string ||| format seconds	count=1
function	your ||| list file	count=1
function	to start at ||| to	count=1
arg	divides dividend [arg_2] ||| [arg_1] [arg_2]	count=2
function	terminal ||| terminal	count=1
function	variable ||| pop	count=2
module	means display-buffer may display ||| 27	count=1
arg	most general way ||| prompt initial keymap read history default inherit-input-method	count=1
arg	and [arg] exclusive sideways ||| [arg]	count=1
function	[function_1] [function_2] ||| [function_2] kept [function_1]	count=1
function	wrap the ||| word wrap	count=1
module	use for encoding terminal ||| 32 10.8	count=1
arg	pushes a ||| nomsg activate	count=1
arg	of parameter to value ||| window parameter	count=1
arg	function fn ||| fn	count=2
function	[function_1] context ||| [function_2] [function_1]	count=4
module	object that is being ||| 12.12	count=1
function	[function_1] [function_2] ||| [function_2] pixel [function_1]	count=17
arg	new-pos that is ||| new-pos	count=1
module	only exact [module_2] ||| [module_2] [module_1]	count=1
function	next-single-property-change except that ||| next single char property	count=1
function	versions ||| versions	count=1
module	for the falsehood of ||| 3	count=1
function	buffer as a string ||| string	count=1
function	a special form and ||| special form	count=1
module	a buffer ||| 26 1	count=2
arg	it the newest element ||| ring	count=1
function	actual number ||| table count	count=1
function	word ||| word search backward	count=1
function	[function_1] the fieldth ||| [function_1] [function_2]	count=1
function	this sets the :weight ||| set face	count=1
function	the contents ||| file contents	count=1
function	syntax classes are mentioned ||| skip syntax backward	count=1
function	removes function ||| remove	count=1
arg	of process [arg_2] ||| [arg_2] [arg_1]	count=1
function	initializes auto-save-list-file-name if you ||| save list file	count=1
arg	the text in ||| start end	count=1
arg	item in list ||| list	count=2
function	defines a ||| make	count=1
function	function calls ||| table	count=1
arg	bitwise and of ||| c	count=1
arg	[arg] and ||| [arg] key-regexp start	count=3
arg	with ||| &rest	count=1
function_arg	[function_1] properties ||| [function_1] button label [arg_2]	count=3
function_arg	number [arg_2] ||| [function_1] pred [arg_2]	count=1
arg	the text keyseq-text a ||| keyseq-text	count=1
function	attributes of file ||| file attributes	count=1
function	of bytes ||| bytes	count=1
function	function returns t if ||| window p	count=2
function	form and ||| form	count=1
function	based ||| save list file	count=1
function	window [function] config ||| [function] frame	count=1
function	name and ||| save list file	count=1
function	t in bool vector ||| bool vector count	count=1
function	display-buffer is ||| pop up	count=1
function	function returns the parent ||| table parent	count=1
function	[function_1] the text ||| [function_2] [function_1]	count=3
arg	a signal ||| signal	count=1
arg	prompt and providing ||| prompt initial	count=1
function	[function_1] name to ||| [function_1] [function_2]	count=4
function	method name with ||| method name	count=2
function	non-nil if [function] ||| [function] visible p	count=1
module	the ||| 7	count=2
function	the modifiers ||| event modifiers	count=1
arg	thread it [arg_2] ||| [arg_2] [arg_1]	count=4
arg	of string in collection ||| string collection predicate	count=1
function	family is specified ||| family	count=1
arg	formatted with ls according ||| wildcard full-directory-p	count=1
function	window’s previous [function_2] ||| [function_2] [function_1]	count=4
arg	bound to ||| rigid	count=1
function	the documentation string of ||| face documentation	count=1
arg	if obarray has ||| obarray	count=1
function	initializes auto-save-list-file-name ||| save list	count=1
arg	pred item is ||| pred	count=1
function	of all ||| edebug	count=1
function	and of bool vectors ||| bool vector	count=1
function	string or ||| string	count=1
module	function returns window’s value ||| 27	count=1
function	sibling of the ||| sibling	count=2
function	already set it non-nil ||| auto save list	count=1
arg	function resizes [arg_2] ||| [arg_2] [arg_1]	count=5
function	have not already set ||| auto save list file	count=1
arg	of process [arg_2] ||| [arg_1] [arg_2]	count=1
module	[module] any ||| [module]	count=2
function	the character ||| char	count=2
arg	eval-region but the arguments ||| buffer-or-name stream filename unibyte	count=1
function	and then [function_2] ||| [function_2] [function_1]	count=4
module	of this variable is ||| 5	count=1
arg	lists together group ||| &rest lists	count=1
function	and of bool vectors ||| bool	count=1
function_arg	fontset name ||| fontset font name	count=1
function	the real gid ||| group real gid	count=1
arg	face to underline ||| face underline frame	count=2
module	a non-nil ||| 6	count=2
module	is ||| 5 5	count=2
function	into a ||| kbd	count=1
function	the number of screen ||| screen	count=1
function	tabulated list buffer ||| tabulated list	count=1
function	[function_1] list buffer ||| [function_1] [function_2]	count=3
arg	x ||| frame x	count=1
rep	returns the [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	[function] always local ||| scroll bar [function]	count=1
function	host name and ||| save list	count=1
module	windows [module] the ||| [module]	count=1
arg	input-method for the ||| input-method	count=1
function	scroll ||| frame current scroll	count=1
module	of ||| 10	count=1
arg	func with ||| func	count=1
arg	signal to process process ||| process signal	count=1
function	list of coding systems ||| coding systems for	count=1
module	text for ||| 31	count=1
module	set it non-nil based ||| 25 2	count=1
function	the subtype symbol ||| char table subtype	count=1
module	process id ||| 25	count=1
arg	each element of tree ||| tree	count=1
function	substrings of ||| substrings	count=1
module	this function ||| 31	count=3
arg	divides dividend ||| dividend	count=1
arg	value of the nth ||| n	count=4
arg	defines the ||| docstring interactive	count=1
arg	according to ||| accept-defaults no-remap	count=1
function	currently active ||| active	count=2
module	display-buffer is ||| 27 14	count=1
function	systems ||| systems	count=3
arg	with (func nth n ||| n func	count=1
function	[function_1] visited ||| clear [function_2] [function_1] modtime	count=3
function	[function] was ||| [function]	count=3
function	function completes [function] contents by ||| [function] complete	count=1
function	[function_1] text areas ||| [function_1] [function_2]	count=2
function	position ||| marker position	count=1
arg	[arg_1] synchronously ||| [arg_1] [arg_2]	count=1
function	ask a ||| ask	count=1
module	converts the ||| 21 1	count=1
arg	frame to ||| frame	count=1
module	the falsehood of ||| 10	count=1
arg	key with value binding ||| map key	count=1
arg	map after the binding ||| binding	count=1
arg	completions of string ||| string	count=1
module	a ||| 32 1	count=1
arg	[arg_1] [arg_2] ||| [arg_1] fixedcase literal subexp [arg_2]	count=1
function	represents in shell ||| shell	count=1
arg	color name ||| color	count=1
function	displaying ||| windows	count=1
module	this variable ||| 2.2	count=1
function_arg	input method [arg_2] ||| [function_1] [arg_2]	count=4
function	this function kills ||| kill process	count=1
arg	has a ||| function	count=1
function	property named property in ||| get	count=1
arg	eval-region but the ||| buffer-or-name stream	count=1
function	text between ||| set text properties	count=1
arg	of string ||| string	count=4
arg	[arg_1] s ||| [arg_2] [arg_1]	count=1
module	this ||| 27 7	count=2
function_arg	[function_1] n ||| [function_1] char-table [arg_2]	count=7
function	eval-expression and thus ||| eval expression print	count=1
function	symbolic file mode specification ||| modes symbolic	count=1
function	to make a ||| pop	count=1
module	position of the ||| 31	count=1
arg	a function fn this ||| fn	count=1
arg	a and b ||| a b	count=1
function	are t ||| population	count=1
module	an ||| 1	count=1
function_arg	[function_1] for command ||| [function_1] [arg_2]	count=4
arg	if [arg] is ||| [arg]	count=1
function	the top entry ||| window top line	count=1
function	left margin of ||| left margin	count=2
arg	completely replaces ||| props	count=1
module	nonnegative integer ||| 19	count=1
arg	separation and ending ||| separation	count=1
arg	the named [arg_2] ||| [arg_2] [arg_1]	count=4
function	signals the quit ||| quit	count=1
function	the size of ||| size	count=1
function	it ||| list	count=2
function_arg	[function_1] [arg_2] ||| [function_1] frame [arg_2]	count=8
function_arg	[function_1] value for ||| [function_1] start end prop [arg_2]	count=1
function	non-nil value ||| char	count=1
function	this function sets the ||| set frame	count=1
arg	each element of char-table ||| function char-table	count=1
function	file in directory ||| in directory	count=1
function	the selinux ||| selinux	count=2
function	dimensions ||| dimensions	count=1
arg	name whose ||| name	count=1
function	for a [function] buffer—but ||| [function] buffer name	count=1
function	number of screen ||| screen	count=1
arg	such as #rrrgggbbb ||| prompt convert allow-empty display	count=1
function	description [function_2] ||| [function_2] [function_1]	count=3
function	returns the visibility status ||| frame visible p	count=1
function	inserts object ||| insert	count=1
arg	years days ||| format-string	count=1
arg	alist for a ||| alist	count=1
arg	matching with font-spec for ||| font-spec frame add	count=1
function	this ||| save	count=1
arg	case and one lower ||| uc lc case-table	count=1
arg	cyclic ||| minibuf all-frames default	count=1
module	falsehood ||| 10	count=1
function	string ||| string	count=9
function	the first nonblank ||| current	count=1
function	environment variable values ||| substitute in file	count=1
module	returns window’s value ||| 25	count=1
function	end of the buffer ||| end of buffer	count=1
arg	the binding [arg_2] ||| [arg_1] [arg_2]	count=1
function	file attributes ||| file extended attributes	count=1
function	this function stores ||| char code	count=1
arg	that record all the ||| reuse reseat	count=1
arg	in [arg_2] ||| [arg_2] [arg_1]	count=2
module	x ||| 28 3.5	count=1
function	executes the shell ||| shell command	count=1
function_arg	the last [arg_2] ||| [arg_2] [function_1]	count=2
module	of ||| 32 6	count=2
module	variable is non-nil that ||| 27	count=1
arg	nth position [arg] replaced ||| n x [arg]	count=1
function	function sends ||| signal	count=1
arg	to end [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	displays [arg_2] ||| [function_1] other frame [arg_2]	count=3
arg	is like get-char-property but ||| position prop object	count=1
module	[module] the ||| [module]	count=9
arg	number of seconds since ||| seconds	count=1
function	button after ||| button	count=1
function	and execution permissions ||| file modes	count=1
arg	text in ||| start end	count=1
function	has ||| button has	count=1
function	and exits if confirmation ||| and exit	count=1
arg	count repetitions ||| count character	count=2
function	that are ||| population	count=1
function	least fixpoint ||| fixfn	count=1
module	value of ||| 27	count=2
function	comparing them ||| sort	count=1
function_arg	gives it [arg_2] ||| [arg_2] [function_1]	count=1
function	for the tabulated list ||| tabulated list	count=1
function	[function_1] symbolic link ||| [function_1] [function_2]	count=3
module	return a function ||| dash	count=1
arg	category-set ||| category-set	count=1
arg	the lisp [arg] any ||| [arg]	count=1
function	the underline ||| underline	count=1
arg	[arg_1] through end ||| [arg_1] [arg_2]	count=2
function	this function [function] file named ||| file exists [function]	count=1
function	non-nil based on this ||| auto	count=1
function_arg	modifiers [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] conversion ||| [function_1] [function_2]	count=3
arg	frame raises it ||| frame	count=1
function	is ||| mark	count=1
module	function sends ||| 36 8	count=1
function	and modification times ||| times	count=1
arg	[arg_1] record all ||| [arg_1] [arg_2]	count=3
function	function sets the ||| set	count=17
arg	if regexp ||| regexp limit	count=1
arg	from index from ||| from &optional	count=1
module	the name of ||| 6	count=1
function	inserts the contents of ||| format insert	count=1
function	the minimum distance between ||| minimum offset	count=1
function	consecutive button presses that ||| event click count	count=1
function_arg	previous button [arg_2] ||| [function_1] [arg_2]	count=3
module	option ||| 27 17	count=1
arg	like read-key-sequence except ||| prompt continue-echo dont-downcase-last switch-frame-ok command-loop	count=1
arg	property prop ||| prop	count=2
function	if ||| pop up	count=2
function	insert-before-markers but [function_2] ||| [function_2] [function_1]	count=1
module	tests for the falsehood ||| 10	count=1
function	returns ||| end	count=2
module	relevant variables during ||| 4.1	count=1
function	the rest to lower ||| s capitalize	count=1
arg	file filename when ||| filename	count=1
module	vector containing all the ||| 6 5	count=1
module	function ||| 25	count=1
arg	list of buffer-or-name ||| buffer-or-name	count=1
module	character ||| 17.1	count=1
function	reads your ||| save	count=1
arg	by divisor ||| divisor	count=2
function_arg	members [arg_2] ||| [arg_2] [function_1]	count=1
function	this macro defines a ||| menu define	count=1
function	that is ||| vector	count=1
arg	alist elements ||| alist	count=1
module	allowed to ||| 27 14	count=1
arg	overlay ||| overlay	count=1
function	the bottom ||| bottom	count=1
function	the minibuffer window is ||| minibuffer auto	count=1
module	printing ||| 18	count=1
module	position ||| 31 17.1	count=2
function	version ||| version	count=1
function	returns the [function_2] ||| [function_2] [function_1]	count=1
rep	a [function_arg_2] ||| [module_1] make [function_arg_2]	count=4
function	newer history [function_2] ||| [function_2] [function_1]	count=1
function	buffers by making ||| pop	count=1
function	string of ||| format seconds	count=1
module	all ||| 6 5	count=2
function	function sets ||| set file acl	count=1
function	style for void ||| void	count=1
arg	base-variable ||| base-variable	count=1
module	this variable ||| 14	count=2
module	and returns a ||| 7	count=1
function	your init ||| auto	count=1
arg	start [arg_2] ||| [arg_1] [arg_2]	count=3
arg	args ||| args	count=6
module	this function returns ||| 4 6	count=2
function	days hours ||| seconds	count=1
function	the abbrev [function_2] ||| [function_2] [function_1]	count=1
function	file it initializes ||| list file	count=1
function	two window [function_2] ||| [function_1] [function_2]	count=4
arg	start and ||| start	count=9
arg	the lisp representation ||| omit-port	count=1
function	at the bottom of ||| buffer at bottom	count=1
function	[function_1] status of ||| [function_2] [function_1]	count=2
function	[function_1] command ||| [function_1] [function_2]	count=4
function	based on this ||| auto save list file	count=1
function	function parses a sexp ||| partial sexp	count=1
module	programs and ||| 7	count=1
function	not already set it ||| file	count=1
function	state of window ||| state	count=1
arg	[arg_1] satisfying ||| [arg_2] [arg_1]	count=8
function_arg	[function_1] [arg_2] ||| [function_1] sequence [arg_2]	count=1
arg	this function divides dividend ||| dividend	count=1
module	[module] for lisp ||| [module]	count=3
arg	that position ||| position	count=1
function	new vector containing ||| vconcat	count=1
arg	display ||| display	count=1
arg	copy of string ||| string	count=1
function	emacs-recognized extended attributes ||| extended attributes	count=1
arg	the rgb value rgb ||| rgb frame	count=1
function	separator ||| up to	count=1
module	expansion ||| 35	count=1
function	controls which [function_2] ||| [function_2] [function_1]	count=6
arg	from start [arg_2] ||| [arg_2] [arg_1]	count=6
function	to ||| pop	count=2
function	local keymap ||| local	count=1
module	of the ||| 19 13	count=1
function	this moves point to ||| goto	count=1
function	underline in pixels when ||| underline	count=1
function_arg	[function_1] process to ||| [arg_2] [function_1]	count=2
arg	list or ||| list	count=1
function	this function sends ||| signal process	count=1
arg	equal to object ||| object	count=1
module	of this ||| 27 14	count=2
function	your init file it ||| auto save list file	count=1
function_arg	[function_1] to end ||| [arg_2] [function_1]	count=1
arg	[arg_1] negative ||| [arg_1] [arg_2]	count=1
arg	bound ||| rigid	count=1
function	[function_1] buffer ||| [function_2] [function_1]	count=8
function_arg	[function_1] [arg_2] to expand to expansion ||| [function_1] [arg_2] expansion	count=2
function	being [function] by the ||| [function] file	count=1
arg	standard for [arg] ||| [arg]	count=2
function	[function_1] made from ||| [function_2] [function_1]	count=3
arg	which collection will operate ||| collection	count=1
arg	window preferably not ||| action norecord	count=1
function	as dedicated to its ||| window dedicated	count=1
function	window typically ||| window	count=1
function	sound file specifying ||| sound	count=1
module	the string that ||| 8	count=1
function	is nil switch-to-buffer ||| preserve	count=1
module	the current buffer ||| 29 4	count=1
function	sets the debug-on-exit ||| backtrace	count=1
module	if point is ||| 1	count=2
function	[function_1] slot ||| [function_2] [function_1]	count=5
arg	reg into the ||| reg beforep	count=1
module	loading ||| 15	count=1
module	is allowed ||| 27	count=1
function	zip the two ||| zip with	count=1
function	[function_1] [function_2] ||| [function_1] suppress log [function_2]	count=3
function	in bool vector ||| bool vector	count=1
function	the top entry ||| top line	count=1
function	emacs and ||| emacs	count=1
function	returns the [function] of ||| [function]	count=1
function	string constant into a ||| kbd	count=1
module	non-nil display-buffer is allowed ||| 14	count=1
function	the acl for the ||| acl	count=1
function	auto-save-list-file-name if ||| auto save list	count=1
function	appends ||| kill append	count=1
function	if you ||| list file	count=1
arg	list x ||| x	count=1
function	window as dedicated ||| set window dedicated p	count=1
function	minibuffer window is ||| minibuffer auto	count=1
function	sends a ||| signal process	count=1
function	possible name [function_2] ||| [function_2] [function_1]	count=3
module	after emacs reads your ||| 2	count=1
function	fontset according to the ||| fontset from fontset	count=1
arg	that matches pattern a ||| pattern	count=1
function	current buffer [function_2] ||| [function_2] [function_1]	count=2
function	fontset ||| create fontset from fontset	count=1
function	returns the beginning ||| beginning	count=1
module	the ||| 19 13	count=4
function	this variable is the ||| mark ring	count=1
function_arg	remapping of [arg_2] ||| [arg_2] [function_1]	count=5
module	used in keymaps ||| 21	count=1
arg	each element of char-table ||| char-table	count=1
function	this function displays the ||| switch to	count=2
module	may display buffers by ||| 14	count=1
function	convert s to titleized ||| s titleized	count=1
module	a nonnegative integer ||| 19	count=1
function	character ||| char in	count=1
arg	to end in ||| end properties	count=1
function	the prefixes specified ||| prefixes	count=1
function	character of command ||| char	count=2
arg	which may be either ||| buffer-name not-this-window frame	count=1
arg	with [arg] measured in ||| [arg]	count=1
arg	value to ||| value	count=1
arg	the buffer-local [arg] ||| [arg]	count=1
function	selected ||| frame selected	count=1
function_arg	[function_1] node ||| [arg_2] [function_1]	count=1
arg	according to coding-system ||| coding-system nocopy	count=1
function	maximum [function_2] ||| [function_1] lisp eval [function_2]	count=4
module	the current ||| 29 4	count=1
function	pad it with ||| s pad	count=1
arg	and pushes a ||| nomsg activate	count=1
arg	insert [arg] ||| [arg] &optional form &rest	count=3
arg	[arg] in ||| font-spec [arg]	count=1
function	completes ||| complete	count=1
arg	point and suffix ||| predicate suffix	count=1
arg	this function finds ||| nosuffix	count=1
arg	prev-buffers ||| prev-buffers	count=1
arg	undo list of buffer-or-name ||| buffer-or-name	count=1
function	host ||| save list	count=1
arg	object rather than nil ||| object	count=1
arg	alphabetically as specified by ||| reverse	count=1
function	the previous [function_2] ||| [function_1] [function_2]	count=6
function	window as dedicated to ||| window dedicated	count=1
function_arg	wrap string [arg_2] ||| [arg_2] [function_1]	count=5
module	by ||| 14	count=1
module	file converting it according ||| 12.2	count=1
function	the file ||| file	count=3
arg	[arg_1] to olddef ||| [arg_2] [arg_1]	count=11
function	returns a translation ||| make translation	count=2
function	auto-save [function_2] ||| [function_2] [function_1]	count=1
arg	command fills each paragraph ||| justify citation-regexp	count=1
module	limits of the ||| 2.3	count=2
function	returns the length ||| length	count=1
module	the value ||| 7	count=1
function	display-table ||| table slot	count=2
module	this is ||| 5	count=2
function	may display ||| up	count=1
function_arg	subtype of [arg_2] ||| [function_1] p type [arg_2]	count=1
arg	to position and pushes ||| position nomsg activate	count=1
module	this function sets ||| 12	count=1
function	an input [function_2] ||| [function_1] [function_2]	count=4
module	allowed ||| 27	count=1
module	height or width of ||| 4	count=1
function	must be a string ||| string	count=1
function	if a given family ||| family alternatives	count=1
arg	of frame frame based ||| frame	count=1
function	years days ||| seconds	count=1
function	default file permissions ||| default file modes	count=2
function_arg	list -remove [arg_2] ||| [function_1] [arg_2]	count=1
function	window at the bottom ||| display buffer at bottom	count=1
arg	to non-nil bind ||| &rest	count=1
arg	address ||| process address	count=1
module	only exact match ||| 33 3.3	count=1
arg	peer address to address ||| address	count=1
module	this ||| 17.1	count=1
function	well as the syntax ||| syntax	count=1
module	display-buffer is allowed ||| 27 14	count=1
function	the user [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] start ||| [arg_2] end [arg_1]	count=3
module	text according to ||| 31	count=1
function	beginning of a line ||| bolp	count=1
arg	[arg_1] syntax syntax ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] window for ||| [arg_2] [function_1]	count=3
function	specify the dimensions ||| dimensions	count=1
arg	[arg] stored ||| place [arg]	count=3
module	if the value ||| 27 14	count=2
arg	font-spec ||| font-spec frame	count=1
arg	of years days ||| format-string	count=1
module	of corresponding ||| 4 9	count=1
function	turn passing [function_2] ||| [function_2] [function_1] predicate predicate	count=2
function	change group that ||| activate change group	count=1
module	the abbrev expansion of ||| 35 4	count=1
function	[function_1] registry ||| [function_2] [function_1]	count=8
function	then [function_2] ||| [function_1] newline and [function_2]	count=4
arg	object ||| object	count=36
module	make a new window ||| 14	count=1
function_arg	forward count lines ||| forward line count	count=1
module	reads ||| 2	count=1
arg	[arg_1] in ||| [arg_2] [arg_1]	count=4
function	named ||| setenv	count=1
function	top entry ||| top line	count=1
module	if point is ||| 31	count=2
function	function returns the handler ||| handler	count=1
arg	string ||| string collection	count=1
function	the property list ||| plist	count=2
module	[module] command ||| [module]	count=3
function	not already set it ||| list file	count=1
function	function displays ||| switch to	count=2
module	this function executes ||| 3	count=1
function	the dimensions of ||| display mm dimensions alist	count=1
module	this function returns ||| 7 3	count=1
arg	a termscript [arg] that will ||| [arg]	count=1
arg	optionally suffix ||| &optional suffix	count=2
function	beginning of ||| beginning of	count=2
function	a ||| char table	count=2
module	returns the ending position ||| 20	count=1
function	that was selected when ||| minibuffer selected	count=1
arg	to init ||| init	count=1
function	of years ||| format seconds	count=1
arg	concatenate s and suffix ||| suffix s	count=1
function	selected ||| selected	count=3
function	window for displaying ||| up windows	count=1
function	it non-nil based on ||| file	count=1
function	named ||| get	count=2
arg	in abbrev-table [arg_2] ||| [arg_2] [arg_1]	count=2
function	width in columns ||| char width	count=1
function	the newest ||| kept	count=1
function	visible on the screen ||| visible	count=1
arg	is the handy way ||| function append local	count=1
function	of the emacs-recognized extended ||| file extended	count=1
function	return the reverse ||| reverse	count=1
module	is the ||| 30 7	count=1
function_arg	[function_1] n ||| [function_1] [arg_2]	count=1
arg	two strings a character ||| string1 string2	count=1
function	and ||| find	count=2
arg	option symbol add ||| symbol	count=1
module	the [module] ||| [module] 4	count=3
function	parent ||| table parent	count=1
function	non-nil value ||| map	count=1
module	the host name and ||| 2	count=1
arg	name or directory ||| directory	count=1
arg	feature is ||| feature	count=1
function	input from the minibuffer ||| read from minibuffer	count=1
function	have not already ||| file	count=1
function	[function] how ||| ask [function] about supersession threat	count=1
module	function tests for ||| 3	count=1
function_arg	the command [arg_2] ||| [arg_2] [function_1]	count=2
function	this function sets window’s ||| set window parameter	count=1
function	variable is the ||| ring	count=1
module	the value of this ||| 27 14	count=2
function	mode or ||| file	count=1
module	this function returns window’s ||| 27	count=1
arg	data adding ||| data	count=1
function	combination limit for ||| combination limit	count=1
function	syntax classes ||| syntax backward	count=1
arg	a pop-up menu and ||| position menu	count=1
arg	with prompt and ||| prompt initial history args	count=1
arg	command fills ||| justify	count=1
function	selected ||| same	count=1
function	is matched by the ||| re	count=1
module	reports ||| 37 5.1	count=1
arg	match-form [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] in the current buffer ||| [function_1] [arg_2]	count=3
arg	the message message ||| message	count=1
arg	the regular expression regexp ||| regexp limit	count=1
function	list of words ||| words	count=1
module	that means display-buffer ||| 27	count=1
arg	and ||| start	count=2
module	new vector ||| 6 5	count=1
function	in that window ||| window	count=1
arg	character at [arg] in the ||| [arg]	count=1
arg	list where pred item ||| pred list	count=1
function	[function_1] window’s header ||| [function_2] line [function_1]	count=1
function	variable specifies the site-customization ||| site run	count=1
arg	frame raises it should ||| frame norecord	count=1
function	the site-customization file ||| site run file	count=2
function	argument function for ||| map char table	count=1
function_arg	[function_1] dirname to ||| [function_1] [arg_2]	count=2
function	like next-single-property-change except ||| next single char	count=1
function	in ||| pop up	count=1
function	graphic display ||| graphic	count=1
function	coding system to ||| coding system	count=3
function	face displays differently ||| differs	count=1
arg	bitmap bitmap [arg_2] ||| [arg_1] [arg_2]	count=1
function	uppercamelcase ||| s upper camel case	count=2
module	a string or vector ||| 21 1	count=1
module	of ||| 32 4	count=2
arg	or vector key ||| key	count=1
function	the [function] ||| describe [function]	count=3
arg	flag ||| flag	count=3
function_arg	completions of [arg_2] ||| [arg_2] [function_1]	count=1
arg	the propname property ||| propname	count=2
module	it as automatically buffer-local ||| 11 10.2	count=1
function	current [function] after point ||| [function]	count=1
function_arg	this sets [arg_2] ||| [function_1] from to [arg_2]	count=3
function	color cells the screen ||| color cells	count=1
arg	of string [arg_2] ||| [arg_2] [arg_1]	count=2
function	the handler [function_2] ||| [function_2] [function_1]	count=2
function_arg	between positions [arg_2] ||| [function_1] [arg_2]	count=3
function	text properties ||| no properties	count=1
function	a new ||| up	count=1
function	a string of years ||| format seconds	count=1
function	other than the ||| buffer other	count=1
function	of syntax class ||| skip syntax	count=1
module	have ||| 2	count=2
function	list of face attributes ||| font face attributes	count=1
module	backup ||| 25 1.4	count=1
module	non-nil based on this ||| 25	count=1
module	display ||| 27	count=1
arg	frame to a height ||| frame	count=1
module	into a key ||| 1	count=1
function	list of suffixes ||| suffixes	count=1
function	[function_1] margin of ||| [function_2] [function_1]	count=4
arg	it ||| initial	count=1
function	text of window’s ||| text	count=1
function	to the right ||| right	count=1
module	or ||| 21	count=1
module	minibuffer a nonnegative integer ||| 19 13	count=1
function	filename ||| file buffer	count=1
arg	of face ||| face frame inherit	count=1
function	the dimensions ||| mm dimensions	count=1
function	of the file ||| file	count=1
function	this function calls ||| table	count=1
arg	pos ||| pos string	count=1
function	for [function_2] ||| [function_1] user [function_2]	count=3
module	internal window [module] ||| [module]	count=1
arg	finds ||| filename missing-ok nomessage nosuffix	count=1
function	the buffer [function_2] ||| [function_1] [function_2]	count=1
arg	that x and y ||| frame x y	count=1
function	[function_1] the matching ||| [function_2] [function_1]	count=6
module	function returns the ||| 19 12	count=2
arg	functions with [arg] measured in ||| [arg]	count=1
function_arg	[function_1] [arg_2] and call ||| [function_1] abbrev [arg_2]	count=2
module	window to make a ||| 27 14	count=1
function	a regular expression ||| regexp	count=1
arg	fname ||| fname	count=1
function	to a time value ||| to	count=1
function	:stipple ||| face stipple	count=1
module	has allocated ||| e	count=1
function_arg	[function_1] filename as ||| [function_1] [arg_2]	count=5
function	have not already ||| list file	count=1
function	beginning of the current ||| beginning of	count=1
module	of ||| 6 5	count=2
function	init file it ||| auto save list	count=1
function	this function ||| process	count=1
function	should ||| case	count=1
function	property of ||| put charset property	count=1
arg	value of parameter to ||| parameter	count=1
function	the host ||| auto	count=1
module	of mark-ring ||| 7	count=1
function	the dimensions of graphical ||| display mm dimensions	count=1
module	character set ||| 32	count=1
function	prefix adding the ||| list file prefix	count=1
module	the [module] of the ||| [module] 19.9	count=1
function	that is an ||| vector	count=1
arg	list signature as the ||| signature when	count=1
function	function ||| format seconds	count=2
arg	of fun ||| fun	count=1
function	an alist of parameter ||| alist	count=1
function	host name ||| auto	count=1
function	this function ||| buffer	count=1
function	the property named property ||| get	count=1
module	parameters ||| 28	count=1
function_arg	sets the [arg_2] ||| [function_1] from to [arg_2]	count=3
function	this value if debug-on-error ||| on error	count=1
module	of the [module] of ||| [module] 2	count=1
function	the nearest integer ||| round	count=1
function	height or body ||| body size	count=1
function	convert s to uppercamelcase ||| upper camel case	count=1
function_arg	[function_1] prompt ||| [function_1] read with preview [arg_2]	count=1
function	[function_1] case table ||| [function_2] [function_1]	count=4
module	and returns ||| 34 8	count=1
function_arg	[function_1] [arg_2] ||| [function_1] set base [arg_2]	count=9
module	is ||| 15 5	count=1
function	of attributes ||| all attributes	count=1
function	below the selected window ||| below selected	count=1
arg	between from [arg_2] ||| [arg_1] [arg_2]	count=1
module	this function returns a ||| 30 3	count=2
arg	within seconds seconds this ||| seconds	count=1
function	modification times of ||| file times	count=1
module	emacs has allocated ||| e	count=1
function	to regenerate the help ||| help	count=1
module	n functions and return ||| dash	count=1
arg	[arg_1] returns value ||| [arg_2] [arg_1]	count=1
arg	screen line count screen ||| count	count=1
module	saving abbrevs ||| 35	count=1
function	search or match ||| match	count=1
arg	and providing completion ||| directory default require-match initial predicate	count=1
module	reads your ||| 25	count=1
function	copying in cases where ||| copying	count=1
arg	attribute of face to ||| face	count=1
arg	[arg_1] respectively at ||| [arg_2] [arg_1]	count=2
function	height in lines of ||| height	count=3
function	the ending position ||| end	count=1
arg	with arguments args ||| function args	count=1
function	the ||| list	count=1
module	emacs ||| 38 2.2	count=1
function	get input from the ||| read from	count=1
function	that means ||| up	count=1
function	and modification times ||| file times	count=1
function_arg	[function_1] supertype ||| [arg_2] [function_1]	count=2
arg	valid position in object ||| pos prop object	count=1
function	function ||| table	count=2
function	by ||| pop	count=1
module	window to ||| 27 14	count=1
function	font of ||| face font	count=1
module	window ||| 27 1	count=1
function	description of [function_2] ||| [function_2] [function_1]	count=3
function	case ||| set case syntax	count=1
arg	shorter lists the ||| lists	count=1
arg	with prompt ||| prompt	count=3
function_arg	[function_1] key must ||| [function_1] string [arg_2]	count=2
function	an integer [function_2] ||| [function_2] [function_1]	count=4
function	specifies the directory name ||| file directory	count=1
arg	position in object if ||| prop object	count=1
arg	[arg_1] buffer ||| [arg_2] [arg_1]	count=2
arg	frame can really ||| frame	count=1
function	newline [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] [arg_2] ||| [arg_1] switches [arg_2]	count=1
function	moves window’s bottom edge ||| trailing edge	count=1
arg	and opens ||| must-suffix	count=1
function	than [function_2] ||| [function_1] [function_2]	count=1
function	the contents of extra ||| extra	count=1
arg	function empties out the ||| keep-record	count=1
function_arg	[function_1] sig ||| [function_1] [arg_2]	count=3
function	it the window ||| window	count=1
function_arg	fieldth [arg_2] ||| [function_1] [arg_2]	count=4
function	replaces the buffer ||| revert buffer	count=1
function	the scroll ||| scroll	count=3
module	function ||| 29 4	count=1
function	[function] arg ||| [function]	count=3
function	that has ||| char table	count=1
module	of file names ||| 24 9	count=1
module	this ||| 12 5	count=1
function	[function_1] directory ||| [function_1] [function_2]	count=8
function	the accessible portion ||| point min	count=1
function	debug-on-exit flag ||| backtrace	count=1
module	window’s value for ||| 27 25	count=1
function	of the font of ||| font	count=1
function	inserts contents of ||| insert	count=1
module	the words in ||| 8	count=1
arg	left-margin property on ||| margin	count=1
module	this function ||| 36	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1226
function	command inserts ||| format insert file	count=1
module	all the elements of ||| 5	count=1
arg	vector key ||| key	count=1
arg	text keyseq-text a ||| keyseq-text	count=1
function	function returns the position ||| marker position	count=1
module	function returns a ||| 32 10.3	count=1
arg	count ||| count killp	count=1
function	new fontset according to ||| fontset from fontset spec	count=1
function	[function_1] year corresponding ||| [function_2] [function_1]	count=1
function	a new frame and ||| frame	count=1
module	name ||| 25 2	count=2
function	the text conversion ||| change text conversion	count=2
module	by other frames ||| 28	count=1
module	a string constant into ||| 21 1	count=1
arg	value value ||| value	count=4
function	list of face ||| face	count=1
module	with a [module] ||| [module]	count=1
function	remove whitespace at ||| s trim	count=1
function	list of directories ||| path	count=1
function	buffers by ||| up	count=1
module	is the ||| 7	count=1
arg	start and end ||| process start end	count=2
function	of bool vectors a ||| bool vector union	count=1
function	has a ||| map char table	count=1
module	are thrown away at ||| 31 8.6	count=1
function	the selinux [function_2] ||| [function_2] [function_1]	count=4
function_arg	directory named dirname ||| directory dirname parents	count=1
function_arg	table display-table ||| table display-table	count=1
function	based ||| save	count=1
function_arg	[function_1] [arg_2] ||| [function_1] overlay prop [arg_2]	count=1
module	this function converts the ||| 21 1	count=1
arg	and y ||| y	count=1
function	left pixel edge of ||| pixel left	count=1
arg	handy way to ||| function append local	count=1
function	returns the actual number ||| count	count=1
module	function returns window’s value ||| 25	count=1
function	[function_1] name nil ||| [function_1] [function_2]	count=1
function	for ||| parameter	count=1
function	keyboard input [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] to time ||| [arg_1] [arg_2]	count=2
arg	of parameter to ||| parameter	count=1
function	sets ||| set keymap	count=1
function	window at ||| display buffer at	count=1
function	returns the user ||| user	count=1
module	this function ||| 10	count=1
function	live [function] ||| [function] live p	count=1
module	a string or vector ||| 21	count=1
module	are accessible ||| 29 4	count=1
arg	from pos ||| pos limit	count=2
function	based on this ||| auto save list	count=1
arg	[arg_1] that string ||| 19 6.1 completion boundaries [arg_2] [arg_1]	count=1
function	a string or nil ||| string or null	count=1
arg	function selects frame ||| frame norecord	count=1
function	truename of the file ||| truename	count=1
arg	command specifies coding-system ||| coding-system	count=2
function	emacs reads your init ||| auto	count=1
arg	filename to context ||| filename	count=1
module	days hours etc ||| 7	count=1
function_arg	prec2 [arg_2] ||| [arg_2] [function_1]	count=3
function	is no match ||| string match	count=1
function	limit for the acceptable ||| limit	count=1
function	returns a string ||| number to string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] start end prop [arg_2]	count=2
function	convert s to dashed-words ||| dashed words	count=1
function	given ||| alternatives	count=2
function_arg	command [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] display ||| [arg_2] [function_1]	count=1
function	backward in the ||| backward	count=1
arg	a color name ||| color	count=1
function	the file name to ||| save file name	count=1
function	frame ||| set frame height	count=1
arg	current-name ||| current-name when doc	count=1
function	returns non-nil if all ||| p	count=1
module	or vector constant ||| 21	count=1
arg	menu ||| maps doc menu	count=1
arg	function sends a signal ||| process signal	count=1
function	alist of attributes of ||| face all attributes	count=1
function	[function_1] input ||| [function_2] [function_1]	count=3
module	non-nil that means ||| 27 14	count=1
function	sum ||| sum	count=1
arg	eval-region but the ||| buffer-or-name stream filename unibyte print	count=1
module	this function ||| 6 5	count=1
function	that means display-buffer ||| pop up	count=1
arg	[arg_1] to end ||| [arg_1] [arg_2]	count=16
function	header-line-format for the tabulated ||| tabulated	count=1
function	the day number within ||| to day in	count=1
function	absolute file name of ||| file name	count=1
arg	[arg_1] function in ||| [arg_2] [arg_1]	count=4
module	display-buffer is allowed to ||| 14	count=1
function	to each element of ||| from	count=1
function	void ||| void	count=1
function	argument function ||| map	count=1
function	next sibling of ||| next sibling	count=1
module	this command ||| 20	count=1
module	attribute of ||| 37 12.3	count=2
function	display-buffer may ||| up	count=1
function	completes the current ||| complete	count=1
module	first nonblank ||| 31	count=1
arg	its arguments together ||| numbers-or-markers	count=1
module	constant ||| 21	count=2
function	[function_1] file permissions ||| [function_1] [function_2]	count=3
arg	in lists such ||| lists	count=1
arg	[arg_1] character char ||| [arg_2] [arg_1]	count=2
function	rehash ||| hash table rehash	count=1
function	current depth of ||| depth	count=1
function	[function_1] whose ||| [function_1] [function_2]	count=3
function	buffers ||| buffers	count=1
function_arg	[function_1] end according ||| [arg_2] [function_1]	count=1
arg	n ||| n	count=11
function	eval-expression ||| eval expression	count=1
function	below the selected ||| below selected	count=1
function	screen ||| count screen	count=1
function_arg	[function_1] to filename ||| [function_1] [arg_2]	count=5
function	a list of coding ||| coding	count=3
function	the host name and ||| file	count=1
function	the rest to lower ||| capitalize	count=1
function	table made [function_2] ||| [function_1] [function_2]	count=1
function	row and column ||| row	count=1
function	convert s to titleized ||| titleized	count=1
function	frame’s current ||| current	count=1
function	has ||| char	count=1
arg	makes char case-invariant with ||| case-table	count=1
function	at the ||| at	count=1
module	into a ||| 21 1	count=1
module	key ||| 21	count=1
function	replaces all occurrences ||| subst	count=1
function_arg	[function_1] named fname ||| [function_1] [arg_2]	count=5
function	window configuration ||| window configuration	count=3
function	for the fringe ||| fringe bitmap face	count=1
arg	value of parameter to ||| window parameter	count=1
function_arg	[function_1] [arg_2] ||| [function_1] face [arg_2]	count=1
function	executes the shell ||| shell	count=1
function	[function_1] family ||| [function_2] [function_1]	count=6
arg	prompt ||| prompt confirm default	count=1
function	removes ||| delete to	count=1
function	pair ||| pair	count=1
module	process ||| 8	count=2
function	shell ||| shell command	count=1
arg	that symbol is an ||| symbol value	count=1
function	the host ||| list file	count=1
module	this variable is ||| 30	count=1
arg	position as ||| position	count=1
arg	tabname a ||| tabname	count=1
arg	current-name ||| current-name	count=1
function	[function_1] column ||| [function_2] [function_1]	count=1
function	visible on the ||| visible	count=1
module	attribute ||| 37 12.3	count=2
function	coding ||| set terminal coding	count=1
module	horizontal ||| 31	count=1
arg	value1 ||| value1	count=1
function	command inserts ||| insert	count=2
function	and buffer-local ||| normal	count=1
function	to buffer-invisibility-spec ||| add to invisibility spec	count=1
function	name and process ||| save list	count=1
module	is the ||| 30	count=1
arg	across arg ||| arg	count=2
function	the beginning [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] key ||| [function_1] string [arg_2]	count=2
function	function [function] ||| display color [function]	count=2
module	minibuffer ||| 19 13	count=2
function	[function_1] a description ||| [function_2] [function_1]	count=1
module	the current ||| 4	count=1
function	no change is found ||| change	count=3
function	the standard [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] stored in ||| [function_1] [arg_2]	count=3
function	currently active [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] key in ||| [function_1] keymap [arg_2]	count=3
module	marker nil ||| 30 2	count=1
module	key sequence a ||| 21 1	count=1
function	tab ||| for tab	count=1
arg	count times before ||| count	count=1
module	new vector containing ||| 6	count=1
module	the ||| 29	count=2
function	to [function_2] ||| [function_2] window [function_1]	count=4
function	that was selected when ||| selected	count=1
arg	providing completion ||| predicate require-match initial history	count=1
function	for ||| char table	count=2
function	a ||| >prec2	count=1
function	[function_1] display table ||| [function_2] [function_1]	count=1
function_arg	the contents [arg_2] ||| [function_1] [arg_2]	count=2
module	this function returns ||| 29 1	count=1
function	that are t ||| population	count=1
module	minibuffer before the point ||| 19 10	count=1
module	attribute ||| 12.3	count=1
function	systems ||| systems for	count=1
function	which ||| current	count=1
arg	signature as ||| signature when	count=2
module	new ||| 14	count=2
function	[function_1] case ||| [function_1] [function_2]	count=3
function	tabulated list buffer see ||| tabulated list	count=1
module	abbrev expansion of ||| 35 4	count=2
function_arg	[function_1] obsolete-name ||| [arg_2] [function_1]	count=2
arg	and executes [arg_2] ||| [arg_2] [arg_1]	count=1
function	this function creates ||| hash	count=1
function	or least recently-used ||| pop up	count=1
function	init file ||| save list	count=1
arg	whose name is ||| name	count=1
arg	as the message ||| message level buffer-name	count=1
function	window to make ||| pop up	count=1
function	name to ||| name	count=2
function	returns the selected ||| selected	count=1
module	files in ||| 24 6.1	count=2
function	change group for buffer ||| change group	count=1
function	recenter except if ||| recenter	count=1
arg	returns point-max if flag ||| flag	count=1
function	init file it ||| save	count=1
function	as an alias for ||| alias	count=2
function	returns a category ||| category	count=1
function	function expands [function_2] ||| [function_2] [function_1]	count=1
arg	operation ||| in-string	count=1
function	category ||| category	count=5
module	and process ||| 25	count=1
module	the entire contents are ||| 29 4	count=1
function	the current insertion ||| marker insertion	count=1
function	the window [function] config ||| [function] frame	count=1
module	into list ||| sel	count=1
arg	standard [arg] ||| [arg]	count=2
module	reads your init file ||| 25 2	count=1
function	this command inserts the ||| format insert	count=1
function	to make a new ||| pop	count=1
function	is allowed ||| up	count=1
module	displaying several frames and ||| 28 23	count=1
module	buffers ||| 27 14	count=2
arg	this command fills ||| start end justify	count=1
arg	table and returns an ||| table	count=1
function	[function] the ||| delete to left [function]	count=1
function	its argument function ||| map char table	count=1
function	of the modifiers ||| modifiers	count=1
module	window ||| 20 7.13	count=1
module	minibuffer and returns it ||| 19	count=1
function	returns [function] all ||| terminal [function]	count=1
module	regardless of the ||| 1.1	count=1
function_arg	[function_1] [arg_2] ||| [function_1] spec [arg_2]	count=2
arg	width of ||| width pretend pixelwise	count=1
function	the matching ||| matching	count=1
function	command indents the current ||| indent	count=1
arg	inclusive and [arg] exclusive sideways ||| start [arg]	count=1
function	coding [function_2] ||| [function_2] [function_1]	count=24
arg	value2 otherwise ||| value2	count=1
function_arg	value [arg_2] ||| [arg_2] [function_1]	count=1
module	method [module] an input ||| [module]	count=1
function	coding systems that could ||| coding systems for	count=1
arg	charsets ||| charsets	count=1
function	function sets the parameter ||| set terminal	count=1
arg	to end according to ||| end	count=1
module	the current line which ||| 17.1	count=1
arg	directory names ||| directory	count=1
function	its argument function for ||| map char table	count=1
function	this sets the header ||| set	count=1
function	the initial frame ||| initial frame	count=2
arg	width ||| width pretend pixelwise	count=1
module	the ||| 36 8	count=1
function	new fontset ||| fontset from fontset spec	count=1
module	existing ||| 27	count=1
function_arg	[function_1] with prompt ||| [function_1] [arg_2]	count=5
function_arg	[function_1] reg ||| [arg_2] [function_1]	count=7
module	destructively and ||| 5	count=1
function	defines a help ||| make help	count=1
rep	a [function_arg_2] ||| [module_1] [function_arg_2]	count=6
function	and process ||| save list	count=1
function	comparing them [function_2] ||| [function_2] [function_1]	count=1
function	single space ||| space	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=8
module	a key sequence ||| 21 1	count=1
function	[function] bar ||| [function]	count=1
function	inserts contents ||| insert	count=1
arg	field on which collection ||| collection	count=1
function	as [function_2] ||| [function_1] [function_2]	count=5
function	signaled ||| debug	count=1
arg	and [arg_2] ||| [arg_1] [arg_2]	count=1
function	if variable either has ||| if set	count=1
function	frame’s ||| pop up	count=1
module	returns the ending ||| 20	count=1
function	point in time ||| time	count=1
arg	if obarray ||| name obarray	count=1
arg	return bitwise and ||| c	count=1
module	symbol automatically buffer-local so ||| 11 10.2	count=1
function	the buffer text with ||| buffer	count=1
module	vector containing all ||| 6	count=1
module	time emacs ||| 38	count=1
function_arg	register reg into ||| register reg beforep	count=1
function	string made up of ||| string	count=1
function	like ||| vector	count=1
module	during its next ||| 4.1	count=1
function_arg	[function_1] symbol ||| [arg_2] [function_1]	count=2
function	number ||| id	count=1
function	set ||| auto save list	count=1
function	display-start position ||| window start	count=1
function_arg	function sets [arg_2] ||| [function_1] char-table range [arg_2]	count=1
module	a key sequence a ||| 21 1	count=1
function	keep indicating ||| delay	count=1
module	[module] is read-only ||| [module]	count=3
module	character set nil ||| 32	count=1
module	this variable is ||| 5	count=2
arg	if alist has ||| alist	count=1
arg	pred and [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	the symbol [arg_2] ||| [arg_2] [function_1]	count=3
arg	end using a ||| end delete	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=1
arg	set [arg] into a ||| [arg]	count=1
function	to be fit ||| fit frame to	count=1
module	converts ||| 21	count=1
module	of the minibuffer a ||| 13	count=1
module	this function tests ||| 10 3	count=1
arg	or before for previous-button ||| count-current	count=1
function	of [function] ||| [function]	count=3
function	is greater ||| end	count=1
module	of [module] as string ||| [module] 3	count=1
function	dumps the [function] into an ||| dump [function]	count=1
arg	sequence ||| sequence separator	count=1
function	the fringe ||| fringe	count=2
function	epoch to ||| to time	count=1
function	newest backup versions to ||| kept versions	count=1
function	- 3 and add ||| s truncate	count=1
function	emacs reads ||| auto save	count=1
arg	to address ||| address	count=1
arg	call fn with ||| fn	count=1
module	[module_1] [module_2] converts ||| [module_1] [module_2]	count=2
function	truename of ||| file truename	count=1
function	the previous [function_2] ||| [function_2] [function_1]	count=6
function	emacs reads your ||| save list	count=1
module	sequence a string ||| 21 1	count=1
function	text conversion ||| change text conversion	count=2
arg	function as separate arguments ||| arguments	count=1
module	this function sets the ||| 34 3	count=1
function	new window for ||| up	count=1
function	the window selected ||| selected	count=1
rep	text in [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	use for encoding ||| 32 10.8	count=1
arg	ranges from [arg_2] ||| [arg_2] [arg_1]	count=2
function	non-nil ||| char	count=1
module	a ||| 36	count=1
arg	[arg_1] to type ||| [arg_2] [arg_1]	count=3
module	decoding ||| 32 10.8	count=2
function	of [function_2] ||| [function_2] [function_1]	count=2
function	another name ||| string	count=2
module	of this variable is ||| 30	count=1
arg	through the first ||| &rest more	count=1
function	if there is none ||| current	count=1
function	a new fontset according ||| create fontset from fontset spec	count=1
function	mode or permissions ||| file modes	count=2
function	[function] if ||| [function] p	count=2
function	[function_1] a description ||| [function_1] abbrev table [function_2]	count=1
function_arg	parameters of [arg_2] ||| [function_1] [arg_2]	count=4
function	frame configuration list that ||| current frame configuration	count=1
function	property list of the ||| plist	count=1
arg	point and suffix ||| suffix	count=1
function	key sequence as ||| read key sequence	count=2
module	first activated ||| 2.16	count=1
arg	filename but does so ||| filename wildcards	count=1
function	to ||| seconds to	count=1
arg	and returns it ||| prompt initial	count=1
arg	pattern ||| pattern frame	count=1
function	you have not already ||| save list file	count=1
arg	[arg_1] event after ||| [arg_1] [arg_2]	count=2
function	as ||| time	count=1
module	[module] the same ||| [module]	count=1
function	have not already set ||| save list file	count=1
module	file names that ||| 24	count=1
function_arg	list replaced [arg_2] ||| [function_1] [arg_2]	count=2
function	host name and ||| auto	count=1
arg	set [arg] into ||| [arg]	count=1
module	string ||| 38	count=1
function	longest common substring ||| try completion	count=1
arg	and suffix holds ||| suffix	count=1
arg	[arg] no ||| [arg]	count=3
function	creates and returns an ||| make overlay	count=1
function	new ||| new	count=2
function	even when it ||| even if	count=1
module	vector containing ||| 6 5	count=1
function	help ||| help	count=3
module	all spaces and ||| 31 7	count=2
function_arg	that [arg_2] ||| [arg_2] [function_1]	count=4
function	the default [function_2] ||| [function_2] [function_1]	count=9
function	[function_1] method name ||| [function_2] [function_1]	count=5
function	[function_1] display ||| [function_1] [function_2]	count=1
function	case ||| case syntax	count=1
arg	this function defines ||| docstring interactive type	count=1
function_arg	default [arg_2] ||| [function_1] p [arg_2]	count=1
arg	region between start and [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=5
module	variable is non-nil that ||| 27 14	count=1
module	a new vector ||| 5	count=1
arg	of ||| format-string	count=1
function	function ||| horizontal space	count=1
module	regular expression searched for ||| 33	count=1
module	of the ||| 32 4	count=1
arg	fn to [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	parent of [arg_2] ||| [arg_2] [function_1]	count=1
arg	docstring ||| docstring	count=2
function	[function_1] depth allowed ||| [function_1] lisp eval [function_2]	count=4
arg	n [arg_2] ||| [arg_1] [arg_2]	count=2
arg	with prompt and ||| prompt directory default	count=1
function	be fit by fit-frame-to-buffer ||| fit frame	count=1
module	point is ||| 31 1	count=2
module	function ||| 21 12	count=2
module	variable is non-nil ||| 14	count=2
arg	according ||| accept-defaults no-remap	count=1
function	by choosing an ||| buffer use some	count=1
function	for displaying in ||| windows	count=1
function	the syntax table ||| syntax	count=2
arg	command adjusts the ||| max-height min-height max-width min-width only	count=1
function_arg	history element [arg_2] ||| [function_1] [arg_2]	count=2
function	the position of the ||| position	count=1
function	[function_1] completes ||| [function_2] [function_1]	count=3
module	function ||| 31	count=3
function_arg	[function_1] value value ||| [arg_2] [function_1]	count=3
function_arg	property list [arg_2] ||| [arg_2] [function_1]	count=1
function	currently active minibuffer ||| active minibuffer	count=2
arg	first list ||| list	count=1
arg	add value to the ||| value	count=1
function	indices of ||| indices	count=2
module	if point ||| 1	count=2
arg	point and suffix holds ||| suffix	count=1
arg	device ||| device	count=1
module	is at ||| 1	count=2
function	is allowed to ||| up	count=1
function	the ending position of ||| event end	count=1
arg	list signature [arg_2] ||| [arg_2] [arg_1]	count=2
function	symbolic file ||| modes symbolic	count=1
function_arg	the insertion [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	of register [arg_2] ||| [arg_2] [function_1]	count=4
function	an alist of attributes ||| face all attributes	count=1
arg	[arg_1] value1 ||| [arg_1] [arg_2]	count=1
function_arg	file attributes [arg_2] ||| [arg_2] [function_1]	count=2
module	[module_1] buffer ||| [module_2] [module_1]	count=1
function	[function_1] the abbrev ||| [function_2] [function_1]	count=3
function	character ||| glyph char	count=1
module	converting ||| 12.2	count=1
arg	value2 otherwise if value1 ||| value2	count=1
function_arg	[function_1] named name ||| [function_1] [arg_2]	count=5
function	of this ||| mark	count=1
function	removed ||| remove	count=2
module	an existing ||| 27 14	count=1
arg	data item for the ||| item	count=1
function_arg	pid of [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] table in ||| [function_2] [function_1]	count=4
function	number in the ||| number at	count=2
function	years days hours ||| format seconds	count=1
function	attributes ||| attributes	count=6
module	frames and ||| 28 12	count=1
arg	function returns ||| window	count=13
function	returns a new ewoc ||| ewoc	count=1
function	[function_1] system ||| [function_2] [function_1]	count=7
function	contents of its buffer ||| buffer	count=1
function	current buffer [function_2] ||| [function_1] [function_2] p flag	count=1
module	a list ||| 6.4	count=1
function	window previously showing it ||| buffer in previous window	count=1
function	if variable either has ||| if	count=1
function	tree for ||| tree	count=1
module	this returns the ||| 20	count=1
function	if ||| auto	count=1
module	horizontal ||| 17.1	count=1
function	lisp expression from the ||| from	count=1
function	end [function] and ||| [function] end double	count=1
function	dired command ||| dired	count=1
module	new ||| 6	count=1
function	pad it with ||| pad	count=1
function	the host name ||| list file	count=1
function	minibuffer a ||| minibuffer	count=1
function	actual number ||| count	count=1
arg	has a non-nil ||| function	count=1
function	form [function_2] ||| [function_2] [function_1]	count=1
module	function tests for ||| 10 3	count=1
arg	and ranges from ||| front-advance rear-advance	count=1
function	executes the shell ||| call process shell command	count=1
function	the newline just ||| newline and	count=2
arg	end into ||| end no-line-break	count=2
function	leftmost column ||| window left column	count=1
function	mode ||| mode key binding	count=1
function	objects created ||| memory use counts	count=1
function	not already set ||| save list	count=1
function	the text of ||| window text	count=1
function	the actual [function_2] ||| [function_1] col [function_2]	count=3
function	matched by the ||| re	count=1
function	symbol as an abbrev ||| abbrev	count=1
module	window to make a ||| 14	count=1
function	the right or to ||| scroll right	count=1
arg	current-face ||| current-face when	count=1
function	this function calls ||| map	count=1
arg	command fills each ||| start end justify	count=1
function	next-single-char-property-change ||| single char property	count=1
module	a string ||| 21	count=2
arg	value value2 ||| value2	count=1
arg	option symbol [arg_2] ||| [arg_1] [arg_2]	count=3
function	trailing [function_2] ||| [function_1] [function_2]	count=1
arg	for regexp in string ||| regexp string &optional	count=1
module	function returns window’s ||| 27	count=1
function	this sets the :underline ||| set	count=1
function	inserts [function_2] ||| [function_1] abbrev table [function_2]	count=1
module	minibuffer ||| 19 10	count=4
module	not match [module_2] ||| [module_1] [module_2]	count=4
function	of the abbrev ||| abbrev	count=1
function	have not already ||| save	count=1
function	file in ||| file in	count=1
module	returns a new ||| 6 5	count=1
module	the contents of ||| 4	count=1
arg	[arg] holds ||| [arg] collection predicate	count=3
function	display ||| pop up	count=1
function_arg	[function_1] [arg_2] ||| [function_1] with preview [arg_2]	count=3
function	for ||| not	count=1
function	removes function ||| remove function	count=1
function	screen lines in ||| screen lines	count=1
function	it initializes auto-save-list-file-name if ||| save	count=1
arg	object rather than ||| object	count=1
function	beginning of [function_2] ||| [function_1] [function_2]	count=1
module	positions ||| 18	count=1
arg	bindat-raw according ||| bindat-raw bindat-idx	count=1
function	[function_1] help ||| [function_2] [function_1]	count=3
function_arg	[function_1] feature is ||| [arg_2] [function_1]	count=1
function	watch specified ||| watch	count=1
arg	this function defines ||| docstring	count=2
function	rendered using imagemagick regardless ||| imagemagick	count=1
function	the actual ||| posn actual	count=1
function	is non-nil that ||| up	count=1
function	a copy ||| overlay properties	count=1
function	node encapsulating ||| ewoc enter	count=2
function	recenter except ||| recenter	count=1
function	the right or ||| scroll right	count=1
arg	if object is a ||| object	count=1
function	this variable is non-nil ||| pop	count=2
module	file names that match ||| 24 9	count=1
function	reporting progress of ||| progress	count=1
arg	function selects frame raises ||| frame	count=1
module	the ending position of ||| 7.13	count=1
module	returns ||| 4	count=1
module	an ||| 14	count=1
module	falsehood of ||| 10	count=1
arg	preferably not ||| action norecord	count=1
function	[function_1] nil ||| [function_1] [function_2]	count=1
function	if non-nil edebug ||| test	count=1
function	configuration ||| configuration	count=4
function	moves the mouse ||| mouse	count=1
function	for each ||| map	count=1
module	this function returns ||| 37 12.12	count=1
function	init file it initializes ||| list file	count=1
arg	current buffer to specs ||| specs	count=1
function_arg	[function_1] name in ||| [arg_2] [function_1]	count=2
arg	regular expression matching ||| regexp	count=1
arg	pop-up menu ||| position menu	count=1
arg	name i ||| definitions	count=1
function	function calls ||| map	count=1
module	whether each argument is ||| 3	count=1
function	- 3 ||| truncate	count=1
function	than 0 ||| buffer end	count=1
function	that ||| provide	count=1
function	returns ||| current	count=1
function	falsehood ||| not	count=1
function	function signals the quit ||| quit	count=1
arg	end of s ||| s	count=3
function	titleized ||| s titleized	count=1
function	bool [function_2] ||| [function_2] [function_1]	count=1
module	to split an ||| 27	count=1
function	[function] is ||| minibuffer complete [function]	count=1
arg	list signature ||| signature	count=1
function	the total ||| total	count=1
module	moves point ||| 29	count=1
function_arg	conversion [arg_2] ||| [arg_2] [function_1]	count=1
function	the current line ||| current	count=1
arg	field on which collection ||| collection predicate	count=1
module	function returns a new ||| 5	count=1
function	width in columns of ||| char width	count=1
function_arg	symbol new-alias ||| defvaralias new-alias	count=1
function	there is no match ||| match	count=1
arg	from parser state state ||| state	count=1
arg	function finds and opens ||| nosuffix must-suffix	count=1
arg	from to ||| from &optional to	count=1
arg	beg [arg_2] ||| [arg_1] [arg_2]	count=1
function	list of buffer ||| buffer	count=1
arg	argument arg ||| arg	count=1
module	make a new ||| 14	count=1
function	a window at ||| at	count=1
arg	value ||| function	count=1
function	in ||| to	count=2
function_arg	[function_1] [arg_2] list ), in no ||| [function_1] [arg_2] list	count=4
function	[function_1] fringe ||| [function_1] [function_2]	count=3
function	list buffer ||| list	count=1
function	uppercamelcase ||| upper camel case	count=2
module	command [module_2] ||| [module_1] [module_2]	count=1
function	process process ||| signal	count=1
function	function returns the user ||| user	count=1
arg	if [arg] have equal ||| [arg]	count=1
function	buffer is on ||| on	count=1
module	entire contents ||| 29	count=1
function	using text ||| text	count=2
function	returns the handler ||| handler	count=1
function	the host name and ||| save list file	count=1
arg	this function returns x ||| x	count=1
function	file name to ||| save file name	count=1
function	consecutive button presses that ||| click count	count=1
arg	n times with ||| n	count=1
function_arg	reverse [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] on frame ||| [arg_2] [arg_1]	count=1
function	of the first nonblank ||| current	count=1
module	bool ||| 6 7	count=2
function	making new frames ||| pop up frames	count=1
module	the ||| 20	count=1
module	list of individual events ||| 20	count=1
function	split an existing ||| pop up	count=1
function_arg	completions of [arg_2] ||| [function_1] [arg_2]	count=1
function	that are [function_2] ||| [function_2] [function_1]	count=1
arg	providing completion ||| predicate require-match initial history default inherit-input-method	count=1
arg	list satisfying the ||| pred list	count=2
module	emacs reads your init ||| 25	count=1
function	is non-nil the prefixes ||| prefixes	count=1
module	functions and return ||| dash	count=1
module	contents ||| 29	count=1
arg	dirname to ||| dirname	count=1
function	the minibuffer raises the ||| raise	count=1
function	abbrev [function] containing the ||| [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] all value [arg_2]	count=3
function	[function_1] minor modes ||| [function_2] [function_1]	count=4
arg	returns locale data item ||| item	count=1
function	string of syntax ||| syntax forward	count=1
function	the horizontal position ||| current	count=1
arg	of fun to init ||| fun init n	count=1
function	moves point [function_2] ||| [function_1] [function_2]	count=7
function	and if no change ||| change	count=1
function	than ||| buffer end	count=1
module	number ||| 29 2.4	count=1
module	of ||| 19	count=2
function_arg	current buffer [arg_2] ||| [arg_2] [function_1]	count=1
arg	the property list plist ||| plist property	count=2
function	than ||| than	count=2
function_arg	using text [arg_2] ||| [function_1] button label [arg_2]	count=1
arg	from-buffer-or-name into the ||| from-buffer-or-name start	count=1
function_arg	conversion of [arg_2] ||| [arg_2] [function_1]	count=1
function	initializes auto-save-list-file-name if you ||| auto	count=1
function_arg	[function_1] fname that ||| [arg_2] [function_1]	count=5
function	the site-customization file to ||| site run file	count=1
module	this function returns ||| 5	count=2
module	validity ||| 32 10.3	count=1
function	auto-save ||| auto save	count=1
module	of ||| 10 3	count=2
function	returns the remapping ||| remapping	count=1
arg	of window [arg_2] ||| [arg_1] [arg_2]	count=1
rep	window [function_arg_2] ||| [module_1] posn [function_arg_2]	count=1
module	buffer ||| 31	count=1
function	function for ||| map char table	count=1
function	0 ||| end	count=1
function_arg	reverse of [arg_2] ||| [function_1] [arg_2]	count=1
function	you have not ||| save list	count=1
function_arg	object [arg_2] ||| [arg_2] [function_1]	count=3
module	the ||| 3	count=1
function	specifies how many seconds ||| seconds	count=1
function	function returns a new ||| vconcat	count=1
arg	providing completion ||| collection predicate require-match initial history default	count=1
arg	and end of s ||| s	count=1
function	minor modes ||| current minor	count=1
function	of bool vectors a ||| bool	count=2
function	returns window’s value ||| window	count=1
function	the startup echo area ||| inhibit startup echo area	count=1
function	function converts a symbolic ||| modes symbolic	count=1
function_arg	[function_1] by consing ||| [arg_2] [function_1]	count=1
arg	[arg_1] to inverse-video-p ||| [arg_1] [arg_2]	count=1
function	horizontally ||| horizontally	count=1
arg	on which collection will ||| collection	count=1
function	beginning of the buffer ||| bobp	count=1
module	days ||| 38 7	count=2
module	a string ||| 1	count=2
module	this function sets ||| 21 12	count=1
module	this ||| 24 7	count=6
function	window below the selected ||| display buffer below selected	count=1
function	emacs reads your ||| auto	count=1
module	adaptive ||| 31 13	count=1
function	the syntax table of ||| syntax	count=1
arg	within ||| window partially	count=1
module	by ||| 27	count=1
arg	obarray ||| obarray	count=1
module	scrolling ||| 27	count=1
function	non-nil ||| save list file	count=1
function	display buffer by choosing ||| buffer use some	count=1
function	each ||| char table	count=2
function	prefix ||| prefix	count=3
function	as dedicated ||| dedicated	count=1
function	0 point-min ||| buffer end	count=1
arg	in object if no ||| prop object limit	count=1
function	[function_1] selected ||| [function_1] [function_2]	count=3
arg	returns ||| prompt	count=1
function_arg	returns the position closest [function_1] [arg_2] ||| 31 19.9 constrain [function_1] field [arg_2]	count=4
function	window for displaying ||| pop up windows	count=1
function	a help ||| make help screen	count=1
function	name ||| file	count=1
function	the beginning of the ||| beginning	count=1
function	function returns the ||| window at	count=1
function	the left or ||| scroll left	count=1
function	function returns the file ||| auto save file	count=1
function	tab in most ||| tab	count=1
function	the same field ||| field	count=1
function	local [function] or ||| current local [function]	count=1
arg	text in ||| start	count=1
module	names that match it ||| 24	count=1
module	list ||| 5	count=2
arg	and [arg] in ||| [arg]	count=1
function	split the ||| split	count=1
module	[module_1] is ||| [module_1] [module_2]	count=5
function	function sets the ||| set process	count=3
function	translation [function] rather ||| [function]	count=1
arg	fn ||| fn &optional	count=1
function	returns the remapping ||| command remapping	count=1
module	file it initializes auto-save-list-file-name ||| 25	count=1
function_arg	name prompting [arg_2] ||| [arg_2] [function_1]	count=2
function	text properties from ||| properties	count=1
function	this returns ||| float	count=1
module	programs and the ||| 7	count=1
arg	symbol’s property list ||| symbol property	count=2
function	after emacs reads ||| list file	count=1
arg	filename and returns ||| filename	count=1
function_arg	flag [arg_2] ||| [function_1] [arg_2]	count=1
function	this prefix adding the ||| save list file prefix	count=1
function	at the ||| buffer at	count=1
arg	this function ||| format-string	count=1
function	make backup ||| make backup	count=1
function	in bool [function_2] ||| [function_2] [function_1]	count=1
module	this function sends a ||| 36	count=1
function	to tab in ||| indent for tab	count=1
arg	(func nth ||| func	count=1
function	non-nil based on this ||| auto save	count=1
function	number of objects created ||| memory use counts	count=1
arg	and returns it ||| prompt initial history	count=1
function	file ||| save	count=1
arg	volume and [arg_2] ||| [arg_1] [arg_2]	count=1
module	this returns ||| 7.13	count=1
module	returns the [module] of ||| [module]	count=1
function	split an existing window ||| pop up	count=1
module	argument ||| 6 6	count=2
module	this returns ||| 20	count=1
arg	function so as to ||| function	count=1
module	variable’s value ||| 28 3.2	count=1
function	signaled and not ||| debug	count=1
arg	function [arg_2] ||| [arg_2] [arg_1]	count=12
module	is ||| 14	count=3
module	this returns the ending ||| 20 7.13	count=1
function	image ||| find image	count=1
function	flag of ||| flag	count=1
arg	of marker marker to ||| marker	count=1
function_arg	acl for [arg_2] ||| [arg_2] [function_1]	count=1
function	you have not already ||| file	count=1
function	a ||| notifications	count=1
module	[module] to ||| [module] 11	count=2
function	height of ||| height	count=1
function	values for print-length and ||| length	count=1
module	has a non-nil value ||| 6	count=2
function	minus its ||| name sans	count=1
arg	the elements of sequences ||| sequences	count=1
module	than 0 point-min otherwise ||| 1	count=1
function	of the minibuffer raises ||| raise	count=1
function	day number within the ||| to day in	count=1
function	the parent of ||| char table parent	count=1
function	based ||| auto save	count=1
function	destroy the [function_2] ||| [function_2] [function_1]	count=4
function	parameters of ||| parameters	count=1
arg	returns it ||| prompt initial history default inherit-input-method	count=1
function	return the height ||| height	count=1
function	[function_1] mode is ||| [function_1] [function_2]	count=2
function	is nil switch-to-buffer displays ||| preserve window	count=1
function	for each element of ||| map	count=1
function	of justification ||| justification	count=1
function	like assoc ||| assoc	count=1
function	current display table in ||| current display table	count=1
function	inserts ||| insert buffer substring	count=1
function	current line which is ||| current	count=1
module	function processes ||| 36	count=1
arg	for current-face and also ||| current-face when	count=1
function	display-buffer may display ||| pop	count=1
function	characters whose syntax classes ||| skip syntax	count=1
arg	face ||| face	count=11
function_arg	[function_1] [arg_2] ||| [function_1] vector [arg_2]	count=5
arg	most general way to ||| prompt initial keymap read history default inherit-input-method	count=1
function	two ||| compare	count=1
function	already set it ||| list	count=1
function	buffer’s ||| buffer	count=1
module	id ||| 25 2	count=2
arg	for command ||| command	count=1
function_arg	[function_1] properties ||| [function_1] button beg end [arg_2]	count=4
function	a window configuration ||| window configuration	count=2
function	calls its argument ||| char	count=1
module	set it non-nil ||| 25	count=1
function	[function_1] the tool ||| [function_2] [function_1]	count=2
arg	pred and a list ||| pred list	count=1
module	of the first ||| 4	count=1
function	is signaled and not ||| debug on	count=1
function	zip ||| zip with	count=1
function_arg	sign of x2 ||| copysign x1 x2	count=1
arg	the proper offset to ||| offset	count=1
function	the definition of ||| lookup key	count=1
function	a file in directory ||| file in directory	count=1
arg	string in ||| string collection predicate	count=1
function	the current buffer ||| set buffer	count=3
module	of the [module] in ||| [module]	count=1
arg	nil if obarray has ||| obarray	count=1
module	that ||| 7	count=2
function	position of the ||| position	count=1
function	given registry is specified ||| registry alternatives	count=1
arg	data putting it respectively ||| ewoc data	count=1
function	of this variable ||| pop up	count=2
function	existing ||| up	count=1
module	as [module] properties and ||| [module] 19.3	count=1
module	but [module] back ||| [module]	count=1
function_arg	[function_1] object ||| [function_1] [arg_2]	count=1
function	is the ||| ring	count=1
function	the beginning [function_2] ||| [function_2] [function_1]	count=6
function	a mouse ||| mouse	count=1
arg	and ranges from ||| buffer front-advance rear-advance	count=1
function_arg	least fixpoint [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] file ||| [function_2] [function_1]	count=25
module	to split an existing ||| 27 14	count=1
arg	bold-p is ||| bold-p	count=1
function	[function_1] files by ||| [function_1] [function_2]	count=3
function	matches the font ||| font	count=1
module	a [module] describing the ||| [module] 8	count=1
function	of the ||| of buffer	count=1
function	or a marker nil ||| or marker	count=1
function	the previous sibling ||| window prev sibling	count=2
function	consecutive button presses that ||| click	count=1
arg	the symbols modes ||| modes	count=1
function	beginning ||| bobp	count=1
function	hash [function_2] ||| [function_2] [function_1]	count=1
arg	visiting filename ||| filename	count=1
module	of elements ||| 6 7	count=1
function_arg	[function_1] [arg_2] ||| [function_1] pred [arg_2]	count=12
function	of attributes ||| file attributes	count=1
module	function sets ||| 12	count=1
function	replaces the buffer text ||| revert buffer	count=1
function	that the property value ||| property	count=1
function	the documentation string ||| face documentation	count=1
module	function sends a ||| 8	count=1
arg	end in ||| end	count=2
module	display-buffer may display buffers ||| 27	count=1
function	a list of ||| list	count=7
function	generic mode command named ||| generic	count=1
function	[function_1] whitespace ||| [function_1] [function_2]	count=2
function	a frame configuration ||| frame configuration	count=1
function	empty category [function_2] ||| [function_1] [function_2]	count=1
module	to use for decoding ||| 32 10.8	count=1
function	this command displays a ||| describe	count=1
arg	in object rather ||| prop object	count=1
function	stores ||| put char code	count=1
arg	the mouse like set-mouse-position [arg_1] [arg_2] units of pixels rather ||| [arg_1] [arg_2]	count=1
arg	old-pos ||| old-pos	count=1
function	otherwise ||| markerp	count=1
arg	of fn ||| fn &optional	count=1
module	the current active keymaps ||| 21	count=1
module	0 ||| 29 1	count=2
arg	string and then ||| string	count=1
function	buffer to the value ||| char	count=1
function	function expands the wildcard ||| file expand wildcards	count=1
function	position ||| position	count=2
arg	count times before point ||| count	count=1
function	a ||| minibuffer	count=1
module	non-nil edebug ||| 17	count=1
arg	list that ||| list	count=1
function	the previous or next ||| prev	count=1
arg	[arg] any time ||| [arg]	count=1
module	need not match a ||| 33 1	count=2
module	text ||| 31 8.3	count=2
arg	the value ||| value	count=3
function	of mark-ring ||| ring	count=1
arg	sets the binding for ||| binding	count=1
module	match data ||| 33	count=1
arg	within seconds seconds ||| seconds	count=1
arg	and r a ||| r	count=1
module	of ||| 5	count=1
arg	a color name ||| color frame	count=1
function_arg	[function_1] marker ||| [arg_2] [function_1]	count=5
function	an existing ||| pop	count=1
arg	fun to [arg_2] ||| [arg_1] [arg_2]	count=1
function	of remote ||| remote file name inhibit	count=1
function	executes the shell ||| process shell command	count=1
function	current display-width of ||| width	count=1
function	be fit by ||| fit frame	count=1
arg	[arg] units of ||| frame x [arg]	count=1
function_arg	symbol [arg_2] ||| [function_1] symbol element [arg_2]	count=1
function	as ||| parse	count=1
module	function returns a new ||| 6	count=1
function	[function_1] configuration ||| [function_2] [function_1]	count=10
module	are ||| 29	count=1
function	overlay that [function_2] ||| [function_2] [function_1]	count=1
module	make a new ||| 27	count=1
function	a regular expression whose ||| regexp quote	count=1
function	element ||| char	count=1
arg	prompt ||| prompt directory	count=1
function	string constant into ||| kbd	count=1
module	name of an existing ||| 24 6.2	count=1
arg	[arg_1] flag ||| [arg_2] [arg_1]	count=3
function	closes ||| close	count=1
arg	in keymap [arg_2] ||| [arg_2] [arg_1]	count=2
function	indices of all ||| indices	count=2
arg	or integers that ||| integers	count=1
function_arg	characters in [arg_2] ||| [arg_2] [function_1]	count=1
arg	that ||| function	count=1
function	moves point [function_2] ||| [function_2] [function_1]	count=7
function	coding system ||| set terminal coding system	count=1
function	reads ||| auto save list file	count=1
function	file it initializes ||| auto	count=1
function	next-single-property-change except that it ||| next single char property	count=1
function	list replaced ||| update at	count=1
function	scroll bars specified for ||| window scroll bars	count=1
function	the system ||| system	count=1
function	sequence [function_2] ||| [function_1] [function_2]	count=2
function	function appends the contents ||| append to file	count=1
function	the definition of ||| lookup	count=1
function	that has a ||| table	count=1
arg	face to [arg_2] ||| [arg_2] [arg_1]	count=3
function	you ||| save	count=1
function	of elements in ||| length	count=1
function_arg	watch [arg_2] ||| [function_1] [arg_2]	count=1
function	input method ||| input method	count=4
function	[function] and ||| [function] end double	count=2
arg	face to inverse-video-p ||| face inverse-video-p	count=1
function	pixel edge of window ||| pixel	count=1
function	floating ||| float	count=1
function	returns the property ||| symbol plist	count=1
function	[function_1] echo area ||| [function_1] [function_2]	count=4
function	the actual number ||| count	count=1
module	all spaces [module_2] ||| [module_1] [module_2]	count=2
function	argument function for ||| map char	count=1
function	means ||| pop up	count=1
function_arg	last [arg_2] ||| [arg_2] [function_1]	count=6
arg	extra slot slot ||| slot	count=1
function	retrieves a resource ||| get resource	count=1
function	the coding ||| coding	count=4
module	all expressions ||| 17 2.16	count=1
function	string of ||| format	count=1
function	just one [function] does not ||| [function]	count=1
arg	tree ||| tree	count=3
arg	[arg_1] properties props ||| expansion [arg_1] [arg_2]	count=3
module	returns the ||| 31 17.1	count=1
function	is allowed ||| pop up	count=1
module	a string of years ||| 38	count=1
module	[module_1] regular expression ||| [module_1] [module_2]	count=3
rep	returns [function_arg_2] ||| [module_1] [function_arg_2]	count=11
arg	[arg_1] to flag ||| [arg_1] [arg_2]	count=3
function	obsolete indicating that it ||| obsolete	count=1
function	it specifies the initial ||| initial	count=1
function	and right margins of ||| margins	count=1
function	trailing ||| trailing	count=1
module	this ||| 2	count=1
function	frame to ||| frame to buffer	count=2
function	edge ||| trailing edge	count=2
arg	the list x ||| x	count=1
function	as an alias for ||| face alias	count=1
function	a new fontset according ||| from fontset spec	count=1
function_arg	[function_1] of list ||| [arg_2] [function_1]	count=6
function	keyboard input from the ||| input	count=1
function	name of a directory ||| name directory	count=1
module	used for displaying frame ||| 37	count=1
module	calls its argument function ||| 6 6	count=1
function	color ||| display color	count=1
module	function returns ||| 19	count=1
module	to make ||| 14	count=1
function_arg	buffer to newname ||| buffer newname unique	count=2
function	selinux ||| selinux	count=2
function	string in the usual ||| ip to string	count=1
function	function parses a sexp ||| sexp	count=1
module	a non-nil value ||| 6	count=2
function	this is like next-single-property-change ||| next single char property	count=1
function	this ||| save list	count=1
arg	this function defines the ||| docstring	count=2
module	function returns a ||| 2	count=1
function	point-min ||| end	count=1
module	function returns a list ||| 24 6.4	count=1
function	[function_1] to the ||| [function_1] [function_2]	count=1
function	the left ||| scroll left	count=1
function	a generic mode command ||| define generic	count=1
function	if you ||| list	count=1
arg	locale data item for ||| item	count=1
function	controls which ||| allowed	count=1
function	the beginning of the ||| beginning of	count=1
arg	from filename ||| filename	count=1
function	[function_1] sibling of ||| [function_2] [function_1]	count=4
function	[function_1] deleted ||| [function_2] [function_1]	count=1
arg	string as standard input ||| process string	count=1
function	returns the file ||| file	count=1
module	as the beginning of ||| 4	count=1
arg	buffer-or-name with ||| buffer-or-name	count=1
arg	eval-region but ||| buffer-or-name stream filename unibyte print	count=1
function	file ||| auto save	count=1
arg	[arg_1] end according ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] x2 to ||| [arg_2] [function_1]	count=3
arg	[arg_1] end adding ||| [arg_1] [arg_2] face	count=1
function	of version ||| version	count=1
arg	at position pos in ||| pos	count=1
function	on this prefix adding ||| prefix	count=1
function	[function_1] an indirect ||| [function_1] [function_2]	count=2
arg	eval-region but the ||| buffer-or-name stream filename unibyte	count=1
function	a ||| seconds	count=1
function_arg	[function_1] to value ||| [function_1] start end prop [arg_2]	count=1
function	function calls its ||| char	count=1
function	versions to keep ||| versions	count=1
arg	value value in ||| value	count=2
arg	[arg_1] alist ||| [arg_1] [arg_2]	count=2
function	the minibuffer text ||| minibuffer	count=1
arg	bind ||| &rest else	count=1
function	charset of highest priority ||| charset	count=1
function	frame number for image ||| frame	count=1
arg	file filename into ||| filename visit beg end replace	count=1
function	function calls its argument ||| char table	count=1
module	auto-save-list-file-name ||| 2	count=1
function	inserts the contents of ||| insert	count=1
function	prompting for a package ||| package	count=1
function	split s ||| split	count=1
module	it ||| 25 2	count=4
arg	[arg] in the ||| [arg]	count=1
module	return a new ||| dash	count=5
module	two ||| 27 24	count=1
module	of this ||| 14	count=2
function	to buffer-invisibility-spec ||| to invisibility spec	count=1
function	a function for ||| function	count=1
arg	buffer-or-name in the cyclic ||| buffer-or-name	count=1
function	system which uses ||| system	count=1
function_arg	type [arg_2] ||| [function_1] [arg_2]	count=1
module	[module] multibyte string ||| [module]	count=3
module	of all ||| 2.16	count=1
module	function returns a ||| 32 3	count=1
function	to the end ||| end	count=2
module	data ||| 33	count=1
function	function ||| map	count=2
module	a string constant into ||| 21	count=1
module	minibuffer ||| 19 2	count=1
function	existing menu ||| from menu	count=1
module	text starting after ||| 31	count=1
function_arg	the reverse [arg_2] ||| [function_1] [arg_2]	count=1
function	the host name ||| auto	count=1
arg	command selects a buffer ||| wildcards	count=1
function	initializes auto-save-list-file-name if ||| file	count=1
function	property list of the ||| charset plist	count=1
arg	pos instead ||| pos	count=1
arg	listname ||| listname	count=1
function	function for each ||| map char	count=1
module	well as [module] properties and ||| [module] 19.3	count=1
function	by [function] ||| [function] auto hide	count=1
function	permissions ||| file modes	count=2
arg	regular expression ||| regexp limit	count=1
arg	elements of args ||| &rest args	count=1
module	position ||| 20 7.13	count=2
function	this returns the query ||| query on exit	count=1
function	bool vectors ||| bool vector union	count=1
module	function returns the ||| 31 17.1	count=1
arg	elements of sequences ||| sequences	count=1
function	buffer without disrupting the ||| bidi string mark	count=1
arg	[arg_1] alist ||| [arg_2] [arg_1]	count=2
arg	fringe widths ||| left right outside-margins	count=1
function	string of syntax ||| skip syntax	count=1
module	the horizontal ||| 17.1	count=1
function	is a minibuffer window ||| minibuffer	count=1
module	current buffer ||| 29	count=1
function	the width in pixels ||| width	count=1
function	for the tabulated list ||| tabulated list init	count=1
module	inserts ||| 37 18.3	count=1
function	all ||| edebug	count=1
function	margin indentation ||| margin	count=1
function	making ||| up	count=1
function	initializes auto-save-list-file-name if ||| list file	count=1
function	copy ||| overlay properties	count=1
module	this variable is the ||| 30 7	count=1
function	by choosing an ||| display buffer use some	count=1
function	current insertion ||| marker insertion	count=1
arg	name in ||| name	count=1
function	and process ||| file	count=1
function	calls ||| table	count=1
arg	by delta lines ||| delta horizontal pixelwise	count=1
module	if you have not ||| 25 2	count=1
arg	file filename into ||| filename visit beg end	count=1
function	for bitmap files for ||| bitmap file	count=1
function	it non-nil ||| save list	count=1
function	for ||| for	count=1
function_arg	or permissions [arg_2] ||| [arg_2] [function_1]	count=3
arg	repetitions ||| character	count=1
module	of file file converting ||| 24 12.2	count=1
function	unregisters it ||| jit lock unregister	count=1
function	[function] of ||| [function] as paragraph	count=1
arg	several prec2 tables ||| tables	count=1
module	string representing the ||| 8	count=1
function_arg	leftmost child [arg_2] ||| [arg_2] [function_1]	count=4
function	have not ||| save list file	count=1
function	[function_1] permissions of ||| [function_2] [function_1]	count=5
function_arg	attributes [arg_2] ||| [arg_2] [function_1]	count=5
module	activations of the minibuffer ||| 19 13	count=1
module	expressions ||| 17 2.16	count=2
function	[function_1] abbrev ||| [function_2] [function_1]	count=5
module	after emacs reads ||| 2	count=1
function	text between ||| text	count=1
module	the minibuffer a ||| 13	count=1
module	not match ||| 33	count=2
module	this function returns ||| 19 13	count=1
function	compare two ||| compare	count=1
function	before point a description ||| description	count=1
arg	frame ||| frame arguments	count=1
function	function returns window’s ||| window	count=1
function	[function_1] signaled ||| [function_2] [function_1]	count=8
function	[function] spaces if ||| [function]	count=2
arg	args into the current ||| args	count=1
module	keymaps ||| 21	count=5
function	inserts ||| insert	count=10
function	this function ||| seconds	count=1
module	in windows [module] the ||| [module]	count=1
module	has ||| 6 6	count=2
function	[function_1] systems that ||| [function_1] [function_2]	count=12
module	initializes auto-save-list-file-name ||| 25 2	count=1
function	based on this ||| file	count=1
arg	fn to [arg_2] ||| [arg_2] [arg_1]	count=1
function	trigger another garbage collection ||| gc cons threshold	count=1
arg	in ||| buffer	count=1
arg	[arg_1] value1 ||| [arg_2] [arg_1]	count=1
arg	[arg_1] form ||| [arg_2] [arg_1]	count=4
function	of syntax ||| syntax forward	count=1
module	returns ||| 25	count=1
function	but ||| and	count=1
arg	value ||| window	count=1
function	fringe ||| fringe bitmap face	count=1
arg	exp ||| exp	count=1
module	this function sends ||| 36 8	count=1
module	this variable is non-nil ||| 14	count=2
function	use the font matching ||| font	count=1
function	[function_1] execution ||| [function_2] [function_1]	count=8
module	window’s value ||| 27	count=1
arg	resizes [arg_2] ||| [arg_2] height [arg_1]	count=3
function	least recently-used ||| display buffer pop up	count=1
arg	args ||| &rest args	count=1
function	such [function] it returns ||| [function] p	count=1
arg	returns the resulting sequence ||| sequence	count=1
function	by the current buffer ||| buffer	count=1
module	the beginning of an ||| 4	count=1
function	this [function] ||| [function]	count=3
arg	symbol ||| symbol where	count=1
function	initializes auto-save-list-file-name if ||| save	count=1
arg	old-char with ||| old-char	count=1
arg	[arg_1] directory names ||| [arg_2] [arg_1]	count=2
module	the minibuffer ||| 19 13	count=1
arg	of years days hours ||| format-string	count=1
function	default file name for ||| abbrev file name	count=1
function	process ||| process mark	count=1
function_arg	[function_1] object ||| [arg_2] [function_1]	count=1
function	in time ||| time	count=1
arg	and b ||| b	count=1
function	the :stipple ||| stipple	count=1
function	[function_1] mode is ||| [function_2] [function_1]	count=2
function	contents of extra slot ||| extra slot	count=1
arg	filename1 ||| filename1	count=1
function	marks window as dedicated ||| set window dedicated p	count=1
arg	by menu ||| menu	count=1
function	the header line ||| header	count=1
arg	n is negative ||| n wrap display-message	count=2
arg	the window window ||| window string	count=1
function	right or to the ||| scroll right	count=1
module	init file it initializes ||| 25 2	count=1
arg	in object rather ||| pos prop object limit	count=1
function	of characters ||| chars	count=1
function_arg	matched by [arg_2] ||| [function_1] search forward [arg_2] limit noerror repeat	count=1
function	backups by copying ||| backup by copying	count=4
arg	window’s value ||| window	count=1
module	for the ||| 10	count=1
arg	if flag ||| window flag	count=1
function	startup echo [function_2] ||| [function_1] [function_2]	count=2
function	from [function] map ||| [function] unset key	count=1
function	[function_1] a backup ||| [function_2] file [function_1]	count=3
function	[function_1] group for ||| [function_1] [function_2]	count=4
function	dimensions of graphical displays ||| display mm dimensions alist	count=1
arg	font-spec for the ||| font-spec	count=1
function	by making new frames ||| up frames	count=1
function	menu ||| add item from menu	count=1
arg	to end [arg_2] ||| [arg_1] [arg_2]	count=1
function	new fontset according ||| fontset spec	count=1
arg	name char [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	name with [arg_2] ||| [arg_2] [function_1]	count=2
function	next-single-property-change except that ||| next single char	count=1
module	the same abbrevs ||| 35	count=1
arg	for hash table table ||| table	count=1
arg	rotate list ||| list	count=1
module	this function tests for ||| 10	count=1
function	a new ewoc ||| ewoc	count=1
module	this function returns ||| 12	count=2
function	display ||| up	count=1
function	edebug binds debug-on-error ||| edebug	count=1
arg	the frame frame ||| frame	count=1
arg	returns [arg_2] ||| [arg_1] [arg_2]	count=1
arg	fun on [arg_2] ||| [arg_1] [arg_2]	count=1
function	containing all the ||| vconcat	count=1
module	the ||| 31 1	count=3
arg	id pid ||| pid	count=1
module	this function converts ||| 4 8 upcase	count=1
function_arg	[function_1] according ||| [function_1] [arg_2]	count=3
function	function returns the selinux ||| selinux	count=1
module	horizontal ||| 31 17.1	count=2
function	debug-on-exit flag ||| backtrace debug	count=1
function	the editable contents of ||| minibuffer contents	count=1
arg	years days hours etc ||| format-string	count=1
function	it non-nil ||| file	count=1
module	which is ||| 31	count=1
arg	the cyclic ||| minibuf all-frames default	count=1
function	[function_1] [function_2] ||| [function_1] complete [function_2]	count=3
function	indices of all ||| elem indices	count=1
function	a list of color ||| color	count=1
function	non-nil ||| pop up	count=2
function	your init file ||| save list file	count=1
module	that means display-buffer may ||| 14	count=1
function	based on this ||| auto save	count=1
function	not already ||| save list file	count=1
function_arg	[function_1] [arg_2] ||| 31 7 just one [function_1] [arg_2]	count=14
module	of the ||| 8	count=1
function	or into the scroll ||| scroll	count=1
function	day number within ||| to day in	count=1
arg	[arg_1] char-table ||| [arg_2] [arg_1]	count=4
function	as [function_2] ||| [function_2] [function_1]	count=5
function	as xml rather ||| parse xml	count=1
module	the entire contents ||| 4	count=1
arg	if flag is non-nil ||| window flag	count=1
arg	underlying value value2 ||| value2	count=1
module	though [module] sorted list ||| [module] 6.3	count=1
function	current global ||| current global	count=1
function_arg	[function_1] [arg_2] ||| [function_1] face attribute [arg_2]	count=1
function	display-buffer is ||| up	count=1
function	as xml rather than ||| parse xml region	count=1
module	files created by ||| 24	count=1
function	the left margin ||| left margin	count=2
arg	prop ||| pos prop object limit	count=1
function	fontset according ||| create fontset from fontset	count=1
function	height and ||| height	count=1
module	this function ||| 10 3	count=1
function	argument ||| map char table	count=2
function	auto-save-list-file-name if ||| save list	count=1
function	area message ||| area message	count=2
arg	current active keymaps ||| position keymaps	count=1
function	[function_1] element that ||| [function_2] [function_1]	count=2
arg	unary predicates preds and ||| &rest preds	count=1
function_arg	area recorded [arg_2] ||| [arg_2] [function_1]	count=1
function	overlays that ||| overlays	count=1
function	a frame [function_2] ||| [function_2] [function_1]	count=7
function	an alist of attributes ||| attributes	count=2
arg	reg into ||| reg beforep	count=1
module	the host ||| 25	count=1
arg	single-character answer in ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
arg	like read-key-sequence except that ||| prompt continue-echo dont-downcase-last switch-frame-ok command-loop	count=1
function	function sets ||| set frame width	count=1
function	for the text ||| set text properties	count=1
arg	string or nil ||| string	count=1
module	your init file ||| 2	count=1
module	of ||| 31	count=4
function	host name and process ||| save list	count=1
module	of the first match ||| 33 4	count=1
arg	named dirname ||| dirname	count=1
module	it non-nil based ||| 25	count=1
module	individual events [module_2] ||| [module_1] [module_2]	count=2
arg	object1 and [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	this [function_1] [arg_2] stored in ||| 12 10.1 [function_1] place [arg_2]	count=3
function_arg	[function_1] width of ||| [function_1] frame [arg_2]	count=2
function	function reads ||| read	count=3
function	[function_1] backup files ||| [function_1] [function_2]	count=3
function	the left or to ||| scroll left	count=1
arg	message as the message ||| message level	count=1
module	if you ||| 2	count=1
function	[function_1] [function_2] how to proceed after ||| [function_1] [function_2] about supersession threat	count=6
function	copy ||| properties	count=1
arg	propname [arg_2] ||| [arg_2] [arg_1]	count=2
module	in the echo area ||| 4.1	count=1
function	to ask a ||| ask	count=1
function	returns a buffer named ||| get buffer create	count=1
arg	[arg] grouped into ||| n [arg]	count=5
arg	obarray has no symbol ||| obarray	count=1
arg	[arg_1] string ||| [arg_2] [arg_1]	count=2
arg	or buffer object ||| props object	count=1
rep	[module_1] list with ||| [module_1] [function_arg_2]	count=2
function_arg	[function_1] new-alias as ||| [function_1] [arg_2]	count=2
arg	of face [arg_2] ||| [arg_1] [arg_2]	count=1
arg	this function finds ||| missing-ok nomessage nosuffix	count=1
module	existing window to make ||| 27	count=1
function_arg	register [arg_2] ||| [function_1] [arg_2]	count=5
function	inserts a portion ||| insert buffer	count=1
arg	from the named function ||| function	count=1
arg	spec using [arg] which should ||| [arg]	count=1
module	this function converts ||| 4 8 downcase	count=1
function	the ||| end	count=1
arg	according to ||| no-remap position	count=1
module	of this variable ||| 14	count=2
function	minibuffer evaluates it ||| eval minibuffer	count=2
function	your init file ||| auto	count=1
function_arg	[function_1] sig and ||| [function_1] [arg_2]	count=3
module	indents ||| 31 17.4	count=1
module	this returns ||| 3	count=1
function	display-width of the ||| width	count=1
arg	regexp ||| regexp limit	count=1
function	window’s bottom edge ||| trailing edge	count=1
module	this function returns ||| 30 3	count=2
arg	[arg_1] in ||| [arg_1] collection [arg_2]	count=4
module	in the ||| 29	count=1
arg	that symbol is ||| symbol value	count=1
function_arg	[function_1] for key ||| [arg_2] [function_1]	count=3
function	total [function_2] ||| [function_1] [function_2]	count=2
module	value for ||| 27 25	count=1
function	its ||| map char	count=1
function	command quits ||| quit window	count=1
arg	of string ||| string collection	count=1
function	the current [function_2] ||| [function_1] input [function_2]	count=1
arg	symbol by [arg_2] ||| [arg_2] [arg_1]	count=1
module	is greater than ||| 29	count=1
function	[function_1] left ||| [function_2] [function_1]	count=2
function	file in [function_2] ||| [function_2] [function_1]	count=4
function	key sequence a string ||| kbd	count=1
arg	prompting with prompt ||| prompt directory default	count=1
function	the editable contents ||| delete minibuffer contents	count=1
function	the end [function_2] ||| [function_2] [function_1]	count=10
function_arg	[function_1] value in ||| [arg_2] [function_1]	count=1
function	[function] the buffer-local ||| [function] local	count=3
arg	between start and end ||| start end	count=3
function	number of ||| count	count=2
function	process associated with the ||| process	count=1
module	and returns it ||| 7	count=1
module	of arguments is a ||| 5	count=1
function	returns the value ||| get	count=1
arg	value2 otherwise if ||| value2	count=1
function	defines a new ||| spec	count=1
arg	a termscript [arg] that ||| [arg]	count=1
function_arg	button [arg_2] ||| [function_1] n [arg_2]	count=1
module	on this ||| 25	count=1
function	the dimensions of ||| mm dimensions	count=1
arg	in filename with ||| filename	count=1
function	the window area recorded ||| posn area	count=1
arg	user by providing completion ||| collection predicate require-match initial history default	count=1
function	xml rather than ||| xml region	count=1
function	at the bottom ||| display buffer at bottom	count=1
function	makes backups [function_2] ||| [function_2] [function_1]	count=9
function	of directories for searching ||| path	count=1
function	contents of the syntax ||| syntax	count=1
function	key in [function] ||| [function] binding	count=1
arg	time difference [arg] - t2 ||| [arg]	count=1
function	and right margins ||| window margins	count=1
function	before a ||| before	count=1
arg	buffer from-buffer-or-name into the ||| from-buffer-or-name	count=1
arg	by menu ||| symbol maps doc menu	count=1
function	new frames ||| up frames	count=1
function	reads a [function_2] ||| [function_1] [function_2]	count=8
function	[function_1] [function_2] ||| [function_1] and extract [function_2]	count=3
arg	is [arg] ||| [arg]	count=3
function	new fontset according to ||| create fontset from fontset spec	count=1
function	[function_1] [function_2] ||| [function_2] bar [function_1]	count=2
function	sound file specifying an ||| sound	count=1
arg	state state the last ||| state	count=1
module	new ||| 5	count=1
function	function displays the buffer ||| switch to	count=2
function	function for file name ||| name	count=1
function_arg	region [arg_2] ||| [function_1] [arg_2]	count=7
function	the kill ||| kill	count=1
arg	to format format ||| file format beg	count=1
module	it non-nil based on ||| 25	count=1
function	this function deletes all ||| delete horizontal	count=1
arg	the function ||| function	count=1
function	of attributes ||| attributes	count=3
arg	of prev-buffers ||| window prev-buffers	count=1
function	window the window selected ||| set frame selected	count=1
arg	only live ||| no-mini all-frames	count=2
function	[function_1] [function_2] ||| [function_1] newline and [function_2]	count=16
arg	menu ||| symbol maps doc menu	count=1
function	[function_1] button after ||| [function_1] [function_2]	count=2
function	directory that ||| directory	count=1
module	see directory names ||| 24	count=1
function	left or to the ||| left	count=1
function	for the falsehood ||| not	count=1
function	a list of ||| list charset	count=1
function	table made [function_2] ||| [function_2] [function_1]	count=1
function	of that buffer’s point ||| point	count=1
module	names that match ||| 24	count=1
function	name for reading ||| name	count=1
function	returns a string ||| string	count=1
arg	items in list or ||| list	count=1
module	of the first nonblank ||| 31 17.1	count=1
function	called ||| called	count=1
module	window to ||| 27	count=1
function_arg	watch specified [arg_2] ||| [function_1] [arg_2]	count=1
function	the property list ||| symbol plist	count=1
module	name of [module_2] ||| [module_1] [module_2]	count=1
function	status of ||| status	count=2
arg	array bindat-raw ||| bindat-raw bindat-idx	count=1
function	function ||| buffer	count=1
function_arg	the window [arg_2] ||| [arg_2] [function_1]	count=3
function	text [function] ||| remove text [function]	count=1
function	syntax table ||| syntax	count=2
module	value of this ||| 30	count=1
function	the message currently being ||| message	count=1
function	the line [function_2] ||| [function_1] [function_2]	count=5
function	specifies the initial ||| initial	count=1
function	stops [function] ||| suspend [function]	count=3
function	valid case ||| case	count=1
function	function returns the real ||| real	count=2
function	a new ||| new	count=1
function_arg	this macro [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
arg	name or directory file ||| directory	count=1
function	forward in ||| forward	count=1
module	that would be ||| 7	count=1
function	after emacs reads ||| save list	count=1
function	of coding [function_2] ||| [function_2] [function_1]	count=12
arg	process [arg_2] ||| [arg_1] [arg_2]	count=1
function	string or symbol ||| string	count=1
function	function for each element ||| map	count=1
function	file name to use ||| make auto save file name	count=1
arg	normal arguments to fn ||| fn	count=1
arg	object2 ||| object2	count=1
arg	[arg_1] window window ||| [arg_1] [arg_2]	count=1
function	current buffer as auto-saved ||| set buffer auto saved	count=1
module	first buffer in the ||| 26 8	count=1
function	the left [function_2] ||| [function_2] [function_1]	count=8
module	of the [module] of ||| [module]	count=1
arg	end adding ||| end	count=1
module	this ||| 34 3	count=4
function	the rehash threshold ||| rehash threshold	count=1
function	name of a ||| name	count=1
function	function executes the shell ||| call process shell	count=1
function	point ||| window point	count=1
function	mouse pointer [function_2] ||| [function_2] [function_1]	count=3
function	the dimensions of graphical ||| dimensions alist	count=1
arg	[arg] with any ||| [arg]	count=3
module	[module] like ||| [module]	count=1
function	if ||| in window p	count=1
module	this variable is non-nil ||| 27 14	count=2
arg	non-nil thread [arg_2] ||| [arg_1] [arg_2]	count=1
function	at [function_2] ||| [function_2] [function_1]	count=3
function	tabulated ||| tabulated	count=1
module	already set it ||| 25 2	count=1
arg	[arg_1] lisp expression ||| [arg_2] [arg_1]	count=2
function	the previous sibling ||| prev sibling	count=1
rep	text [function_arg_2] ||| [module_1] fill region [function_arg_2]	count=1
arg	vectors a and b ||| b	count=1
function	function calls its argument ||| map char	count=1
function	with [function_2] ||| [function_2] [function_1]	count=2
function	split an existing window ||| up	count=1
function	returns the documentation string ||| face documentation	count=1
module	a string representing the ||| 8	count=1
function	to the value ||| char	count=1
function	of throw ||| throw	count=1
function	the tool bar ||| tool bar	count=1
function	window as dedicated ||| dedicated	count=1
function	this returns t ||| p	count=1
module	emacs reads your ||| 25	count=1
module	returns window’s value ||| 27 25	count=1
arg	not scanning past ||| target-depth stop-before state stop-comment	count=1
function	syntax class ||| syntax forward	count=1
function	[function_1] as modified ||| [function_2] [function_1]	count=4
function	[function_1] mode ||| [function_2] [function_1]	count=6
module	a new ||| 14	count=1
arg	done using compare-strings ||| alist case-fold	count=1
function	command indents ||| indent	count=1
function	handler [function_2] ||| [function_2] [function_1]	count=2
function_arg	reverse of s ||| s reverse s	count=2
module	sequence a ||| 1	count=1
module	process process ||| 36	count=1
arg	sort list ||| list	count=1
function	[function] of ||| buffer [function]	count=1
module	x ||| 28 23	count=1
arg	command fills ||| justify citation-regexp	count=1
function	name and process id ||| auto save	count=1
function	function returns ||| parameter	count=1
module	this returns the ||| 7.13	count=1
function	initializes auto-save-list-file-name ||| auto save list file	count=1
function	id ||| save	count=1
function	shell ||| call process shell	count=1
function	the base [function_2] ||| [function_2] set [function_1]	count=2
function	[function_1] type ||| [function_2] [function_1]	count=4
module	returns the ||| 31	count=1
arg	providing completion ||| collection predicate require-match initial history default inherit-input-method	count=1
function	the query flag ||| query on exit	count=1
module	automatically buffer-local so ||| 11 10.2	count=1
function	on this ||| auto save	count=1
arg	single-character answer ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
arg	this command specifies coding-system ||| coding-system	count=2
arg	alphabetically as specified ||| reverse	count=1
function	a change [function_2] ||| [function_1] [function_2]	count=4
arg	the value [arg_2] ||| [arg_2] [arg_1]	count=2
module	[module] tty can ||| [module]	count=1
function	to the left ||| left	count=1
arg	fun to init ||| fun init	count=1
function	copy of ||| properties	count=1
function	remapping of ||| face remap	count=1
function	already set it ||| auto save	count=1
function	remove ||| remove	count=1
module	this function returns the ||| 7	count=3
function	a buffer without disrupting ||| bidi string	count=1
function	the current global ||| global	count=2
module	this returns ||| 5	count=3
function	list of regular expressions ||| regexps	count=1
function_arg	[function_1] named dirname ||| [function_1] [arg_2]	count=6
function	overlay that the ||| overlay	count=1
arg	by [arg] ||| pred [arg]	count=3
arg	is a convenient way ||| object stream	count=1
function	a non-nil value ||| table	count=1
function_arg	[function_1] frame frame ||| [function_1] [arg_2]	count=5
function	lines of continuity to ||| lines	count=1
module	converts the ||| 1	count=1
arg	key in keymap ||| keymap key accept-defaults	count=2
function	this function puts ||| put	count=2
arg	flag ||| window flag	count=1
function	with the character ||| char	count=1
arg	termscript [arg] that ||| [arg]	count=1
function_arg	[function_1] prompt and ||| [function_1] [arg_2]	count=5
function	[function_1] echo ||| [function_1] [function_2]	count=4
module	data ||| 33 4	count=2
module	existing window to ||| 27	count=1
module	asin ||| 3 9	count=1
function	warps the mouse ||| mouse	count=1
arg	and optionally suffix ||| &optional suffix	count=2
module	length of time emacs ||| 38 11	count=1
module	a ||| 27 14	count=2
module	this variable is ||| 27 5	count=1
function	have ||| file	count=1
function_arg	to [arg_2] ||| 31 19.9 constrain [function_1] field [arg_2]	count=4
function	reads ||| read	count=4
module	calls its ||| 6 6	count=1
module	of the first ||| 33 4	count=1
function	edge coordinates ||| window edges	count=1
function	based on ||| save list	count=1
function	you ||| auto	count=1
function	string in the ||| bindat ip to string	count=1
arg	for current-face ||| current-face when	count=1
function	with color ||| color define	count=1
function	leaving ||| re	count=1
rep	of [function_arg_2] ||| [module_1] put char code [function_arg_2]	count=4
function	the bottom of the ||| bottom	count=1
arg	format format ||| format beg	count=1
module	is [module] ||| [module]	count=1
arg	alias it looks in [arg_1] [arg_2] the actual ||| [arg_2] [arg_1]	count=4
function	value for the face ||| face attribute	count=1
function	auto-save-list-file-name if you ||| auto save list file	count=1
function_arg	[function_1] if n ||| [function_1] [arg_2]	count=4
function	returns [function] all live ||| terminal [function]	count=1
arg	of char-table that has ||| char-table	count=1
module	of this variable ||| 27 14	count=2
arg	function sends a signal ||| signal	count=1
arg	[arg_1] of x1 ||| [arg_2] [arg_1]	count=2
rep	[module_1] [function_arg_2] more than one pass ||| [module_1] [function_arg_2]	count=2
function_arg	single paragraph [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] method ||| [function_1] [function_2]	count=6
arg	flag of process to ||| process	count=1
arg	[arg_1] frame to ||| [arg_2] [arg_1]	count=3
module	abbrev expansion [module_2] ||| [module_1] [module_2]	count=2
module	a symbol automatically buffer-local ||| 11 10.2	count=1
function	[function_1] text areas ||| [function_2] [function_1]	count=2
arg	table of window ||| window	count=1
module	text from the buffer ||| 31 8.2	count=1
arg	s2 ||| s2	count=1
function	[function] arg is ||| [function]	count=3
function	split window ||| split	count=1
function_arg	[function_1] [arg_2] ||| [function_1] abbrev-table [arg_2] expansion	count=4
function	wrap the words ||| word wrap	count=1
function_arg	[function_1] input-method ||| [arg_2] [function_1]	count=2
arg	in position ||| position	count=6
function	if ||| list	count=1
module	horizontal position of the ||| 31	count=1
function	contents [function] is not ||| minibuffer complete [function]	count=1
function	of syntax ||| skip syntax	count=1
function	from sequence ||| delete	count=1
arg	named function ||| function	count=2
function	setup ||| setup	count=1
function	command quits window and ||| quit window	count=1
function	the field ||| field	count=3
module	emacs to the ||| 38	count=1
function	kills ||| kill process	count=1
function	considers [function] ||| [function] as paragraph	count=1
function	if debug-on-error ||| on error	count=1
module	list of numbers starting ||| 5 4	count=1
arg	as old-pos ||| old-pos	count=1
function	function sets ||| set terminal	count=1
arg	face face specifies a ||| face	count=1
module	is allowed to split ||| 27 14	count=1
function	[function_1] indirect ||| [function_2] [function_1]	count=1
module	function returns ||| 38 3	count=1
function	controls whether [function_2] ||| [function_2] [function_1]	count=1
arg	and r ||| r	count=1
arg	[arg_1] by consing ||| [arg_2] [arg_1]	count=3
function	buffer without disrupting ||| bidi	count=1
function	text properties ||| substring no properties	count=1
function	if you have ||| save list	count=1
module	of this variable is ||| 27	count=2
function	returns the ending position ||| event end	count=1
arg	as a string ||| string	count=1
function_arg	row and [arg_2] ||| [arg_2] [function_1]	count=2
arg	modify an [arg] ||| [arg]	count=1
function	its argument ||| char	count=1
function	process ||| save list	count=1
function_arg	product [arg_2] ||| [arg_2] [function_1]	count=1
module	split an ||| 14	count=1
function	returns the current buffer ||| current buffer	count=1
function_arg	[function_1] index ||| [arg_2] [function_1]	count=1
function	this returns the ||| end	count=1
module	of all expressions ||| 2.16	count=1
module	value ||| 14	count=2
module	value of this variable ||| 30 7	count=1
function	value of this variable ||| mark	count=1
module	the ending position of ||| 20	count=1
arg	using [arg] which should ||| [arg]	count=1
module	constant ||| 21 1	count=4
function	of this variable is ||| up	count=2
function	default permissions for ||| default file modes	count=1
function	group specified by ||| group	count=1
function	of this option ||| base	count=1
module	in the buffer ||| 8	count=1
arg	lisp [arg] ||| [arg]	count=1
module	functions and return a ||| dash	count=1
function	return the reverse ||| s reverse	count=1
module	falsehood ||| 10 3	count=2
module	converting ||| 24 12.2	count=2
function	this function returns the ||| minibuffer	count=1
function	- 3 ||| s truncate	count=1
function	that the minibuffer window ||| minibuffer auto	count=1
arg	from-buffer-or-name into ||| from-buffer-or-name start end	count=1
function_arg	window’s [arg_2] ||| [function_1] [arg_2]	count=3
function	the file name ||| auto save file name	count=1
module	sequence of [module] as ||| [module] 3	count=1
function	find-file does ||| find	count=1
arg	volume [arg_2] ||| [arg_1] [arg_2]	count=1
function	argument function for ||| char	count=1
function	is non-nil display-buffer ||| up	count=1
module	this variable is non-nil ||| 27 5	count=1
function	this function stores value ||| char code	count=1
function	this command renames the ||| rename	count=1
function	a new fontset ||| fontset spec	count=1
arg	[arg_1] directory ||| [arg_2] [arg_1]	count=2
function	fill [function] based on ||| [function]	count=1
arg	through end ||| end	count=1
function	[function_1] indents the ||| [function_2] [function_1]	count=4
module	stably though [module] sorted list ||| [module] 6.3	count=1
function	removes function from ||| remove	count=1
function	position of the previous ||| previous	count=1
arg	[arg_1] rep ||| [arg_2] [arg_1]	count=1
module	function returns a ||| 6 5	count=1
arg	according to the current ||| accept-defaults no-remap position	count=1
function	value of this ||| pop	count=2
function_arg	permissions of [arg_2] ||| [function_1] [arg_2]	count=3
function	defines a [function_2] ||| [function_1] [function_2]	count=3
module	function returns ||| 5	count=1
function	function sets ||| set char	count=1
module	of the ||| 5 4	count=1
module	a string ||| 7	count=1
function	variable and gives ||| setq	count=1
function	name and process id ||| save list	count=1
arg	[arg_1] new ||| [arg_1] [arg_2]	count=2
function	[function_1] [function_2] any ||| [function_1] [function_2] strings	count=4
arg	back [arg] instead of ||| [arg] object	count=1
arg	the mouse like set-mouse-position [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
arg	symbol add value ||| symbol value	count=3
function	function ||| seconds	count=1
arg	the given [arg_2] ||| [arg_2] s [arg_1]	count=1
function	and type of scroll ||| scroll	count=1
function	smie ||| smie	count=1
arg	elements of lists ||| lists	count=1
arg	message message [arg_2] ||| [arg_1] [arg_2]	count=2
function	this sets the ||| set face underline	count=1
function	[function] the ||| remove text [function]	count=1
module	of activations ||| 19	count=1
module	the entire contents are ||| 4	count=1
function	text of the ||| text	count=1
arg	char [arg_2] ||| [arg_2] [arg_1]	count=2
arg	window displaying [arg] ||| [arg]	count=3
function_arg	removes the [arg_2] ||| [arg_2] [function_1]	count=1
function	the font matching with ||| font	count=1
module	buffer in the ||| 26 8	count=1
arg	dividend [arg_2] ||| [arg_1] [arg_2]	count=3
arg	dirname otherwise or if ||| dirname	count=1
arg	window’s buffer in ||| to	count=1
arg	or integers [arg_2] ||| [arg_2] [arg_1]	count=2
function	expressions ||| edebug test	count=1
module	point is at ||| 1	count=2
function_arg	slot [arg_2] ||| [function_1] char-table [arg_2]	count=4
module	stably though [module] sorted ||| [module] 6.3	count=1
function	a backup file ||| backup file	count=2
module	current ||| 31	count=1
arg	window [arg_2] ||| [arg_2] [arg_1]	count=1
arg	syntaxes ||| syntaxes	count=2
function	to ||| signal process	count=2
function	removes the ||| remove	count=1
function	edit ||| edit	count=1
arg	according ||| accept-defaults no-remap position	count=1
function_arg	font [arg_2] ||| [function_1] name character [arg_2]	count=2
function	keyboard input ||| input	count=1
function	an existing ||| pop up	count=1
function	the window as an ||| window	count=1
module	its argument ||| 6 6	count=1
function	new fontset according ||| fontset from fontset spec	count=1
arg	char-table that has ||| char-table	count=1
module	from ||| 5 7	count=1
arg	by divisor [arg_2] ||| [arg_2] [arg_1]	count=1
function	this macro defines ||| define	count=2
function	process id ||| auto save list	count=1
function	function converts the region ||| decode region	count=1
function	the query flag of ||| process query on exit flag	count=2
arg	menu ||| menu	count=2
arg	exponent exp ||| exp	count=1
function	process process ||| process	count=1
function_arg	[function_1] to underline ||| [arg_2] [function_1]	count=1
function	to save ||| save	count=1
arg	position [arg] replaced ||| n x [arg]	count=1
arg	in string ||| string	count=4
arg	the variable symbol by ||| symbol	count=1
arg	t if [arg] ||| [arg]	count=2
function	of the prefix ||| prefix	count=1
function	undo ||| undo	count=1
function	echo area message ||| echo area message	count=3
arg	difference [arg] - t2 ||| [arg]	count=1
function	timer ||| timer	count=1
arg	variable symbol ||| symbol	count=2
function	current display [function_2] ||| [function_2] [function_1]	count=4
function	given family is ||| family alternatives	count=2
module	a new ||| 6	count=1
arg	if n ||| n wrap	count=2
function_arg	abbrev table [arg_2] ||| [function_1] description [arg_2]	count=1
function_arg	a subtype [arg_2] ||| [arg_2] [function_1]	count=1
module	keymaps for one ||| 21	count=1
function_arg	the wildcard [arg_2] ||| [function_1] [arg_2]	count=2
arg	func with the list ||| func	count=1
arg	each node in nodes ||| ewoc nodes	count=1
function	frame that the window ||| window frame	count=1
arg	fringe widths of ||| left right outside-margins	count=1
function	non-nil value if theme ||| p	count=1
function	listing for directory ||| directory	count=1
function	exit ||| exit	count=1
arg	rgb value rgb a ||| rgb frame	count=1
function	dimensions of graphical displays ||| dimensions	count=1
function	the query ||| query on exit	count=2
module	is ||| 9 5	count=1
function	[function_1] the left ||| [function_1] [function_2]	count=2
function	appends the contents of ||| append	count=1
function	and ||| save	count=1
module	variable is ||| 27 11	count=1
module	function converts ||| 1	count=1
function	appends the text ||| kill append	count=1
arg	finds and opens ||| nosuffix must-suffix	count=1
arg	with process to ||| process	count=1
function	[function] of the ||| [function] history element	count=1
function	function sets the insertion ||| set marker insertion	count=1
function_arg	[function_1] from start ||| [function_1] [arg_2]	count=3
arg	[arg_1] buffer ||| [arg_1] [arg_2]	count=2
function	dimensions ||| dimensions alist	count=1
function_arg	[function_1] name to ||| [arg_2] [function_1]	count=3
arg	[arg_1] returns parent ||| [arg_2] [arg_1]	count=1
function	than 0 point-min ||| buffer	count=1
function	to titleized words ||| titleized words	count=1
function	change group that ||| change group	count=1
function	list of coding ||| find coding	count=3
arg	concatenate s and suffix ||| suffix	count=1
function	item to ||| add item	count=2
function	at the bottom of ||| at bottom	count=1
function	to the left ||| to left	count=3
arg	position of event ||| event	count=1
arg	[arg_1] start to ||| [arg_2] [arg_1]	count=3
arg	this function returns an ||| frame	count=1
arg	window’s value for ||| window	count=1
arg	prompt and ||| prompt directory default	count=1
function	charset of highest priority ||| charset after	count=1
function	longest common substring of ||| try completion	count=1
module	function ||| 31 12	count=1
module	coding ||| 32 10.3	count=1
function_arg	[function_1] the width ||| [arg_2] [function_1]	count=2
module	files can be ||| 24 11	count=1
function	specify the dimensions of ||| display mm dimensions	count=1
function	a serial ||| serial	count=2
arg	[arg_1] equal to ||| [arg_2] [arg_1]	count=8
module	containing all the ||| 6 5	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=10
function	of the minibuffer ||| minibuffer	count=2
module	function ||| 19 6.4	count=1
function	[function_1] command from ||| [function_1] [function_2]	count=4
function	[function_1] an input ||| [function_2] [function_1]	count=2
arg	[arg] have ||| object1 [arg]	count=1
arg	makes buffer-or-name the current ||| buffer-or-name	count=1
module	was previously nil ||| 2.16	count=1
function	init file ||| save	count=1
function	the tabulated [function_2] ||| [function_1] [function_2]	count=4
function	horizontal position ||| current	count=1
module	etc ||| 7	count=1
module	file it initializes ||| 2	count=1
function	face displays differently from ||| differs from	count=1
arg	first form ||| form	count=1
function	have not already set ||| auto save	count=1
function	a symbolic file mode ||| symbolic	count=1
function	this returns t if ||| p	count=1
function	this function ||| map char	count=1
function	currently visible on ||| pos visible	count=1
arg	non-nil value [arg] ||| [arg]	count=2
function	debugged ||| edebug test	count=1
arg	in syntaxes ||| syntaxes	count=2
function	function completes [function] ||| [function] complete	count=1
function	[function_1] configurations ||| [function_1] [function_2]	count=5
function	fit by fit-frame-to-buffer ||| fit frame	count=1
arg	fun [arg_2] ||| [arg_1] [arg_2]	count=1
function	if you have ||| auto	count=1
function	coding [function_2] ||| [function_1] [function_2]	count=24
module	is non-nil that means ||| 14	count=1
function_arg	a resource [arg_2] ||| [arg_2] [function_1]	count=3
function	you have not ||| auto save list file	count=1
function	text ||| window text	count=1
function	is nil switch-to-buffer displays ||| to buffer preserve window	count=1
function	abbrev [function_2] ||| [function_1] [function_2]	count=2
function	a collection for ||| table	count=1
function	item to the ||| add item	count=2
function	case table ||| case table	count=4
module	sends a ||| 8	count=1
function	command quits window ||| quit window	count=1
function	the documentation string of ||| documentation	count=2
module	host ||| 25 2	count=2
function	a button at ||| push button	count=1
arg	directories given by ||| path	count=1
function	region as ||| region	count=1
arg	[arg] converted ||| [arg]	count=2
function	face [function_2] ||| [function_1] [function_2]	count=1
function	deletes the current ||| delete	count=1
arg	and returns default ||| default	count=1
function	a string of years ||| seconds	count=1
function_arg	[function_1] in list ||| [arg_2] [function_1]	count=6
function_arg	first [arg_2] ||| [arg_2] [function_1]	count=1
function	this command inserts ||| format insert file	count=1
function_arg	[function_1] on ||| [arg_2] [function_1]	count=1
arg	copies string ||| string	count=1
function	syntax table of ||| syntax	count=1
module	prompting ||| 6.5	count=1
arg	character char if ||| char	count=1
function_arg	actual row [arg_2] ||| [arg_2] [function_1]	count=1
function	the current frame number ||| current frame	count=1
function_arg	this function returns [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
module	the limits ||| 29 2.3	count=2
module	this function returns a ||| 32 3	count=1
arg	[arg_1] type ||| [arg_2] [arg_1]	count=2
function	initializes auto-save-list-file-name ||| list	count=1
module	of a line ||| 31 1	count=1
function	group ||| group	count=3
arg	that key must be ||| key	count=1
function	corner of the object ||| posn object	count=1
function	specified by [function] is ||| [function] auto hide	count=1
function	a [function_2] ||| [function_2] [function_1]	count=5
arg	of count repetitions ||| count character	count=2
function	configuration list that ||| configuration	count=1
function_arg	symbolic link [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	existing fontset name ||| fontset font name	count=1
function	[function_1] previous buffers ||| [function_2] [function_1]	count=3
module	function ||| 6 6	count=4
function	returns the definition of ||| lookup	count=1
module	that object ||| 6	count=1
function	file it ||| auto save list	count=1
module	the value of this ||| 7	count=1
arg	definition in ||| definition	count=1
function	function for ||| table	count=1
function	string ||| format seconds	count=2
function	upper case ||| upcase	count=2
function	[function_1] xml ||| [function_2] [function_1]	count=4
module	echo ||| 37 4.4	count=1
module	0 point-min ||| 29	count=1
module	vector ||| 6 5	count=2
function	this function puts the ||| state put	count=1
function	sets ||| set left	count=1
function	this function returns window’s ||| window	count=1
function	[function_1] table ||| describe [function_1] [function_2]	count=2
module	this returns the ||| 5	count=1
function	if no change is ||| change	count=2
function	adaptive fill ||| adaptive fill	count=1
arg	calling each hook ||| hook	count=2
function	[function_1] [function_2] ||| [function_2] user input [function_1]	count=2
function	same format as ||| time	count=1
function	coding systems that ||| coding systems	count=3
arg	buffer from-buffer-or-name ||| from-buffer-or-name start	count=1
function	text as [function_2] ||| [function_2] [function_1]	count=4
module	all frames on terminal ||| 28	count=1
function	font of ||| font	count=1
function	based on ||| auto	count=1
function	regular expressions ||| regexps	count=1
function	paragraph ||| paragraph	count=1
function	inserts object into ring ||| insert	count=1
function_arg	[function_1] list each ||| [function_1] on item [arg_2]	count=1
arg	value of the property ||| value	count=1
function	this function closes ||| close	count=1
function	a ||| process	count=1
function	on ||| save list file	count=1
function	function returns the live ||| window at	count=1
function_arg	a button [arg_2] ||| [function_1] [arg_2]	count=6
function	years days hours etc ||| seconds	count=1
arg	arguments args ||| args	count=2
arg	of process to ||| process	count=1
module	names that match ||| 24 9	count=1
function	history ||| matching history	count=1
function	keyboard ||| set keyboard	count=1
arg	[arg_1] documentation docstring ||| [arg_2] [arg_1]	count=3
arg	of file filename into ||| filename	count=1
arg	function defines the function ||| docstring interactive type	count=1
function	reads abbrev definitions ||| read abbrev	count=2
function	value ||| parameter	count=1
function	for variable and gives ||| setq	count=1
module	returns ||| 13	count=1
arg	message and ||| message level buffer-name	count=1
function	does not [function] ||| contents no [function]	count=2
function	[function] coding ||| [function] coding system	count=3
function	a symbolic file ||| file modes symbolic	count=1
module	returns [module_2] ||| [module_1] [module_2]	count=2
arg	collection will operate assuming ||| collection	count=1
arg	fn [arg_2] ||| [arg_2] [arg_1]	count=2
function	point ||| at point	count=1
function	the host name ||| auto save	count=1
module	variable ||| 11 13	count=1
function	this ||| table	count=1
module	this function returns ||| 19 12	count=2
function	text ||| make text	count=1
function	the text as ||| parse	count=1
function_arg	[function_1] [arg_2] a ||| [function_1] [arg_2]	count=4
arg	property list of ||| property	count=1
function	a string of years ||| format	count=1
arg	contents of string as ||| string	count=1
function	this variable is ||| pop	count=2
arg	for filename ||| filename	count=1
arg	obsolete-name is ||| obsolete-name current-name when	count=1
arg	dirname [arg_2] ||| [arg_2] [arg_1]	count=1
function	the parent ||| table parent	count=1
function	function returns ||| buffer end	count=1
arg	coding system coding-system ||| coding-system destination	count=2
arg	function finds and opens ||| filename missing-ok nomessage nosuffix must-suffix	count=1
module	this command replaces the ||| 25 3	count=1
function	face for the fringe ||| fringe bitmap	count=1
function	sets ||| set face underline	count=1
arg	current vertical scroll position ||| pixels-p	count=1
module	non-nil if object is ||| 5	count=1
function	make it ||| buffer	count=1
function	if no change ||| change	count=2
module	a symbol of ||| 28 4	count=1
function	you have not already ||| auto save	count=1
module	display buffers by making ||| 14	count=1
function	based ||| auto save list	count=1
module	is ||| 12 5	count=1
function	newline ||| newline	count=3
arg	element of char-table that ||| char-table	count=1
arg	[arg_1] end ||| [arg_1] [arg_2] face	count=1
module	allowed to split an ||| 14	count=1
module	using emacs ||| 38	count=1
module	years ||| 38 7	count=2
function_arg	[function_1] data adding ||| [arg_2] [function_1]	count=4
function	function returns the byte ||| get byte	count=1
function	function ||| map char table	count=4
function	the match ||| string match p	count=1
arg	window for ||| window	count=1
function	the selinux context ||| file selinux context	count=2
function	which the kill ring ||| kill ring	count=1
module	last of arguments is ||| 5	count=1
function	indents the new ||| indent	count=1
function	this sets the ||| set	count=8
function	based on this ||| save	count=1
module	this command [module_2] ||| [module_2] [module_1]	count=1
function	already set ||| save list file	count=1
module	inform coverage testing ||| 17	count=1
function	alist of attributes of ||| all attributes	count=1
function_arg	the sign [arg_2] ||| [function_1] [arg_2]	count=2
arg	the value in ||| value	count=1
arg	establishes the proper ||| find-file	count=1
function	the host ||| file	count=1
module	returns ||| 6 5	count=2
function	system which ||| system	count=1
rep	inserts [function_arg_2] ||| [module_1] insert [function_arg_2]	count=8
module	not already set ||| 25 2	count=1
function	prefix adding ||| list file prefix	count=1
function	in a window below ||| display buffer below	count=1
function	this function inserts ||| insert	count=2
function	the size of the ||| size	count=1
function	[function_1] file to ||| [function_1] [function_2]	count=4
module	this function returns ||| 12 5	count=1
function	dimensions ||| display mm dimensions	count=1
function	to restore the state ||| quit restore	count=1
function	attributes ||| file attributes	count=1
function	this ||| char	count=1
function	that window ||| window	count=1
function	[function_1] enter ||| [function_2] [function_1]	count=6
arg	of the propname ||| propname	count=1
function	to point ||| at point	count=1
module	new window for ||| 27 14	count=1
function	the current depth ||| minibuffer depth	count=1
arg	filename ||| filename	count=25
function	[function_1] bottom ||| [function_1] [function_2]	count=4
arg	process-name as a symbol ||| process-name	count=1
arg	a ||| function	count=1
function	stores ||| fset	count=1
function	your init ||| save list	count=1
function	[function_1] [function_2] at ||| [function_1] [function_2] pos string	count=4
function	and process ||| auto save list	count=1
function	reads your init file ||| list	count=1
function	help command named ||| help	count=1
function	[function] into an ||| dump [function]	count=3
arg	the prop ||| prop object	count=1
function	many seconds [function_2] ||| [function_2] [function_1]	count=1
module	return pred x ||| dash	count=1
function	to a string in ||| bindat ip to string	count=1
arg	replaces [arg] ||| [arg]	count=2
function	depth of ||| depth	count=1
arg	[arg_1] named newname ||| [arg_1] [arg_2]	count=2
arg	directory names as ||| directory	count=1
function	[function_1] table in ||| [function_1] [function_2]	count=4
function_arg	positions for [arg_2] ||| [arg_2] [function_1]	count=3
function	debug-on-exit ||| backtrace	count=1
function	for the text ||| text properties	count=1
function	display table or nil ||| display table	count=1
module	the ||| 6	count=1
module	that ||| 27	count=1
function	order ||| take	count=1
function	each element of ||| table	count=1
arg	for regexp in ||| regexp	count=1
arg	[arg] have equal ||| object1 [arg]	count=1
arg	in object if no ||| object limit	count=1
arg	filename [arg_2] ||| [arg_1] [arg_2]	count=7
function	same [function] ||| [function]	count=1
arg	the display ||| display	count=1
module	variable alias for ||| 11	count=1
arg	place ||| place	count=1
module	in the buffer list ||| 26 8	count=1
arg	selects frame ||| frame norecord	count=1
module	the ending ||| 7.13	count=1
module	non-nil based on ||| 2	count=1
module	input ||| 20 8.6	count=1
function	is an alist that ||| alist	count=1
function_arg	hash table according ||| hash table keyword-args	count=1
function	height and width of ||| height	count=1
function	name to use for ||| name	count=1
function_arg	[function_1] name ||| [function_1] abbrev-table [arg_2] expansion	count=2
module	falsehood of ||| 10 3	count=1
function	of remote ||| remote file	count=1
module	line ||| 1	count=1
function	a new vector containing ||| vconcat	count=1
arg	this function ||| props	count=1
arg	region between start and [arg_1] [arg_2] ||| [arg_2] record-regexp key-regexp start [arg_1]	count=3
function	creates a directory ||| make directory	count=2
function_arg	[function_1] in symbol’s ||| [function_1] [arg_2]	count=3
function	the key ||| read key	count=1
function_arg	[function_1] tree ||| [function_1] fn [arg_2]	count=1
function	[function_1] to its ||| [function_1] [function_2]	count=2
module	returns ||| 4 6	count=3
arg	the font [arg] in ||| font-spec [arg]	count=1
function	floating-point number of seconds ||| float	count=1
function	site-customization [function_2] ||| [function_2] [function_1]	count=4
function	justification ||| default justification	count=1
function_arg	[function_1] right-margin property ||| [function_1] from to [arg_2]	count=2
function	to specify the dimensions ||| dimensions	count=1
function	0 point-min otherwise ||| buffer end	count=1
function	is the ||| mark ring	count=1
function	the tabulated list buffer ||| tabulated list init	count=1
function	may ||| pop up	count=1
function	try if a given ||| alternatives	count=1
function	[function_1] window’s previous ||| [function_1] [function_2]	count=2
function	and ||| list	count=1
function	mode [function] construct ||| [function]	count=1
function	display [function_2] ||| [function_2] [function_1]	count=8
module	your ||| 25	count=1
arg	change in the prop ||| prop object limit	count=1
function	character of ||| char exclusive	count=1
function	function returns [function] all live ||| terminal [function]	count=1
function	whose ||| quote	count=1
function	edebug ||| edebug	count=1
arg	string ||| format-string	count=1
arg	or force ||| force	count=1
arg	the specifications in arguments ||| arguments	count=1
function_arg	contents of [arg_2] ||| [arg_2] [function_1]	count=3
module	point-min ||| 29	count=1
function	raises ||| auto raise	count=1
function	host ||| auto save	count=1
module	the falsehood ||| 3	count=1
function	this sets ||| set	count=8
arg	[arg_1] but does ||| [arg_1] [arg_2]	count=4
function	file it initializes auto-save-list-file-name ||| list file	count=1
module	function returns window’s value ||| 27 25	count=1
function	maximum size of ||| ring max	count=1
function	last search or match ||| match	count=1
function	specifies errors which ||| errors	count=1
function	splitting it each time ||| partition by	count=1
arg	this function [arg_2] ||| [arg_2] [arg_1]	count=10
function	the host name ||| list	count=1
function	[function_1] sequence ||| [function_1] [function_2]	count=4
function_arg	property of [arg_2] ||| [function_1] [arg_2]	count=3
arg	[arg_1] exp ||| [arg_1] [arg_2]	count=1
module	debugger as soon as ||| 17	count=1
arg	fun on [arg_2] ||| [arg_2] [arg_1]	count=1
function	new hash [function_2] ||| [function_2] [function_1]	count=1
function_arg	alphabetically [arg_2] ||| [function_1] reverse [arg_2]	count=2
module	function returns a ||| 10.3	count=1
function	name and ||| file	count=1
function	function deletes [function_2] ||| [function_1] and extract [function_2]	count=1
module	position ||| 17.1	count=1
function	[function_1] attributes of ||| [function_1] [function_2]	count=3
function_arg	the text [arg_2] ||| [function_1] pixel size [arg_2] mode-and-header-line	count=1
arg	list-of-strings into a single ||| list-of-strings	count=1
function	the property list of ||| symbol plist	count=1
function	a description of the ||| description	count=1
arg	start ||| start	count=5
function	[function_1] [function_2] contain ||| 8 [function_2] [function_1]	count=3
function	of window’s [function_2] ||| [function_1] [function_2]	count=1
arg	buffer-or-name the ||| buffer-or-name	count=1
function	init ||| file	count=1
arg	face ||| face frame	count=2
module	internal window [module] window tree ||| [module]	count=1
arg	a member of list ||| list	count=1
module	lisp programs and the ||| 7	count=1
function	syntax class ||| skip syntax	count=1
function	of active ||| current active	count=1
function	window below ||| below	count=1
module	families ||| 37 12.9	count=1
function	restore the ||| restore	count=1
function	characters in ||| chars	count=2
module	windows ||| 27 4	count=1
module	limits of ||| 29 2.3	count=2
arg	seconds seconds without updating ||| seconds millisec	count=1
module	is ||| 27 14	count=6
arg	color name ||| color frame	count=1
function	its individual [function_2] ||| [function_2] [function_1]	count=2
function	indices ||| indices	count=2
function	[function_1] in the ||| [function_1] [function_2]	count=5
module	variable is non-nil ||| 27 14	count=2
function	the standard case table ||| standard case table	count=1
arg	visiting file filename ||| filename	count=1
arg	frame can really ||| frame background-p	count=1
module	whose car is ||| 5	count=1
function	help information ||| help	count=1
module	first nonblank character ||| 17.1	count=1
module	displaying ||| 37 14	count=1
function_arg	wrap [arg_2] ||| [arg_2] [function_1]	count=5
arg	copy of list ||| list	count=1
module	text according ||| 31	count=1
function	window’s previous [function_2] ||| [function_1] [function_2]	count=4
arg	time difference [arg] - ||| [arg]	count=1
module	at [module] position pos ||| [module] 5	count=1
module	this function returns a ||| 5	count=2
arg	times into substrings bounded ||| &optional omit-nulls	count=1
module	may display ||| 27 14	count=1
function_arg	font spec font-spec ||| find font font-spec	count=1
arg	index from ||| from &optional to step	count=1
arg	of text-coding ||| text-coding	count=1
module	this returns the value ||| 5	count=1
function_arg	[function_1] args into ||| [arg_2] [function_1]	count=5
function	the host name and ||| list	count=1
arg	prompt ||| prompt initial history args	count=1
arg	lists such ||| lists	count=1
function	other than ||| other	count=1
function	to make a ||| up	count=1
arg	alphabetically as ||| reverse	count=1
function	input [function_2] ||| [function_2] [function_1]	count=5
function	if the user ||| p	count=1
function	returns as a string ||| string	count=1
function	selinux context ||| selinux context	count=1
arg	of lists using ||| lists	count=1
arg	visiting filename and returns ||| filename	count=1
function	it initializes auto-save-list-file-name ||| auto save list file	count=1
arg	from ||| from to	count=1
module	than 0 ||| 29 1	count=1
arg	this command copies ||| keep-time parents copy-contents	count=1
function	the reverse of ||| reverse	count=1
arg	buffer-or-name in some ||| buffer-or-name	count=1
module	value ||| 30	count=1
arg	for key according to ||| key accept-defaults no-remap position	count=1
arg	element into the old ||| element	count=1
module	sequence ||| 1	count=1
function	evaluates it ||| eval	count=1
arg	face ||| face frame inherit	count=1
function	the ||| list file	count=1
arg	collection will ||| collection predicate	count=1
function	[function_1] link to ||| [function_1] [function_2]	count=4
module	is ||| 5	count=14
function_arg	[function_1] of marker ||| [function_1] [arg_2]	count=5
module	of ||| 6 6	count=2
function_arg	the remapping [arg_2] ||| [function_1] [arg_2]	count=3
function	year corresponding ||| year	count=1
function	the kill [function_2] ||| [function_2] [function_1]	count=1
function	a subtype ||| subtype	count=1
function	the tabulated list buffer ||| tabulated list	count=1
function	should not ||| ignored	count=1
arg	for regexp [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	named property [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] stored in ||| 12 10.1 [function_1] place [arg_2]	count=3
function	set it non-nil ||| list	count=1
module	display-buffer is allowed ||| 14	count=1
function	table or ||| table	count=1
arg	fname that acts like ||| fname	count=1
function	[function_1] [function_2] ||| [function_2] set [function_1]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] integers [arg_2]	count=2
function_arg	sets [arg_2] ||| [arg_2] [function_1]	count=5
module	this function ||| 6 6	count=1
arg	this function defines the ||| docstring interactive	count=1
function	function calls its ||| map char	count=1
arg	prop ||| pos prop	count=1
function	defines a help command ||| make help screen	count=1
module	method [module] an ||| [module]	count=1
module	match a ||| 33 1	count=4
function	[function_1] backup ||| [function_1] [function_2]	count=3
arg	[arg_1] list ||| [arg_2] [arg_1]	count=7
function	is the horizontal ||| current	count=1
function	whose syntax ||| skip syntax	count=1
module	display-buffer may display buffers ||| 14	count=1
arg	moves overlay to buffer ||| buffer	count=1
function	and exits if ||| and exit	count=1
function	returns the file name ||| auto save file name	count=1
function	auto-save-list-file-name if you ||| file	count=1
module	existing window to ||| 27 14	count=1
function	system which uses the ||| system change	count=1
function	frame’s ||| buffer pop up	count=1
module	value of this variable ||| 14	count=2
function	buffer to start ||| to	count=1
arg	function warps the mouse [arg_1] [arg_2] units of pixels rather ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] font-spec for ||| [function_1] name character [arg_2]	count=2
function	the recursive [function_2] ||| [function_1] [function_2]	count=1
module	initializes auto-save-list-file-name if you ||| 25 2	count=1
function	total [function_2] ||| [function_2] [function_1]	count=2
module	in [module_2] ||| [module_1] [module_2]	count=1
function	non-nil edebug ||| edebug test	count=1
function	file it initializes auto-save-list-file-name ||| auto save	count=1
function_arg	[function_1] named fname ||| [arg_2] [function_1]	count=5
module	debugger is called when ||| 17	count=1
function	dimensions of graphical ||| mm dimensions	count=1
arg	the mouse like set-mouse-position [arg_1] [arg_2] ||| set mouse pixel position [arg_1] [arg_2]	count=2
arg	character char ||| char	count=2
function	a nonnegative integer ||| minibuffer	count=1
function	query flag ||| query on exit flag	count=2
function	function sets the query ||| set process query on exit flag	count=1
function_arg	[function_1] for regexp ||| [function_1] all [arg_2]	count=1
module	point ||| 1	count=2
function_arg	[function_1] [arg_2] ||| [function_1] font [arg_2]	count=12
function	list buffer see header ||| list	count=1
function	newest [function_2] ||| [function_1] [function_2]	count=3
function	color cells the ||| color cells	count=1
module	this command ||| 3	count=1
function	process id ||| list	count=1
rep	alters [function_arg_2] ||| [module_1] modify [function_arg_2]	count=4
module	a key sequence a ||| 21	count=1
function	[function_1] the minibuffer ||| [function_1] [function_2]	count=4
module	the corresponding decoded text ||| 31 24	count=1
function	this prefix adding ||| file prefix	count=1
function	this inserts object ||| insert	count=1
module	means display-buffer may display ||| 27 14	count=1
module	debugger each ||| 17	count=1
arg	[arg_1] [arg_2] ||| dash !cons [arg_1] [arg_2]	count=3
function	for ||| map char	count=1
module	function moves ||| 29 2.4	count=2
function	has ||| table	count=1
function	[function_1] vector ||| [function_2] [function_1]	count=8
module	[module_1] is ||| [module_2] [module_1] byte compile dynamic docstrings	count=1
function	in turn passing ||| with	count=1
function	defines a new fontset ||| fontset spec	count=1
arg	value of the ||| value	count=1
function	split s ||| split up to	count=1
arg	function finds ||| nomessage nosuffix	count=1
function	if you ||| save list	count=1
module	beginning of ||| 4	count=1
arg	inverse-video-p ||| inverse-video-p frame	count=1
module	this ||| 31 17.1	count=2
function	of color cells the ||| display color cells	count=1
function	this ||| window parameter	count=2
function	[function] completion ||| [function]	count=2
module	this ||| 29 1	count=2
function_arg	[function_1] file ||| [function_1] [arg_2]	count=3
function	display-start position of ||| start	count=1
function	making new ||| pop up	count=1
function	information about the overlay ||| overlay	count=1
function_arg	[function_1] position pos ||| [function_1] [arg_2]	count=2
function	height in lines ||| height	count=3
arg	this function associates ||| rgb frame	count=1
function	the selected window ||| selected	count=1
module	alist listing all the [module_1] [module_2] ||| [module_1] [module_2]	count=2
function	syntax classes are ||| syntax backward	count=1
function	[function_1] marker ||| [function_2] [function_1]	count=2
module	variable is ||| 27 14	count=2
function	tests coverage ||| coverage	count=1
arg	of function ||| function	count=2
function_arg	value [arg_2] ||| [function_1] [arg_2]	count=1
function	proper justification style ||| current justification	count=1
function	in ||| bindat ip to	count=1
arg	selected frame ||| frame	count=1
function	fill column value to ||| fill column	count=1
function	the value ||| ring	count=1
arg	char and ||| char	count=1
function	not already ||| auto	count=1
module	this function returns the ||| 38 3	count=1
function	[function_1] backup versions ||| [function_2] [function_1]	count=4
module	returns ||| 17.1	count=1
function	the overlay [function_2] ||| [function_2] [function_1]	count=1
module	have not already set ||| 25	count=1
function	a ||| format seconds	count=2
function	like find-file but it ||| find	count=1
function	horizontally ||| to buffer horizontally	count=1
function	of ||| map	count=1
arg	[arg] replaced with ||| x [arg]	count=1
arg	with prompt ||| prompt directory	count=1
module	based on ||| 25 2	count=1
function_arg	the pid [arg_2] ||| [function_1] [arg_2]	count=1
function	the name of a ||| name	count=1
function	name it is supposed ||| file precious flag	count=1
function	already set it ||| list file	count=1
module	non-nil ||| 17 2.16	count=2
module	an existing window to ||| 27 14	count=1
function	extra [function_2] ||| [function_1] [function_2]	count=2
arg	file filename ||| filename visit beg end replace	count=1
arg	[arg_1] list plist ||| [arg_2] [arg_1]	count=18
function	this is like next-single-property-change ||| next single	count=1
module	if [module_1] [module_2] ||| [module_2] [module_1]	count=2
function	host name and ||| save list file	count=1
function	you have ||| auto	count=1
function_arg	[function_1] element element ||| [function_1] from invisibility spec [arg_2]	count=1
arg	[arg_1] table ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] name i ||| [function_1] tabname [arg_2]	count=5
module	is non-nil display-buffer ||| 27 14	count=1
arg	message and ||| message level	count=1
arg	the file filename but ||| filename wildcards	count=1
module	[module_1] macro ||| [module_2] [module_1] macrop object	count=1
function	of color cells ||| display color cells	count=2
function	a single character ||| read char	count=1
arg	[arg_1] live window ||| [arg_2] [arg_1]	count=4
function	existing fontset ||| fontset	count=1
function	size of [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] them ||| [function_1] regexp rep string [arg_2]	count=1
function	sign of ||| copysign	count=1
arg	[arg_1] name name ||| [arg_2] number [arg_1]	count=1
arg	[arg_1] and executes ||| [arg_1] [arg_2]	count=1
function	[function_1] remapping ||| [function_2] [function_1]	count=6
function_arg	overlay after [arg_2] ||| [function_1] change [arg_2]	count=1
module	to make a ||| 14	count=1
module	which is ||| 31 17.1	count=1
arg	non-nil value ||| function	count=1
arg	this function copies string ||| string	count=1
arg	its ||| function	count=1
arg	symbol’s [arg_2] ||| [arg_2] [arg_1]	count=2
arg	of body ||| body	count=1
arg	screen ||| display	count=1
arg	subsequent attempt to ||| variable	count=1
function_arg	[function_1] to time ||| [arg_2] [function_1]	count=4
function	buffer’s [function_2] ||| [function_2] [function_1]	count=2
module	[module] the current ||| [module]	count=3
function	[function_1] [function_2] ||| [function_1] input [function_2]	count=4
function	change ||| change	count=5
arg	text keyseq-text a string ||| keyseq-text	count=1
function	update [function] ||| [function] mode line update	count=1
arg	from beg [arg_2] ||| [arg_2] [arg_1]	count=8
function	function deletes the ||| delete	count=1
arg	[arg_1] init ||| [arg_2] [arg_1]	count=2
module	is non-nil ||| 14	count=2
module	spaces [module_2] ||| [module_1] [module_2]	count=2
function	function ||| interactively	count=1
function	a new ||| pop up	count=2
function	[function_1] permissions as ||| [function_2] [function_1]	count=5
function	[function_1] conversion ||| [function_2] [function_1]	count=3
function	proper justification style to ||| current justification	count=1
arg	specifies coding-system as ||| coding-system	count=2
function	is non-nil display-buffer ||| pop	count=1
function	has a non-nil value ||| map	count=1
function	[function_1] buffers ||| [function_1] [function_2]	count=4
arg	list of the symbol ||| symbol	count=1
arg	message message [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	using text [arg_2] ||| [function_1] button beg end [arg_2]	count=1
module	of time emacs ||| 38 11	count=1
function	left margin indentation from ||| to left margin	count=1
arg	obarray has ||| name obarray	count=1
arg	its argument ||| function	count=1
function	variable ||| in	count=1
function_arg	[function_1] n times ||| [arg_2] [function_1]	count=1
arg	t2 ||| t2	count=1
arg	property [arg_2] ||| [arg_2] [arg_1]	count=10
function	other i/o device) ||| file regular	count=1
function	point ||| point	count=2
function	is ||| p	count=2
arg	fun on ||| fun	count=1
function	the insertion type of ||| marker insertion	count=1
function	it non-nil ||| list	count=1
arg	in the cyclic ||| minibuf all-frames default	count=1
function	returns the key ||| key	count=1
module	window [module] window ||| [module]	count=1
function	currently active minibuffer ||| minibuffer	count=1
function_arg	sets [arg_2] ||| [function_1] [arg_2]	count=2
module	method [module] ||| [module]	count=1
module	a ||| 6 5	count=2
arg	[arg_1] [arg_2] ||| [arg_2] filename [arg_1]	count=4
module	description [module] ||| [module] 9	count=1
module	and process id ||| 25	count=1
arg	of tree and make ||| folder init-value tree	count=1
module	point-min ||| 1	count=1
function_arg	keyboard [arg_2] ||| [arg_2] [function_1]	count=1
function	display-start position of window ||| start	count=1
module	text according to yank-handled-properties ||| 31 8.3	count=1
function	reads your ||| save list file	count=1
function	you have ||| save list file	count=1
function	[function_1] it ||| [function_2] [function_1]	count=2
function_arg	[function_1] binding ||| [function_1] set key key [arg_2]	count=2
module	days hours ||| 38	count=1
arg	for current-face and ||| current-face when	count=1
module	this is similar ||| 9 5	count=1
function	displays ||| describe	count=1
module	in ||| 4	count=1
function	displays differently [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] package ||| [function_2] [function_1]	count=1
module	files can be cached ||| 24 11	count=1
module	this function defines a ||| 22 5	count=1
arg	spec font-spec [arg_2] ||| [arg_2] [arg_1]	count=1
module	existing window to ||| 14	count=1
module	window to make a ||| 27	count=1
arg	text properties properties ||| properties	count=1
function	across characters whose syntax ||| syntax backward	count=1
function	[function_1] to ||| [function_2] sit for [function_1]	count=4
module	the regular expression describing ||| 33 8	count=1
function	command inserts contents ||| insert	count=1
function	describing the [function] sentence ||| [function]	count=1
function	to display the ||| to	count=1
module	which is the horizontal ||| 31	count=1
module	a ||| 6	count=3
function	closes a ||| notifications close	count=1
function_arg	[function_1] with ||| [arg_2] [function_1]	count=1
arg	the prop ||| prop object limit	count=1
arg	handle ||| handle	count=1
module	is the ||| 5	count=1
function	:stipple ||| stipple	count=1
function	a sexp ||| parse partial sexp	count=1
module	syntax ||| 34 7	count=1
function	frame to its buffer ||| frame to	count=1
arg	value—or [arg] if key ||| [arg]	count=1
function	a window at the ||| at	count=1
arg	each hook function ||| hook args	count=4
function_arg	[function_1] propname ||| [function_1] char [arg_2]	count=2
module	of numbers ||| 4	count=1
module	and return that object ||| 6	count=1
arg	variable var as ||| var	count=1
arg	regular expression regexp ||| regexp	count=3
function_arg	[function_1] n is ||| [arg_2] [function_1]	count=2
arg	binding for ||| binding	count=2
function_arg	[function_1] [arg_2] ||| [function_1] keymap [arg_2]	count=6
function	to the right ||| scroll right	count=1
module	this function sends ||| 36	count=1
arg	lisp representation of a ||| omit-port	count=1
module	function returns the ||| 34 8	count=1
arg	of this string ||| string	count=1
function	signal ||| process	count=1
function	existing ||| pop up	count=1
arg	cdr ||| cdr	count=1
function	just inserted ||| and	count=1
module	is non-nil ||| 27 5	count=1
arg	if n is ||| n wrap	count=2
module	into a key ||| 21	count=1
function	reads ||| file	count=1
function	a new frame ||| other frame	count=1
function	this function appends the ||| append	count=1
function	mode ||| mode	count=5
function_arg	variable [arg_2] ||| [arg_2] [function_1]	count=2
function	description ||| description	count=1
arg	selects frame raises ||| frame norecord	count=1
arg	a single-character answer in ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
function	[function_1] abbrev table ||| [function_2] [function_1]	count=4
function	[function_1] [function_2] by the current buffer ||| clear [function_2] [function_1] modtime	count=3
arg	n items ||| n	count=1
function_arg	fontset [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	the shell [arg_2] ||| [function_1] [arg_2]	count=2
module	an ||| 27	count=1
module	limits of ||| 2.3	count=2
function_arg	beginning or end of [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	[function_1] attributes ||| [function_2] [function_1]	count=11
module	window to make ||| 27	count=1
function	calls its argument ||| table	count=1
function	rehash threshold ||| hash table rehash threshold	count=1
function	like next-single-property-change except that ||| next single char	count=1
function	for print-length and print-level ||| length	count=1
function	function returns a frame ||| frame	count=1
function	[function_1] the window ||| [function_2] [function_1] predicate predicate	count=2
module	frames and tries ||| 28	count=1
function	function for each ||| map char table	count=1
arg	in object if ||| object	count=1
function	reads abbrev ||| read abbrev	count=2
module	function calls ||| 6	count=2
module	than 0 point-min ||| 1	count=1
function	a ||| map char	count=1
function	if ||| p	count=2
function	window’s value for ||| parameter	count=1
function	define the ||| define	count=1
function	function compares two window ||| compare window	count=1
function	your ||| save list file	count=1
module	in ||| 8	count=2
module	function returns the ||| 8	count=2
function	threshold ||| threshold	count=1
arg	to end ||| end highest	count=1
function	function to ||| function	count=1
arg	bold-p is nil ||| bold-p	count=1
function	greater than ||| buffer end	count=1
module	means display-buffer may ||| 27 14	count=1
function	this variable ||| ring	count=1
function	window’s header ||| window header	count=1
function	property ||| symbol plist	count=1
arg	years days hours ||| format-string	count=1
function	single character ||| char	count=1
function	text between positions ||| region	count=1
function_arg	[function_1] [arg_2] ||| [function_1] obsolete face alias [arg_2]	count=4
module	[module_1] is ||| [module_2] [module_1] cadr cons-cell	count=1
function	newest [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] a directory ||| [function_2] [function_1]	count=3
arg	[arg] order ||| [arg]	count=2
function	change is found ||| change	count=3
function	this function creates a ||| make	count=1
arg	the parameter parameter a ||| parameter	count=2
function	already set it ||| save list file	count=1
function	displayed in the selected ||| same	count=1
module	spaces and ||| 31 7	count=2
function	beginning [function_2] ||| [function_1] [function_2]	count=4
function_arg	sentinel [arg_2] ||| [function_1] [arg_2]	count=1
function	the status ||| status	count=1
function	table otherwise ||| table	count=1
function	on a link ||| mouse on link	count=3
module	to ||| 27	count=2
function	this variable is ||| mark	count=1
function_arg	[function_1] by handle ||| [function_1] [arg_2]	count=1
arg	position pos in the ||| pos	count=2
arg	bitmap bitmap [arg_2] ||| [arg_2] [arg_1]	count=1
arg	to filename named newname ||| filename newname ok-if-exists	count=1
function	the line number in ||| line number at	count=1
function	sets the :weight ||| set	count=1
module	before an error is ||| 9 5	count=1
module	this function returns ||| 38 3	count=1
function	a frame to ||| frame to	count=1
function	next ||| window next	count=1
arg	map for key with ||| key	count=1
module	non-nil that means display-buffer ||| 27 14	count=1
arg	internet address vector ip ||| ip	count=1
function	[function] the ||| read shell [function]	count=1
function	in ||| pop	count=1
module	activations of the ||| 19 13	count=1
function_arg	[function_1] of symbol ||| [arg_2] [function_1]	count=3
module	file names ||| 24 9	count=1
function	function for each element ||| char	count=1
function	table in ||| table	count=1
function	separate pages ||| page delimiter	count=1
arg	according to the specified ||| keyword-args	count=1
arg	is like read-key-sequence except ||| prompt continue-echo dont-downcase-last switch-frame-ok command-loop	count=1
function	buffer ||| buffer	count=22
module	yank-handler [module] property ||| [module] 8.3	count=1
module	this function converts ||| 21 1	count=1
function	bottom of the selected ||| bottom	count=1
module	scans ||| 19.3	count=2
function	current buffer [function_2] ||| [function_1] [function_2]	count=1
arg	array bindat-raw according to ||| bindat-raw bindat-idx	count=1
function	determine a [function] ||| [function]	count=1
function	just one [function] does ||| [function]	count=1
function	object using the minibuffer ||| minibuffer	count=1
arg	a function fn ||| fn	count=1
arg	function in ||| args	count=1
function	display-table ||| display table slot	count=2
arg	and args ||| args	count=1
arg	directory names as completion ||| prompt directory	count=1
function	fit by ||| fit frame to	count=1
function	in ||| completion in	count=1
function	sets the :weight ||| set face	count=1
function	debug-on-exit flag of the ||| backtrace	count=1
function_arg	overlay [arg_2] ||| [function_1] overlay prop [arg_2]	count=1
function	non-nil based ||| list	count=1
function	of a directory that ||| directory	count=1
function	s to dashed-words ||| s dashed words	count=1
function	list of directories for ||| path	count=1
function	it non-nil ||| auto	count=1
function	this deletes ||| ewoc delete	count=1
function_arg	[function_1] in sequence ||| [function_1] [arg_2]	count=3
module	entire contents are accessible ||| 29	count=1
function	this function ||| minibuffer	count=1
function	representing frame’s current ||| current	count=1
function	returns the standard case ||| standard case	count=1
function_arg	[function_1] table ||| [function_1] count [arg_2]	count=1
function	each element ||| char	count=1
function	function converts a symbolic ||| file modes symbolic	count=1
arg	strings ||| strings paren	count=1
function_arg	[function_1] of charset ||| [arg_2] [function_1]	count=1
module	debugger each time ||| 17	count=1
module	if ||| 31 1	count=2
arg	dirname [arg_2] ||| [arg_1] [arg_2]	count=1
arg	fn ||| fn	count=13
arg	count ||| count window	count=1
module	this returns the ||| 20 7.13	count=1
function	network ||| format network	count=1
module	of the first ||| 31 17.1	count=1
arg	function reads a ||| prompt	count=1
arg	new-pos that ||| new-pos	count=1
function	current major mode ||| mode	count=1
module	keymap ||| 21 11	count=1
function	retrieves a resource ||| resource	count=1
function	file ||| file	count=16
module	this function converts the ||| 34 8	count=1
function	[function_1] [function_2] ||| [function_1] lisp eval [function_2]	count=16
module	if ||| 25 2	count=2
function	name ||| save list file	count=1
arg	the message ||| message level	count=1
module	function returns ||| 6	count=5
module	the current line ||| 31 17.1	count=1
function	tool bar ||| tool bar	count=1
function	appends the contents ||| append to	count=1
function	counts the number of ||| count	count=1
module	greater ||| 1	count=1
function	name with the ||| name	count=1
function	lines in the ||| lines	count=2
function	your init file ||| auto save	count=1
arg	to coding-system ||| coding-system nocopy buffer	count=1
function	list specifying ||| prev buffers	count=1
module	not already set ||| 2	count=1
module	for encoding terminal ||| 32 10.8	count=1
arg	new in list ||| new list	count=3
arg	newname ||| newname unique	count=1
module	all expressions ||| 2.16	count=1
function	string of syntax class ||| skip syntax	count=1
module	a ||| 19 13	count=2
function	and their values ||| parameters	count=2
function	a backup ||| backup	count=1
function	the acl for ||| file acl	count=1
module	non-nil based on this ||| 2	count=1
function	frame configuration list ||| current frame configuration	count=2
function	inserts [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] supertype ||| [function_1] p type [arg_2]	count=2
function	the query flag ||| process query on exit	count=1
function	id ||| auto save list file	count=1
function	the end of the ||| end of	count=2
function	throw ||| throw	count=1
function	or least recently-used ||| display buffer pop up	count=1
function	[function_1] value ||| [function_2] [function_1]	count=1
arg	and one lower ||| uc lc case-table	count=1
module	list of file names ||| 24	count=1
function	screens associated with ||| screens	count=1
module	an ||| 27 14	count=2
function	[function] sentence ||| [function]	count=1
module	the first ||| 31 17.1	count=1
module	function returns the ||| 36 6	count=3
function	[function_1] screen ||| [function_1] [function_2]	count=4
function	file it ||| file	count=1
module	input method [module] an input ||| [module]	count=1
arg	filename into ||| filename	count=1
arg	alias it looks in [arg_1] [arg_2] actual ||| [arg_2] [arg_1]	count=4
function	the current buffer to ||| to	count=1
function	[function_1] input method ||| [function_1] [function_2]	count=3
function	[function_1] just ||| [function_1] [function_2]	count=4
arg	[arg_1] [arg_2] and ||| [arg_1] [arg_2]	count=6
function	inserts ||| ring insert	count=1
function	this ||| not	count=1
function	new marker that points ||| marker	count=1
function	this ||| signal	count=1
function	[function_1] syntax ||| [function_1] [function_2]	count=2
arg	where pred item is ||| pred	count=1
arg	by menu ||| doc menu	count=1
function_arg	[function_1] to end ||| [function_1] start [arg_2]	count=1
function	reads the name of ||| read	count=1
function	height and width ||| height	count=1
function	nonnegative integer ||| minibuffer	count=1
arg	of string ||| process string	count=1
function_arg	[function_1] of face ||| [function_1] [arg_2]	count=9
function	is like next-single-property-change except ||| next single char property	count=1
function	eval-expression ||| eval expression print	count=1
arg	sig and exponent exp ||| sig exp	count=1
function	[function_1] flag of ||| [function_2] [function_1]	count=4
module	years ||| 38	count=1
function	of coding [function_2] ||| [function_1] [function_2]	count=12
function	file name to ||| auto save file name	count=1
function	name and process id ||| file	count=1
function	left ||| to left	count=1
function	order to trigger another ||| gc cons threshold	count=1
function	display buffers by ||| pop up	count=1
function	the region ||| decode region	count=1
arg	object rather than nil ||| object limit	count=1
arg	[arg] and ||| n [arg]	count=1
arg	waiting and returns default ||| default	count=1
arg	only [arg_2] ||| [arg_1] [arg_2]	count=4
function	the wildcard ||| wildcards	count=1
function	convert s to uppercamelcase ||| s upper camel case	count=1
arg	object1 and [arg_2] ||| 2 7 equal [arg_1] [arg_2]	count=1
arg	pop-up menu ||| menu	count=1
function	backup files by copying ||| backup by copying	count=1
arg	key much as ||| key	count=1
function	[function_1] keymap ||| [function_1] [function_2]	count=5
arg	[arg_1] using collection ||| [arg_1] [arg_2]	count=2
function	are t in ||| count population	count=1
arg	from to index ||| from &optional to	count=1
arg	filename ||| filename visit beg end replace	count=1
function	minibuffer window is in ||| minibuffer auto	count=1
module	point is at the ||| 31 1	count=2
function	window and nil otherwise ||| window	count=1
function	prefix adding the ||| file prefix	count=1
function	init file it initializes ||| auto save list file	count=1
module	of the first nonblank ||| 31	count=1
function	inserts the ||| format insert	count=1
module	for auto-saving ||| 25	count=1
module	measured ||| 28 3.4	count=3
function	this function calls ||| char table	count=1
module	is non-nil display-buffer ||| 27	count=1
function	after ||| list	count=1
module	displays [module] description ||| 4 [module]	count=1
function	“logical and” of the ||| logand	count=1
module	its argument function for ||| 6	count=2
function	function sets the ||| set window	count=1
function	string in the ||| to string	count=1
arg	in arguments ||| arguments	count=1
module	active keymaps ||| 21	count=1
arg	according to format format ||| format beg	count=1
arg	if flag ||| flag	count=1
module	standard ||| 4 9	count=1
function	recording undo information for ||| undo	count=1
module	integer ||| 19 13	count=2
function	[function_1] [function_2] ||| [function_1] follows [function_2]	count=2
function	[function_1] between positions ||| [function_2] [function_1]	count=1
module	id ||| 2	count=1
function	buffer’s auto-save [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] file [function_1]	count=6
module	the limits of the ||| 2.3	count=2
function	[function_1] status of ||| [function_1] [function_2]	count=2
function	after emacs ||| auto save list	count=1
module	making new ||| 27	count=1
module	non-nil ||| 27 14	count=4
function	table ||| table from	count=1
function	for displaying ||| up windows	count=1
module	the first nonblank ||| 31 17.1	count=1
function	[function] for ||| global [function]	count=3
function	in the usual ||| to	count=1
function_arg	keyboard input [arg_2] ||| [arg_2] [function_1]	count=1
function	and process ||| auto save list file	count=1
function	new abbrev [function] containing ||| abbrev [function]	count=1
module	etc ||| 38	count=1
function	[function_1] limit for ||| [function_1] [function_2]	count=2
module	already set it non-nil ||| 25	count=1
arg	[arg_1] is negative ||| [arg_1] [arg_2]	count=1
function	have ||| auto save list file	count=1
function	this command displays ||| describe	count=1
arg	in object ||| prop object	count=1
arg	of fn ||| fn	count=1
function	horizontal position of ||| current	count=1
function	the current major mode ||| mode	count=1
module	this function ||| 36 8	count=1
module	variable is ||| 11	count=1
arg	references in filename with ||| filename	count=1
function	function returns a frame ||| current frame	count=1
function	it initializes auto-save-list-file-name if ||| auto save list file	count=1
arg	function defines ||| docstring interactive type	count=1
function	first nonblank character ||| current	count=1
function_arg	[function_1] [arg_2] ||| [function_1] regexp rep string [arg_2]	count=2
function	all expressions debugged ||| edebug	count=1
function	buffers ||| pop	count=1
arg	to table ||| table	count=1
function_arg	text between [arg_2] ||| [arg_2] [function_1]	count=1
function	actual [function_2] ||| [function_2] [function_1]	count=3
function	function [function] ||| [function]	count=3
module	by making ||| 27	count=1
arg	string2 [arg_2] ||| [arg_2] [arg_1]	count=1
function	dimensions ||| mm dimensions	count=1
module	is set in ||| 8	count=1
function	reports the current insertion ||| marker insertion	count=1
module	calls its ||| 6	count=2
function	text as [function_2] ||| [function_1] [function_2]	count=4
function	a frame ||| frame	count=2
arg	dom into the ||| dom	count=1
function	copy of ||| copy	count=2
arg	byte array bindat-raw ||| bindat-raw	count=1
arg	the function obsolete-name ||| obsolete-name	count=1
module	tool ||| 21 17.6	count=1
module	determines whether files ||| 24 2	count=1
function	was called ||| called	count=1
function	initializes auto-save-list-file-name ||| file	count=1
module	specified by ||| 31 19.9	count=3
function	a list of face ||| font face	count=1
function	point a description of ||| description	count=1
module	is the name of ||| 6	count=1
module	new [module] spec using ||| [module]	count=1
function	this ||| map	count=1
function	on ||| auto save list	count=1
arg	a symbol of frame ||| frame	count=1
function	the selected frame ||| selected frame	count=2
function	standard category ||| standard category	count=2
function	given registry ||| registry alternatives	count=2
arg	[arg_1] inverse-video-p ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] count ||| [function_1] [arg_2]	count=2
module	window’s value ||| 25	count=1
arg	to underline ||| underline frame	count=1
module	split an ||| 27 14	count=1
function	[function_1] type ||| [function_1] [function_2]	count=4
module	[module_1] [module_2] the same as (car ||| [module_2] [module_1] cadr cons-cell	count=1
module	display-buffer is ||| 14	count=1
function	if ||| when	count=1
module	the current line which ||| 31	count=1
arg	normal [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	the subtype symbol of ||| table subtype	count=1
function	keep indicating [function_2] ||| [function_2] [function_1]	count=2
module	containing all the elements ||| 6 5	count=1
module	to split an existing ||| 14	count=1
module	variable is non-nil the ||| 5	count=1
function	[function] specifying default ||| default frame [function]	count=3
arg	key much ||| key	count=1
module	value of this variable ||| 30	count=1
function	returns the indentation ||| current indentation	count=1
function	before or after ||| before	count=1
arg	call fun on ||| fun	count=1
arg	are consistent with ||| command icon map props	count=1
function	an existing window to ||| pop	count=1
function	of justification to use ||| default justification	count=1
function	sign ||| copysign	count=1
arg	data ||| data	count=1
module	so that ||| 29 4	count=1
function_arg	modifiers that event ||| event modifiers event	count=1
function	stores value as the ||| plist put	count=1
arg	this command fills each ||| end justify citation-regexp	count=1
rep	activates [function_arg_2] ||| [module_1] [function_arg_2]	count=4
function	displaying ||| pop up windows	count=1
module	of [module] and buffers ||| [module]	count=1
function_arg	[function_1] window to ||| [function_1] [arg_2]	count=2
module	not already set it ||| 25	count=1
module	all expressions debugged ||| 17 2.16	count=1
function	of this variable ||| mark ring	count=1
arg	with font-spec for the ||| font-spec frame	count=1
function_arg	[function_1] filename to ||| [arg_2] [function_1]	count=8
function	command inserts the contents ||| insert file	count=1
function	[function_1] system which ||| [function_2] [function_1]	count=1
function	sets the ||| set left	count=1
module	the ||| 31 17.1	count=8
module	the ||| 14	count=2
function	currently visible on ||| pos visible in	count=1
arg	[arg] grouped into ||| n step [arg]	count=3
function	initial ||| initial	count=2
function	the dimensions ||| mm dimensions alist	count=1
function	be fit by ||| fit	count=1
function	of activations of the ||| minibuffer	count=1
function	[function_1] translation ||| [function_1] [function_2]	count=1
function	[function_1] edit ||| [function_2] [function_1]	count=2
function	the state ||| state	count=1
function	mouse ||| mouse	count=3
arg	bindat-raw according [arg_2] ||| [arg_2] [arg_1]	count=2
module	after emacs reads your ||| 25 2	count=1
function	gives it ||| setq	count=1
function	[function_1] mode for ||| [function_1] initial [function_2]	count=1
module	or deleting other windows ||| 27	count=1
function	whose syntax classes ||| syntax	count=1
module	that means ||| 14	count=1
function	emacs ||| save list file	count=1
function_arg	syntax classes [arg_2] ||| [function_1] [arg_2]	count=1
module	the result a ||| 1	count=1
module	this function returns the ||| 26 3	count=1
arg	filename ||| filename visit beg end	count=1
module	file file converting it ||| 12.2	count=1
function	at ||| buffer at	count=1
arg	or vector key to ||| key	count=1
arg	beg and end ||| beg end translation	count=1
arg	position in object ||| object limit	count=1
module	is ||| 16	count=1
function	make it ||| make variable buffer	count=1
function_arg	[function_1] its descriptor ||| [function_1] [arg_2]	count=1
function	emacs ||| auto	count=1
module	buffers by making ||| 27 14	count=1
module	this variable is non-nil ||| 5	count=1
arg	the only ||| no-mini	count=1
function	function sets the selinux ||| set file selinux	count=1
arg	providing completion ||| predicate require-match initial history default	count=1
module	[module_1] function ||| [module_1] [module_2] downcase	count=1
arg	name to use the ||| name	count=1
module	set it ||| 25 2	count=1
function	return the actual ||| actual	count=1
function	[function] using ||| [function] interactively p	count=3
function	point to the ||| goto	count=1
arg	each item in list ||| list	count=1
function	process id ||| auto save list file	count=1
arg	in list satisfying the ||| pred list	count=1
function	and process ||| list file	count=1
function	directory dir or in ||| directory	count=1
function	inactive ||| inactive	count=1
function	to tab in most ||| indent for tab	count=1
function	the x ||| x	count=2
function	the combination ||| window combination	count=1
function	to the left margin ||| to left margin	count=1
function_arg	return the [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
module	this ||| 38 7	count=2
module	names that ||| 24	count=1
module	existing window ||| 14	count=1
function	symbolic file ||| file modes symbolic	count=1
function	of this ||| ring	count=1
function	the key [function_2] ||| [function_1] [function_2]	count=7
module	sends ||| 36	count=1
function	[function_1] flag ||| [function_2] [function_1]	count=4
function	[function_1] and buffer-local ||| [function_2] [function_1]	count=2
function	function returns the xlfd ||| xlfd	count=1
function	if ||| save list file	count=1
function	buffer-or-name ||| pop to buffer	count=1
function	a keymap nil otherwise ||| keymapp	count=1
function	[function_1] color ||| [function_2] [function_1]	count=2
function	prefix ||| describe prefix	count=1
module	may display buffers ||| 27	count=1
arg	default ||| default	count=2
module	position ||| 31	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] start end prop [arg_2]	count=2
arg	except that x ||| frame x	count=1
function	[function_1] status ||| [function_1] [function_2]	count=2
arg	named ||| props	count=1
module	a list of ||| 6.6	count=1
function	of active ||| active	count=1
function	minibuffer contents [function] is not ||| minibuffer complete [function]	count=1
module	each element ||| 6	count=2
function	the left margin of ||| left margin	count=1
module	files can be ||| 24	count=1
function	the total [function_2] ||| [function_2] [function_1]	count=2
module	a string of years ||| 7	count=1
function	header line to allow ||| header	count=1
function	string the text ||| string	count=1
function	to a time ||| seconds to	count=1
function	calls ||| char table	count=2
module	be a [module] ||| [module] 8	count=1
arg	list signature [arg_2] ||| [arg_1] [arg_2]	count=2
module	stores ||| 12 8	count=1
function	returns the [function] ||| [function]	count=1
function	window as dedicated to ||| set window dedicated	count=1
function	[function_1] from the ||| [function_1] [function_2]	count=3
arg	string ||| string &optional	count=1
function	name and ||| save list	count=1
module	must be allocated ||| e	count=1
function	face text property ||| face text property	count=1
function_arg	[function_1] a ||| [arg_2] [function_1]	count=4
function_arg	[function_1] fun ||| [function_1] [arg_2]	count=2
function	the host name ||| save list file	count=1
arg	items of list ||| list	count=1
function	by copying for files ||| by copying	count=1
arg	or byte array bindat-raw ||| bindat-raw bindat-idx	count=1
function	to titleized ||| titleized	count=1
function	the default ||| abbrev	count=1
arg	hook with ||| hook	count=1
function_arg	[function_1] filename into ||| [function_1] [arg_2]	count=2
arg	[arg_1] limit ||| [arg_2] [arg_1]	count=2
function	forward ||| forward sexp	count=1
module	this function sets ||| 34 3	count=1
module	in the ||| 8	count=1
function	the directory named ||| copy directory	count=1
module	return a list of ||| dash	count=3
function	face [function_1] [function_2] ||| face [function_1] [function_2]	count=1
module	if this variable ||| 11	count=1
arg	old with new in ||| old new	count=1
function	parses a sexp ||| partial sexp	count=1
function	system ||| system	count=5
function	when a new ||| new	count=1
function	the startup [function_2] ||| [function_1] [function_2]	count=4
arg	menu and ||| menu	count=1
function	[function_1] style symbols ||| [function_1] [function_2]	count=1
arg	[arg_1] to inverse-video-p ||| [arg_2] [arg_1]	count=1
module	of the first nonblank ||| 17.1	count=1
module	of ||| 4 5	count=2
function	to ||| float	count=1
function_arg	[function_1] [arg_2] string containing the characters ||| [function_1] [arg_2]	count=1
function	function returns the sentinel ||| process sentinel	count=1
module	directory names ||| 24	count=1
arg	var as a ||| var	count=1
module	auto-save-list-file-name if ||| 25	count=1
function	body height or body ||| body size	count=1
arg	input events in sequence ||| sequence prefix	count=1
function	appends the text ||| append	count=1
function	returns the sentinel ||| sentinel	count=1
arg	screen line count ||| count window	count=1
function	syntax classes are ||| syntax	count=1
function	change [function_2] ||| [function_1] [function_2]	count=4
arg	integers that [arg_2] ||| [arg_1] [arg_2]	count=3
function	function creates ||| hash	count=1
arg	l and r ||| l r	count=1
function_arg	image specifications specs ||| find image specs	count=1
function	moves window’s bottom edge ||| window trailing edge	count=1
function	minibuffer text ||| minibuffer	count=1
function	a window at ||| display buffer at	count=1
function	a string made up ||| make string	count=1
function	[function_1] object ||| [function_2] width [function_1]	count=2
function	the subtype symbol of ||| subtype	count=1
module	value ||| 7	count=1
module	events for this-command-keys to ||| 20 5	count=1
function	of the change ||| change	count=1
module	and process ||| 2	count=1
function	it will make it ||| buffer	count=1
function	[function_1] window ||| [function_2] [function_1]	count=13
arg	a ||| a	count=1
function	a sentence ||| sentence	count=1
function	0 point-min otherwise ||| buffer	count=1
module	[module_1] option specifies ||| [module_1] [module_2]	count=2
function	margins of ||| margins	count=1
function	returns the ||| end	count=1
module	a marker nil ||| 30 2	count=1
function	the emacs-recognized extended ||| extended	count=2
function	non-nil based on this ||| auto save list	count=1
function	[function_1] a user ||| [function_1] [function_2] about supersession threat	count=3
function	current buffer between positions ||| region	count=1
function_arg	[function_1] n of ||| [arg_2] [function_1]	count=7
rep	returns a [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	files ||| files	count=1
function	number [function_2] ||| [function_2] [function_1]	count=4
function	in the usual dotted ||| bindat ip to	count=1
arg	start to [arg_2] ||| [arg_1] [arg_2]	count=8
arg	to stream ||| stream	count=1
function	converts a symbolic file ||| modes symbolic	count=1
function	a description [function_2] ||| [function_2] table [function_1]	count=1
function_arg	existing fontset [arg_2] ||| [function_1] font [arg_2]	count=4
arg	n-sized sublists [arg] ||| [arg]	count=1
function	value ||| mark ring	count=1
function	greater than 0 point-min ||| buffer	count=1
function	[function_1] single paragraph ||| [function_1] [function_2]	count=1
function	have not already set ||| save list	count=1
arg	signal to ||| signal	count=1
module	several frames and several ||| 28 23	count=1
function	simple cases ||| simple	count=1
module	[module_1] that would ||| [module_1] [module_2]	count=2
arg	[arg_1] and pushes ||| [arg_1] [arg_2]	count=3
function	nil switch-to-buffer displays ||| buffer preserve window	count=1
function	area [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] in sequence ||| [arg_2] [function_1]	count=3
function	function for ||| char table	count=1
function	two window [function_2] ||| [function_2] [function_1]	count=4
function	it initializes ||| list file	count=1
arg	[arg] grouped ||| n [arg]	count=5
function	[function_1] user ||| [function_2] [function_1]	count=6
arg	corresponding to time ||| time	count=1
function	[function_1] field ||| [function_2] [function_1]	count=8
function	current ||| types	count=1
function	destroy the fringe ||| destroy fringe	count=2
function	the binding ||| key binding	count=3
function	years ||| seconds	count=1
arg	collection will ||| collection	count=1
function	as a [function_2] ||| [function_1] [function_2]	count=1
function	a display ||| display buffer	count=1
function_arg	[function_1] for filename ||| [arg_2] [function_1]	count=5
module	may ||| 27	count=1
module	description ||| 21.2	count=1
module	for reading keyboard ||| 12.1	count=1
function_arg	[function_1] name in ||| [function_1] abbrev-table [arg_2] expansion	count=2
function	tests coverage of ||| test coverage	count=1
function	have not already set ||| list file	count=1
function_arg	this [function_1] [arg_2] stored in ||| [function_1] [arg_2]	count=3
module	is non-nil ||| 27 14	count=2
function_arg	[function_1] count lines ||| [arg_2] [function_1]	count=1
function	the truename ||| file truename	count=1
function	a floating-point number of ||| float	count=1
function_arg	resource [arg_2] ||| [function_1] [arg_2]	count=3
function	the fringe ||| fringe bitmap	count=1
function	function inserts ||| insert	count=3
arg	for regular expression ||| regexp	count=1
arg	it ||| initial history default	count=1
arg	n is [arg_2] ||| [arg_2] [arg_1]	count=1
function	is nil switch-to-buffer ||| switch to buffer preserve	count=1
function	space ||| space	count=2
function	the coding system to ||| coding system	count=2
function	value of ||| mark ring	count=1
arg	normal arguments to fn ||| fn &rest	count=1
function	function puts the ||| put	count=1
function	as xml ||| parse xml	count=1
function	[function_1] [function_2] ||| [function_1] extended [function_2]	count=1
function_arg	[function_1] with prompt ||| [function_1] with preview [arg_2]	count=1
function	parent ||| parent	count=4
function	the overlay [function_2] ||| [function_2] and [function_1]	count=1
function	frame ||| frame parameter	count=1
module	function returns t ||| 31 1	count=2
function	list buffer ||| list init	count=1
module	converting it ||| 24 12.2	count=1
function	this function calls its ||| table	count=1
arg	in position as ||| position	count=2
function_arg	pid [arg_2] ||| [function_1] [arg_2]	count=1
function	symbol ||| defvaralias	count=1
function	the editable contents of ||| delete minibuffer contents	count=1
function	position of the first ||| current	count=1
function	turn passing it the ||| with	count=1
function	across characters whose syntax ||| skip syntax	count=1
function	the base [function_2] ||| [function_2] [function_1]	count=2
function	window’s ||| window parameter	count=4
function	is nil switch-to-buffer displays ||| buffer preserve	count=1
arg	before for previous-button ||| count-current	count=1
function	the backing ||| backing	count=1
arg	prompt and providing ||| prompt initial history	count=1
function	after emacs reads ||| file	count=1
function	mode is enabled ||| mode	count=1
function_arg	[function_1] [arg_2] ||| [function_1] region start [arg_2]	count=5
arg	according to coding-system ||| coding-system	count=1
arg	it through ||| &rest more	count=1
function	marks window as dedicated ||| window dedicated	count=1
arg	[arg_1] to flag ||| [arg_2] [arg_1]	count=3
module	the first ||| 17.1	count=1
function	[function] using call-interactively ||| [function] interactively p	count=3
function	day number within ||| time to day in	count=1
function_arg	[function_1] of text-coding ||| [function_1] eol-coding [arg_2]	count=4
function	history element that completes ||| complete history element	count=1
function	number of color ||| display color	count=1
module	each element of ||| 6 6	count=1
function	a region ||| region	count=1
function	elements that are t ||| population	count=1
arg	property in symbol’s property ||| symbol property	count=1
function_arg	of image [arg_2] ||| [function_1] [arg_2]	count=1
arg	with process to buffer ||| process buffer	count=1
module	the elements ||| 5	count=1
function	making new ||| pop	count=1
module	key sequence ||| 21	count=1
arg	[arg_1] [arg_2] ||| [arg_1] frame [arg_2]	count=1
arg	the text properties properties ||| properties	count=1
module	file converting it ||| 24 12.2	count=1
module	returns the ||| 6	count=4
arg	fun ||| fun	count=4
function	property value ||| property	count=1
module	this function ||| 25	count=1
function	of the next ||| next	count=1
arg	from ||| from	count=2
module	variable ||| 27 14	count=4
function	command inserts the ||| format insert file	count=1
module	the [module] start ||| [module]	count=1
module	this ||| 4	count=4
function	the default file ||| default file	count=2
function_arg	[function_1] a ||| [function_1] population [arg_2]	count=4
module	of [module] ||| [module]	count=6
function	vector ||| kbd	count=1
arg	number converted to ||| number	count=1
arg	[arg_1] to type ||| [arg_1] [arg_2]	count=3
function	removes left margin indentation ||| delete to left margin	count=1
function	the dimensions ||| display mm dimensions	count=1
function	reads ||| hack dir local variables	count=1
arg	and suffix ||| suffix	count=2
function	the style of justification ||| justification	count=1
function	string the ||| string	count=1
function	given registry is ||| registry alternatives	count=2
function	a backup [function_2] ||| [function_1] [function_2]	count=1
function	list of all ||| all	count=1
function	[function_1] [function_2] ||| [function_2] p [function_1]	count=2
function	[function] for ||| small temporary [function]	count=3
module	return a sequence ||| dash	count=1
module	this function returns t ||| 31 1	count=2
arg	of process to flag ||| process flag	count=1
module	the minibuffer ||| 19	count=1
module	elements ||| 6 1	count=1
arg	[arg_1] properties props ||| [arg_1] [arg_2]	count=1
function	the right ||| right	count=2
function	of the ||| current	count=2
arg	in the prop ||| prop object	count=1
arg	sequence the results ||| sequence	count=1
arg	n-arity function [arg] a ||| [arg]	count=1
function	ask a [function_2] ||| [function_2] [function_1]	count=1
function	registry is specified ||| registry	count=1
module	the [module] of ||| [module] 2	count=1
function	frame’s current window configuration ||| current window configuration	count=1
arg	[arg_1] property list ||| [arg_2] [arg_1]	count=3
module	global ||| 21 15	count=1
function	based on ||| save	count=1
module	of the minibuffer ||| 19 13	count=1
arg	function symbol ||| symbol function	count=2
function_arg	paragraph [arg_2] ||| [function_1] [arg_2] end justify nosqueeze squeeze-after	count=1
arg	for parameter ||| window parameter	count=1
function	stores value as ||| put char code	count=1
function	this sets the :underline ||| set face underline	count=1
function	this ||| end	count=2
function	function kills ||| kill	count=2
module	returns a list ||| 24 6.4	count=1
module	corresponding ||| 37 12.12	count=2
module	this returns ||| 7	count=1
module	thrown away ||| 8.6	count=1
module	returns ||| 36 6	count=6
function	it initializes auto-save-list-file-name ||| file	count=1
function	at ||| at	count=3
function	backup versions ||| versions	count=1
function_arg	modification times [arg_2] ||| [function_1] [arg_2]	count=3
function	function inserts the contents ||| insert file contents	count=1
arg	[arg_1] but does ||| [arg_2] [arg_1]	count=4
function	and the rest to ||| capitalize	count=1
function	and the text ||| change text	count=1
arg	separation and ||| separation	count=1
function	fringe ||| fringe	count=2
function	remove whitespace at the ||| trim right	count=1
function	this function converts ||| kbd	count=1
function	leap ||| leap	count=1
function	to ||| to buffer	count=2
function_arg	the x [arg_2] ||| [arg_2] [function_1]	count=1
function	the visibility status ||| visible p	count=1
function	inserts a ||| insert	count=2
function_arg	buffer forward [arg_2] ||| [function_1] [arg_2]	count=3
function	below the ||| buffer below	count=1
arg	end using ||| end delete	count=1
function	function returns the indentation ||| current indentation	count=1
function	[function_1] the field ||| [function_2] [function_1]	count=12
module	and returns ||| 7	count=2
function_arg	function [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] from beg ||| [arg_2] [function_1]	count=14
function	the query flag ||| process query on exit flag	count=2
function	startup echo area message ||| startup echo area message	count=1
function	[function_1] area message ||| [function_1] [function_2]	count=5
arg	preds [arg_2] ||| [arg_2] [arg_1]	count=2
function	package ||| package	count=2
module	after emacs reads your ||| 25	count=1
module	ending ||| 20 7.13	count=2
arg	filename [arg_2] ||| [arg_2] [arg_1]	count=7
arg	a and b ||| b	count=1
function	[function] on frame ||| [function] visible p	count=2
arg	format format ||| file format	count=1
arg	[arg] instead ||| [arg] object	count=1
function	display-buffer may display buffers ||| pop up	count=1
function	makes backups by ||| backup by	count=4
function	this function sets ||| set process	count=2
module	returns ||| 27	count=1
module	returns ||| 3 5	count=2
function_arg	from vec ||| from vector vec	count=1
function	returns the query ||| process query on exit	count=1
function	sets ||| set face	count=4
arg	from beg to end ||| beg end	count=3
arg	variable custom-theme-load-path ||| no-confirm no-enable	count=1
function	removes left ||| delete to left	count=1
function	replaces ||| regexp in	count=1
function	nearest ||| round	count=1
function	an array ||| arrayp	count=1
arg	of string as standard ||| process string	count=1
module	decoded text ||| 31 24	count=1
arg	of old with ||| old	count=1
function	position of ||| event end	count=1
function	in directory dir or ||| in directory	count=1
module	set it ||| 25	count=1
module	containing all ||| 6 5	count=1
function	contents of extra slot ||| char table extra slot	count=1
function	parses a sexp ||| sexp	count=1
arg	according ||| keyword-args	count=1
module	variable ||| 30 7	count=2
function	init file it initializes ||| save list	count=1
arg	grammar [arg] ||| [arg]	count=3
arg	[arg] stored in ||| place [arg]	count=3
module	programs and ||| 30 7	count=1
arg	defines the ||| docstring interactive type	count=1
module	of activations of the ||| 19 13	count=1
arg	down to len ||| len s	count=1
function	the ending position of ||| event	count=1
arg	[arg_1] and y ||| set mouse pixel position [arg_1] [arg_2]	count=5
function_arg	vector [arg_2] ||| [function_1] population [arg_2]	count=1
function	function removes ||| remove	count=1
function	appends ||| append	count=2
function	positive infinity ||| ceiling	count=1
arg	item ||| item	count=1
function_arg	name [arg_2] ||| [function_1] [arg_2]	count=3
function	always returns the key ||| key	count=1
module	auto-save-list-file-name ||| 25	count=1
function	sets the parent keymap ||| set keymap parent	count=1
function	defines ||| define	count=3
function	set it ||| auto save list	count=1
function	graphic display capable of ||| display graphic	count=1
function	init file it ||| file	count=1
function	to specify the dimensions ||| mm dimensions alist	count=1
function	be fit by fit-frame-to-buffer ||| fit frame to buffer	count=1
rep	is [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	means display-buffer may ||| 27	count=1
function_arg	[function_1] font-spec for ||| [arg_2] [function_1]	count=2
function	ask ||| ask	count=1
function	the [function] ||| [function]	count=13
function_arg	[function_1] of face ||| [function_1] set base [arg_2]	count=1
module	default function in ||| 27	count=1
module	a string or ||| 21	count=1
function	currently enabled minor modes ||| current minor mode maps	count=1
arg	with font-spec for ||| font-spec frame add	count=1
function	with color ||| tty color define	count=2
function_arg	[function_1] fringe widths ||| [arg_2] [function_1]	count=2
function	if non-nil edebug ||| edebug	count=1
arg	symbols modes ||| modes	count=1
function	a list of color ||| tty color	count=1
function	it initializes auto-save-list-file-name if ||| auto	count=1
function	file it initializes auto-save-list-file-name ||| auto	count=1
function	non-nil that means ||| pop	count=1
function_arg	[function_1] the value ||| [function_1] plist property [arg_2]	count=2
function	the beginning of a ||| bolp	count=1
function	was selected when ||| minibuffer selected	count=1
function	margin of ||| margin	count=1
function	if the value of ||| pop up	count=2
function	[function_1] [function_2] ||| [function_2] default [function_1]	count=2
function	init ||| list	count=1
function	emacs always makes backup ||| backup	count=1
module	new ||| 6 5	count=2
arg	from from [arg_2] ||| [arg_1] [arg_2]	count=4
function	how the buffer ||| buffer	count=1
function	the underline in ||| underline	count=1
function	buffer without disrupting the ||| bidi string mark left to right	count=1
function	below ||| buffer below	count=1
function	and ||| find last	count=1
function	[function_1] button after ||| [function_2] [function_1]	count=2
function	another name for ||| string	count=2
function	all expressions debugged ||| test	count=1
function	this variable controls which ||| allowed	count=1
function	update [function] ||| [function] line update	count=1
arg	by delta lines ||| delta horizontal ignore pixelwise	count=1
arg	except that ||| end	count=1
function	in shell syntax an ||| shell quote	count=1
function	table made ||| table	count=1
function	variable is non-nil ||| pop	count=2
function	the ||| vconcat	count=1
function	an autoload ||| autoloadp	count=1
arg	car is element ||| element	count=1
function	function sets the ||| set process plist	count=1
module	the [module] ||| [module] 8.2	count=2
arg	set the property prop ||| prop	count=1
arg	for key in ||| key	count=3
function	window to make a ||| pop up	count=1
function	function ||| char	count=2
module	edebug ||| 17	count=1
module	the current line ||| 17.1	count=1
module	underline ||| 37 12.1	count=1
arg	pred item ||| pred	count=1
function_arg	[function_1] binding ||| [function_1] key [arg_2]	count=3
function	set it non-nil based ||| save	count=1
function	the length ||| length	count=1
module	function returns a ||| 5	count=1
module	the buffer or text ||| 31	count=1
function	justification ||| justification	count=1
function	auto-save-list-file-name if you ||| auto save list	count=1
module	the value of ||| 7	count=1
function	emacs reads your init ||| file	count=1
arg	from-buffer-or-name into the current ||| from-buffer-or-name	count=1
function	[function_1] returns t ||| [function_1] [function_2] kind	count=2
module	value for ||| 27	count=1
arg	and returns the quotient ||| divisors	count=1
module	to ||| 5	count=1
function	this function closes a ||| notifications close	count=1
function	this function [function] ||| [function] frame on display	count=3
function	by [function_2] ||| [function_1] [function_2]	count=8
function	[function_1] ring ||| [function_2] [function_1]	count=4
arg	buffer from-buffer-or-name into ||| from-buffer-or-name	count=1
arg	parent and returns parent ||| parent	count=1
arg	element of tree ||| tree	count=1
function	is greater than ||| buffer end	count=1
arg	from index from to ||| from &optional	count=1
function	list and elements ||| union	count=1
module	buffer so that the ||| 29	count=1
function	function displays the buffer ||| switch to buffer	count=2
function	right margins ||| margins	count=1
function	the ||| up	count=2
function	a key ||| kbd	count=1
arg	the value of x1 ||| x1	count=1
function	input from [function_2] ||| [function_1] [function_2]	count=1
function	the epoch to ||| seconds to time	count=2
module	point is at the ||| 1	count=2
arg	function returns an alist ||| frame	count=1
function	[function_1] number in ||| [function_2] [function_1]	count=4
module	a ||| 21	count=3
function	frame configuration ||| frame configuration	count=1
function	auto-save-list-file-name if you have ||| auto save	count=1
module	frame and nil ||| 28	count=1
function	existing window to make ||| pop up	count=1
function	with the parent ||| parent	count=1
function	least recently-used ||| buffer pop up	count=1
module	so that the ||| 4	count=1
function	this ||| up	count=2
module	into a key sequence ||| 21	count=1
module	string or vector constant ||| 21 1	count=1
module	this ||| 30 7	count=2
arg	string as standard input ||| string	count=1
arg	propname property of process ||| process propname	count=1
function	just deleted ||| and extract	count=2
module	[module] like re-search-forward ||| [module]	count=1
function	a serial port ||| serial process	count=1
arg	beg to end ||| beg end count-final-newline	count=3
arg	lists using function ||| lists	count=1
function	in turn passing it ||| with	count=1
function	if ||| edebug test	count=1
function	rehash [function_2] ||| [function_2] [function_1]	count=1
module	function for ||| 6 6	count=1
function	the font ||| face font	count=1
function	the current local keymap ||| local	count=1
module	the ||| 21	count=1
function	window’s bottom edge ||| edge	count=1
function	in shell syntax ||| shell	count=1
arg	the buffer in that ||| buffer alist	count=1
function	defines a help command ||| make help	count=1
arg	face to ||| face	count=3
function	element of ||| map char	count=1
function	calls its argument function ||| char	count=1
module	function ||| 31 17.1	count=2
function	allowed to split ||| pop up	count=1
function	newline just ||| newline and	count=2
function	description of the ||| description	count=1
function	the display table of ||| display table	count=1
module	of the ||| 33 4	count=1
arg	in list ||| list	count=21
module	returns ||| 12.12	count=1
function	keep indicating the ||| delay	count=1
module	of all ||| 17	count=1
function	query ||| process query on exit	count=2
function	other than the selected ||| find file other	count=1
function	below the selected ||| buffer below selected	count=1
function_arg	removes function [arg_2] ||| 12 10.1 [function_1] place [arg_2]	count=1
function	as a vector ||| vector	count=1
function	the rehash ||| rehash	count=1
module	emacs reads your init ||| 2	count=1
function	day number within the ||| time to day in	count=1
function_arg	[function_1] [arg_2] ||| [function_1] p t1 [arg_2]	count=1
function	x-get-resource retrieves a resource ||| get resource	count=1
function	right or ||| scroll right	count=1
function	[function_1] area recorded ||| [function_2] [function_1]	count=2
arg	[arg_1] collection ||| [arg_2] [arg_1]	count=2
function	the sentinel ||| process sentinel	count=1
function	[function_1] lines ||| [function_2] [function_1]	count=4
arg	specifications in arguments ||| arguments	count=1
arg	var as a collection ||| var	count=1
function_arg	window’s value [arg_2] ||| [arg_2] [function_1]	count=4
function	local keymap or ||| local key	count=1
module	this ||| 21	count=1
arg	non-nil bind it to ||| &rest else	count=1
module	this function returns ||| 19	count=1
function	make ||| make	count=1
function	[function] key ||| [function]	count=3
function	string ||| left to right	count=1
module	in ||| 3 8	count=1
function	a ||| signal	count=1
function	command saves [function] ||| [function] as kill	count=1
function_arg	file [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] emacs-recognized extended ||| [function_2] [function_1]	count=1
arg	through ||| &rest more	count=1
function	number of color cells ||| display color cells	count=1
function	function returns the process ||| process	count=1
function	window’s bottom edge ||| window trailing edge	count=1
function	of its buffer ||| buffer	count=1
function	greater ||| buffer end	count=1
arg	each element of ||| function	count=1
arg	x1 ||| x1	count=1
function	next-single-property-change except ||| next single char	count=1
function_arg	[function_1] face ||| [arg_2] [function_1]	count=15
arg	displays a pop-up menu ||| menu	count=1
module	a [module_2] ||| [module_2] [module_1] macrop object	count=1
module	expressions ||| 17	count=1
function_arg	[function_1] value ||| [function_1] [arg_2]	count=4
function	indentation ||| current indentation	count=1
arg	syntax-descriptor ||| char syntax-descriptor table	count=1
function	[function_1] backup ||| [function_2] [function_1]	count=3
arg	process to ||| process	count=1
arg	start and end as ||| process start end	count=1
function	after emacs ||| save	count=1
module	buffer and returns nil ||| 6	count=1
function	this function ||| vconcat	count=1
arg	process process by sending ||| process current-group	count=2
module	the ||| 27	count=2
function	replace conses with ||| reduce r from	count=1
module	at [module] position ||| [module] 5	count=1
function_arg	[function_1] file filename ||| [arg_2] [function_1]	count=19
module	tests for ||| 3	count=1
function	[function_1] the year ||| [function_1] [function_2]	count=2
function	dedicated to ||| dedicated	count=1
function	the results ||| tree mapreduce	count=1
arg	and returns it ||| prompt initial history default inherit-input-method	count=1
function	this macro defines a ||| make	count=1
function	split s ||| s split	count=1
module	it is first activated ||| 2.16	count=1
arg	state state the ||| state	count=1
function	dedicated ||| window dedicated	count=1
function	[function_1] message ||| [function_2] [function_1]	count=6
function	keymap to the header ||| header	count=1
module	strings ||| 31 4	count=1
module	of ||| 27 14	count=4
function	of syntax ||| syntax	count=1
function	sequence a ||| kbd	count=1
arg	byte compiler warn that ||| access-type	count=1
arg	apply fn ||| fn folder	count=1
function	returns the truename ||| truename	count=1
arg	for the first list ||| list	count=1
arg	through [arg_2] ||| [arg_2] [arg_1]	count=2
arg	command adjusts the size ||| max-height min-height max-width min-width only	count=1
function	the file name to ||| auto save file name	count=1
module	variable is ||| 5	count=2
function	if you have not ||| file	count=1
function	function searches [function] ||| search [function]	count=3
function	the significand ||| ldexp	count=1
module	variable ||| 7	count=1
arg	convert s to ||| s	count=2
function	the network interface named ||| network interface	count=1
function	[function_1] buffer-invisibility-spec ||| [function_2] [function_1]	count=2
function	file in directory dir ||| in directory	count=1
module	function ||| 31 1	count=2
arg	process to [arg_2] ||| [arg_2] [arg_1]	count=1
function	tries to split ||| split	count=1
function	the end of ||| end	count=3
function	nil switch-to-buffer displays the ||| preserve window	count=1
module	returns ||| 8.1	count=1
function_arg	[function_1] [arg_2] ||| [function_1] text conversion [arg_2]	count=2
function	to specify margins around ||| to buffer margins	count=1
function_arg	positions for regexp ||| positions all regexp	count=2
function	global ||| only global	count=1
arg	assigned a code-point ||| code-point	count=1
module	of activations ||| 13	count=1
function	newer than ||| newer than	count=1
function	command inserts ||| format insert	count=1
function	a [function_2] ||| [function_1] [function_2]	count=5
function	reads ||| auto	count=1
function	alist of attributes ||| face all attributes	count=1
arg	specifies coding-system ||| coding-system	count=2
function	[function_1] window configurations ||| [function_2] [function_1]	count=3
function	name and ||| auto save list	count=1
function	buffer as auto-saved ||| buffer auto saved	count=1
function	if variable either ||| if set	count=1
function_arg	permissions of filename ||| modes filename	count=2
arg	window preferably not the ||| action norecord	count=1
arg	to fn ||| fn	count=1
function	bottom edge ||| edge	count=1
function	a given registry ||| registry alternatives	count=2
function	by forward-sexp ||| parse sexp	count=1
function	[function] coding system ||| [function] coding system	count=3
arg	mark to position ||| position	count=1
module	the ||| 7.13	count=1
function	symbolic ||| symbolic	count=2
function	the current [function_2] ||| [function_2] [function_1]	count=8
function	this returns t if ||| if set p	count=1
function_arg	[function_1] start ||| [arg_2] [function_1]	count=3
module	at ||| 37 19.1	count=1
module	for the ||| 10 3	count=1
rep	[module_1] [function_arg_2] ||| [module_1] set [function_arg_2]	count=4
function	register name prompting with ||| register	count=1
function	largest or least recently-used ||| display buffer pop up	count=1
function	returns the process named ||| get process	count=1
arg	[arg_1] [arg_2] in ||| [arg_1] [arg_2]	count=4
arg	function associates [arg_2] ||| [arg_2] number [arg_1]	count=1
arg	command fills each ||| end justify	count=1
function	systems that could be ||| systems for	count=1
function_arg	the query [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] table table ||| [function_1] char docstring [arg_2]	count=3
function	returns t ||| p	count=2
module	that frame ||| 8	count=1
function	[function_1] the abbrev ||| [function_2] table [function_1]	count=3
module	of activations of the ||| 13	count=1
function	file ||| file name	count=1
function	buffer’s point ||| point	count=1
module	this function ||| 38	count=1
function	this function sends ||| send	count=1
arg	file filename [arg_2] ||| [arg_2] [arg_1]	count=4
function	the beginning of ||| bobp	count=1
arg	obsolete-name as ||| obsolete-name current-name when	count=1
module	returns the ||| 19	count=1
arg	rgb value rgb a ||| rgb	count=1
module	text starting ||| 31	count=1
function	current buffer to start ||| to	count=1
function	is ||| end	count=1
function	function returns the truename ||| file truename	count=1
function	arg ||| backward sexp	count=1
function	by ||| by	count=3
arg	for regexp separator ||| separator	count=1
function	a string constant into ||| kbd	count=1
arg	by delta ||| delta horizontal ignore	count=1
arg	[arg] words ||| [arg]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] string [arg_2]	count=27
module	floating point ||| 5	count=1
function	non-nil based on ||| save	count=1
function_arg	list -drop-while [arg_2] ||| [function_1] [arg_2] list	count=1
module	of this variable is ||| 27 14	count=2
function	making new frames ||| frames	count=1
module	a nonnegative integer ||| 19 13	count=1
function	window’s value ||| parameter	count=1
function	the same field as ||| field	count=1
function	is non-nil display-buffer is ||| pop	count=1
module	of individual events which ||| 20 8.6	count=1
module	this function sets the ||| 12	count=1
function_arg	[function_1] propname for ||| [arg_2] [function_1]	count=2
function	process process ||| signal process	count=1
function	left margin of the ||| left margin	count=1
function	auto-save-list-file-name ||| save	count=1
function_arg	this macro [function_1] [arg_2] in ||| [function_1] [arg_2]	count=3
arg	cell of symbol ||| symbol	count=1
function	emacs reads ||| save list file	count=1
function	an alist that ||| alist	count=1
module	match [module_2] ||| [module_1] [module_2]	count=4
function	your ||| list	count=1
function	names for buffers that ||| names	count=1
arg	function ||| args	count=2
rep	[module_1] [function_arg_2] ||| [module_1] read [function_arg_2]	count=2
function	the signal ||| process	count=1
function	the insertion ||| marker insertion	count=1
function_arg	[function_1] fn returns ||| [arg_2] [function_1]	count=1
arg	the binding ||| binding	count=2
function_arg	character at [arg_2] ||| [function_1] [arg_2]	count=7
arg	terminal ||| terminal	count=2
module	this function ||| 4	count=2
function	returns the rehash threshold ||| table rehash threshold	count=1
module	that the entire contents ||| 29 4	count=1
function	value of this option ||| buffer base	count=1
function_arg	name with [arg_2] ||| [function_1] [arg_2]	count=1
module	returns the ||| 26 3	count=1
arg	[arg_1] but ||| [arg_1] [arg_2]	count=4
module	on this ||| 2	count=1
arg	conversion of eol-coding and ||| eol-coding	count=1
arg	comparing [arg] against ||| [arg]	count=1
arg	tree and make a ||| tree	count=1
function_arg	[function_1] buffer in ||| [function_1] window from [arg_2] x-limit y-limit mode-and-header-line	count=3
arg	prompt and returns ||| prompt default	count=1
function	marks it as obsolete ||| obsolete	count=1
function	number of items ||| count	count=1
function	encapsulating ||| enter first	count=1
arg	array bindat-raw according ||| bindat-raw	count=1
function	it non-nil based ||| auto	count=1
function	that are t ||| count population	count=1
function	current depth ||| minibuffer depth	count=1
module	the [module] ||| 31 [module]	count=1
module	in ewoc found at ||| 37 19.1	count=1
arg	[arg_1] returns object ||| [arg_1] [arg_2]	count=2
function	a new frame ||| buffer other frame	count=2
function_arg	value position ||| char position	count=1
rep	the [module_1] [function_arg_2] ||| [module_1] 8.2 kill [function_arg_2]	count=4
function	sequence [function_2] ||| [function_2] [function_1]	count=2
function	[function] to ||| [function] set key	count=3
function	moves point to ||| move to	count=2
arg	the file filename ||| filename	count=5
arg	symbol’s property ||| symbol property	count=2
function	this sets the ||| set left margin	count=1
arg	of x1 and ||| x1	count=1
function	left [function_2] ||| [function_1] [function_2]	count=10
function	this function puts ||| window state put	count=1
module	entire contents ||| 29 4	count=1
function	the initial [function_2] ||| [function_1] [function_2]	count=1
module	buffers by ||| 14	count=1
function_arg	[function_1] lists together ||| [function_1] [arg_2]	count=1
module	split an existing window ||| 27	count=1
function	[function_1] selected ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] on item [arg_2]	count=6
function	symbolic file mode specification ||| file modes symbolic	count=1
module	emacs to ||| 38	count=1
function	of the current ||| of	count=2
module	of file names that ||| 24	count=1
function	it initializes auto-save-list-file-name ||| list file	count=1
module	of the contents of ||| 4	count=1
function_arg	[function_1] object is ||| [arg_2] [function_1]	count=1
function	hours etc ||| format seconds	count=1
function	[function_1] just ||| [function_2] [function_1]	count=4
arg	[arg] no such ||| [arg]	count=3
module	this function returns a ||| 7 3	count=1
function	function returns a string ||| number to string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ring [arg_2]	count=1
arg	rgb a ||| rgb frame	count=1
function	method name with the ||| method name	count=1
function_arg	the truename [arg_2] ||| [arg_2] [function_1]	count=1
module	returns ||| 5	count=2
module	returns a ||| 3	count=2
module	a new [module] spec using ||| [module]	count=1
function	downward ||| floor	count=1
function	to its individual ||| individual paragraphs	count=1
function	trailing [function_2] ||| [function_2] [function_1]	count=1
function	adaptive ||| adaptive	count=1
module	your init file it ||| 25 2	count=1
function	this ||| minibuffer	count=1
function	the previous buffer ||| prev buffer	count=2
function	means display-buffer may display ||| pop up	count=1
module	host name and ||| 25	count=1
arg	position in object ||| object	count=1
function	extra [function_2] ||| [function_2] [function_1]	count=2
function	insertion type ||| marker insertion	count=1
module	a string constant ||| 21 1	count=1
arg	buffer if flag is ||| window flag	count=1
function	[function_1] [function_2] any ||| [function_1] [function_2]	count=4
arg	[arg_1] returns object ||| [arg_2] [arg_1]	count=2
arg	of tree ||| tree	count=2
module	of the first ||| 31	count=1
arg	except ||| end	count=1
function	the maximum [function_2] ||| [function_1] lisp eval [function_2]	count=4
function	from ||| read from	count=1
function	state ||| state	count=1
arg	the mouse like set-mouse-position [arg_1] [arg_2] units of pixels rather ||| set mouse pixel position [arg_1] [arg_2]	count=1
function	returns the character ||| char	count=1
arg	width [arg_2] ||| [arg_2] [arg_1]	count=2
arg	calling each hook function ||| hook args	count=2
function_arg	sentinel of [arg_2] ||| [arg_2] [function_1]	count=1
module	[module] the ||| [module] 9	count=3
function_arg	[function_1] the list ||| [function_1] on item [arg_2]	count=1
function	base 64 code into ||| base64	count=1
function	[function_1] table or ||| [function_2] [function_1]	count=1
function	color ||| tty color	count=2
function	the base ||| base	count=1
function	backup versions to keep ||| versions	count=1
function_arg	[function_1] [arg_2] ||| [function_1] p type [arg_2]	count=4
arg	forward count ||| count	count=1
function	input from [function_2] ||| [function_2] [function_1]	count=1
module	this function [module_1] [module_2] ||| [module_1] [module_2]	count=2
module	variable is non-nil ||| 27 5	count=1
function	[function_1] link to ||| [function_2] [function_1]	count=4
module	editor command loop ||| 20	count=1
function	the bottom of ||| bottom	count=1
function_arg	[function_1] start and ||| [function_1] as kill [arg_2]	count=2
function	real gid ||| group real gid	count=1
function	[function_1] size of ||| [function_1] [function_2]	count=2
function	visible on ||| pos visible	count=1
function	split an ||| up	count=1
module	is greater than 0 ||| 29	count=1
function	this function [function] ||| display color [function]	count=2
module	that ||| 27 14	count=2
function	host ||| save list file	count=1
function	displays ||| switch to buffer	count=2
function	be a string or ||| string	count=1
module	all the ||| 6 5	count=1
function	its argument function ||| map	count=1
function_arg	encapsulating [arg_2] ||| [function_1] ewoc [arg_2]	count=1
function	unregisters ||| lock unregister	count=1
function	that completes ||| complete	count=1
function_arg	the function [arg_2] ||| [arg_2] [function_1]	count=1
function	separate process ||| process	count=1
module	named ||| 38 3	count=1
function	and ||| push	count=1
function	it ||| auto	count=2
arg	named [arg] to expand ||| [arg] expansion hook	count=1
function	your init file it ||| file	count=1
function	the host name ||| save list	count=1
function_arg	region from [arg_2] ||| [function_1] [arg_2]	count=3
arg	by calling each hook ||| hook	count=2
function	returns t if variable ||| if set p	count=1
arg	[arg_1] repetitions of ||| [arg_1] [arg_2]	count=4
module	horizontal position ||| 17.1	count=1
function	or local ||| local	count=1
function	of lines ||| lines	count=2
function	and if ||| window p	count=1
function	for each element of ||| map char table	count=1
arg	char-table that has ||| function char-table	count=1
arg	face face specifies ||| face frame	count=1
function	line ||| line	count=8
arg	[arg] the ||| pos [arg]	count=2
arg	documentation docstring for the ||| docstring	count=1
function	on [function] ||| [function]	count=2
arg	menu ||| position menu	count=1
module	other windows ||| 27	count=1
function_arg	remapping [arg_2] ||| [function_1] set base [arg_2]	count=4
function	elements removed ||| butlast	count=1
module	function sets the ||| 12	count=1
function	[function_1] abbrev definitions ||| [function_1] [function_2]	count=3
arg	non-nil ||| function	count=1
function_arg	definition of [arg_2] ||| [arg_2] [function_1]	count=2
arg	if [arg_2] ||| [arg_2] [arg_1]	count=8
module	passing [module] integers from ||| [module]	count=1
arg	the property prop ||| prop	count=1
function	rest to ||| capitalize	count=1
arg	[arg_1] [arg_2] ||| [arg_2] number [arg_1]	count=5
function	of highest priority that ||| find charset	count=2
function_arg	[function_1] [arg_2] ||| [function_1] char-table range [arg_2]	count=2
function_arg	timestamp [arg_2] ||| [arg_2] [function_1]	count=1
function	the right or to ||| right	count=1
arg	if bold-p is ||| face bold-p	count=1
function	which is the horizontal ||| current	count=1
function	a symbolic file ||| modes symbolic	count=1
function_arg	base remapping [arg_2] ||| [arg_2] [function_1]	count=4
module	ask ||| 26 6	count=1
module	argument is [module] ||| [module]	count=1
function_arg	same field [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] current-name ||| [arg_2] [function_1]	count=5
arg	makes characters [arg] ||| [arg]	count=2
arg	returns t if regexp ||| regexp limit greedy	count=1
arg	item matching pred ||| pred	count=2
function	the file name to ||| file name	count=1
function	dimensions ||| mm dimensions alist	count=1
arg	string s with ||| s	count=1
function	coding system for ||| coding	count=2
arg	object ||| object list	count=1
arg	[arg_1] and pushes ||| [arg_2] [arg_1]	count=3
function	name ||| name completion	count=1
module	coverage testing that ||| 17 4	count=2
arg	face face ||| face frame	count=1
function	next sibling of the ||| window next sibling	count=1
arg	process-name as ||| process-name	count=1
arg	string of ||| format-string	count=1
module	the [module] tty ||| [module]	count=1
module	non-nil that means display-buffer ||| 14	count=1
module	to split an ||| 27 14	count=1
function	group specified ||| group	count=1
function	the actual [function_2] ||| [function_2] [function_1]	count=3
arg	[arg_1] device ||| [arg_1] [arg_2]	count=1
function	the height and width ||| height	count=1
arg	filename to ||| filename	count=4
function	restore the state of ||| restore	count=1
function	change is ||| char property change	count=2
function	the current insertion type ||| marker insertion type	count=1
function	macro defines a ||| menu define	count=1
function	[function_1] the byte ||| [function_1] [function_2] pos string	count=2
function	inserts object ||| ring insert	count=1
function	the truename of the ||| truename	count=1
function	[function_1] buffer in ||| [function_1] [function_2]	count=2
function_arg	[function_1] terminal ||| [function_1] coding system coding-system [arg_2]	count=1
function_arg	[function_1] to n ||| [arg_2] [function_1]	count=1
function	modification times of ||| times	count=1
module	this function tests for ||| 3	count=1
function	list ||| list	count=2
module	position of ||| 31 17.1	count=1
function	make backup files ||| make backup files	count=2
function_arg	wildcard [arg_2] ||| [function_1] [arg_2]	count=2
function	reads a file ||| read file	count=2
function_arg	[function_1] [arg_2] ||| [function_1] search forward [arg_2] limit noerror repeat	count=5
function	replaced ||| update at	count=1
function	key sequence ||| kbd	count=1
function	height in pixels ||| height	count=2
function	a function to ||| function	count=1
function	for displaying ||| windows	count=1
arg	except that key must ||| key	count=1
function	like find-file ||| find	count=1
arg	command command ||| command	count=2
function_arg	to [arg_2] ||| [function_1] region start [arg_2]	count=5
function	is ||| ring	count=1
function	characters in the ||| chars	count=1
arg	tabname a symbol as ||| tabname	count=1
function_arg	for directory file ||| directory file	count=1
function	of the font of ||| face font	count=1
module	this ||| 20	count=1
function	a new fontset ||| from fontset spec	count=1
function	integer by rounding downward ||| floor	count=1
arg	node in ||| ewoc	count=1
function	macro defines a pop-up ||| menu define	count=1
function_arg	truename [arg_2] ||| [arg_2] [function_1]	count=1
function	coding system ||| terminal coding system	count=1
module	returns ||| 19	count=1
function	item [function_2] ||| [function_2] [function_1]	count=10
function	color [function_2] ||| [function_2] [function_1]	count=4
arg	string of years ||| format-string	count=1
function	set ||| auto	count=1
arg	var and do then ||| then	count=1
module	function returns a ||| 24 6.4	count=1
module	in the ||| 26 8	count=1
arg	[arg] of ||| var [arg]	count=1
function	assoc ||| assoc	count=1
module	limits of the ||| 29 2.3	count=2
function	on this ||| auto save list	count=1
function_arg	[function_1] [arg_2] ||| [function_1] eol-coding [arg_2]	count=8
function	than len [function] it ||| [function] left	count=1
function	the soft [function] ||| undo [function]	count=3
function	previous sibling ||| window prev sibling	count=2
arg	[arg_1] by sending ||| [arg_1] [arg_2]	count=4
function	display buffer by choosing ||| display buffer use some	count=1
module	of ||| 7	count=3
arg	using [arg] ||| [arg]	count=1
module	in ||| 4 8	count=1
arg	with args ||| &rest args	count=2
function	the day number within ||| day in	count=1
function_arg	[function_1] as old-pos ||| [function_1] new-pos [arg_2]	count=4
module	variable’s value is ||| 3.2	count=1
function	display table ||| window display table	count=1
function	[function_1] than ||| [function_2] [function_1]	count=1
arg	evaluate form ||| form	count=1
arg	returns number converted ||| number	count=1
module	point is ||| 1	count=2
arg	only nodes ||| nodes	count=1
module	activations ||| 13	count=1
function	of the [function_2] ||| [function_1] [function_2]	count=2
module	this variable is ||| 30 7	count=1
module	nonblank character ||| 31	count=1
function	deletes from ||| delete	count=2
function	the least fixpoint ||| fixfn	count=1
module	of the current line ||| 31	count=1
module	is allowed to ||| 27 14	count=1
arg	eval-region but the arguments ||| buffer-or-name stream filename unibyte print	count=1
function	best matches the font ||| find font	count=1
function	returns the selinux context ||| file selinux context	count=1
function	are t [function_2] ||| [function_2] [function_1]	count=1
function	window [function_2] ||| [function_1] [function_2]	count=5
function	obsolete indicating ||| obsolete face	count=1
arg	lisp representation of ||| omit-port	count=1
module	of an existing ||| 24 6.2	count=1
function	initial frame ||| initial frame	count=2
arg	the nth bit is ||| ints-or-markers	count=2
arg	attribute attribute for face ||| face attribute	count=1
module	minibuffer before ||| 19	count=1
function	the current local ||| local	count=1
function	the directory name ||| directory	count=2
module	which ||| 17.1	count=1
function_arg	the function [arg_2] ||| [function_1] alias obsolete-name [arg_2]	count=1
arg	a copy of string ||| string	count=1
arg	according ||| no-remap	count=1
function_arg	[function_1] table ||| [arg_2] [function_1]	count=1
function	maximum size of ||| mark ring max	count=1
function	extra ||| set char table extra	count=1
arg	[arg] items if ||| [arg]	count=2
function	reads a [function_2] ||| [function_2] [function_1]	count=8
function_arg	the significand [arg_2] ||| [arg_2] [function_1]	count=4
function	forward from point ||| forward	count=2
arg	count screen ||| count	count=1
arg	to-file ||| to-file from-file	count=1
arg	to n [arg_2] ||| [arg_1] [arg_2]	count=1
module	of a line ||| 31	count=1
function_arg	[function_1] fringe widths ||| [function_1] window [arg_2]	count=2
arg	in position either ||| position	count=1
function	current global keymap ||| current global map	count=2
arg	process ||| process	count=10
module	the current ||| 29	count=1
function	in directory dir ||| in directory	count=1
function	string ||| to right	count=1
function_arg	conversion of text-coding ||| conversion eol-coding text-coding	count=2
function	is like [function] but ||| previous [function] change	count=1
function	a string or ||| kbd	count=1
arg	name in abbrev-table ||| abbrev-table name	count=1
function	status of process or ||| status	count=1
module	minibuffer prompting with string ||| 32 10.4	count=1
module	buffer or the limits ||| 2.3	count=2
function	this command inserts the ||| format insert file	count=1
function_arg	the year [arg_2] ||| [function_1] [arg_2]	count=1
function	[function] the ||| [function] local	count=3
arg	hook [arg_2] ||| expansion [arg_1] [arg_2]	count=2
function	this prefix adding the ||| file prefix	count=1
module	the [module] of the ||| [module] 2	count=1
function	to the tool ||| tool bar add	count=1
module	is ||| 29	count=1
function	process associated with ||| buffer process	count=1
arg	lisp expression using ||| initial	count=1
arg	providing completion ||| predicate require-match initial	count=1
function	function returns non-nil if [function_1] [function_2] ||| [function_1] [function_2] p	count=1
function	[function_1] column value ||| [function_2] [function_1]	count=1
function	prefix adding the host ||| prefix	count=1
arg	calls its ||| function	count=1
function	a boundary element in ||| boundary	count=1
function	value of ||| mark	count=1
function	such as the x ||| x	count=1
function	print-length and ||| print length	count=1
function	an integer or a ||| integer or	count=1
function_arg	assoc except [arg_2] ||| [arg_2] [function_1]	count=3
module	side-effects passing [module] integers from ||| [module]	count=1
arg	named dirname to ||| dirname	count=1
module	this function ||| 39 3	count=1
arg	this function defines the ||| docstring interactive type	count=1
module	returns the ending position ||| 20 7.13	count=1
function	a category ||| category	count=1
function	of ||| map char table	count=2
arg	field ||| field	count=1
module	encoding terminal output from ||| 32 10.8	count=1
function	for each ||| table	count=1
arg	[arg_1] in string ||| [arg_2] [arg_1]	count=2
arg	selects frame raises ||| frame	count=1
arg	[arg_1] docstring for ||| [arg_2] [arg_1]	count=2
function	argument function for each ||| char	count=1
function_arg	the directory [arg_2] ||| [function_1] [arg_2]	count=3
function	sets the :underline ||| set face	count=1
function	the window [function_2] ||| [function_2] [function_1]	count=1
function	of face ||| face	count=1
function	is nil switch-to-buffer ||| to buffer preserve	count=1
module	the ||| 20 7.13	count=2
arg	if alist has a ||| alist	count=1
arg	of glyph code glyph ||| glyph	count=1
module	text in ||| 31	count=1
arg	prompt and ||| prompt initial	count=1
arg	function sends ||| process	count=1
function_arg	[function_1] of tree ||| [arg_2] [function_1]	count=1
arg	with initial value value ||| variable value	count=1
arg	named dirname [arg_2] ||| [arg_1] [arg_2]	count=1
function	found at ||| ref	count=1
function	a ||| up	count=1
module	each ||| 6	count=2
function	least recently-used window typically ||| buffer pop up window	count=1
function	and process ||| save	count=1
function	of objects created ||| memory use counts	count=1
function	the contents of ||| contents	count=1
function_arg	[function_1] beg ||| [function_1] [arg_2]	count=5
module	elements of ||| 5 4	count=1
arg	[arg_1] into ||| [arg_1] [arg_2]	count=3
arg	finds the precise file ||| nosuffix path interactive-call	count=1
function	the current mode ||| current input mode	count=1
module	line which is the ||| 31	count=1
arg	buffer in ||| to	count=1
module	display-buffer is allowed ||| 27	count=1
arg	[arg_1] bold-p ||| [arg_2] [arg_1]	count=1
function	if the ||| p	count=1
module	non-nil based ||| 25 2	count=1
function	of ||| ring	count=2
module	a key sequence ||| 1	count=1
arg	cons of car ||| car	count=1
function	file name to ||| make auto save file name	count=1
arg	current-face and ||| current-face	count=1
function	“succeeds” by returning a ||| success	count=1
arg	this function ||| window	count=1
function_arg	pid [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] buffer’s auto-save ||| [function_2] [function_1]	count=1
function	shell ||| process shell	count=1
arg	number converted ||| number	count=1
arg	init ||| init n	count=1
function	[function_1] [function_2] by modifying tool-bar-map ||| [function_2] [function_1]	count=10
function_arg	shell [arg_2] ||| [arg_2] [function_1]	count=2
function	the change group that ||| activate change group	count=1
arg	value of prev-buffers ||| window prev-buffers	count=1
function	symbol ||| add to list	count=1
function	values for print-length and ||| print length	count=1
function	highest priority [function_2] ||| [function_2] [function_1]	count=3
arg	spaces if [arg] ||| [arg]	count=2
module	by emacs to the ||| 38	count=1
function_arg	[function_1] of keymap ||| [arg_2] [function_1]	count=1
function	reads an ||| read	count=1
function	to its initials ||| word initials	count=1
module	the value of ||| 30 7	count=1
arg	obarray obarray ||| obarray	count=1
function	replace conses with ||| reduce r	count=1
module	function scans [module] ||| [module] 19.3	count=3
function	indentation of ||| current indentation	count=1
arg	function [arg] a 1-arity ||| [arg]	count=1
arg	[arg_1] end ||| [arg_2] [arg_1]	count=30
function	make a new window ||| up	count=1
module	for each element of ||| 6 6	count=1
module	is a [module] and that ||| [module] 2.1	count=1
arg	[arg_1] and to ||| [arg_1] [arg_2]	count=1
function	contents of extra slot ||| table extra slot	count=1
arg	list [arg_2] ||| items? [arg_1] [arg_2]	count=3
arg	of list tree ||| tree	count=1
function	remapping ||| command remapping	count=1
function	syntax classes are ||| skip syntax backward	count=1
module	edebug ||| 17 2.16	count=2
function_arg	command bound to ||| command rigid	count=1
arg	its buffer if flag ||| flag	count=1
function	entries in ||| hash table	count=1
function	[function_1] form ||| [function_2] [function_1]	count=3
arg	which collection will operate ||| collection predicate	count=1
function	face attributes ||| face attributes	count=1
module	first nonblank ||| 31 17.1	count=1
module	[module_1] command ||| [module_1] [module_2]	count=2
module	constant into ||| 21	count=1
function	face for the fringe ||| fringe bitmap face	count=1
arg	face face ||| face frame inherit	count=1
arg	whether a color name ||| color	count=1
function_arg	[function_1] alist ||| [function_1] all value [arg_2]	count=3
function	auto-save-list-file-name if you ||| save	count=1
module	that ||| 28	count=1
arg	for each element of ||| function	count=1
function	initializes auto-save-list-file-name if you ||| list file	count=1
module	init file it ||| 2	count=1
function	this function returns the ||| current	count=1
function	is non-nil that means ||| pop up	count=1
module	name of an existing ||| 6.2	count=1
module	it non-nil ||| 25	count=1
function	selinux context of ||| file selinux context	count=2
function	you have ||| auto save	count=1
arg	regexp in ||| regexp s &optional start	count=1
function	a sexp ||| sexp	count=1
function	history element ||| history element	count=5
module	than ||| 29 1	count=2
module	symbol’s [module] value ||| [module]	count=1
arg	the display-start ||| noforce	count=1
module	for the falsehood of ||| 10 3	count=1
module	of the current line ||| 17.1	count=1
function	buffer names ||| buffer	count=1
function	[function_1] register name ||| [function_2] [function_1]	count=2
function_arg	single paragraph [arg_2] ||| [function_1] [arg_2] end justify nosqueeze squeeze-after	count=1
function_arg	table display-table in ||| table display-table	count=1
function	end of [function_2] ||| [function_1] [function_2]	count=1
function	a ||| kbd	count=3
module	string constant into ||| 1	count=1
arg	valid position in object ||| prop object	count=1
function	enabled by default ||| default	count=1
function	not ||| auto save list	count=1
arg	for command a ||| command position	count=1
arg	of seconds since the ||| seconds	count=1
function_arg	help [arg_2] ||| [function_1] [arg_2]	count=2
function	item to [function_2] ||| [function_2] [function_1]	count=5
function	display table ||| window display	count=1
function	[function_1] [function_2] ||| [function_1] real login [function_2]	count=3
function_arg	the length [arg_2] ||| [function_1] [arg_2]	count=1
function	the [function] into an ||| dump [function]	count=1
function	buffer to ||| to	count=1
function	this ||| format	count=1
module	file it initializes ||| 25	count=1
function	of all ||| edebug test	count=1
arg	that were bound ||| oldmap	count=1
function	recursive [function_2] ||| [function_2] [function_1]	count=1
function	the prefixes ||| prefixes	count=1
function	header line to ||| init header	count=1
module	this function returns ||| 27	count=1
arg	face face specifies ||| face frame inherit	count=1
function	to the [function_2] ||| [function_1] [function_2]	count=5
function	[function_1] name prompting ||| [function_1] [function_2]	count=4
function_arg	[function_1] list each ||| [arg_2] [function_1]	count=1
arg	in collection ||| collection predicate	count=2
function	argument function ||| char table	count=1
module	its argument function ||| 6 6	count=1
function	mode or [function_2] ||| [function_2] [function_1]	count=2
module	[module] window tree ||| [module]	count=1
arg	lists using ||| &rest lists	count=1
function	the font ||| font	count=4
function	stores ||| plist put	count=1
arg	given [arg_2] ||| [arg_2] s [arg_1]	count=1
function	an ||| pop up	count=1
function	of extra [function_2] ||| [function_1] [function_2]	count=1
arg	buffer if flag ||| flag	count=1
function	and gives ||| setq	count=1
arg	[arg_1] on ||| [arg_1] frame [arg_2]	count=1
function	function sets the access ||| set file	count=1
arg	non-nil bind it ||| &rest else	count=1
function	the previous ||| previous	count=1
function	function calls its argument ||| table	count=1
arg	state state ||| state	count=1
function	query flag of ||| query on exit	count=1
function	the accessible portion of ||| min	count=1
function	the frame ||| window frame	count=1
function	the match ||| match	count=1
arg	[arg_1] in alist ||| [arg_2] [arg_1]	count=2
module	[module_1] function ||| [module_1] [module_2] upcase	count=1
function	sibling ||| sibling	count=2
arg	previous [arg] of that ||| [arg]	count=1
function	this sets the ||| set right	count=1
arg	as seen from the ||| window ignore sign wrap mini	count=1
function	default file permissions as ||| default file modes	count=1
arg	b ||| a b	count=2
function	this variable is non-nil ||| pop up	count=2
function	print-length to this value ||| print length	count=1
function	[function_1] completes the ||| [function_2] history [function_1]	count=1
function	window below the ||| buffer below	count=1
arg	according to the current ||| accept-defaults no-remap	count=1
module	making ||| 27	count=1
function_arg	[function_1] new-pos that ||| 31 19.9 constrain [function_1] field [arg_2]	count=1
arg	function returns window’s ||| window	count=1
function	[function_1] style symbols ||| [function_2] [function_1]	count=1
function_arg	[function_1] in window ||| [arg_2] [function_1]	count=3
function	init file it ||| list file	count=1
arg	with prompt and providing ||| prompt	count=1
function_arg	[function_1] [arg_2] ||| [function_1] as kill [arg_2]	count=4
function	of an [function] ||| [function] change	count=1
function	fit by fit-frame-to-buffer ||| fit	count=1
arg	function finds [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	property to [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] face ||| [function_1] p [arg_2]	count=6
function	of syntax class characters ||| skip syntax forward	count=1
function	year corresponding to ||| year	count=1
function	zip lists with ||| zip	count=1
function	buffer without disrupting ||| bidi string mark left to	count=1
function	window as an ||| get window	count=1
arg	n of [arg_2] ||| [arg_2] [arg_1]	count=4
function	[function_1] margin ||| [function_1] [function_2]	count=6
module	[module] byte ||| [module]	count=1
module	function ||| 36	count=1
arg	[arg_1] start to ||| [arg_2] end [arg_1]	count=3
function	to be fit ||| fit frame to buffer	count=1
arg	pattern pattern returning a ||| pattern full	count=1
function	the minibuffer raises ||| raise	count=1
function	function reads an ||| read	count=1
function_arg	before or [arg_2] ||| [arg_2] [function_1]	count=1
function	node encapsulating ||| enter first	count=1
function	process ||| buffer process	count=1
function_arg	[function_1] named ||| [arg_2] [function_1]	count=9
module	parameters of ||| 28 4	count=1
function_arg	the number [arg_2] ||| [arg_2] [function_1]	count=3
function	keymap nil otherwise ||| keymapp	count=1
function	reads your init ||| auto save list file	count=1
function	that has a ||| map char table	count=1
function	returns the truename of ||| truename	count=1
function	the line number ||| line number	count=2
module	already set ||| 25 2	count=1
module	string of years days ||| 38 7	count=1
arg	display-table in ||| display-table	count=1
function	currently enabled minor modes ||| minor mode maps	count=1
rep	this function [function_arg_2] ||| [module_1] [function_arg_2]	count=25
function	[function_1] configuration list ||| [function_2] [function_1]	count=4
function	function returns the binding ||| key binding	count=2
module	buffers by ||| 27	count=1
function	documentation string of face ||| face documentation	count=1
function	that has a non-nil ||| map char	count=1
module	constant into a ||| 21	count=1
function	the position ||| position	count=2
module	during its next redisplay ||| 22 4.1	count=1
arg	in a help buffer ||| buffer	count=1
arg	sends ||| process	count=1
arg	seconds seconds ||| seconds millisec	count=1
function	datagram connection or server ||| process datagram	count=1
function	next-single-property-change ||| next single char property	count=1
module	if the ||| 14	count=2
module	years days ||| 38 7	count=1
function	[function_1] edit ||| [function_1] [function_2]	count=2
function	each element of ||| char	count=1
function	[function_1] [function_2] ||| [function_2] text area [function_1]	count=5
arg	buffer-or-name in the ||| buffer-or-name	count=1
function	allowed to split an ||| pop up	count=1
module	this ||| 31	count=3
module	words in ||| 8	count=1
function	display buffers by ||| pop	count=1
function	of the buffer ||| of	count=1
module	whether symbol’s [module] value ||| [module]	count=1
arg	start and end ||| start end	count=16
function	initializes ||| auto save list	count=1
function	inserts the ||| insert file	count=2
function	dimensions of ||| display mm dimensions alist	count=1
function	text of window’s buffer ||| text	count=1
function	on ||| auto save	count=1
arg	to len ||| len s	count=1
function_arg	property named [arg_2] ||| [function_1] [arg_2]	count=3
function	the text [function_2] ||| [function_2] [function_1]	count=2
function	keep indicating the matching ||| matching delay	count=1
arg	regexp in [arg_2] ||| [arg_1] [arg_2]	count=1
arg	from index from ||| from &optional to	count=1
function	variable is non-nil display-buffer ||| up	count=1
function	number of color cells ||| color cells	count=1
function	has a non-nil value ||| map char table	count=1
function	to split ||| pop	count=1
function	after emacs reads ||| auto save list	count=1
arg	markers or integers ||| integers	count=1
function	function expands ||| file expand	count=1
arg	seconds seconds without updating ||| seconds	count=1
function	vector constant ||| kbd	count=1
arg	character at [arg] in ||| [arg]	count=1
function	insertion type of ||| insertion type	count=2
function	screen area ||| area	count=1
function_arg	insertion [arg_2] ||| [arg_2] [function_1]	count=2
function	below the selected window ||| buffer below selected	count=1
arg	rgb value rgb ||| rgb	count=1
function	print-level used by eval-expression ||| eval expression	count=1
function	list of the results ||| mapreduce	count=1
function_arg	[function_1] tree and ||| [arg_2] [function_1]	count=1
arg	data adding it ||| data	count=1
arg	at position pos ||| pos	count=1
arg	[arg] which ||| [arg]	count=3
function	this macro defines a ||| define	count=1
function	the attributes of remote ||| remote file	count=1
module	this function sets ||| 3	count=1
arg	that start within ||| start	count=1
module	days hours etc ||| 38 7	count=1
function	if you have ||| list	count=1
function	filename ||| file name sans versions	count=1
function	to specify the dimensions ||| dimensions alist	count=1
module	of numbers starting with ||| 4	count=1
arg	[arg] have equal ||| [arg]	count=1
function	emacs reads ||| auto	count=1
function	accessible portion of the ||| buffer	count=1
function	process ||| process	count=5
arg	to format-string [arg] ||| [arg]	count=1
function	auto-save-list-file-name if ||| auto save	count=1
function	other ||| replace	count=1
function	name and process ||| file	count=1
function	it will make it ||| variable buffer	count=1
arg	rgb ||| rgb frame	count=1
function	accessible portion of the ||| point min	count=1
arg	file filename into ||| filename visit beg	count=1
function	files by [function_2] ||| [function_1] [function_2]	count=1
module	if [module] byte ||| [module]	count=1
module	this is the ||| 9 5	count=2
function	sets the header and ||| set	count=1
module	is non-nil the default ||| 5	count=1
arg	value ||| value	count=14
module	and ||| 28	count=1
function	column ||| column	count=1
function	be fit ||| fit frame	count=1
function	symbolic ||| modes symbolic	count=1
function	you have ||| save list	count=1
function	auto-save-list-file-name if you have ||| auto	count=1
arg	object is [arg_2] ||| [arg_1] [arg_2]	count=1
function	it initializes ||| save list file	count=1
arg	falsehood of condition ||| condition	count=1
arg	by delta lines ||| window delta horizontal pixelwise	count=1
function	reads your ||| auto	count=1
function	fringe bitmap identified by ||| fringe	count=1
function	local [function] list ||| [function]	count=1
function	first ||| first	count=3
function	expands [function_2] ||| [function_2] [function_1]	count=1
function	[function] file named ||| file exists [function]	count=1
module	function takes ||| 7.1.2	count=1
arg	elements eq to object ||| object	count=1
arg	filename into ||| filename visit beg	count=1
module	new vector ||| 6	count=1
module	string constant into ||| 21	count=1
arg	bitmap bitmap ||| bitmap	count=1
module	is non-nil display-buffer is ||| 27 14	count=1
function	and elements ||| union	count=1
module	than 0 point-min otherwise ||| 29	count=1
function	window ||| get window	count=1
function	of bool ||| bool vector union	count=1
function	buffer without disrupting the ||| bidi string mark left to	count=1
function	window the window selected ||| frame selected	count=1
module	[module_1] processes ||| [module_2] [module_1]	count=1
function	init file it ||| auto save list file	count=1
function	fontset according to ||| from fontset	count=1
function	find-file does but it ||| find	count=1
function	coding system ||| coding system	count=5
function	which warning [function_2] ||| [function_2] [function_1]	count=1
function	[function] beginning ||| [function] overlay change	count=6
function_arg	[function_1] properties ||| [arg_2] [function_1]	count=7
function	copies the sign ||| copysign	count=1
function	by making new ||| pop	count=1
arg	of fun to init ||| fun init	count=1
function	to the header line ||| init header	count=1
function	emacs-recognized extended [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] the left ||| [function_2] [function_1]	count=2
function	contents of register ||| register	count=1
arg	return bitwise ||| c	count=1
arg	and optionally [arg_2] ||| [arg_1] [arg_2]	count=1
function	point ||| float	count=1
function	init file it ||| auto save	count=1
function	coding system which ||| coding system	count=1
function	the sign ||| copysign	count=1
module	use for auto-saving ||| 25 2	count=1
function	coding system to use ||| set terminal coding system	count=1
arg	propname property ||| propname	count=2
arg	s2 have in common ||| s2	count=1
arg	region beg [arg_2] ||| [arg_1] [arg_2]	count=1
function	defines a new fontset ||| from fontset spec	count=1
function_arg	or end of an [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	if you have not ||| auto save list	count=1
function	if ||| up	count=2
function_arg	this sets [arg_2] ||| [arg_2] [function_1]	count=5
function	sends ||| signal process	count=2
arg	the event after ||| after	count=1
arg	as seen from ||| window ignore sign wrap mini	count=1
function	if the value ||| up	count=2
function_arg	table [arg_2] ||| [function_1] [arg_2]	count=8
arg	by [arg] elements ||| pred [arg]	count=1
module	this variable is ||| 27 14	count=2
module	minibuffer prompting with string ||| 10.4	count=1
arg	windows in the cyclic ||| minibuf all-frames	count=1
module	returns a new vector ||| 6	count=1
function	point and then ||| then	count=1
function	split an existing ||| up	count=1
arg	object if no ||| prop object limit	count=1
module	string need not match ||| 33	count=2
function	completions of ||| completions	count=1
function_arg	split the [arg_2] ||| [function_1] on [arg_2]	count=1
function_arg	-remove pred ||| separate pred	count=1
arg	[arg_1] for key ||| [arg_2] [arg_1]	count=2
function	[function] closes ||| [function] close	count=1
function	non-nil ||| map char	count=1
function	delete trailing ||| delete trailing	count=1
function	have ||| auto save	count=1
function	based on this ||| list	count=1
function_arg	[function_1] [arg_2] ||| [function_1] all [arg_2]	count=6
arg	file [arg_2] ||| [arg_1] switches [arg_2]	count=1
arg	as [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] help command ||| [function_2] [function_1]	count=3
arg	window to [arg_2] ||| [arg_1] [arg_2]	count=1
module	means display-buffer ||| 14	count=1
module	text from ||| 31	count=1
module	command [module_2] ||| [module_2] [module_1]	count=1
function	a list of directories ||| path	count=1
function	minibuffer evaluates it then ||| eval minibuffer	count=1
arg	window ||| window bury-or-kill	count=1
module	return pred x for ||| dash	count=1
function	left pixel edge of ||| window pixel left	count=1
function	of the body ||| body	count=1
module	a ||| 38 18	count=1
module	thrown away at ||| 8.6	count=1
arg	the combined entry ||| before-p	count=1
function	this function removes ||| face remap remove	count=1
function	key sequence ||| read key sequence	count=2
function	menu ||| item from menu	count=1
module	is [module] and ||| [module]	count=1
function	a string of ||| seconds	count=1
function	[function_1] table made ||| [function_2] [function_1]	count=2
function	the number of color ||| display color	count=1
function	value ||| value	count=1
function	file name ||| file name completion	count=1
function	command replaces the buffer ||| buffer	count=1
arg	for regexp ||| regexp	count=1
function	string the text matched ||| string	count=1
function	split s up ||| split up to	count=1
function	[function_1] should not ||| [function_2] [function_1]	count=4
arg	prompt and ||| prompt	count=3
function	shell [function_2] ||| [function_2] [function_1]	count=2
function_arg	bytes [arg_2] ||| [function_1] [arg_2]	count=1
module	point ||| 31 1	count=2
arg	and do then ||| then	count=1
function	this function [function_2] ||| [function_2] [function_1]	count=5
arg	copying [arg] ||| [arg]	count=3
module	this function ||| 29	count=2
module	to make ||| 27 14	count=1
arg	s2 have in ||| s2	count=1
module	a line ||| 1	count=1
arg	keymap to parent ||| keymap	count=1
module	the value of this ||| 14	count=2
arg	argument function ||| function	count=1
arg	or after node ||| node	count=1
module	coverage testing [module_2] ||| [module_1] [module_2]	count=2
function	[function_1] [function_2] of the ||| [function_2] history [function_1]	count=1
function	returns the file ||| auto save file	count=1
module	not already ||| 25 2	count=1
arg	[arg] in ||| [arg] string	count=2
arg	signal ||| signal	count=1
function_arg	[function_1] and ||| [arg_2] [function_1]	count=4
function	runs a garbage ||| garbage	count=1
module	if ||| 1	count=2
module	during its next redisplay ||| 4.1	count=1
function	sets the ||| set	count=9
function_arg	[function_1] sequence ||| [function_1] [arg_2]	count=3
module	[module] sorted ||| [module] 6.3	count=1
function	minimum accessible ||| min	count=1
function	minibuffer ||| minibuffer	count=10
function	the window [function] config was ||| [function] frame	count=1
function	command inserts [function_2] ||| [function_1] [function_2]	count=1
function	process ||| auto save list	count=1
module	file it initializes ||| 25 2	count=1
function	end of the match ||| end	count=1
module	this function returns the ||| 8 3	count=2
function	command inserts the ||| insert file	count=1
arg	variable var as ||| var fun	count=1
function_arg	size of [arg_2] ||| [function_1] [arg_2]	count=1
function	function returns the nondirectory ||| nondirectory	count=1
function	the current depth ||| depth	count=1
arg	from-buffer-or-name into ||| from-buffer-or-name start	count=1
module	already ||| 25	count=1
module	this function ||| 9.1	count=1
function	current window ||| current window	count=1
function	function returns a copy ||| copy	count=2
module	if non-nil edebug ||| 17	count=1
arg	the previous [arg] of ||| [arg]	count=1
function	this ||| float	count=1
function	the indentation ||| indentation	count=1
function	set it ||| list	count=1
function	converts the region ||| region	count=2
arg	to len ||| len	count=1
arg	process process [arg_2] ||| [arg_2] [arg_1]	count=5
function	is at the beginning ||| bobp	count=1
function_arg	[function_1] [arg_2] list ), in no ||| [function_1] [arg_2]	count=4
module	the minibuffer ||| 13	count=1
function	you have not already ||| list file	count=1
arg	adds the element element ||| element	count=1
function	host name and process ||| save	count=1
module	if the ||| 27 14	count=2
function	appends the ||| append	count=2
function	sets the syntax ||| syntax	count=1
function	file mode or permissions ||| file modes	count=1
module	relevant variables during its ||| 22 4.1	count=1
arg	in list equal to ||| elem list	count=1
function	macro defines ||| menu define	count=1
module	than 0 point-min otherwise ||| 29 1	count=1
arg	rgb a list ||| rgb frame	count=1
function	given family ||| family alternatives	count=2
module	function tests ||| 3	count=1
function	window as dedicated to ||| set window dedicated p	count=1
module	the ending position ||| 20	count=1
module	non-nil lisp programs and ||| 7	count=1
function	of scroll ||| window scroll	count=1
function	this function reads abbrev ||| read abbrev	count=1
function	sexp ||| parse partial sexp	count=1
module	variable is ||| 30	count=1
module	function calls its argument ||| 6	count=2
function	accessible portion of ||| buffer	count=1
module	if point ||| 31	count=2
function	the ending ||| event	count=1
function	command makes a symbolic ||| make symbolic	count=1
function	[function_1] xml ||| [function_1] [function_2]	count=4
function	keymap to the header ||| init header	count=1
arg	prompt ||| prompt default	count=1
function	current global map to ||| global	count=1
function	accessible portion of ||| point min	count=1
arg	function returns the value ||| frame	count=1
function	deletes ||| ewoc delete	count=1
arg	prompt and ||| prompt initial history	count=1
arg	makes buffer-or-name ||| buffer-or-name	count=1
arg	of fun [arg_2] ||| [arg_1] [arg_2]	count=1
module	minibuffer contents with ||| 19	count=3
module	new vector containing ||| 5	count=1
function	value for ||| window parameter	count=1
function	your init file it ||| save list file	count=1
module	the minibuffer a ||| 19 13	count=1
function	default file ||| abbrev file	count=2
arg	the binding for the ||| binding	count=1
function	previous older history element ||| previous history element	count=1
function	input method [function_2] ||| [function_1] [function_2]	count=3
function	family is specified but ||| family	count=1
function	write and execution permissions ||| file modes	count=1
module	window’s ||| 27	count=1
function	it ||| variable buffer	count=1
function	you have not ||| save list file	count=1
arg	[arg_1] as ||| [arg_1] [arg_2]	count=4
module	has a ||| 6 6	count=1
function	function [function] ||| [function] frame on display	count=3
arg	a help buffer ||| buffer	count=1
function	[function_1] window configuration ||| [function_1] [function_2]	count=3
function	minibuffer evaluates ||| eval minibuffer	count=1
arg	obsolete-face ||| obsolete-face	count=1
function	face displays differently from ||| face differs from	count=1
arg	[arg_1] end into ||| [arg_1] [arg_2]	count=1
arg	hook [arg_2] ||| [arg_1] [arg_2]	count=3
function	this function compares two ||| compare	count=1
function	function makes [function_2] ||| [function_2] [function_1]	count=2
function	string of years ||| format	count=1
function_arg	[function_1] [arg_2] ||| [function_1] new-pos [arg_2]	count=7
function	[function_1] group ||| [function_1] [function_2]	count=4
function	the strings and/or characters ||| before markers	count=1
arg	value for ||| value	count=1
function	function calls its argument ||| map char table	count=1
arg	[arg_1] to newname ||| [arg_2] [arg_1]	count=2
function	means display-buffer ||| pop	count=1
function	returns the query flag ||| process query on exit flag	count=1
function	non-nil the prefixes specified ||| prefixes	count=1
function	[function] local to ||| [function] local	count=3
function_arg	this function [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	auto-save-list-file-name if ||| file	count=1
function	your ||| auto	count=1
module	of elements that ||| 6	count=1
arg	n times ||| n	count=1
function	is on ||| on	count=1
function	this ||| seconds	count=1
function	and ||| save list	count=1
function	mode ||| mode key	count=1
arg	and documentation docstring for ||| docstring	count=1
function	function returns [function] for ||| window configuration [function]	count=1
function	initializes auto-save-list-file-name if you ||| save list	count=1
arg	feature is now ||| feature	count=1
module	of ||| 38 7	count=2
module	an existing window ||| 27	count=1
function_arg	[function_1] s ||| [arg_2] [function_1]	count=3
function	[function_1] input method ||| [function_2] [function_1]	count=3
module	the ||| 2	count=1
function	kill ||| kill	count=1
function	to trigger another garbage ||| gc cons threshold	count=1
arg	[arg_1] [arg_2] ||| [arg_2] newdef keymap [arg_1]	count=1
arg	the message and ||| message	count=1
function	your init file it ||| auto save list	count=1
function	a window at ||| buffer at	count=1
arg	and suffix holds ||| predicate suffix	count=1
function	file ||| auto save list file	count=1
function	this sets ||| set right margin	count=1
function	[function_1] abbrev ||| [function_2] table [function_1]	count=2
arg	fn ||| fn &rest	count=1
function	non-nil ||| pop	count=2
function	the insertion type ||| insertion type	count=1
function	in the region from ||| fill region	count=1
function	new ewoc ||| ewoc	count=1
arg	to process ||| process	count=1
function	item ||| item	count=1
module	is allowed ||| 27 14	count=1
module	of ||| 6 7	count=1
module	garbage ||| e 3	count=1
function	base 64 code ||| base64 encode	count=2
function	imenu ||| imenu add	count=1
arg	[arg_1] end as ||| [arg_2] [arg_1]	count=1
module	this ||| 20 7.13	count=2
function	in [function] ||| [function] binding	count=1
function	position ||| end	count=1
arg	key must ||| key	count=1
function	exit status of ||| process exit status	count=2
arg	of lists ||| &rest lists	count=1
arg	to non-nil bind ||| &rest else	count=1
function	leftmost column of ||| window left column	count=1
function	name and ||| list	count=1
function	documentation string of ||| face documentation	count=1
module	file ||| 2	count=1
function	this returns the ending ||| event end	count=1
function	the insertion type ||| insertion	count=1
function	of color ||| tty color	count=1
arg	of [arg] in ||| image [arg]	count=1
function	new hash table ||| hash table	count=2
arg	the cyclic ordering of ||| minibuf all-frames	count=2
function_arg	sign of [arg_2] ||| [function_1] x1 [arg_2]	count=4
function	below the ||| display buffer below	count=1
function	filename ||| name sans versions	count=1
arg	filename as a ||| filename	count=1
function	this function returns a ||| vconcat	count=1
function	dumps the [function] ||| dump [function]	count=1
module	for this ||| 20 5	count=1
function	the frame that ||| frame	count=1
module	[module] meaning help ||| [module]	count=1
module	this ||| 22 5	count=1
function	function calls its ||| map char table	count=1
arg	collection ||| collection predicate	count=1
function	the ||| mark ring	count=2
function	returns the file name ||| terminal name	count=1
function	reads ||| list	count=1
function_arg	truename [arg_2] ||| [function_1] [arg_2]	count=1
function	already set ||| auto	count=1
function_arg	[function_1] value ||| [arg_2] [function_1]	count=7
arg	[arg_1] tabname a ||| [arg_2] definitions [arg_1]	count=3
function	this function reads ||| read	count=3
arg	command fills ||| start end justify citation-regexp	count=1
arg	displays the message message ||| message	count=1
function	a given [function_2] ||| [function_2] [function_1]	count=16
arg	through the ||| form &rest more	count=1
arg	from pos instead of ||| pos limit	count=1
module	this returns the ||| 7	count=1
module	file converting it according ||| 24 12.2	count=1
arg	from ||| from &optional	count=1
function_arg	[function_1] in position ||| [function_1] [arg_2]	count=11
function	the selected ||| selected	count=2
function	query ||| process query on exit flag	count=1
function	major mode [function_2] ||| [function_2] [function_1]	count=6
module	automatically buffer-local ||| 11 10.2	count=2
function	frame [function_2] ||| [function_2] [function_1]	count=7
arg	prompt and providing completion ||| prompt directory default require-match initial predicate	count=1
module	is non-nil that ||| 27 14	count=1
arg	with arguments ||| arguments	count=1
arg	with font-spec for the ||| font-spec frame add	count=1
module	before an error is ||| 5	count=1
function	text between ||| text properties	count=1
module	function ||| 3	count=1
module	this variable is ||| 14	count=2
module	that would ||| 7	count=1
arg	binding ||| binding	count=4
function	reads the first textual ||| read	count=1
module	variable ||| 11 12	count=2
arg	eol-coding and ||| eol-coding	count=1
module	a macro ||| 13 1	count=1
module	this ||| 39 3	count=1
function	after emacs reads your ||| save list	count=1
function	for print-length ||| length	count=1
function	possible name for a ||| name	count=1
function	prefixes specified by ||| prefixes	count=1
function_arg	[function_1] [arg_2] ||| [function_1] define name [arg_2]	count=3
function	type ||| type	count=1
function	element ||| map char table	count=2
function	in the current ||| completion in	count=1
arg	argument function for ||| function	count=1
module	be allocated ||| e 3	count=1
function	[function_1] indents the ||| [function_1] newline and [function_2]	count=4
function	command line that ||| command line	count=1
function	this function returns ||| vconcat	count=1
module	that means ||| 27	count=1
function	collection for ||| table	count=1
module	height or width of ||| 27 4	count=1
function	line number [function_2] ||| [function_2] [function_1]	count=4
function	function destroy ||| destroy	count=1
module	that ||| 4	count=2
module	means display-buffer ||| 27 14	count=1
function	function tries to split ||| split	count=1
function_arg	window that position ||| posn window position	count=1
arg	returns t if regexp ||| regexp	count=1
function	insertion [function_2] ||| [function_1] [function_2]	count=2
arg	value value2 otherwise ||| value2	count=1
function	function sets the buffer ||| set process buffer	count=1
arg	frame raises it ||| frame norecord	count=1
arg	seconds seconds this function ||| seconds	count=1
arg	the character old-char ||| old-char	count=1
function	to split an existing ||| up	count=1
function	directory named ||| copy directory	count=1
module	comparing ||| 31 15	count=2
function	of this variable is ||| mark ring	count=1
function	this function stores ||| code	count=1
module	function returns t if ||| 1	count=2
function	to specify the dimensions ||| display mm dimensions	count=1
function	current buffer is on ||| on	count=1
module	between ||| 31 19.2	count=2
function	below ||| display buffer below	count=1
arg	of the named program ||| program	count=1
function	by choosing ||| display buffer use some	count=1
function	function puts ||| state put	count=1
function	color cells ||| display color cells	count=2
arg	arguments args ||| repeat function args	count=1
function	function returns ||| current	count=1
function	raises the frame that ||| auto raise	count=1
function	properties from ||| properties	count=1
module	of ||| 17	count=1
function	and the text conversion ||| change text conversion	count=1
arg	[arg_1] of tree ||| [arg_1] [arg_2]	count=1
function	file name ||| save file name	count=1
module	its argument ||| 6	count=2
function_arg	[function_1] skipping over ||| [arg_2] [function_1]	count=4
function	abbrev tables listed in ||| abbrev	count=1
function	function returns the xlfd ||| font xlfd	count=1
function	days hours etc ||| format seconds	count=1
function	the year corresponding to ||| year	count=1
function	if ||| window p	count=1
function	of the startup ||| startup	count=1
module	limits of the accessible ||| 29 2.3	count=2
function	datagram connection or server ||| process datagram address	count=1
arg	font-spec for ||| font-spec frame	count=1
function	named property in ||| get	count=1
function	this function sets ||| set	count=12
function	window typically one ||| window	count=1
function	the height and ||| height	count=1
function	is [function] ||| [function] p	count=2
arg	[arg_1] through end ||| [arg_2] [arg_1]	count=2
arg	data adding it to ||| data	count=1
module	this function calls ||| 6 6	count=1
function	emacs reads ||| save	count=1
function	kill ring ||| kill ring	count=2
function_arg	[function_1] n ||| 31 7 just one [function_1] [arg_2]	count=2
function	the [function] of ||| [function]	count=1
module	but inform coverage testing ||| 17	count=1
arg	returns value ||| value	count=1
arg	buffer if flag is ||| flag	count=1
arg	sep ||| sep	count=1
module	other windows ||| 27 4	count=1
arg	menu ||| doc menu	count=1
function	compares two window ||| compare window	count=2
arg	this function selects frame ||| frame norecord	count=1
function_arg	the pid [arg_2] ||| [arg_2] [function_1]	count=1
module	function returns ||| 27 25	count=1
function	greater ||| buffer	count=1
module	not already ||| 25	count=1
function	deletes the [function_2] ||| [function_2] [function_1]	count=2
arg	lists such that they ||| lists	count=1
function	the end of the ||| end of buffer	count=1
arg	of height lines ||| height	count=1
function_arg	link to [arg_2] ||| [arg_2] [function_1]	count=2
function	directory ||| file directory	count=1
function	the rehash [function_2] ||| [function_1] [function_2]	count=1
function_arg	the object [arg_2] ||| [function_1] x y [arg_2]	count=3
module	function for ||| 6	count=2
module	name and process id ||| 2	count=1
function	reads the name ||| read buffer	count=1
function	your ||| save list	count=1
function	expressions debugged ||| edebug test	count=1
function	returns the rehash threshold ||| hash table rehash threshold	count=1
function	you have not already ||| list	count=1
function	input from the ||| read from	count=1
function	edebug ||| edebug test	count=1
function	not already set ||| save	count=1
function	list of coding systems ||| coding systems	count=3
module	new window for ||| 14	count=1
function	top entry ||| top	count=1
function	than [function_2] ||| [function_2] [function_1]	count=1
function	signaled and not handled ||| debug	count=1
module	variable is ||| 30 7	count=1
function	with some other ||| replace	count=1
function_arg	for directory [arg_2] ||| [function_1] [arg_2]	count=3
function	the initial ||| initial	count=2
arg	buffer-local [arg] ||| [arg]	count=1
function	[function_1] conversion of ||| [function_2] [function_1]	count=3
function	and returns an indirect ||| indirect	count=1
function	whose syntax ||| syntax	count=1
function	the coding [function_2] ||| [function_2] [function_1]	count=8
function	set it non-nil ||| save list	count=1
module	the ||| 4	count=2
function	[function_1] window as ||| [function_2] [function_1]	count=1
arg	state state into ||| state	count=1
function	function sets ||| set terminal parameter	count=1
function	characters whose syntax classes ||| syntax	count=1
arg	remapping of face ||| face	count=1
function	the current ||| current	count=6
function	this function returns ||| current	count=1
arg	window ||| window horizontal ignore pixelwise	count=1
function	and height [function_2] ||| [function_2] [function_1]	count=1
function	appends the ||| append to	count=1
module	displays ||| 37 21.2	count=1
arg	sequence the results ||| sequence separator	count=1
function	buffer’s auto-save ||| auto save	count=1
module	[module_1] of ||| [module_1] [module_2]	count=12
function	if ||| auto save list	count=1
function_arg	[function_1] of count ||| [arg_2] [function_1]	count=2
arg	value value and ||| value	count=1
arg	items [arg] and ||| n [arg]	count=1
function	marker ||| marker	count=2
function	[function_1] configuration ||| [function_1] [function_2]	count=10
module	already set it ||| 2	count=1
function	variable is ||| mark	count=1
function	specifies the mouse pointer ||| pointer	count=1
function_arg	[function_1] start and ||| [arg_2] [function_1]	count=12
function	on this ||| auto	count=1
function	to update [function] line and ||| [function] line update	count=1
module	files can ||| 24 11	count=1
function	the largest ||| max	count=1
module	all ||| 17 2.16	count=2
module	or directory for emacs ||| 38 1.1	count=1
module	updating the [module] ||| [module] 4	count=1
function	the startup screen ||| inhibit startup screen	count=2
function	the host ||| auto save	count=1
function	in list replaced ||| at	count=1
function_arg	[function_1] and pushes ||| [function_1] position [arg_2]	count=1
arg	this function defines ||| docstring props	count=2
arg	[arg_1] and r ||| [arg_2] [arg_1]	count=1
function	[function_1] local ||| [function_2] [function_1]	count=1
arg	[arg] have ||| [arg]	count=1
arg	in [arg] between positions ||| start end [arg]	count=1
arg	symbol ||| symbol	count=8
function	set ||| save	count=1
module	function converts ||| 21 1	count=1
function	coding systems ||| coding systems for	count=1
arg	finds [arg_2] ||| [arg_2] [arg_1]	count=3
arg	width ||| width pretend	count=1
arg	that position is in ||| position	count=1
function_arg	the object [arg_2] ||| [arg_2] [function_1]	count=3
function	a serial ||| serial term	count=1
arg	object to [arg_2] ||| [arg_1] [arg_2]	count=1
function	a vector never as ||| vector	count=1
arg	frame can really display ||| frame	count=1
function	minor modes ||| minor	count=1
function	removes ||| remap remove	count=1
arg	string and the next ||| string	count=1
function_arg	display table [arg_2] ||| [function_1] [arg_2]	count=3
arg	list each time item ||| item list	count=1
arg	sequence the ||| sequence	count=1
arg	[arg_1] pattern ||| [arg_1] [arg_2]	count=1
function	avoids modifying the match ||| match	count=1
function	if the ||| pop	count=2
function_arg	[function_1] parameter ||| [arg_2] [function_1]	count=3
function	string made ||| string	count=1
function	returns the indentation ||| indentation	count=1
function	[function_1] byte ||| [function_1] [function_2] pos string	count=2
function_arg	[function_1] count ||| [function_1] line [arg_2]	count=1
module	text ||| 31	count=22
arg	this function empties out ||| keep-record	count=1
arg	only ||| no-mini	count=1
function	input from ||| from	count=1
module	recorded in ||| 9.2	count=1
function	function returns the window ||| window	count=1
module	window for ||| 27 14	count=1
module	command ||| 20	count=4
module	[module_1] option specifies ||| [module_2] [module_1]	count=2
arg	that has ||| function	count=1
arg	function function ||| function	count=1
arg	frame ||| frame background-p	count=1
arg	reg ||| reg beforep	count=1
function	as auto-saved ||| auto saved	count=1
module	is none ||| 21.3	count=1
function	as the coding ||| coding	count=2
function	[function_1] depth ||| [function_2] [function_1]	count=4
function	minibuffer raises the ||| auto raise	count=1
function	set it ||| save list file	count=1
module	nil ||| 5 2	count=3
module	loading specified ||| 15	count=1
function_arg	property [arg_2] ||| [function_1] char [arg_2]	count=3
module	this function sets the ||| 21 12	count=1
function	buffer text with the ||| revert buffer	count=1
arg	of this string and ||| string	count=1
function	or local ||| enable local	count=1
arg	symbol add [arg_2] ||| [arg_1] [arg_2]	count=4
function	print-length to ||| print length	count=1
arg	n times with itself ||| n	count=1
function	function puts the ||| window state put	count=1
module	result a ||| 32 1	count=1
arg	change in the prop ||| pos prop object	count=1
function	proper ||| current	count=1
arg	list of directories ||| path	count=1
module	that means display-buffer may ||| 27 14	count=1
function	the number of color ||| color	count=1
arg	newdef for [arg_2] ||| [arg_1] [arg_2]	count=3
module	or deleting other windows ||| 27 4	count=1
arg	[arg_1] character character ||| [arg_2] [arg_1]	count=4
function	current window [function_2] ||| [function_2] [function_1]	count=1
function	top entry in ||| top line	count=1
function	the dimensions of graphical ||| dimensions	count=1
function	based ||| auto	count=1
arg	property list plist ||| plist property	count=4
function	sets the :underline attribute ||| set face underline	count=1
function	function returns window’s value ||| parameter	count=1
function_arg	[function_1] command a ||| [function_1] [arg_2]	count=3
arg	cyclic ||| minibuf all-frames	count=1
function	local ||| local	count=2
function	change is ||| property change	count=3
function	name of the font ||| font	count=1
function	subtype of ||| subtype	count=1
function	currently visible on ||| visible in	count=1
module	of all expressions ||| 17 2.16	count=1
function	style symbols to use ||| styles	count=1
arg	filename assuming the ||| filename	count=1
function_arg	[function_1] with args ||| [function_1] [arg_2]	count=1
module	the limits of ||| 29 2.3	count=2
arg	frame can ||| frame	count=1
arg	representation of object ||| object	count=1
module	it initializes auto-save-list-file-name ||| 2	count=1
module	this function ||| 17.1	count=1
function	[function_1] object ||| [function_2] [function_1]	count=2
arg	in string ||| string &optional	count=1
function	makes a [function_2] ||| [function_1] [function_2]	count=3
arg	regexp in [arg_2] ||| [arg_2] [arg_1]	count=1
arg	of window’s buffer in ||| to	count=1
function	[function_1] fit ||| [function_2] window [function_1]	count=1
function	like [function_2] ||| [function_2] [function_1]	count=2
arg	keymap to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	buffer-or-name the current buffer ||| buffer-or-name	count=1
function_arg	[function_1] marker marker ||| [arg_2] [function_1]	count=2
function	this returns the ending ||| end	count=1
function	a serial ||| serial process	count=1
function	this function reads a ||| read	count=5
function	function tests for the ||| not	count=1
function	to the end of ||| end of	count=2
arg	char [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] the wildcard ||| [function_2] [function_1]	count=3
arg	contents of string as ||| process string	count=1
function	the emacs-recognized extended file ||| file extended	count=1
function	each element ||| map	count=1
function_arg	[function_1] nil otherwise ||| [function_1] [arg_2]	count=5
function	mouse pointer displayed ||| frame pointer	count=1
function	this function returns ||| minibuffer	count=1
function	text ||| text	count=7
function	[function_1] the system ||| [function_2] [function_1]	count=4
module	text property ||| 31 11	count=1
arg	ranges from [arg_2] ||| [arg_2] end [arg_1]	count=2
function	a ||| map	count=1
module	buffer so that ||| 29 4	count=1
function	vertical position in ||| position	count=1
arg	this function returns [arg_1] [arg_2] have equal components and ||| 2 7 equal [arg_1] [arg_2]	count=1
arg	nth position [arg] replaced with ||| n x [arg]	count=1
function	non-nil edebug tests coverage ||| edebug test coverage	count=1
module	this is the ||| 3	count=1
function	element ||| char table	count=2
function	the remapping ||| command remapping	count=1
module	otherwise ||| 29 1	count=2
function	moves point to the ||| goto	count=1
function	the text between ||| set text	count=1
function	displays differently ||| face differs	count=1
arg	[arg_1] first form ||| [arg_2] [arg_1]	count=4
function	major mode ||| mode	count=3
function	current mode ||| current input mode	count=1
function	node encapsulating ||| enter	count=2
module	is ||| 29 1	count=2
function	this sets the :stipple ||| set face stipple	count=1
arg	prompting with prompt and ||| prompt directory default	count=1
function	reads [function_2] ||| [function_2] [function_1]	count=4
function	avoids modifying the match ||| string match p	count=1
function	other than the ||| other	count=1
function_arg	a help [arg_2] ||| [function_1] [arg_2]	count=2
module	named ||| 8 4.1	count=1
module	returns a ||| 6.4	count=1
module	function returns ||| 4 6	count=2
module	returns a list of ||| 6.4	count=1
function	new frame in order ||| frame	count=1
arg	the text in ||| start	count=1
module	returns a new ||| 6	count=1
function	the leftmost child ||| window child	count=1
module	sigtstp ||| 36 8	count=1
module	the number of elements ||| 6	count=1
function	split ||| pop up	count=1
function_arg	the parameters [arg_2] ||| [function_1] [arg_2]	count=2
function	position ||| push mark	count=1
function	screen ||| screen	count=2
module	emacs ||| 25 2	count=2
function	variable and gives it ||| setq	count=1
function	graphic ||| display graphic	count=1
function	not ||| list file	count=1
function	[function_1] value ||| [function_1] [function_2]	count=1
function	[function_1] directory dir ||| [function_2] [function_1]	count=3
arg	subsequent attempt to set ||| variable	count=1
arg	key ||| key accept-defaults	count=1
function	the maximum [function_2] ||| [function_2] [function_1]	count=4
arg	argument list signature as ||| signature when	count=1
function	if [function] ||| [function] narrowed	count=1
function	[function_1] of the ||| [function_2] [function_1]	count=12
function	value ||| window parameter	count=2
arg	bitwise ||| c	count=1
module	process process ||| 8	count=1
module	of the ||| 31	count=3
arg	fn nil with initial-value ||| fn initial-value list	count=1
function	an alist that specifies ||| alist	count=1
function	[function_1] interface named ||| [function_1] [function_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] face attribute frame [arg_2]	count=1
arg	it without evaluating it ||| initial	count=1
module	this command ||| 25 3	count=1
function	remapping ||| remapping	count=1
arg	s up to n ||| s n	count=1
function_arg	link to filename ||| link filename	count=2
module	its ||| 6 6	count=2
function	margins of window ||| margins	count=1
function	name and process id ||| auto	count=1
arg	variable symbol [arg_2] ||| [arg_2] [arg_1]	count=1
function	change is ||| change	count=3
module	debugged ||| 17 2.16	count=2
function	the current heap size ||| gc cons percentage	count=1
function	display-buffer is ||| pop	count=1
arg	end in ||| end properties	count=1
function	extra slot ||| char table extra slot	count=2
function	acl for ||| file acl	count=1
function	no change ||| property change	count=3
arg	region beg [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	node encapsulating [arg_2] ||| [function_1] [arg_2]	count=4
function	and process ||| auto save	count=1
function	nil switch-to-buffer displays ||| switch to buffer preserve	count=1
arg	as old-pos ||| old-pos escape-from-edge only-in-line inhibit-capture-property	count=1
arg	this function returns number-or-marker ||| number-or-marker	count=1
arg	live window ||| all-frames	count=1
function	margin of the current ||| margin	count=1
function	emacs reads your ||| auto save list	count=1
function	number ||| number	count=1
function	function sets the ||| set char table range	count=1
arg	count columns ||| count	count=1
module	the limits ||| 2.3	count=2
module	set ||| 25	count=1
module	the ending position ||| 7.13	count=1
arg	list of directories given ||| path	count=1
module	and process ||| 25 2	count=1
arg	format format ||| file format beg	count=1
arg	prev-buffers ||| window prev-buffers	count=1
arg	that only nodes ||| nodes	count=1
arg	variable symbol [arg_2] ||| [arg_1] element [arg_2]	count=1
function	color specification either the ||| color	count=1
function	as obsolete indicating that ||| obsolete face	count=1
function	for ||| char	count=1
function_arg	[function_1] tree ||| [arg_2] [function_1]	count=1
function	copying for files ||| copying	count=1
function	of [function_1] [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] process ||| [arg_2] [function_1]	count=12
function	is like next-single-property-change except ||| next single	count=1
function	from the ||| from	count=2
function	initializes auto-save-list-file-name if you ||| auto save	count=1
arg	[arg_1] end using ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] on frame ||| [arg_2] [function_1]	count=1
function	this variable is ||| up	count=2
arg	returns ||| window	count=1
function	its argument function ||| table	count=1
function_arg	slot [arg_2] ||| [function_1] [arg_2]	count=2
arg	string and then replacing ||| string	count=1
module	argument function ||| 6 6	count=1
function	zip the ||| zip with	count=1
function_arg	[function_1] obsolete-face as ||| [function_1] obsolete face alias [arg_2]	count=2
function	to restore the ||| restore	count=1
function	tab in ||| tab	count=1
function	beginning of [function_2] ||| [function_2] [function_1]	count=3
function	type of scroll ||| window scroll	count=1
function	not already set ||| auto save list	count=1
function	[function_1] status ||| [function_2] [function_1]	count=2
module	variable is ||| 14	count=2
function	character ||| char	count=6
module	ending position of ||| 7.13	count=1
arg	function resizes [arg_2] ||| [arg_2] height [arg_1]	count=3
module	in ||| dash	count=2
function	file to load ||| file	count=1
arg	list satisfying ||| pred list	count=2
arg	[arg_1] after ||| [arg_2] [arg_1]	count=1
function	emacs reads your init ||| auto save list	count=1
function	edge ||| window trailing edge	count=2
arg	apply [arg] ||| [arg]	count=1
function_arg	[function_1] obsolete-face ||| [arg_2] [function_1]	count=2
module	[module_1] function processes ||| [module_2] [module_1]	count=1
function	if you have not ||| auto save list file	count=1
module	single ||| 20 8.2	count=1
function	the name ||| name	count=3
module	this function tests for ||| 10 3	count=1
function	function returns the definition ||| lookup key	count=1
function	below the ||| below	count=1
function	for each element of ||| char table	count=1
function	[function] always ||| scroll bar [function]	count=1
function	the edge coordinates of ||| window edges	count=1
module	the entire contents ||| 29	count=1
arg	n is specified ||| n	count=1
module	this function ||| 20 13	count=1
arg	process the filter function ||| process	count=1
module	new window ||| 14	count=1
module	name of ||| 6	count=1
function	no change ||| char property change	count=2
module	[module] is normally ||| [module] 5	count=3
arg	fn ||| fn &optional equal-test halt-test	count=1
arg	match for key ||| key	count=1
function	of ||| map char	count=1
function	[function_1] auto-save file ||| [function_1] [function_2]	count=1
arg	beg [arg_2] ||| [arg_2] [arg_1]	count=2
function	returns window’s ||| parameter	count=1
function	[function_1] [function_2] by the current buffer ||| [function_2] [function_1]	count=3
module	of ||| 33 4	count=2
module	the corresponding decoded text ||| 31	count=1
function	the fringe bitmap ||| fringe	count=1
function	compares two window configurations ||| compare window configurations	count=1
function	the selected window ||| same window	count=2
module	by making new ||| 27 14	count=1
module	corresponding decoded text ||| 31 24	count=1
function	all expressions ||| edebug	count=1
arg	as #rrrgggbbb ||| prompt convert allow-empty display	count=1
function	of mark-ring ||| mark ring	count=1
arg	name whose ||| name clone	count=1
function_arg	the sentinel [arg_2] ||| [function_1] [arg_2]	count=1
arg	function copies string ||| string	count=1
function	the debug-on-exit flag ||| backtrace	count=1
arg	new [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] justification style ||| [function_1] [function_2]	count=3
function	already ||| list	count=1
arg	count screen lines ||| count window	count=1
function_arg	removes [arg_2] ||| 12 10.1 [function_1] [arg_2]	count=2
arg	the text in string ||| string	count=1
function	leftmost column of window ||| window left column	count=1
arg	the right-margin property on ||| margin	count=1
function	this ||| pop	count=2
arg	name char and ||| char	count=1
arg	filename assuming ||| filename	count=1
arg	newdef for any keys ||| newdef	count=1
module	activated ||| 2.16	count=1
module	of a ||| 31 1	count=1
function	element that ||| element	count=1
arg	of tree ||| folder init-value tree	count=1
function_arg	slot n ||| slot char-table n	count=2
function	this command quits window ||| quit	count=1
function	[function] for which ||| window configuration [function]	count=1
module	a key ||| 21	count=1
function	other than ||| buffer other	count=1
arg	shorter [arg] ||| [arg] padding	count=1
arg	as the message and ||| message	count=1
arg	[arg_1] that ||| [arg_1] [arg_2]	count=3
module	that means display-buffer ||| 14	count=1
module	than ||| 29	count=1
module	that has ||| 6 6	count=1
arg	if flag is ||| window flag	count=1
module	an existing window ||| 14	count=1
function_arg	of elements [arg_2] ||| [arg_2] [function_1]	count=1
function	at the beginning ||| bobp	count=1
function	non-nil ||| auto	count=1
arg	[arg_1] function in ||| [arg_1] [arg_2]	count=4
function	this function removes ||| remove	count=1
function	face face displays differently ||| face differs	count=1
module	a ||| 1.1	count=1
function	[function] when ||| called interactively [function]	count=1
function	subtype symbol ||| subtype	count=1
module	[module] an input ||| [module]	count=3
function	whose syntax classes are ||| syntax backward	count=1
function	this function returns window’s ||| window parameter	count=1
module	minibuffer before the ||| 19 10	count=1
function	the property ||| symbol plist	count=1
arg	the current active keymaps ||| position keymaps	count=1
function	the kill [function_2] ||| [function_1] [function_2]	count=1
module	this function returns ||| 36 6	count=3
function	empty category ||| category	count=1
function_arg	[function_1] of char-table ||| [function_1] [arg_2]	count=7
arg	file filename ||| filename visit	count=1
function_arg	[function_1] for ||| [arg_2] [function_1]	count=5
arg	after the binding ||| binding	count=1
function	site-customization file ||| site run file	count=2
module	a [module_2] ||| [module_2] [module_1]	count=1
function	deleted ||| extract	count=1
arg	regexp separator ||| separator s	count=1
function	calls ||| map char table	count=2
module	ending position ||| 20 7.13	count=1
arg	[arg_1] and r ||| set case syntax delims [arg_1] [arg_2] case-table	count=1
module	this function ||| 29 1	count=1
function	buffer’s auto-save [function_2] ||| [function_1] [function_2]	count=1
module	front ||| 17.9	count=1
arg	x ||| x	count=9
function	remove whitespace at the ||| s trim	count=1
arg	of filename to ||| filename	count=2
module	minibuffer a ||| 13	count=1
arg	the list each ||| list	count=1
module	this ||| 31 1	count=2
function_arg	number [arg_2] ||| [function_1] [arg_2]	count=2
module	of all expressions ||| 17	count=1
function	name and process id ||| save list file	count=1
function_arg	[function_1] of tree ||| [function_1] fn [arg_2]	count=1
module	is greater than 0 ||| 29 1	count=1
function	function calls ||| map char table	count=1
function_arg	subtype symbol [arg_2] ||| [arg_2] [function_1]	count=1
function	returns the ending ||| event	count=1
module	function tests for the ||| 10 3	count=1
function	indentation of the current ||| current indentation	count=1
function_arg	[function_1] if n ||| [arg_2] [function_1]	count=4
arg	value rgb ||| rgb frame	count=1
arg	step ||| n step	count=1
function_arg	undo list ||| undo count list	count=1
module	the ending ||| 20	count=1
function	history [function_2] ||| [function_1] [function_2]	count=4
arg	calls its argument function ||| function	count=1
arg	function returns the ||| frame	count=2
function_arg	[function_1] buffer-or-name ||| [function_1] [arg_2]	count=2
module	of years days ||| 38 7	count=1
function	returns the minimum accessible ||| min	count=1
function	defines the maximum ||| max	count=1
arg	of window to ||| window	count=1
function	containing all ||| vconcat	count=1
module	returns window’s value for ||| 27	count=1
function	of face ||| font face	count=1
arg	[arg_1] value to ||| [arg_2] [arg_1]	count=3
function	the text between ||| set text properties	count=1
function_arg	[function_1] new-alias ||| [arg_2] [function_1]	count=2
arg	[arg_1] face ||| [arg_1] [arg_2]	count=1
function	deletes a process ||| delete	count=1
arg	prop ||| prop	count=4
function	indices of ||| elem indices	count=1
function	justification to use for ||| default justification	count=1
function	left margin indentation ||| to left margin	count=2
arg	key to a ||| key	count=1
module	list of ||| 5 4	count=1
function	that has ||| char	count=1
function	syntax ||| skip syntax backward	count=1
arg	the nested alist struct ||| struct	count=1
arg	end using a ||| end	count=1
function	like next-single-property-change ||| next single char	count=1
function	that buffer’s point ||| window point	count=1
function	[function_1] column value ||| [function_1] [function_2]	count=1
module	elements [module_2] ||| [module_1] [module_2]	count=2
arg	of fn ||| fn &optional equal-test halt-test	count=1
function	insertion [function_2] ||| [function_2] [function_1]	count=2
arg	but ||| wildcards	count=1
arg	that symbol is ||| symbol	count=1
function	[function_1] scalable fonts ||| [function_2] [function_1]	count=6
module	making new ||| 27 14	count=1
function	of window’s header ||| window header	count=1
function	inserts ||| insert file	count=3
function	number of ||| id	count=1
function	systems that ||| systems for	count=1
arg	number ||| number	count=4
function	returns t if so ||| p	count=1
module	value and returns that ||| 38 7	count=1
module	your init ||| 2	count=1
arg	filename2 ||| filename2	count=1
function	a new [function_2] ||| [function_1] [function_2]	count=1
function	file ||| save list file	count=1
function_arg	text [arg_2] ||| [arg_2] [function_1]	count=3
arg	func with the ||| func	count=1
function	baseline and the underline ||| underline	count=1
arg	sets the binding ||| binding	count=1
function	pred list -drop-while ||| split with	count=1
function	or least recently-used window ||| buffer pop up window	count=1
function	format as ||| time	count=1
arg	for visiting filename ||| filename	count=1
arg	[arg_1] in collection ||| [arg_2] [arg_1]	count=4
module	if you have not ||| 25	count=1
arg	with prompt and providing ||| prompt initial history args	count=1
function	property of ||| property	count=1
function_arg	[function_1] args ||| [arg_2] [function_1]	count=5
function	blank lines surrounding point ||| blank lines	count=1
module	and process id ||| 2	count=1
arg	operate assuming that string ||| string	count=1
function	word ||| word	count=3
module	in the echo area ||| 37 4.1	count=1
function	by making ||| up	count=1
function	get input from the ||| from	count=1
function	[function_1] whitespace ||| [function_2] [function_1]	count=2
function	nil switch-to-buffer ||| switch to buffer preserve window	count=1
arg	of lists ||| lists	count=2
module	that the entire ||| 29 4	count=1
module	minibuffer a nonnegative ||| 19 13	count=1
function	soft [function] ||| undo [function]	count=3
function_arg	[function_1] feature ||| [arg_2] [function_1]	count=1
arg	to the current buffer ||| buffer	count=1
function	the key [function_2] ||| [function_2] [function_1]	count=7
arg	pop-up menu and ||| position menu	count=1
function_arg	[function_1] marker marker ||| [function_1] [arg_2]	count=2
function	[function_1] directory that ||| [function_1] [function_2]	count=2
function	function ||| set	count=1
arg	[arg_1] named newname ||| [arg_2] [arg_1]	count=2
module	variable is the ||| 30	count=1
module	[module] may ||| [module]	count=3
function	a list of coding ||| find coding	count=3
function	the sentinel of ||| process sentinel	count=1
function	the fringe bitmap identified ||| fringe	count=1
function	init file ||| list file	count=1
function	startup echo area ||| startup echo area	count=1
arg	new in ||| new	count=2
function	a description of ||| description	count=1
function	to a string in ||| to string	count=1
function	an indirect ||| indirect	count=1
function	for the face ||| face	count=1
arg	name a ||| name	count=2
function	set ||| list	count=1
arg	[arg_1] to table ||| [arg_1] [arg_2]	count=3
arg	byte array bindat-raw ||| bindat-raw bindat-idx	count=1
function	host name ||| save list file	count=1
function	a new frame ||| frame	count=3
function_arg	slot n of ||| slot char-table n	count=2
module	what ||| 23	count=1
arg	minibuffer prompting with prompt ||| prompt default inhibit-null	count=1
function	line which ||| current	count=1
function	the [function_1] [function_2] ||| describe [function_1] [function_2]	count=1
function	removes ||| remove	count=3
function	the saveunder feature ||| display save under	count=1
function	[function_1] table or ||| [function_1] [function_2]	count=1
function	have not already set ||| list	count=1
function	list for the text ||| text	count=1
function	this creates and returns ||| make	count=1
function	value for ||| parameter	count=1
function_arg	fringe [arg_2] ||| [function_1] [arg_2]	count=3
function	symbol as an abbrev ||| define abbrev	count=1
function	in the current buffer ||| in	count=1
module	a symbol of ||| 4	count=1
arg	vector key to a ||| key	count=1
function	command input is ||| input	count=1
function	on ||| save	count=1
module	is the [module_2] ||| [module_1] [module_2]	count=3
function	has a ||| table	count=1
function	filename ||| file acl	count=1
function	set ||| save list file	count=1
function	[function_1] context ||| [function_1] [function_2]	count=4
module	automatically buffer-local so that ||| 11 10.2	count=1
arg	object rather than ||| pos prop object	count=1
module	which ||| 23	count=1
function	[function_1] table ||| [function_1] [function_2]	count=27
module	variables during its ||| 22 4.1	count=1
function	the dimensions ||| dimensions alist	count=1
module	is the basic function ||| 5	count=1
function	the epoch to ||| to time	count=1
function	of the ||| minibuffer	count=1
function	a number ||| numeric?	count=1
arg	back [arg] ||| [arg] object	count=1
function	list specifying the previous ||| prev buffers	count=1
arg	in object rather than ||| prop object	count=1
function	the display table ||| display table	count=1
arg	up of count ||| count	count=1
function	name and ||| auto save list file	count=1
function	has a ||| map	count=1
function	to start ||| to	count=1
arg	from frame to focus-frame ||| focus-frame	count=1
function	screen lines in the ||| screen lines	count=1
function	narrowed and nil otherwise ||| narrowed	count=1
function	it initializes auto-save-list-file-name ||| save	count=1
function	the rest ||| capitalize	count=1
function	the current buffer ||| buffer	count=7
module	function sets ||| 21 12	count=1
function	marks window as dedicated ||| dedicated	count=1
arg	position in object rather ||| pos prop object limit	count=1
function	used to ask ||| ask	count=1
arg	parameter parameter a ||| parameter	count=2
function	this returns the ||| event	count=1
function_arg	[function_1] list ||| [function_1] pred [arg_2]	count=1
module	entire ||| 29 4	count=1
function	of color cells the ||| color cells	count=1
arg	time ||| time	count=2
arg	a signal to process ||| signal	count=1
arg	[arg_1] and optionally ||| [arg_2] [arg_1]	count=3
arg	seconds since ||| seconds	count=1
module	display buffers ||| 27	count=1
function	update [function] line and ||| [function] line update	count=1
module	this function reports the ||| 30 5	count=1
function	the symbol ||| defvaralias	count=1
arg	of file filename into ||| filename visit beg	count=1
module	it initializes ||| 2	count=1
function_arg	an alias [arg_2] ||| [arg_2] [function_1]	count=3
function	the height in pixels ||| height	count=2
function	function parses a sexp ||| parse partial sexp	count=1
function	directories for searching ||| path	count=1
function	function [function_2] ||| [function_1] [function_2] kind	count=1
module	display-buffer may display ||| 27 14	count=1
module	greater than ||| 1	count=1
function_arg	[function_1] operation ||| [function_1] string [arg_2]	count=3
function	returns the value of ||| get	count=1
function	[function_1] conversion of ||| [function_1] [function_2]	count=3
function	calling function was called ||| called	count=1
function	body ||| body size	count=2
function	the visibility status ||| frame visible p	count=1
function	element of ||| char table	count=1
function	after ||| fill	count=1
module	on ||| 25 2	count=2
function	[function_1] cache ||| [function_2] [function_1]	count=1
function	function sends a ||| process	count=1
arg	key with value ||| map key	count=1
arg	predicate [arg] ||| [arg]	count=3
module	to process ||| 8	count=1
arg	and execute body ||| body	count=1
arg	current-face ||| current-face	count=1
module	first buffer in the ||| 8	count=1
module	this function sends a ||| 36 8	count=1
function	buffer as modified ||| set buffer modified	count=1
function_arg	forward [arg_2] ||| [function_1] line [arg_2]	count=4
function	[function_1] paragraph ||| [function_1] [function_2]	count=1
function	of extra slot ||| extra slot	count=1
function_arg	[function_1] symbol’s property ||| [arg_2] [function_1]	count=2
function	one following the newline ||| newline	count=1
arg	command selects ||| wildcards	count=1
function	it initializes ||| save	count=1
module	function moves back to ||| 29	count=1
function	to split ||| split	count=1
function	is non-nil display-buffer ||| pop up	count=1
function	function returns [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] width [function_1]	count=6
function_arg	[function_1] after pos ||| [arg_2] [function_1]	count=1
function	a generic mode ||| define generic	count=1
function	return the reverse of ||| s reverse	count=1
function	display-buffer is allowed to ||| up	count=1
function	[function_1] fit the ||| [function_2] window [function_1]	count=1
module	tests for the falsehood ||| 10 3	count=1
function	[function_1] bool ||| [function_2] [function_1]	count=2
function	current buffer if appropriate ||| buffer	count=1
arg	regexp [arg_2] ||| [arg_1] [arg_2]	count=1
function	visible on ||| pos visible in	count=1
arg	window is the only ||| no-mini	count=1
function	buffer without disrupting ||| bidi string mark left to right	count=1
arg	to face ||| face	count=1
module	of the buffer ||| 31 1	count=1
arg	character old-char with the ||| old-char	count=1
function	sets the header ||| set	count=1
function	existing window to make ||| pop	count=1
module	this function ||| 6.4	count=1
function	of ||| minibuffer	count=2
function	bool ||| bool vector	count=2
arg	if [arg] ||| [arg]	count=6
arg	except [arg] in ||| ewoc [arg]	count=1
module	horizontal position of ||| 31	count=1
function	bool ||| bool vector intersection	count=2
function	in ||| in	count=2
function	the style of justification ||| default justification	count=1
function	this variable ||| pop up	count=2
module	are thrown away ||| 31 8.6	count=1
function	be fit ||| fit frame to	count=1
function	below the selected ||| display buffer below selected	count=1
function	current ||| current	count=8
module	that ||| 6	count=3
module	that the entire contents ||| 29	count=1
arg	if n [arg_2] ||| [arg_2] [arg_1]	count=1
module	are ||| 4	count=1
module	of the current ||| 29 4	count=1
function	the number of bytes ||| bytes	count=1
module	function [module] ||| [module]	count=1
function	the display table of ||| window display table	count=1
function	current buffer’s auto-save ||| auto save	count=1
module	open existing files in ||| 24 6.1	count=1
module	the horizontal position of ||| 31	count=1
module	a lisp symbol ||| 19	count=1
arg	n items [arg_2] ||| [arg_1] [arg_2]	count=1
function	stores value as the ||| put char code	count=1
function_arg	[function_1] [arg_2] ||| [function_1] other frame [arg_2]	count=24
arg	events in sequence ||| sequence	count=1
module	major ||| 22	count=1
function	function returns the proper ||| current	count=1
function	lines in ||| lines	count=2
arg	converts the lisp representation ||| omit-port	count=1
module	file converting it ||| 12.2	count=1
function	[function_1] inherit ||| [function_1] [function_2] strings	count=4
arg	directory names ||| prompt directory	count=1
module	the current buffer so ||| 29 4	count=1
function	a new window ||| pop up	count=2
function	the face ||| face	count=1
module	the host name and ||| 25 2	count=1
arg	tabname a symbol ||| tabname	count=1
module	all ||| 5	count=1
arg	this function returns a ||| window	count=3
arg	new-char ||| new-char	count=1
function	is an alist ||| alist	count=3
function_arg	that feature ||| provide feature	count=1
arg	a subdirectory of dir ||| dir	count=1
function	this ||| list	count=1
arg	[arg_1] to pattern ||| [arg_2] [arg_1]	count=1
arg	t if regexp ||| regexp	count=1
module	all the ||| 5	count=1
arg	[arg_1] to underline ||| [arg_2] [arg_1]	count=3
function	nonnegative ||| minibuffer	count=1
function	buffer text with ||| revert buffer	count=1
module	[module_1] and ||| [module_1] [module_2]	count=4
function	event ||| event end	count=1
arg	that event ||| event	count=1
arg	[arg_1] buffer-or-name in ||| [arg_2] [arg_1]	count=12
arg	within the range ||| partially	count=1
arg	dividend [arg_2] ||| [arg_2] [arg_1]	count=3
module	debugger regardless of ||| 17 1.1	count=1
function	[function_1] buffer-invisibility-spec ||| [function_1] [function_2]	count=2
function	[function_1] [function_2] line and header line ||| [function_1] [function_2] line update all	count=1
arg	docstring and marks ||| docstring	count=1
module	if this variable is ||| 5	count=1
module	of the [module] tty ||| [module]	count=1
module	beginning of ||| 35 4	count=1
function	element of ||| table	count=1
function	completion [function_2] ||| [function_1] [function_2]	count=3
function_arg	displays [arg_2] ||| [function_1] other window [arg_2]	count=3
function	[function] completion in ||| [function]	count=2
function	buffer’s local [function] or nil ||| current local [function]	count=1
function	pair ||| syntax pair	count=1
arg	them with ||| fixedcase literal subexp	count=1
module	a new [module] spec ||| [module]	count=1
function	the maximum size of ||| ring max	count=1
function	of reporting progress of ||| progress	count=1
function	[function_1] nil ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] charset [arg_2]	count=1
function	an existing window to ||| up	count=1
function	see abbrev ||| abbrev	count=1
arg	function alias it looks [arg_1] [arg_2] actual ||| [arg_2] [arg_1]	count=4
function	text as xml ||| parse xml	count=1
function	in the region ||| fill region	count=1
function	returns the current global ||| current global	count=1
function	major mode and buffer-local ||| normal mode	count=1
arg	using [arg] which ||| [arg]	count=1
function	reads the name ||| read	count=1
function	your ||| save	count=1
module	this function calls its ||| 6	count=2
function	case [function_2] ||| [function_1] [function_2]	count=2
function	editable contents of ||| delete minibuffer contents	count=1
module	arguments is a ||| 12 5	count=1
arg	window [arg_2] ||| [arg_1] [arg_2]	count=1
arg	dirname to newname ||| dirname newname	count=3
module	return that object ||| 6 8	count=1
arg	to format format ||| file format beg end	count=1
arg	and executes body ||| &rest body	count=3
function	imenu ||| imenu	count=1
arg	which may be ||| buffer-name not-this-window frame	count=1
function	display-width ||| width	count=1
function	returns a ||| make	count=2
arg	this returns number converted ||| number	count=1
function	base 64 code into ||| base64 decode	count=1
function	grade ||| grade up	count=1
module	vector containing all the ||| 5	count=1
function	converts a symbolic ||| file modes symbolic	count=1
module	calls ||| 6 6	count=2
module	a [module] and that ||| [module] 2.1	count=1
arg	array bindat-raw [arg_2] ||| [arg_2] [arg_1]	count=2
arg	buffer from-buffer-or-name ||| from-buffer-or-name start end	count=1
function	given [function_2] ||| [function_2] [function_1]	count=16
function	this function [function_2] ||| [function_1] [function_2] kind	count=1
module	t if point ||| 1	count=2
function	new window for displaying ||| windows	count=1
module	package ||| 39 4	count=1
module	if point is ||| 31 1	count=2
function	of a network ||| format network	count=1
function	returns the acl for ||| acl	count=1
arg	of ||| function	count=1
function	the year ||| year	count=1
arg	each element of tree ||| init-value tree	count=1
function	a directory that is ||| directory	count=1
module	be a [module] describing ||| [module] 8	count=1
function	single space or n ||| space	count=1
arg	prefix [arg_2] ||| [arg_2] [arg_1]	count=2
arg	string2 ||| string2	count=1
function_arg	[function_1] index index ||| [arg_2] [function_1]	count=1
module	match ||| 33	count=4
function	window for ||| up	count=1
function_arg	forward skipping over ||| forward character-set limit	count=1
function	position if no change ||| property change	count=1
function	help command ||| help screen	count=1
module	for ||| 25	count=1
module	returns the ending position ||| 7.13	count=1
function	returns window’s value for ||| window parameter	count=1
function	in a window at ||| buffer at	count=1
module	variable alias ||| 11 13	count=1
function	of scroll ||| scroll	count=1
rep	this [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=8
arg	given [arg_2] ||| [arg_2] [arg_1]	count=1
function	tab in ||| for tab	count=1
function	value of asin ||| asin	count=1
function	graphic ||| graphic	count=1
function	face ||| face attribute	count=2
function	greater than ||| buffer	count=1
function_arg	[function_1] reg into ||| [function_1] [arg_2]	count=6
function_arg	length [arg_2] ||| [arg_2] [function_1]	count=1
function	of ||| of	count=3
module	current ||| 31 17.1	count=2
function	graphic display ||| display graphic	count=1
arg	frame to focus-frame ||| focus-frame	count=1
function	function returns the live ||| window	count=1
function	buffer-or-name ||| to buffer	count=1
function	to display ||| to	count=1
function	line ||| current	count=1
module	id ||| 25	count=1
function	parses the text as ||| parse	count=1
function	change [function_2] ||| [function_2] [function_1]	count=4
function	has a non-nil value ||| table	count=1
module	set it non-nil ||| 25 2	count=1
function	the list of active ||| current active	count=1
function	the top entry ||| window top	count=1
function_arg	deletes [arg_2] ||| [arg_2] [function_1]	count=2
function	using text ||| make text	count=1
function	following the newline just ||| newline and	count=1
function_arg	window [arg_2] ||| [arg_2] [function_1]	count=3
arg	value from the ||| attribute	count=1
function_arg	[function_1] them ||| [arg_2] [function_1]	count=1
function	window as dedicated ||| window dedicated p	count=1
module	this is ||| 9 5	count=2
function	it as obsolete indicating ||| obsolete face	count=1
function	previous sibling of ||| window prev sibling	count=2
arg	stored in the property ||| property	count=1
function	return the actual ||| posn actual	count=1
function_arg	displays [arg_2] ||| [function_1] other window buffer-or-name [arg_2]	count=1
function	text as xml rather ||| parse xml region	count=1
function	number of screen lines ||| count screen lines	count=1
module	and [module] ||| [module] 3	count=1
function	value of this variable ||| pop up	count=2
module	passing [module] integers ||| [module]	count=1
function	function returns the remapping ||| command remapping	count=1
module	to split ||| 27 14	count=1
function	function to ||| name function	count=1
arg	format format ||| format	count=1
function	[function_1] systems ||| [function_2] [function_1]	count=12
arg	this function resizes ||| pretend pixelwise	count=1
function	prefix adding ||| file prefix	count=1
function	buffer without disrupting the ||| bidi string	count=1
function	it non-nil ||| list file	count=1
arg	through the [arg_2] ||| [arg_2] [arg_1]	count=2
function	the maximum size of ||| max	count=1
arg	case-invariant with ||| case-table	count=1
function	name and process ||| auto save list file	count=1
module	registries ||| 37 12.9	count=1
function	mode for edebug when ||| mode	count=1
function	display buffers by making ||| pop up	count=1
module	are thrown away ||| 8.6	count=1
function	to the beginning of ||| beginning of	count=1
arg	displaying [arg] ||| [arg]	count=3
function	has ||| has	count=1
function	a string the ||| string	count=1
function	window below the ||| below	count=1
arg	macro named function so ||| function	count=1
arg	[arg_1] string ||| [arg_1] [arg_2]	count=2
function	restore the ||| quit restore	count=1
function	currently visible on the ||| visible	count=1
function	returns ||| event end	count=1
function_arg	function displays [arg_2] ||| [function_1] other frame buffer-or-name [arg_2]	count=1
function	argument ||| char table	count=2
function	dashed-words ||| s dashed words	count=2
function_arg	string [arg_2] ||| [arg_2] [function_1]	count=5
function	window at the ||| buffer at	count=1
function	compares two ||| compare	count=1
function	[function] towards negative ||| [function]	count=3
function	name and process ||| save	count=1
function	the minibuffer window ||| minibuffer	count=1
module	making ||| 27 14	count=2
function	[function] at ||| get [function]	count=1
module	position of ||| 20 7.13	count=1
function	the function insert-before-markers but ||| and	count=1
function	the file ||| auto save file	count=1
function	the quit ||| quit	count=1
function	the ||| ring	count=2
arg	[arg_1] in s ||| [arg_2] [arg_1]	count=1
function	fill [function_2] ||| [function_1] [function_2]	count=7
function	function sets the ||| set process buffer	count=1
function	unregisters ||| jit lock unregister	count=1
function	to a time value ||| seconds to	count=1
function	translation table [function_2] ||| [function_2] [function_1]	count=1
arg	window for a horizontal ||| window	count=1
function	string of syntax ||| skip syntax forward	count=1
function	marks the current buffer ||| set buffer	count=2
function	global ||| global	count=5
function	variable defines the maximum ||| max	count=1
function	access and modification times ||| times	count=1
function	as find-file [function] use ||| [function]	count=1
function	this creates [function_2] ||| [function_2] [function_1]	count=1
function	have not ||| auto	count=1
function	a frame configuration list ||| frame configuration	count=1
function_arg	[function_1] [arg_2] ||| [function_1] elem [arg_2]	count=3
function	command renames ||| rename	count=1
function	expands the ||| file expand	count=1
function	split an existing window ||| pop	count=1
function	the font ||| find font	count=1
arg	prompt ||| prompt initial history	count=1
module	string constant ||| 1	count=1
function	function converts a symbolic ||| symbolic	count=1
function	a new vector ||| vconcat	count=1
arg	pos ||| pos escape-from-edge limit	count=2
function	all the ||| all	count=2
arg	signal to ||| process signal	count=1
function_arg	[function_1] for ||| [function_1] filename [arg_2]	count=5
module	configuration of [module] and buffers ||| [module]	count=1
module	for displaying frame which ||| 37	count=1
function	function ||| map char	count=2
function	of the [function_2] ||| [function_2] [function_1]	count=2
arg	char-table ||| char-table	count=6
function	edebug tests coverage ||| coverage	count=1
function	for characters in ||| chars	count=1
module	function ||| 6.4	count=1
arg	of face to ||| face	count=1
function	sets the syntax ||| modify syntax	count=1
function_arg	function sets [arg_2] ||| [arg_2] [function_1]	count=7
function	the combination [function_2] ||| [function_2] [function_1]	count=1
function_arg	buffers to [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	with color [arg_2] ||| [function_1] name [arg_2]	count=3
function	argument ||| map char	count=1
arg	the width of frame ||| frame width	count=1
function	of this option ||| buffer base	count=1
function	buffer by choosing ||| use some	count=1
arg	propname property [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function] on ||| notifications get server [function]	count=1
function	name prompting with ||| name	count=1
function	[function_1] window’s ||| [function_1] [function_2]	count=4
arg	[arg_1] live ||| [arg_2] [arg_1]	count=4
function	the text of window’s ||| text	count=1
function	emacs reads your ||| save	count=1
function	returns the selected frame ||| selected frame	count=1
arg	the file filename1 ||| filename1	count=1
arg	dom into the current ||| dom	count=1
function	backing ||| backing	count=1
function	type of scroll ||| scroll	count=1
function	the edge coordinates ||| window edges	count=1
module	non-nil display-buffer ||| 27 14	count=1
function	if variable ||| if set	count=1
function	nil switch-to-buffer displays the ||| to buffer preserve window	count=1
module	current buffer ||| 4	count=1
function	the ||| save list file	count=1
function	of ||| char	count=1
function	[function_1] sibling ||| [function_1] [function_2]	count=4
arg	that matches pattern ||| pattern	count=1
function	function kills the ||| kill	count=1
module	value ||| 27 25	count=2
arg	[arg_1] in list ||| [arg_2] [arg_1]	count=4
function	the startup screen ||| startup screen	count=1
function	split window and ||| split	count=1
arg	window’s value for parameter ||| parameter	count=1
arg	[arg_1] and end ||| [arg_2] [arg_1]	count=1
function	abbrev properties ||| abbrev	count=1
function_arg	of bool [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] obsolete-face ||| [function_1] obsolete face alias [arg_2]	count=2
function	frame [function_2] ||| [function_1] [function_2]	count=7
function	after emacs reads ||| auto save	count=1
function	you compare two ||| compare	count=1
function	frame in order ||| frame	count=1
arg	[arg] in ||| ewoc [arg]	count=2
function	[function_1] file ||| [function_1] [function_2]	count=21
arg	a symbol not quoted ||| comment-list keyword-list font-lock-list auto-mode-list function-list	count=1
function	substrings of the ||| substrings	count=1
function	[function_1] for ||| [function_2] [function_1]	count=1
module	return a list with ||| dash	count=1
arg	[arg_1] but ||| [arg_2] [arg_1]	count=4
arg	of parameter ||| window parameter	count=1
function	inserts a ||| insert buffer	count=1
function	function ||| end	count=1
module	command displays [module] description ||| 4 [module]	count=1
function	by copying for ||| by copying	count=2
arg	a code-point ||| code-point	count=1
module	function converts the ||| 21 1	count=1
arg	undefined there ||| accept-defaults	count=1
module	function returns ||| 4 3	count=1
function	returns the rehash ||| hash table rehash	count=1
function	abbrev tables ||| abbrev	count=1
function_arg	[function_1] [arg_2] ||| [function_1] tabname [arg_2]	count=5
function_arg	[function_1] [arg_2] to expand to expansion ||| [function_1] abbrev [arg_2]	count=2
module	files [module_2] ||| [module_1] [module_2]	count=8
module	the current buffer corresponding ||| 29 2.4	count=1
function	table in a ||| table	count=1
arg	take [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	the header line ||| init header	count=1
arg	in symbol’s [arg_2] ||| [arg_2] [arg_1]	count=2
function	the xlfd ||| xlfd	count=1
function	bool vectors a ||| bool	count=2
module	init ||| 25 2	count=2
arg	font [arg] ||| font-spec [arg]	count=1
function_arg	positions [arg_2] ||| [arg_2] [function_1]	count=3
function	of highest priority ||| charset	count=2
arg	according to the ||| no-remap position	count=1
function	ask a user ||| ask user	count=1
function	otherwise ||| buffer end	count=1
function	except that if ||| p	count=1
function	greater than 0 ||| buffer end	count=1
function	joins ||| delete indentation	count=1
module	hours etc ||| 7	count=1
function	sets the debug-on-exit flag ||| backtrace debug	count=1
arg	of process ||| process	count=5
function	major [function] is derived ||| [function] p	count=1
function	the key sequence as ||| read key sequence	count=1
function	value of ||| pop up	count=2
arg	to end ||| end count-final-newline	count=1
module	of the minibuffer a ||| 19	count=1
module	constant into a key ||| 1	count=1
module	beginning ||| 31 1	count=2
arg	as the message and ||| message level buffer-name	count=1
function	of syntax class characters ||| syntax	count=1
function	expands the [function_2] ||| [function_2] [function_1]	count=1
module	it ||| 2	count=2
module	use for decoding ||| 32 10.8	count=1
function	the mouse pointer ||| pointer	count=1
function	host name and process ||| auto	count=1
module	the value of ||| 14	count=2
function	configurations as regards the ||| configurations	count=1
function	is non-nil display-buffer is ||| pop up	count=1
arg	execution of body ||| body	count=1
function	file name ||| name	count=2
function	live window and nil ||| window live	count=1
arg	named dirname [arg_2] ||| [arg_2] [arg_1]	count=1
function	just [function_2] ||| [function_1] [function_2]	count=1
function	copying ||| copying	count=3
function	non-nil display-buffer ||| pop up	count=1
function	process-file ||| file	count=1
module	the ||| 6 5	count=2
module	of numbers starting ||| 4	count=1
function_arg	[function_1] [arg_2] ||| [function_1] name [arg_2]	count=17
function	the prompt string ||| prompt	count=1
function	0 point-min otherwise ||| end	count=1
module	the last regular expression ||| 33	count=1
function	return the height and ||| height	count=1
arg	for matches for regexp ||| regexp	count=1
function	position that ||| position	count=1
arg	attribute of face ||| face frame inherit	count=1
function	of color ||| color	count=2
function	echo [function_2] ||| [function_2] [function_1]	count=2
arg	initial value value ||| variable value	count=1
function	init file it initializes ||| save list file	count=1
arg	are mentioned in syntaxes ||| syntaxes	count=1
function	a string of syntax ||| syntax	count=1
function	this function ||| signal	count=1
function	string or a buffer ||| display message or buffer	count=1
function	coding systems that ||| coding systems for	count=1
function_arg	[function_1] from terminal ||| [function_1] coding system coding-system [arg_2]	count=1
arg	in lists such that ||| lists	count=1
function	function reads the ||| read	count=1
module	this variable is the ||| 7	count=1
function_arg	[function_1] file ||| [arg_2] [function_1]	count=3
module	tests for the ||| 10 3	count=1
arg	[arg_1] record all ||| [arg_2] [arg_1]	count=3
function	point-min otherwise ||| end	count=1
arg	of frame ||| frame	count=3
function	[function] displaying ||| [function]	count=1
module	position of the first ||| 31	count=1
function_arg	property propname ||| property charset propname	count=1
module	name of [module_2] ||| [module_2] [module_1]	count=1
arg	executes body ||| body	count=1
function	may display buffers ||| pop up	count=1
module	frames and several ||| 28	count=1
arg	the abbrev has ||| abbrev	count=1
arg	each list in lists ||| lists	count=1
function	is a minibuffer ||| minibuffer	count=1
function	at the [function_2] ||| [function_2] [function_1]	count=4
function	next-single-property-change except that it ||| next single char	count=1
function	body width of window ||| body size	count=1
function	[function_1] the bottom ||| [function_2] [function_1]	count=4
function	to tab in ||| tab	count=1
function	a frame ||| current frame	count=1
function	window at ||| at	count=1
function	the backing ||| display backing	count=1
function	depth ||| depth	count=2
function	all ||| edebug test	count=1
function	fill [function] based ||| [function]	count=1
function	for displaying in ||| pop up windows	count=1
function	eval-expression and thus indirectly ||| eval expression	count=1
arg	as separate arguments ||| arguments	count=1
module	of years ||| 38	count=1
arg	[arg_1] a list ||| index [arg_1] [arg_2]	count=3
function	display-buffer is allowed ||| up	count=1
arg	one lower ||| uc lc case-table	count=1
function	or vector constant ||| kbd	count=1
arg	each hook [arg_2] ||| [arg_1] [arg_2]	count=3
arg	window’s value for parameter ||| window parameter	count=1
function	enables [function] ||| buffer enable [function]	count=1
module	displaying frame ||| 37	count=1
module	the ||| 17.1	count=4
module	buffer ||| 29	count=1
module	events for ||| 20 5	count=1
arg	using function fn ||| fn	count=1
function	the buffer text ||| revert buffer	count=1
function	property list ||| charset plist	count=1
arg	of count ||| count	count=1
function	as dedicated to ||| window dedicated p	count=1
function_arg	the character [arg_2] ||| [function_1] region start end [arg_2]	count=2
function	reads the ||| read buffer	count=1
module	constant into a ||| 1	count=1
arg	etc ||| format-string	count=1
arg	normal arguments to fn ||| fn &rest args	count=1
function_arg	query flag [arg_2] ||| [function_1] [arg_2]	count=4
arg	on which collection ||| collection	count=1
arg	the alist parameters ||| parameters	count=1
function	by eval-expression and ||| eval expression print	count=1
module	integer ||| 30	count=1
function_arg	sign of [arg_2] ||| [function_1] [arg_2]	count=3
function	the beginning ||| beginning	count=3
module	a [module_2] ||| [module_1] [module_2]	count=2
function	[function_1] group ||| [function_2] [function_1]	count=4
function	[function_1] name with ||| [function_1] [function_2]	count=6
function	in [function_2] ||| [function_1] [function_2]	count=4
function	split s up ||| s split up	count=1
function	[function_1] screen ||| [function_2] [function_1]	count=4
function	the undo list ||| undo	count=1
function_arg	element [arg_2] ||| [arg_2] [function_1]	count=2
function	of bool ||| bool	count=2
arg	time value t1 ||| t1	count=1
module	argument function for ||| 6	count=2
arg	of count repetitions of ||| count character	count=1
function	text currently visible on ||| visible in	count=1
function	creates and returns a ||| make	count=1
function	in the selected ||| same	count=1
function	not to make backup ||| make backup	count=1
function_arg	[function_1] button ||| [function_1] [arg_2]	count=2
module	this function executes the ||| 3	count=1
function_arg	[function_1] dirname ||| [arg_2] [function_1]	count=2
module	returns t ||| 31	count=2
arg	command command [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=1
module	the limits of the ||| 29 2.3	count=2
function	pixel edge of ||| pixel	count=1
arg	the value of the ||| value	count=1
module	tests for the falsehood ||| 3	count=1
function	this function appends ||| append to file	count=1
function	case and the rest ||| capitalize	count=1
function	in ||| file in	count=1
function	are ||| population	count=1
module	names ||| 24 9	count=2
arg	lists using function fn ||| fn &rest lists	count=1
module	width of ||| 4	count=1
function	has a non-nil ||| map char	count=1
module	host name and ||| 2	count=1
function	is [function_2] ||| [function_2] [function_1]	count=10
module	[module] unibyte string ||| 32 [module]	count=3
module	regardless of the value ||| 1.1	count=1
module	after emacs reads ||| 25	count=1
function	specifies the site-customization file ||| site run file	count=1
function_arg	[function_1] face in ||| [function_1] [arg_2]	count=4
module	reads ||| 18 3	count=1
function	the falsehood ||| not	count=1
arg	[arg] window’s buffer ||| window [arg]	count=2
function	levels ||| n	count=1
function	not already set ||| list file	count=1
function	to split an ||| up	count=1
function	the network [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] seconds seconds ||| [function_1] prompt [arg_2]	count=3
module	process-connection-type in [module] ||| [module] 6	count=1
arg	[arg_1] in alist ||| [arg_1] [arg_2]	count=2
module	number of elements ||| 6 7	count=1
function_arg	character of [arg_2] ||| [arg_2] [function_1]	count=1
arg	call fn ||| fn	count=2
function	existing window to ||| pop up	count=1
function	init ||| auto save list file	count=1
function	frame’s current [function_2] ||| [function_2] [function_1]	count=2
function	tty is [function] of the ||| [function] p	count=1
function	except for the last ||| butlast	count=1
function	function completes [function] contents ||| [function] complete	count=1
arg	of window ||| window	count=1
function	of the accessible portion ||| point min	count=1
function	for the text between ||| set text	count=1
arg	is assigned a code-point ||| code-point	count=1
arg	[arg_1] props ||| [arg_1] [arg_2]	count=1
arg	count screen lines down ||| count window	count=1
function	[function] that marker ||| [function]	count=3
function	this function returns the ||| window at	count=1
function_arg	face [arg_2] ||| [function_1] face [arg_2]	count=1
function	buffer exactly ||| buffer	count=1
module	of this ||| 30	count=1
function	left margin indentation ||| left margin	count=1
arg	[arg_1] prefix and ||| [arg_2] [arg_1]	count=2
function	after ||| auto	count=1
function	a new fontset according ||| fontset spec	count=1
module	variable alias for ||| 11 13	count=1
function	terminal [function] that ||| process tty [function]	count=1
arg	fun to init ||| fun init n	count=3
function_arg	query [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] b ||| [function_1] [arg_2]	count=1
arg	in list or all ||| list	count=1
function_arg	[function_1] of prev-buffers ||| [function_1] [arg_2]	count=5
function	like next-single-property-change except that ||| next single char property	count=1
function_arg	this deletes [arg_2] ||| [function_1] [arg_2]	count=1
module	programs and the ||| 30 7	count=1
arg	with name char and ||| char	count=1
function	for keyboard input ||| for user input	count=1
function	sequence ||| sequence	count=1
function	command indents the ||| indent	count=1
function	coding-system ||| coding system	count=1
function	initializes auto-save-list-file-name if ||| save list	count=1
arg	l [arg_2] ||| set case syntax delims [arg_1] [arg_2] case-table	count=3
module	runs ||| 22 1.1	count=3
module	is the ||| 17.1	count=1
function	already set it ||| auto save list file	count=1
function	function returns the message ||| message	count=1
function	backward in the current ||| backward	count=1
arg	using jit-lock-register this function ||| function	count=1
module	or the limits of ||| 29 2.3	count=2
function	is ||| up	count=3
function	characters whose syntax ||| syntax	count=1
arg	sets the variable symbol ||| symbol	count=2
function	each element ||| map char table	count=1
function	margin value ||| margin	count=1
function	query [function_2] ||| [function_2] [function_1]	count=2
module	or width of ||| 4	count=1
module	this variable’s value ||| 3.2	count=1
module	initializes ||| 2	count=1
function	the newline [function_2] ||| [function_2] [function_1]	count=2
module	entire contents are ||| 4	count=1
function	from sequence and returns ||| delete	count=1
function	non-nil ||| up	count=2
module	function calls its argument ||| 6 6	count=1
function	and by forward-sexp ||| parse sexp	count=1
module	other frames and ||| 28	count=1
function_arg	zip [arg_2] ||| [arg_2] [function_1]	count=4
module	debugged ||| 2.16	count=1
function	to tab in ||| for tab	count=1
function	[function_1] buffer’s auto-save ||| [function_1] [function_2]	count=1
function	each element of ||| char table	count=1
module	the ||| 30 7	count=4
arg	prop ||| prop object limit	count=1
function	the minibuffer window is ||| minibuffer	count=1
function	backup files [function_2] ||| [function_1] [function_2]	count=2
function	previous older [function_2] ||| [function_2] [function_1]	count=9
arg	function calls ||| function	count=1
function	[function_1] history element ||| [function_1] complete [function_2]	count=1
function	this ||| vconcat	count=1
module	basic windows ||| 27	count=1
arg	match-form and [arg_2] ||| [arg_2] [arg_1]	count=1
arg	if obarray has no ||| obarray	count=1
arg	beg and end ||| beg end	count=1
arg	pos ||| pos object limit	count=1
function	cells ||| cells	count=1
function	the dimensions of graphical ||| mm dimensions alist	count=1
module	first nonblank ||| 17.1	count=1
arg	the color name name ||| name	count=1
module	the help buffer which ||| 23	count=1
function_arg	[function_1] position in ||| [function_1] [arg_2]	count=3
function	contents of extra ||| table extra	count=1
function	indents the ||| indent	count=2
arg	named dirname ||| dirname parents	count=1
module	sequence a string or ||| 21	count=1
arg	index from to index ||| from &optional to	count=1
arg	the screen ||| display	count=1
function	possible name [function_2] ||| [function_2] file [function_1]	count=1
function	auto-save-list-file-name ||| auto	count=1
module	this ||| 27	count=3
function	property ||| plist	count=1
function	fonts ||| fonts	count=1
function	case and the rest ||| s capitalize	count=1
module	key sequence a string ||| 21	count=1
function	from the minibuffer ||| from minibuffer	count=1
module	the host ||| 25 2	count=1
function	emacs-recognized extended ||| file extended	count=1
module	all the elements ||| 6	count=1
function	file name of the ||| name	count=1
module	returns ||| 29 1	count=2
arg	[arg_1] bold-p is ||| bold [arg_1] [arg_2]	count=1
function	value of ||| ring	count=1
function	is a function to ||| name function	count=1
module	a ||| 4 9	count=1
function	word ||| word search forward	count=1
module	entire contents are ||| 29	count=1
function	have not already ||| auto save list	count=1
arg	fun on each ||| fun	count=1
function	to get input from ||| from	count=1
function	dimensions of graphical ||| dimensions alist	count=1
function	accessible portion of ||| min	count=1
module	your init file ||| 25	count=1
function	plist of ||| process plist	count=1
function	wrap ||| s wrap	count=1
function_arg	[function_1] width ||| [arg_2] [function_1]	count=2
arg	for key according ||| key accept-defaults no-remap position	count=1
function	text property ||| text property	count=1
function	function appends the ||| append	count=1
function	returns the file name ||| save file name	count=1
arg	message args ||| message args	count=4
function	name [function_2] ||| [function_2] [function_1]	count=5
arg	beg ||| beg	count=3
function	the values for print-length ||| print length	count=1
function	the previous sibling of ||| window prev sibling	count=1
function	to tab in most ||| tab	count=1
arg	to the combined entry ||| before-p	count=1
rep	[module_1] [function_arg_2] ||| [module_1] next [function_arg_2]	count=3
function	variable ||| up	count=2
arg	bindat-raw according to spec ||| spec bindat-raw bindat-idx	count=1
function	backward ||| backward	count=3
function_arg	[function_1] in syntaxes ||| [arg_2] [function_1]	count=1
arg	function associates the color ||| rgb frame	count=1
function	margins of window as ||| margins	count=1
function	sets the ||| set right margin	count=1
function	compares two [function_2] ||| [function_2] [function_1]	count=5
function	and process id ||| auto	count=1
function	function ||| process	count=3
module	initializes auto-save-list-file-name if you ||| 2	count=1
arg	symbol’s ||| symbol	count=1
function	renames the ||| rename	count=1
module	a ||| 22 2.8	count=1
function	command ||| command	count=4
function	position in list replaced ||| at	count=1
function	this sets the ||| set left	count=1
module	[module_1] macro ||| [module_1] [module_2]	count=1
function	function sets ||| set	count=22
arg	type ||| type	count=2
function_arg	length [arg_2] ||| [function_1] [arg_2]	count=1
function	a string ||| string	count=6
module	this ||| 9	count=1
function	function [function] file named ||| file exists [function]	count=1
function	keyboard input ||| keyboard	count=1
function	a special form ||| special form	count=2
module	to open existing files ||| 24	count=1
function_arg	[function_1] [arg_2] expand to expansion and ||| [function_1] abbrev [arg_2]	count=2
function	entries ||| hash	count=1
arg	object to stream ||| object stream	count=3
arg	face face specifies a ||| face frame	count=1
arg	beg and ||| beg	count=1
function	expands ||| file expand	count=1
function	this sets the ||| set face	count=4
module	[module_1] that ||| [module_1] [module_2]	count=10
function	the absolute file name ||| file name	count=1
function	text conversion ||| text conversion	count=1
function	mark ||| mark	count=1
module	this function returns the ||| 19	count=1
function	activations of the minibuffer ||| minibuffer	count=1
function	next newer ||| next matching	count=1
module	[module] t ||| [module]	count=1
function	auto-save-list-file-name if ||| save list file	count=1
function_arg	[function_1] prompt ||| [function_1] [arg_2]	count=5
module	[module] function ||| [module]	count=3
arg	hours ||| format-string	count=1
function	reads an input method ||| read input method	count=1
module	if ||| 27	count=2
module	text according ||| 31 8.3	count=1
arg	[arg_1] end adding ||| [arg_2] [arg_1]	count=1
function	the next button after ||| next button	count=1
function	the user ||| user	count=5
arg	the variable var as ||| var fun	count=1
arg	function sends a ||| process	count=1
function	the selected ||| same	count=1
function	actual ||| actual	count=1
function_arg	indexed by index ||| elt sequence index	count=1
function	deletes a process killing ||| delete	count=1
arg	[arg] is non-nil ||| [arg]	count=3
function	a new fontset according ||| fontset from fontset spec	count=1
function	as dedicated to its ||| set window dedicated p	count=1
module	value ||| 27 14	count=4
arg	by divisor [arg_2] ||| [arg_1] [arg_2]	count=1
rep	next [function_arg_2] ||| [module_1] [function_arg_2]	count=3
module	this function returns the ||| 27 3	count=1
function	of coding systems ||| coding systems	count=3
function	is the maximum size ||| max	count=1
function_arg	[function_1] parameter to ||| [arg_2] [function_1]	count=3
function	of syntax ||| skip syntax forward	count=1
function	start ||| code rigidly	count=1
module	deleting other windows ||| 27 4	count=1
function_arg	[function_1] [arg_2] items ||| drop [function_1] [arg_2]	count=3
arg	[arg_1] name ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] according to ||| [function_1] [arg_2]	count=3
function	[function_1] frame ||| [function_2] [function_1]	count=14
module	it is first activated ||| 17 2.16	count=1
module	a ||| 23 5	count=1
function	replaces ||| replace regexp in string	count=1
module	of years days ||| 7	count=1
function	wildcard ||| wildcards	count=1
function	history element [function_2] ||| [function_2] [function_1]	count=6
module	a new vector ||| 6	count=1
function	a button at ||| button	count=1
function	host name and ||| auto save	count=1
module	elements whose cdr is ||| 5	count=1
function	puts the ||| state put	count=1
rep	of [module_1] [function_arg_2] ||| [module_1] fill region [function_arg_2]	count=1
arg	file filename but does ||| filename wildcards	count=1
function	buffer without disrupting ||| bidi string	count=1
arg	value and returns value ||| value	count=1
function	after ||| auto save	count=1
function	calls its argument ||| map char table	count=1
arg	font-spec for the ||| font-spec frame add	count=1
function	this function expands ||| expand	count=1
function	the line [function_2] ||| [function_2] [function_1]	count=5
function	a ||| table	count=1
module	nondeleted ||| 36 9.1	count=1
arg	function establishes the proper ||| find-file	count=1
arg	the attribute attribute for ||| attribute	count=1
function	name of ||| name	count=1
module	[module] clears ||| [module]	count=1
function	the host ||| save list file	count=1
function_arg	[function_1] [arg_2] to expansion and call ||| [function_1] [arg_2]	count=6
arg	[arg_1] through ||| [arg_1] form [arg_2]	count=3
module	of ||| 35 4	count=1
module	keymaps that would ||| 21 7	count=2
function_arg	[function_1] text-coding ||| [arg_2] [function_1]	count=4
function	left margin indentation from ||| left margin	count=1
module	this ||| 27 14	count=4
function	function returns the name ||| login name	count=1
arg	with [arg_2] ||| [arg_2] [arg_1]	count=1
module	during its ||| 22 4.1	count=1
function_arg	[function_1] of lists ||| [arg_2] [function_1]	count=1
function	stores value as the ||| code	count=1
function	buffers by making ||| pop up	count=1
function	previous sibling of ||| prev sibling	count=1
module	of years days hours ||| 38	count=1
arg	command a symbol given ||| command	count=1
module	[module] the number ||| [module]	count=3
function	that if the user ||| p	count=1
function	the results ||| results	count=1
function	[function] how to ||| [function] about supersession threat	count=2
function	a button ||| button	count=1
module	the limits of ||| 2.3	count=2
function	margins ||| window margins	count=2
function	value for the face ||| face	count=1
function	set ||| auto save list file	count=1
module	frames and ||| 28 23	count=1
module	display buffers by making ||| 27	count=1
arg	[arg_1] frame ||| [arg_2] [arg_1]	count=2
arg	environment ||| substitute	count=1
function	window’s previous buffers to ||| window prev buffers	count=1
function	id ||| auto save list	count=1
arg	named [arg_1] [arg_2] to expand to expansion ||| [arg_2] [arg_1] expansion	count=2
module	new vector containing all ||| 5	count=1
function	in the current buffer ||| completion in	count=1
function	change is found before ||| change	count=1
module	a [module] ||| [module] 6	count=3
function	or nth previous button ||| button	count=1
function	translation table made ||| translation table	count=2
arg	take [arg_1] [arg_2] ||| index [arg_1] [arg_2]	count=2
function	command displays a ||| describe	count=1
function_arg	[function_1] regexp ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] property char propname [arg_2]	count=9
arg	beg to [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] directory dir ||| [function_1] [function_2]	count=3
function	input is ||| input	count=1
module	exists and you ||| 6.1	count=1
function	this command inserts ||| insert file	count=1
module	ending ||| 7.13	count=1
module	inverse of ||| 6	count=1
function	use the font ||| font	count=1
function	register ||| register	count=3
function	inserts in the ||| insert	count=1
module	input method [module] an ||| [module]	count=1
function_arg	register name [arg_2] ||| [arg_2] [function_1]	count=1
function	the default permissions for ||| default file modes	count=1
function	function sets the ||| set char table	count=1
arg	by providing completion ||| predicate require-match initial history default	count=1
module	that ||| 14	count=1
function	avoids modifying the match ||| match p	count=1
function	has a non-nil value ||| map char	count=1
function	based on this ||| list file	count=1
module	this variable is ||| 11	count=1
module	returns ||| 27 9	count=1
function	not [function] ||| no [function]	count=2
module	match-beginning ||| 33 6.2	count=1
function_arg	this macro [function_1] [arg_2] stored in ||| 12 10.1 [function_1] place [arg_2]	count=4
function	make ||| pop	count=1
function	the leftmost column ||| left column	count=1
arg	in list that ||| list	count=1
arg	object if ||| prop object limit	count=1
function	value of ||| up	count=2
function	in a window ||| window	count=1
function_arg	context of [arg_2] ||| [arg_2] [function_1]	count=2
arg	abbrev-table ||| abbrev-table	count=1
function_arg	[function_1] [arg_2] ||| [function_1] string string [arg_2]	count=8
function_arg	list with args ||| list &rest args	count=1
arg	fn returns ||| fn	count=1
function	to ||| add	count=1
arg	and so on ||| end	count=1
function_arg	split [arg_2] ||| [function_1] separator [arg_2]	count=2
arg	argument ||| function	count=1
function	is [function] ||| [function] live p	count=1
arg	this command fills each ||| end justify	count=1
arg	key in ||| key	count=2
function	the binding ||| binding	count=3
function	leftmost column ||| left column	count=1
function_arg	displays [arg_2] ||| [arg_2] [function_1]	count=8
arg	by consing ||| append compare-fn	count=1
function	split an existing ||| pop	count=1
module	keymaps that ||| 21 7	count=2
module	in the buffer ||| 26 8	count=1
function	command inserts the ||| insert	count=1
module	0 point-min ||| 29 1	count=1
module	relevant variables during ||| 22 4.1	count=1
arg	this function sends a ||| process	count=1
function	buffer [function_2] ||| [function_1] [function_2]	count=4
module	entire contents are accessible ||| 29 4	count=1
arg	one lower ||| uc lc	count=1
function	previous older history ||| previous complete history	count=1
module	this function reports ||| 30 5	count=1
function	object ||| object	count=2
arg	if obarray has ||| name obarray	count=1
function	[function_1] table made ||| [function_1] [function_2]	count=2
arg	specified by buffer-or-name ||| buffer-or-name norecord	count=4
function_arg	[function_1] bound ||| [arg_2] [function_1]	count=4
arg	the environment ||| substitute	count=1
function	non-nil that means ||| up	count=1
function	nil otherwise ||| bufferp	count=1
function	process id ||| auto save	count=1
function	to the top entry ||| top	count=1
module	buffer ||| 26	count=1
arg	pred [arg_2] ||| index [arg_1] [arg_2]	count=1
function	host name ||| auto save	count=1
function	the startup echo area ||| startup echo area	count=1
arg	name to ||| name	count=1
arg	in object rather than ||| prop object limit	count=1
function	creates and returns ||| make	count=3
function	consecutive button presses ||| event click	count=1
function	edge coordinates of ||| window edges	count=1
function	as a ||| as	count=1
arg	end as standard ||| end	count=1
module	the [module] of ||| [module]	count=3
module	is the horizontal position ||| 17.1	count=1
function	the current display-width of ||| width	count=1
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=31
module	this function returns a ||| 12 5	count=1
module	value of this variable ||| 7	count=1
arg	property list ||| property	count=2
function	function sends a ||| signal	count=1
arg	file filename ||| filename visit beg	count=1
module	possible ||| 19 6.1	count=1
function_arg	status of [arg_2] ||| [function_1] [arg_2]	count=3
arg	port ||| port	count=1
function	of buffer ||| buffer	count=1
arg	[arg_1] props see ||| expansion [arg_1] [arg_2]	count=3
function	a string in the ||| to string	count=1
arg	by inserting [arg] ||| symbol [arg]	count=3
function	global [function_2] ||| [function_2] [function_1]	count=1
arg	lists together group ||| lists	count=1
arg	is undefined there ||| accept-defaults	count=1
module	[module_1] which ||| [module_2] [module_1]	count=2
function	old vertical position in ||| position	count=1
arg	command copies ||| keep-time parents copy-contents	count=1
function	[function_1] the coding ||| [function_2] [function_1]	count=2
arg	specified by record-regexp ||| record-regexp	count=1
arg	in object ||| pos prop object	count=1
function_arg	[function_1] pos ||| [arg_2] [function_1]	count=5
arg	[arg] using ||| [arg]	count=1
arg	take a [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	the buffer ||| buffer	count=7
module	position of the first ||| 17.1	count=1
module	function returns ||| 31 1	count=2
function	the shell ||| shell	count=1
function	host ||| auto	count=1
arg	the suffixes in suffixes ||| suffixes predicate	count=1
function	integers ||| match data	count=1
module	display buffers by making ||| 27 14	count=1
function	the recursive edit ||| recursive edit	count=2
module	returns the ||| 17.1	count=1
function_arg	[function_1] input-method for ||| [arg_2] [function_1]	count=2
module	and return a function ||| dash	count=1
function_arg	this command saves [function_1] [arg_2] ||| [function_1] as kill [arg_2]	count=4
function	string ||| coding string	count=1
function	name and process id ||| auto save list	count=1
module	returns ||| 38 3	count=1
function	another ||| string	count=2
function	function displays the ||| switch to	count=2
module	regardless ||| 1.1	count=1
arg	lisp ||| initial	count=1
function_arg	split [arg_2] ||| [function_1] on [arg_2]	count=1
function	the values for print-length ||| length	count=1
function	that ||| find	count=2
function	read-only ||| read only	count=1
function	this function puts the ||| window state put	count=1
function	in a window below ||| below	count=1
module	this function returns ||| 3	count=12
arg	eol-coding ||| eol-coding	count=1
function	line [function_2] ||| [function_2] [function_1]	count=5
module	function returns the ||| 6	count=4
module	symbol automatically buffer-local ||| 11 10.2	count=1
module	of mark-ring ||| 30	count=1
function	[function_1] in bool ||| [function_2] vector [function_1]	count=3
function	or least recently-used window ||| display buffer pop up window	count=1
function	base left margin column ||| left margin	count=1
function	a given ||| alternatives	count=2
function	the parent ||| parent	count=3
function	the file name of ||| name	count=1
arg	to end in the ||| end properties	count=1
module	this command ||| 7	count=2
arg	if bold-p is ||| face bold-p frame	count=1
module	set it non-nil based ||| 2	count=1
function	the exit status of ||| process exit status	count=1
rep	nondeleted [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	of ||| edebug	count=1
arg	resizes [arg_2] ||| [arg_2] [arg_1]	count=5
function	charset of highest ||| charset	count=1
function	is nil switch-to-buffer ||| buffer preserve window	count=1
arg	of list starting from ||| list	count=1
module	this function ||| 3	count=8
function	[function] part ||| [function]	count=1
module	minibuffer contents with the ||| 19 10	count=3
arg	frame raises ||| frame	count=1
module	destructively ||| 5	count=1
function	this function stores value ||| put char code	count=1
function	the current buffer if ||| buffer	count=1
function	minimum [function_2] ||| [function_2] [function_1]	count=1
arg	of regexp ||| regexp s &optional start	count=1
function	non-nil based ||| save list	count=1
arg	tree and ||| init-value tree	count=1
arg	prefix and optionally ||| prefix &optional	count=3
module	of arguments is ||| 12 5	count=1
module	this function ||| 31 7	count=1
arg	table of window to ||| window	count=1
arg	object to ||| object	count=1
arg	[arg_1] and ||| [arg_1] fixedcase literal subexp [arg_2]	count=1
function	returns the character ||| glyph char	count=1
function_arg	[function_1] current-name ||| [function_1] alias obsolete-name [arg_2]	count=3
arg	the subcommands it offers ||| help-line help-text help-map	count=1
function	standard category [function_2] ||| [function_2] [function_1]	count=1
function	this ||| buffer end	count=1
function	header line to ||| header	count=1
arg	start and end as ||| start end	count=1
module	position of ||| 20	count=1
arg	[arg] n ||| n [arg]	count=1
function	be fit by fit-frame-to-buffer ||| fit	count=1
function	of directories ||| path	count=1
arg	this function stores object ||| object	count=2
module	minibuffer a nonnegative ||| 19	count=1
function	and height of ||| height	count=1
function	the display table of ||| window display	count=1
module	a string or vector ||| 1	count=1
arg	face to underline ||| face underline	count=1
function	[function_1] family is ||| [function_2] [function_1]	count=6
function	returns t if ||| if set p	count=1
function	[function] bar bindings ||| [function]	count=1
function	single paragraph ||| paragraph	count=1
arg	right-margin property on ||| margin	count=1
function	of the first ||| current	count=1
function	argument ||| char	count=1
function	top entry in the ||| window top line	count=1
arg	the only [arg_2] ||| [arg_2] [arg_1]	count=4
function	process ||| auto	count=1
function	[function_1] marker nil ||| [function_2] [function_1]	count=2
arg	of car ||| car	count=1
function_arg	[function_1] [arg_2] ||| [function_1] color [arg_2]	count=8
arg	except that it does ||| end	count=1
module	non-nil ||| 17	count=1
module	function ||| 8	count=4
function	as xml rather than ||| parse xml	count=1
function	left [function_2] ||| [function_2] [function_1]	count=14
function	window’s value of ||| window	count=1
module	horizontal position of ||| 31 17.1	count=1
function_arg	[function_1] [arg_2] ||| [function_1] description [arg_2]	count=4
function	containing ||| char to	count=1
function_arg	[function_1] spec font-spec ||| [arg_2] [function_1]	count=4
function	all ||| test	count=1
function	and process id ||| save list	count=1
function	a package [function_2] ||| [function_1] [function_2]	count=2
module	this ||| 6 5	count=2
function	your init file it ||| save	count=1
function_arg	[function_1] spec font-spec ||| [function_1] [arg_2]	count=4
arg	object rather ||| object	count=1
function	shell ||| process shell command	count=1
function	a string the text ||| string	count=1
arg	[arg] of ||| [arg]	count=4
arg	[arg_1] by sending ||| [arg_2] [arg_1]	count=4
function	non-nil that means display-buffer ||| pop	count=1
function	number ||| table count	count=1
function	the ending ||| end	count=1
function_arg	[function_1] with prompt ||| [function_1] read with preview [arg_2]	count=1
function	definition ||| lookup key	count=1
module	greater than 0 ||| 29	count=1
arg	[arg_1] alphabetically as ||| [arg_2] record-regexp key-regexp start [arg_1]	count=1
arg	in object ||| object limit	count=1
function	parent of ||| char table parent	count=1
arg	this string and ||| string	count=1
arg	keymap ||| keymap	count=4
module	this function returns the ||| 13	count=1
module	[module_1] regular expression ||| [module_2] [module_1]	count=3
module	this function returns ||| 1	count=3
function	a new node encapsulating ||| ewoc enter	count=2
function	if [function] on frame ||| [function] visible p	count=1
function	if the current buffer ||| buffer	count=1
arg	the right-margin property ||| margin	count=1
arg	the region beg through ||| beg	count=1
arg	if bold-p is nil ||| face bold-p frame	count=1
function_arg	[function_1] key ||| [arg_2] [function_1]	count=2
function	file it initializes auto-save-list-file-name ||| save list file	count=1
arg	x in list ||| list	count=3
function	key sequence [function_2] ||| [function_1] [function_2]	count=2
module	expressions debugged ||| 17	count=1
function	the file [function_2] ||| [function_2] [function_1]	count=5
function	the coding system to ||| set terminal coding system	count=1
function	the file name ||| save file name	count=1
function	appends the contents ||| append to file	count=1
function	[function_1] buffers to ||| [function_1] [function_2]	count=4
function	key sequence [function_2] ||| [function_2] [function_1]	count=2
arg	in object if ||| prop object limit	count=1
function	wrap ||| s word wrap	count=1
function	frame-char-width ||| frame resize pixelwise	count=1
function_arg	file name [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] abbrev ||| [function_1] [function_2]	count=3
arg	message and type as ||| message level buffer-name	count=1
function	bool vectors ||| bool vector intersection	count=1
function	list of the modifiers ||| modifiers	count=1
module	is the horizontal position ||| 31	count=1
function	state of window as ||| state	count=1
function	to restore ||| restore	count=1
function	a [function] ||| defun prompt [function]	count=2
module	variable alias for symbol ||| 11	count=1
function	after emacs reads your ||| auto	count=1
arg	element of char-table ||| char-table	count=1
function	initializes auto-save-list-file-name if you ||| file	count=1
module	if point is at ||| 31 1	count=2
function	no change is ||| property change	count=3
module	split an existing ||| 14	count=1
function	a new window for ||| up	count=1
arg	flag is non-nil ||| window flag	count=1
module	for ||| 27 14	count=2
arg	for key with ||| key	count=1
function	of ||| not	count=1
function	link ||| link	count=2
function	bottom of the ||| bottom	count=1
function	function stores value as ||| char code	count=1
function	total number of ||| buffer size	count=1
function	returns the real ||| real	count=2
function_arg	[function_1] window for ||| [function_1] [arg_2]	count=3
function	size of ||| size	count=4
function	[function] displaying a ||| [function]	count=1
function	function returns t if ||| same window p	count=1
arg	separate arguments ||| arguments	count=1
module	of ||| 17.1	count=2
module	returns the ||| 7.13	count=1
module	function ||| 10	count=1
function	with every ||| each	count=1
function	margins of ||| window margins	count=1
function	a string or a ||| message or	count=1
function	query flag of ||| process query on exit	count=1
function	[function_1] [function_2] line and header line ||| [function_1] [function_2]	count=1
function	display-width of ||| width	count=1
arg	flag is ||| flag	count=1
function	pad it ||| s pad	count=1
module	of ||| 4	count=21
module	image ||| 37 17.2	count=1
arg	whether a color name ||| color frame	count=1
function	sets ||| set	count=9
arg	element ||| function	count=1
module	this variable’s value ||| 28 3.2	count=1
module	whose ||| 5 5	count=1
arg	than len ||| len	count=1
module	list [module_2] ||| [module_1] [module_2]	count=8
module	line which ||| 31 17.1	count=1
arg	integers ||| integers	count=1
module	sequence a ||| 21 1	count=1
module	this returns ||| 5 9.2	count=1
function	right or to ||| scroll right	count=1
function	at the beginning of ||| bolp	count=1
arg	fn ||| fn &optional equal-test	count=1
function	displays differently from ||| differs from	count=1
function	if no change ||| property change	count=2
function	to restore the ||| quit restore	count=1
function	subcommands of the prefix ||| describe prefix	count=1
function	the left [function_2] ||| [function_1] [function_2]	count=4
module	[module_1] in the ||| [module_1] [module_2]	count=8
arg	of file filename into ||| filename visit	count=1
arg	keymap of keymap ||| keymap	count=1
function	is an alist of ||| alist	count=1
function	[function] key of ||| [function]	count=3
arg	which collection ||| collection	count=1
function	[function] system ||| keyboard [function] system	count=3
arg	in the prop ||| prop object limit	count=1
function_arg	[function_1] name a ||| [arg_2] [function_1]	count=3
function	initializes ||| save list	count=1
function	displays the buffer ||| switch to	count=2
function_arg	list [arg_2] ||| [function_1] [arg_2]	count=2
module	this variable ||| 27 14	count=2
function	returns ||| window	count=1
function	was selected when the ||| selected	count=1
function	newer history element ||| history element	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=4
arg	function copies string and ||| string	count=1
function	dedicated ||| dedicated	count=1
function	screen [function_2] ||| [function_1] [function_2]	count=4
module	debug-on-exit ||| 17 1.8	count=1
module	to make a ||| 27 14	count=1
function	command quits ||| quit	count=1
function	indirect ||| indirect	count=1
module	current line ||| 17.1	count=1
function	non-nil based on ||| file	count=1
function	[function_1] or a ||| [function_2] [function_1]	count=1
function	if ||| auto save	count=1
arg	except that x ||| x	count=1
function	default file [function_2] ||| [function_1] [function_2]	count=6
function	window for ||| pop	count=1
function	line-beginnings that separate pages ||| page delimiter	count=1
module	if ||| 17 2.16	count=3
arg	[arg_1] record-regexp ||| [arg_2] [arg_1]	count=1
arg	value rgb a ||| rgb frame	count=1
function	point-min otherwise ||| buffer end	count=1
function	of face attributes ||| face attributes	count=1
arg	key in keymap ||| keymap key	count=2
arg	dir ||| dir	count=1
arg	preferably not the ||| action norecord	count=1
function	end [function] and the ||| [function] end double	count=1
arg	at [arg] ||| [arg]	count=1
module	is non-nil ||| 16	count=1
arg	seconds since the ||| seconds	count=1
arg	call [arg_2] ||| [arg_2] [arg_1]	count=2
function	emacs reads ||| auto save list	count=1
arg	directory directory ||| directory	count=1
function	as a [function_2] ||| [function_2] [function_1]	count=1
arg	given ||| &optional start	count=1
function	epoch to a ||| to time	count=1
function	returns a copy of ||| overlay properties	count=1
function	this function puts the ||| put	count=1
function	of this variable is ||| mark	count=1
arg	[arg_1] function ||| [arg_1] [arg_2]	count=8
module	[module] clears out ||| [module]	count=1
function	in the current buffer ||| at	count=1
module	returns the ||| 1	count=1
function	[function] buffer ||| buffer enable [function]	count=1
function	inserts contents of register ||| insert register	count=1
arg	end on the ||| end	count=1
function	on ||| list	count=1
arg	beg to end ||| beg end	count=1
module	a string ||| 19	count=1
function	its ||| char table	count=2
function	non-nil if [function] is ||| [function] narrowed	count=1
function	the left or ||| left	count=1
function	syntax ||| skip syntax forward	count=1
function	fill prefix ||| fill	count=1
function	as an abbrev table ||| define abbrev table	count=1
function	the selinux context ||| selinux context	count=1
function	sets the :stipple ||| set face stipple	count=1
module	display-buffer may display buffers ||| 27 14	count=1
module	new files ||| 24	count=1
function	[function_1] method name ||| [function_1] [function_2]	count=5
module	function returns ||| 8.1	count=1
function	[function] given byte-position ||| [function] position	count=1
function	window configurations ||| window configurations	count=2
arg	converts the count ||| count	count=1
function	function creates a ||| make	count=1
function	set of characters ||| skip chars	count=1
module	of ||| 38	count=1
arg	[arg_1] mode ||| [arg_1] [arg_2]	count=2
arg	alist has a ||| alist	count=1
arg	convert the first word's ||| s	count=1
arg	parameter to ||| parameter	count=1
function	default [function_2] ||| [function_2] [function_1]	count=5
module	ending position of ||| 20 7.13	count=1
function	the rehash threshold ||| table rehash threshold	count=1
function	function compares two ||| compare	count=1
arg	string as ||| string	count=1
function	at the bottom ||| at bottom	count=1
arg	marks the function obsolete-name ||| obsolete-name	count=1
function	current buffer’s mode ||| force mode	count=1
module	current line which is ||| 31 17.1	count=1
module	of this variable is ||| 14	count=2
arg	this command fills ||| justify citation-regexp	count=1
arg	mentioned in syntaxes ||| syntaxes	count=2
arg	of char-table ||| char-table	count=5
arg	function alias it looks [arg_1] [arg_2] naming the actual ||| [arg_2] [arg_1]	count=6
function	non-nil ||| char table	count=2
function	its argument ||| map char table	count=1
function_arg	display [arg_2] ||| [arg_2] [function_1]	count=3
module	a string ||| 38 7	count=1
function	the host name and ||| save list	count=1
function	if you have ||| list file	count=1
function_arg	the fieldth field ||| numeric fields field	count=1
module	existing files [module_2] ||| [module_1] [module_2]	count=8
function	[function] and ||| abbrev file [function]	count=1
arg	of face [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] for filename ||| [function_1] [arg_2]	count=5
function	a new window for ||| pop up	count=2
function	case ||| set case	count=1
arg	non-nil thread [arg_2] ||| [arg_1] form [arg_2]	count=3
function_arg	binding [arg_2] ||| [arg_2] [function_1]	count=5
function	string of syntax class ||| syntax forward	count=1
module	has ||| 6	count=2
module	you have not already ||| 25	count=1
arg	named [arg_1] [arg_2] to expand to expansion ||| [arg_2] [arg_1]	count=2
function	window’s value ||| window parameter	count=2
module	associated ||| 36 9.1	count=1
module	[module_1] function ||| [module_1] [module_2]	count=6
function_arg	number of [arg_2] ||| [function_1] pred [arg_2]	count=1
function	abbrev definitions from ||| abbrev	count=1
arg	buffer in [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the property [arg_2] ||| [arg_2] [arg_1]	count=4
module	the regular expression ||| 33 8	count=2
function_arg	[function_1] them with ||| [arg_2] [function_1]	count=1
module	on ||| 2	count=1
function	horizontally ||| buffer horizontally	count=1
function	state of window ||| window state	count=1
function	converts the ||| kbd	count=1
module	string of years ||| 38 7	count=1
function	the site-customization ||| site run	count=1
module	buffer ||| 26 10	count=1
module	activations of the minibuffer ||| 13	count=1
function	split ||| split up	count=1
arg	n is [arg_2] ||| [arg_1] wrap [arg_2]	count=1
module	number of ||| 6	count=1
function	function ||| signal process	count=2
arg	a non-nil value ||| function	count=1
function_arg	[function_1] process-name as ||| [function_1] [arg_2]	count=2
arg	providing completion ||| collection predicate require-match initial	count=1
module	if you ||| 25	count=1
function	reads your init file ||| save	count=1
function	debug-on-exit flag of ||| backtrace	count=1
function	from ||| from	count=4
function	and modification times of ||| times	count=1
arg	of face to underline ||| face underline	count=1
arg	filename and returns it ||| filename	count=1
function	it initializes auto-save-list-file-name if ||| auto save	count=1
module	function for each element ||| 6	count=2
module	of corresponding letters one ||| 4	count=1
module	the abbrev expansion ||| 35	count=1
function	list of coding systems ||| find coding systems for	count=1
module	a ||| 5	count=1
function	[function_1] shell ||| [function_2] [function_1]	count=3
function	leaving point ||| re	count=1
function_arg	deletes [arg_2] ||| [function_1] char untabify [arg_2]	count=1
module	for displaying ||| 37	count=1
arg	[arg_1] mode ||| [arg_2] [arg_1]	count=2
function	regenerate the help information ||| help	count=1
arg	[arg_1] through the ||| [arg_2] [arg_1]	count=3
arg	to mode ||| mode	count=1
arg	return the proper offset ||| offset	count=1
arg	volume [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] of filename ||| [function_1] [arg_2]	count=9
module	this function converts the ||| 8	count=1
module	its ||| 3	count=1
module	or the limits ||| 29 2.3	count=2
function_arg	tree [arg_2] ||| [arg_2] [function_1]	count=1
module	and the emacs user ||| 7	count=1
function	[function_1] as modified ||| [function_1] [function_2] p flag	count=4
function_arg	remapping for [arg_2] ||| [arg_2] [function_1]	count=4
function	mode for ||| mode	count=1
module	t ||| 1	count=2
function	allowed to ||| pop	count=1
function_arg	[function_1] of marker ||| [arg_2] [function_1]	count=5
arg	#rrrgggbbb ||| prompt convert allow-empty display	count=1
function	to restore the state ||| restore	count=1
function	the display ||| display table	count=1
function	set of characters ||| chars	count=1
arg	predicate [arg] and return ||| [arg]	count=1
function	this function ||| parameter	count=1
arg	for ||| attribute-alist	count=1
function	[function] file ||| file exists [function]	count=1
function	end of [function_2] ||| [function_2] [function_1]	count=3
arg	lines starting between start [arg_1] [arg_2] ||| 31 17.3 indent rigidly [arg_1] [arg_2]	count=2
function	buffer using text ||| make text	count=1
arg	buffer and ranges from ||| buffer front-advance rear-advance	count=1
function	function returns t ||| interactively p	count=1
arg	value of parameter ||| parameter	count=1
module	of the ||| 31 1	count=1
function	allowed ||| pop	count=1
arg	and so ||| end	count=1
module	otherwise ||| 1	count=1
arg	matches for regexp separator ||| separator	count=1
function_arg	the fieldth [arg_2] ||| [arg_2] [function_1]	count=4
function	the current [function] after point ||| [function]	count=1
function	display-buffer is allowed to ||| pop up	count=1
function	selinux context of the ||| selinux context	count=1
module	text for a change ||| 31	count=1
function	single character ||| read char	count=1
arg	by providing completion ||| collection predicate require-match initial history	count=1
arg	count would move ||| count	count=1
function	next sibling ||| window next sibling	count=2
function	on a ||| mouse on	count=1
function	the minibuffer a nonnegative ||| minibuffer	count=1
function	the minibuffer raises the ||| auto raise	count=1
module	is a ||| 12 5	count=1
function	“succeeds” by returning ||| success	count=1
function	to the left or ||| left	count=1
function_arg	expression from [arg_2] ||| [function_1] string string [arg_2]	count=1
function	greater ||| end	count=1
arg	the named program ||| program	count=1
function	wrap string ||| s wrap	count=1
function	or the leftmost child ||| window child	count=1
arg	input from terminal ||| terminal	count=1
arg	with arguments args ||| args	count=1
function	represents in shell syntax ||| shell	count=1
function	context ||| context	count=1
function	leaving point at the ||| re	count=1
function	than 0 point-min otherwise ||| end	count=1
function	top entry in the ||| top line	count=1
function_arg	[function_1] position ||| [arg_2] [function_1]	count=4
function	systems that could ||| systems for	count=1
function	to be fit by ||| fit	count=1
function	completion style symbols ||| completion styles	count=2
function	[function_1] cells ||| [function_1] [function_2]	count=4
function_arg	the variable [arg_2] ||| [function_1] [arg_2]	count=2
function	returns the query ||| query on exit	count=1
arg	in [arg] between ||| start end [arg]	count=1
function	[function_1] text ||| [function_2] [function_1]	count=2
module	in the current ||| 29 4	count=1
function	window to ||| pop	count=1
function	[function_1] of register ||| [function_1] [function_2]	count=3
function_arg	from [arg_2] ||| [function_1] vector [arg_2]	count=1
arg	object ||| object limit	count=1
function	fit by fit-frame-to-buffer ||| fit frame to	count=1
function	current buffer as modified ||| buffer modified	count=1
function	auto-save-list-file-name if you ||| list file	count=1
function	the selected [function_2] ||| [function_2] [function_1]	count=2
function	appends the ||| append to file	count=1
function	the nondirectory ||| nondirectory	count=1
function	link to ||| link	count=1
function_arg	[function_1] prompt ||| [function_1] with preview [arg_2]	count=1
arg	of object to stream ||| object stream	count=1
function	inserts the contents ||| insert file	count=1
function	displays differently from the ||| face differs from	count=1
function	the current buffer’s auto-save ||| auto save	count=1
arg	data item for ||| item	count=1
function	recent history ||| history	count=1
function	will make it ||| make variable buffer	count=1
module	returns the symbol ||| 6	count=1
module	if [module_1] [module_2] ||| [module_2] [module_1] byte compile dynamic docstrings	count=2
function	[function_1] text of ||| [function_2] pixel [function_1]	count=2
module	this ||| 1	count=4
function	after ||| save list file	count=1
function	returns the number ||| count	count=1
module	vector containing all ||| 5	count=1
function	see abbrev properties ||| abbrev	count=1
function_arg	group specified [arg_2] ||| [arg_2] [function_1]	count=1
module	and nil ||| 7	count=1
function	the buffer ||| buffer substring	count=1
arg	on which collection ||| collection predicate	count=1
function	init file it initializes ||| file	count=1
arg	syntaxes a string ||| syntaxes limit	count=1
arg	filename into the current ||| filename visit	count=1
function	bottom edge ||| adjust window trailing edge	count=1
module	a basic [module] mode ||| [module] 2.5	count=1
function	it non-nil based ||| auto save	count=1
module	the elements of ||| 5	count=1
function	keymap ||| define key	count=1
module	elements whose car is ||| 5	count=1
function	cdr of a cons ||| cdr	count=1
function	reads your init ||| auto	count=1
rep	contain [module_1] [function_arg_2] ||| [module_1] 8 find charset [function_arg_2]	count=2
function	inserts before point a ||| insert	count=1
function	to use the font ||| font	count=1
arg	[arg] a ||| [arg] base-variable	count=1
module	systems to use for ||| 32	count=1
function	makes backups ||| backup	count=2
function	define setf methods for ||| define	count=1
function_arg	[function_1] value ||| [function_1] plist property [arg_2]	count=1
function	coding system ||| coding system change	count=2
function	character ||| char exclusive	count=2
function	[function_1] copying for ||| [function_1] [function_2]	count=5
function	by choosing an ||| use some	count=1
arg	filename with the ||| filename	count=1
function_arg	[function_1] start to ||| [function_1] [arg_2]	count=3
function	[function_1] systems that ||| [function_2] [function_1]	count=12
arg	keymap to parent and ||| keymap	count=1
function_arg	[function_1] window ||| [arg_2] [function_1]	count=16
function	the host ||| save list	count=1
function_arg	same field [arg_2] ||| [function_1] new-pos [arg_2]	count=1
function	to ||| coding	count=1
arg	a signal to process ||| process signal	count=1
function_arg	edge [arg_2] ||| [arg_2] [function_1]	count=1
module	enter the [module] ||| [module] 1.1	count=3
function	frame in ||| frame	count=1
function	enter ||| debug	count=1
module	initializes auto-save-list-file-name if ||| 2	count=1
function	string ||| number to string	count=1
function	and returns t if ||| p	count=1
function	as find-file [function] use minibuffers ||| [function]	count=1
arg	filename into ||| filename visit	count=1
function_arg	entries [arg_2] ||| [function_1] count [arg_2]	count=1
function	[function_1] type of ||| [function_1] [function_2]	count=4
function	it initializes auto-save-list-file-name ||| save list file	count=1
module	was previously nil ||| 17 2.16	count=1
arg	count ||| count depth	count=1
module	[module_1] processes ||| [module_1] [module_2]	count=1
function	the window selected ||| set frame selected	count=1
function	the ||| auto save	count=1
function	file ||| make auto save file	count=1
module	character sets in ||| 32 10.3	count=1
function_arg	position [arg_2] ||| [function_1] position [arg_2]	count=3
module	relevant variables during its ||| 4.1	count=1
function	current line which ||| current	count=1
arg	that symbol is an ||| symbol	count=1
function_arg	contents [arg_2] ||| [function_1] [arg_2]	count=2
function	the timestamp ||| posn timestamp	count=1
function	returns the largest ||| max	count=1
function	[function_1] from ||| [function_1] [function_2]	count=6
module	text starting after the ||| 31	count=1
arg	not scanning past limit ||| limit target-depth stop-before state stop-comment	count=1
function	remove whitespace at ||| trim right	count=1
function_arg	prec2 [arg_2] ||| [function_1] >grammar [arg_2]	count=3
function	by choosing an existing ||| buffer use some	count=1
function_arg	[function_1] [arg_2] current buffer ||| 37 9.3 [function_1] [arg_2] sorted	count=3
function_arg	[function_1] handle designates ||| [arg_2] [function_1]	count=2
function	next sibling of ||| window next sibling	count=2
module	function sets the ||| 21 12	count=1
module	it initializes auto-save-list-file-name if ||| 2	count=1
function_arg	character [arg_2] ||| [arg_2] [function_1]	count=3
function	in a new frame ||| buffer other frame	count=1
function	are ||| count population	count=1
function	non-nil edebug ||| edebug	count=1
function	signaled and ||| debug	count=1
arg	copies ||| time preserve-uid-gid preserve-extended-attributes	count=1
function	screens associated with the ||| screens	count=1
arg	for current-face and ||| current-face	count=1
function	if you have not ||| save list file	count=1
module	for the ||| 3	count=1
function	if you ||| auto save list	count=1
function	of face [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] display-table ||| [arg_2] [function_1]	count=1
function	editable contents of the ||| delete minibuffer contents	count=1
function	based on this ||| save list	count=1
module	[module] meaning ||| [module]	count=1
module	character ||| 32 10.3	count=2
module	this ||| 3 5	count=2
function	startup screen ||| inhibit startup screen	count=2
function	dialog box ||| dialog	count=1
arg	like call-process-shell-command ||| infile destination display	count=1
function	not already ||| file	count=1
arg	providing completion ||| default require-match initial predicate	count=1
module	converts the ||| 8	count=1
function	[function_1] fails ||| [function_2] [function_1]	count=2
arg	symbol add ||| symbol	count=1
module	or vector ||| 1	count=1
arg	bitmap bitmap to ||| bitmap	count=1
function_arg	[function_1] symbol’s ||| [function_1] [arg_2]	count=2
arg	init ||| init	count=1
function	a string constant ||| kbd	count=1
function	in directory dir ||| file in directory	count=2
function_arg	timestamp in position ||| posn timestamp position	count=1
arg	string as standard ||| string	count=1
arg	optionally [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	name [arg_2] ||| [arg_2] [function_1]	count=3
function	the buffer as read-only ||| read only	count=1
function	is like next-single-property-change ||| next single	count=1
module	function tests for ||| 10	count=1
function_arg	[function_1] [arg_2] ||| [function_1] pixel size [arg_2] mode-and-header-line	count=6
module	making new ||| 14	count=1
arg	between start and end ||| start end delete	count=1
function	tries to restore the ||| quit restore	count=1
function	and process ||| save list file	count=1
function	the sentinel of ||| sentinel	count=1
function	is a special ||| special	count=1
function	character at ||| at	count=2
function	is ||| on	count=1
arg	directory names as ||| prompt directory	count=1
function_arg	[function_1] with ||| [function_1] [arg_2]	count=1
arg	[arg] from its ||| [arg]	count=3
function	make a new ||| up	count=1
arg	frame can really display ||| frame background-p	count=1
arg	dirname otherwise or ||| dirname	count=1
arg	spec using [arg] ||| [arg]	count=1
module	repeat events ||| 20 7.7	count=1
function	all the ||| vconcat	count=1
function	this function [function] ||| file exists [function]	count=2
function	affects ||| words include escapes	count=1
arg	lisp [arg] any ||| [arg]	count=1
module	destructively and returns ||| 5	count=1
function	epoch [function_2] ||| [function_2] [function_1]	count=8
function	a string of ||| format	count=1
module	the ||| 30	count=2
function	[function_1] [function_2] how to proceed after ||| [function_1] [function_2]	count=6
function	reads your init file ||| auto save list	count=1
arg	visiting filename and ||| filename	count=1
module	[module_1] a ||| [module_2] [module_1]	count=4
function_arg	function stores [arg_2] ||| [function_1] property char propname [arg_2]	count=1
arg	if obarray ||| obarray	count=1
function	have not ||| auto save	count=1
function	bottom of ||| bottom	count=1
arg	[arg] pixels ||| window from [arg] x-limit y-limit	count=3
function	variable is an alist ||| alist	count=1
function	window configurations as regards ||| window configurations	count=1
function	of consecutive button presses ||| click count	count=1
function	standard [function_2] ||| [function_2] [function_1]	count=2
function_arg	split the [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	remapping of [arg_2] ||| [function_1] set base [arg_2]	count=5
module	this function returns a ||| 6	count=1
module	its argument function ||| 6	count=2
function	function expands [function_2] ||| [function_1] [function_2]	count=1
function	a string of syntax ||| skip syntax	count=1
arg	the fringe widths of ||| left right outside-margins	count=1
function	first [function] and ||| [function]	count=1
arg	seed ||| seed	count=1
function	is the name ||| name	count=1
function	may ||| pop	count=1
function	[function_1] name nil ||| [function_2] [function_1]	count=1
function	for displaying ||| pop up windows	count=1
function	[function_1] types ||| [function_1] suppress log [function_2]	count=3
module	its ||| 6	count=2
module	evaluates ||| 19 3	count=1
function	already set it ||| save	count=1
arg	[arg_1] of list ||| [arg_1] [arg_2]	count=1
function	of a sentence ||| sentence	count=1
function	[function] between ||| [function]	count=3
module	only exact [module_2] ||| [module_1] [module_2]	count=1
function	initial execution ||| edebug initial	count=2
arg	t if [arg] have ||| [arg]	count=1
function	indices ||| find indices	count=1
arg	olddef ||| olddef	count=1
arg	new-pos ||| new-pos	count=1
function	[function_1] [function_2] ||| [function_2] window [function_1]	count=4
function	after emacs ||| list	count=1
module	return the number of ||| 6 7	count=1
function_arg	text between [arg_2] ||| [function_1] [arg_2]	count=1
function	as an abbrev ||| define abbrev	count=1
function	the truename of ||| file truename	count=1
arg	volume ||| volume	count=1
function	you have not ||| list	count=1
arg	after node ||| node	count=1
module	of the ||| 29 4	count=1
function	two window configurations as ||| compare window configurations	count=1
arg	attribute attribute returns ||| attribute	count=1
arg	prompt and providing intelligent ||| prompt initial history args	count=1
function	window and ||| window	count=1
function	name and process id ||| save	count=1
module	at ||| 31 1	count=2
function	function ||| signal	count=1
function	[function_1] property value ||| [function_2] [function_1]	count=2
function	[function_1] lines ||| [function_1] [function_2]	count=4
function	parses a sexp ||| parse partial sexp	count=1
arg	[arg] each ||| [arg]	count=1
function	function ||| window parameter	count=2
function	file name ||| make auto save file name	count=1
function	coding system to ||| set terminal coding system	count=1
function	cons cell (col ||| col	count=1
function	saveunder feature ||| save under	count=1
function_arg	attributes for ||| attributes filename attribute-alist	count=1
module	file it ||| 2	count=1
module	make ||| 14	count=1
function	means ||| pop	count=1
arg	name [arg_2] ||| [arg_2] [arg_1] expansion	count=1
module	keymap or nil if ||| 21 11	count=1
module	and the emacs ||| 7	count=1
module	of ||| 39 4	count=1
function	end of the ||| end of buffer	count=2
function	frame’s window ||| buffer pop up	count=1
module	minibuffer ||| 19 11	count=1
function	the value of this ||| ring	count=1
function_arg	resource value from ||| get resource attribute	count=1
arg	propname for the ||| propname	count=1
function	current buffer to ||| to	count=1
function	the top entry ||| top	count=1
function	make a new frame ||| frame	count=1
module	and you ||| 6.1	count=1
arg	days hours ||| format-string	count=1
function	window’s [function_2] ||| [function_2] [function_1]	count=5
arg	list-of-strings into ||| list-of-strings	count=1
arg	signal to process process ||| signal	count=1
module	argument for this ||| 5	count=1
function	is a function to ||| function	count=1
arg	proper offset to align ||| offset	count=1
function_arg	[function_1] them with ||| [function_1] regexp rep string [arg_2]	count=1
function_arg	[function_1] sequence ||| [arg_2] [function_1]	count=3
rep	[module_1] [function_arg_2] ||| [module_1] modify [function_arg_2]	count=4
function	the coding system ||| terminal coding system	count=1
arg	nil if obarray has ||| name obarray	count=1
module	names that match it ||| 24 9	count=1
arg	equivalent to filename assuming ||| filename	count=1
function	make a ||| up	count=1
function	minibuffer raises ||| raise	count=1
module	variables during its next ||| 4.1	count=1
module	renames ||| 24 7	count=1
function	in the ||| completion in	count=1
function	dividend [function] ||| [function]	count=3
module	is greater than 0 ||| 1	count=1
function	face ||| font face	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=472
arg	file filename into the ||| filename visit beg	count=1
module	if ||| 17	count=1
arg	function for each element ||| function	count=1
function	suffixes ||| suffixes	count=1
function	mode is enabled when ||| mode	count=1
function	file name ||| auto save file name	count=1
function	binding ||| binding	count=3
module	this function returns ||| 17.1	count=1
arg	[arg_1] that ||| [arg_2] [arg_1]	count=3
function	this function converts the ||| kbd	count=1
arg	file ||| file	count=2
arg	the character character ||| character	count=1
function_arg	[function_1] [arg_2] ||| [function_1] prompt [arg_2]	count=29
function	[function_1] files ||| [function_2] [function_1]	count=5
function	standard case ||| standard case	count=1
arg	bitwise and ||| c	count=1
function	tool ||| tool	count=1
module	have not already set ||| 25 2	count=1
module	by the function ||| 2	count=1
function	value ||| map char table	count=2
function	if you ||| auto	count=1
function	key ||| key sequence	count=1
arg	record all the ||| reuse reseat	count=1
function	assoc except ||| assoc	count=1
function_arg	[function_1] named ||| [function_1] name [arg_2]	count=5
function	after emacs reads your ||| auto save list file	count=1
arg	of fun [arg_2] ||| [arg_2] [arg_1]	count=1
arg	them with [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] button label [arg_2]	count=3
function	init ||| save list	count=1
arg	to ||| &rest	count=1
function	function returns the selected ||| selected	count=1
function	a non-nil ||| char table	count=1
module	last regular expression ||| 33	count=1
module	emacs to the ||| 38 13	count=1
function	returns the selinux ||| selinux	count=1
function_arg	[function_1] as old-pos ||| [arg_2] [function_1]	count=4
function	an input [function_2] ||| [function_2] [function_1]	count=4
function	the [function] ||| rename [function]	count=2
function_arg	name prompting [arg_2] ||| [function_1] [arg_2]	count=2
function	window for displaying in ||| windows	count=1
function_arg	[function_1] new-pos that ||| [arg_2] [function_1]	count=1
arg	pos as ||| pos	count=1
function	actual [function_2] ||| [function_1] col [function_2]	count=3
module	allowed ||| 27 14	count=2
module	may ||| 27 14	count=2
function_arg	the fieldth [arg_2] ||| [function_1] [arg_2]	count=4
module	the ||| 5	count=1
function	attributes of file ||| attributes	count=2
function	the proper ||| current	count=1
function	inserts before [function_2] ||| [function_2] [function_1]	count=4
arg	to value for ||| value	count=1
function	the leftmost column ||| window left column	count=1
function	function reads a shell ||| read shell	count=1
module	sequence a ||| 21	count=1
function_arg	start [arg_2] ||| [function_1] start [arg_2]	count=4
module	name and process ||| 25	count=1
function	status ||| status	count=2
arg	the current active keymaps ||| keymaps	count=1
module	point is ||| 31	count=2
arg	body ||| body	count=4
function	non-nil based on this ||| save list file	count=1
arg	this is like get-char-property ||| position prop object	count=1
module	windows ||| 27 24	count=2
module	and ||| 2	count=1
function	modifying the match ||| string match p	count=1
function	line number in the ||| line number at	count=1
module	is non-nil display-buffer is ||| 27	count=1
arg	valid position in object ||| pos prop object limit	count=1
function	function for each element ||| map char	count=1
module	and return that ||| 6	count=1
function	[function_1] flag ||| [function_1] [function_2]	count=4
module	systems to use ||| 32	count=1
function	erases the editable contents ||| minibuffer contents	count=1
module	associations ||| 7 2	count=1
arg	in object if no ||| prop object	count=1
function	to make a new ||| up	count=1
function	that has a non-nil ||| map	count=1
module	minibuffer prompting ||| 19 6.5	count=1
arg	return non-nil [arg] ||| [arg]	count=1
function	[function_1] window’s value ||| [function_1] [function_2]	count=2
module	hours etc ||| 38 7	count=1
module	default ||| 24 7	count=1
arg	vector key to ||| key	count=1
function	property to ||| property	count=1
function	removes left margin ||| delete to left margin	count=1
arg	window ||| window	count=7
function	a fill [function] based ||| [function]	count=1
function_arg	buffer in window ||| buffer window bury-or-kill	count=2
function	property ||| put charset property	count=1
function	for each element of ||| table	count=1
function	to split window and ||| split	count=1
function	in the usual ||| bindat ip to	count=1
arg	image object in position ||| position	count=1
function	the name of ||| name	count=1
function	for the ||| not	count=1
module	abbrevs ||| 35	count=1
arg	char-table that ||| function char-table	count=1
function	host ||| auto save list	count=1
arg	arguments rather ||| arguments	count=1
function	of that buffer’s point ||| window point	count=1
module	this returns the value ||| 5 9.2	count=1
function	next-single-property-change except that ||| next single	count=1
function_arg	color [arg_2] ||| [function_1] define name [arg_2]	count=3
rep	possible [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	end of ||| end of buffer	count=2
function	of years days ||| format	count=1
function	bytes ||| bytes	count=1
module	of all ||| 17 2.16	count=1
function	process ||| process sentinel	count=1
function	dimensions of ||| mm dimensions alist	count=1
arg	of regexp in ||| regexp s &optional start end	count=1
module	is first activated ||| 17 2.16	count=1
function	just [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] named name ||| [function_1] description [arg_2]	count=4
function	new ||| vconcat	count=1
function	the name [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] value from ||| [function_1] [arg_2]	count=4
function	no match ||| match	count=1
function	[function] line ||| [function] line update	count=2
arg	alphabetically as [arg_2] ||| [arg_1] [arg_2]	count=2
function	the epoch [function_2] ||| [function_2] [function_1]	count=8
arg	tree and ||| tree	count=1
function	name ||| list file	count=1
arg	hook function in ||| hook args	count=2
module	the minibuffer a nonnegative ||| 13	count=1
function	your init ||| save list file	count=1
arg	[arg] in the ||| font-spec [arg]	count=1
arg	a face ||| face	count=1
function	visibility status of ||| frame visible p	count=1
function_arg	[function_1] of fn ||| [arg_2] [function_1]	count=3
arg	string as ||| process string	count=1
module	this variable ||| 11	count=2
module	the ||| 25	count=1
function	returns a [function_2] ||| [function_1] [function_2]	count=4
arg	function reads a lisp ||| prompt initial	count=1
function	converts a symbolic ||| symbolic	count=1
function	prompt string ||| prompt	count=2
arg	if the abbrev has ||| abbrev	count=1
function	it as obsolete ||| obsolete face	count=1
function	highest priority [function_2] ||| 8 [function_2] [function_1]	count=1
function	the subtype symbol ||| subtype	count=1
arg	command adjusts ||| max-height min-height max-width min-width only	count=1
arg	the given ||| &optional start	count=1
function	to upper case ||| upcase	count=2
function	rest to ||| s capitalize	count=1
function_arg	replaced [arg_2] ||| [function_1] [arg_2]	count=2
module	non-nil display-buffer is ||| 27	count=1
function_arg	[function_1] that key ||| [arg_2] [function_1]	count=3
function	button after for next-button ||| button	count=1
module	marker [module_2] ||| [module_1] [module_2]	count=2
function	the value of ||| pop	count=2
arg	obsolete-name ||| obsolete-name current-name when	count=1
arg	the contents of string ||| process string	count=1
function	this function kills the ||| kill	count=1
module	string constant into ||| 21 1	count=1
function	the maximum ||| max	count=1
arg	specified by buffer-or-name ||| buffer-or-name	count=1
function	to a time ||| to	count=1
module	frames to be ||| 28	count=1
function	of the minibuffer a ||| minibuffer	count=1
module	so that the ||| 29	count=1
function	[function_1] that completes ||| [function_2] history [function_1]	count=1
function	function sets ||| set process	count=3
arg	predicates preds and ||| &rest preds	count=2
function_arg	region [arg_2] ||| [arg_2] [function_1]	count=7
function_arg	the face [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] than ||| [function_1] [function_2]	count=1
function	sets up a change ||| change	count=1
function	sequence ||| kbd	count=1
function	stores value ||| code	count=1
function	body of window window ||| body	count=1
arg	position in object rather ||| prop object	count=1
function	returns the property list ||| symbol plist	count=1
function	returns ||| buffer	count=1
function	of the current ||| current	count=3
arg	table table ||| table	count=3
arg	buffer specified by buffer-or-name ||| buffer-or-name norecord	count=2
function	the screen area ||| area	count=1
arg	characters [arg] ||| [arg]	count=2
function	the prompt string of ||| prompt	count=1
arg	string s with prefix ||| s prefix	count=1
function	accessible portion ||| point min	count=1
function	file it ||| auto	count=1
function	have not already set ||| auto save list	count=1
function	below [function_2] ||| [function_1] [function_2]	count=2
function	after emacs reads ||| save list file	count=1
function	emacs-recognized extended ||| extended	count=2
function_arg	[function_1] bitmap bitmap ||| [function_1] [arg_2]	count=6
function	a key sequence ||| kbd	count=1
arg	object rather than ||| pos prop object limit	count=1
arg	of fun to ||| fun	count=1
function_arg	between positions [arg_2] ||| [arg_2] [function_1]	count=3
arg	regular expression matching ||| regexp limit	count=1
module	is the horizontal position ||| 31 17.1	count=1
arg	i ||| ignore-case	count=1
arg	and executes [arg_2] ||| [arg_1] [arg_2]	count=1
function	reads ||| save	count=1
function	startup screen ||| startup screen	count=1
module	is at ||| 31	count=2
function_arg	bool vectors [arg_2] ||| [function_1] [arg_2]	count=1
arg	bind it to var ||| &rest else	count=1
function	to the end of ||| end of buffer	count=1
module	the elements of ||| 6 5	count=1
function	the dimensions ||| display mm dimensions alist	count=1
function	[function] image ||| [function] image	count=2
arg	from beg ||| beg	count=4
function	value ||| table	count=1
arg	command a ||| command position	count=1
module	deletes ||| 28 6	count=1
arg	collection will [arg_2] ||| 19 6.1 completion boundaries [arg_2] [arg_1]	count=1
arg	them [arg_2] ||| [arg_2] string [arg_1]	count=1
module	is ||| 17.1	count=1
function	the exit status ||| exit status	count=1
arg	tree ||| folder init-value tree	count=1
module	and ||| 7	count=6
module	if [module_1] [module_2] byte compiler generates compiled ||| [module_2] [module_1]	count=1
function	global map ||| global	count=1
function	if you have not ||| auto save	count=1
function	[function_1] left margin ||| [function_1] [function_2]	count=2
module	minibuffer before the point ||| 19	count=1
function_arg	encapsulating [arg_2] ||| [function_1] before ewoc node [arg_2]	count=4
arg	of key in ||| key accept-defaults	count=1
module	variable is the ||| 30 7	count=1
function	match exactly ||| string=	count=1
arg	positions [arg] ||| [arg]	count=1
module	emacs to ||| 38 13	count=1
function	specify the dimensions ||| display mm dimensions	count=1
function	this sets the ||| ewoc set	count=1
function	input method name ||| input method name	count=3
function	header ||| init header	count=1
function	have not already ||| auto	count=1
arg	spec has ||| spec	count=1
module	reads your ||| 2	count=1
module	of ||| 30 7	count=4
function	next tab stop column ||| tab to tab stop	count=1
function	the left ||| left	count=4
function	buffer ||| find buffer	count=1
function	new frame and ||| frame	count=1
arg	signal to process ||| signal	count=1
module	[module_1] returns ||| [module_1] [module_2]	count=4
function	change is found before ||| property change	count=1
arg	key to a list ||| key	count=1
module	the ||| 10 3	count=2
function	auto-save [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] fringe ||| [function_2] [function_1]	count=3
module	this function returns t ||| 31	count=2
arg	some window preferably not ||| action norecord	count=1
module	variable alias ||| 11	count=1
function	copy of the ||| properties	count=1
function	another name for string= ||| string	count=1
function	to ||| add to	count=2
function	[function_1] property ||| [function_2] [function_1]	count=1
function	property list ||| plist	count=2
function	this function appends the ||| append to file	count=1
module	into a key sequence ||| 1	count=1
module	a ||| 13	count=1
function_arg	size of [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] of charset ||| [function_1] [arg_2]	count=1
arg	prompting with prompt ||| prompt	count=2
module	of ||| 17 2.16	count=2
function	display table ||| display	count=1
function	function deletes ||| delete	count=3
arg	value value2 otherwise if ||| value2	count=1
function_arg	a resource [arg_2] ||| [function_1] [arg_2]	count=3
function	on this ||| save list file	count=1
function	of remote ||| remote file name	count=1
module	the ending ||| 20 7.13	count=1
arg	[arg_1] list ||| [arg_1] [arg_2]	count=4
function	beginning of the ||| beginning of	count=2
function	is greater ||| buffer end	count=1
function	returns the ||| minibuffer	count=1
arg	items [arg] ||| n [arg]	count=1
module	of an ||| 35 4	count=1
module	function returns ||| 25	count=1
function	function deletes [function_2] ||| [function_2] [function_1]	count=1
function	image [function_2] ||| [function_2] [function_1]	count=1
function	returns an indirect ||| indirect	count=1
module	non-nil based on ||| 25	count=1
function	fontset according to the ||| from fontset	count=1
arg	end [arg_2] ||| [arg_2] record-regexp key-regexp start [arg_1]	count=3
function	a region ||| fill region	count=1
arg	width of ||| width	count=1
function	expression using the minibuffer ||| minibuffer	count=1
function	this prefix adding ||| prefix	count=1
function	-take-while pred list -drop-while ||| split with	count=1
module	nonnegative ||| 19	count=1
module	point is at the ||| 31	count=2
module	the strings ||| 31 4	count=1
function	tests ||| not	count=1
module	of ||| 4 9	count=2
module	substring ||| 4 3	count=1
module	[module_1] prompting with ||| [module_1] [module_2]	count=2
function	buffer ||| revert buffer	count=1
function	next button after for ||| next button	count=1
arg	base [arg] to ||| [arg]	count=1
module	resize windows ||| 27	count=1
function	the actual ||| actual	count=1
function	reads your ||| list	count=1
arg	of tree and ||| folder init-value tree	count=1
function	[function_1] to ||| [function_2] [function_1]	count=13
function_arg	[function_1] display-table in ||| [function_1] [arg_2]	count=1
arg	prompt and providing ||| prompt initial history args	count=1
function	to the ||| to	count=1
function	of the current line ||| of line	count=2
function	value of this ||| ring	count=1
module	floating point ||| 3	count=1
arg	frame frame ||| frame	count=7
arg	character char if it ||| char	count=1
module	t ||| 31	count=2
function_arg	abbrev table [arg_2] ||| [arg_2] [function_1]	count=3
function	justification to use ||| justification	count=1
function_arg	[function_1] handle ||| [arg_2] [function_1]	count=1
function	[function_1] the bottom ||| [function_1] [function_2]	count=4
arg	condition ||| condition	count=1
function	[function] a ||| [function]	count=1
function	region ||| region	count=4
function	acl for the file ||| acl	count=1
arg	moves backward across arg ||| arg	count=2
function	[function_1] the syntax ||| [function_2] [function_1]	count=1
function	this stores value as ||| put	count=1
function	turn passing [function_2] ||| [function_2] [function_1]	count=2
function	variable is ||| ring	count=1
function	of regular expressions that ||| regexps	count=1
arg	name in [arg_2] ||| [arg_2] [arg_1]	count=1
arg	makes buffer-or-name the ||| buffer-or-name	count=1
function_arg	string made [arg_2] ||| [function_1] [arg_2]	count=4
function	string in the usual ||| to string	count=1
function	0 ||| buffer	count=1
module	contents ||| 29 4	count=1
function	visible on ||| visible in	count=1
function	frames ||| frames	count=1
function	creates a new frame ||| frame	count=1
function	window’s value for ||| window parameter	count=1
function	newline [function_2] ||| [function_2] [function_1]	count=2
function	emacs-recognized extended [function_2] ||| [function_2] [function_1]	count=5
function	process ||| process get	count=1
arg	according to the ||| keyword-args	count=1
function_arg	the property [arg_2] ||| [function_1] [arg_2]	count=2
function	a new ||| vconcat	count=1
module	during ||| 4.1	count=1
function	its argument ||| map	count=1
function	the initial [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] to the ||| [function_2] [function_1]	count=3
function	minibuffer window ||| minibuffer auto	count=1
function	[function] given ||| [function] position	count=1
function	set it non-nil ||| save	count=1
arg	regular expression matching ||| regexp limit noerror	count=1
function_arg	split [arg_2] ||| [function_1] on item [arg_2]	count=3
function	display buffers by ||| up	count=1
arg	in filename ||| filename	count=1
function	on this ||| file	count=1
module	function returns ||| 6 5	count=1
module	to floating ||| 3 5	count=1
arg	tree and make ||| tree	count=1
function_arg	[function_1] with font-spec ||| [function_1] name character [arg_2]	count=3
function	makes backup [function_2] ||| [function_2] [function_1]	count=2
arg	directory file ||| directory	count=1
function	option ||| buffer base	count=1
function	that means display-buffer ||| up	count=1
arg	to switches ||| switches	count=1
function	sets the [function_2] ||| [function_2] [function_1]	count=1
module	make a ||| 27	count=1
arg	the named function ||| where function props	count=2
function_arg	method [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] field ||| [function_1] [arg_2]	count=5
arg	window window ||| window	count=3
module	of the words in ||| 8	count=1
function	inserts contents [function_2] ||| [function_2] [function_1]	count=1
module	this function sends a ||| 8	count=1
function	[function_1] copying for ||| [function_2] [function_1]	count=5
function	tabulated list ||| tabulated list init	count=1
function_arg	previous buffer [arg_2] ||| [function_1] [arg_2]	count=1
module	whether its argument is [module_1] [module_2] and returns t if ||| [module_2] [module_1] macrop object	count=1
function	frame configuration list ||| frame configuration	count=1
arg	fn ||| fn folder init-value	count=1
function	truename of the file ||| file truename	count=1
module	or ||| 21 1	count=2
function	the display ||| display	count=1
function	file permissions as an ||| file modes	count=1
function	calls ||| map	count=1
arg	matching with font-spec for ||| font-spec	count=1
function	a standard x ||| x	count=1
arg	of regexp ||| regexp s &optional start end	count=1
function	recenter ||| recenter	count=1
module	arguments is a list ||| 12 5	count=1
module	display-buffer ||| 27	count=2
module	of the minibuffer a ||| 19 13	count=1
function	a generic ||| define generic	count=1
arg	generated by [arg] elements ||| pred [arg]	count=1
function_arg	[function_1] [arg_2] items ||| [function_1] [arg_2]	count=3
function_arg	[function_1] that event ||| [function_1] [arg_2]	count=4
arg	this function associates the ||| rgb frame	count=1
module	the falsehood ||| 10	count=1
function	extra slot ||| set char table extra slot	count=1
function	of user groups on ||| groups	count=1
function	allowed to split ||| pop	count=1
function	returns t if the ||| p	count=3
function	abbrev [function_2] ||| [function_2] [function_1]	count=2
function	a list of buffer ||| buffer	count=1
function_arg	node encapsulating [arg_2] ||| [function_1] ewoc [arg_2]	count=1
function	return t if ||| p	count=1
function	the query flag ||| query on exit flag	count=2
function	tries to split window ||| split	count=1
arg	thread [arg_2] ||| [arg_1] form [arg_2]	count=3
arg	prompt and providing intelligent ||| prompt initial history	count=1
function	scroll ||| current scroll	count=2
module	returns t if point ||| 31	count=2
module	contents are ||| 4	count=1
function	string of years ||| format seconds	count=1
function	next button after ||| next button	count=1
arg	command command synchronously ||| command infile destination	count=1
module	debugger regardless of the ||| 17 1.1	count=1
function_arg	[function_1] regexp ||| [function_1] all [arg_2]	count=1
function	syntax ||| skip syntax	count=2
module	window ||| 27 14	count=4
function_arg	previous button [arg_2] ||| [arg_2] [function_1]	count=4
arg	function alias it looks [arg_1] [arg_2] the actual ||| [arg_2] [arg_1]	count=4
arg	property in the property ||| property	count=1
function	the first nonblank character ||| current	count=1
function	displays differently [function_2] ||| [function_2] [function_1]	count=3
arg	face face specifies ||| face	count=1
module	default 1 balanced ||| 2.6	count=1
arg	sends a signal ||| signal	count=1
function	remove the ||| remove	count=1
function	[function] cover the ||| [function] at	count=3
function	justification to ||| justification	count=1
function_arg	[function_1] the list ||| [arg_2] [function_1]	count=1
module	this function converts ||| 21	count=1
function_arg	[function_1] of process ||| [function_1] [arg_2]	count=13
function	set it non-nil ||| list file	count=1
function	raises ||| raise	count=1
module	or an internal window [module_1] [module_2] window tree ||| [module_1] [module_2]	count=1
arg	of tree and ||| tree	count=1
function	your ||| file	count=1
module	if you have ||| 25 2	count=1
module	the buffer ||| 31 1	count=1
function	returns the ||| current	count=1
module	this function returns window’s ||| 25	count=1
function_arg	[function_1] of prev-buffers ||| [arg_2] [function_1]	count=5
function	has a ||| char table	count=1
module	[module_1] [module_2] is ||| [module_2] [module_1]	count=2
function_arg	property [arg_2] ||| [function_1] start end prop [arg_2]	count=2
arg	name to use ||| name	count=1
function_arg	[function_1] [arg_2] ||| [function_1] other window [arg_2]	count=24
function	as dedicated ||| dedicated p	count=1
module	you ||| 25	count=1
function	reasonable values ||| custom add frequent	count=1
function	list of attributes ||| attributes	count=1
arg	buffer to specs ||| specs	count=1
arg	of filename to time ||| filename time	count=1
function	current buffer forward ||| forward	count=1
arg	args and additional arguments ||| args	count=1
arg	buffer object ||| props object	count=1
function	that ||| char	count=1
function	dimensions ||| display mm dimensions alist	count=1
function	returns the ending position ||| event	count=1
function	new node encapsulating ||| ewoc enter first	count=1
function	for a package ||| package	count=1
module	in [module_2] ||| [module_1] [module_2] window valid	count=1
module	is at the ||| 1	count=2
function_arg	[function_1] prompt ||| [arg_2] [function_1]	count=7
arg	thread it [arg_2] ||| [arg_1] [arg_2]	count=1
function	columns to the right ||| scroll right	count=1
function	that means display-buffer may ||| pop	count=1
module	as automatically buffer-local ||| 11 10.2	count=1
arg	[arg_1] y ||| [arg_2] [arg_1]	count=1
function	this sets the header ||| ewoc set	count=1
arg	record all the information ||| reuse reseat	count=1
arg	input-method ||| input-method	count=1
module	this returns the ||| 5 9.2	count=1
function	global [function_2] ||| [function_1] [function_2]	count=1
function	function deletes ||| delete horizontal	count=1
module	function ||| 35 1	count=1
function	the header ||| header	count=2
function	the ending ||| event end	count=1
function	string containing a copy ||| substring	count=1
arg	days hours etc ||| format-string	count=1
function	[function_1] system to ||| [function_1] [function_2]	count=6
arg	thread it [arg_2] ||| [arg_1] form [arg_2]	count=3
function	file name prompting ||| file name	count=2
function	string containing ||| char to string	count=2
module	deletes ||| 36 5	count=1
arg	at offsets step ||| n step	count=1
function	current depth of ||| minibuffer depth	count=1
function	as obsolete indicating ||| obsolete face	count=1
function	this inserts a ||| insert	count=1
arg	mentioned in syntaxes ||| syntaxes limit	count=2
function	command deletes the ||| delete	count=1
arg	rgb ||| rgb	count=1
function_arg	[function_1] named ||| [function_1] description name [arg_2]	count=4
module	measured in lines and ||| 28 3.4	count=1
function	startup echo ||| inhibit startup echo	count=2
arg	rgb a ||| rgb	count=1
function	non-nil emacs makes backups ||| backup	count=1
function	text of window’s ||| window text	count=1
module	is non-nil ||| 5	count=1
function	split s up to ||| s split	count=1
function	property value comes from ||| get char property and	count=1
function	the file name ||| file name completion	count=2
module	function returns ||| 31 17.1	count=1
function	visible on the screen ||| pos visible in	count=1
function	deletes all ||| delete	count=1
arg	stores object ||| object	count=2
function_arg	file name [arg_2] ||| [function_1] [arg_2]	count=3
function	function displays ||| switch to buffer	count=2
function	it non-nil based on ||| save list	count=1
function	the font of ||| face font	count=1
arg	as specified by record-regexp ||| record-regexp	count=1
arg	object rather than ||| object limit	count=1
function	than 0 point-min ||| buffer end	count=1
module	string constant into a ||| 21	count=1
function	function makes [function_2] ||| [function_1] [function_2]	count=2
module	by emacs to ||| 38 13	count=1
module	that the entire ||| 4	count=1
function	you have ||| file	count=1
function	flag ||| flag	count=1
function	calls its argument ||| map char	count=1
function	already set it ||| auto	count=1
function	a sexp ||| partial sexp	count=1
module	debugger each time it ||| 17 1.3	count=1
arg	the customization option symbol ||| symbol	count=1
function	the minimum distance between ||| minimum	count=1
function	set it non-nil based ||| list file	count=1
arg	in symbol’s property ||| symbol property	count=2
arg	the elements of args ||| &rest args	count=1
module	ewoc found at ||| 37 19.1	count=1
function	[function_1] backup file ||| [function_2] [function_1]	count=4
function	this function deletes ||| delete horizontal space	count=2
function	on this prefix adding ||| file prefix	count=1
module	if ||| 2.16	count=2
module	argument function for each ||| 6	count=2
function	a symbolic file ||| symbolic	count=1
function	sets the accessible portion ||| narrow	count=1
arg	filename if ||| filename	count=1
function_arg	string [arg_2] ||| [function_1] string [arg_2]	count=1
module	in the current buffer ||| 4	count=1
arg	apply [arg] each element ||| [arg]	count=1
arg	buffer-or-name in a ||| buffer-or-name	count=1
arg	of list with ||| list	count=1
module	string ||| 4 2	count=1
function	beginning [function_2] ||| [function_2] [function_1]	count=6
function	[function_1] [function_2] if flag is non-nil ||| [function_1] [function_2]	count=4
function	graphic display capable of ||| graphic	count=1
function	on ||| file	count=1
module	activated ||| 17 2.16	count=1
function	this sets ||| set right	count=1
arg	buffer-or-name the current ||| buffer-or-name	count=1
function	a window below ||| display buffer below	count=1
function	not already ||| auto save	count=1
module	buffer-local so ||| 11 10.2	count=1
function	frame’s frame-char-height and frame-char-width ||| resize pixelwise	count=1
arg	[arg_1] satisfying the ||| [arg_2] [arg_1]	count=8
arg	newest element ||| ring	count=1
module	text for a ||| 31	count=1
function	regular expression that ||| regexp	count=1
function	to restore ||| quit restore	count=1
arg	[arg_1] docstring for ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] tree and ||| [function_1] fn [arg_2]	count=1
function_arg	conversion [arg_2] ||| [function_1] eol-coding [arg_2]	count=1
arg	performs ||| macro-only	count=1
function	[function_1] [function_2] the ||| [function_1] [function_2]	count=18
module	first ||| 31	count=1
arg	that ||| alist	count=1
arg	l [arg_2] ||| [arg_2] [arg_1]	count=3
arg	key with ||| key	count=1
function_arg	the region [arg_2] ||| [function_1] [arg_2]	count=7
module	debugger [module_2] ||| [module_1] [module_2]	count=8
arg	as ||| ok-if-already-exists	count=1
function	to its ||| to	count=1
function	of ||| char table	count=2
module	of years days hours ||| 38 7	count=1
function	[function_1] matching ||| [function_2] [function_1]	count=4
function	the exit status ||| process exit status	count=2
function	current insertion type of ||| marker insertion type	count=1
function_arg	global map [arg_2] ||| [function_1] set key key [arg_2]	count=1
function	rest to lower case ||| capitalize	count=1
function	file it initializes auto-save-list-file-name ||| auto save list file	count=1
function	possible name for ||| name	count=1
function	tabulated list ||| tabulated list	count=1
function	rest ||| s capitalize	count=1
function	function returns the current ||| current	count=3
function	family is ||| family	count=1
arg	regexp ||| regexp	count=4
function	appends the ||| kill append	count=1
arg	[arg_1] key in ||| [arg_2] [arg_1]	count=6
function	significand ||| ldexp	count=1
arg	[arg_1] window window ||| [arg_2] [arg_1]	count=5
function	- 3 and ||| s truncate	count=1
module	[module] is ||| [module] 5	count=3
function	the command line that ||| command line	count=1
function	argument function for each ||| map char	count=1
function	text ||| text properties	count=1
function	the number of ||| count	count=2
function_arg	[function_1] font-spec ||| [function_1] name character [arg_2]	count=2
function	frame that ||| window frame	count=1
module	non-nil based on ||| 25 2	count=1
arg	object [arg_2] ||| [arg_1] [arg_2]	count=1
arg	of char-table that has ||| function char-table	count=1
function	restore the state ||| restore	count=1
function	live [function_2] ||| [function_2] [function_1]	count=6
arg	the left-margin property on ||| margin	count=1
function	to each ||| from	count=1
function	words of the current ||| current	count=1
function	text as xml rather ||| parse xml	count=1
function	if you ||| file	count=1
arg	call fun on each ||| fun	count=1
function	to floating point ||| float	count=1
module	tests for the ||| 3	count=1
function	text ||| set text	count=1
function	initial execution [function_2] ||| [function_2] [function_1]	count=3
function	makes backups [function_2] ||| [function_1] [function_2]	count=9
module	is ||| 30 7	count=2
function	apply ||| partition by	count=1
function	it initializes auto-save-list-file-name if ||| save list file	count=1
function	fn and fewer than ||| partial	count=1
function	the minibuffer window ||| minibuffer auto	count=1
module	function returns ||| 12	count=2
module	text from the buffer ||| 31	count=1
module	other frames and tries ||| 28	count=1
arg	marker marker [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] frame ||| [function_1] [function_2]	count=14
arg	rgb a list ||| rgb	count=1
function_arg	[function_1] charset ||| [arg_2] [function_1]	count=1
function	hours ||| format seconds	count=2
module	text ||| 31 13	count=1
function	makes a [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] value ||| [function_1] property char propname [arg_2]	count=1
function	the value ||| mark	count=1
function	the current buffer’s ||| force	count=1
function	address of ||| address	count=1
module	0 ||| 1	count=1
function	[function_1] boundaries and ||| [function_2] [function_1]	count=4
function	for the category ||| define category	count=1
function_arg	leftmost child window ||| window child window	count=1
arg	but does so in ||| wildcards	count=1
function_arg	iterated applications [arg_2] ||| [function_1] [arg_2]	count=3
module	is non-nil that ||| 14	count=1
function	of ||| current	count=2
function_arg	[function_1] field of ||| [arg_2] [function_1]	count=5
function_arg	bool vector [arg_2] ||| [arg_2] [function_1]	count=1
function	number ||| face id	count=1
function	function defines ||| define	count=1
function	text [function_2] ||| [function_2] [function_1]	count=3
function	creating the initial ||| initial	count=1
arg	selects frame raises it ||| frame norecord	count=1
arg	frame can ||| frame background-p	count=1
arg	docstring and marks it ||| docstring	count=1
arg	bindat-raw ||| bindat-raw	count=1
function	window’s previous buffers ||| window prev buffers	count=3
module	the ending position of ||| 20 7.13	count=1
function	inserts object into ||| ring insert	count=1
function	the [function] item of ||| [function] item	count=1
function_arg	[function_1] the function ||| 12 10.1 [function_1] place [arg_2]	count=3
function	function destroy the fringe ||| destroy fringe	count=1
function_arg	face [arg_2] ||| [arg_2] [function_1]	count=5
module	to ||| 14	count=2
module	the value of ||| 30	count=1
function	method [function_2] ||| [function_1] [function_2]	count=3
arg	from start [arg_2] ||| [arg_1] [arg_2]	count=6
function_arg	[function_1] face in ||| [function_1] set base [arg_2]	count=1
function	the window [function_2] ||| [function_1] [function_2]	count=1
function	combination ||| combination	count=1
function	in shell ||| shell quote	count=1
module	non-nil that ||| 14	count=1
function	character of command input ||| char exclusive	count=1
module	is non-nil the ||| 16	count=1
module	not ||| 25	count=1
function	input [function_2] ||| [function_1] [function_2]	count=5
function_arg	table name i ||| table tabname definitions	count=1
function	style of justification ||| justification	count=1
function	whose syntax classes ||| skip syntax backward	count=1
function	function returns ||| get	count=2
function	string of syntax class ||| syntax	count=1
arg	alphabetically as [arg_2] ||| [arg_2] [arg_1]	count=2
function	creates and returns an ||| make	count=2
arg	regexp separator ||| separator	count=1
arg	name name ||| name	count=1
function	backup [function_2] ||| [function_2] [function_1]	count=1
module	arguments is a list ||| 5	count=1
arg	user by providing completion ||| collection predicate require-match initial history	count=1
module	default 1 balanced groups ||| 2.6	count=1
function	activations of ||| minibuffer	count=1
arg	string and searches ||| string	count=1
function	pixel edge of window ||| window pixel	count=1
function	[function_1] base ||| [function_1] [function_2]	count=2
module	for each element ||| 6 6	count=1
arg	expand to expansion and [arg_1] [arg_2] ||| expansion [arg_1] [arg_2]	count=4
module	a [module] ||| [module]	count=11
function	the shell ||| process shell	count=1
module	which ||| 27	count=1
function	the :inverse-video ||| face inverse video	count=1
function	completes the current contents ||| complete	count=1
module	converts ||| 1	count=1
arg	list in lists such ||| lists	count=1
module	[module] byte compiler ||| [module]	count=1
function	function returns ||| window parameter	count=1
function	to update [function] ||| [function] line update	count=1
function	an abbrev [function_2] ||| [function_2] [function_1]	count=1
function	controlling terminal ||| controlling	count=1
function	executes the shell ||| call process shell	count=1
function	the minibuffer evaluates ||| eval minibuffer	count=1
function_arg	an autoload [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] time ||| [function_1] [arg_2]	count=4
arg	regular expression ||| regexp	count=1
module	not already set it ||| 25 2	count=1
arg	symbol [arg_2] ||| [arg_1] [arg_2]	count=3
function	of years days ||| seconds	count=1
function	the rest ||| s capitalize	count=1
function	the minimum [function_2] ||| [function_1] [function_2]	count=1
function	non-nil value if ||| p	count=1
function	indices of all elements ||| elem indices	count=1
function	non-nil based on this ||| list	count=1
function	delete trailing [function_2] ||| [function_2] [function_1]	count=1
function	point to the start ||| ewoc goto	count=1
function	function returns t if ||| p	count=1
module	this variable is ||| 27 11	count=1
arg	the current buffer ||| buffer	count=2
function	the current insertion ||| insertion	count=1
function	following the newline ||| newline	count=1
arg	the element element ||| element	count=2
function	newer history ||| matching history	count=1
function_arg	[function_1] bound to ||| [function_1] [arg_2]	count=4
function	function sets the query ||| set process query on exit	count=1
function	of consecutive button presses ||| event click	count=1
function	you have ||| list	count=1
function_arg	[function_1] buffer-or-name ||| [arg_2] [function_1]	count=2
arg	message as the message ||| message	count=1
function	edge ||| edge	count=1
arg	hook with [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] [function_2] when ||| [function_1] [function_2] kind	count=2
arg	[arg] else nil ||| [arg]	count=9
function	[function_1] text of ||| [function_2] [function_1]	count=2
module	text according to yank-handled-properties ||| 31	count=1
arg	buffer from-buffer-or-name ||| from-buffer-or-name	count=1
function	you ||| file	count=1
function	the network [function_2] ||| [function_1] [function_2]	count=1
module	if you have ||| 25	count=1
function	consecutive button presses that ||| event click	count=1
module	character sets in the ||| 32	count=1
function	split s up to ||| s split up	count=1
function	no change is found ||| char property change	count=2
arg	named fname ||| fname	count=1
module	making ||| 25 1.1	count=1
module	new window ||| 27 14	count=1
arg	for regexp in string ||| regexp string &optional subexp-depth	count=1
function	this function ||| char table	count=1
function	the parent ||| char table parent	count=1
function	to titleized [function_2] ||| [function_2] [function_1]	count=1
module	the [module] between ||| [module] 6	count=1
function	standard ||| standard	count=3
function	wrap ||| wrap	count=2
function_arg	[function_1] count repetitions ||| [function_1] [arg_2]	count=2
function	line at certain places ||| nobreak predicate	count=1
module	this option specifies the ||| 27 3	count=2
function	this makes a button ||| button	count=1
module	is ||| 24 5	count=1
function	based ||| list	count=1
function	the text between ||| text	count=1
function	index of the ||| elem index	count=1
arg	the regular expression regexp ||| regexp	count=3
function	of this variable is ||| ring	count=1
function	[function_1] cache ||| [function_1] [function_2]	count=1
function	returns the nondirectory ||| nondirectory	count=1
arg	to plist ||| plist	count=1
module	a [module] ||| [module] 7	count=3
arg	propname for ||| propname	count=1
module	containing ||| 5	count=1
module	emacs ||| 38 11	count=1
function	the remapping for ||| remapping	count=1
arg	returns default ||| default	count=1
module	modulo ||| 3 6	count=1
function_arg	[function_1] key in ||| [arg_2] [function_1]	count=3
arg	alist for [arg_2] ||| [arg_2] [arg_1]	count=2
function	the text ||| set text	count=1
function	the contents of file ||| contents	count=1
function	position ||| event end	count=1
module	function ||| 9.1	count=2
module	vector ||| 6	count=1
function_arg	[function_1] charset to ||| [arg_2] [function_1]	count=1
function_arg	buffer to [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg] else ||| [arg]	count=9
function_arg	[function_1] with prompt ||| [arg_2] [function_1]	count=7
module	[module_1] prompting ||| [module_1] [module_2]	count=2
function	file name of ||| name	count=1
function	the value ||| up	count=2
function	years days hours etc ||| format	count=1
module	default 1 balanced expressions ||| 29 2.6	count=1
function	of lines of continuity ||| lines	count=1
function	modification times ||| times	count=1
function_arg	the binding [arg_2] ||| [function_1] [arg_2]	count=5
function	non-nil based on ||| auto	count=1
arg	of regexp ||| regexp s &optional	count=1
function	no change is ||| change	count=3
function	[function_1] minibuffer ||| [function_1] [function_2]	count=5
module	keymap or ||| 21	count=1
arg	of face to underline ||| face underline frame	count=1
arg	value in the value ||| value	count=1
arg	in string according ||| string	count=1
function	from-buffer-or-name ||| buffer substring	count=1
function	not already ||| auto save list file	count=1
function	acl for ||| acl	count=1
function	returns the current depth ||| minibuffer depth	count=1
arg	true if [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
arg	is shorter [arg] ||| [arg] padding	count=1
function	fonts to use ||| fonts	count=1
arg	position as a ||| position	count=1
function_arg	to each [arg_2] ||| [function_1] fn [arg_2]	count=2
function_arg	[function_1] command command ||| [arg_2] [function_1]	count=4
module	returns ||| 4 3	count=1
function_arg	help command [arg_2] ||| [function_1] [arg_2]	count=3
function	named property ||| get	count=1
function	leftmost column of ||| left column	count=1
function	definition of ||| lookup	count=1
function	[function_1] deleted ||| [function_1] [function_2]	count=1
function	emacs reads your init ||| save	count=1
function	regular expression ||| regexp	count=3
function	total number of ||| size	count=1
function	a ||| make	count=2
function	[function_1] register ||| [function_1] [function_2]	count=2
arg	for key according to ||| key accept-defaults no-remap	count=1
module	inserts ||| 31 4	count=1
module	its ||| 19 6.1	count=1
function	command inserts contents of ||| insert	count=1
arg	is element ||| element	count=1
function	current [function_2] ||| [function_2] [function_1]	count=10
arg	event after ||| after	count=1
arg	function defines the function ||| docstring interactive	count=1
function	and process ||| list	count=1
function	process named ||| get process	count=1
function	height in pixels of ||| height	count=2
function	string or a ||| or	count=1
function	have not ||| auto save list file	count=1
arg	format-string [arg] ||| [arg]	count=1
module	value of this variable ||| 27	count=2
arg	regexp ||| regexp s &optional	count=1
function	reads your ||| file	count=1
function	display-buffer ||| pop up	count=2
module	[module_1] buffer ||| [module_1] [module_2]	count=1
function	depth allowed in calls ||| depth	count=1
function	[function_1] an indirect ||| [function_2] [function_1]	count=2
arg	marker ||| marker	count=1
function	shell ||| shell quote	count=1
function_arg	to each [arg_2] ||| [arg_2] [function_1]	count=2
module	network connection ||| 36	count=1
function	visible on the ||| pos visible in	count=1
function	(car car ||| caar	count=1
module	debugger ||| 17 1.3	count=2
function	coding systems that ||| find coding systems	count=5
arg	bindat-raw ||| bindat-raw bindat-idx	count=1
function	emacs ||| save	count=1
function	acl for the ||| file acl	count=1
function	query ||| query on exit flag	count=1
function	prefix adding ||| auto save list file prefix	count=1
function	a display ||| display	count=1
function	variable is non-nil that ||| up	count=1
module	none ||| 37 21.3	count=1
module	measured in ||| 28 3.4	count=2
function	have not already ||| save list file	count=1
arg	for key with value ||| map key	count=1
module	variable is ||| 27 5	count=1
arg	locks [arg] ||| [arg]	count=2
module	your init ||| 25 2	count=1
function	a [function] ||| [function]	count=1
function_arg	truename of [arg_2] ||| [arg_2] [function_1]	count=1
function	mark-ring ||| mark ring	count=1
module	is an alist of ||| 4	count=1
arg	alist for ||| alist	count=1
module	minibuffer a ||| 19	count=1
rep	[module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=257
function	appends the contents ||| append	count=1
arg	and providing completion ||| default require-match initial predicate	count=1
function_arg	[function_1] [arg_2] ||| [function_1] population [arg_2]	count=4
arg	match-form and executes body ||| match-form &rest body	count=1
function	[function_1] mode or ||| [function_1] [function_2]	count=1
function	the user at the ||| user	count=1
function	display buffers ||| up	count=1
arg	file filename when the ||| filename	count=1
function	can be loaded and ||| available	count=1
module	if you have not ||| 2	count=1
arg	[arg] the ||| from to [arg]	count=4
arg	function ||| window	count=1
function	after point ||| fill	count=1
function	[function_1] help ||| [function_1] [function_2]	count=3
function_arg	[function_1] [arg_2] the ||| [function_1] from to [arg_2]	count=8
module	value and returns that ||| 7	count=1
module	position of the ||| 31 17.1	count=1
module	hours ||| 38 7	count=2
function	this function ||| current	count=1
module	[module] may be ||| [module]	count=3
function	system which ||| system change	count=1
function	of the startup ||| inhibit startup	count=1
function	expands the ||| expand	count=1
rep	return a [function_arg_2] ||| [module_1] [function_arg_2]	count=4
module	greater than 0 ||| 29 1	count=1
arg	start to end according ||| start end	count=1
function	argument is a special ||| special	count=1
arg	font-spec for ||| font-spec frame add	count=1
function	a string or symbol ||| string	count=1
arg	parameter to value ||| window parameter	count=1
function	[function_1] year ||| [function_1] [function_2]	count=1
function	list of attributes of ||| attributes	count=1
function	index ||| index	count=1
function	as dedicated to its ||| dedicated p	count=1
arg	fn this ||| fn	count=1
function	to the left ||| scroll left	count=1
function	it non-nil based ||| save list file	count=1
module	this function returns a ||| 2	count=1
function	of justification to use ||| justification	count=1
function	returns the truename of ||| file truename	count=1
function	in ||| ip to	count=1
arg	if n is negative ||| n wrap display-message	count=1
function	text [function] the text ||| remove text [function]	count=1
function	systems that ||| systems	count=3
function	than 0 ||| end	count=1
function	non-nil display-buffer ||| up	count=1
module	falsehood ||| 3	count=1
arg	sequence ||| sequence	count=4
function	function returns the character ||| glyph char	count=1
arg	filename as a list ||| filename	count=1
arg	classes mentioned in syntaxes ||| syntaxes	count=1
function	the property list of ||| charset plist	count=1
module	is non-nil display-buffer ||| 14	count=1
arg	x [arg_2] ||| set mouse pixel position [arg_1] [arg_2]	count=3
function	standard category [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] the fieldth ||| [function_2] [function_1]	count=1
function	button ||| forward button	count=1
function_arg	[function_1] lists ||| [arg_2] [function_1]	count=1
function	the window selected ||| frame selected	count=1
arg	object if no ||| object	count=1
arg	arguments rather than ||| arguments	count=1
function	used by eval-expression and ||| eval expression print	count=1
function	returns the ending position ||| end	count=1
arg	contents of string ||| string	count=1
arg	seconds seconds without ||| seconds millisec	count=1
function	[function_1] previous ||| [function_2] [function_1]	count=3
module	to make a new ||| 14	count=1
arg	completely replaces the text ||| props	count=1
arg	buffer and ||| buffer	count=1
function	parent of ||| table parent	count=1
module	buffer associated ||| 9.1	count=1
arg	end ||| end delete	count=1
function	modifiers ||| event modifiers	count=1
function	id ||| save list file	count=1
module	a string or ||| 21 1	count=1
function	frame configuration ||| current frame configuration	count=2
function_arg	permissions [arg_2] ||| [function_1] [arg_2]	count=3
arg	user by providing completion ||| predicate require-match initial history default inherit-input-method	count=1
function	least recently-used window ||| buffer pop up window	count=1
function	function replaces all occurrences ||| subst	count=1
module	image in [module] of ||| 37 [module]	count=1
function	is ||| buffer end	count=1
function	reads your init ||| save	count=1
function	form [function_2] ||| [function_1] [function_2]	count=1
function	specify the dimensions of ||| dimensions	count=1
function	the longest common substring ||| try completion	count=1
arg	height lines ||| height	count=1
function	include [function] ||| [function]	count=1
arg	command named fname that ||| fname	count=1
function	window as an argument ||| get window	count=1
function_arg	a serial port ||| serial term port	count=1
arg	to buffer and ||| buffer	count=1
arg	abbrev-table [arg_2] ||| [arg_2] [arg_1]	count=2
arg	in list satisfying ||| pred list	count=2
module	this function returns ||| 25	count=1
function	on this ||| list	count=1
module	file file converting it ||| 24 12.2	count=1
function	attributes of remote ||| remote file	count=1
module	existing window ||| 27	count=1
function	function sets the ||| set terminal parameter	count=1
module	set it ||| 2	count=1
function	truename ||| file truename	count=1
module	cache ||| 17.11	count=1
module	keymaps ||| 21 9	count=2
module	greater than 0 point-min ||| 1	count=1
arg	with process [arg_2] ||| [arg_1] [arg_2]	count=1
function	vector containing all ||| vconcat	count=1
module	variable is non-nil ||| 5	count=1
function	file name for ||| file name	count=2
function	sets the [function_2] ||| [function_1] [function_2]	count=1
module	[module] and ||| [module]	count=1
function	specifies the initial execution ||| edebug initial	count=1
module	associated ||| 9.1	count=1
arg	to format format ||| file format	count=1
function	and the underline in ||| underline	count=1
arg	that list in listname ||| listname	count=1
module	[module] for ||| [module]	count=3
arg	object ||| props object	count=1
function	new hash ||| hash	count=1
function	a string in the ||| bindat ip to string	count=1
module	value of this ||| 27 14	count=2
function	to ask [function_2] ||| [function_2] [function_1]	count=1
arg	subsequent attempt ||| variable	count=1
arg	the value of prev-buffers ||| prev-buffers	count=1
function	next sibling of the ||| next sibling	count=1
arg	named function so as ||| function	count=1
module	not ||| 25 2	count=2
arg	[arg] of the ||| var [arg]	count=1
function	left or to ||| left	count=1
function	returns the rehash ||| rehash	count=1
function_arg	[function_1] [arg_2] ||| [function_1] object [arg_2]	count=2
function	returns the truename ||| file truename	count=1
arg	function defines [arg_2] ||| [arg_2] definitions [arg_1]	count=4
function	combination limit for ||| window combination limit	count=2
arg	n is ||| n	count=2
function	split s up to ||| s split up to	count=1
module	make ||| 27	count=1
arg	file ||| filename	count=1
function	string or a buffer ||| message or buffer	count=1
function	to the beginning ||| beginning	count=1
function	set it ||| file	count=1
function	existing window to make ||| up	count=1
module	that the ||| 29 4	count=1
arg	to process process ||| process	count=1
module	it non-nil ||| 25 2	count=1
function	the site-customization [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] that key ||| [function_1] string [arg_2]	count=3
function	if variable ||| if	count=1
function	next button ||| next button	count=1
function	[function_1] area recorded ||| [function_1] [function_2]	count=2
arg	apply fn ||| fn folder init-value	count=1
arg	list each [arg_2] ||| [arg_2] [arg_1]	count=2
function	this stores ||| plist put	count=1
function	the header line to ||| header	count=1
function	[function_1] type of ||| [function_2] [function_1]	count=4
module	[module] is available ||| [module] 10	count=1
function	message currently being displayed ||| message	count=1
function	index of ||| index	count=1
function	the query [function_2] ||| [function_2] [function_1]	count=2
function	below ||| below	count=1
function	using the minibuffer evaluates ||| eval minibuffer	count=1
function	fill [function_2] ||| [function_2] [function_1]	count=7
module	the current buffer so ||| 4	count=1
function	the window as ||| get window	count=1
function	be [function] at ||| [function]	count=1
function	[function_1] fit ||| [function_2] [function_1]	count=1
function	function filters the buffer ||| buffer	count=1
module	of the minibuffer ||| 19	count=1
function	as the coding system ||| coding system	count=2
arg	with properties props see ||| props	count=1
module	list of ||| 6.6	count=1
module	emacs recognizes as ||| 23 5	count=1
function	[function] by ||| [function] add item	count=2
function_arg	[function_1] specified by ||| [function_1] other frame buffer-or-name [arg_2]	count=2
function	this function ||| set	count=1
module	init file ||| 2	count=1
function	font ||| font	count=6
function	the tabulated ||| tabulated	count=1
arg	[arg_1] function for ||| [arg_2] charset [arg_1]	count=1
function	this event ||| event	count=1
function_arg	[function_1] that position ||| [arg_2] [function_1]	count=3
module	after emacs ||| 25 2	count=1
module	current line which is ||| 31	count=1
function_arg	[function_1] skipping over ||| [function_1] [arg_2]	count=4
function	execution [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] of the current buffer ||| [function_1] region start end [arg_2]	count=3
function	least recently-used [function_2] ||| [function_2] [function_1]	count=4
function	of remote ||| remote	count=1
function	use global abbrevs only ||| global abbrevs	count=1
module	recorded in ||| 37 9.2	count=1
function	already set ||| auto save	count=1
function	is greater than 0 ||| end	count=1
arg	to coding-system ||| coding-system nocopy	count=1
arg	is enabled or force ||| force	count=1
module	backup ||| 25 1.2	count=1
module	in ||| 29	count=1
arg	on [arg_2] ||| [arg_2] [arg_1]	count=2
module	of the ||| 13	count=1
function	auto-save-list-file-name if ||| list	count=1
function	its argument function for ||| map	count=1
arg	pos ||| pos object	count=1
function	truename of ||| truename	count=1
function	new frame in ||| frame	count=1
function	you can read it ||| file readable	count=1
function	translation [function] rather than ||| [function]	count=1
function	values for print-length ||| print length	count=1
function	sibling of the window ||| sibling	count=2
function	of the buffer or ||| of	count=1
arg	this function makes buffer-or-name ||| buffer-or-name	count=1
function	bottom edge ||| trailing edge	count=1
arg	to key much as ||| key	count=1
arg	tree and make a ||| init-value tree	count=1
arg	line count screen lines ||| count window	count=1
function	with only the members ||| difference	count=1
module	converting it according to ||| 12.2	count=1
function	by making new ||| up	count=1
function	function reads a ||| read	count=5
function	list of image ||| image	count=1
function	raises the frame that ||| raise	count=1
function	[function] closes the ||| [function] close	count=1
arg	from beg to ||| beg	count=4
function	s to uppercamelcase ||| s upper camel case	count=1
function_arg	[function_1] fun ||| [arg_2] [function_1]	count=2
function	to the left or ||| scroll left	count=1
module	the current ||| 31 17.1	count=1
function	non-nil based on ||| auto save list file	count=1
module	the entire ||| 29	count=1
module	scans ||| 31 19.3	count=2
function	kill [function_2] ||| [function_2] [function_1]	count=1
arg	name a symbol ||| name properties	count=1
function	approximately the same share ||| balance windows	count=1
function	base ||| base	count=1
module	so ||| 4	count=1
module	are ||| 29 4	count=1
arg	function defines ||| docstring requirements	count=1
function	current insertion type of ||| insertion type	count=1
arg	warps the mouse like [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
module	which is the ||| 31	count=1
module	[module_1] is non-nil ||| [module_1] [module_2]	count=1
function	symbolic [function_2] ||| [function_1] [function_2]	count=2
function_arg	number [arg_2] ||| [arg_2] [function_1]	count=3
function	the dired command ||| dired	count=1
function_arg	the first [arg_2] ||| [function_1] [arg_2]	count=1
arg	of object [arg_2] ||| [arg_2] [arg_1]	count=1
function	init file it initializes ||| auto	count=1
module	function returns the current ||| 19 12	count=1
function	converts a symbolic file ||| file modes symbolic	count=1
module	so that the entire ||| 4	count=1
arg	operation [arg] ||| [arg]	count=1
module	this function returns ||| 5 3	count=5
arg	events in sequence ||| sequence prefix	count=1
function_arg	previous button [arg_2] ||| [function_1] n [arg_2]	count=1
function	position ||| event	count=1
arg	x y ||| x y	count=2
arg	tabs around point ||| backward-only	count=1
function	current global map ||| global	count=1
rep	inserts [function_arg_2] ||| [module_1] [function_arg_2]	count=8
function_arg	[function_1] to newname ||| [function_1] [arg_2]	count=3
function	property of ||| charset property	count=1
arg	in string ||| string &optional subexp-depth	count=1
function	dimensions of graphical displays ||| dimensions alist	count=1
function	an [function] before ||| [function] change	count=1
arg	sends a ||| process	count=1
function	and the rest ||| s capitalize	count=1
module	variable ||| 27	count=2
function	the terminal [function] that process ||| process tty [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] p [arg_2]	count=6
arg	alter lines that start ||| start	count=1
module	init ||| 2	count=1
function	[function_1] margin value ||| [function_2] [function_1]	count=1
function	your init file it ||| auto save	count=1
function	number of screen ||| count screen	count=1
function	nil switch-to-buffer displays the ||| switch to buffer preserve	count=1
arg	of tree and ||| init-value tree	count=1
module	character ||| 31 17.1	count=2
function_arg	[function_1] the display ||| [arg_2] [function_1]	count=2
function	split ||| s split	count=1
module	based ||| 2	count=1
function	message currently being ||| message	count=1
module	constant into a key ||| 21	count=1
function	returns the end of ||| end	count=1
function	abbrev ||| abbrev	count=7
function	function destroy [function_2] ||| [function_1] [function_2]	count=3
function	returns a new vector ||| vconcat	count=1
module	this is the basic ||| 9 5	count=1
module	returns ||| 3	count=11
function	the real ||| real	count=2
function	is greater than ||| buffer	count=1
rep	return [function_arg_2] ||| [module_1] [function_arg_2]	count=20
arg	user by providing completion ||| predicate require-match initial	count=1
module	based ||| 25 2	count=2
function	file it uploads ||| upload buffer	count=1
arg	true if [arg_1] [arg_2] ||| items? [arg_1] [arg_2]	count=3
module	file it ||| 25 2	count=1
function	as the coding ||| terminal coding	count=1
module	so that the ||| 29 4	count=1
module	current ||| 21 9	count=1
arg	x2 to [arg_2] ||| [arg_2] [arg_1]	count=2
function	makes a symbolic link ||| make symbolic link	count=1
function	non-nil ||| auto save list	count=1
arg	x as the last ||| x	count=1
function	to make [function_2] ||| [function_2] [function_1]	count=2
function	top entry in ||| window top line	count=1
function	prefix adding the ||| auto save list file prefix	count=1
function	shell syntax ||| shell quote	count=1
function	filename [function] ||| [function] file read only	count=3
arg	from the function ||| function	count=1
function	dimensions of ||| display mm dimensions	count=1
function_arg	parameters [arg_2] ||| [function_1] [arg_2]	count=2
function	function ||| parameter	count=1
function	expression from ||| from	count=1
function	terminal ||| terminal parameter	count=1
function	many seconds ||| seconds	count=1
arg	from from ||| from	count=2
arg	[arg_1] to spec ||| [arg_2] [arg_1]	count=6
arg	to filename assuming the ||| filename	count=1
function	update [function] line ||| [function] line update	count=1
arg	[arg_1] [arg_2] ||| [arg_1] form [arg_2]	count=21
arg	object ||| prop object limit	count=1
function	specifies the directory name ||| directory	count=2
function_arg	font matching [arg_2] ||| [function_1] name [arg_2]	count=1
arg	[arg_1] docstring and ||| [arg_1] [arg_2]	count=2
function	scroll ||| scroll	count=4
function	standard category table ||| standard category table	count=3
module	definition ||| 21 11	count=1
function	display buffers by making ||| pop	count=1
function	minibuffer raises the ||| raise	count=1
function	function sets the binding ||| set	count=1
function	function returns the sentinel ||| sentinel	count=1
function	after ||| auto save list	count=1
function	[function] is called ||| [function] auto hide	count=1
module	calls its argument function ||| 6	count=2
function	function inserts the ||| insert file	count=1
function	[function_1] margin indentation ||| [function_2] [function_1]	count=2
function	all adjacent whitespace characters ||| collapse whitespace	count=1
arg	by providing completion ||| predicate require-match initial	count=1
function	frame’s frame-char-height and frame-char-width ||| frame resize pixelwise	count=1
function	this function deletes all ||| delete horizontal space	count=1
function	of screen lines in ||| screen lines	count=1
module	of the current ||| 31	count=1
function	[function_1] [function_2] of the ||| [function_2] [function_1]	count=3
arg	separation ||| separation	count=1
arg	attribute of face ||| face	count=2
function	that ||| map	count=1
function	the current global ||| current global	count=2
module	this function ||| 19	count=1
arg	completely replaces the ||| props	count=1
arg	current-face and also marks ||| current-face when	count=1
function	as the x ||| x	count=1
arg	prompt ||| prompt confirm	count=1
function_arg	removes [arg_2] ||| [arg_2] [function_1]	count=4
function	newer [function_2] ||| [function_1] [function_2]	count=2
module	this function ||| 21 1	count=1
module	keymaps for ||| 21	count=1
arg	pushes a copy ||| nomsg activate	count=1
arg	from pos ||| pos prop	count=1
function	nil switch-to-buffer ||| buffer preserve	count=1
arg	reading a single-character ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
module	is greater than ||| 1	count=1
function	non-nil based ||| save	count=1
function	[function_1] [function_2] ||| [function_2] [function_1] predicate predicate	count=16
module	a ||| 6 1	count=1
arg	of object [arg_2] ||| [arg_1] [arg_2]	count=1
arg	documentation docstring for ||| docstring	count=1
function	display-buffer may display buffers ||| up	count=1
function	the results of ||| results	count=1
function	buffer ||| start	count=1
function	greater than 0 ||| end	count=1
function	least recently-used window typically ||| display buffer pop up window	count=1
function	this function deletes ||| delete	count=2
function	of screen lines in ||| count screen lines	count=1
module	this function tests ||| 3	count=1
function	computes the least fixpoint ||| fixfn	count=1
function	initializes auto-save-list-file-name if you ||| auto save list file	count=1
function	it non-nil ||| save	count=1
function	the proper [function_2] ||| [function_1] [function_2]	count=3
function	width in columns ||| width	count=2
arg	equal to ||| elem	count=1
function	returns [function_2] ||| [function_2] [function_1]	count=1
function	upper case ||| s upcase	count=1
function	name and process ||| auto	count=1
arg	from index from to ||| from	count=1
module	position ||| 7.13	count=1
function	[function_1] the text ||| [function_2] pixel [function_1]	count=3
arg	count is negative bringing ||| count	count=1
function	function stores ||| code	count=1
function	the key sequence ||| key sequence	count=1
module	vector containing ||| 6	count=1
arg	window ||| window horizontal	count=1
function	this function ||| map char table	count=1
function	seconds [function_2] ||| [function_2] [function_1]	count=1
function	the current global keymap ||| current global map	count=1
arg	as a face ||| face	count=1
function	justification style ||| justification	count=1
function_arg	[function_1] pred ||| [function_1] [arg_2] list	count=4
module	is non-nil ||| 27	count=2
arg	[arg_1] prefix ||| [arg_1] [arg_2]	count=2
function	new ||| pop up	count=3
arg	at end of s ||| s	count=1
function	your ||| auto save	count=1
arg	value of x1 and ||| x1	count=1
function	to make a new ||| pop up	count=2
function	is on a link ||| mouse on link	count=1
module	it initializes ||| 25	count=1
arg	this command selects a ||| wildcards	count=1
function_arg	directory [arg_2] ||| [arg_2] [function_1]	count=4
function	as dedicated to ||| dedicated	count=1
arg	regexp in ||| regexp s	count=1
arg	start and [arg] in the ||| [arg]	count=1
function	the minibuffer ||| minibuffer	count=7
function	emacs was waiting ||| waiting	count=1
function	frame’s window ||| display buffer pop up	count=1
function	no change is ||| char property change	count=2
function	name prompting ||| name	count=1
module	return a sequence of ||| dash	count=1
module	events which ||| 20 8.6	count=2
function	a change group for ||| change group	count=1
function	number ||| count	count=3
module	define the same abbrevs ||| 35	count=1
function	etc ||| format seconds	count=2
arg	function returns the first ||| frame	count=1
function	tries to restore the ||| restore	count=1
function_arg	the category [arg_2] ||| [function_1] char docstring [arg_2]	count=1
function	fieldth ||| numeric fields	count=1
function	defines a [function_2] ||| [function_2] [function_1]	count=3
function	debugged ||| edebug	count=1
arg	forms insert [arg] ||| [arg] &optional form &rest	count=3
arg	[arg_1] negative ||| [arg_1] wrap [arg_2]	count=1
arg	function selects frame raises ||| frame norecord	count=1
module	point ||| 5	count=1
function	stores value as ||| code	count=1
function	the property list of ||| plist	count=2
module	non-nil that ||| 27 14	count=1
function	the definition ||| lookup	count=1
function_arg	the character [arg_2] ||| [function_1] [arg_2]	count=1
function	system to use for ||| system	count=2
function	for void ||| void	count=1
function	margins ||| margins	count=1
function	the display ||| window display table	count=1
arg	name a string or ||| name	count=1
function	of ||| vconcat	count=1
function	variable to a function ||| function	count=1
arg	command ||| command position	count=1
module	this function returns ||| 13	count=1
module	allocated ||| e	count=2
function	command replaces the buffer ||| revert buffer	count=1
function_arg	image [arg_2] ||| [arg_2] [function_1]	count=1
arg	finds and opens a ||| filename missing-ok nomessage nosuffix must-suffix	count=1
function	previous sibling of the ||| prev sibling	count=1
function	[function] face ||| [function]	count=3
function	file it initializes auto-save-list-file-name ||| list	count=1
function_arg	[function_1] [arg_2] ||| [function_1] regexp [arg_2]	count=1
function	to use global abbrevs ||| global abbrevs	count=1
arg	the nth bit ||| ints-or-markers	count=2
module	current line which ||| 31 17.1	count=1
function	on this ||| auto save list file	count=1
function_arg	node encapsulating [arg_2] ||| [arg_2] [function_1]	count=9
function	the value of ||| ring	count=1
function	file it ||| auto save list file	count=1
function	returns the proper ||| current	count=1
function	window ||| window buffer	count=1
function	returns the acl for ||| file acl	count=1
module	of the screen ||| 4	count=1
module	macro ||| 13	count=1
function_arg	[function_1] data ||| [function_1] before ewoc node [arg_2]	count=4
arg	bind it ||| &rest else	count=1
function	the next [function_2] ||| [function_1] [function_2]	count=8
function	of the current ||| justify current	count=1
arg	[arg] using equal ||| [arg]	count=1
function	[function_1] bar ||| [function_1] [function_2]	count=1
function	dimensions of graphical ||| display mm dimensions alist	count=1
function	have not already ||| auto save list file	count=1
function	string ||| format	count=1
function	file permissions ||| file modes	count=2
function	you have ||| save	count=1
arg	function converts the count ||| count	count=1
arg	through the ||| &rest more	count=1
function_arg	members [arg_2] ||| [function_1] [arg_2]	count=1
function	backing ||| display backing	count=1
function	and height of the ||| height	count=1
arg	function returns arg ||| arg	count=1
function	wrap the words ||| wrap	count=1
function	dimensions of graphical ||| mm dimensions alist	count=1
function	unary ||| orfn	count=1
function	a non-nil value ||| p	count=1
arg	visiting the file filename ||| filename	count=1
function	fit by ||| fit frame to buffer	count=1
arg	to the named ||| props	count=1
function	auto-save-list-file-name ||| file	count=1
arg	[arg_1] to switches ||| [arg_2] [arg_1]	count=2
arg	bindat-raw according ||| bindat-raw	count=1
function	maximum size of ||| max	count=1
function	split s ||| s split up	count=1
module	new files created ||| 24	count=1
function	the insertion ||| insertion type	count=1
function_arg	row [arg_2] ||| [function_1] [arg_2]	count=1
function	this function returns window’s ||| parameter	count=1
module	line ||| 31	count=2
module	checks the [module] of ||| [module]	count=1
function	is ||| pop up	count=3
arg	index from to ||| from &optional	count=1
module	may ||| 14	count=1
arg	start and [arg_2] ||| [arg_1] [arg_2]	count=15
module	character sets in the ||| 32 10.3	count=1
module	this function returns a ||| 1	count=1
arg	performs [arg] ||| [arg] fixedcase literal	count=1
function	substrings ||| substrings	count=1
rep	[module_1] [function_arg_2] ||| [module_1] window [function_arg_2]	count=1
arg	the params arguments ||| params	count=1
module	of time emacs ||| 38	count=1
module	backward ||| 31 6	count=1
function	time ||| time	count=2
arg	to end ||| end buffer	count=1
arg	ewoc-refresh except [arg] in ewoc ||| ewoc [arg]	count=1
arg	to pattern ||| pattern	count=1
function	access and modification times ||| file times	count=1
function	split ||| split up to	count=1
function	frame’s current [function_2] ||| [function_1] [function_2]	count=2
function	of screen lines ||| count screen lines	count=2
arg	buffer’s mark to position ||| position	count=1
function	creates and ||| make	count=3
function	an abbrev ||| abbrev	count=2
arg	to pattern ||| pattern frame	count=1
module	key ||| 1	count=1
arg	alist has ||| buffer alist	count=1
function	the selinux [function_2] ||| [function_1] [function_2]	count=4
module	this ||| 30 5	count=1
module	window to ||| 14	count=1
arg	parameter to [arg_2] ||| [arg_1] [arg_2]	count=1
function	current ||| justify current	count=1
arg	named ||| human	count=1
function	right margins of window ||| margins	count=1
function	[function_1] area ||| [function_1] [function_2]	count=5
function	current insertion ||| insertion	count=1
function	displaying ||| up windows	count=1
function	a minibuffer window ||| window minibuffer	count=1
function	return the next button ||| next button	count=1
function	buffer’s case [function_2] ||| [function_2] [function_1]	count=1
function	returns the key ||| read key	count=1
arg	the width of ||| width	count=1
function	is allowed to split ||| up	count=1
arg	or byte array bindat-raw ||| bindat-raw	count=1
arg	acts on ||| appendp object	count=1
module	mark ||| 30 7	count=1
function	replaces all occurrences of ||| subst	count=1
function	the next ||| next	count=4
function	region ||| fill region	count=2
module	activations of ||| 13	count=1
function	a change ||| change	count=1
function	a given family ||| family alternatives	count=2
arg	defines ||| version docstring requirements	count=1
function	copy of the ||| overlay properties	count=1
arg	old with [arg_2] ||| [arg_1] [arg_2]	count=3
function	with the character ||| char in	count=1
function	make backup [function_2] ||| [function_2] [function_1]	count=1
function	use global abbrevs only ||| only global abbrevs	count=1
arg	between start and ||| start	count=3
function	sets the ||| ewoc set	count=1
function_arg	this function returns the [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	for ||| up	count=1
module	whether files ||| 24	count=1
function	that if ||| p	count=1
function	name ||| save list	count=1
module	this function ||| 21	count=1
function	a copy of ||| copy	count=1
function	this sets ||| set face underline	count=1
function	of directories for ||| path	count=1
function	live window and ||| window live	count=2
module	this [module] ||| [module]	count=7
function	function sets the buffer ||| set process	count=1
module	this ||| 6 6	count=3
arg	byte array bindat-raw according ||| bindat-raw bindat-idx	count=1
function	returns the character of ||| glyph char	count=1
module	contents are ||| 29 4	count=1
function	new node encapsulating ||| enter	count=2
module	t if ||| 31	count=2
function	[function_1] message ||| [function_1] [function_2]	count=6
function	header ||| header	count=2
function	function sets [function_2] ||| [function_2] [function_1]	count=17
function	creates and ||| make overlay	count=1
function	[function_1] row and ||| [function_2] [function_1]	count=3
function_arg	-drop-while [arg_2] ||| [function_1] [arg_2] list	count=1
function	abbrev [function] containing ||| [function]	count=1
arg	terminal output from terminal ||| terminal	count=1
module	and nil otherwise ||| 7	count=1
module	this ||| 36 8	count=2
function	to make backup ||| make backup	count=2
function	previous older [function_2] ||| [function_1] [function_2]	count=6
arg	to binding ||| binding	count=1
arg	list ||| count list	count=1
function	a new ||| pop	count=1
arg	sequence the ||| sequence separator	count=1
function	in the usual dotted ||| to	count=1
module	of ||| 12 6	count=1
module	nonblank character ||| 17.1	count=1
function	startup [function_2] ||| [function_2] [function_1]	count=4
arg	fname that ||| fname	count=1
function	erases the editable contents ||| delete minibuffer contents	count=1
rep	next [function_arg_2] ||| [module_1] next [function_arg_2]	count=3
function_arg	[function_1] value in ||| [function_1] char-table range [arg_2]	count=1
module	the [module_2] ||| [module_1] [module_2]	count=3
function	no such [function] it ||| [function] p	count=1
arg	a string of years ||| format-string	count=1
function	expands the wildcard ||| expand wildcards	count=1
function	from the [function_2] ||| [function_2] [function_1]	count=2
function	symbolic file ||| symbolic	count=1
function	this sets ||| set face	count=4
module	t if ||| 31 1	count=2
module	set it non-nil based ||| 25	count=1
module	the horizontal position of ||| 17.1	count=1
function	that specifies the coding ||| coding	count=1
function	this ||| map char	count=1
function	its argument function ||| char	count=1
function_arg	-remove [arg_2] ||| [function_1] [arg_2]	count=1
module	mark-ring ||| 30	count=1
function	dimensions of graphical ||| display mm dimensions	count=1
function	input ||| input	count=3
function	syntax class ||| skip syntax forward	count=1
function	set it non-nil based ||| auto save	count=1
function	as an abbrev ||| abbrev	count=1
module	window’s value for ||| 25	count=1
function_arg	[function_1] to n ||| [function_1] separator [arg_2]	count=1
function	function returns the ||| window	count=2
module	to process ||| 36	count=1
function_arg	wrap string [arg_2] ||| [function_1] [arg_2]	count=5
function_arg	the [function_1] [arg_2] ||| [function_1] pred [arg_2]	count=3
module	is allowed to ||| 14	count=1
function	completion ||| completion	count=1
module	name and process id ||| 25	count=1
arg	prompt and ||| prompt default	count=1
function	returns the real gid ||| group real gid	count=1
function	remapping ||| face remap	count=1
function_arg	found at [arg_2] ||| [function_1] ring [arg_2]	count=1
function	the face ||| face attribute	count=1
function	is non-nil ||| pop up	count=2
module	constant into a key ||| 21 1	count=1
arg	flag is ||| window flag	count=1
function	mouse to ||| set mouse	count=1
arg	[arg_1] it ||| [arg_1] [arg_2]	count=2
function	group for ||| group	count=1
module	this function defines ||| 22 5	count=1
arg	for regular expression matching ||| regexp	count=1
function_arg	indexed by [arg_2] ||| [arg_2] [function_1]	count=1
function	sequence as [function_2] ||| [function_2] [function_1]	count=3
function	this function kills ||| kill	count=2
arg	frame raises ||| frame norecord	count=1
function	[function_1] the tool ||| [function_2] bar [function_1]	count=2
function	a buffer without disrupting ||| bidi string mark left to right	count=1
arg	in table ||| table	count=2
function_arg	[function_1] [arg_2] ||| [function_1] abbrev [arg_2]	count=10
module	the current line ||| 31	count=1
function	appends the contents of ||| append to	count=1
arg	and ||| end	count=1
function	sets the debug-on-exit ||| backtrace debug	count=1
arg	[arg_1] stream ||| [arg_1] [arg_2]	count=3
arg	the propname ||| propname	count=1
module	if ||| 14	count=2
module	see basic windows and ||| 27	count=1
module	and the ||| 30 7	count=1
module	of ||| 28 4	count=1
function	right margins of window ||| window margins	count=1
function	previous older history ||| previous history	count=2
arg	to buffer ||| buffer	count=2
arg	glyph code glyph ||| glyph	count=1
module	this function ||| 5	count=7
module	make a ||| 27 14	count=1
function	returns the standard ||| standard	count=2
arg	command fills each ||| justify citation-regexp	count=1
function	than 0 ||| buffer	count=1
arg	separate arguments rather ||| arguments	count=1
function	visited ||| visited	count=1
function	key sequence ||| key sequence	count=1
function	[function_1] description ||| [function_2] [function_1]	count=1
arg	message and type as ||| message level	count=1
function	function returns the file ||| save file	count=1
arg	font [arg] in ||| font-spec [arg]	count=1
function	rounding downward ||| floor	count=1
function	return the window ||| posn	count=1
function_arg	[function_1] n items ||| [arg_2] [function_1]	count=1
arg	buffer in [arg_2] ||| [arg_1] [arg_2]	count=1
module	of a line ||| 1	count=1
function_arg	text conversion [arg_2] ||| [function_1] eol-coding [arg_2]	count=1
arg	from pos ||| pos object	count=1
module	characters sent by emacs ||| 38	count=1
function	this ||| process	count=1
function_arg	parent [arg_2] ||| [function_1] [arg_2]	count=1
function	function sets [function_2] ||| [function_1] file [function_2]	count=1
function	the rehash ||| hash table rehash	count=1
function	debug-on-exit flag of ||| backtrace debug	count=1
function	in the ||| in	count=1
arg	function locks [arg] ||| [arg]	count=2
function	combination [function_2] ||| [function_1] [function_2]	count=1
function	is non-nil display-buffer is ||| up	count=1
function_arg	category [arg_2] ||| [arg_2] [function_1]	count=3
arg	and returns [arg_2] ||| [arg_1] [arg_2]	count=1
function	then [function_2] ||| [function_2] [function_1]	count=4
module	a string ||| 21 1	count=2
function	function returns ||| end	count=1
function	results ||| mapreduce	count=1
function_arg	the reverse [arg_2] ||| [arg_2] [function_1]	count=1
function	[function] how to ||| ask [function] about supersession threat	count=1
function	given set of characters ||| skip chars	count=1
arg	warps the mouse like [arg_1] [arg_2] units of pixels rather ||| [arg_1] [arg_2]	count=1
arg	of tree and make ||| init-value tree	count=1
function	and process id ||| list file	count=1
module	to ||| 27 14	count=4
function	this stores value ||| plist put	count=1
arg	font [arg] in the ||| font-spec [arg]	count=1
module	this function ||| 1	count=6
function_arg	the symbol new-alias ||| defvaralias new-alias	count=1
arg	new ||| new	count=2
function	shell syntax an argument ||| shell	count=1
function	lines ||| lines	count=5
function	[function_1] list ||| [function_1] [function_2]	count=3
module	a nonnegative integer ||| 13	count=1
function	the ||| file	count=1
function	display buffers ||| pop up	count=1
function	non-nil ||| table	count=1
arg	from position from ||| from	count=1
arg	arguments to fn ||| fn &rest	count=1
arg	[arg_1] end according ||| [arg_2] [arg_1]	count=3
module	all expressions debugged ||| 17	count=1
arg	[arg_1] pushes ||| [arg_2] [arg_1]	count=3
function	[function_1] display ||| [function_2] [function_1]	count=1
module	this returns ||| 20 7.13	count=1
arg	directory ||| prompt directory	count=1
function	or a ||| message or	count=1
arg	lists together group the ||| lists	count=1
arg	value2 ||| value2	count=1
function	emacs-recognized extended attributes of ||| file extended attributes	count=1
module	this ||| 10 3	count=2
function	returns [function_2] ||| [function_1] [function_2] pos string	count=1
function	function ||| function get	count=1
function	using imagemagick ||| imagemagick	count=1
function	the character ||| char in	count=1
arg	bold-p is nil and ||| bold-p frame	count=1
function_arg	[function_1] propname for ||| [function_1] char [arg_2]	count=2
arg	[arg_1] value ||| [arg_2] [arg_1]	count=3
function	window area recorded ||| posn area	count=1
function	returns the file ||| make auto save file	count=1
arg	as the message and ||| message level	count=1
function_arg	the command [arg_2] ||| [function_1] [arg_2]	count=2
arg	function returns a ||| frame	count=1
function	files by ||| by	count=1
function	this function expands ||| file expand	count=1
module	car is ||| 5	count=1
function	the text ||| change text	count=1
arg	to non-nil bind it ||| &rest	count=1
function	function reads a string ||| read string	count=1
function	of screen ||| count screen	count=1
function	the startup [function_2] ||| [function_2] [function_1]	count=4
arg	filename but ||| filename wildcards	count=2
module	auto-save-list-file-name if you have ||| 25	count=1
function	current local keymap or ||| local key	count=1
arg	the width of frame ||| frame width pretend pixelwise	count=1
arg	filename as ||| filename	count=1
module	and returns that ||| 7	count=1
function_arg	conversion of [arg_2] ||| [function_1] eol-coding [arg_2]	count=1
arg	[arg_1] function ||| [arg_2] charset [arg_1]	count=1
function	to answer ||| y or n	count=1
module	is t whenever a [module_1] [module_2] ||| [module_1] [module_2]	count=2
arg	according to format format ||| file format beg end	count=1
function	the insertion type of ||| insertion	count=1
module	function returns window’s ||| 25	count=1
function_arg	[function_1] old-pos ||| [arg_2] [function_1]	count=3
module	position of ||| 31	count=1
arg	newname ||| newname	count=3
function	of this ||| pop	count=2
function	displays a message ||| message	count=1
arg	the items in list ||| list	count=5
function	progress of ||| progress	count=1
function	at [function_2] ||| [function_1] [function_2]	count=3
function	affects the behavior of ||| words include escapes	count=1
module	than 0 point-min ||| 29 1	count=1
function	buffer ||| buffer substring	count=1
arg	to end according ||| end	count=1
function	for each element ||| char	count=1
module	measured in lines ||| 28 3.4	count=1
module	returns nil ||| 6	count=1
function_arg	resource value ||| get resource attribute	count=1
module	key ||| 21 1	count=2
function	argument ||| table	count=1
function	the current depth of ||| depth	count=1
arg	non-nil [arg] one ||| [arg]	count=1
module	none ||| 21.3	count=1
function	of the body of ||| body	count=1
module	sentence ||| 31 11	count=1
function_arg	the font [arg_2] ||| [arg_2] [function_1]	count=5
module	if the value ||| 27	count=2
arg	obarray ||| name obarray	count=1
function_arg	-drop-while [arg_2] ||| [arg_2] [function_1]	count=1
function	non-nil value ||| table	count=1
arg	[arg_1] value ||| [arg_1] [arg_2]	count=3
function	the subtype symbol of ||| char table subtype	count=1
rep	contain [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	your init file it ||| list	count=1
module	returns t if point ||| 31 1	count=2
function	if ||| save	count=1
function_arg	a resource value ||| get resource attribute	count=1
function	[function_1] indents ||| [function_2] [function_1]	count=4
module	this function reports the ||| 5	count=1
module	existing files in the ||| 24 6.1	count=1
module	for emacs ||| 38	count=1
module	whose cdr ||| 5 5	count=1
function	is used to ask ||| ask	count=1
module	as [module] properties ||| [module] 19.3	count=1
module	function returns the ||| 19 13	count=1
arg	[arg_1] i ||| [arg_2] [arg_1]	count=1
arg	the newest element ||| ring	count=1
arg	of directories given by ||| path	count=1
function	the parent of ||| table parent	count=1
arg	bindat-raw [arg_2] ||| [arg_2] [arg_1]	count=2
arg	single-character answer in the ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
arg	:underline attribute of face ||| face	count=1
function	means display-buffer may display ||| up	count=1
arg	returns number ||| number	count=3
function	a help command ||| make help	count=1
function	previous buffers to the ||| prev buffers	count=1
arg	[arg_1] [arg_2] holds ||| 19 6.1 completion boundaries [arg_2] [arg_1]	count=6
function	controls whether ||| enable	count=1
function	string of ||| seconds	count=1
arg	defines ||| name version docstring requirements	count=1
module	lisp programs and ||| 30 7	count=1
function	alist of attributes ||| attributes	count=2
function	[function_1] the fringe ||| [function_2] [function_1]	count=3
function	[function_1] user ||| [function_1] [function_2] about supersession threat	count=3
arg	finds ||| nosuffix	count=1
function	returns ||| parameter	count=1
module	is the horizontal ||| 17.1	count=1
arg	obsolete-face as ||| obsolete-face	count=1
function	whose syntax classes are ||| skip syntax backward	count=1
arg	[arg_1] sep ||| interpose [arg_2] [arg_1]	count=1
function_arg	[function_1] end ||| [arg_2] [function_1]	count=1
arg	synchronously ||| infile destination display	count=1
module	if you have permission [module_1] [module_2] ||| [module_1] [module_2]	count=8
module	sets ||| 37 13.5	count=1
arg	each element ||| function	count=1
function	vector ||| vconcat	count=1
function_arg	beginning or end [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	as the message ||| message	count=1
module	host ||| 2	count=1
function	and if ||| in window p	count=1
module	systems to ||| 32	count=1
function	[function_1] interface named ||| [function_2] [function_1]	count=3
function	constant into a ||| kbd	count=1
function	word ||| word search	count=2
function	to titleized ||| s titleized	count=1
arg	olddef with newdef for ||| newdef	count=1
arg	filename into the current ||| filename	count=1
arg	object rather ||| pos prop object limit	count=1
module	of the current buffer ||| 4	count=1
function	translation [function_2] ||| [function_2] [function_1]	count=3
function	reads ||| auto save	count=1
module	a string of ||| 38 7	count=1
module	and the emacs user ||| 30 7	count=1
function	an abbrev table ||| define abbrev table	count=2
rep	nondeleted [function_arg_2] ||| [module_1] get [function_arg_2]	count=1
function	editable contents of the ||| minibuffer contents	count=1
function	translation ||| translation	count=1
function	[function_1] global ||| [function_1] [function_2]	count=3
arg	skipping over a given ||| character-set limit	count=1
function	this function returns ||| window	count=3
arg	message and type as ||| message	count=1
arg	signature as the ||| signature when	count=2
function	specifies the site-customization ||| site run	count=1
function	assoc except that ||| assoc	count=1
arg	that has a ||| function	count=1
arg	list equal ||| elem list	count=2
function	end of ||| end	count=4
arg	face to inverse-video-p ||| face inverse-video-p frame	count=3
arg	[arg_1] and opens ||| [arg_2] [arg_1]	count=3
arg	function ||| where function	count=1
arg	string or vector key ||| key	count=1
arg	buffer-or-name in ||| buffer-or-name	count=3
arg	of window [arg_2] ||| [arg_2] [arg_1]	count=1
function	already set ||| auto save list	count=1
module	of ||| 6	count=10
module	if point ||| 31 1	count=2
function	the text between ||| text properties	count=1
function	reads your init ||| save list	count=1
arg	down to len ||| len	count=1
arg	that were bound to ||| oldmap	count=1
function	shell ||| shell	count=3
function	lsh ||| lsh	count=1
arg	number number on ||| number	count=1
arg	command adjusts ||| max-height min-height max-width min-width	count=2
arg	eol-coding and the ||| eol-coding	count=1
function	reads your init ||| list	count=1
function	xlfd ||| font xlfd	count=1
module	be allocated ||| e	count=1
module	of ||| 29 4	count=1
function	generic mode ||| generic	count=1
function	this function ||| not	count=1
function_arg	[function_1] [arg_2] ||| 12 10.1 [function_1] [arg_2]	count=2
function	function ||| function	count=2
function	marks window as dedicated ||| set window dedicated	count=1
arg	eval-region but the arguments ||| buffer-or-name stream filename	count=1
function	query flag of ||| process query on exit flag	count=2
arg	markers or integers that ||| integers	count=1
function	of attributes of ||| attributes	count=2
arg	of alist ||| alist	count=1
arg	keymap that were bound ||| keymap oldmap	count=1
arg	defines the function ||| docstring interactive	count=1
module	means display-buffer may display ||| 14	count=1
function	rest to lower case ||| s capitalize	count=1
function	command provides help for ||| helper help	count=1
function	init ||| auto save	count=1
function	recording of undo information ||| undo	count=1
function	number of lines ||| lines	count=2
module	and returns ||| 21 4	count=1
function	tests to see whether ||| memq	count=1
module	and [module] ||| [module]	count=1
arg	coding-system as the ||| coding-system	count=2
function	a string ||| number to string	count=1
arg	items in list ||| list	count=8
arg	[arg_1] it through ||| [arg_2] [arg_1]	count=4
function	list of coding ||| coding	count=3
arg	[arg_1] and opens ||| [arg_1] [arg_2]	count=3
module	leaving ||| 33 4	count=1
module	[module] an ||| [module]	count=3
arg	non-nil [arg] one of ||| [arg]	count=1
module	this ||| 25	count=2
function	at the beginning ||| bolp	count=1
module	this is ||| 16 3	count=1
function	file name nil ||| file name	count=2
function	to ask [function_2] ||| [function_1] [function_2] about supersession threat	count=1
arg	char ||| char	count=1
module	this function returns the ||| 6	count=4
function	string containing ||| substring	count=1
module	non-nil if object is ||| 15 5	count=1
module	make a ||| 14	count=1
function	file in ||| in	count=1
function_arg	[function_1] index ||| [function_1] sequence [arg_2]	count=1
arg	function for each ||| function	count=1
arg	to position [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] for void ||| [function_2] [function_1]	count=2
function	sets the ||| set face underline	count=1
module	this function returns a ||| 6 1	count=1
arg	list2 ||| list2	count=1
function	this ||| list file	count=1
function	characters whose syntax classes ||| syntax backward	count=1
module	thrown away ||| 31 8.6	count=1
function	the host name and ||| save	count=1
arg	message and ||| message	count=1
function	[function_1] backup files ||| [function_2] [function_1]	count=3
function	this function returns the ||| window	count=2
arg	command fills [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] [function_2] at ||| [function_1] [function_2]	count=4
arg	x and y ||| frame x y	count=1
module	visiting ||| 26	count=1
function	value ||| window	count=1
function	to make [function_2] ||| [function_1] [function_2]	count=2
arg	old-pos ||| old-pos escape-from-edge	count=1
arg	the file filename if ||| filename	count=1
function	or ||| file	count=1
function	already set it ||| auto save list	count=1
arg	binding for the event ||| binding	count=1
arg	the tail [arg] ||| pred [arg]	count=3
module	this returns ||| 3 5	count=1
function	from sequence and ||| delete	count=1
arg	of marker marker ||| marker	count=1
module	[module] is ||| [module]	count=5
function	your init file ||| auto save list	count=1
arg	by delta lines ||| delta horizontal ignore	count=1
function	element ||| map	count=1
module	otherwise ||| 29	count=1
arg	bitmap bitmap to face ||| bitmap face	count=1
function	are [function_2] ||| [function_2] vector [function_1]	count=1
function	point to the ||| ewoc goto	count=1
arg	in object rather ||| prop object limit	count=1
arg	list and list2 has ||| list list2	count=1
function	window ||| up	count=2
arg	[arg_1] and docstring ||| [arg_2] [arg_1]	count=3
function	it non-nil based on ||| auto	count=1
module	display buffers ||| 27 14	count=1
arg	or nil if obarray ||| obarray	count=1
function	[function_1] fontset according ||| [function_2] [function_1]	count=8
function_arg	the members [arg_2] ||| [function_1] [arg_2]	count=1
module	[module_1] option ||| [module_1] [module_2]	count=2
arg	[arg] is ||| [arg]	count=6
arg	[arg_1] to newname ||| [arg_1] [arg_2]	count=2
function	reads your ||| auto save list file	count=1
function	[function_1] window ||| [function_2] [function_1] predicate predicate	count=1
function_arg	[function_1] of x2 ||| [arg_2] [function_1]	count=3
module	function returns the current ||| 12	count=1
function	system to use ||| system	count=2
function	the mouse ||| mouse	count=2
module	this ||| 8	count=1
arg	filename into the ||| filename visit beg	count=1
function	of scroll [function_2] ||| [function_1] [function_2]	count=1
function	bool vector ||| bool vector count	count=2
arg	of parameter ||| parameter	count=1
function	auto-save-list-file-name ||| list	count=1
module	vector constant ||| 21	count=1
function	command considers [function] ||| [function] as paragraph	count=1
function	overlay that [function_2] ||| [function_2] and [function_1]	count=1
function	reads a shell ||| read shell	count=2
function	is the ||| current	count=1
module	a new window ||| 27 14	count=1
function	file name to ||| file name	count=1
module	string of ||| 38 7	count=1
function	init ||| auto save list	count=1
arg	regexp ||| regexp s	count=2
function	elements in ||| length	count=1
arg	on frame frame ||| frame	count=2
function	of extra slot ||| char table extra slot	count=1
function	init file it ||| save list	count=1
arg	regexp in ||| regexp s &optional start end	count=1
module	which is the ||| 17.1	count=1
arg	the base [arg] to ||| [arg]	count=1
module	days hours etc ||| 38	count=1
function_arg	[function_1] display ||| [function_1] [arg_2]	count=1
function	regular expressions that ||| regexps	count=1
function	width in pixels of ||| width	count=1
function_arg	[function_1] of parameter ||| [arg_2] [function_1]	count=3
function	lines of ||| lines	count=1
module	the [module] ||| [module] 5	count=3
function_arg	the timestamp [arg_2] ||| [function_1] [arg_2]	count=1
function	current buffer’s ||| force	count=1
module	of ||| 20	count=1
function	base [function_2] ||| [function_2] set [function_1]	count=2
function	lines in the text ||| lines	count=1
function	area recorded ||| area	count=1
function	the position of ||| position	count=1
arg	pred and [arg_2] ||| index [arg_1] [arg_2]	count=1
module	point is at ||| 31 1	count=2
arg	[arg] in ||| [arg]	count=1
function	file ||| auto	count=1
function	this function sets one ||| set	count=1
arg	[arg] in ewoc ||| ewoc [arg]	count=2
arg	list2 that are ||| list2	count=1
arg	of symbol ||| symbol	count=1
function	table made from ||| table from	count=3
function	the font of ||| font	count=1
arg	value value [arg_2] ||| [arg_2] [arg_1]	count=5
arg	s with prefix ||| s prefix	count=2
function	of this variable is ||| pop up	count=2
module	value of this ||| 30 7	count=1
function	if you have ||| auto save list	count=1
function	elements ||| vconcat	count=1
function	selected window ||| same window	count=1
module	the horizontal position of ||| 31 17.1	count=1
function	and exits ||| and exit	count=1
arg	[arg_1] docstring and ||| [arg_2] [arg_1]	count=2
function_arg	visibility status [arg_2] ||| [function_1] [arg_2]	count=1
function	the query ||| process query on exit	count=2
function	the attributes of remote ||| remote	count=1
module	if this variable ||| 27 11	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x y [arg_2]	count=12
module	so that the entire ||| 29	count=1
module	buffers by making ||| 27	count=1
function	the contents of file ||| file contents	count=1
function_arg	[function_1] with font-spec ||| [arg_2] [function_1]	count=3
arg	from pos instead ||| pos limit	count=2
function	file in [function_2] ||| [function_1] [function_2]	count=4
arg	character old-char ||| old-char	count=1
function	of the leftmost column ||| left column	count=1
arg	count times ||| count	count=1
function	this ||| current	count=1
function	create [function] ||| [function] name	count=1
module	of the ||| 31 17.1	count=2
function	destroy ||| destroy	count=1
module	floating ||| 3 5	count=2
module	the [module] ||| [module] 2	count=3
module	use for auto-saving ||| 25	count=1
function	in shell syntax an ||| shell	count=1
arg	[arg_1] sep ||| [arg_2] [arg_1]	count=1
function	for each ||| char table	count=1
function	[function_1] threshold ||| [function_2] [function_1]	count=3
function	to split ||| pop up	count=1
arg	and suffix holds the ||| predicate suffix	count=1
arg	#rrrgggbbb ||| convert allow-empty display	count=1
arg	column in position ||| position	count=1
function	method ||| method	count=2
function	[function] sentence including ||| [function]	count=1
function	this variable is ||| ring	count=1
module	is allowed to split ||| 14	count=1
arg	displays the buffer in ||| buffer	count=1
function_arg	[function_1] pred ||| [arg_2] [function_1]	count=9
function	indexed by ||| elt	count=1
arg	[arg_1] buffer-or-name ||| [arg_2] [arg_1]	count=12
arg	the message ||| message	count=1
function	for void [function_2] ||| [function_1] [function_2]	count=1
arg	syntaxes a string of ||| syntaxes limit	count=1
function	child process ||| child	count=1
function	the maximum size ||| mark ring max	count=1
function_arg	the first [arg_2] ||| [arg_2] [function_1]	count=1
arg	s with [arg_2] ||| [arg_1] [arg_2]	count=4
function	non-nil if [function] ||| [function] narrowed	count=1
function	the value of ||| pop up	count=2
arg	value of x1 ||| x1	count=1
function	bool vectors a ||| bool vector	count=2
module	this ||| 36 3	count=2
module	name and ||| 2	count=1
function_arg	font [arg_2] ||| [arg_2] [function_1]	count=5
function	the query [function_2] ||| [function_1] [function_2]	count=2
arg	is like get-char-property ||| position prop object	count=1
function	auto-save-list-file-name if ||| auto	count=1
module	that object ||| 6 8	count=1
arg	of x2 to the ||| x2	count=1
arg	signal ||| process signal	count=1
function_arg	abbrev table [arg_2] ||| [function_1] description name [arg_2]	count=1
function_arg	the status [arg_2] ||| [arg_2] [function_1]	count=2
module	a list of ||| 24 6.4	count=1
function	the text conversion of ||| text conversion	count=1
function	reads an [function_2] ||| [function_1] [function_2]	count=5
function	function sets window’s ||| set window	count=3
function	text properties from the ||| properties	count=1
module	minibuffer contents with the ||| 19	count=3
arg	[arg_1] pos ||| [arg_2] [arg_1]	count=2
module	to generate repeat events ||| 20	count=1
module	of the minibuffer ||| 13	count=1
function	as xml ||| parse xml region	count=2
function	syntax ||| syntax backward	count=1
function	this command quits ||| quit window	count=1
function	in the current ||| at	count=1
function	to process process ||| signal	count=1
function	nil switch-to-buffer displays ||| to buffer preserve window	count=1
function	window ||| posn	count=1
function	[function_1] directory that ||| [function_2] [function_1]	count=2
function	configuration list ||| configuration	count=1
function	progress of your ||| progress	count=1
function	already set it non-nil ||| list file	count=1
function_arg	the contents [arg_2] ||| [arg_2] [function_1]	count=2
function	sibling of ||| sibling	count=2
function	current buffer is on ||| mouse on	count=1
function	one [function] does not ||| [function]	count=1
function	that has a ||| char	count=1
function	the display table ||| window display	count=1
function_arg	status [arg_2] ||| [function_1] [arg_2]	count=2
function	this function appends ||| append to	count=1
function_arg	[function_1] obsolete-name ||| [function_1] [arg_2]	count=2
function	hours ||| seconds	count=1
module	0 ||| 29	count=1
function	charset of ||| charset	count=1
arg	[arg_1] to pattern ||| [arg_1] [arg_2]	count=1
arg	command adjusts the height ||| max-height min-height max-width min-width	count=1
module	this function ||| 27 25	count=1
arg	eval-region but ||| buffer-or-name stream	count=1
function	in shell syntax ||| shell quote	count=1
module	a non-nil value ||| 6 6	count=1
function_arg	register reg ||| register reg beforep	count=1
function	function for each ||| char	count=1
function	product ||| product	count=1
module	this is ||| 5 3	count=2
function	string of syntax class ||| skip syntax forward	count=1
function	split an ||| pop	count=1
function	the reverse of ||| s reverse	count=1
function	that completes the current ||| complete	count=1
module	all relevant variables during ||| 22 4.1	count=1
function	after ||| file	count=1
function	string or a buffer ||| or buffer	count=1
function	[function_1] than file ||| [function_2] [function_1]	count=1
module	variable determines whether files ||| 24 2	count=1
function	its initials ||| s word initials	count=1
arg	sequence ||| sequence prefix	count=1
module	of the [module] tty can ||| [module]	count=1
function	[function] of the ||| [function] p	count=2
function	modifying the match ||| match	count=1
function_arg	[function_1] char-table ||| [function_1] [arg_2]	count=5
function	the directory named ||| directory	count=1
arg	of file filename ||| filename id-format	count=1
module	entire contents are ||| 29 4	count=1
function	startup echo area message ||| inhibit startup echo area message	count=1
arg	fn [arg_2] ||| [arg_1] [arg_2]	count=2
function	for ||| window parameter	count=2
function	the environment variable values ||| substitute in file name	count=1
function	the value of this ||| mark ring	count=1
function_arg	year [arg_2] ||| [arg_2] [function_1]	count=1
module	split an existing ||| 27 14	count=1
arg	[arg_1] and ||| [arg_2] [arg_1]	count=10
module	to floating point ||| 3	count=1
module	if non-nil ||| 2.16	count=1
arg	value in the ||| value	count=1
module	variable ||| 2.2	count=1
arg	at [arg] in the ||| [arg]	count=1
module	function returns ||| 31	count=3
function	your init file ||| list file	count=1
function	tab in ||| indent for tab	count=1
function	all expressions ||| edebug test	count=1
function	standard case [function_2] ||| [function_2] [function_1]	count=1
module	you ||| 6.1	count=1
module	not computing [module] actual contents ||| [module]	count=1
function_arg	number of [arg_2] ||| [function_1] [arg_2]	count=2
function	on ||| list file	count=1
function	remove whitespace at ||| trim	count=1
function	the match ||| string match	count=1
function	non-nil based on ||| save list file	count=1
arg	[arg] elements ||| pred [arg]	count=1
module	non-nil ||| 27	count=2
module	a [module] and ||| [module] 2.1	count=1
function	function for file name ||| find file name	count=1
arg	start within strings or ||| start	count=1
arg	object ||| pos prop object	count=1
arg	of object ||| object	count=1
function	macro defines a pop-up ||| define	count=1
module	for ||| 27 25	count=2
function	scalable fonts to use ||| scalable fonts	count=1
arg	of tree ||| init-value tree	count=1
function	allowed ||| up	count=1
arg	that ||| x n	count=1
function	prompt string of keymap ||| prompt	count=1
arg	[arg_1] by record-regexp ||| [arg_2] [arg_1]	count=1
function	property list ||| symbol plist	count=1
function_arg	[function_1] fun to ||| [arg_2] [function_1]	count=2
function	the end [function] and the ||| [function] end double	count=1
arg	with newdef for ||| newdef	count=1
function	startup [function_2] ||| [function_1] [function_2]	count=4
function	as obsolete ||| obsolete face	count=1
function	deletes the [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] sibling ||| [function_2] [function_1]	count=4
function	element ||| table	count=1
module	by emacs ||| 38 13	count=1
function	dimensions of graphical displays ||| display mm dimensions	count=1
module	is allowed to ||| 27	count=1
arg	thread [arg_2] ||| [arg_1] [arg_2]	count=1
module	return non-nil if infix ||| dash	count=1
function_arg	this stores [arg_2] ||| [arg_2] [function_1]	count=1
arg	a pop-up menu ||| position menu	count=1
function_arg	encapsulating [arg_2] ||| [arg_2] [function_1]	count=9
arg	replaces olddef with newdef ||| newdef	count=1
function	conversion of ||| conversion	count=1
function	this prefix adding the ||| prefix	count=1
module	it non-nil based on ||| 25 2	count=1
module	function ||| 37 9.1	count=1
function_arg	[function_1] symbol ||| [function_1] [arg_2]	count=2
function	completes [function] contents ||| [function] complete	count=1
module	variables lists in files ||| 11 11	count=1
function_arg	displays the [arg_2] ||| [function_1] other frame buffer-or-name [arg_2]	count=1
function	the right or ||| right	count=1
function	window ||| pop up	count=2
function	returns ||| float	count=1
arg	of items in list ||| list	count=1
function	[function_1] window’s ||| [function_2] [function_1]	count=4
function	a new fontset ||| fontset from fontset spec	count=1
module	this function ||| 4 8	count=2
function	of years days hours ||| seconds	count=1
module	of the ||| 32 6	count=1
module	of all expressions debugged ||| 17 2.16	count=1
function	this command ||| command	count=1
function	the host name and ||| auto save list	count=1
function	bool vectors a ||| bool vector union	count=1
function_arg	acl for [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] string ||| [function_1] [arg_2]	count=1
arg	[arg_1] prefix and ||| [arg_1] [arg_2]	count=2
arg	new-pos that is in ||| new-pos	count=1
function	defines a pop-up menu ||| define	count=1
function	emacs reads your ||| list	count=1
arg	string in collection ||| string collection predicate	count=2
arg	old with [arg_2] ||| [arg_2] [arg_1]	count=3
arg	command a ||| command	count=1
arg	element of char-table ||| function char-table	count=1
function	a directory ||| directory	count=2
function	the startup echo ||| inhibit startup echo	count=2
module	frame and nil otherwise ||| 28	count=1
function	the marker that represents ||| marker	count=1
arg	subcommands it offers ||| help-line help-text help-map	count=1
function	a string or a ||| display message or	count=1
function	position of the change ||| change	count=1
module	or vector constant ||| 1	count=1
function	window as dedicated to ||| window dedicated p	count=1
function	host name ||| file	count=1
module	function converts ||| 21	count=1
function	binding ||| key binding	count=3
function_arg	context [arg_2] ||| [function_1] [arg_2]	count=1
function	this sets the :underline ||| set face	count=1
arg	if count is negative ||| count	count=1
function	[function] between the ||| [function]	count=3
function	on ||| auto	count=1
function	the currently active ||| active	count=2
module	by making new ||| 14	count=1
arg	from-buffer-or-name into ||| from-buffer-or-name	count=1
function	whose syntax ||| syntax backward	count=1
function	emacs reads ||| list file	count=1
arg	made up of count ||| count	count=1
arg	function fn this ||| fn	count=1
function	scroll bars specified for ||| scroll bars	count=1
function	exits from the ||| exit	count=1
module	converts ||| 21 1	count=2
module	returns ||| 1	count=4
arg	specified by buffer-or-name in ||| buffer-or-name norecord	count=2
module	returns a [module] ||| [module]	count=3
arg	position in object ||| prop object	count=1
function	current [function_2] ||| [function_1] [function_2]	count=9
arg	of eol-coding and ||| eol-coding	count=1
module	of ||| 27 4	count=2
function	the rehash [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] translation table ||| [function_1] [function_2]	count=1
function	init ||| save	count=1
module	expressions debugged ||| 2.16	count=1
function	evaluates it then returns ||| eval	count=1
arg	this string and the ||| string	count=1
function_arg	font matching [arg_2] ||| [arg_2] [function_1]	count=4
function	fringe bitmap ||| fringe	count=1
function	of this ||| pop up	count=2
function_arg	[function_1] of fun ||| [arg_2] [function_1]	count=2
module	a ||| 27	count=1
function	end of the ||| end	count=3
function	it non-nil ||| auto save list	count=1
function	vector never as a ||| vector	count=1
function	a frame to ||| frame to buffer	count=2
function	this sets the :weight ||| set	count=1
module	of arguments is ||| 5	count=1
function	process id ||| save	count=1
module	emacs ||| 2	count=1
function	command renames the ||| rename	count=1
arg	lines ||| lines	count=1
module	to make a new ||| 27	count=1
function	the dimensions of ||| dimensions alist	count=1
arg	lists ||| &rest lists	count=2
arg	that x ||| x	count=1
function	xlfd ||| xlfd	count=1
function	:inverse-video ||| inverse video	count=1
module	tests for the ||| 10	count=1
module	all frames on ||| 28	count=1
function	systems that could ||| systems	count=3
arg	in map for key ||| map key	count=1
function	this inserts ||| insert	count=2
function	makes backup ||| backup	count=1
function	of the end of ||| end	count=2
arg	position and pushes a ||| position nomsg activate	count=1
function	characters whose syntax ||| syntax backward	count=1
function	add the ||| add	count=1
function	function sets ||| set window	count=1
function_arg	register reg ||| register reg	count=1
function	may display buffers by ||| up	count=1
function_arg	register [arg_2] ||| [arg_2] [function_1]	count=5
arg	pos instead of ||| pos	count=1
module	[module_1] [module_2] converts ||| [module_1] [module_2] upcase	count=1
function	it initializes auto-save-list-file-name if ||| file	count=1
function_arg	sets the [arg_2] ||| [arg_2] [function_1]	count=8
arg	end ||| end	count=33
function	process ||| auto save list file	count=1
function	the minibuffer ||| minibuffer auto	count=1
arg	[arg_1] props see ||| [arg_2] [arg_1]	count=4
module	which is ||| 17.1	count=1
module	minibuffer contents ||| 19 10	count=3
function_arg	elements in [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	history element [arg_2] ||| [arg_2] [function_1]	count=2
function	function sets the process ||| set process	count=1
module	of ||| 30	count=2
function	accessible portion ||| min	count=1
function	a [function] ||| [function] p	count=2
function	pid ||| id	count=1
arg	array bindat-raw according ||| bindat-raw bindat-idx	count=1
arg	value val ||| val	count=1
function	value ||| up	count=2
function	a ||| define	count=2
function	it non-nil based on ||| auto save list	count=1
function	function sets window’s ||| set window parameter	count=2
function	init file it ||| auto	count=1
arg	any [arg] ||| [arg]	count=3
function	string or vector constant ||| kbd	count=1
arg	visited file on disk ||| ignore-auto noconfirm preserve-modes	count=1
function	[function_1] name ||| [function_2] [function_1]	count=19
function	function reads abbrev definitions ||| read abbrev	count=1
function	the coding ||| terminal coding	count=1
function	window at the bottom ||| buffer at bottom	count=1
function	this function sets ||| set frame width	count=1
function	buffer by choosing an ||| use some	count=1
function_arg	[function_1] command ||| [function_1] [arg_2]	count=3
arg	as the ||| when	count=1
rep	file [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] obsolete-name [arg_2]	count=2
function	[function] was shown ||| [function]	count=3
arg	fun [arg_2] ||| [arg_2] [arg_1]	count=1
function	buffers to the ||| buffers	count=1
function_arg	of register [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] on frame ||| [function_1] face attribute [arg_2]	count=1
function	[function_1] made from ||| [function_1] [function_2]	count=3
function_arg	table according ||| table keyword-args	count=1
function	as dedicated ||| window dedicated p	count=1
function	[function_1] attributes ||| [function_1] extended [function_2]	count=1
function	the font matching ||| font	count=1
arg	to filename ||| filename	count=2
module	alist of ||| 4	count=1
arg	from start to end ||| start end	count=3
function	[function_1] context of ||| [function_2] [function_1]	count=4
function	its individual ||| individual paragraphs	count=1
module	this function ||| 5 8	count=2
module	current ||| 26 2	count=1
function	buffer-or-name ||| buffer window	count=1
function	of coding systems that ||| coding systems for	count=1
function	is the command ||| command	count=1
function_arg	pid of [arg_2] ||| [arg_2] [function_1]	count=1
function	returns non-nil if ||| p	count=6
module	error is ||| 9 5	count=1
function_arg	[function_1] fn ||| [arg_2] [function_1]	count=4
function	this variable ||| pop	count=2
arg	calls its argument ||| function	count=1
function	padding on [function] ||| [function]	count=2
module	command loop ||| 20	count=1
function	of buffer [function_2] ||| [function_2] [function_1]	count=2
function	insert-before-markers but ||| and	count=1
function	function returns the selinux ||| file selinux	count=1
arg	[arg_1] to buffer ||| [arg_1] [arg_2]	count=1
function	the dimensions of ||| display mm dimensions	count=1
module	to floating point ||| 5	count=1
function	the ||| event	count=1
arg	position and [arg_2] ||| [arg_1] [arg_2]	count=4
function	and ||| list file	count=1
function	process associated with ||| process	count=1
arg	to specs ||| specs	count=1
function	sets the parent ||| set keymap	count=1
function	user moves the mouse ||| mouse	count=1
function	a pair ||| pair	count=1
function	stores value ||| char code	count=1
function	current window configuration ||| current window configuration	count=2
function	entire [function] ||| [function]	count=3
function	fill mode is enabled ||| fill mode	count=1
module	used by the function ||| 2	count=1
function	function sets the ||| set file acl	count=1
function_arg	a string [arg_2] ||| [function_1] [arg_2]	count=4
arg	the width of ||| width pretend pixelwise	count=1
function	[function] map ||| [function] unset key	count=2
arg	filename into the ||| filename visit beg end replace	count=1
function	change is found ||| char property change	count=2
function	returns [function] for ||| window configuration [function]	count=1
arg	line count ||| count window	count=1
module	whose cdr is the ||| 5 5	count=1
function	contents [function] ||| minibuffer complete [function]	count=3
function	standard case table ||| standard case table	count=2
function	indices of all ||| find indices	count=1
module	variables during ||| 4.1	count=1
module	this function returns window’s ||| 27 25	count=1
arg	current-face and also ||| current-face	count=1
function	not create [function] ||| [function] name	count=1
function	display ||| window display	count=1
function	coding systems that ||| find coding systems for	count=1
function	file name for reading ||| file name	count=1
arg	it looks in the [arg_1] [arg_2] the actual ||| [arg_2] [arg_1]	count=6
function	current display [function_2] ||| [function_1] [function_2]	count=4
arg	this command copies the ||| keep-time parents copy-contents	count=1
rep	this [function_arg_2] ||| [function_arg_2] [module_1]	count=1
function	minibuffer text for a ||| minibuffer	count=1
function	a single space ||| space	count=1
module	prefix argument for this ||| 5	count=1
module	the inverse of ||| 6	count=1
function	auto-save-list-file-name if you ||| auto	count=1
function	to the tool bar ||| tool bar add	count=1
arg	start to end ||| start end buffer	count=3
module	variable is non-nil display-buffer ||| 27	count=1
function	kill ring ||| kill	count=1
function	not ||| list	count=1
arg	initial value value and ||| variable value	count=1
function	specify the dimensions of ||| mm dimensions	count=1
arg	[arg_1] pos instead ||| [arg_2] [arg_1]	count=2
function	in a new ||| other	count=1
arg	[arg_1] consing ||| [arg_1] element [arg_2]	count=3
arg	s with prefix and ||| s prefix	count=1
function	the list of ||| list	count=1
function	not ||| save list	count=1
arg	directory ||| directory	count=2
function_arg	[function_1] count lines ||| [function_1] line [arg_2]	count=1
function	a live [function_2] ||| [function_2] [function_1]	count=6
function	[function_1] base ||| [function_2] [function_1]	count=2
function	or other i/o device) ||| regular	count=1
function	attributes of remote ||| remote	count=1
arg	the text from start ||| start	count=2
function	position of ||| current	count=1
function	[function_1] systems ||| [function_1] [function_2]	count=12
function	the position ||| marker position	count=1
arg	except that it ||| end	count=1
module	it non-nil ||| 2	count=1
function	[function_1] file name ||| [function_2] [function_1]	count=3
function	string or a ||| message or	count=1
arg	as seen from the ||| ignore sign wrap mini	count=1
function	may display buffers by ||| pop	count=1
function	displays the ||| switch to	count=2
arg	function defines the ||| docstring interactive	count=1
module	function returns window’s ||| 27 25	count=1
module	which is the horizontal ||| 31 17.1	count=1
module	variable is non-nil display-buffer ||| 14	count=1
module	[module_1] function processes ||| [module_1] [module_2]	count=1
function	standard x ||| x parse	count=1
module	this ||| 14	count=2
function	controls how the buffer ||| buffer	count=1
arg	from beg [arg_2] ||| [arg_1] [arg_2]	count=8
function	epoch ||| time	count=1
module	string ||| 7	count=1
function	for each element ||| map	count=1
module	auto-save-list-file-name if you ||| 25 2	count=1
module	host name and process ||| 25 2	count=1
function	buffers by ||| pop	count=1
function	[function_1] [function_2] ||| [function_1] file [function_2]	count=2
module	emacs session ||| 38 2.2	count=1
arg	live window and nil ||| all-frames	count=1
module	auto-saving ||| 25 2	count=2
arg	[arg_1] [arg_2] ||| set mouse pixel position [arg_1] [arg_2]	count=4
arg	is the only ||| no-mini	count=1
function	an existing window to ||| pop up	count=1
function_arg	[function_1] specifications specs ||| [function_1] [arg_2]	count=4
function	emacs reads ||| save list	count=1
function	display-buffer may ||| pop	count=1
function	process associated ||| buffer process	count=1
module	non-nil that means ||| 14	count=1
function	the default ||| default	count=2
function	the newline [function_2] ||| [function_1] [function_2]	count=2
arg	preds and ||| &rest preds	count=2
function_arg	returns the position closest [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	[function_1] button ||| [function_1] [function_2]	count=2
function	from the user ||| user	count=1
function	element of ||| char	count=1
module	at the ||| 1	count=2
arg	function to the named ||| props	count=1
function_arg	node encapsulating [arg_2] ||| [function_1] before ewoc node [arg_2]	count=4
function	the host name and ||| list file	count=1
arg	end according to coding ||| end	count=2
arg	value value and docstring ||| value docstring	count=1
function	split ||| split	count=4
module	returns t if ||| 31 1	count=2
function	of words ||| words	count=1
arg	arguments ||| arguments	count=2
function	not ||| save	count=1
function	specify margins around ||| frame to buffer margins	count=1
module	so ||| 29	count=1
arg	of supertype ||| supertype	count=1
function	stores value as ||| char code	count=1
arg	of dir ||| dir	count=1
function	[function_1] abbrev definitions ||| [function_2] [function_1]	count=3
function	overlay [function_2] ||| [function_2] and [function_1]	count=1
function	the emacs-recognized extended attributes ||| extended attributes	count=1
module	number of ||| 6 7	count=1
arg	and list2 ||| list2	count=2
function_arg	command bound ||| command rigid	count=1
arg	separator ||| separator	count=1
arg	from start to end ||| start end highest	count=1
function	[function_1] xml rather ||| [function_2] [function_1]	count=4
arg	by providing completion ||| predicate require-match initial history	count=1
function	shell syntax an ||| shell	count=1
module	after ||| 2	count=1
function	modifying the match ||| match p	count=1
module	property list ||| 9.2	count=1
module	this function returns ||| 4	count=1
function_arg	the display [arg_2] ||| [arg_2] [function_1]	count=3
function	function returns the timer ||| timer	count=1
arg	[arg_1] by record-regexp ||| [arg_1] [arg_2]	count=1
module	integer ||| 13	count=1
module	window for ||| 14	count=1
arg	count lines ||| count	count=1
arg	the handy way ||| function append local	count=1
arg	list each time ||| list	count=1
function	indentation of the ||| current indentation	count=1
function	an integer [function_2] ||| [function_1] [function_2]	count=4
module	new ||| 27	count=2
function	the mouse to ||| set mouse	count=1
function	frame-char-width ||| resize pixelwise	count=1
function_arg	type of [arg_2] ||| [arg_2] [function_1]	count=1
arg	if count ||| count	count=1
function	creates a ||| make	count=1
function	system name or nil ||| system	count=1
function	specifies a pair ||| pair	count=1
module	of corresponding letters ||| 4 9	count=1
arg	non-nil thread it ||| &optional	count=1
function	two window ||| compare window	count=1
function	the value of ||| mark ring	count=1
module	element ||| 6	count=2
arg	input-method for ||| input-method	count=1
function	sets the face ||| set	count=1
arg	alias for symbol base-variable ||| base-variable	count=1
function	non-nil based ||| auto save list	count=1
module	a string of ||| 38	count=1
function	fonts to ||| fonts	count=1
module	first ||| 17.1	count=1
function	prefix adding the host ||| save list file prefix	count=1
module	is an alist of ||| 39 4	count=1
function	owner or ||| when mismatch	count=1
function	this function sets ||| set window fringes	count=1
function	of the property named ||| get	count=1
arg	with [arg] ||| [arg]	count=1
function	a link ||| link	count=1
arg	dirname to [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	the fringe [arg_2] ||| [function_1] [arg_2]	count=3
function	symbolic file mode ||| modes symbolic	count=1
function	the minibuffer [function_2] ||| [function_2] [function_1]	count=6
function_arg	[function_1] fname that ||| [function_1] [arg_2]	count=5
arg	:slant attribute of face ||| face frame	count=1
arg	this function ||| function	count=2
arg	[arg_1] time ||| [arg_2] [arg_1]	count=2
function	the overlays that ||| overlays	count=1
module	a string representing the ||| 38 8	count=1
function	means display-buffer may display ||| pop	count=1
module	function ||| 19 13	count=2
arg	char-table that has a ||| char-table	count=1
function	process associated ||| process	count=1
function_arg	reverse of [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] executes body ||| [arg_2] [arg_1]	count=2
function	current buffer’s auto-save file ||| auto save file	count=1
function_arg	symbol [arg_2] ||| [function_1] [arg_2]	count=3
function	populates ||| tabulated list print	count=1
function	print-length to this ||| length	count=1
function	the local [function] list ||| [function]	count=1
function	restore ||| restore	count=1
module	is ||| 30	count=1
function	matched by ||| re	count=1
arg	text in string according ||| string	count=1
function	a symbolic file mode ||| modes symbolic	count=1
function	length ||| length	count=1
function_arg	[function_1] sig ||| [arg_2] [function_1]	count=3
function_arg	property [arg_2] ||| [function_1] [arg_2]	count=6
function	a ||| vector	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=3110
function_arg	[function_1] specified by ||| [arg_2] [function_1]	count=4
arg	this function returns filename ||| filename	count=1
module	events for this-command-keys to ||| 20	count=1
function	deletes the current buffer’s ||| delete	count=1
function	that are t in ||| population	count=1
module	this function ||| 34 7	count=1
function	minibuffer a nonnegative ||| minibuffer	count=1
arg	each ||| function	count=1
module	is the regular expression ||| 33 8	count=1
arg	currently [arg] ||| [arg]	count=1
arg	replacements is a list ||| replacements s	count=1
function	init file it initializes ||| auto save	count=1
function	by making new frames ||| frames	count=1
arg	argument function for each ||| function	count=1
function	stores ||| put	count=1
function	[function] which has ||| [function] live p	count=1
function_arg	in the [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	the alist parameters ||| display parameters	count=1
module	this function ||| 12 5	count=1
arg	index from ||| from	count=1
function	window to make ||| pop	count=1
function	[function_1] copying in ||| [function_2] [function_1]	count=5
arg	spec has a ||| spec	count=1
module	argument is [module] and returns ||| [module]	count=1
function	[function] towards ||| [function]	count=3
function	reads your init ||| auto save	count=1
function	display of the startup ||| inhibit startup	count=1
arg	format format ||| format beg end	count=1
arg	end adding the ||| end	count=1
arg	any keys in keymap ||| keymap	count=1
function	the display table of ||| display	count=1
function_arg	bottom edge [arg_2] ||| [function_1] [arg_2]	count=1
function	this function calls its ||| char	count=1
module	the ||| 29 4	count=2
function	regular expressions that specify ||| regexps	count=1
arg	prec2 tables ||| tables	count=1
function	your init ||| list	count=1
function	subtype symbol ||| table subtype	count=1
function	the display-start position ||| start	count=1
arg	the [arg] ||| [arg]	count=3
function	this function sets the ||| set window	count=1
function	a [function] function ||| [function] function p	count=1
module	returns the ||| 20 7.13	count=1
module	is ||| 31	count=3
function	for void text areas ||| void text area	count=1
function_arg	flag [arg_2] ||| [arg_2] [function_1]	count=1
rep	of [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	a string ||| to string	count=1
arg	in keymap [arg_2] ||| [arg_1] [arg_2]	count=2
rep	a list [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	for each element ||| char table	count=1
module	that must be allocated ||| e 3	count=1
function	the proper justification style ||| current justification	count=1
function	scroll [function_2] ||| [function_1] [function_2]	count=1
function	raises the ||| auto raise	count=1
function	a single space or ||| space	count=1
module	line point ||| 31	count=1
function	on this ||| save list	count=1
function_arg	[function_1] of x2 ||| [function_1] x1 [arg_2]	count=3
arg	the handy way to ||| function append local	count=1
function	the body of window ||| body	count=1
arg	of seconds since ||| seconds	count=1
module	of ||| 14 3	count=1
arg	[arg_1] live ||| [arg_1] [arg_2]	count=4
arg	[arg_1] newname ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] filename as ||| [arg_2] [function_1]	count=5
function	not already set it ||| save list	count=1
function_arg	[function_1] of text-coding ||| [arg_2] [function_1]	count=4
arg	file filename as ||| filename	count=1
function	file [function_2] ||| [function_1] extended [function_2]	count=1
function	-drop-while ||| split with	count=1
module	initializes auto-save-list-file-name if ||| 25	count=1
arg	function performs [arg] ||| [arg] fixedcase literal string	count=2
arg	of the propname property ||| propname	count=2
arg	string of years days ||| format-string	count=1
arg	value of the environment ||| substitute	count=1
arg	if bold-p ||| face bold-p	count=1
function	this creates ||| make	count=1
function	string of years ||| seconds	count=1
arg	command a symbol given ||| command position	count=1
function	row and ||| row	count=1
arg	regexp in ||| regexp	count=2
function	the parameters of ||| parameters	count=1
function_arg	forward [arg_2] ||| [arg_2] [function_1]	count=7
function	display ||| pop	count=1
function	dimensions of graphical displays ||| mm dimensions	count=1
arg	[arg_1] lisp ||| [arg_1] [arg_2]	count=2
function	contents ||| contents	count=1
function	a new node encapsulating ||| enter	count=2
module	activations of the ||| 13	count=1
function_arg	[function_1] new-pos ||| [arg_2] [function_1]	count=1
module	of this variable is ||| 7	count=1
function	a copy of ||| properties	count=1
module	days hours ||| 38 7	count=1
module	display-buffer ||| 14	count=2
function	window and nil ||| window	count=1
module	this function ||| 22 5	count=1
function	function reads a file ||| read file	count=1
function	[function_1] name with ||| [function_2] [function_1]	count=6
function	results ||| tree mapreduce	count=1
module	new vector containing ||| 6 5	count=1
module	expansion [module_2] ||| [module_1] [module_2]	count=2
module	minibuffer before the ||| 19	count=1
module	this is like ||| 31	count=1
arg	this string ||| string	count=1
module	this ||| 29 4	count=1
function_arg	directory named [arg_2] ||| [arg_2] [function_1]	count=3
arg	to time ||| time	count=2
arg	of the file filename ||| filename	count=2
arg	[arg_1] [arg_2] ||| [arg_2] s [arg_1]	count=3
function	file ||| list	count=1
function	as read-only ||| read only	count=1
function	sets the :weight attribute ||| set	count=1
module	after emacs ||| 25	count=1
module	is the inverse of ||| 6	count=1
module	it initializes auto-save-list-file-name ||| 25	count=1
function	auto-save-list-file-name ||| auto save list file	count=1
function	the dimensions of graphical ||| mm dimensions	count=1
function	[function_1] copying ||| [function_2] [function_1]	count=16
module	this ||| 6	count=7
module	sign ||| 3 2	count=1
function	sets ||| set left margin	count=1
function	characters whose syntax ||| skip syntax	count=1
function	apart ||| in steps	count=2
arg	macro named function ||| function	count=1
module	function ||| 19	count=1
module	non-nil edebug ||| 17 2.16	count=1
function	or saved ||| save	count=1
function	or a buffer ||| message or buffer	count=1
arg	the binding for ||| binding	count=2
function	a frame configuration list ||| current frame configuration	count=1
arg	sends a signal ||| process signal	count=1
function_arg	[function_1] of supertype ||| [function_1] p type [arg_2]	count=2
function	removes ||| face remap remove	count=1
function_arg	this [function_1] [arg_2] ||| [function_1] [arg_2]	count=10
arg	associated value—or [arg] if key ||| [arg]	count=1
function	and then [function_2] ||| [function_1] newline and [function_2]	count=4
arg	pattern ||| pattern	count=1
function	returns the file name ||| name	count=1
module	current line ||| 31 17.1	count=1
function	window below ||| display buffer below	count=1
arg	function defines [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] alist ||| [function_1] all key [arg_2]	count=3
function	site-customization ||| site run	count=1
module	the list of ||| 14 3	count=1
function	may display buffers ||| pop	count=1
function_arg	[function_1] newname ||| [function_1] [arg_2]	count=3
module	or width of ||| 27 4	count=1
arg	between beg and end ||| beg end	count=1
function	return a single character ||| read char	count=1
function	abbrev tables listed ||| abbrev	count=1
module	for decoding ||| 32 10.8	count=1
function	function copies the sign ||| copysign	count=1
arg	this function returns ||| window	count=13
arg	value such as #rrrgggbbb ||| convert allow-empty display	count=1
function	from ||| delete	count=1
function_arg	[function_1] to binding ||| [arg_2] [function_1]	count=3
function	keyboard input ||| set keyboard	count=1
arg	keymap to ||| keymap	count=1
module	the host ||| 2	count=1
function	prefixes ||| prefixes	count=1
arg	in window ||| window	count=1
function_arg	[function_1] node ||| [function_1] ewoc [arg_2]	count=1
module	in ||| 37 4.1	count=1
function_arg	[function_1] [arg_2] in ||| [function_1] [arg_2]	count=2
module	vector containing all the ||| 6	count=1
function	[function_1] syntax ||| [function_2] [function_1]	count=2
function	forward from point for ||| forward	count=2
arg	finds and opens a ||| nomessage nosuffix must-suffix	count=1
function	in directory ||| file in directory	count=2
arg	properties props ||| props	count=1
function	[function_1] signaled and ||| [function_2] [function_1]	count=8
function	function for ||| function	count=1
function	its argument function ||| map char	count=1
function	[function] is not ||| minibuffer complete [function]	count=1
module	based on ||| 25	count=1
module	[module] describing the ||| [module] 8	count=1
module	this function ||| 27	count=1
function	inhibits the startup screen ||| startup screen	count=1
module	accessible ||| 29 4	count=1
arg	to end in ||| end	count=2
function	the day number within ||| time to day in	count=1
arg	t1 ||| t1	count=2
function	point to ||| ewoc goto	count=1
arg	parameter to value ||| parameter	count=1
arg	converts the text keyseq-text ||| keyseq-text	count=1
function	non-nil based ||| file	count=1
function	a terminal ||| terminal	count=1
arg	[arg_1] keymap ||| [arg_2] [arg_1]	count=4
arg	[arg_1] that string ||| [arg_2] [arg_1]	count=1
arg	position position in ||| position	count=2
function	emacs-recognized extended file attributes ||| file extended attributes	count=1
module	encoding terminal output ||| 32 10.8	count=1
module	reads ||| 25	count=1
rep	characters [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	save ||| save	count=1
module	this ||| 13	count=1
arg	[arg_1] tabname ||| [arg_2] [arg_1]	count=3
function	it as obsolete indicating ||| obsolete	count=1
arg	[arg_1] by divisor ||| [arg_2] [arg_1]	count=5
function	style symbols to ||| styles	count=1
arg	file filename ||| filename visit beg end	count=1
arg	key with ||| map key	count=1
function	after ||| auto save list file	count=1
function_arg	[function_1] [arg_2] ||| [function_1] description name [arg_2]	count=4
module	display buffers ||| 14	count=1
function	command considers [function] of ||| [function] as paragraph	count=1
function	host ||| auto save list file	count=1
function	same field as ||| field	count=1
arg	in lists ||| lists	count=1
module	existing window to make ||| 14	count=1
function	option ||| frame	count=1
function	reads ||| read buffer	count=2
function	[function_1] text ||| [function_2] pixel [function_1]	count=2
function	minibuffer a nonnegative integer ||| minibuffer	count=1
function	return the timestamp ||| posn timestamp	count=1
arg	of x1 and returns ||| x1	count=1
module	position of the first ||| 31 17.1	count=1
module	emacs reads your init ||| 25 2	count=1
function	body ||| body	count=1
function	case ||| case	count=3
function	sets the ||| set left margin	count=1
function	the frame that ||| window frame	count=1
function_arg	property propname ||| property char propname	count=1
function	to uppercamelcase ||| s upper camel case	count=1
function	the results ||| mapreduce	count=1
function	to process ||| signal process	count=1
function	display ||| display table	count=1
function_arg	found at [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] as ||| [arg_2] [arg_1]	count=4
function	this command quits window ||| quit window	count=1
function	rehash ||| table rehash	count=1
function_arg	the [function_1] [arg_2] ||| [function_1] [arg_2]	count=50
function_arg	[function_1] frame ||| [arg_2] [function_1]	count=2
function	this stores value ||| put	count=1
arg	among parents ||| parents	count=1
function	[function_1] previous buffers ||| [function_1] [function_2]	count=3
function	non-nil based on this ||| list file	count=1
function	and type of scroll ||| window scroll	count=1
arg	for major mode mode ||| mode	count=1
module	[module] byte ||| [module] 3	count=1
function	used by eval-expression ||| eval expression print	count=1
function	emacs reads your init ||| list	count=1
function	initializes auto-save-list-file-name if you ||| auto save list	count=1
arg	like set-mouse-position [arg] ||| [arg]	count=1
arg	position [arg] ||| n x [arg]	count=1
module	moves point to ||| 29	count=1
function	reads ||| save list file	count=1
function	wrap the words with ||| s word wrap	count=1
arg	this command fills each ||| start end justify citation-regexp	count=1
arg	from index from ||| from &optional to step	count=1
arg	coding-system as ||| coding-system	count=2
function	host name and ||| list	count=1
function	this creates [function_2] ||| [function_1] [function_2]	count=1
arg	specification string fontset-spec ||| fontset-spec style-variant-p noerror	count=1
module	days ||| 7	count=1
arg	syntaxes a ||| syntaxes	count=1
function	can execute it ||| file executable	count=2
function	previous or next ||| prev	count=1
function	this ||| event end	count=1
arg	the shorter lists ||| lists	count=1
function_arg	[function_1] of list ||| [function_1] [arg_2]	count=6
function	specified text [function] the ||| remove text [function]	count=1
module	non-nil display-buffer is ||| 27 14	count=1
module	returns window’s ||| 25	count=1
function_arg	tree for [arg_2] ||| [function_1] [arg_2]	count=1
function	the region ||| region	count=3
arg	prompt and ||| prompt initial history args	count=1
function	[function_1] limit for ||| [function_2] [function_1]	count=2
function	function appends the ||| append to	count=1
function	or body width ||| body size	count=1
function	zip the two lists ||| zip	count=1
module	of ||| 13	count=2
arg	possible completions of string ||| string	count=1
function	sets the parent keymap ||| set	count=1
function	left margin value to ||| left margin	count=1
module	in the ||| 37 4.1	count=1
arg	property list [arg_2] ||| [arg_2] [arg_1]	count=6
arg	[arg_1] to mode ||| [arg_1] [arg_2]	count=2
arg	end to ||| end	count=1
module	the start [module] ||| [module]	count=3
arg	the base [arg] to its ||| [arg]	count=1
arg	code of function ||| function	count=1
module	this ||| 5	count=12
function	init ||| auto	count=1
module	of ||| 19 6.6	count=1
module	words in ||| 4 8	count=1
arg	beg [arg_2] ||| [arg_1] [arg_2] translation	count=1
module	point ||| 3 5	count=2
function	message ||| message	count=3
module	string constant into a ||| 21 1	count=1
function	returns the current ||| current	count=3
function	replace first ||| first	count=1
function	describing the [function] ||| [function]	count=2
function	window below [function_2] ||| [function_2] [function_1]	count=2
arg	value rgb a ||| rgb	count=1
function	used by eval-expression and ||| eval expression	count=1
function_arg	the modifiers [arg_2] ||| [function_1] [arg_2]	count=2
module	file it initializes auto-save-list-file-name ||| 25 2	count=1
arg	returns window’s value for ||| window	count=1
function	tries to restore ||| quit restore	count=1
function	levels of ||| n	count=1
function	to ask a user ||| ask user	count=1
module	process ||| 25	count=1
function_arg	watch specified [arg_2] ||| [arg_2] [function_1]	count=1
module	nonnegative ||| 13	count=1
module	point-min otherwise ||| 29 1	count=1
arg	name in [arg_2] ||| [arg_2] [arg_1] expansion	count=1
function	to specify the dimensions ||| display mm dimensions alist	count=1
function	current depth of activations ||| minibuffer depth	count=1
function	inactive ||| if inactive	count=1
function_arg	[function_1] [arg_2] ||| [function_1] start [arg_2]	count=4
function	the controlling ||| controlling tty	count=1
function	the indentation of the ||| current indentation	count=1
module	function returns ||| 32 3	count=1
function	of screen lines ||| screen lines	count=1
function	it ||| save list	count=2
module	files that match them ||| 24	count=1
function	to be fit by ||| fit frame to buffer	count=1
arg	[arg_1] [arg_2] ||| [arg_1] name [arg_2]	count=4
function	the dimensions ||| dimensions	count=1
arg	[arg] with ||| [arg]	count=3
arg	sig [arg_2] ||| [arg_2] [arg_1]	count=1
function	already set ||| file	count=1
function	number of items in ||| count	count=1
arg	object is ||| object	count=1
function	[function_1] permissions as ||| [function_1] [function_2]	count=5
function	focus ||| focus	count=1
arg	category with name char ||| char	count=1
function	expands the wildcard ||| file expand wildcards	count=3
function	selinux [function_2] ||| [function_1] [function_2]	count=4
function	to be fit ||| fit	count=1
module	a nonnegative ||| 13	count=1
module	the value ||| 30	count=1
module	this variable ||| 30 7	count=1
function	a given registry is ||| registry alternatives	count=1
module	this function [module_2] ||| [module_2] [module_1]	count=1
arg	function so as ||| function	count=1
arg	the prop ||| pos prop object	count=1
arg	character set charset ||| charset	count=2
arg	function with arguments args ||| function args	count=1
arg	this function returns the ||| count-final-newline window	count=1
module	the buffer ||| 1	count=1
function	sets the header and ||| ewoc set	count=1
function	if a given registry ||| registry alternatives	count=1
function	property list of ||| plist	count=2
function	this returns a copy ||| properties	count=1
arg	value value and docstring ||| variable value docstring	count=1
function	by [function] is ||| [function] auto hide	count=1
function	variable ||| mark ring	count=1
function	constant into a key ||| kbd	count=1
module	destroy ||| 37 13.5	count=1
arg	fn to the ||| fn	count=1
function	controls which scalable fonts ||| scalable fonts allowed	count=1
function	of ||| end	count=1
arg	it through the first ||| &rest more	count=1
arg	point and suffix holds ||| predicate suffix	count=1
function_arg	the window [arg_2] ||| [function_1] [arg_2]	count=3
function	for the tabulated ||| tabulated	count=1
function	the match ||| match p	count=1
function	the minimum size of ||| min size	count=1
module	point-min ||| 29 1	count=2
module	returns window’s value for ||| 25	count=1
arg	number number on the ||| number	count=1
arg	named newname ||| newname ok-if-exists	count=1
function	to ||| edebug	count=1
function	form and [function_2] ||| [function_2] [function_1]	count=2
function	of the [function_1] [function_2] ||| [function_1] [function_2]	count=18
arg	[arg_1] returns parent ||| [arg_1] [arg_2]	count=1
function	of window’s bottom ||| window bottom	count=2
arg	pushes ||| nomsg activate	count=1
function	the display table ||| window display table	count=1
function	rest ||| capitalize	count=1
function	[function_1] [function_2] contain ||| [function_2] [function_1]	count=3
rep	file [function_arg_2] ||| [module_1] file [function_arg_2]	count=1
module	the number of ||| 6 7	count=1
function	set it non-nil ||| auto save	count=1
function	of ||| of buffer	count=2
function	at the [function_2] ||| [function_1] [function_2]	count=4
function	bool vectors ||| bool vector	count=2
arg	text from start ||| start	count=2
function	host name and process ||| auto save list file	count=1
module	debugger is called when ||| 17 1.1	count=1
function	simple ||| simple	count=1
function	mouse pointer style for ||| pointer	count=1
arg	the only live ||| no-mini all-frames	count=2
function	[function_1] window typically ||| [function_2] [function_1]	count=3
arg	this function sends ||| process	count=1
function	of attributes of file ||| file attributes	count=1
function	creates a [function_2] ||| [function_1] [function_2]	count=1
function	the top entry in ||| top	count=1
module	window ||| 14	count=2
arg	message as the message ||| message level buffer-name	count=1
function	nearest integer ||| round	count=1
arg	n of ||| n	count=2
function	function executes the shell ||| process shell	count=1
module	events ||| 20	count=4
module	scrolling command ||| 27 20	count=1
arg	start and end adding ||| start end	count=1
function	width in ||| width	count=1
arg	file filename into the ||| filename visit	count=1
function	frame-char-height and frame-char-width ||| frame resize pixelwise	count=1
arg	name ||| name	count=6
function	of the leftmost column ||| window left column	count=1
function	variable ||| in file	count=1
function	as an alias ||| face alias	count=1
function	point to ||| goto	count=1
function_arg	[function_1] obsolete-name is ||| [arg_2] [function_1]	count=2
function	frame-char-height and frame-char-width ||| resize pixelwise	count=1
function	to ||| pop up	count=2
function	[function_1] [function_2] ||| [function_2] from default [function_1]	count=1
function_arg	or permissions [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	file attributes [arg_2] ||| [function_1] [arg_2]	count=1
function	of window’s header line ||| window header line	count=1
function	[function_1] window’s previous ||| [function_2] [function_1]	count=2
function	process ||| signal	count=2
function_arg	leftmost child [arg_2] ||| [function_1] [arg_2]	count=4
arg	function from the function ||| function	count=1
function	holds a [function] ||| defun prompt [function]	count=2
function_arg	attributes [arg_2] ||| [function_1] [arg_2]	count=4
arg	of char-table that ||| char-table	count=1
module	this command [module_2] ||| [module_1] [module_2]	count=1
module	string constant into a ||| 1	count=1
arg	[arg_1] optionally suffix ||| [arg_2] [arg_1]	count=3
function	is nil switch-to-buffer displays ||| to buffer preserve	count=1
function	function calls ||| map char	count=1
arg	the shorter lists the ||| lists	count=1
arg	obsolete-name ||| obsolete-name	count=1
function	initializes auto-save-list-file-name ||| auto save	count=1
module	to floating ||| 3	count=1
function	sets ||| ewoc set	count=1
function	left margin value ||| left margin	count=2
function	to update [function] ||| [function] mode line update	count=1
function	[function_1] to its ||| [function_2] [function_1]	count=2
module	non-nil display-buffer ||| 27	count=1
function	the name to ||| name	count=1
function	a list of face ||| face	count=1
function	function deletes ||| delete horizontal space	count=2
function	a frame [function_2] ||| [function_1] [function_2]	count=7
module	your ||| 2	count=1
arg	dom ||| dom	count=1
arg	[arg_1] repetitions ||| [arg_1] [arg_2]	count=4
function	a prefix ||| prefix	count=1
module	function returns ||| 26 3	count=2
arg	match-form and ||| match-form &rest	count=2
arg	through the first form ||| form &rest more	count=1
function	has ||| map char	count=1
arg	which collection will ||| collection	count=1
module	the falsehood of ||| 3	count=1
function	the debug-on-exit flag of ||| backtrace	count=1
arg	position in object ||| pos prop object limit	count=1
arg	bindat-raw according to ||| bindat-raw bindat-idx	count=1
module	[module_1] returns the ||| [module_1] [module_2]	count=4
module	[module_1] match ||| [module_2] [module_1]	count=1
arg	of s ||| s	count=4
function	specifies a function for ||| function	count=1
function	the recursive ||| recursive	count=1
module	this [module_2] ||| [module_1] [module_2] upcase	count=1
function	function returns the largest ||| max	count=1
function	y-or-n-p except that if ||| p	count=1
function	inherit ||| inherit	count=1
arg	the message ||| message level buffer-name	count=1
module	function takes ||| 22 7.1.2	count=1
module	string or vector ||| 21	count=1
module	[module_1] of numbers ||| [module_1] [module_2]	count=2
arg	[arg] measured in ||| [arg]	count=1
arg	[arg_1] docstring ||| [arg_2] [arg_1]	count=4
function_arg	button [arg_2] ||| [function_1] [arg_2]	count=14
arg	prompt and ||| prompt directory	count=1
function	the buffer [function_2] ||| [function_1] [function_2] p	count=1
function	coding systems ||| coding systems	count=3
function	right or to ||| right	count=1
function	it non-nil based ||| list	count=1
module	an alist of ||| 4	count=1
function_arg	group [arg_2] ||| [arg_2] [function_1]	count=1
function	a string in ||| to string	count=1
module	text in the ||| 31	count=1
function	newer history [function_2] ||| [function_1] [function_2]	count=1
module	frames and their ||| 28	count=1
module	moves point to the ||| 29	count=1
function	[function_1] or a ||| [function_1] [function_2]	count=1
function_arg	macro defines [arg_2] ||| [function_1] obsolete face alias [arg_2]	count=2
module	string of years days ||| 7	count=1
module	the ||| 1	count=4
function	each ||| map char table	count=2
function	function sets the parameter ||| set terminal parameter	count=1
arg	if the nth bit ||| ints-or-markers	count=2
function	the user ||| user login	count=1
function	makes backup [function_2] ||| [function_1] [function_2]	count=2
function	the emacs-recognized extended attributes ||| file extended attributes	count=1
arg	the named function symbol ||| symbol function	count=1
function	area [function_2] ||| [function_2] [function_1]	count=1
module	to ||| 36	count=1
function	[function_1] to ||| [function_1] [function_2]	count=3
module	returns ||| 8	count=1
arg	lists together ||| lists	count=1
arg	start and [arg_2] ||| [arg_1] [arg_2] face	count=4
arg	in symbol’s ||| symbol	count=1
function	of color ||| display color	count=1
arg	right-margin property ||| margin	count=1
arg	n-arity function [arg] ||| [arg]	count=1
function	it initializes auto-save-list-file-name if ||| auto save list	count=1
function_arg	field as [arg_2] ||| [function_1] new-pos [arg_2]	count=1
function	standard case [function_2] ||| [function_1] [function_2]	count=1
module	[module] unibyte ||| 32 [module]	count=3
function	fontset according to ||| create fontset from fontset	count=1
function	corner of the object ||| object	count=1
function	[function_1] the year ||| [function_2] [function_1]	count=2
module	this variable’s value is ||| 3.2	count=1
function	is nil switch-to-buffer ||| to buffer preserve window	count=1
function	and of bool ||| bool	count=1
function	it initializes auto-save-list-file-name ||| auto save	count=1
module	this ||| 3	count=18
function	your init ||| auto save	count=1
function	reporting progress of your ||| progress	count=1
function	reads the first ||| read	count=1
arg	to typically the ||| to	count=1
function	expressions debugged ||| edebug	count=1
arg	by the params arguments ||| params	count=1
function	of years days ||| format seconds	count=1
function	it will make it ||| make variable buffer	count=1
function	current [function_2] ||| [function_1] input [function_2]	count=1
module	this ||| 19	count=1
function	stores value as the ||| char code	count=1
function	this command creates a ||| make	count=1
arg	mark to position and ||| position	count=1
module	value ||| 27	count=3
module	[module] copy ||| [module]	count=3
function	non-nil display-buffer is ||| pop	count=1
module	elements ||| 6 5	count=2
function	a special [function_2] ||| [function_1] [function_2]	count=4
function	resource ||| get resource	count=1
arg	eq to object ||| object	count=1
arg	in listname ||| listname	count=1
arg	with newdef ||| newdef	count=1
function	body of window ||| body	count=1
function	a nonnegative ||| minibuffer	count=1
function	[function_1] [function_2] when ||| [function_1] [function_2]	count=2
arg	[arg_1] consing ||| [arg_2] [arg_1]	count=3
function	this returns the standard ||| standard	count=1
function	text currently visible on ||| visible	count=1
function	the insertion ||| marker insertion type	count=1
module	entire contents ||| 4	count=1
function	display table of ||| window display table	count=1
arg	is like indent-rigidly except ||| end columns nochange-regexp	count=1
module	function ||| 27 25	count=2
function	used to ask a ||| ask	count=1
module	window to make ||| 14	count=1
rep	returns [function_arg_2] ||| [module_1] window [function_arg_2]	count=1
arg	for key with ||| map key	count=1
function	display table of ||| display table	count=1
arg	list [arg_2] ||| [arg_2] [arg_1]	count=21
function	file name to use ||| file name	count=1
function_arg	[function_1] sig and ||| [arg_2] [function_1]	count=3
function	child ||| child p	count=2
function	conversion ||| conversion	count=1
module	[module] or nil ||| [module] 8.1	count=3
module	function ||| 1	count=6
function	of all expressions debugged ||| edebug test	count=1
function	nonblank character ||| current	count=1
function	end ||| end	count=7
arg	spec font-spec [arg_2] ||| [arg_1] [arg_2]	count=1
function	of ||| table	count=1
function	that means display-buffer may ||| pop up	count=1
function	of this variable ||| pop	count=2
arg	at offsets step ||| step	count=1
function	that ||| pop	count=1
module	if the value ||| 14	count=2
module	[module] has been ||| [module]	count=3
function	beginning of the ||| bobp	count=1
function	host ||| list	count=1
module	function returns t if ||| 31 1	count=2
arg	[arg] to ||| [arg]	count=2
arg	[arg] order ||| predicate [arg]	count=1
function_arg	area recorded [arg_2] ||| [function_1] [arg_2]	count=1
module	split ||| 27	count=1
module	of file file converting ||| 12.2	count=1
function	the epoch to a ||| seconds to time	count=1
module	allowed to split an ||| 27	count=1
arg	message message ||| message	count=1
module	moves ||| 29	count=2
function	window as dedicated to ||| dedicated p	count=1
module	individual events which ||| 20 8.6	count=2
arg	named function symbol ||| symbol where function props	count=1
function	the current line which ||| current	count=1
function	a non-nil value ||| map	count=1
function	no change is found ||| property change	count=3
function	[function_1] group for ||| [function_2] [function_1]	count=4
function	tabulated list buffer see ||| tabulated list init	count=1
function	stores ||| code	count=1
function	as dedicated to ||| set window dedicated	count=1
function	[function] items ||| [function] items?	count=2
function	file name to use ||| auto save file name	count=1
module	is used for displaying ||| 37	count=1
arg	list tree ||| tree	count=1
module	that choose ||| 32 11	count=1
module	reads your init ||| 2	count=1
function	key sequence as a ||| read key sequence	count=1
arg	line count screen ||| count window	count=1
function_arg	[function_1] [arg_2] ||| [function_1] other window buffer-or-name [arg_2]	count=8
arg	synchronously ||| infile	count=1
module	function ||| 27	count=1
function	the first ||| current	count=1
function_arg	[function_1] port ||| [arg_2] [function_1]	count=1
function	returns the parent of ||| parent	count=1
function	if you have not ||| list	count=1
function	window to make a ||| pop	count=1
arg	[arg_1] and device ||| [arg_2] [arg_1]	count=1
function	name and ||| save	count=1
function	x-get-resource retrieves a resource ||| resource	count=1
function_arg	[function_1] [arg_2] ||| [function_1] line [arg_2]	count=4
module	you have not ||| 25	count=1
function	the beginning ||| bobp	count=1
function	minibuffer raises ||| auto raise	count=1
arg	the newest element and ||| ring	count=1
function	the file name ||| name	count=1
function	character in ||| to char	count=2
function	as a string the ||| string	count=1
module	returns the ending ||| 7.13	count=1
function	defines a new fontset ||| fontset from fontset spec	count=1
module	none ||| 37 4.1	count=1
arg	thread [arg_2] ||| [arg_2] [arg_1]	count=4
function	window ||| pop	count=2
function	must be [function] ||| [function]	count=1
function	function defines a new ||| spec	count=1
module	it ||| 25	count=2
function	a list of image ||| image	count=1
arg	key ||| key	count=7
function	the terminal [function] that ||| process tty [function]	count=1
module	of ||| 14	count=2
function_arg	[function_1] of supertype ||| [arg_2] [function_1]	count=2
function	[function_1] copying in ||| [function_1] [function_2]	count=5
function_arg	[function_1] for key ||| [function_1] [arg_2]	count=3
arg	display-start ||| noforce	count=1
module	of this variable is ||| 27 5	count=1
function	[function_1] row and ||| [function_1] col [function_2]	count=3
module	reads ||| 32 11	count=1
function	the query ||| process query on exit flag	count=1
arg	signature [arg_2] ||| [arg_2] [arg_1]	count=2
function	a mask bitmap ||| mask	count=1
function	years ||| format seconds	count=2
function_arg	[function_1] x2 to ||| [function_1] x1 [arg_2]	count=3
function	the current [function_2] ||| [function_1] [function_2]	count=7
arg	text between start and ||| start	count=1
function	moves point ||| move	count=1
arg	by handle ||| handle	count=1
module	loading specified by ||| 15	count=1
function	otherwise ||| end	count=1
module	of a ||| 1	count=1
arg	position in ||| position	count=2
function_arg	or end of an [function_1] [arg_2] ||| [function_1] change [arg_2]	count=2
function	form and [function_2] ||| [function_1] [function_2]	count=2
function	command creates a directory ||| make directory	count=1
function	a new node encapsulating ||| ewoc enter first	count=1
function	[function_1] of register ||| [function_2] [function_1]	count=3
function	this function deletes from ||| delete	count=2
function	the end of ||| end of	count=3
module	of the current buffer ||| 29 4	count=1
function_arg	[function_1] width of ||| [arg_2] [function_1]	count=2
function	marks it as obsolete ||| obsolete face	count=1
module	a lisp ||| 19	count=1
function	pad ||| s pad	count=2
function_arg	[function_1] of lists ||| [function_1] fn [arg_2]	count=1
function	ending ||| event end	count=1
function	[function_1] category ||| [function_2] [function_1]	count=2
function	of a directory ||| directory	count=1
arg	returns it ||| prompt initial history	count=1
module	a new window ||| 27	count=1
function	to [function_2] ||| [function_1] [function_2]	count=6
function	than len [function] it with ||| [function] left	count=1
function	the host name and ||| auto	count=1
function	the attributes of remote ||| remote file name inhibit	count=1
function	returns the default ||| default	count=1
module	based on this ||| 25	count=1
function	this function [function] file ||| file exists [function]	count=1
function	the sign of ||| copysign	count=1
module	to ||| 3 5	count=2
function	the current [function] after ||| [function]	count=1
function	elements of ||| vconcat	count=1
arg	string [arg_2] ||| [arg_2] [arg_1]	count=2
arg	text from start to ||| start	count=2
function	fontset ||| from fontset	count=1
module	or text ||| 31 8.2	count=1
module	variable is non-nil display-buffer ||| 27 14	count=1
function	corresponding to the significand ||| ldexp	count=1
module	that it [module] backward ||| [module] 2.2	count=1
module	to make a new ||| 27 14	count=1
function	sets the ||| set keymap	count=1
function	frame’s ||| display buffer pop up	count=1
module	the [module] ||| [module]	count=31
function	fontset according to the ||| fontset	count=1
function	this function ||| char	count=1
arg	to to to ||| to	count=2
arg	frame ||| frame	count=9
arg	[arg_1] end using ||| [arg_2] [arg_1]	count=1
module	non-nil ||| 6	count=2
arg	with newdef for any ||| newdef	count=1
arg	in alist ||| alist	count=2
function	host name ||| save	count=1
function	words ||| words	count=2
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2] face	count=4
function	raises the frame ||| auto raise	count=1
module	the host name ||| 25 2	count=1
function	registry ||| registry	count=1
module	process ||| 36 8	count=4
function	of characters ||| skip chars	count=1
module	this function executes ||| 36 3	count=1
module	variable ||| 29 2.2	count=1
function	for the text ||| text	count=1
function	file it initializes ||| auto save list	count=1
arg	prop ||| pos prop object	count=1
arg	region between start and ||| start	count=1
function	of attributes of ||| all attributes	count=1
arg	height of height lines ||| height	count=1
function	visible on the screen ||| pos visible	count=1
module	minibuffer a nonnegative integer ||| 13	count=1
arg	and ||| &rest	count=2
arg	this command fills ||| justify	count=1
function	buffer text ||| buffer	count=1
function	[function_1] cells the ||| [function_2] [function_1]	count=4
arg	frame raises it should ||| frame	count=1
module	a ||| 10.3	count=1
function	a ||| map char table	count=2
function	next ||| prev	count=1
module	variable is non-nil ||| 27	count=2
function_arg	[function_1] the display ||| [function_1] [arg_2]	count=2
function	files ||| file	count=1
arg	single-character ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
arg	matching with font-spec ||| font-spec	count=1
arg	of count [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function] if flag ||| [function] p	count=2
module	in the ||| 4.1	count=1
function	initializes auto-save-list-file-name if ||| auto save	count=1
function	throw is to ||| throw	count=1
function	style of justification ||| default justification	count=1
function	a help command ||| make help screen	count=1
module	this returns a [module_1] [module_2] ||| [module_1] [module_2]	count=8
arg	each node of tree ||| tree	count=1
arg	function returns number-or-marker ||| number-or-marker	count=1
function	this ||| pop up	count=2
arg	to coding system coding-system ||| coding-system	count=2
function	host name and process ||| list	count=1
function	of the previous ||| previous	count=1
arg	in object if ||| object limit	count=1
arg	pos as a ||| pos	count=1
function	this function sets window’s ||| set window	count=2
function	color cells the screen ||| display color cells	count=1
module	scalable ||| 37 12.9	count=1
module	non-nil ||| 2	count=1
arg	unary predicate [arg] and ||| [arg]	count=1
function	expressions debugged ||| test	count=1
function_arg	[function_1] descriptor ||| [arg_2] [function_1]	count=1
function	command enables [function] buffer ||| buffer enable [function]	count=1
module	in ||| 4.1	count=1
function	[function_1] list ||| [function_2] [function_1]	count=3
function	set it non-nil ||| auto save list	count=1
function	[function_1] [function_2] ||| [function_1] initial [function_2]	count=3
function_arg	[function_1] fname ||| [function_1] [arg_2]	count=5
arg	function finds [arg_2] ||| [arg_1] [arg_2]	count=3
module	if the value of ||| 27	count=2
module	its argument function for ||| 6 6	count=1
arg	this ||| process	count=1
arg	[arg] region of ||| old-char [arg]	count=1
function_arg	of attributes [arg_2] ||| [function_1] [arg_2]	count=2
arg	visiting file filename when ||| filename	count=1
arg	the parameter parameter ||| parameter	count=2
module	than 0 ||| 1	count=1
arg	[arg_1] in keymap ||| [arg_2] [arg_1]	count=1
arg	of charset to ||| charset	count=1
function	element ||| element	count=3
function	window as an ||| window	count=1
module	it [module] backward until ||| [module] 2.2	count=1
function	[function_1] the user ||| [function_2] mail [function_1]	count=1
function	name ||| login name	count=1
function	to ||| to	count=10
module	display-buffer may display ||| 27	count=1
module	elements are thrown away ||| 8.6	count=1
function	emacs-recognized extended attributes ||| file extended attributes	count=2
arg	underlying value value2 otherwise ||| value2	count=1
function	it initializes auto-save-list-file-name if ||| save list	count=1
function	argument ||| map	count=1
arg	by providing completion ||| collection predicate require-match initial	count=1
function	a string of ||| format seconds	count=1
function	as a single ||| as	count=1
module	standard ||| 34 1	count=1
function	sentinel ||| sentinel	count=1
function	value of this ||| pop up	count=2
function	scalable ||| scalable	count=1
arg	which collection ||| collection predicate	count=1
function	to upper case ||| s upcase	count=1
function	the mouse pointer displayed ||| frame pointer	count=1
function	your init file ||| save	count=1
function	form ||| form	count=1
function	this function sets the ||| set frame width	count=1
arg	[arg_1] and docstring ||| [arg_1] [arg_2]	count=3
function_arg	this macro [function_1] [arg_2] ||| 12 10.1 [function_1] [arg_2]	count=3
arg	named name ||| name human	count=2
function	[function_1] display table ||| [function_1] [function_2]	count=1
function	non-nil based on this ||| save list	count=1
function	the tool ||| tool	count=1
function	function ||| format	count=1
function	[function_1] from the ||| [function_2] [function_1]	count=3
function	t in bool vector ||| bool vector	count=1
arg	with rep ||| rep	count=1
function	string ||| kbd	count=2
module	files in the ||| 24 6.1	count=2
module	this ||| 32 7	count=2
function	left or ||| left	count=1
function	window at the bottom ||| at bottom	count=1
arg	[arg_1] cdr ||| [arg_2] [arg_1]	count=3
function	like assoc except that ||| assoc	count=1
arg	proper offset ||| offset	count=1
arg	named fname that acts ||| fname	count=1
function	of the startup echo ||| startup echo	count=1
arg	empties out ||| keep-record	count=1
function	except for the ||| butlast	count=1
arg	symbol base-variable ||| base-variable	count=1
function	[function_1] undo list ||| [function_2] [function_1]	count=2
rep	[module_1] [function_arg_2] ||| [module_1] file [function_arg_2]	count=1
function	display buffers ||| pop	count=1
function	or permissions ||| file modes	count=2
function	bool vectors a ||| bool vector intersection	count=1
arg	n items of list ||| n list	count=1
function	not include [function] ||| [function]	count=1
arg	tree ||| init-value tree	count=1
function	[function_1] marker ||| [function_1] [function_2]	count=2
function	already ||| save list	count=1
function	buffer in a window ||| window	count=1
function	[function_1] list buffer ||| [function_2] [function_1]	count=3
arg	abbrev-table [arg_2] ||| [arg_1] name [arg_2]	count=2
arg	from to ||| from	count=1
function	function removes ||| remap remove	count=1
function_arg	[function_1] n times ||| [function_1] fn [arg_2]	count=1
function	function sets the insertion ||| set marker insertion type	count=1
function	an alias ||| face alias	count=1
module	this variable ||| 29 2.2	count=1
function	for print-length and ||| length	count=1
arg	command a symbol ||| command	count=1
arg	warps the mouse like [arg_1] [arg_2] units of pixels rather ||| set mouse pixel position [arg_1] [arg_2]	count=1
function	variable ||| variable	count=1
function	in the usual dotted ||| ip to	count=1
function	other than the selected ||| file other	count=1
module	to use for auto-saving ||| 25 2	count=1
function	init ||| save list file	count=1
function	function converts ||| kbd	count=1
function	current major [function] is derived ||| derived [function] p	count=1
function	function tests for ||| not	count=1
function	a serial port connection ||| serial process	count=1
function	minimum ||| min	count=1
function	sets the header ||| ewoc set	count=1
function	grade ||| grade	count=1
arg	position in object rather ||| prop object limit	count=1
module	result a ||| 1	count=1
arg	items [arg] ||| [arg]	count=1
function	copying in cases ||| copying	count=1
function	a string containing a ||| substring	count=1
function_arg	[function_1] [arg_2] ||| [function_1] >grammar [arg_2]	count=3
function	below [function_2] ||| [function_2] [function_1]	count=2
arg	to the named function ||| where function props	count=1
module	text ||| 31 11	count=4
function	process id ||| save list file	count=1
module	it non-nil based ||| 25 2	count=1
function	display-buffer ||| up	count=2
module	this command replaces ||| 3	count=1
function	function sets ||| set process buffer	count=1
function	provided the buffer ||| buffer	count=1
function	function deletes a ||| delete	count=1
module	nominal ||| 7 4	count=1
function	maximum size of mark-ring ||| mark ring max	count=1
module	the first nonblank ||| 17.1	count=1
module	init ||| 25	count=1
function	is on [function_2] ||| [function_2] [function_1]	count=1
module	function moves back ||| 29	count=1
module	all spaces ||| 31	count=1
arg	nil if obarray ||| obarray	count=1
function	fit ||| fit frame to	count=1
function	frame ||| current frame	count=1
arg	in abbrev-table ||| abbrev-table	count=1
function	[function_1] window and ||| [function_2] [function_1]	count=4
module	function ||| 5	count=2
arg	to the named function ||| function	count=1
function	current buffer ||| set buffer	count=3
function	returns the definition of ||| lookup key	count=1
arg	optionally ||| &optional	count=1
function	modulo ||| mod	count=1
module	in the directory ||| 6.1	count=1
function_arg	sentinel of process ||| process sentinel process	count=2
function	list buffer see ||| list init	count=1
function	appends the contents of ||| append to file	count=1
arg	value of parameter ||| window parameter	count=1
function	echo area [function_2] ||| [function_2] [function_1]	count=1
module	other ||| 27 10	count=1
arg	fun in place ||| fun	count=1
arg	command selects a ||| wildcards	count=1
arg	to init ||| init n	count=1
arg	with arguments args ||| repeat function args	count=1
function	exit [function_2] ||| [function_1] [function_2]	count=4
function_arg	parameters [arg_2] ||| [arg_2] [function_1]	count=2
function	the top entry in ||| window top line	count=1
arg	x1 and returns ||| x1	count=1
module	encoding terminal ||| 32 10.8	count=1
function	[function_1] help command ||| [function_1] [function_2]	count=3
function	a buffer without disrupting ||| bidi	count=1
module	of the current ||| 4	count=1
arg	the lisp representation of ||| omit-port	count=1
module	horizontal position of the ||| 31 17.1	count=1
function_arg	[function_1] [arg_2] ||| 11 10.2 [function_1] local variable [arg_2]	count=3
function	this ||| char table	count=2
function	the property named ||| get	count=1
function	family ||| family	count=1
function	[function] into ||| dump [function]	count=3
arg	if regexp ||| regexp	count=1
function	an existing ||| up	count=1
function	an image ||| image	count=1
function	id ||| auto save	count=1
arg	t if object is ||| object	count=2
function	lines of continuity ||| lines	count=1
arg	value from ||| attribute	count=1
arg	defines the function ||| docstring	count=1
arg	with process [arg_2] ||| [arg_2] [arg_1]	count=1
arg	ranges from ||| front-advance rear-advance	count=1
function	[function_1] case table ||| describe [function_1] [function_2]	count=1
function	buffer-or-name ||| get buffer window	count=1
function	it ||| file	count=3
arg	that record all ||| reuse reseat	count=1
module	reads your init file ||| 2	count=1
function	available ||| available	count=1
function	backups by [function_2] ||| [function_2] [function_1]	count=7
module	split an existing window ||| 27 14	count=1
function	function insert-before-markers but inherit ||| and inherit	count=1
function	the xlfd ||| font xlfd	count=1
function	turn passing it ||| with	count=1
module	(format ||| 37 5.1	count=1
function	function [function] ||| file exists [function]	count=2
function_arg	the sign [arg_2] ||| [function_1] x1 [arg_2]	count=3
arg	[arg_1] after ||| [arg_1] [arg_2]	count=1
arg	object rather ||| object limit	count=1
arg	with [arg] measured ||| [arg]	count=1
function	the recursive [function_2] ||| [function_2] [function_1]	count=1
function	list of attributes of ||| file attributes	count=1
arg	beg to ||| beg	count=1
function	function sets ||| set file	count=3
arg	in object ||| pos prop object limit	count=1
function	a new window ||| up	count=1
arg	of args ||| &rest args	count=1
function_arg	[function_1] according to ||| [arg_2] [function_1]	count=3
function_arg	entries in [arg_2] ||| [arg_2] [function_1]	count=1
function	contents of ||| file contents	count=1
arg	[arg_1] i ||| [arg_1] [arg_2]	count=1
function	the leftmost child ||| child	count=1
function	- 3 and add ||| truncate	count=1
arg	to the strings header ||| header	count=1
function	host name and ||| auto save list file	count=1
function	byte ||| byte	count=1
function	that the minibuffer window ||| minibuffer	count=1
arg	font-spec for ||| font-spec	count=1
module	is the ||| 31	count=1
function	function reads an input ||| read input	count=1
function	function sends ||| send	count=1
function	the newest [function_2] ||| [function_2] [function_1]	count=3
function	indentation of ||| indentation	count=1
arg	with prompt ||| prompt initial history	count=1
function	section and by forward-sexp ||| parse sexp	count=1
function	compute flat outer product ||| table flat	count=1
function	font matching ||| font	count=1
module	based on this ||| 25 2	count=1
arg	the precise ||| path interactive-call	count=1
arg	convenient way ||| object stream	count=1
function	the edge coordinates ||| edges	count=1
function	only the members ||| difference	count=1
function	emacs ||| auto save list file	count=1
function	its argument function for ||| char	count=1
function	the end ||| end	count=5
arg	window defaults database ||| class component subclass	count=1
function	forward from ||| forward	count=2
function	function stops [function] ||| suspend [function]	count=3
arg	[arg] measured ||| [arg]	count=1
arg	new-char in ||| new-char	count=1
function	name of [function_2] ||| [function_1] [function_2]	count=3
function	list of version ||| version	count=1
function	function sets the parameter ||| set	count=1
arg	call [arg_2] ||| [arg_2] charset [arg_1]	count=2
arg	dirname to [arg_2] ||| [arg_1] [arg_2]	count=1
function	“succeeds” by ||| success	count=1
function	function makes ||| set	count=2
function	file it ||| save list	count=1
function	enables [function] buffer buffer-or-name ||| buffer enable [function]	count=1
function	command displays the contents ||| describe	count=1
function	string or symbol and ||| string	count=1
function_arg	deletes from [arg_2] ||| [function_1] all key [arg_2]	count=1
function_arg	existing fontset [arg_2] ||| [arg_2] [function_1]	count=4
module	sets ||| 37 12.3	count=2
arg	[arg_1] and executes ||| [arg_2] [arg_1]	count=1
module	the host name ||| 25	count=1
arg	signal to process ||| process signal	count=1
function	function returns ||| window	count=3
module	function moves point to ||| 29	count=1
function	a symbolic ||| file modes symbolic	count=1
module	frames and ||| 28	count=3
function	function sets the ||| set frame width	count=1
function	tests coverage of all ||| test coverage	count=1
arg	[arg_1] end to ||| [arg_2] [arg_1]	count=1
function	the text as xml ||| parse xml	count=1
function	window for ||| pop up	count=1
function	syntax classes ||| skip syntax backward	count=1
function	the next sibling of ||| next sibling	count=1
module	specified by ||| 19.9	count=4
arg	[arg_1] [arg_2] ||| [arg_2] newdef [arg_1]	count=4
module	after emacs reads ||| 25 2	count=1
arg	the underlying value value2 ||| value2	count=1
function_arg	[function_1] [arg_2] current buffer ||| [function_1] [arg_2]	count=3
function	displaying in ||| pop up windows	count=1
function	titleized [function_2] ||| [function_1] [function_2]	count=1
module	converts the ||| 34 8	count=1
function_arg	year [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] type ||| [arg_1] [arg_2]	count=2
function	lisp expression from ||| from	count=1
module	alters ||| 28 3.1	count=1
module	window [module] ||| [module]	count=1
arg	stream ||| stream	count=1
function	your init file it ||| list file	count=1
function	exit status ||| exit status	count=1
function	as dedicated to ||| set window dedicated p	count=1
arg	start to end ||| start end highest	count=3
function_arg	split [arg_2] ||| [arg_2] [function_1]	count=6
function	and frame-char-width ||| frame resize pixelwise	count=1
function	avoids modifying the match ||| string match	count=1
arg	end [arg_2] ||| [arg_2] [arg_1]	count=7
function	stores value ||| put char code	count=1
function	returns a regular expression ||| regexp	count=1
arg	address ||| address	count=1
function_arg	table [arg_2] ||| [function_1] tabname [arg_2]	count=1
function	currently visible on ||| visible	count=1
function	dedicated to ||| window dedicated	count=1
function	insertion type of ||| marker insertion	count=1
function	address ||| address	count=1
function	as the coding ||| set terminal coding	count=1
function	not already ||| auto save list	count=1
function	of the accessible portion ||| min	count=1
function	returns the file name ||| make auto save file name	count=1
arg	[arg_1] on frame ||| [arg_1] [arg_2]	count=1
arg	back [arg] instead ||| [arg] object	count=1
function	text [function] the ||| remove text [function]	count=1
function	list of face attributes ||| face attributes	count=1
function	it non-nil ||| auto save	count=1
module	elements of ||| 6 5	count=1
function_arg	[function_1] in string ||| [arg_2] [function_1]	count=4
function	an input method ||| input method	count=2
function	window at ||| buffer at	count=1
module	frames in the ||| 28	count=1
module	of years days ||| 38	count=1
function	emacs ||| save list	count=1
function	selinux context of ||| selinux context	count=1
function	modulo divisor in ||| mod	count=1
arg	this command adjusts ||| max-height min-height max-width min-width	count=2
function	non-nil ||| auto save list file	count=1
function	registry is specified and ||| registry	count=1
arg	of object to ||| object	count=1
arg	the strings header ||| header	count=1
module	position of the ||| 17.1	count=1
function_arg	property [arg_2] ||| [function_1] charset [arg_2]	count=1
function	car of a cons ||| car	count=1
rep	[module_1] [function_arg_2] characters that designate the ||| [module_1] [function_arg_2]	count=8
module	name and ||| 25	count=1
function_arg	indices of [arg_2] ||| [function_1] pred [arg_2]	count=1
function	variable is non-nil that ||| pop up	count=1
function	values for print-length ||| length	count=1
function	interface named ||| interface	count=1
function	[function_1] description of ||| [function_2] [function_1]	count=1
module	the [module] tty can ||| [module]	count=1
function	current buffer to ||| buffer	count=1
function	reads your init ||| file	count=1
function	context of the ||| context	count=1
function	focus when the ||| focus	count=1
module	a ||| 36 8	count=2
arg	elements in list ||| list	count=3
function	column value to ||| column	count=1
arg	from-buffer-or-name into the current ||| from-buffer-or-name start	count=1
function	corresponding to ||| to	count=1
module	allowed to split ||| 27	count=1
module	a new vector containing ||| 6 5	count=1
module	[module] is on ||| [module] 7	count=2
function	[function] values ||| [function] approximate	count=3
function	this inserts object into ||| ring insert	count=1
function	argument function ||| char	count=1
function	nil switch-to-buffer displays ||| preserve	count=1
function	this function expands the ||| expand	count=1
module	value ||| 6 6	count=2
arg	according to ||| accept-defaults no-remap position	count=1
arg	fun to [arg_2] ||| [arg_2] [arg_1]	count=1
arg	face as a face ||| face	count=1
function_arg	[function_1] [arg_2] ||| [function_1] from to [arg_2]	count=4
function_arg	this command [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
function	keyboard macro that is ||| macro	count=1
arg	with prompt ||| prompt initial	count=1
function	command from ||| command	count=1
function	of bool vectors a ||| bool vector	count=2
function	and process ||| auto	count=1
module	define ||| 20 2.4	count=1
module	of individual events ||| 20	count=1
function	execution [function_2] ||| [function_1] initial [function_2]	count=3
function	up a change group ||| change group	count=1
function	after emacs reads your ||| save	count=1
module	frames on terminal ||| 28	count=1
function	graphic display capable ||| display graphic	count=1
function	live [function] which ||| [function] live p	count=1
arg	string and ||| string	count=3
function_arg	[function_1] [arg_2] ||| [function_1] name character [arg_2]	count=23
arg	alphabetically ||| reverse	count=2
function_arg	[function_1] fun to ||| [function_1] [arg_2]	count=2
function	the text between positions ||| region	count=1
function	find-file does but ||| find	count=1
function	[function_1] paragraph ||| [function_2] [function_1]	count=1
function	and the underline ||| underline	count=1
function	returns the message currently ||| message	count=1
function	the sentinel ||| sentinel	count=1
function	visible on the ||| visible in	count=1
function	delete ||| delete	count=1
function	an alias for ||| face alias	count=1
function	non-nil if [function] on ||| [function] visible p	count=1
module	non-nil ||| 2.16	count=1
module	host name and process ||| 2	count=1
arg	pattern pattern returning ||| pattern full	count=1
arg	filename named newname ||| filename newname ok-if-exists	count=2
function	wrap ||| word wrap	count=1
function	already set ||| save	count=1
function	mode or permissions of ||| file modes	count=1
arg	directories given ||| path	count=1
rep	window [function_arg_2] ||| [module_1] [function_arg_2]	count=1
arg	end according to ||| end	count=2
function	frame that the minibuffer ||| minibuffer auto	count=1
function	prefix adding the host ||| file prefix	count=1
function_arg	[function_1] n ||| [function_1] separator [arg_2]	count=1
function	if you have not ||| auto	count=1
function_arg	symbolic link [arg_2] ||| [arg_2] [function_1]	count=2
arg	char-table that has a ||| function char-table	count=1
function	is nil switch-to-buffer ||| switch to buffer preserve window	count=1
function	forward-sexp ||| parse sexp	count=1
function	[function_1] of ||| [function_1] [function_2]	count=12
arg	are mentioned in syntaxes ||| syntaxes limit	count=1
arg	index from to ||| from	count=1
function	than ||| end	count=1
function	boundary element in the ||| boundary	count=1
function	mask bitmap ||| mask	count=1
function	inserts object into ring ||| ring insert	count=1
function	a string or vector ||| kbd	count=1
function	[function_1] the default ||| [function_1] [function_2]	count=4
function_arg	[function_1] its descriptor ||| [arg_2] [function_1]	count=1
function_arg	an autoload object ||| autoloadp object	count=1
function	the display-start position of ||| start	count=1
arg	[arg] to expand ||| [arg] expansion hook	count=1
function	this function sets the ||| set process buffer	count=1
module	buffer which ||| 23	count=1
module	variable ||| 30	count=1
module	scrolling [module_2] ||| [module_1] [module_2]	count=2
arg	[arg_1] new ||| [arg_2] [arg_1]	count=2
module	limits ||| 29 2.3	count=3
function	[function] numbers ||| x server [function]	count=3
function	host name and process ||| auto save	count=1
function_arg	composed n times ||| iteratefn fn n	count=1
arg	bold-p is nil and ||| bold-p	count=1
module	not already set it ||| 2	count=1
module	contents of ||| 4	count=1
module	if you ||| 25 2	count=1
function	sets ||| set right margin	count=1
module	the line point ||| 31	count=1
function	argument function for each ||| map char table	count=1
arg	and r a matching ||| r	count=1
function	[function_1] auto-save ||| [function_2] [function_1]	count=1
function	state of window as ||| window state	count=1
module	calls ||| 38 10	count=1
arg	so nil otherwise ||| object	count=1
function	that buffer’s point ||| point	count=1
arg	the right if count ||| count	count=1
module	initializes ||| 25	count=1
function_arg	elements in sequence ||| length sequence	count=1
function	function ||| window	count=2
function	[function_1] depth ||| [function_1] lisp eval [function_2]	count=4
function	position of the next ||| next	count=1
module	your init file ||| 25 2	count=1
arg	end in the ||| end	count=2
arg	its argument function ||| function	count=1
function	current local keymap ||| local	count=1
function_arg	the number [arg_2] ||| [function_1] pred [arg_2]	count=1
module	in the ||| 6.1	count=1
arg	to spec ||| spec	count=1
arg	string1 ||| string1	count=1
function	minibuffer [function_2] ||| [function_2] [function_1]	count=6
function	function for each element ||| table	count=1
function	host name ||| auto save list file	count=1
module	the object in ||| 8	count=1
arg	elements of alist ||| alist	count=1
function	remove whitespace at ||| s trim right	count=1
function_arg	[function_1] s with ||| [arg_2] [function_1]	count=1
function	list of the results ||| tree mapreduce	count=1
arg	[arg_1] abbrev-table ||| [arg_2] [arg_1] expansion	count=1
function_arg	field [arg_2] ||| [arg_2] [function_1]	count=1
module	shell ||| 36 2	count=1
function	name and ||| auto	count=1
function	host name ||| list	count=1
arg	for visiting filename and ||| filename	count=1
function	window selected ||| selected	count=1
arg	[arg_1] lisp expression ||| [arg_1] [arg_2]	count=2
arg	or integers ||| integers	count=1
module	this function returns a ||| 3	count=4
arg	from to index ||| from &optional	count=1
function	macro defines a help ||| make help screen	count=1
function	this function calls ||| map char	count=1
function	[function_1] fontset ||| [function_2] [function_1]	count=8
function	a cons cell or ||| listp	count=1
module	repeat events ||| 20	count=1
module	[module] to the ||| [module]	count=3
function	of list and elements ||| union	count=1
arg	[arg] to ||| [arg] expansion hook	count=1
function	dedicated to its ||| dedicated	count=1
function	buffer is on a ||| on	count=1
function	table the syntax ||| syntax	count=1
module	regular expression describing line-beginnings ||| 33	count=1
arg	suffix ||| suffix s	count=1
function	setup [function_2] ||| [function_2] [function_1]	count=2
arg	position in object if ||| prop object limit	count=1
rep	object is [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	puts the ||| put	count=1
module	file ||| 25	count=1
arg	nil with initial-value ||| initial-value	count=1
arg	of string as ||| process string	count=1
function	non-nil inhibits the startup ||| startup	count=1
function	indents the new line ||| indent	count=1
arg	position in object if ||| object limit	count=1
module	of ||| 7.13	count=1
arg	to inverse-video-p ||| inverse-video-p	count=1
function	configurations as ||| configurations	count=1
function_arg	[function_1] t2 ||| [arg_2] [function_1]	count=1
arg	command fills each paragraph ||| end justify	count=1
function	returns window’s value for ||| window	count=1
function_arg	the sign [arg_2] ||| [arg_2] [function_1]	count=5
function	for ||| map char table	count=2
function	print-length ||| length	count=2
function	to process process ||| signal process	count=1
function	argument ||| quote argument	count=1
function	to the header ||| init header	count=1
function_arg	[function_1] and b ||| [function_1] [arg_2]	count=2
module	the default function in ||| 27	count=1
arg	pop-up menu and ||| menu	count=1
arg	list plist ||| plist	count=2
function	scalable fonts to ||| scalable fonts	count=1
arg	up to n ||| s n	count=1
function	is the name to ||| name	count=1
function	the line ||| line	count=2
arg	message and type ||| message level	count=1
function	value of this ||| mark	count=1
module	returns the ||| 20	count=1
module	window for ||| 27	count=1
function	years ||| format	count=1
function	this moves point to ||| ewoc goto	count=1
module	is a ||| 5	count=1
function	[function_1] justification style ||| [function_2] [function_1]	count=3
function	[function_1] configuration list ||| [function_1] [function_2]	count=4
function	case when ||| case	count=2
function	dedicated to its buffer ||| dedicated	count=1
module	are thrown away at ||| 8.6	count=1
function	command enables [function] buffer buffer-or-name ||| buffer enable [function]	count=1
function	have ||| auto save list	count=1
function	[function_1] [function_2] ||| [function_2] and [function_1]	count=9
function	describing the [function] sentence including ||| [function]	count=1
function	[function_1] global keymap ||| [function_1] [function_2]	count=3
function	epoch to a time ||| to time	count=1
function_arg	flag of [arg_2] ||| [arg_2] [function_1]	count=1
arg	message [arg_2] ||| [arg_1] [arg_2]	count=2
function	inserts the [function_2] ||| [function_2] [function_1]	count=1
function	a window below ||| buffer below	count=1
arg	starting between start inclusive [arg_1] [arg_2] ||| 17.3 indent rigidly start [arg_1] [arg_2]	count=2
module	of activations of the ||| 19	count=1
function_arg	this [function_1] [arg_2] ||| 12 10.1 [function_1] [arg_2]	count=2
module	text from ||| 31 8.2	count=1
function	command inserts the contents ||| format insert	count=1
function	to the right or ||| right	count=1
arg	function defines the ||| docstring interactive type	count=1
function	in a new ||| buffer other	count=1
function	new vector containing all ||| vconcat	count=1
function_arg	[function_1] [arg_2] ||| [function_1] button beg end [arg_2]	count=4
function	than 0 point-min ||| end	count=1
arg	prompt and returns ||| prompt	count=1
function	file it initializes auto-save-list-file-name ||| save list	count=1
function_arg	[function_1] in list ||| [function_1] elem [arg_2]	count=2
module	abbrev expansion ||| 35	count=1
module	testing ||| 17	count=1
function	method [function_2] ||| [function_2] [function_1]	count=3
function	table or nil if ||| table	count=1
module	a string of years ||| 38 7	count=1
module	this function returns ||| 11 4	count=1
arg	call fun ||| fun	count=1
module	init file ||| 25	count=1
function	function returns the property ||| plist	count=1
arg	volume and ||| volume	count=1
function	current frame number ||| current frame	count=2
function	process id ||| list file	count=1
function_arg	the last [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] inherit ||| [function_2] [function_1]	count=4
arg	defines the function or ||| docstring	count=1
function	of screens associated with ||| screens	count=1
module	this function ||| 32 7	count=1
module	the value ||| 27 14	count=2
function_arg	[function_1] string ||| [arg_2] [function_1]	count=1
function	local [function] list of ||| [function]	count=1
function_arg	selinux context [arg_2] ||| [arg_2] [function_1]	count=1
module	a ||| 24 6.4	count=2
function	returns ||| get	count=2
module	this function ||| 24 9	count=1
arg	according to format format ||| file format beg	count=1
function	is [function] of ||| [function] p	count=1
function	function defines an abbrev ||| define	count=1
arg	according to format format ||| format beg end	count=1
function	buffer forward ||| forward	count=1
function	controls whether to ||| enable	count=1
function	greater than 0 ||| buffer	count=1
function	host name and process ||| list file	count=1
arg	to value ||| value	count=4
function	non-nil the prefixes ||| prefixes	count=1
function	it initializes auto-save-list-file-name if ||| list file	count=1
module	whether the [module] ||| [module]	count=3
function_arg	[function_1] in symbol’s ||| [arg_2] [function_1]	count=3
function	display [function_2] ||| [function_1] [function_2]	count=8
module	byte emacs has allocated ||| e	count=1
module	t if point ||| 31	count=2
function	maximum size of mark-ring ||| ring max	count=1
arg	by [arg] elements matching ||| pred [arg]	count=1
module	to floating ||| 5	count=1
function	add ||| add	count=1
function	this function returns the ||| get	count=1
function	to trigger another ||| gc cons threshold	count=1
function	and ||| auto save list	count=1
function	displays ||| switch to	count=2
arg	cyclic ordering ||| minibuf all-frames	count=2
function	char-table ||| char table range	count=1
function	the currently active minibuffer ||| minibuffer window active	count=1
function	the tabulated [function_2] ||| [function_2] [function_1]	count=4
arg	of old with new ||| old new	count=1
module	a [module_1] [module_2] ||| [module_1] [module_2]	count=2
function_arg	property to [arg_2] ||| [function_1] start end prop [arg_2]	count=2
function	the horizontal position of ||| current	count=1
function	non-nil based on this ||| save	count=1
function	process ||| set process sentinel	count=1
function	[function] by modifying ||| [function] item	count=1
function	of scroll [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] name i ||| [arg_2] [function_1]	count=5
arg	start and end ||| start end face	count=1
arg	[arg_1] exp ||| [arg_2] [arg_1]	count=1
module	variable determines whether files ||| 24	count=1
function	keyboard macro that ||| macro	count=1
function	exit ||| process exit	count=1
function_arg	[function_1] after pos ||| [function_1] change [arg_2]	count=1
arg	text in string ||| string	count=1
module	display buffers by ||| 14	count=1
module	this [module_2] ||| [module_2] [module_1] cadr cons-cell	count=1
function	the rest to ||| s capitalize	count=1
arg	custom-theme-load-path ||| no-confirm no-enable	count=1
function	set it non-nil ||| save list file	count=1
function	saved ||| save	count=1
function	quit ||| quit	count=1
function	[function_1] frame number ||| [function_2] [function_1]	count=4
function	this function sends a ||| process	count=1
function	a string in the ||| ip to string	count=1
arg	[arg_1] to table ||| [arg_2] [arg_1]	count=3
module	character set nil otherwise ||| 32	count=1
function	to tab in most ||| for tab	count=1
module	this returns [module_2] ||| [module_1] [module_2]	count=2
function	[function] on the ||| notifications get server [function]	count=1
function	empty category [function_2] ||| [function_2] [function_1]	count=1
function	already ||| list file	count=1
module	this function ||| 19 6.4	count=1
function	according to its individual ||| individual paragraphs	count=1
function	which is ||| current	count=1
module	this variable is non-nil ||| 27	count=2
function	[function_1] lines in ||| [function_2] [function_1]	count=4
module	directory for emacs ||| 38 1.1	count=1
arg	arguments to fn ||| fn &rest args	count=1
arg	the variable symbol ||| symbol	count=2
function	a message ||| message	count=1
function	reads your init file ||| auto save	count=1
function	the existing fontset ||| fontset	count=1
function	least recently-used window typically ||| pop up window	count=1
arg	buffer specified by buffer-or-name ||| buffer-or-name	count=1
arg	operation ||| count in-string	count=1
module	returns ||| 31 1	count=2
function	function inserts ||| insert file	count=1
function_arg	function displays [arg_2] ||| [function_1] other window [arg_2]	count=3
arg	[arg_1] expression ||| [arg_2] s [arg_1]	count=3
function	as modified ||| modified	count=1
function	frame to its buffer ||| frame to buffer	count=1
arg	preds ||| preds	count=1
function	forward ||| forward list	count=1
arg	pos ||| pos prop	count=1
arg	file filename as a ||| filename	count=1
function	element [function_2] ||| [function_2] [function_1]	count=3
function	the beginning of the ||| bobp	count=1
function	resource ||| resource	count=1
function	prompt string of ||| prompt	count=2
function	a file in directory ||| in directory	count=1
module	that ||| 29 4	count=1
function_arg	[function_1] and b ||| [arg_2] [function_1]	count=2
function	the state of window ||| state	count=1
function	[function] and the ||| [function] end double	count=2
function	of the beginning of ||| beginning	count=1
module	sequence a string or ||| 21 1	count=1
function	minibuffer window ||| window minibuffer	count=1
function	this function ||| window parameter	count=1
function	function reads [function_2] ||| [function_2] [function_1]	count=9
arg	function ||| function	count=10
function_arg	[function_1] process to ||| [function_1] [arg_2]	count=2
function	this sets ||| set left	count=1
function	you ||| save list file	count=1
arg	[arg_1] in keymap ||| [arg_1] [arg_2]	count=1
function	history ||| history	count=3
arg	prompt and returns the ||| prompt default	count=1
function	[function_1] the byte ||| [function_2] [function_1]	count=2
function	size of the current ||| size	count=1
function	file name ||| file name	count=6
function_arg	wrap [arg_2] ||| [function_1] [arg_2]	count=5
module	this function returns ||| 26 3	count=2
module	debugger each time it ||| 17	count=1
module	string or vector ||| 21 1	count=1
function	key ||| read key	count=1
arg	prompt ||| prompt initial	count=1
function	buffers by making new ||| up	count=1
function_arg	[function_1] from start ||| [arg_2] [function_1]	count=3
function	process file-local variables ||| local variables	count=1
function	[function_1] translation ||| [function_2] [function_1]	count=1
module	all ||| 2.16	count=1
function_arg	[function_1] args into ||| [function_1] [arg_2]	count=5
arg	[arg_1] end in ||| [arg_2] [arg_1]	count=2
module	non-nil ||| 25 2	count=2
function	allowed ||| pop up	count=1
arg	string and searches it ||| string	count=1
module	text ||| 31 8.2	count=4
function	the :stipple ||| face stipple	count=1
function	is a special form ||| special form	count=1
function	hours etc ||| seconds	count=1
function	make a new window ||| pop	count=1
function	of the edge coordinates ||| edges	count=1
arg	by copying [arg] ||| [arg]	count=3
function	list for the text ||| set text	count=1
function	unindented-ok argument ||| relative maybe	count=1
function	the abbrev table ||| abbrev table	count=2
function	display-buffer may display buffers ||| pop	count=1
arg	buffer in that ||| buffer alist	count=2
function_arg	elements in [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	the definition [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] the selected ||| [function_2] [function_1]	count=4
rep	activates [function_arg_2] ||| [module_1] set [function_arg_2]	count=4
function	throw is to return ||| throw	count=1
function	function sends ||| process	count=1
arg	function completely replaces ||| props	count=1
function_arg	[function_1] element element ||| [arg_2] [function_1]	count=1
function_arg	[function_1] on ||| [function_1] face attribute frame [arg_2]	count=1
function	complex translation [function] rather ||| [function]	count=1
module	spaces ||| 31	count=1
arg	for ||| function	count=1
function	to update [function] line ||| [function] line update	count=1
module	for the falsehood of ||| 10	count=1
function	returns the selinux context ||| selinux context	count=1
module	line which is the ||| 31 17.1	count=1
arg	of regexp in ||| regexp	count=1
function	match ||| string match p	count=2
function_arg	named property [arg_2] ||| [arg_2] [function_1]	count=3
module	and return that object ||| 6 8	count=1
function	file it initializes ||| file	count=1
arg	[arg_1] [arg_2] units of pixels rather ||| set mouse pixel position [arg_1] [arg_2]	count=2
arg	to olddef ||| olddef	count=1
function	even when it ||| even	count=1
function	of image ||| find image	count=1
function	hook ||| add hook	count=1
module	a list of ||| 6.4	count=1
function	of coding ||| coding	count=3
function_arg	[function_1] in ||| [arg_2] [function_1]	count=2
function	and process id ||| auto save	count=1
function	[function] is modified ||| [function]	count=3
function	a window below ||| below	count=1
arg	specs ||| specs	count=1
module	a new window ||| 14	count=1
function	color specification ||| color	count=1
function	bars specified for ||| bars	count=1
arg	[arg_1] end in ||| [arg_1] [arg_2]	count=2
module	for the falsehood ||| 10 3	count=1
function	host ||| list file	count=1
function	at the beginning of ||| bobp	count=1
module	function returns ||| 36 6	count=3
function	[function_1] history element ||| [function_1] [function_2]	count=1
arg	parameter to [arg_2] ||| [arg_2] [arg_1]	count=1
function	of ||| edebug test	count=1
module	returns the ||| 13	count=1
function	current frame number for ||| current frame	count=1
function	margins of window as ||| window margins	count=1
function	after ||| list file	count=1
function	a non-nil value ||| map char table	count=1
function	already set ||| auto save list file	count=1
module	symbol’s [module] value is ||| [module]	count=1
function	this function appends the ||| append to	count=1
arg	string [arg_2] ||| [arg_1] collection [arg_2]	count=1
function	emacs reads your init ||| list file	count=1
module	appends ||| 24 4	count=1
function	or a marker ||| or marker	count=2
module	existing files ||| 24	count=1
function	after emacs reads ||| save	count=1
module	init file it ||| 25 2	count=1
function	table the category ||| category	count=1
arg	associates sentinel with ||| sentinel	count=1
function	the previous sibling of ||| prev sibling	count=1
function	[function_1] visited ||| [function_2] [function_1]	count=3
function_arg	forward count ||| forward line count	count=1
arg	supported by coding-system ||| coding-system	count=1
function	tests coverage of all ||| coverage	count=1
function	string or ||| kbd	count=1
function_arg	text [arg_2] ||| [function_1] pixel size [arg_2] mode-and-header-line	count=1
function	the file name ||| terminal name	count=1
function	- 3 and ||| truncate	count=1
function	count ||| count	count=1
arg	[arg] naming ||| [arg]	count=3
function	element that [function_2] ||| [function_2] [function_1]	count=4
module	name ||| 25	count=1
function	of bool vectors ||| bool vector union	count=1
arg	printed representation of object ||| object	count=1
function	a garbage ||| garbage	count=1
function_arg	list -remove [arg_2] ||| [arg_2] [function_1]	count=1
arg	face [arg_2] ||| [arg_2] [arg_1]	count=2
module	of arguments is a ||| 12 5	count=1
function	bottom edge ||| window trailing edge	count=1
function	raises the ||| raise	count=1
arg	for the event after ||| after	count=1
function_arg	row and [arg_2] ||| [function_1] [arg_2]	count=2
arg	at position position in ||| position	count=1
arg	the named function ||| function props	count=1
function	has the same ||| same	count=1
function_arg	function sets [arg_2] ||| [function_1] frame [arg_2]	count=2
function	to the right or ||| scroll right	count=1
function	by copying ||| by copying	count=6
function	new node encapsulating ||| enter first	count=1
arg	index from ||| from &optional to	count=1
module	returns t if ||| 31	count=2
arg	them [arg_2] ||| [arg_2] [arg_1]	count=1
function	function ||| minibuffer	count=1
module	symbol of ||| 4	count=1
function	reads ||| list file	count=1
function	the current ||| types	count=1
function	permissions as ||| modes	count=1
function	change group for ||| change group	count=2
function	have not ||| save list	count=1
arg	format format ||| file format beg end	count=1
function	reads your init file ||| list file	count=1
function	initializes auto-save-list-file-name if ||| auto save list file	count=1
module	of activations ||| 19 13	count=1
module	existing files in ||| 24 6.1	count=2
function	[function_1] selected window ||| [function_2] [function_1]	count=3
function	sets the debug-on-exit flag ||| backtrace	count=1
function	the query ||| query on exit flag	count=1
function	function returns [function] for which ||| window configuration [function]	count=1
function	[function_1] just inserted ||| [function_1] [function_2]	count=4
arg	filename with ||| filename	count=1
rep	reads [function_arg_2] ||| [module_1] read [function_arg_2]	count=2
function	means display-buffer may ||| pop up	count=1
function	string containing a ||| substring	count=1
function	function returns the contents ||| get	count=1
function	this ||| map char table	count=2
function	the current buffer forward ||| forward	count=1
module	of ||| 31 1	count=2
module	the first nonblank ||| 31	count=1
arg	for regexp separator ||| separator s	count=1
function	of extra slot ||| table extra slot	count=1
arg	and suffix holds the ||| suffix	count=1
arg	and returns value ||| value	count=1
module	t if point is ||| 1	count=2
arg	the property ||| property	count=2
function	this function ||| horizontal	count=1
arg	user by providing completion ||| collection predicate require-match initial	count=1
function	puts ||| state put	count=1
function	reads your init file ||| save list	count=1
module	this function ||| 37 9.1	count=1
arg	to non-nil bind it ||| &rest else	count=1
module	current line which ||| 31	count=1
function	except that if the ||| p	count=1
module	returns window’s value ||| 27	count=1
arg	function finds and opens ||| missing-ok nomessage nosuffix must-suffix	count=1
function	after ||| save	count=1
arg	key ||| map key	count=1
module	register ||| 31 21	count=1
function	of ||| event end	count=1
function_arg	buffer [arg_2] ||| [function_1] [arg_2]	count=2
arg	start to [arg_2] ||| [arg_2] [arg_1]	count=8
arg	function sets the prop ||| prop	count=1
function	auto-save-list-file-name ||| list file	count=1
function	such [function] it ||| [function] p	count=1
arg	function ||| frame	count=7
function	width in columns of ||| width	count=2
function_arg	[function_1] position ||| [function_1] [arg_2]	count=4
module	by making ||| 27 14	count=1
function	set ||| list file	count=1
arg	of eol-coding ||| eol-coding	count=1
function	if you ||| auto save list file	count=1
arg	start and end in ||| start end	count=5
function	selected frame ||| selected frame	count=1
function	frame in order to ||| frame	count=1
function	returns the property list ||| plist	count=1
function	make a new ||| pop up	count=2
function	as a string ||| string	count=3
function	saves [function] ||| [function] as kill	count=1
module	find-file ||| 24 1.1	count=1
function	[function_1] fit the ||| [function_2] [function_1]	count=1
arg	start to end ||| start end	count=7
module	lisp programs and the ||| 30 7	count=1
module	this function returns the ||| 32 8	count=1
function	the prefix ||| describe prefix	count=1
module	[module] with element ||| [module]	count=1
function_arg	[function_1] buffer in ||| [arg_2] [function_1]	count=4
module	key sequence a string ||| 1	count=1
arg	frame to a ||| frame	count=1
arg	args into the ||| args	count=1
function	insertion ||| insertion	count=2
module	vector ||| 21 1	count=2
function	specifies the custom ||| custom	count=2
module	it [module] backward ||| [module] 2.2	count=1
arg	satisfying ||| pred	count=1
module	init file ||| 25 2	count=1
module	emacs reads ||| 2	count=1
function	but inherit ||| and inherit	count=1
function	modulo divisor in other ||| mod	count=1
function	for the text between ||| set text properties	count=1
function	category ||| define category	count=1
function	right margins ||| window margins	count=1
function	configuration list that describes ||| configuration	count=1
function	the file name ||| make auto save file name	count=1
module	that has a ||| 6 6	count=1
function	defines a new fontset ||| create fontset from fontset spec	count=1
arg	[arg] to ||| [arg] name expansion hook	count=1
function	char-table ||| table range	count=1
arg	named fname that ||| fname	count=1
arg	file filename if the ||| filename	count=1
function	[function_1] element that ||| [function_1] [function_2]	count=2
module	your ||| 25 2	count=2
arg	like indent-rigidly except that ||| end columns nochange-regexp	count=1
function	sentinel ||| process sentinel	count=1
function	it initializes ||| list	count=1
module	this ||| 37 6	count=1
module	of ||| 31 17.1	count=4
function	zip ||| zip	count=3
function	value ||| mark	count=1
function	function returns the beginning ||| beginning	count=1
arg	non-nil [arg] ||| [arg]	count=1
function_arg	[function_1] [arg_2] to expand to expansion ||| [function_1] [arg_2]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] position [arg_2]	count=3
module	invisible ||| 37 6	count=1
function	after emacs reads your ||| list file	count=1
function	has ||| map	count=1
module	display buffers by ||| 27 14	count=1
arg	of the two strings ||| string1 string2	count=1
function	a special ||| special	count=1
arg	list in listname ||| listname	count=1
function	element that completes ||| complete history element	count=2
arg	the process ||| process	count=1
arg	it looks in the [arg_1] [arg_2] naming the actual ||| [arg_2] [arg_1]	count=8
function	backup [function_2] ||| [function_1] [function_2]	count=1
function	it initializes auto-save-list-file-name ||| auto	count=1
function	in the ||| ip to	count=1
arg	by the variable custom-theme-load-path ||| no-confirm no-enable	count=1
module	to ||| 28 14	count=1
function	possible name ||| name	count=1
function_arg	[function_1] [arg_2] ||| [function_1] p filename1 [arg_2]	count=3
arg	position in object if ||| object	count=1
function	if you have ||| auto save	count=1
arg	function associates the ||| rgb frame	count=1
module	this function returns the ||| 31 17.1	count=1
function	[function_1] [function_2] ||| [function_2] mail [function_1]	count=3
function	height of the ||| height	count=1
function	inhibits the startup ||| startup	count=1
function	coding ||| find coding	count=3
arg	parameter ||| window parameter	count=2
module	the text between ||| 19.2	count=1
module	of years ||| 38 7	count=1
module	[module_1] in ||| [module_1] [module_2]	count=8
module	[module_1] a ||| [module_1] [module_2]	count=23
module	returns the ending ||| 20 7.13	count=1
arg	message and type ||| message level buffer-name	count=1
module	calls ||| 6	count=2
arg	[arg_1] frame to ||| [arg_2] height [arg_1]	count=3
module	[module] new ||| [module]	count=5
function	inserts the contents ||| format insert	count=1
function	below the [function_2] ||| [function_1] [function_2]	count=2
function	an alist of ||| alist	count=2
arg	images in [arg] between positions ||| start end [arg]	count=1
function	function sets window’s previous ||| set window prev	count=1
function	make a new window ||| pop up	count=2
module	the number of ||| 6	count=1
function	your init file it ||| auto	count=1
function	input method name with ||| input method name	count=1
module	is none ||| 37 21.3	count=1
function	stores ||| char code	count=1
arg	for filename ||| filename attribute-alist	count=2
module	this function moves point ||| 29	count=1
function	the top entry in ||| window top	count=1
function	help ||| help screen	count=1
module	limits of the accessible ||| 2.3	count=2
arg	from to index ||| from &optional to step	count=1
function	face [function_1] [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] current-face and ||| [function_1] obsolete-face [arg_2]	count=2
module	of elements ||| 6	count=1
function	functions return the height ||| height	count=1
function	new fontset according to ||| from fontset spec	count=1
function	a help ||| make help	count=1
function	it non-nil ||| save list file	count=1
function	first [function] and subsequent ||| [function]	count=1
function	[function_1] files by ||| [function_2] [function_1]	count=3
module	this ||| 10	count=1
function	returns ||| vconcat	count=1
function	current buffer’s [function_2] ||| [function_1] [function_2] line update all	count=1
function_arg	[function_1] [arg_2] the current buffer defined ||| [function_1] region start end [arg_2]	count=3
function	[function_1] depth allowed ||| [function_2] [function_1]	count=4
arg	whose name ||| name	count=1
function	inserts before [function_2] ||| [function_1] abbrev table [function_2]	count=2
function	list of face ||| font face	count=1
arg	in syntaxes a ||| syntaxes limit	count=1
function	text ||| set text properties	count=1
module	containing all the ||| 5	count=1
module	of ||| 6.6	count=1
module	the ||| 31	count=7
arg	by order ||| order	count=1
function	the combination limit for ||| window combination limit	count=1
module	containing all the ||| 6	count=1
arg	[arg_1] n ||| [arg_2] [arg_1]	count=2
function	making ||| pop	count=1
function	removes left [function_2] ||| [function_1] [function_2]	count=3
arg	to expansion and call [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
function_arg	before [arg_2] ||| [function_1] ewoc [arg_2]	count=1
module	function returns the ||| 3	count=3
function_arg	variable [arg_2] ||| [function_1] [arg_2]	count=2
arg	and pushes ||| nomsg activate	count=1
function	days hours etc ||| format	count=1
function	name for a ||| name	count=1
function	group for buffer buffer ||| group	count=1
function	position ||| current	count=1
function	is non-nil that means ||| pop	count=1
function_arg	default [arg_2] ||| [arg_2] [function_1]	count=1
function	list specifying the previous ||| window prev buffers	count=1
arg	regexp in ||| regexp s &optional	count=1
arg	filename into the current ||| filename visit beg end	count=1
function	of coding systems that ||| find coding systems	count=3
arg	file [arg_2] ||| [arg_2] [arg_1]	count=2
module	is a minibuffer ||| 19 14	count=1
module	that it [module] backward until ||| [module] 2.2	count=1
arg	current-name ||| current-name when	count=1
module	frames on ||| 28	count=2
arg	overlay to buffer and ||| buffer	count=1
function	frame to ||| frame to	count=1
function	init file ||| auto save list	count=1
function	on ||| save list	count=1
arg	charset to ||| charset	count=2
function	state of emacs ||| emacs	count=1
arg	n [arg_2] ||| [arg_1] wrap [arg_2]	count=1
function	node encapsulating ||| ewoc enter first	count=1
function	obsolete indicating ||| obsolete	count=1
function	each argument is strictly ||| >	count=1
module	whether symbol’s [module] value is ||| [module]	count=1
function	initializes ||| list file	count=1
function	function ||| buffer end	count=1
module	returns the ||| 27 3	count=1
function	it non-nil based on ||| list	count=1
function	not already set it ||| auto save	count=1
function	line [function_2] ||| [function_1] [function_2]	count=5
module	thrown away at the ||| 31 8.6	count=1
module	first nonblank character ||| 31 17.1	count=1
function	display ||| display	count=3
function	the tool [function_2] ||| [function_1] [function_2]	count=1
function	window below [function_2] ||| [function_1] [function_2]	count=2
module	all the [module] ||| [module] 7	count=2
function_arg	type of [arg_2] ||| [function_1] [arg_2]	count=1
arg	according to ||| keyword-args	count=1
function	local keymap or nil ||| local	count=1
function	the syntax ||| syntax	count=4
function	[function] beginning or ||| [function] overlay change	count=6
function	by rounding downward ||| floor	count=1
arg	to ||| process	count=1
arg	of ||| list	count=1
function	of the character at ||| at	count=1
function	frame ||| frame width	count=1
function	function specifies a pair ||| syntax pair	count=1
function	underline ||| underline	count=1
function	copying in ||| copying	count=1
function	removes function from the ||| remove	count=1
module	is ||| 27	count=3
module	that means display-buffer may ||| 27	count=1
module	this ||| 21 5	count=1
arg	if [arg_2] ||| bold [arg_1] [arg_2]	count=4
module	expressions ||| 2.16	count=1
function	be fit ||| fit	count=1
module	of an ||| 4	count=1
function	a [function] a ||| [function]	count=1
arg	in the prop ||| pos prop object	count=1
arg	pos ||| pos string area	count=1
function	text ||| change text	count=1
function	minimum distance between ||| minimum offset	count=1
function	copy ||| copy	count=4
arg	[arg_1] suffix ||| [arg_2] [arg_1]	count=5
function	characters ||| chars	count=2
function	the parameters ||| frame parameters	count=1
function	function returns the ||| get	count=2
arg	[arg_1] [arg_2] ||| [arg_2] string [arg_1]	count=2
function	largest or least recently-used ||| buffer pop up	count=1
function_arg	positions [arg_2] ||| [function_1] all [arg_2]	count=3
function	expands the [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] by handle ||| [arg_2] [function_1]	count=1
module	buffer so ||| 29	count=1
function	nil switch-to-buffer ||| preserve window	count=1
function	this variable is non-nil ||| up	count=2
function	depth allowed in ||| depth	count=1
arg	code-point ||| code-point	count=1
arg	assuming that string ||| string	count=1
function_arg	the [function_1] [arg_2] ||| [function_1] elem [arg_2]	count=3
function	to tab ||| for tab	count=1
arg	position ||| position	count=4
arg	within ||| partially	count=1
arg	each element of tree ||| folder init-value tree	count=1
function	current display-width ||| width	count=1
function	current buffer using text ||| make text	count=1
module	is at ||| 31 1	count=2
module	as [module] ||| [module] 6.4	count=3
arg	synchronously ||| infile destination	count=1
module	if non-nil ||| 17 2.16	count=1
function	auto-save-list-file-name if you have ||| save list	count=1
function	returns a new ||| vconcat	count=1
function_arg	sets the [arg_2] ||| [function_1] [arg_2]	count=5
function	[function_1] [function_2] ||| [function_2] history [function_1]	count=6
function	have not ||| file	count=1
function	[function_1] package ||| [function_1] [function_2]	count=1
function	syntax classes ||| syntax	count=1
function	already ||| save list file	count=1
function	frame that the minibuffer ||| minibuffer	count=1
arg	user by providing completion ||| predicate require-match initial history default	count=1
arg	initial value value and ||| value	count=1
function	this stores ||| put	count=1
function	coding system to use ||| coding system	count=2
function	frame ||| frame height	count=1
function	next newer history element ||| next matching history element	count=1
function	this function makes ||| set	count=1
function	or a ||| display message or	count=1
arg	repetitions of character ||| character	count=1
function_arg	extra slot [arg_2] ||| [function_1] [arg_2]	count=2
arg	object rather than nil ||| prop object limit	count=1
function	[function_1] name ||| [function_1] [function_2]	count=16
function	line at certain places ||| fill nobreak predicate	count=1
arg	of count [arg_2] ||| [arg_1] [arg_2]	count=3
arg	object if ||| prop object	count=1
module	return that ||| 6 8	count=1
arg	and suffix ||| suffix s	count=1
function	the next sibling of ||| window next sibling	count=1
arg	from pos ||| pos	count=2
function	next ||| next	count=5
function	file in directory ||| file in directory	count=2
function	display table of ||| display	count=1
function	syntax ||| syntax	count=7
function	the shell ||| process shell command	count=1
function	attributes of remote ||| remote file name	count=1
module	returns a ||| 32 3	count=1
module	of the property list ||| 9.2	count=1
function	[function_1] line ||| [function_1] [function_2]	count=12
arg	value cell of symbol ||| symbol value	count=1
module	is a [module] and ||| [module] 2.1	count=1
function_arg	command [arg_2] ||| [arg_2] [function_1]	count=2
arg	is s1 ||| s1	count=1
module	entire contents are accessible ||| 4	count=1
function	emacs reads your ||| file	count=1
function	by choosing an existing ||| display buffer use some	count=1
module	that must be allocated ||| e	count=1
arg	this function makes characters [arg_1] [arg_2] ||| set case syntax delims [arg_1] [arg_2] case-table	count=3
function	button ||| button	count=4
arg	to key much ||| key	count=1
function	command quits window and ||| quit	count=1
function	host name and process ||| file	count=1
module	match for ||| 33	count=1
function	global ||| global key	count=1
function	previous [function_2] ||| [function_2] [function_1]	count=10
module	point-min otherwise ||| 29	count=1
arg	normal [arg_1] [arg_2] ||| bold [arg_1] [arg_2]	count=4
function	previous ||| prev	count=3
function	this regular expression ||| regexp	count=1
function	a non-nil ||| map char table	count=1
function	line ||| line format	count=1
function_arg	[function_1] frame can ||| [arg_2] [function_1]	count=2
module	this function converts the ||| 21	count=1
arg	[arg_1] to time ||| [arg_2] [arg_1]	count=2
module	keymap or nil if ||| 21	count=1
function	reasonable values ||| custom add frequent value	count=1
function	nil switch-to-buffer ||| to buffer preserve window	count=1
arg	starting with from and ||| from	count=1
module	this command replaces the ||| 3	count=1
module	current ||| 27 24	count=1
function	this ||| event	count=1
function	if ||| file	count=1
module	this function ||| 31 1	count=2
arg	only [arg_2] ||| [arg_2] [arg_1]	count=4
function	auto-save-list-file-name if you have ||| auto save list file	count=1
function	the next ||| window next	count=1
arg	[arg_1] system coding-system ||| [arg_1] [arg_2]	count=5
function	function stores ||| put char code	count=1
function_arg	[function_1] to filename ||| [arg_2] [function_1]	count=5
function	top entry ||| window top line	count=1
arg	object1 and object2 ||| object1 object2	count=1
function	[function] face face ||| [function]	count=3
arg	button ||| button	count=1
function_arg	selinux context [arg_2] ||| [function_1] [arg_2]	count=1
module	contents are accessible ||| 29 4	count=1
function	the state of window ||| window state	count=1
module	the value ||| 14	count=2
function	has a non-nil value ||| char	count=1
function_arg	[function_1] beg ||| [arg_2] [function_1]	count=5
function	supports the saveunder feature ||| display save under	count=1
function	the emacs-recognized extended ||| file extended	count=1
function	olddef ||| substitute key definition	count=1
arg	if flag is non-nil ||| flag	count=1
function	selinux [function_2] ||| [function_2] [function_1]	count=4
function_arg	this function returns the [function_1] [arg_2] ||| 3 4 [function_1] [arg_2]	count=1
arg	font-spec ||| font-spec	count=1
arg	equal to the ||| elem	count=1
function	this function makes table ||| set	count=1
function	you ||| list	count=1
function	emacs reads ||| auto save list file	count=1
function	element [function_2] ||| [function_2] history [function_1]	count=3
function	calls ||| char	count=1
function	display-buffer is allowed to ||| pop	count=1
function	[function] cover ||| [function] at	count=3
function	epoch to a time ||| seconds to time	count=1
arg	and b ||| a b	count=1
function	[function] all live ||| terminal [function]	count=1
function	returns a frame configuration ||| current frame configuration	count=1
arg	[arg_1] the symbol ||| [arg_2] [arg_1]	count=6
function	[function_1] auto-save file ||| [function_2] [function_1]	count=1
function	comparing them numerically ||| sort	count=1
arg	[arg_1] rep ||| [arg_2] string [arg_1]	count=1
arg	function associates sentinel with ||| sentinel	count=1
function	coding systems that could ||| find coding systems	count=3
function	years days ||| format	count=1
module	this command ||| 32 7	count=1
function	[function_1] command ||| [function_2] [function_1]	count=4
function_arg	[function_1] of face ||| [arg_2] [function_1]	count=10
function	state of ||| window state	count=1
function	current state of emacs ||| emacs	count=1
function	this sets the face ||| set	count=1
module	text from the ||| 31	count=1
function	[function_1] of the ||| [function_1] [function_2]	count=12
function	input is currently ||| input	count=1
function	parameters ||| parameters	count=1
module	return the number of ||| 6	count=1
function_arg	the default [arg_2] ||| [arg_2] [function_1]	count=1
arg	to n [arg_2] ||| [arg_2] [arg_1]	count=1
function	list of active ||| current active	count=1
module	downward ||| 3 5	count=1
arg	from to index to ||| from &optional	count=1
arg	if ||| wrap	count=1
arg	sequence the results which ||| sequence	count=1
function	returns a list of ||| list	count=1
function_arg	displays the [arg_2] ||| [arg_2] [function_1]	count=8
arg	descriptor ||| descriptor	count=1
function	your ||| auto save list file	count=1
module	of ||| 19 13	count=4
module	that ||| 6 6	count=2
function	returns the sentinel of ||| process sentinel	count=1
function	as a vector never ||| vector	count=1
function	the shell ||| call process shell command	count=1
arg	and suffix ||| predicate suffix	count=1
function	that has a ||| map	count=1
function	your init ||| auto save list	count=1
module	variable’s value is ||| 28 3.2	count=1
function_arg	split s [arg_2] ||| [arg_2] [function_1]	count=2
module	minibuffer and returns ||| 19	count=1
arg	bold-p ||| bold-p	count=1
function	function returns the length ||| length	count=1
function	as dedicated ||| set window dedicated	count=1
arg	calls fn ||| fn	count=1
module	used for displaying ||| 37	count=1
function	[function] of ||| [function] history element	count=1
function_arg	macro defines [arg_2] ||| [arg_2] [function_1]	count=2
function	default value ||| default value	count=2
module	[module_1] regardless of ||| [module_1] [module_2]	count=2
arg	index ||| index	count=1
function	this function ||| interactively	count=1
function	permissions as an integer ||| modes	count=1
module	emacs ||| 38	count=9
module	is the [module_2] ||| [module_2] [module_1]	count=3
function	current major [function] is ||| derived [function] p	count=1
function	file mode or ||| file	count=1
module	is set in ||| 3 8	count=1
function	table otherwise nil ||| table	count=1
module	all the elements of ||| 6 5	count=1
function	prefix adding the host ||| auto save list file prefix	count=1
arg	alist has a ||| buffer alist	count=1
module	at the ||| 31 1	count=2
function	string in the usual ||| bindat ip to string	count=1
function	years days hours etc ||| format seconds	count=1
module	is not already ||| 5 5	count=1
module	selected ||| 28 9	count=1
function	you have not ||| auto	count=1
function	the window ||| get window	count=1
module	[module] string-or-char ||| [module]	count=3
function	function sets ||| set char table	count=1
arg	load automatically from filename ||| filename	count=1
arg	of string [arg_2] ||| [arg_1] collection [arg_2]	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=44
module	of the [module] of the ||| [module] 2	count=1
module	function returns a ||| 6.4	count=1
module	the ||| 21 1	count=2
function	return the position that ||| position	count=1
module	lsh ||| 3 8	count=1
function	host name and ||| list file	count=1
function	based ||| list file	count=1
function	a resource ||| resource	count=1
function	means ||| up	count=1
function	all adjacent whitespace characters ||| s collapse whitespace	count=1
function	counts the number ||| count	count=1
function	startup echo area ||| inhibit startup echo area	count=1
module	vector ||| 5	count=1
function	copies the sign of ||| copysign	count=1
function	a string in ||| bindat ip to string	count=1
function	hash ||| hash	count=1
arg	filename but does ||| filename wildcards	count=2
module	text property ||| 31	count=1
function	split s up to ||| split	count=1
module	as the beginning of ||| 35 4	count=1
arg	start and end in ||| start end props	count=1
function	emacs and returns ||| emacs	count=1
module	existing window to make ||| 27 14	count=1
arg	has a non-nil value ||| function	count=1
function	function puts ||| window state put	count=1
function	recursive ||| recursive	count=1
function	forward ||| forward	count=7
module	converts the ||| 21	count=1
function	you compare two substrings ||| compare buffer substrings	count=1
module	of elements that ||| 6 7	count=1
function	if variable either ||| if	count=1
module	into ||| 1	count=1
function	a string in ||| ip to string	count=1
function_arg	[function_1] reg ||| [function_1] [arg_2]	count=7
module	to split ||| 27	count=1
function	sets the :underline attribute ||| set face	count=1
function	dimensions of graphical ||| dimensions	count=1
arg	this function returns ||| frame	count=5
function	based on ||| list	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=3
arg	the base [arg] ||| [arg]	count=1
arg	which collection will ||| collection predicate	count=1
arg	region beg through ||| beg	count=1
module	the buffer associated ||| 9.1	count=1
module	after ||| 25	count=1
function	not already ||| list file	count=1
module	category ||| 34 8	count=1
function	header line to allow ||| init header	count=1
function	as dedicated to its ||| dedicated	count=1
arg	of the parameter parameter ||| parameter	count=2
function	color [function_2] ||| [function_1] [function_2]	count=4
module	returns ||| 27 25	count=2
function	split an ||| pop up	count=1
function	buffer by choosing an ||| display buffer use some	count=1
arg	[arg_1] to buffer ||| [arg_2] [arg_1]	count=1
function_arg	removes function [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] s with ||| [function_1] [arg_2]	count=1
module	keymap or nil ||| 21	count=1
function	not ||| auto save	count=1
module	if there is none ||| 21.3	count=1
function	the entire [function] ||| [function]	count=3
function	non-nil display-buffer is allowed ||| pop up	count=1
function	margin of the ||| margin	count=1
function	string in ||| to string	count=1
function	this variable ||| mark	count=1
module	that has a ||| 6	count=2
arg	function [arg] ||| [arg]	count=1
function	moves window’s bottom edge ||| adjust window trailing edge	count=1
function	reads and returns a ||| read	count=1
module	this function returns a ||| 32 10.3	count=1
function	non-nil ||| map	count=1
function	obsolete ||| make obsolete	count=1
function	height or body width ||| body size	count=1
function_arg	[function_1] window to ||| [arg_2] [function_1]	count=2
module	the [module_1] [module_2] ||| [module_1] [module_2]	count=12
module	function tests for the ||| 3	count=1
function	if you have not ||| save list	count=1
function	[function_1] form and ||| [function_1] [function_2]	count=3
arg	marker marker to type ||| marker type	count=1
function	expands ||| expand	count=1
function	reverse ||| reverse	count=1
arg	this command fills ||| justify nosqueeze	count=1
function	substring ||| substring	count=1
function	to be fit by ||| fit frame	count=1
arg	pushes a copy of ||| nomsg activate	count=1
function	returns the backing ||| display backing	count=1
module	regular expression searched ||| 33	count=1
arg	width ||| width	count=1
function	set it ||| auto	count=1
function_arg	[function_1] end according ||| [function_1] region start [arg_2]	count=1
function	returns the query flag ||| query on exit flag	count=1
arg	subdirectory of dir ||| dir	count=1
function	help command named ||| help screen	count=1
function	backup files ||| backup	count=1
arg	function [arg] the ||| autoload name [arg]	count=1
function_arg	function [arg_2] ||| [function_1] alias obsolete-name [arg_2]	count=1
function	you have not ||| list file	count=1
function	[function] item in ||| [function]	count=1
function	the leftmost column of ||| window left column	count=1
module	function converts the ||| 21	count=1
function	calls ||| map char	count=1
function	backup ||| backup	count=3
function	name and process ||| auto save	count=1
function	returns the ||| get	count=2
function	this creates and ||| make	count=1
module	initializes auto-save-list-file-name if ||| 25 2	count=1
module	delete ||| 31 7	count=1
arg	call ||| arg from-code to-code	count=1
arg	for the character character ||| character	count=1
function	current heap size ||| gc cons percentage	count=1
arg	sig and exponent ||| sig	count=1
module	[module] t if ||| [module]	count=1
function	buffer’s auto-save file ||| auto save file	count=2
arg	respectively at ||| ewoc	count=1
function	buffer names for buffers ||| buffer names	count=1
function	count ||| s count	count=1
function	environment variable values ||| substitute in	count=1
function	have not already set ||| auto	count=1
function	the prefix ||| prefix	count=1
function	function executes the shell ||| process shell command	count=1
arg	x1 and returns the ||| x1	count=1
function_arg	parameters of [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	removes function [arg_2] ||| 12 10.1 [function_1] [arg_2]	count=2
function	directory that is ||| directory	count=1
function	indents ||| indent	count=2
function	the directory ||| directory	count=1
arg	regular expression regexp ||| regexp limit	count=1
function	absolute file name ||| file name	count=1
module	return a ||| dash	count=25
function	exit status of process ||| exit status	count=1
arg	and [arg_2] ||| [arg_2] [arg_1]	count=1
module	a ||| 38	count=1
function	window as an argument ||| window	count=1
function	you have not ||| auto save list	count=1
arg	object rather than ||| prop object limit	count=1
module	in ||| 6.1	count=1
module	value ||| 25	count=1
function	to dashed-words ||| s dashed words	count=1
function	the insertion type ||| marker insertion	count=1
module	is the [module] ||| 31 [module]	count=1
module	in ||| 29 4	count=1
arg	to focus-frame ||| focus-frame	count=1
function	[function_1] sibling of ||| [function_1] [function_2]	count=4
function_arg	name filename ||| name completion filename	count=1
function	set ||| save list	count=1
function	new window ||| up	count=1
module	is the horizontal ||| 31	count=1
module	minibuffer ||| 28 11	count=1
module	this [module_2] ||| [module_2] [module_1]	count=8
function	edebug binds debug-on-error to ||| edebug	count=1
function	the standard ||| standard	count=2
function	to the ||| add	count=1
module	minibuffer a nonnegative ||| 13	count=1
function	days ||| format	count=1
function	the same [function] ||| [function]	count=1
arg	through ||| form &rest more	count=1
function	and the text ||| text	count=1
function_arg	t if [arg_2] ||| [arg_2] [function_1]	count=1
function	supports the saveunder feature ||| save under	count=1
function	matching ||| matching	count=1
function	to tab ||| tab	count=1
function_arg	parent of [arg_2] ||| [function_1] [arg_2]	count=1
function	the indentation of ||| current indentation	count=1
module	or text ||| 31	count=1
function_arg	[function_1] [arg_2] ||| [function_1] before ewoc node [arg_2]	count=16
function	a copy of the ||| properties	count=1
function	returns the sentinel of ||| sentinel	count=1
function	makes a button ||| button	count=1
function	set it non-nil based ||| auto save list	count=1
arg	character old-char with ||| old-char	count=1
arg	x as ||| x	count=1
arg	collection will operate ||| collection predicate	count=1
function	make a new ||| pop	count=1
arg	if regexp ||| regexp limit greedy	count=1
module	this function defines a ||| 5	count=1
module	containing all ||| 6	count=1
function_arg	the significand [arg_2] ||| [function_1] [arg_2]	count=4
module	frame and ||| 28	count=1
module	assoc ||| 4 5	count=1
arg	fn ||| fn list	count=1
function	to a string in ||| ip to string	count=1
function	string made up ||| string	count=1
arg	[arg_1] through the ||| [arg_1] form [arg_2]	count=3
arg	images in [arg] between ||| start end [arg]	count=1
function	with [function] ||| [function]	count=1
function	the frame that the ||| window frame	count=1
function	calls its ||| map char table	count=1
function	system to ||| system	count=2
module	by emacs to ||| 38	count=1
function_arg	input method input-method ||| input method input-method	count=1
rep	[module_1] name filename ||| [module_1] [function_arg_2]	count=1
function	local [function] or nil ||| current local [function]	count=1
arg	handy way ||| function append local	count=1
function	indentation ||| indentation	count=1
function	[function_1] bottom of ||| [function_1] [function_2]	count=3
arg	all items in list ||| list	count=1
arg	by delta lines ||| delta horizontal	count=1
function_arg	[function_1] [arg_2] the current buffer ||| 37 9.3 [function_1] [arg_2] sorted	count=3
function	table ||| table	count=18
function_arg	the insertion [arg_2] ||| [arg_2] [function_1]	count=2
arg	if alist has ||| buffer alist	count=1
function	[function_1] that ||| [function_2] [function_1]	count=9
module	a string constant into ||| 1	count=1
function	that are ||| count population	count=1
module	window to make ||| 27 14	count=1
function	for print-length ||| print length	count=1
function	file ||| auto save file	count=1
module	of the [module] ||| [module]	count=4
function	will make it ||| buffer	count=1
function	each element ||| char table	count=1
function	creates ||| hash	count=1
module	than 0 ||| 29	count=1
function	defines a pop-up menu ||| menu define	count=1
module	buffer or the limits ||| 29 2.3	count=2
function_arg	last n items ||| drop last n	count=1
arg	end using collection ||| end collection	count=2
arg	value to the list ||| value	count=1
module	in keymaps ||| 21	count=1
function	etc ||| format	count=1
module	name and process ||| 25 2	count=1
function_arg	a string [arg_2] ||| [arg_2] [function_1]	count=4
module	whether files ||| 24 2	count=1
function	deletes [function_2] ||| [function_2] [function_1]	count=3
function_arg	function displays [arg_2] ||| [function_1] other frame [arg_2]	count=3
arg	fn nil with initial-value ||| fn initial-value	count=1
module	frames ||| 28	count=6
module	new files created by ||| 24	count=1
module	displaying frame which defaults ||| 37	count=1
arg	equal to the query ||| elem	count=1
function	process ||| set process filter	count=1
arg	the propname property of ||| propname	count=1
module	split an existing ||| 27	count=1
arg	in list equal ||| elem list	count=2
function	the region ||| fill region	count=1
function	to ||| up	count=2
arg	take a predicate [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
function	exit status ||| process exit status	count=2
function	syntax ||| modify syntax	count=1
function	progress of your operation ||| progress	count=1
arg	is the only live ||| no-mini all-frames	count=1
function	default permissions for new ||| default file modes	count=1
module	meaning ||| 9 2.4	count=1
function	right margins of ||| window margins	count=1
function	string of years days ||| seconds	count=1
module	is not ||| 5 5	count=1
function	the standard [function_2] ||| [function_2] [function_1]	count=2
function_arg	color [arg_2] ||| [arg_2] [function_1]	count=3
function	display-start position of window ||| window start	count=1
function	is on a link ||| on link	count=1
function	from the default ||| from default	count=3
function	the ||| save	count=1
function	make it ||| variable buffer	count=1
function	non-nil display-buffer is ||| up	count=1
module	places ||| 27 9	count=1
function	least recently-used [function_2] ||| [function_1] [function_2]	count=4
module	value of ||| 30	count=1
module	function sends ||| 8	count=1
function	the [function] ||| dump [function]	count=1
module	non-nil that ||| 27	count=1
arg	named [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	strictly ||| >	count=1
arg	new-char in the ||| new-char	count=1
function	a window [function_2] ||| [function_2] [function_1]	count=3
function	your init ||| save	count=1
function	symbolic file mode specification ||| symbolic	count=1
function	execution permissions ||| file modes	count=1
arg	to value val ||| val	count=1
function_arg	[function_1] frame can ||| [function_1] color [arg_2]	count=2
function	and if no change ||| property change	count=1
arg	s with ||| s	count=1
module	same abbrevs ||| 35	count=1
function	you ||| auto save list file	count=1
function	emacs reads ||| list	count=1
function	containing all the elements ||| vconcat	count=1
function	screen lines ||| screen lines	count=1
function	using the minibuffer ||| minibuffer	count=2
module	using emacs ||| 38 4	count=1
arg	of list starting ||| list	count=1
function	[function_1] [function_2] ||| [function_1] col [function_2]	count=9
module	files can be cached ||| 24	count=1
function_arg	[function_1] t2 ||| [function_1] p t1 [arg_2]	count=1
module	initializes auto-save-list-file-name ||| 2	count=1
function	[function_1] [function_2] and ||| [function_1] [function_2]	count=10
function_arg	[function_1] number ||| [arg_2] [function_1]	count=3
function_arg	[function_1] feature is ||| [function_1] [arg_2]	count=1
function	this function reads the ||| read	count=1
function	function stores value as ||| put char code	count=1
module	current line which ||| 17.1	count=1
function	definition of ||| lookup key	count=1
function	backward from point ||| backward	count=1
arg	replacements is a ||| replacements	count=1
function	the exit ||| exit	count=1
function	macro defines a help ||| make help	count=1
module	returns a new ||| 5	count=1
function	specified by [function] is called ||| [function] auto hide	count=1
module	buffer so ||| 4	count=1
module	name and process ||| 2	count=1
module	the ||| 25 2	count=2
module	sent by emacs ||| 38 13	count=1
rep	[module_1] [function_arg_2] that designate the categories ||| [module_1] [function_arg_2]	count=8
function	new frames ||| frames	count=1
function	window below the selected ||| buffer below selected	count=1
function	not already ||| list	count=1
function	substrings of the same ||| substrings	count=1
function	the minibuffer evaluates it ||| eval minibuffer	count=1
arg	filename into ||| filename visit beg end replace	count=1
function	a string or ||| string	count=1
function_arg	that [arg_2] ||| [function_1] [arg_2]	count=4
function	into a key ||| kbd	count=1
function	of window’s ||| window	count=1
module	number of elements ||| 6	count=1
function	as the unindented-ok argument ||| relative maybe	count=1
function	of remote ||| remote file name inhibit cache	count=1
arg	arg ||| arg	count=6
function	sound file ||| sound	count=1
arg	user by providing completion ||| predicate require-match initial history	count=1
arg	replacements is a list ||| replacements	count=1
function	allowed to ||| up	count=1
function	inhibits the startup screen ||| inhibit startup screen	count=1
arg	to position ||| position	count=1
arg	of string [arg_2] ||| [arg_1] [arg_2]	count=1
module	and ||| 30 7	count=1
function_arg	[function_1] display-table in ||| [arg_2] [function_1]	count=1
function	returns the parent of ||| char table parent	count=1
function	insertion ||| marker insertion	count=2
arg	value of prev-buffers ||| prev-buffers	count=1
function	warps the mouse to ||| set mouse	count=1
function	boundaries and ||| boundaries	count=1
function	[function_1] input ||| [function_1] [function_2]	count=3
function	global map to ||| global	count=1
function	exit [function_2] ||| [function_2] [function_1]	count=4
arg	on frame ||| frame inherit	count=2
arg	end ||| end count-final-newline	count=1
function	insertion type of ||| marker insertion type	count=3
arg	position in the string ||| position	count=1
function_arg	like assoc [arg_2] ||| [function_1] string [arg_2]	count=2
function	[function_1] words ||| [function_2] [function_1]	count=4
arg	from index from ||| from	count=1
function_arg	that feature is ||| provide feature	count=1
module	init file it initializes ||| 2	count=1
function	frames ||| up frames	count=1
arg	this command fills ||| end justify	count=1
arg	which are consistent with ||| command icon map props	count=1
function	to the [function_2] ||| [function_2] [function_1]	count=7
function	[function_1] between positions ||| [function_1] and extract [function_2]	count=1
function	remote ||| remote file	count=1
module	the [module] ||| [module] 1.1	count=6
function	number in ||| number at	count=2
function_arg	list -remove pred ||| separate pred	count=1
arg	object ||| prop object	count=1
arg	named [arg] ||| abbrev-table [arg] expansion hook	count=1
rep	[module_1] property propname ||| [module_1] put char code [function_arg_2]	count=1
function	debugged ||| test	count=1
function_arg	[function_1] by consing ||| [function_1] symbol element [arg_2]	count=1
module	function ||| 38 7	count=2
function	the indentation of the ||| indentation	count=1
function	void text areas ||| void text area	count=1
function	scroll [function_2] ||| [function_2] [function_1]	count=1
function	[function] of ||| [function]	count=1
function	edebug tests coverage ||| test coverage	count=1
function	of elements ||| length	count=1
function	[function_1] for ||| [function_1] [function_2]	count=1
function	an input method name ||| input method name	count=1
function	auto-save-list-file-name if you have ||| list file	count=1
module	activations ||| 19 13	count=2
function_arg	composed [arg_2] ||| [function_1] fn [arg_2]	count=4
module	of the ||| 27 4	count=1
module	the minibuffer a nonnegative ||| 19 13	count=1
arg	alias it looks in [arg_1] [arg_2] naming the actual ||| [arg_2] [arg_1]	count=6
function	of the font ||| face font	count=1
function	[function] is ||| [function] narrowed	count=1
arg	this function returns a ||| frame	count=1
function	syntax ||| syntax forward	count=1
arg	y ||| y	count=2
function	tty is [function] ||| [function] p	count=2
module	returns a list of ||| 24 6.4	count=1
module	not already ||| 2	count=1
module	an existing window ||| 27 14	count=1
module	allowed to split ||| 27 14	count=1
module	this function returns the ||| 31	count=1
function	abbrev table ||| abbrev table	count=3
function_arg	current buffer [arg_2] ||| [function_1] [arg_2]	count=1
function	macro defines ||| define	count=2
arg	[arg_1] property ||| [arg_1] [arg_2]	count=3
rep	reads [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	in ||| 14	count=1
arg	l ||| l	count=1
module	the [module] ||| [module] 7	count=2
function	as obsolete ||| obsolete	count=1
arg	end ||| end buffer	count=1
arg	value ||| attribute	count=1
arg	[arg_1] to stream ||| [arg_1] [arg_2]	count=4
arg	compare-strings ||| alist case-fold	count=1
arg	[arg_1] is negative ||| [arg_2] [arg_1]	count=2
function	prefix adding ||| save list file prefix	count=1
function_arg	characters in [arg_2] ||| [function_1] [arg_2]	count=1
function	remove whitespace at the ||| s trim right	count=1
function	function for each element ||| map char table	count=1
function	debug-on-exit flag of the ||| backtrace debug	count=1
arg	this command fills each ||| start end justify	count=1
arg	filename ||| filename visit beg	count=1
function	top entry in the ||| window top	count=1
function	replace the last ||| last	count=1
arg	the character char ||| char	count=2
function	auto-save-list-file-name ||| auto save list	count=1
function	this prefix adding ||| list file prefix	count=1
function	but [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] from beg ||| [function_1] [arg_2]	count=14
function	already set it non-nil ||| save list file	count=1
function	be fit by ||| fit frame to buffer	count=1
function	[function] server ||| [function] server version	count=3
arg	function acts on the ||| appendp object	count=1
module	for ||| 10	count=1
module	nil ||| 4 2	count=1
function	non-nil based on this ||| file	count=1
module	string of years ||| 7	count=1
module	activations of the minibuffer ||| 19	count=1
function	allowed to split ||| up	count=1
function	[function] spaces ||| [function]	count=2
function	attributes of remote ||| remote file name inhibit	count=1
module	entire ||| 29	count=1
function	function deletes a process ||| delete	count=1
arg	variable var as a ||| var	count=1
function	defines a help ||| make help screen	count=2
function	[function_1] byte ||| [function_2] [function_1]	count=2
function	as an abbrev table ||| abbrev table	count=1
module	this ||| 23 5	count=1
function	the maximum size ||| ring max	count=1
function	the currently active minibuffer ||| minibuffer	count=1
function	return a non-nil ||| p	count=1
arg	fun on each node ||| fun	count=1
function	it non-nil based ||| auto save list file	count=1
module	windows and ||| 27	count=1
function	fontset according to ||| fontset	count=1
function	option ||| base	count=1
arg	regexp ||| regexp limit greedy	count=1
arg	in list or ||| list	count=1
function_arg	the truename [arg_2] ||| [function_1] [arg_2]	count=1
function	the current frame ||| current frame	count=2
function	like next-single-property-change except ||| next single char property	count=1
arg	its descriptor ||| descriptor	count=1
function	[function_1] default ||| [function_1] [function_2]	count=4
function	the custom ||| custom	count=2
arg	selects frame ||| frame	count=1
arg	position and [arg_2] ||| [arg_2] [arg_1]	count=4
function	function returns ||| window at	count=1
module	value of this ||| 27	count=2
arg	[arg_1] to init ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] ewoc [arg_2]	count=7
function	this option ||| frame	count=1
function	this function inserts the ||| insert	count=2
arg	between from ||| from	count=1
function	[function_1] string ||| [function_1] [function_2]	count=1
function_arg	indexed by [arg_2] ||| [function_1] sequence [arg_2]	count=1
module	the first nonblank character ||| 31 17.1	count=1
function	backup file ||| backup file	count=1
module	of years days hours ||| 7	count=1
module	and return a ||| dash	count=1
function	of ||| pop up	count=2
arg	option symbol ||| symbol	count=1
function	makes a ||| make	count=1
arg	of string as ||| string	count=1
module	this function returns ||| 27 3	count=1
arg	filename into the current ||| filename visit beg end replace	count=1
function	cells the ||| cells	count=1
function	calls its ||| char table	count=1
arg	command specifies coding-system as ||| coding-system	count=2
function	dialog box and ||| dialog	count=1
function	to its ||| to buffer	count=1
function	on ||| mouse on	count=1
function	emacs ||| auto save	count=1
function	[function_1] files ||| [function_1] [function_2]	count=5
arg	matching with font-spec for ||| font-spec frame	count=1
function_arg	[function_1] of s ||| [arg_2] [function_1]	count=3
function	the status of ||| status	count=1
function	contents of file ||| contents	count=1
arg	nil otherwise ||| object	count=1
function	of bool vectors ||| bool vector intersection	count=1
arg	[arg_1] pushes a ||| [arg_1] [arg_2]	count=3
function	this function ||| table	count=1
arg	each of the paragraphs ||| to-eop	count=1
arg	function stores object ||| object	count=2
function	function inserts the ||| insert	count=3
arg	days ||| format-string	count=1
function	area ||| area	count=2
arg	alist parameters ||| parameters	count=1
function	that is an array ||| vector	count=1
function	inserts contents [function_2] ||| [function_1] [function_2]	count=1
function	the variable ||| variable	count=1
module	is ||| 1	count=3
function	is nil switch-to-buffer displays ||| buffer preserve window	count=1
function	function returns [function] ||| terminal [function]	count=1
arg	the end of s ||| s	count=1
function	file ||| save list	count=1
arg	command adjusts the ||| max-height min-height max-width min-width	count=2
function	[function_1] left ||| [function_1] [function_2]	count=2
arg	position in object ||| prop object limit	count=1
function	function returns the coding ||| coding	count=1
function_arg	global map [arg_2] ||| [arg_2] [function_1]	count=1
function	obsolete indicating that ||| obsolete face	count=1
function_arg	method input-method for ||| method input-method	count=1
function	initializes ||| auto save list file	count=1
function	margins of window ||| window margins	count=1
arg	tree and make ||| folder init-value tree	count=1
module	buffer associated ||| 36 9.1	count=1
function	for the function ||| function	count=1
module	function for each element ||| 6 6	count=1
function	deletes the ||| delete	count=2
module	returns a ||| 6	count=1
module	network ||| 36 18	count=1
function	may display buffers by ||| pop up	count=1
function	or body ||| body size	count=1
function_arg	bytes in string ||| string bytes string	count=1
function	function [function] file ||| file exists [function]	count=1
module	it initializes auto-save-list-file-name if ||| 25	count=1
arg	returns it ||| prompt initial history default	count=1
function	minibuffer window is in ||| minibuffer	count=1
arg	ending position of event ||| event	count=1
arg	supertype ||| supertype	count=1
function	function returns the ||| minibuffer	count=1
arg	of char-table ||| function char-table	count=1
module	activations of the ||| 19	count=1
function	emacs ||| list	count=1
arg	directory name or directory ||| directory	count=1
function	syntax classes are mentioned ||| syntax backward	count=1
function	the newest [function_2] ||| [function_1] [function_2]	count=3
function_arg	positions for [arg_2] ||| [function_1] all [arg_2]	count=3
module	debugger as soon ||| 17	count=1
function	in a window at ||| at	count=1
function_arg	[function_1] in position ||| [function_1] x y [arg_2]	count=4
function	[function_1] buffers to ||| [function_2] [function_1]	count=4
function	value of this variable ||| ring	count=1
module	exists and you ||| 24 6.1	count=1
function	the value ||| mark ring	count=1
function	returns the definition ||| lookup	count=1
function	can be loaded ||| available	count=1
function	of an [function] before ||| [function] change	count=1
module	several frames and several ||| 28	count=1
function	depth allowed ||| depth	count=1
function	its argument function for ||| table	count=1
arg	command command a ||| command	count=1
arg	defines ||| docstring interactive type	count=1
module	at ||| 31	count=2
module	frame see basic windows ||| 27	count=1
arg	function performs [arg] ||| [arg] fixedcase literal	count=1
function	if you have ||| save list file	count=1
function	returns the rehash ||| table rehash	count=1
function	a vector ||| vector	count=1
function	specify the dimensions ||| display mm dimensions alist	count=1
arg	hook ||| hook	count=3
function_arg	least fixpoint [arg_2] ||| [function_1] [arg_2]	count=1
module	current buffer so that ||| 29 4	count=1
function	to titleized [function_2] ||| [function_1] [function_2]	count=1
arg	specified by its descriptor ||| descriptor	count=1
function	and process id ||| auto save list file	count=1
arg	character character ||| character	count=1
function	remote ||| remote	count=1
function	newline ||| overflow newline	count=1
function	non-nil ||| edebug test	count=1
module	and returns ||| 8	count=1
function	a new window for ||| pop	count=1
function	0 point-min ||| end	count=1
function	by choosing ||| buffer use some	count=1
function	returns the sentinel ||| process sentinel	count=1
function	text between ||| set text	count=1
function	variable is ||| up	count=2
function	sound ||| sound	count=1
function	already set it ||| file	count=1
function	a non-nil ||| p	count=1
function	symbolic file mode ||| file modes symbolic	count=1
function	or match ||| match	count=1
function	it initializes auto-save-list-file-name ||| auto save list	count=1
function	positions ||| positions	count=1
arg	prompting with prompt and ||| prompt	count=1
arg	for filename to context ||| filename	count=1
module	text from the ||| 31 8.2	count=1
arg	vectors a and b ||| a b	count=1
function	command inserts [function_2] ||| [function_2] [function_1]	count=1
function	has a non-nil value ||| char table	count=1
function	key sequence a ||| kbd	count=1
module	frames and their contents ||| 28	count=1
module	programs and the emacs ||| 30 7	count=1
function	frames ||| pop up frames	count=1
function	returns t if ||| p	count=10
module	width of ||| 27 4	count=1
function	non-nil based ||| save list file	count=1
function_arg	field [arg_2] ||| [function_1] new-pos [arg_2]	count=1
arg	finds and opens ||| filename missing-ok nomessage nosuffix must-suffix	count=1
arg	[arg_1] body ||| [arg_1] [arg_2]	count=2
module	into a ||| 21	count=1
module	whether its argument is [module_1] [module_2] and returns t if ||| [module_2] [module_1]	count=1
module	the horizontal position ||| 31	count=1
function	of the minibuffer text ||| minibuffer	count=1
module	value of this variable ||| 27 14	count=2
module	this function ||| 12	count=6
arg	[arg_1] time ||| [arg_1] [arg_2]	count=2
arg	after ||| after	count=1
function	[function_1] link ||| [function_1] [function_2]	count=7
arg	file [arg_2] ||| [arg_1] [arg_2]	count=1
function	of window’s [function_2] ||| [function_2] [function_1]	count=1
arg	ewoc-refresh except [arg] ||| ewoc [arg]	count=1
function	fontset according to ||| fontset from fontset	count=1
arg	and docstring ||| docstring	count=1
function	a user ||| user	count=1
function	to which the kill ||| kill	count=1
function	split ||| pop	count=1
arg	message ||| message level	count=1
arg	lists together group the ||| &rest lists	count=1
function_arg	replaces [arg_2] ||| [arg_2] [function_1]	count=3
function	the process ||| process	count=1
arg	switches ||| switches	count=1
function	the ||| minibuffer	count=2
function	function for ||| char	count=1
arg	attribute attribute for ||| attribute	count=1
module	description [module] the current ||| [module] 9	count=1
function	[function_1] a vector ||| [function_2] [function_1]	count=5
function	initializes auto-save-list-file-name if ||| auto save list	count=1
function	same ||| same	count=1
arg	character at [arg] ||| [arg]	count=1
arg	new in s ||| new s	count=3
function_arg	window’s value [arg_2] ||| [function_1] [arg_2]	count=4
module	buffer so that ||| 4	count=1
arg	this command [arg] ||| library [arg]	count=1
arg	to end into ||| end no-line-break	count=2
function	current frame ||| current frame	count=2
function	it non-nil based ||| auto save list	count=1
function	name ||| list	count=1
function	a package ||| package	count=1
function	character of command input ||| char	count=2
function	function returns a ||| vconcat	count=1
arg	offsets step ||| n step	count=1
function	has a non-nil ||| map char table	count=1
arg	of the environment ||| substitute	count=1
function	fails [function_2] ||| [function_2] [function_1]	count=2
arg	[arg] coding system ||| [arg]	count=1
function	as dedicated to its ||| set window dedicated	count=1
arg	is done using compare-strings ||| alist case-fold	count=1
arg	finds and opens a ||| nosuffix must-suffix	count=1
function	from [function_2] ||| [function_1] [function_2]	count=3
module	this function returns ||| 31	count=3
arg	list2 that are not ||| list2	count=1
arg	by the symbols modes ||| modes	count=1
function_arg	[function_1] face ||| [function_1] [arg_2]	count=8
module	returns ||| 20 7.13	count=2
arg	of process-name as ||| process-name	count=1
function	your init file ||| save list	count=1
arg	it down to len ||| len	count=1
module	the beginning of ||| 35 4	count=1
function	current line ||| line	count=2
function_arg	[function_1] input-method ||| [function_1] [arg_2]	count=2
module	trying ||| 24 6.6	count=1
function	variable is the ||| mark	count=1
arg	the two strings ||| string1 string2	count=1
module	string representing the ||| 38 8	count=1
function	[function_1] history element ||| [function_2] [function_1]	count=2
arg	[arg_1] props ||| [arg_2] [arg_1]	count=4
function	fewer than ||| partial	count=1
function	the buffer boundaries and ||| buffer boundaries	count=1
arg	the element of sequence ||| sequence	count=1
function	name of [function_2] ||| [function_2] [function_1]	count=3
arg	but allows only directory ||| directory default require-match initial	count=1
arg	regular expression ||| regexp limit noerror repeat	count=1
arg	[arg] one ||| [arg]	count=1
arg	name [arg_2] ||| [arg_2] [arg_1]	count=1
function	returns the position ||| position	count=1
module	or vector ||| 21 1	count=1
function	tty is [function] of ||| [function] p	count=1
function	that is the name ||| name	count=1
module	[module] is ||| [module] 10	count=1
function	is [function] ||| [function]	count=1
arg	this command selects ||| wildcards	count=1
function	raises the frame ||| raise	count=1
arg	hours etc ||| format-string	count=1
arg	match-form ||| match-form	count=1
function	complex translation [function] rather than ||| [function]	count=1
function	this variable is ||| pop up	count=2
function	key [function_2] ||| [function_1] [function_2]	count=7
function	[function_1] context of ||| [function_1] [function_2]	count=4
function	the ||| pop	count=2
function_arg	last [arg_2] ||| [function_1] [arg_2]	count=5
function	already set ||| save list	count=1
function	buffer without disrupting ||| bidi string mark	count=1
arg	for symbol base-variable ||| base-variable	count=1
function	comparing them numerically by ||| sort	count=1
function	given family is specified ||| family alternatives	count=1
arg	value for parameter ||| window parameter	count=1
function_arg	process named name ||| get process name	count=1
function	function returns the ||| current	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=4
function	the combination ||| combination	count=1
module	the number of elements ||| 6 7	count=1
module	frames to ||| 28 3.4	count=1
arg	of regexp in ||| regexp s	count=1
module	returns t ||| 1	count=2
module	function returns ||| 13	count=1
module	non-nil ||| 6 6	count=2
arg	this function selects frame ||| frame	count=1
module	variable is ||| 27	count=2
module	function for each ||| 6 6	count=1
function	iterated applications of ||| iterate	count=1
function	regular expression that specifies ||| regexp	count=1
function	was selected when ||| selected	count=1
arg	l and r a ||| l r	count=1
module	this ||| 5 9.2	count=2
arg	seconds seconds this ||| seconds	count=1
function	new fontset according to ||| fontset spec	count=1
function	the newline ||| newline	count=1
arg	in position as a ||| position	count=2
function	the state of ||| window state	count=1
function	table in a help ||| table	count=1
function	[function_1] [function_2] ||| [function_2] sit for [function_1]	count=4
function	minibuffer contents [function] is ||| minibuffer complete [function]	count=1
function	invisible ||| invisible	count=1
module	function returns a ||| 3	count=2
function	numerically by the fieldth ||| numeric fields	count=1
arg	stops the process process ||| process	count=1
function	this command quits ||| quit	count=1
function	plist ||| process plist	count=1
module	of this variable ||| 30	count=1
function_arg	file [arg_2] ||| [function_1] p filename1 [arg_2]	count=1
function	element ||| map char	count=1
module	between the [module] start ||| [module]	count=1
function	[function_1] system which ||| [function_1] [function_2]	count=1
arg	end-of-line conversion of eol-coding ||| eol-coding	count=1
function	as a single paragraph ||| as paragraph	count=1
arg	strings ||| strings	count=1
function	or a [function] ||| [function] p	count=2
module	to split an ||| 14	count=1
arg	for each ||| function	count=1
function	initializes auto-save-list-file-name if you ||| list	count=1
function	of throw is to ||| throw	count=1
function	pred list -remove ||| separate	count=1
arg	evaluate form and return ||| form	count=1
function	nil switch-to-buffer displays the ||| buffer preserve window	count=1
arg	parameter parameter ||| parameter	count=2
function	highest priority that ||| find charset	count=3
function_arg	the query [arg_2] ||| [arg_2] [function_1]	count=3
function	justification style to use ||| justification	count=1
function	stop ||| stop	count=1
arg	data putting it ||| data	count=1
arg	function warps the mouse [arg_1] [arg_2] units of pixels rather ||| set mouse pixel position [arg_1] [arg_2]	count=1
function	by ||| pop up	count=1
arg	from-buffer-or-name ||| from-buffer-or-name start	count=1
function	eval-expression and thus ||| eval expression	count=1
function	to split window ||| split	count=1
function	file name to use ||| save file name	count=1
module	a [module] ||| [module] 8	count=1
function	leaving point at ||| re	count=1
function	your init ||| file	count=1
function	bool vector ||| bool vector	count=1
function	frame configuration list that ||| frame configuration	count=1
function	returns the current depth ||| depth	count=1
function	function sets ||| set frame	count=1
function	restore ||| quit restore	count=1
arg	right if count ||| count	count=1
function	[function_1] translation table ||| [function_2] [function_1]	count=1
function	leftmost column of window ||| left column	count=1
arg	a copy of list ||| list	count=1
function	to specify the dimensions ||| mm dimensions	count=1
arg	of string ||| string collection predicate	count=1
module	[module_1] a ||| [module_1] [module_2] window valid	count=1
arg	filename into ||| filename visit beg end	count=1
function	find-file [function] use ||| [function]	count=1
function	t in bool ||| bool	count=1
arg	[arg_1] is negative ||| [arg_1] wrap [arg_2]	count=1
function	[function_1] configurations as ||| [function_1] [function_2]	count=5
function	new window for displaying ||| pop up windows	count=1
function	for print-length and ||| print length	count=1
module	of the ||| 6	count=1
arg	or nil if obarray ||| name obarray	count=1
module	have not already ||| 25	count=1
arg	alist parameters ||| display parameters	count=1
arg	years ||| format-string	count=1
arg	bind it to ||| &rest else	count=1
function	and fewer than the ||| partial	count=1
function	at ||| display buffer at	count=1
function	frame and ||| frame	count=1
function	[function_1] mode for ||| [function_2] [function_1]	count=5
module	unchanged ||| 37 12.3	count=1
arg	element of tree ||| init-value tree	count=1
function	position in ||| position	count=2
function_arg	file attributes [arg_2] ||| [function_1] filename [arg_2]	count=1
function_arg	character at [arg_2] ||| [arg_2] [function_1]	count=7
function	valid case table ||| case table	count=2
function	print-circle ||| print circle	count=1
module	tabulated ||| 22 2.7	count=1
function	next tab stop column ||| tab stop	count=1
function	compare two ||| compare buffer	count=1
rep	this function [function_arg_2] ||| [function_arg_2] [module_1]	count=3
module	default 1 balanced ||| 29 2.6	count=1
function_arg	completions [arg_2] ||| [function_1] [arg_2]	count=1
module	sends a ||| 36 8	count=1
arg	n of char-table ||| char-table n	count=6
function	a [function] buffer—but ||| [function] buffer name	count=1
module	function ||| 2	count=4
module	function converts the ||| 8	count=1
function	function for each ||| map	count=1
module	it initializes ||| 25 2	count=1
function	your init ||| list file	count=1
function	is ||| mark ring	count=1
arg	char-table ||| function char-table	count=1
function	activations of the ||| minibuffer	count=1
module	function for each ||| 6	count=2
arg	only live window and ||| no-mini all-frames	count=1
function	[function_1] area message ||| [function_2] [function_1]	count=5
function	buffer between positions ||| region	count=1
arg	function symbol ||| symbol where function	count=1
arg	specifications specs ||| specs	count=1
arg	command a symbol ||| command position	count=1
module	function ||| 25 2	count=1
module	based on this ||| 2	count=1
module	between ||| 19.2	count=2
arg	function obsolete-name ||| obsolete-name	count=1
arg	[arg_1] to mode ||| [arg_2] [arg_1]	count=2
arg	for frame frame ||| frame	count=2
function	frame to its ||| frame to	count=1
arg	object rather ||| prop object limit	count=1
arg	s ||| s	count=5
function	in the dired command ||| dired	count=1
module	of ||| 20 7.13	count=2
arg	replacement operation on a ||| replacement	count=1
function	if the ||| up	count=2
arg	file filename1 ||| filename1	count=1
function	an alias [function_2] ||| [function_2] [function_1]	count=2
arg	object is [arg_2] ||| [arg_2] [arg_1]	count=1
function	string ||| seconds	count=1
module	of the words in ||| 4 8	count=1
function	space or ||| space	count=1
function	[function] that ||| [function]	count=3
arg	defines [arg_2] ||| [arg_2] definitions [arg_1]	count=4
module	this variable is ||| 27	count=2
module	this function ||| 38 7	count=1
function	valid case [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] window ||| [function_1] [function_2]	count=12
function	change ||| char property change	count=3
function	value of this variable ||| up	count=2
function	the scroll ||| current scroll	count=2
function	value ||| char table	count=2
module	this function calls its ||| 6 6	count=1
function	window configurations as ||| window configurations	count=2
function	[function_1] by copying ||| [function_2] [function_1]	count=9
function_arg	[function_1] list ||| [function_1] on item [arg_2]	count=1
module	sends a ||| 36	count=1
function	new window for displaying ||| up windows	count=1
function	lets you compare two ||| compare	count=1
function	xml rather than html ||| xml	count=1
function	its argument ||| char table	count=1
function	a window [function_2] ||| [function_1] [function_2]	count=1
function	in a window at ||| display buffer at	count=1
arg	number number ||| number	count=1
function	affects the behavior ||| words include escapes	count=1
function	argument function for ||| char table	count=1
module	not ||| 2	count=1
module	contents are accessible ||| 4	count=1
module	this [module_2] ||| [module_1] [module_2]	count=26
module	current buffer ||| 29 4	count=1
arg	bindat-raw according to ||| bindat-raw	count=1
function	string ||| string mark left to right	count=1
function	function specifies the custom ||| custom	count=2
function	x ||| x parse	count=1
arg	and pushes a copy ||| nomsg activate	count=1
function	stores value as ||| put	count=1
module	system [module] ||| [module] 23	count=1
function	this command inserts ||| format insert	count=1
function	debug-on-exit ||| backtrace debug	count=1
function_arg	sentinel of [arg_2] ||| [function_1] [arg_2]	count=1
function	by making ||| pop up	count=1
module	[module_1] is ||| [module_2] [module_1]	count=1
module	last regular expression searched ||| 33	count=1
function	are t in ||| population	count=1
function	next-single-property-change except ||| next single	count=1
function	of activations ||| minibuffer	count=1
module	individual events ||| 20	count=1
module	to ||| 36 8	count=2
function	index of the first ||| index	count=1
arg	of x1 ||| x1	count=1
function	buffer without disrupting ||| bidi string mark left	count=1
arg	divides dividend [arg_2] ||| [arg_2] [arg_1]	count=2
module	a string ||| 38	count=1
function	displays a list of ||| list	count=1
module	non-nil that means display-buffer ||| 27	count=1
module	asynchronous processes ||| 36	count=1
function	and if no change ||| char property change	count=1
function	[function_1] buffers ||| [function_2] [function_1]	count=4
arg	element of tree and ||| folder init-value tree	count=1
function	is allowed to split ||| pop up	count=1
function	its initials ||| word initials	count=1
function	is greater than 0 ||| buffer	count=1
arg	defines the function or ||| docstring interactive type	count=1
arg	symbol add [arg_2] ||| [arg_2] [arg_1]	count=4
arg	step ||| step	count=1
arg	function ||| format-string	count=1
arg	the value of prev-buffers ||| window prev-buffers	count=1
arg	and [arg] exclusive ||| [arg]	count=1
function	text of ||| text	count=2
function	[function_1] registry is ||| [function_2] [function_1]	count=8
module	a key ||| 1	count=1
function	[function_1] that completes ||| [function_2] [function_1]	count=3
function_arg	[function_1] the value ||| [function_1] property char propname [arg_2]	count=2
function	of parentheses ||| list	count=1
arg	value for ||| window	count=1
function	non-nil if [function] on frame ||| [function] visible p	count=1
function	marker that points to ||| marker	count=2
arg	to expand to expansion [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	name and process ||| list	count=1
function	that if the ||| p	count=1
arg	face face specifies a ||| face frame inherit	count=1
arg	propname property of ||| propname	count=1
function	value of this option ||| base	count=1
function	dashed-words ||| dashed words	count=2
function	searches [function] ||| word search [function]	count=3
arg	function defines the ||| docstring	count=2
arg	for key ||| map key	count=1
function	the file name to ||| make auto save file name	count=1
function	returns the timer ||| timer	count=1
function	mode is ||| mode	count=1
function	keyboard input from ||| input	count=1
module	computing [module] actual contents ||| [module]	count=1
function	returns the file ||| save file	count=1
function	the body of ||| body	count=1
module	of this ||| 7	count=1
function	[function_1] window as ||| [function_2] [function_1] predicate predicate	count=1
function_arg	[function_1] in table ||| [arg_2] [function_1]	count=1
module	emacs reads your ||| 25 2	count=1
arg	using compare-strings ||| alist case-fold	count=1
arg	if [arg] x ||| [arg]	count=1
function	this function sets ||| set process buffer	count=1
function	of the edge coordinates ||| window edges	count=1
module	of a ||| 14 6	count=2
function	titleized ||| titleized	count=1
arg	node of tree ||| tree	count=1
function	to keep indicating ||| delay	count=1
function	the major mode ||| mode	count=1
function	[function_1] system to ||| [function_2] [function_1]	count=6
module	that ||| 6 8	count=1
module	for ||| 6 6	count=2
module	minibuffer contents ||| 19	count=3
arg	object if ||| object limit	count=1
function_arg	of bytes [arg_2] ||| [arg_2] [function_1]	count=1
function	newer than file ||| file newer than file	count=1
function	characters whose syntax ||| skip syntax backward	count=1
arg	pred and a ||| pred	count=1
module	[module] decode-time ||| 38 [module]	count=3
arg	[arg_1] optionally suffix ||| [arg_1] [arg_2]	count=3
function	insertion type of ||| insertion	count=1
module	is allowed ||| 14	count=1
arg	object rather ||| pos prop object	count=1
arg	and optionally [arg_2] ||| [arg_2] [arg_1]	count=1
function	of syntax class ||| syntax	count=1
function	window’s [function_2] ||| [function_1] [function_2]	count=5
function	by copying in cases ||| by copying	count=1
function	means display-buffer may ||| pop	count=1
arg	end using a function ||| end delete	count=1
arg	and a list ||| list	count=1
function	the definition ||| lookup key	count=1
arg	of key in ||| key	count=1
function	object representing frame’s current ||| current	count=1
function	nil switch-to-buffer displays the ||| preserve	count=1
arg	map to binding ||| binding	count=1
module	copy ||| 37 9.1	count=1
function	garbage ||| garbage	count=1
function	split s up ||| s split up to	count=1
function	specifies the coding ||| coding	count=1
arg	process-name as a ||| process-name	count=1
module	error is ||| 5	count=1
function	[function_1] remapping ||| [function_2] set [function_1]	count=2
function	display table in ||| display table	count=2
module	return non-nil if ||| dash	count=1
function	minibuffer ||| minibuffer auto	count=1
function	cancels any narrowing ||| widen	count=1
arg	x2 to the ||| x2	count=1
module	is at the ||| 31	count=2
function	the attributes of remote ||| remote file name inhibit cache	count=1
function	to make ||| pop up	count=1
module	make ||| 27 14	count=2
arg	[arg_1] synchronously ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] count [arg_2]	count=2
function	variable is the ||| mark ring	count=1
function	the frame that the ||| frame	count=1
function	as the syntax table ||| syntax	count=1
arg	flag of process ||| process	count=1
function	of dividend [function] ||| [function]	count=3
function_arg	directory named dirname ||| copy directory dirname	count=2
function	elements that are t ||| count population	count=1
module	a list ||| 24 6.4	count=1
function	fill column ||| fill column	count=2
function	as ||| as	count=1
function	the indentation of ||| indentation	count=1
function	the remapping ||| remapping	count=1
arg	it down to len ||| len s	count=1
arg	[arg_1] table ||| [arg_1] [arg_2]	count=3
module	delete the [module] ||| [module]	count=3
module	in the buffer list ||| 8	count=1
function	with a single space ||| space	count=1
function	in the region ||| region	count=1
function	that are [function_2] ||| [function_2] vector [function_1]	count=1
function	of buffer [function_2] ||| [function_1] [function_2]	count=2
arg	vec ||| vec	count=1
function	otherwise ||| buffer	count=1
arg	[arg] a ||| [arg]	count=2
function	function returns the default ||| default	count=1
function	[function_1] sequence ||| [function_2] [function_1]	count=4
function	not already set ||| auto save	count=1
function	may display buffers ||| up	count=1
arg	[arg_1] bold-p is ||| [arg_2] [arg_1]	count=1
module	of file names ||| 24	count=1
arg	in object rather than ||| object	count=1
arg	list equal to ||| elem list	count=2
module	this function returns ||| 21 3	count=1
arg	point-max if flag is ||| flag	count=1
function	is signaled and ||| debug on	count=2
function	to ||| process	count=1
arg	element into the ||| element	count=1
arg	in map for key ||| key	count=1
arg	nth bit is ||| ints-or-markers	count=2
function	function returns the definition ||| lookup	count=1
arg	[arg_1] in s ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] in syntaxes ||| [function_1] [arg_2]	count=1
module	allocated ||| e 3	count=1
arg	this function makes characters [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
function	region from ||| region	count=1
arg	precise ||| path interactive-call	count=1
module	window’s ||| 25	count=1
function_arg	entries [arg_2] ||| [arg_2] [function_1]	count=1
function	permissions as an ||| modes	count=1
arg	to newname ||| newname unique	count=1
function_arg	[function_1] field ||| [arg_2] [function_1]	count=5
function	that has ||| table	count=1
function	system which uses the ||| system	count=1
module	return that object ||| 6	count=1
function	this command renames ||| rename	count=1
function	in the ||| to	count=1
module	current buffer so that ||| 4	count=1
arg	count [arg_2] ||| [arg_1] [arg_2]	count=3
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=1
arg	definition in the ||| definition	count=1
function	returns window’s ||| window parameter	count=1
function	replaced ||| at	count=1
function	fontset ||| fontset from fontset	count=1
function	a given family is ||| family alternatives	count=1
arg	from start to ||| start	count=3
arg	difference [arg] - ||| [arg]	count=1
arg	object rather than nil ||| pos prop object	count=1
module	greater than 0 point-min ||| 29 1	count=1
function	return the font ||| font	count=1
function	regular expression [function_2] ||| [function_1] [function_2]	count=1
arg	that x [arg_2] ||| [arg_2] [arg_1]	count=3
module	function ||| 29 1	count=2
arg	function divides dividend ||| dividend	count=1
module	corresponding ||| 29 2.4	count=1
module	value of ||| 14	count=2
function	[function_1] description ||| [function_1] abbrev table [function_2]	count=1
function	a string ||| kbd	count=2
arg	[arg_1] of display-table ||| [arg_2] [arg_1]	count=4
function	the current display-width ||| width	count=1
function	in or saved ||| save	count=1
arg	time item ||| item	count=1
arg	parameter to value and ||| parameter	count=1
function	this function destroy ||| destroy	count=1
function_arg	[function_1] value value ||| 11 10.2 [function_1] variable [arg_2]	count=3
arg	on which collection will ||| collection predicate	count=1
function	function tries to restore ||| restore	count=1
arg	named [arg_2] ||| [arg_2] [arg_1]	count=6
function	character of ||| char	count=3
function_arg	[function_1] end ||| [function_1] region start [arg_2]	count=1
arg	with from and ||| from	count=1
function	gives ||| setq	count=1
function	of mark-ring ||| mark	count=1
function	menu ||| menu	count=1
function	buffer without disrupting the ||| bidi string mark left	count=1
function	table or nil ||| table	count=1
function_arg	[function_1] prompt and ||| [arg_2] [function_1]	count=5
function	the dimensions of graphical ||| display mm dimensions alist	count=1
function	[function_1] a directory ||| [function_1] [function_2]	count=3
arg	in [arg] ||| [arg]	count=3
module	number of elements that ||| 6	count=1
module	function moves point to ||| 29 2.4	count=2
function	window below the ||| display buffer below	count=1
arg	[arg] the ||| start end prop [arg]	count=2
module	to ||| 3	count=1
arg	[arg_1] in abbrev-table ||| [arg_2] [arg_1] expansion	count=1
function	variable is ||| pop	count=2
arg	when the given ||| &optional start	count=1
module	thrown away at ||| 31 8.6	count=1
function	exits from ||| exit	count=1
module	is a [module] ||| [module]	count=3
function	non-nil edebug ||| test	count=1
arg	mode ||| mode	count=1
arg	or directory ||| directory	count=1
function	the host name ||| save	count=1
function	function deletes all ||| delete horizontal	count=1
arg	x2 to the value ||| x2	count=1
module	first nonblank character ||| 31	count=1
arg	[arg_1] repetitions ||| [arg_2] [arg_1]	count=4
arg	generated by [arg] ||| pred [arg]	count=3
function	reads an [function_2] ||| [function_2] [function_1]	count=5
module	arguments is a ||| 5	count=1
function	name and process ||| save list file	count=1
arg	variable var as a ||| var fun	count=1
function	unregisters ||| unregister	count=1
function	if you have not ||| save	count=1
module	this function returns ||| 6	count=5
function	returns the prompt string ||| prompt	count=1
function_arg	undo [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	a help [arg_2] ||| [arg_2] [function_1]	count=2
arg	for key in the ||| key	count=1
function	this variable is the ||| ring	count=1
module	this function returns t ||| 1	count=2
function	editable contents ||| minibuffer contents	count=1
function	x ||| x	count=4
arg	[arg_1] stream ||| [arg_2] [arg_1]	count=3
function	position in the window ||| position	count=1
function	each ||| map char	count=1
function_arg	the directory [arg_2] ||| [arg_2] [function_1]	count=3
function	height [function_2] ||| [function_2] width [function_1]	count=1
arg	them with [arg_2] ||| [arg_2] string [arg_1]	count=1
function_arg	[function_1] list ||| [function_1] [arg_2]	count=1
arg	of file filename into ||| filename visit beg end	count=1
module	is greater ||| 29	count=1
function	returns the binding ||| binding	count=3
function_arg	subtype of [arg_2] ||| [arg_2] [function_1]	count=1
arg	extra slot slot of ||| slot	count=1
function	the [function] sentence including ||| [function]	count=1
module	argument is ||| 3	count=1
function	returns the size of ||| size	count=1
module	returns t if ||| 1	count=2
function	a list ||| list	count=2
function	left ||| left	count=6
arg	in the prop ||| pos prop	count=1
module	frames to ||| 28	count=1
function	name and process id ||| auto save list file	count=1
function	purpose of throw is ||| throw	count=1
function	end of the ||| end of	count=3
arg	start [arg_2] ||| [arg_2] [arg_1]	count=3
arg	of window window ||| window	count=1
function	the insertion type ||| marker insertion type	count=1
arg	params arguments ||| params	count=1
module	nil ||| 2	count=4
module	t if point is ||| 31 1	count=2
arg	fn ||| fn folder	count=1
arg	nth bit ||| ints-or-markers	count=2
function	is like next-single-property-change ||| next single char	count=1
module	function calls ||| 6 6	count=1
arg	keymap [arg_2] ||| [arg_1] [arg_2]	count=2
function	this command ||| smie	count=1
function	compare two substrings of ||| compare buffer substrings	count=1
arg	the end [arg] ||| [arg]	count=1
function	set it ||| auto save list file	count=1
arg	lists such that ||| lists	count=1
function	wrap the words with ||| word wrap	count=1
function	the selected [function_2] ||| [function_1] [function_2]	count=2
function	this macro [function] ||| [function]	count=3
module	function ||| 10 3	count=2
function	host name ||| auto save list	count=1
function	function ||| current	count=1
function_arg	t if button ||| p button type	count=1
arg	display-table in a ||| display-table	count=1
arg	named [arg] to ||| [arg] expansion hook	count=1
arg	representation of object to ||| object	count=1
function	newest backup versions ||| kept versions	count=2
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2] start	count=6
function	the prefixes specified by ||| prefixes	count=1
arg	nested alist struct ||| struct name	count=1
module	function returns ||| 27 3	count=1
function	x ||| at x y	count=1
function	face [function_2] ||| [function_2] [function_1]	count=1
function	has a ||| map char	count=1
function	nil switch-to-buffer displays ||| preserve window	count=1
function_arg	[function_1] of keymap ||| [function_1] [arg_2]	count=1
function	top entry ||| window top	count=1
function	[function_1] as auto-saved ||| [function_2] [function_1]	count=4
module	split an ||| 27	count=1
module	to split ||| 14	count=1
arg	it through [arg_2] ||| [arg_2] [arg_1]	count=2
module	whose cdr is ||| 5 5	count=1
arg	feature ||| feature	count=2
function	a vector never ||| vector	count=1
function	as obsolete indicating that ||| obsolete	count=1
function	split s ||| split up	count=1
function_arg	[function_1] filename2 ||| [function_1] p filename1 [arg_2]	count=3
module	if non-nil edebug ||| 2.16	count=1
function_arg	process named [arg_2] ||| [arg_2] [function_1]	count=4
function	buffer is on ||| mouse on	count=1
function	existing window to ||| pop	count=1
module	return a new list ||| dash	count=3
module	mark-ring ||| 30 7	count=2
arg	start and end on ||| start end	count=1
module	strings ||| 4	count=1
function	moves point to the ||| move to	count=1
function	file name ||| terminal name	count=1
function	right ||| scroll right	count=1
arg	where pred item ||| pred	count=1
module	the first nonblank character ||| 31	count=1
function	based on ||| file	count=1
module	has a non-nil ||| 6	count=2
function	from the x ||| x get	count=1
function	set ||| file	count=1
function	of the abbrev table ||| abbrev table	count=1
function_arg	the text [arg_2] ||| [arg_2] [function_1]	count=1
function	day number within the ||| day in	count=1
function	function expands the ||| expand	count=1
function_arg	[function_1] obsolete-name is ||| [function_1] [arg_2]	count=2
function	[function_1] the default ||| [function_2] [function_1]	count=4
function	function tries to restore ||| quit restore	count=1
function	screen [function_2] ||| [function_2] [function_1]	count=4
module	an existing window to ||| 27	count=1
arg	[arg] separated by ||| sep [arg]	count=2
arg	by delta ||| delta horizontal ignore pixelwise	count=1
function	screen lines ||| count screen lines	count=2
function_arg	than file [arg_2] ||| [function_1] p filename1 [arg_2]	count=1
function	non-nil based on ||| save list	count=1
function	sets the :underline ||| set face underline	count=1
arg	with font-spec for the ||| font-spec	count=1
module	a line ||| 31	count=1
function_arg	composed [arg_2] ||| [arg_2] [function_1]	count=4
module	reports ||| 5.1	count=1
function	an integer ||| integer	count=1
function	non-nil based on ||| list	count=1
arg	with prompt ||| prompt initial history args	count=1
function	value of this ||| up	count=2
function_arg	[function_1] value for ||| [arg_2] [function_1]	count=1
arg	functions with [arg] ||| [arg]	count=1
function	backups by ||| backup by	count=2
function	the kill ring ||| kill ring	count=2
function	process associated with the ||| buffer process	count=1
function	to display the contents ||| to	count=1
arg	function scans forward count ||| count	count=1
rep	[module_1] property propname ||| [module_1] [function_arg_2]	count=1
function	inserts ||| format insert	count=1
function_arg	help [arg_2] ||| [arg_2] [function_1]	count=2
function	of the object ||| posn object	count=1
arg	region beg ||| beg	count=1
function	by eval-expression ||| eval expression	count=1
function	have ||| auto	count=1
arg	to flag ||| flag	count=1
function	the same format as ||| time	count=1
function	end of a ||| end	count=1
arg	[arg_1] [arg_2] ||| interpose [arg_2] [arg_1]	count=1
module	ewoc ||| 37 19.1	count=1
arg	eval-region but ||| buffer-or-name stream filename	count=1
function	for directory ||| directory	count=1
module	this variable’s value is ||| 28 3.2	count=1
function	a new window ||| pop	count=1
module	be a [module] describing the ||| [module] 8	count=1
function	left margin ||| left margin	count=3
arg	[arg] presumably for ||| num [arg]	count=2
module	this function calls ||| 6	count=2
module	is at the ||| 31 1	count=2
function	if the buffer ||| buffer	count=1
function	a string of syntax ||| syntax forward	count=1
function	current depth ||| depth	count=1
function	or least recently-used window ||| pop up window	count=1
module	buffer or text ||| 31 8.2	count=1
function	characters in the ||| charset chars	count=1
function	execution ||| edebug	count=1
function_arg	[function_1] named dirname ||| [arg_2] [function_1]	count=6
module	greater than 0 point-min ||| 29	count=1
module	activations of ||| 19 13	count=1
function_arg	split the [arg_2] ||| [function_1] on item [arg_2]	count=3
function_arg	[function_1] frame frame ||| [arg_2] [function_1]	count=5
module	emacs to the terminal ||| 38	count=1
function	next [function_2] ||| [function_2] [function_1]	count=4
module	return ||| dash	count=25
arg	with [arg_2] ||| [arg_1] [arg_2]	count=1
function	height of [function_2] ||| [function_2] width [function_1]	count=1
arg	this function calls ||| function	count=1
module	function ||| 38	count=1
function	initializes auto-save-list-file-name ||| save list file	count=1
function	function returns the end ||| end	count=1
function	end [function_2] ||| [function_2] [function_1]	count=10
arg	newest element and ||| ring	count=1
arg	bold-p is nil ||| bold-p frame	count=1
function	buffers by making new ||| pop up	count=1
module	your init file it ||| 25	count=1
function	that is the header ||| header	count=1
function	[function_1] sequence as ||| [function_1] [function_2]	count=4
function	text label ||| label	count=1
arg	in the property ||| property	count=2
module	sent by emacs to ||| 38 13	count=1
function	calls its ||| map char	count=1
function	returns ||| buffer end	count=1
function	for the text between ||| text	count=1
function	current buffer’s [function_2] ||| [function_2] [function_1]	count=1
function	calls its argument function ||| char table	count=1
function	not already set it ||| save list file	count=1
arg	line count ||| count	count=1
arg	message ||| message level buffer-name	count=1
arg	the text keyseq-text ||| keyseq-text	count=1
function	buffers by ||| pop up	count=1
function	previous button ||| forward button	count=1
function	to the top entry ||| window top	count=1
function	beginning ||| bolp	count=1
function_arg	[function_1] in window ||| [function_1] [arg_2]	count=3
arg	[arg_1] [arg_2] units of pixels rather ||| [arg_1] [arg_2]	count=2
function	mouse pointer [function_2] ||| [function_2] text area [function_1]	count=1
function	it non-nil based ||| save	count=1
rep	of the [function_arg_2] ||| [module_1] put char code [function_arg_2]	count=4
module	this [module] ||| [module] 2.6	count=7
module	scroll ||| 27 20	count=1
function_arg	property to [arg_2] ||| [function_1] [arg_2]	count=1
module	0 point-min otherwise ||| 29	count=1
function	host ||| file	count=1
arg	convert s ||| s	count=2
function	the command ||| command	count=1
module	object is ||| 15 5	count=1
arg	through the forms inserts ||| form &rest more	count=1
module	function moves point ||| 29	count=1
module	several frames and ||| 28	count=1
function	a possible name for ||| name	count=1
arg	copies the ||| time preserve-uid-gid preserve-extended-attributes	count=1
module	if object is ||| 15 5	count=1
function	appends ||| append to file	count=1
function_arg	vector [arg_2] ||| [arg_2] [function_1]	count=1
function	non-nil that ||| up	count=1
function_arg	the number [arg_2] ||| [function_1] [arg_2]	count=2
function	a string containing ||| substring	count=1
function	that ||| table	count=1
function	tab ||| tab	count=1
arg	add value to ||| value	count=1
module	based ||| 25	count=1
function	the value ||| pop up	count=2
module	variable is non-nil the ||| 27 5	count=1
rep	[module_1] [function_arg_2] ||| [module_1] put char code [function_arg_2]	count=8
module	are accessible ||| 29	count=1
function	specify the dimensions of ||| display mm dimensions alist	count=1
arg	returns arg ||| arg	count=1
function_arg	this stores [arg_2] ||| [function_1] plist property [arg_2]	count=1
arg	of window to table ||| window table	count=1
module	containing all the elements ||| 6	count=1
module	0 point-min otherwise ||| 1	count=1
module	or the limits ||| 2.3	count=2
arg	such as #rrrgggbbb ||| convert allow-empty display	count=1
arg	the nth ||| n	count=4
function	edge ||| adjust window trailing edge	count=2
arg	newdef for any ||| newdef	count=1
function	returns the ||| event	count=1
function	its ||| map char table	count=2
function	window’s value ||| window	count=2
module	already set ||| 2	count=1
function	sequence a string or ||| kbd	count=1
arg	named function ||| function props	count=1
function	startup ||| startup	count=2
function	sets the parent ||| set	count=1
arg	returns window’s value ||| window	count=1
function	new frame ||| frame	count=3
function	this command indents ||| indent	count=1
function	to floating ||| float	count=1
function	change is found before ||| char property change	count=1
function_arg	product [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] fn [arg_2]	count=18
arg	of the screen ||| display	count=1
function	echo ||| echo	count=2
arg	abbrev has ||| abbrev	count=1
function	fewer than the normal ||| partial	count=1
arg	the elements of lists ||| lists	count=1
arg	backward across arg ||| arg	count=2
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] mode-and-header-line	count=9
arg	value rgb a list ||| rgb	count=1
module	replaces the [module] ||| [module]	count=9
function_arg	members of list ||| difference list	count=1
function	files by copying ||| by copying	count=2
module	of ||| 2.16	count=1
module	this function returns ||| 31 17.1	count=1
module	[module_1] nil ||| [module_1] [module_2]	count=2
function	string [function_2] ||| [function_2] [function_1]	count=10
module	has a non-nil ||| 6 6	count=1
function	searches [function] ||| search [function]	count=3
function	an abbrev ||| define abbrev	count=1
module	is non-nil that means ||| 27	count=1
function	print-length ||| print length	count=2
module	regular expression for ||| 33	count=2
function	input from the minibuffer ||| from minibuffer	count=1
arg	references in filename ||| filename	count=1
function_arg	window’s [arg_2] ||| [arg_2] [function_1]	count=3
function	the ||| event end	count=1
function	the name ||| login name	count=1
arg	column in position as ||| position	count=1
function	window at the ||| at	count=1
function	position in the current ||| position	count=1
function	function sets the file ||| set	count=1
module	so ||| 29 4	count=1
module	nonnegative integer ||| 13	count=1
function	set it ||| auto save	count=1
module	is non-nil the ||| 27 5	count=1
module	symbol of ||| 28 4	count=1
module	of the first match ||| 4	count=1
function	[function_1] shell ||| [function_1] [function_2]	count=3
arg	to coding-system ||| coding-system	count=1
function	function returns the name ||| name	count=2
arg	the list ||| list	count=1
arg	val ||| val	count=1
function	[function_1] size of ||| [function_2] [function_1]	count=2
module	value ||| 30 7	count=2
function	removes ||| delete	count=1
function	description of ||| description	count=1
function_arg	permissions of [arg_2] ||| [arg_2] [function_1]	count=3
arg	syntaxes a string of ||| syntaxes	count=1
function	buffer’s case table ||| buffer case table	count=1
function_arg	that satisfies [arg_2] ||| [arg_2] [function_1]	count=1
function	id ||| auto	count=1
function	it non-nil based ||| file	count=1
function	[function_1] element ||| [function_1] [function_2]	count=7
function	underline in pixels ||| underline	count=1
function	like next-single-property-change ||| next single char property	count=1
function	window ||| set window buffer	count=1
module	advice ||| 12 10.2	count=3
module	return a list ||| dash	count=6
function	the property ||| plist	count=1
function	mark-ring ||| mark	count=1
arg	file filename if ||| filename	count=1
module	keymap ||| 21	count=1
function	if no change is ||| property change	count=2
arg	within the range of ||| window partially	count=1
function	non-nil value ||| p	count=1
module	function ||| 12	count=7
function	by ||| up	count=1
function	new ||| up	count=2
function	[function_1] the object ||| [function_2] [function_1]	count=2
module	option specifies ||| 27	count=2
arg	propname for [arg_2] ||| [arg_2] [arg_1]	count=2
function	buffer as modified ||| buffer modified	count=1
function	the function ||| function	count=1
arg	and docstring and marks ||| docstring	count=1
arg	of list without the ||| list	count=1
function	for displaying in ||| up windows	count=1
function	reverse of ||| s reverse	count=1
function	the number ||| count	count=2
function	[function_1] property value ||| [function_2] and [function_1]	count=2
function	its argument ||| map char	count=1
arg	docstring and ||| docstring	count=1
function_arg	[function_1] to underline ||| [function_1] face [arg_2]	count=1
function	function puts ||| put	count=2
function	is the header ||| header	count=1
arg	syntax syntax ||| syntax	count=1
module	the function ||| 2	count=1
function_arg	overlay after [arg_2] ||| [arg_2] [function_1]	count=1
function	list of active ||| active	count=1
arg	[arg_1] to underline ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] binding ||| [arg_2] [function_1]	count=5
arg	this returns number ||| number	count=3
function	pad it ||| pad	count=1
function	recenter except if called ||| recenter	count=1
arg	overlay to buffer ||| buffer	count=1
function	of bool ||| bool vector intersection	count=1
arg	button ||| button type	count=1
function	the window as ||| window	count=1
arg	object1 [arg_2] ||| 2 7 equal [arg_1] [arg_2]	count=1
module	regular expression describing ||| 33	count=1
arg	return non-nil [arg] one ||| [arg]	count=1
function	echo area [function_2] ||| [function_1] [function_2]	count=1
function	remapping of ||| remap	count=1
arg	collection will [arg_2] ||| [arg_2] [arg_1]	count=1
function	query flag ||| query on exit	count=1
arg	[arg_1] pattern ||| [arg_2] [arg_1]	count=1
function	s to titleized words ||| titleized words	count=1
function	window below the selected ||| below selected	count=1
module	buffer in the buffer ||| 26 8	count=1
arg	of file filename ||| filename visit	count=1
module	of corresponding letters one ||| 4 9	count=1
function_arg	this sets [arg_2] ||| [function_1] [arg_2]	count=2
arg	from ||| from &optional to step	count=1
arg	a string of ||| format-string	count=1
arg	to [arg] ||| [arg]	count=3
function	dimensions of graphical displays ||| mm dimensions alist	count=1
function	active ||| current active	count=1
function	[function_1] indents ||| [function_1] newline and [function_2]	count=4
function	previous button ||| button	count=1
function	this command inserts contents ||| insert	count=1
function_arg	link [arg_2] ||| [arg_2] [function_1]	count=2
module	in windows [module] the buffer ||| [module]	count=1
arg	the proper offset ||| offset	count=1
function	make ||| pop up	count=1
arg	of sequences ||| sequences	count=1
module	current line which is ||| 17.1	count=1
function	file in directory dir ||| file in directory	count=1
arg	command fills ||| end justify citation-regexp	count=1
function_arg	the wildcard [arg_2] ||| [arg_2] [function_1]	count=2
arg	for filename to ||| filename	count=1
function	xml ||| xml region	count=2
function	process id ||| file	count=1
function_arg	stores value [arg_2] ||| [function_1] property char propname [arg_2]	count=1
function	sequence as [function_2] ||| [function_1] [function_2]	count=3
module	all the [module] ||| [module] 1.1	count=3
function_arg	[function_1] number number ||| [arg_2] [function_1]	count=2
arg	binding for the ||| binding	count=1
arg	x as the ||| x	count=1
function	it ||| save list file	count=2
function	returns the [function_2] ||| [function_1] [function_2] pos string	count=1
arg	string or ||| string	count=1
function	this function calls its ||| map	count=1
function_arg	made from [arg_2] ||| [function_1] vector [arg_2]	count=1
function_arg	[function_1] the value ||| [arg_2] [function_1]	count=4
function_arg	[function_1] after node ||| [function_1] ewoc [arg_2]	count=1
function	bytes ||| string bytes	count=1
module	for emacs ||| 38 1.1	count=1
arg	field of ||| field	count=1
function	if the ||| pop up	count=2
module	events [module_2] ||| [module_1] [module_2]	count=2
function	the :inverse-video ||| inverse video	count=1
function	of coding systems that ||| find coding systems for	count=1
module	a string constant ||| 21	count=1
function	a floating-point number ||| float	count=1
arg	take a predicate [arg_1] [arg_2] ||| index [arg_1] [arg_2]	count=3
arg	option symbol add value ||| symbol value	count=1
function_arg	[function_1] of window ||| [arg_2] [function_1]	count=2
function	on [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] filename [arg_2]	count=5
function_arg	entries in [arg_2] ||| [function_1] count [arg_2]	count=1
function	display the character at ||| at	count=1
function	to split an existing ||| pop	count=1
module	it as [module] ||| [module] 6.4	count=3
arg	prompting with prompt and ||| prompt directory	count=1
function	reads your init ||| save list file	count=1
module	systems ||| 32	count=1
function	specify the dimensions of ||| dimensions alist	count=1
function	the current insertion type ||| insertion type	count=1
function	coding ||| terminal coding	count=1
function	description of [function_2] ||| [function_2] table [function_1]	count=1
function	keyboard input from ||| keyboard	count=1
module	t ||| 31 1	count=2
function	the host ||| auto save list	count=1
arg	with prompt and ||| prompt initial history	count=1
function	returns [function] for which ||| window configuration [function]	count=1
arg	[arg_1] object2 ||| 2 7 equal [arg_1] [arg_2]	count=3
function	change group ||| change group	count=2
function	function converts the ||| kbd	count=1
function	and process id ||| file	count=1
arg	hook with properties props ||| hook props	count=1
module	make a new window ||| 27	count=1
arg	within the ||| window partially	count=1
function	syntax class characters ||| skip syntax forward	count=1
arg	charsets the ||| charsets	count=1
arg	the width ||| width pretend	count=1
function	to the header ||| header	count=1
function	to ||| signal	count=1
function	inserts a ||| insert buffer substring	count=1
function	the elements of ||| vconcat	count=1
arg	position in object rather ||| pos prop object	count=1
module	that means display-buffer ||| 27 14	count=1
arg	with prompt and ||| prompt	count=2
function	non-nil ||| file	count=1
function	first letter upper case ||| s capitalized?	count=1
module	ending position of ||| 20	count=1
module	you have ||| 25	count=1
function	this returns the ending ||| event	count=1
function_arg	expression from [arg_2] ||| [arg_2] [function_1]	count=1
function	name ||| save	count=1
function	is obsolete ||| obsolete	count=1
arg	by sending the ||| current-group	count=2
module	names ||| 24	count=2
module	file names ||| 24	count=1
function	to make backup files ||| make backup files	count=1
arg	separation and ending at ||| separation	count=1
arg	of years ||| format-string	count=1
module	font ||| 37 12.12	count=1
arg	takes several prec2 tables ||| tables	count=1
arg	count lines to the ||| count	count=1
arg	in ||| predicate	count=2
function	inserts ||| insert buffer	count=1
function	[function_1] of ||| [function_2] [function_1]	count=12
arg	coding-system ||| coding-system	count=6
function	inhibits the startup ||| inhibit startup	count=1
arg	respectively ||| ewoc	count=2
arg	face face ||| face	count=1
arg	a replacement operation on ||| replacement	count=1
arg	command fills [arg_2] ||| [arg_1] [arg_2]	count=1
module	of the buffer ||| 1	count=1
module	a key ||| 21 1	count=1
module	buffer so that the ||| 29 4	count=1
module	a [module] whether or ||| [module] 1	count=1
arg	[arg] a 1-arity ||| [arg]	count=1
arg	in the cyclic ordering ||| minibuf all-frames	count=2
function	auto-save-list-file-name ||| auto save	count=1
arg	to position [arg_2] ||| [arg_2] [arg_1]	count=3
arg	the symbol ||| symbol	count=1
function	can be loaded and ||| available p	count=1
module	argument function ||| 6	count=2
function	property named property ||| get	count=1
module	of this variable ||| 30 7	count=1
module	this [module_2] ||| [module_1] [module_2] downcase	count=1
function_arg	the value position ||| char position	count=1
function	an abbrev [function_2] ||| [function_1] [function_2]	count=1
function	day number within ||| day in	count=1
module	parameters [module_2] ||| [module_1] [module_2]	count=2
arg	call-process-shell-command ||| infile destination display	count=1
module	element of ||| 6 6	count=1
function	ask a [function_2] ||| [function_1] [function_2] about supersession threat	count=1
function	each ||| map	count=1
module	to process process ||| 36 8	count=1
function	subtype symbol ||| char table subtype	count=1
module	after ||| 31 11	count=1
module	accessible ||| 29	count=1
arg	macro defines ||| docstring	count=1
arg	of sequence ||| sequence	count=1
arg	function returns ||| frame	count=5
module	basic function ||| 9	count=1
function	geometry ||| geometry	count=1
function	generic ||| generic	count=1
function	the rest to ||| capitalize	count=1
function	t if ||| p	count=1
function	current depth of activations ||| depth	count=1
function	the object ||| posn object	count=1
function_arg	display table [arg_2] ||| [arg_2] [function_1]	count=3
arg	of the character old-char ||| old-char	count=1
function	function sets window’s value ||| set window parameter	count=1
function	maximum size of mark-ring ||| max	count=1
module	this ||| 29	count=2
arg	width of ||| width pretend	count=1
arg	the resulting sequence ||| sequence	count=1
function	the currently active ||| window active	count=1
function	of screen [function_2] ||| [function_1] [function_2]	count=4
function	versions to ||| versions	count=1
function	number of ||| face id	count=1
function	[function_1] xml rather ||| [function_1] [function_2]	count=4
module	new [module] spec ||| [module]	count=1
module	contents ||| 4	count=1
module	property of ||| 6	count=1
arg	arguments to fn ||| fn	count=1
function	for [function_2] ||| [function_1] [function_2]	count=4
module	this function returns ||| 4 3	count=1
function	and right margins of ||| window margins	count=1
function	of the results ||| mapreduce	count=1
arg	start and ||| process start	count=1
function	non-nil value ||| map char table	count=1
arg	n ||| s n	count=1
function_arg	a button [arg_2] ||| [arg_2] [function_1]	count=6
module	buffers ||| 27	count=1
function	if ||| save list	count=1
module	sorts ||| 31 15	count=1
arg	volume and [arg_2] ||| [arg_2] [arg_1]	count=1
module	function tests ||| 10 3	count=1
module	function ||| 29	count=3
function_arg	category [arg_2] ||| [function_1] char docstring [arg_2]	count=1
function_arg	[function_1] [arg_2] the current buffer ||| [function_1] [arg_2]	count=3
function	creates and returns ||| make overlay	count=1
module	function returns t if ||| 31	count=2
arg	syntaxes a ||| syntaxes limit	count=1
function	text properties ||| buffer substring no properties	count=1
module	by ||| 27 14	count=2
module	user ||| 38 4	count=1
arg	keys in keymap ||| keymap	count=1
function	a string or a ||| or	count=1
function	this function ||| kbd	count=1
module	of this variable ||| 7	count=1
arg	acts on the ||| appendp object	count=1
arg	a signal to ||| process signal	count=1
function	screens associated with the ||| display screens	count=1
function	text [function_2] ||| face [function_1] [function_2]	count=1
function	as an alias ||| alias	count=2
function	you have ||| auto save list file	count=1
function	rest to lower ||| s capitalize	count=1
function	[function_1] current line ||| [function_1] [function_2]	count=10
function	is a minibuffer ||| window minibuffer	count=1
function	if ||| list file	count=1
module	processes ||| 36	count=2
function	the startup ||| inhibit startup	count=2
function	backups by [function_2] ||| [function_1] [function_2]	count=7
arg	[arg_1] and device ||| [arg_1] [arg_2]	count=1
function	a package [function_2] ||| [function_2] [function_1]	count=2
function	returns window’s value ||| window parameter	count=1
arg	value value [arg_2] ||| [arg_1] [arg_2]	count=5
function	[function_1] sequence as ||| [function_2] [function_1]	count=4
module	0 point-min ||| 1	count=1
function	face face displays differently ||| differs	count=1
arg	underline ||| underline	count=1
function	a string ||| make string	count=2
function_arg	[function_1] for command ||| [arg_2] [function_1]	count=4
function	non-nil display-buffer is allowed ||| up	count=1
arg	convert the first ||| s	count=1
function	function stores value ||| code	count=1
function	window for displaying in ||| up windows	count=1
function	list -drop-while ||| split with	count=1
function	this returns the query ||| process query on exit	count=1
function	after ||| save list	count=1
function	a resource ||| get resource	count=1
function	this function returns ||| window parameter	count=1
function	buffer by choosing ||| display buffer use some	count=1
function	a new ||| other	count=1
function	print-length and print-level used ||| print length	count=1
function	frame ||| window frame	count=1
function_arg	pid of process ||| process id process	count=2
function	that represents in shell ||| shell quote	count=1
function	function sets the ||| set marker	count=1
arg	end according [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] the body ||| [function_2] [function_1]	count=2
module	display-buffer may display ||| 14	count=1
arg	of string in ||| string collection predicate	count=1
arg	with font-spec ||| font-spec frame	count=1
arg	a replacement ||| replacement	count=1
module	there is none ||| 21.3	count=1
function	variable ||| mode	count=1
module	new vector containing all ||| 6 5	count=1
function	in bool vector ||| bool vector count	count=2
function	from the user at ||| user	count=1
module	of [module_2] ||| [module_2] [module_1]	count=1
function	bool [function_2] ||| [function_1] [function_2]	count=1
arg	of face ||| face	count=5
function	if you ||| save list file	count=1
function	a network ||| network	count=1
rep	[module_1] [function_arg_2] ||| [module_1] make [function_arg_2]	count=4
function	auto-save-list-file-name if you have ||| file	count=1
module	containing all ||| 5	count=1
function	remapping ||| remap	count=1
arg	bar items [arg] ||| [arg]	count=1
module	a ||| 31	count=1
function	sets ||| set right	count=1
module	function returns ||| 17.1	count=1
function	hash table ||| hash table	count=2
function	the beginning ||| bolp	count=1
function	a description [function_2] ||| [function_2] [function_1]	count=3
arg	reg into the current ||| reg beforep	count=1
arg	returns [arg] ||| [arg]	count=1
function	host ||| save	count=1
function	the coding system ||| coding system	count=3
function	not already set it ||| list	count=1
function	it as obsolete ||| obsolete	count=1
arg	according to spec ||| spec	count=1
function	makes a symbolic ||| make symbolic	count=2
module	to the list of ||| 14 3	count=1
function	tests coverage of ||| edebug test coverage	count=1
function	property ||| property	count=6
function	[function_1] default ||| [function_2] [function_1]	count=4
function	emacs was waiting for ||| waiting for	count=1
function	the ||| auto save list	count=1
function	parent of ||| parent	count=1
arg	binding [arg_2] ||| [arg_2] [arg_1]	count=5
function	tests coverage ||| edebug test coverage	count=1
arg	file filename into the ||| filename visit beg end	count=1
function	function expands the ||| file expand	count=1
module	of corresponding letters ||| 4	count=1
module	selected ||| 27 14	count=1
arg	minibuffer prompting with ||| default inhibit-null	count=1
function	the mouse pointer style ||| pointer	count=1
arg	prompt ||| prompt	count=6
module	sequence a string ||| 1	count=1
function	[function_1] vector never ||| [function_2] [function_1]	count=5
function	non-nil based ||| list file	count=1
function_arg	[function_1] of s ||| [function_1] [arg_2]	count=3
function	function inserts [function_2] ||| [function_1] [function_2]	count=1
arg	predicate [arg] and ||| [arg]	count=1
module	the falsehood of ||| 10 3	count=1
arg	name char and documentation ||| char	count=1
function	address of the ||| address	count=1
function	it initializes ||| save list	count=1
module	tries ||| 27 13	count=1
function	the window ||| posn	count=1
function	right ||| right	count=2
module	positions ||| 27 18	count=1
arg	from pos ||| pos object limit	count=1
function	geometry ||| parse geometry	count=1
module	called ||| 20 4	count=1
function	bool vectors a and ||| bool vector	count=1
arg	string or nil if ||| string	count=1
arg	this function returns arg ||| arg	count=1
function	current local ||| local	count=1
module	new window ||| 27	count=1
function	that has a ||| char table	count=1
arg	[arg_1] [arg_2] ||| [arg_2] rep [arg_1]	count=1
function	when an error is ||| on error	count=1
module	activates ||| 32 11	count=1
function_arg	sum [arg_2] ||| [function_1] [arg_2]	count=1
arg	each hook function in ||| hook args	count=1
function	it initializes auto-save-list-file-name if ||| list	count=1
function	split ||| s split up	count=1
function	character ||| current	count=1
function	[function_1] table ||| [function_2] [function_1]	count=29
function	a new [function_2] ||| [function_2] [function_1]	count=9
module	this ||| 25 2	count=2
function	“succeeds” ||| success	count=1
function	two window configurations ||| compare window configurations	count=2
arg	named function so ||| function	count=1
function	reads your init file ||| file	count=1
arg	peer address to address ||| process address	count=1
arg	list-of-strings into a ||| list-of-strings	count=1
module	in the current buffer ||| 29 4	count=1
arg	width of frame ||| frame width	count=1
function	a window below the ||| below	count=1
function	the text of ||| text	count=1
function	its argument function for ||| char table	count=1
function	calls its argument ||| map	count=1
arg	and documentation docstring ||| docstring	count=1
module	decoded text ||| 31	count=1
function	positions for ||| positions	count=1
function	a list of all ||| all	count=1
function	unibyte ||| unibyte	count=1
function_arg	[function_1] descriptor ||| [function_1] [arg_2]	count=1
module	may display ||| 27	count=1
module	constant into ||| 21 1	count=1
function_arg	[function_1] old-pos ||| [function_1] new-pos [arg_2]	count=3
function	[function_1] command from ||| [function_2] [function_1]	count=4
function	selected window ||| selected	count=1
module	function calls its ||| 6	count=2
function	of all ||| test	count=1
function	[function_1] remapping of ||| [function_2] set [function_1]	count=2
function	you have not already ||| auto	count=1
arg	line count screen lines ||| count	count=1
arg	l and ||| l	count=1
module	minibuffer and ||| 19 2	count=1
function	fontset according ||| from fontset	count=1
function	the parent of ||| parent	count=1
function	prefix ||| string prefix	count=1
arg	[arg_1] and list2 ||| [arg_2] [arg_1]	count=1
arg	old-char ||| old-char	count=1
arg	[arg_1] flag ||| [arg_1] [arg_2]	count=3
arg	and list2 has the ||| list2	count=1
module	string or vector constant ||| 1	count=1
function	[function_1] an input ||| [function_1] [function_2]	count=2
function	key sequence as a ||| key sequence	count=1
module	auto-save-list-file-name if you ||| 25	count=1
module	host name and process ||| 25	count=1
function	has ||| char table	count=2
function	shell syntax an ||| shell quote	count=1
function	specified text [function] ||| remove text [function]	count=1
function	this function stores value ||| code	count=1
arg	value rgb ||| rgb	count=1
module	string or vector ||| 1	count=1
function	of screen ||| screen	count=1
module	by making ||| 14	count=1
function	the overlay ||| overlay	count=1
function	command input ||| input	count=1
function	creating the initial frame ||| initial frame	count=1
function	function returns the file ||| file	count=1
module	host name ||| 25	count=1
module	is using emacs ||| 38 4	count=1
module	buffer so that ||| 29	count=1
function	a file in ||| file in	count=1
module	or vector constant ||| 21 1	count=1
function	inserts the abbrev ||| insert	count=1
module	has a ||| 6	count=2
arg	this command fills ||| start end justify citation-regexp	count=1
arg	function defines the function ||| docstring	count=1
arg	this function calls its ||| function	count=1
function_arg	[function_1] new-pos ||| 31 19.9 constrain [function_1] field [arg_2]	count=1
module	auto-save-list-file-name if you have ||| 2	count=1
module	returns ||| 7.13	count=1
arg	var as a ||| var fun	count=1
function	the body ||| body	count=1
function	that has a non-nil ||| char table	count=1
function	returns the xlfd ||| xlfd	count=1
function	returns the ||| event end	count=1
function	watch specified by its ||| watch	count=1
module	its ||| 6.1	count=1
module	function returns the ||| 31	count=1
module	file converting ||| 12.2	count=1
function	documentation string ||| face documentation	count=1
function	the falsehood of ||| not	count=1
function	local keymap or ||| local	count=1
module	if this variable is ||| 11	count=1
function	element that [function_2] ||| [function_2] history [function_1]	count=4
function	forward in the ||| forward	count=1
function	sends a ||| signal	count=1
function_arg	[function_1] [arg_2] expand to expansion and ||| [function_1] [arg_2]	count=6
function	style of justification to ||| justification	count=1
module	progress ||| 37 4.2	count=1
function	returns the parent ||| char table parent	count=1
module	this ||| 36	count=1
module	string or ||| 21 1	count=1
function	the next sibling ||| next sibling	count=1
function	selected ||| set frame selected	count=1
function	extra ||| extra	count=2
module	you have ||| 25 2	count=1
arg	properties ||| properties	count=2
rep	[module_1] [function_arg_2] ||| [module_1] posn [function_arg_2]	count=1
function	key [function_2] ||| [function_2] [function_1]	count=7
module	make a new ||| 27 14	count=1
arg	is longer than len ||| len s	count=1
arg	[arg_1] optionally ||| [arg_1] [arg_2]	count=3
function	of screens associated with ||| display screens	count=1
function	category table ||| category table	count=2
function	charset of ||| charset after	count=1
function	next newer history ||| next matching history	count=1
function	the [function] ||| buffer swap [function]	count=3
arg	lines that start within ||| start	count=1
function	wrap the words ||| s word wrap	count=1
function_arg	for directory [arg_2] ||| [arg_2] [function_1]	count=3
function	get input from ||| read from	count=1
module	the ||| 19	count=2
arg	of filename [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	bool vector [arg_2] ||| [function_1] population [arg_2]	count=1
function	returns a copy ||| properties	count=1
arg	newdef for ||| newdef	count=1
module	sequence a string or ||| 1	count=1
module	elements ||| 5	count=2
module	is non-nil display-buffer is ||| 14	count=1
function	exits ||| exit	count=1
function	that ||| map char table	count=2
module	this is the ||| 8	count=1
function	network interface named ||| network interface	count=1
arg	in non-nil thread ||| &optional	count=1
function	the next button ||| next button	count=2
function	calls its ||| char	count=1
function	have not already ||| list	count=1
function	[function_1] tool bar ||| [function_2] [function_1]	count=4
arg	font-spec for the ||| font-spec frame	count=1
function	command deletes ||| delete	count=2
module	minibuffer prompting with ||| 19 6.5	count=1
arg	the most general way ||| prompt initial keymap read history default inherit-input-method	count=1
function_arg	[function_1] of count ||| [function_1] [arg_2]	count=2
function	function kills ||| kill process	count=1
function	files by [function_2] ||| [function_2] [function_1]	count=1
function	coding system to ||| terminal coding system	count=1
function	function sets its remote ||| set	count=1
function	bottom ||| bottom	count=2
function	regular expression whose ||| regexp quote	count=2
function_arg	alphabetically [arg_2] ||| [arg_2] [function_1]	count=2
function	init file it initializes ||| auto save list	count=1
arg	[arg_1] bold-p ||| bold [arg_1] [arg_2]	count=1
function	string ||| to string	count=1
function_arg	[function_1] start and ||| [function_1] [arg_2]	count=10
module	if point is at ||| 31	count=2
function	[function_1] simple cases ||| [function_2] [function_1]	count=1
module	custom ||| 14 6	count=2
module	this function converts the ||| 1	count=1
function	to split an existing ||| pop up	count=1
function_arg	the remapping [arg_2] ||| [arg_2] [function_1]	count=3
function	the epoch to a ||| to time	count=1
function	non-nil based on this ||| auto save list file	count=1
function	as the coding system ||| set terminal coding system	count=1
module	function calls its ||| 6 6	count=1
function	into the scroll ||| scroll	count=1
function	after emacs reads your ||| auto save list	count=1
function_arg	displays the [arg_2] ||| [function_1] other frame [arg_2]	count=3
function	this function calls its ||| map char table	count=1
function_arg	gives it [arg_2] ||| 11 10.2 [function_1] local variable [arg_2]	count=1
arg	match-form [arg_2] ||| [arg_2] [arg_1]	count=3
module	greater than ||| 29	count=1
function_arg	button from beg ||| button beg	count=2
arg	windows in the cyclic ||| minibuf all-frames default	count=1
function	x ||| x get	count=1
function	header line ||| header	count=1
function	to specify margins around ||| margins	count=1
module	of years ||| 7	count=1
function	remote ||| remote file name inhibit cache	count=1
arg	fn with ||| fn	count=1
function	[function_1] mode ||| [function_1] [function_2] line update all	count=2
module	in the echo ||| 37 4.1	count=1
arg	the width ||| width	count=1
function	pixel edge of ||| window pixel	count=1
arg	resembles insert-buffer-substring except ||| buf start end	count=1
function	tests coverage ||| test coverage	count=1
function	currently visible on the ||| pos visible in	count=1
function	to process process ||| process	count=1
arg	n [arg_2] ||| [arg_2] [arg_1]	count=7
function	destroy the [function_2] ||| [function_1] [function_2]	count=4
function	and process id ||| save	count=1
rep	[module_1] [function_arg_2] ||| [module_1] insert [function_arg_2]	count=8
function	the current buffer’s mark ||| mark	count=1
arg	resizes ||| pretend pixelwise	count=1
function	extension if any ||| extension	count=1
arg	position specified by order ||| order	count=1
function	file it ||| save	count=1
function	screen lines in ||| count screen lines	count=2
module	all ||| 17	count=1
function	sets ||| set keymap parent	count=1
function	columns to the left ||| left	count=1
module	and returns that ||| 38 7	count=1
module	files created ||| 24	count=1
arg	[arg] each element ||| [arg]	count=1
module	list of numbers ||| 5 4	count=1
function	maximum [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] as the ||| [arg_1] [arg_2]	count=4
function	point-min ||| buffer end	count=1
module	debugger is ||| 17 1.1	count=1
module	[module] sorted list ||| [module] 6.3	count=1
function_arg	year corresponding [arg_2] ||| [function_1] [arg_2]	count=1
function	for a backup file ||| backup file	count=1
function	key ||| key	count=2
function	function puts the ||| state put	count=1
function_arg	overlay [arg_2] ||| [arg_2] [function_1]	count=2
arg	for command a symbol ||| command	count=1
function_arg	integers [arg_2] ||| [function_1] integers [arg_2]	count=2
arg	in syntaxes a ||| syntaxes	count=1
function	works like assoc ||| assoc	count=1
function	minibuffer raises the frame ||| auto raise	count=1
arg	repetitions of ||| character	count=1
module	process ||| 36	count=2
function	the fringe ||| fringe bitmap face	count=1
function	initial execution mode for ||| edebug initial mode	count=1
function	or a ||| or	count=2
function	nil switch-to-buffer displays ||| to buffer preserve	count=1
function	an input ||| input	count=1
function	[function] local ||| [function] local	count=3
module	is the ||| 8	count=1
function	next ||| next matching	count=1
function	overlay after ||| overlay	count=1
arg	using function fn ||| fn &rest	count=1
function	not already set ||| auto	count=1
function	backups by copying for ||| backup by copying	count=1
arg	nil if obarray ||| name obarray	count=1
arg	that key must ||| key	count=1
function	the host name and ||| auto save	count=1
function	parent ||| window parent	count=1
function	is the maximum size ||| mark ring max	count=1
function	description [function_2] ||| [function_2] table [function_1]	count=1
function	after emacs ||| file	count=1
arg	regexp in string ||| regexp string &optional subexp-depth	count=1
function_arg	[function_1] command a ||| [arg_2] [function_1]	count=3
function	the buffer ||| revert buffer	count=1
function	you have not ||| save	count=1
function	whose syntax classes are ||| skip syntax	count=1
function	bool vectors a and ||| bool vector intersection	count=1
function	beginning of the field ||| field beginning	count=1
arg	element of sequence ||| sequence	count=1
module	return non-nil ||| dash	count=1
arg	conversion of eol-coding ||| eol-coding	count=1
function	current buffer’s mark ||| mark	count=1
arg	new-char in the ||| new-char noundo	count=1
arg	command ||| command	count=2
function_arg	[function_1] with args ||| [arg_2] [function_1]	count=1
function	largest or least recently-used ||| pop up	count=1
function_arg	[function_1] position pos ||| [arg_2] [function_1]	count=2
function_arg	[function_1] if ||| [function_1] n [arg_2]	count=4
arg	dom into ||| dom	count=1
function_arg	remapping [arg_2] ||| [arg_2] [function_1]	count=7
module	returns a ||| 5	count=1
arg	index from to ||| from &optional to step	count=1
function	of ||| test	count=1
module	if this variable is ||| 27 11	count=1
function_arg	[function_1] field of ||| [function_1] [arg_2]	count=5
function	none ||| current	count=1
arg	volume and device ||| volume device	count=3
function	previous older [function_2] ||| [function_1] complete [function_2]	count=3
function	by choosing an existing ||| use some	count=1
arg	function to ||| function	count=1
arg	of property prop ||| prop	count=1
function	for a backup ||| backup	count=1
function_arg	of register reg ||| register reg beforep	count=1
arg	inverse-video-p ||| inverse-video-p	count=1
module	so that ||| 29	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x1 [arg_2]	count=21
function	is greater than ||| end	count=1
function	charset ||| charset	count=1
function	variable is ||| mark ring	count=1
function	for the falsehood of ||| not	count=1
arg	nodes ||| nodes	count=1
module	display-buffer is allowed to ||| 27 14	count=1
function_arg	region from beg ||| region beg	count=1
function_arg	[function_1] fname ||| [arg_2] [function_1]	count=5
function	tab in most ||| indent for tab	count=1
function	have not ||| list	count=1
arg	providing completion ||| collection predicate require-match initial history	count=1
function	to split ||| up	count=1
function_arg	[function_1] nil otherwise ||| [arg_2] [function_1]	count=5
function	parent ||| char table parent	count=1
arg	that has a non-nil ||| function	count=1
function	window’s ||| parameter	count=1
arg	the variable var as ||| var	count=1
function	returns ||| window parameter	count=2
module	for the falsehood ||| 10	count=1
module	into ||| 21	count=1
arg	directory names as completion ||| directory	count=1
function	[function_1] [function_2] by modifying tool-bar-map ||| [function_1] [function_2]	count=2
function	window’s header line ||| window header line	count=2
arg	as the value of ||| value	count=1
function	symbolic link to ||| symbolic link	count=2
module	this function ||| 19 13	count=1
function	set it non-nil based ||| save list	count=1
arg	newest element [arg_2] ||| [arg_1] [arg_2]	count=1
arg	with font-spec ||| font-spec	count=1
module	start [module] ||| [module]	count=3
arg	value [arg_2] ||| [arg_2] [arg_1]	count=2
function	insertion type ||| insertion type	count=2
function	line which is ||| current	count=1
module	it initializes auto-save-list-file-name ||| 25 2	count=1
function	this is the command ||| command	count=1
module	if point is at ||| 1	count=2
module	so that the entire ||| 29 4	count=1
function	it the window as ||| window	count=1
function	defines a pop-up ||| menu define	count=1
function	new frames ||| pop up frames	count=1
function	file name of ||| terminal name	count=1
arg	end at end ||| end	count=1
arg	[arg_1] function symbol ||| [arg_2] [arg_1]	count=8
arg	name a string ||| name	count=1
function	returns the position ||| marker position	count=1
arg	command named fname ||| fname	count=1
module	frames on the ||| 28	count=1
module	of the ||| 17.1	count=2
function	command input is currently ||| input	count=1
function	deletes [function_2] ||| [function_1] [function_2]	count=3
function	rest to lower ||| capitalize	count=1
function	function expands ||| expand	count=1
function	image ||| image	count=3
function	emacs ||| file	count=1
function_arg	[function_1] to time ||| [function_1] [arg_2]	count=4
function	of ||| format	count=1
function	it non-nil based on ||| list file	count=1
arg	locale data item ||| item	count=1
function	have ||| save	count=1
function_arg	[function_1] key must ||| [arg_2] [function_1]	count=2
arg	name char [arg_2] ||| [arg_1] [arg_2]	count=2
function	the capabilities ||| capabilities	count=1
function	[function_1] file name ||| [function_1] [function_2]	count=3
function	it non-nil based on ||| auto save	count=1
function	region from ||| fill region	count=1
function_arg	the command bound ||| command rigid	count=1
function	right or ||| right	count=1
function	first letter upper case ||| capitalized?	count=1
function	to get input from ||| read from	count=1
module	to use for encoding ||| 32 10.8	count=1
arg	the elements of alist ||| alist	count=1
module	years days hours etc ||| 38 7	count=1
module	this ||| 7.13	count=1
function	to the header line ||| header	count=1
function	horizontal ||| current	count=1
function_arg	list -drop-while [arg_2] ||| [arg_2] [function_1]	count=1
function	appends ||| append to	count=1
module	displaying ||| 37	count=2
function	as dedicated to its ||| window dedicated p	count=1
module	and the ||| 7	count=1
module	function returns ||| 27	count=1
module	this variable ||| 11 11	count=1
function	ending position of ||| event end	count=1
arg	acts on the text ||| appendp object	count=1
function	display-start position ||| start	count=1
arg	from terminal ||| terminal	count=2
function	whose syntax ||| skip syntax backward	count=1
function_arg	the value [arg_2] ||| [function_1] [arg_2]	count=1
module	emacs to the terminal ||| 38 13	count=1
module	this function ||| 35 1	count=1
function	sets the :underline attribute ||| set	count=1
arg	end in the current ||| end	count=2
arg	the previous [arg] of that ||| [arg]	count=1
function_arg	object [arg_2] ||| [function_1] x y [arg_2]	count=3
arg	to typically ||| to	count=1
arg	[arg_1] symbol ||| [arg_1] [arg_2]	count=1
arg	expression ||| regexp	count=1
arg	function returns the ||| count-final-newline window	count=1
module	constant into ||| 1	count=1
arg	list that is ||| list	count=1
function	[function_1] in bool ||| [function_2] [function_1]	count=3
arg	in object if ||| prop object	count=1
function	function closes ||| close	count=1
function	function returns the parent ||| parent	count=1
function	function returns the standard ||| standard	count=1
function	it ||| save	count=2
function_arg	[function_1] number ||| 3 4 [function_1] [arg_2]	count=3
function	sequence as ||| sequence	count=1
function	function insert-before-markers but ||| and	count=1
function	if you ||| save	count=1
arg	lists together ||| &rest lists	count=1
arg	[arg_1] underline ||| [arg_1] [arg_2]	count=3
function	it ||| auto save list	count=2
function_arg	[function_1] process ||| [function_1] [arg_2]	count=12
arg	parameter ||| parameter	count=2
module	this variable is the ||| 30	count=1
function	frame to its ||| frame to buffer	count=2
function	the value of this ||| up	count=2
function	is non-nil that ||| pop up	count=1
function	has a non-nil ||| map	count=1
module	in the ||| 4	count=1
function	current global [function_2] ||| [function_2] [function_1]	count=1
function_arg	slot [arg_2] ||| [arg_2] [function_1]	count=6
function	a package ||| define package	count=2
function	[function_1] returns t ||| [function_2] [function_1]	count=2
arg	with the label label ||| label	count=1
arg	rgb value rgb ||| rgb frame	count=1
function	function deletes the text ||| delete	count=1
function_arg	lines in [arg_2] ||| [function_1] [arg_2]	count=2
function	split s up ||| split up	count=1
function	nil switch-to-buffer displays ||| buffer preserve	count=1
function	current buffer using text ||| text	count=1
module	the name of a ||| 14 6	count=1
module	hours ||| 38	count=1
function	like looking-at ||| looking at	count=1
function	based on this ||| auto	count=1
function	number in the current ||| number at	count=1
function	and if ||| p	count=1
function	function returns the remapping ||| remapping	count=1
function	displays a list of ||| list charset	count=1
module	files that ||| 24	count=1
function	if the value of ||| pop	count=2
function	the controlling terminal ||| controlling tty	count=1
function	this ||| format seconds	count=2
module	already set it non-nil ||| 25 2	count=1
arg	prompt and providing intelligent ||| prompt initial	count=1
arg	fn to ||| fn	count=4
arg	elements in list equal ||| elem list	count=1
module	line ||| 31 17.1	count=2
arg	name a symbol ||| name	count=1
function	[function_1] slot ||| [function_1] [function_2]	count=5
arg	[arg] separated ||| sep [arg]	count=2
module	file names that match ||| 24	count=1
arg	this function acts on ||| appendp object	count=1
arg	in symbol’s [arg_2] ||| [arg_1] [arg_2]	count=2
arg	end [arg_2] ||| [arg_1] [arg_2]	count=2
module	sent by emacs to ||| 38	count=1
function	function stores value as ||| code	count=1
function	s to uppercamelcase ||| upper camel case	count=1
function	has a non-nil ||| char	count=1
function_arg	the shell [arg_2] ||| [arg_2] [function_1]	count=2
function	copy text properties just ||| properties	count=1
function	function returns [function] ||| window configuration [function]	count=1
function_arg	[function_1] according ||| [arg_2] [function_1]	count=3
module	buffer in the buffer ||| 8	count=1
module	debugger ||| 17	count=6
function	than 0 point-min otherwise ||| buffer end	count=1
function	-remove ||| separate	count=1
function	[function_1] local ||| [function_1] [function_2]	count=1
module	allowed to split an ||| 27 14	count=1
arg	function calls its argument ||| function	count=1
module	time ||| 38 9	count=2
function	keyboard input from ||| set keyboard	count=1
function	emacs makes backups by ||| backup by	count=2
arg	:slant attribute of face ||| face	count=1
module	of all expressions debugged ||| 17	count=1
function	this ||| buffer	count=1
function	vector never as ||| vector	count=1
function	[function] of the ||| buffer [function]	count=1
function	new fontset ||| create fontset from fontset spec	count=1
function	current insertion [function_2] ||| [function_1] [function_2]	count=2
function	window’s header [function_2] ||| [function_2] [function_1]	count=1
module	name ||| 2	count=1
function_arg	the sentinel [arg_2] ||| [arg_2] [function_1]	count=1
function	new fontset ||| fontset spec	count=1
function	[function_1] wildcard ||| [function_1] [function_2]	count=3
function	[function_1] method ||| [function_2] [function_1]	count=6
function	about the overlay that ||| overlay	count=1
function	than ||| than buffer	count=2
module	buffer ||| 4	count=1
function	filename ||| sans versions	count=1
function	directory name ||| directory	count=2
arg	in sequence ||| sequence	count=2
module	of ||| 3	count=2
function	that has a non-nil ||| map char table	count=1
function	one [function] does ||| [function]	count=1
function	an ||| up	count=1
function_arg	[function_1] name ||| [function_1] font [arg_2]	count=3
function	the user at ||| user	count=1
function	the character at ||| at	count=2
function	the editable contents ||| minibuffer contents	count=1
module	the ||| 34 8	count=1
arg	this function returns [arg_1] [arg_2] have equal components and ||| [arg_1] [arg_2]	count=1
arg	[arg] grouped ||| n step [arg]	count=3
function	function for each ||| char table	count=1
function	after emacs ||| list file	count=1
function	entries ||| hash table	count=1
arg	frame frame based ||| frame	count=1
function	frame that the ||| window frame	count=1
function	a serial port ||| serial	count=1
arg	[arg_1] add value ||| [arg_2] [arg_1]	count=4
arg	given list which ||| elem list	count=1
function	to make a ||| pop up	count=1
function	in directory dir or ||| file in directory	count=1
arg	each hook [arg_2] ||| [arg_2] [arg_1]	count=3
arg	replacement ||| replacement	count=1
function_arg	sentinel [arg_2] ||| [arg_2] [function_1]	count=1
arg	customization option symbol ||| symbol	count=1
function	[function_1] current line ||| [function_2] [function_1]	count=10
function	the handler ||| handler	count=1
function	[function_1] simple cases ||| [function_1] [function_2]	count=1
function	boundary element in ||| boundary	count=1
module	returns window’s ||| 27 25	count=1
arg	between positions [arg] ||| [arg]	count=1
arg	this function reads a ||| prompt	count=1
function	calls its argument ||| char table	count=1
function	the key ||| key	count=1
function	[function_1] window configurations ||| [function_1] [function_2]	count=3
module	the first ||| 31	count=1
module	the value of ||| 27 14	count=2
function	be fit by fit-frame-to-buffer ||| fit frame to	count=1
function	sigtstp ||| stop	count=1
module	process ||| 25 2	count=2
module	of the screen ||| 27 4	count=1
function	vector ||| vector count	count=1
module	is ||| 31 1	count=2
function_arg	[function_1] of char-table ||| [arg_2] [function_1]	count=7
module	or ||| 1	count=1
arg	len ||| len s	count=1
function	new ||| spec	count=1
function	currently active minibuffer window ||| minibuffer window active	count=1
function	name of the font ||| face font	count=1
function_arg	[function_1] new-alias as ||| [arg_2] [function_1]	count=2
function_arg	[function_1] x2 ||| [function_1] x1 [arg_2]	count=3
function_arg	[function_1] of symbol ||| [function_1] [arg_2]	count=3
module	element ||| 6 6	count=2
function	default [function_2] ||| [function_1] [function_2]	count=5
function	current buffer ||| buffer	count=8
function	minimum size of ||| min size	count=2
function	this function tests ||| not	count=1
arg	of face ||| face frame	count=1
function_arg	[function_1] named name ||| [arg_2] [function_1]	count=9
function	file to load before ||| file	count=1
module	horizontal position of ||| 17.1	count=1
arg	table and ||| table	count=1
arg	string ||| string &optional subexp-depth	count=1
arg	from the alist parameters ||| display parameters	count=1
arg	color name name ||| name	count=1
arg	var and execute body ||| body	count=1
function	it non-nil based ||| list file	count=1
function	the owner or the ||| when mismatch	count=1
function	remove whitespace at the ||| trim	count=1
function	the selinux context of ||| selinux context	count=1
arg	the given list which ||| elem list	count=1
function_arg	subtype symbol [arg_2] ||| [function_1] [arg_2]	count=1
arg	if obarray has no ||| name obarray	count=1
function	backward from point for ||| backward	count=1
function	existing menu ||| menu	count=1
function	an [function] ||| [function] change	count=1
arg	flag is non-nil and ||| window flag	count=1
function	auto-save-list-file-name ||| save list	count=1
module	frames and several different ||| 28 23	count=1
function	to point ||| point	count=1
arg	buffer-or-name ||| buffer-or-name	count=8
arg	docstring for the ||| docstring	count=1
arg	alist ||| alist	count=7
function	the change group that ||| change group	count=1
arg	of eol-coding and the ||| eol-coding	count=1
module	in ewoc found at ||| 19.1	count=1
function	new window for displaying ||| pop up	count=1
arg	text from beg to ||| beg	count=1
function	function sets the base ||| set base	count=1
function	[function] being ||| [function]	count=3
function	floating-point number of ||| float	count=1
function_arg	[function_1] of string ||| [arg_2] [function_1]	count=1
arg	element element ||| element	count=2
function	the proper [function_2] ||| [function_2] [function_1]	count=3
function	the insertion type of ||| insertion type	count=1
function	the dimensions of ||| mm dimensions alist	count=1
arg	to position and ||| position	count=1
arg	to to to the ||| to	count=2
function	file it uploads the ||| upload buffer	count=1
arg	position in object rather ||| object	count=1
function	initializes auto-save-list-file-name ||| auto save list	count=1
module	[module] has ||| [module]	count=3
module	variables during ||| 22 4.1	count=1
module	non-nil lisp programs and ||| 30 7	count=1
function	the pid of ||| id	count=1
function	of coding systems ||| find coding systems for	count=1
arg	function [arg] a ||| [arg]	count=1
module	the ||| 38 8	count=2
function	block ||| block	count=1
function	already set it non-nil ||| auto save	count=1
function	[function_1] the category ||| [function_1] [function_2]	count=2
arg	the screen line count ||| count	count=1
function	[function_1] is signaled ||| [function_2] [function_1]	count=6
module	testing [module_2] ||| [module_1] [module_2]	count=2
function	is non-nil that ||| pop	count=1
arg	for key ||| key	count=3
module	files ||| 24	count=6
function	empty category table ||| category table	count=2
function	of the prefix ||| describe prefix	count=1
module	calls its argument ||| 6	count=2
function	on ||| on	count=1
function	many seconds [function_2] ||| [function_2] sit for [function_1]	count=1
function	function ||| not	count=1
module	a nonnegative ||| 19	count=1
function	region defined by ||| region	count=5
function	the category ||| define category	count=1
function	[function_1] element ||| [function_2] [function_1]	count=7
function	encapsulating ||| ewoc enter	count=2
function	moves point to ||| goto	count=1
module	key sequence a ||| 21	count=1
module	make a new window ||| 27 14	count=1
module	against the [module] ||| [module] 13	count=3
function_arg	undo [arg_2] ||| [arg_2] [function_1]	count=1
module	[module_1] option ||| [module_2] [module_1]	count=2
function	inserts the contents of ||| insert file	count=1
module	commands that choose ||| 32 11	count=1
function	to the top entry ||| top line	count=1
module	years days ||| 38	count=1
function	current window [function_2] ||| [function_1] [function_2]	count=1
arg	sideways by [arg] ||| [arg]	count=1
arg	through the forms ||| form &rest more	count=1
module	all the elements ||| 5	count=1
function	making new ||| up	count=1
function	edebug binds ||| edebug	count=1
function	height ||| height	count=2
function	command enables [function] ||| buffer enable [function]	count=1
function	[function] is ||| [function] auto hide	count=1
arg	end in the current ||| end properties	count=1
function_arg	[function_1] args ||| [function_1] [arg_2]	count=5
module	function ||| 4	count=1
function_arg	before [arg_2] ||| [arg_2] [function_1]	count=1
function	the region from ||| fill region	count=1
function	a buffer without disrupting ||| bidi string mark left to	count=1
function	sentinel of ||| process sentinel	count=1
module	text ||| 31 12	count=2
arg	finds ||| missing-ok nomessage nosuffix	count=1
arg	[arg_1] and optionally ||| [arg_1] [arg_2]	count=3
module	emacs ||| 25	count=1
module	a new ||| 27 14	count=1
arg	classes mentioned in syntaxes ||| syntaxes limit	count=1
module	mark-ring ||| 7	count=1
module	of [module_2] ||| [module_1] [module_2]	count=1
arg	a pop-up menu and ||| menu	count=1
arg	the lisp [arg] ||| [arg]	count=1
module	you ||| 25 2	count=2
function	a ||| signal process	count=2
module	a new vector containing ||| 5	count=1
function	this function sends ||| process	count=1
module	a ||| 1	count=14
function	[function_1] permissions ||| [function_2] [function_1]	count=10
function_arg	the property [arg_2] ||| [function_1] char [arg_2]	count=3
function	total height in lines ||| total height	count=1
function_arg	completions [arg_2] ||| [arg_2] [function_1]	count=1
function	a special [function_2] ||| [function_2] [function_1]	count=4
module	[module_1] [module_2] is the ||| [module_2] [module_1]	count=4
function	greater than ||| end	count=1
function	syntax classes are mentioned ||| skip syntax	count=1
arg	in syntaxes a string ||| syntaxes limit	count=1
arg	the parameters of frame ||| frame	count=1
function	stores value as the ||| put	count=1
module	into ||| 21 1	count=2
arg	list and list2 ||| list list2	count=1
function	returns a ||| vconcat	count=1
function	an error is signaled ||| debug on error	count=1
function_arg	hash table [arg_2] ||| [function_1] [arg_2]	count=4
function	to be fit ||| fit frame	count=1
function	keymap ||| map	count=2
function	window ||| next buffer	count=1
function	minibuffer ||| window minibuffer	count=1
arg	arguments args ||| function args	count=1
arg	function finds ||| missing-ok nomessage nosuffix	count=1
arg	shorter lists ||| lists	count=1
function_arg	property of [arg_2] ||| [arg_2] [function_1]	count=3
arg	and returns parent ||| parent	count=1
function	category [function_2] ||| [function_1] [function_2]	count=1
function	function return a non-nil ||| p	count=1
module	all the ||| 6	count=1
function_arg	the font [arg_2] ||| [function_1] name [arg_2]	count=1
arg	t if [arg] x ||| [arg]	count=1
function_arg	fringe [arg_2] ||| [arg_2] [function_1]	count=3
arg	of keymap ||| keymap	count=1
arg	as the value ||| value	count=2
arg	enabled or force ||| force	count=1
arg	properties props see ||| props	count=1
function	prec2 ||| prec2	count=1
function	this command inserts the ||| insert file	count=1
module	all ||| 6	count=1
function	face ||| face underline	count=1
function	name to use ||| name	count=1
function	this inserts ||| ring insert	count=1
arg	the first list ||| list	count=1
module	set ||| 25 2	count=2
arg	point-max if flag ||| flag	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2] translation	count=1
function	fit ||| fit frame to buffer	count=1
function	an existing window ||| up	count=1
module	a new vector containing ||| 6	count=1
function	number [function_2] ||| [function_1] [function_2]	count=4
arg	process the filter ||| process	count=1
function	the number of lines ||| lines	count=2
function	face displays differently ||| face differs	count=1
module	regardless of ||| 1.1	count=1
function	of emacs ||| emacs	count=1
function	evaluates it then ||| eval	count=1
function	that has a non-nil ||| char	count=1
function	returns the coding ||| coding	count=1
arg	any x in list ||| list	count=1
arg	modes ||| modes	count=1
arg	from and ||| from	count=1
function	[function_1] the fringe ||| [function_1] [function_2]	count=3
arg	the value of ||| value	count=1
arg	beg to [arg_2] ||| [arg_2] [arg_1]	count=1
module	returns ||| 21 4	count=1
function	string containing ||| to string	count=1
function	position of the beginning ||| beginning	count=1
function	the shell ||| call process shell	count=1
arg	seconds seconds without ||| seconds	count=1
function	directories for ||| path	count=1
function	its individual fill ||| fill individual paragraphs	count=1
function	keyboard ||| keyboard	count=2
arg	obarray has no symbol ||| name obarray	count=1
module	of this variable is ||| 30 7	count=1
function	has a mask bitmap ||| mask	count=1
function	to a ||| seconds to	count=1
module	auto-saving ||| 25	count=1
function	removes function from the ||| remove function	count=1
function	watch ||| watch	count=1
module	beginning of an ||| 35 4	count=1
arg	spec using [arg] which ||| [arg]	count=1
arg	and y are ||| y	count=1
function	prefix adding the host ||| list file prefix	count=1
function	[function_1] [function_2] the ||| [function_2] [function_1]	count=10
function	removes left [function_2] ||| [function_2] [function_1]	count=3
function	and height ||| height	count=1
arg	to filename [arg_2] ||| [arg_1] [arg_2]	count=1
function	function cancels any narrowing ||| widen	count=1
function	group for buffer ||| group	count=1
module	an existing ||| 14	count=1
module	to make a ||| 27	count=1
function	the controlling ||| controlling	count=1
module	ending position ||| 20	count=1
arg	sequence the results which ||| sequence separator	count=1
module	if [module] byte compiler ||| [module]	count=1
arg	function returns window’s value ||| window	count=1
arg	for ||| window	count=1
arg	binding for key in ||| key binding	count=1
arg	char and documentation ||| char	count=1
function_arg	[function_1] current-face and ||| [arg_2] [function_1]	count=2
function	justification to ||| default justification	count=1
function	of the end ||| end	count=2
module	for this ||| 5	count=1
rep	[module_1] [function_arg_2] ||| [module_1] all [function_arg_2]	count=1
function	new node encapsulating ||| ewoc enter	count=2
function	a non-nil ||| table	count=1
function	sets the ||| set face	count=4
module	keymap or nil ||| 21 11	count=1
function	this prefix adding ||| save list file prefix	count=1
function	process ||| signal process	count=4
function	text of window’s buffer ||| window text	count=1
function	returns ||| event	count=1
module	of this variable ||| 27	count=2
function	window as dedicated ||| dedicated p	count=1
module	tests ||| 3	count=1
function	extra ||| char table extra	count=2
function	newer than file ||| newer than file	count=1
arg	process [arg_2] ||| [arg_2] [arg_1]	count=1
arg	property in symbol’s ||| symbol	count=1
function	marker that represents the ||| marker	count=1
function	replaces ||| replace regexp in	count=1
module	host ||| 25	count=1
function	function returns t if ||| one window p	count=1
function	the previous ||| prev	count=2
function	user at the time ||| user	count=1
function	a non-nil ||| map char	count=1
function	reads your init ||| list file	count=1
module	is a list ||| 5	count=1
function	in the same field ||| field	count=1
function	current [function] ||| [function]	count=2
function	help character—the [function] ||| [function]	count=1
function_arg	[function_1] count ||| [arg_2] [function_1]	count=6
module	variable alias for symbol ||| 11 13	count=1
arg	if alist ||| alist	count=1
arg	[arg] units ||| frame x [arg]	count=1
rep	for decoding [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	nil with initial-value and ||| initial-value	count=1
arg	count screen ||| count window	count=1
arg	regular expression ||| regexp limit noerror	count=1
module	position of ||| 7.13	count=1
arg	property list to plist ||| plist	count=1
function	that ||| vector	count=1
function	the state of ||| state	count=1
function	[function_1] a backup ||| [function_2] [function_1]	count=3
arg	[arg_1] add value ||| [arg_1] [arg_2]	count=4
module	the buffer ||| 31	count=1
function	like next-single-property-change except ||| next single	count=1
function	help information when the ||| help	count=1
arg	regexp in string ||| regexp string	count=1
module	this function ||| 30 5	count=1
module	files in the directory ||| 24 6.1	count=1
function	returns the name ||| login name	count=1
module	that would be used ||| 7	count=1
function	if you have ||| auto save list file	count=1
function	position in the ||| position	count=2
arg	and returns [arg_2] ||| [arg_2] [arg_1]	count=1
function	the width in columns ||| char width	count=1
function	list for the text ||| set text properties	count=1
function	variable settings ||| set variables	count=1
arg	value if [arg] is ||| [arg]	count=1
function	replaces the buffer ||| buffer	count=1
arg	string2 [arg_2] ||| [arg_1] [arg_2]	count=1
function	function returns [function_2] ||| [function_1] [function_2] pos string	count=1
function	the first ||| first	count=1
arg	this ||| function	count=1
module	window’s ||| 37 15	count=1
arg	parameters of frame ||| frame	count=1
function	is nil switch-to-buffer ||| preserve window	count=1
function	[function] line ||| [function] line	count=3
arg	elements using comparator ||| comparator	count=1
function	the total number of ||| buffer size	count=1
arg	two strings a ||| string1 string2	count=1
function	the region defined by ||| copy region	count=1
module	characters ||| 32	count=3
function	columns to the left ||| scroll left	count=1
function	display-buffer may display ||| up	count=1
function	you ||| auto save	count=1
module	read-file-name ||| 19 6.5	count=1
function	[function_1] directory ||| [function_2] [function_1]	count=8
function_arg	the definition [arg_2] ||| [function_1] [arg_2]	count=1
arg	prefix [arg_2] ||| [arg_1] [arg_2]	count=2
function	this returns ||| event end	count=1
function	the coding [function_2] ||| [function_1] [function_2]	count=8
function	[function_1] [function_2] ||| [function_2] vector [function_1]	count=8
function	new fontset according ||| from fontset spec	count=1
function	[function] padding on ||| [function] right	count=1
module	this ||| 27 25	count=2
function	end [function_2] ||| [function_1] [function_2]	count=8
function	containing ||| vconcat	count=1
function	[function_1] completes the ||| [function_2] [function_1]	count=3
function	environment variable values ||| substitute in file name	count=1
function	function calls its argument ||| char	count=1
function	[function_1] left margin ||| [function_2] [function_1]	count=2
arg	by delta ||| delta horizontal	count=1
function_arg	syntax classes [arg_2] ||| [arg_2] [function_1]	count=1
arg	command ||| parents	count=1
function	returns t ||| set p	count=1
function	makes keymap the new ||| use	count=1
function	or a [function_2] ||| [function_1] [function_2]	count=4
arg	function associates ||| rgb frame	count=1
module	and returns nil ||| 6	count=1
module	this function ||| 32 9	count=1
arg	between from and ||| from	count=2
function	init file it ||| list	count=1
function	deletes a ||| delete	count=1
module	minibuffer before ||| 19 10	count=1
function	mark-ring ||| ring	count=1
function	the actual number ||| table count	count=1
function	tab in most ||| for tab	count=1
module	this function ||| 13	count=2
function	buffer a buffer ||| buffer	count=1
function	[function] if flag ||| set buffer [function] p	count=1
module	it non-nil based on ||| 2	count=1
function	constant into ||| kbd	count=1
module	this function ||| 9	count=2
function	returns the name of ||| name	count=1
function	auto-save-list-file-name if ||| list file	count=1
function	by copying in ||| by copying	count=2
function	this returns the ||| event end	count=1
function	function sets the process ||| set process plist	count=1
function	[function_1] emacs-recognized extended ||| [function_1] file [function_2]	count=1
function	[function_1] a link ||| [function_1] [function_2]	count=4
function	displaying in ||| up windows	count=1
function	register name ||| register	count=1
function	of lines ||| count lines	count=1
function	leftmost child ||| child	count=1
function	list specifying the ||| window prev buffers	count=1
module	value for ||| 25	count=1
function	current global ||| global	count=2
function	converts a symbolic file ||| symbolic	count=1
function	split s up ||| s split	count=1
function	the accessible portion ||| min	count=1
function	character [function_2] ||| [function_2] [function_1]	count=2
function	of coding systems that ||| coding systems	count=3
arg	function defines ||| name version docstring requirements	count=1
function	versions to keep when ||| versions	count=1
module	that the ||| 29	count=1
arg	name ||| name properties	count=1
function	capabilities ||| capabilities	count=1
function	[function_1] name ||| [function_1] real login [function_2]	count=3
function	owner or the ||| when mismatch	count=1
module	only exact ||| 3.3	count=1
arg	this function completes the ||| predicate	count=1
function	backups by copying in ||| backup by copying	count=1
function_arg	the members [arg_2] ||| [arg_2] [function_1]	count=1
function	as a floating-point number ||| float	count=1
arg	of filename to mode ||| filename mode	count=1
arg	them ||| fixedcase literal subexp	count=1
arg	[arg_1] to olddef ||| [arg_2] newdef keymap [arg_1]	count=1
module	display-buffer may ||| 27 14	count=1
function	activations ||| minibuffer	count=1
arg	position position in the ||| position	count=1
function	of face attributes ||| font face attributes	count=2
arg	index from to index ||| from &optional	count=1
function	this option ||| buffer base	count=1
function	throw is ||| throw	count=1
function	the text ||| text properties	count=1
function	emacs reads your init ||| save list file	count=1
arg	pattern pattern returning ||| pattern	count=1
arg	key with value binding ||| key	count=1
function_arg	[function_1] and ||| [function_1] [arg_2] end justify nosqueeze squeeze-after	count=4
function	the query flag of ||| process query on exit	count=1
arg	lines starting between start [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
module	this function reports ||| 5	count=1
function	a network ||| format network	count=1
module	auto-save-list-file-name ||| 25 2	count=2
function_arg	[function_1] filename into ||| [arg_2] [function_1]	count=2
module	this variable ||| 30	count=1
arg	replacements is a ||| replacements s	count=1
function	variable holds an alist ||| alist	count=1
function	returns the indentation of ||| current indentation	count=1
arg	[arg_1] to olddef ||| [arg_2] newdef [arg_1]	count=4
function	returns ||| minibuffer	count=1
module	this function tests ||| 10	count=1
function	[function_1] system ||| [function_1] [function_2]	count=7
function	of the syntax table ||| syntax	count=1
module	or vector ||| 21	count=1
arg	that ||| x	count=1
function	as dedicated ||| window dedicated	count=1
function_arg	number of [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	deletes from [arg_2] ||| [arg_2] [function_1]	count=2
function	minibuffer ||| minibuffer window	count=1
module	of activations of ||| 13	count=1
arg	defines tabname ||| tabname definitions docstring	count=1
function_arg	fontset [arg_2] ||| [function_1] font [arg_2]	count=4
function	inserts the ||| format insert file	count=1
function_arg	[function_1] reg into ||| [arg_2] [function_1]	count=6
module	greater than 0 ||| 1	count=1
module	events for ||| 20	count=1
function	this function returns ||| buffer end	count=1
arg	in window ||| window bury-or-kill	count=1
function	a point in time ||| time	count=1
module	is ||| 7	count=1
function_arg	[function_1] pos ||| [function_1] change [arg_2]	count=1
function	to process ||| signal	count=1
arg	from index from to ||| from &optional to step	count=1
arg	object rather than nil ||| pos prop object limit	count=1
function	name with ||| name	count=1
function	non-nil value ||| map char	count=1
module	of the ||| 38 8	count=1
function	hours etc ||| format	count=1
function	to dashed-words ||| dashed words	count=1
module	function ||| 36 8	count=2
function	types ||| types	count=2
arg	to fn ||| fn &rest args	count=1
function	argument function ||| table	count=1
function	that means display-buffer ||| pop	count=1
module	kills ||| 26 10	count=1
function	restore the state of ||| quit restore	count=1
module	is a list of ||| 19 6.6	count=1
arg	generated by [arg] elements matching ||| pred [arg]	count=1
arg	function with arguments args ||| args	count=1
module	and [module] copy ||| [module]	count=1
function	character ||| read char	count=1
module	to generate repeat events ||| 20 7.7	count=1
module	value of ||| 7	count=1
function	keep when a new ||| new	count=1
arg	[arg] grouped ||| [arg]	count=1
module	non-nil ||| 14	count=2
arg	cyclic ordering of ||| minibuf all-frames	count=2
arg	valid position in object ||| object limit	count=1
function	function executes the shell ||| call process shell command	count=1
module	function returns ||| 37 12.12	count=1
arg	and optionally ||| &optional	count=1
function	function sets ||| set char table range	count=1
arg	table and returns ||| table	count=1
function	this prefix adding the ||| list file prefix	count=1
function	below the selected window ||| display buffer below selected	count=1
arg	function empties out ||| keep-record	count=1
function_arg	integers [arg_2] ||| [arg_2] [function_1]	count=2
function	greater than 0 point-min ||| end	count=1
function	plist ||| plist	count=1
module	character ||| 32	count=4
module	this returns the ending ||| 20	count=1
function	already ||| file	count=1
module	this function ||| 5 7	count=1
function	command inserts the contents ||| format insert file	count=1
module	this returns the ending ||| 7.13	count=1
function_arg	truename of [arg_2] ||| [function_1] [arg_2]	count=1
arg	defines tabname a ||| tabname definitions docstring	count=1
function	this function appends ||| append	count=1
module	which is the horizontal ||| 17.1	count=1
module	basic [module] mode ||| [module] 2.5	count=1
function	row ||| row	count=1
module	an ||| 29 1	count=1
function	that has a ||| map char	count=1
function	to point ||| thing at point	count=1
function	print-length to this ||| print length	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=3530
arg	object ||| object buffer-or-name	count=1
function	backup files ||| backup files	count=2
function	coding systems that could ||| coding systems	count=3
function_arg	link [arg_2] ||| [function_1] [arg_2]	count=2
function	display-buffer ||| pop	count=2
rep	characters [function_arg_2] ||| [module_1] 8 find charset [function_arg_2]	count=2
arg	list ||| list	count=40
function	query flag of ||| query on exit flag	count=2
module	proper ||| 31 12	count=2
arg	for [arg_2] ||| [arg_2] [arg_1]	count=2
arg	stores value in ||| value	count=1
function	constant ||| kbd	count=2
function	non-nil that means display-buffer ||| up	count=1
arg	two strings ||| string1 string2	count=2
function_arg	resource [arg_2] ||| [arg_2] [function_1]	count=3
function	the saveunder feature ||| save under	count=1
function	this-command-keys except that it ||| this command keys	count=1
function	a frame configuration ||| current frame configuration	count=2
function	function displays a message ||| message	count=1
function	that ||| pop up	count=1
function_arg	[function_1] [arg_2] the current buffer defined ||| [function_1] [arg_2]	count=3
function	function sends ||| signal process	count=1
function	epoch to ||| seconds to time	count=2
function	calls its argument function ||| table	count=1
function_arg	position [arg_2] ||| [arg_2] [function_1]	count=3
function	and modification times of ||| file times	count=1
function	[function_1] attributes of ||| [function_2] [function_1]	count=3
arg	from index from to ||| from &optional to	count=1
function_arg	contents of [arg_2] ||| [function_1] [arg_2]	count=3
function	value ||| map char	count=1
function	of years days hours ||| format	count=1
function	list replaced ||| at	count=1
function	new hash [function_2] ||| [function_1] [function_2]	count=1
module	the beginning of an ||| 35 4	count=1
function	your init file ||| auto save list file	count=1
function	completions ||| completions	count=1
function	delete trailing whitespace ||| delete trailing whitespace	count=2
module	generate repeat events ||| 20 7.7	count=1
module	and ||| 25	count=1
function	the maximum size of ||| mark ring max	count=1
function	titleized words ||| titleized words	count=1
arg	to typically the start ||| to	count=1
function	[function_1] simple ||| [function_2] [function_1]	count=1
function	characters in ||| charset chars	count=1
function	in the selected window ||| same window	count=1
arg	of prev-buffers ||| prev-buffers	count=1
module	based on ||| 2	count=1
function	non-nil display-buffer ||| pop	count=1
module	function returns ||| 29	count=1
function	function reads [function_2] ||| [function_1] [function_2]	count=9
module	in the current buffer ||| 29	count=1
module	by making new ||| 27	count=1
function	an alist ||| alist	count=4
function	for each element ||| map char table	count=1
arg	composed from [arg] ||| [arg]	count=3
function	the minibuffer raises ||| auto raise	count=1
function	obsolete indicating that ||| obsolete	count=1
arg	object if no ||| prop object	count=1
function	supported by the current ||| types	count=1
function	[function] how ||| [function] about supersession threat	count=2
function	if non-nil edebug ||| edebug test	count=1
function_arg	of image [arg_2] ||| [arg_2] [function_1]	count=1
function	of this variable is ||| pop	count=2
function_arg	method [arg_2] ||| [function_1] [arg_2]	count=4
function	insertion type ||| marker insertion type	count=3
module	tests for ||| 10 3	count=1
arg	[arg_1] to typically ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] handle ||| [function_1] [arg_2]	count=1
function	help information when ||| help	count=1
function	of ||| mark ring	count=2
module	function ||| 6	count=7
function	and of bool ||| bool vector	count=1
arg	for each element ||| function	count=1
function	current buffer ||| current buffer	count=1
arg	coding-system ||| coding-system destination	count=2
function	translation [function_2] ||| [function_1] [function_2]	count=3
function	the text conversion ||| text conversion	count=1
arg	with properties props ||| props	count=1
module	debugger regardless ||| 17 1.1	count=1
function	function filters the buffer ||| buffer substring	count=1
function	[function_1] in ||| [function_1] [function_2]	count=5
function	a help command named ||| make help	count=1
arg	collection will operate ||| collection	count=1
function	table [function_2] ||| [function_2] [function_1]	count=1
function	this ||| auto save list file	count=1
module	returns ||| 34 8	count=1
arg	the width of frame ||| frame width pretend	count=1
arg	this ||| window	count=1
function	address [function_2] ||| [function_2] mail [function_1]	count=1
module	the current buffer ||| 4	count=1
module	sequence a string ||| 21	count=1
function	then ||| then	count=1
module	allowed to ||| 27	count=1
module	encodes ||| 32 10.7	count=1
arg	key must be a ||| key	count=1
function	custom ||| custom	count=3
function	string or a ||| display message or	count=1
arg	line count screen ||| count	count=1
function	face for the fringe ||| fringe	count=1
module	[module_1] is the ||| [module_1] [module_2]	count=2
function	this command deletes ||| delete	count=1
arg	value [arg] ||| [arg]	count=2
arg	specifies coding-system as the ||| coding-system	count=2
arg	key in [arg_2] ||| [arg_2] [arg_1]	count=2
module	if [module] ||| [module]	count=1
function	fraction f between 0 ||| scroll down aggressively	count=1
module	[module] tty ||| [module]	count=1
arg	the cons of car ||| car	count=1
function	is allowed to split ||| pop	count=1
module	the ||| 10	count=1
function	file it initializes auto-save-list-file-name ||| save	count=1
arg	argument list signature ||| signature	count=1
function_arg	that satisfies [arg_2] ||| [function_1] [arg_2]	count=1
function	kills ||| kill	count=2
function	a description ||| description	count=1
function	controls whether [function_2] ||| [function_1] [function_2]	count=1
module	the [module_2] ||| [module_2] [module_1]	count=3
function	after emacs reads your ||| save list file	count=1
function_arg	[function_1] charset ||| [function_1] [arg_2]	count=1
function	the text as xml ||| parse xml region	count=1
function	function calls its ||| char table	count=1
function	limit for the ||| limit	count=2
function	in the [function] ||| [function]	count=1
function	start ||| indent code rigidly	count=1
function	it non-nil based ||| save list	count=1
arg	nested alist struct ||| struct	count=1
function	of this ||| mark ring	count=1
function	its individual fill prefix ||| fill individual paragraphs	count=1
function	screen lines in the ||| count screen lines	count=1
function	it ||| auto save list file	count=2
module	of [module] and ||| [module]	count=1
function	symbolic link ||| symbolic link	count=2
function	function calls its ||| map	count=1
function	in the ||| at	count=1
function	frame’s window ||| pop up	count=1
function	subtype symbol of ||| table subtype	count=1
arg	start and [arg_2] ||| [arg_2] [arg_1]	count=19
arg	new in [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	buffer forward [arg_2] ||| [arg_2] [function_1]	count=3
arg	handle designates ||| handle	count=1
function	previous sibling ||| prev sibling	count=1
arg	char and [arg_2] ||| [arg_1] [arg_2]	count=3
arg	to newname ||| newname	count=2
function	function stores value ||| put char code	count=1
function	the current [function_1] [function_2] ||| [function_1] [function_2]	count=3
arg	function completely replaces the ||| props	count=1
function	coding systems that could ||| find coding systems for	count=1
arg	of [arg] in the ||| image [arg]	count=1
arg	car ||| car	count=1
function	a string of syntax ||| skip syntax forward	count=1
module	non-nil display-buffer is ||| 14	count=1
function	the selinux context of ||| file selinux context	count=1
arg	[arg_1] filename ||| [arg_2] [arg_1]	count=2
module	this function returns ||| 7	count=3
arg	x and y ||| x y	count=1
function	returns the beginning of ||| beginning	count=1
function	[function_1] to answer ||| [function_2] p [function_1]	count=1
function	reverse of ||| reverse	count=1
module	is the ||| 31 17.1	count=1
function	the total number of ||| size	count=1
arg	[arg_1] property list ||| [arg_1] [arg_2]	count=3
function	buffer in that window ||| window	count=1
function	a cons cell (col ||| col	count=1
function	window at [function_2] ||| [function_1] [function_2]	count=3
function	abbrev definitions ||| abbrev	count=1
function	[function_1] string ||| [function_2] [function_1]	count=1
function	removes function from ||| remove function	count=1
function	[function_1] margin indentation ||| [function_1] [function_2]	count=2
function	combination [function_2] ||| [function_2] [function_1]	count=1
function	return information ||| information	count=1
arg	[arg_1] properties props ||| [arg_2] [arg_1]	count=4
arg	documentation docstring ||| docstring	count=1
arg	key in ||| key accept-defaults	count=1
function	a possible name ||| name	count=1
function	reads your init file ||| save list file	count=1
function	defines a ||| define	count=1
arg	this command adjusts the ||| max-height min-height max-width min-width	count=2
function	host name and ||| file	count=1
function	makes backup files ||| backup	count=1
function	sets the parent keymap ||| set keymap	count=1
module	years days ||| 7	count=1
function	overlay that ||| overlay	count=1
function	of ||| up	count=2
function	vertical scrollbar ||| scroll bar	count=1
module	debugger ||| 17 1.1	count=1
function	this variable is the ||| mark	count=1
arg	command fills ||| justify nosqueeze	count=1
function_arg	return the [function_1] [arg_2] in ||| [function_1] [arg_2]	count=2
module	to make ||| 27	count=1
function	button after for ||| button	count=1
module	this option ||| 27 3	count=4
module	non-nil display-buffer is allowed ||| 27 14	count=1
arg	[arg_1] with rep ||| [arg_2] string [arg_1]	count=1
arg	[arg_1] device ||| [arg_2] [arg_1]	count=1
function	function returns the character ||| char	count=1
function_arg	made from [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] of window ||| [function_1] [arg_2]	count=2
function	nth previous button ||| forward button	count=1
arg	the binding [arg_2] ||| [arg_2] [arg_1]	count=5
module	non-nil based ||| 2	count=1
function	function returns the line ||| line	count=1
arg	[arg_1] props ||| expansion [arg_1] [arg_2]	count=3
function	number of bytes ||| string bytes	count=1
arg	returns t if regexp ||| regexp limit	count=1
function	a list specifying the ||| window prev buffers	count=1
arg	buffer visiting file filename ||| filename	count=1
function_arg	indices of [arg_2] ||| [function_1] [arg_2]	count=6
function	returns the process ||| process	count=1
arg	bindat-raw according to spec ||| spec bindat-raw	count=1
function	window’s ||| window	count=4
module	of the buffer ||| 31	count=1
module	this ||| 7	count=13
module	buffers ||| 14	count=1
function	the value of this ||| pop	count=2
function	of this variable ||| ring	count=1
arg	function returns a list ||| window	count=1
function	returns a translation table ||| make translation table	count=1
function_arg	[function_1] x2 ||| [arg_2] [function_1]	count=3
arg	each time item ||| item	count=1
function	display table ||| display table	count=5
arg	convert the ||| s	count=1
function	or not to make ||| make	count=1
function	a serial port connection ||| serial	count=1
arg	buffer from-buffer-or-name into ||| from-buffer-or-name start end	count=1
function	in a new frame ||| other frame	count=1
module	returns ||| 37 12.12	count=1
function_arg	the parent [arg_2] ||| [function_1] [arg_2]	count=1
function	calls its ||| map	count=1
arg	[arg_1] of frame ||| [arg_2] [arg_1]	count=6
function	rehash threshold ||| rehash threshold	count=1
function	receives this event ||| event	count=1
function	process ||| auto save	count=1
module	events for this-command-keys ||| 20	count=1
function	height [function_2] ||| [function_2] [function_1]	count=1
module	key sequence ||| 1	count=1
module	for encoding terminal output ||| 32 10.8	count=1
function	substrings of the ||| buffer substrings	count=1
function	the documentation string ||| documentation	count=2
function	use global abbrevs ||| global abbrevs	count=1
arg	to filename [arg_2] ||| [arg_2] [arg_1]	count=1
module	have not already set ||| 2	count=1
function	emacs and returns control ||| emacs	count=1
function_arg	sign of [arg_2] ||| [arg_2] [function_1]	count=7
arg	syntaxes ||| syntaxes limit	count=2
function	[function] line so ||| [function] line	count=3
module	process ||| 2	count=1
arg	input-method for the current ||| input-method	count=1
arg	function selects frame ||| frame	count=1
function	when quit ||| quit	count=1
function_arg	element [arg_2] ||| [function_1] [arg_2]	count=2
function	by a button at ||| push button	count=1
function	this inserts object into ||| insert	count=1
arg	it is undefined there ||| accept-defaults	count=1
function_arg	[function_1] start ||| [function_1] [arg_2]	count=3
arg	start and end to ||| start end	count=1
function_arg	[function_1] button ||| [arg_2] [function_1]	count=2
module	[module] or ||| [module] 8.1	count=3
function_arg	command deletes [arg_2] ||| [function_1] char untabify [arg_2]	count=1
module	character ||| 31	count=1
arg	[arg] naming the ||| [arg]	count=3
function	of asin ||| asin	count=1
function	you have not ||| auto save	count=1
function	currently enabled ||| mode maps	count=1
module	years days hours ||| 38 7	count=1
module	means ||| 27	count=1
arg	prompt and returns the ||| prompt	count=1
module	of its arguments ||| 3 4	count=1
module	returns the ||| 19 13	count=1
function	method name ||| method name	count=2
function	the underline in pixels ||| underline	count=1
module	name of a ||| 14 6	count=2
function	display buffers by making ||| up	count=1
module	measured in characters ||| 28 3.4	count=1
function	is non-nil that means ||| up	count=1
function	function deletes all ||| delete horizontal space	count=2
function	the property ||| property	count=1
function	point to the beginning ||| beginning	count=1
function	display buffer by choosing ||| use some	count=1
function_arg	[function_1] [arg_2] ||| 11 10.2 [function_1] variable [arg_2]	count=6
function	of consecutive button presses ||| event click count	count=1
function	and if ||| coordinates in window p	count=1
function	the current depth of ||| minibuffer depth	count=1
function	indices of all elements ||| find indices	count=1
arg	return bitwise and of ||| c	count=1
function	sends ||| process	count=1
function	margin value to ||| margin	count=1
arg	[arg_1] alphabetically as ||| [arg_2] [arg_1]	count=1
module	split ||| 27 14	count=3
function	user at the ||| user	count=1
function	[function_1] case ||| [function_2] [function_1]	count=4
arg	function makes buffer-or-name ||| buffer-or-name	count=1
function_arg	[function_1] to value ||| [function_1] overlay prop [arg_2]	count=1
module	in the echo ||| 4.1	count=1
arg	[arg_1] to init ||| [arg_2] [arg_1]	count=2
function	best matches the font ||| font	count=1
module	containing all the elements ||| 5	count=1
arg	[arg_1] pushes a ||| [arg_2] [arg_1]	count=3
function	calls its argument function ||| map	count=1
arg	docstring for ||| docstring	count=1
arg	as ||| when	count=1
module	t if point ||| 31 1	count=2
function	current major mode ||| major mode	count=1
function	sends ||| signal	count=1
arg	into ||| no-line-break	count=2
module	list of ||| 3	count=1
arg	function returns ||| count-final-newline window	count=1
function	function returns window’s ||| window parameter	count=1
function	falsehood of ||| not	count=1
function	this function calls its ||| map char	count=1
function	has a non-nil ||| table	count=1
arg	to key ||| key	count=1
arg	to fn ||| fn &rest	count=1
function	to ||| from	count=2
function	based on ||| list file	count=1
function	an existing window ||| pop	count=1
function	this stores value as ||| plist put	count=1
function	value if debug-on-error ||| on error	count=1
function_arg	modification times [arg_2] ||| [arg_2] [function_1]	count=3
arg	the font [arg] in the ||| font-spec [arg]	count=1
function	and of bool ||| bool vector intersection	count=1
function	its argument ||| table	count=1
function	accessible portion ||| narrow	count=1
module	current ||| 17.1	count=1
function	a symbolic ||| modes symbolic	count=1
function	visibility status ||| visible p	count=1
module	characters sent by emacs ||| 38 13	count=1
function	reads your init file ||| auto save list file	count=1
function	the region from ||| region	count=1
function	backup files by ||| backup by	count=2
arg	end ||| end props	count=1
function	it ||| buffer	count=1
function	the top entry in ||| top line	count=1
arg	[arg_1] negative ||| [arg_2] [arg_1]	count=2
function	an alias for ||| alias	count=2
module	years days hours etc ||| 7	count=1
arg	tree and make a ||| folder init-value tree	count=1
module	of ||| 5 4	count=1
function_arg	[function_1] [arg_2] string containing the characters ||| [function_1] set mnemonics [arg_2]	count=1
function	of its buffer exactly ||| buffer	count=1
arg	on ||| inherit	count=1
function	your init file ||| list	count=1
function	the dimensions of ||| dimensions	count=1
function	the text ||| window text	count=1
function_arg	this deletes [arg_2] ||| [arg_2] [function_1]	count=1
module	the debugger regardless ||| 17 1.1	count=1
function	buffers to the value ||| buffers	count=1
function	stores value as ||| plist put	count=1
arg	and to ||| to	count=1
module	is ||| 27 5	count=2
module	elements of ||| 6	count=1
function	largest ||| max	count=1
function	next tab stop column ||| to tab stop	count=1
function	file name prompting with ||| file name	count=1
module	vector constant ||| 1	count=1
function	olddef ||| key definition	count=1
module	name and process id ||| 25 2	count=1
module	at the ||| 31	count=2
arg	parameter parameter a symbol ||| parameter	count=2
function_arg	[function_1] [arg_2] ||| [function_1] separator [arg_2]	count=8
module	during its next ||| 22 4.1	count=1
module	is not already a ||| 5 5	count=1
function	nil switch-to-buffer displays the ||| buffer preserve	count=1
function	real ||| real	count=3
function	[function_1] in ||| [function_2] [function_1]	count=13
function_arg	removes [arg_2] ||| [function_1] from invisibility spec [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] coding system coding-system [arg_2]	count=3
function_arg	replaced [arg_2] ||| [arg_2] [function_1]	count=2
arg	current-face and also ||| current-face when	count=1
function	of throw is ||| throw	count=1
function	the list of version ||| version	count=1
function	adaptive fill [function_2] ||| [function_2] [function_1]	count=3
arg	to object ||| object	count=4
arg	from [arg_2] ||| [arg_2] [arg_1]	count=8
arg	the nested alist struct ||| struct name	count=1
function	string or vector ||| kbd	count=1
module	like ||| 31	count=1
arg	[arg] returns ||| face [arg]	count=1
function	the host name ||| auto save list	count=1
arg	from-buffer-or-name into the current ||| from-buffer-or-name start end	count=1
function	returns the remapping for ||| remapping	count=1
function	parameters ||| frame parameters	count=1
function	obsolete ||| obsolete face	count=1
function	the insertion type of ||| marker insertion type	count=1
arg	flag is non-nil ||| flag	count=1
function	from [function_2] ||| [function_2] [function_1]	count=3
function	this function displays ||| switch to buffer	count=2
function	of the position of ||| position	count=1
arg	the screen line count ||| count window	count=1
function	help command ||| help	count=1
function	fontset according ||| fontset from fontset	count=1
function_arg	zip [arg_2] ||| [function_1] [arg_2]	count=4
module	have ||| 25	count=1
module	this command displays ||| 7	count=1
function	function ||| kbd	count=1
function	on a [function_2] ||| [function_1] [function_2]	count=1
function	a prefix ||| string prefix	count=1
function_arg	[function_1] file filename ||| [function_1] [arg_2]	count=19
function_arg	the parent [arg_2] ||| [arg_2] [function_1]	count=1
function	already set it non-nil ||| list	count=1
module	process id ||| 2	count=1
function	this command makes a ||| make	count=1
module	option ||| 27	count=3
module	at ||| 19.1	count=1
function	file it initializes auto-save-list-file-name ||| auto save list	count=1
module	whose cdr is ||| 5	count=1
arg	element of tree ||| folder init-value tree	count=1
module	determines whether files ||| 24	count=1
function	iterated applications ||| iterate	count=1
function	maximum size ||| max	count=1
function	shell syntax ||| shell	count=1
arg	count repetitions of ||| count character	count=2
function	truename of the ||| truename	count=1
module	string or ||| 1	count=1
module	the entire contents are ||| 29	count=1
function	this function displays ||| switch to	count=2
function	coding systems ||| find coding systems	count=5
function	overlay [function_2] ||| [function_2] [function_1]	count=1
function_arg	of bytes [arg_2] ||| [function_1] [arg_2]	count=1
module	initializes ||| 25 2	count=2
arg	syntax syntax ||| char syntax	count=1
module	that the ||| 4	count=1
function	reads your ||| list file	count=1
arg	process process ||| process	count=3
module	to split an existing ||| 27	count=1
arg	[arg_1] by divisor ||| [arg_1] [arg_2]	count=5
function	if ||| edebug	count=1
function	function returns a category ||| category	count=1
function	value of this variable ||| mark ring	count=1
function	function returns the position ||| position	count=1
function	copying for ||| copying	count=1
function	fringe bitmap identified ||| fringe	count=1
function	and process id ||| save list file	count=1
function	like assoc except ||| assoc	count=1
arg	new-char ||| new-char noundo	count=1
function	or a [function_2] ||| [function_2] [function_1]	count=4
module	allowed to split ||| 14	count=1
function_arg	font [arg_2] ||| [function_1] name [arg_2]	count=1
function	a subtype of ||| subtype	count=1
function_arg	this macro [function_1] [arg_2] in ||| 12 10.1 [function_1] [arg_2]	count=3
function	screens associated with ||| display screens	count=1
arg	element of ||| function	count=1
module	name see directory names ||| 24	count=1
function	ending position ||| event	count=1
arg	map for key ||| key	count=1
arg	dirname otherwise ||| dirname	count=1
function	[function_1] row ||| [function_1] col [function_2]	count=3
function	seconds to keep indicating ||| delay	count=1
function	nil switch-to-buffer ||| switch to buffer preserve	count=1
function_arg	[function_1] [arg_2] ||| [function_1] char-table [arg_2]	count=14
function	returns non-nil if the ||| p	count=2
module	for encoding ||| 32 10.8	count=1
function	window at the ||| display buffer at	count=1
arg	text keyseq-text ||| keyseq-text	count=1
arg	a signal ||| process signal	count=1
function_arg	deletes from [arg_2] ||| [function_1] all value [arg_2]	count=1
function	function sets window’s value ||| set window	count=1
arg	copies string and searches ||| string	count=1
arg	x1 and ||| x1	count=1
function	on this ||| save	count=1
function	and frame-char-width ||| resize pixelwise	count=1
arg	jit-lock-register this function ||| function	count=1
function_arg	[function_1] data adding ||| [function_1] before ewoc node [arg_2]	count=4
function_arg	[function_1] value ||| [function_1] start end prop [arg_2]	count=1
module	emacs starts ||| 38	count=1
function	at the ||| display buffer at	count=1
module	this command replaces ||| 25 3	count=1
function	if ||| if set	count=1
module	returns a ||| 24 6.4	count=1
function	of coding ||| find coding	count=3
module	an existing window to ||| 14	count=1
function	not ||| auto	count=1
module	line which ||| 17.1	count=1
function	dedicated to its buffer ||| window dedicated	count=1
function	site-customization file to ||| site run file	count=2
function	inserts the contents of ||| format insert file	count=1
arg	file filename into the ||| filename	count=1
function	the message ||| message	count=1
module	process id ||| 25 2	count=1
arg	property list of the ||| property	count=1
arg	symbol’s [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] current-face ||| [arg_2] [function_1]	count=2
function	a new node encapsulating ||| enter first	count=1
arg	buffer if flag ||| window flag	count=1
function	a fill [function] based on ||| [function]	count=1
function	the combination [function_2] ||| [function_1] [function_2]	count=1
function	returns the binding ||| key binding	count=3
function	major [function] is ||| [function] p	count=1
arg	object if no ||| object limit	count=1
function	read in or saved ||| save	count=1
function_arg	[function_1] [arg_2] ||| [function_1] resource attribute [arg_2]	count=2
function	buffer as read-only ||| read only	count=1
function	the tabulated list ||| tabulated list	count=1
function	documentation string of face ||| documentation	count=1
function	days hours ||| format seconds	count=1
arg	[arg_1] of tree ||| [arg_2] [arg_1]	count=1
module	is a list of ||| 5	count=1
function	days hours etc ||| seconds	count=1
arg	[arg_1] live window ||| [arg_1] [arg_2]	count=4
arg	string as standard ||| process string	count=1
function	nil switch-to-buffer ||| preserve	count=1
function	[function_1] register ||| [function_2] [function_1]	count=2
arg	by record-regexp ||| record-regexp	count=1
function	emacs reads your init ||| auto save list file	count=1
arg	whose name is name ||| name	count=1
function	be a string ||| string	count=1
arg	end as ||| end	count=1
arg	each hook ||| hook	count=2
function	display-buffer may display ||| pop up	count=1
arg	dividend ||| dividend	count=2
function	the number of lines ||| count lines	count=1
arg	if flag is ||| flag	count=1
module	if ||| 31	count=2
module	frame-parameters ||| 28 3.1	count=1
function	and of bool vectors ||| bool vector intersection	count=1
function	a new frame in ||| frame	count=1
function_arg	[function_1] fn returns ||| [function_1] [arg_2]	count=1
module	[module_1] [module_2] the ||| [module_2] [module_1]	count=2
arg	char and [arg_2] ||| [arg_2] [arg_1]	count=3
arg	in object rather ||| object limit	count=1
function	it non-nil based on ||| save list file	count=1
function	that has ||| map char table	count=1
function	to tab ||| indent for tab	count=1
function	and buffer-local variable ||| normal	count=1
function_arg	[function_1] new-alias ||| [function_1] [arg_2]	count=2
function	init file ||| file	count=1
function	[function_1] [function_2] ||| [function_1] abbrev table [function_2]	count=9
module	this [module_2] ||| [module_2] [module_1] byte compile dynamic docstrings	count=3
module	first activated ||| 17 2.16	count=1
function_arg	[function_1] parameter to ||| [function_1] [arg_2]	count=3
function	input from the ||| from	count=1
module	that ||| 8	count=1
function_arg	[function_1] [arg_2] of the current buffer ||| [function_1] [arg_2]	count=3
arg	function warps the mouse [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	on this ||| list file	count=1
function	command inserts the ||| format insert	count=1
function	non-nil value ||| char table	count=1
function	always makes backup files ||| backup	count=1
module	of corresponding ||| 4	count=1
arg	list that is the ||| list	count=1
function	on [function_2] ||| [function_1] [function_2]	count=1
function	the previous ||| window prev	count=1
module	this function returns the ||| 19 13	count=1
arg	from to ||| from &optional to step	count=1
arg	of filename ||| filename	count=3
function	this function clears ||| clear	count=1
module	emacs reads ||| 25 2	count=1
function	to use global abbrevs ||| only global abbrevs	count=1
function	this function deletes ||| delete horizontal	count=1
arg	help buffer ||| buffer	count=1
module	years ||| 7	count=1
module	this function returns the ||| 5 3	count=3
function	position of the ||| current	count=1
function_arg	[function_1] lists together ||| [arg_2] [function_1]	count=1
function	this function sends a ||| signal process	count=1
arg	s2 have ||| s2	count=1
function	adaptive fill [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] to answer ||| [function_2] [function_1]	count=5
arg	suffix ||| suffix	count=3
function	reads your ||| save list	count=1
module	this function returns the ||| 34 8	count=1
module	found at ||| 37 19.1	count=1
function_arg	[function_1] object is ||| [function_1] [arg_2]	count=1
function	be fit by ||| fit frame to	count=1
arg	according to format format ||| format	count=1
function	just ||| and	count=2
arg	object1 ||| object1	count=1
function	function sets the ||| set window fringes	count=1
arg	the prop ||| pos prop	count=1
function	[function_1] deletes all ||| [function_2] [function_1]	count=4
function	on a link ||| on link	count=1
function	a copy ||| copy	count=3
module	text between ||| 31 19.2	count=1
function	[function_1] echo area ||| [function_2] [function_1]	count=4
function_arg	fieldth field ||| numeric fields field	count=1
function	its buffer exactly ||| buffer	count=1
function_arg	fontset name to ||| fontset font name	count=1
function	for the face ||| face attribute	count=1
module	corresponding ||| 12.12	count=1
function	user ||| user	count=6
module	backups ||| 25 1.2	count=2
module	than ||| 1	count=1
arg	of parameter to value ||| parameter	count=1
arg	defines ||| docstring requirements	count=1
function	the exit [function_2] ||| [function_2] [function_1]	count=4
function	information about the fringes ||| fringes	count=1
module	[module] of the ||| 37 [module]	count=1
module	function returns the ||| 17.1	count=1
function	it ||| make variable buffer	count=1
module	of this ||| 30 7	count=1
function_arg	table [arg_2] ||| [function_1] description [arg_2]	count=1
function	[function_1] marker nil ||| [function_1] [function_2]	count=2
arg	name char ||| char	count=1
function	[function_1] window’s value ||| [function_2] [function_1]	count=2
function_arg	the default [arg_2] ||| [function_1] p [arg_2]	count=1
function	this sets ||| set left margin	count=1
module	a basic [module] mode for ||| [module] 2.5	count=1
arg	tabname ||| tabname	count=1
module	element of ||| 6	count=2
function	before or ||| before	count=1
module	printing ||| 18 5	count=2
function	the property value ||| property	count=1
function	suffix ||| s append	count=1
function	is available ||| available p	count=2
function	this variable ||| mode	count=1
arg	named dirname to newname ||| dirname newname	count=1
function_arg	[function_1] [arg_2] in the current buffer ||| 37 9.3 [function_1] [arg_2] sorted	count=3
function	if ||| test	count=1
function	parameters of ||| frame parameters	count=1
function	major ||| major	count=1
function	character of ||| glyph char	count=1
module	calls its argument ||| 6 6	count=1
arg	coordinates x and y ||| x y	count=1
function	function displays the ||| switch to buffer	count=2
module	nearest ||| 3 5	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=10
module	this function returns ||| 2	count=1
function	function destroy the ||| destroy	count=1
function	a change [function_2] ||| [function_2] [function_1]	count=4
function	pid of ||| process id	count=1
function	set it non-nil ||| auto	count=1
arg	[arg] by ||| [arg] element	count=3
arg	this function finds ||| nomessage nosuffix	count=1
arg	of file filename ||| filename	count=4
function	least recently-used window ||| pop up window	count=1
function	bool vectors ||| bool	count=2
function	of the font ||| font	count=1
function	id ||| save list	count=1
function	an alist [function_2] ||| [function_2] [function_1]	count=2
function	already ||| auto save list file	count=1
arg	of display-table ||| display-table	count=2
function_arg	type of marker ||| type marker	count=2
function	display-table ||| set display table slot	count=1
function_arg	context of [arg_2] ||| [function_1] [arg_2]	count=2
function	if [function] on ||| [function] visible p	count=1
function	syntax class characters ||| syntax forward	count=1
function	the initial execution ||| edebug initial	count=2
function_arg	indices of [arg_2] ||| [function_1] elem [arg_2]	count=1
function	define ||| define	count=1
function_arg	region from [arg_2] ||| [arg_2] [function_1]	count=3
function	floating point ||| float	count=1
function	this function calls ||| map char table	count=1
function	consecutive button presses ||| event click count	count=1
function_arg	character of [arg_2] ||| [function_1] [arg_2]	count=1
function	[function] buffer in ||| [function] buffer in windows	count=2
function	host name and process ||| auto save list	count=1
arg	a single-character answer ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
function	the buffer text ||| buffer	count=1
function	kill [function_2] ||| [function_1] [function_2]	count=1
arg	function stores value in ||| value	count=1
arg	a convenient way ||| object stream	count=1
arg	of the character char ||| char	count=1
module	function ||| 21 1	count=2
function_arg	[function_1] bound ||| [function_1] [arg_2]	count=4
function	query ||| query on exit	count=2
function_arg	definition of [arg_2] ||| [function_1] [arg_2]	count=1
function	by making new ||| pop up	count=1
module	by emacs to the ||| 38 13	count=1
function	pid ||| process id	count=1
module	minibuffer [module_2] ||| [module_1] [module_2]	count=4
module	of the first ||| 17.1	count=1
module	this command ||| 24 7	count=1
rep	the [function_arg_2] ||| [module_1] [function_arg_2]	count=4
arg	object in position ||| position	count=1
arg	num ||| num	count=1
module	keymaps for one or ||| 21	count=1
function	this sets the ||| set right margin	count=1
arg	defines ||| docstring	count=3
function_arg	timestamp [arg_2] ||| [function_1] [arg_2]	count=1
function	this returns ||| event	count=1
module	if the ||| 27	count=2
arg	function returns a list ||| frame	count=1
module	non-nil ||| 25	count=1
function	a function to ||| name function	count=1
module	computing [module] actual ||| [module]	count=1
function_arg	base remapping [arg_2] ||| [function_1] [arg_2]	count=4
arg	buffer specified by ||| norecord	count=2
function	name and process ||| auto save list	count=1
module	to floating point ||| 3 5	count=1
function	function appends ||| append to	count=1
function_arg	status of [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	text of [arg_2] ||| [arg_2] [function_1]	count=1
function	returns a frame configuration ||| frame configuration	count=1
function	attributes of ||| attributes	count=3
function	[function_1] fringe bitmap ||| [function_2] [function_1]	count=3
function	[function] margin ||| [function]	count=3
arg	pred [arg_2] ||| [arg_2] [arg_1]	count=1
function	at the bottom ||| buffer at bottom	count=1
function	margin value to use ||| margin	count=1
function	be fit ||| fit frame to buffer	count=1
module	elements of ||| 5	count=1
function	a help command named ||| make help screen	count=1
function	the ending position of ||| end	count=1
function	the ||| kbd	count=1
function	function ||| char table	count=4
module	to use for auto-saving ||| 25	count=1
arg	cyclic ordering of windows ||| minibuf all-frames	count=2
function	frame ||| frame	count=12
module	your init file it ||| 2	count=1
module	have ||| 25 2	count=2
arg	of frame frame ||| frame	count=2
function_arg	the property propname ||| property char propname	count=1
arg	for key ||| key accept-defaults	count=1
function	have not already ||| save list	count=1
function	currently active minibuffer ||| minibuffer window active	count=1
function	user at ||| user	count=1
function	and the rest ||| capitalize	count=1
module	debugger is called ||| 17 1.1	count=1
function	that ||| char table	count=2
arg	ranges from ||| buffer front-advance rear-advance	count=1
function_arg	[function_1] input-method for ||| [function_1] [arg_2]	count=2
arg	this command adjusts ||| max-height min-height max-width min-width only	count=1
function	name ||| name	count=17
function	this deletes ||| delete	count=1
module	function returns a new ||| 6 5	count=1
arg	contents of string ||| process string	count=1
function	names for buffers ||| names	count=1
module	is allowed to split ||| 27	count=1
function_arg	wildcard [arg_2] ||| [arg_2] [function_1]	count=2
arg	function defines ||| version docstring requirements	count=1
module	return that ||| 6	count=1
function	if non-nil ||| test	count=1
function	converts ||| kbd	count=1
function	buffers by making ||| up	count=1
function	the same ||| same	count=1
function	function appends the ||| append to file	count=1
arg	function returns the number ||| count-final-newline window	count=1
arg	screen line count screen ||| count window	count=1
function	nil switch-to-buffer ||| to buffer preserve	count=1
function	reporting progress ||| progress	count=1
function	[function_1] vector ||| [function_1] [function_2]	count=8
function	convert s to dashed-words ||| s dashed words	count=1
function	a buffer without disrupting ||| bidi string mark	count=1
function	sets the :weight attribute ||| set face	count=1
module	though [module] sorted ||| [module] 6.3	count=1
arg	x2 to ||| x2	count=1
arg	list signature as ||| signature when	count=2
module	window’s value for ||| 27	count=1
module	function tests for the ||| 10	count=1
function	:inverse-video ||| face inverse video	count=1
function	property ||| charset property	count=1
function	an error [function_2] ||| [function_2] [function_1]	count=10
function	syntax class characters ||| skip syntax	count=1
function	[function_1] attributes ||| [function_1] [function_2]	count=10
rep	[module_1] name filename ||| [module_1] file [function_arg_2]	count=1
module	this ||| 30	count=1
function_arg	[function_1] [arg_2] ||| [function_1] n [arg_2]	count=4
function	by eval-expression and ||| eval expression	count=1
module	buffers by making ||| 14	count=1
arg	key much as if ||| key	count=1
module	argument is [module] and ||| [module]	count=1
module	returns the ||| 38 3	count=1
function	fill ||| fill	count=3
function	[function] padding ||| [function] right	count=1
function	represents in shell syntax ||| shell quote	count=1
module	the [module] between positions ||| [module] 6	count=1
function	the members ||| difference	count=1
function	function returns the parent ||| char table parent	count=1
function	coding system which uses ||| coding system	count=1
function	when an error ||| error	count=1
function	function sets the syntax ||| modify syntax	count=1
module	to ||| 8	count=1
module	a new ||| 27	count=1
function_arg	flag of process ||| flag process	count=2
function	list of image ||| find image	count=1
function	[function_1] the object ||| [function_2] width [function_1]	count=2
function	a ||| char	count=1
arg	current-face and also marks ||| current-face	count=1
arg	take a [arg_1] [arg_2] ||| index [arg_1] [arg_2]	count=2
rep	[module_1] forward count ||| [module_1] [function_arg_2]	count=4
function	the overlay that ||| overlay	count=1
function	function tests ||| not	count=1
arg	attribute of face ||| face frame	count=1
module	already set ||| 25	count=1
function	next newer ||| next	count=1
rep	of the [function_arg_2] ||| [module_1] [function_arg_2]	count=4
module	file file converting ||| 12.2	count=1
function	displays differently ||| differs	count=1
function	returns the default file ||| default file	count=1
function	scalable fonts ||| scalable fonts	count=1
function	below the [function_2] ||| [function_2] [function_1]	count=2
arg	symbol not quoted ||| comment-list keyword-list font-lock-list auto-mode-list function-list	count=1
arg	filename into the ||| filename	count=1
module	fill ||| 31 11	count=1
arg	[arg] and ||| [arg]	count=6
function	the end [function_2] ||| [function_1] [function_2]	count=8
function	which warning ||| warning	count=1
arg	table ||| function table	count=1
function	initializes ||| save	count=1
arg	for command a ||| command	count=1
arg	[arg_1] system coding-system ||| [arg_2] [arg_1]	count=5
arg	window ||| window horizontal ignore	count=1
arg	s with [arg_2] ||| [arg_2] [arg_1]	count=4
function	it the window ||| get window	count=1
arg	[arg_1] and list2 ||| items? [arg_1] [arg_2]	count=1
function	syntax classes ||| skip syntax	count=1
arg	whose car is element ||| element	count=1
arg	except [arg] in ewoc ||| ewoc [arg]	count=1
arg	end according [arg_2] ||| [arg_1] [arg_2]	count=2
function	marker that points ||| marker	count=2
arg	symbol by [arg_2] ||| [arg_1] element [arg_2]	count=1
function	start ||| coding region	count=1
function	[function_1] a user ||| [function_2] [function_1]	count=3
arg	propname ||| propname	count=3
arg	pos instead of forward ||| pos	count=1
function	a copy of ||| overlay properties	count=1
function	insert-before-markers but [function_2] ||| [function_1] [function_2] strings	count=1
function	permissions of ||| modes	count=1
function	value of this ||| mark ring	count=1
arg	value in ||| value	count=3
function	the parent ||| window parent	count=1
function	to [function_2] ||| [function_2] [function_1]	count=15
module	debugger as ||| 17	count=1
arg	named [arg] ||| [arg] expansion hook	count=1
module	buffer so that the ||| 4	count=1
arg	forward count ||| count depth	count=1
arg	to underline ||| underline	count=1
function_arg	year corresponding [arg_2] ||| [arg_2] [function_1]	count=1
function	the tabulated list ||| tabulated list init	count=2
arg	record all ||| reuse reseat	count=1
function	argument function ||| map char	count=1
function	query flag ||| process query on exit	count=1
arg	according to the ||| accept-defaults no-remap	count=1
function	[function] of ||| [function] p	count=2
arg	mentioned in syntaxes a ||| syntaxes limit	count=1
function	[function_1] bottom of ||| [function_2] [function_1]	count=3
module	this variable ||| 27	count=2
arg	value of the propname ||| propname	count=1
arg	divides dividend by divisor ||| dividend divisor	count=1
function	xml ||| xml	count=1
arg	associated value—or [arg] if ||| [arg]	count=1
arg	eval-region but ||| buffer-or-name stream filename unibyte	count=1
function	it initializes ||| auto save list file	count=1
function	this function ||| buffer end	count=1
function	[function] buffer ||| [function] buffer in windows	count=2
arg	variable symbol by ||| symbol	count=1
arg	a ||| process	count=1
function	[function_1] name for ||| [function_2] [function_1]	count=3
arg	value value and ||| variable value	count=1
function	or ||| kbd	count=2
module	this function ||| 29 4	count=1
arg	in symbol’s property list ||| symbol property	count=1
module	you ||| 24 6.1	count=1
module	returns ||| 27 3	count=8
arg	predicates preds ||| preds	count=1
function	is greater ||| buffer	count=1
module	this function executes the ||| 36 3	count=1
arg	nil with initial-value and ||| initial-value list	count=1
function	argument function for each ||| char table	count=1
arg	of lists using function ||| &rest lists	count=1
function_arg	[function_1] terminal ||| [arg_2] [function_1]	count=1
arg	fn to the items ||| fn	count=1
function	window selected ||| frame selected	count=1
function	syntax class characters ||| syntax	count=1
function	is the currently active ||| window active	count=1
function	is ||| pop	count=3
arg	prefix ||| prefix	count=3
function	as obsolete indicating ||| obsolete	count=1
rep	function [function_arg_2] ||| [module_1] [function_arg_2]	count=4
function	of extra ||| table extra	count=1
function	of the newest ||| kept	count=1
function	this function sets its ||| set	count=1
module	emacs reads ||| 25	count=1
arg	s and suffix ||| suffix s	count=1
function	for each element of ||| char	count=1
module	have not ||| 25	count=1
module	marker ||| 30	count=1
function	returns the remapping for ||| command remapping	count=1
function	extra ||| table extra	count=2
function	variable controls which ||| allowed	count=1
module	the value of ||| 27	count=2
module	not computing [module] actual ||| [module]	count=1
function	returns the ending ||| event end	count=1
module	string ||| 1	count=2
function	comparing ||| sort	count=2
module	falsehood of ||| 3	count=1
function	the x ||| x get	count=1
module	the editor command loop ||| 20	count=1
function	emacs-recognized extended file ||| file extended	count=2
function	if you ||| auto save	count=1
function	a string ||| seconds	count=1
function	can execute ||| executable	count=1
function	buffer’s case ||| buffer case	count=1
function	turn passing ||| with	count=1
function	[function_1] vector never ||| [function_1] [function_2]	count=5
module	point ||| 31	count=3
arg	from beg to end ||| beg end count-final-newline	count=1
arg	key with value ||| key	count=1
function	[function] the text ||| remove text [function]	count=1
function	“logical and” ||| logand	count=1
function_arg	shell [arg_2] ||| [function_1] [arg_2]	count=2
function	insert-before-markers but inherit ||| and inherit	count=1
module	[module_1] [module_2] the same as (car ||| [module_2] [module_1]	count=1
function_arg	[function_1] specified by ||| [function_1] other window buffer-or-name [arg_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] other frame buffer-or-name [arg_2]	count=8
function_arg	[function_1] that event ||| [arg_2] [function_1]	count=4
function	buffer’s point ||| window point	count=1
function	that satisfies ||| tree map nodes	count=1
arg	return non-nil [arg] one of ||| [arg]	count=1
module	need not match ||| 33	count=2
module	of an existing ||| 6.2	count=1
function	a non-nil value ||| char table	count=1
function	[function_1] function ||| [function_2] [function_1]	count=2
arg	window window ||| window string	count=1
arg	a list of directories ||| path	count=1
function	the value ||| char	count=1
module	value of this ||| 7	count=1
arg	in ||| to	count=1
function	and process id ||| list	count=1
arg	prompt and providing intelligent ||| prompt	count=1
rep	possible [function_arg_2] ||| [module_1] all [function_arg_2]	count=1
function	[function] all ||| terminal [function]	count=1
function	stores value ||| plist put	count=1
arg	in object rather than ||| pos prop object limit	count=1
arg	in s ||| s	count=1
function	function returns ||| vconcat	count=1
arg	position in buffer ||| position buffer	count=2
module	emacs starts up ||| 38	count=1
function	function sets the ||| set terminal	count=1
module	which ||| 31	count=1
arg	the execution of body ||| body	count=1
function	return the window ||| posn window	count=1
function_arg	[function_1] name a ||| [function_1] [arg_2]	count=3
module	generate repeat events ||| 20	count=1
module	named ||| 36 6	count=1
module	this function returns a ||| 6.4	count=1
function	function sets the ||| set file	count=3
arg	non-nil bind ||| &rest else	count=1
function	input from ||| read from	count=1
function	may ||| up	count=1
function	the text ||| set text properties	count=1
function	returns the current display-width ||| width	count=1
module	output ||| 36	count=1
function	non-nil that means ||| pop up	count=1
arg	bold-p is ||| bold-p frame	count=1
function	text of ||| window text	count=1
function	a leap ||| leap	count=1
function	acl for the ||| acl	count=1
arg	output from terminal ||| terminal	count=1
arg	in filename with the ||| filename	count=1
function	time of the file ||| file	count=1
function	all the elements whose ||| all	count=2
arg	the list each time ||| list	count=1
module	debugged ||| 17	count=1
function	if no change ||| char property change	count=1
function	makes backups by copying ||| backup by copying	count=2
function	element of ||| map	count=1
function	same share ||| balance windows	count=1
function	frame number ||| frame	count=1
function	a standard x ||| x parse	count=1
function	new ||| pop	count=2
arg	this function finds ||| filename missing-ok nomessage nosuffix	count=1
function	[function_1] link ||| [function_2] [function_1]	count=7
arg	the character set charset ||| charset	count=2
function	based ||| file	count=1
arg	[arg_1] function for ||| [arg_2] [arg_1]	count=1
module	a ||| 9	count=3
function	as dedicated ||| set window dedicated p	count=1
function	the current global map ||| global	count=1
function	returns the indentation of ||| indentation	count=1
arg	nth position [arg] ||| n x [arg]	count=1
function	function makes table ||| set	count=2
function	titleized [function_2] ||| [function_2] [function_1]	count=1
arg	of fn ||| fn &optional equal-test	count=1
module	this function returns ||| 27 25	count=1
function	current line ||| current	count=1
function	like find-file but ||| find	count=1
arg	n-arity function [arg] a 1-arity ||| [arg]	count=1
arg	for regexp [arg_2] ||| [arg_1] [arg_2]	count=1
arg	function completes ||| predicate	count=1
module	there is none ||| 37 21.3	count=1
function	watch specified by ||| watch	count=1
function	that the minibuffer ||| minibuffer	count=1
function	table [function_2] ||| [function_1] [function_2]	count=1
arg	case-invariant with syntax syntax ||| syntax case-table	count=1
module	you have ||| 2	count=1
function	about the overlay ||| overlay	count=1
function	objects created in this ||| memory use counts	count=1
function	reports the current insertion ||| insertion	count=1
function	find-file [function] use minibuffers ||| [function]	count=1
function	[function_1] [function_2] ||| [function_2] line [function_1]	count=3
module	[module_1] which ||| [module_1] [module_2]	count=10
function	function makes table the ||| set	count=2
function	displays differently from ||| face differs from	count=2
module	makes the result a ||| 1	count=1
function	ending ||| end	count=1
module	the value of this ||| 30	count=1
function	set ||| auto save	count=1
arg	[arg_1] prompt ||| [arg_2] [arg_1]	count=4
function	[function_1] bar ||| [function_2] [function_1]	count=1
module	command which ||| 27 20	count=1
module	variables during its next ||| 22 4.1	count=1
function	text properties ||| insert buffer substring no properties	count=1
arg	has ||| function	count=1
function_arg	before or [arg_2] ||| [function_1] ewoc [arg_2]	count=1
arg	byte array bindat-raw according ||| bindat-raw	count=1
function	of face [function_2] ||| [function_2] [function_1]	count=1
arg	the prop ||| pos prop object limit	count=1
function	new window for ||| pop up	count=2
module	[module] and returns ||| [module]	count=1
function	0 point-min ||| buffer	count=1
function_arg	[function_1] [arg_2] ||| [function_1] plist property [arg_2]	count=16
function	on this prefix adding ||| list file prefix	count=1
function	non-nil based ||| auto save	count=1
function	text of the current ||| text	count=1
module	of ||| 1	count=2
function	this ||| kbd	count=1
function	destroy the fringe bitmap ||| destroy fringe	count=1
function_arg	[function_1] char-table ||| [arg_2] [function_1]	count=5
module	already ||| 25 2	count=2
arg	and one lower ||| uc lc	count=1
module	the entire ||| 4	count=1
arg	replacements is ||| replacements	count=1
function	selinux context ||| file selinux context	count=2
module	the words in ||| 4 8	count=1
arg	char case-invariant with ||| case-table	count=1
module	this function returns the ||| 19 12	count=2
function	a ||| pop	count=1
arg	number-or-marker ||| number-or-marker	count=1
module	debugger is ||| 17	count=1
arg	specified by handle ||| handle	count=1
arg	the message and type ||| message level buffer-name	count=1
arg	in object rather ||| pos prop object	count=1
function_arg	display [arg_2] ||| [function_1] [arg_2]	count=3
arg	to format format ||| format	count=1
function	that has ||| map	count=1
function	emacs ||| list file	count=1
function	[function_1] keyboard input ||| [function_1] user [function_2]	count=2
arg	nil with initial-value ||| initial-value list	count=1
function	user ||| user login	count=1
arg	object if ||| object	count=1
function	all the elements ||| all	count=2
arg	[arg] instead of ||| [arg] object	count=1
arg	[arg_1] time item ||| [arg_2] [arg_1]	count=4
function_arg	removes [arg_2] ||| 12 10.1 [function_1] place [arg_2]	count=1
function	new [function_2] ||| [function_2] [function_1]	count=9
function	forces emacs to update [function_1] [function_2] line and header line ||| [function_1] [function_2] line update all	count=1
function_arg	binding [arg_2] ||| [function_1] [arg_2]	count=5
arg	element of tree and ||| tree	count=1
function	currently visible on the ||| visible in	count=1
function	a copy ||| properties	count=1
function	that means ||| pop up	count=1
arg	file filename ||| filename id-format	count=1
function	non-nil that ||| pop up	count=1
arg	of the symbol ||| symbol	count=1
arg	by providing completion ||| collection predicate require-match initial history default inherit-input-method	count=1
function	of the buffer or ||| of buffer	count=1
function	non-nil based on ||| auto save	count=1
function	previous buffers to ||| prev buffers	count=2
function	is [function] of the ||| [function] p	count=1
function_arg	[function_1] [arg_2] ||| [function_1] p file [arg_2]	count=4
arg	pos ||| pos escape-from-edge	count=2
function	attributes of remote ||| remote file name inhibit cache	count=1
arg	coding-system ||| coding-system nocopy	count=1
module	of file names that ||| 24 9	count=1
function	is non-nil ||| up	count=2
arg	font-spec ||| font-spec frame add	count=1
function	of attributes of ||| file attributes	count=1
arg	the only live window ||| no-mini all-frames	count=1
module	vector containing all ||| 6 5	count=1
module	reads your init ||| 25	count=1
arg	buffer in ||| buffer	count=1
function	package file it uploads ||| package upload buffer	count=1
function	buffer is on a ||| mouse on	count=1
module	lisp programs and ||| 7	count=1
function	its buffer ||| buffer	count=1
arg	coding-system ||| coding-system nocopy buffer	count=1
arg	[arg_1] by consing ||| [arg_1] element [arg_2]	count=3
function	of extra [function_2] ||| [function_2] [function_1]	count=1
function	a window below the ||| display buffer below	count=1
arg	command fills ||| end justify	count=1
module	non-nil display-buffer ||| 14	count=1
function	the help information ||| help	count=1
module	emacs session ||| 38	count=1
module	function returns ||| 29 1	count=1
function	charset of highest ||| charset after	count=1
function	display of the startup ||| startup	count=1
function	specify margins around ||| margins	count=1
arg	function resizes ||| pretend pixelwise	count=1
function	rehash ||| rehash	count=1
function_arg	property named [arg_2] ||| [arg_2] [function_1]	count=3
module	frames and their contents ||| 28 12	count=1
arg	expr in non-nil thread ||| &optional	count=1
module	file names that ||| 24 9	count=1
function	[function_1] form and ||| [function_2] [function_1]	count=3
function	of lines of ||| lines	count=1
function	the environment variable values ||| substitute in	count=1
arg	initial value value ||| value	count=1
function	this function ||| map	count=1
module	function converts the ||| 34 8	count=1
arg	index from ||| from &optional	count=1
arg	[arg] n places ||| n [arg]	count=1
arg	name prompting with prompt ||| prompt	count=1
module	file ||| 25 2	count=2
function	windows in turn passing ||| with	count=1
module	of [module] as ||| [module] 3	count=1
function	command makes a ||| make	count=1
function	to uppercamelcase ||| upper camel case	count=1
function	s to titleized ||| s titleized	count=1
function	is ||| hook	count=1
module	ewoc found at ||| 19.1	count=1
module	a [module] describing ||| [module] 8	count=1
function	[function_1] boundaries and ||| [function_1] [function_2]	count=4
function	is like next-single-property-change except ||| next single char	count=1
function	the current major mode ||| major mode	count=1
function	for the fringe ||| fringe	count=1
arg	n items in list ||| list	count=1
arg	event ||| event	count=1
function	fit ||| fit frame	count=1
function	dimensions of ||| mm dimensions	count=1
arg	string ||| string	count=14
module	is non-nil that ||| 27	count=1
function	name and ||| list file	count=1
arg	buffer from-buffer-or-name into ||| from-buffer-or-name start	count=1
arg	to the named function ||| function props	count=1
function	window to make a ||| up	count=1
arg	this function completely replaces ||| props	count=1
function	file [function_2] ||| [function_1] [function_2]	count=16
arg	nth bit is set ||| ints-or-markers	count=2
arg	the cyclic ||| minibuf all-frames	count=1
module	of ||| 27	count=2
function	to ||| set	count=1
module	this function ||| 31 12	count=1
module	during ||| 22 4.1	count=1
function_arg	[function_1] [arg_2] ||| [function_1] window [arg_2]	count=8
arg	var as ||| var fun	count=1
function	this function ||| window	count=2
arg	in keymap ||| keymap	count=1
function_arg	[function_1] of string ||| [function_1] [arg_2]	count=1
function	the debug-on-exit ||| backtrace debug	count=1
arg	function acts on ||| appendp object	count=1
function	have not ||| list file	count=1
function	horizontally ||| window to buffer horizontally	count=1
arg	new-alias ||| new-alias	count=1
function_arg	link to [arg_2] ||| [function_1] [arg_2]	count=2
rep	recorded in [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	the lisp [arg] any time ||| [arg]	count=1
function	existing window ||| pop up	count=1
function_arg	[function_1] n is ||| 31 7 just one [function_1] [arg_2]	count=2
function	window to make ||| up	count=1
function	emacs reads ||| file	count=1
arg	[arg_1] object2 ||| [arg_2] [arg_1]	count=3
function	frame’s current window ||| current window	count=2
function	of this variable ||| mark	count=1
arg	[arg_1] pushes ||| [arg_1] [arg_2]	count=3
arg	file filename [arg_2] ||| [arg_1] [arg_2]	count=4
function	returns the definition ||| lookup key	count=1
function	already ||| auto save	count=1
function	between positions ||| region	count=2
module	an error is ||| 9 5	count=1
module	function moves point ||| 29 2.4	count=3
arg	end using a function ||| end	count=1
function	actual ||| posn actual	count=1
function	for each ||| map char table	count=1
function	underline in ||| underline	count=1
arg	command fills each paragraph ||| end justify citation-regexp	count=1
module	non-nil value ||| 6 6	count=1
function	character that ||| char	count=1
function	host name ||| list file	count=1
function	edebug tests coverage of ||| coverage	count=1
function	syntax class ||| syntax	count=1
module	horizontal position ||| 31	count=1
arg	underline ||| underline frame	count=1
function	owner or the group ||| when mismatch	count=1
module	a string or ||| 1	count=1
module	variables during its ||| 4.1	count=1
module	constant into a ||| 21 1	count=1
function	function stores ||| char code	count=1
arg	from to ||| from &optional	count=1
function	creates ||| make overlay	count=1
arg	[arg] words after ||| [arg]	count=3
function	body width of ||| body size	count=1
arg	if [arg] have ||| [arg]	count=1
module	this function moves ||| 29	count=1
function_arg	[function_1] [arg_2] ||| [function_1] char docstring [arg_2]	count=3
function	an alist of attributes ||| all attributes	count=1
module	function returns the ||| 26 3	count=1
module	an existing ||| 27	count=1
module	events ||| 20 7.7	count=2
arg	[arg_1] to ||| [arg_1] [arg_2]	count=2
function	id ||| list file	count=1
function	the default file permissions ||| default file modes	count=1
module	frame [module] in ||| [module]	count=1
function	of syntax class ||| syntax forward	count=1
arg	bold-p ||| bold-p frame	count=1
function	with ||| define	count=1
function	base [function_2] ||| [function_2] [function_1]	count=2
function	years days hours ||| format	count=1
function	subtype symbol of ||| char table subtype	count=1
function	minimum [function_2] ||| [function_1] [function_2]	count=1
function	each element ||| map char	count=1
function	function returns non-nil if [function_1] [function_2] ||| [function_1] [function_2]	count=1
function_arg	table [arg_2] ||| [arg_2] [function_1]	count=11
arg	[arg] the fringe ||| pos [arg]	count=2
function	index ||| elem index	count=1
function_arg	stores value [arg_2] ||| [arg_2] [function_1]	count=3
arg	performing operation [arg] ||| [arg]	count=1
function	buffers to ||| buffers	count=1
module	a string constant ||| 1	count=1
module	[module] copy of ||| [module]	count=2
arg	in the prop ||| pos prop object limit	count=1
function	name it is supposed ||| precious flag	count=1
function	[function_1] number in ||| [function_1] [function_2]	count=4
function	for ||| map	count=1
arg	it looks in the [arg_1] [arg_2] actual ||| [arg_2] [arg_1]	count=6
arg	unary predicates preds ||| preds	count=1
function_arg	current global [arg_2] ||| [arg_2] [function_1]	count=1
function	directory ||| copy directory	count=1
function	name for ||| name	count=2
function	of the current frame ||| current frame	count=1
function_arg	[function_1] window ||| [function_1] [arg_2]	count=16
arg	count lines to ||| count	count=1
module	files that match ||| 24	count=1
function	that means ||| pop	count=1
arg	prefix and [arg_2] ||| [arg_1] [arg_2]	count=2
function	input method [function_2] ||| [function_2] [function_1]	count=3
function	not already ||| save list	count=1
module	days hours ||| 7	count=1
function	the directory ||| copy directory	count=1
arg	the specification string fontset-spec ||| fontset-spec style-variant-p noerror	count=1
function	host name and ||| auto save list	count=1
function	frame and displays the ||| frame	count=1
arg	in object rather than ||| object limit	count=1
function	by [function_2] ||| [function_2] [function_1]	count=8
function	not include [function] part ||| [function]	count=1
function	creates ||| make	count=3
function	recursive [function_2] ||| [function_1] [function_2]	count=1
function_arg	to [arg_2] ||| [function_1] fn [arg_2]	count=1
function	returns a copy ||| overlay properties	count=1
function	variable specifies errors which ||| errors	count=1
arg	with the label label ||| label properties	count=1
function	nil switch-to-buffer displays the ||| switch to buffer preserve window	count=1
module	returns ||| 19 13	count=2
function_arg	bottom edge [arg_2] ||| [arg_2] [function_1]	count=1
arg	preferably not the window ||| action norecord	count=1
function_arg	[function_1] command ||| [arg_2] [function_1]	count=3
function	selinux context of the ||| file selinux context	count=1
function	current [function] after ||| [function]	count=1
function	defines a pop-up ||| define	count=1
function	new window for ||| pop	count=1
function	remapping for ||| command remapping	count=1
arg	count would move to ||| count	count=1
function	or [function_2] ||| [function_2] [function_1]	count=2
function	that has a non-nil ||| table	count=1
function	this ||| mark	count=1
function	acl for the file ||| file acl	count=1
function	and height [function_2] ||| [function_2] width [function_1]	count=1
function	by [function] is called ||| [function] auto hide	count=1
function	holds an alist ||| alist	count=1
function_arg	bytes [arg_2] ||| [arg_2] [function_1]	count=1
function	this returns non-nil if ||| p	count=1
arg	in syntaxes ||| syntaxes limit	count=2
function	directory dir or ||| directory	count=1
function	controlling ||| controlling	count=1
module	see basic windows ||| 27	count=1
function	or nth previous button ||| forward button	count=1
module	function moves ||| 29	count=6
arg	collection will operate assuming ||| collection predicate	count=1
function	end of the minibuffer ||| minibuffer	count=1
arg	of buffer-or-name ||| buffer-or-name	count=1
arg	object1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] the wildcard ||| [function_1] [function_2]	count=3
arg	alist comparing [arg] against ||| [arg]	count=1
arg	command fills ||| start end justify	count=1
function	definition ||| lookup	count=1
arg	[arg_1] property ||| [arg_2] [arg_1]	count=3
module	the [module] in ||| [module]	count=1
function	the value of this ||| pop up	count=2
function_arg	property propname for ||| property char propname	count=1
function	directory dir ||| directory	count=1
arg	non-nil thread [arg_2] ||| [arg_2] [arg_1]	count=4
module	vector ||| 1	count=1
function	the epoch ||| time	count=1
function	the maximum size ||| max	count=1
function	item to [function_2] ||| [function_2] bar [function_1]	count=1
function	returns the line ||| line	count=1
module	that has a non-nil ||| 6 6	count=1
function	frames—the first [function] and ||| [function]	count=1
module	reads your init file ||| 25	count=1
function	top entry in the ||| top	count=1
arg	integers that ||| integers	count=1
module	is using emacs ||| 38	count=1
module	tests for ||| 10	count=1
arg	function returns the number ||| window	count=1
function	reads a ||| read	count=6
function	of image ||| image	count=1
module	hours ||| 7	count=1
function	editable contents of ||| minibuffer contents	count=1
function	window’s value of ||| window parameter	count=1
function	when creating the initial ||| initial	count=1
function	or vector ||| kbd	count=1
function	function deletes from ||| delete	count=2
function	process ||| save	count=1
function	sentinel of ||| sentinel	count=1
module	after ||| 25 2	count=2
function	returns the character of ||| char	count=1
function	if you have ||| file	count=1
arg	old with ||| old	count=1
function	xml rather than ||| xml	count=1
module	variable is the ||| 7	count=1
arg	expand to expansion and [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
arg	[arg_1] and y ||| [arg_2] [arg_1]	count=5
arg	[arg_1] end on ||| [arg_2] [arg_1]	count=1
function	remove the last ||| last	count=1
function	the parameters ||| parameters	count=1
function	filters the buffer ||| buffer substring	count=1
module	key sequence a ||| 1	count=1
arg	unary predicate [arg] and return ||| [arg]	count=1
function	new window ||| pop	count=1
function	frame that the window ||| frame	count=1
module	if non-nil edebug ||| 17 2.16	count=1
arg	prompt ||| prompt directory default	count=1
function	of the beginning ||| beginning	count=1
function	when their wildcards argument ||| wildcards	count=1
function	the key sequence ||| read key sequence	count=2
arg	after pos ||| pos	count=1
arg	warps the mouse like [arg_1] [arg_2] ||| set mouse pixel position [arg_1] [arg_2]	count=2
module	the [module] ||| [module] 13	count=3
function_arg	[function_1] [arg_2] ||| [function_1] plist [arg_2]	count=1
module	for each ||| 6	count=2
arg	prefix and ||| prefix	count=1
function	completion style symbols to ||| completion styles	count=1
module	you have not already ||| 25 2	count=1
module	buffer or text ||| 31	count=1
function_arg	the category [arg_2] ||| [arg_2] [function_1]	count=1
function	the window ||| window	count=2
arg	returns parent ||| parent	count=1
function	color ||| color	count=4
function	a [function] buffer—but does ||| [function] buffer name	count=1
function	new [function_2] ||| [function_1] [function_2]	count=1
function	be [function] ||| [function]	count=1
function	already set ||| list	count=1
function_arg	[function_1] [arg_2] pixels ||| [function_1] window from [arg_2] x-limit y-limit mode-and-header-line	count=11
function	function works like assoc ||| assoc	count=1
module	variable’s value ||| 3.2	count=1
function	displays the buffer ||| switch to buffer	count=2
function	non-nil ||| list	count=1
function	[function_1] year corresponding ||| [function_1] [function_2]	count=1
module	returns ||| 20	count=1
function	current display-width of the ||| width	count=1
arg	file filename into ||| filename	count=1
function	text conversion of ||| text conversion	count=1
arg	returns object ||| object	count=1
function	this inserts object ||| ring insert	count=1
function	minibuffer window is ||| minibuffer	count=1
arg	a string ||| string	count=1
function	fit by fit-frame-to-buffer ||| fit frame to buffer	count=1
module	elements ||| 6	count=1
function	its argument function ||| char table	count=1
arg	of regexp ||| regexp s	count=1
function	a [function] that ||| generate new buffer [function]	count=1
function	print-length to this value ||| length	count=1
module	years days hours ||| 38	count=1
function	[function_1] button ||| [function_2] [function_1]	count=2
module	non-nil value ||| 6	count=2
function	currently active ||| window active	count=1
function	minibuffer text for ||| minibuffer	count=1
arg	this function completes ||| predicate	count=1
arg	args into ||| args	count=1
function	the mouse pointer displayed ||| pointer	count=1
module	may display buffers ||| 14	count=1
function	for ||| pop up	count=1
arg	[arg_1] repetitions of ||| [arg_2] [arg_1]	count=4
function	to make ||| make	count=1
function	makes backup files by ||| backup by	count=1
module	file ||| 24 8.6	count=1
arg	list1 and list2 using ||| list1 list2	count=1
module	buffer in the ||| 8	count=1
module	function tests ||| 10	count=1
function	composed ||| iteratefn	count=1
function_arg	[function_1] value of ||| [function_1] plist property [arg_2]	count=1
function	[function_1] window’s header ||| [function_2] [function_1]	count=1
function	making new frames ||| up frames	count=1
arg	the message and type ||| message level	count=1
module	means ||| 14	count=1
arg	[arg_1] [arg_2] ||| [arg_1] collection [arg_2]	count=4
function	adaptive fill mode is ||| adaptive fill mode	count=1
arg	function returns t if [arg_1] [arg_2] have equal components and ||| 2 7 equal [arg_1] [arg_2]	count=2
function	address [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] year ||| [function_2] [function_1]	count=1
arg	element ||| element	count=3
function_arg	directory named [arg_2] ||| [function_1] [arg_2]	count=3
module	reads your init ||| 25 2	count=1
function	[function_1] history ||| [function_1] complete [function_2]	count=1
function	is no match ||| match	count=1
function	a list specifying ||| window prev buffers	count=1
function	on the kill ring ||| kill	count=1
module	returns the ||| 36 6	count=3
arg	face to pattern ||| face pattern frame	count=3
function	determine a [function] a ||| [function]	count=1
function	if ||| if	count=3
function	contents [function] is ||| minibuffer complete [function]	count=1
arg	position and pushes ||| position nomsg activate	count=2
function_arg	[function_1] n ||| [arg_2] [function_1]	count=15
function	a minibuffer ||| window minibuffer	count=1
function	newer than [function_2] ||| [function_2] [function_1]	count=1
arg	string2 i ||| string2 ignore-case	count=2
arg	[arg_1] with rep ||| [arg_2] [arg_1]	count=1
module	converting it according to ||| 24 12.2	count=1
arg	this command fills each ||| justify citation-regexp	count=1
arg	with name char ||| char	count=1
module	this function returns the ||| 17.1	count=1
function	left and right margins ||| margins	count=1
arg	sig ||| sig	count=1
arg	command [arg] ||| library [arg]	count=1
arg	start and [arg] in ||| [arg]	count=1
function	end with [function] ||| [function]	count=1
module	string constant ||| 21	count=1
arg	[arg] one of ||| [arg]	count=1
arg	from to index ||| from	count=1
function	next sibling ||| next sibling	count=1
function	indices ||| elem indices	count=1
arg	selects frame raises it ||| frame	count=1
arg	[arg_1] new in ||| [arg_2] [arg_1]	count=2
arg	a predicate [arg] ||| [arg]	count=3
module	files ||| 24 2	count=1
module	this function ||| 7	count=10
arg	region beg through end ||| beg end	count=1
function_arg	keyboard input [arg_2] ||| [function_1] coding system coding-system [arg_2]	count=1
arg	elements in list satisfying ||| pred list	count=1
arg	[arg_1] using collection ||| [arg_2] [arg_1]	count=2
module	a non-nil ||| 6 6	count=1
function	at point and then ||| then	count=1
arg	or buffer object ||| object	count=4
function	allowed to split an ||| up	count=1
module	horizontal position of the ||| 17.1	count=1
function	buffer by choosing an ||| buffer use some	count=1
module	display-buffer is ||| 27	count=1
module	debugger is called ||| 17	count=1
function	first nonblank ||| current	count=1
module	buffer ||| 1	count=1
function_arg	stores value [arg_2] ||| [function_1] plist property [arg_2]	count=2
arg	end adding the face ||| end	count=1
function	initializes auto-save-list-file-name if ||| save list file	count=1
function	to [function_2] ||| [function_2] bar [function_1]	count=1
arg	with prompt and providing ||| prompt initial	count=1
function	process id ||| save list	count=1
function	graphic display capable ||| graphic	count=1
module	the [module] start and ||| [module]	count=1
function	id ||| file	count=1
function	charset ||| charset after	count=1
arg	with font-spec ||| font-spec frame add	count=1
arg	but does ||| wildcards	count=1
arg	lisp expression using the ||| initial	count=1
module	you have not ||| 2	count=1
function	whose syntax classes ||| skip syntax	count=1
module	sends ||| 38 13	count=1
module	vector ||| 21	count=1
function	have not already ||| auto save	count=1
function	window as ||| get window	count=1
function	text currently visible on ||| pos visible	count=1
arg	[arg] elements matching ||| pred [arg]	count=1
module	the horizontal position ||| 17.1	count=1
function	this function ||| format seconds	count=1
function	field ||| field	count=5
function	[function_1] category ||| [function_1] [function_2]	count=2
function	should not enter ||| debug ignored	count=1
function	[function_1] the base ||| [function_2] [function_1]	count=2
function	the default [function_2] ||| [function_1] [function_2]	count=9
module	new vector containing all ||| 6	count=1
module	if ||| 2	count=1
function	[function_1] previous ||| [function_1] [function_2]	count=3
function	consecutive button presses ||| click	count=1
arg	of tree and make ||| tree	count=1
module	is like ||| 31	count=1
arg	an ||| icon	count=1
function	startup echo ||| startup echo	count=1
module	this function returns ||| 32 7	count=1
function_arg	the x [arg_2] ||| [function_1] resource attribute [arg_2]	count=1
function	of this variable ||| up	count=2
module	nonnegative ||| 19 13	count=2
module	other frames ||| 28	count=1
function	for the fringe ||| fringe bitmap	count=1
arg	satisfying the ||| pred	count=1
module	or an internal window [module_1] [module_2] window tree ||| [module_1] [module_2] window valid	count=1
function	edge coordinates of window ||| window edges	count=1
function_arg	insertion type [arg_2] ||| [function_1] [arg_2]	count=4
function	unregisters it ||| lock unregister	count=1
arg	list or all ||| list	count=1
function	lines ||| count lines	count=1
function	total ||| total	count=1
module	returns a new vector ||| 6 5	count=1
function	directory named ||| directory	count=1
function_arg	[function_1] [arg_2] fills it ||| [function_1] [arg_2]	count=4
function	field as ||| field	count=1
function	progress ||| progress	count=1
function	or a buffer ||| display message or buffer	count=1
function	this is an alist ||| alist	count=1
arg	[arg] window’s ||| window [arg]	count=2
arg	of x2 to ||| x2	count=1
function	defines ||| menu define	count=2
function	function sets the ||| set char	count=1
arg	in object ||| object	count=1
function_arg	[function_1] in position ||| [arg_2] [function_1]	count=15
function	shell command from ||| shell command	count=1
arg	defines [arg_2] ||| [arg_2] [arg_1]	count=4
function	emacs reads your ||| auto save	count=1
function	function executes the shell ||| shell command	count=1
function	function sets the access ||| set	count=1
function	versions to [function_2] ||| [function_2] [function_1]	count=2
function	the subtype symbol ||| table subtype	count=1
function	the timer ||| timer	count=1
arg	record-regexp ||| record-regexp	count=1
function	trailing whitespace ||| trailing whitespace	count=2
arg	convert ||| s	count=2
function	coding system which ||| coding system change	count=2
module	a ||| 6.4	count=1
arg	from start ||| start	count=3
function	edge coordinates of window ||| edges	count=1
function_arg	keyboard [arg_2] ||| [function_1] coding system coding-system [arg_2]	count=1
module	or the limits of ||| 2.3	count=2
function	translation table ||| translation table	count=2
function	the value ||| pop	count=2
function	syntax table of buffer ||| syntax	count=1
module	sequence ||| 21	count=1
function	file ||| list file	count=1
function	[function_1] the user ||| [function_2] [function_1]	count=3
arg	list of symbol ||| symbol	count=1
arg	address to address ||| process address	count=1
function	name and process ||| list file	count=1
function	function for ||| map	count=1
arg	empties out the ||| keep-record	count=1
arg	[arg_1] in string ||| [arg_1] [arg_2]	count=2
function	reads ||| save list	count=1
module	the entire ||| 29 4	count=1
module	the minibuffer prompting ||| 19 6.5	count=1
arg	to coding system coding-system ||| coding-system destination	count=2
function	of all expressions debugged ||| edebug	count=1
function	a symbolic ||| symbolic	count=1
module	the ||| 5 8	count=2
arg	message [arg_2] ||| [arg_2] [arg_1]	count=2
function	the ||| not	count=1
function	this function sets ||| set window	count=1
arg	eval-region but the ||| buffer-or-name stream filename	count=1
function	[function_1] a new ||| [function_2] [function_1]	count=2
arg	in object ||| prop object limit	count=1
function	[function_1] simple ||| [function_1] [function_2]	count=1
arg	the given [arg_2] ||| [arg_2] [arg_1]	count=1
function	non-nil based ||| auto	count=1
module	length of time emacs ||| 38	count=1
arg	font-spec [arg_2] ||| [arg_2] [arg_1]	count=2
arg	its argument function for ||| function	count=1
function	window to ||| pop up	count=1
arg	the rgb value rgb ||| rgb	count=1
function	is the major mode ||| mode	count=1
module	this function ||| 2	count=3
arg	in the current buffer ||| buffer	count=1
arg	charset to the ||| charset	count=2
arg	device used by terminal ||| terminal	count=1
arg	from-buffer-or-name into the ||| from-buffer-or-name start end	count=1
function	the least fixpoint of ||| fixfn	count=1
function	new frame ||| other frame	count=1
function	the modifiers ||| modifiers	count=1
module	this function ||| 3 6	count=2
module	minibuffer contents with ||| 19 10	count=3
arg	new-char in ||| new-char noundo	count=1
arg	or directory file ||| directory	count=1
module	you have not ||| 25 2	count=1
arg	[arg_1] start ||| [arg_2] [arg_1]	count=3
module	the property list ||| 9.2	count=1
arg	binding [arg_2] ||| [arg_1] [arg_2]	count=1
module	during its ||| 4.1	count=1
function	font matching with ||| font	count=1
module	activations ||| 19	count=1
function	moves point to ||| ewoc goto	count=1
module	variable ||| 11 11	count=1
function	the unindented-ok argument ||| relative maybe	count=1
module	this function processes ||| 36 3	count=3
function	it initializes ||| auto save list	count=1
arg	position pos ||| pos	count=3
function	user groups on the ||| groups	count=1
function	or [function_2] ||| [function_1] [function_2]	count=2
module	for the falsehood ||| 3	count=1
function	an abbrev table ||| abbrev table	count=1
arg	[arg_1] and object2 ||| 2 7 equal [arg_1] [arg_2]	count=1
module	this function ||| 8	count=1
function_arg	name with [arg_2] ||| [function_1] prompt [arg_2]	count=1
function	the kill ring ||| kill	count=1
function	function calls ||| char table	count=1
arg	function finds ||| nosuffix	count=1
arg	pos ||| pos	count=11
function	prefix adding the ||| prefix	count=1
function_arg	list with ||| list &rest	count=1
arg	position pos in ||| pos	count=2
arg	process to [arg_2] ||| [arg_1] [arg_2]	count=1
function	the results of expressions ||| results	count=1
arg	finds and opens ||| nomessage nosuffix must-suffix	count=1
function	the value of asin ||| asin	count=1
module	function returns t ||| 31	count=2
arg	among tokens ||| tokens	count=1
arg	defines the function ||| docstring interactive type	count=1
function	edebug tests coverage of ||| test coverage	count=1
function	value ||| pop	count=2
function_arg	than file [arg_2] ||| [arg_2] [function_1]	count=1
function	many of the newest ||| kept	count=1
function_arg	sets [arg_2] ||| [function_1] from to [arg_2]	count=3
function	function sets the debug-on-exit ||| backtrace	count=1
arg	filename to [arg_2] ||| [arg_1] [arg_2]	count=2
function	in ||| at	count=1
function	auto-save file ||| auto save file	count=2
function	buffer in ||| buffer	count=1
module	display-buffer may ||| 27	count=1
function	indents the current line ||| indent	count=1
function	returns a copy of ||| properties	count=1
function	the year corresponding ||| year	count=1
function	message currently ||| message	count=1
arg	value as the value ||| value	count=2
function	this ||| window	count=1
arg	and returns it ||| prompt initial history default	count=1
arg	old-pos ||| old-pos escape-from-edge only-in-line inhibit-capture-property	count=1
function	up a change ||| change	count=1
function_arg	[function_1] right-margin property ||| [arg_2] [function_1]	count=2
arg	pred and ||| pred	count=1
function_arg	[function_1] function ||| [arg_2] [function_1]	count=3
function_arg	t if [arg_2] ||| [function_1] [arg_2]	count=1
function	this variable ||| up	count=2
function	should not [function_2] ||| [function_2] [function_1]	count=2
function_arg	text conversion [arg_2] ||| [arg_2] [function_1]	count=1
function	the ||| mark	count=2
arg	value of property prop ||| prop	count=1
function	eval-expression and thus indirectly ||| eval expression print	count=1
function	justification style to ||| justification	count=1
function	returns t if a ||| p	count=3
function	timestamp ||| posn timestamp	count=1
function	index of the ||| index	count=1
arg	this function defines ||| docstring interactive	count=1
module	displaying several frames and ||| 28	count=1
function	function sets ||| set marker	count=1
function	of ||| pop	count=2
function	accessible portion ||| buffer	count=1
function	file name nil otherwise ||| file name	count=1
arg	sig and [arg_2] ||| [arg_1] [arg_2]	count=1
function	the host ||| save	count=1
function	creating a new frame ||| frame	count=1
function_arg	the face [arg_2] ||| [arg_2] [function_1]	count=2
function	the contents ||| contents	count=1
function	file ||| auto save list	count=1
arg	[arg_1] props see ||| [arg_1] [arg_2]	count=1
module	ending position ||| 7.13	count=1
function	greater than 0 point-min ||| buffer end	count=1
arg	for command ||| command position	count=1
module	the ||| 8	count=8
function	modification times ||| file times	count=1
module	a description ||| 21.2	count=1
arg	[arg_1] end ||| [arg_1] [arg_2]	count=29
function	in the ||| bindat ip to	count=1
arg	the first form ||| form	count=1
function	already set it non-nil ||| save list	count=1
arg	returns number-or-marker ||| number-or-marker	count=1
module	ring ||| 6 8	count=1
function	nonblank ||| current	count=1
arg	in the prop ||| prop	count=1
function	[function_1] words ||| [function_1] [function_2]	count=4
function	the minibuffer a ||| minibuffer	count=1
module	string of ||| 7	count=1
function	creates a new ||| make	count=1
module	the elements ||| 6 5	count=1
function	[function] of ||| notifications get [function]	count=2
module	the value ||| 30 7	count=1
function	function expands the wildcard ||| expand wildcards	count=1
module	floating point ||| 3 5	count=1
function_arg	[function_1] bitmap bitmap ||| [arg_2] [function_1]	count=6
arg	this macro defines ||| docstring	count=1
function_arg	context [arg_2] ||| [arg_2] [function_1]	count=1
function	minibuffer contents [function] ||| minibuffer complete [function]	count=3
arg	hook with properties ||| hook	count=1
module	reads your ||| 25 2	count=1
function_arg	[function_1] for current-face ||| [arg_2] [function_1]	count=2
function	of the current line ||| current	count=1
arg	returns window’s ||| window	count=1
function	this option ||| base	count=1
function	emacs reads your ||| list file	count=1
function	this function removes ||| remap remove	count=1
function	the truename ||| truename	count=1
function	visible on the screen ||| visible in	count=1
module	this function sends ||| 8	count=1
function	address of [function_2] ||| [function_2] mail [function_1]	count=1
function	calls its argument function ||| map char	count=1
function	window at [function_2] ||| [function_2] [function_1]	count=3
arg	[arg_1] executes body ||| [arg_1] [arg_2]	count=2
function_arg	bool vectors [arg_2] ||| [arg_2] [function_1]	count=1
function	this ||| file	count=1
arg	with prompt and ||| prompt initial	count=1
arg	in the [arg] ||| [arg]	count=3
module	file it initializes auto-save-list-file-name ||| 2	count=1
function	by making new frames ||| pop up frames	count=1
function	is the maximum size ||| ring max	count=1
function	function returns window’s value ||| window	count=1
arg	sig and [arg_2] ||| [arg_2] [arg_1]	count=1
function	the rehash ||| table rehash	count=1
arg	text from beg ||| beg	count=1
function	the coding ||| set terminal coding	count=1
module	split ||| 14	count=1
arg	a replacement operation ||| replacement	count=1
arg	[arg_1] to stream ||| [arg_2] [arg_1]	count=4
function	auto-save-list-file-name if you have ||| auto save list	count=1
arg	lists ||| lists	count=7
function	the current ||| justify current	count=1
function_arg	displays the [arg_2] ||| [function_1] other window buffer-or-name [arg_2]	count=1
function	the user [function_2] ||| [function_1] real login [function_2]	count=1
function	next-single-char-property-change ||| single	count=1
arg	[arg_1] inverse-video-p ||| [arg_2] [arg_1]	count=1
function	ending ||| event	count=1
function	to its buffer ||| to buffer	count=1
function_arg	[function_1] parameter ||| [function_1] [arg_2]	count=3
function	calls its argument function ||| map char table	count=1
module	host name and ||| 25 2	count=1
arg	finds and opens ||| missing-ok nomessage nosuffix must-suffix	count=1
function	file it ||| save list file	count=1
arg	start within ||| start	count=1
module	the buffer associated ||| 36 9.1	count=1
arg	form ||| form	count=1
function	the remapping for ||| command remapping	count=1
function	after emacs reads ||| auto	count=1
arg	newdef ||| newdef	count=1
function	of regular expressions ||| regexps	count=1
function_arg	[function_1] [arg_2] ||| [function_1] pos [arg_2]	count=3
function	tabulated list buffer ||| tabulated list init	count=1
function	edebug tests coverage ||| edebug test coverage	count=1
function	maximum size ||| ring max	count=1
function	type of ||| type	count=1
arg	according to the current ||| no-remap position	count=1
function	contents of extra ||| char table extra	count=1
module	and return that ||| 6 8	count=1
function	[function] buffer buffer-or-name ||| buffer enable [function]	count=1
function_arg	[function_1] the function ||| [arg_2] [function_1]	count=3
arg	makes window display buffer-or-name ||| window buffer-or-name keep-margins	count=1
module	string or vector constant ||| 21	count=1
function	returns the ending ||| end	count=1
function	that ||| map char	count=1
function_arg	[function_1] number number ||| [function_1] name [arg_2]	count=1
arg	thread ||| &optional	count=1
module	if the value of ||| 27 14	count=2
module	is the basic ||| 5	count=1
function	to its individual fill ||| fill individual paragraphs	count=1
module	that has a non-nil ||| 6	count=2
function	permissions ||| modes	count=2
function	exit status of process ||| process exit status	count=1
function	function inserts the abbrev ||| insert	count=1
function	key ||| key binding	count=1
arg	from ||| limit	count=1
function	moves window’s bottom edge ||| edge	count=1
function	of ||| seconds	count=1
function	if the value of ||| up	count=2
function	auto-save-list-file-name if you have ||| list	count=1
function	key ||| kbd	count=1
function	[function] server on ||| [function] server version	count=3
arg	that symbol ||| symbol	count=1
arg	value to the ||| value	count=1
arg	window to [arg_2] ||| [arg_2] [arg_1]	count=1
function	is greater than 0 ||| buffer end	count=1
function	after emacs reads your ||| auto save	count=1
module	default ||| 11 10.3	count=1
function	no change ||| change	count=3
function	remapping for ||| remapping	count=1
function	tries to restore ||| restore	count=1
function	this function reads an ||| read	count=1
function	inserts the [function_2] ||| [function_1] [function_2]	count=1
function	of bool vectors a ||| bool vector intersection	count=1
arg	for key in keymap ||| keymap key	count=1
arg	list each ||| list	count=1
function	expressions ||| test	count=1
function_arg	[function_1] to binding ||| [function_1] set key key [arg_2]	count=3
function	this function ||| format	count=1
function	function specifies a pair ||| pair	count=1
function	function stores value ||| char code	count=1
arg	according ||| no-remap position	count=1
function	fewer than the ||| partial	count=1
function_arg	start [arg_2] ||| [arg_2] [function_1]	count=4
function	new frame ||| buffer other frame	count=2
function	signal sigtstp ||| stop process	count=1
arg	this command ||| parents	count=1
arg	props ||| props	count=1
arg	valid position in object ||| prop object limit	count=1
arg	obarray has no ||| name obarray	count=1
module	this ||| 24 3	count=1
module	is non-nil that means ||| 27 14	count=1
function	match ||| string match	count=1
arg	[arg_1] it ||| [arg_2] [arg_1]	count=2
function	has a ||| char	count=1
module	[module_1] match ||| [module_1] [module_2]	count=1
function	visible on the ||| pos visible	count=1
function	you have not already ||| save list	count=1
arg	position and ||| position	count=1
function	the total [function_2] ||| [function_1] [function_2]	count=2
arg	that start ||| start	count=1
function_arg	command deletes [arg_2] ||| [arg_2] [function_1]	count=1
arg	arguments rather than a ||| arguments	count=1
module	network connection or server ||| 36	count=1
function	the character of ||| char	count=1
function	in bool [function_2] ||| [function_1] [function_2]	count=1
function	returns a frame ||| current frame	count=1
function	the change ||| change	count=1
function	of attributes of file ||| attributes	count=1
function_arg	[function_1] text in ||| [function_1] string string [arg_2]	count=3
arg	after the binding for ||| binding	count=1
function	focus when the user ||| focus	count=1
module	auto-save-list-file-name if you ||| 2	count=1
arg	the prop ||| prop	count=2
function	variable ||| help	count=1
function	pad ||| pad	count=2
module	sequence ||| 21 1	count=2
arg	the cyclic ordering ||| minibuf all-frames	count=2
module	the current buffer so ||| 29	count=1
module	configuration of [module] and ||| [module]	count=1
arg	[arg_1] to face ||| [arg_1] [arg_2]	count=1
function	inserts the contents of ||| insert file contents	count=1
function	valid case [function_2] ||| [function_1] [function_2]	count=1
function	text as xml ||| parse xml region	count=2
function_arg	the significand sig ||| ldexp sig	count=1
module	host name ||| 2	count=1
function	symbolic [function_2] ||| [function_2] [function_1]	count=2
function	executes the shell ||| process shell	count=1
module	t if ||| 1	count=2
arg	old with new ||| old new	count=2
arg	[arg_1] as the ||| [arg_2] [arg_1]	count=4
function	a ||| format	count=1
function	not already set ||| save list file	count=1
function	your init file it ||| save list	count=1
arg	of directories ||| path	count=1
module	an alist of ||| 39 4	count=1
arg	the character old-char with ||| old-char	count=1
function	by choosing ||| use some	count=1
module	several frames and ||| 28 23	count=1
function	is allowed to ||| pop	count=1
function	replaces the buffer text ||| buffer	count=1
module	events ||| 20 5	count=3
function	split s ||| s split up to	count=1
module	corresponding decoded text ||| 31	count=1
function	minimum distance between ||| minimum	count=1
function	a copy of the ||| overlay properties	count=1
arg	as #rrrgggbbb ||| convert allow-empty display	count=1
function_arg	the parameters [arg_2] ||| [arg_2] [function_1]	count=2
function	change is found ||| property change	count=3
module	function ||| 13	count=2
function	the scroll ||| frame current scroll	count=1
arg	major mode mode ||| mode	count=1
function	column value ||| column	count=1
arg	skipping over ||| character-set limit	count=1
function	indents the current ||| indent	count=1
arg	from ||| from &optional to	count=1
function	shows a list of ||| list	count=1
arg	the character char if ||| char	count=1
function	a buffer without disrupting ||| bidi string mark left	count=1
function	an alias ||| alias	count=2
function	this returns t ||| set p	count=1
function	this function returns ||| get	count=1
function	returns the capabilities ||| capabilities	count=1
module	display ||| 27 14	count=2
function	more recent history element ||| next history element	count=1
function	the height in lines ||| height	count=1
function	is nil switch-to-buffer displays ||| switch to buffer preserve window	count=1
function_arg	this function returns [function_1] [arg_2] ||| 3 4 [function_1] [arg_2]	count=1
function	the exit [function_2] ||| [function_1] [function_2]	count=4
function	insertion ||| insertion type	count=1
function	command creates a ||| make	count=1
function	comparing them [function_2] ||| [function_1] [function_2]	count=1
function	information about the network ||| network	count=1
function	is nil switch-to-buffer displays ||| switch to buffer preserve	count=1
module	contain [module] in ||| [module] 8	count=1
arg	display-table in a help ||| display-table	count=1
function	completion [function_2] ||| [function_2] [function_1]	count=3
function	currently active [function_2] ||| [function_1] [function_2]	count=1
function	font ||| face font	count=1
module	function ||| 7	count=2
arg	filename to mode ||| filename mode	count=3
function	if a given ||| alternatives	count=2
module	this function returns ||| 6 3	count=1
arg	is equivalent to filename ||| filename	count=1
function_arg	a subtype [arg_2] ||| [function_1] p type [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] char untabify [arg_2]	count=3
function	contents of the field ||| field	count=1
function	the value of ||| up	count=2
function	the reverse ||| s reverse	count=1
module	of frame [module] in ||| [module]	count=1
function	this function sends a ||| signal	count=1
function	of objects created in ||| memory use counts	count=1
function	an error ||| error	count=1
arg	[arg_1] init ||| [arg_1] [arg_2]	count=2
module	permission [module] ||| [module] 6.1	count=1
function	returns the selinux ||| file selinux	count=1
function	means display-buffer may ||| up	count=1
function_arg	abbrev table [arg_2] ||| [function_1] tabname [arg_2]	count=1
function	the number of elements ||| length	count=1
function	visibility status of ||| visible p	count=1
function_arg	[function_1] of process ||| [arg_2] [function_1]	count=13
arg	returns [arg_2] ||| [arg_2] [arg_1]	count=1
function	displays differently from the ||| differs from	count=1
arg	a pop-up menu ||| menu	count=1
arg	by providing completion ||| collection predicate require-match initial history default	count=1
function_arg	[function_1] [arg_2] a string containing the ||| [function_1] [arg_2]	count=1
function	alist of attributes of ||| attributes	count=1
function_arg	attributes of [arg_2] ||| [function_1] [arg_2]	count=3
arg	var as a collection ||| var fun	count=1
function	vector never ||| vector	count=1
function	[function_1] margin value ||| [function_1] [function_2]	count=1
function	prompt string of the ||| prompt	count=1
function	list ||| list init	count=1
module	display buffers by ||| 27	count=1
function	the help information when ||| help	count=1
function	window [function] config was ||| [function] frame	count=1
function	coding ||| coding	count=9
function	all ||| all	count=3
function	based on ||| auto save list file	count=1
module	function ||| 6 5	count=2
function	split window and return ||| split	count=1
function	eval-expression and ||| eval expression	count=1
arg	function defines ||| docstring	count=2
module	all the [module] ||| [module]	count=2
module	choose ||| 32 11	count=1
function	[function_1] remapping of ||| [function_2] [function_1]	count=6
module	the value of this ||| 27	count=2
function	set it non-nil based ||| auto	count=1
function	returns the key sequence ||| read key sequence	count=1
function	this ||| save list file	count=1
function	extra slot ||| extra slot	count=2
function	zip the two ||| zip	count=1
arg	b ||| b	count=2
function	holds an alist of ||| alist	count=1
function	function removes ||| face remap remove	count=1
arg	as separate arguments rather ||| arguments	count=1
function	[function_1] fails ||| [function_1] [function_2]	count=2
arg	element into ||| element	count=1
function	returns the actual number ||| table count	count=1
function	return the next ||| next	count=1
function	this ||| auto save list	count=1
function	number of color ||| color	count=1
function	next [function_2] ||| [function_1] [function_2]	count=4
function	the leftmost column of ||| left column	count=1
module	arguments is ||| 12 5	count=1
function_arg	[function_1] face in ||| [arg_2] [function_1]	count=5
module	in the ||| 29 4	count=1
function	query [function_2] ||| [function_1] [function_2]	count=2
function	current buffer as modified ||| set buffer modified	count=1
function	[function] including ||| [function]	count=3
function	display table of ||| window display	count=1
function	is stricter about syntax ||| libxml	count=1
module	buffers by making new ||| 27 14	count=1
function	stricter about syntax ||| libxml	count=1
arg	filename to time ||| filename time	count=3
function	len [function] it with ||| [function] left	count=1
function	or a buffer ||| or buffer	count=1
function	trigger another garbage ||| gc cons threshold	count=1
function	function warps the mouse ||| mouse	count=1
function	[function_1] types ||| [function_2] [function_1]	count=3
function_arg	displays [arg_2] ||| [function_1] other frame buffer-or-name [arg_2]	count=1
arg	elements equal to object ||| object	count=1
function	justification to use ||| default justification	count=1
arg	of event ||| event	count=1
module	non-nil based on this ||| 25 2	count=1
arg	map for key ||| map key	count=1
function	live [function] which has ||| [function] live p	count=1
function_arg	extra slot [arg_2] ||| [arg_2] [function_1]	count=6
function	inserts the contents ||| format insert file	count=1
function_arg	[function_1] [arg_2] to expansion and call ||| [function_1] abbrev [arg_2]	count=2
function	[function_1] property ||| face [function_1] [function_2]	count=1
module	[module] dumps ||| e [module]	count=1
function	new ||| buffer other	count=1
function	all expressions ||| test	count=1
function	configurations ||| configurations	count=1
module	variables lists ||| 11 11	count=1
function	that ||| recursive	count=1
function_arg	subtype [arg_2] ||| [arg_2] [function_1]	count=1
function	of the syntax ||| syntax	count=1
function	this function displays the ||| switch to buffer	count=2
module	allowed ||| 14	count=1
arg	up to n ||| n	count=1
function	specify margins around ||| buffer margins	count=1
function_arg	[function_1] value of ||| [arg_2] [function_1]	count=1
function	[function_1] evaluates it ||| [function_2] [function_1]	count=8
module	constant ||| 1	count=2
function	name for [function_2] ||| [function_2] [function_1]	count=3
module	in ||| 27	count=3
function	filename ||| file name	count=1
function	buffer’s [function_2] ||| describe [function_1] [function_2]	count=2
function	the tool [function_2] ||| [function_2] [function_1]	count=1
function	all the elements of ||| vconcat	count=1
function	subtype ||| subtype	count=1
module	the falsehood ||| 10 3	count=1
module	a new window for ||| 27	count=1
function	it initializes auto-save-list-file-name ||| list	count=1
module	a string of ||| 7	count=1
function	index of the first ||| elem index	count=1
function	of the object ||| object	count=2
arg	of key in keymap ||| keymap key	count=1
function	already set it non-nil ||| auto	count=1
module	encoding ||| 32 10.8	count=2
function_arg	extra slot [arg_2] ||| [function_1] char-table [arg_2]	count=4
module	emacs ||| 38 4	count=1
function	for the text ||| set text	count=1
function	child process ||| child p	count=1
function	local ||| hack local	count=1
module	coverage testing ||| 17	count=1
function	command inserts ||| insert file	count=1
function	fontset according ||| fontset	count=1
module	existing ||| 27 14	count=2
function	frame number for ||| frame	count=1
function	based on ||| auto save list	count=1
arg	regular expression matching ||| regexp limit noerror repeat	count=1
arg	address to address ||| address	count=1
arg	[arg_1] returns value ||| [arg_1] [arg_2]	count=1
function	a frame to its ||| frame to buffer	count=1
arg	[arg_1] underline ||| [arg_2] [arg_1]	count=3
module	each ||| 6 6	count=2
function	the text of window’s ||| window text	count=1
function	in [function_2] ||| [function_2] [function_1]	count=4
module	returns window’s ||| 27	count=1
function	replacement ||| replace match	count=1
function	previous ||| previous	count=1
function	this function defines an ||| define	count=1
function	the buffer text with ||| revert buffer	count=1
function	is at the beginning ||| bolp	count=1
arg	between from [arg_2] ||| [arg_2] [arg_1]	count=1
function	to keep indicating the ||| delay	count=1
function	the contents of extra ||| char table extra	count=1
module	display-buffer is allowed to ||| 27	count=1
function	ending position of ||| end	count=1
function_arg	text [arg_2] ||| [function_1] button beg end [arg_2]	count=1
function	macro defines a ||| define	count=1
function	image [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] expression ||| [arg_2] [arg_1]	count=3
function	[function_1] description of ||| [function_1] abbrev table [function_2]	count=1
function	other than the selected ||| buffer other	count=1
function	fontset according to the ||| create fontset from fontset	count=1
function	init file it initializes ||| save	count=1
function	list -remove ||| separate	count=1
function	this returns ||| end	count=1
function	execution mode for ||| edebug initial mode	count=1
function_arg	[function_1] in table ||| [function_1] count [arg_2]	count=1
arg	a non-nil ||| function	count=1
function	of the buffer ||| of buffer	count=1
arg	of process-name as a ||| process-name	count=1
function	of syntax class characters ||| skip syntax	count=1
module	[module] with ||| [module]	count=1
module	in the current ||| 4	count=1
function	a window at the ||| buffer at	count=1
module	the host name and ||| 25	count=1
function	if the value ||| pop	count=2
arg	property ||| property	count=4
arg	if object is ||| object	count=3
function_arg	the region [arg_2] ||| [arg_2] [function_1]	count=7
function	this function sets the ||| set	count=7
function	the accessible portion of ||| point min	count=1
function	[function_1] margin ||| [function_2] [function_1]	count=6
function	[function_1] mode for ||| [function_1] [function_2]	count=4
function	sets of highest priority ||| charset	count=2
function	this command inserts the ||| insert	count=1
arg	tree and ||| folder init-value tree	count=1
function	new window ||| pop up	count=2
function	specifies which warning ||| warning	count=1
module	to process ||| 36 8	count=1
module	this function ||| 6	count=4
module	for each element of ||| 6	count=2
arg	add value ||| value	count=1
module	sends ||| 36 8	count=2
function_arg	[function_1] regexp in ||| [arg_2] [function_1]	count=1
function	not already set it ||| auto save list	count=1
module	returns a ||| 6 5	count=1
function	zip the two lists ||| zip with	count=1
function	it non-nil based on ||| auto save list file	count=1
module	reading ||| 19 6.4	count=1
arg	sends a signal to ||| process signal	count=1
arg	of regexp ||| regexp	count=1
function	the text [function_2] ||| [function_1] [function_2]	count=2
module	this function converts ||| 1	count=1
function	function sets ||| set process plist	count=1
function	ending position of ||| event	count=1
function	a non-nil value ||| map char	count=1
arg	by sending the signal ||| current-group	count=1
arg	separator ||| separator s	count=1
function	defines an ||| define	count=1
function	and process id ||| auto save list	count=1
function	restore the state ||| quit restore	count=1
function	[function_1] cells ||| [function_2] [function_1]	count=4
function	[function_1] the base ||| [function_1] [function_2]	count=2
function	returns window’s value ||| parameter	count=1
arg	t if regexp ||| regexp limit greedy	count=1
arg	it ||| initial history	count=1
function	the controlling terminal ||| controlling	count=1
function	about the network ||| network	count=1
function	[function] at ||| [function]	count=1
function	point a description ||| description	count=1
function	initializes auto-save-list-file-name if ||| auto	count=1
function	the frame ||| frame	count=2
module	key sequence ||| 21 1	count=1
arg	or macro named function ||| function	count=1
function	and the text conversion ||| text conversion	count=1
function	non-nil ||| edebug	count=2
function	buffer by choosing ||| buffer use some	count=1
function	it ||| list file	count=2
function	and the rest to ||| s capitalize	count=1
function_arg	indices of [arg_2] ||| [arg_2] [function_1]	count=8
function_arg	[function_1] [arg_2] ||| [function_1] from invisibility spec [arg_2]	count=2
module	minibuffer and ||| 19	count=2
function	always makes backup ||| backup	count=1
function	string of syntax ||| syntax	count=1
module	current line ||| 31	count=1
function	the width in columns ||| width	count=1
function	[function_1] file to ||| [function_2] [function_1]	count=4
arg	[arg_1] equal ||| [arg_2] [arg_1]	count=8
function	sends ||| send	count=1
arg	regexp ||| regexp s &optional start end	count=1
function	size of [function_2] ||| [function_2] pixel [function_1]	count=3
module	yank-handler [module] property as ||| [module] 8.3	count=1
arg	spec ||| spec	count=3
arg	to expand to expansion [arg_1] [arg_2] ||| expansion [arg_1] [arg_2]	count=4
function	the startup ||| startup	count=2
module	a line ||| 31 1	count=1
function_arg	fieldth [arg_2] ||| [arg_2] [function_1]	count=4
function	attributes of ||| all attributes	count=1
function	window ||| posn window	count=1
function	have not already set ||| file	count=1
function	is none ||| current	count=1
function	this function returns ||| parameter	count=1
function	host name and process ||| save list file	count=1
function	the query flag of ||| query on exit	count=1
function	you ||| save list	count=1
module	warning ||| 37 5.3	count=1
arg	[arg_1] of process ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] feature ||| [function_1] [arg_2]	count=1
arg	[arg_1] face ||| [arg_2] [arg_1]	count=1
function	[function] except ||| posix [function]	count=1
function	emacs reads your ||| save list file	count=1
function_arg	face [arg_2] ||| [function_1] [arg_2]	count=2
function	extra slot ||| table extra slot	count=2
function	color specification either ||| color	count=1
arg	filename into the ||| filename visit beg end	count=1
module	function sends a ||| 36	count=1
module	a list of ||| 19 6.6	count=1
function	function executes the shell ||| shell	count=1
module	frames in ||| 28	count=1
module	may display buffers by ||| 27	count=1
function	of the emacs-recognized extended ||| extended	count=1
function	cells the screen ||| cells	count=1
module	current active keymaps ||| 21	count=1
function	than 0 point-min otherwise ||| buffer	count=1
function	initializes ||| auto save	count=1
function	set it non-nil based ||| save list file	count=1
arg	those aspects differ ||| config1 config2	count=1
function	indices of ||| find indices	count=1
function	characters whose syntax classes ||| skip syntax backward	count=1
function	end [function] ||| [function] end double	count=1
arg	specified by [arg_2] ||| [arg_2] [arg_1]	count=12
function	of activations of ||| minibuffer	count=1
arg	list in lists ||| lists	count=1
arg	this function returns t [arg_1] [arg_2] have equal components and ||| 2 7 equal [arg_1] [arg_2]	count=1
function	non-nil that ||| pop	count=1
function	an alist of frame ||| alist	count=1
function	returns the rehash threshold ||| rehash threshold	count=1
arg	object rather than nil ||| prop object	count=1
function_arg	[function_1] dirname to ||| [arg_2] [function_1]	count=2
module	prompting with ||| 6.5	count=1
function	buffer text ||| revert buffer	count=1
function	of extra ||| extra	count=1
module	function returns ||| 12.12	count=1
function	current insertion [function_2] ||| [function_2] [function_1]	count=2
function	puts ||| put	count=2
arg	char and documentation docstring ||| char docstring	count=1
function	the host name and ||| auto save list file	count=1
function	query flag ||| process query on exit flag	count=2
function	of color [function_2] ||| [function_1] [function_2]	count=4
function	next-single-property-change ||| next single char	count=1
module	makes the result a ||| 32 1	count=1
function	titleized words ||| s titleized words	count=2
function	print-level used by eval-expression ||| eval expression print	count=1
module	and the emacs ||| 30 7	count=1
arg	to address ||| process address	count=1
function	argument function for ||| table	count=1
function	function sets the debug-on-exit ||| backtrace debug	count=1
arg	command command synchronously ||| command infile destination display	count=1
function	function returns window’s ||| parameter	count=1
function	[function_1] shell command ||| [function_2] [function_1]	count=3
function	the beginning of ||| beginning of	count=2
function_arg	[function_1] time ||| [arg_2] [function_1]	count=4
function_arg	[function_1] frame ||| [function_1] color [arg_2]	count=2
function	function reads the first ||| read	count=1
module	saved ||| 24 2	count=1
function	[function_1] fill prefix ||| [function_2] [function_1]	count=6
function	the ||| pop up	count=2
function	the signal sigtstp ||| stop process	count=1
function	value of ||| pop	count=2
function	tree ||| tree	count=1
function	of [function_1] [function_2] ||| [function_1] [function_2]	count=8
function	sets the face for ||| set	count=1
module	means display-buffer ||| 27	count=1
function	of color cells ||| color cells	count=1
function_arg	zip lists together ||| zip &rest lists	count=1
arg	is negative ||| display-message	count=1
function	a list of all ||| list	count=2
module	the current ||| 31	count=1
arg	[arg_1] spec ||| [arg_2] [arg_1]	count=4
arg	in abbrev-table [arg_2] ||| [arg_1] name [arg_2]	count=2
module	thrown away at the ||| 8.6	count=1
arg	function for ||| function	count=2
module	function converts the ||| 1	count=1
module	buffer-local so that ||| 11 10.2	count=1
arg	directories given by path ||| path	count=1
function_arg	[function_1] bound to ||| [arg_2] [function_1]	count=4
function	always returns the key ||| read key	count=1
arg	separate arguments rather than ||| arguments	count=1
function	string constant ||| kbd	count=1
module	returns a ||| 28 14	count=1
function	inserts ||| format insert file	count=2
module	string of ||| 38	count=1
function	replaces ||| in string	count=1
module	returns ||| 28	count=1
module	this is the ||| 5 3	count=1
function	[function_1] lines in ||| [function_1] [function_2]	count=4
function	the buffer [function_2] ||| [function_2] [function_1]	count=2
function	is the ||| mark	count=1
function	[function] contents by ||| [function] complete	count=1
arg	parameter to value and ||| window parameter	count=1
arg	object [arg_2] ||| [arg_2] [arg_1]	count=1
function	newer ||| file newer	count=1
arg	function associates [arg_2] ||| [arg_2] [arg_1]	count=1
module	which ||| 8.6	count=1
arg	width of frame ||| frame width pretend pixelwise	count=1
module	cdr is ||| 5	count=1
function	the number of bytes ||| string bytes	count=1
function	the header ||| init header	count=1
function	font ||| find font	count=1
function	the contents of extra ||| table extra	count=1
arg	and device ||| device	count=1
arg	base [arg] to its ||| [arg]	count=1
function	string ||| mark left to right	count=1
function_arg	[function_1] count repetitions ||| [arg_2] [function_1]	count=2
function	returns the xlfd ||| font xlfd	count=1
function	ending position ||| event end	count=1
function	window to ||| up	count=1
function	to split an ||| pop up	count=1
function_arg	[function_1] from terminal ||| [arg_2] [function_1]	count=1
module	function ||| 17.1	count=1
arg	this function returns ||| count-final-newline window	count=1
function	used by eval-expression ||| eval expression	count=1
function	elements ||| length	count=1
function_arg	[function_1] function ||| 12 10.1 [function_1] place [arg_2]	count=3
arg	tables ||| tables	count=1
module	is ||| 4	count=1
arg	it ||| initial history default inherit-input-method	count=1
function_arg	property list [arg_2] ||| [function_1] [arg_2]	count=1
module	already ||| 2	count=1
arg	object rather ||| prop object	count=1
function	file it ||| auto save	count=1
module	network connection or ||| 36	count=1
function_arg	[function_1] symbol’s property ||| [function_1] [arg_2]	count=2
function_arg	made from vec ||| from vector vec	count=1
function	[function_1] history ||| [function_1] [function_2]	count=1
arg	value rgb a list ||| rgb frame	count=1
function	function searches [function] ||| re search [function]	count=6
function	new abbrev [function] containing the ||| abbrev [function]	count=1
function	file filename [function] ||| [function] file read only	count=3
function	prefixes specified ||| prefixes	count=1
arg	[arg_1] abbrev-table ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] charset to ||| [function_1] [arg_2]	count=1
arg	attribute attribute returns value1 ||| attribute value1	count=1
function	window the window selected ||| selected	count=1
function_arg	this macro [function_1] [arg_2] stored in ||| [function_1] [arg_2]	count=4
function_arg	first [arg_2] ||| [function_1] [arg_2]	count=1
function	and ||| auto save list file	count=1
arg	window to table ||| window table	count=3
function	days ||| format seconds	count=2
module	this function returns a ||| 10.3	count=1
function	can be loaded ||| available p	count=1
function	year ||| year	count=1
function	[function_1] is ||| [function_2] [function_1]	count=6
function	color cells the ||| display color cells	count=2
function	[function_1] name prompting ||| [function_2] [function_1]	count=4
arg	[arg_1] args ||| [arg_2] [arg_1]	count=3
function	width in pixels ||| width	count=1
function	process ||| file	count=1
function	remote ||| remote file name	count=1
function	the debug-on-exit flag of ||| backtrace debug	count=1
function_arg	help command [arg_2] ||| [arg_2] [function_1]	count=3
function	dumps the [function] into ||| dump [function]	count=1
arg	regexp in string ||| regexp string &optional	count=1
arg	[arg] by inserting ||| [arg] element	count=3
function	in a window below ||| buffer below	count=1
arg	value of ||| value	count=1
function_arg	encapsulating [arg_2] ||| [function_1] [arg_2]	count=4
function	an existing window ||| pop up	count=1
function	an odd number ||| logxor	count=1
function_arg	buffer in [arg_2] ||| [arg_2] [function_1]	count=1
module	of frame [module] in pixels ||| [module]	count=1
function_arg	[function_1] command command ||| [function_1] [arg_2]	count=4
function	the pid ||| process id	count=1
function	variable ||| pop up	count=2
function	is matched by ||| re	count=1
function	text properties ||| properties	count=2
function_arg	[function_1] propname ||| [arg_2] [function_1]	count=3
function	[function_1] the selected ||| [function_1] [function_2]	count=4
function	string in ||| bindat ip to string	count=1
arg	if alist has a ||| buffer alist	count=1
arg	face [arg_2] ||| [arg_1] [arg_2]	count=2
module	this function returns a ||| 35 1	count=1
module	this function returns ||| 8.1	count=1
function	exit status of ||| exit status	count=1
function	the character of ||| glyph char	count=1
function_arg	replaces [arg_2] ||| [function_1] regexp [arg_2]	count=1
arg	scans forward count ||| count	count=1
arg	pred item is non-nil ||| pred	count=1
module	contents are accessible ||| 29	count=1
module	contents are ||| 29	count=1
function	by making ||| pop	count=1
function	the standard case ||| standard case	count=2
function	less than time value ||| time less	count=1
function	results ||| results	count=1
arg	matching with font-spec ||| font-spec frame	count=1
arg	[arg_1] body ||| [arg_2] [arg_1]	count=2
module	0 point-min otherwise ||| 29 1	count=1
function	returns a copy ||| copy	count=3
arg	it through the ||| &rest more	count=1
arg	function fn ||| fn &rest	count=1
function	context of the file ||| context	count=1
arg	change in the prop ||| pos prop object limit	count=1
function	the coding system to ||| terminal coding system	count=1
function	symbolic ||| file modes symbolic	count=1
arg	old-char with the ||| old-char	count=1
function	for the text between ||| text properties	count=1
arg	the list [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] current-name ||| [function_1] obsolete-name [arg_2]	count=2
arg	function returns t if [arg_1] [arg_2] have equal components and ||| [arg_1] [arg_2]	count=2
function	a new ||| buffer other	count=1
arg	lists using function ||| &rest lists	count=1
function	address of [function_2] ||| [function_2] [function_1]	count=1
function	x ||| posn at x y	count=1
arg	the only [arg_2] ||| [arg_1] [arg_2]	count=4
arg	window frame-or-window which defaults ||| frame-or-window whole	count=1
function	beginning ||| beginning	count=4
arg	for command a symbol ||| command position	count=1
function	on ||| auto save list file	count=1
function_arg	[function_1] to value ||| [arg_2] [function_1]	count=2
arg	equivalent to filename ||| filename	count=1
function	the process named ||| get process	count=1
function	of bool vectors ||| bool vector	count=2
function	this ||| signal process	count=2
function	specify the dimensions ||| dimensions alist	count=1
arg	index from to ||| from &optional to	count=1
function	a window below the ||| buffer below	count=1
arg	alist ||| buffer alist	count=1
module	function returns t ||| 1	count=2
arg	in the cyclic ||| minibuf all-frames	count=1
module	the list of ||| 3	count=1
function	function searches [function] ||| word search [function]	count=3
function	init file ||| auto save	count=1
function_arg	[function_1] for regexp ||| [arg_2] [function_1]	count=1
function	it initializes auto-save-list-file-name ||| save list	count=1
module	minibuffer ||| 13	count=1
function	of bool vectors ||| bool	count=2
function	vector containing all the ||| vconcat	count=1
module	and return ||| dash	count=1
module	in [module] ||| [module] 6	count=1
function	function returns non-nil if ||| p	count=3
arg	of unary predicates preds ||| preds	count=1
function	lets you compare two ||| compare buffer	count=1
arg	var as ||| var	count=1
arg	[arg_1] end to ||| [arg_1] [arg_2]	count=1
function	not already set it ||| save	count=1
function	your ||| auto save list	count=1
function	another name for string< ||| string	count=1
module	tests ||| 10	count=1
function	function calls its ||| table	count=1
function	auto-save-list-file-name if ||| auto save list file	count=1
function	initializes auto-save-list-file-name ||| list file	count=1
function	previous buffer in ||| prev buffer	count=2
module	default 1 balanced groups ||| 29 2.6	count=1
arg	order ||| order	count=1
function	current buffer if ||| buffer	count=1
function	window ||| window	count=14
function	overlay ||| overlay	count=3
function_arg	flag of [arg_2] ||| [function_1] [arg_2]	count=1
function	[function] by ||| [function] item	count=1
function	reads your ||| auto save	count=1
function	line number ||| line number	count=2
function	justification to use for ||| justification	count=1
module	function ||| 20 13	count=1
function	the display-start position of ||| window start	count=1
function	inserts a portion ||| insert	count=1
function	an alias for the ||| alias	count=1
function	and gives it ||| setq	count=1
module	is a list of ||| 12 5	count=1
function	of all expressions ||| test	count=1
arg	olddef with newdef ||| newdef	count=1
function	displaying in ||| windows	count=1
function	allowed to split an ||| pop	count=1
arg	the buffer in ||| buffer	count=1
function	[function_1] keymap ||| [function_2] [function_1]	count=5
module	proper ||| 31 11	count=1
function	the pid of ||| process id	count=1
function	the visibility status of ||| frame visible p	count=1
function	creates and [function_2] ||| [function_1] [function_2]	count=1
module	significand ||| 3 2	count=1
function	for each element ||| map char	count=1
function	plist of ||| plist	count=1
arg	defines ||| docstring interactive	count=1
function	match ||| match	count=1
arg	the falsehood of condition ||| condition	count=1
function	after emacs reads ||| list	count=1
module	function returns ||| 1	count=3
function	you ||| auto save list	count=1
function	is signaled ||| debug on	count=2
function	as the coding system ||| terminal coding system	count=1
module	on this ||| 25 2	count=1
function	the ending position ||| event end	count=1
arg	command fills each ||| justify	count=1
arg	finds [arg_2] ||| [arg_1] [arg_2]	count=3
function	indices of all elements ||| indices	count=2
arg	for parameter ||| parameter	count=1
arg	with initial value value ||| value	count=1
module	redisplay ||| 37 2	count=1
arg	[arg_1] event after ||| [arg_2] [arg_1]	count=2
function	system name or ||| system	count=1
arg	[arg_1] prefix ||| [arg_2] [arg_1]	count=2
function	returns the byte ||| get byte	count=1
function	nil ||| null	count=1
function	specified by [function] ||| [function] auto hide	count=1
arg	apply fn ||| fn	count=1
function	marker that represents ||| marker	count=1
function_arg	[function_1] b ||| [arg_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=730
arg	display-table ||| display-table	count=3
function	elements that are ||| population	count=1
function	reads [function_2] ||| [function_1] [function_2]	count=4
function	of the results ||| tree mapreduce	count=1
function	specifies a pair ||| syntax pair	count=1
function	prefixes specified by a ||| prefixes	count=1
module	debugger each ||| 17 1.3	count=1
function	completes [function] contents by ||| [function] complete	count=1
function	display-buffer is allowed ||| pop up	count=1
module	frames and several different ||| 28	count=1
module	names that ||| 24 9	count=1
function	a non-nil ||| map	count=1
module	regular expression ||| 33	count=3
function	attributes of ||| face all attributes	count=1
module	init file it ||| 25	count=1
module	that ||| 29	count=1
module	displaying frame which ||| 37	count=1
arg	function defines ||| docstring props	count=2
module	of activations of ||| 19	count=1
arg	specified by ||| norecord	count=2
module	it initializes auto-save-list-file-name if ||| 25 2	count=1
function	initializes auto-save-list-file-name ||| save	count=1
function	you have ||| auto save list	count=1
arg	function returns x ||| x	count=1
function	file ||| save file	count=1
function	change ||| property change	count=4
module	function in ||| 27	count=1
module	emacs ||| 38 1.1	count=2
function	expressions ||| edebug	count=1
arg	parameter parameter [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	deletes [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] filename2 ||| [arg_2] [function_1]	count=3
function	reads your init ||| auto save list	count=1
function_arg	[function_1] face ||| [function_1] set base [arg_2]	count=1
function	position of ||| position	count=1
module	returns window’s value for ||| 27 25	count=1
module	after emacs ||| 2	count=1
function	debug-on-error ||| on error	count=1
function	[function_1] for void ||| [function_2] text area [function_1]	count=2
arg	[arg_1] of list ||| [arg_2] [arg_1]	count=1
arg	[arg_1] end on ||| [arg_1] [arg_2]	count=1
arg	string ||| process string	count=1
arg	a string ||| format-string	count=1
function	its ||| table	count=1
function	tests coverage of ||| coverage	count=1
arg	lists using ||| lists	count=1
function	buffer without disrupting the ||| bidi	count=1
module	expressions debugged ||| 17 2.16	count=1
function	a string [function_2] ||| [function_2] [function_1]	count=8
function	auto-save-list-file-name if you ||| save list file	count=1
function	buffer boundaries and ||| buffer boundaries	count=2
arg	feature is now loaded ||| feature	count=1
function	[function] numbers of ||| x server [function]	count=3
function	returns the parent of ||| table parent	count=1
arg	in list that is ||| list	count=1
arg	window to ||| window	count=1
module	object that is being ||| 37 12.12	count=1
function	a key sequence a ||| kbd	count=1
function	[function_1] [function_2] if flag is non-nil ||| [function_1] [function_2] p flag	count=4
function_arg	removes the [arg_2] ||| [function_1] from invisibility spec [arg_2]	count=1
function	of years ||| seconds	count=1
function	property list of ||| symbol plist	count=1
function	based ||| auto save list file	count=1
function	site-customization [function_2] ||| [function_1] [function_2]	count=4
function	a non-nil ||| char	count=1
module	returns ||| 29	count=1
arg	before point and suffix ||| predicate suffix	count=1
arg	of keymap to ||| keymap	count=1
function	split s up to ||| split up	count=1
function	list specifying ||| window prev buffers	count=1
arg	ewoc-refresh except [arg] in ||| ewoc [arg]	count=1
function	tests coverage of all ||| edebug test coverage	count=1
arg	respectively at the beginning ||| ewoc	count=1
function	that ||| up	count=1
function	reads the ||| hack dir local variables	count=1
function	visibility status ||| frame visible p	count=1
arg	end according ||| end	count=2
module	the ending position ||| 20 7.13	count=1
function_arg	a serial [arg_2] ||| [arg_2] [function_1]	count=1
function	before ||| before	count=2
module	line which is ||| 17.1	count=1
function_arg	string [arg_2] ||| [function_1] [arg_2]	count=4
module	internal window [module] window ||| [module]	count=1
module	each element ||| 6 6	count=1
function	the query flag of ||| query on exit flag	count=2
arg	[arg] items ||| [arg]	count=2
function	buffer as auto-saved ||| set buffer auto saved	count=1
arg	type of marker marker ||| marker	count=1
function	[function_1] from ||| [function_2] [function_1]	count=6
arg	command command a symbol ||| command	count=1
arg	the variable custom-theme-load-path ||| no-confirm no-enable	count=1
module	input ||| 20	count=1
function	inserts before ||| insert	count=1
arg	keymap to [arg_2] ||| [arg_2] [arg_1]	count=1
function	shell command ||| shell command	count=2
module	for commands that choose ||| 32 11	count=1
function	display-start position of ||| window start	count=1
function	color cells ||| color cells	count=1
module	beginning of an ||| 4	count=1
arg	replacement operation on ||| replacement	count=1
arg	separate list ||| list	count=1
function	to each element ||| from	count=1
function_arg	[function_1] that position ||| [function_1] [arg_2]	count=3
module	[module] to ||| [module]	count=7
arg	for current-face and also ||| current-face	count=1
function	for each ||| map char	count=1
function	the local [function] list of ||| [function]	count=1
function	function returns the indentation ||| indentation	count=1
module	function returns the ||| 32 8	count=1
module	this function returns the ||| 8	count=2
arg	from to index to ||| from &optional to	count=1
module	of the ||| 4	count=6
function	default file [function_2] ||| [function_2] [function_1]	count=6
arg	directories ||| path	count=1
arg	of [arg] ||| [arg]	count=1
function	and fewer than ||| partial	count=1
function	its ||| map	count=1
arg	frame ||| frame norecord	count=1
module	is first activated ||| 2.16	count=1
function	returns the subtype symbol ||| char table subtype	count=1
arg	the minibuffer prompting with ||| default inhibit-null	count=1
arg	count screen lines ||| count	count=1
function	buffer using text ||| text	count=1
function	of syntax class characters ||| syntax forward	count=1
function	specified text [function] the text ||| remove text [function]	count=1
module	input method [module] ||| [module]	count=1
module	activations of ||| 19	count=1
arg	end ||| end highest	count=1
module	you have not already ||| 2	count=1
function_arg	buffers to [arg_2] ||| [arg_2] [function_1]	count=1
function	[function] for creating ||| small temporary [function]	count=3
function_arg	type [arg_2] ||| [arg_2] [function_1]	count=1
module	of the ||| 19	count=1
function	inserts in the current ||| insert	count=1
function	to ||| reduce from	count=1
function	[function_1] in the ||| [function_2] [function_1]	count=11
function	reads abbrev definitions from ||| read abbrev	count=1
arg	of key in keymap ||| keymap key accept-defaults	count=1
function	tab in most editing ||| indent for tab	count=1
module	frame [module] in pixels ||| [module]	count=1
function	the file ||| make auto save file	count=1
arg	file filename but ||| filename wildcards	count=2
module	[module] multibyte ||| [module]	count=3
arg	the width [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] window typically ||| [function_1] [function_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] key [arg_2]	count=3
module	split an existing window ||| 14	count=1
function	number of lines of ||| lines	count=1
function	nondirectory ||| nondirectory	count=1
module	inserts ||| 31 21	count=1
arg	command fills each paragraph ||| justify	count=1
module	this function returns a ||| 6 5	count=1
function_arg	[function_1] marker ||| [function_1] [arg_2]	count=5
function	list for the text ||| text properties	count=1
function	bar ||| bar	count=2
module	tests ||| 10 3	count=2
arg	reading a single-character answer ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
function	reads an input ||| read input	count=2
arg	keymap of keymap to ||| keymap	count=1
function_arg	assoc except [arg_2] ||| [function_1] string [arg_2]	count=3
function	[function_1] file permissions ||| [function_2] [function_1]	count=3
function	tab in most editing ||| for tab	count=1
arg	lists the ||| lists	count=1
function	variable ||| in file name	count=1
function	next-single-property-change except ||| next single char property	count=1
function	already ||| save	count=1
function	[function_1] category table ||| [function_2] [function_1]	count=1
arg	window’s ||| window	count=1
function	that means display-buffer may ||| up	count=1
function_arg	[function_1] process-name as ||| [arg_2] [function_1]	count=2
function	is ||| buffer	count=1
function_arg	of bool [arg_2] ||| [function_1] [arg_2]	count=1
arg	respectively at the ||| ewoc	count=1
arg	the buffer specified by ||| norecord	count=2
function	at the bottom of ||| display buffer at bottom	count=1
function	“logical and” of ||| logand	count=1
arg	input events in sequence ||| sequence	count=1
function	the current buffer’s mode ||| force mode	count=1
arg	fun in place of ||| fun	count=1
module	hours etc ||| 38	count=1
function	allowed to ||| pop up	count=1
function_arg	[function_1] count ||| [function_1] char untabify [arg_2]	count=3
function	auto-save-list-file-name if ||| save	count=1
function	you can read it ||| readable	count=1
module	void ||| 28 17	count=1
module	is a list ||| 12 5	count=1
module	found at ||| 19.1	count=1
arg	that event has ||| event	count=1
function	this function stores ||| put char code	count=1
arg	to n ||| s n	count=1
function	the visibility status of ||| visible p	count=1
arg	[arg] separated by ||| [arg]	count=1
function	[function_1] wildcard ||| [function_2] [function_1]	count=3
function	table ||| table from alist	count=2
function_arg	the last [arg_2] ||| drop [function_1] [arg_2]	count=1
function	[function_1] echo ||| [function_2] [function_1]	count=4
function	for print-length and print-level ||| print length	count=1
arg	before point and suffix ||| suffix	count=1
function	the file name ||| file name	count=2
arg	[arg_1] to end ||| [arg_2] [arg_1]	count=16
function	name nil ||| name	count=1
function	[function] scan-lists ||| [function] ignore	count=3
function	this function puts ||| state put	count=1
function	emacs ||| auto save list	count=1
arg	to lines ||| lines	count=1
function	current display ||| current display	count=1
module	of the current ||| 31 17.1	count=1
function_arg	[function_1] and pushes ||| [arg_2] [function_1]	count=1
function	file it initializes ||| list	count=1
function	other than the selected ||| other	count=2
function	for each element of ||| map char	count=1
arg	of x2 ||| x2	count=1
module	of the ||| 1	count=1
function	set it non-nil ||| file	count=1
function	results of expressions ||| results	count=1
function	contents of file ||| file contents	count=1
function	seconds [function_2] ||| [function_2] sit for [function_1]	count=1
arg	defines the function or ||| docstring interactive	count=1
arg	[arg] coding ||| [arg]	count=1
function_arg	or match [arg_2] ||| [function_1] string [arg_2]	count=1
function	a directory that ||| directory	count=1
function	value of this variable ||| pop	count=2
arg	of regexp in ||| regexp s &optional start	count=1
function	minus its [function_2] ||| [function_2] [function_1]	count=1
function	object ||| posn object	count=1
arg	[arg] presumably ||| num [arg]	count=2
function	index of the current ||| current	count=1
function	auto-save-list-file-name if you ||| list	count=1
arg	resembles insert-buffer-substring except that ||| buf start end	count=1
function	the host name ||| file	count=1
function	initializes ||| save list file	count=1
function	this function expands the ||| file expand	count=1
function	system which uses ||| system change	count=1
function	[function_1] permissions ||| [function_1] [function_2]	count=10
function	matches the font ||| find font	count=1
function	obsolete ||| obsolete	count=2
arg	x and y are ||| frame x y	count=1
module	in the directory whose ||| 6.1	count=1
arg	[arg_1] record-regexp ||| [arg_1] [arg_2]	count=1
arg	process process [arg_2] ||| [arg_1] [arg_2]	count=5
module	set in ||| 8	count=1
arg	and column in position ||| position	count=1
arg	buffer object ||| object	count=4
function	beginning of ||| bolp	count=1
arg	[arg] to expand ||| [arg] name expansion hook	count=1
arg	empties out the table ||| keep-record	count=1
module	the horizontal ||| 31	count=1
arg	and object2 ||| object2	count=1
module	keymaps [module_2] ||| [module_1] [module_2]	count=8
function_arg	[function_1] n of ||| [function_1] char-table [arg_2]	count=7
arg	returns x ||| x	count=1
module	line ||| 31 1	count=1
function	but [function_2] ||| [function_1] [function_2] strings	count=1
function	the contents of ||| file contents	count=1
function	a window ||| window	count=2
function_arg	[function_1] s ||| [function_1] [arg_2]	count=3
function	of the field ||| field	count=3
function	set it ||| save list	count=1
module	floating ||| 5	count=1
function	left or ||| scroll left	count=1
function	that is matched by ||| re	count=1
arg	list equal to the ||| elem list	count=1
module	horizontal position ||| 31 17.1	count=1
module	description [module] the ||| [module] 9	count=1
module	have not already ||| 25 2	count=1
function	puts ||| window state put	count=1
function	this function ||| signal process	count=1
function	on a [function_2] ||| [function_2] [function_1]	count=1
function	value ||| map	count=1
arg	case-invariant with [arg_2] ||| [arg_2] [arg_1]	count=2
function	alist of attributes ||| all attributes	count=1
function	vector ||| vector	count=2
function	copy of ||| overlay properties	count=1
arg	face in the current ||| face	count=1
arg	filename into the current ||| filename visit beg	count=1
function	space or n ||| space	count=1
function	initial [function_2] ||| [function_2] [function_1]	count=3
function	macro [function] ||| [function]	count=3
module	frames and their ||| 28 12	count=1
arg	new [arg_2] ||| [arg_2] [arg_1]	count=2
arg	args and ||| args	count=1
function	sequence as a ||| sequence	count=1
module	position ||| 20	count=1
function	a new ||| spec	count=1
function	mouse pointer displayed ||| pointer	count=1
function	header line ||| init header	count=1
function	defines a ||| menu define	count=1
function	process ||| save list file	count=1
function	the file [function_2] ||| [function_1] [function_2]	count=5
function	window as dedicated ||| window dedicated	count=1
function	based on ||| auto save	count=1
arg	non-nil thread ||| &optional	count=1
function	entries in ||| hash	count=1
function	was selected when the ||| minibuffer selected	count=1
function_arg	using text [arg_2] ||| [arg_2] [function_1]	count=2
function	representing frame’s current window ||| current window	count=1
function	to process file-local variables ||| local variables	count=1
function	newer [function_2] ||| [function_2] [function_1]	count=2
function	this function deletes a ||| delete	count=1
function	for each element ||| table	count=1
arg	that position is ||| position	count=1
function	after emacs ||| auto save list file	count=1
function	window for displaying ||| windows	count=1
module	first ||| 31 17.1	count=2
function_arg	[function_1] [arg_2] ||| [function_1] all key [arg_2]	count=3
function	[function] system used ||| keyboard [function] system	count=3
module	buffer corresponding ||| 29 2.4	count=1
function	function returns ||| buffer	count=1
function	from [function] ||| [function] unset key	count=1
module	open existing files ||| 24	count=1
function_arg	function sets [arg_2] ||| [function_1] window [arg_2]	count=2
arg	of marker ||| marker	count=1
module	this command displays ||| 32 7	count=1
function_arg	query flag [arg_2] ||| [arg_2] [function_1]	count=4
arg	sig [arg_2] ||| [arg_1] [arg_2]	count=1
arg	using collection ||| collection	count=1
function	results of ||| results	count=1
function	minimum distance between the ||| minimum offset	count=1
function	the host name ||| auto save list file	count=1
function	like next-single-property-change except that ||| next single	count=1
arg	sequences ||| sequences	count=2
arg	new in [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	directory [arg_2] ||| [function_1] [arg_2]	count=4
function	encapsulating ||| enter	count=2
function	len [function] it ||| [function] left	count=1
function	columns to the right ||| right	count=1
arg	parser state state the ||| state	count=1
function	days hours ||| format	count=1
module	x ||| 28 22	count=1
function	overlay ||| overlay put	count=1
function	[function_1] row ||| [function_2] [function_1]	count=3
function	variable is non-nil display-buffer ||| pop up	count=1
function	than ||| buffer	count=1
module	buffer ||| 29 4	count=2
function	the same share ||| balance windows	count=1
module	making ||| 14	count=1
arg	number converted to floating ||| number	count=1
function	number of bytes ||| bytes	count=1
function	active ||| active	count=1
function_arg	[function_1] dirname ||| [function_1] [arg_2]	count=2
module	function returns the ||| 12	count=2
function	whose syntax classes ||| syntax backward	count=1
arg	according to ||| no-remap	count=1
function	network ||| network	count=2
function_arg	the definition [arg_2] ||| [function_1] keymap [arg_2]	count=1
function	sends a ||| process	count=1
function	button at ||| push button	count=1
function	fails ||| with timeout	count=1
module	have not already ||| 2	count=1
arg	seconds seconds ||| seconds	count=3
arg	[arg_1] value to ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] propname ||| [function_1] charset [arg_2]	count=1
module	debugger each time ||| 17 1.3	count=1
function_arg	the character [arg_2] ||| [arg_2] [function_1]	count=3
function	fit ||| fit	count=2
function	left or to ||| scroll left	count=1
function_arg	composed n ||| iteratefn fn n	count=1
function	of all expressions ||| edebug test	count=1
function	value ||| char	count=2
module	default 1 balanced expressions ||| 2.6	count=1
module	the first nonblank character ||| 17.1	count=1
function	frame and displays ||| frame	count=1
function_arg	image [arg_2] ||| [function_1] [arg_2]	count=1
function	returns the documentation string ||| documentation	count=2
function	[function_1] backup versions ||| [function_1] [function_2]	count=4
function	which warning [function_2] ||| [function_1] suppress log [function_2]	count=1
function	this is like next-single-property-change ||| next single char	count=1
function_arg	[function_1] handle designates ||| [function_1] [arg_2]	count=2
function	have not ||| save	count=1
function	dedicated to its ||| window dedicated	count=1
function	an ||| pop	count=1
function	window selected ||| set frame selected	count=1
function	line number in ||| line number at	count=3
function	function appends ||| append	count=1
function	the startup echo ||| startup echo	count=1
arg	negative ||| display-message	count=1
function	words of the current ||| justify current	count=1
function	[function_1] number ||| [function_2] [function_1]	count=4
function	in the usual ||| ip to	count=1
function	of bool ||| bool vector	count=2
module	a ||| 38 7	count=2
function	returns the line number ||| line number	count=1
function	a string or ||| string or	count=1
arg	charset ||| charset	count=2
function	unregisters it ||| unregister	count=1
arg	as old-pos ||| old-pos escape-from-edge only-in-line	count=1
function	the debug-on-exit ||| backtrace	count=1
function_arg	in [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	after emacs reads your ||| list	count=1
function	the end of the ||| end	count=3
module	this ||| 38	count=1
function	size of the ||| size	count=2
function	its argument function for ||| map char	count=1
module	the minibuffer a nonnegative ||| 19	count=1
arg	except that key ||| key	count=1
function	site-customization file to load ||| site run file	count=1
function	substrings of ||| buffer substrings	count=1
function	translation table [function_2] ||| [function_1] [function_2]	count=1
arg	fn returns a new ||| fn	count=1
function	shell [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] [arg_2] ||| [arg_2] charset [arg_1]	count=2
function	for ||| table	count=2
function	print-length to ||| length	count=1
arg	combined entry ||| before-p	count=1
arg	[arg_1] documentation docstring ||| [arg_1] [arg_2]	count=3
module	the horizontal position ||| 31 17.1	count=1
function	all the overlays that ||| overlays	count=1
function	function appends the contents ||| append	count=1
function	left ||| scroll left	count=1
function_arg	query [arg_2] ||| [function_1] [arg_2]	count=3
function	the ending position ||| event	count=1
arg	s and suffix ||| suffix	count=1
function	margin indentation from ||| margin	count=1
function	this function tests for ||| not	count=1
function	nil switch-to-buffer displays the ||| to buffer preserve	count=1
function	nil switch-to-buffer displays ||| switch to buffer preserve window	count=1
arg	len ||| len	count=1
function	wrap the ||| s word wrap	count=1
function	the exit status of ||| exit status	count=1
arg	item in list that ||| list	count=1
arg	[arg_1] name name ||| [arg_2] [arg_1]	count=1
module	a key sequence a ||| 1	count=1
function_arg	character [arg_2] ||| [function_1] region start end [arg_2]	count=2
function	deletes ||| delete	count=9
arg	window for a ||| window	count=1
function_arg	overlay [arg_2] ||| [function_1] change [arg_2]	count=1
module	of the current line ||| 31 17.1	count=1
function	index of ||| elem index	count=1
arg	fname that acts ||| fname	count=1
arg	named function ||| where function props	count=2
function_arg	frame and [arg_2] ||| [function_1] [arg_2]	count=2
arg	[arg_1] [arg_2] ||| [arg_1] element [arg_2]	count=6
module	converting it according ||| 12.2	count=1
arg	by menu ||| maps doc menu	count=1
arg	skipping over a ||| character-set limit	count=1
function	variable is ||| pop up	count=2
function	current display table ||| current display table	count=1
function	[function_1] buffer ||| [function_1] [function_2]	count=8
module	this function ||| 24 3	count=1
function	returns a copy of ||| copy	count=1
function	the site-customization [function_2] ||| [function_2] [function_1]	count=4
module	string ||| 38 7	count=2
function	state of ||| state	count=1
function	non-nil that means display-buffer ||| pop up	count=1
function	making ||| pop up	count=1
module	init file it initializes ||| 25	count=1
function	number of elements ||| length	count=1
arg	if alist ||| buffer alist	count=1
function	reads the ||| read	count=2
function	non-nil ||| save list	count=1
function	limit for ||| limit	count=3
function	[function] is ||| [function]	count=3
function	file it initializes ||| auto save list file	count=1
function	maximum ||| max	count=1
function	a live window and ||| window live	count=1
function	to make ||| up	count=1
arg	nth ||| n	count=4
arg	valid position in object ||| object	count=1
function	minibuffer window ||| minibuffer window	count=1
arg	and y are in ||| y	count=1
module	sequence of [module] as string ||| [module] 3	count=1
rep	function returns [function_arg_2] ||| [module_1] [function_arg_2]	count=10
arg	to ||| to	count=3
function	completes [function] ||| [function] complete	count=1
function	this ||| parameter	count=1
function	on a ||| on	count=1
arg	the extra slot slot ||| slot	count=1
module	if ||| 27 14	count=4
module	the ||| 13	count=2
function	generic mode command ||| generic	count=1
function	set it ||| save	count=1
module	containing ||| 6 5	count=2
module	point-min otherwise ||| 1	count=1
arg	[arg_1] [arg_2] ||| [arg_2] height [arg_1]	count=9
arg	within the range of ||| partially	count=1
function	text conversion of ||| change text conversion	count=2
arg	buffer from-buffer-or-name into the ||| from-buffer-or-name start end	count=1
function_arg	[function_1] position in ||| [arg_2] [function_1]	count=3
module	function returns a list ||| 6.4	count=1
function	you have not already ||| auto save list	count=1
function	window below ||| buffer below	count=1
arg	of lists using ||| &rest lists	count=1
module	if the value of ||| 14	count=2
arg	in object rather than ||| pos prop object	count=1
module	and you ||| 24 6.1	count=1
function	directory listing for directory ||| directory	count=1
module	of a ||| 31	count=1
module	each element of ||| 6	count=2
module	help buffer which ||| 23	count=1
function	it non-nil based on ||| save	count=1
arg	the named ||| props	count=1
function	coding system which uses ||| coding system change	count=1
function	this variable ||| mark ring	count=1
module	point ||| 3	count=1
arg	object rather than ||| prop object	count=1
arg	[arg_1] [arg_2] ||| [arg_1] wrap [arg_2]	count=2
function	whose syntax classes are ||| syntax	count=1
function	specify the dimensions of ||| mm dimensions alist	count=1
arg	of parameter to ||| window parameter	count=1
function	position in list replaced ||| update at	count=1
arg	[arg_1] and ||| [arg_1] [arg_2]	count=1
function	dimensions of ||| dimensions	count=1
arg	returns it ||| prompt initial	count=1
function	the insertion ||| insertion	count=1
module	value of ||| 30 7	count=1
arg	change in the prop ||| pos prop	count=1
arg	[arg_1] it through ||| [arg_1] form [arg_2]	count=4
module	or directory for emacs ||| 38	count=1
function	auto-save-list-file-name ||| save list file	count=1
function_arg	-remove [arg_2] ||| [arg_2] [function_1]	count=1
module	programs and the emacs ||| 7	count=1
function	name ||| auto save list file	count=1
module	means ||| 27 14	count=2
module	and returns ||| 4	count=1
function	key sequence as ||| key sequence	count=1
arg	rgb a list of ||| rgb	count=1
arg	of char-table that ||| function char-table	count=1
module	creates ||| 26 11	count=1
arg	filename into the ||| filename visit	count=1
function_arg	definition of [arg_2] ||| [function_1] keymap [arg_2]	count=1
arg	defines the ||| docstring	count=2
function	filters the buffer ||| buffer	count=1
arg	x and y are ||| x y	count=1
function	edge coordinates ||| edges	count=1
arg	fun to ||| fun	count=1
module	returns ||| 31 17.1	count=2
function_arg	buffer in [arg_2] ||| [function_1] [arg_2]	count=1
function	not already set it ||| auto	count=1
module	system ||| 38 4	count=1
function	the ||| save list	count=1
arg	between from and to ||| from to	count=2
module	network ||| 36	count=1
function	argument function for ||| map	count=1
function	case [function_2] ||| [function_2] [function_1]	count=2
function	string of years days ||| format	count=1
module	inform coverage testing that ||| 17 4	count=1
function	cells the screen supports ||| cells	count=1
arg	flatten num ||| num	count=1
function	there is no match ||| string match	count=1
function	name nil otherwise ||| name	count=1
arg	[arg] grouped into ||| [arg]	count=1
module	this function ||| 31 17.1	count=1
function	[function_1] a link ||| [function_2] [function_1]	count=4
function	end of the buffer ||| end of	count=1
arg	this command adjusts the ||| max-height min-height max-width min-width only	count=1
function	an error is ||| on error	count=2
function	[function] item ||| [function]	count=1
function	compare two substrings ||| compare buffer substrings	count=1
function	category [function_2] ||| [function_2] [function_1]	count=1
function	mouse pointer ||| pointer	count=1
function	existing window ||| up	count=1
function	command displays the ||| describe	count=1
module	for ||| 14	count=1
module	the buffer or text ||| 31 8.2	count=1
function	the text ||| text	count=3
function	buffers by making new ||| pop	count=1
function	of the modifiers ||| event modifiers	count=1
function	existing menu ||| add item from menu	count=1
arg	live ||| all-frames	count=1
function	maximum size ||| mark ring max	count=1
module	this function returns a ||| 24 6.4	count=1
function	the purpose of throw ||| throw	count=1
arg	the fringe widths ||| left right outside-margins	count=1
function	tests for the falsehood ||| not	count=1
arg	right if count is ||| count	count=1
arg	to font ||| font	count=1
arg	[arg] which should ||| [arg]	count=3
function	of a network ||| network	count=1
function	reads a file name ||| read file name	count=1
arg	call [arg] ||| [arg]	count=6
function	[function_1] than file ||| [function_1] [function_2]	count=1
function	forward in the current ||| forward	count=1
arg	and providing completion ||| require-match initial predicate	count=1
arg	that string ||| string	count=1
function	not ||| file	count=1
function	the position that ||| position	count=1
function_arg	[function_1] n items ||| [function_1] [arg_2]	count=1
function	fontset ||| fontset	count=2
function	the text conversion of ||| change text conversion	count=1
module	buffer so ||| 29 4	count=1
function	truename ||| truename	count=1
module	list of ||| 19 6.6	count=1
arg	as seen from ||| ignore sign wrap mini	count=1
arg	of file filename into ||| filename visit beg end replace	count=1
function	is nil switch-to-buffer displays ||| preserve	count=1
function	init ||| list file	count=1
function	the syntax ||| modify syntax	count=1
module	this function ||| 34 3	count=2
function	x ||| x y	count=1
arg	as the message ||| message level	count=1
function	either the owner or ||| when mismatch	count=1
arg	thread it ||| &optional	count=1
arg	except [arg] ||| ewoc [arg]	count=1
function	a list specifying the ||| prev buffers	count=1
function	not already set ||| auto save list file	count=1
function	if no change is ||| char property change	count=1
function	file it ||| list file	count=1
module	[module] window ||| [module]	count=1
function	insertion type ||| insertion	count=1
arg	string and the ||| string	count=1
arg	count ||| count	count=13
arg	calls ||| function	count=1
module	argument function for each ||| 6 6	count=1
module	the result a ||| 32 1	count=1
function	frame that ||| frame	count=1
function	variable is non-nil that ||| pop	count=1
function	this function returns ||| end	count=1
module	function ||| 21	count=1
function	next-single-property-change ||| next single	count=1
arg	this command fills each ||| justify	count=1
function	least recently-used ||| pop up	count=1
function	the value of this ||| mark	count=1
function	contents ||| file contents	count=1
function	not ||| save list file	count=1
arg	[arg_1] respectively ||| [arg_2] [arg_1]	count=2
arg	table ||| table	count=9
arg	execute body ||| body	count=1
function	function returns the file ||| make auto save file	count=1
module	basic [module] mode for ||| [module] 2.5	count=1
arg	signature [arg_2] ||| [arg_1] [arg_2]	count=2
function	the end [function] ||| [function] end double	count=1
function	[function_1] window configuration ||| [function_2] [function_1]	count=3
module	[module] of ||| [module]	count=3
function	the [function] into ||| dump [function]	count=1
function	list specifying the ||| prev buffers	count=1
function	argument function for each ||| map	count=1
function	name for [function_2] ||| [function_2] file [function_1]	count=1
function	previously showing it ||| buffer in previous	count=1
arg	field of each ||| field	count=1
function	[function_1] as auto-saved ||| [function_1] [function_2]	count=4
module	that the entire ||| 29	count=1
arg	in object rather ||| object	count=1
function	no such [function] it returns ||| [function] p	count=1
function	abbrev definitions from a ||| abbrev	count=1
module	whenever a [module] ||| [module]	count=1
function	elements ||| union	count=1
arg	result as a string ||| string	count=1
arg	this function ||| process	count=2
module	this option specifies ||| 27 3	count=4
function	visible on ||| visible	count=1
function	beginning of ||| bobp	count=1
function	for ||| pop	count=1
function	prefix adding ||| prefix	count=1
module	greater ||| 29	count=1
arg	position in object ||| pos prop object	count=1
function	line which is the ||| current	count=1
arg	the region beg ||| beg	count=1
function	that the minibuffer ||| minibuffer auto	count=1
function	of the minibuffer raises ||| auto raise	count=1
function	function was called ||| called	count=1
function	nested ||| flatten	count=1
function_arg	window [arg_2] ||| [function_1] [arg_2]	count=3
function	wrap the words with ||| wrap	count=1
function	returns the key sequence ||| key sequence	count=1
arg	[arg] from ||| [arg]	count=3
function	backward in ||| backward	count=1
function	current global ||| global key	count=1
function	currently visible on the ||| pos visible	count=1
function	menu ||| from menu	count=1
function	emacs reads your init ||| auto save	count=1
arg	value such as #rrrgggbbb ||| prompt convert allow-empty display	count=1
function	face attributes ||| font face attributes	count=2
function	returns [function] ||| window configuration [function]	count=1
function	by a button at ||| button	count=1
function	return the window ||| window	count=1
module	throw ||| 10 5.1	count=1
function	puts the ||| window state put	count=1
function_arg	function sets [arg_2] ||| [function_1] [arg_2]	count=2
function	line number [function_2] ||| [function_1] [function_2]	count=4
function	or other i/o device) ||| file regular	count=1
function	if the value ||| pop up	count=2
arg	object1 and ||| object1	count=1
module	for each ||| 6 6	count=1
function_arg	the font [arg_2] ||| [function_1] [arg_2]	count=2
arg	or integers [arg_2] ||| [arg_1] [arg_2]	count=2
function	list buffer see header ||| list init	count=1
function	enables [function] buffer ||| buffer enable [function]	count=1
function_arg	[function_1] if ||| [arg_2] [function_1]	count=4
arg	this function returns the ||| frame	count=2
function	completes the ||| complete	count=1
module	this function sets the ||| 3	count=1
module	this is ||| 3	count=1
function	this ||| mark ring	count=1
function	on this prefix adding ||| save list file prefix	count=1
function	[function_1] flag of ||| [function_1] [function_2]	count=4
module	new ||| 27 14	count=4
function	evaluates ||| eval	count=1
function	from buffer-invisibility-spec ||| from invisibility spec	count=2
arg	current-face and ||| current-face when	count=1
function	initializes auto-save-list-file-name if ||| list	count=1
arg	to format format ||| format beg end	count=1
function	which is the ||| current	count=1
module	a new ||| 6 5	count=1
function	hash [function_2] ||| [function_1] [function_2]	count=1
function	after emacs reads ||| auto save list file	count=1
function	name ||| auto save list	count=1
module	alist of ||| 39 4	count=1
arg	[arg_1] in collection ||| [arg_1] [arg_2]	count=4
function	works like assoc except ||| assoc	count=1
function_arg	[function_1] [arg_2] ||| [function_1] char [arg_2]	count=6
arg	if those aspects differ ||| config1 config2	count=1
function	a single character ||| char	count=1
module	than 0 point-min ||| 29	count=1
function	file it initializes ||| auto save	count=1
function	number of elements in ||| length	count=1
module	already set it ||| 25	count=1
function	nth previous button ||| button	count=1
function	as dedicated to ||| dedicated p	count=1
rep	[module_1] [function_arg_2] ||| [module_1] kill [function_arg_2]	count=4
function	inserts before [function_2] ||| [function_1] [function_2]	count=2
arg	name a ||| name properties	count=1
module	converting it according ||| 24 12.2	count=1
function_arg	input method [arg_2] ||| [arg_2] [function_1]	count=4
function	style of justification to ||| default justification	count=1
module	argument ||| 6	count=2
function	elements that are ||| count population	count=1
module	of all expressions debugged ||| 2.16	count=1
arg	named function [arg_2] ||| [arg_2] [arg_1]	count=2
module	this is non-nil ||| 16 3	count=1
function_arg	attributes [arg_2] ||| [function_1] filename [arg_2]	count=1
function	accessible portion of the ||| min	count=1
function	is nil switch-to-buffer ||| buffer preserve	count=1
function	xml rather ||| xml	count=1
function_arg	watch [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] margin of ||| [function_1] [function_2]	count=4
module	this ||| 25 3	count=2
function	inserts object into ||| insert	count=1
module	[module] of ||| 37 [module]	count=2
function	a backup [function_2] ||| [function_2] [function_1]	count=1
arg	count is ||| count	count=3
module	argument for this ||| 20 5	count=1
module	emacs ||| 38 13	count=1
function	variable is non-nil ||| up	count=2
arg	t if [arg] have equal ||| [arg]	count=1
function	the ||| auto	count=1
function	number of screen lines ||| screen lines	count=1
function	a non-nil value if ||| p	count=1
function	sets the :underline ||| set	count=1
function	the newest backup versions ||| kept versions	count=1
function	to a string ||| string	count=1
function	edebug ||| test	count=1
function_arg	[function_1] filename ||| [function_1] [arg_2]	count=31
rep	this [function_arg_2] ||| [module_1] [function_arg_2]	count=35
function	backward from ||| backward	count=1
function	every ||| each	count=1
arg	hook [arg_2] ||| [arg_2] [arg_1]	count=5
function	default ||| abbrev	count=1
module	[module] the current ||| [module] 9	count=3
module	is ||| 31 17.1	count=2
arg	live window and ||| all-frames	count=1
arg	string ||| string args	count=1
function	function returns the backing ||| backing	count=1
function	match ||| match p	count=2
arg	by sending ||| current-group	count=2
function	reads the name of ||| read buffer	count=1
function	all ||| vconcat	count=1
function	by eval-expression and thus ||| eval expression	count=1
function	already set ||| list file	count=1
function	[function_1] by ||| [function_2] [function_1]	count=9
function	current insertion type ||| marker insertion type	count=2
function	top entry in ||| top	count=1
function	the newline just inserted ||| newline and	count=1
arg	according to the ||| accept-defaults no-remap position	count=1
function_arg	[function_1] filename to ||| [function_1] [arg_2]	count=8
function	list of attributes ||| file attributes	count=1
function	expression from the ||| from	count=1
function	text areas ||| text area	count=1
function	that completes the ||| complete	count=1
function	of years days hours ||| format seconds	count=1
function	except for ||| butlast	count=1
arg	[arg_1] list ||| index [arg_1] [arg_2]	count=3
module	the current buffer ||| 29	count=1
arg	keymap [arg_2] ||| [arg_2] [arg_1]	count=2
function	based on this ||| save list file	count=1
arg	[arg_1] end as ||| [arg_1] [arg_2]	count=1
function	non-nil based ||| auto save list file	count=1
arg	in string according to ||| string	count=1
arg	the font [arg] ||| font-spec [arg]	count=1
function	non-nil inhibits the startup ||| inhibit startup	count=1
arg	mentioned in syntaxes a ||| syntaxes	count=1
function	fill column value ||| fill column	count=2
function	the last ||| last	count=3
function	handler ||| handler	count=1
function	window as dedicated ||| set window dedicated	count=1
function	already set it non-nil ||| save	count=1
function	of attributes ||| face all attributes	count=1
arg	tree and make ||| init-value tree	count=1
arg	prompt and providing ||| prompt	count=1
function	a buffer named ||| get buffer create	count=1
function	returns the message ||| message	count=1
function	reverse ||| s reverse	count=1
module	loading specified by autoload ||| 15	count=1
module	returns t if point ||| 1	count=2
function	its ||| char	count=1
module	iconifies ||| 28 10	count=1
function	this variable is ||| mark ring	count=1
function	and ||| file	count=1
function	function ||| vconcat	count=1
arg	this function ||| frame	count=7
function	this function returns ||| window at	count=1
arg	equal ||| elem	count=1
module	string of years ||| 38	count=1
module	[module] describing ||| [module] 8	count=1
function	previous buffers ||| prev buffers	count=2
arg	object to [arg_2] ||| [arg_2] [arg_1]	count=1
module	function ||| 19 12	count=2
module	expansion of ||| 35 4	count=2
function	of [function_2] ||| [function_1] [function_2]	count=2
function	function for file name ||| file name	count=1
function	display table in a ||| display table	count=1
module	process process ||| 36 8	count=1
module	t if point is ||| 31	count=2
function	make a ||| pop up	count=1
function	already ||| auto save list	count=1
arg	buffer-or-name with some ||| buffer-or-name	count=1
module	which is the ||| 31 17.1	count=1
arg	index index ||| index	count=1
arg	[arg_1] lisp ||| [arg_2] [arg_1]	count=2
function	print-length and ||| length	count=1
module	a new ||| 5	count=1
arg	file filename into ||| filename visit	count=1
arg	position in object rather ||| object limit	count=1
arg	the message and ||| message level buffer-name	count=1
function_arg	remapping [arg_2] ||| [function_1] [arg_2]	count=3
function	buffer if the buffer ||| buffer	count=1
function	function returns the backing ||| display backing	count=1
function	a new fontset ||| create fontset from fontset spec	count=1
module	initializes auto-save-list-file-name if you ||| 25	count=1
module	next ||| 37 18.5	count=1
function	left margin ||| to left margin	count=2
function	local keymap or nil ||| local key	count=1
arg	user by providing completion ||| collection predicate require-match initial history default inherit-input-method	count=1
module	[module] string-or-char without ||| [module]	count=3
arg	named program ||| program	count=1
arg	list with the ||| list	count=2
arg	byte code of function ||| function	count=1
function	that represents in shell ||| shell	count=1
function	function closes a ||| notifications close	count=1
module	entire ||| 4	count=1
arg	s up to n ||| n	count=1
arg	displays a pop-up menu ||| position menu	count=1
module	an error is ||| 5	count=1
arg	system coding-system ||| coding-system	count=2
function	value ||| pop up	count=2
function	returns the parent ||| parent	count=1
function	this function sets ||| set frame	count=1
function	the currently active minibuffer ||| active minibuffer	count=1
module	stably though [module] ||| [module] 6.3	count=3
arg	charset to the corresponding ||| charset	count=1
function	return a non-nil value ||| p	count=1
arg	syntaxes a string ||| syntaxes	count=1
function	same field ||| field	count=1
function	if ||| auto save list file	count=1
arg	:slant attribute of face ||| face frame inherit	count=1
module	character sets in ||| 32	count=1
arg	sig and ||| sig	count=1
function	you have ||| list file	count=1
module	this function [module_2] ||| [module_1] [module_2]	count=9
module	variable ||| 11	count=4
arg	first item in list ||| list	count=1
function_arg	[function_1] of parameter ||| [function_1] [arg_2]	count=3
function	window’s previous ||| window prev	count=2
function	initial execution [function_2] ||| [function_1] [function_2]	count=3
rep	text [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function_arg	the timestamp [arg_2] ||| [arg_2] [function_1]	count=1
module	nonblank character ||| 31 17.1	count=1
function	which the kill ||| kill	count=1
arg	that x and y ||| x y	count=1
arg	count would ||| count	count=1
function_arg	[function_1] regexp in ||| [function_1] all [arg_2]	count=1
function	function sets the ||| set frame	count=1
function	init file ||| auto	count=1
module	window ||| 27 24	count=1
function	alphabetically ||| regexp fields	count=1
function	purpose of throw ||| throw	count=1
function	focus when ||| focus	count=1
function	function returns the number ||| count	count=1
function	file to ||| file	count=1
arg	process to flag ||| process flag	count=3
function	echo area ||| echo area	count=2
module	this function ||| 26 6	count=1
function	split ||| up	count=1
module	the value ||| 27	count=2
function	the header line to ||| init header	count=1
function	previous [function_2] ||| [function_1] [function_2]	count=10
module	current buffer so ||| 29	count=1
function	horizontal position of the ||| current	count=1
arg	string or buffer object ||| props object	count=1
function	ending position ||| end	count=1
function	init file ||| save list file	count=1
arg	from from [arg_2] ||| [arg_2] [arg_1]	count=4
function	previous older ||| previous	count=2
function	[function_1] configurations as ||| [function_2] [function_1]	count=5
function	cons cell or ||| listp	count=1
function	newer ||| newer	count=1
rep	the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=4
function	text as ||| parse	count=1
function_arg	face [arg_2] ||| [function_1] face attribute [arg_2]	count=1
function	is on ||| mouse on	count=1
function_arg	visibility status [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	actual row [arg_2] ||| [function_1] [arg_2]	count=1
function	to process ||| process	count=1
arg	end in the ||| end properties	count=1
function	[function_1] [function_2] ||| [function_2] for user input [function_1]	count=2
module	until input ||| 20	count=1
module	auto-save-list-file-name if you have ||| 25 2	count=1
arg	a match for key ||| key	count=1
rep	decoding [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	command [function] the ||| [function] region	count=1
arg	n items [arg_2] ||| [arg_2] [arg_1]	count=1
function	tests for ||| not	count=1
function	[function_1] ring ||| [function_1] [function_2]	count=4
arg	posix standard [arg] ||| [arg]	count=2
arg	start to ||| start	count=4
arg	end using ||| end	count=1
module	function sends a ||| 36 8	count=1
module	allowed to ||| 14	count=1
function	or next ||| prev	count=1
arg	the width ||| width pretend pixelwise	count=1
module	set ||| 2	count=1
function	this ||| auto save	count=1
module	which ||| 31 17.1	count=2
module	buffer-local ||| 11 10.2	count=4
function	that separate pages ||| page delimiter	count=1
function	sequence a string ||| kbd	count=1
module	testing that ||| 17 4	count=2
module	[module_1] [module_2] ||| [module_1] [module_2]	count=96
module	buffer ||| 31 1	count=1
arg	and list2 has ||| list2	count=1
module	returns t ||| 31 1	count=2
function	text currently visible on ||| pos visible in	count=1
module	file converting ||| 24 12.2	count=1
function_arg	fieldth field of ||| numeric fields field	count=1
function	integer ||| minibuffer	count=1
function_arg	[function_1] pred ||| [function_1] [arg_2]	count=5
function	into a key sequence ||| kbd	count=1
function	non-nil based on ||| list file	count=1
module	a new vector ||| 6 5	count=1
function	but inherit any ||| and inherit strings	count=1
function	as the syntax ||| syntax	count=1
function	selinux ||| file selinux	count=2
function	syntax classes are mentioned ||| syntax	count=1
arg	like indent-rigidly except ||| end columns nochange-regexp	count=1
function	scroll ||| window current scroll	count=1
module	a new window for ||| 14	count=1
function	the owner or ||| when mismatch	count=1
module	function returns the ||| 27 3	count=1
function	initializes ||| file	count=1
function	of suffixes ||| suffixes	count=1
function	point-min otherwise ||| buffer	count=1
function	removes ||| remove function	count=1
function	state ||| window state	count=1
function	the shell ||| shell command	count=1
module	line ||| 17.1	count=1
function	[function] image image ||| [function] image	count=2
function_arg	the status [arg_2] ||| [function_1] [arg_2]	count=2
function	may display ||| pop	count=1
function	absolute value ||| abs	count=1
function	previous sibling of the ||| window prev sibling	count=1
arg	repeatedly calls fn ||| fn	count=1
function_arg	[function_1] text in ||| [arg_2] [function_1]	count=3
module	a ||| 8	count=1
function	years days ||| format seconds	count=1
module	function returns ||| 19 13	count=1
arg	the process process ||| process	count=1
function	[function] for command ||| global [function]	count=3
function	is the currently active ||| active	count=1
function	have ||| save list	count=1
function	[function_1] to a ||| [function_2] [function_1]	count=4
module	each argument is ||| 3	count=1
function	emacs ||| emacs	count=3
arg	definition in the function ||| definition	count=1
module	nonblank ||| 31	count=1
function	[function_1] permissions of ||| [function_1] [function_2]	count=5
function	the scroll ||| window current scroll	count=1
function	replaces ||| in	count=1
arg	buffer from-buffer-or-name into the ||| from-buffer-or-name start	count=1
function	function sets the buffer ||| set	count=1
arg	to n ||| n	count=1
function	the reverse ||| reverse	count=1
function	[function_1] global ||| [function_2] [function_1]	count=3
function	non-nil ||| auto save	count=1
function_arg	status [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	list [arg_2] ||| [arg_2] [function_1]	count=2
function	the display-start position ||| window start	count=1
function	emacs reads your ||| auto save list file	count=1
function	[function_1] column ||| [function_1] [function_2]	count=1
arg	[arg_1] optionally ||| [arg_2] [arg_1]	count=3
function	tab ||| indent for tab	count=1
arg	value value ||| variable value	count=1
function	and right margins ||| margins	count=1
function	property value comes from ||| char property and	count=1
function	non-nil ||| list file	count=1
function	an odd number of ||| logxor	count=1
function	offer to save ||| save	count=1
function	your init file ||| file	count=1
function	[function_1] the function ||| [function_2] [function_1]	count=4
function	string of years days ||| format seconds	count=1
arg	change in the prop ||| prop	count=1
function	directory ||| directory	count=7
module	the host name ||| 2	count=1
arg	newdef for [arg_2] ||| [arg_2] [arg_1]	count=3
function	forces emacs to update [function_1] [function_2] line and header line ||| [function_1] [function_2]	count=1
function	this function sets the ||| set process	count=2
function	column value to use ||| column	count=1
module	time emacs ||| 38 11	count=1
arg	message and type ||| message	count=1
function	the height ||| height	count=1
function_arg	table [arg_2] ||| [function_1] description name [arg_2]	count=1
function_arg	[function_1] obsolete-face as ||| [arg_2] [function_1]	count=2
function	have not ||| auto save list	count=1
module	window ||| 27	count=3
module	side-effects passing [module] integers ||| [module]	count=1
function	margin ||| margin	count=3
function	variable is non-nil ||| pop up	count=2
function	dimensions of ||| dimensions alist	count=1
function	point using text ||| text	count=1
function	backup files [function_2] ||| [function_2] [function_1]	count=2
function	auto-save-list-file-name if you ||| auto save	count=1
arg	previous [arg] of ||| [arg]	count=1
function	a string ||| format	count=1
function	initializes ||| list	count=1
arg	key-regexp ||| key-regexp	count=1
module	display-buffer ||| 27 14	count=4
function	returns the file name ||| file name	count=1
arg	field of each line ||| field	count=1
function	have not already set ||| save	count=1
function	this macro defines ||| menu define	count=1
arg	of charset to the ||| charset	count=1
function	it non-nil ||| auto save list file	count=1
function	is strictly ||| >	count=1
function	returns [function] ||| terminal [function]	count=1
module	for ||| 27	count=2
arg	file filename into the ||| filename visit beg end replace	count=1
function	made from ||| from	count=1
arg	for regexp in string ||| regexp string	count=1
function	returns a string ||| to string	count=1
function_arg	[function_1] table table ||| [arg_2] [function_1]	count=3
function	right or to the ||| right	count=1
module	number of elements that ||| 6 7	count=1
module	this function ||| 21 12	count=1
module	function returns ||| 2	count=1
function	list of coding systems ||| find coding systems	count=3
arg	in the value ||| value	count=1
function	marker nil ||| marker	count=2
function	and ||| auto save	count=1
arg	the argument list signature ||| signature	count=1
arg	filename and ||| filename	count=1
function	syntax classes are ||| skip syntax	count=1
function	there is none ||| current	count=1
arg	node ||| node	count=1
arg	of keymap to parent ||| keymap	count=1
module	files created by emacs ||| 24	count=1
arg	text-coding ||| text-coding	count=1
function	frames—the first [function] and subsequent ||| [function]	count=1
function	non-nil ||| test	count=1
arg	limit ||| limit	count=2
function_arg	[function_1] [arg_2] ||| [function_1] on [arg_2]	count=2
function	[function_1] auto-save ||| [function_1] [function_2]	count=1
function_arg	[function_1] name to ||| [function_1] font [arg_2]	count=3
function	[function_1] by ||| [function_1] [function_2]	count=9
arg	value t1 ||| t1	count=1
function	from the [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] a vector ||| [function_1] [function_2]	count=5
function	s to dashed-words ||| dashed words	count=1
function	rendered using imagemagick regardless ||| imagemagick types inhibit	count=1
arg	from-buffer-or-name ||| from-buffer-or-name	count=1
module	between the [module] start and ||| [module]	count=1
module	a ||| 21 1	count=6
function_arg	[function_1] n ||| drop [function_1] [arg_2]	count=3
arg	this command fills ||| end justify citation-regexp	count=1
function	registry is ||| registry	count=1
arg	for key according ||| key accept-defaults no-remap	count=1
function	if you have not ||| list file	count=1
function	value ||| ring	count=1
function	undo list ||| undo	count=2
function	of justification to ||| default justification	count=1
function	editable contents ||| delete minibuffer contents	count=1
function	minimum distance between the ||| minimum	count=1
function	mouse pointer style ||| pointer	count=1
arg	[arg_1] [arg_2] ||| [arg_2] end [arg_1]	count=6
function	the network ||| network	count=1
module	is greater than ||| 29 1	count=1
module	[module_1] [module_2] converts ||| [module_1] [module_2] downcase	count=1
arg	function resembles insert-buffer-substring except ||| buf start end	count=1
function	function sets [function_2] ||| [function_1] [function_2]	count=16
function	already ||| auto	count=1
function	setup smie ||| smie setup	count=2
function	the coding system ||| set terminal coding system	count=1
arg	but does so ||| wildcards	count=1
function	for ||| window	count=1
function	and buffer-local variable bindings ||| normal	count=1
function	calls its ||| table	count=1
module	is greater ||| 29 1	count=1
function	mode for edebug ||| mode	count=1
module	new vector ||| 5	count=1
module	returns a list ||| 6.4	count=1
arg	[arg_1] defines tabname ||| [arg_2] [arg_1]	count=4
function	a string made ||| make string	count=2
function	insertion ||| marker insertion type	count=1
function	existing menu ||| item from menu	count=1
module	current ||| 29 4	count=1
function	attributes ||| face all attributes	count=1
function	for each ||| char	count=1
function	function returns a string ||| string	count=1
function	prefix adding the ||| save list file prefix	count=1
function	to the significand ||| ldexp	count=1
function	of bytes ||| string bytes	count=1
function_arg	current global [arg_2] ||| [function_1] set key key [arg_2]	count=1
function	not to make ||| make	count=1
function_arg	[function_1] buffer in ||| [function_1] [arg_2]	count=1
module	for ||| 10 3	count=2
function	the acl for the ||| file acl	count=1
module	make ||| 25 1.1	count=1
function	the left or to ||| left	count=1
module	not match a ||| 33 1	count=4
function	for a [function] buffer—but does ||| [function] buffer name	count=1
function	to split an ||| pop	count=1
arg	position in the ||| position	count=1
function	pid of ||| id	count=1
module	the beginning of ||| 4	count=1
function	minus its [function_2] ||| [function_1] [function_2]	count=1
function	make backup [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] string made ||| [function_1] [function_2]	count=1
function	converts a symbolic ||| modes symbolic	count=1
module	minibuffer ||| 19	count=10
module	the elements of ||| 6	count=1
function	initializes auto-save-list-file-name ||| auto	count=1
function_arg	field as [arg_2] ||| [arg_2] [function_1]	count=1
arg	by its descriptor ||| descriptor	count=1
arg	function finds ||| filename missing-ok nomessage nosuffix	count=1
arg	a single-character ||| prompter actor list help action-alist no-cursor-in-echo-area	count=1
arg	[arg_1] item ||| [arg_2] [arg_1]	count=4
function	if non-nil ||| edebug test	count=1
function	zip lists ||| zip	count=1
function	substrings ||| buffer substrings	count=2
arg	in list [arg_2] ||| [arg_2] [arg_1]	count=16
function	buffers ||| up	count=1
function	may display ||| pop up	count=1
module	existing window ||| 27 14	count=1
function	this function sends ||| signal	count=1
module	this variable ||| 7	count=1
arg	[arg_1] to face ||| [arg_2] [arg_1]	count=1
function	this function returns t ||| interactively p	count=1
function	[function_1] threshold ||| [function_1] [function_2]	count=3
function_arg	[function_1] of filename ||| [arg_2] [function_1]	count=9
function	translation table made from ||| translation table from	count=1
function	have ||| list file	count=1
function_arg	tree [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] to its ||| [arg]	count=2
function_arg	remapping for [arg_2] ||| [function_1] [arg_2]	count=4
function	[function_1] copying ||| [function_1] [function_2]	count=16
module	of activations of ||| 19 13	count=1
function	obsolete indicating that it ||| obsolete face	count=1
module	is greater ||| 1	count=1
function	it initializes ||| auto	count=1
function	string in ||| ip to string	count=1
function_arg	[function_1] font-spec ||| [arg_2] [function_1]	count=2
arg	this ||| format-string	count=1
module	means display-buffer may ||| 14	count=1
function	function for each ||| table	count=1
arg	matching with font-spec ||| font-spec frame add	count=1
arg	filename ||| filename visit	count=1
module	converting it ||| 12.2	count=1
function	symbol ||| to list	count=1
function	[function_1] [function_2] ||| [function_2] table [function_1]	count=9
function_arg	row [arg_2] ||| [arg_2] [function_1]	count=1
module	function returns ||| 3	count=8
arg	parameter to ||| window parameter	count=1
arg	to end ||| end	count=8
function	[function_1] deletes ||| [function_2] [function_1]	count=4
module	this function returns ||| 6 5	count=1
function	display table or ||| display table	count=2
arg	customization option symbol add ||| symbol	count=1
arg	rep ||| rep	count=1
function	[function] by modifying ||| [function] add item	count=2
function	strings and/or characters ||| before markers	count=1
arg	the message and ||| message level	count=1
function	major mode and ||| normal mode	count=1
arg	newest element [arg_2] ||| [arg_2] [arg_1]	count=1
function	end of the field ||| field end	count=1
function	[function] line and ||| [function] line update	count=2
function	name and ||| auto save	count=1
function	init file it ||| save list file	count=1
arg	and returns ||| prompt	count=1
function	body width ||| body size	count=1
function	the beginning of ||| bolp	count=1
arg	header ||| header	count=1
arg	strings header ||| header	count=1
module	a nonnegative ||| 19 13	count=1
function	the debug-on-exit flag ||| backtrace debug	count=1
function	cache ||| cache	count=1
function	window typically one on ||| window	count=1
function	inserts in ||| insert	count=1
arg	screen line count ||| count	count=1
arg	array bindat-raw ||| bindat-raw	count=1
module	variables lists in ||| 11 11	count=1
function	replaces ||| regexp in string	count=1
arg	from [arg] ||| [arg]	count=3
function_arg	[function_1] seconds seconds ||| [arg_2] [function_1]	count=3
module	positions ||| 29 2.4	count=2
module	buffers by making new ||| 14	count=1
arg	fun in ||| fun	count=1
function	returns the list of ||| list	count=1
function	zip the ||| zip	count=1
function	non-nil edebug tests coverage ||| test coverage	count=1
module	into ||| sel	count=1
rep	this function returns a [module_1] [function_arg_2] ||| [module_1] get [function_arg_2]	count=1
module	not already set ||| 25	count=1
function	event ||| event	count=1
arg	finds ||| nomessage nosuffix	count=1
module	if ||| 25	count=1
module	[module] is ||| [module] 7	count=2
arg	command fills each ||| end justify citation-regexp	count=1
function	controlling ||| controlling tty	count=1
function	properties ||| properties	count=1
function	first ||| current	count=1
arg	[arg] region ||| old-char [arg]	count=1
function	given set of characters ||| chars	count=1
function_arg	paragraph [arg_2] ||| [arg_2] [function_1]	count=1
function	process ||| process filter	count=1
function	stores value ||| put	count=1
module	all relevant variables during ||| 4.1	count=1
arg	position [arg] replaced with ||| n x [arg]	count=1
module	current ||| 29	count=1
arg	the message and type ||| message	count=1
function	this function ||| horizontal space	count=1
module	a ||| 6 6	count=2
function	the host ||| auto save list file	count=1
function	this command inserts ||| insert	count=2
function	after emacs ||| auto save	count=1
function	init file ||| auto save list file	count=1
module	[module_1] regardless ||| [module_1] [module_2]	count=2
arg	of file filename ||| filename visit beg end	count=1
function	inserts [function_2] ||| [function_2] [function_1]	count=3
function	frame provided the buffer ||| buffer	count=1
function_arg	[function_1] fn ||| [function_1] [arg_2]	count=4
function	is non-nil ||| pop	count=2
arg	change in the prop ||| prop object	count=1
function	that satisfies ||| map nodes	count=1
function_arg	group specified [arg_2] ||| [function_1] [arg_2]	count=1
function	saveunder feature ||| display save under	count=1
function	attributes of ||| file attributes	count=1
module	windows ||| 27	count=4
module	auto-save-list-file-name if ||| 2	count=1
function_arg	function displays [arg_2] ||| [function_1] other window buffer-or-name [arg_2]	count=1
module	in the current ||| 29	count=1
function	[function_1] form ||| [function_1] [function_2]	count=3
function	is found ||| on	count=1
arg	longer than len ||| len s	count=1
module	for each element ||| 6	count=2
function	searches [function] ||| re search [function]	count=6
function	emacs-recognized extended attributes of ||| extended attributes	count=1
function	variable is non-nil display-buffer ||| pop	count=1
arg	termscript [arg] that will ||| [arg]	count=1
function	fit by ||| fit	count=1
function	newer history ||| history	count=1
function	returns the number of ||| count	count=1
arg	to expansion and call [arg_1] [arg_2] ||| expansion [arg_1] [arg_2]	count=6
module	representing the ||| 8	count=1
function_arg	[function_1] [arg_2] and ||| [function_1] [arg_2]	count=1
function	the state ||| window state	count=1
function	documentation string ||| documentation	count=2
function	right margins of ||| margins	count=1
function	this sets ||| ewoc set	count=1
module	text ||| 31 24	count=1
module	current ||| 4	count=1
arg	[arg_1] tabname a ||| [arg_2] [arg_1]	count=3
function	is the horizontal position ||| current	count=1
function	of the user ||| user	count=1
module	line which is ||| 31	count=1
function	[function_1] single paragraph ||| [function_2] [function_1]	count=1
function	in ||| up	count=1
function	the file mode or ||| file	count=1
function	if you have ||| save	count=1
module	a ||| 31 1	count=1
function_arg	hash table [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] start to ||| [arg_2] [function_1]	count=3
function	means display-buffer ||| pop up	count=1
function	containing ||| to	count=1
function_arg	edge [arg_2] ||| [function_1] [arg_2]	count=1
function	[function] including text ||| [function]	count=3
function	returns the visibility status ||| visible p	count=1
module	minibuffer ||| 19 6.3	count=1
function_arg	[function_1] vec ||| [function_1] vector [arg_2]	count=5
arg	lisp representation ||| omit-port	count=1
function	startup echo [function_2] ||| [function_2] [function_1]	count=2
module	display ||| 14	count=1
module	of this ||| 27	count=2
function	default ||| default	count=4
arg	to filename assuming ||| filename	count=1
arg	end as standard input ||| end	count=1
arg	matches for regexp separator ||| separator s	count=1
module	buffers by ||| 27 14	count=1
function_arg	text [arg_2] ||| [function_1] button label [arg_2]	count=1
module	host name ||| 25 2	count=1
function	highest priority ||| charset	count=2
function	this function sets the ||| set window fringes	count=1
arg	[arg_1] to typically ||| [arg_2] [arg_1]	count=1
function	name [function_2] ||| [function_2] file [function_1]	count=1
function_arg	contents [arg_2] ||| [arg_2] [function_1]	count=2
module	vector constant ||| 21 1	count=1
function	not already set ||| list	count=1
function	rehash [function_2] ||| [function_1] [function_2]	count=1
arg	if bold-p is nil ||| face bold-p	count=1
arg	of face in ||| face	count=1
function	copy text properties ||| properties	count=1
function	each ||| table	count=1
arg	[arg_1] through ||| [arg_2] [arg_1]	count=3
function	function sets one ||| set	count=1
function	live ||| live	count=1
arg	the count ||| count	count=1
arg	and opens a file ||| must-suffix	count=1
arg	face in the ||| face	count=1
function_arg	[function_1] [arg_2] fills it ||| [function_1] [arg_2] end justify nosqueeze squeeze-after	count=4
arg	with font-spec [arg_2] ||| [arg_2] [arg_1]	count=2
module	set it non-nil ||| 2	count=1
module	a ||| 7	count=1
function	its own [function] ||| [function]	count=1
function_arg	[function_1] specifications specs ||| [arg_2] [function_1]	count=4
function	user groups on ||| groups	count=1
function	[function_1] fringe bitmap ||| [function_1] [function_2]	count=3
function	after emacs reads your ||| file	count=1
function	a frame to its ||| frame to	count=1
function	years days hours ||| seconds	count=1
function	each element of ||| map char table	count=1
module	this ||| 19 13	count=2
module	and ||| 22 2.2	count=1
arg	[arg_1] into ||| [arg_2] [arg_1]	count=3
function	initializes auto-save-list-file-name if you ||| save	count=1
function	the minimum accessible ||| min	count=1
function_arg	[function_1] [arg_2] pixels ||| [function_1] [arg_2]	count=11
module	display-buffer may ||| 14	count=1
arg	inclusive and [arg] exclusive ||| start [arg]	count=1
function	a change group ||| change group	count=2
function	default emacs makes backups ||| backup	count=1
arg	function completes the ||| predicate	count=1
module	is the horizontal ||| 31 17.1	count=1
function	minibuffer raises the frame ||| raise	count=1
function	input is currently available ||| input	count=1
function	end of the current ||| end of	count=1
function_arg	font matching [arg_2] ||| [function_1] name character [arg_2]	count=3
function_arg	[function_1] symbol’s ||| [arg_2] [function_1]	count=2
function	to specify margins around ||| frame to buffer margins	count=1
function	returns a [function_2] ||| [function_2] [function_1]	count=4
function	list of ||| list	count=2
arg	[arg] separated ||| [arg]	count=1
function_arg	this command saves [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	in bool ||| bool	count=1
function	the fieldth ||| numeric fields	count=1
function	inserts the contents ||| insert file contents	count=1
function	function appends the contents ||| append to	count=1
function	own [function] ||| [function]	count=1
function	rehash threshold ||| table rehash threshold	count=1
module	current buffer so that ||| 29	count=1
function	how many seconds ||| seconds	count=1
function	function converts the region ||| region	count=2
function_arg	of [function_1] [arg_2] ||| [function_1] [arg_2]	count=12
function	set it non-nil based ||| file	count=1
function	system ||| system change	count=1
function	the display table ||| display	count=1
function	affects the ||| words include escapes	count=1
function_arg	the display [arg_2] ||| [function_1] [arg_2]	count=3
function	function appends ||| append to file	count=1
module	are accessible ||| 4	count=1
function	the property list ||| charset plist	count=1
arg	lines that start ||| start	count=1
function	function ||| horizontal	count=1
module	in [module] of ||| [module]	count=1
function	that has ||| map char	count=1
function	sentence ||| sentence	count=1
function	are [function_2] ||| [function_2] [function_1]	count=1
module	value of ||| 27 14	count=2
function	bool ||| bool	count=3
function	list of the modifiers ||| event modifiers	count=1
function	emacs reads your init ||| save list	count=1
function_arg	[function_1] n ||| [function_1] fn [arg_2]	count=1
function	[function_1] name to ||| [function_2] [function_1]	count=4
function_arg	[function_1] port ||| [function_1] [arg_2]	count=1
module	integer ||| 19	count=1
module	list of file names ||| 24 9	count=1
arg	with prompt ||| prompt directory default	count=1
arg	as newname ||| newname ok-if-already-exists	count=2
arg	obarray has ||| obarray	count=1
arg	performs [arg] ||| [arg] fixedcase literal string	count=2
arg	[arg_1] n is ||| [arg_2] [arg_1]	count=2
module	may display buffers ||| 27 14	count=1
function	return a single character ||| char	count=1
function	[function_1] history ||| [function_2] [function_1]	count=2
module	has a non-nil value ||| 6 6	count=1
function_arg	[function_1] text-coding ||| [function_1] eol-coding [arg_2]	count=4
arg	replacement operation ||| replacement	count=1
function	sexp ||| sexp	count=1
arg	case and one lower ||| uc lc	count=1
module	function returns the ||| 19	count=1
module	all expressions ||| 17	count=1
function	this function calls ||| char	count=1
function	newest ||| kept	count=1
module	help ||| 23 5	count=1
function	remote ||| remote file name inhibit	count=1
function	systems that could be ||| systems	count=3
function	non-nil edebug tests coverage ||| coverage	count=1
module	contain [module] in the ||| [module] 8	count=1
function_arg	the fringe [arg_2] ||| [arg_2] [function_1]	count=3
arg	menu and ||| position menu	count=1
function	function sets the process ||| set	count=1
function	is a minibuffer window ||| window minibuffer	count=1
function	reads ||| auto save list	count=1
function_arg	with color [arg_2] ||| [arg_2] [function_1]	count=3
function	of ||| mark	count=2
function	from the x ||| x	count=1
function	register name prompting ||| register	count=1
function	kills the ||| kill	count=1
arg	optionally [arg_2] ||| [arg_2] [arg_1]	count=1
arg	a signal to ||| signal	count=1
module	have not ||| 2	count=1
module	frames and tries to ||| 28	count=1
function	a new ||| find	count=1
function_arg	symbol [arg_2] ||| [arg_2] [function_1]	count=4
function	newer history element ||| matching history element	count=2
function	after emacs ||| save list	count=1
module	the ||| 27 14	count=4
function	whitespace ||| whitespace	count=1
function	region defined by ||| copy region	count=1
module	returns a new vector ||| 5	count=1
function	of this ||| up	count=2
function	file it initializes ||| save list	count=1
arg	signature ||| signature	count=1
function	to its buffer ||| to	count=1
function	returns window’s ||| window	count=1
function	each ||| char	count=1
function_arg	property [arg_2] ||| [arg_2] [function_1]	count=12
module	into a ||| 1	count=1
function	element of ||| map char table	count=1
function	split s up ||| split	count=1
module	string of years days ||| 38	count=1
function	[function_1] completes ||| [function_2] history [function_1]	count=1
function	textual lisp expression from ||| from	count=1
module	buffers by making new ||| 27	count=1
module	window’s ||| 27 25	count=2
arg	starting between start inclusive [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
module	this ||| 21 1	count=2
function_arg	[function_1] vec ||| [arg_2] [function_1]	count=5
module	representing the ||| 38 8	count=1
function_arg	the year [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] the category ||| [function_2] [function_1]	count=2
function	not already ||| save	count=1
arg	old-pos ||| old-pos escape-from-edge only-in-line	count=1
function	compares two [function_2] ||| [function_1] [function_2]	count=5
function	is like next-single-property-change ||| next single char property	count=1
function_arg	category [arg_2] ||| [function_1] set mnemonics [arg_2]	count=2
function	is allowed ||| pop	count=1
arg	dirname ||| dirname	count=2
function	function [function_2] ||| [function_2] [function_1]	count=5
arg	data item ||| item	count=1
function	across characters whose syntax ||| skip syntax backward	count=1
module	returns the ||| 3	count=5
function	function returns ||| minibuffer	count=1
module	returns ||| 32 3	count=2
arg	process the ||| process	count=1
arg	t if regexp ||| regexp limit	count=1
arg	face to pattern ||| face pattern	count=1
function_arg	stores [arg_2] ||| [arg_2] [function_1]	count=2
module	window [module] window tree ||| [module]	count=1
arg	string ||| string collection predicate	count=1
arg	[arg_1] suffix ||| [arg_1] [arg_2]	count=5
function	[function_1] whose ||| [function_2] [function_1]	count=3
function	set it non-nil ||| auto save list file	count=1
module	a ||| 19	count=3
function	[function_1] user at ||| [function_2] [function_1]	count=2
function	the character ||| glyph char	count=1
function	[function] on ||| [function] visible p	count=2
arg	from-buffer-or-name ||| from-buffer-or-name start end	count=1
function	the display ||| window display	count=1
function	like [function] but ||| previous [function] change	count=1
function	host name ||| save list	count=1
arg	function ||| process	count=2
module	a [module] whether ||| [module] 1	count=1
function	macro defines a ||| make	count=1
function	the environment variable values ||| substitute in file	count=1
arg	count is negative ||| count	count=1
function_arg	[function_1] [arg_2] ||| [function_1] set key key [arg_2]	count=7
arg	command command [arg_2] ||| [arg_1] [arg_2]	count=1
function	delete trailing [function_2] ||| [function_1] [function_2]	count=1
arg	replacements is ||| replacements s	count=1
function	of screen [function_2] ||| [function_2] [function_1]	count=4
module	non-nil display-buffer is allowed ||| 27	count=1
function	[function_1] global keymap ||| [function_2] [function_1]	count=3
function_arg	displays the [arg_2] ||| [function_1] other window [arg_2]	count=3
function	tests for the ||| not	count=1
function	backups ||| backup	count=2
arg	hook function ||| hook args	count=4
arg	the obarray obarray ||| obarray	count=1
function	file it ||| list	count=1
function	[function] the ||| [function] field	count=2
function	the pid ||| id	count=1
function	file it initializes auto-save-list-file-name ||| file	count=1
module	this function returns the ||| 3 8	count=1
function	context of ||| context	count=1
function_arg	[function_1] the width ||| [function_1] frame [arg_2]	count=2
arg	the named function ||| function	count=1
arg	binding for [arg_2] ||| [arg_2] [arg_1]	count=5
function	to be fit by ||| fit frame to	count=1
arg	rgb a list of ||| rgb frame	count=1
module	string ||| 21 1	count=4
