возвращает ascii-строку содержащую шестнадцатеричное представление аргумента str
преобразует gmp число в строку в системе счисления base
возвращает число соответствующее методу компрессии использовавшемуся при создании текущего элемента архива
проверяет все ли символы в переданной строке text являются знаками пунктуации
эта функция подобна sprintf() но она принимает не переменное число аргументов а массив
добавяет файл в zip-архив используя его содержимое
возвращает индекс текущего элемента массива
возвращает список всех серверов которые находятся в пуле
перемещает курсор на родительский элемент текущего атрибута
создает многоугольник в изображении image
эта функция похожа на hebrev() с тем отличием что что она преобразует символы перевода строки \n в < br > \n
вычисляет квадратный корень числа a
возвращает идентификатор группы файла в виде числа
делит left_operand на right_operand
читает содержимое текущего узла включая сам узел
выводит стек вызовов функций php в массив
позволяет отключить стандартные ошибки libxml и включить пользовательскую обработку ошибок
возвращает индекс текущего положения итератора
возвращает десятичный логарифм arg
возвращает статистику файловой системы в result аргумент callback
устанавливает файл содержащий персональный список слов
возвращает код ошибки последней функции работы с mysql
возвращает идентификатор изображения представляющего изображение полученное из файла с заданным именем
возвращает хэшированную строку полученную с помощью стандартного алгоритма unix основанного на des или другого алгоритма имеющегося в системе
ищет в haystack значение needle
возвращает текущую позицию начиная с 0 внутреннего объекта-итератора iterator
устанавливает название атрибута используемого для расчета количества уникальных значений при группировке
получает имя файла из определенной пользователем функции
возвращает значение шрифта объекта
возвращает строковое представление объекта
преобразует строку из одной кириллической кодировки в другую
очищает все ресурсы связанные с объектом imagick
получение информации о расширении в состав которого входит функция
получает версию mnogosearch api
вызывается когда обход дерева спускается на один уровень вниз
устанавливает ssl соединение с ftp-сервером заданным аргументом host
добавляет в конец объекта lob данные из другого объекта lob
создает объект класса gearmanjob представляющий работу для обработчика
возвращает текущий тип компрессии изображения
создает временный большой объект и записывает в него данные data
переименовывает элемент заданный по имени
возвращает требуемую подстроку
закачивает данные из дескриптора файла в удалённый файл на ftp-сервере
возвращает параметр если он раньше установлен с помощью xsltprocessor::setparameter()
данная функция сжимает строку используя формат данных deflate
функция аналогична функции mysql_field_name()
проверяет является ли итератор допустимым
эта функция возвращает строку str с удаленными из начала и конца строки пробелами
отключает сборщик циклических ссылок путем установки значения zend.enable_gc в 0
возвращает целое число представляющее собой версию протокола mysql используемого для соединения переданного в link
получает значение атрибута в пространстве имен namespaceuri с локальным именем localname текущего элемента
по индексу index устанавливает значение newval
этот метод вызывается в процессе выполнения rewinddir()
создает объект класса filteriterator который состоит из итератора переданного в параметре iterator и фильтров применяемых к нему
создает итератор из чего-либо что является обходимым traversable 
вычисляет побитовое исключающее или xor двух gmp чисел
функция похожа на sscanf() но берёт данные для обработки из файла ассоциируемого с handle и интерпретирует их согласно формату format который описан в документации функции sprintf()
вернет уровень вложенности механизма буферизации вывода
создание нового изображения на основе gd2 или url
задает функцию обработчик внешних сущностей для xml анализатора parser
очищает буфер ошибок libxml
устанавливает новый срок хранения для записи с указанным ключом
возвращает имя файла конкретного изображения в последовательности
возвращает объявленные по умолчанию свойства указанного класса
функция возвращает название организации которая владеет указанным ip адресом
функция проверяет существует ли атрибут property в указанном классе
функция возвращает версию сервера к которому создано соединение переданое в параметре link как integer
выполняет проверку синтаксиса производит верификацию файла указанного в filename проверяя ошибки в коде
устанавливает соединение с сервером cyrus imap
перемещает указатель на следующую запись в массиве
заменяет часть строки string начинающуюся с символа с порядковым номером start и необязательной длиной length строкой replacement и возвращает результат
сортирует массив по значениям
создает большой объект и возвращает его oid
экспортирует отображение
принудительная запись всех буферизованных данных в файл
возвращает значение именованного атрибута или null если атрибут не существует или не находится в узле элемента
задает серию объектов для использования на нижестоящих соединениях
устанавливает режим error_reporting
метод xpath ищет узлы simplexml с дочерними элементами совпадающими с xpath path
возвращает ключ metaphone для строки str
возвращает гиперболический косинус arg определяемый как exp arg + exp -arg / 2
возвращает уникальный идентификатор этого задания
перемещает внутренний указатель array к его первому элементу и возвращает значение первого элемента массива
возвращает идентификатор изображения представляющего изображение полученное из файла с заданным именем
адаптивное изменение размера изображения с данными триангуляции
создает новый объект класса domcomment
используется для изменения информации сохранённой в id3 теге
проверяет имеет ли текущий элемент допустимое значение
устанавливает имя файла или uri для схемы relaxng которые используются при проверке
проверяет знак числа
назначает обработчику идентификатор
получает объект класса splfileinfo для пути текущего файла
получает имя файла без информации о пути к нему
находит элемент по его имени
удаляет значение по заданному индексу
эта функция создает новый объект класса domattr
устанавливает необходимо ли прерывать работу скрипта при отключении клиента
преобразует дату юлианского календаря заданную в jd в дату указанного календаря calendar
генерирует yaml-представление из данных data и отправляет в filename
функция используется для разбиения строки на фрагменты например для приведения результата функции base64_encode() в соответствие с требованиями rfc 2045
определяет является ли изображение image полноцветным
проверяет можно ли создать экземпляр класса
возвращает комментарий элемента используя его индекс
этот метод возвращает simplexmliterator к первому элементу
аналогично только gzgetss() также удаляет все теги html и php из возвращаемой строки
проверяет был ли достигнут конец файла eof 
устанавливает значение указанного канала текущего объекта при условии того что новое значение находится между 0 и 1
функция возвращает состояние текущей сессии
возвращает код ошибки для последнего вызова функции которая могла завершиться удачно или неудачно
возвращает позицию первого вхождения строки needle в строке haystack
возвращает гиперболический тангенс arg определяемый как sinh arg / cosh arg 
получает первый атрибут в данной записи
определяет существует или нет данное смещение ключ 
проверяет создан ли экземпляр класса memcache
возвращает имя функции обрабатывающей данные то есть функции которая будет вызвана для выполнения работы
функция предназначена для использования в качестве callback-функции для ob_start() чтобы облегчить отправку gz-кодированных данных web-браузерам поддерживающим сжатие web-страниц
эта функция осуществляет частичный запрос на указанный uri
эта функция идентична функции ereg() за исключением того что игнорирует регистр при сравнении алфавитных символов
этот метод вызывается в результате вызова closedir()
возвращает массив всех определённых функций
функция производит проверку синтаксиса выбранного файла
возвращает число ошибок tidy встретившихся при рассмотрении документа
устанавливает на searchd количество повторных попыток и задержку между ними
возвращает информацию о состоянии файла в result аргументе callback
создает новый объект класса infiniteiterator на основе объекта-итератора iterator
эта функция возвращает значение расширенного атрибута файла
возвращает конструктор отраженного класса
загружает локальный файл на ftp-сервер
переносит строку по указанному количеству символов
извлекает и возвращает последнее значение параметра array уменьшая размер array на один элемент
подключает другой парсер для bbcode_container
преобразует правильно сформированный xml-документ в указанном файле в объект
возвращает ассоциативный массив соответствующий полученному ряду и сдвигает вперед внутренний указатель результата
перемещает итератор к следующему элементу
возвращает строку input повторенную multiplier раз
данная функция строит запрос по url адресу репозитория и получает список файлов и директорий опционально для конкретной ревизии
читает и возвращает length байт данных с текущей позиции объекта lob
освобождает память выделенную для ispell-данных
устанавливает опции для парсера
вычисляет символ лежандра чисел a и p
создает прямоугольник закрашенный цветом color в заданном изображении image
открывает поток к процессу выполняемую при помощи форка команды заданной в параметре command
форматирует число number как денежную величину
рисует прямоугольник с заданными координатами углов
функция искусственно увеличивает нагрузку добавляя delay секунд к времени исполнения
закрывает базу данных согласно полученному идентификатору
откатывает изменения в базе данных сделанные в рамках текущей транзакции которая была создана методом pdo::begintransaction()
возвращает исходный код php в файл filename исключая комментарии и пробелы
проверяет соединение с базой данных и переподключается если оно нарушено
подписывает переданный в параметре plaintext текст ключом который был прежде установлен с помощью gnupg_addsignkey и возвращает подписанный текст или подпись в зависимости от того что было установлено в gnupg_setsignmode
сравнивает value1 с value2
возвращает список разделенных запятыми конфигурационных файлов проанализированных после php.ini
открывает соединение с базой данных postgresql определенное строкой connection_string
пытается установить время доступа и модификации файла с именем filename в значение time
определяет является ли текущий элемент directoryiterator символической ссылкой
создает специальный fifo файл который существует в файловой системе и выступает в качестве двунаправленной связи для процессов
позволяет использовать режим сопряжения цветов для truecolor-изображений при рисовании
проверяет документ на действительность основываясь на заданной схеме
получает имя расширения
функция открывает для программы соединение к системному журналу
сохраняет значение value на memcache сервере под указанным ключом key
получить дескриптор файла определенный по имени элемента
получает значение по умолчанию аргумента определенной пользователем функции или метода
создает новый объект коллекции
возвращает строку с sqlstate кодом последней ошибки
создает html документ из dom представления
возвращает день недели
проверяет содержит ли массив array еще записи
сливает элементы одного или большего количества массивов таким образом что значения одного массива присоединяются к концу предыдущего
данный метод похож на datetime::__set_state() но работает с datetimeimmutable
возвращает строку содержащую код sqlstate ошибки вызванной в результате выполнения последней операции над запросом которая может завершаться успешно или неуспешно
отправляет данные серверу заданий и всем слушающим клиентам 
проверяет задан ли в классе указанный метод или нет
получает значение атрибута запроса
возвращает цвет объекта imagickpixel в виде строки
эта функция является псевдонимом: finfo_buffer()
закрывает сгенерированный pdf-файл и освобождает все относящиеся к документу ресурсы
этот метод вызывается в результате вызова mkdir()
проверяет соответствует ли позиция указателя в gz-файле позиции eof end-of-file конец файла 
этот метод проверяет содержит ли данный узел атрибуты
функция вернет временную зону и код региона соответствующей страны
позволяет вам реализовать ваш собственный фильтр на любом зарегистрированном потоке используемом со всеми другими функциями файловой системы такими как fopen() fread() и т
возвращает описание операционной системы на которой запущен php
удаляет файл заданный аргументом path с ftp-сервера
пытается создать директорию заданную в pathname
возвращает информацию о состоянии файла в result аргументе callback
получает знаменатель дроби который используется для определения процента выполненной работы
делает скриншот
этот метод вызывается в результате вызова unlink()
проверяет является ли данная переменная булевой
возвращает информацию о сервере который может быть выбран с помощью специального параметра server_key который используется в memcached::*bykey() функциях
проверяет является ли данная переменная объектом
посылает запрос mysql query без автоматической обработки и буферизации её результата в отличие от функции mysql_query()
проверяет является ли метод абстрактным
возвращает сообщение о любой ошибке связанной с ресурсом result
получает имена всех файлов которые были включены в скрипт функциями include include_once require или require_once
ищет в строке subject все совпадения с шаблоном pattern и помещает результат в массив matches в порядке определяемом комбинацией флагов flags
получает количество записей строк в указанной базе данных
позволяет вам реализовать ваши собственные обработчики протоколов и потоков для использования со всеми другими функциями файловой системы такими как fopen() fread() и т
пытается удалить директорию с именем dirname
получение имени пространства имен в котором определен класс
ассоциирует uri пространства имен namespaceuri и префикс prefix с объектом domxpath
сортирует записи в массиве по значениям используя алгоритм натуральной сортировки
возвращает строковое сообщение об ошибке объясняя ошибку сгенерированную последней командой ldap для данного идентификатора соединения link_identifier
возвращает строку содержащую имя базового типа значений колонки результата запроса result с номером field_number
этот метод получает имя xml-тега текущего элемента
копирующий конструктор
разбирает iptc данные на отдельные тэги
возвращает числитель дроби которая используется для вычисления процента выполненной работы
проверяет что для потока данных подходит выбранная кодировка
функция может быть использована для сортировки сразу нескольких массивов или одного многомерного массива в соответствии с одной или несколькими размерностями
возвращает идентификатор владельца текущего элемента directoryiterator в числовом формате
создает array используя значения массива keys в качестве ключей и значения массива values в качестве соответствующих значений
эта функция возвращает копию импортируемого узла и присоединяет ее к текущему документу
экранирует спецсимволы в строке item для использования в запросе sqlite
функция возвращает массив содержащий элементы array1 после их обработки callback -функцией
создает новый объект pdflib с настройками по умолчанию
проверяет существует ли файл на который ссылается объект splfileinfo и является ли он обычным файлом
инициализирует все переменные используемые в syslog функциях
задает имя модуля для трассировки oracle
функция закрывает ресурс сокета указанный параметром socket
возвращает размер используемой памяти указанного ресурса в мегабайтах
вычисляет пересечение массивов используя для сравнения значений callback-функцию
возвращает массив содержащий все записи из результата запроса
возвращает позицию и длину совпавшего с регулярным выражением участка заранее определенной многобайтной строки
отсоединяет итератор
сериализует хранилище
сообщает о достижении внутренним указателем конца объекта lob
удаляет атрибут с именем name из элемента
возвращает идентификатор соединения который используется большинством функций данного модуля
переводит итератор на начало очереди
закрывает открытый gz-файл по его указателю
определяет занято соединение в данный момент или нет
сжимает поле mime -заголовка и представляет его строкой вида: subject: =?iso-8859-1?q?pr=fcfung_f=fcr?= entwerfen von einer mime kopfzeile в примере выше subject является именем поля а часть строки начиная с =?iso-8859-1?... - его значение
устанавливает функцию обратного вызова для принятия пакетов данных для задачи
разделяет узел на два вторая часть начинается с позиции offset полученные узлы становятся братьями
этот метод выполняет те же действия как если бы вы сохранили и затем загрузили документ приводит документ к нормальной форме
возвращает время когда содержимое файла было изменено
функция является интерфейсом к системному вызову gettimeofday 2 
функция проверяет права пользователя на доступ к файлу
вычисляет побитовое или двух gmp чисел
этот метод вызывается для задания метаданных потока
добавляет строку переданную в параметре value в начало существующей записи
ищет позицию первого вхождения подстроки needle в строку haystack
откладывает исполнение программы на заданные в параметрах seconds и nanoseconds число секунд и наносекунд соответственно
возвращает число уникальных цветов в изображении
получив строку содержащую путь к файлу или каталогу данная функция возвратит родительский каталог данного пути
получение абсолютной величины числа
объявляет атрибут name ключевым
получает значение текущего элемента
отправляет процессу process созданному при помощи функции proc_open() сигнал говорящий о том что он должен завершиться
отправляет произвольную команду command ftp-серверу
накладывает случайный шум на изображение
преобразует текущую дату и время в целое число в соответствии со строкой форматирования format
эта функция добавляет пару имя / значение к механизму перезаписи url
возвращает юлианский день для заданной метки времени unix timestamp количество секунд с 1.1.1970 либо для текущего времени если аргумент timestamp не задан
возвращает понятное сообщение об ошибке для последней операции curl
проверяет является ли значение свойством по умолчанию
рисует символ c вертикально на заданных координатах изображения image
возвращает информацию об уровне загрузки cpu
возвращает гиперболический арксинус arg т.е
открывает словарь cracklib указанный в параметре dictionary для использования в функции crack_check()
задает список кодировок encoding_list для механизмов автоматического определения кодировок в строках
возвращает метод сжатия дескриптора директории заданного в zip_entry
сериализует массив
возвращает дескриптор работы присвоенный сервером
возвращает тип сжатия объекта
за исключением направления рисования эта функция ведет себя так же как pdf_arc()
записывает содержимое string в данный gz-файл
возвращает десятичный эквивалент шестнадцатеричного числа содержащегося в аргументе hex_string
yaf_dispatcher will render automatically after dispatches a incoming request you can prevent the rendering by calling this method with flag true замечание : you can simply return false in a action to prevent the auto-rendering of that action
задает обработчик по умолчанию для случаев когда исключение выброшено вне блока try / catch
устанавливает в 1 бит с индексом index в числе a
функция возвращает имя протокола по номеру указанному в параметре number как в / etc / protocols
удаляет большой объект с идентификатором oid
возвращает объем занимаемого дискового пространства для текущего элемента directoryiterator
присваивает переменной var тип type
создаёт копию объекта gearmanclient
данный метод возвращает значение memcached параметра указанного в option
разбивает строку str на подстроки токены используя в качестве разделителей символы из token
читает указанный файловый указатель с текущей позиции до eof конца файла и записывает результат в буфер вывода
восстанавливает исходное значение настройки конфигурации
возвращает значение static статического свойства класса
изменяет права доступа к файлу / директории
определяет доступен ли текущий элемент directoryiterator для чтения
получает целевой путь по ссылке файловой системы
использует схему w3c xsd для проверки документов в процессе работы
возвращает объявленные классы
вычисляет расхождение в массивах с дополнительной проверкой индексов используя для сравнения значений и индексов callback-функцию
создаёт анонимную функцию из переданных параметров и возвращает её уникальное имя
пытается изменить группу которой принадлежит символическая ссылка filename на указанную в group
закрывает ввод который в настоящий момент анализирует объект xmlreader
эта функция проверяет содержит ли данный узел потомков
извлекает узел с заданным индексом index из объекта класса domnodelist
преобразует строку чисел string str в заданном блоке в символ
показывает клиентская библиотека скомпилирована как потокобезопасная или нет
передвигает внутренний указатель массива на одну позицию назад
получает значение свойства
функция разбирает html содержащийся в строке source
распаковывает переданную строку содержащую сжатые bzip2 данные
высвободит всю память занимаемую результатом на который ссылается переданный дескриптор result
проверяет наличие атрибута с именем указанным в параметре name текущего элемента
читает данные из файла с текущей позиции до конца файла и помещает их в буфер выходного потока
проверяет может ли значение переменной быть вызвано в качестве функции
устанавливает идентификатор клиента используемый различными компонентами базы данных для идентификации различных пользователей тонких клиентов которые авторизуются в базе данных как один пользователь
возвращает информацию о path в виде ассоциативного массива или строки в зависимости от options
сообщает является ли namespaceuri пространством имен по умолчанию
складывает left_operand с right_operand
сбрасывает поток каталога переданный в параметре dir_handle таким образом чтобы тот указывал на начало каталога
перемещает итератор к следующей позиции
открывает дескриптор каталога для последующего использования с функциями closedir() readdir() и rewinddir()
проверяет является ли значение данной переменной равным null
этот метод импортирует таблицу стилей в xsltprocessor для трансформации
получает статус соединения в битах
посылает уведомление всем присоединенным наблюдателям
записывает данные из параметра data в текущую позицию внутреннего указателя объекта
disable view engine used in some app that user will output by theirself замечание : you can simply return false in a action to prevent the auto-rendering of that action
эта функция создает новый объект класса domcdatasection
возвращает размер данных которые выдал обработчик
возвращает имя родительского класса для объекта или класса
отправляет на выполнение асинхронный запрос
возвращает эффективной идентификатор группы текущего процесса
устанавливает некоторые произвольные данные приложения которые впоследствии могут быть извлечены gearmanclient::data()
функция возвращает название региона соответствующей страны и кода региона
возвращает значение размера точки объекта
проверяет все ли символы в переданной строке text являются печатными
удаляет имя из файловой системы
возвращает строковое представление контейнера
добавляет новое значение в конец массива
устанавливает функцию которая будет вызвана при php выводе
получает дескриптор задания для выполняющейся задачи
переход к следующему файлу
удаляет перечисленные переменные
фиксирует транзакцию возвращая соединение с базой данных в режим автоматической фиксации до тех пор пока следующий вызов pdo::begintransaction() не начнет новую транзакцию
вычисляет степень похожести двух строк по алгоритму описанному в programming classics: implementing the worlds best algorithms by oliver isbn 0-131-00413-1 
функция преобразует ipv4 адрес интернет сети из стандартного формата строка с точками
псевдо-объектно-ориентированный механизм для чтения каталога
перемещает внутренний указатель результата запроса с которым связан переданный дескриптор к ряду с указанным номером
перемещает указатель на первый элемент в массиве
получает информацию о последней произошедшей ошибке
возвращает последнюю ошибку связанную с указателем на ресурс req
проверяет все ли символы в переданной строке text являются буквенными
возвращает внешний итератор
добавляет атрибут к simplexml-элементу
загружает вектор кодировки из файла и подменяет им текущий вектор шрифта
данная функция позволяет переопределить одно сообщение с использованием множественного числа в текущем домене
эта функция реализует алгоритм сравнения упорядочивающий алфавитно-цифровые строки подобно тому как это сделал бы человек
регистрирует функцию session_write_close() в качестве функции завершения сессии
добавляет текстовый комментарий на изображение
выбирает для работы указанную базу данных на сервере на который ссылается переданный дескриптор соединения
устанавливает опорной точку для рассчета географической удаленности geodistance и включает эту возможность
рисует первый символ аргумента c на изображении с идентификатором image на координатах x y координаты отсчитываются с левого верхнего угла цветом color
работает аналогично memcached::getdelayed() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
возвращает внутреннюю информацию о том где было вызвано исключение
выбирает значение столбца с именем index_or_name если это строка или его порядковый номер index_or_name если это целое число из текущей записи результата запроса result
возвращает позицию указателя поля используемую при последнем вызове mysqli_fetch_field()
возвращает ширину и высоту в виде ассоциативного массива
проверяет реализует ли класс указанный интерфейс или нет
определяет есть ли еще записи в результате запроса
возвращает строку после распаковки из gz-файла её длина ограничивается length - 1 байтами
возвращает строку str в которой первый символ переведен в верхний регистр если этот символ является буквой
создает новый tidy -объект
проверяет соответствие строки string которую вернул метод regexiterator::current() или regexiterator::key() если установлен флаг regexiterator::use_key регулярному выражению
возвращает указатель на результат содержащий список баз данных доступных на указанном сервере
возвращает значение атрибута с именем name для текущего узла
присоединяет splobserver чтобы он мог получать уведомления об обновлениях
эта функция пытается возвратить строку str из которой удалены все null-байты html и php теги
делает метод доступным
эта функция возвращает массив c доступными в настоящее время классами spl
разбивает строку string на массив по регулярному выражению
устанавливает значения одной или нескольких настроек
работает аналогично memcached::add() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
возвращает абсолютное значение number
устанавливает кодировку по умолчанию для текущего соединения
возвращает содержимое элемента по его имени
возвращает массив содержащий все записи одной колонки результата запроса
возвращает итератор для текущего элемента
удаляет запись с ключом key с сервера
выполняет запрос curl
проверяет были ли и куда отправлены заголовки
получает ini-настройки расширения
подключается к searchd и отправляет запрос на генерацию фрагментов указанных документов и возвращает результаты
декодирует поле mime -заголовка
изменяет корневой каталог текущего процесса на переданный в качестве параметра directory и меняет текущий каталог на / 
удаляет одну или несколько настроек обработчика
возвращает время последнего изменения текущего элемента directoryiterator в формате отметки времени unix
возвращает комментарий элемента используя его имя
вычисляет инверсию остатка от деления числа b на число a
возвращает время изменения индексного дескриптора inode файла
возвращает цвет рамки изображения
эта функция является псевдонимом: soapserver::soapserver()
получает сведения об исключении
возвращает максимальное количество элементов в коллекции
может быть выполнена в произвольном цикле вызванном eio_poll()
возвращает значение глобальной цветовой палитры
может быть использована для реализации особых циклов обработки запросов
функция создаёт файл jpeg из изображения image
используется для получения всей информации хранящейся в id3-теге данного файла
возвращает массив содержащий все поддерживаемые кодировки
получает список всех зарегистрированных функций __autoload()
совпадение с регулярным выражением для многобайтовой строки
эта функция определяет будут ли объединённые слова рассматриваться как правильные сложные слова
вызывается когда следующий элемент становится доступен
создает псевдоним alias для пользовательского класса original
удаляет записи переданные в массиве keys с сервера
ищет позицию последнего вхождения подстроки needle в строку haystack
отсекает num элементов с конца коллекции
возвращает строку описывающую соединение которое обозначено в параметре link включая имя хоста сервера 
команда экранирует любые символы в строке которые могут быть использованы для обмана шелл-команд при выполнении произвольных команд
открывает новый словарь и возвращает ссылку на словарь для использования в других функциях pspell
функция идентична функции preg_replace() за исключением того что возвращает только те значения возможно преобразованные в которых найдено совпадение
этот метод проверяет является ли текущий элемент допустимым после вызова simplexmliterator::rewind() или simplexmliterator::next()
отсекает изображение вдоль обозначенного контура с профилем 8bim если он предоставлен
эта функция является псевдонимом: finfo_set_flags()
возвращает размер элемента архива в распакованном состоянии
разбирает строку содержащую временной интервал в обычном удобочитаемом виде и создает на его основе объект класса dateinterval
получает флаги поведения arrayobject
проверяет является ли val не числом nan например как результат выполнения функции acos 1.01 
создает большой объект в базе данных используя локальный файл в качестве источника данных
этот метод вызывается в результате вызова функции fstat()
возвращает высоту заданного изображения image
метод переводит итератор на начало кучи
функция задает значение директивы error_reporting во время выполнения
открывает zip-архив для чтения
устанавливает внутренний указатель в начало объекта lob
возвращает имя терминала связанного с подключением postgresql connection на который выводится отладочная информация
возвращает текущий ключ
запускает на выполнение с низким приоритетом задачу в фоновом режиме возвращая дескриптор задания который может быть использован для запроса состояния выполняющейся задачи
функция экранирует спецсимволы в строке запроса для базы данных
непосредственно записывает данные на сервер
возвращает массив соответствующий обработанному ряду результата запроса и сдвигает внутренний указатель данных вперед
возвращает число завершенных но необработанных процессов
проверяет является ли данная переменная ресурсом
ищет в haystack значение needle
создает объект класса domdocument заданного типа с элементом document
возвращает строку str буквенные символы в которой приведены к верхнему регистру
- это регистронезависимый аналог natsort()
проверяет содержит ли контейнер заданный объект object
работает аналогично memcached::getmulti() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
определяет является ли файловый дескриптор fd ссылкой на валидный терминал
получает версию расширения
добавляет дочерний элемент к узлу и возвращает потомка simplexmlelement
добавляет смайлы для разбора парсером
функция преобразует заданный интернет адрес в формат с точками н-р.: aaa.bbb.ccc.ddd
проверяет все ли символы в переданной строке text являются пробельными
возвращает состояние переданного в качестве аргумента соединения connection
возвращает данные одного столбца следующей строки результирующей таблицы
возвращает цвет в виде массива описанный в объекте imagickpixel
несмотря на то что функция может обрабатывать даты вплоть до 1-го года 3761 до н.э.) практически преобразование для таких ранних дат не имеет смысла
возвращает ширину изображения
освобождает память выделенную для результатов
читает из переданного bzip2 файлового указателя
получает дочерние элементы текущего элемента итератора
используется для определения oid соответствующего вставленной в таблицу строке
эта функция декодирует data предположительно закодированные в utf-8 в iso-8859-1
возвращает итератор к первому элементу
метод похож на memcached::set() но операция добавления завершится неудачей если ключ key уже существует на сервере
запускает выполнение ранее подготовленного параметризованного запроса и ждет результат
проверяет все ли символы в переданной строке text являются буквами в верхнем регистре
преобразует исходный узел в строку применяя таблицы стилей которые установлены с помощью метода xsltprocessor::importstylesheet()
функция нестабильная и совершенно бесполезна для 99% пользователей
этот метод вызывается в результате вызова readdir()
возвращает список всех http заголовков ответа apache
добавляет дескриптор ch к набору дескрипторов mh
этот метод производит анимацию изображения на локальном или удалённом x сервере
преобразует набор символов строки str из кодировки in_charset в out_charset
данный метод похож на datetime::settimezone() но работает с datetimeimmutable
этот метод вызывается в результате вызова fclose()
преобразует png файл в wbmp
устанавливает режим ранжирования
эта функция разбирает url и возвращает ассоциативный массив содержащий все компоненты url которые в нём присутствуют
данный метод похож на datetime::setisodate() но работает с datetimeimmutable
удаляет count символов начиная с позиции offset
возвращает максимальный объем памяти в байтах который был выделен php скрипту
метод класса emptyiterator
проверяет существование индекса index в массиве
возвращает параметр аутентификации по ключу key
посылает запрос cyrus imap серверу
возвращает таймаут операций ввода / вывода в миллисекундах
возвращает одно из полей отчета об ошибках связанного с ресурсом result
возвращает число затронутых строк в последнем insert update или delete запросе связанным с link_identifier
получение массива произошедших ошибок
обходит каждое значение массива array передавая его в callback -функцию
создает постоянное подключение к серверу
возвращает размер заданного файла в байтах
переключает состояние бита интерлейсинга
перемещает итератор к предыдущему узлу
определяет является ли файл исполняемым
задает предпочитаемый синтаксис для извлекаемой записи
функция идентична последовательным успешным вызовам функций fopen() fwrite() и fclose()
функция ищет все пути совпадающие с шаблоном pattern согласно правилам используемым в функции glob() библиотеки libc которые похожи на правила используемые большинством распространённых оболочек
эта функция закрывает resource возвращаемый функцией bbcode_create()
диапазон возможных дат для юлианского календаря: с 4713 года до н.э
возвращает массив array все ключи которого преобразованы в нижний или верхний регистр
извлекает область изображения
создает и возвращает новую анонимную функцию с тем же телом функции и связанными переменными но с другим связанным объектом или новой областью видимости класса
вычисляет md5-хэш строки str используя алгоритм md5 rsa data security inc
вычисляет величины g s и t в выражении a*s + b*t = g = gcd( a b где gcd - наибольший общий делитель
возвращает индекс текущего узла
используется для вызова пользовательских ошибок можно использовать в связке с встроенным обработчиком ошибок а также с пользовательским обработчиком заданным функцией set_error_handler()
возвращает номер начальной строки
рисует текст string на заданных координатах
метод устарел начиная с pecl / gearman 1.0.0
эта функция представляет из себя базовую реализацию метода __autoload()
открывает файл gzip .gz для чтения или записи
осуществляет проверку и установку значения записи новое значение будет сохранено только если другие клиенты не обновили его со времени последнего обращения этим клиентом
возвращает имя заданного дескриптора директории
возвращает количество дней между 21 марта и пасхой в заданном году
возвращает текущий элемент
возвращает список имен таблиц базы данных mysql
проверяет имеет ли внутренний объект-итератор дочерние объекты
преобразует строку в массив
преобразует дату французского республиканского календаря в количество дней в юлианском летоисчислении
удаляет из текущего контейнера все объекты которых нет в другом контейнере
функция возвращает общий размер в байтах указанного раздела диска или каталога
проверяет загружен ли файл php.ini и возвращает его адрес
проверяет корректность даты по переданным аргументам
функция возвращает подробную информацию обо всех типах базы geoip в виде многомерного массива
получение детальной информации о элементе по его индексу
копирует содержание или часть содержания объекта lob в другой объект lob
возвращает строковое представление объекта класса reflectionclass
возвращает тип указанного файла
подсчитывает количество элементов в итераторе
возвращает идентификатор родительского процесса по отношению к текущему процессу
вызывается во время закрытия обертки потока непосредственно перед вызовом метода streamwrapper::stream_flush()
получает ключ текущего элемента с префиксом и суффиксом
получает содержимое буфера без его очистки
обрезает строку string str по ширине width
сериализует объект в значение которое в свою очередь может быть сериализовано функцией json_encode()
закрывает соединение с сервером cyrus imap
устанавливает данные содержащие схему relaxng используемую при проверке
представление в виде строки
возвращает информацию о ссылке
подсчитывает сколько раз подстрока needle встречается в строке haystack
устанавливает флаги которые будут использоваться splfileobject
функция возвращает интернет службу соответствующую заданному в параметре port порту для определенного протокола protocol как в / etc / services
устанавливает режим совпадения при полнотекстовом поиске
возвращает текущее состояние транзакции на сервере
задает атрибут объекта pdostatement
перемещает внутренний указатель большого объекта
функция убирает флаг o_nonblock с сокета указанного в параметре socket
возвращает строку с сообщением о последней обнаруженной ошибке
возвращает длину гипотенузы прямоугольного треугольника с длинами сторон x и y или расстояние точки x y до начала координат эквивалентно sqrt(x*x + y*y)
функция задает критерий сортировки и включает сортировку по z39.50
сортирует записи в массиве по ключам используя функцию сортировки определенную пользователем
тестирует реализацию специфичной возможности feature объекта domimplementation
применяет заданный фильтр filtertype к изображению image
проверяет взломостойкость переданного пароля по специальному словарю
используется для отправки http заголовка
сбрасывает определенные ограничения поиска
устанавливает смещение в файле на который ссылается handle
возвращает массив типов описанных в wsdl для веб-службы
возвращает число записей сохраненных в результате предыдущей операции поиска
проверяет является ли текущий узел php-кодом
создает действие которое может быть применено к различным объектам или событиям
функция работает идентично функции getimagesize() с той разницей что getimagesizefromstring() принимает данные изображения в виде строки в качестве первого аргумента вместо имени файла
работает аналогично функции imagecolorallocate() но еще добавляет к цвету параметр alpha отвечающий за прозрачность
добавляет фильтр размытия к изображению
задает режим работы
изменяет смещение файлового указателя связанного с потоком ресурсом сокета или файловым описателем fd на значение offset
этот метод подсчитывает количество дочерних элементов у текущего элемента
возвращает версию клиентских библиотек svn
возвращает переменную окружения сервера apache указанную параметром variable
возвращает идентификатор текущего потока
используется для удаления id3-тега
проверяет является ли класс окончательным final 
переводит файловый указатель в начало файла
устанавливает таймаут для операций ввода / вывода
запускает на выполнение задачу с низким приоритетом и возвращает строку содержащую результат
эта функция создает экземпляр класса domentityreference
функция позволяет вам остановить передачу поступающих исходящих или всех данных по умолчанию через сокет socket
считывает встроенный эскиз из tiff или jpeg изображения
проверяет определен ли указанный интерфейс
проверяет что аргумент передан по ссылке
устанавливает предельное количество запросов в группе
данный метод похож на datetime::getlasterrors() но работает с datetimeimmutable
распаковывает строку
собирает статистику на файл или символическую ссылку с именем filename
объявляет атрибут с заданным локальным именем localname и пространством имен namespaceuri идентифицирующим элемент атрибутом
возвращает объект класса reflectionextension для расширения определенного в классе
проверяет является ли класс абстрактным
вывод gd-изображения в filename
возвращает квадратный корень из arg
возвращает переменную типа string содержащую путь до текущего управляющего терминала данного процесса
устанавливает файл для записи профилирующей информации во время обработки таблиц стилей
возвращает путь к файлу
добавляет значение value как последний элемент массива
этот метод получает класс arrayiterator который используется для хранения итераторов добавленных с помощью метода appenditerator::append()
возвращает ключ текущего элемента
ждет от сервера задание а затем вызывает соответствующую callback-функцию для его обработки
функция устанавливает кодировку в которой будут возвращаться сообщения из domain такими функциями как gettext()
сжимает переданную строку и возвращает ее в виде закодированных данных bzip2
возвращает атрибуты элемента архива зависящие от операционной системы
устанавливает параметры для указанного контекста
функция принимает один два или четыре аргумента не три :
возвращает таблицу преобразований используемую функциями htmlspecialchars() и htmlentities()
устанавливает параметр для указанного сеанса curl
устанавливает буферизацию для операций записи на заданном потоке stream в число buffer байт
проверяет является ли тип переменной целочисленным
возвращает имя по идентификатору жанра
эта функция может оказаться полезной при выполнении запросов на этапе разработки и тестирования
перемещает все присоединенные итераторы к своим следующим элементам
определяет заголовки которые буду отправлены с soap-запросами
получает объявляющий класс
проверяет является ли файл исполняемым
возвращает определённые в классе константы
получает имя свойства
(ре-)инициализирует eio
функция возвращает array наоборот то есть ключи массива array становятся значениями а значения массива array становятся ключами
возвращает версию клиента в виде целого числа
задает cookie которое будет передано клиенту вместе с другими http заголовками
возвращает размер файла в байтах
эта функция идентична htmlspecialchars() за исключением того что htmlentities() преобразует все символы в соответствющие html-сущности для тех символов для которых html сущности существуют 
получение цветов соответствующих заданному индексу
возвращает список адресов ipv4 в которые разрешается доменное имя узла hostname
вызывает отображенный метод
работает аналогично memcached::setmulti() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
возвращает косинус параметра arg
конструктор создает объект soapclient в wsdl или не-wsdl режиме
преобразование изображения с помощью аффинной матрицы
создает и заполняет массив значением параметра value используя значения массива keys в качестве ключей
возвращает строковое сообщение об ошибке объясняющее код ошибки errno
декодирует несколько полей заголовка mime за один раз
получает время последней модификации запущенного скрипта
создает новый файловый объект
экранирует символы которые воспринимаются как специальные операторы парсером запроса
возвращает текущее значение настройки magic_quotes_gpc
проверяет является ли значение переданное в поле field из текущего ряда statement равным null
возвращает массив строк полученных разбиением строки string с использованием delimiter в качестве разделителя
возвращает ассоциативный массив с кодом и строкой ошибки произошедшей с переданным файловым указателем
задает обработчик по умолчанию для xml анализатора parser
проверяет все ли символы в переданной строке text являются буквенно-цифровыми
производит relaxng проверку документа основываясь на заданной rng схеме
возвращает пространства имен используемые в документе
рассчитывает количество дней с начала юлианской эпохи до даты в заданном календаре calendar
определяет максимальную допустимую глубину вложенности элементов
открывает большой объект базы данных и возвращает его ресурс
установка / получение кодировки символов http вывода
форсирует запись всех буферизированных bzip2 данных в файл на который ссылается указатель bz
проверяет является ли функция устаревшей
удаление конкретной записи из директории ldap
закрывает словарь указанный в параметре dictionary
добавляет значение value с приоритетом priority в очередь
изменяет права доступа к файлу дескриптор которого указан в fd
записывает массив fields в файл в виде строки csv
создаёт объект object класса reflectionextension
сбрасывает буфер вывода возвращая его содержимое в виде строки и отключает буферизацию вывода
устанавливает допустимый диапазон id документов
вычисляет остаток от деления числа n на d
создает новый объект класса domelement
функция позволяет переопределить текущий домен domain для одного сообщения
проверяет принадлежит ли объект object к данному классу или содержит данный класс в числе своих предков
выдает параметры рамки обрамляющей текст написанный шрифтом postscript type1
останавливает трассировку запущенную функцией pg_trace()
подготавливает sql-запрос для выполнения и возвращает объект sqlite3stmt
значение errno в случае возвращаемого значения gearman_errno
возвращает reflected отражённые свойства
проверяет является ли текущий элемент directoryiterator допустимым файлом
эта функция является полным аналогом функции fsockopen() с той лишь разницей что соединение не закрывается после завершения работы скрипта
возвращает атрибут в пространстве имен namespaceuri с локальным именем localname для текущего элемента в виде узла
возвращает время захода солнца для определенных дня заданного аргументом timestamp и местоположения
нет действия
отключение / включение возможности загружать внешние сущности
возвращает статус обработки задания
возвращает данные ассоциированные с объектом на который указывает итератор
закрывает дескриптор zip-архива
резервирует или использует существующий блок разделяемой памяти
производит смену регистра символов в строке string в соответствии с режимом mode
возвращает идентификатор текущего процесса
возвращает трассировку стека исключения в виде строки
добавляет новый фильтр по диапазону значений для поля типа float к имеющемуся списку фильтров
используйте чтобы узнать количество столбцов в результирующем наборе который представляет объект pdostatement
возвращает свойства класса по умолчанию включая наследованные свойства 
получает текущее состояние выполнения задания запущенного в фоновом режиме
перемотка на первый элемент первого внутреннего итератора
получает число столбцов в запросе заданном в statement
возвращает трассировку стека исключения
устанавливает позицию внутреннего указателя объекта lob
освобождение памяти выделенной для сессии агента
переименование / перемещение записи определённой dn
проверяет поддерживается ли заданное свойство feature в определенной версии version
получение строкового представления ошибки xml анализатора в соответствии с переданным кодом ошибки code
возвращает номер ошибки произошедшей в последней posix функции завершившейся неудачей
похожа на функцию file_get_contents() за исключением того что stream_get_contents() работает с уже открытым ресурсом потока и возвращает оставшуюся часть содержимого в строку размером до maxlength байт и начиная с указанного смещения offset
распаковывает сжатую строку
вызывает отображенную функцию
определяет можно ли для текущего элемента создать итератор методом recursiveiterator::getchildren()
декодирует строку из формата uuencode в обычный вид
перемещает указатель к полю с указанным смещением
получает номер строки завершения описания функции
делает свойство доступным
отменяет выполнение асинхронного запроса отправленного функциями pg_send_query() pg_send_query_params() или pg_send_execute()
данная функция идентична функции fgets() с той только разницей что fgetss() осуществляет отбрасывание любых html и php-тегов из прочитанной строки
добавляет указанный сервер в пул
возвращает формат imagick объекта
устанавливает весовые коэффициенты индексов и включает суммирование соответствующих весов для различных индексов
этот метод позволяет зарегистрировать свой собственный расширенный dom класс чтобы впоследствии использовать его в php dom расширении
возвращает префикс пространства имен узла из uri пространства имен
удаляет функцию из spl очереди реализаций метода __autoload
эта функция создает новый экземпляр класса domcomment
возвращает имя файла текущего элемента directoryiterator
создает специальный или обычный файл
возвращает величину размера спектра для объекта imagick
отсортирует массив используя для сравнения его ключей функцию предоставленную пользователем
складывает два числа
закрывает поток связанный с каталогом и переданный в качестве параметра dir_handle
возвращает информацию о последней операции
возвращает число строк затронутых последним insert update replace или delete запросом
возвращает целочисленный идентификатор базового типа oid значений колонки результата запроса result с номером field_number
вычитает число b из числа a и возвращает результат
включает и выключает внутреннюю отладку
определяет известно ли серверу задач об этом задании
упаковывает заданные аргументы в бинарную строку согласно формату в параметре format
выключает режим автоматической фиксации транзакции
возвращает контекст ранее установленный с помощью gearmanclient::setcontext()
функция похожа на функцию pclose() за исключением того что она работает только с процессами открытыми при помощи функции proc_open()
вычисляет наибольший общий делитель чисел a и b
кодирует строку с помощью алгоритма uuencode
получает функцию в которой аргумент объявлен
освобождает память внутренне выделенную для хранения результата
отправляет указанные данные data через сокет socket
возвращает округлённое значение val с указанной точностью precision количество цифр после запятой 
возвращает название колонки с указанным индексом
возвращает строку с информацией о версии сервера oracle и доступных опциях
возвращает дочерние элементы внутреннего итератора в виде объекта recursivefilteriterator
умножает число a на b и возвращает результат
возвращает позицию первого вхождения подстроки needle в строке haystack
работает аналогично memcached::prepend() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
создание нового изображения на основе gd файла или url
этот метод возвращает объект simplexmliterator содержащий вложенные элементы текущего элемента simplexmliterator
устанавливает значение заданной настройки конфигурации
проверяет является ли val допустимым конечным числом на данной платформе
в поведении аналогичен carp::cluck в perl
преобразует заданные коды символов в строке string str из кодов в числовые html-ссылки
получить записи хранящиеся в результате
сравнивает две php-стандартизованные строки с номерами версий
вывод или сохранение в формате xbm изображения image
сохраняет данные из параметра data в объект lob
устанавливает или изменяет настройки парсера
выводит или сохраняет png изображение image
возвращает всю строку haystack начиная с первого вхождения needle включительно
проверяет является ли метод конструктором
добавляет список серверов задач которые могут использоваться для выполнения задачи
устанавливает эффективный идентификатор группы для текущего процесса
возвращает текущий статус сервера
задает количество чисел после десятичной точки по умолчанию для bc math функций которые не могут явно получить это число в виде аргумента
возвращает подстроку строки haystack начиная с первого вхождения needle и включая его и до конца строки haystack
возвращает итератор обратно на первый элемент
у каждого массива имеется внутренний указатель на его текущий элемент который инициализирован первым элементом добавленным в массив
получение объявляющего класса
функция заменяет дочерний узел oldnode новым узлом
возвращает значение элемента с индексом index начиная с нуля 
добавляет запрос в группу запросов
добавляет строку data в конец символьных данных узла
возвращает количество строк в результате запроса postgresql
возвращает строку в которой последовательность знаков процента % и следующие за ним два шестнадцатеричных числа заменены буквенными символами
позиционирует курсор на атрибуте с заданным именем
возвращает тангенс параметра arg
возвращает массив содержащий статистику всех доступных memcache серверов
освобождает connection
осуществляет попытку смены группы файла filename на группу group
проверяет является ли файл доступным для чтения
разбирает xml документ
возвращает либо информацию о состоянии буфера вывода верхнего уровня либо если full_status установлен в true массив уровней всех активных буферов
используйте этот метод для проверки того является ли файл на который ссылается объект splfileinfo ссылкой
возвращает массив имен методов класса
записывает строку отформатированную в соответствии с параметром format в поток handle
проверяет и преобразовывает значения из assoc_array в приемлемые для sql сервера
в отличие от strlen() iconv_strlen() учитывает кодировку строки
этот метод вызывается в результате вызова fflush()
возвращает параметры cookie сессии
определяет доступен ли текущий элемент directoryiterator для записи
переводит указатель на начало директории
удаляет элемент файл или каталог - прим.пер.) в архиве используя его индекс
распаковывает данные из бинарной строки в массив согласно заданному в format формату
возвращает последовательность элементов массива array определённую параметрами offset и length
заполняет массив num элементами со значением value начиная с ключа start_index
записывает строку созданную с использованием строки формата format в поток дескриптор которого передается в параметре handle
задает имя класса объекты которого будут создаваться при вызове методов splfileinfo::getfileinfo() и splfileinfo::getpathinfo()
закрывает текущую сессию
экземпляр runkit_sandbox_parent созданный внутри окружения runkit_sandbox предоставляет набор контролируемых средств для доступа к внешнему окружению из песочницы
функция возвращает id который можно использовать для вывода логотипа php используя встроенное изображение
при работе в неблокирующем режиме ввода / вывода заставляет обработчика ожидать задания от какого-либо сервера заданий gearman
получает строку для помещения после текущего элемента
отправляет изменения в файлах локальной рабочей копии перечисленные в массиве targets в репозиторий с сообщением log
создает новый объект класса parentiterator на основе объекта-итератора
возвращает абсолютный путь через аргумент result функции callback
получает результат выполнения key() зарегистрированных итераторов
работает так же как imagick::thresholdimage() но изменяются только пиксели ниже порогового значения в то время как остальные пиксели остаются неизменными
запрашивает статус searchd и возвращает массив в формате пар ключ-значение
этот метод вызывается в результате вызова rmdir()
определяет была ли установлена переменная значением отличным от null
удаляет length элементов расположенных на расстоянии offset из массива input и заменяет их элементами массива replacement если он передан в качестве параметра
читает распаковывая до length байт из gz-файла по указателю на него
рисует точку пиксел на заданных координатах
возвращает массив содержащий все элементы array1 имеющие ключи содержащиеся во всех последующих параметрах.
фиксирует удаление из базы данных окончательно удаляет записи которые были помечены на удаление с помощью dbase_delete_record()
эта функция подобна strcmp() за исключением того что можно указать максимальное количество символов в обоих строках которые будут участвовать в сравнении
очищает истекшие сессии
сбрасывает подключение
эта функция создает новый объект класса domattr
сопоставляет переменную php столбцу результата запроса полученного с помощью oci_fetch()
устанавливает php umask в значение mask & 0777 и возвращает старую umask
возвращает массив содержащий следующую строку результата запроса
является противоположностью функции htmlentities()
эта функция может вызываться для присоединения бакета в цепочку бакетов
устанавливает количество рядов которые будут выбраны в буфер клиентскими библиотеками oracle сразу после удачного вызова oci_execute() и для каждого последующего внутреннего запроса данных к базе
посылает команду allo ftp-серверу для резервирования места под загружаемый файл
возвращает объект domnodelist со всеми элементами с заданным локальным именем и uri пространства имен
задает значение именованной или неименованной псевдопеременной в подготовленном sql запросе
добавляет высокоприоритетную задачу для параллельной работы с другими задачами
возвращает string содержащую абсолютный путь до текущего терминального устройства которое открыто и связано с файловым дескриптором fd
добавляет низкоприоритетную фоновую задачу для параллельной работы с другими задачами
эта функция сортирует массив в обратном порядке от большего к меньшему 
синхронизирует данные между фронтендом postgresql обычно процессом веб-сервера и сервером postgresql после завершения копирования данных совершенных с помощью функции pg_put_line()
получает строку string mime набора символов для заданной кодировки
вычисляет base возводится в степень exp остаток от целочисленного деления на mod
возвращает текущую позицию указателя в буферизованном результирующем наборе result
закрывает fdf-документ
получение количества аргументов в определении функции как обязательных так и опциональных
создаёт новый ресурс сокета типа af_inet слушающий на всех локальных интерфейсах указанный порт в ожидании новых соединений
переинициализирует генератор случайных чисел параметром seed или случайным числом если seed не указан
возвращает содержимое элемента по его индексу
будет срабатывать при усечении потока функцией ftruncate()
sets the miter limit.возвращает true в случае успешного завершения или false в случае возникновения ошибки
возвращает реальный размер заданного дескриптора директории
удаляет элемент файл или каталог - прим.пер.) в архиве используя его имя
возвращает длину участка от начала строки subject содержащий только символы из mask
возвращает время последней модификации удалённого файла
вставляет записи из массива assoc_array в таблицу table_name
вычисляет побитовое и двух gmp чисел
выполнение запросов останавливается если время выполнения превышает nseconds секунд
функция экранирует unescaped_string таким образом после чего её можно безопасно использовать в mysql_query()
закрывает указанный идентификатор соединения с сервером и освобождает resource
освобождает соединение с сервером давая возможность запускать другие sql запросы
создаёт новый объект splfileinfo для указанного имени файла
возвращает массив содержащий значения array1 содержащиеся во всех последующих параметрах
add a section of a cubic bézier curve described by the three given control points to the current path
функция обратного вызова ob_start() для восстановление буфера
читает содержимое текущего узла как строку
применяет пользовательскую функцию callback к каждому элементу массива input
возвращает массив содержащий значения array1 имеющие ключи содержащиеся во всех последующих параметрах
возвращает атрибуты записи
создает заготовку sql выражения на сервере для последующего запуска функциями pg_execute() или pg_send_execute()
этот метод распаковывает все символические ссылки разрешает относительные пути и возвращает абсолютный путь к файлу
проверяет является ли класс встроенным в расширение или в ядро а не пользовательским
возвращает минимальную версию программы rar т.е
проверяет что функция определена в пространстве имен
добавляет запрос с текущими настройками к очереди запросов
десериализует хранилище из строкового представления полученного с помощью spldoublylinkedlist::serialize()
выводит информацию о подготовленном запросе в выходной поток
создает массив
возвращает количество строк измененных запросом insert update или delete
заменяет текущий массив array на другой массив array или объект object 
возвращает строку содержащую восьмеричное представление указанного аргумента number
аналогичен методу memcached::setoption() но принимает массив параметров
получает текущий ключ
переименовывает элемент по его индексу
выбирает дочерние элементы внутреннего итератора подходящие под условия фильтра
вычисляет md5-хэш файла имя которого задано аргументом filename используя алгоритм md5 rsa data security inc
метод вызывается после выполнения recursiveiteratoriterator::getchildren() а результат его работы аналогичен вызову recursiveiteratoriterator::rewind()
возвращает строку из одного символа код которого задан аргументом ascii
возвращает количество секунд прошедших с начала эпохи unix the unix epoch 1 января 1970 00:00:00 gmt до текущего времени
возвращает размер сжатого элемента архива
определяет был ли достигнут конец файла
эта функция устанавливает расширенный атрибут файла
сравнивает array1 c array2 и возвращает разницу
сжимает данные с указанным кодированием
функция записывает в сокет socket данные из указанного буфера buffer
посылает на сервер задач и всем слушающим клиентам статус текущей работы
возвращает размер данных которые должен переработать обработчик заданий в байтах
читает большой объект и посылает данные напрямую в броузер после отправки всех необходимых заголовков
возвращает глобальное значение гравитации объекта imagick
увеличивает числовое значение записи на величину указанную в параметре offset
возвращает код любой bzip2 ошибки произошедшей с переданным указателем на файл
функция возвращает метку времени unix соответствующую дате и времени заданным аргументами
возвращает доменное имя узла по адресу ip_address
останавливает обозначенную службу
проверяет являются ли все символы в строке text шестнадцатеричными цифрами
генерирует url-кодированную строку запроса из предоставленного ассоциативного или индексного массива
создает новое соединение с сервером oracle и выполняет вход
задает функцию которая будет вызываться когда обработчик задания пошлет исключение
включает или выключает пассивный режим
сбрасывает курсор файлового указателя handle на начало файлового потока
загружает php расширение заданное аргументом library
распаковывает любые raw / gzip / zlib закодированные данные
возвращает десятичный эквивалент двоичного числа binary_string
этот метод включает возможность использовать php функции в xpath выражениях
адаптивное изменение резкости изображения с большей интенсивностью на краях изображения и с меньшей ближе к середине
возвращает определение таблицы table_name в виде массива
возвращает идентификатор группы текущего процесса
эта функция возвращает ключ текущего элемента массива
получает документируемый комментарий из описания функции
отменяет запрос определенный в req
функция возвращает дескриптор соединения в случае успеха и ноль в случае ошибки
извлекает строку из файла и разбирает ее в соответствии с форматом csv
добавляет setting в среду сервера
добавляет переданные в качестве аргументов элементы в начало массива array
используется для установки функции которая будет вызвана когда задача будет выполнена
при передаче строки с путем к файлу или каталогу данная функция вернет последний компонент имени из данного пути
возвращает атрибут с именем name текущего элемента в виде узла
устанавливает комментарий к элементу по его индексу
возвращает список загруженных модулей сервера apache
проверяет может ли метод иметь потомков final 
для обеспечения большей производительности при использовании функций stat() lstat() или любой другой функции перечисленных в приведенном ниже списке php кеширует результаты их выполнения
запускает выполнение задачи в фоновом режиме возвращая дескриптор задания который может быть использован для запроса состояния выполняющейся задачи
определяет к какому типу принадлежит текущей элемент directoryiterator
добавляет фоновую задачу для параллельной работы с другими задачами
экспортирует все методы из заданного класса
получает следующий результат последнего запроса
возвращает гиперболический арктангенс arg т.е
создает объект gearmanworker представляющий обработчик который подключается к серверу задач и выполняет полученное от сервера задание
конвертирует строку из формата utf-8 в формат utf-16
возвращает строку содержащую версию библиотеки клиента mysql
запускает на выполнение с высоким приоритетом задачу в фоновом режиме возвращая дескриптор задания который может быть в дальнейшем использован для запроса состояния выполняющейся задачи
эта функция обязательно вернет идентификатор цвета для выбранного цвета либо ближайшую возможную его альтернативу
возвращает расстояние хэмминга для чисел a и b
postgresql поддерживает автоматическое преобразование наборов символов между сервером и клиентом для некоторых кодировок
эта функция сортирует массив таким образом что сохраняются отношения между ключами и значениями
задает функцию которая будет вызываться когда обработчик заданий пришлет предупреждение
создает новый объект класса domxpath
возвращает число строк в результате запроса
retrieve assigned varaiable замечание : parameter can be empty since 2.1.11
определяет является ли текущий элемент массивом array или объектом object 
открывает новый zip-архив для чтения записи или изменения
этот метод может быть использован для определения того является ли файл каталогом
возвращает все заголовки для текущего http-запроса
создает новый объект класса reflectionmethod
закрывает файл указанный в fd
получает список требуемых и конфликтующих зависимостей
этот метод вызывается в следующих случаях: при вызове функции flock() при вызове file_put_contents() когда flags содержит lock_ex при вызове stream_set_blocking() и при закрытии потока lock_un 
отправляет указанную команду site ftp-серверу
отменяет группу запросов указатель на которую определен в grp
получает имена модификаторов
если для определенного дескриптора была установлена опция curlopt_returntransfer то эта функция вернет содержимое этого curl дескриптора в виде строки
эта функция подобна strcasecmp() за исключением того что можно указать максимальное количество символов в обоих строках которые будут участвовать в сравнении
функция возвращает коды страны и региона соответствующих имени хоста или ip адресу
возвращает значение переменной var в виде числа с плавающей точкой float 
функция возвращает версию базы geoip соответствующую определению в бинарном файле
возвращает имя класса итератора массива который используемый arrayobject::getiterator()
перемещает итератор к следующему элементу
возвращает идентификатор цвета в соответствии с заданными rgb компонентами
функция похожа на include за исключением того что весь код вне функций и объявлений классов игнорируется
посылает параметризованный запрос на сервер и ждет результат
устанавливает данные содержащие xml для разбора
возвращает данные поля field текущей строки возвращаемой функцией oci_fetch()
отправляет сигнал sig процессу с идентификатором pid
возвращает код ошибки последнего вызова функции mysqli завершившейся успехом или провалом
функция отправляет len байт в сокет socket из буфера buf
представление в виде строки
собирает статистическую информацию о файле filename
эта функция возвращает текущую версию расширения в виде строки
вернет порядковый номер поля с именем field_name в результате запроса result
перемещает итератор к следующему узлу
создает регулярное выражение для регистронезависимого сравнения
получает текущее качество сжатия изображения
используется для запроса информации о состоянии с сервера gearman который будет вызывать указанный обратный вызов статуса устанавливаются с помощью gearmanclient::setstatuscallback() 
производит заливку начиная с заданных координат верхний левый угол имеет координаты 0 0 цветом color в изображении image
присваивает коллекции значение другой ранее созданной коллекции
начинает потоковое или датаграммное соединение с удалённым сокетом указанным параметром remote_socket
получает имя xml элемента
эта функция возвращает уникальный идентификатор текущего потока выполнения
вычитает число right_operand из left_operand
возвращает строковые данные хранимые в участке разделяемой памяти
перемещает курсора к следующему атрибуту если курсор спозиционирован на атрибуте или перемещает позицию на первый атрибут если спозиционирован на элементе
возвращает массив содержащий версии клиента протокола клиент-серверного взаимодействия и сервера
десериализует конвертирует в значение php - прим.пер.) сериализованный объект arrayobject
этот метод определяет был ли php сконфигурирован с библиотекой exslt
заменяет данную запись в базе данных на заданные значения
обнаружить dn записи в результате
функция похожа на функцию printf() но используется не для вывода а для ввода данных
возвращает ассоциативный массив с именами и значениями всех предопределенных констант
возвращает короткое имя id3v2 кадра
список всех используемых обработчиков вывода
добавляет filtername в список фильтров прикреплённых к stream
добавляет к процессу pid идентификатор группы pgid
получает содержимое кэша реального пути
создает экземпляр gearmanclient представляющий клиента который соединяется с сервером заданий и передаёт задачи для выполнения
возвращает логическое значение boolean которое является признаком того что разбираемый документ является синтаксически правильным
данный метод похож на datetime::sub() но работает с datetimeimmutable
данная функция выполняет разбор строки в формате csv и возвращает массив с полученными из строки полями
закрывает большой объект
масштабирует систему координат
устанавливает режим подписывания
этот метод вызывается в результате вызова функции fseek() для определения текущей позиции
получает остаток от деления left_operand на modulus
возвращает список текущих процессов на сервере mysql
функция возвращает имя файла соответствующей базы geoip
проверяет совпадает ли переданный параметр string с указанным шаблоном подстановок оболочки pattern
привязывает имя указанное в параметре address к сокету описанному в параметре socket
возвращает итератор в начало
устанавливает смещение offset для получаемого от сервера набора результатов и количество записей limit которое необходимо получить с данным смещением
получает значение из предоставленного смещения
переводит итератор на первый элемент контейнера
проверяет документ на действительность основываясь на его dtd
проверяет ожидает ли аргумент массив в качестве значения
возвращает локальное или удалённое название указанного сокетного соединения
возвращает e в степени arg
устанавливает флаги регулярного выражения
сравнивает value1 с value2
получает уникальный идентификатор с префиксом основанный на текущем времени в микросекундах
возвращает точность поля field
выполняет безопасную с точки зрения многобайтных кодировок операцию strrpos() основываясь на количестве символов
callback-функция типа callable используемая параметром контекста notification вызываемая во время события
возвращает индекс текущего узла
ищет позицию первого вхождения подстроки needle в строку haystack
получает сообщение агента об ошибке
преобразует строку закодированную в internal_encoding в строку закодированную в output_encoding
представление в виде строки
данная функция устанавливает домен в котором будет производиться поиск при вызове функции gettext() обычно называется именем приложения
определяет является ли текущий элемент directoryiterator директорией
создает дубликат дескриптора файла
принимает закодированную в json строку и преобразует ее в переменную php
возвращает заданный лимит ресурсов
возвращает запись которая ранее была сохранена под ключом key
функция устанавливает опцию указанную в параметре optname на уровне протокола level в значение указанное параметром optval для сокета socket
возвращает объем памяти в байтах занимаемый значением поля результата запроса postgresql result
разделяет dn возвращенный функцией ldap_get_dn() и разбивает его на составные части
устанавливает значение по заданному индексу index в newval
первый прототип работает при связке с libmcrypt 2.2.x второй - при связке с libmcrypt 2.4.x или выше
возвращает модифицированную строку в которой перед каждым символом из следующего списка:
замещает значения массива array1 значениями с такими же ключами из других переданных массивов
принимает массив array и возвращает новый массив содержащем элементы исходного массива в обратном порядке
возвращает число доступных предупреждений найденных в рассмотренном документе
возвращает определенную константу
получает текущий элемент массива
находит последнюю позицию подстроки needle в строке haystack
обрезает объект lob
устанавливает курсор на атрибуте основываясь на его позиции
делит число n на d используя быстрый алгоритм деления без остатка
создает базу данных dbase с заданными свойствами
устанавливает настройки локали
проверяет есть ли в списке определённых функций как встроенных так и пользовательских функция function_name
эта функция устанавливает соответствие индекса в палитре заданному цвету
проверяет является ли метод общедоступным public 
работает аналогично memcached::deletemulti() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом keys на конкретный сервер
возвращает информацию о таблице с переданным именем
функция возвращает массив имен всех скомпилированных и загруженных в php интерпретаторе модулей
вызывает отображенный метод и передает ему аргументы в виде массива
эта функция возвращает все имеющиеся в настоящее время драйверы pdo которые можно использовать в dsn -параметре pdo::__construct()
возвращает имя таблицы из result
рисует эллипс с центром в заданных координатах изображения image
данный метод похож на datetime::settimestamp() но работает с datetimeimmutable
эта функция сортирует элементы массива таким образом что сохраняются отношения между ключами и значениями
возвращает высоту в пикселах символа заданного шрифта
получить строку с восстановленным html
показывает существует ли атрибут в пространстве имен namespaceuri с именем localname в составе элемента
эта функция может задавать расширения файлов в которых callback-функция __autoload() будет искать описания классов и интерфейсов
данная функция сжимает строку используя формат данных zlib
проверяет является ли метод защищенным protected 
возвращает код ошибки последней операции curl
составляет полное имя файла из параметра filename используя пути включения в соответствии с теми же правилами что и функции fopen() / include
возвращает информацию о группе используя её имя
проверяет отключена ли функция с помощью директивы disable_functions
возвращает номер порта соответствующего заданному соединению postgresql connection
выставляет итератор массива в начало
уничтожает сессию
эта функция возвращает уникальный идентификатор для заданного объекта
переводит символы из кодировки iso-8859 в t61
этот метод является регистронезависимой версией arrayobject::natsort
проверяет определён ли класс в пространстве имён
удаляет предварительно установленный функцией header() http заголовок
получает флаги настройки объекта splfileobject в виде целого числа типа integer
функция получает стандартное имя хоста для локального компьютера
записывает строку в переданный bzip2 файловый поток
экспортирует ключ fingerprint
возвращает набор прав для текущего элемента directoryiterator
этот метод устанавливает значение параметра для memcached переданного в option
возвращает строковое представление объекта reflection method
получает позицию аргумента в списке аргументов
возвращает объект свойства которого соответствуют именам полей выборки
возвращает путь и имя файла текущего файла
форматирует дату / время с учетом текущих настроек локали
выбирает все строки из результата запроса в двумерный массив
записывает данные сессии в хранилище сессий
эта функция конфигурирует ccl-парсер запросов для сервера с определениями точек доступа ccl-квалификаторов и их отображения в rpn
возвращает размер указанного файла
возвращает информацию о правах доступа на файл
используется для получения размера блока разделяемой памяти в байтах
возвращает последнее сообщение об ошибке после вызова mysqli_connect()
устанавливает условия выборки содержит конкретные атрибуты для выборки и выражения для расчета и последующей выборки
возвращает идентификатор изображения представляющего изображение полученное из файла с заданным именем
копирующий конструктор
привязывает обратные вызовы для cyrus imap соединения
эта функция возвращает строку или массив в котором все вхождения search в subject заменены на replace
эта функция выводит список разработчиков php модулей и т.п
работает аналогично методу memcached::append() за исключением того что произвольный server_key может быть использован для определения сервера и установки key на конкретный сервер
закрывает открытый или созданный архив и сохраняет изменения
добавляет сервера указанные в массиве servers в общий пул
возвращает предупреждения и ошибки возникшие при разборе указанного документа
возвращает длину строки количество символов значения поля при выводе результата result
возвращает текущую позицию отступ от начала внутреннего указателя большого объекта
освобождает все ресурсы занимаемые курсором или sql-выражением которое было возвращено функцией oci_parse() или получено от сервера oracle
эта функция реализует алгоритм сортировки при котором порядок буквенно-цифровых строк будет привычным для человека
посылает команду site exec command на ftp-сервер
создаёт потоковый или датаграммный сокет на указанном local_socket
этот метод реализует алгоритм сортировки при котором порядок цифробуквенных строк будет привычным для человека сохраняя при этом связь ключ / значение
эта функция сортирует массив таким образом что его индексы сохраняют отношения с элементами с которыми ранее были ассоциированы с помощью callback-функции предоставленной пользователем
сериализует arrayobject преобразует в пригодное для хранения представление - прим
экранирует спецсимволы в строке с данными типа bytea
считывает начальные байты изображения и проверяет их сигнатуру
возвращает значение гравитации изображения
данный метод похож на datetime::settime() но работает с datetimeimmutable
возвращает true если файл filename был загружен при помощи http post
резервирует ресурсы необходимые для хранения дескриптора объекта или lob-локатора
возвращает расширение файла для заданной imagetype_xxx константы
функция закрывает файл на который указывает дескриптор handle
возвращает синус параметра arg
возвращает список групп для текущего процесса
возвращает строку содержащую наименование месяца
функция возвращает тип интернет соединения соответствующего имени хоста или ip адреса
устанавливает флаги которые влияют на поведение arrayobject
принимает строку str и возвращает практически уникальную 32-битную хэш-сумму этой строки
эту функцию можно использовать для ручного поиска описания класса или интерфейса используя все зарегистрированные реализации метода __autoload
объединяет элементы массива с помощью строки glue
расшифровывает переданный текст ключами установленными ранее с помощью gnupg_adddecryptkey
возвращает настройки из строки ini в виде ассоциативного массива
инициализирует новый сеанс curl и возвращает дескриптор который используется с функциями curl_setopt() curl_exec() и curl_close()
создаёт новый экземпляр класса
обычно все результаты работы в песочнице использование функций echo или print будут выведены в родительском окружении
перемещает позицию курсора на первый атрибут
включает или выключает неявный сброс
эта функция возвращает распакованную версию входных данных
проверяет является ли итератор действительным
возвращает id последней вставленной строки либо последнее значение которое выдал объект последовательности
эта функция возвращает многомерный массив содержащий список всех определенных переменных будь то переменные окружения серверные переменные или переменные определенные пользователем в той области видимости в которой была вызвана get_defined_vars()
выполняет подготовленное выражение statement созданное с помощью функции oci_parse()
работает аналогично memcached::get() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
функция принимает строку str и добавляет обратный слеш перед каждым служебным символом
возвращает время последнего изменения i-узла текущего элемента directoryiterator
получает время последнего обращения к файлу
перемещает указатель на следующий элемент directoryiterator
изменяет значение указанной параметром type внутренней переменной на charset
проходит по циклу запроса ничего при этом не делая
вычисляет расхождение массивов с дополнительной проверкой индексов используя для сравнения значений callback-функцию
проверяет установлен ли заданный бит в 1
добавляет новый фильтр по типу поля integer к имеющемуся списку фильтров
посылает сообщение о провале обработки причем причина этого провала известна в отличие от провала в результате возникновения исключительной ситуации 
получение короткого имени функции без указания пространства имен 
работа функции идентична splfileobject::fgets() за исключением того что splfileobject::fgetss() пытается очистить строку от html и php тэгов
возвращает копию массива
проверяет текущий узел на соответствие asp
возвращает значение переменной mysql character_set
функция разбирает html документ из файла filename
работает аналогично memcached::set() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
получение аргументов в виде массива объектов reflectionparameter
возвращает данные переданные для обработки
получение содержимого кэша
эта функция возвращает массив с именами трэйтов которые использует заданный класс class
вызывает пользовательскую функцию callback с параметрами из массива param_arr
загружает xml документ из строки
подключается к searchd выполняет набор из всех запросов добавленных с помощью sphinxclient::addquery получает и возвращает набор результатов
загружает шрифт postscript type 1 из файла filename
функция возвращает тип данного ресурса
создает экземпляр imagick для отдельного изображения или группы изображений
добавляет тег в существующий набор тегов tag_set bbcode_container используя tag_rules
определяет является ли текущий элемент directoryiterator обычным файлом
переходит к следующему элементу
начинает соединение с адресом address используя ресурс сокета socket который должен быть действующим ресурсом сокета созданным при помощи функции socket_create()
эта функция рассчитывает и возвращает рамку границы freetype текста
создаёт новый объект класса reflectionclass
освобождает память занятую изображением image
если указан необязательный параметр base log() возвращает log base от arg иначе log() возвращает натуральный логарифм числа arg
изменяет текущий каталог php на указанный в качестве параметра directory
возвращает имя хоста с которым установлено заданное postgresql соединение connection
добавляет запись в ldap директорию
возвращает строку описывающую результирующий код выполнения последнего memcached метода
вызывается когда начинается навигация по элементам после первого вызова метода recursivetreeiterator::rewind() 
эта функция удаляет содержимое выходного буфера
экспортирует данные как из рабочей копии так и из репозитория в чистую директорию
этот метод находит всех дочерних элементов узла
рисует дугу окружности против часовой стрелки
вычисляет пересечение массивов с дополнительной проверкой индексов используя для сравнения значений callback-функцию
возвращает указанный аргумент из списка аргументов пользовательской функции
функция является полным аналогом функции setcookie() исключая то что значение cookie не будет автоматически преобразовано при отправке браузеру
устанавливает флаги управляющие поведением
помечает указанные записи для удаления из базы данных
проверяет является ли функция определенной пользователем то есть это не внутренняя функция
определяет cookie которые будут отправлены с soap-запросами
возвращает ассоциативный массив содержащий следующую строку из результата выполнения запроса
получает значение ключа / encoding
данная функция вставляет новый узел перед опорным узлом
устанавливает произвольную строку для предоставления контекста приложения которая может быть позже получена с помощью gearmanclient::context()
возвращает номер ошибки когда какой-либо метод вернул значение gearman_errno
переводит число дней в юлианском летоисчислении в строку содержащую григорианскую дату в формате месяц / день / год
удаляет из таблицы записи соответствующие ключам и значениям массива assoc_array
возвращает строку str буквенные символы в которой приведены к нижнему регистру
поведение этой функции во многом напоминает preg_replace() за исключением того что вместо параметра replacement необходимо указывать callback -функцию
эта функция возвращает новый объект класса domnodelist содержащий элементы с заданным локальным именем
эта функция идентична функции mktime() за исключением того что аргументы формируют время по гринвичу gmt 
пытается уничтожить базу данных на сервере на который ссылается переданный дескриптор соединения
возвращает версию версии id3-тега(тегов в mp3-файле
эта функция производит разбор строки to_parse в соответствии с правилами в bbcode_container возвращаемом функцией bbcode_create()
создает горизонтальное зеркало изображения отражая пиксели вокруг центральной оси y
возвращает xml полученный в последнем soap-ответе
конвертирует символы в переменных vars из кодировки from_encoding в кодировку to_encoding
возвращает число соответствующее действительному id группы текущего процесса
возвращает видимые нестатические свойства указанного объекта object в соответствии с областью видимости
возвращает статистику файловой системы в result аргумент callback
создает итератор recursivefilteriterator на основе recursiveiterator
эта функция сортирует элементы массива используя для сравнения значений callback-функцию предоставленную пользователем
выполняет экспорт расширения и возвращает его в виде строки string
отсоединяет наблюдателя от субъекта чтобы больше не уведомлять его об обновлениях
возвращает метку времени unix соответствующую полуночи на пасху в заданном году
получает максимальную длину строки установленную с помощью splfileobject::setmaxlinelen()
загружает файл remote_file с ftp-сервера и записывает его в переданный файловый дескриптор
производит преобразование han-kaku - zen-kaku для аргумента string str
удаляет файл директорию или символическую ссылку path из рабочей копии
ищет в dns записи mx соответствующие hostname
возобновляет работу обозначенной приостановленной службы
возвращает текущий объект
эта функция возвращает массив с именами базовых классов заданного класса class
возвращает значение атрибута на основании позиции или пустую строку если атрибут не существует или не расположен на узле элемента
переводит итератор на первый элемент верхнего уровня элементов внутреннего итератора
возвращает название пространства имён
функция добавляет по одной кавычке вокруг строки и добавляет кавычки / экранирует любые существующие единичные кавычки позволяя вам передать строку непосредственно шелл-функции и рассматривать её как один безопасный аргумент
удаляет выбранную область с реструктуризацией изображения
получить номер строки где исключение было создано
возвращает полную историю изменений конкретного элемента репозитория расположенного по url repos_url или историю правок в конкретном диапазоне если указан параметр start_revision
возвращает дату релиза imagemagick в виде строки
копирует функцию
возвращает итератор для текущего элемента
изменяет дату и время последней модификации и доступа к файлу
создает новый объект класса domentityreference
задает callback-функцию которая будет обрабатывать данные задания
возвращает информацию о структуре полей столбцов базы данных согласно заданному идентификатору
устанавливает новое значение по указанному индексу
используется для доступа к отдельным элементам различных категорий текущей локали
переход к следующему узлу
закрывает заданный дескриптор директории
загружает xml документ из файла
этот метод вызывается в результате запуска функции fwrite()
возвращает ключ текущего элемента directoryiterator
удаляет из текущего контейнера объекты которые есть в другом контейнере
принимает входной array и возвращает новый массив без повторяющихся значений
возвращает массив функций веб-служб описанных в wsdl
создает прямоугольную аннотацию на текущей странице
заменяет значения массива array1 на соответствующие по ключам значения из всех следующих массивов
отправляет запрос на каждый сервер и получает массив всех ключей хранящихся на нем в данный момент
устанавливает размер массива в значение size
читает строку из файла
проверяет наличие указанного файла или каталога
посылает исключение возникшее во время выполнения работы
добавляет все пары объект-данные из другого контейнера в текущий
возвращает уникальный идентификатор объекта работы присвоенный клиентом
пытается изменить владельца символической ссылки filename на указанного в user пользователя
возвращает количество рядов затронутых последним insert update replace или delete запросом связанным с дескриптором link_identifier
получает объем памяти используемой при кэшировании реального пути
возвращает строку содержащую версию сервера mysql к которому также подключено расширение mysqli
выполняет поиск соответствий регулярному выражению в многобайтной строке
создает обычный или специальный что чаще файл
закрывает набор curl дескрипторов
ømq devices can do intermediation of addresses services queues or any other abstraction you care to define above the message and socket layers. -- zguide
если параметры не были отправлены то http_response_code получит текущий код статуса
получение возможного типа изображения
определяет является ли имя файла директорией
возвращает имя таблицы которой принадлежит заданное поле
извлекает все полученные записи последнего запроса
получает uri пространства имен узла по префиксу prefix
добавляет одну или несколько опций к уже установленным
данная функция позволяет переопределить текущий домен для одного сообщения
функция производит проверку синтаксиса выбранного кода на наличие ошибок
добавляет объект object в контейнер и дополнительно может ассоциировать этот объект с какими-то данными
рисует линию соединяющую две точки
регистрирует функцию в spl очереди метода __autoload
определяет допустимо ли текущее значение итератора то есть возможна ли работа с этим объектом
извлечение всего архива или его части в указанное место назначения
после того как сокет socket был создан при помощи функции socket_create() привязан к имени при помощи функции socket_bind() и ему было указано слушать соединения при помощи функции socket_listen() эта функция будет принимать входящие соединения на этом сокете
возвращает путь к текущему элементу directoryiterator
возвращает массив состоящий из элементов входящего массива input которые соответствуют заданному шаблону pattern
получает длину строки string
возвращает идентификатор жанра
возвращает объект-итератор iterator скрытый внутри объекта
возвращает новый объект imagick с текущей последовательностью изображений
связывает весовые коэффициенты полей с их названиями
возвращает строку str в которой первый символ каждого слова переведен в верхний регистр если этот символ является буквой
возвращает сообщение исключения
вычисляет остаток от деления нацело числа n на d
устанавливает ftp-соединение с указанным сервером host
устанавливает права доступа к указанному удалённому файлу в значение mode
закрывает переданный указатель на файл bzip2
возвращает строку экранированную обратными слешами перед символами указанными в параметре charlist
задает функцию обратного вызова которая будет принимать и обрабатывать информацию о состоянии задания передаваемую обработчиком заданий
добавление не версионированного пути path в репозиторий по адресу url
возвращает текущую пару ключ / значение из массива и смещает его указатель
эта функция отключает обработчик url и удаляет все значения установленные функцией output_add_rewrite_var() или механизмом сессий если session.use_trans_sid был установлен для session_start() 
получает строку для помещения перед текущим элементом
возвращает массив с данными разбора строки date либо false в случае ошибки
аналогична но предоставляет намного больше контроля над исполнением программы
пытается определить возможности браузера пользователя производя поиск информации о браузере в файле browscap.ini
задает текущее активное значение настройки magic_quotes_runtime
проверяет является ли метод деструктором
возвращает объект содержащий информацию о колонке
возвращает копирайт api imagemagick в виде строки
разбирает строку str которая должна иметь формат строки запроса url и присваивает значения переменным в текущем контексте
устанавливает режим сортировки результатов
возвращает один символ после распаковки из gz-файла по его указателю
функция возвращает трехсимвольный код страны соответствующий имени хоста или ip-адресу
эта функция идентична функции date() за исключением того что возвращает время по гринвичу gmt 
возвращает идентификатор изображения представляющего изображение полученное из файла с заданным именем
возвращает последнюю найденную ошибку
создает новый объект класса recursiveiteratoriterator на основе объекта recursiveiterator
получает числовой код ошибки агента
возвращает ссылку на текущий объект imagick с указателем на изображение в правильной последовательности
возвращает время последнего доступа к текущему элементу directoryiterator
создаёт два соединённых и неразличимых сокета и сохраняет их в массиве fd
возвращает время рассвета для определенных дня заданного аргументом timestamp и местоположения
устанавливает значение настройки xml анализатора
читает данные из открытого ранее дескриптора директории
возвращает список методов в виде массива
возвращает информацию о версии curl
отправляет ftp-серверу команду list и возвращает результат в виде массива
определяет является ли текущий элемент directoryiterator
пытается клонировать исключение что приводит к фатальной ошибке
делает снимок окна или его клиентской части используя windows обработчик свойство hwnd com объекта 
обнуляет все выставленные на данный момент фильтры
создает объект класса reflectionfunction
освобождает память которая была выделена для postscript type 1 шрифта
в html некоторые символы имеют особый смысл и должны быть представлены в виде html сущностей чтобы сохранить их значение
удаляет value из начала очереди
эта функция возвращает значение атрибута соединения с базой данных
записывает содержимое строки string в файл
посылает сообщение электронной почты
проверяет является ли функция внутренней то есть не определенной пользователем
проверяет существует ли метод класса в указанном объекте object
возвращает текущий вызов стека в виде массива
возвращает целое значение переменной var используя указанное основание системы исчисления base для преобразования по умолчанию основание равно 10 
находит первое вхождение подстроки needle в строке haystack и возвращает часть haystack
функция устанавливает флаг o_nonblock на сокете указанном в параметре socket
добавляет сервер задач к списку серверов которые могут использоваться для выполнения задачи
нет действия
переводит файловый указатель на заданную строку
возвращает строку string в которой перед каждым переводом строки \r\n \n\r \n и \r вставлен < br / > или < br > 
возвращает строку созданную с использованием строки формата format
отправляет электронную почту
создает группу запросов
выполняет над строкой str преобразование rot13 и возвращает полученную строку
ищет следующее простое число
функция возвращает символьное имя для значения php-лексемы token
проверяет является ли число точным квадратом т.е
добавляет файл папку или символическую ссылку path в рабочую копию
изменяет права доступа к файлу / директории
синхронизирует текущее состояние файла с физическим устройством
открывает базу данных dbase с заданным режимом доступа
данная функция возвращает время последней записи блоков файла иначе говоря изменения содержания файла
переключает вывод в текстовом или бинарном режиме
сравнивает value1 с value2
возвращает последний код возврата для этого задания
изменяет пароль пользователя указанного в username
задает имя класса которое будет использовать метод splfileinfo::openfile()
моментально обновляет указанные значения атрибутов в указанных документах
возвращает размер поля field
увеличивает числовое значение записи на величину указанную в параметре offset
переход к следующему элементу
эта функция берет узел node класса simplexml и превращает его в узел domelement
преобразует исходный узел в uri применяя таблицу стилей которая установлена с помощью метода xsltprocessor::importstylesheet()
устанавливает значение атрибута с пространстве имен namespaceuri и локальным именем name
объектно-ориентированный стиль constructor 
генерирует пригодное для хранения представление переменной
проверяет существование соседних узлов
разрывает ассоциацию переменной с цветом которая ранее была создана функциями imagecolorallocate() или imagecolorallocatealpha()
удаляет экранирующие обратные слеши
возвращает код ошибки последнего вызова mysqli_connect()
проверяет существует ли смещение
этот метод является статическим вариантом closure::bindto()
создает новый pdf-файл с использованием предоставленного имени файла
перемещает указатель directoryiterator на определённую позицию
эта функция включает буферизацию вывода
создает постоянное соединение с сервером oracle и выполняет аутентификацию
посылает на сервер задач и всем слушающим клиентам статус текущей работы
функция возвращает массив аналогичный по структуре возвращаемой соответствующей функцией c
посылает данные всем серверам задач и смотрит какие из серверов ответят
устанавливает кодировку для входных / выходных документов
возвращает mime-тип содержимого файла используя для определения информацию из файла magic.mime
перемещает внутренний указатель объекта iterator на следующий элемент или на первый элемент если текущий элемент был последним
функция выполняет сетевое блокирующее действие до завершения запроса подготовленного функциями yaz_connect() yaz_search() yaz_present() yaz_scan() and yaz_itemorder()
проверяет подключен ли клиент
выполняет заданный xpath запрос expression
возвращает строку содержащую число number представленное в системе счисления tobase
запускает подготовленный запрос
возвращает заданное смещение ключ 
установка флага альфа сопряжения для использования эффектов наложения изображений встроенной libgd библиотеки
обратите внимание что эта функция учитывает регистр символов и в отличие от strcmp() не безопасна для обработки данных в двоичной форме
форматирует интервал
проверяет есть ли у текущего элемента внутреннего итератора дочерние элементы
получает список модификаторов
восстанавливает встроенную обёртку ранее разрегистрированную при помощи stream_wrapper_unregister()
блокирует выполнение скрипта пока какое-либо из curl_multi соединений не станет активным
получает информацию о версии и возможностях установленной gd библиотеки
объявляет атрибут определяемый узлом attr идентифицирующим элемент атрибутом
получает значение настройки xml анализатора
возвращает ключ soundex для строки str
извлекает значение настройки конфигурации php option
записывает содержимое файла filename в текущую позицию объекта lob
связывает с ldap директорией с указанным rdn и паролем
завершает сеанс curl и освобождает все ресурсы
читает все значения атрибута в записи результата
вызывается по завершении навигации когда метод recursivetreeiterator::valid() впервые вернет false 
сравнивает строку main_str начиная с позиции offset со строкой str
возвращает размер длину изображения в байтах
эта функция создает экземпляр класса domtext
возвращает идентификатор изображения представляющего из себя пустое изображение заданного размера
эта функция удаляет содержимое самого верхнего буфера вывода и отключает эту буферизацию
освобождает ресурсы связанные с дескриптором lob изначально выделенные функцией oci_new_descriptor()
проверяет достигнут ли конец файла
возвращает список классов модуля
возвращает горизонтальный и вертикальный фактор выборки
сравнивает left_operand с right_operand и возвращает целочисленный результат
возвращает флаги связанные с указанным полем
сортирует массив по ключам сохраняя отношения между ключами и значениями
возвращает текущее значение таймаута то есть время в течение которого обработчик ожидает запрос от сервера заданий
получить имя файла где исключение было создано
задает изменяет значение свойства
возвращает идентификатор изображения представляющего изображение полученное из файла с заданным именем
выбирает большой объект из базы данных и сохраняет его данные локально в файловой системе
возвращает xml переданный в последнем soap-запросе
проверяет является ли класс подклассом указанного класса или реализует ли указанный интерфейс
функция позволяет переопределить текущий домен domain для одного сообщения во множественном числе
задает / возвращает текущую кодировку для многобайтового регулярного выражения string
функция сливает элементы двух или более массивов таким образом что значения одного массива присоединяются в конец другого
возвращает строку string в которой все буквенные символы переведены в верхний регистр
эта функция возвращает строку или массив в котором все вхождения search в subject заменены на replace без учета регистра символов 
выполняет поиск совпадений в строке subject с шаблоном pattern и заменяет их на replacement
возвращает количество публичных свойств arrayobject
сортирует массив по ключам в обратном порядке сохраняя отношения между ключами и значениями
определяет является ли данная переменная массивом
добавляет окружность
эта функция проверяет поддерживает ли файловая система содержащая файл расширенные атрибуты
рекурсивно показывает различия двух файлов path1 и path2
создает новый recursivecachingiterator который состоит из переданного итератора iterator 
выводит gd2 изображение в заданный файл filename
получает содержимое текущего буфера и затем удаляет текущий буфер
проверяет задана ли в классе указанная константа или нет
compares one or more image channels of an image to a reconstructed image and returns the specified distortion metrics этот метод доступен если imagick был скомпилирован с версией imagemagick 6.4.4 или старше
создаёт новый экземпляр класса без вызова конструктора
возвращает строку с ошибкой bzip2 произошедшей с переданным указателем на файл
удаляет один или более атрибутов из указанного dn
возвращает внутреннюю информацию о том где было вызвано исключение
работает аналогично memcached::delete() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
прекращает выполнение скрипта
в случае успеха возвращает значение настройки конфигурации
создает новый объект sphinxclient
выбирает базу данных и выполняет запрос к ней
возвращает внутренний итератор для текущего элемента
версия для сообщений во множественном числе
подобно это не функция а языковая конструкция
импортирует переменные из массива в текущую таблицу символов
эта функция проверяет являются ли два узла одним и тем же узлом
получает код ошибки xml-парсера
возвращает режим работы
возвращает ширину заданного изображения image
эта функция устарела
создает вертикальное зеркало изображения отражая пиксели вокруг центральной оси x
возвращает содержимое одного поля из набора результата mysql
перемещает указатель на заданную позицию position
создает xml документ из dom представления
проверяет содержит ли ячейка результата запроса значение sql null
принимает соединение на сокете предварительно созданном с помощью функции stream_socket_server()
кодирование строки осуществляется согласно rfc 3986
возвращает строку с обратным слешом перед символами которые нужно экранировать
импортирует php-массив array в новый объект класса splfixedarray
выполняет рендеринг объекта imagickdraw на текущем изображении
функция возвращает имена всех функций определенных в модуле с именем module_name
этот метод вставляет xinclude блоки в объекте класса domdocument
эта функция возвращает количество видео-кадров из swfvideostream
сравнивает два числа
отправляет сообщение об ошибке в лог web-сервера или в пользовательский файл
данный метод выводит изображение на x сервер
сообщает если узел соответствует jste
возвращает содержимое по url repos_url файла в репозитории по состоянию на ревизию номер revision_no необязательный параметр 
возвращает информацию о протоколе mysql
сравнивает два объекта lob / file
возвращает размер массива
отправляет параметризованный запрос на выполнение и не ждет его завершения
закрывает непостоянное соединение с базой данных mysql на которое указывает переданный дескриптор
эта функция разбирает xml строку и помещает данные в 2 массива
проверяет содержит ли объект object в своем дереве предков класс class_name
проверка является ли функция замыканием
отправляет результаты работы клиенту и обновляет статус объекта на завершенный
эта функция удаляет расширенный атрибут файла
возвращает экземпляр reflectionproperty для свойства класса
создает закрашенный многоугольник в заданном изображении image
добавляет одну или несколько настроек к заданным ранее
добавляет данные в базу данных
возвращает массив содержащий информацию о версии каждого доступного memcache сервера
отправляет данные серверу заданий и всем слушающим клиентам 
эта функция является аналогом domdocument::getelementsbytagname но ищет элемент по его id
создание нового domdocument объекта
регистрирует функцию callback которая выполнится после завершения работы скрипта или при вызове функции exit()
останавливает работу компилятора
устанавливает обработчик символьных данных для заданного xml анализатора parser
функция возвращает двухсимвольный код страны соответствующий имени хоста или ip-адресу
сообщает есть ли у заданного узла потомки
определяет является ли текущий элемент directoryiterator исполняемым
возвращает массив элементы которого представляют длины каждого поля текущей строки результирующего набора
возвращает количество единиц в двоичной записи числа
возвращает индекс цвета в палитре изображения ближайшего к заданному rgb значению
возвращает число соответствующее действительному id пользователю текущего процесса
возвращает текст последнего брошенного исключения или причины неудачи при вызове функции
создает новый объект datetimeimmutable с измененной временной меткой
эта функция сортирует массив
посылает исключение возникшее во время выполнения работы
создает пустой объект класса domdocumenttype
возвращает шестнадцатеричное строковое представление crc элемента архива
получает рабочую копию с ревизией revision из репозитория repos и размещает в targetpath
получает список определенных в расширении функций
получает номер текущей строки
накладывает искривляющую матрицу на изображение используя заданный коэффициент и смещение
выбирает следующую строку из результата запроса во внутренний буфер доступный с помощью oci_result() или через переменные заранее определенные с помощью oci_define_by_name()
проверяет является ли текущий узел обычным текстом без какой-либо разметки 
выбирает одно или несколько случайных значений из массива
урезает файл дескриптор которого указан в параметре fd точно до length байт
подсчитывает количество вхождений каждого из символов с asii-кодами в диапазоне 0..255 в строке string и возвращает эту информацию в различных форматах
вставляет записи в таблицу из массива rows
проверяет является ли объект экземпляром класса
извлекает следующую строку и возвращает ее в виде объекта
находит первое вхождение подстроки needle в haystack и возвращает часть haystack
посылает сообщение о провале обработки причем причина этого провала известна в отличие от провала в результате возникновения исключительной ситуации 
копирует дескриптор curl сохраняя его настройки
возвращает критичность исключения
устанавливает комментарий к элементу заданному по имени
отменяет все локальные изменения файлов расположенных в рабочей копии
класс splfileobject не имеет наследников поэтому метод всегда возвращает false
эта функция является псевдонимом: soapheader::soapheader()
функция специфична для сервера apache и является эквивалентом конструкции < !--#include virtual...-- > используемой в mod_include
освобождает память занятую xml анализатором parser
получает имя аргумента
создает точную копию объекта imagick
функция нестабильна и совершенно бесполезна для 99% пользователей
сообщает включена ли буферизация для большого объекта lob 
вставляет строку data в позицию offset
получение детальной информации о элементе по его имени
эта функция не должна вызываться
проверяет все ли символы в переданной строке text являются буквами в нижнем регистре
возвращает ассоциативный массив содержащий записи из строки результата запроса
сортирует записи в массиве по значениям используя функцию сортировки определенную пользователем
возвращает строку str первый символ которой был преобразован в нижний регистр если этот символ является буквой
задает значения параметров string и pattern для функций регулярных выражений
похож на метод memcached::set() но вместо одной пары ключ / значение работает с несколькими записями переданными в items в виде массива
отменяет все измения у позиции с заданным индексом
задает функцию обработчик неразобранных объявлений сущностей для xml анализатора parser
выполняет переданное xpath выражение expression и возвращает типизированный результат если это возможно
декодирует строку data закодированную при помощи base64
проверяет доступно ли значение по умолчанию аргумента
устанавливает соединение с сокетом ресурса hostname
возвращает строку string перевернутую задом наперед
устанавливает флаг сохранять всю информацию альфа компонента в противовес одноцветной прозрачности и сохраняет png изображение
освобождает ресурсы занимаемые объектом коллекции
устанавливает значение атрибута с именем name
проверяет является ли метод статическим
извлекает список зарегистрированных потоков доступных на запущенной системе
функция использует тест миллера-рабина для определения является ли число простым
задает обработчик инструкций препроцессора pi для xml анализатора
устанавливает имя класса итератора массива возвращаемое arrayobject::getiterator()
устанавливает блокирующий или неблокирующий режим на потоке stream
возвращает имя текущего рабочего каталога
возвращает массив содержащий все возможные значения жанра которые может содержать id3-тег
добавляет новый узел атрибута attr в элемент
получает inode текущего скрипта
возвращает размер объекта lob
эта функция кодирует строку data кодировкой utf-8 и возвращает закодированный вариант
устанавливает ширину и высоту для потокового видео
функция получает массивы потоков и ждёт изменения их статуса
функция похожа на функцию exec() в том что она выполняет команду command
возвращает объект со свойствами соответствующими колонкам в обработанном ряду и сдвигает внутренний указатель результата вперед
разрешенный диапазон дат для григорианского календаря с 4714 года до н.э
задает настройки итератора
перемещает указатель на одну позицию вперед
экспортирует reflectionmethod
возвращает имя элемента массива вместе с путем 
получает текущее значение
создаёт пару связанных неразличимых потоковых сокетов
возвращает арккосинус числа arg в радианах
добавляет value в конец очереди
открывает файл по заданному пути path в режиме доступа mode
закрывает базу данных идентификатор соединения с которой передан через аргумент dbhandle
определяет уровень доступа группы для пользователя указанного в параметрах
возвращает имя файла текущего элемента directoryiterator
функция закрывает дескриптор используемый для записи в системный журнал
устанавливает начальное число генератора случайных чисел в seed или случайное число если seed не указан
получает список разрешений для файла
возвращает гиперболический синус arg определяемый как exp arg - exp -arg / 2
этот метод вызывается всякий раз когда данные читаются из присоединенного потока или записываются в него такими функциями как fread() или fwrite() 
проверяет все ли символы в переданной строке text являются управляющими символами
получает путь xpath по которому расположен узел
извлекает ключевые слова из query используя настройки tokenizer лексера для указанного index опционально с частотной статистикой по ключевым словам
устанавливает эффективный идентификатор пользователя
переключает указанный dn в более удобную для пользователя форму снимая изоляцию с имен типов
возвращает количество полей в результате запроса
возвращает количество рядов результата запроса
представление в виде строки
возвращает интерфейсы
сортирует записи в массиве по значениям используя алгоритм натуральной сортировки с учетом регистра
определяет объем текста сообщений возвращаемых функциями pg_last_error() и pg_result_error()
эта функция устанавливает параметры соединения с ftp сервером
возвращает число соответствующее эффективному идентификатору пользователя текущего процесса
получает документируемый комментарий
возвращает номер версии базы данных временных зон
получает ключ текущего элемента
возвращает высоту изображения
похожа на c-версию этой функции в том что она выполняет указанную команду command и выводит её результат
переводит итератор на следующий узел
создаёт символическую ссылку на существующий файл target с именем link
создает новый объект класса domprocessinginstruction
возвращает номер последней строки определения пользовательского класса
возвращает имя базы данных соответствующей ресурсу postgresql connection
получает группу файла
рисует дугу окружности с заданными координатами центра
выводит arg
проверяет является ли класс пользовательским а не встроенным
определяет будет ли pspell_save_wordlist() сохранять замещающие пары вместе со списком слов
определяет количество директорий и файлов совпадающих с glob-выражением
выводит или сохраняет в формате wbmp заданное изображение image
функция разбирает переданную строку source в языковые лексемы php используя лексический сканер zend engine
возвращает текущий элемент с префиксом и суффиксом
проверяет является ли текущий элемент итератора допустимым для данного фильтра
эта функция сортирует массив в обратном порядке таким образом что сохраняются отношения между ключами и значениями
возвращает значение ячейки таблицы результата запроса
считывает length байт из файла с описателем fd начиная с байта offset
эта функция возвращает объект класса domnodelist - список всех элементов-потомков текущего узла с указанным именем тэга name в порядке в котором они встречаются при обходе дерева
возвращает количество кортежей сущностей / записей / рядов затронутых запросом insert update и delete queries
читает все значения атрибута в записи результата
возвращает сжатую версию входных данных data аналогично выводу программы gzip
возвращает тип указанного файла
возвращает величину глубины объекта imagick в виде строки
добавляет фильтр filtername к списку фильтров прикреплённых к потоку stream
класс splfileobject не имеет потомков поэтому этот метод возвращает null
эта функция возвращает строку str с удаленными из конца строки пробелами
экранирует специальные символы в unescaped_string принимая во внимание кодировку соединения таким образом что результат можно безопасно использовать в sql-запросе в функции mysql_query()
возвращает номер последнего брошенного исключения или причины неудачи при вызове функции
прикрепляет переменную variable к метке bv_name
задает замещающий символ на случай когда кодировка входных данных задана неверно или код символа не существует в кодировке выходных данных
возвращает название базы данных из вызова к mysql_list_dbs()
скачивает удалённый файл с ftp-сервера и сохраняет его в локальный файл
указывает выполняется сейчас задание или нет
помещает value в конец двусвязного списка
создает жесткую ссылку new_path на файл указанный в path
устанавливает буфер чтения
производит заливку области ограниченной цветом border
является callback-функцией функции ob_start()
возвращает inode текущего элемента directoryiterator
задает функцию обратного вызова для обработки ситуации когда задание выполнить не удалось
возвращает список ошибок возникших при выполнении последней операции над запросом которая может завершаться успешно или неуспешно
получает число присоединенных итераторов
вызывается чтобы начать навигацию после первого вызова recursiveiteratoriterator::rewind() 
рисование углем
эта функция возвращает список имён расширенных атрибутов файла
возвращает информацию о состоянии файла в result аргументе callback
регистрирует имя функции на сервере заданий и дополнительно задает таймаут
обрабатывает результат поиска ldap
поиск в контексте пространства имен для данного префикса
конструктор класса reflectionparameter
создание нового изображения на основе части gd2 файла или url
возвращает ассоциативный массив array содержащий информацию о дате представленной меткой времени timestamp или текущим системным временем если timestamp не был передан
возвращает формат конкретного изображения в последовательности
закрывает дескриптор объекта lob или file
получает записи из базы данных как из индексированного массива
шифрует и подписывает переданный в параметре plaintext текст ключами которые были установлены gnupg_addsignkey и gnupg_addencryptkey ранее и возвращает зашифрованный и подписанный текст
описывает тип используемого соединения указанного переданным дескриптором соединения включая имя хоста
преобразует символы строки string str в кодировку to_encoding
запрашивает у memcache несколько записей ключи которых переданы в массиве keys
во время выполнения задания отправляет предупреждение
эта функция является псевдонимом: soapvar::soapvar()
получает поддерево корнем которого является текущий элемент
удаляет экранирующие символы
выполняет одиночное задание и возвращает строковое представление результата
создает arrayiterator типа object
окружает изображение рамкой с цветом установленным в объекте imagickpixel
выводит стек вызовов функций
функция определяет mime-тип для константы imagetype
проверяет является ли свойство общедоступным public 
производит подсчет объектов в контейнере
функция пытается получить временную зону по умолчанию по порядку следующими способами: чтение настройки временной зоны с помощью функции date_default_timezone_set() если применимо только до версии php 5.4.0: чтение переменной окружения tz если она не пуста чтение значения ini настройки date.timezone если задана только до версии php 5.4.0: опрос операционной системы если поддерживается и разрешено ос 
пытается создать базу данных на сервере с которым ассоциирован переданный дескриптор соединения
подсчитывает количество слов входящих в строку string
проверяет содержит ли узлы двусвязный список
возвращает объявленное пространство имен в документе
работает аналогично memcached::replace() за исключением того что произвольный server_key может быть использован для определения сервера и установки значения с ключом key на конкретный сервер
вызывает функцию и передает ей аргументы в виде массива
проверяет является ли свойство частным private 
сравнивает array1 с одним или несколькими другими массивами и возвращает значения из array1 которые отсутствуют во всех других массивах
получает класс из контроля типа для параметра в виде объекта reflectionclass
устанавливает внутренний указатель array на последний элемент и возвращает его значение
удаляет объект object из контейнера
возвращает расширение файла
возвращает подстроку строки string начинающейся с start символа по счету и длиной length символов
создает объемное изображение
получает текущий элемент представляющий собой структуру данных
возвращает информацию о существующем потоке stream
проверяет работает ли соединение с сервером
возвращает число столбцов затронутых последним запросом для соединения указанного в link
функция возвращает список заголовков передаваемых браузеру / клиенту
убирает экранирование спецсимволов в значениях типа postgresql bytea
посылает данные на все сервера и определяет какие из них выведут эти данные в выходной поток
функция возвращает строку с информацией о последнем выполненном запросе к базе данных
устанавливает постоянное соединение с сервером mysql
эта функция создает новый узел-элемент с соответствующим пространством имен
этот метод выполняется при использовании метода count() объекта countable
устанавливает значение тайм-аута на потоке stream равное сумме параметров seconds и microseconds
возвращает идентификатор группы текущего процесса
получает ресурс результата асинхронного запроса запущенного функциями pg_send_query() pg_send_query_params() или pg_send_execute()
эта функция полезна для получения множества переменных без многократного вызова функции filter_var()
удаляет объект imagick и освобождает все ресурсы связанные с ним
возвращает информацию о параметрах и опциях из потока или контекста
возвращает домашний url библиотеки imagemagick
эта функция возвращает строку input дополненную слева справа или с обоих сторон до заданной длины
фиксирует транзакцию соединения connection
конвертирует строку из формата utf-16 в формат utf-8
загружает локальный файл на ftp-сервер
считывает следующую запись в zip-архиве
возвращает идентификатор изображения представляющего изображение полученное из файла с заданным именем
итеративно применяет callback-функцию callback к элементам массива array и таким образом сводит массив к единственному значению
возвращает имя поля field из результата запроса
расшифровывает и проверяет подпись переданного текста и возвращает информацию о подписи
записывает данные в большой объект начиная с текущей позиции внутреннего указателя
возвращает индекс для заданного цвета в палитре изображения
переводит число дней в юлианском летоисчислении в дату по французскому республиканскому календарю
получает часть строки str определенную параметрами offset и length
возвращает длину строки string
позволяет вам отключить уже определённую обёртку потока
экспортирует отображение функцию
вызывается по завершении навигации когда метод recursiveiteratoriterator::valid() впервые вернет false 
отменяет все измения у позиции с заданным именем
эта функция рассчитывает и возвращает параметры рамки вокруг truetype текста в пикселах
возвращает последний возвращённый код gearman
получает в качестве параметра errno код ошибки сокета возвращаемый функцией socket_last_error() и возвращает соответствующий текст с разъяснением
задет информацию о клиенте для трассировки oracle
функция делит n на d
возвращает сообщение об ошибке последнего вызова функции mysqli который может успешно выполниться или провалиться
получает уведомления сгенерированные командой sql notify
возвращает битовую маску модификаторов для данного метода
устанавливает комментарий к zip-архиву
создает массив содержащий диапазон элементов
возвращает ассоциативный массив с подробной информацией о заданной дате
установка / получение текущего языка
проверяет есть ли у текущего элемента потомки
эта функция возвращает количество дней в месяце month года year для заданного календаря calendar
меняет текущую директорию на заданную аргументом
возвращает размер связанный с объектом imagick в виде массива с ключами columns столбцы и rows строки 
изменяет существующие записи в каталоге ldap
создаёт жесткую ссылку
функция возвращает полное название страны соответствующий имени хоста или ip-адресу
читает множественные записи из заданного результата и затем читает атрибуты и множественные значения
функция возвращает копию массива array дополненного до размера size элементами со значением value
наносит текст text поверх изображения используя truetype шрифт
возвращает качество сжатия объекта
функция возвращает текущую метку времени unix с микросекундами
считывает символ из переданного указателя на файл
эта функция идентична функции ereg_replace() за исключением того что игнорирует регистр при сравнении алфавитных символов
возвращает читабельное описание ошибки с кодом error_code полученного из функции sqlite_last_error()
возвращает true если файл существует и доступен для чтения
устанавливает xml-rpc тип base64 или datetime для значения строки php
задает максимальную глубину вложенности элементов
вызывается во время десериализации объекта
проверяет корректность подытераторов
возвращает строку string в которой все буквенные символы переведены в нижний регистр
заключает строку в кавычки если требуется и экранирует специальные символы внутри строки подходящим для драйвера способом
проверяет является ли данная переменная строкой
создает новый xml анализатор с поддержкой пространств имен и возвращает ссылающийся на него ресурс который можно использовать в других xml функциях
эта функция преобразует число gmp в обычное целое число php integer 
удаляет пробелы или другие символы из начала строки
возвращает количество меток параметров в подготовленном запросе
возвращает новый объект класса gearmantask
добавляет новое изображение к объекту imagick из текущего положения исходного объекта
вставляет value в кучу
вызывает функцию для каждого элемента в итераторе
возвращает нормализованный hsl-цвет описанный объектом imagickpixel каждое из трех значений является дробным числом между 0.0 и 1.0
проверяет является ли данная переменная числом с плавающей точкой
получает строку из указанного дескриптора
создает новый объект итератора файловой системы на основе аргумента path
возвращает ширину символа шрифта
получает номер текущей строки для заданного xml-парсера
снимает регистрацию всех ранее зарегистрированных функций на всех серверах заданий
возвращает составной оператор связанный с изображением
эта функция возвращает названия и значения атрибутов установленные в xml теге
возвращает родительский узел текущего узла
восстанавливает данные контейнера из строки и добавляет их в текущий контейнер
экспортирует отражённый модуль
ведёт себя подобно current() но с одним отличием
создает splfileobject object файла
запускает sql запрос на выполнение и возвращает количество строк задействованых в ходе его выполнения
устанавливает соединение с базой данных postgresql
возвращает индекс цвета в палитре изображения ближайшего к заданному rgb значению а также alpha уровню
сохраняет содержимое объекта lob в файл
возвращает класс итератора массива arrayiterator
текущий ключ если он является действительным или null в противном случае
возвращает текущий ключ
переходит к следующему элементу
перематывает итератор
смещение ключ для проверки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
определяет существует ли заданное смещение ключ
смещение ключ для возврата
может возвращать значение любого типа
возвращает заданное смещение ключ
значение которое нужно добавить
добавить элемент
сортирует массив по значениям
массив или объект который может быть итерирован
флаги для управления поведением объекта arrayiterator
arrayiterator object
создает arrayiterator
копия array или массив публичных свойств если arrayiterator указывает на object
возвращает копию массива
ключ текущего элемента в массиве array
возвращает ключ текущего элемента массива
сортирует массив натурально с учетом регистра
сортирует массив натурально
перемещает указатель за следующую запись
проверяемое смещение
проверяет существует ли смещение
смещение из которого необходимо получить значения
значение по смещению index
получает значение для смещения
перемещает указатель в начало массива
сериализованный arrayiterator
сериализует массив
следующие битовые маски: 0 = свойства объекта имеют свои нормальные функции при доступе в виде списка var_dump foreach etc
устанавливает флаги управляющие поведением
функция сравнения элементов используемая для сортировки
сортировка определенная пользователем
функция сравнения элементов используемая для сортировки
сортировка определенная пользователем
проверяет содержит ли массив еще записи
значение которое должно быть добавлено
добавляет значение в конец массива
сортирует записи по значению
количество публичных свойств arrayobject
возвращает количество публичных свойств arrayobject
новый массив array или объект object для замены текущего массива
возвращает старый массив array
заменяет текущий массив на другой
возвращает флаги поведения arrayobject
получает флаги поведения
возвращает имя класса итератора массива который будет использоваться при итерации по этому объекту
возвращает имя класса итератора для arrayobject
сортирует записи по ключам
сортирует массив используя регистронезависимый алгоритм natural order
сортирует массив используя алгоритм natural order
новое значение для index
индекс для установки значения
устанавливает новое значение по указанному индексу
сериализованное представление arrayobject
сериализует arrayobject
новое поведение arrayobject
устанавливает флаги поведения
имя класса итератора массива который будет использоваться при итерации по этому объекту
устанавливает имя класса итератора для arrayobject
сериализованный объект arrayobject
десериализует arrayobject
массив array содержащий элементы кэша
получение содержимого кэша
анонимная функция для привязывания к объекту
область видимости класса с которой ассоциируется замыкание или static для сохранения текущей области видимости
объект к которому будет привязана переданная функция или null для отсоединения функции от ее текущего объекта
возвращает новый объект closure или false в случае возникновения ошибки
дублирует замыкание с указанием связанного объекта и области видимости класса
область видимости класса с которой ассоциируется замыкание или static для сохранения текущей области видимости
объект к которому будет привязана переданная функция или null для отсоединения функции от ее текущего объекта
возвращает новый объект closure или false в случае возникновения ошибки
дублирует замыкание с указанием связанного объекта и области видимости класса
пользовательское значение типа integer
количество элементов объекта
дата состоящая из относительных временных фрагментов
возвращает новый объект класса dateinterval
создает объект класса dateinterval используя данные из переданной строки
в строке format распознаются следующие символы
возвращает отформатированный интервал
форматирует интервал
возвращает предупреждения и ошибки
только для процедурного стиля: объект datetime возвращаемый date_create()
строка даты / времени
возвращает новый объект или false в случае возникновения ошибки
создает новый объект с измененной временной меткой
обработчик __set_state
устанавливает дату в формате iso
устанавливает время
устанавливает дату и время по переданной временной метке unix
устанавливает временную зону
вычитает переданное количество дней месяцев лет часов минут и секунд
возвращает время когда в последний раз был осуществлен доступ к указанному файлу
возвращает время последнего доступа к текущему элементу directoryiterator
возвращает время последнего изменения файла в формате отметки времени unix
возвращает время последнего изменения i-узла текущего элемента directoryiterator
возвращает строку string содержащую расширение файла или пустую строку string если файл его не имеет
возвращает расширение файла
возвращает имя файл текущего элемента directoryiterator
возвращает имя файла текущего элемента directoryiterator
возвращает inode файла
возвращает inode текущего элемента directoryiterator
время последнего изменения файла в формате отметки времени unix
возвращает время последнего изменения текущего элемента directoryiterator
владелец файла в числовом формате
возвращает идентификатор владельца текущего элемента directoryiterator
возвращает путь до файла без имени файла и завершающего слеша
возвращает путь к текущему элементу directoryiterator без имени файла
возвращает путь и имя файла текущего файла
возвращает путь и имя файла текущего элемента directoryiterator
возвращает набор прав для текущего файла в виде десятичного числа integer
возвращает набор прав для текущего элемента directoryiterator item
возвращает размер файла в байтах
возвращает размер текущего элемента directoryiterator
возвращает строку string содержащую тип файла
определяет тип текущего элемента directoryiterator
возвращает true если элемент является директорией иначе false
определяет является ли текущий элемент directoryiterator директорией
возвращает true если элемент является
определяет является ли текущий элемент directoryiterator '
возвращает true если файл является исполняемым иначе false
определяет является ли текущий элемент directoryiterator исполняемым
возвращает true если файл существует и является обычным файлом т
определяет является ли текущий элемент directoryiterator обычным файлом
возвращает true если элемент является символической ссылкой иначе false
определяет является ли текущий элемент directoryiterator символической ссылкой
возвращает true если файл доступен для чтения иначе false
определяет доступен ли текущий элемент directoryiterator для чтения
возвращает true если файл или директория доступны для записи иначе false
определяет доступен ли текущий элемент directoryiterator для записи
ключ текущего элемента directoryiterator
возвращает ключ текущего элемента directoryiterator
перемещает указатель на следующий элемент directoryiterator
номер позиции для перемещения
перемещает указатель directoryiterator на определённую позицию
возвращает имя файла текущего элемента directoryiterator
возвращает имя файла в виде строки
возвращает true если элемент является допустимым иначе false
проверяет является ли текущий элемент directoryiterator допустимым файлом
добавляемая строка
добавляет строку в конец символьных данных узла
количество удаляемых символов
позиция с которой будут удаляться символы
удаление диапазона символов из узла
отступ в символах начиная с которого будет вставлена строка
вставляемая строка
вставляет строку после заданного отступа из 16-битных блоков
начало извлекаемой подстроки
количество извлекаемых символов
запрашиваемая подстрока
извлекает определенный диапазон данных из узла
значение комментария
создает новый экземпляр класса domcomment
номер версии документа как часть xml объявления
кодировка документа как часть xml объявления
создание нового domdocument объекта
имя атрибута
новый объект domattr либо false в случае возникновения ошибки
создает новый атрибут
имя и префикс атрибута в виде prefix:tagname
uri пространства имен
новый экземпляр класса domattr либо false в случае ошибки
создает новый узел-атрибут с соответствующим ему пространством имен
содержимое cdata
новый объект класса domcdatasection либо false в случае ошибки
создает новый cdata узел
содержимое комментария
новый объект класса domcomment либо false в случае ошибки
создает новый узел-комментарий
сформированное имя элемента в виде prefix:tagname
uri пространства имен
значение элемента
новый объект класса domelement либо false в случае ошибки
создание нового узла-элемента с соответствующим пространством имен
содержимое ссылки на сущность то есть ссылка на сущность без & в начале и ; в конце
новый объект класса domentityreference либо false в случае ошибки
создание нового узла-ссылки на сущность
содержимое узла
новый объект класса domtext либо false в случае ошибки
создает новый текстовый узел
уникальный id элемента
возвращает объект domelement либо null если элемент не найден
ищет элемент с заданным id
локальное имя тэга без указания пространства имен по которому будет проводиться поиск
новый объект класса domnodelist содержащий все найденные элементы
ищет все элементы с заданным локальным именем
локальное имя искомых элементов
uri пространства имен
новый объект класса domnodelist содержащий все найденные элементы
ищет элементы с заданным именем в определенном пространстве имен
импортируемый узел
если установлен в true этот метод рекурсивно импортирует поддерево узла importednode
скопированный узел или false если он не может быть скопирован
импорт узла в текущий документ
побитовое или констант настройки libxml
путь к xml документу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
загрузка xml из файла
html строка
начиная с версии php 5
возвращает true в случае успешного завершения или false в случае возникновения ошибки
загрузка html из строки
начиная с версии php 5
путь к html файлу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
загрузка html из файла
побитовое или констант настройки libxml
содержащая xml строка
возвращает true в случае успешного завершения или false в случае возникновения ошибки
загрузка xml из строки
нормализует документ
dom класс который будет расширен
имя расширенного класса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
регистрация расширенного класса используемого для создания базового типа узлов
rng файл
возвращает true в случае успешного завершения или false в случае возникновения ошибки
производит проверку документа на правильность построения посредством relaxng
путь к файлу в который сохранится html документ
возвращает число записанных байт или false в случае ошибки
сохраняет документ из внутреннего представления в файл используя html форматирование
используйте этот аргумент для вывода только определенного узла без xml объявления вместо вывода документа целиком
дополнительные настройки
возвращает xml или false в случае ошибки
сохраняет xml дерево из внутреннего представления в виде строки
битовая маска настроечных флагов валидации схемы libxml
путь к файлу со схемой
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет действительность документа основываясь на заданной схеме
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет документ на соответствие его dtd
параметры libxml
возвращает количество блоков xinclude в документе -1 если при обработке произошла ошибка либо false если не было произведено ни одной замены
проводит вставку xinclude разделов в объектах domdocument
имя тэга создаваемого элемента
значение элемента
пространство имен uri передается для создания элемента со отдельным пространством имен
создание нового объекта класса domelement
имя атрибута
значение атрибута или пустое значение если атрибут с указанным именем name не найден
возвращает значение атрибута
имя атрибута
узел атрибута
возвращает узел атрибута
локальное имя
uri пространства имен
узел атрибута
возвращает узел атрибута
локальное имя
uri пространства имен
значение атрибута либо пустая строка если атрибутов с заданным локальным именем localname в пространстве имен namespaceuri не найдено
возвращает значение атрибута
имя тэга
эта функция возвращает новый объект класса domnodelist - список всех подходящих элементов
возвращает элементы по имени тэга
имя атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет наличие атрибута
локальное имя
uri пространства имен
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет существует ли заданный атрибут
имя атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет атрибут
имя атрибута
значение атрибута
новый объект класса domattr или false в случае ошибки
устанавливает значение атрибута
узел атрибута
возвращает старый узел если атрибут был заменен или null
добавляет новый узел атрибута к элементу
значение атрибута
uri пространства имен
стандартизованное имя атрибута в виде prefix:tagname
добавляет новый атрибут
имя атрибута
установите значение в true если требуется сделать name идентифицирующим в противном случае ставьте false
объявляет атрибут с заданным именем ключевым атрибутом
узел атрибута
установите значение в true если требуется сделать name идентифицирующим в противном случае ставьте false
объявляет заданный узел атрибута ключевым
локальное имя атрибута в виде prefix:tagname
установите значение в true если требуется сделать name идентифицирующим в противном случае ставьте false
uri пространства имен атрибута
объявляет атрибут с заданным локальным именем и uri пространства имен идентифицирующим
имя ссылки на сущность
создает новый объект класса domentityreference
тип элемента document или null
имя элемента document
uri пространства имен элемента document
новый объект класса domdocument
создает объект класса domdocument заданного типа с элементом document
общедоступный идентификатор внешнего подмножества
стандартизованное имя типа документа для создания
системный идентификатор внешнего подмножества
новый объект класса domdocumenttype с атрибутом ownerdocument установленным в null
создает пустой объект класса domdocumenttype
номер версии тестируемой возможности feature
тестируемая возможность
возвращает true в случае успешного завершения или false в случае возникновения ошибки
тестирует реализацию специфичных возможностей объекта domimplementation
возвращает строку string содержащую xpath либо null в случае ошибки
получение xpath пути к узлу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет содержит ли данный узел атрибуты
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет содержит ли данный узел потомков
новый узел
опорный узел
добавленный узел
добавляет новый дочерний узел перед опорным узлом
uri пространства имен
возвращает true если namespaceuri является пространством имен по умолчанию или false в противном случае
проверяет совпадает ли uri пространства имен узла с пространством имен по умолчанию
сравниваемый узел
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет являются ли два узла одним и тем же узлом
номер версии модуля feature для проверки
название свойства для проверки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет поддерживается ли заданное свойство в определенной версии
префикс пространства имен
uri пространства имен узла
получает uri пространства имен узла по префиксу
uri пространства имен
префикс пространства имен
возвращает префикс пространства имен узла из uri пространства имен
новый узел
старый узел
старый узел или false в случае возникновения ошибки
заменяет дочерний узел
индекс узла в коллекции
узел находящийся в позиции index объекта domnodelist или null если этот индекс недопустим
извлекает узел с заданным индексом
имя инструкции для обработчика
значение инструкции для обработчика
создает новый объект классаdomprocessinginstruction
позиция с которой узле будет разделен начиная с 0
новый узел того же типа содержащий данные после offset
разделяет узел на два начиная с заданной позиции
объект класса domdocument связанный с domxpath
создает новый объект класса domxpath
посредством необязательного аргумента registernodens можно отключить автоматическую регистрацию контекста узла
дополнительный параметр contextnode может быть использован для указания обрабатывать относительные xpath запросы
xpath выражение для выполнения
возвращает типизированный результат если это возможно либо объект domnodelist содержащий все узлы соответствующие заданному xpath выражению expression
вычисляет переданное xpath выражение и возвращает типизированный результат если возможно
посредством необязательного аргумента registernodens можно отключить автоматическую регистрацию контекста узла
дополнительный параметр contextnode может быть использован для указания обрабатывать относительные xpath запросы
xpath запрос
возвращает объект domnodelist содержащий узлы отвечающие условиям отбора в xpath expression
выполняет заданное xpath выражение
префикс
uri пространства имен
возвращает true в случае успешного завершения или false в случае возникновения ошибки
ассоциирует пространство имен с объектом domxpath
используйте этот аргумент для включения возможности вызывать из xpath выражений только определенные функции
регистрация функций php как xpath функций
метод key()
метод next()
метод rewind()
метод valid()
возвращает уровень критичности исключения
возвращает критичность исключения
клонировать исключение
возвращает имя файла в котором исключение было создано
получает файл в котором возникло исключение
возвращает номер строки где было создано исключение
получает строку в которой возникло исключение
возвращает сообщение исключения в виде строки
получает сообщение исключения
возвращает трассировку стека исключения в виде массива array
получает трассировку стека
возвращает трассировку стека исключения в виде строки
получает трассировку стека в виде строки
путь к объекту файловой системы по которому требуется навигация
поведение некоторых методов можно задать с помощью флагов
создает новый итератор файловой системы
перемещение указателя на следующий файл
перемещение указателя на начало
флаги которые необходимо установить
задание настроечных флагов
true если текущий элемент допустим в противном случае false
проверяет является ли текущий элемент итератора допустимым
фильтруемый итератор
объект класса filteriterator
создает filteriterator
псевдоним finfo_buffer
псевдоним finfo_set_flags
числовое значение
абсолютное значение number
модуль числа
аргумент функции
арккосинус числа arg в радианах
арккосинус
экранируемая строка
список экранируемых символов
возвращает экранированную строку
экранирует cтроку слешами в стиле языка c
экранируемая строка
возвращает экранируемую строку
экранирует строку с помощью слешей
массив загруженных модулей сервера apache
возвращает список загруженных модулей сервера apache
получить переменную верхнего уровня доступную для всех уровней сервера apache или нет
переменная окружения сервера apache
значение переменной окружения сервера apache в случае успеха или false в случае ошибки
возвращает переменную окружения подпроцесса сервера apache
имя файла uri который запрашивается
объект содержащий информацию о переданном uri
осуществить частичный запрос на указанный uri и вернуть все полученные сведения
массив http заголовков ответа apache при успешном выполнении или false в случае возникновения ошибки
возвращает список всех http заголовков ответа apache
массив содержащий текущий вызов стека
возвращает текущий вызов стека в виде массива
предупреждение для вывода
разделитель
выводит предупреждение и стек вызова
обрабатываемый массив
либо case_upper либо case_lower используется по умолчанию
возвращает массив с ключами преобразованными в верхний или нижний регистр либо false если array не является массивом
меняет регистр всех ключей в массиве
массив значений
массив ключей
возвращает скомбинированный array либо false если количество элементов в массивах не совпадает
создает новый массив используя один массив в качестве ключей а другой в качестве соответствующих значений
исходный массив
дополнительные массивы с которыми осуществляется сравнение
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
массив с которым идет сравнение
возвращает array содержащий все элементы array1 которых нет во всех остальных массивах
вычисляет расхождение массивов с дополнительной проверкой индекса осуществляемой при помощи callback-функции
исходный массив
дополнительные массивы с которыми осуществляется сравнение
массив с которым идет сравнение
возвращает array содержащий элементы array1 отсутствующие в любом из всех остальных массивах
вычислить расхождение массивов
массив значений которые будут использованы в качестве ключей
заполняемое значение
возвращает заполненный массив
создает массив и заполняет его значениями с определенными ключами
количество вставляемых элементов
первый индекс возвращаемого массива
значение для заполнения
возвращает заполненный массив
заполняет массив значениями
используемая callback-функция если callback -функция не передана все значения массива array равные false см
итерируемый массив
флаг определяющий какие аргументы передавать в callback : array_filter_use_key - передавать только ключ массива как аргумент для callback вместо значения array_filter_use_both - передавать и ключ и значение в callback вместо только значения
возвращает отфильтрованный массив
фильтрует элементы массива с помощью callback-функции
массив переворачиваемых пар ключ / значение
возвращает перевернутый массив в случае успеха или null в случае ошибки
меняет местами ключи с их значениями в массиве
основной проверяемый массив
массив с которым идет сравнение
переменный список сравниваемых массивов
возвращает ассоциативный массив содержащий все элементы array1 имеющие ключи содержащиеся во всех остальных параметрах
вычислить пересечение массивов сравнивая ключи
первый массив с которым сравниваются ключи
дополнительные массивы с которыми осуществляется сравнение
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
исходный сравниваемый массив
возвращает все элементы array1 чьи значения существуют во всех аргументах
вычисляет схождение массивов с дополнительной проверкой индекса осуществляемой при помощи callback-функции
основной проверяемый массив
первый массив с которым сравниваются ключи
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
дополнительные массивы с которыми осуществляется сравнение ключей
возвращает все элементы array1 чьи ключи существуют во всех переданных аргументах
вычисляет схождение массивов используя callback-функцию для сравнения ключей
дополнительные массивы для обработки callback -функцией
массив к которому применяется callback -функция
callback-функция применяемая к каждому элементу в каждом массиве
возвращает массив содержащий все элементы array1 после применения callback -функции к каждому из них
применяет callback-функцию ко всем элементам указанных массивов
первоначальный массив для слияния
дополнительные рекурсивно сливаемые массивы
массив значений полученный в результате слияния аргументов вместе
рекурсивное слияние двух или более массивов
исходный сливаемый массив
дополнительные сливаемые массивы
возвращает результирующий массив
сливает один или большее количество массивов
настройки сортировки для вышеуказанного аргумента array : флаг способа сортировки: sort_regular - обычное сравнение элементов без изменения типов sort_numeric - сравнение элементов как чисел sort_string - сравнение элементов как строк sort_locale_string - сравнение элементов как строк учитывая текущую локаль
порядок для сортировки вышеуказанного аргумента array
сортируемый массив array
дополнительные массивы необязательно следующие после порядка сортировки и флагов
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует несколько массивов или многомерные массивы
новый размер массива
дополняемое значение если длина массива array меньше size
исходный массив к которому дополняются элементы
возвращает копию array дополненного до размера указанного size значением value
дополнить размер массива определенным значением до заданной величины
массив из которого берется значение
возвращает последний элемент массива array
извлекает последний элемент массива
определяет количество выбираемых элементов
входной массив
при выборе только одного элемента array_rand() возвращает ключ для случайного элемента
выбирает одно или несколько случайных значений из массива
содержит результирующее значение с предыдущей итерации; в случае же первой итерации содержит значение параметра initial
содержит значение текущей итерации
если передан необязательный параметр initial то он будет использован в начале процесса или в качестве окончательного результата в случае пустого массива
входной массив
mixed callback mixed $carry mixed $item carry содержит результирующее значение с предыдущей итерации; в случае же первой итерации содержит значение параметра initial
возвращает получившееся значение
итеративно уменьшает массив к единственному значению используя callback-функцию
массив из которого будут взяты элементы для замены
дополнительные массивы из которых будут браться элементы для замены
массив элементы которого будут заменены
возвращает array или null если произошла ошибка
рекурсивно заменяет элементы первого массива элементами переданных массивов
массив элементами которого будут заменяться элементы первого массива
массив элементы которого требуется заменить
еще массивы из которых будут браться элементы для замены
возвращает массив array или null в случае ошибки
замена элементов массива элементами других переданных массивов
если установлено в true то ключи будут сохранены
входной массив
возвращает массив с элементами в обратном порядке
возвращает массив с элементами в обратном порядке
массив
искомое значение
если третий параметр strict установлен в true то функция array_search() будет искать идентичные элементы в haystack
возвращает ключ для needle если он был найден в массиве иначе false
осуществляет поиск данного значения в массиве и возвращает соответствующий ключ в случае удачи
обратите внимание что по умолчанию array_slice() сбрасывает ключи массива
если параметр offset неотрицателен последовательность начнётся на указанном расстоянии от начала array
входной массив
если в эту функцию передан положительный параметр length последовательность будет включать количество элементов меньшее или равное length length length
возвращает срез
выбирает срез массива
если параметр offset положителен будут удалены элементы находящиеся на расстоянии offset от начала input
если передан массив replacement в качестве аргумента тогда удалённые элементы будут заменены элементами этого массива
входной массив
если параметр length опущен будут удалены все элементы начиная с позиции offset и до конца массива
возвращает массив содержащий удалённые элементы
удаляет часть массива и заменяет её чем-нибудь ещё
второй массив
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
первый массив
array_udiff_assoc() возвращает array содержащий все элементы array1 которых нет в каком-либо из всех остальных аргументов
вычисляет расхождение в массивах с дополнительной проверкой индексов используя для сравнения значений callback-функцию
сравнение ключей индексов также осуществляется с помощью callback-функции key_compare_func
второй массив
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
первый массив
возвращает array содержащий все элементы array1 которых нет в каком-либо из остальных аргументов
вычисляет расхождение в массивах с дополнительной проверкой индексов используя для сравнения значений и индексов callback-функцию
второй массив
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
первый массив
возвращает массив содержащий все элементы array1 которые существуют во всех остальных аргументах
вычисляет пересечение массивов с дополнительной проверкой индексов используя для сравнения значений callback-функцию
второй массив
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
первый массив
возвращает массив содержащий все элементы array1 которые существуют во всех остальных аргументах
вычисляет пересечение массивов используя для сравнения значений callback-функцию
можно использовать необязательный второй параметр sort_flags для изменения поведения сортировки с помощью следующих значений: виды сортировок флагов: sort_regular - нормальное сравнение элементов типы не меняются sort_numeric - элементы сравниваются как числа sort_string - элементы сравниваются как строки sort_locale_string - сравнивает элементы как строки с учетом текущей локали
входной массив
возвращает отфильтрованный массив
убирает повторяющиеся значения из массива
первое значение для добавления
входной массив
возвращает новое количество элементов в array
добавляет один или несколько элементов в начало массива
если указан необязательный параметр userdata то он будет передан третьим параметром функции callback
обычно callback принимает два параметра
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рекурсивно применяет пользовательскую функцию к каждому элементу массива
синтаксис индекс = > значения разделённые запятыми определяет индексы и их значения
возвращает массив параметров
создает массив
вы можете изменить поведение сортировки используя дополнительный параметр sort_flags подробнее см
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив в обратном порядке сохраняя ключи
входное значение
гиперболический арксинус arg
гиперболический арксинус
вы можете изменить поведение сортировки используя дополнительный параметр sort_flags подробнее см
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив сохраняя ключи
входное значение
гиперболический арктангенс arg
гиперболический арктангенс
основание системы счисления числа number
основание системы счисления для преобразования числа number
число для преобразования
number преобразованное в систему счисления tobase
преобразование числа между произвольными системами счисления
закодированные данные
возвращает false если данные содержат символы вне алфавита base64
возвращает декодированные данные или false в случае возникновения ошибки
декодирует данные закодированные алгоритмом mime base64
путь
если компонент имени заканчивается на suffix то он также будет отброшен
возвращает базовое имя указанного пути path
возвращает последний компонент имени из указанного пути
новый тег добавляемый в набор тегов bbcode_container
ассоциативный массив содержащий правила разбора; см
bbcode_container типа resource возвращаемый функцией bbcode_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет элемент bbcode
строка которая заменяет смайл при совпадении
строка которая будет заменена при совпадении
bbcode_container типа resource возвращаемый функцией bbcode_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет смайлы для разбора парсером
bbcode_container типа resource возвращаемый функцией bbcode_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает ресурс bbcode_container
строка которую необходимо разобрать
bbcode_container типа resource возвращаемый функцией bbcode_create()
возвращает разобранную строку или false в случае возникновения ошибки
производит разбор строки в соответствии с заданным набором правил
значение bbcode_container типа resource возвращаемое функцией bbcode_create()
bbcode_container resource возвращаемый функцией bbcode_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
подключает другой парсер для применения иного набора правил в качестве параметров разбора
набор флагов которые будут применены к настройкам bbcode_container
одна из констант bbcode_set_flags_* используемых для установки снятия указанного набора флагов или замены набора флагов другим набором
bbcode_container типа resource возвращаемый функцией bbcode_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает или изменяет настройки парсера
левый операнд слагаемое в виде строки
правый операнд слагаемое в виде строки
этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате
сумма слагаемых в виде строки
сложить 2 числа произвольной точности
левый операнд в виде строки
правый операнд в виде строки
необязательный аргумент scale задает количество цифр после десятичной точки которое будет участвовать в сравнении
возвращает 0 если числа равны; 1 если left_operand больше чем right_operand ; -1 если меньше
сравнение двух чисел произвольной точности
левый операнд в виде строки
правый операнд в виде строки
этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате
возвращает результат деления в виде строки или null если right_operand равен 0
операция деления для чисел произвольной точности
левый операнд в виде строки
правый операнд модуль в виде строки
возвращает остаток от деления в виде строки или null если modulus равен 0
получает остаток от деления чисел с произвольной точностью
масштаб число знаков после запятой
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задает количество чисел после десятичной точки по умолчанию для всех bc math функций
этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате
левый операнд уменьшаемое в виде строки
правый операнд вычитаемое в виде строки
разность в виде строки
вычитает одно число с произвольной точностью из другого
строка
возвращает шестнадцатеричное представление указанной строки
преобразует бинарные данные в шестнадцатеричное представление
кодировка
домен
строка в случае успеха
устанавливает кодировку в которой будут возвращаться сообщения из каталога сообщений домена
бинарная строка для преобразования
десятичное значение binary_string
двоичное в десятичное
преобразуемый bson объект
возвращает десериализованный bson объект
преобразовывает объект bson в массив php
преобразуемая переменная
возвращает сериализованную строку
преобразовывет переменную php в строку bson
указатель на файл
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает файл bzip2
сжимаемая строка
контролирует поведение фазы компрессии в худшем случае когда входные данные являются часто повторяющимися
определяет размера блока используемый при сжатии должен быть числом в диапазоне от 1 до 9 где 9 даст наилучшее но более ресурсоемкое сжатие
сжатая строка или код ошибки в случае неудачного завершения работы
сжимает строку с использованием bzip2
если true то будет использован альтернативный алгоритм распаковки использующий меньше памяти максимально требуемая память находится в районе 2300k но работает приблизительно вдвое медленнее
распаковываемая строка
распакованная строка или код ошибки в случае неудачного завершения работы
распаковывает данные сжатые с использованием bzip2
указатель на файл
возвращает код ошибки в виде целого числа
возвращает код ошибки работы с bzip2
файловый указатель
возвращает ассоциативный массив с кодом ошибки с ключом errno и строкой ошибки с ключом errstr
возвращает код и строку ошибки работы с bzip2 в виде массива
указатель на файл
возвращает строку содержащую сообщение об ошибке
возвращает строку ошибки работы с bzip2
указатель на файл
возвращает true в случае успешного завершения или false в случае возникновения ошибки
форсирует запись всех буферизированных данных
указатель на файл
если не указан bzread() будет считывать 1024 несжатых байта за один раз
возвращает распакованные данные либо false в случае ошибки
бинарно-безопасное чтение файла bzip2
указатель на файл
если указан запись остановится после length несжатых записанных байт либо если был достигнут конец data в зависимости от того что произойдет первым
записываемые данные
возвращает количество записанных байт или false в случае ошибки
бинарно-безопасная запись bzip2 файла
календарь используемый для вычисления
год в выбранном календаре
месяц в выбранном календаре
количество дней в конкретном месяце выбранного календаря
возвращает количество дней в месяце для заданного года и календаря
день юлианского календаря как целое число
календарь в который нужно преобразовать дату
возвращает массив содержащий информацию о дате такую как месяц день год день недели сокращенное и полное название дня недели месяца и дату в форме месяц / день / год
преобразует дату заданную в юлианском календаре в дату указанного календаря
день в виде числа разрешенное значение зависит от календаря calendar
месяц в виде числа разрешенное значение зависит от календаря calendar
календарь из которого будет произведена конвертация один из: cal_gregorian cal_julian cal_jewish или cal_french
год в виде числа разрешенное значение зависит от календаря calendar
число дней в юлианском исчислении
преобразует заданную дату в юлианское исчисление
передаваемые в функцию параметры в виде индексированного массива
вызываемая функция типа callable
возвращает результат функции или false в случае ошибки
вызывает пользовательскую функцию с массивом параметров
новый текущий каталог
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет каталог
месяц
год
день
возвращает true если проверяемая дата является корректной или false в противном случае
проверяет корректность даты по григорианскому календарю
название или номер группы
путь к файлу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет группу владельцев файла
ascii-код
возвращает символ по его коду
возвращает символ по его коду
путь для смены корневой директории
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет корневой каталог
длина фрагмента
последовательность символов используемая в качестве конца строки
разбиваемая строка
возвращает преобразованную строку
разбивает строку на фрагменты
имя псевдонима для класса
оригинальный класс
нужно ли автоматически подгружать оригинальный класс если он не был найден
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создает псевдоним для указанного класса
в зависимости от переданного значения функция может загрузить описание класса автоматически магическим методом __autoload()
объект экземпляр класса или строка имя класса
в случае успеха будет возвращен массив
возвращает список родительских классов заданного класса
в зависимости от переданного значения функция может загрузить описание класса автоматически магическим методом __autoload()
объект экземпляр класса или строка имя класса
в случае успеха будет возвращен массив
возвращает список трэйтов используемых заданным классом
очистить кэш realpath и stat только для определенного файла используется только если параметр clear_realpath_cache установлен в true
очищать кэш realpath или нет
очищает кэш состояния файлов
дескриптор каталога resource предварительно открытый с помощью opendir()
освобождает дескриптор каталога
возвращает true в случае успешного завершения или false в случае возникновения ошибки
завершает соединение с системным журналом
возвращает 1 если клиент отключен 0 в другом случае
проверяет подключение клиента
возвращает статус соединения в битах который можно использовать в константах connection_xxx для определения статуса соединения
возвращает статус соединения в битах
исходная кириллическая кодировка один символ
конвертируемая строка
целевая кириллическая кодировка один символ
возвращает преобразованную строку
преобразует строку из одной кириллической кодировки в другую
данные в формате uuencode
возвращает декодированные данные в виде строки или false в случае возникновения ошибки
декодирует строку из формата uuencode в обычный вид
кодируемые данные
возвращает закодированные данные в формате uuencode или false в случае возникновения ошибки
кодирует строку в формат uuencode
угол в радианах
косинус угла arg
косинус
входное значение
гиперболический косинус arg
гиперболический косинус
исследуемая строка
смотрите возвращаемые значения
в зависимости от параметра mode count_chars() возвращает одно из следующих значений: 0 - массив индексами которого являются ascii-коды а значениями - число вхождений соответствующего символа
возвращает информацию о символах входящих в строку
идентификатор словаря cracklib
проверяемый пароль
возвращает true если пароль переданный в параметре password сильный взломоустойчивый иначе false
проверяет взломостойкость переданного пароля
словарь который нужно закрыть
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает открытый ранее словарь cracklib
путь к словарю cracklib
возвращает идентификатор ресурса словаря в случае успеха или false в случае возникновения ошибки
открывает новый словарь cracklib
код функции
аргументы функции
возвращает уникальное имя функции в виде строки или false в случае ошибки
создаёт анонимную лямбда функцию
хэшируемая строка
необязательный параметр с солью на которой будет основано хэширование
возвращает хэшированную строку или строку короче 13 символов гарантированно отличающуюся от соли в случае ошибки
необратимое хэширование строки
проверяемая строка
возвращает true если каждый символ в строке text является буквой или цифрой иначе возвращается false
проверяет на наличие буквенно-цифровых символов
проверяемая строка
возвращает true если каждый символ в строке text является буквой из текущей локали false в противном случае
проверяет на наличие буквенных символов
проверяемая строка
возвращает true если каждый символ в строке text является управляющим символом из текущей локали false в противном случае
проверяет на наличие управляющих символов
проверяемая строка
возвращает true если каждый символ в строке text является буквой в нижнем регистре в текущей локали
проверяет наличие символов в нижнем регистре
проверяемая строка
возвращает true если каждый символ в строке text фактически создает вывод включая пустой
проверяет на наличие печатных символов
проверяемая строка
возвращает true если каждый символ в строке text является печатным но не является ни буквой ни цифрой ни пустым символом иначе будет возвращено false
проверяет на наличие печатных символов которые в то же время не являются пробельными или буквенно-цифровыми символами
проверяемая строка
возвращает true если каждый символ в строке text создает какой-нибудь из пробельных символов false в противном случае
проверяет наличие пробельных символов
проверяемая строка
возвращает true если каждый символ в строке text является буквой в верхнем регистре в текущей локали
проверяет на наличие символов в верхнем регистре
проверяемая строка
возвращает true если каждый символ строки text является шестнадцатеричной цифрой то есть десятичной цифрой либо символом из диапазона a-fa-f в обратном случае возвращает false
проверяет наличие шестнадцатеричных цифр
дескриптор curl полученный из curl_init()
завершает сеанс curl
дескриптор curl полученный из curl_init()
возвращает новый дескриптор curl
копирует дескриптор curl вместе со всеми его настройками
дескриптор curl полученный из curl_init()
возвращает номер ошибки или 0 ноль если ошибки не произошло
возвращает код последней ошибки
дескриптор curl полученный из curl_init()
возвращает сообщение об ошибке или пустую строку если ошибки не произошло
возвращает строку с описанием последней ошибки текущего сеанса
дескриптор curl полученный из curl_init()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
выполняет запрос curl
может принимать значение одной из следующих констант: curlinfo_effective_url - последний использованный url curlinfo_http_code - последний полученный http код curlinfo_filetime - удаленная серверная дата загруженного документа если она неизвестна возвращается -1
дескриптор curl полученный из curl_init()
если параметр opt указан то возвращается его значение
возвращает информацию об определенной операции
если указан опция curlopt_url будет автоматически установлена в значение этого аргумента
возвращает дескриптор curl при удаче и false в случае ошибки
инициализирует сеанс curl
мульти-дескриптор curl полученный из curl_multi_init()
дескриптор curl полученный из curl_init()
возвращает 0 при успехе или один из кодов ошибок curlm_xxx
добавляет обычный curl дескриптор к набору curl дескрипторов
мульти-дескриптор curl полученный из curl_multi_init()
закрывает набор curl дескрипторов
дескриптор curl полученный из curl_init()
возвращает содержимое curl дескриптора если была использована опция curlopt_returntransfer
возвращает результат операции если была установлена опция curlopt_returntransfer
мульти-дескриптор curl полученный из curl_multi_init()
время в секундах для ожидания ответа
в случае успеха возвращает количество дескрипторов содержащихся в наборах дескрипторов
ждет активности на любом curl_multi соединении
устанавливаемый параметр curlopt_xxx
дескриптор curl полученный из curl_init()
значение параметра option
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает параметр для сеанса curl
возвращает версию curl
массив
функция current() просто возвращает значение элемента массива на который указывает его внутренний указатель
возвращает текущий элемент массива
массив обратных вызовов
дескриптор соединения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
привязать обратные вызовы для cyrus imap соединения
дескриптор соединения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает соединение с сервером cyrus imap
номер порта
имя хоста cyrus imap сервера
возвращает дескриптор соединения в случае успеха или false в случае возникновения ошибки
установить соединение с сервером cyrus imap
дескриптор соединения
строка запроса
возвращает ассоциативный массив со следующими ключами: text msgno и keyword
послать запрос cyrus imap серверу
возвращает string
возвращает временную зону используемой по умолчанию всеми функциями даты / времени в скрипте
формат распознаваемый функцией datetime::createfromformat()
строка представляющая дату
возвращает ассоциативный массив с подробной информацией о заданной дате
получение информации о заданной в определенном формате дате
по умолчанию в северном полушарии для южного передается отрицательная величина
временная метка timestamp дня для которого определяется время рассвета
format constants константа описание пример sunfuncs_ret_string тип возвращаемого результата string 16:46 sunfuncs_ret_double тип возвращаемого результата float 16
по умолчанию восточная для указания западной долготы передается отрицательная величина
по умолчанию: date
задается в часах
возвращает время восхода солнца в заданном формате format или false в случае возникновения ошибки
возвращает время рассвета для заданных дня и местоположения
временная метка timestamp дня для которого определяется время захода солнца
по умолчанию в северном полушарии для южного передается отрицательная величина
format constants константа описание пример sunfuncs_ret_string тип возвращаемого результата string 16:46 sunfuncs_ret_double тип возвращаемого результата float 16
по умолчанию восточная для указания западной долготы передается отрицательная величина
по умолчанию: date
задается в часах
возвращает время захода солнца в заданном формате format или false в случае возникновения ошибки
возвращает время захода солнца для заданных дня и местоположения
идентификатор базы данных возвращаемый функцией dbase_open() или dbase_create()
индексированный массив с данными
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет запись в базу данных
идентификатор базы данных возвращаемый функцией dbase_open() или dbase_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает базу данных
массив массивов в котором каждый массив описывает формат одного поля базы данных
имя базы данных
возвращает идентификатор связи с базой данных если база данных успешно создана или false в случае ошибки
создает базу данных
целое число в промежутке от 1 до количества записей в базе дынных количество записей возвращает функция dbase_numrecords()
идентификатор базы данных возвращаемый функцией dbase_open() или dbase_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаление записей из базы данных
идентификатор базы данных полученный с помощью dbase_open() или dbase_create()
индексированный массив значений для каждой колонки поля
получает информацию о свойствах полей базы данных
идентификатор базы данных возвращаемый функцией dbase_open() или dbase_create()
индекс записи
возвращает запись в виде массива
получает записи из базы данных как из индексированного массива
идентификатор базы данных возвращаемый функцией dbase_open() или dbase_create()
количество записей в базе данных или false в случае возникновения ошибки
получает количество записей в базе данных
имя базы данных
целое число которое соответствует аналогичному в системном вызове open() обычно 0 означает режим для чтения 1 - режим для записи и 2 - режим для чтения и записи
возвращает идентификатор ссылки на базу данных если база данных успешно открыта или false если произошла ошибка
открывает базу данных
идентификатор базы данных возвращаемый функцией dbase_open() или dbase_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
фиксирует удаление из базы данных
индексированный массив данных
целое число которое может быть в диапазоне от 1 до числа записей в базе данных которое вернула функция dbase_numrecords()
идентификатор базы данных возвращаемый функцией dbase_open() или dbase_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
заменяет запись в базе данных
сообщение
домен
категория
в случае успеха возвращает значение типа string
переопределяет одно сообщение в домене
домен
в случае успеха возвращает значение типа string
версия dcgettext для множественного числа
в версии 5
в версии 5
возвращает массив вложенных ассоциативных массивов array
выводит стек вызовов функций в массив
в версии 5
в версии 5
выводит стек вызовов функций
десятичное значение для преобразования
восьмеричное строковое представление number
переводит число из десятичной системы счисления в восьмеричную
инициализирует все syslog переменные
сообщение
домен
в случае успеха возвращает значение типа string
позволяет переопределить текущий домен
замечание : поддержка контекста была добавлена в php 5
каталог для открытия
возвращает экземпляр класса directory null при неверных параметрах и false в случае другой ошибки
возвращает экземпляр класса directory
путь
возвращает путь к родительской директории
возвращает имя родительского каталога из указанного пути
директория файловой системы или раздел диска
возвращает общий размер в байтах в виде вещественного числа или false в случае возникновения ошибки
возвращает общий размер каталога или раздела файловой системы
этот аргумент содержит только имя файла расширения которое требуется загрузить
возвращает true в случае успешного завершения или false в случае возникновения ошибки
загружает php расширение во время выполнения
домен
в случае успеха возвращает значение типа string
версия dgettext для множественного числа
узел simplexmlelement
добавленный узел domelement или false в случае возникновения любых ошибок
получает объект класса domelement из объекта класса simplexmlelement
входной массив
возвращает текущую пару ключ / значение из массива array
возвращает текущую пару ключ / значение из массива и смещает его указатель
год - число между 1970 и 2037
дата пасхи в виде метки времени unix
метка времени unix соответствующая полуночи на пасху в заданном году
год положительное число
позволяет расcчитать пасхальные даты основываясь на григорианском календаре для 1582 - 1752 годов если установить cal_easter_roman
количество дней между 21 марта и пасхальным воскресеньем в заданном году year
получение количества дней между 21 марта и пасхой в заданном году
функция обратного вызова исполняемая когда все запросы группы будут выполнены
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
задержка в секундах
произвольная переменная передаваемая в callback -функцию
eio_busy() возвращает запрос типа resource в случае успеха или false при ошибке
искусственно увеличивает нагрузку
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
ресурс запроса
отменяет запрос
новые права доступа
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
путь к файлу или директории внимание избегайте относительных путей
eio_chmod() возвращает указатель на запрос при успехе или false при ошибке
изменяет права доступа к файлу / директории
путь к файлу или директории
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
код пользователя
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
код группы
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
eio_chown() возвращает указатель на запрос при успехе или false при ошибке
изменяет права доступа к файлу / директории
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
поток указатель на сокет socket resource или числовой дескриптор файла
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
eio_close() возвращает указатель на запрос при успехе или false при ошибке
close file
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
целевой поток указатель на сокет socket resource или нумерованный дескриптор файла
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
исходный поток указатель на сокет socket resource или нумерованный дескриптор файла
eio_dup2() возвращает указатель на запрос при успехе или false при ошибке
создает дубликат дескриптора файла
новые права доступа
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
поток указатель на сокет или числовой дескриптор файла например возвращенный eio_open()
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
eio_fchmod() возвращает указатель на запрос при успехе или false при ошибке
изменяет права доступа к файлу
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
поток указатель на сокет или числовой дескриптор файла например возвращенный eio_open()
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
eio_fdatasync() возвращает указатель на запрос при успехе или false при ошибке
синхронизирует текущее состояние файла с физическим устройством
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
поток указатель на сокет или числовой дескриптор файла
eio_busy() возвращает указатель на запрос при успехе или false при ошибке
возвращает статус файла
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
файловый дескриптор файла примонтированной файловой системы
eio_fstatvfs() возвращает указатель на запрос при успехе или false при ошибке
возвращает статистику файловой системы
время последнего изменения
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
поток указатель на сокет или числовой дескриптор файла возвращенный к примеру eio_open()
произвольная переменная передаваемая в callback -функцию
время последнего доступа
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
eio_futime() возвращает указатель на запрос при успехе или false при ошибке
изменяет дату и время последней модификации и доступа к файлу
указатель на ресурс
eio_get_last_error() возвращает строку содержащую последнюю ошибку связанную с указателем на ресурс req
возвращает последнюю ошибку связанную с указателем на ресурс
указатель на группу запросов возвращённый eio_grp()
указатель на ресурс
добавляет запрос в группу запросов
указатель на группу запросов возвращенный eio_grp()
отменяет группу запросов
указатель на группу ресурсов
максимальное количество ресурсов в группе
устанавливает предельное количество запросов в группе
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
произвольная переменная передаваемая в callback -функцию
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
eio_grp() возвращает указатель на запрос при успехе или false при ошибке
создает группу запросов
re- initialize eio
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
путь к файлу
имя жесткой ссылки
создает жесткую ссылку на файл
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
путь к файлу
eio_lstat() возвращает указатель на запрос при успехе или false при ошибке
возвращает статус файла
данные которые необходимо передать в callback-функцию callback
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
является пользовательскими данными переданными в запросе
функция callback вызывается при завершении запроса
при создании файла типа eio_s_ifchr или eio_s_ifblk параметр dev задает верхнюю и нижнюю границы нумерации специальных файлов устройств
задает разрешения для файла и его тип
путь к новому файлу
eio_mknod() возвращает ресурс запроса в случае успеха операции либо false в случае ошибки
создает специальный или обычный файл
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
данные которые будут переданы в callback-функцию callback
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
eio_nop() возвращает ресурс запроса либо false в случае ошибки
проход по циклу запроса не совершая никаких операций
eio_npending() возвращает число завершенных но необработанных процессов
возвращает число завершенных но необработанных процессов
eio_nreqs() возвращает число запросов которые предстоит выполнить
возвращает число запросов которые предстоит выполнить
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
путь к открываемому файлу
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
данные которые будут передаваться в callback-функцию callback
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
комбинация из одной или нескольких констант eio_s_i* через побитовое или
комбинация из одной или нескольких констант eio_o_*
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
eio_open() возвращает дескриптор файла через аргумент result callback-функции callback
открывает файл
если любой вызов запроса возвращает ненулевое значение возвращается это значение
может быть вызвана когда имеются запросы ожидающие выполнения
данные которые необходимо передать в функцию callback
максимальное считываемое число байт
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
смещение в файле
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
поток ресурс сокета или числовой файловый описатель
eio_read() передает считанные данные через параметр result в функцию callback
читает данные из файла начиная с заданного смещения
краткий или относительный путь
получает абсолютный приведенный к каноническому виду путь
данные которые необходимо передать в функцию callback
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
число байт которое необходимо прочитать
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
начальная позиция с которой будут читаться данные
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
поток ресурс сокета или числовой описатель файла
eio_seek() возвращает ресурс запроса или false в случае ошибки
перемещает файловый указатель файла fd на число байт offset в соответствии с директивой whence
количество секунд
устанавливает максимальное время выполнения
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
путь к файлу
eio_stat() возвращает указатель на запрос при успехе или false при ошибке
возвращает статус файла
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
функция callback вызывается при завершении запроса
произвольная переменная передаваемая в callback -функцию
имя любого файла в примонтированной файловой системе
является пользовательскими данными переданными в запросе
eio_stat() возвращает указатель на запрос при успехе или false при ошибке
возвращает статистику файловой системы
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
смещение от начала файла
путь к файлу
eio_busy() возвращает указатель на запрос при успехе или false при ошибке
урезает размер файла
содержит результирующее значение зависящее от запроса; обычно это значение возвращаемое соответствующим системным вызовом
является опциональным запрашиваемым ресурсом который может использоваться с такими функциями как eio_get_last_error()
приоритет запросов: eio_pri_default eio_pri_min eio_pri_max или null
произвольная переменная передаваемая в callback -функцию
функция callback вызывается при завершении запроса
является пользовательскими данными переданными в запросе
путь к файлу
eio_unlink() возвращает указатель на запрос при успехе или false при ошибке
удаляет файл или одну из жестких ссылок на него
массив
возвращает значение последнего элемента или false для пустого массива
устанавливает внутренний указатель массива на его последний элемент
расширенное регулярное выражение posix
если pattern содержит подстроки в скобках replacement может содержать подстроки вида \ digit которые будут заменены текстом совпавшим с digit-подстрокой в скобках; \0 воспроизведет все содержимое строки
исходная строка
возвращается измененная строка
осуществляет замену по регулярному выражению без учета регистра
входная строка
если совпадения найдены для подстрок в скобках из pattern и функция вызывается с третьим аргументом regs совпадения будут сохранены в элементах массива regs
регистронезависимое регулярное выражение
возвращает длину совпавшей строки если совпадения с pattern найдены в string или false если совпадений не найдено или возникла ошибка
совпадение с регулярным выражением без учёта регистра
возвращает ассоциативный массив с описанием последней произошедшей ошибки
получение информации о последней произошедшей ошибке
назначение
дополнительные заголовки
сообщение об ошибке которое должно быть логировано
определяет куда отправлять ошибку
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправляет сообщение об ошибке заданному обработчику ошибок
новое значение уровня error_reporting
возвращает старое значение уровня error_reporting либо текущее значение если аргумент level не задан
задает какие ошибки php попадут в отчет
аргумент который будет экранирован
экранированная строка
экранирует строку для того чтобы она могла быть использована как аргумент командной строки
команда которая будет экранирована
экранированная строка
экранирует метасимволы командной строки
изображение тип которого требуется определить
если корректная сигнатура обнаружена функция вернет соответствующую типу изображения константу
определение типа изображения
возвращаемая ширина эскиза
возвращаемый тип эскиза
возвращаемая высота эскиза
имя файла изображения
возвращает встроенный эскиз или false если изображение не содержит эскиза
получает встроенный эскиз tiff или jpeg изображения
если параметр status задан в виде строки то эта функция выведет содержимое status перед выходом
выводит сообщение и прекращает выполнение текущего скрипта
степень для возведения
e возводится в степень arg
вычисляет число e в степени
входная строка
если аргумент limit является положительным возвращаемый массив будет содержать максимум limit элементов при этом последний элемент будет содержать остаток строки string
разделитель
возвращает массив array строк string созданный делением параметра string по границам указанным параметром delimiter
разбивает строку с помощью разделителя
если переменная с таким именем существует она будет перезаписана
если переменная с таким именем существует к её имени будет добавлен префикс определённый параметром prefix
параметр flags определяет способ трактования неправильных / числовых ключей и коллизий
добавить префикс prefix только к некорректным / числовым именам переменных
извлечь переменные как ссылки
создать только префикс-версии переменных если версия данной переменной без префикса уже существует в текущей символьной таблице
ассоциативный массив
если переменная с таким именем существует ее текущее значение не будет перезаписано
добавить префикс prefix ко всем именам переменных
перезаписать только переменные уже имеющиеся в текущей таблице символов в противном случае не делать ничего
обратите внимание что prefix имеет значение только если flags установлен в extr_prefix_same extr_prefix_all extr_prefix_invalid или extr_prefix_if_exists
возвращает количество переменных успешно импортированных в текущую таблицу символов
импортирует переменные из массива в текущую таблицу символов
идентификатор соединения frontbase полученный из fbsql_connect() или fbsql_pconnect()
если последний запрос не был произведен то функция возвращает -1
возвращает число затронутых строк в предыдущем frontbase действии
дескриптор должен быть корректным и указывать на файл открытый ранее с помощью функции fopen() или fsockopen()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает открытый дескриптор файла
дескриптор fdf-документа возвращенный функциями fdf_create() fdf_open() или fdf_open_string()
закрывает fdf-документ
дескриптор fdf-документа возвращенный функциями fdf_create() fdf_open() или fdf_open_string()
возвращает кодировку в виде строки
получает значение ключа / encoding
указатель на файл должен быть корректным и указывать на файл успешно открытый функциями fopen() или fsockopen() и все еще не закрытым функцией fclose()
возвращает true если указатель файла указывает на eof или произошла ошибка в том числе таймаут сокета иначе возвращает false
проверяет достигнут ли конец файла
указатель на файл должен быть корректным и указывать на файл успешно открытый функциями fopen() или fsockopen() и все еще не закрытым функцией fclose()
возвращает строку с одним символом прочтенным из файла на который указывает handle
считывает символ из файла
можно использовать третий необязательный параметр для указания тегов которые не нужно вырезать
длина получаемых данных
указатель на файл должен быть корректным и указывать на файл успешно открытый функциями fopen() или fsockopen() и все еще не закрытым функцией fclose()
возвращает строку из length - 1 байт прочтенных из файла на который указывает дескриптор handle с вырезанными html и php тегами
прочитать строку из файла и отбросить html-теги
путь к файлу или каталогу
возвращает true если файл или каталог указанный параметром filename существует иначе возвращает false
проверяет наличие указанного файла или каталога
корректный ресурс контекста созданный с помощью функции stream_context_create()
значением параметра flags может быть любая комбинация следующих флагов соединенных бинарным оператором или |
путь к записываемому файлу
записываемые данные
функция возвращает количество записанных байт в файл или false в случае ошибки
пишет строку в файл
путь к файлу
возвращает время последнего изменения файла или false в случае возникновения ошибки
возвращает время изменения индексного дескриптора файла
путь к файлу
возвращает идентификатор группы файла или false в случае ошибки
получает идентификатор группы файла
путь к файлу
возвращает время последнего изменения указанного файла или false в случае возникновения ошибки
возвращает время последнего изменения файла
путь к файлу
возвращает права доступа на указанный файл в числовом виде
возвращает информацию о правах на файл
путь к файлу
возвращает размер указанного файла в байтах или false и генерирует ошибку уровня e_warning в случае возникновения ошибки
возвращает размер файла
путь к файлу
возвращает тип файла
возвращает тип файла
массив определяющий параметры
добавляет в результат отсутствующие ключи со значением null
массив со строковыми ключами содержащий данные для фильтрации
массив содержащий значения запрошенных переменных в случае успеха или false в случае возникновения ошибки
принимает несколько переменных и при необходимости фильтрует их
может быть любого скалярного типа
значение заданной переменной в виде числа с плавающей точкой
возвращает значение переменной в виде числа с плавающей точкой
проверяемая строка
шаблон подстановки оболочки операционной системы
значением параметра flags может быть любая комбинация следующих флагов объединенных с помощью бинарного оператора или |)
при совпадении возвращает true иначе возвращает false
проверяет совпадение имени файла с шаблоном
указатель на файл должен быть корректным и указывать на файл успешно открытый функциями fopen() или fsockopen() и все еще не закрытым функцией fclose()
в случае возникновения ошибки fpassthru() возвращает false
выводит все оставшиеся данные из файлового указателя
описание параметра format смотрите в описании функции sprintf()
указатель resource на файл обычно создаваемый с помощью функции fopen()
возвращает длину записанной строки
записывает отформатированную строку в поток
месяц в виде числа от 1 для месяца vendémiaire до 13 для периода 5-6 дней в конце каждого года
год в виде числа между 1 и 14
день в виде числа от 1 до 30
число integer дней в юлианском летоисчислении для заданной даты по французскому республиканскому календарю
преобразует дату французского республиканского календаря в количество дней в юлианском летоисчислении
указанный формат в соответствии с документацией sprintf()
указатель resource на файл обычно создаваемый с помощью функции fopen()
необязательные присваиваемые значения
если в функцию переданы только два аргумента обработанные значения будут возвращены в виде массива
обрабатывает данные из файла в соответствии с форматом
указатель resource на файл обычно создаваемый с помощью функции fopen()
смещение
значениями whence являются: seek_set - устанавливает смещение в offset байт
в случае успеха возвращает 0; в противном случае возвращает -1
устанавливает смещение в файловом указателе
если этот параметр предоставить то в случае ошибки системного вызова функции connect() он будет принимать номер этой ошибки
номер порта
таймаут соединения в секундах
сообщение об ошибке в виде строки
если установлена поддержка openssl можно использовать ssl или tls протоколы соединений поверх tcp / ip при подключении к удаленному хосту
fsockopen() возвращает файловый указатель который можно передавать в функции работающие с файлами такие как fgets() fgetss() fwrite() fclose() и feof()
открывает соединение с интернет сокетом или доменным сокетом unix
идентификатор соединения с ftp-сервером
количество резервируемых байт
текстовое представление ответа сервера будет возвращено по ссылке в аргумент result если он указан
возвращает true в случае успешного завершения или false в случае возникновения ошибки
резервирует место на диске для закачиваемого файла
идентификатор соединения с ftp-сервером
целевая директория
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет текущую директорию на ftp сервере
идентификатор соединения с ftp-сервером
удалённый файл
новые права доступа указанные в виде восьмеричного значения
возвращает новые права доступа к файлу в случае успеха или false в случае ошибки
устанавливает права доступа к файлу
идентификатор соединения с ftp-сервером
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает соединение с ftp-сервером
этот аргумент указывает альтернативный порт для подключения
этот аргумент указывает таймаут для всех последующих сетевых операций
адрес ftp-сервера
возвращает поток ftp в случае успешного выполнения или false в случае ошибки
устанавливает соединение с ftp-сервером
идентификатор соединения с ftp-сервером
удаляемый файл
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет файл на ftp-сервере
идентификатор соединения с ftp-сервером
команда для выполнения
возвращает true в случае успешного выполнения команды сервер отправляет код ответа: 200 ; в противном случае возвращает false
запрашивает выполнение команды на ftp-сервере
идентификатор соединения с ftp-сервером
путь к удалённому файлу
открытый файловый дескриптор в который будут сохранены данные
режим передачи
позиция начала загрузки в удаленном файле
возвращает true в случае успешного завершения или false в случае возникновения ошибки
скачивает файл с ftp-сервера и сохраняет его в предварительно открытом файле
файл время модификации которого надо получить
идентификатор соединения с ftp сервером
возвращает время последней модификации виде временной метки unix или -1 в случае ошибки
возвращает время последней модификации файла
идентификатор соединения с ftp-сервером
путь к удалённому файлу
режим передачи
открытый файловый дескриптор локального файла
позиция начала загрузки в удаленном файле
возвращает ftp_failed ftp_finished или ftp_moredata
загружает предварительно открытый файл на ftp-сервер в асинхронном режиме
идентификатор соединения с ftp-сервером
путь к удалённому файлу
путь к локальному файлу файл будет перезаписан если уже существует
режим передачи
позиция начала загрузки в удаленном файле
возвращает ftp_failed ftp_finished или ftp_moredata
скачивает файл с ftp-сервера в асинхронном режиме и сохраняет его в локальный файл
идентификатор соединения с ftp-сервером
режим передачи
путь к файлу на сервере
путь к локальному файлу
позиция в удаленном файле в которую начинается загрузка
возвращает ftp_failed ftp_finished или ftp_moredata
загружает файл на ftp сервер в асинхронном режиме
идентификатор соединения с ftp-сервером
если true пассивный режим будет включен иначе выключен
возвращает true в случае успешного завершения или false в случае возникновения ошибки
включает или выключает пассивный режим
идентификатор соединения с ftp-сервером
путь к файлу на ftp-сервере
задает позицию в удаленном файле в которую начнется загрузка
путь к локальному файлу
задает режим передачи
возвращает true в случае успешного завершения или false в случае возникновения ошибки
загружает файл на ftp-сервер
идентификатор соединения с ftp-сервером
команда
возвращает ответ сервера в виде массива строк
отправляет произвольную команду ftp-серверу
идентификатор соединения с ftp-сервером
имя директории на сервере
если передано значение true серверу будет отправлена команда list -r
возвращает массив каждый элемент которого содержит одну строку ответа сервера
возвращает подробный список файлов в заданной директории
в настоящее время поддерживаются следующие параметры: поддерживаемые параметры ftp_timeout_sec устанавливает таймаут сетевых операций в секундах
идентификатор соединения с ftp сервером
назначение этого аргумента зависит от значения параметра option
возвращает true если параметр был установлен; false в противном случае
устанавливает параметры соединения с ftp сервером
идентификатор соединения с ftp-сервером
команда site
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправляет серверу команду site
идентификатор соединения с ftp-сервером
имя файла на сервере
возвращает размер файла или -1 при возникновении ошибки
возвращает размер указанного файла
задает таймаут для всех операций с этим соединением
задает порт на котором устанавливается соединение
адрес ftp-сервера
возвращает ssl-ftp поток в случае успеха или false при возникновении ошибки
устанавливает соединение с ftp-сервером через ssl
номер аргумента
возвращает указанный аргумент или false в случае ошибки
возвращает элемент из списка аргументов
имя функции строка
возвращает true если function_name существует и является функцией иначе возвращается false
возвращает true если указанная функция определена
отключает сборщик циклических ссылок
возвращает ассоциативный массив
вывод информации о текущей установленной gd библиотеке
имя хоста или ip-адрес по которому будет вестись поиск
возвращает два символа содержащих код страны по iso 3166-1 при нахождении адреса в базе данных в противном случае false
получить двухсимвольный код страны
имя хоста или ip-адрес по которому будет вестись поиск
возвращает три символа содержащих код континента по iso 3166-1 при нахождении адреса в базе данных в противном случае false
получить трехсимвольный код страны
имя хоста или ip-адрес по которому будет вестись поиск
возвращает полное название страны при нахождении адреса в базе данных в противном случае false
получить полное название страны
тип базы определяется целым числом integer
возвращает подходящую версию или null при ошибке
возвращает информацию о базе geoip
тип базы определяется целым числом integer
возвращает имя файла соответствующей базы или null при ошибке
возвращает имя файла соответствующей базы geoip
возвращает ассоциативный массив
возвращает подробную информацию обо всех типах базы geoip
имя хоста или ip адрес соединение с которыми проверяется
возвращает тип соединения
возвращает тип интернет соединения
имя хоста или ip адрес
возвращает имя организации в случае успеха или false если адрес не может быть найден в базе данных
возвращает название организации владеющей ip адресом
имя хоста или ip адрес данные о стране и регионе которого необходимо найти
возвращает ассоциативный массив в случае успеха или false если адрес не будет найден в базе данных
возвращает коды страны и региона
двухбуквенный код страны geoip_country_code_by_name()
двухбуквенный или циферный код региона geoip_region_by_name()
возвращает название региона в случае успехе или false если страна и код региона не найдены в базе данных
возвращает название региона для выбранной страны и кода региона
двухбуквенный или цифровой код региона смотрите geoip_region_by_name()
двухбуквенный код страны смотрите geoip_country_code_by_name()
возвращает временную зону в случае успеха или false если страна и одновременно код региона не могут быть найдены
возвращает временную зону и код региона для некоторых стран
если равен true то функция вернет массив array вместо объекта object
анализируется user agent
информация возвращается в виде объекта либо в виде архива который содержит различные данные к примеру мажорную и минорную версию браузера и строку id; true / false наличие функций браузера таких как фреймы javascript cookies и т
сообщает о возможностях браузера пользователя
имя настройки конфигурации
возвращает текущее значение настройки конфигурации php option или false в случае ошибки
извлекает значение настройки конфигурации php
the class name or an object instance
возвращает массив имен методов объявленных в классе class_name
возвращает массив имен методов класса
имя класса
возвращает ассоциативный массив объявленных свойств класса видимых из текущей области видимости с их значением по умолчанию
возвращает объявленные по умолчанию свойства класса
возвращает массив имен объявленных классов текущего скрипта
возвращает массив с именами объявленных классов
использование этого аргумента дает возможность получить многомерный массив в котором в первом измерении будут содержаться категории констант а во втором соответствующие имена и значения
возвращает массив вида имя константы = > значение константы с возможностью сгруппировать его по имени расширения зарегистрировавшей константу
возвращает ассоциативный массив с именами и значениями всех предопределенных констант
эта функция возвращает многомерный массив содержащий список всех определённых функций встроенных и пользовательских
возвращает массив всех определённых функций
многомерный массив со всеми переменными
возвращает массив всех определенных переменных
имя модуля
возвращает массив имен функций или false если module_name не является допустимым модулем
возвращает массив имен функций модуля
указывает какую таблицу использовать для преобразований
используемая кодировка
битовая маска состоящая из одного или нескольких перечисленных ниже флагов которые указывают какие кавычки будет содержать таблица а также для какого документа таблица предназначена
возвращает таблицу преобразований в виде массива с оригинальными символами в качестве ключей и сущностями в качестве значений
возвращает таблицу преобразований используемую функциями htmlspecialchars и htmlentities
возвращает массив имен всех файлов
возвращает массив имен включенных в скрипт файлов
возвращать только zend расширения или обычные расширения вроде mysqli
возвращает индексированный массив имен всех модулей
возвращает массив имен всех скомпилированных и загруженных модулей
возвращает 0 если magic_quotes_gpc выключен 1 в противном случае
получение текущего значения настройки конфигурации magic_quotes_gpc
экземпляр объекта
возвращает ассоциативный массив нестатических свойств объекта object доступных в данной области видимости
возвращает свойства указанного объекта
тестируемый объект или имя класса
возвращает имя родительского класса если object является объектом или именем класса
возвращает имя родительского класса для объекта или класса
определяемый дескриптор ресурса
если данный параметр handle является ресурсом функция возвращает строку указывающую его тип
возвращает тип ресурса
ассоциативный массив содержащий все http-заголовки для данного запроса или false в случае возникновения ошибок
возвращает все заголовки http-запроса
возвращает текущий рабочий каталог в случае успеха или false в случае ошибки
получает имя текущего рабочего каталога
необязательный параметр timestamp представляет собой integer метку времени по умолчанию равную текущему локальному времени если timestamp не указан
возвращает ассоциативный массив array с информацией о параметре timestamp который содержит следующие элементы:
возвращает информацию о дате / времени
ip-адрес узла
возвращает имя узла в случае успеха исходный ip_address в случае ошибки или false в случае ошибочного ввода
получает доменное имя узла соответствующее переданному ip-адресу
имя узла
возвращает массив адресов ipv4 или false если hostname не может быть разрешено
возвращает список адресов ipv4 соответствующих переданному доменному имени узла
возвращает строку с именем хоста либо false в случае ошибки
получает имя хоста
данные изображения в виде строки
см
см
получение размера изображения из строки данных
возвращает время последней модификации текущей страницы
определение времени последней модификации страницы
если передан массив weight то он будет заполнен полученной информацией о приоритетах
доменное имя узла
список найденных записей mx помещенный в массив mxhosts
возвращает true если были найдены записи; возвращает false если записей не было найдено или произошла ошибка
получает запись mx соответствующую переданному доменному имени узла
возвращает inode текущего скрипта в виде целого числа или false в случае ошибки
получение значения inode текущего скрипта
номер протокола
возвращает имя протокола в виде строки string или false в случае возникновения ошибки
получает имя протокола по номеру
номер порта
параметр protocol может быть tcp or udp в нижнем регистре
возвращает имя интернет службы в виде строки string
получает интернет службу соответствующую заданному порту и протоколу
если установлено в true вместо массива возвращается число с плавающей точкой
по умолчанию возвращается array
возвращает текущее время
шаблон
допустимые флаги: glob_mark - добавляет слеш к каждой возвращаемой директории
возвращает массив который содержит совпадающие файлы / директории пустой массив в случае отсутствия совпадения или false в случае ошибки
находит файловые пути совпадающие с шаблоном
необязательный параметр timestamp представляет собой integer метку времени по умолчанию равную текущему локальному времени если timestamp не указан
формат выводимой даты string
возвращает строку с форматированной датой
форматирует дату / время по гринвичу
год
параметры всегда представляют собой дату по гринвичу поэтому параметр is_dst не влияет на результат
количество месяцев прошедших с конца предыдущего года
количество секунд прошедших от начала минуты указанной параметром minute
количество часов прошедших с начала дня указанного параметрами month day и year
количество минут прошедших от начала часа указанного параметром hour
количество дней прошедших с конца предыдущего месяца
возвращает временную метку unix тип integer
возвращает метку времени unix для времени по гринвичу
или ресурс resource gmp числа в php 5
возвращает абсолютную величину аргумента a в виде gmp числа
абсолютная величина
второе слагаемое
второе слагаемое
сумма аргументов в виде gmp числа
сложение чисел
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
результат побитового и сопоставления в виде gmp числа
побитовое и
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
возвращает положительное значение если a > b ноль если a = b и отрицательное значение если a < b
сравнение чисел
делимое
делитель числа n
в документации к функции gmp_div_q() приведено описание аргумента round
возвращает массив array в котором первый элемент содержит [n / d] целое частное а второй n - [n / d] * d (остаток от деления
деление чисел и получение частного и остатка
делимое
делитель числа n
в документации к функции gmp_div_q() приведено описание аргумента round
остаток в виде gmp числа
остаток от деления чисел
делимое
делитель числа a
ресурс resource gmp числа в php 5
деление чисел без остатка
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
положительный нод чисел a и b
вычисление наибольшего общего делителя
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
массив array gmp чисел
вычисление нод и множителей
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
ресурс resource gmp числа в php 5
расстояние хэмминга
или ресурс resource gmp числа в php 5
целое число типа integer преобразованное из gmpnumber
преобразование числа gmp в целое число
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
gmp число при успешном завершении либо false если инверсия не существует
инверсия остатка от деления
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
ресурс resource gmp числа в php 5
символ лежандра
или ресурс resource gmp числа в php 5
делитель модуль
ресурс resource gmp числа в php 5
вычисление остатка от целочисленного деления
второй множитель число умножаемое на a
первый множитель число умножаемое на b
ресурс resource gmp числа в php 5
умножение чисел
или ресурс resource gmp числа в php 5
возвращает следующее простое число большее чем a в виде gmp числа
поиск следующего простого числа
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
ресурс resource gmp числа в php 5
побитовое или
проверяемое на точный квадрат число
возвращает true если a является квадратом целого числа false в противном случае
проверка числа на точный квадрат
или ресурс resource gmp числа в php 5
количество единиц в двоичной записи числа a в виде числа типа integer
количество единиц в двоичной записи числа
основание степени
положительный показатель степени в которую возводится base
делитель остаток от целочисленного деления на который будет возвращен
новое gmp число результат операции
возводит число в степень и производит деление по модулю
допустимые значения аргумента reps лежат в диапазоне от 5 до 10 по умолчанию 10 ; чем больше это число тем меньше вероятность что непростые числа пройдут этот тест и определятся как возможно простые
число для которого проводится проверка
если функция возвращает 0 a точно не является простым
проверяет является ли число вероятно простым
изменяемое значение
true для установки бита установки в 1 / включен ; false для его очистки установки в 0 / выключен
индекс устанавливаемого бита
установка бита
или ресурс resource gmp числа в php 5
возвращает 1 если a положительное; -1 если a отрицательное; и 0 если a равно нулю
знак числа
или ресурс resource gmp числа в php 5
целая часть корня в виде gmp числа
вычисление квадратного корня
система счисления возвращаемого числа
gmp число для конвертации
число в виде строки типа string
преобразование gmp числа в строку
вычитаемое из числа a
уменьшаемое
ресурс resource gmp числа в php 5
вычитание чисел
проверяемый бит
или ресурс resource gmp числа в php 5
возвращает true если бит установлен в $a иначе false
проверка установлен ли бит в 1
или ресурс resource gmp числа в php 5
или ресурс resource gmp числа в php 5
ресурс resource gmp числа в php 5
побитовое исключающее или
расшифровываемый текст
идентификатор gnupg полученный из gnupg_init() или gnupg
в случае успеха эта функция возвращает расшифрованный текст
расшифровывает переданный текст
параметру plaintext передаётся расшифрованный текст
идентификатор gnupg полученный из gnupg_init() или gnupg
текст для расшифровки
в случае успеха эта функция возвращает информацию о подписи и передаёт в параметр plaintext расшифрованный текст
расшифровывает и проверяет подпись переданного текста
текст для шифрования
идентификатор gnupg полученный из gnupg_init() или gnupg
в случае успеха эта функция возвращает зашифрованный и подписанный текст
шифрует и подписывает переданный текст
идентификатор gnupg полученный из gnupg_init() или gnupg
отпечаток ключа
в случае успеха эта функция возвращает ключ
экспортирует ключ
идентификатор gnupg полученный из gnupg_init() или gnupg
в случае не нулевого целого числа функция включает текстовый режим вывода по умолчанию
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переключает вывод в текстовом или бинарном режиме
режим ошибок
идентификатор gnupg полученный из gnupg_init() или gnupg
устанавливает режим отчетов об ошибках error_reporting
режим подписывания
идентификатор gnupg полученный из gnupg_init() или gnupg
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает режим подписывания
простой текст для подписания
идентификатор gnupg полученный из gnupg_init() или gnupg
в случае успеха эта функция возвращает подписанный текст или подпись
подписывает переданный текст
месяц в виде числа от 1 январь до 12 декабрь
года в виде числа от -4714 до 9999
день в виде числа от 1 до 31
число дней integer в юлианском летоисчислении для даты по григорианскому календарю
преобразует дату по григорианскому календарю в количество дней в юлианском летоисчислении
указатель на gz-файл
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает открытый gz-файл по его указателю
данные для сжатия
уровень сжатия
одна из zlib_encoding_* констант
сжатая строка или false в случае ошибки
сжимает строку
максимальный размер строки для распаковки
данные для распаковки упакованные с помощью gzencode()
распакованная строка или false если произошла ошибка
распаковывает строку упакованную с помощью gzip
данные для сжатия
уровень сжатия
одна из zlib_encoding_* констант
сжатая строка или false в случае ошибки
сжимает строку
данные для сжатия
уровень сжатия
режим сжатия может быть force_gzip по умолчанию или force_deflate
сжатая строка или false в случае ошибки
сжимает строку в формате gzip
указатель на gz-файл возвращённый после его успешного открытия функцией gzopen()
возвращает true если позиция указателя в gz-файле соответствует eof или в случае ошибки; иначе возвращает false
проверяет находится ли текущая позиция в конце eof gz-файла
указатель на gz-файл возвращённый после его успешного открытия функцией gzopen()
символ после распаковки или false в случае eof в отличие от gzeof()
возвращает символ из gz-файла
указатель на gz-файл возвращённый после его успешного открытия функцией gzopen()
максимальный размер возвращаемых данных
распакованная строка или false в случае ошибки
возвращает строку из gz-файла
указатель на gz-файл возвращённый после его успешного открытия функцией gzopen()
используйте этот необязательный параметр чтобы указать теги которые не следует удалять из возвращаемой строки
максимальный размер возвращаемых данных
распакованная строка без разметки или false в случае ошибки
возвращает строку из gz-файла с удалёнными html-тегами
данные сжатые функцией gzdeflate()
максимальный размер данных для распаковки
распакованные данные или false в случае ошибки
распаковывает строку
имя файла
как в fopen() rb или wb но также может включать уровень сжатия wb9 или стратегию: f для фильтрации данных как в wb6f h для сжатия только по алгоритму хаффмана как в wb1h для более детальной информации о параметре стратегии см
если вы хотите чтобы поиск файла выполнялся также в директориях include_path установите значение этого аргумента в 1
возвращает указатель на открытый файл после чего всё что вы читаете из этого дескриптора будет автоматически распаковываться а всё что вы записываете - упаковываться
открывает gz-файл
указатель на gz-файл возвращённый после его успешного открытия функцией gzopen()
количество байт после распаковки которые следует прочитать
прочтённые данные
бинарное чтение gz-файла
данные сжатые функцией gzcompress()
максимальный размер данных для распаковки
распакованные данные или false в случае ошибки
распаковывает строку
указатель на gz-файл возвращённый после его успешного открытия функцией gzopen()
записываемая строка
число записываемых байтов до сжатия
возвращает число действительно записанных байт без учёта сжатия в поток gz-файла
бинарная запись в gz-файл
останавливает работу компилятора
функция вызывается непосредственно перед отправкой заголовков не получает параметров и возвращаемое значение игнорируется
возвращает true в случае успешного завершения или false в случае возникновения ошибки
вызывает функцию заголовка header
имя удаляемого заголовка
удаляет предварительно установленные заголовки
строка заголовка
необязательный параметр replace определяет надо ли заменять предыдущий аналогичный заголовок или заголовок того же типа
принудительно задает код ответа http
отправка http заголовка
возвращает нумерованный массив заголовков
возвращает список переданных или готовых к передаче заголовков
если опциональные параметры file и line установлены то функция headers_sent() поместит имя файла php исходника и номер строки с которой начинается вывод в переменные file и line
номер строки с которой начинается вывод
функция headers_sent() вернет false если http заголовки не были отправлены либо true если отправлены
проверяет были ли и куда отправлены заголовки
этот необязательный параметр указывает максимально возвращаемое число символов на строку
входная строка на иврите
возвращает строку в визуальной кодировке
преобразует текст на иврите из логической кодировки в визуальную с преобразованием перевода строки
шестнадцатеричная строка для преобразования
десятичное представление hex_string
переводит число из шестнадцатеричной системы счисления в десятичную
входная строка
необязательный аргумент определяющий кодировку используемую при конвертации симоволов
битовая маска состоящая из одного или более флагов которые указывают как обращаться с кавычками и какой тип документа использовать
возвращает раскодированную строку
преобразует все html-сущности в соответствующие символы
входная строка
необязательный аргумент определяющий кодировку используемую при конвертации симоволов
при выключении параметра double_encode php не будет преобразовывать существующие html-сущности
битовая маска из нижеуказанных флагов определяющих режим обработки кавычек некорректных кодовых последовательностей и используемый тип документа
возвращает преобразованную строку
преобразует все возможные символы в соответствующие html-сущности
необязательный аргумент определяющий кодировку используемую при конвертации симоволов
если параметр double_encode выключен то php не будет преобразовывать существующие html-сущности
конвертируемая строка string
битовая маска из нижеуказанных флагов определяющих режим обработки кавычек некорректных кодовых последовательностей и используемый тип документа
преобразованная строка string
преобразует специальные символы в html-сущности
может быть массивом или объектом содержащим свойства
arg_separator
по умолчанию php_query_rfc1738
если числовые индексы используются в базовом массиве и этот параметр указан то будет добавлен числовой индекс только для элементов в базом массиве
возвращает url-кодированную строку
генерирует url-кодированную строку запроса
код ответа устанавливается с помощью опционального параметра response_code
текущий код ответа
получает или устанавливает код ответа http
длина первой стороны
длина второй стороны
вычисленная длина гипотенузы
рассчитывает длину гипотенузы прямоугольного треугольника
необязательный параметр charset указывает кодировку в которой будет представлен результат
параметр mode определяет поведение если iconv_mime_decode_headers() обнаружит неправильное поле заголовка mime
не раскодированные заголовки в виде строки
в случае успеха возвращает ассоциативный массив с полями mime -заголовков указанных параметром encoded_headers или false в случае ошибки
декодирует несколько полей заголовка mime
mode задает режим поведения функции в случае когда iconv_mime_decode() определит что mime -заголовок имеет недопустимую структуру
необязательный аргумент charset задает набор символов в котором будет представлен результат
закодированный заголовок в виде строки
возвращает декодированный mime -заголовок в случае успеха или false в случае ошибки
декодирует поле mime-заголовка
имя поля
значение поля
есть возможность контролировать поведение функции iconv_mime_encode() посредством передачи массива с настройками в качестве третьего аргумента preferences
возвращает закодированное mime поле в случае успеха или false в случае ошибки
сжимает поле mime-заголовка
набор символов
значение type может быть одним из приведенных ниже: input_encoding output_encoding internal_encoding
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает значение для преобразования символов кодировки
если параметр charset опущен предполагается что кодировка строки str эквивалентна значению iconv
строка
возвращает количество символов в str как целое число
возвращает количество символов в строке
если параметр charset не указан то подразумевается что string имеет кодировку iconv
искомая подстрока
необязательный параметр offset позволяет указать с какого по счёту символа строки начинать поиск
строка в которой производится поиск
возвращает номер позиции первого вхождения строки needle в haystack
возвращает позицию первого вхождения подстроки
если параметр charset не указан то подразумевается что string имеет кодировку iconv
искомая подстрока
строка в которой производится поиск
возвращает номер позиции последнего вхождения строки needle в haystack
возвращает позицию последнего вхождения подстроки
если offset неотрицателен iconv_substr() получает часть строки str начиная с символа с порядковым номером offset нумерация начинается с нуля
если параметр charset не указан предполагается что строка string имеет кодировку iconv
если length задан и положителен возвращаемое значение содержит не более length символов начиная с offset зависит от длины строки string
изначальная строка
возвращает часть строки str определенную параметрами offset и length
получение части строки
кодировка входной строки
строка которую необходимо преобразовать
требуемая на выходе кодировка
возвращает преобразованную строку или false в случае возникновения ошибки
преобразование строки в требуемую кодировку
id3v2 кадр
возвращает короткое имя кадра или false в случае ошибки
возвращает короткое имя id3v2 кадра
название жанра в виде строки string
идентификатор жанра или false в случае ошибки
возвращает идентификатор жанра
возвращает массив содержащий все возможные значения жанра которые может содержать id3-тег
возвращает все возможные значения жанра
число в интервале от 0 до 147
возвращает строку с именем
возвращает имя по идентификатору жанра
позволяет определять версию id3-тега так как mp3-файл может содержать теги версии 1
путь к mp3-файлу вместо имени файла можно передать потоковый ресурс
возвращает ассоциативный массив с различными ключами: title artist
возвращает всю информацию сохранённую в id3-теге
путь к mp3 файлу
возвращает номер версии id3-тега mp3-файла
возвращает версию id3-тега
позволяет определять версию id3-тега так как mp3-файл может содержать теги версии 1
путь к mp3-файлу вместо имени файла можно передать потоковый ресурс
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет существующий id3-тег
путь к mp3 файлу вместо имени файла можно передать потоковый ресурс
позволяет определять версию id3 тега так как mp3 файл может содержать теги версии 1
ассоциативный массив ключей и значений тега
возвращает true в случае успешного завершения или false в случае возникновения ошибки
обновляет информацию в id3 теге
необязательный параметр timestamp представляет собой integer метку времени по умолчанию равную текущему локальному времени если timestamp не указан
возвращает целое число integer
преобразует локальное время / дату в целое число
если параметр задан то функция устанавливает заданный параметр value функции ignore_user_abort в ini настройку
возвращает предыдущее значение в виде целого числа
устанавливает необходимо ли прерывать работу скрипта при отключении клиента
добавлять точку к расширению или нет
одна из констант imagetype_xxx
строка с расширением файла соответствующим типу изображения
получение расширения файла для типа изображения
одна из констант imagetype_xxx
получение mime-типа для типа изображения возвращаемого функциями getimagesize exif_read_data exif_thumbnail exif_imagetype
включить режим сопряжения или нет
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задание режима сопряжения цветов для изображения
x-координата центра
идентификатор цвета созданный функцией imagecolorallocate()
высота дуги
угол окончания дуги в градусах
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
y-координата центра
ширина дуги
угол начала дуги в градусах
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование дуги
идентификатор цвета созданный функцией imagecolorallocate()
x-координата начала рисования
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
символ для рисования
может принимать значения 1 2 3 4 5 для встроенных шрифтов в кодировке latin2 более высокое число соответствует большему шрифту или любому из ваших собственных идентификаторов шрифтов зарегистрированных с помощью imageloadfont()
y-координата начала рисования
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование символа по горизонтали
x-координата начала рисования
идентификатор цвета созданных функцией imagecolorallocate()
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
символ для рисования
может принимать значения 1 2 3 4 5 для встроенных шрифтов в кодировке latin2 более высокое число соответствует большему шрифту или любому из ваших собственных идентификаторов шрифтов зарегистрированных с помощью imageloadfont()
y-координата начала рисования
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование символа вертикально
значение зеленого компонента цвета
значение красного компонента цвета
значение синего компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
идентификатор цвета либо false в случае неудачи
создание цвета для изображения
значение зеленого компонента цвета
значение красного компонента цвета
значение в диапазоне от 0 до 127
значение синего компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
идентификатор цвета или false в случае неудачи при создании цвета
создание цвета для изображения
значение зеленого компонента цвета
значение красного компонента цвета
значение синего компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает индекс цвета в палитре изображения ближайшего к заданному
получение индекса цвета ближайшего к заданному
значение зеленого компонента цвета
значение красного компонента цвета
значение в диапазоне от 0 до 127
значение синего компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает индекс цвета в палитре изображения ближайшего к заданному
получение индекса цвета ближайшего к заданному с учетом прозрачности
идентификатор цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
разрыв ассоциации переменной с цветом для заданного изображения
значение зеленого компонента цвета
значение красного компонента цвета
значение синего компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает индекс для заданного цвета в палитре изображения либо -1 если такого цвета в палитре нет
получение индекса заданного цвета
значение зеленого компонента цвета
значение красного компонента цвета
значение в диапазоне от 0 до 127
значение синего компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает индекс цвета
получает идентификатор конкретного цвета и альфа компонента или его ближайший аналог
значение зеленого компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
значение синего компонента цвета
значение альфа компонента
значение красного компонента цвета
индекс в палитре
установка набора цветов для заданного индекса палитры
индекс цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает ассоциативный массив с красным зеленым синим и альфа ключами содержащий соответствующие значения для заданного индекса цвета
получение цветов соответствующих индексу
смещение цвета
делитель результата искривления используется для нормализации
матрица 3x3: массив из трех массивов по 3 значения с плавающей точкой в каждом
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
наложение искривляющей матрицы 3х3 используя коэффициент и смещение
высота изображения
ширина изображения
возвращает ресурс изображения в случае успеха или false в случае ошибки
создание нового палитрового изображения
путь к gd файлу
возвращает ресурс изображения в случае успеха или false в случае ошибки
создание нового изображения на основе gd файла или url
путь к gd2 изображению
возвращает ресурс изображения в случае успеха или false в случае ошибки
создание нового изображения на основе gd2 или url
высота исходного изображения
путь к gd2 изображению
x-координата точки исходного изображения
y-координата точки исходного изображения
ширина исходного изображения
возвращает ресурс изображения в случае успеха или false в случае ошибки
создание нового изображения на основе части gd2 файла или url
путь к gif картинке
возвращает ресурс изображения в случае успеха или false в случае ошибки
создает новое изображение из файла или url
путь к jpeg картинке
возвращает ресурс изображения в случае успеха или false в случае ошибки
создает новое изображение из файла или url
путь к изображению png
возвращает ресурс изображения в случае успеха или false в случае ошибки
создает новое изображение из файла или url
путь к изображению wbmp
возвращает ресурс изображения в случае успеха или false в случае ошибки
создает новое изображение из файла или url
путь к изображению xbm
возвращает ресурс изображения в случае успеха или false в случае ошибки
создает новое изображение из файла или url
путь к изображению xpm
возвращает ресурс изображения в случае успеха или false в случае ошибки
создает новое изображение из файла или url
верхняя левая x координата
нижняя правая у-координата
цвет линии
нижняя правая х-координата
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
верхняя левая y координата
всегда возвращает true
рисование пунктирной линии
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
уничтожение изображения
x-координата начала
y-координата начала
цвет заливки
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
заливка
x-координата центра
ширина эллипса
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
y-координата центра
высота эллипса
цвет заливки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование закрашенного эллипса
массив содержащий x и y координаты последовательных вершин многоугольника
число вершин должно быть не меньше 3
идентификатор цвета созданный функцией imagecolorallocate()
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование закрашенного многоугольника
y-координата точки 1
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
y-координата точки 2
x-координата точки 2
цвет заливки
x-координата точки 1
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование закрашенного прямоугольника
x-координата начала
y-координата начала
цвет заливки
цвет границы заливки
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
заливка цветом
img_filter_colorize : значение зеленого компонента цвета
img_filter_brightness : уровень яркости
img_filter_colorize : значение синего компонента цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
img_filter_colorize : альфа канал значение между 0 и 127
filtertype может быть одним из следующих: img_filter_negate : инвертирует все цвета изображения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
применяет фильтр к изображению
может принимать значения 1 2 3 4 5 для встроенных шрифтов в кодировке latin2 более высокое число соответствует большему шрифту или любому из ваших собственных идентификаторов шрифтов зарегистрированных с помощью imageloadfont()
возвращает высоту в пикселах
получение высоты шрифта
может принимать значения 1 2 3 4 5 для встроенных шрифтов в кодировке latin2 более высокое число соответствует большему шрифту или любому из ваших собственных идентификаторов шрифтов зарегистрированных с помощью imageloadfont()
возвращает ширину в пикселах
получение ширины шрифта
размер шрифта
измеряемая строка
возможные ключи массива extrainfo ключ тип значение linespacing float определяет рисование подчеркиваний
угол в градусах в котором text должен быть измерен
имя файла truetype шрифта может быть url
определение границ текста выводимого шрифтом freetype2
путь для сохранения файла
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
вывод gd-изображения в браузер или в файл
размер части изображения
либо img_gd2_raw либо img_gd2_compressed
путь для сохранения файла
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
вывод gd2 изображения в броузер или файл
возвращает идентификатор ресурса изображения в случае успеха false в случае неудачи
захватывает изображение с экрана
id окна hwnd
включает клиентскую часть окна приложения
возвращает идентификатор ресурса изображения в случае успеха false в случае неудачи
захватывает изображение окна
если значение отлично от нуля изображение будет разбито на чередующиеся строки в противном случае бит интерлейсинга будет установлен в 0
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает 1 если бит интерлейсинга установлен 0 в противном случае
включение или выключение интерлейсинга
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true если image полноцветное false в противном случае
определяет является ли изображение полноцветным
необязательный параметр и может принимать значения в диапазоне от 0 низкое качество маленький размер файла до 100 высокое качество большой размер файла
путь для сохранения файла
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
выводит изображение в браузер или пишет в файл
использовать обычное сопряжение цветов аналогично передаче false в imagealphablending()
в результате наложения картинки с этим эффектом черные и белые пикселы фона изображения останутся так же черными и белыми а серые поменяют цвет на цвет пиксела накладываемого изображения
одна из следующих констант: img_effect_replace использовать замену пикселов аналогично передаче true в imagealphablending() img_effect_alphablend использовать обычное сопряжение цветов аналогично передаче false в imagealphablending() img_effect_normal то же что и img_effect_alphablend
то же что и img_effect_alphablend
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
использовать замену пикселов аналогично передаче true в imagealphablending()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка флага альфа сопряжения для использования эффектов наложения изображений встроенной libgd библиотеки
x-координата первой точки
цвет линии
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
y-координата второй точки
y-координата первой точки
x-координата второй точки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование линии
позволяет уменьшить размер png файла
степень сжатия: от 0 нет сжатия до 9
путь для сохранения файла
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
вывод png изображения в броузер или файл
массив вершин многоугольника: points 0 = x0 points 1 = y0 points 2 = x1 points 3 = y1
общее число точек вершин
идентификатор цвета созданный функцией imagecolorallocate()
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование многоугольника
позволяет изменять размер пробела в шрифте
angle задается в градусах
tightness позволяет регулировать расстояние между символами
текст который должен быть записан
size задается в пикселах
ресурс шрифта возвращаемый функцией imagepsloadfont()
возвращает массив со следующими элементами: 0 левая x-координата 1 верхняя y-координата 2 правая x-координата 3 нижняя y-координата
выдает параметры рамки обрамляющей текст написанный шрифтом postscript type1
формат этого файла описан в документации к t1lib библиотеке
ресурс шрифта возвращаемый функцией imagepsloadfont()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменение вектора кодировки шрифта
ресурс шрифта возвращаемый функцией imagepsloadfont()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освобождение памяти занятой шрифтом postscript type
путь к файлу шрифта postscript
если все в порядке будет возвращен индекс шрифта для дальнейшего использования
загрузка шрифта postscript type 1 из файла
верхняя левая x координата
нижняя правая y координата
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
нижняя правая x координата
верхняя левая y координата 0 0 - левый верхний угол изображения
идентификатор цвета созданный функцией imagecolorallocate()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование прямоугольника
требуется ли сохранять альфа канал или нет
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка флага сохранения всей информации альфа компонента в противовес одноцветной прозрачности и сохранение png изображения
y-координата
идентификатор цвета созданный функцией imagecolorallocate()
x-координата
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование точки
строка текста
может принимать значения 1 2 3 4 5 для встроенных шрифтов в кодировке latin2 более высокое число соответствует большему шрифту или любому из ваших собственных идентификаторов шрифтов зарегистрированных с помощью imageloadfont()
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
x-координата верхнего левого угла
y-координата верхнего левого угла
идентификатор цвета создаваемый функцией imagecolorallocate()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рисование строки текста горизонтально
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает ширину изображения image или false в случае ошибки
получение ширины изображения
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает высоту изображения image или false в случае ошибки
получение высоты изображения
размер шрифта
измеряемая строка
угол в градусах в котором будет измерен text
имя файла truetype шрифта может быть url
imagettfbbox() возвращает массив из 8 элементов представляющих координаты четырех точек - вершин рамки вокруг текста
получение параметров рамки обрамляющей текст написанный truetype шрифтом
размер шрифта
индекс цвета
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
координаты x и y определяют отправную точку для первого символа текста конкретно левый нижний угол символа
угол в градусах 0 градусов означает расположение текста слева направо
путь к файлу truetype шрифта
текстовая строка в кодировке utf-8
y-координата
возвращает массив из 8 элементов представляющих 4 точки - координаты углов рамки обрамляющей текст
рисование текста на изображении шрифтом truetype
можно задать цвет верхнего слоя
путь для сохранения файла
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
выводит изображение в браузер или пишет в файл
можно задать цвет верхнего слоя
путь для сохранения файла
ресурс изображения полученный одной из функций создания изображений например такой как imagecreatetruecolor()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
вывод xbm изображения в броузер или файл
массив объединяемых строк
по умолчанию равен пустой строке
возвращает строку содержащую строковое представление всех элементов массива в указанном порядке со строкой glue между каждым элементом
объединяет элементы массива в строку
массив
искомое значение
если третий параметр strict установлен в true тогда функция in_array() также проверит соответствие типов параметра needle и соответствующего значения массива haystack
возвращает true если needle был найден в массиве и false в обратном случае
проверяет присутствует ли в массиве значение
имя настройки конфигурации
возвращает значение настройки конфигурации в виде строки
получает значение настройки конфигурации
имя настройки
восстанавливает значение настройки конфигурации
новое значение настройки
не все доступные настройки можно изменять функцией ini_set()
в случае успеха возвращает старое значение в случае неудачи возвращает false
установка значения настройки конфигурации
имя интерфейса
определяет использовать ли по умолчанию __autoload или нет
возвращает true если интерфейс заданный именем interface_name был определен false в остальных случаях
проверяет определен ли интерфейс
основание системы исчисления для преобразования замечание : если base равно 0 основание системы исчисления определяется форматом параметра var : если строка включает префикс 0x или 0x) основание выбирается равным 16 шестнадцатеричным ; иначе если строка начинается с 0 основание равно 8 восьмеричное ; иначе основание выбирается равным 10 десятеричным
скалярное значение для конвертации в целое
целое значение переменной var в случае успеха или 0 в случае неудачи
возвращает целое значение переменной
адрес в стандартном формате
возвращает ipv4 адрес или false если параметр ip_address содержит ошибку
конвертирует строку содержащую ipv4 интернет адрес с точками в допустимый адрес
двоичные данные iptc
возвращает массив значений тэгов используя метки тэгов в качестве индекса
разбор двоичных iptc данных на отдельные тэги
имя класса
проверяемый объект
если параметр установлен в false то не допускается имя класса в виде строки в качестве параметра object
возвращает true если объект принадлежит данному классу или имеет данный класс в числе своих предков иначе возвращается false
проверяет принадлежит ли объект к данному классу или содержит данный класс в числе своих предков
проверяемая переменная
возвращает true если переменная var является массивом array или false в противном случае
определяет является ли переменная массивом
проверяемая переменная
возвращает true если var является переменной типа boolean или false в противном случае
проверяет является ли переменная булевой
получает имя для вызова
может быть как именем функции заданным строковой переменной так и объектом и именем вызываемого метода например: array($someobject methodname
если равен true функция только проверяет что name может быть функцией или методом
возвращает true если name может быть вызвана или false в противном случае
проверяет может ли значение переменной быть вызвано в качестве функции
путь к файлу
возвращает true если файл существует и является директорией иначе возвращается false
определяет является ли имя файла директорией
путь к файлу
возвращает true если файл существует и является исполняемым или false в случае ошибки
определяет является ли файл исполняемым
проверяемое значение
true если val является допустимым конечным числом в разрешенном для php float диапазоне для данной платформы и false в противном случае
проверяет является ли значение допустимым конечным числом
проверяемая переменная
возвращает true если var является переменной типа float false в противном случае
проверяет является ли переменная числом с плавающей точкой
проверяемая переменная
возвращает true если var является целым числом или false в противном случае
проверяет является ли переменная переменной целочисленного типа
проверяемое значение
возвращает true если val имеет значение не число nan и false в противном случае
проверяет является ли значение не числом
проверяемая переменная
возвращает true если значение var равно null или false в противном случае
проверяет является ли значение переменной равным null
проверяемая переменная
возвращает true если var является объектом или false в противном случае
проверяет является ли переменная объектом
путь к файлу
возвращает true если файл или директория указанная в filename существует и доступна для чтения иначе возвращает false
определяет существование файла и доступен ли он для чтения
проверяемая переменная
возвращает true если var является ресурсом или false в противном случае
проверяет является ли переменная ресурсом
проверяемая переменная
возвращает true если var является строкой и false в противном случае
проверяет является ли переменная строкой
имя класса или экземпляр объекта
если параметр установлен в false то не допускается имя класса в виде строки в качестве параметра object
имя класса
эта функция возвращает true если объект object принадлежит к классу наследующему от class_name иначе она возвращает false
проверяет содержит ли объект в своем дереве предков указанный класс
имя проверяемого файла
возвращает true в случае успешного завершения или false в случае возникновения ошибки
определяет был ли файл загружен при помощи http post
другая переменная
проверяемая переменная
возвращает true если var определена и значение отличное от null и false в противном случае
определяет была ли установлена переменная значением отличным от null
функция обратного вызова которая применяется к каждому элементу
класс для перебора
аргументы для передачи в функцию обратного вызова
returns the iteration count
вызывает функцию для каждого элемента в итераторе
итератор в котором производится подсчет
количество элементов в итераторе iterator
подсчитывает количество элементов в итераторе
режимы отображения дней недели режим значение 0 по умолчанию день недели возвращается в виде числа 0=воскресенье 1=понедельник и т
день в виде числа в юлианском летоисчислении
день недели по григорианскому календарю в виде строки или числа
возвращает день недели
календарь из которого будет взято название месяца
число дней в юлианском летоисчислении которое требуется преобразовать
название месяца для заданного юлианского дня соответствующее календарю calendar
возвращает название месяца
номер дня в юлианском летоисчислении
дата со дня французской революции в виде строки формата месяц / день / год
переводит число дней в юлианском летоисчислении в дату по французскому республиканскому календарю
номер дня в юлианском летоисчислении
дата по григорианскому календарю в виде строки формата месяц / день / год
переводит число дней в юлианском летоисчислении в дату по григорианскому календарю
номер дня в виде числа от 1 до 30
год в виде числа от 1 до 9999
номер месяца в виде числа от 1 до 13
номер дня в юлианском летоисчислении в виде числа для заданной иудейской даты
переводит дату по иудейскому календарю в число дней в юлианском летоисчислении
json строка string для декодирования
указывает глубину рекурсии
если true возвращаемые объекты будут преобразованы в ассоциативные массивы
битовая маска опций декодирования json
возвращает данные json преобразованные в соответствующие типы php
декодирует json строку
год в виде числа между -4713 и 9999
месяц в виде числа от 1 январь до 12 декабрь
день в виде числа от 1 до 31
юлианский день в виде числа для заданной даты по юлианскому календарю
переводит дату по юлианскому календарю в число дней в юлианском летоисчислении
массив
функция key() просто возвращает ключ того элемента массива на который в данный момент указывает внутренний указатель массива
выбирает ключ из массива
вы можете изменить поведение сортировки используя дополнительный параметр sort_flags подробнее см
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив по ключам в обратном порядке
входная строка
возвращает результирующую строку
преобразует первый символ строки в нижний регистр
группа указанная по имени или номеру
путь к ссылке
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет группу которой принадлежит символическая ссылка
имя пользователя или номер
путь к файлу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет владельца символической ссылки
текст которые должен быть переведён
возвращает кодированный в t61 параметр value
переводит символы из кодировки iso-8859 в t61
массив который определяет информацию о записи
идентификатор ссылки ldap возвращенный ldap_connect()
отличительное имя ldap объекта
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавить запись в ldap директорию
идентификатор ссылки ldap возвращенный ldap_connect()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
привязать к ldap директории
идентификатор ссылки ldap возвращенный функцией ldap_connect()
внутренний результат ldap
возвращает число записей в результате или false в случае ошибки
посчитать число записей в результатах поиска
уникальное имя ldap записи
идентификатор ссылки ldap возвращаемый ldap_connect()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет запись из директории ldap
отличительное имя объекта ldap
возвращает удобное для пользователя имя
преобразовать dn в удобный для пользователя формат именования
номер ошибки
возвращает сообщение ошибки в виде строки
преобразовать код ошибки ldap в строковое сообщение об ошибке
идентификатор ссылки ldap возвращенный ldap_connect()
возвращает сообщение ошибки в виде строки
возвратить сообщение об ошибке ldap последней команды
используется для запроса если rdns возвращены только со значениями или также с их атрибутами
отличительное имя объекта ldap
возвращает массив всех компонентов dn
разделить dn на его составные части
идентификатор ссылки ldap возвращенный ldap_connect()
ber_identifier является идентификатором внутреннего указателя ячейки памяти
возвращает первый атрибут в записи в случае успеха и false в случае ошибки
вернуть первый атрибут
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освободить память результата
идентификатор ссылки ldap возвращенный ldap_connect()
возвращает dn записи результата и false в случае ошибки
получить dn результирующей записи
идентификатор ссылки ldap возвращенный ldap_connect()
возвращает полную информацию о результате в виде многомерного массива в случае успеха и false в случае ошибки
получает все записи результата
идентификатор ссылки ldap возвращенный ldap_connect()
возвращает массив значений для атрибута в случае успеха и false в случае ошибки
получить все бинарные значения из записи результата
идентификатор ссылки ldap возвращенный ldap_connect()
возвращает массив значений для атрибута в случае успеха и false в случае ошибки
получает все значения из записи результата
идентификатор ссылки ldap возвращенный ldap_connect()
отличительное имя ldap объекта
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удалить значения атрибута из текущих атрибутов
идентификатор ссылки ldap возвращенный ldap_connect()
отличительное имя объекта ldap
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменить ldap запись
идентификатор ссылки ldap возвращенный ldap_connect()
внутреннее состояние указателя сохраняется этим параметром
возвращает следующий атрибут записи в случае успеха и false в случае ошибки
получить следующий атрибут из результата
идентификатор ссылки ldap возвращенный ldap_connect()
возвращает идентификатор для следующей записи в результате содержимое которого начинают читаться запуская ldap_first_entry()
получить следующую запись результата
ссылка на переменную которой присваивается код ошибки ldap или 0 если нет ошибки
ссылка на переменную которой присваивается найденный dn если он определяется в запросе иначе присваивается null
идентификатор ldap соединения возвращаемый функцией ldap_connect()
ресурс ldap результата возвращаемый функциями ldap_list() или ldap_search()
ссылка на переменную которой присваивается массив array со всеми отсылками referral в виде строк или пустой массив если они не были возвращены
ссылка на переменную которой присваивается сообщение об ldap ошибке или пустая строка если нет ошибки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
извлечь информацию из результата
если true старые значения rdn удаляются иначе старые значения rdn сохраняются как неуникальные значения записи
идентификатор ссылки ldap возвращенный ldap_connect()
отличительное имя ldap объекта
новая родительская / превосходящая запись
новое rdn
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменить имя записи
очистка буфера ошибок libxml
отключение true или включение false libxml расширений также как в dom xmlwriter и xmlreader для загрузки внешних сущностей
возвращает предыдущее значение
отключение возможности загрузки сущностей из внешних источников
возвращает массив объектов libxmlerror если в буфере есть ошибки либо пустой массив в противном случае
получение массива произошедших ошибок
включает true пользовательскую обработку ошибок или отключает ее false
эта функция возвращает предыдущее значение параметра use_errors
отключение ошибок libxml и передача полномочий по выборке и обработке информации об ошибках пользователю
цель ссылки
имя ссылки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создаёт жёсткую ссылку
путь к ссылке
linkinfo() возвращает поле st_dev структуры stat из unix c которую возвращает системный вызов lstat
возвращает информацию о ссылке
переменная
возвращает присвоенный массив
присваивает переменным из списка значения подобно массиву
необязательный параметр timestamp представляет собой integer метку времени по умолчанию равную текущему локальному времени если timestamp не указан
если установлен в false или не передан то возвращается обычный массив с числовыми индексами
возвращает локальное время
необязательное основание логарифма по умолчанию основание e что соответствует натуральному логарифму
число для которого необходимо вычислить логарифм
логарифм числа arg по основанию base если указано или натуральный логарифм
натуральный логарифм
входное значение
десятичный логарифм arg
десятичный логарифм
заданный адрес
возвращает интернет ip адрес в виде строки
конвертирует ipv4 адрес интернет сети в стандартную строку с точками
путь к файлу или символической ссылке
обратитесь к странице руководства функции stat() для получения информации о структуре массива который возвращает lstat()
возвращает информацию о файле или символической ссылке
с помощью параметра character_mask можно также указать удаляемые символы
входная строка
эта функция возвращает строку str с удаленными из начала строки пробелами
удаляет пробелы или другие символы из начала строки
отправляемое сообщение
строка которая будет дополнительно вставлена в конец отправляемых заголовков письма
получатель или получатели письма
параметр additional_parameters может быть использован для передачи дополнительных флагов в виде аргументов командной строки для программы сконфигурированной для отправки писем указанной директивой sendmail_path
тема отправляемого письма
возвращает true если письмо было принято для передачи иначе false
отправляет электронную почту
ожидаемая кодировка
поток данных для проверки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет что кодировка для строки выбрана верно
режим смены регистра
параметр encoding представляет собой символьную кодировку
строка string для преобразования
строка string преобразованная в соответствии с режимом mode
производит смену регистра символов в строке
кодировка в которую будет преобразована строка str
строка string которая преобразуется
параметр для указания исходной кодировки строки
преобразованная строка
преобразует кодировку символов
исходная строка string
параметр encoding представляет собой символьную кодировку
настройка конвертации
преобразованная строка string
преобразование кодировок kana из одной в другую zen-kaku han-kaku и другие
from_encoding задается в виде массива array или строки string с разделенными запятой кодировками
кодировка в которую необходимо перекодировать строку string
дополнительные vars
vars - ссылка на переменную содержимое которой необходимо преобразовать
исходную кодировку в случае успеха или false в случае неудачи
преобразует символы в переменной(-ых из одной кодировки в другую
convmap - массив array который задает диапазон кодов символов
строка для декодирования string
параметр encoding представляет собой символьную кодировку
преобразованная строка string
декодирует числовую html-ссылку в символ
encoding_list - массив array или строка в которой перечислены кодировки через запятую
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка / получение списка кодировок для механизмов определения кодировки
кодируемая строка string
convmap - массив задающий диапазон кодов
параметр encoding представляет собой символьную кодировку
сконвертированная строка string
кодирование символа в числовую html-ссылку
шаблон регулярного выражения
оцениваемая строка string
совпадение с регулярным выражением для многобайтовой строки
шаблон регулярное выражение
настройка поиска
строка в которой будет осуществляться поиск соответствий
инициализация поиска соответствий регулярному выражению многобайтной строкой и текстом регулярного выражения
настройка поиска
шаблон текст регулярного выражения
возвращает позицию и длину совпавшего с регулярным выражением участка многобайтной строки
настройка поиска
шаблон для поиска текст регулярного выражения
поиск соответствий регулярному выражению для строк в многобайтных кодировках
если задан аргумент encoding mb_http_output() устанавливает кодировку выходных символов http в encoding
если аргумент encoding опущен mb_http_output() возвращает текущую кодировку символов http вывода
установка / получение кодировки символов http вывода
используется для кодирования символов в сообщениях электронной почты
если аргумент language задан а language имеет допустимое значение функция возвращает true
установка / получение текущего языка
возвращает индексный массив
возвращает массив всех поддерживаемых кодировок
содержимое выходного буфера
состояние выходного буфера
преобразованная строка string
callback-функция преобразующая кодировку символов в выходном буфере
кодировка для которой выбирается набор символов
mime набор символов charset в виде строки string для кодировки encoding
получение набора символов mime
параметр encoding представляет собой символьную кодировку
set / get character encoding for multibyte regex
значением additional_parameter является параметр командной строки mta
тема письма
текст письма
строка вставляемая в конец заголовка письма
электронные адреса получателей
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка закодированного сообщения
исходная строка string
смещение от начала строки
ожидаемая ширина вырезаемой части
строка добавляемая в конец обрезанной строки
параметр encoding представляет собой символьную кодировку
обрезанная строка string
получение строки обрезанной до заданной ширины
кодировка символов строк
позиция в строке haystack с которой начинается поиск вхождений
строка поиск которой осуществляется в строке haystack
строка в которой производится поиск вхождений строки needle
возвращает позицию первого вхождения строки needle в строке haystack либо false если needle не найдена
поиск позиции первого вхождения одной строки в другую нечувствителен к регистру
определяет какую часть строки haystack вернет эта функция
название используемой кодировки символов
строка в которой ищется первое вхождение строки needle
строка для поиска в haystack
возвращает часть строки haystack или false если needle не найдена
находит первое вхождение подстроки в строке без учета регистра
строка string для которой измеряется длина
параметр encoding представляет собой символьную кодировку
возвращает количество символов в строке string str имеющих кодировку символов encoding
получает длину строки
строка string поиск которой производится в строке haystack
если аргумент задан поиск вхождения будет начинаться с позиции offset в строке string
строка string в которой производится поиск вхождения needle
параметр encoding представляет собой символьную кодировку
возвращает позицию последнего вхождения строки needle в строке haystack string либо false если needle не найдена
поиск позиции последнего вхождения одной строки в другую
определяет какую часть строки haystack вернет эта функция
название используемой кодировки символов
строка в которой ищется первое вхождение строки needle
строка для поиска в haystack
возвращает часть строки haystack или false если needle не найдена
находит первое вхождение подстроки в строке
исходная строка string
параметр encoding представляет собой символьную кодировку
str буквы в которой приведены к нижнему регистру
приведение строки к нижнему регистру
исходная строка string
параметр encoding представляет собой символьную кодировку
str буквы в которой приведены к верхнему регистру
приведение строки к верхнему регистру
задает значение юникода в виде числа integer или одной из следующих строк string : none : нет вывода long : код конечного в выходной кодировке символа пример: u+3000 jis+7e7e entity : сущность конечного в выходной кодировке символа пример: ȁ)
если аргумент substchar задан функция вернет true в случае успеха false в противном случае
задание / получение символа заместителя
строка string для поиска
строка string для проверки
параметр encoding представляет собой символьную кодировку
количество вхождений подстроки needle в строку haystack
возвращает количество вхождений подстроки
шифрует / дешифрует данные в режиме cbc
имя файла
если имеет значение true то возвращается бинарная строка из 16 символов
возвращает строку в случае успеха иначе false
возвращает md5-хэш файла
строка
если необязательный аргумент raw_output имеет значение true то возвращается бинарная строка из 16 символов
возвращает хэш в виде 32-символьного шестнадцатеричного числа
возвращает md5-хэш строки
передача true в качестве этого аргумента позволяет получить реальный объем памяти выделенный системой
возвращает максимальный объем памяти в байтах
возвращает пиковое значение объема памяти выделенной php
этот параметр выставляет ограничение в phonemes символов на длину возвращаемого ключа metaphone
входная строка
возвращает ключ metaphone в виде строки или false в случае возникновения ошибки
возвращает ключ metaphone для строки
имя метода
экземпляр объекта или имя класса
возвращает true если метод method_name определен для указанного объекта object иначе возвращает false
проверяет существует ли метод в данном классе
если указано и установлено в true microtime() возвратит float вместо string как описано в разделе возвращаемых значений ниже
по умолчанию microtime() возвращает string в формате msec sec где sec представляет собой количество секунд с начала эпохи unix 1 января 1970 0:00:00 gmt а msec - это количество микросекунд прошедших после sec
возвращает текущую метку времени unix с микросекундами
путь к проверяемому файлу
возвращает тип содержимого в формате mime например text / plain или application / octet-stream
определяет mime-тип содержимого файла устаревшее
замечание : поддержка контекста была добавлена в php 5
по умолчанию принимает значение 0777 что означает самые широкие права
разрешает создание вложенных директорий указанных в pathname
путь к директории
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создаёт директорию
количество месяцев прошедших с конца предыдущего года
данный параметр может быть установлен в 1 если заданной дате соответствует летнее время dst 0 в противном случае или -1 значение по умолчанию если неизвестно действует ли летнее время на заданную дату
количество секунд прошедших от начала минуты указанной параметром minute
номер года может быть указан двумя или четырьмя цифрами причем значения между 0-69 будут трактованы как 2000-2069 а между 70-100 - как 1970-2000
количество часов прошедших с начала дня указанного параметрами month day и year
количество минут прошедших от начала часа указанного параметром hour
количество дней прошедших с конца предыдущего месяца
mktime() возвращает временную метку unix в соответствии с переданными аргументами
возвращает метку времени unix для заданной даты
вставляет символ %
используется национальный денежный формат из текущей локали например для локали de_de: eu1
подавляет вывод символа валюты
отключает группировку символов определяемую текущей локалью
форматируемое число
описание формата состоит из: символа % необязательных флагов необязательной ширины поля необязательной точности до запятой необязательной точности после запятой обязательного описателя преобразования флаги могут быть использованы следующие флаги: = f символ = за которым следует еще один символ f задает символ заполнения
задает способ форматирования положительных и отрицательных значений
если этот флаг задан поля будут выравнены влево с отбивкой вправо вместо используемого по умолчанию выравнивания вправо с отбивкой влево
максимальное количество цифр n которое ожидается до запятой
строка из десятичных цифр задающая минимальную ширину поля
используется международный денежный формат из текущей локали например для американской локали: usd 1 234
точка за которой следует число знаков p выводимых после запятой
символ = за которым следует еще один символ f задает символ заполнения
возвращает отформатированную строку
форматирует число как денежную величину
необязательное значение параметра переинициализации
переинициализирует генератор случайных чисел mt
соединение mysql
возвращает количество измененных записей в случае успеха и -1 в случае если последний запрос не удался
возвращает число затронутых прошлой операцией рядов
соединение mysql
возвращает используемую по умолчанию кодировку для данного соединения
возвращает кодировку соединения
соединение mysql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает соединение с сервером mysql
соединение mysql
имя создаваемой базы данных
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создает базу данных mysql
обрабатываемый результат запроса
желаемый номер ряда в полученном дескрипторе результата
возвращает true в случае успешного завершения или false в случае возникновения ошибки
перемещает внутренний указатель в результате запроса
имя поля
дескриптор результата полученный из вызова mysql_list_dbs()
индекс в результате
возвращает название базы данных в случае успеха или false в случае ошибки
возвращает название базы данных из вызова к mysql_list_dbs
соединение mysql
запрос mysql
имя базы данных на которую произойдет переключение
возвращает ресурс результата запроса к mysql или false в случае ошибки
переключается на указанную базу данных и посылает запрос
соединение mysql
имя удаляемой базы данных
возвращает true в случае успешного завершения или false в случае возникновения ошибки
уничтожает базу данных mysql
соединение mysql
возвращает код ошибки последней функции работы с mysql или 0 ноль если операция выполнена успешно
возвращает численный код ошибки выполнения последней операции с mysql
экранируемая строка
возвращает экранируемую строку
экранирует строку для использования в mysql_query
обрабатываемый результат запроса
тип возвращаемого массива
возвращает массив строк соответствующих обработанному ряду результата запроса или false если рядов больше нет
обрабатывает ряд результата запроса возвращая ассоциативный массив численный массив или оба
обрабатываемый результат запроса
возвращает ассоциативный массив строк соответствующий полученному ряду либо false если рядов больше нет
возвращает ряд результата запроса в качестве ассоциативного массива
обрабатываемый результат запроса
числовое смещение поля
возвращает object содержащий информацию о колонке
возвращает информацию о колонке из результата запроса в виде объекта
имя класса
обрабатываемый результат запроса
необязательный массив array параметров передаваемых в конструктор создаваемого экземпляра class_name
возвращает объект object со строковыми свойствами соответствующими полученному ряду или false если рядов больше нет
обрабатывает ряд результата запроса и возвращает объект
обрабатываемый результат запроса
числовое смещение поля
возвращает строку с флагами связанными с результатом или false в случае возникновения ошибки
возвращает флаги связанные с указанным полем результата запроса
обрабатываемый результат запроса
числовое смещение поля
название поля по указанному индексу в случае успеха или false в случае возникновения ошибки
возвращает название указанной колонки результата запроса
обрабатываемый результат запроса
числовое смещение поля
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает внутренний указатель результата на переданное смещение поля
обрабатываемый результат запроса
числовое смещение поля
поля могут быть следующих типов: int real string blob и других подробно описанных документации mysql
возвращает тип указанного поля из результата запроса
обрабатываемый результат запроса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освобождает память от результата запроса
соединение mysql
возвращает строку описывающую тип используемого соединения указанного переданным дескриптором соединения или false в случае возникновения ошибки
возвращает информацию о соединении с mysql
соединение mysql
возвращает используемый протокол mysql в случае успеха или false в случае возникновения ошибки
возвращает информацию о протоколе mysql
соединение mysql
возвращает resource результата в случае успеха или false в случае ошибки
возвращает список баз данных доступных на сервере
соединение mysql
имя опрашиваемой базы данных
имя опрашиваемой таблицы
дескриптор результата resource в случае успеха или false в случае ошибки
возвращает список колонок таблицы
соединение mysql
дескриптор результата resource в случае успеха или false в случае возникновения ошибки
возвращает список процессов mysql
соединение mysql
имя базы данных
дескриптор результата resource в случае успеха или false в случае возникновения ошибки
возвращает список таблиц базы данных mysql
обрабатываемый результат запроса
возвращает количество полей в результате запроса resource в случае успеха или false в случае возникновения ошибки
возвращает количество полей результата запроса
обрабатываемый результат запроса
количество рядов в результате запроса в случае успеха или false в случае возникновения ошибки
возвращает количество рядов результата запроса
сервер mysql
параметр client_flags может быть комбинацией следующих констант: 128 включает обработку load data local mysql_client_ssl mysql_client_compress mysql_client_ignore_space и mysql_client_interactive
пароль
имя пользователя
возвращает дескриптор постоянного соединения mysql в случае успеха и false в случае ошибки
устанавливает постоянное соединение с сервером mysql
соединение mysql
возвращает true если соединение в рабочем состоянии и false в противном случае
проверяет соединение с сервером и пересоединяется при необходимости
соединение mysql
экранируемая строка
возвращает строку в которой экранированы все необходимые символы или false в случае ошибки
экранирует специальные символы в строках для использования в выражениях sql
обрабатываемый результат запроса
номер получаемого ряда из результата
имя или смещение получаемого поля
содержимое одного поля из набора результата mysql в случае успеха или false в случае ошибки
возвращает данные результата запроса
соединение mysql
имя выбираемой базы данных
возвращает true в случае успешного завершения или false в случае возникновения ошибки
выбирает базу данных mysql
соединение mysql
корректное название кодировки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает кодировку клиента
соединение mysql
возвращает строку с данными аптайма количества потоков запросов количеством открытых таблиц и таблиц с сброшенным внутренним кэшем flush tables а также количество запросов в секунду
возвращает текущий статус сервера
целочисленный индекс номер ряда / таблицы
дескриптор результата типа resource полученный из вызова mysql_list_tables()
имя таблицы в случае успеха или false в случае возникновения ошибки
возвращает имя таблицы содержащей указанное поле
соединение mysql
идентификатор потока в случае успеха или false в случае возникновения ошибки
возвращает идентификатор текущего потока
соединение mysql
запускаемый sql-запрос
для select show describe и explain запросов mysql_unbuffered_query() возвращает resource в случае успеха или false в случае ошибки
посылает запрос mysql без авто-обработки результата и его буферизации
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив используя алгоритм natural order без учета регистра символов
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив используя алгоритм natural order
массив array модифицируется данной функцией
возвращает значение элемента массива находящегося на позиции следующей за позицией внутренний указателя или false если достигнут конец массива
передвигает внутренний указатель массива на одну позицию вперёд
возвращает корректную форму сообщения во множественном числе идентифицируемых по параметрам msgid1 и msgid2 для количества n
версия gettext для сообщений во множественном числе
item может быть целым числом или соответствующей константой
возвращает элемент в виде строки или false если item передан неправильно
возвращает информацию о языке и локали
входная строка
использовать ли совместимые с xhtml переводы строк или нет
возвращает измененную строку
вставляет html-код разрыва строки перед каждым переводом строки
форматируемое число
устанавливает разделитель тысяч
устанавливает число знаков после запятой
устанавливает разделитель дробной части
возвращается отформатированное число number
форматирует число с разделением групп
очищает стирает буфер вывода
возвращает true в случае успешного завершения или false в случае возникновения ошибки
очищает стирает буфер вывода и отключает буферизацию вывода
возвращает содержимое буфера вывода и заканчивает буферизацию вывода
получить содержимое текущего буфера и удалить его
функция вернет содержимое буфера вывода или false если буферизация вывода не активирована
возвращает содержимое буфера вывода
возвращает буфер вывода или false если буферизация не активна
сброс буфера вывода возвращая его содержимое и отключение буферизации вывода
возвращает уровень вложенности обработчиков буферизации вывода или 0 если буферизация не активирована
возвращает уровень вложенности механизма буферизации вывода
если true то вернет все уровни активных буферов
получить статус буфера вывода
callback-функция используемая для gzip-сжатия буфера вывода при вызове ob_start
информацию о возвращаемых значениях этого обработчика можно посмотреть в описании к функции ob_start()
преобразует символы из текущей кодировки в кодировку выходного буфера
true для включения неявного сброса false в противном случае
функция включает / выключает неявный сброс
функция вернет массив с используемыми обработчиками вывода если имеются
список всех используемых обработчиков вывода
если передан не обязательный параметр chunk_size то буфер буден сброшен после любого вывода превышающего или равного по размеру chunk_size
битовая маска констант php_output_handler_*
содержимое буфера вывода
можно задать необязательный параметр output_callback
параметр flags является битовой маской которая управляет операциями которые можно совершать над буфером вывода
возвращает true в случае успешного завершения или false в случае возникновения ошибки
включение буферизации вывода
буфер
режим буфера
возвращает видоизмененный буфер
функция обратного вызова ob_start для восстановление буфера
метка с префиксом в виде двоеточия используемая в выражении
тип данных к которому oracle будет приводить значения
допустимый идентификатор выражения oci8
устанавливает максимальный размер данных
переменная php ассоциированная с bv_name
возвращает true в случае успешного завершения или false в случае возникновения ошибки
прикрепляет переменную php к соответствующей метке в sql-выражении
идентификатор соединения oracle полученный и функций oci_connect() oci_pconnect() или oci_new_connect()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает соединение с сервером oracle
идентификатор соединения oracle полученный из функций oci_connect() oci_pconnect() или oci_new_connect()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
фиксирует транзакцию базы данных
этот параметр доступен начиная с версии php 5 pecl oci8 1
пароль username
содержит экземпляр oracle для подключения
определяет кодировку используемую клиентскими библиотеками oracle
имя пользователя oracle
возвращает идентификатор соединения или false в случае ошибки
устанавливает соединение с базой данных oracle
тип возвращаемых данных
корректный идентификатор выражения oci8 полученный из oci_parse() и исполненный функцией oci_execute() или идентификатор выражения ref cursor
имя столбца использованного в запросе
переменная php предназначенная для хранения возвращенного значения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сопоставляет переменную php столбцу результата запроса
для большинства ошибок параметром resource является соответствующий идентификатор соединения или выражения
если ошибок не найдено то oci_error() возвращает false
возвращает последнюю ошибку
необязательный второй параметр с одним из следующих значений: режим выполнения константа описание oci_commit_on_success автоматически сохранять все несохраненные изменения произведенные за текущую сессию при успешном выполнении выражения
правильное подготовленное выражение oci
возвращает true в случае успешного завершения или false в случае возникновения ошибки
выполняет подготовленное выражение
корректный идентификатор выражения oci8 полученный из oci_parse() и исполненный функцией oci_execute() или идентификатор выражения ref cursor
переменная содержащая возвращенные строки
число возвращаемых строк
число строк которых необходимо исключить из выборки
параметр flags содержит структуру массива отражает необходимость использования ассоциативных массивов
возвращает число столбцов в output который может принимать значение 0 или более или false в случае возникновения ошибки
выбирает все строки из результата запроса в двумерный массив
корректный идентификатор выражения oci8 полученный из oci_parse() и исполненный функцией oci_execute() или идентификатор выражения ref cursor
необязательный второй параметр может состоять из любой комбинации следующих констант: oci_fetch_array() modes константа описание oci_both возвращает массив как с ассоциативными и числовыми индексами
возвращает массив с ассоциативными и / или числовыми ключами
возвращает следующую строку из результата запроса в виде ассоциативного или нумерованного массива
корректный идентификатор выражения oci8 полученный из oci_parse() и исполненный функцией oci_execute() или идентификатор выражения ref cursor
возвращает ассоциативный массив
возвращает следующую строку из результата запроса в виде ассоциативного массива
корректный идентификатор выражения oci8 полученный из oci_parse() и исполненный функцией oci_execute() или идентификатор выражения ref cursor
возвращает true при успехе или false в результате запроса больше нет рядов
выбирает следующую строку из результата в буфер
идентификатор допустимого oci запроса
может быть порядковый номер поля начиная с 1 или имя поля
возвращает true если field равен null и false если нет
проверяет равняется ли поле в текущем полученном ряду равным null
может быть номером поля нумерация начинается с 1 или именем
идентификатор допустимого oci запроса
возвращает имя в виде строки или false при ошибках
возвращает имя поля из результата запроса
может быть номером поля нумерация начинается с 1 или именем
идентификатор допустимого oci запроса
возвращает точность в виде числа или false при ошибках
возвращает точность поля
может быть номером поля нумерация начинается с 1 или именем
идентификатор допустимого oci запроса
возвращает размер поля field в байтах или false при ошибках
возвращает размер поля
допустимый идентификатор oci-выражения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освобождает ресурсы занимаемые курсором или sql-выражением
значение false выключает отладку а true - включает
включает и выключает внутреннюю отладку
длина участка содержимого для копирования
копируемый объект lob
lob объект назначения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
копирует объект lob
идентификатор lob
идентификатор lob
возвращает true если объекты идентичны и false в обратном случае или в случае ошибки
сравнивает два объекта lob / file
должна быть указана схема данных где создан именованный тип
должен быть корректным именем типа в верхнем регистре
идентификатор соединения с сервером oracle возвращаемый функцией oci_connect() или oci_pconnect()
returns a new ocicollection object or false on error
создает новый объект коллекции
этот параметр доступен начиная с версии php 5 pecl oci8 1
пароль пользователя username
содержит экземпляр oracle для подключения
определяет кодировку используемую клиентскими библиотеками oracle
имя пользователя oracle
возвращает идентификатор соединения или false в случае ошибки
устанавливает новое соединение с сервером oracle
идентификатор соединения с сервером oracle возвращаемый функцией oci_connect() или oci_pconnect()
допустимые значения параметра type : oci_dtype_file oci_dtype_lob и oci_dtype_rowid
возвращает новый lob или дескриптор file в случае успеха или false при ошибке
инициализирует новый дескриптор объекта lob или file
идентификатор допустимого oci запроса
возвращает число затронутых строк в виде integer либо false при ошибке
возвращает количество полей в результате запроса
старый пароль
имя базы данных
новый пароль
имя пользователя oracle
идентификатор соединения возвращаемый функцией oci_connect() или oci_pconnect()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет пароль пользователя oracle
этот параметр доступен начиная с версии php 5 pecl oci8 1
пароль пользователя username
содержит экземпляр oracle для подключения
определяет кодировку используемую клиентскими библиотеками oracle
имя пользователя oracle
возвращает идентификатор подключения или false в случае ошибки
устанавливает постоянное соединение с сервером oracle
может быть задано номером поля начиная с 1 либо по имени
возвращает все значения в виде строки за исключением абстрактных типов rowids lobs и files
возвращает значение поля из результата запроса
возвращает в виде строки информацию о версии или false при ошибке
возвращает версию сервера oracle
идентификатор соединения oracle возвращаемый oci_connect() oci_pconnect() или oci_new_connect()
задаваемая пользователем строка до 64 байт
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задает идентификатор клиента
идентификатор соединения oracle возвращаемый oci_connect() oci_pconnect() или oci_new_connect()
задаваемая пользователем строка до 64 байт
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задает информацию о клиенте
имя выпуска базы данных oracle ранее созданное sql командой create edition
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задает выпуск edition базы данных
идентификатор соединения oracle возвращаемый oci_connect() oci_pconnect() или oci_new_connect()
задаваемая пользователем строка string длиной до 48 байт
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задает имя модулю
корректный идентификатор выражения oci8 полученный из oci_parse() и исполненный функцией oci_execute() или идентификатор выражения ref cursor
количество рядов предварительной выборки > = 0
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает количество строк которые будут автоматически выбраны в буфер
для описания параметра context обратитесь к разделу потоки
путь к открываемому каталогу
возвращает дескриптор каталога resource в случае успеха или false в случае ошибки
открывает дескриптор каталога
строка ident добавляется к каждому сообщению
параметр facility используется для определения типа программы создавшей сообщение журнала
аргумент option используется для указания используемых опций журналирования при создании записи журнала
возвращает true в случае успешного завершения или false в случае возникновения ошибки
открывает соединение к системному журналу
значение параметра
имя параметра
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавить обработчик значений url
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сброс значений установленных обработчиком url
параметр format задается в виде строки и состоит из кодов формата и опционального аргумента повторения
возвращает бинарную строку содержащую данные
упаковывает данные в бинарную строку
установив в параметр process_sections true можно получить многомерный массив который включает названия секций и настроек
содержимое разбираемого ini файла
может принимать следующие значения: ini_scanner_normal по умолчанию или ini_scanner_raw
в случае успеха настройки возвращаются в виде ассоциативного массива array
разбирает строку конфигурации
если указан второй параметр arr то вместо присвоения переменных в текущем контексте они будут сохранены в этом параметре в качестве элементов массива
входная строка
разбирает строку в переменные
url для разбора
укажите одну из констант php_url_scheme php_url_host php_url_port php_url_user php_url_pass php_url_path php_url_query или php_url_fragment чтобы получить только конкретный компонент url в виде строки string
при разборе значительно некорректных url-адресов parse_url() может вернуть false
разбирает url и возвращает его компоненты
если присутствует аргумент return_var то код возврата unix-команды будет помещён здесь
команда которая будет выполнена
выполняет внешнюю программу и отображает необработанный вывод
если указан то задает для возврата отдельный элемент: один из следующих pathinfo_dirname pathinfo_basename pathinfo_extension и pathinfo_filename
анализируемый путь
если параметр options не передан то возвращаемый ассоциативный массив array будет содержать следующие элементы: dirname basename extension если есть и filename
возвращает информацию о пути к файлу
рисует дугу окружности против часовой стрелки
рисует дугу окружности по часовой стрелке
рисует окружность
закрывает pdf-документ [устаревшее]
создает объемное изображение
создает действие для объекта или события
создает прямоугольную аннотацию
возвращает текст ошибки
возвращает код ошибки
создает объект pdflib
создает pdf-файл [устаревшее]
масштабирует систему координат
set miter limit
конвертирует строку из utf-16 в utf-8
конвертирует строку из utf-8 в utf-16
открывает постоянное соединение с интернет или сокетом unix домена
результат запроса к postgresql значение типа resource возвращаемое функцией pg_query() pg_query_params() или pg_execute() среди прочих
количество записей затронутых запросом
возвращает количество затронутых запросом записей кортежей
ресурс соединения с базой данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
остановка асинхронного запроса
ресурс соединения с базой данных postgresql
клиентская кодировка либо false в случае ошибки
получение кодировки клиента
строка connection_string может быть пустой строкой или содержать несколько параметров разделенных пробелами
если в функцию передана константа pgsql_connect_force_new будет создаваться новое подключение даже если connection_string идентична строке существующего подключения
ресурс соединения с базой данных postgresql либо false если подключиться не удалось
открывает соединение с базой данных postgresql
ресурс соединения с базой данных postgresql
возвращает true когда соединение занято иначе false
проверяет занято ли соединение в данный момент
ресурс подключения к базе данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сброс подключение переподключение
ресурс соединения с базой данных postgresql
pgsql_connection_ok либо pgsql_connection_bad
определяет состояние подключения
данные для преобразования
одна из констант pgsql_conv_ignore_default pgsql_conv_force_null или pgsql_conv_ignore_not_null либо их комбинация
имя таблицы базы данных
ресурс соединения с базой данных postgresql
массив array содержащий преобразованные данные либо false в случае ошибки
преобразует значения ассоциативного массива в приемлемые для использования в sql запросах
определяет каким образом значения sql null представлены в массиве rows
массив array данных для копирования в table_name
символ отделяющий значения друг от друга в каждом элементе массива rows
имя таблицы в которую копируются значения из rows
ресурс соединения с базой данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
вставляет записи из массива в таблицу
ресурс подключения к базе данных postgresql
строка содержащая имя базы данных соответствующей ресурсу connection либо false в случае ошибки
определяет имя базы данных
имя таблицы из которой удаляются записи
ассоциативный массив ключи которого соответствуют именам полей таблицы table_name а значения соответствуют удаляемым значениям в этих колонках
комбинация констант pgsql_conv_force_null pgsql_dml_no_conv pgsql_dml_escape pgsql_dml_exec pgsql_dml_async или pgsql_dml_string
ресурс соединения с базой данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет записи
ресурс подключения к базе данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
синхронизирует с бэкендом postgresql
строка содержащая двоичные данные в виде текста которые требуется поместить в поле типа bytea
ресурс подключения к базе данных postgresql
возвращает строку в которой экранированы все необходимые символы
экранирует спецсимволы в строке для вставки в поле типа bytea
исходная экранируемая строка
ресурс подключения к базе данных postgresql
возвращает строку в которой экранированы все необходимые символы
экранирование спецсимволов в строке запроса
ресурс подключения к базе данных postgresql
массив значений параметров запроса для замены псевдопеременных $1 $2 и т
имя подготовленного к исполнению запроса
ресурс результата выполнения запроса при успешном выполнении
запускает выполнение ранее подготовленного параметризованного запроса и ждет результат
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
номер колонки результата запроса начиная с нуля данные из которой будут помещены в массив
массив значений колонки результата запроса
выбирает все записи из одной колонки результата запроса и помещает их в массив
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
многомерный массив данных результата запроса
выбирает все данные из результата запроса и помещает их в массив
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
номер выбираемой из результата запроса строки
ассоциативный массив индексированный именами полей выборки
выбирает строку результата запроса и помещает данные в ассоциативный массив
устарел и не используется
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
номер выбираемой из результата запроса строки
имя класса создаваемого и возвращаемого объекта
необязательный аргумент
object имена и значения свойств которого соответствуют именам и значениям полей результата запроса
выбирает строку результата запроса и возвращает данные в виде объекта
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
номер выбираемой из результата запроса строки
имя или номер поля выбираемого значения
логические значения возвращаются как t или f
возвращает запись из результата запроса
номер поля начиная с нуля как integer или имя поля как string
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
номер строки результата запроса с нужным полем
возвращает 1 если выбранное значение sql null 0 для других значений
проверка поля на значение sql null
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
наименование поля
номер поля начиная с нуля либо -1 в случае ошибки
возвращает порядковый номер именованного поля
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
номер строки результата запроса с нужным полем
длина строки при выводе значения поля либо false в случае ошибки
возвращает количество печатаемых символов
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
порядковый номер поля результата запроса начиная с нуля
требуемый объем памяти в байтах для хранения значения поля
возвращает размер поля
по умолчанию функция возвращает название таблицы содержащей заданное поле
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
порядковый номер поля результата запроса начиная с нуля
при успешном завершении название таблицы или ее oid
возвращает наименование или идентификатор таблицы содержащей заданное поле
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
порядковый номер поля начиная с нуля
oid базового типа значений поля либо false в случае ошибки
возвращает идентификатор типа заданного поля
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
порядковый номер поля начиная с нуля
строка содержащая имя базового типа значений поля либо false в случае ошибки
возвращает имя типа заданного поля
необязательный аргумент указывающий каким образом возвращаемый массив array будет проиндексирован
ресурс соединения с базой данных postgresql
массив array содержащий notify сообщение и pid сервера бд
получение sql notify сообщения
ресурс соединения с базой данных postgresql
ресурс результата запроса либо false когда доступных результатов больше нет
получение результата асинхронного запроса
ресурс подключения к базе данных postgresql
строка содержащая имя подключенного через connection хоста либо false в случае ошибки
возвращает имя хоста соответствующего подключению
комбинация констант pgsql_conv_opts pgsql_dml_no_conv pgsql_dml_escape pgsql_dml_exec pgsql_dml_async и pgsql_dml_string
ассоциативный массив array в котором ключи являются названиями колонок таблицы table_name а значения - записи которые необходимо вставить в эти колонки
имя таблицы для вставки данных
ресурс соединения с базой данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
заносит данные из массива в таблицу базы данных
ресурс результата запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() в числе прочих
строка содержащая oid последней вставленной строки на соединении connection либо false если произошла ошибка или поле oid недоступно
возвращает oid последней добавленной в базу строки
ресурс большого объекта postgresql large object lob возвращаемый функцией pg_lo_open()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает большой объект
ресурс подключения к базе данных postgresql
если задан аргумент object_id функция попытается создать объект с этим идентификатором в противном случае будет использован свободный идентификатор назначенный сервером
oid большого объекта либо false в случае ошибки
создает большой объект
ресурс подключения к базе данных postgresql
oid большого объекта в базе данных
полный путь и имя файла в клиентской файловой системе для записи данных большого объекта
возвращает true в случае успешного завершения или false в случае возникновения ошибки
вывод большого объекта в файл
ресурс подключения к базе данных postgresql
если задан аргумент object_id функция попытается создать объект с этим идентификатором в противном случае будет использован свободный идентификатор назначенный сервером
полный путь и имя файла в клиентской файловой системе для чтения данных большого объекта
oid созданного большого объекта либо false в случае ошибки
импорт большого объекта из файла
режим доступа к объекту
ресурс подключения к базе данных postgresql
oid большого объекта в базе данных
ресурс большого объекта либо false в случае ошибки
открывает большой объект базы данных
ресурс большого объекта lob postgresql возвращаемый функцией pg_lo_open()
количество прочитанных байт либо false в случае ошибки
читает содержимое большого объекта и посылает напрямую в броузер
одна из констант: pgsql_seek_set перемещать от начала объекта pgsql_seek_cur перемещать с текущей позиции или pgsql_seek_end отступать от конца объекта
количество байт на сколько требуется переместить указатель
ресурс большого объекта lob postgresql возвращаемый функцией pg_lo_open()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
перемещает внутренний указатель большого объекта
ресурс большого объекта lob postgresql возвращаемый функцией pg_lo_open()
текущая позиция внутреннего указателя количество байт от начала большого объекта
возвращает текущее положение внутреннего указателя большого объекта
ресурс подключения к базе данных postgresql
oid большого объекта в базе данных
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаление большого объекта
данные для записи в большой объект
ресурс большого объекта lob postgresql возвращаемый функцией pg_lo_open()
необязательный аргумент
количество записанных в большой объект байт либо false в случае ошибки
записывает данные в большой объект
название таблицы
флаг указывающий что нужно вернуть расширенные мета-данные
ресурс соединения с базой данных postgresql
массив содержащий определение таблицы либо false в случае ошибки
получение метаданных таблицы
результат запроса postgresql возвращаемый функциями pg_query() pg_query_params() или pg_execute() и прочими
количество строк в выборке
возвращает количество строк в выборке
строка connection_string может быть пустой строкой или содержать несколько параметров разделенных пробелами
если в функцию передана константа pgsql_connect_force_new будет создаваться новое подключение даже если connection_string идентична строке существующего подключения
ресурс соединения с базой данных postgresql либо false если подключиться не удалось
открывает постоянное соединение с сервером postgresql
ресурс подключения к базе данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверка соединения с базой данных
ресурс подключения к базе данных postgresql
число типа int соответствующее номеру порта либо false в случае ошибки
возвращает номер порта соответствующий заданному соединению
имя создаваемой заготовки
ресурс подключения к базе данных postgresql
параметризованный sql запрос
ресурс результата запроса или false в случае возникновения ошибки
посылает запрос на создание параметризованного sql выражения и ждет его завершения
ресурс подключения к базе данных postgresql
параметризованный sql запрос
массив значений параметров запроса для замены псевдопеременных $1 $2 и т
ресурс результата запроса или false в случае возникновения ошибки
посылает параметризованный запрос на сервер параметры передаются отдельно от текста sql запроса
возможные значения аргумента fieldcode : pgsql_diag_severity pgsql_diag_sqlstate pgsql_diag_message_primary pgsql_diag_message_detail pgsql_diag_message_hint pgsql_diag_statement_position pgsql_diag_internal_position для версий postgresql 8
ресурс результата предыдущего запроса postgresql
сообщение об ошибке из заданного поля в виде строки string ; null если заданное поле не существует; false в случае ошибки
возвращает конкретное поле из отчета об ошибках
ресурс результата запроса postgresql возвращенный pg_query() pg_query_params() или pg_execute() и прочими
возвращает строку string
возвращает сообщение об ошибке связанной с запросом результата
параметризованный sql запрос
массив значений параметров запроса для замены псевдопеременных $1 $2 и т
ресурс соединения с базой данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
посылает параметризованный запрос на сервер не ожидает возвращаемого результата
одно или несколько sql выражений разделенных точкой с запятой
ресурс соединения с базой данных postgresql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправляет асинхронный запрос
требуемый режим: pgsql_errors_terse pgsql_errors_default или pgsql_errors_verbose
ресурс подключения к базе данных postgresql
предыдущий режим действовавший до запуска функции: pgsql_errors_terse pgsql_errors_default или pgsql_errors_verbose
определяет объем текста сообщений возвращаемых функциями pg_last_error и pg_result_error
ресурс соединения с базой данных postgresql
список возможных состояний: pgsql_transaction_idle сервер бездействует pgsql_transaction_active выполняется запрос pgsql_transaction_intrans сервер бездействует работа в режиме транзакции или pgsql_transaction_inerror сервер бездействует транзакция потерпела неудачу
возвращает текущее состояние транзакции на сервере
ресурс подключения к базе данных postgresql
имя tty для подключения connection в виде строки string либо false в случае ошибки
возвращает имя терминала tty связанное с соединением
строка string содержащая данные типа postgresql bytea и подлежащая преобразованию в двоичную строку php
строка string с неэкранированными спецсимволами
убирает экранирование двоичных данных типа bytea
ресурс подключения к базе данных postgresql
всегда возвращает true
отключает трассировку соединения с postgresql
ресурс подключения к базе данных postgresql
возвращает массив с ключами client protocol и server и соответствующими значениями версий либо false в случае ошибки или некорректно работающего соединения
возвращает массив содержащий версии клиента протокола клиент-серверного взаимодействия и сервера если доступно
имя проверяемого файла
если используется параметр error_message то в нем будет содержаться сообщение об ошибке сформированное при проверке синтаксиса
возвращает true если проверка пройдена и false если возникла ошибка или файл из filename недоступен
проверяет и запускает php синтаксис указанного файла
путь к загруженному файлу php
получение адреса загруженного php
при успехе возвращает строку с разделенными запятыми именами
возвращает список
возвращает phpe9568f34-d428-11d2-a769-00aa001acf42
получение guid логотипа
путь к php файлу
возвращает очищенный исходный код или пустую строку в случае ошибки
возвращает исходный код без комментариев и пробелов
mode - одиночный символ определяющий какая информация будет выводиться: a : по умолчанию
возвращает описание ос в виде строки
выдает информацию об операционной системе на которой запущен php
использование аргумента flag позволяет произвольно компоновать информацию об отдельных группах разработчиков
возвращает true в случае успешного завершения или false в случае возникновения ошибки
выводит список разработчиков php
ограничение от 0 до 8 включительно
путь к png файлу
ширина результирующего изображения
путь к результирующему wbmp файлу
высота результирующего изображения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
преобразование png файла в wbmp
команда
режим
возвращает файловый указатель идентичный возвращаемому функцией fopen() за исключением того что он односторонний может быть использован только для чтения или записи и должен быть закрыт при помощи pclose()
открывает файловый указатель процесса
маска состоящая из одной или более констант: posix_f_ok posix_r_ok posix_w_ok или posix_x_ok
путь к проверяемому файлу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
определяет доступность файла
в случае успешного выполнения возвращает string с путём до текущего управляющего терминала
возвращает путь управляющего терминала
возвращает номер ошибки установленный последней posix функцией завершившейся неудачей
возвращает номер ошибки которая произошла в последней posix функции завершившейся неудачей
возвращает число типа integer соответствующее эффективному идентификатору группы
возвращает эффективный идентификатор группы текущего процесса egid
возвращает id пользователя как integer
возвращает эффективный идентификатор пользователя текущего процесса euid
возвращает integer соответствующее действительному id группы текущего процесса
возвращает действительный id группы текущего процесса gid
имя группы
возвращает массив со следующими элементами: массив с информацией о группе элемент описание name элемент name содержит имя группы
возвращает информацию о группе используя её имя
возвращает числовой массив содержащий список идентификаторов групп для текущего процесса
возвращает список групп для текущего процесса
идентификатор текущего процесса
возвращает идентификатор как число типа integer
возвращает id группы текущего процесса для менеджера задач
возвращает идентификатор как integer
возвращает идентификатор группы текущего процесса
возвращает идентификатор как integer
возвращает идентификатор текущего процесса
возвращает идентификатор процесса как integer
возвращает идентификатор родительского процесса
возвращает id пользователя как integer
возвращает фактический идентификатор пользователя текущего процесса uid
имя пользователя для которого определяется уровень доступа
идентификатор базовой группы из файла password
возвращает true в случае успешного завершения или false в случае возникновения ошибки
определяет уровень доступа для группы
файловый дескриптор который ожидается в виде или ресурса resource или целого числа integer
возвращает true если fd является открытым файловым дескриптором связанным с терминалом и false в остальных случаях
определяет является ли файловый дескриптор интерактивным терминалом
одна из pcntl констант сигналов
идентификатор процесса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправляет сигнал соответствующему процессу
путь к fifo файлу
второй параметр mode должен быть представлен в восьмеричной нотации например 0644
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создает специальный fifo файл именованный канал- pipe
старший номер устройства обязательный параметр при использовании констант s_ifchr или s_ifblk
путь и имя создаваемого файла
младший номер устройства
данный параметр получается с помощью побитового или между типом файла одной из следующих констант: posix_s_ifreg posix_s_ifchr posix_s_ifblk posix_s_ififo или posix_s_ifsock и правами доступа
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создает специальный или обычный файл posix
устанавливаемый эффективный идентификатор группы для текущего процесса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает эффективный идентификатор группы для текущего процесса egid
устанавливаемый идентификатор пользователя
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает эффективный идентификатор пользователя для текущего процесса euid
идентификатор группы процесса
идентификатор процесса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает идентификатор группы процесса для менеджера задач
возвращает массив строк с информацией об текущем использовании cpu который включает следующее ticks - число тактов прошедшее с момента перезагрузки
возвращает информацию об использовании процессорного времени
файловый дескриптор который ожидается в виде или ресурса resource или целого числа integer
в случае успеха возвращает string содержащую абсолютный путь до терминала связанного с файловым дескриптором fd
определяет имя терминального устройства
возвращает array если аргумент subject имеет тип array или string в противном случае
производит поиск и замену по регулярному выражению
входящий массив
искомый шаблон строка
в случае если установлен в preg_grep_invert функция preg_grep() возвращает те элементы массива которые не соответствуют заданному шаблону pattern
возвращает массив индексированный ключами из массива input
возвращает массив вхождений которые соответствуют шаблону
упорядочивает результаты так что элемент $matches 0 содержит массив полных вхождений шаблона элемент $matches 1 содержит массив вхождений первой подмаски и так далее
входная строка
искомый шаблон строка
параметр flags регулирует порядок вывода совпадений в возвращаемом многомерном массиве
упорядочивает результаты так что элемент $matches 0 содержит первый набор вхождений элемент $matches 1 содержит второй набор вхождений и так далее
обычно поиск осуществляется слева направо с начала строки
в случае если этот флаг указан для каждой найденной подстроки будет указана ее позиция в исходной строке
может быть комбинацией следующих флагов необходимо понимать что использование preg_pattern_order одновременно с preg_set_order бессмысленно : preg_pattern_order упорядочивает результаты так что элемент $matches 0 содержит массив полных вхождений шаблона элемент $matches 1 содержит массив вхождений первой подмаски и так далее
возвращает количество найденных вхождений шаблона которое может быть и нулем либо false если во время выполнения возникли какие-либо ошибки
выполняет глобальный поиск шаблона в строке
в случае если указан необязательный параметр delimiter он будет также экранироваться
входная строка
возвращает экранированную строку
экранирует символы в регулярных выражениях
максимально возможное количество замен для каждого шаблона в каждой строке subject
искомый шаблон
если указана то эта переменная будет заполнена количеством произведенных замен
строка или массив строк для поиска и замены
вызываемая callback-функция которой будет передан массив совпавших элементов из строки subject
preg_replace_callback() возвращает массив если параметр subject является массивом иначе возвращается строка
выполняет поиск по регулярному выражению и замену с использованием callback-функции
если указана то эта переменная будет заполнена количеством произведенных замен
искомый шаблон
строка или массив строк для замены
строка или массив строк для поиска и замены
максимально возможное количество замен каждого шаблона для каждой строки subject
preg_replace() возвращает массив если параметр subject является массивом иначе возвращается строка
выполняет поиск и замену по регулярному выражению
входной массив
возвращает значение массива на которое ранее указывал внутренний указатель массива или false если больше элементов нет
передвигает внутренний указатель массива на одну позицию назад
вводимые данные
возвращает 1 всегда
выводит строку
дескриптор типа resource открытый при помощи proc_open() который будет закрыт
возвращает код завершения процесса который был запущен
завершает процесс открытый при помощи функции proc_open и возвращает код завершения этого процесса
будет задан массивом указателей на файлы соответствующие созданным каналам передачи данных php
массив ключи которого представляют собой номер дескриптора а значение описывает как php должен передать этот дескриптор дочернему процессу
позволяет задать дополнительные настройки
команда для выполнения
рабочая директория команды
массив переменных окружения для запускаемой команды или null если требуется использовать то же окружение что и у текущего php процесса
возвращает ресурс представляющий процесс
выполняет команду и открывает указатель на файл для ввода / вывода
этот необязательный параметр полезен только на операционных системах поддерживающих стандарт posix
открытый при помощи функции proc_open() дескриптор типа resource который будет закрыт
возвращает статус прекращения процесса который был запущен
уничтожает процесс открытый при помощи функции proc_open
имя класса или объекта класса для проверки
имя свойства
возвращает true если свойство существует false - если оно не существует или null в случае ошибки
проверяет содержит ли объект или класс указанный атрибут
x-coordinate of third control point
y-coordinate of second control point
y-coordinate of first control point
y-coordinate of third control point
x-coordinate of second control point
resource identifier of the postscript file as returned by ps_new()
x-coordinate of first control point
возвращает true в случае успешного завершения или false в случае возникновения ошибки
draws a curve
персональный список слов
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает файл содержащий персональный список слов
true если объединенные слова должны рассматриваться как правильные сложные слова false в противном случае
возвращает true в случае успешного завершения или false в случае возникновения ошибки
рассматривает объединённые слова как правильные сложные слова
true если замещающие пары должны сохраняться false в противном случае
возвращает true в случае успешного завершения или false в случае возникновения ошибки
определяет сохранять ли список замещающих пар вместе со списком слов
параметр mode - это режим в котором будет работать проверка орфографии
параметр language - это код языка который состоит из двухбуквенного кода языка по стандарту iso 639 и необязательного двубуквенного кода страны по стандарту iso 3166 после тире или подчеркивания
параметр encoding это кодировка в которой как ожидается даны слова
параметр spelling определяет вариант проверки орфографии для языков с более чем одним вариантом правописания таких как английский
параметр jargon содержит дополнительную информацию для различения двух различных списков слов имеющих одинаковые параметры language и spelling
в случае успеха возвращает ссылку на словарь или false в случае возникновения ошибки
загружает новый словарь
установка вида foo=bar
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает значение переменной среды
входная строка
возвращает экранированную строку или false если в качестве параметра str была указана пустая строка
экранирует специальные символы
первое значение последовательности
конечное значение которым заканчивается последовательность
если указан параметр step то он будет использоваться как инкремент между элементами последовательности
возвращает массив элементов от start до end включительно
создает массив содержащий диапазон элементов
url который должен быть декодирован
возвращает декодированный url в виде строки
декодирование url-кодированной строки
url который должен быть закодирован
возвращает строку в которой все не цифробуквенные символы кроме -_
url-кодирование строки согласно rfc 3986
возвращает массив записей из кэша реального пути
получает записи из кэша реального пути
возвращает объем использованной памяти для кэширования реального пути
получает размер кэша реального пути
регистрируемая завершающая функция
разрешается передавать параметры в завершающую функцию указав их как дополнительные параметры
регистрирует функцию которая выполнится по завершении работы скрипта
входной массив
возвращает значение первого элемента массива или false если массив пуст
устанавливает внутренний указатель массива на его первый элемент
файловый указатель должен быть доступным и ссылаться на файл успешно открытый при помощи fopen()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сбрасывает курсор у файлового указателя
ресурс resource дескриптора каталога ранее открытый с помощью функции opendir()
сбросить дескриптор каталога
замечание : поддержка контекста была добавлена в php 5
путь к директории
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет директорию
количество десятичных знаков до которых округлять
используйте одну из этих констант для задания способа округления
значение для округления
округленное значение
округляет число типа float
вы можете изменить поведение сортировки используя дополнительный параметр sort_flags подробнее смотрите функцию sort()
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив в обратном порядке
с помощью параметра character_mask можно также указать удаляемые символы
входная строка
возвращает модифицированную строку
удаляет пробелы или другие символы из конца строки
результат побитового или над константами из семейства runkit_import_*
имя файла из которого будут импортированы классы и функции
возвращает true в случае успешного завершения или false в случае возникновения ошибки
обрабатывает php файл импортируя функции и классы перезаписывая при необходимости
php-файл в котором проверять синтаксис
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет php-синтаксис выбранного файла
php код для проверки синтаксиса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет php-синтаксис выбранного кода
экземпляр runkit_sandbox вывод которого необходимо обрабатывать
имя функции для перехвата данных
возвращает предыдущее имя функции или false если она не была задана
задает функцию для захвата и / или обработки данных из песочницы
значение которое необходимо сериализовать
возвращает строку содержащую потоковое представление переменной value которая может быть сохранена где угодно
генерирует пригодное для хранения представление переменной
возвращает массив с информацией о cookie текущей сессии который содержит следующие элементы: lifetime - время жизни cookie в секундах
возвращает параметры cookie сессии
функция завершения сессии
php_session_disabled если механизм сессий отключен
возвращает состояние текущей сессии
имя функции которая будет вызываться каждый раз когда выбрасывается неперехватываемое исключение
возвращает имя предыдущего заданного обработчика или null в случае ошибки
задает пользовательский обработчик исключений
false - выключено true - включено
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка текущего значения настройки magic_quotes_runtime
если задано true cookie будут доступны только через http протокол
домен которому доступны cookie
время когда срок действия cookie истекает
наименование cookie
указывает на то что значение cookie должно передаваться от клиента по защищенному https соединению
путь к директории на сервере из которой будут доступны cookie
значение cookie
если перед вызовом функции клиенту уже передавался какой-либо вывод тэги пустые строки пробелы текст и т
посылает cookie
параметр category это именованная константа определяющая категорию функций на которые будет влиять установка локали: lc_all - все нижеперечисленное lc_collate - функции сравнения строк смотри strcoll() lc_ctype - функции преобразования и классификации строк например strtoupper() lc_monetary - для функции localeconv() lc_numeric - задает символ десятичного разделения см
(необязательные аргументы в виде строк или массивов для установки настроек локали до первой успешной попытки
если в качестве locale передана пустая строка или null имена локалей будут взяты из одноименных переменных окружения или переменной с именем lang
возвращает имя вновь установленной локали или false если система не поддерживает установку локали указанная локаль не существует или передано недопустимое имя категории
устанавливает настройки локали
возвращает true в случае успешного завершения или false в случае возникновения ошибки
посылает cookie не преобразовывая значение
преобразуемая переменная
допустимыми значениями параметра type являются: boolean или начиная с php версии 4
возвращает true в случае успешного завершения или false в случае возникновения ошибки
присваивает переменной новый тип
системный идентификатор блока разделяемой памяти
доступные для использования флаги: a для доступа устанавливает флаг shm_rdonly) следует применять этот флаг когда необходимо использовать ранее зарезервированный участок разделяемой памяти уже содержащий какие-либо данные
права доступа к участку памяти такие же как к обычному файлу
размер резервируемого блока в разделяемой памяти в байтах
при успешном выполнении shmop_open() возвращается идентификатор который может быть в дальнейшем использован для доступа к зарезервированному участку памяти
резервирование или использование блока разделяемой памяти
определяет с какой позиции начинать чтение данных
идентификатор блока памяти возвращаемый функцией shmop_open()
количество байтов для чтения
возвращает строковые данные или false в случае возникновения ошибки
чтение данных из участка разделяемой памяти
идентификатор блока памяти возвращаемый функцией shmop_open()
результатом является целое число отражающее количество байт зарезервированных в разделяемой памяти для конкретного блока
возвращает размер блока в разделяемой памяти
первая строка
вторая строка
при передаче по ссылке третьего аргумента similar_text() присваивает ему степень похожести двух строк в процентах
возвращается количество совпадающих символов в двух строках
вычисляет степень похожести двух строк
true если ns является префиксом и false если uri; по умолчанию равен false
начиная с php 5
путь к xml-файлу замечание : libxml 2 декодирует uri так что если вы хотите передать например b & c как параметр uri a вы должны вызвать simplexml_load_file( rawurlencode( http: / / example
префикс пространства имен или uri
вы можете использовать этот необязательный параметр для того чтобы функция simplexml_load_file() возвращала объект указанного класса
возвращает объект object класса simplexmlelement со свойствами содержащими данные которые хранятся внутри xml-документа или false в случае возникновения ошибки
интерпретирует xml-файл в объект
значение в радианах
синус угла arg
синус
входное значение
гиперболический синус arg
гиперболический синус
действительный ресурс сокета созданный при помощи функции socket_create()
в случае успеха возвращает новый ресурс сокета или false в случае ошибки
принимает соединение на сокете
параметр port используется только когда имя привязывается к сокету af_inet и указывает порт на котором будут слушаться соединения
действующий ресурс сокета созданный при помощи функции socket_create()
если сокет из семейства af_inet то параметр address должен быть ip-адресом в записи разделённой точками например 127
возвращает true в случае успешного завершения или false в случае возникновения ошибки
привязывает имя к сокету
действующий ресурс сокета созданный при помощи функций socket_create() или socket_accept()
закрывает ресурс сокета
параметр port используется и обязателен только в том случае если происходит соединение с сокетом af_inet или af_inet6 и он указывает порт на удалённом хосте к которому должно быть создано соединение
параметр address может быть ipv4-адресом в записи разделённой точками например 127
возвращает true в случае успешного завершения или false в случае возникновения ошибки
начинает соединение с сокетом
параметр backlog определяет максимальную длину до которой может вырасти очередь ожидающих соединений
порт который нужно слушать на всех интерфейсах
socket_create_listen() возвращает новый ресурс сокета в случае успешного завершения или false в случае ошибки
открывает сокет на указанном порту для принятия соединений
параметр domain определяет семейство протоколов которое будет использоваться сокетом
параметр type указывает тип коммуникации которая будет использоваться сокетом
ссылка на массив в который будут вставлены два ресурса сокетов
параметр protocol устанавливает определённый протокол в указанном семействе протоколов domain который будет использоваться при связи с полученными сокетами
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создаёт пару неразличимых сокетов и сохраняет их в массиве
буфер содержащий данные которые будут отправлены на удалённый хост
значение параметра flags может быть любой комбинацией следующих флагов соединённых при помощи двоичного оператора or |
действующий ресурс сокета созданный при помощи функции socket_create() или socket_accept()
число байт которое будет отправлено на удалённый хост из буфера buf
socket_send() возвращает количество отправленных байтов или false в случае ошибки
отправляет данные в подсоединённый сокет
действующий ресурс сокета созданный при помощи функции socket_create() или socket_accept()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает блокирующий режим на ресурсе сокета
действующий ресурс сокета созданный при помощи функции socket_create() или socket_accept()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает неблокирующий режим для файлового дескриптора fd
значение опции
параметр level указывает уровень протокола на котором используется опция
действующий ресурс сокета созданный при помощи функции socket_create() или socket_accept()
возможные опции для сокета те же самые как и для функции socket_get_option()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает опции для сокета
значение параметра how может быть одним из следующих: возможные значения для параметра how 0 завершает чтение из сокета 1 завершает запись в сокет 2 завершает чтение и запись в сокет
действующий ресурс сокета созданный при помощи функции socket_create()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
завершает работу сокета на получение и / или отправку данных
допустимый код ошибки сокета скорее всего возвращённый функцией socket_last_error()
возвращает сообщение об ошибке связанное с параметром errno
возвращает строку описывающую ошибку сокета
буфер который будет записан
необязательный параметр length может указывать другое число байт записываемых в сокет
возвращает количество байт успешно записанных в сокет или false в случае возникновения ошибки
запись в сокет
возвращает строку в случае успеха и false в случае ошибки
возвращает текущую версию расширения apache solr
входной массив
дополнительный второй параметр sort_flags можно использовать для изменения поведения сортировки используя следующие значения: флаги сортировки: sort_regular - обычное сравнение элементов без изменения типов sort_numeric - числовое сравнение элементов sort_string - строковое сравнение элементов sort_locale_string - сравнивает элементы как строки с учетом текущей локали
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив
входная строка
возвращает ключ soundex в виде строки
возвращает ключ soundex для строки
имя искомого класса
попытка загрузить описание класса всеми зарегистрированными методами __autoload()
при вызове без параметров функция просто выведет список зарегистрированных на данный момент расширений перечисленных через запятую
список перечисленных через запятую расширений файлов для функции spl_autoload()
регистрация и вывод расширений файлов для spl_autoload
массив array всех зарегистрированных в __autoload функций
получение списка всех зарегистрированных функций __autoload()
этот параметр определяет должна ли spl_autoload_register() выбрасывать исключение если зарегистрировать autoload_function оказалось невозможным
если передано значение true spl_autoload_register() поместит указанную функцию в начало очереди вместо добавления в конец
имя функции реализующей метод spl_autoload()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
регистрирует заданную функцию в качестве реализации метода __autoload()
функция автозагрузки описаний классов регистрацию которой требуется снять
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отмена регистрации функции в качестве реализации метода __autoload()
по умолчанию функция будет искать файлы с расширениями
имя класса и пространства имен в нижнем регистре описание которого требуется загрузить
реализация по умолчанию метода __autoload()
возвращает массив array содержащий доступные а настоящий момент классы spl
возвращает доступные классы spl
какой-либо объект
строка символов уникальная для каждого существующего на данный момент объекта но в то же время одна и та же для каждого конкретного объекта
возвращает хеш-идентификатор для объекта
входная строка
регулярное выражение чувствительное к регистру
если указан параметр limit возвращаемый массив будет содержать максимум limit элементов причем последний элемент будет включать всю оставшуюся часть строки string
возвращает массив строк каждая из которых является строкой образованной разбиением строки string чувствительным к регистру регулярным выражением pattern
разбиение строки на массив по регулярному выражению
строка формата состоит из нуля и более директив: обычных символов за исключением % которые копируются напрямую в результирующую строку и описателей преобразований каждый из которых заменяется на один из параметров
возвращает строку отформатированную в соответствии со строкой format
возвращает отформатированную строку
входная строка
создает допустимое регулярное выражение которое будет совпадать с string игнорируя регистр символов
создает регулярное выражение для регистронезависимого сравнения
ресурс базы данных sqlite полученный из функции sqlite_open() в случае использования процедурного подхода
закрывает открытую базу данных sqlite
индекс или имя возвращаемого столбца
ресурс результата sqlite
когда параметр decode_binary установлен в true по умолчанию php будет декодировать бинарный код примененный к данным как если бы они были закодированы функцией sqlite_escape_string()
возвращает значение столбца
выбирает столбец из текущей записи результата запроса
код ошибки полученный из sqlite_last_error()
возвращает читабельное описание ошибки с кодом error_code в виде string
возвращает строку с описанием ошибки
экранируемая строка string
возвращает экранируемую строку string пригодную для использования в sql-запросе sqlite
экранирует спецсимволы в строке для использования в запросе
ресурс результата sqlite
sqlite_has_more() возвращает true если результат запроса result содержит записи доступные для выборки иначе возвращает false
определяет есть ли еще записи в результате запроса
аргумент для вычисления
квадратный корень из arg или специальное значение nan для отрицательных чисел
квадратный корень
начальное значение генератора
изменяет начальное число генератора псевдослучайных чисел
обрабатываемая строка string
необязательные переменные передаваемые по ссылке которым будут присвоены считанные значения
формат в соответствии с которым будет интерпретирована строка str описанный в документации к функции sprintf() со следующими отличиями: на функцию не влияют настройки локали
если переданы только эти два аргумента будет возвращен массив
разбирает строку в соответствии с заданным форматом
путь к файлу
возвращает информацию о файле
устанавливает символ ограничителя поля только один символ
обрабатываемая строка
устанавливает разделитель поля только один символ
устанавливает экранирующий символ только один символ
возвращает индексированный массив содержащий полученные из строки поля
выполняет разбор csv-строки в массив
значение замены будет использовано для замены искомых значений search
если передан то будет установлен в количество произведенных замен
строка или массив в котором производится поиск и замена также известный как haystack стог сена
искомое значение также известное как needle иголка
возвращает строку или массив с замененными значениями
регистронезависимый вариант функции str_replace
замечание : pad_string может быть урезана если необходимое количество дополняемых символов не делится нацело на длину строки pad_string
если значение pad_length отрицательно меньше или равно длине входной строки то дополнения не происходит
входная строка
необязательный аргумент pad_type может иметь значение str_pad_right str_pad_left или str_pad_both
возвращает дополненную строку
дополняет строку другой строкой до заданной длины
количество раз которые нужно повторить строку input
повторяемая строка
возвращает повторяющуюся строку
возвращает повторяющуюся строку
значение замены будет использовано для замены искомых значений search
если передан то будет установлен в количество произведенных замен
строка или массив в котором производится поиск и замена также известный как haystack стог сена
искомое значение также известное как needle иголка
эта функция возвращает строку или массив с замененными значениями
заменяет все вхождения строки поиска на строку замены
входная строка
возвращает rot13 версию переданной строки
выполняет преобразование rot13 над строкой
входная строка
максимальная длина фрагмента
если указан необязательный аргумент split_length возвращаемый массив будет содержать части исходной строки длиной split_length каждая иначе каждый элемент будет содержать один символ
преобразует строку в массив
строка
список дополнительных символов которые будут рассматриваться как слово
указывает возвращаемое значение данной функции
возвращает массив или целое число в зависимости от указанного параметра format
возвращает информацию о словах входящих в строку
первая строка
вторая строка
возвращает отрицательное число если str1 меньше чем str2 положительное число если str1 больше чем str2 и 0 если они равны
сравнение строк с учетом текущей локали
brigade - ресурс указывающий на цепочку бакетов которая содержит один или несколько объектов bucket
бакет
присоединить бакет в начало цепочки
ресурс resource потока или контекстовый ресурс resource
возвращает ассоциативный массив содержащий все опции и параметры контекста
извлекает параметры из контекста
поток или контекст к которому будут применены параметры
массив параметров которые будут установлены
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает параметры для потока / обертки / контекста
название фильтра
этот фильтр будет добавлен с указанными params к концу списка и таким образом будет вызван последним в списке потоковых операций
целевой поток
по умолчанию stream_filter_append() будет прикреплять фильтр к цепочке фильтров чтения если файл был открыт для чтения т
возвращает ресурс который может быть использован для того чтобы обратиться к этому экземпляру фильтра во время вызова stream_filter_remove()
прикрепляет фильтр к потоку
название потока
целевой поток
этот фильтр будет добавлен с указанными параметрами params к началу списка и таким образом будет вызван первым во время потоковых операций
по умолчанию функция stream_filter_prepend() будет прикреплять фильтр к цепочке фильтров чтения если файл был открыт для чтения т
возвращает ресурс который может быть использован для того чтобы обратиться к этому экземпляру фильтра во время вызова stream_filter_remove()
прикрепляет фильтр к потоку
для того чтобы реализовать фильтр вам нужно определить класс как расширение php_user_filter c целым рядом функций-членов
название регистрируемого фильтра
возвращает true в случае успешного завершения или false в случае возникновения ошибки
регистрирует потоковый фильтр определённый пользователем
ресурс потока например полученный при помощи функции fopen()
перейти к указанному смещению перед чтением
максимальное количество байт для чтения
возвращает строку или false в случае возникновения ошибки
читает оставшуюся часть потока в строку
допустимый дескриптор файла
количество байт для чтения из дескриптора
необязательный разделитель строки
возвращает строку длиной до length байт прочитанную из файла указанного параметром handle
получает строку из потокового ресурса до указанного разделителя
переменная stream может быть любым потоком созданным при помощи функций fopen() fsockopen() и pfsockopen()
получаемый массив содержит следующие элементы:
извлекает заголовок / метаданные из потоков / файловых указателей
возвращает индексированный массив содержащий названия все обёрток потоков доступных на запущенной системе
извлекает список зарегистрированных потоков
передаётся если для события доступен код описывающего сообщения
если доступно то параметр bytes_transferred будет заполнен
если доступно то параметр bytes_max будет заполнен
одна из констант оповещения stream_notify_*
передаётся если для события доступно описывающее сообщение
одна из констант оповещения stream_notify_severity_*
callback-функция для параметра контекста notification
имя файла которое необходимо преобразовать
возвращает строку string содержащую полученное абсолютное имя файла или false в случае возникновения ошибки
составляет полное имя файла используя пути включения
параметры tv_sec и tv_usec вместе формируют параметр timeout tv_sec указывает число секунд а tv_usec - число микросекунд
потоки перечисленные в массиве write будут отслеживаться на предмет того что запись в них не будет блокироваться
потоки перечисленные в массиве read будут отслеживаться на предмет появления символов доступных для чтения точнее отслеживается что чтение не будет блокироваться - в частности потоковый ресурс также готов для чтения в конце файла но в этом случае функция fread() будет возвращать строку нулевой длины
потоки перечисленные в массиве except будут отслеживаться на предмет поступления высокоприоритетных исключительных внеполосных или out-of-band данных
смотрите описание параметра tv_sec
в случае успеха функция stream_select() возвращает количество потоковых ресурсов содержащееся в изменённых массивах которое может равно нулю если истёк тайм-аут до того как произошло что-то интересное
запускает эквивалент системного вызова select() на заданных массивах потоков с таймаутом указанным параметрами tv_sec и tv_usec
если параметр mode равен 0 указанный поток будет переключен в неблокирующий режим а если он равен 1 поток будет переключен в блокирующий режим
поток
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает блокирующий / неблокирующий режим на потоке
число байт для буферизации
файловый указатель
возвращает 0 в случае удачи или eof если запрос не может быть выполнен
устанавливает буферизацию чтения файла на указанном потоке
целевой поток
микросекунды в устанавливаемом тайм-ауте
секунды в устанавливаемом тайм-ауте
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает значение тайм-аута на потоке
число байт для буферизации
файловый указатель
возвращает 0 в случае успеха или eof в случае если запрос не может быть выполнен
устанавливает буферизацию файла при записи в указанный поток
серверный сокет для принятия соединения
будет присвоено имя адрес клиента который подсоединился если оно содержится и доступно из выбранного транспорта
заменяет тайм-аут подключения сокета по умолчанию
возвращает поток принятого соединения с сокетом или false в случае возникновения ошибки
принимает соединение на сокете созданном c помощью функции stream_socket_server
поле битовой маски которое может принимать значение любой комбинации флагов соединения
адрес удалённого сокета для соединения
число секунд в течение которых должен произойти тайм-аут системного вызова connect()
действующий ресурс контекста созданный при помощи функции stream_context_create()
будет присвоен номер системной ошибки если соединение не удалось установить
будет присвоено сообщение о системной ошибке если соединение не удалось установить
в случае успеха возвращается ресурс потока который может быть использован с другими файловыми функциями такими как fgets() fgetss() fwrite() fclose() и feof() в случае неудачи возвращается false
открывает соединение с интернет-сокетом или с доменным сокетом unix
сокет название которого нужно получить
если установлено в true то удалённое название сокета будет возвращено если установлено в false то локальное название сокета будет возвращено
название сокета
извлекает название локального или удалённого сокета
используемый тип взаимодействия: stream_sock_dgram stream_sock_raw stream_sock_rdm stream_sock_seqpacket or stream_sock_stream
используемый протокол: stream_ipproto_icmp stream_ipproto_ip stream_ipproto_raw stream_ipproto_tcp or stream_ipproto_udp
используемое семейство протоколов: stream_pf_inet stream_pf_inet6 или stream_pf_unix
возвращает массив array с двумя потоковыми ресурсами в случае успеха или false в случае неудачи
создаёт пару связанных неразличимых потоковых сокетов
сокет через который будут отправлены данные data
адрес указанный при создании потокового сокета будет использоваться до тех пор пока не указан альтернативный адрес в параметре address
отправляемые данные
значение параметра flags может быть комбинацией следующего: возможные значения для параметра flags stream_oob обрабатывать oob out-of-band внеполосные данные
возвращает код результата как целое число
отправляет сообщение в сокет независимо от того подсоединён он или нет
смотрите описание параметра errno
если необязательные аргументы errno и errstr присутствуют то они будут установлены для указания действительного уровня системной ошибки которая происходит при системных вызовах socket() bind() и listen()
битовая маска которая может быть установлена в любую комбинацию флагов для создания сокета
тип создаваемого сокета определяется по транспорту указанному с использованием стандартного форматирования url: transport: / / target
возвращает созданный поток или false в случае ошибки
создаёт интернет-сокет или доменный сокет unix
должно быть установлено в stream_is_url если параметр protocol является протоколом url
название регистрируемой обёртки
название класса который реализует протокол protocol
возвращает true в случае успешного завершения или false в случае возникновения ошибки
регистрирует обёртку url реализованную в виде php-класса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
восстанавливает ранее разрегистрированную встроенную обёртку
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отменяет регистрацию обертки url
необязательный параметр timestamp представляет собой integer метку времени по умолчанию равную текущему локальному времени если timestamp не указан
возвращает строку отформатированную в соответствии с параметром format используя указанную временную метку timestamp или текущее время если метка не была указана
форматирует текущую дату / время с учетом текущих настроек локали
второй необязательный параметр может быть использован для указания тегов которые не нужно удалять
входная строка
возвращает строку без тегов
удаляет html и php-теги из строки
строка с которой нужно убрать экранирование
возвращает неэкранированную строку
удаляет экранирование символов произведенное функцией addcslashes
заметьте что needle может содержать строку из одного или более символов
строка в которой производится поиск
если этот параметр указан то поиск будет начат с указанного количества символов с начала строки
возвращает позицию в которой находится искомая строка относительно начала строки haystack независимо от смещения offset
возвращает позицию первого вхождения подстроки без учета регистра
входная строка
возвращает строку с вырезанными обратными слешами
удаляет экранирование символов
если установлен в true stristr() возвращает часть строки haystack до первого вхождения needle не включая needle
если needle не является строкой он приводится к целому и трактуется как код символа
строка в которой производится поиск
возвращает указанную подстроку
регистронезависимый вариант функции strstr
строка string для которой измеряется длина
длина строки string в случае успеха и 0 если string пуста
возвращает длину строки
первая строка
вторая строка
подобно другим функциям сравнения строк данная функция возвращает отрицательное число если str1 меньше чем str2 положительное число если str1 больше чем str2 и 0 если строки равны
сравнение строк без учета регистра с использованием алгоритма natural order
первая строка
количество символов участвующих в сравнении
вторая строка
возвращает отрицательное число если str1 меньше чем str2 положительное число если str1 больше чем str2 и 0 если строки равны
бинарно-безопасное сравнение первых n символов строк без учета регистра
количество символов используемых в сравнении
первая строка
вторая строка
возвращает отрицательное число если str1 меньше чем str2 положительное число если str1 больше чем str2 и 0 если строки равны
бинарно-безопасное сравнение первых n символов строк
если needle не является строкой он приводится к целому и трактуется как код символа
строка в которой производится поиск
если этот параметр указан то поиск будет начат с указанного количества символов с начала строки
возвращает позицию в которой находится искомая строка относительно начала строки haystack независимо от смещения offset
возвращает позицию первого вхождения подстроки
формат строки date например формат используемый в функции strftime()
строка для разбора например строковый результат выполнения функции strftime()
возвращает массив или false в случае возникновения ошибки
разбирает строку даты / времени сгенерированную функцией strftime
переворачиваемая строка
возвращает перевернутую строку
переворачивает строку задом наперед
если needle не является строкой то он приводится к целому и трактуется как код символа
строка в которой производится поиск
если указан то поиск начнется с данного количества символов с начала строки
возвращает номер позиции последнего вхождения needle относительно начала строки haystack независимо от направления поиска и смещения offset
возвращает позицию последнего вхождения подстроки в строке
длина исследуемого фрагмента subject
список из разрешенных символов
позиция начала поиска в subject
исследуемая строка
возвращает длину первого участка subject состоящего целиком из символов в mask
возвращает длину участка в начале строки полностью соответствующего маске
если needle не является строкой он приводится к целому и трактуется как код символа
входная строка
если установлен в true strstr() возвращает часть строки haystack до первого вхождения needle исключая needle
возвращает часть строки или false если needle не найдена
находит первое вхождение подстроки
разделитель строки str
строка string разбиваемая на подстроки токены
токен string
разбивает строку на токены
входная строка
возвращает строку в нижнем регистре
преобразует строку в нижний регистр
входная строка
возвращает строку в верхнем регистре
преобразует строку в верхний регистр
длина сравнения
стартовая позиция сравнения
следующая сравниваемая строка
если case_sensitivity имеет значение true сравнение выполняется с учетом регистра
основная сравниваемая строка
возвращает отрицательное число если строка main_str начиная с символа offset меньше чем str ; положительное число если она больше str ; 0 если строки равны
бинарно-безопасное сравнение 2 строк со смещением с учетом или без учета регистра
входная строка
если аргумент положителен то он представляет собой длину заменяемой подстроки в строке string
строка замены
если start положителен замена начинается с символа с порядковым номером start строки string
возвращает результирующую строку
заменяет часть строки
входная строка
если start неотрицателен возвращаемая подстрока начинается с позиции start от начала строки считая от нуля
если length положительный возвращаемая строка будет не длиннее length символов начиная с параметра start в зависимости от длины string
возвращает извлеченную часть строки или false в случае возникновения ошибки или пустую строку string
возвращает подстроку
если значение параметра эквивалентно true -- subversion будет рекурсивно просматривать уже известные директории для того чтобы добавить файлы которые находятся в этих директориях но не были взяты под контроль subversion
если добавляется директория флаг определят будет ли рекурсивно добавлено всё ее содержимое
путь к добавляемой папке файлу или ссылке
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет элементы в список запланированных для добавления в рабочую копию
имя ключа строка
возвращает значение параметра по ключу key в виде строки или null если параметр не существует
возвращает параметр аутентификации
путь url к элементу в репозитории
номер ревизии целое число соответствующего элемента по умолчанию - head последняя ревизия
возвращает содержимое элемента в репозитории в случае успешного завершения или false в случае возникновения ошибки
возвращает содержимое файла в репозитории
локальный путь куда необходимо получить рабочую копию
комбинации из констант svn_non_recursive и svn_ignore_externals
путь url к директории которую необходимо получить из репозитория
номер ревизии целое число которую необходимо получить
возвращает true в случае успешного завершения или false в случае возникновения ошибки
получает рабочую копию из репозитория
номер версии обычно в формате x
возвращает версию клиентских библиотек svn
массив с путями к локальным файлам или директориям которые будут отправлены
строка комментария для текущего изменения
флаг для отключения рекурсивной отправки директорий из массива targets
возвращает массив в формате:
отправляет изменения из рабочей директории в репозиторий
при true файл будет удален даже если в нем есть локальные изменения
путь к удаляемому элементу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет элементы из рабочей копии или репозитория
номер ревизии первого файла
второй путь к файлу аналогично path1
номер ревизии второго файла аналогично rev1
первый путь
возвращает список массивов состоящий из двух потоков: первая - различия файлов; вторая - ошибки
рекурсивно показывает различия двух файлов
при true из рабочей копии будут так же экспортированы не отправленные в репозиторий файлы
путь к текущему репозиторию или к рабочей копии
путь к чистой папке для экспорта
возвращает true в случае успешного завершения или false в случае возникновения ошибки
экспортирует содержимое директории svn
путь к файлу или директории для импорта
следует ли обработать директории рекурсивно или нет
url адрес репозитория
возвращает true в случае успешного завершения или false в случае возникновения ошибки
импорт пути без версии в репозитории
любая комбинация svn_omit_messages svn_discover_changed_paths и svn_stop_on_copy
конечный номер ревизии для получения
url адрес репозитория для получения истории правок элемента
начальный номер ревизии для получения
количество записей для получения
в случае успеха функция возвращает массив формата: 0 = > array ordered most recent highest revision first rev = > номер ревизии целое число author = > автор правки строка msg = > комментарий к изменениям строка date = > дата правки в формате iso 8601 т
возвращает комментарии к правкам в репозитории
url адрес репозитория например http: / / www
целочисленный номер ревизии для получения списка содержимого
включает рекурсивный запрос
возвращает список содержимого директории репозитория url опционально для конкретной ревизии
опциональный параметр рекурсивной отмены правок
путь к рабочей копии
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отменяет локальные изменения рабочей копии
цель ссылки
имя ссылки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создаёт символическую ссылку
команда которая будет выполнена
если есть аргумент return_var то код возврата выполняемой команды будет записан в эту переменную
возвращает последнюю строку вывода команды в случае успеха и false - в случае неудачи
выполняет внешнюю программу и отображает её вывод
значение в радианах
тангенс угла arg
тангенс
входное значение
гиперболический тангенс arg
гиперболический тангенс
новый домен сообщений или null для получения текущего значения без его изменения
в случае успеха данная функция возвращает текущее домен сообщений после возможного его изменения
устанавливает домен по умолчанию
объект tidy
возвращает число предупреждений
возвращает число доступных предупреждений tidy встретившихся в рассмотренном документе
объект tidy
возвращает число ошибок tidy
возвращает число ошибок tidy встретившихся при рассмотрении документа
объект tidy
возвращает разобранную tidy-разметку
возвращает строку представляющую разобранную tidy-разметку
параметр encoding устанавливает кодировку для входных / выходных документов
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает входную / выходную кодировку символов для указанной разметки
должно быть целым положительным числом меньшим одного миллиарда
должно быть целым положительным числом
возвращает true в случае успешного завершения или false в случае возникновения ошибки
откладывает исполнение на заданное число секунд и наносекунд
возвращает текущую метку времени unix
возвращает string
получение номера версии базы данных временных зон
исходный код php для разбора
массив идентификаторов лексем
разбивает переданный исходный код на php-лексемы
значение лексемы
символьное значение для переданной лексемы token
возвращает символьное имя для переданной php-лексемы
если передан время доступа указанного файла будет установлено в значение atime
время касания
имя касаемого файла
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает время доступа и модификации файла
сообщение соответствующее этой ошибке
назначенный тип ошибки
функция возвращает false если задан неправильный error_type и true в остальных случаях
вызывает пользовательскую ошибку / предупреждение / уведомление
можно также задать список символов для удаления с помощью необязательного аргумента character_mask
обрезаемая строка string
обрезаемая строка
удаляет пробелы или другие символы из начала и конца строки
входной массив
смотрите функции usort() и uksort() для примеров callback-функций сортировки предоставленных пользователем
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив используя пользовательскую функцию для сравнения элементов с сохранением ключей
входная строка
возвращает результирующую строку
преобразует первый символ строки в верхний регистр
входная строка
возвращает модифицированную строку
преобразует в верхний регистр первый символ каждого слова в строке
udm_api_version() возвращает номер версии mnogosearch api
получает версию mnogosearch api
ссылка на идентификатор агента полученная после вызова udm_alloc_agent()
возвращает true
очищает все ограничения поиска mnogosearch
ссылка на идентификатор агента полученная после вызова udm_alloc_agent()
возвращает номер ошибки mnogosearch; либо нуль если ошибки нет
получает номер ошибки mnogosearch
ссылка на идентификатор агента полученная после вызова udm_alloc_agent()
udm_error() возвращает сообщение об ошибке mnogosearch либо пустую строку если нет ошибок
получает сообщение об ошибке mnogosearch
ссылка на идентификатор агента полученная после вызова udm_alloc_agent()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освобождает сессию mnogosearch
ссылка на идентификатор агента полученная после вызова udm_alloc_agent()
udm_free_ispell_data() всегда возвращает true
освобождает память выделенную для ispell-данных
ссылка на идентификатор результата полученная после вызова udm_find()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освобождает память выделенную для результатов mnogosearch
ссылка на идентификатор агента полученная после вызова udm_alloc_agent()
входная строка
возвращает 32-битную хэш-сумму
возвращает контрольную сумму hash32 данной строки
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив по ключам используя пользовательскую функцию для сравнения ключей
новая umask
вызов umask() без аргументов вернёт текущую umask иначе будет возвращена старая umask
изменяет текущую umask
если равен true то функция uniqid() добавит дополнительную энтропию используя комбинированный линейный конгруэнтный генератор в конце возвращаемого значения что увеличивает вероятность уникальности результата
может быть полезно к примеру если идентификаторы генерируются одновременно на нескольких хостах и генерация идентификаторы производится в одну и ту же микросекунду
возвращает уникальный идентификатор в виде строки string
генерирует уникальный id
метка времени unix для преобразования
число дней в юлианском летоисчислении
переводит метку времени unix в юлианский день
упакованные данные
см
возвращает ассоциативный массив содержащий распакованные элементы бинарной строки
распаковывает данные из бинарной строки
другая переменная
удаляемая переменная
удаляет переменную
функция сравнения должна возвращать целое которое меньше равно или больше нуля если первый аргумент является соответственно меньшим равным или большим чем второй
входной массив
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сортирует массив по значениям используя пользовательскую функцию для сравнения элементов
строка закодированная в utf-8
возвращает данные data переведенные в iso-8859-1
преобразует строку с iso-8859-1 символами кодированную в utf-8 в однобайтную iso-8859-1
iso-8859-1 строка
возвращает utf-8 перевод данных data
кодирует строку iso-8859-1 в кодировке utf-8
старший номер версии
младший номер версии
если задан третий необязательный аргумент operator то версии проверяются на соответствие логическому выражению
по умолчанию функция version_compare() возвращает -1 если первая версия меньше второй; 0 когда они равны; 1 если вторая меньше первой
сравнивает две стандартизованные строки с номером версии
описание параметра format смотрите в документации к функции sprintf()
возвращает длину выведенной строки
записывает отформатированную строку в поток
имя файла для которого будет выполнен подзапрос
результат выполнения подзапроса в случае успеха или false в случае ошибки
выполняет подзапрос apache
описание параметра format смотрите в документации к функции sprintf()
возвращает значения массива в виде строки отформатированные в соответствии с параметром format описанном в документации к функции sprintf()
возвращает отформатированную строку
короткое название службы
необязательное имя машины
возвращает win32_no_error в случае успешного завершения false если была обнаружена проблема с параметрами или код ошибки win32 при неудачном завершении работы
возобновляет работу приостановленной службы
короткое название службы
необязательное имя машины
возвращает win32_no_error в случае успешного завершения false если была обнаружена проблема с параметрами или код ошибки win32 при неудачном завершении работы
останавливает службу
количество символов по которым строка будет перенесена
символ переноса строки можно указать с помощью необязательного параметра break
если параметр cut установлен в true строка всегда будет переноситься на указанной ширине или раньше
входная строка
возвращает строку со вставленными символами переноса на указанной длине
переносит строку по указанному количеству символов
поддерживаемые xattr-флаги xattr_dontfollow не разыменовывать символические ссылки работать с самой ссылкой
имя атрибута
файл атрибут которого нужно прочитать
функция возвращает строку содержащую значение false если атрибут не существует
получение расширенных атрибутов файла
поддерживаемые xattr-флаги xattr_dontfollow не разыменовывать символические ссылки работать с самой ссылкой
файл список атрибутов которого нужно прочитать
функция возвращает массив содержащий имена расширенных атрибутов
просмотр списка расширенных атрибутов файла
поддерживаемые xattr-флаги xattr_dontfollow не разыменовывать символические ссылки работать с самой ссылкой
имя удаляемого атрибута
файл атрибут которого нужно удалить
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаление расширенных атрибутов файла
имя файла атрибут которого нужно установить
значение атрибута
поддерживаемые xattr-флаги xattr_create функция вернёт ошибку если атрибут существует
имя расширенного атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка расширенных атрибутов файла
поддерживаемые xattr-флаги xattr_dontfollow не разыменовывать символические ссылки работать с самой ссылкой
путь к проверяемому файлу
функция возвращает true если файловая система поддерживает расширенные атрибуты false если это не так и null если невозможно определить на пример неверный путь к файлу или нет разрешения на чтение файла
проверка поддержки расширенных атрибутов
код ошибки возвращаемый функцией xml_get_error_code()
возвращает строку с текстовым описанием кода ошибки code или false если описания не найдено
получение строки ошибки xml анализатора
ссылка на парсер xml для получения номера строки
эта функция возвращает false если ссылка параметра parser не ведет к действующему парсеру или же возвращает номер строки согласно текущему положению указателя парсера
получает от xml-парсера номер текущей строки
ссылка на парсер xml для получения кода ошибки
эта функция возвращает false если ссылка параметра parser не ведет к действующему парсеру или же возвращает один из кодов ошибок из списка расположенного в разделе кодов ошибок
получает код ошибки xml-парсера
массив указателей на соответствующие значения в массиве $values
строка xml данных
ссылка на используемый xml анализатор
массив значений xml данных
xml_parse_into_struct() возвращает 0 при неудачном разборе строки и 1 при успешном
разбор xml данных и помещение в массив
если задан и установлен в true data считается последней частью в этом разборе
ссылка на используемый xml анализатор
часть данных для разбора
возвращает 1 при успешном завершении 0 в противном случае
запускает разбор xml документа
если сообщить анализатору пространство имен то параметры тэгов передающиеся в различные обработчики будут состоять из пространства имен и локального имени отделенных заданным в этом аргументе разделителем seperator
необязательный аргумент encoding задает кодировку символов для ввода / вывода в php 4
возвращает ресурс созданного xml анализатора
создание xml анализатора с поддержкой пространств имен
ссылка на очищаемый xml анализатор
эта функция возвращает false если parser ссылается на недопустимый анализатор в остальных случаях она очищает анализатор и возвращает true
освобождение xml анализатора
какую настройку получить
ссылка на xml анализатор настройку которого требуется получить
эта функция возвращает false если parser ссылается на недопустимый анализатор или если option имеет недопустимое значение в этом случает выбрасывается предупреждение e_warning
получение значения настройки xml анализатора
какую настройку требуется установить
новое значение настройки
ссылка на xml анализатор
функция возвращает false если parser ссылается на недопустимый анализатор или если настройка не может быть установлена
установка значения настройки xml анализатора
handler - строка содержащая имя функции которая должна быть определена на момент вызова функции xml_parse() из анализатора parser
второй аргумент data должен содержать данные в виде текстовой строки
ссылка на xml анализатор
первый аргумент parser является ссылкой на xml анализатор вызывающий обработчик
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка обработчика символьных данных
handler - строка содержащая имя функции которая должна быть определена на момент вызова функции xml_parse() из анализатора parser
второй аргумент data должен содержать символьные данные
ссылка на xml анализатор
первый аргумент parser является ссылкой на xml анализатор вызывающий обработчик
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка обработчика по умолчанию
второй аргумент open_entity_names - список разделенных пробелами имен сущностей которые могут участвовать в разборе текущей сущности включая текущую сущность
первый аргумент parser является ссылкой на xml анализатор вызывающий обработчик
пятый аргумент public_id - общедоступный идентификатор в том виде как он представлен в объявлении сущности либо пустая строка если такового нет; пробелы в идентификаторе будут нормализованы в соответствии с требованиями xml спецификации
четвертый аргумент system_id - системный идентификатор в том виде как он представлен в объявлении сущности
ссылка на xml анализатор
это основа для разрешения системного идентификатора system_id внешней сущности
handler - строка содержащая имя функции которая должна быть определена на момент вызова функции xml_parse() из анализатора parser
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка обработчика внешних сущностей
handler - строка содержащая имя функции которая должна быть определена на момент вызова функции xml_parse() из анализатора parser
ссылка на xml анализатор для которого устанавливается обработчик
третий аргумент data содержит pi данные
первый аргумент parser является ссылкой на xml анализатор вызывающий обработчик
второй аргумент target содержит цель применения pi
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка обработчика инструкций препроцессора pi
первый аргумент parser является ссылкой на xml анализатор вызывающий обработчик
имя обозначения этой сущности см
имя сущности которой требуется дать определение
системный идентификатор внешней сущности
ссылка на xml анализатор для которого задается обработчик
это основа для разрешения системного идентификатора system_id внешней сущности
handler - строка содержащая имя функции которая должна быть определена на момент вызова функции xml_parse() из анализатора parser
общедоступный идентификатор внешней сущности
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка обработчика неразобранных объявлений сущностей
значение для установки типа
base64 или datetime
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает тип xml-rpc base64 или datetime для значения строки php
обработчики контента для вывода yaml узлов
параметр data будет кодирован
символ конца строки вывода выбирается из yaml_any_break yaml_cr_break yaml_ln_break yaml_crln_break
путь к файлу
кодировка вывода выбирается из yaml_any_encoding yaml_utf8_encoding yaml_utf16le_encoding yaml_utf16be_encoding
возвращает true в случае успеха
отправляет yaml-представление значения в файл
идентификатор ресурса возвращаемый функцией yaz_connect()
массив настроек
конфигурирует ccl-парсер
целочисленный параметр определяющий максимальное количество байт в отдельной записи возвращаемой сервером в результате поиска
если задается строка то она рассматривается как строка аутентификации z39
имеет логический тип
пароль для аутентификации
имя пользователя для аутентификации
целочисленное параметр определяющий максимальный размер всех записей возвращенных сервером при поиске в байтах
имеет логический тип
строка принимающая форму host[:port][ / database]
прокси для подключения yaz proxy
название группы для аутентификации
cookie для сессии yaz proxy
строка определяющая кодировку используемую в z39
дескриптор соединения в случае успеха false при ошибке
подготавливает соединение с сервером z39
сортировка по убыванию
сортировка без учета регистра символов
сортировка по возрастанию
сортировка с учетом регистра символов
дескриптор соединения возвращаемый yaz_connect()
строка принимающая вид поле1 флаг1 поле2 флаг2 где поле1 устанавливает первый атрибут сортировки поле2 - второй и т
задает критерий сортировки
синтаксис должен быть задан как oid object identifier идентификатор объекта в исходном формате разделенным точками например 1
дескриптор соединения возвращаемый yaz_connect()
задает предпочитаемый синтаксис для извлекаемой записи
устанавливает время ожидания в секундах
имеет логический тип
ассоциативный массив параметров: timeout устанавливает время ожидания в секундах
возвращает true в случае успешного завершения или false в случае возникновения ошибки
ожидает выполнения запросов z39
возвращает id потока выполнения в виде целого числа
возвращает уникальный идентификатор текущего потока выполнения
zip-файл должен быть открыт с помощью функции zip_open()
закрывает дескриптор zip-архива
дескриптор директории ранее открытый функцией zip_entry_open()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает дескриптор директории
дескриптор директории возвращаемый функцией zip_read()
метод сжатия
возвращает метод сжатия дескриптора директории
дескриптор директории возвращаемый функцией zip_read()
реальный размер дескриптора директории
возвращает реальный размер файла для дескриптора директории
дескриптор директории возвращаемый функцией zip_read()
имя дескриптора директории
получает имя дескриптора директории
дескриптор директории возвращаемый функцией zip_read()
число байт которое нужно считать
возвращает считанные данные или пустую строку если достигнут конец файла или false в случае ошибки
читает данные из открытого ранее дескриптора директории
имя файла zip-архива для открытия
возвращает ссылку на ресурс для последующего использования с функциями zip_read() и zip_close() либо возвращает номер ошибки если filename не существует или в случае другой ошибки
открывает zip-архив
zip-файл предварительно открытый с помощью функции zip_open()
возвращает запись каталога для дальнейшего использования с функциями zip_entry_
считывает следующую запись в zip-архиве
распаковывает любые raw / gzip / zlib закодированные данные
запаковывает данные с указанным кодированием
опции для добавления
всегда возвращает true
добавить клиентские опции
имя хоста сервера задач
порт сервера задач
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавить сервер задач для клиента
список серверов разделенных запятыми
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавить список серверов задач для клиента
контекст приложения связываемый с задачей
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
объект gearmantask или false если задача не может быть добавлена
добавить фоновую задачу для работы в параллельном режиме
контекст приложения связываемый с задачей
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
объект gearmantask или false если задача не может быть добавлена
добавить высокоприоритетную задачу для работы в параллельном режиме
контекст приложения связываемый с задачей
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
объект gearmantask или false если задача не может быть добавлена
добавить низкоприоритетную фоновую задачу для работы в параллельном режиме
данные которые будут переданы обратному вызову
дескриптор задания для получения статуса задачи
объект gearmantask
добавить задачу для получения статуса
gearmanclient в случае успеха false в случае неудачи
создать копию объекта gearmanclient
создать экземпляр gearmanclient
та же самая структура данных контекста приведенная в gearmanclient::setcontext()
возвращает контекст приложения
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
дескриптор текущего задания
запускает выполнение задачи в фоновом режиме
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
дескриптор отправленной задачи
запускает на выполнение с высоким приоритетом задачу в фоновом режиме
дескриптор задания для выполняющейся задачи
получить дескриптор выполняющейся задачи
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
строка содержащая результат выполнения задачи
запускает на выполнение задачу с низким приоритетом
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
дескриптор отправленной задачи
запускает на выполнение с низким приоритетом задачу в фоновом режиме
сериализованные данные подлежащие обработке
зарегистрированная функция вызываемая рабочим процессом
уникальный id назначаемый определенной задаче
строка представляющая результат выполнения задания
выполняет одиночное задание и возвращает результат
массив представляющий процентное отношение выполненной работы
получение статуса обработки задания
некоторые произвольные сериализированные данные для получения отклика
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправляет данные всем серверам заданий чтобы проверить отклик [устаревший метод]
допустимый gearman errno
получить значение errno
дескриптор задачи который присваевается сервером gearman
массив содержащий информацию о задании соответствующем заданному описателю
получение статуса выполнения фонового задания
данные которые можно вывести в выходной поток
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправляет данные на все сервера и смотрит какие из них выведут эти данные
допустимый возвращаемый код gearman
получить последний возвращённый код gearman
функция или метод которые должны быть вызваны
установить функцию обратного вызова когда есть пакет данных для задачи устаревший метод
функция которая должна быть вызвана
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установите функцию которая будет вызвана по завершении задачи
произвольные данные контекста
всегда возвращает true
установить данные приложения
всегда возвращает true
установить данные приложения устаревший метод
функция или метод для обратного вызова
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задает callback-функцию для обработки переданных данных
функция для перехвата исключения выброшенного обработчиком заданий
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задание функции обратного вызова для перехвата исключений обработчика заданий
функция обратного вызова
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задание функции обратного вызова для обработки ситуации когда задание выполнить не удалось
функция для обратного вызова
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задание callback-функции собирающей информацию о состоянии обработчика заданий
временной интервал в миллисекундах
всегда возвращает true
установка таймаута для операций ввода / вывода
функция для обратного вызова
возвращает true в случае успешного завершения или false в случае возникновения ошибки
задание callback-функции обслуживающей предупреждения обработчика заданий
таймаут в миллисекундах
получение значения таймаута операций ввода / вывода
создание объекта gearmanjob
сериализованные данные
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка данных устаревший метод
описание исключения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка исключения устаревший метод
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка статуса провала операции устаревший метод
имя функции
получение имени функции
описатель задания
получение описателя объекта работы
сериализованные результаты работы
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка результата и статуса завершения
сериализованные данные
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка данных
описание исключения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка исключения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка статуса провала операции
доля выполненной работы
количество всей работы
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка статуса задания
доля выполненной работы
количество всей работы
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка статуса задания устаревший метод
уникальный идентификатор
получение уникального идентификатора
сообщение предупреждения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отправка предупреждения устаревший метод
сериализованные данные
получение данных для обработки
размер в байтах
получение размера обрабатываемых данных
объект класса gearmantask или false в случае возникновения ошибки
создает задание устаревший метод
размер данных или false если данных предоставлено не было
получение размера возвращаемых данных
true если задание известно false в противном случае
определение известно ли серверу об этом задании
true если задание выполняется false в противном случае
проверяет выполняется ли задание в данный момент
допустимый в gearman код возврата
получение последнего кода возврата
число от 0 до 100 или false если определить значение не удалось
получение знаменателя в дроби отвечающей за процент выполненной работы
число от 0 до 100 или false если значение определить не удалось
получение числителя дроби отвечающей за процент выполненной работы
уникальный идентификатор или false если никакого идентификатора не присвоено
получение уникального идентификатора задания устаревший метод
добавляемые настройки
всегда возвращает true
добавление настроек обработчика
создание объекта gearmanworker
какие-либо сериализованные данные
стандартное для gearman возвращаемое значение
проверка отклика серверов заданий
строка с описанием ошибки
получение последней обнаруженной ошибки
допустимый номер ошибки
получение номера ошибки
имя функции которое необходимо зарегистрировать на сервере
временной интервал в секундах
стандартное возвращаемое значение gearman
регистрация функции на сервере заданий
настройки которые необходимо убрать
всегда возвращает true
удаление настроек обработчика
строковый идентификатор
возвращает true в случае успешного завершения или false в случае возникновения ошибки
назначает обработчику идентификатор чтобы в дальнейшем иметь возможность опросить все доступные обработчики
настройки которые необходимо задать
всегда возвращает true
задание настроек обработчика
временной интервал в миллисекундах
получение значения таймаута ожидания запросов на сокете
стандартное возвращаемое значение gearman
удаление регистрации всех имен функций на серверах заданий
возвращает true в случае успешного завершения или false в случае возникновения ошибки
ожидание запроса от какого-либо сервера задач
возвращает true в случае успешного завершения или false в случае возникновения ошибки
ожидание задания и его немедленное выполнение
количество директорий и файлов в виде целого числа типа integer
определяет количество директорий и файлов
будет ли подгоняться изображение внутри ограничительной рамки
количество строк в масштабе изображения
количество столбцов в масштабе изображения
в случае успешной работы возвращает true
адаптивное изменение размера изображения с данными триангуляции
стандартное отклонение гаусса в пикселях
радиус гаусса в пикселях не считая центрального пикселя
передайте любую корректную для вашего режима канала константу
в случае успешной работы возвращает true
адаптивное изменение резкости изображения
исходный объект imagick
в случае успешной работы возвращает true
добавляет новое изображение к списку изображений объекта imagick
тип шума
передайте любую корректную для вашего режима канала константу
в случае успешной работы возвращает true
накладывает случайный шум на изображение
аффинная матрица
в случае успешной работы возвращает true
преобразование изображения
адрес x сервера
в случае успешной работы возвращает true
анимация одного или нескольких изображений
горизонтальное смещение в пикселях слева от текста
угол под которым выводится текст
строка с текстом
вертикальное смещение в пикселях к базовому тексту
объект imagickdraw с настройками наносимого текста
в случае успешной работы возвращает true
добавляет текстовый комментарий на изображение
пороговое значение ниже которого все пиксели станут черными
в случае успешной работы возвращает true
перевести все пиксели ниже порогового значения в черный цвет
константа channeltype
стандартное отклонение
радиус размытия
в случае успешной работы возвращает true
добавляет фильтр размытия к изображению
объект imagickpixel или строка содержащая цвет рамки
ширина рамки
высота рамки
в случае успешной работы возвращает true
окружает изображение рамкой
стандартное отклонение гаусса в пикселях
радиус гаусса в пикселях не включая центральный пиксель
в случае успешной работы возвращает true
рисование углем
высота обрезаемой области
начало отчета обрезаемой области по оси y
начало отчета обрезаемой области по оси x
ширина обрезаемой области
в случае успешной работы возвращает true
удаляет область изображения и обрезает его
в случае успешной работы возвращает true
очищает все ресурсы связанные с объектом imagick
если установлено true то последующие операции будут применяться к внутреннему контуру
обозначенный контур
в случае успешной работы возвращает true
отсечь вдоль обозначенного контура с профилем 8bim
будет возвращена копия объекта imagick
создает точную копию объекта imagick
путь к изображению для загрузки или массив таких путей
в случае успеха возвращает новый объект imagick
конструктор объекта imagick
ширина обрезания
координата x верхнего левого угла области обрезания
координата y верхнего левого угла области обрезания
высота обрезания
в случае успешной работы возвращает true
извлекает область изображения
возвращает себя в случае успеха
возвращает ссылку на текущий объект imagick
в случае успешной работы возвращает true
удаляет объект imagick
имя x сервера
в случае успешной работы возвращает true
выводит изображение
операции рисования выполняемые к изображению
в случае успешной работы возвращает true
выполняет рендеринг объекта imagickdraw на текущем изображении
в случае успешной работы возвращает true
создает вертикальное зеркало изображения
в случае успешной работы возвращает true
создает горизонтальное зеркало изображения
возвращает целое число которое можно сравнить с константами colorspace
возвращает цветовую палитру
возвращает константу сжатия
возвращает тип сжатия объекта
возвращает число означающее качество сжатия
возвращает качество сжатия объекта
возвращает строку содержащую копирайт imagemagick и magickwand c api
возвращает копирайт api imagemagick в виде строки
возвращает строку содержащую название шрифта или false если шрифт не установлен
возвращает название шрифта
возвращает формат изображения
возвращает формат imagick объекта
возвращает значение гравитации
возвращает значение гравитации притяжения
возвращает ссылку домашней страницы imagemagick
возвращает домашний url библиотеки imagemagick
возвращает новый объект imagick с текущей последовательности изображений
возвращает новый объект imagick
в случае успешной работы возвращает true
возвращает цвет рамки изображения
imagick object containing the reference image
refer to this list of metric type constants
передайте любую корректную для вашего режима канала константу
returns a double describing the channel distortion
gets channel distortions
в случае успешной работы возвращает true
возвращает число уникальных цветов в изображении
в случае успешной работы возвращает true
возвращает составной оператор связанный с изображением
возвращает константу компрессии
возвращает текущий тип компрессии изображения
возвращает целое число описывающее сжатие изображения
возвращает текущее качество сжатия изображения
возвращает строку с именем файла изображения
возвращает имя файла конкретного изображения в последовательности
возвращает строку содержащую формат изображения в случае успеха
возвращает формат конкретного изображения в последовательности
возвращает массив с шириной и высотой изображения
возвращает ширину и высоту в виде ассоциативного массива
возвращает значение гравитации
возвращает значение гравитации притяжения
возвращает высоту изображения в пикселях
возвращает высоту изображения
возвращает целое число содержащее текущий размер изображения
возвращает размер длину изображения в байтах
возвращает возможный тип изображения
возвращает возможный тип изображения
возвращает ширину изображения в пикселях
возвращает ширину изображения
возвращает float содержащее размер точки
возвращает размер точки
возвращает величину глубины объекта imagick в виде строки
возвращает величину глубины
возвращает ассоциативный массив содержащий размер спектра как целое integer quantumrangelong и как строку string quantumrangestring
возвращает величину размера спектра imagick
возвращает дату релиза imagemagick в виде строки
возвращает дату релиза imagemagick
смотрите список констант типов ресурсов
возвращает размер используемой памяти указанного ресурса в мегабайтах
возвращает размер используемой памяти указанного ресурса
смотрите список констант типов ресурсов
возвращает заданный лимит ресурсов в мегабайтах
возвращает заданный лимит ресурсов
возвращает ассоциативный массив с горизонтальным и вертикальным фактором выборки изображения
возвращает горизонтальный и вертикальный фактор выборки
возвращает размер связанный с объектом imagick в виде массива с ключами columns столбцы и rows строки
возвращает размер связанный с объектом imagick
нормализовать значение цвета
массив значений канала
возвращает цвет
возвращает цвет объекта imagickpixel в виде строки
возвращает цвет в виде строки
возвращает hsl-значение в виде массива с ключами hue saturation и luminosity
возвращает нормализованный hsl-цвет объекта imagickpixel
одна из констант цвета imagick т
значение для установки в этом канале в пределах от 0 до 1
в случае успешной работы возвращает true
устанавливает нормализованное значение одного из каналов
бесконечный итератор
конструктор класса infiniteiterator
перемещает итератор на одну позицию вперед или в начало
time zone id
locale to use when formatting or parsing or null to use the value specified in the ini setting intl
time type to use none short medium long full
calendar to use for formatting or parsing
optional pattern to use when formatting or parsing
date type to use none short medium long full
the created intldateformatter or false in case of failure
create a date formatter
может возвращать любой тип
возвращает текущий элемент
при успехе возвращает scalar или же null при неудаче
возвращает ключ текущего элемента
возвращает итератор на первый элемент
экземпляр объекта использующего iterator или traversable
возвращает внешний итератор
обходимый traversable итератор
создает итератор из чего-либо что является обходимым traversable
значение текущего элемента
получает текущее значение
ключ текущего элемента
получает ключ текущего элемента
перемещает итератор к следующему элементу
возвращает итератор к первому элементу
возвращает true если итератор является допустимым; в противном случае - false
проверяет является ли итератор допустимым
возвращает данные которые могут быть сериализованы json_encode() которые являются значением любого типа отличным от типа resource
задает данные которые должны быть сериализованы в json
внутренний объект-итератор переданный конструктору limititerator::__construct()
получение внутреннего объекта-итератора
текущая позиция
возвращает текущую позицию
перемещение к следующей позиции
позиция на которую требуется переместить указатель
возвращает смещение от начальной позиции после перемещения
перемещает итератор на заданную позицию
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет валидность текущего элемента
сохраняемое значение
время хранения объекта по умолчанию равно 0
ключ под которым сохраняется значение
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет элемент с новым ключом
ключ идентифицирующий сервер на котором хранится значение
сохраняемое значение
время хранения объекта по умолчанию равно 0
ключ под которым сохраняется значение
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет новый элемент на заданный сервер
весовой коэффициент для заданного сервера по отношению к общему весу всех серверов в пуле
имя хоста memcache сервера
порт на котором работает сервер memcache
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет сервер в пул
массив с серверами для добавления в пул
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет несколько серверов в пул
ключ идентифицирующий сервер на котором хранится значение
ключ под которым сохраняется значение
строка для добавления в конец существующей записи
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет данные к существующей записи на заданном сервере
уникальное значение связанное с существующей записью
сохраняемое значение
время хранения объекта по умолчанию равно 0
ключ под которым сохраняется значение
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сравнивает и устанавливает значение для записи
ключ удаляемой записи
время к течение которого сервер ожидает удаления записи
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет запись
ключ идентифицирующий сервер на котором хранится значение
ключ удаляемой записи
период времени в течение которого сервер ожидает удаления записи
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет запись с указанного сервера
ключ удаляемой записи
время к течение которого сервер ожидает удаления записи
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет несколько записей
ключ удаляемой записи
ключ идентифицирующий сервер на котором хранится значение
время к течение которого сервер ожидает удаления записи
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет несколько записей с указанного сервера
возвращает следующий результат запроса или false в противном случае
извлекает следующий результат
возвращает результат запроса или false в случае возникновения ошибки
извлекает все полученные записи
ключ получаемой записи
функция обратного вызова для кэшируемого чтения или null
переменная в которую записывается cas токен
возвращает значение хранимое в кеше или false в противном случае
получение записи
возвращает список ключей хранящихся на всех серверах в случае успеха или false в случае возникновения ошибки
получает все ключи хранящиеся на серверах
ключ идентифицирующий сервер на котором хранится значение
переменная в которую записывается cas токен
callback-функция для кэшируемого чтения или null
ключ получаемой записи
возвращает значение хранимое в кеше или false в противном случае
получает запись с определенного сервера
callback-функция возвращающая результат или null
массив с ключами для запроса записей
запрашивать ли cas токены записей вместе со значениями
возвращает true в случае успешного завершения или false в случае возникновения ошибки
запрашивает несколько записей
ключ идентифицирующий сервер на котором хранится значение
callback-функция возвращающая результат или null
массив с ключами для запроса записей
запрашивать ли cas токены записей вместе со значениями
возвращает true в случае успешного завершения или false в случае возникновения ошибки
запрашивает несколько записей с указанного сервера
ключ идентифицирующий сервер на котором хранится значение
флаги для операции получения записей
переменная в которую будут записаны cas токены найденных записей
массив с ключами для получения записей
возвращает массив найденных записей или false в случае возникновения ошибки
получает несколько записей с указанного сервера
одна из memcached::opt_* констант
возвращает значение запрашиваемого параметра или false в случае ошибки
получает значение memcached параметра
сообщение описывающее результат выполнения последней memcached операции
возвращает сообщение описывающее результат выполнения последней операции
ключ идентифицирующий сервер на котором хранится значение
возвращает массив содержащий следующие ключи: host port и weight в случае успеха или false в случае неудачи
получает информацию о сервере по ключу
список серверов в пуле
получает список серверов в пуле
список массивов со статистикой по каждому серверу где каждый элемент- отдельный сервер
получает статистику о серверах в пуле
список массивов с информацией о версии по каждому серверу где каждый элемент- отдельный сервер
получает информацию о версии серверов в пуле
инициирующее значение которое будет установлено записи если переданного ключа не существует
ключ увеличиваемой записи
время когда срок действия записи истекает
величина на которую происходит увеличение значения записи
возвращает новое значение записи в случае успеха или false в случае возникновения ошибки
увеличивает числовое значение записи
инициирующее значение которое будет установлено записи если переданного ключа не существует
ключ идентифицирующий сервер на котором хранится значение
ключ увеличиваемой записи
время когда срок действия записи истекает
величина на которую происходит увеличение значения записи
возвращает новое значение записи в случае успеха или false в случае возникновения ошибки
увеличивает числовое значение записи хранимой на указанном сервере
возвращает true если экземпляр класса уже создан и false в противном случае
проверяет создан ли уже экземпляр класса memcached
ключ записи к которой происходит добавление в начало
добавляемая строка
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет данные в начало существующей записи
ключ идентифицирующий сервер на котором хранится значение
добавляемая строка
ключ записи к которой происходит добавление в начало
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет данные в начало существующей записи на указанном сервере
ключ идентифицирующий сервер на котором хранится значение
сохраняемое значение
время хранения объекта по умолчанию равно 0
ключ под которым сохраняется значение
возвращает true в случае успешного завершения или false в случае возникновения ошибки
заменяет существующую запись с заданным ключом на указанном сервере
сохраняемое значение
время хранения объекта по умолчанию равно 0
ключ под которым сохраняется значение
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сохраняет запись
ключ идентифицирующий сервер на котором хранится значение
сохраняемое значение
время хранения объекта по умолчанию равно 0
ключ под которым сохраняется значение
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сохраняет запись на указанном сервере
сохраняемый массив пар ключей / значений
время хранения объекта по умолчанию равно 0
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сохраняет несколько записей
ключ идентифицирующий сервер на котором хранится значение
сохраняемый массив пар ключей / значений
время хранения объекта по умолчанию равно 0
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сохраняет несколько записей на указанном сервере
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает значение параметра для memcached
ассоциативный массив с параметрами где в качестве ключа выступает название параметра а в качестве значения- новое значение данного параметра
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает несколько memcached параметров
время хранения объекта по умолчанию равно 0
ключ под которым сохраняется значение
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает новый срок хранения для записи
получает число присоединенных итераторов
отсоединяемый итератор
отсоединяет итератор
массив array всех зарегистрированных итераторов или false если нет присоединенных подытераторов
получает зарегистрированные итераторы
перемещает все присоединенные итераторы к своим следующим элементам
проверяет корректность подытераторов
псевдоним mysqli_driver- > report_mode
текущее значение
получает текущее значение
текущий ключ
получает текущий ключ
перемещает итератор к следующему элементу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет итератор
экземпляр oci-collection
возвращает true в случае успешного завершения или false в случае возникновения ошибки
присваивает коллекции значение другой уже существующей коллекции
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освобождает ресурсы занимаемые объектом коллекции
индекс элемента
djpdhfoftn false если такого элемента нет; null если элемент равен null ; строку если элемент относится к строковому столбцу и число если элемент является числовым полем
возвращает значение элемента
возвращает максимальное количество как целое число или false в случае ошибки
возвращает максимальное количество элементов в коллекции
количество элементов для отсечения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отсекает элементы с конца коллекции
копируемый lob
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет данные из объекта lob в конец другого объекта
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает дескриптор объекта lob
возвращает true если внутренний указатель объекта находится на конце lob
проверяет находится ли указатель lob на конце объекта
начальная позиция экспорта
длина экспортируемой части lob
путь к файлу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сохраняет содержимое объекта lob в файл
по умолчанию ресурсы не освобождаются но используя флаг oci_lob_buffer_free вы можете сделать это принудительно
возвращает true в случае успешного завершения или false в случае возникновения ошибки
очищает и записывает буфер объекта lob на сервер
возвращает true в случае успешного завершения или false в случае возникновения ошибки
освобождает ресурсы связанные с дескриптором lob
возвращает false если буферизация отключена и true если включена
возвращает текущее состояние буферизации большого объекта lob
путь к файлу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
записывает содержимое файла в объект lob
длина считываемых данных в байтах
возвращает содержимое в виде строки или false в случае возникновения ошибки
возвращает часть объекта lob
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переводит указатель объекта в начало большого объекта
может использоваться для указания смещения от начала lob
данные для сохранения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сохраняет данные в lob
указывает количество байтов на которые следует переместиться от позиции определяемой параметром whence :
may be one of: oci_seek_set - установить позицию равную offset oci_seek_cur - прибавить к текущей позиции offset байт oci_seek_end - прибавить к концу файла offset байт чтобы переместить указатель в начало - укажите отрицательный offset
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает позицию внутреннего указателя lob
возвращает длину объекта lob или false в случае возникновения ошибки
возвращает размер объекта lob
если указан то lob обрезается до указанной в length длины в байтах
возвращает true в случае успешного завершения или false в случае возникновения ошибки
обрезает большой объект
если указан этот параметр то запись остановится после того как length байт будет записано или закончатся данные из параметра data
записываемые в lob данные
возвращает количество записанных байт или false в случае возникновения ошибки
записывает данные в объект lob
данные для записи
один из следующих вариантов: oci_temp_blob для создания временных blobов oci_temp_clob для создания временных clobов
возвращает true в случае успешного завершения или false в случае возникновения ошибки
записывает временный большой объект lob
внутренний итератор для текущего элемента
возвращает внутренний итератор для текущего элемента
объект-итератор на основе которого создается новый объект
объект parentiterator
конструктор класса parentiterator
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет имеет ли внутренний объект-итератор дочерние объекты
перемещает указатель на одну позицию вперед
возвращает true в случае успешного завершения или false в случае возникновения ошибки
инициализация транзакции
возвращает true в случае успешного завершения или false в случае возникновения ошибки
фиксирует транзакцию
sql выражение которое необходимо подготовить и запустить
pdo::exec() возвращает количество строк которые были модифицированы или удалены в ходе его выполнения
запускает sql запрос на выполнение и возвращает количество строк задействованных в ходе его выполнения
одни из pdo::attr_* констант
успешный вызов возвращает значение запрашиваемого атрибута pdo
получить атрибут соединения с базой данных
функция pdo::getavailabledrivers() возвращает массив имен драйверов pdo
возвращает массив доступных драйверов pdo
имя объекта последовательности который должен выдать id
если объект последовательности для name не задан pdo::lastinsertid() вернет строку представляющую id последней добавленной в базу записи
возвращает id последней вставленной строки или последовательное значение
экранируемая строка
представляет подсказку о типе данных первого параметра для драйверов которые имеют альтернативные способы экранирования
возвращает экранированную строку которую теоретически безопасно использовать в теле sql запроса
заключает строку в кавычки для использования в запросе
возвращает true в случае успешного завершения или false в случае возникновения ошибки
откат транзакции
явно заданный тип данных параметра
идентификатор параметра запроса
значение которое требуется привязать к параметру
возвращает true в случае успешного завершения или false в случае возникновения ошибки
связывает параметр с заданным значением
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает курсор переводя запрос в состояние готовности к повторному запуску
возвращает количество столбцов в результирующем наборе запроса pdostatement
возвращает количество столбцов в результирующем наборе
вывод информации о подготовленной sql команде в целях отладки
массив значений содержащий столько элементов сколько параметров заявлено в sql запросе
возвращает true в случае успешного завершения или false в случае возникновения ошибки
запускает подготовленный запрос на выполнение
номер столбца данные которого необходимо извлечь
pdostatement::fetchcolumn() возвращает значение одного столбца следующей строки результирующего набора
возвращает данные одного столбца следующей строки результирующего набора
элементы этого массива будут переданы в конструктор класса
имя класса создаваемого объекта
возвращает новый объект указанного класса имена свойств которого соответствуют именам столбцов результирующего набора или false в случае возникновения ошибки
извлекает следующую строку и возвращает ее в виде объекта
возвращает значение атрибута
получение значения атрибута запроса pdostatement
возвращает true в случае успешного завершения или false в случае возникновения ошибки
присваивает атрибут объекту pdostatement
in - ресурс указывающий на bucket brigade которая содержит один или несколько объектов bucket содержащих фильтруемые данные
если поток закрывается следовательно это последний фильтр в цепочке аргумент closing примет значение true
out - ресурс указывающий на другой объект bucket brigade в который будут помещаться модифицированные бакеты
consumed который должен всегда передаваться по ссылке должен увеличиваться на размер данных которые фильтр читает и изменяет
метод filter() должен возвращать одно из трех значений
вызывается как только применяется фильтр
возвращает атрибуты или false в случае ошибки
возвращает атрибуты элемента архива
возвращает crc элемента архива или false в случае ошибки
возвращает crc элемента архива
возвращает номер метода или false в случае ошибки
возвращает метод компрессии элемента
возвращает имя элемента в виде строки или false в случае ошибки
возвращает имя элемента
возвращает размер сжатого элемента или false в случае ошибки
возвращает размер сжатого элемента
возвращает размер распакованного элемента или false в случае ошибки
возвращает размер элемента в распакованном состоянии
возвращает версию или false в случае ошибки
возвращает минимальную версию программы rar необходимую для распаковки элемента
итератор для текущего элемента если этот элемент является массивом array или объектом object
возвращает итератор для текущего элемента если этот элемент является массивом array или объектом object
возвращает true если текущий элемент является массивом array или объектом object false в противном случае
определяет является ли текущий элемент массивом или объектом
флаги
используемый итератор
recursivecachingiterator
конструктор
возвращает объект recursivecallbackfilteriterator содержащий дочерние элементы внутреннего итератора
возвращает дочерние элементы итератора хранящегося внутри recursivecallbackfilteriterator
объект-итератор recursiveiterator элементы которого требуется отфильтровать
создает объект recursivefilteriterator на основе объекта-итератора recursiveiterator
возвращает recursivefilteriterator содержащий дочерние элементы текущего элемента внутреннего итератора
возвращает дочерние элементы внутреннего итератора в виде объекта recursivefilteriterator
true если у текущего элемента внутреннего итератора есть дочерние элементы false в противно случае
проверяет есть ли у текущего элемента внутреннего итератора дочерние элементы
возвращает true если по текущему элементу можно осуществить навигацию false в противном случае
определяет можно ли для текущего элемента создать итератор
переход к первому дочернему элементу
начало навигации
объект класса recursiveiterator()
получение дочерних элементов
необязательный настроечный флаг
объект-итератор на основе которого требуется построить данный экземпляр
необязательный параметр
конструктор класса recursiveiteratoriterator
окончание навигации
максимальная глубина рекурсии или false если глубина не ограничена
получение максимальной глубины рекурсии
следующий элемент
максимально допустимая глубина вложенности
установка максимальной глубины вложенности
итератор для текущего элемента если возможна навигация по содержимому внутреннего итератора
возвращает итератор для текущего элемента
начало навигации по потомкам элемента
объект recursiveiterator
начало навигации
true если у текущего элемента есть дочерние false в противном случае
проверка есть ли у текущего элемента потомки
возвращает текущий элемент с префиксом и суфиксом
получение текущего элемента
завершение навигации
возвращает поддерево корнем которого является текущий элемент
получение поддерева корнем которого является текущий элемент
получение суффикса
возвращает строку для помещения перед текущим элементом
получение префикса
возвращает ключ текущего элемента с префиксом и суффиксом
получение ключа текущего элемента
переход к следующему элементу
перевод итератора в начало
числовые значения модификаторов имена которых требуется получить
массив имен модификаторов
получение имен модификаторов
в качестве аргумента может принимать строку string содержащую имя исследуемого класса либо объект object
создаёт объект класса reflectionclass
имя константы
значение константы
возвращает определенную константу
массив array констант
возвращает константы
объект reflectionmethod отражающий конструктор класса или null если у класса нет конструктора
возвращает конструктор класса
ассоциативный массив array свойств по умолчанию ключами которого являются имена свойств а значениями -- соответствующие значения по умолчанию или же null если этому свойству не было задано значение по умолчанию
возвращает свойства по умолчанию
номер последней строки определения пользовательского класса или false если номер неизвестен
возвращает номер последней строки
экземпляр класса reflectionextension представляющий расширение определенное в классе или null для пользовательских классов
возвращает объект класса reflectionextension для расширения определенного в классе
ассоциативный массив array интерфейсов в котором ключами являются имена интерфейсов а значениями -- объекты reflectionclass
возвращает интерфейсы
фильтрация результата для включения в список только методов с определенными атрибутами
массив array объектов класса reflectionmethod отражающих каждый метод
возвращает список методов в виде массива
возвращает битовую маску из констант модификаторов
возвращает информацию о модификаторах класса
название пространства имён
возвращает название пространства имён
опциональный фильтр позволяющий возвращать только желаемые типы свойств
массив объектов класса reflectionproperty
возвращает свойства
имя свойства
объект класса reflectionproperty
возвращает экземпляр reflectionproperty для свойства класса
номер начальной строки в виде целого числа integer
возвращает номер начальной строки
значение по умолчанию возвращаемое в случае если в классе не определено статическое свойство с заданным именем name
имя статического свойства значение которого необходимо получить
значение статического свойства
возвращает значение static свойства
имя проверяемой константы
true если константа задана в противном случае false
проверяет задана ли константа
имя проверяемого метода
true если метод задан в противном случае false
проверяет задан ли метод
имя интерфейса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет реализуется ли интерфейс
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет определён ли класс в пространстве имён
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет является ли класс абстрактным
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет является ли класс окончательным final
проверяемый объект
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет принадлежит ли объект классу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет можно ли создать экземпляр класса
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет является ли класс встроенным в расширение или в ядро
имя класса по которому будет вестись проверка
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет является ли класс подклассом
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверяет является ли класс пользовательским
массив array аргументов который затем передаётся в конструктор класса
возвращает новый экземпляр класса
создаёт экземпляр класса с переданными параметрами
создаёт новый экземпляр класса без вызова конструктора
строковое представление экземпляра класса reflectionclass
возвращает строковое представление объекта класса reflectionclass
имя модуля
объект object класса reflectionextension
создаёт объект класса reflectionextension
экспортируемый объект reflection
установка в true вернет экспортируемое значение в отличие от поведения где этот параметр опущен
если параметр return установлен в true тогда экспортируемый объект будет возвращен как string иначе будет возвращен null
экспортирует модуль
массив объектов класса reflectionclass по одному на каждый класс модуля
возвращает классы
ассоциативный массив array ключами которого являются зависимости а значениями следующие записи: required optional или conflicts
получение зависимостей
ассоциативный массив объектов reflectionfunction в котором ключами являются названия определенных в расширении функций
получение функций расширения
ассоциативный массив array в котором ключи - имена ini-настроек а значения - соответствующие значения настроек
получение ini-настроек расширения
имя расширения
получение имени расширения
версия расширения
получение версии расширения
возвращает экспортированное расширение в виде строки тем же образом что и reflectionextension::export()
преобразование в строку
имя reflection-функции или замыкания
конструктор класса reflectionfunction
экспортируемый объект reflection
установка в true вернет экспортируемое значение в отличие от поведения где этот параметр опущен
если параметр return установлен в true тогда экспортируемый объект будет возвращен как string иначе будет возвращен null
экспорт функции
передаваемые функции аргументы
возвращает результат выполнения вызванной функции
вызывает функцию
передаваемые функции аргументы в виде массива
возвращает результат выполнения вызванной функции
вызов функции с передачей аргументов
true если функция отключена false противном случае
проверяет что функция отключена
результат выполнения схож с выводом reflectionfunction::export()
представление в виде строки
копирующий конструктор
комментарий если он есть false в противном случае
получает документируемый комментарий
номер последней строки описания определенной пользователем функции либо false если он неизвестен
получает номер строки завершения описания функции
информация о расширении в виде объекта reflectionextension
получает информацию о расширении
имя файла
получает имя файла
имя пространства имен
получение имени пространства имен
число аргументов
получает количество аргументов
аргументы представленные объектами reflectionparameter
получает аргументы
короткое имя функции
получает короткое имя функции
true если функция определена в пространстве имен false в противном случае
проверяет находится ли функция в пространстве имен
возвращает true если функция является замыканием closure false в противном случае
проверяет является ли функция замыканием closure
true если функция устарела false в противном случае
проверяет является ли функция устаревшей
true если функция внутренняя false в противном случае
проверяет является ли функция внутренней
true если функция определена пользователем false; в противном случае
проверяет является ли функция определенной пользователем
имена класса и метода разделенные ::
имя класса или объекта экземпляра класса содержащего метод
имя метода
конструктор класса reflectionmethod
имя класса
установка в true вернет экспортируемое значение в отличие от поведения где этот параметр опущен
имя метода
если параметр return установлен в true тогда экспортируемый объект будет возвращен как string иначе будет возвращен null
экспорт отраженного метода
объект метод которого требуется вызвать
ноль или более аргументов передаваемых методу
возвращает результат выполнения метода
вызов
объект метод которого вызывается
массив array содержащий аргументы функции
возвращает результат выполнения метода
вызов метода с передачей аргументов массивом
true если метод абстрактный false в противном случае
проверяет является ли метод абстрактным
true если метод является конструктором false в противном случае
проверяет является ли метод конструктором
true если метод является деструктором false в противном случае
проверяет является ли метод деструктором
true если создать наследника метода нельзя false в противном случае
проверяет может ли метод иметь наследников final
true если метод защищенный protected false в противном случае
проверяет является ли метод защищенным protected
true если метод общедоступный public false в противном случае
проверяет является ли метод общедоступным public
true если метод статический false в противном случае
проверяет является ли метод статическим
true чтобы сделать метод доступным или false
делает метод доступным
строковое представление объекта reflectionmethod
возвращает строковое представление объекта reflection method
экспортируемый объект reflection
установка в true вернет экспортируемое значение в отличие от поведения где этот параметр опущен
если параметр return установлен в true тогда экспортируемый объект будет возвращен как string иначе будет возвращен null
экспорт
копирующий конструктор
аргумент
функция аргумент которой требуется отобразить
конструктор класса
объект класса reflectionclass
получение класса из контроля типа
объект класса reflectionclass
получение объявляющего класса
объект класса reflectionfunction
получение объявляющей функции
значение по умолчанию аргумента
получение значения по умолчанию аргумента
имя отображенного аргумента
получение имени аргумента
позиция аргумента слева направо первый аргумент стоит на позиции #0
получение позиции аргумента
true если в качестве значения ожидается массив array false в противном случае
проверяет ожидает ли аргумент массив в качестве значения
true если доступно значение по умолчанию false в противном случае
проверяет доступно ли значение по умолчанию аргумента
true если аргумент передан по ссылке false в противном случае
проверяет что аргумент передан по ссылке
преобразование в строку
копирующий конструктор
объект класса reflectionclass
получение объявляющего класса
комментарий
получение документируемого комментария
числовое представление модификаторов
получение модификаторов
имя отображенного свойства
получение имени свойства
если свойство не статическое необходимо передать объект из которого требуется это свойство получить
текущее значение свойства
получение значения
true если свойство объявлено во время компиляции либо false если оно было создано во время выполнения
проверяет является ли значение свойством по умолчанию
true если свойство частное false в противном случае
проверяет является ли свойство частным private
true если свойство общедоступное false в противном случае
проверяет является ли свойство общедоступным public
true делает свойство доступным false - закрывает доступ к свойству
задание доступности свойства
если свойство нестатическое необходимо передать объект свойство в котором нужно изменить
новое значение
задание значения свойству
преобразование в строку
представление в виде строки
true если значение элемента соответствует регулярному выражению false в противном случае
проверка соответствия регулярному выражению
возвращает режим работы
возвращает режим работы
режим работы
установка режима работы
флаги настройки регулярного выражения
задание флагов регулярного выражения
возвращает строковое представление объекта или null
представляет объект в виде строки
строковое представление объекта
создает объект
возвращаемое значение сессионного хранилища обычно true в случае успеха false в случае ошибки
закрывает сессию
идентификатор сессии уничтожается
возвращаемое значение сессионного хранилища обычно true в случае успеха false в случае ошибки
уничтожает сессию
сессии которые не обновлялись в течении maxlifetime секунд будут удалены
возвращаемое значение сессионного хранилища обычно true в случае успеха false в случае ошибки
очищает старые сессии
идентификатор сессии
закодированные данные сессии
возвращаемое значение сессионного хранилища обычно true в случае успеха false в случае ошибки
записать данные сессии
необязательный параметр указывает на пространство имен к которому принадлежит атрибут
название добавляемого атрибута
значение атрибута
добавляет атрибут к simplexml-элементу
если указано то значение содержимое дочернего элемента
имя добавляемого дочернего элемента
если указано то пространство имен к которому принадлежит дочерний элемент
метод addchild возвращает объект simplexmlelement представляющий добавленного потомка к узлу xml
добавляет дочерний элемент к узлу xml
не обязательное пространство имен для извлеченных атрибутов
по умолчанию false
возвращает итеративный объект simplexmlelement по которому можно перемещаться для перебора всех атрибутов тега
возвращает атрибуты элемента
если is_prefix установлен в true ns будет рассмотрен как префикс
не обязательное пространство имен xml
возвращает simplexmlelement элемент даже если узел не имеет дочерних элементов
поиск дочерних элементов данного узла
возвращает число элементов у текущего элемента
считает количество дочерних элементов у текущего элемента
позволяет рекурсивно проверить пространства имен у дочернего узла вместо корневого узла xml документа
если указано то возвращает все объявленные пространства имен у родительского узла и его дочерних элементов
метод getdocnamespaces возвращает массив array с названиями пространств имен и связанными с ними uri
возвращает объявленное пространство имен в документе
метод getname возвращает имя тега xml в виде строки string на который ссылается simplexmlelement объект
получение имени xml элемента
если указано то возвращает все используемые пространства имен у родительского узла и его дочерних элементов
метод getnamespaces возвращает массив array с названиями пространств имен и связанными с ними uri
получение пространств имен используемых в документе
путь xpath
возвращает массив array объектов simplexmlelement или false в случае ошибки
запускает xpath запрос к xml данным
возвращает объект simplexmliterator содержащий вложенные элементы текущего элемента
возвращает вложенные элементы текущего элемента
возвращает имя xml-тега элемента на который ссылается текущий объект simplexmliterator или false
возвращает текущий ключ
возвращает итератор к первому элементу
возвращает true если текущий элемент допустим; в противном случае false
проверяет является ли текущий элемент допустимым
массив array прототипов soap функций c описанием типа возвращаемого значения имени функции и параметров с типами
возвращает список доступных soap функций
последний soap-запрос в виде строки с xml
возвращает последний soap-запрос
последний soap-ответ в виде строки с xml
возвращает последний soap-ответ
массив array soap-типов с подробным описанием всех структур и типов
возвращает список soap-типов
значение cookie
имя cookie
устанавливает cookie
устанавливаемые заголовки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает soap-заголовки для последующих вызовов
uri файла wsdl или null если работа происходит в режиме не-wsdl
массив настроек
конструктор soapclient
soapheader constructor
soapserver constructor
необязательные параметры которые будут переданы в конструктор класса в процессе создания объекта
имя передаваемого класса
устанавливает класс который будет обрабатывать soap-запросы
soapvar constructor
возвращает массив содержащий внутреннюю информацию о том где была вызвана ошибка
возвращает внутреннюю информацию о том где было вызвано исключение
возвращает массив содержащий внутреннюю информацию о том где была вызвана ошибка
возвращает внутреннюю информацию о том где было вызвано исключение
название индекса или названия
строка запроса
возвращает индекс массива результатов который будет возвращен с помощью sphinxclient::runqueries или false в случае ошибки
добавление запроса к очереди запросов
ключевые слова которые необходимо подсветить
массив строк с содержимым документов
ассоциативный массив с дополнительными параметрами подсветки см
название индекса
при успехе возвращает массив фрагментов
построение текстовых фрагментов
бинарный флаг включающий / выключающий генерацию статистики ключевых слов
запрос для извлечения ключевых слов
индекс для получения настроек tokenizer лексера и частотной статистики ключевых слов
возвращает массив ассоциативных массивов с информацией по каждому ключевому слову
извлечение ключевых слов из запроса
создание нового объекта sphinxclient
строка для экранирования
возвращает экранированную строку
экранирование спецсимволов
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создание постоянного подключения к серверу
обнуление всех фильтров
возвращает false в случае неудачи или массив с набором результатов в случае успеха
выполнение набора поисковых запросов
ассоциативный массив названий полей и их весовых коэффициентов
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка весовых коэффициентов полей
если true то попадающие под фильтр документы исключаются из списка результатов
обычный массив значений типа integer
название атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавление фильтра по типу поля integer
если установлено в true то попадающие под фильтр документы будут исключены из списка результатов
максимальное значение
минимальное значение
название атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавление фильтра по диапазону значений для поля типа float
долгота якоря в радианах
широта якоря в радианах
название атрибута хранящего долготу
название атрибута хранящего широту
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка опорной точки для расчета географической удаленности
строка содержащая атрибут по которому происходит группировка
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка названия атрибута для расчета количества уникальных значений при группировке
максимальное значение id
минимальное значение id
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка диапазона значений допустимых id документов
ассоциативный массив связывающий названия индексов string с их весами integer
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка весовых коэффициентов индексов
количество необходимых к получению результатов
смещение набора результатов
используется для повышенного контроля за производительностью
контролирует количество совпадений которые searchd будет хранить в оперативной памяти в процессе поиска
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка смещения и предельного числа значений для набора результатов
режим совпадения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка режима совпадения при полнотекстовом поиске
режим ранжирования
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка режима ранжирования
задержка между попытками в миллисекундах
количество повторных попыток
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка количества повторных попыток и задержки между ними
условия схожие с языком sql
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка условия выборки
режим сортировки
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установка режима сортировки результатов
возвращает ассоциативный массив статистики поискового сервера
запрос статуса searchd
ассоциативный массив содержащий id документов в качестве ключей и массив значений атрибутов в качестве значений
название индекса или индексов для обновления
массив названий атрибутов которые будут обновлены
возвращает количество измененных документов 0 или более в случае успеха или false в случае неудачи
обновление атрибутов документа
индекс текущего узла
возвращает индекс текущего узла
перемещает итератор к следующему элементу
индекс
новое значение для индекса index
устанавливает значение по заданному индексу $index в $newval
перемещает итератор к предыдущему элементу
значения для добавления
помещает элемент в конец двусвязного списка
возвращает итератор в начало
сериализованная строка
сериализует хранилище
сериализованная строка
десериализует хранилище
возвращает true если двусвязный список содержит узлы false в противном случае
проверяет содержит ли узлы двусвязный список
путь к файлу
создает новый объект splfileinfo
возвращает время последнего доступа к файлу
получает время последнего обращения к файлу
имя файла
получает имя файла
id группы в числовом формате
получает группу файла
возвращает целевой путь по ссылке файловой системы
получение пути по ссылке
возвращает время последнего изменения файла в формате unix timestamp
получает время последнего изменения
имя используемого объекта splfileinfo путь которого требуется получить
возвращает объект класса splfileinfo представляющий путь к родительской директории файла
получение объекта splfileinfo для заданного пути
путь к файлу
определение пути к файлу
возвращает список разрешений для файла
получает список разрешений для файла
возвращает путь к файлу
определяет абсолютный путь к файлу
размер файла в байтах
получает размер файла
строка string представляющая тип элемента
получает тип файла
возвращает true если каталог; в противном случае - false
сообщает является ли файл каталогом
возвращает true если файл является исполняемым; иначе - false
сообщает является ли файл исполняемым
возвращает true если файл существует и является обычным файлом не ссылкой иначе - false
сообщает ссылается ли объект на обычный файл
возвращает true если файл является ссылкой; в противном случае - false
сообщает является ли файл ссылкой
возвращает true если файл доступен для чтения; в противном случае - false
сообщает является ли файл доступным для чтения
если установлено в true имя файла также ищется в include_path
для описания контекстов обратитесь к следующему разделу руководства: контекст
режим открытия файла
открытый файл как splfileobject object
получает объект splfileobject для файла
имя класса для метода splfileinfo::openfile()
задает имя класса который будет использоваться методом splfileinfo::openfile
имя класса используемого при вызове splfileinfo::getfileinfo() и splfileinfo::getpathinfo()
задает имя класса объекты которого будут создаваться методами splfileinfo::getfileinfo и splfileinfo::getpathinfo
файл который требуется прочитать
требуется ли просматривать include_path во время поиска файла filename
допустимый ресурс контекста созданный функцией stream_context_create()
режим работы с файлом
конструктор класса splfileobject
возвращает true если конец файла был достигнут; false - в противном случае
проверяет достигнут ли конец файла
возвращает true в случае успешного завершения или false в случае возникновения ошибки
сбрасывает буфер вывода в файл
разделитель полей один символ
символ обрамления полей один символ
экранирующий символ один символ
возвращает массив содержащий данные прочитанной строки или false в случае ошибки
получение строки файла и ее разбор в соответствии с csv разметкой
возвращает строку содержащую следующую строку из файла или false в случае ошибки
читает строку из файла
необязательный параметр
возвращает строку из файла очищенную от html и php кода либо false в случае ошибки
получение строки из файла с очисткой от html тэгов
возвращает количество символов которые были прочитаны из файла с описателем handle и переданы на вывод
выводит все оставшееся содержимое файла в выходной поток
необязательный параметр delimiter устанавливает разделитель для полей допускается только один символ
необязательный параметр enclosure устанавливает экранирующий символ для полей enclosure допускается только один символ
массив значений
возвращает длину записанной строки или false в случае возникновения ошибки
записывает массив с полями в виде строки csv
строка которая будет записана в файл
если задан аргумент length запись остановится после того как length байт будут записаны или будет достигнут конец строки string в зависимости от того что случится раньше
возвращает количество записанных байт или null в случае ошибки
запись в файл
метод-заглушка
возвращает число типа integer представляющее набор флагов
получает флаги настройки объекта splfileobject
возвращает максимальную длину строки если она была установлена с помощью splfileobject::setmaxlinelen() по умолчанию 0
получает максимальную длину строки
возвращает false
класс splfileobject не имеет наследников
возвращает номер текущей строки файла
получение номера строки
перевод файлового указателя в начало файла
номер строки начиная с 0 на которую требуется перейти
перевод файлового указателя на заданную строку
битовая маска флагов для установки
устанавливает флаги для splfileobject
возвращает true если eof не достигнут false - в противном случае
проверяет достигнут ли конец файла eof
возвращает размер массива
возвращает размер массива
текущий элемент массива
возвращает текущий элемент массива
по возможности сохранить численные индексы заданные в оригинальном массиве
массив который следует импортировать
возвращает объект класса splfixedarray содержащий данные из импортированного массива
импортирует php-массив в объект класса splfixedarray
индекс который необходимо проверить
true если требуемый index существует иначе false
возвращает факт наличия указанного индекса массива
индекс по которому устанавливается значение
новое значение для индекса index
устанавливает новое значение по заданному индексу
индекс по которому удаляется значение
удаляет значение по индексу $index
выставляет итератор массива в начало
новое значение размера массива
изменяет размер массива
значение первого сравниваемого узла
значение второго сравниваемого узла
метод должен возвращать положительное значение когда value1 больше value2 0 если они равны и отрицательное в остальных случаях
сравнивает элементы чтобы во время сортировки корректно разместить их в куче
текущее значение узла
возвращает текущий узел на который указывает итератор
значение которое требуется вставить
вставляет элемент в кучу и пересортирует ее
индекс текущего узла
возвращает индекс текущего узла
переход к следующему узлу
перевод итератора на начало
значение первого сравниваемого узла
значение второго сравниваемого узла
метод возвращает положительное значение когда value1 больше value2 0 если они равны и отрицательное в остальных случаях
сравнивает элементы чтобы во время сортировки корректно разместить их в куче
значение первого сравниваемого узла
значение второго сравниваемого узла
метод возвращает положительное значение когда value1 больше value2 0 если они равны и отрицательное в остальных случаях
сравнивает элементы чтобы во время сортировки корректно разместить их в куче
контейнер объектов из которого требуется импортировать данные
добавляет все объекты из другого контейнера
добавляемый объект object
данные с которыми требуется ассоциировать объект object
добавляет объект в контейнер
искомый объект object
возвращает true если object находится в контейнере и false в противном случае
проверяет содержит ли контейнер заданный объект
количество объектов в контейнере
возвращает количество объектов в контейнере
объект object на который указывает итератор контейнера
возвращает текущий объект
данные ассоциированные с объектом
возвращает данные ассоциированные с текущим объектом
индекс текущего положения итератора
возвращает индекс текущего положения итератора
удаляемый объект object
удаляет объект из контейнера
контейнер содержащий элементы которые требуется удалить
удаляет из текущего контейнера объекты которые есть в другом контейнере
контейнер содержащий элементы которые должны остаться в текущем контейнере
удаляет из текущего контейнера все объекты которых нет в другом контейнере
переводит итератор на первый элемент контейнера
строковое представление контейнера
сериализует контейнер
сериализованное представление контейнера
восстанавливает сериализованый контейнер из строки
возвращает true если текущий объект допустим и false в противном случае
определяет допустимо ли текущее значение итератора
приоритет значения
добавляемое значение
добавляет элемент в очередь и пересортирует ее
переход к следующему узлу
переводит итератор на начало очереди
значение удаленного из очереди элемента
удаляет элемент из очереди
значение для постановки в очередь
добавляет элемент в очередь
объект класса splobserver для присоединения
присоединяет наблюдателя объект класса splobserver
объект класса splobserver для отсоединения
отсоединяет наблюдателя
посылает уведомление наблюдателю
sql-запрос на подготовку
возвращает объект sqlite3stmt в случае успешного завершения или false в случае возникновения ошибки
подготавливает sql-запрос для выполнения
уничтожает существующую обертку потока
возвращает true в случае успешного завершения или false в случае возникновения ошибки
обработчик закрытия директории
должен возвращать строку string представляющую имя следующего файла либо false если следующего файла нет
обработчик чтения содержимого директории
возвращает true в случае успешного завершения или false в случае возникновения ошибки
обработчик перемещения на начало директории
создаваемая директория
битовая маска составленная из констант вроде stream_mkdir_recursive
значение которое будет передано в mkdir()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
создание директории
url удаляемой директории
битовая маска составленная из констант вроде stream_mkdir_recursive
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет директорию
закрывает ресурс
должен возвращать true если кэшированные данные успешно сохранены или их вообще нет либо false если данные не могут быть сохранены
сохранение данных вывода
operation может принимать одно из следующих значений: lock_sh установить совместную блокировку для чтения
возвращает true в случае успешного завершения или false в случае возникновения ошибки
advisory file locking
если option принимает значение stream_meta_touch : массив array состоящий из двух аргументов функции touch()
путь к файлу или url для задания метаданных
одно из значений: stream_meta_touch метод вызывается в результате вызова touch() stream_meta_owner_name метод вызывается в результате вызова chown() со строковым аргументом stream_meta_owner метод вызывается в результате вызова chown() stream_meta_group_name метод вызывается в результате вызова chgrp() stream_meta_group метод вызывается в результате вызова chgrp() stream_meta_access метод вызывается в результате вызова chmod()
возвращает true в случае успешного завершения или false в случае возникновения ошибки
изменяет настройки потока
см
получение информации о файловом ресурсе
должен возвращать текущую позицию потока
определение текущей позиции потока
новый размер
возвращает true в случае успешного завершения или false в случае возникновения ошибки
усечение потока
эти данные должны передаваться потоку уровнем ниже
должен возвращать количество успешно записанных байт или 0 если ничего записать не удалось
запись в поток
url удаляемого файла
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаление файла
возвращает количество кадров как целое число
возвращает количество кадров в видео-файле
высота в пикселях
ширина в пикселях
устанавливает размер видео
параметр encoding устанавливает кодировку для входных / выходных документов
поиск файла в include_path
настройки config могут быть заданы в виде массива или строки
если задан параметр filename то эта функция прочитает файл и инициализирует объект с этим файлом действуя как функция tidy_parse_file()
возвращает новый экземпляр tidy
создает новый tidy-объект
возвращает объект tidynode если узел имеет родителя в противном случае null
возвращает родительский узел текущего узла
возвращает true если у узла есть потомки false - в противном случае
проверяет существование потомков у узла
возвращает true если существуют соседние узлы false - в противном случае
проверяет существование соседних узлов
возвращает true если узел является asp false - в противном случае
проверяет текущий узел на соответствие asp
возвращает true если узел является jste false - в противном случае
проверяет текущий узел на соответствие jste
возвращает true если узел является php-кодом false - в противном случае
проверяет является ли текущий узел php-кодом
возвращает true если узел представляет собой текст false - в противном случае
проверяет является ли текущий узел обычным текстом не разметкой
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрыть ввод xmlreader
имя атрибута
значение атрибута или null если атрибут с заданным параметром name не найден или нет позиции элемента
получить значение атрибута с определённым именем
позиция атрибута
значение атрибута или пустая строка до php 5
получить значение атрибута по индексу
возвращает true в случае успешного завершения или false в случае возникновения ошибки
показать является ли разбираемый документ синтаксически правильным
строка содержащая префикс
возвращает true в случае успешного завершения или false в случае возникновения ошибки
найти пространство имён для префикса
имя атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переместить курсор к атрибуту с заданным именем
позиция атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переместить курсор на атрибут по индексу
возвращает true в случае успеха и false в случае неудачи или если невозможно выполнить позиционирование курсора на атрибуте когда этот метод вызывается
позиционировать курсор на родительском элементе текущего атрибута
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переместить позицию курсора на первый атрибут
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переместить позицию курсора на следующий атрибут
возвращает содержимое текущего узла включая сам узел как строку
получить xml из текущего узла включая сам узел
возвращает содержимое текущего узла в виде строки
прочитать содержимое текущего узла как строку
одна из констант опций парсера
если установлено в true то опция будет включена в противном случае опция будет выключена
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает опцию парсера
имя файла или uri указывающий на схему relaxng
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установить имя файла или uri для схемы relaxng
строка содержащая схему relaxng
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает данные содержащие схему relaxng
имя файла xsd схемы
возвращает true в случае успешного завершения или false в случае возникновения ошибки
проверить документ используя xsd
битовая маска констант libxml_*
кодировка документа или null
строка содержащая xml для разбора
возвращает true в случае успешного завершения или false в случае возникновения ошибки
установить данные содержащие xml для разбора
пространство имён uri параметра xslt
локальное имя параметра xslt
значение параметра в виде строки или false если оно не установлено
возвращает значение параметра
возвращает true в случае успешного завершения или false в случае возникновения ошибки
определяет имеет ли php поддержку exslt
импортируемая таблица стилей в виде объекта domdocument или simplexmlelement
возвращает true в случае успешного завершения или false в случае возникновения ошибки
импортирует таблицу стилей
путь к файлу в который записывается профилирующая информация
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает файл для профилирования
документ для преобразования
целевой uri для преобразования
возвращает количество записанных байтов либо false при ошибке
преобразует в uri
объект класса domdocument или simplexmlelement для преобразования
результат преобразования или false при ошибке
преобразует в xml
bool замечание : since 2
switch on / off autorendering
disable view rendering
the assigned variable name if this is empty all assigned variables will be returned
retrieve assigned variable
локальное имя файла для создания
содержимое для создания файла
возвращает true в случае успешного завершения или false в случае возникновения ошибки
добавляет файл в zip-архив используя его содержимое
возвращает true в случае успешного завершения или false в случае возникновения ошибки
закрывает активный архив открытый или вновь созданный
индекс элемента для удаления
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет элемент в архиве используя его индекс
имя элемента для удаления
возвращает true в случае успешного завершения или false в случае возникновения ошибки
удаляет элемент в архиве используя его имя
элементы для извлечения
место назначение куда извлекать файлы
возвращает true в случае успешного завершения или false в случае возникновения ошибки
извлекает содержимое архива
если флаг установлен в ziparchive::fl_unchanged возвращается оригинальный неизмененный комментарий
индекс записи
возвращает комментарий при успехе или false в случае возникновения ошибки
возвращает комментарий элемента используя его индекс
если флаг установлен в ziparchive::fl_unchanged возвращается оригинальный неизмененный комментарий
имя элемента
возвращает комментарий при успехе или false в случае возникновения ошибки
возвращает комментарий элемента используя его имя
индекс элемента
флаги используемые для открытия архива
размер читаемых данных из элемента
возвращает содержимое элемента при успехе или false в случае возникновения ошибки
возвращает содержимое элемента по его индексу
флаги используемые для открытия архива
имя элемента
размер читаемых данных из элемента
возвращает содержимое элемента при успехе или false в случае возникновения ошибки
возвращает содержимое элемента по его имени
используемое имя элемента
возвращает файловый указатель ресурс в случае успеха или false в случае возникновения ошибки
получить дескриптор файла элемента определенный по имени элемента только для чтения
флаги определяемые битовой маской из следующих значений либо 0 для ни одного из них
имя элемента для поиска
возвращает индекс элемента в случае успеха или false в случае возникновения ошибки
возвращает индекс элемента в архиве
используемый режим открытия файлов
имя zip-архива для открытия
коды ошибок возвращает true при успешном завершении или код ошибки
открывает zip-архив
индекс элемента для переименования
новое имя
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переименовывает элемент по его индексу
новое имя
имя элемента для переименования
возвращает true в случае успешного завершения или false в случае возникновения ошибки
переименовывает элемент по его имени
содержание комментария
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает комментарий к zip-архиву
индекс элемента
содержание комментария
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает комментарий к элементу по его индексу
содержание комментария
имя элемента
возвращает true в случае успешного завершения или false в случае возникновения ошибки
устанавливает комментарий к элементу заданному по имени
индекс элемента
ziparchive::fl_unchanged указывается чтобы запросить информацию об исходном файле в архиве игнорируя любые внесенные изменения
возвращает массив содержащий детальную информацию о элементе или или false в случае возникновения ошибки
получение детальной информации о элементе по его индексу
имя элемента
флаг указывающий как должен происходить поиск имени
возвращает массив содержащий детальную информацию о элементе или или false в случае возникновения ошибки
получение детальной информации о элементе по его имени
индекс позиции
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отменяет все изменения у позиции с заданным индексом
имя позиции
возвращает true в случае успешного завершения или false в случае возникновения ошибки
отменяет все измения у позиции с заданным именем
frontend parameter for the devices
backend parameter for the devices
listener socket which receives a copy of all messages going both directions
call to this method will prepare the device
construct a new device
