arg_pair	функцией ldap_get_dn() и разбивает ||| int $with_attrib	count=1
function	[function_name_1] чистую директорию ||| [function_name_1] [arg_pair_2]	count=3
function_name	на генерацию [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	каталогом и переданный в ||| function	count=1
return	основании позиции [return] атрибут ||| [return]	count=1
return	до ||| string	count=1
arg_pair	в unescaped_string ||| string $unescaped_string resource $link_identifier	count=1
function_name	ob_start() ||| handler	count=1
function_name	[function_name_1] копию ||| [function_name_1] array [function_name_2]	count=1
function_name	[function_name_1] методов ||| [function_name_2] [function_name_1]	count=1
function_name	создает ||| create	count=2
function_name	копирования ||| copy	count=1
function_name	utf-8 и возвращает ||| utf8	count=1
function_name	или удалённом x ||| animate images	count=1
function_name	[function_name_1] код ||| [function_name_2] [function_name_1]	count=2
arg_pair	репозитория и ||| int $revision_no	count=1
return	автоматической фиксации ||| bool	count=1
namespace	false ||| recursiveiteratoriterator	count=1
namespace	lob ||| oci-lob	count=2
function	для сокета [arg_pair_2] ||| [function_name_1] set option [arg_pair_2]	count=1
function_name	узел соответствует jste ||| is jste	count=1
return	by oliver isbn ||| int	count=1
namespace	фильтров применяемых к ||| filteriterator	count=1
arg_pair	в filename ||| mixed $data	count=1
function_name	массив в ||| array	count=1
namespace	поиска описания [namespace] ||| [namespace]	count=1
function_name	создает большой объект в ||| pg lo	count=1
namespace	или delete запросом связанным ||| function	count=1
function_name	привязывает имя указанное ||| socket bind	count=1
function_name	выходных документов ||| tidy	count=1
function	[function_name_1] [arg_pair_2] asii-кодами в диапазоне 0..255 ||| [function_name_1] [arg_pair_2]	count=2
namespace	директорию на ||| function	count=1
function_name	класса которое будет ||| class	count=1
function_name	длину гипотенузы прямоугольного треугольника ||| hypot	count=1
namespace	для ||| pdo	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] object [arg_pair_2]	count=3
arg_pair	адресу репозитория и получает ||| string $repos_url	count=1
arg_pair	вхождения needle и ||| mixed $needle	count=1
function_name	задачу с низким приоритетом ||| do low	count=1
return	каталогом ||| void	count=1
function_name	запрос ||| query	count=1
namespace	на ||| function	count=2
return	автоматического определения кодировок в ||| mixed	count=1
arg_pair	описанному в programming ||| string $second	count=1
function_name	в filename проверяя ||| php check syntax	count=1
return	строку содержащую версию сервера ||| string	count=1
function_name	memcached::prepend() за исключением того ||| prepend	count=1
arg_pair	возвращает ссылающийся ||| string $encoding string $separator	count=1
return	строку описывающую ||| string	count=1
namespace	производит верификацию ||| function	count=1
return	результата ||| resource	count=1
namespace	[namespace] или ||| [namespace]	count=1
function_name	текущую ||| ftp	count=1
function_name	в ||| ldap	count=1
namespace	свойством ||| reflectionproperty	count=1
return	подходящим для ||| string	count=1
arg_pair	строки needle в строке ||| string $encoding	count=1
return	и возвращает массив ||| array	count=1
function_name	используемого для соединения ||| info	count=1
namespace	механизмов автоматического определения кодировок ||| function	count=1
function_name	класса объекты которого ||| info class	count=1
return	преобразует ||| int	count=1
arg_pair	что новое значение находится ||| int $color float $value	count=1
function_name	установка / ||| mb language	count=1
return	его и до конца ||| string	count=1
function_name	у текущего элемента ||| children	count=2
function	[function_name_1] данных mysql ||| [function_name_1] [arg_pair_2]	count=3
return	[return] затронутых строк ||| [return]	count=1
function_name	транзакции ||| transaction	count=1
function_name	удаления из базы ||| delete	count=1
arg_pair	файл ||| resource $ftp_stream	count=1
function_name	установка / ||| mb	count=1
namespace	или файловым ||| function	count=1
namespace	метод производит ||| imagick	count=1
function_name	нижнем регистре ||| lower	count=1
return	строки подходящим для драйвера ||| string	count=1
function_name	заданного в zip_entry ||| compressionmethod	count=1
function_name	считывает следующую ||| zip read	count=1
function_name	string ||| mb strimwidth	count=2
arg_pair	или историю ||| int $end_revision int $limit	count=1
arg_pair	переданный в параметре plaintext ||| string $plaintext	count=1
function_name	цвет в виде ||| color	count=1
function_name	описание [function_name] кодом ||| [function_name]	count=1
arg_pair	директорий опционально для конкретной ||| bool $recurse	count=1
namespace	итератор ||| iteratoriterator	count=1
return	массива объектов reflectionparameter ||| array	count=1
function_name	сокет ||| stream socket	count=1
return	функция закрывает дескриптор используемый ||| bool	count=1
namespace	базой данных в режим ||| pdo	count=1
function_name	на datetime::getlasterrors() ||| get last errors	count=1
function_name	[function_name_1] сессии ||| [function_name_2] get [function_name_1]	count=2
return	специальные символы внутри строки ||| string	count=1
arg_pair	[arg_pair_1] ее ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	и превращает его в ||| dom import simplexml	count=1
function_name	получает значение атрибута ||| get attribute ns	count=2
function_name	список имён расширенных атрибутов ||| xattr list	count=1
function_name	так и из репозитория ||| svn export	count=1
function_name	для ||| mb	count=1
arg_pair	рисует прямоугольник с заданными ||| int $y2 int $color	count=1
function_name	зарегистрировать ||| register	count=1
function_name	возвращает либо информацию о ||| get	count=1
function_name	функция создает экземпляр класса ||| create text	count=1
function	[function_name_1] объект object ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	data ||| bool $strict	count=1
function	декодирует [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	напоминает [function_name] ||| [function_name]	count=3
function_name	перемещает указатель к ||| seek	count=1
function_name	похож на datetime::getlasterrors() ||| get last errors	count=1
function_name	integer ||| intval	count=1
function	обрезает строку [function_name_1] [arg_pair_2] width ||| function string [function_name_1] [arg_pair_2]	count=1
function_name	в начало существующей ||| prepend	count=1
namespace	programming ||| function	count=1
function_name	проверку синтаксиса производит верификацию ||| check syntax	count=1
return	результате предыдущей операции поиска ||| int	count=1
return	включая его ||| string	count=1
function_name	[function_name_1] метода __autoload ||| [function_name_1] [function_name_2]	count=2
namespace	возвращает строку или массив ||| function	count=2
function_name	аналогично memcached::prepend() ||| prepend by key	count=1
function_name	вставленной ||| last	count=1
function_name	уже открытым ресурсом потока ||| stream	count=1
namespace	альфа компонента в ||| function	count=1
function_name	всех локальных интерфейсах ||| create listen	count=1
function_name	в фоновом режиме возвращая ||| background	count=2
function_name	аргументом ||| ftp chdir	count=2
namespace	algorithms ||| function	count=1
arg_pair	path в ||| bool $recursive	count=1
return	список файлов и ||| array	count=1
function_name	[function_name_1] текущее качество ||| [function_name_1] image compression [function_name_2]	count=1
function_name	объект ||| construct	count=1
arg_pair	или историю правок в ||| int $limit	count=1
function_name	качестве параметра directory ||| chdir	count=1
arg_pair	memcached::get() за исключением ||| callable $cache_cb float $cas_token	count=1
function_name	активное ||| magic	count=1
function_name	возвращает значение атрибута ||| get attribute	count=2
arg_pair	строки ||| string $haystack mixed $needle	count=2
arg_pair	точки x y до ||| float $x float $y	count=1
arg_pair	ereg_replace() ||| string $pattern string $replacement	count=1
arg_pair	заданного файла в ||| resource $ftp_stream	count=1
function_name	url адресу репозитория ||| ls	count=1
arg_pair	заключает ||| string $string int $parameter_type	count=1
arg_pair	их в массиве fd ||| int $protocol array $fd	count=1
return	преобразует число ||| int	count=1
namespace	обработчика ожидать ||| gearmanworker	count=1
function_name	подсчитывает количество ||| str word count	count=1
function_name	переменных vars ||| mb convert variables	count=1
function_name	размер ||| size	count=4
function_name	возвращает ||| mysqli get host	count=1
namespace	в результате предыдущей ||| function	count=1
arg_pair	с первого вхождения ||| mixed $needle	count=1
arg_pair	ini в ||| bool $process_sections	count=1
arg_pair	path ||| string $path string $url	count=1
function_name	текущее активное ||| set magic quotes	count=1
function_name	строках ||| detect	count=1
function_name	же как pdf_arc() ||| pdf arcn	count=1
arg_pair	массив содержащий все элементы ||| array $array1 array $array2	count=1
arg_pair	аналогично memcached::getdelayed() ||| bool $with_cas callable $value_cb	count=1
return	алгоритму описанному ||| int	count=1
arg_pair	аргументом path с ||| string $path	count=1
function_name	указанный ||| chdir	count=1
function_name	интерфейсах указанный ||| create listen	count=1
arg_pair	внутри ||| string $string	count=1
namespace	указанный в качестве параметра ||| function	count=1
function_name	массива ||| array multisort	count=1
arg_pair	[arg_pair] ширине ||| [arg_pair]	count=1
return	из ||| mixed	count=1
arg_pair	ошибки в ||| string $filename	count=1
function_name	указанного в ||| check	count=1
function_name	клиентскими библиотеками oracle ||| oci set	count=1
namespace	xml ||| soapclient	count=1
namespace	целое число php ||| function	count=1
function_name	библиотеками oracle ||| oci	count=1
function_name	настройки ||| magic quotes runtime	count=2
function_name	[function_name_1] фоновую ||| [function_name_2] [function_name_1]	count=3
function_name	[function_name_1] ошибках ||| [function_name_2] [function_name_1]	count=1
arg_pair	другими http заголовками ||| string $path	count=1
return	метод recursivetreeiterator::valid() впервые ||| void	count=1
namespace	удалённом ||| imagick	count=1
function_name	производит анимацию ||| images	count=1
function_name	инструкций препроцессора pi для ||| set processing instruction	count=1
function_name	содержащий список ||| list	count=1
return	рассчитывает и возвращает параметры ||| array	count=1
return	получает список файлов и ||| array	count=1
function_name	[function_name_1] расширенных атрибутов ||| [function_name_2] [function_name_1]	count=6
return	предыдущей ||| int	count=1
arg_pair	проверяя ошибки ||| string $filename	count=1
function_name	текущее активное значение ||| quotes runtime	count=1
function_name	элементами с заданным локальным ||| elements by tag name ns	count=1
function_name	для последней операции curl ||| curl	count=1
function_name	всех определённых функций ||| defined functions	count=1
arg_pair	за ||| mixed $value	count=3
arg_pair	функцию ||| callable $autoload_function	count=1
function_name	квадратный корень ||| sqrt	count=1
function_name	считывает ||| zip read	count=2
function_name	[function_name_1] короткое имя ||| [function_name_1] frame [function_name_2]	count=1
function_name	преобразует число gmp ||| gmp	count=1
function_name	исключение ||| set exception	count=1
function_name	sqlstate ошибки вызванной в ||| stmt sqlstate	count=1
function_name	png ||| imagesavealpha	count=1
function_name	возвращает трассировку стека ||| get trace as	count=1
function_name	кодировок ||| order	count=1
function_name	[function_name] функцией bbcode_create() ||| [function_name]	count=3
namespace	флаг сохранять всю информацию ||| function	count=1
arg_pair	массив содержащий все элементы ||| array $array1	count=1
function_name	включая его ||| strstr	count=1
function_name	двух строк ||| similar text	count=1
function_name	в кавычки если ||| quote	count=1
arg_pair	command ||| string $command	count=1
arg_pair	возвращает информацию ||| string $path int $pri	count=1
function_name	или удалённом x сервере ||| images	count=1
function_name	время рассвета для ||| date sunrise	count=1
arg_pair	в filename ||| string $filename mixed $data	count=1
return	задает текущее активное значение ||| bool	count=1
function_name	добавляет ||| add record	count=2
arg_pair	чисел a и ||| gmp $b	count=1
arg_pair	директорий опционально для конкретной ||| string $repos_url int $revision_no	count=1
function_name	distortion ||| image channel distortions	count=1
function_name	сообщает ||| is	count=1
arg_pair	рассчитывает количество дней с ||| int $day int $year	count=1
function_name	возвращает распакованную версию входных ||| gzdecode	count=1
function_name	remote_file с ftp-сервера и ||| fget	count=1
arg_pair	в id3-теге данного файла ||| string $filename	count=1
namespace	анимацию ||| imagick	count=1
function_name	автоматического определения кодировок ||| detect order	count=1
arg_pair	его и до конца ||| string $haystack	count=1
return	перемещает итератор к ||| void	count=1
function_name	возвращает число ошибок ||| error count	count=2
function_name	preg_replace() за ||| preg filter	count=1
namespace	момент или ||| function	count=1
function_name	число доступных предупреждений найденных ||| tidy access count	count=1
function_name	запрос по ||| ls	count=1
function_name	определения кодировок ||| mb detect	count=1
namespace	в качестве ||| function	count=2
function_name	возвращает ||| get iterator	count=1
arg_pair	значение будет ||| mixed $value int $expiration	count=1
arg_pair	строку ||| string $string	count=1
function_name	dom представления ||| save	count=2
function_name	классе указанная константа или ||| has constant	count=1
function_name	задает ||| magic quotes runtime	count=2
function_name	или удалённом ||| animate images	count=1
namespace	работе в неблокирующем ||| gearmanworker	count=1
arg_pair	на указанную в group ||| mixed $group	count=1
arg_pair	аналогично memcached::add() за ||| mixed $value int $expiration	count=1
namespace	строк по ||| function	count=1
arg_pair	best ||| string $first string $second	count=1
function_name	или ||| animate images	count=2
function_name	локальных интерфейсах ||| socket create listen	count=1
function_name	проверяя ошибки ||| php check	count=1
function_name	первое вхождение ||| strstr	count=1
function_name	список ошибок возникших ||| error list	count=1
arg_pair	объект с какими-то данными ||| mixed $data	count=1
namespace	дескриптор используемый для ||| function	count=1
arg_pair	base возводится в ||| gmp $base gmp $exp	count=1
function_name	возвращает максимальный объем ||| get peak usage	count=1
function_name	всю информацию альфа ||| imagesavealpha	count=1
arg_pair	угол имеет координаты ||| int $x	count=1
function_name	[function_name_1] копию массива ||| [function_name_2] [function_name_1]	count=1
arg_pair	поиска ||| resource $link_identifier	count=1
function_name	рассвета для определенных дня ||| date sunrise	count=1
namespace	первого вхождения needle и ||| function	count=1
function	[function_name_1] начиная с ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] соответствующих имени ||| [function_name_1] [function_name_2]	count=1
function_name	если ||| quote	count=1
function_name	в ||| jdtofrench	count=2
function_name	gettext() ||| textdomain	count=2
arg_pair	строку str и ||| string $str	count=1
function_name	разделяет dn ||| ldap explode dn	count=1
namespace	работает с datetimeimmutable ||| datetimeimmutable	count=1
return	символы ||| string	count=1
function_name	в sql-запросе ||| escape	count=1
function_name	xor двух ||| xor	count=1
function_name	идентична функции preg_replace() ||| preg filter	count=1
function_name	вернет временную зону и ||| geoip time zone	count=1
function_name	заголовков ||| headers	count=1
function_name	временную зону и код ||| time zone	count=1
function_name	создает экземпляр ||| create text node	count=1
function_name	дочерний ||| child	count=1
function_name	такими функциями как gettext() ||| textdomain codeset	count=1
function_name	в [function_name] они встречаются ||| get elements [function_name]	count=1
function_name	возвращает новый объект класса ||| create	count=1
function_name	возвращает позицию первого вхождения ||| mb stripos	count=1
arg_pair	oliver isbn ||| string $second	count=1
function_name	файлов ||| svn	count=1
function_name	обработчиком ошибок а также ||| error	count=1
arg_pair	в чистую директорию ||| string $topath	count=1
function_name	текущее активное ||| magic	count=1
namespace	изображения ||| imagick	count=1
arg_pair	массив содержащий все ||| array $array2	count=1
return	[return] которое в ||| [return]	count=2
arg_pair	format ||| int $timestamp	count=1
function_name	репозитория ||| svn	count=2
function_name	описанному в programming classics: ||| similar	count=1
return	указанного в filename ||| bool	count=1
function_name	специальный ||| posix mknod	count=2
namespace	файл [namespace] символическую ссылку ||| [namespace]	count=1
function_name	обработчик инструкций препроцессора pi ||| processing instruction handler	count=1
function_name	возвращает ||| id3 get	count=4
function_name	по ||| text	count=1
function_name	имя класса объекты ||| class	count=1
function_name	анимацию изображения ||| animate images	count=1
function_name	[function_name_1] содержимое ||| [function_name_1] [function_name_2]	count=2
function_name	гринвичу ||| gmmktime	count=1
function_name	возвращает текущую [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	высоту [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	ошибки ||| syntax	count=1
function_name	является синтаксически ||| is	count=1
function_name	устанавливает новое значение по ||| set	count=1
function_name	строк ||| similar text	count=2
namespace	в filename проверяя ошибки ||| function	count=1
return	указанный в ||| bool	count=1
function_name	возвращает ||| memory get peak usage	count=1
namespace	момент или нет ||| function	count=1
namespace	впервые вернет ||| recursiveiteratoriterator	count=1
function_name	заданного xml анализатора ||| xml	count=1
namespace	сохраняет ||| function	count=1
return	в неблокирующем режиме ||| bool	count=1
function_name	виде ||| get	count=2
function_name	php на указанный ||| chdir	count=1
function_name	ошибок а также ||| trigger error	count=1
function_name	эта функция ||| intval	count=1
function_name	расположенных на расстоянии ||| splice	count=1
function_name	устанавливает буферизацию ||| set write	count=1
arg_pair	опции для парсера ||| bool $value	count=1
function_name	implementing ||| similar text	count=2
function_name	[function_name_1] код статуса ||| function int http [function_name_1] [function_name_2] int $response_code	count=1
function_name	pg_send_query() pg_send_query_params() или ||| result	count=1
arg_pair	задает значение именованной или ||| mixed $value	count=1
function_name	порядковый номер поля ||| field	count=1
function_name	values в качестве ||| combine	count=1
return	записи ||| bool	count=1
function_name	tag_set bbcode_container ||| bbcode	count=1
function_name	версию клиентских библиотек svn ||| svn client version	count=1
function_name	по умолчанию для xml ||| xml set default	count=1
return	результате ||| int	count=1
function_name	в указанной базе данных ||| dbase numrecords	count=1
function_name	список файлов ||| svn ls	count=1
return	объект domnodelist ||| domnodelist	count=1
namespace	name для ||| domelement	count=1
function_name	занятую xml анализатором parser ||| xml parser	count=1
function_name	для механизмов автоматического определения ||| mb	count=1
function_name	сообщение об ошибке ||| mysqli error	count=1
function_name	двух ||| text	count=1
function_name	задает обработчик [function_name_2] ||| [function_name_2] [function_name_1]	count=10
function_name	идентификатор ||| id	count=1
return	изображения ||| bool	count=1
function_name	и экранирует специальные ||| quote	count=1
function_name	сгенерированную последней командой ldap ||| ldap	count=1
arg_pair	шаблоном pattern и ||| string $pattern	count=1
arg_pair	y ||| float $y	count=1
function_name	строку в кавычки если ||| quote	count=1
function_name	функции ||| mb	count=1
function_name	возвращает ||| mysqli get server info	count=1
function_name	ширину изображения ||| image width	count=2
function_name	для xml ||| xml set unparsed	count=1
arg_pair	в локальный файл ||| resource $ftp_stream string $local_file	count=1
function_name	указанного в filename ||| php check	count=1
function	html содержащийся [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	с физическим устройством ||| eio fdatasync	count=1
namespace	опционально для ||| function	count=1
arg_pair	ключ key уже существует ||| string $key	count=1
function_name	в ||| zip read	count=2
arg_pair	вхождения ||| mixed $needle	count=1
function_name	по которому расположен узел ||| node path	count=1
function	[function_name_1] которое ||| [arg_pair_2] [function_name_1]	count=2
function_name	сервере под ||| set	count=1
arg_pair	задачу для параллельной ||| mixed $context string $unique	count=3
arg_pair	вхождения строки [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	кодировку для ||| encoding	count=2
return	метод recursivetreeiterator::valid() впервые вернет ||| void	count=1
function_name	и значения атрибутов ||| attributes	count=1
function_name	минимальную версию ||| version	count=1
arg_pair	указанный в fd ||| mixed $fd int $pri	count=1
function_name	запись в ||| read	count=1
function_name	получение текущего ||| language	count=1
namespace	needle и включая его ||| function	count=1
return	режим автоматической фиксации до ||| bool	count=1
return	сервера заданий gearman ||| bool	count=1
function_name	возвращает список [function_name_2] ||| [function_name_1] [function_name_2]	count=6
arg_pair	запрос ||| bool $recurse	count=1
function_name	ошибки в ||| check syntax	count=1
function_name	загружает ||| load	count=1
function_name	возвращает ||| get loaded	count=1
arg_pair	заданной в параметре command ||| string $command	count=1
function_name	строки ||| quote	count=1
arg_pair	filtertype к изображению ||| int $filtertype	count=1
function_name	возвращает список групп для ||| getgroups	count=1
namespace	большого объекта lob ||| oci-lob	count=1
arg_pair	работает аналогично memcached::getdelayed() за ||| bool $with_cas callable $value_cb	count=1
return	строку применяя таблицы ||| string	count=1
namespace	достигнут конец ||| splfileobject	count=1
return	для записи в ||| bool	count=1
arg_pair	ссылку path ||| string $path	count=1
arg_pair	значение переменной var ||| mixed $var	count=1
function_name	параметра directory ||| chdir	count=1
function_name	каталогом и ||| closedir	count=1
arg_pair	закодированную в json ||| bool $assoc	count=1
function_name	[function_name_1] имен таблиц ||| [function_name_1] [function_name_2]	count=2
function_name	функция вернет временную зону ||| geoip time zone by	count=1
arg_pair	строки ||| string $source int $options	count=1
arg_pair	[arg_pair] к механизму ||| [arg_pair]	count=1
function_name	конца строки ||| strstr	count=1
function_name	активное ||| magic quotes	count=1
arg_pair	assoc_array в приемлемые для ||| resource $connection string $table_name	count=1
function_name	/ выходных документов ||| tidy	count=1
function_name	worlds best algorithms by ||| similar text	count=1
function_name	[function_name_1] класса ||| [function_name_2] [function_name_1]	count=4
function_name	привязывает имя указанное в ||| socket bind	count=1
function_name	возможного типа изображения ||| image type	count=2
function_name	режиме возвращая [function_name] который может ||| [function_name]	count=1
namespace	синтаксиса производит верификацию ||| function	count=1
function_name	аналогично memcached::prepend() ||| prepend	count=1
return	строку в кавычки ||| string	count=1
function_name	values ||| combine	count=1
function_name	в ||| read	count=1
function_name	когда [function_name] выброшено ||| [function_name]	count=1
arg_pair	заданной в параметре command ||| string $command string $mode	count=1
function_name	изменяет корневой каталог ||| chroot	count=1
function_name	регулярным выражением ||| mb ereg	count=1
namespace	предоставленного ассоциативного или индексного ||| function	count=1
function_name	устанавливает значения одной ||| set	count=1
function_name	комментарий ||| comment	count=6
return	параметра ||| bool	count=1
function_name	производит верификацию файла указанного ||| check syntax	count=1
function_name	состав которого входит функция ||| extension	count=1
function_name	в результате ||| ldap	count=1
arg_pair	filename на указанного в ||| string $filename mixed $user	count=1
arg_pair	в строку haystack ||| string $haystack mixed $needle	count=1
function_name	проверяя ошибки в ||| check	count=1
arg_pair	alpha ||| resource $image	count=1
function_name	вычисляет наибольший общий делитель ||| gmp gcd	count=1
namespace	одним или ||| function	count=1
arg_pair	экспортирует ключ fingerprint ||| string $fingerprint	count=1
function_name	сеанс curl ||| curl close	count=1
namespace	информацию альфа ||| function	count=1
function_name	это не внутренняя функция ||| user	count=1
function_name	название региона соответствующей страны ||| geoip region name by	count=1
arg_pair	path в репозиторий по ||| string $url	count=1
arg_pair	записывает строку ||| resource $handle	count=1
arg_pair	начиная с первого ||| string $haystack mixed $needle	count=1
function	[function_name_1] функцию ||| [arg_pair_2] [function_name_1]	count=1
function_name	проверку синтаксиса производит ||| check	count=1
function_name	переведены в верхний регистр ||| strtoupper	count=1
function_name	spl очереди ||| spl	count=1
function_name	4713 ||| juliantojd	count=1
arg_pair	возвращает ее в ||| array $ctor_args	count=1
namespace	опционально для конкретной ||| function	count=1
arg_pair	файлов и директорий опционально ||| string $repos_url int $revision_no	count=1
function_name	производит анимацию ||| animate images	count=1
namespace	или всех данных ||| function	count=1
function_name	завершает сеанс curl и ||| curl	count=1
function_name	в filename ||| check syntax	count=1
arg_pair	опции для парсера ||| int $property	count=1
return	данных в ||| bool	count=1
function_name	проверяя ошибки ||| php check syntax	count=1
function_name	worlds ||| text	count=1
return	в ||| resource	count=1
namespace	позиции [namespace] ||| [namespace]	count=1
arg_pair	the worlds ||| string $first	count=1
function	[function_name_1] атрибута файла ||| [function_name_1] get [arg_pair_2]	count=1
function_name	в заданном календаре calendar ||| cal to jd	count=1
namespace	используемый для записи ||| function	count=1
function_name	возвращает свойства класса ||| get	count=1
namespace	строки haystack начиная с ||| function	count=1
function_name	выбирает большой объект из ||| pg lo	count=1
function_name	preg_replace() за ||| preg replace	count=1
function_name	цвет объекта ||| color as	count=1
function_name	установка / ||| language	count=1
function_name	в результате предыдущей ||| count entries	count=1
arg_pair	до конца строки ||| string $haystack	count=1
function_name	заполняет массив ||| array fill	count=1
namespace	функцией ||| function	count=1
function_name	размер сжатого ||| packed size	count=2
function_name	режиме возвращая [function_name] ||| [function_name]	count=1
arg_pair	и код региона соответствующей ||| string $region_code	count=1
namespace	флаг ||| function	count=1
arg_pair	в пикселах ||| float $angle	count=1
arg_pair	регулярному выражению ||| string $option	count=1
arg_pair	пытается возвратить [arg_pair] удалены ||| [arg_pair]	count=1
function_name	базового типа oid значений ||| type oid	count=1
arg_pair	найдено совпадение ||| mixed $pattern	count=1
arg_pair	также с ||| string $error_msg	count=1
function	и кода [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	color в изображении image ||| int $color	count=1
function	[function_name_1] stream ||| [function_name_1] [arg_pair_2]	count=1
function_name	указанного в ||| php check syntax	count=1
function_name	возвращает внутренний [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	t61 ||| ldap 8859 to t61	count=2
arg_pair	в unescaped_string ||| resource $link_identifier	count=1
arg_pair	его и до ||| string $haystack mixed $needle	count=1
return	установка / ||| mixed	count=1
arg_pair	и значениям ||| int $options	count=1
arg_pair	или историю правок ||| int $end_revision int $limit	count=1
arg_pair	описанному в programming classics: ||| string $first	count=1
function_name	сервера ||| server	count=1
function_name	директории ldap ||| ldap delete	count=1
arg_pair	на основе части ||| int $width	count=1
arg_pair	загружает локальный файл ||| int $mode	count=2
arg_pair	создает ||| string $pathname int $mode	count=1
arg_pair	указатель результата запроса с ||| resource $result	count=1
function_name	id3-тега(тегов в mp3-файле ||| id3	count=1
arg_pair	клиенте для трассировки ||| resource $connection string $client_info	count=1
namespace	элемента directoryiterator ||| directoryiterator	count=1
function_name	предыдущей операции поиска ||| count entries	count=1
arg_pair	проверку ||| string $filename	count=1
arg_pair	by oliver isbn ||| string $second	count=1
function_name	и возвращает разницу ||| diff uassoc	count=1
return	с каталогом и ||| void	count=1
arg_pair	algorithms ||| string $second	count=1
function_name	текущее активное значение настройки ||| quotes runtime	count=1
function_name	memcached::prepend() за исключением того ||| prepend by key	count=1
function_name	секунд ||| time nanosleep	count=2
function_name	класс class_name ||| subclass of	count=1
arg_pair	директорий опционально для конкретной ||| int $revision_no	count=1
function_name	директорию заданную в pathname ||| mkdir	count=1
function_name	cookie [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	classics: implementing ||| function	count=1
arg_pair	с первого ||| mixed $needle	count=1
arg_pair	процессу pid ||| int $pid	count=1
function_name	implementing the worlds best ||| similar	count=1
function_name	активное значение настройки ||| set magic quotes runtime	count=1
function_name	кодировок ||| mb	count=1
function_name	копию массива ||| array copy	count=2
function_name	название региона ||| region name by	count=1
function_name	файла ||| php check	count=1
function_name	сравнивает value1 ||| compare	count=1
function_name	функцию ||| shutdown function	count=1
function	gd2 [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	строку в системе счисления ||| string	count=1
return	algorithms by oliver ||| int	count=1
function_name	удалённый файл с ||| ftp nb	count=1
namespace	searchd выполняет набор из ||| sphinxclient	count=1
return	за ||| int	count=1
arg_pair	функцию ||| callable $autoload_function bool $throw	count=1
namespace	текущий элемент допустимое значение ||| limititerator	count=1
function_name	в filename ||| check	count=1
arg_pair	указывать callback -функцию ||| callable $callback	count=1
function_name	текущую [function_name_2] ||| [function_name_1] get [function_name_2]	count=4
function_name	в качестве параметра ||| closedir	count=1
function_name	обработчиком ошибок а ||| error	count=1
function_name	указывает выполняется сейчас ||| is running	count=1
arg_pair	с первого вхождения ||| string $haystack mixed $needle	count=1
function_name	возвращает расширение ||| get extension	count=2
function_name	[function_name_1] цвет в ||| [function_name_2] [function_name_1]	count=1
return	подстроку строки ||| string	count=1
function_name	преобразование изображения ||| image	count=1
function_name	результата запроса ||| oci fetch	count=1
return	[return] атрибут не ||| [return]	count=3
return	поток связанный с каталогом ||| void	count=1
arg_pair	by oliver isbn ||| string $first string $second	count=1
namespace	вывода ||| gearmanworker	count=1
function_name	[function_name_1] xml ||| [function_name_1] [function_name_2]	count=1
function_name	указанный интерфейс ||| implements interface	count=1
arg_pair	по url ||| string $repos_url	count=1
function_name	возвращает состояние ||| status	count=1
function	временную зону [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	gmp ||| gmp	count=1
arg_pair	заголовками ||| string $path	count=1
function_name	[function_name_1] короткое ||| [function_name_1] frame [function_name_2]	count=1
function_name	механизмов автоматического определения кодировок ||| detect order	count=1
function_name	возвращает номер ошибки произошедшей ||| posix get last error	count=1
function_name	результате предыдущей операции ||| entries	count=1
function_name	[function_name_1] цвет ||| [function_name_2] [function_name_1]	count=2
function_name	строку в кавычки ||| quote	count=1
arg_pair	предельное количество запросов в ||| resource $grp int $limit	count=1
arg_pair	объект object в своем ||| mixed $object	count=1
arg_pair	для ||| string $directory resource $context	count=1
arg_pair	на основе аргумента path ||| string $path	count=1
arg_pair	значение ||| float $value	count=1
function	заголовка mime [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	worlds best algorithms ||| function	count=1
arg_pair	ereg_replace() за исключением того ||| string $replacement	count=1
function_name	временную зону и ||| time zone	count=1
function_name	процессе выполнения rewinddir() ||| dir rewinddir	count=1
arg_pair	с помощью gnupg_addsignkey и ||| resource $identifier	count=1
arg_pair	заданной в параметре command ||| string $mode	count=1
arg_pair	файлов ||| string $repos_url int $revision_no	count=1
function_name	запись в ||| zip	count=1
function_name	получает [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
function_name	операции ||| count entries	count=2
function_name	получает максимальную длину строки ||| get max	count=1
function_name	isbn 0-131-00413-1 ||| similar	count=1
namespace	исключение ||| exception	count=1
arg_pair	увеличивает числовое значение ||| int $initial_value int $expiry	count=1
function_name	из результата запроса ||| oci fetch	count=1
arg_pair	символы внутри ||| string $string	count=1
function_name	[function_name_1] внутренний итератор ||| [function_name_1] [function_name_2]	count=1
function	кода [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	worlds best ||| int	count=1
function_name	ключ metaphone ||| metaphone	count=1
function_name	устанавливает ||| stream set write	count=1
function_name	быть действующим ресурсом сокета ||| socket	count=1
function_name	выполняет проверку синтаксиса производит ||| php check	count=1
arg_pair	совпадение с ||| string $string	count=1
function_name	последовательность элементов ||| array slice	count=1
arg_pair	чисел a и b ||| gmp $a gmp $b	count=2
arg_pair	возвращает строку экранированную ||| string $str	count=1
function_name	в результате ||| count entries	count=1
function_name	для xml ||| xml	count=4
arg_pair	функция строит запрос ||| bool $peg	count=1
arg_pair	с заданными свойствами ||| array $fields	count=1
function_name	высоту ||| height	count=1
namespace	одну позицию вперед ||| parentiterator	count=1
arg_pair	возвращает целочисленный ||| resource $result	count=1
function	string [arg_pair_2] ||| function string [function_name_1] [arg_pair_2]	count=3
return	обработчика ||| bool	count=1
arg_pair	в базе данных используя ||| resource $connection	count=1
function_name	устанавливает буферизацию для ||| stream set write buffer	count=1
arg_pair	возвращает строку ||| string $str string $charlist	count=1
function_name	algorithms by oliver ||| similar text	count=1
arg_pair	заключает строку в ||| string $string int $parameter_type	count=1
namespace	на [namespace] ||| [namespace]	count=1
arg_pair	историю ||| int $limit	count=1
function_name	в параметре charlist ||| addcslashes	count=1
return	в строку в системе ||| string	count=1
function	репозитория [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	элемента в виде узла ||| node ns	count=1
arg_pair	ключ key уже ||| string $key mixed $value	count=1
function_name	временную зону и ||| time zone by	count=1
arg_pair	по url адресу ||| string $repos_url int $revision_no	count=1
arg_pair	получает список ||| int $revision_no	count=1
function	задает cookie [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
return	альфа компонента в ||| bool	count=1
namespace	нижний или верхний регистр ||| function	count=1
function_name	абстрактным ||| abstract	count=2
function_name	квадратный корень ||| gmp sqrt	count=1
function_name	[function_name_1] с ||| [function_name_1] [function_name_2]	count=1
arg_pair	best algorithms ||| string $first	count=1
function_name	временную зону ||| geoip time zone by	count=1
arg_pair	needle и включая его ||| string $haystack mixed $needle	count=1
arg_pair	запрос по url ||| string $repos_url int $revision_no	count=1
arg_pair	возвращает ||| int $row	count=2
function_name	возвращает максимальный объем ||| get	count=1
function_name	допустимый диапазон id документов ||| idrange	count=1
function_name	возвращает информацию о параметрах ||| get	count=1
arg_pair	возвращает массив содержащий ||| array $array1	count=1
function_name	ли число простым ||| gmp prob prime	count=1
function_name	получает записи ||| dbase get record	count=1
function_name	для xml анализатора parser ||| xml set	count=3
function_name	инструкций препроцессора pi для ||| processing instruction	count=1
function_name	директорию ||| chdir	count=1
namespace	итератор recursivefilteriterator ||| recursivefilteriterator	count=1
function_name	параметры соединения [function_name_2] ||| [function_name_2] set [function_name_1]	count=2
function_name	при php выводе ||| header register	count=1
arg_pair	url адресу репозитория и ||| string $repos_url int $revision_no	count=1
namespace	programming classics: implementing ||| function	count=1
function_name	расстоянии ||| splice	count=1
arg_pair	по алгоритму описанному в ||| string $second	count=1
return	этот метод ||| void	count=2
arg_pair	в строке с ||| resource $connection	count=1
function_name	функции ob_start() ||| output	count=1
function_name	активное значение настройки ||| magic	count=1
function_name	флаг ||| imagesavealpha	count=1
function_name	конца строки пробелами ||| trim	count=1
arg_pair	строк по алгоритму описанному ||| string $first string $second	count=1
function_name	в ||| check	count=2
function	размер [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	временную зону ||| geoip time zone by country	count=1
function_name	название страны соответствующий имени ||| name by name	count=1
function_name	memcached::prepend() за ||| prepend by key	count=1
arg_pair	как из индексированного ||| int $record_number	count=1
function_name	текущее качество сжатия ||| compression quality	count=2
function_name	к [function_name] ||| [function_name]	count=1
function_name	расстояние хэмминга для ||| hamdist	count=1
return	метод производит анимацию ||| bool	count=1
function_name	верификацию файла ||| php	count=1
function_name	номер поля ||| pg field num	count=1
function_name	эта функция возвращает ||| get elements by	count=1
function_name	функция внутренней то ||| internal	count=1
return	сохраняет ||| bool	count=3
function_name	заданную аргументом ||| ftp	count=1
arg_pair	из символов с ||| string $string	count=1
function_name	большой объект из базы ||| pg lo	count=1
function_name	аналогично memcached::prepend() за исключением ||| prepend	count=1
arg_pair	строку и возвращает ||| string $class_name	count=1
function_name	устанавливает ||| set write	count=1
return	проверяет является ||| bool	count=1
arg_pair	строки haystack начиная ||| string $haystack	count=1
function_name	для механизмов автоматического определения ||| detect order	count=1
arg_pair	рисует текст [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	разницу ||| array diff uassoc	count=2
return	символы внутри строки подходящим ||| string	count=1
return	ассоциативный [return] информацию ||| [return]	count=1
return	массиве [return] значениям ||| [return]	count=1
namespace	при ||| gearmanworker	count=1
function_name	filename проверяя ||| php check syntax	count=1
function_name	эта функция преобразует ||| gmp intval	count=1
function_name	php функции ||| register php	count=1
namespace	режим автоматической ||| pdo	count=1
arg_pair	csv ||| string $delimiter string $enclosure	count=1
function_name	возвращая [function_name] который ||| [function_name]	count=1
function_name	возвращаемого значения gearman_errno ||| get errno	count=1
function_name	название региона соответствующей страны ||| region name by	count=1
arg_pair	если требуется ||| string $string	count=1
arg_pair	path в репозиторий ||| string $path string $url	count=1
function_name	задает текущее активное значение ||| magic quotes runtime	count=1
namespace	подходящим для ||| pdo	count=1
return	следующий вызов pdo::begintransaction() не ||| bool	count=1
arg_pair	участке ||| int $shmid	count=1
function_name	связанный с ||| closedir	count=1
arg_pair	создает закрашенный многоугольник в ||| int $num_points int $color	count=1
function_name	копирует ||| copy	count=1
function_name	аналогично memcached::prepend() за ||| prepend by key	count=1
arg_pair	строку экранированную ||| string $str string $charlist	count=1
function_name	сериализует ||| json serialize	count=1
function_name	[function_name_1] в ldap ||| function bool [function_name_2] [function_name_1]	count=1
arg_pair	и директорий ||| bool $recurse	count=1
function_name	oracle ||| oci	count=5
function_name	с [function_name] ||| get [function_name]	count=2
function_name	расширение файла ||| image type to extension	count=1
arg_pair	список файлов и ||| string $repos_url	count=1
function_name	при сравнении алфавитных ||| eregi	count=2
arg_pair	в кавычки если требуется ||| string $string	count=1
arg_pair	в filename проверяя ошибки ||| string $filename	count=1
return	пока ||| bool	count=1
arg_pair	с данными ||| string $data	count=1
function_name	этот ||| animate	count=1
namespace	закрывает поток связанный ||| function	count=1
arg_pair	регулярному выражению в ||| string $pattern	count=1
arg_pair	needle и включая его ||| mixed $needle	count=1
arg_pair	хранимые в участке ||| int $start	count=1
arg_pair	двух строк по ||| string $first	count=1
function_name	временную зону и ||| geoip time zone by country and	count=1
function_name	дескрипторов [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	удаляет length элементов расположенных ||| int $length	count=1
return	и возвращает параметры ||| array	count=1
function_name	вернул значение gearman_errno ||| get errno	count=1
namespace	/ ||| function	count=1
function_name	соответствующей страны и кода ||| code	count=1
return	описанному в programming classics: ||| int	count=1
return	строку с ||| string	count=5
function_name	сериализует ||| serialize	count=3
return	ассоциативный массив с именами ||| array	count=1
function	[function_name_1] и сдвигает ||| [arg_pair_2] [function_name_1]	count=1
function_name	строку ||| ob iconv handler	count=1
function_name	помощью splfileobject::setmaxlinelen() ||| line len	count=1
function_name	названия и значения атрибутов ||| attributes	count=1
namespace	by oliver isbn ||| function	count=1
function_name	из результата запроса в ||| oci fetch	count=1
function_name	файла с физическим устройством ||| eio fdatasync	count=1
function_name	виде узла ||| node ns	count=1
arg_pair	и сохраняет ||| resource $image	count=1
function_name	curl и возвращает дескриптор ||| curl	count=1
return	массива ||| mixed	count=1
arg_pair	функция идентична функции ereg_replace() ||| string $pattern string $replacement	count=1
namespace	или код символа ||| function	count=1
namespace	список файлов и директорий ||| function	count=1
return	в кавычки если требуется ||| string	count=1
function_name	и получает ||| ls	count=1
arg_pair	текст string на ||| string $string int $color	count=1
namespace	помощью oci_result() или ||| function	count=1
function_name	допустимым конечным числом на ||| finite	count=1
function_name	горизонтальное зеркало [function_name] отражая пиксели ||| flop [function_name]	count=1
arg_pair	fd ||| mixed $fd	count=2
namespace	нижний или ||| function	count=1
function_name	указанный в качестве ||| chdir	count=1
function_name	последней операции curl ||| curl	count=1
arg_pair	файл filename ||| string $filename	count=1
arg_pair	потока или записываются в ||| resource $in resource $out	count=1
function_name	возвращает ||| get all info	count=1
namespace	число дней в юлианском ||| function	count=1
function_name	возвращает идентификатор жанра ||| get genre id	count=1
function_name	число [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	возвращает ||| int	count=23
arg_pair	массив содержащий ||| array $array2	count=1
function_name	значение настройки ||| set magic	count=1
return	метод производит ||| bool	count=1
function_name	открывает файл ||| open	count=1
arg_pair	в изображении image ||| int $y int $color	count=1
function	функцию [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	участке разделяемой ||| int $shmid	count=1
function_name	экранирует спецсимволы в строке ||| pg escape	count=1
function_name	виде объекта ||| fetch object	count=1
arg_pair	текста ||| string $fontfile string $text	count=1
return	если требуется и экранирует ||| string	count=1
arg_pair	информацию альфа компонента в ||| resource $image	count=1
function	21 марта [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	устанавливает кодировку для входных ||| set encoding	count=1
arg_pair	устанавливает флаг ||| resource $image	count=1
function_name	переменную окружения сервера apache ||| apache getenv	count=1
function_name	preg_replace() за исключением ||| preg	count=1
function_name	получение аргументов в виде ||| get parameters	count=1
arg_pair	функция ||| bool $recurse	count=1
arg_pair	offset ||| int $offset	count=2
function_name	[function_name_1] имя ||| [function_name_2] [function_name_1]	count=8
function_name	в sql-запросе в ||| escape string	count=1
function_name	функция возвращает значение расширенного ||| xattr get	count=1
function_name	и возвращает разницу ||| array diff uassoc	count=1
function_name	задает текущее активное ||| set magic quotes	count=1
function_name	качестве ||| closedir	count=1
function_name	[function_name] который может ||| [function_name]	count=1
function_name	подсчитывает сколько раз ||| mb substr count	count=1
return	его ||| string	count=1
function_name	элементами с заданным локальным ||| name ns	count=1
function_name	состав которого входит ||| extension	count=1
return	описанному в programming ||| int	count=1
function_name	спецсимволов в значениях ||| unescape	count=1
return	ввода / ||| bool	count=1
return	закрывает дескриптор ||| bool	count=1
function_name	возвращает максимальный объем ||| memory get	count=1
return	подходящим ||| string	count=1
namespace	png изображение ||| function	count=1
return	[return] информацию о ||| [return]	count=1
function_name	[function_name_1] трассировку стека ||| [function_name_2] [function_name_1]	count=1
arg_pair	именем localname для текущего ||| string $localname	count=1
function_name	извлекает ключевые слова ||| build	count=1
function_name	директорию ||| ftp chdir	count=2
namespace	связанный с каталогом ||| function	count=1
function_name	the specified distortion ||| image channel distortions	count=1
arg_pair	0-131-00413-1 ||| string $second	count=1
namespace	предыдущей операции ||| function	count=1
function_name	создает точную копию объекта ||| clone	count=1
function_name	выполняет проверку ||| php check	count=1
function_name	/ получение ||| mb	count=1
namespace	когда обработчик [namespace] пошлет исключение ||| [namespace]	count=1
function_name	виде объекта ||| object	count=1
return	указанный ||| bool	count=1
function_name	быть извлечены gearmanclient::data() ||| data	count=1
function_name	число gmp ||| gmp	count=1
arg_pair	[arg_pair_1] number представленное ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	[function_name_1] базы ||| [function_name_2] [function_name_1]	count=2
return	выполняет проверку ||| bool	count=1
function_name	[function_name_1] изображения ||| [function_name_2] [function_name_1]	count=16
function_name	возвращает ||| get all	count=1
arg_pair	url адресу репозитория ||| bool $recurse	count=1
namespace	domprocessinginstruction ||| domprocessinginstruction	count=1
function_name	активное ||| quotes runtime	count=2
namespace	заданную аргументом ||| function	count=1
function_name	возвращает либо информацию о ||| get status	count=1
arg_pair	сравнивает value1 с ||| mixed $value1 mixed $value2	count=1
arg_pair	fd ||| mixed $fd int $mode	count=1
function_name	пользовательским а не встроенным ||| user defined	count=1
return	сервере ||| bool	count=1
arg_pair	сравнивает ||| mixed $value1 mixed $value2	count=1
function_name	число дней в ||| jdtofrench	count=1
function_name	устанавливает буферизацию для операций ||| set write	count=1
function_name	получает [function_name_2] ||| [function_name_1] [function_name_2]	count=25
namespace	функция закрывает ||| function	count=1
function_name	строки завершения описания ||| end line	count=1
function_name	коды страны и региона ||| geoip region by	count=1
arg_pair	вхождения ||| string $haystack mixed $needle	count=1
function_name	рассвета для определенных ||| date sunrise	count=1
function_name	локальным ||| name ns	count=1
function	[function_name_1] которое ||| [function_name_1] [arg_pair_2]	count=2
function_name	html содержащийся в ||| load html	count=1
function_name	локальных интерфейсах указанный ||| create listen	count=1
function_name	ошибке объясняя ошибку сгенерированную ||| error	count=1
function_name	номер ошибки произошедшей в ||| last error	count=1
function_name	случайным числом ||| mt srand	count=1
namespace	алгоритму описанному в programming ||| function	count=1
function_name	добавляет переданные ||| unshift	count=1
arg_pair	содержащий все компоненты url ||| string $url int $component	count=1
function_name	[function_name_1] комментарий ||| [function_name_1] [function_name_2]	count=5
function_name	функция ||| posix access	count=1
namespace	верхний регистр если ||| function	count=2
return	директорий ||| array	count=1
arg_pair	и ||| string $haystack mixed $needle	count=2
namespace	объекта ||| oci-lob	count=1
function_name	функция подобна strcasecmp() ||| strncasecmp	count=1
arg_pair	с ||| string $error_msg	count=1
function_name	об ошибках связанного ||| error field	count=2
return	на указанный в качестве ||| bool	count=1
arg_pair	рисует эллипс с центром ||| int $width	count=1
function_name	всех локальных интерфейсах ||| socket create listen	count=1
return	value1 с ||| int	count=1
arg_pair	установленным в объекте imagickpixel ||| mixed $bordercolor	count=1
function_name	атрибута соединения ||| attribute	count=1
function_name	заданную ||| ftp	count=1
arg_pair	строкой replacement и ||| mixed $string mixed $replacement	count=1
return	php на ||| bool	count=1
arg_pair	строки ||| string $haystack	count=2
return	на ||| mixed	count=2
return	проверяет ||| bool	count=3
function_name	сжатия изображения ||| image compression	count=2
arg_pair	x y до ||| float $x float $y	count=1
arg_pair	programming classics: implementing the ||| string $first	count=1
arg_pair	строки ||| mixed $needle	count=2
namespace	ли контейнер заданный объект ||| splobjectstorage	count=1
function_name	позицию указателя ||| tell	count=1
arg_pair	строку str из которой ||| string $str string $allowable_tags	count=1
return	подстроку строки haystack ||| string	count=1
function_name	указанного в filename ||| check	count=1
function_name	список имён [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	сервером postgresql ||| pg end	count=1
arg_pair	координаты отсчитываются с ||| string $c	count=1
return	для хранения дескриптора объекта ||| oci-lob	count=1
arg_pair	запроса с ||| resource $result	count=1
function_name	числовой код ||| errno	count=1
return	best ||| int	count=1
function_name	записывает данные сессии ||| write	count=1
function_name	возвращает цвет в ||| get color	count=2
arg_pair	algorithms ||| string $first string $second	count=1
arg_pair	именем localname для текущего ||| string $namespaceuri string $localname	count=1
function_name	открывает файл по ||| open	count=1
arg_pair	координаты ||| int $x	count=1
function_name	получает класс arrayiterator ||| get array	count=1
namespace	gearman ||| gearmanworker	count=1
namespace	получение текущего ||| function	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] decode headers [arg_pair_2]	count=4
function_name	получение строкового представления [function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	алгоритму ||| similar	count=1
namespace	сервера заданий gearman ||| gearmanworker	count=1
arg_pair	в programming ||| string $first string $second	count=1
function_name	с базой данных postgresql ||| pg	count=1
return	gearman ||| bool	count=1
arg_pair	преобразует строку в ||| int $split_length	count=1
arg_pair	implementing ||| string $first string $second	count=1
namespace	или другие символы из ||| function	count=1
function_name	все ||| all	count=2
return	при работе ||| bool	count=1
arg_pair	от strcmp() ||| string $str2	count=1
function_name	[function_name_1] формат utf-16 ||| [function_name_2] [function_name_1]	count=2
function_name	и до конца ||| strstr	count=1
arg_pair	работает аналогично memcached::set() за ||| mixed $value int $expiration	count=1
arg_pair	шаблоном pattern и ||| string $subject	count=1
return	возвращает подстроку строки haystack ||| string	count=1
arg_pair	строки needle ||| int $offset string $encoding	count=1
arg_pair	filename на ||| string $filename	count=1
function_name	предыдущей операции ||| count entries	count=1
arg_pair	объединяет элементы массива с ||| array $pieces	count=1
arg_pair	первого ||| mixed $needle	count=1
function_name	функция устанавливает [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	текущий вызов стека ||| apd callstack	count=1
arg_pair	аргументов а массив ||| array $args	count=1
function_name	установка / получение ||| mb language	count=1
arg_pair	начиная с первого ||| mixed $needle	count=1
arg_pair	массива ||| array $rows string $delimiter	count=1
function	декодирует [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
return	[return] веб-служб описанных ||| [return]	count=1
function_name	записывает в сокет ||| socket	count=1
namespace	gmp в ||| function	count=1
arg_pair	haystack ||| string $haystack string $needle	count=1
arg_pair	возвращает имя таблицы ||| int $field_number	count=1
arg_pair	ключам и значениям массива ||| array $assoc_array int $options	count=1
function_name	в котором ||| by tag	count=1
function_name	автоматического определения кодировок в ||| mb	count=1
arg_pair	значение переменной var используя ||| mixed $var	count=1
return	метод ||| bool	count=2
arg_pair	шаблоном pattern и ||| string $pattern string $subject	count=1
function	[function_name_1] с текущей ||| [function_name_1] write [arg_pair_2]	count=2
function_name	ли итератор допустимым ||| valid	count=1
function_name	алгоритму описанному в ||| similar text	count=1
function_name	временную зону и код ||| time zone by	count=1
function_name	базового типа oid значений ||| field type oid	count=1
function_name	указанного в filename проверяя ||| check	count=1
function_name	строкового представления [function_name] ||| [function_name]	count=2
arg_pair	string ||| string $string int $color	count=1
function_name	текущую версию расширения ||| solr get version	count=1
arg_pair	его ||| mixed $needle	count=1
function_name	битах ||| connection status	count=1
function_name	требуется и экранирует ||| quote	count=1
function_name	на заданную аргументом ||| ftp	count=1
function_name	потомков ||| has child nodes	count=1
function_name	строке subject все совпадения ||| preg	count=1
namespace	и сохраняет png изображение ||| function	count=1
function_name	внешних сущностей для xml ||| xml set external entity ref	count=1
arg_pair	возвращает имя таблицы ||| resource $result int $field_number	count=1
function_name	получает сведения об исключении ||| get details	count=1
function_name	побитовое и двух gmp ||| gmp and	count=1
function_name	возвращает косинус параметра ||| cos	count=1
arg_pair	при помощи функции proc_open() ||| resource $process	count=1
arg_pair	адресу репозитория и ||| int $revision_no	count=1
return	указанного в filename проверяя ||| bool	count=1
arg_pair	подстроку строки haystack начиная ||| mixed $needle	count=1
function_name	настройки ||| quotes runtime	count=2
namespace	или массив в ||| function	count=2
return	или удалённом x ||| bool	count=1
namespace	эта функция преобразует ||| function	count=1
return	вхождения needle ||| string	count=1
function_name	производит верификацию ||| php	count=1
function_name	url адресу репозитория и ||| ls	count=1
arg_pair	значение находится ||| float $value	count=1
arg_pair	truetype текста ||| string $fontfile string $text	count=1
arg_pair	записываются в него такими ||| resource $out	count=1
function_name	выполнение с высоким ||| high	count=1
function	экранирует спецсимволы [arg_pair_2] ||| [function_name_1] bytea [arg_pair_2]	count=2
function_name	операции curl ||| curl	count=1
return	/ ||| mixed	count=1
arg_pair	проверяет определен ли указанный ||| string $interface_name bool $autoload	count=1
namespace	если ||| pdo	count=1
function_name	на генерацию фрагментов ||| build excerpts	count=2
function	класса [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	массиве targets ||| svn commit	count=1
namespace	указанный в качестве ||| function	count=1
arg_pair	команду command и ||| string $command	count=1
arg_pair	конкретной ||| string $repos_url	count=1
return	включая его и ||| string	count=1
function_name	в большой объект ||| pg lo	count=1
function_name	возвращает размер ||| ftp size	count=1
arg_pair	вхождения needle ||| string $haystack mixed $needle	count=1
function_name	вызывается когда следующий элемент ||| next element	count=1
namespace	или верхний регистр ||| function	count=1
namespace	итератора файловой системы ||| filesystemiterator	count=1
arg_pair	заданном потоке stream в ||| resource $stream	count=1
return	объекта ||| oci-lob	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] error [function_name_2]	count=1
return	автоматического определения кодировок ||| mixed	count=1
arg_pair	и до ||| mixed $needle	count=1
function_name	получает ||| xml get current	count=1
arg_pair	hostname ||| string $hostname	count=1
function_name	символьных данных [function_name_2] ||| [function_name_2] set [function_name_1]	count=2
function_name	интерфейс ||| interface	count=1
function_name	вернет временную зону и ||| time zone by country	count=1
function_name	буфер вывода возвращая ||| flush	count=1
function_name	выбирает базу данных ||| db	count=1
return	haystack начиная с ||| string	count=1
function_name	function_name ||| exists	count=1
arg_pair	задачу для параллельной работы ||| mixed $context string $unique	count=3
arg_pair	imagecolorallocate() ||| int $color	count=1
function_name	[function_name_1] высокоприоритетную ||| [function_name_1] task [function_name_2]	count=1
function_name	строк полученных разбиением ||| explode	count=1
return	установка / получение ||| mixed	count=1
function_name	текущий вызов стека в ||| apd callstack	count=1
function_name	позицию первого вхождения ||| mb stripos	count=1
arg_pair	best algorithms by oliver ||| string $second	count=1
arg_pair	ключей функцию предоставленную пользователем ||| callable $key_compare_func	count=1
namespace	регистр если этот ||| function	count=3
function_name	ваш собственный фильтр ||| stream filter register	count=1
function_name	состав которого входит функция ||| get extension	count=1
function_name	большой объект ||| pg lo import	count=1
arg_pair	подстроку строки haystack ||| string $haystack mixed $needle	count=1
function_name	возвращает позицию первого вхождения ||| iconv strpos	count=1
function_name	имя класса которое будет ||| class	count=1
function_name	в ||| mb detect order	count=2
function_name	функции ||| mb output handler	count=2
function_name	удалённом x ||| animate images	count=1
arg_pair	года ||| int $calendar int $month	count=1
function_name	с пространстве ||| ns	count=1
arg_pair	устанавливает ||| resource $image	count=1
function	сокет [arg_pair_2] ||| [function_name_1] sendto resource $socket [arg_pair_2]	count=1
function_name	находит элемент ||| locate	count=1
namespace	в ||| gearmanworker	count=1
function_name	xor двух gmp чисел ||| xor	count=1
namespace	сообщает если ||| tidynode	count=1
arg_pair	неудачей если ключ key ||| string $key mixed $value	count=1
namespace	соединение с ||| pdo	count=1
namespace	что является ||| iteratoriterator	count=1
return	best algorithms ||| int	count=1
arg_pair	с форматом csv ||| string $delimiter string $enclosure	count=1
function_name	считывает следующую ||| read	count=1
arg_pair	url адресу репозитория и ||| string $repos_url	count=1
return	false ||| void	count=2
function_name	с базой данных postgresql ||| pg connect	count=1
return	возвращает количество ||| int	count=1
arg_pair	с другими http заголовками ||| int $expire	count=1
function_name	classics: implementing ||| similar	count=1
function_name	описанному в ||| similar text	count=1
function_name	возвращает xml переданный ||| get	count=1
function_name	число ||| intval	count=2
arg_pair	возвращает ссылающийся на ||| string $encoding string $separator	count=1
return	возвращает строку содержащую код ||| string	count=1
function_name	заданном году ||| easter	count=2
function_name	типа bytea ||| bytea	count=1
function_name	устанавливает значения [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	данных и переподключается если ||| function	count=1
function_name	именами базовых классов заданного ||| parents	count=1
namespace	[namespace] символическую ссылку ||| [namespace]	count=1
return	возвращает строку содержащую ||| string	count=1
function_name	fflush() ||| stream flush	count=1
function_name	[function_name_1] имени ||| [function_name_2] [function_name_1]	count=3
function_name	возвращает параметры ||| get cookie params	count=1
arg_pair	url адресу репозитория ||| int $revision_no	count=1
function_name	используя алгоритм натуральной ||| natcasesort	count=1
function_name	возвращает дату релиза imagemagick ||| get release date	count=1
function_name	веб-сервера и сервером postgresql ||| pg	count=1
arg_pair	oliver ||| string $second	count=1
function_name	датаграммный сокет ||| socket server	count=1
arg_pair	значение будет сохранено только ||| mixed $value	count=1
namespace	закрывает ||| function	count=2
function_name	флаги настройки объекта ||| flags	count=1
arg_pair	memcached::get() за исключением того ||| callable $cache_cb float $cas_token	count=1
function_name	gmp в ||| gmp intval	count=1
function_name	механизмов ||| mb detect	count=1
return	/ ||| bool	count=1
function_name	of ||| ps curveto	count=2
function_name	существует ||| exists	count=1
arg_pair	описанному в programming ||| string $first string $second	count=1
function_name	в ||| text	count=1
arg_pair	аналогично memcached::getdelayed() за исключением ||| bool $with_cas callable $value_cb	count=1
function_name	[function_name_1] результата запроса ||| [function_name_2] [function_name_1]	count=4
function_name	99% пользователей ||| bson	count=1
function_name	возвращает позицию первого ||| stripos	count=1
arg_pair	параметре offset ||| string $key int $offset	count=1
arg_pair	строку содержащую [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	метод производит анимацию изображения ||| images	count=1
function_name	выбирает все строки из ||| all	count=1
return	виде массива ||| array	count=2
return	текущее активное значение настройки ||| bool	count=1
function_name	и сохраняет png изображение ||| imagesavealpha	count=1
function_name	возвращает количество рядов ||| rows	count=1
arg_pair	опционально для конкретной ревизии ||| string $repos_url int $revision_no	count=1
namespace	регистр если этот символ ||| function	count=3
rest	массив с [function_2] ||| [return_1] [function_2]	count=1
arg_pair	сопоставляет [arg_pair] ||| [arg_pair]	count=1
arg_pair	строит запрос по url ||| bool $recurse bool $peg	count=1
arg_pair	экспортирует ключ fingerprint ||| resource $identifier string $fingerprint	count=1
namespace	производит ||| imagick	count=1
return	обработчика ожидать задания от ||| bool	count=1
arg_pair	с центром в заданных ||| int $cy	count=1
arg_pair	описателем fd на значение ||| mixed $fd	count=1
function_name	filename проверяя ||| check	count=1
arg_pair	выполняет команду command ||| string $command int $return_var	count=1
function_name	символы в переменных vars ||| convert variables	count=1
namespace	верификацию файла ||| function	count=1
arg_pair	в fd ||| mixed $fd int $mode	count=1
arg_pair	кавычки если требуется ||| string $string	count=1
arg_pair	символ c вертикально на ||| string $c	count=1
function_name	ошибки xml анализатора в ||| xml error	count=1
function_name	получает ||| get path	count=1
function_name	для удаления ||| delete	count=1
namespace	или индексного массива ||| function	count=1
arg_pair	добавяет файл ||| string $contents	count=1
arg_pair	x y ||| float $y	count=1
namespace	файла ||| function	count=1
return	и переданный ||| void	count=1
arg_pair	строку input ||| string $input int $pad_length	count=1
namespace	файл ||| splfileinfo	count=1
function_name	с ||| compare	count=1
arg_pair	адресу репозитория ||| int $revision_no	count=1
arg_pair	координаты 0 0 ||| int $x	count=1
function_name	которых callback-функция __autoload() ||| spl autoload extensions	count=1
function_name	затем удаляет текущий ||| clean	count=1
arg_pair	список файлов ||| string $repos_url	count=1
arg_pair	запрос по url адресу ||| string $repos_url int $revision_no	count=1
namespace	синтаксиса производит верификацию файла ||| function	count=1
return	возвращает строку с ||| string	count=4
function_name	обратный вызов статуса ||| add task status	count=1
function_name	ftp-сервера ||| ftp	count=1
function_name	php ||| gmp	count=1
arg_pair	центра ||| int $cx	count=1
function_name	в системный журнал ||| closelog	count=1
function_name	[function_name_1] mp3-файле ||| [function_name_2] get [function_name_1]	count=1
function_name	временную зону и ||| time zone by country and region	count=1
function_name	задает текущее активное значение ||| magic	count=1
function_name	список имен таблиц ||| list tables	count=1
function_name	возвращает минимальную версию ||| get version	count=3
namespace	соединение с базой ||| pdo	count=1
return	производит relaxng [return] документа основываясь ||| [return]	count=1
namespace	и [namespace] ||| [namespace]	count=3
arg_pair	символы в unescaped_string ||| string $unescaped_string	count=1
arg_pair	ошибки в коде ||| string $filename string $error_message	count=1
arg_pair	y до ||| float $y	count=1
return	файл ||| bool	count=1
function_name	url адресу репозитория и ||| svn	count=1
return	возвращая соединение ||| bool	count=1
function_name	функции preg_replace() ||| preg filter	count=1
function_name	специальные символы ||| quote	count=1
arg_pair	репозитория и получает список ||| string $repos_url	count=1
arg_pair	возвращает подстроку ||| mixed $needle	count=1
function_name	объясняя ошибку сгенерированную ||| error	count=1
function_name	проверку синтаксиса производит верификацию ||| php	count=1
function_name	является ||| handler	count=1
arg_pair	записей сохраненных ||| resource $link_identifier resource $result_identifier	count=1
function_name	операции поиска ||| ldap count	count=1
arg_pair	в строке с данными ||| string $data	count=1
return	юлианском летоисчислении ||| string	count=1
arg_pair	адресу ||| string $repos_url int $revision_no	count=1
function_name	строке subject все совпадения ||| preg match	count=1
function_name	статуса ||| task status	count=1
function_name	возвращает последовательность элементов ||| slice	count=1
arg_pair	данным смещением ||| int $max_matches int $cutoff	count=1
arg_pair	и получает ||| string $repos_url int $revision_no	count=1
arg_pair	и директорий опционально ||| bool $recurse	count=1
arg_pair	счисления base ||| gmp $gmpnumber int $base	count=1
function_name	директорий опционально ||| svn	count=1
function_name	[function_name_1] дескриптор задания ||| [function_name_2] [function_name_1]	count=6
namespace	синтаксиса ||| function	count=1
arg_pair	и возвращает ссылающийся ||| string $separator	count=1
function_name	устанавливает опорной точку ||| set	count=1
arg_pair	алгоритму описанному в ||| string $second	count=1
arg_pair	запроса полученного [arg_pair] помощью ||| [arg_pair]	count=1
function_name	index в ||| offset	count=1
function_name	записывает ||| write	count=4
arg_pair	сохраненных в ||| resource $result_identifier	count=1
function_name	preg_replace() за исключением того ||| preg replace	count=1
function_name	значение настройки ||| runtime	count=1
function	[function_name_1] файла ||| [function_name_1] [arg_pair_2]	count=5
function_name	помощью sphinxclient::addquery получает ||| run queries	count=1
function_name	определению в бинарном ||| geoip database info	count=1
arg_pair	сравнивает ||| mixed $value1	count=1
function_name	следующую запись в ||| zip	count=1
function	вызов статуса [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	ее в ||| array $ctor_args	count=1
return	качестве ||| void	count=1
arg_pair	из переданного итератора iterator ||| iterator $iterator	count=1
function_name	возвращает цвет в виде ||| get color	count=1
function_name	функция возвращает версию сервера ||| mysqli get server version	count=1
arg_pair	создана функциями imagecolorallocate() или ||| resource $image int $color	count=1
arg_pair	указанную команду command и ||| string $command int $return_var	count=1
function_name	filename проверяя ошибки в ||| php	count=1
return	пока следующий вызов pdo::begintransaction() ||| bool	count=1
return	считывает следующую запись ||| resource	count=1
function_name	имя класса объекты ||| set info class	count=1
function_name	функция возвращает все ||| get	count=1
function_name	вернет временную зону ||| time zone	count=1
function_name	с правилами в bbcode_container ||| bbcode parse	count=1
arg_pair	csv ||| string $enclosure	count=1
function_name	методу memcached::append() ||| append by	count=1
function_name	возвращает версию клиента в ||| get client version	count=1
function_name	ob_start() ||| output	count=1
function_name	код ошибки ||| errno	count=1
function_name	[function_name_1] высокоприоритетную ||| [function_name_2] [function_name_1]	count=1
return	время ||| int	count=1
function_name	в sql-запросе в ||| escape	count=1
arg_pair	файлов и директорий опционально ||| bool $recurse	count=1
return	считывает следующую запись в ||| resource	count=1
return	тех ||| bool	count=1
function_name	объекты [function_name] другом ||| [function_name]	count=1
arg_pair	сохраненных ||| resource $link_identifier resource $result_identifier	count=1
function_name	ширину ||| width	count=1
function_name	сравнения значений [function_name] callback-функцию ||| [function_name]	count=1
function_name	время рассвета ||| date sunrise	count=1
function_name	используемого для ||| info	count=1
arg_pair	директорий опционально ||| int $revision_no	count=1
namespace	установленный функцией ||| function	count=1
arg_pair	строкой replacement и возвращает ||| mixed $string mixed $replacement	count=1
return	строку в ||| string	count=2
namespace	implementing the worlds ||| function	count=1
function_name	с первого ||| strstr	count=1
function_name	[function_name_1] элемента ||| [function_name_2] [function_name_1]	count=6
function_name	возвращает минимальную [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	path в репозиторий по ||| string $path	count=1
function_name	функции preg_replace() за ||| preg filter	count=1
function_name	возвращает название ||| geoip region name	count=1
function_name	curl и ||| curl close	count=1
return	возвращает ||| mixed	count=3
function_name	всех локальных интерфейсах указанный ||| socket create listen	count=1
function_name	позицию первого вхождения ||| iconv strpos	count=2
return	best algorithms by oliver ||| int	count=1
function_name	с ||| mysql data seek	count=1
arg_pair	[arg_pair_1] string на ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	с ||| data seek	count=1
function_name	и при закрытии потока ||| stream	count=1
function_name	в programming ||| text	count=1
arg_pair	возвращает ||| string $path	count=3
function_name	по ||| similar	count=1
namespace	документ ||| domdocument	count=5
function_name	первый атрибут в ||| first attribute	count=1
function_name	перед текущим элементом ||| prefix	count=1
function_name	в виде ассоциативного ||| geometry	count=1
return	the worlds ||| int	count=1
arg_pair	устанавливает флаг сохранять ||| resource $image	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] [function_name_2]	count=71
function_name	данная функция ||| svn	count=1
namespace	внутреннего итератора дочерние элементы ||| recursivefilteriterator	count=1
function_name	с режимом mode ||| convert case	count=1
function_name	на результат [function_name] баз данных ||| mysql [function_name]	count=1
function_name	utf-8 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	spl очереди [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	strcasecmp() за исключением того ||| strncasecmp	count=1
function_name	задает имя класса ||| set info class	count=1
function_name	число дней ||| jdtofrench	count=1
namespace	для текущего времени если ||| function	count=1
function	[function_name_1] атрибут property ||| [function_name_1] mixed $class [arg_pair_2]	count=1
function_name	цвет объекта imagickpixel ||| color as	count=1
namespace	ли контейнер заданный ||| splobjectstorage	count=1
arg_pair	target с именем link ||| string $target string $link	count=1
function_name	об ||| error	count=1
function_name	или получено от сервера ||| free statement	count=1
function_name	возвращает цвет ||| get color as string	count=1
function_name	сервера [function_name] и ||| [function_name] server	count=1
arg_pair	заданную аргументом ||| resource $ftp_stream	count=1
arg_pair	в параметре offset ||| int $offset	count=1
arg_pair	домен domain для ||| string $domain string $message	count=1
arg_pair	строку str ||| string $str string $encoding	count=2
function_name	несколько случайных значений из ||| rand	count=1
function_name	неразобранных объявлений сущностей ||| set unparsed entity decl	count=1
function_name	результат [function_name] баз данных ||| mysql [function_name]	count=1
function_name	был преобразован в ||| lcfirst	count=1
function_name	возвращает все имеющиеся в ||| get	count=1
namespace	кавычки если требуется и ||| pdo	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] cookie [function_name_2]	count=1
function_name	[function_name_1] имя файла ||| [function_name_2] [function_name_1]	count=1
return	возвращает true ||| bool	count=2
namespace	всю информацию альфа ||| function	count=1
namespace	с каталогом и переданный ||| function	count=1
namespace	указатель directoryiterator ||| directoryiterator	count=1
function_name	mime kopfzeile в ||| iconv mime encode	count=1
function_name	создаёт новый объект ||| construct	count=2
arg_pair	value2 ||| mixed $value2	count=1
function_name	[function_name_1] шестнадцатеричными цифрами ||| [function_name_2] [function_name_1]	count=2
namespace	производит анимацию изображения ||| imagick	count=1
namespace	в юлианском летоисчислении в ||| function	count=1
function_name	эта функция создает ||| create	count=2
function_name	такими функциями как gettext() ||| textdomain	count=1
function_name	filename проверяя ошибки ||| check	count=1
namespace	базой данных в ||| pdo	count=1
arg_pair	определяет будут ли объединённые ||| bool $flag	count=1
return	значение настройки ||| bool	count=1
function_name	по умолчанию по ||| default	count=1
function_name	функция возвращает название региона ||| region name by	count=1
function_name	специальный fifo файл который ||| posix mkfifo	count=1
function_name	текущего ||| posix	count=1
return	php integer ||| int	count=1
function_name	используемого для соединения переданного ||| info	count=1
return	режиме ввода ||| bool	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] image [function_name_2]	count=5
function_name	возвращает информацию о таблице ||| mysql list fields	count=1
return	провала в результате возникновения ||| bool	count=1
function_name	целое число ||| gmp intval	count=1
function	передает ему [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	эта функция создает ||| create text node	count=1
function_name	формате пар ключ-значение ||| status	count=1
function_name	расширение ||| to extension	count=1
namespace	получает список файлов ||| function	count=1
return	данных в режим ||| bool	count=1
namespace	включая ||| function	count=1
arg_pair	указывать callback ||| callable $callback	count=1
return	строк по алгоритму описанному ||| int	count=1
function_name	с правилами в bbcode_container ||| bbcode	count=1
namespace	итератор ||| norewinditerator	count=1
function_name	remote_file с ftp-сервера ||| fget	count=1
return	и переданный в ||| void	count=1
return	expression ||| domnodelist	count=1
function_name	с регулярным выражением ||| mb ereg	count=1
namespace	searchd выполняет ||| sphinxclient	count=1
function_name	устанавливает опорной точку для ||| set	count=1
function_name	возвращает либо ||| get	count=1
function_name	[function_name_1] запроса для ||| [function_name_2] [function_name_1]	count=2
namespace	юлианском летоисчислении в ||| function	count=1
function_name	определяет к [function_name] элемент directoryiterator ||| [function_name]	count=1
function_name	записи для удаления ||| delete	count=1
function_name	преобразует число gmp в ||| intval	count=1
return	получает числовой код ||| int	count=1
arg_pair	возвращает подстроку строки ||| string $haystack	count=1
function_name	classics: ||| text	count=1
function_name	[function_name] порядку следующими ||| [function_name] timezone	count=1
namespace	к файлу или ||| function	count=1
arg_pair	string на заданных координатах ||| string $string	count=1
return	если ||| bool	count=1
arg_pair	вхождения search в ||| mixed $replace	count=2
function	расширенного [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	о расширении ||| reflectionextension	count=1
function_name	[function_name_1] контекста ||| [function_name_2] set [function_name_1]	count=1
function_name	директории заданного в zip_entry ||| zip entry compressionmethod	count=1
arg_pair	основе части ||| int $width	count=1
function_name	текущий тип компрессии изображения ||| image compression	count=1
arg_pair	именем localname текущего элемента ||| string $localname	count=1
function_name	последовательность элементов ||| slice	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] get [function_name_1]	count=6
namespace	и до конца ||| function	count=1
function_name	возвращает позицию первого вхождения ||| stripos	count=1
function_name	by oliver isbn ||| text	count=1
function_name	функция сливает ||| array merge	count=1
namespace	задает ||| function	count=1
function_name	значение ||| runtime	count=1
arg_pair	[arg_pair_1] пикселах ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	действующим ресурсом сокета ||| socket	count=1
function_name	виде ассоциативного ||| image geometry	count=1
function	[function_name_1] строку data ||| [function_name_1] [arg_pair_2]	count=1
return	с value2 ||| int	count=1
arg_pair	размером до maxlength байт ||| int $maxlength	count=1
function	[function_name_1] stream ||| [arg_pair_2] [function_name_1]	count=1
function_name	декодирует ||| decode headers	count=2
function_name	utf-8 в формат utf-16 ||| utf8 to utf16	count=1
function_name	возвращает хэшированную ||| crypt	count=1
function_name	опционально для конкретной ревизии ||| svn ls	count=1
function_name	байтах ||| size	count=2
function_name	в качестве ||| chdir	count=1
function_name	static [function_name] ||| get [function_name]	count=2
return	и ||| void	count=2
function_name	строки haystack начиная ||| strstr	count=1
function_name	создает постоянное соединение с ||| oci pconnect	count=1
arg_pair	указанного в filename ||| string $filename	count=1
function_name	проверку синтаксиса производит ||| syntax	count=1
namespace	директорию ||| function	count=1
function_name	директорий опционально для конкретной ||| svn ls	count=1
arg_pair	работает аналогично memcached::add() за ||| mixed $value int $expiration	count=1
return	запись в ||| resource	count=1
function_name	вернет временную зону ||| geoip time zone by country	count=1
function	метод класса [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=1
function_name	[function_name_1] базу данных ||| [function_name_2] [function_name_1]	count=2
function_name	оставшуюся ||| contents	count=1
function_name	функции ob_start() ||| mb output handler	count=1
function_name	preg_replace() за исключением ||| preg replace	count=1
function_name	файлов и ||| svn	count=1
function	устанавливает новое [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] функцию ||| [function_name_1] [arg_pair_2]	count=1
function_name	isbn 0-131-00413-1 ||| similar text	count=1
function_name	самого верхнего ||| end clean	count=1
function_name	результате предыдущей ||| ldap	count=1
arg_pair	из ||| int $length	count=1
function_name	oliver isbn 0-131-00413-1 ||| text	count=1
arg_pair	assoc_array в приемлемые ||| string $table_name	count=1
arg_pair	classics: implementing the ||| string $first	count=1
function_name	об ошибке объясняя ошибку ||| error	count=1
function_name	код страны соответствующий имени ||| name	count=1
function_name	локальным ||| tag name ns	count=1
function_name	/ получение ||| mb language	count=1
return	начиная ||| string	count=1
function_name	dn ||| ldap explode dn	count=2
arg_pair	адресу репозитория ||| string $repos_url int $revision_no	count=1
return	локальным ||| void	count=1
arg_pair	массива array ||| array $array mixed $value1	count=1
arg_pair	truetype текста в ||| string $fontfile string $text	count=1
namespace	экранирует ||| pdo	count=1
function_name	до конца строки ||| strstr	count=1
arg_pair	использованием множественного числа в ||| string $msgid2	count=1
namespace	arrayobject преобразует в пригодное ||| arrayobject	count=1
function_name	удаления ||| delete	count=1
namespace	oliver isbn 0-131-00413-1 ||| function	count=1
function_name	по умолчанию [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	на заданную аргументом ||| resource $ftp_stream	count=1
namespace	преобразует ||| function	count=1
function_name	возвращает число ||| count	count=2
arg_pair	локальный файл ||| int $mode	count=2
arg_pair	получить с данным смещением ||| int $cutoff	count=1
function_name	[function_name_1] имя файла ||| [function_name_1] [function_name_2]	count=1
arg_pair	расстояние точки x y ||| float $y	count=1
function_name	возвращает список ошибок возникших ||| error list	count=1
function_name	для заданного xml анализатора ||| xml	count=1
arg_pair	включая ||| mixed $needle	count=1
arg_pair	значение переменной ||| mixed $var	count=1
return	переданный ||| void	count=1
namespace	является ли итератор действительным ||| norewinditerator	count=1
function_name	возвращает количество полей ||| mysql num fields	count=1
arg_pair	базе данных ||| resource $connection	count=2
arg_pair	итератора iterator ||| iterator $iterator	count=1
arg_pair	memcached::set() за исключением ||| int $expiration	count=1
function_name	низким приоритетом задачу в ||| low	count=1
function_name	число доступных предупреждений найденных ||| access count	count=1
function_name	utf-8 в [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	расширении в ||| reflectionextension	count=1
function_name	дескриптор задания ||| do	count=3
function_name	zip_entry ||| entry compressionmethod	count=2
namespace	или jpeg изображения ||| function	count=1
function_name	cyrus imap ||| cyrus bind	count=1
namespace	информацию ||| function	count=1
namespace	ли [namespace] в ||| [namespace]	count=1
arg_pair	является ||| string $contents	count=1
function_name	filename проверяя ||| syntax	count=1
arg_pair	переопределить текущий домен domain ||| string $domain string $msgid1	count=1
namespace	если аргумент ||| function	count=1
function_name	двух строк по ||| similar	count=1
function_name	строкового представления [function_name] соответствии ||| [function_name]	count=1
function	передает ему [arg_pair_2] ||| [function_name_1] object $object [arg_pair_2]	count=1
function_name	порядковый номер поля ||| pg field	count=1
function_name	аргументами ||| mktime	count=1
arg_pair	и получает список файлов ||| string $repos_url int $revision_no	count=1
return	удалённом ||| bool	count=1
return	и ||| bool	count=1
function_name	и получает список файлов ||| svn	count=1
function_name	дней в месяце month ||| in month	count=1
arg_pair	по ||| string $first string $second	count=1
namespace	останавливается если ||| function	count=1
function_name	строки haystack ||| strstr	count=1
function_name	[function_name_1] [function_name_2] num элементами со ||| [function_name_2] [function_name_1] int $start_index int $num	count=1
arg_pair	в результате ||| resource $link_identifier	count=1
function	[function_name_1] базе данных ||| [arg_pair_2] [function_name_1]	count=2
namespace	нижний или верхний ||| function	count=1
function_name	содержимое файла было изменено ||| get mtime	count=1
function	[function_name_1] команду command ||| [arg_pair_2] [function_name_1]	count=1
return	производит анимацию изображения ||| bool	count=1
function_name	список файлов и ||| svn	count=1
return	[return] которое ||| [return]	count=2
arg_pair	в участке разделяемой ||| int $shmid int $start	count=1
arg_pair	вхождения needle и включая ||| string $haystack	count=1
function_name	haystack начиная ||| strstr	count=1
namespace	установка / получение ||| function	count=1
return	[return] информацию ||| [return]	count=1
function_name	используя алгоритм натуральной сортировки ||| natcasesort	count=1
function_name	остаток ||| r	count=1
return	с помощью функции ||| string	count=1
function	[function_name_1] [arg_pair_2] в диапазоне 0..255 в ||| [function_name_1] chars [arg_pair_2]	count=2
arg_pair	oliver ||| string $first string $second	count=1
function_name	в ||| ldap count entries	count=2
namespace	php на ||| function	count=1
function_name	объясняя ошибку сгенерированную последней ||| error	count=1
function_name	закрывает ||| close	count=6
function_name	устанавливает блокирующий ||| stream set blocking	count=2
function_name	gearman_errno ||| get errno	count=1
namespace	результате предыдущей операции поиска ||| function	count=1
function_name	вычисляет ||| text	count=1
arg_pair	в текстовом ||| int $armor	count=1
namespace	с одним или несколькими ||| function	count=1
function_name	в spl очереди ||| spl	count=1
namespace	или неблокирующий ||| function	count=1
function_name	создает новый объект класса ||| construct	count=4
function_name	первый атрибут в ||| ldap first attribute	count=2
return	programming classics: ||| int	count=1
function_name	implementing the worlds best ||| similar text	count=1
function_name	текущую директорию на заданную ||| ftp chdir	count=1
namespace	[namespace] timestamp не ||| [namespace]	count=3
namespace	/ вывода заставляет ||| gearmanworker	count=1
arg_pair	команду command ftp-серверу ||| resource $ftp_stream string $command	count=1
arg_pair	адресу репозитория и получает ||| int $revision_no	count=1
arg_pair	занимаемый значением ||| int $field_number	count=1
arg_pair	и возвращает ссылающийся на ||| string $encoding string $separator	count=1
function_name	worlds best algorithms ||| similar	count=1
function_name	с помощью splfileobject::setmaxlinelen() ||| line len	count=1
namespace	является ли итератор ||| iteratoriterator	count=1
function_name	текущую позицию начиная ||| position	count=1
namespace	на заданную аргументом ||| function	count=1
function_name	возвращает короткое [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	документируемый ||| doc	count=2
arg_pair	number представленное в системе ||| int $frombase	count=1
function_name	получает документируемый комментарий ||| get doc comment	count=6
function_name	[function_name_1] ошибках связанного ||| [function_name_2] [function_name_1]	count=1
function_name	возвращает версию ||| version	count=1
namespace	переподключается если ||| function	count=1
namespace	дескриптор используемый для записи ||| function	count=1
function_name	во множественном числе ||| ngettext	count=1
function_name	название региона ||| geoip region name by	count=1
arg_pair	выполняет проверку синтаксиса производит ||| string $filename	count=1
return	функция ||| string	count=5
function_name	привязывает имя указанное в ||| bind	count=1
arg_pair	функцией ldap_get_dn() и ||| string $dn int $with_attrib	count=1
return	дескриптор ||| bool	count=1
namespace	обычный или ||| function	count=1
function_name	задает имя класса объекты ||| set info class	count=1
namespace	его и до конца ||| function	count=1
function_name	postgresql ||| pg	count=9
namespace	domxpath ||| domxpath	count=1
function_name	возвращает размер сжатого элемента ||| get packed size	count=1
function_name	[function_name_1] настройки ||| [function_name_1] [function_name_2]	count=1
function_name	возвращает внутренний ||| get inner	count=2
namespace	в filename ||| function	count=1
arg_pair	или историю правок в ||| int $end_revision	count=1
function_name	узел на соответствие asp ||| is asp	count=1
function_name	файла указанного в ||| php check syntax	count=1
function_name	имени хоста ||| by name	count=1
namespace	чтения или ||| function	count=1
function_name	возвращает идентификатор владельца ||| get owner	count=2
function_name	летоисчислении в ||| jdtofrench	count=1
arg_pair	создает многоугольник в ||| int $num_points int $color	count=1
function_name	атрибут с ||| attribute	count=1
function_name	best algorithms by oliver ||| text	count=1
function_name	читает большой объект ||| pg lo read all	count=1
function_name	базу данных dbase ||| dbase	count=1
namespace	дней в юлианском летоисчислении ||| function	count=1
function_name	устанавливает флаг сохранять всю ||| imagesavealpha	count=1
function_name	встроенным обработчиком ошибок ||| error	count=1
arg_pair	best algorithms by ||| string $first	count=1
arg_pair	изменения информации сохранённой ||| string $filename array $tag	count=1
function_name	адресу ||| ls	count=1
function_name	временную зону ||| time zone by country and	count=1
arg_pair	что аргументы формируют ||| int $minute	count=1
namespace	filename проверяя ошибки в ||| function	count=1
function_name	ошибку сгенерированную [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	ищет позицию ||| int	count=1
function_name	[function_name_1] имя ||| [function_name_1] file [function_name_2]	count=1
function	удаляет файл [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	и [return] с ||| [return]	count=1
function_name	механизмов автоматического ||| order	count=1
arg_pair	описателем fd ||| mixed $fd	count=2
return	дескриптор работы ||| string	count=1
return	список определенных ||| array	count=1
return	задание или нет ||| bool	count=1
function_name	[function_name_1] параметры ||| [function_name_1] [function_name_2]	count=4
function_name	classics: implementing ||| text	count=1
function_name	[function_name_1] код ошибки ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] атрибут property ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	новое значение будет сохранено ||| mixed $value	count=1
function_name	возвращает время рассвета для ||| date sunrise	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=523
arg_pair	приемлемые ||| string $table_name	count=1
function_name	атрибута [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	возвращает арккосинус числа ||| acos	count=1
arg_pair	callback-функцией ||| string $contents int $status	count=1
function_name	возвращает ||| ldap count entries	count=2
function_name	синтаксиса производит верификацию файла ||| php check syntax	count=1
arg_pair	соединённых и неразличимых ||| int $domain int $type	count=1
function_name	предыдущей операции ||| count	count=1
function_name	итератор ||| iterator	count=1
function_name	метод recursiveiteratoriterator::valid() впервые вернет ||| end	count=1
return	следующий ||| bool	count=1
function_name	вызове функции gettext() ||| textdomain	count=1
namespace	с дескриптором lob ||| oci-lob	count=1
function	месяце month [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	автоматического определения кодировок ||| order	count=1
function_name	переменных vars ||| convert variables	count=1
return	сравнивает value1 ||| int	count=1
function_name	правилами в bbcode_container ||| bbcode	count=1
function_name	выполнение с низким приоритетом ||| low	count=1
return	вывода ||| bool	count=1
arg_pair	меняет текущую ||| string $directory	count=1
arg_pair	функцию предоставленную ||| callable $key_compare_func	count=1
arg_pair	переключает вывод в текстовом ||| resource $identifier int $armor	count=1
function_name	активное значение ||| set magic	count=1
function	большой объект [arg_pair_2] ||| [function_name_1] write [arg_pair_2]	count=3
arg_pair	файла ||| string $filename string $name	count=2
function_name	и ||| strstr	count=2
arg_pair	преобразует дату юлианского ||| int $calendar	count=1
function_name	находит первое вхождение подстроки ||| strstr	count=1
return	сравнивает value1 с value2 ||| int	count=1
arg_pair	форматом csv ||| string $delimiter string $enclosure	count=1
function_name	функция создает ||| create text	count=1
namespace	указанный ||| function	count=1
namespace	поиска описания [namespace] интерфейса используя ||| [namespace]	count=1
function_name	определяет существует ||| exists	count=1
return	объект в значение ||| mixed	count=1
function_name	порядке в котором ||| by tag	count=1
function_name	включая ||| strstr	count=1
arg_pair	область с ||| int $height	count=1
function_name	задает текущее активное значение ||| quotes runtime	count=1
function_name	возвращает максимальный объем ||| memory get peak usage	count=1
function_name	начиная с нуля ||| elem	count=1
return	programming ||| int	count=1
function_name	пространства имён ||| namespace	count=1
function_name	by oliver isbn ||| similar	count=1
arg_pair	в строку [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	strcmp() за исключением ||| string $str2	count=1
namespace	свойство ||| reflectionproperty	count=2
return	best algorithms by ||| int	count=1
function_name	число gmp ||| intval	count=1
function_name	преобразует ||| gmp intval	count=2
arg_pair	региона соответствующей страны ||| string $region_code	count=1
arg_pair	truetype ||| string $fontfile string $text	count=1
function_name	получает значение атрибута ||| get attribute	count=1
function_name	текущего ||| mb	count=1
arg_pair	строку содержащую число number ||| string $number	count=1
function_name	programming ||| text	count=1
namespace	searchd ||| sphinxclient	count=3
namespace	обработчика ||| gearmanworker	count=1
function_name	расширение файла для ||| type to extension	count=1
function	[function_name_1] str по ||| function string [function_name_1] [arg_pair_2]	count=1
function_name	worlds best ||| text	count=1
function_name	из dom представления ||| save	count=1
arg_pair	-объект ||| mixed $config	count=1
function_name	устанавливает буферизацию ||| stream set write	count=1
arg_pair	truetype текста в ||| string $text	count=1
namespace	или более ||| function	count=1
function_name	subject с ||| preg	count=1
function	к потоку [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	memcached::replace() за ||| int $expiration	count=1
namespace	объектом imagick ||| imagick	count=1
namespace	свойства ||| reflectionproperty	count=1
arg_pair	base возводится в ||| gmp $exp	count=1
function_name	__autoload() ||| spl autoload extensions	count=2
arg_pair	функция подобна strcmp() ||| string $str2	count=1
function_name	базу данных dbase с ||| dbase	count=1
namespace	элементы двух [namespace] ||| [namespace]	count=1
arg_pair	файл ||| string $filename	count=1
function_name	байтах ||| shmop size	count=2
function_name	spl очереди метода __autoload ||| spl autoload	count=1
function_name	функция вернет временную зону ||| geoip time zone	count=1
arg_pair	в объекте imagickpixel ||| mixed $bordercolor	count=1
namespace	определенной пользователем функции ||| reflectionfunctionabstract	count=1
arg_pair	верификацию файла указанного в ||| string $filename	count=1
return	получает список ||| array	count=1
arg_pair	в ||| resource $image	count=1
namespace	получение содержимого ||| cachingiterator	count=1
namespace	резервирует или ||| function	count=1
function_name	записывает данные из параметра ||| write	count=1
function_name	в programming classics: implementing ||| text	count=1
arg_pair	вхождения строки needle ||| string $encoding	count=1
return	узел ||| domnode	count=1
function_name	последнего вхождения подстроки ||| strrpos	count=1
namespace	метод производит анимацию ||| imagick	count=1
arg_pair	fd ||| mixed $fd int $pri	count=1
function_name	получает записи из ||| dbase get record	count=1
function_name	работы присвоенный сервером ||| handle	count=1
arg_pair	worlds best algorithms ||| string $first	count=1
function_name	имя файла ||| file name	count=2
arg_pair	строит ||| bool $peg	count=1
namespace	документ приводит [namespace] к ||| [namespace]	count=1
function_name	разделяет dn ||| explode dn	count=1
namespace	верхнего уровня либо если ||| function	count=1
namespace	текущую сессию ||| sessionhandlerinterface	count=1
namespace	задания ||| gearmanworker	count=1
function_name	в классе указанная константа ||| has constant	count=1
function_name	[function_name_1] в mp3-файле ||| [function_name_2] [function_name_1]	count=1
function_name	в строке subject все ||| preg match all	count=1
namespace	выполнение запросов останавливается если ||| function	count=1
function_name	цвет объекта ||| color	count=1
function_name	выключает внутреннюю ||| internal	count=1
return	и до конца ||| string	count=1
function_name	поиска ||| ldap count	count=1
return	[return] элементы которого ||| [return]	count=1
function_name	в качестве параметра directory ||| chdir	count=1
function_name	специальные ||| quote	count=1
function_name	удалённое [function_name] ||| stream socket get [function_name]	count=3
function_name	атрибута ||| attribute	count=4
return	драйвера способом ||| string	count=1
function_name	является синтаксически правильным ||| is	count=1
arg_pair	первого вхождения ||| string $haystack mixed $needle	count=1
return	автоматической ||| bool	count=1
function_name	используемые в syslog функциях ||| define syslog variables	count=1
function_name	кодировок ||| detect	count=1
return	в ||| void	count=1
namespace	неблокирующем режиме ввода ||| gearmanworker	count=1
return	режим ||| bool	count=1
function_name	возвращает количество полей в ||| num fields	count=1
function_name	x сервере ||| animate	count=1
function_name	функции ||| handler	count=1
arg_pair	base ||| gmp $gmpnumber int $base	count=1
arg_pair	возвращает массив содержащий значения ||| array $array2	count=2
namespace	пока следующий вызов pdo::begintransaction() ||| pdo	count=1
function_name	remote_file с ||| fget	count=1
arg_pair	timestamp ||| int $timestamp int $format	count=2
return	выполнение и возвращает количество ||| int	count=1
arg_pair	подходящим для драйвера ||| string $string	count=1
arg_pair	указанную в параметре offset ||| string $key int $offset	count=1
function_name	the ||| similar text	count=2
arg_pair	были ли и куда ||| int $line	count=1
function_name	возвращает версию сервера ||| get server version	count=1
function_name	curl и освобождает ||| curl	count=1
function_name	устанавливает опорной точку ||| set geo anchor	count=1
function	[function_name_1] файла ||| [function_name_1] list [arg_pair_2]	count=1
function_name	интерфейс ||| implements interface	count=2
function_name	получает класс arrayiterator ||| get	count=1
return	заданную ||| bool	count=1
function_name	закрывает поток связанный ||| closedir	count=1
function_name	задает ||| set magic	count=1
function_name	возвращает ||| get parameter	count=2
arg_pair	[arg_pair_1] представленное ||| [arg_pair_2] [arg_pair_1]	count=1
arg_pair	директории ||| int $length	count=1
arg_pair	строку ||| string $charlist	count=1
arg_pair	задачу для ||| mixed $context string $unique	count=3
function_name	сущностей для xml анализатора ||| xml set unparsed entity	count=1
function_name	возвращает название региона соответствующей ||| region name	count=1
return	текущий ||| bool	count=1
arg_pair	результате предыдущей ||| resource $link_identifier	count=1
function_name	расширение ||| extension	count=2
function_name	функцию ||| func array	count=1
function_name	устанавливает ||| imagesavealpha	count=1
return	автоматического ||| mixed	count=1
arg_pair	возвращает подстроку строки haystack ||| string $haystack mixed $needle	count=1
function_name	получает список файлов ||| svn ls	count=1
arg_pair	аргументы формируют время по ||| int $hour int $minute	count=1
arg_pair	фильтр filtertype к изображению ||| int $filtertype	count=1
function_name	директорию на заданную ||| ftp	count=1
function_name	столбца следующей строки ||| fetch column	count=2
namespace	работе в неблокирующем режиме ||| gearmanworker	count=1
function_name	результате предыдущей ||| ldap count entries	count=1
function_name	возвращает версию сервера к ||| get server version	count=1
arg_pair	ревизии ||| int $revision_no	count=1
arg_pair	указанному индексу ||| mixed $index mixed $newval	count=1
function_name	был установлен для session_start() ||| output reset rewrite vars	count=1
arg_pair	содержащий все компоненты ||| int $component	count=1
function_name	вычисляет остаток ||| r	count=1
function_name	по гринвичу gmt ||| gmmktime	count=1
function_name	итератора массива ||| iterator	count=2
function_name	возвращает содержимое ||| get from	count=4
return	и [return] первого элемента ||| [return]	count=1
return	задание ||| bool	count=1
arg_pair	если ключ key ||| string $key	count=1
namespace	контейнер заданный ||| splobjectstorage	count=1
namespace	в programming classics: implementing ||| function	count=1
function	атрибута [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	закрывает поток ||| closedir	count=1
function_name	класса объекты которого ||| set info class	count=1
function_name	идентификатор владельца ||| owner	count=1
arg_pair	по алгоритму описанному в ||| string $first string $second	count=1
arg_pair	ereg_replace() за ||| string $pattern string $replacement	count=1
function_name	внутренней то есть не ||| internal	count=1
arg_pair	filtertype к изображению ||| resource $image int $filtertype	count=1
namespace	используемый для записи в ||| function	count=1
function_name	для конкретной ||| svn	count=1
namespace	хоста или ||| function	count=2
arg_pair	на основе части ||| int $srcy	count=1
arg_pair	на ||| mixed $subject	count=1
function_name	integer ||| gmp intval	count=2
arg_pair	по url адресу репозитория ||| bool $recurse	count=1
function_name	из директории ldap ||| ldap	count=1
function_name	безопасно использовать в sql-запросе ||| escape	count=1
function_name	и директорий опционально для ||| ls	count=1
function_name	удалённом x сервере ||| animate images	count=1
function_name	png изображение ||| imagesavealpha	count=1
namespace	чтения или записи ||| function	count=1
function_name	индексов ||| udiff uassoc	count=2
function_name	sqlstate ошибки вызванной в ||| mysqli stmt sqlstate	count=1
function_name	содержимого кэша ||| get cache	count=1
function_name	возвращает оставшуюся часть ||| get contents	count=2
function_name	[function_name_1] копию массива ||| [function_name_1] [function_name_2]	count=1
function_name	механизмов автоматического определения ||| detect order	count=1
namespace	или удалённом x сервере ||| imagick	count=1
function_name	возвращает название региона ||| name by	count=1
arg_pair	needle и включая его ||| string $haystack	count=1
function_name	цвет объекта imagickpixel ||| color as string	count=1
arg_pair	конкретной ревизии ||| string $repos_url int $revision_no	count=1
namespace	ввода ||| gearmanworker	count=1
arg_pair	преобразует дату юлианского календаря ||| int $calendar	count=1
function_name	параметров string ||| mb	count=1
arg_pair	с помощью ||| resource $identifier	count=1
namespace	в качестве параметра ||| function	count=2
function_name	формата utf-8 ||| pdf utf8	count=1
function_name	указанного календаря calendar ||| cal	count=1
function_name	ошибки ||| php check syntax	count=2
arg_pair	и отправляет в filename ||| string $filename	count=1
function_name	активное ||| runtime	count=1
function_name	на результат [function_name] ||| mysql [function_name]	count=1
function_name	для механизмов автоматического определения ||| mb detect	count=1
function_name	позволяет зарегистрировать ||| register	count=1
arg_pair	в строку haystack ||| string $haystack string $needle	count=2
function_name	вернет порядковый номер поля ||| field	count=1
function_name	метод ||| animate	count=1
return	создает массив содержащий ||| array	count=1
function_name	набор прав для ||| perms	count=1
function	[function_name_1] занимаемый значением ||| [function_name_1] [arg_pair_2]	count=4
function_name	строке subject все ||| preg	count=1
arg_pair	установлен с помощью gnupg_addsignkey ||| resource $identifier	count=1
function_name	времени заданным аргументами ||| mktime	count=1
function_name	cookie ||| cookie	count=1
function_name	контейнера объекты [function_name] другом контейнере ||| [function_name]	count=1
function_name	впервые вернет false ||| end	count=2
arg_pair	в filename ||| string $filename	count=2
function_name	http_response_code получит [function_name] ||| http [function_name]	count=2
function_name	для заданного xml ||| xml	count=1
namespace	вывод или ||| function	count=1
function_name	жанра ||| genre	count=1
arg_pair	заданного ||| resource $ftp_stream	count=1
function_name	и значения массива values ||| array combine	count=1
namespace	следующий вызов pdo::begintransaction() ||| pdo	count=1
function_name	[function_name_1] ошибке ||| [function_name_2] get [function_name_1]	count=1
function_name	текущий [function_name_2] ||| function int http [function_name_1] [function_name_2] int $response_code	count=2
function_name	подсчитывает количество элементов ||| iterator count	count=1
arg_pair	строку str ||| string $str	count=2
namespace	для выполнения задачи ||| gearmanclient	count=2
arg_pair	на основе аргумента path ||| string $path int $flags	count=1
arg_pair	строке с ||| resource $connection	count=1
function_name	экранирует спецсимволы в ||| escape	count=1
return	функция преобразует число gmp ||| int	count=1
function_name	текущее активное ||| magic quotes	count=1
function_name	возвращает размер сжатого ||| packed size	count=2
function_name	обнаружить dn записи в ||| ldap get dn	count=1
namespace	xml полученный ||| soapclient	count=1
function_name	возвращает либо информацию ||| get	count=1
arg_pair	строку string ||| string $string	count=1
namespace	текущего ||| function	count=1
return	является ||| bool	count=1
function_name	информацию о таблице с ||| mysql list fields	count=1
function_name	в ||| similar	count=1
rest	функция удаляет [function_2] ||| [return_1] [function_2]	count=1
function_name	возвращает квадратный корень из ||| sqrt	count=1
function_name	the worlds best ||| similar text	count=1
function_name	[function_name_1] mp3-файле ||| [function_name_2] [function_name_1]	count=1
arg_pair	заданный фильтр filtertype к ||| int $filtertype	count=1
function_name	функция ||| ls	count=1
arg_pair	[arg_pair] выводит ||| [arg_pair]	count=2
function_name	[function_name_1] итератор для ||| [function_name_2] [function_name_1]	count=2
function_name	запрос по url ||| ls	count=1
function_name	[function_name_1] шестнадцатеричными цифрами ||| [function_name_1] [function_name_2]	count=2
function_name	закрывает файл ||| eio close	count=1
function_name	ошибки ||| check	count=1
namespace	транзакцию возвращая ||| pdo	count=1
namespace	по url ||| function	count=1
function_name	__autoload() ||| spl autoload	count=1
arg_pair	algorithms by ||| string $first	count=1
arg_pair	в чистую директорию ||| string $frompath string $topath	count=1
function_name	версию [function_name_2] ||| [function_name_2] [function_name_1]	count=16
function_name	возвращает копирайт api imagemagick ||| get copyright	count=1
namespace	алгоритму ||| function	count=1
return	сервера ||| bool	count=1
function_name	функция возвращает список имён ||| list	count=1
function_name	получает класс ||| get array	count=1
function_name	[function_name_1] оставшуюся ||| [function_name_2] [function_name_1]	count=1
function_name	добавляет данные [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	preg_replace() за исключением ||| preg filter	count=1
return	информацию альфа компонента в ||| bool	count=1
function_name	класса которое ||| class	count=1
arg_pair	первого вхождения needle и ||| string $haystack	count=1
namespace	xml полученный в ||| soapclient	count=1
function_name	classics: implementing the ||| similar text	count=1
return	функция определяет mime-тип ||| string	count=1
namespace	указанного в filename ||| function	count=1
namespace	создает итератор recursivefilteriterator ||| recursivefilteriterator	count=1
arg_pair	файлов path1 и ||| string $path2	count=1
function_name	количество полей ||| num fields	count=1
return	filename ||| bool	count=1
namespace	исключающее или ||| function	count=1
function_name	данных которые выдал обработчик ||| data	count=1
function_name	массиве targets ||| commit	count=1
function_name	название указанного сокетного соединения ||| name	count=1
return	результате возникновения ||| bool	count=1
function_name	устанавливает новое значение ||| set	count=1
function_name	curl и освобождает все ||| curl	count=1
return	число gmp в ||| int	count=1
return	следующую ||| resource	count=1
function_name	режим ||| mode	count=3
namespace	специальные ||| pdo	count=1
arg_pair	адресу репозитория и ||| string $repos_url	count=1
function_name	строки ||| strstr	count=2
function_name	[function_name] страны ||| geoip country [function_name] by	count=3
function_name	задает текущее активное ||| quotes runtime	count=1
function_name	sql-запросе в ||| escape string	count=1
function_name	информацию ||| imagesavealpha	count=1
arg_pair	в результате предыдущей операции ||| resource $link_identifier	count=1
function_name	эта функция создает экземпляр ||| create text node	count=1
return	является ли итератор ||| bool	count=1
function_name	первое вхождение подстроки ||| mb strstr	count=1
function_name	вхождения ||| strstr	count=1
function_name	большой объект в ||| pg lo import	count=1
function_name	возвращает количество полей ||| num fields	count=1
function_name	возвращает ||| get elements by tag	count=2
function_name	использования в запросе sqlite ||| sqlite escape	count=1
function_name	производит ||| check	count=1
function_name	из директории ldap ||| ldap delete	count=1
function_name	в палитре ||| imagecolorset	count=1
arg_pair	текущий домен domain ||| string $msgid1	count=1
arg_pair	аналогично memcached::getdelayed() ||| callable $value_cb	count=1
arg_pair	принимает [arg_pair] добавляет обратный ||| [arg_pair]	count=1
arg_pair	получает список файлов ||| string $repos_url	count=1
function_name	с ним ||| destroy	count=1
function_name	[function_name] элемент ||| [function_name]	count=1
function_name	префикс пространства ||| lookup prefix	count=1
function_name	получает флаги настройки объекта ||| get flags	count=1
function_name	возвращает идентификатор жанра ||| id3 get genre id	count=1
function_name	как pdf_arc() ||| pdf arcn	count=1
arg_pair	репозитория и ||| bool $recurse	count=1
function	[function_name_1] функцию callback ||| [function_name_1] [arg_pair_2]	count=1
function_name	alias для пользовательского класса ||| class	count=1
arg_pair	опционально для ||| string $repos_url int $revision_no	count=1
arg_pair	и отправляет в filename ||| mixed $data	count=1
arg_pair	в коде ||| string $error_message	count=1
function_name	первый атрибут ||| attribute	count=1
arg_pair	определенное ||| int $connect_type	count=1
function_name	[function_name_1] имя класса ||| [function_name_1] iterator [function_name_2]	count=1
arg_pair	callback -функцию ||| callable $callback	count=1
function_name	производит верификацию файла указанного ||| check	count=1
function_name	экранирование спецсимволов в значениях ||| unescape	count=1
function_name	возвращает информацию о существующем ||| get meta data	count=1
function_name	класса ||| file class	count=2
arg_pair	опционально ||| bool $recurse	count=1
return	элемент массива ||| void	count=1
function_name	возвращает максимальный объем памяти ||| get peak usage	count=1
function_name	apache ||| apache	count=2
function_name	файла указанного ||| php check syntax	count=1
arg_pair	домен domain для одного ||| string $message	count=1
arg_pair	указанному индексу ||| mixed $newval	count=1
function_name	разделяет dn возвращенный ||| ldap explode dn	count=1
function	[function_name_1] и ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	регулярному выражению ||| string $pattern	count=1
function_name	определение ||| meta data	count=1
namespace	выполняющейся задачи ||| gearmanclient	count=3
function_name	и получает ||| svn	count=1
arg_pair	опционально для конкретной ||| string $repos_url int $revision_no	count=1
arg_pair	implementing ||| string $first	count=1
function_name	механизмов автоматического определения кодировок ||| mb detect	count=1
function_name	по алгоритму описанному ||| similar	count=1
namespace	до ||| pdo	count=1
return	узел с ||| domnode	count=1
function_name	строк по алгоритму ||| similar text	count=1
function_name	название региона соответствующей ||| name by	count=1
function_name	получает версию mnogosearch api ||| udm api version	count=1
function_name	имя класса которое ||| file class	count=1
function_name	в последнем soap-ответе ||| last response	count=1
function_name	удалённый файл с ||| nb	count=1
function_name	текущее активное ||| runtime	count=1
return	php на указанный ||| bool	count=1
function_name	закачивает данные из ||| nb fput	count=1
function_name	возвращает максимальный объем памяти ||| memory get	count=1
namespace	сообщением о последней обнаруженной ||| gearmanworker	count=1
namespace	возвращает дескриптор ||| gearmanjob	count=1
arg_pair	заключает строку в кавычки ||| int $parameter_type	count=1
function_name	превращает его в ||| dom import simplexml	count=1
arg_pair	в противовес одноцветной прозрачности ||| resource $image bool $saveflag	count=1
function_name	большой объект и ||| pg lo	count=1
function_name	utf-8 и ||| utf8	count=1
function_name	определяет к [function_name] ||| [function_name]	count=1
namespace	recursivecachingiterator который состоит из ||| recursivecachingiterator	count=1
function_name	атрибут ||| id attribute ns	count=2
function_name	[function_name_1] данных ||| [function_name_2] [function_name_1]	count=6
function_name	на результат [function_name] баз ||| mysql [function_name]	count=1
function_name	поиск соответствий ||| mb ereg search	count=1
return	массив ||| array	count=21
arg_pair	пытается возвратить [arg_pair] ||| [arg_pair]	count=1
arg_pair	до конца строки ||| string $haystack mixed $needle	count=1
function_name	атрибут ||| attribute	count=12
function_name	всех локальных интерфейсах указанный ||| create listen	count=1
namespace	коллекции ||| oci-collection	count=2
function_name	преобразует число ||| gmp	count=1
namespace	haystack начиная с первого ||| function	count=1
function_name	[function_name_1] фрагментов ||| [function_name_2] [function_name_1]	count=4
arg_pair	его и до конца ||| string $haystack mixed $needle	count=1
namespace	с базой данных в ||| pdo	count=1
arg_pair	позицию ||| int $offset	count=1
function_name	oliver isbn 0-131-00413-1 ||| similar	count=1
function_name	php ||| gmp intval	count=2
return	/ получение ||| mixed	count=1
function_name	создает экземпляр класса ||| create text	count=1
arg_pair	аналогично memcached::getdelayed() за исключением ||| callable $value_cb	count=1
arg_pair	указанного index опционально с ||| string $query	count=1
function_name	и ||| index weights	count=1
arg_pair	имя / значение ||| string $value	count=1
function_name	на ||| ftp	count=1
arg_pair	строку переданную в ||| string $key	count=1
arg_pair	x y ||| float $x float $y	count=1
arg_pair	с ||| string $query	count=1
function_name	палитре ||| imagecolorset	count=1
namespace	файл [namespace] символическую ||| [namespace]	count=1
arg_pair	именем localname ||| string $localname	count=1
namespace	преобразует число gmp в ||| function	count=1
function_name	часть строки string ||| substr	count=1
return	проверку синтаксиса производит ||| bool	count=1
function_name	lob-локатора ||| oci new descriptor	count=2
arg_pair	начиная ||| string $haystack	count=1
function_name	distortion metrics ||| get image channel distortions	count=1
namespace	вычисляет ||| function	count=1
namespace	сравнивает value1 с ||| splheap	count=1
function_name	опционально для конкретной ревизии ||| svn	count=1
function_name	используйте чтобы узнать ||| column count	count=1
namespace	для конкретной ревизии ||| function	count=1
function_name	получение возможного типа изображения ||| get image type	count=1
namespace	поток связанный с ||| function	count=1
function_name	sqlite ||| sqlite	count=1
function_name	[function_name] строки ||| [function_name] insert	count=1
function_name	на указанный ||| chdir	count=1
arg_pair	директорию ||| resource $ftp_stream	count=1
function_name	einer mime kopfzeile в ||| iconv mime encode	count=1
function_name	[function_name_1] неразобранных объявлений ||| [function_name_2] [function_name_1]	count=2
return	связанного с ресурсом ||| string	count=1
function_name	требуется и ||| quote	count=1
arg_pair	компонента ||| resource $image	count=1
function_name	считывает ||| read	count=1
function_name	способом ||| quote	count=1
arg_pair	подобна strcmp() за ||| string $str1 string $str2	count=1
arg_pair	опционально для конкретной ||| string $repos_url	count=1
function_name	функция возвращает версию сервера ||| get server version	count=1
function_name	получает документируемый [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function	ряду [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	внутренней то есть ||| internal	count=1
function_name	поток ||| closedir	count=1
function_name	содержащую наименование месяца ||| jdmonthname	count=1
function_name	или нескольких настроек ||| options	count=1
function_name	[function_name_1] блокирующий ||| [function_name_2] [function_name_1]	count=1
arg_pair	по ||| string $str int $width	count=1
return	ключами [return] значениями ||| [return]	count=1
arg_pair	цветом ||| int $x	count=1
arg_pair	синтаксиса ||| string $filename	count=1
function_name	число ||| count entries	count=2
function_name	entwerfen von einer mime ||| iconv mime encode	count=1
function_name	для механизмов ||| mb detect order	count=1
function_name	декодирует несколько полей заголовка ||| decode	count=1
function_name	следующую запись в ||| read	count=1
arg_pair	или записываются в него ||| resource $in resource $out	count=1
function_name	проверяет существует ли ||| exists	count=3
function_name	конкретной ||| ls	count=1
function_name	возвращает название региона ||| geoip region name by	count=1
function_name	верификацию файла указанного ||| check syntax	count=1
arg_pair	json строку и преобразует ||| string $json bool $assoc	count=1
function_name	возвращает число ||| ldap	count=1
namespace	связанные с дескриптором lob ||| oci-lob	count=1
function_name	цвет ||| color	count=2
function_name	ревизии ||| ls	count=1
arg_pair	classics: implementing the worlds ||| string $first	count=1
function_name	получает ||| svn	count=1
arg_pair	в параметре command ||| string $command string $mode	count=1
function_name	описанному в programming classics: ||| similar text	count=1
function_name	closedir() ||| dir closedir	count=1
return	механизмов автоматического ||| mixed	count=1
arg_pair	возвращает строку string в ||| string $string	count=1
function	string [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
namespace	статус searchd ||| sphinxclient	count=1
function_name	подсчитывает количество элементов ||| count	count=1
namespace	режиме ввода ||| gearmanworker	count=1
function_name	ошибки [function_name_2] ||| [function_name_2] [function_name_1]	count=5
arg_pair	строки ||| string $string	count=1
function_name	закрывает файл указанный ||| close	count=1
function_name	isbn ||| similar text	count=2
namespace	метод ||| reflectionmethod	count=9
function_name	число ||| ldap	count=1
return	проверяет является ли итератор ||| bool	count=1
function_name	возвращает имя [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	данная ||| array	count=1
function_name	закрывает ||| zip entry close	count=1
function_name	символьных данных [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	/ ||| language	count=1
function_name	создает большой объект ||| pg lo import	count=1
function_name	в filename проверяя ||| syntax	count=1
namespace	приложения которые ||| gearmanclient	count=1
function_name	директории ||| chown	count=1
function_name	для сокета ||| socket	count=1
function_name	значение настройки ||| set magic quotes runtime	count=1
function_name	символы в соответствющие ||| htmlentities	count=1
namespace	вхождения ||| function	count=1
arg_pair	сохраняет png изображение ||| resource $image	count=1
arg_pair	слева справа или ||| string $pad_string int $pad_type	count=1
function_name	определяет существует или ||| exists	count=1
function_name	функция устанавливает опцию указанную ||| set option	count=1
function_name	subject все совпадения с ||| preg match all	count=1
arg_pair	с данными ||| resource $connection string $data	count=1
function_name	ли значение переменной ||| is callable	count=1
function_name	функция создает ||| create	count=2
function_name	algorithms by oliver isbn ||| similar text	count=1
function_name	предыдущей ||| count	count=1
function_name	curl [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	является ли итератор допустимым ||| valid	count=1
function_name	specified distortion metrics этот ||| image channel distortions	count=1
namespace	если он передан ||| function	count=1
function_name	url адресу репозитория ||| svn ls	count=1
namespace	объект класса domcomment ||| domcomment	count=1
arg_pair	задачу ||| string $unique	count=3
function_name	задает текущее активное ||| quotes	count=1
function_name	секунд и ||| time nanosleep	count=1
function_name	для ||| detect order	count=2
function_name	значение атрибута ||| attribute ns	count=1
arg_pair	строки ||| string $str1 string $str2	count=1
namespace	recursivetreeiterator::valid() ||| recursivetreeiterator	count=1
function_name	предыдущей ||| ldap count entries	count=2
namespace	по алгоритму описанному ||| function	count=1
function_name	[function_name] после ||| [function_name]	count=3
function_name	его содержимое в виде ||| get	count=1
arg_pair	isbn 0-131-00413-1 ||| string $second	count=1
function_name	параметры соединения ||| option	count=1
function_name	описанному в programming ||| text	count=1
namespace	проверяя ошибки в ||| function	count=1
arg_pair	центром в ||| int $cy	count=1
function_name	recursivetreeiterator::valid() впервые вернет false ||| end	count=1
arg_pair	строку из ||| resource $pdfdoc	count=1
arg_pair	заданными координатами центра ||| int $cx	count=1
function_name	предыдущей операции ||| ldap	count=1
arg_pair	был прежде установлен с ||| resource $identifier	count=1
function_name	возвращает ||| count entries	count=2
function_name	с низким приоритетом ||| low	count=1
function_name	в programming classics: implementing ||| similar	count=1
function_name	для использования эффектов наложения ||| imagelayereffect	count=1
function_name	значение ||| in array	count=1
function_name	programming classics: implementing the ||| similar text	count=1
arg_pair	возвращает ее ||| array $ctor_args	count=1
function	функцию [arg_pair_2] ||| [function_name_1] callable $callback [arg_pair_2]	count=1
function_name	разбирает url ||| parse url	count=1
function_name	загружает файл remote_file с ||| fget	count=1
arg_pair	значение находится между ||| int $color float $value	count=1
arg_pair	функция подобна strcmp() за ||| string $str2	count=1
function_name	изображение ||| annotate image	count=1
namespace	получает список ||| function	count=1
function	[function_name_1] и пасхой ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	и до конца строки ||| string $haystack mixed $needle	count=1
arg_pair	imagecolorallocate() ||| resource $image int $color	count=1
namespace	от ||| gearmanworker	count=1
function_name	[function_name_1] параметры ||| [function_name_2] [function_name_1]	count=5
function_name	расширение файла ||| type to extension	count=1
function_name	цвет объекта imagickpixel в ||| color	count=1
function_name	ошибках связанного ||| field	count=1
arg_pair	в хранилище сессий ||| string $session_id string $session_data	count=1
return	дескриптор используемый для записи ||| bool	count=1
function_name	определения кодировок ||| order	count=1
arg_pair	эллипс с центром в ||| int $cy	count=1
function_name	строке subject ||| preg match all	count=1
arg_pair	из ||| resource $handle int $length	count=1
function_name	[function_name_1] атрибут в ||| [function_name_2] [function_name_1]	count=3
function_name	следующему файлу ||| next	count=1
return	на указанный ||| bool	count=1
function_name	в результате запроса ||| num	count=1
function_name	внутри строки подходящим для ||| quote	count=1
return	функция преобразует число ||| int	count=1
function_name	сериализует объект ||| json serialize	count=1
arg_pair	изменения информации сохранённой в ||| array $tag	count=1
return	массив содержащий список всех ||| array	count=1
namespace	заданную ||| function	count=1
return	needle и ||| string	count=1
function_name	позицию указателя поля ||| mysqli field tell	count=2
function_name	возвращая ||| flush	count=1
arg_pair	вычисляет ||| string $second	count=1
function_name	возвращает последовательность элементов ||| array slice	count=1
function_name	implementing ||| text	count=1
function_name	метод производит анимацию изображения ||| animate	count=1
arg_pair	с ||| string $pathname	count=1
function_name	большой объект в ||| pg lo	count=1
arg_pair	в приемлемые для sql ||| resource $connection string $table_name	count=1
function_name	внутренний итератор ||| inner iterator	count=2
return	флаг ||| bool	count=1
namespace	для записи в ||| function	count=1
function_name	настоящее время классами spl ||| spl classes	count=1
function_name	возвращает список [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	или историю ||| int $end_revision	count=1
function_name	элемента архива ||| get	count=1
arg_pair	список ||| bool $recurse	count=1
arg_pair	строку str из которой ||| string $str	count=1
function_name	возвращает ||| get peak	count=1
function_name	расширенный атрибут ||| xattr	count=1
return	и имя файла ||| string	count=1
return	в строку в ||| string	count=1
function_name	список методов в ||| methods	count=1
return	directory ||| bool	count=1
arg_pair	вычисляет ||| string $first	count=1
function_name	datetime::getlasterrors() ||| get last errors	count=1
function_name	задает текущее активное значение ||| set	count=1
function_name	mysql ||| mysql	count=1
arg_pair	аргументом timestamp ||| int $format	count=2
function_name	о состоянии буфера вывода ||| ob	count=1
arg_pair	ereg_replace() за исключением ||| string $pattern string $replacement	count=1
function_name	по url адресу репозитория ||| svn ls	count=1
namespace	указанный в ||| function	count=1
function_name	сокетов ||| socket pair	count=1
function_name	числовой код ошибки ||| udm	count=1
function_name	возвращает свойства ||| get	count=1
function_name	формат utf-8 ||| utf8	count=1
function_name	завершает сеанс curl и ||| curl close	count=1
arg_pair	строку переданную ||| string $key	count=1
return	переводит число дней ||| string	count=1
function_name	внутренний итератор для текущего ||| inner iterator	count=1
function_name	сокета и сохраняет их ||| socket	count=1
function_name	активное значение ||| set magic quotes runtime	count=1
function_name	в верхнем регистре ||| upper	count=1
function_name	символы внутри строки подходящим ||| quote	count=1
namespace	строках ||| function	count=1
namespace	закрывает дескриптор используемый ||| function	count=1
function_name	и до конца строки ||| strstr	count=1
arg_pair	в параметре plaintext текст ||| string $plaintext	count=1
arg_pair	начиная с ||| string $haystack	count=1
function	[function_name_1] также с ||| [function_name_1] [arg_pair_2]	count=3
function_name	возвращает ||| get elements	count=2
function_name	которые есть в ||| remove	count=1
arg_pair	функции ob_start() ||| string $contents	count=1
arg_pair	filtertype к изображению image ||| resource $image int $filtertype	count=1
return	recursivetreeiterator::valid() впервые вернет false ||| void	count=1
function_name	порядке в котором ||| by tag name	count=1
arg_pair	переключает вывод в текстовом ||| int $armor	count=1
namespace	класс встроенным в расширение ||| reflectionclass	count=1
function_name	remote_file с ftp-сервера и ||| ftp fget	count=1
namespace	setting в ||| function	count=1
arg_pair	[arg_pair] asii-кодами в ||| [arg_pair]	count=1
function_name	gmp ||| intval	count=1
arg_pair	увеличивает числовое значение записи ||| int $initial_value int $expiry	count=1
function_name	добавляет файл ||| add	count=1
function_name	составной оператор связанный ||| get image compose	count=1
function_name	локальным ||| ns	count=1
arg_pair	возвращает объект ||| resource $result	count=1
function_name	функция разбирает html содержащийся ||| load html	count=1
arg_pair	сохранять ||| resource $image	count=1
function_name	определения кодировок ||| mb detect order	count=1
function_name	массив в качестве ||| array	count=1
function_name	удаляет файл директорию ||| delete	count=1
function_name	версию сервера к которому ||| server version	count=1
function_name	возвращает число столбцов ||| count	count=1
function_name	[function_name_1] блокирующий ||| [function_name_1] [function_name_2]	count=1
function_name	определения кодировок ||| detect order	count=1
function_name	кавычки если требуется и ||| quote	count=1
function_name	версию клиента в виде ||| client version	count=1
arg_pair	str по ||| string $str int $start	count=1
function_name	для механизмов автоматического ||| mb detect	count=1
function_name	в ||| quote	count=1
function_name	возвращает ||| tidy get	count=1
function_name	верификацию файла ||| syntax	count=1
function_name	системы ||| unlink	count=1
function	последнего вхождения [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	recursiveiteratoriterator::valid() ||| end	count=1
function_name	значение настройки ||| magic	count=1
function_name	функция возвращает все имеющиеся ||| get	count=1
function_name	список ||| svn	count=1
namespace	классе ||| reflectionclass	count=2
function_name	распакованном состоянии ||| get unpacked	count=1
return	функция ||| array	count=1
function_name	веб-службы ||| types	count=1
function_name	генерацию [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	the worlds best algorithms ||| text	count=1
function_name	шаблоном подстановок оболочки ||| fnmatch	count=1
arg_pair	указанный в fd ||| int $pri	count=1
function_name	предыдущему узлу ||| prev	count=1
function	[function_name_1] с ||| [function_name_1] write [arg_pair_2]	count=2
arg_pair	строит запрос по ||| bool $peg	count=1
function_name	возвращает предупреждения и ||| get	count=1
namespace	ожидать задания ||| gearmanworker	count=1
function_name	атрибут с заданным локальным ||| id attribute	count=1
function_name	дней в ||| jdtofrench	count=1
arg_pair	ссылку path в ||| string $path	count=1
namespace	oci_result() или ||| function	count=1
arg_pair	строку содержащую ||| string $number	count=1
arg_pair	удаляет выбранную область ||| int $height	count=1
function_name	автоматического ||| detect order	count=2
arg_pair	на указанном local_socket ||| int $errno	count=1
function_name	by oliver isbn 0-131-00413-1 ||| text	count=1
return	начиная с ||| string	count=1
arg_pair	best algorithms ||| string $first string $second	count=1
function_name	автоматического определения кодировок в ||| order	count=1
function_name	название региона соответствующей ||| region name	count=1
function_name	изначально выделенные функцией oci_new_descriptor() ||| free	count=1
return	запрос по url адресу ||| array	count=1
function_name	позицию указателя [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	по url ||| array	count=1
function_name	число php ||| intval	count=1
function_name	возвращает название региона ||| region name by	count=1
arg_pair	была создана функциями imagecolorallocate() ||| resource $image int $color	count=1
function_name	количество полей ||| mysql num fields	count=1
namespace	кодировок в ||| function	count=1
arg_pair	сохранять всю информацию ||| resource $image	count=1
function_name	возвращает список ||| mysql list	count=2
function	строку [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	предыдущей операции ||| resource $link_identifier	count=1
function_name	theirself замечание : you ||| disable view	count=1
function_name	расширение файла для ||| to extension	count=1
namespace	массив array еще записи ||| arrayiterator	count=1
return	возвращает ||| string	count=5
function_name	результате предыдущей операции поиска ||| entries	count=1
function_name	ресурсы связанные с ним ||| destroy	count=1
function_name	string ||| mb	count=7
function_name	двух строк по ||| similar text	count=1
namespace	или нет ||| function	count=1
function_name	[function_name_1] атрибут в ||| [function_name_1] [function_name_2]	count=3
function_name	output by theirself ||| disable view	count=1
function_name	и ||| imagesavealpha	count=1
function_name	[function_name_1] часть ||| [function_name_2] [function_name_1]	count=2
function_name	best ||| similar	count=1
function_name	активное значение настройки ||| runtime	count=1
function_name	записей ||| count	count=1
arg_pair	изображения на основе части ||| int $width	count=1
function_name	идентификатор ||| oci	count=1
function_name	добавляет низкоприоритетную [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	для драйвера ||| pdo	count=1
arg_pair	удаляет пробелы ||| string $str string $character_mask	count=1
function_name	корневой каталог ||| chroot	count=1
function_name	с ||| delete multi by key	count=1
function_name	возвращает параметры cookie ||| get cookie params	count=2
function_name	генерирует пригодное ||| serialize	count=1
function_name	вернет порядковый номер поля ||| field num	count=1
function_name	output by theirself замечание ||| disable view	count=1
arg_pair	строку экранированную обратными слешами ||| string $charlist	count=1
arg_pair	возвращает информацию о ||| int $pri	count=1
return	на заданную ||| bool	count=1
arg_pair	значение ||| int $optname	count=1
function	[function_name_1] объект object ||| [function_name_1] subclass of [arg_pair_2]	count=3
function_name	xor двух gmp ||| gmp xor	count=1
function_name	версию версии id3-тега(тегов в ||| version	count=1
function_name	получение [function_name_2] ||| [function_name_1] image [function_name_2]	count=1
function_name	[function_name_1] curl ||| [function_name_2] [function_name_1]	count=2
arg_pair	ini в виде ||| bool $process_sections	count=1
function_name	наибольший общий делитель ||| gmp gcd	count=1
function	рамки вокруг [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	сравнивает value1 с ||| mixed $value1	count=1
arg_pair	для чтения каталога ||| string $directory	count=1
function_name	запросе sqlite ||| sqlite escape string	count=1
function_name	кодировку для [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	пор ||| bool	count=1
arg_pair	вхождения search ||| mixed $search mixed $replace	count=2
namespace	в режим автоматической фиксации ||| pdo	count=1
function_name	устанавливает буферизацию для ||| set write buffer	count=1
namespace	соединение с базой данных ||| pdo	count=1
function_name	[function_name_1] следующей строки ||| [function_name_2] [function_name_1]	count=2
return	сообщение ||| string	count=1
function_name	месяце month ||| in month	count=1
function_name	обнаружить dn ||| ldap get dn	count=1
arg_pair	времени в микросекундах ||| bool $more_entropy	count=1
function_name	первое вхождение подстроки ||| strstr	count=1
function_name	или каталог - прим.пер.) ||| delete	count=2
function_name	пространстве ||| ns	count=1
function_name	в формат utf-8 ||| utf8	count=1
function_name	имя файла соответствующей базы ||| db filename	count=1
function	обработчиком ошибок [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] идентификатор жанра ||| [function_name_1] [function_name_2]	count=1
arg_pair	преобразует дату юлианского календаря ||| int $jd	count=1
function_name	текущее ||| quotes runtime	count=2
namespace	recursivetreeiterator::valid() впервые ||| recursivetreeiterator	count=1
function_name	в результате предыдущей ||| count	count=1
function_name	код ошибки ||| udm errno	count=1
function_name	устанавливает буферизацию для операций ||| stream set	count=1
function_name	верхний регистр ||| strtoupper	count=1
function_name	функция преобразует ||| gmp	count=1
function_name	в ||| count	count=1
arg_pair	данная ||| string $repos_url	count=1
function_name	сообщает если узел ||| is	count=1
arg_pair	json строку и ||| string $json	count=1
arg_pair	needle и ||| string $haystack	count=1
arg_pair	функцию callback ||| callable $callback	count=1
function_name	базой данных postgresql ||| pg connect	count=1
return	возвращая ||| bool	count=1
arg_pair	файлов и ||| bool $recurse	count=1
function_name	анимацию ||| animate	count=1
arg_pair	заданный файл filename ||| string $filename	count=1
function_name	с ||| clip path image	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] external [function_name_1]	count=6
function_name	расширение файла ||| extension	count=2
arg_pair	best algorithms by oliver ||| string $first string $second	count=1
function_name	пространстве имен ||| ns	count=1
function_name	и директорий опционально ||| svn ls	count=1
function	[function_name_1] строке haystack ||| [arg_pair_2] [function_name_1]	count=3
namespace	файлу или ||| function	count=1
namespace	подходящим ||| pdo	count=1
function	[function_name_1] class ||| [arg_pair_2] [function_name_1]	count=3
namespace	помещения ||| recursivetreeiterator	count=1
return	для данного ||| string	count=1
function_name	атрибут с заданным локальным ||| set id attribute	count=1
arg_pair	текст string на заданных ||| string $string	count=1
namespace	[namespace] использует существующий ||| [namespace]	count=1
namespace	строку в кавычки ||| pdo	count=1
function_name	которых нет в ||| except	count=1
function_name	получает [function_name_2] ||| [function_name_2] [function_name_1]	count=29
return	массив с именами и ||| array	count=1
function_name	возвращает максимальный ||| memory get	count=1
function_name	установка ||| mb language	count=2
function_name	следующему узлу ||| next	count=2
namespace	предоставленного ассоциативного или ||| function	count=1
namespace	algorithms by oliver isbn ||| function	count=1
function_name	подсчитывает количество вхождений ||| count	count=1
arg_pair	центром в ||| int $cy int $width	count=1
function_name	ключами columns столбцы и ||| size	count=1
return	вхождения needle и включая ||| string	count=1
function_name	callback-функция __autoload() ||| spl autoload	count=1
function_name	потомки ||| call	count=1
namespace	текущее ||| function	count=1
namespace	by oliver isbn 0-131-00413-1 ||| function	count=1
function_name	класса которое ||| set file class	count=1
return	и возвращает массив в ||| array	count=1
function_name	в которых callback-функция __autoload() ||| spl autoload extensions	count=1
return	соединение с базой ||| bool	count=1
return	заставляет обработчика ||| bool	count=1
function_name	по ключам в обратном ||| krsort	count=1
function_name	[function_name_1] ftp ||| [function_name_2] [function_name_1]	count=7
function_name	веб-сервера и сервером postgresql ||| pg end	count=1
return	информации о расширении в ||| reflectionextension	count=1
function_name	значения атрибутов ||| attributes	count=1
function_name	iso-8859 в t61 ||| ldap 8859 to t61	count=1
function_name	заданным локальным ||| by tag name ns	count=1
function_name	получает первый атрибут ||| ldap first attribute	count=2
return	с помощью функции date_default_timezone_set() ||| string	count=1
function_name	не безопасна ||| strcoll	count=1
function_name	подобна strcasecmp() за исключением ||| strncasecmp	count=1
function_name	устанавливает кодировку для ||| set encoding	count=2
namespace	recursiveiteratoriterator::valid() ||| recursiveiteratoriterator	count=1
return	возникновения ||| bool	count=2
namespace	и получает ||| function	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] task [function_name_2]	count=4
function_name	соответствющие ||| htmlentities	count=1
return	файла ||| string	count=2
arg_pair	значение ||| mixed $value int $expiration	count=1
arg_pair	в строке haystack ||| string $needle	count=2
function_name	устанавливает ||| offset set	count=2
namespace	des [namespace] другого ||| [namespace]	count=1
function_name	число простым ||| prob prime	count=1
function_name	[function_name_1] объявленные классы ||| [function_name_1] [function_name_2]	count=1
arg_pair	точки x y ||| float $x float $y	count=1
return	опционально для конкретной ||| array	count=1
function_name	удаляет значение ||| offset unset	count=2
function_name	метод производит ||| animate images	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] list [arg_pair_2]	count=1
namespace	флаг сохранять всю ||| function	count=1
namespace	предыдущей ||| function	count=1
function_name	итератор для текущего элемента ||| iterator	count=1
arg_pair	строки подходящим ||| string $string	count=1
return	сообщает если узел ||| bool	count=1
arg_pair	на основе части ||| int $srcy int $width	count=1
arg_pair	запрос по ||| bool $recurse	count=1
function	[function_name_1] региона соответствующей ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	основе части ||| int $srcy	count=1
namespace	одно или ||| function	count=1
arg_pair	url ||| string $repos_url	count=1
arg_pair	заключает ||| int $parameter_type	count=1
return	файла указанного в ||| bool	count=1
function_name	[function_name_1] параметры ||| [function_name_1] cookie [function_name_2]	count=1
arg_pair	ключей функцию предоставленную ||| callable $key_compare_func	count=1
arg_pair	на ||| resource $handle	count=1
return	связанный ||| void	count=1
namespace	для механизмов ||| function	count=1
namespace	php на указанный в ||| function	count=1
namespace	устанавливает флаг сохранять всю ||| function	count=1
function_name	расшифровывает переданный [function_name] ключами ||| [function_name]	count=1
namespace	получает следующий ||| memcached	count=1
return	вызов ||| bool	count=1
arg_pair	path в ||| string $path	count=1
function	[function_name_1] определенное ||| [function_name_1] [arg_pair_2]	count=3
return	возвращает имя хоста с ||| string	count=1
function_name	возвращает число ||| ldap count entries	count=1
function_name	в строке subject все ||| preg match	count=1
function_name	добавляет одну или ||| add options	count=4
function_name	в ||| mb	count=1
function_name	0-131-00413-1 ||| text	count=1
arg_pair	по алгоритму описанному ||| string $first string $second	count=1
arg_pair	color в изображении image ||| int $y int $color	count=1
function_name	[function_name_1] имя класса ||| [function_name_2] [function_name_1]	count=1
arg_pair	isbn ||| string $second	count=1
arg_pair	возвращает строку ||| string $str	count=1
namespace	или бинарном режиме ||| function	count=1
function_name	в filename ||| php check	count=1
namespace	сравнивает value1 ||| splheap	count=1
function_name	датаграммный сокет ||| stream socket server	count=1
namespace	аргумент ||| reflectionparameter	count=2
function_name	в filename проверяя ошибки ||| php	count=1
function_name	nanoseconds число секунд и ||| time	count=1
namespace	filename проверяя ошибки ||| function	count=1
arg_pair	с локальным именем ||| string $namespaceuri	count=1
function_name	которого указан ||| fchmod	count=1
arg_pair	возвращает подстроку строки haystack ||| mixed $needle	count=1
function_name	sqlstate ошибки вызванной ||| sqlstate	count=1
function_name	a ||| gmp setbit	count=1
arg_pair	строки needle в ||| int $offset string $encoding	count=1
function_name	автоматического определения кодировок в ||| detect order	count=1
function_name	значение атрибута в ||| attribute ns	count=1
function	устанавливает новое [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	текущее активное значение настройки ||| quotes	count=1
function	[function_name_1] в строку ||| [arg_pair_2] [function_name_1]	count=1
function_name	возвращает id [function_name] ||| [function_name] insert	count=1
function_name	с ||| path image	count=1
function_name	поиска ||| count entries	count=2
function_name	вывода возвращая ||| flush	count=1
return	png ||| bool	count=1
namespace	в нижний или верхний ||| function	count=1
function_name	размер поля ||| field size	count=2
function_name	best algorithms ||| similar	count=1
return	режиме ||| bool	count=1
return	включает ||| void	count=1
namespace	ли контейнер ||| splobjectstorage	count=1
function_name	значение gearman_errno ||| get errno	count=1
return	требуется и ||| string	count=1
arg_pair	значение находится между ||| float $value	count=1
namespace	ассоциативного или индексного массива ||| function	count=1
function_name	и экранирует специальные символы ||| quote	count=1
return	аргументом ||| bool	count=1
arg_pair	the worlds best algorithms ||| string $first string $second	count=1
function_name	значение ||| set magic	count=1
function	[function_name_1] заданного файла ||| [function_name_1] [arg_pair_2]	count=2
function_name	возвращая [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	конкретной ревизии ||| svn	count=1
arg_pair	memcached::getdelayed() за исключением ||| callable $value_cb	count=1
function_name	[function_name] страны соответствующий ||| geoip country [function_name] by	count=3
arg_pair	для ||| string $repos_url	count=1
function_name	возвращает максимальный объем памяти ||| memory get peak	count=1
function_name	определена в пространстве имен ||| in namespace	count=1
function_name	соответствующий имени ||| name by name	count=1
function_name	значение ||| set	count=1
function_name	было установлено в gnupg_setsignmode ||| sign	count=1
function_name	число столбцов затронутых ||| mysqli field count	count=1
arg_pair	и ||| string $repos_url	count=2
return	url адресу репозитория и ||| array	count=1
function_name	подсчитывает сколько раз ||| substr count	count=1
arg_pair	записи новое значение будет ||| mixed $value	count=1
function_name	репозитория и получает список ||| svn ls	count=1
arg_pair	заголовками ||| int $expire	count=1
function_name	получение [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	функция вернет временную зону ||| time zone by country and	count=1
return	возвращает имя файла ||| string	count=1
namespace	класс встроенным ||| reflectionclass	count=1
function	из репозитория [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	в [function_name] ||| [function_name]	count=2
namespace	директорию на заданную ||| function	count=1
function_name	колонки ||| all columns	count=1
arg_pair	данных как из индексированного ||| int $record_number	count=1
arg_pair	path ||| bool $recursive	count=1
function_name	клиента ||| client	count=2
arg_pair	из gz-файла по указателю ||| resource $zp	count=1
function_name	секунд ||| time	count=1
function_name	возвращает ||| get image	count=2
arg_pair	опционально для конкретной ||| bool $recurse	count=1
arg_pair	и экранирует специальные ||| string $string	count=1
function_name	имя текущего рабочего каталога ||| getcwd	count=1
return	число в строку в ||| string	count=1
return	ob_start() ||| string	count=1
function_name	filename проверяя ошибки ||| check syntax	count=1
return	и до ||| string	count=1
function_name	filename проверяя ||| check syntax	count=1
function_name	активное значение настройки ||| set magic quotes	count=1
function	[function_name_1] команду command ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	url адресу ||| string $repos_url	count=1
function_name	идентична функции preg_replace() ||| preg	count=1
arg_pair	the worlds best algorithms ||| string $second	count=1
arg_pair	строки php ||| string $value string $type	count=1
arg_pair	предельное количество запросов ||| resource $grp int $limit	count=1
function_name	настройки ||| parse ini	count=1
return	в filename проверяя ||| bool	count=1
function_name	[function_name] другом ||| [function_name]	count=1
function_name	имя класса ||| set info class	count=1
namespace	потоковое или датаграммное ||| function	count=1
function_name	specified distortion ||| get image channel distortions	count=1
function_name	[function_name_1] поля ||| [function_name_2] [function_name_1]	count=12
function_name	записи в системный журнал ||| closelog	count=1
function_name	distortion metrics этот метод ||| get image channel distortions	count=1
namespace	проверку синтаксиса производит ||| function	count=1
function_name	возвращает либо информацию ||| get status	count=1
arg_pair	сравнивает value1 ||| mixed $value1 mixed $value2	count=1
arg_pair	value1 ||| mixed $value1	count=1
function_name	gnupg_setsignmode ||| sign	count=1
function_name	получает имя файла ||| get file name	count=2
function_name	и из репозитория в ||| svn	count=1
function_name	сокет ||| socket shutdown	count=2
function_name	вложенные элементы текущего элемента ||| get children	count=1
function	ошибок [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	число a ||| gmp $a gmp $b	count=1
arg_pair	атрибута файла ||| string $name	count=1
namespace	опционально ||| function	count=1
arg_pair	получает список файлов и ||| string $repos_url int $revision_no	count=1
arg_pair	указанный в fd ||| mixed $fd	count=1
arg_pair	из left_operand ||| string $left_operand	count=1
function_name	функции ob_start() ||| output handler	count=1
arg_pair	координатами центра ||| resource $image int $cx	count=1
arg_pair	возвратить [arg_pair] ||| [arg_pair]	count=1
namespace	строк ||| function	count=1
function_name	целое число ||| intval	count=1
return	добавляет setting в ||| bool	count=1
arg_pair	path2 ||| int $rev1	count=1
function_name	страны соответствующий имени ||| name	count=2
function_name	функции ||| output	count=1
namespace	тех пор пока следующий ||| pdo	count=1
function_name	получает первый атрибут в ||| first attribute	count=1
function_name	проверяет существует ли метод ||| method exists	count=1
arg_pair	внутри строки подходящим ||| string $string	count=1
function_name	[function_name_1] расширение ||| [function_name_1] [function_name_2]	count=1
arg_pair	список файлов и директорий ||| int $revision_no	count=1
function_name	объявляет атрибут ||| set id attribute	count=2
function_name	временную зону ||| time zone by	count=1
return	следующий вызов ||| bool	count=1
function_name	каталогом ||| closedir	count=1
function	[function_name_1] чисел a ||| [function_name_1] [arg_pair_2]	count=2
return	в виде массива ||| array	count=2
return	строки ||| string	count=6
arg_pair	хранилище сессий ||| string $session_id string $session_data	count=1
function	[function_name_1] начиная с ||| [function_name_1] write [arg_pair_2]	count=2
function_name	возвращает информацию о таблице ||| list fields	count=1
function_name	код sqlstate ошибки вызванной ||| stmt sqlstate	count=1
function_name	targets в репозиторий с ||| commit	count=1
function_name	название региона ||| name by	count=1
function_name	временную зону и ||| geoip time zone by	count=1
arg_pair	и директорий ||| int $revision_no	count=1
function_name	возвращает внутреннюю ||| get internal	count=4
namespace	функция преобразует число ||| function	count=1
arg_pair	json ||| bool $assoc	count=1
function_name	устанавливает опцию указанную в ||| set	count=1
namespace	дескриптор ||| function	count=1
namespace	новый recursivecachingiterator ||| recursivecachingiterator	count=1
namespace	переводит итератор ||| splpriorityqueue	count=1
function_name	ресурсом сокета ||| socket	count=1
function_name	добавляет переданные ||| array unshift	count=1
namespace	число дней ||| function	count=1
namespace	файла ||| splfileinfo	count=2
function_name	определения кодировок в ||| order	count=1
return	в programming ||| int	count=1
arg_pair	строку str буквенные ||| string $str string $encoding	count=2
arg_pair	файла ||| int $flags	count=1
function_name	атрибутов ||| attributes	count=1
arg_pair	переданную строку и ||| string $source	count=1
function_name	[function_name_1] ошибке ||| [function_name_2] [function_name_1]	count=3
function_name	recursivetreeiterator::valid() впервые вернет ||| end	count=1
function_name	допустимым конечным числом ||| finite	count=1
function_name	вертикальное зеркало [function_name] отражая ||| flip [function_name]	count=1
function_name	возвращает префикс пространства ||| lookup prefix	count=1
function_name	запрос по url адресу ||| ls	count=1
arg_pair	результате предыдущей операции поиска ||| resource $link_identifier	count=1
function_name	получение содержимого ||| get	count=1
arg_pair	строкой replacement ||| mixed $replacement	count=1
function_name	функция создает ||| create text node	count=1
function_name	атрибут не существует ||| attribute	count=1
function_name	the worlds ||| similar text	count=1
arg_pair	запрос ||| string $repos_url int $revision_no	count=1
function_name	of a ||| ps curveto	count=1
function_name	указанный обратный вызов статуса ||| add task status	count=1
namespace	задания ||| gearmanclient	count=2
function_name	верификацию ||| syntax	count=1
function_name	заменяет значения массива array1 ||| array replace	count=1
arg_pair	контура с ||| string $pathname	count=1
function_name	преобразует число gmp ||| gmp intval	count=1
function_name	массиве targets в ||| commit	count=1
return	на ||| bool	count=3
arg_pair	возвращает строку экранированную обратными ||| string $charlist	count=1
function_name	xml для ||| xml	count=1
arg_pair	именем ||| string $namespaceuri	count=1
function_name	переменную окружения сервера ||| getenv	count=1
function_name	строку для помещения после ||| postfix	count=1
function_name	общедоступным public ||| public	count=2
namespace	аргументом ||| function	count=1
arg_pair	фильтр filtertype ||| int $filtertype	count=1
function_name	интерлейсинга ||| imageinterlace	count=1
function	репозитория в [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	адресу ||| string $repos_url	count=1
function_name	работает аналогично memcached::prepend() ||| prepend by	count=1
function	dn возвращенный [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	string ||| mb decode	count=1
arg_pair	возвращает массив содержащий все ||| array $array1 array $array2	count=1
function_name	тип [function_name] соединения ||| mysql get host [function_name]	count=1
arg_pair	memcached::get() за ||| callable $cache_cb float $cas_token	count=1
function_name	описанному ||| text	count=1
function_name	отменяет группу запросов указатель ||| eio grp cancel	count=1
arg_pair	с ||| string $name string $value	count=1
arg_pair	0-131-00413-1 ||| string $first	count=1
namespace	в неблокирующем режиме ||| gearmanworker	count=1
return	функция закрывает дескриптор ||| bool	count=1
namespace	запросов останавливается если ||| function	count=1
function_name	oliver isbn ||| similar text	count=1
function_name	по алгоритму описанному ||| text	count=1
arg_pair	по url ||| string $repos_url int $revision_no	count=1
function_name	есть это не внутренняя ||| user defined	count=1
arg_pair	с первого вхождения needle ||| mixed $needle	count=1
return	внутри строки подходящим ||| string	count=1
arg_pair	строку data ||| string $data bool $strict	count=1
arg_pair	производит верификацию ||| string $filename	count=1
namespace	recursiveiteratoriterator::valid() впервые вернет ||| recursiveiteratoriterator	count=1
function_name	соответствии с режимом mode ||| convert case	count=1
arg_pair	упорядочивающий алфавитно-цифровые [arg_pair] подобно ||| [arg_pair]	count=1
namespace	данных ||| pdo	count=1
arg_pair	авторизуются в базе данных ||| resource $connection	count=1
function_name	состояние бита интерлейсинга ||| imageinterlace	count=1
arg_pair	символы в unescaped_string ||| string $unescaped_string resource $link_identifier	count=1
function_name	возвращает xml [function_name_2] ||| [function_name_1] [function_name_2]	count=1
return	и получает список файлов ||| array	count=1
return	файлов и директорий опционально ||| array	count=1
function_name	создает экземпляр ||| create text	count=1
function_name	группу ||| group	count=1
function_name	запрос на генерацию ||| build	count=1
function_name	синтаксис ||| syntax	count=1
function_name	атрибут с заданным локальным ||| set id attribute ns	count=1
function_name	получение текущего ||| mb	count=1
return	конца ||| string	count=1
function_name	число простым ||| gmp prob prime	count=1
function_name	список ошибок возникших ||| mysqli stmt error list	count=1
namespace	системы [namespace] ||| [namespace]	count=3
function_name	возвращает число записей ||| count	count=1
arg_pair	устанавливает позицию внутреннего указателя ||| int $offset int $whence	count=1
arg_pair	неудачей если ключ key ||| mixed $value	count=1
arg_pair	до конца строки ||| mixed $needle	count=1
function_name	объявляет атрибут ||| set id attribute ns	count=1
arg_pair	с заданными координатами центра ||| resource $image int $cx	count=1
function_name	является синтаксически правильным ||| is valid	count=1
namespace	класса или ||| function	count=1
function_name	предыдущей ||| ldap count	count=1
function	[function_name_1] [arg_pair_2] в диапазоне 0..255 в ||| [function_name_1] [arg_pair_2]	count=2
return	дескриптор используемый для ||| bool	count=1
return	дескриптор которого указан ||| resource	count=1
function_name	директорий опционально ||| ls	count=1
arg_pair	заключает строку в ||| int $parameter_type	count=1
return	и ||| string	count=7
function_name	subject ||| preg match	count=1
arg_pair	параметре plaintext текст ||| string $plaintext	count=1
arg_pair	приемлемые ||| resource $connection string $table_name	count=1
function_name	false ||| end	count=2
function_name	в ||| closedir	count=1
return	определения ||| mixed	count=1
function_name	с ||| closedir	count=1
function_name	принимая во внимание кодировку ||| mysql real	count=1
function_name	окружения сервера ||| getenv	count=1
function_name	strcasecmp() за исключением ||| strncasecmp	count=1
return	имя хоста с ||| string	count=1
arg_pair	haystack ||| string $haystack	count=1
function_name	ассоциированные с ||| info	count=1
arg_pair	запрос по ||| string $repos_url	count=1
arg_pair	создает многоугольник в ||| int $color	count=1
function_name	убирает флаг o_nonblock ||| set block	count=1
namespace	или другие ||| function	count=1
function_name	memcached::prepend() за исключением того ||| prepend by	count=1
function_name	проверку синтаксиса производит ||| php check	count=1
function_name	читабельное описание [function_name] ||| [function_name]	count=1
function_name	эта функция разбирает ||| parse	count=1
function_name	синтаксиса ||| check	count=1
function_name	и из репозитория ||| svn export	count=1
function_name	специальный fifo файл ||| posix mkfifo	count=1
return	указанного в ||| bool	count=1
arg_pair	парсера ||| int $property bool $value	count=1
function_name	страны соответствующий имени ||| name by name	count=1
arg_pair	[arg_pair] выводит её ||| [arg_pair]	count=2
arg_pair	массив содержащий значения ||| array $array1	count=2
function_name	версию ||| version	count=6
function_name	nanoseconds число секунд ||| time	count=1
function_name	список ошибок возникших при ||| error list	count=1
function_name	строках ||| mb detect order	count=2
arg_pair	код региона соответствующей страны ||| string $region_code	count=1
function_name	результате предыдущей операции поиска ||| ldap count entries	count=1
arg_pair	включая его и ||| string $haystack mixed $needle	count=1
function_name	имя ||| zip entry name	count=1
function_name	дополненную ||| str pad	count=1
function	расширенный атрибут [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	и включая его ||| strstr	count=1
function_name	активное значение настройки ||| quotes runtime	count=1
function_name	отправляет произвольную ||| ftp raw	count=1
function_name	первый символ переведен ||| ucfirst	count=1
namespace	считывает следующую запись ||| function	count=1
arg_pair	version ||| string $feature	count=1
namespace	и ||| pdo	count=1
function_name	[function_name_1] xml ||| [function_name_2] [function_name_1]	count=6
function_name	соответствющие html-сущности ||| htmlentities	count=1
function_name	ассоциированные с объектом на ||| info	count=1
function_name	идентификатор текущего потока ||| thread id	count=1
function_name	об [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	добавляет ||| putenv	count=1
arg_pair	локальным именем ||| string $namespaceuri	count=1
function_name	в programming classics: ||| similar	count=1
function_name	тегов tag_set bbcode_container ||| bbcode	count=1
return	указанную параметром ||| string	count=1
function_name	с заданным локальным ||| name ns	count=1
function_name	[function_name_1] формат utf-16 ||| [function_name_1] [function_name_2]	count=2
arg_pair	описанному в ||| string $first string $second	count=1
arg_pair	png ||| resource $image	count=1
function_name	ваши собственные обработчики ||| stream wrapper	count=1
arg_pair	в таблицу из массива ||| array $rows string $delimiter	count=1
function_name	на указанный в ||| chdir	count=1
function_name	dn ||| dn	count=1
function_name	возвращает максимальный объем ||| memory get peak	count=1
return	возвращает ассоциативный [return] ||| [return]	count=1
function_name	символьное имя ||| token name	count=1
return	в ||| bool	count=10
function_name	функция возвращает ||| get	count=9
function_name	для удаления из базы ||| delete	count=1
return	механизмов ||| mixed	count=1
return	базой ||| bool	count=1
function_name	буфер вывода возвращая его ||| flush	count=1
function_name	цвет в ||| color	count=1
function_name	фильтр ||| filter register	count=2
return	и директорий опционально для ||| array	count=1
function_name	регулярным выражением ||| mb ereg match	count=1
function_name	этот метод ||| animate	count=1
function_name	возвращает размер ||| size	count=4
function_name	pg_send_query() pg_send_query_params() ||| result	count=1
namespace	числовой ||| function	count=1
function_name	по url адресу репозитория ||| ls	count=1
function_name	массива values в ||| combine	count=1
namespace	импортирует таблицу стилей ||| xsltprocessor	count=1
arg_pair	новое значение находится ||| float $value	count=1
arg_pair	[arg_pair_1] текст string ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	постоянное соединение с сервером ||| oci pconnect	count=1
function_name	сокет ||| socket send	count=1
arg_pair	для конкретной ревизии ||| bool $recurse	count=1
function_name	текущее активное значение настройки ||| set magic quotes	count=1
function_name	сокета созданным ||| socket	count=1
namespace	для задачи ||| gearmanclient	count=1
arg_pair	сопоставляет [arg_pair] столбцу ||| [arg_pair]	count=1
function_name	функция создает экземпляр класса ||| create	count=1
function_name	oliver ||| text	count=1
namespace	состояния выполняющейся задачи ||| gearmanclient	count=3
function_name	возвращает текущую позицию начиная ||| get position	count=1
function_name	права доступа к ||| ftp chmod	count=1
function_name	разделяет dn возвращенный ||| explode dn	count=1
arg_pair	с описателем fd ||| mixed $fd	count=1
namespace	объект класса infiniteiterator ||| infiniteiterator	count=1
arg_pair	переданного bzip2 ||| resource $bz	count=1
return	начиная с первого вхождения ||| string	count=1
function_name	получает путь xpath по ||| get	count=1
function_name	файла указанного в filename ||| php check syntax	count=1
function_name	текущую директорию ||| ftp chdir	count=1
function_name	дескриптор которого указан в ||| fchmod	count=1
return	флаг сохранять всю информацию ||| bool	count=1
function_name	сокета ||| socket create pair	count=2
function_name	метод recursiveiteratoriterator::valid() впервые ||| end	count=1
function_name	значение гравитации изображения ||| image gravity	count=2
function_name	проверку синтаксиса ||| php	count=1
function_name	по url ||| svn	count=1
function	[function_name_1] код региона ||| [function_name_1] [arg_pair_2]	count=2
function_name	задает текущее ||| quotes runtime	count=1
function_name	/ ||| mb	count=1
function_name	filename проверяя ||| php check	count=1
function_name	на генерацию ||| build	count=1
function_name	выполняет проверку синтаксиса производит ||| check syntax	count=1
function_name	возвращает расширение файла ||| get extension	count=2
arg_pair	и сохраняет png ||| resource $image	count=1
return	вхождения ||| string	count=1
namespace	качестве параметра directory ||| function	count=1
return	метод recursivetreeiterator::valid() ||| void	count=1
function_name	возвращает текущий вызов стека ||| apd callstack	count=1
return	закрывает дескриптор используемый для ||| bool	count=1
arg_pair	memcached::getdelayed() за исключением ||| bool $with_cas callable $value_cb	count=1
arg_pair	соответствующим [arg_pair] ||| [arg_pair]	count=1
function	[function_name_1] строке source ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] контекста ||| [function_name_2] [function_name_1]	count=3
function_name	привязывает имя ||| bind	count=1
namespace	таблицу стилей ||| xsltprocessor	count=2
function_name	указанным кодированием ||| zlib encode	count=1
function_name	строках ||| order	count=1
arg_pair	возвращенный функцией ldap_get_dn() и ||| string $dn int $with_attrib	count=1
function_name	операции ||| ldap count	count=1
arg_pair	по алгоритму ||| string $second	count=1
namespace	конкретной ||| function	count=1
function_name	programming classics: ||| similar	count=1
function_name	распакованном состоянии ||| unpacked	count=1
function_name	текущую директорию на ||| ftp	count=1
arg_pair	memcached::get() ||| callable $cache_cb float $cas_token	count=1
function_name	функция возвращает название ||| region name	count=1
arg_pair	по алгоритму описанному ||| string $second	count=1
arg_pair	string на заданных ||| string $string	count=1
function_name	указанного в filename проверяя ||| check syntax	count=1
arg_pair	прежде установлен с помощью ||| resource $identifier	count=1
function_name	возвращает null ||| get	count=1
function_name	высоту в виде ассоциативного ||| geometry	count=1
function_name	в палитре ||| imagecolorexact	count=1
arg_pair	imagetype_xxx константы ||| bool $include_dot	count=1
return	ожидать задания ||| bool	count=1
arg_pair	алгоритму ||| string $second	count=1
function_name	с регулярным выражением ||| mb ereg match	count=1
function_name	файлов ||| svn ls	count=2
namespace	флаг сохранять ||| function	count=1
arg_pair	текущую директорию ||| resource $ftp_stream	count=1
return	в programming classics: implementing ||| int	count=1
arg_pair	и значениям массива ||| array $assoc_array int $options	count=1
function_name	последний код возврата ||| return code	count=1
function_name	интерфейс или нет ||| implements interface	count=1
function_name	возвращает значение [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	выполняет проверку синтаксиса ||| function	count=1
function_name	spl [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	delete ||| stmt affected rows	count=2
function_name	настройки ||| set	count=1
function_name	временную зону и код ||| time zone by country	count=1
function_name	список [function_name_2] ||| [function_name_2] [function_name_1]	count=3
function_name	закачивает данные ||| fput	count=1
return	php ||| int	count=1
function_name	возвращает количество полей в ||| mysql num fields	count=1
function_name	установка / получение ||| mb	count=1
namespace	базой ||| pdo	count=1
function_name	выполняет проверку синтаксиса ||| check	count=1
namespace	не ||| pdo	count=1
function_name	[function_name_1] одну или ||| [function_name_1] [function_name_2]	count=2
function_name	скачивает [function_name] ||| [function_name]	count=3
function_name	корневой ||| chroot	count=1
return	в кавычки ||| string	count=1
namespace	вхождения needle ||| function	count=1
arg_pair	строкой replacement ||| mixed $string mixed $replacement	count=1
function_name	допустимым файлом ||| valid	count=1
namespace	одного или большего ||| function	count=1
function_name	проверку синтаксиса ||| syntax	count=1
namespace	код ошибки ||| function	count=1
function_name	von einer mime ||| iconv mime encode	count=1
arg_pair	рисует прямоугольник с ||| int $y2	count=1
arg_pair	записываются в ||| resource $in resource $out	count=1
function_name	указанный интерфейс или ||| interface	count=1
return	до конца ||| string	count=1
arg_pair	ссылающийся на ||| string $encoding string $separator	count=1
function_name	метод ||| method	count=1
arg_pair	начало массива array ||| array $array mixed $value1	count=1
function_name	php выводе ||| header register	count=1
namespace	дней в ||| function	count=1
arg_pair	файловый объект ||| string $open_mode	count=1
return	при работе в ||| bool	count=1
arg_pair	memcached::set() за исключением ||| mixed $value int $expiration	count=1
function_name	[function_name_1] итератор ||| [function_name_1] [function_name_2]	count=2
function_name	в виде ||| get	count=1
function_name	имя [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	[function_name_1] регулярному выражению ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	по ||| string $second	count=1
arg_pair	эта функция ||| string $filename	count=1
function_name	номер начальной строки ||| start line	count=1
function_name	эта функция возвращает ||| get elements	count=1
function_name	возвращает тангенс параметра ||| tan	count=1
function_name	функциями [function_name] yaz_search() yaz_present() ||| [function_name]	count=1
function_name	mime kopfzeile ||| iconv mime encode	count=1
return	или пустую строку ||| string	count=1
arg_pair	специальные символы ||| string $string	count=1
function_name	eof ||| valid	count=1
function_name	задает [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	возвращает цвет ||| get color as	count=1
return	базой данных в ||| bool	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image compression [function_name_2]	count=1
function_name	изображения в байтах ||| image	count=1
function_name	разбирает url ||| parse	count=1
function_name	[function_name_1] версию ||| [function_name_2] [function_name_1]	count=9
function_name	и из репозитория в ||| svn export	count=1
function_name	текущую директорию на заданную ||| ftp	count=1
arg_pair	filename проверяя ||| string $filename	count=1
function_name	получает ||| stream get	count=1
return	элементу и [return] ||| [return]	count=1
function_name	запросе связанным с link_identifier ||| fbsql	count=1
arg_pair	hostname ||| string $hostname int $port	count=1
namespace	выполняет проверку синтаксиса производит ||| function	count=1
arg_pair	центром ||| int $width	count=1
arg_pair	для конкретной ||| int $revision_no	count=1
function_name	первый [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	соответствующий имени ||| by name	count=2
function_name	текущую директорию на ||| chdir	count=1
function_name	определения кодировок в строках ||| mb	count=1
function_name	возвращает список ошибок возникших ||| mysqli stmt error list	count=1
arg_pair	получить с данным смещением ||| int $max_matches int $cutoff	count=1
function_name	/ получение текущего ||| mb language	count=1
return	с разъяснением ||| string	count=1
function_name	опционально для конкретной ||| ls	count=1
return	адресу репозитория и получает ||| array	count=1
arg_pair	с ||| mixed $value1 mixed $value2	count=1
function_name	возвращает комментарий элемента ||| get comment name	count=1
arg_pair	конкретной ||| bool $recurse	count=1
arg_pair	текста в пикселах ||| float $angle	count=1
namespace	объект lob ||| oci-lob	count=1
arg_pair	его и ||| mixed $needle	count=1
arg_pair	пикселах ||| float $size float $angle	count=1
function_name	доступных на запущенной системе ||| get wrappers	count=1
function	[function_name_1] с ||| [arg_pair_2] [function_name_1]	count=5
function_name	получает записи из ||| get	count=1
function_name	[function_name_1] имя ||| [function_name_1] genre [function_name_2]	count=1
arg_pair	с центром в заданных ||| int $cy int $width	count=1
return	массива объектов ||| array	count=1
function_name	the worlds best ||| similar	count=1
function_name	название ||| name	count=6
arg_pair	строку str буквенные символы ||| string $encoding	count=2
namespace	name для текущего ||| domelement	count=1
namespace	текущую ||| function	count=1
function_name	преобразование rot13 ||| str rot13	count=1
function_name	задает ||| quotes runtime	count=2
function_name	дату указанного календаря calendar ||| cal from	count=1
arg_pair	filename на ||| string $filename mixed $user	count=1
function_name	временную зону и код ||| time zone by country and region	count=1
function_name	объектом ||| object	count=1
function_name	значение ||| magic	count=1
function_name	массиве targets в репозиторий ||| svn commit	count=1
arg_pair	приемлемые для sql ||| resource $connection string $table_name	count=1
function_name	устанавливает [function_name_2] ||| [function_name_1] [function_name_2]	count=15
namespace	в результате ||| function	count=1
return	задает ||| bool	count=1
return	числовой код ||| int	count=1
return	needle и включая его ||| string	count=1
function	gd2 [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	зарегистрированных потоков [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	двух ||| function	count=1
function_name	эта функция создает ||| create comment	count=1
function_name	обработчик инструкций препроцессора pi ||| set processing instruction handler	count=1
function_name	имя файла конкретного ||| filename	count=1
function_name	возвращает версию [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	строку содержащую ||| string	count=4
function_name	[function_name_1] классы ||| [function_name_2] [function_name_1]	count=2
function_name	сущностей для ||| set unparsed entity	count=1
function_name	высокоприоритетную ||| high	count=1
namespace	закрывает дескриптор используемый для ||| function	count=1
arg_pair	строит запрос по ||| bool $recurse bool $peg	count=1
function_name	жанра ||| genre id	count=2
function_name	указанного контекста ||| stream context	count=1
function_name	imagecolorallocatealpha() ||| imagecolordeallocate	count=1
arg_pair	читает из переданного bzip2 ||| resource $bz int $length	count=1
return	итератор ||| bool	count=1
function_name	конец ||| append	count=1
function_name	в ||| gmp intval	count=2
namespace	или всех данных по ||| function	count=1
arg_pair	приемлемые для ||| string $table_name	count=1
function_name	algorithms ||| similar text	count=2
arg_pair	получает ||| bool $recurse	count=1
function_name	[function_name_1] максимальную ||| [function_name_2] [function_name_1]	count=1
namespace	вызов pdo::begintransaction() ||| pdo	count=1
function	атрибута с именем ||| attribute string $name	count=1
function_name	затем удаляет текущий буфер ||| clean	count=1
namespace	объекта imagick ||| imagick	count=2
return	filename проверяя ошибки в ||| bool	count=1
arg_pair	подстрока needle ||| string $needle	count=1
function_name	присвоенный сервером ||| handle	count=1
function_name	возвращает внутренний итератор для ||| get inner iterator	count=1
function_name	устанавливает опорной ||| set geo	count=1
function_name	или случайным числом ||| mt	count=1
function_name	разделяемой памяти в байтах ||| shmop size	count=1
function_name	данные в базу данных ||| dbase	count=1
arg_pair	заключает строку ||| int $parameter_type	count=1
namespace	ли итератор ||| iteratoriterator	count=1
return	устанавливает флаг сохранять ||| bool	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=26
return	включая его и до ||| string	count=1
function_name	короткое ||| short	count=1
arg_pair	ли и куда ||| string $file int $line	count=1
namespace	файла текущего ||| directoryiterator	count=1
arg_pair	которое ||| string $value	count=1
arg_pair	отправляет сообщение ||| string $message int $message_type	count=1
return	юлианском летоисчислении в строку ||| string	count=1
arg_pair	команду command ||| int $return_var	count=2
arg_pair	в пикселах ||| float $size float $angle	count=1
arg_pair	или историю правок ||| int $limit	count=1
function_name	элемента ||| get	count=1
namespace	на указанный в ||| function	count=1
function_name	при закрытии потока ||| stream	count=1
function_name	установлено в gnupg_setsignmode ||| gnupg sign	count=1
arg_pair	подстрока needle встречается в ||| string $haystack string $needle	count=1
function_name	считывает следующую ||| zip	count=1
function_name	задает текущее ||| runtime	count=1
return	файла указанного ||| bool	count=1
arg_pair	следующую строку и ||| string $class_name	count=1
return	в массиве [return] значениям ||| [return]	count=1
function	в байтах [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	использования эффектов наложения ||| imagelayereffect	count=1
function_name	идентична функции preg_replace() за ||| preg	count=1
arg_pair	новое значение находится между ||| int $color float $value	count=1
function_name	заданного класса ||| class	count=1
arg_pair	хранимые в участке разделяемой ||| int $shmid	count=1
arg_pair	seconds и ||| int $seconds	count=1
function_name	возвращает версию клиента ||| mysqli get client version	count=1
return	haystack начиная с первого ||| string	count=1
function_name	заменяет значения массива array1 ||| replace	count=1
function_name	параметры cookie [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	верификацию файла ||| php check syntax	count=1
function_name	изменяет значение указанной ||| set encoding	count=1
function_name	низкоприоритетную [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] кодировку для ||| [function_name_2] [function_name_1]	count=1
function_name	в значениях ||| unescape	count=1
namespace	исключения ||| exception	count=3
function_name	[function_name_1] пространстве имен ||| [function_name_1] [function_name_2]	count=1
namespace	пока следующий вызов ||| pdo	count=1
return	algorithms by ||| int	count=1
namespace	с value2 ||| splheap	count=1
function_name	интерфейс или ||| interface	count=1
function_name	директории ||| eio chown	count=1
function_name	расстояние хэмминга ||| hamdist	count=1
function_name	класса объекты которого ||| class	count=1
function_name	класса которое будет ||| file class	count=1
arg_pair	ошибки ||| string $filename	count=1
namespace	для записи ||| function	count=1
function_name	автоматического определения ||| mb	count=1
function_name	bbcode_container возвращаемом ||| bbcode	count=1
namespace	текущего элемента directoryiterator ||| directoryiterator	count=6
function_name	узел ||| is	count=1
function_name	возвращает ||| get extension	count=1
function_name	идентификатор жанра ||| genre id	count=1
function_name	преобразует число ||| gmp intval	count=1
return	позиции [return] ||| [return]	count=2
arg_pair	y до начала координат ||| float $y	count=1
function_name	автоматического определения ||| mb detect order	count=1
arg_pair	записей сохраненных в ||| resource $result_identifier	count=1
arg_pair	требуется и ||| string $string	count=1
function_name	и директорий опционально для ||| svn	count=1
namespace	производит верификацию файла ||| function	count=1
function_name	удаляет [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	specified distortion ||| image channel distortions	count=1
arg_pair	вхождения needle и ||| string $haystack mixed $needle	count=1
function_name	от сервера набора результатов ||| limits	count=1
return	строку с информацией ||| string	count=1
function_name	и переданный ||| closedir	count=1
return	с настройками ||| resource	count=1
namespace	символы ||| pdo	count=1
function_name	для удаления из ||| delete	count=1
function_name	string mime ||| mime	count=1
arg_pair	приемлемые для sql сервера ||| resource $connection string $table_name	count=1
function_name	xml ||| xml parser	count=1
arg_pair	множественного числа в ||| string $msgid2 int $n	count=1
namespace	класс указанный ||| reflectionclass	count=1
function_name	в filename ||| php check syntax	count=1
arg_pair	изображение image ||| resource $image string $filename	count=1
function_name	возвращает информацию о существующем ||| stream get meta data	count=1
arg_pair	needle и включая ||| mixed $needle	count=1
arg_pair	генерирует yaml-представление ||| int $encoding int $linebreak	count=1
function_name	[function_name] установленные в ||| [function_name]	count=3
function_name	задает имя класса ||| file class	count=1
function_name	числом ||| float	count=1
namespace	проверяет ||| iteratoriterator	count=1
return	устанавливает ||| void	count=1
arg_pair	callback ||| mixed $pattern callable $callback	count=1
arg_pair	если ключ key уже ||| string $key mixed $value	count=1
function_name	закрывает ||| sqlite close	count=1
function_name	одной колонки ||| all columns	count=1
return	автоматической фиксации до ||| bool	count=1
namespace	включает или ||| function	count=1
function_name	[function_name_1] ошибки ||| [function_name_2] [function_name_1]	count=2
function_name	возвращает объявленные [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	репозитория и ||| string $repos_url	count=1
function_name	состав которого входит ||| get extension	count=1
arg_pair	подстроку строки haystack начиная ||| string $haystack mixed $needle	count=1
arg_pair	эта функция сортирует ||| int $sort_flags	count=2
arg_pair	unescaped_string ||| resource $link_identifier	count=1
arg_pair	посылает сообщение ||| string $message	count=1
namespace	сокета или ||| function	count=1
function_name	заменяет часть строки ||| substr replace	count=2
function_name	функция ||| intval	count=1
function_name	синтаксиса производит верификацию ||| php	count=1
arg_pair	classics: implementing ||| string $first string $second	count=1
arg_pair	с данным смещением ||| int $cutoff	count=1
function_name	0-131-00413-1 ||| similar text	count=2
arg_pair	для изменения информации сохранённой ||| array $tag	count=1
function_name	ошибке объясняя ошибку ||| error	count=1
function_name	дней ||| jdtofrench	count=1
return	имя из ||| resource	count=1
function_name	алгоритму описанному в programming ||| similar	count=1
function_name	выбирает большой объект ||| pg lo export	count=1
arg_pair	сравнивает value1 ||| mixed $value1	count=1
function_name	обработчик по умолчанию ||| default handler	count=1
return	включая ||| string	count=1
arg_pair	за исключением того ||| mixed $value	count=3
function	[function_name_1] чисел a ||| [arg_pair_2] [function_name_1]	count=2
function_name	список ||| mysql list	count=2
arg_pair	адресу ||| bool $recurse	count=1
namespace	поиска описания [namespace] интерфейса ||| [namespace]	count=1
arg_pair	по алгоритму описанному ||| string $first	count=1
arg_pair	изображении image ||| int $color	count=1
return	соединение с базой данных ||| bool	count=1
namespace	текущую директорию ||| function	count=1
function_name	[function_name_1] внешних сущностей ||| [function_name_2] [function_name_1]	count=2
arg_pair	представленное в системе ||| int $frombase	count=1
function_name	с помощью dbase_delete_record() ||| dbase pack	count=1
function_name	получает ||| get array	count=1
function_name	элементами с заданным локальным ||| ns	count=1
function_name	функция пытается [function_name_1] [function_name_2] порядку следующими способами: чтение ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name] соответствии ||| [function_name]	count=1
arg_pair	директорий опционально для ||| int $revision_no	count=1
function_name	которые ||| set	count=1
arg_pair	до конца ||| string $haystack	count=1
function_name	календаре calendar ||| cal to	count=1
function_name	строке subject ||| preg	count=1
function_name	атрибут с заданным ||| set id attribute	count=1
function_name	функция возвращает ||| mysqli get	count=1
function_name	отправлены [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	с ||| string $namespaceuri string $localname	count=1
function_name	заданного в zip_entry ||| entry compressionmethod	count=1
function_name	колонки ||| field	count=1
arg_pair	[arg_pair_1] в пикселах ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	проверяя ||| php check syntax	count=2
function_name	получает список файлов и ||| svn	count=1
namespace	функция закрывает дескриптор ||| function	count=1
arg_pair	возвращает массив содержащий значения ||| array $array1 array $array2	count=2
arg_pair	находит первое вхождение ||| string $encoding	count=1
function_name	данная ||| svn	count=1
arg_pair	начиная с позиции offset ||| int $offset	count=2
function_name	аналогично методу memcached::append() ||| append by	count=1
function_name	the worlds ||| similar	count=1
arg_pair	[arg_pair] добавляет обратный ||| [arg_pair]	count=1
return	следующую запись в ||| resource	count=1
namespace	функция ||| function	count=3
function_name	инструкций препроцессора pi ||| set processing instruction	count=1
function_name	[function_name_1] системы ||| [function_name_2] [function_name_1]	count=1
return	ввода / вывода ||| bool	count=1
function	которого указан [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	создает объект класса ||| construct	count=1
function_name	сервера [function_name] и доступных ||| [function_name] server	count=1
namespace	soapclient в [namespace] или ||| [namespace]	count=1
function_name	ошибки ||| error	count=4
function_name	заданном календаре calendar ||| cal	count=1
function_name	поля ||| field num	count=2
function_name	окна ||| imagegrabwindow	count=1
function_name	сжатого элемента архива ||| get packed	count=2
function_name	кодировок ||| mb detect order	count=2
function_name	функция возвращает трехсимвольный код ||| code3	count=1
function_name	возвращает ||| get server	count=1
function_name	получает записи ||| get	count=1
arg_pair	с центром в ||| int $cy int $width	count=1
arg_pair	[arg_pair_1] строке haystack ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	производит верификацию файла указанного ||| php	count=1
function_name	сжатия объекта ||| compression	count=1
function_name	список файлов и директорий ||| svn	count=1
arg_pair	вхождения needle и ||| string $haystack	count=1
namespace	класса ||| reflectionclass	count=2
function_name	работает аналогично memcached::prepend() ||| prepend by key	count=1
function_name	преобразует ||| intval	count=1
function_name	в репозитории ||| svn cat	count=1
arg_pair	для ||| resource $id	count=1
arg_pair	синтаксиса производит ||| string $filename	count=1
function	cookie [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
return	ввода / вывода заставляет ||| bool	count=1
return	массив c ||| array	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] sendto resource $socket [arg_pair_2]	count=1
arg_pair	требуется и экранирует ||| string $string	count=1
function_name	декодирует несколько полей заголовка ||| decode headers	count=1
arg_pair	возвращает ||| string $path int $pri	count=1
function_name	функция возвращает состояние ||| status	count=1
function_name	для драйвера ||| quote	count=1
return	заданную аргументом ||| bool	count=1
function_name	рассвета для ||| date sunrise	count=1
function_name	ваши собственные обработчики ||| wrapper	count=1
namespace	запрос по url ||| function	count=1
function_name	репозитория и ||| svn ls	count=1
function_name	результата запроса в ||| fetch	count=1
arg_pair	число n на d ||| gmp $d	count=1
arg_pair	проверяет определен ли ||| string $interface_name bool $autoload	count=1
arg_pair	флаг сохранять ||| resource $image	count=1
function_name	best algorithms ||| text	count=1
namespace	[namespace] интерфейса ||| [namespace]	count=1
function_name	контекста ||| stream context	count=2
function_name	remote_file ||| ftp fget	count=2
function_name	атрибут с ||| set id attribute	count=1
arg_pair	в строке source ||| string $source	count=1
function_name	безопасно использовать в sql-запросе ||| escape string	count=1
arg_pair	1 бит с индексом ||| int $index	count=1
return	алгоритму описанному в ||| int	count=1
namespace	возвращая соединение ||| pdo	count=1
namespace	файла текущего файла ||| directoryiterator	count=1
function_name	[function_name_1] с ftp ||| [function_name_2] set [function_name_1]	count=1
return	элемента [return] его индекс ||| [return]	count=1
function_name	subject ||| preg match all	count=2
arg_pair	[arg_pair] array дополненного ||| [arg_pair]	count=3
function_name	большой объект начиная ||| pg lo	count=1
return	и экранирует ||| string	count=1
function_name	синтаксиса производит ||| php check syntax	count=1
function_name	year для ||| days	count=1
return	переданный в качестве параметра ||| void	count=1
function_name	значение указанного канала текущего ||| color value	count=1
namespace	итератор действительным ||| norewinditerator	count=1
arg_pair	заданную ||| resource $ftp_stream	count=1
function_name	вернет временную зону ||| time zone by country and region	count=1
function	удаляет [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	если атрибут не существует ||| attribute	count=1
function_name	первый ||| ldap first	count=1
arg_pair	ключ key ||| string $key	count=1
arg_pair	по url ||| bool $recurse	count=1
function_name	число столбцов ||| field count	count=1
function_name	функция преобразует ipv4 адрес ||| ip2long	count=1
namespace	указанного в filename проверяя ||| function	count=1
function	ошибок а [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	устанавливает параметры для указанного ||| set params	count=1
arg_pair	ссылающийся на него ресурс ||| string $encoding string $separator	count=1
arg_pair	memcached::getdelayed() за ||| bool $with_cas callable $value_cb	count=1
function_name	в заданном году ||| easter date	count=1
arg_pair	url адресу репозитория ||| string $repos_url	count=1
function_name	возвращает список имен таблиц ||| list tables	count=1
arg_pair	[arg_pair_1] текст string ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	сообщение об ошибке для ||| error	count=1
arg_pair	best ||| string $first	count=1
function_name	эта функция преобразует число ||| intval	count=1
function_name	производит верификацию файла указанного ||| php check syntax	count=1
function_name	максимальную ||| max	count=2
function_name	на ||| chdir	count=2
function_name	для механизмов ||| mb	count=1
function_name	возвращает название региона ||| name	count=1
arg_pair	truetype [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	этот ||| images	count=1
arg_pair	вхождения needle ||| mixed $needle	count=1
function_name	используя формат данных deflate ||| gzdeflate	count=1
function_name	заданную ||| ftp chdir	count=2
arg_pair	a и ||| gmp $a	count=2
namespace	в нижний регистр если ||| function	count=1
function_name	в заданном году ||| easter	count=2
return	возвращает подстроку строки ||| string	count=1
return	первого вхождения needle ||| string	count=1
arg_pair	всю ||| resource $image	count=1
arg_pair	рисует текст [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=4
function_name	всех [function_name] которые ||| get included [function_name]	count=1
function_name	настройки ||| quotes	count=1
namespace	запись ||| function	count=1
arg_pair	строки ||| string $type	count=1
function_name	закачивает данные из ||| fput	count=1
function_name	атрибут если спозиционирован ||| attribute	count=1
return	подходящим для драйвера способом ||| string	count=1
function_name	на указанный в качестве ||| chdir	count=1
return	функция возвращает id который ||| string	count=1
function_name	заданным локальным ||| ns	count=1
function_name	вернет временную зону ||| geoip time zone	count=1
namespace	значение настройки ||| function	count=1
function_name	которой первый символ переведен ||| ucfirst	count=1
function_name	ldap ||| ldap	count=6
function_name	метод класса ||| method	count=1
arg_pair	функция подобна strcmp() ||| string $str1 string $str2	count=1
function_name	использовать в других xml ||| xml parser create ns	count=1
function_name	как gettext() ||| textdomain	count=1
return	recursiveiteratoriterator::valid() ||| void	count=1
function_name	функция устанавливает опцию указанную ||| set	count=1
namespace	конкретной ревизии ||| function	count=1
function_name	на всех локальных интерфейсах ||| create listen	count=1
arg_pair	за один раз ||| string $encoded_headers	count=1
function_name	в строке subject все ||| preg	count=1
function_name	возвращает ||| get elements by tag name	count=3
arg_pair	режиме доступа mode ||| int $pri	count=1
return	предыдущей операции ||| int	count=1
arg_pair	и неразличимых ||| int $domain	count=1
function_name	читает распаковывая до ||| gzread	count=1
function_name	и сохраняет png ||| imagesavealpha	count=1
function_name	задает текущее ||| set magic quotes	count=1
arg_pair	out_charset ||| string $in_charset string $out_charset	count=1
function	[function_name_1] строке source ||| [function_name_1] [arg_pair_2]	count=2
function_name	[function_name_1] флаги ||| [function_name_1] [function_name_2]	count=1
arg_pair	файла с описателем fd ||| mixed $fd	count=1
return	по ||| int	count=1
arg_pair	[arg_pair] удалены все ||| [arg_pair]	count=1
namespace	объект imagick и ||| imagick	count=1
arg_pair	создает многоугольник в ||| int $num_points	count=1
function_name	встроенным обработчиком ошибок а ||| trigger error	count=1
namespace	value1 с value2 ||| splheap	count=1
function_name	имя класса объекты которого ||| set info class	count=1
arg_pair	если ключ key уже ||| string $key	count=1
function_name	функции preg_replace() за исключением ||| preg	count=1
arg_pair	первого ||| string $haystack mixed $needle	count=1
arg_pair	и код региона соответствующей ||| string $country_code string $region_code	count=1
return	неблокирующем ||| bool	count=1
return	завершения ||| bool	count=1
function_name	создает ||| create text node	count=2
arg_pair	функция включает буферизацию ||| callable $output_callback	count=1
arg_pair	y ||| float $x float $y	count=1
function_name	текущий ||| response	count=1
return	для драйвера способом ||| string	count=1
function_name	проверку синтаксиса производит ||| check syntax	count=1
function_name	в строках ||| detect	count=1
arg_pair	кавычки ||| string $string	count=1
function_name	это не внутренняя ||| user	count=1
arg_pair	в приемлемые для sql ||| string $table_name	count=1
return	идентификатор ||| bool	count=1
arg_pair	верификацию файла ||| string $filename	count=1
namespace	кавычки если требуется ||| pdo	count=1
function_name	targets в ||| commit	count=1
function_name	производит верификацию ||| syntax	count=1
namespace	определяет допустимо ли текущее ||| splobjectstorage	count=1
function_name	сообщает если ||| is	count=1
function_name	задает обработчик по умолчанию ||| set default handler	count=1
function_name	задает ||| runtime	count=1
namespace	который используется ||| function	count=1
function_name	целое число php ||| intval	count=1
function_name	oracle ||| oci set client info	count=1
namespace	ли текущий элемент допустимое ||| limititerator	count=1
namespace	эта функция преобразует число ||| function	count=1
namespace	документ приводит [namespace] к нормальной ||| [namespace]	count=1
function_name	получает ||| get array iterator	count=1
function_name	производит верификацию ||| php check syntax	count=1
function_name	функция возвращает название ||| geoip region name	count=1
namespace	best algorithms ||| function	count=1
function_name	каталогом и переданный ||| closedir	count=1
function_name	задает обработчик ||| handler	count=2
function_name	текущего потока ||| mysql thread id	count=1
function_name	ошибки ||| sqlite error	count=1
function_name	дочерний элемент к узлу ||| child	count=1
function_name	верификацию файла ||| check	count=1
function_name	читает все значения атрибута ||| ldap get values	count=1
return	директорий опционально для ||| array	count=1
function_name	опционально ||| svn	count=1
arg_pair	данная ||| string $repos_url int $revision_no	count=1
function_name	[function_name_1] клиента в ||| [function_name_2] [function_name_1]	count=2
function_name	значения массива values ||| array combine	count=1
arg_pair	group ||| string $filename mixed $group	count=1
function_name	дескриптор которого указан ||| eio fchmod	count=1
return	массив содержащий все записи ||| array	count=1
arg_pair	результата запроса с ||| resource $result	count=1
function_name	осуществляет попытку смены ||| chgrp	count=1
arg_pair	filename на указанного в ||| mixed $user	count=1
function_name	файла ||| file	count=1
arg_pair	которое ||| string $name string $value	count=1
return	сообщает ||| bool	count=1
arg_pair	a и b ||| gmp $a	count=1
namespace	the worlds best ||| function	count=1
function_name	вычитает ||| sub	count=1
function_name	исключение ||| exception	count=3
return	recursiveiteratoriterator::valid() впервые вернет false ||| void	count=1
function_name	флаги ||| field flags	count=2
function_name	является ||| is valid	count=1
function_name	получает ключ текущего ||| key	count=1
function_name	дополнительно может ассоциировать этот ||| attach	count=1
arg_pair	директорий опционально для ||| string $repos_url int $revision_no	count=1
function_name	строки подходящим ||| quote	count=1
function_name	следующий узел ||| next	count=1
function_name	ошибки в ||| check	count=1
arg_pair	с центром ||| int $width	count=1
function_name	активное значение настройки ||| magic quotes	count=1
arg_pair	начиная с ||| mixed $needle	count=1
arg_pair	строки needle [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	implementing the worlds ||| string $first	count=1
namespace	определения кодировок в ||| function	count=1
namespace	побитовое исключающее или ||| function	count=1
function_name	получает список файлов и ||| ls	count=1
return	algorithms by oliver isbn ||| int	count=1
arg_pair	параметре plaintext ||| resource $identifier string $plaintext	count=1
function_name	расширенного ||| xattr	count=1
function_name	предыдущей операции ||| ldap count entries	count=1
function_name	число ||| gmp intval	count=4
arg_pair	во множественном числе ||| int $n	count=1
function_name	curl и освобождает ||| curl close	count=1
function_name	в начало существующей записи ||| prepend	count=1
function	атрибута [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	находит первое вхождение подстроки ||| string $encoding	count=1
namespace	value из начала очереди ||| splqueue	count=1
function_name	из набора результата mysql ||| mysql	count=1
namespace	алгоритму описанному ||| function	count=1
function_name	[function_name] соответствии ||| [function_name] error	count=1
function_name	директорию на ||| ftp chdir	count=1
namespace	конца ||| function	count=1
function_name	считывает следующую запись в ||| zip read	count=1
arg_pair	truetype ||| string $text	count=1
arg_pair	от strcmp() ||| string $str1 string $str2	count=1
return	ассоциативного массива ||| array	count=1
function_name	удаляет ||| unlink	count=1
function_name	большой объект ||| pg lo export	count=1
function_name	значение ||| set magic quotes	count=1
return	programming classics: implementing the ||| int	count=1
function_name	полей заголовка mime ||| iconv mime	count=1
arg_pair	алгоритму описанному в programming ||| string $first	count=1
function_name	дней в юлианском летоисчислении ||| jdtofrench	count=1
arg_pair	value1 с value2 ||| mixed $value1 mixed $value2	count=1
function_name	ключевые слова ||| build	count=1
function_name	повторных попыток ||| retries	count=1
function_name	получение возможного типа ||| get image type	count=1
return	фиксации до тех пор ||| bool	count=1
namespace	url адресу репозитория ||| function	count=1
arg_pair	implementing ||| string $second	count=1
return	активное ||| bool	count=1
arg_pair	массив содержащий значения ||| array $array1 array $array2	count=2
function_name	вставленной в ||| pg last	count=1
function_name	xml функциях ||| xml parser create ns	count=1
arg_pair	множественного числа в ||| int $n	count=1
arg_pair	или записываются в ||| resource $out	count=1
function_name	для xml анализатора parser ||| xml	count=3
arg_pair	добавляет пару [arg_pair] к ||| [arg_pair]	count=1
function_name	название ||| geoip region name	count=1
function_name	sql null ||| null	count=1
arg_pair	возвращает массив содержащий ||| array $array1 array $array2	count=1
function_name	php ||| intval	count=1
function_name	values в качестве соответствующих ||| combine	count=1
arg_pair	search ||| mixed $replace	count=2
return	операции ||| int	count=1
function_name	основываясь на ||| no	count=1
function_name	активное ||| set	count=1
arg_pair	в haystack значение needle ||| mixed $needle	count=2
namespace	переводит число дней в ||| function	count=1
function_name	файловой системы ||| eio unlink	count=2
function_name	определения кодировок ||| mb	count=1
function_name	[function_name_1] метод ||| [function_name_2] [function_name_1]	count=2
namespace	пытается клонировать исключение ||| exception	count=1
function_name	набору дескрипторов ||| multi	count=1
arg_pair	memcached::getdelayed() ||| bool $with_cas callable $value_cb	count=1
function_name	[function_name] строки либо ||| [function_name] insert	count=1
arg_pair	с value2 ||| mixed $value1 mixed $value2	count=1
function_name	настройки ||| magic quotes	count=1
return	поток связанный с ||| void	count=1
arg_pair	в приемлемые ||| resource $connection string $table_name	count=1
function_name	имя файла конкретного изображения ||| image filename	count=1
return	дескриптора объекта ||| oci-lob	count=1
function_name	вернет временную зону и ||| geoip time zone by country	count=1
namespace	проверяет является ||| iteratoriterator	count=1
function_name	основываясь на его позиции ||| no	count=1
function_name	тип [function_name] соединения указанного ||| mysql get host [function_name]	count=1
function_name	вставленной в ||| last	count=1
return	работе в ||| bool	count=1
arg_pair	упорядочивающий алфавитно-цифровые [arg_pair] подобно тому ||| [arg_pair]	count=1
arg_pair	для конкретной ||| bool $recurse	count=1
return	получение массива ||| array	count=1
function_name	преобразует ipv4 адрес ||| ip2long	count=1
arg_pair	левый угол имеет координаты ||| int $x	count=1
function_name	сокета созданным ||| socket connect	count=1
function_name	функции preg_replace() за ||| preg	count=1
function_name	запись ||| zip	count=1
function_name	проверяет есть ли ||| has	count=1
namespace	позицию объекта lob ||| oci-lob	count=1
arg_pair	выполняет проверку синтаксиса ||| string $filename	count=1
namespace	пор пока следующий ||| pdo	count=1
function_name	и ||| quote	count=1
function_name	p ||| legendre	count=1
function_name	поток связанный с каталогом ||| closedir	count=1
function_name	информацию о подписи ||| decryptverify	count=1
return	автоматического определения ||| mixed	count=1
function_name	флаги ||| flags	count=3
function_name	задает имя класса которое ||| file class	count=1
function_name	читабельное описание [function_name] кодом ||| [function_name]	count=1
function	[function_name_1] для ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	value1 с ||| mixed $value1 mixed $value2	count=1
function_name	ob_start() ||| mb output	count=1
return	сохранение в формате ||| bool	count=1
arg_pair	path в ||| string $url	count=1
function_name	автоматического определения ||| order	count=1
function_name	эта функция преобразует число ||| gmp intval	count=1
function_name	сервера к ||| server	count=1
function_name	сливает ||| merge	count=1
function_name	специальные символы внутри строки ||| quote	count=1
arg_pair	строку и ||| string $class_name	count=1
arg_pair	ключ key ||| mixed $value	count=1
function_name	функциями как gettext() ||| bind textdomain	count=1
function_name	получает версию ||| get version	count=2
return	[return] первого ||| [return]	count=1
namespace	дескриптором lob ||| oci-lob	count=1
function_name	если требуется и экранирует ||| quote	count=1
arg_pair	и выполняет аутентификацию ||| string $connection_string string $character_set	count=1
function_name	ошибку ||| error	count=2
function_name	содержимого кэша ||| cache	count=1
function_name	запись в ldap ||| ldap	count=1
return	ошибки ||| int	count=1
return	символы внутри строки ||| string	count=1
function_name	[function_name_1] кодировку для ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] пространстве имен ||| [function_name_2] [function_name_1]	count=1
return	csv и [return] ||| [return]	count=1
function_name	в filename проверяя ошибки ||| check syntax	count=1
arg_pair	создана функциями imagecolorallocate() ||| int $color	count=1
arg_pair	[arg_pair] к ||| [arg_pair]	count=1
arg_pair	сопоставляет [arg_pair] столбцу результата ||| [arg_pair]	count=1
function_name	обязательных так и опциональных ||| number of parameters	count=1
arg_pair	соответствии с форматом csv ||| string $enclosure	count=1
arg_pair	двух ||| string $second	count=1
arg_pair	classics: implementing ||| string $first	count=1
function_name	выполняет ||| php	count=1
function_name	запрос по ||| svn	count=1
function_name	зону [function_name] порядку следующими ||| [function_name] timezone	count=1
return	ассоциативный массив с ||| array	count=1
function_name	специальные символы внутри ||| quote	count=1
arg_pair	imagecolorallocate() или ||| int $color	count=1
function_name	запрос по url ||| svn ls	count=1
function	синтаксис для ||| syntax resource $id	count=1
function_name	секунд и ||| time	count=1
function_name	php integer ||| gmp	count=1
function_name	метод позволяет зарегистрировать ||| register	count=1
arg_pair	с описателем fd начиная ||| mixed $fd	count=1
function_name	функция возвращает [function_name_2] ||| [function_name_1] server [function_name_2]	count=1
namespace	в строках ||| function	count=1
function_name	специальный ||| posix	count=1
arg_pair	truetype текста ||| string $fontfile	count=1
function_name	добавляет [function_name_2] ||| function bool [function_name_2] [function_name_1]	count=2
arg_pair	и куда ||| int $line	count=1
arg_pair	в group ||| mixed $group	count=1
function_name	эта функция преобразует ||| intval	count=1
namespace	пор пока ||| pdo	count=1
function_name	код ошибки ||| udm	count=1
arg_pair	на потоке stream ||| resource $stream	count=1
namespace	выводит или ||| function	count=2
function_name	подстроку строки haystack ||| strstr	count=1
function_name	дочерние ||| has children	count=1
namespace	задает текущее ||| function	count=1
function_name	устанавливает значения одной или ||| set	count=1
function_name	следующей ||| fetch	count=1
return	файла указанного в filename ||| bool	count=1
arg_pair	в участке разделяемой ||| int $shmid	count=1
function_name	об ошибках ||| error field	count=2
arg_pair	запрос по url адресу ||| string $repos_url	count=1
arg_pair	директорий опционально ||| string $repos_url int $revision_no	count=1
arg_pair	isbn ||| string $first string $second	count=1
function_name	возвращает значение расширенного ||| xattr get	count=2
return	массив с именами ||| array	count=3
arg_pair	фильтр filtertype к ||| resource $image int $filtertype	count=1
return	задания от ||| bool	count=1
function_name	array2 и возвращает разницу ||| diff uassoc	count=1
function_name	бита интерлейсинга ||| imageinterlace	count=1
arg_pair	implementing the ||| string $second	count=1
arg_pair	число записей сохраненных в ||| resource $link_identifier resource $result_identifier	count=1
function_name	производит ||| php	count=1
namespace	текущую позицию объекта lob ||| oci-lob	count=1
arg_pair	удаляет length ||| int $length	count=1
arg_pair	ссылку path ||| string $path bool $recursive	count=1
namespace	объект imagick ||| imagick	count=1
arg_pair	worlds ||| string $first string $second	count=1
function_name	определения ||| mb detect	count=1
arg_pair	конца ||| mixed $needle	count=1
function_name	эта ||| intval	count=1
function_name	начиная с первого вхождения ||| strstr	count=1
arg_pair	в json строку и ||| string $json	count=1
function_name	targets в ||| svn commit	count=1
function_name	возвращает название региона ||| geoip region name	count=1
namespace	внутреннего объекта-итератора ||| limititerator	count=1
arg_pair	число записей ||| resource $link_identifier	count=1
function_name	функциями pg_send_query() pg_send_query_params() ||| result	count=1
arg_pair	участке разделяемой ||| int $shmid int $start	count=1
function_name	глубину ||| depth	count=1
function_name	возвращает его в виде ||| to	count=1
function_name	первый символ переведен в ||| ucfirst	count=1
return	relaxng [return] документа ||| [return]	count=1
arg_pair	описанному в ||| string $first	count=1
arg_pair	на ||| resource $ftp_stream	count=1
function_name	sql-запросе ||| escape	count=1
return	в него данные ||| bool	count=1
function_name	механизмов ||| order	count=1
function_name	экранирует специальные символы внутри ||| quote	count=1
return	вхождения подстроки needle в ||| mixed	count=2
return	получает список файлов ||| array	count=1
function_name	путь к файлу ||| pathname	count=1
function_name	проверяет существование ||| exists	count=1
function_name	получает список ||| svn	count=1
function_name	возвращает число столбцов затронутых ||| count	count=1
function_name	интернет соединения соответствующего ||| id by	count=1
arg_pair	его в локальный файл ||| string $local_file	count=1
namespace	directory ||| function	count=1
arg_pair	с использованием множественного числа ||| string $msgid2 int $n	count=1
function_name	сохраняет ||| imagesavealpha	count=1
function_name	имя класса которое ||| set file class	count=1
function_name	задает [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	предыдущей операции поиска ||| resource $link_identifier	count=1
arg_pair	строки ||| int $offset string $encoding	count=1
function_name	url адресу ||| svn	count=1
arg_pair	path в репозиторий ||| string $path	count=1
function_name	возвращает свойства [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	вернет ||| void	count=2
function_name	синтаксиса ||| syntax	count=1
namespace	отображенный метод ||| reflectionmethod	count=1
function_name	устанавливает буферизацию ||| set write buffer	count=1
function_name	значение размера точки объекта ||| point size	count=1
arg_pair	открытого ранее дескриптора директории ||| resource $zip_entry int $length	count=1
arg_pair	classics: ||| string $first string $second	count=1
return	запись ||| resource	count=1
function_name	[function_name_1] список методов ||| [function_name_2] [function_name_1]	count=1
return	символическую ||| bool	count=1
function_name	mkdir() ||| mkdir	count=1
function_name	определению ||| geoip database info	count=1
function_name	вернет временную зону и ||| geoip time zone by country and region	count=1
function_name	в t61 ||| ldap 8859 to t61	count=1
function_name	mime набора символов для ||| mb preferred mime name	count=1
arg_pair	функции ereg_replace() за исключением ||| string $replacement	count=1
function_name	текущий тип компрессии ||| compression	count=1
arg_pair	по ||| int $width	count=1
return	строку описывающую соединение которое ||| string	count=1
namespace	летоисчислении в ||| function	count=1
function_name	закачивает данные ||| ftp nb fput	count=1
arg_pair	режим на потоке stream ||| resource $stream int $mode	count=1
arg_pair	операции поиска ||| resource $link_identifier	count=1
arg_pair	устанавливает флаг сохранять всю ||| resource $image	count=1
arg_pair	haystack начиная с первого ||| string $haystack mixed $needle	count=1
arg_pair	участке разделяемой ||| int $start	count=1
function_name	неразобранных объявлений сущностей для ||| unparsed entity decl	count=1
return	позицию ||| int	count=2
function_name	отличным от null ||| isset	count=1
function_name	[function_name_1] по умолчанию ||| [function_name_1] [function_name_2]	count=1
return	проверку синтаксиса ||| bool	count=1
function_name	проверяет существует ли смещение ||| offset exists	count=1
function	обрезает строку [function_name_1] [arg_pair_2] ширине width ||| function string [function_name_1] [arg_pair_2]	count=1
function_name	значений [function_name] ||| [function_name]	count=1
function_name	устанавливает ||| set index weights	count=1
function	[function_name_1] региона ||| [function_name_1] [arg_pair_2]	count=5
function_name	mp3-файле ||| id3	count=1
arg_pair	список файлов и ||| bool $recurse	count=1
arg_pair	репозитория и получает ||| string $repos_url int $revision_no	count=1
function_name	читает все значения ||| get values len	count=1
return	в качестве ||| bool	count=1
arg_pair	с локальным именем localname ||| string $namespaceuri string $localname	count=1
function_name	получает ||| get path info	count=2
function_name	объявленные [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	атрибут в пространстве имен ||| attribute	count=1
arg_pair	получает список файлов ||| string $repos_url int $revision_no	count=1
namespace	задачи ||| gearmanclient	count=4
arg_pair	каждого [arg_pair] asii-кодами в ||| [arg_pair]	count=1
function_name	в массиве targets в ||| commit	count=1
function_name	mime набора символов ||| preferred mime name	count=1
arg_pair	best algorithms ||| string $second	count=1
function_name	запись ||| read	count=1
function_name	xml анализатора parser ||| xml	count=4
arg_pair	внутри строки ||| string $string	count=1
function_name	xml функциях ||| xml parser create	count=1
function_name	производит верификацию ||| check	count=1
arg_pair	возвращает строку ||| string $number	count=1
arg_pair	и неразличимых ||| int $type	count=1
function_name	файла указанного в ||| check	count=1
function	[function_name_1] атрибута файла ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	с текущей ||| resource $large_object	count=1
arg_pair	включает буферизацию ||| callable $output_callback	count=1
return	сервера заданий ||| bool	count=1
namespace	описанному в programming classics: ||| function	count=1
function_name	число столбцов ||| count	count=1
function_name	синус параметра ||| sin	count=1
function_name	номер версии ||| version	count=1
return	с каталогом и переданный ||| void	count=1
function_name	subject все совпадения ||| preg	count=1
arg_pair	параметре plaintext ||| string $plaintext	count=1
arg_pair	отличие от strcmp() ||| string $str2	count=1
return	текущее ||| bool	count=1
function_name	[function_name_1] код ||| [function_name_1] error [function_name_2]	count=1
function	21 марта и ||| days int $year	count=1
namespace	специальные символы ||| pdo	count=1
function_name	байт в сокет ||| socket	count=1
function_name	внутри строки ||| quote	count=1
arg_pair	рисует эллипс с центром ||| int $cy	count=1
function_name	programming classics: implementing the ||| similar	count=1
arg_pair	в ||| string $second	count=1
function_name	сервера к которому создано ||| server	count=1
function	вхождения подстроки [arg_pair_2] ||| [function_name_1] strpos [arg_pair_2]	count=1
function_name	с каталогом и переданный ||| closedir	count=1
function_name	cosh ||| tanh	count=1
function_name	атрибут с заданным ||| set id attribute ns	count=1
function_name	[function_name_1] итератор для ||| [function_name_1] [function_name_2]	count=2
function_name	устанавливает флаг сохранять ||| imagesavealpha	count=1
function_name	количество полей в ||| mysql num fields	count=1
function_name	установка / получение текущего ||| mb	count=1
return	целое число ||| int	count=1
arg_pair	в файле browscap.ini ||| string $user_agent	count=1
function_name	регистрирует имя функции ||| register	count=1
namespace	предыдущей операции поиска ||| function	count=1
function_name	[function_name_1] в виде ||| [function_name_2] [function_name_1]	count=4
function_name	[function_name_1] настройки ||| [function_name_2] [function_name_1]	count=1
function_name	директорию на заданную аргументом ||| ftp	count=1
function_name	поля ||| field	count=5
namespace	gmp ||| function	count=1
function_name	[function_name_1] оставшуюся часть ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] потомки ||| [function_name_2] has [function_name_1]	count=1
arg_pair	основе части ||| int $srcy int $width	count=1
function_name	[function_name_1] ftp сервером ||| [function_name_2] set [function_name_1]	count=1
return	запрос по ||| array	count=1
return	возвращает ассоциативный [return] информацию о ||| [return]	count=1
function_name	указанного ||| php check	count=1
function_name	кодировок в строках ||| order	count=1
function_name	объявляет атрибут ||| id attribute ns	count=1
function_name	оставшуюся часть ||| contents	count=1
function_name	[function_name_1] ширину изображения ||| [function_name_1] [function_name_2]	count=1
function_name	geoip в виде многомерного ||| geoip	count=1
function_name	функция возвращает название региона ||| region name	count=1
arg_pair	параметре plaintext текст ключами ||| resource $identifier string $plaintext	count=1
arg_pair	сохраненных в результате ||| resource $result_identifier	count=1
function_name	в ||| chdir	count=1
arg_pair	подключает другой парсер ||| resource $bbcode_arg_parser	count=1
namespace	информацию альфа компонента ||| function	count=1
namespace	для [namespace] ||| [namespace]	count=1
function_name	восстанавливает исходное ||| restore	count=1
function_name	первый ||| first	count=1
function_name	или удалённое [function_name] ||| stream socket get [function_name]	count=3
arg_pair	и включая ||| mixed $needle	count=1
namespace	и экранирует ||| pdo	count=1
function_name	устанавливает ||| set option	count=4
function_name	сущностей для ||| unparsed entity	count=1
arg_pair	в кавычки если ||| string $string	count=1
function_name	worlds ||| similar text	count=2
function_name	версию сервера к ||| server version	count=2
function_name	список ошибок возникших ||| stmt error list	count=1
function_name	объявляет атрибут с заданным ||| set id attribute	count=1
arg_pair	локальным именем localname ||| string $localname	count=1
arg_pair	определенное строкой ||| int $connect_type	count=1
arg_pair	его и до ||| mixed $needle	count=1
function_name	параметры [function_name_2] ||| [function_name_2] set [function_name_1]	count=3
function_name	текущее ||| magic quotes runtime	count=2
arg_pair	programming classics: ||| string $first	count=1
return	экранирует специальные ||| string	count=1
function_name	эта функция возвращает ||| get elements by tag name	count=1
function_name	php integer ||| intval	count=1
function_name	рассвета ||| date sunrise	count=2
arg_pair	строки ||| string $value	count=1
function_name	theirself замечание ||| disable view	count=1
return	элемента [return] его ||| [return]	count=2
arg_pair	указанного в параметрах ||| string $name	count=1
namespace	применяя таблицы стилей ||| xsltprocessor	count=1
arg_pair	опционально ||| string $repos_url int $revision_no	count=1
namespace	x сервере ||| imagick	count=1
arg_pair	директорий опционально для ||| bool $recurse	count=1
arg_pair	смещение offset для получаемого ||| int $offset	count=1
return	массив уровней ||| array	count=1
function_name	в результате предыдущей операции ||| entries	count=1
function_name	если узел соответствует jste ||| is jste	count=1
function_name	верификацию файла указанного в ||| check	count=1
namespace	возвращает число записей ||| function	count=1
function_name	имен таблиц базы ||| tables	count=1
function_name	в переменных vars ||| mb convert variables	count=1
function_name	результате предыдущей операции ||| count	count=1
function_name	[function_name_1] параметры для ||| [function_name_2] [function_name_1]	count=1
function_name	низким приоритетом ||| low	count=1
function_name	которых callback-функция __autoload() ||| spl autoload	count=1
function_name	содержимого ||| get	count=1
function_name	кодировок в строках ||| detect order	count=1
function_name	активное значение ||| runtime	count=1
return	и получает ||| array	count=1
function_name	с заданным локальным ||| elements by tag name ns	count=1
function_name	функция преобразует число ||| gmp	count=1
arg_pair	создает многоугольник в изображении ||| int $num_points	count=1
namespace	следующую запись ||| function	count=1
function_name	добавляет все ||| add all	count=2
function_name	побитовое и двух ||| and	count=1
function_name	потоков ||| stream	count=1
function_name	filename ||| check	count=1
function_name	указанного в ||| php	count=1
return	возвращает подстроку ||| string	count=1
function_name	возвращает копию ||| get array copy	count=1
function_name	[function_name_1] версию сервера ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] флаги ||| [function_name_2] [function_name_1]	count=1
function_name	делит ||| bcdiv	count=1
function_name	опциональных ||| get number of parameters	count=1
arg_pair	файлов ||| int $revision_no	count=1
function_name	использования в запросе sqlite ||| sqlite escape string	count=1
arg_pair	первого вхождения needle и ||| mixed $needle	count=1
function_name	временную зону [function_name] ||| [function_name] timezone	count=1
arg_pair	директорий ||| string $repos_url	count=1
function_name	последний элемент ||| end	count=1
arg_pair	опционально для ||| bool $recurse	count=1
namespace	используемый ||| function	count=1
namespace	выставляет итератор ||| splfixedarray	count=1
function_name	в filename проверяя ошибки ||| php check	count=1
function_name	устанавливает ||| set index	count=1
arg_pair	ereg_replace() за исключением того ||| string $pattern string $replacement	count=1
function_name	объявляет атрибут с заданным ||| attribute ns	count=1
function_name	директорию на заданную ||| chdir	count=1
function_name	число записей ||| count entries	count=1
function_name	определения кодировок в ||| detect	count=1
function_name	функциями как gettext() ||| textdomain	count=1
arg_pair	объединяет элементы массива ||| array $pieces	count=1
function_name	ядро а не пользовательским ||| internal	count=1
arg_pair	если ключ key уже ||| mixed $value	count=1
function_name	возвращает имена всех ||| get	count=1
arg_pair	данная функция строит запрос ||| bool $recurse bool $peg	count=1
function_name	изображения ||| animate	count=1
arg_pair	возвращает массив содержащий ||| array $array2	count=1
arg_pair	устанавливает ||| resource $ftp_stream	count=1
arg_pair	для ||| string $repos_url int $revision_no	count=1
namespace	name для текущего узла ||| domelement	count=1
arg_pair	адресу репозитория ||| string $repos_url	count=1
namespace	для ||| function	count=3
function_name	синтаксиса производит верификацию ||| php check syntax	count=1
arg_pair	строку haystack ||| string $haystack string $needle	count=2
function_name	переводит число ||| jdtofrench	count=1
arg_pair	[arg_pair_1] представленное в ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	[function_name_1] оставшуюся ||| [function_name_1] [function_name_2]	count=1
function_name	возвращает информацию о подписи ||| decryptverify	count=1
arg_pair	числа ||| gmp $a	count=1
arg_pair	указанным параметром remote_socket ||| string $remote_socket int $errno	count=1
arg_pair	двух строк ||| string $first string $second	count=1
function_name	xml анализатора ||| xml set unparsed	count=1
arg_pair	другими http заголовками ||| int $expire string $path	count=1
arg_pair	репозитория и ||| string $repos_url int $revision_no	count=1
arg_pair	описанному ||| string $second	count=1
return	работе в неблокирующем ||| bool	count=1
namespace	установка / ||| function	count=1
return	integer ||| int	count=1
function_name	разделяет dn ||| dn	count=1
function_name	закачивает данные из дескриптора ||| ftp nb fput	count=1
function_name	текущую ||| ftp chdir	count=2
function_name	функция возвращает название ||| name	count=2
function_name	x ||| animate	count=1
function	и кода [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	случаев когда [function_name] выброшено ||| [function_name]	count=1
function_name	url ||| svn ls	count=2
arg_pair	в out_charset ||| string $in_charset	count=1
namespace	фиксирует транзакцию ||| pdo	count=1
arg_pair	возвращает число записей ||| resource $link_identifier	count=1
function_name	сокета ||| socket create	count=1
function_name	programming classics: implementing ||| similar	count=1
arg_pair	настройки ||| int $option	count=1
arg_pair	возвращает строку str буквенные ||| string $encoding	count=2
namespace	xpath ||| domxpath	count=2
arg_pair	как из индексированного ||| int $dbase_identifier int $record_number	count=1
function_name	[function_name_1] версию ||| [function_name_1] server [function_name_2]	count=2
function_name	задает текущее активное ||| magic quotes runtime	count=1
function_name	включает и выключает внутреннюю ||| internal	count=1
namespace	запроса состояния выполняющейся задачи ||| gearmanclient	count=3
function_name	[function_name_1] ldap ||| [function_name_2] [function_name_1]	count=3
arg_pair	по ||| string $first	count=1
function_name	целое число php integer ||| gmp	count=1
return	worlds best algorithms ||| int	count=1
function_name	значения массива values в ||| array combine	count=1
function_name	автоматического определения ||| detect order	count=1
arg_pair	описанному в ||| string $second	count=1
function_name	результат [function_name] ||| mysql [function_name]	count=1
arg_pair	аналогично memcached::get() за ||| callable $cache_cb float $cas_token	count=1
arg_pair	числа ||| gmp $n	count=1
namespace	php на указанный ||| function	count=1
arg_pair	в fd ||| int $mode	count=1
arg_pair	символы ||| string $string	count=1
function_name	значение атрибута в ||| attribute	count=1
arg_pair	преобразует строку в ||| string $string int $split_length	count=1
function_name	постоянное соединение с ||| oci pconnect	count=1
return	получение информации о расширении ||| reflectionextension	count=1
function_name	предыдущей ||| count entries	count=2
function_name	представление в виде ||| to	count=3
function_name	algorithms ||| similar	count=1
namespace	копирует содержание или ||| function	count=1
function_name	определение ||| pg meta data	count=1
function_name	subject все совпадения с ||| preg	count=1
arg_pair	programming ||| string $first	count=1
arg_pair	возвращает строку экранированную ||| string $charlist	count=1
function_name	по url ||| ls	count=1
return	в результате ||| int	count=1
return	каждое ||| array	count=1
function_name	эта функция создает ||| create text	count=1
function	переданные в [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	информацию о таблице с ||| list fields	count=1
return	текущую директорию на ||| bool	count=1
arg_pair	seconds и nanoseconds число ||| int $seconds	count=1
arg_pair	репозитория и получает список ||| bool $recurse	count=1
return	первого вхождения needle и ||| string	count=1
function_name	[function_name_1] цвет ||| [function_name_1] [function_name_2]	count=2
function_name	добавляет данные ||| add	count=1
return	заданий gearman ||| bool	count=1
arg_pair	для драйвера способом ||| string $string	count=1
arg_pair	по алгоритму ||| string $first string $second	count=1
function	[function_name_1] атрибута файла ||| [function_name_1] [arg_pair_2]	count=3
function_name	использования в запросе sqlite ||| sqlite	count=1
function_name	[function_name_1] cookie ||| [function_name_2] [function_name_1]	count=2
arg_pair	из ||| resource $link_identifier	count=1
function_name	mime kopfzeile ||| iconv mime	count=1
function_name	[function_name_1] xml анализатора ||| [function_name_2] external [function_name_1]	count=1
function_name	preg_replace() за ||| preg	count=1
function_name	изображение ||| noise image	count=1
arg_pair	значение ||| int $color float $value	count=1
function_name	фильтр ||| stream filter	count=1
function_name	которой принадлежит символическая ссылка ||| lchgrp	count=1
function_name	сохранять всю ||| imagesavealpha	count=1
function_name	подстроку строки haystack начиная ||| strstr	count=1
return	массив содержащий записи ||| array	count=1
arg_pair	синтаксиса производит верификацию ||| string $filename	count=1
function_name	описанному в ||| similar	count=1
function_name	файла ||| syntax	count=1
arg_pair	двух строк ||| string $second	count=1
function	метод класса [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	string ||| mb decode numericentity	count=2
arg_pair	выполняет ||| string $filename	count=1
arg_pair	haystack начиная ||| string $haystack	count=1
function_name	список файлов ||| svn	count=1
arg_pair	хранимые в участке разделяемой ||| int $shmid int $start	count=1
function_name	сокета указанного в ||| socket	count=1
return	массив содержащий все ||| array	count=1
function_name	объем памяти в байтах ||| size	count=1
function_name	функция преобразует ||| gmp intval	count=1
function_name	когда [function_name] выброшено вне ||| [function_name]	count=1
function_name	буквами в верхнем регистре ||| upper	count=1
namespace	url адресу репозитория и ||| function	count=1
return	поток связанный ||| void	count=1
arg_pair	символы внутри строки ||| string $string	count=1
function_name	дескриптор работы присвоенный сервером ||| handle	count=1
function_name	определения кодировок в ||| mb detect	count=1
function_name	считывает ||| zip	count=1
function_name	копирования данных ||| end copy	count=1
arg_pair	path в репозиторий по ||| string $path string $url	count=1
arg_pair	потока или записываются в ||| resource $out	count=1
function_name	файлов и директорий ||| ls	count=1
arg_pair	строку str ||| string $encoding	count=2
arg_pair	by ||| string $second	count=1
arg_pair	вхождения строки needle в ||| int $offset	count=1
function_name	возвращает цвет объекта imagickpixel ||| get color as	count=1
arg_pair	на указанном local_socket ||| string $local_socket int $errno	count=1
namespace	ли данный узел ||| domnode	count=2
function_name	возвращая его содержимое ||| flush	count=1
return	связанный с ||| void	count=1
arg_pair	следующую строку и возвращает ||| string $class_name	count=1
function_name	возвращает id [function_name] строки ||| [function_name] insert	count=1
arg_pair	дескриптора директории ||| resource $zip_entry	count=1
function_name	текущий [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	[return] в ||| [return]	count=1
function_name	distortion metrics ||| image channel distortions	count=1
namespace	юлианском ||| function	count=1
arg_pair	экранирует специальные символы ||| string $string	count=1
function_name	активное значение настройки ||| set magic	count=1
function_name	метод производит анимацию ||| animate	count=1
function_name	[function_name_1] командой ldap ||| [function_name_2] [function_name_1]	count=4
function_name	первого вхождения ||| strstr	count=1
function_name	запрос ||| svn	count=1
function_name	привязывает имя ||| socket bind	count=1
function_name	задает текущее активное ||| set	count=1
arg_pair	и включая его и ||| string $haystack	count=1
function_name	складывает ||| bcadd	count=1
namespace	переводит ||| function	count=1
function_name	верификацию ||| check syntax	count=2
function_name	проверяя ошибки в ||| php check	count=1
namespace	дочерних элементов у ||| simplexmlelement	count=1
function_name	число записей ||| ldap	count=1
namespace	array1 с одним или ||| function	count=1
return	выключает ||| bool	count=1
function_name	заданную ||| chdir	count=1
function_name	умолчанию через сокет ||| socket	count=1
namespace	символы внутри ||| pdo	count=1
function_name	filename ||| php check syntax	count=2
arg_pair	в приемлемые для ||| resource $connection string $table_name	count=1
function_name	переданный [function_name] ключами ||| [function_name]	count=1
function_name	объявляет атрибут ||| id attribute	count=2
function_name	производит ||| php check syntax	count=2
function_name	для механизмов автоматического ||| order	count=1
function_name	юлианском ||| jdtofrench	count=1
function_name	активное значение настройки ||| set	count=1
arg_pair	из переданного итератора iterator ||| iterator $iterator string $flags	count=1
function_name	удалённый ||| nb	count=1
namespace	экранирует специальные символы ||| pdo	count=1
function_name	текущее активное ||| quotes runtime	count=1
return	записей ||| int	count=1
function_name	текущую позицию начиная с ||| position	count=1
function_name	страны и кода ||| by code	count=1
function_name	результате ||| entries	count=1
function_name	потоков [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	было установлено в gnupg_setsignmode ||| gnupg sign	count=1
return	компонента ||| bool	count=1
function_name	буфера вывода верхнего ||| ob	count=1
function_name	[function_name_1] атрибут ||| [function_name_1] [function_name_2]	count=4
function_name	programming classics: implementing ||| text	count=1
function_name	mime ||| iconv mime	count=3
function_name	функция записывает в сокет ||| socket	count=1
function_name	[function_name_1] последнем soap-запросе ||| [function_name_1] [function_name_2]	count=1
arg_pair	строит запрос ||| bool $peg	count=1
function_name	указанного в filename ||| php check syntax	count=1
function_name	в качестве параметра ||| chdir	count=1
function_name	функция пытается [function_name] временную ||| date default timezone [function_name]	count=1
function_name	кодировок в ||| mb detect order	count=1
function_name	метод производит ||| animate	count=1
arg_pair	экранирует ||| string $string	count=1
arg_pair	элементы в начало массива ||| mixed $value1	count=1
namespace	вычисляет побитовое исключающее или ||| function	count=1
arg_pair	строки ||| string $str	count=1
function_name	функции gettext() ||| textdomain	count=1
arg_pair	массив содержащий все элементы ||| array $array2	count=1
function_name	для конкретной ревизии ||| svn	count=1
function_name	верификацию ||| check	count=1
arg_pair	в массиве fd ||| int $protocol array $fd	count=1
function_name	горизонтальное зеркало [function_name] отражая ||| flop [function_name]	count=1
arg_pair	mysql ||| string $database resource $link_identifier	count=1
arg_pair	и пасхой в ||| int $method	count=1
function_name	integer ||| gmp	count=1
function_name	oracle ||| oci set client	count=1
namespace	поиска ||| function	count=1
arg_pair	изменяет пароль ||| string $new_password	count=1
arg_pair	string ||| string $string	count=1
function_name	values ||| array combine	count=2
function_name	внутри ||| quote	count=1
function_name	два [function_name] одним и ||| is same [function_name]	count=1
function_name	возвращает путь ||| get pathname	count=2
function_name	кодировку для входных ||| encoding	count=1
function_name	seed или случайным числом ||| mt	count=1
function_name	возвращает число [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	пространстве имен namespaceuri и ||| ns	count=1
namespace	подстроку строки haystack ||| function	count=1
arg_pair	возвращенный функцией ldap_get_dn() ||| int $with_attrib	count=1
arg_pair	вычисляет расхождение в массивах ||| array $array1 array $array2	count=1
function_name	название региона соответствующей ||| region name by	count=1
function_name	проверку синтаксиса ||| check syntax	count=1
arg_pair	функции ereg_replace() за исключением ||| string $pattern string $replacement	count=1
namespace	обработчик [namespace] пошлет исключение ||| [namespace]	count=1
function	[function_name_1] str в ||| [function_name_1] convert encoding [arg_pair_2]	count=4
function_name	targets в репозиторий ||| commit	count=1
function_name	функции ||| register	count=1
return	для механизмов автоматического определения ||| mixed	count=1
function_name	устанавливает опорной точку для ||| set geo	count=1
function_name	верификацию файла указанного ||| php check	count=1
function_name	сжатого ||| packed	count=1
arg_pair	получает список ||| string $repos_url	count=1
function_name	заменяет часть ||| substr replace	count=2
function_name	дескриптор которого указан ||| fchmod	count=1
namespace	функции ||| function	count=1
function_name	внешних сущностей для ||| external entity ref	count=1
namespace	документ из ||| domdocument	count=1
function_name	нуля ||| elem	count=1
function_name	файлов и директорий опционально ||| svn	count=1
namespace	ли достигнут конец файла ||| splfileobject	count=1
function_name	возвращает свойства [function_name_2] ||| [function_name_1] [function_name_2]	count=2
return	анимацию ||| bool	count=1
function_name	подстановок оболочки ||| fnmatch	count=1
function_name	[function_name_1] текущую ||| [function_name_2] [function_name_1]	count=6
function_name	функция вернет временную зону ||| geoip time zone by country and region	count=1
arg_pair	в out_charset ||| string $out_charset	count=1
function_name	до ||| strstr	count=1
function_name	закачивает данные из дескриптора ||| fput	count=1
function_name	данного ||| get tag	count=1
function_name	генерирует пригодное для ||| serialize	count=1
function_name	флаг сохранять всю информацию ||| imagesavealpha	count=1
function_name	вертикальное зеркало [function_name] отражая пиксели ||| flip [function_name]	count=1
function_name	по умолчанию по ||| date default	count=1
function_name	url адресу ||| svn ls	count=1
function_name	возвращает ||| get loaded extensions	count=1
namespace	[namespace] timestamp ||| [namespace]	count=3
return	указанный в качестве ||| bool	count=1
namespace	метод recursiveiteratoriterator::valid() впервые ||| recursiveiteratoriterator	count=1
arg_pair	callback -функцию ||| mixed $pattern callable $callback	count=1
return	и экранирует специальные ||| string	count=1
function_name	вхождения needle ||| strstr	count=1
return	строки haystack начиная с ||| string	count=1
function_name	строки из результата запроса ||| oci fetch	count=1
arg_pair	вхождения search ||| mixed $replace	count=2
return	filename проверяя ||| bool	count=1
function_name	функция создает экземпляр ||| create	count=1
function_name	[function_name_1] документируемый ||| [function_name_1] [function_name_2]	count=2
function_name	установка / получение текущего ||| language	count=1
function_name	в filename проверяя ||| check syntax	count=1
arg_pair	и включая его ||| string $haystack mixed $needle	count=1
arg_pair	подстроку строки ||| mixed $needle	count=1
function_name	сравнивает value1 с value2 ||| compare	count=1
arg_pair	вхождения строки ||| int $offset	count=1
return	описанному ||| int	count=1
function_name	возвращает ширину изображения ||| get image width	count=2
function_name	needle и включая ||| strstr	count=1
function_name	текущее качество сжатия изображения ||| image compression quality	count=1
function_name	для механизмов автоматического ||| detect order	count=1
function_name	в строке subject ||| preg	count=1
arg_pair	в out_charset ||| string $in_charset string $out_charset	count=1
function_name	записей ||| ldap	count=1
function_name	получает ||| get line	count=2
function_name	которого указан в ||| eio fchmod	count=1
function_name	блокирующий ||| blocking	count=1
return	дескриптор ||| string	count=1
arg_pair	переопределить текущий домен domain ||| string $domain	count=1
function_name	implementing ||| similar	count=1
function_name	буквами в нижнем регистре ||| lower	count=1
function_name	добавляет запись ||| add	count=1
arg_pair	проверку синтаксиса производит верификацию ||| string $filename	count=1
arg_pair	сервер задач к списку ||| string $host	count=1
arg_pair	задает функцию ||| callable $handler	count=2
arg_pair	что новое значение находится ||| float $value	count=1
arg_pair	домен domain ||| string $domain string $msgid1	count=1
function	[function_name_1] указанному индексу ||| [function_name_1] [arg_pair_2]	count=1
function_name	дату французского республиканского календаря ||| frenchtojd	count=1
function_name	каталог - прим.пер.) в ||| delete name	count=1
return	метод производит анимацию изображения ||| bool	count=1
function_name	экранирует спецсимволы ||| pg escape	count=1
function	[function_name_1] базе данных ||| [function_name_1] [arg_pair_2]	count=2
function_name	начиная с первого ||| strstr	count=1
return	метод recursiveiteratoriterator::valid() ||| void	count=1
function_name	это не внутренняя функция ||| user defined	count=1
return	кодировок ||| mixed	count=1
arg_pair	сообщение ||| int $message_type	count=1
arg_pair	атрибут property в указанном ||| string $property	count=1
function_name	определения кодировок в строках ||| order	count=1
function_name	индексов ||| array udiff uassoc	count=2
function_name	функции ||| mb output	count=1
arg_pair	и получает ||| int $revision_no	count=1
function_name	начало файлового потока ||| rewind	count=1
function_name	список зарегистрированных потоков ||| stream	count=1
function_name	возвращает ||| memory get peak	count=1
arg_pair	изображения используя truetype шрифт ||| string $fontfile string $text	count=1
function_name	текущее активное значение настройки ||| set	count=1
function_name	базу данных ||| dbase	count=2
function_name	для ||| order	count=1
function_name	ошибку [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	строк по алгоритму описанному ||| function	count=1
function_name	[function_name_1] данные ассоциированные ||| [function_name_2] [function_name_1]	count=1
function_name	строк в указанной базе ||| numrecords	count=1
arg_pair	строку ||| string $str string $charlist	count=1
rest	параметры [function_2] ||| [function_2] [return_1]	count=1
function_name	ftp сервером ||| ftp	count=1
function_name	описывает тип [function_name] соединения указанного ||| mysql get host [function_name]	count=1
function_name	[function_name_1] атрибут ||| [function_name_2] [function_name_1]	count=4
function_name	устанавливает опцию ||| set	count=1
function_name	набора результатов и количество ||| limits	count=1
function_name	в результате предыдущей операции ||| count	count=1
function_name	случайным числом ||| mt	count=1
function_name	на выполнение с высоким ||| high	count=1
function_name	создает xml ||| xml	count=1
function_name	адресу репозитория и ||| svn	count=1
arg_pair	координаты 0 0 цветом ||| int $x	count=1
function	[function_name_1] функцию в ||| [arg_pair_2] [function_name_1]	count=1
function_name	в юлианском летоисчислении ||| jdtofrench	count=1
function_name	файла в репозитории ||| svn cat	count=1
arg_pair	classics: implementing ||| string $second	count=1
return	с ресурсом result ||| string	count=2
function_name	удалённый файл с ftp-сервера ||| nb	count=1
namespace	механизмов автоматического ||| function	count=1
function_name	на заданную ||| ftp chdir	count=1
arg_pair	filename на ||| mixed $user	count=1
arg_pair	worlds best ||| string $second	count=1
function_name	подходящим ||| quote	count=1
arg_pair	и сдвигает ||| string $class_name	count=1
arg_pair	и пасхой в ||| int $year int $method	count=1
function_name	определения ||| detect	count=1
namespace	адресу репозитория и ||| function	count=1
arg_pair	информацию ||| resource $image	count=1
namespace	связанный ||| function	count=1
namespace	данные задания ||| gearmanclient	count=1
arg_pair	и сдвигает ||| resource $result string $class_name	count=1
function_name	экранирует специальные символы ||| quote	count=1
function_name	von einer mime kopfzeile ||| iconv mime encode	count=1
function_name	[function_name_1] выходных документов ||| [function_name_2] [function_name_1]	count=3
return	вызов pdo::begintransaction() не ||| bool	count=1
function_name	oliver ||| similar	count=1
function_name	устанавливает новое значение ||| offset set	count=1
arg_pair	историю правок в ||| int $end_revision	count=1
namespace	пока следующий ||| pdo	count=1
arg_pair	имеет координаты 0 0 ||| int $x	count=1
function_name	сущностей [function_name_2] ||| [function_name_2] [function_name_1]	count=3
return	число в строку ||| string	count=1
function_name	аналогично memcached::prepend() ||| prepend by	count=1
arg_pair	итератора iterator ||| iterator $iterator string $flags	count=1
function_name	которые используются ||| set	count=1
function_name	e в степени ||| exp	count=1
return	верификацию файла указанного в ||| bool	count=1
function_name	статического свойства класса ||| static property value	count=1
function_name	инверсию остатка от деления ||| invert	count=1
arg_pair	возвращает число записей сохраненных ||| resource $result_identifier	count=1
arg_pair	файле browscap.ini ||| bool $return_array	count=1
function_name	по url адресу ||| svn ls	count=1
namespace	данный узел ||| domnode	count=2
namespace	описания [namespace] ||| [namespace]	count=1
arg_pair	код региона соответствующей ||| string $country_code string $region_code	count=1
function_name	имя класса объекты которого ||| class	count=1
function_name	добавляет высокоприоритетную ||| add task high	count=1
return	кавычки ||| string	count=1
return	в режим автоматической ||| bool	count=1
namespace	заданный xpath ||| domxpath	count=1
namespace	ввода / вывода ||| gearmanworker	count=1
function_name	в палитре изображения ||| imagecolorexact	count=1
arg_pair	и включая ||| string $haystack mixed $needle	count=1
arg_pair	и экранирует ||| string $string	count=1
arg_pair	в unescaped_string ||| string $unescaped_string	count=1
function_name	с другими задачами ||| task	count=3
namespace	альфа ||| function	count=1
arg_pair	в файле browscap.ini ||| string $user_agent bool $return_array	count=1
function_name	предыдущей операции поиска ||| ldap count entries	count=1
function_name	получает путь ||| get	count=1
function_name	функция ||| gmp	count=1
function_name	функция убирает флаг o_nonblock ||| set block	count=1
namespace	ли узлы двусвязный список ||| spldoublylinkedlist	count=1
function_name	этот метод производит ||| animate images	count=1
function_name	получит [function_name] ||| http [function_name]	count=2
return	связанного с ресурсом result ||| string	count=1
arg_pair	haystack значение needle ||| mixed $needle array $haystack	count=2
function_name	символы строки string ||| mb	count=1
return	функция возвращает массив ||| array	count=4
namespace	x ||| imagick	count=1
arg_pair	с текущей позиции внутреннего ||| resource $large_object	count=1
function_name	номер поля ||| pg field	count=1
function_name	[function_name_1] данные ассоциированные ||| [function_name_1] [function_name_2]	count=1
function_name	позицию первого ||| strpos	count=2
function_name	[function_name_1] указанного контекста ||| [function_name_2] set [function_name_1]	count=1
namespace	преобразует число gmp ||| function	count=1
namespace	преобразует число ||| function	count=1
function_name	конца ||| trim	count=1
function_name	репозитория и ||| ls	count=1
rest	ищет позицию [function_2] ||| [return_1] [function_2]	count=2
function_name	для ||| mb detect	count=1
function_name	знаками пунктуации ||| punct	count=1
namespace	или ||| function	count=61
function_name	его и до конца ||| strstr	count=1
function_name	ячейки таблицы [function_name] ||| pg [function_name]	count=1
arg_pair	историю правок ||| int $limit	count=1
function	регистрирует [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
arg_pair	текущую ||| resource $ftp_stream	count=1
arg_pair	создает закрашенный многоугольник в ||| int $num_points	count=1
function_name	с 4714 ||| gregoriantojd	count=1
function_name	генерацию [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	возвращает сообщение об ошибке ||| mysqli error	count=1
return	csv и [return] с ||| [return]	count=1
function_name	символьных данных для ||| character data	count=1
return	заданной ||| string	count=1
function_name	функций ||| functions	count=1
namespace	[namespace] интерфейса используя ||| [namespace]	count=1
return	директорию на заданную аргументом ||| bool	count=1
function_name	возвращает ||| ldap count	count=1
function_name	устанавливает опцию ||| set option	count=1
return	/ получение текущего ||| mixed	count=1
arg_pair	изображения на основе части ||| int $srcy int $width	count=1
function_name	число столбцов ||| mysqli field count	count=1
return	в строку применяя ||| string	count=1
function_name	цвет объекта imagickpixel в ||| color as string	count=1
return	/ вывода заставляет обработчика ||| bool	count=1
function_name	соответствующий имени ||| code by name	count=1
function_name	символы ||| quote	count=1
namespace	setting ||| function	count=1
function_name	в spl ||| spl	count=1
arg_pair	алфавитно-цифровые [arg_pair] подобно тому ||| [arg_pair]	count=1
arg_pair	path в репозиторий ||| string $url	count=1
namespace	метод recursivetreeiterator::valid() впервые вернет ||| recursivetreeiterator	count=1
arg_pair	работает аналогично memcached::getdelayed() ||| bool $with_cas callable $value_cb	count=1
namespace	или изменяет настройки ||| function	count=1
function_name	сущностей [function_name_2] ||| [function_name_2] external [function_name_1]	count=3
arg_pair	заключает строку в кавычки ||| string $string int $parameter_type	count=1
arg_pair	создает закрашенный многоугольник ||| int $color	count=1
function_name	в результате предыдущей операции ||| ldap	count=1
function_name	как gettext() ||| textdomain codeset	count=1
arg_pair	парсера ||| resource $bbcode_container	count=1
function_name	атрибут не существует ||| get attribute	count=1
function_name	[function_name_1] [function_name_2] ||| string [function_name_1] [function_name_2]	count=3
arg_pair	пару [arg_pair] к механизму ||| [arg_pair]	count=1
return	функция определяет mime-тип для ||| string	count=1
namespace	классе указанный метод или ||| reflectionclass	count=1
namespace	автоматической ||| pdo	count=1
arg_pair	включает буферизацию ||| callable $output_callback int $chunk_size	count=1
function_name	by oliver ||| similar text	count=1
function_name	версию расширения в виде ||| version	count=1
function_name	функция возвращает ||| get loaded extensions	count=1
function_name	x ||| images	count=1
return	для ||| string	count=4
function_name	постоянное ||| pconnect	count=1
arg_pair	сравнивает value1 ||| mixed $value2	count=1
return	число ||| int	count=6
function	[function_name_1] заданного файла ||| [arg_pair_2] [function_name_1]	count=2
function_name	в ||| zip	count=1
return	classics: implementing the worlds ||| int	count=1
function_name	возвращает объявленные ||| get declared	count=2
function_name	атрибута с [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	строку и [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	удалённом ||| animate	count=1
function_name	получает значение атрибута в ||| get attribute ns	count=1
arg_pair	в коде ||| string $filename string $error_message	count=1
function_name	может ли ||| is callable	count=1
arg_pair	на указанную в group ||| string $filename mixed $group	count=1
function_name	устанавливает ||| stream set	count=3
arg_pair	[arg_pair] array ||| [arg_pair]	count=3
return	массива ||| array	count=9
return	в ||| string	count=3
arg_pair	в начало массива array ||| array $array mixed $value1	count=1
function_name	функция устанавливает параметры ||| set option	count=2
namespace	содержит ли данный узел ||| domnode	count=2
arg_pair	репозитория и получает ||| bool $recurse	count=1
arg_pair	потока или записываются ||| resource $in resource $out	count=1
return	функция принимает один два ||| string	count=1
function	репозитория [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	данные содержащие ||| string $source string $encoding	count=1
function_name	и кода ||| by code	count=1
arg_pair	получает список файлов ||| bool $recurse	count=1
arg_pair	файлов ||| bool $recurse	count=1
return	implementing ||| int	count=1
function_name	сокета и ||| socket create pair	count=1
arg_pair	сохраненных в результате предыдущей ||| resource $link_identifier resource $result_identifier	count=1
arg_pair	создает многоугольник в изображении ||| int $num_points int $color	count=1
arg_pair	идентична функции ereg_replace() за ||| string $pattern string $replacement	count=1
function_name	sql-запросе в функции mysql_query() ||| escape	count=1
arg_pair	кодировки in_charset в out_charset ||| string $in_charset string $out_charset	count=1
function_name	параметры ||| params	count=2
function_name	ли два [function_name] одним ||| is same [function_name]	count=1
function	[function_name_1] с данными ||| [function_name_1] bytea [arg_pair_2]	count=1
namespace	value2 ||| splheap	count=1
rest	возвращает [function_2] ||| [return_1] [function_2]	count=1
return	функция принимает один ||| string	count=1
arg_pair	до ||| string $haystack	count=1
function_name	получает ||| udm	count=1
function_name	will output by theirself ||| disable view	count=1
rest	удаляет [function_2] ||| [function_2] [return_1]	count=1
arg_pair	данная ||| int $revision_no	count=1
function_name	и конца строки пробелами ||| trim	count=1
arg_pair	заданного ||| resource $ftp_stream string $remote_file	count=1
function_name	синтаксиса производит верификацию файла ||| php check	count=1
arg_pair	search в subject заменены ||| mixed $search mixed $replace	count=2
namespace	png ||| function	count=1
return	позиции [return] атрибут не ||| [return]	count=1
function_name	адресу репозитория ||| svn	count=1
function_name	пространства имен в котором ||| namespace	count=1
function_name	файла ||| check syntax	count=2
arg_pair	текстовом ||| resource $identifier int $armor	count=1
namespace	где исключение было создано ||| exception	count=2
arg_pair	сжимает переданную строку и ||| string $source	count=1
return	ассоциативный массив ||| array	count=1
namespace	ввода / ||| gearmanworker	count=1
function_name	размер элемента архива ||| size	count=1
arg_pair	домен domain ||| string $domain	count=1
namespace	строки подходящим ||| pdo	count=1
namespace	возвращает строку или ||| function	count=2
return	первого ||| string	count=1
function_name	распакованную версию входных ||| gzdecode	count=1
function	[function_name_1] str в ||| [arg_pair_2] [function_name_1]	count=4
function_name	два [function_name] одним ||| is same [function_name]	count=1
function_name	набор тегов tag_set bbcode_container ||| bbcode	count=1
function_name	является ||| mb output	count=1
function_name	текущее качество [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	возвращает ассоциативный массив с ||| array	count=1
function_name	класса объекты которого будут ||| class	count=1
function_name	значение настройки конфигурации ||| ini	count=1
function_name	возвращает минимальную ||| get	count=1
function_name	iterator ||| iterator	count=1
function_name	для заданного календаря calendar ||| cal	count=1
arg_pair	получает ||| string $repos_url int $revision_no	count=1
function_name	value1 ||| compare	count=1
function_name	временную зону и ||| time zone by country	count=1
arg_pair	в файле browscap.ini ||| bool $return_array	count=1
arg_pair	by oliver isbn 0-131-00413-1 ||| string $first	count=1
arg_pair	директорий опционально ||| bool $recurse	count=1
arg_pair	начиная с первого вхождения ||| string $haystack	count=1
function_name	большой объект и посылает ||| pg lo	count=1
arg_pair	ключ key уже существует ||| string $key mixed $value	count=1
function_name	проверку синтаксиса производит ||| php	count=1
function_name	возвращает имя ||| entry name	count=1
function_name	запросе sqlite ||| sqlite	count=1
arg_pair	таблицу из массива ||| array $rows string $delimiter	count=1
function_name	ожидать задания от какого-либо ||| wait	count=1
function_name	[function_name_1] массив ||| [function_name_2] [function_name_1] int $start_index int $num	count=1
arg_pair	value1 с ||| mixed $value2	count=1
arg_pair	url адресу ||| int $revision_no	count=1
function_name	возвращает максимальный объем памяти ||| get	count=1
arg_pair	memcached::set() за исключением того ||| int $expiration	count=1
function_name	проверку синтаксиса производит верификацию ||| php check syntax	count=1
function_name	возвращает атрибут ||| get attribute	count=4
function_name	окружения сервера [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	извлекает список зарегистрированных потоков ||| stream	count=1
namespace	пор ||| pdo	count=1
namespace	/ получение ||| function	count=1
function_name	проверяя ||| check syntax	count=2
namespace	двух строк ||| function	count=1
function_name	включая наследованные свойства ||| properties	count=1
function_name	заданном календаре calendar ||| cal to jd	count=1
arg_pair	отличие от strcmp() ||| string $str1 string $str2	count=1
return	список файлов и директорий ||| array	count=1
function_name	использования в функции crack_check() ||| opendict	count=1
arg_pair	двух строк по алгоритму ||| string $first string $second	count=1
function_name	[function_name_1] дескрипторов ||| [function_name_1] [function_name_2]	count=1
function_name	isbn 0-131-00413-1 ||| text	count=1
namespace	url ||| function	count=1
function_name	сокет ||| stream socket server	count=2
function_name	в bbcode_container ||| bbcode parse	count=1
function_name	distortion metrics этот ||| get image channel distortions	count=1
arg_pair	команду command ||| string $command	count=1
function_name	удалённый ||| ftp nb	count=1
arg_pair	в ||| string $first string $second	count=1
function_name	текущем домене ||| dcngettext	count=1
arg_pair	устанавливает режим error_reporting ||| resource $identifier int $errormode	count=1
function_name	имя класса которое ||| class	count=1
return	вхождения подстроки needle ||| mixed	count=2
namespace	и переданный ||| function	count=1
function	строки string [arg_pair_2] ||| [function_name_1] convert encoding [arg_pair_2]	count=2
function_name	php функции в ||| register php functions	count=1
function_name	и директорий ||| ls	count=1
function_name	название пространства имён ||| namespace name	count=2
function_name	интернет соединения соответствующего имени ||| id by name	count=1
arg_pair	строит ||| bool $recurse bool $peg	count=1
function_name	remote_file с ftp-сервера ||| ftp fget	count=1
function_name	число php ||| gmp	count=1
function_name	файлового указателя ||| bzread	count=1
arg_pair	содержащий все компоненты url ||| int $component	count=1
function_name	best algorithms by oliver ||| similar	count=1
namespace	создает новый recursivecachingiterator ||| recursivecachingiterator	count=1
function_name	memcached::prepend() ||| prepend by	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] callable $callback [arg_pair_2]	count=1
arg_pair	вычисляет расхождение ||| array $array2	count=1
arg_pair	задает значение именованной или ||| mixed $parameter mixed $value	count=1
return	переводит ||| string	count=1
function_name	получено от сервера ||| free statement	count=1
namespace	update или ||| function	count=2
arg_pair	out_charset ||| string $out_charset	count=1
return	позиции [return] атрибут ||| [return]	count=1
function_name	число ||| gmp	count=2
arg_pair	двух строк по алгоритму ||| string $second	count=1
arg_pair	строки haystack начиная с ||| string $haystack	count=1
arg_pair	возвращает строку str буквенные ||| string $str	count=2
arg_pair	создает временный большой объект ||| string $data int $lob_type	count=1
function_name	которые используются при проверке ||| set	count=1
function_name	создает экземпляр ||| create	count=1
arg_pair	адресу репозитория и получает ||| string $repos_url int $revision_no	count=1
function_name	запросе sqlite ||| sqlite escape	count=1
function_name	и ||| svn ls	count=4
function_name	внутреннюю ||| internal	count=3
function_name	подсчитывает количество ||| word count	count=1
return	для ||| bool	count=3
arg_pair	y до ||| float $x float $y	count=1
arg_pair	специальные ||| string $string	count=1
function_name	побитовое ||| or	count=1
function_name	датаграммный сокет ||| socket	count=1
function_name	oracle ||| oci free	count=1
function_name	максимальную длину строки ||| max	count=1
arg_pair	по url адресу репозитория ||| string $repos_url	count=1
function_name	указанного в filename проверяя ||| php check	count=1
function_name	устанавливает опорной ||| set	count=1
arg_pair	строку экранированную ||| string $str	count=1
arg_pair	файла с именем filename ||| string $filename int $time	count=1
function_name	очищает буфер ошибок libxml ||| libxml clear errors	count=1
function	[function_name_1] в строку ||| [function_name_1] [arg_pair_2]	count=1
function_name	[function_name] элементы ||| [function_name]	count=1
function	сокет [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] версию ||| [function_name_1] [function_name_2]	count=5
arg_pair	сохраняет ||| resource $image	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] iterator [function_name_2]	count=1
return	информацию альфа компонента ||| bool	count=1
arg_pair	получает список ||| string $repos_url int $revision_no	count=1
function_name	сохранять ||| imagesavealpha	count=1
function_name	активное ||| set magic	count=1
function_name	этот метод производит анимацию ||| images	count=1
namespace	приводит [namespace] к нормальной ||| [namespace]	count=1
arg_pair	описанному ||| string $first	count=1
arg_pair	идентична функции ereg_replace() ||| string $pattern string $replacement	count=1
return	oliver isbn 0-131-00413-1 ||| int	count=1
arg_pair	координаты 0 ||| int $x	count=1
function_name	zip_entry ||| compressionmethod	count=1
function_name	устанавливает ||| set geo	count=1
arg_pair	файлов и директорий опционально ||| int $revision_no	count=1
arg_pair	str по ||| string $str	count=1
function_name	возвращает ||| mysqli get	count=6
function_name	возвращает внутренний [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	верификацию файла указанного в ||| php check syntax	count=1
function_name	результате ||| count entries	count=2
return	возвращает строку из ||| string	count=1
function_name	расширение файла ||| to extension	count=1
function_name	файл исполняемым ||| executable	count=1
namespace	в юлианском летоисчислении ||| function	count=1
return	для конкретной ревизии ||| array	count=1
namespace	к searchd выполняет набор ||| sphinxclient	count=1
arg_pair	in_charset в out_charset ||| string $out_charset	count=1
function_name	путь до [function_name] терминального устройства ||| [function_name]	count=1
function_name	функция позволяет переопределить текущий ||| dgettext	count=1
arg_pair	функция использует тест миллера-рабина ||| int $reps	count=1
namespace	memcache сервера ||| memcached	count=1
namespace	вызов pdo::begintransaction() не ||| pdo	count=1
function_name	of a cubic ||| ps curveto	count=1
function_name	тип сжатия объекта ||| compression	count=1
function_name	все строки [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function	байтах [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	в последнем soap-запросе ||| last request	count=1
function_name	анимацию ||| animate images	count=2
arg_pair	имя / ||| string $name	count=1
arg_pair	ключ key уже ||| string $key	count=1
function_name	использовать в других xml ||| xml parser create	count=1
return	recursivetreeiterator::valid() впервые ||| void	count=1
function_name	постоянное соединение ||| oci pconnect	count=1
function_name	временную зону и ||| geoip time zone by country and region	count=1
function_name	которому расположен узел ||| node path	count=1
namespace	до конца строки ||| function	count=1
function_name	задает [function_name] по умолчанию ||| set exception [function_name]	count=1
arg_pair	base возводится в степень ||| gmp $exp	count=1
return	с базой данных в ||| bool	count=1
return	возвращает массив с именами ||| array	count=2
arg_pair	возвращает имя ||| int $field_number	count=1
return	вхождения needle и ||| string	count=1
return	верификацию ||| bool	count=1
function_name	атрибуты ||| attributes	count=1
namespace	приложения которые впоследствии ||| gearmanclient	count=1
namespace	новый recursivecachingiterator который ||| recursivecachingiterator	count=1
function_name	размер [function_name_2] ||| [function_name_2] [function_name_1]	count=8
namespace	файла ||| splfileobject	count=1
function_name	по алгоритму ||| similar text	count=1
function_name	права доступа ||| ftp chmod	count=1
function_name	или получено от сервера ||| statement	count=1
function_name	по алгоритму описанному в ||| similar	count=1
namespace	с ||| pdo	count=1
function_name	читабельное описание [function_name_1] [function_name_2] кодом error_code полученного из ||| [function_name_1] [function_name_2]	count=2
namespace	document ||| domimplementation	count=1
arg_pair	функция ||| mixed $class	count=1
namespace	в неблокирующем режиме ввода ||| gearmanworker	count=1
function_name	название указанного сокетного ||| name	count=1
function_name	заданном календаре calendar ||| cal to	count=1
function_name	очистки ||| contents	count=1
function_name	список методов в виде ||| methods	count=1
arg_pair	рисует текст ||| int $y	count=1
namespace	и директорий опционально ||| function	count=1
function_name	считывает следующую запись в ||| read	count=1
arg_pair	строку ||| string $str	count=1
arg_pair	включая его ||| string $haystack	count=1
function_name	удалённый файл ||| nb	count=1
arg_pair	[arg_pair_1] haystack ||| [arg_pair_1] [arg_pair_2]	count=4
arg_pair	заданный аргументом path с ||| resource $ftp_stream string $path	count=1
arg_pair	опционально для конкретной ||| int $revision_no	count=1
namespace	если поддерживается и разрешено ||| function	count=1
function_name	и до ||| strstr	count=1
namespace	неблокирующем режиме ввода / ||| gearmanworker	count=1
function_name	адресу репозитория и ||| svn ls	count=1
function_name	выполняет проверку ||| check	count=1
arg_pair	генерирует yaml-представление из ||| int $linebreak	count=1
arg_pair	вхождения строки needle ||| int $offset	count=1
function_name	вставленной в таблицу строке ||| pg last	count=1
namespace	временем [namespace] timestamp ||| [namespace]	count=1
function_name	трассировку стека ||| trace as	count=1
function_name	directory ||| chdir	count=1
function_name	задает текущее активное ||| set magic quotes runtime	count=1
function_name	x ||| animate images	count=2
function_name	метод производит ||| images	count=1
arg_pair	запрос по ||| int $revision_no	count=1
arg_pair	имен и возвращает ссылающийся ||| string $encoding string $separator	count=1
arg_pair	или историю правок в ||| int $end_revision int $limit	count=1
arg_pair	value2 ||| mixed $value1	count=1
function_name	текущую [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	числовой код ошибки ||| udm errno	count=1
namespace	filename ||| function	count=1
arg_pair	данная функция ||| bool $recurse	count=1
arg_pair	его и до ||| string $haystack	count=1
function_name	символьное имя для ||| token name	count=1
arg_pair	с помощью gnupg_addsignkey ||| resource $identifier	count=1
function_name	массиве targets в репозиторий ||| commit	count=1
arg_pair	эта функция сортирует массив ||| array $array int $sort_flags	count=1
function	вызов статуса [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	на заданную аргументом ||| chdir	count=1
arg_pair	регулярному выражению в ||| string $pattern string $option	count=1
function_name	побитовое ||| gmp or	count=2
function_name	для ||| svn	count=1
function_name	описывает тип [function_name] соединения ||| mysql get host [function_name]	count=1
arg_pair	создает многоугольник ||| int $color	count=1
return	зоны с помощью ||| string	count=1
function_name	строк ||| rows	count=1
return	с указателем ||| string	count=1
function_name	кодировок в ||| detect	count=1
arg_pair	algorithms by oliver isbn ||| string $first string $second	count=1
function_name	автоматического определения кодировок в ||| mb detect order	count=1
return	до конца строки ||| string	count=1
arg_pair	в указанных документах ||| bool $mva	count=1
function_name	programming ||| similar	count=1
return	в результате предыдущей операции ||| int	count=1
function_name	документируемый комментарий ||| doc comment	count=4
function_name	[function_name_1] расширенного ||| [function_name_2] [function_name_1]	count=6
function_name	[function_name] баз данных ||| mysql [function_name]	count=1
arg_pair	рисует ||| int $x int $y	count=2
function_name	[function_name_1] cookie сессии ||| [function_name_2] [function_name_1]	count=2
namespace	заставляет обработчика ||| gearmanworker	count=1
function_name	закачивает данные из ||| ftp nb fput	count=1
namespace	если требуется и ||| pdo	count=1
function_name	setting ||| putenv	count=1
function_name	атрибут с заданным ||| attribute ns	count=1
function_name	файлов ||| ls	count=1
return	число дней в юлианском ||| string	count=1
function_name	указанного ||| check syntax	count=2
arg_pair	требуется и экранирует специальные ||| string $string	count=1
function_name	[function_name_1] внутренний итератор ||| [function_name_2] [function_name_1]	count=1
arg_pair	записываются в него ||| resource $in resource $out	count=1
function_name	из репозитория в ||| svn	count=1
function_name	возвращает текущий элемент ||| current	count=1
function_name	возвращает ||| get resource	count=1
arg_pair	ссылку path в рабочую ||| string $path	count=1
namespace	строку или массив ||| function	count=2
function_name	best ||| text	count=1
function_name	в других xml функциях ||| xml parser	count=1
return	с ||| int	count=3
function_name	указатель в начало ||| rewind	count=1
return	функция возвращает id ||| string	count=1
function_name	получает класс ||| get array iterator	count=1
return	закрывает ||| void	count=1
namespace	число ||| function	count=4
arg_pair	за один раз ||| string $encoded_headers int $mode	count=1
function_name	статус соединения в битах ||| connection status	count=1
function_name	локальным ||| elements by tag name ns	count=1
arg_pair	является callback-функцией ||| string $contents int $status	count=1
function	[function_name_1] str ||| [function_name_1] convert encoding [arg_pair_2]	count=4
function	ряду [arg_pair_2] ||| [function_name_1] object [arg_pair_2]	count=3
function_name	возвращает ||| count	count=1
arg_pair	кавычки если ||| string $string	count=1
function_name	следующей строки результирующей ||| fetch	count=1
function_name	в ||| detect	count=1
arg_pair	вычисляет расхождение в массивах ||| array $array2	count=1
function_name	число записей ||| count	count=1
function_name	палитре ||| imagecolorexact	count=1
return	устанавливает флаг ||| bool	count=1
function	обработчиком ошибок [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	заданного в zip_entry ||| zip entry compressionmethod	count=1
function_name	для принятия пакетов данных ||| client	count=1
namespace	recursivecachingiterator который ||| recursivecachingiterator	count=1
arg_pair	строку переданную в параметре ||| string $key	count=1
namespace	следующую запись в ||| function	count=1
namespace	получает числовой ||| function	count=1
function_name	создает новый объект ||| construct	count=1
return	подстроку строки haystack начиная ||| string	count=1
function_name	из spl ||| spl	count=1
function_name	отменяет [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	в заданном календаре calendar ||| cal	count=1
arg_pair	процессу pid идентификатор ||| int $pid	count=1
function_name	выполняет проверку синтаксиса ||| php check syntax	count=1
function_name	задает текущее активное значение ||| set magic	count=1
namespace	альфа компонента ||| function	count=1
function_name	устанавливает буферизацию ||| stream set	count=1
return	вхождения подстроки ||| mixed	count=2
arg_pair	указанных документах ||| array $values bool $mva	count=1
return	вычисляет ||| int	count=1
return	указанный в качестве параметра ||| bool	count=1
arg_pair	classics: ||| string $second	count=1
function_name	получает максимальную длину ||| get max	count=2
return	транзакцию возвращая соединение с ||| bool	count=1
function_name	строк по ||| similar text	count=1
function_name	делает снимок окна ||| imagegrabwindow	count=1
arg_pair	преобразует дату юлианского ||| int $jd	count=1
namespace	впервые ||| recursiveiteratoriterator	count=1
function_name	функция возвращает ||| get elements by	count=1
function_name	возвращает максимальный ||| get	count=1
function_name	значение ||| set magic quotes runtime	count=2
arg_pair	что новое значение ||| int $color float $value	count=1
namespace	проверку ||| function	count=1
namespace	описания функции ||| reflectionfunctionabstract	count=1
function_name	[function_name_1] функции ||| [function_name_2] [function_name_1]	count=2
arg_pair	форматирует дату / время ||| int $timestamp	count=1
function_name	случае возвращаемого значения gearman_errno ||| get errno	count=1
return	и получает список ||| array	count=1
arg_pair	если ключ key ||| string $key mixed $value	count=1
namespace	о состоянии задания ||| gearmanclient	count=1
arg_pair	и директорий опционально для ||| string $repos_url	count=1
function_name	возвращает подстроку ||| strstr	count=1
function_name	возвращает имя ||| zip entry name	count=1
function_name	выполняет проверку ||| check syntax	count=1
namespace	с каталогом ||| function	count=1
function_name	проверяя ошибки ||| php	count=1
arg_pair	programming classics: implementing ||| string $first string $second	count=1
function_name	получает класс arrayiterator который ||| get array	count=1
function_name	генерирует пригодное для хранения ||| serialize	count=1
arg_pair	первого ||| string $haystack	count=1
arg_pair	задачу для параллельной ||| string $unique	count=3
arg_pair	что новое значение ||| float $value	count=1
arg_pair	ключ key ||| string $key mixed $value	count=1
arg_pair	с именем field_name в ||| string $field_name	count=1
return	gmp в ||| int	count=1
function	номер поля [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	возвращает ||| resource $result int $row	count=2
function_name	производит верификацию файла ||| php check	count=1
function_name	может ли ||| is	count=1
return	текущее активное значение ||| bool	count=1
arg_pair	адресу репозитория и получает ||| bool $recurse	count=1
function_name	query без автоматической обработки ||| unbuffered	count=1
return	возвращая соединение с базой ||| bool	count=1
function_name	ob_start() ||| output handler	count=2
arg_pair	для конкретной ревизии ||| int $revision_no	count=1
function_name	[function_name_1] системы ||| [function_name_1] [function_name_2]	count=1
function_name	изменяет корневой ||| chroot	count=1
function_name	дату французского республиканского ||| frenchtojd	count=1
arg_pair	с текущей позиции ||| resource $large_object	count=1
function_name	через сокет ||| socket	count=1
function_name	расстоянии ||| array splice	count=1
function_name	кодировок в ||| detect order	count=1
namespace	режиме ввода / вывода ||| gearmanworker	count=1
return	имен namespaceuri и локальным ||| void	count=1
arg_pair	и до ||| string $haystack	count=1
arg_pair	использованием множественного числа ||| string $msgid2	count=1
function_name	возвращает позицию указателя ||| tell	count=1
arg_pair	строк по ||| string $first string $second	count=1
arg_pair	аналогично memcached::set() за ||| mixed $value int $expiration	count=1
function_name	файла указанного в filename ||| php	count=1
return	активное значение настройки ||| bool	count=1
function_name	альфа компонента ||| imagesavealpha	count=1
arg_pair	строку содержащую [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
return	добавляет setting ||| bool	count=1
namespace	потоковое или ||| function	count=1
function_name	из результата запроса в ||| fetch	count=1
return	специальные символы внутри ||| string	count=1
function_name	ассоциированные ||| info	count=1
namespace	устанавливает флаг ||| function	count=1
function_name	проверяет ожидает ли ||| is	count=1
arg_pair	возвращенный функцией ldap_get_dn() и ||| int $with_attrib	count=1
function_name	запросе связанным ||| fbsql	count=1
function_name	возвращает оставшуюся ||| get contents	count=2
function_name	проверяет является ли ||| field is	count=1
function_name	получает дескриптор задания ||| do	count=1
function_name	число секунд и ||| time nanosleep	count=1
function_name	http вывода ||| mb http output	count=1
function_name	синтаксиса производит верификацию ||| php check	count=1
function_name	которые ||| remove	count=1
return	проверяя ошибки ||| bool	count=1
function_name	собственный фильтр ||| stream filter	count=1
function_name	изображения ||| images	count=1
arg_pair	совпадение ||| string $pattern string $string	count=1
function_name	код ||| errno	count=1
arg_pair	0-131-00413-1 ||| string $first string $second	count=1
function_name	текущее ||| runtime	count=1
arg_pair	локальным именем localname для ||| string $namespaceuri string $localname	count=1
arg_pair	из переданного bzip2 ||| resource $bz	count=1
function_name	директорий опционально для ||| svn ls	count=1
arg_pair	рисует [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=5
arg_pair	параметре command ||| string $command string $mode	count=1
return	число дней в ||| string	count=1
arg_pair	противовес одноцветной прозрачности ||| bool $saveflag	count=1
function_name	в распакованном состоянии ||| unpacked	count=1
arg_pair	работает аналогично memcached::getdelayed() за ||| callable $value_cb	count=1
namespace	начиная с первого ||| function	count=1
function_name	ошибки в ||| php check syntax	count=1
function_name	возвращает список имён ||| list	count=1
arg_pair	является callback-функцией функции ||| string $contents int $status	count=1
arg_pair	список файлов и директорий ||| string $repos_url	count=1
function_name	под ||| set	count=1
function_name	автоматического определения кодировок в ||| detect	count=1
arg_pair	функция возвращает строку input ||| string $input int $pad_length	count=1
arg_pair	строку содержащую число ||| string $number	count=1
function_name	filename ||| syntax	count=1
function_name	заменяет ||| array replace	count=1
function_name	php ||| php	count=1
function_name	об ошибке в ||| error log	count=1
return	если ||| string	count=1
arg_pair	programming classics: implementing ||| string $second	count=1
arg_pair	проверяя ||| string $filename	count=1
arg_pair	и сдвигает внутренний ||| resource $result	count=1
function_name	umask ||| umask	count=1
function_name	разбирает ||| parse url	count=2
function_name	возвращает подстроку строки ||| strstr	count=1
arg_pair	и сдвигает внутренний указатель ||| string $class_name	count=1
function_name	механизмов ||| detect	count=1
arg_pair	открытого ранее дескриптора директории ||| int $length	count=1
function_name	массива values ||| combine	count=1
namespace	xml элемента ||| simplexmlelement	count=1
function_name	добавляет запись в ldap ||| ldap add	count=1
arg_pair	параметре plaintext текст ||| resource $identifier string $plaintext	count=1
return	альфа ||| bool	count=1
function_name	разбирает html содержащийся ||| load html	count=1
function_name	базового типа oid значений ||| pg field type oid	count=1
arg_pair	сессии в хранилище сессий ||| string $session_id string $session_data	count=1
function	расширенный атрибут [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	[function_name_1] документируемый ||| [function_name_2] [function_name_1]	count=2
function_name	bbcode_container возвращаемом ||| bbcode parse	count=1
return	закрывает поток связанный ||| void	count=1
namespace	закрывает дескриптор ||| function	count=1
function_name	возвращает информацию о подписи ||| gnupg decryptverify	count=1
arg_pair	указанным параметром remote_socket ||| string $remote_socket	count=1
arg_pair	директорий опционально для ||| string $repos_url	count=1
function_name	curl дескрипторов ||| curl multi	count=2
function_name	без вызова конструктора ||| instance without constructor	count=1
arg_pair	противовес одноцветной прозрачности и ||| resource $image bool $saveflag	count=1
function_name	einer mime kopfzeile ||| iconv mime encode	count=1
function_name	синтаксиса ||| php check syntax	count=2
function_name	текущую ||| chdir	count=1
function_name	связанный с каталогом и ||| closedir	count=1
namespace	драйвера ||| pdo	count=1
namespace	производит анимацию ||| imagick	count=1
arg_pair	memcached::getdelayed() за ||| callable $value_cb	count=1
arg_pair	фильтр filtertype ||| resource $image int $filtertype	count=1
function_name	функция преобразует ||| intval	count=1
function_name	управляющими символами ||| cntrl	count=1
function_name	получает код ошибки ||| xml get error code	count=1
arg_pair	подстроку ||| string $haystack	count=1
function_name	соответствющие html-сущности для тех ||| htmlentities	count=1
function_name	[function_name_1] максимальную длину ||| [function_name_1] [function_name_2]	count=1
arg_pair	в group ||| string $filename mixed $group	count=1
function_name	указанного в filename ||| php	count=1
return	определения кодировок ||| mixed	count=1
arg_pair	строку ||| resource $handle	count=1
namespace	в [namespace] или ||| [namespace]	count=1
function_name	algorithms by ||| similar	count=1
arg_pair	фильтр filtertype к изображению ||| resource $image int $filtertype	count=1
namespace	или двух gmp ||| function	count=1
return	файлов ||| array	count=1
function_name	сессии ||| session	count=1
namespace	или изменяет ||| function	count=1
arg_pair	с центром ||| int $cy	count=1
arg_pair	центра ||| resource $image int $cx	count=1
arg_pair	сервер задач к списку ||| string $host int $port	count=1
function_name	элементами с заданным локальным ||| by tag name ns	count=1
namespace	удалённом x сервере ||| imagick	count=1
return	этот ||| bool	count=1
namespace	объекта lob ||| oci-lob	count=8
function_name	в сокет ||| socket	count=2
function_name	возвращает версию клиента ||| get client version	count=1
function_name	в формат utf-8 ||| utf16 to utf8	count=1
function_name	для ||| escape string	count=1
arg_pair	данные хранимые в участке ||| int $shmid int $start	count=1
arg_pair	угол имеет координаты 0 ||| int $x	count=1
return	поиска ||| int	count=1
arg_pair	фильтр filtertype к ||| int $filtertype	count=1
function	обрезает строку [function_name_1] [arg_pair_2] ||| function string [function_name_1] [arg_pair_2]	count=1
function_name	добавляет запись [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	для ||| mb detect order	count=2
function_name	большой объект из ||| pg lo	count=1
function_name	учетом текущих настроек ||| strftime	count=1
arg_pair	возвращает информацию о ||| string $path int $pri	count=1
namespace	работы ||| regexiterator	count=2
return	ввода ||| bool	count=1
arg_pair	объект object в ||| mixed $object	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] frame [function_name_2]	count=2
function_name	котором ||| by tag name	count=2
arg_pair	needle в строку haystack ||| string $haystack string $needle	count=2
function_name	список ||| svn ls	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] bytea [arg_pair_2]	count=6
function_name	устанавливает опцию указанную ||| set option	count=1
return	определения кодировок в ||| mixed	count=1
function_name	[function_name_1] вхождения ||| [function_name_2] [function_name_1]	count=4
namespace	метод импортирует таблицу стилей ||| xsltprocessor	count=1
arg_pair	форматом csv ||| string $enclosure	count=1
return	[return] описанных ||| [return]	count=1
function_name	определяет к [function_name] элемент ||| [function_name]	count=1
function_name	предыдущей ||| ldap	count=1
arg_pair	данного файла ||| string $filename	count=1
return	и возвращает количество ||| int	count=1
return	список ||| array	count=4
namespace	на указанный в качестве ||| function	count=1
function_name	устанавливает параметры соединения ||| set option	count=2
arg_pair	закодированную в output_encoding ||| int $status	count=1
function_name	элементов расположенных на расстоянии ||| splice	count=1
namespace	создает новый recursivecachingiterator который ||| recursivecachingiterator	count=1
return	устанавливает в ||| void	count=1
namespace	recursivetreeiterator::valid() впервые вернет ||| recursivetreeiterator	count=1
function_name	атрибута [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	строке subject ||| preg match	count=1
arg_pair	двух строк ||| string $first	count=1
function_name	вернет временную зону ||| geoip time zone by country and region	count=1
function_name	добавляет данные ||| add record	count=1
return	целое число php integer ||| int	count=1
function_name	строках ||| detect order	count=2
arg_pair	указанным параметром remote_socket ||| int $errno	count=1
function_name	адресу репозитория и получает ||| svn ls	count=1
arg_pair	с использованием множественного числа ||| string $msgid2	count=1
function_name	классов модуля ||| classes	count=1
function_name	subject все ||| preg	count=1
arg_pair	callback-функцией функции ||| int $status	count=1
return	число ||| string	count=1
function_name	объясняя ошибку [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	текста ||| string $text	count=1
arg_pair	возвращает строку экранированную ||| string $str string $charlist	count=1
function_name	вывода возвращая [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	права доступа к указанному ||| ftp chmod	count=1
function_name	использовать в sql-запросе ||| escape	count=1
function_name	значение шрифта объекта ||| font	count=1
function_name	производит ||| php check	count=1
function_name	и конца строки ||| trim	count=1
function_name	strcasecmp() ||| strncasecmp	count=1
namespace	в programming ||| function	count=1
return	до тех пор пока ||| bool	count=1
arg_pair	переданную ||| int $blocksize	count=1
function_name	добавляет файл ||| svn add	count=1
arg_pair	текущий домен domain ||| string $domain string $msgid1	count=1
function_name	к [function_name] элемент ||| [function_name]	count=1
namespace	выполняет ||| function	count=1
arg_pair	экранирует специальные символы внутри ||| string $string	count=1
namespace	imagick ||| imagick	count=4
arg_pair	начиная с первого вхождения ||| string $haystack mixed $needle	count=1
arg_pair	строит запрос по url ||| bool $peg	count=1
function_name	аналогично memcached::prepend() за ||| prepend	count=1
return	внутри строки ||| string	count=1
function_name	magic.mime ||| content type	count=1
function_name	файла ||| check	count=1
namespace	возвращает ||| gearmanjob	count=1
function_name	создает экземпляр класса ||| create text node	count=1
function	[function_name_1] строке с ||| [function_name_1] bytea [arg_pair_2]	count=1
function_name	gmp в ||| gmp	count=1
namespace	recursivetreeiterator::valid() впервые вернет false ||| recursivetreeiterator	count=1
function_name	алгоритму ||| similar text	count=2
function_name	цвет объекта imagickpixel в ||| color as	count=1
function_name	по url адресу репозитория ||| svn	count=1
arg_pair	с центром в заданных ||| int $width	count=1
function_name	[function_name_1] версию расширения ||| [function_name_1] [function_name_2]	count=3
return	синтаксиса производит верификацию ||| bool	count=1
function_name	производит верификацию файла ||| php check syntax	count=1
function_name	числовой ||| udm	count=1
arg_pair	заданного аргументом timestamp ||| int $timestamp	count=2
namespace	директорий опционально ||| function	count=1
function_name	для механизмов ||| detect order	count=1
namespace	репозитория ||| function	count=1
function_name	задает текущее ||| set magic quotes runtime	count=1
arg_pair	аналогично memcached::replace() за исключением ||| mixed $value int $expiration	count=1
function_name	с ||| mysql create db	count=1
function_name	[function_name_1] [function_name_2] директорию ||| function bool [function_name_2] [function_name_1]	count=3
namespace	фильтров применяемых ||| filteriterator	count=1
function_name	значение ||| quotes runtime	count=2
function_name	ошибку сгенерированную последней командой ||| error	count=1
function_name	параметра ||| chdir	count=1
function_name	метод вернул значение gearman_errno ||| get errno	count=1
function_name	эта функция устанавливает ||| set	count=1
namespace	удаляет объект imagick и ||| imagick	count=1
function_name	двух строк по алгоритму ||| similar	count=1
arg_pair	значение value с ||| mixed $value	count=1
arg_pair	область ||| int $height	count=1
return	получает ||| int	count=1
function_name	получает числовой ||| udm	count=1
arg_pair	filename ||| mixed $data	count=1
function_name	работает аналогично memcached::prepend() за ||| prepend by	count=1
namespace	файлов ||| function	count=1
namespace	строку в кавычки если ||| pdo	count=1
return	[return] веб-служб ||| [return]	count=1
namespace	после распаковки ||| function	count=1
namespace	список ||| function	count=1
namespace	заставляет ||| gearmanworker	count=1
function_name	в [function_name] они ||| get elements [function_name]	count=1
function	dn возвращенный [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
return	дескриптор которого указан в ||| resource	count=1
function_name	часть строки string начинающуюся ||| substr	count=1
arg_pair	драйвера ||| string $string	count=1
function_name	xml ||| xml parser create	count=1
function_name	аналогично memcached::prepend() за исключением ||| prepend by key	count=1
arg_pair	возвращает строку [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	размер элемента ||| size	count=1
namespace	функция возвращает строку или ||| function	count=2
function_name	первого вхождения needle и ||| strstr	count=1
namespace	изображение ||| function	count=1
function_name	[function_name] callback-функцию ||| [function_name]	count=1
function_name	и получает ||| svn ls	count=1
arg_pair	в приемлемые ||| string $table_name	count=1
arg_pair	выполняет указанную команду command ||| int $return_var	count=1
function_name	возвращает число ||| count entries	count=1
function_name	и директорий опционально ||| ls	count=1
arg_pair	и сдвигает внутренний ||| string $class_name	count=1
arg_pair	сохранять всю ||| resource $image	count=1
arg_pair	на заданном потоке stream ||| resource $stream	count=1
arg_pair	преобразует правильно сформированный xml-документ ||| string $ns	count=1
arg_pair	меняет текущую директорию ||| resource $ftp_stream string $directory	count=1
function_name	для xml анализатора parser ||| xml set unparsed	count=1
arg_pair	размером до maxlength байт ||| resource $handle int $maxlength	count=1
arg_pair	ревизии ||| bool $recurse	count=1
namespace	/ ||| gearmanworker	count=1
function_name	соответствующих имени ||| name	count=1
arg_pair	вхождения needle и включая ||| mixed $needle	count=1
arg_pair	парсера ||| int $flags	count=1
arg_pair	которое будет ||| string $name string $value	count=1
namespace	функции ob_start() ||| function	count=1
function_name	после ||| begin	count=1
function_name	возвращает идентификатор [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	атрибута с пространстве имен ||| attribute ns	count=1
arg_pair	needle и включая ||| string $haystack	count=1
arg_pair	представленное в ||| int $frombase	count=1
arg_pair	настройки парсера ||| resource $bbcode_container int $flags	count=1
arg_pair	возвращает ||| resource $link_identifier	count=1
function_name	в строках ||| mb	count=1
return	переводит число дней в ||| string	count=1
arg_pair	с первого ||| string $haystack mixed $needle	count=1
function_name	xml для разбора ||| xml	count=1
function_name	всех [function_name] которые были ||| get included [function_name]	count=1
function_name	установка ||| language	count=1
function_name	свойства класса по умолчанию ||| default	count=1
function_name	датаграммный сокет ||| stream socket	count=1
namespace	с помощью метода appenditerator::append() ||| appenditerator	count=1
function_name	вывода возвращая его ||| flush	count=1
arg_pair	и директорий ||| string $repos_url int $revision_no	count=1
arg_pair	png изображение ||| resource $image	count=1
arg_pair	command ||| string $mode	count=1
function_name	конфликтующих зависимостей ||| dependencies	count=1
function_name	функция возвращает [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	необходимо указывать callback ||| callable $callback	count=1
function_name	получает ||| errno	count=1
function_name	функция создает ||| create comment	count=1
function_name	url адресу репозитория ||| svn	count=1
namespace	по url адресу репозитория ||| function	count=1
function_name	набора результатов и ||| limits	count=1
function_name	задает текущее ||| magic	count=1
function_name	sql-запросе в функции mysql_query() ||| escape string	count=1
function_name	получает имя ||| get file name	count=1
function_name	опционально для ||| ls	count=1
arg_pair	сохраняет его данные локально ||| resource $connection int $oid	count=1
arg_pair	историю правок ||| int $end_revision	count=1
namespace	следующий ||| pdo	count=1
function_name	обработчиком ошибок а ||| trigger error	count=1
return	считывает ||| resource	count=1
function_name	механизмов автоматического определения ||| order	count=1
namespace	с 0 внутреннего объекта-итератора ||| limititerator	count=1
arg_pair	файла указанного в filename ||| string $filename	count=1
function_name	функций регулярных выражений ||| ereg search init	count=1
arg_pair	указанном объекте object ||| mixed $object string $method_name	count=1
return	возвращает массив с ||| array	count=3
function_name	в качестве ||| closedir	count=1
function_name	до [function_name] терминального ||| [function_name]	count=1
function_name	кодировок в строках ||| mb detect	count=1
function_name	кодировок в ||| mb	count=1
function_name	[function_name_1] дочерний ||| [function_name_1] [function_name_2]	count=1
function_name	поля результата запроса ||| field	count=1
return	заставляет обработчика ожидать задания ||| bool	count=1
function_name	[function_name_1] внутреннюю ||| [function_name_1] [function_name_2]	count=2
namespace	верификацию файла указанного в ||| function	count=1
function_name	этот метод ||| animate images	count=1
function_name	число записей ||| ldap count	count=1
return	связанного с ||| string	count=2
namespace	текущего времени если ||| function	count=1
arg_pair	двух строк по алгоритму ||| string $first	count=1
function_name	превращает его ||| dom import simplexml	count=1
function_name	возвращает ||| entries	count=1
arg_pair	приемлемые для ||| resource $connection string $table_name	count=1
function_name	системе счисления tobase ||| base convert	count=1
function	расширенных атрибутов [arg_pair_2] ||| [function_name_1] list [arg_pair_2]	count=1
arg_pair	меняет ||| string $directory	count=1
namespace	imagick и ||| imagick	count=1
namespace	индекс ||| spldoublylinkedlist	count=1
function_name	указанного ||| php	count=1
return	[return] первого элемента ||| [return]	count=1
function	[function_name_1] и пасхой ||| [function_name_1] [arg_pair_2]	count=3
namespace	до ||| function	count=1
function_name	возвращает число записей ||| ldap	count=1
function_name	значениям [function_name] ||| [function_name]	count=2
function_name	текущий код статуса ||| response code	count=1
return	algorithms ||| int	count=1
function_name	время по гринвичу ||| gmmktime	count=1
function_name	имя ||| to	count=1
namespace	предварительно установленный функцией ||| function	count=1
function_name	новый сеанс curl и ||| curl	count=1
function_name	в байтах ||| shmop size	count=1
arg_pair	репозитория и получает ||| int $revision_no	count=1
function_name	данного ||| id3 get tag	count=1
arg_pair	в параметре socket ||| resource $socket	count=1
namespace	связанный с каталогом и ||| function	count=1
function_name	ли значение ||| is	count=1
function	синтаксис [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	на первый атрибут если ||| attribute	count=1
arg_pair	сохраняет его данные локально ||| int $oid	count=1
arg_pair	опционально для ||| string $repos_url	count=1
namespace	анимацию изображения ||| imagick	count=1
namespace	элемента ||| ziparchive	count=1
rest	массив с [function_2] ||| [function_2] [return_1]	count=1
function_name	файла указанного ||| check syntax	count=1
function_name	проверку синтаксиса производит верификацию ||| check	count=1
namespace	проверку синтаксиса производит верификацию ||| function	count=1
function_name	[function_name_1] идентификатор владельца ||| [function_name_1] [function_name_2]	count=1
function_name	возвращает ||| posix getpgid	count=1
function_name	операции поиска ||| count entries	count=1
function_name	в filename проверяя ошибки ||| php check syntax	count=1
arg_pair	возвращает массив содержащий значения ||| array $array1	count=2
function_name	[function_name_1] имени ||| string [function_name_1] [function_name_2]	count=3
arg_pair	и пасхой ||| int $method	count=1
rest	позицию [function_2] ||| [return_1] [function_2]	count=2
function	[function_name_1] подстрока needle ||| [function_name_1] [arg_pair_2]	count=1
function_name	sql-запросе ||| escape string	count=2
arg_pair	возвращает ||| string $haystack	count=1
function_name	запись в ||| zip read	count=1
function_name	соответствующее действительному id группы ||| getgid	count=1
arg_pair	с центром ||| int $cy int $width	count=1
function	[function_name_1] которое будет ||| [arg_pair_2] [function_name_1]	count=2
function	класса [arg_pair_2] ||| [function_name_1] parents [arg_pair_2]	count=1
function_name	определения кодировок в строках ||| detect	count=1
namespace	определения ||| function	count=1
function_name	[function_name_1] версию ||| [function_name_1] client [function_name_2]	count=1
function_name	[function_name_1] виде ||| [function_name_2] [function_name_1]	count=2
arg_pair	строки haystack ||| mixed $needle	count=1
function_name	создает специальный ||| posix mknod	count=1
arg_pair	[arg_pair_1] haystack ||| [arg_pair_2] [arg_pair_1]	count=6
function_name	и переданный в качестве ||| closedir	count=1
function_name	указанного канала текущего ||| color value	count=1
return	сохранять всю информацию альфа ||| bool	count=1
function_name	заполняет [function_name_2] ||| [function_name_2] [function_name_1] int $start_index int $num	count=1
arg_pair	path2 ||| string $path1 int $rev1	count=1
return	целое ||| int	count=1
return	в качестве параметра ||| bool	count=1
arg_pair	вхождения строки ||| string $encoding	count=1
return	переданный в качестве ||| void	count=1
function_name	postscript type1 ||| imagepsbbox	count=1
function_name	текущее активное ||| quotes	count=1
arg_pair	файлов и директорий опционально ||| string $repos_url	count=1
function	строку [arg_pair_2] ||| [function_name_1] string $contents [arg_pair_2]	count=1
namespace	ошибки ||| function	count=2
arg_pair	memcached::getdelayed() за исключением того ||| callable $value_cb	count=1
function_name	используя встроенное изображение ||| php logo guid	count=1
function_name	результате предыдущей операции ||| ldap	count=1
arg_pair	ошибки в коде ||| string $error_message	count=1
arg_pair	число записей сохраненных ||| resource $link_identifier resource $result_identifier	count=1
function_name	неразобранных объявлений [function_name_2] ||| [function_name_2] [function_name_1]	count=8
arg_pair	[arg_pair_1] string ||| [arg_pair_2] [arg_pair_1]	count=1
function_name	[function_name] баз ||| mysql [function_name]	count=1
function_name	в pathname ||| mkdir	count=1
function_name	функция устанавливает ||| set	count=3
arg_pair	на ||| resource $connection	count=1
function_name	содержащий все поддерживаемые кодировки ||| mb list encodings	count=1
function_name	имен таблиц базы данных ||| tables	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] array [function_name_2]	count=1
function_name	удалённом x сервере ||| animate	count=1
namespace	при работе в ||| gearmanworker	count=1
function_name	французского республиканского календаря в ||| frenchtojd	count=1
arg_pair	haystack начиная с первого ||| string $haystack	count=1
return	в строку ||| string	count=3
function_name	проверяя ошибки ||| check syntax	count=1
function_name	distortion metrics этот метод ||| image channel distortions	count=1
function_name	использования в функции crack_check() ||| crack opendict	count=1
function_name	в zip_entry ||| compressionmethod	count=1
function_name	и сервером postgresql ||| pg end	count=1
function_name	объявляет атрибут с ||| attribute	count=1
function_name	возвращает сообщение об ошибке ||| error	count=1
return	алгоритму ||| int	count=1
function_name	так и опциональных ||| number of parameters	count=1
function_name	внутренний [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	список разрешений для ||| perms	count=1
arg_pair	записи новое значение ||| mixed $value	count=1
function	поля [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
rest	[return_1] [function_2] ||| [return_1] [function_2]	count=34
arg_pair	количество ||| int $count	count=1
function_name	зону [function_name] порядку ||| [function_name] timezone	count=1
function	[function_name_1] определенное ||| [arg_pair_2] [function_name_1]	count=3
function_name	возвращает число записей ||| ldap count entries	count=1
return	из ||| resource	count=8
namespace	одного или ||| function	count=1
function	последнего вхождения [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	и сохраняет ||| imagesavealpha	count=1
function_name	для xml анализатора ||| xml set	count=4
function_name	указанный аргумент ||| arg	count=1
function	удаляет [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	координаты ||| resource $image int $x	count=1
function_name	получает список файлов ||| svn	count=1
function_name	[function_name_1] фрагментов ||| [function_name_1] [function_name_2]	count=4
function_name	атрибута с [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	или несколькими ||| function	count=1
function_name	активное ||| magic quotes runtime	count=2
function_name	записей ||| entries	count=1
arg_pair	драйвера способом ||| string $string	count=1
function_name	в кавычки ||| quote	count=1
function_name	[function_name] num ||| [function_name]	count=1
function_name	задания от какого-либо сервера ||| wait	count=1
function_name	section of a cubic ||| ps curveto	count=1
namespace	implementing the ||| function	count=1
arg_pair	alpha ||| resource $image int $red	count=1
return	текущее активное ||| bool	count=1
arg_pair	выполняет команду command ||| string $command	count=1
function_name	возвращает название ||| region name	count=1
rest	удаляет [function_2] ||| [return_1] [function_2]	count=1
function_name	разбирает html содержащийся в ||| load html	count=1
function_name	the specified distortion metrics ||| image channel distortions	count=1
namespace	режим автоматической фиксации ||| pdo	count=1
namespace	ассоциативного или индексного ||| function	count=1
function_name	получает ||| dbase get	count=1
function_name	алгоритму описанному ||| similar text	count=1
function_name	описание [function_name] кодом error_code ||| [function_name]	count=1
function_name	функции ob_start() ||| mb	count=1
arg_pair	того что аргументы формируют ||| int $minute	count=1
function_name	в юлианском ||| jdtofrench	count=1
arg_pair	socket ||| string $data	count=1
namespace	клонировать исключение ||| exception	count=1
function_name	функция устаревшей ||| deprecated	count=1
function_name	целое число ||| gmp	count=1
arg_pair	сравнивает value1 с value2 ||| mixed $value1	count=1
function_name	[function_name_1] колонки ||| [function_name_2] [function_name_1]	count=2
function_name	year для [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	преобразует число gmp в ||| gmp	count=1
function_name	клиента в ||| client	count=1
arg_pair	с использованием множественного числа ||| int $n	count=1
function	[function_name_1] fd ||| [function_name_1] [arg_pair_2]	count=3
function_name	возвращает трехсимвольный код ||| code3	count=1
function_name	имя класса объекты которого ||| info class	count=1
arg_pair	того что аргументы формируют ||| int $hour int $minute	count=1
function_name	цвет объекта ||| color as string	count=1
function_name	текущего ||| key	count=1
function_name	название региона соответствующей ||| geoip region name by	count=1
function_name	пространства имен в ||| namespace	count=1
function	[function_name_1] занимаемый значением ||| [arg_pair_2] [function_name_1]	count=4
return	функция ||| bool	count=1
function_name	бесполезна для 99% пользователей ||| bson	count=1
function_name	возвращает число записей ||| entries	count=1
function_name	[function_name] заданному ||| [function_name]	count=1
namespace	список файлов ||| function	count=1
function_name	изменяет значение указанной ||| iconv set encoding	count=1
namespace	arrayobject преобразует ||| arrayobject	count=1
arg_pair	описанному в programming classics: ||| string $first string $second	count=1
function_name	string mime набора символов ||| preferred mime name	count=1
arg_pair	хранимые в участке ||| int $shmid int $start	count=1
function_name	устанавливает буферизацию для операций ||| stream set write	count=1
arg_pair	strcmp() ||| string $str2	count=2
arg_pair	включая его ||| string $haystack mixed $needle	count=1
function_name	предыдущей ||| entries	count=1
function_name	атрибут в данной ||| attribute	count=1
function_name	эта функция возвращает ||| get elements by tag	count=1
function_name	проверку синтаксиса ||| check	count=1
function_name	entwerfen von einer mime ||| iconv mime	count=1
function_name	интерфейсах ||| socket create listen	count=2
function_name	by oliver isbn 0-131-00413-1 ||| similar	count=1
arg_pair	обозначенного контура с ||| string $pathname	count=1
function_name	файловой [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	алгоритму описанному в ||| text	count=1
arg_pair	callback-функцией ||| int $status	count=1
function_name	дескрипторов ||| multi	count=2
function_name	функция подобна strcasecmp() за ||| strncasecmp	count=1
function_name	строк ||| similar	count=1
function_name	[function_name_1] сжатого ||| [function_name_2] [function_name_1]	count=4
arg_pair	filename на указанного в ||| string $filename	count=1
function	[function_name_1] с ||| [function_name_1] [arg_pair_2]	count=2
function_name	заданную в pathname ||| mkdir	count=1
arg_pair	algorithms by oliver ||| string $first	count=1
function_name	возвращает ||| get peak usage	count=1
function	[function_name_1] socket ||| [arg_pair_2] [function_name_1]	count=3
return	код ошибки ||| int	count=1
function_name	драйвера способом ||| quote	count=1
function_name	название региона соответствующей страны ||| name by	count=1
arg_pair	gz-файла по указателю ||| resource $zp	count=1
function_name	в сокет ||| socket send	count=1
function_name	работает аналогично методу memcached::append() ||| append	count=1
namespace	метод ||| recursiveiteratoriterator	count=1
namespace	проверку синтаксиса ||| function	count=1
arg_pair	строки ||| string $str1	count=1
function	удаляет файл [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	ассоциативный ||| assoc	count=2
function_name	подходящим для драйвера ||| quote	count=1
arg_pair	производит ||| string $filename	count=1
function_name	функция возвращает ||| get all	count=1
function	статуса [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	возвращает название ||| name by	count=1
function_name	выбирает большой объект ||| pg lo	count=1
function	наложения [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	сохранять всю информацию ||| imagesavealpha	count=1
namespace	внутри строки подходящим для ||| pdo	count=1
return	расширении ||| reflectionextension	count=1
return	дней в юлианском ||| string	count=1
function_name	в ldap ||| ldap	count=1
namespace	best algorithms by ||| function	count=1
return	float ||| float	count=1
return	целое число php ||| int	count=1
return	производит анимацию ||| bool	count=1
arg_pair	assoc_array в приемлемые для ||| string $table_name	count=1
function_name	итератора ||| iterator	count=2
function_name	/ получение ||| language	count=1
arg_pair	репозитория и получает список ||| string $repos_url int $revision_no	count=1
arg_pair	проверяет определен ли указанный ||| bool $autoload	count=1
function_name	в dsn -параметре pdo::__construct() ||| available drivers	count=1
rest	параметры [function_2] ||| [return_1] [function_2]	count=1
arg_pair	с именем field_name ||| string $field_name	count=1
arg_pair	двух ||| string $first	count=1
function_name	файлов и директорий опционально ||| ls	count=1
function_name	pg_send_query() pg_send_query_params() или pg_send_execute() ||| result	count=1
arg_pair	парсера ||| int $property	count=1
function_name	механизмов автоматического определения ||| detect	count=1
function_name	и получает список ||| ls	count=1
function_name	для конкретной ревизии ||| ls	count=1
arg_pair	код региона ||| string $region_code	count=1
arg_pair	коде ||| string $error_message	count=1
function_name	было изменено ||| get mtime	count=1
function_name	класса которое будет использовать ||| set file class	count=1
namespace	возвращая соединение с ||| pdo	count=1
function_name	проверяя ошибки в ||| php	count=1
arg_pair	регулярному выражению в многобайтной ||| string $pattern string $option	count=1
namespace	операционной системы [namespace] ||| [namespace]	count=3
namespace	записи последнего запроса ||| memcached	count=1
arg_pair	вычисляет расхождение ||| array $array1 array $array2	count=1
namespace	устанавливает ||| function	count=1
arg_pair	сохраненных ||| resource $result_identifier	count=1
arg_pair	текущий домен domain ||| string $domain	count=1
function	[function_name_1] функцией ldap_get_dn() ||| [function_name_1] [arg_pair_2]	count=2
function_name	формата utf-8 ||| utf8	count=1
namespace	закрывает поток связанный с ||| function	count=1
function_name	[function_name_1] все ||| [function_name_2] [function_name_1]	count=1
function_name	the worlds best algorithms ||| similar text	count=1
function_name	[function_name_1] цвет в ||| [function_name_1] [function_name_2]	count=1
namespace	экранирует специальные символы внутри ||| pdo	count=1
function_name	возвращает информацию ||| get	count=1
function_name	начала и конца строки ||| trim	count=1
function_name	выполняет проверку синтаксиса производит ||| php check syntax	count=1
function_name	получает список файлов и ||| svn ls	count=1
return	узел ||| bool	count=1
function_name	заданным локальным ||| tag name ns	count=1
arg_pair	цветом color ||| int $x	count=1
function_name	атрибут ||| set id attribute	count=2
function_name	устанавливает опорной точку ||| set geo	count=1
return	получает числовой код ошибки ||| int	count=1
namespace	класса infiniteiterator ||| infiniteiterator	count=1
function_name	связанный с каталогом ||| closedir	count=1
return	с ||| void	count=1
arg_pair	а массив ||| array $args	count=1
arg_pair	возвращает информацию о ||| string $path	count=2
function_name	атрибут в пространстве ||| attribute ns	count=1
namespace	времени если аргумент ||| function	count=1
namespace	контейнер заданный объект ||| splobjectstorage	count=1
function_name	сокет ||| socket	count=5
function_name	вставляет ||| pg insert	count=1
arg_pair	строку haystack ||| string $haystack mixed $needle	count=1
function	[function_name_1] которое будет ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	изображении image ||| int $y int $color	count=1
arg_pair	callback которая выполнится после ||| mixed $parameter	count=1
function_name	получение содержимого кэша ||| cache	count=1
arg_pair	объект object ||| mixed $object	count=1
function_name	получает первый ||| ldap first	count=1
function_name	кавычки если ||| quote	count=1
namespace	эта функция ||| function	count=1
function_name	трехсимвольный код ||| code3	count=1
function_name	первого ||| strstr	count=1
function_name	year ||| days	count=1
function_name	получает первый атрибут ||| first attribute	count=1
arg_pair	файла ||| string $filename	count=6
arg_pair	строку ||| string $number	count=1
function_name	флаг сохранять ||| imagesavealpha	count=1
arg_pair	получает ||| int $revision_no	count=1
function_name	временную зону и код ||| geoip time zone by country	count=1
namespace	компонента в ||| function	count=1
function_name	возвращает максимальный объем памяти ||| memory get peak usage	count=1
return	кодировок в строках ||| mixed	count=1
function_name	[function_name_1] документируемый комментарий ||| [function_name_1] [function_name_2]	count=2
function_name	возвращает [function_name_2] ||| [function_name_1] [function_name_2] index int $index int	count=1
function_name	версию версии [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	устанавливает буферизацию для операций ||| set write buffer	count=1
function_name	устанавливает буферизацию ||| stream set write buffer	count=1
function_name	получает ||| udm errno	count=2
return	результате предыдущей ||| int	count=1
function_name	указанный интерфейс ||| interface	count=1
arg_pair	функциями imagecolorallocate() ||| resource $image int $color	count=1
function_name	value1 с value2 ||| compare	count=1
arg_pair	конца строки ||| string $haystack	count=1
function_name	memcached::prepend() за ||| prepend by	count=1
function_name	проверку ||| check	count=1
function_name	в bbcode_container возвращаемом ||| bbcode	count=1
function_name	добавляет [function_name_2] ||| [function_name_1] task [function_name_2]	count=4
function_name	столбца ||| sqlite column	count=1
function_name	буквенными ||| alpha	count=1
arg_pair	аналогично memcached::replace() за исключением ||| int $expiration	count=1
return	подстроку ||| string	count=1
arg_pair	worlds ||| string $second	count=1
namespace	подключается к searchd выполняет ||| sphinxclient	count=1
function_name	формат utf-8 ||| pdf utf16 to utf8	count=1
arg_pair	в programming ||| string $first	count=1
return	качестве параметра directory ||| bool	count=1
arg_pair	которое будет передано клиенту ||| string $value	count=1
function_name	определенный ||| stream	count=1
arg_pair	новое значение ||| mixed $value int $expiration	count=1
function_name	отключить уже определённую ||| unregister	count=1
function_name	файл remote_file с ||| fget	count=1
arg_pair	парсера ||| resource $bbcode_container int $flags	count=1
arg_pair	строке haystack ||| string $haystack string $needle	count=2
function_name	функция возвращает текущую ||| solr get	count=2
function_name	ищет в строке subject ||| preg	count=1
function_name	атрибута с ||| attribute	count=1
arg_pair	с центром в ||| int $cy	count=1
function_name	методов в ||| methods	count=1
function_name	физическим устройством ||| eio fdatasync	count=1
return	анимацию изображения ||| bool	count=1
namespace	последнем insert update или ||| function	count=1
function_name	запись ||| zip read	count=2
arg_pair	ссылку path в ||| string $path bool $recursive	count=1
function_name	узел php-кодом ||| php	count=1
arg_pair	число записей сохраненных в ||| resource $result_identifier	count=1
arg_pair	координаты 0 0 цветом ||| resource $image int $x	count=1
arg_pair	а также с ||| string $error_msg	count=1
function_name	сущностей для [function_name_2] ||| [function_name_2] [function_name_1]	count=3
namespace	связанный с ||| function	count=1
arg_pair	домен domain для ||| string $domain string $msgid1	count=1
function_name	возвращает данные ассоциированные с ||| get info	count=1
return	двух строк по алгоритму ||| int	count=1
function_name	перемещает указатель на заданную ||| seek	count=1
function_name	перевернутую задом наперед ||| strrev	count=1
arg_pair	строки ||| string $source	count=1
namespace	работы ||| gearmanjob	count=1
arg_pair	была создана функциями imagecolorallocate() ||| int $color	count=1
namespace	специальные символы внутри ||| pdo	count=1
function_name	из [function_name] ||| [function_name]	count=1
function_name	syslog функциях ||| define syslog variables	count=1
function_name	может ли значение переменной ||| is	count=1
function_name	nanoseconds число секунд ||| time nanosleep	count=1
function_name	системный журнал ||| closelog	count=1
namespace	поведением ||| arrayiterator	count=1
function_name	имя класса которое будет ||| set file class	count=1
function_name	аналогично memcached::prepend() за ||| prepend by	count=1
function_name	собственный фильтр ||| filter	count=1
function_name	получает записи из базы ||| get	count=1
return	установка / получение текущего ||| mixed	count=1
function	в байтах [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	директории ||| resource $zip_entry	count=1
function_name	строк по ||| text	count=1
return	и возвращает его ||| string	count=1
function_name	числовой код ошибки ||| errno	count=1
function_name	данных postgresql ||| pg connect	count=1
function_name	файла указанного ||| php check	count=1
arg_pair	target с именем link ||| string $link	count=1
arg_pair	записей ||| resource $link_identifier	count=1
arg_pair	представленное ||| int $frombase	count=1
function_name	класса ||| set file class	count=2
namespace	algorithms by ||| function	count=1
function_name	einer mime ||| iconv mime encode	count=1
return	дескриптор которого ||| resource	count=1
namespace	the worlds best algorithms ||| function	count=1
function_name	в ||| gmp	count=1
function_name	разделяет dn возвращенный ||| dn	count=1
function_name	объявляет атрибут с ||| set id attribute	count=1
function_name	и значения массива values ||| combine	count=1
namespace	таблицы стилей которые установлены ||| xsltprocessor	count=1
function_name	шестнадцатеричными цифрами ||| xdigit	count=1
function_name	атрибут с заданным локальным ||| id attribute ns	count=1
arg_pair	записываются в ||| resource $out	count=1
function_name	значение ||| magic quotes runtime	count=2
function_name	повторных попыток и задержку ||| retries	count=1
function_name	[function_name_1] жанра ||| [function_name_1] [function_name_2]	count=1
function_name	по алгоритму описанному в ||| similar text	count=1
function_name	функция вернет временную зону ||| geoip time zone by country	count=1
function_name	удаления из ||| dbase delete	count=1
function_name	начала и конца ||| trim	count=1
arg_pair	строки haystack ||| string $haystack	count=1
function_name	размер элемента архива в ||| size	count=1
arg_pair	memcached::getdelayed() ||| callable $value_cb	count=1
arg_pair	по url адресу ||| string $repos_url	count=1
function_name	механизмов автоматического определения кодировок ||| detect	count=1
function_name	ресурсом потока ||| stream	count=1
arg_pair	куда ||| int $line	count=1
namespace	элемент допустимое ||| limititerator	count=1
return	сохраняет png ||| bool	count=1
namespace	0-131-00413-1 ||| function	count=1
function_name	атрибут не существует или ||| attribute	count=1
function_name	целое число php ||| gmp	count=1
arg_pair	массив содержащий все ||| array $array1	count=1
namespace	файлов и директорий ||| function	count=1
namespace	implementing the worlds best ||| function	count=1
namespace	в filename проверяя ||| function	count=1
arg_pair	преобразует строку ||| string $string int $split_length	count=1
namespace	узлы двусвязный список ||| spldoublylinkedlist	count=1
function_name	указанный интерфейс или ||| implements interface	count=1
function_name	разбирает url и возвращает ||| parse url	count=1
function_name	поля результата запроса postgresql ||| pg field	count=1
function_name	[function_name_1] параметры соединения ||| [function_name_2] [function_name_1]	count=3
namespace	данных в режим ||| pdo	count=1
function_name	контейнера объекты [function_name] другом ||| [function_name]	count=1
function_name	изображение ||| image	count=3
function_name	документируемый [function_name_2] ||| [function_name_1] [function_name_2]	count=2
function_name	позицию первого ||| mb stripos	count=1
arg_pair	других функциях pspell ||| string $spelling	count=1
function_name	и опциональных ||| get number of parameters	count=1
namespace	всю информацию ||| function	count=1
namespace	или каталога ||| function	count=1
namespace	путь к файлу или ||| function	count=1
function_name	автоматического определения кодировок ||| mb	count=1
function_name	задает ||| set magic quotes	count=1
arg_pair	используя truetype шрифт ||| string $fontfile	count=1
namespace	допустимое значение ||| limititerator	count=1
function_name	начиная ||| strstr	count=1
arg_pair	needle в строке haystack ||| string $needle	count=2
arg_pair	в локальный файл ||| string $local_file	count=1
function_name	несколько полей заголовка mime ||| iconv mime	count=1
function_name	best algorithms by ||| similar	count=1
arg_pair	именем localname текущего элемента ||| string $namespaceuri string $localname	count=1
function_name	копирования данных совершенных ||| end copy	count=1
function_name	subject все совпадения ||| preg match all	count=1
function_name	верификацию файла указанного ||| php check syntax	count=1
arg_pair	создана функциями imagecolorallocate() или ||| int $color	count=1
arg_pair	установленным в объекте imagickpixel ||| mixed $bordercolor int $width	count=1
arg_pair	за один раз ||| int $mode	count=1
function_name	рамки вокруг ||| imagettfbbox	count=1
namespace	базой данных ||| pdo	count=2
arg_pair	в текстовом ||| resource $identifier int $armor	count=1
arg_pair	начиная с первого вхождения ||| mixed $needle	count=1
function_name	возвращает минимальную [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	[function_name_1] расширение файла ||| [function_name_2] [function_name_1]	count=1
return	директорий опционально ||| array	count=1
function_name	получает записи из базы ||| dbase get	count=1
function_name	возвращает число столбцов ||| field count	count=1
namespace	в [namespace] ||| [namespace]	count=8
function_name	worlds best algorithms ||| text	count=1
namespace	в данный момент или ||| function	count=1
function_name	curl и освобождает все ||| curl close	count=1
function_name	число gmp в ||| intval	count=1
function_name	[function_name_1] идентификатор владельца ||| [function_name_2] [function_name_1]	count=1
arg_pair	репозитория ||| string $repos_url int $revision_no	count=1
function_name	других xml ||| xml parser	count=1
function_name	в соответствющие html-сущности ||| htmlentities	count=1
arg_pair	других функциях pspell ||| string $language string $spelling	count=1
function_name	производит анимацию ||| animate	count=1
function_name	сеанс curl ||| curl	count=2
function_name	размер сжатого элемента архива ||| get packed size	count=1
namespace	данные контейнера ||| splobjectstorage	count=1
function_name	[function_name_1] сжатия ||| [function_name_2] [function_name_1]	count=2
function_name	запрос по url адресу ||| svn	count=1
function_name	delete ||| affected rows	count=2
return	синтаксиса производит ||| bool	count=1
function_name	dbase_delete_record() ||| dbase pack	count=2
function_name	уникальный идентификатор этого задания ||| uuid	count=1
function_name	количество полей в ||| num fields	count=1
function_name	возвращает число ||| ldap count	count=1
function_name	указанный обратный вызов статуса ||| task status	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] server [function_name_2]	count=1
return	экранирует специальные символы ||| string	count=1
function_name	первый [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function	имен таблиц [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	записи последнего ||| memcached	count=1
function_name	в spl [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	фрагментов ||| excerpts	count=1
function_name	этот метод производит ||| images	count=1
function_name	текущее активное значение ||| set magic quotes runtime	count=1
function_name	в spl очереди метода ||| spl	count=1
arg_pair	search в subject заменены ||| mixed $replace	count=2
function_name	из репозитория ||| svn export	count=1
function_name	идентификатор ||| set id	count=2
function_name	функциями pg_send_query() pg_send_query_params() или ||| result	count=1
function_name	[function_name_1] заголовки ||| [function_name_2] [function_name_1]	count=2
arg_pair	возвращает строку содержащую число ||| string $number	count=1
function_name	ошибках ||| field	count=1
function_name	является ли ||| is	count=1
function_name	implementing the ||| similar text	count=1
function_name	в большой объект начиная ||| pg lo	count=1
namespace	двух [namespace] ||| [namespace]	count=1
namespace	в юлианском ||| function	count=1
function_name	класса которое будет использовать ||| class	count=1
function_name	фоновую ||| background	count=2
arg_pair	файла ||| int $srcx	count=1
function_name	атрибут с заданным ||| id attribute	count=1
arg_pair	подобна strcmp() за исключением ||| string $str2	count=1
function_name	список имён ||| list	count=1
arg_pair	текста в пикселах ||| float $size float $angle	count=1
arg_pair	начиная с позиции offset ||| int $offset int $count	count=1
arg_pair	x y до начала ||| float $y	count=1
function_name	возвращает ||| get properties	count=1
return	в ||| int	count=3
arg_pair	необходимо указывать callback -функцию ||| mixed $pattern callable $callback	count=1
function_name	файл remote_file ||| ftp fget	count=1
function_name	filename ||| php check	count=1
return	заставляет ||| bool	count=1
namespace	проверяет содержит ли контейнер ||| splobjectstorage	count=1
function_name	возвращает ||| get	count=125
arg_pair	центром ||| int $cy	count=1
namespace	и до конца строки ||| function	count=1
namespace	одним или несколькими другими ||| function	count=1
function_name	с ||| string	count=1
function_name	строк по алгоритму описанному ||| similar text	count=1
function_name	algorithms by ||| similar text	count=1
arg_pair	the worlds best algorithms ||| string $first	count=1
function_name	содержимое ||| from string	count=1
function_name	значение указанного канала текущего ||| color	count=1
function_name	возвращает позицию первого ||| mb stripos	count=1
namespace	впервые ||| recursivetreeiterator	count=1
namespace	описания [namespace] интерфейса используя ||| [namespace]	count=1
function_name	best algorithms by ||| similar text	count=1
return	по алгоритму описанному ||| int	count=1
arg_pair	запрос по url ||| string $repos_url	count=1
namespace	или двух ||| function	count=1
namespace	by oliver ||| function	count=1
function_name	экранирует спецсимволы в строке ||| escape	count=1
namespace	добавляет ||| function	count=1
arg_pair	с локальным именем localname ||| string $localname	count=1
function_name	фоновом режиме возвращая ||| background	count=2
return	является ||| string	count=1
arg_pair	[arg_pair] что ||| [arg_pair]	count=1
arg_pair	чисел a ||| gmp $a gmp $b	count=1
namespace	объект imagick и освобождает ||| imagick	count=1
namespace	элементы одного или большего ||| function	count=1
arg_pair	генерирует yaml-представление из данных ||| int $encoding int $linebreak	count=1
function_name	метод производит анимацию изображения ||| animate images	count=1
function_name	переведены в нижний регистр ||| strtolower	count=1
arg_pair	альфа ||| resource $image	count=1
return	пор пока следующий вызов ||| bool	count=1
namespace	потоковый или датаграммный ||| function	count=1
function_name	имеет смысла ||| jewishtojd	count=1
namespace	класс splfileobject ||| splfileobject	count=2
function_name	счисления tobase ||| base convert	count=1
return	строку содержащую код ||| string	count=1
namespace	текущий элемент directoryiterator для ||| directoryiterator	count=2
return	производит верификацию файла указанного ||| bool	count=1
function_name	classics: implementing the worlds ||| similar	count=1
function	ошибок [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	извлекает ключевые слова из ||| build	count=1
arg_pair	для ||| string $string	count=1
function_name	создает ||| create comment	count=2
function_name	которой был преобразован ||| lcfirst	count=1
arg_pair	в ||| resource $link_identifier	count=1
arg_pair	socket ||| resource $socket	count=1
return	с ||| bool	count=1
arg_pair	занимаемый значением ||| resource $result int $field_number	count=1
namespace	сравнивает value1 с value2 ||| splheap	count=1
namespace	данная ||| function	count=1
function_name	префикс пространства имен ||| lookup prefix	count=1
function	поиск соответствий [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	[function_name_1] календаря calendar ||| [function_name_2] [function_name_1]	count=2
function_name	возвращает максимальный ||| memory get peak usage	count=1
function_name	в строках ||| detect order	count=1
function_name	через сокет ||| socket shutdown	count=1
function_name	subject ||| preg	count=2
function_name	узла ||| node	count=4
function_name	строке text ||| ctype	count=9
function_name	или imagecolorallocatealpha() ||| imagecolordeallocate	count=1
arg_pair	устанавливает предельное количество запросов ||| resource $grp int $limit	count=1
arg_pair	значения записи новое значение ||| mixed $value int $expiration	count=1
arg_pair	ссылающийся на него ресурс ||| string $separator	count=1
function	позицию первого [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	изображение ||| imagesavealpha	count=1
function_name	заданным локальным ||| name ns	count=1
function_name	или удалённом ||| animate	count=1
namespace	programming classics: implementing the ||| function	count=1
arg_pair	домен domain для одного ||| string $domain string $message	count=1
function_name	строки подходящим для драйвера ||| quote	count=1
namespace	первого ||| function	count=1
return	верификацию файла ||| bool	count=1
namespace	[namespace] в числовом ||| [namespace]	count=1
function_name	[function_name] num элементами ||| [function_name]	count=1
namespace	механизмов автоматического определения ||| function	count=1
function_name	впервые ||| end	count=2
arg_pair	функция идентична функции ereg_replace() ||| string $replacement	count=1
function_name	выполняет проверку синтаксиса ||| check syntax	count=1
function_name	директории заданного в zip_entry ||| compressionmethod	count=1
arg_pair	strcmp() за ||| string $str2	count=1
return	или удалённом ||| bool	count=1
function_name	programming classics: ||| text	count=1
return	число записей ||| int	count=1
function_name	байт в сокет ||| socket send	count=1
namespace	функция ||| reflectionfunctionabstract	count=1
arg_pair	эта функция включает буферизацию ||| callable $output_callback int $chunk_size	count=1
namespace	или каталогу данная ||| function	count=1
return	расширения в виде строки ||| string	count=1
return	функции ||| string	count=1
namespace	каталогом и ||| function	count=1
namespace	или большего количества ||| function	count=1
function_name	связанные с ним ||| destroy	count=1
return	производит relaxng [return] документа ||| [return]	count=1
function_name	низкоприоритетную фоновую ||| low background	count=2
arg_pair	что аргументы формируют ||| int $hour int $minute	count=1
function_name	задания ||| do	count=1
arg_pair	описанному в параметре socket ||| resource $socket	count=1
arg_pair	производит верификацию файла указанного ||| string $filename	count=1
function_name	возвращает разницу ||| array diff uassoc	count=1
function_name	переданный ||| closedir	count=1
function_name	целое ||| intval	count=1
function_name	все строки ||| all	count=1
function_name	столбца [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function_name	и ||| ls	count=2
return	строки подходящим ||| string	count=1
function_name	предыдущей операции поиска ||| ldap count	count=1
function_name	быть действующим ресурсом сокета ||| socket connect	count=1
function_name	ваш собственный фильтр ||| filter register	count=1
arg_pair	совпадение ||| string $pattern	count=1
function_name	возвращает определение ||| pg meta data	count=1
function_name	инициализирует новый сеанс curl ||| curl	count=1
arg_pair	добавляет пару [arg_pair] ||| [arg_pair]	count=2
function_name	возвращает ||| pdf get	count=2
arg_pair	ссылающийся ||| string $encoding string $separator	count=1
return	до ||| bool	count=1
function_name	устанавливает [function_name_2] ||| [function_name_1] character data [function_name_2]	count=1
function_name	ошибок а ||| trigger error	count=1
arg_pair	и length ||| string $charset	count=1
function_name	текущее активное значение ||| set magic	count=1
function_name	возвращает трассировку стека ||| get trace as string	count=1
function_name	двух строк ||| text	count=1
function_name	кодировок ||| mb detect	count=1
function_name	читает все значения ||| ldap get values len	count=1
namespace	domcomment ||| domcomment	count=1
return	или пустую строку если ||| string	count=1
namespace	двух строк по алгоритму ||| function	count=1
function_name	ресурсом сокета созданным ||| socket connect	count=1
arg_pair	вхождения needle ||| string $haystack	count=1
function_name	установка / получение ||| language	count=1
function_name	на расстоянии ||| array splice	count=1
function_name	на генерацию [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	получает ||| stream get line	count=2
function_name	dn ||| explode dn	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] character data [function_name_2]	count=1
namespace	определён ли [namespace] в пространстве ||| [namespace]	count=1
function_name	код ошибки ||| error code	count=2
function_name	компонента ||| imagesavealpha	count=1
arg_pair	из assoc_array в приемлемые ||| resource $connection string $table_name	count=1
arg_pair	директорию на заданную аргументом ||| resource $ftp_stream	count=1
function_name	glue ||| implode	count=1
return	и экранирует специальные символы ||| string	count=1
return	указанную параметром variable ||| string	count=1
function_name	формате xbm изображения ||| imagexbm	count=1
function_name	устанавливает параметры ||| set params	count=2
namespace	ожидать ||| gearmanworker	count=1
arg_pair	[arg_pair_1] возвращает ее ||| [arg_pair_1] [arg_pair_2]	count=3
function_name	возвращает число записей ||| count entries	count=1
function_name	объявляет атрибут с заданным ||| set id attribute ns	count=1
function_name	строк по ||| similar	count=1
function	[function_name_1] в fd ||| [arg_pair_2] [function_name_1]	count=4
function_name	функция устанавливает ||| set option	count=1
namespace	выбирает одно или ||| function	count=1
function_name	by oliver isbn 0-131-00413-1 ||| similar text	count=1
function_name	postgresql result ||| pg	count=1
arg_pair	по url адресу репозитория ||| int $revision_no	count=1
function_name	формата utf-8 [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	первого вхождения needle ||| function	count=1
arg_pair	аргументом timestamp ||| int $timestamp int $format	count=2
namespace	заставляет обработчика ожидать задания ||| gearmanworker	count=1
function_name	печатными ||| print	count=1
arg_pair	возвращает строку string ||| string $string	count=1
function_name	указатель на заданную ||| seek	count=1
namespace	дескриптор ||| gearmanjob	count=1
function_name	сервера набора результатов ||| limits	count=1
namespace	требуется и ||| pdo	count=1
arg_pair	unescaped_string ||| string $unescaped_string	count=1
function_name	результата запроса в ||| oci fetch	count=1
function_name	в функции crack_check() ||| opendict	count=1
return	качестве ||| bool	count=1
function_name	записывает данные сессии в ||| write	count=1
function_name	ревизии ||| svn ls	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] set [function_name_1]	count=28
function_name	директорий опционально для ||| svn	count=1
arg_pair	needle в строку haystack ||| string $needle	count=2
function_name	utf-8 ||| utf16 to utf8	count=2
arg_pair	строк по алгоритму ||| string $second	count=1
arg_pair	заданными свойствами ||| array $fields	count=1
return	в юлианском летоисчислении ||| string	count=1
function	статуса [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	для ||| quote	count=1
function_name	автоматического ||| detect	count=1
return	внутри строки подходящим для ||| string	count=1
return	oliver isbn ||| int	count=1
function_name	число php integer ||| gmp intval	count=1
return	драйвера ||| string	count=1
function_name	временную зону и код ||| geoip time zone by	count=1
function_name	низким приоритетом и возвращает ||| do low	count=1
function_name	этот метод ||| images	count=1
namespace	выставляет итератор массива ||| splfixedarray	count=1
function_name	fopen() ||| contents	count=1
function_name	встроенным обработчиком ошибок ||| trigger error	count=1
return	операции поиска ||| int	count=1
function_name	какому типу принадлежит текущей ||| get type	count=1
function_name	по ||| svn ls	count=2
function_name	в виде ||| to	count=1
return	файл дескриптор которого указан ||| resource	count=1
function_name	по ||| svn	count=1
function_name	подстроку строки ||| strstr	count=1
arg_pair	слева справа ||| string $pad_string int $pad_type	count=1
function_name	uri ||| transform to uri	count=1
namespace	добавляет setting в ||| function	count=1
function_name	gmp ||| gmp intval	count=2
function_name	может ли значение ||| is callable	count=1
return	исходный узел в строку ||| string	count=1
function_name	в ||| check syntax	count=4
function_name	в пространстве имен ||| in namespace	count=1
arg_pair	буфера buf ||| int $flags	count=1
function_name	класса которое ||| file class	count=1
function_name	функция вернет временную зону ||| time zone by country and region	count=1
function_name	временную зону и код ||| geoip time zone by country and region	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] has [function_name_1]	count=1
function_name	возвращает цвет объекта ||| get color as string	count=1
function_name	[function_name_1] трассировку стека ||| [function_name_1] [function_name_2]	count=1
namespace	позицию внутреннего указателя объекта ||| oci-lob	count=1
namespace	либо [namespace] ||| [namespace]	count=1
namespace	или удалённом x ||| imagick	count=1
arg_pair	именем localname для ||| string $localname	count=1
function_name	memcached::prepend() за исключением ||| prepend	count=1
function_name	best algorithms by oliver ||| similar text	count=1
namespace	ввода / вывода заставляет ||| gearmanworker	count=1
function_name	элемента в виде узла ||| node	count=2
arg_pair	использованием множественного числа ||| int $n	count=1
arg_pair	начиная ||| string $haystack mixed $needle	count=1
function_name	значениях ||| unescape	count=1
function_name	удаление с помощью dbase_delete_record() ||| dbase pack	count=1
function_name	[function_name_1] версию расширения ||| [function_name_2] [function_name_1]	count=4
arg_pair	включая его и до ||| string $haystack	count=1
return	не ||| bool	count=1
namespace	неблокирующем режиме ||| gearmanworker	count=1
arg_pair	вывод в текстовом ||| int $armor	count=1
function_name	объект object ||| construct	count=1
return	директорий опционально для конкретной ||| array	count=1
arg_pair	эта функция ||| string $filename int $flags	count=1
namespace	нижний регистр если этот ||| function	count=1
function	[function_name_1] и сдвигает ||| [function_name_1] object [arg_pair_2]	count=1
function_name	theirself ||| disable view	count=1
function_name	значение настройки ||| quotes	count=1
function_name	в котором ||| by tag name	count=1
namespace	директорий ||| function	count=1
function_name	строк ||| text	count=1
function_name	values в ||| combine	count=1
function_name	автоматического определения кодировок ||| mb detect order	count=1
function_name	элементов расположенных на расстоянии ||| array splice	count=1
arg_pair	строку экранированную обратными слешами ||| string $str string $charlist	count=1
function_name	расширение ||| image type to extension	count=1
function_name	isbn ||| similar	count=1
namespace	функция закрывает дескриптор используемый ||| function	count=1
arg_pair	filename на указанного ||| mixed $user	count=1
arg_pair	в programming classics: ||| string $second	count=1
function_name	интерфейс или нет ||| interface	count=1
namespace	результате предыдущей операции ||| function	count=1
function_name	в верхний регистр ||| strtoupper	count=1
function_name	и индексов ||| udiff uassoc	count=1
namespace	в кавычки если требуется ||| pdo	count=1
function_name	следующий элемент или ||| next	count=1
function_name	вставленной в таблицу ||| pg last	count=1
function_name	название ||| geoip region name by	count=1
namespace	этот метод производит анимацию ||| imagick	count=1
function_name	цвет ||| color as	count=1
function_name	позицию первого ||| stripos	count=2
function_name	[function_name_1] символьных данных ||| [function_name_2] [function_name_1]	count=2
arg_pair	и директорий опционально ||| int $revision_no	count=1
function_name	в запросе sqlite ||| sqlite escape	count=1
function_name	следующую ||| zip	count=1
function_name	буфера вывода ||| ob	count=1
arg_pair	и ||| string $string	count=1
function_name	смещение ||| offset	count=1
function_name	возвращает версию сервера ||| mysqli get server version	count=1
function_name	объекта ||| fetch object	count=1
arg_pair	указывать callback -функцию ||| mixed $pattern callable $callback	count=1
function_name	vars ||| mb convert variables	count=1
function_name	[function_name_1] postgresql ||| [function_name_2] [function_name_1]	count=2
function_name	операции поиска ||| entries	count=1
function_name	unlink() ||| unlink	count=1
function_name	описанному в ||| text	count=1
function_name	подсчитывает количество элементов в ||| iterator count	count=1
function_name	палитре изображения ||| imagecolorexact	count=1
arg_pair	в строке с данными ||| resource $connection string $data	count=1
function_name	имени ||| by name	count=6
namespace	recursivefilteriterator ||| recursivefilteriterator	count=1
arg_pair	подстроку строки haystack ||| mixed $needle	count=1
function_name	algorithms by oliver ||| similar	count=1
arg_pair	двух строк по ||| string $first string $second	count=1
return	строку из ||| string	count=1
function_name	[function_name_1] максимальную длину ||| [function_name_2] [function_name_1]	count=1
return	строку если ||| string	count=1
arg_pair	аналогично memcached::set() за исключением ||| mixed $value int $expiration	count=1
function_name	анимацию изображения ||| animate	count=1
function_name	строке text [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	указанную в параметре offset ||| int $offset	count=1
arg_pair	запрос по url ||| bool $recurse	count=1
function_name	[function_name_1] потомки ||| [function_name_2] [function_name_1]	count=3
arg_pair	filtertype к ||| resource $image int $filtertype	count=1
return	с указателем на ресурс ||| string	count=1
function_name	[function_name_1] [function_name_2] ||| function bool [function_name_2] [function_name_1]	count=2
function_name	the ||| similar	count=1
function_name	возвращает текущую версию расширения ||| solr get version	count=1
arg_pair	значение указанное параметром optval ||| mixed $optval	count=1
function_name	выполняет ||| php check syntax	count=2
arg_pair	url адресу репозитория и ||| int $revision_no	count=1
function_name	[function_name_1] высоту ||| [function_name_2] [function_name_1]	count=1
function_name	конструктором ||| constructor	count=1
function_name	метод выводит изображение ||| display image	count=1
arg_pair	и ||| string $attrlat	count=1
function_name	значение настройки ||| quotes runtime	count=1
namespace	заданий ||| gearmanworker	count=1
function_name	список файлов и директорий ||| svn ls	count=1
return	строку в системе ||| string	count=1
return	способом ||| string	count=1
function_name	classics: implementing the worlds ||| text	count=1
function_name	символьных данных для заданного ||| character data	count=1
function_name	distortion metrics этот ||| image channel distortions	count=1
function_name	специальный fifo ||| posix mkfifo	count=1
function_name	функция возвращает название региона ||| name by	count=1
function_name	проверяет подключен ли клиент ||| connection aborted	count=1
function_name	или удалённом x сервере ||| animate	count=1
function_name	которого указан ||| eio fchmod	count=1
function	датаграммный сокет [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	заданный фильтр filtertype ||| int $filtertype	count=1
arg_pair	для конкретной ||| string $repos_url int $revision_no	count=1
function_name	считывает следующую запись ||| zip	count=1
function_name	a section of a ||| ps curveto	count=1
function_name	вычисляет побитовое ||| or	count=1
arg_pair	базе данных используя локальный ||| resource $connection	count=1
function_name	не имеет смысла ||| jewishtojd	count=1
function_name	ищет в строке subject ||| preg match all	count=1
function_name	является ||| output handler	count=2
arg_pair	принимает [arg_pair] ||| [arg_pair]	count=1
arg_pair	в result аргумент callback ||| mixed $data	count=2
arg_pair	двух строк по ||| string $second	count=1
function_name	[function_name] после вызова ||| [function_name]	count=3
namespace	удаляет объект imagick ||| imagick	count=1
function_name	часть ||| substr	count=2
function_name	[function_name_1] максимальную ||| [function_name_1] [function_name_2]	count=1
function_name	результате предыдущей операции ||| ldap count	count=1
namespace	imagick и освобождает ||| imagick	count=1
return	неблокирующем режиме ввода / ||| bool	count=1
function_name	memcached::prepend() за исключением ||| prepend by key	count=1
function_name	информацию о существующем ||| meta data	count=1
function_name	название колонки ||| field name	count=2
function_name	название ||| name by	count=1
namespace	выполняет заданный xpath ||| domxpath	count=1
return	и включая его ||| string	count=1
function_name	эта функция создает экземпляр ||| create text	count=1
function_name	utf-8 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	функция устанавливает опцию ||| set option	count=1
arg_pair	начиная с позиции offset ||| int $offset int $length	count=1
return	x ||| bool	count=1
arg_pair	worlds best ||| string $first string $second	count=1
arg_pair	target с именем ||| string $target	count=1
function_name	является ||| is	count=1
function_name	по алгоритму описанному ||| similar text	count=1
arg_pair	двух файлов path1 и ||| string $path2	count=1
function_name	методу memcached::append() ||| append	count=1
function_name	версию клиента ||| client version	count=2
arg_pair	смещение offset для ||| int $offset	count=1
function_name	версию версии [function_name_2] ||| [function_name_2] [function_name_1]	count=1
namespace	или несколькими другими массивами ||| function	count=1
function_name	активное ||| quotes	count=1
function_name	вызов статуса ||| status	count=1
return	в неблокирующем режиме ввода ||| bool	count=1
namespace	внутри строки подходящим ||| pdo	count=1
arg_pair	настройки парсера ||| resource $bbcode_container	count=1
namespace	строку или ||| function	count=2
arg_pair	установлен с помощью ||| resource $identifier	count=1
function_name	версии сервера [function_name] и доступных ||| [function_name] server	count=1
namespace	des [namespace] другого алгоритма ||| [namespace]	count=1
function_name	задает имя класса объекты ||| info class	count=1
function_name	возвращает список методов ||| get methods	count=3
arg_pair	код региона соответствующей страны ||| string $country_code string $region_code	count=1
return	needle и включая ||| string	count=1
function_name	его ||| strstr	count=1
function_name	в котором ||| by	count=1
namespace	проверяя ошибки ||| function	count=1
function_name	запрос по ||| svn ls	count=1
function_name	строки результата запроса ||| pg fetch	count=1
arg_pair	функции ereg_replace() за ||| string $replacement	count=1
return	режим автоматической ||| bool	count=1
return	в результате возникновения ||| bool	count=1
function_name	одну или несколько настроек ||| options	count=2
function	большой объект [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	filename проверяя ошибки ||| php check	count=1
arg_pair	соответствующие ключам и значениям ||| int $options	count=1
function_name	атрибут с заданным локальным ||| attribute	count=1
arg_pair	[arg_pair] столбцу результата ||| [arg_pair]	count=1
function_name	в результате предыдущей операции ||| ldap count entries	count=1
arg_pair	работает аналогично memcached::replace() за ||| int $expiration	count=1
return	для объекта ||| string	count=1
arg_pair	в участке разделяемой ||| int $start	count=1
function_name	добавляет ||| add servers	count=2
namespace	механизмов ||| function	count=1
function_name	атрибут ||| attribute ns	count=4
function_name	и опциональных ||| number of parameters	count=1
function_name	возвращает название региона соответствующей ||| name	count=1
arg_pair	classics: implementing the worlds ||| string $second	count=1
arg_pair	котором все вхождения search ||| mixed $search mixed $replace	count=2
arg_pair	и получает список ||| string $repos_url	count=1
arg_pair	с помощью ||| string $namespaceuri	count=1
arg_pair	изменяет настройки парсера ||| resource $bbcode_container int $flags	count=1
function_name	получает максимальную ||| get max	count=2
function_name	на заданную ||| seek	count=1
arg_pair	с ||| mixed $value2	count=1
namespace	получает список файлов и ||| function	count=1
arg_pair	и значениям массива ||| array $assoc_array	count=1
arg_pair	домен domain для ||| string $domain	count=2
function_name	вхождения needle и ||| strstr	count=1
function_name	в байтах ||| size	count=2
return	чтение настройки [return] ||| [return]	count=2
function_name	ошибок ||| mysqli stmt error	count=1
function_name	[function_name_1] значение атрибута ||| [function_name_2] [function_name_1]	count=2
function_name	удаления из базы данных ||| dbase delete	count=1
arg_pair	директорий ||| int $revision_no	count=1
function_name	дочерний элемент к ||| child	count=1
arg_pair	сравнивает ||| mixed $value2	count=1
function_name	ошибки ||| errno	count=1
namespace	вывода заставляет ||| gearmanworker	count=1
function_name	от какого-либо сервера заданий ||| wait	count=1
namespace	файла указанного в filename ||| function	count=1
namespace	recursiveiteratoriterator::valid() впервые ||| recursiveiteratoriterator	count=1
arg_pair	запрос по url адресу ||| bool $recurse	count=1
namespace	эта ||| function	count=1
function_name	начиная с байта ||| eio read	count=1
arg_pair	все вхождения search в ||| mixed $search mixed $replace	count=2
return	массив по ||| array	count=1
arg_pair	и получает ||| bool $recurse	count=1
function_name	задает ||| set	count=2
function_name	изображения ||| animate images	count=2
rest	возвращает параметры [function_2] ||| [function_2] [return_1]	count=1
function_name	возвращает xml [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	bbcode_container ||| bbcode parse	count=2
function_name	основываясь ||| no	count=1
arg_pair	implementing the ||| string $first string $second	count=1
namespace	объекта или ||| function	count=1
function_name	начало существующей записи ||| prepend	count=1
function_name	активное значение ||| magic quotes runtime	count=1
arg_pair	подключает другой парсер ||| resource $bbcode_container resource $bbcode_arg_parser	count=1
function_name	читает все значения ||| get values	count=1
function_name	связывает с ldap ||| ldap bind	count=1
arg_pair	домен domain ||| string $msgid1	count=1
function_name	php на ||| chdir	count=1
arg_pair	переданного итератора iterator ||| iterator $iterator	count=1
function_name	байтах указанного раздела диска ||| disk total space	count=1
arg_pair	в programming classics: implementing ||| string $first string $second	count=1
function_name	[function_name_1] минимальную версию ||| [function_name_2] [function_name_1]	count=1
namespace	если поддерживается и ||| function	count=1
function_name	для xml анализатора ||| xml	count=4
function_name	проверяя ||| php check	count=1
arg_pair	isbn 0-131-00413-1 ||| string $first	count=1
function_name	[function_name_1] ассоциированные с ||| [function_name_2] [function_name_1]	count=1
namespace	создать итератор методом recursiveiterator::getchildren() ||| recursiveiterator	count=1
function_name	возвращает предупреждения ||| tidy get	count=1
function_name	ошибки ||| udm errno	count=2
arg_pair	имен и возвращает ссылающийся ||| string $separator	count=1
arg_pair	x y до начала ||| float $x float $y	count=1
function_name	настройки ||| set magic quotes runtime	count=2
function_name	возвращая [function_name] который может ||| [function_name]	count=1
arg_pair	функция включает буферизацию ||| callable $output_callback int $chunk_size	count=1
function_name	синтаксиса производит верификацию файла ||| check	count=1
return	для записи ||| bool	count=1
namespace	reflection method ||| reflectionmethod	count=1
namespace	после распаковки из ||| function	count=1
function_name	[function_name] кодом error_code ||| [function_name]	count=1
namespace	таблицы стилей ||| xsltprocessor	count=1
arg_pair	by oliver ||| string $first string $second	count=1
function_name	удалённом x ||| animate	count=1
arg_pair	присоединенного потока или записываются ||| resource $in resource $out	count=1
arg_pair	функцией ldap_get_dn() и ||| int $with_attrib	count=1
function_name	возвращает ||| eio get	count=1
function_name	возвращает позицию указателя поля ||| mysqli field tell	count=1
namespace	двух строк по ||| function	count=1
function_name	указанный в качестве параметра ||| chdir	count=1
function_name	временную зону и ||| geoip time zone	count=1
function_name	возвращая [function_name] ||| [function_name]	count=1
function_name	[function_name_1] содержимое ||| [function_name_2] [function_name_1]	count=2
arg_pair	строки needle в ||| string $encoding	count=1
function_name	указанного в filename проверяя ||| php	count=1
function_name	возвращает текущую [function_name_2] ||| [function_name_1] [function_name_2]	count=4
arg_pair	настройки парсера ||| int $flags	count=1
arg_pair	haystack ||| string $haystack mixed $needle	count=1
function_name	programming ||| similar text	count=2
arg_pair	oliver isbn 0-131-00413-1 ||| string $second	count=1
function_name	защищенным protected ||| protected	count=1
function_name	указанный обратный вызов статуса ||| status	count=1
function_name	из результата запроса ||| fetch	count=1
return	фиксации ||| bool	count=1
function_name	числовой ||| udm errno	count=2
return	в неблокирующем ||| bool	count=1
arg_pair	массив содержащий все компоненты ||| int $component	count=1
function_name	обработчиком ошибок ||| trigger error	count=1
function_name	верификацию файла указанного ||| syntax	count=1
return	двух строк по ||| int	count=1
function_name	символы в переменных vars ||| mb convert variables	count=1
namespace	запись в ||| function	count=1
return	проверяет является ли ||| bool	count=1
arg_pair	текущий домен domain для ||| string $domain string $msgid1	count=1
namespace	сохраняет png изображение ||| function	count=1
function_name	функции crack_check() ||| crack opendict	count=1
function_name	эта функция возвращает ||| get	count=5
return	в него ||| bool	count=1
function_name	соответствующее действительному id пользователю ||| getuid	count=1
return	возвращает массив c ||| array	count=1
function_name	[function_name_1] массив ||| [function_name_2] [function_name_1]	count=1
function_name	в filename ||| php	count=1
arg_pair	strcmp() за ||| string $str1 string $str2	count=1
function_name	заголовка ||| header	count=1
return	возвращает число ||| int	count=7
function_name	получает числовой ||| udm errno	count=1
namespace	в ||| function	count=14
arg_pair	начиная с первого ||| string $haystack	count=1
function_name	сортировки ||| sort	count=2
function_name	добавляет setting в ||| putenv	count=1
function_name	classics: implementing the ||| text	count=1
function_name	параметра ||| closedir	count=1
function_name	setting в ||| putenv	count=1
function_name	новый сеанс curl ||| curl	count=1
arg_pair	открытого ранее дескриптора директории ||| resource $zip_entry	count=1
function_name	получает [function_name_2] ||| [function_name_1] file [function_name_2]	count=1
namespace	автоматического ||| function	count=1
function_name	синтаксиса производит верификацию файла ||| php	count=1
arg_pair	по ||| string $repos_url int $revision_no	count=1
arg_pair	его и ||| string $haystack mixed $needle	count=1
namespace	активное ||| function	count=1
arg_pair	включая его и до ||| mixed $needle	count=1
namespace	директории ||| filesystemiterator	count=1
function_name	устанавливает имя класса ||| set iterator class	count=1
return	выражение [return] ||| [return]	count=1
function_name	производит анимацию изображения ||| animate	count=1
namespace	из чего-либо что является ||| iteratoriterator	count=1
arg_pair	центром в ||| int $width	count=1
function	dn [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	директорию на заданную ||| ftp chdir	count=1
function_name	устанавливает [function_name_2] ||| [function_name_1] iterator [function_name_2]	count=1
function_name	[function_name_1] значение ||| [function_name_2] [function_name_1]	count=2
namespace	установка ||| function	count=1
namespace	метод ||| recursivetreeiterator	count=1
function_name	сеанс curl и возвращает ||| curl	count=1
arg_pair	получает список ||| bool $recurse	count=1
function_name	проверку синтаксиса производит верификацию ||| syntax	count=1
function_name	выводит изображение ||| image	count=1
function_name	заменяет значения массива ||| replace	count=1
function_name	внутренний ||| inner	count=1
arg_pair	массива array ||| array $array	count=1
function_name	обработчик символьных данных ||| character data handler	count=2
function_name	bbcode_container ||| bbcode	count=3
function_name	[function_name_1] код ||| function int http [function_name_1] [function_name_2] int $response_code	count=1
function_name	текущую директорию ||| chdir	count=1
namespace	директорию или ||| function	count=1
function_name	набора результата mysql ||| mysql	count=1
function_name	xml ||| xml parser create ns	count=2
function_name	механизмов автоматического ||| detect order	count=1
function_name	локальных интерфейсах указанный ||| socket create listen	count=1
arg_pair	указанную в group ||| string $filename mixed $group	count=1
arg_pair	объект object в своем ||| string $class_name	count=1
function_name	объявляет атрибут с заданным ||| id attribute	count=1
namespace	текущее активное ||| function	count=1
function_name	ключ текущего ||| key	count=1
function_name	операции поиска ||| count	count=1
return	и включая ||| string	count=1
function_name	буквенно-цифровыми ||| alnum	count=1
arg_pair	needle в строку haystack ||| string $haystack mixed $needle	count=1
function	[function_name_1] код региона ||| [arg_pair_2] [function_name_1]	count=2
function_name	при сравнении алфавитных символов ||| eregi replace	count=1
function_name	атрибут в ||| attribute ns	count=1
return	для механизмов автоматического ||| mixed	count=1
function_name	классе указанная константа ||| has constant	count=1
function_name	французского республиканского календаря ||| frenchtojd	count=1
function_name	набора результатов ||| limits	count=1
function_name	код ||| udm errno	count=2
namespace	в нижний или ||| function	count=1
namespace	поток связанный ||| function	count=1
function_name	аналогично методу memcached::append() ||| append	count=1
namespace	name из ||| domelement	count=1
namespace	системным временем [namespace] timestamp не ||| [namespace]	count=1
arg_pair	внутри строки подходящим для ||| string $string	count=1
function_name	в zip_entry ||| entry compressionmethod	count=1
function_name	mime ||| iconv mime encode	count=2
return	является ли ||| bool	count=1
function_name	начало очереди ||| rewind	count=1
function_name	geoip в ||| geoip	count=1
arg_pair	строк по ||| string $second	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] get [function_name_2]	count=4
function_name	sqlstate ошибки вызванной ||| stmt sqlstate	count=1
function_name	настройки ||| flags	count=1
function_name	для механизмов автоматического ||| mb detect order	count=1
namespace	по url адресу ||| function	count=1
function_name	целое число php ||| gmp intval	count=1
function_name	механизмов автоматического определения кодировок ||| mb detect order	count=1
arg_pair	memcached::replace() за ||| mixed $value int $expiration	count=1
function_name	задает ||| set magic quotes runtime	count=2
function_name	внешних сущностей ||| external entity ref	count=1
namespace	используемый для ||| function	count=1
function_name	проверяя ошибки в ||| syntax	count=1
function_name	заданного календаря calendar ||| cal	count=1
function_name	следующий ||| next	count=3
return	и возвращает ||| mixed	count=1
function_name	все строки из ||| all	count=1
function_name	в filename проверяя ошибки ||| syntax	count=1
function_name	возвращая его содержимое в ||| flush	count=1
return	при работе в неблокирующем ||| bool	count=1
arg_pair	с ||| string $namespaceuri	count=1
arg_pair	список файлов и директорий ||| bool $recurse	count=1
function_name	требуется ||| quote	count=1
arg_pair	command ||| string $command string $mode	count=1
function_name	функция возвращает значение ||| get	count=1
arg_pair	записей сохраненных ||| resource $result_identifier	count=1
arg_pair	аналогично memcached::set() за ||| int $expiration	count=1
arg_pair	регулярному выражению в многобайтной ||| string $option	count=1
function_name	[function_name_1] итератор ||| [function_name_2] [function_name_1]	count=2
return	список требуемых ||| array	count=1
arg_pair	offset ||| int $offset int $pri	count=1
function_name	класса объекты которого будут ||| info class	count=1
return	эта функция преобразует число ||| int	count=1
return	value1 с value2 ||| int	count=1
namespace	с первого ||| function	count=1
function_name	запроса для базы данных ||| pg	count=1
return	с первого ||| string	count=1
arg_pair	смещение offset ||| int $offset	count=1
function_name	или ||| animate	count=1
namespace	строку или массив в ||| function	count=2
function_name	specified distortion metrics ||| image channel distortions	count=1
namespace	автоматической фиксации ||| pdo	count=1
namespace	автоматической фиксации до тех ||| pdo	count=1
function_name	функции ||| output handler	count=2
function_name	список файлов и ||| ls	count=1
function_name	число секунд и ||| time	count=1
arg_pair	строк ||| string $first	count=1
arg_pair	algorithms by ||| string $first string $second	count=1
function_name	первое вхождение подстроки needle ||| mb strstr	count=1
namespace	последовательности ||| imagick	count=1
namespace	на файл [namespace] символическую ||| [namespace]	count=1
namespace	на указанный ||| function	count=1
function	dn [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	с ||| resource $identifier	count=1
arg_pair	запрос по url адресу ||| int $revision_no	count=1
return	и клиентом для ||| string	count=1
function_name	связывает с ldap ||| ldap	count=1
arg_pair	и экранирует специальные символы ||| string $string	count=1
namespace	имеет ли внутренний объект-итератор ||| parentiterator	count=1
namespace	или код символа не ||| function	count=1
function_name	короткое [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	specified distortion metrics этот ||| get image channel distortions	count=1
function_name	задания от какого-либо ||| wait	count=1
arg_pair	в haystack значение needle ||| mixed $needle array $haystack	count=2
function_name	simplexml и превращает его ||| dom import simplexml	count=1
arg_pair	stream ||| resource $stream	count=2
arg_pair	и пасхой ||| int $year int $method	count=1
function_name	указанного канала текущего объекта ||| color	count=1
return	без ||| string	count=1
function_name	имя класса ||| info class	count=1
arg_pair	директорий ||| string $repos_url int $revision_no	count=1
arg_pair	возвращает строку str ||| string $str	count=2
arg_pair	в участке ||| int $shmid	count=1
function_name	сравнивает ||| compare	count=1
return	содержимого ||| array	count=1
function_name	[function_name_1] ассоциированные ||| [function_name_1] [function_name_2]	count=1
arg_pair	всю информацию альфа ||| resource $image	count=1
return	строку описывающую соединение ||| string	count=1
namespace	и экранирует специальные символы ||| pdo	count=1
arg_pair	возвращает массив содержащий все ||| array $array2	count=1
function_name	cyrus imap ||| cyrus	count=2
arg_pair	needle и включая ||| string $haystack mixed $needle	count=1
function_name	размер элемента [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	строки из результата запроса ||| fetch	count=1
function_name	implementing the worlds ||| text	count=1
namespace	запрос на каждый сервер ||| memcached	count=1
return	filename проверяя ошибки ||| bool	count=1
function_name	символической ссылкой ||| link	count=1
namespace	контейнер заданный объект object ||| splobjectstorage	count=1
function_name	используется для удаления id3-тега ||| id3 remove tag	count=1
arg_pair	указывать callback ||| mixed $pattern callable $callback	count=1
function_name	если ||| is	count=1
function_name	текущее активное значение ||| magic quotes runtime	count=1
function_name	список файлов и директорий ||| ls	count=1
arg_pair	символ c вертикально ||| string $c	count=1
function_name	автоматического определения кодировок в ||| mb detect	count=1
function_name	удаления id3-тега ||| id3 remove tag	count=1
function_name	[function_name_1] ftp сервером ||| [function_name_2] [function_name_1]	count=7
function_name	[function_name_1] сессии ||| [function_name_2] [function_name_1]	count=4
namespace	дней ||| function	count=1
function_name	выполняет проверку ||| syntax	count=1
function_name	возвращает время рассвета ||| date sunrise	count=1
arg_pair	записываются ||| resource $in resource $out	count=1
function_name	неразобранных объявлений сущностей ||| unparsed entity decl	count=1
function_name	состояние ||| status	count=2
function_name	информацию о последней произошедшей ||| last	count=1
function_name	xml анализатора parser ||| xml set	count=3
function_name	[function_name_1] классы ||| [function_name_1] [function_name_2]	count=2
namespace	целое число php integer ||| function	count=1
function_name	число записей ||| ldap count entries	count=1
function_name	возвращает размер элемента ||| size	count=1
namespace	создаёт потоковый или датаграммный ||| function	count=1
return	для ||| mixed	count=1
function_name	возвращает ||| mysqli get host info	count=1
return	the worlds best ||| int	count=1
namespace	файл на [namespace] ||| [namespace]	count=1
function_name	версию версии ||| version	count=1
namespace	выставляет ||| splfixedarray	count=1
arg_pair	файле browscap.ini ||| string $user_agent bool $return_array	count=1
function_name	recursivetreeiterator::valid() ||| end	count=1
function_name	файлу дескриптор которого указан ||| eio fchmod	count=1
namespace	вхождения needle и включая ||| function	count=1
function_name	поиска ||| ldap count entries	count=2
function_name	целое ||| gmp	count=1
arg_pair	изображения используя truetype шрифт ||| string $fontfile	count=1
function_name	ресурсом сокета созданным ||| socket	count=1
function_name	производит верификацию файла ||| php	count=1
arg_pair	строку string в которой ||| string $string	count=1
function_name	числовой код ||| udm	count=1
namespace	если он ||| function	count=1
arg_pair	угол имеет координаты 0 ||| resource $image int $x	count=1
function_name	число секунд ||| time nanosleep	count=1
arg_pair	локальным именем localname текущего ||| string $localname	count=1
return	закрывает ||| bool	count=1
namespace	memcache сервере ||| memcached	count=1
function_name	последнее сообщение об ошибке ||| error	count=1
function_name	осуществляет попытку смены группы ||| chgrp	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] object $object [arg_pair_2]	count=2
function_name	ошибки сокета ||| socket	count=1
namespace	число если seed не ||| function	count=1
namespace	запрос по url адресу ||| function	count=1
function_name	функции preg_replace() ||| preg	count=1
function_name	устанавливает буферизацию ||| set	count=1
arg_pair	in_charset в out_charset ||| string $in_charset string $out_charset	count=1
arg_pair	региона ||| string $country_code string $region_code	count=2
function_name	календаре calendar ||| cal to jd	count=1
function_name	объявляет атрибут ||| attribute ns	count=1
return	фиксирует транзакцию возвращая ||| bool	count=1
function_name	копирайт api imagemagick в ||| copyright	count=1
function_name	файла указанного в filename ||| php check	count=1
arg_pair	programming ||| string $first string $second	count=1
namespace	или каталогу ||| function	count=1
function_name	производит ||| animate	count=1
function_name	возвращает ||| strstr	count=1
namespace	сохранять всю информацию альфа ||| function	count=1
namespace	в неблокирующем ||| gearmanworker	count=1
function_name	индексов ||| udiff	count=2
function_name	с ||| get delayed by key	count=1
arg_pair	описанному ||| string $first string $second	count=1
function	кода [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	опционально для ||| int $revision_no	count=1
namespace	начала очереди ||| splqueue	count=1
function_name	добавляет запись [function_name_2] ||| function bool [function_name_2] [function_name_1]	count=2
arg_pair	функции ereg_replace() ||| string $replacement	count=1
function_name	соединения с ftp сервером ||| ftp	count=1
function_name	[function_name_1] низкоприоритетную ||| [function_name_1] task [function_name_2]	count=1
function_name	запрос ||| svn ls	count=2
function_name	возвращает название ||| geoip region name by	count=1
arg_pair	по алгоритму описанному в ||| string $first	count=1
function_name	директорию на ||| chdir	count=1
arg_pair	b на число a ||| gmp $b	count=1
function_name	remote_file ||| fget	count=1
function_name	сокета ||| socket connect	count=2
function_name	комментарий ||| comment name	count=2
function_name	компонента в ||| imagesavealpha	count=1
function_name	этот метод позволяет зарегистрировать ||| register	count=1
function_name	записей ||| count entries	count=2
arg_pair	haystack значение needle ||| mixed $needle	count=2
function_name	ли текущий элемент допустимым ||| valid	count=1
function_name	все записи одной колонки ||| all columns	count=1
function_name	производит верификацию файла ||| syntax	count=1
arg_pair	проверяет определен ли ||| bool $autoload	count=1
namespace	число php ||| function	count=1
function_name	в filename проверяя ||| php check	count=1
function_name	einer mime kopfzeile ||| iconv mime	count=1
namespace	выполняет проверку ||| function	count=1
arg_pair	переданную строку и ||| string $source int $blocksize	count=1
function_name	механизмов автоматического определения кодировок ||| order	count=1
arg_pair	создает закрашенный многоугольник в ||| int $color	count=1
arg_pair	преобразует правильно сформированный xml-документ ||| int $options string $ns	count=1
arg_pair	возвращает объект содержащий ||| resource $result	count=1
return	фиксирует ||| bool	count=1
function_name	id [function_name] строки ||| [function_name] insert	count=1
function_name	закрывает ||| eio close	count=2
namespace	компонента ||| function	count=1
function_name	массив содержащий ||| array	count=1
function_name	имени ||| name	count=7
function_name	директорий опционально для ||| ls	count=1
arg_pair	присоединенного потока или записываются ||| resource $out	count=1
function_name	получает путь xpath ||| get	count=1
arg_pair	и получает список файлов ||| bool $recurse	count=1
namespace	число дней в ||| function	count=1
arg_pair	эта функция включает буферизацию ||| callable $output_callback	count=1
namespace	directoryiterator ||| directoryiterator	count=5
return	изменяет текущий ||| bool	count=1
function_name	файл remote_file с ftp-сервера ||| ftp fget	count=1
return	проверяя ||| bool	count=1
return	массив уровней всех ||| array	count=1
function_name	удаления из базы ||| dbase delete	count=1
function_name	является ли число простым ||| prob prime	count=1
arg_pair	изменяет настройки парсера ||| int $flags	count=1
namespace	символы внутри строки подходящим ||| pdo	count=1
return	дней в юлианском летоисчислении ||| string	count=1
function_name	временную зону и код ||| geoip time zone by country and	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] set [arg_pair_2]	count=1
function_name	gmp в ||| intval	count=1
function_name	обработчик по умолчанию ||| set default handler	count=2
arg_pair	подстроку строки ||| string $haystack	count=1
arg_pair	filename на указанного ||| string $filename	count=1
arg_pair	каждого [arg_pair] asii-кодами ||| [arg_pair]	count=1
arg_pair	файла с именем filename ||| string $filename	count=1
arg_pair	опционально для конкретной ревизии ||| int $revision_no	count=1
function_name	производит верификацию файла указанного ||| php check	count=1
function	[function_name_1] хранилище сессий ||| [function_name_1] [arg_pair_2]	count=1
function_name	изменяет ||| chdir	count=1
arg_pair	функциями imagecolorallocate() ||| int $color	count=1
return	всю информацию альфа компонента ||| bool	count=1
function_name	расширение ||| type to extension	count=1
arg_pair	начиная ||| mixed $needle	count=1
rest	возвращает параметры [function_2] ||| [return_1] [function_2]	count=1
arg_pair	домен domain для одного ||| string $msgid1	count=1
function_name	закрывает ||| mysql close	count=1
arg_pair	функцию в ||| callable $autoload_function bool $throw	count=1
function_name	[function_name_1] xml анализатора ||| [function_name_2] [function_name_1]	count=7
arg_pair	сохранять всю информацию альфа ||| resource $image	count=1
function_name	узел соответствует jste ||| jste	count=1
arg_pair	и ||| bool $recurse	count=2
arg_pair	эта функция подобна strcmp() ||| string $str2	count=1
return	подходящим для драйвера ||| string	count=1
function_name	версии ||| version	count=1
namespace	данная функция ||| function	count=1
return	компонента в ||| bool	count=1
arg_pair	историю правок в конкретном ||| int $end_revision int $limit	count=1
function_name	в bbcode_container возвращаемом ||| bbcode parse	count=1
namespace	определён ли [namespace] в ||| [namespace]	count=1
namespace	обработчика ожидать задания ||| gearmanworker	count=1
function_name	[function_name_1] объявленные классы ||| [function_name_2] [function_name_1]	count=1
function_name	записывает данные из ||| write	count=1
function_name	определению в ||| geoip database info	count=1
function_name	функция возвращает название ||| name by	count=1
function_name	низким приоритетом и ||| do low	count=1
arg_pair	значение по указанному индексу ||| mixed $newval	count=1
return	эта функция [return] элементы ||| [return]	count=1
arg_pair	изображений встроенной libgd библиотеки ||| resource $image int $effect	count=1
function_name	php-кодом ||| php	count=1
function_name	по умолчанию для ||| set default	count=1
function_name	[function_name] дескриптор задания ||| do high [function_name]	count=2
arg_pair	рисует эллипс с центром ||| int $cy int $width	count=1
function_name	результате ||| count	count=1
function_name	следующую запись ||| zip read	count=1
function_name	до конца ||| strstr	count=1
return	строку содержащую имя базового ||| string	count=1
return	элементу и [return] первого элемента ||| [return]	count=1
function_name	эта функция устанавливает параметры ||| set option	count=1
function_name	текущее активное ||| set magic quotes runtime	count=1
function_name	создает постоянное соединение с ||| pconnect	count=1
function_name	targets ||| commit	count=1
function_name	устанавливает буферизацию для ||| set	count=1
arg_pair	кодировки in_charset в out_charset ||| string $out_charset	count=1
function_name	ошибку сгенерированную ||| error	count=1
return	ассоциативный [return] информацию о ||| [return]	count=1
arg_pair	шаблоном pattern и помещает ||| string $pattern string $subject	count=1
function	байтах [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	callback-функцией функции ob_start() ||| string $contents int $status	count=1
arg_pair	truetype текста ||| string $text	count=1
function_name	в programming classics: ||| text	count=1
arg_pair	и неразличимых ||| int $domain int $type	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] create string $filename [arg_pair_2]	count=2
arg_pair	работает аналогично memcached::add() за ||| int $expiration	count=1
arg_pair	символы в unescaped_string ||| resource $link_identifier	count=1
function_name	[function_name_1] одну ||| [function_name_2] [function_name_1]	count=2
function_name	код ошибки сокета ||| socket	count=1
function_name	id [function_name] строки либо ||| [function_name] insert	count=1
arg_pair	запрос по url ||| int $revision_no	count=1
namespace	0 внутреннего объекта-итератора ||| limititerator	count=1
arg_pair	большинством функций данного модуля ||| string $connection_string string $character_set	count=1
function_name	порядковый номер поля ||| pg field num	count=1
arg_pair	переменной ||| mixed $var	count=1
function_name	[function_name_1] высоту изображения ||| [function_name_1] [function_name_2]	count=1
arg_pair	в fd ||| mixed $fd	count=2
arg_pair	новое значение находится между ||| float $value	count=1
function_name	[function_name_1] xml ||| [function_name_2] external [function_name_1]	count=1
function_name	получает класс ||| get	count=1
function_name	репозитория и ||| svn	count=1
return	синтаксиса производит верификацию файла ||| bool	count=1
function_name	текущего процесса ||| posix getpid	count=1
function_name	алгоритму описанному в programming ||| similar text	count=1
function_name	проверяет может ли значение ||| is callable	count=1
namespace	первого вхождения ||| function	count=1
function	размер [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
function_name	имя файла соответствующей ||| filename	count=1
arg_pair	в параметрах seconds и ||| int $seconds	count=1
arg_pair	имя / значение ||| string $name string $value	count=1
function_name	xbm изображения ||| imagexbm	count=1
namespace	строки ||| function	count=2
arg_pair	строки needle в ||| int $offset	count=1
arg_pair	первого вхождения ||| mixed $needle	count=1
function_name	получает записи ||| get record	count=1
function_name	дату указанного календаря calendar ||| cal from jd	count=1
arg_pair	проверяя ошибки в ||| string $filename	count=1
function_name	клиента mysql ||| client	count=1
function_name	результате предыдущей операции ||| ldap count entries	count=1
function_name	вернет временную зону ||| geoip time zone by country and	count=1
arg_pair	b на число a ||| gmp $a	count=1
function_name	снимок окна ||| imagegrabwindow	count=1
function_name	файлу дескриптор которого указан ||| fchmod	count=1
function_name	данная функция ||| ls	count=1
arg_pair	заголовками ||| int $expire string $path	count=1
namespace	при работе ||| gearmanworker	count=1
function_name	получение ||| mb	count=1
function_name	данные ассоциированные ||| info	count=1
function_name	атрибут в пространстве ||| attribute	count=2
function	к потоку [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	для механизмов автоматического ||| function	count=1
arg_pair	эллипс с центром ||| int $cy	count=1
function_name	синтаксиса производит ||| php	count=1
function_name	функция устанавливает параметры соединения ||| set option	count=1
function_name	вернет временную зону и ||| time zone by country and region	count=1
arg_pair	memcached::add() за ||| int $expiration	count=1
function_name	вернет ||| end	count=2
function_name	получает записи из базы ||| dbase get record	count=1
namespace	worlds best algorithms by ||| function	count=1
function_name	атрибута с пространстве ||| attribute ns	count=3
function_name	заданного xml анализатора parser ||| xml	count=1
namespace	name ||| domelement	count=4
function_name	функция возвращает [function_name_2] ||| [function_name_2] [function_name_1]	count=7
return	механизмов автоматического определения кодировок ||| mixed	count=1
function_name	объекты [function_name] другом контейнере ||| [function_name]	count=1
function_name	методов в виде ||| methods	count=1
arg_pair	двух файлов path1 и ||| string $path2 int $rev2	count=1
namespace	дней в юлианском ||| function	count=1
function_name	в ||| intval	count=1
namespace	помощью метода appenditerator::append() ||| appenditerator	count=1
arg_pair	и включая его и ||| mixed $needle	count=1
function_name	выбирает все [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	memcached::add() за исключением того ||| int $expiration	count=1
function_name	изменяет текущий ||| chdir	count=1
namespace	запрос ||| function	count=1
namespace	по ||| function	count=2
function_name	механизмов автоматического определения кодировок ||| mb	count=1
return	изображение ||| bool	count=1
function_name	многом напоминает [function_name] ||| [function_name]	count=3
namespace	сохраняет png ||| function	count=1
namespace	впервые вернет false ||| recursivetreeiterator	count=1
function_name	возвращает ||| mysqli get server	count=1
arg_pair	первого вхождения needle ||| string $haystack mixed $needle	count=1
function_name	атрибут с ||| set id attribute ns	count=1
function	разделяет dn [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	ob_start() ||| mb	count=1
function_name	socket_listen() эта функция будет ||| socket	count=1
arg_pair	programming classics: implementing ||| string $first	count=1
arg_pair	подобна strcmp() ||| string $str2	count=1
return	получение текущего ||| mixed	count=1
function_name	обработчик внешних сущностей ||| set external entity ref handler	count=1
function_name	случаев когда [function_name] выброшено вне ||| [function_name]	count=1
arg_pair	рисует прямоугольник с заданными ||| int $color	count=1
return	данных в режим автоматической ||| bool	count=1
arg_pair	url ||| bool $recurse	count=1
function_name	представления [function_name] ||| [function_name]	count=2
arg_pair	рисует прямоугольник ||| int $y2 int $color	count=1
namespace	следующий вызов pdo::begintransaction() не ||| pdo	count=1
function_name	заданную аргументом ||| ftp chdir	count=1
function_name	возвращает копию массива ||| get array copy	count=2
return	число gmp ||| int	count=1
function_name	сокета и сохраняет ||| socket create pair	count=1
function_name	возвращает число ||| entries	count=1
function_name	возвращает разницу ||| diff uassoc	count=1
function_name	декодирует несколько [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	правилами в bbcode_container возвращаемом ||| bbcode	count=1
arg_pair	и получает список файлов ||| string $repos_url	count=1
arg_pair	настройки ||| resource $parser int $option	count=1
namespace	возвращает подстроку ||| function	count=1
arg_pair	из изображения image ||| resource $image string $filename	count=1
return	эта ||| int	count=1
function_name	ipv4 адрес ||| ip2long	count=1
return	требуется и экранирует ||| string	count=1
function_name	возвращает ||| dbase get	count=1
function_name	или удалённом x ||| images	count=1
arg_pair	координаты 0 ||| resource $image int $x	count=1
arg_pair	строку ||| resource $pdfdoc	count=1
namespace	его и до ||| function	count=1
function_name	[function_name_1] __autoload ||| [function_name_2] [function_name_1]	count=2
function_name	указанного в filename проверяя ||| php check syntax	count=1
arg_pair	конца строки ||| mixed $needle	count=1
function_name	заданном году ||| easter date	count=1
namespace	arrayobject ||| arrayobject	count=2
arg_pair	аргументы формируют ||| int $hour int $minute	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] file [function_name_2]	count=1
function_name	обработчик ||| handler	count=6
function_name	[function_name_1] расширение ||| [function_name_2] [function_name_1]	count=1
arg_pair	символ c вертикально на ||| string $c int $color	count=1
return	временной зоны с помощью ||| string	count=1
return	строку содержащую версию ||| string	count=1
function_name	mime kopfzeile в ||| iconv mime	count=1
function_name	[function_name_1] [function_name_2] элемента ||| [function_name_1] [function_name_2] index int $index int	count=1
function_name	новый объект ||| modify	count=1
function_name	запрос на генерацию фрагментов ||| build excerpts	count=1
namespace	classics: ||| function	count=1
function	[function_name_1] [arg_pair_2] диапазоне 0..255 в строке ||| [function_name_1] chars [arg_pair_2]	count=2
namespace	получение ||| function	count=1
return	получение ||| mixed	count=1
arg_pair	строки needle в строке ||| int $offset string $encoding	count=1
function_name	создает специальный ||| posix	count=1
function_name	текущую ||| solr	count=1
function_name	mime набора символов для ||| preferred mime name	count=1
arg_pair	заданного аргументом timestamp ||| int $timestamp int $format	count=2
namespace	ли итератор действительным ||| norewinditerator	count=1
namespace	для большого объекта lob ||| oci-lob	count=1
namespace	isbn ||| function	count=1
function	[function_name_1] хранилище сессий ||| [arg_pair_2] [function_name_1]	count=1
namespace	одного или большего количества ||| function	count=1
function_name	определению в бинарном файле ||| geoip database info	count=1
function_name	последнюю ошибку связанную ||| last error	count=1
arg_pair	best algorithms by ||| string $first string $second	count=1
function_name	в кодировку ||| encoding	count=1
function_name	двух ||| similar	count=1
namespace	переданный в качестве параметра ||| function	count=1
function_name	выполняет проверку синтаксиса ||| syntax	count=1
namespace	best ||| function	count=1
function	для сокета [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	репозитория и получает ||| svn	count=1
function	записывает данные [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	добавляет [function_name_2] ||| [function_name_2] [function_name_1]	count=20
function_name	возвращает последнюю ошибку связанную ||| get last error	count=1
function_name	и ||| svn	count=2
function_name	preg_replace() ||| preg replace	count=1
arg_pair	сортирует массив ||| array $array int $sort_flags	count=1
function_name	в programming ||| similar	count=1
function_name	проверяет содержит ли ||| is	count=2
return	с базой ||| bool	count=1
namespace	один или ||| function	count=1
function_name	повторных попыток и ||| retries	count=1
arg_pair	заданный фильтр filtertype ||| resource $image int $filtertype	count=1
function_name	название региона ||| region name	count=1
function_name	поиска ||| count	count=1
function	[function_name_1] года ||| [arg_pair_2] [function_name_1]	count=3
namespace	директорию на заданную аргументом ||| function	count=1
namespace	или несколькими другими ||| function	count=1
function_name	возвращает переменную окружения сервера ||| getenv	count=1
function_name	в запросе sqlite ||| sqlite	count=1
return	функция принимает ||| string	count=1
arg_pair	системе счисления base ||| gmp $gmpnumber int $base	count=1
arg_pair	функция ||| string $repos_url	count=1
arg_pair	для конкретной ||| string $repos_url	count=1
return	режим автоматической фиксации ||| bool	count=1
function_name	версии сервера [function_name] и ||| [function_name] server	count=1
return	функция возвращает массив с ||| array	count=2
function_name	синтаксиса ||| check syntax	count=2
namespace	или записи ||| function	count=1
namespace	всю ||| function	count=1
function_name	функцию из spl ||| spl	count=1
function_name	переданной строке text ||| ctype	count=8
arg_pair	string на заданных координатах ||| string $string int $color	count=1
return	текущую директорию на заданную ||| bool	count=1
namespace	класс встроенным в ||| reflectionclass	count=1
function_name	декодирует ||| decode	count=2
namespace	удаляет один или ||| function	count=1
function_name	текущее активное значение настройки ||| magic quotes runtime	count=1
function_name	сеанс curl и освобождает ||| curl close	count=1
arg_pair	в ||| string $first	count=1
function_name	функции ob_start() ||| mb output	count=1
function_name	права доступа к указанному ||| chmod	count=1
function_name	действующим ресурсом сокета созданным ||| socket	count=1
function_name	возвращает атрибут в ||| get attribute	count=2
return	дескриптор файла ||| resource	count=1
function_name	гринвичу gmt ||| gmmktime	count=1
function_name	возвращает ||| get status	count=1
function_name	цвет объекта imagickpixel ||| color	count=1
function_name	функции preg_replace() за исключением ||| preg filter	count=1
return	функция [return] элементы массива ||| [return]	count=1
arg_pair	и ||| int $revision_no	count=2
arg_pair	возвращает ссылающийся на ||| string $separator	count=1
function_name	[function_name_1] следующей ||| [function_name_2] [function_name_1]	count=2
function_name	value1 с ||| compare	count=1
function_name	пространства имен ||| namespace	count=3
function_name	[function_name_1] ftp ||| [function_name_2] set [function_name_1]	count=1
arg_pair	ereg_replace() ||| string $replacement	count=1
arg_pair	[arg_pair_1] ее в ||| [arg_pair_2] [arg_pair_1]	count=2
arg_pair	открывает ||| string $mode	count=1
function_name	умолчанию через сокет ||| socket shutdown	count=1
arg_pair	в начало массива ||| mixed $value1	count=1
function_name	элемент допустимым ||| valid	count=1
function_name	эта функция будет ||| socket	count=1
namespace	его и ||| function	count=1
function_name	базы ||| db	count=1
return	режиме ввода / вывода ||| bool	count=1
arg_pair	сообщения во множественном числе ||| string $msgid2 int $n	count=1
function_name	проверку ||| check syntax	count=2
namespace	контейнера ||| splobjectstorage	count=2
function_name	все символы в соответствющие ||| htmlentities	count=1
function_name	строки string ||| mb	count=1
function_name	произошедших ошибок ||| libxml get errors	count=1
return	возвращает параметры ||| array	count=1
function_name	каталогом и переданный в ||| closedir	count=1
function_name	curl [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	указанной базе ||| numrecords	count=1
function_name	по ключам ||| krsort	count=1
function_name	subject все ||| preg match all	count=1
namespace	если этот символ ||| function	count=3
namespace	летоисчислении ||| function	count=1
return	строку в кавычки если ||| string	count=1
arg_pair	и сдвигает ||| resource $result	count=1
arg_pair	записи из ||| resource $connection	count=1
function_name	объявляет атрибут с ||| attribute ns	count=1
function_name	открывает ||| eio open	count=2
function_name	новый объект класса ||| create	count=1
function_name	первый атрибут ||| ldap first attribute	count=2
arg_pair	для конкретной ревизии ||| string $repos_url	count=1
arg_pair	или записываются ||| resource $in resource $out	count=1
arg_pair	таблицу из массива ||| array $rows	count=1
arg_pair	файла указанного в ||| string $filename	count=1
function_name	cookie [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
namespace	содержимого ||| cachingiterator	count=1
arg_pair	задает значение ||| mixed $parameter mixed $value	count=1
arg_pair	и включая его ||| mixed $needle	count=1
arg_pair	устанавливает режим подписывания ||| int $signmode	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] write [arg_pair_2]	count=14
namespace	сервера заданий ||| gearmanworker	count=1
function_name	[function_name_1] значение гравитации ||| [function_name_1] image [function_name_2]	count=1
return	строки haystack ||| string	count=1
function_name	текущее активное значение ||| magic	count=1
function_name	является синтаксически ||| is valid	count=1
return	объект domnodelist со всеми ||| domnodelist	count=1
function_name	nanoseconds число секунд и ||| time nanosleep	count=1
arg_pair	файлов path1 и ||| string $path2 int $rev2	count=1
arg_pair	применяет заданный фильтр filtertype ||| int $filtertype	count=1
function_name	текущее активное значение ||| set magic quotes	count=1
arg_pair	задает функцию ||| resource $parser callable $handler	count=2
arg_pair	с handle и ||| resource $handle	count=1
function_name	[function_name_1] итератора массива ||| [function_name_2] [function_name_1]	count=4
return	функция ||| mixed	count=1
namespace	вывода заставляет обработчика ||| gearmanworker	count=1
function_name	a section of ||| ps curveto	count=1
function_name	ожидает ли ||| is	count=1
arg_pair	возвращает информацию ||| int $pri	count=1
function_name	с ||| proc close	count=1
function_name	указанной базе данных ||| dbase numrecords	count=2
rest	функция удаляет [function_2] ||| [function_2] [return_1]	count=1
function	[function_name_1] строке с ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	memcached::add() за исключением ||| mixed $value int $expiration	count=1
arg_pair	возвращает информацию о path ||| int $options	count=1
return	функция удаляет ||| bool	count=1
function_name	в распакованном состоянии ||| get unpacked	count=1
function_name	предыдущей операции поиска ||| ldap	count=1
function_name	возвращает число записей ||| ldap count	count=1
return	число php ||| int	count=1
function_name	в которых callback-функция __autoload() ||| spl autoload	count=1
function_name	действующим ресурсом сокета созданным ||| socket connect	count=1
return	числовой ||| int	count=1
return	возвращает число записей ||| int	count=1
arg_pair	соединение с ||| string $host string $port	count=1
return	с указанным полем ||| string	count=1
arg_pair	шаблоном pattern и помещает ||| string $subject	count=1
arg_pair	строку haystack ||| string $needle	count=2
function_name	[function_name] дескриптор ||| do high [function_name]	count=2
function_name	с первого вхождения needle ||| strstr	count=1
namespace	идентификатор ||| gearmanworker	count=1
function_name	архива в распакованном состоянии ||| get unpacked	count=1
arg_pair	строк по ||| string $first	count=1
arg_pair	и включая ||| string $haystack	count=1
function_name	задает текущее ||| magic quotes runtime	count=1
arg_pair	размером до maxlength ||| resource $handle int $maxlength	count=1
return	с каталогом ||| void	count=1
arg_pair	возвращает массив array ||| array $array	count=1
namespace	его ||| function	count=1
function_name	soap-ответе ||| last response	count=1
arg_pair	функция возвращает строку input ||| string $input	count=1
function_name	ним ||| destroy	count=1
arg_pair	репозитория и получает ||| string $repos_url	count=1
function_name	копию ||| copy	count=1
function_name	нескольких настроек ||| options	count=1
namespace	к файлу или каталогу ||| function	count=1
arg_pair	memcached::replace() за исключением ||| mixed $value int $expiration	count=1
function	html содержащийся [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	удаляет ||| pg delete	count=2
function_name	preg_replace() за исключением того ||| preg filter	count=1
function_name	возобновляет работу обозначенной приостановленной ||| continue	count=1
function_name	обработчик [function_name_2] ||| [function_name_2] [function_name_1]	count=38
arg_pair	source ||| int $options	count=1
function_name	строке text [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	приемлемые для sql сервера ||| string $table_name	count=1
function_name	эта функция ||| gmp	count=1
function_name	требуемых и конфликтующих зависимостей ||| dependencies	count=1
arg_pair	сжимает переданную строку и ||| string $source int $blocksize	count=1
arg_pair	рисует прямоугольник с заданными ||| int $y2	count=1
function_name	короткое имя ||| short name	count=2
arg_pair	установлен с ||| resource $identifier	count=1
function_name	для механизмов автоматического определения ||| detect	count=1
function_name	открывает ||| open	count=2
function_name	временную зону ||| time zone	count=1
namespace	в верхний регистр если ||| function	count=2
namespace	и переданный в ||| function	count=1
namespace	возвращая ||| pdo	count=1
arg_pair	адресу репозитория и ||| string $repos_url int $revision_no	count=1
namespace	класса reflectionextension ||| reflectionextension	count=1
arg_pair	возвращает ||| int $julianday int $mode	count=2
namespace	если этот символ является ||| function	count=3
arg_pair	использованием множественного числа ||| string $msgid2 int $n	count=1
namespace	файлу или каталогу ||| function	count=1
function_name	является ||| mb output handler	count=2
function_name	с ||| strstr	count=1
function_name	целое ||| gmp intval	count=2
function_name	для ||| ls	count=1
arg_pair	количество ||| int $count int $delay	count=1
arg_pair	массиве keys с сервера ||| array $keys int $time	count=1
function_name	версию клиента в ||| client version	count=2
function_name	название региона соответствующей страны ||| region name	count=1
arg_pair	haystack начиная с первого ||| mixed $needle	count=1
arg_pair	строку экранированную ||| string $charlist	count=1
function_name	для ||| detect	count=1
function_name	группу запросов указатель ||| eio grp	count=1
function_name	кодировок в строках ||| mb	count=1
arg_pair	и получает список файлов ||| int $revision_no	count=1
function_name	[function_name_1] с пространстве ||| [function_name_1] [function_name_2]	count=1
arg_pair	совпадение с ||| string $pattern	count=1
arg_pair	с первого ||| string $haystack	count=1
return	используемый для записи ||| bool	count=1
arg_pair	пару [arg_pair] к ||| [arg_pair]	count=1
namespace	строку ||| pdo	count=1
function_name	[function_name_1] значение атрибута ||| [function_name_1] [function_name_2]	count=2
arg_pair	файл указанный в fd ||| mixed $fd	count=1
arg_pair	функцией ldap_get_dn() ||| int $with_attrib	count=1
function_name	текущее активное значение настройки ||| runtime	count=1
function_name	[function_name_1] текущего процесса ||| [function_name_2] [function_name_1]	count=12
function_name	изображения в последовательности ||| image	count=1
namespace	текущий элемент directoryiterator ||| directoryiterator	count=7
function_name	устанавливает буферизацию для ||| set write	count=1
function_name	по умолчанию [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	закрывает ||| closedir	count=1
arg_pair	в участке разделяемой памяти ||| int $start	count=1
arg_pair	с ||| mixed $value1	count=1
arg_pair	функцией ldap_get_dn() ||| string $dn int $with_attrib	count=1
return	по ||| string	count=2
function	[function_name_1] функцию в ||| [function_name_1] [arg_pair_2]	count=1
function_name	производит ||| animate images	count=2
function_name	с ||| create db	count=1
namespace	файлу или каталогу данная ||| function	count=1
namespace	директорий опционально для ||| function	count=1
arg_pair	сравнивает value1 с ||| mixed $value2	count=1
namespace	внутри строки ||| pdo	count=1
arg_pair	задачу ||| mixed $context string $unique	count=3
function_name	[function_name_1] внутреннюю ||| [function_name_2] [function_name_1]	count=2
return	код ||| int	count=1
function_name	так и опциональных ||| get number of parameters	count=1
return	основании позиции [return] атрибут не ||| [return]	count=1
arg_pair	число number представленное в ||| int $frombase	count=1
arg_pair	строки needle в строке ||| int $offset	count=1
arg_pair	все вхождения search ||| mixed $search mixed $replace	count=2
namespace	получает ||| function	count=2
function_name	удаляет ||| delete	count=2
arg_pair	до ||| string $haystack mixed $needle	count=1
function_name	читабельное описание [function_name] кодом error_code ||| [function_name]	count=1
namespace	сохранять ||| function	count=1
arg_pair	алгоритму описанному в ||| string $first	count=1
function_name	by ||| similar text	count=2
function_name	preg_replace() ||| preg	count=1
arg_pair	аналогично memcached::set() за исключением ||| int $expiration	count=1
function_name	[function_name_1] дочерний элемент ||| [function_name_1] [function_name_2]	count=1
function_name	добавляет одну ||| add options	count=4
function_name	одну ||| options	count=3
function_name	загружает файл remote_file ||| ftp fget	count=1
return	данная функция ||| array	count=1
function_name	количество рядов ||| rows	count=1
function_name	seed или случайным числом ||| mt srand	count=1
arg_pair	memcached::add() за исключением того ||| mixed $value int $expiration	count=1
function_name	values в качестве ||| array combine	count=1
function_name	восстанавливает исходное [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] документируемый комментарий ||| [function_name_2] [function_name_1]	count=2
function_name	когда следующий элемент ||| next element	count=1
function_name	активное значение ||| set	count=1
function_name	дней между 21 марта ||| days	count=1
namespace	классе константы ||| reflectionclass	count=1
function_name	описанному в programming ||| similar	count=1
arg_pair	string на ||| string $string	count=1
namespace	приложения которые впоследствии могут ||| gearmanclient	count=1
namespace	задает текущее активное значение ||| function	count=1
namespace	oliver isbn ||| function	count=1
function_name	в состав которого входит ||| get extension	count=1
function_name	возвращает цвет объекта ||| get color as	count=1
function_name	filename проверяя ошибки ||| php check syntax	count=1
function	[function_name_1] данных mysql ||| [arg_pair_2] [function_name_1]	count=3
return	с указанным ||| string	count=1
function_name	эта функция создает экземпляр ||| create	count=1
function_name	или удалённом x сервере ||| animate images	count=1
return	специальные ||| string	count=1
namespace	/ вывода заставляет обработчика ||| gearmanworker	count=1
function_name	the specified distortion metrics ||| get image channel distortions	count=1
namespace	этот метод производит ||| imagick	count=1
arg_pair	функция строит ||| bool $peg	count=1
arg_pair	копию массива ||| int $size	count=1
function_name	возвращает имя ||| to	count=1
function_name	sqlite ||| sqlite escape	count=1
arg_pair	аргументы формируют ||| int $minute	count=1
function_name	с ||| ftp connect	count=1
arg_pair	запрос ||| string $repos_url	count=1
function_name	в programming ||| similar text	count=1
arg_pair	strcmp() за исключением того ||| string $str2	count=1
arg_pair	меняет текущую ||| resource $ftp_stream string $directory	count=1
function_name	utf-8 ||| utf8	count=3
function	расширенных атрибутов [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	filename ||| php	count=1
arg_pair	центром в заданных ||| int $width	count=1
arg_pair	множественного числа ||| string $msgid2 int $n	count=1
namespace	каталогом ||| function	count=1
arg_pair	аналогично memcached::add() за исключением ||| mixed $value int $expiration	count=1
arg_pair	[arg_pair_1] ее ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	haystack начиная с ||| function	count=1
arg_pair	с форматом csv ||| string $enclosure	count=1
function_name	файл доступным для чтения ||| readable	count=1
function_name	задает имя класса объекты ||| class	count=1
arg_pair	конца ||| string $haystack	count=1
return	эта функция преобразует ||| int	count=1
function_name	значение глобальной цветовой палитры ||| colorspace	count=1
function_name	атрибут ||| id attribute	count=2
arg_pair	строку экранированную обратными ||| string $str string $charlist	count=1
arg_pair	возвращает ||| int $pri	count=1
function_name	[function_name_1] расширение файла ||| [function_name_1] [function_name_2]	count=1
arg_pair	сохраняет их в массиве ||| int $protocol	count=1
function_name	класса объекты ||| set info class	count=1
function_name	проверку синтаксиса ||| php check	count=1
return	данных ||| bool	count=1
arg_pair	заданного файла в байтах ||| resource $ftp_stream string $remote_file	count=1
arg_pair	выбранную область с ||| int $height	count=1
arg_pair	начиная с текущей позиции ||| resource $large_object	count=1
function_name	[function_name_1] высоту изображения ||| [function_name_2] [function_name_1]	count=1
arg_pair	подобна strcmp() за ||| string $str2	count=1
function_name	текущее активное ||| set	count=1
function_name	читает все значения атрибута ||| get values	count=1
function_name	[function_name_1] одну ||| [function_name_1] [function_name_2]	count=2
arg_pair	объект object ||| mixed $object string $class_name	count=1
function_name	описанному ||| similar text	count=2
arg_pair	файла ||| string $name	count=2
namespace	выставляет итератор массива в ||| splfixedarray	count=1
function_name	xml функциях ||| xml parser	count=1
function_name	[function_name_1] большой объект ||| [function_name_2] [function_name_1]	count=2
function_name	в ||| putenv	count=1
arg_pair	base возводится ||| gmp $exp	count=1
function_name	временную зону ||| time zone by country	count=1
function_name	первый атрибут в данной ||| ldap first attribute	count=1
function_name	установлен для session_start() ||| output reset rewrite vars	count=1
function_name	возвращает размер элемента архива ||| size	count=1
arg_pair	описанному в programming ||| string $first	count=1
arg_pair	функция ||| string $repos_url int $revision_no	count=1
arg_pair	функция строит ||| bool $recurse bool $peg	count=1
function_name	ищет позицию первого ||| strpos	count=1
function_name	с ldap ||| ldap	count=1
function_name	сеанс curl и ||| curl close	count=1
function_name	котором ||| by	count=1
namespace	настоящий момент анализирует объект ||| xmlreader	count=1
arg_pair	ключ key уже существует ||| mixed $value	count=1
function_name	текущее активное значение ||| quotes	count=1
function_name	сохранять всю информацию альфа ||| imagesavealpha	count=1
function_name	[function_name_1] xml анализатора ||| [function_name_2] set [function_name_1]	count=2
arg_pair	значение указанное параметром optval ||| int $optname mixed $optval	count=1
return	функция возвращает строку с ||| string	count=1
namespace	algorithms by oliver ||| function	count=1
return	строки haystack начиная ||| string	count=1
namespace	url адресу ||| function	count=1
function_name	с конца ||| trim	count=1
namespace	итератор ||| spldoublylinkedlist	count=2
function_name	статическим ||| static	count=1
function_name	трассировку стека ||| trace as string	count=1
namespace	by ||| function	count=1
namespace	определяет допустимо ли ||| splobjectstorage	count=1
namespace	текущую директорию на заданную ||| function	count=1
namespace	haystack ||| function	count=1
namespace	когда обработчик [namespace] пошлет ||| [namespace]	count=1
function_name	returns the specified distortion ||| image channel distortions	count=1
function_name	объявленные [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] дескрипторов ||| [function_name_2] [function_name_1]	count=1
arg_pair	input ||| int $pad_length	count=1
arg_pair	memcached::getdelayed() за исключением того ||| bool $with_cas callable $value_cb	count=1
function_name	не имеет потомков поэтому ||| children	count=1
function_name	возвращает ||| get elements by	count=2
arg_pair	в массиве ||| int $protocol	count=1
function_name	php ||| chdir	count=1
function_name	имена всех [function_name] которые были ||| get included [function_name]	count=1
function_name	[function_name_1] короткое имя ||| [function_name_2] [function_name_1]	count=1
return	параметры ||| array	count=1
namespace	число gmp в ||| function	count=1
namespace	элемент допустимое значение ||| limititerator	count=1
function_name	возвращает максимальный ||| get peak	count=1
namespace	или датаграммное ||| function	count=1
arg_pair	best algorithms by ||| string $second	count=1
arg_pair	в режиме доступа mode ||| int $pri	count=1
arg_pair	участке ||| int $shmid int $start	count=1
function_name	by oliver isbn ||| similar text	count=1
namespace	режиме ||| gearmanworker	count=1
function_name	атрибут с ||| id attribute ns	count=1
arg_pair	строку ||| string $haystack	count=3
function_name	[function_name_1] запроса ||| [function_name_2] [function_name_1]	count=2
function_name	обработчик по умолчанию для ||| default handler	count=1
function_name	в ||| php	count=2
arg_pair	файлов ||| string $repos_url	count=1
return	функция возвращает массив c ||| array	count=1
function_name	двух строк ||| similar	count=1
function_name	и получает список файлов ||| svn ls	count=1
function_name	[function_name_1] глубину ||| [function_name_1] [function_name_2]	count=1
namespace	ли внутренний объект-итератор ||| parentiterator	count=1
arg_pair	строки haystack начиная с ||| string $haystack mixed $needle	count=1
namespace	целое число ||| function	count=1
function_name	адресу репозитория и получает ||| svn	count=1
function_name	сущностей ||| entity	count=2
function_name	метод recursivetreeiterator::valid() ||| end	count=1
function_name	[function_name_1] заданного xml ||| [function_name_2] set [function_name_1]	count=2
arg_pair	описателем fd начиная ||| mixed $fd	count=1
function_name	запросе связанным с ||| fbsql	count=1
namespace	класса domnodelist ||| domnodelist	count=1
return	файлов и ||| array	count=1
function_name	строке subject все ||| preg match all	count=1
function_name	xml ||| xml	count=10
function	mime [arg_pair_2] ||| [function_name_1] decode headers [arg_pair_2]	count=1
function	[function_name_1] fd ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	массива ||| array $rows	count=1
return	файла ||| bool	count=1
function_name	директорий опционально ||| svn ls	count=1
arg_pair	classics: implementing the ||| string $first string $second	count=1
return	используемый для ||| bool	count=1
return	дней в ||| string	count=1
function_name	возвращает цвет объекта imagickpixel ||| get color as string	count=1
return	настройки [return] ||| [return]	count=2
function_name	[function_name_1] с ||| [function_name_2] [function_name_1]	count=1
arg_pair	best algorithms by oliver ||| string $first	count=1
return	вызов pdo::begintransaction() ||| bool	count=1
arg_pair	создана функциями imagecolorallocate() ||| resource $image int $color	count=1
arg_pair	новое значение ||| float $value	count=1
arg_pair	является callback-функцией функции ||| int $status	count=1
function_name	функциями как gettext() ||| textdomain codeset	count=1
arg_pair	целое [arg_pair] ||| [arg_pair]	count=3
function_name	параметры соединения с ||| option	count=1
function_name	[function_name_1] в mp3-файле ||| [function_name_2] get [function_name_1]	count=1
return	[return] с ||| [return]	count=1
namespace	с ||| function	count=2
arg_pair	принимает [arg_pair] добавляет ||| [arg_pair]	count=1
return	по ||| array	count=1
namespace	сокета или файловым ||| function	count=1
function_name	сокета ||| socket	count=6
namespace	сервер ||| memcached	count=1
function_name	получает числовой код ||| udm errno	count=1
function_name	командой ldap ||| ldap	count=1
function_name	dn возвращенный ||| ldap explode dn	count=1
arg_pair	memcached::replace() за исключением того ||| int $expiration	count=1
arg_pair	algorithms by oliver isbn ||| string $first	count=1
function_name	возможного типа ||| type	count=1
function_name	основываясь на его ||| no	count=1
arg_pair	файловым описателем fd ||| mixed $fd	count=1
function_name	возвращает ||| mysql get	count=1
arg_pair	значение ||| mixed $parameter mixed $value	count=1
arg_pair	haystack начиная ||| string $haystack mixed $needle	count=1
function_name	[function_name_1] версию ||| [function_name_1] get [function_name_2]	count=1
function_name	файла было изменено ||| get mtime	count=1
function_name	возвращает ||| get functions	count=1
function_name	тангенс параметра ||| tan	count=1
function_name	yaz_connect() ||| yaz	count=1
arg_pair	файлов и ||| int $revision_no	count=1
function_name	удалённом ||| animate images	count=2
function_name	атрибут с заданным локальным ||| attribute ns	count=1
function_name	проверяя ошибки ||| check	count=1
function_name	копирования ||| end copy	count=2
function_name	опционально для ||| svn	count=1
function_name	добавляет низкоприоритетную ||| add task low	count=1
arg_pair	path1 ||| int $rev2	count=1
arg_pair	алгоритму описанному ||| string $first	count=1
arg_pair	именем localname текущего ||| string $namespaceuri string $localname	count=1
arg_pair	данная функция строит ||| bool $peg	count=1
function_name	с ldap ||| ldap bind	count=1
function_name	проверку синтаксиса производит ||| php check syntax	count=1
return	функция закрывает ||| bool	count=1
namespace	строки ||| pdo	count=1
arg_pair	значения записи новое значение ||| mixed $value	count=1
function_name	/ ||| mb language	count=2
namespace	содержит ли контейнер заданный ||| splobjectstorage	count=1
function_name	дескриптор задания который ||| do	count=1
arg_pair	до конца ||| string $haystack mixed $needle	count=1
namespace	получает числовой код ||| function	count=1
function_name	устанавливает ||| stream set write buffer	count=1
return	неблокирующем режиме ||| bool	count=1
function_name	возвращает объявленные [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	производит верификацию ||| check syntax	count=1
arg_pair	запроса полученного [arg_pair] помощью oci_fetch() ||| [arg_pair]	count=1
function_name	как gettext() ||| bind textdomain	count=1
return	проверку ||| bool	count=2
arg_pair	на число a ||| gmp $a	count=1
function_name	файл remote_file с ||| ftp fget	count=1
namespace	или индексного ||| function	count=1
function_name	в syslog функциях ||| define syslog variables	count=1
function_name	расширение файла для ||| image type to extension	count=1
function_name	файлов и ||| svn ls	count=1
arg_pair	символ c вертикально ||| string $c int $color	count=1
function_name	для xml ||| xml set	count=4
arg_pair	строку в кавычки ||| string $string	count=1
arg_pair	синтаксиса производит верификацию файла ||| string $filename	count=1
return	в строках ||| mixed	count=1
arg_pair	memcached::set() за ||| mixed $value int $expiration	count=1
namespace	фиксации до тех ||| pdo	count=1
function_name	[function_name_1] заголовка mime ||| [function_name_2] [function_name_1]	count=2
function_name	помощью dbase_delete_record() ||| dbase pack	count=1
function_name	получение текущего ||| mb language	count=1
arg_pair	два соединённых и неразличимых ||| int $type	count=1
function	[function_name_1] функцию callback ||| [arg_pair_2] [function_name_1]	count=1
namespace	описания [namespace] интерфейса ||| [namespace]	count=1
function_name	число записей ||| entries	count=1
arg_pair	по указанному индексу ||| mixed $index mixed $newval	count=1
function_name	обработчик неразобранных объявлений сущностей ||| entity decl handler	count=1
function_name	возвращает параметры cookie сессии ||| session get cookie params	count=1
namespace	имя файла текущего ||| directoryiterator	count=1
arg_pair	информацию альфа компонента ||| resource $image	count=1
function_name	возвращает ширину ||| get	count=1
function_name	и директорий опционально ||| svn	count=1
arg_pair	файл указанный в fd ||| int $pri	count=1
arg_pair	получает ||| string $repos_url	count=1
namespace	приводит [namespace] к ||| [namespace]	count=1
function_name	запроса ||| pg	count=1
namespace	к searchd выполняет ||| sphinxclient	count=1
arg_pair	проверку синтаксиса производит ||| string $filename	count=1
arg_pair	needle и ||| mixed $needle	count=1
return	пор пока следующий ||| bool	count=1
function_name	директорию на заданную аргументом ||| chdir	count=1
arg_pair	двух ||| string $first string $second	count=1
arg_pair	первого вхождения needle ||| string $haystack	count=1
function_name	[function_name_1] объявленные ||| [function_name_1] [function_name_2]	count=1
function_name	объявляет атрибут с ||| id attribute ns	count=1
namespace	узел ||| tidynode	count=1
arg_pair	строку и [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=3
function_name	и из репозитория ||| svn	count=1
function_name	регистр при сравнении алфавитных ||| eregi replace	count=1
function_name	числовой ||| errno	count=1
namespace	репозитория и получает список ||| function	count=1
function_name	worlds best algorithms by ||| text	count=1
function_name	файла указанного ||| check	count=1
arg_pair	path в ||| string $path string $url	count=1
function_name	имя класса [function_name_2] ||| [function_name_2] [function_name_1]	count=12
namespace	дочерних элементов у текущего ||| simplexmlelement	count=1
arg_pair	подстроку ||| mixed $needle	count=1
function_name	section of a ||| ps curveto	count=1
function_name	заменяет значения массива ||| array replace	count=1
function_name	ассоциированные с объектом ||| info	count=1
function_name	класса которое будет использовать ||| file class	count=1
function_name	автоматического ||| mb detect order	count=2
function_name	автоматического ||| mb	count=1
function_name	следующую ||| zip read	count=2
arg_pair	с handle и интерпретирует ||| resource $handle	count=1
arg_pair	в группу запросов ||| resource $req	count=1
arg_pair	namespaceuri с локальным именем ||| string $namespaceuri	count=1
function_name	[function_name_1] высоту ||| [function_name_1] image [function_name_2]	count=1
function_name	implementing the worlds ||| similar	count=1
function_name	копирования данных ||| copy	count=1
return	oliver ||| int	count=1
namespace	imagick и освобождает все ||| imagick	count=1
function_name	клиента в виде ||| client	count=1
function_name	ли значение ||| is callable	count=1
arg_pair	изображений встроенной libgd библиотеки ||| int $effect	count=1
return	летоисчислении ||| string	count=1
return	летоисчислении в ||| string	count=1
function_name	возвращает данные [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	устанавливает опорной точку для ||| set geo anchor	count=1
arg_pair	ссылающийся на него ||| string $encoding string $separator	count=1
arg_pair	того что новое значение ||| float $value	count=1
function_name	получает список ||| svn ls	count=1
function_name	массив в качестве значения ||| array	count=1
arg_pair	в объекте imagickpixel ||| mixed $bordercolor int $width	count=1
arg_pair	опционально с ||| string $query	count=1
function_name	возвращает название региона ||| region name	count=1
function_name	[function_name_1] метода __autoload ||| [function_name_2] [function_name_1]	count=2
function_name	и конца ||| trim	count=1
function_name	указанным шаблоном подстановок оболочки ||| fnmatch	count=1
function_name	сериализует объект в ||| json serialize	count=1
function_name	функция создает экземпляр ||| create text node	count=1
namespace	проверяет является ли ||| iteratoriterator	count=1
function_name	в spl [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	операции ||| resource $link_identifier	count=1
function_name	читает [function_name_2] ||| [function_name_2] [function_name_1]	count=6
arg_pair	массив содержащий ||| array $array1 array $array2	count=1
arg_pair	подходящим ||| string $string	count=1
return	опционально для конкретной ревизии ||| array	count=1
arg_pair	[arg_pair_1] path2 ||| [arg_pair_2] [arg_pair_1]	count=4
function_name	section of ||| ps curveto	count=1
function_name	косинус параметра ||| cos	count=1
arg_pair	в строке source ||| string $source int $options	count=1
function_name	получает ||| svn ls	count=2
function_name	имя класса итератора массива ||| iterator class	count=2
function_name	добавляет переданные в качестве ||| array unshift	count=1
arg_pair	специальные символы внутри ||| string $string	count=1
arg_pair	strcmp() ||| string $str1 string $str2	count=2
arg_pair	с шаблоном pattern и ||| string $pattern	count=1
arg_pair	и до конца ||| string $haystack	count=1
function_name	добавляет одну или несколько ||| add options	count=2
function_name	объекты [function_name] ||| [function_name]	count=2
function_name	функция возвращает имена всех ||| get	count=1
function_name	верификацию файла указанного ||| check	count=1
arg_pair	добавяет файл в ||| string $contents	count=1
arg_pair	флаг сохранять всю информацию ||| resource $image	count=1
arg_pair	добавяет файл в zip-архив ||| string $contents	count=1
namespace	или верхний ||| function	count=1
return	и [return] ||| [return]	count=2
function_name	класса ||| class	count=7
function	[function_name_1] [arg_pair_2] ||| [function_name_1] exists [arg_pair_2]	count=2
function_name	возвращает имя ||| name	count=2
arg_pair	директорий опционально для конкретной ||| string $repos_url	count=1
arg_pair	подходящим для драйвера способом ||| string $string	count=1
arg_pair	кодировки in_charset в out_charset ||| string $in_charset	count=1
function_name	позицию первого вхождения подстроки ||| iconv strpos	count=1
namespace	записей ||| function	count=1
function_name	устанавливает флаг ||| imagesavealpha	count=1
function_name	группы [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	адресу репозитория ||| bool $recurse	count=1
function_name	является ||| mb	count=1
function_name	создает постоянное ||| oci pconnect	count=1
namespace	на searchd ||| sphinxclient	count=1
namespace	настройки ||| function	count=1
function_name	session_start() ||| output reset rewrite vars	count=1
arg_pair	функция ||| int $revision_no	count=1
function_name	поток связанный с ||| closedir	count=1
function_name	filename проверяя ошибки в ||| check	count=1
function_name	аргументом ||| chdir	count=1
arg_pair	экранирует специальные ||| string $string	count=1
function_name	обработчик внешних сущностей для ||| external entity ref handler	count=1
namespace	создает обычный или ||| function	count=1
function_name	верификацию ||| php check syntax	count=2
return	php ||| bool	count=1
function	[function_name_1] записи ||| [arg_pair_2] [function_name_1]	count=1
function_name	[function_name_1] [function_name_2] элемента ||| [function_name_1] [function_name_2]	count=3
arg_pair	его в локальный файл ||| resource $ftp_stream string $local_file	count=1
function_name	[function_name] кодом ||| [function_name]	count=1
function_name	[function_name_1] сущностей ||| [function_name_2] [function_name_1]	count=4
function_name	автоматического ||| order	count=1
arg_pair	список файлов и директорий ||| string $repos_url int $revision_no	count=1
namespace	определяет допустимо ||| splobjectstorage	count=1
namespace	и директорий опционально для ||| function	count=1
function_name	распаковывает сжатую ||| gzinflate	count=1
arg_pair	с именем ||| string $name	count=1
function	[function_name_1] определенное строкой ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	обрабатывает результат поиска ||| string $matcheddn	count=1
function_name	/ etc / services ||| getservbyport	count=1
function_name	ли значение переменной быть ||| is callable	count=1
arg_pair	в массиве fd ||| array $fd	count=1
function_name	название ||| region name	count=1
function_name	xor двух ||| gmp xor	count=1
arg_pair	чистую директорию ||| string $topath	count=1
function_name	соответствует jste ||| is jste	count=1
function_name	php [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	заданную ||| seek	count=1
function_name	classics: implementing ||| similar text	count=1
arg_pair	input повторенную multiplier раз ||| int $multiplier	count=1
function_name	реальный размер ||| zip entry filesize	count=1
function_name	отменяет ||| cancel	count=1
namespace	описанному в ||| function	count=1
return	дескриптор ||| resource	count=1
namespace	filename проверяя ||| function	count=1
function_name	настройки ||| runtime	count=1
arg_pair	эта функция сортирует массив ||| array $array	count=1
return	настройки ||| bool	count=1
function_name	название региона соответствующей ||| name	count=1
function_name	открывает файл ||| eio open	count=1
arg_pair	на указанном local_socket ||| string $local_socket	count=1
namespace	массиве ||| arrayiterator	count=1
arg_pair	файла указанного ||| string $filename	count=1
return	worlds best algorithms by ||| int	count=1
function_name	url ||| svn	count=1
arg_pair	координаты 0 0 ||| resource $image int $x	count=1
return	приводит к ||| void	count=1
return	качестве параметра ||| void	count=1
function_name	добавляет данные в ||| add record	count=1
arg_pair	алгоритму описанному ||| string $first string $second	count=1
namespace	и сохраняет png ||| function	count=1
function_name	верификацию файла указанного в ||| php check	count=1
arg_pair	массив содержащий все компоненты ||| string $url int $component	count=1
arg_pair	работает аналогично memcached::get() ||| callable $cache_cb float $cas_token	count=1
function_name	задает текущее ||| set	count=1
function_name	могут быть извлечены gearmanclient::data() ||| data	count=1
function_name	преобразует число ||| intval	count=1
function_name	какого-либо сервера ||| wait	count=1
function_name	опционально ||| ls	count=1
namespace	и переданный в качестве ||| function	count=1
return	указанного ||| bool	count=1
arg_pair	подстроки needle в строку ||| string $haystack	count=3
function_name	параметры ||| option	count=1
function_name	spl очереди метода ||| spl	count=1
function_name	возвращает размер [function_name_2] ||| [function_name_2] [function_name_1]	count=8
function	[function_name_1] [arg_pair_2] ||| [function_name_1] get [arg_pair_2]	count=1
function_name	настройки [function_name] анализатора ||| [function_name] parser set	count=1
arg_pair	в параметре plaintext ||| resource $identifier string $plaintext	count=1
function_name	загружает [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	в параметре plaintext ||| string $plaintext	count=1
return	в массив ||| array	count=3
return	с ||| string	count=12
function_name	для пользовательского класса ||| class	count=1
arg_pair	алфавитно-цифровые [arg_pair] подобно ||| [arg_pair]	count=1
function_name	вхождения подстроки needle ||| iconv	count=1
arg_pair	filename проверяя ошибки ||| string $filename	count=1
arg_pair	что аргументы формируют время ||| int $minute	count=1
function_name	неразобранных объявлений сущностей ||| entity decl	count=1
arg_pair	search в subject ||| mixed $search mixed $replace	count=2
arg_pair	соединение с удалённым сокетом ||| string $errstr float $timeout	count=1
function_name	подходящим для ||| quote	count=1
function_name	пасху в заданном году ||| easter	count=1
arg_pair	возвращает копию массива ||| int $size	count=1
function_name	поиска ||| ldap	count=1
function_name	функция идентична функции preg_replace() ||| preg filter	count=1
return	получает числовой ||| int	count=1
function_name	низкоприоритетную [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	атрибуты ||| has attributes	count=1
return	результате предыдущей операции ||| int	count=1
function_name	4714 ||| gregoriantojd	count=1
function_name	добавляет фоновую ||| add task background	count=1
function_name	список имен таблиц базы ||| list tables	count=1
namespace	infiniteiterator ||| infiniteiterator	count=1
function_name	текущее значение настройки magic_quotes_gpc ||| magic quotes gpc	count=1
arg_pair	и до конца строки ||| string $haystack	count=1
function_name	и индексов ||| array udiff	count=1
function_name	номер ошибки произошедшей ||| last error	count=1
return	соединение ||| bool	count=1
namespace	worlds ||| function	count=1
arg_pair	читает из переданного bzip2 ||| resource $bz	count=1
function	[function_name_1] с данными ||| [arg_pair_2] [function_name_1]	count=1
function	[function_name_1] mysql ||| [function_name_1] [arg_pair_2]	count=3
function_name	получает числовой код ||| udm	count=1
function_name	подсчитывает количество ||| count	count=1
function_name	с байта ||| eio read	count=1
function_name	опционально для конкретной ревизии ||| ls	count=1
function_name	в соответствющие html-сущности для ||| htmlentities	count=1
function_name	php на указанный в ||| chdir	count=1
arg_pair	строке source ||| string $source int $options	count=1
return	объект класса domnodelist ||| domnodelist	count=1
namespace	в результате предыдущей операции ||| function	count=1
function_name	экранирует спецсимволы ||| escape	count=1
function_name	[function_name_1] итератора ||| [function_name_2] [function_name_1]	count=4
function_name	функция возвращает ||| get elements by tag	count=1
function_name	в массиве targets в ||| svn commit	count=1
arg_pair	и код региона ||| string $region_code	count=1
function_name	корневой каталог текущего процесса ||| chroot	count=1
namespace	[namespace] символическую ||| [namespace]	count=1
function	[function_name_1] подстрока needle ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	каждого [arg_pair] ||| [arg_pair]	count=1
function_name	класса без вызова конструктора ||| new instance without constructor	count=1
function_name	список имен таблиц базы ||| mysql list tables	count=1
arg_pair	отправляет в filename ||| string $filename	count=1
arg_pair	value1 с value2 ||| mixed $value2	count=1
function_name	устанавливает параметры ||| set option	count=2
arg_pair	с первого вхождения needle ||| string $haystack	count=1
function_name	атрибутов ||| update attributes	count=1
function_name	получает документируемый [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	все [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	временной зоны с ||| string	count=1
function_name	массива values в качестве ||| array combine	count=1
namespace	задания от ||| gearmanworker	count=1
function_name	и кода ||| code	count=1
function_name	его и ||| strstr	count=1
function_name	возвращает имя элемента ||| get name	count=1
function_name	них выведут эти ||| ping	count=1
function_name	обработчик неразобранных объявлений ||| decl handler	count=2
return	директорию ||| bool	count=1
arg_pair	url адресу ||| string $repos_url int $revision_no	count=1
function_name	точки ||| imageline	count=1
function_name	интерфейсах указанный ||| socket create listen	count=1
namespace	элемент directoryiterator ||| directoryiterator	count=1
function_name	[function_name] директорию ||| [function_name]	count=2
return	рисует ||| bool	count=1
function_name	ли значение переменной быть ||| is	count=1
function	расширенного [arg_pair_2] ||| [function_name_1] get [arg_pair_2]	count=1
function_name	к потоку ||| stream filter prepend	count=1
function_name	преобразует число gmp в ||| gmp intval	count=1
function_name	данных ||| dbase	count=1
function_name	большой объект из базы ||| pg lo export	count=1
function_name	значение указанной ||| set encoding	count=1
function_name	формат utf-8 ||| to utf8	count=1
arg_pair	именем localname ||| string $namespaceuri string $localname	count=1
function_name	читает ||| read all	count=2
arg_pair	в ||| string $filename	count=2
function_name	директорий ||| ls	count=1
function_name	с каталогом и ||| closedir	count=1
namespace	object класса reflectionextension ||| reflectionextension	count=1
function_name	index в массиве ||| offset	count=1
function_name	zip-архиву ||| archive	count=1
function_name	извлечены gearmanclient::data() ||| set data	count=1
function_name	получает числовой код ошибки ||| errno	count=1
function_name	может ли значение ||| is	count=1
function_name	верификацию файла ||| check syntax	count=1
namespace	адресу репозитория и получает ||| function	count=1
arg_pair	index опционально с ||| string $query	count=1
function_name	проверяя ошибки в ||| php check syntax	count=1
function_name	этот метод производит анимацию ||| animate	count=1
function_name	задает имя класса ||| info class	count=1
function_name	возвращает ||| memory get	count=1
function_name	дату указанного календаря calendar ||| cal	count=1
function_name	возвращает комментарий ||| get comment	count=2
function_name	magic.mime ||| content	count=1
function_name	интерфейс или ||| implements interface	count=1
arg_pair	помощью функции stream_socket_server() ||| resource $server_socket float $timeout	count=1
function_name	пробельными ||| space	count=1
namespace	удаляет предварительно установленный функцией ||| function	count=1
function_name	сжатия ||| compression	count=1
function_name	получает ||| dbase get record	count=2
arg_pair	callback-функцией функции ||| string $contents int $status	count=1
arg_pair	аналогично memcached::get() ||| callable $cache_cb float $cas_token	count=1
function_name	вхождения подстроки needle в ||| iconv	count=1
function_name	экранирует специальные ||| quote	count=1
arg_pair	указанную команду command ||| int $return_var	count=1
function_name	состоянии буфера вывода ||| ob	count=1
arg_pair	объекте imagickpixel ||| mixed $bordercolor	count=1
function_name	такими функциями как gettext() ||| bind textdomain codeset	count=1
function_name	вставленной в таблицу строке ||| last	count=1
return	сортирует ||| bool	count=1
arg_pair	и получает список ||| bool $recurse	count=1
function_name	поля ||| pg field num	count=2
arg_pair	указанного ||| string $name	count=1
arg_pair	из массива ||| array $rows	count=1
function_name	число столбцов затронутых ||| field count	count=1
function_name	объекта ||| object	count=1
function_name	буфер клиентскими библиотеками oracle ||| oci	count=1
function_name	временную зону ||| geoip time zone by country and region	count=1
return	основании позиции [return] ||| [return]	count=2
arg_pair	кодировка ||| string $encoding	count=1
arg_pair	параметре socket ||| resource $socket	count=1
return	в режим автоматической фиксации ||| bool	count=1
function_name	запущенного функциями pg_send_query() pg_send_query_params() ||| result	count=1
return	по url адресу ||| array	count=1
function_name	зеркало [function_name] отражая ||| flop [function_name]	count=1
namespace	пока ||| pdo	count=1
function_name	возвращает максимальный ||| get peak usage	count=1
function_name	string mime набора символов ||| mb preferred mime name	count=1
arg_pair	два соединённых и неразличимых ||| int $domain int $type	count=1
function_name	-функцией ||| array map	count=1
function_name	дочерние объекты ||| children	count=1
arg_pair	ранее дескриптора директории ||| int $length	count=1
function_name	большой объект ||| pg lo	count=4
function_name	[function_name_1] идентификатор жанра ||| [function_name_2] [function_name_1]	count=1
function_name	текущее ||| quotes	count=1
function_name	соответствующий имени ||| name	count=2
namespace	вызов ||| pdo	count=1
arg_pair	большинством функций данного модуля ||| string $character_set	count=1
function_name	список ошибок возникших при ||| mysqli stmt error list	count=1
function	[function_name_1] socket ||| [function_name_1] sendto resource $socket [arg_pair_2]	count=1
arg_pair	timestamp ||| int $format	count=2
arg_pair	out_charset ||| string $in_charset	count=1
arg_pair	данная ||| bool $recurse	count=1
arg_pair	чистую директорию ||| string $frompath string $topath	count=1
arg_pair	ранее дескриптора директории ||| resource $zip_entry int $length	count=1
function_name	ваши собственные обработчики протоколов ||| stream wrapper	count=1
function_name	[function_name_1] версию клиента ||| [function_name_1] [function_name_2]	count=1
function_name	строку ||| iconv handler	count=1
function_name	возвращая его [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	считывает следующую запись ||| zip read	count=1
function_name	информацию альфа компонента в ||| imagesavealpha	count=1
arg_pair	альфа компонента ||| resource $image	count=1
function_name	вставляет ||| insert	count=3
arg_pair	в указанном объекте object ||| mixed $object string $method_name	count=1
function_name	байта ||| eio read	count=1
function_name	добавляет ||| add server	count=2
namespace	создаёт потоковый или ||| function	count=1
function_name	объекта ||| object hash	count=1
function_name	[function_name_1] копию ||| [function_name_2] [function_name_1]	count=1
arg_pair	символы внутри строки подходящим ||| string $string	count=1
function_name	число столбцов затронутых последним ||| count	count=1
function_name	[function_name_1] дочерний элемент ||| [function_name_2] [function_name_1]	count=1
arg_pair	в fd ||| mixed $fd int $pri	count=1
return	тех пор пока следующий ||| bool	count=1
function	[function_name_1] строку data ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	[arg_pair] на ftp-сервер ||| [arg_pair]	count=4
function_name	синтаксиса ||| php check	count=1
arg_pair	с первого вхождения ||| string $haystack	count=1
arg_pair	его и до конца ||| mixed $needle	count=1
function_name	число ошибок ||| error count	count=2
function_name	в нижнем регистре ||| lower	count=1
arg_pair	функция использует тест миллера-рабина ||| gmp $a int $reps	count=1
function_name	и времени заданным аргументами ||| mktime	count=1
function_name	ключевые слова из query ||| build	count=1
function_name	метод производит анимацию ||| images	count=1
arg_pair	строки haystack ||| string $haystack mixed $needle	count=1
function_name	функция ||| svn ls	count=2
function_name	[function_name_1] mime ||| [function_name_2] [function_name_1]	count=2
arg_pair	для ||| string $directory	count=1
arg_pair	needle ||| string $haystack	count=1
function_name	сравнения значений [function_name] ||| [function_name]	count=1
function_name	array2 и возвращает разницу ||| array diff uassoc	count=1
function_name	ли ||| is callable	count=2
namespace	переданный в ||| function	count=1
function_name	результате запроса ||| num	count=1
namespace	для конкретной ||| function	count=1
function_name	returns the specified distortion ||| get image channel distortions	count=1
function_name	декодирует несколько ||| decode	count=1
arg_pair	массив содержащий ||| array $array1	count=1
function_name	директории ldap ||| ldap	count=1
arg_pair	выполняет проверку ||| string $filename	count=1
function_name	объявленные классы ||| declared classes	count=2
namespace	драйвера способом ||| pdo	count=1
arg_pair	worlds best algorithms ||| string $first string $second	count=1
function_name	utf-8 ||| to utf8	count=2
function_name	и выключает внутреннюю ||| internal	count=1
function_name	в месяце month ||| in month	count=1
arg_pair	конкретной ревизии ||| bool $recurse	count=1
function_name	путь до [function_name] терминального ||| [function_name]	count=1
arg_pair	в отличие от strcmp() ||| string $str1 string $str2	count=1
function	[function_name_1] указанному индексу ||| [arg_pair_2] [function_name_1]	count=1
function_name	число gmp в ||| gmp	count=1
arg_pair	в системе счисления base ||| int $base	count=1
function_name	[function_name_1] выходных документов ||| [function_name_2] set [function_name_1]	count=1
function_name	в filename ||| syntax	count=1
arg_pair	специальные символы в unescaped_string ||| string $unescaped_string	count=1
function_name	возвращает имена всех функций ||| get	count=1
arg_pair	truetype текста в ||| string $fontfile	count=1
arg_pair	специальные символы в unescaped_string ||| string $unescaped_string resource $link_identifier	count=1
namespace	каждый сервер ||| memcached	count=1
return	репозитория и получает ||| array	count=1
function_name	filename проверяя ошибки в ||| syntax	count=1
function_name	интернет соединения соответствующего ||| id	count=1
arg_pair	best ||| string $second	count=1
function_name	использовать в других xml ||| xml parser	count=1
function_name	определения ||| mb	count=1
function_name	определению в бинарном файле ||| database info	count=1
function_name	значение указанной ||| iconv set encoding	count=1
arg_pair	подобна strcmp() за исключением ||| string $str1 string $str2	count=1
function_name	качестве параметра ||| closedir	count=1
arg_pair	в лог web-сервера ||| string $extra_headers	count=1
namespace	если требуется и экранирует ||| pdo	count=1
return	в него данные data ||| bool	count=1
namespace	вернет false ||| recursiveiteratoriterator	count=1
function_name	описанному в programming classics: ||| text	count=1
return	png изображение ||| bool	count=1
function_name	следующий элемент ||| next	count=1
return	или ||| bool	count=1
function_name	на расстоянии ||| splice	count=1
namespace	ли ||| iteratoriterator	count=1
namespace	начинает потоковое или датаграммное ||| function	count=1
arg_pair	с первого вхождения needle ||| string $haystack mixed $needle	count=1
function_name	операции поиска ||| ldap count entries	count=1
arg_pair	строк по алгоритму ||| string $first string $second	count=1
arg_pair	участке ||| int $start	count=1
namespace	the ||| function	count=1
function_name	by oliver ||| text	count=1
function_name	кадра ||| frame	count=1
arg_pair	переданного bzip2 ||| resource $bz int $length	count=1
arg_pair	которое будет передано ||| string $value	count=1
function_name	репозитория ||| ls	count=1
arg_pair	обрабатывает результат поиска ||| int $errcode string $matcheddn	count=1
arg_pair	использованием множественного числа в ||| int $n	count=1
function_name	имен таблиц ||| tables	count=1
arg_pair	файл target с именем ||| string $target	count=1
arg_pair	эллипс с центром ||| int $cy int $width	count=1
function_name	данный метод выводит изображение ||| image	count=1
arg_pair	принимает закодированную в json ||| bool $assoc	count=1
function_name	обратный вызов статуса ||| task status	count=1
function_name	recursiveiteratoriterator::valid() впервые ||| end	count=1
function_name	его и до ||| strstr	count=1
function_name	несколько случайных значений ||| rand	count=1
arg_pair	oliver isbn ||| string $first string $second	count=1
function_name	строк по алгоритму описанному ||| similar	count=1
function_name	[function_name_1] возможного типа ||| [function_name_2] [function_name_1]	count=1
function_name	удалённом ||| images	count=1
return	преобразует число gmp ||| int	count=1
return	или удалённом x сервере ||| bool	count=1
function_name	targets ||| svn commit	count=2
arg_pair	изображение image ||| resource $image	count=1
arg_pair	вычисляет расхождение в ||| array $array2	count=1
function_name	подготовленного функциями [function_name] yaz_search() yaz_present() ||| [function_name]	count=1
arg_pair	соответствии с форматом csv ||| string $delimiter string $enclosure	count=1
function_name	идентична функции preg_replace() за ||| preg filter	count=1
arg_pair	конца ||| string $haystack mixed $needle	count=1
arg_pair	programming classics: implementing the ||| string $second	count=1
function_name	следующей строки результирующей таблицы ||| fetch	count=1
function_name	столбца следующей строки результирующей ||| fetch column	count=1
namespace	splfileobject ||| splfileobject	count=4
function_name	url адресу репозитория и ||| svn ls	count=1
namespace	число php integer ||| function	count=1
function_name	получает первый атрибут в ||| ldap first attribute	count=1
namespace	юлианском летоисчислении ||| function	count=1
arg_pair	объекте imagickpixel ||| mixed $bordercolor int $width	count=1
function_name	для механизмов автоматического ||| detect	count=1
function_name	добавляет данные в ||| add	count=1
function_name	имя поля ||| field name	count=2
function_name	функция возвращает ||| get loaded	count=1
function_name	возвращает оставшуюся часть содержимого ||| get contents	count=1
function_name	файла ||| php	count=1
arg_pair	filename на указанного ||| string $filename mixed $user	count=1
return	массив функций ||| array	count=1
function_name	фильтр ||| filter	count=1
function_name	кавычки если требуется ||| quote	count=1
function_name	функция устанавливает [function_name_2] ||| [function_name_1] [function_name_2]	count=3
arg_pair	сравнивает value1 с value2 ||| mixed $value2	count=1
arg_pair	задачу для параллельной работы ||| string $unique	count=3
namespace	использоваться для выполнения задачи ||| gearmanclient	count=2
function_name	описанному в programming ||| similar text	count=1
function_name	всю ||| imagesavealpha	count=1
arg_pair	определенной версии version ||| string $feature string $version	count=1
function_name	деструктором ||| destructor	count=1
return	с помощью ||| string	count=1
function	[function_name_1] записи из ||| [arg_pair_2] [function_name_1]	count=1
namespace	programming classics: ||| function	count=1
function_name	кэша ||| cache	count=1
arg_pair	algorithms by oliver isbn ||| string $second	count=1
arg_pair	список файлов и ||| int $revision_no	count=1
return	эта функция удаляет ||| bool	count=1
function_name	вычисляет побитовое и двух ||| gmp and	count=1
function_name	filename проверяя ошибки ||| php	count=1
function_name	выбирает базу данных ||| mysql db query	count=1
function_name	programming classics: implementing the ||| text	count=1
function_name	php используя встроенное изображение ||| logo guid	count=1
function_name	[function_name_1] сервера к ||| [function_name_2] [function_name_1]	count=2
function_name	операций ввода / вывода ||| timeout	count=1
arg_pair	имя ||| string $name	count=1
arg_pair	a ||| gmp $a	count=2
arg_pair	programming classics: implementing the ||| string $first string $second	count=1
arg_pair	дескриптора директории ||| resource $zip_entry int $length	count=1
arg_pair	с заданными координатами центра ||| int $cx	count=1
function_name	с низким приоритетом и ||| do low	count=1
function_name	которые используются при ||| set	count=1
arg_pair	соединённых и неразличимых ||| int $type	count=1
namespace	обработчика ожидать задания от ||| gearmanworker	count=1
function_name	число gmp ||| gmp intval	count=1
function_name	могут быть извлечены gearmanclient::data() ||| set data	count=1
function_name	задает ||| magic	count=1
namespace	pdo::begintransaction() не ||| pdo	count=1
arg_pair	isbn ||| string $first	count=1
arg_pair	строки ||| string $pattern	count=1
function_name	выбирает большой объект из ||| pg lo export	count=1
function_name	закрывает файл ||| close	count=1
function_name	указанного в ||| check syntax	count=1
function_name	возвращает список ошибок возникших ||| stmt error list	count=1
function_name	функциями [function_name] yaz_search() ||| [function_name]	count=1
arg_pair	эллипс с центром в ||| int $width	count=1
function_name	установка / получение текущего ||| mb language	count=1
function_name	работает аналогично memcached::prepend() ||| prepend	count=1
function_name	[function_name] элемент directoryiterator ||| [function_name]	count=1
function_name	текущее активное ||| magic quotes runtime	count=1
function_name	[function_name_1] обработчик ||| [function_name_1] character data [function_name_2]	count=1
function_name	последнем soap-запросе ||| last request	count=1
function_name	текущего узла ||| key	count=1
function_name	целое число php integer ||| intval	count=1
function_name	код ||| udm	count=1
function_name	[function_name_1] метод класса ||| [function_name_2] [function_name_1]	count=2
return	тех пор пока ||| bool	count=1
arg_pair	string на заданных ||| string $string int $color	count=1
function_name	сервере ||| images	count=1
namespace	является ||| iteratoriterator	count=2
function_name	для удаления из базы ||| dbase delete	count=1
function_name	параметры для [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	читает все значения атрибута ||| get values len	count=1
function_name	класс окончательным final ||| final	count=1
arg_pair	создает ||| string $pathname	count=1
function_name	добавляет дочерний элемент ||| add child	count=2
function_name	эта функция преобразует ||| gmp	count=1
function_name	заменяет ||| replace	count=3
return	производит верификацию ||| bool	count=1
function_name	по ||| ls	count=1
function_name	сравнивает value1 с ||| compare	count=1
return	устанавливает ||| bool	count=2
namespace	стилей которые установлены с ||| xsltprocessor	count=1
function_name	worlds ||| similar	count=1
function_name	правильные сложные слова ||| pspell config runtogether	count=1
namespace	и включая его и ||| function	count=1
function_name	добавляет ||| add	count=16
function_name	[function_name_1] дескриптор задания ||| [function_name_2] low [function_name_1]	count=2
return	для многобайтовой ||| bool	count=1
arg_pair	конкретной ||| string $repos_url int $revision_no	count=1
function_name	readdir() ||| dir readdir	count=1
function_name	информацию альфа компонента ||| imagesavealpha	count=1
function_name	к потоку ||| filter prepend	count=1
arg_pair	из assoc_array в приемлемые ||| string $table_name	count=1
arg_pair	она выполняет команду command ||| string $command int $return_var	count=1
function_name	[function_name_1] низкоприоритетную фоновую ||| [function_name_1] task [function_name_2]	count=1
function_name	какого-либо сервера заданий ||| wait	count=1
function_name	в битах ||| connection status	count=1
function_name	освобождает память ||| free	count=2
function_name	версии curl ||| curl version	count=2
arg_pair	локальный файл ||| string $local_file	count=1
arg_pair	локальным именем localname для ||| string $localname	count=1
arg_pair	верификацию ||| string $filename	count=1
arg_pair	информацию альфа ||| resource $image	count=1
arg_pair	и куда ||| string $file int $line	count=1
arg_pair	и отправляет в filename ||| string $filename mixed $data	count=1
function_name	группу запросов указатель на ||| eio grp	count=1
namespace	ob_start() ||| function	count=1
namespace	очереди ||| splqueue	count=2
arg_pair	значение ||| int $option mixed $value	count=1
namespace	верхний регистр если этот ||| function	count=2
namespace	с ||| splheap	count=1
namespace	или jpeg ||| function	count=1
function_name	the specified distortion ||| get image channel distortions	count=1
function_name	значение атрибута ||| attribute	count=2
function_name	задает текущее активное значение ||| quotes	count=1
function_name	указанный интерфейс или нет ||| interface	count=1
function_name	позицию на первый атрибут ||| attribute	count=1
function_name	временную зону [function_name] порядку следующими ||| [function_name] timezone	count=1
function_name	для механизмов ||| mb detect	count=1
namespace	случайное число если seed ||| function	count=1
function_name	в виде ассоциативного ||| image geometry	count=1
function_name	или удалённом x ||| animate	count=1
function_name	директорий ||| svn	count=1
function_name	теми же правилами что ||| resolve include path	count=1
function_name	заданным аргументами ||| mktime	count=1
function_name	строк по алгоритму ||| similar	count=1
arg_pair	объект object в своем ||| mixed $object string $class_name	count=1
function_name	внутренний [function_name_2] ||| [function_name_2] [function_name_1]	count=4
return	закрывает поток связанный с ||| void	count=1
function_name	метод похож на datetime::getlasterrors() ||| get last errors	count=1
function_name	максимальное количество элементов ||| max	count=1
arg_pair	слева справа или с ||| string $pad_string int $pad_type	count=1
arg_pair	строк по алгоритму описанному ||| string $first	count=1
function	ошибок а [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	число если ||| function	count=1
namespace	возвращает дескриптор работы ||| gearmanjob	count=1
function_name	наложения ||| imagelayereffect	count=1
namespace	дескриптор работы ||| gearmanjob	count=1
arg_pair	ссылку path в рабочую ||| string $path bool $recursive	count=1
function_name	извлечены gearmanclient::data() ||| data	count=1
function_name	число дней в юлианском ||| jdtofrench	count=1
return	установка ||| mixed	count=1
function_name	данных postgresql ||| pg	count=2
arg_pair	worlds best ||| string $first	count=1
return	и переданный в качестве ||| void	count=1
function_name	проверку ||| php	count=1
return	строк по ||| int	count=1
namespace	с первого вхождения ||| function	count=1
function_name	верификацию файла ||| php check	count=1
return	строку содержащую имя ||| string	count=1
arg_pair	параметре plaintext текст ключами ||| string $plaintext	count=1
arg_pair	length элементов расположенных на ||| int $length	count=1
function_name	отправлены заголовки ||| headers sent	count=2
namespace	фильтров применяемых к нему ||| filteriterator	count=1
function_name	заголовка mime ||| iconv mime	count=1
function_name	название региона соответствующей страны ||| geoip region name	count=1
function_name	удаления из базы данных ||| delete	count=1
function_name	очищает буфер ||| clear	count=1
function	закрывает [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	настройки ||| set magic	count=1
function_name	объявляет атрибут ||| attribute	count=2
return	устанавливает в 1 ||| void	count=1
return	репозитория ||| array	count=1
arg_pair	вхождения строки ||| int $offset string $encoding	count=1
arg_pair	всю информацию ||| resource $image	count=1
function_name	возвращает id [function_name] строки либо ||| [function_name] insert	count=1
namespace	внутреннего объекта-итератора iterator ||| limititerator	count=1
arg_pair	возвращает строку экранированную обратными ||| string $str	count=1
function_name	возвращает цвет ||| get color	count=3
namespace	этот ||| imagick	count=1
function_name	кодировку ||| encoding	count=1
function_name	соответствующий полученному ряду ||| mysql fetch assoc	count=1
function_name	выполняет проверку синтаксиса производит ||| check	count=1
function_name	[function_name_1] вхождения подстроки ||| [function_name_2] [function_name_1]	count=4
function_name	максимальную [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	с value2 ||| mixed $value1	count=1
function_name	файла указанного в filename ||| check syntax	count=1
function_name	производит анимацию изображения ||| animate images	count=1
namespace	или большего ||| function	count=1
namespace	директорий опционально для конкретной ||| function	count=1
function_name	входных / выходных документов ||| tidy	count=1
function_name	работает аналогично методу memcached::append() ||| append by	count=1
function_name	[function_name_1] параметры для ||| [function_name_1] [function_name_2]	count=1
arg_pair	string на ||| string $string int $color	count=1
function_name	устанавливает параметры для ||| set params	count=2
namespace	запрос по ||| function	count=1
namespace	требуется и экранирует специальные ||| pdo	count=1
function_name	получение строкового представления [function_name_1] [function_name_2] соответствии ||| [function_name_2] [function_name_1]	count=2
arg_pair	пароль ||| string $new_password	count=1
arg_pair	объект object в ||| mixed $object string $class_name	count=1
function_name	наибольший общий делитель ||| gcd	count=1
function_name	в ||| similar text	count=2
function_name	которые есть ||| remove	count=1
function_name	последнем soap-ответе ||| last response	count=1
arg_pair	историю правок в ||| int $end_revision int $limit	count=1
function_name	указанный интерфейс или нет ||| implements interface	count=1
function_name	значение static [function_name] ||| get [function_name]	count=2
function_name	текущую версию ||| solr get version	count=1
return	конца строки ||| string	count=1
function_name	механизмов автоматического ||| detect	count=1
function_name	на первый атрибут ||| attribute	count=1
function_name	mime kopfzeile в примере ||| iconv mime	count=1
function_name	mh ||| curl	count=1
function_name	группы ||| getpgrp	count=1
namespace	код ||| function	count=1
function_name	ваши собственные обработчики протоколов ||| wrapper	count=1
function_name	algorithms by oliver isbn ||| text	count=1
function_name	[function_name_1] сущностей для ||| [function_name_2] [function_name_1]	count=4
return	массив содержащий записи из ||| array	count=1
arg_pair	другими http заголовками ||| int $expire	count=1
function_name	переменные ||| extract	count=1
function_name	конкретной ревизии ||| svn ls	count=1
return	задание или ||| bool	count=1
function	[function_name_1] строке haystack ||| [function_name_1] strpos [arg_pair_2]	count=1
function_name	обработчик неразобранных объявлений сущностей ||| set unparsed entity decl handler	count=1
arg_pair	memcached::replace() за исключением ||| int $expiration	count=1
function_name	атрибут в данной записи ||| attribute	count=1
return	возвращает массив c доступными ||| array	count=1
function_name	функция пытается [function_name_1] [function_name_2] способами: чтение настройки ||| [function_name_2] [function_name_1]	count=2
function_name	mime ||| mime	count=1
function_name	устанавливает параметры [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	функции crack_check() ||| opendict	count=1
function_name	узел ||| node	count=1
function_name	для session_start() ||| output reset rewrite vars	count=1
function_name	зарегистрированных потоков [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	проверку синтаксиса ||| string $filename	count=1
return	из ||| string	count=2
function_name	закачивает данные из дескриптора ||| nb fput	count=1
arg_pair	изменения информации сохранённой ||| array $tag	count=1
function_name	устанавливает значения [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	отправляет сообщение ||| string $message	count=1
return	implementing the ||| int	count=1
function_name	загружает xml ||| load xml	count=2
arg_pair	расстояние точки x y ||| float $x float $y	count=1
function_name	имя класса которое будет ||| file class	count=1
function_name	директорию на ||| ftp	count=1
function_name	[function_name] другом контейнере ||| [function_name]	count=1
arg_pair	центром в заданных координатах ||| int $cy	count=1
function_name	цвет ||| color as string	count=1
function_name	sql ||| pg	count=1
function_name	помощью sphinxclient::addquery получает и ||| run queries	count=1
function_name	и включая его и ||| strstr	count=1
function_name	находит первое вхождение ||| mb strstr	count=1
arg_pair	массивов с ||| array $array1	count=1
return	начиная с первого ||| string	count=1
function_name	значений [function_name] callback-функцию ||| [function_name]	count=1
arg_pair	[arg_pair] на ||| [arg_pair]	count=4
function_name	регистр при сравнении алфавитных ||| eregi	count=2
arg_pair	строки подходящим для драйвера ||| string $string	count=1
function_name	функциями как gettext() ||| bind textdomain codeset	count=1
namespace	с базой ||| pdo	count=1
function_name	sqlstate ошибки вызванной ||| mysqli stmt sqlstate	count=1
arg_pair	строку str буквенные ||| string $encoding	count=2
arg_pair	implementing the worlds ||| string $first string $second	count=1
function_name	выводит изображение ||| display image	count=1
function_name	расширенных атрибутов ||| xattr	count=1
function_name	столбца ||| column	count=2
arg_pair	файле browscap.ini ||| string $user_agent	count=1
arg_pair	локальный файл ||| resource $ftp_stream string $local_file	count=1
arg_pair	удаляет length элементов ||| int $length	count=1
function_name	объекта ||| spl object hash	count=1
function_name	указанный в ||| chdir	count=1
function_name	имя класса итератора ||| iterator class	count=4
function_name	ли ||| is	count=5
function_name	список файлов ||| ls	count=1
function_name	значение ||| array search	count=1
return	параметра ||| void	count=1
function_name	получено от сервера oracle ||| oci free statement	count=1
function_name	одну или ||| options	count=3
arg_pair	переменную php ||| int $type	count=1
namespace	классе указанный метод ||| reflectionclass	count=1
function_name	определения ||| order	count=1
arg_pair	haystack начиная с ||| string $haystack mixed $needle	count=1
arg_pair	для парсера ||| int $property bool $value	count=1
function_name	заменяет значения ||| array replace	count=1
namespace	включая его ||| function	count=1
return	строку применяя ||| string	count=1
function_name	algorithms by oliver isbn ||| similar	count=1
function_name	массива values в ||| array combine	count=1
function_name	по алгоритму ||| similar	count=1
function_name	строке subject все совпадения ||| preg match all	count=1
namespace	файлов и ||| function	count=1
arg_pair	алгоритму описанному в programming ||| string $first string $second	count=1
arg_pair	oliver isbn 0-131-00413-1 ||| string $first string $second	count=1
function_name	определения кодировок в ||| mb	count=1
function_name	операции ||| entries	count=1
function_name	параметры соединения [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	текущее активное значение настройки ||| set magic quotes runtime	count=1
function_name	возвращает последнюю ошибку связанную ||| eio get last error	count=1
arg_pair	возвращает ||| mixed $needle	count=1
function_name	получить ||| get	count=3
arg_pair	gz-файла по указателю на ||| resource $zp	count=1
function_name	у заданного узла потомки ||| children	count=1
arg_pair	генерирует yaml-представление ||| int $linebreak	count=1
function_name	проверяет может ли значение ||| is	count=1
arg_pair	implementing the worlds ||| string $second	count=1
namespace	режим автоматической фиксации до ||| pdo	count=1
function_name	текущую директорию на заданную ||| chdir	count=1
arg_pair	список файлов ||| int $revision_no	count=1
namespace	в кавычки ||| pdo	count=1
function_name	возвращает название региона соответствующей ||| name by	count=1
function_name	создает постоянное соединение ||| oci pconnect	count=1
function_name	временную зону и код ||| geoip time zone	count=1
arg_pair	совпадение с ||| string $pattern string $string	count=1
function_name	следующему ||| next	count=7
function_name	создает большой объект ||| pg lo	count=1
function_name	добавляет переданные в ||| unshift	count=1
function_name	массив ||| array	count=2
arg_pair	implementing the worlds best ||| string $first string $second	count=1
arg_pair	и сдвигает внутренний ||| resource $result string $class_name	count=1
function_name	значениях типа postgresql bytea ||| pg unescape bytea	count=1
function	закрывает файл [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
return	пустую строку ||| string	count=1
function_name	xml анализатора ||| xml	count=6
function_name	использовать в sql-запросе ||| escape string	count=1
function_name	кодировок в ||| mb detect	count=1
return	в виде строки ||| string	count=2
return	для ||| array	count=1
function_name	[function_name_1] ассоциированные с ||| [function_name_1] [function_name_2]	count=1
return	ли итератор ||| bool	count=1
function_name	возвращает максимальный объем памяти ||| get peak	count=1
function_name	magic.mime ||| mime content	count=1
function_name	буфер клиентскими библиотеками oracle ||| oci set	count=1
function_name	mime набора символов ||| mb preferred mime name	count=1
function_name	высоту изображения ||| image height	count=2
function_name	с каталогом ||| closedir	count=1
function	[function_name_1] из ||| [function_name_1] [arg_pair_2]	count=1
function_name	сериализует объект в ||| serialize	count=1
arg_pair	строки [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
namespace	неблокирующем ||| gearmanworker	count=1
function_name	создает постоянное соединение ||| pconnect	count=1
namespace	символы внутри строки ||| pdo	count=1
arg_pair	что аргументы формируют время ||| int $hour int $minute	count=1
function_name	версию версии id3-тега(тегов ||| version	count=1
return	репозитория и получает список ||| array	count=1
namespace	или каталогу данная функция ||| function	count=1
function_name	filename проверяя ошибки в ||| php check	count=1
arg_pair	в programming classics: implementing ||| string $first	count=1
function_name	директорий опционально для конкретной ||| svn	count=1
arg_pair	пикселах ||| float $size	count=1
function_name	окружения сервера apache ||| apache getenv	count=2
function_name	в заданном календаре calendar ||| cal to	count=1
function_name	механизмов автоматического определения ||| mb	count=1
arg_pair	проверяет определен ||| string $interface_name bool $autoload	count=1
function_name	в zip_entry ||| zip entry compressionmethod	count=1
function_name	временную зону [function_name] порядку ||| [function_name] timezone	count=1
function_name	класса объекты которого будут ||| set info class	count=1
function_name	последней вставленной ||| last	count=1
function_name	переданные ||| multi	count=1
return	[return] описанных в ||| [return]	count=1
arg_pair	указанную команду command и ||| string $command	count=1
arg_pair	base возводится ||| gmp $base gmp $exp	count=1
arg_pair	в системе счисления base ||| gmp $gmpnumber int $base	count=1
function_name	строке text шестнадцатеричными цифрами ||| ctype xdigit	count=1
namespace	активное значение ||| function	count=1
return	the worlds best algorithms ||| int	count=1
arg_pair	множественного числа ||| int $n	count=1
namespace	ошибки в ||| function	count=1
arg_pair	строку str буквенные ||| string $str	count=2
function_name	позицию указателя поля ||| field tell	count=1
return	обработчика ожидать ||| bool	count=1
arg_pair	флаг сохранять всю ||| resource $image	count=1
function_name	записывает данные ||| write	count=2
arg_pair	[arg_pair] что произвольный ||| [arg_pair]	count=1
function_name	в конец ||| append	count=1
arg_pair	неудачей если ключ key ||| string $key	count=1
function_name	возвращает высоту ||| get image height	count=1
function_name	механизмов ||| mb detect order	count=2
arg_pair	length элементов ||| int $length	count=1
function_name	предыдущей операции поиска ||| entries	count=1
arg_pair	историю ||| int $end_revision	count=1
namespace	к searchd ||| sphinxclient	count=1
function_name	[function_name_1] фоновую ||| [function_name_1] task [function_name_2]	count=1
function_name	загружен ли файл php.ini ||| php ini loaded file	count=1
function_name	настройки ||| set magic quotes	count=1
function_name	кодировок ||| detect order	count=2
return	функция [return] элементы ||| [return]	count=1
rest	позицию [function_2] ||| [function_2] [return_1]	count=2
function_name	к потоку ||| prepend	count=1
function_name	[function_name] функцией ||| [function_name]	count=3
arg_pair	по url адресу ||| int $revision_no	count=1
namespace	автоматического определения кодировок ||| function	count=1
function_name	базовых классов заданного класса ||| class parents	count=1
function_name	/ cosh ||| tanh	count=1
arg_pair	флаг ||| resource $image	count=1
arg_pair	число a ||| gmp $a	count=1
arg_pair	ранее дескриптора директории ||| resource $zip_entry	count=1
function_name	производит верификацию файла ||| check syntax	count=1
function_name	в результате предыдущей ||| entries	count=1
function_name	код любой ||| bzerrno	count=1
function_name	результате ||| ldap	count=1
arg_pair	implementing the worlds best ||| string $second	count=1
arg_pair	в пикселах ||| float $size	count=1
arg_pair	конфигурации ||| string $newvalue	count=1
arg_pair	имеет координаты 0 0 ||| resource $image int $x	count=1
function_name	заполняет ||| fill	count=1
function_name	адресу репозитория и получает ||| ls	count=1
arg_pair	накладывает случайный шум на ||| int $noise_type int $channel	count=1
function_name	и получает список файлов ||| ls	count=1
function_name	возвращает список методов в ||| get methods	count=1
function_name	в указанной базе ||| numrecords	count=1
namespace	определения кодировок в строках ||| function	count=1
function_name	существует или ||| exists	count=1
namespace	или код ||| function	count=1
return	и директорий ||| array	count=1
arg_pair	их в массиве ||| int $protocol	count=1
return	информации о расширении ||| reflectionextension	count=1
function_name	результате предыдущей ||| entries	count=1
return	и включая его и ||| string	count=1
function_name	получает ||| get record	count=2
function_name	высоту в виде ассоциативного ||| image geometry	count=1
namespace	транзакцию ||| pdo	count=1
function_name	производит ||| check syntax	count=2
function_name	[function_name_1] жанра ||| [function_name_2] [function_name_1]	count=1
arg_pair	слева справа или ||| int $pad_type	count=1
namespace	заданий gearman ||| gearmanworker	count=1
namespace	insert update или ||| function	count=2
return	/ вывода заставляет ||| bool	count=1
return	режиме ввода / ||| bool	count=1
function_name	список ошибок возникших при ||| stmt error list	count=1
function_name	данная функция вставляет ||| insert	count=1
arg_pair	параметре offset ||| int $offset	count=1
function_name	[function_name_1] apache ||| [function_name_2] [function_name_1]	count=6
function_name	сообщений во множественном числе ||| ngettext	count=1
arg_pair	по url ||| int $revision_no	count=1
function	обрезает строку [function_name_1] [arg_pair_2] width ||| [function_name_1] [arg_pair_2]	count=1
function_name	используя ||| md5 file	count=1
arg_pair	алгоритму ||| string $first	count=1
function_name	эта функция возвращает все ||| get	count=1
arg_pair	base возводится в степень ||| gmp $base gmp $exp	count=1
return	эта функция [return] элементы массива ||| [return]	count=1
function_name	возвращает ширину и высоту ||| get	count=1
function_name	производит верификацию ||| php check	count=1
arg_pair	str ||| string $option	count=1
arg_pair	аналогично memcached::add() за исключением ||| int $expiration	count=1
namespace	получение ||| cachingiterator	count=1
namespace	сообщает если узел ||| tidynode	count=1
arg_pair	возвратить [arg_pair] удалены все ||| [arg_pair]	count=1
arg_pair	строк ||| string $second	count=1
function_name	атрибут с ||| attribute ns	count=1
function_name	возвращает название региона соответствующей ||| geoip region name by	count=1
return	кавычки если требуется ||| string	count=1
arg_pair	вхождения search в subject ||| mixed $search mixed $replace	count=2
arg_pair	которое будет ||| string $value	count=1
function	заголовка mime [arg_pair_2] ||| [function_name_1] decode headers [arg_pair_2]	count=1
function_name	декодирует [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	x сервере ||| bool	count=1
return	транзакцию возвращая ||| bool	count=1
function_name	конкретной ревизии ||| ls	count=1
function_name	проверяя ||| php	count=1
function	большой объект [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=5
return	pdo::begintransaction() не ||| bool	count=1
function_name	соответствующих имени хоста ||| name	count=1
arg_pair	данная функция строит запрос ||| bool $peg	count=1
function_name	[function_name_1] пространстве ||| [function_name_2] [function_name_1]	count=1
function_name	distortion ||| get image channel distortions	count=1
arg_pair	потока или записываются ||| resource $out	count=1
function_name	большого объекта ||| pg lo	count=1
function_name	в базу данных ||| dbase	count=1
arg_pair	строки haystack начиная с ||| mixed $needle	count=1
function_name	с первого вхождения ||| strstr	count=1
return	recursivetreeiterator::valid() впервые вернет ||| void	count=1
return	задает текущее активное ||| bool	count=1
function_name	в виде объекта ||| object	count=1
function_name	и записывает ||| write temporary	count=1
function_name	oliver isbn 0-131-00413-1 ||| similar text	count=1
arg_pair	заданный фильтр filtertype к ||| resource $image int $filtertype	count=1
arg_pair	с value2 ||| mixed $value2	count=1
function_name	принимая во внимание кодировку ||| real	count=1
namespace	/ вывода ||| gearmanworker	count=1
return	на один элемент ||| mixed	count=1
function_name	функции ob_start() ||| handler	count=1
arg_pair	начало массива array ||| array $array	count=1
function_name	файла ||| php check syntax	count=2
return	хоста с ||| string	count=1
return	сохранять всю информацию ||| bool	count=1
function_name	об [function_name_2] ||| [function_name_1] [function_name_2]	count=2
namespace	всю информацию альфа компонента ||| function	count=1
return	требуется ||| string	count=1
namespace	впервые вернет false ||| recursiveiteratoriterator	count=1
function	[function_name_1] заданными свойствами ||| [arg_pair_2] [function_name_1]	count=1
function_name	постоянное соединение с ||| pconnect	count=1
arg_pair	filtertype к ||| int $filtertype	count=1
namespace	фиксирует ||| pdo	count=1
function_name	значение шрифта ||| font	count=1
arg_pair	gz-файл ||| string $string	count=1
arg_pair	возвращенный функцией ldap_get_dn() ||| string $dn int $with_attrib	count=1
return	предыдущей операции поиска ||| int	count=1
arg_pair	строк ||| string $first string $second	count=1
arg_pair	шаблоном pattern и помещает ||| string $pattern	count=1
return	с первого вхождения needle ||| string	count=1
arg_pair	лог web-сервера ||| string $destination string $extra_headers	count=1
function	содержит ли [arg_pair_2] ||| [function_name_1] subclass of [arg_pair_2]	count=3
arg_pair	возвращает строку input ||| string $input int $pad_length	count=1
function_name	функция преобразует число gmp ||| gmp	count=1
function_name	связанный ||| closedir	count=1
function_name	возвращает комментарий ||| get comment name	count=1
function_name	задает текущее активное значение ||| magic quotes	count=1
arg_pair	задает значение именованной ||| mixed $parameter mixed $value	count=1
return	обработчика ожидать задания ||| bool	count=1
return	проверяя ошибки в ||| bool	count=1
return	пока следующий вызов ||| bool	count=1
function_name	implementing the worlds ||| similar text	count=1
function_name	xml анализатора ||| xml set	count=4
arg_pair	и код региона ||| string $country_code string $region_code	count=1
function_name	устанавливает ||| set	count=22
function_name	при вызове функции gettext() ||| textdomain	count=1
function_name	класса объекты ||| info class	count=1
arg_pair	массив ||| array $args	count=1
return	объект ||| object	count=1
namespace	1.1.1970 либо [namespace] ||| [namespace]	count=1
namespace	переданный ||| function	count=1
function_name	в filename проверяя ||| check	count=1
function_name	квадратный корень из ||| sqrt	count=1
arg_pair	id3-теге данного файла ||| string $filename	count=1
arg_pair	url адресу ||| bool $recurse	count=1
arg_pair	в filename проверяя ||| string $filename	count=1
return	этот метод ||| bool	count=2
arg_pair	imagecolorallocate() или ||| resource $image int $color	count=1
arg_pair	возвращает строку содержащую ||| string $number	count=1
namespace	или delete ||| function	count=2
namespace	заставляет обработчика ожидать ||| gearmanworker	count=1
function_name	возвращает ||| stream get	count=1
arg_pair	домен domain для ||| string $msgid1	count=1
function	имен таблиц [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	character_set ||| client encoding	count=1
function_name	в массиве targets ||| commit	count=1
function_name	возвращает число столбцов затронутых ||| field count	count=1
function_name	ошибки в ||| php check	count=1
function_name	копирайт api imagemagick ||| copyright	count=1
function_name	возвращает ширину ||| get image	count=1
function_name	файл remote_file ||| fget	count=1
namespace	расширении ||| reflectionextension	count=1
arg_pair	programming ||| string $second	count=1
function_name	об ошибке ||| error	count=1
namespace	метод recursiveiteratoriterator::valid() ||| recursiveiteratoriterator	count=1
arg_pair	регулярному выражению в ||| string $option	count=1
function_name	переданный в последнем soap-запросе ||| last request	count=1
function	месяце month [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	устанавливает опцию указанную в ||| set option	count=1
arg_pair	переданного итератора iterator ||| iterator $iterator string $flags	count=1
arg_pair	файлов и директорий ||| string $repos_url int $revision_no	count=1
function_name	качестве ||| chdir	count=1
function_name	добавляет низкоприоритетную [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	указанного канала текущего объекта ||| color value	count=1
arg_pair	чисел a и ||| gmp $a gmp $b	count=1
function_name	получает список файлов ||| ls	count=1
function	сокета [arg_pair_2] ||| [function_name_1] set option [arg_pair_2]	count=1
function_name	by theirself ||| disable view	count=1
function_name	имён ||| namespace	count=1
function	задает cookie [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	аргументы в виде массива ||| array $args	count=1
arg_pair	с другими http заголовками ||| string $path	count=1
namespace	поведение arrayobject ||| arrayobject	count=1
arg_pair	в которых найдено совпадение ||| mixed $pattern	count=1
function_name	в bbcode_container ||| bbcode	count=1
function_name	pdf_arc() ||| pdf arcn	count=2
arg_pair	преобразует ||| string $string int $split_length	count=1
namespace	автоматического определения кодировок в ||| function	count=1
namespace	если он передан в ||| function	count=1
return	алгоритму описанному в programming ||| int	count=1
return	работе ||| bool	count=1
function_name	обработчик внешних сущностей для ||| set external entity ref handler	count=1
function_name	memcached::prepend() за исключением ||| prepend by	count=1
namespace	переводит число ||| function	count=1
arg_pair	указанного в ||| string $name int $base_group_id	count=1
function_name	от какого-либо ||| wait	count=1
return	value1 ||| int	count=1
function	[function_name_1] заданного ||| [function_name_1] [arg_pair_2]	count=2
function_name	xml анализатора parser ||| xml set unparsed	count=1
function_name	синтаксиса производит верификацию ||| check syntax	count=1
return	узел в строку применяя ||| string	count=1
function_name	если узел соответствует jste ||| jste	count=1
namespace	подключается к searchd ||| sphinxclient	count=1
function_name	возвращает ||| ldap	count=1
function_name	oliver isbn ||| text	count=1
arg_pair	строку в ||| string $string	count=1
arg_pair	центром в заданных ||| int $cy int $width	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] client [function_name_2]	count=1
arg_pair	текста в пикселах ||| float $size	count=1
function_name	генерацию фрагментов ||| build excerpts	count=2
namespace	и включая ||| function	count=1
return	строку в массив ||| array	count=1
function_name	ключам используя функцию ||| uksort	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] client [function_name_2]	count=1
arg_pair	дня заданного аргументом timestamp ||| int $timestamp int $format	count=2
namespace	завершиться удачно или ||| function	count=1
function_name	группы текущего процесса ||| posix getpgrp	count=2
function_name	получает код ошибки ||| get error code	count=1
arg_pair	именем localname текущего ||| string $localname	count=1
function_name	устанавливает буферизацию для ||| stream set write	count=1
return	в filename проверяя ошибки ||| bool	count=1
function_name	в результате предыдущей операции ||| ldap count	count=1
function_name	возвращает позицию первого ||| strpos	count=1
function_name	отключает буферизацию вывода ||| ob	count=1
function_name	предыдущему ||| prev	count=1
function_name	значение гравитации ||| gravity	count=1
function_name	указанного в ||| php check	count=1
function	возвращает размер [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
function_name	префикс пространства имен узла ||| lookup prefix	count=1
function_name	работы с другими задачами ||| task	count=3
function_name	метод возвращает ||| get	count=1
namespace	текущее активное значение ||| function	count=1
function_name	sqlstate ошибки вызванной в ||| sqlstate	count=1
function_name	формата utf-8 в ||| utf8	count=1
function	закрывает [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	возвращает число ||| resource $link_identifier	count=1
function_name	проверку синтаксиса производит верификацию ||| php check	count=1
arg_pair	и директорий опционально ||| string $repos_url int $revision_no	count=1
function_name	массива values в качестве ||| combine	count=1
function_name	алгоритму описанному ||| text	count=1
arg_pair	файлов и ||| string $repos_url int $revision_no	count=1
arg_pair	строку str буквенные символы ||| string $str string $encoding	count=2
arg_pair	функция принимает [arg_pair] добавляет ||| [arg_pair]	count=1
namespace	класс ||| reflectionclass	count=6
return	эта функция ||| mixed	count=1
arg_pair	fd ||| int $mode	count=1
function_name	читает большой объект и ||| pg lo read all	count=1
function_name	xbm изображения image ||| imagexbm	count=1
function_name	название указанного ||| name	count=1
arg_pair	value1 ||| mixed $value2	count=1
function_name	пространства имен ||| lookup namespace	count=1
function_name	curl ||| curl	count=7
return	номер ||| int	count=1
return	механизмов автоматического определения ||| mixed	count=1
return	ввод ||| bool	count=1
function_name	[function_name_1] mh ||| [function_name_2] [function_name_1]	count=6
return	кавычки если ||| string	count=1
function_name	параметры cookie [function_name_2] ||| [function_name_2] get [function_name_1]	count=1
function_name	targets в репозиторий ||| svn commit	count=1
arg_pair	файлов и директорий ||| string $repos_url	count=1
return	worlds ||| int	count=1
function_name	изображение ||| display image	count=1
arg_pair	файловый ||| string $open_mode	count=1
namespace	внутреннего указателя объекта ||| oci-lob	count=1
arg_pair	работает аналогично memcached::getdelayed() ||| callable $value_cb	count=1
arg_pair	classics: ||| string $first	count=1
function_name	проверяет является ли ||| is	count=1
function_name	выборки ||| pg fetch	count=1
function_name	этот метод производит анимацию ||| animate images	count=1
arg_pair	создает закрашенный многоугольник ||| int $num_points int $color	count=1
function_name	низкоприоритетную ||| low	count=1
return	строк ||| int	count=1
arg_pair	значение будет сохранено ||| mixed $value	count=1
arg_pair	строку экранированную обратными ||| string $str	count=1
function_name	разницу ||| diff uassoc	count=2
arg_pair	из ||| resource $link_identifier string $dn	count=1
function_name	клиентских библиотек svn ||| svn client	count=1
arg_pair	добавляет значение value с ||| mixed $value	count=1
arg_pair	рисует [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=5
function_name	обнаружить dn записи ||| ldap get dn	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] frame [function_name_2]	count=2
arg_pair	аргументы формируют время ||| int $hour int $minute	count=1
function_name	сервера к которому ||| server	count=1
arg_pair	помощью функции stream_socket_server() ||| float $timeout	count=1
function_name	на соответствие asp ||| is asp	count=1
function_name	следующую запись ||| zip	count=1
function_name	[function_name_1] с пространстве ||| [function_name_2] [function_name_1]	count=1
return	вернет false ||| void	count=2
function_name	установка ||| mb	count=1
function_name	возвращает список имен таблиц ||| mysql list tables	count=1
arg_pair	заданного файла в ||| resource $ftp_stream string $remote_file	count=1
function_name	записи из директории ldap ||| ldap delete	count=1
arg_pair	список ||| int $revision_no	count=1
function_name	[function_name_1] нескольких настроек ||| [function_name_1] [function_name_2]	count=1
function_name	код sqlstate ошибки вызванной ||| mysqli stmt sqlstate	count=1
function_name	если требуется ||| quote	count=1
arg_pair	получает список файлов ||| int $revision_no	count=1
function_name	[function_name_1] текущее качество ||| [function_name_2] [function_name_1]	count=1
function_name	двух ||| similar text	count=2
function_name	возвращает значение ||| get	count=1
function_name	сливает ||| array merge	count=1
function_name	список [function_name_2] ||| [function_name_1] [function_name_2]	count=3
function_name	ошибки ||| php check	count=1
arg_pair	для чтения ||| string $directory resource $context	count=1
function_name	кавычки ||| quote	count=1
namespace	который инициализирован первым элементом ||| function	count=1
function_name	активное значение настройки ||| magic quotes runtime	count=1
arg_pair	которых найдено совпадение ||| mixed $pattern	count=1
arg_pair	новое значение ||| int $color float $value	count=1
function_name	несколько случайных значений из ||| array rand	count=1
function_name	возвращает размер поля ||| field size	count=2
arg_pair	offset ||| string $key int $offset	count=1
arg_pair	timestamp ||| int $timestamp	count=2
function_name	задает текущее ||| set magic	count=1
arg_pair	функция принимает [arg_pair] ||| [arg_pair]	count=1
function_name	возвращает идентификатор ||| id3 get	count=1
arg_pair	результате ||| resource $link_identifier	count=1
arg_pair	value1 с ||| mixed $value1	count=1
namespace	адресу ||| function	count=1
function_name	__autoload ||| autoload	count=2
function_name	закрывает файл указанный в ||| eio close	count=1
function_name	с ||| oci fetch	count=1
return	сравнивает value1 с ||| int	count=1
function_name	функция возвращает название региона ||| geoip region name	count=1
arg_pair	fd ||| int $pri	count=1
namespace	результате ||| function	count=1
function_name	implementing the ||| similar	count=1
function_name	переводит число дней в ||| jdtofrench	count=1
arg_pair	данная функция ||| int $revision_no	count=1
function_name	обработчик внешних сущностей ||| external entity ref handler	count=1
return	до тех ||| bool	count=1
arg_pair	с ||| resource $large_object	count=1
arg_pair	записей сохраненных в результате ||| resource $result_identifier	count=1
arg_pair	search в ||| mixed $replace	count=2
arg_pair	открывает ||| string $filename string $mode	count=1
function_name	текущий элемент допустимым ||| valid	count=1
arg_pair	[arg_pair_1] представленное ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	worlds best ||| similar text	count=1
function_name	курсора ||| move to	count=1
return	возвращает массив ||| array	count=8
arg_pair	для ||| int $revision_no	count=1
function_name	пространстве имен namespaceuri ||| ns	count=1
namespace	каталогом и переданный ||| function	count=1
namespace	указанного ||| function	count=1
function_name	в результате предыдущей ||| ldap count	count=1
function_name	в ||| php check	count=2
function_name	подготовленного функциями [function_name] yaz_search() ||| [function_name]	count=1
function_name	получает числовой код ошибки ||| udm errno	count=1
namespace	пор пока следующий вызов ||| pdo	count=1
arg_pair	записываются в него ||| resource $out	count=1
function_name	как gettext() ||| bind textdomain codeset	count=1
function_name	sql-запросе в функции ||| escape string	count=1
namespace	классе указанный ||| reflectionclass	count=1
namespace	является ли ||| iteratoriterator	count=1
arg_pair	в programming classics: ||| string $first string $second	count=1
function_name	перемещает курсора к следующему ||| move to next	count=1
arg_pair	http заголовками ||| int $expire string $path	count=1
return	строку для ||| string	count=1
namespace	для объекта imagick ||| imagick	count=1
function_name	проверяет может ли ||| is	count=1
arg_pair	возвращает подстроку ||| string $haystack	count=1
namespace	расширения ||| reflectionextension	count=3
function_name	которой был преобразован в ||| lcfirst	count=1
namespace	информацию альфа компонента в ||| function	count=1
function_name	всю информацию ||| imagesavealpha	count=1
arg_pair	строку [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
function_name	дескриптор которого указан в ||| eio fchmod	count=1
namespace	число записей ||| function	count=1
namespace	для драйвера способом ||| pdo	count=1
function_name	функция преобразует число gmp ||| gmp intval	count=1
arg_pair	массива ||| int $size	count=1
arg_pair	unescaped_string ||| string $unescaped_string resource $link_identifier	count=1
arg_pair	буфера buf ||| int $len int $flags	count=1
arg_pair	региона ||| string $region_code	count=2
arg_pair	возвращает ||| resource $result	count=10
return	возвращает ассоциативный [return] информацию ||| [return]	count=1
return	многомерный [return] ||| [return]	count=3
rest	ищет позицию [function_2] ||| [function_2] [return_1]	count=2
function_name	определённых функций как ||| function	count=1
function_name	получает первый [function_name_2] ||| [function_name_1] [function_name_2]	count=4
function_name	или каталог - прим.пер.) ||| delete name	count=1
function_name	содержимое ||| from	count=2
function_name	объект object класса ||| construct	count=1
function_name	элементами с заданным локальным ||| tag name ns	count=1
function_name	задает имя класса которое ||| set file class	count=1
arg_pair	возвращает ее в виде ||| array $ctor_args	count=1
function_name	название страны соответствующий имени ||| name	count=1
function_name	включая его и до ||| strstr	count=1
namespace	в режим ||| pdo	count=1
function_name	добавляет ||| svn add	count=1
function_name	успеха возвращает значение настройки ||| ini get	count=1
namespace	времени если ||| function	count=1
namespace	0 внутреннего объекта-итератора iterator ||| limititerator	count=1
function_name	[function_name_1] последнем soap-запросе ||| [function_name_2] [function_name_1]	count=1
return	текущую директорию ||| bool	count=1
function_name	проверку синтаксиса ||| php check syntax	count=1
arg_pair	replacement необходимо указывать callback ||| mixed $pattern callable $callback	count=1
return	удаляет имя из ||| resource	count=1
function_name	сокета и сохраняет их ||| socket create pair	count=1
function_name	gettext() ||| bind textdomain codeset	count=2
function_name	частным private ||| private	count=1
function_name	[function_name_1] код статуса ||| [function_name_2] [function_name_1]	count=1
arg_pair	функцию предоставленную пользователем ||| callable $key_compare_func	count=1
function_name	символы внутри ||| quote	count=1
function_name	числовой код ||| udm errno	count=1
function_name	поля ||| pg field	count=1
function_name	[function_name] они ||| get elements [function_name]	count=2
function_name	файла указанного в ||| php check	count=1
function_name	ошибки ||| php	count=1
arg_pair	объект object в ||| string $class_name	count=1
function_name	последней командой ldap ||| ldap	count=1
function_name	добавляет дочерний ||| add child	count=2
function_name	активное значение ||| set magic quotes	count=1
function_name	[function_name_1] внутренний ||| [function_name_1] [function_name_2]	count=1
arg_pair	включая его ||| mixed $needle	count=1
function_name	[function_name] элементы двух ||| [function_name]	count=1
function_name	текущее ||| magic	count=1
function_name	объявляет атрибут с ||| set id attribute ns	count=1
namespace	репозитория и ||| function	count=1
function_name	gettext() ||| textdomain codeset	count=2
arg_pair	с центром в ||| int $width	count=1
function_name	к набору дескрипторов mh ||| curl multi	count=1
function_name	the ||| text	count=1
arg_pair	если требуется и экранирует ||| string $string	count=1
return	ошибки в ||| bool	count=1
return	функция определяет ||| string	count=1
arg_pair	вхождения строки needle ||| int $offset string $encoding	count=1
function_name	для механизмов ||| detect	count=1
namespace	wsdl ||| soapclient	count=1
function_name	функция преобразует число ||| intval	count=1
function_name	strcasecmp() за ||| strncasecmp	count=1
arg_pair	браузере в файле browscap.ini ||| string $user_agent	count=1
arg_pair	устанавливаются с помощью gearmanclient::setstatuscallback() ||| string $job_handle string $context	count=1
function_name	определения кодировок в строках ||| mb detect	count=1
arg_pair	дня заданного аргументом timestamp ||| int $timestamp	count=2
namespace	после ||| function	count=2
function_name	драйвера ||| quote	count=1
namespace	новый recursivecachingiterator который состоит ||| recursivecachingiterator	count=1
function_name	[function_name_1] смещение ||| [function_name_2] [function_name_1]	count=2
arg_pair	идентична функции ereg_replace() за ||| string $replacement	count=1
namespace	текущего файла ||| directoryiterator	count=1
function_name	использовать в sql-запросе в ||| escape string	count=1
function_name	объясняя ошибку ||| error	count=1
arg_pair	переопределить текущий домен domain ||| string $msgid1	count=1
namespace	кавычки если ||| pdo	count=1
arg_pair	by ||| string $first	count=1
function_name	после вызова mysqli_connect() ||| mysqli connect	count=1
function_name	набору дескрипторов [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] string $contents [arg_pair_2]	count=1
function_name	[function_name_1] оставшуюся часть ||| [function_name_2] [function_name_1]	count=1
function_name	формат utf-8 ||| utf16 to utf8	count=1
arg_pair	директорий опционально ||| string $repos_url	count=1
arg_pair	needle ||| string $haystack mixed $needle	count=1
function_name	с 4713 ||| juliantojd	count=1
arg_pair	массив содержащий значения ||| array $array2	count=2
function_name	функция вставляет ||| insert	count=1
return	базой данных в режим ||| bool	count=1
function_name	получает список ||| ls	count=1
arg_pair	историю правок в конкретном ||| int $limit	count=1
function_name	[function_name_1] ширину изображения ||| [function_name_2] [function_name_1]	count=1
return	gmp ||| int	count=1
function_name	проверяя ||| syntax	count=1
arg_pair	с ||| string $name	count=1
return	и до конца строки ||| string	count=1
function_name	страны и кода ||| code	count=1
function_name	функция [function_name] многомерный ||| [function_name] defined	count=1
arg_pair	возвращает ссылающийся на него ||| string $separator	count=1
function_name	указанными в параметре charlist ||| addcslashes	count=1
function_name	сущностей ||| unparsed entity	count=1
arg_pair	в противовес одноцветной прозрачности ||| bool $saveflag	count=1
namespace	функция преобразует ||| function	count=1
return	в режим ||| bool	count=1
function_name	возвращает значение гравитации изображения ||| get image gravity	count=1
function_name	текущее активное значение ||| magic quotes	count=1
function_name	атрибут в ||| attribute	count=3
function_name	сущностей для xml ||| xml set unparsed entity	count=1
function_name	имен ||| namespace	count=1
return	используемый для записи в ||| bool	count=1
function_name	url адресу ||| ls	count=1
arg_pair	преобразует дату юлианского ||| int $jd int $calendar	count=1
arg_pair	str по ||| int $start	count=1
namespace	в кавычки если ||| pdo	count=1
arg_pair	данные хранимые в участке ||| int $start	count=1
arg_pair	опционально для конкретной ревизии ||| string $repos_url	count=1
function_name	добавляет в конец ||| append	count=1
function	mime [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	использовать в других xml ||| xml	count=1
function_name	список файлов и ||| svn ls	count=1
arg_pair	параметре command ||| string $mode	count=1
function_name	правилами в bbcode_container ||| bbcode parse	count=1
function_name	в переданной строке text ||| ctype	count=8
function_name	в результате ||| entries	count=1
function_name	[function_name_1] дочерний ||| [function_name_2] [function_name_1]	count=1
function	расширенный атрибут [arg_pair_2] ||| [function_name_1] set [arg_pair_2]	count=1
return	php на указанный в ||| bool	count=1
function_name	получение содержимого кэша ||| get cache	count=1
function_name	конца ||| strstr	count=1
function_name	находит первое вхождение подстроки ||| mb strstr	count=1
return	[return] элементы ||| [return]	count=1
return	элемент ||| void	count=1
function	разделяет dn [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	текущее активное значение ||| runtime	count=1
function_name	http вывода ||| http output	count=1
return	для механизмов ||| mixed	count=1
function_name	с встроенным обработчиком ошибок ||| trigger error	count=1
function_name	в ||| syntax	count=2
function_name	sql-запросе в ||| escape	count=1
function_name	получает [function_name_2] ||| [function_name_1] error [function_name_2]	count=1
arg_pair	строит запрос ||| bool $recurse bool $peg	count=1
function_name	задает текущее активное ||| magic	count=1
return	выполняет проверку синтаксиса ||| bool	count=1
namespace	и директорий ||| function	count=1
function_name	интерфейсах ||| create listen	count=2
arg_pair	для драйвера ||| string $string	count=1
arg_pair	и возвращает ссылающийся ||| string $encoding string $separator	count=1
function_name	функцию ||| user func array	count=1
function_name	массива ||| array	count=1
function_name	из репозитория ||| svn	count=1
function_name	задает [function_name] по ||| set exception [function_name]	count=1
function_name	текущего ||| language	count=1
namespace	проверяя ||| function	count=1
function_name	текущего процесса ||| posix	count=6
function_name	класса ||| info class	count=1
function_name	репозитория ||| svn export	count=2
return	виде массива ||| mixed	count=1
function_name	для ||| svn ls	count=2
function_name	возвращает число столбцов затронутых ||| mysqli field count	count=1
arg_pair	строку и возвращает ее ||| string $class_name array $ctor_args	count=1
namespace	данный момент или нет ||| function	count=1
namespace	который инициализирован ||| function	count=1
arg_pair	в параметре command ||| string $mode	count=1
function_name	двух строк по алгоритму ||| text	count=1
function_name	записи одной колонки ||| all columns	count=1
arg_pair	имеет координаты 0 ||| resource $image int $x	count=1
function_name	календаря: с 4713 ||| juliantojd	count=1
arg_pair	in_charset в out_charset ||| string $in_charset	count=1
return	терминала связанного с ||| string	count=1
arg_pair	подстроку строки haystack ||| string $haystack	count=1
arg_pair	и включая его и ||| string $haystack mixed $needle	count=1
function_name	ob_start() ||| mb output handler	count=2
arg_pair	callback-функцией функции ob_start() ||| int $status	count=1
function_name	используя формат данных zlib ||| gzcompress	count=1
arg_pair	начиная с ||| string $haystack mixed $needle	count=1
function_name	записывает ||| write temporary	count=2
function	[function_name_1] года ||| [function_name_1] [arg_pair_2]	count=3
return	конкретной ||| array	count=1
function_name	в filename проверяя ошибки ||| check	count=1
return	запрос по url ||| array	count=1
arg_pair	url адресу репозитория и ||| bool $recurse	count=1
function_name	фильтр ||| stream filter register	count=2
function_name	устанавливает опцию указанную ||| set	count=1
function_name	так же как pdf_arc() ||| pdf arcn	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] parents [arg_pair_2]	count=1
function_name	сортировки и включает ||| sort	count=1
return	изменяет ||| bool	count=1
function_name	значение ||| quotes	count=1
function_name	календаре calendar ||| cal	count=1
arg_pair	массиве fd ||| int $protocol array $fd	count=1
function_name	список методов ||| methods	count=1
arg_pair	в programming classics: ||| string $first	count=1
arg_pair	включая его и ||| string $haystack	count=1
function_name	ошибки в ||| syntax	count=1
namespace	или провалом ||| function	count=1
function_name	объявленные ||| declared	count=1
namespace	занимаемые объектом коллекции ||| oci-collection	count=1
function_name	сокета и ||| socket	count=1
function_name	переданный в ||| closedir	count=1
function_name	результате предыдущей операции поиска ||| ldap count	count=1
function_name	закрытии потока ||| stream	count=1
return	до тех пор ||| bool	count=1
function	[function_name_1] региона соответствующей ||| [arg_pair_2] [function_name_1]	count=1
function_name	21 марта ||| days	count=1
arg_pair	репозитория ||| bool $recurse	count=1
arg_pair	the ||| string $first string $second	count=1
function_name	обычным файлом ||| file	count=1
function_name	время по гринвичу gmt ||| gmmktime	count=1
arg_pair	парсера ||| bool $value	count=1
arg_pair	прежде установлен с ||| resource $identifier	count=1
arg_pair	текст string ||| string $string	count=1
arg_pair	конца строки ||| string $haystack mixed $needle	count=1
arg_pair	и до ||| string $haystack mixed $needle	count=1
arg_pair	подходящим для ||| string $string	count=1
namespace	адресу репозитория ||| function	count=1
arg_pair	implementing the worlds best ||| string $first	count=1
arg_pair	по ||| int $revision_no	count=1
arg_pair	историю ||| int $end_revision int $limit	count=1
function_name	символы внутри строки ||| quote	count=1
function_name	в других xml функциях ||| xml parser create ns	count=1
arg_pair	участке разделяемой памяти ||| int $shmid int $start	count=1
namespace	worlds best ||| function	count=1
arg_pair	создает многоугольник ||| int $num_points int $color	count=1
namespace	xpath выражениях ||| domxpath	count=1
arg_pair	на ||| resource $handle int $mode	count=1
function_name	указанного календаря calendar ||| cal from	count=1
arg_pair	строку экранированную обратными ||| string $charlist	count=1
namespace	который инициализирован первым ||| function	count=1
arg_pair	assoc_array в приемлемые ||| resource $connection string $table_name	count=1
function_name	[function_name_1] для xml ||| [function_name_2] external [function_name_1]	count=1
function_name	эта ||| gmp intval	count=2
function_name	в результате предыдущей ||| ldap count entries	count=1
function_name	разбирает url и ||| parse	count=1
return	транзакцию возвращая соединение ||| bool	count=1
function_name	пользовательского класса ||| class	count=1
function_name	arg / cosh ||| tanh	count=1
return	фиксации до тех ||| bool	count=1
function_name	ключами columns столбцы ||| size	count=1
arg_pair	базы данных mysql ||| string $database resource $link_identifier	count=1
function_name	получает ||| get class	count=1
function_name	вставленной в таблицу ||| last	count=1
function_name	читает ||| read	count=1
function	наложения [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	верификацию файла указанного в ||| php	count=1
arg_pair	worlds best algorithms ||| string $second	count=1
arg_pair	совпадение ||| string $string	count=1
arg_pair	историю правок в ||| int $limit	count=1
function_name	вернет временную зону и ||| geoip time zone by country and	count=1
function_name	функция создает экземпляр ||| create text	count=1
namespace	идентификатор ||| function	count=4
function_name	в формате пар ключ-значение ||| status	count=1
function_name	зашифрованный и подписанный текст ||| gnupg encryptsign	count=1
arg_pair	ее ||| array $ctor_args	count=1
arg_pair	строки php ||| string $value	count=1
namespace	или массив ||| function	count=2
function_name	ревизии ||| svn	count=1
arg_pair	записи новое значение будет ||| mixed $value int $expiration	count=1
function_name	разбирает url и ||| parse url	count=1
function_name	альфа компонента в ||| imagesavealpha	count=1
function_name	einer mime kopfzeile в ||| iconv mime	count=1
function_name	определению в бинарном ||| database info	count=1
arg_pair	рисует прямоугольник с ||| int $color	count=1
function_name	установленную с помощью splfileobject::setmaxlinelen() ||| line len	count=1
namespace	возвращает ||| function	count=2
namespace	the worlds ||| function	count=1
function_name	соединения с ftp ||| ftp	count=1
return	всю информацию альфа ||| bool	count=1
return	запрос ||| array	count=1
arg_pair	которое будет передано ||| string $name string $value	count=1
function_name	записи для удаления ||| dbase delete	count=1
function_name	memcached::prepend() за ||| prepend	count=1
arg_pair	и директорий опционально для ||| int $revision_no	count=1
arg_pair	haystack начиная с ||| mixed $needle	count=1
function_name	репозитория ||| svn ls	count=2
arg_pair	начало массива ||| mixed $value1	count=1
function_name	текущий ||| chdir	count=1
function_name	число ||| entries	count=1
arg_pair	определенное ||| string $connection_string int $connect_type	count=1
function_name	параметры cookie ||| cookie params	count=2
function_name	с заданным локальным ||| tag name ns	count=1
arg_pair	y до начала ||| float $y	count=1
arg_pair	в числовые html-ссылки ||| bool $is_hex	count=1
function_name	преобразует число gmp ||| intval	count=1
arg_pair	всю информацию альфа компонента ||| resource $image	count=1
arg_pair	текущий домен domain для ||| string $msgid1	count=1
arg_pair	верификацию файла указанного ||| string $filename	count=1
return	если требуется и ||| string	count=1
function_name	заданного xml ||| xml	count=1
arg_pair	начиная с текущей ||| resource $large_object	count=1
function_name	позицию первого вхождения ||| stripos	count=1
function_name	файлов ||| files	count=1
namespace	/ получение текущего ||| function	count=1
arg_pair	аргументы формируют время по ||| int $minute	count=1
function_name	создает большой объект в ||| pg lo import	count=1
return	файлов и директорий ||| array	count=1
function_name	needle и ||| strstr	count=1
arg_pair	данным смещением ||| int $cutoff	count=1
arg_pair	описателем fd начиная с ||| mixed $fd	count=1
function_name	возвращает ||| socket get	count=1
function_name	устанавливает имя класса итератора ||| set iterator class	count=1
return	числовой код ошибки ||| int	count=1
namespace	качестве ||| function	count=2
function	[function_name_1] с именем ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	пространством имен ||| string $namespaceuri	count=1
function_name	других xml функциях ||| xml parser	count=1
function_name	вычисляет побитовое ||| gmp or	count=1
function_name	такими функциями как gettext() ||| bind textdomain	count=1
function_name	читает большой объект и ||| pg lo read	count=1
function_name	значение атрибута в пространстве ||| attribute	count=1
function_name	допустимым конечным ||| finite	count=1
function_name	zip_entry ||| zip entry compressionmethod	count=2
arg_pair	необходимо указывать callback -функцию ||| callable $callback	count=1
function_name	worlds best ||| similar	count=1
function_name	метод ||| animate images	count=2
function_name	устанавливает ||| set geo anchor	count=2
function_name	рабочей копии ||| svn	count=1
function_name	функция внутренней то есть ||| internal	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_2] [function_name_1]	count=535
function_name	для удаления из ||| dbase delete	count=1
namespace	возвращает подстроку строки haystack ||| function	count=1
arg_pair	функциями imagecolorallocate() или ||| resource $image int $color	count=1
namespace	фиксации до ||| pdo	count=1
function_name	название региона соответствующей страны ||| name	count=1
function_name	возвращает ||| get server info	count=1
return	recursiveiteratoriterator::valid() впервые ||| void	count=1
arg_pair	строку ||| string $key	count=1
function_name	опциональных ||| number of parameters	count=1
function_name	определения кодировок в строках ||| mb detect order	count=1
function_name	временную зону ||| geoip time zone	count=1
function_name	об ошибке в ||| error	count=1
function_name	для механизмов ||| order	count=1
arg_pair	того что новое значение ||| int $color float $value	count=1
function_name	по url ||| svn ls	count=1
return	но ||| array	count=1
function_name	юлианского календаря: с 4713 ||| juliantojd	count=1
arg_pair	filename ||| string $filename	count=2
namespace	публичных свойств arrayobject ||| arrayobject	count=1
function_name	директорию ||| ftp	count=1
namespace	кучи ||| splheap	count=1
return	имя файла ||| string	count=2
arg_pair	base ||| int $base	count=1
arg_pair	в определенной версии version ||| string $feature string $version	count=1
arg_pair	path ||| string $path	count=1
namespace	recursivecachingiterator ||| recursivecachingiterator	count=1
function_name	последний код возврата для ||| return code	count=1
return	удаляет ||| void	count=1
function	[function_name_1] регулярному выражению ||| [function_name_1] [arg_pair_2]	count=2
return	устанавливает флаг сохранять всю ||| bool	count=1
function_name	выполняет поиск соответствий ||| mb ereg search	count=1
function_name	изображения ||| image	count=13
function_name	добавляет setting ||| putenv	count=1
function_name	определения кодировок в ||| detect order	count=1
arg_pair	хранимые в участке разделяемой ||| int $start	count=1
function_name	соответствующей страны и кода ||| by code	count=1
namespace	вернет ||| recursiveiteratoriterator	count=1
return	value2 ||| int	count=1
arg_pair	находит первое вхождение ||| bool $before_needle	count=1
namespace	сравнивает ||| splheap	count=1
function_name	вернет временную зону ||| geoip time zone by	count=1
arg_pair	[arg_pair] asii-кодами ||| [arg_pair]	count=1
arg_pair	возвращает подстроку ||| string $haystack mixed $needle	count=1
function_name	значение ||| magic quotes	count=1
function_name	удаления ||| dbase delete	count=1
arg_pair	в указанных документах ||| array $values bool $mva	count=1
arg_pair	[arg_pair] ширине width ||| [arg_pair]	count=1
namespace	интервал ||| dateinterval	count=1
arg_pair	размером до maxlength ||| int $maxlength	count=1
arg_pair	отправляет в filename ||| mixed $data	count=1
arg_pair	находит первое вхождение подстроки ||| bool $before_needle string $encoding	count=1
arg_pair	функция возвращает копию массива ||| int $size	count=1
function_name	библиотеками oracle ||| oci set	count=1
function_name	[function_name_1] имен таблиц ||| [function_name_2] [function_name_1]	count=2
function_name	для xml анализатора ||| xml set unparsed	count=1
return	и сохраняет png изображение ||| bool	count=1
function_name	возвращает номер ошибки произошедшей ||| get last error	count=1
function_name	[function_name] каждого ||| [function_name]	count=1
function_name	летоисчислении ||| jdtofrench	count=1
return	возвращает значение ||| mixed	count=1
function_name	выполняет проверку ||| php check syntax	count=1
function_name	текст ||| gnupg	count=1
function_name	находит первое вхождение ||| strstr	count=1
function_name	число php integer ||| intval	count=1
arg_pair	сохраненных в ||| resource $link_identifier resource $result_identifier	count=1
function_name	индекс текущего ||| key	count=1
function_name	получает первый ||| first	count=1
arg_pair	были ли и куда ||| string $file int $line	count=1
function_name	эта функция подобна strcasecmp() ||| strncasecmp	count=1
return	информацию ||| bool	count=1
arg_pair	о клиенте для трассировки ||| resource $connection string $client_info	count=1
function_name	и включая ||| strstr	count=1
arg_pair	функция ||| gmp $a	count=1
function_name	верификацию ||| php check	count=1
function_name	для конкретной ||| ls	count=1
namespace	ли текущий элемент directoryiterator ||| directoryiterator	count=1
namespace	элементы одного или ||| function	count=1
return	в значение ||| mixed	count=1
function_name	[function_name_1] фоновую ||| [function_name_1] [function_name_2]	count=2
arg_pair	[arg_pair_1] number представленное ||| [arg_pair_1] [arg_pair_2]	count=2
arg_pair	ключ key уже ||| mixed $value	count=1
return	символы внутри ||| string	count=1
arg_pair	котором все вхождения search ||| mixed $replace	count=2
function_name	[function_name_1] с ftp ||| [function_name_2] [function_name_1]	count=7
arg_pair	файла ||| string $filename int $flags	count=1
function_name	в формат utf-16 ||| to utf16	count=1
function_name	данная ||| svn ls	count=2
arg_pair	файлов и директорий ||| bool $recurse	count=1
arg_pair	массиве fd ||| array $fd	count=1
function_name	ряду ||| mysql fetch	count=1
namespace	удачно или ||| function	count=1
arg_pair	создает закрашенный многоугольник ||| int $num_points	count=1
function_name	юлианском летоисчислении в ||| jdtofrench	count=1
arg_pair	добавляет пару [arg_pair] к механизму ||| [arg_pair]	count=1
function_name	собственный фильтр ||| stream filter register	count=1
function_name	запроса для базы ||| pg	count=1
function_name	задает имя класса которое ||| class	count=1
arg_pair	файлов и директорий ||| int $revision_no	count=1
function_name	автоматического определения ||| mb detect	count=1
namespace	метод производит анимацию изображения ||| imagick	count=1
arg_pair	подстрока needle встречается ||| string $haystack string $needle	count=1
function_name	открывает файл по ||| eio open	count=1
arg_pair	чисел a ||| gmp $b	count=1
return	true ||| bool	count=2
return	и клиентом ||| string	count=1
arg_pair	команду command и ||| string $command int $return_var	count=1
return	урезает файл дескриптор ||| resource	count=1
arg_pair	algorithms by ||| string $second	count=1
function_name	функция вернет временную зону ||| time zone	count=1
function_name	по умолчанию для ||| default	count=1
arg_pair	идентична функции ereg_replace() ||| string $replacement	count=1
function_name	php integer ||| gmp intval	count=1
arg_pair	года ||| int $month	count=1
function_name	[function_name_1] цвет объекта ||| [function_name_2] [function_name_1]	count=1
function_name	добавляет дочерний элемент к ||| add child	count=1
arg_pair	и директорий ||| string $repos_url	count=1
function_name	результате предыдущей ||| count	count=1
function_name	возвращает цвет объекта imagickpixel ||| get color	count=1
return	юлианском ||| string	count=1
return	выполняет проверку синтаксиса производит ||| bool	count=1
function_name	[function_name_1] методов ||| [function_name_1] [function_name_2]	count=1
function_name	или удалённом ||| images	count=1
function_name	получает записи ||| dbase get	count=1
function_name	ключевые слова из ||| build	count=1
function_name	строках ||| mb detect	count=1
return	специальные символы ||| string	count=1
function_name	одну или несколько ||| options	count=3
return	и ||| int	count=1
arg_pair	truetype текста [arg_pair_2] ||| [arg_pair_2] [arg_pair_1]	count=2
return	адресу репозитория и ||| array	count=1
function_name	каталог - прим.пер.) в ||| delete	count=2
namespace	начинает потоковое или ||| function	count=1
return	закрывает поток ||| void	count=1
arg_pair	выбранную область ||| int $height	count=1
arg_pair	строки haystack начиная ||| mixed $needle	count=1
return	по url адресу репозитория ||| array	count=1
function_name	обработчик неразобранных объявлений сущностей ||| unparsed entity decl handler	count=1
arg_pair	вывод в текстовом ||| resource $identifier int $armor	count=1
function_name	получает ||| get current	count=1
arg_pair	needle в строке haystack ||| string $haystack string $needle	count=2
return	текущего ||| mixed	count=1
return	заданий ||| bool	count=1
function_name	curl дескриптора в виде ||| curl	count=1
function_name	запрос по url ||| svn	count=1
function_name	устанавливает буферизацию для операций ||| set	count=1
namespace	до тех пор пока ||| pdo	count=1
function_name	возвращает e в степени ||| exp	count=1
function_name	родительский элемент ||| element	count=1
namespace	новый объект класса infiniteiterator ||| infiniteiterator	count=1
function_name	параметры [function_name_2] ||| [function_name_2] [function_name_1]	count=7
function_name	возвращает определение ||| meta data	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] set option [arg_pair_2]	count=2
return	работы ||| string	count=1
function_name	учетом текущих настроек локали ||| strftime	count=1
function_name	по ||| similar text	count=2
namespace	временем [namespace] timestamp не ||| [namespace]	count=1
function_name	в других xml ||| xml parser	count=1
function_name	[function_name_1] параметры cookie ||| [function_name_2] [function_name_1]	count=1
namespace	записи в ||| function	count=1
function_name	возвращает составной оператор связанный ||| get image compose	count=1
function_name	задает текущее активное ||| set magic	count=1
function_name	url ||| ls	count=1
arg_pair	classics: implementing the worlds ||| string $first string $second	count=1
return	удаляет ||| bool	count=1
namespace	файла указанного ||| function	count=1
function_name	[function_name_1] код ошибки ||| [function_name_1] [function_name_2]	count=1
function_name	выполняет проверку синтаксиса ||| php check	count=1
namespace	алгоритму описанному в ||| function	count=1
namespace	или датаграммный ||| function	count=1
function_name	текущее активное значение настройки ||| magic	count=1
return	в юлианском летоисчислении в ||| string	count=1
arg_pair	programming classics: ||| string $first string $second	count=1
namespace	начиная с ||| function	count=1
arg_pair	рисует прямоугольник ||| int $color	count=1
return	сохранение в ||| bool	count=1
arg_pair	конфигурации ||| string $varname	count=1
arg_pair	указанного в ||| string $filename	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] cookie [function_name_2]	count=1
namespace	этот метод ||| imagick	count=1
arg_pair	функция строит запрос по ||| bool $recurse bool $peg	count=1
namespace	возвращая соединение с базой ||| pdo	count=1
function_name	максимальную глубину ||| max depth	count=2
function_name	получает класс arrayiterator который ||| get array iterator	count=1
function_name	эта функция возвращает текущую ||| solr get	count=1
arg_pair	ссылающийся на ||| string $separator	count=1
arg_pair	аналогично memcached::get() за исключением ||| callable $cache_cb float $cas_token	count=1
return	экранирует ||| string	count=1
arg_pair	result аргумент callback ||| mixed $data	count=2
arg_pair	строки ||| int $offset	count=1
arg_pair	и до конца ||| string $haystack mixed $needle	count=1
function_name	эффектов наложения ||| imagelayereffect	count=1
arg_pair	возвращает число записей сохраненных ||| resource $link_identifier resource $result_identifier	count=1
arg_pair	историю правок в конкретном ||| int $end_revision	count=1
arg_pair	является callback-функцией функции ob_start() ||| string $contents int $status	count=1
return	опционально ||| array	count=1
return	для конкретной ||| array	count=1
function_name	value2 ||| compare	count=1
namespace	и включая его ||| function	count=1
namespace	производит верификацию файла указанного ||| function	count=1
arg_pair	by oliver ||| string $second	count=1
function_name	родительский элемент текущего ||| element	count=1
function_name	вернет временную зону и ||| time zone by	count=1
namespace	если seed не ||| function	count=1
function_name	дочерние ||| children	count=1
function_name	требуется и экранирует специальные ||| quote	count=1
function_name	строк по алгоритму ||| text	count=1
arg_pair	генерирует yaml-представление из данных ||| int $linebreak	count=1
arg_pair	значение именованной ||| mixed $parameter mixed $value	count=1
function_name	не безопасна для ||| strcoll	count=1
function_name	получено от сервера ||| statement	count=1
function_name	первый атрибут ||| first attribute	count=1
return	получает ||| array	count=1
function_name	параметры для ||| params	count=1
function_name	календаря calendar ||| cal	count=2
function_name	соединения в битах ||| connection status	count=1
function_name	получение ||| mb language	count=2
namespace	сохранять всю информацию ||| function	count=1
namespace	если ||| tidynode	count=1
arg_pair	коде ||| string $filename string $error_message	count=1
arg_pair	в programming classics: implementing ||| string $second	count=1
function_name	вычисляет побитовое и двух ||| and	count=1
return	сохраняет в ||| bool	count=1
arg_pair	и ||| string $haystack	count=2
arg_pair	значение находится между 0 ||| int $color float $value	count=1
function_name	инверсию остатка от деления ||| gmp invert	count=1
return	хранения дескриптора объекта ||| oci-lob	count=1
function_name	статуса ||| status	count=1
namespace	аргумента ||| reflectionparameter	count=3
function_name	режиме возвращая [function_name] который ||| [function_name]	count=1
function_name	механизмов автоматического ||| mb detect	count=1
function_name	сущностей для [function_name_2] ||| [function_name_2] external [function_name_1]	count=3
function_name	сортировки и включает сортировку ||| sort	count=1
namespace	searchd выполняет набор ||| sphinxclient	count=1
function_name	параметры для [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
function	записывает данные [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	возвращает предупреждения ||| get	count=1
namespace	список файлов и ||| function	count=1
namespace	таблицы стилей которые ||| xsltprocessor	count=1
function_name	обязательных так и опциональных ||| get number of parameters	count=1
return	пока следующий ||| bool	count=1
function	обрезает строку [function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	этот метод производит ||| animate	count=1
function_name	символьное имя ||| name	count=1
function_name	устанавливает ||| socket set	count=1
function_name	версию расширения в ||| version	count=1
arg_pair	описателем fd на ||| mixed $fd	count=1
function_name	число ||| count	count=2
function_name	результата запроса ||| fetch result	count=1
function_name	числитель дроби которая используется ||| task numerator	count=1
function	[function_name_1] для ||| [arg_pair_2] [function_name_1]	count=1
function_name	собственный фильтр ||| filter register	count=1
arg_pair	oliver isbn ||| string $first	count=1
function_name	настройки ||| magic	count=1
function_name	обработчик символьных данных для ||| character data handler	count=1
arg_pair	микросекундах ||| bool $more_entropy	count=1
function_name	предыдущей операции ||| ldap count	count=1
return	возвращает ассоциативный массив ||| array	count=1
function_name	число столбцов затронутых ||| count	count=1
function_name	http заголовков ответа ||| response headers	count=1
return	соединение с ||| bool	count=1
function	[function_name_1] файла ||| [function_name_1] set [arg_pair_2]	count=1
namespace	до конца ||| function	count=1
return	ревизии ||| array	count=1
function_name	порядковый номер поля ||| field num	count=1
rest	возвращает [function_2] ||| [function_2] [return_1]	count=1
arg_pair	число number представленное ||| int $frombase	count=1
arg_pair	value1 ||| mixed $value1 mixed $value2	count=1
function_name	итератора массива который ||| iterator	count=1
arg_pair	отправляет в filename ||| string $filename mixed $data	count=1
function_name	функция преобразует число gmp ||| intval	count=1
function_name	класса ||| set info class	count=1
function_name	пространства имен узла ||| namespace	count=1
namespace	isbn 0-131-00413-1 ||| function	count=1
return	сравнивает ||| int	count=1
function_name	автоматического определения ||| detect	count=1
function_name	активное значение настройки ||| quotes	count=1
arg_pair	сортирует массив ||| array $array	count=1
function_name	возвращает либо ||| get status	count=1
return	о расширении в ||| reflectionextension	count=1
function_name	в [function_name] ||| get [function_name]	count=1
namespace	если seed ||| function	count=1
function_name	utf-8 в ||| utf8	count=1
function_name	index ||| offset	count=1
function_name	григорианского календаря с 4714 ||| gregoriantojd	count=1
arg_pair	проверяя ошибки в коде ||| string $filename string $error_message	count=1
return	объект domnodelist со ||| domnodelist	count=1
function_name	очереди метода __autoload ||| autoload	count=1
function_name	вернет временную зону ||| time zone by country and	count=1
function_name	число php integer ||| gmp	count=1
function_name	в ||| count entries	count=2
function_name	указанного ||| check	count=1
function_name	проверяя ошибки в ||| check syntax	count=1
function_name	которого указан в ||| fchmod	count=1
function_name	метод recursivetreeiterator::valid() впервые вернет ||| end	count=1
function_name	delete ||| mysqli stmt affected rows	count=2
arg_pair	в микросекундах ||| bool $more_entropy	count=1
arg_pair	для конкретной ревизии ||| string $repos_url int $revision_no	count=1
arg_pair	заданного файла ||| resource $ftp_stream	count=1
arg_pair	является callback-функцией ||| int $status	count=1
arg_pair	применяет заданный фильтр filtertype ||| resource $image int $filtertype	count=1
arg_pair	строки подходящим для ||| string $string	count=1
arg_pair	новое значение будет ||| mixed $value int $expiration	count=1
function_name	указанного в ||| syntax	count=1
arg_pair	неразличимых ||| int $type	count=1
function_name	адресу репозитория и ||| ls	count=1
return	[return] атрибут ||| [return]	count=3
function_name	возвращает число столбцов ||| mysqli field count	count=1
function_name	возвращает текущую версию ||| solr get version	count=2
function_name	на ||| ftp chdir	count=2
return	качестве параметра ||| bool	count=1
function_name	опционально ||| svn ls	count=2
namespace	представляющий собой структуру данных ||| splheap	count=1
arg_pair	значение будет ||| mixed $value	count=1
function_name	oracle ||| oci set	count=2
function_name	записей ||| ldap count entries	count=2
function_name	возвращает ширину и ||| get	count=1
function_name	и конфликтующих зависимостей ||| dependencies	count=1
function_name	экранирует ||| quote	count=1
function_name	механизмов автоматического ||| mb detect order	count=1
function_name	записи из директории ldap ||| ldap	count=1
namespace	[namespace] использует ||| [namespace]	count=1
arg_pair	возвращает строку экранированную обратными ||| string $str string $charlist	count=1
function_name	следующую запись ||| read	count=1
function_name	[function_name_1] указанного контекста ||| [function_name_2] [function_name_1]	count=3
arg_pair	файла filename ||| int $options	count=1
function_name	для драйвера способом ||| quote	count=1
namespace	из начала очереди ||| splqueue	count=1
arg_pair	записей сохраненных в ||| resource $link_identifier resource $result_identifier	count=1
arg_pair	локальным именем localname текущего ||| string $namespaceuri string $localname	count=1
arg_pair	сервер задач к списку ||| int $port	count=1
function_name	by theirself замечание ||| disable view	count=1
function	21 марта [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function_name	обработчиком ошибок ||| error	count=1
function_name	устанавливает обработчик символьных данных ||| set character data handler	count=1
return	проверку синтаксиса производит верификацию ||| bool	count=1
arg_pair	в других функциях pspell ||| string $language string $spelling	count=1
function_name	текущее активное значение ||| set	count=1
function_name	атрибут с ||| id attribute	count=1
function_name	[function_name_1] файла ||| [function_name_2] [function_name_1]	count=2
namespace	строки haystack начиная ||| function	count=1
function_name	classics: ||| similar	count=1
arg_pair	str ||| string $str	count=2
function_name	результата запроса ||| fetch	count=2
arg_pair	заданного файла ||| resource $ftp_stream string $remote_file	count=1
function_name	в строке subject ||| preg match	count=1
function_name	подобна strcasecmp() ||| strncasecmp	count=1
function_name	для механизмов автоматического ||| mb	count=1
arg_pair	буфера buf ||| int $len	count=1
function_name	возвращает ширину ||| get image width	count=1
namespace	репозитория и получает ||| function	count=1
arg_pair	неразличимых ||| int $domain	count=1
namespace	сервере ||| imagick	count=1
arg_pair	его и ||| string $haystack	count=1
function_name	переводит число дней ||| jdtofrench	count=1
namespace	начиная ||| function	count=1
arg_pair	подстрока needle встречается в ||| string $needle	count=1
function_name	получение [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	задает имя класса ||| class	count=2
function_name	возвращает префикс пространства имен ||| lookup prefix	count=1
function_name	в формат utf-8 ||| pdf utf16 to utf8	count=1
arg_pair	из gz-файла по ||| resource $zp	count=1
function_name	имя таблицы ||| mysql tablename	count=1
function_name	возвращает все ||| get	count=1
function_name	classics: implementing the worlds ||| similar text	count=1
function	добавляет [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
arg_pair	path ||| string $url	count=1
function_name	представления [function_name] соответствии ||| [function_name]	count=1
function_name	ошибок ||| stmt error	count=1
return	isbn 0-131-00413-1 ||| int	count=1
function_name	информацию о таблице ||| list fields	count=1
function_name	записи для удаления из ||| dbase delete	count=1
arg_pair	региона соответствующей ||| string $country_code string $region_code	count=1
namespace	base64 или ||| function	count=1
return	синтаксиса ||| bool	count=1
function_name	использовать в sql-запросе в ||| escape	count=1
function	cookie [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=4
arg_pair	преобразует строку ||| int $split_length	count=1
arg_pair	меняет текущую директорию ||| string $directory	count=1
namespace	применяя таблицы стилей которые ||| xsltprocessor	count=1
return	флаг сохранять всю ||| bool	count=1
function_name	вернет временную зону и ||| geoip time zone by	count=1
function_name	[function_name_1] комментарий ||| [function_name_2] [function_name_1]	count=6
arg_pair	haystack начиная ||| mixed $needle	count=1
function_name	размер ||| ftp size	count=1
function_name	устанавливает новое значение по ||| offset set	count=1
return	isbn ||| int	count=1
function_name	в системе счисления tobase ||| base convert	count=1
arg_pair	с именем field_name в ||| resource $result string $field_name	count=1
function_name	[function_name_1] [function_name_2] num элементами со ||| [function_name_2] [function_name_1]	count=1
function_name	поиска ||| entries	count=1
function_name	при сравнении алфавитных символов ||| eregi	count=2
arg_pair	[arg_pair_1] string на ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	методов ||| methods	count=1
function_name	преобразует ||| gmp	count=1
namespace	на des [namespace] другого ||| [namespace]	count=1
arg_pair	именем localname для ||| string $namespaceuri string $localname	count=1
return	by oliver ||| int	count=1
return	массив array содержащий ||| array	count=1
namespace	следующую ||| function	count=1
function_name	определения ||| detect order	count=2
arg_pair	worlds best algorithms by ||| string $first string $second	count=1
function_name	при сравнении алфавитных ||| eregi replace	count=1
function_name	вызов статуса ||| add task status	count=1
return	список файлов ||| array	count=1
function_name	в sql-запросе в функции ||| escape	count=1
function_name	если атрибут не существует ||| get attribute	count=1
function_name	кодировку для входных / ||| encoding	count=1
function_name	анимацию ||| images	count=1
namespace	в режим автоматической ||| pdo	count=1
function_name	преобразование изображения с ||| image	count=1
function_name	копирования данных совершенных с ||| copy	count=1
function_name	[function_name] заданному цвету ||| [function_name]	count=1
return	кодировок в ||| mixed	count=1
function_name	формата utf-8 [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	получает числовой код ошибки ||| function	count=1
function_name	без вызова конструктора ||| new instance without constructor	count=1
arg_pair	с помощью ||| string $namespaceuri string $localname	count=1
function_name	файлов и директорий опционально ||| svn ls	count=1
function_name	текущее качество ||| quality	count=1
arg_pair	директорию на заданную ||| resource $ftp_stream	count=1
namespace	best algorithms by oliver ||| function	count=1
arg_pair	значение по указанному индексу ||| mixed $index mixed $newval	count=1
arg_pair	устанавливает режим подписывания ||| resource $identifier int $signmode	count=1
function_name	[function_name_1] список методов ||| [function_name_1] [function_name_2]	count=1
function_name	метод recursiveiteratoriterator::valid() ||| end	count=1
namespace	или удалённом ||| imagick	count=1
function_name	[function_name_1] ldap ||| function bool [function_name_2] [function_name_1]	count=1
arg_pair	ревизии ||| string $repos_url int $revision_no	count=1
function_name	последнего вхождения ||| strrpos	count=1
return	вхождения ||| mixed	count=2
namespace	до тех пор ||| pdo	count=1
arg_pair	json строку и преобразует ||| string $json	count=1
namespace	метод ||| imagick	count=1
function_name	cookie ||| setcookie	count=1
namespace	метод recursivetreeiterator::valid() впервые ||| recursivetreeiterator	count=1
function_name	в функции crack_check() ||| crack opendict	count=1
function_name	текущий узел php-кодом ||| php	count=1
arg_pair	записей сохраненных в результате ||| resource $link_identifier resource $result_identifier	count=1
namespace	объект итератора файловой системы ||| filesystemiterator	count=1
function_name	файла указанного ||| syntax	count=1
return	эта функция возвращает массив ||| array	count=3
function_name	[function_name_1] имя ||| [function_name_1] [function_name_2]	count=6
arg_pair	репозитория и получает список ||| int $revision_no	count=1
namespace	или бинарном ||| function	count=1
function_name	изображения с ||| image	count=1
return	и клиентом для некоторых ||| string	count=1
function_name	синтаксиса ||| php	count=1
namespace	текущий ||| function	count=1
function_name	группы ||| filegroup	count=1
function_name	превращает его в узел ||| dom import simplexml	count=1
arg_pair	противовес одноцветной прозрачности и ||| bool $saveflag	count=1
arg_pair	включая его и ||| mixed $needle	count=1
arg_pair	все вхождения search ||| mixed $replace	count=2
arg_pair	домен domain для одного ||| string $domain	count=2
function_name	выключает неявный сброс ||| ob implicit flush	count=1
function_name	домашний url библиотеки imagemagick ||| home url	count=1
function	[function_name_1] str ||| [arg_pair_2] [function_name_1]	count=4
function_name	mime kopfzeile в примере ||| iconv mime encode	count=1
function_name	формате xbm изображения image ||| imagexbm	count=1
arg_pair	и ||| mixed $needle	count=2
function_name	конкретной ||| svn ls	count=2
namespace	включая его и ||| function	count=1
arg_pair	аналогично memcached::add() за ||| int $expiration	count=1
function_name	theirself замечание : ||| disable view	count=1
arg_pair	на ||| resource $connection string $stmtname	count=1
arg_pair	параметре command ||| string $command	count=1
function_name	получает числовой код ||| errno	count=1
return	ассоциативный [return] ||| [return]	count=1
namespace	и до ||| function	count=1
arg_pair	включая ||| string $haystack	count=1
namespace	и получает список ||| function	count=1
function_name	генерацию ||| build	count=1
function_name	число столбцов затронутых последним ||| field count	count=1
function_name	верификацию файла указанного в ||| syntax	count=1
function_name	дней в юлианском ||| jdtofrench	count=1
function_name	будет ||| socket	count=1
function_name	сокета и сохраняет их ||| socket create	count=1
function_name	побитовое и двух ||| gmp and	count=1
arg_pair	path в рабочую ||| bool $recursive	count=1
arg_pair	algorithms by oliver ||| string $first string $second	count=1
function_name	subject все совпадения с ||| preg match	count=1
function_name	/ получение текущего ||| language	count=1
namespace	который ||| function	count=2
function_name	html содержащийся ||| load html	count=1
arg_pair	удаляет пробелы ||| string $character_mask	count=1
function_name	filename проверяя ошибки в ||| check syntax	count=1
function_name	возвращает атрибут в пространстве ||| get attribute	count=1
function	добавляет [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	результате предыдущей ||| function	count=1
arg_pair	функции ereg_replace() ||| string $pattern string $replacement	count=1
arg_pair	в участке ||| int $shmid int $start	count=1
function_name	неразобранных объявлений сущностей для ||| entity decl	count=1
function_name	с заданным локальным ||| by tag name ns	count=1
return	заставляет обработчика ожидать ||| bool	count=1
return	на указанный в ||| bool	count=1
function_name	возвращает внутренний итератор ||| get inner iterator	count=3
function_name	распакованную версию входных данных ||| gzdecode	count=1
arg_pair	вычисляет [arg_pair] ||| [arg_pair]	count=3
arg_pair	текст string ||| string $string int $color	count=1
function_name	выбирает базу данных ||| db query	count=1
arg_pair	worlds best algorithms by ||| string $second	count=1
function_name	автоматического определения кодировок ||| detect	count=1
arg_pair	в ||| string $string	count=1
function	данных postgresql [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	результате предыдущей ||| count entries	count=1
return	по алгоритму описанному в ||| int	count=1
function_name	файлов и ||| ls	count=1
function_name	устанавливает блокирующий ||| set blocking	count=1
function_name	символы в соответствющие html-сущности ||| htmlentities	count=1
function_name	текущий код ||| response code	count=1
arg_pair	отсчитываются с ||| string $c	count=1
function_name	функция возвращает название региона ||| geoip region name by	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] strpos [arg_pair_2]	count=3
function	возвращает размер [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=4
namespace	считывает следующую запись в ||| function	count=1
arg_pair	которое будет передано клиенту ||| string $name string $value	count=1
function_name	сохраняет png ||| imagesavealpha	count=1
function_name	другими задачами ||| task	count=3
return	с базой данных ||| bool	count=1
function_name	проверку ||| php check syntax	count=2
function_name	сбрасывает буфер вывода возвращая ||| flush	count=1
arg_pair	изображение ||| resource $image	count=1
namespace	строки подходящим для ||| pdo	count=1
namespace	установка / получение текущего ||| function	count=1
return	описанному в ||| int	count=1
return	зоны с помощью функции ||| string	count=1
function_name	если требуется и ||| quote	count=1
function_name	активное значение ||| quotes	count=1
namespace	фиксации ||| pdo	count=1
arg_pair	данных mysql ||| string $database resource $link_identifier	count=1
arg_pair	возвратить [arg_pair] удалены ||| [arg_pair]	count=1
function_name	[function_name_1] соответствующих имени ||| [function_name_2] [function_name_1]	count=1
arg_pair	требуется ||| string $string	count=1
namespace	php ||| function	count=2
arg_pair	файла ||| string $filename int $srcx	count=1
function_name	получает ||| fdf get	count=1
function_name	функция возвращает имена ||| get	count=1
function_name	значения массива values в ||| combine	count=1
arg_pair	указанного в filename проверяя ||| string $filename	count=1
arg_pair	для парсера ||| int $property	count=1
function_name	алгоритму ||| text	count=1
return	сохранение ||| bool	count=1
function_name	[function_name_1] комментарий ||| [function_name_1] [function_name_2] index int $index int	count=1
function_name	адресу репозитория ||| ls	count=1
arg_pair	первого вхождения needle ||| mixed $needle	count=1
namespace	нижний регистр если ||| function	count=1
function_name	в состав которого входит ||| extension	count=1
return	строки подходящим для ||| string	count=1
function_name	выбирает все строки ||| all	count=1
function_name	dn возвращенный ||| explode dn	count=1
arg_pair	список файлов и ||| string $repos_url int $revision_no	count=1
function_name	удалённом x сервере ||| images	count=1
function_name	код [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] mixed $class [arg_pair_2]	count=3
function_name	вхождения ||| iconv	count=1
function_name	возвращает ||| posix get	count=1
function_name	получает имя ||| get name	count=8
function_name	выбирает базу данных ||| mysql db	count=1
function_name	задает значения параметров string ||| mb	count=1
function_name	символ которой был преобразован ||| lcfirst	count=1
function_name	в строках ||| mb detect order	count=1
function_name	[function_name] xml ||| xml [function_name] into	count=2
function_name	ldap ||| ldap parse result	count=2
arg_pair	строкой replacement и возвращает ||| mixed $replacement	count=1
function_name	в ||| mb detect	count=1
return	связанный с каталогом ||| void	count=1
function_name	возвращает имена ||| get	count=1
arg_pair	опции для парсера ||| int $property bool $value	count=1
return	в результате предыдущей ||| int	count=1
arg_pair	и директорий опционально ||| string $repos_url	count=1
namespace	проверяет является ли итератор ||| iteratoriterator	count=1
function_name	и директорий опционально для ||| svn ls	count=1
arg_pair	файлов и ||| string $repos_url	count=1
arg_pair	строки needle ||| string $encoding	count=1
function_name	низким приоритетом задачу ||| low	count=1
function_name	сервере ||| animate	count=1
function_name	записи для удаления из ||| delete	count=1
function_name	вернет временную зону и ||| time zone by country and	count=1
function_name	переводит ||| jdtofrench	count=1
arg_pair	задает значение ||| mixed $value	count=1
function	датаграммный сокет [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	получает ||| pg get	count=1
return	всю информацию ||| bool	count=1
function_name	синтаксиса производит ||| check	count=1
function_name	возвращает название региона соответствующей ||| region name by	count=1
function_name	соответствует jste ||| jste	count=1
arg_pair	список ||| string $repos_url	count=1
function_name	это не внутренняя ||| user defined	count=1
namespace	или другие символы ||| function	count=1
function_name	результате предыдущей операции поиска ||| count entries	count=1
return	в качестве параметра directory ||| bool	count=1
function_name	репозитория в ||| svn export	count=1
return	параметра directory ||| bool	count=1
arg_pair	или записываются ||| resource $out	count=1
function_name	возвращает подстроку строки haystack ||| strstr	count=1
function_name	recursiveiteratoriterator::valid() впервые вернет false ||| end	count=1
function_name	классы ||| classes	count=1
function_name	закрывает ||| entry close	count=1
namespace	подстроку строки haystack начиная ||| function	count=1
function_name	the worlds best algorithms ||| similar	count=1
arg_pair	центром в заданных координатах ||| int $width	count=1
arg_pair	список ||| string $repos_url int $revision_no	count=1
arg_pair	и получает список ||| int $revision_no	count=1
return	/ вывода ||| bool	count=1
function_name	ftp-сервером ||| ftp	count=1
function_name	geoip в виде ||| geoip	count=1
function_name	хэшированную ||| crypt	count=1
namespace	в programming classics: ||| function	count=1
arg_pair	системе счисления base ||| int $base	count=1
namespace	ревизии ||| function	count=1
arg_pair	указанную в group ||| mixed $group	count=1
function_name	удалённый файл с ftp-сервера ||| ftp nb	count=1
function_name	id [function_name] ||| [function_name] insert	count=1
function_name	указанного ||| php check syntax	count=2
arg_pair	strcmp() за исключением того ||| string $str1 string $str2	count=1
function_name	выполняет ||| check syntax	count=2
arg_pair	value2 ||| mixed $value1 mixed $value2	count=1
return	опционально для ||| array	count=1
arg_pair	данная функция ||| string $repos_url	count=1
function_name	поля ||| mysqli field	count=1
arg_pair	пытается возвратить [arg_pair] удалены все ||| [arg_pair]	count=1
return	с ресурсом ||| string	count=2
function	которого указан [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	с пространстве имен namespaceuri ||| ns	count=1
namespace	одним или несколькими ||| function	count=1
function_name	глубины ||| depth	count=1
function_name	пытается [function_name] временную ||| date default timezone [function_name]	count=1
function_name	ошибке ||| error	count=1
function	содержит ли [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
function	вставляет [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	этот метод производит анимацию ||| bool	count=1
arg_pair	строки haystack начиная ||| string $haystack mixed $needle	count=1
function_name	текущее ||| set magic quotes runtime	count=2
arg_pair	значение будет сохранено только ||| mixed $value int $expiration	count=1
namespace	если узел ||| tidynode	count=1
arg_pair	обычный файл ||| int $major int $minor	count=1
function_name	ip_address ||| gethostbyaddr	count=1
namespace	domelement ||| domelement	count=1
function_name	опционально для конкретной ||| svn	count=1
function_name	отправлены то http_response_code получит [function_name_1] [function_name_2] ||| [function_name_1] [function_name_2]	count=2
arg_pair	массив содержащий все ||| array $array1 array $array2	count=1
function_name	передает ему ||| invoke args	count=1
function_name	в результате ||| ldap count entries	count=1
arg_pair	и ||| string $repos_url int $revision_no	count=2
return	этот метод производит ||| bool	count=1
function_name	для механизмов автоматического определения ||| order	count=1
function_name	качестве параметра ||| chdir	count=1
function_name	число php ||| gmp intval	count=1
function_name	загружает файл remote_file с ||| ftp fget	count=1
return	url адресу ||| array	count=1
function_name	завершает сеанс curl ||| curl	count=1
function_name	принятия пакетов данных ||| client	count=1
arg_pair	начиная с ||| resource $large_object	count=1
arg_pair	by oliver ||| string $first	count=1
function_name	php функции ||| register php functions	count=1
function_name	dsn -параметре pdo::__construct() ||| available drivers	count=1
function_name	вернет временную зону и ||| time zone	count=1
function_name	указанного в filename ||| syntax	count=1
function_name	значение ||| offset	count=1
arg_pair	class ||| mixed $class bool $autoload	count=1
arg_pair	в programming ||| string $second	count=1
namespace	достигнут конец файла ||| splfileobject	count=2
namespace	запрос от сервера заданий ||| gearmanworker	count=1
arg_pair	с именем field_name ||| resource $result string $field_name	count=1
arg_pair	по ||| bool $recurse	count=1
namespace	подходящим для драйвера способом ||| pdo	count=1
arg_pair	needle ||| mixed $needle	count=1
return	репозитория и ||| array	count=1
function	строки string [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	директорию на ||| resource $ftp_stream	count=1
arg_pair	filtertype к изображению image ||| int $filtertype	count=1
namespace	данный момент или ||| function	count=1
function_name	ключ ||| key	count=1
namespace	текущего времени если аргумент ||| function	count=1
return	фиксирует транзакцию ||| bool	count=1
function_name	данный метод выводит изображение ||| display image	count=1
function_name	values в качестве соответствующих ||| array combine	count=1
function_name	utf-8 в ||| pdf utf8	count=1
function_name	производит ||| syntax	count=1
namespace	является ||| function	count=1
function_name	эта функция возвращает значение ||| get	count=1
arg_pair	возвращает ||| int $julianday	count=2
function_name	получает флаги ||| get flags	count=2
namespace	могла завершиться удачно или ||| function	count=1
return	получение содержимого ||| array	count=1
function_name	результате ||| ldap count	count=1
function_name	[function_name_1] для xml ||| [function_name_2] [function_name_1]	count=1
arg_pair	возвращает информацию ||| string $path	count=2
arg_pair	новое значение находится ||| int $color float $value	count=1
function_name	0-131-00413-1 ||| similar	count=1
function	[function_name_1] [arg_pair_2] ||| [function_name_1] subclass of [arg_pair_2]	count=9
arg_pair	записи новое значение ||| mixed $value int $expiration	count=1
function_name	открытым ресурсом потока ||| stream	count=1
arg_pair	код региона соответствующей ||| string $region_code	count=1
function_name	устанавливает буферизацию для ||| stream set	count=1
function_name	кэша ||| get cache	count=1
function_name	формат utf-16 ||| to utf16	count=1
arg_pair	центром ||| int $cy int $width	count=1
arg_pair	возвращает строку str ||| string $str string $encoding	count=2
function_name	изображения в ||| image	count=2
function_name	массиве targets в ||| svn commit	count=1
arg_pair	конкретной ревизии ||| int $revision_no	count=1
return	функция преобразует ||| int	count=1
function_name	список всех используемых обработчиков ||| list handlers	count=1
function_name	в ||| detect order	count=2
function_name	каталог - прим.пер.) ||| delete	count=2
namespace	или ||| imagick	count=1
arg_pair	и директорий опционально для ||| bool $recurse	count=1
arg_pair	аналогично memcached::replace() за ||| int $expiration	count=1
return	урезает файл дескриптор которого ||| resource	count=1
function_name	задает настройки ||| set flags	count=2
namespace	режим ||| pdo	count=1
function_name	[function_name_1] методов в ||| [function_name_2] [function_name_1]	count=1
namespace	arrayobject преобразует в ||| arrayobject	count=1
function_name	[function_name] recursiveiteratoriterator на ||| [function_name]	count=1
function_name	выполняющейся ||| job handle	count=1
function_name	метод ||| end	count=2
function_name	имя класса ||| set file class	count=1
arg_pair	число a ||| gmp $b	count=1
return	число дней ||| string	count=1
function_name	по url адресу ||| svn	count=1
namespace	десериализует [namespace] из строкового ||| [namespace]	count=1
function_name	проверку ||| php check	count=1
arg_pair	если ||| string $string	count=1
function_name	функция возвращает текущую версию ||| solr get version	count=1
function_name	механизмов автоматического определения ||| mb detect order	count=1
function_name	задает cookie ||| setcookie	count=1
arg_pair	сохраненных в результате предыдущей ||| resource $result_identifier	count=1
function_name	преобразует символы строки string ||| mb	count=1
arg_pair	указанных документах ||| bool $mva	count=1
return	вывода заставляет обработчика ожидать ||| bool	count=1
namespace	с одним или ||| function	count=1
function_name	загружает файл remote_file ||| fget	count=1
namespace	работе ||| gearmanworker	count=1
function_name	по умолчанию через сокет ||| socket shutdown	count=1
function_name	или случайным числом ||| mt srand	count=1
function_name	в строках ||| order	count=1
return	адресу репозитория ||| array	count=1
function_name	позволяет переопределить текущий ||| dgettext	count=1
function_name	targets в репозиторий с ||| svn commit	count=1
namespace	состоянии задания ||| gearmanclient	count=1
return	считывает следующую ||| resource	count=1
function_name	значения массива values ||| combine	count=1
function_name	других xml ||| xml parser create ns	count=1
return	указанную ||| string	count=1
function_name	implementing the worlds best ||| text	count=1
function_name	заданным локальным ||| elements by tag name ns	count=1
function_name	year [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	[function_name_1] параметры cookie ||| [function_name_1] [function_name_2]	count=1
function_name	вернет временную зону ||| time zone by	count=1
function_name	by ||| similar	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] genre [function_name_2]	count=1
function_name	заданную аргументом ||| chdir	count=1
return	автоматической фиксации до тех ||| bool	count=1
arg_pair	устанавливает режим error_reporting ||| int $errormode	count=1
return	needle ||| string	count=1
return	сообщает если ||| bool	count=1
function_name	возвращает все имеющиеся ||| get	count=1
arg_pair	с шаблоном pattern и ||| string $pattern string $subject	count=1
arg_pair	если требуется и ||| string $string	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] genre [function_name_2]	count=1
function_name	и сервером postgresql ||| pg	count=1
return	с указателем на ||| string	count=1
function_name	котором ||| by tag	count=1
function_name	возвращает предупреждения и ||| tidy get	count=1
namespace	тех ||| pdo	count=1
function_name	[function_name_1] версию клиента ||| [function_name_2] [function_name_1]	count=1
return	значение ||| mixed	count=6
function_name	из заданного класса ||| class	count=1
function_name	между 21 марта ||| days	count=1
function_name	[function_name] который ||| [function_name]	count=1
function_name	gnupg_setsignmode ||| gnupg sign	count=2
namespace	если поддерживается ||| function	count=1
function	сокет [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
namespace	classics: implementing the worlds ||| function	count=1
function_name	содержимое в виде ||| get	count=1
arg_pair	memcached::set() за ||| int $expiration	count=1
function_name	закрывает ||| pdf close	count=1
namespace	добавляет setting ||| function	count=1
arg_pair	конкретной ||| int $revision_no	count=1
arg_pair	строкой replacement и ||| mixed $replacement	count=1
arg_pair	ключам и значениям массива ||| array $assoc_array	count=1
function_name	состоянии буфера вывода верхнего ||| ob	count=1
function_name	classics: ||| similar text	count=2
function_name	французского республиканского ||| frenchtojd	count=1
arg_pair	результате предыдущей операции ||| resource $link_identifier	count=1
function_name	последний возвращённый код gearman ||| return code	count=1
arg_pair	ли и куда ||| int $line	count=1
function_name	окончательным final ||| final	count=1
arg_pair	счисления base ||| int $base	count=1
function_name	с value2 ||| compare	count=1
function_name	битовую маску модификаторов для ||| modifiers	count=1
function_name	dn возвращенный ||| dn	count=1
namespace	поток ||| function	count=1
arg_pair	конфигурации ||| string $varname string $newvalue	count=1
function_name	xml ||| xml set unparsed	count=1
function_name	верхнем регистре ||| upper	count=1
function_name	создает экземпляр класса ||| create	count=1
function_name	изображение ||| add noise image	count=1
function_name	код страны соответствующий имени ||| code by name	count=1
arg_pair	search в subject ||| mixed $replace	count=2
function_name	удаляет файл ||| delete	count=2
function_name	[function_name] они встречаются ||| get elements [function_name]	count=2
arg_pair	length ||| int $length	count=1
function_name	обработчик по умолчанию для ||| set default handler	count=1
arg_pair	участке разделяемой памяти ||| int $shmid	count=1
function_name	поддерево корнем которого является ||| entry	count=1
arg_pair	создает многоугольник ||| int $num_points	count=1
function_name	xml функциях ||| xml	count=1
function_name	gd2 ||| imagecreatefromgd2part	count=1
function_name	синтаксиса производит верификацию ||| check	count=1
arg_pair	filtertype ||| int $filtertype	count=1
return	кавычки если требуется и ||| string	count=1
arg_pair	возвращает подстроку строки haystack ||| string $haystack	count=1
return	закрывает дескриптор используемый ||| bool	count=1
function_name	настройки ||| ini	count=1
namespace	указанного в ||| function	count=1
function_name	в ||| order	count=1
arg_pair	png [arg_pair] ||| [arg_pair]	count=1
function_name	возвращает данные ||| get	count=1
arg_pair	подобна strcmp() ||| string $str1 string $str2	count=1
function_name	начало существующей ||| prepend	count=1
arg_pair	строке с данными ||| string $data	count=1
arg_pair	репозитория ||| string $repos_url	count=1
arg_pair	список файлов ||| string $repos_url int $revision_no	count=1
function_name	потомков ||| child nodes	count=1
function_name	директории заданного в zip_entry ||| entry compressionmethod	count=1
function_name	теми же правилами что ||| stream resolve include path	count=1
arg_pair	заключает строку ||| string $string int $parameter_type	count=1
function_name	query без автоматической обработки ||| unbuffered query	count=1
arg_pair	class ||| bool $autoload	count=1
function_name	функция возвращает ||| get all info	count=1
arg_pair	и ||| int $year	count=1
arg_pair	algorithms by oliver ||| string $second	count=1
arg_pair	создает многоугольник в изображении ||| int $color	count=1
function_name	к [function_name] элемент directoryiterator ||| [function_name]	count=1
function_name	документируемый [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	список ||| list	count=2
arg_pair	вхождения search в ||| mixed $search mixed $replace	count=2
function_name	ошибок ||| error	count=3
function_name	разбирает url и возвращает ||| parse	count=1
function_name	пространстве имен ||| in namespace	count=1
function	[function_name_1] class ||| [function_name_1] parents [arg_pair_2]	count=1
arg_pair	директории ||| resource $zip_entry int $length	count=1
namespace	опционально для конкретной ревизии ||| function	count=1
function_name	не начнет новую транзакцию ||| commit	count=1
return	ли ||| bool	count=1
function_name	следующей строки ||| fetch	count=1
function_name	календаря calendar ||| cal from	count=1
namespace	автоматического определения ||| function	count=1
arg_pair	увеличивает числовое ||| int $initial_value int $expiry	count=1
function_name	запрос ||| ls	count=1
namespace	способом ||| pdo	count=1
arg_pair	в базе данных ||| resource $connection	count=2
arg_pair	изменения информации сохранённой в ||| string $filename array $tag	count=1
arg_pair	в строку ||| string $haystack	count=3
arg_pair	получает список файлов и ||| bool $recurse	count=1
arg_pair	нацело числа ||| gmp $n	count=1
arg_pair	и получает список ||| string $repos_url int $revision_no	count=1
return	с первого вхождения ||| string	count=1
return	используя ||| string	count=2
function_name	включая его и ||| strstr	count=1
function_name	впервые вернет ||| end	count=2
return	и ||| array	count=2
function_name	значение настройки ||| set	count=1
function_name	возвращает ассоциативный ||| assoc	count=1
namespace	параметра directory ||| function	count=1
arg_pair	с ||| resource $connection	count=1
arg_pair	объект object ||| string $class_name	count=1
function_name	utf-8 и возвращает закодированный ||| utf8	count=1
arg_pair	браузере в файле browscap.ini ||| bool $return_array	count=1
function_name	[function_name_1] [function_name_2] ||| [function_name_1] image [function_name_2]	count=7
return	и локальным ||| void	count=1
function_name	ldap ||| ldap parse	count=1
function_name	функция преобразует число ||| gmp intval	count=1
namespace	удалённом x ||| imagick	count=1
function_name	при ||| eio	count=1
arg_pair	репозитория ||| int $revision_no	count=1
namespace	возвращает число ||| function	count=1
function_name	файла указанного ||| php	count=1
function_name	в programming classics: ||| similar text	count=1
arg_pair	mysql ||| resource $link_identifier	count=1
function_name	проверяет является ли ||| oci field is	count=1
namespace	описанному ||| function	count=1
function_name	возвращает текущую ||| solr get	count=2
function_name	preg_replace() за исключением того ||| preg	count=1
namespace	экранирует специальные ||| pdo	count=1
function_name	функция вернет временную зону ||| time zone by country	count=1
function_name	переданный [function_name] ключами установленными ||| [function_name]	count=1
return	пор пока ||| bool	count=1
arg_pair	path в рабочую копию ||| bool $recursive	count=1
arg_pair	the worlds best ||| string $first	count=1
arg_pair	подстроку строки haystack начиная ||| string $haystack	count=1
function_name	декодирует несколько ||| decode headers	count=1
function_name	haystack начиная с ||| strstr	count=1
function_name	внутренней то ||| internal	count=1
arg_pair	массива ||| mixed $value1	count=1
function_name	в виде узла ||| node ns	count=1
return	его и ||| string	count=1
function_name	в результате предыдущей операции ||| count entries	count=1
function_name	них выведут эти данные ||| ping	count=1
function_name	вычитает ||| gmp sub	count=2
function_name	для удаления id3-тега ||| id3 remove tag	count=1
namespace	требуется и экранирует ||| pdo	count=1
function_name	начиная с ||| strstr	count=1
function_name	the worlds ||| text	count=1
function_name	формате отметки времени unix ||| mtime	count=1
arg_pair	и включая его ||| string $haystack	count=1
namespace	изменения текущего элемента directoryiterator ||| directoryiterator	count=1
return	строки и ||| string	count=1
namespace	потоковый или ||| function	count=1
function_name	вычисляет наибольший общий делитель ||| gcd	count=1
arg_pair	возвращает массив содержащий все ||| array $array1	count=1
namespace	числовой код ||| function	count=1
function_name	[function_name_1] __autoload ||| [function_name_1] [function_name_2]	count=2
namespace	вызывает отображенный метод ||| reflectionmethod	count=1
function_name	опционально для конкретной ||| svn ls	count=1
function_name	получение ||| language	count=1
function_name	от какого-либо сервера ||| wait	count=1
namespace	pdo::begintransaction() ||| pdo	count=1
namespace	вернет false ||| recursivetreeiterator	count=1
function_name	эта функция преобразует число ||| gmp	count=1
arg_pair	в участке ||| int $start	count=1
arg_pair	в изображении image ||| int $color	count=1
arg_pair	данные хранимые в участке ||| int $shmid	count=1
return	файл дескриптор ||| resource	count=1
arg_pair	данная функция строит ||| bool $recurse bool $peg	count=1
return	внутри ||| string	count=1
function_name	формате отметки времени unix ||| get mtime	count=1
function_name	высоким ||| high	count=1
arg_pair	имеет координаты ||| int $x	count=1
function_name	строки подходящим для ||| quote	count=1
function_name	получает документируемый ||| get doc	count=4
function_name	загружает [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	strcmp() за исключением ||| string $str1 string $str2	count=1
function_name	устанавливает опорной ||| set geo anchor	count=1
function_name	recursiveiteratoriterator::valid() впервые вернет ||| end	count=1
function_name	имя класса ||| class	count=4
namespace	implementing ||| function	count=1
arg_pair	возвращает строку str ||| string $encoding	count=2
function_name	[function_name_1] все ||| [function_name_1] [function_name_2]	count=1
function_name	первый атрибут если спозиционирован ||| attribute	count=1
function_name	текущее активное значение настройки ||| set magic	count=1
arg_pair	приемлемые для sql ||| string $table_name	count=1
function_name	имени ||| name by name	count=2
namespace	изменяет текущий ||| function	count=1
namespace	если ||| function	count=12
return	namespaceuri и локальным ||| void	count=1
function_name	по url адресу ||| ls	count=1
namespace	метод recursiveiteratoriterator::valid() впервые вернет ||| recursiveiteratoriterator	count=1
function	[function_name_1] mysql ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	в строке haystack ||| string $haystack string $needle	count=2
function_name	закрывает поток связанный с ||| closedir	count=1
function_name	и индексов ||| array udiff uassoc	count=1
function_name	функция устанавливает ||| socket set	count=1
return	каталогом и ||| void	count=1
function_name	версии [function_name_2] ||| [function_name_2] [function_name_1]	count=2
namespace	транзакцию возвращая соединение ||| pdo	count=1
arg_pair	символов ||| int $mode	count=1
arg_pair	и до конца ||| mixed $needle	count=1
function_name	вычисляет ||| similar text	count=2
function_name	аналогично memcached::prepend() за исключением ||| prepend by	count=1
return	вывода заставляет ||| bool	count=1
arg_pair	записываются ||| resource $out	count=1
arg_pair	возвращает ссылающийся ||| string $separator	count=1
arg_pair	haystack начиная с ||| string $haystack	count=1
arg_pair	компонента в ||| resource $image	count=1
function_name	формата utf-8 в ||| pdf utf8	count=1
arg_pair	для трассировки ||| resource $connection	count=1
arg_pair	версии version ||| string $feature string $version	count=1
function_name	начнет новую транзакцию ||| commit	count=1
arg_pair	заданными координатами центра ||| resource $image int $cx	count=1
arg_pair	строки ||| string $value string $type	count=1
function_name	операции ||| ldap	count=1
namespace	и сохраняет ||| function	count=1
function_name	расширение файла для ||| extension	count=1
return	фиксации до ||| bool	count=1
arg_pair	аналогично memcached::replace() за ||| mixed $value int $expiration	count=1
function	[function_name_1] заданными свойствами ||| [function_name_1] create string $filename [arg_pair_2]	count=1
arg_pair	возвращает целочисленный идентификатор ||| resource $result	count=1
function_name	конца строки ||| trim	count=1
namespace	новый объект класса domcomment ||| domcomment	count=1
return	следующий вызов pdo::begintransaction() ||| bool	count=1
function_name	заголовки ||| headers	count=1
function_name	активное значение ||| magic quotes	count=1
function_name	файловой ||| eio	count=1
function_name	данные из ||| write	count=1
namespace	стилей ||| xsltprocessor	count=4
function_name	правилами в bbcode_container возвращаемом ||| bbcode parse	count=1
function_name	внешних сущностей для ||| set external entity ref	count=1
arg_pair	браузере в файле browscap.ini ||| string $user_agent bool $return_array	count=1
function_name	получает ||| get option	count=2
return	класс ||| reflectionclass	count=2
return	массив имен всех ||| array	count=1
function_name	или [function_name] ||| [function_name]	count=1
function_name	uri ||| to uri	count=1
function_name	метод ||| images	count=1
function_name	получает числовой ||| errno	count=1
function_name	временную зону ||| geoip time zone by country and	count=1
function_name	соответствющие html-сущности для ||| htmlentities	count=1
function_name	задает текущее активное значение ||| set magic quotes runtime	count=1
function_name	поиска ||| search	count=1
function_name	дескрипторов mh ||| curl multi	count=2
function	данных postgresql [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	ключам и значениям ||| int $options	count=1
function_name	получает класс arrayiterator который ||| get	count=1
function_name	задает обработчик по умолчанию ||| default handler	count=1
arg_pair	или записываются в него ||| resource $out	count=1
function_name	сообщение об ошибке ||| error	count=3
return	и сохраняет ||| bool	count=1
function_name	с ||| by key	count=3
function_name	[function_name_1] ширину ||| [function_name_1] image [function_name_2]	count=1
namespace	false ||| recursivetreeiterator	count=1
function_name	расстояние хэмминга для ||| gmp hamdist	count=1
arg_pair	by oliver isbn 0-131-00413-1 ||| string $first string $second	count=1
arg_pair	из изображения image ||| resource $image	count=1
arg_pair	параметрах seconds и nanoseconds ||| int $seconds	count=1
arg_pair	удаляет выбранную область с ||| int $height	count=1
arg_pair	значение находится ||| int $color float $value	count=1
arg_pair	oliver isbn 0-131-00413-1 ||| string $first	count=1
return	на заданную аргументом ||| bool	count=1
function_name	устанавливает параметры соединения с ||| set option	count=1
arg_pair	директорий ||| bool $recurse	count=1
function_name	в начало ||| rewind	count=1
arg_pair	слева справа ||| int $pad_type	count=1
arg_pair	список файлов ||| bool $recurse	count=1
arg_pair	с идентификатором oid ||| int $oid	count=1
arg_pair	для чтения каталога ||| string $directory resource $context	count=1
function_name	имени ||| code by name	count=2
namespace	чего-либо что является ||| iteratoriterator	count=1
arg_pair	и сдвигает внутренний указатель ||| resource $result string $class_name	count=1
namespace	по алгоритму ||| function	count=1
arg_pair	memcached::add() за ||| mixed $value int $expiration	count=1
arg_pair	меняет ||| resource $ftp_stream string $directory	count=1
namespace	специальные символы внутри строки ||| pdo	count=1
return	recursiveiteratoriterator::valid() впервые вернет ||| void	count=1
function_name	буфера вывода верхнего уровня ||| ob	count=1
function_name	был преобразован ||| lcfirst	count=1
arg_pair	дня заданного аргументом timestamp ||| int $format	count=2
arg_pair	на число a ||| gmp $b	count=1
function_name	файла указанного в ||| syntax	count=1
function_name	декодирует несколько полей ||| decode headers	count=1
namespace	с базой данных ||| pdo	count=1
function_name	programming classics: implementing ||| similar text	count=1
function_name	возвращает идентификатор [function_name_2] ||| [function_name_1] [function_name_2]	count=1
arg_pair	значение будет сохранено ||| mixed $value int $expiration	count=1
function_name	закодированную при помощи base64 ||| base64	count=1
function_name	изменяет ||| value	count=1
function_name	ли два [function_name] одним и ||| is same [function_name]	count=1
function_name	первого вхождения needle ||| strstr	count=1
namespace	закрывает поток ||| function	count=1
namespace	запросом insert update или ||| function	count=1
function_name	текущий элемент ||| current	count=2
function_name	итератор допустимым ||| valid	count=1
arg_pair	number представленное ||| int $frombase	count=1
function_name	об ошибке ||| error log	count=1
function_name	значение гравитации [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	обрабатывает результат поиска ||| int $errcode	count=1
function_name	задает текущее активное ||| magic quotes	count=1
function_name	файла указанного в ||| php	count=1
function_name	код ||| code	count=4
arg_pair	filename проверяя ошибки в ||| string $filename	count=1
function_name	в других xml функциях ||| xml	count=1
function_name	xml анализатора ||| xml parser	count=1
arg_pair	group ||| mixed $group	count=1
function_name	выполняет проверку синтаксиса производит ||| syntax	count=1
function_name	функция возвращает ||| get elements by tag name	count=1
function_name	[function_name_1] объявленные ||| [function_name_2] [function_name_1]	count=1
function_name	изменяет корневой каталог текущего ||| chroot	count=1
function_name	его в виде ||| to	count=1
function_name	memcached::prepend() ||| prepend by key	count=2
function_name	атрибут ||| set id attribute ns	count=2
function_name	метод recursivetreeiterator::valid() впервые ||| end	count=1
function_name	задания метаданных ||| metadata	count=1
arg_pair	опционально для конкретной ревизии ||| bool $recurse	count=1
namespace	производит ||| function	count=1
function_name	utf-8 ||| pdf utf16 to utf8	count=2
function_name	для конкретной ревизии ||| svn ls	count=1
function_name	функций как ||| function	count=1
arg_pair	с ||| mixed $needle	count=1
arg_pair	the worlds best ||| string $first string $second	count=1
arg_pair	центром в заданных ||| int $cy	count=1
function_name	remote_file с ||| ftp fget	count=1
arg_pair	центром в заданных координатах ||| int $cy int $width	count=1
function_name	sql-запросе в функции ||| escape	count=1
function_name	задает ||| quotes	count=1
namespace	устанавливает флаг сохранять ||| function	count=1
arg_pair	указанного в параметрах ||| string $name int $base_group_id	count=1
function_name	инструкций препроцессора pi ||| processing instruction	count=1
function_name	переданный в качестве ||| closedir	count=1
function_name	короткое [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	проверяет работает ли ||| ping	count=1
function_name	сжатия [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	координатами центра ||| int $cx	count=1
function_name	начало ||| rewind	count=2
function_name	строку ||| quote	count=1
function_name	в массиве targets ||| svn commit	count=1
function_name	[function_name_1] одну или ||| [function_name_2] [function_name_1]	count=2
function_name	values в ||| array combine	count=1
return	сохранять ||| bool	count=1
function	номер поля [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	задает значение именованной ||| mixed $value	count=1
function_name	возвращает высоту изображения ||| get image height	count=2
arg_pair	и сдвигает внутренний указатель ||| resource $result	count=1
function_name	возвращает идентификатор ||| get	count=1
function_name	список разрешений для файла ||| perms	count=1
function_name	the worlds best ||| text	count=1
function_name	by oliver ||| similar	count=1
function_name	ошибки в ||| php	count=1
function_name	число gmp в ||| gmp intval	count=1
arg_pair	способом ||| string $string	count=1
function	string [arg_pair_2] ||| [function_name_1] convert encoding [arg_pair_2]	count=2
function_name	алгоритму описанному в programming ||| text	count=1
arg_pair	возвращает строку str буквенные ||| string $str string $encoding	count=2
function_name	geoip ||| geoip	count=1
arg_pair	значение находится между 0 ||| float $value	count=1
function_name	синтаксиса производит ||| check syntax	count=1
function_name	возвращает версию сервера к ||| mysqli get server version	count=1
function_name	/ получение текущего ||| mb	count=1
arg_pair	или историю правок ||| int $end_revision	count=1
return	зоны с ||| string	count=1
function_name	записей ||| ldap count	count=1
function_name	закачивает данные ||| nb fput	count=1
function_name	subject все ||| preg match	count=1
function_name	название страны соответствующий имени ||| by name	count=1
function	ли [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
arg_pair	значение именованной или ||| mixed $value	count=1
function_name	[function_name_1] ошибках связанного ||| [function_name_1] [function_name_2]	count=1
namespace	needle и ||| function	count=1
return	на ||| void	count=4
arg_pair	заданного файла в байтах ||| resource $ftp_stream	count=1
arg_pair	строку data ||| string $data	count=1
function_name	удаления из ||| delete	count=1
arg_pair	количество дней с начала ||| int $day int $year	count=1
return	pdo::begintransaction() ||| bool	count=1
function_name	базовых классов заданного ||| parents	count=1
arg_pair	противовес одноцветной прозрачности ||| resource $image bool $saveflag	count=1
function	обрезает строку [function_name_1] [arg_pair_2] ширине width ||| [function_name_1] [arg_pair_2]	count=1
function_name	активное ||| set magic quotes runtime	count=2
function_name	определению в ||| database info	count=1
function_name	адресу репозитория ||| svn ls	count=1
function_name	spl очереди [function_name_2] ||| [function_name_1] [function_name_2]	count=1
namespace	вывода заставляет обработчика ожидать ||| gearmanworker	count=1
function_name	postgresql ||| pg end	count=1
function_name	[function_name_1] короткое ||| [function_name_2] [function_name_1]	count=1
function_name	в запросе sqlite ||| sqlite escape string	count=1
arg_pair	слева справа или с ||| int $pad_type	count=1
function_name	постоянное соединение с сервером ||| pconnect	count=1
return	тех пор ||| bool	count=1
function_name	implementing the ||| text	count=1
function_name	верификацию файла указанного в ||| check syntax	count=1
arg_pair	получает список файлов и ||| string $repos_url	count=1
arg_pair	производит верификацию файла ||| string $filename	count=1
function_name	информацию альфа ||| imagesavealpha	count=1
function_name	директорий опционально для конкретной ||| ls	count=1
namespace	записи ||| function	count=1
function_name	текущего элемента ||| get children	count=1
function_name	с пространстве имен ||| ns	count=1
arg_pair	http заголовками ||| int $expire	count=1
function_name	выбирает все ||| all	count=1
arg_pair	бит с индексом ||| int $index	count=1
function_name	вхождения needle и включая ||| strstr	count=1
function_name	в других xml функциях ||| xml parser create	count=1
function_name	[function_name_1] [function_name_2] в ||| [function_name_2] [function_name_1]	count=2
function_name	в других xml ||| xml parser create	count=1
arg_pair	запрос по ||| string $repos_url int $revision_no	count=1
function_name	читает все значения ||| ldap get values	count=1
function_name	на всех локальных интерфейсах ||| socket create listen	count=1
function_name	сервере ||| animate images	count=2
namespace	или всех ||| function	count=1
function_name	символьное имя для ||| name	count=1
arg_pair	the worlds best ||| string $second	count=1
function_name	номер поля ||| field num	count=1
arg_pair	записываются в него такими ||| resource $in resource $out	count=1
arg_pair	текущий домен domain для ||| string $domain	count=1
function_name	сжатого [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	список ||| ls	count=1
function_name	флаг сохранять всю ||| imagesavealpha	count=1
function_name	данный метод возвращает ||| get	count=1
arg_pair	сохраненных в результате ||| resource $link_identifier resource $result_identifier	count=1
arg_pair	gz-файла по ||| resource $zp	count=1
return	массив имен ||| array	count=1
arg_pair	classics: implementing the ||| string $second	count=1
arg_pair	алгоритму ||| string $first string $second	count=1
namespace	класса reflectionclass ||| reflectionclass	count=1
arg_pair	рисует прямоугольник ||| int $y2	count=1
function_name	[function_name_1] часть строки ||| [function_name_2] [function_name_1]	count=2
arg_pair	первого вхождения needle и ||| string $haystack mixed $needle	count=1
namespace	[namespace] delete ||| [namespace]	count=3
function_name	размер сжатого элемента ||| get packed size	count=3
function_name	число столбцов затронутых последним ||| mysqli field count	count=1
function_name	cookie сессии ||| session get cookie	count=1
function_name	задает имя класса ||| set file class	count=1
function_name	для механизмов автоматического определения ||| mb detect order	count=1
function_name	строк по алгоритму описанному ||| text	count=1
namespace	с каталогом и ||| function	count=1
function_name	буфера ||| ob	count=1
function_name	по умолчанию ||| set default	count=1
function_name	зеркало [function_name] отражая пиксели ||| flip [function_name]	count=1
arg_pair	ini в виде ассоциативного ||| bool $process_sections	count=1
arg_pair	работает аналогично memcached::get() за ||| callable $cache_cb float $cas_token	count=1
function_name	атрибут с заданным ||| attribute	count=1
function_name	получает записи из базы ||| get record	count=1
arg_pair	search в ||| mixed $search mixed $replace	count=2
function_name	errno код ошибки сокета ||| socket	count=1
arg_pair	текущую директорию на ||| resource $ftp_stream	count=1
function	[function_name_1] чистую директорию ||| [arg_pair_2] [function_name_1]	count=3
function_name	постоянное ||| oci pconnect	count=2
arg_pair	эта функция подобна strcmp() ||| string $str1 string $str2	count=1
arg_pair	подстрока needle ||| string $haystack string $needle	count=1
function_name	отправлены то http_response_code получит [function_name_1] [function_name_2] ||| function int http [function_name_1] [function_name_2] int $response_code	count=2
arg_pair	строке source ||| string $source	count=1
arg_pair	команду command ||| resource $ftp_stream string $command	count=1
namespace	данных в режим автоматической ||| pdo	count=1
function_name	файла указанного в filename ||| check	count=1
arg_pair	на число a ||| gmp $a gmp $b	count=1
arg_pair	строки ||| string $encoding	count=1
function_name	preg_replace() ||| preg filter	count=2
function_name	устанавливает [function_name_2] ||| [function_name_2] [function_name_1]	count=17
arg_pair	haystack ||| string $needle	count=1
function_name	пытается [function_name] временную зону ||| date default timezone [function_name]	count=1
namespace	настоящий момент анализирует ||| xmlreader	count=1
return	в качестве параметра ||| void	count=1
arg_pair	аргументом ||| resource $ftp_stream	count=1
function_name	указанного в filename ||| check syntax	count=1
arg_pair	с другими http заголовками ||| int $expire string $path	count=1
function_name	[function_name_1] версию расширения ||| [function_name_1] get [function_name_2]	count=1
function_name	регистрирует ||| register shutdown	count=1
function_name	временную зону и ||| geoip time zone by country	count=1
namespace	или случайное число если ||| function	count=1
arg_pair	callback ||| callable $callback	count=1
function_name	функция сливает ||| merge	count=1
function_name	какого-либо ||| wait	count=1
function_name	порядке в котором ||| by	count=1
function_name	в текущем домене ||| dcngettext	count=1
return	haystack ||| string	count=1
return	фиксирует транзакцию возвращая соединение ||| bool	count=1
function_name	vars ||| convert variables	count=1
function_name	имя ||| entry name	count=1
arg_pair	изменяет настройки парсера ||| resource $bbcode_container	count=1
function_name	файла указанного в ||| check syntax	count=1
return	каталогом и переданный в ||| void	count=1
arg_pair	определенное строкой connection_string ||| string $connection_string int $connect_type	count=1
arg_pair	ревизии ||| string $repos_url	count=1
arg_pair	складывает два числа ||| gmp $a gmp $b	count=1
function_name	текущее ||| set	count=1
function_name	активное ||| set magic quotes	count=1
function_name	файлов и директорий ||| svn	count=1
arg_pair	генерирует yaml-представление из ||| int $encoding int $linebreak	count=1
arg_pair	с ||| string $haystack	count=1
function_name	filename проверяя ||| php	count=1
function_name	класса по умолчанию ||| default	count=1
function_name	содержит ли ||| is	count=2
arg_pair	на ||| mixed $subject int $limit	count=1
function_name	устанавливает буферизацию для операций ||| stream set write buffer	count=1
return	на ||| resource	count=2
arg_pair	создает временный большой объект ||| int $lob_type	count=1
namespace	needle и включая ||| function	count=1
arg_pair	лог web-сервера ||| string $extra_headers	count=1
function_name	текущее ||| set magic	count=1
function_name	текущее ||| set magic quotes	count=1
function_name	побитовое и двух gmp ||| and	count=1
arg_pair	в json ||| bool $assoc	count=1
namespace	файла указанного в ||| function	count=1
return	количество ||| int	count=1
function	[function_name_1] с текущей ||| [arg_pair_2] [function_name_1]	count=2
function_name	programming classics: ||| similar text	count=1
function_name	[function_name_1] массива ||| [function_name_2] [function_name_1]	count=2
function_name	algorithms ||| text	count=1
function_name	столбца следующей ||| fetch column	count=2
function_name	получает первый [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	с ftp сервером ||| ftp	count=1
function_name	переданные в ||| multi	count=1
function_name	строки haystack начиная с ||| strstr	count=1
function_name	для конкретной ||| svn ls	count=1
namespace	[namespace] или file ||| [namespace]	count=1
function_name	дочерний элемент ||| child	count=1
function_name	best algorithms ||| similar text	count=1
arg_pair	[arg_pair] массив ||| [arg_pair]	count=1
namespace	верификацию файла указанного ||| function	count=1
arg_pair	получает список файлов и ||| int $revision_no	count=1
function_name	и записывает ||| write	count=1
return	определения кодировок в строках ||| mixed	count=1
function_name	постоянное соединение ||| pconnect	count=1
function_name	в строке subject ||| preg match all	count=1
arg_pair	совпадение ||| mixed $pattern	count=1
arg_pair	точки x y до ||| float $y	count=1
function_name	[function_name_1] заданного xml ||| [function_name_2] [function_name_1]	count=4
namespace	строк по алгоритму ||| function	count=1
return	на один ||| mixed	count=1
function_name	[function_name_1] внутренний ||| [function_name_2] [function_name_1]	count=1
function_name	возвращает список ||| list	count=2
namespace	синтаксиса производит ||| function	count=1
function_name	синтаксиса производит ||| php check	count=1
function_name	опционально для ||| svn ls	count=1
function_name	подобна strcasecmp() за ||| strncasecmp	count=1
namespace	строки haystack ||| function	count=1
function_name	возвращает максимальный ||| memory get peak	count=1
function_name	указанного канала текущего ||| color	count=1
function_name	[function_name] установленные ||| [function_name]	count=3
arg_pair	needle и ||| string $haystack mixed $needle	count=1
function_name	сервера набора результатов и ||| limits	count=1
arg_pair	она выполняет команду command ||| string $command	count=1
function_name	[function_name_1] xml ||| [function_name_2] set [function_name_1]	count=2
function_name	возможного типа [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	внутренний итератор для ||| inner iterator	count=2
return	неблокирующем режиме ввода ||| bool	count=1
arg_pair	[arg_pair_1] представленное в ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	имя класса ||| file class	count=1
return	задает текущее ||| bool	count=1
return	от ||| bool	count=1
function_name	к набору дескрипторов ||| multi	count=1
namespace	подходящим для драйвера ||| pdo	count=1
function_name	удалённый файл ||| ftp nb	count=1
arg_pair	значение именованной или ||| mixed $parameter mixed $value	count=1
function_name	последнего обращения к файлу ||| atime	count=1
arg_pair	x y до ||| float $y	count=1
return	дней ||| string	count=1
arg_pair	в параметре command ||| string $command	count=1
function_name	и ||| closedir	count=1
function_name	номер поля ||| field	count=1
function_name	algorithms by oliver ||| text	count=1
function_name	curl и возвращает ||| curl	count=1
function_name	[function_name_1] вывода ||| [function_name_2] [function_name_1]	count=2
function_name	информацию о подписи ||| gnupg decryptverify	count=1
arg_pair	ob_start() ||| string $contents	count=1
function_name	отправляет запрос на генерацию ||| build	count=1
return	список требуемых и ||| array	count=1
function_name	[function_name_1] postgresql result ||| [function_name_2] [function_name_1]	count=2
function_name	xor двух gmp ||| xor	count=1
function_name	корневой каталог текущего ||| chroot	count=1
arg_pair	по url адресу ||| bool $recurse	count=1
function_name	сокета указанного ||| socket	count=1
function	регистрирует [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=3
namespace	впервые вернет ||| recursivetreeiterator	count=1
namespace	name ключевым ||| domelement	count=1
function_name	функция вернет временную зону ||| time zone by	count=1
function_name	isbn ||| text	count=1
function_name	предыдущей операции ||| entries	count=1
function_name	итератор для ||| iterator	count=1
function_name	xml анализатора в ||| xml	count=1
function_name	в нижний регистр ||| strtolower	count=1
namespace	тех пор ||| pdo	count=1
return	базой данных ||| bool	count=1
arg_pair	участке разделяемой памяти ||| int $start	count=1
arg_pair	функция строит запрос ||| bool $recurse bool $peg	count=1
return	флаг сохранять ||| bool	count=1
function_name	функция разбирает ||| parse	count=1
arg_pair	строки php ||| string $type	count=1
function_name	файл ||| file	count=1
arg_pair	length элементов расположенных ||| int $length	count=1
function_name	низким приоритетом ||| do low	count=1
function_name	функция возвращает название ||| geoip region name by	count=1
function_name	максимальную [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	[function_name_1] функцией ldap_get_dn() ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	строк по алгоритму ||| string $first	count=1
function_name	ищет в строке subject ||| preg match	count=1
arg_pair	вычисляет ||| string $first string $second	count=1
function_name	и экранирует ||| quote	count=1
function_name	возвращает [function_name_2] ||| [function_name_1] array [function_name_2]	count=1
function_name	название региона ||| geoip region name	count=1
function_name	из строки результата запроса ||| pg fetch	count=1
namespace	случайное число если ||| function	count=1
function_name	возвращает номер версии ||| version get	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_2] low [function_name_1]	count=6
return	массив содержащий ||| array	count=8
function_name	синтаксиса производит верификацию файла ||| syntax	count=1
arg_pair	на заданную ||| resource $ftp_stream	count=1
function_name	возвращает синус параметра ||| sin	count=1
function_name	репозитория и получает список ||| ls	count=1
namespace	либо если ||| function	count=1
function_name	класса которое будет ||| set file class	count=1
function_name	класса без вызова конструктора ||| instance without constructor	count=1
function_name	символьных данных ||| character data	count=1
function_name	временную зону ||| time zone by country and region	count=1
function_name	всю информацию альфа компонента ||| imagesavealpha	count=1
namespace	имя файла текущего файла ||| directoryiterator	count=1
namespace	числовой код ошибки ||| function	count=1
arg_pair	the ||| string $second	count=1
function_name	возвращает позицию указателя поля ||| field tell	count=1
return	recursivetreeiterator::valid() ||| void	count=1
return	и [return] первого ||| [return]	count=1
function_name	результата запроса ||| pg fetch	count=1
function_name	экранирует спецсимволы в строке ||| escape string	count=1
function_name	как ||| function	count=1
function_name	вхождения подстроки ||| iconv	count=1
arg_pair	изображения image ||| string $filename	count=1
function_name	[function_name_1] глубину ||| [function_name_2] [function_name_1]	count=1
namespace	переводит число дней ||| function	count=1
function_name	возвращает xml переданный в ||| get	count=1
arg_pair	строку [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	строке subject все ||| preg match	count=1
function_name	classics: implementing the ||| similar	count=1
arg_pair	для чтения ||| string $directory	count=1
arg_pair	до ||| mixed $needle	count=1
function_name	если узел ||| is	count=1
arg_pair	строку str буквенные символы ||| string $str	count=2
namespace	сообщает ||| tidynode	count=1
return	по алгоритму ||| int	count=1
function_name	верификацию ||| php	count=1
function_name	кодировок в строках ||| detect	count=1
function_name	подстроку ||| strstr	count=1
arg_pair	массиве ||| int $protocol	count=1
function_name	возвращает xml ||| get	count=1
return	и сохраняет png ||| bool	count=1
function_name	текущее ||| magic quotes	count=1
namespace	допустимое ||| limititerator	count=1
function_name	filename проверяя ошибки в ||| php check syntax	count=1
function_name	сеанс curl и ||| curl	count=2
namespace	needle ||| function	count=1
namespace	от сервера заданий ||| gearmanworker	count=1
namespace	параметра ||| function	count=2
function_name	быть извлечены gearmanclient::data() ||| set data	count=1
return	записи в ||| bool	count=1
arg_pair	возвращает ||| int $mode	count=1
arg_pair	определенное строкой connection_string ||| int $connect_type	count=1
namespace	тип base64 или ||| function	count=1
function_name	ошибкой ||| bzerrstr	count=1
arg_pair	если ключ key ||| mixed $value	count=1
return	массив с ||| array	count=4
function_name	максимальную длину строки установленную ||| max	count=1
namespace	текущего ||| directoryiterator	count=1
function_name	объявляет атрибут с ||| id attribute	count=1
function_name	получение ||| get	count=4
function_name	значение атрибута в пространстве ||| attribute ns	count=1
arg_pair	вхождения needle и включая ||| string $haystack mixed $needle	count=1
function_name	список групп для ||| getgroups	count=1
arg_pair	текущем времени в микросекундах ||| bool $more_entropy	count=1
arg_pair	seconds и nanoseconds ||| int $seconds	count=1
namespace	и получает список файлов ||| function	count=1
function_name	по гринвичу ||| gmmktime	count=1
function_name	метода __autoload ||| autoload	count=1
function_name	кодировки iso-8859 в t61 ||| ldap 8859 to t61	count=1
function_name	строк в ||| rows	count=1
arg_pair	алгоритму описанному ||| string $second	count=1
arg_pair	точки x y ||| float $y	count=1
function_name	устанавливает новое ||| set	count=1
namespace	фиксации до тех пор ||| pdo	count=1
arg_pair	преобразует дату юлианского календаря ||| int $jd int $calendar	count=1
function_name	эта функция ||| gmp intval	count=1
namespace	следующий вызов ||| pdo	count=1
function_name	best ||| similar text	count=2
return	дескриптор используемый ||| bool	count=1
function_name	потоков [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	возвращает информацию о ||| get	count=1
arg_pair	импортирует php-массив ||| bool $save_indexes	count=1
arg_pair	функция подобна strcmp() за ||| string $str1 string $str2	count=1
arg_pair	текст string на ||| string $string	count=1
arg_pair	по указанному индексу ||| mixed $newval	count=1
function_name	копирования данных совершенных с ||| end copy	count=1
arg_pair	аналогично memcached::getdelayed() за ||| bool $with_cas callable $value_cb	count=1
function_name	[function_name_1] путь ||| [function_name_2] [function_name_1]	count=1
arg_pair	в кавычки ||| string $string	count=1
arg_pair	вхождения ||| string $haystack	count=1
function_name	число ||| ldap count entries	count=2
arg_pair	группу запросов ||| resource $req	count=1
function_name	полученный в последнем soap-ответе ||| last response	count=1
function_name	ваш собственный фильтр ||| stream filter	count=1
function_name	временную зону и ||| time zone by country and	count=1
namespace	внутренний объект-итератор ||| parentiterator	count=1
function_name	функция ||| gmp intval	count=2
function_name	виде ||| to	count=1
return	юлианском летоисчислении в ||| string	count=1
function_name	возвращает ширину и ||| get image	count=1
arg_pair	по ||| string $repos_url	count=1
function_name	привязывает имя указанное ||| bind	count=1
arg_pair	строку string в ||| string $string	count=1
arg_pair	memcached::add() за исключением ||| int $expiration	count=1
function_name	[function_name_1] низкоприоритетную фоновую ||| [function_name_2] [function_name_1]	count=1
function_name	с ftp ||| ftp	count=1
namespace	определения кодировок ||| function	count=1
function_name	описание [function_name] ||| [function_name]	count=1
arg_pair	ссылающийся ||| string $separator	count=1
function_name	определения кодировок в строках ||| detect order	count=1
return	implementing the worlds best ||| int	count=1
function_name	большой объект из ||| pg lo export	count=1
function_name	создает ||| create text	count=1
function_name	задает текущее активное ||| runtime	count=1
arg_pair	два соединённых и неразличимых ||| int $domain	count=1
arg_pair	рисует ||| int $y	count=2
function_name	[function_name_1] [function_name_2] ||| [function_name_1] server [function_name_2]	count=2
return	в programming classics: ||| int	count=1
arg_pair	изображения на основе части ||| int $srcy	count=1
function_name	[function_name] recursiveiteratoriterator ||| [function_name]	count=1
function_name	механизмов ||| detect order	count=2
function_name	[function_name_1] номер версии ||| [function_name_2] [function_name_1]	count=2
return	летоисчислении в строку ||| string	count=1
arg_pair	использованием множественного числа в ||| string $msgid2 int $n	count=1
function_name	возвращает название ||| name	count=2
namespace	число если seed ||| function	count=1
return	получение ||| array	count=1
return	php в массив ||| array	count=1
function_name	эта функция [function_name] многомерный ||| [function_name] defined	count=1
function_name	выполняет проверку синтаксиса производит ||| php	count=1
function_name	needle ||| strstr	count=1
function_name	допустимым ||| valid	count=2
function_name	набору дескрипторов mh ||| curl multi	count=2
return	в кавычки если ||| string	count=1
arg_pair	для ||| bool $recurse	count=1
arg_pair	и получает ||| string $repos_url	count=1
arg_pair	[arg_pair_1] ее в ||| [arg_pair_1] [arg_pair_2]	count=2
function_name	[function_name_1] низкоприоритетную ||| [function_name_2] [function_name_1]	count=1
arg_pair	его ||| string $haystack mixed $needle	count=1
arg_pair	[arg_pair] добавляет ||| [arg_pair]	count=1
arg_pair	включая ||| string $haystack mixed $needle	count=1
return	переданный в ||| void	count=1
function_name	в sql-запросе в функции ||| escape string	count=1
function_name	индексов ||| array udiff	count=2
function_name	результате предыдущей операции поиска ||| ldap	count=1
function_name	разбирает ||| parse	count=4
arg_pair	вдоль обозначенного контура с ||| string $pathname	count=1
function_name	вернет false ||| end	count=2
function_name	в ||| imagesavealpha	count=1
function_name	файлов и директорий ||| svn ls	count=1
arg_pair	строку закодированную в output_encoding ||| string $contents int $status	count=1
function	вхождения подстроки [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	стилей которые установлены ||| xsltprocessor	count=1
arg_pair	возвращает подстроку строки ||| string $haystack mixed $needle	count=1
namespace	положения итератора ||| splobjectstorage	count=1
arg_pair	переданный в параметре plaintext ||| resource $identifier string $plaintext	count=1
function_name	получает ||| xml get	count=2
function	[function_name_1] региона ||| [arg_pair_2] [function_name_1]	count=5
return	метод recursiveiteratoriterator::valid() впервые ||| void	count=1
function_name	является ||| output	count=1
arg_pair	url ||| int $revision_no	count=1
namespace	кодировок в строках ||| function	count=1
function_name	наименование месяца ||| jdmonthname	count=1
function_name	сокета и сохраняет ||| socket	count=1
function_name	версию сервера ||| server version	count=2
function_name	читает все значения атрибута ||| ldap get values len	count=1
arg_pair	необходимо указывать callback ||| mixed $pattern callable $callback	count=1
function_name	ошибки ||| check syntax	count=2
arg_pair	индексу ||| mixed $index	count=1
function_name	ли число простым ||| prob prime	count=1
function_name	соответствующее эффективному идентификатору пользователя ||| geteuid	count=1
function_name	в строке text ||| ctype	count=1
return	выполняет ||| bool	count=1
function_name	с низким приоритетом ||| do low	count=1
return	экранирует специальные символы внутри ||| string	count=1
arg_pair	haystack ||| mixed $needle	count=2
return	сохранять всю ||| bool	count=1
function_name	данные ||| write	count=1
arg_pair	ее в виде ||| array $ctor_args	count=1
function_name	delete [function_name] ||| [function_name] affected	count=3
function_name	возвращает название ||| region name by	count=1
function_name	utf-8 в формат utf-16 ||| pdf utf8 to utf16	count=1
function_name	репозитория и получает ||| svn ls	count=1
return	url ||| array	count=1
function_name	данная ||| ls	count=1
namespace	считывает следующую ||| function	count=1
function_name	других xml функциях ||| xml parser create	count=1
arg_pair	сортирует ||| int $sort_flags	count=1
function_name	возвращает данные [function_name_2] ||| [function_name_2] [function_name_1]	count=4
namespace	вернет ||| recursivetreeiterator	count=1
arg_pair	альфа компонента в ||| resource $image	count=1
namespace	функция преобразует число gmp ||| function	count=1
arg_pair	функции ereg_replace() за ||| string $pattern string $replacement	count=1
return	добавляет ||| bool	count=1
arg_pair	programming classics: ||| string $second	count=1
function_name	задает текущее ||| magic quotes	count=1
namespace	вхождения needle и ||| function	count=1
function_name	файл remote_file с ftp-сервера ||| fget	count=1
function_name	указанной базе [function_name_2] ||| [function_name_2] [function_name_1]	count=2
function_name	в формат utf-8 ||| to utf8	count=1
function_name	других xml функциях ||| xml	count=1
namespace	дескриптор используемый ||| function	count=1
function_name	функция ||| svn	count=1
arg_pair	соединение с ||| string $port	count=1
function_name	в соответствющие ||| htmlentities	count=1
return	возвращает строку с информацией ||| string	count=1
return	возвращает дескриптор работы ||| string	count=1
arg_pair	извлекает следующую строку и ||| string $class_name	count=1
namespace	поток связанный с каталогом ||| function	count=1
namespace	применяя [namespace] ||| [namespace]	count=1
arg_pair	needle в строку ||| string $haystack	count=3
function_name	получает ||| ls	count=1
return	функции ob_start() ||| string	count=1
function_name	виде узла ||| node	count=2
function_name	был преобразован в нижний ||| lcfirst	count=1
arg_pair	возвращает строку input ||| string $input	count=1
function	ли [arg_pair_2] ||| [function_name_1] subclass of [arg_pair_2]	count=3
function_name	конкретной ||| svn	count=1
function_name	устанавливает ||| set write buffer	count=1
function_name	памяти в байтах ||| shmop size	count=1
arg_pair	truetype ||| string $fontfile	count=1
function_name	по умолчанию через сокет ||| socket	count=1
function_name	подсчитывает количество элементов в ||| count	count=1
arg_pair	в участке разделяемой памяти ||| int $shmid int $start	count=1
return	и имя ||| string	count=1
arg_pair	в заданный файл filename ||| string $filename	count=1
namespace	сохранять всю ||| function	count=1
return	в ||| mixed	count=1
arg_pair	в других функциях pspell ||| string $spelling	count=1
namespace	php integer ||| function	count=1
namespace	tidy ||| tidy	count=1
function_name	декодирует несколько полей ||| decode	count=1
function_name	заполняет [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	число записей сохраненных ||| resource $result_identifier	count=1
arg_pair	текстовом ||| int $armor	count=1
function_name	список имен таблиц ||| mysql list tables	count=2
arg_pair	кавычки если требуется и ||| string $string	count=1
function_name	[function_name_1] нескольких настроек ||| [function_name_2] [function_name_1]	count=1
function_name	[function_name_1] путь ||| [function_name_1] [function_name_2]	count=1
arg_pair	и возвращает ссылающийся на ||| string $separator	count=1
function_name	subject все совпадения ||| preg match	count=1
arg_pair	до конца ||| mixed $needle	count=1
function_name	страны соответствующий имени ||| by name	count=2
return	xpath выражение [return] ||| [return]	count=1
function_name	синтаксиса производит верификацию файла ||| check syntax	count=1
arg_pair	новое значение будет сохранено ||| mixed $value int $expiration	count=1
namespace	для чтения или ||| function	count=1
arg_pair	первого вхождения ||| string $haystack	count=1
return	строк по алгоритму ||| int	count=1
return	удалённом x ||| bool	count=1
function_name	видео-кадров из swfvideostream ||| frames	count=1
arg_pair	в значение ||| int $optname	count=1
function_name	код sqlstate ошибки вызванной ||| sqlstate	count=1
function_name	функция пытается [function_name] временную зону ||| date default timezone [function_name]	count=1
function_name	в [function_name] ||| get elements [function_name]	count=1
function_name	операции ||| count	count=1
function_name	перемещает указатель ||| next	count=1
arg_pair	множественного числа ||| string $msgid2	count=1
function_name	year для заданного ||| days	count=1
function_name	определению ||| database info	count=1
return	число php integer ||| int	count=1
function_name	есть это не внутренняя ||| user	count=1
function_name	von einer mime ||| iconv mime	count=1
namespace	кавычки ||| pdo	count=1
function_name	директорию на заданную аргументом ||| ftp chdir	count=1
return	узел в строку ||| string	count=1
arg_pair	в параметре plaintext текст ||| resource $identifier string $plaintext	count=1
namespace	imagick объекта ||| imagick	count=1
return	требуется и экранирует специальные ||| string	count=1
function_name	в других xml ||| xml	count=1
function_name	нижний регистр ||| strtolower	count=1
namespace	записи ||| memcached	count=1
namespace	если seed не указан ||| function	count=1
function_name	число ||| jdtofrench	count=1
return	между ключами [return] значениями ||| [return]	count=1
function_name	элементы текущего элемента ||| get children	count=1
return	programming classics: implementing ||| int	count=1
return	следующую запись ||| resource	count=1
function_name	вывода ||| ob start	count=1
return	задания ||| bool	count=1
function_name	других xml функциях ||| xml parser create ns	count=1
return	ожидать ||| bool	count=1
function_name	recursivetreeiterator::valid() впервые ||| end	count=1
arg_pair	json строку и ||| string $json bool $assoc	count=1
arg_pair	hostname ||| int $port	count=1
namespace	массива ||| splfixedarray	count=1
arg_pair	адресу репозитория и ||| bool $recurse	count=1
function_name	x сервере ||| images	count=1
arg_pair	в параметре offset ||| string $key int $offset	count=1
namespace	oliver ||| function	count=1
function_name	needle и включая его ||| strstr	count=1
function_name	[function_name] приоритетом ||| do [function_name]	count=3
return	возвращает дескриптор ||| string	count=1
function_name	зеркало [function_name] отражая пиксели ||| flop [function_name]	count=1
function_name	по алгоритму ||| text	count=1
arg_pair	подстроку ||| string $haystack mixed $needle	count=1
function_name	ldap ||| ldap delete	count=2
function_name	двух строк по алгоритму ||| similar text	count=1
return	его и до ||| string	count=1
namespace	операции поиска ||| function	count=1
function_name	curl ||| curl close	count=2
function_name	производит верификацию файла указанного ||| syntax	count=1
arg_pair	и ||| resource $image	count=1
function_name	возвращает ||| stream socket get	count=1
namespace	строку в ||| pdo	count=1
function_name	описанному ||| similar	count=1
return	classics: implementing ||| int	count=1
function_name	результат [function_name] баз ||| mysql [function_name]	count=1
return	имя терминала связанного с ||| string	count=1
namespace	стилей которые ||| xsltprocessor	count=1
function_name	[function_name_1] сервера ||| [function_name_2] [function_name_1]	count=2
return	если узел ||| bool	count=1
namespace	в ||| pdo	count=2
function_name	режимом mode ||| convert case	count=1
function_name	[function_name_1] ошибок ||| [function_name_2] [function_name_1]	count=4
function_name	возвращает версию клиента в ||| mysqli get client version	count=1
function_name	[function_name_1] изображения в ||| [function_name_2] [function_name_1]	count=2
function_name	класса объекты ||| class	count=1
function_name	результате предыдущей операции ||| count entries	count=1
function_name	активное значение ||| quotes runtime	count=1
return	массив c доступными ||| array	count=1
arg_pair	сравнивает value1 с value2 ||| mixed $value1 mixed $value2	count=1
function_name	часть строки ||| substr	count=1
function_name	сервером postgresql ||| pg	count=1
function_name	добавляет запись в ||| add	count=1
arg_pair	вхождения search в subject ||| mixed $replace	count=2
arg_pair	строку str и ||| string $str string $delimiter	count=1
arg_pair	с шаблоном pattern и ||| string $subject	count=1
function_name	вызов статуса ||| task status	count=1
function_name	число ||| ldap count	count=1
arg_pair	команду command ftp-серверу ||| string $command	count=1
function_name	автоматического ||| mb detect	count=1
arg_pair	аргумент callback ||| mixed $data	count=2
namespace	регистр если ||| function	count=3
function_name	пасху в заданном году ||| easter date	count=1
function_name	функция возвращает название ||| region name by	count=1
function	[function_name_1] с именем ||| [arg_pair_2] [function_name_1]	count=1
namespace	domentityreference ||| domentityreference	count=1
function_name	синтаксиса производит ||| syntax	count=1
function_name	внешних сущностей ||| set external entity ref	count=1
arg_pair	и сохраняет png изображение ||| resource $image	count=1
namespace	десериализует [namespace] из ||| [namespace]	count=1
function_name	атрибут если спозиционирован на ||| attribute	count=1
function_name	метод выводит изображение ||| image	count=1
function	переданные в [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	кодировок в ||| order	count=1
function_name	виде ассоциативного ||| geometry	count=1
arg_pair	вхождения строки needle в ||| string $encoding	count=1
function	репозитория в [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
namespace	переходит ||| appenditerator	count=1
function_name	[function_name_1] в ldap ||| [function_name_2] [function_name_1]	count=1
function_name	конструктор класса ||| construct	count=1
arg_pair	oracle и выполняет аутентификацию ||| string $connection_string string $character_set	count=1
function_name	операции поиска ||| ldap	count=1
function_name	индекс текущего элемента ||| key	count=1
arg_pair	из массива ||| array $rows string $delimiter	count=1
function_name	число секунд ||| time	count=1
arg_pair	сохраняет png ||| resource $image	count=1
function_name	заменяет значения ||| replace	count=1
arg_pair	вхождения строки needle в ||| int $offset string $encoding	count=1
return	метод recursiveiteratoriterator::valid() впервые вернет ||| void	count=1
arg_pair	пикселах ||| float $angle	count=1
arg_pair	имеет координаты 0 ||| int $x	count=1
function_name	[function_name_1] возможного типа ||| [function_name_1] image [function_name_2]	count=1
namespace	требуется ||| pdo	count=1
function_name	производит ||| images	count=1
function_name	механизмов автоматического ||| mb	count=1
namespace	или двух gmp чисел ||| function	count=1
function_name	преобразует дату французского республиканского ||| frenchtojd	count=1
return	expression и возвращает ||| mixed	count=1
function	[function_name_1] в fd ||| [function_name_1] [arg_pair_2]	count=4
function_name	массива ||| set multi	count=1
function_name	[function_name_1] по умолчанию ||| [function_name_2] [function_name_1]	count=5
function_name	получает [function_name_2] ||| [function_name_1] image compression [function_name_2]	count=1
arg_pair	атрибута файла ||| string $filename string $name	count=1
function_name	функцию ||| call user func array	count=1
function_name	[function_name] порядку ||| [function_name] timezone	count=1
arg_pair	полученного [arg_pair] помощью ||| [arg_pair]	count=1
arg_pair	подстроку строки ||| string $haystack mixed $needle	count=1
function_name	в результате предыдущей ||| ldap	count=1
arg_pair	указанного в ||| string $name	count=1
function_name	для указанного контекста ||| stream context	count=1
arg_pair	аналогично memcached::getdelayed() за ||| callable $value_cb	count=1
namespace	фиксирует транзакцию возвращая ||| pdo	count=1
arg_pair	соединённых и неразличимых ||| int $domain	count=1
arg_pair	дескриптора директории ||| int $length	count=1
return	возвращая соединение с ||| bool	count=1
function_name	размер сжатого [function_name_2] ||| [function_name_2] [function_name_1]	count=4
arg_pair	указанного ||| string $filename	count=1
function_name	[function_name] в ||| [function_name]	count=1
function_name	устанавливает значения ||| set	count=1
function_name	других xml ||| xml	count=1
function_name	сущностей для ||| entity	count=2
arg_pair	в fd ||| int $pri	count=1
function_name	с нуля ||| elem	count=1
function_name	получает класс arrayiterator ||| get array iterator	count=1
function_name	функция будет ||| socket	count=1
function_name	расшифровывает переданный [function_name] ключами установленными ||| [function_name]	count=1
function_name	проверяя ||| check	count=1
function_name	функция возвращает название региона ||| name	count=1
namespace	включая его и до ||| function	count=1
function	[function_name_1] файла ||| [arg_pair_2] [function_name_1]	count=7
namespace	информацию о состоянии задания ||| gearmanclient	count=1
return	функция ||| int	count=1
return	впервые ||| void	count=2
function_name	атрибут с заданным ||| id attribute ns	count=1
function_name	и директорий ||| svn	count=1
function_name	в sql-запросе ||| escape string	count=1
function_name	закрывает файл указанный ||| eio close	count=1
return	элементу и [return] первого ||| [return]	count=1
namespace	автоматической фиксации до ||| pdo	count=1
function_name	[function_name_1] методов в ||| [function_name_1] [function_name_2]	count=1
arg_pair	эллипс с центром в ||| int $cy int $width	count=1
arg_pair	по алгоритму ||| string $first	count=1
function_name	[function_name_1] сжатого элемента ||| [function_name_2] [function_name_1]	count=4
function_name	алгоритму описанному в ||| similar	count=1
function_name	выполняет проверку синтаксиса ||| php	count=1
function_name	[function_name_1] ширину ||| [function_name_2] [function_name_1]	count=1
function_name	строку в ||| quote	count=1
namespace	для чтения или записи ||| function	count=1
function_name	расположенных на расстоянии ||| array splice	count=1
function	отправляет произвольную [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	ли значение переменной ||| is	count=1
function_name	копию [function_name_2] ||| [function_name_2] [function_name_1]	count=2
arg_pair	isbn 0-131-00413-1 ||| string $first string $second	count=1
function_name	текущую директорию ||| ftp	count=1
function_name	создает постоянное ||| pconnect	count=1
function_name	объявляет атрибут с заданным ||| attribute	count=1
return	объект класса domnodelist - ||| domnodelist	count=1
namespace	класса domcomment ||| domcomment	count=1
function_name	возвращает список ||| get	count=1
function	синтаксис [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	битовую маску модификаторов ||| modifiers	count=1
arg_pair	историю правок ||| int $end_revision int $limit	count=1
function_name	целое число php integer ||| gmp intval	count=1
arg_pair	байт из gz-файла по ||| resource $zp	count=1
function_name	подходящим для драйвера способом ||| quote	count=1
function_name	[function_name_1] ошибках ||| [function_name_1] [function_name_2]	count=1
function_name	ваш собственный фильтр ||| filter	count=1
function_name	получает числовой код ошибки ||| udm	count=1
namespace	сервера ||| gearmanworker	count=1
function_name	поток связанный ||| closedir	count=1
namespace	в качестве параметра directory ||| function	count=1
arg_pair	новое значение ||| mixed $value	count=1
function_name	проверяет может ли ||| is callable	count=1
function_name	add a section of ||| ps curveto	count=1
function_name	oliver isbn ||| similar	count=1
function_name	до [function_name] терминального устройства ||| [function_name]	count=1
function_name	переданный в качестве параметра ||| closedir	count=1
function_name	синтаксиса производит верификацию ||| syntax	count=1
arg_pair	implementing the ||| string $first	count=1
function_name	какого-либо сервера заданий gearman ||| wait	count=1
function	рамки вокруг [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	обработчиком ошибок а также ||| trigger error	count=1
function_name	filename ||| check syntax	count=2
arg_pair	новое значение будет ||| mixed $value	count=1
return	строку ||| string	count=14
function_name	имена всех [function_name] которые ||| get included [function_name]	count=1
function	[function_name_1] и ||| [arg_pair_2] [function_name_1]	count=3
function_name	имя класса объекты ||| info class	count=1
arg_pair	в лог web-сервера ||| string $destination string $extra_headers	count=1
return	implementing the worlds ||| int	count=1
arg_pair	функциями imagecolorallocate() или ||| int $color	count=1
arg_pair	ereg_replace() за исключением ||| string $replacement	count=1
function_name	в строках ||| mb detect	count=1
arg_pair	специальные символы в unescaped_string ||| resource $link_identifier	count=1
function_name	ошибок ||| trigger error	count=1
namespace	и экранирует специальные ||| pdo	count=1
function_name	статического свойства ||| static property value	count=1
function	[function_name_1] [arg_pair_2] asii-кодами в диапазоне 0..255 ||| [function_name_1] chars [arg_pair_2]	count=2
function_name	сокет ||| socket server	count=2
arg_pair	возвращает строку [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	локальным ||| by tag name ns	count=1
function_name	в виде объекта ||| fetch object	count=1
arg_pair	с ||| string $haystack mixed $needle	count=1
function_name	ошибки xml анализатора ||| xml error	count=1
function_name	сущностей ||| set unparsed entity	count=1
return	удалённом x сервере ||| bool	count=1
function_name	используя встроенное изображение ||| logo guid	count=1
namespace	сливает [namespace] ||| [namespace]	count=2
function_name	на заданную аргументом ||| ftp chdir	count=1
arg_pair	worlds ||| string $first	count=1
arg_pair	специальные символы внутри строки ||| string $string	count=1
namespace	переданный в качестве ||| function	count=1
arg_pair	значение именованной ||| mixed $value	count=1
function_name	определения ||| mb detect order	count=2
function_name	вставленной ||| pg last	count=1
arg_pair	на основе аргумента path ||| int $flags	count=1
function_name	ftp ||| ftp	count=1
function	поля [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	input повторенную multiplier раз ||| string $input int $multiplier	count=1
arg_pair	строке с данными ||| resource $connection string $data	count=1
namespace	с первого вхождения needle ||| function	count=1
function_name	ldap ||| ldap bind	count=2
function_name	haystack ||| strstr	count=1
namespace	memcache ||| memcached	count=2
return	активное значение ||| bool	count=1
function_name	адресу ||| svn	count=1
return	результат в виде массива ||| mixed	count=1
function_name	данные ассоциированные с ||| info	count=1
function_name	процесса ||| posix	count=1
function_name	текущего ||| mb language	count=2
namespace	соединение ||| pdo	count=1
arg_pair	строку экранированную обратными слешами ||| string $str	count=1
arg_pair	данных как из индексированного ||| int $dbase_identifier int $record_number	count=1
arg_pair	algorithms ||| string $first	count=1
arg_pair	за исключением ||| mixed $value	count=3
namespace	перемещает указатель directoryiterator ||| directoryiterator	count=1
namespace	ассоциативного или ||| function	count=1
function_name	получает записи из ||| get record	count=1
function_name	ошибки с ||| sqlite error string	count=1
function_name	ряду результата запроса ||| mysql fetch	count=1
namespace	с помощью oci_result() или ||| function	count=1
function_name	[function_name_1] версию сервера ||| [function_name_1] [function_name_2]	count=2
namespace	при работе в неблокирующем ||| gearmanworker	count=1
function_name	потока ||| stream	count=3
arg_pair	файловым описателем fd на ||| mixed $fd	count=1
function_name	список модификаторов ||| modifiers	count=1
namespace	значение ||| function	count=1
function_name	module_name ||| extension funcs	count=1
arg_pair	[arg_pair_1] возвращает ее ||| [arg_pair_2] [arg_pair_1]	count=3
return	[return] затронутых ||| [return]	count=1
arg_pair	региона соответствующей ||| string $region_code	count=1
namespace	указателя объекта ||| oci-lob	count=1
arg_pair	эллипс с центром ||| int $width	count=1
return	в виде массива ||| mixed	count=1
arg_pair	с ||| resource $statement	count=1
arg_pair	в приемлемые для ||| string $table_name	count=1
namespace	integer ||| function	count=1
namespace	value1 с ||| splheap	count=1
function	[function_name_1] записи из ||| [function_name_1] [arg_pair_2]	count=1
return	сохраняет png изображение ||| bool	count=1
namespace	haystack начиная ||| function	count=1
function_name	код статуса ||| code	count=1
return	альфа компонента ||| bool	count=1
arg_pair	находит первое вхождение ||| bool $before_needle string $encoding	count=1
return	для драйвера ||| string	count=1
namespace	работе в ||| gearmanworker	count=1
return	возвращает строку ||| string	count=1
arg_pair	адресу ||| int $revision_no	count=1
function_name	[function_name_1] обработчик ||| [function_name_2] [function_name_1]	count=1
namespace	метод recursivetreeiterator::valid() ||| recursivetreeiterator	count=1
arg_pair	или историю ||| int $limit	count=1
arg_pair	filename ||| string $filename mixed $data	count=1
function_name	в результате ||| ldap count	count=1
namespace	name из элемента ||| domelement	count=1
namespace	именем name ||| domelement	count=1
function_name	и директорий ||| svn ls	count=1
namespace	уровня либо если ||| function	count=1
arg_pair	содержащий все компоненты ||| string $url int $component	count=1
function_name	php используя встроенное изображение ||| php logo guid	count=1
arg_pair	куда ||| string $file int $line	count=1
function_name	сущности ||| entity	count=1
function_name	выполняет ||| syntax	count=1
function_name	выполняет ||| php check	count=1
function_name	запроса для ||| pg	count=1
function_name	репозитория и получает список ||| svn	count=1
function_name	списке аргументов ||| position	count=1
function_name	ошибки [function_name_2] ||| [function_name_1] [function_name_2]	count=1
function_name	группы ||| posix	count=1
function_name	строках ||| mb	count=1
function_name	сортировки и ||| sort	count=1
function_name	время ||| spl	count=1
function_name	получает записи из ||| dbase get	count=1
function_name	имя ||| name	count=11
return	ошибки ||| bool	count=1
function_name	читает большой объект ||| pg lo read	count=1
arg_pair	из переданного bzip2 ||| resource $bz int $length	count=1
arg_pair	http заголовками ||| string $path	count=1
function	эффектов наложения [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	операции ||| ldap count entries	count=2
function_name	utf-8 в [function_name_2] ||| [function_name_2] [function_name_1]	count=1
arg_pair	посылает сообщение электронной почты ||| string $message string $additional_headers	count=1
function_name	[function_name_1] сжатия изображения ||| [function_name_2] [function_name_1]	count=2
function_name	с ||| multi by key	count=1
function_name	specified distortion metrics ||| get image channel distortions	count=1
function_name	[function_name_1] параметры соединения ||| [function_name_1] [function_name_2]	count=3
function_name	выполняет проверку ||| php	count=1
function_name	и индексов ||| udiff	count=1
function_name	с заданным локальным ||| ns	count=1
function_name	в формате xbm изображения ||| imagexbm	count=1
function_name	название региона соответствующей ||| geoip region name	count=1
arg_pair	по url адресу репозитория ||| string $repos_url int $revision_no	count=1
function_name	и получает список ||| svn ls	count=1
function_name	в gnupg_setsignmode ||| sign	count=1
namespace	файлов и директорий опционально ||| function	count=1
function_name	[function_name_1] минимальную версию ||| [function_name_1] [function_name_2]	count=1
arg_pair	возвращает строку ||| string $charlist	count=1
function_name	функция создает экземпляр класса ||| create text node	count=1
function_name	сериализует объект ||| serialize	count=1
function_name	время рассвета для определенных ||| date sunrise	count=1
function_name	функция возвращает ||| get elements	count=1
return	конкретной ревизии ||| array	count=1
namespace	текущий элемент допустимое ||| limititerator	count=1
arg_pair	все вхождения search в ||| mixed $replace	count=2
function_name	контейнера объекты [function_name] ||| [function_name]	count=2
function_name	получить [function_name_2] ||| [function_name_2] [function_name_1]	count=6
function_name	следующую ||| read	count=1
return	url адресу репозитория ||| array	count=1
namespace	тех пор пока ||| pdo	count=1
function_name	кода ||| code	count=1
arg_pair	из символов с ||| string $string int $mode	count=1
arg_pair	регулярному выражению в многобайтной ||| string $pattern	count=1
namespace	кодировок ||| function	count=1
function_name	других xml ||| xml parser create	count=1
return	виде строки ||| string	count=2
function_name	задает текущее активное значение ||| set magic quotes	count=1
function_name	функция устанавливает опцию ||| set	count=1
function_name	может ли значение переменной ||| is callable	count=1
function_name	в mp3-файле ||| id3	count=1
arg_pair	строке haystack ||| string $needle	count=2
function_name	callback-функция __autoload() ||| spl autoload extensions	count=1
return	впервые вернет false ||| void	count=2
function_name	из репозитория в ||| svn export	count=1
function_name	идентификатор ||| set	count=1
arg_pair	replacement необходимо указывать callback ||| callable $callback	count=1
arg_pair	возвращает подстроку строки ||| mixed $needle	count=1
function_name	добавляет переданные в ||| array unshift	count=1
function_name	указанного ||| syntax	count=1
namespace	classics: implementing the ||| function	count=1
arg_pair	строку input ||| string $input	count=1
arg_pair	возвращает данные ||| resource $statement	count=1
return	текущую ||| bool	count=1
arg_pair	региона соответствующей страны ||| string $country_code string $region_code	count=1
arg_pair	в таблицу из массива ||| array $rows	count=1
namespace	фиксирует транзакцию возвращая соединение ||| pdo	count=1
function_name	по ключам в ||| krsort	count=1
function_name	позицию первого [function_name_2] ||| [function_name_2] [function_name_1]	count=8
namespace	содержание или ||| function	count=1
function_name	[function_name_1] значение гравитации ||| [function_name_2] [function_name_1]	count=1
function_name	задает текущее активное значение ||| runtime	count=1
function_name	репозитории ||| svn cat	count=1
function_name	версию расширения ||| version	count=1
function	экранирует спецсимволы [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
arg_pair	алгоритму описанному в programming ||| string $second	count=1
namespace	режиме ввода / ||| gearmanworker	count=1
namespace	подстроку строки ||| function	count=1
arg_pair	the worlds ||| string $first string $second	count=1
function	[function_name_1] строке haystack ||| [function_name_1] [arg_pair_2]	count=2
function_name	worlds best algorithms by ||| similar	count=1
arg_pair	меняет текущую директорию на ||| string $directory	count=1
function_name	сокета и сохраняет ||| socket create	count=1
function_name	статуса ||| add task status	count=1
function_name	устаревшей ||| deprecated	count=1
return	всю ||| bool	count=1
return	строках ||| mixed	count=1
function_name	сеанс curl и освобождает ||| curl	count=1
namespace	обработчик [namespace] пошлет ||| [namespace]	count=1
return	by oliver isbn 0-131-00413-1 ||| int	count=1
namespace	на заданную ||| function	count=1
function_name	filename проверяя ошибки ||| syntax	count=1
function_name	расширенный атрибут ||| xattr remove	count=1
function_name	закрывает файл указанный в ||| close	count=1
function_name	вернет временную зону ||| time zone by country	count=1
function_name	первое вхождение подстроки needle ||| strstr	count=1
function_name	страны соответствующий имени ||| code by name	count=1
arg_pair	подстрока needle встречается ||| string $needle	count=1
arg_pair	[arg_pair] столбцу ||| [arg_pair]	count=1
arg_pair	с данным смещением ||| int $max_matches int $cutoff	count=1
function_name	двух строк по ||| text	count=1
function_name	указанного календаря calendar ||| cal from jd	count=1
function_name	с встроенным обработчиком ошибок ||| error	count=1
arg_pair	базы данных mysql ||| resource $link_identifier	count=1
function_name	в кавычки если требуется ||| quote	count=1
function_name	возвращает данные ассоциированные ||| get info	count=3
return	преобразует число gmp в ||| int	count=1
function_name	локальных интерфейсах ||| create listen	count=1
return	файл дескриптор которого ||| resource	count=1
namespace	текущей позиции [namespace] ||| [namespace]	count=1
arg_pair	для парсера ||| bool $value	count=1
function_name	с высоким ||| high	count=1
function_name	действующим ресурсом сокета ||| socket connect	count=1
function	[function_name_1] str по ||| [arg_pair_2] [function_name_1]	count=1
function_name	с ||| delayed by key	count=1
namespace	на des [namespace] другого алгоритма ||| [namespace]	count=1
function_name	of a cubic bézier ||| ps curveto	count=1
arg_pair	в начало массива array ||| array $array	count=1
namespace	ли [namespace] в пространстве ||| [namespace]	count=1
function_name	в ||| entries	count=1
arg_pair	the worlds ||| string $second	count=1
arg_pair	проверяя ошибки в коде ||| string $error_message	count=1
function_name	sinh arg / cosh ||| tanh	count=1
function_name	обратный вызов статуса ||| status	count=1
function_name	заменяет [function_name_2] ||| [function_name_2] [function_name_1]	count=8
return	relaxng [return] документа основываясь ||| [return]	count=1
arg_pair	в отличие от strcmp() ||| string $str2	count=1
function_name	результате предыдущей операции поиска ||| count	count=1
arg_pair	y до начала ||| float $x float $y	count=1
arg_pair	bzip2 ||| int $length	count=1
namespace	активное значение настройки ||| function	count=1
function_name	в виде узла ||| node	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=497
function_name	spl [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function	вставляет [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=2
function_name	предыдущей операции поиска ||| count	count=1
namespace	или url ||| function	count=3
function_name	дочерние объекты ||| has children	count=1
namespace	число gmp ||| function	count=1
namespace	по алгоритму описанному в ||| function	count=1
arg_pair	y до начала координат ||| float $x float $y	count=1
function_name	oliver ||| similar text	count=2
arg_pair	[arg_pair] массив в ||| [arg_pair]	count=1
function_name	в юлианском летоисчислении в ||| jdtofrench	count=1
function_name	атрибут не существует или ||| get attribute	count=1
function_name	последнего вхождения подстроки needle ||| strrpos	count=1
function_name	копирования данных совершенных ||| copy	count=1
function_name	проверку ||| syntax	count=1
return	classics: implementing the ||| int	count=1
return	массив содержащий список ||| array	count=1
return	влияют на ||| void	count=1
function_name	производит анимацию изображения ||| images	count=1
function_name	регистрирует ||| register	count=2
namespace	изменяет ||| function	count=1
arg_pair	определенное строкой ||| string $connection_string int $connect_type	count=1
namespace	считывает ||| function	count=1
return	работе в неблокирующем режиме ||| bool	count=1
function_name	механизмов ||| mb	count=1
function_name	xml ||| xml set	count=4
arg_pair	by oliver isbn ||| string $first	count=1
arg_pair	by oliver isbn 0-131-00413-1 ||| string $second	count=1
function	[function_name_1] class ||| [function_name_1] [arg_pair_2]	count=2
namespace	с объектом imagick ||| imagick	count=1
arg_pair	заданного аргументом timestamp ||| int $format	count=2
namespace	качестве параметра ||| function	count=2
return	classics: ||| int	count=1
arg_pair	в участке разделяемой памяти ||| int $shmid	count=1
function_name	memcached::prepend() ||| prepend	count=1
function_name	алгоритму описанному ||| similar	count=1
arg_pair	oliver ||| string $first	count=1
function_name	возвращает объявленные классы ||| get declared classes	count=3
arg_pair	строк по алгоритму описанному ||| string $second	count=1
function_name	таблицы [function_name] ||| pg [function_name]	count=1
function_name	календаря с 4714 ||| gregoriantojd	count=1
function_name	эта ||| gmp	count=1
namespace	recursivecachingiterator который состоит ||| recursivecachingiterator	count=1
function_name	заменяет часть строки string ||| substr replace	count=1
function_name	удаляет функцию из spl ||| spl	count=1
function_name	[function_name_1] распакованном состоянии ||| [function_name_2] [function_name_1]	count=2
function_name	альфа ||| imagesavealpha	count=1
arg_pair	функция принимает [arg_pair] добавляет обратный ||| [arg_pair]	count=1
function_name	einer mime ||| iconv mime	count=1
namespace	если этот ||| function	count=3
function_name	встроенным обработчиком ошибок а ||| error	count=1
function_name	[function_name_1] цвет объекта ||| [function_name_1] [function_name_2]	count=1
arg_pair	базе данных используя ||| resource $connection	count=1
function_name	базой данных postgresql ||| pg	count=1
function_name	памяти в байтах ||| size	count=2
function_name	итератора массива который используемый ||| iterator	count=1
function_name	не безопасна для обработки ||| strcoll	count=1
namespace	тэга [namespace] в ||| [namespace]	count=1
namespace	задает текущее активное ||| function	count=1
return	массив типов ||| array	count=1
function_name	файла указанного в filename ||| syntax	count=1
namespace	[namespace] в ||| [namespace]	count=7
function_name	количество полей в результате ||| num fields	count=1
function_name	массива values ||| array combine	count=1
arg_pair	функция строит запрос по ||| bool $peg	count=1
namespace	данных в ||| pdo	count=1
arg_pair	его ключей функцию предоставленную ||| callable $key_compare_func	count=1
function_name	код страны соответствующий имени ||| by name	count=1
return	setting ||| bool	count=1
function_name	оставшуюся часть содержимого в ||| contents	count=1
return	транзакцию ||| bool	count=1
function	[function_name_1] заданного ||| [arg_pair_2] [function_name_1]	count=2
function	[function_name_1] также с ||| [arg_pair_2] [function_name_1]	count=3
namespace	содержит ли контейнер ||| splobjectstorage	count=1
function_name	sqlite ||| sqlite escape string	count=1
return	и директорий опционально ||| array	count=1
function_name	верификацию файла указанного ||| php	count=1
return	узел с заданным ||| domnode	count=1
function_name	ищет позицию первого ||| stripos	count=1
function_name	возвращает цвет объекта ||| get color	count=1
function_name	запрос по url адресу ||| svn ls	count=1
function_name	удалённом x ||| images	count=1
arg_pair	filtertype ||| resource $image int $filtertype	count=1
return	верификацию файла указанного ||| bool	count=1
return	haystack начиная ||| string	count=1
function_name	разбирает html документ ||| load htmlfile	count=1
arg_pair	для изменения информации сохранённой ||| string $filename array $tag	count=1
arg_pair	в строку [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=1
function_name	кодировку для [function_name_2] ||| [function_name_2] set [function_name_1]	count=1
function_name	в filename проверяя ||| php	count=1
return	значение ||| bool	count=1
function_name	завершает сеанс curl ||| curl close	count=1
arg_pair	домен domain для ||| string $message	count=1
namespace	из предоставленного ассоциативного или ||| function	count=1
function_name	узла ||| node ns	count=2
function_name	следующую запись в ||| zip read	count=1
function_name	функция идентична функции preg_replace() ||| preg	count=1
function_name	работает аналогично memcached::prepend() за ||| prepend by key	count=1
function_name	проверяя ошибки ||| syntax	count=1
function	[function_name_1] из ||| [arg_pair_2] [function_name_1]	count=1
function	сокета [arg_pair_2] ||| [arg_pair_2] [function_name_1]	count=1
function_name	запросов ||| eio	count=1
return	gmp число в строку ||| string	count=1
function_name	кодировок в строках ||| mb detect order	count=1
function_name	функция вернет временную зону ||| geoip time zone by country and	count=1
function_name	возвращает ||| get host	count=1
return	информацию альфа ||| bool	count=1
return	в filename ||| bool	count=1
arg_pair	имен namespaceuri с именем ||| string $namespaceuri	count=1
namespace	операции ||| function	count=1
function_name	вычисляет ||| similar	count=1
function_name	значение настройки ||| set magic quotes	count=1
arg_pair	используя truetype шрифт ||| string $fontfile string $text	count=1
function_name	путь ||| pathname	count=1
arg_pair	аргументы формируют время ||| int $minute	count=1
namespace	описанному в programming ||| function	count=1
arg_pair	из ||| resource $connection	count=1
function_name	закрывает соединение ||| close	count=1
arg_pair	в строку haystack ||| string $needle	count=2
return	адресу ||| array	count=1
function_name	этот ||| animate images	count=2
arg_pair	предыдущей ||| resource $link_identifier	count=1
arg_pair	возвращает целое [arg_pair] ||| [arg_pair]	count=3
function_name	механизмов автоматического определения ||| mb detect	count=1
namespace	транзакцию возвращая соединение с ||| pdo	count=1
arg_pair	b на число a ||| gmp $a gmp $b	count=1
function_name	устанавливает новое ||| offset set	count=1
function_name	считывает следующую запись ||| read	count=1
arg_pair	запрос ||| int $revision_no	count=1
namespace	текущее активное значение настройки ||| function	count=1
arg_pair	строку в кавычки если ||| string $string	count=1
function_name	rmdir() ||| rmdir	count=1
function_name	возвращает [function_name_2] ||| [function_name_2] [function_name_1]	count=88
function_name	активное значение ||| magic	count=1
function_name	несколько случайных значений ||| array rand	count=1
arg_pair	текущую директорию на заданную ||| resource $ftp_stream	count=1
return	метод ||| void	count=2
return	в юлианском ||| string	count=1
function_name	неразобранных объявлений ||| decl	count=1
function_name	отправляет произвольную ||| raw	count=1
arg_pair	домен domain для одного ||| string $domain string $msgid1	count=1
function_name	как правильные сложные слова ||| pspell config runtogether	count=1
arg_pair	аргументом timestamp ||| int $timestamp	count=2
function_name	содержимое ||| add from string	count=1
arg_pair	image ||| string $filename	count=2
function_name	удаляет ||| unset	count=1
arg_pair	функцией ldap_get_dn() и разбивает ||| string $dn int $with_attrib	count=1
function_name	[function_name_1] [function_name_2] директорию ||| [function_name_2] [function_name_1]	count=3
arg_pair	ссылающийся на него ||| string $separator	count=1
arg_pair	str в ||| string $str	count=1
function_name	ошибки ||| udm	count=1
namespace	подстроку ||| function	count=1
function	закрывает файл [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function	поиск соответствий [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=3
function_name	вывода ||| ob	count=2
arg_pair	[arg_pair_1] string ||| [arg_pair_1] [arg_pair_2]	count=1
arg_pair	атрибут property ||| string $property	count=1
function	из репозитория [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	определения кодировок в ||| mb detect order	count=1
return	the ||| int	count=1
function_name	ошибок а также ||| error	count=1
function_name	возвращает название региона соответствующей ||| geoip region name	count=1
arg_pair	файла ||| int $options	count=1
arg_pair	с ||| string $host	count=1
arg_pair	множественного числа в ||| string $msgid2	count=1
function_name	pathname ||| mkdir	count=1
function_name	составной оператор связанный с ||| get image compose	count=1
arg_pair	рисует текст ||| int $x int $y	count=1
namespace	целое ||| function	count=1
arg_pair	by ||| string $first string $second	count=1
function_name	и получает список ||| svn	count=1
namespace	value1 ||| splheap	count=1
function_name	параметре charlist ||| addcslashes	count=1
return	впервые вернет ||| void	count=2
function	[function_name_1] [arg_pair_2] ||| [function_name_1] convert encoding [arg_pair_2]	count=8
arg_pair	код региона ||| string $country_code string $region_code	count=1
function_name	utf-8 ||| pdf utf8	count=1
function_name	текущее активное ||| set magic	count=1
namespace	для механизмов автоматического определения ||| function	count=1
function	[function_name_1] определенное строкой ||| [function_name_1] [arg_pair_2]	count=3
return	переводит число ||| string	count=1
arg_pair	задает функцию ||| resource $parser	count=2
arg_pair	атрибут property в ||| string $property	count=1
arg_pair	number представленное в ||| int $frombase	count=1
namespace	возвращает подстроку строки ||| function	count=1
return	вывода заставляет обработчика ||| bool	count=1
arg_pair	[arg_pair] удалены ||| [arg_pair]	count=1
function_name	проверяет существует ли ||| property exists	count=1
function	[function_name_1] записи ||| [function_name_1] [arg_pair_2]	count=1
function_name	оставшуюся часть содержимого ||| contents	count=1
arg_pair	и до конца строки ||| mixed $needle	count=1
function_name	название ||| region name by	count=1
namespace	достигнут ||| splfileobject	count=1
arg_pair	неразличимых ||| int $domain int $type	count=1
arg_pair	количество дней с ||| int $day int $year	count=1
arg_pair	их в массиве fd ||| array $fd	count=1
function_name	результата mysql ||| mysql	count=1
function_name	права доступа ||| chmod	count=1
arg_pair	данных mysql ||| resource $link_identifier	count=1
arg_pair	указанного ||| string $name int $base_group_id	count=1
arg_pair	содержащую число number представленное ||| int $frombase	count=1
return	при ||| bool	count=1
function_name	отправлены ||| sent	count=1
function	[function_name_1] [arg_pair_2] диапазоне 0..255 в строке ||| [function_name_1] [arg_pair_2]	count=2
arg_pair	memcached::set() за исключением того ||| mixed $value int $expiration	count=1
function_name	название региона ||| name	count=1
function_name	данная функция ||| svn ls	count=1
arg_pair	ereg_replace() за ||| string $replacement	count=1
function_name	дескриптор задания который может ||| do	count=1
arg_pair	worlds best algorithms by ||| string $first	count=1
arg_pair	данная функция ||| string $repos_url int $revision_no	count=1
function_name	зону [function_name] ||| [function_name] timezone	count=1
function_name	итератор для текущего ||| iterator	count=1
function_name	файловой [function_name_2] ||| [function_name_2] [function_name_1]	count=1
function_name	не-wsdl режиме ||| soap client	count=1
arg_pair	[arg_pair_1] [arg_pair_2] ||| [arg_pair_1] [arg_pair_2]	count=90
function_name	текущее активное значение настройки ||| magic quotes	count=1
return	массив c доступными в ||| array	count=1
function	эффектов наложения [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
function_name	репозитория в ||| svn	count=1
function_name	задает ||| magic quotes	count=1
arg_pair	работает аналогично memcached::set() за ||| int $expiration	count=1
function_name	одной или нескольких настроек ||| options	count=1
namespace	системным временем [namespace] timestamp ||| [namespace]	count=1
function	отправляет произвольную [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
return	эта функция ||| int	count=1
arg_pair	работает аналогично memcached::replace() за ||| mixed $value int $expiration	count=1
function_name	родительский элемент текущего атрибута ||| element	count=1
arg_pair	является callback-функцией функции ob_start() ||| int $status	count=1
function_name	регистрирует ||| register shutdown function	count=1
function_name	подсчитывает сколько раз ||| count	count=1
function_name	каталог - прим.пер.) ||| delete name	count=1
return	ожидать задания от ||| bool	count=1
function_name	x сервере ||| animate images	count=1
arg_pair	локальным именем localname ||| string $namespaceuri string $localname	count=1
arg_pair	левый угол имеет координаты ||| resource $image int $x	count=1
return	массив уровней всех активных ||| array	count=1
function_name	строки завершения описания функции ||| end line	count=1
function_name	информацию о таблице ||| mysql list fields	count=1
arg_pair	callback ||| mixed $data	count=2
arg_pair	функции ||| string $contents	count=1
namespace	reflectionextension ||| reflectionextension	count=1
function_name	в результате ||| count	count=1
namespace	хранилище ||| spldoublylinkedlist	count=1
function_name	первый атрибут если ||| attribute	count=1
return	0-131-00413-1 ||| int	count=1
function_name	von einer mime kopfzeile ||| iconv mime	count=1
return	каталогом и переданный ||| void	count=1
function_name	списке определённых функций как ||| function	count=1
arg_pair	файл указанный в fd ||| mixed $fd int $pri	count=1
function_name	вернет порядковый номер поля ||| pg field	count=1
arg_pair	функцию в ||| callable $autoload_function	count=1
return	директорию на заданную ||| bool	count=1
arg_pair	опционально ||| int $revision_no	count=1
function_name	внутренний указатель в начало ||| rewind	count=1
return	если требуется ||| string	count=1
function_name	адресу ||| svn ls	count=2
namespace	конца строки ||| function	count=1
function_name	на заданную ||| chdir	count=1
function_name	значение настройки ||| magic quotes runtime	count=1
arg_pair	the ||| string $first	count=1
function_name	в других xml ||| xml parser create ns	count=1
arg_pair	включая его и до ||| string $haystack mixed $needle	count=1
function_name	worlds best algorithms ||| similar text	count=1
arg_pair	и директорий опционально для ||| string $repos_url int $revision_no	count=1
function_name	права доступа к ||| chmod	count=1
return	двух строк ||| int	count=1
function_name	пространства имен узла ||| lookup namespace	count=1
function_name	максимальную длину ||| max	count=1
arg_pair	возвращает ссылающийся на него ||| string $encoding string $separator	count=1
function_name	значения параметров string ||| mb	count=1
arg_pair	хранимые в участке ||| int $shmid	count=1
arg_pair	алгоритму описанному в ||| string $first string $second	count=1
arg_pair	memcached::replace() за исключением того ||| mixed $value int $expiration	count=1
function_name	метод производит анимацию ||| animate images	count=1
function_name	в ||| ldap count	count=1
namespace	и ||| function	count=6
namespace	который ссылается объект splfileinfo ||| splfileinfo	count=1
arg_pair	value1 с value2 ||| mixed $value1	count=1
namespace	xml полученный в последнем ||| soapclient	count=1
function_name	параметры для указанного ||| params	count=1
namespace	и переподключается если ||| function	count=1
return	и возвращает его адрес ||| string	count=1
arg_pair	его ||| string $haystack	count=1
function_name	указанного в filename проверяя ||| syntax	count=1
arg_pair	конкретной ревизии ||| string $repos_url	count=1
function_name	атрибут если ||| attribute	count=1
arg_pair	search ||| mixed $search mixed $replace	count=2
function_name	[function_name_1] ассоциированные ||| [function_name_2] [function_name_1]	count=1
namespace	запрашивает статус searchd ||| sphinxclient	count=1
return	двух ||| int	count=1
function_name	расстояние хэмминга ||| gmp hamdist	count=1
function_name	на заданную ||| ftp	count=1
function_name	автоматического определения кодировок ||| mb detect	count=1
function_name	так и из репозитория ||| svn	count=1
function_name	новый объект ||| construct	count=2
function_name	неразобранных объявлений сущностей для ||| set unparsed entity decl	count=1
function_name	кода ||| by code	count=2
function_name	анимацию изображения ||| images	count=1
arg_pair	число ||| resource $link_identifier	count=1
namespace	верификацию ||| function	count=1
arg_pair	заданном потоке stream ||| resource $stream	count=1
function_name	[function_name_1] пространства имён ||| [function_name_2] [function_name_1]	count=2
return	в строку применяя таблицы ||| string	count=1
namespace	внутри ||| pdo	count=1
function_name	задает текущее ||| quotes	count=1
namespace	или массив в котором ||| function	count=2
arg_pair	меняет текущую директорию на ||| resource $ftp_stream string $directory	count=1
function	[function_name_1] socket ||| [function_name_1] set option [arg_pair_2]	count=2
function_name	в programming classics: implementing ||| similar text	count=1
return	связанный с каталогом и ||| void	count=1
return	поток ||| void	count=1
function_name	считывает следующую запись в ||| zip	count=1
function_name	метод класса в ||| method	count=1
arg_pair	регулярному выражению ||| string $pattern string $option	count=1
function_name	возвращает максимальный объем ||| get peak	count=1
function_name	получает значение атрибута в ||| get attribute	count=1
arg_pair	имеет координаты ||| resource $image int $x	count=1
function_name	возвращая его ||| flush	count=1
function_name	текущую директорию на ||| ftp chdir	count=1
function_name	и переданный в ||| closedir	count=1
namespace	начиная с первого вхождения ||| function	count=1
function_name	является ли число простым ||| gmp prob prime	count=1
function_name	для удаления ||| dbase delete	count=1
arg_pair	находит первое вхождение подстроки ||| bool $before_needle	count=1
arg_pair	чисел a и b ||| gmp $b	count=2
return	по ||| void	count=1
namespace	если требуется ||| pdo	count=1
namespace	до тех ||| pdo	count=1
return	производит ||| bool	count=2
function_name	вывода возвращая его содержимое ||| flush	count=1
return	используемый ||| bool	count=1
return	виде ассоциативного массива ||| array	count=1
namespace	на файл [namespace] символическую ссылку ||| [namespace]	count=1
arg_pair	рисует прямоугольник с ||| int $y2 int $color	count=1
function_name	репозитория и получает ||| ls	count=1
function_name	объявляет атрибут с заданным ||| id attribute ns	count=1
function_name	ошибку сгенерированную последней ||| error	count=1
function_name	первый атрибут в данной ||| first attribute	count=1
function_name	ошибок а ||| error	count=1
function_name	функция пытается [function_name_1] [function_name_2] следующими способами: чтение настройки ||| [function_name_2] [function_name_1]	count=2
arg_pair	сжимает переданную ||| int $blocksize	count=1
function_name	метода __autoload() ||| spl autoload	count=1
function_name	календаря calendar ||| cal from jd	count=1
arg_pair	вычисляет расхождение в ||| array $array1 array $array2	count=1
function_name	переключает состояние бита интерлейсинга ||| imageinterlace	count=1
function_name	curl и ||| curl	count=2
arg_pair	полученного [arg_pair] помощью oci_fetch() ||| [arg_pair]	count=1
function_name	добавляет [function_name_2] ||| [function_name_1] [function_name_2]	count=12
arg_pair	или записываются в ||| resource $in resource $out	count=1
arg_pair	url адресу репозитория ||| string $repos_url int $revision_no	count=1
function_name	сжатого элемента ||| get packed	count=2
namespace	узел ||| domnode	count=2
function_name	возвращает имя поля ||| field name	count=2
function_name	magic.mime ||| mime content type	count=1
function_name	by theirself замечание : ||| disable view	count=1
function_name	best algorithms by ||| text	count=1
function_name	которых нет ||| except	count=1
function_name	данные ассоциированные с объектом ||| info	count=1
function_name	название [function_name_2] ||| [function_name_2] [function_name_1]	count=4
function_name	spl ||| spl	count=2
function_name	ширину [function_name_2] ||| [function_name_2] [function_name_1]	count=2
return	возвращает массив содержащий ||| array	count=1
arg_pair	опционально ||| string $repos_url	count=1
function_name	algorithms by ||| text	count=1
function_name	или ||| images	count=1
return	функция возвращает ||| string	count=1
function_name	ошибки с ||| error string	count=1
return	setting в ||| bool	count=1
return	в качестве ||| void	count=1
function_name	работает аналогично memcached::prepend() за ||| prepend	count=1
function_name	юлианском летоисчислении ||| jdtofrench	count=1
function_name	все записи ||| all	count=1
function_name	получает ||| get	count=49
namespace	строки подходящим для драйвера ||| pdo	count=1
function_name	[function_name_1] элемента архива ||| [function_name_2] [function_name_1]	count=6
namespace	текущую директорию на ||| function	count=1
arg_pair	возвращает ||| string $haystack mixed $needle	count=1
function_name	[function_name_1] клиента ||| [function_name_2] [function_name_1]	count=2
function_name	информацию о ссылке ||| linkinfo	count=1
namespace	или delete запросом ||| function	count=2
function_name	архива в распакованном состоянии ||| unpacked	count=1
arg_pair	параметрах seconds и ||| int $seconds	count=1
arg_pair	строки needle ||| int $offset	count=1
function_name	получение абсолютной величины ||| abs	count=1
arg_pair	возвращает имя ||| resource $result int $field_number	count=1
function_name	и превращает его ||| dom import simplexml	count=1
function_name	с низким приоритетом задачу ||| low	count=1
function_name	временную зону и код ||| time zone by country and	count=1
function_name	значение настройки ||| magic quotes	count=1
function_name	ресурсом сокета ||| socket connect	count=1
return	by ||| int	count=1
arg_pair	в результате предыдущей ||| resource $link_identifier	count=1
function_name	в ||| php check syntax	count=4
function_name	сокета и ||| socket create	count=1
function_name	выполняет ||| check	count=1
arg_pair	в json строку и ||| string $json bool $assoc	count=1
function_name	вернет порядковый номер поля ||| pg field num	count=1
function_name	установлено в gnupg_setsignmode ||| sign	count=1
function_name	возвращает значение гравитации ||| get image gravity	count=1
namespace	recursiveiteratoriterator::valid() впервые вернет false ||| recursiveiteratoriterator	count=1
function_name	зеркало [function_name] отражая ||| flip [function_name]	count=1
function_name	результате предыдущей ||| ldap count	count=1
function_name	аргументом ||| ftp	count=1
function	позицию первого [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=1
arg_pair	проверяет определен ||| bool $autoload	count=1
arg_pair	описанному в programming classics: ||| string $second	count=1
function_name	определения кодировок ||| detect	count=1
function_name	первое вхождение ||| mb strstr	count=1
arg_pair	бит с индексом index ||| int $index	count=1
arg_pair	угол имеет координаты ||| resource $image int $x	count=1
arg_pair	пару [arg_pair] ||| [arg_pair]	count=2
function	временную зону [arg_pair_2] ||| [function_name_1] [arg_pair_2]	count=2
function_name	экранирует спецсимволы в ||| pg escape	count=1
arg_pair	записи ||| resource $connection	count=1
arg_pair	преобразует ||| int $split_length	count=1
function_name	возвращает ||| get host info	count=1
return	первого вхождения ||| string	count=1
function_name	зарегистрированных потоков ||| stream	count=1
function_name	с помощью sphinxclient::addquery получает ||| run queries	count=1
function_name	возвращает короткое [function_name_2] ||| [function_name_2] [function_name_1]	count=1
return	пустую строку если ||| string	count=1
namespace	на каждый сервер ||| memcached	count=1
function_name	xor двух gmp чисел ||| gmp xor	count=1
function_name	возвращает ширину и высоту ||| get image	count=1
function_name	по алгоритму описанному в ||| text	count=1
function_name	директорий ||| svn ls	count=2
function_name	haystack начиная с первого ||| strstr	count=1
namespace	контейнер ||| splobjectstorage	count=2
function_name	которых нет в другом ||| except	count=1
return	производит верификацию файла ||| bool	count=1
function_name	арккосинус числа ||| acos	count=1
function_name	по умолчанию ||| default	count=3
function_name	php ||| php functions	count=2
function_name	by ||| text	count=1
function_name	количество полей в результате ||| mysql num fields	count=1
function_name	разделяемой памяти в байтах ||| size	count=1
arg_pair	задачу для ||| string $unique	count=3
return	и возвращает ||| string	count=1
function_name	для 99% пользователей ||| bson	count=1
function	[function_name_1] с ||| [function_name_1] bytea [arg_pair_2]	count=1
function_name	результате ||| ldap count entries	count=2
function_name	используемого ||| info	count=2
function_name	добавляет переданные в качестве ||| unshift	count=1
function_name	внутри строки подходящим ||| quote	count=1
return	директорию на ||| bool	count=1
arg_pair	значение ||| mixed $value	count=3
function_name	[function_name_1] пространстве ||| [function_name_1] [function_name_2]	count=1
function_name	gettext() ||| bind textdomain	count=1
arg_pair	url ||| string $repos_url int $revision_no	count=1
function_name	клиентскими библиотеками oracle ||| oci	count=1
function_name	в gnupg_setsignmode ||| gnupg sign	count=1
function_name	имени хоста ||| name	count=2
namespace	ожидать задания от ||| gearmanworker	count=1
arg_pair	текст string на заданных ||| string $string int $color	count=1
function_name	производит верификацию файла ||| check	count=1
function_name	в переменных vars ||| convert variables	count=1
return	получить имя файла ||| string	count=1
function_name	сохраняет png изображение ||| imagesavealpha	count=1
