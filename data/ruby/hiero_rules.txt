module	session for ||| jobmanager	count=1
arg	by forwarding ||| m include_private	count=1
function	create a list ||| file list	count=1
returnv	str with the ||| str	count=1
function	** ||| **	count=1
function	adds a special for ||| add special	count=2
function	have been provided ||| setup	count=1
function	options to be used ||| options	count=1
function	instance of class klass [function_1] [function_2] klass ||| [function_2] [function_1]	count=1
module	a login [module] ||| [module]	count=3
arg	mode linking ||| mode	count=1
module	a version from the ||| gem	count=1
arg	type ||| type	count=1
function	it doesn’t or if ||| ?	count=3
module	to rdoc ||| rdoc markup	count=2
module	[module] a level ||| rdoc markup [module]	count=1
module	:http#read_timeout and net ||| client	count=1
module	of bytes ||| openssl ssl	count=1
arg	[arg_1] using options ||| [arg_2] [arg_1]	count=1
module	response has a ||| net httpresponse	count=1
function	full [function_2] ||| [function_1] [function_2]	count=4
function	prepares the visitor ||| accept	count=4
function_arg	[function_1] src to ||| [arg_2] [function_1]	count=3
function	the stream is finished ||| stream end	count=1
module	and number of undocumented ||| stats	count=1
module	vector ||| vector	count=13
module	starts the cgi process ||| webrick cgi	count=1
function	encoding object ||| external	count=2
function	is in tomdoc format ||| tomdoc	count=1
function	[returnv_1] if ||| [returnv_1] close on exec [function_2]	count=1
function	for ||| default	count=1
function	define [function] in your ||| [function]	count=1
module	tobs ||| markup tobs	count=1
function	generated docs ||| sub	count=1
function	ipv4 address of ipv4 ||| ipv4	count=1
module	sets the default ||| module	count=1
function	user id functionality ||| sid available	count=1
module	represents @return edge the ||| resolver molinillo	count=1
module	state object ||| generator state	count=1
module	takes the first digit ||| smtp response	count=1
module	a ||| gemdependencyapi	count=1
function	returns a ||| generator	count=1
module	dependency will not always ||| gem dependency	count=1
function	[returnv_1] if ||| [returnv_1] equal [function_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] message column [arg_2]	count=1
arg	vector [arg] ||| [arg]	count=1
arg	nodes matching a given ||| path namespaces variables	count=1
module	the given fiddle ||| fiddle	count=1
arg	a string ||| str	count=1
function	switches the ||| by col or row	count=1
arg	object [arg] date ||| [arg]	count=1
module	extracts [module] ||| [module] context	count=1
arg	file_name which ||| file_name	count=1
arg	in container from ||| container	count=1
module	the files list ||| rdoc options	count=1
function	in non-blocking manner ||| accept nonblock	count=1
module	graph ||| gem resolver molinillo	count=1
module	level 5 rdoc :markup ||| rdoc markup formattertestcase	count=1
function_arg	erb [arg_2] ||| [arg_2] [function_1]	count=1
function	get ||| drburi	count=1
module	object if local ||| drb drbobject	count=1
function	if supplied will ||| new	count=1
module	off ||| codeobject	count=1
function_arg	this method removes [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	string representing ||| string to s	count=3
module	ri data for ||| store	count=1
module	the last list ||| optionparser	count=1
arg	realm to [arg_2] ||| passwd [arg_1] user [arg_2]	count=1
arg	path matches against pattern ||| pattern path flags ) → (true or false	count=1
returnv	vector[] [returnv] ::elements to ||| [returnv]	count=1
function	[function_1] modules ||| [function_2] [function_1]	count=2
arg	[arg] keys but ||| [arg]	count=2
module	[module] the product ||| [module]	count=2
function	parse the yaml ||| parse	count=1
function	if stat [function_2] ||| [function_2] [function_1]	count=6
arg	match tuple ||| tuple	count=2
function_arg	[function_1] ref ||| [function_1] uri [arg_2]	count=1
module	this file ||| rdoc toplevel	count=1
function	return a hash ||| hash	count=1
arg	data [arg] into ||| [arg]	count=1
function	returns the integer representation ||| to i	count=1
module	markup class ||| rdoc markup attributemanager	count=1
returnv	creating the symbol ||| symbol	count=1
function	adds ||| add ?	count=2
module	provided or that a ||| drb drbsslsocket sslconfig	count=1
arg	of nodes matching a ||| namespaces variables	count=1
function	find and ||| find	count=1
module	provided or that a ||| drb drbsslsocket	count=1
arg	whether this dependency which ||| dependency	count=1
module	a password from ||| httpauth htpasswd	count=1
module	html ||| rdoc	count=1
function	[returnv_1] if ||| [returnv_1] mountpoint [function_2]	count=1
arg	op of ||| op x	count=1
arg	file at path ||| path	count=3
module	nil ||| array	count=1
function	if the real ||| ?	count=1
arg	::capture3 captures the standard ||| cmd stdin_data: '' binmode: false	count=1
module	returns the length and ||| stats	count=1
arg	and other_time are ||| other_time	count=1
function_arg	less than [arg_2] ||| [arg_2] [function_1]	count=1
module	the [module] :store ||| [module] parser	count=1
module	generators ||| rdoc	count=1
module	the ||| markup tordoc	count=4
arg	for the given scheme ||| scheme	count=1
function	which wraps [function] trusted ||| trust [function]	count=1
arg	the specified [arg_2] ||| [arg_2] [arg_1]	count=4
module	case which needs to ||| markup formattertestcase	count=1
returnv	next [returnv] in the ||| [returnv]	count=1
module	have been provided or ||| drbsslsocket sslconfig	count=1
function	[function] element ||| [function]	count=2
function	list of generators ||| generator	count=1
function	the parameters of ||| params	count=1
function	specifies vi ||| vi	count=1
module	stat is ||| file stat	count=4
function	the path to ||| cert path	count=1
function	single gem ||| one gem	count=2
module	attribute eg ||| attribute	count=1
module	block form ||| requestset	count=1
arg	other is subset ||| other	count=1
module	attempts to ||| thread	count=1
function	parse each ||| parse	count=1
module	are ||| openssl ssl sslsocket	count=2
function	isn’t or if ||| ?	count=2
returnv	the symbol ||| symbol	count=1
function_arg	[function_1] isapop ||| [function_1] [arg_2]	count=2
module	:dependencyrequest ||| requirementlist	count=1
function	in <openssl/objects ||| sn	count=1
arg	as usual file object ||| mode: 0 options	count=1
function	a git ||| git	count=1
arg	[arg] path ||| [arg]	count=3
arg	the method identified by ||| args...	count=2
function	accept_list_item_start_number ||| list item start number	count=1
module	unless ||| gem	count=1
function	sets the last win32 ||| win32 last	count=1
module	file lists have redundancies ||| specification	count=1
function	file is added ||| file	count=1
function	allow connections from ||| allow	count=1
arg	filename for its ||| filename	count=1
function	disable ssl for ||| disable ssl	count=1
function	set the default ||| default	count=4
module	the spec for downloading ||| gem	count=1
module	data in that buffer ||| zlib zstream	count=1
function	search for ||| search for	count=2
function	with one of the ||| with	count=1
module	json text ||| json	count=2
function	tcp/ip [function] ||| tcp [function]	count=1
module	the ||| markup	count=8
arg	in specs ||| specs	count=2
function	profile data hashes ordered ||| data	count=1
module	generated docs will ||| generator darkfish	count=1
returnv	this [returnv] you probably ||| [returnv]	count=1
module	and the digest is ||| openssl digest	count=1
function	a formatted backtrace to ||| backtrace	count=1
function	define method ||| def	count=1
module	don’t already ||| darkfish	count=1
function	json string by converting ||| json	count=3
arg	socket connected [arg] using unix ||| [arg]	count=1
function_arg	[function_1] of ||| [arg_2] [function_1]	count=4
module	this method sends ||| net smtp	count=1
arg	address port ||| address port	count=2
arg	in text ||| text	count=1
function	[returnv_1] if ||| [returnv_1] quirks mode [function_2]	count=3
function	extracts [function_2] ||| [function_1] [function_2]	count=2
function	for [function_2] ||| [function_1] [function_2]	count=5
module	for html ||| tohtml	count=1
function_arg	special [arg_2] ||| [arg_2] [function_1]	count=2
arg	scripts to ||| filename bindir	count=1
function	data store to disk ||| generate	count=1
function_arg	contains [arg_2] ||| [arg_2] [function_1]	count=5
module	constructor @param parent if ||| parent	count=1
function	string matches rubygems’ requirements ||| correct	count=1
function	of extra [function_2] ||| gem command [function_1] [function_2]	count=1
arg	reference ||| reference	count=1
module	:sslprivatekey have been provided ||| drb	count=1
function	some typical rfc 2822 ||| rfc2822	count=1
function	[function_1] socket ||| [function_1] [function_2]	count=1
module	by :enddoc ||| codeobject	count=1
module	unless the ||| testcase	count=1
module	using that name ||| makemakefile	count=1
module	an instance ||| module	count=1
module	this node ||| psych nodes node	count=1
module	use a availableset as ||| availableset	count=1
module	for this rdoc store ||| rdoc store	count=4
module	prepares ||| rdoc markup tohtml	count=5
module	constructing new struct ||| struct	count=1
module	list of files so ||| gem specification	count=1
function	adds ||| accept block quote	count=1
module	with ||| testcase	count=1
function	[function_1] template ||| [function_1] [function_2]	count=2
arg	true if [arg] ||| [arg]	count=1
module	class << ||| singleclass	count=1
function	[function_1] suppressed ||| [function_2] [function_1]	count=1
function	the next token ||| next token	count=2
function	[returnv_1] [function_2] for the ||| [returnv_1] [function_2]	count=4
function	the next ||| peek	count=1
function	returns the ||| to io	count=1
module	pop3 ||| pop3	count=2
function	use by the marshal ||| marshal	count=1
function	the raw ||| raw	count=2
function	the documented modules sorted ||| get sorted module	count=1
arg	significant digits in ||| digits	count=1
arg	[arg_1] and includes ||| [arg_1] [arg_2]	count=3
function	private instance ||| private instance	count=2
module	handshake ||| openssl ssl sslsocket	count=2
function_arg	value of fix is [function_1] [arg_2] ||| bool [function_1] [arg_2]	count=1
module	rows for index ||| csv table	count=1
function	user can ||| dir	count=1
function	request is ||| implicit ?	count=1
arg	date object [arg] ||| [arg]	count=1
module	for gemspec ||| gem	count=1
function	the ssl parameters ||| ssl params	count=2
arg	given types ||| types func	count=1
function	[function_1] specs in ||| [function_1] [function_2]	count=1
function	a ||| data	count=1
function	live in if ||| gen	count=1
function	turned off ||| start	count=1
function	string ||| s	count=1
function	returns true if ||| bool saturday ?	count=1
module	will live in if ||| rdoc	count=1
module	the other parameters ||| drbsslsocket	count=1
module	analysis and ||| basicspecification	count=1
module	of the [module] used ||| gem [module]	count=1
arg	file to the ||| cmd file	count=1
arg	is a singleton context ||| singleton	count=1
function	[function_1] gem version ||| [function_2] [function_1]	count=2
function_arg	ruby [arg_2] ||| [arg_2] [function_1]	count=1
function	tracing object [function_2] ||| [function_1] [function_2]	count=4
module	in this context ||| rdoc context	count=3
function_arg	no handler [arg_2] ||| [arg_2] [function_1]	count=1
function	path to the gem ||| gem	count=1
function	from comment if ||| parse comment tomdoc	count=1
function	[returnv_1] if ||| [returnv_1] re exchangeable [function_2]	count=1
module	will output html-safe labels ||| markup tolabel	count=1
arg	from given str ||| str	count=1
function	local ||| variable	count=1
arg	ln_s(old new options ||| src dest options	count=2
function	contains the ||| member	count=2
module	marking up ||| generator markup	count=1
function	[returnv_1] [function_2] corresponding to proc body ||| proc [returnv_1] [function_2]	count=1
function	program ||| program	count=2
function	if self [function_2] ||| [function_2] [function_1]	count=5
function	and [function] requests are ||| do [function]	count=1
function	loads ||| irb load	count=1
arg	containing parts indented with ||| parts	count=1
function	while the ||| while	count=1
returnv	true if this ||| bool	count=2
arg	outputs [arg] to ||| [arg] out	count=1
arg	signing_key and signing_cert using ||| signing_key signing_cert age extensions serial	count=1
function	parses an ||| parse	count=3
returnv	using [returnv] method ||| [returnv]	count=1
arg	tag tag ||| tag	count=1
module	in conflict with ||| resolver conflict	count=1
function	the ||| list item	count=4
function	a new a for ||| new	count=1
module	drbobject ||| drbobject	count=1
module	visitor for ||| totableofcontents	count=1
function	parameters and body ||| method params and body	count=1
arg	is ||| num args...	count=1
function_arg	[function_1] webrick ||| [arg_2] [function_1]	count=2
function	truncated to an ||| i	count=1
function_arg	matching [arg_2] ||| [function_1] [arg_2] check_load_path	count=1
function	repeatedly [function] ||| wait [function]	count=6
module	:notifier ||| notifier	count=1
function	expect full [function_2] ||| [function_1] [function_2]	count=2
module	json #max_nesting = ||| json ext	count=1
function	has a private ||| private	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] map_name	count=9
function	returns true [function_2] ||| [returnv_1] deletable [function_2]	count=4
function	ipv4 ||| ipv4	count=4
module	adds ||| net imap	count=2
module	will this response ||| httpresponse	count=1
function	by ||| dir	count=1
function	[function_1] paragraph from ||| [function_1] [function_2]	count=1
module	encoding ||| io	count=1
function	the setuid bit set ||| setuid	count=2
module	object instead of ||| toplevel	count=1
function	for ||| item start	count=4
function	there [function] ||| [function]	count=1
function	the visitor tests ||| visitor tests	count=2
module	against the [module] :parser regexp ||| [module]	count=1
function	cache template ||| template	count=1
module	raw version string not ||| version	count=1
module	create a drb :drbsslsocket ||| drb drbsslsocket	count=1
arg	::capture3 captures the ||| cmd stdin_data: '' binmode: false opts	count=1
function	out that ||| out	count=1
arg	determines the block ||| single tk method	count=1
module	of multiple rdoc :markup ||| rdoc	count=1
function	which the given ||| reject	count=1
function	the json ||| to json	count=1
function	within the library ||| library	count=1
function_arg	[function_1] buffer string ||| [arg_2] [function_1]	count=4
module	it to the pager ||| rdoc ri driver	count=1
function	range ||| range	count=2
arg	of subject and the ||| subject	count=1
module	and waits if ||| mutex	count=1
rep	[module_1] [function_arg_2] ||| [module_1] remove [function_arg_2]	count=3
module	the object ||| drb drbobject	count=1
function	local address ||| local address	count=1
function	loopback ||| loopback ?	count=1
arg	given command [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] rows ||| [arg_2] [function_1]	count=1
function	returns true [function_2] ||| [returnv_1] start with [function_2]	count=1
function	returns true [function_2] ||| [returnv_1] return headers [function_2]	count=1
arg	given representation ||| string comp	count=2
module	array of nametuple objects ||| gem nametuple	count=1
module	the ||| drbsslsocket sslconfig	count=2
module	the visitor for ||| tohtml	count=2
module	number of bytes ||| openssl ssl	count=1
function	[returnv_1] if ||| [returnv_1] value [function_2]	count=1
module	requested gem ||| gem resolver	count=1
function	[returnv_1] locale ||| [function_2] [returnv_1]	count=1
arg	the n by n ||| n zero one	count=1
function	with hax ||| create	count=1
function	find a gem ||| find	count=1
function	prepares the ||| list item	count=4
function	gems to a ||| platform	count=1
function	args [function_2] ||| [function_2] [function_1]	count=3
function	upper ||| upper	count=1
module	the last list ||| optparse	count=1
function	module of ||| modules	count=1
function	removes the token listener ||| remove token listener	count=1
arg	[arg_1] arg ||| [arg_2] [arg_1]	count=8
module	myclassname ||| rdoc	count=1
module	remote ||| net ftp	count=1
function_arg	[function_1] anchor ||| [arg_2] [function_1]	count=2
function	[returnv_1] [function_2] the method object ||| unboundmethod [returnv_1] [function_2]	count=1
module	ensures that ||| drb	count=1
function	for the port ||| set port	count=1
arg	with both [arg] and a ||| [arg]	count=2
module	rdoc ||| rdoc ri	count=2
function	returns the version ||| version for	count=1
module	current token to ||| markup	count=1
module	to this ||| rdoc	count=2
module	if ||| rdoc	count=1
module	translates raw text into ||| rdoc i18n text	count=1
module	string ||| openssl random	count=2
function	are used for development ||| development	count=1
rep	downloads [function_arg_2] ||| [module_1] [function_arg_2]	count=6
module	this method ||| smtp	count=1
module	pstore object pass ||| pstore	count=1
module	parameters ||| drbsslsocket	count=1
arg	by running ||| env command... options	count=1
function_arg	the given name ||| key ? name	count=2
function	returns true [function_2] ||| [returnv_1] ascii only [function_2]	count=4
arg	is valid [arg] ||| chain [arg]	count=2
arg	[arg] column while ||| message column [arg]	count=1
module	serialized configuration using to_s ||| openssl config	count=1
module	location of ri data ||| ri	count=1
function	[function_1] [function_2] ||| [function_2] dependency [function_1]	count=2
function	[function_1] files ||| [function_1] [function_2]	count=1
function	the ||| accept list item	count=4
module	random integer ||| random	count=1
module	command and ||| net imap	count=1
function	value pair ||| delete	count=1
arg	scheme if one is ||| scheme	count=1
module	json to ||| json	count=1
function	close on ||| close on	count=2
arg	date using date ||| date now	count=1
arg	[arg_1] and comment ||| [arg_1] [arg_2]	count=8
function_arg	the requirement [arg_2] ||| [arg_2] [function_1]	count=1
arg	for sockaddr ||| sockaddr flags	count=2
arg	the threads to wait ||| threads	count=1
function	a paragraph from the ||| paragraph	count=1
module	if local ||| drb	count=1
function	the basic list of ||| basic word	count=1
returnv	the ||| instance	count=2
function	a bubblebabble encoded form ||| bubblebabble	count=1
function	true [function_2] ||| [returnv_1] none [function_2]	count=1
arg	safe - [arg_2] ||| [arg_1] [arg_2] rem	count=1
module	unmatched ||| context	count=1
module	entry ||| entry	count=10
arg	to maxlen bytes from ||| maxlen flags outbuf opts	count=1
function	original name ||| name	count=1
function	the profiler ||| profile	count=2
arg	and prefix to send ||| level prefix	count=1
function_arg	[function_1] question ||| [function_1] [arg_2]	count=3
function_arg	[function_1] http query ||| [function_1] [arg_2]	count=1
module	with a rdoc :markup ||| rdoc markup formattertestcase	count=1
function	[function_1] tracing ||| [function_2] object allocations [function_1]	count=1
function	returns the hyperbolic tangent ||| tanh	count=1
function	private instance [function_2] ||| [function_2] [function_1]	count=1
module	when the first instance ||| syslog	count=1
module	returns a ||| openssl ssl sslcontext	count=1
module	by stou stor ||| net ftp mlsxentry	count=1
function_arg	[function_1] version ||| [function_1] [arg_2]	count=4
function	open a ||| open	count=2
returnv	or ||| instance	count=1
module	rdoc :markup ||| rdoc ri driver	count=1
function	valid ||| valid civil	count=1
function	server on ||| server loop	count=2
function	deletes the given ||| delete	count=2
function	case equality—returns ||| ===	count=1
function	scans content [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] content options ||| [arg_1] [arg_2]	count=2
module	prepares the ||| rdoc markup totableofcontents	count=1
function	log a ||| log	count=1
module	adds ||| rdoc markup attributemanager	count=1
function_arg	creates [function_1] [arg_2] ||| socket [function_1] loop [arg_2]	count=1
function	[function] initializes ||| [function]	count=1
function	[function_1] after another ||| [function_1] [function_2]	count=1
module	current severity level allows ||| logger	count=1
module	specification that contains ||| specification	count=1
function	they ||| gen	count=1
function_arg	[function_1] of meth ||| [arg_2] [function_1]	count=4
function	load a ||| load	count=1
arg	[arg] as json ||| [arg]	count=5
function	[function] http header ||| [function]	count=3
function_arg	evaluates the [arg_2] ||| [function_1] [arg_2]	count=4
function	of the remote ||| drburi	count=1
module	prepares the visitor ||| rdoc markup tohtml	count=3
returnv	children returning [returnv] pid/status ||| [returnv]	count=1
arg	extensions for ||| extensions serial	count=1
arg	true [arg] is ||| [arg]	count=1
function	[function_1] constant that ||| [function_1] [function_2]	count=1
module	command with ||| command	count=1
arg	klass service [arg_2] ||| [arg_2] [arg_1]	count=2
function	scans content ||| do classes	count=1
module	reconstruct the same specification ||| gem specification	count=1
arg	to path which ||| path	count=1
module	is ||| state	count=1
module	list of ||| rdoc options	count=1
function	options to the option ||| options	count=1
function	positive intermediate reply 3xx ||| continue ?	count=1
arg	to maxlen bytes from ||| maxlen flags	count=2
function	passing it any arguments ||| public send	count=1
module	for index generation ||| gem indexer	count=1
arg	just the text ||| text	count=1
function	setter for the ||| setter	count=1
module	object if local ||| drbobject	count=1
module	mask ||| syslog macros	count=1
returnv	first [returnv] in the ||| [returnv]	count=1
module	xmlrpc :modrubyserver ||| xmlrpc modrubyserver	count=1
module	the ||| net	count=1
module	session’s ||| cgi session	count=1
returnv	:redo :retry :next :return ||| symbol	count=1
function	array containing the values ||| values at	count=1
function_arg	[function_1] isapop is ||| [arg_2] [function_1]	count=2
arg	the status [arg_2] ||| [arg_1] [arg_2]	count=2
function	a cache template for ||| template for	count=1
function	self to utf-8 ||| toutf8	count=1
module	each ||| xmlrpc xmlwriter	count=1
module	server listening on ||| server	count=1
function	a header ||| header	count=2
arg	given base_directory to the ||| base_directory	count=1
function	image [function] in the ||| [function]	count=1
function	label list ||| list item start	count=1
module	to send to irb ||| irb	count=1
function	pager program to ||| pager	count=1
module	row access returning ||| csv table	count=1
module	representation of fix ||| fixnum	count=1
module	the ||| tomarkdown	count=1
function	response as a ||| response	count=1
function	given http ||| request	count=1
module	the visitor ||| markup	count=7
arg	that will have num_files ||| store num_files verbosity	count=1
module	converter ||| converter	count=1
arg	requirements ||| requirements	count=2
module	@param parent if ||| parent	count=1
arg	from parts and ||| parts	count=1
module	by constructing new exception ||| exception	count=1
function	to ||| accept block	count=1
module	<< myclassname ||| rdoc singleclass	count=1
function	treat ||| values at	count=1
function	tests to your ||| tests	count=1
arg	name and ||| name	count=3
module	was terminated ||| localjumperror	count=1
module	create a [module] ||| [module]	count=3
module	subsequently defined ||| module	count=1
returnv	end of string ||| string	count=2
arg	evaluation order of ||| order	count=1
module	initiates an ssl/tls handshake ||| openssl ssl sslsocket	count=1
function	or ||| for	count=2
returnv	to the hash ||| hash	count=3
returnv	methods ||| self	count=1
arg	containing ||| ary	count=1
module	[module] is documented ||| [module]	count=2
module	an ||| converter	count=1
module	as the ||| parent	count=1
function	which [function] ||| [function]	count=3
function_arg	[function_1] stream unused ||| [arg_2] [function_1]	count=2
module	todo deprecate and ||| testcase	count=1
arg	tomdoc-format text ||| text	count=1
arg	the platform ||| platform	count=1
module	sends ||| net smtp	count=2
function	[function] for ||| explicit [function]	count=3
function_arg	modulo [arg_2] ||| [function_1] big [arg_2]	count=1
module	with ||| rubyvm instructionsequence	count=1
returnv	[returnv] the compiled ||| [returnv]	count=2
returnv	for this ||| fixnum	count=1
module	reporter ||| streamui	count=7
module	accept_hard_break ||| rdoc markup hardbreak	count=1
module	output through ||| rdoc	count=1
module	symbol ||| symbol	count=3
arg	for tag ||| tag	count=1
function_arg	the existing [arg_2] ||| [function_1] [arg_2]	count=1
arg	nodes matching a given ||| namespaces variables	count=1
returnv	[returnv] when ||| [returnv]	count=1
function	the command line by ||| config	count=1
arg	safe - boolean ||| safe	count=1
module	specification is ||| specification	count=1
module	with ||| drbsslsocket sslconfig	count=2
function_arg	[function_1] includes other ||| sourcelist bool [function_1] [arg_2]	count=2
arg	following tk setting ||| single tk	count=1
function	ri ||| ri	count=1
arg	generator “darkfish” or ||| generator	count=1
function	[returnv_1] [function_2] ||| [returnv_1] superset [function_2]	count=4
arg	the given certificates store ||| certificates store	count=1
function	will wait [function] but does ||| [function]	count=1
arg	given port ||| port	count=1
function	json ||| to json	count=1
function	[function] others ||| world [function]	count=4
arg	at x y ||| x y	count=2
arg	of name from the ||| name	count=2
arg	wraps source and moves ||| source	count=1
module	use with analysis and ||| gem basicspecification	count=1
module	that ||| drbsslsocket sslconfig	count=4
arg	the named generator “darkfish” ||| generator	count=1
function	the protected [function_2] ||| [function_1] [function_2]	count=2
function	is [function_2] ||| [function_2] nz [function_1]	count=1
module	summary table passing each ||| optionparser list	count=1
returnv	it ||| obj	count=1
arg	options may ||| options	count=1
function	[function_1] writer stream ||| [function_1] [function_2]	count=2
arg	size bytes of ||| size	count=1
function	a space before ||| space before	count=2
arg	prompt ||| prompt	count=1
module	threadswait ||| threadswait	count=1
function	and body ||| and body	count=2
function	retrieves a cache template ||| template	count=1
arg	rows ||| rows	count=1
arg	of the mailbox to ||| mailbox	count=1
module	creates ||| rdoc markup preprocess	count=1
module	the [module] bounds ||| [module]	count=1
arg	c pointer addr ||| addr	count=1
function	expect full paths in ||| full paths	count=1
function	an ||| email	count=1
function	is a source ||| ?	count=1
function	[function_1] single gem ||| [function_1] [function_2]	count=1
function	parse each file ||| parse	count=1
arg	contents of hash ||| hash	count=1
module	been provided ||| drbsslsocket sslconfig	count=1
function	record for the search ||| record	count=1
function	tcp/ip [function_2] ||| [function_1] [function_2]	count=1
arg	given begin [arg_2] ||| [arg_1] end [arg_2]	count=1
arg	tk ||| tk	count=3
arg	directory dir ||| dir options	count=1
module	edge represents @return ||| gem resolver molinillo dependencygraph	count=1
function	returns all but the ||| dirname	count=1
arg	a meta-programmed ||| single tk comment	count=1
module	the other parameters ||| sslconfig	count=1
function	path to the file ||| file	count=1
module	grab the ||| thread	count=1
function	[function_1] gem name ||| [function_2] [function_1]	count=3
function	adds a development dependency ||| add development dependency	count=1
function	[function_1] hash self ||| [function_1] [function_2]	count=6
function	relative path [function_2] ||| [function_2] [function_1]	count=2
module	to this platform? two ||| gem platform	count=1
function	:“” or ||| empty	count=1
module	first instance is created ||| logger	count=1
function	as delegator [function_2] ||| [function_2] [function_1]	count=2
module	a parser that ||| parser	count=1
function	optionally up to length ||| slice !	count=1
function	session and deletes all ||| delete all	count=1
function	available via ||| current	count=1
function	[returnv_1] if ||| [returnv_1] sticky [function_2]	count=1
arg	meth ||| single meth added_container	count=1
module	to a set of ||| gem requestset gemdependencyapi	count=1
returnv	[returnv] insecure private ||| [returnv]	count=6
function	method ||| alias method	count=1
function	a constant ||| const get	count=1
arg	for ||| &handler;	count=1
module	this tar entry a ||| gem package tarreader entry	count=2
arg	version ||| version options	count=1
function	signal a break ||| break	count=2
function	commands irb ||| commands	count=1
module	nil if this method ||| unboundmethod	count=1
module	database ||| httpauth	count=1
function	prepares the ||| item start	count=4
module	hax todo ||| testcase	count=1
arg	as ||| &block;	count=1
module	row read ||| zlib gzipreader	count=1
function	as a json string ||| to json	count=1
module	pass ||| rdoc	count=1
function	server? ||| here	count=1
function	the #page_dir to ||| page dir	count=1
module	this platform? ||| platform	count=2
returnv	constructs a ||| instance	count=1
arg	private key ||| key	count=1
module	new [module] object ||| [module]	count=1
arg	if the value ||| value	count=1
module	examine [module] ||| [module]	count=3
module	command [module] alter ||| [module]	count=1
function	true if whitespace ||| whitespace	count=1
returnv	information about the group ||| group	count=1
module	option name as an ||| option	count=1
module	contains [module] or ||| [module]	count=1
function_arg	[function_1] tuple ||| [function_1] [arg_2]	count=2
function	start a document ||| document	count=1
module	list and associates ||| optionparser list	count=1
module	singleton class class << ||| rdoc singleclass	count=1
function	loads the given file ||| load file	count=1
arg	user for the #auth_type ||| user reload_db	count=1
arg	found klasess and includes ||| name found klasses includes	count=1
arg	the scripts ||| filename bindir	count=1
function	adds pages to ||| pages	count=1
module	server if one ||| net	count=1
function	[function_1] as delegator ||| [function_2] [function_1]	count=1
module	every environment variable value ||| env	count=1
function	serialized ||| marshal load	count=2
module	rdoc task with ||| rdoctask	count=1
function	remove everything in the ||| remove specs unsatisfied by	count=1
function	addrinfo [function] form ||| [function]	count=1
function	documentation unless documentation ||| start	count=1
function	input characters ||| input	count=1
arg	[arg_1] options ||| [arg_1] [arg_2]	count=13
returnv	given returns the ||| string	count=1
function	returns true [function_2] ||| [returnv_1] symlink [function_2]	count=2
returnv	seconds since the epoch ||| a_rational	count=1
function	[function] initializes the ||| [function]	count=1
arg	[arg] and ||| dep [arg] from_version	count=1
arg	named generator ||| generator	count=1
module	dsa ||| dsa	count=1
function	mode ||| mode	count=6
module	constructs a ||| gem version	count=1
function	get all gem version ||| get all gem names and versions	count=1
function	returns the po ||| to s	count=1
module	which file types this ||| rdoc	count=1
module	uri :mailto object from ||| uri mailto	count=1
module	[module] will ||| [module]	count=1
function	serial number of ||| serial	count=1
rep	stream which [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	modulus [module] numbers ||| [module]	count=1
module	consuming ||| markup tohtmlsnippet	count=1
function	tcp/ip [function_2] ||| [function_2] [function_1]	count=1
module	sets ||| webrick utils	count=1
returnv	returns number ||| integer	count=1
function	an ssl ||| ssl	count=1
module	prepares the ||| markup	count=7
function	[returnv_1] if ||| [returnv_1] pipe [function_2]	count=2
function	user can then use ||| dir config	count=1
module	feed or ||| atom feed	count=1
returnv	and returns ||| string	count=1
function_arg	[function_1] for address ||| [arg_2] [function_1]	count=6
arg	[arg_1] [arg_2] ||| [arg_2] proc [arg_1]	count=7
module	create the ||| rdoc	count=1
function_arg	[function_1] [arg_2] ||| [function_1] methodname [arg_2]	count=3
function_arg	a class named ||| class class_type	count=1
function	to row ||| row	count=1
function	the request is ||| implicit ?	count=1
arg	of event ||| event tuple sec	count=1
module	unresolved dependency not ||| unsatisfiabledependencyerror	count=1
function	[function_1] current match ||| [function_1] [function_2]	count=10
arg	[arg_1] matches ||| [arg_1] [arg_2] ) → (true or	count=4
function	installed [function_2] ||| [function_2] [function_1]	count=2
function	siginfo handler ||| siginfo handler	count=2
function	host ||| host	count=2
module	represented as [module] ||| [module]	count=1
function	:x509 :name ||| email	count=1
module	dh ||| openssl pkey dh	count=4
returnv	bytes ||| integer	count=1
arg	integer safe [arg_2] ||| [arg_1] [arg_2] rem	count=1
module	internal position for enumeration ||| prime pseudoprimegenerator	count=1
function	[returnv_1] [function_2] ||| [returnv_1] julian leap [function_2]	count=4
function	there is ||| has	count=2
module	arguments sets ||| module	count=1
function	files on the command ||| files	count=1
function	inverse ||| inv	count=1
function	and a file ||| file	count=1
module	:break :redo :retry ||| localjumperror	count=1
module	a new copy to ||| gem indexer	count=1
arg	from block_quote to the ||| block_quote	count=1
arg	that user ||| user	count=1
arg	of patterns or a ||| flags	count=1
function	append command to append ||| append	count=1
function	removed from ||| removed	count=2
module	to a named header ||| net httpheader	count=1
function_arg	[function_1] method_name in ||| [function_1] klass_name [arg_2]	count=1
function	creates a empty ||| empty	count=1
function	no handler ||| default handler	count=1
module	and removes the tempdir ||| gem	count=1
returnv	instance for ||| instance	count=1
module	json ||| json	count=16
arg	invokes the method identified ||| args...	count=2
module	inflate stream with ||| zlib inflate	count=1
module	a new enumerator ||| enumerator	count=1
arg	front with ||| front	count=1
arg	bound to address ||| address	count=1
function	of nanoseconds for ||| tv nsec	count=1
arg	[arg_1] to newname ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] out a ||| [arg_2] [function_1]	count=1
module	that the specification ||| specification	count=1
module	to ||| module	count=1
module	of elements ||| set	count=1
arg	given command ||| command	count=2
module	–platform option to ||| gem versionoption	count=1
function	will ||| gen sub	count=1
function	in ||| each	count=2
arg	string according ||| string 1 jan	count=2
module	:markup ||| markup	count=1
module	sets ||| makemakefile	count=1
module	of its polar form ||| complex	count=1
function_arg	method removes a file [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
rep	filters [function_arg_2] ||| [module_1] [function_arg_2]	count=4
arg	tag [arg_2] ||| [arg_1] [arg_2]	count=5
function	if [function_2] ||| [function_2] [function_1]	count=146
arg	that wraps source and ||| source	count=1
module	protected method ||| getoptlong	count=1
module	for stat that ||| stat	count=1
module	creates ||| gem	count=1
module	methods ||| module	count=1
module	method depending on the ||| levelednotifier	count=1
function	with on ||| dir	count=1
function	rewinds to the beginning ||| rewind	count=1
function	method of [function_2] ||| [function_2] [function_1]	count=2
module	:sslcertificate and ||| drb drbsslsocket	count=1
module	that ||| io	count=1
function	returns the tcpserver passed ||| to	count=1
function	and modules in this ||| and modules	count=1
arg	with io ||| io	count=1
function	delegation from a serialized ||| marshal	count=1
function	remove everything in ||| remove specs unsatisfied by	count=1
arg	and signing_cert using ||| signing_cert age	count=1
function	sets the initial ||| initial	count=1
arg	file1 or optionally file2 ||| file1 file2	count=1
function	and ||| create	count=1
returnv	with ||| str	count=1
module	for the existing file ||| file	count=1
function	that the request is ||| ?	count=1
module	set as ||| rexml parent	count=1
module	a visitor to render ||| rdoc markup	count=1
module	integer values from ||| integer	count=1
module	the response received ||| net smtp response	count=2
function	a serialised ||| creatable	count=1
function	bytes to ||| bytes	count=1
function	if the ||| end ?	count=1
function_arg	deletes [arg_2] ||| [arg_2] [function_1]	count=3
arg	a command and returns ||| cmd	count=1
function	if [function_2] ||| [function_2] file [function_1]	count=1
arg	encoding [arg_2] ||| [arg_1] [arg_2]	count=1
function	the valid [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] issuer cn ||| [arg_2] [arg_1]	count=3
module	a new uri :ftp ||| uri ftp	count=1
arg	list n ||| list	count=1
function	generates a private and ||| generate	count=1
module	abbreviate ||| gem specification	count=1
arg	message to ||| message flags	count=1
module	a given index @param ||| rexml parent	count=1
module	bigdecimal :round_* see ::mode ||| bigdecimal	count=1
module	the last row ||| gzipreader	count=1
function	set irb_name of ||| n jobs	count=1
module	gems to a ||| requestset	count=1
function	returns the encoding of ||| encoding	count=1
module	whatever ||| net ftp	count=1
module	mod except that ||| module	count=1
module	the http ||| net http	count=2
function	with the value ||| value	count=2
module	session ||| net	count=1
module	by a [module] pick ||| [module]	count=1
module	from [module] and including ||| [module]	count=1
function	and false if ||| commercial ?	count=1
module	and ||| testcase	count=2
function	day ||| day	count=1
module	string calling to_s), converts ||| json ext generator generatormethods	count=1
module	by using identical ||| gem indexer	count=1
arg	up to limit ||| limit	count=1
arg	of idx ||| idx	count=1
function	of the credentials file ||| check credentials	count=1
module	original state and ||| gem	count=1
function	switches the ||| by	count=1
arg	out with [arg_2] ||| [arg_2] [arg_1]	count=1
function	leading whitespace removed ||| lstrip	count=1
function	installs a ||| install	count=1
module	returns the list of ||| module	count=1
function	prime ||| prime	count=3
arg	[arg] an empty ||| compiler [arg]	count=3
module	net :http#read_timeout ||| client	count=1
arg	[arg_1] name ||| [arg_2] [arg_1]	count=6
arg	the block ||| &block;	count=2
module	pop3 session ||| pop3	count=1
function	destination [function_2] ||| [function_1] [function_2]	count=2
function	maximum should ||| max	count=1
arg	character [arg] back onto ||| [arg]	count=1
function	[function_1] args ||| [function_2] [function_1]	count=5
function	thread to ||| error=	count=1
function_arg	given [arg_2] ||| [arg_2] [function_1]	count=3
function	address ||| address	count=4
module	iterates the given block ||| enumerable	count=1
module	all file lists have ||| specification	count=1
arg	of subject and ||| subject	count=1
function	filters the methods ||| filter methods	count=2
module	conflict with ||| gem resolver conflict	count=1
module	new [module] ||| [module]	count=2
module	the download reporter that ||| gem streamui verbosedownloadreporter	count=1
arg	backtrace ||| backtrace	count=1
function	[returnv_1] public key ||| [returnv_1] [function_2]	count=1
arg	real time ||| real	count=1
arg	y and [arg_2] ||| [arg_1] [arg_2]	count=1
module	tools ||| parser rubytools	count=1
function	true if ||| defined ?	count=1
module	integer where the n’th ||| rexml elements	count=1
arg	as the elapsed [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
module	attribute of [module] element ||| [module]	count=1
arg	the status and string ||| status string	count=1
function	todo deprecate and ||| create	count=1
function	[function_1] [function_2] ||| [function_2] class [function_1]	count=1
arg	up all typeclass ||| typeclass	count=1
module	for the alias ||| alias	count=1
function	undefined in ||| undefined	count=1
function	[function_1] slice of ||| [function_2] [function_1]	count=1
arg	[arg_1] on dir ||| [arg_2] proc [arg_1]	count=1
arg	[arg_1] pattern ||| dir matches glob [arg_2] [arg_1]	count=4
module	addrinfo objects as ||| addrinfo	count=1
function	the ||| drburi	count=2
returnv	[returnv] if there ||| [returnv]	count=2
arg	the given block ||| &block;	count=1
function	initialized with [function] processed data ||| [function]	count=1
arg	headers you provide ||| headers opt	count=1
arg	with io ||| io level strategy options	count=1
function	in utc gmt ||| gmt	count=1
module	–version option to ||| versionoption	count=1
module	adds tts ||| rdoc markup	count=1
module	summary ||| optparse	count=3
module	session ||| net ftp	count=1
function_arg	a leap [arg_2] ||| [function_1] ? [arg_2]	count=4
module	this method sends ||| net	count=1
function	the exit value associated ||| exit value	count=1
module	encoding names ||| encoding	count=1
module	will be ||| rexml parent	count=1
function_arg	[function_1] threads have ||| [function_1] [arg_2]	count=2
module	calling to_s), converts ||| ext generator generatormethods	count=1
module	smtps [module] over ||| [module]	count=1
module	sets the net :http#read_timeout ||| xmlrpc client	count=1
function	get the uri ||| uri	count=1
arg	document from [arg] and returns ||| [arg]	count=1
module	and certificate chain ||| gem security	count=1
function_arg	[function_1] given representation ||| [function_1] [arg_2]	count=2
function	[returnv_1] of instance ||| [function_2] [returnv_1]	count=1
module	that ||| ssl sslsocket	count=2
module	every element in enum ||| enumerable	count=3
arg	associate it [arg] ||| size [arg]	count=1
arg	compares this comment ||| other	count=1
function	[function_1] pattern match ||| [function_1] [function_2]	count=3
function	number of undocumented ||| doc stats	count=1
module	this dh to ||| openssl pkey dh	count=2
arg	group ||| group	count=3
module	single-column matrix where ||| matrix	count=1
module	with ||| rdoc markup	count=1
module	returns a lazy ||| lazy	count=1
module	net :http#open_timeout to ||| xmlrpc	count=1
arg	given extensions ||| age extensions serial	count=1
function	to the requiring ||| require	count=1
arg	flag file in ||| op_dir time last	count=1
returnv	was terminated ||| symbol	count=1
function	returns the tcpserver passed ||| to io	count=1
function	raw profile data ||| raw data	count=3
module	the given ||| gemdependencyapi	count=1
function	returns a properly-space ||| generator	count=1
module	is created ||| syslog logger	count=1
arg	[arg_1] port ||| [arg_2] [arg_1]	count=10
arg	status ||| status	count=3
module	tuplebag which when treated ||| tuplebag	count=1
function	target messages and ||| messages	count=1
arg	enclosing [arg_2] ||| [arg_2] [arg_1]	count=2
module	last row read from ||| zlib gzipreader	count=1
module	above the ||| webrick basiclog	count=1
module	the pager ||| rdoc ri driver	count=1
module	psych :nodes :mapping object ||| psych nodes mapping	count=1
module	the [module] false ||| [module]	count=2
function	unescapes special sequences ||| unmask protected sequences	count=2
function_arg	displays documentation [arg_2] ||| [arg_2] [function_1]	count=6
arg	name with ||| name	count=5
module	the tempdir unless ||| testcase	count=1
arg	question ||| question	count=3
module	the tempdir unless the ||| testcase	count=1
module	the [module] suitable for ||| [module]	count=1
module	part ||| complex	count=1
function	the original name ||| name	count=1
function	spec and ||| spec	count=1
returnv	to [returnv] ||| [returnv]	count=4
function	[function_1] super ||| [function_1] [function_2]	count=2
function	if rxp is ||| ?	count=1
function	[returnv_1] [function_2] ||| [returnv_1] version 1 [function_2]	count=1
arg	by symbol to the ||| symbol obj	count=1
function	if ssl/tls is being ||| use ssl ?	count=1
module	new array ||| array	count=5
function	is the list ||| ?	count=1
function	[function] that the ||| spec [function]	count=2
arg	- integer safe - ||| safe	count=1
arg	given string or ||| key	count=1
arg	the given dependency ||| dependency	count=1
function	finds an instance method ||| find instance method	count=1
returnv	string don’t use :-)) ||| string	count=1
function	[returnv_1] [function_2] ||| [returnv_1] intersect [function_2]	count=4
function	returns the modification ||| mtime	count=2
function	truncated ||| to int	count=1
arg	ruby data structure ||| opts	count=1
function	has been ||| start	count=1
arg	given [arg] and standard ||| [arg] stdin	count=1
function	[returnv_1] [function_2] manager ||| attributemanager [returnv_1] [function_2]	count=1
function	the definition of ||| definition	count=1
function_arg	[function_1] document to ||| [arg_2] [function_1]	count=1
module	the visitor ||| markup tottonly	count=1
arg	ri data for method_name ||| method_name	count=2
arg	the given name and ||| name	count=1
function	and calls verify to ||| verify	count=1
function	instance variables [function] hash that ||| [function]	count=1
module	response received ||| net smtp response	count=2
function	[returnv_1] the result ||| [returnv_1] [function_2]	count=1
module	[‘blt_stripchart_bar’ ||| stripchart	count=1
function_arg	the value in the [function_1] [arg_2] ||| sdbm value [function_1] [arg_2]	count=2
module	attempts ||| thread mutex	count=2
module	day ||| date	count=5
module	displayed [module] the ||| [module]	count=1
function	returns image [function] in the ||| [function]	count=1
function	site-local ||| sitelocal	count=1
function_arg	request match [arg_2] ||| [function_1] ? [arg_2]	count=2
module	session’s pstore file ||| cgi session pstore	count=1
arg	in [arg_1] [arg_2] group group ||| [arg_2] [arg_1]	count=1
module	the list of files ||| specification	count=1
module	digest using ||| digest	count=2
module	[module] from a ||| rexml [module]	count=1
arg	for the given jobs ||| jobs	count=1
module	tuplebag ||| rinda tuplebag	count=2
arg	at uri with ||| uri	count=1
function	the [function] from the ||| delete [function]	count=1
function	[function_1] [function_2] ||| [function_2] relative [function_1]	count=3
module	alias of ||| alias	count=1
function	returns true if ||| bool directory ?	count=1
function	have a constant with ||| ?	count=1
module	visitor for ||| tordoc	count=2
returnv	number of native ||| integer	count=1
returnv	file ||| encoding	count=2
arg	:codeobject co being undocumented ||| co	count=1
arg	the given file ||| file	count=1
arg	[arg] and ||| [arg] from_version	count=1
function	the list satisfied? ||| ok ?	count=1
function	a spec ||| spec	count=1
function	of the ||| drburi	count=1
function	ipv4 loopback address 127 ||| ipv4 loopback ?	count=1
module	this dsa ||| dsa	count=1
function	returns true [function_2] ||| [returnv_1] sid available [function_2]	count=8
module	an attribute ||| rexml attributes	count=1
function	[function_1] from ||| [function_1] [function_2]	count=6
module	constant which [module] qualified ||| [module]	count=1
function	a record for the ||| search record	count=1
module	dtd ||| doctype	count=1
function	an output ||| setup output	count=1
function	[function] contains ||| include [function]	count=1
arg	example klass ||| klass mode	count=1
module	task with ||| task	count=1
arg	src to [arg_2] ||| [arg_1] [arg_2]	count=2
function	[returnv_1] representing ||| [function_2] [returnv_1]	count=3
module	for this dependency request ||| gem resolver dependencyrequest	count=1
module	enum sorted either ||| enumerable	count=1
arg	[arg_1] safe - ||| [arg_1] [arg_2]	count=1
module	num ||| numeric	count=11
arg	[arg_1] specified key ||| [arg_2] [arg_1]	count=2
arg	httpresponse object ||| data initheader	count=1
module	queue to ||| sizedqueue	count=1
arg	block_quote to ||| block_quote	count=1
arg	sets value specified by ||| val	count=1
function_arg	union of [arg_2] ||| [function_1] [arg_2]	count=1
module	lists have redundancies removed ||| gem specification	count=1
function	ipv4 loopback ||| ipv4 loopback	count=1
function_arg	the hostname [arg_2] ||| [function_1] [arg_2]	count=4
module	as row access ||| csv table	count=1
module	method definition ||| method	count=1
module	use across ||| array	count=1
function	[function_1] that is ||| [function_2] relative [function_1]	count=1
module	session for the ||| jobmanager	count=1
function_arg	[function_1] of tags ||| [arg_2] [function_1]	count=1
module	if ||| drbobject	count=1
function	equal ||| pred	count=1
function	normalized ||| normalize	count=2
module	iff the [module] ||| [module]	count=1
module	mod is ||| module	count=4
function	returns true [function_2] ||| stat [returnv_1] zero [function_2]	count=1
module	current process to ||| process sys	count=3
rep	a binary [function_arg_2] ||| [module_1] write [function_arg_2]	count=3
function_arg	[function_1] tk setting ||| [function_1] [arg_2]	count=1
module	lists have ||| gem	count=1
module	elements ||| array	count=1
module	expiry time ||| rinda tupleentry	count=1
function	live in if they ||| gen	count=1
arg	other_time are ||| other_time	count=1
arg	pushes character [arg] back onto ||| [arg]	count=1
function	[function_1] the rounding ||| [function_1] [function_2]	count=3
module	from the inline text ||| rd inlineparser	count=1
module	:nodes :document object ||| nodes document	count=1
arg	compressed data and returns ||| level strategy	count=1
function	[returnv_1] [function_2] stat ||| [returnv_1] [function_2]	count=1
arg	z is given ||| z	count=5
arg	:method on ||| tk	count=1
module	a [module] :source or ||| [module]	count=1
arg	[arg_1] and reference ||| [arg_2] [arg_1]	count=1
arg	mailbox ||| set mailbox	count=1
arg	mod in ||| mod	count=1
function	[returnv_1] [function_2] still running ||| [returnv_1] [function_2]	count=2
module	creates a new uri ||| uri	count=2
module	threadgroup ||| threadgroup	count=1
function	encode a string from ||| encode	count=1
arg	io and allows up ||| io	count=1
function	return class or module ||| class	count=1
module	ruby parser ||| rdoc parser ruby	count=2
module	sets up ||| rdoc ri	count=1
function	the encoding [function_2] ||| [function_2] [function_1]	count=4
module	given object thereby frustrating ||| object	count=1
module	object to a string ||| object	count=1
function	bit pattern represented by ||| chmod	count=1
function	the visitor for ||| list item	count=4
function	title ||| title	count=1
function	[function] passed in ||| [function]	count=2
module	for downloading ||| gem specification	count=1
function	[function] the ||| save rounding [function]	count=1
function	class or ||| class or	count=4
function	finds a comment ||| find attr comment	count=1
function	docs will live in ||| sub	count=1
function	file matching ||| find	count=4
arg	req to ||| req	count=1
module	in enum with ||| enumerable	count=1
function	::clock_gettime() function ||| gettime	count=1
module	and :sslprivatekey ||| drbsslsocket	count=1
function	a pipe false ||| pipe	count=1
module	tuplespaceproxy to ||| rinda tuplespaceproxy	count=1
module	it ||| thread	count=1
module	to be written ||| gem package tarwriter boundedstream	count=1
function	to the gem ||| gem	count=1
function	in #field and assigns ||| []=	count=1
returnv	hash of parsed elements ||| hash	count=1
arg	file1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	a module ||| add module	count=1
arg	text [arg_2] ||| [arg_1] [arg_2]	count=4
module	pass ||| rdoc ri driver	count=2
function	all keys ||| keys	count=1
arg	fixnum returns ||| fixnum	count=1
returnv	return true ||| bool	count=2
function	resets the ||| reset	count=3
function	[function_1] matching ||| [function_2] [function_1]	count=1
arg	base64-decoded version [arg] ||| [arg]	count=2
module	sets up a ||| driver	count=1
returnv	parent if supplied ||| instance	count=1
function	value string in ||| value	count=1
function	[returnv_1] arrays ||| [function_2] [returnv_1]	count=1
function	copies a ||| copy	count=2
module	prepares the visitor for ||| rdoc markup totableofcontents	count=1
arg	body text [arg_2] ||| [arg_2] [arg_1]	count=4
returnv	creates an instance ||| instance	count=1
function	[function_1] [function_2] ||| rational [function_2] [function_1]	count=2
function	defines a singleton ||| define singleton	count=3
function	is a potential ||| handle special hyperlink	count=1
arg	[arg_1] and tag ||| [arg_2] [arg_1]	count=10
module	class can ||| class	count=1
module	for ||| requestset	count=1
function_arg	[function_1] command and ||| [arg_2] [function_1]	count=1
function	label list ||| list	count=1
module	corresponding to ||| webrick httpstatus	count=2
function	[function_1] port to ||| [function_2] [function_1]	count=6
arg	the database for user ||| user reload_db	count=1
function	-infinity should ||| ascii only	count=1
function	paragraph ||| paragraph	count=2
arg	pass - [arg_2] ||| [arg_2] [arg_1]	count=4
module	wraps text [module] wrap characters ||| [module]	count=1
module	turned off by :enddoc ||| rdoc	count=1
arg	are ||| other	count=1
function	local [function_2] ||| [function_1] [function_2]	count=6
arg	file at path and ||| path	count=1
module	the [module] data ||| [module]	count=1
function_arg	send [arg_2] ||| [arg_2] [function_1]	count=1
function	combines ||| update	count=1
module	string ||| cgi	count=1
function_arg	[function_1] tag tag ||| [arg_2] [function_1]	count=2
arg	member name ||| name	count=3
returnv	if the given ||| bool	count=1
module	the ri ||| ri	count=1
function	change attributes ||| attribute	count=1
module	returns the permutation matrix ||| matrix lupdecomposition	count=1
function	[returnv_1] the status ||| [function_2] [returnv_1]	count=1
function_arg	[function_1] dep in ||| [arg_2] [function_1]	count=2
arg	the uri ||| uri	count=1
arg	[arg] is less ||| [arg]	count=3
module	hax todo ||| gem testcase	count=1
arg	[arg_1] obj ||| [arg_2] [arg_1]	count=3
arg	found trying to ||| found	count=1
function_arg	[function_1] method_body ||| [function_1] [arg_2]	count=1
module	prepares the ||| rdoc markup tordoc	count=3
module	adds ||| gem specification	count=2
function	interpreting ary ||| h	count=1
function	names of singleton methods ||| singleton methods	count=1
function	pass output ||| setup	count=1
module	are ||| openssl	count=1
function_arg	if the version ||| ? version	count=2
function	of instance [function_2] ||| [function_2] [function_1]	count=3
function	passes each character in ||| each char	count=1
arg	in file_name which can ||| file_name suffix	count=1
returnv	of str ||| str	count=1
arg	default according to ||| default	count=2
function	[function_1] [function_2] ||| [function_2] file [function_1]	count=2
arg	stream the level of ||| level	count=1
arg	on [arg] values interpreted ||| [arg]	count=2
module	syslog notice log ||| syslog logger	count=1
function	[function_1] on ||| [function_2] [function_1]	count=5
function	the owner ||| grpowned	count=2
function	generators and ||| generator	count=1
arg	files in [arg_2] ||| [arg_2] [arg_1]	count=6
function	[function_1] error ||| [function_2] [function_1]	count=9
module	turned off by ||| rdoc codeobject	count=1
module	digest is ||| openssl digest	count=1
module	this document ||| rdoc markup document	count=2
function	‘nz_number’ ||| nz	count=2
arg	given ||| code_object	count=1
module	this method ||| method	count=3
arg	and other are ||| other	count=3
module	the point ||| module	count=1
function	[function_1] listener ||| [function_2] [function_1]	count=3
function	and attr entries matching ||| matching	count=1
module	the list ||| markup list	count=2
function	time the supplied ||| time	count=1
function_arg	normalized form of ||| normalize form	count=1
module	working [module] of this ||| [module]	count=2
function	and false if not ||| commercial ?	count=1
function	named private method ||| private method	count=1
module	every message digest can ||| openssl digest	count=1
module	set for which ||| set	count=1
arg	anchor a tag ||| anchor tag	count=3
module	have ||| drb	count=1
arg	[arg_1] in enclosing ||| [arg_1] class_type [arg_2]	count=1
module	download reporter that ||| gem streamui verbosedownloadreporter	count=1
arg	passes [arg_2] ||| [arg_2] [arg_1]	count=4
arg	x [arg_2] ||| [arg_2] [arg_1]	count=1
module	that ||| gem resolver	count=2
returnv	returns ||| array	count=2
function	returns the source ||| source	count=2
function	a handler for tracing ||| trace func	count=1
function_arg	subset [arg_2] ||| [arg_2] [function_1]	count=1
function	when no handler for ||| default handler	count=1
arg	[arg_1] salt ||| [arg_1] [arg_2]	count=2
module	and ||| openssl ocsp	count=1
function_arg	creates a [function_1] [arg_2] ||| [function_1] [arg_2]	count=5
module	the session object ||| ssl session	count=1
module	time according to ||| time	count=1
arg	the given path returning ||| path mode	count=1
arg	in context with ||| container single	count=1
module	of the comment are ||| rexml comment	count=2
function	everything in ||| unsatisfied by	count=1
returnv	nested array of key ||| array	count=1
function	visitor for ||| accept list	count=4
returnv	returns the value of ||| bool	count=1
module	oldest dependencyrequest ||| resolver requirementlist	count=1
module	to pass ||| driver	count=1
arg	chain ||| chain	count=1
function	field input ||| field	count=1
module	consuming ||| rdoc markup tohtmlsnippet	count=1
function_arg	a new [arg_2] ||| [arg_2] [function_1]	count=7
function_arg	[function_1] special ||| [arg_2] [function_1]	count=3
function_arg	parameters from [arg_2] ||| [arg_2] [function_1]	count=3
module	database for which ||| gdbm	count=1
function_arg	[function_1] document ||| [function_1] [arg_2]	count=1
module	any ||| object	count=1
module	digest ||| digest instance	count=2
module	silent download ||| silentdownloadreporter	count=1
arg	given time ||| time	count=1
arg	[arg_1] block ||| [arg_1] [arg_2]	count=2
module	or that a new ||| drb drbsslsocket sslconfig	count=1
module	extracts it [module] call_seq ||| [module]	count=1
function	the inverse hyperbolic tangent ||| atanh	count=1
returnv	bigdecimal and return it ||| bigdecimal	count=1
module	ensures ||| drb	count=1
function	returns default ||| default	count=1
module	this is an ||| rexml	count=1
module	the length and number ||| rdoc stats	count=1
arg	from_name ||| from_name	count=1
arg	reform sg ||| args	count=1
arg	not the ||| opt &b;	count=2
arg	tags [arg_2] ||| [arg_2] [arg_1]	count=2
function	module define ||| def module	count=2
returnv	of bytes that ||| integer	count=1
function	given ||| include ?	count=1
module	verifying the ||| netscape	count=1
function	[returnv_1] did not ||| [function_2] [returnv_1]	count=3
module	name to ||| openssl x509 name	count=1
function	or transferred ||| alive	count=1
module	matching ||| elements	count=1
module	stat in bytes ||| file stat	count=1
function	returns the numerator ||| integer numerator	count=4
arg	name is ||| name	count=1
function	handles the ||| handles	count=1
arg	calling method on ||| method	count=1
arg	equivalent to ||| string obj ...	count=1
returnv	returns and assigns ||| string	count=1
function_arg	[function_1] s ||| openssl buffering [function_1] [arg_2]	count=1
function	static ||| try	count=1
returnv	and returns a string ||| string	count=1
function	and creates a ||| start	count=1
module	:retry :next :return or ||| localjumperror	count=1
function	the default [function] of the ||| spec [function]	count=1
module	authoritative instance of ||| commandmanager	count=1
arg	object by forwarding ||| m include_private	count=1
function	a self-signed [function_2] ||| [function_2] [function_1]	count=8
function	adds [function_2] ||| [function_1] [function_2]	count=5
module	of files so ||| gem specification	count=1
function_arg	[function_1] [arg_2] a ||| [function_1] [arg_2]	count=10
function	the local [function_2] ||| [function_1] [function_2]	count=1
function	creates a new ||| instance new	count=86
function	sends a proppatch request ||| proppatch	count=1
arg	version tags and ||| version tags	count=2
function	closes ||| close	count=11
module	rdoc task with the ||| rdoctask	count=1
function_arg	[function_1] [arg_2] ||| [function_1] value [arg_2]	count=2
module	pretty printed so as ||| pp	count=1
module	class corresponding to ||| httpstatus	count=1
module	password from the ||| webrick httpauth htpasswd	count=1
function	each key [function] in ||| each [function]	count=1
function	if ||| gen	count=1
arg	comment and is a ||| comment	count=1
module	in [module] that gives ||| [module]	count=1
arg	[arg_1] stats in ||| [arg_2] [arg_1]	count=4
arg	target name that ||| target	count=1
function	finds an external alias ||| find external alias	count=1
function	updates ||| update	count=3
module	that ||| openssl ssl sslsocket	count=2
function	consuming ||| accept	count=3
module	rdoc :attr for the ||| rdoc parser ruby	count=1
function	is [function_2] ||| [function_2] by [function_1]	count=1
module	yields an ||| xmlrpc xmlparser	count=1
module	name ||| rdoc context	count=1
module	this object to a ||| object	count=1
module	downloading ||| gem	count=1
module	…> the argument passed ||| sax2listener	count=1
arg	and sets the status ||| status	count=1
arg	[arg_1] and comment ||| [arg_2] [arg_1]	count=8
arg	with ||| name version	count=2
module	the corresponding fiddle ||| fiddle	count=1
module	on the command ||| makemakefile	count=1
arg	undocumented items in collection ||| collection	count=1
module	live ||| generator	count=1
function	enables ||| enable	count=1
module	for [module] which has ||| [module]	count=1
module	comment from this section ||| rdoc context section	count=1
function	object for the last ||| last	count=1
function	module ||| module named	count=2
function	the setgid bit set ||| setgid	count=1
function	args ||| args	count=1
arg	specifying the threads ||| threads	count=1
arg	context with comment ||| comment ignore_constants	count=1
module	in if they don’t ||| generator darkfish	count=1
function_arg	limit the [arg_2] ||| [arg_2] [function_1]	count=1
arg	creates a [arg_1] [arg_2] ||| openssl digest digest new [arg_1] [arg_2]	count=4
function	to change attributes ||| attribute	count=1
module	convert this node to ||| psych nodes node	count=1
module	adds ||| markup attributemanager	count=1
function	but at tail ||| tail	count=1
returnv	this ||| instance	count=1
module	the generated json ||| json	count=2
module	the generated json ||| json ext	count=1
module	encoding object ||| io	count=1
arg	for [arg_2] ||| [arg_2] [arg_1]	count=2
function	object allocations ||| object allocations	count=4
module	@param ||| parent	count=3
function	convert an ||| to	count=1
function	switches the ||| by col or row !	count=1
arg	begin and end ||| begin end exclude_end	count=2
function	api compatibility [function_2] ||| [function_2] [function_1]	count=2
module	graph ||| molinillo	count=1
module	to wrap the ||| importer	count=2
arg	given sockets ||| sockets	count=2
arg	file_name ||| file_name suffix	count=1
module	emission with ||| emitter	count=2
function	[returnv_1] [function_2] ||| threadswait [returnv_1] empty [function_2]	count=1
module	the spec ||| gem specification	count=2
module	tempdir unless the keep_files ||| gem	count=1
function	[function_1] a ||| [function_1] [function_2]	count=2
function_arg	index [arg_2] ||| [function_1] [arg_2] selector	count=1
arg	salt - ||| salt	count=2
module	rdoc :markup :document ||| rdoc ri driver	count=1
module	command along with a ||| net imap	count=1
function	and net :http#open_timeout ||| timeout=	count=1
module	@return dependencygraph ||| gem resolver molinillo	count=1
arg	prefix and base_notifier ||| prefix base_notifier	count=2
arg	libs ||| libs	count=1
function	pager program to pass ||| pager	count=1
module	through ||| httpheader	count=1
module	pathname ||| pathname	count=8
function_arg	head request [arg_2] ||| [function_1] [arg_2]	count=1
function	renamed by rnfr ||| renamable	count=1
module	of symbol ||| symbol	count=1
function_arg	writes [arg_2] ||| openssl buffering [function_1] [arg_2]	count=1
module	specs in sorted ||| specification	count=1
module	class << myclassname ||| rdoc singleclass	count=1
module	output html-safe labels ||| rdoc markup tolabel	count=1
function_arg	[function_1] value value ||| [arg_2] [function_1]	count=1
function	[function] for ||| [function]	count=11
module	for this gem ||| gem	count=1
module	was terminated :break ||| localjumperror	count=1
arg	equivalent to or ||| string obj ...	count=1
arg	given set ||| set	count=4
module	matching specifications ||| molinillo specificationprovider	count=1
arg	str1 ||| str1	count=1
function	[returnv_1] [function_2] ||| [returnv_1] gmt [function_2]	count=2
function	the ||| block quote	count=1
arg	names in methods ||| methods	count=1
module	correct parser ||| rdoc parser	count=1
arg	from given str ||| str enc separator:	count=1
module	an array of ||| rexml	count=4
module	specs in sorted order ||| gem specification	count=1
function	[returnv_1] if ||| [returnv_1] specific [function_2]	count=2
module	matrix ||| matrix	count=29
arg	transfers localfile to ||| localfile remotefile blocksize	count=1
function_arg	[function_1] port and ||| socket tcp [function_1] [arg_2]	count=1
returnv	arguments sets the ||| self	count=1
arg	obj to ios ||| obj	count=1
module	have ||| specification	count=1
function	the win32ole_typelib ||| typelib	count=1
arg	format_string to ||| format_string	count=1
module	new fiddle :pointer ||| fiddle	count=1
module	and associates ||| optionparser	count=1
module	markup ||| rdoc markup	count=1
function	attributes ||| attribute	count=2
module	command and returns a ||| net imap	count=1
arg	setting the comment ||| single	count=1
arg	[arg_1] optional superclass ||| [arg_1] [arg_2]	count=1
module	the http ||| http	count=3
function	can then ||| dir config	count=1
arg	[arg_1] on klass ||| [arg_2] [arg_1]	count=8
arg	[arg_1] pattern ||| [arg_1] [arg_2]	count=1
module	new lazy [module] ||| [module]	count=2
function	enable capture ||| doc	count=1
function	local address fc00 :/7 ||| local	count=1
function	for which ||| select	count=1
arg	the elapsed [arg] ||| stime cutime cstime [arg]	count=3
module	json string ||| json ext	count=2
function	zone used ||| zone	count=1
module	been turned off by ||| rdoc	count=1
module	html-safe label ||| rdoc markup tolabel	count=1
arg	name exception [arg] and ||| [arg]	count=1
arg	the given certificates ||| certificates	count=1
function_arg	[function_1] [arg_2] terms a human can ||| [function_1] delta string [arg_2]	count=3
arg	to +@fetcher+ serving ||| repo	count=1
function	[returnv_1] [function_2] ||| [returnv_1] have xml content [function_2]	count=1
arg	normalizes text then builds ||| text format	count=1
module	whether the response received ||| net smtp response	count=2
module	marking up this ||| markup	count=1
arg	bits - [arg_2] ||| [arg_1] [arg_2]	count=4
arg	the string or ||| string filename lineno	count=1
module	for this [module] as ||| [module]	count=1
module	true ||| net http	count=2
module	with ||| sslconfig	count=1
function	for inspection ||| inspect	count=2
function	time [function_2] ||| [function_2] [returnv_1]	count=1
function	id ||| id	count=2
function	restricting ||| platform	count=1
function_arg	a file [arg_2] ||| [arg_2] [function_1]	count=1
arg	given str ||| str	count=3
module	with http ||| net http	count=1
module	gem names to ||| gem	count=1
module	its ||| gem testcase	count=1
arg	specified priority ||| priority format_string format_args	count=1
function	closes the log ||| close	count=1
function	read ||| read nonblock	count=2
arg	an implicit ||| implicit	count=2
module	the [module] permission bits ||| [module]	count=4
function_arg	all [arg_2] ||| [arg_2] [function_1]	count=1
function	creates [function] drbarray that ||| [function]	count=1
arg	[arg_1] localfile ||| [arg_2] [arg_1]	count=2
arg	a po entry ||| entry	count=1
module	a formatted ri ||| rdoc ri driver	count=1
function	inserts ||| insert output	count=1
arg	subject [arg_2] ||| [arg_1] key [arg_2]	count=2
function_arg	comment [arg_2] ||| [function_1] [arg_2]	count=1
returnv	part ||| float	count=1
module	undocumented ||| rdoc	count=1
arg	source see element ||| element	count=1
function	method [function] ||| [function]	count=1
arg	of fix ||| fix	count=1
arg	the optional block ||| &block;	count=1
arg	cutime ||| cutime	count=1
arg	in data for ||| data	count=1
returnv	string object ||| string	count=1
function	visitor for ||| list item	count=4
arg	to_str ||| to_str	count=1
arg	given name and value ||| name value	count=1
function	while the given block ||| while	count=1
arg	[arg_1] [arg_2] ||| passwd [arg_1] [arg_2]	count=1
arg	extensions ||| age extensions serial	count=1
function	a device file pipe ||| file	count=1
arg	by symbol ||| symbol obj	count=1
function	add a list ||| add	count=1
module	the ||| rdoc markup totableofcontents	count=2
function	[function_1] removed from ||| [function_2] [function_1]	count=2
module	hash instance ||| json ext generator generatormethods hash	count=1
function	ensures that :sslcertificate ||| setup	count=1
function	socket ||| socket	count=2
function	[function_1] a spec ||| [function_2] [function_1]	count=1
function	requested domain if ||| ?	count=2
module	graph to which ||| gem resolver molinillo	count=1
arg	this special is a ||| special	count=1
arg	by symbol to the ||| symbol	count=1
returnv	the symbol if ||| symbol	count=1
function	will live in if ||| sub	count=1
module	this ||| resolver installedspecification	count=1
function	returns a normalized ||| normalize	count=1
function	if the next ||| ?	count=1
function_arg	[function_1] string ||| integer [function_1] [arg_2]	count=3
function_arg	[function_1] message ||| [function_1] [arg_2]	count=1
function_arg	[function_1] given set ||| [function_1] [arg_2]	count=2
function	into the user dir ||| user	count=1
function	[returnv_1] if ||| [function_2] [returnv_1]	count=136
function	sends a trace ||| trace	count=1
arg	see element ||| element	count=1
arg	[arg_1] source_uri to ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| tkoption [function_1] class [arg_2]	count=2
function	modules sorted by salience ||| get sorted module	count=1
function	raw rfc2965 cookies ||| raw cookie2	count=1
function	older version of ruby ||| old ruby	count=1
module	regular expression ||| regexp	count=1
returnv	the hash ||| hash	count=3
module	get the uri ||| drbobject	count=1
function	the command line ||| dir config	count=1
function	removes a comment from ||| remove	count=1
function	3xx reply code ||| continue	count=1
arg	integer safe ||| safe	count=1
function	[function_1] special for ||| [function_1] [function_2]	count=2
function	finishes consumption of ||| accept list end	count=2
arg	[arg_1] enclosing to ||| [arg_1] class_type [arg_2]	count=1
function	a tcp/ip [function] ||| tcp [function]	count=1
module	type ||| win32ole_type	count=1
function_arg	writes [arg_2] ||| [function_1] with substitution [arg_2]	count=1
module	from this section ||| context section	count=1
function	arc tangent of ||| atan	count=1
function	beginning ||| begin	count=1
arg	from start [arg_2] ||| [arg_2] [arg_1]	count=1
function	a required attribute? ||| required attribute	count=1
function	information if debugging is ||| debug msg	count=1
rep	database [function_arg_2] ||| [module_1] bool [function_arg_2]	count=6
returnv	14 [returnv] representing ||| [returnv]	count=1
arg	socket on [arg] ||| [arg]	count=3
function	everything in the ||| specs unsatisfied by	count=1
module	the group database ||| webrick httpauth htgroup	count=1
arg	of dependency ||| dependency	count=1
arg	name ||| name	count=95
function	the integer memory location ||| i	count=1
arg	value v at key ||| key v	count=1
module	file is a ||| file stat	count=2
module	returns the length ||| rdoc stats	count=1
arg	ensure the signatures ||| digests signatures	count=1
function	protected instance [function_2] ||| [function_1] [function_2]	count=1
module	of documentation unless ||| codeobject	count=1
module	of ||| openssl	count=1
function	sends an idle ||| idle	count=1
module	multiple rdoc :markup :documents ||| rdoc classmodule	count=1
function	use to configure ||| config	count=1
returnv	self for which ||| ary	count=2
function	a human-readable string representation ||| inspect	count=1
arg	as an httpresponse object ||| initheader dest	count=1
function	gems that have a ||| gems	count=1
function	or module ||| or module	count=4
module	device on which stat ||| file stat	count=1
module	task ||| task	count=2
arg	to the directory dir ||| dir options	count=1
arg	other wraps the ||| ptr other	count=2
function	type of the data ||| data type	count=1
arg	[arg_1] res ||| [arg_1] [arg_2]	count=14
module	state and ||| gem testcase	count=1
module	with the other ||| drb drbsslsocket	count=1
function	number of ||| length	count=1
arg	[arg_1] extensions for ||| [arg_1] key [arg_2]	count=1
function	max ||| max	count=1
module	in gem help generate_index ||| gem	count=1
function_arg	object [arg_2] ||| [function_1] [arg_2]	count=1
module	content-range header field ||| net httpheader	count=1
function	true if ||| bool specific ?	count=2
function	the basic ||| basic word	count=1
module	the attribute ||| rexml attribute	count=1
arg	a string ||| string	count=5
module	parameter onto [module] such ||| [module]	count=3
module	variable [module] class name ||| [module]	count=1
function	returns the last error ||| last error	count=1
module	pass output ||| driver	count=1
function	starts tracing ||| trace	count=2
module	instance of fiddle ||| importer	count=1
module	tarwriter’s io ||| package tarwriter	count=1
returnv	of the ||| integer	count=1
module	fileoverflow exception ||| boundedstream	count=1
arg	connects to the ||| port helo user secret authtype	count=1
function	all gem ||| all gem names and	count=1
arg	the specified priority ||| priority format_string format_args	count=1
arg	[arg_1] add ||| [arg_1] [arg_2] rem	count=3
function	[returnv_1] if the ||| [returnv_1] specific [function_2]	count=2
module	returns an array containing ||| array	count=2
function	returns true [function_2] ||| [returnv_1] dst [function_2]	count=2
function	the text of the ||| text	count=1
function_arg	parses environment [arg_2] ||| [function_1] [arg_2]	count=2
arg	on res whether that ||| res	count=1
module	optionally under ||| light node	count=1
module	when gem :uninstaller#uninstall is ||| gem	count=2
function	iff there [function] ||| [function]	count=1
function	setter for extensions ||| set extensions	count=1
function	the size of ||| size	count=4
module	of the [module] in ||| [module]	count=3
function	of [function] ||| beginning of [function]	count=1
arg	cpu time cstime ||| cstime	count=1
module	the uri ||| drbobject	count=1
function	unresolved ||| in unresolved	count=1
function	friday ||| friday	count=1
function	deletes all data from ||| clear	count=1
module	net :http#open_timeout ||| client	count=1
function	for the latest ||| latest	count=1
arg	state of this ||| state	count=1
function	udp/ip sockets [function_2] ||| [function_2] [function_1]	count=2
arg	value ||| value tag	count=1
module	marker for rdoc ||| rdoc stats	count=1
arg	the status ||| status	count=1
arg	pushes character [arg] back ||| [arg]	count=1
function	methods private ||| private class method	count=1
arg	following tk setting ||| context single tk	count=1
module	adds tts from ||| markup	count=1
function	a space ||| space	count=1
function	is [function_2] ||| [function_2] number [function_1]	count=1
module	prepares the visitor for ||| tohtml	count=3
function	of documentation ||| start	count=1
function	the stream is ||| stream	count=1
function	[function_1] list empty? ||| [function_2] [function_1]	count=2
arg	of bits [arg_2] ||| cert [arg_1] [arg_2]	count=5
module	directive ||| markup preprocess	count=1
arg	realm to [arg_2] ||| [arg_2] [arg_1]	count=1
function	and activates the ||| use gemdeps	count=1
returnv	first form [returnv] ||| [returnv]	count=2
arg	server using [arg_2] ||| [arg_2] [arg_1]	count=4
arg	id to the set ||| id	count=1
function	returns the real user ||| uid	count=1
function	superclasses of ||| is a	count=1
arg	[arg_1] which ||| openssl digest digest new [arg_1] [arg_2]	count=6
module	store command [module] alter data ||| [module]	count=1
function_arg	get request [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] with flags ||| [arg_1] [arg_2]	count=1
function	and the line ||| and line	count=1
returnv	of the file ||| integer	count=1
function	response ||| response	count=2
function_arg	[function_1] of arguments ||| [function_1] [arg_2]	count=1
arg	[ lineno ||| filename lineno	count=1
function_arg	an alias as ||| add alias as	count=1
function	the target [function] the gem ||| [function]	count=1
module	last component of ||| pathname	count=1
function	returns ||| []	count=1
function	modules sorted by ||| get sorted module	count=1
function	this is a ||| ?	count=1
function_arg	[function_1] for io ||| [arg_2] [function_1]	count=5
function	is ||| ?	count=40
module	if supplied will ||| rexml	count=1
function	a client error ||| client error	count=2
arg	by n matrix a ||| n	count=1
module	the [module] ||| [module]	count=229
module	returns a new fiddle ||| fiddle	count=4
function	variable map with ||| variable map map_name	count=1
function	listener ||| listener	count=1
function	detail information ||| detail	count=1
function	the [function] ||| [function]	count=19
returnv	is made with privversion ||| bool	count=1
module	:nodes :node ||| nodes node	count=1
returnv	as ||| instance	count=1
function	of memory [function_2] ||| [function_2] [function_1]	count=1
arg	from a [arg_2] ||| datetime datetime httpdate [arg_2] [arg_1]	count=1
module	or that a new ||| drb	count=1
module	‘:’ in json objects ||| json ext generator	count=1
arg	in enclosing to a ||| enclosing	count=1
arg	the source ||| source	count=1
function	ignore ||| ignore	count=1
function	various “with” options ||| config	count=1
function	symbol if [function_2] ||| [function_2] [returnv_1]	count=3
arg	[arg_1] order ||| [arg_2] [arg_1]	count=1
arg	time ||| time | nil	count=1
module	visitor ||| markup tottonly	count=2
function	commands ||| commands	count=3
function	accept_list_item_end_ualpha ||| list item end ualpha	count=1
module	primary server ||| drb	count=1
rep	a yaml [function_arg_2] ||| [module_1] emitter [function_arg_2]	count=8
function_arg	[function_1] [arg_2] to the ||| [function_1] [arg_2]	count=2
arg	flushes text to ||| text	count=1
module	to tokens ||| rdoc parser rubytools	count=1
function	[returnv_1] [function_2] ||| dependencygraph vertex [returnv_1] path [function_2]	count=1
module	the files ||| rdoc options	count=2
function_arg	[function_1] orig if ||| ext generator state initialize [function_1] [arg_2]	count=1
function	a udp ||| udp	count=1
module	this hash ||| ext generator generatormethods hash	count=1
arg	front ||| front desc	count=1
module	of the [module] the ||| [module]	count=1
function	gathers a set ||| gather	count=1
module	if stat is executable ||| file stat	count=1
function	[function_1] have ||| [function_1] [function_2]	count=1
function	attributes ||| changed attribute	count=1
function	internal object ||| internal object	count=1
arg	process by running ||| command... options	count=1
module	the visitor for ||| markup tohtml	count=2
function	returns true [function_2] ||| [returnv_1] block given [function_2]	count=1
function_arg	[function_1] named file ||| [function_1] [arg_2]	count=8
function	closed ||| closed	count=1
function	with [function] processed ||| [function]	count=1
function	which ||| reject	count=1
function	[returnv_1] returns a ||| [returnv_1] [function_2]	count=2
arg	included files in include_path ||| include_path	count=1
module	new copy to ||| gem indexer	count=1
returnv	of ||| integer	count=3
module	constructs a range ||| range	count=1
module	translation ||| i18n text	count=1
arg	on server ||| server	count=1
module	rows for ||| table	count=1
function	[returnv_1] the name ||| [function_2] [returnv_1]	count=2
module	the ||| xmlrpc	count=1
function	some html [function] ||| html [function]	count=1
module	block form for ||| gem requestset gemdependencyapi	count=1
module	server ||| xmlrpc server	count=2
arg	as templates match tuple ||| tuple	count=1
function	[function] of signal ||| [function]	count=2
arg	subject and key ||| subject key age extensions serial	count=1
module	of documentation unless documentation ||| rdoc codeobject	count=1
module	for restricting gems ||| gem requestset gemdependencyapi	count=1
function	named constant ||| const	count=1
function	with an answer from ||| choose from list	count=1
arg	referenced by the given ||| link_name	count=1
module	this request ||| ocsp request	count=2
function	representation ||| to s	count=1
module	io objects [ read_io ||| io	count=1
function	[returnv_1] of instance ||| [returnv_1] [function_2]	count=1
module	unix socket ||| basicsocket	count=1
module	class to wrap the ||| importer	count=2
module	instance is ||| logger	count=1
function	object and returns it ||| to	count=2
arg	to locking_constant a ||| locking_constant	count=1
module	are immediately ||| sslsocket	count=1
arg	version tags [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] crossref ||| [function_2] [function_1]	count=4
function	an alias ||| add alias	count=1
function	rdoc documentation installed? ||| rdoc installed	count=1
arg	start and end in ||| start	count=1
arg	containing parts [arg_2] ||| [arg_2] [arg_1]	count=4
module	document ||| document	count=7
function	a symbolic link ||| symlink	count=3
module	syslog notice ||| syslog logger	count=1
function_arg	[function_1] year ||| [function_1] [arg_2]	count=2
arg	name version ||| name version dependencies	count=2
module	the ||| rdoc markup	count=8
arg	given prefix and base_notifier ||| prefix base_notifier	count=1
arg	[arg_1] superclass ||| [arg_2] [arg_1]	count=2
arg	and [arg] in ||| [arg]	count=1
arg	req on res whether ||| req res	count=1
arg	uri the uri ||| uri	count=2
arg	characters from the other_str ||| other_str	count=1
function	the encoding magic ||| coding	count=1
function	a empty ||| empty	count=1
returnv	the number of ||| fixnum	count=3
function	all messages ||| all	count=1
module	a valid json ||| json ext generator	count=1
arg	the member name ||| name	count=3
module	of ||| drb	count=2
function	a line in ||| set get line	count=1
function	a true if ||| defined ?	count=1
arg	of names in methods ||| methods	count=1
function	ensure ||| ensure number	count=2
function	extensions to ||| extensions	count=1
module	only a toplevel ||| toplevel	count=1
function	deletes the ||| delete ?	count=1
function	template dir [function_2] ||| [function_2] [function_1]	count=1
arg	the level and ||| level	count=1
function	to ||| dir	count=1
arg	remove the specified mailbox ||| mailbox	count=1
module	it isn’t available ||| mutex	count=1
arg	by header ||| header	count=1
arg	up content ||| content	count=2
function	[returnv_1] if stat ||| [returnv_1] signaled [function_2]	count=1
function	iterates the given block ||| each	count=2
module	returns the ||| webrick httpstatus	count=1
function	return the appropriate [function_1] [function_2] in posix-defined format ||| getoptlong [function_1] [function_2]	count=1
module	instead ||| rdoc toplevel	count=1
module	with the ||| drb drbsslsocket	count=1
arg	setting ||| context single	count=1
module	file ||| gzipreader	count=1
returnv	level == [returnv] ||| [returnv]	count=1
function	prepares the visitor for ||| list item start	count=4
module	basicsocket ||| basicsocket	count=1
module	the following certificate and ||| security policy	count=1
arg	found klasess [arg_2] ||| [arg_1] [arg_2]	count=1
arg	for io ||| io	count=1
arg	object without opening ||| p_addr p_port p_user p_pass	count=1
function_arg	attlist declaration [arg_2] ||| [function_1] [arg_2]	count=2
returnv	waits if it isn’t ||| self	count=1
function	if the given ||| ?	count=3
arg	in [arg_2] ||| [arg_2] [arg_1]	count=3
module	level 1 rdoc :markup ||| rdoc	count=1
arg	a [arg] certificate ||| [arg] cert_chain	count=1
function	of method names set ||| set visibility	count=1
function	[function_1] block in ||| [function_2] [function_1]	count=4
module	gem paths should be ||| gem	count=1
function	tempio as [function] ||| [function]	count=1
module	this gem ||| gem resolver localspecification	count=1
function	the read ||| read	count=3
arg	the given context ||| context	count=1
module	directory may be entered ||| ftp mlsxentry	count=1
function	configure ||| dir	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=25
function	returns true [function_2] ||| [returnv_1] write [function_2]	count=1
function	create ||| gen	count=1
function_arg	the key [arg_2] ||| [arg_2] [function_1]	count=1
function	finds all tuples ||| find all template	count=2
function	[function_1] [function_2] ||| [function_2] key [function_1]	count=3
module	class corresponding ||| httpstatus	count=1
function	returns the path of ||| path	count=1
module	request using ||| request	count=1
arg	comment by looking ||| container	count=1
function	to read ||| read	count=1
function	deserializes [function_2] ||| [function_2] [function_1]	count=5
function	apop class if ||| apop	count=1
module	creates ||| drb drbremoteerror	count=1
arg	file_name ||| file_name	count=10
function	contain other documents? ||| merged	count=1
module	writes to the stream ||| buffering	count=1
function	specific extra ||| specific extra	count=1
module	first instance ||| logger	count=1
function	[returnv_1] if ||| [returnv_1] disjoint [function_2]	count=1
arg	real ||| real	count=8
function	of data in the ||| in	count=1
function	proxy for this connection ||| proxy from	count=1
function	[returnv_1] if obj ||| [function_2] [returnv_1]	count=3
returnv	returns a string ||| string	count=4
module	‘:’ in json ||| json ext generator	count=1
function	relative path from ||| relative path from	count=3
arg	enum ||| enum	count=1
function	returns the destination ||| destination	count=1
arg	[arg_1] column ||| [arg_2] [arg_1]	count=2
function	[returnv_1] method ||| [function_2] [returnv_1]	count=1
function_arg	pass [arg_2] ||| [arg_2] [function_1]	count=4
function	certificate with an issuer ||| cert	count=2
function	verify internal [function_2] ||| [function_2] [function_1]	count=1
function	a [function_2] ||| ipaddr [function_1] [function_2]	count=1
arg	n is the ||| n	count=1
arg	[arg] and ||| [arg]	count=10
arg	value ||| value anchor tag	count=1
module	runs this list ||| markup list	count=1
module	or that ||| drb	count=1
function	before the current match ||| pre match	count=1
arg	num and numeric are ||| numeric	count=1
function	the list ||| list	count=1
arg	[arg] or csv ||| [arg]	count=1
arg	retrieve data ||| set attr	count=1
arg	at most maxlen bytes ||| maxlen buf	count=1
module	yaml ||| psych	count=2
module	string ||| rubyvm instructionsequence	count=1
function	true [function_2] ||| matrix [returnv_1] [function_2]	count=3
module	configuration ||| genericserver	count=1
arg	scheme if one ||| scheme	count=1
function	a site ||| site	count=1
module	c code ||| parser c	count=1
arg	with name for ||| name	count=2
function	the command ||| dir config	count=1
function	headers are written in ||| write headers	count=1
module	array ||| generator state	count=2
function	form ”>word> ||| tidylink	count=1
function	the original [function_2] ||| [function_1] [function_2]	count=3
function	blank_line ||| blank line	count=2
arg	the given input_method ||| input_method	count=1
function	mode for use with ||| mode	count=1
function_arg	[function_1] [arg_2] ||| [function_1] subdirectories [arg_2]	count=4
function	defined by mod ||| defined	count=3
module	this parser is ||| ext parser	count=1
module	the current string ||| string	count=1
module	for constructing ||| rss atom	count=1
module	to the ||| markup tottonly	count=1
module	length ||| stats	count=1
function	accept_list_start_note ||| list start note	count=1
module	csv :row objects ||| csv	count=1
module	this method ||| net smtp	count=1
arg	req [arg_2] ||| [arg_1] [arg_2]	count=4
module	number ||| io	count=1
function_arg	the main [arg_2] ||| [function_1] [arg_2]	count=1
function	time in the given ||| time	count=1
module	the first digit ||| net smtp response	count=1
function_arg	on the [arg_2] ||| [function_1] [arg_2]	count=1
module	title ||| section	count=1
arg	status and [arg_2] ||| [arg_2] [arg_1]	count=2
module	document contained ||| psych	count=1
function	or equals to ||| >=	count=1
function_arg	is tag ||| ? tag	count=1
arg	built [arg] duplicating ||| [arg]	count=1
function	[function] date-time ||| [function]	count=1
module	get the uri ||| drb drbobject	count=1
module	a class header to ||| ri driver	count=1
function	parses a method that ||| parse method	count=1
arg	text and method ||| text	count=1
module	keep_files environment ||| testcase	count=1
function_arg	scope val ||| scope= val	count=1
module	the output ||| tottonly	count=1
function	[function_1] label ||| [function_1] [function_2]	count=6
arg	temporary ||| basename tmpdir	count=1
module	are immediately available ||| ssl sslsocket	count=1
module	the raw paragraph ||| rdoc markup paragraph	count=1
module	environment ||| testcase	count=1
module	returns ||| net httpheader	count=1
arg	text [arg] ||| [arg]	count=1
function	[function_1] delegator instance ||| [function_2] [function_1]	count=1
module	and :sslprivatekey have ||| drbsslsocket	count=1
function	on the command ||| dir	count=1
function	as a string ||| to s	count=1
returnv	returns [returnv] containing ||| [returnv]	count=1
function_arg	leap year ||| leap ? year	count=1
function	with the other ||| setup	count=1
function	year 1-366 ||| yday	count=1
function	[returnv_1] if the ||| [returnv_1] handles [function_2]	count=1
module	dependency will not ||| dependency	count=1
function	with on ||| on	count=3
arg	[arg] because ||| [arg]	count=1
function	rounding mode ||| rounding mode	count=2
function	the ||| list	count=4
function	using ||| config	count=1
function	when no handler ||| set default handler	count=1
arg	list [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] significant digits ||| [function_1] [arg_2]	count=1
module	rdoc :generator ||| rdoc toplevel	count=1
module	list and ||| markup list	count=1
arg	namespace ||| namespace	count=1
function	for linking ||| aref	count=1
returnv	[returnv] similar to ||| [returnv]	count=3
module	data for ||| rdoc	count=1
function	used to ||| add	count=1
module	parent if supplied ||| parent	count=1
function_arg	path [arg_2] ||| [function_1] [arg_2]	count=1
module	dependencylist that ||| dependencylist	count=1
function	the directory of ||| dir	count=1
function	skip the var in ||| skip for	count=1
module	marks up ||| rdoc markup formatter	count=1
function	determined from the environment ||| env	count=1
arg	based on string which ||| string data	count=1
function	up the hostname of ||| getname	count=1
module	of z ||| cmath	count=5
module	pointer otherwise ||| fiddle pointer	count=2
function	returns the path to ||| cert path	count=1
arg	dep ||| dep	count=1
function	the visitor [function_2] ||| [function_2] [function_1]	count=4
module	checks the [module] ||| [module]	count=3
module	gem couldn’t be ||| gem	count=1
module	object ||| io	count=1
module	valid json ||| json ext generator state	count=1
module	and :sslprivatekey ||| drb drbsslsocket sslconfig	count=1
arg	extensions ||| age extensions	count=2
function	[returnv_1] [function_2] corresponding to proc body ||| [returnv_1] [function_2]	count=1
arg	with name for words ||| name	count=1
module	command along with mailbox ||| imap	count=1
returnv	attempts to grab ||| self	count=1
module	a sandboxed ||| testcase	count=1
returnv	[returnv] iff ||| [returnv]	count=1
function_arg	[function_1] signatures ||| [function_1] spec [arg_2]	count=1
function	for each slice ||| each slice	count=2
function	all gem ||| all gem names	count=1
function	[function_1] field row ||| [function_2] [function_1]	count=2
function	sets a ||| dir config	count=1
module	[module] :function ||| [module]	count=3
function	find a module ||| find module	count=2
module	this method ||| net	count=1
module	the parser to ||| rdoc parser	count=1
module	restricting gems to a ||| requestset	count=1
function	calls ||| accept	count=5
function	issuer certificate of ||| issuer of	count=1
module	isn’t ||| thread mutex	count=2
module	singleton class class << ||| singleclass	count=1
function	string ||| to s	count=1
module	live in if they ||| generator	count=1
module	that will retrieve ||| resolver	count=1
function	reset ||| reset	count=2
module	spec for downloading ||| gem	count=1
arg	responds to the ||| symbol include_all	count=1
module	of generators and ||| rdoc options	count=1
module	merges ||| rdoc classmodule	count=1
module	off by ||| rdoc	count=1
arg	for the pages ||| pages search	count=1
function	and :sslprivatekey ||| setup	count=1
function	size of the ||| size	count=2
function	local variables this ||| local variables	count=2
function	removes private sections from ||| remove private	count=1
returnv	return ||| obj	count=1
returnv	it ||| self	count=1
arg	named name ||| class_type name	count=2
function	if self is a ||| ?	count=1
module	mod ||| module	count=9
module	immediately ||| openssl ssl	count=1
function	[function_1] there is ||| [function_2] [function_1]	count=2
module	[module] same ||| [module]	count=1
function	this ||| context	count=1
function	to ||| []	count=1
function	given key ||| key	count=2
arg	accessor ||| accessor	count=1
rep	the http [function_arg_2] ||| [module_1] [function_arg_2]	count=2
arg	list of arguments by ||| args	count=1
module	raises big to ||| bignum	count=1
module	to ||| optparse	count=1
function_arg	[function_1] [arg_2] ||| [function_1] path [arg_2]	count=1
function	interpreting leading characters in ||| f	count=1
arg	to rows [arg_2] ||| [arg_1] [arg_2]	count=1
module	attempts to grab the ||| thread mutex	count=1
module	command line by ||| makemakefile	count=1
function	:markup :document from it ||| parse	count=1
returnv	without blocking ||| io,_true	count=1
function	[function] form ||| [function]	count=1
function	parse a ||| parse	count=1
function	to execute the ||| realtime	count=1
function	docs will live ||| gen	count=1
module	[module] garbage collected ||| fiddle [module]	count=1
arg	by n matrix ||| n zero	count=1
function	[function_1] list ||| [function_1] [function_2]	count=12
arg	a string according ||| string 1 jan	count=2
module	key-value pairs ||| sdbm	count=2
function_arg	name for ||| name context	count=1
function	dump the contents ||| dump	count=2
module	live ||| darkfish	count=1
module	to ||| parser	count=1
function	to a set ||| platform	count=1
module	the ||| client	count=1
module	same specification ||| specification	count=1
function	[returnv_1] if ||| [returnv_1] respond to [function_2]	count=1
function	:paragraph ||| paragraph	count=1
arg	the [arg] ||| [arg]	count=10
function	configure various “with” ||| config	count=1
arg	named files returning ||| file_name	count=1
arg	adds str ||| str	count=1
module	for this module ||| module	count=1
function	[function_1] buffer to ||| [function_2] [function_1]	count=2
arg	host and [arg_2] ||| [arg_1] [arg_2]	count=1
function	the makefile for your ||| makefile	count=1
function	of ||| doc stats	count=1
arg	dependency is satisfied ||| spec dependency	count=1
function	object or ||| object	count=1
function_arg	[function_1] tuple from ||| [arg_2] [function_1]	count=2
module	a availableset as a ||| gem availableset	count=1
arg	returns the result which ||| string	count=1
module	this comment is ||| rdoc comment	count=1
module	an ||| rexml	count=12
module	that are immediately ||| ssl sslsocket	count=1
function_arg	proppatch request [arg_2] ||| [arg_2] [function_1]	count=2
function	but preserve ||| save	count=1
module	header for ||| net httpheader	count=1
module	[module] from the ||| [module]	count=2
function	string after [function_2] ||| [function_2] [function_1]	count=1
module	terminated and ||| thwait	count=1
module	constructor @param ||| parent	count=1
module	gems to ||| requestset	count=1
function	the class or module ||| class or module	count=2
arg	in pairs with the ||| pairs	count=1
module	an rdoc :store for ||| rdoc servlet	count=1
module	and a [module] ||| [module]	count=3
arg	context ||| context statements	count=1
function	the end ||| end	count=1
module	database ||| sdbm	count=6
module	prime numbers ||| prime trialdivision	count=1
returnv	and returns an array ||| array	count=3
module	is set ||| openssl	count=1
returnv	mask value ||| priority_mask	count=1
module	in the list ||| list	count=1
module	the first digit ||| smtp response	count=1
function	replaces the ||| replace	count=2
function	[function_1] crossref ||| [function_1] [function_2]	count=4
module	is established ||| openssl ssl sslsocket	count=1
arg	state of this object ||| state	count=1
arg	proc or block ||| proc &block;	count=2
module	descriptive fields in the ||| specification	count=1
arg	tuple from the ||| tuple sec &block;	count=2
rep	verifies [function_arg_2] ||| [module_1] verify [function_arg_2]	count=1
module	cache ||| sslcontext	count=2
arg	row_count x column_count ||| row_count column_count	count=1
module	hsh whose ||| hash	count=1
module	number ||| openssl ssl sslsocket	count=2
function	extra data ||| from binary extra data	count=1
returnv	[returnv] containing information ||| [returnv]	count=2
module	[module] for ||| [module]	count=5
function	if nan [function_2] ||| [function_2] [function_1]	count=4
arg	meta-programmed ||| single tk comment	count=1
arg	localfile to the ||| localfile	count=2
function	opens the file ||| open	count=1
module	options ||| net http	count=1
module	properly-space list ||| options	count=1
arg	name with permissions ||| name	count=1
function	[function] a ||| array [function]	count=3
module	that is flush to ||| markup	count=1
module	the generated docs will ||| rdoc	count=1
module	hash ||| hash	count=9
arg	[arg_1] of the ||| [arg_2] [arg_1]	count=1
module	image called destination ||| photoimage	count=1
function	a self-signed certificate with ||| create cert	count=1
arg	method in ||| symbol method	count=1
module	space ||| generator state	count=1
module	this hash ||| json ext generator generatormethods hash	count=1
module	name ||| openssl x509 name	count=3
arg	whether this dependency ||| dependency	count=1
function	the latest version ||| latest version	count=1
function	or there [function] ||| have author [function]	count=3
module	be set ||| parent	count=1
module	uri of ||| drb	count=1
module	lists are paragraphs ||| markup tohtmlsnippet	count=1
function	get the ||| drburi	count=1
function	loopback address 127 ||| loopback ?	count=1
module	writes to the stream ||| openssl buffering	count=1
function	returns the ||| external	count=2
module	another fiber resuming ||| fiber	count=1
arg	[arg_1] [arg_2] against ||| [arg_1] [arg_2]	count=4
function	over [function] and objects ||| [function]	count=1
function	then use to configure ||| dir config	count=1
module	nkf ||| nkf	count=1
module	returns uri converted to ||| kernel	count=1
function	rubygems [function_2] ||| [function_2] [function_1]	count=1
function	[returnv_1] public key ||| [function_2] [returnv_1]	count=1
module	the ||| net ftp	count=1
module	deprecate and ||| testcase	count=1
module	dependencies against the gems ||| requestset	count=1
arg	:class) for selector ||| selector	count=1
module	to use a availableset ||| gem availableset	count=1
function	extracts parameters from the ||| rb scan args	count=1
arg	both [arg] ||| [arg]	count=2
arg	directs ||| args &blk;	count=2
function	the name of the ||| name	count=1
function	update [function_2] ||| [function_2] [function_1]	count=1
arg	encoding [arg_2] ||| [arg_2] [arg_1]	count=1
function	token [function_2] ||| [function_1] [function_2]	count=1
module	reads ||| rdoc encoding	count=1
module	instance the [module] ||| [module]	count=1
module	bytes that are immediately ||| openssl ssl	count=1
module	and modulus [module] numbers ||| [module]	count=1
module	return the specification that ||| gem resolver conflict	count=1
arg	memberwise operation [arg] ||| [arg]	count=3
module	attr with ||| rdoc attr	count=1
function	to create ||| create	count=1
module	specification that ||| gem resolver conflict	count=1
function	the real user and ||| real	count=1
function	files ||| from	count=1
function	[returnv_1] for ipv6 ||| [function_2] [returnv_1]	count=8
arg	list n is ||| list	count=1
module	for this section ||| rdoc context section	count=1
arg	signer [arg_2] ||| [arg_2] [arg_1]	count=1
arg	than numeric ||| big numeric	count=1
arg	an already ||| failed_dep	count=1
function	required ||| required	count=1
function	block_quote ||| block quote	count=2
module	to the ||| rdoc	count=1
module	terminated and ||| threadswait	count=1
function	true [function_2] ||| [returnv_1] body permitted [function_2]	count=1
module	:http#read_timeout and net :http#open_timeout ||| xmlrpc	count=1
function	root node of ||| root node	count=2
module	to this platform? ||| gem platform	count=1
module	the rd ||| rdoc rd	count=1
arg	state is true ||| state	count=1
returnv	returns the extension the ||| string	count=1
module	part of ||| complex	count=1
module	that :sslcertificate and :sslprivatekey ||| drb	count=1
arg	string according ||| string	count=4
module	a class method/attribute ‘#’ ||| methodattr	count=1
function	[returnv_1] [function_2] still running ||| threadswait [returnv_1] [function_2]	count=1
arg	specified [arg] and ||| [arg]	count=1
module	returns a new array ||| array	count=4
module	the locale object for ||| rdoc i18n locale	count=1
function	sets the ||| set	count=6
returnv	returns the ||| array	count=1
module	ri task ||| ri task	count=1
module	compares the [module] with another ||| [module]	count=1
function	[returnv_1] [function_2] ||| threadswait [returnv_1] [function_2]	count=1
function	non-blocking ||| nonblock	count=1
function_arg	[function_1] parts and ||| [arg_2] [function_1]	count=1
function	sends a rename ||| rename	count=1
function	true [function] contains ||| include [function]	count=1
function	retrieves the ||| fetch	count=1
arg	thread ||| thread	count=1
function	1 ||| 1	count=2
arg	to encoding encoding ||| encoding options	count=2
function	a hash based ||| hash	count=1
returnv	returns self ||| self	count=1
module	of ec ||| encoding converter	count=1
returnv	part of its ||| float	count=1
arg	given base and ||| base level	count=1
module	to the output ||| rdoc markup	count=2
function	report on ||| report	count=2
returnv	visibility for ||| self	count=1
module	to the output ||| markup tordoc	count=1
arg	on string [arg_2] ||| [arg_2] [arg_1]	count=4
arg	to a [arg] certificate ||| [arg] cert_chain	count=1
function	a finalizer ||| finalizer	count=1
module	the [module] permission ||| [module]	count=4
arg	func ||| func	count=1
function	finds a instance or ||| find	count=1
module	in enum sorted ||| enumerable	count=1
function	limit ||| text limit	count=1
function_arg	[function_1] tag ||| [arg_2] [function_1]	count=1
function	get the uri of ||| drburi	count=1
module	group ||| htgroup	count=1
function	hax todo deprecate ||| create	count=1
function	method names set ||| set visibility	count=1
function	label list items ||| list item start	count=1
module	any non-root [module] that ||| gem resolver molinillo [module]	count=1
function	natural logarithms to ||| e	count=1
module	visitor for html snippet ||| markup tohtmlsnippet	count=1
function	executables and batch ||| executables	count=1
module	often [module] should ||| [module]	count=1
function	rotates self in place ||| !	count=1
function	instance from a serialised ||| creatable	count=1
function	resets the digest ||| digest !	count=1
function	a rational ||| r	count=2
function	handle the given list ||| handle	count=1
function	[function_1] a superset ||| [function_2] [function_1]	count=2
arg	locking_constant ||| locking_constant	count=1
function	[returnv_1] if the ||| [returnv_1] writable real [function_2]	count=1
function	the current string ||| string	count=1
arg	to the exponent ||| big exponent	count=1
function_arg	[function_1] data to ||| [arg_2] [function_1]	count=1
function_arg	[function_1] spec that ||| [function_1] [arg_2]	count=1
module	temporary directory ||| dir	count=1
function	pager program to ||| setup pager	count=1
arg	certificate if ||| certificate	count=1
arg	of tags ||| start stop	count=1
function	directories the generated docs ||| gen sub directories	count=1
arg	in container with ||| container	count=1
function_arg	the names [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	file at [arg_2] ||| [arg_2] [function_1]	count=1
module	paragraph ||| paragraph	count=1
rep	removes [function_arg_2] ||| [module_1] [function_arg_2]	count=3
function	is a field ||| field	count=1
arg	and is a singleton ||| singleton	count=1
function_arg	to append [arg_2] ||| [function_1] [arg_2]	count=1
arg	:attr directives in comment ||| comment	count=1
module	stored in the ||| webrick	count=1
function	iterates over all ip ||| each address	count=1
function	the [function] gem ||| [function]	count=1
module	the length and ||| rdoc	count=1
returnv	with 14 [returnv] representing the ||| [returnv]	count=1
function	with ||| <=>	count=1
module	command with the given ||| gem command	count=1
function	list of all the ||| file list	count=1
arg	[arg_1] using options ||| [arg_1] [arg_2]	count=1
module	lock ||| lock	count=1
function	handler and ||| handler	count=1
arg	of nodes matching ||| element path namespaces variables	count=1
module	first digit of the ||| net smtp response	count=1
arg	given scheme ||| scheme	count=1
function	the arc cosine ||| acos	count=1
function	the user ||| user	count=1
function	the destination ||| dstaddr	count=1
module	this gem ||| gem specification	count=5
arg	sets ||| val	count=2
function	gem [function_2] ||| [function_1] [function_2]	count=6
function_arg	ip address [arg_2] ||| [arg_2] [function_1]	count=6
arg	of the given set ||| set	count=1
function	lines that ||| lines	count=1
arg	file specified by filename ||| filename	count=1
module	number of bytes that ||| ssl sslsocket	count=1
arg	the timeout is ||| timeout	count=1
function	returns true [function_2] ||| [returnv_1] alive [function_2]	count=1
module	[module] server ||| net [module]	count=2
function	relative ||| relative	count=2
module	response ||| ocsp response	count=2
arg	with other_time ||| other_time	count=1
module	them to #do_write for ||| rinda	count=1
function	the private [function_2] ||| [function_1] [function_2]	count=2
arg	to answer question with ||| question	count=1
module	options ||| options	count=1
module	gem specifications in the ||| gem	count=1
rep	computes [function_arg_2] ||| [module_1] bigdecimal [function_arg_2]	count=12
function	contains the ||| include	count=2
function	server advertises [function_2] ||| [function_1] plain [function_2]	count=1
function	iterates over [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] -infinity ||| [function_2] [function_1]	count=2
function	gregorian ||| gregorian	count=1
module	[module] created ||| [module]	count=2
function_arg	extensions [arg_2] ||| [arg_2] [function_1]	count=1
function	docs ||| gen	count=1
module	in the ||| gem specification	count=1
module	eql? to another version ||| version	count=1
function	the command ||| config	count=1
arg	prefix to ||| level prefix	count=1
arg	encoding ||| encoding	count=6
function	has [function_2] ||| [function_2] [returnv_1]	count=3
function_arg	marshal [arg_2] ||| [arg_2] [function_1]	count=1
rep	of a [function_arg_2] ||| digest [module_1] [function_arg_2]	count=4
function	waits for thr [returnv_1] [function_2] raises the exception which ||| [returnv_1] [function_2]	count=1
returnv	returning an [returnv] ||| [returnv]	count=3
function	their descriptions ||| generator descriptions	count=1
function	creates [function] drbarray ||| [function]	count=1
module	will be ||| rexml	count=1
returnv	the value ||| value	count=3
function	a self-signed ||| create self signed	count=1
function	truncated to an ||| to int	count=1
module	checks that cert ||| x509 certificate	count=1
function	has ||| start	count=1
module	up this object’s comment ||| markup	count=1
arg	meth_name ||| meth_name	count=1
module	return all gem ||| gem	count=1
function	[returnv_1] [function_2] attribute manager ||| attributemanager [returnv_1] [function_2]	count=1
module	http status ||| status	count=1
module	handle ||| handle	count=1
arg	source_uri ||| source_uri install_dir	count=1
function	proxy uri for the ||| proxy	count=1
function	output ||| accept block	count=1
function	the marshal [function_2] ||| [function_2] [function_1]	count=1
module	feed ||| rss atom feed entry	count=1
module	current ||| irb	count=4
function	[function] server socket ||| [function] server	count=2
function	output ||| block quote	count=1
arg	id [arg_2] ||| [arg_2] [arg_1]	count=1
arg	on string [arg_2] ||| openssl digest digest new [arg_1] [arg_2]	count=4
arg	arg either ||| arg	count=1
function	[function_1] [function_2] ||| [function_1] last [function_2]	count=5
function	of the latest release-version ||| latest	count=1
arg	does not print message ||| message	count=1
function_arg	define [function_1] [arg_2] ||| tkresourcedb [function_1] class [arg_2]	count=2
module	aws-sdk gem fortunately a ||| gem	count=1
module	list ||| specification	count=1
module	complete as [module] ||| [module] streamui	count=3
arg	ty at [arg_2] ||| [arg_1] [arg_2]	count=1
arg	for a prefix ||| prefix	count=1
module	in the ||| webrick utils	count=1
function	the type of the ||| type	count=1
function	space between the ||| space	count=1
function	copy ||| clone	count=1
function	sets ||| store	count=1
function	special for links ||| special	count=2
function	if ||| next ?	count=1
function	configure ||| dir config	count=1
module	asks the user to ||| userinteraction	count=1
function_arg	[function_1] method_name in ||| [arg_2] [function_1]	count=1
returnv	a keypair [returnv] ||| [returnv]	count=2
module	form for restricting ||| gem	count=1
function	special sequences of text ||| sequences	count=1
arg	chain ||| chain key	count=1
module	onto the io ||| package tarwriter	count=1
module	joins the raw paragraph ||| markup paragraph	count=1
function	lock and ||| lock	count=1
function_arg	send [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] first and returns self ||| [function_1] [arg_2]	count=9
arg	new_name ||| new_name	count=3
returnv	a proc object proc ||| proc	count=1
function	a field [function_2] ||| [function_1] [function_2]	count=1
function	add a [function_2] ||| [function_2] [function_1]	count=1
arg	to value val ||| val	count=1
function	[function_1] modules in ||| [function_2] [function_1]	count=2
function	the parameters ||| method params	count=1
function_arg	[function_1] buffer string ||| integer [function_1] [arg_2]	count=4
module	other ||| sslconfig	count=1
arg	where z is given ||| z	count=5
module	gathering tt sections ||| tottonly	count=1
function	default ||| default	count=24
arg	string ||| string 1 jan -4712 00:00:00 +0000' start	count=2
module	create the ||| generator	count=1
function	if local gems ||| local ?	count=2
arg	for the given libs ||| libs	count=1
module	kernel ||| kernel	count=2
module	stream is ||| openssl buffering	count=1
module	a new ipaddr ||| ipaddr	count=3
function	fetches ||| fetch	count=1
arg	of calendar reform sg ||| args	count=2
function	child after another ||| after	count=1
arg	with name version ||| name version deps	count=2
module	for classes modules constants ||| rdoc	count=1
module	that a ||| drbsslsocket sslconfig	count=1
function	default value ||| default	count=3
function	issues a site ||| site	count=1
function	inserts ||| insert	count=2
function	angle part of ||| angle	count=1
function	hash self initializing ||| hash	count=1
module	that :sslcertificate and ||| drb	count=1
arg	raw ||| raw	count=1
module	called ||| gem resolver molinillo ui	count=1
returnv	if the ||| bool	count=1
arg	object for the named ||| file_name	count=1
module	attribute value ||| rexml attribute	count=1
function	remove ||| delete	count=2
function	all but ||| dirname	count=1
module	digest in a ||| digest instance	count=1
module	a codeobject and all ||| rdoc codeobject	count=1
arg	year ||| year	count=4
module	specification contains ||| specification	count=1
function	the ||| new	count=2
module	the list of files ||| gem specification	count=1
arg	a subset of names ||| refname mailbox	count=1
function	[function_1] gem name ||| [function_1] [function_2]	count=3
function	a comment for ||| comment	count=1
module	state ||| generator state	count=2
function	return it else create ||| value if need	count=1
returnv	[returnv] sslconfig and ||| [returnv]	count=3
module	path for gems ||| gem	count=1
function	returns a new [returnv_1] [function_2] the database ||| sdbm [returnv_1] [function_2]	count=1
arg	user [arg_2] ||| [arg_1] [arg_2]	count=2
module	this ||| markup	count=1
module	the uri ||| drb	count=1
arg	specified by pid ||| pid raise	count=1
function_arg	[function_1] mod to ||| [arg_2] [function_1]	count=5
arg	embed into binary format ||| binary	count=1
arg	yields itself if called ||| banner width indent	count=1
function	adds tts from ||| quote	count=1
function_arg	content of [arg_2] ||| [function_1] [arg_2]	count=2
function	and sets $? ||| waitpid	count=1
function	the exit [function] ||| [function]	count=2
module	files ||| gem specification	count=1
function	until the given ||| until	count=1
arg	length ||| name length	count=2
arg	content ||| content options stats	count=1
arg	[arg_1] newname ||| [arg_2] [arg_1]	count=3
function	adds classes ||| classes	count=1
function	comment in a ||| comment	count=1
function	setter for extensions ||| extensions	count=1
function	new key pair of ||| create key	count=1
function	template for ||| template for	count=1
module	or ||| drbsslsocket	count=1
module	authors [module] ||| [module]	count=3
arg	a gem [arg] ||| [arg]	count=1
module	created bigdecimal numbers ||| bigdecimal	count=1
function_arg	[function_1] n ||| [arg_2] [function_1]	count=3
function	adds ||| block	count=1
module	possibly with pixel ||| tkphotoimage	count=1
module	descriptive fields ||| specification	count=1
arg	[arg_1] if pattern ||| [arg_2] [arg_1]	count=1
function	returns ||| generator	count=1
module	dh instance has a ||| pkey dh	count=1
function	in the environment variables ||| env	count=1
function	[function_1] [function_2] ||| parser c [function_1] [function_2]	count=8
function	if the gem is ||| ?	count=1
function	assigned [function] it ||| [function]	count=1
module	raw ||| cgi queryextension	count=1
module	returns the row ||| csv row	count=1
returnv	waits if it ||| self	count=1
function	ipv4 loopback address ||| ipv4 loopback ?	count=2
function	sets the preset dictionary ||| dictionary	count=1
module	struct subclass and have ||| struct	count=1
function	http version [function] show ||| [function]	count=1
module	of the peer certificates ||| ssl sslsocket	count=1
module	an element if supplied ||| rexml elements	count=1
module	eigenvectors ||| matrix eigenvaluedecomposition	count=1
module	tempdir unless the ||| gem	count=1
arg	+event+s that match tuple ||| event tuple	count=1
arg	text [arg_2] ||| [arg_2] [arg_1]	count=4
function_arg	int [arg_2] ||| [arg_2] [function_1]	count=1
function	active ||| editing	count=2
arg	maxlen bytes from the ||| maxlen	count=2
module	form for restricting gems ||| gem requestset	count=1
function	constant ||| const get	count=2
arg	[arg] as ||| [arg]	count=5
module	syslog alert log level ||| syslog logger	count=1
arg	all typeclass ||| typeclass	count=1
function	caller of this ||| location of caller	count=1
function	skip the var in ||| skip	count=1
function	will live in if ||| gen sub	count=1
function	microseconds for ||| tv usec	count=1
function	opens a socks ||| new	count=1
module	for ||| markup	count=8
function	notifications ||| notify	count=1
arg	specification in specs ||| specs	count=1
function	stream is ||| stream end	count=1
returnv	is made with ||| bool	count=1
function	[function_1] parent of ||| [function_2] [function_1]	count=1
module	will be ||| parent	count=1
function	completion ||| completion	count=1
arg	[arg_1] from_name ||| [arg_2] [arg_1]	count=1
arg	handler for pattern ||| pattern	count=1
function_arg	[function_1] to real ||| [arg_2] [function_1]	count=1
module	skip ||| rdoc parser ruby	count=2
arg	the string ||| string	count=1
module	toplevel for ||| rdoc toplevel	count=1
function	that holds ||| nl	count=1
arg	index of the ||| index	count=1
module	create [module] ||| [module]	count=2
module	requirementlist ||| resolver requirementlist	count=1
function_arg	proc [arg_2] ||| tkresourcedb new [function_1] [arg_2]	count=3
arg	pass - [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] methods to ||| [arg_2] [function_1]	count=1
module	rdoc :attr ||| rdoc parser ruby	count=4
function	the ||| sub	count=2
function	is a header row ||| header row	count=1
module	undocumented ||| stats	count=1
function	removes the ||| remove class variable	count=1
function	that contains filename as ||| result	count=1
function	the path to ||| name path	count=1
function_arg	patch request [arg_2] ||| [arg_2] [function_1]	count=2
function	openssl :x509 ||| email	count=1
arg	text and method or ||| text	count=1
module	same method definition ||| method	count=1
module	file component ||| file	count=1
arg	list ||| list	count=12
arg	self_hash [arg] ||| mod self_hash [arg]	count=1
function	using inspect to convert ||| inspect	count=1
module	file according to ||| file	count=1
module	openssl ||| openssl pkey pkey	count=1
module	representation for this integer ||| json ext generator generatormethods	count=1
module	if stat is ||| stat	count=2
function	finishes consumption ||| end	count=5
arg	not the ||| headers opt &b;	count=2
function	[returnv_1] if ||| [returnv_1] header row [function_2]	count=2
function_arg	returns the value in [function_1] [arg_2] ||| sdbm value [function_1] [arg_2]	count=2
arg	list to [arg_2] ||| [arg_2] group [arg_1]	count=2
module	an apispecification ||| resolver apispecification	count=1
module	syslog err log ||| syslog logger	count=1
function	[function] as a ||| [function]	count=3
module	in if ||| darkfish	count=1
function_arg	[function_1] dep ||| [arg_2] [function_1]	count=2
function	disables ||| disable	count=1
module	builds a rdoc ||| rdoc ri driver	count=2
module	the first digit of ||| net smtp response	count=1
module	to ||| uri generic	count=2
function	supplied will be set ||| new	count=1
function	for [function] obtained by ||| [function]	count=1
function	paragraph from the token ||| paragraph	count=1
module	this response ||| openssl ocsp response	count=2
arg	running on front with ||| front desc	count=1
arg	or fills the cache ||| page klass	count=1
module	whether the response received ||| smtp response	count=2
function	a proxy uri for ||| proxy from	count=1
module	fields ||| gem specification	count=1
function	a normalized ||| normalize	count=1
function	this module of ||| extension modules	count=1
function	[function_1] valid ||| [function_2] nz [function_1]	count=2
function	returns true if ||| bool value ?	count=1
arg	[arg] string ||| [arg]	count=3
module	that a gem couldn’t ||| gem	count=1
module	gem was ||| gem specification	count=1
function	containing the public ||| public	count=1
arg	other following edges in ||| other	count=1
module	database for ||| gdbm	count=1
arg	the given [arg] ||| [arg] opts	count=1
function	checks the nonce validity ||| check nonce	count=1
function_arg	:markup :paragraph [arg_2] ||| [function_1] [arg_2]	count=3
arg	an httpresponse object ||| initheader	count=1
function	[function_1] [function_2] threads in the pool ||| [function_2] [function_1]	count=4
function_arg	[function_1] rows and ||| [arg_2] [function_1]	count=1
returnv	returns the value of ||| value	count=1
function	constant with the ||| const get	count=1
arg	given permissions ||| permissions passphrase	count=1
function	add a new set ||| add	count=1
function	[returnv_1] after ||| [returnv_1] [function_2]	count=4
module	and ||| rdoc stats	count=2
module	waits if it isn’t ||| thread mutex	count=1
function	and calls verify ||| verify signatures	count=1
module	rdoc generator ||| rdoc rubygemshook	count=1
function	[returnv_1] [function_2] within this {#graph} ||| dependencygraph vertex [returnv_1] [function_2]	count=1
arg	data for ||| data options	count=1
function	defined by _ ||| defined	count=1
arg	a fiber-local variable ||| sym	count=1
module	defined methods to ||| module	count=1
arg	[arg_1] min ||| [arg_2] [arg_1]	count=7
module	bytes that are ||| openssl ssl sslsocket	count=1
function	number of undocumented items ||| stats	count=1
arg	to comment ||| comment	count=2
function	name and version ||| name	count=1
module	source ||| rexml source	count=2
module	ios to the ||| io	count=1
function	output generator for ||| setup generator	count=1
arg	raises exception ||| exception	count=1
arg	by n ||| n zero	count=1
arg	when [arg] ||| [arg] activated	count=2
function	lock and waits if ||| lock	count=1
function	reply 2xx reply ||| success	count=1
arg	path matches [arg_2] ||| [arg_2] [arg_1]	count=1
module	http server uses the ||| webrick httpserver	count=1
module	the other parameters provided ||| drb	count=1
module	pointer for this pointer ||| pointer	count=2
returnv	the number of native ||| integer	count=1
returnv	collection returning [returnv] garbage ||| [returnv]	count=2
function	the latest ||| latest	count=1
function	user can ||| config	count=1
arg	directory set [arg] ||| [arg]	count=1
arg	on front with a ||| front desc	count=1
module	called ||| ui	count=1
function	change attributes [function_2] ||| [function_2] [function_1]	count=1
module	pstore object ||| pstore	count=1
module	dh ||| dh	count=3
arg	:anymethod [arg] ||| type var_name [arg] function param_count	count=3
arg	tests the level ||| level	count=1
arg	against [arg_2] ||| [arg_2] [arg_1]	count=1
arg	specified destination mailbox ||| mailbox	count=2
function	[returnv_1] [function_2] ||| [returnv_1] eql [function_2]	count=6
function	[function_1] instance variable ||| [function_2] [function_1]	count=2
arg	value value with the ||| value	count=1
arg	the attribute [arg] ||| [arg]	count=2
function	[function_1] spec ||| [function_2] [function_1]	count=2
arg	object and connects to ||| address port helo user secret authtype	count=1
function	[function_1] ruby ||| [function_2] api [function_1]	count=1
function	to read ||| read nonblock	count=1
function	closes ||| close !	count=1
module	command ||| imap	count=12
function	the given file ||| file	count=1
module	the expired certificate ||| gem security	count=1
module	from the [module] first n ||| [module]	count=1
function	methods cache accessor ||| methods	count=1
function	certificate is generated ||| certificate	count=1
module	acl from ||| acl	count=1
arg	anchor a ||| anchor	count=1
arg	command exists in ||| command	count=1
module	and :sslprivatekey have ||| drb	count=1
arg	from [arg] ||| realm [arg]	count=1
function	[function_1] an error ||| [function_2] [function_1]	count=1
module	with the other parameters ||| drbsslsocket sslconfig	count=1
arg	temporary file ||| tmpdir	count=1
module	uri :http object ||| uri http	count=1
module	when the first instance ||| syslog logger	count=1
function	attempts ||| only	count=1
module	this gem into ||| gem	count=1
module	edge represents @return ||| gem resolver molinillo	count=1
function	hax todo deprecate and ||| create	count=1
arg	:http object without opening ||| address port p_addr p_port p_user p_pass	count=1
arg	from given enum ||| enum enc	count=1
module	the group database ||| httpauth htgroup	count=1
arg	source_string and return destination_string ||| source_string	count=1
function	domain if local gems ||| local ?	count=1
function	if [function_2] ||| [function_2] conflicts [function_1]	count=1
function_arg	[function_1] [arg_2] ||| pre [function_1] [arg_2]	count=4
function	look for ||| look for	count=1
module	represents @return ||| resolver molinillo	count=1
arg	using options from ||| options	count=1
module	[‘blt_graph_bar’ ||| graph	count=1
arg	named name ||| name	count=1
module	command and ||| imap	count=1
arg	time and was signed ||| time	count=1
module	created bigdecimal ||| bigdecimal	count=1
returnv	:break :redo :retry :next ||| symbol	count=1
function	latest version of a ||| latest version	count=1
function	the definition ||| definition	count=2
module	it isn’t available ||| thread mutex	count=1
function	prepares the visitor for ||| accept list item	count=4
module	list ||| gem specification	count=1
function	switches the ||| by col	count=1
arg	and name as ||| name	count=1
module	and ||| client	count=1
function	the names of singleton ||| singleton	count=1
module	to the output ||| markup tottonly	count=1
function	html id-friendly version ||| html name	count=1
function	[function_1] is empty ||| [function_2] [function_1]	count=2
arg	value val ||| val	count=1
function	loads ri data for ||| load method	count=1
arg	in file1 [arg_2] ||| [arg_1] [arg_2]	count=1
arg	with message m ||| args	count=1
module	to the files ||| options	count=1
module	a password from the ||| webrick httpauth htpasswd	count=1
module	creates ||| resource in a	count=1
function	serializes ||| marshal dump	count=1
module	version from ||| gem version	count=1
function_arg	[function_1] string into ||| [function_1] [arg_2]	count=1
function	returns the name ||| to	count=1
function	machine representation ||| size	count=1
function	sorted by salience first ||| sorted module	count=1
module	generates [module] with length ||| [module]	count=1
function	the encoding object that ||| external	count=2
function	of all [function] dependency on ||| dependent [function]	count=1
function	prepares ||| item	count=4
function	dependency request match ||| match	count=1
function	array [function_2] ||| [function_2] [returnv_1]	count=5
arg	[arg] 0 for ||| certificate_id [arg] reason revocation_time this_update	count=2
module	encoding with specified name ||| encoding	count=1
function	[function_1] paragraph ||| [function_1] [function_2]	count=2
module	the alias of a ||| rdoc alias	count=1
arg	port and accepts ||| port	count=1
function	a potential ||| hyperlink	count=1
module	that :sslcertificate and ||| drb drbsslsocket sslconfig	count=1
arg	column ||| column	count=1
module	restricting gems to a ||| gem requestset	count=1
module	if ||| thread mutex	count=2
function	[function] of the ||| config file [function]	count=1
module	don’t already exist ||| darkfish	count=1
module	wrap ||| fiddle importer	count=3
module	:sslcertificate ||| drb	count=1
function	the successor ||| succ	count=1
arg	by forwarding the ||| m include_private	count=1
module	of this singleton class ||| singleclass	count=1
module	to this object’s ||| rdoc generator markup	count=1
function	strings are [function] ||| [function]	count=3
returnv	[returnv] it ||| [returnv]	count=6
arg	[arg_1] comment to ||| [arg_2] [arg_1]	count=5
module	will live in if ||| rdoc generator darkfish	count=1
arg	tuple ||| event tuple expires	count=1
function	false if ||| ?	count=5
arg	creates a digest [arg_1] [arg_2] ||| openssl digest digest new [arg_1] [arg_2]	count=4
returnv	of the month 1 ||| fixnum	count=1
arg	a [arg_2] ||| rfc3339 [arg_2] [arg_1]	count=1
arg	localfile ||| localfile blocksize	count=1
function	port number 25 ||| port	count=1
module	if stat is a ||| file stat	count=1
arg	to path ||| path update	count=1
module	its original state ||| gem	count=1
returnv	the ||| encoding	count=6
module	to ||| kernel	count=1
function_arg	gem [arg_2] ||| [function_1] user [arg_2]	count=3
returnv	float ||| float	count=2
module	to identify ||| net	count=1
module	[module] using ||| gem [module]	count=1
function	input method is still ||| after	count=1
function	the permissions of the ||| permissions	count=1
module	this asn1data into ||| openssl asn1 asn1data	count=1
function	[function_1] extends ||| [function_1] includes and [function_2] for	count=3
function	[returnv_1] [function_2] ||| thwait [returnv_1] empty [function_2]	count=1
function	a space [function_2] ||| [function_1] [function_2]	count=4
module	from ||| gem version	count=2
function	rounding mode for use ||| rounding mode	count=1
function	file ||| external	count=2
module	@return edge ||| resolver molinillo dependencygraph	count=1
function	that is relative ||| gen relative	count=2
function	self-signed certificate with ||| cert self signed	count=1
function	[function_1] development ||| [function_1] [function_2]	count=1
function	authentication and ||| auth	count=1
function	a proxy ||| proxy from	count=1
module	returns this response ||| ocsp response	count=1
arg	match tuple and ||| tuple	count=1
arg	and other refer to ||| other	count=1
arg	this dependency which has ||| dependency	count=1
function	headers ||| headers	count=3
function	local variables ||| local variables	count=2
function	from ||| accept block quote	count=1
function	prepares the visitor ||| accept list item	count=4
module	matching that glob will ||| gem	count=1
module	gzipreader object ||| zlib gzipreader	count=1
function	:name ||| to name	count=1
function	valid ‘nz_number’ in ||| valid nz number	count=2
module	marks ||| markup	count=2
module	the cgi process ||| webrick cgi	count=1
function	[function_1] the file ||| [function_1] [function_2]	count=1
function	in the list satisfied? ||| ok	count=1
arg	given list of arguments ||| args	count=2
function_arg	the value of fix [function_1] [arg_2] ||| bool [function_1] fix [arg_2]	count=1
module	block form for restricting ||| gem requestset gemdependencyapi	count=1
module	to ||| driver	count=1
function	microseconds for ||| usec	count=1
module	clears ||| shell commandprocessor	count=1
module	sessions used to ||| jobmanager	count=1
module	specification for ||| gem resolver	count=1
function	appropriate [function] in ||| [function]	count=1
function	visitor ||| visitor	count=1
function	[returnv_1] [function_2] ||| [returnv_1] empty [function_2]	count=5
function	node ||| node	count=1
function	if the ||| writable ?	count=1
function	makefile for ||| makefile	count=1
function	thread ||| thread	count=2
arg	[arg_1] store ||| [arg_1] [arg_2]	count=4
module	the ||| syslog logger	count=2
module	copy ||| net http	count=1
module	the parsing of ||| stats	count=6
module	method will be ||| rdoc task	count=1
function_arg	a socks [arg_2] ||| [function_1] [arg_2]	count=1
arg	for address ||| address	count=6
function	[function] variable ||| remove [function]	count=2
function	to expect full paths ||| full paths ?	count=1
module	edge represents @return edge ||| gem resolver molinillo	count=1
module	the –platform option to ||| versionoption	count=1
function	a stream a and ||| stream	count=1
module	file or ||| pathname	count=1
arg	proc or ||| proc	count=1
function_arg	[function_1] dependency is ||| [arg_2] [function_1]	count=3
function	is a socket ||| socket	count=1
function	map starts ||| start mapping	count=2
arg	[arg_1] symbol ||| [arg_2] [arg_1]	count=8
function	is empty ||| ?	count=1
function	return the text ||| text	count=1
module	to the ||| rdoc markup tottonly	count=1
function	for ipv6 unspecified ||| ipv6 unspecified ?	count=2
function	the end of ||| end	count=1
module	variable was set ||| gem testcase	count=1
arg	for compression ||| level window_bits mem_level strategy	count=1
function	[function] dependency on ||| dependent [function]	count=1
module	this section if it ||| rdoc context section	count=1
arg	match the given dependency ||| dependency	count=1
module	converts a bigdecimal ||| bigdecimal	count=1
arg	key ||| key	count=27
module	for the given command ||| command	count=1
module	a range using ||| range	count=1
function	to change attributes ||| changed attribute	count=1
arg	start to [arg_2] ||| [arg_2] [arg_1]	count=1
function	value ||| value	count=12
function	[function] representation ||| [function]	count=3
function	visitor [function_2] ||| [function_1] [function_2]	count=4
function	profile data ||| data	count=1
arg	week ||| cwyear cweek cwday	count=1
function	updates the child modules ||| update	count=1
arg	connection to host ||| host	count=1
arg	[arg_1] and key ||| [arg_1] [arg_2]	count=1
arg	a string according to ||| string 1 jan -4712 00:00:00	count=2
module	from a c ||| parser c	count=1
module	socket as ||| basicsocket	count=1
module	summary ||| optionparser list	count=1
function	but preserve [function_2] ||| [function_2] [function_1]	count=5
function	returns the sine ||| sin	count=1
function	name of the latter ||| name for path	count=1
module	this state ||| json ext generator state	count=1
function_arg	[function_1] specified ||| [arg_2] [function_1]	count=1
module	have been provided ||| drb drbsslsocket	count=1
module	that a gem ||| gem	count=1
function	method to add a ||| add	count=1
returnv	convert self to ||| string	count=3
function	returns the headers for ||| headers	count=1
module	rdoc :store for the ||| rdoc	count=1
module	ipaddr is an ||| ipaddr	count=1
module	for marking up this ||| generator markup	count=1
function	of all ||| of all	count=2
module	prepares the visitor ||| rdoc markup totableofcontents	count=1
function	[function_1] extra args ||| [function_2] [function_1]	count=3
function	an alias [function_2] ||| [function_2] [function_1]	count=1
function	[returnv_1] if key ||| [returnv_1] [function_2]	count=2
arg	obj is an element ||| obj	count=1
function	certificate with an ||| create cert	count=2
arg	new regexp object ||| object	count=1
returnv	an ||| unixsocket	count=1
function	if stat ||| ?	count=3
module	creates a new loc ||| loc	count=1
module	command to add the ||| net imap	count=1
function	domain if local ||| local ?	count=2
function_arg	[function_1] port ||| [arg_2] [function_1]	count=6
module	statements [module] ||| [module]	count=1
module	list ||| options	count=1
returnv	rational which denotes ||| rational	count=1
function	are the same type ||| eql	count=1
function	concatenated ||| collect concat	count=1
module	<< myclassname ||| rdoc	count=1
arg	waiting for tag ||| tag	count=1
arg	transfers localfile ||| localfile remotefile blocksize	count=1
module	new hash ||| hash	count=1
module	creates the [module] ||| [module]	count=3
function_arg	[function_1] method_body and ||| [arg_2] [function_1]	count=2
function	itself ||| binmode	count=1
function	the buffer to ||| buffer	count=1
arg	file from ||| file	count=1
returnv	the string representation of ||| string	count=1
arg	early binding method ||| dispid args types	count=1
module	specification ||| gem resolver	count=2
function_arg	[function_1] name a ||| [arg_2] [function_1]	count=1
arg	includes ||| includes	count=1
module	be a [module] ||| [module]	count=3
module	if stat is executable ||| stat	count=1
rep	[module_1] an anchor ||| [module_1] [function_arg_2]	count=2
module	to this inline ||| rdoc rd inline	count=1
arg	called after [arg] was destroyed ||| [arg]	count=1
function	waits for thr [returnv_1] [function_2] the exception which terminated ||| thread [returnv_1] [function_2]	count=1
module	of indices as row ||| csv table	count=1
function	path to the key ||| key path	count=1
function	combines [function_2] ||| [function_2] [function_1]	count=1
arg	name a ||| name	count=1
function	[returnv_1] if the ||| [returnv_1] executable real [function_2]	count=1
arg	obj’ ||| obj	count=1
function_arg	module [arg_2] ||| [arg_2] [function_1]	count=10
module	a ||| rdoc	count=2
arg	method_name in [arg_2] ||| [arg_2] [arg_1]	count=2
module	files to ||| gem	count=1
arg	field to ||| field	count=1
module	line by ||| makemakefile	count=1
arg	[arg] instance variables ||| file_name content options [arg]	count=2
module	of this object ||| parent	count=1
function	:sslcertificate and :sslprivatekey ||| setup	count=1
module	in enum ||| enumerable	count=5
module	gem names to arrays ||| gem	count=1
function	exit value ||| exit value	count=2
function	finishes consumption of ||| end	count=5
function	[function] which was ||| proxy [function]	count=3
function	returns the bound receiver ||| receiver	count=1
function	as a ||| to	count=14
module	:specification for the installed ||| installer	count=1
function	if yield would execute ||| given ?	count=1
function_arg	adds [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	hostname of [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] variable names ||| [function_1] [function_2]	count=3
module	writes ||| rdoc options	count=1
function	path to the ||| path	count=4
arg	[arg] the ||| path [arg]	count=3
module	file according ||| file	count=1
module	of indices as row ||| csv	count=1
function	can then use ||| dir config	count=1
arg	front with ||| front desc renewer	count=1
function_arg	the power [arg_2] ||| [function_1] [arg_2]	count=3
module	in ||| net httpheader	count=1
arg	user user ||| user	count=1
arg	message m ||| args	count=1
function	[function_1] or ||| [function_1] [function_2]	count=5
function	sign the public key ||| sign	count=1
function	starts tracing [function_2] ||| [function_1] [function_2]	count=2
arg	out with a heading ||| out	count=1
function	is [function] ||| [function]	count=10
function	memory address ||| i	count=1
function_arg	relative [arg_2] ||| [function_1] url [arg_2]	count=1
function	[returnv_1] [function_2] the gem in ||| [returnv_1] [function_2]	count=1
function	target [function] the ||| [function]	count=1
module	:sslprivatekey have ||| drb drbsslsocket	count=1
function	passing each substring ||| each	count=1
function	[function_1] variable ||| parser c [function_1] [function_2]	count=1
module	current string ||| string	count=1
function	disk ||| generate	count=1
module	see ||| irb	count=1
function	[function_1] auth login ||| [function_2] [function_1]	count=1
function	[function_1] as ||| [function_2] [function_1]	count=6
arg	— returns an integer ||| ary	count=1
function	module is ||| module	count=1
module	the [module] value by ||| [module]	count=1
module	if stat ||| stat	count=5
function	then use ||| dir config	count=1
arg	in file1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] from socket ||| [function_1] [function_2]	count=1
module	password in ||| webrick httpauth htpasswd	count=1
function	return a nametuple that ||| name tuple	count=1
function	[function_1] [function_2] ||| [function_1] remote [function_2]	count=2
function	instance [function] key ||| [function]	count=1
module	database ||| dbm	count=16
function	next object ||| next	count=1
arg	and port ||| port	count=1
module	a version from ||| gem version	count=1
arg	exception [arg] and ||| [arg]	count=1
function	symbolic link false ||| symlink	count=1
function	by using that name ||| dir config	count=1
arg	string according to some ||| string	count=2
arg	method_name in ||| method_name	count=2
module	from this hash ||| generator generatormethods hash	count=1
function	profiler ||| profile	count=2
function	progress information if ||| debug msg	count=1
arg	[arg] given ||| obj) [arg]	count=2
function	given block once ||| if	count=1
module	this store ||| rdoc store	count=1
module	command line by using ||| makemakefile	count=1
function	original name str ||| orig name=	count=2
function	did not previously exist ||| sym	count=1
returnv	a string for ||| string	count=2
function	sequence [function_2] ||| [function_2] [function_1]	count=2
arg	also_in to [arg_2] ||| [arg_2] [arg_1]	count=2
arg	of decimal to the ||| decimal	count=3
module	parsing of ||| rdoc stats	count=6
arg	attribute in context ||| context	count=1
function	the encoding of ||| encoding	count=3
module	module? ||| rdoc classmodule	count=2
module	graph to which ||| molinillo	count=1
function	:sslprivatekey have ||| setup	count=1
arg	given string ||| string level	count=1
arg	given base_directory to ||| base_directory	count=1
arg	[arg] and ||| [arg] stdin	count=1
function	gets the title ||| title	count=1
arg	certificate [arg_2] ||| [arg_1] [arg_2]	count=3
module	dependency in the given ||| gem requestset gemdependencyapi	count=1
arg	the reference to ||| ref	count=1
module	the authoritative instance of ||| gem commandmanager	count=1
module	of [module] element ||| [module]	count=1
module	at num ||| numeric	count=1
arg	a ||| flags	count=1
function_arg	adds aproc as [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
module	the specification contains ||| gem specification	count=1
function	[function] given ||| add [function]	count=2
module	header ||| net httpheader	count=6
function	length and number of ||| doc stats	count=1
function_arg	a module [arg_2] ||| [function_1] [arg_2]	count=4
module	grab the ||| thread mutex	count=1
function_arg	[function_1] is implicit ||| [function_1] version tag_directives [arg_2]	count=3
function	internal syslog object that ||| syslog	count=1
arg	in comment ||| comment	count=1
function	single gem name from ||| one gem name	count=1
function	found ||| found	count=1
function	documented modules sorted ||| get sorted module	count=1
module	[module] that ||| [module]	count=1
function	gem version from ||| gem names and	count=1
function	full names of all ||| all names	count=1
function	[returnv_1] numerator ||| [returnv_1] [function_2]	count=2
arg	given path as ||| path	count=1
module	the status class corresponding ||| webrick	count=1
function	returns a [function_2] ||| [function_2] [function_1]	count=17
function	[function] with ||| to [function]	count=1
module	returns an array ||| array	count=3
arg	cn and a comment ||| cn comment	count=1
function	variable [function_2] ||| [function_1] [function_2] map_name	count=3
arg	a net :httpresponse ||| uri_or_host path port &block;	count=1
function	return value ||| obj value	count=1
function	t_data ||| count tdata	count=1
arg	storing top_level [arg_2] ||| [arg_1] [arg_2]	count=6
module	it isn’t available ||| thread	count=1
module	version string ||| gem version	count=1
function	use to ||| dir config	count=1
function	that :sslcertificate and :sslprivatekey ||| setup	count=1
function	block form for ||| platform	count=1
module	tempdir unless ||| gem testcase	count=1
function	the encoding of the ||| encoding	count=3
function	string explanation ||| explain	count=1
arg	given path returning the ||| path	count=1
function	checks the ||| check	count=2
function_arg	adds aproc as [function_1] [arg_2] destroyed ||| [function_1] [arg_2] aproc	count=2
arg	typeclass ||| typeclass	count=2
arg	new_name a new ||| new_name	count=1
module	rdoc :document using the ||| rdoc markdown	count=1
arg	arg either a string ||| arg	count=1
arg	string or block ||| string filename lineno	count=1
function	extra ||| extra	count=3
arg	string or block ||| string	count=1
arg	config [arg_2] ||| [arg_1] [arg_2]	count=1
module	accessor for the spec’s ||| installer	count=1
function_arg	if the value of [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	klass in the ||| klass	count=1
function	switches the ||| by col !	count=1
returnv	:next :return or ||| symbol	count=1
module	the visitor for ||| rdoc markup	count=7
returnv	returns the process ||| integer	count=1
function	by the ||| by	count=1
function	a new ||| new	count=127
module	time ||| generator darkfish	count=1
arg	name in ||| name	count=1
function	and -infinity ||| ascii only	count=1
arg	length bytes defaulting ||| length	count=1
function_arg	[function_1] b ||| [arg_2] [function_1]	count=6
function	escapes special sequences ||| sequences	count=1
module	hax todo deprecate ||| gem	count=1
function_arg	[function_1] specified value ||| [function_1] [arg_2]	count=1
function	private instance methods ||| private instance methods	count=3
arg	the string key provided ||| key	count=1
function	the owner of the ||| grpowned	count=1
function_arg	[function_1] body ||| [function_1] [arg_2]	count=1
module	are immediately available for ||| openssl	count=1
function	[function] defining the ||| [function]	count=2
function	public instance ||| public instance	count=2
module	removes ||| parser c	count=1
arg	against ||| ) → (true or false	count=1
module	terminated ||| threadswait	count=3
module	array with elements ||| array	count=1
arg	indicated [arg_2] ||| [arg_2] [arg_1]	count=2
function	system blocks allocated for ||| blocks	count=1
function	[function_1] methods in ||| [function_2] [function_1]	count=1
function	key with the public ||| public	count=1
module	list ||| optionparser	count=1
function_arg	[function_1] for req ||| [function_1] [arg_2]	count=1
arg	str ||| str enc separator: '&' use__charset_: false	count=1
arg	the parent of ||| parent	count=1
function	of generators ||| generator	count=1
returnv	true if this is ||| bool	count=2
function	string-like parse the ||| []	count=1
module	executes the [module] ||| [module]	count=1
function	domain if remote ||| remote ?	count=2
module	creates [module] unnamed empty ||| [module]	count=1
function	the default [function_2] ||| [function_2] [function_1]	count=11
function	lazy enumerator ||| lazy	count=1
function	[function_1] [function_2] ||| [function_2] line [function_1]	count=2
function	of iteration ||| collect	count=1
function	switch ||| switch	count=1
module	is ||| logger	count=2
module	with the ||| instructionsequence	count=1
function	debug information to ||| debug	count=1
function	interpreting ary [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] directory dir ||| [arg_2] [function_1]	count=6
function	number ||| doc stats	count=1
function	[function_1] request to ||| [function_2] [function_1]	count=12
function	creates an unsigned ||| create	count=1
function	setter for the opaque ||| opaque=	count=1
module	cert signature is made ||| openssl x509	count=1
function	[function] class and ||| generate class [function]	count=3
function	the concatenated ||| concat	count=1
module	returns the encoding object ||| io	count=1
arg	named file to the ||| file	count=2
arg	given ||| year	count=2
function	object and having impltypeflag_fdefault ||| default ole types	count=1
arg	str ||| str enc separator: '&' use__charset_: false isindex:	count=1
module	a markup ||| markup	count=1
module	removes the ||| testcase	count=1
arg	[arg] dependencyrequest ||| dep from_name from_version [arg]	count=2
function	aref defined ||| aref	count=1
function	of global ||| global	count=1
function	public method ||| public instance method	count=1
function	if obj ||| ?	count=1
function	:base64 ||| base64	count=1
returnv	nested array of ||| array	count=1
function_arg	the content [arg_2] ||| [function_1] [arg_2]	count=2
arg	numbers ||| ubound generator &block;	count=1
module	ipaddr built by converting ||| ipaddr	count=2
module	the feed ||| feed	count=2
module	to this method ||| method	count=1
function_arg	parses a [arg_2] ||| [function_1] [arg_2]	count=5
module	with [module] name if ||| [module]	count=1
function_arg	[function_1] the path ||| [function_1] [arg_2]	count=18
arg	given_name with superclass ||| given_name superclass	count=2
module	requirement will ||| requirement	count=1
function	returns true if ||| bool renamable ?	count=1
returnv	proc object proc ||| proc	count=1
module	readline ||| readline	count=2
module	starts a pop3 ||| pop3	count=1
function_arg	if time [arg_2] ||| [arg_2] [function_1]	count=3
module	single-column matrix ||| matrix	count=1
function_arg	sends a [arg_2] ||| [function_1] [arg_2]	count=3
function	location of the spec ||| spec	count=1
module	multiple object+ ||| array	count=1
function	singleton ||| singleton	count=4
function	fiber-local variables ||| keys	count=1
module	thread ||| thread	count=8
function	[function] or ||| find class [function]	count=2
function_arg	[function_1] the signatures ||| [function_1] spec [arg_2]	count=2
rep	the parsing [function_arg_2] ||| [module_1] [function_arg_2]	count=6
module	fields ||| gem	count=1
arg	filehandler servlet [arg] ||| [arg] root options	count=3
function	as ||| to s	count=1
returnv	supplied will be ||| instance	count=1
function	along with the classes ||| classes and	count=1
function	builds a [function_2] ||| [function_2] [function_1]	count=8
function	workspace stack [function_2] ||| [function_2] [function_1]	count=2
module	the [module] specified by ||| [module]	count=1
function	a paragraph from ||| paragraph	count=1
module	conflicting dependency’s name matches ||| resolver conflict	count=1
function	[function] enumerator object ||| [function]	count=1
function	marshal library ||| marshal load	count=2
module	create returns an rdoc ||| rdoc tomdoc	count=1
module	in database with ||| yaml dbm	count=1
module	up this object’s ||| generator markup	count=1
module	bytes that are immediately ||| ssl sslsocket	count=1
module	prepares the visitor ||| rdoc markup	count=7
arg	list and [arg_2] ||| [arg_2] [arg_1]	count=2
module	to build_extensions ||| gem	count=1
module	creates server sockets based ||| server	count=1
function	a method ||| method	count=1
arg	[arg_1] matches against ||| [arg_2] [arg_1]	count=1
function	html generation ||| accepting	count=1
arg	string returning the ruby ||| string	count=1
module	and remove ||| gem testcase	count=1
function_arg	[function_1] event ||| [arg_2] [function_1]	count=2
function	[returnv_1] the locale ||| [function_2] [returnv_1]	count=1
arg	iterates over all hostnames ||| &proc;	count=1
function	if local gems should ||| local ?	count=1
function_arg	the index [arg_2] ||| [function_1] [arg_2] selector	count=1
function	return the [function] this nameerror ||| [function]	count=1
module	enumerates through the vertices ||| dependencygraph	count=1
function	is a symbolic link ||| symlink	count=2
arg	from start to ||| start	count=1
returnv	if supplied will ||| instance	count=1
arg	[arg] thread-safe ||| [arg]	count=1
module	rdoc ||| rdoc markup	count=3
function	loads the given file ||| load	count=2
function	and number of undocumented ||| doc stats	count=1
module	a drb ||| drb	count=2
module	convert this node to ||| nodes node	count=1
module	the [module] see eigenvaluedecomposition ||| [module]	count=1
function	server advertises auth ||| capable login auth	count=1
arg	object req to the ||| req	count=1
module	parameters provided ||| drb drbsslsocket	count=1
module	tools ||| rdoc parser rubytools	count=1
module	are paragraphs ||| markup tohtmlsnippet	count=1
function	[function_1] given key ||| [function_2] [function_1]	count=4
function	freeze status ||| frozen	count=1
module	comment are used ||| comment	count=2
function	key pair ||| key	count=1
arg	[arg_1] mailbox ||| [arg_2] [arg_1]	count=6
function_arg	parses the [arg_2] ||| [arg_2] [function_1]	count=7
function	is not a convenience ||| ?	count=1
function	tts from ||| block	count=1
module	a binary ||| gem testcase	count=1
function	the build info ||| build info	count=2
module	gem file matching ||| gem	count=1
module	immediately available for ||| ssl sslsocket	count=1
module	table ||| csv table	count=3
arg	object ||| obj	count=5
function	modules sorted ||| sorted module	count=1
arg	after [arg] was destroyed ||| [arg]	count=1
function	directory of the file ||| dir	count=1
function_arg	server on [arg_2] ||| socket tcp [function_1] [arg_2]	count=4
module	live in ||| generator darkfish	count=1
function	[function_1] tests to ||| [function_2] [function_1]	count=3
module	date/time components ||| xmlrpc datetime	count=1
arg	[arg_1] non-blocking manner ||| [arg_1] [arg_2]	count=1
arg	a meta-programmed ||| context single tk comment	count=1
module	a new socket ||| socket	count=4
module	don’t ||| rdoc generator darkfish	count=2
function	the error ||| error	count=2
returnv	returns the list of ||| array	count=1
arg	denoting the given calendar ||| year month mday start	count=1
module	use [module] generator ||| [module]	count=1
module	provided or ||| drb	count=1
function	[function_1] map with ||| [function_1] [function_2] map_name	count=3
arg	receives up to ||| flags outbuf options	count=1
function_arg	[function_1] numeric ||| [function_1] [arg_2]	count=2
function	peer ||| getpeereid	count=1
function	visitor tests to ||| visitor tests	count=2
module	gem for this specification ||| gem resolver specspecification	count=3
arg	separated by eol ||| eol	count=1
module	pathname with ||| pathname	count=1
module	gem directory for ||| gem	count=1
module	this method ||| rdoc anymethod	count=1
function	if ||| ?	count=164
arg	either a [arg] or ||| [arg] options	count=1
arg	block in ||| &block;	count=2
module	row access returning the ||| csv	count=1
arg	array methods of method ||| methods	count=1
function	that a new ||| setup	count=1
arg	the given string ||| key	count=1
arg	[arg_1] context with ||| [arg_2] [arg_1]	count=1
function	[function_1] [function_2] value n denominator value ||| rational [function_2] [function_1]	count=1
module	to wrap the ||| fiddle importer	count=2
function_arg	[function_1] to host ||| [arg_2] [function_1]	count=2
function	resolution ends ||| resolution	count=1
function	completely closed for ||| closed	count=1
function	returns true [function_2] ||| [returnv_1] value [function_2]	count=1
function	waits for thr to [returnv_1] [function_2] raises the exception which ||| [returnv_1] [function_2]	count=1
returnv	two-element [returnv] of ||| [returnv]	count=1
function_arg	superset [arg_2] ||| [arg_2] [function_1]	count=1
arg	label ||| label	count=2
returnv	a new array ||| array	count=1
module	:sslcertificate and :sslprivatekey have ||| drb drbsslsocket	count=1
function	displays documentation for ||| show documentation	count=1
arg	:method on [arg_2] ||| [arg_2] [arg_1]	count=2
function	jobmanager in the ||| jobmanager	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=513
module	installs ||| rdoc rdoc	count=1
function	and the [function_2] ||| [function_1] [function_2]	count=4
module	string and ||| string	count=2
module	to this ||| rdoc generator markup	count=1
function	existing attribute ||| attribute	count=1
function	calendar week based year ||| cwyear	count=1
arg	to out ||| out	count=3
arg	or fills the ||| page klass	count=1
arg	ios [arg] ||| [arg]	count=2
function	that defines the end ||| end	count=1
module	:enddoc ||| codeobject	count=1
arg	file to ||| file	count=2
arg	change time [arg] ||| [arg]	count=2
arg	mounts proc or block ||| proc &block;	count=1
function	returns a url ||| url	count=1
returnv	elements from the ||| ary	count=1
module	c code corresponding to ||| rdoc parser c	count=1
function_arg	[function_1] if you ||| tkoption [function_1] class [arg_2]	count=2
module	array containing ||| array	count=3
arg	given extensions ||| extensions	count=3
module	called when ||| psych handler	count=1
arg	<=> min ||| min	count=1
returnv	with the ||| instance	count=1
arg	function mapped [arg] that ||| [arg]	count=1
arg	text that ||| text	count=2
module	oldest ||| resolver requirementlist	count=1
module	in this context ||| irb context	count=1
function_arg	form reserved [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] the method_body ||| [function_1] [arg_2]	count=1
function	found within the library ||| find library	count=1
function	[function_1] memory ||| [function_2] [function_1]	count=5
arg	from parts ||| parts	count=1
function	version of ||| version	count=4
function_arg	scalar with value ||| scalar tag value	count=2
module	the n’th ||| elements	count=1
function	list of the public ||| public	count=1
function	parses a given ||| parse	count=1
function	[function_1] auth ||| [function_1] login [function_2]	count=1
module	the [module] the given ||| [module]	count=1
arg	pid ||| pid	count=1
function	[function_1] field input ||| [function_2] [function_1]	count=1
arg	index to access the ||| index	count=1
module	this cookie ||| cgi cookie	count=1
function	self-signed certificate ||| cert self signed	count=1
module	don’t already exist ||| rdoc	count=1
arg	headers that ||| headers opt	count=1
module	symbol corresponding to ||| symbol	count=1
function	object that represents ||| external	count=2
function	the value ||| create value	count=1
function	yes or [function_2] ||| [function_2] [function_1]	count=1
module	component ||| generic	count=12
function	false if not ||| commercial ?	count=1
function	invoke ||| invoke	count=2
function	deprecate and remove ||| create	count=1
function	[returnv_1] if ||| [returnv_1] has [function_2]	count=2
function	parses environment ||| environment	count=2
function	html form [function_2] ||| [function_2] [function_1]	count=1
module	is an environment variable ||| env	count=3
arg	lineno ||| lineno	count=1
module	the visitor for ||| markup tomarkdown	count=1
module	[module] the given ||| [module]	count=1
module	absolute [module] of ||| [module]	count=1
returnv	an exception object for ||| exception	count=1
function_arg	adds a [arg_2] ||| [arg_2] [function_1]	count=3
module	be csv :row ||| csv	count=1
arg	new closure wrapper for ||| ctype argtype call_type &block;	count=1
module	more events ||| rexml parsers baseparser	count=1
function	amongst ||| inactive	count=1
module	a stream emission ||| emitter	count=1
function	an file ||| file	count=1
module	available ||| mutex	count=1
module	it [module] call_seq ||| [module]	count=1
module	parses ||| parser ruby	count=9
arg	total and the message ||| message	count=1
function	definition ||| definition	count=3
arg	a local object to ||| obj	count=1
returnv	[returnv] if the ||| [returnv]	count=17
function	the logger output warn ||| warn	count=1
function	proxy ||| proxy	count=2
returnv	exception ||| exception	count=1
module	a ||| rdoc markup	count=4
function	gem version from ||| gem names and versions	count=1
function	return the setter for ||| setter	count=1
function	for each [function_2] ||| [function_1] [function_2]	count=5
module	object’s comment ||| markup	count=1
module	:x509 ||| gem security	count=2
module	attribute ||| attribute	count=3
function	a leap ||| leap	count=1
returnv	instance of ||| instance	count=1
function	has a private key ||| private ?	count=1
module	this method ||| unboundmethod	count=2
arg	socket connected [arg] to self ||| [arg]	count=1
module	to pass ||| rdoc	count=1
function	object of the date ||| date	count=1
arg	a string describing the ||| cert ca key_pbe cert_pbe key_iter mac_iter keytype	count=1
module	field [module] nil if ||| [module]	count=1
function	[function_1] bytes ||| [function_1] [function_2]	count=3
arg	the pages [arg_2] ||| [arg_2] [arg_1]	count=2
arg	obj into ||| obj	count=2
function	the cross-references ||| special crossref	count=1
function	the next object as ||| next	count=1
arg	user for [arg_2] ||| [arg_2] [arg_1]	count=3
module	the peer certificates ||| openssl ssl sslsocket	count=1
arg	the named files returning ||| file_name	count=1
function	this is not ||| ?	count=1
function	handle ||| handle options	count=1
function	group id functionality ||| sid available	count=1
function	of undocumented ||| doc stats	count=1
function	in utc gmt ||| utc	count=1
function	returns true [function_2] ||| gdbm [returnv_1] value [function_2]	count=2
module	creates ||| socket	count=1
module	in ||| rdoc generator darkfish	count=2
arg	string to path ||| path	count=1
function	to one that is ||| gen	count=1
arg	given and [arg] given object ||| obj) [arg]	count=1
arg	depth first [arg] yielding a ||| ignore_error: [arg]	count=1
function_arg	page list [arg_2] ||| [arg_2] [function_1]	count=2
module	named header ||| httpheader	count=1
function	entry ||| entry	count=3
arg	of length [arg] elements from ||| [arg]	count=1
function	generated indices into ||| indices	count=1
returnv	hash containing the ||| hash	count=1
module	context to the ||| sslcontext	count=1
function	[function_1] a local ||| [function_2] [function_1]	count=1
arg	to arrays of dependencies ||| dependencies	count=1
function	dependency ||| dependency request	count=1
module	single-column matrix where the ||| matrix	count=1
function	form contained multipart/form-data ||| multipart	count=1
module	this file ||| gzipreader	count=1
arg	string according to ||| string 1 jan -4712	count=2
function	scans content for ||| do singleton	count=1
module	directory may be renamed ||| net ftp mlsxentry	count=1
function_arg	executable [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] [function_2] ||| [function_1] editing [function_2]	count=2
function_arg	this method removes a [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
module	datetime with ||| datetime	count=1
function	configure various ||| config	count=1
module	marking up this ||| generator	count=1
module	oldest ||| gem resolver requirementlist	count=1
function_arg	for name ||| for name	count=1
module	to be csv :row ||| csv	count=1
arg	if present or fills ||| page klass	count=1
function	over each [function] in the ||| each [function]	count=1
function	paragraph ||| accept paragraph	count=1
module	of the [module] see lupdecomposition ||| [module]	count=1
module	‘::’ for the alias ||| rdoc alias	count=1
arg	handling req [arg_2] ||| [arg_1] [arg_2]	count=1
module	files list ||| options	count=1
returnv	of elements from ||| ary	count=1
module	writer for ||| gem specification	count=1
function_arg	first [arg_2] ||| rexml element [function_1] [arg_2]	count=1
function	of the case-insensitive flag ||| casefold	count=1
arg	retrieve data associated with ||| set attr	count=1
function	p ||| p	count=1
arg	http query string ||| query	count=1
module	@param parent if ||| rexml	count=1
arg	[arg_1] time ||| [arg_2] [arg_1]	count=1
returnv	mask value for priority ||| priority_mask	count=1
function	each attribute listed after ||| parse attr accessor	count=1
module	union the ||| cunionentity	count=1
arg	from a string according ||| string 1	count=2
function_arg	can handle [arg_2] ||| [arg_2] [function_1]	count=1
module	a bitmask to ||| rdoc markup tohtmlsnippet	count=2
arg	different types of compression ||| level strategy	count=1
function	is the union ||| union	count=1
arg	values as a ||| values	count=1
returnv	string value ||| string	count=1
module	terminates the [module] ||| [module]	count=1
function	and ||| stats	count=1
function	[function_1] handler ||| [function_2] [function_1]	count=3
rep	escapes [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	a [module] using ||| [module]	count=1
arg	bytes ||| bytes	count=1
function_arg	methods defined in ||| methods include_super	count=3
module	set of ||| requestset gemdependencyapi	count=1
function	with ||| create	count=1
module	rdoc ||| rdoc parser	count=7
module	the [module] returns self ||| [module]	count=2
arg	associated [arg] keys but ||| [arg]	count=1
arg	status [arg_2] ||| [arg_2] [arg_1]	count=2
function	the full ||| full	count=1
module	prepares the visitor for ||| markup tohtml	count=3
function	set ||| []=	count=1
module	of the last row ||| zlib	count=1
arg	given representation ||| string comp start	count=2
function	checkbox input element as ||| checkbox	count=1
function	variables ||| variables	count=4
module	case which needs ||| markup formattertestcase	count=1
module	gw ||| drb gw	count=4
module	the specifications that match ||| resolver molinillo specificationprovider	count=1
function	array of the row ||| row	count=1
function	latest [function_2] ||| bool [function_1] [function_2] ?	count=4
function_arg	add the [arg_2] ||| [function_1] [arg_2]	count=1
module	a ||| sslconfig	count=1
function	string as json string ||| to json	count=1
function	parse the ||| parse	count=1
arg	the method_body and returns ||| method_body	count=1
module	see also ::enable_ssl ||| net pop3	count=1
module	generated docs will ||| darkfish	count=1
module	class ||| rdoc	count=2
module	openssl :digest must ||| openssl	count=1
arg	bin on [arg_2] ||| [arg_2] [arg_1]	count=1
module	indentedparagraph ||| markup indentedparagraph	count=1
module	by constructing new struct ||| struct	count=1
arg	document from [arg_1] [arg_2] and return it ||| [arg_2] [arg_1]	count=1
arg	transfers ||| remotefile blocksize	count=1
module	unless ||| codeobject	count=1
function_arg	a module named ||| module class_type	count=1
arg	other refer to the ||| other	count=1
module	tuplebag returning ||| rinda tuplebag	count=1
function_arg	[function_1] [arg_2] ||| [function_1] dir [arg_2]	count=3
function	[returnv_1] if ||| [returnv_1] compare by identity [function_2]	count=1
function	same hash key ||| eql	count=1
module	returns ||| stringio	count=1
arg	count is ||| count	count=2
function	from a git ||| git	count=1
function	the object [function_2] ||| [function_2] [returnv_1]	count=6
module	or rdoc :attr ||| rdoc parser ruby	count=1
function	text file ||| text	count=1
function	documented modules sorted by ||| sorted module	count=1
arg	[arg_1] sec as ||| [arg_1] [arg_2]	count=8
function	or transferred to ||| alive	count=1
module	ensures ||| gem security policy	count=1
module	set the [module] ||| [module]	count=1
function	a private ||| private ?	count=1
function	finishes consumption of ||| item end	count=3
function	into [function] resolv ||| [function]	count=2
arg	for rdoc and reference ||| rdoc reference	count=1
function_arg	and from_version requesting [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
module	for this file or ||| file stat	count=1
function	the rubygems version ||| rubygems version=	count=2
function_arg	[function_1] if ||| tkoptiondb [function_1] class [arg_2]	count=2
arg	host and ||| host allowed_push_host	count=1
module	prepares the ||| tordoc	count=3
module	command [module] alter data ||| [module]	count=1
function	:handler#end_stream ||| stream	count=1
arg	uses each [arg] matching ||| [arg]	count=1
function	resets the digest ||| reset	count=1
function	the peer ||| getpeereid	count=1
module	@param index ||| parent	count=1
module	num has a ||| numeric	count=1
module	stor ||| ftp mlsxentry	count=1
function	find a ||| find	count=3
arg	returns true [arg] is present ||| [arg]	count=1
function	was defined ||| location	count=1
function_arg	[function_1] obj and ||| [arg_2] [function_1]	count=1
module	marking ||| markup	count=1
arg	[arg_1] safe ||| [arg_2] [arg_1]	count=1
function	the status ||| []	count=1
module	object ||| rexml parent	count=2
function	length ||| stats	count=1
arg	method in the receiver ||| method	count=1
function	[returnv_1] named protected ||| [function_2] [returnv_1]	count=1
arg	out_stream [arg_2] ||| [arg_1] [arg_2]	count=2
function	returns true [function_2] ||| [returnv_1] sticky [function_2]	count=2
function	[function_1] in a ||| [function_2] [function_1]	count=3
module	comment are used ||| rexml comment	count=2
returnv	in ||| array	count=1
returnv	string of ||| string	count=2
function	documented modules sorted by ||| get sorted module	count=1
module	dependency will ||| gem dependency	count=1
function	[function_1] aref defined ||| [function_2] [function_1]	count=2
function	to configure various ||| dir	count=1
function	profiler ||| print profile	count=2
function	[function_1] [function_2] with 14 ||| [function_1] [function_2]	count=2
function_arg	[function_1] parts to ||| [arg_2] [function_1]	count=1
arg	[arg_1] min sec ||| [arg_2] [arg_1]	count=7
function	[function_1] a path ||| [function_2] [function_1]	count=2
arg	document from [arg_1] [arg_2] and return it ||| generate [arg_2] [arg_1]	count=1
function	the seed value used ||| seed	count=1
module	stat is executable ||| file stat	count=1
function	after [function_2] ||| [function_1] [function_2]	count=5
arg	with the given name ||| name	count=5
function_arg	[function_1] message to ||| [arg_2] [function_1]	count=3
module	prepares the ||| rdoc markup tottonly	count=1
function	value as ||| value	count=2
module	are immediately ||| openssl ssl sslsocket	count=1
function_arg	[function_1] new_name for ||| [arg_2] [function_1]	count=3
module	length and ||| rdoc stats	count=1
function	checkbox elements ||| checkbox group	count=1
function	object for [function] obtained by ||| [function]	count=1
module	apiset that will retrieve ||| gem resolver apiset	count=1
function	latest release-version ||| latest	count=1
function	list of all ||| file list	count=1
module	@return edge ||| gem resolver molinillo	count=1
function	[function_1] modules ||| [function_1] [function_2]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] stream [function_2]	count=2
arg	::capture3 captures the ||| cmd stdin_data: '' binmode: false	count=1
module	text [module] wrap characters ||| [module]	count=1
module	specification is properly ||| specification	count=1
function	a new instance of ||| new	count=1
module	for this module where ||| module	count=1
arg	delegate [arg] ||| [arg]	count=1
module	of the [module] in the ||| [module]	count=3
function	in ||| sub	count=1
function	for each element ||| each	count=1
module	that are immediately available ||| openssl ssl sslsocket	count=1
function	matching ||| matching	count=1
module	in ||| rdoc stats	count=2
arg	attribute symbol ||| symbol	count=1
function_arg	value of fix is [function_1] [arg_2] ||| bool [function_1] fix [arg_2]	count=1
arg	path is ||| path	count=1
function	returns detail information ||| detail	count=1
function	[function_1] unique ||| [function_2] [function_1]	count=2
function_arg	template for [arg_2] ||| [function_1] [arg_2]	count=7
function	output generator for the ||| setup generator	count=1
arg	where paths ||| paths	count=1
function	visitor for html ||| start	count=1
arg	m ||| args	count=1
function	2xx reply ||| success ?	count=1
module	sets up ||| ri	count=1
function	setter for the port ||| port	count=1
function	sends a options ||| options	count=1
module	values from [module] and including ||| [module]	count=1
function	extra arguments ||| specific extra args	count=1
module	cookie with ||| webrick cookie	count=1
rep	[module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=315
module	po entry ||| rdoc generator pot poentry	count=2
module	database with multiple values ||| dbm	count=1
module	to ||| gem specification	count=2
module	or that a ||| drbsslsocket sslconfig	count=1
function	library ||| load	count=1
arg	servlet [arg] ||| [arg] root options	count=3
module	to the listitem ||| rdoc markup listitem	count=1
arg	an object ||| obj	count=1
module	level 1 rdoc ||| rdoc	count=2
arg	to obj ||| obj	count=1
module	the ssl/tls handshake as ||| openssl ssl sslsocket	count=1
module	with the other parameters ||| drb drbsslsocket	count=1
arg	to dest ||| dest options	count=1
function	[function_1] undefined in ||| [function_2] [function_1]	count=2
arg	given port and ||| port	count=1
function	case ||| case	count=1
module	a parser that ||| rdoc parser	count=1
function	several default gems ||| gems	count=1
module	coverage ||| coverage	count=1
function	the apop class if ||| apop	count=1
module	and ||| drbsslsocket sslconfig	count=2
module	method/attribute ||| methodattr	count=5
module	stat has the ||| stat	count=2
function	an rdoc-schemed ||| rdoclink	count=1
returnv	time ||| time	count=5
function	encoding of ||| external encoding	count=2
arg	with other_entry ||| other_entry	count=1
function	service ||| service	count=1
function	id and sets $? ||| waitpid	count=1
arg	the obj ||| obj	count=1
arg	[arg_1] from ||| [arg_2] [arg_1]	count=2
module	this input method is ||| irb inputmethod	count=1
function	an openssl :x509 ||| email	count=1
function	net :http#read_timeout ||| timeout=	count=1
arg	and returns ||| to	count=2
function	the specified [function] ||| extend [function]	count=1
function	get the size ||| size	count=1
module	use a availableset ||| gem availableset	count=1
function	destination encoding [function_2] ||| [function_1] [function_2]	count=1
function	der-encoded ||| to der	count=1
module	options ||| rdoc options	count=1
function	thread-local variables as symbols ||| thread variables	count=1
function	finds an [function_2] ||| [function_2] [function_1]	count=2
module	this object’s comment ||| generator	count=1
function	sorts self [function] ||| sort by [function]	count=3
function_arg	returns true [function_1] [arg_2] ||| [function_1] [arg_2]	count=12
module	object which denotes self ||| datetime	count=2
function	[function_1] instance methods ||| [function_1] [function_2]	count=12
module	marking ||| rdoc generator	count=1
module	keep_files environment variable was ||| gem	count=1
module	which [module] qualified by ||| [module]	count=1
arg	value by ||| value	count=1
module	for the installed gem ||| gem installer	count=1
arg	out_stream for size ||| out_stream size	count=1
function	ruby ||| in old ruby	count=1
function	[function_1] [function_2] of ||| [function_1] [function_2]	count=26
function	number of elements ||| size	count=2
module	given the following configuration ||| config	count=1
arg	true [arg] ||| [arg]	count=1
function	copies [function_2] ||| [function_2] [function_1]	count=1
returnv	with no ||| self	count=1
function	living nonimmediate [function] in this ||| each [function]	count=1
function_arg	[function_1] the string ||| [function_1] [arg_2]	count=1
module	if ||| drb	count=1
returnv	returns the ||| float	count=1
function	the header names and ||| header	count=1
module	returns an rdoc ||| rdoc servlet	count=1
function	or ||| get class or	count=1
arg	timeout handler id and ||| id	count=1
function	html form [function_2] ||| [function_1] [function_2]	count=1
function_arg	initializes this object [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
returnv	element of [returnv] replacing the ||| [returnv]	count=1
arg	io ||| io level strategy options	count=1
arg	for undocumented classes also_in ||| also_in	count=1
arg	to [arg] with ||| [arg]	count=1
function	[function_1] line number ||| [function_2] [function_1]	count=1
function	[function_1] auth ||| [function_1] plain [function_2]	count=1
function	[function_1] loop ||| [function_2] [function_1]	count=1
function	the number of ||| length	count=1
arg	depth ||| depth	count=2
arg	[arg_1] start to ||| [arg_2] length [arg_1]	count=1
function	set the names of ||| names	count=1
module	section ||| markup verbatim	count=1
arg	given base ||| base level	count=1
function	loop on ||| loop on	count=2
function_arg	adds aproc [function_1] [arg_2] ||| [function_1] [arg_2] aproc	count=2
function	integer [function_2] ||| [function_2] [returnv_1]	count=1
module	a ||| ri driver	count=4
function_arg	power of [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	data [arg_2] ||| [function_1] [arg_2]	count=3
arg	given ||| key	count=4
module	notifications are enabled ||| irb notifier abstractnotifier	count=1
module	in the [module] where ||| [module]	count=1
function	all tuples in ||| all template	count=1
function	for which the ||| select	count=1
function	[returnv_1] priority of ||| [returnv_1] [function_2]	count=1
function	[function] of the ||| defined [function]	count=2
module	rdoc driver ||| rdoc rdoc	count=1
arg	:method on container ||| container tk	count=2
arg	the n by n ||| n	count=1
function	has a private ||| private ?	count=1
module	for marking up ||| generator	count=1
arg	each [arg] parameter ||| [arg]	count=1
returnv	when this [returnv] you probably ||| [returnv]	count=1
arg	[arg_1] tags ||| [arg_1] [arg_2]	count=1
function	of the default ||| default	count=1
arg	the given string to ||| string	count=1
module	the conflicting dependency’s name ||| gem resolver conflict	count=1
returnv	constructs a version from ||| instance	count=1
module	sets the net ||| xmlrpc	count=1
function	to determine the status ||| status	count=1
module	with struct values v ||| struct	count=1
function	to configure ||| config	count=1
module	binding’s context ||| binding	count=1
arg	the context ||| context statements file line	count=1
returnv	[returnv] as ||| [returnv]	count=3
module	the authoritative instance of ||| commandmanager	count=1
module	a ||| rdoc ri	count=1
function	the given block once ||| if	count=1
function	completion reply 2xx reply ||| success	count=1
arg	key key ||| key	count=1
arg	block in context of ||| &block;	count=2
function	the target library file ||| to fullpath	count=1
arg	block on dir ||| dir proc &block;	count=2
function	starts reading input characters ||| input hook	count=1
module	rdoc :attr from ||| rdoc	count=1
module	:retry :next ||| localjumperror	count=1
arg	length n of the ||| n	count=1
arg	uri with ||| uri	count=1
arg	meth ||| meth	count=1
module	adds ||| xmlrpc basicserver	count=2
function	directory path to be ||| cache dir	count=1
module	current ||| irb context	count=3
function_arg	[function_1] file if ||| [arg_2] [function_1]	count=5
function	openssl :x509 ||| email to name	count=1
function_arg	equality [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function_arg	[function_1] obj into ||| [arg_2] [function_1]	count=4
function	get all [function_2] ||| [function_1] [function_2]	count=8
function	encoding magic ||| coding	count=1
module	equality ||| openstruct	count=1
module	to ||| net	count=12
function	[returnv_1] [function_2] ||| [returnv_1] utc [function_2]	count=2
arg	the digests match the ||| key digests	count=1
function	a rational number ||| r	count=1
function_arg	[function_1] named files ||| [function_1] [arg_2]	count=1
arg	the given attribute ||| key	count=1
function	the instance variable named ||| instance variable	count=1
function_arg	comment from [arg_2] ||| [function_1] [arg_2]	count=1
module	:document ||| document	count=1
module	restricting gems ||| gem requestset gemdependencyapi	count=1
function	cross-references ||| special crossref	count=1
returnv	isn’t ||| self	count=1
function	if the given year ||| ?	count=3
function	generation ||| start accepting	count=2
module	–platform ||| versionoption	count=1
arg	an implicit start ||| implicit	count=2
function	memory [function_2] ||| [function_2] [function_1]	count=1
arg	content options [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	proc [arg_2] ||| [arg_2] [function_1]	count=9
module	that represents the ||| stringio	count=1
arg	module ||| module	count=2
function	a proxy ||| get proxy from	count=2
function	gemspec ||| spec	count=1
module	response received ||| response	count=2
function_arg	[function_1] obj’ ||| [arg_2] [function_1]	count=2
function	next object as ||| next values	count=1
module	:http#open_timeout ||| xmlrpc client	count=2
arg	compares two ||| other	count=3
function	object allocations ||| object allocations start	count=2
module	number of ||| rdoc stats	count=1
module	immediately available ||| ssl	count=1
arg	cn and [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	for dn [arg_2] ||| [function_1] [arg_2]	count=1
module	class << myclassname ||| rdoc	count=1
module	oldest dependencyrequest ||| gem resolver requirementlist	count=1
function	of singleton [function_2] ||| [function_1] [function_2]	count=1
module	a ||| testcase staticset	count=1
function	may be surrounded by ||| with optional	count=1
module	rdoc :attr from comment ||| rdoc parser ruby	count=1
function	information if debugging is ||| debug	count=1
function	try [function] ||| try [function]	count=3
module	of the [module] used by ||| gem [module]	count=1
module	the peer certificates ||| ssl sslsocket	count=1
arg	[arg] display ||| [arg]	count=3
arg	n by n matrix ||| n	count=1
function	low-level read and returns ||| sysread	count=1
arg	[arg] in terms ||| [arg]	count=3
module	as ||| invalidbytesequenceerror	count=1
arg	data to the ||| data	count=1
arg	methods to out with ||| out methods	count=1
module	coverage array ||| coverage	count=1
arg	string according to ||| string	count=4
arg	of nodes matching a ||| path namespaces variables	count=1
arg	key ||| key age	count=2
function	:name ||| to	count=1
module	number of bytes ||| ssl sslsocket	count=1
function	dependency and ||| dependency request	count=1
function	the server in whatever ||| put	count=1
function	dir for ||| template dir for	count=2
function	index of the child ||| index	count=1
arg	the first limit characters ||| limit	count=1
arg	pattern is ||| pattern	count=1
function	a space [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] by symbol ||| [function_1] set [arg_2]	count=3
module	[module] pick up ||| [module]	count=1
module	class ||| webrick	count=1
module	the ri data for ||| rdoc	count=1
arg	front with a ||| front desc renewer	count=1
module	[module] a ||| [module]	count=9
function	unique local address fc00 ||| unique local	count=1
arg	a local object ||| obj	count=1
module	hash instance ||| ext generator generatormethods hash	count=1
module	and removes ||| gem	count=1
module	of this ||| rdoc	count=1
module	a given index @param ||| parent	count=1
arg	host port using ||| host port local_host	count=3
function	to an absolute ||| abs_file_name absolute	count=1
function	on the command line ||| config	count=1
returnv	complete [returnv] join ||| [returnv]	count=1
module	written out [module] ||| [module]	count=1
function	writable by the ||| writable	count=1
returnv	for ||| integer	count=1
arg	number of bits the ||| bits	count=1
module	load/require [module] ||| [module]	count=1
function	dir ||| template dir	count=1
function_arg	[function_1] bin ||| [arg_2] [function_1]	count=4
module	syslog warning log level ||| syslog logger	count=1
arg	[arg_1] given_name with ||| [arg_1] [arg_2]	count=1
module	to query ||| rdoc	count=1
function	[returnv_1] [function_2] ||| [returnv_1] has [function_2]	count=2
function	returns the hyperbolic cosine ||| cosh	count=1
module	the fragment [module] v ||| uri [module]	count=1
module	[module] generator ||| [module]	count=1
function_arg	[function_1] [arg_2] for good 1 for ||| [function_1] [arg_2] next_update extensions	count=2
module	of the path ||| pathname	count=1
function	record ||| search record	count=1
function	[returnv_1] [function_2] files may ||| [returnv_1] [function_2]	count=1
module	a ||| stats	count=1
arg	[arg_1] tk ||| [arg_2] [arg_1]	count=1
module	number of ||| io	count=1
returnv	[returnv] insecure ||| [returnv]	count=6
module	object ||| drb	count=2
module	a raw cookie ||| cookie	count=1
function	stream [function_2] ||| [function_2] [function_1]	count=2
arg	stats in ||| stats	count=1
function	a proppatch request to ||| proppatch	count=1
module	a version from ||| gem	count=1
function	all gem names from ||| all gem names	count=1
function_arg	struct [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] with anchor ||| [arg_2] [function_1]	count=1
arg	class_type ||| class_type	count=1
arg	greater than numeric ||| numeric	count=1
module	this dh instance has ||| openssl pkey dh	count=1
function	to expect full paths ||| full paths	count=1
arg	v at [arg_2] ||| [arg_2] [arg_1]	count=6
module	the locale ||| i18n locale	count=1
function	be set ||| new	count=1
module	returns a ||| openssl	count=1
function	retrieves the content of ||| content	count=1
arg	the issuer cn ||| cn	count=1
returnv	instance ||| instance	count=10
module	any non-root [module] that were ||| gem resolver molinillo [module]	count=1
function_arg	[function_1] s ||| [arg_2] [function_1]	count=1
module	is ||| markup parser	count=1
function	and label list ||| list item	count=1
module	and :sslprivatekey have ||| sslconfig	count=1
function	returns the array of ||| to a	count=1
function	generated docs will live ||| gen	count=1
function	private key associated ||| private ?	count=1
arg	or der-encoded ||| der	count=1
function	gets x509v3 [function] as ||| [function]	count=1
function	for ipv6 unique local ||| ipv6 unique local	count=1
function	zero size ||| zero	count=1
module	of the current connection ||| ssl sslsocket	count=1
function	whitespace is respected for ||| whitespace	count=1
returnv	str ||| str	count=3
module	that cert signature is ||| x509	count=1
arg	with the given ||| obj...	count=1
function_arg	password [arg_2] ||| [arg_2] [function_1]	count=1
arg	indent spaces ||| indent	count=1
function	site-local ||| sitelocal ?	count=1
function	parses a ||| parse	count=5
returnv	returns a hash ||| hash	count=5
function	[function_1] key path ||| [function_2] [function_1]	count=1
module	encodes this dh ||| openssl pkey dh	count=2
function	position of ||| rewind	count=1
function	[function] class ||| generate class [function]	count=3
module	tarwriter ||| package tarwriter	count=3
returnv	@param parent ||| instance	count=1
function	is a path ||| path to ?	count=1
arg	type [arg] ||| [arg] type	count=1
function	removes [function] ||| remove [function]	count=1
module	tts from ||| tottonly	count=1
function	true if ||| bool handles ?	count=1
function	true [function_2] ||| [returnv_1] specific [function_2]	count=4
function	[function_1] instance ||| [function_2] [function_1]	count=20
function	key string ||| key	count=1
returnv	and waits if it ||| self	count=1
arg	[arg] either ||| mod self_hash [arg]	count=2
function	an alias is added ||| alias	count=1
function	for each [function_2] ||| [function_1] [function_2] object obj)	count=1
arg	[ lineno ||| lineno	count=1
arg	filename and [arg_2] ||| [arg_1] [arg_2]	count=1
function	split ||| path separator	count=1
module	process from controlling ||| process	count=1
function	the unique [function_2] ||| [function_1] [function_2]	count=4
function	a list of all ||| normalized file list	count=1
function	method is ||| method	count=1
arg	from status and basic_response ||| status basic_response	count=1
function	heading of ||| heading	count=1
rep	[module_1] [function_arg_2] ||| [module_1] paths [function_arg_2]	count=2
function	fetches a ||| []	count=1
function	processed in ||| in	count=1
arg	path [arg_2] ||| [arg_1] [arg_2]	count=2
module	openssl ||| openssl	count=9
function	[returnv_1] the key ||| [returnv_1] [function_2]	count=1
returnv	of call ||| array	count=1
arg	with the options ||| options	count=1
module	@return edge ||| resolver molinillo	count=1
function	paths matching ||| find files	count=1
function	the json ||| json	count=1
function	sends a proppatch ||| proppatch	count=1
module	the current process ||| process	count=2
function	:sslcertificate ||| setup	count=1
module	“with” options ||| makemakefile	count=1
module	and waits ||| thread	count=1
module	list ||| markup list	count=4
arg	an httpresponse object ||| data initheader	count=1
function	user can ||| dir config	count=1
function	the previous ||| previous	count=1
module	generates documentation for each ||| rdoc rubygemshook	count=1
function	[function_1] an error ||| [function_1] [function_2]	count=1
function	object obj ||| object	count=1
module	union member with ||| fiddle cunionentity	count=1
function	reason this block ||| reason	count=1
arg	name called ||| name	count=1
module	the parser to ||| rdoc parser ruby	count=1
module	command and returns ||| imap	count=1
module	compares the [module] with ||| [module]	count=1
function	loads [function_2] ||| [function_2] [function_1]	count=6
arg	from [arg] according to ||| [arg]	count=3
function	returns the empty ||| to	count=1
function_arg	and [arg_2] ||| [arg_2] [function_1]	count=1
module	the peer certificates verification ||| sslsocket	count=1
arg	sockets bound to address ||| address	count=1
module	provided or that ||| drb	count=1
arg	from the other_str ||| other_str	count=1
function_arg	matching [arg_2] ||| [function_1] [arg_2]	count=1
arg	first entry in key ||| key	count=1
function	returns the name ||| to s	count=1
arg	or expiry time sec ||| sec	count=1
arg	on uri ||| uri	count=1
function	to this module of ||| extension modules	count=1
function	[returnv_1] status ||| [function_2] [returnv_1]	count=1
module	constructing entry ||| atom entry	count=1
arg	using the given certificates ||| certificates	count=1
module	certificate and is ||| security	count=1
arg	[arg_1] version ||| [arg_2] [arg_1]	count=4
returnv	as a symbol ||| symbol	count=1
module	string ||| string	count=13
function	matches ||| match	count=1
module	form ||| requestset gemdependencyapi	count=2
arg	ios [arg] or ||| [arg]	count=1
arg	headers that you ||| headers opt	count=1
function	encoding of the file ||| encoding	count=2
function	[function_1] prime ||| [function_1] [function_2]	count=2
arg	to the given keys ||| key	count=1
function	have been provided or ||| setup	count=1
function	the version of ||| version	count=2
module	the descriptive fields ||| gem	count=1
function_arg	[function_1] for file_name ||| [arg_2] [function_1]	count=2
function	creates several default gems ||| util make gems	count=1
function	[function] object ||| ole [function]	count=2
function	struct ||| struct member	count=1
arg	arguments ||| args &block;	count=1
function	[function_1] special ||| [function_2] [function_1]	count=3
function	is an rdoc-schemed ||| rdoclink	count=1
module	list ||| rdoc	count=1
arg	in value ||| value	count=1
arg	given extensions for ||| age extensions serial	count=1
arg	[arg] -1 ||| [arg]	count=1
module	from this section ||| rdoc context section	count=1
function_arg	[function_1] [arg_2] ||| [function_1] env [arg_2]	count=12
function	returns true [function_2] ||| [returnv_1] finite [function_2]	count=1
module	child ||| rexml element	count=1
function	for ||| list item start	count=4
function	deactivates ||| disable	count=1
module	live in ||| generator	count=1
function	and [function_2] ||| [function_2] [function_1]	count=11
function_arg	a constant [arg_2] ||| [function_1] [arg_2]	count=3
arg	directory ||| directory	count=1
function	singleton of ||| singleton	count=1
arg	returns ||| string	count=3
function	truncated ||| to i	count=1
arg	given in yaml ||| yaml	count=1
function	a public key ||| public ?	count=1
arg	parser ||| block_parser	count=1
arg	connected [arg] to self ||| [arg]	count=1
returnv	immediately available ||| integer	count=1
module	[module] generator output ||| [module]	count=1
module	files ||| gem	count=1
arg	[arg_1] +@fetcher+ serving ||| [arg_1] path [arg_2]	count=1
module	with ||| specfetchersetup	count=1
module	returns the permutation ||| lupdecomposition	count=1
arg	sec seconds into ||| sec	count=1
module	option name as ||| option	count=1
function	intermediate reply 3xx reply ||| continue	count=1
function	[function_1] label ||| [function_2] [function_1]	count=6
function	value as a parameter ||| value	count=2
module	both time objects ||| time	count=1
function	satisfied by the given ||| requirement satisfied by	count=1
function	an addrinfo object for [function_1] [function_2] obtained by getsockname ||| basicsocket addrinfo [function_1] [function_2]	count=1
function	that name ||| config	count=1
function	log ||| log	count=1
function	same type and have ||| eql	count=1
rep	[module_1] modulo other ||| [module_1] numeric [function_arg_2]	count=1
function	extra [function_2] ||| [function_1] [function_2]	count=5
function	opens ||| open	count=1
function	on the ||| dir	count=1
module	the ||| makemakefile	count=2
function	a pipeline with a ||| pipeline r	count=1
function	show the name ||| name	count=1
arg	the given enumerable object ||| enum	count=2
module	coverage array as ||| coverage	count=1
arg	with permissions mode ||| mode	count=1
function	a singleton ||| handle singleton	count=1
function_arg	[function_1] by mode_int ||| [function_1] [arg_2]	count=2
module	returns the locale ||| i18n locale	count=1
function	int ||| int	count=2
module	current token to the ||| markup	count=1
module	accept_paragraph ||| markup paragraph	count=1
function	same seconds ||| eql	count=1
function	a single ||| one	count=1
function	[function_1] parent of ||| [function_1] [function_2]	count=1
module	to ||| markup	count=16
module	current token to the ||| rdoc markup	count=1
function	a rational number of ||| r	count=1
function	[function_1] parameters ||| [function_1] [function_2]	count=3
function	a document ||| document	count=1
module	dependency will not always ||| dependency	count=1
arg	like [ lineno ||| src filename lineno	count=1
module	“with” ||| makemakefile	count=1
module	if this [module] is less ||| [module]	count=1
module	ancillarydata ||| socket ancillarydata	count=2
arg	[arg_1] enclosing ||| [arg_1] class_type [arg_2]	count=1
function	the named protected ||| protected	count=1
function	the issuer certificate ||| issuer of	count=1
arg	func can be ||| func	count=1
arg	user [arg_2] ||| [arg_2] [arg_1]	count=2
returnv	a hash that ||| hash	count=1
function_arg	a normalized [arg_2] ||| [function_1] [arg_2]	count=1
function	session attempts authentication ||| auth only	count=2
arg	p which ||| p	count=1
arg	object without opening a ||| port p_addr p_port p_user p_pass	count=1
function	of this ||| new	count=1
module	keep_files environment variable ||| gem	count=1
function	sends a mkcol ||| mkcol	count=1
arg	list with an ||| list	count=1
module	an element if ||| rexml elements	count=1
function	exited normally for example ||| exited	count=1
arg	root options may ||| root options	count=1
function_arg	satisfied by [arg_2] ||| [function_1] ? requirement activated [arg_2]	count=2
function	relative to a given ||| relative	count=1
arg	src ||| src	count=5
function	[function_1] stream and ||| [function_1] [function_2]	count=2
module	parameters for this ssl ||| openssl ssl	count=1
module	markdown ||| rdoc markdown	count=2
function	[function] or above ||| find class [function]	count=2
function	[returnv_1] result ||| [returnv_1] [function_2]	count=1
returnv	is made ||| bool	count=1
arg	specified key false otherwise ||| key	count=1
module	new ipaddr built by ||| ipaddr	count=4
function	same [function] another ||| [function]	count=1
module	been provided or ||| sslconfig	count=1
module	the server ||| xmlrpc server	count=2
function	internal [function_2] ||| [function_2] [function_1]	count=4
module	specifications that match ||| molinillo specificationprovider	count=1
module	of documentation unless documentation ||| rdoc	count=1
arg	[arg] using ||| [arg] opts	count=1
function	constructor @param ||| new	count=1
function_arg	append the [arg_2] ||| [arg_2] [function_1]	count=5
module	ftp ||| ftp	count=1
module	the generated ||| rdoc	count=1
module	to query if ||| rdoc	count=1
arg	for the uri ||| uri	count=1
module	in the [module] where lines ||| [module]	count=1
arg	method ||| method	count=10
function	for this server? ||| here	count=1
function	the given [function] element of ||| [function]	count=1
arg	the params array ||| params	count=1
rep	parses [function_arg_2] ||| [module_1] [function_arg_2]	count=7
arg	name ends ||| name	count=1
function	[returnv_1] if ||| [returnv_1] none [function_2]	count=1
arg	- the public key ||| key	count=1
module	paths to $load_path ||| gem	count=1
module	index ||| generator jsonindex	count=3
function	marshal [function_2] ||| [function_1] [function_2]	count=1
arg	of user ||| user	count=1
function	[function_1] close ||| [function_2] [function_1]	count=1
module	file has the ||| file	count=2
function	abbreviate the ||| abbreviate	count=1
module	other parameters provided ||| drbsslsocket	count=1
rep	finds [function_arg_2] ||| [module_1] [function_arg_2]	count=12
arg	value ||| value anchor tag plain	count=1
function	[function_1] nan infinity ||| [function_2] [function_1]	count=2
function	ary [function_2] ||| [function_2] [returnv_1]	count=3
arg	proc or [arg_2] ||| [arg_1] [arg_2]	count=2
function	the host to connect ||| host	count=1
module	array itself ||| array	count=2
function	if [function_2] ||| [function_2] env [function_1]	count=3
function	integer part ||| fix	count=1
module	rdoc :markup :document from ||| rdoc ri	count=1
module	in if they don’t ||| darkfish	count=1
module	integer values from int ||| integer	count=1
function	hostname of ||| getname	count=1
module	and waits if it ||| thread	count=1
arg	or der-encoded value ||| der	count=1
function	uri ||| drburi	count=1
arg	named symbol as ||| symbol	count=1
module	output ||| tottonly	count=1
module	its time zone ||| time	count=1
function_arg	parameters in method ||| params method	count=2
arg	an httpresponse ||| data initheader	count=1
function	loopback address ||| loopback ?	count=1
function	unescapes form reserved ||| unescape form	count=1
function	to yaml ||| yaml	count=1
function	emacs mode ||| emacs editing mode	count=1
function	whenever an instance method ||| method	count=1
module	list ||| optparse	count=1
module	some ||| formatters default	count=1
function	floating point [function_2] ||| [function_2] [returnv_1]	count=1
function	[function] in seconds ||| utc [function]	count=2
returnv	:return or ||| symbol	count=1
function	to ||| block	count=1
function_arg	[function_1] [arg_2] or +1 if this ||| -1,_0,_+1 [function_1] [arg_2]	count=1
function	destination ||| destination	count=2
function	interpreting ary as ||| to h	count=2
function	last win32 error of ||| win32 last	count=1
function_arg	[function_1] in special ||| [arg_2] [function_1]	count=4
function	last win32 error of ||| win32 last error	count=1
function	git ||| git	count=1
function	the write ||| write	count=2
arg	tag an [arg_2] ||| [arg_2] [arg_1]	count=5
function	key already ||| key	count=1
module	by ||| codeobject	count=1
function	is a real ||| real	count=1
module	the authorization header ||| net httpheader	count=1
returnv	[returnv] pid/status pairs ||| [returnv]	count=1
module	a named header ||| net httpheader	count=1
function	rdoc options to ||| rdoc options	count=1
function	this module of ||| modules	count=1
function	[function_1] [function_2] a ||| [function_1] [function_2]	count=2
function	returns the description ||| reason phrase	count=1
arg	from certificate [arg_2] ||| [arg_1] [arg_2]	count=3
arg	turns email_address into an ||| email_address	count=1
arg	a message ||| msgstr	count=1
function	names of the ||| names	count=1
arg	of [arg] ||| [arg]	count=2
module	have ||| drb drbsslsocket	count=1
function_arg	[function_1] of address ||| [function_1] [arg_2]	count=4
arg	[arg_1] from the ||| [arg_1] [arg_2]	count=2
function	the path parameter passed ||| path	count=1
module	group database ||| webrick httpauth htgroup	count=1
function_arg	if [arg_2] ||| filetest integer size [function_1] [arg_2]	count=4
arg	given string and returns ||| string	count=1
function	sets a ||| dir	count=1
arg	and adds the reference ||| ref	count=1
module	alias of a ||| rdoc alias	count=1
function	from ||| comment tomdoc	count=1
module	parsing ||| stats	count=8
function	returns true if ||| bool member ?	count=2
function	passed argument valid ‘nz_number’ ||| valid nz	count=1
arg	compares this comment to ||| other	count=1
function	makefile ||| makefile	count=2
module	instance of ||| importer	count=1
module	an element ||| rexml elements	count=1
arg	string or ||| string	count=1
arg	want to modify ||| safe add parent &b;	count=3
function	arguments ||| args	count=3
function	map with ||| map	count=1
returnv	tests if the ||| bool	count=1
function	[function_1] all ip ||| [function_2] [function_1]	count=1
function	to add ||| add	count=2
arg	[arg] obj ||| [arg]	count=2
module	number of ||| openssl ssl	count=1
arg	with name value ||| name value	count=2
function	returns the absolute ||| magnitude	count=1
module	…> the argument ||| rexml sax2listener	count=1
module	method definition and ||| method	count=1
function	[function_1] a der-encoded ||| [function_1] [function_2]	count=1
module	and :sslprivatekey have been ||| drb drbsslsocket sslconfig	count=1
function	yields all attributes as ||| each pair	count=1
module	tms ||| tms	count=1
function	add ||| add version	count=1
module	the po entry ||| rdoc generator pot poentry	count=1
module	rdoc ||| rdoc parser ruby	count=10
function	has [function] ascii characters ||| ascii [function]	count=1
module	this cdata object examples ||| rexml cdata	count=1
arg	content options and ||| content options	count=2
module	convert self ||| string	count=3
arg	running os on cpu ||| cpu os	count=1
function	gets the basic ||| basic word	count=1
function	[function_1] class with ||| [function_1] [function_2]	count=1
function	deletes the ||| delete	count=5
module	rdoc :toplevel ||| rdoc rdoc	count=1
function	a path ||| path to	count=1
function_arg	constant [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	reads the [arg_2] ||| [arg_2] [function_1]	count=3
arg	path matches [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the issuer cn and ||| cn	count=1
arg	content options ||| content options	count=2
module	as a string ||| cgi	count=1
function	output info ||| info	count=1
function	method as delegator instance ||| instance delegator	count=1
function	development [function_2] ||| [function_2] [function_1]	count=1
arg	data for method_name ||| method_name	count=2
module	resolver to ||| gem resolver	count=1
module	stat has ||| stat	count=2
function	directory ||| directory	count=1
arg	[arg] and creates ||| [arg]	count=3
module	starts the ||| profiler__	count=1
arg	date-time ||| hour minute second offset	count=2
module	marks up ||| markup	count=2
function	returns true [function_2] ||| thwait [returnv_1] empty [function_2]	count=1
function	headers will be ||| headers	count=1
arg	uri and ||| uri	count=1
function	[function_1] [function_2] arbitrary object given and ||| [function_1] [function_2] object obj)	count=5
module	uri :mailto object ||| uri mailto	count=1
function	[function_1] [function_2] for the command ||| [function_1] [function_2]	count=4
function	all ||| all template	count=1
function	comparison and returns ||| <=>	count=1
module	raw ||| raw	count=1
function	[returnv_1] public ||| [function_2] [returnv_1]	count=1
module	have been ||| drbsslsocket	count=1
module	other ||| drbsslsocket	count=1
function	development dependency? ||| development	count=2
function	[returnv_1] if ||| [returnv_1] creatable [function_2]	count=1
function	the request is for ||| ?	count=1
arg	of numeric and on ||| numeric	count=1
module	not tempfile ||| tempfile	count=1
function	the last item in ||| last	count=1
module	this context’s top level ||| context	count=1
module	with hax todo deprecate ||| gem testcase	count=1
function	proleptic [function] calendar ||| [function] leap	count=2
function	patch request to ||| patch	count=1
module	subsequently defined methods to ||| module	count=1
function	every method call is ||| method	count=1
module	only the [module] ||| [module]	count=1
module	[‘blt_graph_bar’ ||| tk blt graph	count=1
function	[function_1] credentials file ||| [function_2] [function_1]	count=4
arg	bin ||| bin padding:	count=1
function	data hashes ||| data	count=1
function	ary [function_2] ||| [returnv_1] [function_2]	count=3
module	sets up a ||| rdoc ri driver	count=1
arg	to out_stream for size ||| out_stream size initial_message terminal_message	count=1
arg	namespace and name ||| namespace name	count=3
module	number ||| stats	count=1
function	allocations ||| allocations	count=3
function	the token [function_2] ||| [function_2] [function_1]	count=1
module	if they ||| darkfish	count=1
arg	address [arg_2] ||| [arg_2] [arg_1]	count=3
function	or a gem name) ||| store for	count=1
function	at the warn ||| warn	count=1
function_arg	[function_1] specified ||| [function_1] value [arg_2]	count=1
arg	to other ||| other	count=1
module	message digest ||| digest	count=1
arg	status and string ||| status string	count=3
module	from this hash ||| json ext generator generatormethods hash	count=1
arg	to ||| add	count=3
module	directory may be ||| net ftp mlsxentry	count=3
function	the beginning of ||| begin	count=1
function	sends a [function] command ||| [function]	count=2
function_arg	[function_1] mod ||| [arg_2] [function_1]	count=11
returnv	asn1data ||| asn1data	count=1
function	class [function_2] ||| [function_2] [function_1]	count=7
arg	the specified mailbox ||| mailbox	count=3
module	if the [module] is ||| [module]	count=14
function	verifies that ||| verify	count=1
module	in the tuplebag which ||| rinda tuplebag	count=1
arg	sec seconds ||| sec	count=2
arg	the given base_method ||| base_method	count=1
module	file lists have ||| gem specification	count=1
arg	string and ||| string	count=1
function	klass_name ||| method file	count=1
function	[function] array ||| [function]	count=1
function	set the visibility ||| set visibility for	count=1
function	protected [function_2] ||| [function_1] [function_2]	count=3
function	[returnv_1] [function_2] ||| [returnv_1] pipe [function_2]	count=6
arg	tags for an attribute ||| start stop	count=1
returnv	[returnv] sslconfig ||| [returnv]	count=3
function	class or [function_2] ||| [function_1] [function_2]	count=3
arg	klass in ||| klass	count=1
module	request ||| webrick httprequest	count=2
arg	other wraps the ||| other	count=1
returnv	string that ||| string	count=1
function	all gems in ||| all	count=1
function	if the gem ||| ?	count=1
arg	with the given base ||| base	count=1
arg	that watches place ||| place	count=1
arg	environment env ||| env	count=1
module	represent a module? ||| classmodule	count=1
module	build ||| gem indexer	count=1
module	live in if ||| rdoc generator	count=1
function_arg	[function_1] port ||| socket [function_1] [arg_2]	count=2
function	[function_1] mapping ||| [function_1] [function_2]	count=2
arg	columns ||| columns	count=1
module	created ||| syslog	count=1
module	available ||| thread mutex	count=2
function	allow [function_2] ||| [function_1] [function_2]	count=1
module	image with ||| photoimage	count=1
returnv	has ||| bool	count=1
module	:http#read_timeout ||| client	count=1
module	send to irb ||| irb	count=1
arg	characters in str ||| str	count=1
module	for this cert ||| openssl x509	count=1
module	the visitor ||| markup tordoc	count=2
module	the tools ||| rdoc parser rubytools	count=1
function	[returnv_1] if ||| [returnv_1] contains requirable file [function_2]	count=1
module	this toplevel for ||| rdoc toplevel	count=1
module	re-hashing the [module] variables ||| [module]	count=1
function	unnormalized [function] of ||| [function]	count=1
function	setter for dn ||| dn	count=1
function	full path to ||| path	count=1
module	json ||| json ext generator	count=8
module	if it isn’t ||| mutex	count=1
module	encoding object that represents ||| io	count=1
arg	list ||| list options	count=2
function	all tuples ||| all	count=1
arg	matches against [arg_2] ||| [arg_2] path [arg_1]	count=1
arg	from [arg_2] ||| [arg_2] [arg_1]	count=1
arg	or source see element ||| element	count=1
module	values from [module] ||| [module]	count=2
module	the visitor for ||| rdoc markup tordoc	count=2
arg	extensions for the ||| extensions	count=2
function	in if ||| gen	count=1
function_arg	using erb [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	adds [function_1] [arg_2] ||| [function_1] [arg_2] aproc	count=2
function	before the ‘:’ ||| before	count=1
function	checks the permissions of ||| permissions	count=1
module	[module] added ||| [module]	count=3
module	gzipfile object ||| zlib gzipfile	count=1
module	the [module] by x ||| [module]	count=1
arg	io and ||| io	count=2
function	[returnv_1] representing ||| [returnv_1] to [function_2]	count=3
function	only ||| only ?	count=1
arg	extension for file_name ||| file_name	count=1
arg	given arguments ||| args	count=1
module	base64 ||| xmlrpc base64	count=2
arg	class if you ||| class klass func	count=3
function	an info ||| info	count=1
module	returns the status class ||| httpstatus	count=1
module	formats [module] ||| [module]	count=3
arg	bits the [arg_2] ||| cert [arg_1] [arg_2]	count=7
arg	connects to the server ||| port helo user secret authtype	count=1
function	resolution ||| resolution	count=1
function	containing [function] elements ||| [function]	count=1
function	map ||| start mapping	count=1
module	create ||| rdoc generator darkfish	count=2
arg	string ||| string 1	count=2
function	of the buffer ||| buffer	count=1
function	the exit [function_2] ||| [function_2] [function_1]	count=3
function	if the real and ||| ?	count=1
module	of the object if ||| drbobject	count=1
module	enum sorted either according ||| enumerable	count=1
function_arg	[function_1] document ||| [arg_2] [function_1]	count=1
function	t_data type ||| tdata	count=1
module	form for restricting ||| gem requestset gemdependencyapi	count=1
arg	an ||| name	count=1
function	[function_1] object ||| objectspace [function_1] [function_2]	count=2
module	be set as ||| rexml	count=1
module	registers ||| rinda tuplespace	count=1
module	peer certificates verification ||| ssl sslsocket	count=1
arg	given string or symbol ||| key	count=1
module	a properly-space list of ||| options	count=1
arg	in req ||| req	count=1
module	adds ||| rdoc markup	count=1
function	[function_1] at ||| [function_1] [function_2] index	count=1
function	[function_1] match ||| [function_2] [function_1]	count=2
function	a hash based on ||| hash	count=1
function_arg	data in [arg_2] ||| [arg_2] [function_1]	count=2
function	the files ||| files	count=3
module	druby ||| drb	count=1
function	of all ||| all	count=1
arg	n matrix ||| n	count=1
arg	by looking for ||| container tk	count=1
module	allow ||| markdown	count=1
module	if local ||| drb drbobject	count=1
arg	implicit start [arg_2] ||| [arg_2] [arg_1]	count=1
function	yields each ||| each	count=3
module	an ri task ||| rdoc ri task	count=1
module	evaluating statements [module] ||| [module]	count=1
function	[function] address for ||| to [function]	count=1
arg	named file to ||| cmd file	count=1
function	version of the ||| version for	count=1
module	requirement will not ||| requirement	count=1
function	[function_1] prime factorization ||| [function_1] [function_2]	count=2
function_arg	ruby [arg_2] ||| [function_1] [arg_2]	count=1
function	sections alphabetically default or ||| sections	count=1
function	an array of arrays ||| a	count=2
arg	start and [arg_2] ||| [arg_2] [arg_1]	count=2
returnv	element of self for ||| ary	count=1
function_arg	the value of big [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	added to the ||| added	count=1
arg	spec that ||| spec	count=2
function	a patch request ||| patch	count=1
function	[returnv_1] result ||| [function_2] [returnv_1]	count=1
function_arg	[function_1] filename ||| [function_1] file [arg_2]	count=1
function	they don’t already exist ||| gen sub	count=1
module	be set as ||| rexml parent	count=1
module	monitormixin ||| monitormixin	count=1
module	finds ||| gem testcase staticset	count=1
module	provided ||| sslconfig	count=2
arg	klass in the receiver ||| klass	count=1
module	don’t ||| darkfish	count=1
arg	the named file exists ||| file_name	count=2
module	composite notifier object ||| irb notifier compositenotifier	count=1
function_arg	[function_1] value value ||| [function_1] if need klass [arg_2]	count=1
module	the file ||| io	count=1
module	a [module] or ||| [module]	count=1
module	turned off by :enddoc ||| rdoc codeobject	count=1
arg	n by n ||| n zero one	count=1
function	a relative [function_2] ||| [function_1] [function_2]	count=3
module	specification contains ||| gem specification	count=1
function	the beginning ||| begin adding	count=1
function	to csv ||| csv	count=1
arg	needed dependency ||| needed set	count=1
function	extracts the ||| extract	count=2
function	class with ||| class named from	count=2
module	this element ||| rexml element	count=2
module	with [module] :paragraph containing ||| [module]	count=1
function	library ||| library	count=1
arg	path returning ||| path mode	count=1
arg	from found klasess ||| name found klasses	count=1
module	local ||| drb	count=1
returnv	[returnv] from the ||| [returnv]	count=1
module	this context’s top level ||| rdoc context	count=1
module	the feed or ||| feed	count=1
module	fix ||| fixnum	count=1
arg	meta-programmed attribute and creates ||| context single tk comment	count=1
arg	files ||| options	count=1
function	the bytes [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] named file ||| [arg_2] [function_1]	count=8
arg	transfers ||| remotefile blocksize &block;	count=1
arg	label containing parts ||| label parts	count=2
rep	a [function_arg_2] ||| [function_arg_2] [module_1]	count=4
function	writes str in the ||| write	count=1
arg	if pattern is specified ||| pattern	count=1
function	methods for ||| make methods	count=2
module	from [module] returning nil ||| [module]	count=1
returnv	timezone of ||| fixnum	count=1
module	the other ||| sslconfig	count=1
function_arg	[function_1] template ||| [function_1] [arg_2]	count=5
module	stream is at ||| openssl buffering	count=1
arg	root options may be ||| root options default	count=1
arg	uri ||| uri	count=10
function	and label list items ||| list item start	count=1
function_arg	writes data to ||| write data	count=1
function_arg	[function_1] command line ||| [arg_2] [function_1]	count=1
function	in ||| comment	count=1
module	constructing ||| atom	count=1
function	skip the var ||| skip for	count=1
function	this an ssl ||| ssl	count=1
module	of files so that ||| gem	count=1
function	the discarded [function_2] ||| [function_2] [function_1]	count=1
arg	from a string according ||| string 1 jan	count=2
arg	key from certificate with ||| certificate	count=1
arg	creates a date-time object ||| hour minute second offset start	count=2
function	vi ||| vi	count=1
function	and calls verify to ||| verify signatures	count=1
function	[function_1] directory ||| [function_2] [function_1]	count=11
module	variable was ||| testcase	count=1
arg	the start and ||| start	count=1
module	requested ||| resolver	count=2
function	of classes ||| classes	count=1
function	argument handling [function] rigid ||| lambda [function]	count=1
returnv	is true ||| bool	count=1
module	error ||| error	count=1
module	instead ||| toplevel	count=1
returnv	if it isn’t available ||| self	count=1
module	row access returning the ||| csv table	count=1
module	parameters provided ||| drbsslsocket	count=1
module	marks ||| tohtmlsnippet	count=1
function	rounding ||| rounding	count=1
module	socket ||| socket option	count=1
function	to the option ||| version option	count=1
function	symbolic link ||| symlink	count=3
module	raw version string ||| gem version	count=1
function	returns an array of ||| to a	count=2
arg	equivalent to ||| obj ...	count=1
arg	for method [arg_2] ||| [arg_2] [arg_1]	count=2
arg	form ||| form	count=1
arg	chain from the spec ||| spec	count=1
arg	freefunc that ||| freefunc	count=1
function	the rdoc ||| rdoc	count=2
arg	message to the ||| message	count=1
function	[function_1] class/instance indicator ||| [function_2] [function_1]	count=2
arg	[arg_1] io ||| [arg_2] [arg_1]	count=2
module	initialized when the first ||| syslog logger	count=1
function	[returnv_1] if ||| [returnv_1] field row [function_2]	count=1
function_arg	[function_1] anchor ||| [function_1] [arg_2]	count=2
function	canceled status ||| canceled	count=1
module	object’s object_id ||| pp ppmethods	count=1
function_arg	[function_1] with anchor ||| [function_1] [arg_2]	count=1
arg	:toplevel location ||| location	count=1
arg	given certificates store ||| certificates store	count=2
module	specifications that match ||| gem resolver molinillo specificationprovider	count=1
function	checks for a constant ||| const	count=1
module	terminated and is ready ||| thwait	count=1
arg	named key_name from test/rubygems ||| key_name	count=1
module	digest in bytes ||| digest sha2	count=1
function	disk for ||| generate	count=1
function	old [function_2] ||| [function_1] [function_2]	count=1
module	the policy ||| policy	count=1
arg	numbers ||| ubound generator	count=1
module	a new fiddle :pointer ||| fiddle	count=1
arg	[arg_1] encoding encoding ||| [arg_2] [arg_1]	count=2
function	openssl ||| name	count=1
function_arg	text for ||| text bin_file_name	count=1
function	the #page_dir to ||| finish page dir	count=1
module	in if they don’t ||| rdoc generator	count=1
module	restricting gems to a ||| requestset gemdependencyapi	count=1
module	to the given object ||| object	count=1
arg	signing_key [arg_2] ||| [arg_1] signing_cert [arg_2]	count=1
module	current [module] to ||| [module]	count=1
arg	a tag [arg_2] ||| [arg_2] [arg_1]	count=1
module	lexer ||| rubylex	count=1
returnv	an array of ||| array	count=4
function_arg	the given header ||| key ? header	count=1
arg	from [arg] are ||| [arg]	count=1
function	unix address ||| unix	count=1
module	summary table ||| optionparser list	count=1
module	object to a ||| object	count=1
function	returns the version of ||| version	count=1
module	‘:’ in json ||| json ext generator state	count=1
function	[function_1] written in ||| [function_2] [function_1]	count=4
function	api compatibility version of ||| api version	count=1
arg	to ||| opts	count=1
arg	spec that [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] comment to ||| [arg_1] [arg_2]	count=5
module	marks up ||| markup formatter	count=1
function	is the list empty? ||| empty ?	count=1
module	this proc ||| proc	count=2
module	a version from ||| version	count=1
module	class method/attribute ||| methodattr	count=1
function	spec and the ||| spec	count=1
returnv	in str split using ||| an_array	count=1
function	the mkd ||| makable	count=1
function	the user ||| dir config	count=1
module	delegate method calls ||| delegator	count=1
function	yields each parent ||| each parent	count=2
function	if unconverted_fields() to ||| unconverted fields ?	count=2
returnv	value as a float ||| float	count=1
function	has a public ||| bool public ?	count=2
module	the peer ||| sslsocket	count=1
module	for marking up ||| rdoc generator markup	count=1
function	method ||| instance method	count=2
arg	implicit ||| implicit	count=3
arg	of file_name ||| file_name	count=2
module	of documentation unless ||| rdoc	count=1
function_arg	handler [arg_2] ||| [arg_2] [function_1]	count=1
module	specifications ||| resolver molinillo specificationprovider	count=2
arg	freefunc ||| freefunc	count=1
function	gem name from ||| gem name	count=2
arg	[arg] matching values ||| [arg]	count=1
function	the method identifier for ||| allocation method id	count=1
function	for ipv6 [function_2] ||| [function_2] [function_1]	count=10
module	block was terminated ||| localjumperror	count=1
function	intermediate reply 3xx ||| continue ?	count=1
function	[function] the gem ||| [function]	count=1
function	difference [function] ||| [function]	count=1
function	hyperbolic sine ||| sinh	count=1
module	returns the ||| httpstatus	count=1
arg	handler id ||| id	count=2
arg	passes args to ||| args &block;	count=2
module	range using the given ||| range	count=1
module	impossible [module] ||| [module] resolver	count=3
module	to this object’s ||| generator markup	count=1
rep	[module_1] given header ||| [module_1] bool has [function_arg_2]	count=2
arg	enclosing to a class_type ||| class_type enclosing	count=1
arg	value ||| value tag tagging	count=1
arg	of nodes matching a ||| element path namespaces variables	count=1
arg	the title ||| title	count=1
function	hash containing [function_2] ||| [function_2] [returnv_1]	count=1
function_arg	[function_1] [arg_2] first and returns self ||| array ary rotate [function_1] [arg_2]	count=3
module	@param index the integer ||| parent	count=1
arg	parsing from a string ||| string	count=4
function	parsed elements ||| rfc822	count=1
arg	repeatedly [arg] times ||| [arg]	count=1
arg	the digests match the ||| digests	count=1
arg	comment and [arg_2] ||| [arg_2] [arg_1]	count=2
function	list of the ||| list	count=2
module	to its original state ||| gem testcase	count=1
function	[function_1] valid ||| [function_2] number [function_1]	count=2
arg	mod ||| mod	count=5
returnv	the object ||| obj	count=3
module	singleton ||| rdoc	count=1
arg	if path [arg_2] ||| [arg_1] [arg_2] ) → (true or	count=1
function_arg	this [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] document to ||| [function_1] [arg_2]	count=1
function	ensure [function_2] ||| [function_1] [function_2]	count=1
function	returns the memory address ||| to i	count=1
module	file name ||| file	count=1
arg	line and ||| line path	count=1
module	to a single entry ||| rdoc markup tojoinedparagraph	count=1
function	will be a header ||| header	count=1
module	generated json to the ||| json ext	count=1
function	attlist declaration ||| attlistdecl	count=1
function	returns the index ||| index	count=1
returnv	returns a true ||| bool	count=1
function_arg	[function_1] v ||| [function_1] ? [arg_2]	count=2
function	sections from ||| sections	count=1
function	[returnv_1] if unconverted_fields() ||| [function_2] [returnv_1]	count=1
function	sets the system ||| system	count=1
function	exec flag ||| exec	count=1
module	raw cookie string ||| cgi cookie	count=1
function	[function_1] filter ||| [function_2] [function_1]	count=2
function	[returnv_1] [function_2] the method object ||| [returnv_1] [function_2]	count=1
module	to ||| prettyprint	count=1
function	[returnv_1] [function_2] ||| [returnv_1] tuesday [function_2]	count=1
module	generated json #max_nesting = ||| json ext generator	count=1
function	file matching ||| find in	count=1
arg	dependency is satisfied by ||| dependency	count=1
function	list of generators and ||| generator	count=1
arg	length bytes defaulting to ||| length	count=1
function	proxy for ||| proxy	count=1
module	[module] host ||| [module]	count=1
module	of the document ||| document	count=1
module	for this process ||| process	count=4
function	the superclasses of ||| is a	count=1
function	using that ||| dir	count=1
function_arg	extra data [arg_2] ||| [function_1] [arg_2]	count=1
module	current token to ||| rdoc markup	count=1
function	this method ||| data	count=1
function	mixed mode ||| col or row	count=1
function	in if they ||| gen	count=1
function	[function] a ||| to [function]	count=3
arg	dependency which has ||| dependency	count=1
module	database with ||| yaml dbm	count=1
arg	public key to ||| key	count=1
function	[function_1] class ||| [function_2] [function_1]	count=5
function	requested domain if remote ||| remote ?	count=1
function	begins with the ||| begins	count=1
module	given the following configuration ||| openssl config	count=1
module	a certificate to ||| gem	count=1
module	the object if ||| drb drbobject	count=1
function	[returnv_1] returns a ||| [function_2] [returnv_1]	count=2
arg	a prefix ||| prefix	count=1
module	the given ||| gem userinteraction	count=1
function	if [function_2] ||| [function_2] key [function_1]	count=4
module	hash ||| generator generatormethods hash	count=1
function_arg	dump [arg_2] ||| [function_1] [arg_2]	count=2
function	set ||| history file=	count=1
function	if whitespace is respected ||| whitespace	count=1
function	search [function_2] ||| [function_1] [function_2]	count=4
module	latest specification ||| resolver	count=1
function_arg	[function_1] the version ||| [arg_2] [function_1]	count=1
module	of the new array ||| array	count=1
arg	level and ||| level	count=1
module	unmatched ||| rdoc context	count=1
function	sanitize the ||| sanitize	count=1
arg	the given extensions ||| extensions	count=3
module	to its original ||| gem	count=1
module	a set ||| gemdependencyapi	count=1
module	status ||| net imap	count=1
module	a [module] to ||| [module]	count=1
function	to row ||| row !	count=1
arg	[arg_1] stats ||| [arg_1] [arg_2]	count=4
function_arg	handle the [arg_2] ||| [function_1] [arg_2]	count=1
module	peer certificates verification ||| sslsocket	count=1
function	set of possible ||| possible	count=1
module	gem is ||| gem package	count=1
function	attributes [function_2] ||| [function_2] [function_1]	count=3
arg	not the given ||| opt &b;	count=1
function	or no ||| no	count=1
function	password input element ||| password field	count=1
function	deletes ||| delete ?	count=2
function	visitor ||| accept list item	count=4
module	status class ||| webrick	count=1
function	to append ||| append	count=1
module	index generation ||| indexer	count=1
arg	the comment to comment ||| comment	count=1
module	header field [module] nil ||| [module]	count=1
module	the ||| generator	count=2
module	a ||| drbsslsocket	count=1
module	@return edge ||| gem resolver molinillo dependencygraph	count=1
arg	and string attributes ||| string	count=1
module	class to wrap ||| importer	count=2
function	[returnv_1] [function_2] ||| [returnv_1] disconnected [function_2]	count=1
function	defined by ||| defined	count=4
function	removes ifdefs that would ||| ifdefs in	count=1
function	rfc 2822 formats ||| rfc2822	count=1
module	notifytemplateentry ||| notifytemplateentry	count=2
module	the same method definition ||| method	count=1
function	[function_1] methods ||| [function_1] [function_2]	count=24
function	[function_1] certificate ||| [function_2] [function_1]	count=6
function	the directories the ||| gen sub directories	count=1
function	potential ||| special hyperlink	count=1
arg	if the given object ||| object	count=1
arg	running the ||| env command... options	count=1
arg	the integer index of ||| index	count=1
module	docs will ||| generator darkfish	count=1
module	io ||| io	count=5
module	returns ||| rdoc	count=2
function	spec ||| to fetcher	count=1
function	that ||| by name	count=1
returnv	a new [returnv] consisting of ||| [returnv]	count=1
function	returns the destination encoding ||| destination encoding	count=1
function	if unconverted_fields() to parsed ||| unconverted fields ?	count=1
function_arg	adds [arg_2] ||| [function_1] [arg_2] next_update extensions	count=2
module	development ||| gem specification	count=1
arg	string str with ||| str	count=2
arg	scripts ||| filename bindir	count=1
module	pop3 session and ||| net pop3	count=1
arg	to answer question ||| question	count=1
arg	[arg_1] [arg_2] ||| [arg_1] issuer [arg_2]	count=10
module	a valid json ||| json ext generator state	count=1
module	webrick ||| webrick	count=3
function	all messages on ||| all	count=1
arg	process by running ||| env command... options	count=1
function	quietly ensure [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] to value ||| [arg_2] [arg_1]	count=3
module	silent ||| silentprogressreporter	count=1
function	retrieves ||| fetch	count=2
arg	addr ||| addr	count=2
module	trace output example ||| tracer	count=1
function	list of all the ||| list	count=1
module	command and returns ||| net imap	count=1
module	reconstruct the same specification ||| specification	count=1
function	is ||| implicit ?	count=1
function	the address of the ||| address	count=1
arg	of default ||| default	count=2
module	of ||| requestset gemdependencyapi	count=2
module	openssl ||| openssl x509 store	count=1
module	for ||| generator	count=1
arg	server using options ||| server options	count=1
module	net :http#read_timeout ||| xmlrpc client	count=1
module	that a new ||| drbsslsocket sslconfig	count=1
module	#max_nesting = 0 ||| ext	count=1
module	stou stor appe and ||| net ftp mlsxentry	count=1
function	other ||| setup	count=1
function	ruby lighter-weight code representation ||| ruby for cache	count=1
returnv	number ||| integer	count=5
arg	parts ||| parts	count=4
module	has been ||| rdoc	count=1
function	all [function] ||| dependent [function]	count=3
function	last successful ||| last	count=1
function	if the named private ||| private	count=1
function	the appropriate [function] ||| [function]	count=1
arg	given name and requirements ||| name	count=1
function	new key ||| create key	count=1
function	[returnv_1] if ||| [returnv_1] deletable [function_2]	count=1
module	whether this dh instance ||| pkey dh	count=1
function	erb ||| erb	count=1
function	[returnv_1] [function_2] running ||| [returnv_1] [function_2]	count=2
arg	other_str parameter defines ||| other_str+	count=1
function_arg	[function_1] path ||| [function_1] get [arg_2]	count=1
module	this file or nil ||| file stat	count=1
module	and waits if it ||| mutex	count=1
function	returns the type of ||| type	count=2
function	and the line number ||| get file and line	count=1
returnv	returns the interface index ||| integer	count=1
module	marking ||| generator	count=1
arg	are separated by sep ||| sep	count=1
function	an output ||| output	count=2
arg	connects to ||| port helo user secret authtype	count=1
function	switches ||| by col or row	count=1
arg	text then ||| text	count=1
module	state object configured ||| state	count=1
arg	if [arg] is an ||| [arg]	count=1
function	[returnv_1] named private ||| [function_2] [returnv_1]	count=1
function	creates [function] for the ||| [function]	count=1
function	or ||| or module	count=1
function	have ||| ?	count=1
function	the initial ||| initial	count=1
function	protected [function_2] ||| [function_2] [function_1]	count=3
module	in [module] ||| [module] ext generator	count=1
function	if any member ||| member ?	count=1
module	self is an array ||| array	count=1
arg	child to this element ||| element	count=1
arg	given by an index ||| index	count=1
function_arg	[function_1] — returns ||| [arg_2] [function_1]	count=1
function	a singleton ||| new	count=1
function_arg	for dn val ||| set dn val	count=1
function	[function_1] until ||| [function_2] [function_1]	count=1
module	add to ||| gem	count=1
function	gem version from ||| gem	count=1
arg	sets the status and ||| status	count=1
module	data store file ||| pstore	count=1
module	parameters provided ||| drb	count=1
module	attempts to grab the ||| thread	count=1
module	is flush to ||| rdoc markup	count=1
returnv	that are ||| integer	count=1
function	url to one that ||| url	count=1
function	cram-md5 ||| cram md5	count=1
arg	the specified destination mailbox ||| set mailbox	count=1
function	vi mode ||| vi editing mode	count=1
module	level 1 rdoc :markup ||| rdoc markup	count=1
module	or that ||| drb drbsslsocket	count=1
module	they ||| darkfish	count=1
module	every message digest ||| openssl digest	count=1
function	[function_1] for ||| [function_1] [function_2]	count=10
arg	spec from ||| spec	count=1
arg	service running on front ||| front	count=1
module	updates the [module] given ||| [module]	count=1
arg	called [arg] ||| old_name [arg]	count=3
function	used to execute the ||| realtime	count=1
arg	with anchor ||| anchor	count=2
arg	other which may ||| other	count=1
returnv	or an instance ||| instance	count=1
module	a rdoc ||| rdoc markup	count=2
function	every method ||| method	count=1
function	paragraph from the ||| paragraph	count=1
function	modules sorted ||| get sorted module	count=1
function_arg	[function_1] [arg_2] ||| [function_1] self signed [arg_2]	count=2
module	are immediately ||| openssl	count=1
arg	min sec as ||| min sec	count=2
function	live in if ||| sub	count=1
arg	filename given in file_name ||| file_name	count=1
module	as the ||| rexml parent	count=1
arg	date ||| date	count=3
returnv	set as ||| instance	count=1
function	add ||| add platform	count=1
arg	c [arg] ||| [arg] types	count=3
module	this codeobject is in ||| codeobject	count=1
function	[returnv_1] [function_2] ||| [returnv_1] header row [function_2]	count=8
function	[function_1] until ||| monitormixin conditionvariable [function_1] [function_2]	count=1
arg	each [arg] times ||| [arg]	count=1
module	instance of fiddle :handle ||| importer	count=1
function	or separated named) ||| get class or module	count=1
returnv	[returnv] when ole ||| [returnv]	count=1
module	:mapping ||| mapping	count=1
function	directory to ||| dir	count=1
function	returns the number ||| size	count=2
function	serialized ||| marshal	count=1
module	or that a ||| drb	count=1
arg	hash self_hash [arg] ||| mod self_hash [arg]	count=1
module	array containing the ||| array	count=1
function	namespace of ||| prefix	count=1
module	a markup class ||| markup attributemanager	count=2
arg	sends ||| data initheader	count=1
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=12
function	[function_1] have ||| [function_2] [function_1]	count=1
function_arg	object obj ||| object tag obj	count=1
function	parent ||| new	count=1
function	with a slash ||| relative	count=1
function	union of ||| union	count=1
module	of another gem ||| gem	count=1
module	each union ||| fiddle cunionentity	count=1
function	for scope ||| scope	count=1
module	gem specifically the ||| gem specification	count=1
function	the cross-references in ||| special crossref	count=1
function	command to append the ||| append	count=1
module	the row ||| csv row	count=1
function	method calls to ||| method	count=1
module	following configuration being ||| openssl config	count=1
function	all gem version from ||| all gem names and	count=1
function	the host to ||| host	count=1
function	sends a logout ||| logout	count=1
function_arg	[function_1] [arg_2] dependencyrequest ||| [function_1] [arg_2]	count=3
arg	name is found ||| name	count=1
function	directory path to ||| dir	count=1
module	that are immediately ||| openssl	count=1
module	ri ||| store	count=1
module	prepares ||| rdoc	count=7
module	with the ||| sslconfig	count=1
arg	optional label containing parts ||| label parts	count=1
module	or rdoc :attr ||| rdoc	count=1
module	get an array ||| rexml	count=3
module	fiddle constant ||| fiddle	count=1
function	time [function] ||| [function]	count=1
function	an instance of each ||| each	count=2
function	field row ||| field row	count=2
function	search [function_2] ||| [function_2] [function_1]	count=4
module	elapsed real time used ||| benchmark	count=1
arg	by symbol ||| symbol	count=4
module	range or an ||| range	count=1
function	restricting gems to ||| platform	count=1
function_arg	dn val ||| set dn val	count=1
function	[returnv_1] [function_2] any member of ||| [returnv_1] include [function_2]	count=1
module	php markdown ||| rdoc markdown	count=1
returnv	an array containing the ||| array	count=1
module	subsequently defined methods ||| module	count=1
function	adds a ||| add	count=14
module	number ||| openssl	count=1
function_arg	a patch [arg_2] ||| [arg_2] [function_1]	count=1
module	live ||| rdoc	count=1
module	an [module] host ||| [module]	count=1
arg	options may be ||| options default	count=1
module	returns the length ||| rdoc	count=1
function	page ||| page	count=2
function	paragraph that is ||| paragraph	count=1
function	class or module ||| to classes or modules	count=1
module	inflate stream ||| zlib inflate	count=1
function	visitor ||| accept	count=4
arg	optional freefunc ||| freefunc	count=1
function	[returnv_1] if the ||| [returnv_1] gregorian leap [function_2]	count=1
arg	from a string ||| string 1 jan -4712 00:00:00 +0000'	count=2
function	mkcol request to the ||| mkcol	count=1
function	the hex-encoded ||| hexdigest	count=1
function	of each ||| each	count=2
function_arg	heading [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg] once for ||| [arg]	count=3
function	[returnv_1] [function_2] in the pool still ||| threadswait [returnv_1] [function_2]	count=1
arg	command with ||| command	count=1
module	from this hash instance ||| json ext generator generatormethods hash	count=1
arg	and base_notifier to use ||| base_notifier	count=1
module	net :http#read_timeout and net ||| client	count=1
module	a version ||| gem version	count=1
module	its original state and ||| gem	count=1
arg	returns a ||| string	count=5
returnv	the ||| symbol	count=1
function_arg	the dependency [arg_2] ||| [function_1] [arg_2]	count=1
module	from the ||| gem	count=1
module	the n’th ||| rexml elements	count=1
function	[returnv_1] if ||| [returnv_1] signaled [function_2]	count=1
function	adds tts ||| accept block	count=1
arg	[arg] in ||| [arg]	count=3
function	encoding magic [function_2] ||| [function_1] [function_2]	count=2
arg	will activate ||| request others_possible	count=1
arg	issuer cn [arg_2] ||| [arg_1] [arg_2]	count=2
module	removes the ||| gem	count=1
function_arg	this method removes [function_1] [arg_2] ||| fileutils [function_1] [arg_2]	count=1
arg	as a net :httpresponse ||| uri_or_host path port &block;	count=1
module	when the first ||| syslog logger	count=1
function	the current local server? ||| here	count=1
function_arg	[function_1] [arg_2] child of this object ||| [function_1] [arg_2]	count=3
module	or not ||| context	count=2
arg	exception [arg] and backtrace ||| [arg]	count=1
arg	set of tags for ||| start stop	count=1
function	look for directives ||| look for directives	count=2
function	:specification ||| spec	count=4
function	comment in ||| comment	count=1
function	if stat generated ||| ?	count=1
arg	rows and ||| rows	count=1
module	will live in ||| rdoc generator darkfish	count=1
rep	registers for [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	of class [function_2] ||| [function_1] [function_2]	count=1
function	documentation installed? ||| installed	count=1
arg	block on ||| &block;	count=1
module	handles ||| erbhandler	count=2
function	[function_1] argument valid ||| [function_2] [function_1]	count=4
function	or ‘top section’ if ||| plain html	count=1
arg	sym returning that ||| sym	count=1
module	values for this struct ||| struct	count=1
function_arg	[function_1] src ||| [arg_2] [function_1]	count=4
function	to the output ||| quote	count=1
function	for which the ||| if	count=2
module	:sslcertificate and ||| drbsslsocket	count=1
arg	optional label [arg_2] ||| [arg_1] [arg_2]	count=1
function	header ||| header convert	count=2
function	to pass output through ||| setup	count=1
module	that represents this specification ||| gem specification	count=1
function	classes [function_2] ||| [function_2] [function_1]	count=4
module	this name ||| openssl x509 name	count=1
function	parameters ||| method params	count=1
function	the original name str ||| orig name=	count=1
function	limit the number of ||| limit	count=1
arg	exists in file1 ||| file1	count=1
function	a copy request to ||| copy	count=1
module	to a set ||| gem	count=1
function	[function] of the ||| marshal [function]	count=1
arg	to pattern ||| pattern	count=1
function_arg	deletes [arg_2] ||| [function_1] [arg_2]	count=3
module	[module] :paragraph ||| [module]	count=1
function	of the date ||| date	count=1
function	a temporary directory ||| create tmpdir	count=1
function	[returnv_1] [function_2] ||| [returnv_1] directory makable [function_2]	count=2
function	and modules discovered by ||| and modules	count=2
module	nametuple objects ||| nametuple	count=1
arg	start to length ||| start length	count=3
function	year ||| year	count=2
arg	by running ||| command... options	count=1
module	and ||| drb	count=1
function	header names and values ||| header	count=1
module	:http#read_timeout and net :http#open_timeout ||| client	count=1
arg	base the base ||| base	count=1
function	use to configure various ||| dir config	count=1
module	to width ||| markup	count=1
arg	will install into gem_home ||| gem_home user	count=1
function	[returnv_1] for which ||| [function_2] [returnv_1]	count=4
module	a bigdecimal ||| bigdecimal	count=1
module	this object’s comment ||| rdoc generator markup	count=1
function	basic list of ||| basic	count=1
function	name ||| dir config	count=1
module	expired certificate ||| gem security	count=1
function	of interpreting ary ||| h	count=1
function	removes a comment ||| remove	count=1
arg	a tag ||| tag	count=1
function	return full names of ||| names	count=1
module	a visitor to ||| markup	count=1
module	case which ||| markup formattertestcase	count=1
rep	field with [function_arg_2] ||| [module_1] bool has [function_arg_2]	count=1
function	an openssl :x509 ||| name	count=1
function	execute the ||| realtime	count=1
function	organization-local ||| orglocal ?	count=1
function	crossref ||| crossref	count=2
function	[function] lib ||| [function]	count=3
function	time [function_2] ||| [returnv_1] [function_2]	count=1
function	list ||| list item	count=1
arg	given hash ||| hash	count=1
arg	to config ||| config	count=1
arg	the string or ||| string filename	count=1
function	[function_1] port ||| [function_1] [function_2]	count=6
module	first instance is created ||| syslog	count=1
arg	ignores all input arguments ||| out_stream size initial_message terminal_message	count=1
module	summary table passing ||| optionparser	count=1
module	new array containing all ||| array	count=1
function	a [function] button input ||| [function]	count=1
function	[returnv_1] that ||| [returnv_1] [function_2]	count=2
function	the root [function_2] ||| [function_2] [function_1]	count=4
module	formatter for ||| gem uriformatter	count=1
function	unresolved [function] gem ||| remove unresolved [function]	count=1
function	all classes [function_2] ||| [function_2] [function_1]	count=5
function	on exec flag ||| on exec	count=2
function_arg	[function_1] obj ||| try [function_1] [arg_2]	count=4
module	the resolver to ||| gem resolver	count=1
function	temporary directory with ||| tmpdir	count=1
arg	of type type ||| type	count=1
function	output error ||| error	count=1
function	the position ||| rewind	count=1
module	current workspaces stack ||| irb context	count=1
module	in the store ||| rdoc store	count=1
module	this section if ||| rdoc context section	count=1
function	parameters and ||| method params and	count=2
module	constant which [module] qualified by ||| [module]	count=1
module	that :sslcertificate ||| drb drbsslsocket sslconfig	count=1
module	store ||| rdoc store	count=1
function	spec directory path ||| spec cache dir	count=1
arg	bound to address port ||| address port	count=1
module	from the stream which ||| openssl buffering	count=1
function	a new directory ||| mkdir	count=1
arg	named file has the ||| file_name	count=2
function	socket type as an ||| socktype	count=1
function	the first comment in ||| first comment	count=1
module	returns the full path ||| basicspecification	count=1
module	the response ||| response	count=2
module	gem ||| gem installer	count=4
returnv	vector[] [returnv] ::elements ||| [returnv]	count=1
module	asks the user ||| gem userinteraction	count=1
arg	[arg_1] fills the ||| [arg_2] [arg_1]	count=1
module	…> the ||| rexml sax2listener	count=1
function	#page_dir to the ||| page dir	count=1
function	the length and number ||| doc stats	count=1
module	this ||| rdoc generator	count=1
function	html ||| html escape	count=1
arg	given attribute ||| key	count=1
module	response received was a ||| response	count=2
function	returns true [function_2] ||| [returnv_1] field row [function_2]	count=4
function	the line number ||| lineno	count=2
module	the net ||| xmlrpc client	count=1
module	calling to_s), converts it ||| ext generator generatormethods	count=1
arg	on path ||| path	count=1
arg	rows and [arg_2] ||| [arg_1] [arg_2]	count=1
function	the crossref ||| crossref	count=1
module	or not ||| irb context	count=2
function	basicresponse for ||| basic	count=1
module	undocumented ||| rdoc stats	count=2
module	contents of this hash ||| hash	count=1
function	previous ||| previous	count=1
function	to [function_1] [function_2] ||| [function_1] [function_2]	count=2
arg	given text ||| text	count=1
arg	specs ||| specs	count=2
module	unmarshall a [module] ||| [module]	count=1
arg	descriptor as ||| perm	count=1
module	this dsa ||| openssl pkey dsa	count=1
function	the requested domain if ||| ?	count=2
module	erb ||| erb	count=1
module	expired certificate ||| security	count=1
arg	args if any ||| args	count=2
function	handy wrapper ||| description	count=1
module	converts this object ||| object	count=1
module	codeobject ||| codeobject	count=2
arg	with name version ||| name version	count=2
function	the description ||| reason phrase	count=1
module	for use by ||| rdoc	count=2
function	create the directories ||| directories	count=1
arg	klass service ||| klass	count=1
returnv	:return or :noreason ||| symbol	count=1
module	stat is a ||| file stat	count=3
arg	and connects ||| address port helo user secret authtype	count=1
function	a vector [function] ||| [function]	count=3
module	a ||| rdoc stats	count=1
module	the list and associates ||| optionparser list	count=1
function	verify ||| verify	count=4
arg	stream for decompression ||| window_bits	count=1
returnv	since the epoch ||| a_rational	count=1
function	used for development ||| development	count=1
module	prevent conversion to ||| markup	count=1
function	multicast site-local scope ||| mc sitelocal ?	count=1
function	[returnv_1] for ipv6 ||| [returnv_1] [function_2]	count=8
arg	an evaluation order ||| order	count=1
module	whether this dsa instance ||| pkey dsa	count=1
function	[function_1] [function_2] module ||| objectspace [function_1] [function_2]	count=2
arg	given in file_name which ||| file_name	count=1
module	internally by cgi ||| cgi	count=1
function	within the library ||| find library	count=1
function	installs the default ||| install	count=1
module	and removes the tempdir ||| gem testcase	count=1
module	user can then ||| makemakefile	count=1
function_arg	[function_1] [arg_2] -1 0 or +1 ||| [function_1] [arg_2]	count=1
function_arg	[function_1] to out ||| [arg_2] [function_1]	count=2
module	that all ||| specification	count=1
function	[function_1] given string ||| [function_2] [function_1]	count=2
function	up the hostname ||| getname	count=1
arg	base ||| base level	count=1
module	a psych :parser ||| psych parser	count=1
arg	a given string as ||| string	count=1
module	c ||| parser c	count=2
function	of the internal string ||| internal	count=1
arg	this dependency ||| dependency	count=1
module	last row ||| zlib gzipreader	count=1
function	:heading containing ||| heading	count=1
function	[returnv_1] [function_2] the gem in ||| gem source specificfile [returnv_1] [function_2]	count=1
function	a new instance ||| new	count=1
arg	equivalent to ||| io string obj ...	count=1
module	generators and ||| rdoc	count=1
arg	list of arguments ||| args	count=2
function	packed struct sockaddr ||| sockaddr	count=1
function	a hash code ||| hash	count=1
arg	exception while handling req ||| exception req	count=1
module	number of bytes that ||| sslsocket	count=1
module	long until the session ||| openssl ssl session	count=1
function	returns the size ||| size	count=6
module	a process :status object) ||| process	count=2
function	broadcast ||| broadaddr	count=1
function	[function_1] [function_2] ||| [function_2] gems use [function_1]	count=8
module	the ||| specification	count=4
function	return the best ||| by	count=2
module	conversion to rdoc ||| rdoc markup attributemanager	count=1
function	the basic list of ||| basic	count=1
module	summary table ||| optionparser	count=1
module	raw version string not ||| gem version	count=1
function	or separated ||| or module	count=1
arg	[arg] an ||| [arg]	count=2
returnv	status of the ||| status	count=1
module	the source for ||| source	count=1
module	for restricting ||| gem requestset	count=1
module	of ||| rdoc singleclass	count=1
function	a line in ||| line	count=1
module	to ||| httpstatus	count=1
function	a proppatch request ||| proppatch	count=1
function	[function_1] enter ||| [function_1] [function_2]	count=1
function	rank ||| rank	count=1
returnv	new [returnv] each ||| [returnv]	count=1
function	self-signed certificate with an ||| cert	count=1
function	returns the integer ||| i	count=1
arg	list n is ||| list options	count=1
module	returns a new string ||| string	count=4
module	a new socket object ||| socket	count=1
rep	[module_1] [function_arg_2] ||| [module_1] unix [function_arg_2]	count=1
function_arg	[function_1] the method_body ||| [function_1] scan args [arg_2]	count=1
function	[function] be called ||| [function]	count=2
function	and ||| doc stats	count=1
function_arg	[function_1] [arg_2] ||| [function_1] store [arg_2]	count=6
module	for ||| totableofcontents	count=1
function	given ||| key	count=3
function	[function_1] readable by ||| [function_2] [function_1]	count=1
function	the version [function_2] ||| [function_2] [function_1]	count=2
module	that ||| certificate	count=1
function_arg	paths [arg_2] ||| [function_1] out [arg_2]	count=1
function	default options ||| default options	count=2
module	rdoc :markup :document ||| rdoc ri	count=1
returnv	returns the string ||| string	count=2
arg	token stream text and ||| text	count=1
module	of this singleton class ||| rdoc singleclass	count=1
module	a ||| array	count=1
arg	with needed dependency ||| needed set	count=1
function	tcp/ip ||| tcp	count=1
arg	[arg] to self ||| [arg]	count=2
function	the lock and ||| lock	count=1
function	the last error of ||| last error	count=1
function	the specific [function_2] ||| [function_2] [function_1]	count=5
module	the ||| tohtml	count=2
arg	begin ||| begin	count=1
arg	the label ||| label	count=1
module	terminated and is ready ||| threadswait	count=1
function	uri ||| class name	count=1
module	returns the status class ||| webrick	count=1
function	pi to ||| pi	count=1
function_arg	[function_1] [arg_2] all the proper subdirectories ||| [function_1] [arg_2]	count=4
module	irb including ||| irb	count=1
module	the visitor for html ||| rdoc markup tohtml	count=1
module	if they don’t ||| rdoc	count=1
function	the hyperbolic tangent ||| tanh	count=1
module	argument is ‘number’ ||| net imap numvalidator	count=1
module	some ||| rexml formatters default	count=1
function	as [function] be ||| [function]	count=1
module	this ||| rexml parent	count=2
module	digest in ||| digest instance	count=1
function	stop ||| stop service	count=1
function	[function_1] single gem ||| [function_2] [function_1]	count=1
returnv	will be set as ||| instance	count=1
function	with on the command ||| config	count=1
module	raises big to the ||| bignum	count=1
arg	match tuple ||| tuple expires	count=1
function	[returnv_1] if ||| [returnv_1] blockdev [function_2]	count=1
function	in place ||| !	count=10
module	with analysis and documentation ||| basicspecification	count=1
module	the ||| drbsslsocket	count=1
module	real absolute [module] of self ||| [module]	count=1
rep	is [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	as ||| to	count=19
module	supplied ||| rexml	count=1
function	[function_1] loop on ||| [function_1] [function_2]	count=1
arg	:http#open_timeout to new_timeout ||| new_timeout	count=1
arg	to the given offset ||| offset	count=1
function	given file ||| file	count=1
arg	makes [arg] ||| [arg]	count=3
module	obj on the ||| object	count=1
module	be csv :row objects ||| csv table	count=1
function	removes a [function_2] ||| [function_1] [function_2]	count=5
arg	struct object ||| object	count=1
function	method names set the ||| set	count=1
module	struct for ||| struct	count=1
arg	a [arg_2] ||| datetime datetime rfc3339 [arg_2] [arg_1]	count=1
arg	using [arg] bind parameters ||| signature [arg]	count=1
arg	index of ||| index	count=1
module	list and ||| optionparser list	count=1
returnv	the block [returnv] containing ||| [returnv]	count=1
arg	on front with a ||| front desc renewer	count=1
arg	v [arg_2] ||| [arg_2] [arg_1]	count=6
module	instructionsequence with ||| instructionsequence	count=1
function	[function_1] sources ||| [function_2] [function_1]	count=4
function_arg	[function_1] defined in ||| [function_1] [arg_2]	count=18
module	object ||| parent	count=1
arg	running os on ||| os	count=1
arg	by running the given ||| command... options	count=1
function	space between ||| space	count=1
rep	[module_1] [function_arg_2] ||| [module_1] numeric [function_arg_2]	count=1
function	represents the encoding ||| external encoding	count=2
module	using identical ||| gem indexer	count=1
function_arg	hostname [arg_2] ||| [function_1] [arg_2]	count=4
module	resolver to allow the ||| gem resolver	count=1
function	returns true [function_2] ||| [returnv_1] has key [function_2]	count=4
function	a list of ||| list	count=4
module	the session ||| ssl session	count=2
module	the aws-sdk gem ||| gem	count=1
module	returns this request ||| ocsp request	count=1
function	returns the length and ||| stats	count=1
function	includes that match ||| includes	count=1
module	translation ||| rdoc i18n text	count=1
function	returns true [function_2] ||| [returnv_1] json creatable [function_2]	count=1
function	the method [function] ||| [function]	count=1
function	[function_1] auth ||| [function_1] cram md5 [function_2]	count=1
module	for restricting ||| gemdependencyapi	count=1
arg	namespace and ||| namespace	count=1
function	variable [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] for ||| [function_2] [function_1]	count=24
function	undefined constant ||| const missing	count=1
function	a options ||| options	count=1
function	return a list of ||| list	count=2
module	will be set as ||| rexml parent	count=1
module	for ||| rdoc markup tordoc	count=4
function	[function] beginning ||| beginning of line [function]	count=1
arg	such as “stor myfile”), ||| blocksize rest_offset	count=1
function	directory for ||| dir	count=1
function	ssl [function_2] ||| [function_2] [function_1]	count=1
function	check that the ||| check	count=1
function	record for ||| record	count=1
function	undocumented items in ||| doc	count=1
module	a rdoc :markup :document ||| rdoc	count=1
arg	[arg_1] tag_name ||| [arg_2] [arg_1]	count=3
module	‘:’ in json objects ||| json	count=1
function	[function_1] type string ||| [function_2] [function_1]	count=2
arg	[arg_1] block on ||| [arg_2] [arg_1]	count=2
function	objects which [function] ||| [function]	count=2
module	using [module] ||| [module]	count=2
returnv	signature is ||| bool	count=1
module	[module] the background ||| [module]	count=1
function	can then use to ||| dir config	count=1
module	links and allows rdoc ||| rdoc	count=1
returnv	returns the ||| integer	count=19
module	sets #extra_rdoc_files to ||| gem	count=1
arg	comment ||| context comment	count=1
function	prepares ||| accept	count=4
function	a ||| setup	count=2
function	[function_1] [function_2] arbitrary object given and ||| [function_1] [function_2]	count=5
module	–platform option to ||| versionoption	count=1
function	aliases ||| aliases	count=1
arg	configuration config ||| config first	count=1
function	dn ||| dn	count=1
module	dh ||| pkey dh	count=4
module	updates ||| rdoc classmodule	count=1
arg	ruby files they contain ||| relative_files force_doc exclude_pattern	count=1
module	file lists ||| gem specification	count=1
function	a copy ||| copy	count=1
function	as arguments then ||| find	count=1
arg	the given text ||| text code_object	count=1
module	rdoc ||| rdoc text	count=1
function	has at least one ||| has	count=1
arg	the comment ||| comment	count=2
function	yields to a ||| inspect key	count=1
arg	tag_name pair or ||| tag_name	count=1
function	iterator for each ||| each	count=1
module	fiber ||| fiber	count=2
rep	installs [function_arg_2] ||| [module_1] [function_arg_2]	count=3
function_arg	token listener obj ||| token listener obj	count=1
function	after another ||| after	count=1
module	this table to mixed ||| csv table	count=1
module	this ||| generator	count=1
function	original string [function_2] ||| [returnv_1] [function_2]	count=6
function	build info [function_2] ||| [function_1] [function_2]	count=1
function	returns true [function_2] ||| [returnv_1] tomdoc [function_2]	count=1
function_arg	[function_1] object o ||| [arg_2] [function_1]	count=1
arg	and an implicit ||| implicit	count=1
arg	that watches place for ||| place event	count=1
module	live in if ||| rdoc	count=1
returnv	true if the value ||| bool	count=1
function	options to ||| options	count=2
returnv	in str split ||| an_array	count=1
module	the spec for documentation ||| rdoc rubygemshook	count=1
function	corresponding ||| []	count=1
function_arg	names of [arg_2] ||| [arg_2] [function_1]	count=1
function	body ||| body	count=2
arg	id and [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	if data ||| ? data	count=1
arg	in a document-class class_name ||| class_name class_mod	count=1
module	drbobject from a ||| drbobject	count=1
module	the job at the ||| irb jobmanager	count=1
function_arg	if [arg_2] ||| equal [function_1] [arg_2]	count=1
module	obj passing ||| object	count=1
module	generated json ||| json ext generator state	count=1
function_arg	[function_1] dep in ||| [function_1] [arg_2]	count=2
arg	with a minimum of ||| name	count=1
function	is a class ||| class	count=1
function	a comment for ||| attr comment	count=1
function	the successor ||| next	count=1
module	this ||| ocsp	count=4
arg	given list ||| list	count=1
returnv	initialized copy ||| digest_obj	count=1
module	yields ||| xmlrpc xmlparser	count=1
function	instance variable ||| instance variable	count=2
module	allow php markdown ||| rdoc markdown	count=1
function_arg	in place [arg_2] ||| [arg_2] [function_1]	count=3
function	the status type ||| status type	count=1
module	event happens ||| psych handler	count=1
function	evaluates to the root ||| root	count=1
function	line by ||| dir	count=1
arg	string value ||| value	count=1
module	abandoned and the digest ||| digest	count=1
function	the locale [function_2] ||| [function_1] [function_2]	count=1
module	of ||| openssl ssl	count=1
function	closed ||| ended	count=1
module	in ||| gem	count=1
rep	an [function_arg_2] ||| [module_1] streamlistener [function_arg_2]	count=2
function	is valid and false ||| valid	count=3
function	from ||| parse comment tomdoc	count=1
arg	a document-class class_name or ||| class_name class_mod	count=1
function	full paths [function_2] ||| [function_2] gems use [function_1]	count=1
function	gets the basic list ||| basic	count=1
arg	to the given key ||| key	count=2
module	from this ||| zlib gzipreader	count=1
function	that are commented ||| commented	count=1
function	converts ||| convert	count=3
arg	digests match the signatures ||| key digests	count=1
module	prepares the visitor for ||| markup totableofcontents	count=1
function_arg	[function_1] [arg_2] ||| [function_1] pattern [arg_2]	count=6
function	an rdoc-schemed ||| special rdoclink	count=1
module	the inflate ||| inflate	count=1
function	can handle ||| can	count=1
module	listening ||| drbprotocol	count=1
arg	methods ||| methods	count=2
module	status a process ||| process	count=2
module	generation ||| generator darkfish	count=1
function	marshal [function_2] ||| [function_2] [function_1]	count=1
function	finds ||| find	count=15
arg	stores wherein [arg] ||| [arg]	count=3
function	output generator for ||| generator	count=1
module	true ||| gem command	count=1
function	results from the profiler ||| profile	count=1
function	closes the read end ||| close read	count=2
arg	container ||| container	count=2
function	loads the ||| irb load	count=1
function	sockets [function_2] ||| [function_2] [function_1]	count=2
module	set as the ||| parent	count=1
function	[function] of ||| [function] version	count=3
function	return true [function_2] ||| [returnv_1] contains requirable file [function_2]	count=2
arg	the ones of user ||| user	count=1
function	finds ||| find attr	count=1
function_arg	subset [arg_2] ||| [function_1] [arg_2]	count=1
arg	fiber-local variable ||| sym	count=1
function_arg	file at filename ||| file filename	count=2
function	version of [function_2] ||| [function_2] api [function_1]	count=1
returnv	using ||| obj	count=1
function	methods in ||| methods	count=1
function	next token from the ||| next token	count=1
module	and removes ||| gem testcase	count=1
function	already ||| gen sub	count=1
function_arg	[function_1] of ||| [function_1] [arg_2]	count=4
module	finds ||| ri driver	count=1
arg	using options from the ||| options	count=1
function	currently executing ||| current	count=1
module	thread objects for all ||| thread	count=1
function	line number ||| lineno	count=3
function	the best available yaml ||| yaml	count=1
arg	file_name [arg_2] ||| [arg_1] [arg_2]	count=5
function	[function_1] local variable ||| [function_2] [function_1]	count=2
function	to the root node ||| root node	count=1
arg	context of this ||| context statements file line	count=1
module	of this function ||| function	count=1
function	to filter ||| add filter	count=2
module	cert signature ||| openssl x509	count=1
function	gem [function_2] ||| [function_2] [function_1]	count=6
module	:retry :next :return ||| localjumperror	count=1
function	instance variables [function] ||| [function]	count=1
arg	[arg_1] generator_name ||| [arg_2] [arg_1]	count=3
arg	section ||| section	count=1
module	installs [module] using ||| gem [module]	count=1
function	[function_1] while the ||| monitormixin conditionvariable [function_1] [function_2]	count=1
function	the amount of time ||| time	count=1
module	file ||| file stat	count=2
function	[function_1] loopback ||| [function_1] [function_2]	count=1
arg	object and connects to ||| port helo user secret authtype	count=1
arg	the [arg] component ||| [arg]	count=1
module	feed or any of ||| atom feed	count=1
module	[module] using the ||| gem [module]	count=1
rep	template [function_arg_2] ||| [module_1] [function_arg_2]	count=7
module	new ||| gem security	count=1
module	use across multiple object+ ||| array	count=1
module	directives in the ||| markup preprocess	count=1
module	[module] for the ||| gem [module]	count=2
function	[function_1] this ||| [function_2] [function_1]	count=4
arg	the status and ||| status	count=1
arg	descriptor as a ||| perm	count=1
function	:heading ||| heading	count=2
function	the latest ||| specific	count=1
arg	other according ||| other	count=1
function_arg	line in [arg_2] ||| [function_1] procs [arg_2]	count=1
function	returns [returnv_1] [function_2] ||| [returnv_1] [function_2]	count=2
function	returns true if ||| bool symlink ?	count=1
function_arg	[function_1] methods to ||| [function_1] out [arg_2]	count=1
module	that cert ||| openssl x509 request	count=1
module	command to inform ||| net imap	count=1
function	an answer from the ||| choose from	count=1
function	sets the [function_2] ||| [function_2] variable [function_1]	count=1
function	[function_1] an array ||| [function_1] [function_2]	count=1
module	that ||| rdoc	count=1
module	restricting ||| gemdependencyapi	count=1
function	no assigned [function] it ||| [function]	count=1
function	for the path ||| path	count=1
arg	title ||| title	count=1
function	the class ||| class	count=3
arg	path if no ||| path	count=1
module	int ||| integer	count=1
function	be set as the ||| new	count=1
arg	of type with ||| type	count=2
arg	given number of bits ||| bits	count=1
arg	mailbox to ||| mailbox	count=1
module	database with the contents ||| yaml dbm	count=1
module	iso 8601 ||| datetime	count=1
arg	the dependency ||| dependency	count=1
module	attrspan for ||| rdoc markup attrspan	count=1
arg	the depth event in ||| depth	count=1
arg	mode [arg_2] ||| [arg_2] [arg_1]	count=2
arg	connected to host ||| host	count=1
function	to obtain the lock ||| lock	count=1
module	instance ||| logger	count=1
function	pager program ||| setup pager	count=1
function	the result of ||| result	count=1
module	prepares the ||| tottonly	count=1
function	[function] gem ||| [function] default gem	count=2
module	returns this response ||| openssl ocsp response	count=1
module	index to ||| rdoc	count=1
arg	types ||| types	count=2
arg	by looking ||| container	count=1
function	a pipe ||| pipe	count=3
function_arg	symlink name with ||| symlink name	count=1
function	makefile for your ||| create makefile	count=1
arg	in methods ||| methods singleton &block;	count=1
module	the spec for downloading ||| specification	count=1
function_arg	[function_1] the named ||| [function_1] [arg_2]	count=25
function	yaml ||| normalize yaml	count=1
function	hash of ||| hash	count=3
module	pkey ||| pkey	count=2
arg	[arg_1] [arg_2] ||| [arg_1] class_type [arg_2]	count=6
function	the target [function] the ||| [function]	count=1
arg	an evaluation order of ||| order	count=1
module	rdoc :attr from ||| rdoc parser ruby	count=1
arg	logs data at level ||| data	count=1
arg	pattern object ||| pattern	count=1
arg	response as an httpresponse ||| data initheader dest	count=1
function	if there ||| has next ?	count=1
arg	[arg_1] tag_name pair ||| [arg_1] [arg_2]	count=3
module	dn ||| uri ldap	count=1
module	with html ||| rdoc methodattr	count=1
arg	the given offset then ||| offset opt	count=1
function	remove ||| create	count=1
module	the keep_files ||| gem testcase	count=1
module	and :sslprivatekey have ||| drbsslsocket sslconfig	count=1
arg	to pass ||| pass	count=1
module	list of ||| gem	count=1
function	deletes all ||| delete all	count=2
module	:sslprivatekey have been provided ||| drb drbsslsocket sslconfig	count=1
function	a hash value ||| hash	count=3
module	in ||| stats	count=1
arg	up to ||| flags outbuf	count=2
arg	the eoutvar to ||| eoutvar	count=1
module	by stou stor appe ||| net ftp mlsxentry	count=1
module	dh instance ||| pkey dh	count=1
arg	and b ||| b	count=1
arg	[arg] times or ||| [arg]	count=1
module	list ||| module	count=1
arg	document to text ||| document	count=1
function	lines from the ||| readlines	count=1
function	after the ||| post	count=1
function	the ::double_fig class method ||| double fig	count=1
module	of [module] objects ||| [module]	count=1
function_arg	compares this version [function_1] [arg_2] http specification rules ||| webrick httpversion [function_1] [arg_2]	count=1
module	to the same method ||| method	count=1
function	and calls ||| loop	count=1
function	returns the adjugate ||| adjugate	count=1
returnv	[returnv] for a ||| [returnv]	count=1
module	in ||| generator generatormethods string	count=1
function	[returnv_1] [function_2] as a ||| [returnv_1] [function_2]	count=2
arg	file named file ||| cmd file	count=1
arg	[arg_1] permissions mode ||| [arg_1] target [arg_2]	count=1
module	into the [module] ||| [module]	count=1
module	syslog alert log level ||| syslog	count=1
function	a self-signed certificate with ||| cert	count=1
function_arg	[function_1] if length ||| [arg_2] [function_1]	count=4
arg	comment by looking ||| container tk	count=1
function	returns true [function_2] ||| [returnv_1] writable real [function_2]	count=2
module	string ||| io generic_readable	count=1
module	sanitize ||| gem specification	count=1
module	determines whether the response ||| response	count=2
module	parsing for ||| rdoc stats	count=2
function	symbol ||| parse symbol	count=1
module	this hash ||| hash	count=2
module	#extra_rdoc_files to ||| gem specification	count=1
module	they don’t already exist ||| generator darkfish	count=1
arg	output formatter ||| formatter	count=1
function	of ruby ||| ruby	count=3
arg	by running the given ||| env command... options	count=1
function	if there is ||| value ?	count=1
function	the named public ||| public	count=1
arg	format_string to any additional ||| format_string	count=1
function_arg	parse an [arg_2] ||| [arg_2] [function_1]	count=3
arg	and password if available ||| password	count=1
module	an entity ||| rexml	count=1
function	parsed elements ||| rfc2822	count=1
module	this ||| rdoc generator markup	count=1
function	this module of the ||| modules	count=1
function	state ||| state	count=2
module	adds ||| rdoc markup tottonly	count=2
arg	given extensions ||| age extensions	count=2
module	onto [module] such that ||| [module]	count=3
function	parses a ||| parse meta attr	count=1
function	is valid ||| valid commercial	count=1
function	[function_1] after ||| [function_2] [function_1]	count=1
module	rdoc ||| rdoc methodattr	count=2
function	key already exists ||| key	count=1
module	documentation unless documentation has ||| rdoc codeobject	count=1
arg	returns to ||| to	count=2
function	the make [function_2] ||| [function_1] [function_2]	count=3
module	notifytemplateentry of a ||| notifytemplateentry	count=1
arg	[arg] column ||| message column [arg]	count=1
arg	optional freefunc that ||| freefunc	count=1
function	[function_1] message ||| getoptlong [function_1] [function_2]	count=1
module	whether the response ||| response	count=2
function	with the document ||| document	count=1
arg	a subset ||| refname mailbox	count=1
module	json #max_nesting ||| json ext	count=1
arg	addresses for name ||| name	count=1
module	properly-space list of generators ||| options	count=1
arg	data at ||| data	count=1
arg	data must ||| data	count=1
arg	strings ||| strings	count=1
arg	number ||| number	count=1
arg	includes other ||| other	count=1
module	available ||| sslsocket	count=1
module	for html ||| markup	count=1
function	loopback address 127 ||| loopback	count=1
function	a set ||| platform	count=1
function	deleted by dele/rmd ||| deletable	count=1
function	[function_1] if not ||| [function_1] ordinal [function_2]	count=2
function	of documentation unless documentation ||| start	count=1
arg	v at key ||| key v	count=3
module	:method or rdoc :attr ||| rdoc parser	count=1
module	value ||| bigdecimal	count=7
function	the last win32 ||| win32 last	count=4
module	of fix ||| fixnum	count=1
function	removes private ||| remove private	count=2
function	last successful [function_2] ||| [function_2] [function_1]	count=1
module	called by tuplespace ||| rinda	count=1
arg	[arg_1] obj ||| [arg_1] [arg_2]	count=1
arg	the delegate [arg] ||| [arg]	count=1
function	[function_1] server advertises ||| [function_2] cram md5 auth [function_1]	count=1
function	replaces this ||| replace	count=1
module	the visitor ||| rdoc markup totableofcontents	count=1
function	restore ||| restore	count=2
arg	gdbm [arg] ||| [arg]	count=1
module	will be set ||| rexml	count=1
arg	contents of filename and ||| filename	count=1
arg	method in ||| method	count=1
function	seed value used ||| seed	count=1
module	the –platform option ||| versionoption	count=1
function_arg	[function_1] given spec ||| [function_1] requirement activated [arg_2]	count=1
module	grab ||| mutex	count=1
function	for methods ||| methods etc	count=1
module	syslog notice ||| syslog	count=1
function_arg	for scope val ||| set scope val	count=1
function	deserializes json string ||| json create	count=1
arg	a file on ||| filename	count=1
module	visitor for html ||| rdoc markup	count=1
arg	and other refer ||| other	count=1
function	truncated to ||| i	count=1
function	:heading containing a ||| heading	count=1
function	page [function_2] ||| [function_1] [function_2]	count=3
module	right thing in ||| rdoc	count=1
function	tts ||| block	count=1
function	or class data ||| class	count=1
module	supplied will be ||| parent	count=1
function	sequence of checkbox elements ||| checkbox group	count=1
arg	dependency which ||| dependency	count=1
module	this activation request’s specification ||| resolver activationrequest	count=2
function_arg	[function_1] given scheme ||| [function_1] env [arg_2]	count=2
function_arg	[function_1] http ||| [arg_2] [function_1]	count=2
arg	characters in to_str ||| to_str	count=1
returnv	about the group ||| group	count=1
arg	meta-programmed attribute ||| context single tk comment	count=1
arg	to out with ||| out	count=1
function	returns [returnv_1] [function_2] all entries of the ||| matrix [returnv_1] real [function_2]	count=1
module	xmlrpc ||| xmlrpc client	count=1
function	that is [function_2] ||| [function_2] [function_1]	count=4
arg	if you ||| klass func	count=3
module	syslog alert ||| syslog	count=1
function	provided or ||| setup	count=1
function	stream is finished ||| stream	count=1
function_arg	comparison — returns ||| -1,_0,_+1 <=> ary	count=1
module	the current severity level ||| logger	count=1
module	from ||| gem	count=1
returnv	a rational which ||| rational	count=1
arg	the given path returning ||| path	count=1
module	pty ||| pty	count=1
function_arg	is [arg_2] ||| [function_1] [arg_2]	count=16
module	visitor ||| markup tomarkdown	count=2
function_arg	a copy [arg_2] ||| [function_1] [arg_2]	count=1
module	of the peer certificates ||| openssl ssl sslsocket	count=1
module	net :http#read_timeout and ||| xmlrpc client	count=1
function	truncated to an ||| to i	count=1
module	tk ||| tk	count=3
function	link-local ||| linklocal ?	count=1
arg	that deprecates [arg] by ||| [arg] repl year	count=1
module	has been ||| codeobject	count=1
module	instantiates [module] ||| [module]	count=1
module	that represents ||| stringio	count=1
function	[function_1] “xhtml” ||| [function_2] [function_1]	count=2
module	new uri ||| uri	count=3
function_arg	assigns the [arg_2] ||| [function_1] [arg_2]	count=1
module	single-row matrix where the ||| matrix	count=1
arg	if length ||| length	count=1
module	lock file ||| requestset lockfile	count=1
module	ensures ||| sslconfig	count=1
function	map with ||| start mapping	count=1
function	of the method ||| alias method	count=1
module	:markup ||| markup formattertestcase	count=1
arg	from start to length ||| start length	count=1
function_arg	token listener [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] at filename ||| [arg_2] [function_1]	count=1
function	the variable [function_2] ||| [function_2] [function_1]	count=3
module	using identical objects as ||| indexer	count=1
arg	or optionally file2 ||| file2	count=1
function	returns true if ||| bool listable ?	count=1
function	is [function] ||| public method [function]	count=3
module	the –version option ||| gem versionoption	count=1
arg	the dependency is satisfied ||| spec dependency	count=1
module	with ||| module	count=1
module	of this ||| gem resolver	count=2
module	in the rd ||| rdoc rd	count=1
function	[function_1] object ||| [function_1] [function_2]	count=4
module	comment for this section ||| rdoc context section	count=1
function	accept_list_end_bullet ||| list end bullet	count=1
arg	[arg_1] signing_key ||| [arg_2] [arg_1]	count=2
returnv	array of symbols ||| array	count=1
arg	headers that you ||| headers	count=1
module	through the ||| httpheader	count=1
arg	sets the element of ||| element	count=1
function	prints [function_2] ||| [function_1] [function_2]	count=1
module	an attribute ||| rexml	count=1
module	rdoc :attr from ||| rdoc parser	count=1
module	undocumented items in ||| stats	count=1
function	[function_1] listener ||| [function_1] [function_2]	count=3
function_arg	int from string ||| int string	count=2
function	matching ||| find files	count=1
function	[function_1] kind ||| [function_1] [function_2]	count=1
function	- ||| -	count=1
module	generated json to ||| json ext generator	count=1
arg	file ||| cmd file	count=1
module	the inline text ||| rdoc rd inlineparser	count=1
function	provided block but preserve ||| save	count=1
module	add ||| gem testcase	count=1
function	for scope ||| set scope	count=1
function	to expect full ||| full	count=1
module	rd format into ||| rd	count=1
function	a constant with the ||| const	count=1
returnv	instance this ||| instance	count=1
function	in the list satisfied? ||| ok ?	count=1
module	this parser ||| ext parser	count=1
module	to rdoc ||| rdoc markup attributemanager	count=1
function	they don’t ||| gen	count=1
function	output [function_2] ||| [function_1] [function_2]	count=1
returnv	the point ||| array	count=1
function	[function] named ||| [function]	count=1
function	state with a ||| state	count=1
module	element of [module] repeatedly ||| [module]	count=1
function	::capture2e captures the ||| capture2e	count=1
module	regexp ||| regexp	count=1
arg	map and [arg_2] ||| [arg_2] [arg_1]	count=2
returnv	children returning [returnv] pid/status pairs ||| [returnv]	count=1
function	spec? note this is ||| matches spec ?	count=1
module	codeobject ||| rdoc codeobject	count=1
function	returns true [function_2] ||| [returnv_1] disjoint [function_2]	count=4
function_arg	object [arg_2] ||| [arg_2] [function_1]	count=3
module	signs this ocsp request ||| openssl ocsp request	count=1
function	to exit or ||| to exit	count=1
function	write using shutdown system ||| write	count=1
function	if the value is ||| ?	count=1
returnv	no arguments sets ||| self	count=1
function	of an uncaught signal ||| signaled	count=1
function	[returnv_1] if ||| [returnv_1] ipv6 [function_2]	count=1
function	for the path ||| set path	count=1
function_arg	[function_1] file_name ||| integer size [function_1] [arg_2]	count=1
function_arg	[function_1] list ||| [arg_2] [function_1]	count=3
module	the tuplebag returning the ||| rinda tuplebag	count=1
function	the namespace of the ||| prefix	count=1
arg	a command and ||| cmd	count=1
function_arg	stream a [arg_2] ||| [arg_2] [function_1]	count=1
module	contains the session ||| ssl session	count=1
function	returns a new [returnv_1] [function_2] in the database ||| sdbm [returnv_1] [function_2]	count=1
module	:name ||| gem	count=1
arg	the file named file ||| cmd file	count=1
arg	the other ||| other	count=1
function	digest to ||| digest	count=1
function	same ||| ==	count=1
module	ensures that :sslcertificate and ||| drb drbsslsocket sslconfig	count=1
function_arg	[function_1] specs ||| [function_1] gems [arg_2]	count=1
module	ensures that :sslcertificate ||| drbsslsocket	count=1
module	class and sets ||| smtp	count=1
module	that sym ||| symbol	count=1
function	[returnv_1] individual raw ||| [function_2] [returnv_1]	count=1
function_arg	[function_1] out ||| [arg_2] [function_1]	count=2
arg	options [arg_2] ||| [arg_2] [arg_1]	count=2
module	of the given remote ||| net ftp	count=1
module	activated ||| activationrequest	count=1
function	writes str in ||| write	count=1
module	for ||| resolv	count=2
function	detect if ||| ?	count=1
module	the current [module] to ||| [module]	count=1
function	gem :installer ||| install	count=1
module	response class and sets ||| net smtp response	count=1
function	the [function] from ||| delete [function]	count=1
arg	allocate size bytes of ||| size	count=1
arg	and fields which ||| fields	count=1
function	[returnv_1] [function_2] ||| [returnv_1] file [function_2]	count=1
function	block ||| if	count=1
arg	store(), but set ||| set attr flags	count=1
function	there [function] ||| path [function]	count=1
function_arg	[function_1] old_list ||| [arg_2] [function_1]	count=1
arg	hard_break ||| hard_break	count=1
module	time including ||| time	count=1
module	matching specifications ||| resolver molinillo specificationprovider	count=1
function	[returnv_1] [function_2] ||| [returnv_1] listable [function_2]	count=2
module	the receiving module in ||| module	count=1
arg	object and [arg] for ||| [arg]	count=1
arg	as an httpresponse object ||| initheader	count=1
function	[function] be ||| [function]	count=2
module	specific ||| gem command	count=1
function	for ||| platform	count=1
module	the raw version string ||| version	count=1
arg	[arg_1] you ||| class [arg_1] [arg_2]	count=3
function	[returnv_1] if the ||| [returnv_1] installed [function_2]	count=1
function	setter for dn ||| set dn	count=1
module	provided or ||| drb drbsslsocket sslconfig	count=1
function	to the option ||| platform option	count=1
function	scans content for rb_define_class ||| do	count=2
function	sorted by salience first ||| sorted	count=1
module	of documentation ||| codeobject	count=1
function	slice of ||| slice	count=1
function	option to the option ||| version option	count=1
function_arg	get request [arg_2] ||| [arg_2] [function_1]	count=1
function	[returnv_1] if ||| [returnv_1] setuid [function_2]	count=2
function	are [function] authors ||| [function] author	count=1
function_arg	[function_1] of arguments ||| [arg_2] [function_1]	count=1
function	label of ||| label	count=2
rep	http [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	if the stream is ||| ?	count=2
arg	[arg] proleptic ||| [arg]	count=2
module	been provided or that ||| drbsslsocket	count=1
module	:break :redo ||| localjumperror	count=1
function	each ||| each	count=4
function	of ipv4 mapped/compatible ipv6 ||| ipv6 to ipv4	count=1
function_arg	[function_1] for io ||| [function_1] [arg_2]	count=5
module	of the ruby ||| ruby	count=1
function	[returnv_1] year ||| [function_2] [returnv_1]	count=1
function_arg	an anchor ||| a href	count=1
module	header fields and a ||| net httpheader	count=1
function	the beginning ||| begin	count=1
arg	items in other ||| other	count=1
arg	and [arg] given ||| obj) [arg]	count=1
function	doesn t create a ||| popen2	count=1
function	node of the document ||| node	count=1
function	field input element as ||| field	count=1
module	this notifier object ||| irb notifier	count=1
function	and [function] ||| classes [function] and extends	count=3
function	finds a spec ||| find spec by	count=3
module	in ||| generatormethods string	count=1
arg	string [arg_2] ||| [arg_2] [arg_1]	count=4
module	session object ||| ssl session	count=1
module	object instead ||| rdoc toplevel	count=1
arg	[arg] as ||| utime stime [arg] cstime real	count=3
module	a pop3 session ||| pop3	count=1
function	file [function] ||| remove [function]	count=1
module	that come with rubygems ||| gem	count=1
function	[function_1] a rational ||| [function_1] [function_2]	count=2
function	a mapping ||| mapping	count=1
function	there are no ||| empty	count=5
arg	the function named symbol ||| symbol	count=1
arg	extensions for ||| age extensions serial	count=1
module	docs ||| darkfish	count=1
function	object ||| external	count=2
arg	the n by n ||| n zero	count=1
function	modules nested at ||| nesting	count=1
arg	according to config ||| config	count=1
function	takes ||| take	count=1
function	visitor ||| start	count=7
function_arg	adds [function_1] [arg_2] destroyed ||| [function_1] [arg_2]	count=2
module	@param ||| rexml	count=1
function	the given key ||| key	count=2
function	is valid [function_2] ||| [function_1] ordinal [function_2]	count=2
arg	[arg_1] source_uri ||| [arg_2] [arg_1]	count=1
function	[returnv_1] if ||| [returnv_1] write headers [function_2]	count=1
function	ensure the ||| ensure	count=2
function	or a gem ||| for	count=1
arg	on req if such ||| req res	count=1
module	returns ||| generic	count=2
function	calls verify to ||| verify signatures	count=1
function	as an ||| values	count=1
function	with only zero elements ||| zero	count=1
arg	[arg_1] an implicit ||| [arg_2] [arg_1]	count=5
function	[function_1] of all ||| [function_2] [function_1]	count=4
module	message ||| logger	count=1
function_arg	[function_1] named symbol ||| [function_1] [arg_2]	count=4
function_arg	[function_1] specs ||| [arg_2] [function_1]	count=1
function	check is ||| number ?	count=1
function	deserializes ||| create	count=1
function_arg	fetches [arg_2] ||| rinda tupleentry [function_1] [arg_2]	count=1
function_arg	list [arg_2] ||| [arg_2] [function_1]	count=9
function	generators ||| generator	count=1
module	the spec ||| gem	count=2
returnv	string representation of the ||| string	count=1
function	[function] given type ||| add [function]	count=2
function	raw profile data hashes ||| raw data	count=1
function	[function_1] [function_2] returns an integer representing ||| [function_2] [function_1]	count=2
function_arg	[function_1] file ||| [arg_2] [function_1]	count=5
returnv	that ||| encoding	count=2
arg	tag ||| tag obj	count=1
module	an openssl ||| gem	count=1
function	on exec flag for ||| on exec	count=1
function	full [function] name of ||| [function]	count=1
function	is this dependency a ||| ?	count=1
arg	spec from [arg_2] ||| [arg_2] [arg_1]	count=4
returnv	in str ||| an_array	count=1
module	last ||| optionparser	count=1
arg	block passed to this ||| &block;	count=1
function	[returnv_1] [function_2] ||| [returnv_1] terminated [function_2]	count=1
function	with the same content ||| eql	count=1
function	removes the definition ||| remove class variable	count=1
arg	file named file ||| file	count=2
function	full [function_2] ||| [function_2] [function_1]	count=4
function	create the directories ||| gen sub directories	count=1
function	are possible conflicts against ||| conflicts	count=1
function	service ||| set service	count=1
module	tupleentry based on ||| tupleentry	count=1
arg	[arg_1] to value ||| [arg_1] [arg_2]	count=2
arg	tuple and are alive ||| tuple	count=1
module	the ||| zlib gzipreader	count=2
arg	httprequest object req ||| req body	count=3
function	visitor for text generation ||| start accepting	count=2
returnv	returns a rational ||| rational	count=1
function	workspace stack is empty ||| pop workspace	count=1
module	<=> ||| comparable	count=1
function	[returnv_1] if self ||| [returnv_1] proxy class [function_2]	count=1
module	this gem ||| gem basicspecification	count=1
function	file in ||| file	count=1
module	that :sslcertificate and ||| drb drbsslsocket	count=1
function	the difference [function] expects one ||| [function]	count=1
function	list of dependencies ||| dependencies	count=2
function	inserts an [function_2] ||| [function_1] [function_2]	count=2
module	as ||| parent	count=1
arg	[arg] from this ||| [arg]	count=2
returnv	bigdecimal and return ||| bigdecimal	count=1
module	that [module] ||| [module]	count=3
returnv	of the target ||| array	count=1
module	that ||| openssl	count=1
function	[returnv_1] if the ||| [returnv_1] intersect [function_2]	count=1
returnv	constructor @param parent ||| instance	count=1
arg	issuer ||| issuer	count=1
module	to convert num ||| numeric	count=1
arg	token stream of text ||| text	count=1
module	singular writer for ||| gem specification	count=1
function	does this [function_2] ||| [function_2] [function_1]	count=2
arg	will write to out_stream ||| out_stream	count=1
arg	pairs with the ||| pairs	count=1
arg	string describing the key ||| key cert ca key_pbe cert_pbe key_iter mac_iter keytype	count=1
module	notifytemplateentry of a new ||| notifytemplateentry	count=1
module	state object ||| ext generator state	count=1
function	unescapes [function_2] ||| [function_2] [function_1]	count=3
function_arg	dependency and [arg_2] ||| [function_1] [arg_2]	count=1
arg	the http status code ||| code	count=1
function	[function] another with ||| [function]	count=1
arg	or left if count ||| count	count=1
function_arg	[function_1] year ||| [arg_2] [function_1]	count=6
function	[function] using the ||| tr [function]	count=1
function	[returnv_1] if stat ||| [returnv_1] exited [function_2]	count=1
function	close and [function] the ||| [function]	count=1
function	exited normally for ||| exited	count=1
function	prepares the ||| accept	count=4
module	up ||| rdoc generator markup	count=1
arg	obj is ||| obj	count=2
module	with the other parameters ||| drb	count=1
module	text from rd ||| rd inlineparser	count=1
function	of ||| drburi	count=1
function	get the uri ||| drburi	count=1
function_arg	[function_1] port ||| socket udp [function_1] loop [arg_2]	count=1
function	any parameters specified for ||| params	count=1
arg	mailbox to [arg_2] ||| [arg_1] [arg_2]	count=1
function	ipv4 mapped/compatible ipv6 ||| ipv6 to ipv4	count=3
module	was ||| localjumperror	count=1
function	default signing ||| default	count=1
module	comment is ||| comment	count=1
arg	port ||| host port	count=1
returnv	proc to call after ||| proc	count=1
rep	[module_1] for file ||| [module_1] template [function_arg_2]	count=1
function	after [function_2] ||| [function_2] [function_1]	count=5
module	instance of [module] ||| [module]	count=3
arg	[arg] are expected ||| [arg]	count=1
function	text mode storing the ||| puttextfile	count=1
module	certificate and ||| gem security	count=1
module	digest can ||| digest	count=1
function	by ||| by	count=4
arg	data at level if ||| data	count=1
returnv	the first [returnv] in the ||| [returnv]	count=1
rep	[module_1] [function_arg_2] ||| [module_1] install [function_arg_2]	count=3
returnv	bytes that are ||| integer	count=1
module	set as the ||| rexml parent	count=1
arg	given extensions for the ||| age extensions	count=2
module	lock source that wraps ||| gem source lock	count=1
function	adds ||| add to	count=1
module	the same specification ||| gem specification	count=1
arg	file [arg] with ||| [arg]	count=1
module	digest object and reads ||| digest	count=1
function_arg	attlist declaration [arg_2] ||| [arg_2] [function_1]	count=2
arg	a meta-programmed attribute and ||| single tk comment	count=1
module	xml-rpc [module] document when ||| [module]	count=1
function	cached ||| cache	count=1
arg	‘key=“value”’ to the output) ||| output indent	count=1
module	or that ||| drbsslsocket sslconfig	count=1
function	gems and [function] them ||| [function]	count=1
function	size of the given ||| size	count=1
function	any member ||| member	count=1
arg	[arg] memory and ||| [arg]	count=2
arg	constants of ole ||| ole	count=1
arg	with requirements to ||| requirements	count=1
function	super class ||| super	count=1
arg	installed using the source ||| source	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=35
module	indicating who caused ||| gem resolver dependencyrequest	count=1
function	port to use ||| port	count=2
function	the make ||| make	count=1
function	:heading containing [function_2] ||| [function_2] [function_1]	count=2
module	rdoc :markup :document ||| rdoc	count=4
function	the ri [function_2] ||| [function_1] [function_2]	count=1
function	hash containing [function_2] ||| [returnv_1] [function_2]	count=1
function	executable ||| executable	count=1
function_arg	adds paths [arg_2] ||| [function_1] out [arg_2]	count=1
function_arg	[function_1] io ||| [function_1] [arg_2]	count=6
function	the encoding ||| encoding	count=4
module	asks the ||| gem userinteraction	count=1
arg	signing_key [arg_2] ||| [arg_1] [arg_2]	count=2
function	adds ||| accept block	count=1
function	openssl :x509 ||| to	count=1
function	[function_1] parameters from ||| [function_2] [function_1]	count=2
module	indent for [module] added ||| [module]	count=1
function	initial length of the ||| initial	count=1
function	asynchronous interrupt ||| interrupt	count=1
function	with ||| config	count=1
function	remote address obtained by ||| remote address	count=1
function	the file ||| file	count=4
function_arg	main page ||| main= page	count=1
function	a gem :specification from ||| spec	count=1
module	the [module] session’s ||| [module]	count=1
module	the given block ||| enumerable	count=1
arg	[arg_1] [arg_2] - bn rem - ||| [arg_1] [arg_2] rem	count=12
function	returns true if ||| bool fnmatch ?	count=1
function	check for illegal characters ||| check	count=1
function_arg	[function_1] [arg_2] ||| [function_1] output dir [arg_2]	count=3
function	[function] of ||| zlib [function]	count=3
module	any authors [module] ||| [module]	count=2
module	is initialized when ||| syslog logger	count=1
module	rdoc :document using ||| rdoc	count=1
module	look ||| rdoc parser c	count=1
module	:get ||| uri	count=1
function	block once for each ||| collect	count=1
function	[returnv_1] if ||| [returnv_1] body permitted [function_2]	count=1
arg	out_stream for size items ||| out_stream size	count=1
module	the last row read ||| gzipreader	count=1
module	new loc ||| loc	count=1
function	the files of ||| files	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] ? [arg_2]	count=2
returnv	of this ||| instance	count=1
function	insert a space between ||| space	count=1
arg	content to the document ||| content	count=1
function	a new ||| create	count=1
function	of a stream a ||| stream	count=1
arg	req for [arg_2] ||| [arg_2] [arg_1]	count=1
function	tracing [function_2] ||| objectspace [function_1] [function_2]	count=3
function	set irb_name ||| n jobs	count=1
module	already ||| darkfish	count=1
function	returns the ||| stats	count=1
module	sets the net ||| xmlrpc client	count=1
function	beginning of [function] ||| beginning of [function]	count=1
returnv	an exception object ||| exception	count=1
function	args hash self initializing ||| args hash	count=1
function	[returnv_1] [function_2] ||| [returnv_1] exited [function_2]	count=2
function	directory of the ||| dir	count=1
module	net :imap ||| net imap	count=1
function	generates the makefile ||| create makefile	count=1
module	its original state ||| testcase	count=1
arg	block waiting for tag ||| tag	count=1
module	tempdir ||| gem testcase	count=1
function	scope ||| scope=	count=1
module	set of ||| gemdependencyapi	count=1
module	strings ||| uri rfc2396_parser	count=1
arg	headers ||| headers	count=4
function	limit ||| limit	count=2
module	that are immediately available ||| ssl sslsocket	count=1
function	constant to the given ||| const	count=1
function	function ||| bind function	count=1
function	the raw rfc2965 cookies ||| raw cookie2	count=1
returnv	a nested array ||| array	count=1
module	in the feed ||| atom feed	count=1
arg	platform ||| platform	count=2
arg	where z is ||| z	count=5
function	[function_1] token from ||| [function_1] [function_2]	count=3
module	prepares ||| rdoc markup totableofcontents	count=2
module	the list ||| gem	count=1
module	builds ||| ext builder	count=1
function	then use to configure ||| dir	count=1
function	first ||| first	count=2
function	address of ||| address	count=1
module	command with the given ||| command	count=1
rep	generate [function_arg_2] ||| [module_1] [function_arg_2]	count=8
module	a properly-space list of ||| rdoc options	count=1
function_arg	no handler [arg_2] ||| [function_1] [arg_2]	count=1
arg	in the non-blocking manner ||| exception: true	count=1
arg	parsing from a string ||| string 1 jan -4712 00:00:00 +0000' start	count=2
arg	[arg_1] [arg_2] according to some rfc ||| [arg_2] [arg_1]	count=4
module	domainname from ||| resolv dns resource domainname	count=1
module	todo deprecate and remove ||| gem testcase	count=1
arg	from_str ||| from_str	count=1
module	to use across multiple ||| array	count=1
arg	given command and ||| cmd	count=1
arg	given attribute definition ||| key	count=1
function	to ||| accept	count=1
arg	#auth_type of this database ||| reload_db	count=1
function_arg	[function_1] v ||| [arg_2] [function_1]	count=3
function_arg	writer stream [arg_2] ||| [function_1] [arg_2]	count=2
function	constant that [function_2] ||| [function_2] [function_1]	count=2
function	five entries from the ||| next5	count=1
module	contents of the comment ||| comment	count=2
module	an rdoc :markup :heading ||| rdoc tomdoc	count=1
returnv	user ids [returnv] ||| [returnv]	count=2
function_arg	transcoded [arg_2] ||| [function_1] encoding [arg_2]	count=1
module	such namespace [module] ||| [module]	count=1
function	[returnv_1] before ||| [function_2] [returnv_1]	count=4
module	a rdoc :markup :document ||| rdoc ri	count=1
module	has [module] ||| [module]	count=6
function	udp ||| udp	count=1
module	the ||| logger	count=2
module	and all ||| rdoc	count=1
function	ipv6 address ||| ipv6	count=1
function	paragraph ||| indented paragraph	count=1
module	they ||| rdoc generator darkfish	count=2
module	is initialized when the ||| logger	count=1
arg	from given str ||| str enc separator: '&'	count=1
module	json objects ||| json	count=2
arg	[arg] keys ||| [arg]	count=2
arg	[arg_1] pattern ||| file fnmatch [arg_2] [arg_1] false	count=4
arg	file descriptor as ||| perm	count=1
module	raw version string ||| version	count=1
arg	opens a [arg] ||| [arg] level	count=1
function	visibility ||| parse visibility	count=1
function	writable by ||| writable	count=4
function	from a list of ||| []	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] aproc	count=2
arg	block on [arg_2] ||| [arg_2] [arg_1]	count=4
module	rdoc ||| gem specification	count=1
function_arg	at [arg_2] ||| array obj [function_1] [arg_2]	count=1
function	sends a get ||| get	count=1
module	values from [module] and ||| [module]	count=1
function	true if the ||| bool specific ?	count=2
function	adds tts from ||| block	count=1
function	to configure various “with” ||| dir	count=1
function_arg	[function_1] spec ||| [arg_2] [function_1]	count=4
module	message digest ||| openssl digest	count=1
module	already exist ||| generator darkfish	count=1
module	allow ||| rdoc markdown	count=1
function	command to copy ||| copy	count=1
module	domain ||| resolv dns	count=1
module	mode see irb ||| irb	count=1
function	natural logarithms to the ||| e	count=1
module	through the vertices ||| dependencygraph	count=1
function	[function_1] resolution ends ||| [function_2] [function_1]	count=1
arg	base and prefix to ||| base level prefix	count=1
arg	obj is ||| rng obj	count=1
module	the descriptive fields in ||| gem	count=1
returnv	and waits if ||| self	count=1
module	the visitor for html ||| markup	count=1
arg	scripts to run the ||| filename bindir	count=1
module	waits if ||| thread	count=1
returnv	encoding ||| encoding	count=2
returnv	or [returnv] corresponding ||| [returnv]	count=1
arg	a [arg] or ||| [arg] options	count=1
function	the initial [function_2] ||| [function_2] [function_1]	count=2
function	verify to ensure ||| verify signatures	count=1
function_arg	[function_1] also_in ||| [arg_2] [function_1]	count=1
function	[function_1] name with ||| [function_1] [function_2]	count=2
function_arg	an [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] non-blocking manner ||| [arg_2] [arg_1]	count=2
module	be displayed [module] the background ||| [module]	count=1
arg	io ||| io options	count=1
module	list and ||| list	count=1
function	certificate with ||| create cert	count=2
arg	ole [arg] otherwise ||| [arg]	count=1
function_arg	value in the database [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	installs the default ||| install extend	count=1
function_arg	[function_1] with value ||| [function_1] tag [arg_2]	count=1
function	calls verify to ensure ||| verify signatures	count=1
arg	the specified value ||| value digits	count=5
returnv	bytes that are immediately ||| integer	count=1
arg	klass [arg_2] ||| [arg_1] [arg_2]	count=1
arg	document from [arg] ||| obj [arg]	count=1
function	[returnv_1] if ||| [returnv_1] file [function_2]	count=1
arg	the named generator ||| generator	count=1
function	in the ||| comment	count=1
function	modulo ||| modulo	count=1
function	finalizer to ||| define finalizer	count=1
arg	[arg_1] fills ||| [arg_1] [arg_2]	count=1
arg	config hash ||| config	count=1
module	live in ||| rdoc	count=1
function	digest ||| digest !	count=1
returnv	array of values ||| array	count=1
module	progress reporter that ||| gem streamui simpleprogressreporter	count=1
function_arg	for file ||| for file	count=1
arg	with the options parameter ||| options	count=1
module	verifying the ||| openssl netscape	count=1
module	to just the ||| markup tolabel	count=1
function	is this [function_2] ||| [function_2] [function_1]	count=8
arg	just the text of ||| text	count=1
module	diagonal [module] where ||| [module]	count=1
module	number of ||| stats	count=1
arg	turns email_address into ||| email_address	count=1
module	integer ||| integer	count=2
arg	handling req [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] string ||| httpdate [arg_2] [arg_1]	count=1
module	template ||| template	count=1
module	[module] document ||| [module]	count=4
function	of dividing fix by ||| div	count=1
module	the new array ||| array	count=1
function	reason this block was ||| reason	count=1
module	to be csv ||| csv	count=1
returnv	set ||| instance	count=1
function_arg	[function_1] from text ||| [function_1] [arg_2]	count=5
function	[function] returned as ||| return [function]	count=2
function	a class ||| add class	count=1
module	the hosts file ||| hosts	count=5
function	copies a region from ||| copy	count=2
module	iseq ||| rubyvm instructionsequence	count=1
module	[module] added in ||| [module]	count=1
module	:handle using fiddle ||| fiddle	count=1
module	random integer greater ||| random	count=1
arg	with [arg] from ||| [arg]	count=1
module	stream with ||| zlib	count=1
function	and ||| file and	count=1
function	the profiler ||| start profile	count=1
module	the full path ||| basicspecification	count=1
function	if the “transfer-encoding” ||| ?	count=1
module	environment ||| gem	count=1
arg	[arg] and from_version ||| [arg] from_version	count=1
function	variables this method ||| variables	count=1
arg	n is ||| n	count=1
function_arg	list of [arg_2] ||| [function_1] out [arg_2]	count=2
function	returns true [function_2] ||| [returnv_1] pipe [function_2]	count=6
function_arg	or module [arg_2] ||| [function_1] [arg_2]	count=1
arg	the level of ||| level	count=1
arg	host and port ||| host port	count=3
function	record for the ||| search record	count=1
function	[returnv_1] [function_2] ||| [returnv_1] sunday [function_2]	count=1
module	that are ||| sslsocket	count=1
module	with the ||| drbsslsocket sslconfig	count=1
module	addrinfo objects ||| addrinfo	count=2
arg	string according to ||| string 1	count=2
function	a suppressed ||| suppressed	count=1
function_arg	[function_1] [arg_2] contains all the proper ||| [function_1] default gem subdirectories [arg_2]	count=2
function	indicated based on ||| consider	count=2
function_arg	[function_1] the members ||| [arg_2] [function_1]	count=3
function	returns the issuer certificate ||| issuer	count=1
arg	anchor tag an ||| anchor tag	count=2
arg	storing top_level [arg_2] ||| [arg_2] [arg_1]	count=6
module	time see the individual ||| time	count=1
module	files ||| rdoc options	count=3
function	hash of [function_2] ||| [function_2] [returnv_1]	count=4
function	[returnv_1] if ||| [returnv_1] eql [function_2]	count=4
module	date and time ||| date	count=1
function	variable ||| variable	count=5
function_arg	mkcol request [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] [function_2] ||| [function_2] cram md5 auth [function_1]	count=1
function	number of microseconds for ||| usec	count=1
module	an array containing ||| array	count=1
function	[returnv_1] [function_2] ||| [returnv_1] leap [function_2]	count=4
arg	data matches a ||| data	count=1
function	use ||| config	count=1
function	address into [function] resolv :dns ||| [function]	count=2
function	finds unique ||| find unique	count=1
returnv	status ||| status	count=1
module	immediately ||| sslsocket	count=1
module	the section ||| markup verbatim	count=1
function	the modification time mtime ||| mtime=	count=1
arg	the given text ||| text	count=1
returnv	the default visibility for ||| self	count=1
arg	and base_notifier ||| base_notifier	count=1
arg	the context ||| context statements file	count=1
arg	from a string ||| string 1	count=2
function	size in bytes ||| size	count=1
function	each installed xml writer ||| each installed writer	count=1
module	an rdoc :attr for ||| rdoc parser	count=2
module	for ri ||| rdoc ri driver	count=1
arg	declared version tag_directives if ||| version tag_directives	count=1
function	it isn’t or if ||| ?	count=2
arg	bits - integer ||| bits	count=1
function	multicast link-local scope ||| mc linklocal	count=1
module	another fiber ||| fiber	count=1
function	methods [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] against ||| [arg_1] [arg_2]	count=2
function	satisfied by the ||| requirement satisfied by	count=2
function	the latest version of ||| latest version	count=1
function	a record for the ||| record	count=1
function	[function_1] key ||| gem [function_1] [function_2]	count=1
arg	a subclass ||| subclass	count=1
arg	transfers localfile ||| localfile remotefile	count=1
function	[returnv_1] if time ||| [function_2] [returnv_1]	count=4
arg	that of real ||| real	count=1
function	invoke kind ||| invkind	count=1
function	name of the underlying ||| s	count=1
function	unspecified ||| unspecified ?	count=1
function	the template dir for ||| dir for	count=1
function	number of elements in ||| size	count=1
module	so that all file ||| specification	count=1
function	parent of ||| parent	count=1
function	::new is private use [returnv_1] [function_2] ||| vector [returnv_1] [function_2]	count=1
arg	level and [arg_2] ||| [arg_1] [arg_2]	count=1
function	returns the hex-encoded hash ||| hexdigest	count=1
arg	to ensure the signatures ||| digests signatures	count=1
module	matrix where the values ||| matrix	count=2
module	the generated docs ||| darkfish	count=1
function_arg	[function_1] val ||| [function_1] [arg_2]	count=15
module	the peer certificates ||| sslsocket	count=1
function	switches ||| by col	count=1
function	called just before running ||| before running rdoc	count=1
arg	selector ||| selector	count=1
arg	a child an element ||| element	count=1
module	to a set of ||| gemdependencyapi	count=1
function	returns true [function_2] ||| stat [returnv_1] [function_2]	count=1
module	to grab the ||| thread	count=1
arg	for connections at uri ||| uri	count=1
arg	to address port ||| address port	count=2
function	the version of the ||| version	count=1
function	ends ||| end	count=2
arg	with io ||| io level	count=1
module	start emitting a yaml ||| psych emitter	count=1
function	of a class ||| class	count=1
arg	false then [arg] must contain ||| is_ret [arg]	count=1
arg	[arg_1] string salt ||| [arg_2] [arg_1]	count=2
function	as a string ||| to path	count=1
module	dependencies and return an ||| requestset	count=1
function	program name to ||| program name	count=4
function	potential ||| hyperlink	count=1
module	constructs an installer ||| installer	count=1
function_arg	filter [arg_2] ||| [function_1] [arg_2]	count=2
function	result of ||| result	count=1
arg	the context of this ||| context statements file line	count=1
function	the spec [function_2] ||| [function_1] [function_2]	count=1
function	with on ||| dir config	count=1
module	key unless ||| dh	count=1
arg	@param string name ||| name	count=1
function	request is for ||| ?	count=1
module	removes the tempdir ||| gem testcase	count=1
function	the first ||| text=	count=1
function	[function] this ||| [function]	count=1
module	an openssl ||| security	count=1
function	with ||| dir config	count=1
arg	for file_name ||| file_name	count=1
function	specific extra [function_2] ||| [function_2] [function_1]	count=4
arg	with name [arg_2] ||| [arg_1] [arg_2]	count=6
arg	value [arg_2] ||| [arg_1] [arg_2]	count=2
function	the root node ||| root node	count=2
function	[returnv_1] [function_2] returned as a ||| [returnv_1] [function_2]	count=1
arg	command exists ||| command	count=1
module	a properly-space list ||| rdoc options	count=1
arg	given representation of date ||| string comp	count=2
function	a paragraph that ||| paragraph	count=1
function	satisfied by the ||| satisfied by	count=1
arg	given [arg] ||| [arg] opts	count=1
function	dependency and ||| dependency	count=1
function	iterates ||| each	count=5
module	visibility for subsequently defined ||| module	count=1
module	lib paths to ||| gem	count=1
function	the documented modules sorted ||| get sorted	count=1
function	number of nanoseconds for ||| tv nsec	count=1
arg	the threads ||| threads	count=1
function	proxied ||| proxy	count=1
function	the [function] this ||| [function]	count=1
arg	dependency from requester ||| dependency requester	count=2
function	a symlink? ||| symlink	count=1
arg	obj as ||| obj	count=1
arg	in context with comment ||| container single tk comment	count=1
function	to true if whitespace ||| whitespace	count=1
function	[function_1] or no ||| [function_2] [function_1]	count=1
module	to use across ||| array	count=1
arg	command [arg] ||| [arg]	count=1
function	[function_1] library ||| [function_1] [function_2]	count=4
module	for gathering tt sections ||| tottonly	count=1
module	method sends a ||| net smtp	count=1
function	can then use to ||| config	count=1
function	whatever mode the ||| put	count=1
module	following certificate and is ||| security	count=1
function	pass ||| setup	count=1
module	[module] from ||| rdoc [module]	count=1
function	object uses smtp/tls smtps ||| tls	count=1
arg	of the indicated ||| attr	count=1
function	[function_1] internal string ||| [function_2] [function_1]	count=4
arg	fixnum returns a substring ||| fixnum	count=1
function	[function] containing teletype ||| test accept [function]	count=1
function	a time object ||| to time	count=1
module	an rdoc ||| rdoc servlet	count=1
function	pages to the ||| pages	count=1
module	pass output through ||| ri	count=1
module	current severity level ||| logger	count=1
function	of extra [function_2] ||| [function_2] [function_1]	count=1
returnv	and ||| string	count=1
function	options with on the ||| config	count=1
module	[module] old_name ||| [module]	count=3
module	object that represents the ||| stringio	count=1
module	n diagonal [module] where ||| [module]	count=1
function	address obtained by ||| address	count=1
function	the classes ||| classes	count=1
arg	hash to a marshalled ||| hash	count=1
arg	the path and ||| path data	count=1
module	the header at the ||| webrick httputils formdata	count=1
arg	given command [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] object ref ||| [arg_2] [function_1]	count=1
function	was defined ||| record location	count=1
module	terminate ||| shell processcontroller	count=1
function_arg	class [arg_2] ||| [function_1] [arg_2]	count=6
function	the multi-call handler system ||| multicall	count=1
arg	given path returning ||| path mode	count=1
function	calls verify ||| verify signatures	count=1
arg	anchor a [arg_2] ||| [arg_2] [arg_1]	count=2
module	for rdoc inline formatting ||| rdoc	count=1
function	line by using that ||| config	count=1
module	gem :uninstaller#uninstall is ||| gem	count=2
function	with the concatenated results ||| collect concat	count=1
module	a process ||| process	count=2
module	gem names ||| gem	count=1
arg	document-class class_name or module ||| class_name class_mod	count=1
module	an ||| tomdoc	count=2
arg	[arg_1] salt ||| [arg_2] [arg_1]	count=2
arg	one-shot multicast dns ||| config_info	count=1
arg	with needed ||| needed set	count=1
arg	compares to uri’s ||| oth	count=1
function	to ||| set to	count=1
function	siginfo [function_2] ||| [function_1] [function_2]	count=4
module	the stream ||| buffering	count=3
function_arg	[function_1] parts and ||| [function_1] [arg_2]	count=1
returnv	supplied will ||| instance	count=1
function	inverse hyperbolic sine ||| asinh	count=1
arg	message to the ||| message flags	count=1
module	[module] is activated ||| [module]	count=1
function	getacl ||| getacl	count=1
function_arg	[function_1] value ||| [arg_2] [function_1]	count=4
module	the number of bytes ||| sslsocket	count=1
function	site ||| site	count=1
function	template dir ||| dir	count=1
module	unless ||| testcase	count=1
function	visitor for ||| list item start	count=4
function	the same ||| eql	count=3
arg	extension are ||| extension	count=1
function	to the ||| require	count=1
module	stream which ||| openssl buffering	count=2
function_arg	[function_1] obj ||| [function_1] [arg_2]	count=8
arg	then flushes text ||| text	count=1
module	releases ||| thread mutex	count=1
function	[function] arbitrary ||| each [function]	count=2
function	an openssl ||| to	count=1
function	[function_1] text child ||| [function_1] [function_2]	count=1
function	null [function] ||| [function]	count=2
function	explicitly requested by the ||| explicit	count=1
module	sets up a ||| ri driver	count=1
function	[function_1] info ||| [function_1] [function_2]	count=3
module	of [module] to the ||| [module]	count=1
function_arg	default [arg_2] ||| [arg_2] [function_1]	count=1
function	for html generation ||| accepting	count=1
module	use to configure ||| makemakefile	count=1
arg	[arg_1] and end ||| [arg_1] [arg_2]	count=4
function	comparison and ||| <=>	count=1
function	local variable names defined ||| local variables	count=1
function	this a windows platform? ||| win platform	count=1
function	names of global variables ||| global variables	count=1
arg	or a [arg_2] ||| dir matches glob [arg_2] [arg_1]	count=1
module	object represent a module? ||| rdoc classmodule	count=1
arg	set built [arg] duplicating the ||| [arg]	count=1
arg	for item on res ||| res item	count=1
arg	has [arg] as ||| [arg] stime cutime cstime	count=1
module	generator ||| rdoc generator	count=1
arg	headers ||| headers opt	count=3
module	tuplespace to ||| rinda	count=1
function	[function_1] command for ||| [function_2] [function_1]	count=2
function	extracts the files in ||| extract files	count=1
module	for rdoc inline ||| rdoc	count=1
function	the generated ||| gen sub	count=1
arg	module given ||| module	count=1
returnv	be negative or fractional ||| numeric_result	count=1
module	whether this input method ||| irb inputmethod	count=1
function	[function_1] variable ||| [function_2] [function_1]	count=8
function	[function_1] files ||| [function_2] [function_1]	count=3
returnv	key to the hash ||| hash	count=3
function	the ||| dir config	count=2
function_arg	power [arg_2] ||| [function_1] [arg_2]	count=3
module	element ||| rexml element	count=1
function	true [function_2] ||| [returnv_1] quirks mode [function_2]	count=1
module	rdoc ||| rdoc	count=61
function	root ||| root	count=3
module	:http#open_timeout ||| xmlrpc	count=1
arg	mod [arg_2] ||| [arg_1] class_type [arg_2]	count=3
function	returns the path ||| path	count=2
function	the specific extra args ||| specific extra args	count=1
function	resumed or transferred to ||| alive	count=1
module	block ||| localjumperror	count=1
module	when ||| syslog logger	count=1
function	to pass ||| setup	count=1
module	bignum with ||| bignum	count=1
module	range using the ||| range	count=1
function_arg	[function_1] data to ||| [function_1] [arg_2]	count=1
module	header names and array ||| net httpheader	count=1
function	a mkcol ||| mkcol	count=1
module	apiset ||| apiset	count=1
arg	store ||| store generator	count=1
module	integer where the n’th ||| elements	count=1
returnv	returns true if class ||| bool	count=2
returnv	block was terminated :break ||| symbol	count=1
arg	and ios [arg] or csv ||| [arg]	count=1
module	openssl :x509 :name ||| gem	count=1
arg	locale ||| locale	count=1
function_arg	file at [arg_2] ||| [function_1] [arg_2]	count=1
arg	question ||| question default	count=1
module	ensures that :sslcertificate and ||| sslconfig	count=1
function	matching ||| find	count=5
module	the command ||| makemakefile	count=1
function	provided ||| setup	count=2
arg	src and ||| src	count=2
module	the other parameters provided ||| drb drbsslsocket sslconfig	count=1
function	the header ||| header	count=1
function	the methods in ||| methods	count=1
function	the rest ||| partition	count=1
function	returns true if ||| bool autoclose ?	count=1
function	returns the list ||| list	count=1
function	checks ||| check	count=2
function	for each ||| each	count=5
function	[function] containing ||| [function]	count=1
function	[function_1] pem encoded ||| [function_1] [function_2]	count=1
function	type string such as ||| type	count=1
function	file at ||| file	count=1
arg	this element ||| element	count=1
function_arg	sends mesg ||| send mesg	count=1
module	ri data ||| rdoc ri	count=2
function	a pager program to ||| setup pager	count=1
function	create ||| gen sub	count=1
returnv	negative or fractional ||| numeric_result	count=1
function	is this a ||| platform ?	count=2
function	finishes consumption of ||| list item end	count=3
module	that :sslcertificate and :sslprivatekey ||| drb drbsslsocket sslconfig	count=1
module	creates a ||| gem	count=1
arg	referenced [arg] lies outside ||| [arg]	count=1
module	have been provided ||| drb drbsslsocket sslconfig	count=1
module	the visitor for html ||| tohtml	count=1
arg	str attempts ||| str	count=1
module	corresponding to [module] ||| [module]	count=2
function	[returnv_1] last ||| [function_2] [returnv_1]	count=1
function	finishes consumption of ||| accept list item end	count=3
module	sets ||| ri driver	count=2
function	the generated docs ||| gen sub	count=1
module	list for this process ||| process	count=1
arg	optional superclass this ||| superclass	count=1
function	class/module ||| module exec	count=1
function	[returnv_1] [function_2] ||| [returnv_1] ended [function_2]	count=1
arg	req ||| req	count=12
function	from the cross-references in ||| special crossref	count=1
function	finishes ||| finish	count=1
module	object’s ||| rdoc generator markup	count=1
function	get all gem names ||| get all gem names	count=1
function	[returnv_1] if the ||| [returnv_1] setgid [function_2]	count=1
function	for words wrapped in ||| word pair	count=1
function	[function] hash ||| [function]	count=1
function_arg	is tag a ||| ? tag	count=1
module	status class ||| webrick httpstatus	count=1
function	returns a ten-element ||| to a	count=1
arg	either a [arg] ||| [arg]	count=3
arg	given str ||| str enc	count=1
module	default options request ||| webrick	count=1
arg	ole ||| arg1	count=1
module	its original ||| testcase	count=1
function	it and escapes ||| escape	count=1
returnv	block was ||| symbol	count=1
module	the first instance ||| syslog logger	count=1
arg	map ||| map	count=1
function	[function_1] siginfo handler ||| [function_2] [function_1]	count=1
function	to an [function_2] ||| [function_2] [returnv_1]	count=2
function	message at the warn ||| warn	count=1
arg	method identified by ||| args...	count=2
function	for directives in a ||| for directives in	count=1
function	options with on ||| config	count=1
module	the dependencylist that matches ||| dependencylist	count=1
function	older version of ruby ||| in old ruby	count=1
function	is a [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] paragraph ||| [function_2] [function_1]	count=2
function	proxy for this connection ||| proxy	count=1
function	[function_1] class or ||| [function_2] [function_1]	count=2
module	thr ||| thread	count=2
function_arg	comment for [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] on ||| [function_1] [function_2]	count=5
arg	out with ||| out	count=1
function	gathers a ||| gather	count=1
module	cert signature is made ||| x509	count=1
arg	directory root [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] key false ||| [function_1] ? [arg_2]	count=1
function	superset of the ||| superset	count=1
module	used by hash ||| ipaddr	count=1
arg	a string according to ||| string 1 jan -4712 00:00:00 +0000'	count=2
function	[function_1] auth login ||| [function_1] [function_2]	count=1
module	file types this ||| rdoc	count=1
returnv	the value of ||| value	count=1
function	the next [function_2] ||| [function_1] [function_2]	count=4
module	object ||| delegator	count=1
module	specification contains all ||| gem specification	count=1
module	new pointer ||| fiddle pointer	count=2
function	object for [function] obtained ||| [function]	count=1
function	to add a ||| add	count=1
module	digest using a ||| digest	count=1
function	if the instance ||| instance	count=1
arg	given str ||| str enc separator: '&' use__charset_: false isindex:	count=1
function	json string by ||| json	count=7
function	the type of ||| type	count=3
function	chain for ||| chain	count=1
returnv	of the ||| array	count=2
module	returns a [module] ||| [module]	count=3
module	instance ||| pkey	count=1
function_arg	scope val ||| set scope val	count=1
module	look for directives in ||| rdoc markup preprocess	count=1
arg	[arg_1] passing args ||| [arg_1] [arg_2]	count=3
module	given index @param index ||| parent	count=1
module	been provided or ||| drbsslsocket	count=1
function	of threads waiting on ||| num waiting	count=2
function	options with on ||| dir	count=1
function_arg	[function_1] string as ||| [function_1] [arg_2]	count=1
function	a delete ||| delete	count=2
module	[module] or character ||| [module]	count=2
function_arg	is code ||| ? code	count=4
arg	handler p which ||| p	count=1
function	:pointer instance that ||| ref	count=1
module	will ||| rexml	count=1
module	remove ||| testcase	count=1
module	returns the oldest ||| resolver requirementlist	count=1
arg	mod’s constants ||| mod	count=1
function	creates [function] gdbm ||| [function]	count=1
function	rnfr ||| renamable	count=1
module	the password component ||| uri generic	count=1
function	this ||| child	count=1
module	druby ||| drb drbserver	count=2
module	writes ||| openssl buffering	count=1
function	resumed or transferred ||| alive	count=1
function	object ||| ole	count=1
module	the generated json ||| json ext generator	count=1
function	[returnv_1] given ordinal ||| [function_2] [returnv_1]	count=1
function	serious security hole ||| debug output	count=1
arg	read from src ||| src	count=1
function	skip the var in ||| skip for variable	count=1
function	directories the generated ||| gen sub directories	count=1
module	for the spec’s ||| installer	count=1
function	specs ||| specs	count=1
module	the generated ||| rdoc generator darkfish	count=1
function	dn ||| dn=	count=1
function	text of ||| text	count=2
module	turned off ||| rdoc codeobject	count=1
arg	copy(), but set ||| set mailbox	count=1
arg	matches ||| flags	count=2
function_arg	[function_1] given object ||| [arg_2] [function_1]	count=2
module	in ||| gem specification	count=1
arg	[arg] an ||| compiler [arg]	count=3
function	invoke the ||| invoke	count=2
function	best ||| by	count=3
function	[returnv_1] if ||| [returnv_1] sunday [function_2]	count=1
function	[function_1] auth plain ||| [function_2] [function_1]	count=1
function	matching ||| find in	count=1
returnv	was terminated :break ||| symbol	count=1
module	the comment are used ||| comment	count=2
module	of ||| stats	count=1
function	sends a patch ||| patch	count=1
module	from this file ||| gzipreader	count=1
arg	running on front ||| front desc	count=1
module	…> ||| rexml sax2listener	count=1
module	entity object ||| rexml entity	count=1
arg	cn [arg_2] ||| [arg_1] [arg_2]	count=2
module	documentation has been turned ||| rdoc codeobject	count=1
function	default irb commands irb ||| commands	count=1
arg	to the output) ||| output indent	count=1
module	valid versions with openssl ||| openssl	count=1
function	of the credentials file ||| credentials	count=1
function	a true [function_2] ||| [function_2] [returnv_1]	count=1
module	as [module] ||| [module] streamui	count=6
function	[function_1] class ||| proxy [function_2] [function_1]	count=1
arg	remote_port ||| remote_port	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] index	count=4
function	modification ||| mtime	count=2
function	the class with ||| class named	count=1
module	to the listitem ||| listitem	count=1
function	similar to read ||| read nonblock	count=1
module	class class << ||| rdoc singleclass	count=1
function	attributes [function_2] ||| [function_1] [function_2]	count=1
arg	options parameter ||| options	count=1
module	attrspan ||| markup attrspan	count=1
function	setter for ||| setter	count=1
function	serialised json string ||| json creatable	count=2
module	to ||| gem requestset	count=1
function	returns true if ||| ?	count=1
arg	meta-programmed attribute and ||| context single tk comment	count=1
module	gzipwriter object ||| zlib gzipwriter	count=3
function	issuer certificate ||| issuer	count=1
function	siginfo handler that prints ||| siginfo handler	count=1
function	the result ||| verify result	count=1
arg	file as usual ||| mode: 0 options	count=1
module	–platform option to the ||| gem versionoption	count=1
function	of this object ||| new	count=1
module	match this platform? ||| platform	count=1
module	[module] :inspector ||| [module]	count=3
module	constructor @param parent ||| rexml parent	count=1
function	form contained multipart/form-data ||| multipart ?	count=1
returnv	return [returnv] ||| [returnv]	count=6
arg	the parameters year ||| year	count=1
function	this a ||| platform	count=1
function	a [function] command to ||| [function]	count=1
function	connection will be proxied ||| proxy	count=1
module	the cgi ||| webrick cgi	count=1
module	is initialized ||| syslog logger	count=1
module	a module? ||| rdoc classmodule	count=1
module	:next ||| localjumperror	count=1
function	pager? ||| paging	count=1
function	executables ||| executables	count=1
module	to its ||| testcase	count=1
module	retrieves a password from ||| httpauth htpasswd	count=1
arg	and connects to ||| helo user secret authtype	count=1
arg	to this element ||| element	count=1
function	address of ipv4 ||| ipv4	count=1
arg	:row from [arg] are expected ||| [arg]	count=1
function	with the value ||| import value	count=1
function_arg	and assigns [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] info directory ||| [function_1] [function_2]	count=3
module	win32ole ||| win32ole	count=3
arg	[arg_1] given text ||| [arg_2] [arg_1]	count=1
function	of a module ||| add module	count=1
module	tuplebag returning the deleted ||| tuplebag	count=1
arg	the optional block in ||| &block;	count=2
module	:sslcertificate and :sslprivatekey ||| drb	count=1
module	conflict with ||| resolver conflict	count=1
module	connection is established ||| openssl ssl sslsocket	count=1
function_arg	[function_1] classes also_in ||| [arg_2] [function_1]	count=2
module	up a ||| ri	count=1
function	returns a proxy uri ||| get proxy from	count=1
arg	set [arg] the ||| [arg]	count=1
module	removes the tempdir unless ||| gem	count=1
module	table of contents ||| totableofcontents	count=1
function	if nan infinity ||| nan ?	count=1
function	get a [function_2] ||| [function_2] [function_1]	count=9
function	for which ||| reject	count=1
arg	string salt - ||| salt	count=2
module	truncated value toward ||| rational	count=1
function	[function_1] writable by ||| fixnum world [function_2] [function_1]	count=1
module	create ||| rdoc	count=1
module	ios ||| io	count=17
function	checks [function_2] ||| [function_1] [function_2]	count=1
arg	index to access ||| index	count=1
function	a field [function_2] ||| [function_2] [function_1]	count=1
function	[returnv_1] if ||| [returnv_1] dst [function_2]	count=1
function	the user can then ||| dir	count=1
module	fiddle ||| fiddle	count=10
arg	template and [arg_2] ||| [arg_2] [arg_1]	count=2
module	the visitor for ||| rdoc markup tottonly	count=1
function_arg	if the [arg_2] ||| [function_1] [arg_2]	count=28
module	object’s comment ||| rdoc	count=1
module	:http object ||| http	count=2
function	[returnv_1] if ||| [returnv_1] key [function_2]	count=3
arg	named by symbol ||| symbol	count=1
module	attempts to grab ||| thread mutex	count=1
function	if ios is ||| ?	count=1
function	returns ||| to ?	count=1
arg	file_name content [arg_2] ||| [arg_1] [arg_2]	count=5
module	dump ruby ||| psych	count=1
function_arg	[function_1] given sockets ||| [arg_2] [function_1]	count=3
module	feed or ||| feed	count=1
function	first ip address ||| getaddress	count=1
function	a dereferenced ||| ptr	count=1
function	the accept character set ||| accept	count=1
module	get ||| parser ruby	count=1
module	output ||| rdoc markup	count=2
arg	original [arg] also ||| digest signature [arg]	count=1
rep	[module_1] given header ||| [module_1] [function_arg_2]	count=2
module	isn’t available ||| mutex	count=1
function	irb commands irb :context#main ||| commands	count=1
function	search record used by ||| search record	count=2
function_arg	request to [arg_2] ||| [function_1] head [arg_2]	count=1
module	existing file ||| file	count=1
function	from the cross-references ||| handle special crossref	count=1
module	tar file ||| package tarreader	count=2
function	return the appropriate [function_1] [function_2] in posix-defined format ||| [function_1] [function_2]	count=1
function	files of the ||| files	count=1
function	type string such ||| type	count=1
function	if the ||| for spec ?	count=1
arg	tags ||| start stop	count=1
arg	time and other_time ||| other_time	count=1
function	permissions of the ||| permissions	count=1
function	saved user id functionality ||| sid available	count=1
arg	an optional freefunc ||| freefunc	count=1
module	a level 5 rdoc ||| rdoc	count=1
module	of the [module] starting ||| [module]	count=1
function	an [function_2] ||| [returnv_1] [function_2]	count=2
function	extra args [function_2] ||| [function_2] [function_1]	count=3
arg	current_set ||| current_set	count=1
function	of the form “nnnnnn ||| digits	count=1
function	major ||| major	count=2
module	parent if ||| parent	count=1
arg	base_method ||| base_method	count=1
module	proppatch ||| net http	count=1
function	documentation has ||| start	count=1
arg	server using ||| server	count=1
module	given fiddle ||| fiddle	count=1
module	digest algorithm ||| openssl digest	count=1
module	prepares ||| rdoc markup tottonly	count=2
function	display a warning ||| warning	count=1
function	typical rfc 2822 formats ||| rfc2822	count=1
module	:sslcertificate and :sslprivatekey have ||| drb	count=1
arg	the named file see ||| file_name	count=1
module	don’t already ||| generator	count=1
function	[function_1] super class ||| [function_1] [function_2]	count=2
function	[function_1] entry ||| [function_2] [function_1]	count=2
arg	to host port ||| host port	count=3
function	sets $? to a ||| waitpid	count=1
function	is empty ||| pop	count=2
function	deletes [function_2] ||| [function_1] [function_2]	count=3
function	returns the angle ||| angle	count=1
function	at the object level [returnv_1] [function_2] ||| [returnv_1] equal [function_2]	count=2
function	[function] of a ||| [function]	count=2
module	if ||| shell commandprocessor	count=1
module	[module] to the ||| gem [module]	count=4
function	line number where ||| line	count=1
function	t_data type ||| count tdata	count=1
function	single gem [function_2] ||| [function_2] [function_1]	count=3
function	checks the [function_2] ||| [function_1] [function_2]	count=1
module	generated docs ||| generator darkfish	count=1
arg	the message to ||| message flags	count=1
function	[function] for the ||| install update [function]	count=1
module	resolver to allow ||| gem resolver	count=1
function	grab the lock ||| lock	count=1
function	paragraph that is flush ||| paragraph	count=1
module	singular writer for ||| gem	count=1
module	address ||| addrinfo	count=4
function	[function_1] args hash ||| [function_2] [function_1]	count=5
module	:ldap object ||| ldap	count=1
arg	given exit_code ||| exit_code	count=2
module	directory passing the filename ||| dir	count=1
module	immediately available for ||| ssl	count=1
module	are immediately available for ||| ssl	count=1
function_arg	[function_1] instance when ||| pre [function_1] [arg_2]	count=4
function	for html ||| start	count=1
function	path [function_2] ||| [function_2] [function_1]	count=2
function	depending upon the settings ||| document	count=1
function	if the ||| file ?	count=1
module	first digit ||| net smtp response	count=1
arg	front with a ||| front	count=1
function	if [function_2] ||| [function_2] cram md5 auth [function_1]	count=1
arg	by id and data ||| id data	count=1
returnv	if ||| bool	count=1
module	bigdecimal :round_* see ||| bigdecimal	count=1
module	maximum ||| generator state	count=1
function	transparent ||| transparency	count=1
returnv	form ||| float	count=1
function	scans content ||| do define class	count=1
arg	using options ||| options	count=1
module	types ||| array	count=1
module	the output ||| markup tottonly	count=1
function	the parameters [function_2] ||| [function_1] [function_2]	count=3
function	post and [function] requests are ||| do [function]	count=1
arg	decimal to the ||| decimal	count=3
module	which should [module] ||| [module]	count=1
arg	max ||| max	count=1
function	has a private key ||| private	count=1
function_arg	[function_1] [arg_2] ||| [function_1] bits [arg_2]	count=3
function	[function_1] close on ||| [function_1] [function_2]	count=1
function	a self-signed certificate ||| create cert self signed	count=1
function	before the [function_2] ||| [function_2] [function_1]	count=1
function	evaluates the ruby ||| eval	count=1
module	a command ||| command	count=1
function_arg	[function_1] with ||| [function_1] dir [arg_2]	count=3
function_arg	an alias [arg_2] ||| [arg_2] [function_1]	count=1
arg	permissions ||| permissions passphrase cipher	count=1
function	associated ||| fetch	count=1
module	time used ||| benchmark	count=1
module	make ||| gem testcase	count=1
returnv	returns true if the ||| bool	count=9
arg	— returns ||| ary	count=1
module	server defined in xmlrpc ||| xmlrpc	count=1
module	the visitor ||| rdoc	count=7
function	namespace of the ||| prefix	count=1
function	if stat exited normally ||| exited ?	count=1
module	of bytes that are ||| openssl ssl	count=1
module	tts from ||| rdoc markup	count=1
function	hash self ||| hash	count=1
function	[returnv_1] [function_2] ||| [returnv_1] block [function_2]	count=2
module	disk ||| generator jsonindex	count=1
arg	as [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
arg	for ||| context	count=1
function	[function_1] siginfo ||| [function_1] [function_2]	count=1
function	adds the given ||| add	count=1
arg	pid is ||| pid	count=1
module	index of ifaddr ||| socket ifaddr	count=1
function	list of the local ||| local	count=1
function	destination encoding name ||| destination encoding name	count=3
module	using a ||| instance	count=1
function	pipeline with ||| pipeline	count=1
function	still readable when ||| readable after	count=4
function	stream ||| stream end	count=1
arg	bits the issuer ||| bits	count=1
module	defined methods ||| module	count=1
function	[function_1] version of ||| bool [function_1] [function_2] ?	count=4
function_arg	:markup :paragraph [arg_2] ||| [arg_2] [function_1]	count=3
module	file object not tempfile ||| tempfile	count=1
function	attempts to ||| try	count=1
function	is an rdoc-schemed ||| handle special rdoclink	count=1
function	have no parts? ||| empty	count=1
arg	ole [arg_2] ||| [arg_2] [arg_1]	count=2
function	modules sorted by salience ||| sorted	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=1046
module	returns a [module] instead of ||| [module]	count=1
module	the smtp ||| smtp	count=1
module	for the feed ||| feed	count=1
module	and ||| installerset	count=1
arg	with indent spaces ||| indent	count=1
arg	value or passes to ||| value	count=1
module	dependencies files in the ||| requestset	count=1
module	on ||| servlet	count=1
module	reads ||| openssl buffering	count=1
arg	array ||| array	count=4
module	dependency graph ||| resolver molinillo	count=1
function	variable names for ||| variables	count=1
arg	string returning ||| string	count=1
module	date ||| date	count=9
arg	str attempts to ||| str	count=1
arg	new_name for the ||| new_name	count=1
function	[function_1] dependency ||| [function_1] [function_2]	count=3
module	this parser is ||| json ext parser	count=1
function	[function_1] [function_2] numerator value n denominator ||| [function_2] [function_1]	count=1
module	is already a float ||| float	count=1
function	[function_1] json string ||| [function_2] [function_1]	count=15
arg	block waiting for tag ||| tag obj	count=1
arg	that uses [arg] ||| [arg]	count=3
module	rdoc :markup :documents with ||| rdoc classmodule	count=1
function	the template dir ||| dir	count=1
module	json to the ||| json ext	count=1
arg	whether or not the ||| opt &b;	count=3
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] activated	count=6
returnv	available for ||| integer	count=1
module	constant ||| rdoc constant	count=3
function_arg	adds [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	classes and ||| classes	count=1
arg	to the path and ||| path data	count=1
function	the latest [function_2] ||| bool [function_1] [function_2] ?	count=4
function	server advertises [function_2] ||| [function_1] [function_2]	count=3
module	stat in ||| file stat	count=1
function	specified [function] ||| extend [function]	count=1
function	the result of ||| verify result	count=1
module	queue ||| queue	count=5
function	class or ||| classes or	count=1
arg	contents of the ||| gem_data	count=1
function_arg	[function_1] key ||| [function_1] ? [arg_2]	count=1
arg	[arg_1] out with ||| [arg_2] [arg_1]	count=4
function	doesn t create ||| popen2	count=1
function	header [function_2] ||| [function_2] [function_1]	count=2
function	use this to ignore ||| ignore	count=1
function	named private [function_2] ||| [function_1] [function_2]	count=1
function	class methods [function_2] ||| [function_2] [function_1]	count=2
arg	to the specified host ||| host options	count=1
arg	[arg_1] options ||| [arg_2] [arg_1]	count=13
arg	and connects to the ||| address port helo user secret authtype	count=1
function	to exit or ||| exit	count=1
module	case which needs to ||| rdoc markup formattertestcase	count=1
module	or rdoc ||| rdoc parser	count=1
module	prepares the visitor ||| rdoc	count=7
module	specification contains all required ||| specification	count=1
function	line number of ||| lineno	count=2
arg	with the given permissions ||| permissions passphrase	count=1
function	the command line ||| config	count=1
returnv	returns the ||| string	count=17
function_arg	returns the value in [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
module	this float number ||| float	count=1
function	http version [function] show in ||| [function]	count=1
arg	instance digest ||| digest	count=1
rep	[module_1] [function_arg_2] ||| [module_1] markdown [function_arg_2]	count=4
function	prints a [function_2] ||| [function_2] [function_1]	count=1
function_arg	deserializes [function_1] [arg_2] v serialized by to_json ||| [function_1] create [arg_2]	count=2
module	are more events ||| rexml parsers baseparser	count=1
arg	[arg_1] if pattern ||| [arg_1] [arg_2]	count=1
arg	the non-blocking manner ||| exception: true	count=1
function	returns true [function_2] ||| [returnv_1] [function_2]	count=111
module	returns a ||| rdoc	count=1
function	create a record for ||| record	count=1
module	status object represents ||| status	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] ? symbol	count=45
function	includes that ||| includes	count=1
function	lock ||| lock	count=2
module	a set of ||| requestset gemdependencyapi	count=1
arg	by ||| container	count=1
module	elapsed real time ||| benchmark	count=1
arg	data [arg] ||| [arg]	count=1
function	to copy ||| copy	count=1
function	[function_1] relative ||| [function_2] [function_1]	count=3
function_arg	the gem with ||| gem dir name	count=1
function	[function_1] empty string ||| [function_2] [function_1]	count=1
function	[function_1] no ||| [function_2] [function_1]	count=1
arg	string describing the ||| cert ca key_pbe cert_pbe key_iter mac_iter keytype	count=1
module	keys ||| irb inspector	count=1
function	we using a pager? ||| paging ?	count=1
module	displayed [module] the background ||| [module]	count=1
function	[function_1] single ||| [function_2] [function_1]	count=1
module	capitalized [module] ||| [module]	count=3
arg	for rdoc [arg_2] ||| [arg_2] [arg_1]	count=1
function	begins with the characters ||| begins	count=1
function_arg	module [arg_2] ||| [function_1] [arg_2] self_hash	count=4
function	prepares the visitor ||| accept list item start	count=4
function	[function] a matrix ||| zero [function]	count=1
module	the other [module] ||| [module]	count=1
arg	[arg_1] and stats ||| [arg_1] [arg_2]	count=4
function	:installer ||| install	count=1
function	reply 2xx ||| success ?	count=1
module	by ri ||| generator ri	count=1
function	spec? note this ||| matches spec	count=1
function_arg	[function_1] parser ||| [function_1] [arg_2]	count=2
module	an attribute the ||| rexml	count=1
function_arg	[function_1] filename ||| [function_1] [arg_2]	count=2
function	returns true [function_2] ||| [returnv_1] leap [function_2]	count=4
module	are immediately available ||| openssl ssl	count=1
returnv	waits if ||| self	count=1
module	file permissions ||| pathname	count=1
function	[function_1] gem version ||| [function_1] [function_2]	count=2
arg	size items ||| size	count=1
module	gem specifications ||| gem	count=1
function_arg	[function_1] [arg_2] ||| [function_1] in unresolved [arg_2]	count=3
module	class can be used ||| class	count=1
module	ssl context to ||| ssl sslcontext	count=1
arg	src and return ||| src	count=1
function	resets the digest ||| digest	count=1
function_arg	[function_1] symbol ||| [arg_2] [function_1]	count=4
module	message digest can ||| openssl digest	count=1
function	builds a [function_2] ||| [function_1] [function_2]	count=8
arg	ruby ||| ruby options	count=1
arg	data for method_name in ||| method_name	count=2
module	exist ||| rdoc generator	count=1
module	password from the ||| httpauth htpasswd	count=1
function	settings ||| document	count=1
function_arg	a proppatch [arg_2] ||| [arg_2] [function_1]	count=1
function	values ||| values	count=1
module	the number ||| ssl sslsocket	count=1
function	[function_1] port ||| [function_2] [function_1]	count=6
arg	comment ||| comment singleton	count=1
function	is satisfied by the ||| requirement satisfied by ?	count=1
module	for ||| specification	count=1
function	accept_list_item_start_ualpha ||| list item start ualpha	count=1
function	[function_1] version ||| bool [function_1] [function_2] ?	count=4
arg	hash self_hash [arg] either toplevel ||| mod self_hash [arg]	count=1
arg	from an array ||| array copy	count=1
module	singleton ||| rdoc singleclass	count=1
function	array of ||| a	count=1
function_arg	special handler [arg_2] ||| [function_1] [arg_2]	count=2
function	return the index ||| index	count=1
function	time object ||| time	count=1
function	individual raw profile ||| raw	count=1
module	the attribute ||| attribute	count=1
function	proppatch request ||| proppatch	count=1
arg	the [arg] ||| [arg] gem_deps_file	count=1
module	source for ||| rexml source	count=1
function	loads the ||| load	count=6
function_arg	define new [function_1] [arg_2] ||| tkresourcedb new [function_1] [arg_2]	count=3
function_arg	finds unique [arg_2] ||| [function_1] [arg_2]	count=1
arg	on string which is ||| string data	count=1
function	set the ||| set visibility	count=1
function	to its der encoding ||| der	count=2
function	if the given string ||| key ?	count=1
arg	and key ||| key age	count=1
module	openssl ||| gem security	count=2
module	state and removes ||| testcase	count=1
rep	big [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	an ||| gem	count=1
arg	write to out_stream ||| out_stream	count=1
arg	the private key to ||| key	count=1
returnv	returns ||| integer	count=25
function	immediately following the end ||| end	count=1
module	yields an instance ||| xmlrpc xmlparser	count=1
function	[returnv_1] [function_2] the pool still running ||| threadswait [returnv_1] [function_2]	count=1
module	accessor for ||| gem	count=2
module	that the specification contains ||| specification	count=1
module	for directives ||| rdoc markup preprocess	count=1
module	up ||| generator markup	count=1
function	return a list ||| module list	count=1
function	yield would execute a ||| iterator	count=1
function	before the ‘:’ in ||| before	count=1
module	the permutation matrix ||| matrix lupdecomposition	count=1
function	[function] a ||| utc [function]	count=1
function	[function_1] files on ||| [function_1] [function_2]	count=1
function	root [function_2] ||| [function_2] [function_1]	count=4
arg	named ||| file_name	count=24
function	included in ||| include	count=1
rep	includes an [function_arg_2] ||| [module_1] streamlistener [function_arg_2]	count=2
module	openssl :digest must be ||| openssl pkey	count=1
module	wrap ||| importer	count=2
function_arg	initializes this object [function_1] [arg_2] duplicated/cloned and returns it ||| [function_1] [arg_2]	count=1
arg	the given input_method as ||| input_method	count=1
module	attribute of [module] element yielding ||| [module]	count=1
module	for ||| tomarkdown	count=1
module	a druby reference ||| drb drbserver	count=1
module	local ||| drbobject	count=1
returnv	pid ||| pid	count=1
module	bytes that ||| openssl	count=1
function	the next object ||| next values	count=1
module	want [module] ||| [module]	count=1
function	finds a spec ||| find spec	count=1
function	‘::’ for ||| name prefix	count=1
module	version ||| gem	count=1
function_arg	[function_1] str ||| [arg_2] [function_1]	count=2
module	compiled [module] ||| rubyvm [module]	count=3
function	returns [function] ||| [function]	count=1
returnv	the block [returnv] containing the ||| [returnv]	count=1
module	optionally under a provided ||| rexml light node	count=1
function	of class [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] raises exception ||| [arg_2] [arg_1]	count=3
module	dsa ||| pkey dsa	count=2
module	this hash instance ||| generator generatormethods hash	count=1
module	have ||| drb drbsslsocket sslconfig	count=2
function	adds the [function_2] ||| [function_1] [function_2]	count=9
module	that specification ||| gem specification	count=1
function	defines a named ||| attr accessor	count=1
function	whitespace is respected ||| whitespace	count=1
module	bold level 1 rdoc ||| rdoc markup	count=1
arg	of [arg_2] ||| [arg_2] [arg_1]	count=1
function	info [function_2] ||| [function_1] [function_2]	count=1
function	the stream ||| stream end	count=1
module	the internal [module] subset ||| [module]	count=1
arg	named file ||| cmd file	count=1
module	pop3 session ||| net pop3	count=2
module	corresponding ||| webrick	count=1
module	object ||| generator state	count=2
function	to create a record ||| record	count=1
function	various “with” ||| dir config	count=1
function	version ||| version=	count=1
function	the base [function_2] ||| [function_2] [function_1]	count=4
function	[returnv_1] [function_2] ||| [returnv_1] enterable [function_2]	count=2
module	that ||| gem specification	count=1
module	point of call ||| module	count=1
function	the latest version ||| specific	count=2
function	of each installed parser ||| each installed parser	count=1
function	length of ||| length	count=6
module	pass output through ||| rdoc	count=1
function_arg	server on [arg_2] ||| [function_1] [arg_2]	count=1
module	match this platform? two ||| platform	count=1
function	defines ||| attr accessor	count=1
arg	[arg_1] to pass ||| passwd [arg_1] user [arg_2]	count=1
function	the visitor for ||| accept list	count=4
arg	z where z ||| z	count=5
arg	maxlen bytes from ||| maxlen	count=5
function	in default ||| default	count=1
module	classes ||| ri driver	count=1
module	a new ipaddr built ||| ipaddr	count=3
function	current backtrace ||| backtrace	count=1
rep	escapes [function_arg_2] ||| [module_1] escape [function_arg_2]	count=1
function	tokens ||| get tk until	count=1
function_arg	[function_1] given spec ||| [arg_2] [function_1]	count=3
module	tempdir ||| gem	count=1
arg	the given spec ||| spec	count=1
returnv	the number of names ||| integer	count=2
arg	matches against [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	adds [arg_2] ||| [arg_2] [function_1]	count=7
function_arg	hostname of [arg_2] ||| [arg_2] [function_1]	count=1
function	[returnv_1] if time ||| [returnv_1] eql [function_2]	count=1
function	path to ||| path	count=8
arg	scripts to ||| bindir	count=1
arg	[arg_1] options may ||| [arg_1] [arg_2]	count=4
module	a temporary directory ||| dir	count=1
function_arg	[function_1] and b ||| [function_1] [arg_2]	count=3
module	arguments sets the ||| module	count=1
arg	sets the element ||| element	count=1
function	scans content for rb_singleton_class ||| do	count=1
module	initialized ||| openssl	count=1
function	a content [function_2] ||| [function_1] [function_2]	count=3
module	apiset that will ||| gem resolver apiset	count=1
module	raises big ||| bignum	count=1
module	of the [module] with ||| [module]	count=2
function	called when no handler ||| handler	count=2
arg	with requirements ||| requirements	count=1
arg	ty at ||| ty	count=1
module	new array that ||| array	count=1
function	block [function_2] ||| [function_1] [function_2]	count=3
arg	a hash ||| hash	count=1
function	[returnv_1] if ||| [returnv_1] matches [function_2]	count=1
function	transfers control ||| throw	count=1
module	don’t already ||| rdoc generator darkfish	count=1
function	extracts the files ||| extract files	count=3
module	class method/attribute ‘#’ ||| methodattr	count=1
module	configure various “with” options ||| makemakefile	count=1
arg	data must be a ||| data	count=1
arg	arg either a ||| arg	count=1
function	data hashes ordered ||| data	count=1
module	attlistdecl pulling ||| attlistdecl	count=1
arg	id and raises exception ||| id exception	count=1
rep	sets [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	attlistdecl pulling the information ||| attlistdecl	count=1
function_arg	[function_1] [arg_2] ||| [function_1] big [arg_2]	count=1
arg	symbol ||| symbol	count=8
arg	the given path ||| path mode	count=1
function	methods matching ||| methods matching	count=2
function	the unnormalized [function] of this ||| [function]	count=1
arg	line to the block ||| &block;	count=1
arg	connections at uri ||| uri	count=1
module	the following configuration ||| config	count=1
arg	key ||| key val	count=1
function	base 2 logarithm ||| log2	count=1
function	initial length of ||| initial	count=1
module	wrap the c struct ||| importer	count=1
arg	from given str ||| str enc separator: '&' use__charset_: false isindex: false	count=1
module	original ||| gem testcase	count=1
arg	given certificate if it ||| certificate	count=1
module	will live in if ||| darkfish	count=1
module	specs in ||| specification	count=1
function	returns true [function_2] ||| [returnv_1] closed [function_2]	count=2
module	union member with the ||| fiddle cunionentity	count=1
function	stop ||| stop	count=1
function	the ri [function_2] ||| [function_2] [function_1]	count=1
module	dependency in the given ||| gemdependencyapi	count=1
arg	as the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function	returns true [function_2] ||| [returnv_1] allow nan [function_2]	count=1
function	hash [function_2] ||| [function_2] [returnv_1]	count=5
function	self-signed ||| self signed	count=2
module	the listitem ||| rdoc markup listitem	count=3
function	[function_1] latter ||| [function_2] [function_1]	count=2
function	a single [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] constant that ||| [function_2] [function_1]	count=1
function	connected components ||| connected component from	count=1
function	new certificate is generated ||| setup certificate	count=1
arg	as usual file ||| mode: 0 options	count=1
function	if they don’t already ||| sub	count=1
module	called when a ||| psych handler	count=4
arg	port using ||| port local_host	count=2
arg	object_id id ||| id	count=1
module	directive ||| rdoc markup preprocess	count=1
function_arg	modulo [arg_2] ||| [arg_2] [function_1]	count=2
module	:datetime ||| datetime	count=1
function	adds ||| block quote	count=1
function	adds paths for ||| add also	count=1
function	an openssl :x509 :name ||| name	count=1
function	before ||| before	count=1
function	commands irb :context#main irb ||| commands	count=1
arg	remote_port ||| remote_port local_host local_port	count=1
function	if the named file ||| file ?	count=1
function	[function_1] the line ||| [function_2] [function_1]	count=1
function	same seconds and ||| eql	count=1
function_arg	[function_1] from parts ||| [function_1] [arg_2]	count=1
function	module ||| symbol module	count=1
function	xml writer ||| writer	count=1
arg	the issuer ||| issuer	count=1
module	set the authorization header ||| net httpheader	count=1
function	a new ||| setup	count=1
function	true [function_2] ||| [returnv_1] [function_2]	count=21
module	process to ||| gem	count=1
function_arg	returns [function_1] [arg_2] the matrix as a ||| matrix [function_1] [arg_2]	count=1
module	corresponding to ||| httpstatus	count=2
function	if key ||| member ?	count=1
function	check for illegal ||| check	count=1
arg	[arg_1] text ||| [arg_2] [arg_1]	count=8
arg	bits from ||| bits	count=1
module	returns ||| rdoc options	count=2
function	of [function_2] ||| [function_2] [function_1]	count=1
function	cross-references in ||| handle special crossref	count=1
function	options with on the ||| dir	count=1
module	and coverage ||| coverage	count=1
module	–version ||| versionoption	count=1
arg	pass - ||| pass	count=2
function_arg	adds [function_1] [arg_2] destroyed ||| [function_1] [arg_2] aproc	count=2
module	net ||| net	count=2
module	the [module] in the ||| [module]	count=3
module	create the ||| rdoc generator	count=1
function	private sections ||| private	count=1
module	rational ||| rational	count=1
module	takes the first digit ||| net smtp response	count=1
function_arg	[function_1] line and ||| [arg_2] [function_1]	count=1
function	[function_1] default ||| [function_2] [function_1]	count=5
function	the list satisfied? ||| ok	count=1
function	the ||| timeout=	count=1
module	to ||| markup tottonly	count=2
function	public method ||| public method	count=1
arg	directory ||| dir	count=1
function	a time ||| to time	count=2
function_arg	opens a [arg_2] ||| [function_1] [arg_2]	count=1
module	sets the ssl ||| ssl	count=1
function	[returnv_1] [function_2] corresponding to the method ||| unboundmethod [returnv_1] [function_2]	count=1
function	patch request to the ||| patch	count=1
function	an exception [function_2] ||| [returnv_1] [function_2]	count=1
function	break ||| break	count=3
arg	source ||| source opts	count=1
arg	for pattern [arg_2] ||| [arg_1] [arg_2]	count=1
function	json objects the ||| json	count=1
module	or that a ||| drb drbsslsocket	count=1
function	the inverse of the ||| inv	count=1
function	for ||| for	count=8
function	handler ||| default handler	count=1
function	for [function_2] ||| [function_2] [returnv_1]	count=1
arg	[arg_1] port and ||| [arg_1] [arg_2]	count=4
module	is ||| pkey dsa	count=1
function	[function] arbitrary object ||| each [function]	count=2
module	tracing ||| tracer	count=1
arg	inspect mode with opt ||| opt	count=1
arg	str of ||| str enc	count=1
function	[function] server ||| [function] server	count=2
arg	the given [arg] using ||| [arg] opts	count=1
module	html ||| markup	count=2
function	to use to generate ||| for path	count=1
module	rdoc :store ||| rdoc	count=1
arg	begin and ||| begin end exclude_end	count=1
function_arg	comparison [arg_2] ||| -1,_0,_+1 [function_1] [arg_2]	count=6
module	the uri of the ||| drbobject	count=1
function	returns the [function_2] ||| [function_2] [returnv_1]	count=38
module	for use [module] generator output ||| [module]	count=1
arg	the given command exists ||| command	count=1
function	next object as an ||| next	count=1
function	to a ||| inspect	count=1
function	the path of ||| path	count=1
function	unless documentation has ||| start	count=1
function	opens a message ||| open message	count=2
function	the rounding mode for ||| rounding mode	count=1
returnv	the status of ||| status	count=1
function	verify to ensure ||| verify	count=1
function	main [function] of ||| switch [function]	count=1
module	of undocumented ||| rdoc	count=1
arg	hostname ||| hostname	count=1
module	some key in hsh ||| hash	count=1
function	[function_1] -infinity should ||| [function_2] [function_1]	count=2
function	accept_heading_b with a ||| b	count=1
arg	whether or not ||| headers opt &b;	count=3
module	composed of multiple rdoc ||| rdoc	count=1
module	rdoc :markup :documents ||| rdoc classmodule	count=1
function	hax todo ||| create	count=1
module	fields ||| specification	count=1
module	wrap the c ||| fiddle importer	count=1
function	has been turned ||| start	count=1
function_arg	the content [arg_2] ||| [arg_2] [function_1]	count=2
function	directories ||| directories	count=2
arg	length and ||| length	count=1
arg	creates a ||| start	count=2
arg	x ||| x	count=17
module	delegator ||| delegator	count=1
module	tuplebag returning the ||| tuplebag	count=1
function_arg	parses a [arg_2] ||| [arg_2] [function_1]	count=5
arg	the database for user ||| user	count=3
module	representation of symbol ||| symbol	count=1
module	the specifications that ||| resolver molinillo specificationprovider	count=1
module	database indexed ||| dbm	count=1
function	parses a ||| parse meta	count=1
function	represent variables defined ||| variables	count=1
arg	object [arg] ||| origin destination [arg]	count=2
arg	[arg_1] stop character ||| [arg_1] [arg_2]	count=2
module	they don’t already exist ||| rdoc	count=1
function	returns the absolute value ||| abs	count=3
function	rdoc-schemed ||| rdoclink	count=1
module	and for each union ||| fiddle cunionentity	count=1
arg	a comment ||| comment	count=1
function	generated ||| gen sub	count=1
arg	bits from [arg_2] ||| [arg_2] length [arg_1]	count=2
arg	special is ||| special	count=1
arg	given name ||| name	count=8
arg	given key object see ||| key	count=1
function	or separated named) and ||| get class or module	count=1
arg	according [arg] ||| [arg]	count=1
function_arg	an anchor element ||| a href	count=1
arg	x [arg_2] ||| [arg_1] [arg_2]	count=1
arg	for size ||| size	count=1
module	hosts file ||| resolv hosts	count=5
function	next [function_2] ||| [function_1] [function_2]	count=5
function	live in if they ||| gen sub	count=1
function	as delegator instance ||| instance delegator	count=2
arg	[arg_1] +@fetcher+ serving ||| [arg_2] [arg_1]	count=1
module	requests for ||| webrick httpservlet	count=2
function	yaml ||| yaml	count=3
arg	[arg] parameter ||| [arg]	count=1
module	creates a defaultfilehandler ||| defaultfilehandler	count=1
arg	subject and [arg_2] ||| [arg_2] [arg_1]	count=2
function	satisfied ||| satisfied	count=1
function	[function_1] file ||| irbloader [function_1] [function_2] path priv	count=1
arg	token stream text ||| text	count=1
function	installs the ||| install	count=3
module	that are immediately available ||| ssl	count=1
module	with analysis ||| gem basicspecification	count=1
module	form for ||| gem requestset	count=1
module	constructor @param parent if ||| rexml	count=1
returnv	returns the session id ||| integer	count=1
function_arg	bits [arg_2] ||| [arg_2] [function_1]	count=3
module	enum sorted ||| enumerable	count=1
function	[function_1] local ||| [function_2] variable [function_1]	count=1
function	configure various “with” ||| dir	count=1
module	represents @return ||| gem resolver molinillo dependencygraph	count=1
function	the ip address as ||| ip address	count=1
module	time according ||| time	count=1
arg	a meta-programmed attribute ||| context single tk comment	count=1
module	the comment for ||| rdoc	count=1
function	starts tracing [function_2] ||| [function_2] [function_1]	count=5
module	specification ||| resolver	count=4
function	allow connections [function_2] ||| [function_1] [function_2]	count=1
function	:commandprocessor ||| def system command	count=1
function	of documentation unless ||| start	count=1
module	documentation of this codeobject ||| codeobject	count=1
function	returns ||| respond to	count=1
module	:return or :noreason ||| localjumperror	count=1
function_arg	[function_1] on stderr ||| [function_1] [arg_2]	count=3
function	command ||| config	count=1
module	a variable [module] class ||| [module]	count=1
function	null [function] locked ||| [function]	count=1
function	for the port ||| port	count=1
module	[module] given string ||| [module]	count=1
module	this [module] as an ||| [module]	count=1
function	[function_1] paragraph that ||| [function_1] [function_2]	count=1
arg	[arg_1] on path ||| [arg_2] [arg_1]	count=1
function	read using ||| read	count=1
arg	suffix ||| suffix	count=2
module	pipes and stat is ||| stat	count=1
function_arg	superset [arg_2] ||| [function_1] ? [arg_2]	count=1
module	to select a ||| net	count=1
arg	command and returns ||| cmd	count=1
function_arg	[function_1] mode ||| [arg_2] [function_1]	count=1
function	creates [function] gdbm instance ||| [function]	count=1
arg	mapped [arg] ||| [arg]	count=1
module	stou stor ||| net ftp mlsxentry	count=1
function	name of this ||| name	count=2
function	instance use apop authentication? ||| apop	count=1
module	set ||| rdoc context	count=1
function_arg	[function_1] host ||| [function_1] [arg_2]	count=3
arg	[arg_1] with text ||| [arg_1] [arg_2]	count=1
function	and number of undocumented ||| doc	count=1
function	a mkcol request ||| mkcol	count=1
module	–version option to the ||| gem versionoption	count=1
arg	stream the level ||| level	count=1
module	[module] with the ||| [module]	count=3
arg	each [arg] times or ||| [arg]	count=1
function	the object level == [returnv_1] [function_2] ||| [returnv_1] equal [function_2]	count=2
function_arg	by [arg_2] ||| [arg_2] [function_1]	count=2
module	comment is in ||| comment	count=1
arg	source_uri ||| source_uri	count=1
module	pop3 ||| net pop3	count=4
module	[module] object which ||| benchmark [module]	count=3
arg	sets the title ||| title	count=1
module	this object ||| rexml parent	count=1
arg	in found trying ||| found	count=1
module	converts this object to ||| object	count=1
module	feed or any ||| rss atom feed	count=1
module	up ||| rdoc markup formatter	count=2
function	[returnv_1] which ||| [function_2] [returnv_1]	count=1
module	whether the response ||| net smtp response	count=2
arg	method identified by symbol ||| symbol args...	count=2
function	ignores [function_2] ||| [function_2] [function_1]	count=2
module	bytes that are immediately ||| openssl ssl sslsocket	count=1
arg	passed in data ||| data options	count=1
arg	token stream unused ||| margin	count=1
function	last ||| last	count=7
module	a [module] or gzipwriter ||| [module]	count=1
module	following configuration being created ||| openssl config	count=1
function	for [function_2] ||| [returnv_1] [function_2]	count=1
arg	or not ||| opt &b;	count=3
function	of the internal ||| internal	count=1
arg	specifies the ||| ip_addr	count=1
function_arg	[function_1] address from ||| [arg_2] [function_1]	count=5
module	from the hosts file ||| resolv hosts	count=5
function	[function_1] tests ||| [function_1] [function_2]	count=3
function	data in ||| data	count=1
function	the ssl [function_2] ||| [function_2] [function_1]	count=1
function	they don’t already ||| sub	count=1
function	size to ||| size	count=1
module	command along with mailbox ||| net imap	count=1
function	to pass output ||| setup	count=1
module	the response’s http ||| webrick httpresponse	count=1
module	all other elements ||| array	count=1
function	[function_1] address ||| [function_2] [function_1]	count=2
function	true if the ||| bool started ?	count=1
function_arg	returns [function_1] [arg_2] of the matrix as ||| matrix [function_1] [arg_2]	count=1
module	only the [module] for which ||| [module]	count=1
module	to the output ||| rdoc markup tordoc	count=1
module	server defined in xmlrpc ||| xmlrpc client	count=1
arg	of type with text ||| type text	count=1
function	path to ||| name path	count=1
arg	[arg_1] singleton ||| [arg_2] [arg_1]	count=1
function	a client [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] indent ||| [arg_2] [arg_1]	count=2
function	that ||| dir	count=1
function	constructor ||| new	count=1
arg	first limit characters of ||| limit	count=1
module	visitor ||| markup totableofcontents	count=2
function	removes the ||| remove	count=6
arg	hash to ||| hash	count=1
function	object ||| object id	count=1
function	adds a new {edge} ||| add	count=1
module	anymethod ||| rdoc anymethod	count=1
function	passed argument valid ||| valid	count=2
module	:name ||| security	count=1
function	[returnv_1] named public ||| [returnv_1] [function_2]	count=1
returnv	methods to ||| self	count=1
arg	arrays of dependencies ||| dependencies	count=1
module	dependencies and return ||| gem requestset	count=1
returnv	default visibility for ||| self	count=1
arg	httprequest object [arg_2] ||| [arg_2] [arg_1]	count=6
arg	defined in ||| include_super	count=3
function	an output directory ||| output dir	count=2
module	command ||| net ftp	count=3
function	[function_1] ssl ||| [function_2] [function_1]	count=2
module	output ||| markup tottonly	count=2
module	permutation ||| lupdecomposition	count=1
function	a relative path ||| relative path	count=2
arg	prints the amount ||| msg width display	count=1
function_arg	document [arg_2] ||| [arg_2] [function_1]	count=1
function	passed argument valid ‘nz_number’ ||| valid nz number	count=1
arg	of bits [arg_2] ||| [arg_2] [arg_1]	count=5
function	[function_1] spec and ||| [function_1] [function_2]	count=1
module	are immediately available for ||| sslsocket	count=1
arg	at absolute_name ||| absolute_name relative_name	count=1
function	marks up ||| convert	count=2
function	option ||| option	count=6
arg	without opening a ||| port p_addr p_port p_user p_pass	count=1
arg	suffix by class ||| suffix	count=1
function	fix is [function] ||| [function]	count=1
function	moves file s ||| mv	count=1
module	page on ||| servlet	count=1
module	[module] returns self ||| [module]	count=3
function_arg	binary [arg_2] ||| [function_1] [arg_2]	count=1
function	minor ||| minor	count=2
module	and net :http#open_timeout ||| client	count=1
arg	syslog ||| syslog	count=1
function	[function_1] name ||| [function_1] [function_2]	count=16
arg	given ||| obj...	count=1
function	generated docs will live ||| gen sub	count=1
function	deprecate ||| create	count=1
function	adds the class or ||| add class or	count=1
arg	creates a socket connected [arg_1] [arg_2] self ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] to ||| [function_1] encoding [arg_2]	count=1
module	singleton class ||| rdoc singleclass	count=1
arg	non-blocking manner ||| exception: true	count=1
module	provided or that ||| drb drbsslsocket	count=1
function	is satisfied by ||| satisfied by ?	count=1
arg	the parent of this ||| parent	count=1
module	tomdoc from text a ||| rdoc tomdoc	count=1
module	is an attribute ||| rexml attribute	count=1
function	string to the underlying ||| write	count=1
module	real ||| benchmark	count=1
arg	by [arg] ||| [arg]	count=3
arg	receives [arg] ||| [arg]	count=1
function	objects with the same ||| eql	count=1
module	for each union member ||| fiddle cunionentity	count=1
module	entries matching that glob ||| gem	count=1
function	when an empty ||| empty	count=1
function	latest version ||| specific	count=2
function	from ||| copy	count=2
module	command that waits ||| imap	count=1
module	stat has the ||| file stat	count=2
module	last ||| zlib gzipreader	count=1
function	[function_1] server advertises ||| [function_2] [function_1]	count=3
arg	suffix by ||| suffix	count=1
arg	of default [arg_2] ||| [arg_2] [arg_1]	count=4
arg	with name and requirements ||| name requirements	count=1
arg	or a pattern ||| pattern flags	count=1
function	[returnv_1] if ||| [returnv_1] incomplete input [function_2]	count=1
module	bold level 1 rdoc ||| rdoc	count=1
function	aproc as [function] be ||| [function]	count=1
function	method call is forwarded ||| method	count=1
arg	and signing_cert using ||| signing_cert age extensions	count=1
module	of this ||| singleclass	count=1
arg	also_in [arg_2] ||| [arg_2] [arg_1]	count=2
arg	that watches place ||| place event	count=1
arg	handler id and ||| id	count=1
module	of the remote ||| drb	count=1
rep	[module_1] method name ||| [module_1] ri driver display [function_arg_2]	count=1
function	returns true [function_2] ||| [returnv_1] has [function_2]	count=3
arg	[arg_1] klass_name ||| [arg_2] [arg_1]	count=6
rep	[module_1] a line ||| [module_1] [function_arg_2]	count=2
function	plain ||| plain	count=1
module	the ||| mutex	count=1
function	gem ||| gem names	count=1
module	a distinguished name ||| openssl x509 name	count=1
function	[function_1] processed in ||| [function_1] [function_2]	count=5
module	notifier with ||| notifier	count=1
module	requirement will not always ||| requirement	count=1
function	extra [function_2] ||| [function_2] [function_1]	count=6
arg	date as ||| date	count=1
function	[returnv_1] [function_2] to the method object ||| unboundmethod [returnv_1] [function_2]	count=1
function_arg	if this [arg_2] ||| [arg_2] [function_1]	count=1
function	gem name from the ||| gem name	count=1
arg	ary ||| ary	count=2
function	returns true [function_2] ||| [returnv_1] mountpoint [function_2]	count=1
function	the absolute value ||| abs	count=3
function	sorted by ||| sorted	count=1
function	provided or that a ||| setup	count=1
module	the default visibility for ||| module	count=1
module	this [module] assumed ||| csv [module]	count=1
function	this module ||| modules	count=1
arg	in req [arg_2] ||| rdoc servlet asset [arg_2] [arg_1]	count=1
module	bytes ||| openssl	count=1
function	openssl :x509 ||| to name	count=1
module	database indexed via the ||| dbm	count=1
function	memory ||| malloc	count=1
function_arg	files [arg_2] ||| [function_1] [arg_2]	count=1
arg	the path and ||| path	count=3
function	send the ||| ctrl	count=1
module	lists have redundancies ||| gem specification	count=1
function	a potential ||| handle special hyperlink	count=1
module	returns the [module] with ||| [module]	count=1
arg	headers that you provide ||| headers	count=1
function	quirks [function_2] ||| [function_2] [function_1]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] finite [function_2]	count=1
function	the list of ||| list	count=1
function	removes the ||| remove class	count=1
function	returns the po ||| to	count=1
function	the visitor for ||| accept list item	count=4
arg	structure [arg] and ||| [arg]	count=1
returnv	of str with ||| str	count=2
function	rounding [function_2] ||| [function_2] [function_1]	count=4
rep	ri [function_arg_2] ||| [module_1] paths [function_arg_2]	count=1
module	from this hash ||| ext generator generatormethods hash	count=1
function	a server in non-blocking ||| nonblock	count=1
module	given index @param ||| rexml parent	count=1
function	documentation unless ||| start	count=1
function	classes discovered by ||| classes	count=1
returnv	an exception ||| exception	count=1
arg	given string to ||| string	count=1
function	left based on the ||| left	count=1
module	been turned ||| codeobject	count=1
function	expect full paths ||| full paths	count=1
function	get all gem version ||| get all gem	count=1
function	waits for thr [returnv_1] [function_2] raises the exception which ||| thread [returnv_1] [function_2]	count=1
arg	given string ||| string	count=5
function	the main ||| main=	count=1
arg	tag an implicit start ||| tag implicit	count=1
arg	subclass of the ||| subclass	count=1
module	to the server ||| server	count=1
function	or that a ||| setup	count=1
function	used to [function_2] ||| [function_2] [function_1]	count=1
function	calls ||| test accept	count=4
function	openssl ||| to name	count=1
module	the generated ||| generator darkfish	count=1
module	base ||| rdoc toplevel	count=1
module	state and removes ||| gem testcase	count=1
function	the namespace ||| prefix	count=1
module	visitor for html snippet ||| tohtmlsnippet	count=1
function	and attr entries matching ||| methods matching	count=1
function	[returnv_1] if nan ||| [returnv_1] ascii only [function_2]	count=1
arg	the string key ||| key	count=1
returnv	into [returnv] possibly with ||| [returnv]	count=1
arg	exponent ||| big exponent	count=1
module	the tempdir unless ||| gem	count=1
module	the object if local ||| drbobject	count=1
function	directives in ||| directives in	count=2
arg	block_quote to the ||| block_quote	count=1
function	if the ||| ?	count=59
function_arg	[function_1] [arg_2] exists within the database ||| [function_1] ? [arg_2]	count=2
module	that the request ||| resolver	count=1
function	loop [function_2] ||| [function_2] [function_1]	count=2
arg	of bits the ||| bits	count=1
function	options with ||| dir config	count=1
function	or separated named) and ||| get class or	count=1
module	printed ||| pp	count=1
function	method is still ||| after	count=1
rep	[module_1] [function_arg_2] ||| [module_1] streamlistener [function_arg_2]	count=8
arg	[arg] @return void ||| [arg]	count=3
returnv	of lines [returnv] ||| [returnv]	count=3
module	for a [module] object ||| [module]	count=1
module	new ||| drb	count=1
arg	[arg_1] by symbol ||| [arg_2] [arg_1]	count=12
function	[function_1] name from ||| [function_2] [function_1]	count=4
function_arg	[function_1] the body_file ||| [function_1] template [arg_2]	count=1
function	generators and their descriptions ||| descriptions	count=1
module	in the list ||| markup list	count=1
module	with a progress bar ||| rdoc stats normal	count=1
function	the status class ||| []	count=1
arg	anchor [arg_2] ||| [arg_1] [arg_2]	count=9
module	the [module] of self ||| [module]	count=2
function	[function_1] rubygems ||| [function_2] [function_1]	count=1
function	[function_1] rounding ||| [function_2] [function_1]	count=2
module	file is ||| file	count=9
module	this section ||| context section	count=7
function	private setter for scope ||| set scope	count=1
function_arg	[function_1] in list ||| [arg_2] [function_1]	count=1
arg	pattern [arg_2] ||| [arg_1] [arg_2]	count=1
module	:http#read_timeout ||| xmlrpc	count=1
arg	[arg_1] passing args ||| [arg_2] [arg_1]	count=3
arg	the given scheme ||| scheme	count=1
arg	temporary file as usual ||| basename tmpdir mode: 0 options	count=1
function	the unique ||| unique	count=2
arg	count ||| count	count=3
function	[function_1] tracing ||| [function_2] [function_1]	count=1
function	remove ||| remove specs	count=1
function	[function_1] key pair ||| [function_1] [function_2]	count=2
arg	seed ||| seed	count=1
function	file path of ||| path	count=1
function	string before [function_2] ||| [function_1] [function_2]	count=1
module	by ||| object	count=1
module	[module] returns ||| [module]	count=4
module	environment variable names as ||| env	count=1
function	pointer ||| pointer	count=1
function	or separated named) and ||| or module	count=1
arg	[arg_1] newname ||| [arg_1] [arg_2]	count=3
returnv	new [returnv] consisting of ||| [returnv]	count=1
function_arg	[function_1] the indicated ||| [function_1] mailbox [arg_2]	count=3
arg	field to [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	proc [arg_2] ||| tkoptiondb new [function_1] [arg_2]	count=3
returnv	hash ||| hash	count=9
function	[returnv_1] [function_2] ||| [returnv_1] friday [function_2]	count=1
function	[function_1] rfc2965 cookies ||| [function_1] [function_2]	count=2
module	hosts file ||| hosts	count=5
module	is [module] a ||| [module]	count=1
function_arg	proc [arg_2] ||| tkoption new [function_1] [arg_2]	count=3
module	parent if supplied will ||| rexml parent	count=1
module	for ||| gemdependencyapi	count=1
function	list of ||| normalized file list	count=1
arg	given command exists in ||| command	count=1
module	the response received ||| smtp response	count=2
arg	obtained by memberwise operation [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
returnv	[returnv] if possible ||| [returnv]	count=3
function_arg	[function_1] of list_item ||| [function_1] [arg_2]	count=3
function	completely closed for duplex ||| closed	count=1
function	temporary directory ||| tmpdir	count=1
module	a new ||| drb drbsslsocket	count=1
function	make [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] context with ||| [arg_1] comment [arg_2]	count=1
module	thread objects ||| thread	count=1
module	after gem :source ||| gem source	count=1
arg	:dependency dep ||| dep	count=1
function_arg	options request [arg_2] ||| [arg_2] [function_1]	count=1
module	this list and ||| rdoc markup list	count=1
module	that will retrieve gems ||| gem resolver	count=1
function	[function] strongly ||| [function] strongly connected component	count=1
function	encoding magic comment ||| coding comment	count=2
arg	message to the ||| message flags date_time	count=1
module	gem directory for the ||| gem	count=1
function	level as ||| level	count=1
function	gem ||| gem names and versions	count=1
module	the locale object ||| rdoc i18n locale	count=1
module	rows for index access ||| table	count=1
arg	named symbol ||| symbol	count=2
module	to allow the ||| gem	count=1
function	with one of ||| with	count=1
module	use across multiple ||| array	count=1
arg	method_name ||| method_name	count=2
module	in if ||| generator	count=1
module	replaces ||| rexml child	count=1
arg	n ||| n	count=19
module	for ||| rdoc generator	count=1
function	value as ||| to	count=1
rep	[module_1] [function_arg_2] ||| [module_1] add [function_arg_2]	count=29
function	command ||| dir	count=1
function_arg	arctangent [arg_2] ||| [arg_2] [function_1]	count=3
module	adds ||| markup	count=1
function	for which the ||| reject	count=1
function_arg	gem [arg_2] ||| [function_1] subdirectories [arg_2]	count=1
module	ftp ||| net	count=1
module	for a [module] object for ||| [module]	count=1
module	this ||| dns	count=1
function	openssl ||| email to name	count=1
function	returns the issuer certificate ||| issuer of	count=1
function	get request ||| request get	count=1
function	satisfied? ||| ok ?	count=1
module	requirement ||| requirement	count=1
function	[returnv_1] did ||| [returnv_1] to [function_2]	count=3
module	allow php markdown ||| markdown	count=1
arg	bits - ||| bits	count=1
function_arg	[function_1] [arg_2] ||| [function_1] post [arg_2]	count=2
module	this constant ||| rdoc constant	count=2
function	finishes consumption ||| list end	count=2
arg	name to value ||| name value	count=4
returnv	[returnv] of self ||| [returnv]	count=1
function	[function_1] special ||| [function_1] [function_2]	count=3
module	syslog err log level ||| syslog	count=1
function	into cache ||| cache	count=1
module	of bytes that ||| ssl	count=1
module	ipaddr ||| ipaddr	count=10
module	key and coverage array ||| coverage	count=1
function_arg	the status [arg_2] ||| [function_1] mailbox [arg_2]	count=1
arg	src to dest ||| src dest options	count=3
function	system satisfy ||| installation satisfies	count=1
module	set of ||| gem	count=1
function	is rdoc ||| ?	count=1
arg	[arg] dependency ||| requested [arg]	count=3
function	[function_1] proxy ||| [function_2] [function_1]	count=5
arg	new_value ||| new_value	count=1
module	instance ||| syslog	count=1
function	the system path ||| system	count=1
function	the last item ||| last	count=1
module	return a parser that ||| rdoc parser	count=1
module	parameter onto [module] such that ||| [module]	count=3
function	returns the name ||| name	count=1
arg	lineno ||| src filename lineno	count=1
function	a header [function_2] ||| [function_1] [function_2]	count=2
module	@return dependencygraph ||| resolver molinillo	count=1
function	[function_1] address ||| basicsocket addrinfo [function_1] [function_2]	count=1
function	set the ||| set visibility for	count=1
module	other [module] ||| [module]	count=3
module	cookie string into ||| cgi cookie	count=1
arg	compares ||| other	count=2
arg	and other_time are both ||| other_time	count=1
function_arg	int from [arg_2] ||| [function_1] [arg_2]	count=1
function	in place using a ||| !	count=1
module	original ||| testcase	count=1
arg	path returning ||| path	count=1
module	the generated docs will ||| darkfish	count=1
returnv	thr to [returnv] ||| [returnv]	count=1
arg	[arg_1] class_type ||| [arg_2] [arg_1]	count=4
module	restricting gems to a ||| gem	count=1
function	parses a rescue ||| parse rescue	count=2
module	[module] certificate ||| [module]	count=3
function	for restricting gems to ||| platform	count=1
arg	[arg_1] implicit ||| [arg_1] [arg_2]	count=11
function	[function_1] loopback address ||| [function_2] [function_1]	count=1
rep	is [function_arg_2] ||| [module_1] gen [function_arg_2]	count=1
function	filters the [function_2] ||| [function_1] [function_2]	count=2
module	on ||| makemakefile	count=1
module	number of bytes ||| sslsocket	count=1
function	to the rdoc documentation ||| rdoc	count=1
function	the angle ||| angle	count=1
module	if this method ||| unboundmethod	count=1
arg	min [arg_2] ||| [arg_1] [arg_2]	count=3
function	prepares the ||| accept list	count=4
function	raised to the power ||| power	count=1
function	the address of ||| address	count=1
arg	short ||| short	count=1
function_arg	status of [arg_2] ||| [function_1] [arg_2]	count=1
function	number of ||| doc stats	count=1
module	adds ||| rdoc markup formatter	count=2
returnv	the ||| array	count=2
module	by subclasses ||| methodattr	count=1
module	element children false ||| rexml elements	count=1
arg	memory pointer [arg] example ||| [arg]	count=1
function	by :enddoc ||| start	count=1
module	indicates the [module] ||| gem [module]	count=1
arg	in found trying to ||| found	count=1
module	creates an ||| markdown	count=1
module	parameter ||| cgi queryextension	count=1
function_arg	[function_1] new_name ||| [function_1] old_name [arg_2]	count=3
arg	string according to ||| string 1 jan -4712 00:00:00 +0000'	count=2
arg	a temporary ||| tmpdir	count=1
arg	n of the elements ||| n	count=1
module	in json objects ||| json ext	count=1
module	properly-space ||| rdoc options	count=2
function	removes ||| remove class variable	count=1
function	and deletes [function_2] ||| [function_1] [function_2]	count=3
function_arg	path str ||| path str	count=1
module	a ||| openssl ssl sslcontext	count=1
module	array ||| array	count=23
function	[function_1] [function_2] and ||| [function_1] [function_2]	count=3
arg	sets the store ||| store	count=3
function	the target [function] ||| [function]	count=1
function	singleton of ||| handle singleton	count=1
module	:drbsslsocket ||| drbsslsocket	count=2
arg	[arg_1] and requirements ||| [arg_1] [arg_2]	count=1
arg	obj and [arg_2] ||| [arg_2] [arg_1]	count=2
function	a list ||| module list	count=1
arg	found trying to find ||| found	count=1
function	parens ||| parens	count=1
function	[function_1] [function_2] in the pool still ||| [function_2] [function_1]	count=4
function_arg	[function_1] method_name ||| [arg_2] [function_1]	count=1
arg	uri [arg_2] ||| [arg_2] [arg_1]	count=5
arg	s if pid is ||| pid	count=1
function	a gem :specification from ||| to spec	count=1
module	already ||| generator	count=1
arg	tuple from ||| tuple	count=2
arg	the specified host ||| host options	count=1
function	represents the encoding of ||| external encoding	count=2
module	cert signature ||| x509	count=1
module	class class << myclassname ||| singleclass	count=1
function	[function] expects one ||| [function]	count=1
arg	files ||| files	count=2
function	a finalizer to ||| finalizer	count=1
module	the group ||| htgroup	count=1
function	next token from ||| next token	count=2
module	marking up this object’s ||| rdoc generator markup	count=1
module	show contents of ifaddr ||| socket ifaddr	count=1
function	message at the fatal ||| fatal	count=1
arg	equivalent ||| string obj ...	count=1
function	the form ”>word> ||| tidylink	count=1
function	object [function_2] ||| [function_2] [returnv_1]	count=6
arg	if other ||| other	count=1
function	use to configure ||| dir config	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] type extensions	count=2
function_arg	cross-references in [arg_2] ||| [function_1] [arg_2]	count=1
module	that contains the ||| gem	count=1
arg	and key ||| key age extensions	count=1
module	new exception ||| exception	count=1
function	as [function_2] ||| [function_1] [function_2]	count=13
module	the generated json #max_nesting ||| json ext generator	count=1
module	used ||| benchmark	count=1
function	verify internal [function_2] ||| [function_1] [function_2]	count=1
arg	given context ||| context	count=1
module	rdoc :method or rdoc ||| rdoc parser	count=1
module	you handlers [module] ||| [module]	count=1
function	to add [function_2] ||| [function_2] [function_1]	count=5
module	handles ||| httpservlet erbhandler	count=2
function	of individual raw profile ||| raw	count=1
function	hash as ||| hash	count=1
function	ensure that ||| ensure dependency	count=1
arg	a string ||| string 1 jan -4712 00:00:00	count=2
function	exits ||| exit !	count=1
arg	to uri’s ||| oth	count=1
function	for the attribute ||| attribute	count=1
module	in xmlrpc ||| xmlrpc	count=1
arg	spec that can ||| spec	count=1
module	:sslprivatekey have ||| drb	count=1
function	dir [function_2] ||| [function_1] [function_2]	count=1
module	analysis and documentation tools ||| basicspecification	count=1
arg	version [arg_2] ||| [arg_1] [arg_2]	count=7
function	end of the nth ||| end	count=1
function	after resolution ends either ||| after resolution	count=1
arg	with an evaluation order ||| order	count=1
function_arg	[function_1] name enabled? ||| [function_1] ? [arg_2]	count=2
function	the user can ||| dir config	count=1
module	from this file ||| zlib gzipreader	count=1
arg	file [arg] ||| [arg]	count=1
function_arg	server on path ||| server loop path	count=1
arg	out_stream for size items ||| out_stream size initial_message	count=1
module	…> the argument ||| sax2listener	count=1
function	the user can then ||| config	count=1
function	a proxy ||| find proxy	count=1
arg	[arg_1] given extensions ||| [arg_1] key [arg_2]	count=2
module	the row ||| row	count=1
module	and ||| optparse	count=1
module	and ||| sslconfig	count=1
function	to ||| quote	count=1
function	of the latter ||| for path	count=1
function	the setter for ||| setter	count=1
function	description for the ||| description	count=2
function	writer stream ||| stream	count=1
module	tts from ||| rdoc markup tottonly	count=1
function	new ||| create	count=1
function	[returnv_1] priority ||| [returnv_1] [function_2]	count=1
module	any arguments ||| object	count=1
function	2xx reply ||| success	count=1
arg	set of platforms ||| platforms	count=1
module	rdoc :generator :jsonindex to ||| rdoc	count=1
module	response ||| smtp response	count=4
module	compares to ||| uri	count=1
function	post [function_2] ||| [function_2] [function_1]	count=4
arg	of real ||| real	count=4
module	returns the ||| stats	count=1
arg	vector number i ||| i	count=1
module	are paragraphs ||| rdoc markup tohtmlsnippet	count=1
module	digest can ||| openssl digest	count=1
arg	the given ||| code_object &block;	count=1
module	singleton class class ||| rdoc	count=1
function	unconverted_fields() to parsed results ||| unconverted fields	count=1
returnv	a new [returnv] consisting ||| [returnv]	count=1
arg	from src ||| src filename lineno	count=1
module	currently selected mailbox ||| net imap	count=1
function	verify to ||| verify	count=1
function	generated ||| gen	count=1
function	unique classes [function_2] ||| [function_1] [function_2]	count=2
module	onto the io raising ||| package tarwriter	count=1
module	turns rdoc ||| rdoc rdoc	count=1
function	located ||| from caller	count=1
function	will live in ||| gen	count=1
module	float ||| float	count=6
function	port number ||| port	count=4
function	the modulus pythagorean distance ||| magnitude	count=1
returnv	a string ||| string	count=16
module	can then use ||| makemakefile	count=1
module	for restricting gems to ||| requestset gemdependencyapi	count=1
arg	an httpresponse ||| initheader	count=1
module	a marker for rdoc ||| rdoc stats	count=1
function	[returnv_1] if ||| [returnv_1] setgid [function_2]	count=1
arg	unwanted ||| p	count=1
arg	a new closure wrapper ||| ctype argtype call_type &block;	count=1
module	with ||| drb drbsslsocket sslconfig	count=2
function	is passed ||| number ?	count=1
function	returns the last ||| last	count=4
module	the first instance is ||| syslog	count=1
function_arg	all gems [arg_2] ||| [arg_2] [function_1]	count=1
function	the numerator ||| numerator	count=2
module	the hosts file ||| resolv hosts	count=5
function	extra [function_2] ||| gem command [function_1] [function_2]	count=1
arg	regexp object ||| object	count=1
function_arg	greater than real ||| > float real	count=1
arg	with name version ||| name version dependencies &block;	count=1
function	verify [function_2] ||| [function_2] [function_1]	count=2
function	mode storing the ||| puttextfile	count=1
returnv	pathname to an ||| abs_file_name	count=2
module	of bytes ||| ssl sslsocket	count=1
arg	[arg] objects by ||| [arg]	count=3
module	from the proxied tuplespace ||| rinda tuplespaceproxy	count=3
function	command line by using ||| dir	count=1
module	new ||| drb drbsslsocket	count=1
function	loads the [function_2] ||| [function_2] [function_1]	count=6
module	pass output ||| ri	count=1
function	a ||| instance	count=1
function_arg	value of big is [function_1] [arg_2] ||| bignum bool [function_1] [arg_2]	count=2
arg	the path ||| path data	count=1
module	:sslprivatekey have been ||| sslconfig	count=1
function	the protected instance methods ||| protected instance methods	count=1
arg	gives it ||| from_addr to_addrs	count=1
function	an empty ||| empty	count=2
module	of bytes ||| ssl	count=1
function_arg	class with [arg_2] ||| [function_1] [arg_2]	count=2
module	output ||| driver	count=1
module	a set of ||| gemdependencyapi	count=1
function	as a ||| start	count=1
function	limit the number ||| limit	count=1
module	pass output through ||| rdoc ri	count=1
arg	count is the first ||| count	count=1
module	gem was ||| gem	count=1
function	extensions ||| extensions	count=5
function	the makefile for ||| create makefile	count=1
module	specification that contains the ||| specification	count=1
function	[function_1] rounding ||| [function_1] [function_2]	count=2
module	will live in ||| generator darkfish	count=1
arg	[arg] using ||| input [arg]	count=2
function	[function] according to ||| [function]	count=1
module	an rdoc ||| rdoc tomdoc	count=2
module	for directives in the ||| rdoc markup preprocess	count=1
function	adds a validation ||| add	count=1
arg	passed in data for ||| data options	count=1
module	to a set ||| requestset	count=1
arg	attribute [arg] same ||| name [arg]	count=1
arg	bits - [arg_2] ||| [arg_2] [arg_1]	count=4
function	[function_1] string ||| ipaddr [function_1] [function_2]	count=1
arg	prefix [arg_2] ||| [arg_1] [arg_2]	count=3
arg	a [arg_2] ||| iso8601 [arg_2] [arg_1]	count=1
module	wrap the ||| importer	count=2
module	:parser ||| parser	count=1
module	optionally under a provided ||| light node	count=1
module	initialized ||| syslog	count=1
module	gem ||| gem	count=87
module	representation for this integer ||| generatormethods	count=1
module	net :http#read_timeout and ||| client	count=1
module	for restricting ||| requestset gemdependencyapi	count=1
module	a class ||| ri driver	count=1
module	returns a lazy enumerator ||| enumerator lazy	count=1
function	[function_1] handler and ||| [function_1] [function_2]	count=3
arg	of the individual times ||| x	count=1
function	comparison ||| <=>	count=5
module	for ||| rdoc markup tohtml	count=4
function_arg	copies stream [arg_2] ||| [arg_2] [function_1]	count=3
module	this [module] and ||| [module]	count=1
module	a new objectid to ||| openssl asn1 objectid	count=1
function	entered by cwd/cdup ||| enterable	count=1
module	unless the keep_files ||| gem testcase	count=1
arg	to out_stream ||| out_stream	count=1
function	the original name provided ||| name	count=1
function	patch request ||| patch	count=1
function	verifies the ||| verify	count=1
arg	[arg_1] or fills ||| [arg_1] [arg_2]	count=1
function	[function_1] files on ||| [function_2] [function_1]	count=1
function	returns the namespace of ||| prefix	count=1
module	object which denotes ||| datetime	count=2
module	and number of ||| rdoc	count=1
module	closure ||| closure	count=1
function	is valid ||| valid	count=3
function	[function_1] exited normally ||| [function_2] [function_1]	count=2
module	given block ||| benchmark	count=1
function_arg	[function_1] text ||| [function_1] [arg_2]	count=6
function	documented modules sorted by ||| sorted	count=1
function	returns a content ||| content	count=1
module	gem :uninstaller#uninstall ||| gem	count=2
module	prepares the ||| rdoc markup tomarkdown	count=1
function	a comment ||| comment	count=2
function	[returnv_1] [function_2] ||| [returnv_1] symlink [function_2]	count=2
function	containing the values ||| values	count=1
module	tar entry? ||| package tarreader entry	count=1
module	[module] of ||| gem resolver molinillo [module]	count=3
arg	called when an ||| name	count=1
returnv	to a string ||| string	count=1
function	of ||| of	count=1
module	gem specifically the ||| gem	count=1
function	returns true [function_2] ||| [returnv_1] exclude end [function_2]	count=1
function	[function_1] info ||| [function_2] [function_1]	count=3
returnv	- string ||| string	count=2
arg	from the ||| api_data	count=1
arg	host ||| host allowed_push_host &block;	count=1
function	returns the year ||| year	count=1
function	[returnv_1] if this ||| [returnv_1] field row [function_2]	count=1
module	and :sslprivatekey ||| sslconfig	count=1
module	the list ||| rdoc markup list	count=2
module	converts the [module] to ||| [module]	count=2
function	modules sorted by salience ||| sorted module	count=1
function	[returnv_1] [function_2] ||| [returnv_1] return headers [function_2]	count=1
module	value toward ||| rational	count=1
arg	[arg_1] options and ||| [arg_1] [arg_2]	count=3
function	installs a [function_2] ||| [function_2] [function_1]	count=1
module	a parser ||| rdoc parser	count=1
arg	using ||| local_host	count=1
arg	given hash to ||| hash	count=1
function	the named private ||| private	count=1
module	[module] which ||| [module]	count=1
module	prepares ||| markup tomarkdown	count=2
arg	[arg] into ||| [arg]	count=1
function	connected components in ||| connected component from	count=1
function	self-signed certificate with ||| create cert	count=1
module	mdns resolver provided ||| resolv mdns	count=1
module	onto the [module] such ||| [module]	count=1
function	[function_1] name str ||| [function_1] [function_2]	count=2
module	gem file ||| gem	count=1
module	bytes that are immediately ||| openssl	count=1
function	a json string ||| to json	count=2
function	cross-references ||| handle special crossref	count=1
module	comment ||| generator	count=1
arg	der-encoded ||| der	count=1
module	grab ||| thread	count=1
function	[function] element of ||| [function]	count=1
module	progress reporter that ||| gem streamui	count=1
function_arg	struct [arg_2] ||| [function_1] [arg_2]	count=2
module	after gem ||| gem	count=1
module	and stat is a ||| file stat	count=1
module	ensures that :sslcertificate ||| drb drbsslsocket sslconfig	count=1
module	restricting gems to ||| gem requestset	count=1
module	the generated json to ||| json ext generator	count=1
arg	each [arg] matching values ||| [arg]	count=1
module	analysis ||| basicspecification	count=1
function	this is ||| ?	count=2
returnv	of str with the ||| str	count=1
function	command line by using ||| dir config	count=1
function	[function_1] local ||| [function_2] [function_1]	count=13
module	array with ||| array	count=1
arg	equivalent ||| io string obj ...	count=1
arg	returns the initially ||| { |(args	count=1
function	and number of ||| doc stats	count=1
module	a new uri :mailto ||| uri mailto	count=1
function	checks the permissions ||| permissions	count=1
returnv	@param parent if ||| instance	count=1
returnv	as a rational ||| rational	count=1
function	the canceled status ||| canceled	count=1
function	[function_1] gem names ||| [function_2] [function_1]	count=2
arg	[arg_1] [arg_2] ||| cert [arg_1] [arg_2]	count=55
rep	[module_1] method name ||| [module_1] driver display [function_arg_2]	count=1
module	ensures ||| drb drbsslsocket sslconfig	count=2
arg	mapped [arg] that was ||| [arg]	count=1
module	tuple ||| rinda tuple	count=1
module	in if they ||| rdoc generator darkfish	count=1
function	adds paths for undocumented ||| add also in	count=1
rep	true [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	to use the ||| use	count=1
function	corresponding value ||| value	count=1
module	attribute for this module ||| module	count=1
function_arg	[function_1] text ||| rexml element [function_1] [arg_2]	count=3
function	of instance variable names ||| instance variables	count=1
function_arg	parses [arg_2] ||| [arg_2] [function_1]	count=14
function	[returnv_1] if ||| [returnv_1] unconverted fields [function_2]	count=1
function	begins with ||| begins	count=1
arg	the output) ||| output indent	count=1
function	platform ||| platform	count=3
module	terminates the [module] specified by ||| [module]	count=1
function	[function_1] [function_2] following edges within this ||| [function_2] [function_1]	count=4
module	is encountered in the ||| rexml streamlistener	count=1
module	against the [module] :parser ||| [module]	count=1
function_arg	[function_1] [arg_2] with values v serialized ||| [function_1] create [arg_2]	count=2
module	gems to a ||| requestset gemdependencyapi	count=1
module	so that all file ||| gem specification	count=1
arg	parsing from [arg] ||| [arg]	count=3
module	whitespace and ||| rdoc	count=1
module	the net :http#read_timeout and ||| xmlrpc	count=1
returnv	using accept [returnv] after ||| [returnv]	count=1
function	verifies the signature of ||| verify	count=1
module	block ||| gem	count=1
arg	[arg_1] exception ||| [arg_2] [arg_1]	count=2
module	gem implementation returns a ||| gem	count=1
function	for text generation ||| accepting	count=2
function	the year 1-366 ||| yday	count=1
function_arg	[function_1] for pattern ||| [arg_2] [function_1]	count=3
arg	the constants of ole ||| ole	count=1
function	clone of this ||| clone	count=1
arg	singleton ||| singleton	count=1
arg	from found klasess and ||| name found klasses	count=1
arg	according to arg ||| arg	count=2
arg	src ||| src filename	count=1
module	[module] the items ||| [module]	count=1
arg	decodes the given str ||| str	count=1
module	the ||| xmlrpc client	count=2
function	with [function_2] ||| [returnv_1] [function_2]	count=1
function_arg	scalar [arg_2] ||| [arg_2] [function_1]	count=3
module	todo ||| gem	count=1
function_arg	creates a udp/ip [function_1] [arg_2] ||| socket udp [function_1] loop [arg_2]	count=1
arg	new [arg_2] ||| [arg_1] [arg_2]	count=1
function	document ||| document	count=3
function	last win32 [function_2] ||| [function_2] [function_1]	count=4
module	object which denotes ||| date	count=1
function	variables [function] ||| [function]	count=1
module	a constant ||| rdoc constant	count=1
arg	array of ruby ||| ruby options	count=1
module	pager ||| rdoc ri driver	count=1
module	this gem ||| gem resolver installedspecification	count=1
function	a proxy uri for ||| get proxy from	count=1
function	2xx reply code ||| success ?	count=1
function	the named protected method ||| protected method	count=1
arg	named ||| class_type	count=2
function	if str ||| ?	count=1
function	module comment ||| comment	count=1
function	length ||| doc	count=1
function	error of ||| error	count=2
arg	not print message ||| message	count=1
function	accept character set ||| accept	count=1
function	returns the encoding ||| external	count=2
function	thursday ||| thursday	count=1
module	or rdoc ||| rdoc parser ruby	count=1
module	c union the ||| fiddle cunionentity	count=1
function	[returnv_1] [function_2] ||| [returnv_1] tty [function_2]	count=2
function	method only ||| method	count=1
module	rdoc ||| rdoc ri driver	count=4
function	list ||| list item start	count=2
function_arg	[function_1] the message ||| [function_1] mailbox [arg_2]	count=3
function	the reason ||| reason	count=1
arg	handling req on res ||| req res	count=1
function	[function_1] define ||| [function_2] [function_1]	count=2
function	check is [function_2] ||| [function_2] [function_1]	count=2
function_arg	normalized [arg_2] ||| [function_1] [arg_2]	count=1
module	index @param index the ||| parent	count=1
returnv	a hash ||| hash	count=6
module	threadswait object specifying the ||| threadswait	count=1
arg	subset of ||| refname mailbox	count=1
module	docs ||| generator darkfish	count=2
module	format ||| generator pot	count=1
function_arg	[function_1] [arg_2] child of this object ||| rexml element [function_1] [arg_2]	count=3
function_arg	[function_1] to path ||| [function_1] uri [arg_2]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] respond to [function_2]	count=1
function	is executable or if ||| ?	count=1
module	matching ||| gem specification	count=2
function	[function_1] proxy for ||| [function_2] env [function_1]	count=1
function	but for header ||| header	count=1
function	nan infinity and ||| allow nan	count=1
module	accept_heading_suppressed_crossref with ||| formattertestcase	count=1
function	a pipeline with ||| pipeline r	count=2
arg	log a ||| progname &block;	count=1
function	the visitor tests to ||| visitor tests	count=1
function	[returnv_1] [function_2] the ||| [returnv_1] started [function_2]	count=2
module	the spec for ||| gem	count=1
function	directories the generated docs ||| directories	count=1
function	a list of ||| file list	count=1
module	checks that cert signature ||| openssl x509 request	count=1
function	tts ||| quote	count=1
arg	block parameter for context ||| context	count=1
arg	given str ||| str enc separator: '&' use__charset_:	count=1
module	returns the ||| complex	count=1
function	target messages and yields ||| messages	count=1
arg	to store(), but set ||| set	count=1
function	returns the next token ||| next token	count=1
function	[function_1] [function_2] numerator value n denominator ||| rational [function_2] [function_1]	count=1
arg	spec from source_uri ||| spec source_uri install_dir	count=2
module	for this ssl ||| openssl ssl	count=1
function	a superset of ||| superset	count=1
function_arg	time [arg_2] ||| [arg_2] [function_1]	count=1
function	finds all tuples ||| find all	count=1
arg	[arg_1] tag ||| [arg_1] [arg_2]	count=5
function_arg	equality — [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	defaults for methods ||| methods	count=1
module	a xml-rpc server ||| server	count=1
function	modulus pythagorean distance ||| magnitude	count=1
arg	value ||| value anchor	count=1
function	current match ||| match	count=2
module	sets ||| rdoc ri driver	count=2
module	feed or any of ||| rss atom feed	count=1
arg	mod to the modules ||| mod	count=1
arg	declared version tag_directives ||| version tag_directives	count=1
function	for a constant ||| const	count=1
module	and flags ||| openssl ocsp basicresponse	count=1
module	[module] :toplevel ||| [module]	count=2
module	the keep_files ||| testcase	count=1
arg	the body_file ||| body_file	count=1
module	runs ri ||| ri	count=1
arg	given scheme if ||| scheme	count=1
module	mod is a class ||| module	count=4
arg	by n matrix ||| n	count=1
arg	if object is ||| object	count=1
module	flags ||| basicresponse	count=1
module	5 rdoc :markup ||| rdoc markup formattertestcase	count=1
function	[returnv_1] [function_2] to proc body ||| proc [returnv_1] [function_2]	count=1
module	<!entity [module] ||| [module]	count=3
function	a range object ||| range	count=1
arg	default according [arg_2] ||| [arg_2] [arg_1]	count=4
module	don’t already exist ||| rdoc generator darkfish	count=1
module	this ||| net	count=1
function	latest release-version specification ||| latest spec for	count=1
module	graph ||| resolver molinillo	count=2
function	is this an ssl ||| ssl ?	count=1
arg	remove the mailbox ||| mailbox	count=1
function	attributes ||| attributes	count=3
arg	to a class_type ||| class_type	count=1
function	a list of the ||| list	count=2
arg	the value value with ||| value	count=1
module	ios is ||| io	count=1
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=4
arg	validation status ||| status	count=1
arg	[arg] name ||| [arg]	count=3
function	and remove ||| create	count=1
function	from the environment ||| env	count=1
module	xmlrpc :server ||| xmlrpc	count=1
arg	at most [arg_2] ||| [arg_2] [arg_1]	count=6
arg	specified string value ||| value	count=1
arg	running on front with ||| front desc renewer	count=1
arg	[arg_1] a singleton ||| [arg_2] [arg_1]	count=1
function	from comment if there ||| comment tomdoc	count=1
function	writes ||| write options	count=1
arg	year of ||| year	count=3
module	of ||| stringio	count=1
function	to the provided block ||| generate	count=1
arg	the mailbox ||| mailbox	count=4
module	rows ||| csv	count=1
function	version 1 ||| version 1	count=2
function	match ||| match	count=2
function	output dir ||| dir	count=1
arg	parsing from a string ||| string 1 jan -4712	count=2
module	[module] given ||| digest [module]	count=4
module	inspector object using ||| inspector	count=1
function	returns true if ||| bool sunday ?	count=1
function	the profiler ||| print profile	count=1
rep	rdoc [function_arg_2] ||| [module_1] markdown [function_arg_2]	count=4
function	variable named ||| variable	count=1
function_arg	[function_1] form ||| [function_1] [arg_2]	count=3
module	number of bytes that ||| openssl ssl sslsocket	count=1
returnv	string don’t use ||| string	count=1
module	options request ||| webrick	count=1
function	proxy for this ||| proxy	count=1
arg	object by forwarding the ||| m include_private	count=1
function	the visitor ||| item start	count=4
function	and the line ||| get file and line	count=1
function	satisfied [function_2] ||| [function_1] [function_2]	count=3
module	following certificate and ||| security	count=1
function	finds [function_2] ||| [function_2] [function_1]	count=9
function	new directory ||| mkdir	count=1
function	iteration ||| collect	count=1
function	default [function_2] ||| gem [function_1] [function_2]	count=1
function_arg	list of [arg_2] ||| [function_1] [arg_2]	count=5
function	can handle the ||| can parse	count=1
function	items in ||| doc	count=1
arg	and type of ||| type	count=1
function	all gem [function_2] ||| [function_1] [function_2]	count=3
module	the ||| optionparser	count=1
module	pid and ||| process	count=1
module	marking up ||| markup	count=1
function	scans content for rb_define_class ||| do define	count=1
function	as ||| new	count=1
module	new ipaddr ||| ipaddr	count=3
arg	source_uri to ||| source_uri install_dir	count=1
module	hax todo ||| gem	count=1
arg	-1 ** [arg] + ||| [arg]	count=1
function	values ||| values at	count=1
function_arg	[function_1] [arg_2] 0 for good 1 ||| [function_1] certificate_id [arg_2] reason revocation_time this_update next_update	count=3
function	deletes value from ||| delete	count=1
arg	[arg_1] tags ||| [arg_2] [arg_1]	count=1
arg	[arg_1] matches against ||| [arg_1] [arg_2]	count=1
module	form ||| gem requestset gemdependencyapi	count=2
module	that contains the session ||| openssl ssl session	count=1
module	read from ||| zlib	count=1
module	#do_write for ||| rinda	count=1
function_arg	[function_1] parts ||| [arg_2] [function_1]	count=2
module	syslog err log level ||| syslog logger	count=1
module	this hash instance ||| hash	count=1
function_arg	verify [arg_2] ||| [arg_2] [function_1]	count=1
module	was set ||| gem testcase	count=1
module	of this ||| parent	count=1
function	is this an ||| ?	count=1
arg	[arg] comes first ||| [arg]	count=3
arg	for quick navigation to ||| req res	count=1
module	instead ||| net	count=1
function	parses a method ||| parse method	count=2
arg	obj and tag ||| tag obj	count=3
function	combines specs in ||| update specs	count=2
function_arg	[function_1] the value ||| [arg_2] [function_1]	count=3
module	sets up a ||| rdoc ri	count=1
arg	of bin ||| bin padding:	count=1
arg	in req for ||| req	count=1
arg	+@fetcher+ serving ||| repo	count=1
module	array that is ||| array	count=1
arg	certificate with the signing_key ||| certificate signing_key	count=1
module	environment variable was set ||| testcase	count=1
module	resolver object which ||| resolver	count=1
function	private ||| private ?	count=2
arg	value and tag ||| tag value	count=3
module	text ||| rexml text	count=1
arg	[arg_1] dir ||| [arg_2] [arg_1]	count=5
function	[function_1] [function_2] n denominator value d ||| [function_2] [function_1]	count=1
arg	httpresponse ||| initheader	count=1
function	a windows platform? ||| win	count=1
arg	[arg_1] enclosing ||| [arg_2] [arg_1]	count=1
function	the parameters of the ||| params	count=1
function	the user dir ||| user	count=1
arg	glob ||| glob	count=1
module	‘:’ in json objects ||| json ext generator state	count=1
module	httpversion from ||| webrick httpversion	count=1
module	marking up this object’s ||| generator markup	count=1
function	size [function_2] ||| [function_2] allocated [function_1]	count=1
module	as row access returning ||| csv	count=1
function_arg	the value of big [function_1] [arg_2] ||| bignum bool [function_1] [arg_2]	count=2
returnv	if it isn’t ||| self	count=1
function_arg	fetches [arg_2] ||| [arg_2] [function_1]	count=1
function	to ignore ||| ignore	count=1
arg	precision numeric ||| numeric	count=5
function_arg	klass [function_1] [arg_2] ||| [function_1] if need klass [arg_2]	count=1
arg	given base and prefix ||| base level prefix	count=1
function	win32 error ||| win32 last error	count=1
function_arg	resources [arg_2] ||| [arg_2] [function_1]	count=1
function	is [function] ||| world [function]	count=4
module	the tuplebag which ||| rinda tuplebag	count=1
function	code object was defined ||| record location	count=1
function	sets the previous ||| previous	count=1
arg	[arg_1] wraps ||| [arg_2] [arg_1]	count=2
module	reporter ||| gem streamui	count=2
arg	context with [arg_2] ||| [arg_2] [arg_1]	count=2
module	returns a parser ||| parser	count=1
arg	number of bytes ||| bytes	count=1
function	[function_1] an alias ||| [function_2] [function_1]	count=1
function_arg	parse an [arg_2] ||| [function_1] [arg_2]	count=3
function	if the named file ||| ?	count=1
arg	tag an [arg_2] ||| [arg_1] [arg_2]	count=5
function	will determine the class ||| recv	count=1
returnv	[returnv] values associated ||| [returnv]	count=2
function	from ||| quote	count=1
module	current workspaces ||| irb context	count=1
arg	the given [arg_2] ||| [arg_2] [arg_1]	count=4
function	html id-friendly version of ||| html name	count=1
returnv	[returnv] garbage collection ||| [returnv]	count=2
function	subdomain ||| subdomain of	count=1
function	replaces the contents of ||| replace	count=1
function	[function] adding this ||| extend [function]	count=1
module	:sslprivatekey have ||| sslconfig	count=1
function	includes that match ||| and includes	count=1
module	the section ||| verbatim	count=1
function	with on [function_2] ||| [function_1] [function_2]	count=3
function	prepares the ||| list	count=4
function	the instance [function_2] ||| [function_2] [function_1]	count=3
function_arg	tries [function_1] [arg_2] into ||| [function_1] [arg_2]	count=1
arg	of tags for an ||| name start stop	count=1
module	a ||| gem requestset	count=1
function	returns a hash consisting ||| to hash	count=1
module	this dh to ||| pkey dh	count=2
function_arg	adds str ||| add str	count=1
arg	id and raises ||| id	count=1
module	it up to this ||| rdoc	count=1
function	default value for the ||| default	count=3
function	a list of all ||| file list	count=1
function	visitor for ||| accept list item start	count=4
function	proppatch request to the ||| proppatch	count=1
function	method as delegator ||| delegator	count=1
function	create the ||| gen	count=1
module	unmounts ||| webrick httpserver	count=1
arg	the named ||| file_name	count=23
module	a gem ||| gem testcase staticset	count=1
arg	basic password ||| realm user	count=1
arg	[arg_1] [arg_2] ||| [arg_2] length [arg_1]	count=4
module	availableset as a search ||| availableset	count=1
module	of this proc ||| proc	count=1
module	the command with the ||| gem command	count=1
function	but preserve the ||| save	count=1
module	the dependencylist that ||| dependencylist	count=1
module	spec ||| specification	count=2
module	prefetch ||| gem resolver set	count=1
module	the status class corresponding ||| httpstatus	count=1
function	[returnv_1] [function_2] ||| text [returnv_1] [function_2]	count=1
arg	parser for ||| block_parser	count=1
arg	[arg_1] given_name with ||| [arg_2] [arg_1]	count=1
module	and the expired certificate ||| gem security	count=1
module	this state ||| state	count=1
arg	[arg] either toplevel ||| mod self_hash [arg]	count=2
arg	[arg] by ||| [arg]	count=3
module	rdoc ||| gem server	count=1
module	json string ||| json	count=3
function	finalizer to ||| finalizer	count=1
arg	held in mutex and ||| mutex timeout	count=1
module	object instead ||| toplevel	count=1
module	or that a new ||| drb drbsslsocket	count=1
arg	spec? note match? ||| spec allow_prerelease	count=1
module	all new instances ||| net pop3	count=2
arg	pre-processor for input_file_name ||| input_file_name	count=1
module	the [module] key false ||| [module]	count=1
arg	request ||| request	count=1
function	a prime factorization and ||| from prime	count=2
arg	name ||| name &block;	count=1
module	visitor ||| markup tohtml	count=4
function	the visitor ||| list item start	count=4
module	generators and ||| rdoc options	count=1
returnv	string is ||| string	count=1
function	returns all [function_2] ||| [function_2] [function_1]	count=5
function	[returnv_1] [function_2] ||| [returnv_1] unconverted fields [function_2]	count=1
module	array of [module] objects ||| [module]	count=1
module	rdoc :toplevel file where ||| rdoc codeobject	count=1
module	valid json ||| json ext generator	count=1
function	sets the session ||| session	count=1
arg	c pointer addr as ||| addr	count=1
arg	to function ||| function	count=1
module	the location of the ||| installer	count=1
function_arg	[function_1] [arg_2] that can be used ||| [function_1] [arg_2]	count=4
function	[function_1] there ||| [function_2] [function_1]	count=3
function	[function_1] pipeline with ||| [function_2] [function_1]	count=8
module	finds ||| rdoc parser c	count=1
function	the first ip address ||| getaddress	count=1
module	or that ||| drb drbsslsocket sslconfig	count=1
function	to grab the lock ||| lock	count=1
arg	files in list ||| list options	count=2
function	connections from socket ||| socket	count=1
module	parses ||| fiddle cparser	count=1
function	scans content for rb_singleton_class ||| do singleton	count=1
module	as transparent and ||| tkphotoimage	count=1
arg	the context of this ||| context statements file	count=1
function_arg	[function_1] mod ||| [function_1] [arg_2]	count=6
function	case-insensitive flag ||| casefold ?	count=1
function	iterates the ancestors ||| each	count=1
arg	of fix is ||| fix	count=1
function	empty? ||| empty	count=2
arg	[arg] then writes ||| index [arg]	count=1
function	of the fiber-local variables ||| keys	count=1
module	builds a rdoc :markup ||| rdoc ri driver	count=1
module	attempts ||| mutex	count=1
arg	document to ||| document	count=1
function	[returnv_1] if the ||| [returnv_1] directory [function_2]	count=1
module	that the specification contains ||| gem specification	count=1
module	already ||| rdoc generator	count=1
module	[module] garbage ||| [module]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] gregorian leap [function_2]	count=4
function	adds an ||| add	count=1
arg	block [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] webrick ||| [function_1] server [arg_2]	count=2
module	fiber resuming it from ||| fiber	count=1
module	directory may be ||| ftp mlsxentry	count=1
module	checks that cert signature ||| x509	count=1
module	io objects [ ||| io	count=1
function	[function_1] the files ||| [function_1] [function_2]	count=1
module	comment ||| rdoc generator markup	count=1
arg	to out_stream [arg_2] ||| [arg_2] [arg_1]	count=2
arg	ios [arg] or csv ||| [arg]	count=1
module	command to permanently ||| net imap	count=1
returnv	of self for ||| ary	count=1
module	class class ||| rdoc singleclass	count=1
arg	user ||| user reload_db	count=1
function_arg	[function_1] with ||| [arg_2] [function_1]	count=4
function	representation ||| to	count=1
function	extra ||| binary extra	count=1
arg	given prefix [arg_2] ||| [arg_1] [arg_2]	count=3
arg	[arg_1] tag_name pair ||| [arg_2] [arg_1]	count=3
module	dependencies and return ||| requestset	count=1
module	or ||| net	count=1
function	an array of values ||| values	count=1
module	net :http#open_timeout ||| xmlrpc client	count=1
function	the given string ||| key	count=1
function_arg	[function_1] [arg_2] 0 for good 1 ||| [function_1] [arg_2]	count=3
module	tar entry ||| package tarreader entry	count=5
arg	certificate with [arg_2] ||| [arg_1] [arg_2]	count=3
arg	source and ||| source	count=1
module	newly allocated pty ||| pty	count=1
module	nil if argument ||| optionparser switch placedargument	count=1
function	removes ifdefs that ||| ifdefs	count=1
function	unique local address fc00 ||| unique local ?	count=1
module	for restricting gems ||| gem	count=1
arg	supplied name ||| name	count=1
module	method ||| win32ole_method	count=3
arg	and columns ||| columns	count=1
function	[function_1] while ||| [function_2] [function_1]	count=1
function	waits for thr to [returnv_1] [function_2] the exception which terminated ||| [returnv_1] [function_2]	count=1
module	the feed or any ||| rss atom feed	count=1
module	documentation generator for ||| rdoc rubygemshook	count=1
arg	[arg_1] to limit ||| [arg_2] [arg_1]	count=1
function	an openssl :x509 :name ||| to name	count=1
function	[returnv_1] form “nnnnnn ||| [returnv_1] to [function_2]	count=1
function	gem version ||| gem names and versions	count=1
function	:commandprocessor ||| install system commands	count=1
arg	[arg_1] time and ||| [arg_2] [arg_1]	count=1
function	line ||| config	count=1
module	the c code corresponding ||| parser c	count=1
returnv	object proc ||| proc	count=1
module	using fiddle ||| fiddle	count=1
arg	other are both hashes ||| other	count=1
arg	the pages ||| pages search	count=1
module	accept_rule ||| rule	count=1
arg	comment to the ||| comment	count=1
function	of commands as a ||| r	count=1
function	lock ||| try lock	count=1
arg	sec as ||| sec	count=1
module	by the resolver ||| resolver	count=1
function	by using that name ||| dir	count=1
function	[returnv_1] if ||| [returnv_1] installed [function_2]	count=1
module	instance has a ||| pkey	count=1
module	the [module] device ||| [module]	count=1
arg	spec from source_uri ||| spec source_uri	count=1
function	paths for undocumented classes ||| also	count=1
module	location ||| installer	count=1
module	descriptive fields ||| gem	count=1
module	output through ||| ri driver	count=1
function	finds the class with ||| find class named from	count=1
arg	sets [arg] ||| [arg]	count=2
function	body of ||| body	count=1
function_arg	environment [arg_2] ||| [function_1] [arg_2]	count=2
function	returns true [function_2] ||| [returnv_1] ended [function_2]	count=1
arg	[arg_1] pattern is ||| [arg_2] [arg_1]	count=1
module	from the inline text ||| rdoc rd inlineparser	count=1
arg	the store ||| store	count=3
function	is readable ||| readable	count=1
function	[returnv_1] if the ||| [returnv_1] header row [function_2]	count=1
arg	the given string or ||| key	count=1
function	get a single gem ||| get one gem	count=1
function	words wrapped in the ||| word pair	count=1
module	dependency of another gem ||| gem	count=1
arg	b ||| a b	count=2
module	file lists have redundancies ||| gem specification	count=1
function	io ||| io	count=1
arg	named file exists and ||| file_name	count=2
function	deletes the given object ||| delete ?	count=1
arg	id to the ||| id	count=1
returnv	returns the index of ||| integer	count=2
function	file pipe socket ||| file	count=1
rep	a given [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	deletes a child element ||| delete	count=1
arg	given certificates [arg_2] ||| [arg_1] [arg_2]	count=1
arg	maxlen bytes in the ||| maxlen	count=1
arg	adds tuple ||| tuple	count=1
function	to kernel#require ||| require	count=1
function	scans content for rb_define_class ||| do classes	count=1
module	another child @param ||| rexml parent	count=1
arg	returns true if other ||| other	count=1
function_arg	stream and [arg_2] ||| [function_1] [arg_2]	count=3
returnv	ruby object ||| obj	count=2
function	not a device file ||| file	count=1
arg	the message to ||| message	count=1
module	the existing file ||| file	count=1
function	constants public ||| public constant	count=2
function	key path ||| key path	count=2
function	[function_1] body of ||| [function_1] [function_2]	count=3
function	finds an instance ||| find instance	count=2
function	returns a relative path ||| relative path	count=1
function	an ||| name	count=1
module	php markdown ||| markdown	count=1
module	onto the ||| package tarwriter	count=1
function	header names and ||| header	count=1
module	changes ||| fileutils	count=1
module	be set ||| rexml	count=1
function	the result of the ||| verify result	count=1
function	request to ||| request	count=4
module	syslog err log ||| syslog	count=1
function	returns the inverse ||| inv	count=1
module	they ||| rdoc	count=1
function	deletes [function_2] ||| [function_2] [function_1]	count=3
function	from the cross-references in ||| handle special crossref	count=1
arg	version [arg_2] ||| [arg_2] [arg_1]	count=7
function	version from the ||| new	count=1
module	rd ||| rd	count=2
module	receiving module in mod ||| module	count=1
function	set the visibility ||| set	count=1
function	development dependency ||| development dependency	count=2
module	in gem help ||| gem	count=1
arg	into to and returns ||| to	count=2
arg	the given path ||| path	count=2
function	[function_1] activex ||| [function_1] [function_2]	count=1
module	gems to a set ||| gem requestset gemdependencyapi	count=1
function	[function_1] value associated ||| [function_1] [function_2]	count=3
module	to this name ||| openssl x509 name	count=1
module	returns an rdoc :store ||| rdoc servlet	count=1
module	constructs a version from ||| gem version	count=1
function	[function_1] slice of ||| [function_1] [function_2]	count=1
module	list of files ||| specification	count=1
function	[returnv_1] [function_2] the pool still running ||| thwait [returnv_1] [function_2]	count=1
module	with the other parameters ||| drb drbsslsocket sslconfig	count=1
arg	of the members ||| members	count=1
module	yaml ||| psych nodes	count=1
arg	whether or not the ||| headers opt &b;	count=3
module	using identical objects as ||| gem indexer	count=1
returnv	returns the interface ||| string	count=1
arg	the given path as ||| path	count=1
module	to request a checkpoint ||| net	count=1
function	[returnv_1] key ||| [function_2] [returnv_1]	count=1
arg	is ||| num	count=1
arg	one of mod’s descendants ||| mod	count=1
function	to configure ||| dir config	count=1
function	the default [function] of ||| spec [function]	count=1
module	files so that all ||| gem specification	count=1
function	is for a ||| implicit ?	count=1
arg	out_stream [arg_2] ||| [arg_2] [arg_1]	count=2
function	bytes of data in ||| in	count=1
module	ipaddr built ||| ipaddr	count=3
function	without advancing ||| peek	count=1
arg	single ||| file	count=1
module	the inflate stream with ||| zlib inflate	count=1
returnv	buffer and returns ||| string	count=1
arg	nodes matching a given ||| element path namespaces variables	count=1
module	constructor @param ||| rexml	count=1
module	the first instance ||| logger	count=1
function_arg	requirement [arg_2] ||| [function_1] ? [arg_2]	count=1
function	to exit or if ||| to exit	count=1
function_arg	returns [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
module	raw cookie ||| cookie	count=1
module	output ||| ri	count=1
function	[returnv_1] if ||| [returnv_1] listable [function_2]	count=1
function	documented modules sorted ||| sorted	count=1
arg	front with a description ||| front desc renewer	count=1
function	system path ||| system	count=1
arg	from given str ||| str enc separator: '&' use__charset_: false	count=1
function	finishes consumption ||| accept list item end	count=3
function	current executing thread to ||| error=	count=1
module	will live in if ||| generator darkfish	count=1
function	for the specific extra ||| specific extra	count=1
returnv	[returnv] instead ||| [returnv]	count=3
arg	- boolean add ||| add	count=1
module	immediately available ||| openssl ssl sslsocket	count=1
function	returns all [function_2] ||| [function_1] [function_2]	count=5
function	if the set and ||| ?	count=2
arg	if [arg] is not ||| [arg]	count=1
module	[module] :function instance ||| [module]	count=3
arg	returns whether or not ||| headers opt &b;	count=3
arg	using ||| now	count=1
arg	tk setting ||| context single tk	count=2
arg	user user and the ||| user	count=1
arg	headers that you provide ||| headers opt	count=1
module	whether this dsa instance ||| openssl pkey dsa	count=1
module	pstore file data by ||| pstore	count=1
function	check that ||| check	count=1
module	the uri of the ||| drb	count=1
function	send ||| send	count=1
function_arg	loop on [arg_2] ||| [arg_2] [function_1]	count=1
module	strio ||| stringio	count=9
module	up this object’s comment ||| rdoc	count=1
arg	in list ||| list	count=1
function	or a ||| for	count=1
module	po entry in ||| rdoc	count=1
function	progress information if debugging ||| debug msg	count=1
function	a content type string ||| content type	count=1
function	arc tangent ||| atan	count=2
arg	and prefix to ||| level prefix	count=1
arg	given key in the ||| key	count=1
arg	based on [arg] values ||| [arg]	count=2
arg	nothing [arg] ||| [arg]	count=1
module	visitor for ||| tomarkdown	count=1
returnv	[returnv] as described ||| [returnv]	count=3
arg	— ||| ary	count=1
function	get all ||| get all	count=4
function	returns true [function_2] ||| [returnv_1] stream [function_2]	count=2
function_arg	define new [function_1] [arg_2] ||| tkoptiondb new [function_1] [arg_2]	count=3
function	dead or ||| stop	count=1
function	consuming list ||| accept list start	count=2
function	end of [function_2] ||| [function_2] [function_1]	count=1
function	the basic list ||| basic	count=1
arg	args ||| args build_args	count=1
module	progress reporter ||| streamui simpleprogressreporter	count=1
function	struct ||| have struct member	count=1
function	and modules ||| classmodule	count=1
module	stream emission see ||| emitter	count=1
module	for ||| gem requestset gemdependencyapi	count=2
module	the command with ||| command	count=1
returnv	a float ||| float	count=1
function	the last ||| last	count=6
function	square root of ||| sqrt	count=1
module	or that a ||| drb drbsslsocket sslconfig	count=1
function	array of [function_2] ||| [returnv_1] to [function_2]	count=1
module	specified time ||| time	count=1
arg	implicit start and ||| implicit	count=1
function	returns the [function_2] ||| [returnv_1] [function_2]	count=37
module	its polar form ||| complex	count=1
arg	seconds ||| seconds	count=1
function	a pair ||| socketpair	count=1
function	pager? ||| paging ?	count=1
module	undocumented items in ||| rdoc stats	count=1
module	buffer ||| generator state	count=1
arg	id and ||| id	count=2
function	return the integer part ||| fix	count=1
function	todo deprecate ||| create	count=1
function	a potential ||| special hyperlink	count=1
function	object to json ||| json	count=1
arg	returns the result ||| string	count=1
function	class variables ||| class variables	count=2
module	spec for ||| gem specification	count=1
arg	of the sym returning ||| sym	count=1
function_arg	[function_1] [arg_2] to the stream ||| [function_1] [arg_2]	count=1
function	which [function] the ||| [function]	count=1
arg	true enables ||| enable	count=1
arg	given pattern ||| pattern	count=1
function	returns the serial number ||| serial	count=1
returnv	number of the signal ||| fixnum	count=1
function	stream a and ||| stream	count=1
function	of extensions [function] ||| add [function]	count=2
module	json objects ||| json ext generator state	count=2
function	imaginary part ||| imaginary	count=1
function	an integer fixnum ||| i	count=1
module	representation for this ||| ext generator generatormethods	count=2
returnv	an array containing ||| array	count=1
function	of possible ||| possible	count=1
module	state [module] resolutionstate ||| [module]	count=1
function	a block device ||| blockdev	count=2
function_arg	handler [arg_2] ||| [function_1] [arg_2]	count=1
module	class ||| smtp	count=1
arg	iterates over all typeclass ||| typeclass &proc;	count=1
module	object instead of self ||| rdoc toplevel	count=1
module	to dir’s constructor ||| dir	count=1
function	exist ||| gen	count=1
function	exists as a thread-local ||| thread	count=1
module	that :sslcertificate ||| drbsslsocket	count=1
function	on the command line ||| dir config	count=1
function	are commented out that ||| commented out	count=1
function_arg	cosine of [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] month day ||| [arg_2] [arg_1]	count=4
module	this template ||| rinda template	count=1
arg	returns ||| size default	count=1
function	write using shutdown ||| write	count=1
module	the parsing ||| stats	count=6
module	used by ||| ipaddr	count=1
function	files on ||| files	count=1
returnv	returns the resulting ||| string	count=4
module	cert ||| openssl x509	count=1
arg	server using options from ||| server options	count=1
function_arg	subset of [arg_2] ||| [arg_2] [function_1]	count=1
module	dsa ||| openssl pkey dsa	count=2
module	a new ||| sslconfig	count=1
function	dump only ||| dump	count=2
rep	[module_1] [function_arg_2] ||| [module_1] display [function_arg_2]	count=2
arg	ln_s(old new [arg_2] ||| [arg_2] [arg_1]	count=1
function	edge ||| edge	count=1
module	specification is properly formatted ||| specification	count=1
rep	rdoc [function_arg_2] ||| [module_1] [function_arg_2]	count=4
function	a symbolic link false ||| symlink	count=1
module	following certificate and ||| security policy	count=1
function	:markup :heading ||| heading	count=1
arg	by [arg] as a ||| [arg]	count=1
arg	headers you ||| headers opt &b;	count=1
arg	file named filename ||| filename mode flags	count=1
module	generated ||| rdoc generator darkfish	count=2
returnv	copy of str ||| str	count=1
function	return the json ||| json	count=1
module	a new ||| drbsslsocket sslconfig	count=1
module	create ||| rdoc generator	count=1
module	session data ||| cgi session	count=3
module	:method or rdoc ||| rdoc	count=1
function	to its der encoding ||| to der	count=2
rep	true [function_arg_2] ||| [module_1] bool correct [function_arg_2]	count=1
module	of bytes ||| openssl	count=1
function	if this [function_2] ||| [function_2] [function_1]	count=9
arg	child an element ||| element	count=1
function	returns the total ||| total out	count=1
arg	tags and [arg_2] ||| [arg_2] [arg_1]	count=2
function	new certificate is generated ||| certificate	count=1
function	line number ||| line	count=1
function_arg	[function_1] bin on ||| [function_1] [arg_2]	count=4
function	file_name is [function] ||| world [function]	count=4
function	return a nametuple ||| name tuple	count=1
module	tokenize ||| psych scalarscanner	count=1
function	der-encoded ||| der	count=3
arg	out a fully ||| out	count=1
function	[function_1] file for ||| [function_1] [function_2]	count=1
function	returns a true if ||| ?	count=1
function_arg	comparison — ||| -1,_0,_+1 <=> ary	count=1
function	[function] and ||| download to [function]	count=1
arg	[arg_1] cn and ||| [arg_2] [arg_1]	count=2
module	gem fortunately a ||| gem	count=1
function	:“” or not ||| empty	count=1
function	remote [function_2] ||| [function_1] [function_2]	count=4
module	the generated docs will ||| generator darkfish	count=1
module	strio is not ||| stringio	count=1
module	the visitor for ||| markup	count=7
function	reply 3xx ||| continue ?	count=1
arg	name [arg_2] ||| [arg_2] [arg_1]	count=13
module	define ||| erb defmethod	count=1
function_arg	value [arg_2] ||| [function_1] [arg_2]	count=5
arg	running on front with ||| front	count=1
module	in the ||| webrick	count=1
function	a relative path from ||| relative path from	count=1
function	siginfo handler and replaces ||| siginfo handler	count=1
function	objects ||| objects	count=2
function	a list ||| normalized file list	count=1
function	prepares the visitor for ||| item start	count=4
module	:sslprivatekey have ||| drb drbsslsocket sslconfig	count=1
module	to this section ||| rdoc context section	count=1
module	for this version ||| gem version	count=1
module	constructor @param ||| rexml parent	count=1
function	to ||| error=	count=1
function	if the invalid ||| ?	count=1
module	gem is available from ||| gem	count=1
module	process ||| process	count=20
module	the –version ||| versionoption	count=1
arg	log ||| progname &block;	count=1
module	a markdown ||| markup tomarkdown	count=1
arg	[arg_1] [arg_2] the ||| [arg_1] [arg_2]	count=20
module	was set ||| testcase	count=1
module	output buffer ||| zlib zstream	count=2
function	when no handler ||| default handler	count=1
function_arg	[function_1] [arg_2] ||| [function_1] delegator [arg_2]	count=1
function_arg	handle the [arg_2] ||| [arg_2] [function_1]	count=1
function	with ||| named	count=2
function	bubblebabble encoded form ||| bubblebabble	count=1
function_arg	type of filename ||| type filename	count=1
function	prepares ||| accept list	count=4
module	accept_paragraph_plus with [module] ||| [module]	count=1
module	this platform? two ||| platform	count=1
function	[function] effective ||| [function]	count=1
function	returns true [function_2] ||| [returnv_1] directory [function_2]	count=3
module	gem requested ||| gem resolver	count=1
function	complementary error function ||| erfc	count=1
function	at the fatal ||| fatal	count=1
module	attribute manager [module] understands bold ||| [module]	count=1
function	to ||| block quote	count=1
function	character device ||| chardev	count=3
function_arg	if the named ||| ? file_name	count=24
arg	digests match ||| digests	count=1
function_arg	[function_1] [arg_2] ||| uri generic [function_1] [arg_2]	count=3
arg	of fix is greater ||| fix	count=1
arg	[arg_1] [arg_2] and from_version requesting ||| [arg_1] [arg_2] from_version	count=2
function_arg	[function_1] given base_directory ||| [arg_2] [function_1]	count=5
module	the list and ||| optionparser list	count=1
function	issuer certificate of the ||| issuer	count=1
module	the requirement will not ||| gem requirement	count=1
function	a ||| name	count=1
module	rd ||| rdoc rd	count=1
module	other ||| drb drbsslsocket sslconfig	count=2
function	nmake command could be ||| nmake	count=1
arg	ultimate name the associated ||| ignore_constants	count=1
module	response ||| net httpresponse	count=1
module	:imap object and ||| imap	count=1
function	modules sorted ||| get sorted	count=1
module	header ||| httpheader	count=5
function	[returnv_1] object) ||| [function_2] [returnv_1]	count=3
function	resets the internal ||| reset	count=1
function	require_paths ||| require path	count=1
function	compute [function] ||| [function]	count=3
module	deprecate ||| testcase	count=1
module	unless documentation ||| rdoc	count=1
function	[function_1] close on ||| [function_2] [function_1]	count=1
function	of ary [function_2] ||| [returnv_1] [function_2]	count=3
arg	to other following ||| other	count=1
function_arg	[function_1] other_time are ||| [function_1] [arg_2]	count=2
module	psych :nodes :node ||| psych nodes node	count=1
module	a description of ||| openssl	count=1
module	:http#open_timeout to ||| xmlrpc client	count=1
function	[function_1] the file ||| [function_2] [function_1]	count=1
arg	httpresponse object ||| initheader	count=1
module	to configure ||| makemakefile	count=1
function	sets the last ||| last	count=1
function	method waits for that ||| wait for	count=1
function	variable names ||| variables	count=1
arg	match tuple ||| event tuple	count=1
function	[returnv_1] for inspection ||| [function_2] [returnv_1]	count=2
function	or separated ||| class or	count=1
function	singleton methods for ||| singleton methods	count=1
module	of this frame ||| thread backtrace location	count=2
function	the output dir ||| dir	count=1
function	an openssl ||| to name	count=1
arg	that [arg] comes ||| [arg]	count=1
module	this table to ||| csv table	count=2
function	generates the root ||| root	count=1
module	be displayed [module] the ||| [module]	count=1
function	fetches ||| []	count=2
function	klass ||| save method	count=1
arg	the given types ||| types	count=2
returnv	element of self ||| ary	count=1
module	the context ||| context	count=1
module	updates the [module] given string ||| [module]	count=1
function	new ||| new	count=2
function	the requirement of ||| requirement	count=1
function	line ||| dir config	count=1
function	key value pair ||| delete	count=1
function	a version ||| new	count=1
module	<< ||| rdoc singleclass	count=1
function_arg	[function_1] [arg_2] row column it also ||| [function_1] [arg_2] selector	count=4
function_arg	[function_1] is implicit ||| [arg_2] [function_1]	count=3
function	returns true [function_2] ||| [returnv_1] close on exec [function_2]	count=1
function	names of captures as ||| names	count=2
function	if this [function_2] ||| [function_2] file [function_1]	count=1
function	called when no handler ||| default handler	count=1
module	a gem with ||| gem testcase	count=1
function	row [function_2] ||| [function_1] [function_2]	count=1
function	from the cross-references ||| special crossref	count=1
module	component ||| pathname	count=1
function	module using erb ||| erb	count=1
function	[function_1] options ||| [function_2] [function_1]	count=3
function	parameters in ||| params	count=1
module	alias ||| rdoc alias	count=3
function	is still [function_2] ||| [function_2] [function_1]	count=4
returnv	[returnv] only ||| [returnv]	count=2
arg	path and ||| path	count=4
module	up this object’s ||| rdoc generator	count=1
module	a comment ||| comment	count=1
module	list of files so ||| specification	count=1
function	base of natural logarithms ||| e	count=1
module	generate ||| cgi htmlextension	count=3
function	set proxy-authorization ||| proxy	count=1
function	square root ||| sqrt	count=1
module	of ||| gzipreader	count=1
function	% ||| %	count=1
module	of ||| io	count=2
function_arg	with name ||| named name	count=1
arg	the given template and ||| format	count=1
module	yielding a [module] ||| [module]	count=1
module	a set ||| gem requestset gemdependencyapi	count=1
function	finds a [function_2] ||| [function_1] [function_2]	count=7
function	from a serialized ||| marshal	count=1
module	dh to ||| dh	count=2
module	bignum objects ||| bignum	count=1
function	[function_1] time ||| [function_2] [function_1]	count=2
module	gem implementation returns ||| gem	count=1
function	html ||| start	count=1
function_arg	compares this version [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] given spec ||| [function_1] ? requirement activated [arg_2]	count=2
module	for ||| gem specification	count=4
arg	[arg_1] value val ||| [arg_1] [arg_2]	count=1
function	[returnv_1] interface name ||| [function_2] [returnv_1]	count=1
function	file is ||| file	count=1
arg	by [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
arg	comment_location ||| comment_location	count=1
module	:sslprivatekey have been provided ||| drbsslsocket sslconfig	count=1
function	the permissions ||| permissions	count=1
module	of the last row ||| zlib gzipreader	count=1
function_arg	a [arg_2] ||| [arg_2] [function_1]	count=6
function	the public [function_2] ||| [function_1] [function_2]	count=2
function	progress ||| progress	count=2
function	for each entry ||| each entry	count=2
module	returns the http ||| net http	count=1
function	for header ||| header	count=1
function	valid and ||| valid commercial	count=1
function	parameters [function_2] ||| [function_1] [function_2]	count=3
function	the scheme ||| scheme=	count=1
module	to pass ||| rdoc ri	count=1
function_arg	a copy [arg_2] ||| [arg_2] [function_1]	count=1
function	in the comparison ||| <=>	count=1
function	method names set ||| set visibility for	count=1
function	[function_1] loopback address ||| [function_1] [function_2]	count=1
module	available ||| ssl	count=1
function	diagonal ||| diagonal	count=1
module	dependencies ||| requestset	count=2
function	server in non-blocking ||| nonblock	count=1
function	[function_1] remote ||| [function_2] [function_1]	count=8
module	visitor ||| rdoc markup tottonly	count=2
module	set ||| requestset	count=1
function	message writer ||| message	count=1
function	[returnv_1] [function_2] to the method object ||| [returnv_1] [function_2]	count=1
module	an rdoc :attr ||| rdoc parser	count=3
module	rdoc ||| rdoc store	count=6
arg	the signing_key [arg_2] ||| [arg_1] signing_cert [arg_2]	count=1
function	a relative ||| relative	count=1
rep	parsing [function_arg_2] ||| [module_1] [function_arg_2]	count=6
module	to grab ||| thread	count=1
function	same [function] another with ||| [function]	count=1
function	[function_1] spec ||| [function_1] [function_2]	count=2
module	bytes ||| sslsocket	count=1
module	for marking up ||| markup	count=1
function	[returnv_1] [function_2] manager ||| [returnv_1] [function_2]	count=1
arg	given number of bytes ||| bytes	count=1
function	normalize ||| normalize	count=3
arg	[arg] elements ||| [arg]	count=1
function	a single gem name ||| one gem name	count=1
function_arg	level [arg_2] ||| [arg_2] [function_1]	count=1
arg	object returning that object ||| sym obj	count=1
returnv	when this [returnv] ||| [returnv]	count=1
arg	from a string according ||| string 1 jan -4712	count=2
module	this dependency require a ||| gem dependency	count=1
arg	for context ||| context	count=2
module	this input method ||| irb inputmethod	count=2
returnv	of ||| fixnum	count=11
module	of ||| rdoc stats	count=2
module	workspaces stack ||| context	count=1
module	have been provided or ||| drbsslsocket	count=1
function	[function_1] special sequences ||| [function_1] [function_2]	count=1
module	check ||| rexml text	count=1
arg	[arg_1] front ||| [arg_2] [arg_1]	count=1
arg	for the key ||| key	count=2
module	template ||| rinda template	count=1
function	sets $? to ||| waitpid	count=1
module	the visitor ||| markup totableofcontents	count=1
function	disconnected from the ||| disconnected	count=1
module	the c code ||| parser c	count=1
module	parameters ||| drbsslsocket sslconfig	count=2
function	of an alias ||| alias	count=1
function	retrieves the name ||| name	count=1
function	from ||| block quote	count=1
function_arg	cosine [arg_2] ||| [function_1] [arg_2]	count=3
function	to copy the ||| copy	count=1
module	comment ||| generator markup	count=1
arg	[arg_1] signing_key and ||| [arg_2] [arg_1]	count=2
module	the calling [module] will ||| [module]	count=1
function	credentials file ||| check credentials	count=1
function	otherwise [function] false ||| ole respond [function]	count=1
function	creates [function_2] ||| [returnv_1] [function_2]	count=95
arg	[arg_1] #auth_type ||| [arg_1] [arg_2]	count=1
arg	method modifies the comment ||| comment	count=1
function	a comment ||| attr comment	count=1
module	depending on the ||| levelednotifier	count=1
function	tts ||| accept block quote	count=1
function	finds a class ||| find class	count=2
function	name of the ||| name	count=1
function	text of width ||| text	count=1
arg	in [arg] ||| [arg] user	count=1
function	if the current platform ||| ?	count=2
module	last row read ||| gzipreader	count=1
function	ipv6 ||| ipv6	count=1
function	returns ||| doc	count=1
function	net :http#open_timeout to ||| timeout=	count=1
arg	at uri [arg_2] ||| [arg_1] [arg_2]	count=1
module	an attribute to this ||| rexml	count=1
function	for ||| join	count=1
arg	[arg_1] comment ||| [arg_1] single tk [arg_2]	count=1
function	a serious security hole ||| set debug output	count=1
function	the ||| dir	count=2
function	saved group id functionality ||| sid available	count=1
function_arg	list [arg_2] ||| [function_1] out [arg_2]	count=2
function	allow [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] path matches ||| [arg_2] [function_1]	count=2
arg	given extend_method ||| extend_method	count=1
module	set ||| gem requestset	count=1
arg	the extension for file_name ||| file_name	count=1
function	to the ||| accept block quote	count=1
module	by rdoc :generator ||| rdoc	count=1
function	an openssl :x509 ||| to name	count=1
module	matrix where ||| matrix	count=2
function	the interface name ||| name	count=1
arg	path as the irb ||| path	count=1
function	checks [function_2] ||| [function_2] [function_1]	count=1
arg	in file_name ||| file_name	count=2
function_arg	[function_1] section ||| [arg_2] [function_1]	count=2
module	generates [module] document ||| [module]	count=1
arg	a string according to ||| string 1 jan	count=2
arg	freefunc that will ||| freefunc	count=1
function	[returnv_1] the key ||| [function_2] [returnv_1]	count=1
function	installs ||| install	count=5
arg	spec ||| spec generate_rdoc generate_ri	count=1
module	and ||| drb drbsslsocket	count=1
arg	isapop is true otherwise ||| isapop	count=1
module	block ||| requestset	count=1
arg	[arg] in ||| realm [arg]	count=6
module	sets up a ||| rdoc	count=1
function_arg	[function_1] [arg_2] ||| [function_1] head [arg_2]	count=2
module	for ||| markup totableofcontents	count=2
function	object that ||| external	count=2
arg	the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=26
function	if the stream is ||| stream end ?	count=1
arg	to copy(), but set ||| set mailbox	count=1
function	the setter for the ||| setter	count=1
function_arg	the value [arg_2] ||| [function_1] [arg_2]	count=5
module	in the store ||| store	count=1
module	always returns ||| nilclass	count=1
arg	[arg_1] reference ||| [arg_1] [arg_2]	count=1
function	already exist ||| sub	count=1
function	tests to your test ||| tests	count=1
arg	[arg_1] safe - ||| [arg_2] [arg_1]	count=1
function	best available yaml ||| yaml	count=1
module	against this ||| rss baselistener	count=2
function	returns true [function_2] ||| thwait [returnv_1] [function_2]	count=6
function	digest to the initial ||| digest	count=1
function	present in ||| has	count=1
module	removes ||| gem dependencylist	count=1
function	contains no elements ||| empty	count=1
function	if the “transfer-encoding” header ||| ?	count=1
module	all ||| gem	count=1
arg	mod in [arg_2] ||| [arg_1] [arg_2]	count=1
module	output ||| markup	count=2
function	query as ||| query	count=1
arg	to address [arg_2] ||| [arg_2] [arg_1]	count=3
arg	n by n matrix ||| n zero	count=1
function	3xx reply ||| continue	count=1
module	trusted certificate ||| gem security trustdir	count=1
arg	start_pos ||| start_pos	count=1
module	integer values ||| integer	count=1
function	ensure [function_2] ||| [function_2] [function_1]	count=1
module	multiple ||| array	count=1
module	specs in ||| gem specification	count=1
rep	given [function_arg_2] ||| [function_arg_2] [module_1]	count=1
function	returns the version ||| version	count=1
function	if ||| commercial ?	count=1
module	from [module] returning ||| [module]	count=1
function	[function_1] the latter ||| [function_2] [function_1]	count=3
module	the default visibility ||| module	count=1
function	state with a single ||| state	count=1
module	gem under one ||| gem	count=1
function	a thread-local variable ||| thread variable	count=2
function_arg	the cross-references [arg_2] ||| [function_1] [arg_2]	count=1
function	includes that ||| and includes	count=1
module	the other parameters ||| drbsslsocket sslconfig	count=1
module	cert signature is ||| openssl x509	count=1
function	is ||| number ?	count=2
module	cert signature is made ||| openssl x509 request	count=1
arg	subject and key ||| subject key age extensions	count=1
arg	n matrix a ||| n zero	count=1
module	session ||| openssl ssl session	count=5
function_arg	for scope [arg_2] ||| [arg_2] [function_1]	count=1
function	method sends ||| data	count=1
function	classes and [function_2] ||| [function_1] [function_2]	count=2
function	[returnv_1] if ||| [returnv_1] has key [function_2]	count=3
arg	[arg] object ||| [arg]	count=1
arg	method in the ||| method	count=1
module	for use with analysis ||| gem basicspecification	count=1
function	default signing [function_2] ||| [function_2] [function_1]	count=2
function	it doesn t create ||| popen2	count=1
module	last component of the ||| pathname	count=1
arg	the exponent ||| exponent	count=1
arg	enables [arg_2] ||| [arg_2] [arg_1]	count=2
module	been provided or that ||| drb drbsslsocket sslconfig	count=1
function	calls verify ||| verify	count=1
function	in a ||| in	count=1
function	the option ||| option	count=2
function	directives in a ||| directives in	count=2
function	present in hsh ||| has	count=1
function	directories the ||| sub directories	count=1
arg	in to_str ||| to_str	count=1
arg	from [arg] ||| [arg]	count=6
function	the name [function_2] ||| [function_2] [function_1]	count=1
arg	httprequest object req to ||| req body	count=1
module	documentation unless ||| rdoc	count=1
function	public instance [function_2] ||| [function_2] [function_1]	count=1
function	a pager program to ||| pager	count=1
module	other ||| drbsslsocket sslconfig	count=2
arg	rid [arg_2] ||| [arg_1] [arg_2]	count=2
module	the point of call ||| module	count=1
module	of this singleton ||| singleclass	count=1
arg	headers that ||| headers	count=1
rep	registers [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	list ||| file list	count=1
function	verify internal consistency ||| verify internal consistency	count=3
arg	scripts to run the ||| bindir	count=1
arg	eoutvar to ||| eoutvar	count=1
arg	[arg] when ||| [arg]	count=3
function	is [function] ||| protected method [function]	count=3
function	inspect to convert ||| inspect	count=1
function	the original [function_2] ||| [function_2] [function_1]	count=3
module	gem is available ||| gem	count=1
arg	the first limit ||| limit	count=1
module	tts ||| rdoc markup	count=1
function	sets the [function_2] ||| [function_2] [function_1]	count=17
module	gem :security :digest_algorithm ||| gem security	count=1
function_arg	the setter [arg_2] ||| [arg_2] [function_1]	count=5
function	handle ||| handle	count=2
module	row read from this ||| zlib gzipreader	count=1
module	tomdoc from ||| tomdoc	count=1
function	[function] klass ||| [function] with value if	count=1
function	at the object level [returnv_1] [function_2] ||| [returnv_1] [function_2]	count=4
function	a private key associated ||| private ?	count=1
module	the tuplebag returning ||| tuplebag	count=1
function	list of all ||| list	count=1
module	to ||| generator markup	count=1
function	the number of elements ||| size	count=2
function	[function] keys and ||| [function]	count=1
returnv	:redo ||| symbol	count=1
function	a ||| to name	count=2
module	which was called ||| uncaughtthrowerror	count=1
module	directory by stou stor ||| net ftp mlsxentry	count=1
function	the currently executing ||| current	count=1
module	properly-space list of ||| rdoc	count=1
function	values [function] ||| [function]	count=1
function	to resolve ||| resolve	count=1
arg	nil if the name ||| name	count=1
arg	body text name ||| text name	count=2
module	start emitting ||| emitter	count=1
module	items in ||| stats	count=1
module	and ||| zlib deflate	count=1
arg	ln_s(old new options ||| dest options	count=1
module	the keep_files ||| gem	count=1
function	returns true if ||| bool intersect ?	count=1
module	defined in xmlrpc ||| xmlrpc client	count=1
function	:context :section objects referenced ||| section contents	count=1
module	up this object’s ||| rdoc generator markup	count=1
function	removes a siginfo ||| remove siginfo	count=2
module	this dsa instance ||| dsa	count=1
arg	threads ||| threads	count=1
module	creates an rdoc ||| rdoc parser ruby	count=4
module	parameters provided ||| drbsslsocket sslconfig	count=1
function	[function_1] [function_2] a ||| [function_2] [function_1]	count=11
function	list of all the ||| normalized file list	count=1
arg	matches [arg_2] ||| [arg_1] [arg_2]	count=1
function	version requirement ||| requirement	count=1
arg	string according ||| string 1	count=2
function	or separated ||| get class or module	count=1
arg	[arg_1] given text ||| [arg_1] [arg_2]	count=1
arg	method in the receiver ||| symbol method	count=1
module	tobs ||| rdoc markup tobs	count=1
module	a druby reference to ||| drb	count=1
function	from ||| []	count=1
function	still [function_2] ||| [function_2] [function_1]	count=4
arg	mod to the ||| mod	count=1
function	if the invalid byte ||| ?	count=1
module	where gem ||| gem	count=1
module	a ||| requestset	count=1
arg	the scripts to run ||| bindir	count=1
function	using a pager? ||| paging	count=1
returnv	string that contains the ||| string	count=1
function_arg	sections from [arg_2] ||| [function_1] [arg_2]	count=1
module	dependency in the given ||| requestset gemdependencyapi	count=1
arg	pattern ||| pattern n	count=1
function_arg	if data matches ||| ? data	count=1
module	instance has ||| openssl pkey	count=1
module	[module] :anymethod ||| [module] parser	count=2
returnv	a true ||| bool	count=1
arg	spec in the context ||| spec	count=1
returnv	in ||| integer	count=1
module	ensures that :sslcertificate and ||| drb	count=1
arg	only if the two ||| other	count=1
module	process to its ||| gem	count=1
function	a siginfo [function_2] ||| [function_1] [function_2]	count=4
arg	tags for an attribute ||| name start stop	count=1
module	returns the ||| rdoc	count=1
arg	in req [arg_2] ||| [arg_2] [arg_1]	count=1
module	lib paths to $load_path ||| gem	count=1
function	[returnv_1] before the ||| [returnv_1] [function_2]	count=4
function	[returnv_1] parsed elements ||| [function_2] [returnv_1]	count=4
function	as a ||| to r	count=4
function	is a block device ||| blockdev	count=1
arg	alias ||| alias	count=1
function	[returnv_1] if ||| [returnv_1] handles [function_2]	count=1
function	set as ||| new	count=1
arg	methods ||| methods singleton &block;	count=1
function	options with on ||| dir config	count=1
function	sets ||| dir config	count=1
function_arg	parameters [arg_2] ||| [function_1] [arg_2]	count=1
arg	nothing [arg] because ||| [arg]	count=1
function_arg	[function_1] the body_file ||| [function_1] [arg_2]	count=3
arg	[arg_1] [arg_2] string and returns the ||| [arg_2] [arg_1]	count=4
function	first ||| text=	count=1
function	of natural logarithms to ||| e	count=1
arg	on dir and ||| dir	count=1
function	of dependencies ||| dependencies	count=2
function	older version of ruby ||| ruby	count=1
arg	parameters year ||| year	count=1
function	copies a region ||| copy	count=2
function_arg	[function_1] [arg_2] ||| [function_1] base_method [arg_2]	count=1
arg	so that [arg] comes first ||| [arg]	count=1
arg	state is ||| state	count=1
function	of memory ||| malloc	count=1
function_arg	the value ty ||| import value ty	count=1
module	a list ||| rdoc ri driver	count=1
module	method ||| interp	count=2
function	methods [function_2] ||| [function_2] class [function_1]	count=1
function	[function_1] key ||| [function_2] [function_1]	count=3
function	[returnv_1] the method ||| [function_2] [returnv_1]	count=1
module	specs in sorted ||| gem specification	count=1
module	for [module] which ||| [module]	count=1
function	[function] corresponding ||| [function]	count=2
function	returns the [function_2] ||| [function_1] [function_2]	count=7
module	or ||| drb drbsslsocket sslconfig	count=2
function	don’t define [function] in your ||| [function]	count=1
function_arg	a special [arg_2] ||| [function_1] [arg_2]	count=2
function	[function] from ||| [function]	count=5
function	the file ||| external	count=2
module	key unless a private ||| openssl pkey dh	count=1
function_arg	[function_1] :specification spec ||| [function_1] [arg_2]	count=2
function	to the power ||| power	count=1
module	the document ||| rexml document	count=1
module	using ||| convert	count=1
function	returns [returnv_1] [function_2] matrix ||| matrix [returnv_1] [function_2]	count=1
function	url to [function_2] ||| [function_2] relative [function_1]	count=1
module	the requested gem ||| gem resolver activationrequest	count=1
arg	from each [arg] parameter ||| [arg]	count=1
returnv	none is given returns ||| string	count=1
module	descriptive fields in the ||| gem	count=1
arg	headers that ||| headers opt &b;	count=1
function	the full name ||| full name	count=1
function	the visitor for ||| accept list item start	count=4
module	have been provided ||| drbsslsocket	count=1
arg	using resolvers ||| resolvers dns.new	count=1
arg	creates a [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
module	with ||| drb	count=1
function	argument valid ‘nz_number’ in ||| valid nz number	count=1
function	returns its [function] or ||| [function]	count=1
function	verifies that this gem ||| verify	count=1
function	returns a proxy ||| find proxy	count=1
returnv	this block ||| symbol	count=1
function	returns the arc sine ||| asin	count=1
arg	[arg] according to ||| [arg]	count=9
returnv	returns ||| float	count=1
arg	[arg_1] configuration config ||| [arg_2] [arg_1]	count=3
module	instance of [module] :handle ||| [module]	count=1
arg	the date this ||| date	count=1
arg	specified [arg_2] ||| [arg_2] [arg_1]	count=6
arg	[arg] once ||| [arg]	count=3
function_arg	[function_1] parser for ||| [arg_2] [function_1]	count=2
arg	for method on ||| method	count=1
function	if the operating ||| ?	count=7
function	[function_1] [function_2] containing the ip address ||| ipaddr [function_1] [function_2]	count=1
module	the other parameters provided ||| drb drbsslsocket	count=1
function	@return the index of ||| index	count=1
function	= ||| chomp	count=1
arg	nodes matching a ||| path namespaces variables	count=1
module	represents @return edge ||| resolver molinillo	count=1
function	starts tracing object allocations ||| trace object allocations start	count=1
module	returns a new pointer ||| fiddle pointer	count=2
function	everything ||| unsatisfied by	count=1
function_arg	[function_1] [arg_2] 0 or +1 if ||| -1,_0,_+1 [function_1] [arg_2]	count=1
function	the main page ||| main	count=1
module	if supplied ||| rexml	count=1
arg	default according ||| default	count=2
function	of the buffer to ||| buffer	count=1
function_arg	given http [arg_2] ||| [function_1] [arg_2]	count=1
module	that ||| stringio	count=1
module	method ||| smtp	count=1
module	the status ||| httpstatus	count=1
module	indicating who caused ||| resolver dependencyrequest	count=1
module	been provided ||| drb	count=1
arg	opt ||| opt	count=1
module	a float ||| float	count=1
function	the ||| config	count=2
function	for the executable ||| find executable	count=1
arg	of x ||| x	count=8
module	method ||| client proxy	count=1
arg	the scripts to run ||| filename bindir	count=1
function	pass output through ||| setup	count=1
returnv	returns a hash that ||| hash	count=1
arg	optional freefunc that will ||| freefunc	count=1
module	database with the ||| yaml dbm	count=1
arg	item on res ||| res item	count=2
module	stor appe ||| ftp mlsxentry	count=1
arg	time [arg] ||| [arg]	count=3
function	satisfied ||| requirement satisfied	count=1
module	handling of [module] with ||| [module]	count=1
arg	from text ||| text	count=2
module	been provided or ||| drb drbsslsocket	count=1
arg	of a given string ||| string	count=2
module	initialized when the ||| syslog	count=1
arg	at x y is ||| x y	count=1
module	onto the io ||| gem package tarwriter	count=1
function	the request is ||| ?	count=2
function	query ||| query=	count=1
function	unique classes ||| unique classes	count=2
module	the visitor ||| tottonly	count=1
function	[function_1] on the ||| [function_1] [function_2]	count=2
arg	heading of name ||| name	count=1
function	a slash ||| relative	count=1
function	default signing [function_2] ||| gem [function_1] [function_2]	count=2
module	block form ||| gem requestset	count=1
function	leap ||| leap	count=1
module	an ri ||| rdoc ri	count=1
function	class methods ||| class method	count=2
function	from the ||| arg	count=1
function	[function] needed for ||| [function]	count=2
function	option ||| platform option	count=2
arg	optional label ||| label	count=1
function_arg	hostname [arg_2] ||| [arg_2] [function_1]	count=4
function	visitor ||| list item	count=4
arg	[arg_1] file_name ||| [arg_2] [arg_1]	count=1
function	represents wednesday ||| wednesday	count=1
module	instance is created ||| logger	count=1
function_arg	methods [arg_2] ||| [function_1] [arg_2]	count=6
function	[function_1] class or ||| [function_1] [function_2]	count=2
module	calling to_s), converts it ||| json ext generator generatormethods	count=1
function	[returnv_1] if ||| [returnv_1] gregorian leap [function_2]	count=1
module	environment ||| env	count=1
arg	containing sets ||| sets	count=1
function	undocumented items in ||| doc stats	count=1
rep	[module_1] symlink name ||| [module_1] [function_arg_2]	count=1
function	objects size in bytes ||| objects size	count=1
function	the reason this block ||| reason	count=1
module	other ||| drb	count=1
arg	host port ||| host port	count=3
function	attr entries matching the ||| methods matching	count=1
returnv	str with all ||| str	count=1
function	a zero value ||| zero	count=1
arg	given job ||| job	count=1
arg	of real ||| big real	count=1
arg	this special ||| special	count=1
returnv	a ||| string	count=1
function	and their descriptions ||| descriptions	count=1
module	of ||| zlib	count=1
arg	[arg_1] comment ||| [arg_1] [arg_2]	count=15
module	uri ||| uri	count=9
function	the basic ||| basic	count=1
module	a remote [module] ||| [module]	count=1
function	typical rfc 2822 ||| rfc2822	count=1
module	for marking ||| rdoc generator	count=1
module	markdown parser ||| markdown	count=1
function_arg	[function_1] the dependency ||| [function_1] [arg_2]	count=1
function	names of class variables ||| class variables	count=1
returnv	the epoch ||| a_rational	count=1
arg	up to limit bytes ||| limit	count=1
function	the ssl [function_2] ||| [function_1] [function_2]	count=1
arg	resources for name ||| name	count=1
module	inline text ||| rd inlineparser	count=1
module	generated docs ||| generator	count=1
module	method for shell ||| shell	count=2
module	a parseerror ||| parseerror	count=1
function	on ||| dir	count=1
arg	exception while handling ||| exception	count=1
function_arg	[function_1] gem ||| [function_1] [arg_2]	count=2
function	tts from ||| quote	count=1
function_arg	takes [arg_2] ||| [function_1] [arg_2]	count=3
arg	the method_body and ||| method_body	count=1
module	multiplies the [module] by x ||| [module]	count=1
module	to grab ||| mutex	count=1
arg	the #auth_type of this ||| reload_db	count=1
module	up this object’s ||| generator	count=1
module	[module] file and ||| rdoc [module]	count=3
arg	num and numeric ||| numeric	count=1
function	digest to the ||| digest !	count=1
function	a spec and the ||| spec	count=1
function	if the document ||| document	count=1
module	if it isn’t ||| thread	count=1
module	listening for connections ||| drbprotocol	count=1
arg	str ||| str enc separator: '&' use__charset_: false isindex: false	count=1
function	converting parameters under control ||| printf	count=1
function	buffer to ||| buffer	count=1
module	that ||| drb drbsslsocket sslconfig	count=4
module	entry using ||| acl aclentry	count=1
module	bytes that ||| openssl ssl	count=1
function	[function_1] auth plain ||| [function_1] [function_2]	count=1
arg	::capture3 captures the standard ||| cmd stdin_data: '' binmode: false opts	count=1
function	map ||| mapping	count=3
function	less ||| <=	count=1
module	match [module] ||| gem [module]	count=1
function_arg	names of [arg_2] ||| [function_1] [arg_2]	count=1
function	index of ||| index	count=2
function_arg	[function_1] anchor tag ||| [arg_2] [function_1]	count=1
function	for a child ||| child	count=1
function	the current backtrace ||| backtrace	count=1
arg	of [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
arg	for item [arg_2] ||| [arg_2] [arg_1]	count=2
arg	based on req if ||| req res	count=1
function	encoding object that represents ||| external	count=2
arg	time sec ||| sec	count=1
arg	[arg_1] string ||| rfc3339 [arg_2] [arg_1]	count=1
function	new array [function_2] ||| [function_2] [returnv_1]	count=1
function	[function_1] for development ||| [function_2] [function_1]	count=2
function	makefile for ||| create makefile	count=1
function_arg	a [arg_2] ||| [function_1] eval [arg_2]	count=1
module	:source and after gem ||| gem	count=1
module	a method/attribute ||| rdoc methodattr	count=1
function	sets ||| config	count=1
arg	to the directory dir ||| dir	count=1
function_arg	is relative [arg_2] ||| [function_1] url [arg_2]	count=1
module	representation for ||| generator generatormethods	count=2
function	argument valid [function_2] ||| [function_2] [function_1]	count=2
arg	list with [arg_2] ||| [arg_2] [arg_1]	count=2
module	1 rdoc ||| rdoc	count=2
function	the difference [function] ||| [function]	count=1
arg	n of the ||| n	count=1
module	don’t already exist ||| generator darkfish	count=1
function_arg	if obj [arg_2] ||| [arg_2] [function_1]	count=2
module	visibility ||| module	count=1
function	make directories ||| make temp directories	count=2
module	options with on ||| makemakefile	count=1
arg	enables ||| debug	count=1
function_arg	[function_1] list ||| [function_1] [arg_2]	count=3
function	the visibility ||| visibility	count=1
module	visitor ||| markup	count=7
arg	comment and [arg_2] ||| [arg_1] [arg_2]	count=2
module	docs will ||| rdoc generator	count=1
function_arg	to [arg_2] ||| [function_1] [arg_2]	count=1
arg	message ||| msgstr	count=1
module	append ||| net imap	count=1
module	adds tts ||| rdoc	count=1
function	activates the gems ||| use gemdeps	count=1
function_arg	body of [arg_2] ||| [arg_2] [function_1]	count=1
module	[module] the result ||| [module]	count=1
arg	from [arg] ||| obj [arg]	count=1
function	version of ||| version for	count=1
function	value ||| create value	count=1
returnv	copy of str with ||| str	count=2
function	[returnv_1] did ||| [function_2] [returnv_1]	count=3
module	object ||| ext generator state	count=2
module	prepares ||| rdoc markup tordoc	count=5
function	specific ||| specific	count=1
module	and waits if it ||| thread mutex	count=1
module	tobs that is ||| rdoc markup tobs	count=1
function_arg	greater than [arg_2] ||| bool [function_1] [arg_2]	count=1
function	proxy for this ||| proxy from	count=1
function	modules sorted ||| sorted	count=1
returnv	use vector[] [returnv] ::elements ||| [returnv]	count=1
module	first instance is ||| syslog	count=1
module	returns ||| digest instance	count=3
function	multicast organization-local scope ||| mc orglocal	count=1
returnv	proc to call ||| proc	count=1
function	sanitize the descriptive fields ||| sanitize	count=1
module	be ||| parent	count=1
arg	signed by the issuer ||| issuer	count=1
module	to ||| rdoc ri	count=1
function	at the error ||| error	count=1
arg	container and the given ||| container	count=1
arg	timeout ||| timeout	count=2
function	the visitor ||| start	count=7
function	zero ||| zero	count=2
arg	month day ||| month day	count=2
function	root node ||| root node	count=2
function	is an rdoc-schemed ||| special rdoclink	count=1
function	of type of ||| type	count=1
arg	name called [arg_2] ||| [arg_1] [arg_2]	count=1
returnv	that ||| integer	count=1
arg	month [arg_2] ||| [arg_2] [arg_1]	count=6
arg	from the spec and ||| spec	count=1
module	big to ||| bignum	count=1
function	don’t define [function] in ||| [function]	count=1
module	working [module] of the ||| [module]	count=1
module	according to the policy ||| policy	count=1
arg	name following tk setting ||| context single tk	count=1
arg	day ||| day	count=1
module	for use by a ||| rdoc	count=1
module	a new [module] with an ||| gem security [module]	count=1
function	current source string that ||| source	count=1
module	are both time ||| time	count=1
module	available ||| thread	count=1
function	spec [function_2] ||| [function_1] [function_2]	count=3
function	variable names defined ||| variables	count=1
arg	[arg_1] [arg_2] ||| [arg_1] path [arg_2]	count=3
module	possible matching specifications ||| molinillo specificationprovider	count=1
function	named public [function_2] ||| [function_2] [function_1]	count=1
module	fiddle :pointer instance ||| fiddle	count=1
returnv	as a string for ||| string	count=1
module	bytes that are ||| ssl sslsocket	count=1
arg	elements in string ||| string elements	count=3
function	header names ||| header	count=1
module	based on ||| iwidgets	count=5
function	returns true [function_2] ||| [returnv_1] key [function_2]	count=7
arg	[arg_1] in file1 ||| [arg_1] [arg_2]	count=3
function	port to use for ||| port	count=1
function	returns the empty string ||| to s	count=1
function	as instance method ||| method	count=1
function	a proppatch ||| proppatch	count=1
function	list satisfied? ||| ok ?	count=1
function	properly-space list ||| generator	count=1
function	reads the contents of ||| read	count=1
module	for restricting gems to ||| requestset	count=1
function_arg	encodes [arg_2] ||| [arg_2] [function_1]	count=1
function	patch ||| patch	count=1
function	using inspect to ||| inspect	count=1
arg	response as an httpresponse ||| initheader	count=1
function_arg	returns [function_1] [arg_2] matrix as a vector ||| matrix [function_1] [arg_2]	count=1
function	is still readable when ||| readable after	count=2
function	next line from ||| gets	count=2
function_arg	cross-references [arg_2] ||| [function_1] [arg_2]	count=1
module	accept_paragraph ||| paragraph	count=1
arg	text of ||| text	count=1
function_arg	page [arg_2] ||| [function_1] [arg_2]	count=1
function	abbreviate the spec for ||| abbreviate	count=1
function	zero-length ||| zero	count=1
module	the other parameters ||| drb	count=1
function	form rdoc-…: ||| rdoclink	count=1
function	attr entries matching ||| methods matching	count=1
arg	[arg_1] from start ||| [arg_2] length [arg_1]	count=1
module	this object’s ||| rdoc generator	count=1
module	to irb ||| irb	count=1
function	old [function_2] ||| [function_2] [function_1]	count=1
function_arg	http method ||| request method	count=1
module	win32ole_method ||| win32ole_method	count=1
arg	other wraps ||| other	count=1
arg	entry point [arg] ||| lib [arg] paths	count=3
function	[function_1] [function_2] n denominator value d ||| rational [function_2] [function_1]	count=1
function	switches ||| by col !	count=1
function	[function_1] login ||| [function_2] [function_1]	count=2
arg	[arg_1] to length ||| [arg_1] [arg_2]	count=2
function	directories the generated ||| sub directories	count=1
arg	orig ||| orig	count=1
arg	parts to ||| parts	count=1
returnv	2 ||| array	count=1
arg	tuple ||| tuple expires	count=1
module	of this singleton ||| rdoc singleclass	count=1
module	this response ||| httpresponse	count=1
function	[returnv_1] did not ||| [returnv_1] to [function_2]	count=3
function	from comment if there ||| tomdoc	count=1
function	other ||| eql ?	count=1
function	win32 error of the ||| win32	count=1
module	available for ||| openssl ssl sslsocket	count=1
module	restricting ||| gem requestset gemdependencyapi	count=2
function	of seconds since the ||| f	count=1
module	task with the ||| task	count=1
module	of parsing for ||| rdoc stats	count=2
function	[function_1] args ||| [function_1] [function_2]	count=5
function_arg	sends [function_1] [arg_2] ||| net imap [function_1] [arg_2]	count=1
function	this method sends ||| data	count=1
module	the comment are ||| comment	count=2
function	method identifier for the ||| allocation method id	count=1
module	drb ||| drb	count=6
function	amount of time in ||| time	count=1
function	with ||| pre proc	count=1
module	state and ||| gem	count=1
function	[function] the ||| load [function]	count=3
module	if supplied will ||| parent	count=1
module	output ||| rdoc markup tottonly	count=2
returnv	and ||| self	count=1
function	turned off by ||| start	count=1
function	after the [function_2] ||| [function_2] [function_1]	count=1
function	comment ||| comment	count=4
arg	httpresponse ||| data initheader	count=1
function	last item ||| last	count=1
function	escaping from the cross-references ||| handle special crossref	count=1
function	set local variable ||| local variable set	count=2
function	of the [function_2] ||| [function_2] [returnv_1]	count=1
function	last error of ||| last error	count=2
function	is relative ||| gen relative	count=1
function	[function_1] key path ||| gem [function_1] [function_2]	count=1
module	case that calls ||| markup formattertestcase	count=1
arg	out_stream for size ||| out_stream size initial_message	count=1
module	the feed ||| feed entry	count=1
function_arg	given http method ||| request method	count=1
module	properly-space ||| rdoc	count=1
module	this formdata which may ||| webrick httputils formdata	count=1
function	from the ||| from	count=1
arg	on front with ||| front	count=1
module	authoritative instance of the ||| gem commandmanager	count=1
function	message writer [function_2] ||| [function_2] [function_1]	count=2
arg	mod [arg_2] ||| [arg_1] [arg_2]	count=1
module	provides ||| array	count=1
function	certificate is generated with ||| setup certificate	count=1
function	utf-32 ||| toutf32	count=1
module	multiple rdoc :markup ||| rdoc classmodule	count=1
function	amongst the specs that ||| inactive	count=1
function	[returnv_1] [function_2] ||| [returnv_1] json creatable [function_2]	count=1
function	define [function_2] ||| [function_1] [function_2]	count=1
function	still ||| after	count=2
module	items ||| stats	count=1
module	waits if it isn’t ||| thread	count=1
arg	outputs [arg] to out ||| [arg] out	count=1
function	scans content ||| do	count=4
function	[function] with 14 ||| to [function]	count=1
function	adds methods to ||| methods	count=1
arg	data to the underlying ||| data	count=1
module	is ||| markup formatter	count=1
function	the priority of ||| priority	count=1
function	relative path from the ||| relative path from	count=1
arg	file descriptor as ||| mode perm	count=1
function_arg	the power of ||| ** a	count=1
function	extra ||| specific extra	count=2
function	set the read ||| read	count=1
function	the uri of the ||| drburi	count=1
function	verifies the signature ||| verify	count=1
module	retrieve the [module] ||| [module]	count=2
arg	element is ||| element	count=1
function	setgid bit set ||| setgid	count=1
function	[returnv_1] [function_2] ||| [returnv_1] thread variable [function_2]	count=2
module	enumerates ||| servlet	count=1
function	sine ||| sin	count=1
arg	res whether ||| res	count=1
arg	options from the mount ||| options	count=1
returnv	mask value for ||| priority_mask	count=1
returnv	if supplied will be ||| instance	count=1
function	invokes the ||| map	count=1
module	this activation ||| resolver activationrequest	count=1
arg	in source ||| source proc	count=2
function	have ||| setup	count=1
module	the authorization header ||| httpheader	count=1
arg	new [arg_2] ||| [arg_2] [arg_1]	count=1
module	hash ||| ext generator generatormethods hash	count=1
module	might be ||| rdoc parser ruby	count=1
module	through the [module] ||| [module]	count=1
module	tempdir unless the keep_files ||| testcase	count=1
module	dependencylist ||| gem dependencylist	count=1
arg	[arg_1] [arg_2] and from_version requesting ||| [arg_1] [arg_2]	count=2
function	executables and batch files ||| executables	count=1
function_arg	[function_1] [arg_2] ||| [function_1] file [arg_2]	count=9
function_arg	methods matching name ||| methods matching name	count=1
function	number of ||| stats	count=1
function	executable or if ||| ?	count=1
function	ensure ||| ensure dependency	count=2
module	buffer ||| zlib zstream	count=1
module	this object has ||| gem	count=2
module	sets the ||| module	count=1
function_arg	main [arg_2] ||| [arg_2] [function_1]	count=1
function	finishes the ||| finish	count=1
function	[function] based ||| [function]	count=2
arg	exception if [arg] is ||| [arg]	count=1
arg	is not a child ||| child	count=1
function	which to [function_2] ||| [function_2] [function_1]	count=1
returnv	array of key value ||| array	count=1
module	adds ||| markup tottonly	count=2
arg	the given representation ||| string comp start	count=2
function	returns the major ||| major	count=2
module	passwords from the ||| webrick httpauth	count=1
module	copy to ||| gem indexer	count=1
function	that represents the encoding ||| encoding	count=2
function	end of [function_2] ||| [function_1] [function_2]	count=1
function	convert self to euc-jp ||| toeuc	count=1
function	element [function] ||| delete [function]	count=3
returnv	a mask ||| priority_mask	count=1
module	various “with” options with ||| makemakefile	count=1
function	[function] of ||| [function]	count=94
arg	time ||| time	count=4
function	from a ||| []	count=1
function	[function_1] a single ||| [function_1] [function_2]	count=1
function	is this server alive? ||| alive ?	count=1
function	the visitor ||| accept list	count=4
function_arg	[function_1] pattern ||| [function_1] [arg_2]	count=3
function	[function_1] defined by ||| [function_2] [function_1]	count=15
module	version from the command ||| gem command	count=1
function	while the given ||| while	count=1
function	constant ||| const	count=2
function	[function_1] plain ||| [function_2] [function_1]	count=2
function_arg	value in the database [function_1] [arg_2] ||| sdbm value [function_1] [arg_2]	count=2
module	for ||| rdoc markup tomarkdown	count=2
arg	:requestset [arg] ||| [arg]	count=3
module	“with” options with ||| makemakefile	count=1
function	a relative [function_2] ||| [function_2] [function_1]	count=3
module	will live ||| generator darkfish	count=1
module	hash instance ||| generator generatormethods hash	count=1
function	[returnv_1] [function_2] ||| [returnv_1] tomdoc [function_2]	count=1
function	method identifier for ||| allocation method id	count=1
arg	the path ||| path	count=11
function	default [function_2] ||| [function_1] [function_2]	count=16
module	to ||| gem streamui	count=1
function	a header [function_2] ||| [function_2] [function_1]	count=2
module	gems to a ||| gem	count=1
arg	obj ||| rng obj	count=1
arg	other_ary ||| other_ary	count=1
returnv	the status of the ||| status	count=1
arg	in klass_name ||| klass_name	count=1
function	name of this class ||| name	count=1
module	smtp ||| smtp	count=3
module	called ||| streamlistener	count=1
module	certificate and is valid ||| security policy	count=1
function	deletes all messages on ||| delete all	count=1
module	uri of ||| drb drbobject	count=1
arg	in ||| options	count=1
function	all tuples in the ||| all template	count=1
module	by rdoc ||| rdoc	count=1
function	extensions to build when ||| extensions	count=1
module	indicate that ||| resolver dependencyrequest	count=1
function	[returnv_1] the locale ||| [returnv_1] [function_2]	count=1
module	enumerator but ||| enumerator	count=1
module	alias of a singleton ||| rdoc alias	count=1
arg	of name from ||| name	count=2
returnv	subsequently defined methods ||| self	count=1
function	containing the following keys ||| session cache stats	count=1
arg	integer safe - boolean ||| safe	count=1
function	proxy ||| get proxy	count=1
arg	given set [arg_2] ||| [arg_1] [arg_2]	count=3
module	with the ||| testcase specfetchersetup	count=1
function_arg	and from_version requesting [function_1] [arg_2] dependencyrequest ||| [function_1] [arg_2]	count=3
arg	read from src ||| src filename	count=1
arg	parsing from a ||| start	count=4
function	listed the dependency ||| requester	count=1
module	if supplied will ||| rexml parent	count=1
function	only ||| eql	count=1
module	for uri :ldap ||| uri ldap	count=1
function	array of values ||| values	count=1
module	keep_files environment ||| gem	count=1
function_arg	no question ||| no question default	count=1
module	or nil if ||| stat	count=1
function_arg	transcoded [arg_2] ||| [arg_2] [function_1]	count=2
function	time the ||| time	count=1
arg	orig if ||| orig	count=1
function	[function_1] out that ||| [function_1] [function_2]	count=2
arg	mailbox to [arg_2] ||| [arg_2] [arg_1]	count=1
module	other parameters ||| drb	count=1
function	of interpreting leading characters ||| f	count=1
arg	context with comment ||| tk comment ignore_constants	count=2
arg	of name ||| name	count=4
arg	source_uri to ||| source_uri	count=1
module	if they don’t ||| generator darkfish	count=1
returnv	kernel#to_enum except it ||| lazy_enum	count=1
function_arg	listener [arg_2] ||| [arg_2] [function_1]	count=1
module	iso 8601 format this ||| datetime	count=1
module	uri :mailto ||| uri mailto	count=2
function	that are word break ||| special prefixes	count=1
function	and the ||| get file and	count=1
arg	realm to ||| realm	count=1
module	task ||| rdoctask	count=1
function	full paths in ||| full paths	count=1
module	uri :ftp ||| uri ftp	count=1
function	the sticky bit set ||| sticky	count=1
module	removes ||| gem uninstaller	count=1
function	are the same ||| eql	count=1
arg	specified key false ||| key	count=1
function	normalize the ||| normalize	count=1
arg	ruby data structure obj ||| obj opts	count=1
arg	in file1 ||| file1	count=1
module	registered ||| objectspace weakmap	count=2
module	an ||| rdoc	count=2
function	range object which represents ||| content range	count=1
function	resolve the requested dependencies ||| resolve	count=1
returnv	of ||| encoding	count=2
function	text mode storing ||| puttextfile	count=1
module	this block was terminated ||| localjumperror	count=1
function_arg	is [arg_2] ||| [arg_2] [function_1]	count=16
module	matrix or a ||| matrix	count=1
function	requirement ||| requirement	count=1
arg	from certificate with the ||| certificate	count=1
function	status ||| status	count=8
function	full names of ||| names	count=1
arg	:context#irb_path and name as ||| name	count=1
function	[returnv_1] if ||| matrix [returnv_1] real [function_2]	count=1
function	all gem version ||| all gem names and versions	count=1
function_arg	environment variable env ||| environment env	count=2
arg	[arg] is ||| big [arg]	count=3
function	is relative to ||| gen relative	count=1
function_arg	[function_1] [arg_2] ||| datetime datetime [function_1] [arg_2] hour minute second offset	count=1
module	the component ||| generic	count=1
function	compute [function] the ||| [function]	count=1
function	[function_1] [function_2] ||| [function_2] gems use full [function_1]	count=2
module	a gem couldn’t be ||| gem	count=1
returnv	as ||| string	count=1
function_arg	for extensions val ||| set extensions val	count=1
function	installed ||| installed	count=2
function	system [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] at key ||| [arg_2] [arg_1]	count=6
arg	as usual ||| mode: 0 options	count=1
arg	given port default ||| port	count=1
function	up a ||| setup	count=1
module	set ||| rexml	count=1
module	turned off by ||| rdoc	count=1
function_arg	from obj’ ||| from obj	count=1
function	converts the crossref ||| crossref	count=1
function	an uncaught signal ||| signaled	count=1
module	if ||| mutex	count=1
module	state and removes the ||| gem testcase	count=1
module	the specifications that ||| molinillo specificationprovider	count=1
function_arg	token listener [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] at filename ||| [function_1] [arg_2]	count=1
arg	compares this ||| other	count=1
function	an alias for ||| alias for	count=2
module	tells the download ||| verbosedownloadreporter	count=1
function	using that name ||| config	count=1
arg	if numeric ||| numeric	count=1
module	will live in ||| rdoc	count=1
function	as a pipeline with ||| pipeline r	count=1
returnv	the encoding object that ||| encoding	count=2
function	encoding of the file ||| external encoding	count=2
function	has been turned off ||| start	count=1
arg	an httprequest [arg_2] ||| [arg_2] [arg_1]	count=6
function	various “with” options with ||| config	count=1
arg	service running on front ||| front desc renewer	count=1
function	[function_1] directories ||| [function_1] [function_2]	count=1
function	with on the command ||| dir config	count=1
module	dependency graph ||| resolver molinillo specificationprovider	count=1
module	response received was a ||| smtp response	count=2
module	this method sends a ||| net smtp	count=1
function	setter for the query ||| query=	count=1
module	last component ||| pathname	count=1
module	about the parser to ||| rdoc parser ruby	count=1
function	installed parser ||| installed parser	count=2
module	the number ||| openssl ssl	count=1
module	often [module] should be ||| [module]	count=1
function	makefile for your extension ||| create makefile	count=1
module	the spec for ||| specification	count=1
returnv	returns a string in ||| string	count=1
function	[function] results ||| [function]	count=2
module	this object’s ||| generator	count=1
function	path to [function_2] ||| [function_2] [function_1]	count=2
module	strio to the ||| stringio	count=1
arg	where z ||| z	count=5
function	adds a new ||| add	count=1
module	the ftp session ||| net ftp	count=1
arg	in [arg_1] [arg_2] ||| [arg_2] group [arg_1]	count=5
function	create a list ||| normalized file list	count=1
module	fetching enabled? ||| gem localremoteoptions	count=2
module	setacl [module] ||| [module]	count=3
function	[function_1] resolution ||| [function_2] [function_1]	count=1
module	uri has a path ||| uri generic	count=1
module	c struct ||| cstructentity	count=1
function	free spaces in ||| avail	count=1
module	class this constant ||| rdoc constant	count=1
module	udpsocket using ||| udpsocket	count=1
function	[function_1] handler ||| [function_1] [function_2]	count=3
module	string into a ||| cgi	count=1
function	returns the value ||| value	count=1
module	task with the given ||| task	count=1
module	the [module] :parser ||| [module]	count=1
function	the command line ||| dir	count=1
function	idle ||| idle	count=1
function	sets the named ||| set	count=1
module	by the [module] name ||| [module]	count=1
arg	target name that the ||| target	count=1
arg	new_name for ||| new_name	count=1
module	dependency graph ||| gem resolver molinillo specificationprovider	count=1
module	marks ||| rdoc	count=2
function	the definition of this ||| definition	count=1
module	systemexitexception with ||| gem systemexitexception	count=1
function	returns the arc cosine ||| acos	count=1
returnv	returns the resulting hash ||| string	count=4
returnv	elements of ||| ary	count=1
function	rescue ||| rescue	count=1
module	used with http ||| net http	count=1
arg	running the given ||| command... options	count=1
function	scope ||| scope	count=1
module	and ||| ocsp	count=1
function_arg	[function_1] net :httpresponse ||| [function_1] [arg_2]	count=1
function	excludes its end value ||| exclude end	count=1
arg	a temporary [arg_2] ||| [arg_1] [arg_2]	count=2
module	dependency graph? @return ||| gem resolver molinillo	count=1
function	the comparison ||| <=>	count=2
arg	equal to real ||| real	count=1
function	the adjugate ||| adjugate	count=1
arg	[arg_1] x ||| [arg_1] [arg_2]	count=1
function	other parameters ||| setup	count=1
arg	directory dir ||| dir mode	count=2
function	headers ||| set headers	count=1
module	self ||| string	count=3
function	returns the protocol ||| protocol	count=1
function	returns the ||| to s	count=3
function_arg	[function_1] path matches ||| [function_1] pattern [arg_2]	count=2
function	[returnv_1] following keys ||| [returnv_1] [function_2]	count=1
function	dump ||| dump	count=4
function	gems from a git ||| git	count=1
arg	method modifies the comment ||| context comment	count=1
module	in ||| darkfish	count=1
module	documentation generator ||| rubygemshook	count=1
arg	the element ||| element	count=2
function_arg	creates a [arg_2] ||| date date [function_1] [arg_2]	count=2
arg	new set of tags ||| start stop	count=1
module	[module] first ||| [module]	count=1
module	the ||| markup tottonly	count=4
function	the same content ||| eql	count=1
function	the date ||| date	count=2
function	remove the [function] from ||| delete [function]	count=1
module	response ||| response	count=4
module	and number ||| rdoc stats	count=1
function	amongst the specs ||| inactive	count=1
function_arg	[function_1] [arg_2] comes first and returns ||| array ary rotate [function_1] [arg_2]	count=3
module	using readline ||| irb readlineinputmethod	count=1
function	and deletes all ||| delete all	count=2
module	match this platform? two ||| gem platform	count=1
function	reference ||| ole reference	count=1
function	list of dependencies that ||| dependencies	count=1
function	requirement of ||| requirement	count=1
module	accept_hard_break ||| hardbreak	count=1
function_arg	[function_1] the inline ||| [arg_2] [function_1]	count=1
returnv	the list ||| array	count=1
function	the build info directory ||| build info dir	count=1
function	specifies the rdoc options ||| rdoc options	count=1
function	to disk for ||| generate	count=1
returnv	arguments ||| self	count=1
returnv	returns the denominator ||| integer	count=1
function	:toplevel corresponding ||| top level	count=1
arg	in store ||| store	count=1
function	[function_1] a header ||| [function_2] [function_1]	count=1
module	fileoverflow exception if ||| boundedstream	count=1
function	a suppressed [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] all gem ||| [function_2] [function_1]	count=2
module	an rdoc :attr ||| rdoc	count=3
function	a hash [function_2] ||| [function_2] [returnv_1]	count=4
function	command for ||| command	count=1
module	the [module] immediately ||| [module]	count=1
function	returns the index of ||| index	count=1
function	[returnv_1] individual raw ||| [returnv_1] [function_2]	count=1
function	the files in ||| files	count=1
module	this ocsp ||| ocsp	count=1
arg	in pairs with ||| pairs	count=1
function_arg	[function_1] gives it ||| [arg_2] [function_1]	count=4
function	has no requirements ||| none	count=1
function	message ||| message loop	count=1
function_arg	to filter [arg_2] ||| [arg_2] [function_1]	count=1
arg	escapes a string ||| str	count=1
arg	the key ||| key	count=3
function	modification time mtime ||| mtime=	count=1
function_arg	a module mod ||| add module mod	count=1
function	overwriting any existing attribute ||| attribute	count=1
module	real time used ||| benchmark	count=1
function	or ||| store for	count=1
function	an openssl ||| name	count=1
function	the form contained multipart/form-data ||| multipart ?	count=1
function	[function_1] defined by ||| [function_1] [function_2] ? symbol	count=15
function	name as ||| to	count=1
function	[function_1] for the ||| [function_2] [function_1]	count=1
module	is ||| rdoc markup formatter	count=1
function	registered trademark symbols in ||| to html	count=1
module	the [module] is empty ||| [module]	count=2
module	have been ||| drbsslsocket sslconfig	count=1
arg	list with an evaluation ||| list	count=1
module	uri ||| drbobject	count=1
module	generates [module] with ||| [module]	count=1
module	marks ||| formatter	count=1
function	the files of the ||| files	count=1
module	a drb :drbsslsocket ||| drb drbsslsocket	count=1
arg	on front ||| front	count=1
function	request is for a ||| ?	count=1
arg	version tags and an ||| version tags	count=1
module	encodes this ||| openssl	count=1
module	:nodes :mapping ||| nodes mapping	count=1
module	immediately ||| ssl sslsocket	count=2
function	if quirks mode is ||| quirks mode ?	count=1
module	:break ||| localjumperror	count=1
module	if it ||| thread mutex	count=1
module	session ||| cgi session	count=1
arg	adds [arg] ||| [arg]	count=2
module	and certificate chain ||| security	count=1
function	[function] beginning of ||| beginning of line [function]	count=1
arg	file to the server ||| file	count=2
module	a ||| markup	count=6
module	verifying ||| openssl netscape	count=1
returnv	number of names passed ||| integer	count=2
function	[returnv_1] if ||| [returnv_1] sid available [function_2]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] zero [function_2]	count=3
module	sometimes [module] results are ||| [module]	count=1
module	for index ||| gem indexer	count=1
module	a marker for rdoc ||| rdoc stats verbose	count=1
arg	the [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=4
function	ensure that the ||| ensure dependency	count=1
function_arg	a class [arg_2] ||| [function_1] [arg_2]	count=6
module	encodes this dsa to ||| openssl pkey dsa	count=1
function	check is passed ||| number ?	count=1
function	display purposes ||| done adding	count=1
module	a pop3 ||| net pop3	count=1
function_arg	[function_1] returns string ||| [arg_2] [function_1]	count=2
module	gem :source ||| gem source	count=1
module	the requirement will not ||| requirement	count=1
function_arg	[function_1] [arg_2] destroyed ||| [function_1] [arg_2]	count=2
function	[function_1] delegator instance ||| [function_1] [function_2]	count=1
function_arg	:installer [arg_2] ||| pre [function_1] [arg_2]	count=1
module	database contains ||| sdbm	count=1
function	[returnv_1] arrays ||| [returnv_1] to [function_2]	count=1
arg	named file exists ||| file_name	count=2
module	class ||| singleclass	count=2
function	written ||| write	count=1
module	hax todo deprecate and ||| gem testcase	count=1
function	execute the given block ||| realtime	count=1
function	openssl ||| email to	count=1
module	attr with body ||| rdoc attr	count=1
module	stored in the ||| webrick utils	count=1
module	smtp ||| net smtp	count=3
module	the 2 dependency ||| gem resolver	count=1
arg	front ||| front desc renewer	count=1
arg	prompt [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the message to ||| message flags date_time	count=1
function	instance methods cache accessor ||| instance methods	count=1
module	that all file ||| gem specification	count=1
function	the password ||| password	count=1
module	issuer ||| security trustdir	count=1
module	flush to ||| markup	count=1
arg	object which provides #method_missing ||| server prefix args meth delim	count=1
arg	decimal to the specified ||| decimal	count=3
function	a finalizer ||| define finalizer	count=1
function	the ||| stats	count=1
function	switches the mode ||| by col or row !	count=1
function	named ||| named	count=1
arg	at the addr address ||| addr	count=1
module	:resolver :dependencyrequest from a ||| testcase	count=1
function	and number of ||| stats	count=1
returnv	object as an array ||| array	count=1
arg	system cpu time cutime ||| cutime	count=1
function	local address fc00 :/7 ||| local ?	count=1
function	:specification from ||| spec	count=1
module	removes ||| gem testcase	count=1
module	an indexspecification is created ||| resolver indexspecification	count=1
arg	the indicated mailbox ||| mailbox attr	count=2
function	[function_1] [function_2] in the database ||| yaml dbm [function_2] [function_1]	count=3
arg	string ||| string 1 jan -4712 00:00:00	count=2
module	dependency ||| gem resolver	count=1
arg	handler id [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	response [arg_2] ||| [function_1] [arg_2]	count=1
rep	[module_1] [function_arg_2] ||| [module_1] bool correct [function_arg_2]	count=1
function	[function_1] a suppressed ||| [function_2] [function_1]	count=1
arg	out a fully ||| out indent	count=1
arg	returns string ||| string	count=1
function	form for restricting ||| platform	count=1
module	builds ||| gem ext builder	count=1
arg	the amount ||| msg width display	count=1
module	was ||| testcase	count=1
function	that a ||| setup	count=1
function	[function_1] given file ||| irbloader [function_1] [function_2] path priv	count=1
arg	data structure [arg] and ||| [arg]	count=1
module	[module] when ||| [module]	count=2
module	a properly-space list ||| options	count=1
function	with [function] ||| [function]	count=1
function	returns [function_2] ||| [function_2] [returnv_1]	count=48
function_arg	dependency and [arg_2] ||| [arg_2] [function_1]	count=2
function	the generated ||| gen	count=1
module	list of generators ||| rdoc	count=1
arg	the given extensions for ||| age extensions	count=2
function	encoding name ||| encoding name	count=4
function	formatted backtrace to ||| backtrace	count=1
arg	[arg_1] port using ||| [arg_2] [arg_1]	count=4
module	of the peer ||| ssl sslsocket	count=1
function	all [function] dependency on ||| dependent [function]	count=1
function	the status class corresponding ||| []	count=1
module	an empty acllist ||| acl acllist	count=1
function	a hash [function_2] ||| [returnv_1] [function_2]	count=4
arg	the string or ||| string	count=1
module	in the generated json ||| json ext generator state	count=1
function	quits ||| exit	count=1
returnv	self for which the ||| ary	count=2
module	the length ||| rdoc stats	count=1
function	returns a string ||| string	count=1
function	can ||| dir	count=1
function_arg	[function_1] named ||| [arg_2] [function_1]	count=31
module	creates ||| markup preprocess	count=1
module	row read from this ||| zlib	count=1
function	in order ||| order	count=1
arg	[arg] current ||| [arg]	count=2
function	:markup :paragraph ||| paragraph	count=3
function	[function_1] line number ||| [function_1] [function_2]	count=1
module	socket option name ||| socket option	count=1
function	the called name of ||| callee	count=1
module	represents @return edge ||| gem resolver molinillo dependencygraph	count=1
module	pointer ||| pointer	count=1
arg	by looking ||| container tk	count=1
arg	root ||| root	count=1
arg	:dependency objects deps ||| deps	count=1
function	the user ||| dir	count=1
function	if ||| read ?	count=1
function	file pipe ||| file	count=1
function	write ||| write	count=4
module	and ||| thread	count=1
function	when dependency is a ||| ?	count=1
function	list of the private ||| private	count=1
function	in ||| rindex	count=1
module	by calling ||| kernel	count=1
returnv	supplied ||| instance	count=1
module	generates [module] ||| [module]	count=1
function	[function_1] method ||| [function_2] [function_1]	count=19
function	of singleton methods ||| singleton methods	count=1
function	returns true [function_2] ||| [returnv_1] compare by identity [function_2]	count=1
function_arg	[function_1] — returns ||| -1,_0,_+1 [function_1] [arg_2]	count=1
module	with hax todo deprecate ||| testcase	count=1
module	accept_paragraph_i with [module] ||| [module]	count=1
module	aliases from a c ||| parser c	count=1
function	issuer certificate of the ||| issuer of	count=1
module	digest in ||| digest	count=1
function	loads ri data ||| load method	count=1
arg	list n is a ||| list options	count=1
module	handle is ||| handle	count=1
function_arg	[function_1] other_time ||| [arg_2] [function_1]	count=2
module	:sslprivatekey have been provided ||| drb drbsslsocket	count=1
module	returns strio ||| stringio	count=1
module	for the feed or ||| feed	count=1
module	are immediately ||| ssl	count=1
function	the base ||| base	count=2
module	the objectid as defined ||| objectid	count=1
module	the ||| set	count=1
module	if they ||| rdoc generator	count=1
function	adds paths ||| add also	count=1
function	adds the given ||| add ?	count=1
module	message extractor for ||| rdoc generator pot messageextractor	count=1
function	store to disk for ||| generate	count=1
returnv	returns the value ||| value	count=2
function	return internal super class ||| internal super	count=1
module	spec ||| gem specification	count=2
arg	starting with needed ||| needed	count=1
arg	on the named ||| file_name	count=1
module	rdoc driver to this ||| rdoc rdoc	count=1
function	removes ifdefs that ||| ifdefs in	count=1
module	info about the parser ||| parser	count=1
module	up a ||| rdoc ri driver	count=1
function	the proxy for ||| proxy	count=1
function	yields to a ||| inspect	count=1
function	convert self to utf-16 ||| toutf16	count=1
function	last win32 [function_2] ||| [function_1] [function_2]	count=4
function_arg	adds parts ||| push parts	count=1
module	to [module] to ||| [module]	count=1
function	returns true [function_2] ||| [returnv_1] field [function_2]	count=1
function	de-serializes ||| marshal load	count=1
function	multicast organization-local scope ||| mc orglocal ?	count=1
module	for this tms object ||| benchmark tms	count=1
function_arg	[function_1] current_set ||| [function_1] [arg_2]	count=5
arg	depth first [arg] yielding ||| ignore_error: [arg]	count=1
function	version of ruby ||| old ruby	count=1
function	[returnv_1] method ||| [returnv_1] allocation [function_2]	count=1
function	instance variable named by ||| instance variable	count=1
function	returns true [function_2] ||| [returnv_1] file [function_2]	count=1
function	socket address as ||| to	count=1
function	hex-encoded hash value ||| hexdigest	count=1
function_arg	[function_1] in text ||| [arg_2] [function_1]	count=2
function	the generated docs ||| gen	count=1
module	to a set ||| requestset gemdependencyapi	count=1
function	can then ||| config	count=1
function	the version of the ||| version for	count=1
function	adds the ||| add	count=5
function	[function] of the ||| to [function]	count=1
function	any existing attribute by ||| attribute	count=1
function_arg	contains [arg_2] ||| [function_1] ? [arg_2]	count=5
module	generate an ||| cgi htmlextension	count=1
module	if ||| rexml parent	count=2
module	prepares the visitor for ||| rdoc markup tottonly	count=1
function	isn’t or if the ||| ?	count=2
function	spec and the source_uri ||| spec	count=1
function	the stream is finished ||| stream	count=1
arg	the method_body ||| method_body	count=1
rep	[module_1] filter val ||| [module_1] [function_arg_2]	count=2
arg	using signer_cert and signer_key ||| signer_cert signer_key	count=1
module	in the rd ||| rd	count=1
function	[function_1] an ||| [function_2] [function_1]	count=3
module	a rdoc ||| rdoc ri	count=2
module	with the ||| gem testcase specfetchersetup	count=1
function_arg	type of [arg_2] ||| [arg_2] [function_1]	count=1
module	attempt ||| drb drbunknown	count=1
function	::double_fig class method ||| double fig	count=1
module	for ||| markup tomarkdown	count=2
function_arg	[function_1] ty ||| [arg_2] [function_1]	count=4
arg	that the dependency ||| dependency	count=1
arg	logs data at ||| data	count=1
function	use to ||| dir	count=1
module	sets the default visibility ||| module	count=1
function	recursively ||| r	count=1
module	method ||| rdoc anymethod	count=1
function_arg	and from_version [function_1] [arg_2] dependencyrequest ||| [function_1] dep from_name from_version [arg_2]	count=3
function	[returnv_1] freeze status ||| [returnv_1] [function_2]	count=1
arg	creates a vector [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=1
module	an environment variable ||| env	count=4
module	that ||| drb drbsslsocket	count=2
module	this object’s ||| markup	count=1
module	creates server ||| gem server	count=1
function	host to connect to ||| host	count=1
module	markdown ||| tomarkdown	count=2
arg	object to a ||| object	count=1
function	of the gem ||| gem	count=1
function	[function_1] options to ||| [function_1] [function_2]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] socket [function_2]	count=2
module	for rdoc ||| rdoc stats verbose	count=1
function	remove [function_2] ||| [function_2] [function_1]	count=1
function	the fiber-local variables as ||| keys	count=1
function_arg	method :both [arg_2] ||| [function_1] type [arg_2]	count=1
module	with hax todo ||| gem testcase	count=1
arg	the sequence of idx ||| idx	count=1
module	creates an rdoc :attr ||| rdoc parser	count=3
arg	whether or not ||| opt &b;	count=3
function	returns a ||| from	count=1
module	read ||| gzipreader	count=1
function_arg	with [arg_2] ||| [arg_2] [function_1]	count=8
function	nested array [function_2] ||| [function_2] [returnv_1]	count=1
returnv	value of the variable ||| value	count=1
function	integer memory location ||| to i	count=1
module	by [module] :proxy ||| net [module]	count=1
arg	connected [arg] using unix ||| [arg]	count=1
module	a valid json ||| json ext	count=1
function	to a ||| platform	count=1
function	on the command ||| config	count=1
function	all gem version ||| all gem names	count=1
function	the version ||| version	count=5
module	to create returns an ||| tomdoc	count=1
function	[returnv_1] only ||| [function_2] [returnv_1]	count=1
function	to ||| timeout=	count=1
function	paths for undocumented classes ||| also in	count=1
module	creates an rdoc ||| rdoc markdown	count=1
function	owner and group ||| chown	count=1
function	[returnv_1] [function_2] following edges within this ||| dependencygraph vertex [returnv_1] [function_2]	count=1
function	server advertises auth cram-md5 ||| capable cram md5 auth	count=1
returnv	self for ||| ary	count=2
function	if there ||| has conflicts ?	count=1
function	true if whitespace is ||| whitespace	count=1
module	response received was ||| net smtp response	count=2
returnv	[returnv] containing implementation-dependent ||| [returnv]	count=1
module	this drbobjecttemplate matches ||| rinda drbobjecttemplate	count=1
arg	limit ||| limit	count=2
function	integer [function_2] ||| [returnv_1] [function_2]	count=1
function	for directives ||| for directives	count=2
module	returns the oldest ||| gem resolver requirementlist	count=1
function	added to ||| added	count=1
module	smtp/tls smtps [module] over direct ||| [module]	count=1
module	command to change the ||| net imap	count=1
module	[module] the ||| [module]	count=23
module	cookie with the ||| webrick cookie	count=1
function	sorted by salience ||| get sorted module	count=1
function	constant with ||| const get	count=1
function_arg	adds [arg_2] ||| [function_1] certificate_id [arg_2] reason revocation_time this_update next_update	count=1
module	workspaces ||| context	count=1
module	that a new ||| drbsslsocket	count=1
module	drbobject from ||| drbobject	count=1
arg	returns whether this dependency ||| dependency	count=1
module	rdoc :toplevel ||| rdoc	count=2
module	in this context ||| context	count=6
arg	file named file to ||| cmd file	count=1
function	a template ||| template	count=1
function_arg	square root [arg_2] ||| [function_1] [arg_2]	count=3
module	in the spec ||| gem specification	count=1
function	prepares the visitor ||| list item	count=4
module	gathering tt sections ||| rdoc markup tottonly	count=1
function	local address fc00 ||| local ?	count=1
module	the visitor ||| totableofcontents	count=1
module	is in conflict with ||| conflict	count=1
module	a availableset as ||| availableset	count=1
module	visitor ||| tottonly	count=1
function	generated indices into the ||| indices	count=1
module	method ||| ri driver	count=1
module	mod is a ||| module	count=4
function	true if ||| bool installed ?	count=1
function	converts ||| display	count=1
function	encoding of [function_2] ||| [function_2] [function_1]	count=6
arg	ary with an ||| ary	count=1
function	warn ||| warn	count=2
function	normalize the list of ||| normalize	count=1
module	instead of ||| toplevel	count=1
arg	day ||| hour	count=1
module	c ||| rdoc parser c	count=1
function	matches this ||| match	count=1
module	restricting gems ||| gem	count=1
arg	title [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] object allocations ||| [function_2] [function_1]	count=5
module	that a new ||| sslconfig	count=1
function	the major ||| major	count=2
function	a get ||| get	count=2
module	to another version ||| version	count=1
module	severity level allows for ||| logger	count=1
arg	on the addresses option ||| addresses	count=1
module	for ||| rdoc markup totableofcontents	count=2
module	json objects ||| json ext	count=2
module	off by ||| codeobject	count=1
function	sorted by salience ||| sorted	count=1
function	[function_1] [function_2] ||| [function_2] in [function_1]	count=1
arg	with text ||| text	count=1
function	if the current ||| ?	count=2
module	net :http#read_timeout ||| xmlrpc	count=1
function	url ||| http url	count=2
arg	of numeric which may ||| numeric	count=1
function	for dn ||| set dn	count=1
function	yield would execute ||| iterator	count=1
module	this document ||| markup document	count=2
module	alias ||| alias	count=2
module	it to the pager ||| ri driver	count=1
function	[function] of ||| config file [function]	count=1
module	or that a new ||| drbsslsocket	count=1
function	and returns string ||| set	count=1
returnv	visibility for subsequently ||| self	count=1
function	instance method ||| method	count=2
module	block ||| requestset gemdependencyapi	count=2
arg	with anchor tag an ||| anchor tag	count=1
function_arg	initializes this object [function_1] [arg_2] duplicated/cloned and returns it ||| ext generator state initialize [function_1] [arg_2]	count=1
function	returns a ||| to	count=20
function	whitespace is ||| whitespace	count=1
function_arg	[function_1] object ref ||| [function_1] uri [arg_2]	count=1
arg	httpresponse object ||| body initheader	count=3
function	returns the angle part ||| angle	count=1
module	‘:’ in json objects ||| json ext	count=1
function	visitor ||| accept list	count=4
module	by using that ||| makemakefile	count=1
function	version [function] show in ||| [function]	count=1
function	self-signed certificate with an ||| cert self signed	count=1
arg	:row from [arg_1] [arg_2] are expected to be ||| [arg_1] [arg_2]	count=1
arg	of level ||| level	count=1
function	a pipe false otherwise ||| pipe	count=1
arg	text to properly ||| text	count=1
function_arg	verify to [arg_2] ||| [arg_2] [function_1]	count=1
arg	representation of bitmap ||| bitmap	count=1
module	of nametuple objects ||| nametuple	count=1
arg	given ||| code_object &block;	count=1
module	arguments ||| module	count=1
module	of ||| ssl sslsocket	count=2
module	of bytes that ||| sslsocket	count=1
module	determines whether the response ||| net smtp response	count=2
function	[function_1] headers are ||| [function_2] [function_1]	count=2
function_arg	given key [arg_2] ||| [function_1] ? [arg_2]	count=2
function	ssl parameters ||| ssl params	count=2
module	terminated ||| localjumperror	count=1
function	set as the ||| new	count=1
module	syslog notice log level ||| syslog logger	count=1
function	to return the index ||| index	count=1
arg	with a ||| name version	count=2
arg	false then [arg] must ||| is_ret [arg]	count=1
arg	according to config an ||| config default	count=1
function	source string that was ||| source	count=1
module	through _getobj_ ||| delegator	count=1
returnv	immediately ||| integer	count=1
arg	from requester ||| requester	count=1
module	name to ||| x509 name	count=1
function	dump only the raw ||| dump	count=1
function	[returnv_1] if ||| [returnv_1] tty [function_2]	count=2
function	[function_1] bytes ||| [function_2] [function_1]	count=3
module	the tuplebag which when ||| tuplebag	count=1
returnv	from the ||| instance	count=1
module	a xml-rpc [module] document when ||| [module]	count=1
arg	name with [arg_2] ||| [arg_2] [arg_1]	count=8
function_arg	mkcol request [arg_2] ||| [arg_2] [function_1]	count=2
function	[returnv_1] that contains ||| [returnv_1] [function_2]	count=2
arg	[arg_1] list to ||| [arg_2] [arg_1]	count=6
function	individual raw ||| raw	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=8
module	gems ||| gem requestset	count=1
function_arg	[function_1] string ||| [function_1] eval [arg_2]	count=1
function_arg	paths for [arg_2] ||| [function_1] [arg_2]	count=1
module	rdoc :generator ||| rdoc classmodule	count=1
function_arg	[function_1] method_body and ||| [function_1] scan args [arg_2]	count=1
function	returns the make ||| make	count=1
module	process ||| gem	count=1
arg	headers and fields which ||| headers fields	count=1
module	documentation unless ||| rdoc codeobject	count=1
function	“with” ||| dir	count=1
function	:http request ||| request	count=1
module	time objects with ||| time	count=1
function	given string or ||| key	count=1
arg	year of the ||| year	count=3
arg	of length n of ||| n	count=1
module	object’s ||| generator markup	count=1
function	the marshal library ||| marshal load	count=2
function	the path ||| set path	count=1
arg	associated with io ||| io level strategy options	count=1
function	the destination encoding name ||| destination encoding name	count=1
function	the visitor for ||| accept	count=4
function	classes and [function_2] ||| [function_2] [function_1]	count=2
module	executes a ||| testcase	count=1
module	the conflicting dependency’s name ||| resolver conflict	count=1
module	state object configured by ||| ext generator state	count=1
module	edge represents @return edge ||| resolver molinillo	count=1
function	[function_1] ip addresses ||| [function_2] [function_1]	count=3
module	to identify the ||| net	count=1
function	that :sslcertificate ||| setup	count=1
function	[function_1] the extension ||| [function_2] [function_1]	count=2
function	iterates over all ||| each	count=1
function	stream is finished ||| stream end	count=1
function	if disconnected from ||| disconnected ?	count=2
module	a [module] :source ||| [module]	count=1
function	type of ||| type	count=4
function	2xx ||| success ?	count=1
function	don’t already ||| gen	count=1
arg	[arg] activated ||| dependency activated [arg]	count=1
function	number of [function_2] ||| [returnv_1] [function_2]	count=1
function	the io ||| io	count=1
arg	if [arg_2] ||| class [arg_1] [arg_2]	count=9
function_arg	thread to [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] classes ||| [function_1] [function_2]	count=4
function	finds all gems matching ||| find all	count=1
arg	other_str parameter defines a ||| other_str+	count=1
function	a time [function_2] ||| [returnv_1] [function_2]	count=1
function	command to close the ||| close	count=1
module	with the name ‘pl’ ||| specfetchersetup	count=1
function	level ||| cmsg is ?	count=1
returnv	of str with all ||| str	count=1
module	ssl/tls handshake as ||| openssl ssl sslsocket	count=1
module	indicated whether this cipher ||| openssl cipher	count=1
module	other match [module] ||| gem [module]	count=1
arg	the initially ||| { |(args	count=1
module	that are ||| openssl ssl sslsocket	count=1
module	evaluates ||| element	count=1
function	public method is ||| public method	count=1
function	installs the ||| install extend	count=1
arg	id [arg_2] ||| [arg_1] [arg_2]	count=1
module	the following configuration being ||| openssl config	count=1
function	source string that ||| source	count=1
module	variable was set ||| gem	count=1
module	been provided ||| drb drbsslsocket sslconfig	count=1
arg	string or ||| string filename lineno	count=1
returnv	subsequently defined methods to ||| self	count=1
returnv	reached [returnv] if there ||| [returnv]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] allocation [function_2]	count=2
function	framework ||| have framework	count=1
module	the inline text ||| rd inlineparser	count=1
arg	authenticates a req ||| req	count=2
function	with the other parameters ||| setup	count=1
function	[returnv_1] the flags ||| [returnv_1] [function_2]	count=1
module	dependencylist that matches ||| dependencylist	count=1
function	[function_1] classes and ||| [function_1] [function_2]	count=4
module	object ||| stringio	count=1
module	the ||| rdoc generator	count=2
function	parameters [function_2] ||| [function_2] [function_1]	count=3
module	to its original state ||| testcase	count=1
module	cert signature ||| openssl x509 request	count=1
module	that will retrieve gems ||| resolver	count=1
module	marking up this ||| rdoc generator	count=1
module	been provided ||| sslconfig	count=1
function_arg	[function_1] symbol to ||| [function_1] set [arg_2]	count=3
returnv	returns immediately ||| bool	count=1
arg	adds [arg] to ||| [arg]	count=1
module	be displayed [module] ||| [module]	count=1
module	connection ||| net ftp	count=1
function	the visitor for ||| item start	count=4
arg	[arg_1] with mode ||| [arg_1] [arg_2]	count=1
function	containing a suppressed ||| suppressed	count=1
module	to the table of ||| markup totableofcontents	count=1
module	this object’s comment ||| rdoc	count=1
function	stream a ||| stream	count=1
module	already ||| rdoc generator darkfish	count=2
module	case which needs ||| rdoc markup formattertestcase	count=1
module	if it isn’t ||| thread mutex	count=1
module	verify ||| x509 store	count=1
arg	process specified by pid ||| pid raise	count=1
module	indentedparagraph ||| indentedparagraph	count=1
module	c code corresponding ||| parser c	count=1
function	nan infinity and -infinity ||| nan	count=1
module	has been turned off ||| rdoc	count=1
arg	and string ||| string	count=1
module	onto ||| package tarwriter restrictedstream	count=1
function	[returnv_1] [function_2] running ||| threadswait [returnv_1] [function_2]	count=1
function	[function_1] [function_2] ||| [function_1] enclosing [function_2]	count=1
function	verify to ||| verify signatures	count=1
function	basic list ||| basic	count=1
arg	[arg_1] addr address ||| [arg_2] [arg_1]	count=1
arg	given key in ||| key	count=1
module	new uri :mailto ||| uri mailto	count=1
function	if the given ordinal ||| ordinal	count=1
arg	time cstime ||| cstime	count=1
arg	without opening ||| address port p_addr p_port p_user p_pass	count=1
module	of the document ||| rexml document	count=1
function	true if ||| bool matches ?	count=1
function_arg	writes [arg_2] ||| [arg_2] [function_1]	count=12
function	deserializes [function] ||| [function]	count=12
module	with [module] ||| [module]	count=4
module	a single-row matrix ||| matrix	count=1
arg	than other_ary ||| other_ary	count=1
returnv	[returnv] containing the ||| [returnv]	count=2
module	and net ||| xmlrpc	count=1
function	[function] attribute manager ||| [function]	count=1
module	the other ||| drbsslsocket sslconfig	count=1
function	and calls the ||| loop	count=1
module	accept_indented_paragraph ||| rdoc markup indentedparagraph	count=1
module	through ||| rdoc ri driver	count=2
function	iterates over [function] and objects ||| [function]	count=1
module	if [module] is ||| [module]	count=1
arg	of ||| a	count=1
module	the list of ||| gem specification	count=1
function	[returnv_1] if the ||| [returnv_1] directory makable [function_2]	count=1
function	device file pipe ||| file	count=1
module	returns the length ||| stats	count=1
arg	[arg_1] [arg_2] ||| [arg_1] signing_cert [arg_2]	count=7
module	accessor for ||| gem specification	count=2
arg	port and calls the ||| host port	count=1
module	feed or ||| rss atom feed	count=1
module	a druby reference to ||| drb drbserver	count=1
module	for classes and ||| rdoc	count=1
function	the [function] this nameerror ||| [function]	count=1
module	value of this cookie ||| cgi cookie	count=1
function	gem [function] ||| [function]	count=2
function	session attempts [function_2] ||| [function_2] [function_1]	count=6
module	set ||| gemdependencyapi	count=1
module	to this ||| openssl x509	count=1
function	its [function] or raises ||| [function]	count=1
module	pathname begins ||| pathname	count=1
module	of the comment ||| rexml comment	count=2
arg	the given file command ||| file	count=1
arg	name matches spec ||| spec	count=1
function	versions when dependency is ||| ?	count=1
module	that :sslcertificate and :sslprivatekey ||| drbsslsocket sslconfig	count=1
function	[function_1] [function_2] the ||| [function_2] [function_1]	count=6
module	drb :drbsslsocket ||| drb drbsslsocket	count=2
module	tarreader on ||| package tarreader	count=1
function	the [function] ||| delete [function]	count=1
arg	source_uri to the ||| source_uri	count=1
function_arg	a [arg_2] ||| [function_1] [arg_2]	count=3
function	if self is ||| ?	count=1
module	calls ||| rdoc markup formattertestcase	count=1
function	used to filter ||| add filter	count=2
function	output progress information if ||| debug	count=1
module	unless the ||| gem	count=1
rep	field [function_arg_2] ||| [module_1] bool has [function_arg_2]	count=1
function_arg	[function_1] for method_name ||| [function_1] klass_name [arg_2]	count=1
module	the specification ||| specification	count=1
function_arg	method name ||| method name	count=1
function	name str ||| name=	count=1
module	of the ||| pathname	count=1
arg	in text to properly ||| text	count=1
function	is transparent ||| get transparency	count=1
returnv	constructs ||| instance	count=1
module	[module] qualified by ||| [module]	count=1
function	discarded [function_2] ||| [function_2] [function_1]	count=1
arg	named symbol as obj ||| symbol obj	count=1
function	visibility ||| ongoing visibility=	count=1
function	command for the current ||| command	count=1
arg	given extensions for ||| age extensions	count=2
function	build info directory ||| build info dir	count=2
function	output ||| block	count=1
function	and false if ||| ?	count=3
function	the rubygems [function_2] ||| [function_1] [function_2]	count=1
arg	given representation of date ||| string comp start	count=2
arg	[arg_1] front ||| [arg_1] [arg_2]	count=1
module	it isn’t ||| thread	count=1
function	to ||| dir config	count=1
module	a new [module] with the ||| [module]	count=1
module	context to the values ||| sslcontext	count=1
module	whether this ||| openssl	count=1
module	value as ||| rational	count=1
module	that ||| makemakefile	count=1
function	is an alias for ||| is alias for	count=1
arg	string value stored ||| o	count=1
arg	content ||| content	count=6
module	this object ||| object	count=1
returnv	be set as ||| instance	count=1
function	[returnv_1] if the ||| [returnv_1] renamable [function_2]	count=1
function	documentation has been turned ||| start	count=1
module	version from the ||| version	count=1
module	encodes this dh ||| pkey dh	count=2
module	a stream emission see ||| emitter	count=1
function	sunday ||| sunday	count=1
arg	named file to ||| file	count=2
function	length of [function_2] ||| [function_2] [function_1]	count=2
module	that cert ||| x509	count=1
module	no arguments ||| module	count=1
module	status? ||| webrick httpstatus	count=8
module	net :imap object and ||| net imap	count=1
function	key ||| key !	count=1
function	[function_1] options ||| [function_1] [function_2]	count=3
arg	::capture3 captures ||| cmd stdin_data: '' binmode: false opts	count=1
function	a [function] command ||| [function]	count=2
arg	[arg_1] a from_name ||| [arg_2] [arg_1]	count=1
function	[returnv_1] any ||| [returnv_1] [function_2] author	count=3
function	its ancestors have ||| defined ?	count=2
returnv	of the ||| encoding	count=2
module	and net :http#open_timeout ||| xmlrpc	count=1
function	allow connections ||| allow	count=1
module	see irb ||| irb	count=2
arg	sends a message ||| msgstr	count=1
arg	[arg_1] with flags ||| [arg_2] [arg_1]	count=1
module	todo ||| gem testcase	count=2
module	set as ||| rexml	count=1
module	a ||| ssl sslcontext	count=1
arg	req on res ||| req res	count=6
function	or ||| setup	count=1
module	trusted ||| security trustdir	count=1
function	did not previously ||| sym	count=1
function_arg	if the value of [function_1] [arg_2] ||| bool [function_1] fix [arg_2]	count=1
function	removes ||| remove class	count=1
function	the path to the ||| path	count=3
module	the location of ||| installer	count=1
function	the parameters and body ||| method params and body	count=1
function_arg	map [arg_2] ||| [function_1] [arg_2]	count=8
module	the descriptive fields in ||| specification	count=1
function	tests to change attributes ||| changed attribute	count=1
module	keep_files environment variable was ||| testcase	count=1
module	fields in the spec ||| gem	count=1
function	the port ||| port	count=2
function	evaluates ||| eval	count=3
module	lock source that ||| source lock	count=1
arg	time and was ||| time	count=1
function	finishes consumption ||| list item end	count=3
function	tt tag? ||| tt	count=1
function	a content type string ||| type	count=1
function	a proxy uri ||| get proxy from	count=2
function	and number ||| doc stats	count=1
module	object thereby frustrating ||| object	count=1
function	the length and ||| doc	count=1
arg	in method ||| method	count=1
module	[module] handler ||| [module]	count=3
arg	starting with needed dependency ||| needed set	count=1
module	struct ||| struct	count=6
module	the document ||| document	count=4
module	the source ||| rexml source	count=1
function	to use ||| use	count=1
module	then use to ||| makemakefile	count=1
arg	the sym returning that ||| sym	count=1
function	gem ||| gem	count=14
function_arg	subset of hash ||| > hash	count=2
function	returns true [function] contains ||| include [function]	count=1
module	option ||| option	count=2
module	of ||| complex	count=1
function	the source ||| source	count=3
function	[function_1] by the ||| [function_1] [function_2]	count=1
arg	certificate with the ||| certificate	count=1
function	module is added ||| module	count=1
function	content type string such ||| content type	count=1
function	[returnv_1] [function_2] of the ||| [returnv_1] [function_2]	count=26
arg	res for the ||| req res	count=1
arg	exception [arg] ||| [arg]	count=1
function	the fatal ||| fatal	count=1
function	containing the prefixes names ||| prefixes	count=1
module	indices as row access ||| csv	count=1
arg	options = ||| options	count=1
arg	options may be a ||| options default	count=1
module	been provided or that ||| drbsslsocket sslconfig	count=1
module	unless documentation ||| rdoc codeobject	count=1
function	the command ||| dir	count=1
module	class class ||| rdoc	count=1
function	is implemented by ||| implemented ole	count=1
function	modules sorted by salience ||| get sorted	count=1
function	completion reply 2xx ||| success ?	count=1
module	option summary into ||| optionparser	count=1
arg	cookie-name=>cookie pairs ||| raw_cookie	count=1
module	rdoc :method or rdoc ||| rdoc	count=1
arg	command with [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] [function_2] the ||| [function_1] [function_2]	count=39
function	true [function_2] ||| [function_2] [returnv_1]	count=52
arg	of default according ||| default	count=2
function	block_quote ||| accept block quote	count=1
function	[function_1] token ||| [function_2] [function_1]	count=5
module	the generated docs ||| rdoc generator darkfish	count=1
function_arg	[function_1] port and ||| socket [function_1] [arg_2]	count=2
arg	new set [arg] the ||| [arg]	count=1
function	domain if ||| ?	count=2
returnv	the file ||| encoding	count=2
module	this instance ||| openssl	count=1
arg	by parsing from [arg_1] [arg_2] according to some rfc ||| [arg_2] [arg_1]	count=1
function_arg	returns [function_1] [arg_2] the matrix as a ||| [function_1] [arg_2]	count=1
arg	to newname ||| newname	count=1
arg	a heading of name ||| name	count=1
function	as a ||| to f	count=1
arg	[arg] and return ||| [arg]	count=1
function	a break ||| break	count=2
module	a single-column matrix where ||| matrix	count=1
function	args [function_2] ||| [function_1] [function_2]	count=3
module	remote ||| drb drbobject	count=2
module	call through _getobj_ ||| delegator	count=1
arg	symbol to the given ||| symbol	count=1
function	cases ||| text tests	count=1
arg	named by symbol ||| symbol obj	count=1
function	paths ||| paths ?	count=1
arg	given str ||| str enc separator: '&'	count=1
module	po entry for ||| rdoc generator pot poentry	count=1
function	the type of method ||| method type	count=1
arg	[arg_1] matches ||| [arg_1] [arg_2]	count=1
module	conversion to rdoc ||| rdoc markup	count=1
module	if they don’t already ||| generator	count=1
arg	document ||| document	count=1
function	returns the successor ||| succ	count=1
module	following certificate and ||| gem security policy	count=1
function	have a constant ||| ?	count=1
module	constructs ||| gem	count=1
arg	dependency [arg_2] ||| [arg_1] [arg_2]	count=1
module	prepares the visitor for ||| rdoc markup tordoc	count=3
function	[function_1] a class ||| [function_2] [function_1]	count=1
module	generated json ||| json ext generator	count=1
function	nan infinity ||| allow nan	count=1
function	existing attribute by ||| attribute	count=1
arg	a document-class ||| class_mod	count=1
function	the encoding ||| external	count=2
arg	object without opening a ||| address port p_addr p_port p_user p_pass	count=1
module	from this hash ||| generatormethods hash	count=1
function	to [function] ||| to [function]	count=1
module	up ||| rdoc ri driver	count=2
module	adds ||| rdoc context	count=6
module	object if ||| drb drbobject	count=1
function	the destination [function_2] ||| [function_2] [function_1]	count=2
function	an output [function_2] ||| [function_1] [function_2]	count=1
module	net ||| client	count=2
module	digests ||| package digestio	count=1
function	front object of ||| front	count=1
function	[function_1] handler and ||| [function_2] [function_1]	count=3
module	a distinguished ||| openssl x509	count=1
function	thread-local [function_2] ||| [function_1] [function_2]	count=1
module	long until the session ||| ssl session	count=1
function	iterates the ||| each	count=3
function	[function_1] the range ||| [function_2] [function_1]	count=4
returnv	instance that will install ||| instance	count=1
function	as a [function_2] ||| [function_1] [function_2]	count=2
arg	add the specified mailbox ||| mailbox	count=1
function_arg	creates [function_1] [arg_2] ||| [function_1] [arg_2]	count=5
arg	[arg] -1 0 ||| [arg]	count=1
module	reporter that will ||| gem streamui	count=1
function	returns true only ||| bool eql	count=1
module	or that a ||| sslconfig	count=1
module	builds a rdoc ||| rdoc ri	count=2
function	serialization support for ||| marshal dump	count=1
function	mapped/compatible [function_2] ||| [function_2] [function_1]	count=2
function	returns true [function_2] ||| [returnv_1] renamable [function_2]	count=4
arg	io and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	and base_notifier to ||| base_notifier	count=1
returnv	instance that will ||| instance	count=1
function	methods to the ||| methods	count=1
function	[function_1] [function_2] of the ||| [function_1] [function_2]	count=14
module	enumerator but doesn’t move ||| enumerator	count=1
module	to another fiber ||| fiber	count=1
module	an ri task with ||| rdoc ri task	count=1
module	builds a rdoc :markup ||| rdoc ri	count=1
function	returns true if ||| bool disjoint ?	count=1
module	header fields and ||| net httpheader	count=1
function	names from ||| names	count=1
arg	subject and ||| subject	count=1
arg	in collection ||| collection	count=1
module	adds ||| markup formatter	count=2
function	private setter for dn ||| dn	count=1
arg	creates a socket connected [arg_1] [arg_2] to self ||| addrinfo connect to [arg_2] [arg_1]	count=1
module	single entry ||| tojoinedparagraph	count=1
module	methodattr from token stream ||| rdoc methodattr	count=1
module	visitor for ||| tottonly	count=1
function	the ||| accept list item start	count=4
module	the latest specification ||| resolver	count=1
module	object that represents the ||| io	count=1
arg	base and prefix ||| base level prefix	count=1
function	the methods ||| methods	count=1
module	finds ||| testcase staticset	count=1
module	struct for which the ||| struct	count=1
function	instance variable names ||| instance variables	count=2
function	checkbox elements as a ||| checkbox group	count=1
function	[returnv_1] [function_2] in the pool still ||| [returnv_1] [function_2]	count=2
function	binmode ||| binmode	count=1
module	in ||| json ext generator generatormethods string	count=1
arg	symbol to ||| symbol	count=1
function	of master? ||| of	count=1
function	creates ||| util make	count=1
module	newly created bigdecimal numbers ||| bigdecimal	count=1
arg	of type ||| type	count=2
function	installs from the ||| install from	count=1
arg	with mode ||| mode	count=1
function_arg	list [arg_2] ||| [function_1] store [arg_2]	count=1
module	process :status object) of ||| process	count=2
function_arg	given value [arg_2] ||| [arg_2] [function_1]	count=1
function	prints a ||| print	count=1
arg	file ||| file	count=9
module	is set to ||| openssl	count=1
arg	visitor for consuming list_item ||| list_item	count=4
module	option summary into to ||| optparse	count=1
function	[function_1] parser ||| [function_1] [function_2]	count=5
module	classmodule ||| classmodule	count=1
module	the current token to ||| markup	count=1
function	file_name is [function] others returns ||| world [function]	count=2
function	[function_1] address obtained ||| [function_2] [function_1]	count=1
function_arg	[function_1] special ||| [function_1] [arg_2]	count=3
function	the command line by ||| dir config	count=1
module	@return edge the ||| gem resolver molinillo dependencygraph	count=1
arg	by [arg] obj ||| [arg]	count=1
function	the same [function] another with ||| [function]	count=1
arg	object to ||| object	count=1
function_arg	writes string to ||| syswrite string	count=1
module	new [module] with an ||| gem security [module]	count=1
function	[function] representation of ||| [function]	count=3
function	returns true if ||| bool tomdoc ?	count=1
module	of undocumented items in ||| rdoc stats	count=1
module	marking up ||| rdoc generator	count=1
function	single gem name ||| one gem name	count=3
function	if remote gems should ||| remote ?	count=1
function	escapes special sequences of ||| mask protected sequences	count=1
module	and net :http#open_timeout to ||| client	count=1
function	truncated to an integer ||| i	count=1
function	version ||| new	count=1
module	file as a ||| file	count=1
module	…> the ||| sax2listener	count=1
module	turned off by :enddoc ||| codeobject	count=1
function	removes [function_2] ||| [function_2] [function_1]	count=1
arg	the named files ||| file_name	count=1
function	a serious security hole ||| debug output	count=1
function_arg	instance methods [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] memory ||| [function_1] [function_2]	count=2
module	ensures ||| drbsslsocket	count=1
function	all gem version ||| all gem	count=1
arg	[arg_1] in klass_name ||| [arg_2] [arg_1]	count=8
function	return [function_2] ||| [function_2] [function_1]	count=2
function	intermediate reply 3xx reply ||| continue ?	count=1
arg	transfers ||| remotefile	count=1
function	add ||| add to	count=1
module	rdoc :attr for the ||| rdoc parser	count=1
module	other match [module] if ||| gem [module]	count=1
module	until the session ||| ssl session	count=1
arg	[arg] with ||| [arg]	count=9
module	deprecate ||| gem testcase	count=2
arg	of n ||| n	count=1
module	the [module] so that ||| [module]	count=1
module	constructor ||| rexml	count=1
module	cert signature is ||| x509 request	count=1
function	an [function] named generator_name ||| [function]	count=1
arg	:smtp object and connects ||| address port helo user secret authtype	count=1
function	line by ||| dir config	count=1
module	indicate ||| dependencyrequest	count=1
module	that cert signature is ||| x509 request	count=1
rep	big [function_arg_2] ||| [module_1] numeric [function_arg_2]	count=1
returnv	array of ||| array	count=7
module	[module] was ||| [module]	count=12
arg	named given_name with superclass ||| class_type given_name superclass	count=1
module	ensures that :sslcertificate ||| drb drbsslsocket	count=1
function	pipeline with a ||| pipeline	count=1
function	and label list items ||| list	count=1
module	will be set as ||| parent	count=1
returnv	of string ||| string	count=2
function	before ||| pre	count=2
module	if stat has ||| stat	count=2
function	kind ||| kind	count=1
arg	to and returns to ||| to	count=2
function	extracts ||| scan args	count=1
function	from the cross-references in ||| crossref	count=1
module	dtd ||| rexml doctype	count=1
arg	the path and gets ||| path	count=3
function	is ‘nz_number’ or ||| nz number	count=1
function	of ||| start	count=1
function_arg	initializes this object [function_1] [arg_2] and returns it ||| ext generator state initialize [function_1] [arg_2]	count=1
arg	than that [arg] ||| fix [arg]	count=1
function	to an [function_2] ||| [returnv_1] [function_2]	count=2
module	a bitmask to allow ||| rdoc markup tohtmlsnippet	count=2
returnv	a symbol ||| symbol	count=1
module	store command [module] alter ||| [module]	count=1
module	emission see ||| emitter	count=1
module	generated json to ||| json	count=1
module	source uri ||| sourcelist	count=1
function	has a zero size ||| zero	count=1
module	documentation has been turned ||| rdoc	count=1
arg	[arg_1] mode ||| [arg_1] target [arg_2]	count=1
function	on completion ||| completion	count=1
function	returns the offset ||| offset	count=3
function	configure various ||| dir	count=1
function	address of the ||| address	count=1
function	until the given block ||| until	count=1
arg	given permissions ||| permissions passphrase cipher	count=1
arg	deprecates [arg] by wrapping ||| [arg] repl year	count=1
returnv	as ||| strio	count=1
function	named protected [function_2] ||| [function_1] [function_2]	count=1
arg	input_method ||| input_method	count=1
module	the visitor for ||| markup tordoc	count=2
module	the number of ||| openssl	count=1
arg	headers ||| headers opt &b;	count=3
module	instance ||| importer	count=1
arg	needed ||| needed	count=1
function_arg	gem :specification spec ||| gem user spec	count=1
function	the form contained multipart/form-data ||| multipart	count=1
arg	object without opening ||| port p_addr p_port p_user p_pass	count=1
module	lists have ||| gem specification	count=1
module	a description ||| openssl	count=1
function_arg	an alias [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] significant digits ||| [arg_2] [function_1]	count=1
module	this asn1data into a ||| openssl asn1 asn1data	count=1
function	[returnv_1] a new ||| text [returnv_1] [function_2]	count=1
function	on the ||| on	count=1
function	returns true [function_2] ||| [returnv_1] intersect [function_2]	count=4
function_arg	writes data ||| write data	count=3
function	returns the total ||| total in	count=1
module	attributes set ||| markup attributes	count=1
module	is in conflict with ||| gem resolver conflict	count=1
function	delegates [function] to ||| [function]	count=1
arg	an element child ||| element	count=1
function_arg	is relative [arg_2] ||| [arg_2] [function_1]	count=1
module	user can then use ||| makemakefile	count=1
returnv	form [returnv] ||| [returnv]	count=2
arg	the indicated [arg_2] ||| [arg_2] [arg_1]	count=2
module	if argument ||| optionparser switch placedargument	count=1
module	create ||| darkfish	count=1
function_arg	[function_1] io ||| [arg_2] [function_1]	count=6
module	the tuplebag ||| tuplebag	count=2
arg	using the named generator ||| generator	count=1
module	method to fetch ||| racc parser	count=1
function	reference of the object ||| drbref	count=1
function	exits the ||| quit	count=1
module	sets up ||| driver	count=1
module	response has ||| net httpresponse	count=1
function	[function] all_hash the ||| [function]	count=1
returnv	convert ||| string	count=3
arg	class of numeric and ||| numeric	count=1
arg	a digest [arg] ||| [arg]	count=1
module	as bigdecimal ||| bigdecimal	count=1
function	loopback address ||| loopback	count=1
arg	[arg_1] containing parts ||| [arg_1] [arg_2]	count=3
function	session has started ||| started	count=1
module	marking ||| rdoc generator markup	count=1
module	prepares the visitor ||| rdoc markup tordoc	count=3
module	directory may be deleted ||| net ftp mlsxentry	count=1
module	that :sslcertificate and ||| sslconfig	count=1
module	comment are used in ||| rexml comment	count=2
function	first comment in ||| first comment	count=1
function	a document ||| start document	count=1
function_arg	[function_1] [arg_2] or +1 if this ||| [function_1] [arg_2]	count=1
function	normalize ||| normalize !	count=1
function	output ||| output	count=3
function	link ||| readlink	count=1
module	index @param ||| parent	count=1
function	[function] for a ||| explicit [function]	count=3
arg	headers that you provide ||| headers opt &b;	count=1
module	of bytes that are ||| ssl sslsocket	count=1
function	ensures ||| setup	count=1
module	ios to ||| io	count=1
arg	exception if [arg] is not ||| [arg]	count=1
module	up ||| formatter	count=1
function	invokes the given ||| map	count=1
function	json objects ||| json	count=1
module	has ||| rdoc	count=1
module	up this ||| generator markup	count=1
function	of method names set ||| set	count=1
module	creates a [module] or ||| [module]	count=1
function	a ||| start	count=1
function	head request ||| request head	count=1
function	printed and just before ||| pre	count=1
module	a version ||| gem	count=1
module	encoding ||| stringio	count=1
function	to the requiring file’s ||| require	count=1
module	are immediately available ||| openssl	count=1
arg	string and returns ||| string	count=1
module	command and returns a ||| imap	count=1
function	time the supplied block ||| time	count=1
returnv	instance this constructor is ||| instance	count=1
function	row mode ||| row	count=2
arg	title and ||| parent title	count=1
function	an ||| to	count=1
module	tempdir unless the ||| gem testcase	count=1
arg	given number of seconds ||| seconds	count=1
function	if rxp ||| ?	count=1
function	block once for each ||| if	count=1
arg	[arg_1] which is ||| openssl digest digest new [arg_1] [arg_2]	count=6
module	returns a properly-space ||| options	count=1
function	returns [returnv_1] [function_2] ||| matrix [returnv_1] [function_2]	count=2
function	a json string ||| json	count=1
module	number of ||| rdoc	count=1
function	inserts an ||| insert	count=1
function	they don’t already ||| gen	count=1
function	named protected method ||| protected method	count=1
arg	state ||| state	count=1
function_arg	[function_1] http query ||| [arg_2] [function_1]	count=1
arg	from a [arg_2] ||| datetime datetime rfc3339 [arg_2] [arg_1]	count=1
arg	[arg_1] from start ||| [arg_2] [arg_1]	count=1
function	the length and ||| doc stats	count=1
arg	tk setting the comment ||| context single tk	count=1
function	adds tts ||| block quote	count=1
module	@param parent ||| rexml	count=1
module	the authentication ||| webrick httpauth	count=2
function	ip_multicast_ttl ||| ttl	count=1
function	number ||| doc	count=1
arg	body_file ||| body_file	count=1
function	explicitly requested by ||| explicit	count=1
module	rdoc :toplevel for ||| rdoc	count=1
function	public key associated with ||| public	count=1
arg	context of this ||| context statements	count=1
module	the ||| drb drbobject	count=6
function_arg	entry [arg_2] ||| [arg_2] [function_1]	count=1
function	and ||| and	count=6
arg	and end and style ||| style	count=1
function	create [function] ||| [function]	count=1
arg	obj is an instance ||| obj	count=1
module	matrix a ||| matrix	count=1
function	string-like ||| []	count=1
function	template [function_2] ||| [function_2] [function_1]	count=2
arg	fills the ||| page klass	count=1
function	just before ||| pre	count=1
function	a patch ||| patch	count=1
function	name to be emitted ||| name	count=2
module	parent if ||| rexml parent	count=1
module	state object ||| state	count=1
module	method sends ||| net	count=1
module	see file ||| file	count=1
module	a new array ||| array	count=4
returnv	returning [returnv] pid/status ||| [returnv]	count=1
function	symbol if [function_2] ||| [returnv_1] [function_2]	count=3
function	[returnv_1] [function_2] ||| [returnv_1] writable real [function_2]	count=2
function	returns the status of ||| status	count=1
function	prepares the visitor for ||| item	count=4
module	this block ||| localjumperror	count=1
function_arg	inserts [arg_2] ||| [function_1] [arg_2]	count=3
module	and ||| gem testcase	count=3
function	[function_1] child after ||| [function_1] [function_2]	count=1
function_arg	[function_1] parser ||| [arg_2] [function_1]	count=2
arg	[arg_1] the key ||| [arg_2] [arg_1]	count=4
module	prepares the ||| tohtml	count=3
function	[function_1] string ||| [function_2] [function_1]	count=2
arg	returns the file path ||| path	count=1
function	adds tts ||| accept block quote	count=1
function	of values ||| values	count=1
module	through ||| ri driver	count=2
module	a set ||| requestset	count=1
function	returns true if ||| bool writable ?	count=1
function	with the ||| setup	count=1
arg	with the given ||| args	count=1
function	type of method ||| method type	count=1
module	option summary into to ||| optionparser	count=1
function	to close ||| close	count=1
arg	irb :context#irb_path and name ||| name	count=1
function	up a pager program ||| setup pager	count=1
module	csv :row ||| csv	count=1
function	[function_1] value ||| [function_2] [function_1]	count=3
function	if [function_2] ||| proxy [function_2] [function_1]	count=1
function	exit or if it’s ||| to exit	count=1
arg	[arg_1] month ||| [arg_1] [arg_2]	count=4
function	rubygems 1 ||| modern	count=1
module	declared for this ||| rexml	count=1
arg	optional superclass ||| superclass	count=1
function_arg	a proppatch [arg_2] ||| [function_1] [arg_2]	count=1
module	have redundancies removed ||| specification	count=1
function_arg	sections [arg_2] ||| [function_1] [arg_2]	count=1
function	list ||| name list	count=1
module	passed to dir’s constructor ||| dir	count=1
function	unconverted_fields() to parsed ||| unconverted fields	count=1
arg	return ||| proc	count=1
module	lock source that wraps ||| lock	count=1
function	a name_with_underscores or ||| class	count=1
arg	:document from found klasess ||| name found klasses	count=1
arg	paths specified where paths ||| paths	count=1
function	[returnv_1] if the ||| [returnv_1] key [function_2]	count=2
function	constant to the ||| const	count=1
module	gems to ||| gem	count=1
module	and reads a given ||| class	count=1
module	of bytes ||| openssl ssl sslsocket	count=1
function	a and a file ||| file	count=1
module	datetime with julian year ||| datetime	count=1
module	gc ||| gc	count=2
arg	nodes matching ||| element path namespaces variables	count=1
function	of pi to ||| pi	count=1
module	class ||| class	count=3
arg	tuple ||| tuple	count=7
module	following configuration being ||| config	count=1
arg	want to modify the ||| safe add parent	count=3
module	prepares ||| markup tordoc	count=5
function	[function_1] parens ||| [function_2] [function_1]	count=4
function	parameters of the ||| params	count=1
function	result of iteration of ||| collect	count=1
function	stat exited normally for ||| exited	count=1
function	spec? note [function_2] ||| [function_1] [function_2]	count=3
function	controlled [function] ||| process based [function]	count=1
arg	says ||| sym inherit	count=1
arg	dest ||| dest	count=2
module	finds ||| rdoc toplevel	count=2
module	a third array ||| array	count=1
function	from its components and ||| assemble	count=1
module	tomdoc from ||| rdoc tomdoc	count=1
function	of interpreting ary as ||| to h	count=1
module	lists ||| gem specification	count=1
module	datetime ||| datetime	count=1
module	the requested ||| resolver activationrequest	count=1
function	[returnv_1] if the ||| [returnv_1] enterable [function_2]	count=1
function	undocumented ||| stats	count=1
function	[function_1] file in ||| [function_2] [function_1]	count=1
module	other parameters provided ||| drb	count=1
module	unless ||| dh	count=1
module	element children false otherwise ||| rexml elements	count=1
module	an [module] ||| [module]	count=1
function	to gem [function_2] ||| [function_1] [function_2]	count=1
module	a comment ||| rdoc comment	count=1
module	asks ||| gem userinteraction	count=1
function	[returnv_1] if ||| [returnv_1] superset [function_2]	count=1
module	if ||| thread	count=1
function	dump the ||| dump	count=2
arg	server according to config ||| config	count=1
arg	bits - integer safe ||| bits safe	count=1
function	[function_1] while the ||| [function_2] [function_1]	count=1
function	if ||| new	count=1
function	represents the version ||| version	count=1
module	matching specifications ||| gem resolver molinillo specificationprovider	count=1
arg	scripts to run ||| filename bindir	count=1
arg	[arg_1] a tag ||| [arg_2] [arg_1]	count=4
function_arg	arctangent of [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	[function_1] hash ||| [function_1] [arg_2]	count=1
function	dumps ||| marshal dump	count=2
arg	pass in the obj ||| obj	count=1
module	[module] was not ||| [module]	count=9
function	[returnv_1] a new ||| [function_2] [returnv_1]	count=89
arg	or greater than numeric ||| big numeric	count=1
function	[function_1] directory ||| [function_1] [function_2]	count=11
module	prepares ||| markup	count=7
module	constructs a version ||| gem	count=1
module	as a [module] of results ||| [module]	count=1
module	the block and releases ||| thread mutex	count=1
arg	file command ||| file	count=1
function	returns the status ||| status	count=2
module	rdoc :generator :jsonindex ||| rdoc methodattr	count=1
arg	io ||| io level	count=1
function	loads ||| load rdoc	count=1
function	reset the ||| reset	count=1
function_arg	[function_1] [arg_2] the proper subdirectories for ||| [function_1] [arg_2]	count=4
function	is still ||| renew	count=1
function	iff there [function_1] [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] the attribute ||| attributes [function_1] [function_2]	count=2
arg	[arg_1] typeclass ||| [arg_2] [arg_1]	count=2
function	that can handle ||| can parse by name	count=1
arg	needed dependency objects ||| needed	count=1
function_arg	[function_1] given object ||| [function_1] [arg_2]	count=2
function	a gem [function] ||| [function]	count=2
function_arg	add [arg_2] ||| [arg_2] [function_1]	count=2
module	request using the ||| request	count=1
function	rdoc documentation installed? ||| installed	count=1
arg	the exponent ||| big exponent	count=1
module	markup in the rd ||| rdoc rd	count=1
function	address as ||| to	count=1
arg	in the given ||| code_object &block;	count=1
module	todo ||| testcase	count=1
arg	obj is an element ||| rng obj	count=1
function	defines a [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] path ||| fileutils remove [function_1] [arg_2]	count=1
function	iterates over the block ||| each	count=1
module	adds ||| rdoc ri driver	count=1
module	might be ||| parser ruby	count=1
arg	from a string ||| string	count=4
arg	fixnum returns a ||| fixnum	count=1
function	the discarded bytes ||| error bytes	count=2
arg	y and [arg_2] ||| [arg_2] [arg_1]	count=1
function	return the [function] this ||| [function]	count=1
function	of the method ||| method	count=1
function	sends ||| data	count=1
function_arg	creates a tcp/ip [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
module	or ||| drbsslsocket sslconfig	count=2
module	files so ||| gem specification	count=1
module	keep_files environment variable was ||| gem testcase	count=1
module	of the [module] ||| [module] resolver	count=1
module	included in obj ||| object	count=2
function	undocumented items ||| doc	count=1
function	be set as ||| new	count=1
module	levels ||| ext generator state	count=1
arg	with the given ||| name	count=2
function	creates [function_2] ||| gem source specificfile [returnv_1] [function_2]	count=3
module	returns a properly-space ||| rdoc options	count=1
function	returns true [function_2] ||| [returnv_1] setgid [function_2]	count=2
module	form for ||| gem	count=1
function_arg	[function_1] and b ||| [arg_2] [function_1]	count=3
arg	given base and ||| base	count=1
arg	named file ||| file	count=2
function_arg	greater than [arg_2] ||| [arg_2] [function_1]	count=2
function	returns true if ||| bool zero ?	count=2
module	block form for restricting ||| requestset	count=1
function	a zero-length ||| zero	count=1
arg	attribute the name ||| name	count=1
module	this object’s ||| rdoc generator markup	count=1
function	represents the encoding ||| encoding	count=2
module	a pager ||| ri driver	count=1
function	the yaml ||| normalize yaml	count=1
module	the ||| totableofcontents	count=1
module	hax todo deprecate ||| testcase	count=1
function	gets the ip address ||| getaddress	count=2
module	indent for [module] ||| [module]	count=1
function	is a potential ||| special hyperlink	count=1
module	with html ||| methodattr	count=1
module	dependencyrequest ||| resolver dependencyrequest	count=1
function	to configure ||| dir	count=1
module	translation ||| i18n	count=1
arg	compares two ||| obj other	count=3
module	generated ||| rdoc	count=1
module	of ri data installed ||| rdoc ri	count=1
function	the same type ||| eql	count=1
function_arg	compares this version [function_1] [arg_2] the http specification rules ||| webrick httpversion [function_1] [arg_2]	count=1
arg	file if ||| file	count=1
module	its original state and ||| testcase	count=1
module	the parsing of a ||| stats	count=2
function	if stat is ||| ?	count=2
returnv	[returnv] of ||| [returnv]	count=6
module	:return ||| localjumperror	count=1
rep	new [function_arg_2] ||| [module_1] create [function_arg_2]	count=1
function	keys ||| keys	count=2
function	[returnv_1] before ||| [returnv_1] [function_2]	count=4
module	html ||| tohtml	count=1
module	message ||| net popmail	count=2
function	[returnv_1] [function_2] {#graph} ||| dependencygraph vertex [returnv_1] [function_2]	count=1
arg	filename and [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] xml writer ||| [function_1] [function_2]	count=5
module	:mailto object ||| mailto	count=1
returnv	the number of ||| integer	count=4
function	parameters from arguments ||| params	count=1
function_arg	[function_1] tuple ||| [arg_2] [function_1]	count=2
function	the ||| setup	count=1
module	have redundancies ||| specification	count=1
function	the namespace of ||| prefix	count=1
arg	which is ||| data	count=1
arg	and ||| exclude_end	count=1
arg	of ||| x	count=1
module	this list and all ||| list	count=1
module	all file lists have ||| gem specification	count=1
module	this [module] as ||| [module]	count=1
function	[function_1] object allocations ||| objectspace [function_1] [function_2]	count=2
module	specification contains all ||| specification	count=1
function	low-level read ||| sysread	count=1
module	from the command line ||| gem command	count=3
module	executes the [module] to ||| [module]	count=1
module	file is a ||| file	count=7
arg	the context ||| context statements	count=1
function	a hash value corresponding ||| hash	count=1
module	–version ||| gem versionoption	count=1
function	the system satisfy ||| installation satisfies	count=1
function	[function_1] diagonal ||| [function_2] [function_1]	count=2
module	enum with ||| enumerable	count=2
module	object not tempfile ||| tempfile	count=1
module	up ||| ri	count=1
function	the serial number ||| serial	count=1
function_arg	modulo [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] name with ||| [function_1] [arg_2]	count=4
function	:name ||| name	count=1
module	an rdoc :include ||| rdoc context	count=1
function	extracts the [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] field ||| [function_2] [function_1]	count=2
arg	context ||| context statements file	count=1
function	paths in [function_2] ||| [function_2] [function_1]	count=1
arg	context of this ||| context	count=1
function	a module ||| module named	count=1
arg	string value stored in ||| o	count=1
module	a doctype includes an ||| rexml	count=1
function	sets the initial length ||| initial	count=1
function	specified [function] adding ||| extend [function]	count=1
rep	field with [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	on ||| rdoc servlet	count=1
module	if they don’t ||| generator	count=1
module	remote object ||| drb drbobject	count=1
function_arg	compares this version [function_1] [arg_2] ||| webrick httpversion [function_1] [arg_2]	count=1
module	for ||| module	count=1
function	the instance ||| instance	count=2
module	pretty printed so ||| pp	count=1
arg	bin on path ||| bin path	count=3
module	sslserver when ||| ssl sslserver	count=1
function	a time object) ||| time atime	count=1
module	the number ||| ssl	count=1
module	[module] :inspector for ||| [module]	count=3
module	hash ||| generatormethods hash	count=1
module	the feed ||| rss atom feed	count=2
module	gem located at gem ||| gem	count=1
function	[function_1] readable by ||| fixnum world [function_2] [function_1]	count=1
module	to the output ||| tottonly	count=1
module	default visibility for ||| module	count=1
returnv	returns the value ||| bool	count=1
module	of the last ||| gzipreader	count=1
function	[function_1] a local ||| [function_1] [function_2]	count=1
function	self-signed certificate with an ||| create cert self signed	count=1
function	wraps the same ||| eql	count=1
function	a module ||| symbol module	count=1
function	[function_1] [function_2] which was created by ||| [function_2] [function_1]	count=4
function	[returnv_1] [function_2] a ||| [returnv_1] utc [function_2]	count=1
module	the ||| rdoc stats	count=2
function	:sslprivatekey have been ||| setup	count=1
function	insert a space before ||| space before	count=1
module	lock source that ||| lock	count=1
function_arg	[function_1] the pages ||| [arg_2] [function_1]	count=2
module	by rdoc ||| rdoc methodattr	count=1
arg	parsing from a string ||| string 1 jan -4712 00:00:00	count=2
arg	comment to be ||| comment	count=1
function	components in ||| component	count=1
arg	safe [arg_2] ||| [arg_1] [arg_2] rem	count=1
function	absolute ||| magnitude	count=1
function	[function_1] token from ||| [function_2] [function_1]	count=3
arg	dir and calls it ||| dir	count=1
arg	the message to the ||| message flags date_time	count=1
returnv	of [returnv] replacing the ||| [returnv]	count=1
arg	other refer to ||| other	count=1
function	the integer representation ||| to i	count=1
function	constant ||| constant	count=3
arg	ty ||| ty	count=1
function	paths ||| also	count=1
function	spec? note [function_2] ||| [function_2] [function_1]	count=3
module	of files ||| gem	count=1
arg	the given extensions for ||| extensions serial	count=1
function	stores all parameters ||| params	count=3
function	object and having impltypeflag_fsource ||| source ole types	count=1
module	number of bytes ||| openssl	count=1
function	the status type ||| status type char	count=2
function	request match ||| match	count=1
module	pathname with other ||| pathname	count=1
arg	[arg_1] content ||| [arg_1] [arg_2]	count=2
module	algorithm ||| security signer	count=1
function	find ||| find	count=4
function	evaluates the ||| class eval	count=1
module	diagonal [module] where each ||| [module]	count=1
module	specifications that ||| gem resolver molinillo specificationprovider	count=1
module	comment ||| markup	count=1
function	the discarded ||| error	count=1
module	a class header ||| driver	count=1
function	prints a [function_2] ||| [function_1] [function_2]	count=1
function	a list ||| list	count=5
module	an [module] host optionally ||| [module]	count=1
module	by ||| rdoc codeobject	count=2
module	the store ||| store	count=1
function	an openssl :x509 :name ||| email	count=1
arg	[arg_1] day ||| [arg_2] [arg_1]	count=5
module	the other parameters provided ||| drbsslsocket sslconfig	count=1
arg	the given offset ||| offset	count=1
function	existing ||| []=	count=1
module	attempts to grab ||| mutex	count=1
function	parameters and [function_2] ||| [function_2] [function_1]	count=2
function	if the next row ||| ?	count=1
arg	file [arg_2] ||| [arg_2] [arg_1]	count=1
function	returns symbol ||| parse symbol	count=1
arg	used [arg] ||| [arg]	count=1
module	attr ||| rdoc attr	count=1
arg	to ||| options	count=2
arg	of list_item ||| list_item	count=3
function	self-signed ||| create self signed	count=1
function_arg	[function_1] the version ||| [function_1] [arg_2]	count=1
module	unless documentation ||| codeobject	count=1
arg	the block passed to ||| &block;	count=1
returnv	[returnv] you ||| [returnv]	count=1
returnv	or ||| symbol	count=1
module	asn1data ||| openssl asn1	count=1
module	method ||| anymethod	count=1
module	it came from ||| dependencyinstaller	count=1
arg	class [arg_1] [arg_2] ||| class [arg_1] [arg_2]	count=15
module	:drbobject given ||| drbobject	count=1
function	install as a ||| install	count=1
module	a class method/attribute ||| rdoc methodattr	count=1
function	[returnv_1] [function_2] in the pool still ||| thwait [returnv_1] [function_2]	count=1
module	based on tk ||| tk iwidgets	count=3
function	entry with the ||| entry	count=1
module	class corresponding to ||| webrick httpstatus	count=1
module	that a new ||| drb drbsslsocket sslconfig	count=1
arg	with a minimum of ||| name version	count=1
arg	flag file in an ||| op_dir time last	count=1
function	[function] time ||| [function]	count=2
module	be ||| rexml	count=1
function	the ||| doc	count=1
function	a basicresponse for ||| basic	count=1
arg	response ||| response	count=1
module	text gem implementation ||| gem text	count=1
module	being [module] ||| [module]	count=3
function	[returnv_1] if ||| [returnv_1] executable real [function_2]	count=1
returnv	if ||| self	count=1
function	an openssl ||| email to name	count=1
function_arg	erb [arg_2] ||| [function_1] method methodname [arg_2]	count=1
arg	the string or block ||| string filename	count=1
module	as ||| encoding invalidbytesequenceerror	count=1
function	lock and waits ||| lock	count=1
function	amongst the ||| inactive	count=1
module	big is ||| bignum	count=1
function	the header names ||| header	count=1
function	definition of this ||| definition	count=1
function	the close on ||| close on	count=2
function_arg	a warning [arg_2] ||| [function_1] [arg_2]	count=1
module	are expected [module] ||| [module]	count=2
module	if they ||| generator darkfish	count=1
arg	socket bound to ||| hostname	count=1
arg	:toplevel to the ||| absolute_name relative_name	count=1
module	the password component ||| generic	count=1
function	[function] as ||| [function]	count=3
function	from the profiler ||| profile	count=1
returnv	it isn’t ||| self	count=1
function	tts from ||| accept block quote	count=1
module	coverage array as value ||| coverage	count=1
function	command ||| dir config	count=1
module	prepares ||| tohtml	count=3
arg	meta-programmed ||| context single tk comment	count=1
function	[returnv_1] [function_2] corresponding to the method ||| [returnv_1] [function_2]	count=1
function_arg	given [arg_2] ||| [function_1] ? [arg_2]	count=3
module	source by using identical ||| gem indexer	count=1
arg	min sec ||| min sec	count=2
function	words wrapped in ||| word pair	count=1
arg	given ||| args	count=1
arg	by the issuer ||| issuer	count=1
module	this instruction sequence ||| rubyvm instructionsequence	count=2
module	returns the status ||| httpstatus	count=1
function	singleton methods ||| singleton methods	count=1
module	ri data installed ||| ri	count=1
function_arg	[function_1] in method ||| [arg_2] [function_1]	count=1
module	its ||| gem	count=1
arg	mode linking [arg_2] ||| [arg_2] [arg_1]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] renamable [function_2]	count=4
function	end of a ||| end	count=1
function	currently in ||| root	count=1
function	then use ||| dir	count=1
module	rdoc :generator ||| rdoc	count=3
function	verify internal ||| verify internal	count=2
function	windows platform? ||| win	count=1
arg	on string which ||| string data	count=1
function	after resolution ||| after resolution	count=2
arg	signer is [arg_2] ||| [arg_2] [arg_1]	count=2
module	is flush to ||| markup	count=1
arg	as per rfc 2396 ||| arg	count=1
module	in json objects ||| json ext generator	count=1
function	marshal ||| cache	count=1
function	the modification ||| mtime	count=2
module	last fiber ||| fiber	count=1
function	write using ||| write	count=1
function	[function_1] or no ||| [function_1] [function_2]	count=1
function	exit ||| exit	count=2
module	written out [module] is ||| [module]	count=1
arg	is valid for time ||| time	count=1
function	:x509 :name ||| to	count=1
module	equivalent for #get_tkread ||| rdoc parser rubytools	count=1
module	current working [module] of the ||| [module]	count=1
module	prepares the visitor ||| totableofcontents	count=1
module	various “with” options ||| makemakefile	count=1
module	directory passing the ||| dir	count=1
function	cross-references ||| crossref	count=1
arg	pages [arg_2] ||| [arg_2] [arg_1]	count=2
function	asking for the latest ||| latest	count=1
module	specifications that match ||| resolver molinillo specificationprovider	count=1
function	by the marshal library ||| marshal load	count=1
module	raw paragraph ||| paragraph	count=1
function	to disk ||| generate	count=1
function	error of the current ||| error	count=2
function	each installed [function_2] ||| [function_2] [function_1]	count=2
function	create a list ||| list	count=1
module	supplied will ||| rexml	count=1
function	use ||| use	count=3
function	to append the ||| append	count=1
function	[function] keys ||| [function]	count=1
module	:sslcertificate and :sslprivatekey have ||| drbsslsocket sslconfig	count=1
function	and object ||| with	count=1
function	gem version from ||| gem names	count=1
module	of bytes that are ||| openssl ssl sslsocket	count=1
function	check that [function_2] ||| [function_2] [function_1]	count=2
returnv	part of ||| float	count=1
arg	#tsort method ||| each_node each_child	count=1
function	[function] or ||| [function]	count=1
returnv	to ||| self	count=2
function	user can then ||| dir	count=1
module	prepares the visitor for ||| markup	count=7
module	removed ||| gem specification	count=1
arg	wrap ts ||| ts	count=1
module	lists are paragraphs ||| rdoc markup tohtmlsnippet	count=1
module	syslog err ||| syslog	count=1
arg	and the message ||| message	count=1
function	command for the ||| command	count=1
arg	format_string ||| format_string	count=1
module	the output ||| rdoc markup tordoc	count=1
function_arg	[function_1] as ||| [arg_2] [function_1]	count=6
function	parameters and body of ||| method params and body	count=1
returnv	the ||| string	count=1
returnv	string of the ||| string	count=2
function	net :http#read_timeout and net ||| timeout=	count=1
arg	[arg] is present ||| [arg]	count=3
function	create a record for ||| search record	count=1
module	nesting in [module] ||| [module]	count=1
arg	at most ||| buf	count=1
function	the lock ||| try lock	count=1
module	the output ||| markup	count=2
module	accept_paragraph_star with [module] ||| [module]	count=1
arg	old_list ||| old_list	count=1
function	a public ||| public	count=1
module	the requirement will ||| gem requirement	count=1
function	last item in ||| last	count=1
function	user can then ||| config	count=1
module	prints when rdoc is ||| rdoc stats quiet	count=1
function	sends a options request ||| options	count=1
module	the given block ||| benchmark	count=1
arg	by parsing from [arg_1] [arg_2] according to some typical ||| rfc3339 [arg_2] [arg_1]	count=1
arg	[arg_1] non-blocking manner ||| [arg_1] buf [arg_2]	count=1
module	and ||| gem	count=2
module	row ||| row	count=1
module	initialized when the ||| logger	count=1
function	has already been installed ||| installed	count=1
arg	[arg] instance ||| top_level file_name content [arg]	count=1
module	json to ||| json ext generator	count=1
module	the status class ||| webrick httpstatus	count=1
module	time ||| benchmark	count=1
module	by tuplespace ||| rinda	count=1
module	visitor ||| tomarkdown	count=1
module	entry in ||| rdoc	count=1
module	state ||| gem	count=1
module	true ||| net popmail	count=1
function_arg	server on [arg_2] ||| socket udp [function_1] loop [arg_2]	count=1
function	maximum should be checked ||| max	count=1
function	allow connections from socket ||| allow socket	count=1
module	parsing of a ||| rdoc stats	count=2
module	composedset ||| gem resolver composedset	count=1
module	if they don’t ||| rdoc generator darkfish	count=1
module	corresponding fiddle ||| fiddle	count=1
module	they ||| generator darkfish	count=2
function_arg	[function_1] out ||| [function_1] [arg_2]	count=1
function	new ||| select	count=1
module	the download ||| verbosedownloadreporter	count=1
arg	basic password ||| realm	count=1
function	scans content for rb_define_class ||| do define class	count=1
arg	res for ||| generator req res	count=1
function	json objects the raw ||| json	count=1
function_arg	[function_1] method_name ||| [function_1] klass_name [arg_2]	count=1
function_arg	list [arg_2] ||| [function_1] [arg_2]	count=6
returnv	[returnv] of the ||| [returnv]	count=1
module	available for ||| openssl	count=1
function	progress information if ||| debug	count=1
arg	name [arg_2] ||| [arg_1] [arg_2]	count=10
arg	called after [arg] was ||| [arg]	count=1
module	builds a rdoc :markup ||| rdoc	count=1
module	in gem ||| gem	count=1
module	to ||| webrick httpstatus	count=2
function	current local server? ||| here	count=1
module	on the text gem ||| gem text	count=1
module	this specification ||| specification	count=3
arg	server using [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function_1] file in ||| irbloader [function_1] [function_2] path priv	count=1
arg	[arg] authenticating ||| user [arg]	count=3
function	returns all ||| all	count=3
module	that are immediately available ||| openssl ssl	count=1
function	[returnv_1] a public ||| [function_2] [returnv_1]	count=1
function	[function_1] [function_2] ||| irbloader [function_1] [function_2] path priv	count=3
module	server if one is ||| net	count=1
function	sorted ||| get sorted	count=1
arg	path and gets ||| path	count=3
function	installs [function_2] ||| [function_1] [function_2]	count=1
function	returns the day ||| day	count=1
module	[module] dest ||| [module]	count=3
arg	from [arg] are expected ||| [arg]	count=1
function_arg	files [arg_2] ||| [arg_2] [function_1]	count=1
arg	version ||| version	count=12
returnv	[returnv] in ||| [returnv]	count=2
arg	prefix to send to ||| level prefix	count=1
function	class ||| inspect	count=1
function	[function_1] token ||| [function_1] [function_2]	count=5
function	memory allocated by malloc() ||| malloc allocated	count=1
function	filters the ||| filter	count=1
module	a class header to ||| driver	count=1
returnv	a hash that contains ||| hash	count=1
module	of undocumented items in ||| stats	count=1
arg	from comment by looking ||| container	count=1
function_arg	resources for [arg_2] ||| [function_1] [arg_2]	count=1
function	filters the methods in ||| filter methods	count=1
arg	size items ||| size initial_message terminal_message	count=1
module	ringprovider that will provide ||| rinda ringprovider	count=1
function	starts reading input ||| input hook	count=2
arg	rb_define_attr rb_attr or document-attr ||| var_name attr_name read write	count=1
function	activates the ||| use gemdeps	count=1
module	exits ||| net ftp	count=1
function	if the set is ||| ?	count=1
function_arg	[function_1] [arg_2] ||| [function_1] uri [arg_2]	count=5
function	in ||| gen	count=1
function	gem’s extensions are installed ||| extension	count=1
module	so that ||| gem specification	count=1
arg	string s ||| s	count=1
arg	day [arg_2] ||| [arg_2] [arg_1]	count=5
function	command line by ||| config	count=1
function	accept specified class t ||| accept	count=2
function	[function] whose methods ||| [function]	count=3
arg	connects to the server ||| helo user secret authtype	count=1
module	or that ||| drbsslsocket	count=1
arg	the given extend_method ||| extend_method	count=1
function	the result of iteration ||| collect	count=1
arg	hash to a ||| hash	count=1
function	position of the ||| rewind	count=1
module	if they don’t ||| rdoc generator	count=1
module	[module] their ||| [module]	count=2
module	the [module] such that ||| [module]	count=1
module	the [module] document ||| [module]	count=2
arg	command with [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	union of [arg_2] ||| [arg_2] [function_1]	count=1
function	or a ||| store for	count=1
function	[function_1] an integer ||| [function_2] [function_1]	count=1
arg	data for ||| data	count=1
function	items ||| doc	count=1
function	string after [function_2] ||| [function_1] [function_2]	count=1
arg	str ||| str enc separator: '&'	count=1
arg	you want to modify ||| func safe add parent	count=3
module	displayed [module] ||| [module]	count=1
arg	and to all_hash ||| all_hash	count=1
function	set the visibility of ||| set visibility for	count=1
function	[returnv_1] freeze status ||| [function_2] [returnv_1]	count=1
module	peer certificates ||| ssl sslsocket	count=1
function	owner of the file ||| grpowned	count=1
module	environment variable was ||| gem testcase	count=1
function	exit or ||| to exit	count=1
arg	start [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] this a ||| [function_2] [function_1]	count=2
module	a availableset as ||| gem availableset	count=1
module	the object’s object_id ||| pp ppmethods	count=1
function	ip address as ||| ip address	count=1
function	ensures that :sslcertificate and ||| setup	count=1
module	this list and all ||| rdoc markup list	count=1
function	certificate ||| create cert	count=2
module	job at ||| jobmanager	count=1
function	is a prerelease dependency ||| ?	count=1
function	inserts [function_2] ||| [function_2] [function_1]	count=2
module	line ||| makemakefile	count=1
arg	+event+s that match tuple ||| tuple	count=1
function	if [function_2] ||| [function_2] login auth [function_1]	count=1
function_arg	[function_1] year of ||| [function_1] ? [arg_2]	count=4
function	the underlying buffer ||| write	count=1
arg	from a string according ||| string 1 jan -4712 00:00:00	count=2
arg	from a string according ||| string 1 jan -4712 00:00:00 +0000'	count=2
module	comment ||| comment	count=8
module	#param_seq with [module] name if ||| [module]	count=1
module	the ||| sslsocket	count=1
function	local gems should be ||| local	count=1
function	if the file or ||| ?	count=2
module	is declared for this ||| rexml	count=1
function	:context#irb_name ||| suspend	count=1
module	[module] from the ||| rdoc [module]	count=1
module	and ||| rdoc	count=5
function	[function_1] mode ||| [function_1] [function_2]	count=6
module	spec’s ||| installer	count=1
function	session and deletes ||| delete	count=1
function	superclasses of obj or ||| is a	count=1
arg	which has [arg] as ||| [arg] stime cutime cstime	count=1
module	syslog warning log ||| syslog	count=1
function	this ||| platform	count=2
module	to allow the set ||| gem	count=1
returnv	objects as an array ||| array	count=1
arg	count is negative ||| count	count=1
function	names of ||| names	count=1
function_arg	the text [arg_2] ||| [arg_2] [function_1]	count=1
function	constant is added ||| constant	count=1
module	and returns ||| integer	count=1
arg	string ||| string filename	count=2
function	return ||| in	count=1
function	adds tts ||| block	count=1
function	human readable instructions for ||| disasm	count=1
returnv	the default ||| self	count=1
module	it ||| mutex	count=1
function	self [function] ||| sort by [function]	count=3
function	for handling [function] ||| ensure [function] gem	count=1
returnv	[returnv] if ||| [returnv]	count=25
function	false if not ||| ?	count=3
function	passing each ||| each	count=1
function	waits for thr [returnv_1] [function_2] the exception which terminated ||| [returnv_1] [function_2]	count=1
function_arg	[function_1] code a ||| [function_1] [arg_2]	count=3
function	dump the contents of ||| dump	count=2
function	they don’t ||| sub	count=1
module	part of its polar ||| complex	count=1
function	a progress ||| progress	count=1
module	is a xml-rpc server ||| server	count=1
function	ensure that the ||| ensure	count=1
arg	for the given time ||| time	count=1
function	length of the ||| length	count=2
function	the memory address ||| i	count=1
function	unless ||| start	count=1
arg	mailbox [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	initializes this object [function_1] [arg_2] and returns it ||| [function_1] [arg_2]	count=1
function	if the remote ||| ===	count=1
arg	returns whether or not ||| opt &b;	count=3
arg	port and ||| port	count=3
module	if this [module] is ||| [module]	count=2
returnv	returns the status of ||| bool	count=1
module	buffer ||| json ext generator state	count=1
module	up ||| markup	count=3
module	name ||| rdoc classmodule	count=1
function	removed from the receiver ||| removed	count=2
module	the directory may be ||| mlsxentry	count=1
module	and creates an rdoc ||| rdoc parser	count=1
arg	[arg_1] optional superclass ||| [arg_2] [arg_1]	count=1
arg	page ||| page	count=1
module	start of the document ||| document	count=1
module	this object ||| gem	count=2
module	the values like ||| drb drbsslsocket sslconfig	count=1
module	[module] created by ||| [module]	count=2
module	tomdoc from text ||| tomdoc	count=1
arg	the specified key ||| key	count=3
module	the [module] to a ||| [module]	count=2
function_arg	deletes the [arg_2] ||| [function_1] [arg_2]	count=4
function	mark the beginning ||| begin	count=1
module	ssl ||| ssl	count=2
module	that are immediately ||| openssl ssl sslsocket	count=1
arg	mesg ||| mesg	count=2
function	[function_1] file ||| [function_1] [function_2]	count=10
module	[‘blt_graph_bar’ ||| blt graph	count=1
function	that must be non-nil ||| non nil	count=1
function	[returnv_1] the numerator ||| [function_2] [returnv_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] gems [arg_2]	count=1
function	by [function_1] [function_2] ||| [function_1] [function_2]	count=3
function	method calls to the ||| method	count=1
function	[function_1] that is ||| [function_2] [function_1]	count=1
function	password ||| password	count=2
module	corresponding ||| webrick httpstatus	count=3
module	deflate ||| deflate	count=1
function	of strings ||| join	count=1
function	for root directories ||| root ?	count=1
returnv	returns ||| numeric	count=2
function	:x509 ||| email	count=1
function_arg	[function_1] method_body ||| [arg_2] [function_1]	count=2
arg	given index ||| index obj...	count=2
module	the process to its ||| gem	count=1
module	the [module] to $stdout ||| [module]	count=1
module	[module] will take ||| [module]	count=1
module	the given directory ||| dir	count=1
arg	with needed dependency ||| needed	count=1
rep	[module_1] [function_arg_2] ||| [module_1] verify [function_arg_2]	count=1
function_arg	[function_1] [arg_2] for good 1 for ||| [function_1] [arg_2]	count=2
module	another fiber resuming it ||| fiber	count=1
module	new socket ||| socket	count=4
function	returns true [function_2] ||| [returnv_1] incomplete input [function_2]	count=4
function	offset ||| offset	count=3
arg	in source ||| source	count=2
function	an http request ||| request	count=1
arg	formatted like [ lineno ||| filename lineno	count=1
function	fiber-local variables as symbols ||| keys	count=1
function	an openssl :x509 :name ||| email to name	count=1
function_arg	for notifications [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	local variable [arg_2] ||| [function_1] set [arg_2]	count=2
function	the private key ||| private	count=2
function_arg	the value of fix [function_1] [arg_2] ||| bool [function_1] [arg_2]	count=1
function	[returnv_1] if the ||| [returnv_1] incomplete input [function_2]	count=1
function	of extra arguments ||| specific extra args	count=1
arg	contained in file_name ||| file_name	count=1
arg	sequence with anchor a ||| anchor	count=1
module	by load/require [module] ||| [module]	count=1
arg	or greater than real ||| real	count=1
function	the list of break ||| break	count=1
function	valid and false ||| valid civil	count=1
module	the keep_files environment variable ||| gem testcase	count=1
module	gem specifications in ||| gem	count=1
function	seconds since the ||| f	count=1
module	of the attribute ||| rexml attribute	count=1
module	in if ||| rdoc generator	count=1
function	[function_1] the variable ||| [function_2] [function_1]	count=1
arg	of tags for ||| name start stop	count=1
function	build info ||| build info	count=1
arg	[arg] example ||| [arg]	count=1
returnv	point ||| array	count=1
module	new fiddle :pointer instance ||| fiddle	count=1
function	directory to it ||| dir	count=1
module	properly-space list ||| rdoc options	count=1
function	method names set the ||| set visibility for	count=1
module	password component ||| generic	count=1
arg	of seconds ||| seconds	count=1
module	last row read ||| zlib	count=1
module	the default [module] commands ||| [module]	count=1
function	if supplied ||| new	count=1
module	enumerator ||| enumerator	count=6
module	requested ||| resolver installerset	count=1
function	instance methods ||| instance methods	count=8
module	stat is executable or ||| stat	count=1
function	::clock_getres() function ||| getres	count=1
function	with the [function_2] ||| [function_2] [returnv_1]	count=1
arg	path and gets ||| path data	count=1
arg	of list ||| list	count=3
function	to euc-jp ||| toeuc	count=2
function	[function] have the ||| [function]	count=3
module	the source for ||| rexml source	count=1
function	[function_1] classes and ||| [function_2] [function_1]	count=4
function	[function_1] [function_2] ||| [function_1] ordinal [function_2]	count=12
function	have no parts? ||| empty ?	count=1
arg	to the given ||| key	count=1
function	[function] of ||| marshal [function]	count=1
function	is the owner of ||| grpowned	count=1
arg	modifies the comment ||| comment	count=1
module	the [module] where lines ||| [module]	count=1
module	for ||| ssl	count=1
function_arg	request match [arg_2] ||| [arg_2] [function_1]	count=2
module	self destructively and ||| optionparser arguable	count=1
module	this handle is ||| fiddle handle	count=1
arg	mode issues [arg] passes ||| [arg]	count=1
returnv	as an integer ||| integer	count=2
rep	unescapes [function_arg_2] ||| [module_1] unescape [function_arg_2]	count=1
returnv	returns ||| string	count=26
module	live in ||| rdoc generator darkfish	count=1
module	analysis and documentation tools ||| gem basicspecification	count=1
function	release version ||| version	count=1
function	classes ||| classes and	count=1
function	[returnv_1] [function_2] ||| [returnv_1] wednesday [function_2]	count=1
module	tobs that ||| rdoc markup tobs	count=1
module	the visitor for ||| rdoc	count=7
arg	[arg_1] source_uri ||| [arg_1] [arg_2]	count=1
returnv	given returns the resulting ||| string	count=1
function	the locale charmap name ||| locale charmap	count=1
function	explicitly terminate ||| terminate	count=1
module	toplevel that ||| rdoc toplevel	count=1
arg	file_name content options and ||| file_name content options	count=1
module	this dependency match ||| dependency	count=1
function	supplied will be ||| new	count=1
returnv	is ||| bool	count=4
module	descriptive ||| gem	count=1
arg	with indent ||| indent	count=1
function	[function_1] block ||| [function_2] [function_1]	count=4
function_arg	[function_1] the pages ||| [function_1] store [arg_2]	count=2
module	docs will live ||| rdoc	count=1
function	modulo ||| %	count=1
function	block ||| block	count=4
module	access the values like ||| drb drbsslsocket sslconfig	count=1
arg	list [arg_2] ||| [arg_1] [arg_2]	count=1
function	version of normalize ||| normalize	count=1
module	returns ||| integer	count=6
arg	parts to the ||| parts	count=1
module	in xmlrpc ||| xmlrpc client	count=1
module	returns a new enumerator ||| enumerator	count=1
arg	a from_name ||| from_name	count=1
arg	of the other ||| other	count=1
module	have ||| drbsslsocket sslconfig	count=2
function	the cross-references ||| crossref	count=1
function	[function] dependencies ||| vendor [function]	count=1
module	correct parser ||| parser	count=1
arg	set of tags ||| name start stop	count=1
function	is passed [function_2] ||| [function_2] [function_1]	count=2
module	session’s [module] ||| cgi session [module]	count=2
function	returns the inverse ||| inverse	count=1
returnv	:break :redo ||| symbol	count=1
function_arg	[function_1] [arg_2] good 1 for revoked ||| [function_1] [arg_2] next_update extensions	count=2
arg	[arg] and returns ||| [arg]	count=1
arg	the path in req ||| req	count=1
module	was encountered at ||| gem requestset lockfile	count=1
function	valid [function_2] ||| [function_1] [function_2]	count=4
function	a pager? ||| paging	count=1
arg	in special ||| special	count=1
arg	reads maxlen bytes from ||| maxlen	count=1
function	create the ||| gen sub	count=1
arg	for quick navigation ||| req res	count=1
module	and process group ||| process	count=1
module	dh to ||| pkey dh	count=2
function	undefined in the ||| undefined	count=1
arg	and connects to the ||| port helo user secret authtype	count=1
module	to pass output ||| rdoc ri	count=1
function	[function_1] before the ||| [function_1] [function_2]	count=3
arg	name [arg_2] ||| ext generator state []= [arg_1] [arg_2]	count=1
module	text from ||| inlineparser	count=1
module	the ||| tordoc	count=2
function	adds pages ||| pages	count=1
module	a ||| openssl	count=4
function	an array ||| a	count=3
arg	parses src and ||| src	count=1
module	title ||| rdoc context section	count=1
function	break ||| word break	count=1
module	to the files list ||| options	count=1
returnv	waits ||| self	count=1
function	certificate with an issuer ||| create cert	count=2
module	attribute ||| attributes	count=2
returnv	into [returnv] ||| [returnv]	count=1
module	its polar ||| complex	count=1
arg	write to out_stream for ||| out_stream	count=1
module	in json ||| json	count=1
function	the first ||| first	count=1
arg	uri tag_name ||| uri tag_name	count=2
module	method depending on ||| levelednotifier	count=1
module	returns that sym ||| symbol	count=1
function_arg	first [arg_2] ||| [arg_2] [function_1]	count=1
function	object [function_2] ||| [function_2] [function_1]	count=4
module	@param index the ||| rexml parent	count=1
arg	evaluation order ||| order	count=1
arg	index ||| index	count=6
function	the given ordinal ||| ordinal	count=1
function_arg	a git repository ||| git repository	count=1
returnv	are immediately available ||| integer	count=1
module	prepares ||| rdoc markup	count=7
function_arg	[function_1] [arg_2] ||| [function_1] method methodname [arg_2]	count=4
arg	a string according to ||| string 1 jan -4712 00:00:00 +0000' start	count=2
function	mode ||| mode=	count=1
module	message digest can be ||| openssl digest	count=1
function	as an ||| to a	count=2
function	vi [function_2] ||| [function_1] editing [function_2]	count=1
function	and ||| source	count=1
arg	op of the individual ||| op x	count=1
module	the tuplebag returning the ||| tuplebag	count=1
function	[function] threads ||| [function]	count=4
function	looks up the hostname ||| getname	count=1
arg	array methods of ||| methods	count=1
function	a new net ||| new	count=1
function	a new a ||| new	count=1
function	info directory ||| info dir	count=2
module	allows rdoc ||| rdoc	count=2
function	url [function_2] ||| [function_2] [function_1]	count=9
function	of a module ||| module	count=1
function	#field and assigns the ||| []=	count=1
function	[returnv_1] value arrays ||| [returnv_1] to [function_2]	count=2
function	[returnv_1] if the ||| [returnv_1] symlink [function_2]	count=1
module	the ruby ||| ruby	count=1
function	if time and ||| ?	count=1
module	from a ||| testcase	count=1
function_arg	underlying buffer [arg_2] ||| [arg_2] [function_1]	count=1
module	of its polar ||| complex	count=1
function_arg	[function_1] meta-programmed ||| [function_1] [arg_2]	count=1
returnv	returns and ||| string	count=1
module	ftp ||| net ftp	count=1
function	object) ||| atime	count=1
arg	po entry ||| entry	count=1
function	configure various “with” options ||| dir	count=1
function	field instead ||| field	count=1
arg	of [arg_2] ||| [arg_1] [arg_2]	count=1
module	@return edge the ||| resolver molinillo	count=1
function	methods ||| methods etc	count=1
function	adds the ||| add ?	count=1
module	waits ||| thread mutex	count=2
function	a spec and the ||| spec by	count=1
module	message digest can ||| digest	count=1
module	and number ||| stats	count=1
function_arg	class with [arg_2] ||| [arg_2] [function_1]	count=2
function	reply 2xx ||| success	count=1
arg	indicated ||| attr	count=1
function	adds a class ||| add class	count=2
returnv	sets the default visibility ||| self	count=1
module	returns ||| io	count=2
module	new objectid to ||| openssl asn1 objectid	count=1
module	strio to ||| stringio	count=1
arg	ole method ||| method arg1	count=2
module	for this [module] as an ||| [module]	count=1
arg	[arg_1] block ||| [arg_2] [arg_1]	count=2
function_arg	modulo other ||| modulo other	count=1
function	to this module ||| modules	count=1
rep	a parser [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	instead of self ||| rdoc toplevel	count=1
arg	data for reading and/or ||| data	count=1
arg	array ary so they ||| ary	count=1
module	specified ||| yaml dbm	count=1
function	non-blocking ||| accept nonblock	count=2
arg	host and [arg_2] ||| [arg_2] [arg_1]	count=1
returnv	an integer ||| integer	count=5
function_arg	transparent if [arg_2] ||| [arg_2] [function_1]	count=3
function	and net ||| timeout=	count=1
arg	to length ||| length	count=1
function	group on the peer ||| getpeereid	count=1
arg	bin ||| bin	count=3
arg	[arg_1] please have ||| [arg_2] [arg_1]	count=1
module	the other ||| drbsslsocket	count=1
arg	the given jobs ||| jobs	count=1
module	a ||| version	count=1
module	attribute eg puts ‘key=“value”’ ||| attribute	count=1
function	home directory path ||| dir	count=1
arg	the contents of hash ||| hash	count=1
function	they don’t ||| gen sub	count=1
module	a set of ||| gem requestset	count=1
function_arg	if obj [arg_2] ||| equal [function_1] [arg_2]	count=2
arg	[arg_1] string attributes ||| [arg_1] [arg_2]	count=3
arg	timeout is ||| timeout	count=1
function	all gem [function_2] ||| [function_2] [function_1]	count=3
module	the ||| markup tohtml	count=4
returnv	following is true ||| bool	count=1
module	isn’t available ||| thread mutex	count=1
arg	[arg_1] month ||| [arg_2] [arg_1]	count=4
arg	comment [arg_2] ||| [arg_2] [arg_1]	count=1
function	head request to ||| request head	count=2
function	attribute ||| attribute	count=1
module	runs this list and ||| markup list	count=1
function	finalizer ||| finalizer	count=1
function	[function] from ||| trace [function]	count=1
function_arg	if [arg_2] ||| [function_1] [arg_2]	count=35
function	ensure ||| ensure	count=5
function_arg	paragraph from [arg_2] ||| [function_1] [arg_2]	count=1
arg	the given thread ||| thread	count=1
module	block and releases ||| thread mutex	count=1
arg	s ||| s	count=2
arg	a string to path ||| path	count=1
function_arg	for [arg_2] ||| [arg_2] [function_1]	count=9
function	an http request to ||| request	count=1
arg	to path ||| path	count=8
module	:sslprivatekey have ||| drbsslsocket	count=1
function	the prefixes names ||| prefixes	count=1
module	parsing of ||| stats	count=6
arg	setting the comment for ||| context single	count=1
function	can handle ||| can parse	count=2
function	this ||| new	count=1
function	[returnv_1] if ||| [returnv_1] autoclose [function_2]	count=1
function	a cache template ||| template	count=1
module	directory ||| dir	count=10
function	an alias ||| alias	count=4
function	initial ||| initial	count=1
function	starttls ||| starttls	count=3
module	converts ||| markup tohtmlsnippet	count=1
module	first digit of ||| net smtp response	count=1
function	configure various “with” ||| dir config	count=1
module	document ||| markup document	count=8
arg	for the [arg] ||| [arg]	count=3
function_arg	all [arg_2] ||| [function_1] [arg_2]	count=1
module	is initialized ||| logger	count=1
module	the [module] of ||| [module]	count=3
arg	+event+s that match tuple ||| event tuple expires	count=1
module	of the section ||| rdoc markup verbatim	count=1
module	feed ||| rss atom feed	count=2
module	key-value pairs for ||| sdbm	count=1
module	or rdoc :attr from ||| rdoc parser ruby	count=1
function	length of the range ||| range length	count=1
module	[module] from ||| [module] httpservlet	count=3
module	gem requested ||| gem resolver installerset	count=1
module	imap-style ||| net imap	count=1
function_arg	parameters in [arg_2] ||| [arg_2] [function_1]	count=1
function	serialised ||| creatable	count=1
module	rinda ||| rinda	count=1
function	test ||| test	count=1
function_arg	[function_1] the inline ||| [function_1] [arg_2]	count=1
module	enumerates the ||| servlet	count=1
function	local gems ||| local	count=1
returnv	object that represents the ||| encoding	count=2
function_arg	module mod ||| module mod self_hash	count=1
module	this ||| resolver	count=5
function	nested array [function_2] ||| [returnv_1] to [function_2]	count=1
function	the option ||| platform option	count=1
function	creates ||| create	count=1
arg	parameter for context ||| context	count=1
arg	fetches ||| dest	count=1
module	win32ole_type object and having ||| win32ole_type	count=1
arg	of values ||| values	count=1
function	slash ||| relative	count=1
module	line by using ||| makemakefile	count=1
arg	order of ||| order	count=1
function	sets $? ||| waitpid	count=1
function	gem ||| gem names and	count=1
arg	named by symbol to ||| symbol obj	count=1
function	tts from ||| accept	count=1
returnv	return [returnv] if this ||| [returnv]	count=1
function	json string by constructing ||| json	count=4
module	line ||| prettyprint	count=1
module	for gathering tt sections ||| markup tottonly	count=1
module	the elapsed real ||| benchmark	count=1
arg	a string according ||| string 1 jan -4712	count=2
arg	nil base the base ||| base	count=1
arg	a socket option ||| level optname	count=1
module	descriptive ||| specification	count=1
module	the response ||| smtp response	count=2
arg	[arg_1] dir and ||| [arg_2] proc [arg_1]	count=1
arg	stream ||| stream	count=1
module	resolver :dependencyrequest ||| resolver requirementlist	count=1
function	returns the cached ||| cache	count=1
arg	tar file [arg] ||| [arg]	count=1
module	to a ||| gem requestset gemdependencyapi	count=1
function	tokens ||| tk until	count=1
function	a suppressed [function_2] ||| [function_2] [function_1]	count=1
arg	anchor [arg_2] ||| [arg_2] [arg_1]	count=9
arg	mode linking to target ||| target mode	count=1
function	to a json string ||| json	count=1
function	value of pi ||| pi	count=1
function	given [function] element ||| [function]	count=1
module	this specification ||| resolver specification	count=1
arg	mutex and ||| mutex timeout	count=1
module	from the command ||| command	count=3
arg	sources or ||| sources	count=1
function	constant is ||| constant	count=1
function	html [function] ‘&’, ||| html [function]	count=1
function_arg	[function_1] symbol to ||| [arg_2] [function_1]	count=4
function	:pointer instance that is ||| ref	count=1
arg	starting in namespace from ||| from	count=1
function	gets the hostname ||| getname	count=1
function	executable by the ||| executable	count=1
module	the [module] by header ||| [module]	count=1
arg	of string ||| string	count=1
function	rubygems version ||| rubygems version=	count=2
function	vi [function_2] ||| [function_2] [function_1]	count=1
function	name with class/instance indicator ||| pretty name	count=1
function	todo deprecate and remove ||| create	count=1
function	new ||| setup	count=1
module	gzipwriter object associated ||| gzipwriter	count=1
module	:http#read_timeout ||| xmlrpc client	count=2
function	a temporary directory ||| tmpdir	count=1
returnv	the following is true ||| bool	count=1
function	shuts down the ||| shutdown	count=1
function	pair ||| delete	count=1
arg	the prompt ||| prompt	count=1
module	environment variable with name ||| env	count=1
module	for marking ||| rdoc	count=1
function	indicated based on the ||| consider	count=2
module	uri of the ||| drb	count=1
function	[function_1] the visitor ||| [function_2] [function_1]	count=1
module	ipaddr containing ||| ipaddr	count=1
module	given index @param index ||| rexml parent	count=1
function	[function] specificfile ||| [function]	count=1
function_arg	[function_1] dependency ||| [function_1] [arg_2]	count=1
function_arg	constant in ||| constant container tk	count=1
function	self to utf-16 ||| toutf16	count=1
module	the raw paragraph ||| paragraph	count=1
function	if stat terminated ||| ?	count=1
module	already ||| rdoc	count=1
arg	scheme if ||| scheme	count=1
module	other parameters provided ||| drbsslsocket sslconfig	count=1
arg	the prompt [arg_2] ||| [arg_2] [arg_1]	count=1
module	keep_files environment ||| gem testcase	count=1
module	the [module] :parser regexp ||| [module]	count=1
function_arg	[function_1] parent ||| [arg_2] [function_1]	count=4
module	returns the corresponding fiddle ||| fiddle	count=1
module	instance the [module] will ||| [module]	count=1
module	other parameters provided ||| sslconfig	count=1
module	the first ||| logger	count=1
function	real user ||| real	count=1
function	up an [function] ||| [function]	count=3
arg	userinfo ||| userinfo	count=1
arg	the given command with ||| command	count=1
arg	and comment to the ||| comment	count=1
returnv	an [returnv] ||| [returnv]	count=3
function_arg	[function_1] includes other ||| [arg_2] [function_1]	count=3
function	a gem ||| gem	count=4
module	given ||| requestset gemdependencyapi	count=1
module	the [module] key ||| [module]	count=1
module	drbobject from a ||| drb drbobject	count=1
arg	given week ||| cwyear cweek cwday	count=1
function	information if ||| debug	count=1
module	openssl :ocsp ||| openssl ocsp	count=2
module	@param parent if supplied ||| rexml parent	count=1
function	generates the makefile for ||| makefile	count=1
module	a new ||| drb drbsslsocket sslconfig	count=1
module	rd format into rdoc ||| rdoc rd	count=1
function	or ||| class	count=1
function	private setter for extensions ||| set extensions	count=1
function	http request to ||| request	count=1
arg	calls the given block ||| &block;	count=1
module	the other parameters provided ||| sslconfig	count=1
module	returns a ||| options	count=1
arg	pass ||| pass	count=3
module	single-row matrix ||| matrix	count=1
function	the ||| quote	count=1
function	[function_1] json string ||| [function_1] [function_2]	count=5
function	collection by ||| by	count=1
module	available encoding names ||| encoding	count=1
module	silent progress reporter that ||| gem streamui silentprogressreporter	count=1
module	state object ||| json ext generator state	count=1
function	[function_1] while ||| monitormixin conditionvariable [function_1] [function_2]	count=1
module	the ||| thread mutex	count=2
module	process ||| process uid	count=3
function	returns true [function_2] ||| [returnv_1] tuesday [function_2]	count=1
function	similar to read ||| read	count=1
function	last character removed ||| chop	count=1
function	post ||| post	count=2
function_arg	[function_1] if ||| tkresourcedb [function_1] class [arg_2]	count=2
function	returns the next object ||| next values	count=1
arg	symbol exists ||| symbol	count=1
module	attempts to grab the ||| mutex	count=1
function	[function_1] unspecified ||| [function_1] [function_2]	count=2
arg	includes ||| includes extends	count=1
function	default spec ||| default spec cache	count=2
function	writes the yaml ||| write options	count=1
arg	than numeric ||| numeric	count=1
arg	[arg_1] exception ||| [arg_1] [arg_2]	count=2
module	marking up this object’s ||| rdoc	count=1
function	paths ||| also in	count=1
arg	the token stream unused ||| margin	count=1
function	live in if ||| gen sub	count=1
function	argument valid [function_2] ||| [function_1] [function_2]	count=2
module	lists have redundancies ||| gem	count=1
function	group id for this ||| gid=	count=1
function	[function_1] variable named ||| [function_2] [function_1]	count=2
module	an entity definition ||| rexml entity	count=1
rep	[module_1] [function_arg_2] ||| [module_1] string [function_arg_2]	count=1
module	connection ||| sslsocket	count=1
module	contains the session object ||| ssl session	count=1
function	surrounded by html ||| html	count=1
module	if they ||| generator	count=1
arg	msgid ||| msgid options	count=1
arg	name following tk setting ||| single tk	count=1
module	other parameters ||| drbsslsocket sslconfig	count=1
module	the dependency ||| gem dependency	count=1
module	provided ||| drb drbsslsocket sslconfig	count=4
module	of ||| singleclass	count=1
function_arg	try [function_1] [arg_2] into ||| [function_1] [arg_2]	count=1
module	that are immediately ||| ssl	count=1
module	new struct ||| struct	count=1
function	that can handle ||| can parse by	count=1
function	docs will live in ||| gen	count=1
function	then ||| dir	count=1
function	ensures that ||| setup	count=1
function	[function_1] is ||| [function_2] [function_1]	count=1
function	[returnv_1] the priority ||| [returnv_1] [function_2]	count=1
function	list empty? ||| empty	count=1
module	socket object ||| socket	count=1
arg	path matches ||| path flags	count=3
module	the number of bytes ||| ssl sslsocket	count=1
function	specifies the rdoc ||| rdoc	count=1
function_arg	and object ref ||| with uri ref	count=2
arg	to address ||| address	count=1
function	allocated by malloc() ||| allocated	count=1
function	[function] for this ||| [function]	count=1
module	rdoc :generator ||| rdoc methodattr	count=1
arg	array of nodes matching ||| element path namespaces variables	count=1
function	[returnv_1] if time ||| [returnv_1] gmt [function_2]	count=1
module	corresponding fiddle constant ||| fiddle	count=1
function	pipeline ||| pipeline	count=2
module	the encoding ||| io	count=1
arg	generator ||| generator	count=1
module	row ||| csv	count=3
returnv	the list of ||| array	count=1
arg	limit characters ||| limit	count=1
module	immediately available ||| openssl ssl	count=1
module	that ||| specification	count=1
function	the base label ||| base label	count=4
function	which ||| get	count=1
arg	creates a digest [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
module	default ||| net ftp	count=1
rep	parsing of [function_arg_2] ||| [module_1] [function_arg_2]	count=6
arg	by symbol from ||| symbol	count=1
function	escapes special sequences ||| protected sequences	count=1
function	from the dependency ||| name	count=1
function	[returnv_1] if ||| [returnv_1] start with [function_2]	count=1
arg	headers you provide ||| headers opt &b;	count=1
function	cosine ||| cos	count=2
module	the po ||| generator pot po	count=1
function	[returnv_1] [function_2] ||| thwait [returnv_1] [function_2]	count=1
function	with ||| with	count=3
module	marks ||| rdoc markup formatter	count=2
function	class or module ||| or modules	count=1
function	executable ||| find executable	count=1
function	in an output ||| output	count=1
function	and [function] requests ||| do [function]	count=1
function	cross-references in ||| crossref	count=1
function	setuid bit set ||| setuid	count=2
module	rdoc ||| rdoc toplevel	count=1
function	which represents the value ||| content	count=1
function	name with class name ||| inspect	count=1
function	teardown restores the process ||| teardown	count=1
function	cannot be found ||| assoc	count=1
arg	requirement the requirement ||| requirement	count=1
arg	specified host ||| host	count=1
arg	version tags ||| version tags	count=2
module	this pointer ||| fiddle pointer	count=2
function	[function] variable from ||| remove [function]	count=2
module	mkcol ||| net http	count=1
module	prepares the visitor ||| markup tohtml	count=3
function	command to copy the ||| copy	count=1
function	if whitespace is ||| whitespace	count=1
module	the tools ||| parser rubytools	count=1
module	response object ||| httpresponse	count=1
function_arg	[function_1] and other_time ||| [function_1] [arg_2]	count=2
arg	klass service running on ||| klass	count=1
module	the –version option ||| versionoption	count=1
module	dh instance ||| openssl pkey dh	count=1
module	for use by ri ||| generator ri	count=1
arg	directives are allowed at ||| allowed	count=1
arg	s if pid ||| pid	count=1
returnv	@param parent if supplied ||| instance	count=1
function	log a message with ||| log	count=1
module	markup class ||| markup attributemanager	count=1
arg	[arg_1] with name ||| [arg_2] [arg_1]	count=3
function	with the value ||| create value	count=1
module	timeouthandler ||| webrick utils timeouthandler	count=1
arg	in classmodule cm ||| cm	count=2
function	delegates [function] to the ||| [function]	count=1
module	visitor for html ||| rdoc	count=1
function	the default port to ||| default port	count=3
module	the dependency will ||| dependency	count=1
module	no ||| module	count=1
function	text file instead ||| text	count=1
function	the value as a ||| value	count=1
module	when ||| logger	count=1
module	a rdoc ||| rdoc	count=2
module	does other [module] ||| [module]	count=2
function	[function_1] [function_2] ||| [function_2] object allocations [function_1]	count=1
arg	the object_id id to ||| id	count=1
function	the ||| accept	count=5
module	in the feed ||| rss atom feed entry	count=1
module	stats ||| rdoc stats	count=1
function	requested domain if local ||| local ?	count=1
function	creates a gem ||| gem	count=2
function	prepares the visitor ||| start	count=7
function	representable floating-point number ||| float	count=1
module	unlocks a [module] ||| [module]	count=2
module	the ||| rdoc singleclass	count=1
arg	key-value-pair with [arg] from this ||| [arg]	count=1
arg	[arg_1] of ||| [arg_2] [arg_1]	count=1
arg	used for quick navigation ||| req res	count=1
function	resets the internal state ||| reset	count=1
arg	to out_stream for size ||| out_stream size initial_message	count=1
arg	for each [arg] times ||| [arg]	count=1
function	the block ||| block	count=3
module	builds a rdoc ||| rdoc	count=2
function	the #page_dir ||| finish page dir	count=1
function	one that is ||| gen	count=1
returnv	:return ||| symbol	count=1
arg	with the given permissions ||| permissions	count=1
module	module in ||| module	count=1
returnv	of the month ||| fixnum	count=1
module	rdoc :attr ||| rdoc parser	count=4
function	the list of ||| name list	count=1
arg	[arg_1] for size ||| [arg_1] [arg_2]	count=4
module	rdoc :markup ||| rdoc ri	count=1
arg	digests match the ||| key digests	count=1
arg	denoting the given ||| minute second offset start	count=1
arg	content [arg_2] ||| [arg_1] [arg_2]	count=5
module	case that calls @to ||| rdoc markup formattertestcase	count=1
module	syslog warning ||| syslog logger	count=1
module	been turned off by ||| rdoc codeobject	count=1
module	the user ||| makemakefile	count=1
function_arg	compares this version [function_1] [arg_2] http specification rules ||| [function_1] [arg_2]	count=1
module	codeobject and all ||| rdoc codeobject	count=1
module	webrick :config ||| webrick	count=1
function	[returnv_1] [function_2] ||| [returnv_1] has conflicts [function_2]	count=1
rep	[module_1] page name ||| [module_1] driver display [function_arg_2]	count=1
module	as an rdoc ||| rdoc	count=1
function	the next line from ||| gets	count=2
function	[returnv_1] if the ||| [returnv_1] listable [function_2]	count=1
function	defined in ||| defined	count=1
function	its [function] or ||| [function]	count=1
function	gem names from ||| gem names	count=2
module	this list and all ||| markup list	count=1
arg	with an optional freefunc ||| freefunc	count=1
module	csv data ||| csv	count=1
function	execute the given ||| realtime	count=1
module	gems to a set ||| gemdependencyapi	count=1
function	path to the ||| cert path	count=1
arg	and other are both ||| other	count=1
function	is the union of ||| union	count=1
function	a string explanation ||| explain	count=1
module	classmodule ||| rdoc classmodule	count=1
module	its original state ||| gem testcase	count=1
arg	the original [arg] also ||| digest signature [arg]	count=1
module	to ||| gem indexer	count=1
arg	given alias ||| alias	count=1
module	in json ||| json ext	count=1
module	the [module] ||| gem [module]	count=14
function	rounding mode for ||| rounding mode	count=2
function	[returnv_1] the priority ||| [function_2] [returnv_1]	count=1
function_arg	paths for [arg_2] ||| [function_1] out [arg_2]	count=2
function	upon the settings ||| document	count=1
arg	method on ||| method	count=2
module	in json objects ||| json ext generator state	count=1
function	[function_1] real user ||| [function_2] [function_1]	count=1
module	status object ||| status	count=1
function	id ||| getsid	count=1
arg	the dependency is ||| dependency	count=1
arg	check_parent parameter was given ||| check_parent	count=1
function	setter ||| setter	count=1
function	page ||| title=	count=1
function	a ||| inspect	count=1
arg	operation [arg] ||| [arg]	count=3
module	an rdoc :markup :document ||| rdoc rd blockparser	count=1
module	asn1data ||| asn1 asn1data	count=1
function	siginfo handler and ||| siginfo handler	count=2
module	the raw version string ||| gem version	count=1
module	they ||| rdoc generator	count=1
function	the superclasses of obj ||| is a	count=1
module	the descriptive fields in ||| gem specification	count=1
function	returns a string ||| to string	count=1
function	ole object ||| ole	count=2
function	scalar ||| scalar	count=1
arg	was matched to pattern ||| pattern n	count=1
module	ios is associated ||| io	count=1
function	and deletes [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] data hashes ||| [function_2] [function_1]	count=4
arg	a ||| name	count=2
module	currently selected mailbox ||| imap	count=1
function	pem encoded ||| pem	count=1
function	returns the imaginary part ||| imaginary	count=1
module	syslog alert log ||| syslog	count=1
module	unless ||| rdoc	count=1
arg	[arg_1] sec as ||| [arg_2] [arg_1]	count=8
function	returns ||| to io	count=1
function	data hashes ordered from ||| data	count=1
arg	needed ||| needed set	count=1
arg	quick navigation to the ||| req res	count=1
function	of global variables ||| global variables	count=2
module	threadswait object ||| threadswait	count=1
module	translation ||| rdoc i18n	count=1
module	the current token to ||| rdoc markup	count=1
module	variable ||| gem	count=1
function	the proxy ||| proxy from	count=1
function_arg	[function_1] [arg_2] from the tuple ||| [function_1] [arg_2]	count=2
arg	[arg_1] date-time object ||| [arg_2] [arg_1]	count=4
module	component array ||| generic	count=1
function	[function_1] input ||| [function_2] [function_1]	count=2
function	the parameters ||| params	count=2
function	internal ||| internal	count=4
function	adjugate ||| adjugate	count=1
module	of files so ||| specification	count=1
function	::new is private [returnv_1] [function_2] ||| vector [returnv_1] [function_2]	count=1
function	visitor ||| list	count=4
function	extracts ||| scan	count=1
module	be called ||| streamlistener	count=1
function	expect full paths ||| full paths ?	count=2
module	sets optionparser ||| optionparser	count=1
function	an ||| email to name	count=1
arg	to limit ||| limit	count=1
module	that all ||| gem	count=1
module	to ||| thread mutex	count=2
module	in ||| rdoc generator	count=1
module	this streamui ||| gem streamui	count=1
function	and number of undocumented ||| stats	count=1
module	representing a yaml sequence ||| psych nodes sequence	count=1
function_arg	resources [arg_2] ||| [function_1] [arg_2]	count=1
function	the integer [function_2] ||| [function_2] [function_1]	count=2
function	and false if not ||| civil ?	count=1
function	tts from ||| accept block	count=1
module	the peer ||| ssl sslsocket	count=1
module	process ||| gem testcase	count=1
module	logging ||| logger	count=1
arg	with key to value ||| key value	count=1
function	an output [function_2] ||| [function_2] [function_1]	count=1
module	trace output ||| tracer	count=1
module	child @param ||| rexml parent	count=1
module	for restricting gems ||| requestset	count=1
function	encoded internal string ||| encoded	count=1
function	creates a self-signed certificate ||| create cert	count=1
arg	value of fix ||| fix	count=1
function	[function_1] local gems ||| [function_2] [function_1]	count=8
module	enum equals ||| enumerable	count=1
function	environment ||| environment	count=2
arg	host ||| host	count=7
module	been provided ||| drbsslsocket	count=1
arg	left if numeric ||| numeric	count=1
module	turned ||| rdoc	count=1
function_arg	[function_1] by symbol ||| [function_1] [arg_2]	count=1
function_arg	spec [arg_2] ||| [function_1] spec path [arg_2]	count=2
function	paths in the gem ||| paths	count=1
function	maximum ||| max	count=1
function	with a prefix call ||| proc	count=1
function	[returnv_1] if ||| [returnv_1] return headers [function_2]	count=1
function	[function_1] development dependency ||| [function_1] [function_2]	count=1
arg	year of the proleptic ||| year	count=1
module	and associates short long ||| optionparser	count=1
function	json string ||| json	count=17
function	current cursor position in ||| point	count=1
function	irb commands ||| commands	count=1
module	process to ||| process sys	count=2
function	lines [function_2] ||| [function_2] out [function_1]	count=1
module	the aws-sdk gem fortunately ||| gem	count=1
arg	class_name or module ||| class_name	count=1
module	full ||| basicspecification	count=1
module	and instantiates [module] ||| [module]	count=1
module	multiple rdoc :markup :documents ||| rdoc	count=1
function	the default port ||| default port	count=6
module	module mod ||| module	count=1
module	be ||| rdoc task	count=2
module	the [module] to the ||| [module]	count=2
function	path of the directory ||| dir	count=1
function	[function_1] the mkd ||| [function_2] [function_1]	count=2
module	object’s comment ||| generator	count=1
module	into rdoc ||| rdoc	count=1
function	returns true [function_2] ||| [returnv_1] exited [function_2]	count=2
arg	to kernel#load ||| fn priv	count=1
function	maximum should be ||| max	count=1
returnv	it isn’t available ||| self	count=1
module	of files so ||| gem	count=1
arg	ty see also #struct ||| ty val	count=1
arg	obj [arg_2] ||| [arg_2] [arg_1]	count=2
arg	port and calls the ||| port	count=1
function	returns the singleton ||| singleton	count=1
function	return the json ||| to json	count=1
module	returns a ||| rdoc options	count=1
function	a pager program ||| setup pager	count=1
function_arg	adds symlink name ||| add symlink name	count=1
function	[function_1] memory address ||| [function_2] [function_1]	count=1
module	syslog notice log ||| syslog	count=1
function	and the ||| file and	count=1
module	the dependency graph? @return ||| resolver molinillo	count=1
module	this activation ||| gem resolver activationrequest	count=1
arg	[arg_1] includes ||| [arg_2] [arg_1]	count=2
module	already a float ||| float	count=1
function	[function_1] [function_2] returned as a ||| return [function_2] [function_1]	count=1
function_arg	name [arg_2] ||| [function_1] [arg_2]	count=1
module	nametuple ||| nametuple	count=1
module	the ||| stats	count=1
function	length and number ||| doc	count=1
arg	markdown document ||| markdown	count=1
module	is ||| module	count=3
module	token to ||| markup	count=1
function	with the given ||| key	count=3
module	of undocumented items ||| stats	count=1
function	return true [function_2] ||| [returnv_1] has conflicts [function_2]	count=1
function	name of this file ||| name	count=1
module	live ||| rdoc generator	count=1
module	representation for ||| generatormethods	count=2
module	this object’s and _getobj_ ||| delegator	count=1
arg	via the string key ||| key	count=1
module	of the last ||| zlib gzipreader	count=1
function	internal consistency ||| internal consistency	count=2
module	authoritative instance ||| commandmanager	count=1
function	of normalize ||| normalize !	count=1
function	proxy uri for the ||| get proxy	count=1
function	the hash value returned ||| hash	count=1
module	the pager ||| ri driver	count=1
module	and ||| xmlrpc	count=1
function	this to ignore a ||| ignore	count=1
arg	obtained by memberwise operation [arg_1] [arg_2] ||| memberwise [arg_1] [arg_2]	count=4
function	#page_dir ||| page dir	count=1
module	be an rdoc ||| rdoc	count=2
returnv	supplied will be set ||| instance	count=1
function	adds ||| quote	count=1
module	will live in ||| rdoc generator	count=1
function_arg	path [arg_2] ||| [arg_2] [function_1]	count=1
arg	anchor element as a ||| href	count=1
arg	parsing from [arg] according ||| [arg]	count=3
function	methodresponse ||| methodresponse	count=1
function	of class variables ||| class variables	count=2
module	that ||| markup	count=2
arg	the specified string value ||| value	count=1
function	calculate the necessary offset ||| ctypes	count=1
module	identical objects ||| gem indexer	count=1
function	method call ||| method	count=1
arg	a vector [arg] ||| [arg]	count=1
arg	to target ||| target	count=1
function	task [function] clobber rdoc ||| clobber task [function]	count=1
module	generate a sequence of ||| cgi htmlextension	count=1
function	[function] tracer library ||| [function]	count=2
arg	name from the ||| name	count=4
module	will be ||| task	count=1
module	using file ||| file	count=1
arg	list n ||| list options	count=1
arg	the path and gets ||| path data	count=1
module	‘::’ for the alias ||| alias	count=1
function	::new is private use [returnv_1] [function_2] ||| [returnv_1] [function_2]	count=1
function	to gem ||| gem	count=1
arg	files in ||| options	count=1
function_arg	the gem [arg_2] ||| [function_1] user [arg_2]	count=3
function	the address ||| address	count=1
arg	mode ||| mode	count=2
function	[function_1] [function_2] a ||| [function_2] key [function_1]	count=1
module	to select ||| net	count=1
module	this ||| csv	count=2
module	prepares the ||| markup tordoc	count=3
function	[function_1] by ||| [function_1] [function_2]	count=1
arg	digest [arg] ||| [arg]	count=1
function	login ||| login	count=1
arg	attribute name name ||| name	count=1
function	win32 [function_2] ||| [function_2] [function_1]	count=4
module	if the [module] is empty ||| [module]	count=2
arg	an httprequest ||| body	count=1
arg	[arg_1] value ||| [arg_1] [arg_2]	count=3
arg	[arg] bind ||| signature [arg]	count=3
function_arg	converts document to ||| display document	count=1
returnv	array of group ids ||| array	count=1
module	prepares the visitor ||| markup tottonly	count=1
arg	a string according ||| string 1	count=2
arg	and numeric_address ||| reverse_lookup	count=2
module	[module] given ||| [module]	count=2
function	returns true if ||| bool eql ?	count=4
function	the power ||| **	count=1
module	in the tuplebag which ||| tuplebag	count=1
arg	the [arg] ||| [arg] req	count=2
module	date/time ||| xmlrpc datetime	count=1
arg	to ||| path	count=1
arg	text with text and ||| text	count=1
module	accept_raw+ ||| rdoc markup raw	count=1
arg	path if no block ||| path	count=1
returnv	[returnv] time ||| [returnv]	count=1
function_arg	[function_1] [arg_2] to the stream ||| openssl buffering [function_1] [arg_2]	count=1
arg	path returning the underlying ||| path	count=1
arg	name and returns ||| name	count=1
module	with hax todo ||| gem	count=1
function_arg	the gem [arg_2] ||| [function_1] dir [arg_2]	count=1
module	location of ri data ||| rdoc ri	count=1
arg	implicit start and end ||| implicit	count=1
arg	local object to ||| obj	count=1
module	struct values v ||| struct	count=1
module	certificate and is ||| security policy	count=1
returnv	a version from ||| instance	count=1
function	[returnv_1] if the ||| [returnv_1] julian leap [function_2]	count=1
function	[function_1] template in ||| [function_2] [function_1]	count=2
module	status ||| webrick	count=1
arg	format the given ||| format	count=1
function_arg	[function_1] given string ||| [arg_2] [function_1]	count=2
arg	for address from the ||| address	count=3
function	set of ||| platform	count=1
function	a spec and ||| spec by	count=1
returnv	than zero [returnv] otherwise ||| [returnv]	count=1
module	creates an rdoc ||| rdoc	count=5
function	returns true [function_2] ||| [returnv_1] member [function_2]	count=3
module	first instance is created ||| syslog logger	count=1
function	a lazy enumerator ||| lazy	count=1
module	this toplevel for use ||| rdoc toplevel	count=1
arg	and prefix ||| level prefix	count=1
function	removes ifdefs ||| handle ifdefs	count=1
function	by name from ||| by name	count=1
function	to the output ||| block quote	count=1
arg	for size items ||| size initial_message terminal_message	count=1
function	the issuer ||| issuer of	count=1
arg	file descriptor as a ||| mode perm	count=1
module	a set of ||| requestset	count=1
module	title ||| context section	count=1
arg	file path ||| path	count=2
module	ensures that ||| drb drbsslsocket sslconfig	count=1
arg	tts from block_quote to ||| block_quote	count=1
module	content ||| net httpheader	count=1
returnv	returns true ||| bool	count=216
module	for this [module] ||| [module]	count=3
module	read from this ||| zlib gzipreader	count=1
function	quirks [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] of n ||| [arg_2] [function_1]	count=8
returnv	block [returnv] ||| [returnv]	count=1
function	finds the class ||| find class	count=2
function	default port to use ||| default port	count=2
function	is [function] ||| private method [function]	count=3
module	returns a [module] :security ||| [module]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] installed [function_2]	count=2
function_arg	[function_1] orig if ||| [arg_2] [function_1]	count=1
module	of this ||| rexml	count=1
returnv	will ||| instance	count=1
function_arg	environment [arg_2] ||| [arg_2] [function_1]	count=2
module	supplied will be set ||| parent	count=1
module	this ||| basicspecification	count=1
arg	current activated ||| activated	count=1
arg	row an array ||| row	count=1
arg	rid and eid respectively ||| rid eid	count=1
function	look for directives in ||| look for directives in	count=1
module	docs will ||| darkfish	count=1
function	the constructed ||| call	count=1
function	organization-local ||| orglocal	count=1
arg	spec ||| spec generate_rdoc	count=1
function	files to be ||| files	count=1
function	[function_1] [function_2] for the command ||| gem command [function_1] [function_2]	count=4
arg	method on klass ||| klass method	count=2
arg	content ||| content options	count=2
function_arg	variable [arg_2] ||| [arg_2] [function_1]	count=4
module	that ||| gem	count=9
function	key [function] ||| each [function]	count=1
function	components defined from the ||| component ary	count=1
function	can handle a particular ||| can parse	count=1
function	single [function_2] ||| [function_1] [function_2]	count=4
module	the number of bytes ||| openssl ssl sslsocket	count=1
module	@return ||| resolver molinillo dependencygraph	count=1
function	[function_1] private ||| [function_2] [function_1]	count=5
function	self-signed certificate with ||| create cert self signed	count=1
function	of the spec ||| spec	count=1
function	or ||| get class or module	count=1
function	[function_1] visitor tests ||| [function_2] [function_1]	count=1
function	with the concatenated ||| collect concat	count=1
function	they don’t already exist ||| gen	count=1
function	verify [function_2] ||| [function_1] [function_2]	count=2
function_arg	finishes consumption [arg_2] ||| [function_1] [arg_2]	count=5
function	sequence ||| sequence	count=3
function	“with” options ||| config	count=1
function	domain if remote gems ||| remote ?	count=1
function	a field ||| field	count=2
arg	[arg_1] [arg_2] ||| [arg_1] key [arg_2]	count=20
function	[function_1] case ||| [function_2] [function_1]	count=2
arg	which provides #method_missing ||| server prefix args meth delim	count=1
function	return a ||| to	count=1
arg	to store ||| store	count=1
module	queue ||| sizedqueue	count=3
module	lock source that ||| gem source lock	count=1
rep	the ri [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function_arg	[function_1] [arg_2] row column it also ||| [function_1] [arg_2]	count=4
module	be ||| gem	count=1
function_arg	only [function_1] [arg_2] ||| equal [function_1] [arg_2]	count=3
arg	manner ||| true	count=1
module	up a ||| rdoc	count=1
module	=> [module] of elements} ||| [module]	count=1
function	list of ||| method list	count=1
module	raw cookie string into ||| cgi cookie	count=1
function	as a [function_2] ||| [function_2] [function_1]	count=12
function	to the power of ||| power	count=1
module	with ||| gem testcase specfetchersetup	count=1
module	include that ||| rdoc markup include	count=1
function	yaml [function_2] ||| [function_2] [function_1]	count=2
module	sets the ||| client	count=1
arg	the given extensions for ||| extensions	count=2
function	the value as a ||| to	count=2
module	set ||| set	count=7
function	a set of possible ||| possible	count=1
module	from the [module] by header ||| [module]	count=1
function	the environment variables ||| env	count=1
function	a copy ||| clone	count=1
module	public key unless ||| dh	count=1
returnv	number of native file ||| integer	count=1
arg	month [arg_2] ||| [arg_1] [arg_2]	count=6
module	request? ||| webrick httprequest	count=2
arg	message to ||| message flags date_time	count=1
function	[returnv_1] [function_2] is ||| [returnv_1] [function_2]	count=18
module	in if they ||| rdoc	count=1
module	current irb ||| irb	count=1
returnv	block [returnv] containing ||| [returnv]	count=1
function	argument valid ‘nz_number’ ||| valid nz number	count=2
arg	dependency which has no ||| dependency	count=1
arg	values in other_str ||| other_str	count=1
arg	true if path matches ||| path flags	count=1
module	as key and coverage ||| coverage	count=1
function	error message ||| error message	count=1
module	the descriptive ||| gem specification	count=1
module	this drbobjecttemplate matches ||| drbobjecttemplate	count=1
module	this hash ||| generatormethods hash	count=1
function_arg	existing section ||| []= section	count=1
function	sign properly ||| sign	count=1
arg	set ||| set attr	count=1
arg	types of compression ||| level strategy	count=1
module	created ||| syslog logger	count=1
function	[function_1] file with ||| [function_2] [function_1]	count=1
function	that ||| external	count=2
module	this dsa instance ||| pkey dsa	count=1
function_arg	[function_1] [arg_2] ||| time [function_1] [arg_2]	count=5
function	executables and ||| executables	count=1
arg	headers that you ||| headers opt &b;	count=1
arg	specified by [arg] as a ||| [arg]	count=1
arg	in data for ||| data options	count=1
module	to change the name ||| net	count=1
function	[returnv_1] that ||| [function_2] [returnv_1]	count=2
module	rows for ||| csv table	count=1
arg	number of significant digits ||| digits	count=1
module	receiving module ||| module	count=1
arg	interp ||| interp	count=2
function	[function] instead of ||| process based [function]	count=1
arg	given key object ||| key	count=1
function	configure ||| config	count=1
function	seconds ||| sleep	count=1
function	from the cross-references ||| crossref	count=1
function	vtbl ||| vtbl	count=1
function	finds the file ||| find file	count=2
function	the freeze status ||| frozen	count=1
module	a formatted ||| driver	count=1
arg	method sends a message ||| msgstr	count=1
function	sets the ||| timeout=	count=1
function	adds tts ||| quote	count=1
arg	[arg_1] tag implicit ||| [arg_2] [arg_1]	count=3
function	to a set of ||| platform	count=1
function	retrieves a value ||| []	count=1
function	send the getacl ||| getacl	count=1
arg	needed dependency ||| needed	count=1
function_arg	[function_1] [arg_2] ||| [function_1] question [arg_2]	count=3
function	[returnv_1] [function_2] ||| [returnv_1] to [function_2]	count=33
module	to this ||| generator markup	count=1
module	json to the ||| json	count=1
arg	name version ||| name version dependencies &block;	count=2
arg	front with a description ||| front desc	count=1
function	todo ||| create	count=1
module	[module] using its ||| [module]	count=2
function	[function] containing bold ||| test accept [function]	count=1
arg	by looking for ||| container	count=1
function	output through ||| setup	count=1
function	dele/rmd ||| deletable	count=1
arg	enclosing ||| enclosing	count=1
function	reply 2xx reply code ||| success ?	count=1
module	an x509 ||| openssl x509	count=1
function	the proxy for ||| proxy from	count=1
function	special handler ||| special	count=1
module	a new ||| drbsslsocket	count=1
arg	a string according to ||| string	count=4
arg	path of ||| path	count=1
function	given string ||| key	count=1
function	by dele/rmd ||| deletable	count=1
module	form for restricting gems ||| gem requestset gemdependencyapi	count=1
function_arg	row [arg_2] ||| matrix [function_1] [arg_2]	count=3
function	[function] date-time object ||| [function]	count=1
module	class corresponding to ||| webrick	count=1
module	tts ||| rdoc markup tottonly	count=2
arg	permissions mode linking to ||| mode	count=1
function	variables [function] hash that ||| [function]	count=1
function_arg	[function_1] key ||| [arg_2] [function_1]	count=3
module	documentation unless documentation has ||| codeobject	count=1
arg	new closure wrapper ||| ctype argtype call_type &block;	count=1
function	string describing [function] ||| [function] delta	count=1
function	removes a [function_2] ||| [function_2] [function_1]	count=5
module	by rdoc :generator :jsonindex ||| rdoc	count=1
arg	by parsing from a ||| start	count=4
function_arg	[function_1] start and ||| [arg_2] [function_1]	count=1
function	get request to the ||| request get	count=1
function	to exit or if ||| exit	count=1
function_arg	deserializes [function_1] [arg_2] with values v serialized ||| [function_1] [arg_2]	count=2
function	raw ||| raw	count=4
function	a module or class ||| module	count=1
module	frame ||| frame	count=1
module	c code ||| rdoc parser c	count=1
module	matrix or a vector ||| matrix	count=1
module	removes ||| parser rubytools	count=1
function	check ||| check	count=1
module	logger ||| logger	count=1
module	form for restricting ||| requestset	count=1
function	owner ||| grpowned	count=2
arg	given name called ||| name	count=1
module	the object if local ||| drb	count=1
function	directory path ||| cache dir	count=1
arg	orig if it ||| orig	count=1
arg	[arg_1] permissions mode ||| [arg_2] [arg_1]	count=1
arg	array of nodes matching ||| namespaces variables	count=1
arg	data ||| data options	count=1
module	been provided or ||| drb	count=1
function	name and ||| name	count=1
arg	process by running the ||| command... options	count=1
arg	[arg_1] of name ||| [arg_1] methods [arg_2]	count=1
module	row ||| csv table	count=1
module	server listening ||| server	count=1
function_arg	loads ri [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] label of ||| [function_1] [function_2]	count=6
module	will live ||| rdoc generator	count=1
module	will be set ||| rexml parent	count=1
function	uri ||| install class name	count=1
module	outputs this ||| openssl	count=1
function	prerelease? ||| prerelease ?	count=1
function	a properly-space ||| generator	count=1
returnv	obj ||| obj	count=2
module	no possible matching specifications ||| gem resolver molinillo specificationprovider	count=1
function	returns true [function_2] ||| threadswait [returnv_1] empty [function_2]	count=1
function	from a list ||| []	count=1
function	[function] all_hash ||| [function]	count=1
module	an element if ||| elements	count=1
function	an answer from ||| choose from	count=1
module	cert ||| x509 request	count=2
module	json #max_nesting = 0 ||| json ext generator	count=1
module	the –platform ||| gem versionoption	count=1
function	returns the transpose ||| transpose	count=1
function	the next [function_2] ||| [function_2] [function_1]	count=4
function	private [function_2] ||| [function_2] [function_1]	count=3
module	header fields ||| httpheader	count=1
function	commands irb :context#main ||| commands	count=1
module	an rdoc :attr for ||| rdoc parser ruby	count=2
module	for use by ri ||| rdoc	count=1
function	in this ||| assign	count=1
function_arg	try [function_1] [arg_2] ||| try [function_1] [arg_2]	count=5
function	in whatever ||| put	count=1
returnv	true ||| bool	count=67
function	load extra ||| load from binary extra	count=1
function_arg	[function_1] spec that ||| [arg_2] [function_1]	count=1
function	dir for ||| dir for	count=1
function	the ||| block	count=1
module	num is a ||| numeric	count=1
module	for restricting gems ||| gem requestset	count=1
module	with pixel ||| tkphotoimage	count=1
arg	[arg_1] boolean add ||| [arg_1] [arg_2] rem	count=4
arg	the given extensions ||| age extensions serial	count=1
function	with the given http ||| request	count=1
function	a finalizer to ||| define finalizer	count=1
arg	[arg_1] options from ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] spec in ||| [arg_2] [function_1]	count=3
module	:sslcertificate and ||| sslconfig	count=1
function	each ||| files	count=1
function_arg	the names [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] and ||| [arg_1] key [arg_2]	count=1
arg	plaintext password ||| password	count=1
function	profile data hashes ||| data	count=1
function	string [function_2] ||| [returnv_1] to [function_2]	count=4
function	returns the elements ||| to	count=1
arg	or raising nameerror ||| sym	count=1
module	or class this constant ||| rdoc constant	count=1
module	in the generated json ||| json ext	count=1
rep	ri [function_arg_2] ||| [module_1] [function_arg_2]	count=3
function	create a new cgi ||| new	count=1
module	contains [module] or character ||| [module]	count=1
function_arg	[function_1] signatures ||| [arg_2] [function_1]	count=1
module	win32ole_type object ||| win32ole_type	count=1
arg	an httprequest object ||| body	count=1
function	the gem file ||| gem	count=1
arg	up to ||| flags outbuf opts	count=1
function	closes the log device ||| close	count=1
arg	out ||| out	count=5
arg	name and requirements ||| name	count=1
function	visitor for html generation ||| start accepting	count=1
module	strio is not readable ||| stringio	count=1
function	sorted by ||| sorted module	count=1
module	from ||| zlib gzipreader	count=1
module	that this element belongs ||| rexml element	count=1
function	[returnv_1] [function_2] threads in the pool ||| threadswait [returnv_1] [function_2]	count=1
arg	subset of names ||| refname mailbox	count=1
module	this response ||| webrick httpresponse	count=1
function	sets the parameters ||| set	count=1
function	[returnv_1] [function_2] any member of ||| [returnv_1] [function_2]	count=1
arg	parses [arg] ||| [arg]	count=3
function	returns self ||| to	count=1
function_arg	a trace [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] special sequences ||| [function_2] [function_1]	count=1
module	psych ||| psych	count=7
module	that will ||| gem resolver	count=1
function	which has [function] ascii characters ||| ascii [function]	count=1
function	fetches a child at ||| []	count=1
arg	flag file ||| op_dir time last	count=1
arg	bits the [arg_2] ||| [arg_2] [arg_1]	count=7
module	not every message digest ||| digest	count=1
function_arg	delegator instance [arg_2] ||| [arg_2] [function_1]	count=1
function	only [function] ||| equal [function]	count=1
module	struct for which ||| struct	count=1
rep	includes an [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	parser ||| parser	count=10
module	to ||| gem testcase	count=1
returnv	true if the ||| bool	count=2
module	the silent download ||| silentdownloadreporter	count=1
module	new enumerator ||| enumerator	count=1
module	entity ||| entity	count=2
module	from [module] ||| [module]	count=5
returnv	array of key ||| array	count=1
function	[returnv_1] result of ||| [returnv_1] [function_2]	count=1
function	ignores ||| fold	count=1
function	[function] needed ||| [function]	count=2
arg	transfers [arg] ||| [arg]	count=3
function	to [returnv_1] [function_2] ||| [returnv_1] to [function_2]	count=2
module	tomdoc from text ||| rdoc tomdoc	count=1
module	bytes that are ||| openssl	count=1
returnv	of ||| string	count=1
function_arg	[function_1] tag a ||| [function_1] [arg_2]	count=1
module	password from the database ||| httpauth htpasswd	count=1
module	a version ||| version	count=1
function	accept_list_item_start_note_2 ||| list item start note 2	count=1
module	that calls @to ||| markup	count=1
arg	with value ||| value	count=2
module	downloads ||| gem remotefetcher	count=2
module	live tuple that matches ||| rinda tuplebag	count=1
module	constructs a new gem ||| gem	count=1
module	text gem implementation returns ||| gem text	count=1
module	for use with analysis ||| basicspecification	count=1
function	difference [function] expects ||| [function]	count=1
function	its ancestors ||| defined	count=1
module	used for indexing ||| gem	count=1
function	[function_1] paragraph that ||| [function_2] [function_1]	count=1
function	bytes read out ||| bytes read	count=1
arg	[arg_1] items ||| [arg_1] [arg_2]	count=1
module	have ||| sslconfig	count=1
module	that is flush to ||| rdoc markup	count=1
module	if they don’t already ||| rdoc generator darkfish	count=1
function	completion reply 2xx ||| success	count=1
arg	at directory root ||| root	count=1
arg	@param arg either a ||| arg	count=1
function	mapped/compatible ipv6 ||| ipv6 to	count=2
returnv	value of the ||| value	count=1
module	digest object and ||| digest	count=1
function	[function] requests for ||| others [function]	count=3
function	[returnv_1] [function_2] a ||| [returnv_1] [function_2]	count=4
arg	documentation tree to store ||| store	count=1
module	ri ||| rdoc store	count=1
module	n diagonal [module] where each ||| [module]	count=1
function	password input ||| password field	count=1
returnv	represents the ||| encoding	count=2
arg	[arg_1] the options ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] given base_directory ||| [function_1] [arg_2]	count=5
function	[function] the value ||| [function]	count=1
function	the raw [function_2] ||| [function_1] [function_2]	count=3
function	returns the last win32 ||| win32 last	count=1
function	switches the mode ||| by	count=1
function	specified ||| has	count=1
module	an openssl ||| gem security	count=1
arg	to path which is ||| path	count=1
arg	mapped [arg] that ||| [arg]	count=1
function	skip the ||| skip for	count=1
module	big to the ||| bignum	count=1
arg	given extensions for the ||| age extensions serial	count=1
function	for [function] obtained ||| [function]	count=1
function_arg	[function_1] text to ||| [arg_2] [function_1]	count=1
function	through enumeration ||| count	count=1
function	before the [function_2] ||| [function_1] [function_2]	count=1
arg	given path ||| path mode	count=1
function	[function_1] matching ||| [function_1] [function_2]	count=1
module	file component and returns ||| file	count=1
function	“with” options ||| dir	count=1
module	tomdoc parser ||| rdoc tomdoc	count=1
function	combines [function_2] ||| [function_1] [function_2]	count=1
module	docs will live ||| generator darkfish	count=1
function	displays documentation ||| show documentation	count=1
rep	a [function_arg_2] ||| [module_1] add [function_arg_2]	count=7
function	the private ||| private	count=3
arg	to true enables ||| enable	count=1
module	turned off by ||| codeobject	count=1
function	length and number of ||| doc	count=1
module	the first digit ||| response	count=1
arg	decimal ||| decimal	count=3
module	block was terminated :break ||| localjumperror	count=1
arg	connects to the ||| address port helo user secret authtype	count=1
returnv	signature is valid given ||| bool	count=1
function	[function_1] path ||| gem [function_1] [function_2]	count=1
module	attribute eg puts ||| attribute	count=1
function	if remote ||| remote ?	count=2
arg	to path if necessary ||| path	count=1
module	accept_paragraph_underscore with [module] ||| [module]	count=1
module	for ||| http	count=1
function	:markup :paragraph from ||| paragraph	count=1
function	argument valid ||| valid	count=2
function_arg	[function_1] [arg_2] a human can understand ||| [function_1] [arg_2]	count=3
function_arg	[function_1] path ||| [function_1] unresolved tree [arg_2]	count=3
arg	given permissions ||| permissions	count=1
arg	[arg_1] which ||| [arg_2] [arg_1]	count=6
module	silent progress ||| silentprogressreporter	count=1
function	the given file in ||| file	count=1
function	the method ||| method	count=3
function	the length ||| stats	count=1
function_arg	[function_1] given scheme ||| [function_1] from env [arg_2]	count=1
module	the net ||| client	count=1
function	and deletes all messages ||| delete all	count=1
returnv	a fixnum ||| fixnum	count=1
arg	[arg_1] integer safe ||| [arg_2] [arg_1]	count=1
arg	delegate object by forwarding ||| m include_private	count=1
module	marking up this ||| generator markup	count=1
module	called ||| molinillo ui	count=1
function	get a constant that ||| get constant	count=1
arg	subject and the given ||| subject	count=1
returnv	object not enabled ||| obj	count=1
arg	mode linking to ||| mode	count=1
arg	arguments by parsing ||| args	count=1
function	sends a ||| data	count=1
function	the api compatibility version ||| api version	count=1
module	of ri data ||| rdoc ri	count=1
arg	token stream unused returns ||| margin	count=1
arg	bits [arg_2] ||| [arg_2] [arg_1]	count=9
function	a content [function_2] ||| [function_2] [function_1]	count=3
module	unless the keep_files ||| gem	count=1
module	name [module] ||| [module]	count=6
module	an attlistdecl pulling the ||| rexml attlistdecl	count=1
function	contains ||| has	count=2
module	that will look for ||| rinda	count=1
module	if argument ||| optionparser switch	count=1
module	vendor source ||| source vendor	count=1
module	irb_require irb :irbloader#source_file irb ||| irb extendcommandbundle	count=1
arg	bin [arg_2] ||| [arg_1] [arg_2]	count=1
arg	and includes ||| includes	count=1
function	request is ||| ?	count=2
arg	made to an ||| sym	count=1
module	socket using ||| socket	count=1
function	[returnv_1] [function_2] ||| [returnv_1] write [function_2]	count=1
function	if the ||| ===	count=1
module	option name ||| option	count=1
function	[function] specificfile for ||| [function]	count=1
arg	ri data for method ||| method	count=1
function	pager program to pass ||| setup pager	count=1
arg	underlying file descriptor as ||| perm	count=1
arg	with the ||| name	count=3
function	[returnv_1] if ||| [returnv_1] enterable [function_2]	count=1
module	sorts ||| rdoc context	count=1
arg	sym returning ||| sym	count=1
function	configure various ||| dir config	count=1
module	method ||| multitkip	count=1
arg	comment and is ||| comment	count=1
arg	of type [arg_2] ||| [arg_1] [arg_2]	count=2
module	block form for restricting ||| gem requestset	count=1
module	by using ||| makemakefile	count=1
module	openssl :digest must be ||| openssl	count=1
function_arg	request to [arg_2] ||| [function_1] get [arg_2]	count=1
function	a private key ||| private ?	count=1
module	part of its ||| complex	count=1
function	block in ||| block	count=1
function_arg	[function_1] code ||| [function_1] [arg_2]	count=4
function	a method that ||| method	count=1
function	enable capture ||| start doc	count=1
function	[function_1] [function_2] ||| bool [function_1] [function_2] ?	count=16
function	sign the ||| sign	count=1
function_arg	only [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
module	irb ||| irb	count=8
function	[returnv_1] after the ||| [returnv_1] [function_2]	count=4
module	a ||| driver	count=3
module	method sends ||| net smtp	count=1
arg	command [arg_2] ||| [arg_1] [arg_2]	count=4
function	to insert a space ||| space	count=1
function	string before [function_2] ||| [function_2] [function_1]	count=1
function	the spec ||| spec	count=1
arg	tree starting with needed ||| needed	count=1
arg	str2 ||| str2	count=1
module	docs ||| rdoc generator	count=1
module	creates server ||| server	count=1
module	source ||| source	count=3
function	or separated named) ||| class or	count=1
arg	the directory dir ||| dir	count=1
function	files of ||| files	count=1
function	scans content for ||| do define class	count=1
arg	with needed dependency objects ||| needed	count=1
module	to this ||| markup	count=1
module	for all ||| gem	count=1
function	in the user’s home ||| user	count=1
module	of the file ||| stringio	count=1
arg	creates a socket connected [arg_1] [arg_2] ||| addrinfo connect to [arg_2] [arg_1]	count=1
module	the ||| darkfish	count=2
module	up this object’s comment ||| rdoc generator markup	count=1
arg	to encoding ||| encoding	count=2
function	docs will ||| gen	count=1
module	new ||| drbsslsocket sslconfig	count=2
arg	the array ary so ||| ary	count=1
function	commands irb ||| extend commands	count=1
module	a fileoverflow exception ||| boundedstream	count=1
arg	source list includes other ||| other	count=1
function	ignores case ||| case fold	count=2
function	into [function] resolv :dns ||| [function]	count=2
function	or separated named) ||| or module	count=1
arg	[arg] path where ||| [arg]	count=3
module	and :sslprivatekey have ||| drb drbsslsocket	count=1
module	method/attribute ||| rdoc methodattr	count=4
function	[returnv_1] if ||| [returnv_1] satisfied by [function_2]	count=1
function	documentation ||| start	count=2
arg	path [arg_2] ||| [arg_2] [arg_1]	count=3
module	file s to the ||| file	count=1
function	[function] ‘&’, ||| html [function]	count=3
module	for all tests ||| gem	count=1
function	returns the number of ||| length	count=1
module	method sends a ||| smtp	count=1
arg	options from the ||| options	count=1
returnv	to true ||| bool	count=1
function_arg	response as [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] address ||| [function_1] [function_2]	count=1
arg	from src ||| src	count=1
module	information ||| rdoc generator jsonindex	count=1
module	ensures ||| drbsslsocket sslconfig	count=2
arg	gems in list ||| list	count=1
function	returns the method ||| string allocation method	count=2
module	tells the download reporter ||| streamui verbosedownloadreporter	count=1
module	prepares the visitor for ||| tomarkdown	count=1
function	list items ||| list item	count=1
returnv	default visibility for subsequently ||| self	count=1
arg	in [arg_2] ||| [arg_1] comment [arg_2]	count=1
function_arg	cosine [arg_2] ||| [arg_2] [function_1]	count=3
arg	items in collection ||| collection	count=1
module	end of this array ||| array	count=1
function	returns true [function_2] ||| [returnv_1] zero [function_2]	count=3
function	the ||| gen	count=2
module	locale object for ||| i18n locale	count=1
function	delete text ||| delete text	count=2
function	class ||| []	count=1
function	[function_1] loop on ||| [function_2] [function_1]	count=1
module	same specification ||| gem specification	count=1
arg	port on the ||| port	count=1
function	but controlled [function] instead of ||| process based [function]	count=1
arg	pass in the file ||| file	count=1
arg	configured by opts ||| opts	count=1
function	returns the inverse of ||| inv	count=1
returnv	control ||| obj	count=1
function	[returnv_1] [function_2] ||| [returnv_1] setuid [function_2]	count=4
module	:redo :retry :next :return ||| localjumperror	count=1
function	parameters from the ||| rb	count=1
arg	:instance :class) for selector ||| selector	count=1
arg	title and [arg_2] ||| [arg_2] [arg_1]	count=1
function	the arc tangent ||| atan	count=1
module	the generated json to ||| json	count=1
module	rdoc :text#to_html ||| rdoc markup	count=1
function	[function_1] classes ||| [function_2] [function_1]	count=4
function	[function_1] comment in ||| [function_2] [function_1]	count=4
function	a socks ||| new	count=1
function_arg	the underlying [arg_2] ||| [arg_2] [function_1]	count=2
function	certificate ||| cert	count=4
module	wrap the c ||| importer	count=1
module	document ||| rdoc markup document	count=8
function	a pair ||| pair	count=1
function_arg	class name ||| class out name	count=1
function	or ||| or	count=3
function	static files ||| static	count=1
module	gathering tt sections ||| markup tottonly	count=1
function_arg	text [arg_2] ||| [arg_2] [function_1]	count=1
module	the following certificate and ||| gem security	count=1
module	component of the ||| pathname	count=1
function	result of the ||| result	count=1
arg	config an ||| config default	count=2
function	but preserve [function_2] ||| [function_1] [function_2]	count=5
module	process :status object) ||| process	count=3
function	an alias is ||| alias	count=1
function	search for the attribute ||| attribute	count=1
arg	a string ||| string start	count=9
function	for ipv6 unspecified ||| ipv6 unspecified	count=1
arg	length [arg] ||| [arg]	count=1
module	text from rd format ||| rd inlineparser	count=1
function	cache ||| cache	count=1
module	supplied will ||| parent	count=1
arg	the date ||| date	count=1
function	returns the version of ||| version for	count=1
function	prepares the ||| accept list item	count=4
module	inline ||| rdoc rd inline	count=1
arg	given opts to ||| opts	count=1
module	create a new uri ||| uri	count=1
module	dsa to ||| dsa	count=1
returnv	str with all characters ||| str	count=1
function	[returnv_1] if ||| [returnv_1] julian leap [function_2]	count=1
module	time see the ||| time	count=1
function	absolute value ||| abs	count=3
module	the number of bytes ||| openssl ssl	count=1
function	for ||| make	count=1
function	the local ||| local	count=1
module	to a single entry ||| markup tojoinedparagraph	count=1
arg	shows the prompt ||| prompt	count=1
arg	given opts as ||| opts	count=1
function	a true [function_2] ||| [returnv_1] quirks mode [function_2]	count=1
module	inflate ||| inflate	count=2
module	that ||| resolver	count=2
module	wrap the c struct ||| fiddle importer	count=1
module	proc ||| proc	count=4
function	an openssl :x509 :name ||| to	count=1
arg	or a ||| flags	count=1
function	returns [function_2] ||| [function_2] [function_1]	count=15
arg	[arg_1] file_name content ||| [arg_1] [arg_2]	count=1
arg	with the parameters year ||| year	count=1
function	attributes by name from ||| changed attribute by name	count=1
module	this tms object plus ||| benchmark tms	count=1
function	names set the ||| set	count=1
module	of the last ||| zlib	count=1
function	ipv4 [function_2] ||| [function_2] [function_1]	count=8
arg	of subject ||| subject	count=1
function	of the [function] ||| [function]	count=2
function	for ipv4 multicast address ||| ipv4 multicast	count=1
function	parameters and body of ||| params and body	count=1
arg	linking to target ||| target	count=1
module	the specifications that ||| gem resolver molinillo specificationprovider	count=1
function	if nan ||| ?	count=1
function	set the visibility of ||| set visibility	count=1
module	a class header to ||| rdoc ri driver	count=1
function	out that might ||| out	count=1
module	stream ||| buffering	count=3
module	the gems ||| requestset	count=1
arg	of meth ||| single meth added_container	count=1
function	or ||| class or module	count=1
arg	and valid for time ||| time	count=1
module	certificate ||| security	count=3
module	string into ||| cgi	count=1
rep	which [module_1] [function_arg_2] ||| [module_1] parseerror instance [function_arg_2]	count=2
function	[returnv_1] the numerator ||| [returnv_1] [function_2]	count=2
function_arg	:installer instance when ||| pre install &hook;	count=1
arg	a child ||| child	count=1
module	cdata object examples ||| cdata	count=1
module	with [module] name ||| [module]	count=1
function	pages to ||| pages	count=1
function	each installed parser ||| each installed parser	count=3
function	of normalize ||| normalize	count=1
module	tempdir unless ||| testcase	count=1
function	size [function_2] ||| [function_2] [function_1]	count=3
function	there [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] specs in ||| [function_2] [function_1]	count=1
module	case ||| markup formattertestcase	count=1
arg	sets the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	status type ||| status type	count=1
function_arg	the cross-references [arg_2] ||| [arg_2] [function_1]	count=1
module	an installer ||| installer	count=1
function	visitor for ||| accept list item	count=4
function	task [function] clobber ||| clobber task [function]	count=2
arg	the context of this ||| context statements	count=1
module	option processing ||| getoptlong	count=2
arg	without opening a tcp ||| port p_addr p_port p_user p_pass	count=1
module	session data for ||| cgi session	count=1
function	the rounding [function_2] ||| [function_1] [function_2]	count=4
function	remote [function_2] ||| [function_2] [function_1]	count=4
function	for consuming list ||| accept list start	count=3
function_arg	list for [arg_2] ||| [arg_2] [function_1]	count=2
function	the file with ||| file	count=1
arg	read/write status rw and ||| rw	count=1
module	[module] attribute overwriting ||| [module]	count=1
arg	list_type ||| list_type	count=1
module	sets an ||| rexml	count=1
function_arg	a file path ||| file path force	count=1
module	generate [module] document ||| [module]	count=2
function	includes ||| and includes	count=1
function	extra ||| from binary extra	count=1
module	list of generators and ||| rdoc	count=1
module	gem at ||| gem	count=1
module	truncated value ||| rational	count=1
module	myclassname ||| singleclass	count=1
function	[function_1] an ||| [function_1] [function_2]	count=3
function_arg	[function_1] string into ||| [arg_2] [function_1]	count=1
module	in the generated json ||| json ext generator	count=1
module	prepares the visitor ||| rdoc markup tottonly	count=1
function	[function_1] which represents ||| [function_2] [function_1]	count=6
function	[returnv_1] [function_2] ||| [returnv_1] setgid [function_2]	count=2
arg	passed in data for ||| data	count=1
returnv	given returns ||| string	count=1
function	allow github flavored ||| github	count=1
rep	ri [function_arg_2] ||| [module_1] driver display [function_arg_2]	count=2
function	will live ||| gen	count=1
function	the dependency and ||| dependency request	count=1
function	true [function_2] ||| dependencygraph vertex [returnv_1] [function_2]	count=5
module	irb sessions used to ||| irb jobmanager	count=1
module	object represent a module? ||| classmodule	count=1
module	@param parent ||| rexml parent	count=1
arg	rights that user is ||| user rights	count=1
function	headers for the first ||| headers	count=1
module	in ||| string	count=1
module	and the expired certificate ||| security	count=1
arg	obj to ||| obj	count=1
module	a ||| httpauth	count=1
function	[returnv_1] if ||| [returnv_1] block given [function_2]	count=1
arg	directives are allowed ||| allowed	count=1
module	composed of multiple rdoc ||| rdoc classmodule	count=1
arg	[arg_1] string ||| [arg_2] [arg_1]	count=34
arg	[arg_1] extensions ||| [arg_2] [arg_1]	count=1
module	stat that is the ||| stat	count=1
module	the sslserver when initialized ||| openssl ssl sslserver	count=1
module	sends ||| net ftp	count=2
function	the title ||| title	count=1
module	canonicalized absolute path of ||| kernel	count=1
function	:http request of ||| request	count=1
function	builds [function_2] ||| [function_2] [function_1]	count=7
arg	webrick ||| stores cache mount_path extra_doc_dirs	count=1
module	the verbose download reporter ||| streamui verbosedownloadreporter	count=1
function	the dependency and a ||| dependency	count=1
function_arg	returns [function_1] [arg_2] of the matrix as ||| [function_1] [arg_2]	count=1
function	on ||| on	count=6
function	after the current match ||| post match	count=1
function_arg	returns nil [function_1] [arg_2] ||| integer size [function_1] [arg_2]	count=4
function	[function] from the ||| trace [function]	count=1
arg	string according to ||| string 1 jan -4712 00:00:00 +0000' start	count=2
function_arg	exec flag [arg_2] ||| [arg_2] [function_1]	count=1
module	this gem works ||| gem resolver specspecification	count=1
arg	classes also_in [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] pem encoded ||| [function_2] [function_1]	count=1
function	form ||| platform	count=1
function	writes ||| write	count=11
arg	superclass ||| superclass	count=1
module	be set as ||| parent	count=1
module	docs will live in ||| generator darkfish	count=1
module	gzipwriter object associated with ||| gzipwriter	count=1
module	to a set of ||| gem requestset	count=1
module	the c ||| parser c	count=1
module	set ||| requestset gemdependencyapi	count=2
function	class corresponding ||| []	count=1
function	[returnv_1] [function_2] the ||| [returnv_1] empty [function_2]	count=1
function_arg	[function_1] name ||| [function_1] ? [arg_2]	count=8
function	to a json string ||| to json	count=1
arg	command with the ||| command	count=1
function	controlled [function] instead of ||| process based [function]	count=1
module	a [module] from ||| [module]	count=1
module	of documentation unless ||| rdoc codeobject	count=1
arg	stop ||| stop	count=1
module	of bytes that ||| openssl ssl	count=1
function_arg	entry [arg_2] ||| fileutils remove [function_1] secure [arg_2]	count=1
module	returns the elapsed real ||| benchmark	count=1
module	tuplebag which ||| rinda tuplebag	count=1
arg	ty [arg_2] ||| [arg_2] [arg_1]	count=1
function	then ||| config	count=1
function	directory for binaries ||| bindir	count=1
arg	of methods to out ||| out methods	count=1
module	rfc 3501 terminology ||| net imap numvalidator	count=1
arg	in [arg_1] [arg_2] group group ||| [arg_2] group [arg_1]	count=1
arg	to config an ||| config default	count=2
module	of the object if ||| drb	count=1
function	removes the token ||| remove token	count=2
function	returns an ||| to a	count=4
arg	generator “darkfish” ||| generator	count=1
module	the ||| openssl	count=1
arg	string containing tomdoc-format text ||| text	count=1
function	for a constant ||| const get	count=1
module	asks the user to ||| gem userinteraction	count=1
module	this class or module ||| classmodule	count=2
module	a [module] pick up ||| [module]	count=1
function	[function_1] current match ||| [function_2] [function_1]	count=10
module	object thereby ||| object	count=1
arg	of methods matching name ||| name	count=1
arg	and stats in ||| stats	count=1
function	and -infinity should ||| ascii only	count=1
function	docs will live in ||| gen sub	count=1
function	turned ||| start	count=1
module	returns a ||| sslcontext	count=1
function	the encoding object ||| external	count=2
module	that are ||| openssl	count=1
function	an ipv4-mapped ipv6 address ||| ipv4 mapped	count=1
returnv	the timezone of ||| fixnum	count=1
function	open ||| open	count=2
module	by subclasses ||| rdoc methodattr	count=1
function	that is the union ||| union	count=1
function_arg	[function_1] dependency is ||| [function_1] [arg_2]	count=1
function_arg	[function_1] the body_file ||| [arg_2] [function_1]	count=4
function	option parser ||| version option	count=1
module	first instance ||| syslog	count=1
returnv	:retry :next :return ||| symbol	count=1
module	called when the document ||| psych handler	count=1
function_arg	post request [arg_2] ||| [arg_2] [function_1]	count=1
function	the original ||| orig	count=1
function	through ||| setup	count=1
returnv	string is one ||| string	count=1
function	loads ||| load method	count=1
function	block ||| platform	count=1
function	development [function_2] ||| [function_1] [function_2]	count=1
arg	bin on ||| bin	count=1
arg	tuple and are ||| tuple	count=1
function	called name of the ||| callee	count=1
function	contain the file matching ||| find in	count=1
arg	document-class class_name or ||| class_name class_mod	count=2
function_arg	a special [arg_2] ||| [arg_2] [function_1]	count=2
module	exist ||| rdoc	count=1
module	class method/attribute ‘#’ ||| rdoc methodattr	count=1
module	set of ||| requestset	count=1
function	the real part ||| real	count=1
function	next representable floating-point number ||| next float	count=1
function	[returnv_1] [function_2] still running ||| thwait [returnv_1] [function_2]	count=1
function	returns the ssl ||| ssl	count=1
function	net :http#open_timeout ||| timeout=	count=1
function	[function_1] variables this ||| [function_2] [function_1]	count=1
arg	block in context ||| &block;	count=2
module	tempdir unless the keep_files ||| gem testcase	count=1
function	updated ||| updated	count=1
function	the api compatibility ||| api	count=1
function	changes ||| change	count=1
function_arg	parses src and ||| parse src	count=1
function_arg	power of n ||| ** a n	count=1
function	[returnv_1] if ||| [returnv_1] intersect [function_2]	count=1
function	returns a hash from ||| hash	count=1
arg	src to ||| src	count=2
arg	of default according to ||| default	count=2
function	gems to ||| platform	count=1
returnv	selected [returnv] ||| [returnv]	count=3
module	the remote ||| drb	count=1
arg	dep in this set ||| dep	count=1
module	specifications that match the ||| resolver molinillo specificationprovider	count=1
function	update [function_2] ||| [function_1] [function_2]	count=1
module	socket type as an ||| addrinfo	count=1
module	this parser is in ||| json ext parser	count=1
function	[function_1] a mapping ||| [function_1] [function_2]	count=2
function	[function_1] version ||| [function_2] [function_1]	count=10
function	loopback ||| loopback	count=1
function	the ||| external	count=6
function	or separated ||| or	count=1
module	output ||| ri driver	count=2
module	psych :nodes ||| psych nodes	count=4
arg	on [arg] ||| [arg]	count=3
arg	name to value val ||| name val	count=1
function	program name ||| program name	count=4
module	locale ||| locale	count=1
module	returns a [module] :security :trustdir ||| [module]	count=1
function_arg	[function_1] of name ||| [function_1] [arg_2]	count=6
module	absolute [module] of self ||| [module]	count=1
arg	with permissions mode linking ||| mode	count=1
module	in summary ||| optionparser	count=1
module	the stream which ||| buffering	count=2
function	version of ruby ||| in old ruby	count=1
module	with a progress bar ||| stats normal	count=1
module	default [module] commands on ||| [module]	count=1
rep	parser [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	evaluates ||| class eval	count=1
arg	access ||| atime	count=1
arg	tag_name pair or nil ||| tag_name	count=1
arg	#auth_type of ||| reload_db	count=1
arg	data at level ||| data	count=1
function	list of the protected ||| protected	count=1
module	file is a directory ||| file stat	count=1
arg	klass_name ||| klass_name	count=1
function	[function] and returns ||| download to [function]	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=5
module	identical objects as much ||| indexer	count=1
function	to the ||| accept block	count=1
function	[function_1] ‘nz_number’ ||| [function_1] [function_2]	count=3
module	object is an ||| rexml	count=1
function	the token listener ||| token listener	count=2
module	net :http#open_timeout ||| xmlrpc	count=1
arg	input_method as ||| input_method	count=1
function	return the status ||| status	count=1
function	the internal string ||| internal	count=1
module	#extra_rdoc_files to ||| gem	count=1
function_arg	the power [arg_2] ||| [arg_2] [function_1]	count=3
module	encoding object that ||| io	count=1
module	as ||| cgi	count=1
function	all gem version from ||| all gem names	count=1
function	[function] attempts ||| [function]	count=3
module	handling of [module] ||| [module]	count=2
arg	:specification spec ||| spec options	count=1
function	prepares ||| accept list item start	count=4
function	the end of the ||| end	count=1
function	tests to ||| tests	count=1
module	reference ||| drb drbobject	count=1
function_arg	[function_1] for selector ||| [function_1] type [arg_2]	count=1
arg	n matrix a ||| n zero one	count=1
function	[function_1] chain for ||| [function_2] [function_1]	count=1
arg	the signing_key ||| signing_key	count=1
function	passing ||| public send	count=1
module	stat is a regular ||| file stat	count=1
arg	from [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=14
module	at gem ||| gem	count=1
function	at end of ||| eof	count=2
function	directory within the directory ||| directory	count=1
arg	real time and ||| real	count=1
function	calls [function] repeatedly ||| [function]	count=2
returnv	part of its polar ||| float	count=1
module	original state and removes ||| gem testcase	count=1
module	called with ||| psych handler	count=1
function	a response ||| response	count=1
function	[function_1] socket ||| [function_2] [function_1]	count=1
function	from the ||| new	count=1
module	determine [module] ||| [module]	count=1
module	specification ||| resolver specification	count=1
function	with ||| with value	count=1
arg	message ||| message flags date_time	count=1
function	default ||| default spec	count=2
function	encoding magic [function_2] ||| [function_2] [function_1]	count=2
arg	the date this gem ||| date	count=1
arg	template ||| template	count=3
module	a class ||| driver	count=1
module	a [module] created ||| [module]	count=2
module	class method/attribute ||| rdoc methodattr	count=1
arg	[arg_1] cn and ||| cert [arg_1] [arg_2]	count=2
module	pointer otherwise returns false ||| fiddle pointer	count=1
function_arg	a options [arg_2] ||| [function_1] [arg_2]	count=1
function	default port to ||| default port	count=6
arg	two ||| other	count=3
arg	classes/modules defined in all_hash ||| all_hash	count=1
module	files ||| specification	count=1
function	[returnv_1] [function_2] edges within this {#graph} ||| [returnv_1] [function_2]	count=1
function	all observers associated with ||| observers	count=1
function	message writer [function_2] ||| [function_1] [function_2]	count=2
module	:security ||| security	count=2
arg	n matrix ||| n zero	count=1
function_arg	is name a ||| ? name	count=1
function	profiler ||| start profile	count=1
module	variable was ||| gem testcase	count=1
module	the ||| gem specification	count=4
module	source s regexp or ||| regexp	count=1
function	install generated indices into ||| install indices	count=1
module	a ||| net smtp	count=2
function	temporary directory with hax ||| create tmpdir	count=1
module	[module] from ||| [module]	count=2
module	from ||| tottonly	count=1
function_arg	[function_1] pages ||| [arg_2] [function_1]	count=2
function	returns true if ||| bool signaled ?	count=1
returnv	visibility ||| self	count=1
module	if the authentication was ||| webrick httpauth	count=2
arg	[arg_1] list ||| [arg_2] [arg_1]	count=8
arg	value ||| header value	count=1
function	[function] gdbm instance ||| [function]	count=1
module	:redo ||| localjumperror	count=1
function	[function_1] encoding magic ||| [function_2] [function_1]	count=1
function	all parameters ||| params	count=3
arg	[arg_1] tag_name ||| [arg_1] [arg_2]	count=3
function	the offset ||| offset	count=3
function	set irb_name of the ||| n jobs	count=1
arg	spec and calls ||| spec	count=1
module	#max_nesting = ||| ext	count=1
arg	the exception error ||| error	count=1
module	this dependency ||| gem dependency	count=3
module	this tar entry ||| gem package tarreader entry	count=2
module	silent download reporter ||| gem streamui silentdownloadreporter	count=1
module	fields in the ||| gem specification	count=1
function	position of the file ||| rewind	count=1
function	sorted by salience ||| get sorted	count=1
function	with on ||| config	count=1
module	process to its ||| gem testcase	count=1
function	the canceled status ||| canceled ?	count=1
function	rewinds to the ||| rewind	count=1
module	replaces this ||| rdoc	count=1
module	key is registered ||| objectspace weakmap	count=2
module	string ||| openssl pkcs5	count=2
function	the specified [function] adding ||| extend [function]	count=1
module	restricting ||| requestset gemdependencyapi	count=2
module	:enddoc ||| rdoc	count=1
module	that name ||| makemakefile	count=1
module	ipaddr built by ||| ipaddr	count=4
function	name with [function_2] ||| [function_2] [function_1]	count=2
function	with the private key ||| private	count=1
module	to the listitem ||| markup listitem	count=1
function	an rdoc-schemed ||| handle special rdoclink	count=1
returnv	creates ||| instance	count=97
function	reply 3xx ||| continue	count=1
returnv	is valid ||| bool	count=1
function	encode a ||| encode	count=1
function	returns ||| stats	count=1
arg	state is true and ||| state	count=1
function	[returnv_1] year 1-366 ||| [returnv_1] [function_2]	count=1
function	[function_1] directories ||| [function_2] [function_1]	count=1
function	the priority of thr ||| priority	count=1
function	heading to create ||| heading	count=1
function	if self [function_2] ||| proxy [function_2] [function_1]	count=1
function	each installed ||| each installed	count=3
function	regexps are equal ||| eql	count=1
function	[function_1] ‘nz_number’ in ||| [function_2] [function_1]	count=3
function	following the end ||| end	count=1
arg	named file to the ||| cmd file	count=1
module	from the [module] ||| [module]	count=8
arg	at key ||| key	count=1
function	number of undocumented items ||| doc	count=1
arg	stream unused returns ||| margin	count=1
function	list for the ||| list	count=1
function	defines a ||| define	count=1
arg	string to ||| string	count=2
arg	[arg_1] month day ||| [arg_1] [arg_2]	count=4
function_arg	[function_1] specified value ||| [arg_2] [function_1]	count=1
arg	specified value ||| value digits	count=5
function	by the marshal ||| marshal	count=1
function	-infinity should be generated ||| ascii only	count=1
function	method sends a ||| data	count=1
function	file with name as ||| file	count=1
function_arg	to filter unwanted ||| add filter p	count=1
function	[function_1] the visitor ||| [function_1] [function_2]	count=1
module	visitor ||| rdoc markup tomarkdown	count=2
module	return the [module] ||| [module]	count=2
function	generators and their descriptions ||| generator descriptions	count=1
function	returns the length ||| stats	count=1
module	server if ||| net	count=1
module	returns the [module] ||| [module]	count=14
module	length ||| rdoc	count=1
function	[returnv_1] the year ||| [function_2] [returnv_1]	count=1
module	unless the ||| gem testcase	count=1
function	for the ||| for	count=1
function	for ipv6 [function_2] ||| [function_1] [function_2]	count=10
function_arg	underlying buffer [arg_2] ||| integer [function_1] [arg_2]	count=1
module	state object configured ||| ext generator state	count=1
module	tempdir unless the ||| testcase	count=1
module	if stat has the ||| stat	count=2
function	[function_1] gem names ||| [function_1] [function_2]	count=2
module	removes ||| rdoc parser simple	count=1
arg	from given str ||| str enc	count=1
arg	optional label [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] error of ||| [function_1] last [function_2]	count=1
module	which [module] qualified ||| [module]	count=1
arg	spec from [arg_2] ||| [arg_1] [arg_2]	count=4
function	and the ||| and	count=1
function	first comment in a ||| first comment	count=1
function	[function_1] with an ||| [function_1] [function_2] object obj)	count=2
module	immediately available ||| sslsocket	count=1
module	argument ||| optionparser switch	count=1
module	row access ||| csv table	count=1
function	[function_1] a field ||| [function_2] row [function_1]	count=1
function	current ||| inspect	count=1
module	close the [module] device ||| [module]	count=1
function	parent if supplied will ||| new	count=1
function_arg	given value [arg_2] ||| [function_1] ? [arg_2]	count=1
function_arg	[function_1] path ||| [function_1] post [arg_2]	count=1
module	fields in the ||| gem	count=1
arg	with needed dependency objects ||| needed set	count=1
module	not a [module] created by ||| [module]	count=2
module	buffer ||| ext generator state	count=1
module	sets up ||| ri driver	count=1
function	[function_1] until the ||| monitormixin conditionvariable [function_1] [function_2]	count=1
arg	host port [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	given key [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	returns nil [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
function	the other parameters provided ||| setup	count=1
function	to true [function_2] ||| [returnv_1] has text [function_2]	count=1
module	convenience method for shell ||| shell	count=2
module	:http#read_timeout and net ||| xmlrpc	count=1
function_arg	[function_1] for req ||| [arg_2] [function_1]	count=1
function	to detect if the ||| ?	count=1
function_arg	sends a [arg_2] ||| [arg_2] [function_1]	count=3
function	is [function] ||| method [function]	count=3
function	same type ||| eql	count=1
function	user ||| dir	count=1
arg	min [arg_2] ||| [arg_2] [arg_1]	count=3
function	use ||| dir	count=1
module	returns number ||| io	count=1
module	adds tts from ||| rdoc markup tottonly	count=1
function	then use to ||| config	count=1
module	last row ||| gzipreader	count=1
module	an ||| servlet	count=1
function	sets the main ||| main=	count=1
function	named method ||| method	count=1
arg	to rows and ||| rows	count=1
function	or [function_2] ||| [function_1] [function_2]	count=2
function	ensure the [function_2] ||| [function_2] [function_1]	count=1
function_arg	cross-references [arg_2] ||| [arg_2] [function_1]	count=1
module	onto the io raising ||| tarwriter	count=1
function	[function_1] value ||| [function_1] [function_2]	count=3
function	handle ||| handle special hyperlink	count=2
module	restricting gems to ||| gem	count=1
arg	list to the ||| list options	count=1
function_arg	the underlying [arg_2] ||| integer [function_1] [arg_2]	count=2
function	[function_1] installed? ||| [function_2] [function_1]	count=2
module	stack frame ||| irb frame	count=1
function	installs the default irb ||| install	count=1
module	net :imap object ||| net imap	count=1
arg	parent of this ||| parent	count=1
module	return an drb ||| drb	count=1
module	this child ||| rexml child	count=4
function	a child ||| child	count=1
module	generates [module] document from ||| [module]	count=1
function	[returnv_1] canceled status ||| [returnv_1] [function_2]	count=1
module	this object is an ||| rexml	count=1
function	and modules ||| and modules	count=2
function	[function] corresponding to ||| [function]	count=2
rep	for [function_arg_2] ||| [module_1] ri driver load [function_arg_2]	count=1
function	allow ||| allow	count=1
module	of ||| set	count=1
function	proxy-authorization ||| proxy	count=1
arg	the named ||| symbol	count=1
module	form for restricting gems ||| requestset gemdependencyapi	count=1
function	skip ||| skip for variable	count=1
function	server in non-blocking manner ||| nonblock	count=1
module	the command with the ||| command	count=1
arg	from each [arg] ||| [arg]	count=3
arg	the pattern ||| pattern	count=1
function	device file pipe socket ||| file	count=1
function	module of ||| extension modules	count=1
arg	set [arg] ||| [arg]	count=1
function	there [function] following edges ||| [function]	count=1
function_arg	[function_1] other ||| webrick httpversion [function_1] [arg_2]	count=1
module	json #max_nesting = ||| json ext generator	count=1
function	returns true if ||| bool enterable ?	count=1
arg	data for method ||| method	count=1
arg	either a [arg] or a ||| [arg] options	count=1
function	options with ||| config	count=1
arg	out_stream ||| out_stream	count=1
module	the given remote ||| net ftp	count=1
function	if this ||| ?	count=7
arg	[arg_1] #auth_type ||| [arg_2] [arg_1]	count=1
module	an rdoc :toplevel for ||| rdoc	count=1
module	tail of the list ||| list	count=1
arg	parts and including ||| parts	count=1
function_arg	parses the [arg_2] ||| [function_1] [arg_2]	count=7
function	row mode ||| row !	count=1
function	end_accepting ||| end accepting	count=1
function	[function_1] field input ||| [function_1] [function_2]	count=1
module	in the given ||| gemdependencyapi	count=1
module	gathers ||| rdoc rdoc	count=1
returnv	returns self ||| bool	count=2
function	map with ||| mapping	count=1
function	of the public ||| public	count=1
module	parser ||| rdoc markup parser	count=1
arg	not the given ||| headers opt &b;	count=1
arg	name [arg_2] ||| [arg_1] target [arg_2]	count=2
function	command line by ||| dir config	count=1
function	“with” options with ||| dir	count=1
function	an exception [function_2] ||| [function_2] [returnv_1]	count=1
function	a lsub ||| lsub	count=1
function	is for a gem ||| ?	count=1
module	the [module] will take ||| [module]	count=1
module	whether this dh ||| dh	count=1
function	floating point [function_2] ||| [returnv_1] to [function_2]	count=1
function	documentation has been ||| start	count=1
module	descriptive fields in the ||| gem specification	count=1
arg	file at absolute_name ||| absolute_name relative_name	count=1
function	sets ||| setup	count=1
function	a null [function] locked ||| [function]	count=1
arg	is used [arg] ||| [arg]	count=1
arg	[arg_1] class_name ||| [arg_2] [arg_1]	count=8
module	version string not the ||| version	count=1
returnv	also [returnv] ||| [returnv]	count=1
module	described in gem help ||| gem	count=1
function	object activex ||| ole activex	count=2
function	[function_1] [function_2] created by ||| [function_2] [function_1]	count=6
module	session ||| session	count=7
function	a development dependency ||| development dependency	count=2
function	returns an array ||| to a	count=1
module	used by rdoc ||| rdoc methodattr	count=1
module	prepares the visitor for ||| rdoc markup	count=7
module	message digest can be ||| digest	count=1
function	sets the system path ||| system	count=1
module	by a [module] pick up ||| [module]	count=1
arg	setting the comment ||| context single	count=1
function	[returnv_1] if ||| [returnv_1] thread variable [function_2]	count=1
arg	addresses option ||| addresses	count=1
arg	will activate [arg_2] ||| [arg_2] [arg_1]	count=2
arg	tag an implicit ||| tag implicit	count=3
function_arg	[function_1] to host ||| [function_1] [arg_2]	count=2
returnv	comparing ||| an_array	count=1
arg	not ||| &b;	count=1
arg	that [arg] comes first ||| [arg]	count=1
function	exit [function] child ||| [function]	count=1
arg	set ||| set mailbox	count=1
module	seconds the specified time ||| time	count=1
module	returns ||| webrick	count=1
module	for the installed ||| installer	count=1
module	whether this cipher ||| openssl cipher	count=1
arg	method_body ||| method_body	count=1
module	gem into the ||| gem	count=1
function_arg	given name ||| key ? name	count=2
function	valid ||| valid commercial	count=1
module	tobs that is ready ||| tobs	count=1
function	a block ||| block	count=1
function_arg	[function_1] status ||| [arg_2] [function_1]	count=1
function	gem :specification from ||| to spec	count=1
function	the directories the generated ||| sub directories	count=1
arg	dir and ||| dir	count=1
function	define method [function_2] ||| [function_1] instance [function_2]	count=1
function	of generators and ||| generator	count=1
function_arg	main [arg_2] ||| [function_1] [arg_2]	count=1
arg	message to the end ||| message flags date_time	count=1
module	marking ||| rdoc	count=1
module	equal [module] ||| [module]	count=2
function	temporary directory with hax ||| tmpdir	count=1
arg	index to ||| index	count=1
function	hex-encoded ||| hexdigest	count=1
function	[function_1] array of ||| [function_2] [function_1]	count=1
module	big is less than ||| bignum	count=1
function	form using inspect ||| inspect	count=1
arg	will display on out_stream ||| out_stream args	count=1
arg	sets value specified ||| val	count=1
arg	klass service [arg_2] ||| [arg_1] [arg_2]	count=2
function	are word break ||| special prefixes	count=1
function_arg	extensions val ||| set extensions val	count=1
function	a new input ||| new	count=1
function	creates [function_2] ||| attributemanager [returnv_1] [function_2]	count=3
function	[function_1] this is ||| [function_2] [function_1]	count=1
function	finds all tuples in ||| find all	count=1
module	gems to ||| gemdependencyapi	count=1
arg	ignores all ||| out_stream size initial_message terminal_message	count=1
function	struct with the value ||| value	count=2
module	text gem ||| gem text	count=1
module	stream is at file ||| openssl buffering	count=1
module	is impossible [module] ||| [module] resolver	count=3
function	:context ||| currentcontext	count=1
function_arg	[function_1] real ||| bignum bool [function_1] [arg_2]	count=3
module	created ||| logger	count=1
function	and the line number ||| and line	count=1
module	a class header ||| ri driver	count=1
function	directory for the gem ||| gem dir	count=1
rep	[module_1] file name ||| [function_arg_2] [module_1]	count=4
arg	named given_name with ||| class_type given_name	count=2
module	status class corresponding ||| webrick httpstatus	count=1
function_arg	[function_1] if ||| [arg_2] [function_1]	count=6
module	object’s comment ||| rdoc generator markup	count=1
arg	sets the [arg_1] [arg_2] ||| ext generator state []= [arg_1] [arg_2]	count=1
function	removes the gemspec ||| remove	count=1
function	of singleton [function_2] ||| [function_2] [function_1]	count=1
module	using identical objects ||| indexer	count=1
function	internal string if ||| internal	count=1
module	from this section if ||| context section	count=1
module	peer certificates ||| openssl ssl sslsocket	count=1
function	[function_1] in a ||| [function_1] [function_2]	count=3
function	enable capture of documentation ||| start doc	count=1
function	finds a ||| find	count=5
function	loads options from ||| load options	count=1
module	original ||| gem	count=1
module	in if they ||| generator	count=1
module	format described in gem ||| gem	count=1
function	digest to the ||| digest	count=1
function	loads the given file ||| irb load	count=1
module	:sslcertificate and :sslprivatekey have ||| sslconfig	count=1
function	the visitor ||| list item	count=4
module	po ||| rdoc generator pot po	count=1
module	following certificate and is ||| gem security	count=1
arg	issuer cn [arg_2] ||| [arg_2] [arg_1]	count=2
arg	new ||| src dest	count=1
function	[function_1] a header ||| [function_2] row [function_1]	count=1
module	the object if ||| drb	count=1
arg	base64-encoded version [arg] ||| [arg]	count=2
module	translates raw text into ||| i18n text	count=1
module	to ||| rdoc generator markup	count=1
function_arg	listener obj ||| listener obj	count=1
module	supplied will be ||| rexml parent	count=1
arg	file to the server ||| cmd file	count=1
function	an instance method ||| method	count=1
function	[function_1] instance ||| [function_1] [function_2]	count=13
arg	the timeout handler id ||| id	count=1
arg	req for generator_name ||| generator_name req	count=1
function	unique classes [function_2] ||| [function_2] [function_1]	count=2
function	error [function_2] ||| getoptlong [function_1] [function_2]	count=1
function_arg	[function_1] level ||| [arg_2] [function_1]	count=1
module	ri data installed ||| rdoc ri	count=1
rep	[module_1] [function_arg_2] ||| [module_1] integer [function_arg_2]	count=2
module	to ||| requestset	count=1
function	an gem :installer ||| install	count=1
function_arg	[function_1] [arg_2] ||| [function_1] object [arg_2]	count=2
function	tracing object allocations ||| trace object allocations start	count=1
function	with hax todo deprecate ||| create	count=1
arg	handle req ||| req	count=1
function	returns true if ||| bool pipe ?	count=2
arg	object [arg] ||| [arg] hour minute second	count=1
module	displays the given ||| gem userinteraction	count=1
module	spec for ||| specification	count=1
function	the name [function_2] ||| [function_1] [function_2]	count=1
arg	comment ||| tk comment	count=3
function	full names [function_2] ||| [function_2] [function_1]	count=2
function	the unnormalized [function] of ||| [function]	count=1
function	passes each byte in ||| each byte	count=1
arg	the node ||| node	count=1
function	an [function] ||| [function]	count=3
module	issuer ||| gem security trustdir	count=1
module	encode ||| net imap	count=1
module	download reporter ||| streamui verbosedownloadreporter	count=1
function	as a rational number ||| to r	count=1
arg	for method_name ||| method_name	count=2
function	the superclasses of obj ||| kind of	count=1
module	requirement will not always ||| gem requirement	count=1
module	po format ||| generator pot poentry	count=1
function	in the gzip ||| comment	count=1
function	runs on ||| platform=	count=1
function	inverse of ||| inv	count=1
arg	tk setting the ||| single tk	count=1
function_arg	[function_1] value and ||| [function_1] tag [arg_2]	count=1
function	[function_1] suppressed ||| [function_1] [function_2]	count=1
module	that keeps an object ||| rinda	count=1
arg	[arg_1] from_name ||| [arg_1] [arg_2] from_version	count=1
function	a proxy uri ||| proxy from	count=1
arg	and other are the ||| other	count=2
module	out [module] ||| [module]	count=1
function_arg	from [arg_2] ||| ext generator state initialize [function_1] [arg_2]	count=5
module	certificate to ||| gem	count=1
function	[returnv_1] resets the ||| [function_2] [returnv_1]	count=1
function	sorted by salience first ||| get sorted module	count=1
arg	time cutime ||| cutime	count=1
module	if it ||| mutex	count=1
module	dependencies and ||| gem requestset	count=1
arg	src to dest ||| src dest	count=4
arg	given pattern object ||| pattern	count=1
module	the ||| rdoc markup tomarkdown	count=2
module	handlers [module] ||| [module]	count=1
module	socket option ||| socket option	count=2
function	visitor for ||| item	count=4
function	if the given key ||| key ?	count=2
module	of bytes that are ||| ssl	count=1
arg	in comment ||| tk comment	count=1
module	of the section ||| verbatim	count=1
arg	method method ||| method new_name	count=1
arg	both [arg] and a ||| [arg]	count=2
function	adds a special handler ||| add special	count=1
module	of ||| codeobject	count=1
module	constructing new range ||| range	count=1
function	[function_1] after ||| [function_1] [function_2]	count=1
function	pager program ||| pager	count=1
arg	[arg_1] tag implicit ||| [arg_1] [arg_2]	count=3
arg	with a prompt ||| prompt	count=1
function	numerator ||| numerator	count=2
arg	order ||| order	count=1
module	new uri :http object ||| uri http	count=1
module	prepares the visitor ||| markup	count=7
function	encoding ||| external	count=2
arg	overrides compiler ||| compiler	count=1
module	prepares the ||| markup totableofcontents	count=1
arg	repeatedly [arg] times or ||| [arg]	count=1
function	switches the mode ||| by col !	count=1
function	fix is [function] that ||| [function]	count=1
module	cached ||| commands unpackcommand	count=1
function	to the underlying buffer ||| write	count=1
module	a ||| drb	count=1
function	returns the issuer ||| issuer	count=1
function	wait [function] but ||| [function]	count=1
function	start_accepting which needs ||| start accepting	count=1
arg	if obj <=> min ||| min	count=1
module	class ||| rdoc singleclass	count=2
module	:node ||| node	count=1
function	is satisfied by ||| requirement satisfied by ?	count=1
arg	title and comment ||| parent title comment	count=3
module	as the ||| rexml	count=1
arg	job ||| job	count=1
arg	to code ||| code	count=1
module	:sslcertificate and :sslprivatekey ||| sslconfig	count=1
function	nonimmediate [function] in ||| each [function]	count=1
rep	[module_1] page name ||| [module_1] [function_arg_2]	count=2
function	[function_1] json string ||| rational [function_2] [function_1]	count=1
module	the given key-value ||| sdbm	count=1
function	utf-16 ||| toutf16	count=2
arg	dependency is in ||| dependency	count=1
module	all ||| gem specification	count=1
function	unix ||| unix	count=3
arg	[arg_1] and reference ||| [arg_1] [arg_2]	count=1
arg	the digests match ||| key digests	count=1
function	sanitize ||| sanitize	count=1
module	digest in a ||| digest	count=1
arg	other ||| other	count=23
function	visitor ||| item start	count=4
arg	found klasess [arg_2] ||| [arg_2] [arg_1]	count=1
module	of available encoding names ||| encoding	count=1
arg	extensions for the ||| age extensions serial	count=1
module	this ||| zlib gzipreader	count=1
function	a self-signed certificate ||| cert self signed	count=1
function	exist ||| gen sub	count=1
returnv	or an instance of ||| instance	count=1
arg	[arg_1] and name ||| [arg_1] [arg_2]	count=2
module	converts ||| xmlrpc convert	count=3
module	permutation matrix ||| matrix lupdecomposition	count=1
function	handle ||| handle special	count=1
module	graph to ||| resolver molinillo	count=1
function	containing a suppressed crossref ||| suppressed crossref	count=1
function_arg	[function_1] isapop ||| [arg_2] [function_1]	count=2
module	file ||| stringio	count=1
arg	if the name ||| name	count=1
module	in xmlrpc ||| xmlrpc client proxy	count=1
function	the result of the ||| result	count=1
module	an rdoc ||| rdoc parser	count=4
arg	integer index of ||| index	count=1
function	for directives [function_2] ||| [function_2] [function_1]	count=4
module	descriptive fields in ||| gem	count=1
function	rounding [function_2] ||| [function_1] [function_2]	count=4
function	returns true if ||| bool socket ?	count=1
function_arg	[function_1] indicated mailbox ||| [arg_2] [function_1]	count=2
arg	cstime as the children’s ||| cstime	count=1
function	a properly-space list ||| generator	count=1
module	the number of ||| openssl ssl	count=1
module	constructor @param parent ||| rexml	count=1
arg	of type [arg_2] ||| [arg_2] [arg_1]	count=2
arg	name is symbol ||| symbol	count=1
arg	[arg_1] column_count ||| [arg_1] [arg_2]	count=2
arg	begin [arg_2] ||| [arg_1] [arg_2]	count=1
arg	spec from source_uri to ||| spec source_uri install_dir	count=1
function	returns the minor ||| minor	count=2
module	specify the ||| gzipwriter	count=1
module	json #max_nesting ||| json ext generator	count=1
module	is ||| syslog	count=2
function	[function_1] [function_2] ||| attributes [function_1] [function_2]	count=3
module	it the receiving module ||| module	count=1
function	the makefile ||| makefile	count=1
module	the text ||| text	count=1
module	sets the ||| xmlrpc	count=1
function	key already ||| key !	count=1
module	up ||| ri driver	count=2
module	creates ||| gem testcase	count=2
module	was encountered at ||| requestset lockfile	count=1
arg	str to ||| str	count=4
arg	name ends with ||| name	count=1
function_arg	[function_1] instance when ||| [arg_2] [function_1]	count=4
arg	:document from found ||| found	count=1
function	pi to the ||| pi	count=1
module	last row read from ||| zlib	count=1
function	ruby code representation of ||| ruby	count=1
module	create the ||| generator darkfish	count=1
function_arg	module named ||| module class_type	count=1
arg	hash self_hash [arg] either ||| mod self_hash [arg]	count=1
function	proc ||| proc	count=5
function	of each [function_2] ||| [function_1] [function_2]	count=4
function	a post [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] version ||| [arg_2] [function_1]	count=4
function	verify to ensure the ||| verify signatures	count=1
module	/etc/passwd file ||| etc	count=3
module	creates a ||| testcase	count=1
module	command to change ||| net imap	count=1
function	text generation ||| start accepting	count=2
module	:dependencyrequest from a gem ||| gem testcase	count=1
arg	dir and calls ||| dir	count=1
function	all parameters of ||| params	count=3
arg	read from src ||| src filename lineno	count=1
arg	content to the ||| content	count=1
arg	given file command ||| file	count=1
module	the generated json ||| json ext generator state	count=1
function	adds ||| add to classes	count=1
function	the visitor [function_2] ||| [function_1] [function_2]	count=4
arg	version ||| version dependencies &block;	count=2
function_arg	superset of [arg_2] ||| [function_1] ? [arg_2]	count=1
arg	using [arg] bind ||| signature [arg]	count=1
function	[function_1] comment ||| [function_1] [function_2]	count=3
arg	name ||| name args	count=1
module	loc ||| loc	count=1
function	paths where rubygems’ ||| default rubygems dirs	count=1
function	if time ||| ?	count=4
arg	response for certificate_id ||| certificate_id	count=1
function	an openssl :x509 ||| to	count=1
module	named header ||| net httpheader	count=1
function	args hash ||| args hash	count=2
module	password from ||| httpauth htpasswd	count=1
arg	length if length ||| length	count=1
module	lock ||| gem source lock	count=1
function	credentials file ||| credentials	count=1
module	a formatted ri ||| ri driver	count=1
module	a set ||| gem	count=1
module	method will be ||| task	count=1
function	[function] drbarray ||| [function]	count=1
function	are word break characters ||| special prefixes	count=1
arg	options ||| options default	count=1
arg	using a given string ||| string	count=1
function	a siginfo [function_2] ||| [function_2] [function_1]	count=4
arg	subset of names from ||| refname mailbox	count=1
arg	the file named file ||| file	count=2
function	[function_1] is ||| [function_1] [function_2]	count=1
module	this specification used for ||| gem specification	count=1
function_arg	to filter [arg_2] ||| [function_1] [arg_2]	count=1
arg	from a string ||| string 1 jan -4712 00:00:00	count=2
function	valid and false ||| valid	count=4
function_arg	module mod ||| modules mod	count=1
module	local ||| drb drbobject	count=1
arg	significant digits in newly ||| digits	count=1
function	gem file ||| gem	count=1
module	documentation has been turned ||| codeobject	count=1
function	state with ||| state	count=1
function	proxy for ||| proxy from	count=1
function	priority ||| priority	count=1
arg	left if count is ||| count	count=1
module	file would ||| nametuple	count=1
function	returns [returnv_1] [function_2] a matrix ||| matrix [returnv_1] zero [function_2]	count=1
function	parses an http ||| parse	count=1
arg	according to locking_constant a ||| locking_constant	count=1
arg	[arg_1] columns ||| [arg_1] [arg_2]	count=2
function_arg	file matching [arg_2] ||| [function_1] in unresolved [arg_2]	count=1
returnv	that are immediately available ||| integer	count=1
returnv	list ||| array	count=1
function	all gem version from ||| all gem names and versions	count=1
module	directives in ||| markup preprocess	count=1
module	rows ||| table	count=1
function	name as ||| to s	count=1
module	[module] :paragraph containing ||| [module]	count=1
function	[returnv_1] named private ||| [returnv_1] [function_2]	count=1
function	dependencies that are ||| dependencies	count=1
arg	[arg_1] with items ||| [arg_2] [arg_1]	count=1
arg	string according to ||| string 1 jan -4712 00:00:00	count=2
function	of microseconds for ||| tv usec	count=1
function	html [function] ‘&’, ‘“’, ||| html [function]	count=1
module	onto ||| tarwriter	count=1
function	if there is ||| has key ?	count=1
module	to pass output through ||| rdoc ri driver	count=1
arg	the given base and ||| base	count=1
module	hash of [module] ||| [module]	count=3
function	[function_1] of memory ||| [function_2] allocated [function_1]	count=3
function	set ||| util set	count=1
arg	[arg] group ||| [arg] group list	count=1
function	scans content ||| do define	count=1
arg	src ||| src filename lineno	count=1
module	digest object ||| digest	count=2
arg	a singleton ||| singleton	count=1
arg	certificate with ||| certificate	count=1
arg	temporary [arg_2] ||| [arg_1] [arg_2]	count=2
function	map with the ||| map	count=1
function	for the latest version ||| latest version	count=1
arg	the given representation of ||| string comp	count=2
function_arg	[function_1] [arg_2] ||| [function_1] out [arg_2]	count=18
module	formdata which may ||| httputils formdata	count=1
module	for ||| tordoc	count=2
function	special handler for ||| special	count=1
returnv	with a ||| self	count=1
arg	string according to some ||| string 1 jan -4712 00:00:00 +0000' start	count=2
function_arg	a class [arg_2] ||| [arg_2] [function_1]	count=6
function	server loop [function_2] ||| [function_2] [function_1]	count=2
module	uri of the remote ||| drbobject	count=1
function	its ancestors have a ||| defined ?	count=1
function	and the line ||| file and line	count=1
returnv	array of the ||| array	count=1
arg	contains member ||| member	count=1
arg	::capture3 captures ||| stdin_data: '' binmode: false	count=1
returnv	returns the denominator lcm ||| integer	count=1
function_arg	the gem [arg_2] ||| [arg_2] [function_1]	count=6
module	object ||| object	count=7
module	when the first ||| syslog	count=1
module	the verbose download ||| verbosedownloadreporter	count=1
function	iteration of the ||| collect	count=1
function	true if the ||| bool handles ?	count=1
function	the union of ||| union	count=1
module	[module] of ||| irb notifier [module]	count=1
function	occurs during daylight saving ||| dst	count=1
function	:name ||| email to name	count=1
function	if nan infinity ||| allow nan ?	count=2
module	the parameters for this ||| openssl	count=1
module	detach the [module] ||| [module]	count=3
module	for html snippet ||| rdoc markup tohtmlsnippet	count=1
module	provided or ||| drb drbsslsocket	count=1
function	fetch ||| fetch	count=2
function	issuer certificate of ||| issuer	count=1
function	power ||| power	count=1
function	removes a ||| delete	count=1
module	job at the ||| jobmanager	count=1
function	undocumented items ||| stats	count=1
function	a singleton of ||| handle singleton	count=1
returnv	ary ||| ary	count=1
module	a xml-rpc [module] document ||| [module]	count=1
module	status class corresponding ||| webrick	count=1
function	time used to execute ||| realtime	count=1
module	struct subclass ||| struct	count=1
arg	api description in path ||| path	count=1
function	union ||| union	count=1
module	todo deprecate ||| gem	count=1
returnv	elements ||| ary	count=4
function	[returnv_1] [function_2] ||| attributemanager [returnv_1] [function_2]	count=1
module	generated json #max_nesting = ||| json ext	count=1
arg	length bytes defaulting to ||| name length	count=1
arg	left if count ||| count	count=1
arg	io [arg_2] ||| [arg_1] [arg_2]	count=1
arg	hostname and numeric_address ||| reverse_lookup	count=2
module	initialized when the first ||| syslog	count=1
module	value as ||| complex	count=1
function	[returnv_1] inspection ||| [function_2] [returnv_1]	count=2
function	names of singleton ||| singleton	count=1
function	creates a unix ||| unix	count=2
module	progress reporter ||| streamui	count=1
module	in conflict with ||| gem resolver conflict	count=1
arg	for timeout seconds ||| timeout	count=1
function	a fatal ||| fatal	count=1
module	computes ||| bigmath	count=4
module	bigdecimal :round_* ||| bigdecimal	count=1
function	the make [function_2] ||| [function_2] [function_1]	count=3
module	been provided or that ||| sslconfig	count=1
function	of the private instance ||| private instance	count=1
arg	name from ||| name	count=4
module	struct members ||| struct	count=1
module	this engine ||| openssl engine	count=1
module	file :separator ||| file	count=1
function_arg	[function_1] [arg_2] ||| [function_1] mailbox [arg_2]	count=29
module	rdoc ||| rdoc markup tohtml	count=2
module	defined in xmlrpc ||| xmlrpc client proxy	count=1
function	is ||| readline	count=1
function	removes ifdefs that ||| handle ifdefs	count=1
module	object’s ||| generator	count=1
function	an array [function_2] ||| [returnv_1] [function_2]	count=1
module	file referenced by the ||| file	count=1
arg	length bytes ||| length	count=1
returnv	self to ||| string	count=3
function	sends a lsub ||| lsub	count=1
module	matching ||| rexml elements	count=1
function_arg	by [arg_2] ||| [function_1] ? requirement activated [arg_2]	count=2
arg	key in ||| key	count=1
function	since the epoch ||| f	count=1
function_arg	an attribute [arg_2] ||| [arg_2] [function_1]	count=2
function	the directories ||| directories	count=1
module	from this file ||| zlib	count=1
module	was set ||| gem	count=1
function	with human-readable ||| inspect	count=1
function	returns the ||| doc stats	count=1
function	the result ||| result	count=1
arg	set based on ||| set	count=1
arg	ary with ||| ary	count=1
arg	given representation of ||| string comp	count=2
function	the absolute ||| magnitude	count=1
returnv	true if the receiver ||| bool	count=1
module	list ||| dependencylist	count=1
arg	a and b ||| b	count=1
function	[function_1] [function_2] ||| [function_1] login [function_2]	count=1
module	the keep_files environment variable ||| gem	count=1
function	html form data to ||| form	count=1
module	visitor for ||| markup	count=7
returnv	tests if the given ||| bool	count=1
function	array of the default ||| default	count=1
function	the power of ||| power	count=1
arg	the given base and ||| base level	count=1
function	is valid ||| valid civil	count=1
module	of bytes that ||| ssl sslsocket	count=1
module	object to ||| object	count=1
module	listitem ||| markup listitem	count=5
function	text file instead of ||| text	count=1
module	an drb ||| drb	count=1
module	path for uri :ldap ||| uri ldap	count=1
function	#page_dir to the ||| finish page dir	count=1
module	being used with http ||| net http	count=1
function	extension ||| extension	count=1
module	[module] to the ||| [module]	count=1
module	for html ||| markup tohtml	count=1
function	the text of ||| text	count=1
function_arg	data [arg_2] ||| [arg_2] [function_1]	count=3
module	the ftp ||| ftp	count=1
module	re-hashing the [module] variables does ||| [module]	count=1
function	default sources ||| default sources	count=2
module	time according to the ||| time	count=1
module	requirement will ||| gem requirement	count=1
module	returns ||| set	count=1
function_arg	[function_1] filename and ||| [arg_2] [function_1]	count=1
function	out that might otherwise ||| out	count=1
function	starts tracing [function_2] ||| objectspace [function_1] [function_2]	count=3
module	the locale object for ||| i18n locale	count=1
arg	[arg_1] dest ||| [arg_1] [arg_2]	count=2
module	prepares the visitor ||| markup tomarkdown	count=1
function	the following keys ||| session cache stats	count=1
module	the arguments a command ||| gem command	count=1
function	and their descriptions ||| generator descriptions	count=1
module	read from this ||| zlib	count=1
function	to ||| write	count=1
function	[function_1] singleton ||| [function_1] [function_2]	count=1
arg	parameters year [arg_2] ||| [arg_1] [arg_2]	count=7
function	[function_1] node of ||| [function_2] [function_1]	count=4
arg	[arg_1] day ||| [arg_1] [arg_2]	count=5
module	raw paragraph ||| markup paragraph	count=1
module	template ||| generator darkfish	count=1
function	are commented [function_2] ||| [function_2] [function_1]	count=4
function	to an absolute ||| abs_file_name expand	count=1
arg	standalone ||| standalone	count=1
function	of checkbox elements as ||| checkbox group	count=1
returnv	constructs a version ||| instance	count=1
module	the expired certificate ||| security	count=1
function	‘top section’ if ||| plain html	count=1
function_arg	[function_1] obj into ||| [function_1] [arg_2]	count=2
function	list of the documented ||| list	count=1
module	been turned off ||| rdoc codeobject	count=1
arg	size row_count x ||| row_count	count=1
function_arg	loads ri [arg_2] ||| [function_1] klass_name [arg_2]	count=2
function	returns the po entry ||| to s	count=1
function_arg	[function_1] value ||| [function_1] tag [arg_2]	count=1
function	bound receiver ||| receiver	count=1
module	of [module] that is ||| [module]	count=1
function_arg	[function_1] in text ||| [function_1] [arg_2]	count=2
arg	into destination_dir ||| destination_dir	count=2
module	pathname object from ||| pathname	count=1
module	gem is ||| gem	count=3
returnv	point of call ||| array	count=1
function_arg	[function_1] ty at ||| [arg_2] [function_1]	count=4
arg	parent of ||| parent	count=1
function_arg	[function_1] named files ||| [arg_2] [function_1]	count=1
function	[function] of the ||| [function]	count=56
function	introspection handlers system ||| introspection	count=1
arg	list [arg_2] ||| [arg_2] group [arg_1]	count=1
arg	signing_key [arg_2] ||| [arg_2] [arg_1]	count=3
function	head [function_2] ||| [function_2] [function_1]	count=4
function_arg	comment from [arg_2] ||| [arg_2] [function_1]	count=1
function	switches the mode ||| by col	count=1
module	for use ||| rdoc	count=2
module	the listitem ||| markup listitem	count=3
module	to ||| makemakefile	count=1
module	singleton ||| singleclass	count=1
function	a version from the ||| new	count=1
module	source_uri it came from ||| dependencyinstaller	count=1
function	verify to ensure the ||| verify	count=1
module	a request ||| webrick	count=1
function_arg	type of [arg_2] ||| [function_1] [arg_2]	count=1
module	prints ||| quiet	count=1
arg	returns arg ||| arg	count=2
module	specification that ||| specification	count=1
function	installable for the current ||| installable	count=2
function	removes the definition ||| remove	count=1
arg	a document-class class_name ||| class_name class_mod	count=2
module	the list ||| specification	count=1
arg	parts and ||| parts	count=1
arg	[arg_1] [arg_2] of ||| [arg_2] [arg_1]	count=4
function	output ||| setup	count=1
module	encoding ||| encoding	count=9
function	creates a pair ||| pair	count=1
function	[function_1] internal consistency ||| [function_2] [function_1]	count=1
function	returns the length and ||| doc	count=1
arg	namespace and [arg_2] ||| [arg_2] [arg_1]	count=1
function	with a prefix call ||| def pre proc	count=1
module	the following certificate and ||| security	count=1
function	[returnv_1] if ||| [returnv_1] grpowned [function_2]	count=2
returnv	this object ||| instance	count=1
module	[module] of length ||| [module]	count=6
arg	an array of ruby ||| ruby options	count=1
arg	an ||| key	count=1
arg	from a string ||| string 1 jan	count=2
module	match array ||| matchdata	count=4
function	of memory [function_2] ||| [function_1] [function_2]	count=1
function_arg	for dn [arg_2] ||| [arg_2] [function_1]	count=1
arg	not ||| opt &b;	count=2
module	a single-row matrix where ||| matrix	count=1
arg	the signatures ||| digests signatures	count=1
module	new array with elements ||| array	count=1
arg	mailbox to newname ||| mailbox newname	count=3
function	main ||| main=	count=1
module	this context’s ||| rdoc context	count=1
module	form for restricting gems ||| gemdependencyapi	count=1
arg	but set ||| set attr	count=1
module	docs will live ||| rdoc generator darkfish	count=1
module	for each specification ||| rdoc	count=1
function	nonimmediate [function] in this ||| each [function]	count=1
arg	given extensions for ||| extensions	count=2
module	source uri strings ||| gem sourcelist	count=1
arg	[arg_1] req ||| [arg_1] [arg_2]	count=1
function	defines a [function_2] ||| [function_2] [function_1]	count=1
function	find a [function_2] ||| [function_1] enclosing [function_2]	count=1
function	data in the ||| in	count=1
function	inspect to ||| inspect	count=1
module	that will provide ||| rinda	count=1
module	listitem ||| listitem	count=2
function	[returnv_1] [function_2] ||| [returnv_1] iterator [function_2]	count=1
module	context to ||| sslcontext	count=1
module	pair ||| drbprotocol	count=1
function	will live in if ||| gen	count=1
function	net :http request ||| request	count=1
returnv	a ruby object ||| obj	count=2
module	gem ||| gem specification	count=2
arg	[arg_1] encoding standalone ||| [arg_1] [arg_2]	count=1
function	if supplied will be ||| new	count=1
function	defines [function_2] ||| [function_1] [function_2]	count=1
function	there [function] ||| have author [function]	count=3
arg	** [arg] + ||| [arg]	count=1
module	environment variable was set ||| gem testcase	count=1
module	creates ||| dns resource in a	count=1
function	the ||| accept list	count=4
module	variable ||| testcase	count=1
module	returns an ||| tomdoc	count=2
function	builds a heading ||| build	count=1
arg	sets [arg_1] [arg_2] ||| ext generator state []= [arg_1] [arg_2]	count=1
function_arg	[function_1] also_in to ||| [function_1] out [arg_2]	count=1
function	[function_1] extends ||| [function_2] [function_1]	count=3
function	the path to the ||| name path	count=1
function	the headers ||| headers	count=2
function	instance of each ||| each	count=2
function_arg	int [arg_2] ||| [function_1] [arg_2]	count=1
arg	the first minor by [arg_1] [arg_2] ||| matrix cofactor [arg_1] [arg_2]	count=1
arg	- string salt ||| salt	count=2
function	— at the object [returnv_1] [function_2] ||| [returnv_1] [function_2]	count=4
module	to ||| thread	count=1
arg	file to ||| cmd file	count=1
arg	the given base ||| base level	count=1
module	a new [module] object ||| [module]	count=1
module	this node ||| nodes node	count=1
module	use to ||| makemakefile	count=1
arg	[arg] tms ||| [arg]	count=3
module	the tempdir unless ||| gem testcase	count=1
function	if the gems in ||| ?	count=1
function_arg	on [arg_2] ||| [arg_2] [function_1]	count=1
arg	prints the amount of ||| msg width display	count=1
function_arg	retrieves [arg_2] ||| [arg_2] [function_1]	count=1
module	off ||| rdoc codeobject	count=2
arg	uri with [arg_2] ||| [arg_2] [arg_1]	count=1
arg	and [arg] given object ||| obj) [arg]	count=1
module	a new [module] ||| [module]	count=2
function_arg	setter for [arg_2] ||| [function_1] [arg_2]	count=5
module	uri ||| drb drbobject	count=2
function	the permissions [function_2] ||| [function_2] [function_1]	count=2
module	synonym for cgi ||| cgi util	count=1
module	an ||| gem security	count=2
function	destination encoding [function_2] ||| [function_2] [function_1]	count=1
function	for methods ||| methods	count=1
arg	this adds [arg] ||| [arg]	count=1
module	of the [module] object ||| [module]	count=1
arg	maxlen bytes [arg_2] ||| [arg_1] buf [arg_2]	count=1
module	indentedparagraph ||| rdoc markup indentedparagraph	count=1
function	[function] in posix-defined ||| [function]	count=1
module	command may be used ||| net ftp mlsxentry	count=1
function	status class corresponding ||| []	count=1
module	starts a [module] ||| [module]	count=3
function	for ||| list	count=4
module	ensures ||| drb drbsslsocket	count=1
arg	given request_set and ||| request_set	count=1
module	the dependencylist ||| dependencylist	count=1
function	fully [function_2] ||| [function_2] [returnv_1]	count=6
function	[function_1] dependency ||| [function_2] [function_1]	count=3
function	[returnv_1] [function_2] ||| gdbm [returnv_1] value [function_2]	count=2
function	returns the hex-encoded ||| hexdigest	count=1
function	[function_1] [function_2] ||| [function_1] instance [function_2]	count=3
module	cert signature is ||| openssl x509 request	count=1
function	paragraph that ||| paragraph	count=1
function	block for each ||| each	count=3
function	appended on completion ||| completion	count=1
function	is ||| gen	count=1
module	a ||| instance	count=2
function	a rescue ||| rescue	count=1
module	to ||| rdoc markup tottonly	count=2
arg	of filename and ||| filename	count=1
arg	[arg_1] n ||| [arg_1] [arg_2]	count=1
function	[function_1] tracing object ||| [function_2] allocations [function_1]	count=1
function	the dependency ||| dependency	count=1
module	of ||| gem requestset	count=1
function	handling [function] ||| ensure [function] gem	count=1
function	[function_1] tracing object ||| [function_2] [function_1]	count=1
function	of ||| new	count=1
function	in whatever mode the ||| put	count=1
module	table ||| totableofcontents	count=1
module	the uri of ||| drb	count=1
arg	time cstime as the ||| cstime	count=1
arg	specifies ||| ip_addr	count=1
module	and output in irb ||| irb	count=1
module	creates a [module] or gzipwriter ||| [module]	count=1
module	generated docs will live ||| generator	count=1
arg	given [arg] which ||| [arg] column line	count=1
arg	encoding when ||| encoding	count=1
module	ssl/tls handshake ||| openssl ssl sslsocket	count=1
module	the resolver to allow ||| gem resolver	count=1
arg	list includes other which ||| other	count=1
module	with the name ||| gem testcase specfetchersetup	count=1
module	to pass output ||| rdoc ri driver	count=1
returnv	this ||| fixnum	count=2
module	of the [module] suitable for ||| [module]	count=1
rep	[module_1] method name ||| [module_1] [function_arg_2]	count=2
module	in the [module] ||| [module]	count=12
function	[function_1] all messages ||| [function_2] [function_1]	count=3
arg	the given str ||| str	count=2
function	the components defined from ||| component ary	count=1
function	[function] ‘&’, ‘“’, ||| html [function]	count=3
function	creates a self-signed ||| create self signed	count=1
function_arg	normalized [arg_2] ||| [arg_2] [function_1]	count=1
arg	base and ||| base level	count=1
module	an openssl :x509 ||| security	count=1
returnv	a mask value ||| priority_mask	count=1
module	handles ||| webrick httpservlet erbhandler	count=2
function	parameters provided ||| setup	count=1
function	[returnv_1] all keys ||| [function_2] [returnv_1]	count=1
function	completion reply 2xx reply ||| success ?	count=1
module	options ||| makemakefile	count=1
arg	with string and mode ||| string mode	count=1
module	row ||| zlib gzipreader	count=1
arg	ln_s(old new ||| src dest	count=1
module	be csv ||| csv table	count=1
module	used by rdoc :generator ||| rdoc methodattr	count=1
function	cosine of ||| cos	count=1
function	server [function_2] ||| [function_1] [function_2]	count=3
module	returns an rdoc :markup ||| rdoc tomdoc	count=2
module	ftp session ||| net ftp	count=1
arg	indented with indent ||| indent	count=1
module	test ||| markup textformattertestcase	count=1
module	gem under one of ||| gem	count=1
module	and all its ||| rdoc	count=1
module	the spec for ||| gem specification	count=1
returnv	[returnv] the ||| [returnv]	count=5
module	response header ||| httpresponse	count=2
module	table of ||| totableofcontents	count=1
arg	assigned to var_name ||| var_name	count=1
function	the default port for ||| default	count=2
arg	block passed ||| &block;	count=1
function	and the line number ||| file and line	count=1
function	visitor for ||| item start	count=4
function	sets up ||| setup	count=2
function	a list of the ||| module list	count=1
returnv	constructor @param ||| instance	count=1
module	a new fiddle ||| fiddle	count=4
module	it isn’t ||| mutex	count=1
module	in ios ||| io	count=1
module	generated docs will ||| rdoc generator darkfish	count=1
function_arg	from [arg_2] ||| [function_1] [arg_2]	count=3
returnv	to kernel#to_enum except it ||| lazy_enum	count=1
function	[function_1] a field ||| [function_2] [function_1]	count=1
function	visitor for ||| start	count=7
function	[function_1] field ||| [function_1] [function_2]	count=1
function	local ||| local ?	count=1
module	marking up ||| rdoc	count=1
function	infinity and -infinity should ||| ascii only	count=1
function	to this module ||| extension modules	count=1
function	sections alphabetically default ||| sections	count=1
function	given block ||| if	count=1
function	[function_1] name with ||| [function_2] [function_1]	count=2
function	up an [function] named generator_name ||| [function]	count=1
function	the cached ||| cache	count=1
module	ri task with the ||| ri task	count=1
module	set for ||| set	count=1
function	set [function_2] ||| [function_1] [function_2]	count=1
function	directory where [function_2] ||| [function_2] [function_1]	count=2
arg	starting with needed dependency ||| needed	count=1
module	the silent download reporter ||| gem streamui silentdownloadreporter	count=1
module	defined ||| module	count=1
function	[function_1] vectors ||| [function_1] [function_2]	count=4
module	the list ||| module	count=1
arg	obj and other are ||| other	count=1
module	ringprovider ||| ringprovider	count=1
module	[module] attribute and ||| [module]	count=1
function	an ipv4 address ||| ipv4	count=1
function	destructive version of normalize ||| normalize !	count=1
function	it returns [function] ||| [function]	count=1
module	the process to its ||| gem testcase	count=1
function	an external alias ||| external alias	count=1
arg	[arg_1] extensions ||| [arg_1] key [arg_2]	count=1
function	interpreting leading characters ||| f	count=1
function	in whatever mode ||| put	count=1
module	read ||| zlib	count=1
function	:heading containing a suppressed ||| heading suppressed	count=1
arg	given set [arg_2] ||| [arg_2] [arg_1]	count=3
function	of seconds since ||| f	count=1
function	delete the ||| delete	count=1
module	visitor ||| rdoc markup tohtml	count=4
function	unique local ||| unique local	count=1
function	returns true [function_2] ||| [returnv_1] listable [function_2]	count=2
function	hash ||| hash	count=7
module	database ||| gdbm	count=6
module	to the pager ||| ri driver	count=1
arg	for key key ||| key	count=1
module	the ||| gem version	count=2
function	contain the file matching ||| find	count=2
module	have been ||| drb drbsslsocket	count=1
arg	root options may ||| root options default	count=2
module	object is an attribute ||| rexml attribute	count=1
function	files to add ||| files	count=1
module	fetches [module] ||| [module]	count=2
function	which represents ||| content	count=1
function	directory path to ||| cache dir	count=1
function_arg	method [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] cram-md5 ||| [function_2] [function_1]	count=2
module	instruction sequence ||| rubyvm instructionsequence	count=1
arg	string describing ||| cert ca key_pbe cert_pbe key_iter mac_iter keytype	count=1
function	user can then ||| dir config	count=1
function	[returnv_1] [function_2] ||| gdbm [returnv_1] [function_2]	count=1
function	stop [function_2] ||| [function_2] allocations [function_1]	count=1
arg	the uri [arg_2] ||| [arg_2] [arg_1]	count=4
module	dsa to ||| pkey dsa	count=1
arg	the requirements of other ||| other	count=1
module	state ||| json ext generator state	count=2
function	adds the default ||| default	count=1
function_arg	[function_1] with name ||| [function_1] [arg_2]	count=4
function	represents the encoding of ||| encoding	count=2
module	a variable [module] class name ||| [module]	count=1
module	of bytes that are ||| sslsocket	count=1
module	for restricting gems to ||| gem	count=1
function	set the visibility of ||| set	count=1
arg	parsing from [arg] according to ||| [arg]	count=3
module	sourcelist ||| gem sourcelist	count=1
module	nil if this proc ||| proc	count=1
arg	label [arg_2] ||| [arg_1] [arg_2]	count=1
arg	and returns a subset ||| refname mailbox	count=1
arg	ty [arg_2] ||| [arg_1] [arg_2]	count=1
function	destructive version of normalize ||| normalize	count=1
function_arg	level [arg_2] ||| [function_1] level [arg_2]	count=1
function	[function_1] path ||| [function_1] [function_2]	count=6
module	index ||| rexml elements	count=1
module	gem specifically the paths ||| gem specification	count=1
arg	corresponding characters in to_str ||| to_str	count=1
function	of ipv4 [function_2] ||| [function_2] [function_1]	count=4
arg	a [arg] ||| [arg] level	count=1
function	bits ||| generate prime	count=1
arg	members ||| members	count=1
module	visitor for html snippet ||| rdoc markup tohtmlsnippet	count=1
function	version ||| version	count=12
arg	a req ||| req	count=2
function	returns true [function_2] ||| [returnv_1] coredump [function_2]	count=4
function	opens a [function_2] ||| [function_1] [function_2]	count=4
module	up ||| driver	count=1
module	the [module] name ||| [module]	count=1
function	year is a leap ||| leap	count=1
function	several default gems which ||| gems	count=1
arg	and b ||| a b	count=1
arg	pattern is specified only ||| pattern	count=1
module	string and returns ||| string	count=2
module	parameters provided ||| sslconfig	count=1
function	is a pipe false ||| pipe	count=1
arg	takes a string s ||| s	count=1
module	edge represents @return edge ||| gem resolver molinillo dependencygraph	count=1
function_arg	existing [arg_2] ||| [function_1] [arg_2]	count=1
function	sends a ||| sendcmd	count=1
function	returns a [function_2] ||| [function_1] [function_2]	count=8
arg	of numeric ||| numeric	count=1
function	creates several default gems ||| make gems	count=1
module	for this ||| gem	count=1
function	prefix for aref defined ||| aref prefix	count=1
function	convert int to a ||| to	count=1
function	[returnv_1] if time ||| [returnv_1] utc [function_2]	count=1
module	the [module] given string ||| [module]	count=1
module	removed ||| gem	count=1
function	template in the ||| template	count=1
module	gemspec ||| specification	count=1
module	the alias of a ||| alias	count=1
module	the [module] where ||| [module]	count=1
function_arg	a normalized [arg_2] ||| [arg_2] [function_1]	count=1
module	openssl ||| security	count=1
function	tracing object ||| objectspace trace object	count=1
function	a fetch ||| fetch	count=1
module	new [module] the ||| [module]	count=1
function	token ||| token	count=3
function	a space between the ||| space	count=1
module	specification is properly ||| gem specification	count=1
arg	k exists within ||| k	count=1
returnv	epoch ||| a_rational	count=1
arg	creates the scripts ||| bindir	count=1
arg	the attribute symbol ||| symbol	count=1
function	the section ||| section	count=1
function	can handle a particular ||| can	count=1
module	class to wrap ||| fiddle importer	count=2
function	multicast global scope ||| mc global	count=1
function	url ||| url	count=4
function	of undocumented items in ||| stats	count=1
function	value as a ||| to f	count=1
module	onto the ||| tarwriter	count=1
returnv	:next ||| symbol	count=1
function	various “with” options with ||| dir config	count=1
function	[function_1] of ruby ||| [function_2] [function_1]	count=7
function	when no handler ||| handler	count=2
function	[function_1] an array ||| [function_2] [function_1]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] none [function_2]	count=1
module	level 5 rdoc ||| rdoc	count=1
function	parameters of key ||| params	count=3
function	inserts [function_2] ||| [function_1] [function_2]	count=2
function	various “with” ||| config	count=1
module	file see file ||| file	count=1
function	the given ||| key	count=3
module	benchmark ||| benchmark	count=2
function	the serial number of ||| serial	count=1
function	or separated named) and ||| or	count=1
function	[function_1] exec flag ||| [function_2] [function_1]	count=4
module	the object ||| drbobject	count=1
function	doesn’t or if ||| ?	count=3
module	through the ||| net httpheader	count=1
arg	with a minimum ||| name version	count=1
function	copy request ||| copy	count=1
function	the number ||| size	count=2
function	error of the ||| error	count=2
module	used to ||| benchmark	count=1
function	use to configure various ||| config	count=1
module	call ||| rdoc markup formattertestcase	count=1
function	[function_1] from socket ||| [function_2] [function_1]	count=1
module	includes an ||| rexml	count=1
module	to pass output through ||| driver	count=1
function	and sets the store’s ||| store=	count=1
function_arg	constant [arg_2] ||| [arg_2] [function_1]	count=3
function	[returnv_1] [function_2] authors ||| [returnv_1] [function_2]	count=3
function	[function] the ||| [function]	count=35
arg	given begin [arg_2] ||| [arg_1] [arg_2]	count=1
arg	port hostname and numeric_address ||| reverse_lookup	count=2
arg	given host ||| host	count=1
arg	the object_id id ||| id	count=1
returnv	[returnv] values ||| [returnv]	count=2
function_arg	try [function_1] [arg_2] into ||| try [function_1] [arg_2]	count=1
function	of the current source ||| source	count=1
function	file with name ||| file	count=1
function	of members ||| members	count=1
function	scans content for ||| do classes	count=1
module	generated erb code ||| erb	count=1
function	and ||| generator	count=1
function	is relative to a ||| gen relative	count=1
function_arg	a file b ||| file a b	count=1
function	is still ||| after	count=2
arg	given patterns i ||| pat1 pat2	count=1
function	is implemented by ||| implemented	count=1
function	[returnv_1] absolute ||| [returnv_1] [function_2]	count=8
arg	and key ||| key age extensions serial	count=1
module	time ||| rdoc generator darkfish	count=1
function	nonce ||| nonce	count=1
function	or if the ||| ?	count=6
module	enumerator with the ||| enumerator	count=1
function	accept_list_start_label ||| list start label	count=1
arg	in the file ||| file	count=1
function	[function] command ||| [function]	count=2
function	a trace request ||| trace	count=1
function	are commented ||| commented	count=1
function	a new remote error ||| new	count=1
function	displays documentation for ||| documentation	count=1
arg	[arg_1] res ||| rdoc servlet asset [arg_1] [arg_2]	count=1
module	[module] which has ||| [module]	count=1
arg	options ||| options &block;	count=1
function	builds marshal ||| build marshal	count=2
module	of the remote object ||| drb	count=1
arg	into destination_dir [arg_2] ||| [arg_1] [arg_2]	count=3
arg	from the spec ||| spec	count=1
function	in the machine ||| size	count=1
function	extracts parameters from the ||| rb scan	count=1
function_arg	[function_1] for name ||| [function_1] [arg_2]	count=5
module	@param parent if supplied ||| parent	count=1
function	[returnv_1] if ||| [returnv_1] iterator [function_2]	count=1
function	buffer ||| buffer	count=1
function_arg	initializes this object [function_1] [arg_2] be duplicated/cloned and returns ||| [function_1] [arg_2]	count=1
function	[function_1] mapped/compatible ipv6 ||| [function_2] [function_1]	count=8
function_arg	[function_1] of address ||| [arg_2] [function_1]	count=4
module	progress ||| simpleprogressreporter	count=1
module	name as an rdoc ||| rdoc	count=1
function	unnormalized [function] of this ||| [function]	count=1
module	dh instance has ||| openssl pkey dh	count=1
module	prepares ||| markup totableofcontents	count=2
arg	that watches place for ||| place	count=1
function	compares to ||| ==	count=1
module	if ||| generator darkfish	count=2
module	the descriptive ||| specification	count=1
module	calls ||| markup formattertestcase	count=1
arg	template and returns a ||| string format	count=1
module	of this object ||| rexml parent	count=1
function	visitor ||| accept list item start	count=4
module	of parsing ||| stats	count=2
arg	uri to path if ||| uri path update	count=1
function	default value for ||| default	count=3
returnv	symbol ||| symbol	count=2
returnv	the default visibility ||| self	count=1
arg	name and returns self ||| name	count=1
module	run by the resolver ||| resolver	count=1
arg	a c [arg] ||| [arg] types	count=3
arg	parses src ||| src	count=1
function	variable kind string ||| variable kind	count=2
function	for ipv6 ||| ipv6	count=8
module	removes ||| parser simple	count=1
module	corresponding to the ||| webrick httpstatus	count=1
function	type ||| type	count=5
module	update ||| rdoc rdoc	count=1
arg	new_timeout ||| new_timeout	count=1
function	their descriptions ||| descriptions	count=1
returnv	was terminated :break :redo ||| symbol	count=1
function	a pager? ||| paging ?	count=1
function	use the ||| use	count=1
arg	host [arg_2] ||| [arg_2] [arg_1]	count=5
arg	creates a date-time ||| hour minute second offset start	count=2
function	[returnv_1] block ||| [function_2] [returnv_1]	count=3
arg	without opening ||| p_addr p_port p_user p_pass	count=1
function	or equals ||| >=	count=1
returnv	the number of bytes ||| integer	count=1
module	that all file ||| gem	count=1
function_arg	map [arg_2] ||| [arg_2] [function_1]	count=8
function	[function_1] argument valid ||| [function_2] nz [function_1]	count=2
function	[function_1] directives ||| [function_2] [function_1]	count=2
arg	method identified [arg_2] ||| [arg_2] [arg_1]	count=4
function	quirks mode ||| quirks mode	count=2
function	[returnv_1] if ||| gdbm [returnv_1] value [function_2]	count=1
function	the row [function_2] ||| [function_1] [function_2]	count=1
function	0 ||| rectangular	count=1
function	returns the user ||| user	count=1
function	to gem [function_2] ||| [function_2] [function_1]	count=1
arg	with style ||| style	count=1
function	[returnv_1] [function_2] ||| [returnv_1] saturday [function_2]	count=1
module	this object ||| rexml	count=1
rep	[module_1] module mod ||| [module_1] [function_arg_2]	count=4
module	of the file ||| io	count=1
arg	scripts ||| bindir	count=1
function	[function] a ||| [function] key	count=1
function	and ||| timeout=	count=1
function	containing the rest ||| partition	count=1
function	path to the certificate ||| cert path	count=1
module	prevent conversion to rdoc ||| rdoc markup attributemanager	count=1
rep	adds [function_arg_2] ||| [module_1] [function_arg_2]	count=22
function	of the ||| external	count=2
module	gem at path and ||| gem	count=1
function	of pi ||| pi	count=1
function	hash value returned ||| hash	count=1
arg	file_name which can ||| file_name	count=1
module	generated docs ||| rdoc generator	count=1
module	socket ||| socket	count=11
module	of this function ||| fiddle function	count=1
module	range or an array ||| range	count=1
arg	directory root options ||| root options default	count=2
function	net :http request of ||| request	count=1
module	restricting gems ||| gem requestset	count=1
function	index of the ||| index	count=2
arg	that [arg] ||| fix [arg]	count=2
arg	directory root [arg_2] ||| [arg_2] [arg_1]	count=4
arg	uri’s ||| oth	count=1
function	called when an empty ||| empty	count=1
function	a random ||| random	count=1
module	a marker for rdoc ||| rdoc	count=1
module	of generators ||| rdoc	count=1
module	use to configure various ||| makemakefile	count=1
function	copy the ||| copy	count=1
function	prefix for [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] the method_body ||| [arg_2] [function_1]	count=2
arg	stores value v ||| v	count=1
module	the other ||| drb drbsslsocket sslconfig	count=1
arg	enclosing to ||| enclosing	count=1
module	this activation is ||| gem resolver activationrequest	count=1
arg	handler id [arg_2] ||| [arg_1] [arg_2]	count=1
module	sets #extra_rdoc_files to ||| gem specification	count=1
function	options request to the ||| options	count=1
arg	the digests match ||| digests	count=1
arg	the pages in store ||| store pages search	count=1
returnv	of the day 0 ||| fixnum	count=1
function	mail has been deleted ||| deleted	count=1
module	real absolute [module] of ||| [module]	count=1
function	euc-jp ||| toeuc	count=2
module	of ||| rdoc	count=4
module	feed or any ||| atom feed	count=1
module	returns ||| addrinfo	count=5
module	use a availableset as ||| gem availableset	count=1
function	returns the discarded ||| error	count=1
module	certificate and ||| security policy	count=1
module	of ||| options	count=1
function	calculate the ||| ctypes	count=1
function	is not a ||| ?	count=1
returnv	:break ||| symbol	count=1
module	adds tts from ||| rdoc markup	count=1
function	handler for ||| default handler	count=1
function	openssl :x509 :name ||| name	count=1
module	with [module] mode ||| [module]	count=1
function	on ||| dir config	count=1
arg	by parsing from [arg_1] [arg_2] according to some typical ||| iso8601 [arg_2] [arg_1]	count=1
function	[function] number of ||| [function]	count=3
arg	level of ||| level	count=1
module	compares to ||| uri generic	count=1
module	an rdoc :markup :paragraph ||| rdoc tomdoc	count=1
module	gem help ||| gem	count=1
module	gem under ||| gem	count=1
function	url [function_2] ||| [function_2] relative [function_1]	count=1
function	[function_1] marshal ||| [function_2] [function_1]	count=1
module	tar ||| package tarreader	count=5
function_arg	[function_1] of event ||| [function_1] [arg_2]	count=2
arg	to store(), but set ||| set attr flags	count=1
function	return all reachable objects ||| reachable objects	count=1
arg	symbol to the given ||| symbol obj	count=1
arg	exception [arg_2] ||| [arg_2] [arg_1]	count=3
function	the dependency ||| dependency request	count=1
function	of ||| external	count=2
function	be a header row ||| header row	count=1
arg	path returning the underlying ||| path mode	count=1
function_arg	the struct [arg_2] ||| [arg_2] [function_1]	count=2
arg	string according ||| string 1 jan -4712 00:00:00 +0000'	count=2
module	csv ||| csv table	count=1
module	convert ||| string	count=3
function	iff there [function] following edges ||| [function]	count=1
function	writes the yaml file ||| write	count=1
module	of documentation ||| rdoc codeobject	count=1
function	and activates ||| use gemdeps	count=1
module	gem fortunately ||| gem	count=1
module	its ||| testcase	count=1
returnv	[returnv] garbage ||| [returnv]	count=2
arg	[arg] and calls ||| [arg]	count=1
function	hash value returned is ||| hash	count=1
module	the specification contains all ||| specification	count=1
module	feed ||| feed	count=2
function	program [function_2] ||| [function_2] [function_1]	count=8
function	debug information to the ||| debug	count=1
module	to its ||| gem	count=1
function	same seconds and fractional ||| eql	count=1
function_arg	file to path ||| file path	count=1
arg	certificate if it ||| certificate	count=1
module	exits the [module] immediately ||| [module]	count=1
function	node of ||| node	count=1
function	tries to resolve ||| resolve	count=1
arg	object on ||| obj	count=1
function_arg	[function_1] data matches ||| [function_1] [arg_2]	count=2
arg	to argv ||| argv	count=1
arg	socket bound ||| hostname	count=1
module	given ||| gemdependencyapi	count=1
arg	from start [arg_2] ||| [arg_1] [arg_2]	count=1
module	an entity declaration ||| rexml	count=1
function	can then use ||| dir	count=1
module	class can be ||| class	count=1
function	environment ||| env	count=1
arg	initially ||| { |(args	count=1
function	returns the [function_2] ||| [function_2] [function_1]	count=7
module	a unsubscribe [module] ||| [module]	count=3
module	certificate and ||| security	count=1
function	ssl/tls ||| use ssl	count=1
module	the keep_files environment ||| testcase	count=1
function	the root node of ||| root node	count=1
module	about the parser ||| parser	count=1
arg	first [arg] yielding ||| ignore_error: [arg]	count=1
module	to the ||| rdoc markup	count=4
function	inserts an child after ||| insert after	count=1
function	restricting gems ||| platform	count=1
function	aproc as [function] be called ||| [function]	count=1
function	of undocumented items ||| doc stats	count=1
function_arg	[function_1] glob ||| [arg_2] [function_1]	count=4
module	true ||| gem specification	count=1
function	whatever ||| put	count=1
function	error [function_2] ||| [function_2] [function_1]	count=1
function	builds a ||| build	count=3
module	prepares the visitor for ||| rdoc markup tohtml	count=3
function	the index of the ||| index	count=2
module	the visitor ||| tohtml	count=2
arg	specified key ||| key	count=3
module	uri of the ||| drb drbobject	count=1
module	summary of [module] ||| [module]	count=1
arg	end ||| end	count=1
function	that ||| result	count=1
module	resolution state [module] resolutionstate an ||| [module]	count=1
module	the resolver ||| resolver	count=1
function	if ||| ===	count=1
arg	bits ||| bits	count=3
module	if hash ||| hash	count=1
function	default home directory path ||| default dir	count=1
arg	[arg_1] the #auth_type ||| [arg_2] [arg_1]	count=1
module	…> the argument passed ||| rexml sax2listener	count=1
module	decode ||| net imap	count=1
module	format into rdoc format ||| rdoc	count=1
module	case which ||| formattertestcase	count=1
function	of parsed elements ||| xmlschema	count=1
function_arg	[function_1] address ||| [function_1] [arg_2]	count=9
function	the ||| []	count=1
function	the bytes ||| bytes	count=1
rep	a binary [function_arg_2] ||| [module_1] [function_arg_2]	count=3
module	flush to ||| rdoc markup	count=1
module	net ||| xmlrpc	count=2
arg	named [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] anchor element ||| [arg_2] [function_1]	count=1
module	that come with ||| gem	count=1
function	accept_list_item_end_number ||| list item end number	count=1
function	[returnv_1] if obj ||| [returnv_1] equal [function_2]	count=3
arg	receives up to ||| flags outbuf	count=2
module	list and ||| rdoc markup list	count=1
module	called ||| psych handler	count=1
function	document ||| start document	count=2
arg	into destination_dir [arg_2] ||| [arg_2] [arg_1]	count=3
function	prints ||| print	count=1
module	method sends ||| smtp	count=1
function	nanoseconds for ||| tv nsec	count=1
arg	[arg_1] stats ||| [arg_2] [arg_1]	count=4
arg	[arg_1] a class_type ||| [arg_2] [arg_1]	count=4
module	as ||| rexml	count=1
arg	by header or index ||| header	count=1
module	its original state and ||| gem testcase	count=1
arg	[arg] passes the ||| [arg]	count=2
function	is the [function_2] ||| [function_2] [function_1]	count=4
module	if it isn’t available ||| thread	count=1
returnv	returns a rational which ||| rational	count=1
function_arg	[function_1] y and ||| [function_1] [arg_2]	count=2
function_arg	symlink [arg_2] ||| [arg_2] [function_1]	count=7
function	[function] a ||| set [function]	count=1
module	summary table passing each ||| optionparser	count=1
arg	[arg] hash containing ||| server root [arg]	count=1
arg	store(), but set ||| set	count=1
arg	sets [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	pass ||| pbkdf2 hmac sha1	count=1
module	block form for ||| requestset gemdependencyapi	count=1
arg	enumerable object and returns ||| enum	count=1
function	if the ||| spec ?	count=1
arg	an httpresponse ||| body initheader	count=3
module	bytes that ||| ssl sslsocket	count=1
function	of modules ||| modules	count=1
function	the script being executed ||| argv0	count=1
arg	given begin ||| begin	count=1
arg	func can ||| func	count=1
function	amount of time ||| time	count=1
module	been turned off by ||| codeobject	count=1
module	the ‘:’ in json ||| json ext generator	count=1
module	if stat ||| file stat	count=5
module	argument ||| optionparser switch placedargument	count=2
module	provides a ||| array	count=1
module	the context ||| rdoc context	count=1
module	uri has ||| uri generic	count=1
arg	searching criteria and returns ||| keys charset	count=1
arg	context ||| context	count=4
arg	subject [arg_2] ||| [arg_1] [arg_2]	count=1
module	documentation ||| rdoc	count=2
module	corresponding to ||| webrick	count=1
function	self [function] ||| [function]	count=3
arg	for pattern with name ||| pattern name	count=1
arg	extend_method ||| extend_method	count=1
module	[module] key false ||| [module]	count=1
function	various ||| dir config	count=1
arg	[arg_1] x ||| [arg_2] [arg_1]	count=1
arg	positions left if numeric ||| numeric	count=1
function	wait ||| wait	count=2
arg	bits [arg_2] ||| cert [arg_1] [arg_2]	count=5
function	[returnv_1] if there ||| [returnv_1] [function_2]	count=5
function	deletes every ||| keep if	count=1
function	a options request ||| options	count=1
function	are equal ||| ==	count=1
function	mark the beginning of ||| begin	count=1
arg	the file ||| file	count=1
module	to ||| sys	count=2
function_arg	[function_1] template ||| [arg_2] [function_1]	count=5
module	this dependency require ||| gem dependency	count=1
module	instructionsequence ||| instructionsequence	count=1
returnv	:break :redo :retry ||| symbol	count=1
arg	indent ||| indent	count=2
arg	and connects to the ||| helo user secret authtype	count=1
function	turns off ||| off	count=1
function	[function] tracer ||| [function]	count=2
module	in the ||| specification	count=1
function	returns the content ||| to	count=1
returnv	returns an array containing ||| array	count=3
module	the encoding ||| stringio	count=1
function	root [function_2] ||| [function_1] [function_2]	count=4
function	gathers a set of ||| gather	count=1
module	up this ||| rdoc	count=1
function	a public key associated ||| public ?	count=1
function	return a time object ||| to time	count=1
module	this module where ||| module	count=1
function	no handler ||| handler	count=2
function	string after the ||| string post	count=1
function_arg	new directory [arg_2] ||| [arg_2] [function_1]	count=1
module	request ||| request	count=5
module	the length and ||| rdoc stats	count=1
function	reason ||| reason	count=1
function	paths in [function_2] ||| [function_2] gems use full [function_1]	count=1
returnv	subsequently ||| self	count=1
arg	and ios [arg] ||| [arg]	count=2
function	an openssl :x509 ||| email to	count=1
arg	destination mailbox ||| mailbox	count=2
module	openssl :x509 ||| gem	count=1
function	from comment ||| parse comment tomdoc	count=1
arg	[arg_1] mode ||| [arg_2] [arg_1]	count=1
function	combine ||| adler32 combine	count=1
function	integer representation ||| to i	count=1
function	make ||| make	count=1
function	rfc2965 cookies ||| cookie2	count=1
function	3 ||| 3	count=1
module	specs ||| specification	count=1
function	private setter for extensions ||| extensions	count=1
module	net :http#read_timeout and ||| xmlrpc	count=1
function	#page_dir to ||| page dir	count=1
arg	[arg_1] on path ||| [arg_1] [arg_2]	count=1
module	bytes ||| openssl ssl sslsocket	count=2
arg	of names in methods ||| methods singleton	count=1
returnv	evaluates to true ||| bool	count=1
function	[function] written ||| ensure loadable [function]	count=3
module	command ||| ftp	count=2
module	live in if ||| generator	count=1
function	normal method ||| method	count=1
module	of generators ||| rdoc options	count=1
module	target thread ||| thread	count=1
module	for the response ||| ocsp response	count=1
function	this is not a ||| ?	count=1
function	specific extra [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] [arg_2] object ||| [function_1] [arg_2]	count=2
arg	the mailbox [arg_2] ||| [arg_1] [arg_2]	count=1
module	called when the ||| psych handler	count=1
arg	path and ||| path data	count=1
function	if the named method ||| method	count=1
function	name_with_underscores or ||| class	count=1
module	bytes that are ||| openssl ssl	count=1
function	content of ||| content	count=1
function_arg	value ty at ||| import value ty	count=1
module	this dsa to ||| dsa	count=1
arg	with name and returns ||| name	count=1
module	syslog warning log level ||| syslog	count=1
function_arg	[function_1] error ||| [arg_2] [function_1]	count=8
module	real time used to ||| benchmark	count=1
function	[returnv_1] [function_2] ||| [returnv_1] write headers [function_2]	count=1
function_arg	document [arg_2] ||| [function_1] version tag_directives [arg_2]	count=1
function	and close ||| close	count=1
function	generated ||| sub	count=1
module	the response received ||| response	count=2
module	checks that cert ||| openssl x509	count=1
function_arg	the document [arg_2] ||| [function_1] version tag_directives [arg_2]	count=1
function	[function] node of ||| [function]	count=2
module	fiber can still ||| fiber	count=1
arg	meth ||| container single meth added_container	count=1
module	a new uri ||| uri	count=3
function	path to gem file ||| gem file	count=1
function	is satisfied by the ||| satisfied by ?	count=1
function	to [function_2] ||| [function_2] [function_1]	count=1
function	replaces ||| replace	count=3
function_arg	dir for [arg_2] ||| [arg_2] [function_1]	count=1
arg	to key ||| key	count=1
function	root node of the ||| root node	count=1
function	[returnv_1] the block ||| [returnv_1] [function_2]	count=3
module	html snippet ||| markup tohtmlsnippet	count=1
module	using identical objects ||| gem indexer	count=1
function	expect full ||| full	count=1
module	exit status a process ||| process	count=2
function	address as [function_2] ||| [function_2] [function_1]	count=1
function	sets up the ||| setup	count=1
module	an [module] ||| fiddle [module]	count=3
function	all [function_2] ||| [function_2] [function_1]	count=8
arg	[arg_1] encoding ||| [arg_2] [arg_1]	count=1
function	if nan infinity and ||| nan ?	count=1
function	is this ||| ?	count=3
function	a get request ||| request get	count=1
module	a specification ||| resolver	count=1
module	a new array with ||| array	count=1
function	true [function_2] ||| [returnv_1] diagonal [function_2]	count=2
function	set the accept character ||| accept	count=1
module	a fileoverflow exception if ||| boundedstream	count=1
function	[returnv_1] [function_2] the ||| [returnv_1] ipv6 [function_2]	count=1
module	form for ||| gemdependencyapi	count=1
function	for ipv6 unique local ||| ipv6 unique local ?	count=1
function	true [function_2] ||| [returnv_1] started [function_2]	count=1
function	as an integer fixnum ||| to i	count=1
module	writer for ||| gem	count=1
function	the last successful ||| last	count=1
arg	without opening a tcp ||| p_addr p_port p_user p_pass	count=1
function	user ||| dir config	count=1
function	valid ||| set valid	count=1
module	returns a properly-space ||| rdoc	count=1
function	a ||| to	count=14
function	encoding of ||| encoding	count=3
function	the digest ||| digest !	count=1
arg	in file_name ||| file_name suffix	count=1
function	[function_1] methods in ||| [function_1] [function_2]	count=1
module	of the [module] the given ||| [module]	count=1
arg	hardbreaks to the hard_break ||| hard_break	count=1
module	state ||| state	count=2
function	the last character removed ||| chop	count=1
module	be an [module] ||| fiddle [module]	count=3
function	[returnv_1] if the ||| [returnv_1] setuid [function_2]	count=2
function	local variables this method ||| local variables	count=1
module	keep_files ||| testcase	count=1
rep	[module_1] [function_arg_2] ||| [module_1] ri driver display [function_arg_2]	count=2
module	socket object connected to ||| socket	count=1
function	ri paths ||| ri paths	count=2
module	up a ||| ri driver	count=1
module	password from the database ||| webrick httpauth htpasswd	count=1
arg	a subclass of the ||| subclass	count=1
module	gem directory ||| gem	count=2
module	for this specification ||| resolver specspecification	count=3
function	[function_1] an empty ||| [function_1] [function_2]	count=1
arg	[arg_1] args to ||| [arg_2] [arg_1]	count=2
module	unpacks the [module] ||| [module]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] has key [function_2]	count=4
function	abbreviate ||| abbreviate	count=1
function	exist ||| sub	count=1
function	the full [function_2] ||| [function_2] [function_1]	count=1
module	:modrubyserver ||| modrubyserver	count=1
function	that match ||| for	count=1
function	is ||| extensions ?	count=1
function	the destination encoding ||| destination encoding	count=2
returnv	process as [returnv] ||| [returnv]	count=2
arg	tags and an implicit ||| tags implicit	count=1
module	represents @return edge the ||| gem resolver molinillo	count=1
module	output through ||| ri	count=1
module	this ||| rdoc	count=15
function	reply 2xx reply ||| success ?	count=1
arg	named generator “darkfish” or ||| generator	count=1
module	value ||| bignum	count=1
function	address obtained ||| address	count=1
arg	subject and the ||| subject	count=1
function	return [function_2] ||| [returnv_1] [function_2]	count=1
returnv	no arguments ||| self	count=1
module	:irbloader#source_file ||| extendcommandbundle	count=1
arg	res whether that ||| res	count=1
arg	by the member name ||| name	count=3
returnv	self ||| string	count=3
module	requestset ||| requestset	count=1
arg	and returns a ||| string format	count=2
function	named public method ||| public method	count=1
module	will live in if ||| generator	count=1
function	of the directory of ||| dir	count=1
module	pass ||| driver	count=1
function_arg	inserts [arg_2] ||| [arg_2] [function_1]	count=3
function	text field ||| text field	count=2
function	then use to configure ||| config	count=1
module	tuplebag which when treated ||| rinda tuplebag	count=1
module	is an array ||| array	count=1
arg	port [arg_2] ||| [arg_2] [arg_1]	count=1
module	an rdoc ||| rdoc	count=14
function	a constant that ||| constant	count=1
module	first digit of ||| smtp response	count=1
function	loads the variable ||| load variable	count=1
returnv	block ||| symbol	count=1
arg	source_uri to the ||| source_uri install_dir	count=1
function	html fragment reference ||| aref	count=1
function	and [function] ||| [function]	count=1
function	if the [function_2] ||| [function_2] [function_1]	count=24
module	other parameters provided ||| drb drbsslsocket	count=1
module	{value => [module] of elements} ||| [module]	count=1
module	gzipwriter object associated with ||| zlib gzipwriter	count=2
arg	text that is found ||| text	count=1
function	pipeline with a pipe ||| pipeline	count=1
function	the line ||| line	count=2
module	specifications that match the ||| molinillo specificationprovider	count=1
function_arg	sections [arg_2] ||| [arg_2] [function_1]	count=1
module	an array ||| rexml	count=5
module	the correct parser ||| parser	count=1
function	supplied ||| new	count=1
function	[function_1] files in ||| [function_2] [function_1]	count=1
module	lock source ||| gem source lock	count=1
module	tts from ||| rdoc	count=1
module	gems to a ||| gem requestset gemdependencyapi	count=1
function	a trace ||| trace	count=1
module	the [module] session’s context ||| [module]	count=1
function	line by ||| config	count=1
function	a new resolver conflict ||| new	count=1
module	method to be called ||| streamlistener	count=1
module	time ||| time	count=26
arg	to store(), but set ||| set attr	count=1
module	[module] rnto ||| [module]	count=2
rep	a given [function_arg_2] ||| [function_arg_2] [module_1]	count=1
module	range using ||| range	count=1
arg	host ||| host allowed_push_host	count=1
returnv	[returnv] with ||| [returnv]	count=2
module	file has ||| file	count=2
function	[function_1] comment in ||| [function_1] [function_2]	count=4
module	visitor for ||| tohtml	count=2
function	removes [function] variable from ||| remove [function]	count=1
module	the object’s object_id ||| ppmethods	count=1
arg	[arg_1] start ||| [arg_2] [arg_1]	count=1
arg	singleton value singleton ||| singleton	count=1
arg	response as an httpresponse ||| initheader dest	count=1
function	basic list of ||| basic word	count=1
function	returns the next object ||| next	count=1
arg	[arg] display inspect ||| [arg]	count=3
function	with a ||| def pre proc	count=1
function	given value ||| value	count=1
function	the port ||| set port	count=1
arg	delegate to obj ||| obj	count=1
arg	sends [arg] ||| req [arg]	count=2
function	off by ||| start	count=1
function	get all gem ||| get all gem names	count=1
module	fiber resuming ||| fiber	count=1
module	supplied will be set ||| rexml	count=1
function	returns it ||| to	count=2
module	list and all ||| markup list	count=1
module	resolution state [module] resolutionstate ||| [module]	count=1
function	[function_1] relative to ||| [function_2] [function_1]	count=3
function	a udp/ip [function] ||| udp [function]	count=1
function	a methods ||| methods	count=1
function	[function_1] info directory ||| [function_2] [function_1]	count=3
function	[returnv_1] priority of ||| [function_2] [returnv_1]	count=1
function	to the source ||| source	count=1
function	the gem :specification ||| spec	count=1
function	rdoc options ||| rdoc options	count=1
function	[function_1] time ||| [function_1] [function_2]	count=2
module	and releases ||| thread mutex	count=1
module	dbm database ||| dbm	count=2
module	patch ||| net http	count=1
function	unless documentation has been ||| start	count=1
arg	if you [arg_2] ||| [arg_2] [arg_1]	count=6
arg	text to properly encoded ||| text	count=1
module	returns the [module] of ||| [module]	count=1
module	graph? @return ||| resolver molinillo	count=1
function	[returnv_1] if ||| [returnv_1] exclude end [function_2]	count=1
function	command to append ||| append	count=1
function	task [function] ||| clobber task [function]	count=4
function	[function_1] argument valid ||| [function_2] number [function_1]	count=2
returnv	block [returnv] containing the ||| [returnv]	count=1
function	[function_1] path ||| [function_2] [function_1]	count=11
function	[function] a name-with-dashes ||| to [function]	count=3
function	[returnv_1] any ||| [function_2] [returnv_1]	count=3
arg	the given searching criteria ||| keys charset	count=1
function	[function] from the ||| delete [function]	count=1
function	of method names set ||| set visibility for	count=1
function	a look at ||| new	count=1
function	the other ||| setup	count=1
function	loop ||| loop	count=1
arg	address port and returns ||| address port	count=1
module	druby reference to ||| drb	count=1
function	fiber-local variables as ||| keys	count=1
function_arg	[function_1] the indicated ||| [arg_2] [function_1]	count=3
arg	[arg] then ||| index [arg]	count=1
arg	n ||| n zero	count=1
arg	equals obj ||| obj	count=1
function	remote gems should ||| remote	count=1
module	indicates whether this dh ||| dh	count=1
arg	order of deny_allow or ||| order	count=1
function	attribute ||| parse attr	count=1
arg	the context of ||| context	count=1
arg	the options parameter ||| options	count=1
module	already exist ||| rdoc generator	count=1
function	[function] that ||| spec [function]	count=2
arg	[arg_1] to newname ||| [arg_2] [arg_1]	count=4
function	defined by _ mod_ ||| defined	count=1
module	returns ||| syslog	count=1
function	everything in the ||| unsatisfied by	count=1
function	[function] new ||| [function]	count=2
module	apiset that will ||| resolver apiset	count=1
function	caller of this method ||| location of caller	count=1
arg	value ||| value tag tagging tag_class	count=1
function_arg	add [arg_2] ||| [function_1] [arg_2]	count=1
function	with [function] processed data ||| [function]	count=1
arg	[arg_1] for size ||| [arg_2] [arg_1]	count=4
function	workspace ||| workspace	count=2
arg	determines the [arg_2] ||| [arg_2] [arg_1]	count=2
arg	that is generated from ||| state	count=1
module	that the specification ||| gem specification	count=1
module	file or ||| file stat	count=1
function	[function_1] slice ||| [function_2] [function_1]	count=1
arg	[arg_1] size items ||| [arg_2] [arg_1]	count=3
module	specification contains all required ||| gem specification	count=1
function	adds methods to the ||| methods	count=1
arg	key ||| key default	count=1
function_arg	[function_1] in ||| [function_1] [arg_2]	count=2
module	gems to ||| requestset gemdependencyapi	count=1
function	html id-friendly ||| html	count=1
function	which is mime content-type ||| content type	count=1
function	number ||| stats	count=1
arg	temporary ||| tmpdir	count=1
function	deletes a child ||| delete	count=1
module	the visitor ||| markup tomarkdown	count=1
function	prepares the visitor ||| list	count=4
module	a [module] :security ||| [module]	count=1
module	string being scanned ||| stringscanner	count=1
module	non-root [module] that ||| gem resolver molinillo [module]	count=1
rep	socket [function_arg_2] ||| [module_1] unix [function_arg_2]	count=1
function	[function_1] all ip ||| [function_1] [function_2]	count=1
module	whitespace from [module] returning nil ||| [module]	count=1
function	[returnv_1] decryption ||| [function_2] [returnv_1]	count=1
arg	port ||| port	count=10
module	list of files so ||| gem	count=1
module	ri ||| rdoc ri	count=3
function	3xx reply code ||| continue ?	count=1
module	[module] attribute ||| [module]	count=2
function	create an output ||| output	count=1
function_arg	[function_1] name from ||| [function_1] [arg_2]	count=4
function	unique modules discovered by ||| unique modules	count=1
function	key [function_2] ||| [function_1] [function_2]	count=1
rep	installs [function_arg_2] ||| [module_1] install [function_arg_2]	count=3
arg	uri with [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] visitor ||| [function_1] [function_2]	count=1
module	for this ||| rexml	count=2
function_arg	add a [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	if version ||| ? version	count=1
function	same type and ||| eql	count=1
function	default irb commands irb ||| extend commands	count=1
module	onto ||| gem package tarwriter	count=1
arg	numeric ||| numeric	count=14
module	called with the ||| psych handler	count=1
arg	from self to other ||| other	count=1
module	waits if it ||| mutex	count=1
function	[function_1] value associated ||| [function_2] [function_1]	count=3
arg	text with text ||| text	count=1
function	unique [function_2] ||| [function_1] [function_2]	count=8
function	all but the ||| dirname	count=1
module	[‘blt_stripchart_bar’ ||| blt stripchart	count=1
arg	of the current activated ||| activated	count=1
function_arg	[function_1] obj and ||| [function_1] tag [arg_2]	count=1
function	process is the owner ||| grpowned	count=2
module	command along ||| imap	count=1
arg	is a singleton ||| singleton	count=1
module	[module] or ||| [module]	count=2
function	[function_1] enter ||| [function_2] [function_1]	count=1
module	length ||| rdoc stats	count=2
function	element with an ||| with	count=2
function	returns the real part ||| real	count=1
module	time and ||| time	count=1
module	immediately ||| openssl	count=1
function	attempts to enter ||| try enter	count=2
module	turned off ||| codeobject	count=1
module	returns the encoding ||| io	count=1
function	of natural logarithms ||| e	count=1
module	number ||| ssl sslsocket	count=2
function	[returnv_1] resets the ||| [returnv_1] [function_2]	count=1
function	this spec can require ||| contains requirable	count=1
function	if ||| value ?	count=1
arg	meta-programmed attribute ||| single tk comment	count=1
function	listed the ||| requester	count=1
module	off by :enddoc ||| codeobject	count=1
function	the status of ||| status	count=1
arg	ref ||| ref	count=1
module	entry elements ||| entry	count=1
arg	values associated [arg] ||| [arg]	count=1
module	a ||| rdoc options	count=2
arg	n of ||| n	count=3
function	human-readable ||| inspect	count=4
module	source uri strings ||| sourcelist	count=1
arg	map [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] template ||| [function_2] [function_1]	count=2
function	prepares ||| list item start	count=4
function	the object level == [returnv_1] [function_2] ||| [returnv_1] [function_2]	count=4
arg	enables the [arg_2] ||| [arg_2] [arg_1]	count=2
function	a copy request ||| copy	count=1
module	and flags ||| ocsp basicresponse	count=1
module	to ||| optionparser	count=1
module	[module] for the ||| [module]	count=2
arg	on dir and calls ||| dir	count=1
arg	tuple and ||| tuple	count=1
module	entry a directory? ||| entry	count=1
arg	list includes other ||| other	count=1
arg	in context with comment ||| container tk comment ignore_constants	count=1
function	set-group-id permission bit set ||| setgid	count=1
function	[returnv_1] named public ||| [function_2] [returnv_1]	count=1
function	returns true if ||| bool disconnected ?	count=1
module	get ||| rdoc parser ruby	count=1
module	and allows rdoc ||| rdoc	count=1
module	restricting gems to a ||| gem requestset gemdependencyapi	count=1
arg	path ||| path initheader	count=1
module	if they don’t already ||| rdoc	count=1
arg	comment ||| single tk comment	count=1
module	key-value pair ||| sdbm	count=2
returnv	creating the symbol if ||| symbol	count=1
function	[function_1] node ||| [function_2] [function_1]	count=4
function	a private key ||| private	count=1
arg	also_in to out ||| out also_in	count=3
arg	with both [arg] ||| [arg]	count=2
function	field ||| field	count=3
function	ordinal of a one-character ||| ord	count=1
module	set and ||| set	count=4
function	the headers for ||| headers	count=1
module	generators ||| options	count=1
function	get [function_2] ||| [function_1] [function_2]	count=15
function	[returnv_1] form “nnnnnn ||| [function_2] [returnv_1]	count=1
module	that cert signature is ||| openssl x509 request	count=1
function	adds symlink ||| add symlink	count=1
function	power ||| **	count=1
function	returns [returnv_1] [function_2] matrix ||| [returnv_1] [function_2]	count=1
function	[function_1] variable names ||| [function_2] [function_1]	count=3
function	constant with the ||| const	count=1
arg	methodname as ||| methodname	count=2
function	[function_1] token listener ||| [function_2] [function_1]	count=1
arg	header ||| header	count=1
function_arg	[function_1] mode ||| [function_1] [arg_2]	count=1
function	result of interpreting ary ||| h	count=1
module	to a set of ||| gem	count=1
module	if ||| parent	count=1
module	a raw cookie string ||| cgi cookie	count=1
module	marks up ||| tohtmlsnippet	count=1
function_arg	klass [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	end of ||| end	count=2
function	the local [function_2] ||| [function_2] [function_1]	count=1
module	current working [module] of this ||| [module]	count=2
arg	[arg_1] type of ||| [arg_2] [arg_1]	count=3
arg	[arg_1] for generator_name ||| rdoc servlet asset [arg_2] [arg_1]	count=4
returnv	the return ||| obj	count=1
function	verify the ||| verify	count=1
function	first comment in ||| collect first comment	count=2
function	[function_1] type ||| [function_1] [function_2]	count=4
function_arg	[function_1] the gem ||| [arg_2] [function_1]	count=2
module	ringfinger ||| ringfinger	count=1
module	if they don’t already ||| rdoc generator	count=1
function_arg	[function_1] [arg_2] ||| [function_1] with substitution [arg_2]	count=1
function	if the stream ||| stream end ?	count=1
module	in the spec ||| specification	count=1
function	for restricting ||| platform	count=1
arg	path [arg_2] ||| [arg_1] [arg_2] ) → (true or	count=1
arg	headers you ||| headers	count=1
module	ssl context ||| ssl sslcontext	count=1
arg	res ||| generator req res	count=1
function	visitor for html generation ||| accepting	count=1
module	or rdoc :attr from ||| rdoc	count=1
module	:sslcertificate ||| drbsslsocket	count=1
function	[returnv_1] if the ||| [returnv_1] autoclose [function_2]	count=1
arg	with the given value ||| value	count=1
arg	as an httpresponse object ||| data initheader dest	count=1
arg	[arg_1] key ||| [arg_2] [arg_1]	count=12
arg	function of x ||| x	count=1
function	original ||| orig	count=1
module	the authoritative instance ||| gem commandmanager	count=1
function	a new formatter ||| new	count=1
arg	arg as ||| arg	count=2
module	encoding object that ||| stringio	count=1
function	heading ||| heading	count=2
function	all classes [function_2] ||| [function_1] [function_2]	count=5
arg	parsing from a string ||| string start	count=4
function	a serialised json string ||| json creatable	count=1
module	a new [module] with ||| gem security [module]	count=1
function	library ||| find library	count=1
function_arg	unique [arg_2] ||| [function_1] [arg_2]	count=1
function	sorted ||| sorted	count=1
function	an alias [function_2] ||| [function_1] [function_2]	count=1
function	string [function_2] ||| [returnv_1] [function_2]	count=6
module	irb ||| irb context	count=3
function_arg	[function_1] file_name ||| [function_1] procs [arg_2]	count=2
function	the close ||| close	count=1
function	resets and ||| reset	count=1
module	that a ||| drbsslsocket	count=1
function	[function_1] method that ||| [function_1] [function_2]	count=1
arg	element is removed ||| element	count=1
function	builds [function_2] ||| [function_1] [function_2]	count=7
function	[returnv_1] that contains ||| [function_2] [returnv_1]	count=2
module	source for a gem ||| gem source	count=1
function	[function] the ||| delete [function]	count=1
function	spec file ||| spec file	count=4
module	the alias ||| rdoc alias	count=1
function_arg	[function_1] method ||| [function_1] [arg_2]	count=9
function	server [function_2] ||| [function_2] [function_1]	count=3
arg	dependency is ||| spec dependency	count=1
function	list ||| normalized file list	count=1
function	local gems should ||| local	count=1
module	for gems ||| gem	count=2
module	[module] for ||| gem [module]	count=2
function_arg	compares this version [function_1] [arg_2] to the http specification ||| webrick httpversion [function_1] [arg_2]	count=1
function	for development ||| development	count=1
function_arg	[function_1] path and ||| [arg_2] [function_1]	count=3
module	marking up this object’s ||| generator	count=1
arg	the file path ||| path	count=2
function	if the file ||| ?	count=2
module	date and time with ||| date	count=1
arg	of ruby ||| ruby options	count=1
module	docs will ||| generator	count=1
arg	then [arg] must ||| is_ret [arg]	count=1
function	api compatibility ||| api	count=1
function	iteration of the given ||| collect	count=1
function	[function_1] documentation installed? ||| [function_2] [function_1]	count=2
function	line ||| line	count=5
module	:sslcertificate and ||| drbsslsocket sslconfig	count=1
arg	comment to ||| comment	count=2
function	the length and number ||| stats	count=1
module	same method definition and ||| method	count=1
module	the [module] with another ||| [module]	count=1
function	gets the hostname for ||| getname	count=1
arg	obj <=> min ||| min	count=1
function	if time [function_2] ||| [function_2] [function_1]	count=2
module	silent progress reporter ||| streamui silentprogressreporter	count=1
arg	but set ||| set mailbox	count=1
function	if the gems ||| ?	count=1
function	get all gem version ||| get all gem names and	count=1
function	get the reference ||| drbref	count=1
arg	[arg_1] req on ||| [arg_1] [arg_2]	count=1
function_arg	class [arg_2] ||| [function_1] out [arg_2]	count=1
function	returns true [function_2] ||| [returnv_1] gregorian leap [function_2]	count=4
module	up this object’s comment ||| generator	count=1
function	instance method of ||| method	count=1
function_arg	a warning [arg_2] ||| [arg_2] [function_1]	count=1
module	download is ||| streamui verbosedownloadreporter	count=1
function	relative to ||| relative	count=1
function	line that holds ||| nl	count=1
arg	user ||| user	count=10
function	session ||| session	count=1
arg	meta-programmed attribute and creates ||| single tk comment	count=1
arg	named files in list ||| list options	count=1
function	key ||| key	count=10
rep	with the [function_arg_2] ||| [module_1] string [function_arg_2]	count=1
function	with [function_2] ||| [function_2] [returnv_1]	count=1
module	[module] no ||| json [module]	count=1
function	[function] in ||| each [function]	count=1
module	this state ||| generator state	count=1
module	[module] a hash ||| [module]	count=3
function	the power ||| power	count=1
arg	the given base_directory ||| base_directory	count=1
arg	[arg_1] spec ||| [arg_2] [arg_1]	count=2
module	of documentation unless documentation ||| codeobject	count=1
module	pair ||| drb drbprotocol	count=1
function	the arc sine ||| asin	count=1
arg	str ||| str	count=26
function	the bytes to ||| bytes	count=1
function	module ||| modules	count=2
arg	the given string ||| string	count=2
arg	constructing new regexp object ||| object	count=1
module	removes ||| rdoc parser c	count=1
arg	a string according to ||| string 1 jan -4712	count=2
module	the net :http#read_timeout ||| client	count=1
arg	object and connects to ||| helo user secret authtype	count=1
function	read using shutdown ||| read	count=1
module	form for restricting ||| requestset gemdependencyapi	count=1
module	the ||| rexml	count=1
function	is passed argument ||| ?	count=2
function	[function_1] mapping ||| [function_2] [function_1]	count=2
function	last successful pattern match ||| last match	count=1
module	[module] :toplevel has ||| [module]	count=1
arg	by n matrix ||| n zero one	count=1
function	server advertises [function_2] ||| [function_2] [function_1]	count=6
function	[returnv_1] if ||| [returnv_1] started [function_2]	count=2
module	waits ||| mutex	count=1
function	emacs [function_2] ||| [function_2] [function_1]	count=1
function	reads one character from ||| getc	count=1
arg	denoting ||| minute second offset start	count=1
function_arg	[function_1] meth ||| [function_1] [arg_2]	count=4
module	original state and removes ||| gem	count=1
function_arg	[function_1] [arg_2] 0 or +1 if ||| [function_1] [arg_2]	count=1
function_arg	the buffer [arg_2] ||| [arg_2] [function_1]	count=1
function	private [function_2] ||| [function_1] [function_2]	count=3
module	this parser ||| json ext parser	count=1
function	add a new ||| add tag	count=1
arg	[arg_1] the #auth_type ||| [arg_1] [arg_2]	count=1
function	if they ||| sub	count=1
module	instructionsequence with source location ||| instructionsequence	count=1
function	dependencies ||| dependencies	count=3
module	to a [module] ||| [module]	count=1
function	from ||| accept block	count=1
function	is ||| directory ?	count=1
module	this context ||| context	count=5
arg	opts as ||| opts	count=1
function	and -infinity should be ||| ascii only	count=1
function	loads ||| load	count=12
arg	index the integer index ||| index	count=1
arg	[arg_1] and stats ||| [arg_2] [arg_1]	count=4
returnv	the original string ||| string	count=2
function	[function_1] gem ||| [function_1] [function_2]	count=9
module	multiple rdoc ||| rdoc	count=1
module	variable was set ||| testcase	count=1
arg	object and connects ||| address port helo user secret authtype	count=1
module	generated ||| rdoc generator	count=1
module	been turned off ||| codeobject	count=1
function	a module ||| module	count=5
arg	string into the end ||| string	count=1
arg	[arg_1] singleton context ||| [arg_1] [arg_2]	count=1
module	the ||| ftp	count=1
returnv	object ||| encoding	count=2
function	file path ||| path	count=1
arg	[arg_1] stop ||| [arg_1] [arg_2]	count=2
arg	[arg_1] [arg_2] and return it ||| generate [arg_2] [arg_1]	count=1
arg	[arg] are ||| headers [arg]	count=1
arg	to ||| flags outbuf options	count=1
function	canonical name as an ||| canonname	count=1
function	option to the option ||| platform option	count=1
arg	[arg_1] and ||| [arg_1] signing_cert [arg_2]	count=7
arg	[arg_1] order of ||| [arg_1] [arg_2]	count=1
function	holds ||| nl	count=1
module	environment variable ||| testcase	count=1
module	the [module] first ||| [module]	count=1
module	fiddle :pointer ||| fiddle	count=1
function	[returnv_1] [function_2] ||| [returnv_1] autoclose [function_2]	count=4
module	prepares the visitor for ||| rdoc markup tomarkdown	count=1
function	object#to_s ||| to s	count=1
module	following configuration ||| config	count=1
module	the parser ||| parser	count=2
arg	file_name content ||| file_name content	count=2
arg	the given permissions ||| permissions passphrase cipher	count=1
module	last ||| gzipreader	count=1
module	grab ||| thread mutex	count=2
module	visitor ||| tordoc	count=2
module	this pointer to ||| pointer	count=1
arg	on res ||| res	count=3
module	returns comments recorded ||| zlib gzipfile	count=1
returnv	first [returnv] in ||| [returnv]	count=1
module	@return dependencygraph the ||| gem resolver molinillo	count=1
arg	s in string in ||| string filename lineno	count=1
function	index ||| index	count=4
module	specifications that match the ||| gem resolver molinillo specificationprovider	count=1
function	[function] named generator_name ||| [function]	count=1
function	args hash self ||| args hash	count=2
module	to the stream ||| buffering	count=1
arg	start and stop character ||| start stop	count=1
function_arg	parses command line ||| parse argv	count=1
arg	with both [arg] and ||| [arg]	count=2
function	specific extra args ||| specific extra args	count=2
module	represents @return edge the ||| resolver molinillo dependencygraph	count=1
module	<< myclassname ||| singleclass	count=1
module	to its original ||| testcase	count=1
module	downloads [module] ||| [module]	count=2
module	number of bytes that ||| ssl	count=1
function	::clock_gettime() ||| gettime	count=1
function	is ||| is	count=1
module	a string ||| string	count=1
module	output method depending on ||| levelednotifier	count=1
function	name produces ||| signame	count=1
function	creates a hash ||| hash	count=1
module	to ||| gemdependencyapi	count=1
module	and public key unless ||| dh	count=1
function	true [function_2] ||| [returnv_1] empty [function_2]	count=2
arg	name in path ||| path	count=1
arg	given command exists ||| command	count=1
arg	maxlen bytes ||| maxlen	count=1
function_arg	[function_1] other wraps ||| [function_1] [arg_2]	count=1
module	certificate and is valid ||| gem security policy	count=1
module	just the ||| tolabel	count=1
module	of this singleton class ||| rdoc	count=1
arg	convert a local object ||| obj	count=1
module	using file :separator ||| file	count=1
function	prime factorization and returns ||| prime	count=1
arg	type of ||| type	count=1
function	[function_1] or ||| [function_2] [function_1]	count=5
function	if they ||| gen	count=1
module	element children ||| rexml elements	count=2
arg	a ||| start	count=7
arg	the given base ||| base	count=1
arg	list to the ||| list	count=2
function	method retrieves the name ||| name	count=1
module	for true ‘true’ ||| ext generator generatormethods trueclass	count=1
function	[function] expects ||| [function]	count=1
function	the attribute ||| attribute	count=1
arg	as date and hour ||| hour	count=1
function	beginning of ||| begin adding	count=1
arg	on front ||| front desc renewer	count=1
function	returns the next ||| next values	count=1
function	removes a header ||| delete	count=1
arg	[arg] and standard ||| [arg] stdin	count=1
arg	ber- or der-encoded value ||| der	count=1
module	to a named header ||| httpheader	count=1
returnv	original string ||| string	count=2
function	beginning of ||| begin	count=1
arg	a target name that ||| target	count=1
module	server ||| server	count=3
arg	and an implicit start ||| implicit	count=1
module	is created ||| logger	count=1
function	[returnv_1] if this ||| [function_2] [returnv_1]	count=4
module	provided ||| drb	count=2
function	symbol ||| symbol	count=2
function	merges the elements of ||| merge	count=1
module	compares file ||| file	count=1
module	created by [module] :proxy ||| net [module]	count=1
arg	repository ||| repository	count=1
module	json #max_nesting = 0 ||| json ext	count=1
function	when there are no ||| empty	count=1
module	passwords ||| webrick httpauth	count=1
arg	has ole [arg] otherwise ||| [arg]	count=1
arg	signing_key and signing_cert using ||| signing_key signing_cert age extensions	count=1
arg	length bytes defaulting ||| name length	count=1
module	to the ||| markup	count=4
module	calling [module] will ||| [module]	count=1
function_arg	[function_1] method_body ||| [function_1] scan args [arg_2]	count=1
module	template ||| rdoc generator darkfish	count=1
function	performs a delete ||| delete	count=1
arg	of the #tsort method ||| each_node each_child	count=1
function_arg	head request [arg_2] ||| [arg_2] [function_1]	count=1
returnv	-1 0 or +1 ||| -1,_0,_+1	count=1
rep	a [function_arg_2] ||| [module_1] [function_arg_2]	count=8
function	the machine representation ||| size	count=1
function	servlet ||| generate servlet	count=1
arg	method_body and returns ||| method_body	count=1
function	called when no handler ||| set default handler	count=1
arg	[arg_1] from requester ||| [arg_2] [arg_1]	count=1
function	[function_1] all messages ||| [function_1] [function_2]	count=3
module	rows for index ||| table	count=1
function	the row vectors ||| row vectors	count=1
function	installed? ||| installed	count=1
arg	determines ||| single tk method	count=1
function	bit pattern represented ||| chmod	count=1
function	wait [function] but does ||| [function]	count=1
module	in obj ||| object	count=2
module	:imap ||| imap	count=1
arg	[arg_1] to limit ||| [arg_1] [arg_2]	count=1
function	case-insensitive flag ||| casefold	count=1
module	dir object ||| dir	count=1
function	to ||| platform	count=1
function	and rb_define_attr ||| attrs	count=1
module	process from controlling terminal ||| process	count=1
function	is this server ||| ?	count=1
function_arg	resources for [arg_2] ||| [arg_2] [function_1]	count=1
module	visitor for html ||| rdoc markup tohtml	count=1
arg	compiler ||| compiler	count=2
arg	given searching criteria and ||| keys charset	count=1
function	delete [function_2] ||| [function_1] [function_2]	count=1
arg	string attributes ||| string	count=1
module	new ||| ri	count=1
function	always match the latest ||| specific	count=1
function	prepares the ||| item	count=4
function	removes ifdefs ||| ifdefs	count=1
function	the cross-references ||| handle special crossref	count=1
arg	time as ||| time	count=1
arg	number of bits ||| bits	count=1
module	this node to ||| psych nodes node	count=1
arg	[arg_1] user user ||| [arg_2] group [arg_1]	count=1
arg	expired_certificate ||| expired_certificate	count=1
module	pathname object from the ||| pathname	count=1
module	gem ||| gem package	count=2
module	docs will live in ||| rdoc generator	count=1
function	[returnv_1] [function_2] ||| [returnv_1] mountpoint [function_2]	count=1
module	xml-rpc server ||| server	count=1
function	[function_1] undefined in ||| [function_1] [function_2]	count=2
module	:drbobject ||| drbobject	count=1
function	live ||| gen sub	count=1
module	parse ||| rdoc rdoc	count=1
module	this dh instance ||| openssl pkey dh	count=1
function	single [function_2] ||| [function_2] [function_1]	count=4
module	form for ||| requestset	count=1
function	evaluates the ruby expression ||| eval	count=1
arg	event handler p which ||| p	count=1
function	waits for thr to [returnv_1] [function_2] raises the exception which ||| thread [returnv_1] [function_2]	count=1
module	to grab ||| thread mutex	count=1
module	feed or any of ||| feed	count=1
module	be ||| rexml parent	count=2
module	this method will be ||| task	count=1
arg	op [arg_2] ||| [arg_2] [arg_1]	count=4
function	the line number of ||| lineno	count=2
module	ipaddr built by masking ||| ipaddr	count=1
function	gets x509v3 [function] as array ||| [function]	count=1
returnv	object proc to call ||| proc	count=1
arg	the given command ||| command	count=2
module	http ||| http	count=4
function	[function] of the ||| set [function]	count=2
arg	to address [arg_2] ||| [arg_1] [arg_2]	count=3
function	returns the encoding ||| encoding	count=1
module	:method or rdoc :attr ||| rdoc parser ruby	count=1
module	@param parent if supplied ||| rexml	count=1
arg	named file see ||| file_name	count=1
arg	a parent ||| parent	count=1
function	[function_1] an ssl ||| [function_2] [function_1]	count=2
function_arg	[function_1] defined in ||| [arg_2] [function_1]	count=18
module	session state ||| cgi session	count=1
function_arg	[function_1] repository ||| [function_1] [arg_2]	count=3
returnv	an instance ||| instance	count=2
arg	object ref ||| ref	count=1
function	tracing object ||| trace object	count=5
arg	to the path ||| path	count=10
module	the cgi process with ||| webrick cgi	count=1
function	finds all tuples in ||| find all template	count=1
function	[returnv_1] if ||| [returnv_1] proxy class [function_2]	count=1
arg	determines the ||| single	count=1
arg	[arg] - ||| bits [arg]	count=1
function	a list ||| file list	count=1
arg	for each [arg] ||| [arg]	count=1
function	[returnv_1] parsed elements ||| [returnv_1] [function_2]	count=4
function	copy request to the ||| copy	count=1
arg	of arguments ||| args	count=2
arg	process @param string name ||| name	count=1
function	the real user ||| real	count=1
module	instance the [module] will take ||| [module]	count=1
function	to the option parser ||| version option	count=1
function	new name with ||| new name	count=2
function	text field input element ||| text field	count=1
function_arg	files of [arg_2] ||| [arg_2] [function_1]	count=1
arg	prefix ||| prefix	count=3
module	int down ||| integer	count=1
function	last win32 error ||| win32 last	count=2
function	extra [function] ||| extra rdoc [function]	count=2
module	command ||| makemakefile	count=1
module	filters ||| rdoc ri driver	count=1
arg	of significant digits ||| digits	count=1
function_arg	[function_1] the uri ||| [function_1] [arg_2]	count=3
arg	rows [arg_2] ||| [arg_1] [arg_2]	count=1
function	time zone used ||| zone	count=1
module	to add to ||| gem	count=1
function	the named instance ||| instance	count=1
arg	methodname as instance ||| methodname	count=2
function_arg	the text [arg_2] ||| [function_1] [arg_2]	count=1
function	range object ||| range	count=2
arg	bin [arg_2] ||| [arg_2] [arg_1]	count=1
function	creates a self-signed certificate ||| cert	count=1
function	[function_1] all ||| [function_1] [function_2]	count=8
module	value of [module] ||| [module]	count=2
module	is ||| rdoc markup parser	count=1
module	directory by stou stor ||| ftp mlsxentry	count=1
arg	numeric which ||| numeric	count=1
module	that :sslcertificate ||| drb	count=1
arg	min sec as time ||| min sec	count=1
function	[returnv_1] name ||| [returnv_1] [function_2]	count=3
arg	running the given ||| env command... options	count=1
arg	bin ||| bin padding: true	count=1
returnv	the next [returnv] in the ||| [returnv]	count=1
function	[function] the ||| each [function]	count=2
module	:sslcertificate ||| drb drbsslsocket	count=1
function	attempts authentication and quits ||| auth only	count=1
module	the component array ||| uri generic	count=1
function	return the [function] ||| [function]	count=2
function	of the keys ||| keys	count=1
function_arg	[function_1] code a ||| [arg_2] [function_1]	count=3
module	matching that ||| gem	count=1
module	by stou stor ||| ftp mlsxentry	count=1
module	of ||| drbobject	count=2
module	environment variable ||| gem	count=1
function	by ||| config	count=1
function	[function_1] of memory ||| [function_2] [function_1]	count=3
module	to the stream ||| openssl buffering	count=1
module	component of the path ||| pathname	count=1
module	objects being [module] ||| [module]	count=3
function	the yaml ||| yaml	count=1
module	tar file entry ||| package tarreader entry	count=1
arg	string [arg_2] ||| openssl digest digest new [arg_1] [arg_2]	count=4
arg	a given string and ||| string	count=1
arg	class_module into this classmodule ||| class_module	count=1
arg	mod to ||| mod	count=1
function	if they don’t already ||| gen sub	count=1
function	connected components in a ||| connected component from	count=1
function	writable by the effective ||| writable	count=1
function	the issuer certificate ||| issuer	count=1
module	this file ||| zlib	count=1
function	subset ||| >	count=1
module	this method/attribute ||| rdoc methodattr	count=1
function	creates a ||| new	count=4
function_arg	signs [arg_2] ||| [function_1] [arg_2] private_key age extensions	count=1
arg	[arg_1] singleton context ||| [arg_2] [arg_1]	count=1
module	that ||| rdoc markup	count=2
function	returns true [function] ||| include [function]	count=4
module	environment variable with ||| env	count=3
module	openssl’s buffering io module ||| openssl buffering	count=1
function	calls verify to ensure ||| verify	count=1
module	remote [module] ||| [module]	count=1
module	shell ||| shell	count=4
arg	given path returning ||| path	count=1
function	public [function_2] ||| [function_2] [function_1]	count=4
module	net :http#open_timeout to ||| client	count=1
function	is this dependency ||| ?	count=1
module	returns the locale object ||| i18n locale	count=1
arg	named file the ||| file_name	count=1
function_arg	[function_1] object o ||| [function_1] [arg_2]	count=1
function	:“” ||| empty	count=1
module	records the [module] ||| [module]	count=3
function	rdoc options to be ||| rdoc options	count=1
arg	the level [arg_2] ||| [arg_1] [arg_2]	count=1
arg	with requirements to this ||| requirements	count=1
arg	of n ||| a n	count=2
function_arg	the given [arg_2] ||| [arg_2] [function_1]	count=3
function	dependency and a ||| dependency request	count=1
module	generated json ||| json	count=2
module	live in if they ||| rdoc generator darkfish	count=1
module	generated docs will live ||| rdoc generator darkfish	count=1
function	add ||| add tag	count=2
module	for html ||| rdoc	count=1
function	[function_1] [function_2] ||| [function_2] api [function_1]	count=2
arg	cn and [arg_2] ||| [arg_1] [arg_2]	count=3
arg	isapop is ||| isapop	count=1
function	[function_1] name from ||| [function_1] [function_2]	count=4
module	=> [module] of ||| [module]	count=1
arg	with anchor tag ||| anchor tag	count=2
function	string-like parse ||| []	count=1
module	tarreader on ||| gem package tarreader	count=1
function	name including namespace ||| name	count=1
module	other parameters ||| sslconfig	count=1
returnv	new [returnv] ||| [returnv]	count=1
module	file s ||| file	count=1
function	at ||| at	count=2
module	list of known specs ||| specification	count=1
function	cross-references in ||| special crossref	count=1
arg	in chain ||| chain	count=1
module	of documentation ||| rdoc	count=1
arg	each to comment ||| comment	count=1
module	just ||| tolabel	count=1
module	prepares the ||| markup tottonly	count=1
module	the [module] object ||| [module]	count=1
function	setter for scope ||| scope	count=1
function	directory for the ||| dir	count=1
module	for marking up this ||| rdoc generator	count=1
returnv	string containing the ||| string	count=2
module	:x509 :name ||| gem security	count=1
function	name associated with ||| name	count=1
arg	asset at [arg] ||| generator_name [arg]	count=1
module	to just ||| rdoc markup tolabel	count=1
function	record for the search ||| search record	count=1
module	been ||| drbsslsocket	count=1
module	of this tms object ||| benchmark tms	count=1
function	the given block ||| if	count=1
function	a [function_2] ||| fixnum [function_1] [function_2]	count=1
function	create a list of ||| normalized file list	count=1
function	openssl :x509 ||| name	count=1
arg	text and ||| text	count=1
module	resolv ||| resolv	count=2
function	target messages ||| messages	count=1
function	the directory ||| directory	count=1
function_arg	for notifications [arg_2] ||| [arg_2] [function_1]	count=1
function	the output ||| quote	count=1
module	environment variable was ||| testcase	count=1
arg	methodname as instance method ||| methodname	count=1
function	after ||| after	count=2
function	arc tangent given ||| atan2	count=1
function	that represents the encoding ||| external encoding	count=2
module	indicates the [module] complete ||| gem [module]	count=1
function	parser ||| parser	count=1
function	intermediate reply 3xx ||| continue	count=1
function	up a module ||| find symbol module	count=1
module	that ||| rinda	count=2
arg	exception while [arg_2] ||| [arg_1] [arg_2]	count=3
function	delegation from a serialized ||| marshal load	count=1
module	various “with” ||| makemakefile	count=1
module	list ||| gem	count=1
function	like with on ||| on	count=3
function	stat exited normally ||| exited	count=1
arg	spec in the ||| spec	count=1
function	:x509 ||| email to	count=1
module	pass output through ||| ri driver	count=1
arg	[arg_1] and password ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] for selector ||| [function_1] [arg_2]	count=3
module	element children ||| elements	count=1
function	disconnected from ||| disconnected	count=1
module	generate [module] document from ||| [module]	count=2
function	the internal string if ||| internal	count=1
function	requesting [function] ||| [function]	count=3
function	extracts ||| extract	count=3
function	pipe false ||| pipe	count=1
function	output ||| accept	count=1
module	listening for connections at ||| drbprotocol	count=1
function	[function_1] platform ||| [function_2] [function_1]	count=2
function_arg	on the [arg_2] ||| [arg_2] [function_1]	count=1
function	a new formatter that ||| new	count=1
arg	all_hash ||| all_hash	count=1
module	file s ||| fileutils	count=1
arg	args to ||| args	count=1
function	[function_1] profile data ||| [function_2] [function_1]	count=4
function	if the named ||| ?	count=1
module	file exists ||| file	count=1
function	pop3s connections port 995 ||| pop3s port	count=1
module	ensures ||| security policy	count=1
arg	uses each [arg] matching values ||| [arg]	count=1
module	buffer string ||| stringio	count=1
function	returns true if ||| bool superset ?	count=1
function	the length ||| doc	count=1
arg	host uri ||| uri	count=1
module	loads ||| gem security trustdir	count=1
function	[returnv_1] [function_2] ||| [returnv_1] matches [function_2]	count=1
module	removes ||| gem	count=1
arg	the ruby data structure ||| opts	count=1
function	all ip addresses ||| address	count=2
function	[function_1] default ||| [function_2] gems use full [function_1]	count=1
module	a rdoc :markup ||| rdoc ri driver	count=1
function	returns true if ||| bool mountpoint ?	count=1
module	the objectid as defined ||| asn1 objectid	count=1
module	output through ||| driver	count=1
function	live in ||| gen sub	count=1
function	true [function_2] ||| [returnv_1] satisfied by [function_2]	count=1
arg	of subject [arg_2] ||| [arg_2] [arg_1]	count=1
function	status of ||| status	count=2
function	been provided or that ||| setup	count=1
arg	modifies the comment ||| context comment	count=1
module	of ||| sslsocket	count=1
module	gem for ||| gem	count=3
module	smtps [module] over direct ||| [module]	count=1
function	tokens ||| tokens	count=1
function	the files on ||| files	count=1
function	an ||| to name	count=1
module	this toplevel from ||| rdoc toplevel	count=1
function	:context#irb_name ||| suspend name	count=1
arg	prompt [arg_2] ||| [arg_2] [arg_1]	count=1
function	extra args ||| extra args	count=2
module	image called ||| photoimage	count=1
arg	[arg] are ||| [arg]	count=1
function	the query ||| query=	count=1
module	if stat is a ||| stat	count=1
module	the tuplebag ||| rinda tuplebag	count=2
function	array of [function_2] ||| [function_2] [returnv_1]	count=1
module	command with the ||| command	count=1
function	[returnv_1] if ||| [returnv_1] zero [function_2]	count=2
function	of heading to create ||| heading	count=1
returnv	lines [returnv] ||| [returnv]	count=3
module	is initialized when ||| syslog	count=1
module	both time ||| time	count=1
function	included in mod ||| include	count=1
module	visitor for ||| markup tohtml	count=2
module	a new [module] the ||| [module]	count=1
module	mailbox ||| imap	count=1
arg	specified [arg] and returns ||| [arg]	count=1
module	the [module] document source ||| [module]	count=2
function	owner of ||| grpowned	count=1
function	the dependency and ||| dependency	count=1
module	to the [module] returns ||| [module]	count=1
function	:sslcertificate and ||| setup	count=1
module	:redo :retry :next ||| localjumperror	count=1
function	name associated ||| name	count=1
arg	[arg_1] requirements ||| [arg_2] [arg_1]	count=1
function	a server in non-blocking ||| accept nonblock	count=1
arg	tags for an ||| name start stop	count=1
function	extends ||| extends	count=1
function	a prerelease? ||| prerelease ?	count=1
module	creates ||| in a	count=1
function	[function] key ||| [function]	count=2
arg	[arg_1] and base_notifier ||| [arg_2] [arg_1]	count=3
function	place ||| !	count=1
function	files in ||| files	count=1
module	out [module] is ||| [module]	count=1
module	database contains the ||| dbm	count=1
arg	a temporary [arg_2] ||| [arg_2] [arg_1]	count=2
function	creates [function_1] [function_2] for the network address ||| ipaddr [function_1] [function_2]	count=1
function	returns an empty ||| to a	count=2
function_arg	[function_1] [arg_2] to ||| [function_1] [arg_2]	count=4
function	the issuer certificate of ||| issuer of	count=1
module	response ||| net smtp response	count=4
function	[function_1] and modules ||| [function_1] [function_2]	count=1
function	directory path to be ||| dir	count=1
function	object and returns ||| to	count=2
function	default gems ||| default	count=1
function	for the opaque ||| opaque=	count=1
arg	value ||| value anchor tag plain quoted	count=1
arg	at filename ||| filename	count=1
module	and ||| stats	count=1
arg	file if [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] for ||| [arg_2] [function_1]	count=8
arg	options and [arg_2] ||| [arg_1] [arg_2]	count=2
function	look for [function_2] ||| [function_1] [function_2]	count=5
module	isn’t available ||| thread	count=1
module	have redundancies removed ||| gem specification	count=1
module	its ||| complex	count=1
function	in the system satisfy ||| installation satisfies	count=1
arg	the value ||| header value	count=1
arg	a validation status ||| status	count=1
function	permissions of ||| permissions	count=1
function	auth plain ||| plain auth	count=2
arg	and a comment to ||| comment	count=1
function	[function_1] method ||| [function_1] [function_2]	count=19
module	with hax todo ||| testcase	count=1
module	alias of a ||| alias	count=1
arg	the given calendar date ||| year month mday	count=1
arg	from certificate [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] names from ||| [function_2] [function_1]	count=3
function	from ||| tomdoc	count=1
function	array [function_2] ||| sdbm [returnv_1] [function_2]	count=3
function	compare ||| compare	count=2
function	reverses ||| reverse	count=2
arg	the text ||| text	count=1
function	flush ||| flush	count=1
arg	the given time ||| time	count=1
arg	obj is an ||| obj	count=2
module	vendor ||| vendor	count=1
module	the [module] ||| [module] resolver	count=1
function	the remote ||| drburi	count=1
function	when [function] as ||| [function]	count=1
arg	passes ||| &block;	count=1
function	discarded [function_2] ||| [function_1] [function_2]	count=1
module	block ||| gem requestset gemdependencyapi	count=2
arg	for time and ||| time	count=1
module	the ||| profiler__	count=1
module	the request ||| webrick httprequest	count=1
arg	name version ||| name version	count=2
arg	transfers localfile to the ||| localfile remotefile	count=1
function	will wait [function] but ||| [function]	count=1
arg	if pid is positive ||| pid	count=1
function	[returnv_1] [function_2] ||| [returnv_1] [function_2] ? symbol	count=3
function	containing [function] elements of ||| [function]	count=1
module	the permutation ||| lupdecomposition	count=1
function	its der encoding ||| to der	count=2
function	domain if [function_2] ||| [function_2] [function_1]	count=16
arg	from comment by looking ||| container tk	count=1
function	if type is “xhtml” ||| have xml content ?	count=1
arg	[arg_1] in string ||| [arg_2] [arg_1]	count=2
arg	[arg_1] dir and ||| [arg_2] [arg_1]	count=5
module	progress ||| resolver molinillo ui	count=1
module	the last ||| gzipreader	count=1
function	file pipe socket etc ||| file	count=1
module	array with elements of ||| array	count=1
module	new [module] with the ||| [module]	count=1
arg	adds the reference ||| ref	count=1
module	:sslprivatekey have been ||| drbsslsocket sslconfig	count=1
function	an ||| a	count=4
function	[returnv_1] [function_2] the ||| [returnv_1] [function_2]	count=51
module	constructs ||| version	count=1
function	and the [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] names ||| [function_1] [function_2]	count=3
module	that :sslcertificate and ||| drbsslsocket	count=1
function	record used by ||| record	count=2
module	adds tts from ||| markup tottonly	count=1
module	todo deprecate ||| testcase	count=1
arg	string into ||| string	count=2
function	name for a child ||| child	count=1
function	if they don’t ||| gen sub	count=1
returnv	all elements of ary ||| ary	count=1
module	process :status ||| process	count=3
arg	[arg_1] #auth_type of ||| [arg_1] [arg_2]	count=1
module	expected [module] ||| [module]	count=2
function	returns true [function_2] ||| [returnv_1] saturday [function_2]	count=1
returnv	value as a rational ||| rational	count=1
function_arg	instance [arg_2] ||| [arg_2] [function_1]	count=1
module	simplerenewer ||| simplerenewer	count=1
arg	real time and label ||| real	count=1
module	token ||| racc parser	count=1
function_arg	[function_1] path ||| fileutils [function_1] [arg_2]	count=2
function	the default value ||| default	count=3
function	html form data ||| form	count=1
module	user can ||| makemakefile	count=1
function	deprecate and ||| create	count=1
function	finds all ||| find all	count=3
function_arg	the status [arg_2] ||| [function_1] [arg_2]	count=1
module	visitor for html ||| tohtml	count=1
module	are both time objects ||| time	count=1
function	and label list ||| list	count=1
function	public instance methods ||| public instance methods	count=3
arg	is made to an ||| sym	count=1
function	returns false if ||| ?	count=2
function	valid [function_2] ||| [function_2] [function_1]	count=6
function	data as ||| data	count=1
function	mkcol request ||| mkcol	count=1
arg	in the file path ||| path	count=1
module	length and number of ||| stats	count=1
arg	options and stats in ||| options stats	count=1
function	parses ||| parse	count=19
module	object ||| basicsocket	count=1
function	tomdoc format ||| tomdoc	count=1
arg	start and end ||| start	count=1
function_arg	define [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	[returnv_1] if ||| [returnv_1] utc [function_2]	count=1
module	encodes this dh to ||| openssl pkey dh	count=2
function_arg	if [arg_2] ||| [arg_2] [function_1]	count=47
module	to ||| mutex	count=1
module	from the ||| gem version	count=1
function	[returnv_1] [function_2] ||| [returnv_1] coredump [function_2]	count=4
function_arg	for [arg_2] ||| [function_1] [arg_2]	count=9
arg	safe - boolean add ||| safe add	count=1
function	helper method to add ||| add	count=1
function	returns true if ||| bool utc ?	count=1
arg	types ||| types func	count=1
module	first ||| logger	count=1
function	docs ||| gen sub	count=1
arg	permissions ||| permissions	count=1
function_arg	the methods [arg_2] ||| [function_1] [arg_2]	count=2
module	gem for this ||| gem specification	count=1
function	html generation ||| start accepting	count=1
function	of the file ||| external	count=2
module	:sslprivatekey have been ||| drbsslsocket	count=1
function	instance variable names for ||| instance variables	count=1
returnv	returns ||| encoding	count=2
module	live in if they ||| generator darkfish	count=1
arg	user for [arg_2] ||| [arg_1] [arg_2]	count=3
arg	matches against ||| flags ) → (true or false	count=1
function	[function_1] [function_2] ||| [function_1] cram md5 [function_2]	count=1
rep	[module_1] for file ||| [module_1] [function_arg_2]	count=1
function	results from the profiler ||| print profile	count=1
module	they don’t already exist ||| rdoc generator	count=1
module	of the ||| drbobject	count=2
function	special ||| special	count=3
function	[returnv_1] [function_2] files may ||| [returnv_1] creatable [function_2]	count=1
function	that contains ||| result	count=1
function	+ ||| +	count=1
module	variable [module] class ||| [module]	count=1
function_arg	parameters in [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] http ||| [function_1] [arg_2]	count=2
arg	[arg_1] or fills ||| [arg_2] [arg_1]	count=1
function	[returnv_1] [function_2] {#graph} ||| [returnv_1] [function_2]	count=1
function	front object ||| front	count=1
function	[returnv_1] priority ||| [function_2] [returnv_1]	count=1
arg	includes other which may ||| other	count=1
arg	a comment to ||| comment	count=1
module	superclass ||| rdoc classmodule	count=1
function	output ||| setup output	count=1
function	constructor @param parent ||| new	count=1
module	with ||| gem testcase	count=2
arg	indented with indent spaces ||| indent	count=1
module	#max_nesting = ||| ext generator	count=1
function	all gem version ||| all gem names and	count=1
function	[function_1] with ||| [function_1] [function_2]	count=5
function	code object was defined ||| location	count=1
module	parent ||| rexml	count=1
module	have redundancies ||| gem specification	count=1
module	workspace see irb ||| irb	count=1
arg	start [arg_2] ||| [arg_1] [arg_2]	count=1
returnv	elements of self ||| ary	count=1
module	provided or that a ||| drbsslsocket sslconfig	count=1
function	generates the makefile for ||| create makefile	count=1
arg	with opt ||| opt	count=1
module	html snippet ||| rdoc markup tohtmlsnippet	count=1
function	extension modules ||| extend	count=1
function	in ||| gen sub	count=1
arg	realm [arg_2] ||| passwd [arg_1] user [arg_2]	count=1
function	instance variable named ||| instance variable	count=2
function	also [function] ||| [function]	count=3
function	look for the first ||| collect first	count=1
function_arg	assigns the [arg_2] ||| [arg_2] [function_1]	count=1
arg	data ||| data	count=15
module	the objectid as defined ||| openssl asn1 objectid	count=1
function	using a pager? ||| paging ?	count=1
function	instance of class klass [function_1] [function_2] klass ||| [function_2] with [function_1] klass	count=1
function	scans content ||| do singleton class	count=1
function	query as a hash ||| query	count=1
returnv	this [returnv] you ||| [returnv]	count=1
module	parser ||| markup parser	count=1
function	[function_1] all gem ||| [function_1] [function_2]	count=2
module	empty string ||| string	count=1
function	array containing [function] elements ||| [function]	count=1
arg	given dependency ||| dependency	count=1
module	and creates an rdoc ||| rdoc parser ruby	count=1
arg	elements in ||| elements	count=1
function	returns true if ||| bool setuid ?	count=2
module	output through ||| rdoc ri driver	count=1
module	from [module] and returns ||| [module]	count=1
module	the parsing of ||| rdoc stats	count=6
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] self_hash	count=20
module	rdoc :attr for the ||| rdoc	count=1
function_arg	compares this version [function_1] [arg_2] to the http specification ||| [function_1] [arg_2]	count=1
function_arg	[function_1] symbol to ||| [function_1] [arg_2]	count=1
module	is an element or ||| rexml	count=1
function	absolute ||| expand	count=1
module	password ||| webrick httpauth htpasswd	count=2
function	to public ||| public	count=1
module	only a toplevel that ||| rdoc toplevel	count=1
arg	string according ||| string 1 jan -4712 00:00:00 +0000' start	count=2
arg	- integer safe ||| safe	count=1
module	to prevent conversion to ||| markup	count=1
returnv	[returnv] there ||| [returnv]	count=3
function	[function_1] rounding mode ||| [function_1] [function_2]	count=2
module	numbers ||| trialdivision	count=1
function	[function_1] [function_2] of ||| [function_2] [function_1]	count=18
function_arg	request to [arg_2] ||| [function_1] post [arg_2]	count=1
arg	a subclass of ||| subclass	count=1
module	uri has a ||| uri generic	count=1
function_arg	symlink name ||| symlink name	count=1
arg	[arg] @return ||| [arg]	count=3
module	this dsa instance ||| openssl pkey dsa	count=1
arg	on stderr ||| statement question	count=1
function	in if they don’t ||| sub	count=1
arg	of the ||| x	count=1
function_arg	[function_1] dependency ||| [arg_2] [function_1]	count=5
arg	command [arg_2] ||| [arg_2] [arg_1]	count=4
module	string calling to_s), converts ||| ext generator generatormethods	count=1
function	enable capture of ||| start doc	count=1
function	returns true [function_2] ||| [returnv_1] header row [function_2]	count=8
module	html ||| rdoc markup	count=2
returnv	floating point ||| float	count=2
module	pointer otherwise returns ||| fiddle pointer	count=1
arg	an index ||| index	count=1
function	file_name is [function] others ||| world [function]	count=2
function	the host ||| host	count=2
arg	spec to [arg_2] ||| [arg_1] path [arg_2]	count=3
arg	[arg_1] [arg_2] ||| [arg_1] methods [arg_2]	count=5
module	no arguments sets ||| module	count=1
module	so that ||| specification	count=1
module	union ||| fiddle cunionentity	count=2
function	[function_1] stream ||| [function_1] [function_2]	count=3
arg	those of the other ||| other	count=1
function	gem names from the ||| gem names	count=1
module	:name ||| gem security	count=2
module	the ||| module	count=3
function	true [function_2] ||| [returnv_1] installed [function_2]	count=2
function	a thread-local ||| thread	count=1
arg	user to answer question ||| question	count=1
function	the makefile ||| create makefile	count=1
module	class class << ||| rdoc	count=1
module	to be called ||| streamlistener	count=1
function	the standard configuration object ||| configuration	count=1
function	the arguments ||| args	count=1
arg	implicit start [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	filter unwanted ||| filter p	count=1
rep	a yaml [function_arg_2] ||| [module_1] [function_arg_2]	count=8
module	a gem ||| gem	count=1
module	the [module] to ||| [module]	count=10
function	set the platform to ||| util set	count=1
module	of [module] with ||| [module]	count=1
arg	y and x ||| y x	count=2
function	list of ||| file list	count=1
function	[returnv_1] if the ||| [returnv_1] zero [function_2]	count=1
function	cpu of ‘universal’, they ||| ===	count=1
arg	and ||| age extensions serial	count=2
function	all gem ||| all gem names and versions	count=1
arg	string source ||| source	count=1
module	a single string ||| rd blockparser	count=1
arg	[arg_1] a comment ||| [arg_1] [arg_2]	count=7
module	in if they don’t ||| rdoc generator darkfish	count=1
module	use with analysis and ||| basicspecification	count=1
function	yes or ||| yes	count=1
function	returns true if ||| bool include ?	count=1
function	changes asynchronous interrupt ||| interrupt	count=1
function	a version from ||| new	count=1
function	if nan infinity and ||| ?	count=1
module	raw ||| rdoc markup raw	count=1
module	for restricting gems to ||| gemdependencyapi	count=1
module	availableset as a search ||| gem availableset	count=1
module	a range ||| range	count=1
module	other parameters ||| drb drbsslsocket sslconfig	count=1
function	the option parser ||| version option	count=1
module	a [module] instead ||| [module]	count=1
module	cipher ||| cipher	count=1
module	@return edge the ||| resolver molinillo dependencygraph	count=1
module	object’s ||| markup	count=1
arg	the context of ||| context statements file line	count=1
function	of which this ||| element=	count=1
module	will this response ||| webrick httpresponse	count=1
function	returns the priority ||| integer priority	count=2
arg	to the user user ||| user	count=1
module	rdoc :document ||| rdoc markdown	count=1
module	lists ||| specification	count=1
module	this node to ||| nodes node	count=1
returnv	string of the pattern ||| string	count=1
module	that contains the file ||| gem	count=1
arg	receives up to ||| flags	count=2
arg	element ||| element	count=6
function	instance method ||| instance method	count=4
function	extensions ||| set extensions	count=1
function	if stat generated a ||| ?	count=1
arg	item ||| item	count=2
arg	file_name content options ||| file_name content options	count=3
module	it isn’t ||| thread mutex	count=1
module	to a set ||| gem requestset	count=1
module	calling [module] will suspend ||| [module]	count=1
module	the server ||| server	count=2
module	object instead of self ||| toplevel	count=1
function_arg	ensure [arg_2] ||| [arg_2] [function_1]	count=2
module	the job at ||| irb jobmanager	count=1
arg	[arg_1] standalone ||| [arg_1] [arg_2]	count=2
module	response received ||| smtp response	count=2
function	append ||| append	count=1
module	state ||| gem testcase	count=1
arg	[arg] to the ||| [arg]	count=4
arg	method [arg_2] ||| [arg_2] [arg_1]	count=2
module	inline text ||| rdoc rd inlineparser	count=1
arg	returns true [arg] ||| [arg]	count=1
module	an ||| rexml elements	count=1
module	returns the http status ||| webrick httpstatus status	count=1
arg	indicated mailbox ||| mailbox attr	count=2
function	and false if ||| civil ?	count=1
arg	the context ||| context	count=1
arg	the specified ||| digits	count=2
arg	patterns or a ||| flags	count=1
arg	given port and accepts ||| port	count=1
module	openstruct object ||| openstruct	count=1
function_arg	adds aproc as [function_1] [arg_2] ||| [function_1] [arg_2] aproc	count=2
arg	to maxlen bytes from ||| maxlen flags outbuf	count=2
function	@param parent if ||| new	count=1
function	of break ||| break	count=1
module	size of [module] ||| [module]	count=2
function	and :sslprivatekey have been ||| setup	count=1
module	todo deprecate and remove ||| gem	count=1
function	and escapes ||| escape	count=1
function	column type token] ||| lex	count=1
function	the class with ||| class named from	count=2
module	initialized when ||| logger	count=1
module	request ||| net http	count=3
arg	comment by looking for ||| container	count=1
function	of the row vectors ||| row vectors	count=1
module	:ldap object from ||| ldap	count=1
module	hsh whose key ||| hash	count=1
module	instead of ||| rdoc toplevel	count=1
function	[returnv_1] a new ||| gem source specificfile [returnv_1] [function_2]	count=1
returnv	hash-code for this ||| fixnum	count=1
function	[function_1] names from ||| [function_1] [function_2]	count=3
function	but at head ||| head	count=2
function	unconverted_fields() to ||| unconverted fields	count=1
arg	with body text ||| text	count=1
function	[function_1] line ||| [function_1] [function_2]	count=2
module	tokenizes ||| ripper	count=1
function	the accept character ||| accept	count=1
arg	v at ||| v	count=1
module	match this platform? ||| gem platform	count=1
arg	to host [arg_2] ||| [arg_1] [arg_2]	count=2
arg	with name and ||| name	count=2
module	onto [module] such ||| [module]	count=3
module	markdown parser ||| rdoc markdown	count=1
function	[function] of ||| full [function]	count=2
function	the value as a ||| to f	count=1
returnv	== [returnv] only ||| [returnv]	count=1
function	adds the [function_2] ||| [function_2] [function_1]	count=9
function	the exit [function] child for ||| [function]	count=1
module	interface index of ifaddr ||| socket ifaddr	count=1
function_arg	[function_1] [arg_2] the proper subdirectories for ||| [function_1] subdirectories [arg_2]	count=2
module	contains [module] ||| [module]	count=1
function	remote address obtained ||| remote address	count=2
module	generated ||| generator darkfish	count=2
arg	to new_timeout ||| new_timeout	count=1
arg	default ||| default	count=2
function_arg	[function_1] and other_time ||| [arg_2] [function_1]	count=2
arg	out_stream for size ||| out_stream size initial_message terminal_message	count=1
arg	attribute ||| attribute	count=1
module	redundancies removed ||| gem	count=1
module	internal [module] subset ||| [module]	count=1
function	accept_list_start_lalpha ||| list start lalpha	count=1
returnv	fixnum ||| fixnum	count=1
module	index ||| gem indexer	count=1
function	that ||| config	count=1
function	rewinds to ||| rewind	count=1
function	sends a copy request ||| copy	count=1
function	a socks connection to ||| new	count=1
function	creates a self-signed certificate ||| cert self signed	count=1
arg	by symbol from the ||| symbol	count=1
module	the visitor for html ||| rdoc	count=1
arg	associated with io ||| io level strategy	count=1
function	check is [function_2] ||| [function_2] number [function_1]	count=1
function_arg	scope [arg_2] ||| [function_1] [arg_2]	count=2
arg	[arg] empty ||| [arg]	count=2
function	[function_1] node ||| [function_1] [function_2]	count=4
function	[function_1] row ||| [function_2] [function_1]	count=12
module	date/time which represents self ||| xmlrpc datetime	count=1
module	resolver object ||| gem resolver	count=1
module	html ||| methodattr	count=1
arg	connected to host port ||| host port	count=1
function	used to execute ||| realtime	count=1
function	latest ||| specific	count=1
arg	will display on out_stream ||| out_stream	count=1
module	using the [module] :installer ||| [module] resolver	count=1
function	a post ||| post	count=1
module	of the ||| zlib gzipreader	count=1
function	returns the encoding object ||| external	count=2
module	this edge represents @return ||| resolver molinillo dependencygraph	count=1
module	class name [module] ||| [module]	count=6
arg	request into ||| request	count=1
function	server advertises auth login ||| capable login auth	count=1
module	and waits ||| thread mutex	count=1
function	size of [function_2] ||| [function_2] [function_1]	count=3
returnv	object that represents ||| encoding	count=2
function	[function_1] authentication ||| [function_2] [function_1]	count=4
arg	str where [arg] ||| [arg]	count=3
arg	amount of ||| msg width display	count=1
module	the connection is established ||| openssl ssl sslsocket	count=1
arg	this special is ||| special	count=1
module	name and ||| openssl x509 name	count=1
returnv	been reached [returnv] ||| [returnv]	count=2
module	resolver ||| resolver	count=3
function_arg	[function_1] named symbol ||| [arg_2] [function_1]	count=4
function	[function_1] [function_2] containing the ip address ||| [function_1] [function_2]	count=1
module	this ||| gem resolver	count=2
arg	arguments ||| args	count=7
arg	[arg] certificate ||| [arg] cert_chain	count=1
module	spec for documentation ||| rdoc rubygemshook	count=1
function	list of ||| module list	count=1
function	encoding ||| encoding	count=9
function	:http#read_timeout and net ||| timeout=	count=1
function	the logger output debug ||| debug	count=1
function	[function_1] the files ||| [function_2] [function_1]	count=1
function	using that name ||| dir config	count=1
function	describing [function] ||| [function] delta	count=1
module	the [module] for ||| [module]	count=2
module	a private ||| openssl pkey	count=1
module	socket bound ||| addrinfo	count=1
arg	a pattern ||| pattern flags	count=1
arg	sequence with anchor ||| anchor	count=1
module	of this ||| resolver	count=2
arg	status to the status ||| status	count=1
function	reference ||| drbref	count=1
module	tuples ||| rinda tuplespace	count=1
module	specifications ||| molinillo specificationprovider	count=2
module	software ||| commands updatecommand	count=1
function	a serialized ||| marshal	count=1
arg	date-time object denoting ||| hour minute second offset	count=2
arg	specified ||| digits	count=3
function_arg	underlying [arg_2] ||| integer [function_1] [arg_2]	count=2
module	creates a single-row matrix ||| matrix	count=1
module	parser to ||| rdoc parser	count=1
module	loads ||| rdoc store	count=1
function	set the names ||| names	count=1
arg	prefix to send ||| level prefix	count=1
function_arg	[function_1] meta-programmed attribute ||| [function_1] [arg_2]	count=1
arg	permissions mode ||| mode	count=1
function	rdoc [function] ||| [function]	count=1
function_arg	equality — at [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	each attribute listed after ||| attr accessor	count=1
module	that a ||| drb	count=1
module	runs this list and ||| rdoc markup list	count=1
arg	given an array methods ||| methods	count=1
returnv	returns the encoding ||| encoding	count=2
function	loads [function_2] ||| parser c [function_1] [function_2]	count=4
function	[function_1] mode ||| [function_2] [function_1]	count=8
function	status of the ||| status	count=2
module	checks that cert ||| openssl x509 request	count=1
function	the case-insensitive flag ||| casefold ?	count=1
function	get a [function_2] ||| [function_1] [function_2]	count=9
arg	for the #auth_type ||| reload_db	count=1
rep	a [module_1] [function_arg_2] ||| [module_1] bool has [function_arg_2]	count=3
module	a pop3 session and ||| pop3	count=1
module	the digest ||| digest	count=1
module	enumerates the ||| rdoc servlet	count=1
function	been turned off by ||| start	count=1
module	returns the ||| module	count=1
module	[module] if other ||| gem [module]	count=1
module	look ||| parser c	count=1
module	documentation unless documentation ||| rdoc codeobject	count=1
function	the given representation ||| strptime	count=1
arg	the timeout is over ||| timeout	count=1
function	that ||| dir config	count=1
arg	key and ||| key	count=1
function	checkbox input ||| checkbox	count=1
arg	hostnames for address ||| address	count=1
function	and adds the #page_dir ||| page dir	count=1
module	this singleton ||| rdoc	count=1
function	currently in the ||| root	count=1
function	is [function_2] ||| [function_2] [function_1]	count=39
arg	the prompt [arg_2] ||| [arg_1] [arg_2]	count=1
module	the [module] used by ||| gem [module]	count=1
module	current [module] is ||| [module]	count=1
function_arg	[function_1] given key ||| [arg_2] [function_1]	count=3
function	[function_1] certificate with ||| [function_2] [function_1]	count=6
arg	+@fetcher+ serving the ||| repo	count=1
function	a list of ||| normalized file list	count=1
module	prepares the [module] ||| [module]	count=1
arg	other are ||| other	count=1
function	skip ||| skip	count=1
module	returns a drb ||| drb	count=1
returnv	returns the session ||| integer	count=1
module	a new array that ||| array	count=1
function	the value as ||| value	count=1
function_arg	[function_1] [arg_2] and returns self ||| array ary [function_1] [arg_2]	count=6
module	this singleton ||| singleclass	count=1
function	pem encoding ||| export	count=1
function	and ||| get file and	count=1
function	will be set as ||| new	count=1
module	the location ||| installer	count=1
module	lock source that wraps ||| source lock	count=1
function	[returnv_1] object) ||| [returnv_1] [function_2]	count=3
module	the setacl [module] ||| [module]	count=3
module	in [module] that ||| [module]	count=1
module	so that all ||| gem	count=1
function	the #page_dir ||| page dir	count=1
arg	object req to ||| req	count=1
function	-infinity should be ||| ascii only	count=1
function	of undocumented ||| stats	count=1
function	[function_1] rescue ||| [function_1] [function_2]	count=1
function	a constant with ||| const	count=1
arg	associated [arg] ||| [arg]	count=1
function	openssl :x509 :name ||| to	count=1
function	[function_1] extra ||| [function_2] [function_1]	count=4
module	match [module] if other ||| gem [module]	count=1
arg	given str ||| str enc separator:	count=1
function_arg	methods in [arg_2] ||| [function_1] [arg_2]	count=4
arg	of type with items ||| type items	count=1
function	get request to the ||| get	count=1
function_arg	value of fix is [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	irb commands irb ||| commands	count=1
returnv	a rational which denotes ||| rational	count=1
function	sequence ends ||| end sequence	count=2
function	as [function_2] ||| [function_2] [function_1]	count=13
module	this ||| generator markup	count=1
module	constructs a version from ||| version	count=1
module	dir’s constructor ||| dir	count=1
function	big is [function] ||| [function]	count=2
function	consistency ||| consistency	count=1
function	creates a self-signed ||| self signed	count=2
arg	dest ||| dest options	count=1
module	an rdoc ||| rdoc parser ruby	count=4
module	for the password component ||| uri generic	count=1
arg	uri with configuration config ||| uri config	count=1
module	a examine [module] ||| [module]	count=3
returnv	a mask value for ||| priority_mask	count=1
arg	filename for its data ||| filename	count=1
module	paragraph ||| rdoc markup paragraph	count=1
function	html form data ||| form data	count=2
module	the number ||| openssl ssl sslsocket	count=1
module	that cert signature ||| x509 request	count=1
rep	field [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	only the bin/ files ||| bin	count=1
module	rdoc :generator :jsonindex ||| rdoc classmodule	count=1
function	object was defined ||| location	count=1
module	prepares the ||| rdoc	count=7
module	this hash ||| generator generatormethods hash	count=1
module	has been ||| rdoc codeobject	count=1
module	the given object thereby ||| object	count=1
function	use to ||| config	count=1
module	the visitor ||| tomarkdown	count=1
module	exit status ||| status	count=1
arg	retrieve data associated ||| set attr	count=1
module	live in if ||| darkfish	count=1
function	loads ri data for ||| load	count=2
function	if there is an ||| member ?	count=1
function	as default [function] see ||| bundled [function] ruby	count=1
function	gem ||| gem in	count=1
arg	a string according ||| string 1 jan -4712 00:00:00	count=2
arg	[arg_1] of ||| memberwise [arg_1] [arg_2]	count=1
function	a runtime dependency named ||| runtime dependency	count=1
function	for ipv6 unique ||| ipv6 unique	count=2
function	using ||| dir	count=1
function	[function_1] a singleton ||| [function_1] [function_2]	count=1
module	for classes modules ||| rdoc	count=1
module	properly-space list ||| rdoc	count=1
module	first digit ||| response	count=1
module	is initialized ||| syslog	count=1
arg	connects ||| address port helo user secret authtype	count=1
returnv	to ||| string	count=3
module	the status class corresponding ||| webrick httpstatus	count=1
function	[function] enumerator ||| [function]	count=1
arg	tag_name pair ||| tag_name	count=1
function	in the file ||| file	count=1
function	copies ||| copy	count=4
function	the marshal ||| marshal	count=1
function	version of ruby ||| ruby	count=2
arg	object o ||| o	count=1
function_arg	is name ||| ? name	count=1
module	in ||| generator darkfish	count=2
module	a ||| gem	count=3
function_arg	the [function_1] [arg_2] ||| [function_1] [arg_2]	count=50
module	types this parser ||| rdoc parser	count=1
function	retrieves the content ||| content	count=1
module	lazy ||| lazy	count=2
function	is rdoc documentation ||| ?	count=1
function	whitespace ||| whitespace	count=1
function_arg	thread to error ||| error= error	count=1
function	all ip ||| address	count=1
module	a new array containing ||| array	count=1
function	public ||| public ?	count=1
arg	out_stream for [arg_2] ||| [arg_2] [arg_1]	count=2
function	page [function_2] ||| [function_2] [function_1]	count=3
module	with openssl ||| openssl	count=1
arg	document from [arg] and ||| [arg]	count=1
function_arg	and from_version [function_1] [arg_2] dependencyrequest ||| [function_1] [arg_2]	count=3
module	descriptive fields in ||| specification	count=1
module	inspector object using the ||| inspector	count=1
function	required attribute? ||| required attribute	count=1
returnv	output buffer and returns ||| string	count=1
module	by cgi :session ||| cgi	count=1
module	array containing all elements ||| array	count=1
module	to pass ||| rdoc ri driver	count=1
function	while ||| while	count=1
function_arg	dependency [arg_2] ||| [function_1] dep from_name from_version [arg_2]	count=1
function	valid ip addresses ||| valid ip	count=2
arg	the element at count ||| count	count=1
arg	that match tuple ||| event tuple	count=1
module	and certificate chain is ||| gem security	count=1
function_arg	[function_1] length ||| [function_1] initial length= [arg_2]	count=1
module	the given ||| benchmark	count=1
module	path where gem ||| gem	count=1
function_arg	[function_1] spec ||| [function_1] [arg_2]	count=1
function	saves all entries ||| save	count=1
function_arg	[function_1] of hash ||| [function_1] [arg_2]	count=1
arg	in methods ||| methods	count=1
module	httpversion ||| webrick httpversion	count=1
module	of [module] ||| [module]	count=67
function	instance ||| pseudo toplevel	count=1
function	a pem encoded ||| pem	count=1
arg	the markdown document ||| markdown	count=1
arg	be returns arg ||| arg	count=2
module	hax ||| gem	count=1
function	returns the list of ||| name list	count=1
arg	[arg_1] date-time ||| [arg_2] [arg_1]	count=4
function	directory path ||| dir	count=1
arg	realm ||| realm	count=2
function	finds a ||| find attr	count=1
module	ri task with ||| ri task	count=1
module	xml-rpc server listening on ||| server	count=1
module	form for ||| requestset gemdependencyapi	count=1
function	be read again ||| readagain	count=1
arg	default [arg_2] ||| [arg_2] [arg_1]	count=4
arg	res for ||| req res	count=1
function	[function_1] [function_2] which was created by ||| proxy [function_2] [function_1]	count=4
function	false if not ||| civil ?	count=1
function	modules in this namespace ||| modules	count=1
module	emit ||| psych emitter	count=1
function	[returnv_1] [function_2] threads in the pool ||| [returnv_1] [function_2]	count=2
module	ftp session ||| net	count=1
function_arg	bits [arg_2] ||| [function_1] bits [arg_2]	count=3
function	finds [function_2] ||| [function_1] [function_2]	count=9
arg	id to ||| id	count=1
arg	to out_stream for size ||| out_stream size	count=1
function	namespace ||| prefix	count=1
function	method calls ||| method	count=1
module	attr with ||| attr	count=1
function	and adds the #page_dir ||| finish page dir	count=1
rep	for [function_arg_2] ||| [module_1] [function_arg_2]	count=3
module	@return ||| gem resolver molinillo	count=5
arg	::capture3 captures the standard ||| stdin_data: '' binmode: false opts	count=1
function	unique [function_2] ||| [function_2] [function_1]	count=8
function	[function_1] data ||| [function_2] [function_1]	count=13
arg	receives up to ||| flags outbuf opts	count=1
function	yes or no ||| yes no	count=3
module	reads a given ||| class	count=1
function	[returnv_1] if time ||| [returnv_1] dst [function_2]	count=1
function	an integer fixnum or ||| i	count=1
function	[returnv_1] a public ||| [returnv_1] [function_2]	count=1
function	of modules nested at ||| nesting	count=1
function	block once ||| if	count=1
module	block ||| benchmark	count=1
arg	for size items ||| size initial_message	count=1
module	to ||| rdoc	count=17
arg	[arg] with source ||| [arg]	count=3
function	proxy uri ||| proxy	count=1
arg	elements ||| elements	count=1
function	[returnv_1] the method ||| [returnv_1] allocation [function_2]	count=1
function_arg	evaluates [arg_2] ||| [arg_2] [function_1]	count=3
module	random ||| random	count=2
function	this to ignore ||| ignore	count=1
returnv	[returnv] similar ||| [returnv]	count=3
arg	[arg_1] [arg_2] ||| [arg_1] single tk [arg_2]	count=1
function	if unconverted_fields() ||| unconverted fields ?	count=2
function	the documented modules sorted ||| sorted module	count=1
function	[returnv_1] value arrays ||| [function_2] [returnv_1]	count=2
module	is [module] ||| [module]	count=4
function	a ||| platform	count=1
arg	buffer string ||| string	count=1
module	num has ||| numeric	count=1
module	list of generators ||| options	count=1
module	the ||| rdoc markup tottonly	count=4
function	is an alias ||| is alias	count=2
function	name from the ||| name	count=1
function	that ||| pid	count=1
arg	is equal to key ||| key	count=1
module	with hax ||| gem	count=1
module	ensures that ||| drbsslsocket	count=1
function	cache template [function_2] ||| [function_1] [function_2]	count=1
returnv	does ||| bool	count=2
function	event ||| off event	count=1
module	visitor ||| tohtml	count=2
module	:include ||| context	count=1
function_arg	[function_1] of n ||| [function_1] [arg_2]	count=8
function	since the ||| f	count=1
arg	numeric_address ||| reverse_lookup	count=2
module	:markup :document ||| rd blockparser	count=1
function	[function_1] stream ||| [function_2] [function_1]	count=3
arg	method ||| accessor method	count=1
rep	[module_1] [function_arg_2] ||| [module_1] emitter [function_arg_2]	count=8
function	options with on the ||| dir config	count=1
arg	with name with ||| name	count=1
arg	path of the ||| path	count=1
arg	at path ||| path	count=2
function	instance variables [function] hash ||| [function]	count=1
module	constructs ||| gem version	count=2
module	be set ||| rexml parent	count=1
function_arg	[function_1] tk ||| [arg_2] [function_1]	count=1
function	[function] containing ||| test accept [function]	count=2
function	components ||| component	count=1
arg	compressed data ||| level strategy	count=1
module	ringserver ||| ringserver	count=1
module	to pass output ||| rdoc	count=1
function	create a record ||| record	count=1
arg	construct ||| msg	count=2
module	the alias ||| alias	count=1
arg	new_name for the existing ||| new_name	count=1
function_arg	[function_1] [arg_2] from the tuple ||| rinda tupleentry [function_1] [arg_2]	count=2
function	and sets $? to ||| waitpid	count=1
function_arg	stream [arg_2] ||| [arg_2] [function_1]	count=6
function	public key ||| public	count=3
function	docs will ||| gen sub	count=1
module	the dependency graph? @return ||| gem resolver molinillo	count=1
arg	sequence of idx ||| idx	count=1
module	returns the length and ||| rdoc stats	count=1
arg	on server that serves ||| server	count=1
function	the form “nnnnnn ||| digits	count=1
arg	class klass cunion cstruct ||| klass	count=1
function	[returnv_1] if ||| [returnv_1] friday [function_2]	count=1
function	bytes ||| bytes	count=2
function	the ||| gen sub	count=2
function	the range ||| range	count=2
function	[function_1] the latter ||| [function_1] [function_2]	count=3
module	for ||| rdoc generator markup	count=1
module	the response header ||| webrick httpresponse	count=2
function_arg	finishes consumption [arg_2] ||| [arg_2] [function_1]	count=5
arg	a [arg_2] ||| dir matches glob [arg_2] [arg_1]	count=1
module	the session object ||| openssl ssl session	count=1
module	to pass output ||| ri	count=1
arg	set of tags ||| start stop	count=1
function	and label list ||| list item start	count=1
function	siginfo [function_2] ||| [function_2] [function_1]	count=4
function	resolution ends either successfully ||| resolution	count=1
function	parse a raw ||| parse	count=1
module	docs will live in ||| rdoc generator darkfish	count=1
module	about the parser to ||| rdoc parser	count=1
function	some html [function] ‘&’, ‘“’, ||| html [function]	count=1
function	directories create a list ||| normalized file list	count=1
function_arg	uri [arg_2] ||| [arg_2] [function_1]	count=3
function	collection by result of ||| by	count=1
function_arg	[function_1] val ||| [arg_2] [function_1]	count=15
function	arguments ||| arguments	count=1
arg	for consuming list_item ||| list_item	count=4
module	the list of files ||| gem	count=1
function	insert text into ||| insert text	count=1
module	gem into ||| gem	count=2
arg	answer question with ||| question	count=1
module	inputs ||| zlib inflate	count=1
module	of [module] equals ||| [module]	count=1
returnv	is given [returnv] ||| [returnv]	count=3
module	subsequently ||| module	count=1
function	auth [function_2] ||| [function_2] [function_1]	count=6
function_arg	[function_1] path ||| [arg_2] [function_1]	count=36
module	generators ||| rdoc options	count=2
function	[function_1] template in ||| [function_1] [function_2]	count=2
function	builds a heading from ||| build	count=1
module	gem couldn’t ||| gem	count=1
function	if this [function_2] ||| [function_2] row [function_1]	count=2
function_arg	[function_1] message to ||| [function_1] mailbox [arg_2]	count=3
function	adds ||| add extension	count=1
arg	or fills ||| page klass	count=1
module	specify ||| zlib gzipwriter	count=1
module	domain name ||| resolv dns name	count=1
module	encoding object ||| stringio	count=1
function	which represents the version ||| version	count=1
module	source for a ||| source	count=1
arg	command line ||| argv	count=1
function	id ||| inspect key	count=1
arg	req on ||| req	count=2
function_arg	deserializes [function_1] [arg_2] v serialized by to_json ||| [function_1] [arg_2]	count=2
module	:sslcertificate and :sslprivatekey ||| drbsslsocket	count=1
function	remove [function_2] ||| [function_1] [function_2]	count=1
arg	seed to ||| seed	count=1
function	the rdoc [function_2] ||| [function_2] [function_1]	count=4
arg	mod in [arg_2] ||| [arg_2] [arg_1]	count=4
arg	an ||| default	count=1
function_arg	[function_1] members ||| [arg_2] [function_1]	count=2
function	the expanded representations) ||| s	count=1
function	full names ||| names	count=1
function	[function_1] found ||| [function_2] [function_1]	count=1
module	to pass output ||| driver	count=1
function	list satisfied? ||| ok	count=1
function	the documented modules sorted ||| sorted	count=1
arg	host port [arg_2] ||| [arg_1] [arg_2]	count=1
module	list of ||| gem specification	count=1
function	and deletes ||| delete	count=1
module	thread has [module] ||| [module]	count=6
module	corresponding ||| httpstatus	count=2
module	the ||| rdoc	count=12
arg	level and type of ||| level type	count=1
function	subtype ||| subtype	count=2
arg	[arg_1] file1 ||| [arg_2] [arg_1]	count=2
rep	[module_1] [function_arg_2] ||| [module_1] parser build [function_arg_2]	count=1
function	method ||| add method	count=1
function	it onto ||| push	count=1
module	a list ||| ri driver	count=1
function	contains the file matching ||| find	count=2
function	accept_list_end_lalpha ||| list end lalpha	count=1
function_arg	to append [arg_2] ||| [function_1] mailbox [arg_2]	count=3
function	of instance [function_2] ||| [function_1] [function_2]	count=3
function	[function] most recent ||| matched [function]	count=2
function	[function_1] [function_2] ||| monitormixin conditionvariable [function_1] [function_2]	count=8
module	when ||| syslog	count=1
function	[function_1] body ||| [function_2] [function_1]	count=3
module	an ssl/tls handshake ||| openssl ssl sslsocket	count=1
module	class class << myclassname ||| rdoc	count=1
module	in its time zone ||| time	count=1
function	returns symbol ||| symbol	count=1
module	environment variable was ||| gem	count=1
function_arg	size [arg_2] ||| [function_1] [arg_2]	count=3
function	rdoc-schemed ||| handle special rdoclink	count=1
arg	[arg] provided ||| [arg]	count=1
function	[function] based on ||| [function]	count=2
module	and :sslprivatekey ||| drb drbsslsocket	count=1
function	adds classes and ||| classes	count=1
function	[function] requests ||| others [function]	count=3
function	[function_1] spec and ||| [function_2] [function_1]	count=1
function	[function_1] the buffer ||| [function_2] [function_1]	count=4
function	which ||| inspect	count=1
module	of files so that ||| specification	count=1
module	this edge represents @return ||| resolver molinillo	count=1
module	tempfile ||| tempfile	count=1
rep	[module_1] [function_arg_2] ||| [module_1] unescape [function_arg_2]	count=1
module	json string i ||| json	count=1
function	[returnv_1] if ||| [returnv_1] renamable [function_2]	count=1
arg	size ||| size initial_message	count=1
function	next [function_2] ||| [function_2] [function_1]	count=5
arg	[arg_1] salt - ||| [arg_2] [arg_1]	count=2
arg	tk setting the comment ||| single tk	count=1
arg	expiry time sec ||| sec	count=1
arg	file named file to ||| file	count=2
function	type of the ||| type	count=1
arg	tags for ||| start stop	count=1
function	transparent if ||| set transparency	count=1
arg	transfers localfile to ||| localfile remotefile	count=1
function	returns true if ||| bool friday ?	count=1
function	look ||| look	count=1
function_arg	workspace to [arg_2] ||| [function_1] [arg_2]	count=1
function	list of members ||| members	count=1
arg	deprecates [arg] by ||| [arg] repl year	count=1
function_arg	[function_1] value ||| [function_1] [arg_2]	count=3
module	command line ||| makemakefile	count=1
arg	[arg] is ||| [arg]	count=6
function	the basic list ||| basic word	count=1
function	exit value associated with ||| exit value	count=1
module	marks up ||| rdoc	count=2
module	[module] and ||| [module]	count=3
module	to the table of ||| rdoc markup totableofcontents	count=1
function	as a string ||| to	count=1
function	the hex-encoded hash ||| hexdigest	count=1
function	status [function_2] ||| [function_2] [function_1]	count=2
function_arg	no [arg_2] ||| [function_1] [arg_2]	count=1
function	gems that have ||| gems	count=1
function	sets a ||| config	count=1
returnv	the string ||| string	count=2
function_arg	[function_1] mesg ||| [arg_2] [function_1]	count=2
arg	private key to ||| key	count=1
module	generated json #max_nesting ||| json ext	count=1
arg	proc or [arg_2] ||| [arg_2] [arg_1]	count=2
module	be set as the ||| rexml	count=1
function_arg	[function_1] parent ||| [function_1] dep from_name from_version [arg_2]	count=4
arg	for user ||| user	count=3
function	[function] called ||| [function]	count=3
module	summary ||| optionparser	count=5
arg	symbol to the ||| symbol obj	count=1
function	merges the elements ||| merge	count=1
function	session attempts authentication and ||| auth only	count=1
arg	other following ||| other	count=1
module	argument is ‘number’ or ||| net imap numvalidator	count=1
function	iterates over the ||| each	count=1
function_arg	scalar with [arg_2] ||| [function_1] tag [arg_2]	count=2
function	completely closed ||| closed	count=1
function	add to ||| add	count=1
arg	net :http#open_timeout to new_timeout ||| new_timeout	count=1
function	instance [function] key from ||| [function]	count=1
function_arg	loads ri [arg_2] ||| [function_1] [arg_2]	count=1
module	by webrick ||| webrick	count=1
arg	list and ||| list	count=1
module	of ||| ssl	count=1
arg	matching name ||| name	count=1
arg	supplied uri and tag_name ||| uri tag_name	count=1
function	the singleton ||| singleton	count=1
function_arg	power [arg_2] ||| [arg_2] [function_1]	count=3
arg	signer_cert and ||| signer_cert	count=1
function	server loop on ||| server loop on	count=3
function	switch the ||| switch	count=1
function	encoding for ||| encoding	count=2
arg	new options ||| dest options	count=1
function	sets the net :http#read_timeout ||| timeout=	count=1
function	in a name_with_underscores or ||| class	count=1
function_arg	[function_1] file_name doesn’t ||| [arg_2] [function_1]	count=2
module	immediately available for ||| openssl	count=1
function_arg	[function_1] [arg_2] ||| sourcelist bool [function_1] [arg_2]	count=6
module	representation for this integer ||| generator generatormethods	count=1
function	the generated ||| sub	count=1
module	the status ||| webrick	count=1
arg	and mode ||| mode	count=1
module	entry in po format ||| rdoc generator pot poentry	count=1
module	if the [module] ||| [module]	count=6
function	spec directory path to ||| spec cache dir	count=1
function	auth cram-md5 ||| cram md5 auth	count=2
function	special for links of ||| special	count=2
module	enumerable ||| enumerable	count=1
module	prepares ||| tottonly	count=1
module	composedset ||| resolver composedset	count=1
arg	in data ||| data options	count=1
module	if ||| drb drbobject	count=1
function	development ||| development	count=2
arg	activated ||| activated	count=1
function	accept ||| accept	count=5
function	body from html form ||| form	count=1
function	yaml files ||| from yaml	count=2
function	dir ||| dir	count=3
module	object ||| drb drbobject	count=3
arg	subclass of ||| subclass	count=1
function	finds the class with ||| find class named	count=1
module	if notifications are enabled ||| irb notifier abstractnotifier	count=1
function	is rdoc [function_2] ||| [function_2] [function_1]	count=2
function	attribute ||| attr	count=1
module	normalizes ||| rdoc comment	count=1
module	openssl :digest ||| openssl	count=1
function	to set irb_name ||| n jobs	count=1
function	server ||| server	count=1
function	calls the constructed ||| call	count=1
module	[module] :heading ||| [module]	count=3
module	immediately available for ||| openssl ssl	count=1
function	the real ||| real	count=4
module	number of bytes ||| openssl ssl sslsocket	count=1
module	the visitor ||| rdoc markup tottonly	count=1
module	provided or that a ||| drb	count=1
module	to change the ||| net	count=1
module	and instantiates [module] for ||| [module]	count=1
module	json to ||| json ext	count=1
arg	numeric and on the ||| numeric	count=1
function	address into [function] resolv ||| [function]	count=2
module	file ||| pathname	count=3
module	joins the raw paragraph ||| rdoc markup paragraph	count=1
module	this specification ||| gem resolver	count=1
module	from the dns resolver ||| resolv dns	count=5
function	tag ||| tag	count=1
function	[function_1] in default ||| [function_2] gems use full [function_1]	count=1
module	the ssl ||| ssl	count=1
function	the ri paths ||| ri paths	count=2
module	constructor ||| parent	count=1
module	html-safe labels ||| rdoc markup tolabel	count=1
function	singleton ||| handle singleton	count=1
module	the ||| drbobject	count=4
module	waits if it isn’t ||| mutex	count=1
module	the net ||| xmlrpc	count=1
function	:http#open_timeout to ||| timeout=	count=1
module	visitor for ||| markup tomarkdown	count=1
module	interpreter ||| tcltkip	count=1
arg	the given port ||| port	count=1
function	mkd ||| makable	count=1
module	openssl ||| openssl x509	count=2
module	of ||| parent	count=1
module	be csv :row objects ||| csv	count=1
function_arg	[function_1] inline ||| [function_1] [arg_2]	count=1
module	live tuples that match ||| rinda tuplebag	count=1
function	class ||| class	count=16
function	public ||| public	count=10
function_arg	[function_1] [arg_2] all the proper subdirectories ||| [function_1] default gem subdirectories [arg_2]	count=2
arg	the status [arg_2] ||| [arg_2] [arg_1]	count=2
function	checks ||| hierarchical	count=2
function_arg	given file name ||| file name	count=1
module	the [module] with ||| [module]	count=4
arg	the types ||| types	count=1
function	wraps [function] trusted ||| trust [function]	count=1
function	matches a field ||| field	count=1
module	str into ||| string	count=1
function	of all keys ||| keys	count=1
module	in enum with the ||| enumerable	count=1
arg	time and other_time are ||| other_time	count=1
arg	string according to some ||| string 1 jan -4712 00:00:00	count=2
function	if ||| file ?	count=1
module	a ||| sslcontext	count=1
function	a head request to ||| request head	count=1
arg	timeout handler id ||| id	count=2
function	from the dependency list ||| name	count=1
arg	and end ||| end exclude_end	count=2
module	conflicting dependency’s ||| gem resolver conflict	count=1
function	table ||| table	count=1
module	rdoc :store for ||| rdoc	count=1
returnv	the ||| integer	count=1
returnv	default ||| self	count=1
module	session state ||| cgi session nullstore	count=2
arg	at coordinates x y ||| x y	count=1
module	module where ||| module	count=1
module	…> ||| sax2listener	count=1
module	that glob ||| gem	count=1
function	files to ||| files	count=1
arg	time ||| time |	count=1
module	to use ||| array	count=1
function	content ||| content	count=2
function	[returnv_1] if ||| [returnv_1] writable real [function_2]	count=1
function	of all [function] dependency ||| dependent [function]	count=1
returnv	returns the number of ||| fixnum	count=3
arg	[arg_1] [arg_2] hash containing keys from ||| [arg_1] [arg_2]	count=8
module	remote ||| drb	count=1
module	for shell ||| shell	count=2
module	stor appe ||| net ftp mlsxentry	count=1
module	command with the ||| gem command	count=1
arg	dependency ||| spec dependency	count=1
module	object which denotes self ||| date	count=1
arg	in text to ||| text	count=1
function	command line ||| dir config	count=1
returnv	control to ||| obj	count=1
arg	[arg] from ||| [arg]	count=2
arg	[arg_1] sockaddr ||| [arg_2] [arg_1]	count=2
module	each union member ||| fiddle cunionentity	count=1
module	creates ||| gem package	count=1
arg	given certificates ||| certificates	count=1
module	returns an rdoc ||| rdoc	count=2
function	[returnv_1] if the ||| [returnv_1] sticky [function_2]	count=1
module	generated docs will live ||| rdoc generator	count=1
arg	::capture3 captures ||| stdin_data: '' binmode: false opts	count=1
function	private key associated with ||| private ?	count=1
function	sign the public ||| sign	count=1
module	set ||| gem testcase	count=1
function	in ||| in	count=3
module	and waits if ||| thread	count=1
function	[function_1] instance method ||| [function_2] [function_1]	count=1
module	the number of bytes ||| ssl	count=1
function_arg	[function_1] [arg_2] ||| [function_1] requirement activated [arg_2]	count=9
arg	responds to the given ||| symbol include_all	count=1
arg	connects ||| port helo user secret authtype	count=1
function	dead ||| stop	count=1
function	and calls verify ||| verify	count=1
function	the same hash key ||| eql	count=1
module	generated docs will live ||| darkfish	count=1
arg	text to the ||| text	count=1
function	words for rl_complete_internal() ||| completer word	count=1
function	if they don’t ||| sub	count=1
arg	month ||| month	count=1
module	new [module] with ||| gem security [module]	count=1
function	add a new ||| add	count=1
function	[returnv_1] name ||| [function_2] [returnv_1]	count=3
arg	tuple from the ||| tuple	count=2
function	scalar with ||| scalar	count=1
arg	also_in to ||| also_in	count=1
module	for this request and ||| ocsp request	count=1
function	method ||| method	count=27
function	a ||| to s	count=1
module	processes ||| shell filter	count=1
function	[function_1] with an ||| [function_1] [function_2]	count=1
module	generated docs will ||| rdoc generator	count=1
function	relative path [function_2] ||| [function_1] [function_2]	count=2
module	records the parsing of ||| rdoc stats	count=6
function	headers for the ||| headers	count=1
arg	name as ||| name	count=1
arg	array ary so ||| ary	count=1
arg	[arg_1] raises exception ||| [arg_1] [arg_2]	count=3
function	sets the max ||| max	count=1
returnv	seconds between [returnv] ||| [returnv]	count=1
function	to the ||| block quote	count=1
function_arg	[function_1] year ||| [function_1] ? [arg_2]	count=4
module	runs ri ||| rdoc ri	count=1
module	parameters provided ||| drb drbsslsocket sslconfig	count=1
module	this file or ||| file stat	count=1
function	[function_1] hash ||| [function_1] [function_2]	count=7
function	if the given value ||| value ?	count=1
function	change owner and group ||| chown	count=1
function	deletes every element ||| keep if	count=2
function	live in if they ||| sub	count=1
module	to remove ||| net	count=2
module	of this codeobject ||| rdoc codeobject	count=2
arg	first limit characters ||| limit	count=1
returnv	convert self ||| string	count=3
arg	of names in methods ||| methods singleton &block;	count=1
function	returns a new [returnv_1] [function_2] the database ||| [returnv_1] [function_2]	count=1
module	cert signature is ||| x509	count=1
module	for the feed ||| atom feed	count=1
module	are ||| ssl	count=1
function	[returnv_1] [function_2] for the gem in ||| [returnv_1] [function_2]	count=1
module	adds tts from ||| tottonly	count=1
function	by using ||| dir config	count=1
module	stream emission ||| emitter	count=1
function	directories ||| gen sub directories	count=1
function	the real user ||| uid	count=1
module	to its ||| gem testcase	count=1
function	[returnv_1] if ||| [returnv_1] chardev [function_2]	count=1
function_arg	reads the [arg_2] ||| [function_1] file [arg_2]	count=3
module	in newly created bigdecimal ||| bigdecimal	count=1
module	stat ||| stat	count=10
arg	[arg] - bn ||| bits [arg]	count=1
function	as the ||| new	count=1
function	the net :http#read_timeout ||| timeout=	count=1
arg	[arg] activated specification ||| dependency activated [arg]	count=1
module	ringfinger that will look ||| rinda ringfinger	count=1
function_arg	to convert [arg_2] ||| try [function_1] [arg_2]	count=8
module	parsing of a ||| stats	count=2
returnv	[returnv] from ||| [returnv]	count=4
arg	a string according ||| string 1 jan -4712 00:00:00 +0000' start	count=2
function	last error ||| last error	count=2
returnv	if supplied ||| instance	count=1
module	with analysis and documentation ||| gem basicspecification	count=1
function	a self-signed ||| self signed	count=2
function	look for the first ||| first	count=1
arg	[arg] memory ||| [arg]	count=2
arg	depth event in the ||| depth	count=1
function_arg	[function_1] string ||| [arg_2] [function_1]	count=10
module	this dsa to ||| pkey dsa	count=1
function	can safely be ignored ||| allow missing	count=1
function	starts the ||| start	count=1
module	the latest specification for ||| gem resolver	count=1
function	the rdoc [function_2] ||| [function_1] [function_2]	count=4
module	in if they ||| generator darkfish	count=1
function	#password= ||| set password	count=1
arg	new_set ||| new_set	count=1
function_arg	and assigns [arg_2] ||| [function_1] [arg_2]	count=1
module	not a [module] ||| [module]	count=2
arg	for rdoc [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function] to the ||| [function]	count=1
module	singleton for ||| rdoc	count=1
function	information if ||| debug msg	count=1
arg	pid ||| pid raise	count=1
function	and returns ||| set	count=1
function	commands as a ||| start	count=1
module	method ||| method	count=9
function	servlet ||| servlet	count=1
function	hex-encoded hash value of ||| hexdigest	count=1
module	just the text part ||| tolabel	count=1
arg	rid ||| rid	count=3
returnv	in ||| self	count=1
function	value associated with ||| value	count=1
function	a space between ||| space	count=1
module	by :enddoc ||| rdoc codeobject	count=1
module	remove ||| gem	count=1
returnv	or [returnv] corresponding to ||| [returnv]	count=1
module	and all its children ||| rdoc	count=1
arg	parameters year [arg_2] ||| [arg_2] [arg_1]	count=7
function	template dir ||| template dir	count=1
function	hostname for ||| getname	count=1
function	int to a ||| to	count=1
arg	threads have ||| threads	count=2
function	[returnv_1] [function_2] ||| [returnv_1] re exchangeable [function_2]	count=4
arg	the uri tag_name pair ||| uri tag_name	count=1
arg	handler id and raises ||| id	count=1
function	api compatibility [function_2] ||| [function_1] [function_2]	count=2
arg	[ lineno ||| src filename lineno	count=1
function	the given value ||| value	count=1
module	for html snippet ||| markup tohtmlsnippet	count=1
module	num is ||| numeric	count=1
function	database passing [function] ||| each [function]	count=2
function	[returnv_1] public ||| [returnv_1] [function_2]	count=1
module	instance ||| openssl pkey	count=1
function	to obtain the lock ||| try lock	count=1
function_arg	[function_1] given sockets ||| [function_1] [arg_2]	count=3
function	end a ||| end	count=1
module	child element ||| rexml elements	count=1
function	global ||| global	count=2
arg	[arg_1] res whether ||| [arg_2] [arg_1]	count=2
function	[returnv_1] create ||| [function_2] [returnv_1]	count=2
module	synonym for ||| util	count=1
arg	parsing from a string ||| string 1 jan -4712 00:00:00 +0000'	count=2
module	off by ||| rdoc codeobject	count=1
arg	the given exit_code ||| exit_code	count=2
function_arg	files of [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] match ||| [function_1] [function_2]	count=2
arg	given command with the ||| command	count=1
arg	by header or ||| header	count=1
function	[returnv_1] if ||| thwait [returnv_1] empty [function_2]	count=1
function	pass ||| pbkdf2 hmac	count=1
function	named field ||| field	count=1
function	protocol ||| protocol	count=2
module	returns the http ||| webrick httpstatus	count=1
arg	associated with io ||| io	count=1
arg	namespace and [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] [function_2] ||| [function_2] 1 [function_1]	count=1
function	names set the visibility ||| set visibility for	count=1
arg	the text of ||| text	count=1
module	and number of undocumented ||| rdoc stats	count=1
function	a url ||| url	count=1
arg	the level ||| level	count=2
arg	pid is positive ||| pid	count=1
module	row read from this ||| gzipreader	count=1
module	that are immediately ||| openssl ssl	count=1
function	for ||| list item	count=4
module	the list of ||| module	count=1
module	the command line ||| gem command	count=3
function	new [function_2] ||| [function_2] [function_1]	count=1
module	been provided or that ||| drb	count=1
returnv	a string don’t ||| string	count=1
arg	[arg] text ||| [arg]	count=4
arg	by running the ||| env command... options	count=1
arg	document-class [arg_2] ||| [arg_2] [arg_1]	count=6
module	have redundancies ||| gem	count=1
arg	io and yields it ||| io	count=1
function	this [function_2] ||| [function_2] [function_1]	count=4
module	in the given ||| requestset gemdependencyapi	count=1
function	[function_1] loopback ||| [function_2] [function_1]	count=1
function	the unique classes ||| unique classes	count=2
function	returns the content ||| to s	count=1
arg	a [arg_2] ||| datetime datetime httpdate [arg_2] [arg_1]	count=1
module	ri data installed into ||| ri	count=1
function	supplied will ||| new	count=1
returnv	returns [returnv] ||| [returnv]	count=8
module	ringprovider that ||| rinda ringprovider	count=1
arg	file if [arg_2] ||| [arg_2] [arg_1]	count=2
function	after the [function_2] ||| [function_1] [function_2]	count=1
function	exit or if ||| exit	count=1
module	a rdoc ||| rdoc ri driver	count=2
module	gem :security ||| gem security	count=2
function	:conditionvariable associated with the ||| cond	count=1
function	[function_1] 1 ||| [function_2] [function_1]	count=1
function_arg	list for [arg_2] ||| [function_1] store [arg_2]	count=1
function_arg	converts [arg_2] ||| [arg_2] [function_1]	count=4
arg	the message to the ||| message	count=1
arg	[arg_1] contains member ||| [arg_1] [arg_2]	count=1
function	paths in ||| paths ?	count=1
function	#field and assigns ||| []=	count=1
module	to a ||| gem	count=1
module	attempts ||| thread	count=1
function	[function_1] c ||| [function_2] [function_1]	count=1
module	original state and removes ||| testcase	count=1
function	and activates the gems ||| use gemdeps	count=1
module	the session’s [module] ||| cgi session [module]	count=2
module	that represents this specification ||| specification	count=1
function	rfc2965 cookies as ||| cookie2	count=1
module	the length ||| rdoc	count=1
function	openssl :x509 ||| email to	count=1
function	check is [function_2] ||| [function_2] nz [function_1]	count=1
function	latter ||| for path	count=1
module	the remote object ||| drb	count=1
arg	http ||| config	count=1
function	post request ||| request post	count=1
function	each installed [function_2] ||| [function_1] [function_2]	count=2
function	is at ||| ?	count=1
function	named private [function_2] ||| [function_2] [function_1]	count=1
arg	object [arg] ||| [arg]	count=2
function	map [function_2] ||| [function_2] [function_1]	count=4
returnv	string is one of ||| string	count=1
module	the component ||| uri generic	count=1
arg	#auth_type of this ||| reload_db	count=1
arg	klass ||| klass mode	count=1
module	to wrap ||| fiddle importer	count=2
function_arg	uri [arg_2] ||| [function_1] uri [arg_2]	count=3
module	closes the [module] stream ||| [module]	count=1
module	the [module] stream ||| [module]	count=1
function_arg	a git [arg_2] ||| [arg_2] [function_1]	count=1
function	handles the given argument ||| handles	count=1
module	provided or ||| drbsslsocket sslconfig	count=1
arg	the given command and ||| cmd	count=1
function	returns the unique classes ||| unique classes	count=1
function	a socket ||| socket	count=1
module	notation ||| rexml notationdecl	count=1
function	[function] trusted certificates ||| trust [function]	count=2
arg	in the array ary ||| ary	count=1
module	the [module] the result ||| [module]	count=1
function	[returnv_1] if ||| [returnv_1] leap [function_2]	count=1
function	reason this ||| reason	count=1
arg	the given port and ||| port	count=1
function	a constant with the ||| const get	count=1
returnv	returns an array of ||| array	count=14
module	multiple object+ types ||| array	count=1
function	[function_1] instance method ||| [function_1] [function_2]	count=1
rep	new [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	of the [module] ||| [module]	count=49
function	special sequences ||| sequences	count=1
function	openssl :x509 :name ||| email to	count=1
function_arg	[function_1] hash ||| [arg_2] [function_1]	count=1
module	set of ||| gem requestset	count=1
function	address obtained by getpeername ||| address	count=1
function	line that is ||| line	count=1
arg	to the given extend_method ||| extend_method	count=1
module	fiber can ||| fiber	count=1
function	items ||| doc stats	count=1
function	test ||| test accept	count=1
function	returns true if ||| bool grpowned ?	count=2
function	for consuming [function_2] ||| [function_1] [function_2]	count=3
arg	to new_name ||| new_name	count=1
module	being scanned ||| stringscanner	count=1
function	set [function_2] ||| [function_2] [function_1]	count=4
function	finds the [function_2] ||| [function_1] [function_2]	count=3
arg	returns ||| to	count=2
function	names of global ||| global	count=1
function	and ||| setup	count=1
arg	ruby object o ||| o	count=1
function	delete ||| delete	count=6
module	establishes an [module] host ||| [module]	count=1
function	of parsed elements ||| rfc2822	count=1
arg	[arg] so ||| [arg]	count=2
arg	writing gzip compressed data ||| level strategy	count=1
function	[returnv_1] year ||| [returnv_1] [function_2]	count=1
module	displays the given ||| userinteraction	count=1
function	creates a new ||| new	count=10
arg	an implicit start and ||| implicit	count=1
function	valid and ||| valid	count=4
function_arg	[function_1] given list ||| [arg_2] [function_1]	count=1
arg	addr as ||| addr	count=1
function	end [function_2] ||| [function_2] [function_1]	count=1
module	directory may be entered ||| mlsxentry	count=1
function	locale charmap name ||| locale charmap	count=2
module	a named header ||| httpheader	count=1
module	an x509 extension ||| openssl x509 extension	count=1
function	certificate with an ||| cert	count=2
function	is a leap ||| leap	count=1
function	raw profile [function_2] ||| [function_1] [function_2]	count=4
function	called name ||| callee	count=1
arg	parameters year month ||| year month	count=2
function_arg	list for [arg_2] ||| [function_1] [arg_2]	count=1
function	in if they ||| gen sub	count=1
function	[function_1] file for ||| [function_2] [function_1]	count=1
function	all gems matching ||| all	count=1
arg	given extensions for ||| extensions serial	count=1
function	the logger output info ||| info	count=1
module	given name in mod ||| module	count=1
module	all file ||| gem specification	count=1
module	removes whitespace and ||| rdoc	count=1
module	will ||| generator	count=1
function	“with” options with ||| dir config	count=1
arg	name read/write status rw ||| name rw	count=1
function	in ||| vector	count=2
module	:sslprivatekey ||| sslconfig	count=1
module	cert ||| x509	count=2
function	the latest release-version ||| latest	count=1
module	the visitor for html ||| markup tohtml	count=1
arg	timeout seconds ||| timeout &block;	count=1
function	file [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] decimal to ||| [function_1] [arg_2]	count=6
arg	parses [arg] as ||| [arg]	count=1
arg	response as an httpresponse ||| data initheader	count=1
function	returns the destination ||| dstaddr	count=1
arg	to markup_item ||| markup_item	count=1
module	terminates the [module] specified ||| [module]	count=1
function	[function_1] win32 error ||| [function_2] [function_1]	count=6
function	deleting those [function] ||| delete [function]	count=3
module	lock source ||| lock	count=1
module	an openssl :x509 :name ||| security	count=1
arg	specified length and algorithm ||| length algorithm	count=1
function	of the private ||| private	count=1
module	removes ||| rdoc parser rubytools	count=1
function	scans content for rb_singleton_class ||| do singleton class	count=1
module	does this document ||| rdoc markup document	count=2
module	for constructing entry elements ||| rss atom entry	count=1
arg	[arg] with values ||| [arg]	count=3
module	tts ||| markup	count=1
module	this process ||| process	count=4
function	basic ||| basic	count=1
module	of the [module] bounds ||| [module]	count=1
arg	scripts to run ||| bindir	count=1
module	xmlrpc :datetime ||| xmlrpc datetime	count=1
arg	and ||| age extensions	count=2
function	[function_1] remote gems ||| [function_2] [function_1]	count=8
module	notifications are enabled ||| notifier abstractnotifier	count=1
function	the gem ||| gem	count=6
module	file is ||| file stat	count=2
module	with ||| drb drbsslsocket	count=1
function	[function_1] list ||| [function_2] [function_1]	count=12
function	[function_1] have a ||| [function_2] [function_1]	count=1
arg	equivalent to or ||| io string obj ...	count=1
module	rdoc :document ||| rdoc	count=1
function	string before the ||| string pre	count=1
function_arg	exec flag [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] file with ||| [function_1] [function_2]	count=1
function	[returnv_1] seconds since ||| [returnv_1] to [function_2]	count=1
arg	from given enum ||| enum	count=1
function	template dir for ||| template dir for	count=2
arg	if ||| str	count=1
arg	extensions for the ||| age extensions	count=2
module	emission see psych ||| psych emitter	count=1
function	instance of class klass [function_1] [function_2] ||| [function_2] [function_1]	count=2
function	logout ||| logout	count=1
function	path parameter ||| path	count=1
module	respected for this ||| rexml	count=1
function	return a [function_2] ||| [function_2] [function_1]	count=2
arg	v see also #port= ||| v	count=1
function	a record ||| search record	count=1
arg	memory pointer [arg] ||| [arg]	count=1
arg	determines the block parameter ||| single tk method	count=1
function	a template [function_2] ||| [function_2] [function_1]	count=2
module	through ||| net httpheader	count=1
module	that are ||| openssl ssl	count=1
arg	[arg_1] version ||| [arg_1] [arg_2]	count=4
function	delegator instance ||| instance delegator	count=2
arg	the given week ||| cwyear cweek cwday	count=1
function	a trace request to ||| trace	count=1
rep	creates [function_arg_2] ||| [module_1] instance [function_arg_2]	count=5
function	private key associated ||| private	count=1
function	last win32 ||| win32 last	count=4
function	of undocumented items ||| doc	count=1
module	a new ||| drb	count=1
function	[returnv_1] instance ||| [function_2] [returnv_1]	count=1
module	to ios using the ||| io	count=1
arg	address addr ||| addr	count=2
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=3
arg	[arg_1] of the ||| memberwise [arg_1] [arg_2]	count=1
module	represents @return ||| gem resolver molinillo	count=1
arg	[arg] authenticating this ||| user [arg]	count=3
arg	config hash or ||| config	count=1
function	prefixes names of all ||| prefixes	count=1
function	finite -infinity or +infinity ||| infinite	count=1
function	hax ||| create	count=1
module	:security :digest_algorithm ||| security	count=1
arg	as the parent of ||| parent	count=1
module	the first instance is ||| syslog logger	count=1
function_arg	[function_1] symbol ||| [function_1] [arg_2]	count=1
arg	der-encoded value ||| der	count=1
function	output warn ||| warn	count=1
arg	socks connection to host ||| host	count=1
arg	at count ||| count	count=1
module	type library ||| win32ole_typelib	count=1
function	the value as ||| to	count=1
arg	ber- or der-encoded ||| der	count=1
arg	text [arg] text ||| [arg]	count=1
arg	keys ||| keys	count=2
function_arg	[function_1] [arg_2] ||| [function_1] ? requirement [arg_2]	count=2
module	for specification ||| gem specification	count=1
function	readable by [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| fileutils remove [function_1] secure [arg_2]	count=1
function	the cosine ||| cos	count=1
arg	ln_s(old new [arg_2] ||| [arg_1] [arg_2]	count=1
function	the private [function_2] ||| [function_2] [function_1]	count=2
module	provided or that ||| drb drbsslsocket sslconfig	count=1
module	:http object from ||| http	count=1
arg	requirements of other ||| other	count=1
arg	fix is ||| fix	count=1
function	current module using erb ||| erb	count=1
function	method :both ||| method	count=1
module	up ||| tohtmlsnippet	count=1
module	be ||| task	count=2
module	of [module] to column ||| [module]	count=1
function	documented modules sorted ||| get sorted	count=1
arg	pass - string salt ||| pass salt	count=2
function_arg	post request [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] — ||| [arg_2] [function_1]	count=1
function	the memory ||| i	count=2
returnv	be set as the ||| instance	count=1
function_arg	[function_1] from string ||| [arg_2] [function_1]	count=2
module	downloading ||| gem specification	count=1
function	the values [function] ||| [function]	count=1
function	of [function_2] ||| [returnv_1] [function_2]	count=1
module	1 rdoc :markup ||| rdoc	count=1
arg	text that is ||| text	count=1
module	of ||| gemdependencyapi	count=1
function	generated docs will ||| gen	count=1
arg	flags ||| flags	count=2
module	reformats the object’s object_id ||| pp ppmethods	count=1
function	x509v3 [function] as ||| [function]	count=1
function	adds paths ||| add also in	count=1
function	yield would execute a ||| given	count=1
arg	[arg] to ||| [arg]	count=13
module	which should [module] :extend ||| [module]	count=1
function	returns the cosine ||| cos	count=1
function	[function_1] entry ||| [function_1] [function_2]	count=1
module	the json index to ||| rdoc	count=1
function	the public ||| public	count=4
arg	handling req on ||| req	count=1
function	template dir [function_2] ||| [function_1] [function_2]	count=1
module	of items in enum ||| enumerable	count=1
function	parameters ||| params	count=10
function	latest ||| latest	count=1
module	prepares the visitor for ||| markup tomarkdown	count=1
function	equal to int ||| pred	count=1
function	names from the ||| names	count=1
module	[module] text ||| [module]	count=4
function	the directories the ||| directories	count=1
module	range or ||| range	count=1
function_arg	leap [arg_2] ||| [function_1] ? [arg_2]	count=4
arg	pointer [arg] example ||| [arg]	count=1
function	handles the given ||| handles	count=1
function	returns this name as ||| to s	count=1
function	returns true [function_2] ||| [returnv_1] valid [function_2]	count=1
arg	specified by [arg] as ||| [arg]	count=1
module	with [module] mode and ||| [module]	count=1
function_arg	[function_1] [arg_2] ||| -1,_0,_+1 [function_1] [arg_2]	count=3
function	add the ||| add	count=4
arg	[arg_1] which is ||| [arg_2] [arg_1]	count=6
module	format into rdoc ||| rdoc	count=1
function	method names set the ||| set visibility	count=1
function_arg	[function_1] page ||| [arg_2] [function_1]	count=3
function_arg	a new parser ||| new block_parser	count=1
function	search for the ||| search for	count=2
function	passing it ||| send	count=1
function	[returnv_1] [function_2] the ||| [returnv_1] include [function_2]	count=2
module	generated docs will live ||| rdoc	count=1
arg	like [ lineno ||| lineno	count=1
module	all file lists ||| specification	count=1
module	used ||| gem	count=1
function	returns all classes and ||| all classes and	count=1
module	string form ||| string	count=1
arg	[arg_1] wraps the ||| [arg_2] [arg_1]	count=2
function	set the ||| set	count=2
function	deletes the given object ||| delete	count=2
function	returns the table ||| table	count=1
arg	first minor by -1 [arg_1] [arg_2] ||| matrix cofactor [arg_1] [arg_2]	count=1
module	this array ||| array	count=1
module	bytes ||| ssl	count=1
arg	adds file [arg] with ||| [arg]	count=1
function	[function_1] tests ||| [function_2] [function_1]	count=3
function	get the raw ||| raw	count=2
function	this server alive? ||| alive	count=1
module	true ||| gem installer	count=1
function	using that ||| dir config	count=1
module	returns the ||| logger	count=1
arg	if path ||| path	count=1
function	they ||| sub	count=1
module	drbobject from ||| drb drbobject	count=1
arg	evaluates the optional block ||| &block;	count=1
module	this block was ||| localjumperror	count=1
returnv	arguments sets the default ||| self	count=1
module	then use ||| makemakefile	count=1
function	for restricting gems ||| platform	count=1
arg	string ||| name string	count=1
module	[module] from ||| rexml [module]	count=1
module	a set ||| requestset gemdependencyapi	count=1
module	parser is in ||| parser	count=1
function	[function_1] written ||| [function_2] [function_1]	count=4
module	space ||| ext generator state	count=1
arg	signer is [arg_2] ||| [arg_1] issuer [arg_2]	count=2
module	addrinfo objects obtained ||| addrinfo	count=1
function	listed ||| requester	count=1
arg	[arg_1] integer safe ||| [arg_1] [arg_2]	count=1
module	to ||| ri	count=1
arg	built [arg] duplicating the ||| [arg]	count=1
module	the feed or any ||| atom feed	count=1
function_arg	the extension name ||| extension ? name	count=1
module	resolver object ||| resolver	count=1
function	in non-blocking manner ||| nonblock	count=1
module	of files ||| gem specification	count=1
module	for use [module] generator ||| [module]	count=1
module	descriptive fields ||| gem specification	count=1
module	fiddle :handle using fiddle ||| fiddle	count=1
function	the build [function_2] ||| [function_2] [function_1]	count=2
function_arg	server on [arg_2] ||| [arg_2] [function_1]	count=6
function	the user can then ||| dir config	count=1
module	option summary ||| optparse	count=1
function	prepares the ||| accept list item start	count=4
arg	der ||| der	count=1
arg	methods to [arg_2] ||| [arg_2] [arg_1]	count=8
function	return [function_2] ||| [function_1] [function_2]	count=2
module	whitespace from [module] returning ||| [module]	count=1
module	that calls ||| rdoc markup	count=1
module	openssl ||| gem	count=1
function_arg	if [arg_2] ||| integer size [function_1] [arg_2]	count=4
module	and returns the http ||| http	count=1
function	[function_1] slice ||| [function_1] [function_2]	count=1
module	syslog ||| syslog logger	count=4
function	#page_dir to ||| finish page dir	count=1
function_arg	[function_1] data ||| [function_1] [arg_2]	count=5
module	to $load_path ||| gem	count=1
function	[function] signature ||| [function]	count=2
function	the lock ||| lock	count=2
module	new ||| sslconfig	count=1
arg	port default ||| port	count=1
arg	from [arg_2] ||| vector elements [arg_2] [arg_1]	count=1
module	items in enum sorted ||| enumerable	count=1
arg	given host [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] and requirements ||| [arg_2] [arg_1]	count=1
module	versions with openssl ||| openssl	count=1
function_arg	adds a [arg_2] ||| [function_1] [arg_2] next_update extensions	count=2
arg	[arg_1] size ||| [arg_1] [arg_2]	count=3
module	:http#open_timeout to ||| xmlrpc	count=1
module	number of bytes that ||| openssl	count=1
function	[function_1] variable named ||| [function_1] [function_2]	count=2
module	gems to ||| gem requestset gemdependencyapi	count=1
arg	by n matrix a ||| n zero one	count=1
module	number of undocumented ||| rdoc stats	count=1
module	returns a parser ||| rdoc parser	count=1
arg	[arg_1] sec ||| [arg_2] [arg_1]	count=8
arg	items ||| items	count=1
module	to a ||| requestset gemdependencyapi	count=1
function	can then use ||| config	count=1
arg	or not the given ||| headers opt &b;	count=1
module	[module] is ||| [module]	count=4
function_arg	and from_version requesting [function_1] [arg_2] dependencyrequest ||| [function_1] dep from_name from_version [arg_2]	count=3
function	:x509 ||| to	count=1
module	been provided or ||| drb drbsslsocket sslconfig	count=1
module	the requested gem ||| gem resolver	count=1
module	gems ||| requestset	count=2
arg	object specifying the threads ||| threads	count=1
module	first instance is ||| logger	count=1
module	up ||| rdoc generator	count=1
module	a gem couldn’t ||| gem	count=1
function	documented modules sorted ||| sorted module	count=1
function	and number ||| stats	count=1
function	a development [function_2] ||| [function_1] [function_2]	count=1
arg	[arg] startup ||| [arg]	count=1
module	dependencies and return an ||| gem requestset	count=1
arg	issuer cn ||| cn	count=1
module	analysis ||| gem basicspecification	count=1
function	special for ||| special	count=2
arg	[arg] matching ||| [arg]	count=1
function	[function_1] [function_2] the pool still running ||| [function_2] [function_1]	count=4
function	over each [function] in ||| each [function]	count=1
function	the proxy for this ||| proxy from	count=1
function	a new net :http ||| new	count=1
module	the keep_files environment variable ||| testcase	count=1
arg	to length if length ||| length	count=1
arg	quick navigation ||| req res	count=1
function	variable names for the ||| variables	count=1
function	parameters and ||| params and	count=1
function	the default irb commands ||| commands	count=1
module	bytes that ||| ssl	count=1
returnv	returns the name ||| string	count=2
function	generates ||| generate	count=1
arg	comment ||| comment	count=17
arg	password ||| password	count=1
module	ftp session ||| ftp	count=1
function	for ||| item	count=4
module	the contents of a ||| instance	count=1
arg	out a fully formed ||| out indent	count=1
function_arg	[function_1] repository ||| [arg_2] [function_1]	count=3
module	that ||| sslsocket	count=1
arg	convert str to ||| str	count=3
module	unsubscribe [module] ||| [module]	count=3
function	ipv4 loopback ||| ipv4 loopback ?	count=2
arg	with name value and ||| name value	count=1
module	tomdoc parser ||| tomdoc	count=1
module	accept_indented_paragraph ||| markup indentedparagraph	count=1
arg	[arg] time ||| [arg]	count=2
function	gets all hostnames for ||| getnames	count=2
module	most recent match ||| stringscanner	count=1
module	single string ||| rd blockparser	count=1
function	root directories ||| root	count=1
function	for extensions ||| set extensions	count=1
function	returned using the io ||| io	count=1
arg	block [arg_2] ||| [arg_2] proc [arg_1]	count=3
function	the locale ||| locale	count=1
module	this module ||| module	count=1
function_arg	[function_1] validation status ||| [function_1] certificate_id [arg_2] reason revocation_time this_update next_update	count=1
arg	key from certificate ||| certificate	count=1
arg	logs data ||| data	count=1
function	list of ||| name list	count=1
function_arg	:installer [arg_2] ||| [arg_2] [function_1]	count=1
function	both denominator - real ||| denominator	count=1
function	an absolute ||| abs_file_name absolute	count=1
function	live ||| gen	count=1
module	to this object’s path ||| generator markup	count=1
module	across multiple object+ types ||| array	count=1
function	the digest to ||| digest !	count=1
function	on but at tail ||| on tail	count=1
function	the exit [function] child ||| [function]	count=1
function	get ||| get	count=8
returnv	this [returnv] ||| [returnv]	count=1
module	this table ||| csv table	count=3
function_arg	[function_1] from certificate ||| [function_1] [arg_2]	count=1
arg	for user ||| user reload_db	count=1
function	verifies ||| verify	count=3
function_arg	[function_1] of filename ||| [function_1] file [arg_2]	count=1
module	systemexitexception with the ||| gem systemexitexception	count=1
arg	[arg_1] string ||| iso8601 [arg_2] [arg_1]	count=1
function	return [function_2] ||| [function_2] [returnv_1]	count=1
arg	res ||| req res	count=2
function	sanitize the descriptive ||| sanitize	count=1
function	stream starts ||| start stream	count=2
module	restricting gems to ||| requestset gemdependencyapi	count=1
arg	:context#irb_path and name ||| name	count=1
arg	extensions for the ||| extensions serial	count=1
module	that represents the ||| io	count=1
function	exception [function_2] ||| [function_2] [returnv_1]	count=1
arg	numeric which may ||| numeric	count=1
function	add a ||| add	count=2
module	in enum sorted either ||| enumerable	count=1
function	a constant ||| const	count=1
arg	size items ||| size initial_message	count=1
module	singleton class class ||| singleclass	count=1
function_arg	spec [arg_2] ||| [arg_2] [function_1]	count=2
function	underlying ||| s	count=1
module	the [module] so ||| [module]	count=1
module	comment are used in ||| comment	count=2
module	in json objects ||| json	count=1
function	the hostname of ||| getname	count=1
function	the makefile for ||| makefile	count=1
module	policy ||| policy	count=1
module	this hash instance ||| generatormethods hash	count=1
returnv	hash or an instance ||| instance	count=1
function_arg	opens a [arg_2] ||| [arg_2] [function_1]	count=1
arg	memory at [arg] ||| [arg]	count=1
module	jobmanager ||| irb jobmanager	count=1
arg	point [arg] ||| lib [arg] paths	count=3
arg	var_name ||| var_name	count=1
module	for downloading ||| specification	count=1
function	completion ||| completion append	count=1
rep	[module_1] [function_arg_2] ||| [module_1] parse [function_arg_2]	count=7
function	equal to int - ||| pred	count=1
arg	the string source ||| source opts	count=1
arg	[arg] by default) ||| [arg]	count=1
module	get an ||| rexml	count=3
module	environment variable ||| env	count=10
function	builds a paragraph from ||| build paragraph	count=1
arg	without opening a ||| address port p_addr p_port p_user p_pass	count=1
arg	label [arg_2] ||| [arg_2] [arg_1]	count=1
module	win32ole_type ||| win32ole_type	count=2
function	first [function_2] ||| [function_1] [function_2]	count=3
arg	depth event in ||| depth	count=1
module	used for indexing only ||| gem	count=1
function	the beginning of ||| begin adding	count=1
module	to the server ||| xmlrpc server	count=1
arg	klass [arg_2] ||| [arg_2] [arg_1]	count=1
function	returns true [function_2] ||| [returnv_1] eql [function_2]	count=6
arg	of subject [arg_2] ||| [arg_1] key [arg_2]	count=1
module	length and number of ||| rdoc	count=1
module	rsa ||| rsa	count=1
arg	name to [arg_2] ||| [arg_1] [arg_2]	count=2
module	from the ||| version	count=1
function	an odd number ||| odd	count=1
arg	set as the parent ||| parent	count=1
function	check is passed ||| ?	count=2
function	length and number ||| doc stats	count=1
arg	[arg] and a ||| [arg]	count=2
returnv	the point of call ||| array	count=1
function	strongly [function] ||| each strongly [function]	count=3
function	if ||| sub	count=1
function_arg	[function_1] variable env ||| [arg_2] [function_1]	count=4
function	[function_1] range ||| [function_2] [function_1]	count=4
function	array of extra arguments ||| specific extra args	count=1
module	is initialized when ||| logger	count=1
module	psych :nodes :document object ||| psych nodes document	count=1
function	a der-encoded ||| der	count=3
module	this ||| singleclass	count=1
function	[returnv_1] if ||| [returnv_1] field [function_2]	count=1
function	the keys ||| keys	count=1
arg	[arg_1] column ||| matrix cofactor [arg_1] [arg_2]	count=2
module	a yaml sequence ||| psych nodes sequence	count=1
function	returns true [function_2] ||| [returnv_1] blockdev [function_2]	count=2
function	present ||| member	count=1
function	included in mod or ||| include	count=1
module	from ||| markup	count=1
function	attempts [function_2] ||| [function_2] [function_1]	count=6
module	a bitmask to ||| markup tohtmlsnippet	count=2
module	for [module] added in ||| [module]	count=1
arg	[arg_1] matches ||| [arg_2] [arg_1]	count=5
module	the user can then ||| makemakefile	count=1
function	spec? note ||| matches spec	count=1
module	in conflict with ||| conflict	count=1
function	open ||| opened	count=1
function	path ||| path	count=14
function	a formatted backtrace ||| backtrace	count=1
module	provided or that a ||| sslconfig	count=1
function_arg	size to rows ||| size rows	count=2
function	the path ||| path	count=3
function	inverse hyperbolic tangent ||| atanh	count=1
arg	the named file the ||| file_name	count=1
module	constructs a version ||| gem version	count=1
arg	includes other which ||| other	count=1
function	[function_1] header row ||| [function_2] [function_1]	count=2
module	dsa instance ||| openssl pkey dsa	count=1
function	default directory for binaries ||| default bindir	count=1
returnv	of bytes ||| integer	count=1
arg	date this ||| date	count=1
function	[function_1] of extra ||| [function_1] [function_2]	count=1
function	a singleton method is ||| singleton method	count=2
module	availableset as ||| gem availableset	count=1
arg	[arg_1] configuration config ||| [arg_1] [arg_2]	count=3
arg	version tags [arg_2] ||| [arg_2] [arg_1]	count=2
module	an element if supplied ||| elements	count=1
function	using recvfrom ||| recvfrom	count=2
returnv	accept [returnv] after ||| [returnv]	count=1
function_arg	proxy uri [arg_2] ||| [function_1] from env [arg_2]	count=1
function	finds the [function_2] ||| [function_2] [function_1]	count=3
function	signs ||| re sign	count=1
function_arg	normal method [arg_2] ||| [function_1] [arg_2]	count=1
function	represents sunday ||| sunday	count=1
function	[function_1] files in ||| [function_1] [function_2]	count=1
module	rdoc :markup :documents with ||| rdoc	count=1
module	the specification contains ||| specification	count=1
module	and net ||| xmlrpc client	count=1
arg	decimal to ||| decimal	count=3
function	[function_1] and -infinity ||| [function_2] [function_1]	count=2
function	by using that ||| config	count=1
arg	[arg_1] tk ||| [arg_1] single [arg_2]	count=1
arg	[arg] are expected ||| headers [arg]	count=1
module	instance is ||| syslog	count=1
function	freeze status ||| frozen ?	count=1
function	containing the api compatibility ||| api	count=1
function	[function_1] disconnected from ||| [function_2] [function_1]	count=2
function	-infinity ||| ascii only	count=1
arg	tags for ||| name start stop	count=1
function_arg	a constant in ||| constant container tk	count=1
function	returns true if ||| bool exited ?	count=1
module	and waits if ||| thread mutex	count=1
arg	data for method on ||| method	count=1
module	that all file lists ||| gem	count=1
arg	for the [arg] ||| [arg] gem_deps_file	count=1
function	lines that [function_2] ||| [function_2] out [function_1]	count=1
module	stor appe and ||| ftp mlsxentry	count=1
returnv	version ||| instance	count=1
function	[function] returned ||| return [function]	count=2
module	to pass output through ||| rdoc	count=1
function	vector [function] ||| [function]	count=3
module	the session ||| session	count=1
function	commands as a pipeline ||| pipeline start	count=1
arg	symbol ||| symbol obj	count=1
arg	[arg_1] to target ||| [arg_2] [arg_1]	count=6
function	options request to ||| options	count=1
function	[function_1] pipeline ||| [function_2] [function_1]	count=16
module	docs will live in ||| generator	count=1
function	to verify the ||| verify	count=1
arg	in context with ||| container single tk	count=1
module	this gem ||| gem resolver	count=3
function	latest [function_2] ||| [function_2] [function_1]	count=4
module	mod except that when ||| module	count=1
function	returns a pem encoded ||| to pem	count=1
function	[function_1] before ||| [function_1] [function_2]	count=3
module	and disables coverage measurement ||| coverage	count=1
arg	to limit bytes ||| limit	count=1
module	the path ||| pathname	count=1
arg	res if ||| res	count=2
function	an child after ||| after	count=1
function	by using ||| dir	count=1
module	provided ||| drbsslsocket	count=2
arg	content [arg_2] ||| [arg_2] [arg_1]	count=5
arg	you want to modify ||| func safe add parent &b;	count=3
module	verbose download reporter ||| streamui verbosedownloadreporter	count=2
function	passing [function] ||| each [function]	count=4
module	this toplevel ||| toplevel	count=2
function	to the ||| write	count=1
function	all gem names ||| all gem names	count=3
module	get the uri of ||| drb	count=1
module	given index @param ||| parent	count=1
function	the initial length of ||| initial	count=1
function	positive completion reply 2xx ||| success ?	count=1
function	iterates over ||| each pair	count=1
function	update rubygems ||| update rubygems	count=2
arg	to the hard_break ||| hard_break	count=1
function_arg	[function_1] from parts ||| [arg_2] [function_1]	count=1
returnv	[returnv] process ||| [returnv]	count=1
module	convert a druby reference ||| drb drbserver	count=1
arg	port and ||| host port	count=1
returnv	with no arguments ||| self	count=1
module	stat is executable or ||| file stat	count=1
function	the names of ||| names	count=1
function	server loop on the ||| server loop on	count=1
function	array of strings ||| join	count=1
function	returns true if ||| bool file ?	count=2
arg	given certificate if ||| certificate	count=1
module	file types this parser ||| rdoc parser	count=1
function	names of class ||| class	count=1
module	this list and ||| list	count=1
module	regular ||| filetest	count=1
module	onto the [module] such that ||| [module]	count=1
function	the empty string ||| s	count=1
function	the position of the ||| rewind	count=1
module	the generated ||| generator	count=1
function	[returnv_1] [function_2] ||| [returnv_1] handles [function_2]	count=2
function	sockets ||| sockets	count=2
module	represents the ||| stringio	count=1
function	character device false ||| chardev	count=1
returnv	arguments sets ||| self	count=1
module	onto ||| package tarwriter	count=1
arg	of bytes ||| bytes	count=1
function	[function] of ||| to [function]	count=2
module	#max_nesting ||| ext	count=1
function	owner of the ||| grpowned	count=1
function_arg	[function_1] old_list ||| [function_1] ? new [arg_2]	count=1
returnv	parent if ||| instance	count=1
module	iterates the [module] ||| [module]	count=1
module	stou stor appe and ||| ftp mlsxentry	count=1
arg	integer safe [arg_2] ||| [arg_2] [arg_1]	count=1
function	find ||| find unresolved	count=1
module	file ||| gem	count=1
module	the generated ||| darkfish	count=1
module	of the deflate stream ||| zlib deflate	count=1
module	comment ||| rdoc generator	count=1
function_arg	[function_1] symbol ||| [function_1] set [arg_2]	count=3
module	that :sslcertificate and :sslprivatekey ||| drb drbsslsocket	count=1
module	of the ||| io	count=1
module	that :sslcertificate and :sslprivatekey ||| drbsslsocket	count=1
arg	exception while ||| exception	count=1
module	session ||| jobmanager	count=1
arg	tuple ||| tuple sec &block;	count=2
arg	[arg_1] and port ||| [arg_2] [arg_1]	count=1
module	digest is set to ||| openssl digest	count=1
function	field instead of replacing ||| field	count=1
module	thread objects for ||| thread	count=1
function	get the size of ||| size	count=1
function_arg	[function_1] [arg_2] and returns self ||| array ary rotate [function_1] [arg_2]	count=3
module	redundancies removed ||| gem specification	count=1
function_arg	[function_1] flag file ||| [arg_2] [function_1]	count=1
module	a properly-space ||| options	count=1
module	not every message digest ||| openssl digest	count=1
function_arg	update the [arg_2] ||| [arg_2] [function_1]	count=3
function	[returnv_1] seconds since ||| [function_2] [returnv_1]	count=1
returnv	returning [returnv] garbage collection ||| [returnv]	count=2
function	positive completion reply 2xx ||| success	count=1
module	that ||| openssl ssl	count=1
function	complementary error function of ||| erfc	count=1
function	ordinal ||| ordinal	count=1
module	generates documentation ||| rubygemshook	count=1
module	status class ||| httpstatus	count=1
arg	and connects to ||| address port helo user secret authtype	count=1
module	by cgi ||| cgi	count=1
function	an child after another ||| after	count=1
function	a real ||| real	count=1
function	[returnv_1] after the ||| [function_2] [returnv_1]	count=4
module	another gem ||| gem	count=1
arg	the specified object ||| obj	count=1
module	driver ||| driver	count=1
function	of data in ||| in	count=1
function	[function] new hash ||| [function]	count=1
module	parent if ||| rexml	count=1
function	directory ||| dir	count=11
returnv	the selected [returnv] ||| [returnv]	count=3
module	loads ||| security trustdir	count=1
returnv	will be set ||| instance	count=1
arg	threads to wait on ||| threads	count=1
function	a set of ||| platform	count=1
arg	like [ lineno ||| filename lineno	count=1
function	default spec directory path ||| default spec cache dir	count=1
function	from ||| new	count=1
function	[function_1] can handle ||| [function_2] [function_1]	count=2
function	a logout ||| logout	count=1
function	of the [function_1] [function_2] ||| [function_1] [function_2]	count=2
module	of this specification ||| specification	count=1
module	to the files list ||| rdoc options	count=1
function_arg	[function_1] to path ||| [arg_2] [function_1]	count=2
function	[function_1] [function_2] ||| [function_2] by [function_1]	count=1
function_arg	[function_1] [arg_2] object ||| [function_1] object [arg_2]	count=2
module	[module] key ||| [module]	count=1
function	prepares the visitor ||| list item start	count=4
module	and removes the ||| gem	count=1
function	did ||| sym	count=1
arg	[arg_1] for address ||| [arg_2] [arg_1]	count=2
arg	[arg_1] port ||| [arg_1] [arg_2]	count=10
function	the option parser ||| platform option	count=1
function	to the file ||| file	count=1
arg	[arg] group group ||| [arg] group list	count=1
arg	the given orig ||| orig	count=1
function	accept_list_item_end_note ||| list item end note	count=1
function_arg	try [function_1] [arg_2] ||| [function_1] [arg_2]	count=5
function	[returnv_1] all keys ||| [returnv_1] [function_2]	count=1
arg	for msgid ||| msgid options	count=1
returnv	a nested array of ||| array	count=1
module	singleton class class ||| rdoc singleclass	count=1
arg	gzip compressed data ||| level strategy	count=1
module	used by rdoc :generator ||| rdoc	count=1
function	truncated to an integer ||| to i	count=1
function	[returnv_1] if the ||| [returnv_1] grpowned [function_2]	count=2
function	[function_1] [function_2] the database ||| [function_2] [function_1]	count=3
function	as instance method of ||| method	count=1
module	dsa instance ||| pkey dsa	count=1
arg	address [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] the proxy ||| [function_2] [function_1]	count=1
module	singular accessor for ||| gem	count=2
module	the job at the ||| jobmanager	count=1
module	new ||| drbsslsocket	count=1
function_arg	[function_1] level ||| [function_1] [arg_2]	count=1
arg	other is ||| other	count=1
function	to the index ||| index	count=1
function	its ancestors [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] [function_2] of the specification to ||| [function_1] [function_2]	count=4
function	integer [function_2] ||| [function_2] [function_1]	count=2
module	by ri ||| rdoc generator ri	count=1
arg	program read from src ||| src	count=1
module	ec ||| converter	count=1
function	adds a value to ||| add	count=1
module	dependencies files ||| requestset	count=1
function	[function_1] single ||| [function_1] [function_2]	count=1
module	a ||| testcase	count=6
arg	the user user and ||| user	count=1
function_arg	dependency [arg_2] ||| [arg_2] [function_1]	count=2
module	new [module] the items ||| [module]	count=1
function	the document ||| start document	count=1
function	a get request ||| get	count=1
module	time including the century ||| time	count=1
arg	the given spec in ||| spec	count=1
arg	following tk setting the ||| context single tk	count=1
function	returns the exit value ||| exit value	count=1
module	parent if supplied will ||| parent	count=1
function	[returnv_1] value ||| [function_2] [returnv_1]	count=3
function	storing ||| puttextfile	count=1
arg	for method_name in klass_name ||| klass_name method_name	count=1
function	a int ||| int	count=1
arg	ty at [arg_2] ||| [arg_2] [arg_1]	count=1
function	last [function_2] ||| [function_2] [function_1]	count=14
module	druby reference to the ||| drb drbserver	count=1
function_arg	variable named [arg_2] ||| [function_1] set [arg_2]	count=3
module	new array containing ||| array	count=1
function	nan infinity and -infinity ||| ascii only	count=1
arg	sg ||| args	count=1
module	aws-sdk gem fortunately ||| gem	count=1
module	the configuration ||| webrick genericserver	count=1
module	for the alias of ||| rdoc alias	count=1
function	[function_1] node of ||| [function_1] [function_2]	count=4
rep	current [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	rdoc attributes ||| rdoc	count=1
function	handling [function] rigid ||| lambda [function]	count=1
module	cache ||| rdoc store	count=1
function	directives [function_2] ||| [function_1] [function_2]	count=4
function	not zero nil otherwise ||| nonzero	count=1
module	all other elements down ||| array	count=1
module	of [module] to ||| [module]	count=2
function	false if ||| civil ?	count=1
function	certificate [function_2] ||| [function_2] [function_1]	count=1
function	server loop ||| server loop	count=2
module	gzipreader object associated ||| zlib gzipreader	count=1
function	thread-local variable ||| thread variable	count=2
function	returns [returnv_1] [function_2] all entries of the ||| [returnv_1] [function_2]	count=1
arg	document to text and ||| document	count=1
function	field [function_2] ||| [function_2] [function_1]	count=1
function	that is ||| gen	count=1
function	creates a new key ||| create key	count=1
module	the path where gem ||| gem	count=1
module	the length and number ||| stats	count=1
function	[function_1] length of ||| [function_1] [function_2]	count=9
arg	string salt ||| salt	count=2
function	output generator ||| setup generator	count=1
function	[function_1] special handler ||| [function_1] [function_2]	count=1
arg	and the given extensions ||| extensions serial	count=1
function	variable map with the ||| variable map	count=1
module	arguments sets the default ||| module	count=1
module	row read from ||| zlib gzipreader	count=1
arg	are separated by sep ||| name sep	count=1
arg	certificate_id ||| certificate_id	count=1
arg	spec and ||| spec	count=1
function	returns true if ||| bool blockdev ?	count=1
function	and ||| with	count=1
function	of each installed ||| each installed	count=4
function_arg	converts document ||| display document	count=1
module	this activation request’s specification ||| gem resolver activationrequest	count=2
returnv	sets the default ||| self	count=1
module	returns the status ||| webrick	count=1
module	will ||| darkfish	count=1
function	block [function_2] ||| [function_2] [function_1]	count=3
arg	given text ||| text code_object	count=1
function_arg	[function_1] year of ||| [function_1] [arg_2]	count=2
arg	config hash or an ||| config	count=1
module	class ||| webrick httpstatus	count=2
returnv	new [returnv] each key-value ||| [returnv]	count=1
arg	storing top_level ||| top_level	count=1
arg	context of ||| context	count=1
function_arg	executable bin ||| find executable bin	count=1
function	is [function] others returns ||| world [function]	count=2
arg	bits the ||| bits	count=1
function	text field input ||| text field	count=2
function	[function] http ||| [function]	count=3
function	false otherwise ||| exist	count=1
function	[function_1] development ||| [function_2] [function_1]	count=1
function	if disconnected from the ||| disconnected ?	count=1
arg	the version string ||| version	count=1
function	[returnv_1] status ||| [returnv_1] [function_2]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] member [function_2]	count=1
function	version of ruby ||| ruby api version	count=2
function_arg	[function_1] in list ||| [function_1] [arg_2]	count=1
arg	in mutex and ||| mutex timeout	count=1
module	raising a fileoverflow exception ||| boundedstream	count=1
function	create an output ||| setup output	count=1
function	returns true [function_2] ||| [returnv_1] sunday [function_2]	count=1
module	length and number of ||| rdoc stats	count=1
module	from this hash instance ||| generatormethods hash	count=1
function	as a der-encoded ||| to der	count=3
arg	httprequest object ||| body	count=1
module	they don’t already ||| generator darkfish	count=1
arg	to path if necessary ||| path update	count=1
function	uri of the remote ||| drburi	count=1
module	peer ||| ssl sslsocket	count=1
function	a siginfo ||| siginfo	count=1
arg	signer_cert ||| signer_cert	count=1
module	the [module] :context#workspace ||| [module]	count=1
function	text of the ||| text	count=1
module	accept_rule ||| rdoc markup rule	count=1
module	dns resources for ||| resolv dns	count=1
function	method for root directories ||| root	count=1
module	the [module] of the ||| [module]	count=1
function	reply 3xx reply ||| continue	count=1
function_arg	[function_1] indicated mailbox ||| [function_1] [arg_2]	count=2
function	[returnv_1] if the ||| [returnv_1] socket [function_2]	count=1
function	resets any parsed document ||| format=	count=1
arg	at uri ||| uri	count=1
module	key-value pairs for which ||| sdbm	count=1
module	webrick :httpresponse ||| webrick	count=1
module	output in irb ||| irb	count=1
module	overrides ||| matrix	count=1
arg	waiting for tag ||| tag obj	count=1
module	the response ||| net smtp response	count=2
module	ipaddr containing the ||| ipaddr	count=1
function	prepares the visitor ||| accept list	count=4
module	option summary ||| optionparser	count=1
module	adds ||| tottonly	count=1
module	sets ||| driver	count=1
arg	comment to be stored ||| comment	count=1
module	block over all prime ||| prime	count=1
module	will output html-safe labels ||| rdoc markup tolabel	count=1
function	attempts to [function_2] ||| [function_1] [function_2]	count=1
module	for executables ||| gem	count=1
module	returns the locale object ||| rdoc i18n locale	count=1
function	return true [function_2] ||| [returnv_1] [function_2]	count=3
function	command line ||| dir	count=1
module	environment variable for which ||| env	count=1
function	[returnv_1] the name ||| [returnv_1] [function_2]	count=2
function	version of [function_2] ||| [function_2] [function_1]	count=3
arg	exception error ||| error	count=1
function_arg	list of [arg_2] ||| [arg_2] [function_1]	count=7
function	docs will live ||| sub	count=1
module	a set of ||| gem	count=1
module	[module] qualified ||| [module]	count=1
module	given process ||| process	count=1
arg	to the path and ||| path	count=3
arg	whether or not to ||| opt	count=1
arg	child an element child ||| element	count=1
module	for all new cgi ||| cgi	count=1
function_arg	arctangent [arg_2] ||| [function_1] [arg_2]	count=3
function	[returnv_1] the flags ||| [function_2] [returnv_1]	count=1
module	this entity ||| rexml entity	count=2
arg	running ||| command... options	count=1
module	unless the keep_files environment ||| gem testcase	count=1
function	this is a header ||| header	count=1
returnv	returns the extension ||| string	count=1
arg	certificate ||| certificate	count=1
arg	to a [arg] ||| [arg] cert_chain	count=2
module	server listening on the ||| server	count=1
module	the ||| io	count=3
function	in ||| doc stats	count=1
module	comment for ||| rdoc	count=1
function_arg	returns the element [function_1] [arg_2] ||| array obj [function_1] [arg_2]	count=1
function	[returnv_1] locale ||| [returnv_1] [function_2]	count=1
function	invokes the given block ||| map	count=1
module	state object configured ||| json ext generator state	count=1
function	proxy uri for ||| proxy	count=1
function	opens a socks connection ||| new	count=1
function	read one byte from ||| getc	count=1
function	address of ipv4 mapped/compatible ||| to ipv4	count=1
function	is the ||| ?	count=4
module	fileoverflow exception if the ||| boundedstream	count=1
module	of this workspace and ||| irb workspace	count=1
function_arg	try [function_1] [arg_2] a ||| [function_1] [arg_2]	count=1
function	[function_1] hash consisting ||| [function_2] [function_1]	count=1
function_arg	subset of [arg_2] ||| [function_1] [arg_2]	count=1
module	length and number ||| rdoc	count=1
function	progress information if debugging ||| debug	count=1
function	use to configure ||| dir	count=1
module	will ||| parent	count=1
arg	creates [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
arg	for generator_name ||| generator_name	count=1
function_arg	attributes [arg_2] ||| [arg_2] [function_1]	count=1
module	this instruction sequence including ||| rubyvm instructionsequence	count=1
function_arg	module mod to ||| module mod self_hash	count=1
arg	the string ||| string filename lineno	count=1
function	to exit ||| to exit	count=1
module	list and all ||| list	count=1
module	they don’t already ||| darkfish	count=1
function	the visitor ||| item	count=4
module	state and ||| testcase	count=1
function	returns the length and ||| doc stats	count=1
arg	spec ||| spec	count=10
arg	from src ||| src filename	count=1
function	prints [function_2] ||| [function_2] [function_1]	count=1
arg	receives [arg] and calls ||| [arg]	count=1
arg	[arg_1] and password ||| [arg_1] [arg_2]	count=2
module	pass ||| ri	count=1
module	initialized when the ||| syslog logger	count=1
arg	given representation of ||| string comp start	count=2
arg	you [arg_2] ||| [arg_2] [arg_1]	count=6
function	:x509 ||| to name	count=1
module	directory may be entered ||| net ftp mlsxentry	count=1
function_arg	int from [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] on res ||| [arg_2] [arg_1]	count=11
arg	tag ||| tag	count=8
module	to rdoc ||| rdoc	count=1
module	format ||| rdoc generator pot	count=1
function	prepares the visitor for ||| accept list	count=4
function	[function_1] response ||| [function_2] [function_1]	count=1
function	this server? ||| here	count=1
module	command to ||| net imap	count=6
module	stat is a ||| stat	count=3
function	special sequences of ||| sequences	count=1
arg	object on to the ||| obj	count=1
arg	flushes text to the ||| text	count=1
arg	with the given options ||| args	count=1
function	token [function_2] ||| [function_2] [function_1]	count=1
function	hash value ||| hash	count=1
returnv	as a float ||| float	count=1
function	returns [function_1] [function_2] ||| [function_1] [function_2]	count=1
module	threadswait object specifying ||| threadswait	count=1
module	instructionsequence ||| rubyvm instructionsequence	count=1
arg	opens the given path ||| path	count=1
arg	formatted like [ lineno ||| lineno	count=1
arg	from a string ||| string start	count=6
function	[returnv_1] if unconverted_fields() ||| [returnv_1] [function_2]	count=1
module	the net :http#read_timeout and ||| xmlrpc client	count=1
function	starts tracing object ||| objectspace trace object	count=1
module	represent a module? ||| rdoc classmodule	count=1
function	ipv4 [function_2] ||| [function_1] [function_2]	count=4
function	this name as ||| to s	count=1
function	adds the file with ||| add file	count=1
arg	with a given key ||| key	count=1
function	will live ||| gen sub	count=1
function	returns the elements of ||| to	count=1
function	the valid ||| valid	count=1
arg	for ||| bin_file_name	count=1
arg	containing parts indented ||| parts	count=1
module	docs will live ||| rdoc generator	count=1
module	the generated docs will ||| generator	count=1
module	sibling that [module] ||| [module]	count=3
arg	the first minor by [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
module	of the comment ||| comment	count=2
function	certificate with ||| cert	count=2
function	[returnv_1] if ||| [returnv_1] have author [function_2]	count=1
function	returns the status stat ||| status	count=1
arg	integer index of the ||| index	count=1
function	to exit ||| exit	count=1
function	the system ||| system	count=1
arg	running on front ||| front desc renewer	count=1
module	xml-rpc server listening ||| server	count=1
function_arg	the gem [arg_2] ||| [function_1] [arg_2]	count=1
module	accept_heading_3 with ||| formattertestcase	count=1
module	ringfinger that ||| rinda ringfinger	count=1
module	they don’t ||| rdoc generator darkfish	count=1
function	product ||| product	count=2
function	json string and ||| json	count=1
arg	in io ||| io	count=1
arg	[arg_1] sec ||| [arg_1] [arg_2]	count=8
arg	buffer for pretty printing ||| output maxwidth newline &genspace;	count=1
module	ensures that :sslcertificate and ||| drbsslsocket	count=1
function	the stream ||| stream	count=1
function_arg	with [arg_2] ||| webrick httpversion [function_1] [arg_2]	count=4
module	for logger ||| logger	count=1
module	returns the length and ||| rdoc	count=1
function	[function_1] unconverted_fields() ||| [function_2] [function_1]	count=2
function	legacy platform spec ||| legacy platform	count=1
arg	with args ||| args	count=1
module	status ||| webrick httpstatus	count=2
function_arg	row [arg_2] ||| [arg_2] [function_1]	count=3
function	[returnv_1] block ||| [returnv_1] [function_2]	count=3
module	the ||| gem	count=8
module	form ||| gemdependencyapi	count=1
function	is rdoc documentation installed? ||| installed ?	count=1
function	visitor for consuming ||| accept	count=3
module	openssl :digest must ||| openssl pkey	count=1
arg	port and accepts requests ||| port	count=1
module	to certificates ||| gem	count=1
arg	httpresponse ||| body initheader	count=3
function	protected instance [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] anchor tag ||| [function_1] [arg_2]	count=1
module	method ||| unboundmethod	count=4
module	removes ||| rdoc rdoc	count=1
arg	options and [arg_2] ||| [arg_2] [arg_1]	count=2
arg	given [arg] using ||| [arg] opts	count=1
module	when the first ||| logger	count=1
function_arg	heading of [arg_2] ||| [function_1] [arg_2]	count=1
module	trusted certificate ||| security trustdir	count=1
arg	in enclosing ||| enclosing	count=1
module	tuplebag which when ||| rinda tuplebag	count=1
function	a class or ||| class	count=1
function	out ||| out	count=1
module	of the remote ||| drbobject	count=1
function	in addrinfo [function] form ||| [function]	count=1
arg	[arg_1] [arg_2] ||| [arg_1] end [arg_2]	count=4
function	an answer from the ||| choose from list	count=1
module	located at gem ||| gem	count=1
module	encoding converter ||| encoding converter	count=1
returnv	defined methods ||| self	count=1
returnv	object not ||| obj	count=1
module	tomdoc from text a ||| tomdoc	count=1
module	number ||| ssl	count=1
arg	[arg_1] container and ||| [arg_2] [arg_1]	count=2
function_arg	an attribute [arg_2] ||| [function_1] [arg_2]	count=2
function	proxy uri for ||| get proxy	count=1
function	the class [function_2] ||| [function_1] [function_2]	count=5
module	the visitor for ||| tomarkdown	count=1
returnv	[returnv] with both ||| [returnv]	count=2
function	openssl :x509 :name ||| email	count=1
function	five entries from ||| next5	count=1
function	accessor for the specific ||| specific	count=1
function	value of pi to ||| pi	count=1
arg	given offset then ||| offset	count=1
function	of parsed elements ||| rfc822	count=1
module	and stat is ||| stat	count=1
function	sets the named constant ||| const set	count=1
arg	[arg_1] key in ||| [arg_2] [arg_1]	count=6
function	“xhtml” ||| have xml content	count=1
function_arg	[function_1] string as ||| [arg_2] [function_1]	count=1
module	form for ||| gem requestset gemdependencyapi	count=1
arg	the mailbox to ||| mailbox	count=1
function	if this is a ||| ?	count=3
module	a availableset ||| gem availableset	count=1
function_arg	the dependency [arg_2] ||| [function_1] dep from_name from_version [arg_2]	count=1
module	file or nil if ||| file stat	count=1
function	[function_1] the proxy ||| [function_2] env [function_1]	count=1
function	[returnv_1] after ||| [function_2] [returnv_1]	count=4
module	number of undocumented items ||| rdoc stats	count=1
function	destination ||| dstaddr	count=1
function	the same seconds ||| eql	count=1
module	sends ||| net	count=2
function	is this ||| platform ?	count=4
arg	certificate with [arg_2] ||| [arg_2] [arg_1]	count=3
module	corresponding to the ||| httpstatus	count=1
function	method is added ||| method	count=1
module	create ||| generator	count=1
module	rd format ||| rd	count=1
arg	and returns to ||| to	count=2
function	return a time ||| to time	count=2
module	module where the ||| module	count=1
function	which represent the range ||| range	count=1
function	[returnv_1] if ||| [returnv_1] gmt [function_2]	count=1
arg	specs to specs ||| specs	count=1
arg	fills ||| page klass	count=1
module	of the ||| zlib	count=1
function	the unique [function_2] ||| [function_2] [function_1]	count=4
arg	mailbox ||| mailbox	count=8
function	is a field row ||| field row	count=1
arg	comment to comment ||| comment	count=1
arg	and source ||| source	count=1
module	attributes set ||| rdoc markup attributes	count=1
function	waits until all specified ||| all waits	count=2
module	initialized ||| logger	count=1
module	version ||| gem version	count=4
function	returns true if ||| bool terminated ?	count=1
function	headers ||| headers=	count=1
module	is ||| syslog logger	count=2
module	of this [module] assumed to ||| csv [module]	count=1
module	sym ||| symbol	count=2
module	gems ||| gemdependencyapi	count=1
function	list of paths matching ||| find files	count=1
function	the make command for ||| make command	count=1
function	replaces the contents ||| replace	count=2
arg	value ||| value	count=30
function	from comment if ||| comment tomdoc	count=1
function	[function_1] nonce validity ||| [function_2] [function_1]	count=1
function	groups ||| group	count=1
arg	marks up content ||| content	count=2
function	directory for [function_2] ||| [function_2] [function_1]	count=2
module	gems ||| gem	count=3
function	irb commands ||| extend commands	count=1
function	server in whatever ||| put	count=1
arg	file1 [arg_2] ||| [arg_1] [arg_2]	count=1
module	of known specs ||| specification	count=1
module	deprecate and remove ||| testcase	count=1
function	marks ||| convert	count=2
arg	the reference ||| ref	count=1
function	a module [function_2] ||| [function_2] [function_1]	count=2
module	files so ||| gem	count=1
returnv	keypair [returnv] ||| [returnv]	count=2
function_arg	[function_1] name and ||| [arg_2] [function_1]	count=1
module	for marking ||| markup	count=1
module	reading the [module] so ||| [module]	count=1
arg	class_name or ||| class_name	count=1
module	represents this specification ||| specification	count=1
function	[function_1] [function_2] an integer representing the ||| [function_2] [function_1]	count=2
module	the listitem ||| listitem	count=1
function	if there ||| value ?	count=1
module	this function ||| fiddle function	count=1
module	parser is ||| parser	count=1
function	scans content for ||| do	count=4
function	delegator ||| delegator	count=1
module	n’th ||| rexml elements	count=1
module	this constant for use ||| rdoc constant	count=1
function	returns true if ||| bool wednesday ?	count=1
module	the remote object ||| drb drbobject	count=1
function	the complementary error function ||| erfc	count=1
module	the mdns resolver provided ||| resolv mdns	count=1
function	for ||| accept	count=4
module	the alias of ||| alias	count=1
arg	given str ||| str enc separator: '&' use__charset_: false isindex: false	count=1
arg	where [arg] ||| [arg]	count=3
function	a hash code for ||| hash	count=1
arg	uses [arg] ||| [arg]	count=3
module	the ||| drb drbsslsocket sslconfig	count=2
function	remove ||| remove	count=2
module	multiple rdoc ||| rdoc classmodule	count=1
arg	given string and ||| string	count=1
function	the block length of ||| block length	count=3
arg	text name [arg_2] ||| [arg_2] [arg_1]	count=3
module	command [module] ||| [module]	count=3
module	comments recorded ||| gzipfile	count=1
arg	name with mode ||| name mode	count=1
function	a successful ||| success	count=1
arg	value [arg_2] ||| [arg_2] [arg_1]	count=4
function	relative to a ||| relative	count=1
function	loads ri data ||| load	count=2
module	prepares the visitor for ||| tordoc	count=3
arg	receives [arg] and ||| [arg]	count=1
module	activation request’s specification ||| activationrequest	count=2
function	mode for use ||| mode	count=1
returnv	returns [returnv] with ||| [returnv]	count=1
function_arg	copies stream [arg_2] ||| [function_1] [arg_2]	count=3
arg	the level [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] ‘nz_number’ in ||| [function_1] [function_2]	count=3
returnv	the next [returnv] in ||| [returnv]	count=1
arg	[arg_1] options may ||| [arg_2] [arg_1]	count=4
function	returns the last item ||| last	count=1
function_arg	initializes this object [function_1] [arg_2] ||| ext generator state initialize [function_1] [arg_2]	count=2
arg	[arg] be duplicated/cloned ||| [arg]	count=1
function	unspecified ||| unspecified	count=1
arg	name in a ||| name	count=1
function	[function_1] parent ||| [function_2] [function_1]	count=1
arg	for the given host ||| host	count=1
arg	one of sec seconds ||| sec	count=1
module	identical objects as much ||| gem indexer	count=1
function	[function_1] the variable ||| parser c [function_1] [function_2]	count=1
function	creates a new ||| create	count=1
function	to ||| add	count=1
function	the current source string ||| source	count=1
module	for ||| openssl ssl	count=1
module	up ||| markup formatter	count=2
arg	title and [arg_2] ||| [arg_1] [arg_2]	count=1
module	starting at num ||| numeric	count=1
function	finds a instance ||| find	count=1
arg	the given index ||| index obj...	count=2
arg	has [arg] as the ||| [arg] stime cutime cstime	count=1
module	block form for ||| gem requestset	count=1
function	[function_1] a rational ||| [function_2] [function_1]	count=2
function	array [function_2] ||| [returnv_1] [function_2]	count=1
function	gets the main page ||| main	count=1
module	file lists have redundancies ||| gem	count=1
function_arg	[function_1] [arg_2] ||| [function_1] from env [arg_2]	count=6
module	this activation is ||| resolver activationrequest	count=1
function	of ‘universal’, they ||| ===	count=1
module	can then ||| makemakefile	count=1
function	[returnv_1] [function_2] ||| [returnv_1] quirks mode [function_2]	count=3
module	apiset that ||| gem resolver apiset	count=1
function	parameters and [function_2] ||| [function_1] [function_2]	count=2
module	[module] of ||| [module]	count=13
function	merges the ||| merge	count=2
function	information if debugging ||| debug msg	count=1
module	returns an initialized tms ||| tms	count=1
module	with the other ||| drb	count=1
module	original state ||| gem testcase	count=1
module	advancing the [module] ||| [module]	count=1
module	this section if it ||| context section	count=1
function	get request to ||| request get	count=2
function	the classes ||| classes and	count=1
function	name of [function_2] ||| [function_2] [function_1]	count=1
function	in the machine representation ||| size	count=1
arg	pointer addr ||| addr	count=1
module	specs ||| gem specification	count=1
arg	equivalent ||| obj ...	count=1
arg	or a [arg_2] ||| [arg_2] [arg_1]	count=1
module	a toplevel ||| toplevel	count=1
module	keep_files ||| gem testcase	count=1
function	single-row matrix from this ||| covector	count=1
module	of ||| requestset	count=1
function_arg	[function_1] decimal ||| [function_1] [arg_2]	count=6
module	so that all ||| specification	count=1
function	the status ||| status	count=5
function	[function_1] mapped/compatible ||| [function_2] [function_1]	count=8
function	path from the ||| path from	count=2
module	[module] are ||| gem [module]	count=1
module	unless documentation has ||| codeobject	count=1
function_arg	initializes this object [function_1] [arg_2] be duplicated/cloned and returns ||| ext generator state initialize [function_1] [arg_2]	count=1
module	to ||| ri driver	count=2
function	user ||| config	count=1
function	last win32 error ||| win32 last error	count=2
arg	request to the path ||| path	count=7
module	the ||| syslog	count=2
function	creates [function_2] ||| text [returnv_1] [function_2]	count=1
function	prepares ||| accept list item	count=4
arg	method method ||| method	count=1
module	the currently selected mailbox ||| imap	count=1
module	in the [module] to checksums ||| [module]	count=1
function_arg	on [arg_2] ||| [function_1] [arg_2]	count=1
module	state [module] resolutionstate an ||| [module]	count=1
module	the empty string ||| string	count=1
function	of default ||| unresolved default	count=1
module	this ocsp request ||| ocsp request	count=1
function_arg	modification [arg_2] ||| time [function_1] [arg_2]	count=1
module	that calls ||| markup	count=1
function	in a normal ||| in	count=1
function	copy ||| copy	count=2
module	ri data installed into ||| rdoc ri	count=1
function_arg	setter for [arg_2] ||| [arg_2] [function_1]	count=5
function	handle the ||| handle options	count=1
module	bytes that are immediately ||| ssl	count=1
function	directives [function_2] ||| [function_2] [function_1]	count=4
module	as an array ||| cgi	count=1
module	‘:’ in json ||| json	count=1
function	a prerelease? ||| prerelease	count=1
function	openssl ||| to	count=1
arg	field [arg_2] ||| [arg_2] [arg_1]	count=1
function	directories the generated ||| directories	count=1
arg	the given types ||| types func	count=1
arg	handling req ||| req	count=1
function_arg	[function_1] inline ||| [arg_2] [function_1]	count=1
function	for ipv4 multicast ||| ipv4 multicast	count=1
module	has ||| rdoc codeobject	count=2
module	marks ||| rdoc markup tohtmlsnippet	count=2
module	the ||| rdoc generator darkfish	count=4
function	verify ||| verify signatures	count=1
function	to the build ||| build	count=1
function	tuesday ||| tuesday	count=1
module	nameerror exception ||| nameerror	count=1
function	and number of ||| doc	count=1
function	tts ||| accept block	count=1
function	[returnv_1] if there ||| [function_2] [returnv_1]	count=6
module	parameters ||| drb drbsslsocket sslconfig	count=2
module	unless a private ||| openssl pkey dh	count=1
function	[function_1] version ||| [function_2] 1 [function_1]	count=1
arg	pages in store ||| store pages search	count=2
module	http ||| request	count=1
module	if supplied ||| parent	count=1
function	handle the given ||| handle	count=1
arg	[arg_1] front with ||| [arg_1] [arg_2]	count=1
arg	isapop ||| isapop	count=1
function	on ||| config	count=1
function	[returnv_1] key ||| [returnv_1] [function_2]	count=1
module	documentation unless documentation has ||| rdoc	count=1
module	be installing into ||| gem	count=1
function	returns a copy ||| clone	count=1
arg	name with the given ||| name	count=1
module	the ‘:’ in json ||| json	count=1
returnv	object ||| object	count=2
arg	to an ||| sym	count=1
module	for restricting gems to ||| gem requestset gemdependencyapi	count=1
function	closed? ||| closed	count=2
arg	signer [arg_2] ||| [arg_1] issuer [arg_2]	count=1
arg	value value with ||| value	count=1
module	gets various ||| ssl sslcontext	count=1
function	version [function_2] ||| [function_1] [function_2]	count=1
arg	title [arg_2] ||| [arg_1] [arg_2]	count=1
module	use ||| makemakefile	count=1
module	accept_paragraph ||| rdoc markup paragraph	count=1
arg	given object or binding ||| _main	count=1
module	xmlrpc ||| xmlrpc	count=5
function	[function] number ||| [function]	count=3
function	quietly ensure ||| ensure	count=2
function	dump only the ||| marshal dump	count=1
function_arg	[function_1] path ||| [function_1] url [arg_2]	count=4
module	store ||| x509 store	count=1
function	the user can ||| dir	count=1
module	documentation unless documentation ||| codeobject	count=1
function	of the underlying ||| s	count=1
arg	markup_item ||| markup_item	count=1
arg	for the [arg] gem ||| [arg]	count=1
arg	op of the ||| op x	count=1
module	object if ||| drbobject	count=1
module	for html ||| rdoc markup tohtml	count=1
arg	object without opening a ||| p_addr p_port p_user p_pass	count=1
module	used for ||| gem	count=1
function	serial number of the ||| serial	count=1
rep	the ri [function_arg_2] ||| [module_1] paths [function_arg_2]	count=1
function_arg	[function_1] given scheme ||| [arg_2] [function_1]	count=3
function	underlying ||| write	count=1
module	gem dependencies files ||| gem requestset	count=1
function	to a ||| inspect key	count=1
module	the encoding object ||| io	count=1
module	the requirement ||| gem requirement	count=1
rep	[module_1] path str ||| [module_1] [function_arg_2]	count=1
module	[module] by ||| [module]	count=2
function_arg	arc tangent [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] of dependency ||| [arg_2] [function_1]	count=2
module	a class to wrap ||| fiddle importer	count=2
module	the generated json to ||| json ext	count=1
module	keys from [module] ||| [module] httpservlet	count=3
module	an ||| elements	count=1
function	default [function] of ||| spec [function]	count=1
module	ipaddr is ||| ipaddr	count=1
arg	[arg_1] cpu ||| [arg_2] [arg_1]	count=2
function	which this ||| element=	count=1
module	if it isn’t available ||| thread mutex	count=1
function	remove the [function] ||| delete [function]	count=1
module	parser ||| parser ruby	count=2
module	lists ||| gem	count=1
arg	log ||| progname	count=1
module	generated docs ||| rdoc	count=1
function	the directories the ||| sub directories	count=1
function	the ip address ||| getaddress	count=2
function	[returnv_1] [function_2] the ||| [returnv_1] exclude end [function_2]	count=1
function	class corresponding to ||| []	count=1
function	[function_1] [function_2] in the database ||| [function_2] [function_1]	count=3
function	object for [function] ||| [function]	count=1
module	last list ||| optparse	count=1
module	locale object for ||| rdoc i18n locale	count=1
arg	[arg_1] cn ||| cert [arg_1] [arg_2]	count=2
function	temporary directory with ||| create tmpdir	count=1
function	returns the ||| to	count=10
function	string of [function_2] ||| [returnv_1] to [function_2]	count=1
arg	subclass [arg] that can ||| [arg]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] initial length= [arg_2]	count=9
module	this object’s ||| rdoc	count=1
function_arg	[function_1] obj into ||| try [function_1] [arg_2]	count=2
module	with on the command ||| makemakefile	count=1
function	if yield would execute ||| iterator ?	count=1
module	this ||| context	count=1
function	if this source ||| ?	count=1
function	a new remote ||| new	count=1
arg	command exists [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg] using ||| [arg]	count=1
module	a [module] instead of ||| [module]	count=1
module	to just ||| markup tolabel	count=1
module	all ||| specification	count=1
function	if not ||| ?	count=3
function	parses a [function_2] ||| [function_1] [function_2]	count=3
module	the visitor ||| markup tohtml	count=2
module	a command ||| gem command	count=1
module	ios using the ||| io	count=1
function	variables this method is ||| variables	count=1
arg	other is subset of ||| other	count=1
module	fields in ||| gem specification	count=1
arg	[arg] according ||| [arg]	count=9
function	[returnv_1] the block ||| [function_2] [returnv_1]	count=3
module	for which an rdoc ||| rdoc	count=1
module	the ||| benchmark	count=2
arg	named ||| mode	count=1
function_arg	if this [arg_2] ||| sourcelist bool include [function_1] [arg_2]	count=1
module	[module] no maximum ||| json [module]	count=1
function	path ||| set path	count=1
function	[function_1] range object ||| ipaddr [function_1] [function_2]	count=1
module	to pass output through ||| rdoc ri	count=1
function_arg	[function_1] [arg_2] ||| [function_1] version tag_directives [arg_2]	count=3
function	logger output info ||| info	count=1
module	marking up this object’s ||| rdoc generator	count=1
function	[function_1] starts ||| [function_2] [function_1]	count=4
function	contains the specified ||| member	count=1
function	from ||| block	count=1
function	sets ||| []=	count=1
module	that ||| ssl	count=1
arg	if count ||| count	count=1
module	return ||| xmlrpc	count=1
module	in the spec ||| gem	count=1
arg	specified mailbox ||| mailbox	count=5
function	the reference ||| drbref	count=1
function	if ||| gen sub	count=1
module	in ||| old	count=1
function	prints a file ||| print file	count=3
arg	signing_cert using ||| signing_cert	count=1
arg	out a ||| out indent	count=1
function	[function] effective and ||| [function]	count=1
function	can handle a ||| can parse	count=1
function	length ||| doc stats	count=1
function	creates [function] ||| [function]	count=6
function	returns ||| to s	count=4
function_arg	an info message ||| info message	count=1
module	resolver object which will ||| gem resolver	count=1
function	returns true if ||| bool sticky ?	count=1
arg	dependency is satisfied ||| dependency	count=1
function	returns true [function_2] ||| [returnv_1] proxy class [function_2]	count=4
function	variable map with ||| variable map	count=1
arg	to real ||| real	count=1
function	a socks connection ||| new	count=1
arg	end and style ||| style	count=1
module	file as an object ||| file	count=1
module	image with the ||| photoimage	count=1
function	transfer ||| transfer	count=1
arg	starting at directory root ||| root	count=1
arg	start and [arg_2] ||| [arg_1] [arg_2]	count=2
module	matrix or ||| matrix	count=1
function	the rounding ||| rounding	count=1
module	only the [module] for ||| [module]	count=1
arg	[arg_1] tag ||| [arg_2] [arg_1]	count=15
function	unique classes and ||| unique classes and	count=3
returnv	an array of strings ||| array	count=2
function_arg	match [arg_2] ||| [arg_2] [function_1]	count=2
function	singleton method is ||| singleton method	count=2
arg	[arg_1] [arg_2] ||| file fnmatch [arg_2] [arg_1] false	count=4
arg	the given ||| code_object	count=1
function	block device ||| blockdev	count=2
function	scans content ||| do singleton	count=1
module	all file lists ||| gem	count=1
module	that all file ||| specification	count=1
function	directory where ||| dir	count=3
function	the hostname for ||| getname	count=1
arg	remote_port ||| remote_port local_host	count=1
function	the discarded [function_2] ||| [function_1] [function_2]	count=1
arg	namespace [arg_2] ||| [arg_1] [arg_2]	count=1
module	or ||| sslconfig	count=1
arg	[arg_1] for generator_name ||| [arg_2] [arg_1]	count=4
function	[function_1] public ||| [function_2] [function_1]	count=2
arg	of text ||| text	count=1
arg	in file_name which ||| file_name	count=1
function	its ancestors [function_2] ||| [function_2] [function_1]	count=4
function	contains ||| member	count=2
module	current token ||| ripper	count=1
function	for the first ||| first	count=1
function	list of ||| generator	count=1
function	cannot be found ||| rassoc	count=1
arg	for time ||| time	count=2
function	[returnv_1] if ||| [returnv_1] directory makable [function_2]	count=1
arg	width ||| width	count=2
function	finds a class or ||| find class	count=1
module	and ||| zlib inflate	count=1
arg	[arg_1] string attributes ||| [arg_2] [arg_1]	count=3
function	hex-encoded form keeping ||| hexdigest	count=1
function	to set irb_name of ||| n jobs	count=1
function	the thread ||| thread	count=1
arg	if [arg_2] ||| [arg_2] [arg_1]	count=9
module	are ||| sslsocket	count=1
rep	[module_1] [function_arg_2] ||| [module_1] gen [function_arg_2]	count=1
function	public key associated ||| public	count=1
arg	the [arg] gem ||| [arg]	count=1
arg	source and moves ||| source	count=1
function	[function_1] nonce validity ||| [function_1] [function_2]	count=1
returnv	of [returnv] replacing ||| [returnv]	count=1
module	raw ||| markup raw	count=1
module	if supplied will be ||| rexml	count=1
function_arg	existing [arg_2] ||| [arg_2] [function_1]	count=1
module	command with ||| gem command	count=1
returnv	to an ||| abs_file_name	count=2
function	block form ||| platform	count=1
module	class << ||| rdoc singleclass	count=1
module	the net :http#read_timeout ||| xmlrpc client	count=1
module	object’s and _getobj_ ||| delegator	count=1
module	stream emission see psych ||| psych emitter	count=1
arg	containing parts ||| parts	count=3
function	[function] old_name ||| [function]	count=3
module	object in enum with ||| enumerable	count=1
function	id for ||| id	count=1
module	use ||| array	count=1
module	of the remote ||| drb drbobject	count=1
module	of ec ||| converter	count=1
module	if supplied will be ||| parent	count=1
returnv	that are immediately ||| integer	count=1
arg	with items ||| items	count=1
arg	[arg_1] tag an ||| [arg_2] [arg_1]	count=2
function	post request to the ||| request post	count=1
function	[returnv_1] [function_2] ||| [returnv_1] block given [function_2]	count=1
module	syslog notice log level ||| syslog	count=1
function_arg	write [arg_2] ||| [function_1] [arg_2]	count=4
module	to html ||| rdoc methodattr	count=1
function	preset dictionary and ||| set dictionary	count=1
function	removes the encoding magic ||| remove coding	count=1
returnv	elements of ary ||| ary	count=1
module	the number ||| openssl	count=1
function	returns the list ||| name list	count=1
module	state ||| cgi	count=1
arg	to host and path ||| path host	count=1
function	of the remote object ||| drburi	count=1
module	locked [module] is ||| [module]	count=1
function	a post request ||| request post	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	auth login ||| login auth	count=2
module	string representation of symbol ||| symbol	count=1
arg	creates a temporary file ||| basename tmpdir	count=1
function	the option parser ||| option	count=2
arg	[arg_1] handling req ||| [arg_2] [arg_1]	count=1
arg	string key ||| key	count=1
function	items in ||| doc stats	count=1
function	returns the status ||| []	count=1
module	a markdown ||| rdoc markup tomarkdown	count=1
module	same method ||| method	count=1
function	the parameters and ||| params and	count=1
function_arg	[function_1] form ||| [arg_2] [function_1]	count=3
function	response as ||| response	count=1
arg	[arg_1] an ||| [arg_2] [arg_1]	count=4
arg	spec? note match? only ||| spec allow_prerelease	count=1
arg	of numeric which ||| numeric	count=1
function	adds [function_2] ||| [function_2] [function_1]	count=5
arg	value according [arg] ||| [arg]	count=1
module	for the password component ||| generic	count=1
arg	template and ||| format	count=1
module	setter ||| rss baselistener	count=1
function	the status [function_2] ||| [function_1] [function_2]	count=1
arg	the given calendar ||| year month mday	count=4
arg	klass service running ||| klass	count=1
returnv	list of ||| array	count=1
arg	on [arg] values ||| [arg]	count=2
module	state and removes ||| gem	count=1
arg	present or fills ||| page klass	count=1
arg	of numeric and ||| numeric	count=1
function	superset of ||| superset	count=1
module	version from ||| gem	count=1
module	:next :return or ||| localjumperror	count=1
function	in if they don’t ||| gen sub	count=1
module	[module] that is ||| [module]	count=1
module	graph to ||| molinillo	count=1
function	the full [function] name ||| [function]	count=1
returnv	are true ||| bool	count=1
arg	with needed ||| needed	count=1
function_arg	adds paths [arg_2] ||| [arg_2] [function_1]	count=2
arg	setter for [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
module	nametuple ||| gem nametuple	count=2
function	[returnv_1] [function_2] the ||| [returnv_1] has [function_2]	count=1
function	of ruby ||| old ruby	count=1
arg	true [arg] is present ||| [arg]	count=1
function	[function_1] mkd ||| [function_2] [function_1]	count=2
module	returns the elapsed ||| benchmark	count=1
function	linking ||| aref	count=1
function	gems to a set ||| platform	count=1
module	lists have redundancies removed ||| specification	count=1
function_arg	[function_1] to out ||| [function_1] [arg_2] type extensions	count=2
function	returns the win32ole_typelib ||| typelib	count=1
function	warning ||| alert warning	count=1
function_arg	a stream [arg_2] ||| [function_1] [arg_2]	count=1
module	true ||| gem basicspecification	count=1
arg	to the specified host ||| host	count=1
module	removes the tempdir unless ||| testcase	count=1
arg	fix is greater than ||| fix	count=1
arg	a and b ||| a b	count=1
module	json objects ||| json ext generator	count=2
function	block in the ||| block	count=1
function	creates [function] for ||| [function]	count=1
function	all classes ||| classes	count=1
module	representing the [module] permission bits ||| [module]	count=4
module	returns a properly-space list ||| rdoc options	count=1
function	an [function] named ||| [function]	count=1
function_arg	[function_1] the value ||| [function_1] [arg_2]	count=3
arg	encoding standalone ||| encoding standalone	count=2
module	generated json #max_nesting ||| json ext generator	count=1
module	this codeobject is in ||| rdoc codeobject	count=1
function	modules nested at the ||| nesting	count=1
function_arg	sends [arg_2] ||| [function_1] [arg_2]	count=1
function	the directories the generated ||| directories	count=1
function	the default ||| default	count=13
arg	a meta-programmed attribute ||| single tk comment	count=1
module	prepares the ||| markup tohtml	count=3
function_arg	gem with ||| gem dir name	count=1
module	mdns resolver ||| resolv mdns	count=1
module	if ||| rexml	count=2
module	marking up ||| rdoc generator markup	count=1
module	of ||| specification	count=1
arg	and prefix ||| prefix	count=1
arg	of nodes matching ||| path namespaces variables	count=1
function	skip the ||| skip	count=1
function	reference of the ||| drbref	count=1
function	space before the ‘:’ ||| space before	count=1
function	saturday ||| saturday	count=1
function_arg	[function_1] for name ||| [arg_2] [function_1]	count=5
function	a ||| dir config	count=1
module	ftp connection to ||| net ftp	count=1
module	date with julian year ||| date	count=1
function	the parameters and body ||| params and body	count=1
function	serious security hole ||| set debug output	count=1
function_arg	[function_1] spec in ||| [function_1] requirement activated [arg_2]	count=1
arg	denoting the given calendar ||| year month mday	count=2
function_arg	[function_1] [arg_2] ||| [function_1] set [arg_2]	count=33
function	latest version ||| latest version	count=1
function	opaque ||| opaque=	count=1
module	the first digit of ||| response	count=1
module	attr with body ||| attr	count=1
module	the visitor ||| tordoc	count=2
module	returns the ||| webrick	count=1
function	header row ||| header row	count=4
function	self-signed certificate with an ||| create cert	count=1
arg	size ||| size initial_message terminal_message	count=1
function	and [function] the ||| [function]	count=1
module	key-value ||| sdbm	count=1
returnv	encoding object ||| encoding	count=2
function	rewinds ||| rewind	count=1
module	block form for ||| requestset	count=1
function	the visitor for ||| list	count=4
module	by ||| rdoc	count=1
module	5 rdoc ||| rdoc	count=1
function	child ||| child	count=1
function	is rdoc documentation installed? ||| rdoc installed ?	count=1
function	as a pipeline ||| pipeline start	count=2
function	returns a proxy ||| proxy from	count=1
function	given ordinal ||| ordinal	count=1
module	a json ||| json	count=2
function	extracts parameters from ||| rb scan	count=1
function	can safely be ignored ||| allow missing ?	count=1
module	tobs that ||| tobs	count=1
module	of a ||| instance	count=1
function	xlist ||| xlist	count=1
function	the close [function_2] ||| [function_2] [function_1]	count=3
module	indicate that the ||| resolver dependencyrequest	count=1
module	assigns ||| csv row	count=1
arg	[arg_1] text ||| [arg_1] [arg_2]	count=2
function	to configure various “with” ||| config	count=1
function	look up a module ||| symbol module	count=1
arg	n matrix a ||| n	count=1
module	the spec ||| specification	count=2
module	@param index ||| rexml parent	count=1
module	module ||| module	count=4
arg	or the attribute to ||| attribute	count=1
module	remote object ||| drbobject	count=1
module	this singleton ||| rdoc singleclass	count=1
function_arg	[function_1] given set ||| [function_1] ? [arg_2]	count=2
function_arg	creates a [function_1] [arg_2] ||| socket [function_1] loop [arg_2]	count=1
arg	also_in ||| also_in	count=1
module	the document ||| markup document	count=3
rep	[module_1] path str ||| [module_1] escape [function_arg_2]	count=1
function	public key associated with ||| public ?	count=1
module	notifytemplateentry of ||| notifytemplateentry	count=1
module	tobs that ||| markup tobs	count=1
function	true [function_2] ||| dependencygraph vertex [returnv_1] path [function_2]	count=1
function	if there are no ||| empty ?	count=5
function	ensures the gem :specification ||| spec	count=1
module	call ||| module	count=1
function	[function] date object ||| [function]	count=1
module	mtch ||| matchdata	count=1
function_arg	notifications of [arg_2] ||| [arg_2] [function_1]	count=1
function	next object as ||| next	count=1
module	:hosts using ||| hosts	count=1
function	a head [function_2] ||| [function_2] [function_1]	count=4
function	searches for the executable ||| executable	count=1
function	an rubygems ||| rubygems	count=1
function	::clock_getres() ||| getres	count=1
module	[module] to ||| [module]	count=19
function	ipv4 loopback address 127 ||| ipv4 loopback	count=1
arg	example klass ||| klass	count=1
arg	obj ||| obj	count=31
module	don’t ||| rdoc	count=1
module	have ||| gem specification	count=1
function	remote gems should be ||| remote	count=1
module	unless ||| rdoc codeobject	count=2
function	[function_1] auth cram-md5 ||| [function_1] [function_2]	count=1
function	contains ||| has key	count=1
module	of [module] repeatedly ||| [module]	count=1
arg	:row from [arg_1] [arg_2] are expected to be ||| [arg_1] [arg_2] header_row	count=1
function	[function_1] module ||| [function_1] enclosing [function_2]	count=1
function_arg	matching [arg_2] ||| [arg_2] [function_1]	count=2
module	if local ||| drbobject	count=1
function	executing thread to ||| error=	count=1
module	handle ||| gem command	count=1
function	all gems ||| all	count=1
function	ipv4 private ||| ipv4 private ?	count=2
module	this task ||| rdoc task	count=1
module	specs in sorted order ||| specification	count=1
arg	out ||| out input	count=1
module	a password from the ||| httpauth htpasswd	count=1
module	command to remove the ||| net imap	count=2
function_arg	the modification [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] a singleton ||| [function_2] [function_1]	count=1
function	directory [function_2] ||| [function_2] [function_1]	count=2
module	the first instance is ||| logger	count=1
module	component ||| uri generic	count=15
module	first ||| syslog	count=1
module	prevent conversion to ||| markup attributemanager	count=1
function	[returnv_1] if this ||| [returnv_1] json creatable [function_2]	count=1
function	the hash value ||| hash	count=1
function	individual raw [function_2] ||| [function_2] [function_1]	count=3
function	multi-call handler system ||| multicall	count=1
module	fields in ||| gem	count=1
function	[function_1] a block ||| [function_2] [function_1]	count=4
arg	from the specified object ||| obj	count=1
module	visitor for ||| markup totableofcontents	count=1
arg	io [arg_2] ||| [arg_2] [arg_1]	count=1
module	stat ||| file stat	count=14
arg	n by n ||| n	count=1
module	as ||| rexml parent	count=2
function	with on the ||| config	count=1
function	parses ||| parse !	count=1
function	any ||| have	count=1
function	subset of ||| >	count=1
function	require a prerelease? ||| prerelease ?	count=1
function_arg	pass [arg_2] ||| [function_1] pass [arg_2]	count=4
function	options to the ||| options	count=1
module	pixel ||| tkphotoimage	count=2
function	current source string ||| source	count=1
module	version of [module] ||| [module]	count=1
module	irb :irbloader#source_file irb ||| irb extendcommandbundle	count=1
module	in mod ||| module	count=4
arg	headers you provide ||| headers	count=1
arg	information about ole ||| ole_type	count=1
module	the [module] given ||| [module]	count=2
function	key [function] in the ||| each [function]	count=1
module	to dlclose() when this ||| fiddle	count=1
function	the [function_1] [function_2] ||| gem [function_1] [function_2]	count=4
function	which ||| element=	count=1
function	creates an rubygems ||| rubygems	count=1
module	if ||| generator	count=1
function	hash of [function_2] ||| [returnv_1] [function_2]	count=4
function	add [function_2] ||| [function_1] [function_2]	count=1
module	returns ||| pathname	count=1
function	loads the [function_2] ||| parser c [function_1] [function_2]	count=4
arg	[arg_1] and y ||| [arg_1] [arg_2]	count=1
module	the digest is set ||| openssl digest	count=1
arg	::capture3 captures the ||| stdin_data: '' binmode: false opts	count=1
function	[returnv_1] the last ||| [function_2] [returnv_1]	count=2
returnv	the point of ||| array	count=1
module	syslog err ||| syslog logger	count=1
arg	to dest ||| dest	count=2
module	already exist ||| rdoc	count=1
module	date is ||| date	count=1
arg	name with [arg_2] ||| [arg_1] target [arg_2]	count=3
arg	named files in ||| options	count=1
arg	[arg_1] stats in ||| [arg_1] [arg_2]	count=4
module	up this object’s comment ||| generator markup	count=1
function	a self-signed certificate ||| create cert	count=1
function	end [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] float [arg_2]	count=4
function_arg	the value of fix [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	[returnv_1] if the ||| [returnv_1] sid available [function_2]	count=2
function	if ||| include ?	count=2
module	class method/attribute ‘#’ for ||| rdoc methodattr	count=1
function	returns the hyperbolic sine ||| sinh	count=1
function_arg	the struct [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] with ||| [function_1] [arg_2]	count=1
arg	for the key ||| key age	count=2
arg	anchor tag an implicit ||| anchor tag implicit	count=1
returnv	use vector[] [returnv] ::elements to ||| [returnv]	count=1
arg	[arg_1] source_uri to ||| [arg_1] [arg_2]	count=1
module	rows ||| csv table	count=1
module	converts ||| rdoc markup formatter	count=2
function	unique local address ||| unique local	count=1
function	[function] so that ||| rotate [function]	count=3
function	name ||| config	count=1
function	end of the ||| end	count=1
module	they don’t ||| darkfish	count=1
module	writes ||| gem security	count=1
module	new uri :ftp ||| uri ftp	count=1
module	for this request and ||| openssl ocsp request	count=1
function_arg	proxy uri [arg_2] ||| [arg_2] [function_1]	count=1
arg	given path returning the ||| path mode	count=1
function	by result ||| by	count=1
function	sorts ||| sort	count=1
function	to the [function] gem ||| [function]	count=1
function_arg	special [arg_2] ||| [function_1] [arg_2]	count=2
returnv	of bytes that are ||| integer	count=1
function_arg	[function_1] string or ||| [arg_2] [function_1]	count=1
function	of global [function_2] ||| [function_2] [function_1]	count=1
function	returns true [function_2] ||| [returnv_1] executable real [function_2]	count=2
arg	status and ||| status	count=2
function_arg	paths matching [arg_2] ||| [function_1] [arg_2] check_load_path	count=1
function	which to search for ||| get	count=1
module	case which ||| rdoc markup formattertestcase	count=1
arg	[arg_1] to value ||| ext generator state []= [arg_1] [arg_2]	count=1
module	rdoc :attr ||| rdoc	count=4
arg	root [arg_2] ||| [arg_2] [arg_1]	count=4
function	x509v3 [function] as array ||| [function]	count=1
arg	unpacked at path ||| path	count=1
module	lists have redundancies removed ||| gem	count=1
arg	extensions for the key ||| key age extensions	count=2
function	existing attribute by the ||| attribute	count=1
module	index @param index the ||| rexml parent	count=1
module	the vertices ||| dependencygraph	count=1
module	indices as row ||| csv table	count=1
module	index @param ||| rexml parent	count=1
function	the logger output error ||| error	count=1
returnv	floating point number of ||| float	count=1
function	[function_1] entry ||| fileutils remove [function_2] [function_1]	count=1
arg	object passed in data ||| data	count=1
arg	for the named file ||| file_name	count=2
module	password in the database ||| webrick httpauth htpasswd	count=1
function	[function] certificates to ||| set [function]	count=2
function	enable capture of documentation ||| doc	count=1
arg	the given ||| obj...	count=1
function	[returnv_1] [function_2] the ||| [returnv_1] body permitted [function_2]	count=1
module	of ||| cmath	count=11
function	does this ||| ?	count=1
function	basic list ||| basic word	count=1
function_arg	creates a [arg_2] ||| datetime datetime [function_1] [arg_2] offset start	count=1
returnv	returns an array ||| array	count=24
module	the [module] see ||| [module]	count=2
function	the inverse hyperbolic sine ||| asinh	count=1
module	the table of ||| totableofcontents	count=1
function	[function_1] [function_2] ||| [function_2] out [function_1]	count=2
function	head request to the ||| request head	count=1
function	yes [function_2] ||| [function_1] [function_2]	count=1
module	this singleton class ||| singleclass	count=1
function_arg	[function_1] address ||| [arg_2] [function_1]	count=9
function	[returnv_1] if the ||| [returnv_1] re exchangeable [function_2]	count=1
module	exist ||| rdoc generator darkfish	count=2
arg	[arg] empty string ||| [arg]	count=2
function	docs will ||| sub	count=1
module	conflict with ||| conflict	count=1
arg	env ||| env	count=1
module	the table of contents ||| totableofcontents	count=1
module	adds ||| gem command	count=1
module	filters ||| ri driver	count=1
function	from_version requesting [function] ||| [function]	count=3
function	adds ||| push	count=1
arg	column_count ||| column_count	count=1
function	the reference of ||| drbref	count=1
function	paths [function_2] ||| [function_2] [function_1]	count=1
module	default ||| drb drbserver	count=3
function	[function_1] [function_2] the database ||| yaml dbm [function_2] [function_1]	count=3
function	default ||| unresolved default	count=1
arg	- string salt - ||| salt	count=2
arg	[arg_1] given arguments ||| [arg_2] [arg_1]	count=1
arg	issuer cn and a ||| cn	count=1
function	[returnv_1] if nan ||| [function_2] [returnv_1]	count=1
function_arg	write out ||| write out indent	count=1
module	when the first instance ||| logger	count=1
module	and removes the ||| gem testcase	count=1
function	reply 2xx reply code ||| success	count=1
module	a password from ||| webrick httpauth htpasswd	count=1
function	[function] for ||| install update [function]	count=1
module	algorithm ||| gem security signer	count=1
arg	[arg_1] and style ||| [arg_1] [arg_2]	count=4
arg	list to ||| list	count=2
function_arg	[function_1] header ||| [function_1] ? [arg_2]	count=3
function	target library file ||| fullpath	count=1
function	class or module ||| class or module	count=6
returnv	[returnv] pid/status ||| [returnv]	count=1
arg	if count is negative ||| count	count=1
arg	:dependency dep a ||| dep	count=1
module	the generated docs ||| rdoc	count=1
module	and :sslprivatekey have been ||| sslconfig	count=1
function_arg	hostname for [arg_2] ||| [function_1] [arg_2]	count=3
module	command that ||| net imap	count=1
module	row ||| gzipreader	count=1
arg	for item ||| item	count=1
arg	of length [arg] elements ||| [arg]	count=1
function	the generated docs will ||| gen sub	count=1
arg	of str ||| str	count=3
arg	and a comment ||| comment	count=1
arg	break hints added in ||| indent open_obj close_obj open_width close_width	count=1
function	[returnv_1] [function_2] there are any authors ||| [returnv_1] have author [function_2]	count=1
function_arg	[function_1] unwanted ||| [arg_2] [function_1]	count=3
module	have been provided ||| drb	count=1
module	and remove ||| testcase	count=1
module	env ||| env	count=1
function	of free spaces in ||| avail	count=1
returnv	of elements from the ||| ary	count=1
function	the target library file ||| fullpath	count=1
function	token from the ||| token	count=1
arg	names in methods ||| methods singleton &block;	count=1
arg	optional superclass this is ||| superclass	count=1
module	a toplevel that ||| rdoc toplevel	count=1
module	as an array of ||| cgi	count=1
arg	of ole ||| ole	count=1
arg	and comment ||| comment	count=4
arg	[arg_1] [arg_2] ||| [arg_1] single [arg_2]	count=1
arg	id ||| id	count=4
module	and number of ||| stats	count=1
module	initialized ||| syslog logger	count=1
module	this cipher ||| openssl cipher	count=1
function	for [function_2] ||| [function_2] [function_1]	count=5
module	the first digit of ||| smtp response	count=1
module	in this row and ||| csv row	count=1
module	todo deprecate and ||| gem	count=1
function	adds tts from ||| block quote	count=1
function	[function_1] [function_2] from the objectspace extension ||| objectspace [function_1] [function_2]	count=2
function	map with the given ||| map	count=1
module	given block ||| enumerable	count=2
arg	container and ||| container	count=1
function	the class or ||| class or	count=4
function	appropriate [function] in posix-defined ||| [function]	count=1
arg	to other following edges ||| other	count=1
function	if the underlying ||| ?	count=1
module	ensures that ||| sslconfig	count=1
arg	string into the ||| string	count=1
function	real part ||| real	count=1
module	the proxied tuplespace ||| rinda tuplespaceproxy	count=4
module	directory may be ||| mlsxentry	count=1
module	the last row ||| zlib gzipreader	count=1
function	accept_heading_b ||| b	count=1
function	creates a template ||| template	count=1
module	session storage ||| cgi session memorystore	count=1
function	and :sslprivatekey have ||| setup	count=1
function_arg	the main [arg_2] ||| [arg_2] [function_1]	count=1
function	length and number of ||| stats	count=1
returnv	been reached [returnv] if ||| [returnv]	count=2
function	the struct ||| have struct	count=1
function	:heading containing [function_2] ||| [function_1] [function_2]	count=2
function_arg	new directory [arg_2] ||| [function_1] [arg_2]	count=1
function	end a stream ||| end	count=1
module	marks up ||| rdoc markup tohtmlsnippet	count=1
function	expanded representations) ||| s	count=1
function	request to the ||| request	count=4
module	a rdoc :markup ||| rdoc	count=1
arg	event ||| event tuple sec	count=1
returnv	polar form ||| float	count=1
module	docs will live ||| darkfish	count=1
function	use the expanded representations) ||| s	count=1
function	yes [function_2] ||| [function_2] [function_1]	count=1
module	constructor @param parent if ||| rexml parent	count=1
module	visibility for subsequently ||| module	count=1
function	check is passed argument ||| ?	count=2
function	add a list of ||| add	count=1
arg	named ||| mode flags	count=1
function	array ||| array	count=2
module	:source ||| source	count=1
module	the list of ||| specification	count=1
arg	the scripts to ||| filename bindir	count=1
arg	status and string attributes ||| status string	count=1
module	available ||| openssl ssl	count=1
function	is a ||| to ?	count=1
function	which wraps [function] ||| trust [function]	count=1
module	returns the encoding object ||| stringio	count=1
function	[returnv_1] interface addresses ||| [returnv_1] [function_2]	count=1
function	server on ||| server	count=3
function	[function_1] der-encoded ||| [function_1] [function_2]	count=1
function	ensure the [function_2] ||| [function_1] [function_2]	count=1
module	object returned by _getobj_ ||| delegator	count=1
function	description ||| description	count=2
function	the rounding [function_2] ||| [function_2] [function_1]	count=4
function	[returnv_1] following keys ||| [function_2] [returnv_1]	count=1
function	for rb_attr and rb_define_attr ||| attrs	count=1
function	the user ||| config	count=1
returnv	this block was ||| symbol	count=1
module	class to wrap the ||| fiddle importer	count=2
module	@param parent if ||| rexml parent	count=1
returnv	grab the ||| self	count=1
module	cookie string ||| cgi cookie	count=2
arg	add ||| add	count=1
arg	and comment ||| comment singleton	count=1
module	the ||| thread	count=1
rep	[module_1] a line ||| [module_1] parseerror instance [function_arg_2]	count=2
function_arg	page name ||| page name	count=1
function	that are commented out ||| commented out	count=1
module	spec ||| gem	count=2
arg	a [arg_2] ||| httpdate [arg_2] [arg_1]	count=1
arg	zooming and/or subsampling ||| src opts	count=2
module	the ftp ||| net ftp	count=1
module	get the ||| drb	count=2
function	debug ||| debug	count=2
function	and ||| set	count=2
module	[module] to allow ||| [module]	count=3
module	the tempdir ||| gem testcase	count=1
function	directories create a list ||| file list	count=1
returnv	of its polar form ||| float	count=1
module	name ||| name	count=6
module	executes a ||| gem testcase	count=1
arg	given key ||| key	count=9
function	reply 3xx reply code ||| continue ?	count=1
rep	unescapes [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	that cert signature ||| openssl x509 request	count=1
function	all objects grouped by ||| count objects	count=1
module	the source ||| source	count=1
module	<< ||| singleclass	count=1
module	marks ||| markup tohtmlsnippet	count=2
arg	current directory [arg] ||| [arg]	count=1
function	size of ||| size	count=4
module	deletes ||| rexml element	count=1
module	this document ||| document	count=2
arg	time and ||| time	count=1
module	read from this file ||| gzipreader	count=1
returnv	to_regexp ||| re	count=1
function_arg	sign the [arg_2] ||| [function_1] [arg_2]	count=4
arg	cstime as the ||| cstime	count=1
function	classes and modules to ||| classes	count=1
module	myclassname ||| rdoc singleclass	count=1
function_arg	[function_1] question ||| [arg_2] [function_1]	count=3
arg	a string describing ||| cert ca key_pbe cert_pbe key_iter mac_iter keytype	count=1
arg	this uri ||| uri	count=1
module	opens a [module] ||| [module]	count=1
arg	new_name a ||| new_name	count=1
module	file as ||| file	count=2
function	[returnv_1] named protected ||| [returnv_1] [function_2]	count=1
function	module ||| find symbol module	count=1
function	superclasses of obj ||| is a	count=1
function	[function] this nameerror ||| [function]	count=1
arg	the current activated ||| activated	count=1
function	the marshal [function_2] ||| [function_1] [function_2]	count=1
function	a class or module ||| class	count=1
function	key pair of ||| key	count=1
module	ensures that ||| drbsslsocket sslconfig	count=1
arg	connection connection ||| connection	count=1
function	external ||| external	count=1
function_arg	[function_1] also_in ||| [function_1] out [arg_2]	count=1
arg	allows up to limit ||| limit	count=1
function_arg	cosine of [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] given key ||| [function_1] ? [arg_2]	count=3
module	udpsocket ||| udpsocket	count=3
function	at end of file ||| eof	count=2
function_arg	the first [arg_2] ||| [arg_2] [function_1]	count=1
arg	or not the given ||| &b;	count=1
function	[returnv_1] [function_2] specificfile for the gem ||| [returnv_1] [function_2]	count=1
arg	tuple from ||| tuple sec	count=2
module	the list ||| gem specification	count=1
function	load extra data ||| load from binary extra data	count=1
arg	or greater than numeric ||| numeric	count=1
module	true ||| matrix lupdecomposition	count=1
function	adds a ||| add status	count=1
module	the net :http#read_timeout ||| xmlrpc	count=1
function_arg	[function_1] includes other ||| sourcelist bool include [function_1] [arg_2]	count=1
function	for text generation ||| start accepting	count=2
arg	method_body and ||| method_body	count=1
arg	or attribute name name ||| name	count=1
arg	a subset of ||| refname mailbox	count=1
function	[function_1] variables ||| [function_1] [function_2]	count=11
arg	file on ||| filename	count=1
function	has a zero value ||| zero	count=1
arg	at [arg] ||| [arg]	count=1
function	define method [function_2] ||| [function_2] [function_1]	count=2
function	with the classes ||| classes	count=1
function	constant that ||| constant	count=1
function	corresponding to ||| []	count=1
module	this module or class ||| classmodule	count=1
module	for this ssl context ||| openssl ssl sslcontext	count=1
function_arg	the executable bin ||| find executable bin	count=1
function	the first ||| collect first	count=1
arg	prefix and base_notifier to ||| prefix base_notifier	count=1
arg	[arg] contains all ||| [arg]	count=1
module	rdoc :document using the ||| rdoc	count=1
function	the same [function] ||| [function]	count=1
arg	dep in ||| dep	count=1
module	server ||| net	count=7
function	extracts the [function_2] ||| [function_1] [function_2]	count=2
module	through ||| ri	count=1
function	initial length [function_2] ||| [function_2] [function_1]	count=4
function	returns the unique ||| unique	count=2
module	codeobject and all its ||| rdoc codeobject	count=1
returnv	whether [returnv] ||| [returnv]	count=2
module	already exist ||| generator	count=1
function	of the directory ||| dir	count=1
function	the base label of ||| base label	count=2
function_arg	the value in the [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	is a source with ||| ?	count=1
function	dump ruby ||| dump	count=1
function	list of the ||| module list	count=1
function	objects [function_2] ||| [function_1] [function_2]	count=1
function	the integer [function_2] ||| [function_2] [returnv_1]	count=1
function	[returnv_1] [function_2] any thread has ||| [returnv_1] finished [function_2]	count=2
function_arg	creates a [arg_2] ||| [arg_2] [function_1]	count=3
module	returns the http ||| http	count=1
module	parent if supplied will ||| rexml	count=1
module	corresponding to the http ||| webrick httpstatus	count=1
function	[function_1] marshal ||| [function_1] [function_2]	count=1
arg	container and the ||| container	count=1
module	the comment ||| comment	count=3
function	verifies that this ||| verify	count=1
arg	the scripts to ||| bindir	count=1
function_arg	[function_1] list_item ||| [arg_2] [function_1]	count=3
module	stats ||| stats	count=1
function	[function_1] an alias ||| [function_1] [function_2]	count=1
arg	[arg] hash ||| server root [arg]	count=1
function	[function_1] paths in ||| [function_2] [function_1]	count=4
module	rdoc :attr for ||| rdoc parser	count=2
function	an absolute ||| abs_file_name expand	count=1
module	that will look ||| rinda	count=1
function_arg	local variable [arg_2] ||| [arg_2] [function_1]	count=2
module	–version option ||| gem versionoption	count=1
function	ruby ||| old ruby	count=1
module	object if local ||| drb	count=1
function	opens the ||| open	count=1
arg	if pid ||| pid	count=1
module	object’s object_id ||| ppmethods	count=1
module	test ||| rdoc markup textformattertestcase	count=1
function	which to search ||| get	count=1
module	the specification that ||| gem resolver conflict	count=1
function	to the underlying ||| write	count=1
returnv	for subsequently defined methods ||| self	count=1
function	names set the ||| set visibility for	count=1
function	the ssl ||| ssl	count=1
module	configuration option ||| configfile	count=1
function_arg	value [arg_2] ||| [arg_2] [function_1]	count=5
module	requests for files ||| webrick httpservlet	count=2
function	extras style definition lists ||| definition lists	count=1
function	internal [function_2] ||| [function_1] [function_2]	count=4
function	determine the status type ||| status type	count=1
module	optionally under a ||| rexml light node	count=1
function	been ||| setup	count=1
function	[function_1] [function_2] an integer representing the ||| fixnum [function_2] [function_1]	count=2
function	options ||| config	count=1
arg	source and return it ||| source proc options	count=1
module	lists have redundancies ||| specification	count=1
function	for the gem ||| gem	count=1
module	tuplespaceproxy ||| tuplespaceproxy	count=1
arg	for the named ||| file_name	count=4
arg	— returns an ||| ary	count=1
module	provided ||| drbsslsocket sslconfig	count=4
function	mime ||| mime	count=1
module	toplevel ||| toplevel	count=2
module	optionparser ||| optionparser	count=2
function_arg	[function_1] stream unused ||| [function_1] [arg_2]	count=2
module	union ||| cunionentity	count=1
function	[function_1] any member ||| [function_2] [function_1]	count=2
arg	[arg_1] args ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] with value ||| [arg_2] [function_1]	count=1
function	target [function] ||| [function]	count=1
arg	cstime ||| cstime	count=1
function	gets all hostnames ||| getnames	count=2
arg	the value of fix ||| fix	count=1
function	to utf-8 ||| toutf8	count=2
function	“with” options ||| dir config	count=1
function	to row mode ||| row	count=1
function_arg	[function_1] [arg_2] with private_key if ||| [function_1] [arg_2] private_key age extensions	count=1
arg	maxlen bytes in ||| maxlen	count=1
arg	the array ary ||| ary	count=1
arg	content options and stats ||| content options stats	count=1
arg	symbol to ||| symbol obj	count=1
module	if stat has ||| file stat	count=2
function	hex-encoded hash ||| hexdigest	count=1
function	to utf-32 ||| toutf32	count=1
arg	month day [arg_2] ||| [arg_1] [arg_2]	count=5
module	<< ||| rdoc	count=1
function	find a [function_2] ||| [function_1] [function_2]	count=2
arg	that match tuple ||| tuple expires	count=1
module	the number ||| sslsocket	count=1
function	remote address ||| remote address	count=2
module	been turned off ||| rdoc	count=1
function	options ||| dir	count=1
module	table to mixed ||| table	count=1
arg	httpresponse ||| data initheader dest	count=1
function	permissions of [function_2] ||| [function_2] [function_1]	count=2
module	stat is ||| stat	count=4
module	::result ||| gc profiler	count=1
function	[function_1] windows platform? ||| [function_2] [function_1]	count=4
arg	values associated [arg] keys ||| [arg]	count=1
arg	source ||| source	count=2
function	includes that match it ||| and includes	count=1
module	accept_hard_break ||| markup hardbreak	count=1
module	this gem ||| gem requirement	count=1
module	element in enum ||| enumerable	count=3
function	with the ||| with	count=1
function	post request to ||| request post	count=2
function	the list of available ||| name list	count=1
function	[function] whose ||| [function]	count=3
function	potential ||| handle special hyperlink	count=1
module	to its original state ||| gem	count=1
function	opens a ||| new	count=1
function_arg	[function_1] other_time are ||| [arg_2] [function_1]	count=2
module	is encountered ||| rexml streamlistener	count=4
module	constructs a version ||| version	count=1
module	up a ||| rdoc ri	count=1
function	check is passed argument ||| number ?	count=1
module	if this method ||| method	count=1
function	is valid and ||| valid civil	count=1
function	which [function] the win32ole_type ||| [function]	count=1
module	escapes ||| webrick httputils	count=1
function_arg	parameters from [arg_2] ||| [function_1] scan args [arg_2]	count=3
arg	of filename ||| filename	count=1
module	of undocumented ||| stats	count=1
function	the struct ||| have struct member	count=1
function	yields each ||| each pair	count=1
arg	enum ||| enum enc	count=1
function	handle the given ||| handle options	count=1
module	generated docs will ||| rdoc	count=1
function	visitor ||| item	count=4
module	the text gem ||| gem text	count=1
returnv	are ||| integer	count=1
module	file ||| zlib gzipreader	count=1
function_arg	[function_1] in ||| [arg_2] [function_1]	count=2
arg	context of ||| context statements	count=1
returnv	[returnv] containing ||| [returnv]	count=5
returnv	return [returnv] if ||| [returnv]	count=1
function	by [function] ||| [function]	count=3
module	tts from ||| markup tottonly	count=1
module	they don’t ||| rdoc generator	count=1
function	the block [function_2] ||| [function_1] [function_2]	count=3
module	process to its ||| testcase	count=1
returnv	the ||| self	count=2
module	the same method ||| method	count=1
function	valid and [function_2] ||| [function_1] ordinal [function_2]	count=2
arg	elapsed [arg] ||| stime cutime cstime [arg]	count=3
module	tempdir ||| testcase	count=1
function	local [function_2] ||| [function_2] [function_1]	count=7
arg	for req on ||| req	count=1
module	been ||| codeobject	count=1
function	given [function] ||| [function]	count=1
function	loads ri ||| load	count=2
function	:pointer instance ||| ref	count=1
arg	tag_name ||| tag_name	count=1
function_arg	[function_1] [arg_2] date ||| date date [function_1] [arg_2]	count=3
function	the visitor ||| accept list item start	count=4
returnv	encoding object that represents ||| encoding	count=2
arg	set ||| set attr flags	count=1
function_arg	[function_1] name from ||| [arg_2] [function_1]	count=4
function	the public instance ||| public instance	count=2
module	when this ||| fiddle	count=1
arg	corresponding to code ||| code	count=1
function	array of modules ||| modules	count=1
function	sends a mkcol request ||| mkcol	count=1
arg	local object ||| obj	count=1
function	resolve the requested ||| resolve	count=1
function	[returnv_1] [function_2] for the gem in ||| gem source specificfile [returnv_1] [function_2]	count=1
module	conflicting dependency’s name ||| resolver conflict	count=1
arg	with [arg] from this ||| [arg]	count=1
function	definition of this singleton ||| definition	count=1
module	add ||| rdoc rdoc	count=1
function	[function] others returns ||| world [function]	count=4
arg	spec to [arg_2] ||| [arg_1] [arg_2]	count=1
module	representation for this ||| json ext generator generatormethods	count=2
arg	of dependencies ||| dependencies	count=1
function	[returnv_1] [function_2] within this {#graph} ||| [returnv_1] [function_2]	count=1
module	list of ||| module	count=1
module	that are immediately ||| sslsocket	count=1
function	if they ||| gen sub	count=1
arg	for the uri tag_name ||| uri tag_name	count=1
function	[function_1] latest release-version ||| [function_2] [function_1]	count=4
returnv	the encoding ||| encoding	count=2
function	creates [function_2] ||| [function_2] [function_1]	count=2
module	availableset as ||| availableset	count=1
arg	file if present or ||| file	count=1
function	and modules in ||| and modules	count=2
function	of the default sources ||| default sources	count=1
function_arg	[function_1] host and ||| [arg_2] [function_1]	count=2
function	emacs [function_2] ||| [function_1] editing [function_2]	count=1
arg	program read from src ||| src filename lineno	count=1
function	argument valid ‘nz_number’ ||| valid nz	count=1
function	if not ||| civil ?	count=1
function	will [function] the ||| [function]	count=1
arg	the given host ||| host	count=1
function	combine ||| combine	count=2
arg	based on string ||| string	count=1
arg	[arg_1] pass ||| [arg_2] [arg_1]	count=2
arg	by symbol to ||| symbol	count=1
arg	the given libs ||| libs	count=1
module	of the ruby parser ||| rdoc parser ruby	count=1
function	output generator ||| generator	count=1
module	to ||| tottonly	count=1
function	[function_1] representation ||| [function_2] [function_1]	count=6
function	returns the current backtrace ||| backtrace	count=1
module	dns resources ||| resolv dns	count=1
function	reads at most ||| readpartial	count=1
module	returns ||| rdoc stats	count=2
function	defines ||| define	count=1
function	remote ||| remote	count=3
arg	meth_name defined on ||| meth_name	count=1
function	the latest [function_2] ||| [function_2] [function_1]	count=4
module	case ||| formattertestcase	count=2
module	will live in if ||| rdoc generator	count=1
function	the specific extra ||| specific extra	count=2
function	to the output ||| accept block quote	count=1
function	[function_1] encoding ||| [function_1] [function_2]	count=3
module	visitor for ||| markup tottonly	count=1
function	[function] of ||| set [function]	count=2
arg	to rows [arg_2] ||| [arg_2] [arg_1]	count=1
module	command to remove ||| net imap	count=2
arg	request into this ||| request	count=1
function	names set the visibility ||| set	count=1
function	using erb ||| erb	count=1
function	valid ‘nz_number’ ||| valid nz	count=1
module	given remote ||| net ftp	count=1
function	trace request to ||| trace	count=1
arg	block on [arg_2] ||| [arg_2] proc [arg_1]	count=4
module	of the [module] to ||| [module]	count=3
module	as row ||| csv table	count=1
arg	if pattern ||| pattern	count=1
module	a defaultfilehandler ||| defaultfilehandler	count=1
function	class ||| add class	count=1
function	is a potential ||| hyperlink	count=1
arg	options = {}) creates ||| options	count=1
function	the visitor for ||| list item start	count=4
module	block form ||| requestset gemdependencyapi	count=1
module	pipes and stat ||| stat	count=1
function	if ||| end ?	count=1
arg	[arg_1] and columns ||| [arg_1] [arg_2]	count=2
function	[returnv_1] only ||| [returnv_1] [function_2]	count=1
arg	timeout seconds ||| timeout	count=1
function	called just before running ||| before running	count=1
module	certificate and is valid ||| security	count=1
arg	path in req for ||| req	count=1
returnv	instance for the ||| instance	count=1
arg	limit characters of ||| limit	count=1
rep	[module_1] [function_arg_2] ||| [module_1] filter [function_arg_2]	count=4
module	row access returning ||| csv	count=1
module	require ||| require	count=1
function	the generated docs will ||| sub	count=1
function_arg	[function_1] for address ||| [function_1] [arg_2]	count=6
module	are immediately ||| openssl ssl	count=1
module	alias of a singleton ||| alias	count=1
module	rdoc :markup ||| rdoc	count=8
arg	[arg_1] standalone ||| [arg_2] [arg_1]	count=2
module	for this file ||| file	count=1
function	global ||| global ?	count=1
module	tuplebag which ||| tuplebag	count=1
module	the source for a ||| source	count=1
arg	and reference ||| reference	count=1
arg	set based on the ||| set	count=1
function	[function] row of ||| [function]	count=1
module	mailbox ||| net imap	count=1
function	[function_1] ‘nz_number’ ||| [function_2] [function_1]	count=3
module	representation for this integer ||| ext generator generatormethods	count=1
function	pipe ||| pipe	count=3
function	checkbox ||| checkbox	count=1
arg	for method_name in ||| method_name	count=2
arg	files in list to ||| list options	count=1
function	[function_1] comment from ||| [function_1] [function_2]	count=3
arg	another sec seconds ||| sec	count=1
rep	a [function_arg_2] ||| digest [module_1] [function_arg_2]	count=4
module	certificate and ||| gem security policy	count=1
module	find ||| rdoc context	count=2
arg	utime ||| utime	count=1
module	the user can ||| makemakefile	count=1
module	removes a [module] from ||| [module]	count=1
module	strings using file :separator ||| file	count=1
arg	key false ||| key	count=1
function	adds classes and modules ||| classes	count=1
module	that represents ||| io	count=1
arg	date-time object ||| hour minute second offset	count=2
module	undocumented items ||| rdoc	count=1
function	warning ||| warning	count=1
function	update ||| update	count=4
function	key [function] in ||| each [function]	count=1
function	limit ||| text limit=	count=1
function_arg	by the [arg_2] ||| [function_1] ? requirement activated [arg_2]	count=3
arg	true if other ||| other	count=1
function	commands as a ||| r	count=1
function	method call is ||| method	count=1
function	version of normalize ||| normalize !	count=1
module	openssl 0 ||| openssl	count=1
module	get the ||| drbobject	count=2
function	returns true [function_2] ||| [returnv_1] tty [function_2]	count=2
function	[function_1] message ||| [function_2] [function_1]	count=2
function	the headers for the ||| headers	count=1
function	line that ||| line	count=1
module	both time objects with ||| time	count=1
function_arg	[function_1] out a ||| [function_1] [arg_2]	count=1
function	at end ||| eof	count=2
module	vector in ||| vector	count=1
module	given xpath ||| xpath	count=1
module	comment are ||| rexml comment	count=2
arg	a string ||| string 1 jan -4712	count=2
arg	digests match the ||| digests	count=1
function	block but preserve ||| save	count=1
arg	year month [arg_2] ||| [arg_2] [arg_1]	count=6
function_arg	unique [arg_2] ||| [arg_2] [function_1]	count=1
module	match [module] if ||| gem [module]	count=1
arg	uri for a prefix ||| prefix	count=1
function_arg	scalar with [arg_2] ||| [function_1] [arg_2]	count=1
function	:toplevel corresponding ||| top	count=1
module	remove ||| rexml attributes	count=1
function	modules ||| classmodule	count=1
arg	– or the attribute ||| attribute	count=1
arg	the start and stop ||| start stop	count=1
function	all [function] dependency ||| dependent [function]	count=1
function	[function] hash that ||| [function]	count=1
module	comment are ||| comment	count=2
function	from html form ||| form	count=1
module	been provided or ||| drbsslsocket sslconfig	count=1
module	bold ||| markup tobs	count=1
function_arg	the value [arg_2] ||| [arg_2] [function_1]	count=5
function_arg	[function_1] [arg_2] good 1 for revoked ||| [function_1] [arg_2]	count=2
function	gems ||| gems	count=1
function	[function_1] and rb_define_attr ||| [function_2] [function_1]	count=1
module	checks that cert ||| x509	count=1
function	prepares the visitor ||| item start	count=4
module	specifications ||| gem resolver molinillo specificationprovider	count=2
function_arg	[function_1] new_name for ||| [function_1] old_name [arg_2]	count=3
function	a null [function] ||| [function]	count=2
module	returns an rdoc ||| rdoc tomdoc	count=2
function	all ||| reset	count=1
arg	optional block ||| &block;	count=1
function	contains the specified ||| has	count=1
module	of the section ||| markup verbatim	count=1
module	module? ||| classmodule	count=1
arg	sets the attribute [arg_1] [arg_2] ||| ext generator state []= [arg_1] [arg_2]	count=2
module	a properly-space list ||| rdoc	count=1
function_arg	[function_1] path and ||| [function_1] [arg_2]	count=3
arg	value and [arg_2] ||| [arg_1] [arg_2]	count=1
function	reads [function] ||| [function]	count=2
module	all file ||| gem	count=1
module	this ||| rdoc context	count=1
module	stat is a regular ||| stat	count=1
function	key pair of the ||| key	count=1
module	whether the response ||| smtp response	count=2
function	finds the ||| find	count=4
module	the ringserver ||| ringserver	count=1
function	priority of ||| priority	count=1
function	server advertises [function_2] ||| [function_1] cram md5 [function_2]	count=1
module	this gem is ||| gem resolver installedspecification	count=1
module	that all ||| gem specification	count=1
module	the process ||| gem testcase	count=1
module	that keeps an ||| rinda	count=1
arg	new set of tags ||| name start stop	count=1
module	pointer to ||| pointer	count=1
module	records the parsing of ||| stats	count=6
module	this dh ||| dh	count=3
module	anymethod with ||| anymethod	count=1
module	been turned ||| rdoc	count=1
arg	map and ||| map	count=1
function	names set the ||| set visibility	count=1
arg	for name ||| name &block;	count=1
function	there [function_2] ||| [function_1] [function_2]	count=1
function	immediately available for reading ||| pending	count=1
module	does this dependency match ||| dependency	count=1
function	returns true [function_2] ||| [returnv_1] chardev [function_2]	count=2
arg	host ||| host options	count=1
function	a string [function_2] ||| [returnv_1] [function_2]	count=2
module	of the [module] ||| gem [module]	count=8
module	to bool ||| rdoc	count=1
arg	[arg_1] fills ||| [arg_2] [arg_1]	count=1
module	encodes this dh to ||| pkey dh	count=2
arg	with a specified mailbox ||| mailbox	count=1
arg	n by n matrix ||| n zero one	count=1
function	a new key ||| create key	count=2
arg	socket option ||| level optname	count=1
function	resolve the ||| resolve	count=1
function	class return the name ||| name	count=1
arg	sockaddr ||| sockaddr	count=1
function	[function_1] [function_2] database ||| yaml dbm [function_2] [function_1]	count=3
module	and instantiates [module] for the ||| [module]	count=1
function	of the protected instance ||| protected instance	count=1
arg	that the dependency is ||| spec dependency	count=1
function	[function_1] special for ||| [function_2] [function_1]	count=2
function	properly-space ||| generator	count=1
arg	[arg_1] [arg_2] ||| openssl digest digest new [arg_1] [arg_2]	count=12
arg	array of nodes matching ||| path namespaces variables	count=1
arg	name with the ||| name	count=1
module	this dependency ||| dependency	count=2
arg	new ||| new	count=1
module	object using readline ||| irb readlineinputmethod	count=1
module	druby reference ||| drb	count=1
function	if the named public ||| public	count=1
function	version [function_2] ||| [function_2] [function_1]	count=4
module	default ||| module	count=1
arg	[arg_1] [arg_2] against ||| [arg_1] [arg_2] ) → (true or	count=4
function_arg	map with [arg_2] ||| [function_1] [arg_2]	count=8
function	an [function_2] ||| [function_2] [returnv_1]	count=2
module	normalize ||| gem specification	count=1
module	an array containing ||| rexml	count=1
arg	this dependency which ||| dependency	count=1
module	silent download reporter ||| streamui silentdownloadreporter	count=1
arg	[arg] time at ||| [arg]	count=2
module	row read from ||| zlib	count=1
function	real user and group ||| real	count=1
arg	io ||| io	count=9
module	to this ||| openssl	count=1
function	section ||| section	count=1
arg	[arg_1] on dir ||| [arg_2] [arg_1]	count=5
function	visitor for ||| accept	count=4
module	method ||| net smtp	count=2
module	number of undocumented ||| rdoc	count=1
module	new range ||| range	count=1
function	[function_1] there is ||| [function_2] key [function_1]	count=2
function	[function_1] out ||| [function_2] [function_1]	count=2
arg	in context with ||| container	count=1
module	set ||| gem	count=2
function	returns the arc tangent ||| atan	count=1
arg	[arg] 0 ||| certificate_id [arg] reason revocation_time this_update	count=2
module	pathname begins with a ||| pathname	count=1
arg	[arg] with some ||| [arg]	count=3
function	flags ||| flags	count=1
module	locale object ||| rdoc i18n locale	count=1
arg	instance when ||| &hook;	count=1
function	[returnv_1] [function_2] the pool still running ||| [returnv_1] [function_2]	count=2
module	permissions ||| gem package tarwriter	count=1
function	[function_1] body of ||| [function_2] [function_1]	count=3
function	adds a [function_2] ||| [function_2] [function_1]	count=20
function	close on [function_2] ||| [function_1] [function_2]	count=2
function	suppressed ||| suppressed	count=1
function	and net :http#open_timeout to ||| timeout=	count=1
arg	public key from certificate ||| certificate	count=1
module	a range using the ||| range	count=1
function_arg	[function_1] threads have ||| [arg_2] [function_1]	count=2
module	for ||| gem requestset	count=1
module	tuplebag returning ||| tuplebag	count=1
function	pi ||| pi	count=1
function_arg	and body [arg_2] ||| [arg_2] [function_1]	count=1
arg	object and other ||| other	count=1
module	serialized configuration using to_s ||| config	count=1
function	remote ||| drburi	count=1
module	encodes this asn1data ||| openssl asn1 asn1data	count=1
returnv	returns [returnv] containing implementation-dependent ||| [returnv]	count=1
module	this dependency simply ||| gem dependency	count=1
module	a ||| drb drbsslsocket sslconfig	count=2
function	time in the ||| time	count=1
function	sequence is started ||| sequence	count=1
module	for constructing entry ||| rss atom entry	count=1
module	the object if ||| drbobject	count=1
function	[function_1] relative ||| [function_1] [function_2]	count=3
module	last ||| optparse	count=1
arg	[arg_1] end ||| [arg_2] [arg_1]	count=2
function	various “with” options ||| dir config	count=1
module	newly created bigdecimal ||| bigdecimal	count=1
function	that defines the beginning ||| begin	count=1
function	store to disk ||| generate	count=1
function	truncated ||| i	count=1
function	a pipeline ||| pipeline start	count=2
module	analysis and documentation ||| gem basicspecification	count=1
arg	:smtp object and connects ||| helo user secret authtype	count=1
function	the fiber-local variables ||| keys	count=1
function_arg	or no question ||| no question default	count=1
function_arg	to error ||| error= error	count=1
module	to wrap the c ||| importer	count=1
function	to ignore a ||| ignore	count=1
module	the default [module] commands on ||| [module]	count=1
function	of which this object ||| element=	count=1
module	instead of self ||| toplevel	count=1
arg	and style ||| style	count=1
function	assigns ||| []=	count=1
module	to pass output through ||| ri	count=1
module	prepares the ||| totableofcontents	count=1
function_arg	sections from [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] given list ||| [function_1] question [arg_2]	count=1
function	with a ||| proc	count=1
returnv	reached [returnv] ||| [returnv]	count=2
module	header names to ||| net httpheader	count=1
function	are true [function_2] ||| [returnv_1] [function_2]	count=1
module	the rd ||| rd	count=1
arg	with the given index ||| index obj...	count=1
function_arg	[function_1] [arg_2] ||| [function_1] unresolved tree [arg_2]	count=3
module	systemexitexception ||| gem systemexitexception	count=1
function	returns a proxy uri ||| proxy from	count=1
module	prepares ||| markup tohtml	count=5
function	sets ||| timeout=	count=1
function	object by ||| object	count=1
function	returns the locale ||| string locale	count=2
function	this module of the ||| extension modules	count=1
function	filter ||| filter	count=1
function	returns a basicresponse for ||| basic	count=1
function	to the output ||| accept	count=1
module	inflate ||| zlib inflate	count=1
function	creates ||| make	count=1
function	[function_1] and the ||| [function_2] [function_1]	count=1
arg	from the version string ||| version	count=1
function	readable by [function_2] ||| [function_1] [function_2]	count=2
function	http ||| request	count=1
module	a [module] :requirement ||| [module]	count=1
function	[function_1] if ||| [function_1] ordinal [function_2]	count=2
arg	ole ||| ole	count=1
module	apispecification for ||| gem resolver apispecification	count=1
function	removes every ||| clear	count=1
module	commands ||| tk tcllib tablelist_tile	count=1
function_arg	parameters [arg_2] ||| [arg_2] [function_1]	count=1
function	device file ||| file	count=1
function	and resets the digest ||| digest !	count=1
module	rdoc :attr for ||| rdoc	count=2
function_arg	stream src ||| stream src	count=1
function_arg	template for file ||| template for file	count=1
module	represents ||| io	count=1
module	the installed ||| installer	count=1
returnv	this block was terminated ||| symbol	count=1
module	up the latest specification ||| resolver	count=1
arg	tuple ||| event tuple	count=1
module	off ||| rdoc	count=1
arg	passing args if ||| args	count=2
module	field with ||| csv row	count=1
function	returns the rank ||| rank	count=1
arg	the given object ||| object	count=4
function	gem version ||| gem names	count=1
function	win32 [function_2] ||| [function_1] last [function_2]	count=4
function	:x509 ||| name	count=1
module	converts a rational ||| rational	count=1
function	which represents the ||| content	count=1
module	parse the [module] document source ||| [module]	count=1
function	the proxy ||| proxy	count=1
function	2xx ||| success	count=1
module	terminated and is ||| thwait	count=1
function	[function_1] given value ||| [function_2] [function_1]	count=2
function_arg	[function_1] named name ||| [arg_2] [function_1]	count=3
function	[returnv_1] [function_2] the ||| [returnv_1] alive [function_2]	count=1
module	gemspec ||| gem specification	count=1
arg	connected [arg] to ||| [arg]	count=1
module	represents this specification ||| gem specification	count=1
function	if [function_2] ||| [function_2] plain auth [function_1]	count=1
module	to configure various “with” ||| makemakefile	count=1
module	for the alias of ||| alias	count=1
module	with ||| testcase specfetchersetup	count=1
arg	pass - string ||| pass	count=2
arg	key and a ||| key	count=1
module	the ||| openssl ssl sslsocket	count=2
arg	headers [arg_2] ||| [arg_1] [arg_2] header_row	count=1
function	list ||| method list	count=1
function	entry with ||| entry	count=1
arg	amount ||| msg width display	count=1
module	new copy to ||| gem	count=1
function	to the option parser ||| option	count=2
function	the ||| start	count=8
module	sets ||| rdoc	count=1
arg	given enum ||| enum	count=1
function	single ||| one	count=1
module	digest ||| digest sha2	count=2
function	waits for thr to [returnv_1] [function_2] the exception which terminated ||| thread [returnv_1] [function_2]	count=1
function	the output ||| block	count=1
function	directories the ||| gen sub directories	count=1
module	returns the encoding ||| stringio	count=1
function	opens a [function_2] ||| [function_2] [function_1]	count=4
function	[returnv_1] if ||| [returnv_1] real [function_2]	count=1
module	restricting ||| gem requestset	count=1
function_arg	relative to [arg_2] ||| [function_1] url [arg_2]	count=1
arg	with anchor [arg_2] ||| [arg_2] [arg_1]	count=9
module	this parser is in ||| ext parser	count=1
module	for ||| rss	count=1
function	in quirks_mode false otherwise ||| quirks mode	count=1
module	have been provided ||| drbsslsocket sslconfig	count=1
function	iterates the ancestors of ||| each	count=1
module	is created ||| syslog	count=1
module	to the ||| tottonly	count=1
arg	which ||| data	count=1
module	fields in the spec ||| specification	count=1
returnv	returns float ||| float	count=1
module	defaultfilehandler ||| defaultfilehandler	count=1
arg	given type [arg] ||| [arg] type	count=1
function_arg	sends [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	given block for each ||| each	count=2
arg	mode issues [arg] passes the ||| [arg]	count=1
module	no maximum [module] ||| json ext [module]	count=1
module	that a new ||| drb drbsslsocket	count=1
function	html [function] ||| html [function]	count=1
module	a pop3 ||| pop3	count=2
module	from the stream which ||| buffering	count=1
module	a codeobject ||| codeobject	count=1
function	array of headings in ||| table of contents	count=1
function	one that is relative ||| gen relative	count=1
module	creates a ||| gem testcase	count=1
function	the ||| item start	count=4
module	the command line ||| command	count=3
function	of path ||| path	count=1
function	challenge ||| challenge	count=1
function	returns a standard basis ||| basis	count=1
function	new [function] class ||| new [function]	count=3
function	[function_1] as delegator ||| [function_1] instance [function_2]	count=1
arg	extensions ||| extensions	count=2
function	[returnv_1] [function_2] proc body ||| proc [returnv_1] [function_2]	count=1
function	private key associated with ||| private	count=1
function	text of width columns ||| text	count=1
arg	set the eoutvar to ||| eoutvar	count=1
module	[module] garbage collected ||| [module]	count=2
module	adds ||| rdoc toplevel	count=1
module	syslog alert log ||| syslog logger	count=1
function_arg	the hostname [arg_2] ||| [arg_2] [function_1]	count=4
arg	with value [arg_2] ||| [arg_2] [arg_1]	count=2
returnv	instance that ||| instance	count=1
arg	user user and ||| user	count=1
function	instance method of current ||| method	count=1
function_arg	[function_1] of tags ||| [function_1] [arg_2]	count=1
module	digest using a ||| digest instance	count=1
function	the net :http#read_timeout and ||| timeout=	count=1
module	ios to the beginning ||| io	count=1
module	installed gem ||| gem installer	count=1
arg	given calendar ||| year month mday	count=4
function	iff there [function_1] [function_2] within this {#graph} ||| [function_2] [function_1]	count=2
module	arguments a command ||| gem command	count=1
module	to request ||| net	count=1
function	a list of all ||| list	count=1
function	a list of extra ||| specific extra	count=1
function	with the same seconds ||| eql	count=1
arg	if the given orig ||| orig	count=1
function	the visitor ||| visitor	count=1
function_arg	[function_1] tk setting ||| [arg_2] [function_1]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] [function_2]	count=1232
function	return a list of ||| module list	count=1
arg	the definition for context ||| context	count=1
function	sticky bit set ||| sticky	count=1
arg	directory dir ||| dir	count=3
module	permissions ||| package tarwriter	count=1
arg	leap [arg] ||| [arg]	count=4
function	lsub ||| lsub	count=1
function	[returnv_1] if the ||| [returnv_1] leap [function_2]	count=1
function	[function] to ||| [function]	count=1
module	when gem ||| gem	count=2
arg	visibility ||| visibility singleton	count=1
module	the response received was ||| net smtp response	count=2
function	[function] signature digest ||| [function]	count=2
module	remove ||| gem testcase	count=2
module	source for a ||| rexml source	count=1
function	the introspection handlers system ||| introspection	count=1
function	is passed [function_2] ||| [function_2] nz [function_1]	count=1
arg	acceptable items in other ||| other	count=1
function	release version and ||| version	count=1
function	listing commands list nlst ||| listable	count=1
function_arg	methods [arg_2] ||| [arg_2] [function_1]	count=6
module	terminated :break :redo :retry ||| localjumperror	count=1
module	gems to a set ||| requestset	count=1
module	for restricting ||| gem	count=1
function	returns the base label ||| base label	count=2
module	class and sets the ||| smtp	count=1
function	line by using that ||| dir config	count=1
arg	length ||| length	count=6
function	[function_1] installed ||| [function_2] [function_1]	count=7
module	converts the [module] to a ||| [module]	count=2
arg	address from the ||| address	count=3
function_arg	[function_1] dependency ||| [function_1] ? [arg_2]	count=2
module	the command with ||| gem command	count=1
arg	[arg_1] an ||| [arg_1] [arg_2]	count=4
function	install ||| install	count=3
function	calculate the necessary ||| set ctypes	count=1
arg	the flag file ||| op_dir time last	count=1
arg	want to modify ||| safe add parent	count=3
module	terminated :break ||| localjumperror	count=1
function	matches the current ||| match	count=1
module	for subsequently ||| module	count=1
arg	wherein [arg] ||| [arg]	count=3
function	there are [function] authors ||| [function] author	count=1
function	options ||| options	count=7
function	adds extra ||| add extra	count=1
function_arg	[function_1] the path ||| [function_1] get [arg_2]	count=1
function	if headers will be ||| headers ?	count=1
arg	elements [arg_2] ||| [arg_2] [arg_1]	count=2
arg	given base ||| base	count=1
function	can handle the extension ||| can parse	count=1
arg	setting the comment for ||| single	count=1
arg	opts to ||| opts	count=1
module	for ||| markup tordoc	count=4
module	deprecate and ||| gem	count=1
function	unresolved ||| unresolved	count=1
function	to verify ||| verify	count=1
module	gem specifically ||| gem	count=1
function	given [function] element of ||| [function]	count=1
module	convert a druby ||| drb	count=1
arg	but set ||| set	count=2
function	template in ||| template	count=1
function	returns a range object ||| range	count=1
module	or that a new ||| sslconfig	count=1
function	set ||| set eoutvar	count=1
function	classes and modules ||| classes	count=1
module	a new [module] :scalar object ||| [module]	count=1
arg	string value in ||| value	count=1
module	items in ||| rdoc	count=1
function	instance [function_2] ||| [function_1] [function_2]	count=12
function	adds a response ||| add response	count=2
arg	as an httpresponse object ||| data initheader	count=1
function	sorted by salience first ||| get sorted	count=1
function_arg	[function_1] [arg_2] ||| [function_1] spec [arg_2]	count=9
function	[returnv_1] [function_2] ||| [returnv_1] signaled [function_2]	count=4
module	:x509 :name ||| security	count=1
function	file name of ||| file name	count=2
function	returns all but ||| dirname	count=1
module	contents of a ||| instance	count=1
module	this comment ||| rdoc comment	count=3
arg	method ||| symbol method	count=1
function	finishes consumption ||| item end	count=3
function_arg	takes [arg_2] ||| [arg_2] [function_1]	count=3
arg	given input_method as ||| input_method	count=1
arg	[arg_1] as usual ||| [arg_1] [arg_2]	count=3
function	[function_1] the gem ||| [function_1] [function_2]	count=2
function	parses the given representation ||| strptime	count=1
function	[function_1] version ||| [function_1] [function_2]	count=5
returnv	bigdecimal and ||| bigdecimal	count=1
arg	@param object [arg] ||| origin destination [arg]	count=2
module	a rdoc :markup ||| rdoc ri	count=1
function	user dir ||| user	count=1
arg	uri tag_name pair or ||| uri tag_name	count=1
function	next ||| peek	count=1
returnv	proc object proc to ||| proc	count=1
function	the same [function] another ||| [function]	count=1
arg	prefix [arg_2] ||| [arg_2] [arg_1]	count=3
module	instance ||| syslog logger	count=1
module	po entry ||| generator pot poentry	count=2
function_arg	[function_1] command and ||| [function_1] [arg_2]	count=1
function	yields each [function_2] ||| [function_1] [function_2]	count=2
function	returns true [function_2] ||| [returnv_1] setuid [function_2]	count=4
function	field input element ||| field	count=1
module	for nil ‘null’ ||| ext generator generatormethods nilclass	count=1
function_arg	the key [arg_2] ||| [function_1] path [arg_2]	count=1
module	default visibility ||| module	count=1
function	with an ||| with	count=3
module	returns the ||| io	count=1
arg	[arg_1] evaluation order ||| [arg_2] [arg_1]	count=1
module	rdoc :attr for ||| rdoc parser ruby	count=2
function	[function] of ||| [function] row	count=1
arg	and gives it to ||| from_addr to_addrs	count=1
function	the template dir ||| template dir	count=1
arg	creates a socket connected [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=1
function	next object as an ||| next values	count=1
function	string after ||| string post	count=1
module	status class corresponding to ||| httpstatus	count=1
function_arg	file name ||| file name args	count=1
function	to close the ||| close	count=1
function	a methods for ||| make methods	count=2
module	the other parameters ||| drb drbsslsocket	count=1
function_arg	if [arg_2] ||| [function_1] pattern [arg_2]	count=3
function	set the platform to ||| set	count=1
function	extracts [function_2] ||| [function_2] [function_1]	count=6
returnv	block was terminated ||| symbol	count=1
function	the output ||| accept block quote	count=1
module	to ||| rdoc ri driver	count=2
function	rewinds the ||| rewind	count=1
function	superclasses of ||| kind of	count=1
arg	unescape a string ||| string	count=1
returnv	floating point number ||| float	count=2
function_arg	[function_1] rows and ||| [function_1] [arg_2]	count=1
function	each in ||| each	count=1
arg	method in the ||| symbol method	count=1
arg	the signing_key [arg_2] ||| [arg_2] [arg_1]	count=3
function	ipv4 mapped/compatible [function_2] ||| [function_2] [function_1]	count=2
arg	to all_hash ||| all_hash	count=1
arg	context ||| context statements file line	count=1
function	[function_1] error ||| [function_1] [function_2]	count=8
module	hsh ||| hash	count=6
module	returns a ||| ssl sslcontext	count=1
function	[returnv_1] [function_2] of ||| [returnv_1] [function_2]	count=10
arg	of each to visibility ||| visibility singleton	count=1
module	node ||| psych nodes	count=1
arg	body text ||| text	count=1
function	port to ||| port	count=3
module	html ||| rdoc markup tohtml	count=2
module	rows for index access ||| csv table	count=1
module	and coverage array as ||| coverage	count=1
function	exit value associated ||| exit value	count=2
module	for gathering tt sections ||| rdoc markup tottonly	count=1
function	writer stream and ||| stream	count=1
module	dns ||| dns	count=1
module	[module] first n ||| [module]	count=1
module	in the [module] to ||| [module]	count=1
function	a character device false ||| chardev	count=1
function	a time [function_2] ||| [function_2] [returnv_1]	count=1
module	generated json to ||| json ext	count=1
function	they ||| gen sub	count=1
function_arg	converts [arg_2] ||| [function_1] [arg_2]	count=4
function	find a [function_2] ||| [function_2] [function_1]	count=3
function	add a ||| add tag	count=1
function	method only ||| instance method	count=1
arg	then [arg] ||| is_ret [arg]	count=1
function	key from the ||| key	count=1
arg	exception ||| exception	count=3
function	[function_1] body ||| [function_1] [function_2]	count=3
module	i18n supported ||| rdoc i18n	count=1
function_arg	[function_1] as ||| [function_1] [arg_2] selector	count=4
arg	greater than other_ary ||| other_ary	count=1
module	returns [module] ||| [module]	count=5
module	if this proc ||| proc	count=1
function	default port for ||| default	count=2
function	returns true [function_2] ||| [returnv_1] real [function_2]	count=1
arg	given thread ||| thread	count=1
function	help ||| help	count=1
returnv	are immediately available for ||| integer	count=1
module	accept_raw+ ||| markup raw	count=1
arg	[arg_1] value and ||| [arg_1] [arg_2]	count=1
module	the specification contains all ||| gem specification	count=1
module	how often [module] should ||| [module]	count=1
arg	row ||| row	count=2
module	dependencylist that matches but ||| dependencylist	count=1
function	set local ||| local variable set	count=1
function	#convert but for header ||| header convert	count=1
module	the [module] complete ||| gem [module]	count=1
module	identical objects ||| indexer	count=1
arg	[arg_1] cn ||| [arg_2] [arg_1]	count=2
function	those [function] ||| delete [function]	count=3
module	key-value pair corresponding ||| sdbm	count=1
function	returns true [function_2] ||| [returnv_1] directory makable [function_2]	count=2
arg	for method_name [arg_2] ||| [arg_2] [arg_1]	count=2
module	where the n’th ||| rexml elements	count=1
function	this method sends a ||| data	count=1
module	given object thereby ||| object	count=1
module	the smtp ||| net smtp	count=1
arg	v ||| v	count=7
arg	mod’s descendants ||| mod	count=1
function	living nonimmediate [function] in ||| each [function]	count=1
module	returns the ||| set	count=1
function	[function_1] siginfo ||| [function_2] [function_1]	count=1
function	public [function_2] ||| [function_1] [function_2]	count=4
arg	[arg] - bn ||| bits safe [arg]	count=2
function	the integer ||| i	count=1
function	set the ||| util set	count=1
function	installed xml writer ||| installed writer	count=2
function	normalize the list ||| normalize	count=1
function_arg	encodes [arg_2] ||| [function_1] [arg_2]	count=1
module	and stat ||| file stat	count=1
module	dh to ||| openssl pkey dh	count=2
arg	response as an httpresponse ||| body initheader	count=3
function_arg	[function_1] [arg_2] the proper subdirectories for ||| [function_1] default gem subdirectories [arg_2]	count=2
module	bignum with the ||| bignum	count=1
arg	z is ||| z	count=5
arg	if count is ||| count	count=1
module	a new gem ||| gem	count=2
module	database to an in-memory ||| yaml dbm	count=1
module	array ||| ext generator state	count=2
module	jobmanager object ||| irb jobmanager	count=1
function	sets the instance ||| instance variable set	count=2
module	live in if ||| rdoc generator darkfish	count=1
function	to the option ||| option	count=2
function	return the arguments ||| args	count=1
function_arg	[function_1] section ||| [function_1] [arg_2]	count=2
arg	name ||| name text	count=1
function	a suppressed crossref ||| suppressed crossref	count=2
module	attempts to grab ||| thread	count=1
function	the template dir for ||| template dir for	count=1
module	waits if it ||| thread mutex	count=1
returnv	hash containing ||| hash	count=1
module	notifier ||| irb notifier	count=3
function	the file matching ||| find in	count=1
function	peek ||| peek read	count=1
module	using xmlrpc ||| xmlrpc convert	count=1
arg	and signing_cert using ||| signing_cert age extensions serial	count=1
module	does this dependency match ||| gem dependency	count=1
function	creates a self-signed certificate ||| create cert self signed	count=1
function_arg	file [arg_2] ||| [arg_2] [function_1]	count=11
arg	httpresponse object ||| data initheader dest	count=1
function	finds an [function_2] ||| [function_1] [function_2]	count=2
function	names set the visibility ||| set visibility	count=1
module	receiving module in ||| module	count=1
module	cert signature is made ||| x509 request	count=1
function	visibility ||| visibility	count=1
function	:specification from ||| to spec	count=1
function	expect full [function_2] ||| [function_2] [function_1]	count=2
function	returns true if ||| bool dst ?	count=1
module	set as the ||| rexml	count=1
module	tuplespaceproxy ||| rinda tuplespaceproxy	count=1
module	ruby parser ||| parser ruby	count=2
function	if type is ||| ?	count=1
module	a stream emission with ||| emitter	count=1
function_arg	[function_1] name with ||| [arg_2] [function_1]	count=4
function	true if the ||| bool installed ?	count=1
function_arg	a [arg_2] ||| [function_1] message column [arg_2]	count=2
module	this pointer ||| pointer	count=2
module	up this object’s ||| markup	count=1
module	undocumented items ||| rdoc stats	count=1
function	info ||| info	count=3
function	priority of thr ||| priority	count=1
function	[function_1] relative to ||| [function_1] [function_2]	count=3
function	ruby code representation ||| ruby	count=1
module	net :http#read_timeout and net ||| xmlrpc client	count=1
module	objectid as defined ||| objectid	count=1
function_arg	[function_1] for ||| [function_1] [arg_2]	count=8
function	stat [function] ||| [function]	count=1
arg	an optional freefunc that ||| freefunc	count=1
module	systemexitexception ||| systemexitexception	count=1
function_arg	[function_1] spec ||| [function_1] requirement activated [arg_2]	count=1
function	a net :http request ||| request	count=1
function	there ||| include	count=1
arg	as ||| value	count=1
function_arg	writes string ||| syswrite string	count=1
arg	the given pattern ||| pattern	count=1
module	documentation unless documentation ||| rdoc	count=1
module	child ||| rdoc context	count=1
arg	and a parent ||| parent	count=1
function	text child ||| text	count=1
module	the ||| rexml parent	count=2
module	first instance is ||| syslog logger	count=1
function_arg	[function_1] flag file ||| [function_1] output dir [arg_2]	count=1
module	in ||| rdoc	count=5
function	for directives [function_2] ||| [function_1] [function_2]	count=4
arg	spec that [arg_2] ||| [arg_1] [arg_2]	count=1
module	are immediately available ||| sslsocket	count=1
function	storing the result ||| puttextfile	count=1
module	returns the locale ||| rdoc i18n locale	count=1
module	list of files ||| gem specification	count=1
module	list of generators and ||| options	count=1
arg	for size items ||| size	count=1
function	display purposes ||| adding	count=1
function_arg	comment from text ||| comment text	count=2
module	the descriptive ||| gem	count=1
module	descriptive ||| gem specification	count=1
function	for the query ||| query=	count=1
module	–platform ||| gem versionoption	count=1
arg	config ||| config	count=2
arg	src and return a ||| src	count=1
function	[function] value of ||| [function]	count=2
module	certificate and is valid ||| gem security	count=1
function	successful ||| success	count=1
module	po entry for ||| generator pot poentry	count=1
module	of multiple rdoc ||| rdoc	count=1
module	directory passing ||| dir	count=1
module	[module] for which ||| [module]	count=1
module	visitor for ||| rdoc markup	count=7
module	a druby ||| drb	count=1
function	reads the contents ||| read	count=1
function	use to configure various ||| dir	count=1
arg	with anchor [arg_2] ||| [arg_1] [arg_2]	count=9
function	install as ||| install	count=1
module	spec for ||| gem	count=1
function	methods to ||| methods	count=1
module	removes ||| testcase	count=1
module	so ||| gem specification	count=1
module	of this specification used ||| gem specification	count=1
module	socket as a ||| basicsocket	count=1
function	context ||| parse yield	count=1
function	recvfrom ||| recvfrom	count=2
module	can then use to ||| makemakefile	count=1
module	simplerenewer that keeps an ||| rinda simplerenewer	count=1
module	a rational ||| rational	count=1
arg	base and ||| base	count=1
arg	year month day ||| year month day	count=3
function	accept_list_item_end_label ||| list item end label	count=1
module	this ||| resolv dns	count=1
module	call ||| markup formattertestcase	count=1
arg	of mod’s descendants ||| mod	count=1
function_arg	to convert [arg_2] ||| [arg_2] [function_1]	count=8
function	ipv4 loopback address ||| ipv4 loopback	count=1
function_arg	[function_1] [arg_2] ||| [function_1] klass_name [arg_2]	count=6
arg	object on to ||| obj	count=1
function_arg	creates [function_1] [arg_2] ||| socket [function_1] [arg_2]	count=4
function	module or class ||| module	count=1
function	output debug ||| debug	count=1
function_arg	content [arg_2] ||| [arg_2] [function_1]	count=2
arg	adds the reference to ||| ref	count=1
module	a druby ||| drb drbserver	count=1
module	comment ||| rdoc comment	count=1
arg	the given offset then ||| offset	count=1
arg	[arg_1] boolean add ||| [arg_2] [arg_1]	count=4
module	2 dependency ||| gem resolver	count=1
function	if [function_2] ||| [function_2] row [function_1]	count=2
returnv	of ||| float	count=1
function_arg	the status [arg_2] ||| [arg_2] [function_1]	count=2
module	level 1 rdoc ||| rdoc markup	count=1
arg	[arg_1] content ||| [arg_2] [arg_1]	count=2
function	define method as ||| def	count=1
module	the string being scanned ||| stringscanner	count=1
rep	adds [function_arg_2] ||| [module_1] add [function_arg_2]	count=22
function	setter for the scheme ||| scheme=	count=1
function	the year ||| year	count=2
module	the descriptive fields ||| specification	count=1
function	environment variables ||| env	count=1
module	constructor @param parent ||| parent	count=1
module	which [module] ||| [module]	count=2
function	all ||| find all	count=1
function	the root ||| root	count=3
module	the receiving module ||| module	count=1
function	[function_1] valid ||| [function_2] [function_1]	count=4
module	of ||| drb drbobject	count=3
module	specifications that ||| resolver molinillo specificationprovider	count=1
arg	with ||| name	count=6
arg	the given permissions ||| permissions passphrase	count=1
module	accept_raw+ ||| raw	count=1
module	tuplespace ||| rinda	count=3
arg	string to the ||| string	count=1
module	a ||| smtp	count=1
module	can ||| makemakefile	count=1
arg	[arg_1] from requester ||| [arg_1] [arg_2]	count=1
module	paths to ||| gem	count=1
arg	to config [arg_2] ||| [arg_2] [arg_1]	count=1
returnv	object not enabled by ||| obj	count=1
function	at the beginning of ||| begin adding	count=1
function	a ||| new	count=8
module	parser to ||| rdoc parser ruby	count=1
arg	and connects to ||| port helo user secret authtype	count=1
module	if ||| rdoc generator	count=1
function	[function_1] or module ||| [function_1] [function_2]	count=5
module	request ||| webrick	count=5
arg	false then [arg] ||| is_ret [arg]	count=1
module	authoritative instance of the ||| commandmanager	count=1
function	if key is ||| member ?	count=1
returnv	bytes that ||| integer	count=1
function	registered trademark symbols ||| to html	count=1
module	called with ||| handler	count=1
arg	in methods ||| methods singleton	count=1
module	class << myclassname ||| singleclass	count=1
function	a ||| dir	count=1
function	conjugate ||| conj	count=1
module	fields in the ||| specification	count=1
function	pi to the specified ||| pi	count=1
function	parse an ||| parse	count=1
module	adds ||| rdoc	count=1
function_arg	the methods [arg_2] ||| [arg_2] [function_1]	count=2
arg	[arg_1] target ||| [arg_2] [arg_1]	count=4
module	field specified by case-insensitive ||| net httpheader	count=1
module	notifier with the given ||| notifier	count=1
arg	sid ||| sid	count=2
module	constructing entry elements ||| atom entry	count=1
function	if ||| civil ?	count=1
module	the dependency will ||| gem dependency	count=1
function	with the given list ||| with	count=1
module	a ||| ri	count=1
module	the response ||| ocsp response	count=1
function_arg	ensure that [arg_2] ||| [function_1] [arg_2]	count=3
arg	cpu time cstime as ||| cstime	count=1
function	call ||| call	count=1
arg	[arg_1] min sec ||| [arg_1] [arg_2]	count=7
function_arg	define new [function_1] [arg_2] ||| [function_1] [arg_2]	count=9
module	document ||| rexml document	count=1
function	have been ||| setup	count=1
function	returns [function_1] [function_2] ||| fixnum [function_1] [function_2]	count=1
function	dependency and a ||| dependency	count=1
arg	of hash ||| hash	count=2
arg	name to expand git ||| name	count=1
module	of ||| openssl ssl sslcontext	count=1
module	and ||| optionparser	count=1
function	[returnv_1] if ||| [returnv_1] finished [function_2]	count=2
function	specific extra args hash ||| specific extra args hash	count=1
module	they don’t already exist ||| darkfish	count=1
function	in an output directory ||| output dir	count=1
function	:name ||| email	count=1
function	[function_1] constant ||| [function_2] [function_1]	count=3
arg	a string according to ||| string 1	count=2
arg	[arg_1] a tag ||| [arg_1] [arg_2]	count=4
module	docs will live in ||| rdoc	count=1
function	creates [function] enumerator ||| [function]	count=1
function	is not ||| ?	count=1
function	gems that ||| gems	count=1
function	parameters and body ||| params and body	count=1
function	list of available ||| list	count=1
function	has [function_2] ||| [returnv_1] [function_2]	count=3
module	for the given process ||| process	count=1
module	tms object as ||| benchmark tms	count=1
module	systemexitexception with ||| systemexitexception	count=1
module	to this store ||| rdoc store	count=1
function	parses the given ruby ||| parse	count=1
function	a single gem ||| one gem	count=2
function	exec flag for ||| exec	count=1
function	writes the ||| write options	count=1
module	webrick :config :filehandler or ||| webrick	count=1
arg	self_hash [arg] either ||| mod self_hash [arg]	count=1
arg	path as the ||| path	count=1
module	bigdecimal numbers to the ||| bigdecimal	count=1
module	smtp/tls smtps [module] over ||| [module]	count=1
function	returns the number of ||| size	count=2
arg	data for reading ||| data	count=1
module	command ||| command	count=10
function_arg	[function_1] given set ||| [arg_2] [function_1]	count=4
arg	row_count x [arg_2] ||| [arg_1] [arg_2]	count=1
function	quits ||| at exit	count=1
function_arg	extension name enabled? ||| extension ? name	count=1
function	tracing object [function_2] ||| [function_2] [function_1]	count=2
module	ov ||| win32ole_method	count=1
arg	methods to ||| methods	count=1
module	or directory may be ||| net ftp mlsxentry	count=2
module	a druby reference ||| drb	count=1
function_arg	buffer to [arg_2] ||| [arg_2] [function_1]	count=1
arg	nodes matching ||| namespaces variables	count=1
function	the inverse ||| inverse	count=1
arg	other_time are both ||| other_time	count=1
module	the process to its ||| testcase	count=1
arg	config [arg_2] ||| [arg_2] [arg_1]	count=1
function	sorted by salience ||| sorted module	count=1
module	dependencies and ||| requestset	count=1
function	local [function_2] ||| basicsocket addrinfo [function_1] [function_2]	count=1
module	was ||| gem	count=1
function	block for each element ||| each	count=2
function_arg	executable bin on ||| find executable bin	count=1
module	requirement ||| gem requirement	count=1
function_arg	[function_1] ref ||| [arg_2] [function_1]	count=1
module	the process to ||| gem testcase	count=1
module	and waits ||| mutex	count=1
arg	and password ||| password	count=1
function	[function_1] before the ||| [function_2] [function_1]	count=3
function	[function] that ||| [function]	count=1
function	ri [function_2] ||| [function_2] [function_1]	count=1
module	definition ||| rdoc singleclass	count=1
function_arg	and [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	generated docs ||| gen	count=1
arg	anchor ||| anchor	count=3
module	@param index the ||| parent	count=1
function	returns true [function_2] ||| [returnv_1] re exchangeable [function_2]	count=4
function	[returnv_1] [function_2] ||| [returnv_1] compare by identity [function_2]	count=1
arg	with the given ||| key	count=2
arg	[arg_1] tags and ||| [arg_1] [arg_2]	count=1
function	key value pair ||| pair	count=1
arg	writes the given string ||| string	count=1
module	the [module] in ||| [module]	count=3
arg	length n of ||| n	count=1
module	str creating the ||| string	count=1
module	dependency will not ||| gem dependency	count=1
function_arg	[function_1] net :httpresponse ||| [arg_2] [function_1]	count=1
function	defines [function_2] ||| [function_2] [function_1]	count=1
function	[function] block ||| guard [function]	count=2
function	to configure various ||| dir config	count=1
arg	req [arg_2] ||| rdoc servlet asset [arg_2] [arg_1]	count=1
function	iff there [function_1] [function_2] edges within this {#graph} ||| [function_2] [function_1]	count=2
module	finds ||| rdoc classmodule	count=1
function	returns a new [returnv_1] [function_2] in the database ||| [returnv_1] [function_2]	count=1
rep	parses [function_arg_2] ||| [module_1] parse [function_arg_2]	count=7
function	of undocumented items ||| stats	count=1
module	tcltk ||| tcltk	count=1
module	of the object ||| drb drbobject	count=1
module	peer certificates verification ||| openssl ssl sslsocket	count=1
function	copy command to copy ||| copy	count=1
function	content type string ||| type	count=1
module	block ||| gemdependencyapi	count=1
function	request of ||| request	count=1
function	version of a ||| version	count=1
rep	the http [function_arg_2] ||| [module_1] get [function_arg_2]	count=2
function	loads ri ||| load method	count=1
module	the ||| sslconfig	count=1
module	the tempdir ||| testcase	count=1
function	for notifications ||| notify	count=1
arg	given certificates [arg_2] ||| [arg_2] [arg_1]	count=1
function	[returnv_1] the last ||| [returnv_1] [function_2]	count=2
function_arg	parses environment [arg_2] ||| [arg_2] [function_1]	count=2
module	prepares the visitor for ||| markup tordoc	count=3
module	to ||| webrick	count=1
function	calculate the necessary offset ||| set ctypes	count=1
arg	the given extensions for ||| age extensions serial	count=1
arg	quick navigation to ||| req res	count=1
function	the generated docs ||| sub	count=1
function	creates a temporary directory ||| tmpdir	count=1
module	section ||| verbatim	count=1
function	resolution ends either ||| resolution	count=1
arg	returns the ||| string	count=1
function	for class ||| class	count=1
module	the [module] is ||| [module]	count=15
arg	element at count ||| count	count=1
module	the requested ||| resolver	count=1
module	the [module] is garbage ||| [module]	count=1
function	default [function] see basicspecification#default_gem?) ||| bundled [function] ruby	count=1
function	switches ||| by col or row !	count=1
function	the corresponding value ||| value	count=1
module	current [module] is created ||| [module]	count=1
function_arg	[function_1] of list_item ||| [arg_2] [function_1]	count=3
function	[function_1] and ||| [function_2] [function_1]	count=10
arg	digest ||| digest	count=2
module	rdoc :rdoc ||| rdoc rdoc	count=1
arg	of methods ||| methods	count=1
function	[function] date ||| [function]	count=1
arg	command with the options ||| command options	count=1
function	method that ||| method	count=1
function	the named public method ||| public method	count=1
returnv	returns the index ||| integer	count=2
module	:mapping object ||| mapping	count=1
module	struct’s contents see object#hash) ||| struct	count=1
function	hyperbolic tangent ||| tanh	count=1
module	bytes that ||| openssl ssl sslsocket	count=1
module	the uri of ||| drbobject	count=1
function_arg	[function_1] given path ||| [function_1] url [arg_2]	count=5
function	angle ||| angle	count=1
function_arg	ensure [arg_2] ||| [function_1] [arg_2]	count=2
function	template dir for ||| dir for	count=1
arg	for method on klass ||| klass method	count=1
function_arg	[function_1] gives it ||| [function_1] [arg_2]	count=4
returnv	returns a string to ||| string	count=1
arg	given strings ||| strings	count=1
returnv	method as a symbol ||| symbol	count=1
function	get all gem ||| get all gem names and versions	count=1
function	[function_1] [function_2] was created by ||| [function_2] [function_1]	count=6
arg	the given text ||| text code_object &block;	count=2
module	pointer ||| fiddle pointer	count=9
arg	:toplevel ||| absolute_name relative_name	count=1
module	generate a sequence ||| cgi htmlextension	count=1
returnv	the group ||| group	count=1
function	positive intermediate reply 3xx ||| continue	count=1
module	have been provided or ||| drb drbsslsocket	count=1
module	for each ||| rdoc	count=1
function	the latest release-version specification ||| latest spec for	count=1
arg	a string according ||| string	count=4
function_arg	[function_1] port and ||| [arg_2] [function_1]	count=3
function	[function_1] if ||| [function_2] [function_1]	count=2
module	irb sessions ||| irb jobmanager	count=2
function_arg	creates a tcp/ip [function_1] [arg_2] ||| socket tcp [function_1] [arg_2]	count=4
function	to json ||| json	count=1
arg	stream unused ||| margin	count=1
function	the size [function_2] ||| [function_2] allocated [function_1]	count=1
function_arg	[function_1] also_in to ||| [arg_2] [function_1]	count=1
function	loads the given ||| irb load	count=1
module	live in ||| rdoc generator	count=1
function	label ||| label	count=2
function	form using inspect to ||| inspect	count=1
module	:x509 :name ||| gem	count=1
rep	database [function_arg_2] ||| [module_1] [function_arg_2]	count=6
module	no arguments sets the ||| module	count=1
module	last row ||| zlib	count=1
arg	and ios [arg] or ||| [arg]	count=1
arg	op ||| op	count=1
function	user can then use ||| config	count=1
module	user that a gem ||| gem	count=1
module	a pager ||| rdoc ri driver	count=1
arg	[arg_1] user user ||| [arg_2] [arg_1]	count=1
module	this singleton class ||| rdoc singleclass	count=1
arg	the given keys ||| key	count=1
function	[function] containing the ||| [function]	count=1
function_arg	[function_1] given representation ||| [arg_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] socket [arg_2]	count=12
module	the [module] first n ||| [module]	count=1
module	for ||| net http	count=1
module	command that waits for ||| net imap	count=1
module	only entries matching that ||| gem	count=1
module	gem file matching the ||| gem	count=1
module	same day ||| date	count=1
module	the status class ||| webrick	count=1
module	items ||| rdoc	count=1
arg	path if ||| path	count=2
function	[function_1] variables ||| [function_2] [function_1]	count=11
function	sets [function_2] ||| [function_2] variable [function_1]	count=1
function	obtain the lock ||| try lock	count=1
function	gem version from the ||| gem	count=1
function	[function_1] authentication and ||| [function_2] [function_1]	count=4
arg	[arg_1] order ||| [arg_1] [arg_2]	count=1
module	an array ||| array	count=4
module	rdoc :toplevel file ||| rdoc	count=1
function_arg	[function_1] returns string ||| [function_1] [arg_2]	count=2
module	[module] specified ||| [module]	count=1
module	certificate store ||| store	count=1
module	a ||| requestset gemdependencyapi	count=2
module	read from this file ||| zlib gzipreader	count=1
module	conflict ||| resolver conflict	count=2
function_arg	[function_1] file_name doesn’t ||| integer size [function_1] [arg_2]	count=1
arg	spec to ||| spec	count=1
module	[module] :extend ||| [module]	count=2
module	notifytemplateentry ||| rinda notifytemplateentry	count=1
function	installs the gem and ||| install	count=1
module	the –version option to ||| versionoption	count=1
function	the base 2 logarithm ||| log2	count=1
function	a space before the ||| space before	count=1
module	terminated :break :redo ||| localjumperror	count=1
function	@return the index ||| index	count=1
function	finishes consumption ||| accept list end	count=2
module	unless the keep_files environment ||| gem	count=1
returnv	:retry :next :return or ||| symbol	count=1
function	is a header ||| header	count=1
module	that a ||| drb drbsslsocket	count=1
module	dependencylist ||| dependencylist	count=2
arg	[arg_1] string ||| datetime datetime httpdate [arg_2] [arg_1]	count=4
arg	[arg_1] stop character ||| [arg_2] [arg_1]	count=2
function	[function_1] ends ||| [function_2] [function_1]	count=4
module	:http#open_timeout to ||| client	count=1
function	as a thread-local variable ||| thread variable	count=1
module	json string ||| json ext generator state	count=2
arg	for ||| flags	count=1
module	this object’s comment ||| rdoc generator	count=1
function	yields each [function_2] ||| [function_2] [function_1]	count=2
function	the destination [function_2] ||| [function_1] [function_2]	count=2
function	new [function_2] ||| [function_1] [function_2]	count=1
function	time from ||| time	count=1
module	to just the text ||| rdoc markup tolabel	count=1
module	encodes this dsa ||| openssl pkey dsa	count=1
module	dir ||| dir	count=1
arg	the given name ||| name	count=8
function_arg	[function_1] klass ||| [arg_2] [function_1]	count=3
function	spec file for ||| spec file	count=2
module	normalize ||| uri generic	count=1
function	finds a spec and ||| find spec	count=1
function	object which [function] the ||| [function]	count=1
function	an array of strings ||| join	count=1
module	this ||| zlib	count=1
function	default [function_2] ||| [function_2] [function_1]	count=17
arg	descriptor as a ||| mode perm	count=1
module	lazy enumerator ||| enumerator lazy	count=2
function_arg	response [arg_2] ||| [arg_2] [function_1]	count=1
function	class methods private ||| private class method	count=2
function	relative [function_2] ||| [function_1] [function_2]	count=3
function	the executable ||| find executable	count=1
arg	from [arg] and ||| [arg]	count=1
module	this spec’s ||| specification	count=2
module	this request is ||| webrick httprequest	count=1
function	command line by using ||| config	count=1
arg	passing args if any ||| args	count=2
arg	port and calls ||| host port	count=1
function	[function_1] on the ||| [function_2] [function_1]	count=2
arg	does nothing [arg] because it ||| [arg]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=3168
function	contains the given object ||| include	count=1
function	digest to ||| digest !	count=1
module	fields in ||| specification	count=1
arg	paths ||| paths	count=2
function	[function] of ||| defined [function]	count=2
function	already exist ||| gen	count=1
function	when dependency is ||| ?	count=1
function	yes or [function_2] ||| [function_1] [function_2]	count=1
module	pstore object pass in ||| pstore	count=1
arg	[arg] date ||| [arg]	count=9
module	syslog ||| syslog	count=5
function_arg	requirement [arg_2] ||| [arg_2] [function_1]	count=1
function	represents ||| external	count=2
arg	files in include_path ||| include_path	count=1
arg	options and ||| options	count=1
module	an array containing the ||| array	count=1
module	constructs a range using ||| range	count=1
function	as a ||| r	count=1
function	message writer stream and ||| message stream	count=1
function	[returnv_1] last ||| [returnv_1] [function_2]	count=1
function	memory [function_2] ||| [function_1] [function_2]	count=1
arg	host and ||| host allowed_push_host &block;	count=1
function	[returnv_1] result of ||| [function_2] [returnv_1]	count=1
module	the generated ||| rdoc generator	count=1
arg	with the given arguments ||| args	count=1
function	or separated named) ||| get class or	count=1
function	[returnv_1] [function_2] ||| [returnv_1] closed [function_2]	count=2
function	with the private ||| private	count=1
function_arg	[function_1] index ||| [arg_2] [function_1]	count=1
function_arg	[function_1] named ||| [function_1] [arg_2]	count=31
module	length and ||| stats	count=1
function	[function_1] variable ||| [function_1] [function_2]	count=7
function	block once for ||| if	count=1
module	number ||| rdoc	count=1
module	this activation request for ||| gem resolver activationrequest	count=1
module	live in if they ||| rdoc generator	count=1
function	stop tracing object allocations ||| trace object allocations stop	count=1
function	from comment ||| tomdoc	count=1
module	the silent download reporter ||| streamui silentdownloadreporter	count=1
module	the ||| markup tomarkdown	count=2
arg	object and connects ||| port helo user secret authtype	count=1
function	name provided ||| name	count=1
function_arg	trace request [arg_2] ||| [arg_2] [function_1]	count=1
module	ri data for ||| rdoc	count=1
arg	in the obj ||| obj	count=1
function_arg	[function_1] [arg_2] column while parsing ||| [function_1] [arg_2]	count=1
arg	name enabled? ||| name	count=1
module	table to ||| table	count=2
function	[function_1] parser ||| [function_2] [function_1]	count=5
function	a redirection ||| redirect	count=1
arg	status [arg_2] ||| [arg_1] [arg_2]	count=2
arg	object to obj ||| obj	count=1
function	is a zero-length ||| zero	count=1
function	paths ||| paths	count=3
arg	an ||| sym	count=1
function	the specific ||| specific	count=1
module	class ||| attributemanager	count=1
module	sets ||| rdoc ri	count=1
module	context ||| context	count=2
function	key value arrays ||| a	count=3
function	udp/ip sockets ||| sockets	count=1
function	[function] associated with ||| [function]	count=3
module	across multiple object+ ||| array	count=1
module	will ||| rdoc	count=1
arg	set [arg] the given ||| [arg]	count=1
module	this specification ||| resolver	count=2
module	parent ||| parent	count=2
function	handler ||| handler	count=4
arg	- the private key ||| key	count=1
arg	bin on [arg_2] ||| [arg_1] [arg_2]	count=1
arg	b ||| b	count=3
function	load extra [function_2] ||| [function_2] [function_1]	count=1
function	ensure the gem ||| ensure gem	count=3
function	used to [function_2] ||| [function_1] [function_2]	count=1
function	initial [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] res ||| [arg_2] [arg_1]	count=7
function	extra args hash self ||| extra args hash	count=1
function	prefixes names ||| prefixes	count=1
module	the ||| gem testcase	count=3
function	named instance ||| instance	count=1
module	a properly-space ||| rdoc	count=1
function	root directories ||| root ?	count=1
function	the version of ruby ||| ruby	count=1
arg	initialize interp dat : ||| interp dat	count=1
function	sends ||| send	count=1
function	a ||| r	count=3
function	after resolution ends ||| after resolution	count=2
function	the variable map with ||| variable map	count=1
module	function for this pointer ||| pointer	count=1
function	[returnv_1] if the ||| [returnv_1] blockdev [function_2]	count=1
module	this template ||| template	count=1
module	checks that the specification ||| specification	count=1
function	sets the close on ||| set close on	count=1
function	version from ||| new	count=1
function_arg	methods in [arg_2] ||| [arg_2] [function_1]	count=4
arg	line and ||| line	count=1
module	sets ||| xmlrpc	count=1
module	or ||| drb	count=1
function	accept_list_end_number ||| list end number	count=1
rep	[module_1] [function_arg_2] ||| [module_1] escape [function_arg_2]	count=1
function	everything in ||| specs unsatisfied by	count=1
module	marshalled drbobject ||| drb drbobject	count=1
arg	contents ||| gem_data	count=1
function	the digest to ||| digest	count=1
module	of the last row ||| gzipreader	count=1
function	bytes [function_2] ||| [function_2] [function_1]	count=2
module	stream ||| zlib	count=3
function	gem :specification from ||| spec	count=1
arg	the parameters year month ||| year month	count=1
function_arg	[function_1] indicated ||| [arg_2] [function_1]	count=2
arg	converts a target ||| target	count=1
function	the inverse ||| inv	count=1
function	of iteration of the ||| collect	count=1
function	with on the command ||| dir	count=1
arg	a tag implicit ||| tag implicit	count=2
function	workspace stack ||| workspace	count=1
arg	name ||| name value	count=1
module	other parameters provided ||| drb drbsslsocket sslconfig	count=1
function_arg	[function_1] ty ||| [function_1] [arg_2]	count=4
function	[function_1] before ||| [function_2] [function_1]	count=3
module	case ||| rdoc markup formattertestcase	count=1
function	value as a ||| value	count=2
module	the default ||| module	count=1
function	or class ||| class	count=1
function_arg	adds symlink [arg_2] ||| [arg_2] [function_1]	count=7
function	within the directory ||| directory	count=1
arg	new struct object ||| object	count=1
module	math mode see irb ||| irb	count=1
function	[returnv_1] if ||| [returnv_1] socket [function_2]	count=1
function	the path parameter ||| path	count=1
module	into rdoc format ||| rdoc	count=1
returnv	for subsequently ||| self	count=1
function_arg	match [arg_2] ||| [function_1] ? [arg_2]	count=2
arg	i/o port where lines ||| open_args	count=1
arg	variable env ||| env	count=2
arg	front ||| front	count=1
function	program name to be ||| program name	count=2
function	the length and ||| stats	count=1
arg	in list ||| list options	count=2
module	of the ruby parser ||| parser ruby	count=1
function	the superclasses of ||| kind of	count=1
module	first digit of the ||| response	count=1
arg	target ||| target	count=2
module	the output ||| rdoc markup tottonly	count=1
function	starts the profiler ||| profile	count=1
rep	a [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=3
module	reporter that ||| gem streamui	count=4
module	don’t ||| generator darkfish	count=2
module	get ||| drbobject	count=2
function	rb_attr and rb_define_attr ||| attrs	count=1
module	creates server sockets ||| gem server	count=1
function	returns its [function] or raises ||| [function]	count=1
arg	[arg_1] with mode ||| [arg_2] [arg_1]	count=1
module	attempts to ||| mutex	count=1
function_arg	[function_1] to rows ||| [function_1] [arg_2]	count=1
module	html-safe labels ||| markup tolabel	count=1
function_arg	an info [arg_2] ||| [arg_2] [function_1]	count=1
module	file ||| io	count=1
function_arg	returns the element [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	inspect ||| inspect	count=1
function_arg	modification [arg_2] ||| [arg_2] [function_1]	count=1
module	:mailto object from ||| mailto	count=1
arg	object without opening ||| address port p_addr p_port p_user p_pass	count=1
function	object [function_2] ||| [function_1] [function_2]	count=4
module	of the [module] see ||| [module]	count=2
function	original string after ||| string post	count=1
function	returns all classes ||| all classes	count=2
arg	greater than real ||| real	count=1
module	the length and ||| stats	count=1
module	in this package ||| package old	count=1
arg	as an httpresponse object ||| body initheader	count=3
function	[function_1] an empty ||| [function_2] [function_1]	count=3
arg	string describing [arg_2] ||| [arg_2] [arg_1]	count=2
function	the exit [function_2] ||| [function_1] [function_2]	count=3
function	update and close ||| close	count=1
function	modules in this ||| modules	count=1
module	its time ||| time	count=1
function	return it else create ||| if need	count=1
function	path parameter passed ||| path	count=1
function	[function_1] delegator ||| [function_1] instance [function_2]	count=1
function	sends a fetch ||| fetch	count=1
module	of ||| rdoc options	count=2
module	read from this file ||| zlib	count=1
function	gathers ||| gather	count=1
function	alive? ||| alive	count=1
arg	with the given boundary ||| boundary	count=1
module	last row read ||| zlib gzipreader	count=1
function	the file matching ||| find	count=4
arg	fix ||| fix	count=3
function	with the public key ||| public	count=1
function	returns the flags ||| integer flags	count=2
function	removes the last list ||| remove	count=2
arg	the context of ||| context statements	count=1
arg	self to other following ||| other	count=1
module	restricting gems ||| requestset	count=1
function_arg	[function_1] of hash ||| [arg_2] [function_1]	count=1
function	base [function_2] ||| [function_2] [function_1]	count=4
function	method will [function] the ||| [function]	count=1
function	the valid [function_2] ||| [function_1] [function_2]	count=1
arg	against tuple ||| tuple	count=1
function_arg	[function_1] [arg_2] -1 0 or +1 ||| -1,_0,_+1 [function_1] [arg_2]	count=1
arg	[arg_1] requirements ||| [arg_1] [arg_2]	count=1
function	method to create ||| create	count=1
arg	objs ||| objs	count=1
module	accept_indented_paragraph ||| indentedparagraph	count=1
module	have been provided or ||| drb	count=1
function	[function] adding ||| extend [function]	count=1
function	release version and last ||| version	count=1
function_arg	[function_1] uri tag_name ||| [arg_2] [function_1]	count=2
arg	with anchor a tag ||| anchor tag	count=1
module	cookie string into a ||| cgi cookie	count=1
module	verbose download ||| verbosedownloadreporter	count=2
function_arg	[function_1] message ||| [function_1] mailbox [arg_2]	count=3
function	default signing key ||| default key	count=1
function	[function_1] name str ||| [function_2] [function_1]	count=2
function	by the last successful ||| last	count=1
function	unique local ||| unique local ?	count=2
arg	the plaintext password ||| password	count=1
module	block form for ||| gemdependencyapi	count=1
function	returns the tcpserver ||| to	count=1
function	host to ||| host	count=1
function_arg	[function_1] [arg_2] that can be used ||| [function_1] [arg_2] check_load_path	count=4
module	is checked ||| state	count=1
module	this object’s comment ||| generator markup	count=1
module	for the given command ||| gem command	count=1
function_arg	the modification [arg_2] ||| time [function_1] [arg_2]	count=1
module	that ||| sslconfig	count=2
module	for the feed ||| rss atom feed	count=1
module	to select a mailbox ||| net	count=1
function	a siginfo handler ||| siginfo handler	count=2
function	block form for restricting ||| platform	count=1
module	allocates a [module] ||| [module]	count=2
module	of the object ||| drbobject	count=1
module	session and process group ||| process	count=1
module	visitor ||| markup tordoc	count=4
module	ri ||| ri	count=5
arg	an httpresponse object ||| initheader dest	count=1
module	object using readline ||| readlineinputmethod	count=1
module	the ftp session ||| ftp	count=1
function	node ||| value=	count=1
module	new socket object ||| socket	count=1
module	of the ||| gzipreader	count=1
function	class or ||| class	count=1
module	a lazy enumerator ||| enumerator lazy	count=1
arg	with ||| args	count=1
function	all repeated ||| repeated	count=2
function	server in whatever mode ||| put	count=1
function	value arrays ||| a	count=3
arg	namespace [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	evaluates [arg_2] ||| [function_1] [arg_2]	count=3
function	creates an ||| make	count=1
function	resources for ||| getresources	count=1
module	properly-space ||| options	count=1
arg	path ||| path	count=39
function	proppatch request to ||| proppatch	count=1
arg	[arg] a ||| filename [arg]	count=1
rep	a [function_arg_2] ||| [module_1] parser build [function_arg_2]	count=1
function	unescapes ||| unmask protected	count=1
module	attribute ||| rdoc markup attributes	count=1
arg	[arg] given ||| store [arg]	count=1
arg	file_name which can ||| file_name suffix	count=1
rep	[module_1] dn val ||| [module_1] [function_arg_2]	count=2
function	[function] threads in ||| [function]	count=4
function	‘nz_number’ ||| nz number	count=1
returnv	:retry ||| symbol	count=1
function	returns a new ||| new	count=5
function	[function_1] type string ||| [function_1] [function_2]	count=2
function	the list empty? ||| empty	count=1
module	that will ||| rinda	count=2
function	returns a proxy ||| get proxy from	count=2
function	all gem ||| all gem	count=3
module	until the session ||| openssl ssl session	count=1
module	in the dependencylist ||| dependencylist	count=1
module	to ||| xmlrpc client	count=2
function	strips hashes expands tabs ||| normalize comment	count=1
function	[function_1] [function_2] ||| [function_2] number [function_1]	count=6
arg	method identified ||| args...	count=2
returnv	collection returning [returnv] ||| [returnv]	count=2
arg	as the parent ||| parent	count=1
returnv	to grab the ||| self	count=1
function	the token [function_2] ||| [function_1] [function_2]	count=1
returnv	ids [returnv] process ||| [returnv]	count=1
arg	parameters year month day ||| year month day	count=1
arg	of bits ||| bits	count=1
module	the uri of ||| drb drbobject	count=1
module	original state ||| gem	count=1
function	using that ||| config	count=1
module	the raw paragraph ||| markup paragraph	count=1
module	converted to ||| kernel	count=1
arg	list to ||| list options	count=1
arg	[arg] times ||| [arg]	count=1
function	a constant ||| constant	count=2
function	tracing [function_2] ||| [function_2] [function_1]	count=7
arg	the string value stored ||| o	count=1
function	for consuming [function_2] ||| [function_2] [function_1]	count=3
arg	tags and [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	the existing section ||| []= section	count=1
function	status line ||| status line	count=2
function	[function] trusted ||| trust [function]	count=2
module	the authentication was ||| webrick httpauth	count=2
function	a new http server ||| new	count=1
function_arg	[function_1] tuple from ||| [function_1] [arg_2]	count=2
function	[returnv_1] [function_2] ||| stat [returnv_1] [function_2]	count=1
module	dependency ||| gem dependency	count=2
module	for marking up ||| generator markup	count=1
arg	[arg_1] from ||| [arg_1] [arg_2]	count=2
module	row ||| zlib	count=1
function_arg	proppatch request [arg_2] ||| [function_1] [arg_2]	count=2
arg	mounts proc or ||| proc	count=1
function_arg	a new [arg_2] ||| [function_1] server [arg_2]	count=1
module	hash instance ||| generatormethods hash	count=1
function	[function_1] is relative ||| [function_2] [function_1]	count=2
arg	source_buffer ||| source_buffer	count=1
function	are commented [function_2] ||| [function_1] [function_2]	count=4
function	[returnv_1] [function_2] ||| [returnv_1] diagonal [function_2]	count=2
module	generated json ||| json ext	count=1
function	returns false if rxp ||| ?	count=1
module	to pass output ||| ri driver	count=1
function	adds tts ||| accept	count=1
function	setter for the port ||| set port	count=1
module	rdoc :generator :jsonindex ||| rdoc toplevel	count=1
arg	up to ||| flags outbuf options	count=1
module	and certificate ||| security	count=1
function	a local ||| local	count=1
arg	rows and [arg_2] ||| [arg_2] [arg_1]	count=1
function	the hex-encoded hash value ||| hexdigest	count=1
function	pair ||| socketpair	count=1
returnv	rational which ||| rational	count=1
module	creates a new socket ||| socket	count=4
arg	filename and ||| filename	count=2
function	or ||| class or	count=1
function_arg	reads [arg_2] ||| [function_1] [arg_2]	count=3
module	:redo :retry ||| localjumperror	count=1
module	bytes ||| ssl sslsocket	count=2
function	passing it any ||| send	count=1
function	render the erb ||| render	count=1
function	[function_1] class with ||| [function_2] [function_1]	count=1
module	been ||| drb drbsslsocket	count=1
function	[function_1] data ||| [function_1] [function_2]	count=9
module	the stream which ||| openssl buffering	count=2
module	provided or that a ||| drbsslsocket	count=1
module	sslserver ||| openssl ssl sslserver	count=1
module	array containing all ||| array	count=1
function	uri of ||| drburi	count=1
module	this dsa to ||| openssl pkey dsa	count=1
function_arg	[function_1] path ||| [function_1] [arg_2]	count=19
arg	document-class class_name ||| class_name class_mod	count=2
module	local druby server ||| drb	count=1
returnv	attempts to grab the ||| self	count=1
module	they don’t already ||| rdoc	count=1
module	through ||| rdoc	count=1
arg	str ||| str enc separator: '&' use__charset_:	count=1
arg	then [arg] must contain ||| is_ret [arg]	count=1
module	returns nil if argument ||| optionparser switch	count=1
function	pass ||| hmac sha1	count=1
arg	anchor tag [arg_2] ||| [arg_2] [arg_1]	count=4
module	an rdoc :markup ||| rdoc tomdoc	count=2
module	pass output through ||| driver	count=1
module	the encoding object ||| stringio	count=1
module	the comment are ||| rexml comment	count=2
arg	out ||| out indent	count=1
function	data in ||| in	count=1
module	generated docs will live ||| generator darkfish	count=1
function	represent the range ||| range	count=1
function_arg	[function_1] of level ||| [function_1] [arg_2]	count=1
module	the last row read ||| zlib gzipreader	count=1
function_arg	[function_1] x ||| [arg_2] [function_1]	count=3
function_arg	[function_1] members ||| [function_1] [arg_2]	count=2
function	every method call ||| method	count=1
arg	carries the plaintext password ||| password	count=1
function	“with” options with ||| config	count=1
arg	source_uri to the cache ||| source_uri install_dir	count=1
function	hard links to ||| nlink	count=1
module	creates a defaultfilehandler ||| httpservlet defaultfilehandler	count=1
function	the opaque ||| opaque=	count=1
function	[returnv_1] if ||| [returnv_1] has conflicts [function_2]	count=1
module	generators and ||| options	count=1
returnv	returning [returnv] ||| [returnv]	count=4
module	and net ||| client	count=1
function	[returnv_1] numerator ||| [function_2] [returnv_1]	count=2
arg	on the given port ||| port	count=1
module	with ||| gem	count=1
function	the row ||| row	count=1
arg	req for ||| req	count=1
arg	str of ||| str	count=1
module	for subsequently defined methods ||| module	count=1
module	the output ||| rdoc	count=1
module	manager [module] understands ||| [module]	count=1
module	immediately available ||| ssl sslsocket	count=1
module	to the context ||| rdoc context	count=1
module	:sslprivatekey have been ||| drb drbsslsocket	count=1
module	with ||| drbsslsocket	count=1
function	answer ||| choose	count=1
function	output progress information if ||| debug msg	count=1
module	the feed ||| atom feed entry	count=1
function	[function] dependency ||| dependent [function]	count=1
arg	log a ||| progname	count=1
module	in if they ||| darkfish	count=1
arg	key to ||| key	count=3
function	to [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] ||| tkoptiondb [function_1] class [arg_2]	count=2
function	deserializes json string ||| rational json create	count=1
arg	a method method ||| method new_name	count=1
arg	pre-processor for input_file_name that ||| input_file_name	count=1
module	locale ||| rdoc i18n locale	count=1
module	representation for ||| ext generator generatormethods	count=2
function	headers for ||| headers	count=1
module	vertices ||| dependencygraph	count=2
function	exits ||| quit	count=1
function	-1 or 0 ||| <=	count=1
function	can then use to ||| dir	count=1
module	a new [module] :scalar ||| [module]	count=1
module	#param_seq with [module] name ||| [module]	count=1
module	win32ole object ||| win32ole	count=2
function	properly-space list of generators ||| generator	count=1
function	environment ||| from env	count=1
arg	looks up all typeclass ||| typeclass	count=1
arg	and requirements ||| requirements	count=2
function	has terminated false otherwise ||| terminated	count=1
function	the specified [function] adding this ||| extend [function]	count=1
module	by ||| generator	count=1
module	for ||| requestset gemdependencyapi	count=2
module	number of ||| openssl	count=1
arg	and other ||| other	count=3
module	protected ||| getoptlong	count=1
function	builds a methods for ||| make methods	count=1
returnv	[returnv] there are ||| [returnv]	count=3
module	a single string ||| rdoc rd blockparser	count=1
module	to the sslserver when ||| ssl sslserver	count=1
function	instances ||| charset=	count=1
function	[function] child ||| [function]	count=1
module	created the [module] ||| [module]	count=1
module	of the object if ||| drb drbobject	count=1
module	of this method ||| method	count=1
function	[function] associated ||| [function]	count=3
arg	[arg_1] the name ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] [arg_2] with private_key if ||| [function_1] [arg_2]	count=1
function_arg	writes [arg_2] ||| [function_1] [arg_2]	count=10
arg	name called with the ||| name	count=1
arg	[arg_1] salt - ||| [arg_1] [arg_2]	count=2
module	proxied tuplespace ||| rinda tuplespaceproxy	count=4
module	this ||| net smtp	count=3
function	change attributes ||| changed attribute	count=1
returnv	returns the status ||| bool	count=1
function	[function_1] sources ||| [function_1] [function_2]	count=4
module	user ||| makemakefile	count=1
module	signer ||| signer	count=1
module	classes ||| rdoc ri driver	count=1
function	generated docs will ||| gen sub	count=1
function	[function_1] [function_2] for ||| [function_1] [function_2]	count=14
arg	pattern is specified ||| pattern	count=1
function	[returnv_1] [function_2] any thread has ||| [returnv_1] [function_2]	count=2
function	array of classes ||| classes	count=1
arg	string or block in ||| string	count=1
arg	other which may be ||| other	count=1
arg	string or block in ||| string filename lineno	count=1
arg	tk setting the ||| context single tk	count=2
module	availableset ||| gem availableset	count=2
arg	all hostnames for address ||| address	count=1
function	return the name of ||| name	count=1
function	set-user-id permission bit set ||| setuid	count=1
function	the ip address of ||| getaddress	count=2
function	mode storing ||| puttextfile	count=1
module	and removes the tempdir ||| testcase	count=1
function_arg	[function_1] tag ||| [function_1] [arg_2]	count=1
module	file or the ||| pathname	count=1
function	length and ||| stats	count=1
module	for this engine ||| engine	count=1
arg	from block_quote ||| block_quote	count=1
arg	the user user ||| user	count=1
arg	the specified key false ||| key	count=1
function	the setter ||| setter	count=1
returnv	returns and assigns to ||| string	count=1
module	json string ||| json ext generator	count=2
arg	[arg_1] encoding ||| [arg_1] [arg_2]	count=1
arg	comment and ||| comment	count=1
function	[function_1] [function_2] value n denominator value ||| [function_2] [function_1]	count=1
module	rdoc :toplevel ||| rdoc codeobject	count=1
module	of this [module] assumed ||| csv [module]	count=1
arg	by running the ||| command... options	count=1
function	[function_1] options to ||| [function_2] [function_1]	count=2
arg	given path ||| path	count=3
function	:x509 :name ||| email to name	count=1
function	instance [function] ||| [function]	count=1
arg	supplied uri and tag_name ||| uri tag_name class_name	count=1
arg	that the dependency is ||| dependency	count=1
function	starts tracing object ||| trace object	count=3
function	[returnv_1] [function_2] following edges within this ||| [returnv_1] [function_2]	count=1
module	restricting gems to ||| gemdependencyapi	count=1
function_arg	data in [arg_2] ||| [function_1] [arg_2]	count=2
arg	connects to the ||| helo user secret authtype	count=1
arg	present or fills the ||| page klass	count=1
function	a matrix [function] ||| [function]	count=1
module	the component array ||| generic	count=1
function	copy of the method ||| alias method	count=1
module	section ||| rdoc markup verbatim	count=1
arg	level and [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	add the specified ||| add value digits	count=2
function	[function_1] private ||| [function_2] class [function_1]	count=1
function	unresolved [function] gem list ||| remove unresolved [function]	count=1
function	quietly ensure the ||| ensure	count=2
function	newer than all ||| uptodate	count=1
arg	the named file ||| file_name	count=14
arg	that deprecates [arg] by wrapping ||| [arg] repl year	count=1
function_arg	to append [arg_2] ||| [arg_2] [function_1]	count=4
module	webrick :config :filehandler ||| webrick	count=1
module	this hash instance ||| json ext generator generatormethods hash	count=1
module	respected for this element ||| rexml element	count=1
function	as a der-encoded string ||| to der	count=1
function	:x509 :name ||| to name	count=1
function	returns true [function_2] ||| [returnv_1] empty [function_2]	count=4
module	be installing ||| gem	count=1
arg	limit bytes ||| limit	count=1
module	strings using file ||| file	count=1
module	on the command line ||| makemakefile	count=1
module	remote ||| drbobject	count=1
arg	version encoding ||| version encoding	count=2
arg	found ||| found	count=1
module	wraps text [module] wrap ||| [module]	count=1
arg	to [arg_2] ||| addrinfo connect to [arg_2] [arg_1]	count=3
function	of undocumented items in ||| doc	count=1
function	[function_1] empty ||| [function_2] [function_1]	count=2
module	the items in enum ||| enumerable	count=1
function	a get [function_2] ||| [function_2] [function_1]	count=4
function	of undocumented ||| doc	count=1
function	a singleton ||| singleton	count=2
function_arg	[function_1] given path ||| [arg_2] [function_1]	count=6
module	that cert ||| x509 request	count=1
arg	on dir ||| dir	count=1
function_arg	returns nil [function_1] [arg_2] ||| filetest integer size [function_1] [arg_2]	count=4
function_arg	or no [arg_2] ||| [arg_2] [function_1]	count=1
module	returns the ||| syslog	count=1
function_arg	and object [arg_2] ||| [function_1] uri [arg_2]	count=1
function	public ||| public instance	count=1
function	adds a value ||| add	count=1
function	from unresolved [function] gem list ||| remove unresolved [function]	count=1
module	and ||| thread mutex	count=3
function	the array of ||| a	count=1
module	ensures that :sslcertificate and ||| drb drbsslsocket	count=1
function	[function_1] header ||| [function_2] [function_1]	count=1
arg	list and tag ||| tag list	count=3
arg	subject [arg_2] ||| [arg_2] [arg_1]	count=3
function	optionally up to ||| slice !	count=1
function	[returnv_1] [function_2] to proc body ||| [returnv_1] [function_2]	count=1
arg	an httpresponse ||| data initheader dest	count=1
module	this ||| json ext	count=1
arg	error ||| error	count=2
function	is passed [function_2] ||| [function_2] number [function_1]	count=1
module	the certificate store ||| x509 store	count=1
function_arg	extensions [arg_2] ||| [function_1] [arg_2]	count=1
function	the defaults for methods ||| methods etc	count=1
arg	from ||| api_data	count=1
arg	the sym returning ||| sym	count=1
module	a [module] created by ||| [module]	count=2
module	the tempdir unless the ||| gem	count=1
function	[returnv_1] [function_2] ||| [returnv_1] field row [function_2]	count=4
arg	:http object without opening ||| p_addr p_port p_user p_pass	count=1
module	uri of the remote ||| drb	count=1
arg	cpu ||| cpu	count=1
function_arg	[function_1] [arg_2] ||| [function_1] pass [arg_2]	count=4
function_arg	marshal [arg_2] ||| [function_1] [arg_2]	count=1
module	not a [module] created ||| [module]	count=2
arg	by n matrix a ||| n zero	count=1
arg	given key string ||| key	count=1
function	docs will live ||| gen sub	count=1
function	of the superclasses of ||| is a	count=1
function	make command for ||| make command	count=1
arg	status and [arg_2] ||| [arg_1] [arg_2]	count=2
module	to a ||| requestset	count=1
module	class corresponding ||| webrick httpstatus	count=1
function	status [function_2] ||| [function_1] [function_2]	count=2
function	handler ||| set default handler	count=1
function	accept_list_end_ualpha ||| list end ualpha	count=1
arg	size ||| size	count=2
module	the tempdir ||| gem	count=1
function_arg	[function_1] [arg_2] ||| [function_1] x y [arg_2]	count=3
arg	bits on the named ||| file_name	count=1
module	conflicting dependency’s name ||| gem resolver conflict	count=1
module	in ||| ext generator generatormethods string	count=1
function	sends a delete ||| delete	count=1
function	[function_1] server alive? ||| [function_2] [function_1]	count=2
module	for ||| markup tottonly	count=2
module	following certificate and ||| gem security	count=1
module	the ||| webrick utils	count=2
module	an openssl :ocsp ||| openssl ocsp	count=1
module	exist ||| generator darkfish	count=2
function_arg	[function_1] found trying ||| [function_1] [arg_2]	count=3
function	encoding of the internal ||| internal encoding	count=1
function	the given [function] element ||| [function]	count=1
function	:http#read_timeout and net :http#open_timeout ||| timeout=	count=1
function	from ||| arg	count=1
function	undocumented ||| doc stats	count=1
module	@return dependencygraph the ||| resolver molinillo	count=1
module	pass ||| ri driver	count=2
module	an openssl :x509 ||| gem	count=1
module	cookie ||| cgi cookie	count=1
module	to the output ||| rdoc	count=1
function	with ||| def pre proc	count=1
arg	count is the ||| count	count=1
module	redundancies ||| gem specification	count=1
module	marks up ||| rdoc markup	count=2
arg	and the given extensions ||| age extensions	count=2
module	to a ||| gemdependencyapi	count=1
arg	sec seconds into the ||| sec	count=1
module	corresponding ||| gdbm	count=1
function	message writer stream ||| message stream	count=3
returnv	sets the ||| self	count=1
module	the visitor for ||| rdoc markup tomarkdown	count=1
module	an initialized tms ||| tms	count=1
arg	year [arg_2] ||| [arg_2] [arg_1]	count=7
function	key string in ||| key	count=1
arg	specified destination mailbox ||| set mailbox	count=1
module	for marking ||| generator markup	count=1
function	[function_1] exec flag ||| [function_1] [function_2]	count=4
function	the raw [function_2] ||| [function_2] [function_1]	count=3
function	remaining data held in ||| final	count=1
function	as [function] be called ||| [function]	count=1
arg	if [arg] ||| [arg]	count=5
module	element overwriting any ||| element	count=1
module	to this object’s path ||| rdoc generator markup	count=1
arg	file_name doesn’t exist or ||| file_name	count=2
function	object that represents the ||| external	count=2
function	scans content [function_2] ||| [function_1] [function_2]	count=1
function_arg	adds parts to ||| push parts	count=1
arg	values ||| values	count=1
function	name to ||| name	count=2
function	the return value ||| obj value	count=1
function	[function_1] message writer ||| [function_1] [function_2]	count=1
module	using readline ||| readlineinputmethod	count=1
module	drb :drbobject given ||| drb drbobject	count=1
module	the comment are used ||| rexml comment	count=2
module	by using identical objects ||| gem indexer	count=1
function	the private instance methods ||| private instance methods	count=1
module	class ||| httpstatus	count=1
arg	for name ||| name	count=7
returnv	fractional ||| numeric_result	count=1
function_arg	methods matching [arg_2] ||| [function_1] [arg_2]	count=1
function	is for ||| ?	count=1
arg	req on [arg_2] ||| [arg_1] [arg_2]	count=5
module	[module] :scalar ||| [module]	count=1
function	union of the ||| union	count=1
arg	a specified mailbox ||| mailbox	count=1
function	::new is private [returnv_1] [function_2] ||| [returnv_1] [function_2]	count=1
function	of parsed elements ||| iso8601	count=1
module	with analysis and ||| basicspecification	count=1
function	exception [function_2] ||| [returnv_1] [function_2]	count=1
function	live in ||| gen	count=1
function	fully resets ||| self reset	count=1
returnv	zero [returnv] otherwise ||| [returnv]	count=1
arg	current process by running ||| command... options	count=1
arg	given prefix ||| prefix	count=1
arg	subject and key ||| subject key age	count=1
module	sends ||| net imap	count=1
arg	creates the scripts ||| filename bindir	count=1
function	may be exchanged on ||| re exchangeable	count=1
module	json index to ||| rdoc	count=1
function	[function_1] proxy uri ||| [function_2] [function_1]	count=4
arg	req on [arg_2] ||| [arg_2] [arg_1]	count=5
function	page list for ||| page list	count=2
module	asn1data into ||| asn1 asn1data	count=1
function	readable by ||| readable	count=4
function	of bytes read out ||| bytes read	count=1
arg	returns just the text ||| text	count=1
module	overrides ||| vector	count=2
function	of @return the index ||| index	count=1
function	a public key associated ||| public	count=1
returnv	be set ||| instance	count=1
function	returns true [function_2] ||| threadswait [returnv_1] [function_2]	count=6
arg	the name ||| name	count=4
function	of which ||| element=	count=1
function	if there is ||| include ?	count=1
module	build ||| gem specification	count=1
function	heading banner preceding ||| banner	count=1
module	prepares the visitor ||| markup totableofcontents	count=1
module	restricting gems to ||| requestset	count=1
function	a special for ||| special	count=2
function	class or ||| to classes or	count=1
module	and ||| xmlrpc client	count=2
function	properly-space list of ||| generator	count=1
module	str into substrings ||| string	count=1
function	yields ||| each	count=1
function	onto ||| push	count=1
module	unless the keep_files ||| testcase	count=1
arg	extends the given base_method ||| base_method	count=1
arg	initialize(interp t ||| t args	count=1
module	asks ||| userinteraction	count=1
function_arg	[function_1] the named ||| [arg_2] [function_1]	count=25
function_arg	[function_1] the message ||| [arg_2] [function_1]	count=3
returnv	accept [returnv] after o_nonblock ||| [returnv]	count=1
function	issuer ||| issuer of	count=1
function	loop [function_2] ||| [function_1] [function_2]	count=2
function	jobmanager in ||| jobmanager	count=1
function	items in ||| stats	count=1
module	when this handle is ||| fiddle handle	count=1
module	block form for ||| gem	count=1
module	rdoc ||| rdoc codeobject	count=2
module	the ||| zlib	count=2
arg	string according to some ||| string 1	count=2
arg	an optional label ||| label	count=1
arg	[arg_1] signing_cert using ||| [arg_2] [arg_1]	count=2
module	up this ||| markup	count=1
module	:next :return or :noreason ||| localjumperror	count=1
module	sets the ||| xmlrpc client	count=1
arg	[arg_1] enclosing to ||| [arg_2] [arg_1]	count=1
module	a given xpath ||| xpath	count=1
module	gem specifically the paths ||| gem	count=1
module	new [module] object where ||| [module]	count=1
function	protected ||| protected	count=2
function	[returnv_1] year 1-366 ||| [function_2] [returnv_1]	count=1
module	[module] :httputils ||| [module] httputils	count=3
function	sets up a ||| setup	count=1
module	pipes and stat is ||| file stat	count=1
function	undocumented items in ||| stats	count=1
module	a [module] same value ||| [module]	count=1
module	remote object ||| drb	count=1
arg	directives in comment ||| tk comment	count=1
function	it [function] ||| to [function]	count=3
module	the –version option to ||| gem versionoption	count=1
module	last ||| pathname	count=1
module	setter for ||| uri ldap	count=5
arg	singleton context ||| singleton	count=1
arg	string according to some ||| string 1 jan -4712	count=2
function	make command for the ||| make command	count=1
module	will live ||| generator	count=1
arg	whether the given requirement ||| requirement	count=1
function_arg	[function_1] a parent ||| [arg_2] [function_1]	count=4
module	an rdoc :store ||| rdoc servlet	count=1
function	private ||| private	count=8
function	switches ||| by col or	count=1
module	and ||| rdoc options	count=2
function	look up a module ||| find symbol module	count=1
arg	enclosing to a ||| enclosing	count=1
function	instance [function_2] ||| [function_2] [function_1]	count=12
arg	implicit start ||| implicit	count=2
function	match the latest ||| specific	count=1
function	dependency is a ||| ?	count=1
function	a look ||| new	count=1
arg	arg ||| arg	count=7
module	variable ||| gem testcase	count=1
function	object [function_2] ||| [returnv_1] [function_2]	count=6
function	name of [function_2] ||| [function_1] [function_2]	count=1
module	both ||| rexml attribute	count=1
module	this gem was created ||| gem specification	count=1
function	[returnv_1] [function_2] ||| [returnv_1] sticky [function_2]	count=2
function_arg	variable [arg_2] ||| [function_1] set [arg_2]	count=4
function	info [function_2] ||| [function_2] [function_1]	count=1
function	private method is ||| private method	count=1
function	[function_1] encoding magic ||| [function_1] [function_2]	count=1
function	for directives in ||| for directives in	count=3
function	for a udp server ||| udp server	count=1
function	delete [function_2] ||| [function_2] [function_1]	count=1
arg	object and connects ||| helo user secret authtype	count=1
function	from ||| update	count=1
returnv	number of ||| integer	count=5
function	the rubygems ||| rubygems	count=1
module	tempdir unless ||| gem	count=1
module	for classes ||| rdoc	count=2
function	returns a new [returnv_1] [function_2] database ||| sdbm [returnv_1] [function_2]	count=1
arg	[arg_1] order of ||| [arg_2] [arg_1]	count=1
module	internally by cgi :session ||| cgi	count=1
arg	[arg_1] string ||| datetime datetime rfc3339 [arg_2] [arg_1]	count=4
module	c code corresponding ||| rdoc parser c	count=1
function_arg	instance methods [arg_2] ||| [function_1] [arg_2]	count=3
arg	set to true enables ||| enable	count=1
module	generated docs will ||| generator	count=1
module	from this hash instance ||| hash	count=1
returnv	element of [returnv] replacing ||| [returnv]	count=1
module	generation ||| rdoc generator darkfish	count=1
module	or rdoc ||| rdoc	count=1
module	read from ||| gzipreader	count=1
module	xml-rpc [module] document ||| [module]	count=1
function	get all gem ||| get all gem	count=4
module	rdoc :markup ||| rdoc markup formattertestcase	count=1
function	permissions [function_2] ||| [function_2] [function_1]	count=2
module	returns ||| win32ole_method	count=1
module	for restricting gems ||| requestset gemdependencyapi	count=1
module	for uri :ldap this ||| uri ldap	count=1
function	truncated to ||| int	count=1
function	methods [function_2] ||| [function_1] [function_2]	count=1
function	encode ||| encode	count=1
module	source by using identical ||| indexer	count=1
module	progress ||| molinillo ui	count=1
arg	req [arg_2] ||| [arg_2] [arg_1]	count=5
function	if ssl/tls is ||| use ssl ?	count=1
arg	[arg_1] on front ||| [arg_2] [arg_1]	count=1
function	append the ||| append	count=1
function	of undocumented items in ||| doc stats	count=1
function	[returnv_1] flags ||| [returnv_1] [function_2]	count=1
arg	in ||| container	count=1
function	comment for ||| comment	count=1
function	unconverted_fields() ||| unconverted fields	count=1
function	create the directories the ||| gen sub directories	count=1
module	method object using readline ||| readlineinputmethod	count=1
function	on the ||| dir config	count=1
module	this parser ||| rdoc parser	count=1
function	prime factorization and ||| prime	count=2
function	each [function] in the ||| each [function]	count=1
arg	bits the issuer cn ||| bits cn	count=1
module	returns ||| options	count=1
module	the last ||| zlib	count=1
arg	at key in ||| key	count=1
arg	a prefix or ||| prefix	count=1
function	[function_1] error of ||| [function_1] [function_2]	count=6
function	this a [function_2] ||| [function_2] [function_1]	count=2
returnv	as the ||| instance	count=1
module	manager [module] understands bold ||| [module]	count=1
module	of ifaddr ||| socket ifaddr	count=6
module	provided or ||| drbsslsocket	count=1
module	from [module] and ||| [module]	count=2
module	its original ||| gem	count=1
function	internal string if conversion ||| internal	count=1
module	supplied will be ||| rexml	count=1
function	the first [function_2] ||| [function_1] [function_2]	count=3
arg	document-class ||| class_mod	count=1
function	instance ||| instance	count=15
function	message [function_2] ||| [function_1] [function_2]	count=2
function_arg	class [arg_2] ||| [arg_2] [function_1]	count=7
function	list ||| list	count=13
function	last successful [function_2] ||| [function_1] [function_2]	count=1
function	the visibility ||| parse visibility	count=1
function	number of undocumented items ||| doc stats	count=1
function	located [function_2] ||| [function_2] [function_1]	count=10
module	iff [module] ||| [module]	count=1
function	[function_1] suppressed crossref ||| [function_2] [function_1]	count=1
module	to ||| uri	count=1
arg	from start ||| start	count=1
module	raw paragraph ||| rdoc markup paragraph	count=1
function	the priority ||| priority	count=1
module	with the other parameters ||| drbsslsocket	count=1
function	local address ||| local ?	count=1
module	availableset as a ||| availableset	count=1
arg	[arg_1] min ||| [arg_1] [arg_2]	count=7
function	switches the ||| by col or	count=1
module	for stat ||| stat	count=1
returnv	nested array ||| array	count=1
module	rdoc :attr from comment ||| rdoc	count=1
function	no ||| no	count=1
module	message extractor ||| generator pot messageextractor	count=1
arg	the depth event ||| depth	count=1
arg	answer question ||| question	count=1
module	onto the ||| gem package tarwriter	count=1
arg	seed to set the ||| seed	count=1
module	ri data for ||| rdoc ri	count=3
function	a self-signed certificate with ||| cert self signed	count=1
function	workspace stack ||| level	count=1
arg	[arg_1] encoding standalone ||| [arg_2] [arg_1]	count=1
arg	request to the path ||| path data	count=1
arg	to host and path ||| path host allowed_push_host	count=1
module	tobs that is ||| tobs	count=1
function	[returnv_1] [function_2] ||| [returnv_1] directory [function_2]	count=3
module	object instead of ||| rdoc toplevel	count=1
function	rubygems ||| rubygems	count=3
module	encoding object that represents ||| stringio	count=1
function	adds a [function_2] ||| [function_1] [function_2]	count=20
module	this ||| smtp	count=2
function	an ||| email to	count=1
module	thing in ||| rdoc	count=1
function	installs ||| install extend	count=1
function	singleton [function_2] ||| [function_2] [function_1]	count=1
function	the #page_dir to the ||| finish page dir	count=1
arg	by n ||| n zero one	count=1
function	in if they ||| sub	count=1
arg	[arg_1] pass ||| passwd [arg_1] user [arg_2]	count=1
module	another version ||| version	count=1
function	bytes in the machine ||| size	count=1
module	up this object’s comment ||| rdoc generator	count=1
module	so ||| gem	count=1
returnv	generates a mask ||| priority_mask	count=1
function	in str as a ||| to	count=1
module	a c ||| parser c	count=1
function_arg	[function_1] [arg_2] ||| [function_1] encoding [arg_2]	count=1
arg	methods for the name ||| name	count=1
arg	numeric ||| big numeric	count=1
arg	setting the ||| single	count=1
function	valid ip addresses ||| set valid ip	count=2
function	already ||| sub	count=1
arg	[arg_1] to pass ||| [arg_2] [arg_1]	count=1
arg	value and ||| value	count=2
module	the [module] starting with ||| [module]	count=1
module	process ||| testcase	count=1
module	files list ||| rdoc options	count=1
arg	calling method ||| method	count=1
arg	in the file filename ||| filename	count=1
function_arg	[function_1] [arg_2] ||| tkresourcedb [function_1] class [arg_2]	count=2
module	check command [module] ||| [module]	count=3
module	to ||| benchmark	count=1
function	get a ||| get	count=2
arg	object to ||| obj	count=1
arg	and the given extensions ||| extensions	count=2
arg	returns a subset of ||| refname mailbox	count=1
function_arg	workspace to [arg_2] ||| [arg_2] [function_1]	count=1
module	:ocsp ||| ocsp	count=2
arg	greater than numeric ||| big numeric	count=1
function_arg	no [arg_2] ||| [arg_2] [function_1]	count=1
function	a content ||| content	count=1
function	main page ||| main	count=1
function	iff there [function_1] [function_2] {#graph} ||| [function_2] [function_1]	count=2
module	:document object ||| document	count=1
arg	that is generated ||| state	count=1
arg	args if ||| args	count=2
module	[module] :installed ||| [module]	count=3
module	returns ||| syslog logger	count=1
module	parser ||| rdoc parser	count=6
function	resets the digest to ||| digest	count=1
function	successor ||| succ	count=1
function_arg	[function_1] to ||| [arg_2] [function_1]	count=1
function	[function] from ||| delete [function]	count=1
function_arg	leap year of ||| leap ? year	count=1
function_arg	greater than [arg_2] ||| [function_1] float [arg_2]	count=1
function	[returnv_1] if ||| [returnv_1] terminated [function_2]	count=1
returnv	returns true if mod ||| bool	count=1
function	returns [function_2] ||| [returnv_1] allocation [function_2]	count=1
function_arg	[function_1] decimal to ||| [arg_2] [function_1]	count=6
module	adds tts from ||| rdoc	count=1
function_arg	object obj and ||| object tag obj	count=1
arg	[arg_1] a singleton ||| [arg_1] [arg_2]	count=1
returnv	returning [returnv] garbage ||| [returnv]	count=2
module	prepares ||| rdoc markup tomarkdown	count=2
function_arg	request to [arg_2] ||| [arg_2] [function_1]	count=3
module	that cert signature ||| openssl x509	count=1
module	rdoc task ||| rdoctask	count=1
module	to ||| client	count=1
module	a description of the ||| openssl	count=1
arg	[arg_1] and y ||| [arg_2] [arg_1]	count=1
function	from ||| from	count=3
module	sessions used ||| jobmanager	count=1
arg	the supplied name ||| name	count=1
function	false if rxp ||| ?	count=1
arg	the given prefix ||| prefix	count=1
function	[returnv_1] if ||| [returnv_1] directory [function_2]	count=1
module	get the uri ||| drb	count=1
arg	prefix ||| level prefix	count=1
function	the last win32 error ||| win32 last	count=1
module	use by ri ||| generator ri	count=1
module	marking up this ||| rdoc generator markup	count=1
arg	file as usual file ||| mode: 0 options	count=1
function	the remote object ||| drburi	count=1
function	concatenated ||| concat	count=1
module	rdoc ||| rdoctask	count=1
module	dependencyrequest for ||| gem resolver dependencyrequest	count=1
arg	a ber- or der-encoded ||| der	count=1
function	[returnv_1] [function_2] ||| dependencygraph vertex [returnv_1] [function_2]	count=1
module	or rdoc :attr ||| rdoc parser	count=1
arg	:attr directives in comment ||| tk comment	count=1
returnv	is given returns ||| string	count=1
function_arg	path from [arg_2] ||| [arg_2] [function_1]	count=2
module	this dh instance ||| pkey dh	count=1
function_arg	dn [arg_2] ||| [function_1] [arg_2]	count=2
module	of ||| rdoc codeobject	count=2
returnv	user ids [returnv] process ||| [returnv]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] methods [arg_2]	count=3
arg	of decimal ||| decimal	count=3
module	the ||| optparse	count=1
function	mapping ||| mapping	count=1
function	after ||| post	count=1
arg	freefunc that will be ||| freefunc	count=1
arg	[arg_1] start to ||| [arg_2] [arg_1]	count=1
function	to its pem encoding ||| export	count=1
module	namespace [module] element ||| [module]	count=1
function	for each [function_2] ||| [function_2] [function_1]	count=6
module	by ||| rdoc generator	count=1
module	isn’t ||| mutex	count=1
module	other ||| drb drbsslsocket	count=1
module	array that is a ||| array	count=1
arg	exception [arg_2] ||| [arg_1] [arg_2]	count=3
arg	safe - [arg_2] ||| [arg_2] [arg_1]	count=1
function	or if the operating ||| ?	count=6
module	this codeobject ||| rdoc codeobject	count=4
function	this sets the initial ||| initial	count=1
module	waits ||| gem testcase	count=1
function	a prime factorization ||| from prime	count=4
function	return internal super ||| internal super	count=2
arg	value stored in ||| o	count=1
returnv	status of the child ||| status	count=1
function	the protocol ||| protocol	count=1
arg	enclosing to [arg_2] ||| [arg_2] [arg_1]	count=2
function	individual raw [function_2] ||| [function_1] [function_2]	count=3
module	openssl :digest ||| openssl pkey pkey	count=1
module	the parser ||| rdoc parser	count=1
arg	the contents of filename ||| filename	count=1
module	available encoding ||| encoding	count=1
module	creates a [module] of ||| [module]	count=1
module	the generated json #max_nesting ||| json ext	count=1
module	an rdoc :attr ||| rdoc parser ruby	count=3
function	class [function_2] ||| [function_1] [function_2]	count=7
function	returns a new [returnv_1] [function_2] database ||| [returnv_1] [function_2]	count=1
module	for ||| rinda	count=1
function	with the public ||| public	count=1
rep	[module_1] modulo other ||| [module_1] [function_arg_2]	count=1
function	directories the ||| directories	count=1
module	that :sslcertificate and ||| drbsslsocket sslconfig	count=1
function	status type ||| status type char	count=2
arg	of platforms ||| platforms	count=1
arg	pairs ||| pairs	count=1
module	for marking up this ||| generator	count=1
module	retrieves the ||| webrick	count=1
function	doesn’t or if the ||| ?	count=3
module	gem is available from ||| gem package	count=1
arg	given sources or ||| sources	count=1
arg	the signing_key [arg_2] ||| [arg_1] [arg_2]	count=2
module	of the ||| stringio	count=1
returnv	is given returns the ||| string	count=1
function_arg	requirement of [arg_2] ||| [function_1] ? [arg_2]	count=1
returnv	[returnv] each ||| [returnv]	count=1
function	signal a break ||| word break	count=1
function	returns ||| doc stats	count=1
module	certificate ||| gem security	count=3
function	permissions ||| permissions	count=1
arg	array ary ||| ary	count=1
function_arg	retrieves [arg_2] ||| rinda tupleentry [function_1] [arg_2]	count=1
function	key [function_2] ||| [function_2] [function_1]	count=1
function	the name and ||| name	count=1
function_arg	[function_1] from string ||| [function_1] [arg_2]	count=2
module	bourne shell ||| shellwords	count=1
arg	[arg_1] size items ||| [arg_1] [arg_2]	count=3
module	this [module] ||| [module]	count=5
arg	and other_time ||| other_time	count=1
function	[returnv_1] create ||| vector [returnv_1] [function_2]	count=2
module	stringinputmethod ||| xmp stringinputmethod	count=1
module	string into a hash ||| cgi	count=1
module	that will ||| gem	count=1
arg	the given set ||| set	count=3
function	[function_1] loop ||| [function_1] [function_2]	count=1
module	returns ||| zlib	count=1
function	will ||| new	count=1
function	[function_1] real user ||| [function_1] [function_2]	count=1
returnv	is valid given ||| bool	count=1
function_arg	[function_1] parser for ||| [function_1] [arg_2]	count=2
function	build ||| build	count=3
module	the ruby parser ||| rdoc parser ruby	count=1
module	the ||| markup totableofcontents	count=2
rep	setter for [function_arg_2] ||| [module_1] [function_arg_2]	count=6
function_arg	instance variable [arg_2] ||| [function_1] set [arg_2]	count=2
function	the appropriate [function] in ||| [function]	count=1
module	with the other parameters ||| sslconfig	count=1
function	use ||| dir config	count=1
function_arg	less than [arg_2] ||| [function_1] float [arg_2]	count=1
module	are immediately available ||| openssl ssl sslsocket	count=1
function	[function_1] of extra ||| [function_2] [function_1]	count=1
function	[function_1] xml writer ||| [function_2] [function_1]	count=5
rep	[module_1] [function_arg_2] ||| [module_1] ri driver load [function_arg_2]	count=1
module	of ||| ssl sslcontext	count=1
module	calling to_s), converts ||| json ext generator generatormethods	count=1
module	feed ||| feed entry	count=1
function	method to add ||| add	count=1
module	if stat has the ||| file stat	count=2
returnv	terminated :break :redo :retry ||| symbol	count=1
module	install ||| gem indexer	count=1
arg	cn ||| cn	count=1
module	contains the session ||| openssl ssl session	count=1
function	csv ||| csv	count=1
function	the list ||| name list	count=1
arg	methods ||| methods singleton	count=1
function_arg	writes string ||| write name string	count=1
arg	port and calls ||| port	count=1
module	constructing new exception ||| exception	count=1
module	starts the cgi ||| webrick cgi	count=1
arg	req for [arg_2] ||| rdoc servlet asset [arg_2] [arg_1]	count=1
module	visitor for ||| rdoc	count=7
arg	the string source ||| source	count=1
function_arg	true if [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	arctangent of [arg_2] ||| [function_1] [arg_2]	count=4
function	original string [function_2] ||| [function_2] [returnv_1]	count=6
function	creates udp/ip sockets ||| sockets	count=1
function	from unresolved [function] gem ||| remove unresolved [function]	count=1
module	a new copy to ||| gem	count=1
module	contains the session object ||| openssl ssl session	count=1
function	creates [function_1] [function_2] for the network address ||| [function_1] [function_2]	count=1
module	day number ||| date	count=1
function	by ||| dir config	count=1
function	the name of ||| name	count=2
module	openssl :digest must be ||| openssl pkey pkey	count=1
function	the length and number ||| doc	count=1
function_arg	[function_1] method_body and ||| [function_1] [arg_2]	count=1
function	the corresponding value as ||| value	count=1
returnv	returns a new array ||| array	count=1
function	from a serialised ||| creatable	count=1
module	this dh to ||| dh	count=2
module	methodresponse ||| xmlrpc create	count=1
function_arg	calls verify [arg_2] ||| [arg_2] [function_1]	count=1
module	set ||| gem requestset gemdependencyapi	count=2
function	load a ruby data ||| load	count=1
arg	filename ||| filename	count=9
module	encodes this dsa ||| pkey dsa	count=1
module	[module] so that ||| [module]	count=1
arg	and tag ||| tag	count=4
module	@return dependencygraph the dependency ||| resolver molinillo	count=1
function	of class ||| class	count=1
arg	with the given base ||| base level	count=1
function_arg	superset of [arg_2] ||| [arg_2] [function_1]	count=1
arg	@param arg ||| arg	count=1
function	extra args [function_2] ||| [function_1] [function_2]	count=3
module	of generators and ||| rdoc	count=1
function	calculate the ||| set ctypes	count=1
arg	base ||| base	count=2
function_arg	[function_1] [arg_2] ||| [function_1] spec path [arg_2]	count=2
module	turned off ||| rdoc	count=1
returnv	an instance of ||| instance	count=1
returnv	returns number of ||| integer	count=1
function_arg	time [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] new_name ||| [arg_2] [function_1]	count=3
function	tests to change attributes ||| attribute	count=1
arg	mutex and ||| mutex	count=1
returnv	the status ||| status	count=1
function	multicast site-local scope ||| mc sitelocal	count=1
function	for decryption ||| self decrypt	count=1
function	has a body ||| body permitted	count=1
function	the cross-references in ||| handle special crossref	count=1
module	listening for ||| drbprotocol	count=1
function	of the public instance ||| public instance	count=1
function	items ||| stats	count=1
module	for ||| sslsocket	count=1
module	session object ||| openssl ssl session	count=2
arg	setting the ||| context single	count=1
module	[module] are ||| [module]	count=2
arg	the element of ||| element	count=2
function	add the ||| add version	count=1
function	an openssl ||| email	count=1
module	to be csv :row ||| csv table	count=1
function	copy the specified ||| copy	count=1
function	returns true [function_2] ||| [returnv_1] terminated [function_2]	count=1
returnv	string representation of ||| string	count=1
function	class or ||| or	count=1
module	name in mod ||| module	count=1
function	removes ifdefs that would ||| handle ifdefs	count=1
returnv	point of ||| array	count=1
module	value of [module] that ||| [module]	count=1
arg	file_name doesn’t exist ||| file_name	count=2
function	[function_1] 1 ||| [function_1] [function_2]	count=1
function	will ||| sub	count=1
returnv	address ||| addrinfo	count=2
arg	wraps ||| ptr	count=1
module	text [module] wrap ||| [module]	count=1
function	the value ||| import value	count=1
module	the other parameters ||| drb drbsslsocket sslconfig	count=1
module	dependencies files in ||| requestset	count=1
arg	[arg_1] value ||| [arg_2] [arg_1]	count=16
function	job ||| job	count=1
arg	of the gem ||| gem	count=1
function	if remote gems ||| remote ?	count=2
module	inspector object ||| inspector	count=1
module	and removes the ||| testcase	count=1
function	home directory path to ||| dir	count=1
module	time objects with the ||| time	count=1
function	digest to the initial ||| digest !	count=1
arg	subject of subject and ||| subject	count=1
module	been turned ||| rdoc codeobject	count=1
module	version string not the ||| gem version	count=1
module	todo deprecate and remove ||| testcase	count=1
arg	on klass ||| klass	count=1
arg	[arg_1] maxlen bytes ||| [arg_2] [arg_1]	count=2
function	unescapes special sequences of ||| unmask protected sequences	count=1
arg	the spec ||| spec	count=1
module	empty session state ||| cgi session nullstore	count=1
function	prints a formatted backtrace ||| backtrace	count=1
function	server advertises auth plain ||| capable plain auth	count=1
arg	row_count x ||| row_count	count=1
module	strio to the beginning ||| stringio	count=1
function	an ||| parse	count=1
function	with the [function_2] ||| [returnv_1] [function_2]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] field [function_2]	count=1
function	filters ||| filter	count=1
module	file referenced ||| file	count=1
function	[function_1] delegator ||| [function_2] [function_1]	count=1
module	output ||| rdoc	count=2
module	prepares the visitor for ||| rdoc	count=7
module	the object if local ||| drb drbobject	count=1
function	parses the given ||| parse	count=1
function	initialize ||| initialize	count=1
arg	length characters ||| length	count=1
function	if key ||| include ?	count=1
function	with on the ||| dir config	count=1
arg	given searching criteria ||| keys charset	count=1
function_arg	is code a ||| ? code	count=3
function	label list ||| list item	count=1
function	string of [function_2] ||| [function_2] [returnv_1]	count=1
arg	path in req ||| req	count=1
module	then use to configure ||| makemakefile	count=1
returnv	is readable without blocking ||| io,_true	count=1
module	[module] if ||| gem [module]	count=1
function	[function_1] by the ||| [function_2] [function_1]	count=1
module	range ||| range	count=15
module	range false ||| range	count=1
function	for the executable ||| executable	count=1
function_arg	for class [arg_2] ||| [function_1] out [arg_2]	count=1
arg	basic password ||| realm user pass	count=1
function	represent variables defined in ||| variables	count=1
module	are immediately available for ||| openssl ssl	count=1
module	visitor for html ||| markup	count=1
arg	[arg_1] with items ||| [arg_1] [arg_2]	count=1
module	this file ||| toplevel	count=1
module	method ||| net	count=1
module	been ||| drbsslsocket sslconfig	count=2
function	extra args hash ||| extra args hash	count=3
module	should [module] ||| [module]	count=1
function	version [function] show ||| [function]	count=1
function	the last successful pattern ||| last	count=1
arg	supplied record separator $/ ||| separator	count=1
function	returns the path to ||| path	count=5
function	directives in a normal ||| directives in	count=1
module	initialized when ||| syslog logger	count=1
module	instance is ||| syslog logger	count=1
module	to ||| rdoc markup	count=11
arg	order of deny_allow ||| order	count=1
module	method ||| rdoc ri driver	count=1
module	the trusted certificate ||| security trustdir	count=1
function	check that [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] by name [arg_2]	count=3
function	[function_1] extension ||| [function_2] [function_1]	count=2
function_arg	the visibility [arg_2] ||| [function_1] [arg_2]	count=2
module	gem directory ||| gem installer	count=1
module	object that represents ||| io	count=1
function	includes that match it ||| includes	count=1
arg	on req if ||| req res	count=1
arg	found klasess and includes ||| name found klasses includes extends	count=1
arg	[arg_1] content options ||| [arg_2] [arg_1]	count=2
function	[function_1] is not ||| [function_2] [function_1]	count=1
function	starttls ||| starttls auto	count=1
arg	data must be ||| data	count=1
module	:retry ||| localjumperror	count=1
module	last list ||| optionparser	count=1
returnv	or :noreason ||| symbol	count=1
arg	[arg_1] dest ||| [arg_2] [arg_1]	count=2
arg	certificate [arg_2] ||| [arg_2] [arg_1]	count=3
function	did not ||| sym	count=1
module	for restricting ||| gem requestset gemdependencyapi	count=1
function	class or module ||| class	count=2
function	a [function_2] ||| [function_1] [function_2]	count=9
arg	[arg_1] value ||| ext generator state []= [arg_1] [arg_2]	count=3
function	setter for the path ||| set path	count=1
module	have been provided or ||| drb drbsslsocket sslconfig	count=1
arg	[arg_1] to arg ||| [arg_2] [arg_1]	count=8
module	requirement downloads [module] ||| [module]	count=2
function_arg	[function_1] to path ||| [function_1] [arg_2]	count=1
module	this parent ||| rexml parent	count=1
module	to determine [module] ||| [module]	count=1
function	a ||| inspect key	count=1
module	special sequence ||| rdoc markup special	count=1
arg	if it doesn’t exist ||| force	count=1
function	method names set ||| set	count=1
function	various ||| config	count=1
arg	in data for reading ||| data	count=1
arg	by [arg] as ||| [arg]	count=1
module	descriptive fields in ||| gem specification	count=1
function	[function_1] the memory ||| [function_1] [function_2]	count=2
function	opens a ||| open	count=1
module	will ||| rexml parent	count=2
function	the buffer ||| buffer	count=1
module	simplerenewer that keeps ||| rinda simplerenewer	count=1
module	returns full path ||| basicspecification	count=1
module	list ||| rdoc markup list	count=4
function_arg	with name ||| named from name	count=1
returnv	for ||| self	count=2
function	add [function_2] ||| [function_2] [function_1]	count=1
module	[‘blt_stripchart_bar’ ||| tk blt stripchart	count=1
returnv	ids [returnv] ||| [returnv]	count=2
arg	you ||| func	count=3
returnv	of self ||| ary	count=1
arg	rid [arg_2] ||| sys setregid [arg_1] [arg_2]	count=1
function_arg	with [arg_2] ||| [function_1] if need klass [arg_2]	count=1
arg	error function of x ||| x	count=1
module	that calls @to ||| rdoc markup	count=1
function_arg	[function_1] b ||| [function_1] [arg_2]	count=6
function	:http#read_timeout and ||| timeout=	count=1
function_arg	dependency and [arg_2] ||| [function_1] dep from_name from_version [arg_2]	count=1
function	sets ||| set	count=8
module	attribute ||| rexml attribute	count=1
function	define ||| def	count=4
arg	named ||| symbol	count=1
module	environment variable where the ||| env	count=1
function_arg	[function_1] body ||| [arg_2] [function_1]	count=1
arg	of methods to ||| methods	count=1
module	extensions ||| uri ldap	count=1
function	a spec and ||| spec	count=1
function_arg	variable named [arg_2] ||| [arg_2] [function_1]	count=3
module	this object has taken ||| gem	count=2
function	name ||| name	count=49
function	the current ||| inspect	count=1
arg	an httprequest object req ||| req body	count=1
arg	numeric and on ||| numeric	count=1
function_arg	[function_1] of methods ||| [function_1] out [arg_2]	count=1
module	last ||| zlib	count=1
module	gem specifically ||| gem specification	count=1
arg	from [arg] according ||| [arg]	count=3
arg	as an httpresponse ||| data initheader dest	count=1
function	a mkcol request to ||| mkcol	count=1
module	the last row read ||| zlib	count=1
function	on [function_2] ||| [function_1] [function_2]	count=5
function	a head ||| head	count=1
function	pages to the index ||| index pages	count=1
arg	uri tag_name pair ||| uri tag_name	count=2
function	defaults for methods ||| methods etc	count=1
module	accept_paragraph_i with [module] :paragraph ||| [module]	count=1
module	for downloading ||| gem	count=1
arg	containing tomdoc-format text ||| text	count=1
module	given ||| userinteraction	count=1
arg	threads to wait ||| threads	count=1
function_arg	[function_1] variable env ||| [function_1] [arg_2]	count=4
module	available ||| openssl ssl sslsocket	count=2
arg	the method identified ||| args...	count=2
returnv	[returnv] it was ||| [returnv]	count=3
arg	io ||| io level strategy	count=1
function	[function] another ||| [function]	count=1
module	enumerator with ||| enumerator	count=1
function	prepares the visitor ||| item	count=4
arg	given_name with [arg_2] ||| [arg_2] [arg_1]	count=1
module	encodes this dsa ||| dsa	count=1
arg	name to [arg_2] ||| [arg_2] [arg_1]	count=3
function	:conditionvariable associated with ||| cond	count=1
rep	for [function_arg_2] ||| [module_1] ri driver display [function_arg_2]	count=2
function	[returnv_1] interface name ||| [returnv_1] [function_2]	count=1
function	is the extension ||| extension ?	count=3
module	the feed or ||| atom feed	count=1
function	a field row ||| field row	count=2
function	message ||| make message	count=1
function	into a der-encoded ||| to der	count=1
function_arg	[function_1] glob ||| [function_1] [arg_2] check_load_path	count=4
module	dispatches ||| webrick httpservlet abstractservlet	count=4
arg	[arg] contains ||| [arg]	count=1
function	up the ||| setup	count=1
arg	not ||| headers opt &b;	count=2
function_arg	if time [arg_2] ||| [function_1] [arg_2]	count=3
module	the –platform option to ||| gem versionoption	count=1
module	generated json to ||| json ext generator state	count=1
module	the dns resolver ||| resolv dns	count=6
module	of this instruction sequence ||| rubyvm instructionsequence	count=2
module	specification ||| specification	count=10
module	new cgi ||| cgi	count=1
module	element overwriting ||| element	count=1
module	gem with ||| gem	count=1
arg	safe [arg_2] ||| [arg_2] [arg_1]	count=1
function	includes ||| includes	count=1
function	public key associated ||| public ?	count=1
module	installer ||| installer	count=1
arg	body ||| body	count=1
function	certificate [function_2] ||| [function_1] [function_2]	count=1
arg	in the comment ||| comment	count=1
function_arg	the executable [arg_2] ||| [arg_2] [function_1]	count=3
module	sends ||| smtp	count=1
module	a class to wrap ||| importer	count=2
arg	[arg_1] [arg_2] according to some rfc ||| datetime datetime httpdate [arg_2] [arg_1]	count=4
function	for root directories ||| root	count=1
module	output ||| markup tordoc	count=2
module	creates an [module] instance ||| [module]	count=1
function	object or hash ||| object	count=1
function	other parameters provided ||| setup	count=1
function_arg	[function_1] path ||| [function_1] in unresolved [arg_2]	count=3
function	[function_1] range object ||| [function_2] [function_1]	count=1
function	left based on ||| left	count=1
function	escaping from the cross-references ||| special crossref	count=1
function	strings ||| join	count=1
module	object#object_id ||| objectspace internalobjectwrapper	count=1
module	gem is available ||| gem package	count=1
module	server defined in xmlrpc ||| xmlrpc client proxy	count=1
function	number of [function_2] ||| [function_2] [returnv_1]	count=1
function	local variable ||| local variable	count=2
function	true if ||| ?	count=1
function	various “with” options ||| dir	count=1
function_arg	[function_1] [arg_2] ||| [function_1] procs [arg_2]	count=2
function	a predicate ||| predicate	count=1
function	along with the classes ||| classes	count=1
arg	[arg_1] [arg_2] ||| [arg_1] comment [arg_2]	count=1
function	returns the base ||| base	count=2
function_arg	page [arg_2] ||| [arg_2] [function_1]	count=1
module	row read ||| zlib	count=1
function	[returnv_1] for which ||| [returnv_1] [function_2]	count=4
arg	year month ||| year month	count=2
function	line by using ||| dir config	count=1
function	if ||| key ?	count=1
module	tokens ||| rdoc rubylex	count=1
function	turned off by :enddoc ||| start	count=1
function	same [function] ||| [function]	count=1
function	request is for a ||| implicit ?	count=1
arg	from a string according ||| string	count=4
function	[function_1] development dependency ||| [function_2] [function_1]	count=1
function_arg	[function_1] to real ||| [function_1] float [arg_2]	count=1
function	spec ||| spec cache	count=1
function	a head request ||| request head	count=1
module	number of bytes that ||| openssl ssl	count=1
module	class this ||| rdoc	count=1
arg	label as the label ||| label	count=1
module	unless documentation has been ||| rdoc	count=1
function	[function_1] parent ||| [function_1] [function_2]	count=1
function_arg	[function_1] in method ||| [function_1] [arg_2]	count=1
function	on [function_2] ||| [function_2] [function_1]	count=5
returnv	tests if ||| bool	count=1
module	optionally under ||| rexml light node	count=1
function	[function_1] and ||| [function_2] line [function_1]	count=1
arg	remote_addr_args and bound ||| remote_addr_args	count=1
module	the response received was ||| response	count=2
function	predicate ||| predicate	count=1
function	the named method ||| method	count=1
arg	to [arg_2] ||| [arg_2] [arg_1]	count=11
function	creates [function_2] ||| [function_2] [returnv_1]	count=102
arg	match tuple and are ||| tuple	count=1
arg	if ||| klass	count=3
arg	a singleton context ||| singleton	count=1
module	an openssl :x509 ||| gem security	count=1
function	named protected [function_2] ||| [function_2] [function_1]	count=1
arg	ones of user ||| user	count=1
function	[function_1] out ||| [function_1] [function_2]	count=2
function	define new [function] class ||| new [function]	count=3
function	[function_1] resolution ||| [function_1] [function_2]	count=1
module	last row read from ||| gzipreader	count=1
module	severity level allows ||| logger	count=1
module	socket object connected ||| socket	count=1
function	if key is ||| include ?	count=1
module	given string ||| string	count=1
module	environment variable for ||| env	count=1
module	the ||| webrick httpstatus	count=2
function	individual raw profile data ||| raw data	count=1
function	to row mode ||| row !	count=1
function	tts ||| block quote	count=1
function	tuples which dead tuples ||| unless alive	count=1
module	singular accessor for ||| gem specification	count=2
module	in ||| rdoc rdoc	count=1
function	gem :specification ||| spec	count=1
function	defined ||| defined	count=3
function	by rnfr ||| renamable	count=1
arg	in req for generator_name ||| generator_name req	count=1
function_arg	[function_1] numeric ||| [arg_2] [function_1]	count=2
function	global variables ||| global variables	count=2
function	creates a ||| create	count=1
function_arg	requirement of dependency ||| requirement ? dependency	count=2
arg	creates a [arg_2] ||| [arg_2] [arg_1]	count=16
function	a [function] ||| to [function]	count=2
function	is a pipe ||| pipe	count=2
function	full paths ||| full paths	count=1
function_arg	[function_1] dep ||| [function_1] [arg_2]	count=2
function	number of bits of ||| bit length	count=1
arg	the message ||| message flags	count=1
arg	set of tags for ||| name start stop	count=1
function	all ||| all	count=11
function	the token ||| token	count=1
arg	gives it to ||| from_addr to_addrs	count=1
module	the current connection ||| ssl sslsocket	count=1
function	[function_1] using erb ||| [function_2] [function_1]	count=2
module	block form ||| gem requestset gemdependencyapi	count=1
arg	an array methods ||| methods	count=1
function	a private key associated ||| private	count=1
function	passing it any ||| public send	count=1
module	resolver object which ||| gem resolver	count=1
function_arg	[function_1] for file_name ||| [function_1] by name [arg_2]	count=1
module	image called destination possibly ||| photoimage	count=1
function	[function_1] with ||| [function_2] [function_1]	count=5
function_arg	[function_1] as ||| [function_1] [arg_2]	count=2
function	with [function] ||| to [function]	count=1
module	dependency ||| dependency	count=2
module	the ||| tottonly	count=2
arg	prefix or ||| prefix	count=1
function	-1 ||| <	count=1
arg	[arg_1] obj ||| generate [arg_2] [arg_1]	count=2
module	the representation of fix ||| fixnum	count=1
function	template ||| template	count=3
arg	str ||| str enc separator:	count=1
arg	the ||| string	count=2
function	row vectors ||| row vectors	count=1
module	status a process :status ||| process	count=2
function	arctangent of ||| atan	count=1
function	slice ||| slice	count=1
module	entries matching that ||| gem	count=1
function	a unix ||| unix	count=2
function_arg	[function_1] [arg_2] ||| [function_1] context single [arg_2]	count=1
module	specification is ||| gem specification	count=1
module	the feed ||| rss atom feed entry	count=1
module	cgi :session ||| cgi	count=1
arg	underlying file descriptor as ||| mode perm	count=1
module	in po format ||| rdoc generator pot poentry	count=1
arg	[arg] can be ||| [arg]	count=6
module	returns the ||| benchmark	count=1
arg	with configuration config ||| config	count=1
module	installs ||| gem testcase	count=2
function	headers are written ||| write headers	count=2
module	that keeps ||| rinda	count=1
function	to add [function_2] ||| [function_1] [function_2]	count=5
module	updates the [module] ||| [module]	count=2
function	[returnv_1] [function_2] authors ||| [returnv_1] [function_2] author	count=3
module	gem ||| gem doctor	count=1
function	[function_1] there ||| [function_2] key [function_1]	count=2
module	@return dependencygraph the dependency ||| gem resolver molinillo	count=1
module	of nametuple objects ||| gem nametuple	count=1
function	to execute the given ||| realtime	count=1
function	sends a copy ||| copy	count=1
module	:sslcertificate and ||| drb	count=1
arg	[arg_1] method ||| [arg_1] [arg_2]	count=2
arg	the amount of ||| msg width display	count=1
module	been ||| sslconfig	count=1
function_arg	symbolic link [arg_2] ||| [function_1] [arg_2]	count=3
module	string ||| pkey pkey	count=1
arg	callback whenever an instance ||| method_name	count=1
module	object’s comment ||| generator markup	count=1
module	use by ri ||| rdoc generator ri	count=1
function	user can then use ||| dir	count=1
function	returns the broadcast ||| broadaddr	count=1
function	finds the template dir ||| template dir	count=1
function	[returnv_1] which ||| encoding [returnv_1] [function_2]	count=1
function	adds class or module ||| add to classes or modules	count=1
arg	for a prefix or ||| prefix	count=1
function_arg	append the [arg_2] ||| [function_1] mailbox [arg_2]	count=4
function	returns true [function_2] ||| [function_2] [returnv_1]	count=343
function	the close [function_2] ||| [function_1] [function_2]	count=3
function	been ||| start	count=1
arg	each [arg] ||| [arg]	count=9
module	the call through _getobj_ ||| delegator	count=1
module	rdoc ||| rdoc markdown	count=1
arg	and [arg_2] ||| [arg_2] [arg_1]	count=8
function	bubblebabble encoded hash value ||| bubblebabble	count=1
module	block form for restricting ||| gemdependencyapi	count=1
arg	the given key object ||| key	count=1
function	equality—two regexps are equal ||| eql	count=1
function	fully [function_2] ||| [returnv_1] [function_2]	count=6
function	[function_1] tests to ||| [function_1] [function_2]	count=3
function	with a ||| pre proc	count=1
arg	[arg] passes ||| [arg]	count=2
function	returns the namespace ||| prefix	count=1
arg	string ||| string filename lineno	count=2
module	are immediately available for ||| ssl sslsocket	count=1
arg	template_file ||| template_file	count=1
arg	date as a ||| date	count=1
function	rb_define_attr ||| attrs	count=1
arg	or not the ||| opt &b;	count=3
function	if nan infinity ||| ?	count=1
function_arg	by the [arg_2] ||| [arg_2] [function_1]	count=3
arg	of the individual ||| x	count=1
arg	to host ||| host	count=2
function	standard basis ||| basis	count=1
arg	at directory root options ||| root options default	count=1
arg	classes also_in ||| also_in	count=1
module	this activation is one ||| gem resolver activationrequest	count=1
module	parent if supplied ||| rexml parent	count=1
function	self-signed certificate ||| create cert	count=1
function	rubygems [function_2] ||| [function_1] [function_2]	count=1
arg	value v at ||| v	count=1
arg	the declared version tag_directives ||| version tag_directives	count=1
module	generate a ||| cgi htmlextension	count=5
arg	uri to path ||| uri path update	count=1
arg	the key ||| key age	count=2
function_arg	[function_1] [arg_2] given object ||| [function_1] [arg_2]	count=8
function	line number of the ||| lineno	count=1
function	collection by result ||| by	count=1
arg	the message to the ||| message flags	count=1
function	[returnv_1] [function_2] ||| [returnv_1] blockdev [function_2]	count=2
function	lines ||| lines	count=1
function	buffer to length if ||| buffer	count=1
arg	with value or passes ||| value	count=1
function	detect if the gem ||| ?	count=1
module	will live in ||| generator	count=1
module	cookie ||| cookie	count=2
arg	file_name which can be ||| file_name suffix	count=1
function	of microseconds for ||| usec	count=1
arg	per rfc 2396 ||| arg	count=1
arg	array methods ||| methods	count=1
module	instance is created ||| syslog logger	count=1
function	:sslcertificate and :sslprivatekey have ||| setup	count=1
module	of this method ||| unboundmethod	count=1
module	module in mod ||| module	count=1
function_arg	[function_1] req on ||| [function_1] [arg_2]	count=1
module	file ||| file	count=41
function_arg	dependency [arg_2] ||| [function_1] [arg_2]	count=1
arg	in key ||| key	count=1
function_arg	a mkcol [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] that was ||| [arg]	count=1
module	uri of ||| drbobject	count=1
function	lines that [function_2] ||| [function_2] [function_1]	count=9
function	protected instance ||| protected instance	count=2
function	list of extra ||| specific extra	count=1
function	waits ||| wait	count=2
returnv	been reached [returnv] if there ||| [returnv]	count=2
function	protected method ||| protected method	count=1
module	to [module] ||| [module]	count=7
function	decryption ||| decrypt	count=1
module	prevent conversion to rdoc ||| rdoc markup	count=1
function	execute ||| realtime	count=1
module	this platform? two platforms ||| platform	count=1
function_arg	[function_1] [arg_2] comes first and returns ||| [function_1] [arg_2]	count=9
function	the ||| accept block quote	count=1
module	in its time ||| time	count=1
arg	by opts ||| opts	count=1
returnv	will be ||| instance	count=1
function_arg	page list [arg_2] ||| [function_1] [arg_2]	count=1
module	visitor ||| rdoc	count=7
function	[function_1] [function_2] as a ||| [function_2] [function_1]	count=2
arg	each [arg] matching ||| [arg]	count=1
module	[module] handler says ||| [module]	count=3
function	by result of the ||| by	count=1
function	object which [function] the win32ole_type ||| [function]	count=1
module	deprecate and remove ||| gem testcase	count=1
returnv	iseq object ||| iseq	count=1
module	list of ||| specification	count=1
function	:sslprivatekey have been provided ||| setup	count=1
function	[function] following edges ||| [function]	count=2
module	command line ||| command	count=3
function	header ||| header	count=6
arg	and comment to ||| comment	count=1
returnv	of the current ||| fixnum	count=1
function	[function_1] vectors ||| [function_2] [function_1]	count=4
function_arg	[function_1] spec in ||| [function_1] ? requirement activated [arg_2]	count=2
arg	sets value ||| val	count=1
function	each [function_2] ||| [function_1] [function_2]	count=2
arg	command ||| arg_list	count=1
function	functionality ||| sid available	count=2
function	certificate chain for ||| cert chain	count=2
module	state ||| testcase	count=1
function	using inspect ||| inspect	count=1
function_arg	[function_1] year of ||| [arg_2] [function_1]	count=6
function	looks up all hostnames ||| getnames	count=1
function	the visitor for ||| start	count=7
function	with ||| proc	count=1
arg	methods to out ||| out methods	count=3
function	[returnv_1] if this ||| [returnv_1] contains requirable file [function_2]	count=1
function	[function_1] for the ||| [function_1] [function_2]	count=1
module	records the parsing ||| stats	count=6
module	requirementlist ||| gem resolver requirementlist	count=1
arg	given libs ||| libs	count=1
function	of the form ”>word> ||| tidylink	count=1
function	tests ||| tests	count=1
function	the size ||| size	count=8
module	convert this node ||| nodes node	count=1
function	written in ||| write	count=1
function	the string keys in ||| keys	count=1
module	max ||| net imap	count=1
function	a body ||| body permitted	count=1
arg	the value ||| value	count=3
function	sorted ||| sorted module	count=1
module	instantiates [module] for ||| [module]	count=1
function	reference for linking ||| aref	count=1
function	exits the ftp ||| quit	count=1
arg	given jobs ||| jobs	count=1
function_arg	using erb [arg_2] ||| [function_1] method methodname [arg_2]	count=1
arg	while handling req ||| req	count=1
function_arg	[function_1] dependency ||| [function_1] [arg_2] activated	count=2
module	object ||| drbobject	count=2
function	the visitor for html ||| start	count=1
module	or that ||| sslconfig	count=1
module	available for ||| ssl	count=1
arg	class_module into this ||| class_module	count=1
module	for [module] ||| [module]	count=9
function	creates a temporary directory ||| create tmpdir	count=1
function	equal to ||| pred	count=1
returnv	of the unix ||| array	count=1
function	low-level read and ||| sysread	count=1
function_arg	resources for name ||| getresources name	count=2
function	available for reading ||| pending	count=1
arg	given calendar ||| year month mday start	count=1
function	string keys in ||| keys	count=1
arg	object req ||| req	count=1
function	if headers are written ||| write headers ?	count=1
arg	[arg_1] superclass ||| [arg_1] [arg_2]	count=2
module	this hash instance ||| ext generator generatormethods hash	count=1
function	which the given block ||| reject	count=1
function	kind string ||| kind	count=1
module	rdoc :include ||| rdoc context	count=1
function_arg	dn val ||| dn= val	count=1
arg	structure [arg] and return ||| [arg]	count=1
function	provided or that ||| setup	count=1
function	cache template [function_2] ||| [function_2] [function_1]	count=1
module	configure various “with” ||| makemakefile	count=1
function_arg	[function_1] [arg_2] all the proper subdirectories ||| [function_1] subdirectories [arg_2]	count=2
function_arg	the requirement [arg_2] ||| [function_1] ? [arg_2]	count=1
function	as ||| find	count=1
arg	body text [arg_2] ||| [arg_1] [arg_2]	count=4
function	child after ||| after	count=1
arg	connections at uri with ||| uri	count=1
module	paragraph ||| markup paragraph	count=1
module	the last ||| pathname	count=1
arg	with the given mode ||| name	count=1
module	the visitor for ||| rdoc markup tohtml	count=2
arg	and gives it ||| from_addr to_addrs	count=1
returnv	every element of self ||| ary	count=1
function	whether to expect full ||| full	count=1
function_arg	[function_1] the specified ||| [arg_2] [function_1]	count=1
function	list items ||| list item start	count=1
arg	issues [arg] ||| [arg]	count=1
function_arg	[function_1] of dependency ||| [function_1] ? [arg_2]	count=2
module	where the n’th ||| elements	count=1
function	[function_1] are commented ||| [function_2] [function_1]	count=1
module	files so ||| specification	count=1
function	free spaces in ||| avail out	count=1
function	from socket ||| socket	count=1
function	get a single ||| get one	count=3
module	convert num ||| numeric	count=1
module	this attribute ||| rexml attribute	count=3
module	tms object as a ||| benchmark tms	count=1
module	removes the ||| gem testcase	count=1
function	line in ||| line	count=1
module	cookie ||| webrick cookie	count=1
arg	root options may be ||| root options	count=1
module	has been turned ||| rdoc codeobject	count=1
module	sets ||| client	count=1
function	rest ||| partition	count=1
module	the tuplebag which when ||| rinda tuplebag	count=1
function	get [function_2] ||| [function_2] [function_1]	count=19
module	availableset as a ||| gem availableset	count=1
module	sends a ||| net smtp	count=1
module	a [module] object ||| [module]	count=1
module	file name in ||| file	count=1
arg	for pattern [arg_2] ||| [arg_2] [arg_1]	count=1
module	live in if they ||| darkfish	count=1
module	file otherwise ||| file	count=1
module	database contains the specified ||| dbm	count=1
function	target library file ||| to fullpath	count=1
function	sends a [function] command to ||| [function]	count=1
function_arg	deletes the [arg_2] ||| [arg_2] [function_1]	count=4
function	adds the #page_dir ||| page dir	count=1
module	have been provided ||| sslconfig	count=1
module	signs ||| openssl	count=1
returnv	isn’t available ||| self	count=1
function_arg	xlist [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] local address ||| [function_2] [function_1]	count=3
function	at the beginning ||| begin adding	count=1
module	the process ||| testcase	count=1
arg	of gem [arg] ||| [arg]	count=1
arg	constructs ||| args ret_type abi	count=1
module	for authors ||| gem	count=1
function	options request ||| options	count=1
module	the ||| ssl	count=1
function	length and ||| doc stats	count=1
arg	extensions ||| extensions serial	count=1
arg	class_module into ||| class_module	count=1
function	the valid ||| set valid	count=1
arg	subject and [arg_2] ||| [arg_1] key [arg_2]	count=2
returnv	an ||| abs_file_name	count=2
function_arg	power of n ||| power n	count=2
function_arg	attributes [arg_2] ||| [function_1] [arg_2]	count=1
module	available ||| ssl sslsocket	count=2
module	have been ||| sslconfig	count=1
module	environment variable with the ||| env	count=1
module	workspace and ||| irb workspace	count=1
function	[function_1] siginfo handler ||| [function_1] [function_2]	count=1
function	[function] numerator ||| [function]	count=1
function	[function] numerator value ||| [function]	count=1
module	date with julian ||| date	count=1
arg	new_name a new copy ||| new_name	count=1
module	does this document ||| document	count=2
function	int from ||| int	count=1
function_arg	[function_1] string to ||| [function_1] [arg_2]	count=1
arg	which starts from offset ||| offset	count=1
function	a new http ||| new	count=1
arg	and the given extensions ||| age extensions serial	count=1
module	with hax ||| gem testcase	count=1
module	using that ||| makemakefile	count=1
function	list items ||| list	count=1
function	loads the [function_2] ||| irbloader [function_1] [function_2] path priv	count=2
function	[returnv_1] if self ||| [function_2] [returnv_1]	count=1
function_arg	[function_1] obj ||| [function_1] tag [arg_2]	count=1
function	starts the profiler ||| start profile	count=1
module	[module] the remaining ||| [module]	count=1
module	converts ||| markup formatter	count=2
function	at a higher scope ||| enclosing	count=1
arg	and connects ||| helo user secret authtype	count=1
function	the preset dictionary ||| dictionary	count=1
function	session has been started ||| started	count=1
function	if the underlying file ||| ?	count=1
returnv	with 14 [returnv] representing ||| [returnv]	count=1
arg	denoting the ||| minute second offset start	count=1
function	adds the #page_dir to ||| page dir	count=1
module	this activation request ||| resolver activationrequest	count=1
rep	[module_1] scope val ||| [module_1] [function_arg_2]	count=2
module	for each union ||| fiddle cunionentity	count=1
module	elements in [module] ||| [module]	count=1
returnv	the ||| float	count=1
returnv	string in ||| string	count=1
returnv	array containing ||| array	count=3
arg	string key provided ||| key	count=1
module	a class ||| rdoc ri driver	count=1
module	to a ||| gem requestset	count=1
arg	you [arg_2] ||| [arg_1] [arg_2]	count=6
module	paragraphs ||| markup tohtmlsnippet	count=1
function	@param parent if supplied ||| new	count=1
module	the directory may be ||| ftp mlsxentry	count=1
function	of the row ||| row	count=1
function	satisfied by ||| requirement satisfied by	count=2
arg	is symbol ||| symbol	count=1
arg	document contained in yaml ||| yaml	count=1
function	the number of ||| size	count=2
arg	the referenced [arg] lies outside ||| [arg]	count=1
arg	str ||| str enc	count=2
function	deserializes [function_2] ||| rational [function_2] [function_1]	count=5
arg	signer ||| signer	count=1
function_arg	module mod ||| add module mod	count=1
arg	temporary file [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] [function_2] ||| [function_2] variable [function_1]	count=3
function	initialize a ||| new	count=1
arg	context with ||| ignore_constants	count=1
function	enter ||| enter	count=1
module	of [module] that ||| [module]	count=1
module	up ||| rdoc markup	count=2
module	form ||| complex	count=1
module	the list of ||| gem	count=1
module	the compiled [module] ||| rubyvm [module]	count=3
module	it’s lib paths to ||| gem	count=1
module	for ||| tohtml	count=2
arg	a single ||| file name	count=2
arg	an element ||| element	count=1
arg	line ||| line	count=1
module	add ||| markup formatter	count=1
function	the same ||| ==	count=1
function	with the given ||| with	count=1
function	the rdoc options ||| rdoc options	count=2
function	[returnv_1] if the ||| [returnv_1] deletable [function_2]	count=1
module	using identical ||| indexer	count=1
function	[function_1] [function_2] others returns an integer ||| [function_2] [function_1]	count=2
function	retrieves a ||| []	count=1
module	unpacks the [module] given ||| [module]	count=1
function	[function_1] a new ||| [function_2] [function_1]	count=1
module	of the [module] false ||| [module]	count=2
arg	width ||| width padstr	count=1
function_arg	heading of level ||| heading level	count=2
function_arg	compares this version [function_1] [arg_2] the http specification rules ||| [function_1] [arg_2]	count=1
function	[function_1] filter ||| [function_1] [function_2]	count=2
module	header names and ||| net httpheader	count=1
rep	socket [function_arg_2] ||| [module_1] [function_arg_2]	count=1
arg	the given job ||| job	count=1
function	row [function_2] ||| [function_2] [function_1]	count=1
function_arg	body [arg_2] ||| [arg_2] [function_1]	count=1
function	class/instance indicator ||| pretty	count=1
function	[returnv_1] [function_2] for ||| [returnv_1] [function_2]	count=2
function	type of [function_2] ||| [function_2] [function_1]	count=8
module	state object configured by ||| state	count=1
module	original state and ||| testcase	count=1
function	in non-blocking ||| accept nonblock	count=1
arg	fix is greater ||| fix	count=1
function_arg	heading of [arg_2] ||| [arg_2] [function_1]	count=1
function	gem version ||| gem names and	count=1
function	self in place ||| !	count=1
function	position ||| rewind	count=1
function	docs ||| sub	count=1
arg	new set [arg] the given ||| [arg]	count=1
function	[function_1] super ||| [function_2] [function_1]	count=2
function	the visitor for consuming ||| accept	count=3
module	tts ||| markup tottonly	count=2
function	to mark the beginning ||| begin	count=1
function	[function_1] and body ||| [function_2] [function_1]	count=2
arg	dependency [arg_2] ||| [arg_2] [arg_1]	count=1
function	trace ||| trace	count=1
arg	[arg_1] [arg_2] ||| rdoc servlet asset [arg_1] [arg_2]	count=1
arg	in the given text ||| text code_object &block;	count=1
function_arg	[function_1] by symbol ||| [arg_2] [function_1]	count=4
function	start a document ||| start document	count=1
function	already exist ||| gen sub	count=1
module	the generated docs ||| generator darkfish	count=1
module	rdoc :markup ||| rdoc markup	count=2
module	use by ||| generator	count=1
function_arg	[function_1] the string ||| [arg_2] [function_1]	count=1
returnv	generates a mask value ||| priority_mask	count=1
arg	version encoding [arg_2] ||| [arg_1] [arg_2]	count=1
arg	decodes [arg] ||| [arg]	count=1
arg	path returning the ||| path mode	count=1
module	has been turned off ||| rdoc codeobject	count=1
arg	[arg_1] [arg_2] via ||| [arg_2] [arg_1]	count=6
arg	given [arg_2] ||| [arg_2] [arg_1]	count=6
function	interface name ||| name	count=1
module	the table ||| totableofcontents	count=1
function	:heading [function_2] ||| [function_1] [function_2]	count=2
function	[function] key from ||| [function]	count=2
arg	optional block in context ||| &block;	count=2
function	[function_1] list for ||| [function_1] [function_2]	count=1
module	sets ||| xmlrpc client	count=2
function	level ||| level	count=2
module	a module? ||| classmodule	count=1
module	sets ||| module	count=1
function_arg	[function_1] src and ||| [arg_2] [function_1]	count=1
arg	z ||| z	count=11
function	the nonce ||| nonce	count=1
module	:method or rdoc ||| rdoc parser	count=1
function	gets the basic list ||| basic word	count=1
module	returns this ||| openssl ocsp	count=2
function	don’t ||| sub	count=1
function	gem version from the ||| gem names and versions	count=1
module	to ||| rdoc markup attributemanager	count=2
module	all file lists have ||| gem	count=1
module	a psych ||| psych	count=1
function	in if ||| gen sub	count=1
arg	permissions mode [arg_2] ||| [arg_2] [arg_1]	count=2
function	to the output ||| accept block	count=1
module	the last ||| optparse	count=1
function_arg	gem :installer [arg_2] ||| pre [function_1] [arg_2]	count=1
function	paths [function_2] ||| [function_2] gems use full [function_1]	count=1
module	irb sessions used ||| irb jobmanager	count=1
function	[function] a ||| gmt [function]	count=1
module	supports pipes and stat ||| file stat	count=1
module	tupleentry based on ||| rinda tupleentry	count=1
module	todo deprecate and ||| gem testcase	count=1
function	true [function_2] ||| [returnv_1] matches [function_2]	count=1
arg	value stored ||| o	count=1
module	for ||| openssl	count=1
module	runs this list ||| list	count=1
module	to ios using ||| io	count=1
function	[function_1] a ||| [function_2] [function_1]	count=4
arg	:row from [arg] ||| [arg]	count=1
function_arg	[function_1] value and ||| [arg_2] [function_1]	count=1
module	digest using a given ||| digest	count=1
arg	sets the attribute [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	http request to the ||| request	count=1
function	returns true [function_2] ||| gdbm [returnv_1] [function_2]	count=1
function	as a pipeline ||| pipeline r	count=2
function	the classes [function_2] ||| [function_2] [function_1]	count=1
arg	jobs ||| jobs	count=1
module	creates an rdoc ||| rdoc parser	count=4
returnv	and ||| bool	count=1
module	an rdoc :toplevel ||| rdoc	count=1
module	to a set of ||| requestset	count=1
arg	a given string ||| string	count=3
arg	str attempts to parse ||| str	count=1
module	spec for downloading ||| gem specification	count=1
module	comment from this section ||| context section	count=1
function	a standard basis ||| basis	count=1
function	method :both :instance :class) ||| method	count=1
module	returns number of ||| io	count=1
module	from ||| markup tottonly	count=2
function	[function_1] readable when ||| [function_2] [function_1]	count=12
function_arg	delegator instance [arg_2] ||| [function_1] [arg_2]	count=1
function	transcoded ||| encode	count=1
function	a pager program ||| pager	count=1
function_arg	[function_1] file if ||| [function_1] [arg_2]	count=5
function_arg	[function_1] name and ||| [function_1] [arg_2]	count=1
arg	data matches ||| data	count=1
module	the ||| version	count=1
arg	on string ||| string	count=1
module	of ||| rexml	count=1
function	the public instance methods ||| public instance methods	count=1
module	and after gem ||| gem	count=1
function	the permissions of ||| permissions	count=1
arg	matches [arg_2] ||| [arg_2] [arg_1]	count=1
module	listitem ||| rdoc markup listitem	count=5
arg	[arg_1] given arguments ||| [arg_1] [arg_2]	count=1
function	the prefixes names of ||| prefixes	count=1
module	a defaultfilehandler ||| webrick httpservlet defaultfilehandler	count=1
function	the size [function_2] ||| [function_2] [function_1]	count=3
function	live in ||| sub	count=1
module	@return ||| resolver molinillo	count=5
module	new fiddle ||| fiddle	count=4
function	dir [function_2] ||| [function_2] [function_1]	count=1
returnv	with ||| instance	count=1
arg	given source_name ‘ruby’ ||| source_name	count=1
module	is called by webrick ||| webrick	count=1
module	:sslprivatekey ||| drb drbsslsocket	count=1
function	can ||| dir config	count=1
arg	given name and ||| name	count=1
function	product of ||| product	count=2
function	sign ||| sign	count=2
module	function ||| fiddle function	count=1
module	nil if this method ||| method	count=1
function	the names of global ||| global	count=1
returnv	of ||| array	count=7
function	method removes a file [function_1] [function_2] ||| fileutils remove [function_2] [function_1]	count=1
module	named directory ||| dir	count=1
function_arg	[function_1] other ||| [function_1] [arg_2]	count=2
returnv	immediately available for ||| integer	count=1
returnv	that will ||| instance	count=1
function	return currently unresolved specs ||| in unresolved	count=1
arg	specified where paths ||| paths	count=1
function	iterator ||| each	count=1
arg	string and returns self ||| string	count=1
module	to a ||| rdoc markup	count=1
module	represents @return edge ||| gem resolver molinillo	count=1
function	[function] results of ||| [function]	count=2
module	form for restricting gems ||| gem	count=1
function	the next object as ||| next values	count=1
function	:context of ||| currentcontext	count=1
arg	message to the end ||| message flags	count=1
module	to a ||| markup	count=1
arg	maxlen bytes [arg_2] ||| [arg_2] [arg_1]	count=1
function	the variable [function_2] ||| [function_1] [function_2] map_name	count=3
module	is ||| generator state	count=1
module	output ||| rdoc ri	count=1
module	the given command ||| command	count=1
function_arg	[function_1] [arg_2] contains all the proper ||| [function_1] subdirectories [arg_2]	count=2
function	threads waiting on ||| num waiting	count=2
module	first instance ||| syslog logger	count=1
arg	spec that can be ||| spec	count=1
function	zero value ||| zero	count=1
function	client error ||| client error	count=2
function	server sockets for ||| server sockets	count=1
function	the case-insensitive flag ||| casefold	count=1
function	members as an ||| members	count=1
function_arg	paragraph from [arg_2] ||| [arg_2] [function_1]	count=1
arg	options = {}) ||| options	count=1
function	readable by the ||| readable	count=1
function	by the given ||| by	count=1
module	state object configured by ||| generator state	count=1
function	then ||| dir config	count=1
function	url to [function_2] ||| [function_2] [function_1]	count=9
module	group database ||| httpauth htgroup	count=1
function	for notifications of ||| notify	count=1
function	[function_1] rfc2965 cookies ||| [function_2] [function_1]	count=2
function	exits the ftp session ||| quit	count=1
arg	[arg] can ||| [arg]	count=6
function	argument valid ‘nz_number’ in ||| valid nz	count=1
module	to the pager ||| rdoc ri driver	count=1
module	terminated ||| thwait	count=2
module	log ||| logger	count=2
function	yields each parent of ||| each parent	count=1
arg	out_stream for size items ||| out_stream size initial_message terminal_message	count=1
module	instantiates [module] for the ||| [module]	count=1
arg	[arg] - ||| bits safe [arg]	count=2
module	markup in the rd ||| rd	count=1
function	all tuples ||| all template	count=1
function_arg	[function_1] other ||| [arg_2] [function_1]	count=4
returnv	available ||| integer	count=1
returnv	object that ||| encoding	count=2
function	tracing [function_2] ||| [function_1] [function_2]	count=4
function	find a gem ||| find unresolved	count=1
arg	address port and ||| address port	count=2
arg	file_name which can be ||| file_name	count=1
function	the last [function_2] ||| [function_1] [function_2]	count=4
module	to the output ||| rdoc markup tottonly	count=1
arg	the #auth_type of ||| reload_db	count=1
returnv	group ||| group	count=1
function	sets ||| dir	count=1
function	escaping from the cross-references ||| crossref	count=1
function	[returnv_1] [function_2] attribute manager ||| [returnv_1] [function_2]	count=1
arg	obj [arg] ||| method [arg]	count=3
module	to the table ||| rdoc markup totableofcontents	count=1
function	creates a pair ||| socketpair	count=1
function	handy wrapper for marking ||| description	count=1
module	they don’t already ||| rdoc generator darkfish	count=1
arg	sym returning that constant ||| sym	count=1
function	internal super class ||| internal super	count=2
function_arg	[function_1] of decimal ||| [arg_2] [function_1]	count=4
function	the length of ||| length	count=2
function_arg	[function_1] of list ||| [arg_2] [function_1]	count=2
module	been ||| rdoc	count=1
function	name str in the ||| name=	count=1
module	fiddle :pointer instance that ||| fiddle	count=1
module	digest in ||| digest sha2	count=1
function	representing ||| s	count=3
function	returns an empty array ||| to a	count=1
module	compares ||| uri	count=1
function	the issuer ||| issuer	count=1
arg	given options ||| args	count=1
arg	given keys ||| key	count=1
module	index @param index ||| parent	count=1
function	activex ||| activex	count=1
function	constructed ||| call	count=1
function	the hyperbolic cosine ||| cosh	count=1
function	an attribute ||| attribute	count=3
arg	the given name called ||| name	count=1
returnv	the block [returnv] ||| [returnv]	count=1
function	of paths matching ||| find files	count=1
function	[function_1] [function_2] ||| [function_1] local [function_2]	count=2
module	visitor ||| totableofcontents	count=1
function_arg	from the [arg_2] ||| [function_1] [arg_2]	count=3
returnv	string don’t ||| string	count=1
module	xmlrpc ||| xmlrpc client proxy	count=1
returnv	@param ||| instance	count=1
arg	hash of cookie-name=>cookie pairs ||| raw_cookie	count=1
module	end of parsing ||| stats	count=1
function_arg	deletes the named ||| delete file_name	count=2
function	completely closed false otherwise ||| closed	count=1
arg	command exists in file1 ||| command file1	count=1
function	date [function] ||| [function]	count=6
module	list of [module] ||| [module]	count=5
arg	gems in specs ||| specs	count=1
returnv	set as the ||| instance	count=1
function	[function] a ||| [function]	count=2
function	a thread-local [function_2] ||| [function_2] [function_1]	count=1
function	a hex-encoded form keeping ||| hexdigest	count=1
module	has ||| codeobject	count=1
function	unknown ||| unknown	count=1
module	creates a defaultfilehandler ||| webrick httpservlet defaultfilehandler	count=1
module	[module] to self ||| [module]	count=1
module	apiset that will retrieve ||| resolver apiset	count=1
function	real ||| real	count=5
function	key already exists ||| key !	count=1
arg	and stats ||| stats	count=1
module	through ||| driver	count=1
module	number ||| openssl ssl	count=1
module	returns the status class ||| webrick httpstatus	count=1
arg	ln_s(old new ||| dest	count=1
function	constants ||| constant	count=2
arg	of significant digits in ||| digits	count=1
function	returns the discarded bytes ||| error bytes	count=1
function	the default value for ||| default	count=3
module	this object ||| parent	count=1
arg	the scripts ||| bindir	count=1
module	form for restricting ||| gem requestset	count=1
module	that ||| drb	count=2
function	module of the ||| extension modules	count=1
module	password from ||| webrick httpauth htpasswd	count=1
returnv	returns true if ||| bool	count=24
rep	http [function_arg_2] ||| [module_1] get [function_arg_2]	count=2
module	drb :drbobject ||| drb drbobject	count=1
function_arg	[function_1] path ||| [function_1] head [arg_2]	count=1
returnv	using accept [returnv] after o_nonblock ||| [returnv]	count=1
arg	by mode_int ||| mode_int	count=1
arg	public key ||| key	count=1
function	the nonce validity ||| nonce	count=1
function	which to [function_2] ||| attributes [function_1] [function_2]	count=1
function	a normal method ||| method	count=1
function	[function_1] object ||| [function_2] [function_1]	count=6
module	accept_paragraph_i with [module] :paragraph containing ||| [module]	count=1
module	bold ||| rdoc markup tobs	count=1
module	given object ||| object	count=1
module	digest can be ||| digest	count=1
function	number of microseconds for ||| tv usec	count=1
function_arg	[function_1] [arg_2] with values v serialized ||| [function_1] [arg_2]	count=2
module	passing capitalized [module] ||| [module]	count=3
module	read from ||| zlib gzipreader	count=1
arg	a class_type ||| class_type	count=1
returnv	[returnv] possibly ||| [returnv]	count=4
module	hash instance ||| hash	count=1
function	false if rxp is ||| ?	count=1
module	the text gem implementation ||| gem text	count=1
module	prepares ||| markup tottonly	count=2
arg	[arg_1] n ||| [arg_2] [arg_1]	count=1
function	a single [function_2] ||| [function_2] [function_1]	count=4
arg	server [arg_2] ||| [arg_1] [arg_2]	count=3
function	ri [function_2] ||| [function_1] [function_2]	count=1
module	method-name is found ||| xmlrpc basicserver	count=1
module	for rdoc ||| rdoc stats	count=1
function	to add the ||| add	count=1
function	exception ||| exception	count=1
arg	and y ||| y	count=1
arg	extensions for the key ||| key age extensions serial	count=1
function	constructs a version from ||| new	count=1
function	a diagonal ||| diagonal	count=1
function	[function_1] [function_2] the ||| irbloader [function_1] [function_2] path priv	count=3
function_arg	arc tangent [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] and string ||| [arg_2] [arg_1]	count=4
module	if it ||| thread	count=1
module	that are immediately available ||| sslsocket	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1860
arg	first limit ||| limit	count=1
module	c ||| fiddle	count=1
arg	number of seconds ||| seconds	count=1
module	generated docs ||| rdoc generator darkfish	count=1
arg	file to the ||| file	count=2
arg	eid and sid respectively ||| eid sid	count=2
function	[function_1] the gem ||| [function_2] [function_1]	count=4
function	the net ||| timeout=	count=1
module	case that calls ||| rdoc markup formattertestcase	count=1
function	[function] for the ||| [function]	count=5
function	then use to ||| dir	count=1
function	name with ||| name	count=3
function	power which may be ||| **	count=1
function	name with [function] ||| [function]	count=1
function	[function_1] unspecified ||| [function_2] [function_1]	count=2
arg	wraps source and ||| source	count=1
module	of bytes that are ||| openssl	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=2730
arg	safe ||| safe	count=1
arg	set built [arg] duplicating ||| [arg]	count=1
arg	named cert_name from test/rubygems/ ||| cert_name	count=1
returnv	version from the ||| instance	count=1
module	prepares the ||| rdoc markup	count=7
module	indicate that the request ||| resolver dependencyrequest	count=1
module	the visitor for ||| totableofcontents	count=1
module	the inflate stream ||| zlib inflate	count=1
function	[function_1] text ||| [function_2] [function_1]	count=2
function	yield would execute ||| given	count=1
function	removes the definition of ||| remove class variable	count=1
arg	the given pattern object ||| pattern	count=1
module	[module] in ||| [module]	count=2
module	=> ||| rdoc store	count=1
function	attr entries matching the ||| matching	count=1
rep	[module_1] [function_arg_2] ||| [module_1] bool has [function_arg_2]	count=5
arg	:toplevel to ||| absolute_name relative_name	count=1
arg	matched to pattern ||| pattern	count=1
function	the command line by ||| dir	count=1
function	spec ||| spec by	count=1
arg	port [arg_2] ||| [arg_1] [arg_2]	count=1
function	dump only the ||| dump	count=1
module	the remote ||| drbobject	count=1
module	uri of the ||| drbobject	count=1
function	valid ‘nz_number’ ||| valid nz number	count=2
function	pages ||| pages	count=1
function	class name ||| inspect	count=1
module	they don’t ||| generator darkfish	count=1
module	of this pointer ||| fiddle pointer	count=2
function	the current match ||| match	count=2
returnv	the encoding object ||| encoding	count=2
returnv	to complete [returnv] join and ||| [returnv]	count=1
module	of the [module] suitable ||| [module]	count=1
arg	list with ||| list	count=1
arg	func can be found ||| func	count=1
function_arg	[function_1] for file_name ||| [function_1] [arg_2]	count=1
function_arg	body of [arg_2] ||| [function_1] [arg_2]	count=1
module	event ||| tracepoint	count=1
arg	responds ||| symbol include_all	count=1
arg	[arg_1] [arg_2] according to some typical ||| [arg_2] [arg_1]	count=4
function	empty ||| empty	count=5
function	specified [function] adding this ||| extend [function]	count=1
function	currently unresolved specs ||| unresolved	count=1
module	all gem ||| gem	count=1
function	with hax todo ||| create	count=1
function_arg	[function_1] [arg_2] ||| [function_1] length= [arg_2]	count=10
arg	tk setting ||| single tk	count=1
function_arg	[function_1] name ||| [function_1] out [arg_2]	count=2
function	components in a ||| component	count=1
arg	[arg_1] #auth_type of ||| [arg_2] [arg_1]	count=1
arg	to remote_addr_args and bound ||| remote_addr_args opts	count=1
module	this dependency request ||| resolver dependencyrequest	count=1
function_arg	copy request [arg_2] ||| [function_1] [arg_2]	count=1
module	and the digest ||| digest	count=1
function_arg	a constant [arg_2] ||| [arg_2] [function_1]	count=3
function	dn ||| set dn	count=1
module	this request ||| openssl ocsp request	count=2
module	of files ||| specification	count=1
function	returns the length of ||| length	count=1
function	the default [function_2] ||| [function_1] [function_2]	count=11
module	that are immediately available ||| openssl	count=1
function	in non-blocking ||| nonblock	count=1
arg	[arg] the ||| key [arg]	count=3
arg	if the given week ||| cwyear cweek cwday	count=1
module	date/time which represents ||| xmlrpc datetime	count=1
function_arg	protect [arg_2] ||| [arg_2] [function_1]	count=3
arg	document from [arg] ||| [arg]	count=1
module	the strings using file ||| file	count=1
function	a warning ||| warning	count=1
arg	given path as the ||| path	count=1
module	number of undocumented items ||| stats	count=1
arg	the attribute ||| attribute	count=1
arg	of arguments by parsing ||| args	count=1
module	big ||| bignum	count=9
module	bytes that are immediately ||| sslsocket	count=1
arg	[arg] using unix ||| [arg]	count=1
function	visitor ||| list item start	count=4
function	[function_1] [function_2] ||| [function_2] conflicts [function_1]	count=1
function_arg	[function_1] gem ||| [arg_2] [function_1]	count=2
module	from ||| rdoc markup	count=1
function_arg	[function_1] by mode_int ||| [arg_2] [function_1]	count=2
function	the help ||| help	count=1
function	buffer to length ||| buffer	count=1
module	creates an rdoc :attr ||| rdoc parser ruby	count=3
arg	allocate size bytes ||| size	count=1
module	to just the ||| rdoc markup tolabel	count=1
function	a new [function_2] ||| [function_2] [function_1]	count=4
function	infinity and -infinity ||| ascii only	count=1
arg	of decimal to ||| decimal	count=3
arg	attribute to ||| attribute	count=1
module	to ||| remotefetcher	count=1
function	which to ||| get	count=1
function	for dn ||| dn	count=1
module	:sslcertificate ||| drb drbsslsocket sslconfig	count=2
arg	newname ||| newname	count=1
arg	in the given text ||| text code_object	count=1
function	ascii text mode storing ||| puttextfile	count=1
function	the instance variable ||| instance variable	count=2
arg	values as ||| values	count=1
function	from stdin into html ||| handle pipe	count=1
function	for the specific ||| specific	count=1
arg	certificate if it exists ||| certificate	count=1
function	to disk for use ||| generate	count=1
arg	function mapped [arg] ||| [arg]	count=1
function	hash [function_2] ||| [returnv_1] [function_2]	count=5
function_arg	hostname for address ||| getname address	count=2
module	this package ||| gem package	count=1
module	is respected for this ||| rexml	count=1
returnv	[returnv] given ||| [returnv]	count=1
function	paragraph from ||| paragraph	count=1
function	query as a ||| query	count=1
function	[function_1] extra ||| [function_1] [function_2]	count=4
function	close the ||| close	count=1
function_arg	try [function_1] [arg_2] a ||| try [function_1] [arg_2]	count=1
module	that :sslcertificate ||| drb drbsslsocket	count=1
module	this method will be ||| rdoc task	count=1
returnv	[returnv] iff the ||| [returnv]	count=1
function	deletes all messages ||| delete all	count=2
function	basis ||| basis	count=1
function	a post request to ||| request post	count=1
module	this singleton class ||| rdoc	count=1
module	file referenced by ||| file	count=1
module	finds ||| rdoc context	count=1
arg	first [arg] yielding a ||| ignore_error: [arg]	count=1
function	[function_1] [function_2] module ||| [function_1] [function_2]	count=2
function	the named private method ||| private method	count=1
rep	sets [function_arg_2] ||| [module_1] set [function_arg_2]	count=1
module	aws-sdk gem ||| gem	count=1
module	ensures that :sslcertificate ||| drbsslsocket sslconfig	count=1
function	serialised [function_2] ||| [function_2] [function_1]	count=2
returnv	[returnv] possibly with ||| [returnv]	count=4
module	the specifications that match ||| molinillo specificationprovider	count=1
function	[function] address for ||| [function]	count=1
arg	destination mailbox ||| set mailbox	count=1
function	file for each ||| files	count=1
function	[function_1] are commented ||| [function_2] out [function_1]	count=1
function	of time in ||| time	count=1
function	“with” ||| dir config	count=1
arg	not a child ||| child	count=1
function	irb commands irb ||| extend commands	count=1
arg	the message ||| message	count=3
arg	method_body and returns a ||| method_body	count=1
module	[module] document from ||| [module]	count=4
module	so that all ||| gem specification	count=1
module	and remove ||| gem	count=1
module	openssl :x509 :name ||| security	count=1
arg	http status code ||| code	count=1
arg	evaluation order of deny_allow ||| order	count=1
arg	the early binding method ||| dispid args types	count=1
function	[returnv_1] [function_2] threads in the pool ||| thwait [returnv_1] [function_2]	count=1
function	[function] attempts to ||| [function]	count=3
function	a new ||| select	count=1
module	csv :row ||| csv table	count=1
module	of call ||| module	count=1
arg	[arg_1] [arg_2] via ||| rdoc servlet asset [arg_2] [arg_1]	count=6
module	the tuplebag returning ||| rinda tuplebag	count=1
function	family as an ||| afamily	count=1
module	an rdoc :attr for ||| rdoc	count=2
function	::capture2e captures ||| capture2e	count=1
module	parser that ||| parser	count=1
arg	[arg_1] front with ||| [arg_2] [arg_1]	count=1
function	[function] in the ||| [function]	count=7
function_arg	adds paths [arg_2] ||| [function_1] [arg_2]	count=1
arg	text ||| text	count=22
arg	a temporary file ||| tmpdir	count=1
module	the visitor for ||| tordoc	count=2
function_arg	for file if ||| for file	count=1
module	number of ||| sslsocket	count=1
function	a siginfo handler and ||| siginfo handler	count=1
arg	given_name with [arg_2] ||| [arg_1] [arg_2]	count=1
returnv	returns the object ||| obj	count=3
arg	sec as time ||| sec	count=1
returnv	and returns the value ||| value	count=2
arg	as an httpresponse ||| initheader dest	count=1
arg	[arg_1] and includes ||| [arg_2] [arg_1]	count=3
function	of key value arrays ||| a	count=3
module	items in enum ||| enumerable	count=2
arg	value in ||| value	count=1
module	provide the inflate ||| inflate	count=1
arg	[arg] be ||| [arg]	count=1
module	this workspace and ||| irb workspace	count=1
module	gems ||| requestset gemdependencyapi	count=2
function	as packed struct sockaddr ||| to sockaddr	count=1
module	adds an rdoc ||| rdoc	count=1
function	returns true [function_2] ||| [returnv_1] friday [function_2]	count=1
arg	based on [arg] values interpreted ||| [arg]	count=2
module	syslog alert ||| syslog logger	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ? requirement activated [arg_2]	count=18
function	exit or ||| exit	count=1
function	a paragraph that is ||| paragraph	count=1
module	block form ||| gemdependencyapi	count=1
module	the requirement ||| requirement	count=1
function	newline ||| handle special hard break	count=1
function	self-signed certificate ||| create cert self signed	count=1
module	in if ||| rdoc generator darkfish	count=1
module	from the hosts file ||| hosts	count=5
arg	module given as ||| module	count=1
arg	the flag file in ||| op_dir time last	count=1
module	tobs that is ||| markup tobs	count=1
module	a visitor to render ||| markup	count=1
module	indicate if [module] ||| [module]	count=3
function_arg	[function_1] method ||| [arg_2] [function_1]	count=10
function	schedules execution of another ||| stop	count=1
arg	the output formatter ||| formatter	count=1
function_arg	gem :installer [arg_2] ||| [arg_2] [function_1]	count=1
function	the output ||| accept	count=1
arg	was matched to pattern ||| pattern	count=1
function	integer memory location of ||| i	count=1
function	activates the gems in ||| use gemdeps	count=1
arg	along with style ||| style	count=1
arg	min ||| min	count=2
module	another child ||| rexml	count=1
function	exit [function_2] ||| [function_1] [function_2]	count=3
module	from the [module] first ||| [module]	count=1
module	when the ||| syslog	count=1
arg	[arg_1] stop ||| [arg_2] [arg_1]	count=2
function	[function_1] in ||| [function_2] [function_1]	count=3
module	if they ||| rdoc	count=1
arg	match for name ||| name	count=1
function	[function_1] mode for ||| [function_2] [function_1]	count=5
module	for marking up this ||| rdoc generator markup	count=1
arg	other [arg_2] ||| [arg_2] [arg_1]	count=4
arg	print message ||| message	count=1
arg	facility ||| ident options facility	count=1
function	the credentials file ||| check credentials	count=1
module	sets the net ||| client	count=1
module	the ||| ssl sslsocket	count=2
function	the initial length ||| initial	count=1
module	the current process to ||| process sys	count=3
function	[function_1] class ||| [function_1] [function_2]	count=4
function	quirks_mode false otherwise ||| quirks mode	count=1
function	its pem encoding ||| export	count=1
module	marking up ||| generator	count=1
function	[function] following ||| [function]	count=2
function	constants [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] a single ||| [function_2] [function_1]	count=1
function	finds a spec and ||| find spec by	count=1
function	a record for ||| search record	count=1
function	prepares the ||| start	count=7
module	the right thing in ||| rdoc	count=1
function	convert flt to a ||| to d	count=1
function	defined in obj ||| defined	count=1
function	if self ||| ?	count=1
function	to configure various “with” ||| dir config	count=1
function	to add the visitor ||| add visitor	count=1
function	number of seconds since ||| f	count=1
module	have been ||| drb	count=1
function	pop3 connections port 110 ||| pop3 port	count=1
function	members ||| members	count=1
module	depending on ||| levelednotifier	count=1
arg	name called [arg_2] ||| [arg_2] [arg_1]	count=1
function	builds a paragraph ||| build paragraph	count=6
module	an entity declaration can ||| rexml	count=1
arg	by looking for :method ||| container	count=1
function	protected instance methods ||| protected instance methods	count=3
arg	x and y ||| x y	count=2
arg	given scheme if one ||| scheme	count=1
arg	question with ||| question	count=1
arg	start to ||| start	count=1
function_arg	stream src to ||| stream src	count=1
function	returns the [function_2] ||| [returnv_1] allocation [function_2]	count=1
arg	real ||| big real	count=1
arg	[arg_1] index ||| [arg_2] [arg_1]	count=8
module	docs ||| rdoc generator darkfish	count=2
module	in json ||| json ext generator	count=1
function	self-signed certificate with ||| cert	count=1
module	gems ||| gem requestset gemdependencyapi	count=2
module	ssl context to the ||| ssl sslcontext	count=1
function	file [function_2] ||| [function_2] [function_1]	count=3
module	if they ||| rdoc generator darkfish	count=1
function	text generation ||| accepting	count=2
arg	if path matches ||| path flags	count=1
arg	convert str ||| str	count=4
function	[function_1] rubygems ||| [function_1] [function_2]	count=1
module	a ||| gem testcase	count=4
function	iterates over ||| each	count=8
function	appends it onto ||| push	count=1
arg	at uri [arg_2] ||| [arg_2] [arg_1]	count=1
arg	index of the child ||| index	count=1
function	net ||| timeout=	count=2
module	this table in ||| csv table	count=1
function	resets the position ||| rewind	count=1
function	front object of the ||| front	count=1
function	full path to the ||| path	count=1
module	documentation ||| codeobject	count=2
module	random integer greater than ||| random	count=1
function	exit [function_2] ||| [function_2] [function_1]	count=3
function_arg	name [arg_2] ||| [arg_2] [function_1]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] incomplete input [function_2]	count=4
arg	the name is symbol ||| symbol	count=1
function	define [function_2] ||| [function_2] [function_1]	count=2
module	that all file lists ||| gem specification	count=1
module	json to the ||| json ext generator	count=1
function	the credentials file ||| credentials	count=1
function_arg	[function_1] the path ||| [function_1] post [arg_2]	count=1
function	the name ||| name	count=13
function	adds the file ||| add file	count=3
module	returns the [module] the ||| [module]	count=1
module	the ||| stringio	count=3
module	prepares the ||| tomarkdown	count=1
arg	[arg_1] containing parts ||| [arg_2] [arg_1]	count=3
function	sets the instance variable ||| instance variable set	count=1
arg	a target ||| target	count=1
arg	does nothing [arg] because ||| [arg]	count=1
arg	in include_path ||| include_path	count=1
module	of the [module] starting with ||| [module]	count=1
function	[function_1] empty string ||| [function_1] [function_2]	count=1
function	the [function] ||| extension [function]	count=1
arg	a net :httpresponse object ||| uri_or_host path port &block;	count=1
module	dns ||| resolv dns	count=4
module	gem :uninstaller#uninstall is called ||| gem	count=2
function	[function_1] at ||| [function_2] [function_1]	count=1
function_arg	[function_1] the specified ||| [function_1] value [arg_2]	count=1
module	druby reference to the ||| drb	count=1
function	option parser ||| platform option	count=1
module	using ||| makemakefile	count=1
arg	source and moves it ||| source	count=1
arg	depth event ||| depth	count=1
arg	each to visibility ||| visibility singleton	count=1
function	the angle part of ||| angle	count=1
module	point ||| module	count=1
module	field [module] nil ||| [module]	count=1
module	todo deprecate ||| gem testcase	count=1
module	hsh whose key is ||| hash	count=1
function	[returnv_1] [function_2] stat ||| stat [returnv_1] zero [function_2]	count=1
module	the ftp ||| net	count=1
arg	program read from src ||| src filename	count=1
arg	void in a document-class ||| class_mod	count=1
function	[function_1] the memory ||| [function_2] [function_1]	count=2
module	the response received was ||| smtp response	count=2
function	parses a [function_2] ||| [function_2] [function_1]	count=3
module	sets ||| ri	count=1
arg	invoked whenever [arg] ||| [arg]	count=3
module	html snippet ||| tohtmlsnippet	count=1
function	private instance [function_2] ||| [function_1] [function_2]	count=1
module	the [module] :installer ||| [module] resolver	count=1
arg	exponent ||| exponent	count=1
module	the ||| complex	count=1
function	the socket address as ||| to	count=1
module	that contains the session ||| ssl session	count=1
arg	prefix to ||| prefix	count=1
function	certificate is generated ||| setup certificate	count=1
arg	transcodes character to encoding ||| encoding	count=1
function	[function_1] ipv6 ||| [function_2] [function_1]	count=10
function	[function_1] visitor ||| [function_2] [function_1]	count=1
module	enumerator but doesn’t ||| enumerator	count=1
function	from comment ||| comment tomdoc	count=1
function	delegator [function_2] ||| [function_2] [function_1]	count=2
returnv	array containing backtrace location ||| array	count=1
module	this comment is in ||| rdoc comment	count=1
arg	for the #auth_type of ||| reload_db	count=1
function	directory of ||| dir	count=1
module	file is a directory ||| file	count=1
arg	length [arg] elements from ||| [arg]	count=1
arg	res for the ||| generator req res	count=1
arg	the given list ||| list	count=1
arg	of other ||| other	count=2
module	version from the command ||| command	count=1
function	exit ||| to exit	count=1
module	with on ||| makemakefile	count=1
function	the underlying ||| s	count=1
function	any existing attribute ||| attribute	count=1
module	they don’t ||| rdoc	count=1
module	child ||| rexml	count=1
arg	given spec in the ||| spec	count=1
arg	against [arg_2] ||| [arg_2] path flags [arg_1]	count=1
arg	compression ||| level strategy	count=1
function	c ||| c	count=1
function	the names of class ||| class	count=1
arg	the dependency is satisfied ||| dependency	count=1
module	attlistdecl pulling the ||| attlistdecl	count=1
module	the list ||| list	count=4
arg	server ||| server	count=1
function	will be set ||| new	count=1
function_arg	[function_1] given string ||| [function_1] [arg_2]	count=2
function	returns reference ||| reference	count=1
module	and ||| mutex	count=2
arg	[arg_1] mode linking ||| [arg_2] [arg_1]	count=1
arg	element of ||| element	count=2
function_arg	file matching [arg_2] ||| [function_1] unresolved tree [arg_2]	count=1
function	a [function] ||| [function]	count=7
function	returns [function_2] ||| unboundmethod [returnv_1] [function_2]	count=3
module	prepares the ||| rdoc markup tohtml	count=3
function	parameters from ||| rb	count=1
function_arg	[function_1] string or ||| [function_1] [arg_2]	count=1
module	redundancies removed ||| specification	count=1
function	“with” options with on ||| dir	count=1
module	hash and ||| hash	count=1
arg	given base_directory ||| base_directory	count=1
function	[returnv_1] for inspection ||| [returnv_1] [function_2]	count=2
function	nan infinity and -infinity ||| allow nan	count=1
arg	an httpresponse object ||| data initheader dest	count=1
module	of ||| zlib gzipreader	count=1
function	for a constant with ||| const get	count=1
module	a defaultfilehandler ||| httpservlet defaultfilehandler	count=1
function	the name and version ||| name	count=1
arg	the specified [arg] and ||| [arg]	count=1
arg	pattern [arg_2] ||| [arg_2] [arg_1]	count=1
function	added ||| added	count=1
module	and stat is ||| file stat	count=1
module	installs [module] using the ||| gem [module]	count=1
function	next object ||| next values	count=1
arg	matrices ||| matrices	count=1
function	starts reading [function_2] ||| [function_2] [function_1]	count=4
module	of its ||| complex	count=1
function	contains ||| include	count=2
function	true [function_2] ||| [returnv_1] handles [function_2]	count=2
function	default signing key path ||| default key path	count=1
function	[function] of ||| on [function]	count=3
module	alias of ||| rdoc alias	count=1
module	to ||| xmlrpc	count=1
function	that represents ||| external	count=2
module	whether this dsa instance ||| dsa	count=1
arg	[arg_1] using ||| [arg_2] [arg_1]	count=5
module	rdoc format ||| rdoc	count=1
function	value as a ||| to	count=2
module	and after gem :source ||| gem source	count=1
function	value string ||| value	count=1
function	this ||| data	count=1
function	quietly ensure the gem ||| ensure gem	count=1
module	header field [module] nil if ||| [module]	count=1
function	[function] is ||| [function] defined	count=3
function	modules ||| modules	count=2
module	accept_rule ||| markup rule	count=1
module	lexer for ||| rdoc rubylex	count=1
function	adds ||| add	count=39
module	:sslprivatekey have been ||| drb drbsslsocket sslconfig	count=1
module	session ||| ssl session	count=2
function	named constant to ||| const	count=1
module	is [module] ||| rdoc [module]	count=1
arg	to ||| flags	count=2
function	fetches a child ||| []	count=1
arg	may be returns arg ||| arg	count=2
rep	which [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=2
module	from the [module] by ||| [module]	count=1
module	the spec for downloading ||| gem specification	count=1
function	gem names ||| gem names	count=2
function	path to gem ||| gem	count=1
module	parent ||| rexml parent	count=2
function	the length of the ||| length	count=1
function	is valid and ||| valid	count=3
returnv	array of all ||| array	count=2
function	there ||| has next	count=1
function	sorts sections alphabetically default ||| sort sections	count=1
module	object’s comment ||| rdoc generator	count=1
function	in tomdoc format ||| tomdoc	count=1
module	self to ||| string	count=3
arg	[arg] must ||| is_ret [arg]	count=2
function	the best ||| by	count=3
function	as delegator ||| delegator	count=1
function	creates an installer for ||| util installer	count=1
function	single gem [function_2] ||| [function_1] [function_2]	count=3
function	status class ||| []	count=1
arg	[arg_1] implicit ||| [arg_2] [arg_1]	count=11
module	compares to ||| generic	count=1
arg	permissions ||| permissions passphrase	count=1
function	adds the #page_dir ||| finish page dir	count=1
module	with no ||| module	count=1
module	convert this node ||| psych nodes node	count=1
module	a parser ||| parser	count=1
function	if the named protected ||| protected	count=1
function	returns true [function_2] ||| [returnv_1] socket [function_2]	count=2
arg	the uri [arg_2] ||| [arg_1] [arg_2]	count=4
arg	for reading or writing ||| p1 p2 p3	count=1
module	version from the ||| gem version	count=1
function_arg	hostname for [arg_2] ||| [arg_2] [function_1]	count=3
function	satisfied [function_2] ||| [function_2] [function_1]	count=3
function	to der encoding ||| der	count=1
function_arg	default [arg_2] ||| [function_1] gems [arg_2]	count=1
function	[function_1] arguments ||| [function_2] [function_1]	count=4
module	for true ‘true’ ||| json ext generator generatormethods trueclass	count=1
module	creates a single-column matrix ||| matrix	count=1
arg	the two ||| other	count=2
function_arg	[function_1] unwanted ||| [function_1] [arg_2]	count=3
module	this list and ||| markup list	count=1
function	removes [function] variable ||| remove [function]	count=1
arg	:specification spec into the ||| spec	count=1
module	date and ||| date	count=1
arg	[arg_1] the options ||| [arg_2] [arg_1]	count=3
function_arg	for extensions [arg_2] ||| [arg_2] [function_1]	count=1
module	severity level ||| logger	count=1
function	client ||| client	count=1
module	the visitor ||| rdoc markup tohtml	count=2
returnv	available ||| self	count=1
function_arg	[function_1] [arg_2] ||| [function_1] requirement [arg_2]	count=1
arg	data for reading ||| data options	count=1
arg	:http object without opening ||| port p_addr p_port p_user p_pass	count=1
arg	existing attribute [arg] same ||| name [arg]	count=1
function_arg	notifications [arg_2] ||| [function_1] [arg_2]	count=1
function	parses the ||| parse	count=4
arg	and prefix to send ||| prefix	count=1
module	the visitor ||| rdoc markup tomarkdown	count=1
module	index ||| rdoc generator jsonindex	count=3
arg	list n is a ||| list	count=1
module	a list ||| driver	count=1
arg	special is a link ||| special	count=1
module	files so that ||| gem specification	count=1
function	client [function_2] ||| [function_1] [function_2]	count=1
function	in if they don’t ||| gen	count=1
function	cwd/cdup ||| enterable	count=1
function	[function_1] no ||| [function_1] [function_2]	count=1
function	a self-signed certificate with ||| create cert self signed	count=1
function	a stream a ||| stream	count=1
arg	temporary file ||| basename tmpdir	count=1
module	and if [module] ||| [module]	count=3
module	of the object ||| drb	count=1
function	class with ||| class named	count=1
module	the encoding object that ||| io	count=1
function	parameters ||| setup	count=1
function	parameters of key to ||| params	count=3
module	tokens ||| parser rubytools	count=1
function	[function_1] instance ||| [function_2] variable [function_1]	count=1
module	“with” options with on ||| makemakefile	count=1
module	symbol corresponding to an ||| symbol	count=1
arg	prefix or the ||| prefix	count=1
function	last [function_2] ||| [function_1] [function_2]	count=4
arg	tags and an ||| tags	count=1
module	representing a yaml ||| psych nodes	count=1
function	handler and replaces ||| handler	count=1
function	returns a lazy enumerator ||| lazy	count=1
module	[module] :scalar object ||| [module]	count=1
module	row read from ||| gzipreader	count=1
function	the encoding of ||| external encoding	count=2
arg	from given str ||| str enc separator: '&' use__charset_:	count=1
function	gem ||| gem in old	count=1
function	[function_1] installed parser ||| [function_2] [function_1]	count=4
module	:noreason ||| localjumperror	count=1
arg	or not the given ||| opt &b;	count=1
function	[returnv_1] if the ||| [returnv_1] has key [function_2]	count=1
arg	gem [arg] contains all ||| [arg]	count=1
function	marshal ||| marshal	count=3
function	a prime ||| from prime	count=4
module	represents @return ||| resolver molinillo dependencygraph	count=1
module	of undocumented items in ||| rdoc	count=1
module	graph to ||| gem resolver molinillo	count=1
function	the uri of ||| drburi	count=1
function	sets ||| use loader=	count=1
function	words surrounded by html ||| html	count=1
function	returns true [function_2] ||| [returnv_1] creatable [function_2]	count=1
function	body ||| body permitted	count=1
function	latest version of ||| latest version	count=1
module	removes the tempdir ||| gem	count=1
module	represents @return edge ||| resolver molinillo dependencygraph	count=1
arg	ro ||| ro	count=1
module	clobber [module] task ||| [module]	count=1
function	parameters from ||| params	count=1
arg	by parsing from [arg_1] [arg_2] according to some rfc ||| httpdate [arg_2] [arg_1]	count=1
function	iff there [function_1] [function_2] following edges within this ||| [function_2] [function_1]	count=4
function	a paragraph ||| paragraph	count=2
module	the c code ||| rdoc parser c	count=1
function	[returnv_1] if stat ||| [function_2] [returnv_1]	count=3
module	list ||| list	count=6
function_arg	[function_1] event ||| [function_1] [arg_2]	count=2
module	digest ||| openssl digest	count=3
function	then use ||| config	count=1
module	row ||| csv row	count=2
function	installed? ||| rdoc installed	count=1
module	to ||| generic	count=1
module	parameters ||| drb	count=1
function	random ||| random	count=1
module	visitor for ||| rdoc markup tomarkdown	count=1
arg	[arg_1] time and ||| [arg_1] issuer [arg_2]	count=1
arg	given and [arg] ||| obj) [arg]	count=1
arg	[arg] instance ||| file_name content options [arg]	count=2
function_arg	[function_1] start and ||| [function_1] [arg_2]	count=1
function	[function] default ||| [function] extend	count=1
module	ensures that :sslcertificate ||| drb	count=1
function_arg	satisfied by [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] charmap name ||| [function_1] [function_2]	count=3
function	storing the ||| puttextfile	count=1
function	prime factorization ||| prime	count=2
arg	with flags ||| flags	count=1
module	this dh ||| openssl pkey dh	count=2
arg	reference ||| ref	count=1
arg	platforms ||| platforms	count=1
module	finds ||| rdoc ri driver	count=1
module	been provided or that ||| drb drbsslsocket	count=1
module	member of [module] equals ||| [module]	count=1
function	a record for ||| record	count=1
function_arg	and from_version [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	please have ||| tag tag_class	count=1
function	has a [function_2] ||| [function_2] [returnv_1]	count=4
returnv	visibility for subsequently defined ||| self	count=1
module	enum ||| enumerable	count=10
returnv	14 [returnv] representing the ||| [returnv]	count=1
function	json ||| json	count=4
module	length and number ||| rdoc stats	count=1
arg	in [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
module	pass output ||| rdoc ri driver	count=1
arg	str to the string ||| str	count=1
arg	c ||| c	count=1
module	markdown ||| markdown	count=2
function	finds a [function_2] ||| [function_2] [function_1]	count=7
function_arg	sign the [arg_2] ||| [arg_2] [function_1]	count=4
arg	with the specified priority ||| priority format_string format_args	count=1
module	use with analysis ||| gem basicspecification	count=1
arg	to maxlen bytes from ||| maxlen flags outbuf options	count=1
function	[function] locked ||| [function]	count=1
function	‘::’ for a ||| name prefix	count=1
module	encoding with ||| encoding	count=1
arg	signing_key ||| signing_key	count=1
returnv	elements from ||| ary	count=1
module	the given ||| gem requestset gemdependencyapi	count=1
arg	and [arg] for ||| [arg]	count=1
function	currently in the data ||| root	count=1
module	to rdoc attributes ||| rdoc markup	count=1
function	various “with” options with ||| dir	count=1
function_arg	[function_1] name enabled? ||| [arg_2] [function_1]	count=3
function	[function_1] encoding name ||| [function_1] [function_2]	count=3
function	used in the comparison ||| <=>	count=1
function	used to detect if ||| ?	count=1
module	singleton class class << ||| rdoc	count=1
arg	start ||| start	count=1
arg	path ||| element path	count=1
function	encoding [function_2] ||| [function_2] [function_1]	count=6
module	:http object from generic ||| http	count=1
function	a tt tag? ||| tt	count=1
module	float number ||| float	count=1
function	to the option parser ||| platform option	count=1
function	will determine the ||| recv	count=1
arg	from found ||| found	count=1
function	logger also [function] ||| [function]	count=3
arg	[arg_1] indent spaces ||| [arg_2] [arg_1]	count=2
module	a ||| gem version	count=2
function	creates a symbolic link ||| symlink	count=1
module	and modulus [module] ||| [module]	count=1
arg	[arg_1] the signing_key ||| [arg_2] [arg_1]	count=3
arg	an httpresponse object ||| body initheader	count=3
module	filter ||| uri ldap	count=1
module	[module] object ||| benchmark [module]	count=3
function	one of the keys ||| keys	count=1
arg	creates [arg_1] [arg_2] ||| openssl digest digest new [arg_1] [arg_2]	count=4
module	compares ||| generic	count=1
function_arg	a leap [arg_2] ||| [arg_2] [function_1]	count=4
arg	definition for context ||| context	count=1
module	authorization header ||| net httpheader	count=1
module	datetime with julian ||| datetime	count=1
module	class class << myclassname ||| rdoc singleclass	count=1
module	keep_files environment variable ||| gem testcase	count=1
module	of available encoding ||| encoding	count=1
function	a record ||| record	count=1
module	optionally under a ||| light node	count=1
module	so that ||| gem	count=1
module	attempts to ||| thread mutex	count=1
function	id functionality ||| sid available	count=2
returnv	the signature is valid ||| bool	count=1
function	classes [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] command for ||| [function_1] [function_2]	count=2
arg	of nodes matching ||| namespaces variables	count=1
module	time and utc ||| time	count=1
arg	front with a ||| front desc	count=1
function	the angle part ||| angle	count=1
arg	named generator “darkfish” ||| generator	count=1
function	if the document ||| start document	count=1
function	returns true if ||| bool leap ?	count=1
arg	arguments by parsing them ||| args	count=1
module	dependencies ||| gem requestset	count=1
arg	[arg_1] type of ||| [arg_1] [arg_2]	count=3
arg	string according to some ||| string 1 jan	count=2
arg	n ||| n zero one	count=1
function	for each ||| files	count=1
function	copy request to ||| copy	count=1
function	a superset of the ||| superset	count=1
module	pass output ||| ri driver	count=1
function_arg	a trace [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] of x ||| [arg_2] [function_1]	count=4
function	[returnv_1] [function_2] ||| [returnv_1] allow nan [function_2]	count=1
function	removes ifdefs ||| handle ifdefs in	count=1
function_arg	system entry [arg_2] ||| fileutils remove [function_1] [arg_2]	count=1
function_arg	extra data [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] in default ||| [function_2] [function_1]	count=5
arg	creates the scripts to ||| bindir	count=1
function	exit [function] child for ||| [function]	count=1
module	of ||| module	count=2
function	a spec ||| spec by	count=1
function_arg	[function_1] list_item ||| [function_1] [arg_2]	count=3
function	the accept ||| accept	count=1
module	was ||| gem testcase	count=1
function_arg	can handle [arg_2] ||| [function_1] by name [arg_2]	count=1
module	this ||| specification	count=6
module	generated json to the ||| json	count=1
function_arg	[function_1] [arg_2] ||| [function_1] eval [arg_2]	count=1
function	str as a ||| to	count=1
arg	named file ||| file_name	count=14
function	raw profile [function_2] ||| [function_2] [function_1]	count=4
function	set [function_2] ||| [function_2] variable [function_1]	count=1
arg	[arg_1] you ||| [arg_2] [arg_1]	count=3
function	for consuming ||| accept	count=3
arg	meth_name defined ||| meth_name	count=1
function	no handler for ||| default handler	count=1
arg	templates match tuple ||| tuple	count=1
function_arg	writer stream [arg_2] ||| [arg_2] [function_1]	count=2
module	a codeobject and ||| rdoc codeobject	count=1
function	[returnv_1] [function_2] specificfile for the gem ||| gem source specificfile [returnv_1] [function_2]	count=1
module	line breaks ||| prettyprint	count=1
function_arg	[function_1] dependency is ||| [function_1] [arg_2] activated	count=2
function_arg	dump [arg_2] ||| [arg_2] [function_1]	count=2
function	rfc2965 cookies as a ||| cookie2	count=1
function_arg	[function_1] tag a ||| [arg_2] [function_1]	count=1
function	satisfied by the given ||| satisfied by	count=1
function	since ||| f	count=1
module	information ||| generator jsonindex	count=1
module	of this ||| rdoc singleclass	count=1
function	key from ||| key	count=1
function	klass [function] ||| new with [function]	count=1
module	supplied will ||| rexml parent	count=1
module	the certificate store ||| store	count=1
arg	returns true [arg] is ||| [arg]	count=1
function	of an alias ||| add alias	count=1
module	[module] and its ||| [module]	count=1
function	default spec ||| default spec	count=1
module	:http#open_timeout ||| client	count=1
function	[returnv_1] [function_2] running ||| thwait [returnv_1] [function_2]	count=1
function_arg	notifications of [arg_2] ||| [function_1] [arg_2]	count=1
function	returns the block ||| integer block	count=6
arg	extensions for ||| age extensions	count=2
function	accept specified class ||| accept	count=2
function	status stat ||| status	count=1
function	is a dereferenced ||| ptr	count=1
module	starts a pop3 session ||| pop3	count=1
function	name ||| find all by name	count=1
function	all gem version from ||| all gem	count=1
function	is valid [function_2] ||| [function_2] [function_1]	count=2
function	builds ||| build	count=4
module	gem was installed ||| gem	count=1
module	live ||| generator darkfish	count=2
function_arg	add the [arg_2] ||| [function_1] value [arg_2]	count=1
module	for subsequently defined ||| module	count=1
arg	directory [arg] ||| [arg]	count=1
module	to its original ||| gem testcase	count=1
function	in the gzip file ||| comment	count=1
function	[function_1] there ||| [function_2] conflicts [function_1]	count=1
function	[returnv_1] if ||| [returnv_1] empty [function_2]	count=4
arg	[arg_1] [arg_2] and return it ||| [arg_2] [arg_1]	count=1
function	less than or ||| <=	count=1
module	rdoc ||| rdoc rdoc	count=4
function	[returnv_1] [function_2] the ||| [returnv_1] value [function_2]	count=1
function	mkcol ||| mkcol	count=1
arg	[arg_1] a from_name ||| [arg_1] [arg_2] from_version	count=1
function	[returnv_1] if ||| [returnv_1] coredump [function_2]	count=1
module	sets files to ||| gem	count=1
function	up an [function] named ||| [function]	count=1
function	removes the definition ||| remove class	count=1
function	name str in ||| name=	count=1
function	that name ||| dir	count=1
function	returns true [function_2] ||| [returnv_1] block [function_2]	count=2
function	ssl ||| ssl	count=4
function	the last win32 error ||| win32 last error	count=1
module	dbm database ||| yaml dbm	count=1
arg	day [arg_2] ||| [arg_1] [arg_2]	count=5
function	[function_1] data hashes ||| [function_1] [function_2]	count=4
module	with hax todo deprecate ||| gem	count=1
arg	the given opts as ||| opts	count=1
function	satisfied? ||| ok	count=1
function_arg	[function_1] text to ||| [function_1] [arg_2]	count=1
function	[function_1] a mapping ||| [function_2] [function_1]	count=2
function	sorted ||| get sorted module	count=1
arg	[arg_1] options parameter ||| [arg_1] [arg_2]	count=2
arg	time for the named ||| file_name	count=1
arg	[arg] gem ||| [arg]	count=2
function	definition of ||| definition	count=1
module	io objects ||| io	count=1
module	to ||| array	count=1
function	[function_1] the instance ||| [function_2] variable [function_1]	count=1
function	for html generation ||| start accepting	count=1
arg	uri [arg_2] ||| [arg_1] [arg_2]	count=5
arg	string which ||| string data	count=1
returnv	returns the list ||| array	count=1
function_arg	adds a [arg_2] ||| [function_1] certificate_id [arg_2] reason revocation_time this_update next_update	count=1
module	the peer certificates verification ||| openssl ssl sslsocket	count=1
function_arg	[function_1] [arg_2] values v serialized by ||| [function_1] create [arg_2]	count=2
returnv	symbol if ||| symbol	count=1
function	for extensions ||| extensions	count=1
function	each key [function] in the ||| each [function]	count=1
function_arg	adds aproc [function_1] [arg_2] destroyed ||| [function_1] [arg_2]	count=2
function	objects [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] given object ||| [function_1] object [arg_2]	count=2
function	internal super ||| internal super	count=2
module	the files ||| options	count=2
module	attr ||| attr	count=1
arg	name to [arg_2] ||| ext generator state []= [arg_1] [arg_2]	count=1
module	drb :drbobject given the ||| drb drbobject	count=1
function	satisfied by ||| satisfied by	count=1
function	[returnv_1] [function_2] ||| [returnv_1] executable real [function_2]	count=2
function	prefixes names of ||| prefixes	count=1
module	documentation ||| rdoc codeobject	count=4
function	[function] bundled ||| in old ruby [function]	count=1
arg	message to the end ||| message	count=1
module	unless documentation has been ||| codeobject	count=1
function	length of the buffer ||| buffer	count=1
function	session attempts ||| only	count=1
function	don’t already ||| sub	count=1
function_arg	extension [arg_2] ||| [arg_2] [function_1]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] contains requirable file [function_2]	count=2
function	[function] row ||| [function]	count=1
returnv	of elements ||| ary	count=2
function	the cross-references in ||| crossref	count=1
function_arg	[function_1] uri ||| [arg_2] [function_1]	count=2
function	by cwd/cdup ||| enterable	count=1
function	relative path ||| relative path	count=2
module	for use by ||| rdoc generator	count=1
arg	[arg] given object ||| obj) [arg]	count=2
module	restricting ||| gem	count=1
function	rename ||| rename	count=1
arg	in yaml ||| yaml	count=1
module	multiple rdoc :markup ||| rdoc	count=1
function	[function] default context ||| [function] extend	count=1
function	[function_1] extra args ||| [function_1] [function_2]	count=3
module	block form for restricting ||| requestset gemdependencyapi	count=1
arg	[arg_1] add ||| [arg_2] [arg_1]	count=3
arg	given string as ||| string	count=1
module	have ||| gem	count=1
arg	given [arg] and ||| [arg] stdin	count=1
arg	the given key in ||| key	count=1
arg	object or eruby file ||| erb_or_fname	count=1
function_arg	class named ||| class class_type	count=1
returnv	self ||| ary	count=4
module	parse ||| psych parser	count=1
module	the other parameters provided ||| drbsslsocket	count=1
function	generation ||| accepting	count=2
arg	running ||| env command... options	count=1
function	from ||| accept	count=1
arg	character [arg] back ||| [arg]	count=1
arg	to arg ||| arg	count=2
function_arg	[function_1] [arg_2] column while parsing ||| [function_1] message column [arg_2]	count=1
function_arg	[function_1] filename and ||| [function_1] file [arg_2]	count=1
arg	given name called with ||| name	count=1
function	be appended on completion ||| completion	count=1
module	file lists ||| specification	count=1
module	use [module] generator output ||| [module]	count=1
arg	of tags for an ||| start stop	count=1
arg	[arg_1] length ||| [arg_2] [arg_1]	count=2
arg	names in methods ||| methods singleton	count=1
function	returns the length ||| doc stats	count=1
returnv	proc to ||| proc	count=1
module	this ||| gem	count=7
function	returns a json string ||| to json	count=4
module	file component and ||| file	count=1
module	format of [module] and ||| [module]	count=1
function_arg	[function_1] code ||| [arg_2] [function_1]	count=4
function	adds tts from ||| accept	count=1
function	extracts parameters from ||| rb scan args	count=2
returnv	string that contains ||| string	count=1
function	list ||| module list	count=2
module	possible matching specifications ||| gem resolver molinillo specificationprovider	count=1
function	dereferenced ||| ptr	count=1
module	feed ||| atom feed	count=2
function	a new [function_2] ||| [function_1] [function_2]	count=4
module	of bytes ||| sslsocket	count=1
module	command along with ||| imap	count=1
function	or that ||| setup	count=1
function	is valid and false ||| valid civil	count=1
function	transpose ||| transpose	count=1
function	index of the supplied ||| index	count=1
arg	the given options ||| args	count=1
arg	[arg_1] from the ||| [arg_2] [arg_1]	count=2
module	of files so that ||| gem specification	count=1
function	or separated named) and ||| class or module	count=1
function_arg	parses src ||| parse src	count=1
function	calculate the necessary ||| ctypes	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ? new [arg_2]	count=1
module	sets the net :http#read_timeout ||| xmlrpc	count=1
module	or ||| stat	count=1
arg	tk [arg_2] ||| [arg_2] [arg_1]	count=8
arg	[arg_1] file_name ||| [arg_1] [arg_2]	count=1
function	alone ||| with	count=1
module	:method or rdoc ||| rdoc parser ruby	count=1
function	makefile ||| create makefile	count=1
module	a bitmask to allow ||| markup tohtmlsnippet	count=2
returnv	call ||| array	count=1
module	call ||| formattertestcase	count=1
function	module ||| extension modules	count=1
function	copy of the method ||| method	count=1
module	specifications that ||| molinillo specificationprovider	count=1
function	for which the block ||| if	count=1
function	called name of ||| callee	count=1
module	set as ||| parent	count=1
module	will ||| generator darkfish	count=2
module	are ||| ssl sslsocket	count=2
arg	:dependency dep a from_name ||| dep from_name	count=1
function	a temporary directory with ||| create tmpdir	count=1
function	abbreviate the spec ||| abbreviate	count=1
module	in if they don’t ||| generator	count=1
module	number of ||| ssl	count=1
function_arg	[function_1] [arg_2] ||| [function_1] old_name [arg_2]	count=12
module	file and [module] ||| [module] parser	count=2
arg	dep in this ||| dep	count=1
function	[function_1] private ||| [function_1] [function_2]	count=2
function	object which [function] ||| [function]	count=1
arg	reads maxlen bytes from ||| maxlen outbuf	count=1
module	–version option ||| versionoption	count=1
module	that buffer ||| zlib zstream	count=1
module	used by rdoc ||| rdoc	count=1
function	label list items ||| list	count=1
function_arg	response as [arg_2] ||| [function_1] [arg_2]	count=2
module	namespace [module] ||| [module]	count=1
function	the valid ip addresses ||| set valid ip	count=1
function_arg	ensure the [arg_2] ||| [arg_2] [function_1]	count=3
function	a get request to ||| request get	count=1
function	sequence is ||| sequence	count=1
arg	subclass [arg] that ||| [arg]	count=1
function	[function_1] from the ||| [function_1] [function_2]	count=4
module	1 rdoc :markup ||| rdoc markup	count=1
module	off by :enddoc ||| rdoc	count=1
arg	given [arg] ||| [arg] stdin	count=1
function	:http#read_timeout ||| timeout=	count=1
module	the mailbox ||| net imap	count=1
function	given block once for ||| if	count=1
function	hash consisting ||| hash	count=1
module	emission with yaml ||| psych emitter	count=1
function	located [function_2] ||| [function_2] line [function_1]	count=2
function	scope ||| set scope	count=1
arg	::capture3 captures the standard ||| stdin_data: '' binmode: false	count=1
function	decode a ||| decode	count=1
function_arg	[function_1] classes also_in ||| [function_1] out [arg_2]	count=2
module	for ||| gem	count=21
function	a development dependency? ||| development	count=1
arg	[arg] name from ||| [arg]	count=3
arg	given string or string-like ||| p1	count=1
module	database for which block ||| gdbm	count=1
function	last item in the ||| last	count=1
module	visitor for ||| rdoc markup totableofcontents	count=1
arg	path if possible ||| path	count=1
function	return a progress ||| progress	count=1
function_arg	[function_1] port ||| socket [function_1] loop [arg_2]	count=2
arg	similarly to kernel#load ||| fn priv	count=1
arg	in other_str ||| other_str	count=1
function	description for ||| description	count=2
function	[function_1] of ruby ||| [function_2] api [function_1]	count=1
module	[module] :notifier :abstractnotifier ||| [module] notifier	count=3
function	adds paths for undocumented ||| add also	count=1
module	which an rdoc ||| rdoc	count=1
returnv	following are true ||| bool	count=1
returnv	the string representation ||| string	count=1
function_arg	a patch [arg_2] ||| [function_1] [arg_2]	count=1
function	for reading ||| pending	count=1
function	[returnv_1] [function_2] ||| [returnv_1] sid available [function_2]	count=8
function	row ||| row !	count=1
function	[function] gdbm ||| [function]	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=12
arg	up to [arg_2] ||| [arg_2] [arg_1]	count=4
module	eql? to another version ||| gem version	count=1
module	be set as the ||| parent	count=1
function	been provided ||| setup	count=1
function_arg	text [arg_2] ||| [function_1] [arg_2]	count=1
module	tuplebag ||| tuplebag	count=2
function	can then ||| dir	count=1
module	create a drb ||| drb	count=1
module	cgi ||| cgi	count=6
module	http ||| net http	count=4
function	[function_1] methods ||| [function_2] [function_1]	count=24
returnv	an array of the ||| array	count=1
module	documentation has been ||| rdoc	count=1
arg	seed to set ||| seed	count=1
module	:sslcertificate and :sslprivatekey have ||| drb drbsslsocket sslconfig	count=1
function_arg	heading [arg_2] ||| [function_1] [arg_2]	count=1
function	sets the [function_2] ||| [function_1] [function_2]	count=4
arg	function mapped [arg] that was ||| [arg]	count=1
arg	of the given name ||| name	count=3
arg	user cpu time cstime ||| cstime	count=1
module	obj on ||| object	count=1
module	visitor for ||| rdoc markup tottonly	count=1
module	the [module] value ||| [module]	count=1
module	waits if ||| mutex	count=1
function	to ||| config	count=1
function_arg	extension [arg_2] ||| [function_1] ? [arg_2]	count=2
function_arg	the dependency [arg_2] ||| [arg_2] [function_1]	count=2
arg	which is localhost by ||| maxconnections stdlog audit debug a	count=1
function	struct with the value ||| create value	count=1
returnv	a hash-code for this ||| fixnum	count=1
module	with no arguments ||| module	count=1
function_arg	scalar with [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] spec ||| [function_1] ? requirement activated [arg_2]	count=2
function	reads ||| read	count=5
arg	#auth_type ||| reload_db	count=1
function	returns true if ||| bool tuesday ?	count=1
module	#max_nesting ||| ext generator	count=1
function	returns the currently executing ||| current	count=1
module	rdoc :generator :jsonindex to ||| rdoc methodattr	count=1
module	prepares the visitor for ||| tottonly	count=1
module	bytes that are ||| sslsocket	count=1
function	[returnv_1] named method ||| [returnv_1] [function_2]	count=1
function	json string ||| to json	count=1
module	a constant ||| constant	count=1
function	of the [function_2] ||| [returnv_1] [function_2]	count=1
arg	passed in data ||| data	count=1
function	[function_1] json string ||| fixnum [function_1] [function_2]	count=1
function	of time the ||| time	count=1
function	global [function_2] ||| [function_1] [function_2]	count=1
module	dependency [module] ||| [module]	count=2
module	mode ||| io	count=1
function	symlink? ||| symlink	count=1
module	in ||| generator	count=1
function_arg	[function_1] src ||| [function_1] [arg_2]	count=4
function	[function_1] address obtained ||| [function_1] [function_2]	count=1
function	size of memory ||| malloc allocated size	count=2
function	[function] address ||| to [function]	count=1
function	various ||| dir	count=1
function	unsigned ||| create	count=1
returnv	of the original string ||| string	count=2
arg	responds to ||| symbol include_all	count=1
returnv	in a ||| string	count=1
function	the [function] ||| [function] key	count=1
function_arg	deserializes [function_1] [arg_2] values v serialized by ||| [function_1] [arg_2]	count=2
returnv	no ||| self	count=1
function	[function_1] [function_2] ||| [function_2] allocations [function_1]	count=1
function	accept_heading_b with ||| b	count=1
arg	port on ||| port	count=1
module	representation for this ||| generator generatormethods	count=2
function	[function_1] a spec ||| [function_1] [function_2]	count=1
function	name ||| each resource	count=1
function	set ||| set	count=9
function	adds a development ||| add development	count=2
arg	at [arg] ||| generator_name [arg]	count=1
function	up a module ||| module	count=1
function	non-blocking manner ||| accept nonblock	count=1
module	this tms object as ||| benchmark tms	count=1
function	there ||| has	count=4
module	file ||| gem specification	count=1
module	time zone ||| time	count=1
module	canonicalized absolute ||| kernel	count=1
arg	with the given keys ||| key	count=1
module	rdoc :markup :heading ||| rdoc	count=1
function	sets [function_2] ||| [function_2] [function_1]	count=11
returnv	date ||| datetime	count=1
module	generated docs ||| darkfish	count=1
function	main [function] of the ||| switch [function]	count=1
function	[function_1] rounding mode ||| [function_2] [function_1]	count=2
function	valid and ||| valid civil	count=1
function	the encoding ||| external encoding	count=2
arg	+@fetcher+ serving the data ||| repo	count=1
module	the process to ||| gem	count=1
function	[returnv_1] [function_2] ||| [returnv_1] ascii only [function_2]	count=4
function	total ||| total out	count=1
arg	erb contained in file_name ||| file_name	count=1
function	a pipeline ||| pipeline r	count=2
arg	year [arg_2] ||| [arg_1] [arg_2]	count=7
module	of generators and ||| options	count=1
function	the concatenated ||| collect concat	count=1
module	installs [module] ||| gem [module]	count=1
function	that decode ||| decode all	count=1
module	dependency ||| resolver	count=1
function	output progress information ||| debug msg	count=1
function	running or sleeping ||| alive	count=1
module	this list ||| list	count=1
module	of generators ||| options	count=1
arg	[arg_1] and style ||| [arg_2] [arg_1]	count=4
function	get a constant ||| get constant	count=2
module	sources in this sourcelist ||| gem sourcelist	count=1
module	:return or ||| localjumperror	count=1
module	pair from [module] and ||| [module]	count=1
function	true for ipv6 ||| bool ipv6	count=8
function	stream and ||| stream	count=1
module	this gem ||| gem	count=3
function_arg	options request [arg_2] ||| [function_1] [arg_2]	count=1
module	to grab the ||| mutex	count=1
function	[returnv_1] the result ||| [function_2] [returnv_1]	count=1
module	net :http#open_timeout to ||| xmlrpc client	count=1
function	and false if not ||| ?	count=3
function	returns the line number ||| lineno	count=1
function_arg	map with [arg_2] ||| [arg_2] [function_1]	count=8
function	been turned ||| start	count=1
arg	in s ||| s	count=1
module	from ||| rdoc markup tottonly	count=2
function	no handler ||| set default handler	count=1
arg	description in path ||| path	count=1
arg	[arg_1] addr address ||| [arg_1] [arg_2]	count=1
function	with a prefix call ||| pre proc	count=1
module	bytes ||| openssl ssl	count=1
module	documentation has ||| rdoc	count=1
arg	class_name ||| class_name	count=2
module	that cert signature ||| x509	count=1
module	each union member with ||| fiddle cunionentity	count=1
arg	a [arg] or a ||| [arg] options	count=1
function_arg	gem :specification spec ||| gem spec options	count=1
module	[module] be ||| gem [module]	count=1
arg	class klass cunion ||| klass	count=1
function	http request ||| request	count=1
function	register ||| register	count=1
module	constructs a version from ||| gem	count=1
module	environment variable with value ||| env	count=1
arg	return ||| proc options	count=1
function	[returnv_1] resets ||| [returnv_1] [function_2]	count=1
function	output [function_2] ||| [function_2] [function_1]	count=1
arg	directory root options ||| root options	count=1
function	of ipv4 mapped/compatible ||| to ipv4	count=2
arg	with the given file ||| file	count=1
module	a rdoc :markup ||| rdoc markup	count=2
module	date/time component ||| xmlrpc datetime	count=5
arg	date this gem ||| date	count=1
module	for the feed or ||| rss atom feed	count=1
function	an error ||| error	count=5
function	spec ||| spec	count=4
function	[returnv_1] named method ||| [function_2] [returnv_1]	count=1
function	of dependencies that are ||| dependencies	count=1
arg	to [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	relative to [arg_2] ||| [arg_2] [function_1]	count=1
arg	to copy(), but set ||| set	count=1
module	already exist ||| rdoc generator darkfish	count=1
returnv	:next :return ||| symbol	count=1
arg	component [arg] ||| user [arg]	count=3
function	satisfies ||| satisfied by	count=1
arg	[arg_1] items ||| [arg_2] [arg_1]	count=1
module	be csv ||| csv	count=1
function	if the operating system ||| ?	count=7
arg	creates the scripts to ||| filename bindir	count=1
module	the ||| openssl ssl	count=1
function	digest ||| digest	count=1
function	[function_1] [function_2] ||| [function_1] plain [function_2]	count=1
module	to query if they ||| rdoc	count=1
function	set ||| set visibility	count=1
function_arg	and body [arg_2] ||| [function_1] [arg_2]	count=1
module	object if ||| drb	count=1
function	parsed elements ||| iso8601	count=1
arg	of values as a ||| values	count=1
function	for which the given ||| reject	count=1
arg	the given ||| args	count=1
arg	of tags for ||| start stop	count=1
function	list of paths matching ||| find	count=1
arg	key-value-pair with [arg] ||| [arg]	count=1
function	[function_1] consistency ||| [function_2] [function_1]	count=2
rep	the [module_1] [function_arg_2] ||| [module_1] change [function_arg_2]	count=1
arg	the uri tag_name ||| uri tag_name	count=2
function	as arguments then recursively ||| find	count=1
function	of paths matching ||| find	count=1
module	if the [module] key ||| [module]	count=1
module	creates a [module] ||| [module]	count=3
arg	[arg_1] column_count ||| [arg_2] [arg_1]	count=2
module	a [module] pick ||| [module]	count=1
arg	mod [arg_2] ||| [arg_2] [arg_1]	count=4
function	don’t ||| gen	count=1
function	an empty array ||| a	count=1
arg	signer is valid for ||| signer	count=1
module	or nil ||| stat	count=1
function	if whitespace ||| whitespace	count=1
module	:ldap object from generic ||| ldap	count=1
arg	proc or block on ||| proc &block;	count=1
module	to configure various ||| makemakefile	count=1
module	#max_nesting = 0 ||| ext generator	count=1
module	don’t already ||| rdoc generator	count=1
arg	descriptor as ||| mode perm	count=1
function	load a ruby ||| load	count=1
module	the given ||| userinteraction	count=1
arg	given sources ||| sources	count=1
arg	[arg_1] please have ||| [arg_1] [arg_2]	count=1
module	fragment [module] v ||| uri [module]	count=1
arg	[arg] comes ||| [arg]	count=3
function	old name with ||| old name	count=2
arg	a [arg] ||| [arg] cert_chain	count=2
function	splits the string ||| split	count=1
module	current process ||| process	count=2
returnv	between [returnv] ||| [returnv]	count=1
arg	name ends with “local” ||| name	count=1
function	list of ||| list	count=9
arg	[arg_1] and columns ||| [arg_2] [arg_1]	count=2
module	database with multiple ||| dbm	count=1
arg	with a ||| name	count=2
arg	of arguments by ||| args	count=1
function	returns true [function_2] ||| [returnv_1] utc [function_2]	count=3
function	show ||| s	count=1
module	this input method ||| irb readlineinputmethod	count=1
module	if this [module] is frozen ||| [module]	count=1
arg	the specified destination mailbox ||| mailbox	count=2
module	fiber resuming it ||| fiber	count=1
module	builds ||| gem installer	count=1
function	[function_1] constant to ||| [function_2] [function_1]	count=2
arg	elements in [arg_2] ||| [arg_2] [arg_1]	count=2
function	writes the yaml ||| write	count=1
module	to use for generating ||| xmlrpc parserwriterchoosemixin	count=1
module	returns a new hash ||| hash	count=1
arg	stores value v at ||| v	count=1
function	returns the password ||| password	count=1
function	file name ||| file name	count=4
function_arg	[function_1] [arg_2] ||| [function_1] ? [arg_2]	count=66
module	:mailto ||| mailto	count=2
function	the start of 1970 ||| make expires	count=1
function	objects ||| []	count=1
arg	exception while [arg_2] ||| [arg_2] [arg_1]	count=3
function	file ||| add file	count=1
arg	will activate spec ||| spec request others_possible	count=2
arg	requirement ||| requirement	count=1
function	copy the specified message ||| copy	count=1
module	types this ||| rdoc	count=1
module	the parsing of a ||| rdoc stats	count=2
function	the last [function_2] ||| [function_2] [function_1]	count=14
function	the library ||| find library	count=1
function	mkcol request to ||| mkcol	count=1
function	number of ||| size	count=2
module	by constructing new range ||| range	count=1
function	name of ||| name	count=7
arg	[arg] for ||| [arg]	count=3
module	returns ||| encoding invalidbytesequenceerror	count=1
function	close [function_2] ||| [function_2] [function_1]	count=3
function	spec can require ||| contains requirable	count=1
function	resets the digest in ||| reset	count=1
module	database associated with ||| yaml dbm	count=1
arg	keys in pairs with ||| pairs	count=1
function	attributes by name from ||| attribute by name	count=1
function_arg	[function_1] [arg_2] ||| [function_1] scan args [arg_2]	count=7
module	location of the ||| installer	count=1
function	extra data ||| binary extra data	count=1
function	scans content for ||| do define	count=1
function	of the gem file ||| gem	count=1
module	file lists ||| gem	count=1
module	command may be ||| net ftp mlsxentry	count=1
module	of ri data installed ||| ri	count=1
module	generator ||| generator	count=1
module	this object’s comment ||| markup	count=1
arg	given extensions ||| extensions serial	count=1
module	of the remote object ||| drbobject	count=1
arg	the timeout ||| timeout	count=1
module	the ‘:’ in json ||| json ext generator state	count=1
module	time see ||| time	count=1
function	canceled status ||| canceled ?	count=1
module	fiber can still be ||| fiber	count=1
arg	[arg] bind parameters ||| signature [arg]	count=3
module	have redundancies removed ||| gem	count=1
arg	[arg_1] in file1 ||| [arg_2] [arg_1]	count=3
module	an attlistdecl pulling ||| rexml attlistdecl	count=1
function	openssl :x509 :name ||| to name	count=1
function_arg	[function_1] [arg_2] date ||| [function_1] [arg_2]	count=3
module	class corresponding ||| webrick	count=1
module	the ||| gzipreader	count=2
function	win32ole_typelib ||| typelib	count=1
module	[module] same value ||| [module]	count=1
function_arg	object [arg_2] ||| [function_1] tag [arg_2]	count=2
function	description ||| reason phrase	count=1
module	modules included in obj ||| object	count=2
module	the number of bytes ||| openssl	count=1
arg	value or passes ||| value	count=1
module	peer ||| openssl ssl sslsocket	count=1
arg	dir ||| dir	count=3
returnv	with the ||| str	count=1
module	the ‘:’ in json ||| json ext	count=1
function	multicast link-local scope ||| mc linklocal ?	count=1
module	if the authentication ||| webrick httpauth	count=2
arg	res ||| res	count=6
module	signs this ocsp ||| openssl ocsp	count=1
module	creates [module] unnamed ||| [module]	count=1
function	removes the definition of ||| remove	count=1
function	[function_1] encoding ||| [function_2] [function_1]	count=3
function	executable by ||| executable	count=1
function	pair ||| pair	count=2
function	set ||| platform	count=1
arg	connects ||| helo user secret authtype	count=1
function_arg	[function_1] of name ||| [arg_2] [function_1]	count=6
module	length and ||| rdoc	count=1
module	and :sslprivatekey ||| drbsslsocket sslconfig	count=1
function	[function_1] parameters ||| [function_2] [function_1]	count=3
function	by using that name ||| config	count=1
function	adds ||| add status	count=1
arg	by parsing from [arg_1] [arg_2] according to some typical ||| [arg_2] [arg_1]	count=2
function	returns a [function_2] ||| ipaddr [function_1] [function_2]	count=1
module	the same specification ||| specification	count=1
arg	child1 this is either ||| child1 child2	count=1
function	generates the makefile ||| makefile	count=1
returnv	array of group ||| array	count=1
function	der encoding ||| der	count=1
module	use for generating ||| xmlrpc parserwriterchoosemixin	count=1
module	hax ||| gem testcase	count=2
function	an attribute is ||| attribute	count=1
module	download ||| verbosedownloadreporter	count=1
module	this method sends a ||| net	count=1
module	:drbobject given the reference ||| drbobject	count=1
arg	[arg_1] an array ||| vector elements [arg_2] [arg_1]	count=1
function	executable or if the ||| ?	count=1
arg	sets the contents ||| val	count=1
function_arg	[function_1] file_name ||| [arg_2] [function_1]	count=4
function	standard configuration object ||| configuration	count=1
module	handle a request ||| webrick	count=1
module	return the specification ||| resolver	count=1
module	mixin for ||| rdoc mixin	count=1
function	url to one ||| url	count=1
returnv	defined methods to ||| self	count=1
function_arg	returns [function_1] [arg_2] ||| sourcelist bool [function_1] [arg_2]	count=6
function	expect full paths in ||| full paths ?	count=1
function	if headers are ||| headers ?	count=2
module	set the [module] for ||| [module]	count=1
function	[returnv_1] [function_2] a ||| [returnv_1] gmt [function_2]	count=1
function	encodes ||| encode	count=1
function	sends a patch request ||| patch	count=1
function_arg	time from string ||| time string	count=2
arg	req to the ||| req	count=1
function	that [function_2] ||| [function_2] [function_1]	count=6
function	head ||| head	count=1
module	the [module] used ||| gem [module]	count=1
function	file with ||| file	count=1
module	from this section if ||| rdoc context section	count=1
returnv	array containing the ||| array	count=1
function	close [function_2] ||| [function_1] [function_2]	count=3
function	destination [function_2] ||| [function_2] [function_1]	count=2
arg	running the ||| command... options	count=1
module	object that ||| io	count=1
function	is [function] that ||| [function]	count=1
module	true ||| net smtp	count=5
module	gem for this specification ||| gem resolver	count=1
arg	[arg_1] generator_name ||| rdoc servlet asset [arg_2] [arg_1]	count=3
module	pretty printed ||| pp	count=1
function	all parameters of key ||| params	count=3
function	removes ifdefs that would ||| ifdefs	count=1
arg	of values as ||| values	count=1
module	lazy [module] ||| [module]	count=2
arg	[arg_1] in enclosing ||| [arg_2] [arg_1]	count=1
module	deflate stream ||| zlib deflate	count=3
arg	given extensions for the ||| extensions serial	count=1
arg	in the mailbox ||| mailbox	count=1
function	print ||| print	count=1
returnv	number of names ||| integer	count=2
module	of the ||| drb drbobject	count=2
function	:context of the ||| currentcontext	count=1
returnv	the signature is ||| bool	count=1
function	executable by the effective ||| executable	count=1
function_arg	or module [arg_2] ||| [function_1] [arg_2] self_hash	count=4
returnv	num returns an array ||| array	count=1
function	the object [function_2] ||| [returnv_1] [function_2]	count=6
module	field ||| csv row	count=2
module	git ||| requestset gemdependencyapi	count=1
function	this module ||| extension modules	count=1
module	returns a [module] instead ||| [module]	count=1
function	to create a new ||| new	count=1
function	the broadcast ||| broadaddr	count=1
function	calls verify to ||| verify	count=1
module	parser that ||| rdoc parser	count=1
arg	the members ||| members	count=1
function	[function_1] memory address ||| [function_1] [function_2]	count=1
rep	an [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	is passed ||| ?	count=2
function_arg	[function_1] host and ||| [function_1] [arg_2]	count=2
function	[function_1] development dependency? ||| [function_2] [function_1]	count=2
function	classes and ||| classes and	count=4
function	for the last ||| last	count=1
function	[function_1] [function_2] returned as a ||| [function_2] [function_1]	count=1
arg	gem [arg] ||| [arg]	count=3
function	ipv4 mapped/compatible ||| to ipv4	count=2
module	version from ||| version	count=1
function	defines a ||| attr accessor	count=1
arg	subject ||| subject	count=2
function_arg	leap [arg_2] ||| [arg_2] [function_1]	count=4
function	logger output error ||| error	count=1
module	module or class ||| module	count=1
function_arg	[function_1] for method_name ||| [arg_2] [function_1]	count=1
module	to identify the client ||| net	count=1
function_arg	a options [arg_2] ||| [arg_2] [function_1]	count=1
returnv	returns iseq ||| iseq	count=1
function	skip the ||| skip for variable	count=1
function	destination encoding name as ||| destination encoding name	count=1
arg	given set from ||| set api_data	count=1
function	adds a special ||| add special	count=6
function	parses ||| parse meta attr	count=2
arg	destination_buffer ||| destination_buffer	count=1
arg	to wrap ts ||| ts	count=1
module	c struct ||| fiddle cstructentity	count=2
module	to ||| gem requestset gemdependencyapi	count=2
module	of this file ||| rdoc toplevel	count=1
function	hex-encoded form keeping the ||| hexdigest	count=1
module	on the ||| makemakefile	count=1
module	:http#read_timeout and ||| xmlrpc	count=1
function	starts reading ||| hook	count=1
function	of time the supplied ||| time	count=1
function	for [function] ||| [function]	count=1
function	in place using ||| !	count=1
returnv	returns the interface ||| integer	count=1
arg	of bin ||| bin padding: true	count=1
module	file exists and has ||| file	count=1
arg	[arg_1] [arg_2] ||| [arg_1] buf [arg_2]	count=3
function	the parent ||| parent	count=1
function	unique local address ||| unique local ?	count=2
arg	adds tuple ||| tuple sec	count=1
function	invokes ||| map	count=1
arg	classes ||| classes	count=1
returnv	array containing backtrace ||| array	count=1
function	[function_1] special handler ||| [function_2] [function_1]	count=1
function	will live in ||| gen sub	count=1
function	the named constant to ||| const	count=1
module	parameters for this ||| openssl	count=1
function_arg	[function_1] [arg_2] of ||| integer [function_1] [arg_2]	count=7
arg	given begin and end ||| begin end exclude_end	count=1
function	returns a ||| to enum	count=1
module	configure ||| makemakefile	count=1
arg	parent ||| parent	count=2
module	adds tts ||| rdoc markup tottonly	count=1
function_arg	deserializes [function_1] [arg_2] values v serialized by ||| [function_1] create [arg_2]	count=2
function	a ||| create	count=1
function_arg	status of [arg_2] ||| [arg_2] [function_1]	count=2
returnv	as an array ||| array	count=2
arg	specified host ||| host options	count=1
function	exception object [function_2] ||| [returnv_1] [function_2]	count=1
arg	string ||| string	count=47
module	default [module] commands ||| [module]	count=1
module	this database ||| gdbm	count=2
module	a version from the ||| version	count=1
module	with ||| makemakefile	count=1
function	@param ||| new	count=1
arg	by symbol to ||| symbol obj	count=1
arg	[arg_1] for context ||| [arg_2] [arg_1]	count=2
function	the form rdoc-…: ||| rdoclink	count=1
function	pages [function_2] ||| [function_2] [function_1]	count=2
module	by rdoc :generator :jsonindex ||| rdoc methodattr	count=1
module	from ||| version	count=1
function	searches for the executable ||| find executable	count=1
function	[returnv_1] if ||| [returnv_1] member [function_2]	count=3
module	a lazy ||| lazy	count=1
function	iterates over all hostnames ||| each	count=1
function	[function_1] hash consisting ||| [function_1] [function_2]	count=1
module	and ||| drbsslsocket	count=1
module	in the feed ||| rss atom feed	count=1
module	if supplied ||| rexml parent	count=1
module	ringprovider that will ||| rinda ringprovider	count=1
module	unescapes ||| webrick httputils	count=1
function	an empty ||| a	count=1
function	constructor @param parent if ||| new	count=1
function	reply 3xx reply code ||| continue	count=1
module	of the peer ||| sslsocket	count=1
module	:break :redo :retry :next ||| localjumperror	count=1
arg	http query string into ||| query	count=1
function	[function_1] the data ||| [function_2] [function_1]	count=6
module	for gem ||| gem	count=1
arg	string or block ||| string filename	count=1
arg	[arg_1] string salt ||| [arg_1] [arg_2]	count=2
function	iterates over [function_2] ||| [function_1] [function_2]	count=5
function_arg	a new [arg_2] ||| [function_1] [arg_2]	count=6
arg	parses src and return ||| src	count=1
module	summary text ||| optionparser	count=1
module	the spec’s ||| installer	count=1
module	for this ||| rdoc	count=1
arg	[arg] so that ||| [arg]	count=2
arg	a string according ||| string 1 jan -4712 00:00:00 +0000'	count=2
function	password input element as ||| password field	count=1
function	[function_1] kind ||| [function_2] [function_1]	count=1
arg	specified object ||| obj	count=1
function	value associated ||| value	count=1
function	by [function_1] [function_2] ||| attributes [function_1] [function_2]	count=3
module	current working [module] of ||| [module]	count=3
module	of this ||| rexml parent	count=1
function	output generator for the ||| generator	count=1
function	at the specified index ||| at	count=1
module	this attribute eg puts ||| rexml attribute	count=1
function_arg	the files [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] at the ||| [function_1] [function_2] index	count=1
function	allow connections [function_2] ||| [function_2] [function_1]	count=1
module	the visitor for ||| tottonly	count=1
function	a list of ||| module list	count=1
function	ipv4 private ||| ipv4 private	count=1
function	tts from ||| block quote	count=1
module	binding’s ||| binding	count=2
module	have been provided or ||| sslconfig	count=1
arg	in ||| container tk	count=1
module	this ||| openssl x509	count=1
function	array containing [function] elements of ||| [function]	count=1
arg	for another sec seconds ||| sec	count=1
function	gem name ||| gem name	count=2
function	constant with the given ||| const	count=1
module	list of ||| rdoc	count=1
function	returns the bytes ||| bytes	count=1
arg	the given source_name ‘ruby’ ||| source_name	count=1
function	a new input method ||| new	count=1
module	redundancies ||| gem	count=1
module	:http#read_timeout and net ||| xmlrpc client	count=1
module	socket ||| basicsocket	count=3
module	a availableset as a ||| availableset	count=1
arg	determines ||| single	count=1
function	a [function] button ||| [function]	count=1
function	set ||| set visibility for	count=1
function	the total ||| total in	count=1
module	json ||| json ext	count=8
function	[returnv_1] if the ||| gdbm [returnv_1] value [function_2]	count=1
returnv	of this object ||| instance	count=1
arg	starts from offset ||| offset	count=1
module	file lists have ||| gem	count=1
function	! ||| !	count=1
function	for ||| accept list	count=4
arg	true if path ||| path	count=1
arg	self to other ||| other	count=1
module	openssl :x509 ||| gem security	count=1
arg	:smtp object and connects ||| port helo user secret authtype	count=1
module	this context’s top ||| rdoc context	count=1
arg	signatures ||| digests signatures	count=1
module	sequence ||| sequence	count=1
arg	string or ||| string filename	count=1
function	of iteration of ||| collect	count=1
module	[eigenvector_matrix #eigenvalue_matrix #eigenvector_matrix_inv] ||| matrix eigenvaluedecomposition	count=1
arg	of methods [arg_2] ||| [arg_2] [arg_1]	count=6
module	edge represents @return ||| resolver molinillo dependencygraph	count=1
arg	a numeric ||| numeric	count=2
function	inserts an child ||| insert	count=1
function	valid and false if ||| valid civil ?	count=1
module	this name ||| dns name	count=1
arg	file at local_path ||| server local_path	count=1
function	constructs a version ||| new	count=1
module	tuplespaceproxy to ||| tuplespaceproxy	count=1
arg	salt ||| salt	count=2
function	encoding of the ||| encoding	count=3
module	:sslprivatekey have been provided ||| sslconfig	count=1
function	the full path to ||| path	count=1
function	file ||| file	count=23
module	authorization header ||| httpheader	count=1
returnv	[returnv] for ||| [returnv]	count=3
module	clobber [module] task or ||| [module]	count=1
returnv	a two-element [returnv] of ||| [returnv]	count=1
function	if the mkd ||| makable ?	count=3
function	method of current ||| method	count=1
function	returns true [function_2] ||| [returnv_1] installable platform [function_2]	count=2
arg	mod in [arg_2] ||| [arg_1] class_type [arg_2]	count=3
module	of ||| pathname	count=1
function	to the rdoc ||| rdoc	count=1
function	valid and [function_2] ||| [function_2] [function_1]	count=2
function	of each [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] [arg_2] dependencyrequest ||| [function_1] dep from_name from_version [arg_2]	count=3
function	total ||| total in	count=1
returnv	of [returnv] ||| [returnv]	count=3
function_arg	scalar [arg_2] ||| [function_1] tag [arg_2]	count=2
function	[returnv_1] [function_2] ||| [returnv_1] specific [function_2]	count=4
module	gem dependencies ||| gem requestset	count=1
module	range false otherwise ||| range	count=1
function	that signal a break ||| word break	count=1
function	names ||| names	count=2
module	stor appe and ||| net ftp mlsxentry	count=1
function	returns true [function_2] ||| [returnv_1] grpowned [function_2]	count=4
function	inspection ||| inspect	count=2
function	status class corresponding to ||| []	count=1
module	creates an rdoc :attr ||| rdoc	count=3
arg	date this gem was ||| date	count=1
arg	storing top_level file_name ||| top_level file_name	count=2
function	greater than ||| >	count=2
arg	the given base_directory to ||| base_directory	count=1
function	returns a true if ||| defined ?	count=1
function	relative [function_2] ||| [function_2] [function_1]	count=3
arg	other_time ||| other_time	count=1
function	path of ||| path	count=1
function	[returnv_1] [function_2] to the ||| [returnv_1] [function_2]	count=2
module	the [module] see lupdecomposition ||| [module]	count=1
function	option to the option ||| option	count=2
function	3xx reply ||| continue ?	count=1
arg	[arg_1] and end ||| [arg_2] [arg_1]	count=4
function	escapes special sequences of ||| protected sequences	count=1
returnv	returns the number ||| integer	count=1
function	returns the tcpserver ||| to io	count=1
function_arg	file [arg_2] ||| [function_1] [arg_2]	count=11
module	the currently selected mailbox ||| net imap	count=1
module	object ||| arguable	count=1
arg	in path ||| path	count=2
function	the document ||| document	count=2
module	method sends a ||| net	count=1
function	[function] from the ||| [function]	count=5
function	[function_1] all tuples ||| [function_1] [function_2]	count=1
arg	src to [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg_1] pass ||| passwd [arg_1] [arg_2]	count=1
function	the content of ||| content	count=1
function	the root [function_2] ||| [function_1] [function_2]	count=4
module	the parser ||| parser ruby	count=1
function	object ||| drburi	count=1
function_arg	[function_1] of x ||| [function_1] [arg_2]	count=4
module	this ||| fiddle	count=2
function	a ||| config	count=1
function	[function_1] visitor tests ||| [function_1] [function_2]	count=1
returnv	polar ||| float	count=1
function	variables [function] hash ||| [function]	count=1
module	along ||| net	count=1
rep	[module_1] [function_arg_2] ||| [module_1] bigdecimal [function_arg_2]	count=12
module	sends an ||| net imap	count=1
module	resolver ||| gem resolver	count=2
function	be ||| new	count=1
function	[function_1] variables this ||| [function_1] [function_2]	count=1
function	[function_1] key pair ||| [function_2] [function_1]	count=2
function	adds the given object ||| add ?	count=1
function	number of undocumented ||| doc	count=1
arg	handler that opens library ||| library	count=1
function	the parameters and ||| method params and	count=2
function	form for restricting gems ||| platform	count=1
arg	opens the given path ||| path mode	count=1
arg	safe - ||| safe	count=1
module	cipher ||| openssl cipher	count=4
function	attempts authentication ||| auth only	count=2
function	the collection by ||| by	count=1
arg	args ||| args	count=4
function	of [function_2] ||| [function_1] [function_2]	count=1
arg	was unpacked at path ||| path	count=1
function	get the reference of ||| drbref	count=1
module	database indexed via ||| dbm	count=1
function	size of [function_2] ||| [function_2] allocated [function_1]	count=1
module	new ||| drb drbsslsocket sslconfig	count=2
function	[function_1] kind string ||| [function_2] [function_1]	count=1
module	third array ||| array	count=1
function	names set ||| set visibility for	count=1
arg	method_name [arg_2] ||| [arg_2] [arg_1]	count=2
module	was uninstalled when gem ||| gem	count=1
function	host to connect ||| host	count=1
function	displays documentation ||| documentation	count=1
arg	event ||| event tuple	count=1
arg	of meth ||| container single meth added_container	count=1
function	the protected [function_2] ||| [function_2] [function_1]	count=2
module	a gem ||| gem testcase	count=3
function	parent if supplied ||| new	count=1
rep	[module_1] symlink name ||| [module_1] add [function_arg_2]	count=1
function	generation ||| setup	count=2
arg	given spec ||| spec	count=1
module	prepares the visitor ||| rdoc markup tomarkdown	count=1
function_arg	power of ||| ** a	count=1
function	retrieves a value from ||| []	count=1
module	deprecate ||| gem	count=1
module	is checked ||| generator state	count=1
function	add to the ||| add	count=1
arg	for the [arg] component ||| [arg]	count=1
arg	:markup :document from found ||| found	count=1
function	load ||| load from	count=1
returnv	terminated :break :redo ||| symbol	count=1
module	[module] garbage ||| fiddle [module]	count=1
module	create ||| generator darkfish	count=2
module	construct a new gem ||| gem	count=1
function	sets the close ||| set close	count=2
module	of [module] will ||| [module]	count=1
function	unique ||| unique	count=4
returnv	control to another ||| obj	count=1
function	installs a [function_2] ||| [function_1] [function_2]	count=1
module	[module] specified by ||| [module]	count=1
arg	to a given path ||| path	count=1
function	[function_1] a paragraph ||| [function_1] [function_2]	count=2
arg	a set of platforms ||| platforms	count=1
module	union member ||| fiddle cunionentity	count=1
function	if local ||| local ?	count=2
arg	[arg_1] safe ||| [arg_1] [arg_2]	count=1
function	[function_1] false if ||| [function_2] [function_1]	count=2
function	anchor reference for linking ||| aref	count=1
function	uri ||| update path	count=1
function	and appends it onto ||| push	count=1
module	ri data ||| rdoc store	count=1
module	corresponding to the http ||| httpstatus	count=1
module	a markup ||| rdoc markup	count=1
arg	[arg_1] as usual ||| [arg_2] [arg_1]	count=3
module	multiplies the [module] by ||| [module]	count=1
arg	[arg_1] localfile to ||| [arg_2] [arg_1]	count=2
module	ri data for ||| rdoc store	count=1
module	finds ||| rdoc store	count=5
module	json to ||| json ext generator state	count=1
function	returns true [function_2] ||| [returnv_1] signaled [function_2]	count=4
module	set the authorization header ||| httpheader	count=1
function_arg	[function_1] values as ||| [function_1] [arg_2]	count=3
module	in the generated json ||| json	count=1
module	[module] returns false ||| [module]	count=1
module	inserts the given key-value ||| sdbm	count=1
arg	given in file_name which ||| file_name suffix	count=1
module	:sslprivatekey ||| drbsslsocket	count=1
returnv	array ||| array	count=24
module	a [module] to a ||| [module]	count=1
function_arg	content [arg_2] ||| [function_1] [arg_2]	count=2
module	of the remote object ||| drb drbobject	count=1
arg	[arg_1] evaluation order ||| [arg_1] [arg_2]	count=1
function	a line that holds ||| nl	count=1
function	the names ||| names	count=1
function	the table ||| table	count=1
module	from ||| gzipreader	count=1
function	insert a space ||| space	count=1
function	if the parent element ||| ?	count=1
module	gzipreader ||| zlib	count=1
function	the same seconds and ||| eql	count=1
arg	[arg_1] includes ||| [arg_1] [arg_2]	count=2
function_arg	[function_1] pages ||| [function_1] store [arg_2]	count=2
function	if ||| closed read ?	count=1
function	valid and false if ||| valid commercial ?	count=1
module	version string ||| version	count=1
function	inserts an [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] a suppressed ||| [function_1] [function_2]	count=1
function	the called name ||| callee	count=1
module	number of ||| openssl ssl sslsocket	count=1
arg	bits [arg_2] ||| [arg_2] length [arg_1]	count=2
module	for ||| ssl sslsocket	count=2
function	returns the value as ||| to	count=1
arg	to path if ||| path	count=1
arg	for pattern ||| pattern	count=1
function	hyperbolic cosine ||| cosh	count=1
function	formatted backtrace to the ||| backtrace	count=1
function	an openssl :x509 ||| email to name	count=1
function	and returns the status ||| status	count=1
function_arg	names [arg_2] ||| [function_1] [arg_2]	count=1
module	prime ||| prime	count=4
arg	file_name [arg_2] ||| [arg_2] [arg_1]	count=5
arg	source and return it ||| source proc	count=1
arg	[arg_1] block on ||| [arg_1] [arg_2]	count=2
arg	end of the mailbox ||| mailbox	count=1
module	objectid as defined ||| asn1 objectid	count=1
module	dh instance has ||| pkey dh	count=1
function	handler for a ||| default handler	count=1
function	[function_1] chain for ||| [function_1] [function_2]	count=1
module	path ||| pathname	count=2
returnv	terminated ||| symbol	count=1
module	command that waits for ||| imap	count=1
module	prepares ||| tomarkdown	count=1
function	of the local ||| local	count=1
returnv	get [returnv] ||| [returnv]	count=3
function	to verify the string ||| verify	count=1
module	create the ||| rdoc generator darkfish	count=1
module	up ||| rdoc	count=4
module	pass ||| rdoc ri	count=1
function	string-like parse the string ||| []	count=1
function	[function_1] the attribute ||| [function_2] [function_1]	count=2
function	full paths in ||| full paths ?	count=2
arg	in file_name which can ||| file_name	count=1
returnv	returns the encoding object ||| encoding	count=2
arg	user for ||| user	count=1
rep	log [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	of global [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] line ||| [function_2] [function_1]	count=2
function_arg	listener [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	ensure that [arg_2] ||| [arg_2] [function_1]	count=3
module	certificate and is ||| gem security	count=1
arg	the addresses option ||| addresses	count=1
function	of ||| doc	count=1
function	address ||| each name	count=1
function	added to the receiver ||| added	count=1
rep	template [function_arg_2] ||| [module_1] template [function_arg_2]	count=7
arg	found klasess ||| name found klasses	count=1
module	encodes this dsa to ||| pkey dsa	count=1
function	path to the ||| name path	count=1
function	the time zone used ||| zone	count=1
module	the comment ||| rexml comment	count=2
arg	stream of text ||| text	count=1
function_arg	contains the [arg_2] ||| [arg_2] [function_1]	count=6
function	[function] for the ||| to [function]	count=1
arg	object obj ||| obj	count=1
module	returns ||| rinda tupleentry	count=1
module	return the 2 dependency ||| gem resolver	count=1
function	enable capture of ||| doc	count=1
module	called by webrick ||| webrick	count=1
module	[module] are separated ||| [module]	count=2
module	whether the response received ||| response	count=2
function	line number where it ||| line	count=1
arg	to visibility ||| visibility singleton	count=1
function	received_nodoc true? ||| documented	count=1
function	the transpose ||| transpose	count=1
arg	given calendar date ||| year month mday	count=1
function	initialized with [function] processed ||| [function]	count=1
function	[function_1] [function_2] ||| objectspace [function_1] [function_2]	count=2
module	came from ||| dependencyinstaller	count=1
function	display a warning ||| alert warning	count=1
function	in addrinfo [function] ||| [function]	count=1
module	list ||| rdoc options	count=2
returnv	a rational ||| rational	count=2
arg	enables ||| enable	count=1
function	discarded ||| error	count=1
arg	methods matching name ||| name	count=1
module	retrieves a password from ||| webrick httpauth htpasswd	count=1
function	begins with a slash ||| relative	count=1
arg	content options [arg_2] ||| [arg_2] [arg_1]	count=2
arg	associated [arg] keys ||| [arg]	count=1
module	any arguments specified ||| object	count=1
function	and number ||| doc	count=1
function	::double_fig class method returns ||| double fig	count=1
function	allocations ||| allocations start	count=1
module	class class ||| singleclass	count=1
arg	status code ||| code	count=1
arg	so that [arg] ||| [arg]	count=1
arg	in [arg_1] [arg_2] ||| passwd [arg_1] user [arg_2]	count=2
function	full name ||| full name	count=2
function	to the ||| quote	count=1
function	the names of the ||| names	count=1
function_arg	calls verify [arg_2] ||| [function_1] spec [arg_2]	count=1
arg	[arg_1] value val ||| [arg_2] [arg_1]	count=1
function	modules discovered by ||| modules	count=4
module	file s to ||| file	count=1
module	unless documentation has been ||| rdoc codeobject	count=1
arg	the directives are allowed ||| allowed	count=1
function	configure various “with” options ||| dir config	count=1
function	convert self to utf-8 ||| toutf8	count=1
function	[function_1] memory ||| [function_2] allocated [function_1]	count=3
module	to the store ||| store	count=1
module	to wrap ||| importer	count=2
module	the tempdir unless the ||| gem testcase	count=1
module	response ||| httpresponse	count=1
module	off by :enddoc ||| rdoc codeobject	count=1
function	nonce validity ||| nonce	count=1
function	in the ||| in	count=1
module	of the list and ||| optionparser list	count=1
module	restricting gems ||| gemdependencyapi	count=1
module	parameters ||| sslconfig	count=1
function	sources ||| sources	count=1
arg	to var_name ||| var_name	count=1
function	by result of ||| by	count=1
rep	[module_1] [function_arg_2] ||| digest [module_1] [function_arg_2]	count=16
module	the ||| parent	count=1
function	struct ||| have struct	count=1
returnv	as a time ||| time	count=1
function	initial length ||| initial	count=1
function	option ||| version option	count=2
function_arg	ensure the [arg_2] ||| [function_1] default gem subdirectories [arg_2]	count=3
arg	invoked whenever [arg] current ||| [arg]	count=1
function	[function] clobber rdoc ||| clobber task [function]	count=1
function	set the visibility ||| set visibility	count=1
function	[function] bytes ||| [function]	count=4
function	line in ||| get line	count=1
module	use a availableset ||| availableset	count=1
module	exist ||| generator	count=1
module	section ||| context section	count=1
arg	information about ole method ||| ole_type method	count=1
arg	in io [arg_2] ||| [arg_1] [arg_2]	count=1
module	spec for downloading ||| specification	count=1
module	unless documentation has ||| rdoc codeobject	count=1
function	returns true if ||| bool iterator ?	count=1
module	writes the [module] to $stdout ||| [module]	count=1
function_arg	[function_1] path ||| [function_1] pattern [arg_2]	count=2
module	for this pointer ||| pointer	count=2
function	data ||| data	count=8
function	[function] instead ||| process based [function]	count=1
arg	given and [arg] given ||| obj) [arg]	count=1
module	if the [module] key false ||| [module]	count=1
function	::capture2e ||| capture2e	count=1
function_arg	paths [arg_2] ||| [function_1] [arg_2]	count=1
arg	name is found along ||| name	count=1
arg	spec in ||| spec	count=1
arg	size bytes ||| size	count=1
module	authoritative instance ||| gem commandmanager	count=1
module	status ||| status	count=3
function	variable kind ||| variable kind	count=2
function	been turned off ||| start	count=1
function	spec and ||| spec by	count=1
module	keep_files ||| gem	count=1
arg	[arg_1] path ||| [arg_1] [arg_2]	count=1
module	line by using that ||| makemakefile	count=1
function	human-readable form ||| inspect	count=1
module	the last component of ||| pathname	count=1
arg	+event+s that match tuple ||| tuple expires	count=1
function	[function_1] satisfied ||| [function_2] by [function_1]	count=1
module	returns the ||| rdoc stats	count=1
function	a get request to ||| get	count=1
arg	object passed in data ||| data options	count=1
function	suppressed [function_2] ||| [function_2] [function_1]	count=1
function_arg	stream a [arg_2] ||| [function_1] [arg_2]	count=1
arg	passing args ||| args	count=2
function_arg	update the [arg_2] ||| [function_1] output dir [arg_2]	count=3
function	[function_1] the line ||| [function_1] [function_2]	count=1
function_arg	[function_1] other according ||| [arg_2] [function_1]	count=1
module	win32ole_type object and ||| win32ole_type	count=1
function	command line ||| config	count=1
module	by :enddoc ||| rdoc	count=1
function	field instead of ||| field	count=1
arg	in the given ||| code_object	count=1
arg	serves the asset at [arg_1] [arg_2] via ||| [arg_2] [arg_1]	count=1
arg	directory root ||| root	count=1
module	stou stor ||| ftp mlsxentry	count=1
function	create the directories the ||| sub directories	count=1
module	pass output ||| rdoc	count=1
function_arg	adds aproc [function_1] [arg_2] destroyed ||| [function_1] [arg_2] aproc	count=2
function	with one ||| with	count=1
function	is implemented by ||| implemented ole types	count=1
module	as row access ||| csv	count=1
arg	value by the ||| value	count=1
arg	element n ||| n	count=1
returnv	with a server ||| self	count=1
arg	sources ||| sources	count=1
module	parsing ||| rdoc stats	count=12
module	or ||| localjumperror	count=1
arg	::capture3 captures ||| cmd stdin_data: '' binmode: false	count=1
function	[function_1] with an ||| [function_2] [function_1]	count=3
function	specify the encoding ||| encoding	count=1
arg	[arg] that ||| [arg]	count=1
function	constructs a ||| new	count=1
returnv	of ||| instance	count=1
function	error ||| error	count=8
function	but preserve the rounding ||| save rounding	count=1
function	close and [function] the session’s ||| [function]	count=1
arg	command exists [arg_2] ||| [arg_2] [arg_1]	count=2
module	hax todo deprecate ||| gem testcase	count=1
module	generated ||| darkfish	count=1
function	[function] attribute ||| [function]	count=2
returnv	hash of parsed ||| hash	count=1
arg	[arg_1] columns ||| [arg_2] [arg_1]	count=2
module	[module] of the ||| gem resolver molinillo [module]	count=3
arg	subset ||| refname mailbox	count=1
module	and certificate chain is ||| security	count=1
module	don’t ||| rdoc generator	count=1
arg	to io ||| io options	count=2
arg	options [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] file ||| [function_2] [function_1]	count=11
function	appropriate [function] ||| [function]	count=1
module	command to identify the ||| net imap	count=1
module	in if ||| rdoc	count=1
arg	the given ||| key	count=3
function_arg	define [function_1] [arg_2] ||| tkoptiondb [function_1] class [arg_2]	count=2
function	are equal ||| eql	count=2
module	prefetch ||| resolver set	count=1
arg	to path if ||| path update	count=1
function	the environment ||| env	count=1
function	is passed argument ||| number ?	count=1
module	this codeobject is ||| codeobject	count=1
function	methods ||| methods	count=15
module	resolv :hosts using ||| resolv hosts	count=1
function	[function_1] platform ||| [function_1] [function_2]	count=2
function	dividing fix by ||| div	count=1
arg	localfile to the server ||| localfile	count=2
function	the directory of the ||| dir	count=1
function	[returnv_1] decryption ||| [returnv_1] [function_2]	count=1
function	unescapes [function_2] ||| [function_1] [function_2]	count=3
module	prepares the visitor for ||| totableofcontents	count=1
arg	other following edges ||| other	count=1
arg	passes args ||| args &block;	count=2
function	file for ||| file	count=1
function	pages to [function_2] ||| [function_2] [function_1]	count=2
function	3xx ||| continue ?	count=1
function	returns a new ||| select	count=1
function	system ||| secure	count=1
function_arg	the text for ||| text bin_file_name	count=1
function	[function_1] at the ||| [function_2] [function_1]	count=1
module	been ||| rdoc codeobject	count=2
module	header fields and a ||| httpheader	count=1
function	the default sources ||| default sources	count=2
module	runs this list and ||| list	count=1
function_arg	warning [arg_2] ||| [arg_2] [function_1]	count=1
returnv	the integer ||| integer	count=1
arg	host [arg_2] ||| [arg_1] [arg_2]	count=5
function	space before ||| space before	count=1
function	the spec file ||| spec file	count=2
function_arg	executable [arg_2] ||| [function_1] [arg_2]	count=3
function	server advertises [function_2] ||| [function_1] login [function_2]	count=1
module	bigdecimal numbers ||| bigdecimal	count=1
arg	to address port and ||| address port	count=1
arg	the given representation of ||| string comp start	count=2
module	a ||| prettyprint	count=1
arg	in data ||| data	count=1
module	vector with ||| vector	count=1
module	stream ||| openssl buffering	count=7
function	returns the successor ||| next	count=1
arg	:dependency dep [arg_2] ||| [arg_1] [arg_2] from_version	count=1
returnv	:noreason ||| symbol	count=1
module	the last row ||| zlib	count=1
function	the value ||| value	count=3
function	return internal [function_2] ||| [function_1] [function_2]	count=2
returnv	returning the number ||| integer	count=1
arg	each specification in specs ||| specs	count=1
module	adds ||| ri driver	count=1
module	rdoc driver to ||| rdoc rdoc	count=1
module	the remote object ||| drbobject	count=1
module	new string ||| string	count=4
function	from a serialized ||| marshal load	count=1
arg	isapop is true ||| isapop	count=1
function	of a class ||| add class	count=1
function	create a list of ||| list	count=1
module	will handle a request ||| webrick	count=1
function_arg	the given [arg_2] ||| [function_1] ? [arg_2]	count=3
function	determined from the environment ||| from env	count=1
function	seed value used to ||| seed	count=1
function	returns the headers ||| headers	count=2
module	name and ||| x509 name	count=1
arg	of address ||| address	count=1
module	converting the [module] data ||| [module]	count=1
function	is [function] others ||| world [function]	count=2
function	[function] with ||| [function]	count=1
function_arg	[function_1] if you ||| [arg_2] [function_1]	count=6
module	canonicalized absolute path ||| kernel	count=1
arg	and raises exception ||| exception	count=1
function_arg	for class name ||| class out name	count=1
function_arg	[function_1] file ||| [function_1] [arg_2]	count=7
module	or ||| drb drbsslsocket	count=1
function	define [function] in ||| [function]	count=1
module	response received was a ||| net smtp response	count=2
module	this method sends ||| smtp	count=1
arg	the other_str ||| other_str	count=1
function	the lock and waits ||| lock	count=1
function	superset ||| superset	count=1
arg	echo object [arg] ||| [arg]	count=1
function	escapes special sequences ||| mask protected sequences	count=1
function	[returnv_1] destination ||| [returnv_1] [function_2]	count=1
function	the next ||| next	count=4
arg	[arg_1] [arg_2] instance variables ||| [arg_1] [arg_2]	count=22
function	return true [function_2] ||| [function_2] [returnv_1]	count=6
module	parse the [module] document ||| [module]	count=1
function_arg	[function_1] in io ||| [arg_2] [function_1]	count=1
module	first digit of the ||| smtp response	count=1
function	less than 0 ||| negative	count=2
module	certificate and is ||| gem security policy	count=1
arg	context of ||| context statements file line	count=1
function	commands as a pipeline ||| pipeline r	count=1
arg	the types ||| types func	count=1
function	[function_1] stream and ||| [function_2] [function_1]	count=2
function_arg	[function_1] klass ||| [function_1] [arg_2]	count=3
function	a thread-local [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] header ||| [arg_2] [function_1]	count=3
arg	a given path ||| path	count=1
function	loads [function_2] ||| irbloader [function_1] [function_2] path priv	count=2
function_arg	http [arg_2] ||| [arg_2] [function_1]	count=1
function	define [function_2] ||| [function_1] instance [function_2]	count=1
module	such namespace [module] element ||| [module]	count=1
arg	options from ||| options	count=1
module	process id ||| process	count=1
module	json ||| json ext generator state	count=8
arg	according to locking_constant ||| locking_constant	count=1
function	script being executed ||| argv0	count=1
function	default [function] see ||| bundled [function] ruby	count=1
arg	begin [arg_2] ||| [arg_2] [arg_1]	count=2
function	seconds since ||| f	count=1
module	this ||| parent	count=1
module	this class or module ||| rdoc classmodule	count=1
function	t_data ||| tdata	count=1
module	of bytes that ||| openssl	count=1
module	about the parser ||| parser ruby	count=1
function	are true [function_2] ||| [function_2] [returnv_1]	count=1
function	[returnv_1] if ||| [returnv_1] ascii only [function_2]	count=1
module	instance has ||| pkey	count=1
function	an array of ||| a	count=2
function	by using that ||| dir config	count=1
function	“with” ||| config	count=1
arg	character to encoding ||| encoding	count=1
function_arg	gem [arg_2] ||| [arg_2] [function_1]	count=6
returnv	a time ||| time	count=1
module	return a parser that ||| parser	count=1
arg	:specification spec ||| spec	count=2
function_arg	[function_1] line ||| [function_1] message column [arg_2]	count=1
arg	of the mailbox ||| mailbox	count=2
function	readable when ||| readable	count=2
function_arg	size to [arg_2] ||| [arg_2] [function_1]	count=3
function	removes ifdefs ||| ifdefs in	count=1
module	process to its original ||| gem testcase	count=1
module	class class myclassname ||| normalclass	count=1
function	heading to ||| heading	count=1
returnv	its ||| float	count=1
function	returns the result ||| integer verify result	count=2
module	comment ||| rexml comment	count=2
module	tuple ||| rinda tupleentry	count=1
module	valid json ||| json ext	count=1
function	returns the po entry ||| to	count=1
module	sessions ||| jobmanager	count=2
module	tuplespace to check ||| rinda	count=1
arg	named files ||| file_name	count=1
module	the oldest ||| resolver requirementlist	count=1
arg	string ||| string 1 jan	count=2
function	[returnv_1] if the ||| [returnv_1] stream [function_2]	count=1
function_arg	the gem [arg_2] ||| [function_1] subdirectories [arg_2]	count=1
module	yaml sequence ||| psych nodes sequence	count=1
module	and number of ||| rdoc stats	count=1
arg	enables the given extensions ||| extensions debug	count=1
arg	connects to ||| helo user secret authtype	count=1
arg	field ||| field	count=2
function	dead or sleeping ||| stop	count=1
arg	gives it to the ||| from_addr to_addrs	count=1
function	nan infinity ||| nan	count=1
module	druby reference ||| drb drbserver	count=1
arg	[arg_1] signing_key ||| [arg_1] [arg_2]	count=2
module	gem at path ||| gem	count=1
function	[function] the ||| relative [function]	count=3
function	off ||| start	count=1
function	angle part of its ||| angle	count=1
function	defined methods to public ||| public	count=1
arg	:irb ||| file main	count=1
module	that will write ||| gem	count=1
module	[module] numbers ||| [module]	count=1
function	record for the ||| record	count=1
function	trace request to the ||| trace	count=1
function	closes the write end ||| close write	count=2
function	[returnv_1] [function_2] represents the encoding for ||| [returnv_1] [function_2]	count=1
function_arg	trace request [arg_2] ||| [function_1] [arg_2]	count=1
arg	to ||| flags outbuf opts	count=1
module	for this struct ||| struct	count=1
function	remove everything ||| remove specs unsatisfied by	count=1
module	isn’t ||| thread	count=1
function_arg	[function_1] specified key ||| [function_1] ? [arg_2]	count=1
arg	[arg] thread-safe manner ||| [arg]	count=1
module	format of [module] ||| [module]	count=1
arg	gzip compressed data and ||| level strategy	count=1
module	the status class ||| httpstatus	count=1
arg	the c pointer addr ||| addr	count=1
module	the [module] iv ||| [module]	count=1
module	adds tts ||| markup tottonly	count=1
arg	with anchor a ||| anchor	count=1
module	has been turned ||| rdoc	count=1
function_arg	filter [arg_2] ||| [arg_2] [function_1]	count=2
module	its original ||| gem testcase	count=1
module	rdoc :toplevel file where ||| rdoc	count=1
function	image [function] in ||| [function]	count=1
function	evaluates the ||| eval	count=2
arg	out a ||| out	count=1
returnv	[returnv] instead of ||| [returnv]	count=3
module	against the gems ||| requestset	count=1
function	transparent if ||| transparency	count=1
function_arg	[function_1] of methods ||| [arg_2] [function_1]	count=1
function	from comment if there ||| parse comment tomdoc	count=1
function	named private ||| private	count=1
returnv	next [returnv] in ||| [returnv]	count=1
arg	pattern ||| pattern	count=10
arg	[arg_1] tags and ||| [arg_2] [arg_1]	count=1
function	the struct ||| struct	count=1
function	from comment if ||| tomdoc	count=1
module	encodes this dsa to ||| dsa	count=1
module	rdoc :markup :paragraph ||| rdoc	count=1
arg	extensions for ||| extensions	count=2
module	new socket object connected ||| socket	count=1
arg	which is either the ||| data	count=1
function	returns true [function_2] ||| [returnv_1] ipv6 [function_2]	count=1
function	[function_1] given file ||| [function_2] [function_1]	count=1
returnv	status of ||| status	count=1
arg	a string ||| string 1 jan -4712 00:00:00 +0000' start	count=2
function	get the thread ||| thread	count=1
arg	or not ||| headers opt &b;	count=3
function_arg	[function_1] real ||| [arg_2] [function_1]	count=4
function	mode for ||| mode	count=1
module	the visitor for ||| markup totableofcontents	count=1
function	otherwise ||| include	count=1
module	of the ||| drb	count=2
module	this file ||| zlib gzipreader	count=1
arg	from the rubygems ||| api_data	count=1
function	[function_1] default ||| [function_2] gems use [function_1]	count=4
function_arg	[function_1] directory dir ||| [function_1] subdirectories [arg_2]	count=6
function	flushes ||| flush	count=1
function	file system blocks allocated ||| blocks	count=1
function_arg	[function_1] line ||| [arg_2] [function_1]	count=1
arg	stop character ||| stop	count=1
module	number ||| sslsocket	count=1
arg	with value and tag ||| tag value	count=1
returnv	true if ||| bool	count=8
function_arg	[function_1] ty at ||| [function_1] [arg_2]	count=4
function	don’t already exist ||| gen	count=1
function	for ||| basic	count=1
arg	a [arg_2] ||| [arg_2] [arg_1]	count=12
arg	tags ||| tags	count=1
arg	of bin ||| bin	count=2
function	line by using that ||| dir	count=1
function	proxy ||| proxy from	count=1
function	if key is ||| ?	count=2
function	and registered trademark symbols ||| to html	count=1
function	[function] dependencies file ||| vendor [function]	count=1
module	this ||| openssl ocsp	count=4
function	[function_1] prime ||| [function_2] [function_1]	count=2
function_arg	[function_1] out ||| [function_1] with substitution [arg_2]	count=1
arg	for selector ||| selector	count=1
module	to add the ||| net	count=1
arg	v see also #path= ||| v	count=1
function	message ||| message	count=3
module	the feed ||| atom feed	count=2
arg	item [arg_2] ||| [arg_2] [arg_1]	count=2
module	from ||| rdoc	count=4
module	in hsh ||| hash	count=1
function_arg	adds symlink [arg_2] ||| [function_1] [arg_2]	count=7
module	header names to the ||| net httpheader	count=1
module	gem implementation ||| gem	count=1
function	of the protected ||| protected	count=1
arg	to host port using ||| host port local_host	count=1
function_arg	and [function_1] [arg_2] dependencyrequest ||| [function_1] dep from_name from_version [arg_2]	count=3
function	scheme ||| scheme=	count=1
module	list of files ||| gem	count=1
function	returns true [function_2] ||| [returnv_1] return [function_2]	count=1
function_arg	[function_1] [arg_2] a human can understand ||| [function_1] delta string [arg_2]	count=3
module	restricting gems to a ||| gemdependencyapi	count=1
function	the getacl ||| getacl	count=1
module	generated json to the ||| json ext generator state	count=1
module	of multiple rdoc ||| rdoc classmodule	count=1
arg	new ||| dest	count=1
module	given command ||| command	count=1
returnv	if ||| instance	count=1
function	of interface addresses ||| getifaddrs	count=1
returnv	the first [returnv] in ||| [returnv]	count=1
arg	given enum ||| enum enc	count=1
returnv	object ||| instance	count=1
module	csv ||| csv	count=3
arg	for time and was ||| time	count=1
arg	for size ||| size initial_message	count=1
module	available ||| openssl	count=1
arg	to out_stream for ||| out_stream	count=1
function	of instance ||| instance	count=1
module	sets up ||| rdoc	count=1
arg	held in mutex and ||| mutex	count=1
function_arg	[function_1] to rows ||| [arg_2] [function_1]	count=1
function_arg	an info [arg_2] ||| [function_1] [arg_2]	count=1
arg	templates match tuple and ||| tuple	count=1
function	the existing ||| []=	count=1
module	context ||| rdoc context	count=1
function_arg	[function_1] v ||| [function_1] [arg_2]	count=3
function	will ||| gen	count=1
module	csv :row objects ||| csv table	count=1
module	be set as the ||| rexml parent	count=1
returnv	a copy of str ||| str	count=1
function	uri ||| cache update path	count=1
module	:sslprivatekey ||| drb	count=1
arg	the directory dir ||| dir options	count=1
function	[returnv_1] if the ||| [returnv_1] chardev [function_2]	count=1
module	the object ||| drb	count=1
function	iterator over ||| each	count=1
module	marking up this object’s ||| markup	count=1
arg	of tags ||| name start stop	count=1
function	add ||| add to fetcher	count=1
function	set the default value ||| default	count=3
arg	numeric which may be ||| numeric	count=1
function	the directory where ||| dir	count=1
function	returns the called name ||| callee	count=1
module	encodes this dh ||| dh	count=2
module	status class corresponding ||| httpstatus	count=1
module	in summary ||| optparse	count=1
function	spec [function_2] ||| [function_2] [function_1]	count=3
arg	classes also_in to ||| also_in	count=1
function	[function_1] [function_2] address for this ||| [function_1] [function_2]	count=4
function	a public key ||| public	count=1
function	the next object ||| next	count=1
function	return a list ||| list	count=2
returnv	are immediately ||| integer	count=1
arg	the dependency ||| spec dependency	count=1
function_arg	contains the [arg_2] ||| [function_1] ? [arg_2]	count=6
module	matchdata ||| matchdata	count=1
module	to pass output through ||| ri driver	count=1
module	the last ||| optionparser	count=1
module	returns ||| module	count=1
module	provided or ||| sslconfig	count=1
function	[function] object which ||| ole [function]	count=2
function	mapped/compatible ||| to	count=1
module	provide the inflate stream ||| zlib inflate	count=1
returnv	of the day ||| fixnum	count=1
returnv	the number ||| integer	count=4
module	options with ||| makemakefile	count=1
arg	[arg_1] file_name content ||| [arg_2] [arg_1]	count=1
arg	sec ||| sec	count=2
function	[function_1] and ||| [function_1] [function_2]	count=9
returnv	returning [returnv] pid/status pairs ||| [returnv]	count=1
arg	of precision numeric ||| numeric	count=5
function	true [function_2] ||| matrix [returnv_1] real [function_2]	count=1
module	for the alias ||| rdoc alias	count=1
function	a client [function_2] ||| [function_2] [function_1]	count=1
module	the descriptive fields ||| gem specification	count=1
module	a new loc ||| loc	count=1
function	inspect to convert the ||| inspect	count=1
arg	connects to ||| address port helo user secret authtype	count=1
module	identical ||| gem indexer	count=2
function	returns true [function_2] ||| [returnv_1] write headers [function_2]	count=1
arg	the file filename ||| filename	count=1
arg	on front with ||| front desc	count=1
function	for ||| start	count=7
module	or rdoc :attr from ||| rdoc parser	count=1
module	–version option to the ||| versionoption	count=1
function_arg	ruby version ||| ruby version options	count=1
arg	net :httpresponse ||| uri_or_host path port &block;	count=1
function_arg	[function_1] uri tag_name ||| [function_1] [arg_2]	count=2
function	the user can ||| config	count=1
function	original string before ||| string pre	count=1
function	status ||| []	count=1
module	this codeobject is ||| rdoc codeobject	count=1
function	the static ||| try	count=1
function	yes ||| yes	count=1
arg	file descriptor as a ||| perm	count=1
function_arg	the main page ||| main= page	count=1
module	this method ||| anymethod	count=1
module	the [module] will ||| [module]	count=1
module	the locale object ||| i18n locale	count=1
function	given file in ||| file	count=1
module	sets up ||| rdoc ri driver	count=1
module	hax todo deprecate and ||| gem	count=1
function	to [returnv_1] [function_2] ||| [returnv_1] [function_2]	count=2
module	verifying ||| netscape	count=1
function_arg	an [arg_2] ||| [function_1] [arg_2]	count=4
arg	to handle req ||| req	count=1
module	debug_level= ||| context	count=1
arg	into destination_dir if ||| destination_dir	count=1
arg	[arg] elements from ||| [arg]	count=1
function	corresponding value as ||| value	count=1
function	copies stream ||| copy stream	count=2
function_arg	[function_1] host ||| [arg_2] [function_1]	count=3
arg	given offset then ||| offset opt	count=1
arg	command and ||| cmd	count=1
module	ri ||| ri driver	count=1
function	obtain the lock ||| lock	count=1
function	returns true [function_2] ||| [returnv_1] wednesday [function_2]	count=1
function	[function_1] ruby ||| [function_2] [function_1]	count=7
module	to prevent conversion to ||| markup attributemanager	count=1
function	in if ||| sub	count=1
arg	parent of this object ||| parent	count=1
function	— at the object [returnv_1] [function_2] ||| [returnv_1] equal [function_2]	count=2
rep	[module_1] [function_arg_2] ||| [module_1] instance [function_arg_2]	count=5
function	server advertises auth ||| capable plain auth	count=1
module	read ||| net smtp	count=1
function	for which the code ||| if	count=1
arg	given_name with ||| given_name	count=1
function	extra data ||| extra data	count=1
arg	socket connected [arg] to ||| [arg]	count=1
arg	in data for reading ||| data options	count=1
arg	obj and ||| obj	count=1
arg	nodes matching ||| path namespaces variables	count=1
arg	command line arguments argv ||| argv	count=2
module	header fields ||| net httpheader	count=1
function	[function_1] text ||| [function_1] [function_2]	count=2
arg	with the given types ||| types	count=1
arg	return the data ||| data	count=1
module	the number of ||| ssl sslsocket	count=1
module	ensures that :sslcertificate and ||| drbsslsocket sslconfig	count=1
arg	classes also_in to out ||| out also_in	count=1
function	adds methods ||| methods	count=1
arg	whether the given string ||| string	count=1
function	[returnv_1] if ||| stat [returnv_1] zero [function_2]	count=1
function	:x509 :name ||| email to	count=1
module	the uri ||| drb drbobject	count=1
function_arg	module with name ||| module name	count=1
arg	value and comment ||| value comment	count=3
function	[function_1] processed in ||| [function_2] [function_1]	count=5
function_arg	[function_1] from text ||| [arg_2] [function_1]	count=5
function	local address fc00 ||| local	count=1
function	a header row ||| header row	count=4
module	with hax ||| testcase	count=1
module	:smtp object ||| smtp	count=1
function	change attributes [function_2] ||| [function_1] [function_2]	count=1
function	the ||| accept block	count=1
returnv	returns ||| fixnum	count=2
module	the correct parser ||| rdoc parser	count=1
module	object thereby frustrating the ||| object	count=1
module	whether this dh instance ||| openssl pkey dh	count=1
function	that can handle the ||| can parse by name	count=1
module	[module] to ||| gem [module]	count=4
module	method object using readline ||| irb readlineinputmethod	count=1
arg	from block_quote to ||| block_quote	count=1
rep	[module_1] [function_arg_2] ||| [module_1] write [function_arg_2]	count=3
function	to the build info ||| build info	count=1
arg	the given key string ||| key	count=1
function	creates a new directory ||| mkdir	count=1
function	over [function] and ||| [function]	count=1
module	ssl/tls handshake as a ||| openssl ssl sslsocket	count=1
function	if ||| spec ?	count=1
arg	level ||| level	count=3
module	@param index the integer ||| rexml parent	count=1
function	serial number ||| serial	count=1
function_arg	or module [arg_2] ||| [arg_2] [function_1]	count=5
module	a markup class ||| rdoc markup attributemanager	count=2
function	heading to create returns ||| heading	count=1
function	the base [function_2] ||| [function_1] [function_2]	count=4
module	visibility for ||| module	count=1
function	optionally up ||| slice !	count=1
arg	n by n ||| n zero	count=1
function_arg	[function_1] the members ||| [function_1] [arg_2]	count=3
function	used to set irb_name ||| n jobs	count=1
function_arg	a leap year ||| leap ? year	count=1
function	[returnv_1] [function_2] ||| [returnv_1] proxy class [function_2]	count=4
function	before the ||| pre	count=1
arg	socket connected [arg] using ||| [arg]	count=1
arg	nodes matching a ||| element path namespaces variables	count=1
function	tries [function] ||| try [function]	count=1
arg	ip addresses for name ||| name	count=1
arg	[arg_1] of name ||| [arg_1] [arg_2]	count=2
arg	tag an ||| tag	count=1
function	returns true [function_2] ||| [returnv_1] include [function_2]	count=3
function_arg	[function_1] [arg_2] v serialized by to_json ||| [function_1] create [arg_2]	count=2
module	hash ||| json ext generator generatormethods hash	count=1
module	compares ||| uri generic	count=2
function	block but preserve the ||| save	count=1
function	in a normal comment ||| in	count=1
function	field [function_2] ||| [function_1] [function_2]	count=1
module	associated with ios ||| io	count=1
function	returns true [function_2] ||| [returnv_1] autoclose [function_2]	count=4
module	database with ||| dbm	count=1
module	http ||| gem request	count=1
function	returns true if ||| bool coredump ?	count=1
module	numbers starting at num ||| numeric	count=1
function	[function_1] [function_2] database ||| [function_2] [function_1]	count=3
arg	and reads the inputted ||| add_hist	count=1
module	not the [module] ||| [module]	count=5
arg	given spec in ||| spec	count=1
function	installs the gem ||| install	count=1
module	of [module] and ||| [module]	count=1
function	on the ||| config	count=1
module	with the name ||| testcase specfetchersetup	count=1
function	dependency is a prerelease ||| ?	count=1
module	conflicting dependency’s ||| resolver conflict	count=1
function_arg	reads [arg_2] ||| [arg_2] [function_1]	count=3
arg	of bits the issuer ||| bits	count=1
function	[returnv_1] if ||| [returnv_1] has text [function_2]	count=3
function_arg	the extension [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] if not ||| [function_2] [function_1]	count=2
function	prerelease? ||| prerelease	count=1
function	switch like with on ||| on	count=3
module	original state and ||| gem testcase	count=1
module	has been turned off ||| codeobject	count=1
module	to the output ||| markup	count=2
function_arg	class klass ||| add class klass	count=1
function_arg	data in io ||| data io	count=2
arg	dependency file at path ||| path	count=1
arg	[arg_1] to dest ||| [arg_1] [arg_2]	count=2
arg	given requirement ||| requirement	count=1
function	coredump when it terminated ||| coredump	count=1
function	result of iteration ||| collect	count=1
module	properly-space list of ||| options	count=1
module	a ||| rdoc ri driver	count=4
returnv	signature is valid ||| bool	count=1
function_arg	method removes a file [function_1] [arg_2] ||| fileutils remove [function_1] [arg_2]	count=1
module	rdoc :generator :jsonindex ||| rdoc	count=3
function	[returnv_1] if ||| [returnv_1] alive [function_2]	count=1
module	the specification ||| gem specification	count=1
arg	matches spec ||| spec	count=1
function	the default irb commands ||| extend commands	count=1
arg	pages ||| pages search	count=1
function_arg	method [arg_2] ||| [arg_2] [function_1]	count=2
module	reading the [module] ||| [module]	count=1
module	the keep_files environment ||| gem testcase	count=1
returnv	given [returnv] ||| [returnv]	count=3
arg	[arg] of ||| [arg]	count=16
function	the instance [function_2] ||| [function_1] [function_2]	count=3
function	of type of ||| ole type	count=1
module	this context’s ||| context	count=1
function	arc sine ||| asin	count=1
module	drb server ||| drb	count=1
function	for which the given ||| select	count=1
function	locale ||| locale	count=2
arg	element with the given ||| obj...	count=1
module	source for ||| source	count=1
function	a serialized ||| marshal load	count=1
returnv	and waits ||| self	count=1
returnv	element s ||| obj	count=1
returnv	of its polar ||| float	count=1
function_arg	[function_1] of level ||| [arg_2] [function_1]	count=1
function_arg	[function_1] with name ||| [arg_2] [function_1]	count=4
function	resources ||| getresources	count=1
module	set ||| testcase	count=1
function_arg	[function_1] x ||| [function_1] [arg_2]	count=3
function	struct with the value ||| import value	count=1
function	assigned [function] it extracts ||| [function]	count=1
module	prepares the visitor ||| tottonly	count=1
function	dependency ||| dependency	count=3
function_arg	transcoded to ||| encode encoding options	count=1
module	the ||| pathname	count=2
arg	for method ||| method	count=1
function	paths for undocumented ||| also in	count=1
function	accept_list_item_start_note_multi_description ||| item start note multi description	count=1
function	[function] of the ||| full [function]	count=2
function	[function_1] [function_2] returns an integer representing ||| fixnum [function_2] [function_1]	count=2
function	form reserved ||| form	count=1
function	to the [function] ||| extension [function]	count=1
arg	given enumerable object and ||| enum	count=1
function	of ruby ||| in old ruby	count=1
returnv	exception object ||| exception	count=1
function	preset dictionary ||| dictionary	count=1
arg	version ||| version dependencies	count=2
returnv	str with ||| str	count=2
function	adds the given object ||| add	count=1
function	encode a string ||| encode	count=1
function	[returnv_1] [function_2] edges within this {#graph} ||| dependencygraph vertex [returnv_1] [function_2]	count=1
module	marks ||| markup formatter	count=2
function	generated docs will ||| sub	count=1
module	row read ||| gzipreader	count=1
function	lines from ||| readlines	count=1
arg	the given extensions ||| extensions serial	count=1
function	an integer ||| i	count=1
arg	context of ||| context statements file	count=1
arg	that [arg] ||| [arg]	count=1
function	@param parent ||| new	count=1
function_arg	paths matching [arg_2] ||| [arg_2] [function_1]	count=1
function	to the power ||| **	count=1
module	the c ||| rdoc parser c	count=1
arg	string returning the ||| string	count=1
function	[function_1] the internal ||| [function_2] [function_1]	count=6
module	cipher object ||| openssl cipher	count=1
module	output ||| rdoc markup tordoc	count=2
function_arg	the extension [arg_2] ||| [function_1] ? [arg_2]	count=2
returnv	reached [returnv] if ||| [returnv]	count=2
arg	given object ||| object	count=4
module	the sslserver when ||| ssl sslserver	count=1
function	the issuer certificate of ||| issuer	count=1
function	returns the destination ||| string destination	count=1
rep	current [function_arg_2] ||| [module_1] change [function_arg_2]	count=1
module	vector with entries ||| vector	count=1
returnv	number of ||| fixnum	count=3
function	[function_1] rescue ||| [function_2] [function_1]	count=1
module	digest ||| digest	count=8
function	but for header ||| header convert	count=1
arg	tag implicit ||| tag implicit	count=2
function	original name provided ||| name	count=1
function	[function] attribute of ||| [function]	count=1
module	rdoc :text#to_html ||| rdoc markup tohtml	count=1
arg	using [arg] ||| signature [arg]	count=1
module	up this ||| rdoc generator	count=1
function	inverse ||| inverse	count=1
module	from the command line ||| command	count=3
module	specification that contains ||| gem specification	count=2
module	hinfo ||| resolv dns resource hinfo	count=1
function	create a new ||| new	count=6
module	table to mixed mode ||| table	count=1
function	utf-8 ||| toutf8	count=2
arg	anchor a [arg_2] ||| [arg_1] [arg_2]	count=2
module	of the peer certificates ||| sslsocket	count=1
function_arg	[function_1] file_name doesn’t ||| filetest integer size [function_1] [arg_2]	count=1
function	to ||| accept block quote	count=1
module	to remove the ||| net	count=2
function	that can handle the ||| can parse by	count=1
function	shuts down ||| shutdown	count=1
function	returns a [function] ||| to [function]	count=2
arg	a temporary ||| basename tmpdir	count=1
module	with no arguments sets ||| module	count=1
returnv	[returnv] you probably ||| [returnv]	count=1
module	end of parsing for ||| rdoc stats	count=1
arg	rid [arg_2] ||| [arg_2] [arg_1]	count=3
function	thread-local [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] label of ||| [function_2] [function_1]	count=6
function_arg	[function_1] obj ||| [arg_2] [function_1]	count=13
function	returns a ||| to a	count=1
arg	[arg_1] start ||| [arg_2] length [arg_1]	count=1
function	[function_1] instance methods ||| [function_2] [function_1]	count=12
module	case which needs to ||| formattertestcase	count=1
module	returns the http status ||| status	count=1
function	following the end of ||| end	count=1
module	this ||| ext	count=1
module	will live in ||| darkfish	count=1
returnv	represents ||| encoding	count=2
arg	output ||| output	count=1
arg	localfile ||| localfile	count=3
module	the session ||| openssl ssl session	count=2
module	the elapsed ||| benchmark	count=1
function	returns the path to ||| name path	count=1
module	top-level workspace see irb ||| irb	count=1
function	which this object ||| element=	count=1
function	a line in ||| get line	count=1
arg	lineno ||| filename lineno	count=1
function	created by sorting ||| sort	count=1
returnv	returns the name of ||| string	count=2
arg	tags ||| name start stop	count=1
function_arg	[function_1] req ||| [function_1] [arg_2]	count=1
module	stat that is ||| stat	count=1
function	memory ||| i	count=2
function	‘nz_number’ in ||| nz	count=1
arg	a string s ||| s	count=1
function	valid and false ||| valid commercial	count=1
module	up ||| rdoc ri	count=1
function	:enddoc ||| start	count=1
module	for stat that is ||| stat	count=1
module	the ||| generator darkfish	count=4
module	the same day ||| date	count=1
arg	on the given context ||| context	count=1
module	this ||| webrick	count=1
function	the row [function_2] ||| [function_2] [function_1]	count=1
module	turned ||| rdoc codeobject	count=2
module	the specifications that match ||| gem resolver molinillo specificationprovider	count=1
function	be appended on completion ||| completion append	count=1
module	creates server sockets based ||| gem server	count=1
function	contains the ||| has key	count=1
module	encoding with specified ||| encoding	count=1
function	duplicates ||| initialize copy	count=1
function	bits ||| bit	count=1
module	given directory ||| dir	count=1
function_arg	[function_1] key ||| rinda tupleentry [function_1] [arg_2]	count=2
function	2xx reply code ||| success	count=1
module	psych :nodes :mapping ||| psych nodes mapping	count=1
function	[function_1] map with ||| [function_2] [function_1]	count=3
arg	it will cause this ||| element_name attributes raw_content	count=1
module	of undocumented items ||| rdoc stats	count=1
module	to ||| string	count=3
function	sets the net ||| timeout=	count=1
function	the valid ip addresses ||| valid ip	count=1
function	is a character device ||| chardev	count=2
module	list and associates short ||| optionparser list	count=1
function	natural logarithms ||| e	count=1
module	scan pointer ||| stringscanner	count=4
function	returns true if ||| bool gmt ?	count=1
module	the command ||| gem command	count=6
function	sends a get request ||| get	count=1
module	for this engine ||| openssl engine	count=1
function	prepares ||| start	count=7
module	[module] when opt ||| [module]	count=2
module	pstore ||| pstore	count=1
arg	to ||| flags outbuf	count=2
arg	with configuration config ||| config first	count=1
module	progress ||| gem resolver molinillo ui	count=1
function_arg	dump ruby [arg_2] ||| [arg_2] [function_1]	count=2
function	spec and the source_uri ||| spec by	count=1
function	[function_1] unique ||| [function_1] [function_2]	count=2
module	class method/attribute ‘#’ for ||| methodattr	count=1
function_arg	at [arg_2] ||| [arg_2] [function_1]	count=1
function	array of extra ||| specific extra	count=1
module	object that ||| stringio	count=1
function_arg	[function_1] given path ||| [function_1] [arg_2]	count=1
module	the first ||| syslog	count=1
module	:sslcertificate and :sslprivatekey have ||| drbsslsocket	count=1
function_arg	or no [arg_2] ||| [function_1] [arg_2]	count=1
module	sourcelist ||| sourcelist	count=2
function	can handle a ||| can	count=1
function	returns true [function_2] ||| [returnv_1] have xml content [function_2]	count=1
returnv	pathname used to create ||| filename	count=1
module	docs will ||| rdoc generator darkfish	count=1
arg	while handling req on ||| req	count=1
arg	type of the named ||| file_name	count=1
function	the build [function_2] ||| [function_1] [function_2]	count=2
module	and [module] ||| [module] parser	count=2
function	[function_1] allocations ||| [function_2] [function_1]	count=6
arg	not the given ||| &b;	count=1
returnv	parent if supplied will ||| instance	count=1
module	returns a new ipaddr ||| ipaddr	count=3
function	checks for a constant ||| const get	count=1
function_arg	for class [arg_2] ||| [arg_2] [function_1]	count=1
function	deletes all ||| delete	count=1
function	has a [function_2] ||| [returnv_1] [function_2]	count=4
function	returns the ||| doc	count=1
arg	cn [arg_2] ||| [arg_2] [arg_1]	count=2
module	have been ||| drb drbsslsocket sslconfig	count=1
module	pathname object ||| pathname	count=2
module	within ||| makemakefile	count=3
function	in ||| doc	count=1
function_arg	this method removes a [function_1] [arg_2] ||| fileutils [function_1] [arg_2]	count=1
returnv	no arguments sets the ||| self	count=1
arg	undocumented classes also_in ||| also_in	count=1
arg	from a string ||| string 1 jan -4712	count=2
module	date/time components in ||| xmlrpc datetime	count=1
function_arg	[function_1] src to ||| [function_1] [arg_2]	count=3
function	the hostname ||| getname	count=2
module	apispecification ||| resolver apispecification	count=1
arg	options may be a ||| options	count=1
module	a new [module] with ||| [module]	count=1
module	and :sslprivatekey have been ||| drb drbsslsocket	count=1
arg	setter [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
arg	field to [arg_2] ||| [arg_2] [arg_1]	count=1
module	an apispecification for ||| gem resolver apispecification	count=1
returnv	be ||| instance	count=1
function	with ||| name	count=1
arg	block ||| &block;	count=5
function	commands irb :context#main irb ||| extend commands	count=1
arg	:row from [arg] are ||| [arg]	count=1
module	module or class this ||| rdoc	count=1
module	html ||| markup tohtml	count=2
module	module where the name ||| module	count=1
arg	significant digits ||| digits	count=1
module	:sslprivatekey have been provided ||| drbsslsocket	count=1
module	it ||| thread mutex	count=2
function_arg	[function_1] [arg_2] ||| [function_1] user [arg_2]	count=6
arg	for raw ||| raw	count=1
arg	for req ||| req	count=1
function	the public key ||| public	count=2
module	this sourcelist ||| gem sourcelist	count=1
function_arg	[function_1] found trying ||| [arg_2] [function_1]	count=3
function	given representation ||| strptime	count=1
arg	uses each [arg] ||| [arg]	count=3
function	mode storing the result ||| puttextfile	count=1
arg	connects to the server ||| address port helo user secret authtype	count=1
module	given ||| benchmark	count=1
module	this ||| requirement	count=1
function	controlled [function] instead ||| process based [function]	count=1
function	space between the tokens ||| space	count=1
function	the ||| item	count=4
module	undocumented items ||| stats	count=1
arg	[arg_1] reference ||| [arg_2] [arg_1]	count=1
function	value pair ||| pair	count=2
arg	temporary file [arg_2] ||| [arg_2] [arg_1]	count=3
module	verifies ||| gem package	count=2
module	by a [module] ||| [module]	count=1
arg	radix base between 2 ||| base	count=1
function	[function_1] and the ||| [function_2] line [function_1]	count=1
arg	[arg] a ||| [arg]	count=3
function	false if ||| commercial ?	count=1
module	documentation has been ||| codeobject	count=1
function	win32 error ||| win32	count=1
function	returns the length ||| doc	count=1
module	the [module] suitable ||| [module]	count=1
module	returns “type/subtype” ||| openuri meta	count=1
arg	the given port default ||| port	count=1
function	[function_1] field ||| [function_2] row [function_1]	count=1
function_arg	file b ||| file a b	count=1
module	openssl :x509 ||| security	count=1
function	attr entries matching ||| matching	count=1
function	it returns false if ||| ?	count=1
function	the encoding of the ||| external encoding	count=2
function	an array [function_2] ||| [function_2] [returnv_1]	count=1
function	returns ||| to	count=38
function	by using that ||| dir	count=1
returnv	returns an exception object ||| exception	count=1
function	check is ||| ?	count=2
function	is valid and ||| valid commercial	count=1
function	bytes to [function_2] ||| [function_2] [function_1]	count=2
module	iso 8601 format ||| datetime	count=1
module	notification ||| rinda notifytemplateentry	count=1
function	define method [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] pattern ||| [arg_2] [function_1]	count=3
function	the dependency and a ||| dependency request	count=1
arg	contained in yaml ||| yaml	count=1
module	adds tts ||| markup	count=1
arg	copy(), but set ||| set	count=1
function	private setter for scope ||| scope	count=1
module	dns resolver ||| resolv dns	count=6
function	database [function] with ||| [function]	count=1
function	private setter for dn ||| set dn	count=1
arg	by n ||| n	count=1
module	pass output ||| rdoc ri	count=1
function	lighter-weight ||| for cache	count=1
returnv	returns [returnv] with both ||| [returnv]	count=1
function	attempts to [function_2] ||| [function_2] [function_1]	count=1
function	constant that [function_2] ||| [function_1] [function_2]	count=2
module	entry a ||| entry	count=2
function_arg	methods matching [arg_2] ||| [arg_2] [function_1]	count=1
function	containing the values ||| values at	count=1
arg	object_id id to ||| id	count=1
arg	set ||| set	count=3
returnv	str creating the symbol ||| symbol	count=1
function	to configure various ||| config	count=1
function	proppatch ||| proppatch	count=1
function	[function_1] proxy for ||| [function_2] [function_1]	count=1
module	{value => [module] of ||| [module]	count=1
module	name ||| makemakefile	count=1
function	a block in the ||| block	count=1
arg	[arg_1] on res ||| [arg_1] [arg_2]	count=7
function	[function_1] paths ||| [function_1] [function_2]	count=6
function_arg	[function_1] if ||| tkoption [function_1] class [arg_2]	count=2
module	that a ||| sslconfig	count=1
returnv	that represents ||| encoding	count=2
module	tuplespace to check if ||| rinda	count=1
module	establishes an [module] ||| [module]	count=1
arg	the string or block ||| string filename lineno	count=1
module	bigdecimal ||| bigdecimal	count=5
function	the build ||| build	count=1
function	exit or if it’s ||| exit	count=1
module	that will ||| resolver	count=1
arg	[arg_1] extensions for ||| [arg_2] [arg_1]	count=1
module	shifts big ||| bignum	count=1
module	with analysis and ||| gem basicspecification	count=1
module	properly-space list of ||| rdoc options	count=1
module	marker for rdoc ||| rdoc	count=1
function	builds a methods ||| methods	count=1
function	of singleton ||| singleton	count=1
arg	file1 ||| file1	count=1
arg	line ||| line path	count=1
function	true [function_2] ||| matrix [returnv_1] zero [function_2]	count=1
arg	of the indicated mailbox ||| mailbox attr	count=1
module	json to the ||| json ext generator state	count=1
function	installed [function_2] ||| [function_1] [function_2]	count=2
arg	enumerable object and ||| enum	count=1
function	private key ||| private	count=3
function	exception object [function_2] ||| [function_2] [returnv_1]	count=1
function	that :sslcertificate and ||| setup	count=1
function	[function] possibility ||| pop possibility [function]	count=1
function	[function] array in ||| [function]	count=1
arg	an array methods of ||| methods	count=1
module	openssl ||| openssl pkey	count=1
module	stou stor appe ||| net ftp mlsxentry	count=1
function_arg	[function_1] of event ||| [arg_2] [function_1]	count=2
module	–platform option ||| gem versionoption	count=1
function	the prefetch ||| prefetch	count=1
arg	using the given begin ||| begin	count=1
function	line by using ||| config	count=1
arg	[arg_1] an array ||| [arg_2] [arg_1]	count=1
module	yields an instance of ||| xmlrpc xmlparser	count=1
module	so ||| specification	count=1
function_arg	the first [arg_2] ||| rexml element [function_1] [arg_2]	count=1
module	this element belongs ||| rexml element	count=1
function	module ||| module	count=10
module	availableset ||| availableset	count=1
function	to utf-16 ||| toutf16	count=2
function	struct ||| struct	count=2
function_arg	for template ||| for template	count=1
module	all file lists ||| gem specification	count=1
arg	method_name in klass_name ||| klass_name method_name	count=3
function_arg	system entry [arg_2] ||| [arg_2] [function_1]	count=1
arg	sends [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=12
module	:enddoc ||| rdoc codeobject	count=2
arg	self_hash [arg] either toplevel ||| mod self_hash [arg]	count=1
function	valid ||| valid	count=8
arg	transfers localfile ||| localfile remotefile blocksize &block;	count=1
returnv	mask ||| priority_mask	count=1
module	openstruct ||| openstruct	count=2
function	[function] in ||| [function]	count=10
returnv	version from ||| instance	count=1
module	will be set ||| parent	count=1
module	single-row matrix where ||| matrix	count=1
function_arg	[function_1] data matches ||| [arg_2] [function_1]	count=2
function	client [function_2] ||| [function_2] [function_1]	count=1
arg	when an ||| name	count=1
arg	bits from [arg_2] ||| [arg_2] [arg_1]	count=4
function	base label of ||| base label	count=4
arg	[arg] objects based ||| [arg]	count=3
function	then use to ||| dir config	count=1
function	port ||| port	count=8
function	tcp/ip server sockets for ||| tcp server sockets	count=1
arg	in the tar file [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg_1] for time ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] real ||| [function_1] float [arg_2]	count=1
function	returns the ssl parameters ||| ssl params	count=1
module	elements ||| set	count=1
arg	to name ||| name	count=1
module	symbol corresponding ||| symbol	count=1
function	public key ||| public ?	count=1
arg	sclass_var ||| sclass_var	count=1
function_arg	[function_1] :specification spec ||| [function_1] user [arg_2]	count=2
arg	database for user ||| user	count=3
function	[function_1] time object ||| [function_1] [function_2]	count=2
function	a subdomain ||| subdomain of	count=1
module	of this file ||| toplevel	count=1
function	[function_1] found ||| [function_1] [function_2]	count=1
module	:imap object and connects ||| imap	count=1
function	sections ||| sections	count=2
module	:mailto object from generic ||| mailto	count=1
function_arg	and [function_1] [arg_2] dependencyrequest ||| [function_1] [arg_2]	count=3
function	password ||| password field	count=2
module	regular ||| regexp	count=1
function	[function_1] encoding name ||| [function_2] [function_1]	count=3
function	handles ||| handles	count=1
arg	[arg] is ||| lib func [arg]	count=3
module	in the feed ||| feed	count=1
function	block length of ||| block length	count=3
arg	an ||| options	count=1
arg	stats ||| stats	count=1
module	pstore file ||| pstore	count=3
module	this attribute eg ||| rexml attribute	count=1
module	original state ||| testcase	count=1
module	object+ ||| array	count=1
function_arg	if the [arg_2] ||| [arg_2] [function_1]	count=28
function	modules sorted by ||| sorted module	count=1
module	to just the text ||| markup tolabel	count=1
function	[returnv_1] if ||| [returnv_1] installable platform [function_2]	count=2
module	true iff [module] ||| [module]	count=1
arg	the remote host uri ||| uri	count=1
function	returns a properly-space list ||| generator	count=1
arg	[arg_1] class_name or ||| [arg_2] [arg_1]	count=8
module	visitor for ||| rdoc markup tordoc	count=2
arg	defines a method method ||| method new_name	count=1
function	as html ||| snippet	count=1
function	a superset ||| superset	count=1
function	create a record ||| search record	count=1
module	the files list ||| options	count=1
function	generate a [function] button ||| [function]	count=1
function	[returnv_1] [function_2] ||| [returnv_1] dst [function_2]	count=2
arg	list to [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] version 1 ||| [function_2] [function_1]	count=2
module	driver ||| ri driver	count=1
module	destination possibly with pixel ||| tkphotoimage	count=1
module	that cert ||| openssl x509	count=1
function	to this module of ||| modules	count=1
function_arg	[function_1] anchor element ||| [function_1] [arg_2]	count=1
module	the number of ||| openssl ssl sslsocket	count=1
arg	the given scheme if ||| scheme	count=1
arg	t ||| t args	count=1
function	deletes ||| delete	count=11
module	asn1data into a ||| asn1 asn1data	count=1
function	list of all ||| normalized file list	count=1
module	of the current process ||| process	count=2
function	each [function_2] ||| [function_2] [function_1]	count=2
function	[function] most ||| matched [function]	count=2
function	commands irb :context#main ||| extend commands	count=1
function	any parameters specified ||| params	count=1
function_arg	assigns the value ||| []= header value	count=1
module	value of [module] that is ||| [module]	count=1
module	the certificate ||| security	count=1
function_arg	[function_1] y and ||| [arg_2] [function_1]	count=2
module	a visitor to ||| rdoc markup	count=1
module	returns ||| benchmark	count=1
function	sorted by ||| get sorted module	count=1
arg	in raw mode ||| min: nil time: nil	count=1
module	the –platform ||| versionoption	count=1
arg	[arg_1] object req ||| [arg_2] [arg_1]	count=4
arg	special is a ||| special	count=1
function	as a rational ||| to r	count=4
module	skip ||| parser ruby	count=2
arg	z where z is ||| z	count=5
function	can ||| config	count=1
function	to remove ||| delete	count=1
function	a constant with ||| const get	count=1
module	and returns the http ||| net http	count=1
function	[function_1] and body ||| [function_1] [function_2]	count=2
function	for each slice of ||| each slice	count=1
module	in the feed ||| atom feed entry	count=1
module	that are ||| ssl	count=1
function	ifindex ||| ifindex	count=1
module	status class corresponding to ||| webrick	count=1
function	iterates over [function] and ||| [function]	count=1
module	provided or that ||| sslconfig	count=1
arg	digits of precision numeric ||| numeric	count=5
module	will ||| rdoc generator darkfish	count=2
arg	anchor tag ||| anchor tag	count=2
module	non-root [module] that were ||| gem resolver molinillo [module]	count=1
arg	path matches against ||| path flags ) → (true or false	count=1
function	path [function_2] ||| [function_1] [function_2]	count=2
module	returns a properly-space list ||| rdoc	count=1
module	command to select ||| net imap	count=1
arg	pixel zooming and/or subsampling ||| src opts	count=1
module	they don’t already exist ||| rdoc generator darkfish	count=1
function_arg	[function_1] [arg_2] comes first and returns ||| array ary [function_1] [arg_2]	count=6
function	the first [function_2] ||| [function_2] [function_1]	count=3
module	unless ||| gem testcase	count=1
arg	creates a ||| domain	count=1
function	only ||| only	count=1
function	fatal ||| fatal	count=2
function	locale [function_2] ||| [function_2] [function_1]	count=1
module	rdoc :method or rdoc ||| rdoc parser ruby	count=1
module	state and removes the ||| gem	count=1
arg	to [arg] with an ||| [arg]	count=1
module	ec ||| encoding converter	count=3
module	in [module] ||| [module]	count=2
function	prefetch ||| prefetch	count=1
function	the method ||| alias method	count=1
arg	[arg] writing ||| [arg]	count=1
function	returns the issuer ||| issuer of	count=1
function	[function_1] c ||| [function_1] [function_2]	count=1
module	a binary ||| testcase	count=1
arg	if the two ||| other	count=1
function	a hash that ||| hash result	count=1
arg	node ||| node	count=1
arg	source_uri to the cache ||| source_uri	count=1
module	driver ||| rdoc ri driver	count=1
function	raw [function_2] ||| [function_1] [function_2]	count=3
module	the [module] options ||| gem [module]	count=1
module	represents ||| stringio	count=1
function	from the profiler ||| print profile	count=1
function	[function] block and ||| guard [function]	count=2
module	always ||| nilclass	count=2
arg	the parent ||| parent	count=1
function	resolve ||| resolve	count=2
function	[function] have ||| [function]	count=3
function	an even number ||| even	count=1
arg	and the given set ||| set	count=2
function_arg	creates a udp/ip [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	self-signed [function_2] ||| [function_2] [function_1]	count=8
module	with the ||| drbsslsocket	count=1
function	protect ||| set userinfo	count=1
module	been provided ||| drb drbsslsocket	count=1
function	the directories ||| gen sub directories	count=1
arg	from a ||| start	count=4
function_arg	[function_1] rows ||| [function_1] [arg_2]	count=1
module	the feed or any ||| feed	count=1
module	of undocumented ||| rdoc stats	count=1
module	specification that contains the ||| gem specification	count=2
module	environment variable was set ||| gem	count=1
arg	on visitor ||| visitor	count=5
function	constructs ||| new	count=1
returnv	number of bytes that ||| integer	count=1
module	the session state ||| cgi session nullstore	count=1
function	if the named ||| file ?	count=1
arg	year month [arg_2] ||| [arg_1] [arg_2]	count=6
arg	the given requirement ||| requirement	count=1
function	iteration of ||| collect	count=1
function	finds an attribute ||| find attribute	count=1
module	get the ||| drb drbobject	count=2
function	mm is the current ||| inspect	count=1
arg	contents of ||| gem_data	count=1
module	a set ||| gem requestset	count=1
function	uri of the ||| drburi	count=1
module	supports pipes and stat ||| stat	count=1
module	of ||| rexml parent	count=2
function	version ||| version for	count=1
returnv	elements from the array ||| ary	count=1
module	defined in xmlrpc ||| xmlrpc	count=1
function_arg	[function_1] if you ||| tkoptiondb [function_1] class [arg_2]	count=2
function	determine the status ||| status	count=1
module	maximum [module] ||| json ext [module]	count=1
module	activationrequest ||| activationrequest	count=1
module	conflicting dependency’s name matches ||| gem resolver conflict	count=1
function	up a module ||| symbol module	count=1
function	the path to the ||| cert path	count=1
module	reporter that will write ||| gem streamui	count=1
function	full [function] name ||| [function]	count=1
arg	[arg] of the ||| [arg]	count=2
function	matching ||| find all	count=2
module	is initialized when the ||| syslog logger	count=1
module	and net :http#open_timeout to ||| xmlrpc	count=1
function	:context#io ||| suspend input method	count=1
function	if [function_2] ||| return [function_2] [function_1]	count=1
module	constant which [module] ||| [module]	count=1
module	polar form ||| complex	count=1
function	truncated to ||| to i	count=1
function	ignore a ||| ignore	count=1
module	will live ||| rdoc	count=1
function	returns the size of ||| size	count=3
module	for marking up ||| rdoc	count=1
arg	:converter ||| source_encoding destination_encoding	count=1
function_arg	[function_1] error ||| [function_1] [arg_2]	count=8
function	an attribute is added ||| attribute	count=1
arg	constructing new struct object ||| object	count=1
function	[function_1] der-encoded ||| [function_2] [function_1]	count=1
arg	[arg_1] setting ||| [arg_2] [arg_1]	count=2
function	[function_1] all ||| [function_2] [function_1]	count=12
function	local ip addresses as ||| ip address list	count=1
function	request is for ||| implicit ?	count=1
function	time in ||| time	count=1
module	when gem :uninstaller#uninstall ||| gem	count=2
module	the peer ||| openssl ssl sslsocket	count=1
arg	nothing [arg] because it ||| [arg]	count=1
arg	the threads to ||| threads	count=1
function	last error of the ||| last error	count=1
module	this ||| rdoc singleclass	count=1
rep	[module_1] [function_arg_2] ||| [module_1] bool [function_arg_2]	count=3
function	[function_1] a new ||| [function_2] with [function_1] klass	count=1
module	of ri data ||| ri	count=1
module	copy to ||| gem	count=1
module	pipes and stat ||| file stat	count=1
function	for which ||| if	count=2
function	filter ||| filter=	count=1
module	this singleton class class ||| rdoc singleclass	count=1
module	have ||| drbsslsocket	count=1
arg	[arg_1] comment ||| [arg_2] [arg_1]	count=18
function	ensure that ||| ensure	count=1
arg	than real ||| real	count=1
returnv	return the return ||| obj	count=1
module	initialized when the first ||| logger	count=1
function	printable form using inspect ||| inspect	count=1
function	deserializes json string by ||| json create	count=1
module	instructionsequence with source ||| instructionsequence	count=1
module	to pass ||| ri	count=1
module	for marking up ||| rdoc generator	count=1
function	of a stream ||| stream	count=1
function	but controlled [function] ||| process based [function]	count=1
function	up a pager program ||| pager	count=1
function	the output ||| block quote	count=1
function	returns the bytes to ||| bytes	count=1
arg	[arg_1] implicit start ||| [arg_2] [arg_1]	count=5
function	[function_1] internal consistency ||| [function_1] [function_2]	count=1
module	the section ||| rdoc markup verbatim	count=1
module	properly-space list of generators ||| rdoc options	count=1
module	the trusted certificate ||| gem security trustdir	count=1
function	[function] drbarray that ||| [function]	count=1
arg	[arg_1] of name ||| [arg_2] [arg_1]	count=3
function	paths in ||| paths	count=2
arg	[arg] the ||| certificate signing_key [arg] age extensions	count=1
function_arg	path from [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	dn [arg_2] ||| [arg_2] [function_1]	count=2
module	this [module] is frozen ||| [module]	count=1
module	string and returns the ||| string	count=2
function	if nan infinity and ||| allow nan ?	count=1
module	info about the parser ||| parser ruby	count=1
module	stou stor appe ||| ftp mlsxentry	count=1
function_arg	[function_1] if length ||| [function_1] initial length= [arg_2]	count=2
module	sends an authenticate ||| net imap	count=1
function	[function_1] kind string ||| [function_1] [function_2]	count=1
function	[function_1] or module ||| [function_2] [function_1]	count=5
function	returns the status class ||| []	count=1
module	attribute manager [module] understands ||| [module]	count=1
function	the index of ||| index	count=2
module	i18n supported ||| i18n	count=1
module	the given object ||| object	count=1
module	deprecate and ||| gem testcase	count=1
function	[function_1] key ||| [function_1] [function_2]	count=2
arg	for rdoc ||| rdoc	count=1
module	in the given ||| gem requestset gemdependencyapi	count=1
function_arg	[function_1] of meth ||| [function_1] [arg_2]	count=4
module	nesting in [module] ||| [module] ext generator	count=1
function	is for a gem ||| implicit ?	count=1
module	of [module] :handle ||| [module]	count=1
module	leveled [module] ||| irb [module]	count=3
arg	n is the optional ||| n	count=1
module	and removes ||| testcase	count=1
arg	[arg_1] pattern ||| [arg_2] path flags [arg_1]	count=1
function	adds class or ||| add to classes or	count=1
arg	child1 this ||| child1 child2	count=1
function	adds the #page_dir to ||| finish page dir	count=1
function	dependencies that are used ||| dependencies	count=1
module	specify ||| gzipwriter	count=1
function	the buffer to length ||| buffer	count=1
function	progress information ||| debug msg	count=1
module	value toward zero ||| rational	count=1
arg	of event ||| event	count=1
arg	compares the two ||| other	count=1
arg	boolean add ||| add	count=1
function	token listener ||| token listener	count=2
function	label list items ||| list item	count=1
function	adds c ||| add c	count=2
arg	sends a ||| initheader	count=1
module	po ||| generator pot po	count=1
function	successor ||| next	count=1
function	[function] key ||| [function] key	count=1
function	that ||| by	count=1
function_arg	[function_1] meta-programmed ||| [arg_2] [function_1]	count=1
module	creates ||| resolv dns resource in a	count=1
function	modules sorted by ||| get sorted	count=1
function	a [function_2] ||| [function_2] [function_1]	count=31
module	addrinfo objects as an ||| addrinfo	count=1
function_arg	a socks [arg_2] ||| [arg_2] [function_1]	count=1
function	default irb commands ||| extend commands	count=1
module	lists have ||| specification	count=1
module	marking ||| generator markup	count=1
function	server in non-blocking ||| accept nonblock	count=1
arg	[arg_1] using ||| [arg_1] [arg_2]	count=5
arg	[arg_1] pattern is ||| [arg_1] [arg_2]	count=1
function_arg	define new [function_1] [arg_2] ||| tkoption new [function_1] [arg_2]	count=3
module	source uri ||| gem sourcelist	count=1
function	or [function_2] ||| [function_2] [function_1]	count=2
module	documentation has been ||| rdoc codeobject	count=1
function	[function_1] token listener ||| [function_1] [function_2]	count=1
module	key ||| gem testcase	count=1
function	all classes and ||| classes and	count=2
function	don’t already exist ||| sub	count=1
module	uri ||| drb	count=1
module	returns ||| string	count=1
returnv	its polar ||| float	count=1
function	represents friday ||| friday	count=1
function_arg	module [arg_2] ||| [function_1] [arg_2]	count=6
module	:ftp ||| ftp	count=1
module	removed ||| specification	count=1
module	struct member ||| struct	count=1
module	indicated whether this ||| openssl	count=1
module	[module] given string ||| digest [module]	count=1
arg	by an index ||| index	count=1
function	options ||| dir config	count=1
module	prepares the visitor ||| markup tordoc	count=3
function_arg	special handler [arg_2] ||| [arg_2] [function_1]	count=2
arg	hash ||| hash	count=3
module	a properly-space ||| rdoc options	count=1
module	the digest is ||| openssl digest	count=1
function_arg	finds unique [arg_2] ||| [arg_2] [function_1]	count=1
returnv	anonymous ||| mod	count=1
function	already ||| gen	count=1
function	of 1970 ||| make expires	count=1
module	up this ||| rdoc generator markup	count=1
function	detect if the ||| ?	count=1
module	column ||| table	count=1
arg	with name version ||| name version dependencies	count=1
module	object’s ||| rdoc generator	count=1
arg	inline ||| inline	count=1
module	dh instance has a ||| openssl pkey dh	count=1
module	state and removes the ||| testcase	count=1
function	teardown restores ||| teardown	count=1
arg	val ||| val	count=6
function	[returnv_1] resets ||| [function_2] [returnv_1]	count=1
arg	[arg_1] [arg_2] according to some typical ||| datetime datetime rfc3339 [arg_2] [arg_1]	count=4
module	and net :http#open_timeout ||| xmlrpc client	count=1
function	collection ||| doc stats	count=1
function	parse ||| parse	count=5
module	of this codeobject ||| codeobject	count=2
arg	the string or block ||| string	count=1
module	with ||| instructionsequence	count=1
function	the uri ||| uri	count=1
arg	given text ||| text code_object &block;	count=2
arg	using the source ||| source	count=1
function	returns [function_2] ||| [returnv_1] [function_2]	count=41
function	off by :enddoc ||| start	count=1
function	a block for each ||| each	count=1
function	a legacy platform spec ||| legacy platform	count=1
function	generated docs ||| gen sub	count=1
module	the requirement will ||| requirement	count=1
arg	on front with ||| front desc renewer	count=1
function	an ipv6 address ||| ipv6	count=1
arg	dependency ||| dependency	count=7
arg	that match tuple ||| tuple	count=1
function_arg	the document [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] installed parser ||| [function_1] [function_2]	count=4
function_arg	true if [arg_2] ||| [arg_2] [function_1]	count=1
module	rdoc :text#to_html ||| rdoc	count=1
function_arg	[function_1] str ||| [function_1] [arg_2]	count=2
function	returns true [function_2] ||| [returnv_1] disconnected [function_2]	count=1
module	token to the ||| rdoc markup	count=1
module	they ||| generator	count=1
module	items in ||| rdoc stats	count=1
function	the first comment in ||| collect first comment	count=1
arg	string ||| str	count=1
function	irb commands irb :context#main ||| extend commands	count=1
module	that :sslcertificate ||| drbsslsocket sslconfig	count=1
arg	equal to key ||| key	count=1
function	don’t ||| gen sub	count=1
module	or class this ||| rdoc	count=1
arg	options and stats ||| options stats	count=3
arg	class [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=15
module	returns ||| complex	count=1
module	the given command ||| gem command	count=1
module	[module] of extensions ||| [module]	count=1
function	information ||| debug	count=1
module	the status ||| webrick httpstatus	count=1
function	the digest to the ||| digest	count=1
module	case that calls @to ||| markup formattertestcase	count=1
module	irb :notifier ||| irb notifier	count=1
function	full paths [function_2] ||| [function_2] [function_1]	count=1
module	for ||| tottonly	count=1
function	object ||| object	count=8
module	process to ||| testcase	count=1
module	:nodes :document ||| nodes document	count=1
module	syslog warning ||| syslog	count=1
returnv	value of ||| value	count=1
function	uri ||| uri	count=1
module	various ||| makemakefile	count=1
module	verifies [module] ||| [module]	count=1
function	installer ||| installer	count=1
arg	named file has ||| file_name	count=2
function	return the name ||| name	count=2
function	[function_1] paths ||| [function_2] [function_1]	count=6
function_arg	[function_1] state is ||| [arg_2] [function_1]	count=1
function	the database [function] with ||| [function]	count=1
function	calculate ||| ctypes	count=1
arg	to rows and columns ||| rows columns	count=1
function	directories the generated docs ||| sub directories	count=1
function	the index ||| index	count=4
function	‘nz_number’ in ||| nz number	count=1
function	before [function_2] ||| [function_1] [function_2]	count=1
arg	from ||| copy	count=1
function	token from ||| token	count=1
function	ary for which ||| ary select	count=1
module	to wrap the c ||| fiddle importer	count=1
module	markup ||| markup	count=1
function_arg	add a [arg_2] ||| [function_1] [arg_2]	count=1
module	for ||| rdoc	count=42
function	[function_1] name ||| [function_2] [function_1]	count=16
function	[function_1] internal ||| [function_1] [function_2]	count=1
arg	child1 ||| child1 child2	count=1
arg	in chain is ||| chain	count=1
arg	length [arg] elements ||| [arg]	count=1
module	option summary into ||| optparse	count=1
function	‘top section’ if the ||| plain html	count=1
function	adds paths for ||| add also in	count=1
function	converts ||| to	count=4
function_arg	method :both [arg_2] ||| [arg_2] [function_1]	count=1
arg	argv ||| argv	count=1
arg	message ||| message	count=7
function	a zero size ||| zero	count=1
function	the value as a ||| to s	count=2
function	whatever mode the session ||| put	count=1
module	this tar ||| gem package tarreader	count=2
function	is a superset of ||| superset	count=1
function	exit or if ||| to exit	count=1
arg	given offset ||| offset	count=1
arg	given prefix [arg_2] ||| [arg_2] [arg_1]	count=3
module	that will retrieve ||| gem resolver	count=1
function	as [function] ||| [function]	count=3
function_arg	[function_1] indicated ||| [function_1] mailbox [arg_2]	count=2
module	version from the ||| gem	count=1
module	the object in enum ||| enumerable	count=2
arg	file_name which ||| file_name suffix	count=1
module	the c code corresponding ||| rdoc parser c	count=1
function	[function_1] latter ||| [function_1] [function_2]	count=2
module	docs ||| rdoc	count=1
function	ssl [function_2] ||| [function_1] [function_2]	count=1
function	sets the next ||| next	count=1
arg	storing top_level file_name content ||| top_level file_name content	count=1
arg	path and gets a ||| path	count=3
arg	the given calendar ||| year month mday start	count=1
function	with ||| setup	count=1
module	wrap the ||| fiddle importer	count=2
function	handle the ||| handle	count=1
function	the parameters [function_2] ||| [function_2] [function_1]	count=3
function	be resumed or transferred ||| alive	count=1
module	:http#read_timeout and net :http#open_timeout ||| xmlrpc client	count=1
module	the given ||| requestset gemdependencyapi	count=1
function	[function_1] satisfied ||| [function_2] [function_1]	count=1
module	copy ||| net imap	count=1
module	for marking up this ||| markup	count=1
module	ruby ||| ruby	count=2
function	interface addresses ||| getifaddrs	count=1
function_arg	[function_1] mod to ||| [function_1] [arg_2] self_hash	count=5
module	uri converted to ||| kernel	count=1
arg	the file at local_path ||| server local_path	count=1
function	documentation installed? ||| rdoc installed	count=1
module	str ||| string	count=5
module	location of ||| installer	count=1
function_arg	the visibility [arg_2] ||| [arg_2] [function_1]	count=2
module	prepares ||| tordoc	count=3
function	[returnv_1] if ||| [returnv_1] [function_2]	count=8
function_arg	[function_1] methods ||| [function_1] out [arg_2]	count=1
module	:x509 ||| security	count=1
function	logger output debug ||| debug	count=1
arg	in file_name which ||| file_name suffix	count=1
function	returns the exit ||| exit	count=1
function	the text ||| text	count=2
arg	tts from block_quote ||| block_quote	count=1
module	inline ||| rd inline	count=2
function	issuer certificate ||| issuer of	count=1
arg	code a ||| code	count=3
arg	[arg_1] single ||| [arg_2] [arg_1]	count=2
function	array [function_2] ||| [returnv_1] to [function_2]	count=1
arg	enables the ||| debug	count=1
function	[function_1] allocations ||| [function_1] [function_2]	count=10
module	header for ||| httpheader	count=1
function	destination encoding ||| destination encoding	count=2
arg	the given begin ||| begin	count=1
module	returns an ||| servlet	count=1
module	gets various openssl ||| openssl ssl sslcontext	count=1
module	waits ||| thread	count=1
arg	options may be ||| options	count=1
module	restricting gems ||| requestset gemdependencyapi	count=1
module	ri data ||| ri	count=5
module	output ||| rdoc ri driver	count=2
module	up to this store ||| rdoc store	count=1
arg	options may ||| options default	count=1
arg	include_path ||| include_path	count=1
arg	tags for an ||| start stop	count=1
function_arg	a superset [arg_2] ||| [function_1] ? [arg_2]	count=1
function	handle the given list ||| handle options	count=1
function	reply 3xx reply ||| continue ?	count=1
module	hax todo deprecate and ||| testcase	count=1
function	as default [function] see basicspecification#default_gem?) ||| bundled [function] ruby	count=1
function	an openssl :x509 :name ||| email to	count=1
arg	with io ||| io level strategy	count=1
function	[function_1] [function_2] is ||| [function_1] [function_2]	count=30
function	[function_1] a class ||| proxy [function_2] [function_1]	count=1
arg	convert an object ||| obj	count=1
function	class or [function_2] ||| [function_2] [function_1]	count=3
function	documentation file for each ||| files	count=1
arg	orig if it can ||| orig	count=1
function	[returnv_1] [function_2] proc body ||| [returnv_1] [function_2]	count=1
function	record for ||| search record	count=1
function	port ||| set port	count=1
module	form ||| requestset	count=1
module	ri data ||| store	count=1
module	restrictedstream wrapping ||| gem package tarwriter restrictedstream	count=1
module	look for ||| rdoc	count=1
module	strio is ||| stringio	count=1
returnv	with ||| self	count=2
function	to detect if ||| ?	count=1
module	the job at ||| jobmanager	count=1
function_arg	[function_1] line and ||| [function_1] message column [arg_2]	count=1
function	to ||| require	count=1
function	output progress information ||| debug	count=1
function	the rdoc documentation ||| rdoc	count=1
module	a new pointer ||| fiddle pointer	count=2
function	:x509 :name ||| name	count=1
module	a [module] of results ||| [module]	count=1
function	will determine ||| recv	count=1
module	this ||| openssl	count=6
function	the digest to the ||| digest !	count=1
function_arg	[function_1] methods ||| [arg_2] [function_1]	count=1
function	gem version from the ||| gem names	count=1
module	will be set as ||| rexml	count=1
module	immediately ||| ssl	count=1
function	is transparent ||| transparency	count=1
function	code ||| code	count=1
module	block was ||| localjumperror	count=1
function	to execute ||| realtime	count=1
function	other_hash ||| merge !	count=1
function	value ||| import value	count=1
function	our parent ||| parent	count=1
function	wraps [function] ||| trust [function]	count=1
function	[function_1] response ||| [function_1] [function_2]	count=1
module	[module] is loadable ||| [module]	count=1
arg	after [arg] was ||| [arg]	count=1
module	and stat is a ||| stat	count=1
module	by ||| makemakefile	count=1
arg	arguments by ||| args	count=1
module	a set of ||| gem requestset gemdependencyapi	count=1
function	[function_1] unconverted_fields() to ||| [function_2] [function_1]	count=2
module	dsa to ||| openssl pkey dsa	count=1
function	valid [function_2] ||| [function_1] ordinal [function_2]	count=2
module	session ||| ftp	count=1
module	return the 2 dependency ||| resolver	count=1
arg	anchor a tag implicit ||| anchor tag implicit	count=1
function	setter for scope ||| set scope	count=1
module	created bigdecimal numbers to ||| bigdecimal	count=1
module	for ||| rdoc markup	count=7
function	gets all ip addresses ||| getaddresses	count=2
arg	command ||| command	count=2
module	identical ||| indexer	count=1
arg	io and yields ||| io	count=1
function	[returnv_1] [function_2] ||| time [returnv_1] [function_2]	count=2
function	[function_1] suppressed crossref ||| [function_1] [function_2]	count=1
function_arg	a new http ||| new config	count=1
function	create the directories ||| sub directories	count=1
module	don’t already ||| generator darkfish	count=1
arg	symbol to the ||| symbol	count=1
arg	in enclosing [arg_2] ||| [arg_2] [arg_1]	count=2
module	for false ‘false’ ||| json ext generator generatormethods falseclass	count=1
function	symbolic link false if ||| symlink	count=1
module	this activation is one ||| resolver activationrequest	count=1
module	object that represents ||| stringio	count=1
returnv	the value of the ||| value	count=1
function_arg	[function_1] named name ||| [function_1] [arg_2]	count=3
module	this section ||| rdoc context section	count=5
function	to ||| to	count=1
function	underlying buffer ||| write	count=1
module	be an rdoc :include ||| rdoc context	count=1
module	sets optionparser object ||| optionparser arguable	count=1
arg	does nothing [arg] ||| [arg]	count=1
module	marker for rdoc ||| rdoc stats verbose	count=1
arg	y and ||| y	count=1
module	keep_files environment variable ||| testcase	count=1
function	restricting gems to a ||| platform	count=1
returnv	string ||| string	count=43
module	full path ||| basicspecification	count=1
function	returns true [function_2] ||| [returnv_1] enterable [function_2]	count=2
function_arg	[function_1] mod ||| [function_1] [arg_2] self_hash	count=5
function	old ||| old	count=1
function	real number ||| real	count=1
returnv	return the integer ||| integer	count=1
arg	[arg_1] string ||| [arg_1] [arg_2]	count=3
arg	special ||| special	count=2
function	using that name ||| dir	count=1
module	along with a ||| net	count=1
module	full_name verifies [module] ||| [module]	count=1
function_arg	the executable [arg_2] ||| [function_1] [arg_2]	count=3
function	or a gem name) ||| for	count=1
function	that contains filename ||| result	count=1
arg	cn and a ||| cn	count=1
function	[function_1] name to ||| [function_1] [function_2]	count=2
function_arg	sends a [function_1] [arg_2] ||| net imap [function_1] [arg_2]	count=1
module	stream which ||| buffering	count=2
arg	string as ||| string	count=1
module	returns ||| win32ole_variable	count=1
arg	for the name ||| name	count=2
arg	contents of filename ||| filename	count=1
arg	of uri ||| uri	count=1
returnv	grab ||| self	count=1
arg	signing_key and signing_cert using ||| signing_key signing_cert age	count=1
function	the same type and ||| eql	count=1
arg	and prefix to ||| prefix	count=1
arg	returns true if path ||| path	count=1
function	net :http#read_timeout and ||| timeout=	count=1
arg	the #tsort method ||| each_node each_child	count=1
arg	referenced [arg] lies ||| [arg]	count=1
arg	[arg_1] options parameter ||| [arg_2] [arg_1]	count=2
module	this ||| rexml	count=10
function	for the scheme ||| scheme=	count=1
module	context ||| sslcontext	count=1
arg	integer safe - ||| safe	count=1
arg	valid for time ||| time	count=2
function	installs from ||| install from	count=1
function	skip the var ||| skip for variable	count=1
module	[module] for use ||| rdoc [module]	count=1
module	all new cgi ||| cgi	count=1
function	options to be ||| options	count=1
arg	parses [arg] as date-time ||| [arg]	count=1
module	start of the document ||| rexml document	count=1
function	log a message ||| log	count=1
function_arg	[function_1] on stderr ||| [arg_2] [function_1]	count=3
function	classes ||| classes	count=5
function_arg	[function_1] path ||| fileutils remove [function_1] secure [arg_2]	count=1
function	the owner of ||| grpowned	count=1
function	caused by premature end ||| incomplete input	count=1
arg	output) ||| output indent	count=1
function	[function_1] a der-encoded ||| [function_2] [function_1]	count=1
module	tuplebag which when ||| tuplebag	count=1
function	[function_1] a file ||| [function_2] [function_1]	count=1
module	digest can be computed ||| digest	count=1
returnv	of self for which ||| ary	count=1
module	the ruby parser ||| parser ruby	count=1
function	which has [function] ascii ||| ascii [function]	count=1
arg	[arg] same ||| name [arg]	count=1
module	point of ||| module	count=1
returnv	of ary ||| ary	count=1
module	1 rdoc ||| rdoc markup	count=1
function	protected method is ||| protected method	count=1
arg	and eid respectively ||| eid	count=1
arg	using initial_options from ::process_args ||| initial_options	count=1
function	adds pages [function_2] ||| [function_2] [function_1]	count=2
function	makefile for your extension ||| makefile	count=1
function	owner and ||| chown	count=1
function	module ||| add module	count=1
function	real user and ||| real	count=1
function	by ||| start	count=1
module	tuplebag returning the deleted ||| rinda tuplebag	count=1
module	returns ||| webrick httpstatus	count=2
function	system blocks allocated ||| blocks	count=1
function_arg	[function_1] meth ||| [arg_2] [function_1]	count=4
function	dump only the raw ||| marshal dump	count=1
function	smtps port number 465 ||| tls port	count=1
function	find a ||| find unresolved	count=1
function	certificate is generated with ||| certificate	count=1
function	less than or equal ||| <=	count=1
function	the return [function_2] ||| [returnv_1] [function_2]	count=1
function_arg	page list [arg_2] ||| [function_1] store [arg_2]	count=1
arg	other are both ||| other	count=1
module	to be csv ||| csv table	count=1
module	documentation unless ||| codeobject	count=1
function	the integer part ||| fix	count=1
function	the extension ||| extension	count=1
module	this gem is ||| gem resolver localspecification	count=1
module	section ||| rdoc context section	count=1
function	get request ||| get	count=2
arg	path is a directory ||| path	count=1
function_arg	[function_1] address from ||| [function_1] [arg_2]	count=5
module	row access ||| csv	count=1
arg	[arg_1] with text ||| [arg_2] [arg_1]	count=1
function	returns true [function_2] ||| [returnv_1] have author [function_2]	count=1
module	is ||| openssl pkey dsa	count=1
function	modules sorted by ||| sorted	count=1
function	win32 error of ||| win32 last error	count=1
module	the point of ||| module	count=1
arg	res whether that be ||| res	count=1
function	the full [function_2] ||| [function_1] [function_2]	count=1
arg	filename and returns ||| filename	count=1
module	downcases ||| generator jsonindex	count=1
function	a warning ||| alert warning	count=1
module	activationrequest that ||| gem resolver activationrequest	count=1
function	[function] clobber ||| clobber task [function]	count=2
module	date with ||| date	count=1
function	if ||| writable ?	count=1
function	the executable ||| executable	count=1
function_arg	[function_1] tk ||| [function_1] context single [arg_2]	count=1
function	[returnv_1] if ||| [returnv_1] exited [function_2]	count=1
module	and associates short ||| optionparser	count=1
module	command to identify ||| net imap	count=1
function	[returnv_1] if there ||| [returnv_1] key [function_2]	count=1
function	bindir ||| bindir	count=1
function	is [function_2] ||| [function_1] [function_2]	count=2
function	present ||| has	count=1
module	terminated and is ||| threadswait	count=1
function	still alive ||| weakref alive	count=1
function	notifications of ||| notify	count=1
returnv	rational ||| rational	count=2
function	line by using ||| dir	count=1
module	constant ||| constant	count=6
function	the difference [function] expects ||| [function]	count=1
module	of the [module] options ||| gem [module]	count=1
module	don’t already exist ||| rdoc generator	count=1
function	the version ||| version for	count=1
module	openssl :digest ||| openssl pkey	count=1
arg	the public key to ||| key	count=1
module	full ||| gem basicspecification	count=2
function	the directories ||| sub directories	count=1
function	if this is ||| ?	count=5
module	unresolved dependency ||| unsatisfiabledependencyerror	count=1
function	the day ||| day	count=1
function	[returnv_1] value ||| [returnv_1] [function_2]	count=3
function	name ||| dir	count=1
module	checks that cert ||| x509 request	count=1
function_arg	displays documentation [arg_2] ||| [function_1] [arg_2]	count=6
module	[module] of all ||| [module]	count=1
function	setter for the path ||| path	count=1
function	accept_list_item_start_note_multi_label ||| item start note multi label	count=1
module	response class and ||| net smtp response	count=1
module	[module] later ||| [module]	count=3
function	truncated to ||| to int	count=1
function	returns reference ||| ole reference	count=1
module	sends a ||| net	count=1
function_arg	binary [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] other wraps ||| [arg_2] [function_1]	count=1
module	of this array ||| array	count=1
arg	handles any encoding directives ||| encoding force_transcode	count=1
function	jobmanager in the session ||| jobmanager	count=1
module	tobs ||| tobs	count=1
function	the other parameters ||| setup	count=1
module	str into substrings based ||| string	count=1
arg	rows and columns ||| rows columns	count=3
function	the files to be ||| files	count=1
function_arg	symbolic link [arg_2] ||| [arg_2] [function_1]	count=3
arg	serves the asset at [arg_1] [arg_2] via ||| rdoc servlet asset [arg_2] [arg_1]	count=1
function	everything ||| specs unsatisfied by	count=1
arg	the string ||| string filename	count=1
function_arg	[function_1] index ||| array obj [function_1] [arg_2]	count=1
function	name from ||| name	count=1
module	that come ||| gem	count=1
function	to the output ||| block	count=1
module	properly-space list of generators ||| rdoc	count=1
function	which wraps [function] trusted certificates ||| trust [function]	count=1
module	be csv :row ||| csv table	count=1
function	the environment ||| from env	count=1
function	of the superclasses of ||| kind of	count=1
arg	[arg_1] signing_key and ||| [arg_1] [arg_2]	count=2
function	:commandprocessor ||| unalias command	count=1
module	gem help generate_index ||| gem	count=1
module	real time ||| benchmark	count=1
module	in json ||| json ext generator state	count=1
function	creates a new ||| text instance new	count=1
function	locale [function_2] ||| [function_1] [function_2]	count=1
arg	string which is ||| string data	count=1
module	this spec’s ||| gem specification	count=1
arg	httpresponse ||| initheader dest	count=1
function	teardown restores the ||| teardown	count=1
function	named constant to the ||| const	count=1
arg	[arg_1] req ||| [arg_2] [arg_1]	count=5
function	with on [function_2] ||| [function_2] [function_1]	count=3
function_arg	sends a [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	returns true [function_2] ||| [returnv_1] iterator [function_2]	count=1
module	include ||| include	count=1
function	that is a dereferenced ||| ptr	count=1
function	retrieves ||| []	count=4
module	of the [module] see eigenvaluedecomposition ||| [module]	count=1
module	the process to ||| testcase	count=1
returnv	this ||| symbol	count=1
returnv	string representation ||| string	count=1
module	as an ||| cgi	count=1
module	–platform option ||| versionoption	count=1
arg	field to value ||| field value	count=3
returnv	constructor ||| instance	count=1
function	paths in the ||| paths	count=1
function	to the [function_1] [function_2] ||| [function_2] [function_1]	count=2
function	returns true if ||| bool key ?	count=3
function	instance of each installed ||| each installed	count=2
function_arg	add [arg_2] ||| [function_1] value [arg_2]	count=1
module	to use a availableset ||| availableset	count=1
function	:markup :document from ||| parse	count=1
arg	to that of real ||| real	count=1
arg	the named files in ||| options	count=1
function	switches ||| by	count=1
function	iff there [function] following ||| [function]	count=1
module	contents of the comment ||| rexml comment	count=2
arg	as ||| as	count=1
arg	from [arg] and returns ||| [arg]	count=1
module	in the ||| gem	count=1
module	command ||| gem command	count=8
function	raw profile ||| raw	count=1
module	another version ||| gem version	count=1
function_arg	[function_1] req on ||| [arg_2] [function_1]	count=1
module	gems to a ||| gem requestset	count=1
function_arg	a mkcol [arg_2] ||| [arg_2] [function_1]	count=1
function	escapes ||| escape	count=1
function	been provided or ||| setup	count=1
function	[function] a ||| local variable [function]	count=3
module	time objects ||| time	count=1
function	result of ||| verify result	count=1
arg	returns ||| size	count=1
module	singleton class ||| rdoc	count=1
module	ios using ||| io	count=2
module	defaultfilehandler ||| httpservlet defaultfilehandler	count=1
function	the visitor ||| accept	count=4
module	marks up ||| formatter	count=1
function	[function_1] in ||| [function_1] [function_2]	count=3
module	gem dependencies files in ||| gem requestset	count=1
module	time including the ||| time	count=1
module	to ||| testcase	count=1
module	the request headers ||| webrick httprequest	count=1
function_arg	[function_1] [arg_2] ||| [function_1] get [arg_2]	count=2
function	[function_1] is not ||| [function_1] [function_2]	count=1
arg	section in the comment ||| comment	count=1
arg	if pid is ||| pid	count=1
function	the collection by result ||| by	count=1
module	sends an authenticate command ||| net imap	count=1
function	[function] a ||| zero [function]	count=1
rep	verifies [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	directories ||| sub directories	count=1
function_arg	[function_1] [arg_2] parsing ||| [function_1] [arg_2]	count=2
arg	to +@fetcher+ serving the ||| repo	count=1
function	undocumented items ||| doc stats	count=1
module	with ||| markup	count=1
function_arg	symlink [arg_2] ||| [function_1] [arg_2]	count=7
function_arg	given [function_1] [arg_2] ||| [function_1] [arg_2]	count=8
function_arg	[function_1] other ||| [function_1] big [arg_2]	count=1
arg	the given permissions ||| permissions	count=1
function	a class ||| class	count=5
function	[function_1] name to ||| [function_2] [function_1]	count=2
function	variable named by ||| variable	count=1
function	a development ||| development	count=1
function	parameters of ||| params	count=4
module	provided or that ||| drbsslsocket sslconfig	count=1
module	locale object ||| i18n locale	count=1
function	to the output dir ||| dir	count=1
function	result ||| verify result	count=1
function	returns true if ||| bool chardev ?	count=1
function	of default ||| default	count=1
function	[function_1] ip addresses ||| [function_1] [function_2]	count=3
function	and resets the digest ||| digest	count=1
function	a new key pair ||| create key	count=1
arg	from certificate with ||| certificate	count=1
function	that name ||| dir config	count=1
module	the end of parsing ||| stats	count=1
function	if they don’t ||| gen	count=1
function	type ||| type char	count=1
function	the library ||| library	count=1
module	:sslprivatekey ||| drb drbsslsocket sslconfig	count=2
arg	string source ||| source opts	count=1
function	start_accepting which needs to ||| start accepting	count=1
function	an ipv4-compatible ipv6 address ||| ipv4 compat	count=1
module	prepares the visitor ||| tordoc	count=3
function	a special ||| special	count=3
function	this object ||| new	count=1
arg	at directory root options ||| root options	count=1
function	configure various “with” options ||| config	count=1
function	method ||| data	count=1
function	returns the year ||| integer year	count=2
module	latest specification for ||| gem resolver	count=1
function_arg	[function_1] of filename ||| [arg_2] [function_1]	count=1
function	the output ||| accept block	count=1
returnv	or fractional ||| numeric_result	count=1
module	objectid as defined ||| openssl asn1 objectid	count=1
function	[function_1] directives in ||| [function_1] [function_2]	count=2
module	a new hash ||| hash	count=1
module	for ||| generator markup	count=1
function	load ||| load	count=7
arg	from offset ||| offset	count=1
module	database ||| yaml dbm	count=4
arg	subject of subject ||| subject	count=1
function	[function_1] [function_2] others returns an integer ||| fixnum world [function_2] [function_1]	count=2
function	[function] certificates ||| set [function]	count=2
module	they don’t already ||| rdoc generator	count=1
function	lines [function_2] ||| [function_2] [function_1]	count=9
function	vectors ||| vectors	count=1
module	special sequence ||| markup special	count=1
function	adds pages to the ||| pages	count=1
function	returns true [function_2] ||| [returnv_1] thread variable [function_2]	count=2
function	a private ||| private	count=1
arg	file if present ||| file	count=1
function_arg	[function_1] the uri ||| [arg_2] [function_1]	count=3
function	[function_1] and rb_define_attr ||| [function_1] [function_2]	count=1
function	create ||| sub	count=1
module	a ||| options	count=1
function	:x509 ||| email to name	count=1
arg	:specification spec into ||| spec	count=1
function_arg	[function_1] the path ||| [function_1] head [arg_2]	count=1
arg	process by running the ||| env command... options	count=1
module	default ||| net smtp	count=2
module	passwords from the database ||| webrick httpauth	count=1
function	[returnv_1] [function_2] ||| [returnv_1] chardev [function_2]	count=2
module	the arguments a command ||| command	count=1
module	version ||| version	count=4
arg	a string ||| string 1	count=2
function	that represents the ||| external	count=2
module	io object ||| io	count=1
arg	[arg_1] with indent ||| [arg_2] [arg_1]	count=2
module	[module] :notifier ||| [module] notifier	count=3
module	the po ||| rdoc generator pot po	count=1
module	the source for a ||| rexml source	count=1
module	summary table passing ||| optionparser list	count=1
arg	messages in the mailbox ||| mailbox	count=1
function	returns [function_2] ||| [function_1] [function_2]	count=15
module	an openssl :x509 :name ||| gem security	count=1
module	returns ||| logger	count=1
module	items ||| rdoc stats	count=2
function	search ||| search	count=3
function	full paths ||| full paths ?	count=2
module	encodes this asn1data into ||| openssl asn1 asn1data	count=1
module	to add ||| net	count=1
arg	[arg] because it ||| [arg]	count=1
returnv	:next :return or :noreason ||| symbol	count=1
rep	[module_1] [function_arg_2] ||| [module_1] create [function_arg_2]	count=1
function	[function_1] constant ||| [function_1] [function_2]	count=1
function_arg	gem [arg_2] ||| [function_1] dir [arg_2]	count=1
arg	the given value ||| value	count=1
function	corresponding value as a ||| value	count=1
function	up ||| convert	count=2
module	prepares the visitor ||| tomarkdown	count=1
module	id for this process ||| process	count=4
arg	issuer cn and ||| cn	count=1
arg	format the ||| format	count=1
module	case which needs ||| formattertestcase	count=1
rep	[module_1] [function_arg_2] ||| [module_1] find [function_arg_2]	count=12
function	and body of ||| and body	count=2
arg	[arg_1] length ||| [arg_1] [arg_2]	count=2
module	live in if they ||| rdoc	count=1
arg	z is given in ||| z	count=5
module	turned ||| codeobject	count=1
arg	a meta-programmed attribute and ||| context single tk comment	count=1
module	nil if argument ||| optionparser switch	count=1
module	singleton class ||| singleclass	count=1
function	the encoding magic comment ||| coding comment	count=1
function	get all gem version ||| get all gem names	count=1
arg	requirement the requirement that ||| requirement	count=1
function	record ||| record	count=2
returnv	value ||| value	count=3
rep	[module_1] file name ||| [module_1] [function_arg_2]	count=4
function_arg	default specs ||| default gems specs	count=1
returnv	subsequently defined ||| self	count=1
returnv	returns an exception ||| exception	count=1
function	a device file ||| file	count=1
function	the ||| doc stats	count=1
arg	on front with a ||| front	count=1
function	removes a header field ||| delete	count=1
arg	[arg_1] [arg_2] the ||| [arg_2] [arg_1]	count=14
module	lock ||| source lock	count=1
function_arg	[function_1] tag tag ||| [function_1] [arg_2]	count=2
function_arg	file matching [arg_2] ||| [arg_2] [function_1]	count=2
arg	[arg_1] pattern ||| [arg_2] [arg_1]	count=13
arg	named [arg_2] ||| [arg_2] [arg_1]	count=3
module	to #do_write for ||| rinda	count=1
function	using the io ||| io	count=1
function	raw rfc2965 cookies as ||| raw cookie2	count=1
function	the underlying ||| write	count=1
rep	[module_1] [function_arg_2] ||| [module_1] get [function_arg_2]	count=8
arg	the information about ole ||| ole_type	count=1
function	opens a message writer ||| open message	count=1
returnv	a pathname to an ||| abs_file_name	count=2
function	size ||| size	count=9
arg	[arg_1] and port ||| [arg_1] [arg_2]	count=1
returnv	as a string ||| string	count=2
module	instruction sequence and returns ||| rubyvm instructionsequence	count=1
arg	month day [arg_2] ||| [arg_2] [arg_1]	count=5
module	gems to a set ||| requestset gemdependencyapi	count=1
module	asks the ||| userinteraction	count=1
arg	values associated [arg] keys but ||| [arg]	count=1
function	[function_1] close ||| [function_1] [function_2]	count=1
module	expiry time is the ||| rinda tupleentry	count=1
function_arg	map with anchor ||| start mapping anchor	count=2
module	win32ole_method object ||| win32ole_method	count=1
arg	name exception [arg] ||| [arg]	count=1
module	then ||| makemakefile	count=1
function	handler and replaces the ||| handler	count=1
function_arg	[function_1] [arg_2] ||| [function_1] tag [arg_2]	count=6
function_arg	[function_1] string to ||| [arg_2] [function_1]	count=1
function	a development [function_2] ||| [function_2] [function_1]	count=1
arg	meta-programmed attribute and ||| single tk comment	count=1
function_arg	and object [arg_2] ||| [arg_2] [function_1]	count=1
function	there [function] following ||| [function]	count=1
function	resets the digest to ||| digest !	count=1
arg	by pid ||| pid raise	count=1
arg	matched to pattern ||| pattern n	count=1
function	list of break ||| break	count=1
function	the protected ||| protected	count=1
arg	from a string according ||| string 1 jan -4712 00:00:00 +0000' start	count=2
module	for directives in ||| rdoc markup preprocess	count=1
module	the [module] false otherwise ||| [module]	count=1
module	locale ||| i18n locale	count=1
module	rdoc :markup :document ||| rdoc rd blockparser	count=1
module	resolver object which will ||| resolver	count=1
arg	a string ||| string 1 jan -4712 00:00:00 +0000'	count=2
function	prepares the visitor for ||| start	count=7
function	the given string or ||| key	count=1
function_arg	[function_1] expired_certificate ||| [arg_2] [function_1]	count=1
function_arg	[function_1] for selector ||| [arg_2] [function_1]	count=4
function	look up a module ||| module	count=1
returnv	[returnv] message ||| [returnv]	count=1
module	this [module] is less ||| [module]	count=1
function	pattern for ||| pattern	count=1
arg	as an httpresponse ||| data initheader	count=1
module	of the list ||| list	count=1
module	digest is set ||| openssl digest	count=1
module	stat ||| process status	count=1
arg	mode with opt ||| opt	count=1
module	[module] to column ||| [module]	count=1
function	render the erb template ||| render template	count=1
function	a file ||| file	count=2
module	of the [module] to the ||| [module]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] url [arg_2]	count=19
function_arg	local [arg_2] ||| [function_1] set [arg_2]	count=1
module	[module] by x ||| [module]	count=2
function	match the latest version ||| specific	count=2
arg	bits from start ||| start length bits	count=2
module	to the context ||| context	count=1
module	up ||| markup tohtmlsnippet	count=2
module	marks ||| rdoc markup	count=2
arg	wraps the ||| ptr	count=1
function	returns a ||| to s	count=1
function	the machine ||| size	count=1
module	all prime ||| prime	count=1
function	from ||| initialize copy	count=1
function	of commands as a ||| start	count=1
function	the unique classes and ||| unique classes and	count=1
module	and number ||| rdoc	count=1
function	insert text into the ||| insert text	count=1
module	available for ||| sslsocket	count=1
module	how often [module] should be ||| [module]	count=1
module	nkf routine ||| nkf	count=1
arg	ary with an optional ||| ary	count=1
module	doctype includes an ||| rexml	count=1
function	#convert but for header ||| header	count=1
module	array of nametuple objects ||| nametuple	count=1
function	prepares ||| list item	count=4
arg	defines a method method ||| method	count=1
function_arg	cross-references in [arg_2] ||| [arg_2] [function_1]	count=1
module	following configuration being created ||| config	count=1
function	the imaginary part ||| imaginary	count=1
module	will live ||| darkfish	count=1
function	test ||| test accept document	count=1
arg	date-time object [arg] ||| [arg] hour minute second	count=1
arg	both [arg] and ||| [arg]	count=2
function_arg	body [arg_2] ||| [function_1] [arg_2]	count=1
arg	string name ||| name	count=2
module	unless documentation has ||| rdoc	count=1
module	name to ||| name	count=1
arg	out_stream for [arg_2] ||| [arg_1] [arg_2]	count=2
function	set the platform ||| util set	count=1
module	from this hash instance ||| generator generatormethods hash	count=1
module	this request is for ||| webrick httprequest	count=2
arg	[arg_1] and base_notifier ||| [arg_1] [arg_2]	count=3
arg	at location ||| location	count=1
function	[function] certificate ||| [function]	count=2
arg	a gdbm [arg] ||| [arg]	count=1
module	the visitor for ||| rdoc markup totableofcontents	count=1
arg	[arg_1] [arg_2] ||| [arg_1] target [arg_2]	count=8
module	as row ||| csv	count=1
module	mod except ||| module	count=1
module	:drbobject given the ||| drbobject	count=1
module	this context ||| rdoc context	count=5
arg	as the label ||| label	count=1
module	an openssl ||| openssl	count=1
rep	creates [function_arg_2] ||| [module_1] [function_arg_2]	count=11
function	[function_1] the key ||| [function_2] [function_1]	count=6
arg	uri with configuration config ||| uri config first	count=1
module	with on the ||| makemakefile	count=1
function	represents saturday ||| saturday	count=1
module	header fields and ||| httpheader	count=1
function	[returnv_1] [function_2] ||| [returnv_1] start with [function_2]	count=1
module	net :http#read_timeout and net ||| xmlrpc	count=1
module	a [module] :requirement object ||| [module]	count=1
module	available for ||| ssl sslsocket	count=1
function	stop [function_2] ||| [function_2] [function_1]	count=4
arg	that the dependency ||| spec dependency	count=1
arg	obj is an ||| rng obj	count=1
function	combine ||| crc32 combine	count=1
arg	[arg] must contain ||| is_ret [arg]	count=2
returnv	self ||| self	count=2
function	components defined from ||| component ary	count=1
module	a newly allocated pty ||| pty	count=1
function_arg	[function_1] [arg_2] ||| datetime datetime [function_1] [arg_2] offset start	count=2
module	disables coverage measurement ||| coverage	count=1
returnv	of its ||| float	count=1
function	a der-encoded ||| to der	count=1
function_arg	xlist [arg_2] ||| net imap [function_1] [arg_2]	count=1
module	of bytes that ||| openssl ssl sslsocket	count=1
module	just the text ||| tolabel	count=1
function	[function_1] installed ||| [function_1] [function_2]	count=7
module	the ri ||| rdoc ri	count=1
function	extensions [function] ||| add [function]	count=2
module	for marking ||| generator	count=1
arg	comment by looking for ||| container tk	count=1
arg	a prefix or the ||| prefix	count=1
module	the generated json to ||| json ext generator state	count=1
function	returns a hash ||| to hash	count=2
function	limit the ||| limit	count=1
function	the spec [function_2] ||| [function_2] [function_1]	count=1
arg	in mutex and ||| mutex	count=1
function_arg	[function_1] src and ||| [function_1] [arg_2]	count=1
module	that cert signature is ||| openssl x509	count=1
function	dependency is ||| ?	count=1
function	handler [function_2] ||| [function_2] [function_1]	count=2
module	rdoc :markup ||| rdoc classmodule	count=1
module	list and all ||| rdoc markup list	count=1
function	returns true if ||| bool empty ?	count=3
function	the visitor for ||| item	count=4
function_arg	limit the [arg_2] ||| [function_1] [arg_2]	count=1
function	add a [function_2] ||| [function_1] [function_2]	count=1
arg	function named symbol ||| symbol	count=1
function	suppressed crossref ||| suppressed crossref	count=2
function	the rdoc options to ||| rdoc options	count=1
module	this state ||| ext generator state	count=1
arg	directory root options may ||| root options default	count=1
function_arg	send mesg ||| send mesg	count=1
module	just initializes all ||| optionparser list	count=1
function	set the platform ||| set	count=1
arg	state of ||| state	count=1
function	adds ||| add method	count=1
module	checks that cert signature ||| openssl x509	count=1
module	analysis and documentation ||| basicspecification	count=1
arg	module given as a ||| module	count=1
arg	prefix to send to ||| prefix	count=1
arg	whenever [arg] current ||| [arg]	count=1
function	changes the parameters of ||| params	count=1
function	headers are [function_2] ||| [function_2] [function_1]	count=6
module	block form ||| gem	count=1
module	ringfinger that will ||| rinda ringfinger	count=1
function	returns a relative ||| relative	count=1
arg	which has [arg] as the ||| [arg] stime cutime cstime	count=1
function	power of ||| power	count=1
module	net :smtp object ||| net smtp	count=1
function_arg	all gems [arg_2] ||| [function_1] [arg_2]	count=1
function	integer memory location ||| i	count=1
module	files so that all ||| specification	count=1
arg	without opening a tcp ||| address port p_addr p_port p_user p_pass	count=1
module	the last component ||| pathname	count=1
module	to the http ||| http	count=1
function	constant to ||| const	count=1
module	see psych ||| psych	count=1
function	[function_1] name of ||| [function_1] [function_2]	count=1
module	time used to ||| benchmark	count=1
module	don’t ||| generator	count=1
module	the net :http#read_timeout and ||| client	count=1
arg	tag a ||| tag	count=1
function_arg	[function_1] [arg_2] into ||| [function_1] [arg_2]	count=4
function	no handler [function_2] ||| [function_2] [function_1]	count=2
module	polar ||| complex	count=1
function	list ||| generator	count=1
module	the po entry ||| generator pot poentry	count=1
arg	the gems in specs ||| specs	count=1
module	tobs that is ready ||| markup tobs	count=1
function_arg	the buffer [arg_2] ||| [function_1] initial length= [arg_2]	count=1
function	the variable ||| variable	count=1
module	sometimes [module] results ||| [module]	count=1
module	hax ||| testcase	count=1
arg	integer index ||| index	count=1
function	[function_1] unique local ||| [function_1] [function_2]	count=2
module	new [module] :scalar object ||| [module]	count=1
module	this edge represents @return ||| gem resolver molinillo	count=1
module	form for restricting gems ||| requestset	count=1
function	modules in ||| modules	count=1
module	up ||| rdoc markup tohtmlsnippet	count=2
arg	of event ||| event tuple	count=1
function	returns true [function_2] ||| [returnv_1] [function_2] ? symbol	count=1
module	a rdoc :markup :document ||| rdoc ri driver	count=1
module	array that ||| array	count=1
arg	[arg_1] dir ||| [arg_2] proc [arg_1]	count=1
returnv	that represents the ||| encoding	count=2
function	debug information ||| debug	count=1
arg	as an httpresponse ||| initheader	count=1
arg	function ||| function	count=1
function	doctype is ||| doctype	count=1
function	installs the default irb ||| install extend	count=1
module	:sslcertificate and :sslprivatekey ||| drb drbsslsocket	count=1
function	[function_1] [function_2] ||| [function_2] env [function_1]	count=7
function_arg	[function_1] length ||| [arg_2] [function_1]	count=2
arg	setting ||| single	count=1
function	[function_1] module ||| [function_2] [function_1]	count=12
module	file or nil ||| file stat	count=1
function	until ||| until	count=1
function	first comment in a ||| collect first comment	count=1
arg	by ||| enum	count=1
arg	to rows ||| rows	count=1
module	registers for ||| rinda tuplespace	count=1
function	the last error ||| last error	count=2
module	the ||| drb drbsslsocket	count=1
module	–version option to ||| gem versionoption	count=1
module	depending on the level ||| levelednotifier	count=1
function	constant with the given ||| const get	count=1
function	instance of class klass [function_1] [function_2] ||| [function_2] with [function_1] klass	count=2
module	and stat ||| stat	count=1
function_arg	verify to [arg_2] ||| [function_1] spec [arg_2]	count=1
arg	and [arg] ||| obj) [arg]	count=1
module	gem to ||| gem	count=1
module	the [module] variables does ||| [module]	count=1
function	checks the [function_2] ||| [function_2] [function_1]	count=1
arg	the depth ||| depth	count=1
returnv	default visibility ||| self	count=1
function	[returnv_1] [function_2] ||| [returnv_1] deletable [function_2]	count=4
function	read using shutdown system ||| read	count=1
module	command that waits ||| net imap	count=1
function	[function_1] named constant ||| [function_2] [function_1]	count=2
arg	text name [arg_2] ||| [arg_1] [arg_2]	count=3
arg	context of this ||| context statements file	count=1
module	block form for restricting ||| gem	count=1
arg	a sequence with anchor ||| anchor	count=1
function_arg	relative [arg_2] ||| [arg_2] [function_1]	count=1
function	are [function] ||| [function]	count=3
module	the [module] :store if ||| [module] parser	count=1
function	generates a ||| generate	count=1
module	given ||| class	count=1
arg	with value or ||| value	count=1
module	the other ||| drb drbsslsocket	count=1
function_arg	[function_1] text ||| [arg_2] [function_1]	count=9
module	a class header ||| rdoc ri driver	count=1
module	prepares the ||| markup tomarkdown	count=1
function	second containing the rest ||| partition	count=1
arg	message to ||| message	count=1
arg	valid for time and ||| time	count=1
module	described in gem ||| gem	count=1
arg	want to modify the ||| safe add parent &b;	count=3
function	get all gem ||| get all gem names and	count=1
function	[returnv_1] if ||| [returnv_1] disconnected [function_2]	count=1
module	digest can be ||| openssl digest	count=1
function_arg	a file [arg_2] ||| [function_1] [arg_2]	count=1
function	returns [returnv_1] [function_2] a matrix ||| [returnv_1] [function_2]	count=1
arg	anchor tag [arg_2] ||| [arg_1] [arg_2]	count=4
arg	with [arg] ||| [arg]	count=5
module	feed or any ||| feed	count=1
function_arg	value of big is [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	a clone of this ||| clone	count=1
module	:sslcertificate ||| sslconfig	count=1
arg	with name [arg_2] ||| [arg_2] [arg_1]	count=6
function	if not ||| commercial ?	count=1
function	non-blocking manner ||| nonblock	count=1
function	[returnv_1] [function_2] represents the encoding for ||| encoding [returnv_1] [function_2]	count=1
function	rdoc ||| rdoc	count=4
module	the generated docs ||| generator	count=1
arg	text name ||| text name	count=2
function_arg	comment [arg_2] ||| [arg_2] [function_1]	count=1
returnv	array of the corresponding ||| array	count=1
function	reads the ||| read	count=1
module	documentation has ||| codeobject	count=1
function	removes from ||| remove	count=1
function	[function_1] message writer ||| [function_2] [function_1]	count=1
arg	the block passed ||| &block;	count=1
module	use [module] ||| [module]	count=1
module	[module] are equal ||| gem [module]	count=1
module	pop3 session and iterates ||| net pop3	count=1
arg	[arg_1] [arg_2] string and returns the ||| dir matches glob [arg_2] [arg_1]	count=4
module	with [module] :paragraph ||| [module]	count=1
arg	tree starting with needed ||| needed set	count=1
module	:http#read_timeout and ||| xmlrpc client	count=1
function	of heading ||| heading	count=1
arg	a ||| domain	count=1
function_arg	[function_1] of decimal ||| [function_1] [arg_2]	count=4
function_arg	[function_1] of list ||| [function_1] [arg_2]	count=2
arg	corresponding values in other_str ||| other_str	count=1
function	a block in ||| block	count=1
arg	cpu time cutime ||| cutime	count=1
function	directory to it for ||| dir	count=1
function_arg	local [arg_2] ||| [arg_2] [function_1]	count=1
module	they don’t already exist ||| generator	count=1
module	requested gem ||| gem resolver activationrequest	count=1
module	docs will live ||| generator	count=1
arg	to out_stream [arg_2] ||| [arg_1] [arg_2]	count=2
arg	text to the left ||| text	count=1
function	prepares the visitor for ||| accept list item start	count=4
function	of time in the ||| time	count=1
function	an array of extra ||| specific extra	count=1
function_arg	from the [arg_2] ||| [arg_2] [function_1]	count=3
function	source ||| source	count=4
function	[function_1] resolution ends ||| [function_1] [function_2]	count=1
function	output ||| accept block quote	count=1
module	from this ||| gzipreader	count=1
function	[function_1] the instance ||| [function_2] [function_1]	count=1
function	server alive? ||| alive	count=1
function	[returnv_1] if the ||| [returnv_1] pipe [function_2]	count=2
function	comment ||| attr comment	count=1
function_arg	[function_1] message ||| [arg_2] [function_1]	count=4
module	to ||| openssl	count=1
module	specification is properly formatted ||| gem specification	count=1
function	a special handler ||| special	count=1
module	allocated pty ||| pty	count=1
function	factory [function] a ||| [function]	count=1
function	[returnv_1] if the ||| [returnv_1] thread variable [function_2]	count=1
function	time ||| time	count=4
function	all tuples in ||| all	count=1
arg	spec to [arg_2] ||| [arg_2] [arg_1]	count=4
module	in this package ||| gem package old	count=1
module	uri of the remote ||| drb drbobject	count=1
arg	pairs with ||| pairs	count=1
function	path from ||| path from	count=2
module	as a [module] of ||| [module]	count=1
function	[function_1] [function_2] ||| [function_2] plain auth [function_1]	count=1
function	encoding ||| external encoding	count=2
rep	given [function_arg_2] ||| [module_1] [function_arg_2]	count=1
module	environment variable names ||| env	count=1
arg	anchor element ||| href	count=1
module	rdoc :attr from comment ||| rdoc parser	count=1
module	files so that all ||| gem	count=1
arg	given begin [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg] via ||| [arg] req	count=1
function	have a ||| ?	count=1
arg	value please have ||| value tag tag_class	count=2
function	finds the template dir ||| dir	count=1
module	elapsed real ||| benchmark	count=1
module	directly on the text ||| text	count=1
module	parameters ||| drb drbsslsocket	count=1
returnv	constructor @param parent if ||| instance	count=1
arg	for name from ||| name	count=2
function	full ||| full	count=5
module	for use by ||| generator	count=1
function	handy wrapper for ||| description	count=1
arg	on server that ||| server	count=1
module	convert self to ||| string	count=3
module	for html ||| rdoc markup	count=1
function	guesses the type of ||| type	count=1
arg	path returning the ||| path	count=1
arg	front with a description ||| front	count=1
module	serialized ||| marshal	count=1
module	new array that is ||| array	count=1
function	escapes special sequences of ||| sequences	count=1
module	pathname begins with ||| pathname	count=1
module	get ||| drb drbobject	count=3
function	original [function_2] ||| [function_2] [function_1]	count=3
module	by the resolver to ||| gem resolver	count=1
function	self is a class ||| class	count=1
arg	a tag [arg_2] ||| [arg_1] [arg_2]	count=1
returnv	returns the number of ||| integer	count=1
arg	the access ||| atime	count=1
function	consuming [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] singleton ||| [arg_1] [arg_2]	count=1
function	object#inspect ||| inspect	count=2
function	directives ||| directives	count=1
arg	src [arg_2] ||| [arg_1] [arg_2]	count=2
function	each key [function] ||| each [function]	count=1
function	auth ||| auth	count=3
function_arg	parses [arg_2] ||| [function_1] [arg_2]	count=14
function	methods ||| method	count=1
arg	the dependency is ||| spec dependency	count=1
arg	directives in comment ||| comment	count=1
function	prepares the visitor for ||| list	count=4
module	the keep_files environment ||| gem	count=1
module	to [module] ||| openssl [module]	count=1
function	live ||| sub	count=1
arg	needed dependency objects ||| needed set	count=1
function	get request to ||| get	count=1
module	with the name ‘pl’ ||| gem testcase specfetchersetup	count=1
returnv	was ||| symbol	count=1
module	for marking ||| rdoc generator markup	count=1
function_arg	[function_1] other according ||| webrick httpversion [function_1] [arg_2]	count=1
function	version of a gem? ||| version	count=1
function	[returnv_1] [function_2] ||| [returnv_1] satisfied by [function_2]	count=1
arg	length bytes ||| name length	count=1
arg	file_name content [arg_2] ||| [arg_2] [arg_1]	count=5
module	if ||| darkfish	count=1
function_arg	parses the inline ||| parse inline	count=2
function	[function_1] closed ||| [function_2] [function_1]	count=4
arg	socket connected [arg] ||| [arg]	count=2
arg	a match for name ||| name	count=1
function	the private instance ||| private instance	count=2
function	for ||| accept list item start	count=4
function	if the remote object’s ||| ===	count=1
module	the [module] by ||| [module]	count=2
arg	file_name doesn’t ||| file_name	count=2
function	to convert ||| convert	count=4
module	generate [module] ||| [module]	count=2
arg	the context of this ||| context	count=1
arg	formats time as ||| time	count=1
function	cache template for ||| template for	count=2
function	[returnv_1] [function_2] there are any authors ||| [returnv_1] [function_2]	count=1
arg	[arg_1] [arg_2] - bn rem - ||| [arg_1] [arg_2]	count=12
function	specs ||| compact specs	count=1
function	string [function_2] ||| [function_2] [returnv_1]	count=10
function_arg	[function_1] for pattern ||| [function_1] [arg_2]	count=3
module	gems to a set ||| gem requestset	count=1
function	a rename ||| rename	count=1
arg	start and stop ||| start stop	count=2
module	known specs ||| specification	count=1
module	the deflate stream ||| zlib deflate	count=2
arg	a string ||| string 1 jan	count=2
function	path to ||| cert path	count=1
function_arg	scalar [arg_2] ||| [function_1] [arg_2]	count=1
function	load ||| load from binary	count=1
module	gem couldn’t be found ||| gem	count=1
function	runtime dependency named ||| runtime dependency	count=1
arg	time cstime as ||| cstime	count=1
function	close command to close ||| close	count=1
function	[function_1] name of ||| [function_2] [function_1]	count=1
module	first digit of ||| response	count=1
function	the exit ||| exit	count=1
function	returns true [function_2] ||| [returnv_1] julian leap [function_2]	count=4
function	the current specs ||| specs	count=1
arg	[arg_1] and name ||| [arg_2] [arg_1]	count=2
function	superclasses of obj ||| kind of	count=1
function	removes ||| delete	count=3
module	initialized when ||| syslog	count=1
arg	the referenced [arg] lies ||| [arg]	count=1
function	prepares the ||| list item start	count=4
function	discarded bytes ||| error bytes	count=2
module	grab the ||| mutex	count=1
function	[returnv_1] [function_2] the ||| [returnv_1] member [function_2]	count=2
arg	a temporary file ||| basename tmpdir	count=1
arg	in a document-class ||| class_mod	count=1
function	[function] bytes of ||| [function]	count=4
returnv	number of bytes ||| integer	count=1
function	[function] when ||| [function]	count=1
function_arg	time from [arg_2] ||| [function_1] [arg_2]	count=1
function	encoding object that ||| external	count=2
arg	creates a temporary ||| tmpdir	count=1
module	anymethod ||| anymethod	count=1
function	first [function_2] ||| [function_2] [function_1]	count=3
module	expiry time is ||| rinda tupleentry	count=1
function	sends a trace request ||| trace	count=1
arg	enumerable object ||| enum	count=2
arg	consuming list_item ||| list_item	count=4
module	specification ||| gem specification	count=9
function	[function_1] message ||| [function_1] [function_2]	count=1
function	of ||| platform	count=1
function	[function_1] text child ||| [function_2] [function_1]	count=1
module	this [module] assumed to ||| csv [module]	count=1
function	closed on ||| on	count=1
arg	the given representation ||| string comp	count=2
function_arg	verify [arg_2] ||| [function_1] spec [arg_2]	count=1
module	prepares the visitor for ||| markup tottonly	count=1
module	form for restricting ||| gemdependencyapi	count=1
module	are immediately ||| ssl sslsocket	count=1
arg	adds the object_id id ||| id	count=1
module	undocumented items in ||| rdoc	count=1
arg	from given str ||| str enc separator: '&' use__charset_: false isindex:	count=1
function	copies [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] obj’ ||| [function_1] [arg_2]	count=2
module	server uses ||| httpserver	count=1
function	device ||| reopen	count=1
function_arg	comparison [arg_2] ||| [arg_2] [function_1]	count=6
arg	class klass ||| klass	count=1
function_arg	copy request [arg_2] ||| [arg_2] [function_1]	count=1
module	[module] a ||| rdoc markup [module]	count=1
module	dlclose() when this ||| fiddle	count=1
function	is the owner ||| grpowned	count=2
module	systemexitexception with the ||| systemexitexception	count=1
function	if stat terminated because ||| ?	count=1
function	a ||| generator	count=1
function	prefix for ||| prefix	count=2
function	add the ||| add platform	count=1
returnv	number of the ||| fixnum	count=1
arg	format ||| format	count=1
module	an [module] instance ||| [module]	count=1
arg	to pattern ||| pattern n	count=1
arg	the given patterns i ||| pat1 pat2	count=1
function	quirks ||| quirks	count=1
function	[function_1] out that ||| [function_2] [function_1]	count=2
module	enumerates ||| rdoc servlet	count=1
module	factorization and returns ||| integer	count=1
module	is in conflict with ||| resolver conflict	count=1
function	result ||| result	count=1
arg	given hash to a ||| hash	count=1
returnv	of the file ||| encoding	count=2
module	a properly-space list of ||| rdoc	count=1
function	of free spaces in ||| avail out	count=1
function	of [function_2] ||| [function_2] [returnv_1]	count=1
function	rfc 2822 ||| rfc2822	count=1
arg	to maxlen bytes from ||| maxlen	count=1
function	[returnv_1] if this ||| [returnv_1] header row [function_2]	count=1
function	and render the erb ||| render	count=1
arg	signer is valid ||| signer	count=1
function	raw [function_2] ||| [function_2] [function_1]	count=3
function	* 12) ||| year	count=2
module	dependency will ||| dependency	count=1
function	name including ||| name	count=1
module	probably want [module] ||| [module]	count=1
arg	other refer ||| other	count=1
module	marking up this ||| rdoc	count=1
module	add ||| rdoc markup formatter	count=1
function	from the environment ||| from env	count=1
function_arg	and [arg_2] ||| [function_1] uri [arg_2]	count=1
module	to request a ||| net	count=1
arg	src and returns an ||| src	count=1
module	in if they ||| rdoc generator	count=1
function	of dependencies that ||| dependencies	count=1
arg	the reference to the ||| ref	count=1
arg	using the given path ||| path	count=1
function	thread-local ||| thread	count=1
function_arg	[function_1] [arg_2] and returns self ||| [function_1] [arg_2]	count=9
function_arg	[function_1] [arg_2] terms a human can ||| [function_1] [arg_2]	count=3
returnv	returns the ||| bool	count=4
module	:gc_invoke_time ||| gc profiler	count=1
module	socket option name as ||| socket option	count=1
function	[function_1] from ||| [function_2] [function_1]	count=6
function	provided block ||| generate	count=1
module	objectid to ||| openssl asn1 objectid	count=1
arg	tag [arg_2] ||| [arg_2] [arg_1]	count=5
module	[module] file ||| rdoc [module]	count=3
function	with a prefix ||| proc	count=1
function	determine the status type ||| status type char	count=1
function_arg	scope [arg_2] ||| [arg_2] [function_1]	count=2
module	elements ||| elements	count=1
module	entire [module] to ||| [module]	count=1
module	tcl/tk variable using set’ ||| tcltkvariable	count=1
rep	computes [function_arg_2] ||| [module_1] [function_arg_2]	count=12
function	[function] in remotefile ||| [function]	count=2
module	elapsed ||| benchmark	count=1
function	classes and modules ||| classmodule	count=1
arg	by forwarding the call ||| m include_private	count=1
arg	undocumented classes also_in to ||| also_in	count=1
arg	sets the status ||| status	count=1
arg	object @param arg either ||| arg	count=1
function	sorted by ||| get sorted	count=1
function	with ||| named from	count=1
function	calculate ||| set ctypes	count=1
returnv	:redo :retry :next ||| symbol	count=1
function	has [function] ascii ||| ascii [function]	count=1
arg	into destination_dir if pattern ||| destination_dir pattern	count=1
function	the inverse of ||| inv	count=1
function	comment for ||| attr comment	count=1
function	finds all ||| find all template	count=2
module	form ||| gem	count=1
function	a new resolver ||| new	count=1
arg	sets the ||| val	count=1
function	the unknown ||| unknown	count=1
function	returns the ||| []	count=1
module	with the other ||| sslconfig	count=1
function	[function_1] this is ||| [function_1] [function_2]	count=1
function	[function_1] unique local ||| [function_2] [function_1]	count=2
function	[returnv_1] if stat ||| [returnv_1] coredump [function_2]	count=1
arg	[arg_1] options and ||| [arg_2] [arg_1]	count=3
arg	out a fully formed ||| out	count=1
module	of ||| gem specification	count=1
module	certificate store ||| x509 store	count=1
module	given command ||| gem command	count=1
function	paths for ||| also in	count=1
module	generated json to the ||| json ext generator	count=1
function	openssl ||| email	count=1
module	@return edge the ||| gem resolver molinillo	count=1
arg	sep or ||| sep	count=2
function	the integer [function_2] ||| [returnv_1] [function_2]	count=1
arg	is implicit ||| implicit	count=1
arg	remote host uri ||| uri	count=1
function	from ||| name	count=1
function	for header ||| header convert	count=1
arg	[arg_1] [arg_2] ||| [arg_2] path [arg_1]	count=1
arg	[arg_1] mode linking ||| [arg_1] target [arg_2]	count=1
arg	for each to comment ||| comment	count=1
function	julian ||| julian	count=1
function	message at the error ||| error	count=1
arg	start and ||| start	count=2
arg	for name from the ||| name	count=2
arg	given in file_name ||| file_name suffix	count=1
module	and :sslprivatekey have been ||| drbsslsocket	count=1
module	use with analysis ||| basicspecification	count=1
module	the target thread ||| thread	count=1
function	returns rdoc [function] ||| [function]	count=1
function	self to euc-jp ||| toeuc	count=1
module	already ||| generator darkfish	count=2
module	the stream ||| openssl buffering	count=3
arg	and ||| format	count=1
module	is initialized when the ||| syslog	count=1
function	returns a string ||| as string	count=1
module	openssl :x509 :name ||| gem security	count=1
function_arg	[function_1] meta-programmed attribute ||| [arg_2] [function_1]	count=1
arg	in string in ||| string filename lineno	count=1
function	starts ||| start	count=3
function	a special handler for ||| special	count=1
module	to latest by :gc_invoke_time ||| gc profiler	count=1
function	for the first ||| collect first	count=1
arg	parsing from a string ||| string 1	count=2
function	url to ||| url	count=1
function	return internal ||| internal	count=1
function_arg	requirement of [arg_2] ||| [arg_2] [function_1]	count=1
module	specified by case-insensitive ||| net httpheader	count=1
module	the directory may be ||| net ftp mlsxentry	count=1
function	at the ||| at	count=1
function_arg	[function_1] parts ||| [function_1] [arg_2]	count=2
function	parse the yaml document ||| parse	count=1
module	of the peer ||| openssl ssl sslsocket	count=1
function	of the case-insensitive flag ||| casefold ?	count=1
function	deletes the given ||| delete ?	count=1
function	the digest ||| digest	count=1
function	[function_1] [function_2] ||| [function_2] row [function_1]	count=8
arg	threads to ||| threads	count=1
module	been ||| drb	count=1
function	link-local ||| linklocal	count=1
arg	object connected to host ||| host	count=1
function	row ||| row	count=7
module	is encountered in ||| rexml streamlistener	count=1
module	the installed gem ||| gem installer	count=1
module	a [module] same ||| [module]	count=1
returnv	elements of self which ||| ary	count=1
function	returns the list of ||| list	count=1
module	tuple that ||| rinda	count=1
function	of a mapping ||| mapping	count=1
arg	store ||| store	count=8
arg	in io [arg_2] ||| [arg_2] [arg_1]	count=1
module	generates documentation for ||| rdoc rubygemshook	count=1
function	returns true if ||| bool field ?	count=1
function	method for root directories ||| root ?	count=1
function	authentication ||| auth	count=1
module	restricting ||| requestset	count=1
module	restricting gems to ||| gem requestset gemdependencyapi	count=1
function	[function_1] auth ||| [function_2] [function_1]	count=3
arg	server [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function] but ||| bundled gem [function]	count=3
module	header names ||| net httpheader	count=2
arg	[arg] or ||| [arg]	count=1
function	activates ||| use gemdeps	count=1
function_arg	dir for [arg_2] ||| [function_1] [arg_2]	count=1
module	set ||| parent	count=1
function	if there ||| has key ?	count=2
function	[returnv_1] canceled status ||| [function_2] [returnv_1]	count=1
function	set up a new ||| initialize	count=1
arg	encoding encoding ||| encoding	count=1
module	which stat ||| file stat	count=1
module	returns nil if argument ||| optionparser switch placedargument	count=1
module	the ||| singleclass	count=1
arg	in context ||| context	count=2
arg	@param arg either ||| arg	count=1
module	mixin ||| mixin	count=1
module	of ||| gem requestset gemdependencyapi	count=2
function	[function_1] [function_2] and ||| [function_1] includes and [function_2] for	count=3
arg	service running on front ||| front desc	count=1
module	checks that cert ||| openssl x509 certificate	count=1
function	[function] the ||| cert [function]	count=3
function	[function_1] profile data ||| [function_1] [function_2]	count=4
module	:sslcertificate and ||| drb drbsslsocket sslconfig	count=1
function	[function_1] version of ||| [function_1] [function_2]	count=3
module	that glob will be ||| gem	count=1
module	and creates an rdoc ||| rdoc	count=1
module	date object ||| date	count=1
function	the block [function_2] ||| [function_2] [function_1]	count=3
module	will ||| rdoc generator	count=1
function	the stream is ||| stream end	count=1
arg	from arg ||| arg	count=1
function	parent ||| parent	count=2
function	[returnv_1] if key ||| [function_2] [returnv_1]	count=2
function	[function_1] hash ||| [function_2] [function_1]	count=7
function	default [function] of the ||| spec [function]	count=1
module	the output ||| markup tordoc	count=1
arg	out with [arg_2] ||| [arg_1] methods [arg_2]	count=1
module	that a new ||| drb	count=1
module	this context’s top ||| context	count=1
module	the remote ||| drb drbobject	count=1
module	are ||| openssl ssl	count=1
module	digest algorithm i ||| openssl digest	count=1
returnv	returns the string representation ||| string	count=1
function	[returnv_1] if the ||| [returnv_1] disjoint [function_2]	count=1
function_arg	associated [arg_2] ||| [arg_2] [function_1]	count=2
module	the visitor for html ||| rdoc markup	count=1
module	resolver :dependencyrequest ||| gem resolver requirementlist	count=1
module	exist ||| darkfish	count=1
rep	the [module_1] [function_arg_2] ||| [module_1] bool [function_arg_2]	count=6
returnv	returns the process group ||| integer	count=1
function	set is a superset ||| superset	count=1
arg	date as a datetime ||| date	count=1
function	private key ||| private ?	count=1
module	html-safe label ||| markup tolabel	count=1
arg	or the attribute ||| attribute	count=1
module	this dsa ||| pkey dsa	count=1
function	beginning ||| begin adding	count=1
function	gem version from the ||| gem names and	count=1
module	ringserver ||| rinda ringserver	count=1
arg	generator_name ||| generator_name	count=1
module	and :sslprivatekey ||| drb	count=1
arg	given enumerable object ||| enum	count=2
module	anymethod with ||| rdoc anymethod	count=1
arg	transfers localfile to the ||| localfile remotefile blocksize &block;	count=1
module	up this ||| generator	count=1
arg	c signature ||| signature	count=1
arg	with the given exit_code ||| exit_code	count=2
arg	data to ||| data	count=1
module	the parsing ||| rdoc stats	count=6
arg	given orig ||| orig	count=1
arg	labels ||| labels	count=1
function	[function_1] hash self ||| [function_2] [function_1]	count=6
arg	text to ||| text	count=4
module	true ||| gem version	count=1
module	creates ||| net http	count=1
function	as ||| to string	count=1
arg	[arg_1] file1 ||| [arg_1] [arg_2]	count=2
arg	object and [arg] for equality ||| [arg]	count=1
function	prepares the visitor for ||| list item	count=4
function_arg	associated [arg_2] ||| sdbm value [function_1] [arg_2]	count=2
module	this function ||| function	count=1
function	undocumented ||| doc	count=1
arg	the given arguments ||| args	count=1
arg	uri the uri for ||| uri	count=2
module	addrinfo ||| addrinfo	count=2
module	authoritative instance of ||| gem commandmanager	count=1
arg	nil if the value ||| value	count=1
module	indices as row ||| csv	count=1
arg	patterns or a pattern ||| pattern flags	count=1
arg	string according to ||| string 1 jan	count=2
function	gems ||| platform	count=1
function	all [function_2] ||| [function_1] [function_2]	count=8
arg	whether or not ||| opt	count=1
function	represents the ||| external	count=2
returnv	positions ||| integer	count=2
function	[function_1] server advertises ||| [function_2] plain auth [function_1]	count=1
arg	the given key ||| key	count=9
arg	whenever [arg] ||| [arg]	count=3
function	[function_1] path from ||| [function_1] [function_2]	count=3
module	with the ||| specfetchersetup	count=1
arg	uri to path if ||| uri path	count=1
module	from the command ||| gem command	count=3
module	the other ||| drb	count=1
arg	formatted like [ lineno ||| src filename lineno	count=1
arg	from string ||| string	count=2
arg	on res whether ||| res	count=1
function	the named constant ||| const	count=1
function	on the peer ||| getpeereid	count=1
module	of undocumented items ||| rdoc	count=1
module	number of undocumented items ||| rdoc	count=1
arg	to out with a ||| out	count=1
arg	and [arg] for equality ||| [arg]	count=1
function	to copy the specified ||| copy	count=1
arg	this response for certificate_id ||| certificate_id	count=1
module	the certificate ||| gem security	count=1
function_arg	[function_1] of real ||| bignum bool [function_1] [arg_2]	count=3
function	[returnv_1] [function_2] ||| [returnv_1] real [function_2]	count=1
module	single string ||| rdoc rd blockparser	count=1
function	target [function] the gem ||| [function]	count=1
function	exit [function] ||| [function]	count=2
arg	subclass ||| subclass	count=1
function	to the ||| accept	count=1
function	update the ||| update	count=2
rep	with the [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	removes ||| remove	count=12
module	this requirement ||| gem requirement	count=1
function	if this is an ||| ?	count=1
module	object+ types ||| array	count=1
function	[function] key false ||| [function] key	count=1
function	[function] obtained ||| [function]	count=1
arg	the named file has ||| file_name	count=2
function	remote object ||| drburi	count=1
arg	the mailbox [arg_2] ||| [arg_2] [arg_1]	count=1
function	space ||| space	count=1
function	create a list of ||| file list	count=1
function	accept specified ||| accept	count=2
module	are immediately available for ||| openssl ssl sslsocket	count=1
module	the oldest dependencyrequest ||| gem resolver requirementlist	count=1
module	provided or that ||| drbsslsocket	count=1
function	with on the ||| dir	count=1
function	grab the lock and ||| lock	count=1
module	for use by ri ||| rdoc generator ri	count=1
module	index ||| indexer	count=2
module	for ||| rdoc markup tottonly	count=2
module	live in if ||| generator darkfish	count=1
returnv	the following are true ||| bool	count=1
function	[returnv_1] before the ||| [function_2] [returnv_1]	count=4
arg	the mailbox to newname ||| mailbox newname	count=1
function	[function_1] an integer ||| [function_1] [function_2]	count=1
rep	of a [function_arg_2] ||| [function_arg_2] [module_1]	count=4
arg	a method method ||| method	count=1
function	[function_1] super class ||| [function_2] [function_1]	count=2
module	for [module] added ||| [module]	count=1
function	sends an http request ||| request	count=1
arg	attribute [arg] ||| name [arg]	count=2
module	with the other ||| drb drbsslsocket sslconfig	count=1
function	a character device ||| chardev	count=3
module	‘:’ in json ||| json ext	count=1
returnv	has a ||| bool	count=1
module	optionparser object ||| optionparser arguable	count=1
function	[returnv_1] a new ||| [returnv_1] [function_2]	count=86
module	the ||| webrick	count=6
function	we using a pager? ||| paging	count=1
function	loads the given ||| load	count=4
function	substituting special characters beforehand ||| with substitution	count=1
arg	if you [arg_2] ||| class [arg_1] [arg_2]	count=6
arg	s in string in ||| string filename	count=1
function	[function_1] port to ||| [function_1] [function_2]	count=6
function	workspace to ||| workspace	count=1
arg	kernel#load ||| fn priv	count=1
module	nametuple objects ||| gem nametuple	count=1
function	next ||| next	count=5
module	passwords from ||| webrick httpauth	count=1
module	for marking up this ||| rdoc	count=1
module	for the feed or ||| atom feed	count=1
arg	mode issues [arg] ||| [arg]	count=1
arg	version encoding [arg_2] ||| [arg_2] [arg_1]	count=1
module	for restricting ||| requestset	count=1
function	page list for the ||| page list	count=1
module	to a set ||| gemdependencyapi	count=1
function	less than ||| <=	count=1
module	get the uri of ||| drbobject	count=1
arg	the spec and calls ||| spec	count=1
function	the struct ||| struct member	count=1
arg	headers you ||| headers opt	count=1
module	of [module] will be ||| [module]	count=1
function	merges ||| merge	count=4
function	string before ||| string pre	count=1
module	bytes that are ||| ssl	count=1
arg	adds tts from block_quote ||| block_quote	count=1
module	request ||| gem remotefetcher	count=1
arg	the given extensions ||| age extensions	count=2
returnv	returns integer ||| integer	count=1
function	before [function_2] ||| [function_2] [function_1]	count=1
function_arg	visibility [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] [arg_2] v serialized by to_json ||| [function_1] [arg_2]	count=2
function	length and ||| doc	count=1
module	read from this ||| gzipreader	count=1
module	this ||| resolver localspecification	count=1
arg	and sid ||| sid	count=1
module	visitor ||| rdoc markup	count=7
module	out [module] is loadable ||| [module]	count=1
arg	io and allows ||| io	count=1
function	if this source list ||| ?	count=1
module	divides [module] ||| [module]	count=3
function	a methods [function_2] ||| [function_2] [function_1]	count=2
arg	[arg] is an ||| lib func [arg]	count=3
arg	anchor ||| href	count=1
module	across ||| array	count=1
arg	[arg] tms object ||| [arg]	count=3
function	[function_1] in default ||| [function_2] gems use [function_1]	count=4
arg	using the given input_method ||| input_method	count=1
function	output ||| quote	count=1
arg	the private key ||| key	count=1
module	is registered ||| objectspace weakmap	count=2
function	[returnv_1] destination ||| [function_2] [returnv_1]	count=1
arg	[arg_1] res whether ||| [arg_1] [arg_2]	count=2
function	compute [function] the value ||| [function]	count=1
arg	in [arg] ||| user group [arg]	count=2
module	modulus [module] ||| [module]	count=1
arg	io and [arg_2] ||| [arg_2] [arg_1]	count=1
function	message [function_2] ||| [function_2] [function_1]	count=2
function	if ||| for spec ?	count=1
function	for a constant with ||| const	count=1
function_arg	[function_1] status ||| [function_1] certificate_id [arg_2] reason revocation_time this_update next_update	count=1
function	system ||| system	count=2
module	constructs a ||| gem	count=1
function	returns a list ||| list	count=1
module	_getobj_ ||| delegator	count=2
function	post and [function] requests ||| do [function]	count=1
module	the generated docs will ||| rdoc generator darkfish	count=1
module	the conflicting dependency’s ||| gem resolver conflict	count=1
module	:sslcertificate and :sslprivatekey ||| drbsslsocket sslconfig	count=1
module	this dependency match ||| gem dependency	count=1
arg	to locking_constant ||| locking_constant	count=1
module	database ||| webrick httpauth	count=1
module	to the [module] ||| [module]	count=5
module	specify the ||| zlib gzipwriter	count=1
module	with the name ‘pl’ ||| testcase specfetchersetup	count=1
function	loop on the ||| loop on	count=2
module	checks that cert signature ||| x509 request	count=1
function	add a new set ||| add tag	count=1
module	will live ||| rdoc generator darkfish	count=1
function	or separated named) ||| or	count=1
arg	the public key ||| key	count=1
function	returns true [function_2] ||| [returnv_1] gmt [function_2]	count=3
module	unless the keep_files environment ||| testcase	count=1
arg	filename given in file_name ||| file_name suffix	count=1
function	make ||| make temp	count=1
function	key with the private ||| private	count=1
module	returns this ||| ocsp	count=2
function	entities replaced ||| s	count=1
function	methods to public ||| public	count=1
module	to ||| markup attributemanager	count=4
module	configure various ||| makemakefile	count=1
module	to the policy ||| policy	count=1
function	number of ||| doc	count=1
function	accept_list_end_note ||| list end note	count=1
function	current source ||| source	count=1
function_arg	[function_1] bin ||| [function_1] [arg_2]	count=4
module	will be ||| rdoc task	count=1
module	no possible matching specifications ||| resolver molinillo specificationprovider	count=1
module	the authentication was not ||| webrick httpauth	count=2
function	if there is ||| ?	count=2
function	dependencies that ||| dependencies	count=1
function	removes a siginfo handler ||| remove siginfo handler	count=1
arg	attribute [arg] ||| [arg]	count=2
arg	reference to ||| ref	count=1
function	quietly ensure [function_2] ||| [function_1] [function_2]	count=1
function	returns ||| external	count=2
function	the length ||| doc stats	count=1
module	specification that ||| gem specification	count=2
function	is valid and false ||| valid commercial	count=1
function_arg	stream [arg_2] ||| [function_1] [arg_2]	count=6
arg	from certificate ||| certificate	count=1
module	by rdoc :generator ||| rdoc methodattr	count=1
function	[returnv_1] [function_2] ||| [returnv_1] has text [function_2]	count=3
module	the –version ||| gem versionoption	count=1
function	nil -1 ||| infinite	count=1
function	into a der-encoded ||| der	count=1
module	in the list ||| rdoc markup list	count=1
module	form ||| gem requestset	count=1
module	method object ||| method	count=1
function	return a [function_2] ||| [function_1] [function_2]	count=2
function	the ||| list item start	count=4
arg	version string ||| version	count=1
module	stor ||| net ftp mlsxentry	count=1
function	version of the ||| version	count=1
module	edge represents @return edge ||| resolver molinillo dependencygraph	count=1
module	a availableset ||| availableset	count=1
module	on the aws-sdk gem ||| gem	count=1
module	that contains ||| gem	count=1
function_arg	stream and [arg_2] ||| [arg_2] [function_1]	count=3
function	slice of <n> ||| slice	count=1
function	the version requirement ||| requirement	count=1
function	list for ||| list	count=1
function	[function_1] names ||| [function_2] [function_1]	count=3
function	generate a [function] button input ||| [function]	count=1
function	seconds since the epoch ||| f	count=1
module	a ||| makemakefile	count=1
module	downloads ||| remotefetcher	count=1
function	returns true if ||| bool tty ?	count=2
function	as a ||| to s	count=3
function	add ||| add	count=13
module	sets the [module] iv ||| [module]	count=1
module	#max_nesting = 0 if ||| ext	count=1
arg	equivalent to or ||| obj ...	count=1
function	the option ||| version option	count=1
function_arg	[function_1] specified key ||| [arg_2] [function_1]	count=1
module	with the other ||| drbsslsocket	count=1
function	the next ||| next values	count=1
arg	given in file_name ||| file_name	count=1
module	:sslcertificate ||| drbsslsocket sslconfig	count=2
function	owner and group on ||| chown	count=1
rep	[module_1] [function_arg_2] ||| [module_1] parseerror instance [function_arg_2]	count=2
module	stat has ||| file stat	count=2
function	[returnv_1] [function_2] ||| [returnv_1] key [function_2]	count=7
module	see debug_level= ||| irb context	count=1
function	that ||| setup	count=2
module	process from ||| process	count=1
arg	title ||| parent title	count=1
returnv	once ||| ios	count=1
arg	file [arg_2] ||| [arg_1] [arg_2]	count=1
module	bytes to be written ||| gem package tarwriter boundedstream	count=1
module	this package ||| package	count=3
rep	[module_1] [function_arg_2] ||| [module_1] driver display [function_arg_2]	count=4
module	possible matching specifications ||| resolver molinillo specificationprovider	count=1
arg	permissions mode linking ||| mode	count=1
function_arg	for extensions [arg_2] ||| [function_1] [arg_2]	count=1
arg	string which is either ||| string data	count=1
arg	creates a vector [arg_1] [arg_2] ||| vector elements [arg_2] [arg_1]	count=1
function	variables this ||| variables	count=1
module	determines whether the response ||| smtp response	count=2
arg	id and [arg_2] ||| [arg_1] [arg_2]	count=1
module	dependency graph? @return ||| resolver molinillo	count=1
arg	of text that ||| text	count=1
arg	at path and ||| path	count=1
module	this dependency simply asking ||| dependency	count=1
arg	value and [arg_2] ||| [arg_2] [arg_1]	count=3
arg	dependency is ||| dependency	count=2
function	currently unresolved specs that ||| unresolved	count=1
module	rdoc :document using ||| rdoc markdown	count=1
module	a ||| drbsslsocket sslconfig	count=2
function	default irb commands ||| commands	count=1
returnv	a version ||| instance	count=1
module	all file ||| specification	count=1
function	local ||| local	count=8
function_arg	extension name ||| extension ? name	count=1
arg	op [arg_2] ||| memberwise [arg_1] [arg_2]	count=4
function	[function_1] have a ||| [function_1] [function_2]	count=1
function	accept_list_item_start_lalpha ||| list item start lalpha	count=1
returnv	string containing ||| string	count=2
function_arg	evaluates the [arg_2] ||| [arg_2] [function_1]	count=4
arg	compressed data and ||| level strategy	count=1
function	and [function] them ||| [function]	count=1
function	input ||| input	count=1
function	specs in ||| specs	count=1
module	or that a new ||| drbsslsocket sslconfig	count=1
module	for this pointer to ||| pointer	count=1
returnv	new [returnv] consisting ||| [returnv]	count=1
function	commands ||| extend commands	count=1
arg	the #auth_type ||| reload_db	count=1
function	command ||| command	count=1
module	environment variable where ||| env	count=1
function	that is [function_2] ||| [function_1] [function_2]	count=4
arg	the inline ||| inline	count=1
function	the public [function_2] ||| [function_2] [function_1]	count=2
function	a file [function] ||| remove [function]	count=1
module	an array containing the ||| rexml	count=1
function	headers are ||| headers	count=1
arg	path and gets a ||| path data	count=1
function	private method ||| private method	count=1
function	to true [function_2] ||| [function_2] [returnv_1]	count=1
module	2 dependency ||| resolver	count=1
arg	pointer addr as ||| addr	count=1
function	returns image [function] in ||| [function]	count=1
function	of the spec file ||| spec file	count=1
module	emission ||| emitter	count=1
returnv	a string don’t use ||| string	count=1
module	the [module] ||| [module] ext generator	count=2
arg	value stored in the ||| o	count=1
function_arg	size [arg_2] ||| [arg_2] [function_1]	count=3
arg	name called with ||| name	count=1
module	a ||| gem requestset gemdependencyapi	count=2
function	to a ||| to	count=2
function	load extra [function_2] ||| [function_1] [function_2]	count=1
function	level as an ||| level	count=1
module	paragraphs ||| rdoc markup tohtmlsnippet	count=1
module	number ||| rdoc stats	count=2
arg	[arg] and from_version ||| dep [arg] from_version	count=1
function	[function_1] writer stream ||| [function_2] [function_1]	count=2
module	this file ||| file	count=1
function	difference [function] expects one ||| [function]	count=1
function	accept character set for ||| accept	count=1
arg	transfers localfile to the ||| localfile remotefile blocksize	count=1
arg	locking_constant a ||| locking_constant	count=1
arg	field [arg_2] ||| [arg_1] [arg_2]	count=1
module	indices as row access ||| csv table	count=1
function_arg	loop on [arg_2] ||| [function_1] [arg_2]	count=1
module	deprecate and remove ||| gem	count=1
function	system [function_2] ||| fileutils remove [function_2] [function_1]	count=1
arg	creates a temporary ||| basename tmpdir	count=1
arg	data for reading and/or ||| data options	count=1
function	is a real number ||| real	count=1
module	on the text ||| text	count=1
module	:method or rdoc :attr ||| rdoc	count=1
module	the first instance ||| syslog	count=1
function	[returnv_1] if ||| [returnv_1] allow nan [function_2]	count=1
module	[module] :classmodule ||| [module]	count=3
arg	files ||| options &block;	count=1
module	process to its original ||| gem	count=1
arg	new options ||| src dest options	count=2
arg	digests match the signatures ||| digests	count=1
function_arg	[function_1] a parent ||| [function_1] dep from_name from_version [arg_2]	count=4
function	[returnv_1] if ||| [returnv_1] wednesday [function_2]	count=1
function	objects ||| dig	count=1
module	from [module] ||| [module] httpservlet	count=3
module	of this hash ||| hash	count=1
function	of ||| generator	count=1
module	representation for this ||| generatormethods	count=2
function	transparent ||| get transparency	count=1
module	gems to a set ||| gem	count=1
arg	given certificates and x509 ||| certificates	count=1
module	this closure ||| fiddle closure	count=1
arg	transfers localfile to ||| localfile remotefile blocksize &block;	count=1
function	method :both :instance ||| method	count=1
function_arg	[function_1] [arg_2] ||| [function_1] type [arg_2]	count=3
module	be ||| rdoctask	count=1
arg	object @param arg ||| arg	count=1
function	exited normally ||| exited	count=1
function	replaces the contents and ||| replace	count=1
function	default port ||| default port	count=6
function	switches the mode ||| by col or row	count=1
function	valid ruby syntax ||| parseable	count=1
returnv	iseq ||| iseq	count=2
module	ensures that :sslcertificate ||| sslconfig	count=1
arg	the given string ||| string level	count=1
arg	given block ||| &block;	count=1
function	currently ||| root	count=1
function_arg	[function_1] mesg ||| [function_1] [arg_2]	count=2
function	level ||| is ?	count=1
returnv	parent ||| instance	count=1
function	removes a ||| remove	count=2
arg	[arg] string and ||| [arg]	count=3
module	don’t already ||| rdoc	count=1
module	the visitor ||| rdoc markup	count=7
function_arg	hostname of address ||| getname address	count=2
arg	v at key in ||| key v	count=1
function	path parameter passed to ||| path	count=1
function	they don’t already exist ||| sub	count=1
function	create ||| create	count=1
function	[function_1] path from ||| [function_2] [function_1]	count=3
module	tuplebag returning the ||| rinda tuplebag	count=1
arg	prefix to send ||| prefix	count=1
module	version string not ||| version	count=1
arg	code ||| code	count=6
function	[function_1] proxy ||| [function_2] env [function_1]	count=1
function_arg	line in [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] key false ||| [arg_2] [function_1]	count=1
function	with a prefix ||| def pre proc	count=1
function	parent if ||| new	count=1
function	names set ||| set visibility	count=1
rep	finds [function_arg_2] ||| [module_1] find [function_arg_2]	count=12
function_arg	[function_1] name enabled? ||| [function_1] [arg_2]	count=1
returnv	into [returnv] possibly ||| [returnv]	count=1
function	[returnv_1] given ordinal ||| [returnv_1] valid [function_2]	count=1
function	[function_1] alive? ||| [function_2] [function_1]	count=2
arg	in [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=5
arg	meth_name defined on a ||| meth_name	count=1
function	[returnv_1] if ||| [returnv_1] saturday [function_2]	count=1
function	method removes a file [function_1] [function_2] ||| [function_2] [function_1]	count=1
function	the settings ||| document	count=1
arg	given template and ||| format	count=1
module	translates and dispatches windows ||| win32ole_event	count=1
module	an environment variable with ||| env	count=4
function	require a prerelease? ||| prerelease	count=1
arg	for each [arg] times or ||| [arg]	count=1
arg	out with a ||| out	count=1
module	response received was ||| smtp response	count=2
module	list of ||| options	count=1
function	creates [function] enumerator object ||| [function]	count=1
module	documentation has ||| rdoc codeobject	count=1
function	contain other documents? ||| merged ?	count=1
returnv	attempts ||| self	count=1
arg	performs ||| rational numeric	count=1
function	a public ||| public ?	count=1
module	creates ||| testcase	count=1
module	in irb ||| irb	count=1
module	[module] in the ||| [module]	count=2
module	and coverage array ||| coverage	count=1
module	constructs a ||| version	count=1
function	[returnv_1] if ||| [returnv_1] include [function_2]	count=3
function	value as a ||| to s	count=2
module	returns the status ||| webrick httpstatus	count=1
arg	numeric and ||| numeric	count=1
function	the position of ||| rewind	count=1
module	immediately available ||| openssl	count=1
arg	httprequest ||| body	count=1
function	[function] written out ||| ensure loadable [function]	count=3
module	array to ||| openssl	count=1
module	the ||| drb	count=5
module	new [module] :scalar ||| [module]	count=1
function	tts ||| accept	count=1
module	for a gem ||| gem	count=1
arg	row_count x [arg_2] ||| [arg_2] [arg_1]	count=1
function	returns the next ||| next	count=3
function_arg	ip address [arg_2] ||| [function_1] [arg_2]	count=6
function	a job ||| job	count=1
function	on the command ||| dir config	count=1
module	in the dependencylist that ||| dependencylist	count=1
function	disk for use ||| generate	count=1
module	a class method/attribute ||| methodattr	count=1
module	environment ||| gem testcase	count=1
function	paths matching ||| find	count=1
module	of this object ||| rexml	count=1
returnv	when this [returnv] you ||| [returnv]	count=1
module	initialized tms ||| tms	count=1
module	marks up ||| markup tohtmlsnippet	count=1
arg	a [arg] ||| [arg]	count=3
function	names set ||| set	count=1
function_arg	returns [function_1] [arg_2] matrix as a vector ||| [function_1] [arg_2]	count=1
function	first ||| collect first	count=1
arg	if pattern is ||| pattern	count=1
function	build info [function_2] ||| [function_2] [function_1]	count=1
function	of checkbox elements ||| checkbox group	count=1
arg	[arg_1] out ||| [arg_2] [arg_1]	count=10
function	[function_1] version of ||| [function_2] [function_1]	count=7
function	truncated ||| int	count=1
module	defaultfilehandler ||| webrick httpservlet defaultfilehandler	count=1
function_arg	[function_1] bin on ||| [arg_2] [function_1]	count=4
arg	without opening ||| port p_addr p_port p_user p_pass	count=1
arg	file filename ||| filename	count=1
function_arg	deserializes [function_1] [arg_2] with values v serialized ||| [function_1] create [arg_2]	count=2
module	writes the [module] to ||| [module]	count=1
module	key and coverage ||| coverage	count=1
returnv	returns [returnv] if ||| [returnv]	count=2
module	sets ||| rdoc encoding	count=1
function	:context of the session ||| currentcontext	count=1
function	calls the given block ||| if	count=1
module	current connection ||| ssl sslsocket	count=1
arg	the message ||| message flags date_time	count=1
arg	read/write status rw ||| rw	count=1
function	sets ||| save history=	count=1
module	feed ||| atom feed entry	count=1
module	of this cookie ||| cgi cookie	count=1
function	[function_1] module ||| [function_1] [function_2]	count=11
arg	[arg_1] returns a ||| [arg_2] [arg_1]	count=8
arg	[arg_1] container ||| [arg_2] [arg_1]	count=4
arg	[arg_1] to length ||| [arg_2] [arg_1]	count=2
module	win32ole_method object which ||| win32ole_method	count=1
function	authentication and quits ||| auth	count=1
module	key in hsh ||| hash	count=1
module	given ||| gem userinteraction	count=1
function	#page_dir ||| finish page dir	count=1
returnv	1 for example ||| ,_-1,_+1	count=1
function	of ary [function_2] ||| [function_2] [returnv_1]	count=3
function	the return [function_2] ||| [function_2] [returnv_1]	count=1
function_arg	[function_1] isapop is ||| [function_1] [arg_2]	count=2
function	valid ‘nz_number’ in ||| valid nz	count=1
module	[module] with ||| [module]	count=6
arg	child1 this is ||| child1 child2	count=1
function	this is a field ||| field	count=1
function	on the command line ||| dir	count=1
function	less than that ||| <	count=1
module	command to inform the ||| net imap	count=1
function_arg	a class klass ||| add class klass	count=1
returnv	to grab ||| self	count=1
function	remote gems ||| remote	count=1
function_arg	matching name ||| matching name	count=1
module	a sandboxed ||| gem testcase	count=1
function_arg	[function_1] [arg_2] in terms a human ||| [function_1] delta string [arg_2]	count=3
module	to another fiber resuming ||| fiber	count=1
module	psych :nodes :document ||| psych nodes document	count=1
function_arg	notifications [arg_2] ||| [arg_2] [function_1]	count=1
function	copies static files from ||| copy static	count=1
arg	cstime as ||| cstime	count=1
function	the status [function_2] ||| [function_2] [function_1]	count=1
function	end ||| end	count=4
arg	headers [arg_2] ||| [arg_2] [arg_1]	count=1
module	the process ||| gem	count=1
module	trace ||| net http	count=1
module	represents the ||| io	count=1
arg	a document-class [arg_2] ||| [arg_2] [arg_1]	count=6
arg	the attribute to ||| attribute	count=1
function	[function_1] the index ||| [function_2] [function_1]	count=4
arg	new or expunged messages ||| timeout &response;_handler	count=1
module	the conflicting dependency’s ||| resolver conflict	count=1
arg	the specified host ||| host	count=1
function	[function_1] [function_2] of the ||| [function_2] [function_1]	count=12
function	no assigned [function] it extracts ||| [function]	count=1
module	get the uri of ||| drb drbobject	count=1
function	visitor tests to your ||| visitor tests	count=1
module	to this object’s path ||| markup	count=1
module	command along ||| net imap	count=2
function	function ||| function	count=2
arg	in enclosing to ||| enclosing	count=1
arg	start to [arg_2] ||| [arg_1] [arg_2]	count=1
function	arc cosine ||| acos	count=1
function	returns true [function_2] ||| [returnv_1] finished [function_2]	count=2
arg	out_stream for ||| out_stream	count=1
function	filters the [function_2] ||| [function_2] [function_1]	count=2
returnv	hash of ||| hash	count=5
module	and :sslprivatekey have been ||| drb	count=1
arg	of length n ||| n	count=1
module	the dependency ||| dependency	count=1
function	the files on the ||| files	count=1
module	[module] complete ||| gem [module]	count=1
function	a string ||| string	count=1
returnv	returns [returnv] if float ||| [returnv]	count=2
arg	string according ||| string 1 jan -4712	count=2
function	“true” [function] ||| chunked [function]	count=3
function	message at the beginning ||| begin adding	count=1
arg	[arg_1] tag an ||| [arg_1] [arg_2]	count=2
arg	[arg_1] and key ||| [arg_2] [arg_1]	count=1
module	formatter ||| uriformatter	count=1
function	updates the ||| update	count=2
module	:x509 ||| gem	count=1
arg	of sec seconds ||| sec	count=1
module	get an array of ||| rexml	count=3
function_arg	instance [arg_2] ||| [function_1] delegator [arg_2]	count=1
function	[function_1] length of ||| [function_2] [function_1]	count=9
function	formatted backtrace ||| backtrace	count=1
function	peek ||| peek	count=1
module	called ||| resolver molinillo ui	count=1
function	[returnv_1] absolute ||| [function_2] [returnv_1]	count=8
function	request ||| request	count=5
arg	[arg_1] name ||| [arg_1] [arg_2]	count=6
arg	for req [arg_2] ||| [arg_1] [arg_2]	count=3
function	or that a new ||| setup	count=1
function	set the accept ||| accept	count=1
module	should [module] :extend ||| [module]	count=1
function	the requirement ||| requirement	count=1
arg	gem [arg] contains ||| [arg]	count=1
module	the mailbox ||| imap	count=1
function	create ||| new	count=1
function	line in ||| set get line	count=1
module	environment variables ||| env	count=2
arg	in other ||| other	count=1
function_arg	password [arg_2] ||| [function_1] [arg_2]	count=1
function	at the specified ||| at	count=1
arg	entry ||| entry	count=1
module	finds ||| parser c	count=1
module	the [module] variables ||| [module]	count=1
module	the ||| testcase	count=3
arg	from parts and including ||| parts	count=1
arg	for req [arg_2] ||| [arg_2] [arg_1]	count=3
returnv	for subsequently defined ||| self	count=1
module	login [module] ||| [module]	count=3
arg	pattern with name ||| pattern name	count=2
function	tracing ||| trace	count=3
module	the ||| rdoc markup tohtml	count=4
module	to width ||| rdoc markup	count=1
function	finishes consumption of ||| list end	count=2
module	#max_nesting = 0 if ||| ext generator	count=1
module	this specification used ||| gem specification	count=1
function	current specs ||| specs	count=1
function	or a gem ||| store for	count=1
function	[function_1] charmap name ||| [function_2] [function_1]	count=3
function	close ||| close	count=6
function	if key ||| ?	count=2
module	time object ||| time	count=2
function	end of a mapping ||| end mapping	count=1
function_arg	[function_1] uri ||| [function_1] [arg_2]	count=2
module	number of [module] ||| [module]	count=3
function	:name ||| email to	count=1
function	will be ||| new	count=1
module	image ||| photoimage	count=3
function	the classes [function_2] ||| [function_1] includes and [function_2] for	count=1
function_arg	content of [arg_2] ||| [arg_2] [function_1]	count=2
module	response received was ||| response	count=2
module	and ||| options	count=1
function	current string ||| string	count=1
function	openssl :x509 :name ||| email to name	count=1
module	over all prime ||| prime	count=1
function	a singleton of ||| singleton	count=1
arg	begin [arg_2] ||| [arg_1] end [arg_2]	count=1
module	[module] element ||| [module]	count=3
function	and [function_2] ||| [function_1] [function_2]	count=11
arg	given set from the ||| set api_data	count=1
function	accept_list_end_label ||| list end label	count=1
function	[function_1] [function_2] ||| [function_2] nz [function_1]	count=6
arg	other_str ||| other_str	count=2
function	with an answer from ||| choose from	count=1
arg	for req on res ||| req res	count=1
arg	date-time object denoting the ||| hour minute second offset	count=2
function_arg	[function_1] n ||| [function_1] [arg_2]	count=3
function	by using ||| config	count=1
arg	tests the level and ||| level	count=1
module	with the other ||| drbsslsocket sslconfig	count=1
function	addrinfo [function] ||| [function]	count=1
returnv	complete [returnv] join and ||| [returnv]	count=1
module	docs ||| generator	count=1
function	to gem file ||| gem file	count=2
function	space before the ||| space before	count=1
function	with ||| split	count=1
function	is a prerelease ||| ?	count=1
function	[returnv_1] if the ||| [returnv_1] superset [function_2]	count=1
arg	match tuple ||| event tuple expires	count=1
function_arg	[function_1] string ||| [function_1] [arg_2]	count=6
module	str creating ||| string	count=1
arg	to value ||| value	count=3
function	the visitor ||| accept list item	count=4
module	requested ||| resolver activationrequest	count=1
arg	the indicated ||| attr	count=1
function	encoding magic comment from ||| coding comment	count=1
module	the [module] starting ||| [module]	count=1
module	a ||| net	count=1
module	the peer certificates verification ||| ssl sslsocket	count=1
function_arg	[function_1] file_name ||| filetest integer size [function_1] [arg_2]	count=1
module	a specification ||| gem resolver	count=1
module	openssl :digest must ||| openssl pkey pkey	count=1
module	list of generators and ||| rdoc options	count=1
module	came from for gem ||| gem dependencyinstaller	count=1
function	writes ||| syswrite	count=1
module	the specified time ||| time	count=1
function	various “with” ||| dir	count=1
module	:nodes :mapping object ||| nodes mapping	count=1
function	dependency a development dependency? ||| development	count=1
module	representation for ||| json ext generator generatormethods	count=2
function	if there ||| ?	count=2
module	gzipwriter object ||| gzipwriter	count=1
module	to ios ||| io	count=1
function	[function] node ||| [function]	count=2
function_arg	status of [arg_2] ||| [function_1] mailbox [arg_2]	count=1
module	file exists and ||| file	count=1
function	dump only ||| marshal dump	count=1
function	in self [function] ||| [function]	count=3
function	unescapes ||| unescape	count=1
arg	searching criteria ||| keys charset	count=1
module	returns a properly-space list ||| options	count=1
function	returns the memory ||| to i	count=4
module	up a ||| driver	count=1
module	is set to its ||| openssl	count=1
module	has been turned ||| codeobject	count=1
module	this method sends a ||| smtp	count=1
function	nan infinity and ||| nan	count=1
returnv	name as an integer ||| integer	count=1
function	contains the ||| has	count=2
function	1970 ||| make expires	count=1
function	[function] which ||| proxy [function]	count=3
function	is a superset ||| superset	count=1
function_arg	[function_1] if you ||| tkresourcedb [function_1] class [arg_2]	count=2
arg	[arg_1] options from ||| [arg_2] [arg_1]	count=2
module	redundancies ||| specification	count=1
arg	[arg] is negative ||| big [arg]	count=3
function	if key is ||| key ?	count=1
module	by using that name ||| makemakefile	count=1
arg	parsing from a string ||| string 1 jan	count=2
module	vector with entries rounded ||| vector	count=1
module	a [module] object for ||| [module]	count=1
module	live ||| rdoc generator darkfish	count=2
function	visitor for ||| list	count=4
module	be stored in the ||| webrick utils	count=1
function	if they don’t already ||| gen	count=1
function_arg	patch request [arg_2] ||| [function_1] [arg_2]	count=2
module	representing the [module] permission ||| [module]	count=4
module	page on ||| rdoc servlet	count=1
function	the reason this ||| reason	count=1
function	prepares ||| list	count=4
module	mod or ||| module	count=1
function	but controlled [function] instead ||| process based [function]	count=1
module	state object configured by ||| json ext generator state	count=1
function	iterates the given ||| each	count=2
module	a method/attribute ||| methodattr	count=1
arg	named files returning the ||| file_name	count=1
arg	existing attribute [arg] ||| name [arg]	count=2
returnv	integer ||| integer	count=15
arg	to [arg_1] [arg_2] ||| sys setregid [arg_1] [arg_2]	count=1
returnv	a ||| instance	count=1
function	[function_1] row ||| [function_1] [function_2]	count=12
module	name and ||| name	count=1
module	notifier ||| notifier	count=1
function	list ||| list start	count=3
arg	message ||| message flags	count=1
arg	the comment ||| context comment	count=1
module	for a gem that ||| gem	count=1
module	the command line ||| makemakefile	count=1
function	returns true if ||| bool deletable ?	count=1
module	struct subclass and ||| struct	count=1
function	true [function_2] ||| [returnv_1] respond to [function_2]	count=1
arg	issues [arg] passes the ||| [arg]	count=1
function	the status stat ||| status	count=1
function	the directory ||| dir	count=2
module	druby reference to ||| drb drbserver	count=1
arg	connected [arg] ||| [arg]	count=2
function	is an ipv6 address ||| ipv6	count=1
arg	address from ||| address	count=3
function	a special for links ||| special	count=2
function	the proxy for this ||| proxy	count=1
module	this gem is ||| gem resolver	count=2
function	issuer ||| issuer	count=1
arg	token stream the level ||| level	count=1
function	from html form data ||| form data	count=1
function_arg	paths [arg_2] ||| [arg_2] [function_1]	count=2
module	methods to ||| module	count=1
arg	[arg] the ||| [arg]	count=15
function_arg	returns true [function_1] [arg_2] ||| sourcelist bool include [function_1] [arg_2]	count=6
module	runs this list ||| rdoc markup list	count=1
module	notifier with the ||| notifier	count=1
module	gems to a ||| gemdependencyapi	count=1
function	close on exec flag ||| close on exec	count=1
arg	key provided ||| key	count=1
function	a patch request to ||| patch	count=1
module	to allow ||| gem	count=1
module	pass output through ||| rdoc ri driver	count=1
arg	object_id id to the ||| id	count=1
arg	iterates over all ||| &proc;	count=1
module	command to select a ||| net imap	count=1
function	until the ||| until	count=1
function	3xx ||| continue	count=1
arg	address ||| address	count=10
returnv	== [returnv] ||| [returnv]	count=1
module	so that all file ||| gem	count=1
function	the doctype is ||| doctype	count=1
function	consuming [function_2] ||| [function_1] [function_2]	count=2
module	prepares the visitor ||| tohtml	count=3
module	they don’t already ||| generator	count=1
function	encoding [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] method ||| [arg_2] [arg_1]	count=4
arg	reference to the ||| ref	count=1
module	of multiple rdoc :markup ||| rdoc classmodule	count=1
function	original [function_2] ||| [function_1] [function_2]	count=3
function	save ||| update	count=1
module	indent for [module] added in ||| [module]	count=1
arg	v see also ||| v	count=4
arg	with the given permissions ||| permissions passphrase cipher	count=1
arg	to host [arg_2] ||| [arg_2] [arg_1]	count=2
arg	sends a ||| data initheader	count=1
function	name ||| all by name	count=1
function	comment in a file ||| comment	count=1
module	a yaml ||| psych	count=2
function	visitor [function_2] ||| [function_2] [function_1]	count=4
module	[module] instance ||| [module]	count=1
module	the last ||| zlib gzipreader	count=1
function	disconnected from the server ||| disconnected	count=1
arg	creates a temporary file ||| tmpdir	count=1
module	status class corresponding to ||| webrick httpstatus	count=1
function	or separated named) and ||| class or	count=1
returnv	instance this constructor ||| instance	count=1
module	drbobject ||| drb drbobject	count=1
function	skip ||| skip for	count=1
function_arg	a git [arg_2] ||| [function_1] [arg_2]	count=1
function	stop [function_2] ||| [function_2] object allocations [function_1]	count=1
function	a true if ||| ?	count=1
arg	by looking for :method ||| container tk	count=1
arg	to config [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] mode ||| [function_1] editing [function_2]	count=2
function	command line by ||| dir	count=1
module	rdoc :markup :document from ||| rdoc	count=1
arg	pointer [arg] ||| [arg]	count=1
arg	characters in s ||| s	count=1
module	the [module] returns ||| [module]	count=2
function	or if ||| ?	count=6
function	arrays ||| a	count=3
returnv	returns the ||| encoding	count=2
arg	map and tag ||| tag map	count=3
module	this singleton class class ||| singleclass	count=1
module	internal object ||| objectspace internalobjectwrapper	count=1
function	path to the build ||| build	count=1
function	reading ||| pending	count=1
function	issues the help ||| help	count=1
module	creates an openssl ||| openssl	count=1
module	visitor for ||| markup tordoc	count=2
function	[returnv_1] a new ||| attributemanager [returnv_1] [function_2]	count=1
arg	on the path ||| path	count=1
returnv	collection returning [returnv] garbage collection ||| [returnv]	count=2
module	don’t already exist ||| generator	count=1
module	tts from ||| markup	count=1
module	identical objects as ||| gem indexer	count=1
arg	instance based on string ||| string	count=1
function	multicast global scope ||| mc global ?	count=1
module	object in enum ||| enumerable	count=2
module	this [module] is ||| [module]	count=2
returnv	exception object for the ||| exception	count=1
function	the minor ||| minor	count=2
arg	sets the access ||| atime	count=1
module	big is less ||| bignum	count=1
arg	creates a socket connected [arg_1] [arg_2] to self ||| [arg_2] [arg_1]	count=1
function	returns true [function_2] ||| [returnv_1] superset [function_2]	count=4
module	provided ||| drb drbsslsocket	count=2
module	conversion to ||| markup	count=1
module	status ||| httpstatus	count=1
module	ensures that ||| drb drbsslsocket	count=1
module	expiry ||| rinda tupleentry	count=2
function	returns true if ||| bool setgid ?	count=1
function	[function_1] error ||| [function_1] last [function_2]	count=1
arg	an array ||| array	count=1
function_arg	for scope [arg_2] ||| [function_1] [arg_2]	count=1
module	is an ||| rexml	count=3
function	named protected ||| protected	count=1
arg	of compression ||| level strategy	count=1
module	use by ||| rdoc generator	count=1
arg	tuple ||| tuple sec	count=3
module	files so that ||| specification	count=1
arg	row an ||| row	count=1
function	last successful pattern ||| last	count=1
module	for this rdoc ||| rdoc	count=4
function	don’t already ||| gen sub	count=1
function	the data ||| data	count=1
module	parses ||| rdoc parser ruby	count=8
module	rdoc ||| rdoc classmodule	count=2
function	if requests for this ||| ?	count=1
module	block ||| gem requestset	count=1
arg	the version ||| version	count=1
module	command that ||| imap	count=1
function	prepares ||| item start	count=4
module	directory ||| pathname	count=1
function	range object [function_2] ||| [function_2] [function_1]	count=10
arg	for address from ||| address	count=3
function	the latter ||| for path	count=1
arg	value v ||| v	count=1
function	and label list items ||| list item	count=1
function_arg	[function_1] [arg_2] values v serialized by ||| [function_1] [arg_2]	count=2
module	does this document ||| markup document	count=2
function	the makefile for your ||| create makefile	count=1
function_arg	gem [arg_2] ||| [function_1] [arg_2]	count=1
function	line ||| dir	count=1
function	the status of the ||| status	count=1
module	digest can be computed ||| openssl digest	count=1
module	records the parsing ||| rdoc stats	count=6
function	up ||| setup	count=2
function_arg	[function_1] the dependency ||| [arg_2] [function_1]	count=1
arg	mod in enclosing ||| mod class_type enclosing	count=2
function	the content ||| content	count=1
arg	given string ||| key	count=1
function_arg	[function_1] [arg_2] ||| [function_1] server [arg_2]	count=2
module	this row ||| csv row	count=1
module	apiset that ||| resolver apiset	count=1
module	uri ||| uri generic	count=6
arg	value ||| value anchor tag plain quoted style	count=1
function	[returnv_1] flags ||| [function_2] [returnv_1]	count=1
arg	timeout is over ||| timeout	count=1
arg	given begin and ||| begin end exclude_end	count=1
function_arg	the setter [arg_2] ||| [function_1] [arg_2]	count=5
module	fields in the spec ||| gem specification	count=1
function	writes the ||| write	count=1
module	job at ||| irb jobmanager	count=1
module	that :sslcertificate ||| sslconfig	count=1
module	a yaml ||| psych nodes	count=1
function_arg	buffer to [arg_2] ||| [function_1] initial length= [arg_2]	count=1
function_arg	the existing [arg_2] ||| [arg_2] [function_1]	count=1
function	“with” options with on ||| config	count=1
arg	date object [arg] date ||| [arg]	count=1
function	compares ||| ==	count=1
arg	object delegate to obj ||| obj	count=1
arg	in chain is self-signed ||| chain	count=1
function	[function_1] time object ||| [function_2] [function_1]	count=2
function	source string ||| source	count=1
module	if notifications are enabled ||| notifier abstractnotifier	count=1
returnv	verifies whether [returnv] ||| [returnv]	count=2
function	[function] in the ||| each [function]	count=1
returnv	:retry :next ||| symbol	count=1
function_arg	value ty ||| import value ty	count=1
function	accept_list_item_end_bullet ||| list item end bullet	count=1
module	to this object’s ||| markup	count=1
function	of pi to the ||| pi	count=1
function	a serialised [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] server advertises ||| [function_2] login auth [function_1]	count=1
function	decode ||| decode	count=3
module	comment ||| rdoc	count=1
module	inspector ||| inspector	count=1
function	[function_1] gem ||| [function_2] [function_1]	count=11
arg	class corresponding to code ||| code	count=1
module	stat is executable ||| stat	count=1
function	the rubygems [function_2] ||| [function_2] [function_1]	count=1
function	information if debugging ||| debug	count=1
function	[function_1] header ||| [function_2] row [function_1]	count=1
function	information ||| debug msg	count=2
arg	[arg_1] against ||| [arg_2] [arg_1]	count=2
function	and calls the block ||| loop	count=1
function	to ||| ==	count=1
module	this singleton class class ||| rdoc	count=1
function	raised to the power ||| **	count=1
arg	with the given asn ||| name	count=1
module	this frame ||| thread backtrace location	count=2
function	removes ifdefs that would ||| handle ifdefs in	count=1
function	next token ||| next token	count=4
function	passing it ||| public send	count=1
arg	ty at the ||| ty	count=1
function	[function_1] mode for ||| [function_1] [function_2]	count=5
returnv	from ||| instance	count=1
function	new key pair ||| create key	count=1
arg	path is a ||| path	count=1
module	this dependency simply ||| dependency	count=1
function	the current source ||| source	count=1
returnv	its polar form ||| float	count=1
function	visitor tests ||| visitor tests	count=2
module	instance is created ||| syslog	count=1
function	[function_1] removed from ||| [function_1] [function_2]	count=2
returnv	object proc to ||| proc	count=1
arg	or equal to real ||| real	count=1
module	first ||| syslog logger	count=1
function	included ||| include	count=2
module	onto the io ||| tarwriter	count=1
arg	[arg_1] a comment ||| [arg_2] [arg_1]	count=7
module	to the [module] :requestset ||| [module] requestset	count=1
function	at the unknown ||| unknown	count=1
function	the [function] ||| as [function]	count=1
function	will live ||| sub	count=1
module	parseerror ||| parseerror	count=1
function	an answer from ||| choose from list	count=1
arg	the base ||| base	count=1
function	next ||| next values	count=1
module	the corresponding fiddle constant ||| fiddle	count=1
arg	or greater than other_ary ||| other_ary	count=1
function	character device false if ||| chardev	count=1
function	as arguments ||| find	count=1
function	generated docs will live ||| sub	count=1
function	[function_1] paths in ||| [function_1] [function_2]	count=4
arg	message [arg] input ||| [arg]	count=1
arg	string ||| string 1 jan -4712	count=2
function	passing each substring in ||| each	count=1
function	the freeze status ||| frozen ?	count=1
module	is encountered ||| rexml sax2listener	count=1
rep	dns [function_arg_2] ||| [module_1] [function_arg_2]	count=2
function	this name as ||| to	count=1
function	[function_1] type ||| [function_2] [function_1]	count=4
module	:dependencyrequest from a ||| testcase	count=1
module	stringinputmethod object ||| xmp stringinputmethod	count=1
arg	the context of ||| context statements file	count=1
module	object’s ||| rdoc	count=1
arg	value v [arg_2] ||| [arg_2] [arg_1]	count=6
module	stringio ||| stringio	count=3
function	an addrinfo object for [function_1] [function_2] obtained by getsockname ||| [function_1] [function_2]	count=1
arg	[arg_1] value and ||| [arg_2] [arg_1]	count=1
function	the locale [function_2] ||| [function_2] [function_1]	count=1
arg	set based ||| set	count=1
function_arg	[function_1] :specification spec ||| [arg_2] [function_1]	count=4
function_arg	tries [function_1] [arg_2] into ||| try [function_1] [arg_2]	count=1
module	output html-safe labels ||| markup tolabel	count=1
module	in ||| specification	count=1
module	list of generators ||| rdoc options	count=1
function	a block ||| new	count=1
function	type string ||| type	count=3
arg	name to ||| name	count=4
module	if ||| rdoc generator darkfish	count=2
function_arg	[function_1] page ||| [function_1] [arg_2]	count=3
module	returns the list ||| module	count=1
function	for rubygems 1 ||| modern	count=1
module	this dh instance has ||| pkey dh	count=1
function	wraps [function] trusted certificates ||| trust [function]	count=1
function	to the ||| block	count=1
module	class and ||| smtp	count=1
returnv	array of all key-value ||| array	count=2
module	format ||| pot	count=1
function	files ||| files	count=5
function	dependencies that [function_2] ||| [function_2] [function_1]	count=2
function	name to be ||| name	count=2
function	public method only ||| public instance method	count=1
returnv	exception object for ||| exception	count=1
function	accept_heading_b with a bold ||| b	count=1
function_arg	index [arg_2] ||| [arg_2] [function_1]	count=1
function	the given http ||| request	count=1
arg	dependencies ||| dependencies	count=1
function	the specific [function_2] ||| [function_1] [function_2]	count=5
function	default options ||| defaults str	count=1
module	[module] :classmodule exists ||| [module]	count=3
function	[function_1] library ||| [function_2] [function_1]	count=4
function	closes the ||| close	count=2
arg	valid [arg] ||| chain [arg]	count=2
function	all ip addresses for ||| address	count=2
module	this dh ||| pkey dh	count=2
function	temporary directory ||| create tmpdir	count=1
function	fully resets the ||| self reset	count=1
module	entity object itself is ||| rexml entity	count=1
function	the path to ||| path	count=5
function	singleton [function_2] ||| [function_1] [function_2]	count=1
function	form ||| form	count=3
function_arg	[function_1] name a ||| [function_1] [arg_2]	count=1
module	with the name ||| specfetchersetup	count=1
returnv	string containing the representation ||| string	count=2
arg	idx ||| idx	count=1
function	the provided block ||| generate	count=1
function	or module comment ||| comment	count=1
arg	length n ||| n	count=1
module	prepares ||| totableofcontents	count=1
module	get ||| drb	count=4
function_arg	given http [arg_2] ||| [arg_2] [function_1]	count=1
module	by using identical objects ||| indexer	count=1
module	the uri of the ||| drb drbobject	count=1
module	other parameters ||| drbsslsocket	count=1
arg	realm [arg_2] ||| [arg_2] [arg_1]	count=1
arg	running the given external ||| command... options	count=1
function	‘universal’, they ||| ===	count=1
function_arg	if the value of [function_1] [arg_2] ||| bignum bool [function_1] [arg_2]	count=2
module	the following configuration ||| openssl config	count=1
module	text ||| text	count=4
function	handler for tracing ||| trace func	count=1
function	updates the child ||| update	count=1
module	the file ||| stringio	count=1
arg	first minor by -1 [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
returnv	:redo :retry ||| symbol	count=1
function	[function_1] comment from ||| [function_2] [function_1]	count=3
function	returns true [function_2] ||| [returnv_1] started [function_2]	count=1
arg	front with ||| front desc	count=1
module	bigdecimal numbers to ||| bigdecimal	count=1
module	up this object’s ||| rdoc	count=1
module	that ||| drbsslsocket	count=2
module	command line ||| gem command	count=3
module	returns this request ||| openssl ocsp request	count=1
arg	to the path ||| path data	count=1
returnv	encoding object that ||| encoding	count=2
returnv	bigdecimal ||| bigdecimal	count=1
function_arg	define [function_1] [arg_2] ||| tkoption [function_1] class [arg_2]	count=2
function	makefile for your ||| makefile	count=1
arg	block_quote ||| block_quote	count=1
function	visitor for text generation ||| accepting	count=2
module	are immediately available ||| ssl	count=1
function	object was defined ||| record location	count=1
arg	without opening a ||| p_addr p_port p_user p_pass	count=1
module	if stat is ||| file stat	count=2
function	[function_1] string ||| [function_1] [function_2]	count=1
function	if ||| fnmatch ?	count=1
module	through ||| rdoc ri	count=1
function	path to the certificate ||| path	count=1
function	program [function_2] ||| [function_1] [function_2]	count=8
module	trace output example which ||| tracer	count=1
arg	name name ||| name	count=1
arg	dependency is satisfied by ||| spec dependency	count=1
module	of ||| openssl ssl sslsocket	count=2
module	of z where ||| cmath	count=5
module	latest by :gc_invoke_time ||| gc profiler	count=1
function_arg	[function_1] [arg_2] of ||| [function_1] [arg_2]	count=13
arg	and name ||| name	count=3
function	[function_1] error of ||| [function_2] [function_1]	count=7
function	spec and the ||| spec by	count=1
module	obj ||| object	count=15
arg	ignores all input ||| out_stream size initial_message terminal_message	count=1
module	[module] pick ||| [module]	count=1
module	along with ||| net	count=1
arg	[arg_1] in store ||| [arg_2] [arg_1]	count=6
function	scans content for ||| do singleton class	count=1
module	the visitor for ||| markup tottonly	count=1
module	bytes that ||| sslsocket	count=1
module	returns the row ||| row	count=1
function	of ipv4 ||| ipv4	count=1
module	creates an openssl :ocsp ||| openssl ocsp	count=1
module	if they don’t already ||| darkfish	count=1
function	:sslprivatekey ||| setup	count=1
module	visitor ||| rdoc markup tordoc	count=4
arg	break hints added ||| indent open_obj close_obj open_width close_width	count=1
function	changes the parameters ||| params	count=1
arg	the specified [arg] and returns ||| [arg]	count=1
function	text [function_2] ||| [function_1] [function_2]	count=4
function	defines a named attribute ||| attr accessor	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] extensions	count=4
module	nth match ||| matchdata	count=1
module	instance ||| rdoc store	count=1
function	if the parent ||| ?	count=1
arg	[arg_1] the signing_key ||| [arg_1] [arg_2]	count=3
rep	the [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=7
function	and ||| doc	count=1
function	look for [function_2] ||| [function_2] [function_1]	count=5
function	[function] the win32ole_type ||| [function]	count=1
function	components in a graph ||| component	count=1
module	returns the [module] of the ||| [module]	count=1
function	internal object ||| internal object id	count=1
returnv	defined ||| self	count=1
function	a temporary directory with ||| tmpdir	count=1
function	a break ||| word break	count=1
function	[function] but not ||| bundled gem [function]	count=3
module	this name ||| resolv dns name	count=1
module	analysis and ||| gem basicspecification	count=1
function	tracing ||| tracer	count=1
function_arg	[function_1] [arg_2] while parsing ||| [function_1] [arg_2]	count=2
arg	adds [arg] to this ||| [arg]	count=1
module	storing ||| net ftp	count=1
module	new array with ||| array	count=1
arg	formatter ||| formatter	count=1
function	below ||| log upto	count=1
module	to a set ||| gem requestset gemdependencyapi	count=1
function	stream ||| stream	count=6
function_arg	time from [arg_2] ||| [arg_2] [function_1]	count=1
module	matching that glob ||| gem	count=1
function	content type string ||| content type	count=1
function	returns this name as ||| to	count=1
module	for this element ||| rexml element	count=1
function_arg	[function_1] [arg_2] ||| net imap [function_1] [arg_2]	count=1
module	this ||| gzipreader	count=1
module	gem was installed ||| gem specification	count=1
function	suppressed [function_2] ||| [function_1] [function_2]	count=1
function	represents tuesday ||| tuesday	count=1
arg	block passed to ||| &block;	count=1
module	the feed or ||| rss atom feed	count=1
function	the exit value ||| exit value	count=2
function	win32 error of ||| win32	count=1
function	user ||| user	count=1
function_arg	a module [arg_2] ||| [arg_2] [function_1]	count=4
function	finds an ||| find	count=1
function	is a ||| ?	count=3
arg	the given sockets ||| sockets	count=2
module	:next :return ||| localjumperror	count=1
arg	the data ||| data	count=1
function	factory [function] ||| [function]	count=1
arg	collection ||| collection	count=1
arg	temporary [arg_2] ||| [arg_2] [arg_1]	count=2
function	type of method :both ||| method type	count=1
module	new rdoc ||| rdoc ri	count=1
function	some html [function] ‘&’, ||| html [function]	count=1
arg	defined by def ||| container single tk comment	count=1
module	as row access returning ||| csv table	count=1
module	that all file lists ||| specification	count=1
function	in ||| stats	count=1
arg	database for user ||| user reload_db	count=1
module	the [module] such ||| [module]	count=1
function_arg	[function_1] from certificate ||| [arg_2] [function_1]	count=1
function	to create a record ||| search record	count=1
function	directories create a list ||| list	count=1
function	they don’t already ||| gen sub	count=1
function	the id for ||| id	count=1
module	creates server sockets ||| server	count=1
module	tts ||| tottonly	count=1
function	hidden input ||| hidden	count=1
arg	list_item ||| list_item	count=3
arg	string ||| string 1 jan -4712 00:00:00 +0000'	count=2
module	following certificate and is ||| gem security policy	count=1
arg	[arg_1] to dest ||| [arg_2] [arg_1]	count=2
module	state ||| ext generator state	count=2
function	the full [function] name of ||| [function]	count=1
module	obj on the given ||| object	count=1
arg	name of the mailbox ||| mailbox	count=1
function	class klass [function] ||| new with [function]	count=1
arg	[arg] and backtrace ||| [arg]	count=2
function	returns true [function_2] ||| [returnv_1] unconverted fields [function_2]	count=1
module	key-value pair corresponding to ||| sdbm	count=1
module	a process :status ||| process	count=2
function	finds a comment for ||| find attr comment	count=1
module	the [module] specified ||| [module]	count=1
function_arg	visibility [arg_2] ||| [arg_2] [function_1]	count=2
function	integer memory location of ||| to i	count=1
returnv	the number of the ||| fixnum	count=1
function	of individual raw ||| raw	count=1
function	a read ||| read	count=1
module	returns an rdoc :toplevel ||| rdoc	count=1
module	with the ||| drb	count=1
function_arg	[function_1] [arg_2] first and returns self ||| array ary [function_1] [arg_2]	count=6
module	the given string ||| string	count=1
function_arg	the files [arg_2] ||| [arg_2] [function_1]	count=1
module	the number of ||| sslsocket	count=1
module	by using identical ||| indexer	count=1
function_arg	thread to [arg_2] ||| [function_1] [arg_2]	count=1
function	documented modules sorted by ||| get sorted	count=1
function	[function] obtained by ||| [function]	count=1
module	an ||| security	count=1
function	are commented out ||| commented out	count=2
module	converts ||| rdoc markup tohtmlsnippet	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=1
function	the union ||| union	count=1
module	be stored in the ||| webrick	count=1
function	installs [function_2] ||| [function_2] [function_1]	count=1
returnv	files returning the number ||| integer	count=1
function	a real number ||| real	count=1
function	[function_1] array of ||| [function_1] [function_2]	count=1
arg	[arg_1] port using ||| [arg_1] [arg_2]	count=4
function	method of current module ||| method	count=1
module	for nil ‘null’ ||| json ext generator generatormethods nilclass	count=1
module	if they don’t ||| darkfish	count=1
module	up to this ||| rdoc	count=1
module	zero ||| nilclass	count=2
function	ip address of ||| getaddress	count=2
arg	list with [arg_2] ||| [arg_1] [arg_2]	count=2
function	the line number ||| line	count=1
arg	starting with needed ||| needed set	count=1
function	the size of the ||| size	count=2
module	for rdoc ||| rdoc	count=2
returnv	is valid given the ||| bool	count=1
module	this class class myclassname ||| rdoc normalclass	count=1
function	[function_1] [function_2] ||| [function_2] allocated [function_1]	count=6
arg	[arg_1] [arg_2] ||| [arg_1] tk [arg_2]	count=2
module	the po entry in ||| rdoc	count=1
module	across multiple ||| array	count=1
function	the uri ||| drburi	count=1
arg	for tag ||| tag obj	count=1
module	returns ||| stats	count=1
arg	[arg_1] with name ||| [arg_1] [arg_2]	count=3
module	the 2 dependency ||| resolver	count=1
arg	and password if ||| password	count=1
function	a client ||| client	count=1
arg	associated with io ||| io level	count=1
arg	as an httpresponse ||| body initheader	count=3
rep	removes [function_arg_2] ||| [module_1] remove [function_arg_2]	count=3
module	values like ||| drb drbsslsocket sslconfig	count=1
module	from this hash instance ||| ext generator generatormethods hash	count=1
arg	stream of text that ||| text	count=1
module	with analysis ||| basicspecification	count=1
function_arg	[function_1] the path ||| [arg_2] [function_1]	count=21
function_arg	sections from text ||| sections text	count=2
function	a hash ||| hash	count=2
module	session storage ||| cgi session nullstore	count=1
arg	httpresponse object ||| initheader dest	count=1
module	to grab the ||| thread mutex	count=1
function	removes the [function_2] ||| [function_1] [function_2]	count=5
arg	path as ||| path	count=1
function	proxy uri ||| get proxy	count=1
arg	of sec seconds into ||| sec	count=1
module	matrix where the ||| matrix	count=2
function	writes the yaml file ||| write options	count=1
module	pop3 session and ||| pop3	count=1
function	block in the current ||| block	count=1
function	undefined in the receiver ||| undefined	count=1
function	the reference of the ||| drbref	count=1
function	[function] address ||| [function]	count=1
module	reading the [module] so that ||| [module]	count=1
function	win32 ||| win32	count=2
arg	given extensions for the ||| extensions	count=2
module	of the attribute ||| attribute	count=1
function	the line number where ||| line	count=1
function	true [function] ||| include [function]	count=4
module	a [module] :security :trustdir ||| [module]	count=1
module	html ||| rdoc methodattr	count=1
module	this struct ||| struct	count=1
function	[returnv_1] [function_2] when ||| [returnv_1] [function_2]	count=2
returnv	of the ||| fixnum	count=4
function_arg	if the value of [function_1] [arg_2] ||| bool [function_1] [arg_2]	count=1
function_arg	normal method [arg_2] ||| [arg_2] [function_1]	count=1
module	raises a parseerror ||| parseerror	count=1
function	::popen2e is similar to ||| popen2e	count=1
arg	the spec and ||| spec	count=1
function	return internal [function_2] ||| [function_2] [function_1]	count=2
function	rdoc documentation ||| rdoc	count=1
module	[module] so ||| [module]	count=1
arg	of the named ||| file_name	count=1
module	[module] number ||| [module]	count=1
arg	returns a subset ||| refname mailbox	count=1
function	list of available ||| name list	count=1
returnv	with multiple values ||| ydbm	count=1
arg	[arg_1] for time ||| [arg_1] issuer [arg_2]	count=1
function_arg	comment for [arg_2] ||| [arg_2] [function_1]	count=1
function	slice of <n> elements ||| slice	count=1
function	the generated docs will ||| gen	count=1
function	return a random ||| random	count=1
function	address as [function_2] ||| [function_1] [function_2]	count=1
module	gzipwriter object associated ||| zlib gzipwriter	count=2
function	[returnv_1] [function_2] ||| [returnv_1] disjoint [function_2]	count=4
function	to the root ||| root	count=1
module	the –platform option ||| gem versionoption	count=1
arg	the addr address ||| addr	count=1
arg	tuple from ||| tuple sec &block;	count=2
function	returns [function_2] ||| proc [returnv_1] [function_2]	count=3
module	a new string ||| string	count=4
module	set of ||| gem requestset gemdependencyapi	count=1
module	the document ||| rdoc markup document	count=3
module	:sslcertificate and :sslprivatekey ||| drb drbsslsocket sslconfig	count=1
module	this object’s ||| generator markup	count=1
function	scans content for rb_attr ||| do	count=1
arg	following tk setting the ||| single tk	count=1
function	nil -1 ||| infinite ?	count=1
function_arg	[function_1] state is ||| [function_1] x y [arg_2]	count=1
function	an idle ||| idle	count=1
module	:sslprivatekey have ||| drbsslsocket sslconfig	count=1
arg	tags [arg_2] ||| [arg_1] [arg_2]	count=2
function_arg	inserts string ||| insert output string	count=1
arg	creates a socket connected [arg_1] [arg_2] self ||| addrinfo connect to [arg_2] [arg_1]	count=1
function_arg	[function_1] if length ||| [function_1] length= [arg_2]	count=2
arg	given value ||| value	count=1
module	that glob will ||| gem	count=1
arg	store(), but set ||| set attr	count=1
function	attempts authentication and ||| auth only	count=2
function	be a header ||| header	count=1
arg	[arg_1] and ||| [arg_2] [arg_1]	count=12
arg	[arg_1] fills the ||| [arg_1] [arg_2]	count=1
module	that a ||| drb drbsslsocket sslconfig	count=1
function	indicate if ||| ?	count=1
function_arg	[function_1] method ||| [function_1] delegator [arg_2]	count=1
function_arg	filter val ||| filter= val	count=1
module	the specification ||| resolver	count=1
returnv	object ||| obj	count=7
arg	union with [arg] ||| [arg]	count=1
module	component of ||| pathname	count=1
function	[function_1] args hash ||| [function_1] [function_2]	count=5
function	parsed elements ||| xmlschema	count=1
module	other match [module] if other ||| gem [module]	count=1
function	the #page_dir to the ||| page dir	count=1
module	the ||| httpstatus	count=1
module	to ||| requestset gemdependencyapi	count=2
function	[function_1] [function_2] from the objectspace extension ||| [function_1] [function_2]	count=8
module	the generated docs ||| rdoc generator	count=1
arg	[arg_1] and ||| [arg_1] end [arg_2]	count=4
module	if [module] ||| [module]	count=15
function_arg	instance variable [arg_2] ||| [arg_2] [function_1]	count=2
module	create returns an ||| tomdoc	count=1
arg	determines the ||| single tk method	count=1
module	add a certificate to ||| gem	count=1
returnv	if it ||| self	count=1
module	that are ||| ssl sslsocket	count=1
module	lock source ||| source lock	count=1
arg	specifying the threads to ||| threads	count=1
module	generated ||| generator	count=1
module	to another version ||| gem version	count=1
arg	running the given external ||| env command... options	count=1
module	of this singleton ||| rdoc	count=1
function	[function_1] auth cram-md5 ||| [function_2] [function_1]	count=1
module	table ||| table	count=7
function	with a prefix ||| pre proc	count=1
arg	command and returns the ||| cmd	count=1
arg	for the given key ||| key	count=1
module	new ipaddr built ||| ipaddr	count=3
module	field with the ||| csv row	count=1
module	is ||| openssl	count=1
module	immediately available for ||| openssl ssl sslsocket	count=1
function	[function_1] singleton ||| [function_2] [function_1]	count=1
module	file lists have ||| specification	count=1
function	returns the path parameter ||| path	count=1
function	for ||| accept list item	count=4
module	command ||| net imap	count=5
module	waits if ||| thread mutex	count=1
function	matrix [function] ||| [function]	count=1
arg	methodname ||| methodname	count=2
arg	wraps the exception error ||| error	count=1
function_arg	[function_1] — ||| -1,_0,_+1 [function_1] [arg_2]	count=1
returnv	and returns iseq ||| iseq	count=1
function	the sine ||| sin	count=1
arg	parts and including extension-specific ||| parts	count=1
module	uninstalled when gem ||| gem	count=2
function	the destination ||| destination	count=2
module	supplied ||| parent	count=1
arg	the hard_break ||| hard_break	count=1
module	by case-insensitive ||| net httpheader	count=1
module	and returns an rdoc ||| rdoc	count=1
rep	[module_1] [function_arg_2] ||| [module_1] template [function_arg_2]	count=7
module	by stou stor appe ||| ftp mlsxentry	count=1
function	extensions to build ||| extensions	count=1
arg	uri to path ||| uri path	count=1
function	return full names ||| names	count=1
arg	opts ||| opts	count=1
module	:ldap ||| ldap	count=1
function	true if ||| bool none ?	count=1
module	process to ||| gem testcase	count=1
function	[function_1] until the ||| [function_2] [function_1]	count=1
function	[returnv_1] if ||| threadswait [returnv_1] empty [function_2]	count=1
module	and certificate ||| gem security	count=1
module	process to its original ||| testcase	count=1
function_arg	[function_1] values as ||| [arg_2] [function_1]	count=3
function	a options request to ||| options	count=1
function	with the same ||| eql	count=1
function_arg	form reserved [arg_2] ||| [arg_2] [function_1]	count=1
module	c code corresponding to ||| parser c	count=1
function	the directories the generated ||| gen sub directories	count=1
module	a new [module] object where ||| [module]	count=1
function	found ||| found ?	count=1
module	read ||| zlib gzipreader	count=1
function	stream is ||| stream	count=1
function	the rounding mode ||| rounding mode	count=2
arg	found klasess and ||| name found klasses	count=1
function	the defaults for methods ||| methods	count=1
module	parent if supplied ||| rexml	count=1
arg	other wraps ||| ptr other	count=2
function_arg	modulo other ||| % big other	count=1
arg	given command with ||| command	count=1
function	symlink ||| symlink	count=1
function	[function_1] all tuples ||| [function_2] [function_1]	count=1
function	constant with ||| const	count=1
function	[returnv_1] interface addresses ||| [function_2] [returnv_1]	count=1
function_arg	adds aproc [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	in place [arg_2] ||| array ary rotate [function_1] [arg_2]	count=3
arg	with the signing_key ||| signing_key	count=1
module	documentation of this codeobject ||| rdoc codeobject	count=1
module	the following configuration being ||| config	count=1
module	the oldest dependencyrequest ||| resolver requirementlist	count=1
arg	up to ||| flags	count=2
module	was terminated :break :redo ||| localjumperror	count=1
function	a range object ||| to range	count=1
function	[returnv_1] if ||| [returnv_1] tomdoc [function_2]	count=1
returnv	an array ||| array	count=12
module	the [module] the ||| [module]	count=4
function	or separated named) ||| class or module	count=1
function_arg	names [arg_2] ||| [arg_2] [function_1]	count=1
module	@param ||| rexml parent	count=3
arg	or not the ||| headers opt &b;	count=3
module	visitor ||| rdoc markup totableofcontents	count=2
function	[function_1] activex ||| [function_2] [function_1]	count=1
function	[returnv_1] if ||| [returnv_1] tuesday [function_2]	count=1
module	n’th ||| elements	count=1
function_arg	[function_1] of real ||| [arg_2] [function_1]	count=6
function	:heading [function_2] ||| [function_2] [function_1]	count=2
module	requirement will not ||| gem requirement	count=1
arg	issues [arg] passes ||| [arg]	count=1
function	to be read again ||| readagain	count=1
arg	as a fiber-local variable ||| sym	count=1
function	from the ||| name	count=1
module	when the ||| logger	count=1
function	string ||| string	count=2
function	the visitor ||| list	count=4
function	[function_1] writable by ||| [function_2] [function_1]	count=1
arg	of cookie-name=>cookie pairs ||| raw_cookie	count=1
module	the dependency will not ||| dependency	count=1
function	[function] so ||| rotate [function]	count=3
arg	given ||| level	count=1
module	look for directives ||| rdoc markup preprocess	count=1
function	[function_1] arguments ||| gem command [function_1] [function_2]	count=4
module	pager ||| ri driver	count=1
function	[function_1] directives in ||| [function_2] [function_1]	count=2
function	before the ||| before	count=1
function	method of ||| method	count=1
function	length and number ||| stats	count=1
function	is the current ||| inspect	count=1
module	the oldest ||| gem resolver requirementlist	count=1
arg	if the given calendar ||| year month mday	count=2
arg	for rdoc and ||| rdoc	count=1
arg	comment [arg_2] ||| [arg_1] [arg_2]	count=1
function	found within the library ||| library	count=1
function_arg	transcoded [arg_2] ||| [function_1] [arg_2]	count=1
module	this response ||| ocsp response	count=2
function	command to close ||| close	count=1
function	adds a validation ||| add status	count=1
module	[module] was self-signed ||| [module]	count=3
arg	filename for ||| filename	count=1
function	the request is for ||| implicit ?	count=1
function	checkbox elements as ||| checkbox group	count=1
module	state object configured ||| generator state	count=1
function	the max ||| max	count=1
function	of extra ||| specific extra	count=2
function	named public [function_2] ||| [function_1] [function_2]	count=1
module	checks that the specification ||| gem specification	count=1
function	the ri ||| ri	count=1
function	truncated to ||| truncate	count=1
returnv	sets ||| self	count=1
arg	path ||| path options	count=1
module	the default options request ||| webrick	count=1
arg	[arg] objects ||| [arg]	count=6
arg	tree to store ||| store	count=1
module	returns the ||| stringio	count=1
function	::popen2e is similar ||| popen2e	count=1
function	the bound receiver ||| receiver	count=1
arg	if path [arg_2] ||| [arg_2] [arg_1]	count=1
function	that decode ||| decode	count=1
module	log level ||| logger	count=2
function	as an integer ||| to i	count=2
function	encoding of the ||| external encoding	count=2
function	internal string ||| internal	count=1
module	given key-value ||| sdbm	count=1
module	[module] host optionally ||| [module]	count=1
arg	to and returns ||| to	count=2
module	a [module] ||| [module] resolver	count=3
function	“with” options with on ||| dir config	count=1
function	aproc as [function] ||| [function]	count=2
arg	root options ||| root options default	count=2
arg	[arg_1] store ||| [arg_2] [arg_1]	count=4
module	number of ||| ssl sslsocket	count=1
function	removed from the ||| removed	count=2
module	the alias of ||| rdoc alias	count=1
function	on but at head ||| on head	count=2
module	for ||| openssl ssl sslsocket	count=2
arg	nodes matching a ||| namespaces variables	count=1
function	licenses ||| license	count=1
function	outputs ||| display	count=1
function_arg	[function_1] [arg_2] ||| date date [function_1] [arg_2]	count=3
module	the ftp session ||| net	count=1
arg	pixel at x y ||| x y	count=2
returnv	fully ||| self	count=1
module	file ||| zlib	count=1
function_arg	copies stream src ||| copy stream src	count=1
function	rdoc-schemed ||| special rdoclink	count=1
module	attribute ||| markup attributes	count=1
module	password in the ||| webrick httpauth htpasswd	count=1
module	thread ||| thread mutex	count=2
function	inverse of the ||| inv	count=1
function	passing it any arguments ||| send	count=1
function	[returnv_1] if ||| [returnv_1] symlink [function_2]	count=1
function	date ||| date	count=3
module	database contains ||| dbm	count=1
function	less than that of ||| <	count=1
function	named public ||| public	count=1
function	following keys ||| session cache stats	count=1
module	rss ||| rss	count=1
function	[function_1] by ||| [function_2] [function_1]	count=1
module	and number of undocumented ||| rdoc	count=1
module	win32ole_method object which represents ||| win32ole_method	count=1
module	the [module] to checksums ||| [module]	count=1
function	[function_1] [function_2] ||| [function_2] login auth [function_1]	count=1
module	starts ||| profiler__	count=1
arg	file similarly to kernel#load ||| fn priv	count=1
function	or separated ||| get class or	count=1
function	[function_1] prime factorization ||| [function_2] [function_1]	count=2
function	low-level ||| sysread	count=1
module	for ||| markup tohtml	count=4
function	the total ||| total out	count=1
function	the internal ||| internal	count=1
function	[returnv_1] [function_2] ||| [returnv_1] grpowned [function_2]	count=4
function	if ||| !	count=1
function	[function_1] internal ||| [function_2] [function_1]	count=5
function	node of the ||| node	count=1
function	binary ||| binary	count=1
function	of heading to ||| heading	count=1
module	new gem ||| gem	count=2
function	send ||| ctrl	count=1
module	to the table ||| markup totableofcontents	count=1
arg	optional block in ||| &block;	count=2
function	a look at constructive ||| new	count=1
module	on which stat ||| file stat	count=1
function	removes the last ||| remove	count=2
arg	rows [arg_2] ||| [arg_2] [arg_1]	count=1
module	list ||| rdoc rdoc	count=1
module	the encoding object that ||| stringio	count=1
function	the class [function_2] ||| [function_2] [function_1]	count=5
arg	element child ||| element	count=1
function	in it and escapes ||| escape	count=1
function	if net/http is in ||| 2 ?	count=1
module	length and number ||| stats	count=1
function	object ||| new	count=1
function_arg	[function_1] [arg_2] destroyed ||| [function_1] [arg_2] aproc	count=2
module	token to the ||| markup	count=1
function	[function] child for ||| [function]	count=1
module	rdoc :toplevel for this ||| rdoc	count=1
function	each [function] in ||| each [function]	count=1
arg	so that [arg] comes ||| [arg]	count=1
function	api compatibility version ||| api version	count=2
function	reference ||| reference	count=1
function	tracing object allocations ||| trace object allocations	count=5
function	[returnv_1] the status ||| [returnv_1] [function_2]	count=1
module	and :sslprivatekey have ||| drb drbsslsocket sslconfig	count=1
returnv	returns ||| bool	count=8
module	to pass ||| ri driver	count=1
function	::capture2e captures the standard ||| capture2e	count=1
function	charmap name ||| charmap	count=1
function	the warn ||| warn	count=1
module	the unix socket ||| basicsocket	count=1
returnv	to a string don’t ||| string	count=1
function	if the set ||| ?	count=3
module	and :sslprivatekey have been ||| drbsslsocket sslconfig	count=1
arg	named by symbol to ||| symbol	count=1
arg	with name ||| name	count=10
module	streamui ||| streamui	count=1
function_arg	add the [arg_2] ||| [arg_2] [function_1]	count=2
module	other parameters ||| drb drbsslsocket	count=1
function	of all [function] ||| dependent [function]	count=3
arg	configuration config ||| config	count=1
function	if the [function_2] ||| [function_2] env [function_1]	count=4
module	gems to ||| gem requestset	count=1
module	returns zero ||| nilclass	count=2
module	token to ||| rdoc markup	count=1
function	as a thread-local ||| thread	count=1
arg	[arg_1] [arg_2] ||| [arg_2] path flags [arg_1]	count=1
module	[module] of key ||| [module]	count=1
module	element ||| element	count=4
arg	and subject of subject ||| subject	count=1
function	arctangent ||| atan	count=1
function	default options ||| defaults	count=1
module	variable was ||| gem	count=1
function	of the form rdoc-…: ||| rdoclink	count=1
arg	str ||| string	count=1
module	net ||| xmlrpc client	count=4
module	adds ||| gem package tarwriter	count=1
function	the given [function] ||| [function]	count=1
arg	on front ||| front desc	count=1
function	a self-signed certificate ||| cert	count=1
function	the list of available ||| list	count=1
module	live in ||| darkfish	count=1
module	for false ‘false’ ||| ext generator generatormethods falseclass	count=1
arg	key false otherwise ||| key	count=1
function	the bit pattern represented ||| chmod	count=1
arg	given base_method ||| base_method	count=1
module	the ||| rdoc markup tordoc	count=4
function	and [function] the session’s ||| [function]	count=1
module	if they don’t already ||| generator darkfish	count=1
function	[function_1] from the ||| [function_2] [function_1]	count=4
function_arg	given header ||| key ? header	count=1
module	written out [module] is loadable ||| [module]	count=1
arg	dispatch interface ||| awin32ole	count=1
function_arg	[function_1] [arg_2] in terms a human ||| [function_1] [arg_2]	count=3
function	proxy ||| find proxy	count=1
module	of the [module] false otherwise ||| [module]	count=1
arg	block_quote to the output ||| block_quote	count=1
module	–platform option to the ||| versionoption	count=1
module	to change ||| net	count=1
module	immediately available for ||| sslsocket	count=1
module	by the [module] ||| [module]	count=6
module	pair from [module] and returns ||| [module]	count=1
arg	net :httpresponse object ||| uri_or_host path port &block;	count=1
returnv	new array ||| array	count=1
function	option parser ||| option	count=2
module	to the [module] returns self ||| [module]	count=1
module	of the comment are ||| comment	count=2
function	parse each file on ||| parse	count=1
module	include that ||| markup include	count=1
arg	but set ||| set attr flags	count=1
function	[function_1] win32 ||| [function_2] [function_1]	count=12
module	been ||| drb drbsslsocket sslconfig	count=2
function	get all [function_2] ||| [function_2] [function_1]	count=8
function	of time ||| time	count=2
module	a xml-rpc server listening ||| server	count=1
function	public methods ||| public methods	count=2
module	returns the ||| syslog logger	count=1
module	this constant for ||| rdoc constant	count=1
module	this tms object ||| benchmark tms	count=2
function	[returnv_1] [function_2] ||| [returnv_1] valid [function_2]	count=3
module	available for ||| openssl ssl	count=1
returnv	returns [returnv] only ||| [returnv]	count=1
function	empty string ||| s	count=1
arg	connected [arg] using ||| [arg]	count=1
arg	the given strings ||| strings	count=1
arg	cn and ||| cn	count=1
arg	path ||| path data	count=1
function	[function_1] directives ||| [function_1] [function_2]	count=2
arg	in string ||| string	count=1
returnv	returning the number of ||| integer	count=1
module	onto the io raising ||| gem package tarwriter	count=1
arg	[arg_1] req to ||| [arg_2] [arg_1]	count=4
function	a stream ||| stream	count=1
function	[function_1] false if ||| [function_1] ordinal [function_2]	count=2
module	immediately ||| openssl ssl sslsocket	count=2
module	command to add ||| net imap	count=1
module	instance has a ||| openssl pkey	count=1
module	for this ||| openssl	count=2
function	the preset dictionary and ||| set dictionary	count=1
function	defined by mod or ||| defined	count=3
function_arg	[function_1] [arg_2] ||| [function_1] level [arg_2]	count=1
function	truncated to an ||| int	count=1
function	reads ||| read nonblock	count=1
function	true [function_2] ||| [returnv_1] has text [function_2]	count=1
function	included modules ||| include	count=1
function_arg	[function_1] parts to ||| [function_1] [arg_2]	count=1
arg	port and returns ||| port	count=1
module	from this hash ||| hash	count=1
arg	declaration ||| declaration	count=1
arg	default according to arg ||| arg default	count=2
module	sets up a ||| ri	count=1
module	file as an ||| file	count=1
function	version [function_2] ||| [function_2] api [function_1]	count=1
function	[function] according ||| [function]	count=1
arg	other which ||| other	count=1
module	in if ||| generator darkfish	count=1
function	resets ||| reset	count=4
arg	sends ||| initheader	count=1
module	:http#read_timeout and ||| client	count=1
arg	to the exponent ||| exponent	count=1
module	locked [module] is considered ||| [module]	count=1
function	returns true [function_2] ||| [returnv_1] version 1 [function_2]	count=1
function	contents of a stream ||| stream	count=1
function	variable [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] list for ||| [function_2] [function_1]	count=1
function	server in non-blocking manner ||| accept nonblock	count=1
function	an openssl ||| email to	count=1
function	[returnv_1] if ||| [returnv_1] stream [function_2]	count=1
function_arg	warning [arg_2] ||| [function_1] [arg_2]	count=1
function	paths for undocumented ||| also	count=1
module	is an element ||| rexml	count=1
function	[function] defining ||| [function]	count=2
function	html form ||| form	count=1
module	the output buffer ||| zlib zstream	count=1
arg	options ||| options	count=11
function	a properly-space list of ||| generator	count=1
module	this codeobject ||| codeobject	count=4
function	[function_1] local ||| [function_1] [function_2]	count=4
module	index @param index ||| rexml parent	count=1
module	in the feed ||| feed entry	count=1
function_arg	template for [arg_2] ||| [arg_2] [function_1]	count=7
module	as the [module] :context#workspace ||| [module]	count=1
module	takes the first digit ||| response	count=1
function	original name str in ||| orig name=	count=1
arg	[arg_1] port and ||| [arg_2] [arg_1]	count=4
arg	transfers [arg_2] ||| [arg_2] [arg_1]	count=8
arg	to the block ||| &block;	count=1
function	real user ||| uid	count=1
function	integer ||| i	count=1
function	contains the given ||| include	count=1
returnv	with no arguments sets ||| self	count=1
function	absolute ||| absolute	count=3
function	writes str ||| write	count=1
module	with the ||| drb drbsslsocket sslconfig	count=1
function	the integer memory location ||| to i	count=1
function	builds a paragraph that ||| build paragraph	count=1
function	unless documentation ||| start	count=1
function	[function_1] method :both ||| [function_2] [function_1]	count=6
arg	it will cause ||| element_name attributes raw_content	count=1
module	verbose download reporter that ||| gem streamui verbosedownloadreporter	count=1
function	iterates over each ||| each	count=1
module	installed ||| installer	count=2
function	return the setter ||| setter	count=1
module	for restricting gems to ||| gem requestset	count=1
function	[function_1] comment ||| [function_2] [function_1]	count=3
arg	of length [arg] ||| [arg]	count=1
arg	searching criteria and ||| keys charset	count=1
module	:sslprivatekey have been ||| drb	count=1
arg	an ||| auth_type	count=1
module	visitor for html ||| markup tohtml	count=1
function	all tuples in the ||| all	count=1
arg	the integer index ||| index	count=1
module	:nodes ||| nodes	count=4
function	progress information ||| debug	count=1
arg	with a minimum ||| name	count=1
function_arg	[function_1] in io ||| [function_1] [arg_2]	count=1
function	gets the basic ||| basic	count=1
arg	for the given strings ||| strings	count=1
module	or that a ||| drbsslsocket	count=1
function	system entry ||| entry secure	count=1
module	arguments a command ||| command	count=1
function	local address ||| local	count=1
module	files ||| options	count=2
function_arg	http [arg_2] ||| [function_1] [arg_2]	count=1
arg	scheme ||| scheme	count=1
module	dsa instance ||| dsa	count=1
function	[returnv_1] the year ||| [returnv_1] [function_2]	count=1
module	convert a druby ||| drb drbserver	count=1
arg	tuple from the ||| tuple sec	count=2
arg	::capture3 captures the ||| stdin_data: '' binmode: false	count=1
module	int down to ||| integer	count=1
function	list of the documented ||| module list	count=1
function	the file with name ||| file	count=1
arg	and includes ||| includes extends	count=1
arg	key-value-pair with [arg] from ||| [arg]	count=1
returnv	at end of string ||| string	count=2
function_arg	a superset [arg_2] ||| [arg_2] [function_1]	count=1
function	create the ||| sub	count=1
module	reformats the object’s object_id ||| ppmethods	count=1
function	header ||| have header	count=1
module	or nil if the ||| stat	count=1
function	the union of the ||| union	count=1
module	first digit ||| smtp response	count=1
arg	[arg_1] req on ||| [arg_2] [arg_1]	count=1
function	number of undocumented ||| stats	count=1
arg	[arg_1] and string ||| [arg_1] [arg_2]	count=4
function	check for ||| check	count=1
arg	[arg_1] implicit start ||| [arg_1] [arg_2]	count=5
module	:imap object ||| imap	count=1
function_arg	size to [arg_2] ||| [function_1] [arg_2]	count=3
module	sets a ||| makemakefile	count=1
module	bignum ||| bignum	count=2
function	new array [function_2] ||| [returnv_1] [function_2]	count=1
function_arg	[function_1] length ||| [function_1] length= [arg_2]	count=1
function	super ||| super	count=1
arg	obj into an ||| obj	count=1
module	represented in content-range header ||| net httpheader	count=1
arg	the gem ||| gem	count=1
arg	to host and path ||| path host allowed_push_host &block;	count=1
module	tms object ||| benchmark tms	count=2
module	returns ||| httpstatus	count=1
module	gem ||| gem remotefetcher	count=2
function	module of the ||| modules	count=1
arg	file named filename ||| filename mode	count=1
function	[function_1] parens ||| [function_1] [function_2]	count=4
module	for use [module] ||| [module]	count=1
function_arg	protect [arg_2] ||| uri generic [function_1] [arg_2]	count=3
function	[function_1] satisfied by ||| [function_2] [function_1]	count=2
returnv	the return [returnv] ||| [returnv]	count=3
function	list of [function_2] ||| [function_2] [function_1]	count=2
function	redirection ||| redirect	count=1
module	the visitor ||| rdoc markup tordoc	count=2
arg	from a string ||| string 1 jan -4712 00:00:00 +0000' start	count=2
function	will live in ||| sub	count=1
function	and just before ||| pre	count=1
module	in that buffer ||| zlib zstream	count=1
function	returns the parent ||| parent	count=1
function	angle part ||| angle	count=1
module	this specification ||| gem specification	count=2
function	siginfo ||| siginfo	count=1
function_arg	power of [arg_2] ||| [function_1] [arg_2]	count=1
function	switches the mode ||| by col or	count=1
module	rdoc :toplevel file ||| rdoc codeobject	count=1
module	encodes this dh to ||| dh	count=2
module	gem ||| gem command	count=1
module	[module] and including ||| [module]	count=1
arg	given input_method ||| input_method	count=1
module	a version from the ||| gem version	count=1
arg	that match tuple ||| event tuple expires	count=1
function_arg	[function_1] other_time ||| [function_1] [arg_2]	count=2
function	machine ||| size	count=1
function	every ||| if	count=1
function	same content ||| eql	count=1
function_arg	the index [arg_2] ||| [arg_2] [function_1]	count=1
returnv	[returnv] each key-value ||| [returnv]	count=1
function	and assigns the ||| []=	count=1
module	the following certificate and ||| gem security policy	count=1
arg	[arg_1] path ||| [arg_2] [arg_1]	count=1
rep	[module_1] page name ||| [module_1] ri driver display [function_arg_2]	count=1
function	the dependencies ||| dependencies	count=1
function	sockaddr ||| sockaddr in	count=1
module	the download reporter ||| streamui verbosedownloadreporter	count=1
function	skip the var ||| skip	count=1
module	enum with the ||| enumerable	count=1
module	directives ||| markup preprocess	count=2
arg	string according to some ||| string 1 jan -4712 00:00:00 +0000'	count=2
function	creates [function_2] ||| [function_1] [function_2]	count=2
arg	request into this response ||| request	count=1
returnv	to an integer ||| integer	count=2
module	convert string ||| string	count=1
arg	an httpresponse ||| initheader dest	count=1
module	in if they don’t ||| rdoc	count=1
arg	current process by running ||| env command... options	count=1
module	the ||| localjumperror	count=1
module	extension ||| extension	count=1
function	text [function_2] ||| [function_2] [function_1]	count=4
module	the calling [module] will suspend ||| [module]	count=1
arg	mailbox [arg_2] ||| [arg_2] [arg_1]	count=1
arg	directory root options may ||| root options	count=1
function	[function_1] local address ||| [function_1] [function_2]	count=3
module	adds tts ||| tottonly	count=1
module	the locale ||| rdoc i18n locale	count=1
function	a hash from ||| hash	count=1
module	[module] for ||| rdoc [module]	count=1
function	[function_1] child after ||| [function_2] [function_1]	count=1
function	that signal a break ||| break	count=2
module	to the files ||| rdoc options	count=1
function	[function] in ||| utc [function]	count=2
function	possible ||| possible	count=1
returnv	terminated :break ||| symbol	count=1
function	truncated ||| truncate	count=1
module	when the ||| syslog logger	count=1
function_arg	[function_1] current_set ||| [arg_2] [function_1]	count=5
function	page list ||| page list	count=2
function	if time represents ||| ?	count=2
function	trace request ||| trace	count=1
rep	[module_1] class klass ||| [module_1] [function_arg_2]	count=4
function	self-signed certificate ||| cert	count=1
function	removes the definition of ||| remove class	count=1
arg	it [arg] ||| size [arg]	count=1
arg	string or block in ||| string filename	count=1
function	files on the ||| files	count=1
module	stat that ||| stat	count=1
function	:pointer ||| ref	count=1
module	this object to ||| object	count=1
function	and assigns ||| []=	count=1
arg	module assigned to var_name ||| var_name	count=1
module	represents @return edge the ||| gem resolver molinillo dependencygraph	count=1
function	which contains address_family and ||| peeraddr	count=1
function	[function] passed ||| [function]	count=2
function	to ||| setup	count=1
arg	for size ||| size initial_message terminal_message	count=1
arg	which is either ||| data	count=1
returnv	children returning [returnv] ||| [returnv]	count=2
function	pipe false otherwise ||| pipe	count=1
function	[function] the ||| block [function]	count=3
function	a string [function_2] ||| [function_2] [returnv_1]	count=2
module	syslog warning log ||| syslog logger	count=1
arg	[arg] to this ||| [arg]	count=2
arg	n matrix ||| n zero one	count=1
function	on completion ||| completion append	count=1
function	passing ||| send	count=2
arg	from a [arg_2] ||| [arg_2] [arg_1]	count=6
arg	content to ||| content	count=1
module	number of bytes ||| ssl	count=1
function	parses ||| parse meta	count=1
module	removes the tempdir unless ||| gem testcase	count=1
module	adds ||| package tarwriter	count=1
function	its der encoding ||| der	count=2
module	the ringserver ||| rinda ringserver	count=1
arg	value of fix is ||| fix	count=1
function	[function_1] a file ||| [function_1] [function_2]	count=1
function	output directory ||| output dir	count=2
function	resets the position of ||| rewind	count=1
module	of [module] element yielding ||| [module]	count=1
function	base label ||| base label	count=4
function	[function_1] completely closed ||| [function_2] [function_1]	count=2
module	file ||| specification	count=1
arg	flushes text ||| text	count=1
function	removes ifdefs that ||| handle ifdefs in	count=1
arg	:dependency dep [arg_2] ||| [arg_2] [arg_1]	count=1
module	following certificate and is ||| security policy	count=1
function	a ||| from	count=3
returnv	as [returnv] ||| [returnv]	count=2
function_arg	with [arg_2] ||| [function_1] [arg_2]	count=3
function	checkbox input element ||| checkbox	count=1
module	ios is associated with ||| io	count=1
module	of ||| gem	count=2
module	from ||| zlib	count=1
arg	fills the cache ||| page klass	count=1
function	gem version ||| gem	count=1
module	identical objects as ||| indexer	count=1
module	this ||| localjumperror	count=1
module	the [module] for which ||| [module]	count=1
module	the generated docs will ||| rdoc generator	count=1
module	object ||| rexml	count=1
function	of ||| stats	count=1
arg	[arg_1] contains member ||| [arg_2] [arg_1]	count=1
function	that is relative to ||| gen relative	count=1
module	a ||| drb drbsslsocket	count=1
function	emacs ||| emacs	count=1
function	[function_1] method that ||| [function_2] [function_1]	count=1
module	from this ||| zlib	count=1
function	[returnv_1] instance ||| [returnv_1] [function_2]	count=1
function_arg	transparent if [arg_2] ||| [function_1] x y [arg_2]	count=3
arg	root options ||| root options	count=1
function	[function_1] pattern match ||| [function_2] [function_1]	count=3
module	or :noreason ||| localjumperror	count=1
function	pattern match ||| match	count=1
module	this module where the ||| module	count=1
function	with the classes ||| classes and	count=1
function	:http#open_timeout ||| timeout=	count=1
module	from ||| rdoc classmodule	count=1
arg	digests match ||| key digests	count=1
function	global [function_2] ||| [function_2] [function_1]	count=1
arg	given host [arg_2] ||| [arg_1] [arg_2]	count=1
module	cert signature ||| x509 request	count=1
arg	[arg_1] to out ||| [arg_2] [arg_1]	count=12
function	set ||| new	count=1
function	module [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] handling req ||| [arg_1] [arg_2]	count=1
arg	child ||| child	count=1
function	the flags ||| flags	count=1
module	environment variable ||| gem testcase	count=1
function	sends ||| sendcmd	count=1
function_arg	[function_1] decimal ||| [arg_2] [function_1]	count=6
module	they don’t ||| generator	count=1
function	class or module ||| classes or modules	count=1
module	if it isn’t available ||| mutex	count=1
module	as [module] ||| [module]	count=1
module	a [module] of ||| [module]	count=2
module	tuple from ||| rinda tuple	count=1
module	component array ||| uri generic	count=1
function	removes the [function_2] ||| [function_2] [function_1]	count=5
module	xpath ||| xpath	count=1
module	that :sslcertificate and :sslprivatekey ||| sslconfig	count=1
module	response class ||| net smtp response	count=1
function	is for ||| implicit ?	count=1
module	class class << ||| singleclass	count=1
function	comment from ||| comment	count=1
module	peer ||| sslsocket	count=1
function	html ||| html	count=2
function	start of 1970 ||| make expires	count=1
function	base [function_2] ||| [function_1] [function_2]	count=4
module	of this [module] and ||| [module]	count=1
module	the command ||| command	count=6
function	[returnv_1] [function_2] ||| [returnv_1] installable platform [function_2]	count=2
returnv	a version from the ||| instance	count=1
module	constructor ||| rexml parent	count=2
function	assigns the ||| []=	count=1
arg	and [arg] in conjunction ||| [arg]	count=1
function_arg	square root [arg_2] ||| [arg_2] [function_1]	count=3
rep	filters [function_arg_2] ||| [module_1] filter [function_arg_2]	count=4
function	time object) ||| time atime	count=1
function	adds tts from ||| accept block	count=1
module	this table in a ||| csv table	count=1
module	to a set of ||| requestset gemdependencyapi	count=1
arg	addr address ||| addr	count=1
function_arg	underlying [arg_2] ||| [arg_2] [function_1]	count=2
arg	based on the path ||| path	count=1
function	ruby ||| ruby	count=4
function	[returnv_1] [function_2] ||| [returnv_1] close on exec [function_2]	count=1
module	for html snippet ||| tohtmlsnippet	count=1
function_arg	[function_1] the signatures ||| [arg_2] [function_1]	count=2
module	this section if ||| context section	count=1
module	cert ||| openssl x509 request	count=2
arg	user for the ||| user	count=1
module	no possible matching specifications ||| molinillo specificationprovider	count=1
module	if supplied will be ||| rexml parent	count=1
module	maximum ||| ext generator state	count=1
module	@param parent ||| parent	count=1
function	result of the ||| verify result	count=1
function	starts tracing object allocations ||| trace object allocations	count=2
module	[module] using ||| [module]	count=2
returnv	proc ||| proc	count=1
function_arg	[function_1] [arg_2] ||| integer [function_1] [arg_2]	count=4
module	default visibility for subsequently ||| module	count=1
module	the first ||| syslog logger	count=1
module	for restricting gems ||| gemdependencyapi	count=1
function	remove the [function] from the ||| delete [function]	count=1
module	store ||| store	count=10
function	with ||| dir	count=1
arg	path ||| path force	count=2
function	[function_1] a diagonal ||| [function_2] [function_1]	count=2
function	paths for ||| also	count=1
arg	given types ||| types	count=2
function	unprocessed – raw ||| normalized	count=1
function	[function] value ||| [function]	count=2
arg	leap [arg] proleptic ||| [arg]	count=2
arg	running on front ||| front	count=1
arg	object configured by opts ||| opts	count=1
function	public instance [function_2] ||| [function_1] [function_2]	count=1
returnv	level == [returnv] only ||| [returnv]	count=1
function	prepares the visitor for ||| accept	count=4
module	and ||| drb drbsslsocket sslconfig	count=2
module	the elapsed real time ||| benchmark	count=1
rep	[module_1] [function_arg_2] ||| [module_1] set [function_arg_2]	count=1
function	all classes and modules ||| classes and modules	count=1
module	version string not ||| gem version	count=1
function	the rank ||| rank	count=1
arg	the given attribute definition ||| key	count=1
function	header [function_2] ||| [function_1] [function_2]	count=2
arg	format_string to any ||| format_string	count=1
module	docs will live in ||| darkfish	count=1
function	passed an gem :installer ||| install	count=1
function	[returnv_1] [function_2] returned as a ||| [returnv_1] return [function_2]	count=1
module	a single-column matrix ||| matrix	count=1
module	output through ||| rdoc ri	count=1
function	form for ||| platform	count=1
module	:sslprivatekey ||| drbsslsocket sslconfig	count=2
arg	host and ||| host	count=2
function	udp/ip [function] ||| udp [function]	count=1
function	verify the string ||| verify	count=1
function_arg	module named name ||| module class_type name	count=1
arg	ruby ||| ruby	count=1
module	up ||| generator	count=1
arg	the given opts to ||| opts	count=1
function	[function_1] empty? ||| [function_2] [function_1]	count=2
module	every message digest ||| digest	count=1
module	git ||| gem requestset gemdependencyapi	count=1
module	entity object itself ||| rexml entity	count=1
arg	[arg_1] pattern ||| [arg_2] path [arg_1]	count=1
function	this dependency request match ||| match	count=1
arg	a comment to be ||| comment	count=1
module	downloading ||| specification	count=1
function	each key value pair ||| delete	count=1
module	use for generating xml ||| xmlrpc parserwriterchoosemixin	count=1
function	create the directories the ||| directories	count=1
module	files so that ||| gem	count=1
module	this list ||| rdoc markup list	count=1
function	appended on completion ||| completion append	count=1
function	name ||| by name	count=1
function	[function] using ||| tr [function]	count=1
module	c union ||| fiddle cunionentity	count=1
module	sends a ||| smtp	count=1
module	the number of ||| ssl	count=1
module	graph to which ||| resolver molinillo	count=1
module	downloads ||| resolver activationrequest	count=1
module	this list ||| markup list	count=1
function	using ||| dir config	count=1
arg	and connects ||| port helo user secret authtype	count=1
module	already exist ||| darkfish	count=1
function_arg	[function_1] the gem ||| [function_1] [arg_2]	count=2
arg	source object @param arg ||| arg	count=1
module	by :gc_invoke_time ||| gc profiler	count=1
function	[function_1] input characters ||| [function_2] [function_1]	count=2
module	pid and exit status ||| process status	count=1
arg	string according ||| string 1 jan -4712 00:00:00	count=2
arg	the given certificate if ||| certificate	count=1
arg	[arg_1] given extensions ||| [arg_2] [arg_1]	count=4
module	set ||| rexml parent	count=2
function	[function_1] modules in ||| [function_1] [function_2]	count=2
module	returns ||| fixnum	count=5
arg	[arg_1] on front ||| [arg_1] [arg_2]	count=1
function	logger output warn ||| warn	count=1
arg	root [arg_2] ||| [arg_1] [arg_2]	count=4
module	removes the tempdir ||| testcase	count=1
function	message at the unknown ||| unknown	count=1
function	is at the ||| ?	count=1
arg	[arg_1] time ||| [arg_1] issuer [arg_2]	count=1
function_arg	paths for [arg_2] ||| [arg_2] [function_1]	count=3
module	a class method/attribute ‘#’ ||| rdoc methodattr	count=1
module	exception ||| exception	count=4
function	[returnv_1] if the ||| [function_2] [returnv_1]	count=46
module	rdoc :markup :documents ||| rdoc	count=1
function	set an error ||| set error	count=1
returnv	floating ||| float	count=2
function	removes [function_2] ||| [function_1] [function_2]	count=1
arg	anchor element as ||| href	count=1
arg	value or ||| value	count=1
module	block ||| enumerable	count=1
function_arg	[function_1] validation status ||| [arg_2] [function_1]	count=1
module	the length and number ||| rdoc	count=1
function	read ||| read	count=7
function	base ||| base	count=3
arg	name with [arg_2] ||| [arg_1] [arg_2]	count=5
function	[function_1] a paragraph ||| [function_2] [function_1]	count=2
function	occurs during daylight saving ||| isdst	count=1
arg	style ||| style	count=2
module	peer certificates ||| sslsocket	count=1
arg	version ||| version deps	count=1
module	time in its time ||| time	count=1
function	adds the class ||| add class	count=2
module	stream emission with ||| emitter	count=1
arg	tags and ||| tags	count=1
module	progress reporter that will ||| gem streamui simpleprogressreporter	count=1
module	that will write to ||| gem	count=1
arg	temporary file as usual ||| tmpdir mode: 0 options	count=1
function	[function_1] the rounding ||| [function_2] [function_1]	count=3
module	create the ||| darkfish	count=1
module	the given process ||| process	count=1
function_arg	[function_1] [arg_2] exists within the database ||| [function_1] [arg_2]	count=6
function	the next token from ||| next token	count=1
module	dependency graph ||| gem resolver molinillo	count=1
module	number of undocumented ||| stats	count=1
function	get the id for ||| id	count=1
module	establishes an [module] host optionally ||| [module]	count=1
module	tobs that is ready ||| rdoc markup tobs	count=1
function	and return a random ||| random	count=1
function	adds a module ||| add module	count=2
module	this edge represents @return ||| gem resolver molinillo dependencygraph	count=1
module	the http status ||| status	count=1
function	written in output ||| write	count=1
function	ip address ||| getaddress	count=2
arg	object ||| object	count=12
module	waits if it ||| thread	count=1
module	following configuration ||| openssl config	count=1
function	latest release-version specification for ||| latest spec for	count=1
arg	found trying ||| found	count=1
module	this asn1data ||| openssl asn1 asn1data	count=1
function	[function_1] and modules ||| [function_2] [function_1]	count=1
module	class << ||| rdoc	count=1
module	edge represents @return ||| resolver molinillo	count=1
arg	given str ||| str enc separator: '&' use__charset_: false	count=1
arg	version encoding standalone ||| version encoding standalone	count=3
arg	[arg_1] issuer cn ||| cert [arg_1] [arg_2]	count=3
module	sets the net :http#read_timeout ||| client	count=1
module	the length ||| stats	count=1
function	the hyperbolic sine ||| sinh	count=1
arg	path ||| path mode	count=1
function	the appropriate [function] in posix-defined ||| [function]	count=1
arg	with value and ||| value	count=1
arg	and ||| age	count=2
module	irb ||| irb irb	count=3
arg	[arg_1] an implicit ||| [arg_1] [arg_2]	count=5
module	name ||| x509 name	count=5
function	[function_1] paragraph from ||| [function_2] [function_1]	count=1
module	with the ||| rubyvm instructionsequence	count=1
function	options with ||| dir	count=1
arg	specified string value in ||| value	count=1
function	adds a local ||| add local	count=3
module	supplied will be set ||| rexml parent	count=1
function_arg	sends [arg_2] ||| [arg_2] [function_1]	count=1
arg	value value ||| value	count=1
function_arg	[function_1] command line ||| [function_1] [arg_2]	count=1
module	working [module] of ||| [module]	count=3
function	list of [function_2] ||| [function_1] [function_2]	count=2
module	every message digest can ||| digest	count=1
arg	http query ||| query	count=1
function_arg	signs [arg_2] ||| [arg_2] [function_1]	count=1
function	sets the first ||| text=	count=1
function	is for a ||| ?	count=1
arg	name with comment ||| name comment	count=4
module	@return ||| gem resolver molinillo dependencygraph	count=1
function	returns the next ||| peek	count=1
function	ip addresses ||| ip	count=2
arg	from [arg] in ||| realm [arg]	count=1
function	form “nnnnnn ||| digits	count=1
module	used internally by cgi ||| cgi	count=1
module	docs will ||| rdoc	count=1
function_arg	creates a [function_1] [arg_2] ||| socket [function_1] [arg_2]	count=4
function	given string or symbol ||| key	count=1
arg	event ||| event	count=2
arg	version [arg] ||| [arg]	count=4
function	the key ||| key	count=3
function	finalizer ||| define finalizer	count=1
module	the command line by ||| makemakefile	count=1
module	and _getobj_ ||| delegator	count=1
module	be uninstalled when gem ||| gem	count=1
function	superclasses of obj or ||| kind of	count=1
function	a module ||| find symbol module	count=1
module	file itself ||| file	count=2
module	supplied ||| rexml parent	count=2
module	an element ||| elements	count=1
module	bestset ||| resolver bestset	count=1
module	the output ||| rdoc markup	count=2
module	this text ||| rexml text	count=1
module	level ||| syslog logger	count=1
arg	klass ||| klass	count=6
arg	localfile to ||| localfile	count=2
function	accept_list_start_ualpha ||| list start ualpha	count=1
module	joins the raw paragraph ||| paragraph	count=1
arg	for certificate_id ||| certificate_id	count=1
module	given ||| gem requestset gemdependencyapi	count=1
module	set for which block ||| set	count=1
arg	httprequest [arg_2] ||| [arg_2] [arg_1]	count=6
module	tts ||| rdoc	count=1
function	signature ||| verify	count=2
function	child class’s to_i method ||| to int	count=1
module	pkey ||| openssl pkey	count=2
module	visitor for ||| rdoc markup tohtml	count=2
function	don’t already exist ||| gen sub	count=1
module	uninstalled when gem :uninstaller#uninstall ||| gem	count=2
module	the dependency will not ||| gem dependency	count=1
module	job at the ||| irb jobmanager	count=1
arg	params array ||| params	count=1
module	a [module] ||| [module]	count=52
module	codeobject and ||| rdoc codeobject	count=1
returnv	attempts to ||| self	count=1
arg	if [arg] is ||| [arg]	count=2
module	rdoc :markup :document from ||| rdoc ri driver	count=1
module	for a ||| openssl	count=1
arg	entry in key ||| key	count=1
function	whatever mode ||| put	count=1
function	which the ||| reject	count=1
function	the values ||| values at	count=1
function_arg	[function_1] [arg_2] ||| [function_1] template [arg_2]	count=1
function	[function_1] object allocations ||| [function_1] [function_2]	count=3
function	documentation unless documentation has ||| start	count=1
function	all but the last ||| dirname	count=1
function_arg	write out a ||| write out indent	count=1
function	[returnv_1] if the ||| [returnv_1] [function_2]	count=3
module	options with on the ||| makemakefile	count=1
function	map ends ||| end mapping	count=2
function	if ||| member ?	count=2
module	graph? @return ||| gem resolver molinillo	count=1
function	adds ||| accept	count=1
function	or separated ||| class or module	count=1
arg	then flushes text to ||| text	count=1
function	deletes a ||| delete	count=2
function_arg	append the [arg_2] ||| [function_1] [arg_2]	count=1
arg	in string in ||| string filename	count=1
arg	name to expand ||| name	count=1
module	this dependency simply asking ||| gem dependency	count=1
arg	this object and other ||| other	count=1
arg	data structure [arg] and return ||| [arg]	count=1
function	returns ||| to ary	count=1
module	the [module] :requestset ||| [module] requestset	count=1
function	module or class with ||| module named	count=1
module	the authoritative instance ||| commandmanager	count=1
arg	spec from source_uri to ||| spec source_uri	count=1
function_arg	[function_1] req ||| [arg_2] [function_1]	count=1
module	new [module] with ||| [module]	count=1
function	stores all parameters of ||| params	count=3
arg	[arg_1] size ||| [arg_2] [arg_1]	count=3
function	number ||| size	count=2
module	that the ||| resolver	count=1
module	[module] their owners ||| [module]	count=2
function	text ||| text	count=8
arg	the options ||| options	count=1
function	hostname ||| getname	count=2
function	reference of ||| drbref	count=1
function_arg	[function_1] of real ||| bool [function_1] fix [arg_2]	count=3
module	conversion to ||| markup attributemanager	count=1
function	adds tts from ||| accept block quote	count=1
function	[function] for ||| to [function]	count=3
module	in rfc 3501 terminology ||| net imap numvalidator	count=1
arg	with body text name ||| text name	count=1
arg	src and returns ||| src	count=1
function	basic ||| basic word	count=1
function	[function_1] after another ||| [function_2] [function_1]	count=1
function_arg	a stream [arg_2] ||| [arg_2] [function_1]	count=1
module	other equal [module] ||| [module]	count=2
function	an unsigned ||| create	count=1
arg	methods [arg_2] ||| [arg_2] [arg_1]	count=6
module	sslserver when initialized ||| openssl ssl sslserver	count=1
arg	gem ||| gem	count=1
module	password component ||| uri generic	count=1
arg	given file ||| file	count=1
module	convert a druby reference ||| drb	count=1
function	same ||| eql	count=3
module	asks the user ||| userinteraction	count=1
function	the session ||| session	count=1
function	accept character ||| accept	count=1
function_arg	[function_1] port ||| socket tcp [function_1] [arg_2]	count=1
arg	signer is ||| signer	count=1
function	done ||| done adding	count=1
module	a given ||| class	count=1
function	is ||| skip	count=1
function	returns true if ||| bool real ?	count=1
arg	name exception [arg] and backtrace ||| [arg]	count=1
function_arg	adds aproc as [function_1] [arg_2] destroyed ||| [function_1] [arg_2]	count=2
module	an openssl :x509 :name ||| gem	count=1
module	from a gem ||| gem testcase	count=1
function_arg	[function_1] in special ||| [function_1] [arg_2]	count=4
module	a new [module] the items ||| [module]	count=1
module	command along with ||| net imap	count=2
function	server loop [function_2] ||| [function_1] [function_2]	count=2
function	generates a private ||| generate	count=1
function	the protected instance ||| protected instance	count=2
function	close on [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] expired_certificate ||| [function_1] [arg_2] private_key age extensions	count=1
function_arg	dump ruby [arg_2] ||| [function_1] [arg_2]	count=2
arg	[arg_1] setting the ||| [arg_2] [arg_1]	count=2
function	make [function_2] ||| [function_2] [function_1]	count=1
function	server advertises ||| capable	count=3
module	to ||| gem	count=20
arg	src [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] [arg_2] contains all the proper ||| [function_1] [arg_2]	count=4
function	the version of ||| version for	count=1
function	[returnv_1] inspection ||| [returnv_1] [function_2]	count=2
function	[function_1] consistency ||| [function_1] [function_2]	count=2
arg	calendar reform sg ||| args	count=2
module	and net :http#open_timeout to ||| xmlrpc client	count=1
module	the tuplebag which ||| tuplebag	count=1
returnv	to complete [returnv] join ||| [returnv]	count=1
module	is a [module] ||| [module]	count=2
