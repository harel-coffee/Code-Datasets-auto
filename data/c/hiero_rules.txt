arg	wide string given state ||| dst src len ps dstsz	count=2
arg	the scheduling policy for ||| policy	count=1
arg	optname ||| optname	count=1
rep	[module_1] given string ||| [module_1] [function_arg_2]	count=2
arg	character string given ||| dst src	count=2
function	until ||| thrd	count=1
arg	the buffer for ||| buffer	count=2
arg	named by [arg_2] ||| [arg_2] [arg_1]	count=1
arg	of option optname at ||| optname	count=1
arg	by [arg_2] ||| [arg_2] [arg_1]	count=3
function	gets the ||| gtty	count=1
arg	file specified by ||| action	count=1
module	integer ||| math	count=1
arg	[arg_1] to length ||| [arg_2] [arg_1]	count=4
arg	pointed to by flagp ||| flagp	count=1
function	quiet nan of type ||| nan	count=2
function_arg	an lowercase character ||| wlower ch	count=1
arg	named by [arg_2] ||| execv [arg_2] [arg_1]	count=1
function	robin [function] ||| [function] rr get	count=3
module	this converts argz ||| core	count=1
arg	attributes of a terminal ||| filedes attributes	count=2
module	using [module] one ||| [module]	count=1
arg	32-bit wide character to ||| c32	count=1
function	stores a value ||| atomic store	count=1
arg	the offset ||| offset whence	count=1
arg	and [arg] are ||| [arg] needle	count=1
function	to pass long ||| getopt long	count=1
module	this function finds the ||| core	count=2
arg	to neweuid ||| neweuid	count=1
function	of type struct aiocb64 ||| aio suspend 64	count=1
function	equivalent to the fwrite ||| fwrite	count=1
arg	the host ||| buf buflen result h_errnop	count=2
module	mathematical functions ||| error	count=1
arg	parameter a file ||| stream	count=1
arg	result is returned as ||| numerator denominator	count=2
function	similar to asctime but ||| asctime r	count=1
function	identifier ||| thrd	count=1
arg	wide string given ||| dst src	count=2
function	to accommodate it and ||| argz append	count=1
arg	sorts a range of ||| count size	count=1
arg	ut_line ||| ut_line	count=1
arg	parses the [arg_2] ||| [arg_2] [arg_1]	count=16
arg	file descriptor ||| filedes	count=2
module	computes e ||| numeric	count=2
function	returns the number of ||| get	count=2
function	mathematical functions ||| math	count=2
function	twalk ||| twalk	count=1
module	one [module] ||| [module]	count=2
function	arc cosine ||| acos	count=1
module	this converts argz into ||| core	count=1
arg	in the same ||| n	count=1
function	array s instead of ||| sprintf	count=1
arg	[arg_1] formatted ||| [arg_2] [arg_1]	count=7
arg	buf_len to ||| buf_len	count=1
module	pointed to by ||| fenv	count=1
arg	offset parameter is ||| offset whence	count=1
module	[module_1] common ||| [module_1] [module_2]	count=4
arg	string given state ||| src len ps	count=4
arg	a [arg_2] ||| [arg_2] [arg_1]	count=4
function	freopen ||| freopen	count=1
module	typical [module] it ||| [module]	count=1
function_arg	fsetpos but [arg_2] ||| [arg_2] [function_1]	count=3
function	long options with only ||| long only	count=1
arg	buffer is [arg_2] ||| [arg_2] [arg_1]	count=10
function_arg	only [arg_2] ||| [arg_2] [function_1]	count=1
function	used to inquire about ||| getgroups	count=1
arg	name from ||| name	count=2
function	as crypt but takes ||| crypt r	count=1
arg	gid ||| gid result_buf buffer	count=1
arg	filename ||| filename	count=6
arg	elements in the ||| argz	count=1
function	[function] host ||| [function]	count=1
arg	for the region of [arg_1] [arg_2] in the file for ||| [arg_2] [arg_1]	count=3
arg	optname at ||| optname optval optlen-ptr	count=1
arg	the byte delim ||| argz_len str delim	count=1
module	the common mathematical functions ||| numeric	count=1
rep	[module_1] blank character ||| [module_1] [function_arg_2]	count=1
arg	struct dirent64 ||| dirent64 **)	count=1
arg	of filename ||| filename	count=1
module	the common mathematical ||| math	count=1
function_arg	to accommodate [arg_2] ||| [function_1] argz argz_len buf [arg_2]	count=1
arg	this function is equivalent ||| size count	count=1
function	finds the entry in ||| envz entry	count=1
function	similar to getrlimit but ||| getrlimit 64	count=1
function	the ptsname ||| ptsname	count=1
function	to the pread ||| pread	count=1
arg	by the argv ||| argv	count=1
arg	alignment ||| alignment	count=1
arg	scans the group ||| group	count=1
arg	in attr ||| attr	count=1
arg	buflen bytes ||| buflen	count=1
arg	for [arg] ||| [arg]	count=1
function	to the fgetws ||| fgetws	count=1
function	swaps a value ||| atomic exchange	count=1
arg	n ||| n	count=2
arg	size ||| size template	count=1
function	reads the next ||| readdir	count=1
module	this function adds the ||| core	count=1
arg	[arg_1] in ||| [arg_2] [arg_1]	count=2
function	is similar to stat ||| stat	count=1
module	this converts ||| core	count=1
module	[module] retrieves just ||| [module]	count=2
arg	to size bytes ||| size	count=2
arg	another ||| dest	count=3
module	computes e raised ||| numeric	count=2
function	memalign function in ||| memalign	count=1
function	equivalent to the putchar ||| putchar	count=1
function	entry in envz with ||| entry	count=1
function	[function_1] but it ||| [function_2] [function_1]	count=12
function	highest absolute priority ||| get priority	count=1
arg	utmp ||| utmp	count=2
function	lstat but it ||| lstat 64	count=2
module	this function appends ||| core	count=1
function	[function_1] but its ||| [function_2] [function_1]	count=8
module	the function returns ||| core	count=1
function_arg	[function_1] complex number ||| [function_1] [arg_2]	count=2
module	[module] like chown ||| [module]	count=1
arg	to the specified lc_ctype ||| wc desc	count=4
function_arg	[function_1] of the ||| [arg_2] [function_1]	count=2
arg	to a buffer describing ||| buffer	count=1
arg	in *rlp ||| rlp	count=2
module	[module] inverse of ||| [module]	count=1
arg	s1 ||| s1	count=1
function	is equivalent to fcvt ||| qfcvt	count=1
function	equivalent to the feof ||| feof	count=1
function	initializes ||| atomic init	count=1
function	for the [function] referred ||| [function] state	count=1
function_arg	[function_1] attributes ||| [function_1] [arg_2]	count=2
arg	offset parameter ||| offset	count=2
function	a dependency chain for ||| dependency	count=1
arg	at buf [arg_2] ||| [arg_2] [arg_1]	count=4
module	[module_1] wide ||| [module_1] [module_2]	count=56
arg	optname at [arg_2] ||| [arg_2] [arg_1]	count=6
arg	real ||| real	count=1
function_arg	updates [arg_2] ||| [arg_2] [function_1]	count=1
arg	aio_suspend with the ||| list[] nent timeout	count=1
arg	terminal device [arg] ||| [arg]	count=1
arg	stream ||| stream flags	count=1
function	[function] to ||| [function]	count=2
function	fopen ||| fopen	count=1
arg	is initialized similarly to ||| seedval	count=1
arg	sets a signal handler ||| handler	count=1
arg	[arg_1] [arg_2] as a new process ||| [arg_2] [arg_1]	count=3
rep	given number [function_arg_2] ||| [module_1] is [function_arg_2]	count=1
arg	wide character ||| ch	count=2
arg	string to another ||| dest src destsz	count=1
function	the struct in_addr that ||| aton	count=1
function	type struct aiocb64 ||| aio fsync	count=1
module	this function is like ||| core	count=7
module	a given ||| thread	count=1
arg	buffer ||| buffer	count=25
arg	mem ||| mem	count=1
arg	by modifying [arg] as ||| [arg]	count=1
function	realpath ||| realpath	count=1
function	[function] addr ||| inet [function]	count=2
arg	from stream ||| stream result_buf buffer buflen result	count=1
arg	behaves [arg] strcoll function ||| [arg]	count=1
function	swaps a ||| atomic exchange	count=1
function	entry ||| envz entry	count=1
arg	catalogs for [arg] for the ||| [arg]	count=1
function	similar [function] ||| secure [function]	count=1
module	from two wide strings ||| wide	count=2
arg	adds [arg] ||| obstack-ptr [arg]	count=3
function	the printf template ||| printf format	count=1
function	to nftw but it ||| nftw 64	count=1
module	a copy of ||| string	count=1
function	nftw [function_2] ||| [function_2] [function_1]	count=3
arg	string fmt and the ||| fmt	count=1
arg	a message [arg_2] ||| psignal [arg_2] [arg_1]	count=1
function	writes ||| fputc	count=1
module	the [module] name filename ||| [module]	count=1
arg	offset parameter is of ||| offset	count=2
module	[module] appends the ||| [module]	count=1
arg	the original lfs proposal ||| error-code) vector-ptr	count=1
arg	next user entry from ||| result_buf buffer buflen result	count=1
function	nftw ||| nftw	count=1
module	a wide string to ||| string wide	count=1
function	is similar [function] but ||| secure [function]	count=1
function	stream [function] ||| [function]	count=1
arg	format string fmt ||| fmt	count=1
function	the fputwc ||| fputwc	count=1
arg	[arg_1] from buffer ||| [arg_2] [arg_1]	count=4
arg	to stream ||| stream flags	count=1
arg	all the groups ||| groups	count=1
module	raised to a ||| math	count=1
arg	the cookie ||| cookie	count=1
arg	maxlen contains ||| s maxlen	count=1
function	of snprintf with ||| vsnprintf	count=1
arg	value if [arg] is finite ||| [arg]	count=1
rep	[module_1] punctuation character ||| [module_1] [function_arg_2]	count=1
function	unlocks a ||| mtx unlock	count=1
arg	buffer which ||| xsubi[3] buffer	count=1
arg	ap ||| template ap	count=1
function	the memalign ||| memalign	count=1
function_arg	[function_1] mutex ||| [arg_2] [function_1]	count=4
arg	with descriptor filedes ||| filedes offset whence	count=1
arg	argc using ||| argc	count=1
module	to nearest [module] rounding away ||| numeric [module]	count=1
function	file offsets on ||| posix fallocate 64	count=1
arg	a buffer describing the ||| buffer	count=1
arg	prints [arg_1] [arg_2] standard error output stream ||| [arg_2] [arg_1]	count=1
arg	characters [arg_2] ||| dest [arg_2] [arg_1]	count=2
arg	to the stream stream ||| stream	count=1
function	imaginary part a ||| cimag	count=1
function	[function_1] host address ||| [function_1] [function_2]	count=1
module	[module_1] one wide ||| [module_1] [module_2]	count=2
function	offsets ||| posix fallocate	count=1
function	positive infinity or the ||| infinity	count=1
arg	and that ndigit is ||| value ndigit buf	count=1
arg	specifies communication [arg] ||| namespace [arg]	count=1
arg	reads formatted ||| format	count=4
arg	that ndigit ||| ndigit buf	count=2
arg	buf to the ||| buf	count=1
function	local-address-within-network part ||| lnaof	count=1
function	[function_1] high value ||| [function_2] [function_1]	count=5
function	to setrlimit [function_2] ||| [function_2] [function_1]	count=4
arg	is name ||| name result_buf buffer buflen	count=2
arg	fmt and ||| fmt	count=1
function	getrlimit but ||| getrlimit 64	count=2
module	a number by ||| numeric math	count=2
arg	niceval [arg_2] ||| [arg_2] id [arg_1]	count=1
arg	[arg_1] buffer ||| [arg_2] [arg_1]	count=17
function	srand48 does ||| srand48 r	count=1
arg	name of the ||| name length	count=2
arg	in [arg] ||| envz envz_len [arg]	count=3
function	signal function ||| signal	count=1
function	similar to getpwnam ||| getpwnam	count=1
module	taking [module] ||| [module]	count=3
arg	converts ||| dstsz retval	count=7
function	dependency chain for memory_order_consume ||| dependency	count=1
arg	changes [arg] ||| filedes [arg]	count=3
arg	buffer which describes the ||| buffer	count=1
function	type struct aiocb64 ||| aio suspend	count=1
arg	wide string given state ||| dst src len ps	count=2
function	updates ||| argz add	count=1
module	guaranteed ||| numeric	count=1
function	[function_1] only ‘-’ ||| [function_2] [function_1]	count=2
function	to the memalign function ||| memalign	count=1
function_arg	changes [arg_2] ||| [arg_2] [function_1]	count=2
function	or times out ||| timedlock	count=1
arg	by buffer ||| buffer	count=2
module	of the calling thread ||| thread	count=1
function	a dependency chain for ||| kill dependency	count=1
arg	sep ||| sep	count=1
module	this function initializes ||| core	count=1
module	to make this ||| core	count=1
arg	is equivalent ||| size count	count=1
arg	entry from stream ||| stream	count=2
function	_noreturn ||| _noreturn	count=1
arg	the size argument ||| s size template	count=2
arg	[arg] storing the ||| [arg] buffer	count=1
function	putchar ||| putchar	count=1
arg	[arg] in the ||| fd [arg]	count=3
arg	[arg_1] buffer to ||| [arg_2] [arg_1]	count=4
module	this function returns information ||| core	count=5
arg	to msgid ||| msgid	count=1
function_arg	[function_1] a complex ||| [function_1] [arg_2]	count=2
arg	id is gid ||| gid	count=2
arg	file descriptor filedes ||| filedes	count=5
arg	specified by the argv ||| argv	count=1
function	[function] *argz ||| [function]	count=1
arg	argp parser argp ||| argp	count=1
function	similar to setrlimit but ||| setrlimit 64	count=1
function	[function] until ||| [function]	count=2
arg	buffer which describes ||| xsubi[3] buffer result	count=1
function	is similar to lstat ||| lstat	count=1
arg	multiple of alignment ||| alignment	count=1
arg	16-bit wide ||| c16	count=1
arg	to aio_fsync ||| op aiocbp	count=1
function_arg	first occurrence [arg_2] ||| [function_1] str [arg_2]	count=1
function	signed remainder ||| remainder	count=2
function	like the scandir ||| scandir	count=1
function	in that is ||| r	count=2
arg	integer [arg] from host ||| [arg]	count=2
function	dependency chain for memory_order_consume ||| kill dependency	count=1
arg	like the ||| a b	count=1
function	arrays ||| wmemcmp	count=2
arg	of type struct dirent64 ||| namelist dirent64	count=1
arg	host address addr ||| addr	count=3
function_arg	[function_1] [arg_2] ||| [function_1] socket [arg_2]	count=6
function	is similar [function] but it ||| secure [function]	count=1
function	long options ||| long	count=1
arg	aio_fsync with ||| op	count=1
function	to lstat [function_2] ||| [function_1] [function_2]	count=4
arg	is equivalent to ||| size count	count=1
function	to the getwchar ||| getwchar	count=1
function_arg	printing [arg_2] ||| [function_1] [arg_2]	count=4
module	string ||| string	count=4
arg	character to ||| ch	count=3
function	to setrlimit ||| setrlimit	count=1
arg	stream stream ||| stream	count=8
arg	[arg_1] [arg_2] output stream stderr see ||| [arg_2] [arg_1]	count=1
function	in accordance to ||| strcoll	count=1
function	only ‘-’ instead of ||| only	count=1
function	accepts 64-bit file offsets ||| posix fallocate	count=1
arg	value of option optname ||| optname optval	count=1
arg	[arg] scaled to ||| [arg]	count=1
arg	elements [arg] ||| key base nmemb [arg]	count=1
arg	of size bytes aligned ||| size	count=1
module	is a 7-bit unsigned ||| string byte	count=1
arg	groups user ||| user group groups	count=1
arg	[arg_1] integer value ||| [arg_1] [arg_2]	count=9
arg	[arg_1] [arg_2] ||| sigaction [arg_1] [arg_2]	count=9
function	the default attribute values ||| pthread setattr default np	count=1
arg	[arg_1] argtypes the ||| [arg_2] [arg_1]	count=1
function	adds ||| sigaddset	count=1
arg	reads up [arg] ||| filedes buffer [arg]	count=1
module	[module] tries ||| [module]	count=1
function_arg	[function_1] [arg_2] position used for positioning ||| [function_1] [arg_2] position	count=10
function_arg	[function_1] restores ||| [arg_2] [function_1]	count=1
module	wide strings ||| wide	count=2
function	register to medium high ||| ppr med high	count=1
arg	range of ||| ptr count size	count=2
module	mathematical ||| numeric math	count=2
arg	the attributes of ||| attributes	count=2
module	mathematical functions ||| math	count=1
module	occasional consistency ||| core	count=1
arg	an open [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
module	of one wide string ||| wide	count=1
function	similar to aio_return with ||| return 64	count=1
arg	at level level for ||| level	count=1
arg	state ||| len ps	count=4
arg	block and [arg] ||| block [arg]	count=3
arg	group name is name ||| name result_buf buffer buflen	count=1
function	[function] but ||| secure [function]	count=1
arg	prints [arg_2] ||| [arg_2] [arg_1]	count=25
function	getpwnam in ||| getpwnam r	count=2
arg	buf_len [arg_2] ||| [arg_2] [arg_1]	count=1
arg	ws ||| ws	count=1
function_arg	[function_1] string template ||| [arg_2] [function_1]	count=4
arg	bytes starting at buf ||| buf	count=1
arg	boundary ||| boundary size	count=1
function	to that described ||| fesetenv	count=1
arg	starting at buf to ||| buf	count=1
arg	[arg] previously ||| [arg]	count=6
function	absolute priority [function_2] ||| [function_2] [function_1]	count=1
arg	growing object ||| obstack-ptr	count=1
arg	user entry ||| result_buf buffer	count=1
function	to stat [function_2] ||| [function_1] [function_2]	count=4
arg	[arg_1] [arg_2] ||| [arg_2] buffer mode [arg_1]	count=6
function	constant i ||| i	count=1
function	long options with ||| getopt long	count=1
arg	opentype argument that reads ||| opentype	count=1
module	just like [module] but it ||| [module]	count=1
function	the memalign function ||| posix memalign	count=1
arg	edflag ||| edflag	count=1
function_arg	printf [arg_2] ||| parse [function_1] [arg_2]	count=1
arg	most ndigit ||| ndigit	count=1
arg	a range of ||| count size	count=1
arg	in [arg] bytes long ||| pid [arg]	count=1
function	the ptsname ||| ptsname r	count=1
function	changes the ||| truncate	count=1
function	the first occurrence ||| wcschr	count=1
module	computes absolute value of ||| numeric	count=2
arg	most size bytes into ||| size	count=1
arg	in [arg] ||| argz argz_len [arg]	count=3
arg	the length of ||| strsz	count=3
function	or ||| or	count=1
module	common mathematical functions ||| numeric math	count=1
arg	compares ||| lhs rhs	count=4
arg	size bytes aligned ||| size	count=1
function	to lstat but it ||| lstat 64	count=1
module	mathematical ||| math	count=1
module	this function voluntarily ||| core	count=1
arg	complex ||| z	count=1
function	to the memalign ||| posix memalign	count=1
arg	is similar to ||| filedes buffer size offset	count=1
arg	by flagp ||| flagp	count=1
function	ldiv_t ||| ldiv	count=1
arg	of buflen bytes ||| buflen	count=1
arg	optname at ||| optname optval	count=1
arg	that the size argument ||| s size	count=1
function	[function_1] pwrite ||| [function_2] [function_1]	count=2
function	_alignas ||| _alignas	count=1
arg	the next user ||| result_buf buffer buflen	count=1
function	equivalent to the fputwc ||| fputwc	count=1
arg	user entry from stream ||| stream	count=1
arg	of an atomic object ||| obj	count=1
module	[module] executes ||| [module]	count=1
function	used to change the ||| lseek	count=1
arg	user name is name ||| name result_buf buffer	count=1
arg	in [arg] ||| pid [arg]	count=1
function_arg	[function_1] value ||| [arg_2] [function_1]	count=1
arg	[arg_1] [arg_2] standard error output stream ||| psignal [arg_2] [arg_1]	count=1
arg	[arg_1] formatted wide ||| [arg_1] [arg_2]	count=4
function	within ||| wcsstr	count=2
function	pointer [function] returns a ||| tmpnam [function]	count=1
arg	it changes [arg] ||| filedes [arg]	count=3
arg	[arg_1] [arg_2] ||| [arg_2] buffer bufsz [arg_1]	count=6
function	the memalign function in ||| posix memalign	count=1
arg	options ||| options	count=1
function	the network named ||| getnetbyname	count=1
module	[module] reads data ||| [module]	count=1
arg	wide characters from ||| src count destsz	count=2
function	first occurrence of a ||| wcschr	count=1
function	application to pass long ||| long	count=1
function_arg	[function_1] a mutex ||| [function_1] [arg_2]	count=4
arg	in the character ||| s template	count=1
function	1 plus ||| log1p	count=1
arg	of characters ||| count	count=2
function	stores a value ||| store	count=1
arg	niceval ||| niceval	count=1
arg	information about the host ||| buf buflen result h_errnop	count=2
arg	blocks using des ||| blocks len mode	count=1
module	defines the ||| numeric math	count=1
arg	type struct dirent64 ||| namelist dirent64 **)	count=1
function	appends ||| wcscat	count=1
arg	added as part ||| flags	count=1
arg	[arg_1] [arg_2] ||| [arg_2] nwc len [arg_1]	count=2
arg	[arg_1] user ||| [arg_2] [arg_1]	count=10
function_arg	updates [arg_2] ||| [function_1] [arg_2]	count=1
arg	range of [arg_2] ||| [arg_2] [arg_1]	count=1
arg	buflen bytes starting at ||| buflen	count=1
arg	seconds seconds ||| seconds	count=1
arg	addr and [arg_2] ||| [arg_2] [arg_1]	count=1
function	to asctime ||| asctime	count=1
module	[module] sets the ||| [module]	count=4
arg	in the parameter func ||| func descriptors	count=1
arg	[arg_1] [arg_2] one ||| [arg_2] [arg_1]	count=8
module	to overflow ||| numeric math	count=1
module	a ||| core	count=1
arg	scans the contents ||| namelist dirent **)	count=1
module	typical [module] it to ||| [module]	count=1
arg	16-bit wide ||| s c16	count=1
function	the aio_write ||| aio write	count=1
function_arg	[function_1] string ||| [arg_2] [function_1]	count=7
function	same as ecvt except ||| ecvt	count=1
function_arg	[function_1] filename to ||| [arg_2] [function_1]	count=1
arg	buf with ||| ndigit decpt neg buf	count=1
arg	wscanf but [arg] of ||| [arg]	count=1
module	function calls ||| core	count=1
function	to xon/xoff flow control ||| tcflow	count=1
arg	with length len ||| filedes buf len	count=2
function_arg	[function_1] of ||| [arg_2] [function_1]	count=2
arg	to intmax_t or uintmax_t ||| endptr base	count=2
function	the twalk ||| twalk	count=1
function	to the fflush ||| fflush	count=1
function	the highest absolute priority ||| sched get priority	count=1
function	used to change ||| lseek	count=1
function	asctime but instead ||| asctime r	count=1
arg	equal to msgid ||| msgid	count=1
module	this function gets information ||| core	count=1
arg	name ||| name length	count=2
module	[module] argz ||| [module]	count=1
arg	the next user ||| result_buf buffer	count=1
arg	[arg_1] from stream ||| [arg_2] [arg_1]	count=6
arg	the signal signum to ||| signum	count=2
arg	string ||| str count	count=2
module	[module] sets ||| [module]	count=6
function	as if with envz_add ||| merge	count=1
arg	with the given name ||| name	count=1
arg	wide string given ||| src	count=2
function	returns the page size ||| getpagesize	count=1
arg	buffer of size bytes ||| size	count=1
function	between two non-overlapping arrays ||| wmemcpy	count=2
function	restricted by the precision ||| qgcvt	count=1
module	[module_1] [module_2] to ||| [module_2] [module_1]	count=4
arg	elements in the argz ||| argz	count=1
arg	group database [arg_2] ||| [arg_1] [arg_2]	count=1
module	this function opens ||| core	count=3
arg	host address [arg] ||| [arg]	count=3
arg	s2 ||| s2	count=1
module	[module] error ||| [module]	count=1
module	raised ||| math	count=1
module	a single-byte narrow character ||| string multibyte	count=4
function_arg	[function_1] name ||| [function_1] [arg_2]	count=14
arg	for the signal signum ||| signum	count=1
function	process’ ||| sched getparam	count=1
arg	to specified size ||| size	count=2
function	processors ||| nprocs	count=1
arg	size of filename ||| filename	count=1
arg	is used to ||| parameter	count=1
function	call to realpath ||| realpath	count=1
function	asctime but ||| asctime	count=1
arg	terminal [arg] has ||| [arg]	count=1
arg	[arg] bytes long ||| pid [arg]	count=1
arg	group id is gid ||| gid result_buf buffer buflen	count=1
arg	string given ||| src	count=4
arg	name is name ||| name result_buf buffer buflen result	count=2
arg	[arg_1] argc ||| [arg_2] [arg_1]	count=10
arg	fildes ||| fildes	count=1
function	to the putchar ||| putchar	count=1
function_arg	within [arg_2] ||| [function_1] [arg_2]	count=2
arg	was added ||| pattern flags	count=1
arg	the information in buffer ||| buffer	count=1
function	similar to jrand48 ||| jrand48	count=1
function_arg	given string ||| strlen str	count=1
arg	in ||| n	count=2
function	is similar [function] ||| secure [function]	count=1
arg	[arg_1] length len ||| [arg_1] buf [arg_2]	count=2
arg	arguments in ||| flags	count=1
arg	the attributes of a ||| attributes	count=2
function	sets the structure pointed ||| ntp gettime	count=1
arg	returns [arg] containing ||| [arg]	count=1
arg	user entry from stream ||| stream result_buf buffer buflen	count=2
arg	[arg] previously created ||| [arg]	count=3
arg	the server [arg_2] ||| [arg_2] [arg_1]	count=2
module	certain amount of wide ||| wide	count=5
function	narrows ||| wctob	count=2
function	to the pread ||| pread 64	count=1
function	similar to mrand48 ||| mrand48	count=1
function	allowed ||| setegid	count=1
function	returns the number of ||| count	count=1
arg	prints formatted output ||| bufsz format	count=4
function	to the fputws ||| fputws	count=1
arg	block if [arg] is 0 ||| block [arg]	count=1
module	a single-byte narrow ||| string	count=4
function_arg	with only [arg_2] ||| [arg_2] [function_1]	count=1
function	exclusive or ||| xor	count=1
arg	[arg] another ||| [arg]	count=6
arg	[arg_1] length len ||| [arg_2] [arg_1]	count=10
arg	is gid ||| gid result_buf buffer buflen result	count=1
module	defines ||| numeric math	count=2
module	[module] the equivalent ||| [module]	count=1
arg	of alignment ||| alignment	count=1
function	gamma ||| lgamma	count=1
function	reallocating ||| insert	count=1
arg	current limit ||| limit	count=1
arg	character [arg_2] ||| [arg_2] [arg_1]	count=12
arg	buf with [arg_2] ||| [arg_2] [arg_1]	count=2
arg	an atomic object ||| obj desired	count=1
module	the value ||| numeric math	count=1
arg	triple specified by the ||| host user domain	count=1
function	to pass long options ||| getopt long	count=1
function	medium [function_2] ||| [function_2] [function_1]	count=2
arg	mask to the ||| mask	count=1
arg	to *argz_len ||| argz argz_len	count=1
function_arg	[function_1] ‘--’ ||| [function_1] [arg_2]	count=3
function	getpwent ||| getpwent	count=1
arg	wide string ||| src len dstsz	count=2
arg	an entry named name ||| name	count=1
arg	offset [arg] from the ||| [arg]	count=1
function	is similar [function_2] ||| [function_2] [function_1]	count=14
module	this was ||| core	count=1
arg	file stream ||| stream mode	count=1
function	readdir which performs internal ||| readdir	count=1
arg	the offset parameter is ||| offset whence	count=1
function_arg	[function_1] template ||| [function_1] [arg_2]	count=2
arg	the file named by [arg_1] [arg_2] ||| chmod [arg_1] [arg_2]	count=2
arg	wide [arg] to ||| [arg]	count=1
arg	classification ||| classification	count=1
arg	file stream [arg_2] ||| [arg_2] [arg_1]	count=17
function	similar to stat ||| stat	count=1
function	medium ||| ppr med	count=1
module	this function inserts ||| core	count=1
arg	value of type va_list ||| ap	count=3
function	feof ||| feof	count=1
function	to the fread function ||| fread	count=1
arg	storage [arg] ||| [arg]	count=1
arg	[arg] from ||| to from c [arg]	count=2
module	[module] specifies ||| [module]	count=2
module	locks a ||| thread	count=1
function	but it can work ||| 64	count=1
function_arg	[function_1] [arg_2] two strings ||| [function_1] lhs rhs [arg_2]	count=2
arg	[arg_1] argument ||| [arg_2] [arg_1]	count=8
module	this function has a ||| core	count=1
module	current thread ||| thread	count=1
arg	attr to match ||| attr	count=1
arg	an [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	gets the [arg_2] ||| [function_1] [arg_2]	count=4
arg	similar to aio_suspend with ||| list[] nent timeout	count=1
arg	functions in the io-functions ||| io-functions	count=1
module	the value guaranteed to ||| numeric	count=1
module	[module] closes the ||| [module]	count=2
function	output to ||| fprintf	count=1
arg	information in buffer ||| buffer	count=1
function	equivalent to the mmap ||| mmap	count=1
arg	[arg_1] [arg_2] ||| [arg_1] buf [arg_2]	count=2
arg	struct dirent64 ||| namelist dirent64	count=1
arg	substring ||| str substr	count=2
function	[function] wide ||| [function]	count=3
module	the calling thread for ||| thread	count=1
function	a version of readdir ||| readdir r	count=1
arg	ndigit is restricted ||| value ndigit decpt neg	count=2
arg	offset ||| stream offset	count=1
function	returns the local-address-within-network part ||| lnaof	count=1
function_arg	[function_1] complex ||| [arg_2] [function_1]	count=2
arg	signal signum to ||| signum	count=3
function	closely related to ||| popen	count=1
module	a ||| io	count=14
module	the given ||| numeric math	count=2
arg	[arg] format ||| [arg] maxsize	count=1
module	a 7-bit ||| string byte	count=1
module	this function returns ||| core	count=23
arg	returns [arg] containing the ||| [arg]	count=1
arg	the buffer [arg_2] ||| [arg_2] [arg_1]	count=6
arg	owner to ||| owner	count=1
arg	specified lc_ctype ||| wc desc	count=4
arg	parameter and that ||| buf	count=1
arg	action ||| action	count=1
arg	a message [arg_2] ||| [arg_2] [arg_1]	count=1
function	widens ||| btowc	count=2
function_arg	[function_1] c is ||| [arg_2] [function_1]	count=1
arg	descriptor filedes ||| filedes offset whence	count=1
arg	string ||| src len	count=7
arg	[arg] instead ||| [arg]	count=1
arg	against [arg] considering them ||| s1 [arg]	count=1
arg	stream stream to ||| stream	count=1
arg	the file filename ||| filename	count=1
function	closes ||| fclose	count=2
function	[function_1] in that ||| [function_2] [function_1]	count=8
function_arg	[function_1] restores the ||| [function_1] [arg_2]	count=1
arg	formatted output to stdout ||| format	count=2
function_arg	[function_1] of boundary ||| [function_1] [arg_2]	count=3
function	to true [function] returns the ||| atomic flag test [function]	count=1
module	a float ||| numeric	count=1
arg	delta ||| delta	count=1
arg	file named by ||| argv	count=1
function	releases ||| funlockfile	count=1
arg	character given state ||| ps	count=1
module	[module] like ||| [module]	count=4
arg	[arg_1] command ||| [arg_2] [arg_1]	count=8
function	to globfree ||| globfree	count=1
module	of ||| core	count=1
arg	starting at buf ||| buf	count=3
arg	the buffer ||| buffer	count=4
function	similar to asctime ||| asctime r	count=1
function_arg	the function [function_1] [arg_2] ||| core [function_1] [arg_2]	count=1
arg	the old-action argument is ||| old-action	count=1
arg	action previously ||| action	count=1
arg	the pointer buffer ||| buffer result	count=1
arg	state ||| ps dstsz	count=4
function	fputc ||| fputc	count=1
module	[module] entry ||| [module]	count=1
function	it with binary 00101010 ||| memfrob	count=1
arg	next user entry ||| result_buf buffer buflen	count=1
module	[module] allows the ||| [module]	count=1
function	calling thread ||| pthread	count=1
arg	userp and ||| userp	count=1
module	this is functionally ||| core	count=1
function	set the program ||| ppc set	count=1
function	if the result differs ||| rint	count=2
function_arg	[function_1] size bytes ||| [arg_2] [function_1]	count=1
arg	buffer [arg_2] ||| [arg_1] format [arg_2]	count=2
arg	to aio_suspend with ||| list[] nent timeout	count=1
arg	aio_suspend with the only ||| list[] nent timeout	count=1
function	returns the process ||| getpgid	count=1
arg	binary to presentation textual ||| af cp buf len	count=1
arg	optname [arg_2] ||| [arg_2] [arg_1]	count=6
arg	sign of ||| x	count=2
arg	struct dirent64 ||| dirent64	count=1
arg	dtype ||| dtype	count=1
function	the local-address-within-network part of ||| lnaof	count=1
arg	buffer [arg_2] ||| [arg_1] [arg_2]	count=2
function	the pread ||| pread 64	count=1
arg	given name ||| name	count=1
function	two arrays ||| wmemcmp	count=2
arg	arguments in [arg_2] ||| [arg_2] [arg_1]	count=14
function_arg	of arguments expected by [function_1] [arg_2] ||| parse [function_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] for positioning is provided ||| [function_1] [arg_2]	count=5
arg	bits for the file [arg_1] [arg_2] ||| chmod [arg_1] [arg_2]	count=1
module	narrow multibyte character ||| multibyte	count=2
arg	removes any memory maps [arg_1] [arg_2] ||| core munmap [arg_1] [arg_2]	count=1
function	of the [function] ||| [function]	count=2
module	a 7-bit unsigned char ||| string	count=1
arg	[arg] + ||| [arg]	count=1
arg	16-bit wide character ||| c16 ps	count=1
module	[module] reports resource ||| [module]	count=1
function	similar to getpwnam in ||| getpwnam r	count=1
function	in that it returns ||| r	count=1
function_arg	sets the buffer ||| setbuf stream buffer	count=4
module	this function allocates a ||| core	count=1
arg	to another ||| dest src	count=1
arg	added ||| flags	count=1
function	object in bytes ||| object size	count=2
arg	next user ||| result_buf buffer buflen result	count=1
function	to realpath where ||| realpath	count=1
function_arg	a multiple [arg_2] ||| [arg_2] [function_1]	count=1
arg	the conversion ||| ps	count=1
function	changes ||| truncate	count=1
module	error this ||| core	count=1
function	pass long [function_2] ||| [function_2] [function_1]	count=2
arg	size bytes ||| size	count=8
arg	value of option optname ||| optname	count=1
arg	[arg_1] string given ||| [arg_2] [arg_1]	count=2
function	options with only ||| only	count=1
arg	gid ||| gid result_buf buffer buflen	count=1
function	to the fputc ||| fputc	count=1
function	process’ claim on ||| sched yield	count=1
function	the conversion specifier character ||| register printf function	count=1
arg	in buffer ||| param[7] buffer	count=1
arg	and the sign of ||| x	count=2
arg	32-bit ||| s c32 ps	count=1
module	this functions stores the ||| core	count=1
module	computes absolute value ||| numeric	count=2
arg	group database ||| group	count=1
arg	a file stream ||| stream mode	count=1
function	[function_1] but it ||| [function_1] [function_2]	count=12
arg	name using protocol proto ||| name proto	count=1
module	to ||| numeric	count=2
arg	complete search tree has ||| vroot freefct	count=1
arg	[arg_1] argtypes ||| printf size info info [arg_1] [arg_2]	count=1
arg	[arg] points ||| [arg]	count=1
arg	in the io-functions ||| io-functions	count=1
module	byte string ||| byte	count=1
arg	in buffer with the ||| buffer	count=1
arg	another ||| dest src destsz	count=3
arg	hostp [arg_2] ||| [arg_1] [arg_2]	count=6
arg	[arg] bytes ||| pid [arg]	count=1
function_arg	blank [arg_2] ||| [arg_2] [function_1]	count=1
arg	length-ptr ||| length-ptr	count=1
function	low ||| low	count=1
function	the ttyname ||| ttyname	count=1
arg	user on [arg] has ||| [arg]	count=1
arg	[arg_1] formatted ||| [arg_1] [arg_2]	count=7
function	named ||| gethostbyname r	count=1
arg	[arg] as a ||| [arg]	count=3
arg	aio_fsync with the only ||| op aiocbp	count=1
module	value guaranteed ||| numeric math	count=1
function_arg	[function_1] of ‘--’ ||| [arg_2] [function_1]	count=5
function_arg	punctuation character ||| punct ch	count=1
arg	[arg] like ||| envz envz_len [arg]	count=3
function	sine ||| csin	count=2
function	the putchar ||| putchar	count=1
function	logarithm of the gamma ||| lgamma	count=1
arg	signal signum to the ||| signum	count=3
arg	[arg_1] mode ||| chmod [arg_1] [arg_2]	count=3
arg	buf_len to [arg_2] ||| [arg_2] buf [arg_1]	count=1
function	setrlimit ||| setrlimit	count=1
arg	mask to ||| mask	count=1
arg	user ||| result_buf	count=1
function_arg	unlocks a [arg_2] ||| [arg_2] [function_1]	count=1
arg	io-functions ||| io-functions	count=1
function	readdir which performs internal ||| readdir r	count=1
arg	character ||| ch count	count=2
arg	a message ||| message	count=1
function	returns the [function_2] ||| [function_1] [function_2]	count=4
arg	copies ||| dest src destsz	count=1
function	lstat but it is ||| lstat 64	count=1
function	[function] cpusetsize ||| [function]	count=1
arg	removes any memory [arg_1] [arg_2] ||| core munmap [arg_1] [arg_2]	count=1
arg	[arg_1] [arg_2] in the signgam global ||| r [arg_2] [arg_1]	count=3
arg	the attributes ||| attributes	count=2
arg	function does globbing ||| error-code) vector-ptr	count=1
function_arg	[function_1] buf_len to ||| [function_1] argz argz_len buf [arg_2]	count=1
function	to the getutent ||| getutent r	count=1
function	gathers data ||| writev	count=1
arg	position indicator ||| pos	count=4
arg	condition variable with ||| cond mutex duration	count=1
function	[function] with the ||| aio [function]	count=3
arg	to [arg_2] ||| [arg_2] [arg_1]	count=4
arg	of [arg_2] ||| [arg_2] [arg_1]	count=1
module	this function causes the ||| core	count=1
function	works like the scandir ||| scandir	count=1
module	error this prints the ||| core	count=1
module	to [module] initializes ||| [module]	count=1
arg	the directory ||| dirstream	count=1
arg	[arg_1] to mode ||| chmod [arg_1] [arg_2]	count=1
module	[module] to another ||| [module]	count=2
arg	original lfs proposal ||| error-code) vector-ptr	count=1
arg	before ||| before entry	count=1
arg	[arg_1] in *rlp ||| [arg_1] [arg_2]	count=3
arg	specified lc_ctype ||| desc	count=4
arg	[arg] two strings ||| lhs rhs [arg]	count=2
arg	will return [arg_1] [arg_2] ||| printf size info info [arg_1] [arg_2]	count=4
arg	by filedes ||| filedes action	count=2
function	functions ||| math	count=2
arg	file filename to ||| filename	count=1
function	[function_1] in ||| [function_2] [function_1]	count=8
arg	to oldname ||| oldname	count=1
arg	boundary ||| boundary	count=1
arg	response ||| response	count=1
arg	filename [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the server ||| addr length_ptr	count=1
module	value guaranteed to ||| numeric	count=1
function	the same as ecvt ||| ecvt	count=1
function	xon/xoff flow control on ||| tcflow	count=1
arg	display ||| label severity text action tag	count=1
arg	template string template ||| template n argtypes	count=1
arg	alternate [arg] for ||| [arg]	count=2
arg	converts ||| len dstsz retval	count=3
function	the printf ||| printf format	count=1
module	next variadic function ||| variadic	count=2
module	given number ||| numeric math	count=20
arg	niceval class ||| class id niceval	count=1
arg	[arg_1] level level ||| [arg_2] [arg_1]	count=6
arg	than [arg] null ||| [arg]	count=1
function	medium high value ||| ppr med high	count=2
function	control ||| wcntrl	count=2
module	a ||| string	count=74
arg	buffer which describes ||| buffer	count=1
arg	the owner of ||| owner group	count=1
arg	the arguments in ||| flags	count=1
function	to aio_return with the ||| return 64	count=1
arg	formatted output ||| format	count=2
function	aio_return with the ||| return 64	count=1
arg	modifying [arg] as ||| [arg]	count=1
function	medium [function_2] ||| [function_1] [function_2]	count=2
arg	string template ||| template n	count=1
arg	to by tptr ||| tptr	count=1
function_arg	gets [arg_2] ||| [arg_2] [function_1]	count=3
arg	with the name name ||| name	count=1
function	equivalent to the fputc ||| fputc	count=1
function	fgetws ||| fgetws	count=1
function_arg	control character ||| wcntrl ch	count=2
arg	wide characters [arg_2] ||| dest [arg_2] [arg_1]	count=2
function	reads a value from ||| atomic load	count=1
function_arg	but [arg_2] ||| [arg_2] [function_1]	count=3
arg	in buffer with the ||| param[7] buffer	count=1
function	of available processors ||| nprocs	count=1
function	getgrgid ||| getgrgid	count=1
function	pass long options with ||| long	count=1
function	aio_return with the ||| return	count=1
function_arg	hexadecimal [arg_2] ||| [arg_2] [function_1]	count=1
arg	pointer ap ||| ap	count=1
function_arg	internet [arg_2] ||| [function_1] netof [arg_2]	count=1
function	is similar to getrlimit ||| getrlimit	count=1
function	writes up to ||| write	count=1
function	for the [function] ||| [function] state	count=1
function	equivalent to the putc ||| putc	count=1
function	scandir ||| scandir 64	count=2
arg	buffer for a ||| buffer	count=2
arg	characters found in another ||| dest src	count=1
function	taking ||| vwprintf	count=1
arg	buffer which ||| buffer	count=1
function	unlocks ||| mtx unlock	count=1
module	breaks a [module_2] ||| [module_1] [module_2]	count=2
arg	[arg_1] length-ptr ||| [arg_2] [arg_1]	count=3
arg	hostshort ||| hostshort	count=1
function	*argz to accommodate it ||| argz append	count=1
arg	old to ||| old	count=1
function	[function_1] of processors ||| [function_1] [function_2]	count=1
arg	[arg_1] userp ||| [arg_2] [arg_1]	count=4
arg	indicated by excepts ||| excepts	count=1
arg	how argument ||| how	count=1
function	both the ||| sched setscheduler	count=1
arg	flagp ||| flagp	count=1
arg	on the server ||| addr length_ptr	count=1
arg	directory selected by dir ||| dir	count=1
module	given ||| numeric math	count=2
arg	if [arg] is ||| [arg]	count=1
arg	string template ||| template n argtypes	count=1
arg	resolved parameter ||| name resolved	count=1
module	common mathematical ||| error	count=1
function	to aio_error ||| error 64	count=1
function	long ||| long	count=1
function_arg	unlocks a [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] argument more ||| [arg]	count=3
arg	id is uid ||| uid	count=1
function	common mathematical ||| math	count=2
module	[module] returns information ||| [module]	count=5
function	version of readdir ||| readdir	count=1
function	in accordance to the ||| strcoll	count=1
module	this function defines the ||| core	count=1
arg	wide string given ||| src len	count=2
arg	it is ||| size	count=1
arg	next user ||| result_buf buffer	count=1
module	[module] checks to ||| [module]	count=1
arg	the resource resource ||| resource	count=2
arg	ndigit is restricted by ||| value ndigit decpt	count=2
module	calling thread ||| thread	count=1
module	value guaranteed ||| numeric	count=1
function	absolute priority ||| get priority	count=1
function	readdir which performs ||| readdir	count=1
function_arg	initializes [arg_2] ||| [function_1] [arg_2]	count=1
arg	to waitpid pid status-ptr ||| pid status-ptr	count=1
arg	formatted wide character output ||| format	count=4
function	conjugate ||| conj	count=1
arg	first occurrence of ||| count	count=4
function	getpwnam [function_2] ||| [function_2] [function_1]	count=4
arg	of type va_list ||| ap	count=3
function	output to stdout ||| fprintf	count=1
module	fma ||| numeric math	count=2
arg	character ||| s	count=1
function_arg	[function_1] [arg_2] position used for positioning ||| [function_1] [arg_2]	count=10
arg	characters between two ||| count	count=1
function	similar to asctime ||| asctime	count=1
function	blocks until locks a ||| mtx lock	count=1
function	and ||| and	count=2
function	set ||| ppc set	count=2
arg	excepts ||| excepts	count=1
function	priority [function_2] ||| [function_2] [function_1]	count=1
arg	changes [arg] open ||| filedes [arg]	count=1
function	gets ||| gtty	count=1
function	nis aka yp domain ||| setdomainname	count=1
arg	by tptr to current ||| tptr	count=1
function	sets ||| stty	count=1
arg	where the resolved parameter ||| resolved	count=1
arg	uint16_t integer [arg] from host ||| [arg]	count=1
arg	stream ||| stream result_buf buffer	count=1
function	similar [function] but ||| secure [function]	count=1
arg	[arg] like envz_entry), ||| envz envz_len [arg]	count=3
rep	a [function_arg_2] ||| [module_1] wide [function_arg_2]	count=6
function	1 plus the ||| log1p	count=1
module	guaranteed to ||| numeric	count=1
arg	the sign of ||| x y	count=2
function	64-bit file offsets on ||| posix fallocate	count=1
arg	on a condition variable ||| cond mutex duration	count=1
function	priority [function_2] ||| [function_1] [function_2]	count=1
arg	level level for ||| level	count=1
module	[module] waits ||| [module]	count=1
arg	described in buffer with ||| buffer	count=1
arg	of [arg_2] ||| [arg_1] size [arg_2]	count=1
arg	a struct rlimit ||| resource rlp	count=2
arg	of the variable pointed [arg_1] [arg_2] ||| hasmntopt [arg_1] [arg_2]	count=1
function_arg	unlocks a mutex ||| mtx unlock mutex	count=2
module	returns a bitmask of ||| core	count=1
function	gathers ||| writev	count=1
arg	the owner of the ||| owner group	count=1
module	convenience macro expands ||| types	count=1
function	set the program priority ||| _ ppc set	count=1
module	defines ||| numeric	count=1
function	to fseeko with ||| fseeko	count=1
arg	to aio_suspend with the ||| list[] nent timeout	count=1
function_arg	[function_1] buf_len to ||| [arg_2] [function_1]	count=1
function	to fopen ||| fopen	count=1
function	set the default ||| default	count=1
arg	described in buffer with ||| param[7] buffer	count=1
arg	added as part ||| pattern flags	count=1
function	stat [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] of characters ||| [function_1] lhs rhs [arg_2]	count=2
module	overflow ||| numeric	count=1
arg	string ||| dst src	count=2
arg	spec ||| spec handler-function	count=1
arg	condition variable with ||| cond	count=1
module	[module] to ||| [module]	count=3
arg	to by [arg] as ||| [arg]	count=1
arg	resolved parameter ||| resolved	count=1
arg	difference that the offset ||| offset whence	count=1
arg	group owner to group ||| owner group	count=1
arg	ndigit ||| ndigit	count=3
arg	character array ||| dest ch	count=1
arg	no more [arg] from from ||| to from c [arg]	count=1
function	and updates ||| argz add	count=1
arg	described in buffer ||| param[7] buffer	count=1
arg	function behaves [arg] ||| [arg]	count=1
module	[module] allows adding ||| [module]	count=1
arg	gid ||| gid result_buf	count=1
function_arg	[function_1] file ||| [arg_2] [function_1]	count=5
arg	the size argument ||| s size	count=1
arg	mask to mask ||| mask	count=1
function	processors the [function_2] ||| [function_1] [function_2]	count=1
module	computes efficiently a number ||| numeric	count=1
arg	presentation textual ||| af cp buf	count=1
module	this function forces all ||| core	count=1
module	this prints the ||| core	count=1
module	and typical [module] it ||| [module]	count=1
arg	by [arg] for an ||| key [arg] nmemb size	count=1
function	conversion specifier character ||| register printf function	count=1
module	float ||| numeric	count=1
module	this returns ||| core	count=1
arg	executes [arg_1] [arg_2] as a new process ||| execv [arg_2] [arg_1]	count=1
function	same as ecvt except ||| ecvt r	count=1
function	arc sine ||| casin	count=2
module	[module_1] wide character ||| [module_1] [module_2]	count=16
arg	which it is ||| size	count=1
arg	16-bit wide character ||| c16	count=1
arg	substring of ||| substr	count=2
arg	string given ||| dst src len	count=2
arg	characters ||| count destsz	count=4
arg	[arg] strcoll ||| [arg]	count=1
function	to fsetpos but the ||| fsetpos 64	count=1
function	create a ||| create	count=1
function	to the strtouq ||| wcstouq	count=1
arg	[arg_1] argtypes the ||| printf size info info [arg_1] [arg_2]	count=1
arg	stream dirstream [arg] ||| dirstream [arg]	count=1
module	[module] used ||| [module]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=526
function_arg	output to [arg_2] ||| [arg_2] [function_1]	count=2
arg	32-bit wide character ||| c32 ps	count=1
arg	occurrence of a wide ||| count	count=2
arg	s of size maxlen ||| maxlen	count=1
module	common mathematical ||| numeric math	count=1
arg	to by [arg] for ||| key [arg] nmemb size	count=1
module	this function speeds ||| core	count=1
function	to mrand48 [function_2] ||| [function_2] [function_1]	count=3
arg	communication [arg] which should ||| namespace [arg]	count=1
arg	[arg] for ||| [arg]	count=1
function	the read ||| pread	count=1
module	perform occasional ||| core	count=1
function	the function [function] ||| [function]	count=1
function	first occurrence ||| wcschr	count=1
function	the fread function ||| fread	count=1
arg	the size ||| size template	count=1
module	this function converts the ||| core	count=2
arg	name ||| name result_buf buffer buflen	count=2
module	call to [module] initializes the ||| [module]	count=1
arg	pos ||| pos	count=1
arg	sorts a range of ||| ptr count size	count=1
function	available processors ||| nprocs	count=1
arg	id is gid ||| gid result_buf buffer buflen result	count=1
module	is a 7-bit unsigned ||| string	count=1
arg	fildes is the controlling ||| fildes	count=1
function	two possibly overlapping arrays ||| wmemmove	count=1
function	adds one byte containing ||| obstack 1grow fast	count=1
module	to narrow multibyte ||| multibyte	count=2
arg	[arg_1] an ||| [arg_2] [arg_1]	count=3
function	base-e exponential ||| cexp	count=2
function	the ttyname ||| ttyname r	count=1
rep	[module_1] printing character ||| [module_1] is [function_arg_2]	count=2
arg	option optname at ||| optname	count=1
arg	flags indicated by excepts ||| excepts	count=1
module	except that the ||| io	count=1
function	fsetpos but ||| fsetpos 64	count=2
arg	string ||| src	count=7
arg	of type struct dirent64 ||| dir namelist dirent64 **)	count=1
function	is similar to fseeko ||| fseeko 64	count=1
function	reallocating ||| argz insert	count=1
module	character is a ||| string	count=3
arg	signp instead [arg_2] ||| r [arg_2] [arg_1]	count=1
module	defines ||| math	count=1
arg	behaves [arg] strcoll ||| [arg]	count=1
arg	as [arg] handle ||| [arg]	count=1
function	adding the value ||| obstack ptr grow	count=1
arg	restores the current ||| envp	count=1
module	[module_1] number ||| [module_1] [module_2]	count=30
function	allowed to change ||| setegid	count=1
function	like wprintf ||| swprintf	count=1
arg	buffer with the data ||| buffer	count=1
module	the given number ||| numeric math	count=20
arg	an existing atomic object ||| obj desired	count=1
arg	size argument ||| s size	count=1
function_arg	[function_1] [arg_2] ||| [function_1] obstack-ptr [arg_2]	count=2
arg	nel elements ||| nel	count=1
arg	processes to niceval ||| niceval	count=1
arg	fildes is ||| fildes	count=1
arg	about the host ||| h_errnop	count=2
arg	buf with ||| decpt neg buf	count=1
arg	[arg] wide string ||| [arg]	count=3
function	returns [function_2] ||| [function_2] [function_1]	count=2
arg	and domainp point to ||| domainp	count=1
module	this function sets the ||| core	count=4
arg	and adding buf_len to ||| buf_len	count=1
function_arg	control [arg_2] ||| [function_1] [arg_2]	count=3
function	custom wide ||| wcsftime	count=2
function	arc hyperbolic sine ||| casinh	count=2
function	a dependency chain ||| dependency	count=1
arg	integer value ||| base	count=5
function	of type struct aiocb64 ||| aio fsync 64	count=1
arg	argv of length ||| argv	count=1
function	the fma function ||| fma	count=2
arg	mantissa [arg] scaled to ||| [arg]	count=1
arg	the file filename to ||| filename	count=1
arg	condition variable with a ||| cond mutex duration	count=1
function	to accept a ||| accept	count=1
arg	[arg] position ||| [arg]	count=1
arg	the byte delim ||| delim	count=1
arg	pointed [arg] ||| time [arg]	count=1
function	of 1 plus ||| log1p	count=1
function	of bytes in ||| mblen	count=1
function	swaps a value ||| exchange	count=1
function_arg	but the [arg_2] ||| [arg_2] [function_1]	count=1
arg	substring of characters ||| substr	count=2
arg	[arg_1] in *rlp ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] template ||| parse [function_1] [arg_2]	count=2
arg	the group database for ||| group	count=1
arg	the null-terminated [arg] ||| [arg]	count=1
arg	is used ||| parameter	count=1
arg	a stream ||| stream	count=1
function	but like ||| r	count=1
arg	[arg] handle ||| [arg]	count=3
arg	of a string ||| str	count=2
function	equivalent of snprintf with ||| vsnprintf	count=1
function	set the ||| _ ppc set	count=2
module	[module] inverse ||| [module]	count=1
arg	pid ||| pid	count=1
arg	added as ||| flags	count=1
arg	wide string in another ||| dest src	count=1
arg	of processes to niceval ||| niceval	count=1
module	pointed to by ||| numeric fenv	count=1
function	reads a ||| atomic load	count=1
function_arg	control character ||| cntrl ch	count=1
module	guaranteed to overflow ||| numeric	count=1
module	of taking [module] ||| [module]	count=3
function	in that is returns ||| r	count=2
arg	entry to the file ||| stream	count=1
arg	characters from ||| count	count=2
function_arg	only ‘-’ [arg_2] ||| [function_1] [arg_2]	count=1
function	fseeko with ||| fseeko	count=1
arg	removes [arg] ||| envz envz_len [arg]	count=1
arg	buf [arg_2] ||| [arg_2] [arg_1]	count=4
arg	the character ||| s template	count=1
arg	atomic object ||| obj desired order	count=1
arg	specific location in a ||| offset origin	count=2
function_arg	[function_1] [arg_2] ||| core [function_1] [arg_2]	count=1
arg	describing [arg] ||| [arg]	count=1
arg	buffer is ||| buffer	count=1
arg	of ‘--’ ||| argc argv shortopts longopts indexptr	count=1
arg	returns the length of ||| strsz	count=3
function	without initializing ||| obstack blank	count=1
arg	[arg_1] byte offset ||| core posix fallocate fd [arg_2] [arg_1]	count=1
arg	message describing the ||| message	count=1
module	wide strings in ||| string wide	count=2
arg	address ||| addr length	count=1
function	in that it ||| r	count=3
arg	length len ||| len	count=2
module	this prints ||| core	count=1
function	similar to aio_error ||| error 64	count=1
function	file offsets ||| posix fallocate	count=1
module	float ||| numeric math	count=1
arg	given state ||| ps	count=6
arg	most ndigit ||| ndigit decpt neg	count=1
function	srand48 does ||| srand48	count=1
arg	the stream ||| count stream	count=3
function	sine ||| sin	count=2
arg	argv of ||| argv	count=1
arg	group name is name ||| name result_buf	count=1
arg	next user entry from ||| result_buf buffer	count=1
arg	a buffer [arg_2] ||| [arg_1] bufsz format [arg_2]	count=4
arg	character array ||| dest ch count	count=2
function	to getgrnam ||| getgrnam	count=1
function_arg	printf template [arg_2] ||| [arg_2] [function_1]	count=1
function	used by mbrtoc16 ||| mbrtoc16	count=1
arg	specified by addr ||| addr	count=1
function	vprintf ||| obstack vprintf	count=2
module	to nearest [module] rounding ||| numeric [module]	count=1
function	printf ||| printf format	count=1
arg	of option optname ||| optname optval optlen-ptr	count=1
arg	addr ||| addr	count=1
arg	utmp to ||| utmp	count=1
arg	the seedval parameter ||| seedval	count=1
arg	which ||| which	count=1
module	this function is the ||| core	count=3
arg	if usage is ||| usage	count=1
arg	mutex ||| mutex	count=3
function_arg	[function_1] the attributes ||| [function_1] [arg_2]	count=2
function_arg	space [arg_2] ||| [arg_2] [function_1]	count=2
function	to the aio_read ||| aio read	count=1
function	works like strerror but ||| strerror r	count=1
arg	optname at ||| optname	count=1
arg	option optname at ||| optname optval	count=1
arg	string to [arg_2] ||| [arg_2] [arg_1]	count=12
arg	with sep ||| sep	count=1
arg	next token in ||| delim strmax ptr	count=2
function_arg	unlocks [arg_2] ||| [arg_2] [function_1]	count=1
module	is a ||| string byte	count=1
function	blocks until locks ||| mtx lock	count=1
function_arg	punctuation [arg_2] ||| [function_1] [arg_2]	count=2
function	use tdestroy ||| tdestroy	count=1
function	about the service named ||| getservbyname	count=1
module	overflow a ||| numeric math	count=1
arg	obstack-ptr ||| obstack-ptr	count=2
module	a variable number ||| io	count=2
function_arg	string within [arg_2] ||| [function_1] [arg_2]	count=2
function	to mrand48 ||| mrand48	count=1
arg	about the host ||| result h_errnop	count=2
function	[function_1] processors ||| [function_2] [function_1]	count=1
arg	of the floating-point division ||| x y	count=2
arg	instead of ‘--’ ||| argc argv shortopts longopts indexptr	count=1
module	the error ||| error	count=1
arg	prints formatted wide character ||| bufsz format	count=4
function	the getwchar ||| getwchar	count=1
module	a bitmask of ||| core	count=1
module	this function determines ||| core	count=3
arg	[arg] the function ||| [arg]	count=1
arg	buffer describing ||| buffer	count=1
arg	[arg_1] key ||| [arg_2] [arg_1]	count=2
function_arg	accommodate [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] filedes ||| [arg_2] [arg_1]	count=8
function	getrlimit [function_2] ||| [function_1] [function_2]	count=4
arg	character ||| s template	count=1
module	variable pointed to by ||| numeric fenv	count=1
arg	hostp ||| hostp	count=1
function_arg	[function_1] name from ||| [arg_2] [function_1]	count=3
module	evaluates ||| numeric math	count=1
module	this function changes the ||| core	count=1
module	to overflow a ||| math	count=1
module	[module] stores ||| [module]	count=1
arg	to niceval class ||| class id niceval	count=1
function	entry in envz with ||| envz entry	count=1
arg	size bytes [arg_2] ||| [arg_2] [arg_1]	count=8
function_arg	has finite [arg_2] ||| [function_1] [arg_2]	count=1
arg	error ||| errnum buf	count=1
function	every position ||| wmemset	count=1
module	[module] searches ||| [module]	count=1
arg	[arg_1] and domainp ||| [arg_1] [arg_2]	count=5
arg	[arg_1] x ||| [arg_2] [arg_1]	count=4
arg	string to [arg_2] ||| [arg_1] [arg_2]	count=12
function	error ||| error	count=1
arg	will return [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
function_arg	saves or restores ||| feenv envp	count=1
arg	from [arg] ||| [arg]	count=1
module	[module] converts an ||| [module]	count=1
arg	a wide character ||| ch	count=2
arg	the buffer of buflen ||| buflen	count=1
arg	with [arg] ||| envz envz_len [arg]	count=1
arg	sets [arg] ||| user [arg]	count=1
function	[function_1] in that ||| [function_1] [function_2]	count=8
function	long [function_2] ||| [function_2] [function_1]	count=2
function	equivalent to the fflush ||| fflush	count=1
function	normal ||| normal	count=1
arg	is name ||| name result_buf buffer buflen result	count=2
function	accordance to the current ||| wcscoll	count=2
function	equivalent to the strtouq ||| wcstouq	count=1
arg	32-bit wide character to ||| s c32	count=1
arg	the groups ||| groups	count=1
function	to getpwnam [function_2] ||| [function_1] [function_2]	count=4
module	a ||| string byte	count=26
function	returns [function_2] ||| [function_1] [function_2]	count=2
function_arg	writes up [arg_2] ||| [function_1] filedes buffer [arg_2]	count=2
arg	of wide characters ||| count destsz	count=2
arg	[arg_1] userp and ||| [arg_1] [arg_2]	count=4
module	a single-byte narrow character ||| string	count=4
arg	parameter and that ndigit ||| ndigit buf	count=1
arg	[arg] position used ||| [arg]	count=1
arg	the storage [arg] points ||| [arg]	count=1
function_arg	[function_1] resolved parameter ||| [function_1] [arg_2]	count=2
arg	[arg_1] a file ||| [arg_1] size [arg_2]	count=2
function_arg	to realpath [arg_2] ||| [function_1] [arg_2]	count=1
arg	a wide [arg] to stdout ||| [arg]	count=1
function	to realpath where the ||| realpath	count=1
module	[module] the same ||| [module]	count=1
function	[function_1] but ||| [function_1] [function_2]	count=20
arg	owner ||| owner group	count=1
function	expression is ||| assert	count=1
arg	the [arg] ||| [arg]	count=1
arg	by state to stream ||| stream flags	count=1
arg	option optname [arg_2] ||| [arg_2] [arg_1]	count=6
function	lstat [function_2] ||| [function_1] [function_2]	count=4
arg	with [arg] and value ||| envz envz_len [arg]	count=1
function_arg	[function_1] [arg_2] for positioning is provided ||| [function_1] [arg_2] position	count=5
arg	data from [arg] and scatters ||| [arg] vector	count=1
function	pwrite ||| pwrite	count=1
arg	[arg_1] length ||| [arg_1] [arg_2]	count=3
function	blocks until locks a ||| lock	count=1
arg	of a wide character ||| ch	count=2
arg	formatted output to ||| format	count=2
arg	writes a character ||| ch	count=2
function_arg	printing [arg_2] ||| [arg_2] [function_1]	count=4
function	memalign ||| posix memalign	count=2
function	fread function ||| fread	count=1
arg	file [arg_2] ||| [arg_2] [arg_1]	count=2
function	both ||| setscheduler	count=1
arg	[arg_1] to an ||| [arg_1] [arg_2]	count=3
module	to overflow a float ||| numeric math	count=1
arg	process group pgid ||| pgid	count=1
arg	the file [arg] ||| stream [arg]	count=2
arg	parses the arguments ||| arg_index input	count=1
function_arg	an uppercase [arg_2] ||| [arg_2] [function_1]	count=3
arg	host ||| buf buflen result h_errnop	count=2
arg	size [arg_2] ||| [arg_2] buffer mode [arg_1]	count=2
arg	pointed at by old ||| old	count=1
module	one wide string to ||| wide	count=1
function_arg	output to [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	the printf [arg_2] ||| parse [function_1] [arg_2]	count=1
module	[module] searches forward ||| [module]	count=1
module	a wide character according ||| string wide	count=2
arg	added as part of ||| pattern flags	count=1
arg	groups ||| groups	count=1
function	initializes all aspects ||| lcong48	count=1
arg	open on filedes ||| filedes	count=1
arg	a form [arg] ||| [arg] maxsize	count=2
function	similar to getgrgid ||| getgrgid	count=1
function	similar to getgrent ||| getgrent	count=1
module	calling thread for ||| thread	count=1
arg	32-bit wide character to ||| c32 ps	count=1
arg	string to wide string ||| src len dstsz	count=2
arg	how ||| how	count=1
function	to mrand48 [function_2] ||| [function_1] [function_2]	count=3
arg	character c to the ||| c	count=1
function	the default ||| default	count=2
arg	generator described in buffer ||| param[7] buffer	count=1
arg	to another ||| dest src destsz	count=1
module	narrow multibyte string ||| multibyte	count=2
arg	state ||| state	count=1
arg	to a buffer describing ||| buffer result	count=1
arg	a buffer ||| buffer result	count=1
arg	a buffer [arg_2] ||| [arg_2] [arg_1]	count=6
arg	to newuid ||| newuid	count=1
function	and store them ||| getrlimit	count=1
module	the value guaranteed ||| math	count=1
arg	named name ||| name	count=1
arg	[arg_1] length ||| core munmap [arg_1] [arg_2]	count=3
arg	given state ||| len ps	count=4
arg	parameter func ||| func descriptors	count=1
function	to medium high ||| ppr med high	count=2
function	to getcwd (null 0) ||| get current dir name	count=1
arg	described in buffer ||| buffer	count=1
module	the function returns a ||| core	count=1
arg	file [arg_2] ||| [arg_1] [arg_2]	count=2
function	snprintf with the ||| vsnprintf	count=1
function_arg	fsetpos but [arg_2] ||| [function_1] [arg_2] position	count=3
arg	[arg_1] a buffer ||| [arg_1] [arg_2]	count=18
arg	to wide string given ||| src len	count=2
module	function returns ||| core	count=1
function	to accept ||| accept	count=1
module	[module] error state ||| [module]	count=1
function	the [function] ||| [function] state	count=1
arg	[arg_1] of x ||| [arg_2] [arg_1]	count=2
function_arg	bessel function of the [function_1] [arg_2] ||| core [function_1] [arg_2]	count=4
module	wide [module_2] ||| [module_1] [module_2]	count=2
arg	of a floating-point ||| x	count=3
arg	string to wide string ||| src	count=4
arg	style style ||| style protocol	count=1
arg	added ||| pattern flags	count=1
arg	and that ||| buf	count=1
function	changes the size ||| truncate	count=1
module	a wide ||| string wide	count=32
arg	signal signum ||| signum	count=6
module	the common ||| error	count=1
function_arg	[function_1] of the ||| [function_1] [arg_2]	count=2
function	except that it ||| r	count=1
module	a narrow multibyte ||| string multibyte	count=4
arg	is name ||| name result_buf	count=2
function	destroys a ||| mtx destroy	count=1
arg	character is ||| ch	count=2
module	this function does the ||| core	count=1
function	array s instead ||| sprintf	count=1
arg	[arg_1] program execution ||| [arg_2] [arg_1]	count=2
module	[module] gets the ||| [module]	count=1
function_arg	custom wide [arg_2] ||| [function_1] [arg_2]	count=2
arg	resolved parameter is null ||| resolved	count=1
arg	socket socket ||| socket	count=3
function	to getgrgid ||| getgrgid	count=1
module	this function was ||| core	count=1
arg	terminal [arg] has been ||| [arg]	count=1
arg	n [arg_2] ||| [arg_1] [arg_2]	count=2
arg	[arg_1] a ||| [arg_2] [arg_1]	count=2
arg	that ndigit is restricted ||| value ndigit decpt neg	count=2
function	closely related to the ||| popen	count=1
module	[module] will return ||| [module]	count=1
arg	opt ||| opt	count=1
arg	[arg_1] string given ||| [arg_1] [arg_2]	count=2
arg	is used to initialize ||| size	count=1
module	this function searches in ||| core	count=1
arg	[arg] wide ||| [arg]	count=3
arg	flags flags ||| flags	count=2
function	like the readdir ||| readdir	count=1
arg	with [arg_2] ||| [arg_1] buf [arg_2]	count=2
arg	fmt and the ||| fmt	count=1
function	to getgrnam [function_2] ||| [function_1] [function_2]	count=4
arg	the contents of the ||| namelist dirent **)	count=1
function	gathers data from ||| writev	count=1
function	changes the size of ||| truncate	count=1
arg	by old ||| old	count=1
arg	stream stream is line ||| stream	count=1
arg	it changes [arg] open ||| filedes [arg]	count=1
function	with envz_add ||| merge	count=1
function	[function_1] but its ||| [function_1] [function_2]	count=8
module	[module] prints ||| [module]	count=1
function	expected by [function] ||| parse [function]	count=3
arg	mask to the calling ||| mask	count=1
arg	function behaves [arg] strcoll ||| [arg]	count=1
arg	a condition variable ||| cond	count=2
arg	[arg_1] array ||| [arg_2] [arg_1]	count=2
function	to asctime but ||| asctime r	count=1
function_arg	[function_1] wide character ||| [function_1] str [arg_2]	count=2
arg	character to [arg_2] ||| [arg_1] [arg_2]	count=3
module	a 7-bit unsigned ||| string	count=1
module	two wide ||| wide	count=2
arg	a file ||| count stream	count=4
function	similar to getgrnam in ||| getgrnam r	count=1
module	will remove this ||| core	count=1
arg	the null-terminated [arg] instead of ||| [arg]	count=1
arg	sets the buffer and ||| buffer mode	count=2
arg	the pointer buffer ||| buffer	count=1
function_arg	sets [arg_2] ||| [arg_2] [function_1]	count=11
arg	[arg] process ||| pid [arg]	count=1
arg	by addr and ||| addr	count=1
function	checks if the ||| is	count=1
arg	net ||| net	count=1
arg	specifies communication [arg] which should ||| namespace [arg]	count=1
arg	filedes ||| filedes	count=6
arg	any memory maps from [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
rep	number [function_arg_2] ||| [module_1] [function_arg_2]	count=1
function	the fgetwc ||| fgetwc	count=1
function	the mmap ||| mmap	count=1
module	[module] similar to ||| [module]	count=1
module	to [module] ||| [module]	count=7
arg	filename to [arg_2] ||| [arg_2] [arg_1]	count=2
module	bitmask ||| core	count=1
function	both the ||| setscheduler	count=1
arg	[arg_1] argc using ||| [arg_2] [arg_1]	count=10
arg	owner ||| owner	count=2
arg	user entry from stream ||| stream result_buf buffer	count=2
function	signal function as found ||| signal	count=1
function	returns the scheduling ||| sched	count=1
arg	buffer to ||| buffer	count=1
arg	domainp point ||| domainp	count=1
module	evaluates ||| numeric	count=1
function	similar to fsetpos but ||| fsetpos 64	count=1
function	with only ‘-’ ||| only	count=1
function_arg	an lowercase [arg_2] ||| [arg_2] [function_1]	count=1
function	pread ||| pread	count=1
function	certain amount ||| wcsncmp	count=2
module	[module] can be ||| [module]	count=2
function	[function_1] with only ||| [function_1] [function_2]	count=3
function	character equivalent to strnlen ||| wcsnlen	count=1
function	[function_1] the aio_read ||| [function_2] [function_1]	count=2
module	value guaranteed to overflow ||| numeric	count=1
arg	id pid ||| pid	count=2
arg	in the ||| n	count=1
arg	[arg_1] [arg_2] ||| psignal [arg_2] [arg_1]	count=5
arg	the next user entry ||| result_buf buffer buflen	count=1
arg	offset to offset ||| offset	count=1
function	by root [function] ||| [function]	count=1
module	this was a ||| core	count=1
module	to overflow ||| numeric	count=1
arg	size for [arg_2] ||| [arg_2] [arg_1]	count=2
function	mrand48 [function_2] ||| [function_1] [function_2]	count=3
arg	the specified lc_ctype category ||| wc desc	count=2
module	guaranteed to ||| math	count=1
arg	existing atomic ||| desired	count=1
arg	maxlen contains a ||| maxlen	count=1
arg	with the stream stream ||| stream	count=2
function	timeout ||| cnd timedwait	count=1
function	to the pwrite ||| pwrite	count=1
module	[module] opens ||| [module]	count=1
module	overflow a float ||| numeric	count=1
arg	the stream stream ||| stream	count=8
function_arg	[function_1] of filename ||| [function_1] [arg_2]	count=1
function	the aio_read ||| aio read	count=1
arg	userp ||| userp	count=1
function	setstate ||| setstate r	count=1
function_arg	within another ||| wcsstr dest src	count=2
function	offsets on ||| posix fallocate	count=1
arg	the next user entry ||| result_buf	count=1
arg	was added as part ||| pattern flags	count=1
arg	entry from stream ||| stream result_buf buffer buflen result	count=1
arg	envz2 to ||| envz2	count=1
arg	descriptor filedes ||| filedes	count=1
function_arg	[function_1] adding buf_len ||| [arg_2] [function_1]	count=2
arg	that the size ||| size	count=1
function_arg	[function_1] [arg_2] ||| parse [function_1] [arg_2]	count=3
function	fence ||| fence	count=1
arg	address to [arg_2] ||| [arg_2] [arg_1]	count=2
function	until locks ||| lock	count=1
function	mathematical ||| math	count=2
arg	prints [arg_1] [arg_2] output stream stderr see ||| psignal [arg_2] [arg_1]	count=1
module	this function converts ||| core	count=2
arg	specified by the ||| s	count=1
arg	message describing ||| message	count=1
function	sets the ||| setbuf	count=2
arg	user entry from stream ||| stream result_buf buffer buflen result	count=2
arg	[arg_1] of ||| r [arg_2] [arg_1]	count=3
function	similar to the pread ||| pread 64	count=1
function_arg	[function_1] n ||| core [function_1] [arg_2]	count=6
arg	process to neweuid ||| neweuid	count=1
arg	wide [arg] to stdout ||| [arg]	count=1
arg	length bytes starting at ||| length	count=1
arg	by [arg] as ||| [arg]	count=1
function	stores a ||| atomic store	count=1
function_arg	[function_1] a complex ||| [arg_2] [function_1]	count=2
arg	to the socket socket ||| socket	count=1
function	similar to aio_error ||| error	count=1
arg	an open [arg_1] [arg_2] ||| fpathconf [arg_1] [arg_2]	count=3
arg	maxlen ||| maxlen	count=1
arg	name is name ||| name result_buf buffer buflen	count=2
function	arc tangent ||| catan	count=1
function	these are [function] versions of ||| setkey [function]	count=1
function	pass long ||| getopt long	count=1
arg	the next user ||| result_buf buffer buflen result	count=1
arg	added as ||| pattern flags	count=1
arg	name ||| name result_buf buf buflen result	count=1
arg	condition variable with a ||| cond	count=1
arg	state to stream ||| stream flags	count=1
function	like the readdir ||| readdir 64	count=1
arg	was added as part ||| flags	count=1
arg	and [arg] ||| block [arg]	count=3
arg	[arg_1] from wide ||| [arg_2] [arg_1]	count=2
arg	parses [arg_2] ||| [arg_2] [arg_1]	count=16
function	similar to stat but ||| stat 64	count=1
arg	file stream ||| stream	count=24
module	for ||| io	count=1
arg	server [arg_2] ||| [arg_2] [arg_1]	count=2
function	function [function] the ||| [function]	count=1
arg	the string with sep ||| sep	count=1
arg	in buffer is ||| buffer	count=1
module	checks if the given ||| math	count=1
arg	addr and ||| addr	count=1
arg	opentype argument that ||| opentype	count=1
module	a single-byte ||| string multibyte	count=4
arg	[arg_1] is used ||| fpathconf [arg_1] [arg_2]	count=3
arg	from [arg] and ||| [arg] vector	count=1
arg	[arg] was ||| [arg]	count=3
function	but is ||| 64	count=1
function	blocks until locks ||| lock	count=1
module	the ||| math	count=3
arg	of the byte delim ||| argz_len str delim	count=1
function	adds the ||| sigaddset	count=1
arg	the opentype argument ||| opentype	count=1
arg	wto ||| wto wfrom	count=1
arg	[arg_1] userp ||| [arg_1] [arg_2]	count=4
module	a number ||| numeric math	count=6
function	jrand48 ||| jrand48	count=1
arg	this function is ||| size count	count=1
arg	of the ||| x	count=2
module	this function allocates ||| core	count=1
function_arg	and updates [arg_2] ||| [function_1] [arg_2]	count=1
arg	size instead of forwards ||| c size	count=1
function	to the fputs ||| fputs	count=1
function	to the aio_write ||| aio write	count=1
arg	the host ||| result_buf buf buflen result h_errnop	count=2
arg	specified lc_ctype category ||| wc desc	count=2
arg	starting at buffer ||| buffer	count=1
arg	the timeout ||| timeout	count=1
module	[module] reads up ||| [module]	count=1
arg	at most size bytes ||| size	count=1
arg	[arg] points to ||| [arg]	count=1
arg	in an atomic object ||| obj order	count=1
function	offsets on all platforms ||| posix fallocate	count=1
function	tests whether ||| sigismember	count=1
module	a [module_2] ||| [module_1] [module_2]	count=86
arg	entry from stream ||| stream result_buf buffer	count=1
function	one can use tdestroy ||| tdestroy	count=1
arg	parameters ||| status	count=2
function	similar to the ttyname ||| ttyname	count=1
function	every [function] that is ||| [function]	count=1
arg	wide string [arg] into a ||| [arg]	count=1
module	converts ||| chrono	count=2
arg	[arg_1] domainp point ||| [arg_1] [arg_2]	count=5
arg	blocks ||| blocks	count=1
function	in accordance ||| strcoll	count=1
function	fsetpos [function_2] ||| [function_2] [function_1]	count=2
arg	of filename [arg_2] ||| [arg_1] [arg_2]	count=1
arg	an atomic object ||| obj	count=3
function_arg	closes [arg_2] ||| [arg_2] [function_1]	count=1
function	is similar to getgrgid ||| getgrgid	count=1
module	computes e [module_2] ||| [module_1] [module_2]	count=4
function	makes sure that the ||| setfsent	count=1
arg	entry from stream ||| stream result_buf	count=1
arg	to a buffer ||| buffer	count=1
module	variadic function ||| variadic	count=2
module	value guaranteed ||| math	count=1
function	acquires the internal ||| flockfile	count=1
rep	[module_1] [function_arg_2] ||| [module_1] is [function_arg_2]	count=8
arg	[arg_1] signal signum ||| psignal [arg_2] [arg_1]	count=2
arg	existing ||| desired	count=1
arg	argv ||| argv options	count=1
module	evaluates to a ||| numeric math	count=2
arg	argv followed by ||| argv	count=1
arg	an atomic object ||| obj order	count=2
arg	to pos ||| pos	count=1
arg	intmax_t or uintmax_t ||| endptr base	count=2
arg	where the resolved parameter ||| name resolved	count=1
function	[function] but it ||| [function]	count=3
arg	argument list pointer ap ||| template ap	count=1
module	[module] blocks the ||| [module]	count=1
function	to getrlimit but ||| getrlimit 64	count=2
arg	[arg_1] file stream ||| [arg_1] [arg_2]	count=7
function	lldiv_t ||| lldiv	count=1
function	version of readdir ||| readdir r	count=1
arg	character ||| dst	count=3
arg	with process id pid ||| pid	count=1
function	long options with only ||| getopt long only	count=1
function	sets the process’s ||| setgroups	count=1
arg	sets the buffer ||| buffer	count=2
module	this is like strstr ||| core	count=1
function	tangent ||| ctan	count=2
arg	object in obstack obstack-ptr ||| obstack-ptr	count=2
arg	for the region of [arg_1] [arg_2] file for the descriptor ||| core posix fallocate [arg_2] [arg_1]	count=3
arg	option optname ||| optname optval	count=1
function_arg	until locks [arg_2] ||| [arg_2] [function_1]	count=1
function	equivalent to the fputs ||| fputs	count=1
arg	id ||| id buffer result	count=1
module	convert a ||| string	count=2
arg	user ||| result_buf buffer	count=1
function	*argz to accommodate it ||| append	count=1
module	the ||| numeric	count=3
arg	buffer describing ||| buffer result	count=1
arg	struct dirent64 ||| namelist dirent64 **)	count=1
arg	triple specified by ||| host user domain	count=1
function	hyperbolic cosine ||| ccosh	count=2
module	computes natural base-e logarithm ||| numeric math	count=1
arg	string fmt and ||| fmt	count=1
arg	the resolved parameter is ||| resolved	count=1
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=1
arg	owner of the ||| owner	count=1
module	value ||| numeric math	count=1
arg	argument ||| s	count=1
module	[module] works ||| [module]	count=1
module	this returns the number ||| core	count=1
arg	[arg_1] string ||| [arg_1] [arg_2]	count=3
arg	to dtype ||| dtype	count=1
function	sets ||| setbuf	count=2
function	value that is allowable ||| max	count=1
function	to accommodate it ||| argz append	count=1
function	type struct aiocb64 ||| aio	count=3
module	this function opens the ||| core	count=2
function	getpwnam in that is ||| getpwnam r	count=1
arg	more [arg] from from ||| to from c [arg]	count=1
function_arg	the [function_1] [arg_2] ||| core [function_1] create key [arg_2]	count=1
module	[module] roughly equivalent ||| [module]	count=1
function	nis aka yp domain ||| getdomainnname	count=1
arg	directory ||| dirstream	count=1
arg	for [arg] for ||| [arg]	count=1
arg	fildes is the ||| fildes	count=1
arg	buffer ||| xsubi[3] buffer result	count=1
arg	[arg] period ||| read-fds write-fds except-fds [arg]	count=3
function_arg	[function_1] address ||| [arg_2] [function_1]	count=1
module	character in a wide ||| string wide	count=2
arg	except that the size ||| size template	count=1
arg	to id ||| id	count=1
function	setrlimit [function_2] ||| [function_1] [function_2]	count=4
function	with only ||| only	count=1
arg	prints [arg_1] [arg_2] output stream stderr see ||| [arg_2] [arg_1]	count=1
arg	of length argc using ||| argc	count=1
function	first location of any ||| wcspbrk	count=1
arg	selected by dir ||| dir	count=1
arg	to filedes ||| filedes	count=1
arg	see running a command ||| command mode	count=1
arg	string to another ||| dest	count=1
function_arg	changes the [arg_2] ||| [function_1] [arg_2]	count=3
arg	using variable argument list ||| vlist	count=6
module	byte ||| string byte	count=1
arg	error ||| errnum buf bufsz	count=1
function	is similar to setrlimit ||| setrlimit	count=1
function	the [function] referred ||| [function] state	count=1
arg	the classification parameter ||| classification	count=1
function	sets both the ||| sched setscheduler	count=1
function	memalign function ||| memalign	count=1
arg	of the process pid ||| pid	count=1
module	[module_1] narrow multibyte ||| [module_1] [module_2]	count=4
function	the result differs ||| rint	count=2
function	[function] but ||| [function]	count=3
function	to getgrgid [function_2] ||| [function_1] [function_2]	count=2
arg	and that ndigit ||| ndigit buf	count=2
arg	the process’s supplementary group ||| group	count=1
module	[module] another ||| string [module]	count=2
module	function error this ||| core	count=1
function	globfree ||| globfree	count=1
function_arg	process’ [arg_2] ||| [function_1] [arg_2]	count=2
arg	up [arg] from ||| filedes buffer [arg]	count=1
arg	specified by the argv ||| argv options	count=1
arg	from the directory ||| dirstream	count=1
arg	[arg] with ||| net [arg]	count=1
arg	error ||| errnum	count=1
arg	in buffer ||| buffer	count=2
function_arg	[function_1] c ||| [function_1] ascii [arg_2]	count=1
module	[module] can ||| [module]	count=2
function	offsets on all ||| posix fallocate 64	count=1
module	this function adds ||| core	count=3
arg	until the timeout ||| timeout	count=1
arg	conversion [arg_2] ||| [arg_2] nwc len [arg_1]	count=1
arg	to aio_fsync ||| op	count=1
arg	wscanf but [arg] of taking ||| [arg]	count=1
function	for vprintf ||| obstack vprintf	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=15
arg	elements with unspecified type ||| comp context	count=1
rep	[module_1] [function_arg_2] ||| [module_1] math is [function_arg_2]	count=1
arg	size ||| size	count=6
arg	to mask ||| mask	count=1
module	this returns the ||| core	count=1
arg	of a floating-point number ||| x	count=3
function	with binary 00101010 ||| memfrob	count=1
module	wide ||| string wide	count=1
function_arg	destroys a mutex ||| mtx destroy mutex	count=2
arg	user id is uid ||| uid	count=1
arg	[arg] buffer ||| [arg] buffer	count=1
arg	[arg_1] argv of ||| [arg_2] [arg_1]	count=8
arg	aio_fsync with ||| op aiocbp	count=1
module	computes natural base-e ||| numeric	count=1
arg	[arg_1] position indicator ||| [arg_1] [arg_2]	count=6
function	nftw [function_2] ||| [function_1] [function_2]	count=3
module	deletes the [module] name ||| [module]	count=1
arg	[arg_1] initialized similarly ||| [arg_2] [arg_1]	count=6
function	set the ||| ppc set	count=2
arg	the host ||| buflen result h_errnop	count=2
function	is the [function] ||| [function]	count=1
function	of getmntent ||| getmntent	count=1
arg	file stream or a ||| stream	count=12
arg	to a growing object ||| obstack-ptr	count=1
arg	[arg_1] [arg_2] ||| core getpeername socket [arg_1] [arg_2]	count=7
function	bytes currently in the ||| _ fpending	count=1
function_arg	within [arg_2] ||| [arg_2] [function_1]	count=2
arg	in the parameter func ||| func	count=1
arg	alignment ||| memptr alignment	count=1
module	this function can be ||| core	count=7
arg	at buffer ||| buffer	count=1
arg	on [arg] has ||| [arg]	count=1
function	the localtime ||| localtime	count=1
arg	a mask ||| mask	count=1
function	operations will implicitly acquire ||| _ fsetlocking	count=1
function	is similar to freopen ||| freopen 64	count=1
arg	of filename to length ||| filename length	count=1
module	to a ||| numeric math	count=2
module	[module_1] number ||| [module_2] [module_1]	count=30
arg	whether the stream stream ||| stream	count=2
module	perform occasional consistency ||| core	count=1
arg	offset parameter ||| stream offset whence	count=1
function	per ||| per	count=1
function_arg	returns the bessel function [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=620
function	the printf ||| printf	count=1
arg	function see running a ||| mode	count=1
arg	optname at level level ||| level optname	count=1
arg	by tptr to ||| tptr	count=1
arg	a range [arg_2] ||| [arg_2] [arg_1]	count=2
module	defines ||| error	count=1
function	type lldiv_t ||| lldiv	count=1
module	the ||| core	count=1
arg	the null-terminated [arg] instead ||| [arg]	count=1
arg	the offset parameter is ||| stream offset	count=1
arg	buf ||| ndigit decpt neg buf	count=1
arg	argv of [arg_2] ||| [arg_2] [arg_1]	count=8
function	to fsetpos [function_2] ||| [function_2] [function_1]	count=2
arg	the parameter func ||| func descriptors	count=1
arg	argc ||| argc	count=1
function	installs the ||| setaffinity	count=1
arg	[arg] standard error ||| [arg]	count=1
arg	formatted wide character ||| format	count=4
arg	id is gid ||| gid result_buf	count=1
arg	string ||| nptr	count=2
arg	haystack ||| haystack haystack-len	count=1
arg	entry from [arg] and ||| [arg]	count=1
module	thread for ||| thread	count=1
function	[function] until all ||| [function]	count=2
function	[function] updating ||| [function]	count=3
arg	buffer with the data ||| param[7] buffer	count=1
arg	to a file stream ||| stream	count=7
function	writes up ||| write	count=1
arg	of a wide character ||| count	count=2
arg	buf to the argz ||| buf	count=1
arg	by htab ||| htab	count=1
function	to getrlimit [function_2] ||| [function_2] [function_1]	count=4
arg	[arg] for the ||| [arg]	count=1
function_arg	if [arg_2] ||| [arg_2] [function_1]	count=2
arg	the action previously ||| action	count=1
arg	[arg] with number ||| net [arg]	count=1
function	removes ||| sigdelset	count=1
arg	by ||| action	count=1
function_arg	of arguments expected by [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
module	breaks a number ||| numeric math	count=4
module	from a ||| string	count=2
arg	address [arg_2] ||| [arg_2] [arg_1]	count=2
module	[module] like wcsncmp ||| [module]	count=1
arg	type struct dirent64 ||| dirent64	count=1
function_arg	to accommodate [arg_2] ||| [function_1] [arg_2]	count=1
function	the fwrite ||| fwrite	count=1
arg	[arg_1] length-ptr ||| core getpeername socket [arg_1] [arg_2]	count=3
function_arg	internet [arg_2] ||| [function_1] lnaof [arg_2]	count=1
function	[function_1] freopen ||| [function_2] [function_1]	count=2
arg	file open on filedes ||| filedes	count=1
module	call to [module] initializes ||| [module]	count=1
function_arg	the function [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
arg	list pointer ap ||| template ap	count=1
function	the common ||| math	count=2
module	this function is equivalent ||| core	count=7
function	to stat [function_2] ||| [function_2] [function_1]	count=4
module	the common mathematical ||| error	count=1
arg	parses the ||| arg_index input	count=1
function_arg	[function_1] character ||| [arg_2] [function_1]	count=17
arg	specified by [arg] in ||| [arg]	count=1
arg	that ndigit [arg_2] ||| [arg_2] [arg_1]	count=2
arg	buffer is initialized similarly ||| seedval buffer	count=1
function	getutent ||| getutent	count=1
function	fputwc ||| fputwc	count=1
arg	time to time ||| time	count=2
function	bsd name for strtoull ||| strtouq	count=1
arg	a ||| string	count=2
arg	user [arg_2] ||| [arg_2] [arg_1]	count=2
arg	to by before ||| before	count=1
function_arg	gets the [arg_2] ||| [arg_2] [function_1]	count=4
arg	delim ||| argz_len str delim	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=412
function	can ||| catclose	count=1
module	given ||| math	count=20
arg	function behaves [arg] strcoll function ||| [arg]	count=1
arg	aio_fsync with the ||| op aiocbp	count=1
function	the entry ||| envz entry	count=1
module	overflow a ||| math	count=1
function	the fgetws ||| fgetws	count=1
function_arg	sets the attributes ||| stty filedes attributes	count=2
arg	the terminal [arg] has been ||| [arg]	count=1
module	[module] one can ||| [module]	count=1
function	of readdir which ||| readdir	count=1
arg	an [arg_1] [arg_2] ||| fpathconf [arg_1] [arg_2]	count=3
arg	owner of ||| owner	count=1
function	default attribute values to ||| pthread setattr default np	count=1
function	the entry in envz ||| entry	count=1
module	the common mathematical ||| numeric	count=1
arg	this function is ||| size	count=1
function	putc ||| putc	count=1
arg	salt ||| salt	count=1
arg	dirstream [arg] ||| dirstream [arg]	count=1
function	[function_1] available processors ||| [function_2] [function_1]	count=1
function	stat but ||| stat 64	count=2
arg	user entry from stream ||| stream result_buf	count=2
function	the number of bytes ||| mblen	count=1
arg	size maxlen ||| maxlen	count=1
arg	the character ||| s	count=1
module	wide character ||| wide	count=13
function_arg	calling thread [arg_2] ||| core [function_1] create key [arg_2]	count=1
arg	[arg_1] [arg_2] ||| [arg_2] id [arg_1]	count=4
module	occasional ||| core	count=1
module	overflow a float ||| math	count=1
arg	ndigit is restricted ||| value ndigit decpt	count=2
arg	first parameter and that ||| buf	count=1
arg	is used ||| size	count=1
arg	occurrence of a ||| count	count=2
arg	mask ||| mask	count=4
module	calling this function ||| core	count=1
module	error this prints ||| core	count=1
arg	group id is gid ||| gid result_buf buffer buflen result	count=1
arg	of a wide ||| count	count=2
arg	a condition variable ||| cond mutex duration	count=1
arg	wtmp_file ||| wtmp_file utmp	count=1
module	this function changes ||| core	count=1
arg	string [arg] against ||| [arg]	count=1
function	stores a value in ||| atomic store	count=1
arg	of size bytes ||| size compar	count=1
module	guaranteed to ||| numeric math	count=1
function_arg	[function_1] of boundary ||| [arg_2] [function_1]	count=3
arg	[arg_1] options ||| [arg_1] [arg_2]	count=2
function	reads ||| atomic load	count=1
function	accommodate ||| append	count=1
arg	an [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function] addr points ||| inet [function]	count=2
function	installs ||| setaffinity	count=1
arg	[arg] to ||| stream [arg]	count=2
arg	waitpid pid status-ptr options ||| pid status-ptr options	count=1
function	can use tdestroy ||| tdestroy	count=1
function	last occurrence ||| wcsrchr	count=1
function	to getrlimit [function_2] ||| [function_1] [function_2]	count=4
arg	32-bit ||| c32 ps	count=1
function	default attribute values ||| pthread setattr default np	count=1
function	equivalent to fcvt ||| qfcvt	count=1
arg	[arg] just like ||| [arg]	count=3
arg	[arg_1] ndigit ||| [arg_2] [arg_1]	count=8
arg	envz2 ||| envz2 envz2_len	count=1
module	this function returns an ||| core	count=1
arg	byte delim ||| delim	count=1
arg	of ||| x y	count=6
arg	an atomic object ||| obj desired order	count=1
arg	report general problems during ||| errnum format	count=1
module	function calls the function ||| core	count=1
arg	an [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=3
function	reallocate *argz modifying ||| delete	count=1
module	a bitmask ||| core	count=1
arg	sends [arg] ||| pid [arg]	count=2
function_arg	[function_1] absolute priority ||| [function_1] [arg_2]	count=6
arg	the groups [arg_2] ||| [arg_2] [arg_1]	count=1
module	to the given ||| math	count=4
module	a wide string ||| string wide	count=2
function	nan ||| nan	count=2
module	[module] just like ||| [module]	count=3
function	to fsetpos ||| fsetpos	count=1
arg	executes [arg] ||| filename [arg]	count=1
function	mbrtoc16 ||| mbrtoc16	count=1
arg	to ||| buffer	count=4
arg	formatted wide ||| format	count=4
function	are [function] versions of ||| setkey [function]	count=1
arg	the file named by [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	returns ||| getpgid	count=1
arg	aio_fsync ||| op aiocbp	count=1
arg	[arg] to ||| [arg]	count=4
function	to getgrent ||| getgrent	count=1
arg	the next user ||| result_buf	count=1
arg	signp instead ||| signp	count=1
function	similar [function] but it ||| secure [function]	count=1
arg	size bytes to the ||| size	count=1
arg	32-bit wide ||| c32 ps	count=1
arg	the pattern pattern ||| pattern	count=1
function_arg	accommodate [arg_2] ||| [function_1] argz argz_len buf [arg_2]	count=1
function	to getpwnam in that ||| getpwnam r	count=1
function	to nftw [function_2] ||| [function_2] [function_1]	count=3
function_arg	printf template [arg_2] ||| parse [function_1] [arg_2]	count=1
function	getcwd (null 0) ||| get current dir name	count=1
function	of processors [function_2] ||| [function_2] [function_1]	count=1
function_arg	a multiple [arg_2] ||| [function_1] [arg_2]	count=1
function	if with envz_add ||| merge	count=1
arg	group id is gid ||| gid	count=2
arg	addr [arg_2] ||| core getpeername socket [arg_1] [arg_2]	count=1
function_arg	a process’ [arg_2] ||| [function_1] [arg_2]	count=2
module	common ||| math	count=3
module	given [module_2] ||| [module_2] [module_1]	count=10
function	similar to aio_return with ||| return	count=1
function_arg	the [function_1] [arg_2] ||| [function_1] [arg_2]	count=11
function	the entry in envz ||| envz entry	count=1
module	guaranteed to overflow ||| math	count=1
function	exactly like the setstate ||| setstate r	count=1
function	just like the readdir ||| readdir 64	count=1
arg	newgid provided that the ||| newgid	count=2
arg	buffer for [arg_2] ||| [arg_2] [arg_1]	count=4
arg	mantissa [arg] ||| [arg]	count=1
arg	condition variable with ||| cond mutex	count=1
module	guaranteed to overflow a ||| math	count=1
function	accepts 64-bit file offsets ||| posix fallocate 64	count=1
function_arg	[function_1] name of ||| [function_1] [arg_2]	count=2
function	to fcvt except that ||| qfcvt	count=1
arg	character string ||| dst src len	count=5
arg	blocks ||| blocks len	count=1
module	a wide character to ||| string	count=1
module	this function adds an ||| core	count=1
function	processors [function_2] ||| [function_1] [function_2]	count=1
arg	in argv [arg_2] ||| [arg_2] [arg_1]	count=6
function_arg	[function_1] of ‘--’ ||| [function_1] [arg_2]	count=5
arg	[arg_1] filename ||| [arg_2] [arg_1]	count=4
module	evaluates ||| math	count=1
arg	prints [arg_1] [arg_2] ||| [arg_2] [arg_1]	count=5
module	one [module] another ||| string [module]	count=2
arg	to an [arg_2] ||| [arg_2] [arg_1]	count=3
module	this function forces ||| core	count=1
arg	attributes of ||| attributes	count=2
arg	parameter must be ||| tokens valuep	count=1
arg	attributes ||| filedes attributes	count=2
function	object in [function_2] ||| [function_2] [function_1]	count=1
arg	string to an ||| str	count=1
module	[module] enables the ||| [module]	count=1
module	to perform ||| core	count=1
arg	null-terminated [arg] instead ||| [arg]	count=1
function	accept a connection ||| accept	count=1
function	to lstat but ||| lstat 64	count=2
arg	to aio_fsync with the ||| op	count=1
function	equivalent to the getutent ||| getutent	count=1
module	the current thread ||| thread	count=1
function	indicates ||| fp categories	count=1
function	equivalent to globfree ||| globfree	count=1
arg	set set ||| set	count=3
function_arg	accommodate it [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] the “logmask” ||| [arg]	count=2
function	handling strategies ||| strategies	count=1
module	program ||| program	count=1
arg	argv of length argc ||| argc argv	count=1
function	equivalent to the getutent ||| getutent r	count=1
function	returns the ||| getpgid	count=1
arg	at by old ||| old	count=1
function	[function] takes ||| readdir64 [function]	count=3
arg	envz2 to envz ||| envz2 envz2_len override	count=1
function	of type struct aiocb64 ||| aio fsync	count=1
function_arg	printing character ||| print ch	count=2
function	is similar to aio_error ||| error 64	count=1
module	in the current c ||| wide	count=3
arg	the server socket socket ||| socket addr length_ptr	count=1
module	[module] socket and ||| [module]	count=1
arg	the offset parameter ||| stream offset whence	count=1
function	that it ||| r	count=1
arg	to by htab ||| htab	count=1
module	[module] blocks ||| [module]	count=1
function	initializes all aspects of ||| lcong48 r	count=1
function	absolute priority ||| sched get priority	count=1
function	that the fma ||| fma	count=2
arg	equal to name ||| name	count=2
function	set ||| set	count=3
function	accordance to the ||| wcscoll	count=2
module	computes e raised to ||| numeric	count=2
arg	string pointed [arg] ||| time [arg]	count=1
arg	[arg_1] and ||| [arg_1] [arg_2]	count=6
function	to mrand48 but like ||| mrand48 r	count=1
arg	for a file stream ||| stream	count=4
arg	string to wide string ||| src len	count=4
module	breaks a ||| math	count=2
arg	file ||| stream mnt	count=1
module	this function appends buf_len ||| core	count=1
arg	the owner ||| owner	count=1
function	struct aiocb64 ||| aio fsync 64	count=1
module	computes natural ||| numeric math	count=1
arg	the stream stream to ||| stream	count=1
arg	socket ||| socket n	count=1
function	application to pass long ||| getopt long	count=1
module	[module] sets an ||| [module]	count=1
arg	string [arg_2] ||| [arg_1] [arg_2]	count=12
function	printing ||| wprint	count=2
function_arg	[function_1] c ||| [arg_2] [function_1]	count=1
function	equivalent to the ferror ||| ferror	count=1
module	[module] enables ||| [module]	count=1
arg	hostp [arg_2] ||| [arg_2] [arg_1]	count=6
arg	of size maxlen ||| s maxlen	count=1
function	similar to asctime but ||| asctime	count=1
function	to getgrgid [function_2] ||| [function_2] [function_1]	count=2
function	address is a multiple ||| memalign	count=1
arg	if [arg] is finite ||| [arg]	count=1
arg	size for ||| size	count=2
function	type ldiv_t ||| ldiv	count=1
function	asctime ||| asctime r	count=1
function_arg	gets [arg_2] ||| [function_1] [arg_2]	count=3
arg	next user [arg_2] ||| [arg_2] [arg_1]	count=2
function	dependency chain for ||| kill dependency	count=1
arg	[arg_1] argv ||| [arg_2] [arg_1]	count=8
function_arg	[function_1] of characters ||| [arg_2] [function_1]	count=2
arg	similar to aio_fsync ||| op aiocbp	count=1
arg	to niceval ||| niceval	count=1
function	[function_1] high value ||| [function_1] [function_2]	count=5
arg	offset ||| stream offset whence	count=1
function	similar to the ptsname ||| ptsname	count=1
function	mrand48 [function_2] ||| [function_2] [function_1]	count=3
function_arg	sets the [arg_2] ||| [function_1] [arg_2]	count=7
module	this is just ||| core	count=1
arg	character ||| str ch	count=2
arg	program execution ||| status	count=1
arg	option optname at ||| optname optval optlen-ptr	count=1
function_arg	named [arg_2] ||| [function_1] [arg_2]	count=1
arg	address [arg] ||| [arg]	count=3
function	absolute priority ||| priority	count=1
arg	the file [arg] associated with ||| filename [arg]	count=1
arg	owner of the ||| owner group	count=1
arg	envz2 ||| envz2 envz2_len override	count=1
function	to getpwent ||| getpwent	count=1
arg	wtmp_file ||| wtmp_file	count=1
arg	character string given ||| dst src len	count=4
arg	the elements in ||| argz	count=1
function	to getpwnam [function_2] ||| [function_2] [function_1]	count=4
module	this was a call ||| core	count=1
function_arg	[function_1] attributes of ||| [function_1] [arg_2]	count=2
module	strings ||| string	count=3
module	function will remove this ||| core	count=1
arg	from buffer to ||| buffer	count=1
module	variadic function argument ||| variadic	count=2
module	common mathematical functions ||| numeric	count=1
arg	wide characters ||| count	count=2
function	readdir which ||| readdir	count=1
module	[module] generates ||| [module]	count=2
arg	of option optname at ||| optname optval	count=1
function	tdelete can be used ||| tdelete	count=1
function_arg	control [arg_2] ||| [arg_2] [function_1]	count=3
arg	‘sprintf(buf "%*g", ndigit ||| ndigit	count=1
function	asctime but instead ||| asctime	count=1
function	sets both ||| setscheduler	count=1
function	to fcvt except ||| qfcvt	count=1
arg	parses the arguments in ||| flags arg_index input	count=1
arg	you [arg] open ||| [arg]	count=1
arg	named by filename ||| filename argv	count=1
function	but ||| 64	count=5
arg	specified by filedes ||| filedes action	count=2
arg	[arg] for every ||| filename [arg]	count=3
module	a floating-point category ||| numeric math	count=1
arg	by [arg] for ||| key [arg] nmemb size	count=1
arg	aio_fsync with the ||| op	count=1
function	getgrnam [function_2] ||| [function_1] [function_2]	count=4
arg	describing the signal signum ||| signum	count=1
function	ptsname ||| ptsname	count=1
function	tangent ||| tan	count=2
arg	stdout a file stream ||| stream	count=7
module	blocks ||| thread	count=2
function	to fsetpos but ||| fsetpos 64	count=2
module	[module_1] of wide ||| [module_1] [module_2]	count=10
module	[module] sends ||| [module]	count=1
module	functions ||| math	count=1
function	to the mmap ||| mmap	count=1
rep	this function [function_arg_2] ||| [module_1] [function_arg_2]	count=78
arg	buf with ||| neg buf	count=1
function	reallocate *argz modifying ||| argz delete	count=1
module	[module] roughly ||| [module]	count=1
arg	16-bit ||| s c16 ps	count=1
arg	[arg_1] to mode ||| [arg_2] [arg_1]	count=1
module	with this ||| core	count=1
function_arg	last occurrence [arg_2] ||| [arg_2] [function_1]	count=1
function	aio_error ||| error 64	count=2
function	setrlimit but its second ||| setrlimit 64	count=1
function	a timeout ||| timedwait	count=1
function	fcvt ||| qfcvt	count=1
arg	a form [arg] format ||| [arg] maxsize	count=1
arg	x is given ||| x	count=1
arg	the attributes of ||| filedes attributes	count=2
arg	[arg_1] file ||| [arg_1] [arg_2]	count=4
function	but its second ||| 64	count=2
arg	list pointer ap ||| ap	count=1
function	default ||| default	count=2
arg	addr and [arg_2] ||| core getpeername socket [arg_1] [arg_2]	count=1
arg	was added as ||| pattern flags	count=1
arg	in the character ||| s	count=1
arg	the variable pointed to [arg_1] [arg_2] ||| hasmntopt [arg_1] [arg_2]	count=1
function	copies ||| strcpy	count=2
function	the printf template string ||| printf format	count=1
function	reallocating *argz ||| argz insert	count=1
function	but it ||| 64	count=3
function	getgrent ||| getgrent	count=1
function	is similar to ||| 64	count=5
arg	in [arg_2] ||| printf size info info [arg_1] [arg_2]	count=4
module	error-reporting function error this ||| core	count=1
arg	user entry from ||| result_buf buffer buflen	count=1
function	entry in ||| envz entry	count=1
arg	a message describing the ||| message	count=1
function	copies ||| wcscpy	count=2
arg	stream ||| wc stream	count=1
arg	c to the growing ||| c	count=1
arg	c is ||| c	count=1
function	memalign function ||| posix memalign	count=1
arg	name [arg_2] ||| [arg_2] [arg_1]	count=1
arg	wide string ||| dst src len	count=2
arg	[arg_1] buffer ||| [arg_1] [arg_2]	count=11
function	version of readdir which ||| readdir r	count=1
arg	of characters from ||| count	count=2
arg	aio_suspend with ||| list[] nent timeout	count=1
arg	the arguments in argv ||| argv flags	count=1
arg	fmt ||| fmt	count=1
arg	of a struct rlimit ||| resource rlp	count=2
arg	stored in the character ||| s template	count=1
arg	for socket socket ||| socket	count=1
arg	a specific location in ||| offset origin	count=2
function_arg	[function_1] file ||| [function_1] [arg_2] position	count=5
module	[module] prepares ||| [module]	count=1
arg	display a ||| label severity text action tag	count=1
function	to asctime ||| asctime r	count=1
function_arg	printing character ||| wprint ch	count=2
rep	[module_1] blank character ||| [module_1] is [function_arg_2]	count=1
module	the common mathematical functions ||| numeric math	count=1
arg	[arg_1] argtypes ||| [arg_2] [arg_1]	count=1
function	create ||| key create	count=1
arg	the variable pointed to [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
module	[module] waits until ||| [module]	count=1
function	is similar to nftw ||| nftw	count=1
arg	of the floating-point ||| x y	count=2
arg	offset parameter is ||| offset	count=2
arg	that ||| ws count	count=1
arg	a buffer [arg_2] ||| [arg_1] format [arg_2]	count=2
arg	is name ||| name result_buf buffer	count=2
function	a call to realpath ||| realpath	count=1
arg	data from [arg] and ||| [arg] vector	count=1
arg	characters from ||| src count	count=2
function_arg	[function_1] buf_len ||| [arg_2] [function_1]	count=1
function	pointer [function] returns ||| tmpnam [function]	count=1
function	that instead of taking ||| vwprintf	count=1
arg	name ||| name	count=18
arg	string given ||| dst src	count=2
module	just like [module] but ||| [module]	count=1
arg	the network [arg] ||| net [arg]	count=1
arg	compares two strings ||| lhs rhs	count=2
arg	was added as ||| flags	count=1
function	similar to the memalign ||| posix memalign	count=1
module	this ||| core	count=27
arg	in obstack obstack-ptr ||| obstack-ptr	count=2
arg	key ||| key	count=3
function	instead of taking ||| vwprintf	count=1
function	scheduling policy if ||| sched	count=1
function	the getutent ||| getutent	count=1
function	long ||| getopt long	count=1
function_arg	realpath [arg_2] ||| [arg_2] [function_1]	count=1
arg	old to the ||| old	count=1
arg	contents of the ||| namelist dirent **)	count=1
function_arg	host address [arg_2] ||| [function_1] [arg_2]	count=4
arg	of [arg] ||| fd offset [arg]	count=3
function	[function] but it ||| secure [function]	count=1
module	value guaranteed to ||| numeric math	count=1
arg	addr to addr ||| addr	count=1
arg	the offset ||| offset	count=2
function	getrlimit [function_2] ||| [function_2] [function_1]	count=4
arg	but [arg] of ||| [arg]	count=1
function_arg	returns true [function_1] [arg_2] ||| [function_1] ascii [arg_2]	count=2
arg	group database [arg_2] ||| [arg_2] [arg_1]	count=1
function	destroys a ||| destroy	count=1
arg	supplementary group ids ||| count groups	count=1
module	calling this function forces ||| core	count=1
module	a certain ||| string	count=7
function_arg	given [arg_2] ||| [arg_2] [function_1]	count=1
module	a copy [module_2] ||| [module_1] [module_2]	count=4
function	equivalent to hsearch ||| hsearch r	count=1
function	alphanumeric ||| walnum	count=2
arg	by the argv ||| argv options	count=1
function	similar to jrand48 ||| jrand48 r	count=1
arg	[arg_1] [arg_2] output stream stderr see ||| psignal [arg_2] [arg_1]	count=1
arg	the opentype argument that ||| opentype	count=1
arg	[arg_1] is ||| [arg_2] [arg_1]	count=10
arg	*envz_len with [arg] and value ||| envz envz_len [arg]	count=1
arg	characters found in another ||| dest	count=1
function	bytes currently in ||| _ fpending	count=1
arg	adding buf_len to ||| buf_len	count=1
module	[module] will ||| [module]	count=1
function	64-bit file offsets ||| posix fallocate	count=1
function	a timeout ||| cnd timedwait	count=1
arg	the file named by ||| argv	count=1
arg	and domainp ||| domainp	count=1
module	common ||| error	count=1
module	computes ||| numeric math	count=23
arg	struct dirent64 ||| dir namelist dirent64	count=1
arg	[arg] standard ||| [arg]	count=1
function_arg	[function_1] c is ||| [function_1] ascii [arg_2]	count=1
arg	[arg] strcoll function ||| [arg]	count=1
arg	in buffer with ||| param[7] buffer	count=1
function	long options with ||| long	count=1
arg	bytes starting at buffer ||| buffer	count=1
function	[function_1] the pwrite ||| [function_2] [function_1]	count=2
module	this function does ||| core	count=1
arg	32-bit ||| c32	count=1
arg	string given state ||| dst src len ps	count=2
module	and typical [module] it to ||| [module]	count=1
function	structure of type lldiv_t ||| lldiv	count=1
function	root [function] ||| [function]	count=1
arg	opentype argument ||| size opentype	count=1
arg	*nmemb elements [arg] pointed ||| key base nmemb [arg]	count=1
module	mathematical functions ||| numeric math	count=1
arg	the name name ||| name value	count=1
function	the fputc ||| fputc	count=1
arg	byte delim ||| str delim	count=1
arg	restores the current floating ||| envp	count=1
function	getrlimit but its second ||| getrlimit 64	count=1
arg	[arg_1] [arg_2] as a new process ||| execv [arg_2] [arg_1]	count=3
function	pass long [function_2] ||| [function_1] [function_2]	count=2
function	reads a value ||| atomic load	count=1
function	digit ||| wdigit	count=2
function_arg	[function_1] the buffer ||| [arg_2] [function_1]	count=2
arg	ndigit is ||| value ndigit	count=2
arg	no more [arg] ||| to from c [arg]	count=1
function	setrlimit but its ||| setrlimit 64	count=2
module	blocks on ||| thread	count=2
function	to medium high value ||| ppr med high	count=1
arg	against [arg] considering ||| s1 [arg]	count=1
arg	pointers hostp userp ||| hostp userp	count=2
arg	[arg_1] and length-ptr ||| [arg_2] [arg_1]	count=4
module	this function opens and ||| core	count=1
arg	to close a stream ||| stream	count=1
arg	[arg_1] options ||| [arg_2] [arg_1]	count=2
arg	complex number ||| z	count=1
arg	uint32_t integer [arg] from ||| [arg]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] stream [arg_2]	count=12
arg	hostp userp [arg_2] ||| [arg_2] [arg_1]	count=3
arg	as [arg] ||| [arg]	count=1
arg	value if [arg] is ||| [arg]	count=1
arg	the netgroup netgroup ||| netgroup	count=1
function	function except that it ||| r	count=1
arg	is gid ||| gid result_buf buffer	count=1
arg	type struct dirent64 ||| dir namelist dirent64	count=1
function	environment to that described ||| fesetenv	count=1
module	the next variadic function ||| variadic	count=2
function	set the ||| set	count=2
function	pread ||| pread 64	count=2
function	about the network named ||| getnetbyname	count=1
function_arg	[function_1] [arg_2] ||| [function_1] lhs rhs [arg_2]	count=6
arg	*termios-p ||| termios-p	count=1
arg	buf_len to [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the argp parser argp ||| argp	count=1
function	the process’ claim on ||| sched yield	count=1
arg	specified lc_ctype category ||| desc	count=2
module	evaluates to ||| numeric math	count=1
function	swaps a value with ||| atomic exchange	count=1
arg	func ||| func	count=1
arg	string to wide string ||| dst src len	count=2
arg	dirstream ||| dirstream	count=1
arg	of buflen ||| buflen	count=1
arg	buffer which describes the ||| xsubi[3] buffer result	count=1
function	an interface ||| if	count=1
module	[module] allows ||| [module]	count=2
function_arg	[function_1] size ||| [arg_2] [function_1]	count=2
function_arg	changes the [arg_2] ||| [arg_2] [function_1]	count=3
arg	character ||| ch count destsz	count=1
arg	supplementary group ||| group	count=1
arg	by the how argument ||| how	count=1
module	[module] socket ||| [module]	count=1
arg	to wide string ||| dst src len	count=2
arg	region of [arg] ||| fd offset [arg]	count=3
function	[function_1] in ||| [function_1] [function_2]	count=8
rep	[module_1] [function_arg_2] ||| [module_1] wide [function_arg_2]	count=6
function_arg	[function_1] n ||| [arg_2] [function_1]	count=6
module	associated with this ||| core	count=1
arg	by [arg] ||| [arg]	count=8
function	the scandir ||| scandir	count=1
arg	an offset [arg] from the ||| [arg]	count=1
function	set the program priority ||| ppc set	count=1
arg	resource resource in *rlp ||| resource rlp	count=1
arg	buffer ||| xsubi[3] buffer	count=1
function	accommodate it ||| argz append	count=1
arg	[arg_1] byte offset ||| [arg_2] [arg_1]	count=1
module	next multibyte character given ||| string multibyte	count=1
function	accommodate ||| argz append	count=1
module	floating-point environment ||| numeric fenv	count=2
arg	floating-point values ||| x y	count=1
arg	copies ||| dest src	count=2
arg	that the offset ||| offset	count=1
function	a dependency chain ||| kill dependency	count=1
arg	form [arg] format string ||| [arg] maxsize	count=1
function_arg	its [arg_2] ||| [function_1] stream buffer mode [arg_2]	count=6
module	value guaranteed to overflow ||| math	count=1
function	like the setstate ||| setstate r	count=1
function	the number of processors ||| nprocs	count=1
arg	userp [arg_2] ||| [arg_2] [arg_1]	count=3
arg	to the specified lc_ctype ||| desc	count=4
arg	that the size argument ||| s size template	count=1
arg	optname ||| optname optval	count=1
arg	optname at level level ||| level optname optval optlen-ptr	count=1
arg	scheduling policy for ||| policy	count=1
function_arg	certain amount [arg_2] ||| [function_1] [arg_2]	count=4
function	network named ||| getnetbyname	count=1
arg	argument [arg] ||| [arg]	count=3
arg	takes as [arg] ||| [arg]	count=1
arg	buflen ||| buflen	count=1
function	the fflush ||| fflush	count=1
arg	and [arg] are byte ||| [arg] needle	count=1
function	highest absolute priority ||| sched get priority	count=1
arg	to ‘sprintf(buf "%*g", ndigit ||| ndigit	count=1
arg	maxlen contains a null ||| maxlen	count=1
function_arg	[function_1] [arg_2] two strings ||| [function_1] [arg_2]	count=2
arg	of filename [arg_2] ||| [arg_2] [arg_1]	count=1
function	adding the value ||| ptr grow	count=1
arg	of boundary ||| boundary	count=1
function	the printf template string ||| printf	count=1
arg	for [arg] for the ||| [arg]	count=1
function	readdir ||| readdir	count=2
arg	from stream ||| stream	count=2
module	looks up a character ||| string	count=3
arg	the group ||| group	count=1
function	without completely ||| quick	count=1
arg	16-bit wide character to ||| s c16 ps	count=1
arg	user on [arg] has logged ||| [arg]	count=1
arg	adding buf_len [arg_2] ||| [arg_2] buf [arg_1]	count=1
module	[module] functionally ||| [module]	count=1
arg	[arg_1] file stream ||| [arg_2] buffer mode [arg_1]	count=2
function	quiet nan ||| nan	count=2
function_arg	[function_1] adding buf_len ||| [function_1] argz argz_len buf [arg_2]	count=2
arg	a mutex ||| mutex	count=3
arg	a condition variable with ||| cond	count=1
function	getenv ||| getenv	count=1
function	unblocks all threads blocked ||| broadcast	count=1
function	the same as ecvt ||| ecvt r	count=1
module	the given [module_2] ||| [module_2] [module_1]	count=10
function_arg	[function_1] the attributes ||| [arg_2] [function_1]	count=2
function	closes the protocols database ||| endprotoent	count=1
function	of type ldiv_t ||| ldiv	count=1
arg	of type type ||| type	count=1
arg	removes any memory maps [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
arg	16-bit wide ||| s c16 ps	count=1
function_arg	[function_1] referenced by ||| [arg_2] [function_1]	count=2
function	equivalent to fcvt except ||| qfcvt	count=1
module	number by ||| numeric	count=1
function	[function] takes parameters ||| readdir64 [function]	count=3
function	pass long options ||| long	count=1
arg	was added ||| flags	count=1
function_arg	given [arg_2] ||| [function_1] [arg_2]	count=1
function	of readdir ||| readdir	count=1
arg	x ||| x	count=3
function	getutent ||| getutent r	count=2
module	the value guaranteed ||| numeric	count=1
module	a wide ||| string	count=1
module	a variable number of ||| io	count=2
function	long [function_2] ||| [function_1] [function_2]	count=2
arg	storage [arg] points to ||| [arg]	count=1
arg	id is gid ||| gid result_buf buffer	count=1
module	one [module_2] ||| [module_1] [module_2]	count=2
function	function [function] ||| [function]	count=1
function	reallocating *argz ||| insert	count=1
module	mathematical ||| numeric	count=1
function	punctuation ||| punct	count=1
arg	updating *argz and *argz_len ||| argz argz_len	count=1
function	handling mechanism used by ||| errhandling	count=1
module	one [module] to ||| [module]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] filedes [arg_2]	count=6
function	to the feof ||| feof	count=1
arg	by htab to contain ||| htab	count=1
arg	the network [arg] with number ||| net [arg]	count=1
arg	the signal signum ||| signum	count=4
function_arg	[function_1] name from ||| [function_1] [arg_2]	count=2
function	the printf template ||| printf	count=1
function	initializes ||| init	count=1
arg	[arg_1] length len ||| [arg_1] [arg_2]	count=8
arg	size maxlen contains ||| s maxlen	count=1
function	releases the internal ||| funlockfile	count=1
arg	old-action argument is used ||| old-action	count=1
arg	buffer which describes the ||| buffer result	count=1
function	in that ||| r	count=2
arg	message ||| message	count=1
function	[function_1] only ‘-’ ||| [function_1] [function_2]	count=2
module	function returns a ||| core	count=1
arg	message describing [arg] ||| [arg]	count=1
arg	address addr ||| addr length	count=1
function_arg	writes up [arg_2] ||| [arg_2] [function_1]	count=6
function	to aio_return with ||| return 64	count=1
arg	entry from [arg] and returns ||| [arg]	count=1
module	[module] converts ||| [module]	count=5
arg	a string ||| string	count=1
function	reads the next entry ||| readdir	count=1
arg	32-bit wide ||| c32	count=1
module	[module] takes ||| [module]	count=2
function	[function] updating *envz ||| [function]	count=3
arg	by addr [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] 64 [arg_2]	count=1
arg	[arg] another given ||| [arg]	count=6
function	of bytes ||| mblen	count=1
arg	found in another ||| dest	count=2
arg	sets [arg] ids ||| user [arg]	count=1
arg	old ||| old	count=2
arg	[arg_1] formatted wide ||| [arg_2] [arg_1]	count=4
function	accommodate it ||| append	count=1
function	[function] them ||| [function]	count=1
arg	if usage is a ||| usage	count=1
arg	file stream [arg_2] ||| [arg_1] [arg_2]	count=17
module	this function returns a ||| core	count=5
arg	state to stream ||| stream	count=1
arg	the next token in ||| delim strmax ptr	count=2
arg	netgroup netgroup ||| netgroup	count=1
arg	old-action argument ||| old-action	count=1
arg	of size bytes ||| size	count=2
function	round robin [function] ||| [function] rr get	count=3
arg	signp instead of ||| x signp	count=1
function	to jrand48 ||| jrand48	count=1
function	of type struct aiocb64 ||| aio	count=3
arg	substring ||| substr	count=2
function	timeout ||| timedwait	count=1
arg	a wide [arg] to ||| [arg]	count=1
arg	port port [arg_2] ||| [arg_1] [arg_2]	count=1
arg	the specified lc_ctype ||| desc	count=4
arg	a signal handler ||| handler	count=1
arg	the triple specified by ||| host user domain	count=1
rep	[module_1] hexadecimal character ||| [module_1] is [function_arg_2]	count=1
arg	the storage [arg] ||| [arg]	count=1
arg	level level ||| level	count=1
module	[module] initializes the ||| [module]	count=1
function	host address ||| addr	count=1
arg	to by htab to ||| htab	count=1
arg	the conversion [arg_2] ||| [arg_2] nwc len [arg_1]	count=1
module	[module] opens a ||| [module]	count=1
arg	[arg_1] and length-ptr ||| core getpeername socket [arg_1] [arg_2]	count=4
arg	is ||| c	count=1
function	lstat [function_2] ||| [function_2] [function_1]	count=4
arg	[arg] pointed to ||| key base nmemb [arg]	count=2
arg	the buffer and ||| buffer mode	count=4
arg	[arg_1] to *argz_len ||| [arg_2] buf [arg_1]	count=4
module	in the ||| wide	count=3
arg	specifies communication [arg] which ||| namespace [arg]	count=1
arg	file [arg] to ||| stream [arg]	count=2
module	computes common ||| numeric math	count=4
function	but the ||| 64	count=1
module	the function ||| core	count=1
arg	filename to length ||| filename length	count=3
arg	string in [arg] whether ||| [arg]	count=1
arg	the mantissa [arg] ||| [arg]	count=1
function_arg	an uppercase [arg_2] ||| [function_1] [arg_2]	count=3
module	the [module] name ||| [module]	count=1
module	allocate a ||| experimental dynamic	count=2
arg	amount of wide characters ||| count	count=2
arg	level level [arg_2] ||| [arg_2] [arg_1]	count=2
arg	[arg_1] [arg_2] one ||| dest [arg_2] [arg_1]	count=8
arg	the buffer [arg_2] ||| [arg_1] [arg_2]	count=2
arg	prints [arg] ||| signum [arg]	count=3
arg	domain domainname ||| domainname	count=1
module	to overflow a ||| numeric	count=1
arg	the resolved parameter ||| name resolved	count=1
function	breaks a dependency chain ||| kill dependency	count=1
arg	the function does globbing ||| error-code) vector-ptr	count=1
arg	filename [arg_2] ||| chmod [arg_1] [arg_2]	count=1
arg	of an atomic object ||| obj desired order	count=1
arg	the resolved parameter is ||| name resolved	count=1
function	natural logarithm ||| clog	count=1
function	to medium ||| ppr med	count=1
module	ldiv_t ||| numeric math	count=1
arg	buf ||| value ndigit decpt neg buf	count=1
module	lgamma ||| numeric math	count=1
function	equivalent to the fread ||| fread	count=1
function	accept a ||| accept	count=1
module	except that ||| io	count=1
module	this is ||| core	count=16
arg	maps from [arg] ||| [arg]	count=1
function_arg	[function_1] in *rlp ||| [arg_2] [function_1]	count=1
arg	to wide string ||| src len dstsz	count=2
function	swaps a value with ||| exchange	count=1
module	computes a number raised ||| numeric math	count=2
arg	"%*g", ndigit ||| ndigit	count=1
function	is like wprintf ||| swprintf	count=1
function	the number of ||| count	count=1
arg	size bytes to ||| size	count=1
arg	x in *cos where ||| sinx cosx	count=1
module	number ||| numeric	count=15
arg	state ||| ps	count=7
arg	entry to the file ||| stream mnt	count=1
module	[module] modifies the ||| [module]	count=1
function	to stat but it ||| stat 64	count=1
arg	uid ||| uid	count=1
arg	maxlen contains a null ||| s maxlen	count=1
arg	of the netgroup netgroup ||| netgroup	count=1
function	aio_return with ||| return	count=1
module	converts a wide ||| string wide	count=12
function	beginning in ||| rewind	count=2
function_arg	signed remainder [arg_2] ||| [arg_2] [function_1]	count=8
function	fsetpos but the ||| fsetpos 64	count=2
module	transform ||| string byte	count=2
function	checks if a character ||| is	count=3
arg	[arg_1] [arg_2] in the signgam global ||| [arg_2] [arg_1]	count=3
function	but ||| r	count=1
arg	[arg] while ||| [arg] action	count=3
module	the [module] ||| [module]	count=2
function	high ||| high	count=1
arg	name name ||| name	count=2
arg	by ||| argv	count=1
module	the next multibyte character ||| string multibyte	count=1
function	dependency chain ||| dependency	count=1
arg	string to wide string ||| dst src	count=2
arg	than [arg] null pointer ||| [arg]	count=1
function	fma function generally ||| fma	count=2
module	this is a ||| core	count=3
arg	the next user entry ||| result_buf buffer	count=1
function_arg	[function_1] [arg_2] ||| [function_1] netof [arg_2]	count=3
arg	to a buffer ||| buffer result	count=1
arg	handler ||| handler	count=1
function	[function_1] only ||| [function_2] [function_1]	count=2
arg	newuid ||| newuid	count=1
function	converts the ipv4 internet ||| inet	count=3
arg	catalogs for [arg] for ||| [arg]	count=1
arg	file descriptor [arg_2] ||| [arg_2] [arg_1]	count=3
function	to freopen ||| freopen	count=1
function_arg	[function_1] [arg_2] ||| core [function_1] create key [arg_2]	count=1
arg	gid ||| gid result_buf buffer buflen result	count=1
arg	sets the current limit ||| limit	count=1
module	this function checks ||| core	count=8
module	this function tests whether ||| core	count=1
function_arg	custom wide [arg_2] ||| [arg_2] [function_1]	count=2
arg	buffer describing the ||| buffer result	count=1
module	[module] copies the ||| [module]	count=1
function	the fma function generally ||| fma	count=2
module	byte string ||| string byte	count=1
arg	size for a ||| size	count=2
function	readdir ||| readdir 64	count=2
arg	argc arguments ||| argc	count=1
function	*argz to accommodate ||| append	count=1
arg	character c ||| c	count=1
function	until locks a ||| lock	count=1
function	the service named ||| getservbyname	count=1
arg	instead ||| template	count=1
function	the entry in ||| envz entry	count=1
function	returns the ||| get	count=2
function	similar to getgrnam ||| getgrnam	count=1
arg	[arg_1] filename ||| execv [arg_2] [arg_1]	count=4
module	this function determines whether ||| core	count=2
arg	this function [arg] ||| data [arg]	count=3
arg	character [arg] to ||| [arg]	count=2
function	of the gamma ||| lgamma	count=1
function	to custom wide ||| wcsftime	count=2
arg	character to [arg_2] ||| [arg_2] [arg_1]	count=3
function	[function_1] but the ||| [function_1] [function_2]	count=4
function_arg	sets [arg_2] ||| [function_1] stream [arg_2]	count=6
module	two wide strings ||| wide	count=2
function	last occurrence of ||| wcsrchr	count=1
module	this function writes ||| core	count=1
arg	*nmemb elements [arg] ||| key base nmemb [arg]	count=1
function	struct aiocb64 ||| aio fsync	count=1
arg	16-bit wide ||| c16 ps	count=1
function_arg	[function_1] file stream ||| [function_1] [arg_2]	count=1
arg	string ||| dst src len	count=2
arg	for you [arg] open see ||| [arg]	count=1
arg	wide characters from ||| src count	count=2
arg	buffer [arg_2] ||| [arg_2] [arg_1]	count=16
arg	uint16_t integer [arg] from network ||| [arg]	count=1
module	this function adds each ||| core	count=1
arg	of the file filename ||| filename	count=1
function	getgrnam ||| getgrnam	count=1
arg	in [arg] bytes ||| pid [arg]	count=1
rep	computes [function_arg_2] ||| [module_1] [function_arg_2]	count=20
function	stores a value in ||| store	count=1
arg	from buffer ||| buffer	count=1
function_arg	sets [arg_2] ||| [function_1] [arg_2]	count=5
arg	the contents ||| namelist dirent **)	count=1
arg	conversion ||| ps	count=1
function	fputs ||| fputs	count=1
function	a help ||| help	count=1
arg	buflen bytes [arg_2] ||| [arg_2] [arg_1]	count=2
module	the value ||| numeric	count=1
arg	offset [arg] from ||| [arg]	count=1
arg	name of the system ||| name length	count=2
arg	opentype argument that reads ||| size opentype	count=1
arg	needle and [arg] are byte ||| [arg] needle	count=1
function_arg	[function_1] [arg_2] ||| [function_1] argz argz_len buf [arg_2]	count=16
module	[module] works like ||| [module]	count=1
function	getgrnam in that ||| getgrnam r	count=2
function_arg	assigns an [arg_2] ||| [function_1] socket [arg_2]	count=3
function	[function_1] of processors ||| [function_2] [function_1]	count=1
module	[module] stores information ||| [module]	count=1
arg	hostp userp and ||| hostp userp	count=2
function	setstate ||| setstate	count=1
arg	adding buf_len ||| buf_len	count=1
function	number of processors ||| nprocs	count=1
arg	filename to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	maxlen contains a ||| s maxlen	count=1
arg	userp and domainp point ||| userp domainp	count=1
function	file offsets on all ||| posix fallocate	count=1
function	usage ||| usage	count=1
function_arg	an lowercase [arg_2] ||| [function_1] [arg_2]	count=1
arg	string [arg] into a ||| [arg]	count=1
function	object to custom wide ||| wcsftime	count=2
function	the last occurrence ||| wcsrchr	count=1
function	adding ||| obstack ptr grow	count=2
function	object in [function_2] ||| [function_1] [function_2]	count=1
arg	aio_fsync ||| op	count=1
arg	to wide string ||| src len	count=4
module	except that the output ||| io	count=1
arg	the groups user ||| user group groups	count=1
function	[function] placing ||| [function]	count=1
function	getpwnam in that ||| getpwnam r	count=2
function	executing processor are released ||| _ ppc	count=2
arg	buf with length len ||| filedes buf len	count=2
function	finds the first occurrence ||| wcschr	count=1
arg	using protocol proto ||| proto	count=2
function	fseeko ||| fseeko	count=1
module	computes square root ||| numeric	count=1
arg	[arg_1] integer value ||| [arg_2] [arg_1]	count=9
arg	file filename to owner ||| filename	count=1
arg	pointer buffer ||| buffer	count=1
arg	size bytes into to ||| size	count=1
function_arg	[function_1] of filename ||| [arg_2] [function_1]	count=1
function	but its second parameter ||| 64	count=2
function	to the ttyname ||| ttyname	count=1
arg	stored in the character ||| s	count=1
function	calling mcheck tells malloc ||| mcheck	count=1
module	functions ||| error	count=1
function	to the getutent ||| getutent	count=1
arg	[arg] as ||| [arg]	count=3
function_arg	network named [arg_2] ||| [arg_2] [function_1]	count=1
arg	host ||| result h_errnop	count=2
function	to fseeko ||| fseeko	count=1
function_arg	[function_1] filename to ||| [function_1] [arg_2]	count=1
arg	buffer for ||| buffer	count=2
function_arg	[function_1] size for ||| [function_1] stream buffer mode [arg_2]	count=2
function	getgrnam [function_2] ||| [function_2] [function_1]	count=4
arg	range of ||| count size	count=1
function	[function_1] processors ||| [function_1] [function_2]	count=1
function	obtains the ||| current	count=1
arg	stream ||| stream result_buf buffer buflen	count=1
arg	the attributes of a ||| filedes attributes	count=2
module	this function sets ||| core	count=6
arg	given state ||| ps dstsz	count=4
module	this prints the program ||| core	count=1
function	acquires ||| flockfile	count=1
arg	length argc using the ||| argc	count=1
arg	resolved parameter is ||| resolved	count=1
function	options with only ‘-’ ||| only	count=1
arg	specified by [arg_2] ||| [arg_2] [arg_1]	count=2
function	alphanumeric ||| alnum	count=1
function	vprintf ||| vprintf	count=1
arg	information about the host ||| h_errnop	count=2
arg	buf with ||| buf	count=1
arg	offset parameter is ||| stream offset whence	count=1
function	arc cosine ||| cacos	count=1
function	[function] function ||| [function] at	count=2
function	quiet nan of ||| nan	count=2
arg	prints [arg_2] ||| [arg_1] [arg_2]	count=25
arg	if [arg] is ||| block [arg]	count=1
arg	[arg_1] length argc ||| [arg_2] [arg_1]	count=10
arg	with at most ndigit ||| ndigit decpt neg	count=1
arg	16-bit wide character to ||| s c16	count=1
function	to the beginning in ||| rewind	count=2
function	any ||| wcspbrk	count=1
module	[module] a ||| [module]	count=5
arg	by filename ||| filename argv	count=1
arg	[arg] just ||| [arg]	count=3
module	this is like ||| core	count=1
module	[module] one ||| [module]	count=1
module	this is a simplified ||| core	count=1
arg	file stream or ||| stream	count=12
arg	null-terminated [arg] ||| [arg]	count=1
function	readdir ||| readdir r	count=2
function	its ||| setvbuf	count=2
function	the highest absolute priority ||| get priority	count=1
function	to medium [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] size for ||| [arg_2] [function_1]	count=2
arg	name is name ||| name	count=4
function	gamma function ||| lgamma	count=1
arg	of wide characters from ||| src count destsz	count=2
function	offsets on ||| posix fallocate 64	count=1
function	create a thread-specific ||| key create	count=1
arg	most ndigit ||| ndigit decpt	count=1
arg	filename to mode ||| filename mode	count=1
module	this function is used ||| core	count=6
arg	tptr to ||| tptr	count=2
module	converts a ||| string	count=13
function	allowed to change its ||| setegid	count=1
function_arg	[function_1] another ||| [function_1] [arg_2]	count=4
function_arg	destroys [arg_2] ||| [function_1] [arg_2]	count=1
arg	wide string given state ||| src len ps dstsz	count=2
function_arg	and updates [arg_2] ||| [arg_2] [function_1]	count=1
arg	the option opt ||| opt	count=1
arg	the offset parameter ||| stream offset	count=1
function	mrand48 ||| mrand48	count=1
arg	addr and length-ptr ||| addr length-ptr	count=1
arg	lock [arg] ||| [arg]	count=2
arg	32-bit wide character ||| s c32	count=1
arg	restores the ||| envp	count=1
function	jrand48 ||| jrand48 r	count=2
arg	name is name ||| name result_buf buffer	count=2
arg	at buf with ||| filedes buf	count=4
arg	that ||| buf	count=1
arg	cpusetsize ||| cpusetsize	count=1
function	transform a string so ||| strxfrm	count=2
arg	delim ||| str delim	count=1
arg	stream stream is ||| stream	count=1
arg	to wide string given ||| dst src	count=2
function	fma function generally executes ||| fma	count=2
function	to aio_error ||| error	count=1
arg	a buffer describing ||| buffer result	count=1
module	returns a ||| core	count=1
function	output ||| fprintf	count=1
arg	buf_len [arg_2] ||| [arg_2] buf [arg_1]	count=1
function_arg	an uppercase character ||| wupper ch	count=1
module	evaluates to a ||| math	count=2
function	bytes ||| size	count=1
arg	display a message ||| label severity text action tag	count=1
arg	buffer with ||| param[7] buffer	count=1
arg	the next token in ||| delim ptr strmax	count=1
arg	similar to aio_fsync ||| op	count=1
rep	[module_1] hexadecimal character ||| [module_1] [function_arg_2]	count=1
function_arg	writes up [arg_2] ||| [function_1] filedes [arg_2]	count=3
function	to aio_return with ||| return	count=1
arg	[arg_1] file ||| [arg_2] [arg_1]	count=8
function	long options [function_2] ||| [function_1] [function_2]	count=3
function	this is like wprintf ||| swprintf	count=1
arg	as [arg] handle previously ||| [arg]	count=1
arg	attributes of ||| filedes attributes	count=2
module	[module] reads ||| [module]	count=5
function_arg	[function_1] the file ||| [function_1] [arg_2] position	count=5
function	cosine ||| ccos	count=2
arg	sorts a range ||| size	count=1
arg	to another ||| dest	count=1
function_arg	[function_1] [arg_2] ||| [function_1] aton [arg_2] addr	count=10
function	imaginary ||| imaginary	count=1
arg	initialized similarly to what ||| seedval	count=1
arg	file [arg] ||| stream [arg]	count=2
module	the ||| numeric math	count=5
module	to overflow a float ||| numeric	count=1
arg	the current limit ||| limit	count=1
function	strtoq ||| wcstoq	count=1
module	up a character ||| string	count=3
module	this function is a ||| core	count=2
arg	through the pointer buffer ||| buffer	count=1
function_arg	process’ [arg_2] ||| [arg_2] [function_1]	count=2
arg	uint32_t integer [arg] from host ||| [arg]	count=1
arg	string to ||| str	count=10
arg	from stream ||| stream result_buf	count=1
function	to the fread ||| fread	count=1
arg	[arg] and ||| argc [arg]	count=3
arg	16-bit wide character to ||| c16	count=1
arg	certain amount of characters ||| count destsz	count=1
function	struct in_addr that ||| aton	count=1
function	first occurrence of ||| wcschr	count=1
arg	[arg] period has ||| read-fds write-fds except-fds [arg]	count=3
arg	in buffer with ||| buffer	count=1
function	to accommodate ||| argz append	count=1
arg	next user entry ||| result_buf buffer buflen result	count=1
function	like the setstate ||| setstate	count=1
module	this is similar to ||| core	count=3
function	imaginary part ||| cimag	count=1
module	a wide character ||| string wide	count=12
function	readdir which performs ||| readdir r	count=1
module	this function determines the ||| core	count=1
module	one string to ||| string byte	count=2
arg	argtypes ||| argtypes	count=1
arg	finds [arg] ||| ptr ch [arg]	count=2
function	processors [function_2] ||| [function_2] [function_1]	count=1
function	to realpath ||| realpath	count=1
arg	attributes of a ||| attributes	count=2
arg	[arg_1] [arg_2] standard error output stream ||| [arg_2] [arg_1]	count=1
function	for vscanf ||| vsscanf	count=1
function	of taking ||| vwprintf	count=1
arg	characters [arg_2] ||| [arg_2] [arg_1]	count=2
arg	attr to ||| attr	count=1
arg	name from the standard ||| name	count=2
arg	the sign of ||| x	count=2
arg	the cpusetsize ||| cpusetsize	count=1
arg	the byte delim ||| str delim	count=1
arg	elements in ||| argz	count=1
arg	entry named name ||| name	count=1
arg	waitpid pid status-ptr ||| pid status-ptr	count=1
function	obtains ||| current	count=1
arg	by before ||| before entry	count=1
arg	converts ||| str_end	count=1
arg	prints [arg_1] [arg_2] error output stream stderr ||| [arg_2] [arg_1]	count=1
arg	offset parameter is of ||| stream offset	count=1
arg	format string fmt and ||| fmt	count=1
function	[function] referred ||| [function] state	count=1
arg	to a ||| buffer size count	count=2
arg	buffer which ||| buffer result	count=1
function	version of readdir which ||| readdir	count=1
function	calling thread ||| pthread key	count=1
function	*argz and updates ||| add	count=1
arg	prints [arg_1] [arg_2] error output stream stderr ||| psignal [arg_2] [arg_1]	count=1
function	medium high ||| ppr med high	count=2
function	range [1 2) ||| obstack chunk size	count=1
module	[module] used to ||| [module]	count=3
arg	size [arg_2] ||| [arg_2] [arg_1]	count=4
arg	specified by ||| s	count=1
module	wide character is ||| wide	count=7
arg	least [arg] ||| [arg]	count=1
arg	rather than [arg] null pointer ||| [arg]	count=1
function	destroys ||| destroy	count=1
arg	[arg] argument ||| [arg]	count=3
function	finds the last occurrence ||| wcsrchr	count=1
arg	to ||| to	count=1
module	wide string ||| string wide	count=3
arg	the optionp ||| optionp	count=1
function	readdir which ||| readdir r	count=1
function	the operating system configured ||| conf	count=1
arg	the resolved parameter ||| resolved	count=1
module	computes 2 raised ||| numeric	count=2
module	thread for the given ||| thread	count=1
function	64-bit file offsets ||| posix fallocate 64	count=1
function	to getgrnam [function_2] ||| [function_2] [function_1]	count=4
arg	in buffer [arg_2] ||| [arg_2] [arg_1]	count=4
arg	blocks using ||| blocks len	count=1
arg	compares [arg_1] [arg_2] considering them as holding ||| [arg_1] [arg_2]	count=1
arg	template ||| template n argtypes	count=1
arg	envp ||| envp	count=1
arg	return [arg] ||| info [arg]	count=3
arg	[arg_1] to *argz_len ||| [arg_2] [arg_1]	count=4
function	and updates ||| add	count=1
function	processors the ||| nprocs	count=1
rep	compares [module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=4
function	as for vscanf ||| vsscanf	count=1
arg	is similar to aio_fsync ||| op	count=1
arg	[arg] containing ||| [arg]	count=1
function	to be emptied ||| _ fpurge	count=1
module	this function is similar ||| core	count=31
function	equivalent to strnlen ||| wcsnlen	count=1
arg	the how argument ||| how	count=1
function_arg	unlocks [arg_2] ||| [function_1] [arg_2]	count=1
arg	offset parameter ||| stream offset	count=1
arg	supplementary group ids of ||| count groups	count=1
function	of 1 plus the ||| log1p	count=1
arg	of buflen bytes starting ||| buflen	count=1
function	printf ||| printf	count=1
function	local-address-within-network part [function_2] ||| [function_2] [function_1]	count=2
function	the error ||| error	count=1
function_arg	[function_1] filename ||| [function_1] [arg_2]	count=1
module	this function creates ||| core	count=4
arg	the specified lc_ctype category ||| desc	count=2
arg	pointed to by buffer ||| buffer	count=1
function	reallocating *argz and updating ||| argz insert	count=1
function	reads ||| load	count=1
function	the feof ||| feof	count=1
function	transform a ||| strxfrm	count=2
module	bitmask of ||| core	count=1
function	the gamma ||| lgamma	count=1
function_arg	the [function_1] [arg_2] ||| core [function_1] [arg_2]	count=1
function_arg	returns true [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
function	with a timeout ||| timedwait	count=1
arg	range of [arg_2] ||| [arg_1] [arg_2]	count=1
arg	buffer of buflen ||| buflen	count=1
function	priority ||| get priority	count=1
module	value ||| math	count=1
arg	[arg] was last ||| [arg]	count=3
function	create ||| create	count=1
module	this function inserts the ||| core	count=1
function_arg	the bessel function of [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
function	but it is ||| 64	count=2
arg	[arg_1] to length ||| [arg_1] [arg_2]	count=4
arg	scheduling policy for ||| pid policy	count=1
function	asctime but instead of ||| asctime	count=1
module	is ||| core	count=2
function	reallocating *argz and updating ||| insert	count=1
module	[module] entry in ||| [module]	count=1
module	is a 7-bit ||| string	count=1
function	the scheduling ||| sched	count=1
arg	information about the host ||| result h_errnop	count=2
function	string within ||| wcsstr	count=2
module	defines the ||| math	count=1
arg	hostp userp ||| hostp userp	count=2
function	is similar to jrand48 ||| jrand48	count=1
function	local type macro ||| local	count=1
arg	wide string ||| dst src	count=2
arg	the conversion [arg_2] ||| [arg_2] [arg_1]	count=1
arg	of characters of ||| count	count=2
arg	character [arg] to stdout ||| [arg]	count=2
function_arg	[function_1] [arg_2] used for positioning is ||| [function_1] [arg_2] position	count=5
arg	gets the file ||| stream	count=2
arg	[arg] scaled ||| [arg]	count=1
module	converts a wide character ||| string wide	count=2
arg	a string ||| str	count=2
function	tdelete ||| tdelete	count=1
function	offsets on all ||| posix fallocate	count=1
function	but its ||| 64	count=2
module	[module] tries to ||| [module]	count=1
arg	object ||| obj order	count=2
function	similar to lstat but ||| lstat 64	count=1
arg	conversion [arg_2] ||| [arg_2] [arg_1]	count=1
function	to setrlimit [function_2] ||| [function_1] [function_2]	count=4
function	returns a process’ ||| sched getparam	count=1
function_arg	[function_1] referenced by ||| core [function_1] create key [arg_2]	count=2
arg	from stream ||| stream result_buf buffer buflen	count=1
module	nearest [module] rounding ||| numeric [module]	count=1
module	a certain amount ||| string	count=7
module	this function tests ||| core	count=1
arg	user name is name ||| name	count=2
function	output to stdout a ||| fprintf	count=1
arg	more [arg] from ||| to from c [arg]	count=1
function	time ||| timespec	count=1
module	overflow a ||| numeric	count=1
module	a floating-point ||| numeric math	count=1
function	is similar to fsetpos ||| fsetpos	count=1
function	vector *argz and updates ||| argz add	count=1
function	of type struct aiocb64 ||| aio suspend	count=1
arg	the offset parameter is ||| stream offset whence	count=1
function	similar to lstat ||| lstat	count=1
arg	of wide characters from ||| src count	count=2
function	breaks a dependency chain ||| dependency	count=1
function	true [function] returns the ||| atomic flag test [function]	count=1
function_arg	accommodate it [arg_2] ||| [arg_2] [function_1]	count=3
function	to fseeko with the ||| fseeko	count=1
function_arg	[function_1] [arg_2] used for positioning is ||| [function_1] [arg_2]	count=5
arg	is uid ||| uid	count=1
module	if the given number ||| numeric math	count=1
module	[module] compares the ||| [module]	count=1
module	a copy of one ||| string	count=1
arg	about the action ||| action	count=1
module	copy of one wide ||| wide	count=1
arg	entry from the directory ||| dirstream	count=1
function_arg	imaginary part [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] to fseeko ||| [function_2] [function_1]	count=2
arg	the parameter a file ||| stream	count=1
function	to jrand48 ||| jrand48 r	count=1
function	stores ||| store	count=1
arg	string to an ||| str str_end	count=9
arg	process’s supplementary group ids ||| count groups	count=1
arg	specified by the how ||| how	count=1
arg	by the opentype argument ||| size opentype	count=1
arg	the file ||| stream	count=4
arg	of type struct dirent64 ||| namelist dirent64 **)	count=1
function	releases the ||| funlockfile	count=1
function	the readdir ||| readdir 64	count=1
function	realpath where ||| realpath	count=1
function_arg	[function_1] character ||| [function_1] [arg_2]	count=17
module	this function searches ||| core	count=1
arg	*envz_len with [arg] ||| envz envz_len [arg]	count=1
function	for every [function] that ||| [function]	count=1
arg	the opentype argument that ||| size opentype	count=1
module	[module_1] string ||| [module_1] [module_2]	count=4
arg	adding buf_len [arg_2] ||| [arg_2] [arg_1]	count=1
arg	descriptor filedes ||| filedes offset	count=1
function	vscanf ||| vsscanf	count=1
arg	for the region of [arg_1] [arg_2] the file for the ||| core posix fallocate [arg_2] [arg_1]	count=3
arg	stream ||| stream	count=34
function	stat ||| stat	count=1
arg	the file [arg] to ||| stream [arg]	count=2
arg	[arg_1] domainp ||| [arg_2] [arg_1]	count=5
function	every [function] that ||| [function]	count=1
arg	[arg] in ||| [arg]	count=2
arg	prints [arg_1] [arg_2] standard error output stream ||| psignal [arg_2] [arg_1]	count=1
arg	group pgid ||| pgid	count=1
arg	size for [arg_2] ||| [arg_2] buffer mode [arg_1]	count=2
arg	see running a ||| mode	count=1
arg	the owner of the ||| owner	count=1
module	narrow multibyte character string ||| multibyte	count=2
arg	userp and domainp ||| userp domainp	count=3
function	[function_1] with only ||| [function_2] [function_1]	count=3
arg	[arg] ids ||| user [arg]	count=3
arg	offset parameter is of ||| stream offset whence	count=1
arg	x is given in ||| x	count=1
function	[function] with ||| aio [function]	count=3
function	equivalent to the fgetws ||| fgetws	count=1
function	to getenv ||| getenv	count=1
module	creates a ||| thread	count=2
module	overflow ||| numeric math	count=1
function	number of bytes ||| mblen	count=1
arg	user entry ||| result_buf	count=1
arg	to length ||| length	count=1
arg	envz2 to envz as ||| envz2 envz2_len override	count=1
function	[function_1] aio_read ||| [function_2] [function_1]	count=2
module	[module] removes ||| [module]	count=1
function	the first occurrence of ||| wcschr	count=1
module	a ||| string multibyte	count=4
arg	for you [arg] open ||| [arg]	count=1
arg	the file position indicator ||| stream pos	count=2
arg	the mantissa [arg] scaled to ||| [arg]	count=1
arg	bytes offset to offset ||| offset	count=1
function	reentrant ||| r	count=1
arg	with [arg] and ||| envz envz_len [arg]	count=1
arg	of type struct dirent64 ||| dir namelist dirent64	count=1
module	a ||| math	count=10
arg	and the sign of ||| x y	count=2
arg	a buffer describing the ||| buffer result	count=1
arg	size bytes into the ||| size	count=1
function	the entry in ||| entry	count=1
function	creates a new process ||| fork	count=1
arg	range [arg_2] ||| [arg_2] [arg_1]	count=2
module	a certain amount of ||| string	count=7
arg	[arg_1] ndigit is ||| [arg_2] [arg_1]	count=8
function	entry in ||| entry	count=1
module	to overflow a float ||| math	count=1
arg	offset ||| offset whence	count=1
arg	to an [arg_2] ||| [arg_1] [arg_2]	count=3
arg	representation given state ||| ps	count=1
function	memalign ||| memalign	count=1
arg	type struct dirent64 ||| dir namelist dirent64 **)	count=1
function	transform ||| strxfrm	count=2
arg	buf ||| decpt neg buf	count=1
arg	c ||| c	count=2
function_arg	first occurrence [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	has finite value ||| finite arg	count=1
arg	that the size ||| size template	count=1
module	[module_1] string ||| [module_2] [module_1]	count=4
arg	user ||| result_buf buffer buflen result	count=1
function	the internet ||| inet	count=2
arg	envz2 to envz as ||| envz2	count=1
arg	in argv ||| argv flags	count=2
arg	socket ||| socket	count=1
arg	to an ||| str_end	count=3
module	the common mathematical ||| numeric math	count=1
arg	length of ||| strsz	count=3
module	[module_1] wide string ||| [module_1] [module_2]	count=6
arg	length bytes starting ||| length	count=1
function_arg	[function_1] boundary ||| [function_1] [arg_2]	count=2
arg	string ||| str count format	count=2
arg	value ||| value	count=1
arg	name ||| name result_buf buf buflen	count=1
arg	message describing [arg_2] ||| [arg_2] [arg_1]	count=2
arg	to wide string ||| dst src	count=2
function_arg	[function_1] absolute priority ||| [arg_2] [function_1]	count=6
function	true [function] returns ||| atomic flag test [function]	count=1
arg	16-bit wide character to ||| c16 ps	count=1
arg	the file descriptor filedes ||| filedes duration	count=1
function	and ||| and set	count=2
function	of snprintf with the ||| vsnprintf	count=1
arg	[arg_1] [arg_2] ||| fpathconf [arg_1] [arg_2]	count=3
function	set the program ||| set	count=1
arg	argtypes the information about ||| argtypes	count=1
module	error ||| error	count=3
rep	[module_1] printing character ||| [module_1] [function_arg_2]	count=2
module	the given [module_2] ||| [module_1] [module_2]	count=10
arg	option optname ||| optname optval optlen-ptr	count=1
arg	[arg_1] length ||| [arg_2] [arg_1]	count=6
function	[function_1] to freopen ||| [function_2] [function_1]	count=2
module	return [module] long int ||| [module]	count=2
function	thread-specific ||| delete	count=1
arg	arguments in argv of ||| argv flags	count=1
module	of one wide ||| wide	count=1
arg	a multiple of alignment ||| memptr alignment	count=1
function	seed48 ||| seed48	count=1
arg	in argv of length ||| argv flags	count=1
module	memory ||| memory	count=10
function	[function] function ||| [function]	count=3
module	one wide string ||| wide	count=1
function	cosine ||| cos	count=1
arg	the opentype argument ||| size opentype	count=1
arg	no more [arg] from ||| to from c [arg]	count=1
arg	that the offset ||| offset whence	count=1
function	srand48 ||| srand48	count=1
arg	on filedes ||| filedes	count=1
function	defines the error ||| math	count=1
module	file ||| io	count=2
arg	length ||| length	count=4
module	using [module] ||| [module]	count=1
arg	to a [arg_2] ||| [arg_2] [arg_1]	count=2
module	calendar ||| chrono	count=1
arg	netshort ||| netshort	count=1
arg	for all the groups ||| groups	count=1
module	of wide ||| wide	count=5
arg	is gid ||| gid	count=2
arg	arguments in argv ||| argv flags	count=2
function	adding the ||| obstack ptr grow	count=1
arg	to niceval [arg_2] ||| [arg_2] [arg_1]	count=1
function	possibly overlapping arrays ||| wmemmove	count=1
arg	pointers hostp [arg_2] ||| [arg_1] [arg_2]	count=6
function	reallocate ||| delete	count=1
module	common mathematical ||| math	count=1
module	this function voluntarily gives ||| core	count=1
arg	substring of ||| str substr	count=2
arg	file specified by filedes ||| filedes action	count=1
function	to pass long ||| long	count=1
arg	class ||| class	count=1
arg	the character c to ||| c	count=1
arg	mode ||| mode	count=2
function	processors the [function_2] ||| [function_2] [function_1]	count=1
function	equivalent to the getwchar ||| getwchar	count=1
function	adding the ||| ptr grow	count=1
arg	seedval parameter ||| seedval	count=1
function	installs the ||| sched setaffinity	count=1
arg	to by tptr to ||| tptr	count=1
arg	is similar to the ||| filedes buffer size offset	count=1
function_arg	an uppercase character ||| upper ch	count=2
function_arg	[function_1] name of ||| [arg_2] [function_1]	count=2
module	value ||| numeric	count=1
function	aio_return with the only ||| return	count=1
arg	buflen bytes starting ||| buflen	count=1
arg	the values in attr ||| attr	count=1
function	highest absolute priority ||| priority	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=66
function	fputws ||| fputws	count=1
arg	value of option optname ||| optname optval optlen-ptr	count=1
arg	another ||| dest src	count=8
function	lstat but ||| lstat 64	count=2
function	mutex ||| mtx init	count=1
arg	in the classification ||| classification	count=1
function	the network protocol named ||| getprotobyname	count=1
arg	at most ndigit ||| ndigit decpt neg	count=1
arg	the offset ||| stream offset	count=1
function_arg	realpath where [arg_2] ||| [function_1] [arg_2]	count=2
module	wide string ||| wide	count=5
function	common mathematical functions ||| math	count=2
function	aio_return with the only ||| return 64	count=1
module	call to [module] ||| [module]	count=1
arg	contents ||| namelist dirent **)	count=1
function	hyperbolic tangent ||| ctanh	count=1
arg	about the host ||| buflen result h_errnop	count=2
function_arg	[function_1] complex number ||| [arg_2] [function_1]	count=2
arg	occurrences [arg] ||| argz [arg]	count=1
arg	a [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function] host address ||| [function]	count=1
arg	with ||| filedes	count=2
arg	*envz_len with [arg] and ||| envz envz_len [arg]	count=1
arg	group id is gid ||| gid result_buf	count=1
function	and raises the ||| feupdateenv	count=2
module	[module_1] number by ||| [module_2] [module_1]	count=1
arg	envz2 to ||| envz2 envz2_len	count=1
function	process’ ||| sched setparam	count=1
module	this function speeds up ||| core	count=1
arg	blocks ||| blocks len mode	count=1
module	wide character according to ||| wide	count=2
function	of readdir ||| readdir r	count=1
arg	function [arg] ||| data [arg]	count=3
function_arg	calling thread [arg_2] ||| core [function_1] create [arg_2]	count=1
module	byte ||| byte	count=1
module	next variadic function argument ||| variadic	count=2
function	get the default ||| default	count=1
function	but like the ||| r	count=1
function	are [function] versions ||| setkey [function]	count=1
arg	string in another ||| dest src	count=1
arg	process id pid ||| pid	count=1
arg	process to newuid ||| newuid	count=1
arg	stream ||| count stream	count=3
module	defines the ||| numeric	count=1
arg	[arg] provided that ||| [arg]	count=3
module	this function frees all ||| core	count=1
arg	except that the size ||| size	count=1
function	and raises ||| feupdateenv	count=2
arg	value ||| arg	count=7
arg	group id is gid ||| gid result_buf buffer	count=1
module	is a 7-bit ||| string byte	count=1
arg	from [arg] and scatters ||| [arg] vector	count=1
function	dependency chain for ||| dependency	count=1
function	[function_1] high ||| [function_2] [function_1]	count=5
arg	until ||| time_point	count=1
function	returns the number ||| get	count=2
arg	the host ||| h_errnop	count=2
arg	is similar ||| filedes buffer size offset	count=1
function	used to accept a ||| accept	count=1
arg	size maxlen ||| s maxlen	count=1
function	arc hyperbolic tangent ||| catanh	count=2
arg	of the byte delim ||| delim	count=1
function	fstat but is able ||| fstat 64	count=1
function	priority ||| sched get priority	count=1
arg	ndigit is restricted ||| value ndigit	count=2
module	checks ||| core	count=1
function	narrows a wide character ||| wctob	count=2
arg	message [arg_2] ||| psignal [arg_2] [arg_1]	count=1
function_arg	if [arg_2] ||| [function_1] ascii [arg_2]	count=2
arg	to by [arg] as if ||| [arg]	count=1
function	the common mathematical functions ||| math	count=2
function	number of bytes in ||| mblen	count=1
arg	argc using [arg_2] ||| [arg_2] [arg_1]	count=2
arg	domainp point to are ||| domainp	count=1
module	[module] checks ||| [module]	count=1
arg	template string template ||| template	count=1
arg	not found in another ||| dest src	count=1
module	computes natural base-e ||| numeric math	count=1
arg	is initialized similarly ||| seedval	count=1
arg	[arg] in the ||| [arg]	count=2
arg	string given state ||| src len ps dstsz	count=4
module	unit ||| numeric complex	count=1
arg	attributes ||| attributes	count=2
function	the network number part ||| netof	count=1
function	initializes all aspects ||| lcong48 r	count=1
arg	of option optname at ||| optname optval optlen-ptr	count=1
module	[module] takes a ||| [module]	count=1
function_arg	sets the [arg_2] ||| [arg_2] [function_1]	count=13
arg	envz2 ||| envz2	count=1
module	is functionally identical ||| core	count=1
module	[module] provides an ||| [module]	count=1
function_arg	named [arg_2] ||| [arg_2] [function_1]	count=1
module	this function returns the ||| core	count=12
arg	does globbing ||| error-code) vector-ptr	count=1
function	create a ||| key create	count=1
module	value guaranteed to overflow ||| numeric math	count=1
module	mathematical ||| error	count=1
arg	a command ||| command mode	count=2
arg	characters from two ||| count	count=2
function	like the ||| r	count=2
arg	condition variable ||| cond mutex	count=2
function_arg	[function_1] attributes of ||| [arg_2] [function_1]	count=2
module	this function has ||| core	count=2
module	returns a bitmask ||| core	count=1
module	one ||| byte	count=2
module	one [module_2] ||| [module_2] [module_1]	count=2
function	removes the ||| sigdelset	count=1
function	installs ||| sched setaffinity	count=1
module	they return [module] long ||| [module]	count=3
function	_alignof ||| _alignof	count=1
arg	to wide string given ||| dst src len	count=2
function	priority ||| priority	count=1
function	sets ||| setgroups	count=1
function	to the memalign function ||| posix memalign	count=1
arg	sets [arg] ids to ||| user [arg]	count=1
function_arg	[function_1] buf_len ||| [function_1] argz argz_len buf [arg_2]	count=1
function	stores ||| atomic store	count=1
module	[module] unlocks ||| [module]	count=1
function	entry in envz ||| envz entry	count=1
arg	[arg_1] *argz_len ||| [arg_2] buf [arg_1]	count=3
arg	first occurrence of a ||| count	count=2
module	[module] copies ||| [module]	count=3
function	sets both the ||| setscheduler	count=1
module	[module] returns the ||| [module]	count=5
arg	formatted ||| format	count=12
arg	the scheduling policy for ||| pid policy	count=1
function	fgetwc ||| fgetwc	count=1
module	a float ||| math	count=1
module	to [module] initializes the ||| [module]	count=1
function	the putc ||| putc	count=1
function	swaps ||| exchange	count=1
function	memalign function in that ||| posix memalign	count=1
function_arg	writes up [arg_2] ||| [function_1] [arg_2]	count=1
arg	of the elements in ||| argz	count=1
arg	information about the host ||| buflen result h_errnop	count=2
function	reads a value ||| load	count=1
arg	nel ||| nel	count=1
module	[module] like strstr ||| [module]	count=1
function	reads a ||| load	count=1
function	specific location in ||| fsetpos	count=2
function	ttyname ||| ttyname	count=1
arg	of a ||| count	count=2
arg	a condition variable with ||| cond mutex duration	count=1
function	to the ferror ||| ferror	count=1
function	the function [function] the ||| [function]	count=1
function	number of available processors ||| nprocs	count=1
arg	length bytes ||| length	count=1
arg	the file [arg_2] ||| [arg_2] [arg_1]	count=2
module	narrow multibyte ||| multibyte	count=4
arg	of ||| ptr count	count=1
function	narrows a wide ||| wctob	count=2
rep	a [function_arg_2] ||| [module_1] [function_arg_2]	count=18
module	common ||| numeric math	count=2
arg	rather than [arg] null ||| [arg]	count=1
module	is functionally ||| core	count=1
arg	file named by filename ||| filename argv	count=1
arg	the size of filename ||| filename	count=1
arg	server socket socket ||| socket addr length_ptr	count=2
module	this function creates and ||| core	count=1
arg	size argument ||| s size template	count=2
function	set the program priority ||| set	count=1
function	the standard numbers-and-dots notation ||| ntoa	count=1
function	interface ||| if	count=1
arg	name of the system ||| name	count=2
arg	on a condition variable ||| cond mutex	count=2
arg	and [arg] ||| [arg] argv	count=1
arg	of boundary ||| boundary size	count=1
arg	[arg_1] string ||| [arg_2] [arg_1]	count=3
module	except ||| io	count=1
arg	for the file named [arg_1] [arg_2] ||| chmod [arg_1] [arg_2]	count=1
function	by mbrtoc16 ||| mbrtoc16	count=1
arg	*argz and *argz_len ||| argz argz_len	count=1
function	localtime ||| localtime	count=1
module	[module] the ||| [module]	count=2
arg	at most ndigit ||| ndigit decpt	count=1
arg	is used to ||| size	count=1
arg	elements [arg] pointed ||| key base nmemb [arg]	count=1
arg	about the host ||| result_buf buf buflen result h_errnop	count=2
module	to a ||| math	count=2
function	[function_1] [function_2] ||| [function_2] [function_1]	count=54
arg	to by buffer ||| buffer	count=2
function	fsetpos [function_2] ||| [function_1] [function_2]	count=2
function	first kind of order ||| jn	count=1
arg	thread-specific value ||| value	count=1
arg	not found in another ||| dest	count=1
function	similar to getrlimit ||| getrlimit	count=1
arg	sign of ||| x y	count=2
arg	them to filedes ||| filedes	count=1
function	unlocks a ||| unlock	count=1
function	getpwnam [function_2] ||| [function_1] [function_2]	count=4
arg	next token in ||| delim ptr strmax	count=1
function	[function_1] processors the ||| [function_1] [function_2]	count=1
arg	[arg] ids to ||| user [arg]	count=3
function	struct aiocb64 ||| aio	count=3
arg	filename to ||| filename	count=2
arg	[arg_1] signal signum ||| [arg_2] [arg_1]	count=2
arg	name of ||| name length	count=2
module	like [module] but it ||| [module]	count=1
arg	buflen [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	space character ||| wspace ch	count=2
function	by [function] ||| parse [function]	count=3
arg	by signp instead ||| signp	count=1
rep	a [function_arg_2] ||| [module_1] is [function_arg_2]	count=6
arg	user name is name ||| name result_buf buffer buflen result	count=1
function	location of any ||| wcspbrk	count=1
arg	evaluates the stream ||| stream	count=2
arg	id is gid ||| gid result_buf buffer buflen	count=1
arg	the stream ||| stream	count=16
function	checks if a ||| is	count=3
arg	similar to aio_fsync with ||| op	count=1
arg	needle and [arg] are ||| [arg] needle	count=1
function	to setrlimit but its ||| setrlimit 64	count=1
arg	the size [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] but ||| [function_2] [function_1]	count=20
arg	optionp ||| optionp	count=1
arg	close a stream ||| stream	count=1
module	evaluates to ||| math	count=1
arg	returns [arg] ||| [arg]	count=1
arg	through the pointer buffer ||| buffer result	count=1
module	guaranteed to overflow a ||| numeric math	count=1
arg	pointed to by buffer ||| buffer result	count=1
function	to aio_return with the ||| return	count=1
arg	specified size ||| size	count=2
arg	id ||| id	count=4
arg	at least [arg] ||| [arg]	count=1
module	overflow a float ||| numeric math	count=1
arg	[arg] instead of ||| [arg]	count=1
module	mbrtoc16 ||| string multibyte	count=1
function	if with envz_add ||| envz merge	count=1
arg	a range of ||| ptr count size	count=2
arg	the id pid ||| pid	count=2
function	the memalign function in ||| memalign	count=1
arg	from [arg] and ||| [arg]	count=2
arg	that the offset parameter ||| offset	count=1
function_arg	realpath [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	the internet [arg_2] ||| [function_1] netof [arg_2]	count=1
function	the local-address-within-network part ||| lnaof	count=1
function_arg	host address [arg_2] ||| [arg_2] [function_1]	count=4
arg	name [arg_2] ||| [arg_1] [arg_2]	count=1
arg	name is name ||| name result_buf	count=2
arg	a buffer ||| buffer	count=12
function	initializes all aspects of ||| lcong48	count=1
arg	port port ||| port	count=1
arg	user entry from ||| result_buf buffer	count=1
arg	maps from [arg] + ||| [arg]	count=1
arg	32-bit ||| s c32	count=1
arg	characters from ||| src count destsz	count=2
arg	c to the ||| c	count=1
module	a single-byte narrow ||| string multibyte	count=4
arg	if usage ||| usage	count=1
function	error ||| math	count=1
arg	tptr to current values ||| tptr	count=2
function	the setstate ||| setstate	count=1
function	long options ||| getopt long	count=1
function_arg	[function_1] buffer for ||| [function_1] stream [arg_2]	count=2
arg	buf with ||| filedes buf	count=4
function	scandir ||| scandir	count=1
arg	[arg_1] from ||| dest [arg_2] [arg_1]	count=8
arg	at byte offset ||| offset	count=1
arg	a process to neweuid ||| neweuid	count=1
function	the last occurrence of ||| wcsrchr	count=1
function	stat but it is ||| stat 64	count=1
arg	for the region of [arg_1] [arg_2] file for the descriptor ||| [arg_2] [arg_1]	count=3
module	to perform occasional ||| core	count=1
module	computes 2 [module_2] ||| [module_1] [module_2]	count=4
arg	[arg] structure ||| [arg]	count=3
function	assigns an ||| bind	count=1
function	long options [function_2] ||| [function_2] [function_1]	count=3
function	help ||| help	count=1
function	file offsets on ||| posix fallocate	count=1
arg	buffer which describes ||| buffer result	count=1
module	this functions stores ||| core	count=1
function	printf template string ||| printf format	count=1
arg	group name is name ||| name result_buf buffer buflen result	count=1
function	offsets on all platforms ||| posix fallocate 64	count=1
arg	entry from stream ||| stream result_buf buffer buflen	count=1
arg	process’s supplementary group ||| group	count=1
arg	[arg] from from ||| to from c [arg]	count=2
function	the memalign function ||| memalign	count=1
module	number to make this ||| core	count=1
module	number by 2 raised ||| numeric	count=1
arg	server ||| addr length_ptr	count=1
function_arg	[function_1] wide character ||| [arg_2] [function_1]	count=2
function_arg	destroys a [arg_2] ||| [function_1] [arg_2]	count=1
arg	the network [arg] with ||| net [arg]	count=1
function	standard numbers-and-dots notation ||| ntoa	count=1
function	arc sine ||| asin	count=1
module	[module] similar ||| [module]	count=1
arg	that *compiled ||| compiled	count=1
arg	name name ||| name value	count=1
function	an lowercase ||| wlower	count=1
function	snprintf with the variable ||| vsnprintf	count=1
arg	growing object is obstack_blank ||| obstack-ptr size	count=1
function	character to every position ||| wmemset	count=1
function	is similar to getgrnam ||| getgrnam	count=1
function	acquires the internal locking ||| flockfile	count=1
arg	from [arg] and returns ||| [arg]	count=1
function	struct aiocb64 ||| aio suspend 64	count=1
arg	an argument [arg] ||| [arg]	count=3
function	fcvt except ||| qfcvt	count=1
module	[module_1] the given ||| [module_1] [module_2]	count=8
function	type struct aiocb64 ||| aio fsync 64	count=1
function	argp parser ||| argp	count=1
arg	[arg_1] is obstack_blank ||| [arg_1] [arg_2]	count=3
arg	process pid ||| pid	count=1
arg	contains [arg] ||| mnt [arg]	count=1
function	result differs ||| rint	count=2
function	common ||| math	count=2
module	[module] appends ||| [module]	count=1
arg	mnt ||| mnt	count=1
arg	bits for the file [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	and raises the previously ||| feupdateenv	count=2
arg	length bytes [arg_2] ||| core posix fallocate [arg_2] [arg_1]	count=2
arg	line ||| line	count=2
arg	ndigit [arg_2] ||| [arg_2] [arg_1]	count=2
function	to accept a connection ||| accept	count=1
arg	[arg] which ||| namespace [arg]	count=1
arg	wide string ||| src len	count=4
arg	from buffer to the ||| buffer	count=1
function	nftw but it can ||| nftw 64	count=1
function	positive infinity or ||| infinity	count=1
module	character to narrow multibyte ||| multibyte	count=2
module	this is functionally identical ||| core	count=1
function	create a thread-specific data ||| create	count=1
arg	the owner of ||| owner	count=1
arg	string to a ||| str	count=4
arg	userp and [arg_2] ||| [arg_2] [arg_1]	count=4
arg	stream ||| stream result_buf	count=1
arg	by excepts ||| excepts	count=1
function	thread-specific ||| tss	count=1
function	pass long ||| long	count=1
arg	next user entry ||| result_buf	count=1
arg	string ws ||| ws	count=1
function_arg	its [arg_2] ||| [arg_2] [function_1]	count=8
arg	[arg_1] the groups ||| [arg_2] [arg_1]	count=1
function	unblocks all threads blocked ||| cnd broadcast	count=1
arg	buffer which describes the ||| xsubi[3] buffer	count=1
module	this function specifies which ||| core	count=1
arg	entry in [arg] ||| envz envz_len [arg]	count=3
function	is [function] ||| [function]	count=3
arg	offset parameter is ||| stream offset	count=1
arg	pointer to a buffer ||| buffer	count=1
function	fcvt except that it ||| qfcvt	count=1
function	network protocol named ||| getprotobyname	count=1
function	create a thread-specific ||| create	count=1
function	to the fgetwc ||| fgetwc	count=1
function	[function_1] processors the ||| [function_2] [function_1]	count=1
function	has finite ||| finite	count=1
module	perform ||| core	count=1
arg	of the variable pointed [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	bytes ||| mblen	count=1
arg	[arg_1] the old-action ||| sigaction [arg_1] [arg_2]	count=3
arg	that evaluates the stream ||| stream	count=2
function_arg	saves or [arg_2] ||| [arg_2] [function_1]	count=4
arg	newgid provided that ||| newgid	count=2
function_arg	and types of arguments [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	envz_add ||| merge	count=1
module	the calling thread ||| thread	count=1
module	common mathematical functions ||| math	count=1
module	thread ||| thread	count=2
arg	initialized similarly ||| seedval	count=1
arg	hostp userp [arg_2] ||| [arg_1] [arg_2]	count=3
module	the value ||| math	count=1
arg	scans the contents of ||| namelist dirent **)	count=1
function_arg	[function_1] spec ||| [function_1] [arg_2]	count=2
arg	form [arg] format ||| [arg] maxsize	count=1
function	to pass long options ||| long	count=1
function	the scandir ||| scandir 64	count=1
function	tdelete can ||| tdelete	count=1
arg	presentation textual ||| af cp buf len	count=1
arg	contents of ||| namelist dirent **)	count=1
arg	string given state ||| dst src len ps dstsz	count=2
function_arg	service named [arg_2] ||| [arg_2] [function_1]	count=2
module	evaluates to ||| numeric	count=1
function	to fsetpos [function_2] ||| [function_1] [function_2]	count=2
module	[module] prepares the ||| [module]	count=1
arg	[arg_1] [arg_2] function ||| [arg_2] [arg_1]	count=6
arg	the given name ||| name	count=1
arg	of size maxlen ||| maxlen	count=1
function_arg	[function_1] buffer ||| [function_1] stream [arg_2]	count=2
module	like [module] but ||| [module]	count=1
function	is similar to the ||| 64	count=3
arg	in [arg] whether ||| [arg]	count=1
arg	[arg_1] from wide ||| [arg_2] nwc len [arg_1]	count=2
function	a process’ ||| sched setparam	count=1
arg	envz2 to envz ||| envz2	count=1
function	the error ||| math	count=1
arg	to by buffer ||| buffer result	count=1
function	bytes in ||| mblen	count=1
module	this function writes the ||| core	count=1
arg	in [arg_2] ||| [arg_2] [arg_1]	count=18
function	entry in envz ||| entry	count=1
function_arg	gets the attributes ||| gtty filedes attributes	count=2
arg	of the ||| x y	count=2
arg	next user ||| result_buf	count=1
function_arg	[function_1] address to ||| [function_1] socket [arg_2]	count=1
arg	the attributes ||| filedes attributes	count=2
function	defines ||| math	count=2
module	[module] retrieves ||| [module]	count=2
arg	network [arg] with ||| net [arg]	count=1
function	operating system configured ||| conf	count=1
function	entry ||| entry	count=1
arg	the stream ||| wc stream	count=1
arg	host ||| buflen result h_errnop	count=2
arg	resolved parameter is null ||| name resolved	count=1
arg	filename to [arg_2] ||| chmod [arg_1] [arg_2]	count=1
arg	host ||| h_errnop	count=2
function_arg	bessel function of the [function_1] [arg_2] ||| [function_1] [arg_2]	count=4
arg	attr ||| attr	count=2
function	of bytes in the ||| mblen	count=1
function	accommodate it and adding ||| argz append	count=1
function	tdelete can be ||| tdelete	count=1
arg	is name ||| name	count=4
function	works like the scandir ||| scandir 64	count=1
module	converts a wide string ||| string wide	count=1
arg	the offset parameter is ||| offset	count=2
arg	16-bit ||| s c16	count=1
function	accordance ||| wcscoll	count=2
arg	user ||| user	count=1
arg	prints [arg_1] [arg_2] ||| psignal [arg_2] [arg_1]	count=5
module	return [module] long ||| [module]	count=3
arg	at most ndigit ||| ndigit	count=1
arg	delim ||| delim	count=1
arg	referenced by key ||| key destructor)(void*)	count=2
function	to asctime but instead ||| asctime	count=1
function	like the scandir ||| scandir 64	count=1
function	is similar ||| 64	count=5
module	is functionally identical to ||| core	count=1
arg	to newgid provided that ||| newgid	count=2
function	is a multiple of ||| memalign	count=1
arg	from [arg] + ||| [arg]	count=1
arg	buffer ||| buffer result	count=4
function	[function] *argz and ||| [function]	count=1
function	network number part of ||| netof	count=1
arg	envz2 to envz as ||| envz2 envz2_len	count=1
arg	[arg_1] to an ||| [arg_2] [arg_1]	count=3
function	of processors [function_2] ||| [function_1] [function_2]	count=1
arg	floating-point values ||| y	count=2
arg	offset parameter ||| offset whence	count=1
module	in ||| wide	count=3
arg	the file [arg] associated ||| filename [arg]	count=1
arg	message describing [arg_2] ||| psignal [arg_2] [arg_1]	count=2
module	occasional consistency checks ||| core	count=1
module	[module] takes as ||| [module]	count=1
function	scheduling policy if it ||| sched	count=1
module	a character is a ||| string	count=3
arg	action previously associated with ||| action	count=1
arg	removes [arg] from ||| envz envz_len [arg]	count=1
module	as if [module] ||| [module]	count=3
module	[module] reports ||| [module]	count=1
arg	optionp parameter must be ||| optionp tokens valuep	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=636
function	getgrgid [function_2] ||| [function_1] [function_2]	count=2
function	the highest absolute priority ||| priority	count=1
arg	starting at buf with ||| filedes buf	count=2
arg	wide string ||| src	count=4
function	to stat but ||| stat 64	count=2
module	a number by 2 ||| numeric math	count=1
function	the stream [function] ||| [function]	count=1
function	to accommodate it ||| append	count=1
module	functions ||| numeric	count=1
arg	difference that the offset ||| offset	count=1
arg	while [arg] ||| signum action [arg]	count=3
function	is similar to jrand48 ||| jrand48 r	count=1
function_arg	assigns an [arg_2] ||| [arg_2] [function_1]	count=4
arg	wto ||| wto	count=1
arg	name ||| name result_buf buf	count=1
arg	file with descriptor filedes ||| filedes offset whence	count=1
function	to the read ||| pread	count=1
arg	the character c ||| c	count=1
function	is similar to getpwnam ||| getpwnam	count=1
function	accept a connection request ||| accept	count=1
function	[function_1] but like ||| [function_2] [function_1]	count=4
function	finds the entry ||| entry	count=1
function	getrlimit but its ||| getrlimit 64	count=2
module	a copy ||| string	count=1
arg	at level level ||| level	count=1
arg	is ||| size count	count=1
function	type struct aiocb64 ||| aio suspend 64	count=1
function	to true [function] returns ||| atomic flag test [function]	count=1
function	as if with envz_add ||| envz merge	count=1
arg	sets a mask ||| mask	count=1
function	hyperbolic sine ||| csinh	count=2
arg	of the floating-point division ||| x	count=2
function	finds the entry in ||| entry	count=1
arg	from an atomic object ||| obj order	count=1
function	priority register to medium ||| ppr med	count=1
function	dependency chain ||| kill dependency	count=1
function	to getpwnam ||| getpwnam	count=1
arg	and that [arg_2] ||| [arg_2] [arg_1]	count=4
arg	given state ||| len ps dstsz	count=4
function	is similar to getgrent ||| getgrent	count=1
arg	[arg_1] mode ||| [arg_2] [arg_1]	count=3
function	allowed to ||| setegid	count=1
function	stat but it ||| stat 64	count=2
function_arg	[function_1] resolved parameter ||| [arg_2] [function_1]	count=2
function_arg	to realpath [arg_2] ||| [arg_2] [function_1]	count=1
function	updates ||| add	count=1
arg	to offset ||| offset	count=1
function	a process’ ||| sched getparam	count=1
function	like ||| r	count=2
arg	executes [arg_1] [arg_2] as a new process ||| [arg_2] [arg_1]	count=1
arg	string with sep ||| sep	count=1
module	guaranteed to overflow a ||| numeric	count=1
arg	is obstack_blank ||| size	count=1
function	a multiple ||| memalign	count=1
function	similar to the ttyname ||| ttyname r	count=1
arg	[arg_1] a ||| [arg_1] size [arg_2]	count=2
function_arg	changes [arg_2] ||| [function_1] [arg_2]	count=2
module	this function frees ||| core	count=1
function	printf template ||| printf format	count=1
arg	pointed to by before ||| before entry	count=1
arg	niceval [arg_2] ||| [arg_2] [arg_1]	count=1
module	computes ||| numeric complex	count=1
arg	message [arg_2] ||| [arg_2] [arg_1]	count=1
module	this function specifies ||| core	count=1
module	wide [module_2] ||| [module_2] [module_1]	count=2
function	null pointer [function] returns a ||| tmpnam [function]	count=1
arg	n of x ||| n x	count=4
arg	blocks using ||| blocks	count=1
module	a [module] ||| [module]	count=3
arg	newname ||| newname	count=1
function	the [function] ||| [function]	count=6
arg	parameter must be a ||| tokens valuep	count=1
arg	to wide string given ||| src	count=2
function	to strnlen ||| wcsnlen	count=1
arg	condition variable ||| cond	count=3
function	[function_1] fseeko ||| [function_2] [function_1]	count=2
function	of processors ||| nprocs	count=1
arg	character c to ||| c	count=1
arg	group database for ||| group	count=1
function	directly as for vprintf ||| obstack vprintf	count=1
arg	in argv of ||| argv flags	count=2
arg	terminal file specified by ||| action	count=1
function	to setrlimit but ||| setrlimit 64	count=2
arg	the io-functions ||| io-functions	count=1
function	only ‘-’ ||| only	count=1
module	a single-byte ||| string	count=4
module	a ||| numeric	count=1
arg	hostlong ||| hostlong	count=1
arg	of filename to ||| filename	count=1
function_arg	returns the bessel function [function_1] [arg_2] ||| core [function_1] [arg_2]	count=4
module	common ||| numeric	count=1
arg	growing object [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	only [arg_2] ||| [function_1] [arg_2]	count=1
module	[module] copies no ||| [module]	count=1
arg	compares [arg_1] [arg_2] considering them as holding ||| strverscmp [arg_1] [arg_2]	count=1
arg	hostp userp and domainp ||| hostp userp domainp	count=1
function	the strtoq ||| wcstoq	count=1
arg	specified by addr and ||| addr	count=1
arg	ndigit is restricted by ||| value ndigit decpt neg	count=2
function	returns the process group ||| getpgid	count=1
arg	struct rlimit ||| resource rlp	count=2
arg	resource resource [arg_2] ||| [arg_1] [arg_2]	count=1
function	to the fwrite ||| fwrite	count=1
function_arg	[function_1] [arg_2] ||| [function_1] lnaof [arg_2]	count=3
function	to the ptsname ||| ptsname	count=1
arg	signp instead [arg_2] ||| [arg_2] [arg_1]	count=1
arg	address to ||| addr	count=1
arg	string equal to name ||| name	count=2
arg	owner of ||| owner group	count=1
arg	[arg_1] user ||| [arg_2] group [arg_1]	count=4
function	lgamma ||| lgamma	count=1
arg	pointed to by htab ||| htab	count=1
arg	scans the group database ||| group	count=1
function	service named ||| getservbyname	count=1
arg	func ||| func descriptors	count=1
arg	[arg_1] [arg_2] ||| [arg_2] buf [arg_1]	count=7
arg	that the offset parameter ||| stream offset	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ntoa [arg_2]	count=2
arg	[arg] and value ||| envz envz_len [arg]	count=2
module	they return [module] long int ||| [module]	count=2
function	tdestroy ||| tdestroy	count=1
arg	resolved parameter is ||| name resolved	count=1
function	swaps a ||| exchange	count=1
arg	size instead of ||| c size	count=1
function	finds the entry ||| envz entry	count=1
arg	32-bit wide ||| s c32 ps	count=1
arg	display a message described ||| label severity text action tag	count=1
arg	among other things so ||| key salt data	count=1
function	envz_add ||| envz merge	count=1
arg	‘--’ ||| argc argv shortopts longopts indexptr	count=1
function_arg	signed remainder [arg_2] ||| [function_1] [arg_2]	count=8
module	[module] functionally identical ||| [module]	count=1
arg	usage is a ||| usage	count=1
arg	argc using the ||| argc	count=1
module	wide ||| wide	count=40
arg	character string given state ||| dst src len ps dstsz	count=2
function	to every position ||| wmemset	count=1
function	to stat ||| stat	count=1
module	to by ||| fenv	count=1
arg	spec ||| spec handler-function arginfo-function	count=1
arg	a form [arg] format string ||| [arg] maxsize	count=1
arg	[arg] pointed ||| key base nmemb [arg]	count=2
function	appends ||| wcsncat	count=2
function	memalign function in that ||| memalign	count=1
arg	by the opentype argument ||| opentype	count=1
function	of readdir which ||| readdir r	count=1
function	the memalign ||| posix memalign	count=1
arg	a range ||| size	count=1
arg	in the classification parameter ||| classification	count=1
arg	[arg_1] userp and ||| [arg_2] [arg_1]	count=4
arg	converts ||| retval	count=8
arg	wide string given ||| dst src len	count=2
arg	specified by [arg] ||| [arg]	count=6
arg	[arg] from ||| envz envz_len [arg]	count=3
function	of the internet ||| inet	count=2
arg	of wide characters ||| count	count=2
function	equivalent to the fputws ||| fputws	count=1
arg	file filename ||| filename	count=1
arg	the groups [arg_2] ||| [arg_2] group [arg_1]	count=1
arg	given time base ||| base	count=1
module	a float ||| numeric math	count=1
arg	stream ||| stream result_buf buffer buflen result	count=1
function	object in ||| object	count=1
arg	null-terminated [arg] instead of ||| [arg]	count=1
function_arg	[function_1] attributes ||| [arg_2] [function_1]	count=2
module	[module] compares ||| [module]	count=1
function	closes the hosts database ||| endhostent	count=1
arg	struct dirent64 ||| dir namelist dirent64 **)	count=1
arg	blocks using ||| blocks len mode	count=1
module	[module] initializes ||| [module]	count=2
function_arg	sets the [arg_2] ||| [function_1] stream [arg_2]	count=6
arg	groups [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] boundary ||| [arg_2] [function_1]	count=2
arg	command ||| command	count=4
arg	the specified lc_ctype ||| wc desc	count=4
arg	substring of characters ||| str substr	count=2
module	is a ||| string	count=4
function	fflush ||| fflush	count=1
arg	the socket socket ||| socket	count=1
arg	request on the server ||| addr length_ptr	count=1
arg	[arg] and ||| envz envz_len [arg]	count=2
arg	buf_len ||| buf_len	count=1
arg	optname ||| optname optval optlen-ptr	count=1
arg	a buffer describing ||| buffer	count=1
arg	an alternate [arg] for use ||| [arg]	count=2
function	to fcvt ||| qfcvt	count=1
function	classification category ||| wctype	count=1
arg	size maxlen contains ||| maxlen	count=1
arg	string given ||| src len	count=4
module	overflow ||| math	count=1
arg	obstack obstack-ptr ||| obstack-ptr	count=2
function	fma function ||| fma	count=2
function	exactly like the setstate ||| setstate	count=1
function_arg	printf [arg_2] ||| [arg_2] [function_1]	count=1
function	fseeko with the ||| fseeko	count=1
function	equivalent to the strtoq ||| wcstoq	count=1
function	directly as for vscanf ||| vsscanf	count=1
arg	reads up [arg] from ||| filedes buffer [arg]	count=1
arg	is equivalent to the ||| size count	count=1
arg	[arg_1] with ||| [arg_2] [arg_1]	count=16
arg	[arg_1] a buffer ||| [arg_2] [arg_1]	count=18
module	a ||| numeric math	count=7
module	the common ||| numeric math	count=1
arg	that ndigit is restricted ||| value ndigit	count=2
arg	[arg_1] of ||| [arg_2] [arg_1]	count=9
function	accommodate it and adding ||| append	count=1
arg	[arg] format string ||| [arg] maxsize	count=1
module	a variable ||| io	count=2
function	the thread-specific ||| delete	count=1
function_arg	only ‘-’ [arg_2] ||| [arg_2] [function_1]	count=1
arg	base ||| base	count=2
function	mrand48 but like the ||| mrand48 r	count=1
arg	you [arg] open see ||| [arg]	count=1
function	realpath where the ||| realpath	count=1
function_arg	last occurrence [arg_2] ||| [function_1] str [arg_2]	count=1
arg	of the line ||| line	count=1
module	in the current ||| wide	count=3
function	the entry ||| entry	count=1
arg	state ||| s n ps	count=1
function	reallocating *argz to accommodate ||| append	count=1
arg	string ||| src len dstsz	count=3
function	an uppercase ||| upper	count=2
function	accept ||| accept	count=1
function_arg	string within another ||| wcsstr dest src	count=2
module	computes efficiently a ||| numeric	count=1
function	is similar to mrand48 ||| mrand48	count=1
arg	binary to presentation textual ||| af cp buf	count=1
function	getpwnam ||| getpwnam	count=1
arg	[arg] storing ||| [arg] buffer	count=1
arg	elements [arg] pointed to ||| key base nmemb [arg]	count=1
function	getwchar ||| getwchar	count=1
arg	object ||| obj	count=3
arg	an ||| str_end	count=3
function_arg	[function_1] mutex ||| [function_1] [arg_2]	count=4
function_arg	[function_1] [arg_2] strings ||| [function_1] [arg_2]	count=4
module	to by ||| numeric fenv	count=1
module	to ||| numeric math	count=2
arg	a character [arg] to ||| [arg]	count=2
rep	[module_1] control character ||| [module_1] [function_arg_2]	count=1
arg	network [arg] with number ||| net [arg]	count=1
function	blank ||| blank	count=1
function	to getgrnam in that ||| getgrnam r	count=1
function	named ||| gethostbyname	count=1
arg	stack ||| stack	count=2
arg	cookie ||| cookie	count=1
arg	found in another ||| dest src	count=2
arg	atomic object ||| obj	count=3
function	[function_1] the internet ||| [function_2] [function_1]	count=6
arg	domainp ||| domainp	count=1
function	until locks a ||| mtx lock	count=1
arg	buffer ||| param[7] buffer	count=1
arg	name of ||| name	count=2
arg	length argc ||| argc	count=1
arg	[arg_1] is used ||| [arg_2] [arg_1]	count=3
arg	16-bit wide character ||| s c16 ps	count=1
function_arg	[function_1] [arg_2] ||| [function_1] str [arg_2]	count=12
arg	addr [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] is obstack_blank ||| [arg_2] [arg_1]	count=3
module	a 7-bit unsigned char ||| string byte	count=1
function	structure of type ldiv_t ||| ldiv	count=1
arg	that the offset parameter ||| offset whence	count=1
module	the common ||| math	count=1
arg	named by [arg] ||| [arg]	count=2
arg	by [arg] in ||| [arg]	count=1
arg	wide string [arg] into ||| [arg]	count=1
function	struct aiocb64 ||| aio suspend	count=1
arg	string pointers hostp userp ||| hostp userp	count=1
arg	alternate [arg] for use ||| [arg]	count=2
arg	argtypes the ||| argtypes	count=1
function_arg	network named [arg_2] ||| [function_1] [arg_2]	count=1
arg	restores ||| envp	count=3
function	a multiple of ||| memalign	count=1
arg	[arg_1] [arg_2] error output stream stderr ||| [arg_2] [arg_1]	count=1
arg	of characters from two ||| count	count=2
function	error function ||| erf	count=2
arg	length bytes [arg_2] ||| core posix fallocate fd [arg_2] [arg_1]	count=1
arg	[arg] open ||| filedes [arg]	count=2
arg	to by [arg] for an ||| key [arg] nmemb size	count=1
arg	referenced by [arg_2] ||| [arg_2] [arg_1]	count=2
function	lstat ||| lstat	count=1
function	reads the ||| readdir	count=1
arg	form [arg] ||| [arg] maxsize	count=2
module	if [module] ||| [module]	count=3
function	of any ||| wcspbrk	count=1
module	function calls the ||| core	count=1
arg	it and adding buf_len ||| buf_len	count=1
arg	[arg] in ||| [arg] cpusetsize	count=3
arg	buf with ||| value ndigit decpt neg buf	count=1
arg	difference that the offset ||| stream offset whence	count=1
arg	netlong ||| netlong	count=1
arg	is ||| size	count=4
arg	compares two ||| lhs rhs	count=4
arg	[arg_1] [arg_2] the function ||| [arg_2] [arg_1]	count=6
arg	from an atomic object ||| obj	count=1
module	textual representation ||| chrono	count=5
arg	by [arg_2] ||| execv [arg_2] [arg_1]	count=1
module	the value guaranteed to ||| numeric math	count=1
arg	ndigit ||| ndigit decpt neg	count=1
function	fwrite ||| fwrite	count=1
arg	buffer which describes ||| xsubi[3] buffer	count=1
arg	n [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the action ||| action	count=1
function	*argz to accommodate ||| argz append	count=1
arg	buf with [arg_2] ||| [arg_1] [arg_2]	count=2
module	this functions ||| core	count=1
arg	*nmemb elements [arg] pointed to ||| key base nmemb [arg]	count=1
arg	compares the [arg_1] [arg_2] considering them as holding ||| strverscmp [arg_1] [arg_2]	count=1
arg	in an atomic object ||| obj	count=1
function	[function_1] aio_write ||| [function_2] [function_1]	count=2
module	mathematical functions ||| numeric	count=1
arg	a message describing ||| message	count=1
function	mmap ||| mmap	count=1
function	to the ptsname ||| ptsname r	count=1
arg	puts a character ||| ch	count=1
arg	line ||| line buffer	count=1
arg	[arg_1] s2 ||| strverscmp [arg_1] [arg_2]	count=2
function	as for vprintf ||| obstack vprintf	count=1
arg	address ||| addr	count=1
arg	string [arg_2] ||| [arg_2] [arg_1]	count=12
function	printf template ||| printf	count=1
arg	modifying [arg] as described ||| [arg]	count=1
arg	tptr ||| tptr	count=2
arg	takes as [arg] handle ||| [arg]	count=1
arg	address to ||| addr length	count=1
arg	the offset ||| stream offset whence	count=1
module	this function causes ||| core	count=1
arg	[arg_1] class ||| [arg_2] id [arg_1]	count=4
arg	[arg_1] file stream ||| [arg_2] [arg_1]	count=17
arg	next user entry from ||| result_buf buffer buflen	count=1
function_arg	[function_1] buffer for ||| [arg_2] [function_1]	count=2
arg	[arg] the ||| [arg]	count=3
arg	up [arg] ||| filedes buffer [arg]	count=1
function	to lstat [function_2] ||| [function_2] [function_1]	count=4
arg	communication [arg] ||| namespace [arg]	count=1
function	that described ||| fesetenv	count=1
arg	maxlen contains ||| maxlen	count=1
function	of type lldiv_t ||| lldiv	count=1
function	[function_1] the aio_write ||| [function_2] [function_1]	count=2
arg	x is ||| x	count=1
arg	member of the line ||| line	count=1
arg	to [arg_2] ||| [arg_1] size [arg_2]	count=4
function_arg	destroys [arg_2] ||| [arg_2] [function_1]	count=1
arg	next user entry from ||| result_buf	count=1
arg	pointers hostp ||| hostp	count=1
function	only ‘-’ instead ||| only	count=1
function	stat [function_2] ||| [function_2] [function_1]	count=4
arg	a condition variable ||| cond mutex	count=2
arg	file position indicator ||| stream pos	count=4
arg	size ||| c size	count=1
arg	buf ||| neg buf	count=1
module	breaks a [module_2] ||| [module_2] [module_1]	count=2
function	to the putc ||| putc	count=1
arg	open [arg] ||| [arg] owner	count=1
function	the ||| math	count=4
arg	switches a file stream ||| stream mode	count=1
arg	this function is equivalent ||| size	count=1
function	xon/xoff flow control ||| tcflow	count=1
arg	user entry ||| result_buf buffer buflen result	count=1
arg	specified by ||| action	count=1
arg	array ||| dest	count=1
arg	[arg] two ||| lhs rhs [arg]	count=2
arg	name of the ||| name	count=2
arg	[arg] provided ||| [arg]	count=3
arg	the file [arg_2] ||| [arg_1] [arg_2]	count=2
function	an uppercase ||| wupper	count=1
function	to getrlimit ||| getrlimit	count=1
module	[module] just ||| [module]	count=3
function	call to realpath where ||| realpath	count=1
module	a 7-bit unsigned ||| string byte	count=1
module	this function ||| core	count=280
module	calling thread for the ||| thread	count=1
arg	that ndigit is ||| value ndigit buf	count=3
function	printf template string ||| printf	count=1
function	pass long options ||| getopt long	count=1
arg	at occurrences [arg] ||| argz [arg]	count=1
function	digit ||| digit	count=2
function	removes all entries from ||| clearenv	count=1
module	variable pointed to by ||| fenv	count=1
arg	spec ||| spec	count=1
arg	[arg_1] an ||| [arg_1] [arg_2]	count=3
function	these are [function] versions ||| setkey [function]	count=1
function	getmntent ||| getmntent	count=1
module	[module] number ||| numeric [module]	count=1
function	from two arrays ||| wmemcmp	count=2
function_arg	host address name ||| addr name	count=1
arg	descriptor [arg] ||| [arg]	count=3
module	the ||| error	count=2
function	[function_1] bytes ||| [function_2] [function_1]	count=1
function_arg	[function_1] address ||| [function_1] socket [arg_2]	count=1
function	to low ||| low	count=1
function	mapping category ||| wctrans	count=2
module	to ||| math	count=2
arg	an integer value ||| str_end base	count=6
arg	c to ||| c	count=1
arg	string to an integer ||| str	count=1
module	perform occasional consistency checks ||| core	count=1
function	number of ||| count	count=1
arg	amount of wide characters ||| count destsz	count=2
function	strnlen ||| wcsnlen	count=1
arg	buffer with the ||| param[7] buffer	count=1
arg	similar to aio_fsync with ||| op aiocbp	count=1
arg	communication [arg] which ||| namespace [arg]	count=1
function	aio_error ||| error	count=1
arg	of length argc ||| argc	count=1
function	initializes a new ||| var init	count=1
arg	object ||| obj desired	count=1
arg	32-bit wide character ||| s c32 ps	count=1
module	to overflow ||| math	count=1
arg	certain amount of characters ||| count	count=1
arg	[arg_1] s2 ||| [arg_2] [arg_1]	count=2
function	printing ||| print	count=2
function_arg	until locks [arg_2] ||| [function_1] [arg_2]	count=1
function	to the error ||| error	count=1
module	make this ||| core	count=1
arg	time base ||| base	count=1
function	adding the value of ||| obstack ptr grow	count=1
arg	device [arg] ||| [arg]	count=1
arg	starting at byte offset ||| offset	count=1
function	the beginning in ||| rewind	count=2
module	[module] unlocks the ||| [module]	count=1
arg	the stream stream is ||| stream	count=1
function_arg	closes [arg_2] ||| core [function_1] [arg_2]	count=1
arg	to wide string ||| src	count=4
arg	string ||| str	count=30
arg	the contents of ||| namelist dirent **)	count=1
arg	type struct dirent64 ||| namelist dirent64	count=1
function_arg	[function_1] the file ||| [arg_2] [function_1]	count=5
function_arg	network named name ||| getnetbyname name	count=1
function	indicates that the fma ||| fma	count=2
arg	that the offset ||| stream offset	count=1
function	unlocks ||| unlock	count=1
function	[function_1] bytes ||| [function_1] [function_2]	count=1
arg	by dir ||| dir	count=1
function	the pread ||| pread	count=1
arg	the optionp [arg_2] ||| [arg_2] [arg_1]	count=2
function	obtains the current ||| current	count=1
function	a version of readdir ||| readdir	count=1
arg	buf to ||| buf	count=1
function_arg	[function_1] a mutex ||| [arg_2] [function_1]	count=4
function	will ||| _	count=1
function	logarithm of 1 plus ||| log1p	count=1
arg	[arg_1] [arg_2] ||| [arg_1] size [arg_2]	count=5
function	local-address-within-network part of ||| lnaof	count=1
arg	file [arg] associated with ||| filename [arg]	count=1
arg	to ||| buffer bufsz	count=2
arg	ndigit is restricted by ||| value ndigit	count=2
module	one [module] ||| string [module]	count=4
function_arg	types of arguments expected [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
function	accordance to ||| wcscoll	count=2
function_arg	punctuation character ||| wpunct ch	count=1
arg	16-bit ||| c16	count=1
arg	[arg_1] position indicator ||| [arg_2] [arg_1]	count=6
arg	at buf ||| buf	count=3
function	ferror ||| ferror	count=1
module	the common mathematical functions ||| error	count=1
module	this function sets a ||| core	count=1
module	[module] converts the ||| [module]	count=4
arg	maxlen ||| s maxlen	count=1
function	to accommodate it and ||| append	count=1
function	privileged ||| setgid	count=1
arg	multiple of alignment ||| memptr alignment	count=1
arg	the how ||| how	count=1
function	with envz_add ||| envz merge	count=1
function_arg	[function_1] string ||| [function_1] [arg_2]	count=7
arg	‘-’ instead of ‘--’ ||| argc argv shortopts longopts indexptr	count=1
function	pass long options with ||| getopt long	count=1
module	computes natural ||| numeric	count=1
arg	pointed to by before ||| before	count=1
arg	[arg_1] domainp point ||| [arg_2] [arg_1]	count=5
arg	size bytes from ||| size	count=1
arg	at buf to the ||| buf	count=1
function_arg	[function_1] of ||| [function_1] [arg_2]	count=2
module	of the given ||| math	count=3
function_arg	[function_1] restores ||| [function_1] [arg_2]	count=1
arg	by addr ||| addr	count=1
arg	classification parameter ||| classification	count=1
arg	with the id pid ||| pid	count=2
arg	buffer with ||| buffer	count=1
module	memory block ||| memory	count=2
arg	file descriptor ||| filedes buf	count=1
arg	32-bit wide ||| s c32	count=1
function_arg	the printf [arg_2] ||| [arg_2] [function_1]	count=1
arg	msgid ||| msgid	count=1
function	square root ||| csqrt	count=1
arg	a file stream ||| stream	count=19
arg	name ||| name result_buf	count=3
arg	pattern pattern ||| pattern	count=1
arg	named by ||| argv	count=1
module	computes efficiently ||| numeric	count=1
arg	*argz and *argz_len accordingly ||| argz argz_len str	count=1
arg	length argc using ||| argc	count=1
arg	of the stream stream ||| stream	count=2
arg	string to another ||| dest src	count=1
function	is similar to aio_error ||| error	count=1
arg	pointer buffer ||| buffer result	count=1
module	a character ||| string	count=3
function	fread ||| fread	count=1
module	a 7-bit ||| string	count=1
function	is equivalent to globfree ||| globfree	count=1
arg	the group database ||| group	count=1
arg	optionp [arg_2] ||| [arg_2] [arg_1]	count=2
arg	wide characters ||| count destsz	count=2
function	the readdir ||| readdir	count=1
arg	than size bytes ||| size	count=1
arg	from ||| src	count=2
arg	opentype argument ||| opentype	count=1
arg	a growing object ||| obstack-ptr	count=1
function	last occurrence of a ||| wcsrchr	count=1
arg	the next user entry ||| result_buf buffer buflen result	count=1
arg	opentype argument that ||| size opentype	count=1
function	is similar to setutent ||| setutxent	count=1
arg	values in attr ||| attr	count=1
arg	or a buffer ||| buffer	count=11
module	function returns a bitmask ||| core	count=1
function	the setstate ||| setstate r	count=1
function	asctime but ||| asctime r	count=1
arg	to aio_fsync with the ||| op aiocbp	count=1
function	to asctime but instead ||| asctime r	count=1
function	releases the internal locking ||| funlockfile	count=1
arg	string [arg] into ||| [arg]	count=1
arg	buffer starting at buf ||| buf	count=2
module	this function gets ||| core	count=1
arg	optname at level level ||| level optname optval	count=1
arg	the argv ||| argv options	count=1
module	number by 2 ||| numeric	count=1
arg	with [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	certain amount [arg_2] ||| [arg_2] [function_1]	count=12
arg	or until the timeout ||| timeout	count=1
arg	[arg_1] stream ||| [arg_2] [arg_1]	count=4
arg	[arg] previously opened ||| [arg]	count=3
arg	port port [arg_2] ||| [arg_2] [arg_1]	count=1
arg	with descriptor filedes ||| filedes offset	count=1
function	high value ||| high	count=1
function_arg	[function_1] the buffer ||| [function_1] stream [arg_2]	count=2
function	of bytes currently in ||| _ fpending	count=1
function	adds one byte containing ||| 1grow fast	count=1
arg	[arg] which should ||| namespace [arg]	count=1
function	certain amount ||| strncmp	count=2
arg	initialized similarly to ||| seedval	count=1
module	the value guaranteed ||| numeric math	count=1
arg	string to ||| nptr	count=2
function	only ||| only	count=1
module	consistency ||| core	count=1
function	similar to the ptsname ||| ptsname r	count=1
arg	a complex ||| z	count=1
arg	domainp point to ||| domainp	count=1
function	aio_return with ||| return 64	count=1
function	aio_read ||| aio read	count=1
arg	a multiple of alignment ||| alignment	count=1
function	saves or ||| feenv	count=1
arg	in argtypes the information ||| n argtypes	count=1
function_arg	with only [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] process or ||| pid [arg]	count=1
function	reallocate *argz ||| argz delete	count=1
module	lldiv_t ||| numeric math	count=1
module	this function has to ||| core	count=1
arg	the old-action ||| old-action	count=1
arg	like ||| a	count=1
module	this function creates a ||| core	count=3
arg	integer [arg] from network ||| [arg]	count=2
arg	character string given state ||| dst src len ps	count=2
arg	32-bit wide character to ||| s c32 ps	count=1
module	a wide character ||| string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] filedes buffer [arg_2]	count=4
arg	name ||| name result_buf buffer	count=2
function	strtouq ||| wcstouq	count=1
arg	usage ||| usage	count=1
function	both ||| sched setscheduler	count=2
arg	to utmp ||| utmp	count=1
function	setrlimit but ||| setrlimit 64	count=2
module	a file ||| io	count=5
arg	the offset parameter ||| offset	count=2
function	for vprintf ||| vprintf	count=1
arg	in argtypes the ||| n argtypes	count=1
function	without initializing ||| blank	count=1
function	file ||| fsync	count=1
arg	by [arg] as if ||| [arg]	count=1
function_arg	[function_1] ‘--’ ||| [arg_2] [function_1]	count=3
arg	[arg_1] [arg_2] error output stream stderr ||| psignal [arg_2] [arg_1]	count=1
arg	character string ||| dst src len dstsz	count=1
arg	line ||| line buffer result	count=1
arg	old-action argument is ||| old-action	count=1
arg	address to the ||| addr	count=1
function_arg	imaginary part [arg_2] ||| [arg_2] [function_1]	count=2
function	destroy the thread-specific ||| delete	count=1
arg	of an atomic object ||| obj desired	count=1
module	wide string to ||| wide	count=4
arg	file [arg] associated ||| filename [arg]	count=1
arg	wto ||| wto wfrom size	count=1
function_arg	destroys a [arg_2] ||| [arg_2] [function_1]	count=1
function	srand48 ||| srand48 r	count=1
arg	implicitly lock [arg] ||| [arg]	count=2
function	tests whether the ||| sigismember	count=1
function	checks if ||| is	count=14
arg	buffer which ||| xsubi[3] buffer result	count=1
function	sets the ||| setgroups	count=1
module	a character ||| string byte	count=2
arg	offset ||| offset	count=4
arg	is gid ||| gid result_buf	count=1
arg	[arg_1] the old-action ||| [arg_2] [arg_1]	count=3
arg	[arg_1] in argv ||| [arg_2] [arg_1]	count=2
arg	writes them to filedes ||| filedes	count=1
module	converts a [module_2] ||| [module_1] [module_2]	count=20
module	common mathematical ||| numeric	count=1
module	[module] returns a ||| [module]	count=5
module	this function can ||| core	count=7
arg	catalogs for [arg] ||| [arg]	count=1
arg	the name name ||| name	count=2
arg	buf ||| buf	count=4
function	same as ecvt ||| ecvt	count=1
arg	next user entry ||| result_buf buffer	count=1
function	getrlimit ||| getrlimit	count=1
arg	*argz_len ||| argz argz_len	count=1
arg	to presentation textual ||| af cp buf len	count=1
arg	for the resource resource ||| resource	count=2
function	it ||| r	count=2
arg	prints ||| bufsz	count=7
function	to getrlimit but its ||| getrlimit 64	count=1
function	classifies ||| is wctype	count=4
arg	the optionp [arg_2] ||| [arg_1] [arg_2]	count=2
arg	switches a file stream ||| stream	count=1
arg	more [arg] ||| to from c [arg]	count=1
arg	by htab to ||| htab	count=1
function	sets a process’ ||| sched setparam	count=1
arg	is equivalent ||| size	count=1
function	but like the other ||| r	count=1
function_arg	[function_1] complex ||| [function_1] [arg_2]	count=2
function	hexadecimal ||| xdigit	count=1
module	raised to the given ||| math	count=4
module	raised to a power ||| math	count=1
module	the value guaranteed to ||| math	count=1
function	and [function] *argz ||| [function]	count=1
arg	the storage [arg] points to ||| [arg]	count=1
arg	added as part of ||| flags	count=1
arg	that the offset ||| stream offset whence	count=1
arg	with descriptor filedes ||| filedes	count=1
arg	[arg_1] from ||| [arg_2] [arg_1]	count=8
function	just like the readdir ||| readdir	count=1
arg	condition variable ||| cond mutex duration	count=1
arg	occurrence of ||| count	count=4
function_arg	[function_1] string template ||| parse [function_1] [arg_2]	count=2
module	deletes the [module] name filename ||| [module]	count=1
function	nftw but it ||| nftw 64	count=2
function	reallocate ||| argz delete	count=1
arg	to aio_fsync with ||| op aiocbp	count=1
arg	to name ||| name	count=2
arg	option optname ||| optname	count=1
arg	[arg_1] of x ||| [arg_1] [arg_2]	count=2
arg	the action previously associated ||| action	count=1
arg	optionp [arg_2] ||| [arg_1] [arg_2]	count=2
function	reads ||| readdir	count=1
module	to a [module] ||| [module]	count=1
arg	of size maxlen contains ||| s maxlen	count=1
function_arg	[function_1] restores the ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| core [function_1] create [arg_2]	count=1
function	reallocating *argz and ||| argz insert	count=1
module	function error this prints ||| core	count=1
arg	envz2 to envz ||| envz2 envz2_len	count=1
module	one wide ||| wide	count=1
arg	that [arg_2] ||| [arg_2] [arg_1]	count=4
function	asctime but instead of ||| asctime r	count=1
function	the fread ||| fread	count=1
arg	string fmt ||| fmt	count=1
module	copies a ||| string byte	count=1
module	computes ||| numeric	count=46
function	internet ||| inet	count=2
arg	user entry from ||| result_buf buffer buflen result	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=174
function	the gamma function ||| lgamma	count=1
function	*argz and updates ||| argz add	count=1
module	computes absolute ||| numeric	count=2
function	and [function] ||| [function]	count=2
arg	and adding buf_len ||| buf_len	count=1
arg	byte delim ||| argz_len str delim	count=1
function	similar to the pread ||| pread	count=1
arg	16-bit ||| c16 ps	count=1
arg	[arg] handle previously ||| [arg]	count=3
function	[function_1] host address ||| [function_2] [function_1]	count=1
module	this function checks to ||| core	count=8
function	if ||| is	count=1
function_arg	the internet [arg_2] ||| [function_1] lnaof [arg_2]	count=1
arg	string template ||| template	count=1
arg	group ||| group	count=2
arg	attributes of a terminal ||| attributes	count=2
arg	signal handler ||| handler	count=1
arg	at buf to ||| buf	count=1
arg	the mantissa [arg] scaled ||| [arg]	count=1
module	returns ||| core	count=1
arg	by buffer ||| buffer result	count=1
arg	takes as [arg] handle previously ||| [arg]	count=1
module	[module_1] number by ||| [module_1] [module_2]	count=1
module	functions ||| numeric math	count=2
function	bytes in the ||| mblen	count=1
arg	prints formatted output to ||| bufsz format	count=2
module	defines the ||| error	count=1
arg	argv ||| argv	count=3
arg	to the file ||| stream	count=1
module	this function scans ||| core	count=2
module	blocks on a ||| thread	count=2
function_arg	[function_1] another ||| [arg_2] [function_1]	count=4
arg	block if [arg] is ||| block [arg]	count=1
arg	[arg_1] and domainp ||| [arg_2] [arg_1]	count=5
arg	int instead [arg] ||| [arg]	count=9
arg	[arg_1] formatted output ||| [arg_2] [arg_1]	count=2
function	setrlimit [function_2] ||| [function_2] [function_1]	count=4
function	network number part ||| netof	count=1
function_arg	the [function_1] [arg_2] ||| core [function_1] create [arg_2]	count=1
arg	of buflen [arg_2] ||| [arg_2] [arg_1]	count=2
arg	with ||| template	count=1
module	consistency checks ||| core	count=1
arg	parameter func ||| func	count=1
function	closes ||| close	count=1
arg	of alignment ||| memptr alignment	count=1
arg	open [arg] ||| [arg]	count=2
arg	the file ||| stream mnt	count=1
arg	a ||| mode	count=1
function	set the program ||| _ ppc set	count=1
arg	copies descriptor [arg] ||| [arg]	count=3
arg	filename [arg_2] ||| [arg_2] [arg_1]	count=2
function	fcvt except that ||| qfcvt	count=1
function	called in the array ||| gethostname	count=1
arg	for the region of [arg_1] [arg_2] in the file for ||| core posix fallocate fd [arg_2] [arg_1]	count=3
function_arg	a process’ [arg_2] ||| [arg_2] [function_1]	count=2
function	similar to fsetpos ||| fsetpos	count=1
arg	with file descriptor filedes ||| filedes	count=2
function	the fma ||| fma	count=2
arg	times ||| times	count=1
arg	size bytes ||| size compar	count=1
arg	neweuid ||| neweuid	count=1
function	space ||| wspace	count=2
function	and [function] *argz and ||| [function]	count=1
function	[function] policy assigned ||| [function]	count=2
function	similar to setrlimit ||| setrlimit	count=1
function_arg	service named name ||| getservbyname name	count=1
arg	a character [arg] to stdout ||| [arg]	count=2
arg	argv followed by a ||| argv	count=1
arg	in argtypes ||| n argtypes	count=1
function	similar to nftw ||| nftw	count=1
rep	[module_1] punctuation character ||| [module_1] is [function_arg_2]	count=1
function	defines the ||| math	count=2
function	stores a ||| store	count=1
module	to overflow a ||| numeric math	count=1
arg	oucp ||| oucp	count=1
arg	size of filename to ||| filename	count=1
function_arg	blank [arg_2] ||| [function_1] [arg_2]	count=1
module	[module] copies descriptor ||| [module]	count=1
function	be emptied ||| _ fpurge	count=1
arg	space specified by addr ||| addr	count=1
function	null pointer [function] returns ||| tmpnam [function]	count=1
module	this function is ||| core	count=83
arg	to the file ||| stream mnt	count=1
function	aio_write ||| aio write	count=1
arg	resource resource [arg_2] ||| [arg_2] [arg_1]	count=1
arg	the offset parameter ||| offset whence	count=1
function_arg	accommodate it [arg_2] ||| [function_1] argz argz_len buf [arg_2]	count=2
module	[module] argz vector ||| [module]	count=1
module	this function is basically ||| core	count=1
arg	the buffer for a ||| buffer	count=2
module	guaranteed ||| math	count=1
function	to getpwnam in ||| getpwnam r	count=2
arg	attributes of a ||| filedes attributes	count=2
arg	by addr and length-ptr ||| addr length-ptr	count=1
function	absolute priority [function_2] ||| [function_1] [function_2]	count=1
arg	network [arg] ||| net [arg]	count=1
arg	envz2 to ||| envz2 envz2_len override	count=1
function	ttyname ||| ttyname r	count=1
arg	userp and [arg_2] ||| [arg_1] [arg_2]	count=4
module	computes natural base-e logarithm ||| numeric	count=1
arg	in another ||| dest	count=2
arg	buffer describing the state ||| buffer result	count=1
function	reads a value from ||| load	count=1
function	for every [function] that is ||| [function]	count=1
function	[function_1] but the ||| [function_2] [function_1]	count=4
arg	[arg_1] socket socket ||| [arg_2] [arg_1]	count=22
function	to accommodate ||| append	count=1
function	to nftw [function_2] ||| [function_1] [function_2]	count=3
arg	the old-action argument ||| old-action	count=1
arg	argument list pointer ap ||| ap	count=1
arg	by addr [arg_2] ||| core getpeername socket [arg_1] [arg_2]	count=1
arg	off64_t ||| address length protect flags filedes	count=1
arg	[arg_1] [arg_2] ||| [arg_2] group [arg_1]	count=4
arg	of the floating-point ||| x	count=2
function_arg	[function_1] value ||| [function_1] [arg_2]	count=1
function	[function] message for ||| argp state [function]	count=2
arg	in another ||| dest src	count=3
arg	an open [arg] ||| [arg]	count=1
arg	is used to specify ||| parameter	count=1
arg	is equal to msgid ||| msgid	count=1
rep	[module_1] control character ||| [module_1] is [function_arg_2]	count=1
module	to narrow multibyte string ||| multibyte	count=2
function_arg	[function_1] address to ||| [arg_2] [function_1]	count=1
module	given [module_2] ||| [module_1] [module_2]	count=10
arg	if [arg] is 0 ||| block [arg]	count=1
arg	pointers hostp [arg_2] ||| [arg_2] [arg_1]	count=6
function	[function] policy ||| [function]	count=2
module	[module] symbol ||| [module]	count=3
arg	[arg] containing the ||| [arg]	count=1
module	guaranteed to overflow ||| numeric math	count=1
arg	type struct dirent64 ||| dirent64 **)	count=1
arg	generator described in buffer ||| buffer	count=1
function	ptsname ||| ptsname r	count=1
arg	for the file named [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
arg	to a [arg_2] ||| [arg_1] [arg_2]	count=2
arg	parses ||| arg_index input	count=1
function_arg	internet [arg_2] ||| [arg_2] [function_1]	count=2
arg	the size ||| size	count=1
function	back into ||| ungetc	count=1
arg	object ||| obj desired order	count=1
function	narrows a ||| wctob	count=2
arg	tptr to current ||| tptr	count=2
arg	an alternate [arg] for ||| [arg]	count=2
module	[module] provides ||| [module]	count=1
arg	that ndigit is restricted ||| value ndigit decpt	count=2
function	[function_1] high ||| [function_1] [function_2]	count=5
module	nearest [module] rounding away ||| numeric [module]	count=1
function	process’ claim on the ||| sched yield	count=1
arg	about the action previously ||| action	count=1
arg	[arg_1] [arg_2] ||| [arg_2] buffer [arg_1]	count=6
function	the imaginary ||| imaginary	count=1
function	accommodate it and ||| argz append	count=1
module	common mathematical functions ||| error	count=1
arg	the process group pgid ||| pgid	count=1
arg	[arg_1] a file ||| [arg_2] [arg_1]	count=10
arg	a ||| string c	count=1
module	thread for the ||| thread	count=1
module	this function finds ||| core	count=2
arg	length bytes [arg_2] ||| [arg_2] [arg_1]	count=3
arg	next user ||| result_buf buffer buflen	count=1
function	getgrgid [function_2] ||| [function_2] [function_1]	count=2
function	memalign function in ||| posix memalign	count=1
function	the strtouq ||| wcstouq	count=1
function	status ||| status	count=1
function	set ||| _ ppc set	count=2
arg	to by [arg] contains ||| [arg]	count=1
arg	from [arg] and imaginary ||| [arg]	count=1
module	this is similar ||| core	count=3
arg	and domainp point ||| domainp	count=1
function	scheduling policy ||| sched	count=1
arg	[arg_1] at buffer ||| [arg_2] [arg_1]	count=4
arg	[arg_1] arguments in ||| [arg_2] [arg_1]	count=2
module	defines the error ||| error	count=1
arg	to by signp instead ||| signp	count=1
arg	user name is name ||| name result_buf buffer buflen	count=1
module	[module] gets ||| [module]	count=1
function	reallocating *argz to accommodate ||| argz append	count=1
arg	[arg_1] and ||| [arg_2] [arg_1]	count=6
arg	pointers hostp userp and ||| hostp userp	count=1
arg	before ||| before	count=1
function_arg	hexadecimal [arg_2] ||| [function_1] [arg_2]	count=1
function	outputs a help ||| help	count=1
function	is used by mbrtoc16 ||| mbrtoc16	count=1
function	fseeko with the only ||| fseeko	count=1
arg	id ||| id buffer	count=1
function	signal function as ||| signal	count=1
arg	running a ||| mode	count=1
arg	on which it is ||| size	count=1
arg	the process to newuid ||| newuid	count=1
module	return [module] long long ||| [module]	count=1
arg	object htab ||| htab	count=1
arg	of type struct dirent64 ||| dirent64 **)	count=1
function	mrand48 but like ||| mrand48 r	count=2
arg	specified in the classification ||| classification	count=1
rep	[module_1] [function_arg_2] ||| [module_1] [function_arg_2]	count=145
arg	buffer describing the state ||| buffer	count=1
arg	like ||| a b	count=1
function	[function] cpusetsize bytes ||| [function]	count=1
arg	running a [arg_2] ||| [arg_2] [arg_1]	count=2
function	getgrnam in that is ||| getgrnam r	count=1
arg	size instead ||| c size	count=1
arg	buffer and ||| buffer mode	count=4
function_arg	blank character ||| blank ch	count=1
function	the pwrite ||| pwrite	count=1
function	punctuation ||| wpunct	count=1
function_arg	but [arg_2] ||| [function_1] [arg_2] position	count=3
module	this is just like ||| core	count=1
arg	haystack ||| haystack	count=1
arg	file descriptor [arg_2] ||| fpathconf [arg_1] [arg_2]	count=3
function	the fputs ||| fputs	count=1
arg	to aio_fsync with ||| op	count=1
arg	of ||| count	count=5
module	computes 2 raised to ||| numeric	count=2
arg	in *cos where ||| sinx cosx	count=1
arg	character to a ||| ch	count=3
function	adding the value of ||| ptr grow	count=1
arg	about the host ||| buf buflen result h_errnop	count=2
module	the common mathematical functions ||| math	count=1
arg	a given time base ||| base	count=1
arg	file with descriptor filedes ||| filedes	count=4
function	the getutent ||| getutent r	count=1
arg	of a ||| x	count=3
arg	any memory maps from [arg_1] [arg_2] ||| core munmap [arg_1] [arg_2]	count=1
arg	of ||| x	count=12
module	a certain [module_2] ||| [module_1] [module_2]	count=10
module	this function scans the ||| core	count=2
function_arg	initializes [arg_2] ||| [arg_2] [function_1]	count=1
function	but it can ||| 64	count=1
arg	argv followed ||| argv	count=1
function	fma ||| fma	count=2
function	[function_1] available processors ||| [function_1] [function_2]	count=1
module	remove this ||| core	count=1
function	swaps ||| atomic exchange	count=1
arg	the process pid ||| pid	count=1
arg	a complex number ||| z	count=1
arg	name ||| name result_buf buffer buflen result	count=2
function_arg	[function_1] string template ||| [function_1] [arg_2]	count=2
arg	to mode ||| mode	count=2
arg	action previously associated ||| action	count=1
arg	the host ||| result h_errnop	count=2
arg	[arg_1] [arg_2] ||| [arg_1] bufsz format [arg_2]	count=24
arg	byte offset ||| offset	count=1
module	computes 2 ||| numeric	count=2
arg	signal mask to mask ||| mask	count=1
arg	user entry ||| result_buf buffer buflen	count=1
arg	by [arg] contains ||| [arg]	count=1
module	[module] reads the ||| [module]	count=3
arg	by modifying [arg] as described ||| [arg]	count=1
arg	group name is name ||| name result_buf buffer	count=1
arg	file ||| stream	count=15
arg	[arg] in ||| fd [arg]	count=3
function_arg	hexadecimal character ||| xdigit ch	count=1
module	computes [module_2] ||| [module_1] [module_2]	count=4
arg	to niceval [arg_2] ||| [arg_2] id [arg_1]	count=1
function	reallocate *argz ||| delete	count=1
function	to medium [function_2] ||| [function_2] [function_1]	count=2
arg	function adds [arg] ||| obstack-ptr [arg]	count=3
arg	three string pointers hostp ||| hostp	count=1
module	[module] modifies ||| [module]	count=1
module	amount of wide ||| wide	count=5
arg	[arg_1] formatted output ||| [arg_1] [arg_2]	count=2
arg	string pointers hostp ||| hostp	count=1
module	a narrow multibyte character ||| string multibyte	count=2
function	[function] message ||| argp state [function]	count=2
function	of the gamma function ||| lgamma	count=1
arg	offset parameter is of ||| offset whence	count=1
arg	the owner ||| owner group	count=1
function	that the fma function ||| fma	count=2
arg	growing object [arg_2] ||| [arg_2] [arg_1]	count=1
arg	by state to stream ||| stream	count=1
arg	name from the ||| name	count=2
arg	by before ||| before	count=1
function	[function_1] but like ||| [function_1] [function_2]	count=4
arg	of the byte delim ||| str delim	count=1
arg	blocks using des ||| blocks	count=1
arg	pointer ap ||| template ap	count=1
arg	size instead of forwards ||| size	count=1
arg	template ||| template n	count=1
function	of processors the ||| nprocs	count=1
arg	size maxlen contains a ||| s maxlen	count=1
module	to ||| core	count=1
arg	to size bytes from ||| size	count=1
arg	of x ||| x	count=3
module	if the given ||| math	count=1
function	acquires the ||| flockfile	count=1
function	of readdir which performs ||| readdir	count=1
function	fsetpos ||| fsetpos	count=1
arg	buffer describing the ||| buffer	count=1
function	is similar to getpwent ||| getpwent	count=1
function	used to accept ||| accept	count=1
arg	to by before ||| before entry	count=1
arg	limit ||| limit	count=1
function	until locks ||| mtx lock	count=1
arg	by tptr ||| tptr	count=1
function	control ||| cntrl	count=1
arg	group database for all ||| group	count=1
arg	[arg_1] *argz_len ||| [arg_2] [arg_1]	count=3
arg	prints formatted ||| bufsz format	count=14
arg	[arg] for ||| filename [arg]	count=3
arg	[arg] from ||| filedes buffer [arg]	count=2
module	one [module_1] [module_2] to another ||| [module_2] [module_1]	count=4
function	to the memalign ||| memalign	count=1
arg	size instead ||| size	count=1
function_arg	punctuation [arg_2] ||| [arg_2] [function_1]	count=2
function	local-address-within-network part of the ||| lnaof	count=1
arg	from wide ||| src	count=1
function_arg	the internet [arg_2] ||| [arg_2] [function_1]	count=2
arg	groups [arg_2] ||| [arg_2] group [arg_1]	count=1
arg	with at most ndigit ||| ndigit	count=1
arg	the elements in the ||| argz	count=1
arg	group name is name ||| name	count=2
arg	to an integer value ||| str_end base	count=3
arg	characters between ||| count	count=1
arg	size bytes from buffer ||| buffer size	count=1
function	form ||| ntop	count=1
arg	filename ||| filename mode	count=1
function	scheduling ||| sched	count=2
arg	and length-ptr ||| length-ptr	count=1
arg	file descriptor filedes ||| filedes duration	count=1
arg	entry ||| entry	count=1
function	transform a string ||| strxfrm	count=2
function_arg	[function_1] file stream ||| [arg_2] [function_1]	count=1
function_arg	[function_1] size ||| [function_1] stream buffer mode [arg_2]	count=2
function	to lstat ||| lstat	count=1
function	number of processors the ||| nprocs	count=1
function	in ||| r	count=2
arg	that the offset parameter ||| stream offset whence	count=1
arg	size maxlen contains a ||| maxlen	count=1
module	computes square root of ||| numeric	count=1
module	[module] returns ||| [module]	count=16
arg	positions in [arg] ||| argz argz_len [arg]	count=3
arg	the thread-specific value ||| value	count=1
arg	ndigit ||| ndigit decpt	count=1
function	sets both ||| sched setscheduler	count=1
arg	the first occurrence of ||| count	count=4
function	read ||| pread	count=1
arg	printf format string fmt ||| fmt	count=1
arg	resource resource ||| resource	count=2
function	the ferror ||| ferror	count=1
function_arg	signed remainder of ||| remainder x y	count=2
arg	information in buffer is ||| buffer	count=1
module	guaranteed ||| numeric math	count=1
arg	state ||| len ps dstsz	count=4
arg	condition variable with a ||| cond mutex	count=1
arg	of option optname ||| optname optval	count=1
arg	timeout ||| timeout	count=1
function_arg	[function_1] name from ||| [function_1] aton [arg_2] addr	count=1
function	sets the ||| stty	count=1
function_arg	the bessel function of [function_1] [arg_2] ||| core [function_1] [arg_2]	count=4
rep	given number [function_arg_2] ||| [module_1] [function_arg_2]	count=1
arg	characters ||| count	count=7
rep	number [function_arg_2] ||| [module_1] math is [function_arg_2]	count=1
function	[function_1] internet ||| [function_2] [function_1]	count=2
function	same as ecvt ||| ecvt r	count=1
function	accommodate it and ||| append	count=1
arg	prints formatted wide ||| bufsz format	count=8
module	[module] like wcscpy ||| [module]	count=1
arg	uint16_t integer [arg] from ||| [arg]	count=2
function	second kind of order ||| yn	count=1
module	raised to ||| math	count=1
function	without ||| _exit	count=2
module	to perform occasional consistency ||| core	count=1
arg	contents of the directory ||| namelist dirent **)	count=1
arg	the string [arg] against ||| [arg]	count=1
arg	an offset [arg] from ||| [arg]	count=1
function	reallocating *argz and ||| insert	count=1
arg	host ||| result_buf buf buflen result h_errnop	count=2
arg	32-bit wide character ||| c32	count=1
arg	is similar to aio_fsync ||| op aiocbp	count=1
module	a [module_2] ||| [module_2] [module_1]	count=6
arg	user name is name ||| name result_buf	count=1
arg	with at most ndigit ||| ndigit decpt	count=1
arg	[arg_1] class ||| [arg_2] [arg_1]	count=4
arg	integer [arg] from ||| [arg]	count=4
arg	*argz and *argz_len accordingly ||| argz argz_len	count=1
function	the common mathematical ||| math	count=2
arg	removes any memory [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
arg	buffer of buflen bytes ||| buflen	count=1
arg	userp [arg_2] ||| [arg_1] [arg_2]	count=3
function	macros ||| macros	count=1
arg	string in [arg] whether or ||| [arg]	count=1
arg	information about the host ||| result_buf buf buflen result h_errnop	count=2
function	file offsets on all ||| posix fallocate 64	count=1
arg	s of size maxlen ||| s maxlen	count=1
function	getgrgid in that it ||| getgrgid r	count=1
arg	is gid ||| gid result_buf buffer buflen	count=1
arg	argv [arg_2] ||| [arg_2] [arg_1]	count=6
arg	host address addr to ||| addr	count=1
module	[module] specifies an ||| [module]	count=2
arg	the argv ||| argv	count=1
function	[function] placing the ||| [function]	count=1
function	[function_1] only ||| [function_1] [function_2]	count=2
function	similar to the memalign ||| memalign	count=1
module	this function defines ||| core	count=1
function	offsets ||| posix fallocate 64	count=2
function	vector *argz and updates ||| add	count=1
function	with only ‘-’ instead ||| only	count=1
function	to asctime but ||| asctime	count=1
function	aio_fsync ||| fsync 64	count=1
function_arg	[function_1] [arg_2] ||| [function_1] stream buffer mode [arg_2]	count=6
arg	wide character given state ||| ps	count=1
arg	specific location in ||| offset origin	count=2
arg	usage is ||| usage	count=1
arg	a condition variable with ||| cond mutex	count=1
arg	that ||| ws	count=2
arg	by the how ||| how	count=1
function	closely related ||| popen	count=1
arg	file descriptor filedes is ||| filedes	count=1
module	using [module] one can ||| [module]	count=1
function	as for vprintf ||| vprintf	count=1
arg	size bytes aligned to ||| size	count=1
arg	compares the [arg_1] [arg_2] considering them as holding ||| [arg_1] [arg_2]	count=1
function	returns the [function_2] ||| [function_2] [function_1]	count=4
arg	old to the first ||| old	count=1
arg	a file ||| stream	count=5
arg	buffer [arg_2] ||| [arg_1] bufsz format [arg_2]	count=4
function	given ||| strlen	count=1
function	to the fputwc ||| fputwc	count=1
function	returns ||| get	count=2
function_arg	calling thread [arg_2] ||| [arg_2] [function_1]	count=2
arg	of size maxlen contains ||| maxlen	count=1
module	the common ||| numeric	count=1
arg	uint32_t integer [arg] from network ||| [arg]	count=1
arg	character string ||| dst src	count=3
arg	atomic object ||| obj desired	count=1
function	create a thread-specific data ||| key create	count=1
module	complex ||| complex	count=3
arg	is equivalent to the ||| size	count=1
arg	[arg_1] [arg_2] ||| [arg_2] bufsz [arg_1]	count=4
function	handling mechanism used by ||| math errhandling	count=1
arg	user ||| result_buf buffer buflen	count=1
module	[module] closes ||| [module]	count=2
function_arg	its [arg_2] ||| [function_1] [arg_2]	count=2
arg	ap ||| ap	count=1
arg	template ||| template	count=2
function	directly as for vprintf ||| vprintf	count=1
function	getgrnam in ||| getgrnam r	count=2
function_arg	[function_1] buffer ||| [arg_2] [function_1]	count=2
arg	to by flagp ||| flagp	count=1
arg	buffer with the ||| buffer	count=1
arg	the terminal [arg] has ||| [arg]	count=1
function	to getgrnam in ||| getgrnam r	count=2
arg	instead [arg] ||| [arg]	count=9
arg	[arg_1] x is ||| [arg_2] [arg_1]	count=4
arg	referenced by ||| destructor)(void*)	count=1
function_arg	realpath where [arg_2] ||| [arg_2] [function_1]	count=2
function	to nftw ||| nftw	count=1
function_arg	accommodate [arg_2] ||| [arg_2] [function_1]	count=2
module	by ||| numeric fenv	count=2
arg	absolute priority ||| pid param	count=2
module	this function initializes all ||| core	count=1
module	[module] generates a ||| [module]	count=2
module	computes square ||| numeric	count=1
arg	[arg_1] [arg_2] ||| [arg_1] format [arg_2]	count=8
arg	size bytes into ||| size	count=2
function_arg	saves or [arg_2] ||| [function_1] [arg_2]	count=4
arg	on a condition variable ||| cond	count=3
function	the fputws ||| fputws	count=1
arg	a file stream or ||| stream	count=7
arg	running a command ||| command mode	count=2
arg	blocks using des ||| blocks len	count=1
arg	[arg_1] domainp ||| [arg_1] [arg_2]	count=5
arg	information about the action ||| action	count=1
function	all currently enabled exceptions ||| fegetexcept	count=1
arg	behaves [arg] ||| [arg]	count=1
arg	the line ||| line	count=1
arg	[arg_1] the groups ||| [arg_1] [arg_2]	count=1
arg	gid ||| gid	count=2
function_arg	to accommodate [arg_2] ||| [arg_2] [function_1]	count=2
arg	in ||| flags	count=1
arg	character [arg_2] ||| [arg_1] [arg_2]	count=10
arg	argtypes the information ||| argtypes	count=1
function_arg	[function_1] name ||| [function_1] aton [arg_2] addr	count=1
function_arg	[function_1] spec ||| [arg_2] [function_1]	count=2
module	function ||| core	count=4
module	float ||| math	count=1
function_arg	[function_1] [arg_2] ||| [function_1] resource [arg_2]	count=1
arg	mantissa [arg] scaled ||| [arg]	count=1
arg	atomic object ||| obj order	count=2
arg	aio_fsync with the only ||| op	count=1
function_arg	service named [arg_2] ||| [function_1] [arg_2]	count=2
module	of the given number ||| numeric math	count=3
function_arg	[function_1] size bytes ||| [function_1] filedes buffer [arg_2]	count=1
function	of readdir which performs ||| readdir r	count=1
function	alphabetic ||| walpha	count=1
module	value guaranteed to ||| math	count=1
arg	option opt ||| opt	count=1
function	is a multiple ||| memalign	count=1
arg	in *cos where x ||| x sinx cosx	count=1
module	one string ||| string byte	count=2
arg	a ||| count	count=2
arg	of type struct dirent64 ||| dirent64	count=1
arg	most size bytes ||| size	count=1
arg	file with descriptor filedes ||| filedes offset	count=1
function_arg	but the [arg_2] ||| [function_1] [arg_2] position	count=1
arg	on [arg] has logged ||| [arg]	count=1
arg	range ||| size	count=1
function	equivalent to the fgetwc ||| fgetwc	count=1
function	to the strtoq ||| wcstoq	count=1
arg	character ||| ch	count=50
function	makes sure that ||| setfsent	count=1
function	destroys ||| mtx destroy	count=1
module	wide character according ||| wide	count=2
function	the range [1 2) ||| obstack chunk size	count=1
function	64-bit file offsets on ||| posix fallocate 64	count=1
arg	of the seedval parameter ||| seedval	count=1
arg	like the ||| a	count=1
arg	for the region of [arg_1] [arg_2] the file for the ||| [arg_2] [arg_1]	count=3
function	[function_1] fseeko with ||| [function_2] [function_1]	count=2
function	to positive infinity or ||| infinity	count=1
function	signal ||| signal	count=2
arg	difference that the offset ||| stream offset	count=1
arg	blocks until ||| time_point	count=1
arg	file descriptor is used ||| filedes parameter	count=1
arg	state ||| n ps	count=1
arg	wide string given state ||| src len ps	count=2
function	to the ttyname ||| ttyname r	count=1
module	they return [module] long long ||| [module]	count=1
function_arg	space [arg_2] ||| [function_1] [arg_2]	count=2
arg	user entry [arg_2] ||| [arg_2] [arg_1]	count=2
arg	buffer to the ||| buffer	count=1
arg	address to the ||| addr length	count=1
function_arg	[function_1] template ||| [arg_2] [function_1]	count=4
arg	the parameter func ||| func	count=1
arg	and ||| mode	count=2
function	[function] wide character ||| [function]	count=3
function_arg	[function_1] in *rlp ||| [function_1] resource [arg_2]	count=1
arg	old-action ||| old-action	count=1
arg	is ||| value	count=3
arg	to stream ||| stream	count=1
function_arg	certain amount [arg_2] ||| [function_1] lhs rhs [arg_2]	count=8
arg	in the same way ||| n	count=1
module	in a wide ||| string wide	count=5
function	gathers data from the ||| writev	count=1
function_arg	string within [arg_2] ||| [arg_2] [function_1]	count=2
arg	by signp instead of ||| x signp	count=1
function	but it is also ||| 64	count=2
arg	pointer to a buffer ||| buffer result	count=1
arg	size instead of ||| size	count=1
arg	the file descriptor filedes ||| filedes	count=4
arg	user entry from ||| result_buf	count=1
module	from two wide ||| wide	count=2
module	previously associated with this ||| core	count=1
function	similar to getpwent ||| getpwent	count=1
arg	of option optname ||| optname	count=1
arg	is equivalent to ||| size	count=1
arg	a character ||| ch	count=5
arg	template string template ||| template n	count=1
arg	dir ||| dir	count=1
arg	from stream ||| stream result_buf buffer	count=1
function	file offsets ||| posix fallocate 64	count=1
arg	the classification ||| classification	count=1
arg	in [arg] whether or ||| [arg]	count=1
arg	16-bit wide character ||| s c16	count=1
arg	storage [arg] points ||| [arg]	count=1
arg	wide characters [arg_2] ||| [arg_2] [arg_1]	count=2
arg	cmd ||| cmd	count=1
arg	but [arg] of taking ||| [arg]	count=1
function	adding ||| ptr grow	count=2
arg	style style ||| style	count=1
function	asctime ||| asctime	count=1
function	register to medium ||| ppr med	count=1
arg	oldname ||| oldname	count=1
module	the given ||| math	count=19
arg	to presentation textual ||| af cp buf	count=1
function_arg	has finite [arg_2] ||| [arg_2] [function_1]	count=1
function	snprintf with ||| vsnprintf	count=1
function	with a timeout ||| cnd timedwait	count=1
module	by ||| fenv	count=2
module	next multibyte character ||| string multibyte	count=1
function_arg	assigns an [arg_2] ||| [function_1] [arg_2]	count=1
