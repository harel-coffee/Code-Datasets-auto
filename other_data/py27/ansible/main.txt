core		shell_expand	path expand_relative_paths	shell_expand is needed as os path expanduser does not work
core		get_config	p section key env_var	return a configuration variable with casting :arg p a configparser object to look for the configuration in
core		_get_config	p section key env_var	helper function for get_config
core		load_config_file		load config file order first found is used : env cwd home /etc/ansible
inventory	InventoryScript	get_host_variables	host	runs <script> --host <hostname> to determine additional host variables
inventory		detect_range	line	a helper function that checks a given host line to see if it contains a range pattern described in the docstring above
inventory		expand_hostname_range	line	a helper function that expands a given line that contains a pattern specified in top docstring and returns a list that consists of the
inventory	InventoryDirectory	_add_group	group	merge an existing group or add a new one
inventory	InventoryDirectory	_merge_groups	group newgroup	merge all of instance newgroup into group
inventory	InventoryDirectory	_merge_hosts	host newhost	merge all of instance newhost into host
inventory	InventoryDirectory	get_host_variables	host	gets additional host variables from all inventories
inventory	InventoryParser	_parse	lines	populates self groups from the given array of lines raises an error on
inventory	InventoryParser	_parse_group_name	line	takes a single line and tries to parse it as a group name returns the
inventory	InventoryParser	_parse_variable_definition	line	takes a string and tries to parse it as a variable definition returns
inventory	InventoryParser	_parse_host_definition	line	takes a single line and tries to parse it as a host definition returns
inventory	InventoryParser	_expand_hostpattern	hostpattern	takes a single host pattern and returns a list of hostnames and an optional port number that applies to all of them
inventory	InventoryParser	_Hosts	hostnames port	takes a list of hostnames and a port which may be none and returns a list of hosts (without recreating anything in self
inventory	InventoryParser	_parse_value	v	attempt to transform the string value from an ini file into a basic python object int dict list unicode string etc
inventory	InventoryParser	_compile_patterns		compiles the regular expressions required to parse the inventory and stores them in self
inventory	InventoryParser	_parse	data	populates self groups from the given array of lines raises an error on
inventory	InventoryParser	_parse_host	host_pattern host_data	each host key can be a pattern try to process it and add variables as needed
inventory	InventoryParser	_expand_hostpattern	hostpattern	takes a single host pattern and returns a list of hostnames and an optional port number that applies to all of them
inventory	InventoryParser	_Hosts	hostnames port	takes a list of hostnames and a port which may be none and returns a list of hosts (without recreating anything in self
inventory	InventoryParser	_compile_patterns		compiles the regular expressions required to parse the inventory and stores them in self patterns
inventory	Inventory	get_hosts	pattern ignore_limits ignore_restrictions order	takes a pattern or list of patterns and returns a list of matching
inventory	Inventory	split_host_pattern	cls pattern	takes a string containing host patterns separated by commas or a list thereof and returns a list of single patterns (which may not contain
inventory	Inventory	_evaluate_patterns	patterns	takes a list of patterns and returns a list of matching host names taking into account any negative and intersection patterns
inventory	Inventory	_match_one_pattern	pattern	takes a single pattern and returns a list of matching host names
inventory	Inventory	_split_subscript	pattern	takes a pattern checks if it has a subscript and returns the pattern without the subscript and a start end tuple representing the given
inventory	Inventory	_apply_subscript	hosts subscript	takes a list of hosts and a start end tuple and returns the subset of hosts based on the subscript which may be none to return all hosts
inventory	Inventory	_enumerate_matches	pattern	returns a list of host names matching the given pattern according to the rules explained above in _match_one_pattern
inventory	Inventory	clear_pattern_cache		called exclusively by the add_host plugin to allow patterns to be recalculated
inventory	Inventory	clear_group_dict_cache		called exclusively by the add_host and group_by plugins
inventory	Inventory	get_group_dict		in get_vars() we merge a 'magic' dictionary 'groups' with group name keys and hostname list values into every host variable set
inventory	Inventory	list_hosts	pattern	return a list of hostnames for a pattern
inventory	Inventory	restrict_to_hosts	restriction	restrict list operations to the hosts given in restriction this is used
inventory	Inventory	subset	subset_pattern	limits inventory results to a subset of inventory that matches a given pattern such as to select a given geographic of numeric slice amongst
inventory	Inventory	remove_restriction		do not restrict list operations
inventory	Inventory	is_file		did inventory come from a file? we don't use the equivalent loader methods in inventory due to the fact that the loader does an implict
inventory	Inventory	is_directory	path	is the inventory host list a directory? same caveat for here as with the is_file() method above
inventory	Inventory	basedir		if inventory came from a file what's the directory?
inventory	Inventory	src		if inventory came from a file what's the directory and file name?
inventory	Inventory	playbook_basedir		returns the directory of the current playbook
inventory	Inventory	set_playbook_basedir	dir_name	sets the base directory of the playbook so inventory can use it as a basedir for host_ and group_vars and other things
inventory	Inventory	get_host_vars	host new_pb_basedir return_results	read host_vars/ files
inventory	Inventory	get_group_vars	group new_pb_basedir return_results	read group_vars/ files
inventory	Inventory	_find_group_vars_files	basedir	find group_vars/ files
inventory	Inventory	_find_host_vars_files	basedir	find host_vars/ files
inventory	Inventory	_get_hostgroup_vars	host group new_pb_basedir return_results	loads variables from group_vars/<groupname> and host_vars/<hostname> in directories parallel to the inventory base directory or in the same directory as the playbook
inventory.vars_plugins	VarsModule	run	host vault_password	for backwards compatibility when only vars per host were retrieved
inventory.vars_plugins	VarsModule	get_host_vars	host vault_password	get host specific variables
inventory.vars_plugins	VarsModule	get_group_vars	group vault_password	get group specific variables
cli	ConsoleCLI	default	arg forceshell	actually runs modules
cli	ConsoleCLI	do_shell	arg	you can run shell commands through the shell module
cli	ConsoleCLI	do_forks	arg	set the number of forks
cli	ConsoleCLI	do_verbosity	arg	set verbosity level
cli	ConsoleCLI	do_cd	arg	change active host/group you can use hosts patterns as well eg :
cli	ConsoleCLI	do_list	arg	list the hosts in the current group
cli	ConsoleCLI	do_become	arg	toggle whether plays run with become
cli	ConsoleCLI	do_remote_user	arg	given a username set the remote user plays are run by
cli	ConsoleCLI	do_become_user	arg	given a username set the user that plays are run by when using become
cli	ConsoleCLI	do_become_method	arg	given a become_method set the privilege escalation method when using become
cli	ConsoleCLI	do_check	arg	toggle whether plays run with check mode
cli	ConsoleCLI	do_diff	arg	toggle whether plays run with diff
cli	ConsoleCLI	do_exit	args	exits from the console
cli	VaultCLI	execute_encrypt		encrypt the supplied file using the provided vault secret
cli	VaultCLI	execute_encrypt_string		encrypt the supplied string using the provided vault secret
cli	VaultCLI	execute_decrypt		decrypt the supplied file using the provided vault secret
cli	VaultCLI	execute_create		create and open a file in an editor that will be encryped with the provided vault secret when closed
cli	VaultCLI	execute_edit		open and decrypt an existing vaulted file in an editor that will be encryped again when closed
cli	VaultCLI	execute_view		open decrypt and view an existing vaulted file using a pager using the supplied vault secret
cli	VaultCLI	execute_rekey		re-encrypt a vaulted file with a new secret the previous secret is required
cli	AdHocCLI	parse		create an options parser for bin/ansible
cli	AdHocCLI	run		create and execute the single task playbook
cli	DocCLI	print_paths	finder	returns a string suitable for printing of the search path
cli	PullCLI	parse		create an options parser for bin/ansible
cli	PullCLI	run		use runner lib to do ssh things
cli	CLI	__init__	args callback	base init method for all command line programs
cli	CLI	set_action		get the action the user wants to execute from the sys argv list
cli	CLI	execute		actually runs a child defined method using the execute_<action> pattern
cli	CLI	run		run the ansible command subclasses must implement this method
cli	CLI	ask_vault_passwords		prompt for vault password and/or password change
cli	CLI	ask_passwords		prompt for connection and become passwords if needed
cli	CLI	normalize_become_options		this keeps backwards compatibility with sudo/su self options
cli	CLI	validate_conflicts	vault_opts runas_opts fork_opts	check for conflicting options
cli	CLI	expand_paths	option opt value parser	optparse action callback to convert a path style string arg to a list of path strings
cli	CLI	base_parser	usage output_opts runas_opts meta_opts	create an options parser for most ansible scripts
cli	CLI	parse		parse the command line args this method parses the command line arguments
cli	CLI	version	prog	return ansible version
cli	CLI	version_info	gitinfo	return full ansible version info
cli	CLI	_git_repo_info	repo_path	returns a string containing git branch commit id and commit date
cli	CLI	pager	text	find reasonable way to display text
cli	CLI	pager_pipe	text cmd	pipe text through a pager
cli	CLI	read_vault_password_file	vault_password_file loader	read a vault password from a file or if executable execute the script and
cli	CLI	get_opt	k defval	returns an option from an optparse values instance
cli	GalaxyCLI	parse		create an options parser for bin/ansible
cli	GalaxyCLI	exit_without_ignore	rc	exits with the specified return code unless the
cli	GalaxyCLI	execute_init		creates the skeleton framework of a role that complies with the galaxy metadata format
cli	GalaxyCLI	execute_info		prints out detailed information about an installed role as well as info available from the galaxy api
cli	GalaxyCLI	execute_install		uses the args list of roles to be installed unless -f was specified the list of roles
cli	GalaxyCLI	execute_remove		removes the list of roles passed as arguments from the local system
cli	GalaxyCLI	execute_list		lists the roles installed on the local system or matches a single role passed as an argument
cli	GalaxyCLI	execute_search		searches for roles on the ansible galaxy server
cli	GalaxyCLI	execute_login		verify user's identify via github and retrieve an auth token from ansible galaxy
cli	GalaxyCLI	execute_import		used to import a role into ansible galaxy
cli	GalaxyCLI	execute_setup		setup an integration from github or travis for ansible galaxy roles
cli	GalaxyCLI	execute_delete		delete a role from ansible galaxy
plugins	PluginLoader	format_paths	paths	returns a string suitable for printing of the search path
plugins	PluginLoader	_get_package_paths	subdirs	gets the path of a python package
plugins	PluginLoader	_get_paths	subdirs	return a list of paths to search for plugins in
plugins	PluginLoader	add_directory	directory with_subdir	adds an additional directory to the search path
plugins	PluginLoader	find_plugin	name mod_type ignore_deprecated	find a plugin named name
plugins	PluginLoader	has_plugin	name	checks if a plugin named name exists
plugins	PluginLoader	get	name	instantiates a plugin of the given name using arguments
plugins	PluginLoader	all		instantiates all plugins with the same arguments
plugins.strategy	StrategyModule	run	iterator play_context	the "free" strategy is a bit more complex in that it allows tasks to be sent to hosts as quickly as they can be processed
plugins.strategy	StrategyModule	_get_next_task_lockstep	hosts iterator	returns a list of host task tuples where the task may be a noop task to keep the iterator in lock step across
plugins.strategy	StrategyModule	run	iterator play_context	the linear strategy is simple - get the next task and queue
plugins.strategy	StrategyBase	add_tqm_variables	vars play	base class method to add extra variables/information to the list of task vars sent through the executor engine regarding the task queue manager state
plugins.strategy	StrategyBase	_queue_task	host task task_vars play_context	handles queueing the task up to be sent to a worker
plugins.strategy	StrategyBase	_process_pending_results	iterator one_pass max_passes	reads results off the final queue and takes appropriate action based on the result (executing callbacks updating state etc
plugins.strategy	StrategyBase	_wait_on_pending_results	iterator	wait for the shared counter to drop to zero using a short sleep
plugins.strategy	StrategyBase	_add_host	host_info iterator	helper function to add a new host to inventory based on a task result
plugins.strategy	StrategyBase	_add_group	host result_item	helper function to add a group if it does not exist and to assign the specified host to that group
plugins.strategy	StrategyBase	_load_included_file	included_file iterator is_handler	loads an included yaml file of tasks applying the optional set of variables
plugins.strategy	StrategyBase	run_handlers	iterator play_context	runs handlers on those hosts which have been notified
plugins.strategy	StrategyBase	get_hosts_left	iterator	returns list of available hosts for this iterator by filtering out unreachables
plugins.action	ActionModule	_set_args		set instance variables based on the arguments that were passed
plugins.action	ActionModule	run	tmp task_vars	load yml files recursively from a directory
plugins.action	ActionModule	_traverse_dir_depth		recursively iterate over a directory and sort the files in alphabetical order
plugins.action	ActionModule	_ignore_file	filename	return true if a file matches the list of ignore_files
plugins.action	ActionModule	_is_valid_file_ext	source_file	verify if source file has a valid extension args
plugins.action	ActionModule	_load_files	filename validate_extensions	loads a file and converts the output into a valid python dict
plugins.action	ActionModule	_load_files_in_dir	root_dir var_files	load the found yml files and update/overwrite the dictionary
plugins.action	ActionModule	run	tmp task_vars	handler for file transfer operations
plugins.action	ActionModule	_format_rsync_rsh_target	host path user	formats rsync rsh target escaping ipv6 addresses if needed
plugins.action	ActionModule	_process_remote	task_args host path user	:arg host hostname for the path :arg path file path
plugins.action	ActionModule	_override_module_replaced_vars	task_vars	some vars are substituted into the modules have to make sure
plugins.action	ActionModule	run	tmp task_vars	generates params and passes them on to the rsync module
plugins.action	ActionModule	run	tmp task_vars	handler for unarchive operations
plugins.action	ActionModule	_assemble_from_fragments	src_path delimiter compiled_regexp ignore_hidden	assemble a file from a directory of fragments
plugins.action	ActionModule	run	tmp task_vars	handler for template operations
plugins.action	ActionBase	run	tmp task_vars	action plugins should implement this method to perform their tasks
plugins.action	ActionBase	_configure_module	module_name module_args task_vars	handles the loading and templating of the module code through the modify_module() function
plugins.action	ActionBase	_compute_environment_string	raw_environment_out	builds the environment string to be used when executing the remote task
plugins.action	ActionBase	_early_needs_tmp_path		determines if a temp path should be created before the action is executed
plugins.action	ActionBase	_is_pipelining_enabled	module_style wrap_async	determines if we are required and can do pipelining
plugins.action	ActionBase	_make_tmp_path	remote_user	create and return a temporary path on a remote box
plugins.action	ActionBase	_should_remove_tmp_path	tmp_path	determine if temporary path should be deleted or kept by user request/config
plugins.action	ActionBase	_remove_tmp_path	tmp_path	remove a temporary path we created
plugins.action	ActionBase	_transfer_data	remote_path data	copies the module data out to the temporary module path
plugins.action	ActionBase	_fixup_perms	remote_path remote_user execute recursive	we need the files we upload to be readable and sometimes executable by the user being sudo'd to but we want to limit other people's access
plugins.action	ActionBase	_fixup_perms2	remote_paths remote_user execute	we need the files we upload to be readable and sometimes executable by the user being sudo'd to but we want to limit other people's access
plugins.action	ActionBase	_remote_chmod	paths mode sudoable	issue a remote chmod command
plugins.action	ActionBase	_remote_chown	paths user sudoable	issue a remote chown command
plugins.action	ActionBase	_remote_set_user_facl	paths user mode sudoable	issue a remote call to setfacl
plugins.action	ActionBase	_execute_remote_stat	path all_vars follow tmp	get information from remote file
plugins.action	ActionBase	_remote_checksum	path all_vars follow	produces a remote checksum given a path
plugins.action	ActionBase	_remote_expand_user	path sudoable	takes a remote path and performs tilde expansion on the remote host
plugins.action	ActionBase	_strip_success_message	data	removes the become-success message from the data
plugins.action	ActionBase	_execute_module	module_name module_args tmp task_vars	transfer and run a module along with its arguments
plugins.action	ActionBase	_low_level_execute_command	cmd sudoable in_data executable	this is the function which executes the low level shell command which may be commands to create/remove directories for temporary files or to
plugins.action	ActionBase	_find_needle	dirname needle	find a needle in haystack of paths optionally using 'dirname' as a subdir
plugins.action	ActionModule	run	tmp task_vars	handler for package operations
plugins.action	ActionModule	run	tmp task_vars	handler for package operations
plugins.action	ActionModule	run	tmp task_vars	handler for file transfer operations
plugins.action	ActionModule	_create_content_tempfile	content	create a tempfile containing defined content
plugins.action	ActionModule	run	tmp task_vars	run the pause action module
plugins.action	ActionModule	run	tmp task_vars	handler for fetch operations
plugins.shell	ShellBase	set_user_facl	paths user mode	only sets acls for users as that's really all we need
plugins.shell	ShellBase	expand_user	user_home_path	return a command to expand tildes in a path it can be either "~" or "~username"
plugins.shell	ShellBase	append_command	cmd cmd_to_append	append an additional command if supported by the shell
plugins.shell	ShellBase	wrap_for_exec	cmd	wrap script execution with any necessary decoration (eg '&' for quoted powershell script paths)
plugins.shell	ShellModule	_unquote	value	remove any matching quotes that wrap the given value
plugins.shell	ShellModule	_escape	value include_vars	return value escaped for use in powershell command
plugins.shell	ShellModule	_encode_script	script as_list strict_mode preserve_rc	convert a powershell script to a single base64-encoded command
plugins.cache	BaseFileCacheModule	get	key	this checks the in memory cache first as the fact was not expired at 'gather time'
plugins.cache	BaseFileCacheModule	_load	filepath	read data from a filepath and return it as a value :arg filepath the filepath to read from
plugins.cache	BaseFileCacheModule	_dump	value filepath	write data to a filepath
plugins.cache	FactCache	copy		return a primitive copy of the keys and values from the cache
plugins.cache	FactCache	flush		flush the fact cache of all keys
plugins.lookup		make_rdata_dict	rdata	while the 'dig' lookup plugin supports anything which dnspython supports out of the box the following supported_types list describes which
plugins.lookup	LookupModule	run	terms variables	terms contains a string with things to dig' for we support the
plugins.lookup	LookupModule	reset		set sensible defaults
plugins.lookup	LookupModule	parse_kv_args	args	parse key-value style arguments
plugins.lookup	LookupModule	parse_simple_args	term	parse the shortcut forms return true/false
plugins.lookup		file_props	root path	returns dictionary with file properties or return none on failure
plugins.lookup	LookupModule	read_shelve	shelve_filename key	read the value of "key" from a shelve file
plugins.lookup		_parse_parameters	term	hacky parsing of params see https //github
plugins.lookup		_read_password_file	b_path	read the contents of a password file and return it
plugins.lookup		_gen_candidate_chars	characters	generate a string containing all valid chars as defined by characters :arg characters a list of character specs
plugins.lookup		_random_password	length chars	return a random password string of length containing only chars :kwarg length the number of characters in the new password
plugins.lookup		_random_salt		return a text string suitable for use as a salt for the hash functions we use to encrypt passwords
plugins.lookup		_parse_content	content	parse our password data format into password and salt
plugins.lookup		_format_content	password salt encrypt	format the password and salt for saving :arg password the plaintext password to save
plugins.lookup		_parse_params	term	safely split parameter term to preserve spaces
plugins.lookup	LookupBase	run	terms variables	when the playbook specifies a lookup this method is run the
plugins.lookup	LookupBase	find_file_in_search_path	myvars subdir needle ignore_missing	return a file needle in the task's expected search path
plugins.connection	Connection	exec_command	request	sends the request to the node and returns the reply
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to remote
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from remote to local
plugins.connection	Connection	_connect		connect to the zone nothing to do here
plugins.connection	Connection	_buffered_exec_command	cmd stdin	run a command on the zone this is only needed for implementing
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the zone
plugins.connection	Connection	_prefix_login_path	remote_path	make sure that we put files into a standard path if a path is relative then we need to choose where to put it
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to zone
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from zone to local
plugins.connection	Connection	close		terminate the connection nothing to do here
plugins.connection	Connection	update_play_context	play_context	updates the play context information for the connection
plugins.connection	Connection	_connect		connections to the device and sets the terminal type
plugins.connection	Connection	close_shell		closes the vty shell if the device supports multiplexing
plugins.connection	Connection	receive	obj	handles receiving of output from command
plugins.connection	Connection	send	obj	sends the command to the device in the opened shell
plugins.connection	Connection	_strip	data	removes ansi codes from device response
plugins.connection	Connection	_handle_prompt	resp obj	matches the command prompt and responds
plugins.connection	Connection	_sanitize	resp obj	removes elements from the response before returning to the caller
plugins.connection	Connection	_find_prompt	response	searches the buffered response for a matching command prompt
plugins.connection	Connection	alarm_handler	signum frame	alarm handler raised in case of command timeout
plugins.connection	Connection	exec_command	cmd	executes the cmd on in the shell and returns the output the method accepts two forms of cmd
plugins.connection	Connection	_connect		connect to the chroot nothing to do here
plugins.connection	Connection	_buffered_exec_command	cmd stdin	run a command on the chroot this is only needed for implementing
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the chroot
plugins.connection	Connection	_prefix_login_path	remote_path	make sure that we put files into a standard path if a path is relative then we need to choose where to put it
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to chroot
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from chroot to local
plugins.connection	Connection	close		terminate the connection nothing to do here
plugins.connection	Connection	_connect		connect to the local host nothing to do here
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the local host
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to local
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from local to local -- for copatibility
plugins.connection	Connection	close		terminate the connection nothing to do here
plugins.connection	Connection	_connect		activates the connection object
plugins.connection	Connection	transport_test	connect_timeout	test the transport mechanism if available
plugins.connection	Connection	validate_user		checks the remote uid of the accelerated daemon vs the
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the remote host
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to remote
plugins.connection	Connection	fetch_file	in_path out_path	save a remote file to the specified path
plugins.connection	Connection	close		terminate the connection
plugins.connection	Connection	exec_command	cmd become_user sudoable executable	run a command on the remote minion
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to remote
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from remote to local
plugins.connection	Connection	close		terminate the connection nothing to do here
plugins.connection	Connection	_connect		connect to lxd nothing to do here
plugins.connection	Connection	exec_command	cmd in_data sudoable	execute a command on the lxd host
plugins.connection	Connection	put_file	in_path out_path	put a file from local to lxd
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from lxd to local
plugins.connection	Connection	close		close the connection nothing to do here
plugins.connection	Connection	transport_test	connect_timeout	test the transport mechanism if available
plugins.connection	Connection	_connect_uncached		activates the connection object
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the remote host
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to remote
plugins.connection	Connection	fetch_file	in_path out_path	save a remote file to the specified path
plugins.connection	Connection	_save_ssh_host_keys	filename	not using the paramiko save_ssh_host_keys function as we want to add new ssh keys at the bottom so folks
plugins.connection	Connection	close		terminate the connection
plugins.connection	Connection	transport_test	connect_timeout	test the transport mechanism if available
plugins.connection	Connection	set_host_overrides	host hostvars	override winrm-specific options from host variables
plugins.connection	Connection	_winrm_connect		establish a winrm connection over http/https
plugins.connection		_ssh_retry	func	decorator to retry ssh/scp/sftp in the case of a connection failure
plugins.connection	Connection	transport_test	connect_timeout	test the transport mechanism if available
plugins.connection	Connection	_create_control_path	host port user	make a hash for the controlpath based on con attributes
plugins.connection	Connection	_persistence_controls	b_command	takes a command array and scans it for controlpersist and controlpath settings and returns two booleans indicating whether either was found
plugins.connection	Connection	_add_args	b_command b_args explanation	adds arguments to the ssh command and displays a caller-supplied explanation of why
plugins.connection	Connection	_build_command	binary	takes a binary ssh scp sftp and optional extra arguments and returns a command line as an array that can be passed to subprocess
plugins.connection	Connection	_send_initial_data	fh in_data	writes initial data to the stdin filehandle of the subprocess and closes it
plugins.connection	Connection	_terminate_process	p	terminate a process ignoring errors
plugins.connection	Connection	_examine_output	source state b_chunk sudoable	takes a string extracts complete lines from it tests to see if they are a prompt error message etc
plugins.connection	Connection	_run	cmd in_data sudoable checkrc	starts the command and communicates with it until it ends
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the remote host
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to remote
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from remote to local
plugins.connection	ConnectionBase	connected		read-only property holding whether the connection to the remote host is active or closed
plugins.connection	ConnectionBase	_become_method_supported		checks if the current class supports this privilege escalation method
plugins.connection	ConnectionBase	set_host_overrides	host hostvars	an optional method which can be used to set connection plugin parameters from variables set on the host or groups to which the host belongs
plugins.connection	ConnectionBase	_split_ssh_args	argstring	takes a string like '-o foo=1 -o bar="foo bar"' and returns a list ['-o', 'foo=1', '-o', 'bar=foo bar'] that can be added to
plugins.connection	ConnectionBase	transport		string used to identify this connection class from other classes
plugins.connection	ConnectionBase	_connect		connect to the host we've been initialized with
plugins.connection	ConnectionBase	exec_command	cmd in_data sudoable	run a command on the remote host
plugins.connection	ConnectionBase	put_file	in_path out_path	transfer a file from local to remote
plugins.connection	ConnectionBase	fetch_file	in_path out_path	fetch a file from remote to local
plugins.connection	ConnectionBase	close		terminate the connection
plugins.connection	Connection	_connect		connect to the lxc nothing to do here
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the chroot
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to lxc
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from lxc to local
plugins.connection	Connection	close		terminate the connection nothing to do here
plugins.connection	Connection	_get_docker_remote_user		get the default user configured in the docker container
plugins.connection	Connection	_build_exec_cmd	cmd	build the local docker exec command to run cmd on remote_host if remote_user is available and is supported by the docker
plugins.connection	Connection	_connect	port	connect to the container nothing to do
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the docker host
plugins.connection	Connection	_prefix_login_path	remote_path	make sure that we put files into a standard path if a path is relative then we need to choose where to put it
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to docker container
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from container to local
plugins.connection	Connection	close		terminate the connection nothing to do for docker
plugins.connection	Connection	_connect		connect to the lxc nothing to do here
plugins.connection	Connection	_buffered_exec_command	cmd stdin	run a command on the chroot this is only needed for implementing
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the chroot
plugins.connection	Connection	_prefix_login_path	remote_path	make sure that we put files into a standard path if a path is relative then we need to choose where to put it
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to lxc
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from lxc to local
plugins.connection	Connection	close		terminate the connection nothing to do here
plugins.connection	Connection	_connect		connect to the jail nothing to do here
plugins.connection	Connection	_buffered_exec_command	cmd stdin	run a command on the jail this is only needed for implementing
plugins.connection	Connection	exec_command	cmd in_data sudoable	run a command on the jail
plugins.connection	Connection	_prefix_login_path	remote_path	make sure that we put files into a standard path if a path is relative then we need to choose where to put it
plugins.connection	Connection	put_file	in_path out_path	transfer a file from local to jail
plugins.connection	Connection	fetch_file	in_path out_path	fetch a file from jail to local
plugins.connection	Connection	close		terminate the connection nothing to do here
plugins.terminal	TerminalBase	_exec_cli_command	cmd check_rc	executes a cli command on the device
plugins.terminal	TerminalBase	_get_prompt		returns the current prompt from the device
plugins.terminal	TerminalBase	on_open_shell		called after the ssh session is established this method is called right after the invoke_shell() is called from
plugins.terminal	TerminalBase	on_close_shell		called before the connection is closed this method gets called once the connection close has been requested
plugins.terminal	TerminalBase	on_authorize	passwd	called when privilege escalation is requested this method is called when the privilege is requested to be elevated
plugins.terminal	TerminalBase	on_deauthorize		called when privilege deescalation is requested this method is called when the privilege changed from escalated
plugins.filter		json_query	data expr	query data using jmespath query language http //jmespath org example
plugins.filter		to_yaml	a	make verbose human readable yaml
plugins.filter		to_nice_yaml	a indent	make verbose human readable yaml
plugins.filter		to_json	a	convert the value to json
plugins.filter		to_nice_json	a indent	make verbose human readable json
plugins.filter		to_bool	a	return a bool for the arg
plugins.filter		strftime	string_format second	return a date string using string see https //docs python org/2/library/time html#time strftime for format
plugins.filter		quote	a	return its argument quoted for shell usage
plugins.filter		fileglob	pathname	return list of matched regular files for glob
plugins.filter		regex_replace	value pattern replacement ignorecase	perform a re sub returning a string
plugins.filter		regex_findall	value regex multiline ignorecase	perform re findall and return the list of matches
plugins.filter		regex_search	value regex	perform re search and return the list of matches or a backref
plugins.filter		ternary	value true_val false_val	value true_val : false_val
plugins.filter		regex_escape	string	escape all regular expressions special characters from string
plugins.filter		failed		test if task result yields failed
plugins.filter		success		test if task result yields success
plugins.filter		changed		test if task result yields changed
plugins.filter		skipped		test if task result yields skipped
plugins.filter		do_groupby	environment value attribute	overridden groupby filter for jinja2 to address an issue with jinja2>=2
plugins.filter		ipaddr	value query version alias	check if string is an ip address or network and filter it
plugins.filter		ipsubnet	value query index	manipulate ipv4/ipv6 subnets
plugins.filter		nthhost	value query	get the nth host within a given network
plugins.filter		slaac	value query	get the slaac address within given network
plugins.filter		hwaddr	value query alias	check if string is a hw/mac address and filter it
plugins.filter		ip4_hex	arg	convert an ipv4 address to hexadecimal notation
plugins.filter		human_readable	size isbits unit	return a human readable string
plugins.filter		human_to_bytes	size default_unit isbits	return bytes count from a human readable string
plugins.callback	CallbackModule	send_facts	host data	sends facts to foreman to be parsed by foreman_ansible fact parser
plugins.callback	CallbackModule	send_reports	stats	send reports to foreman to be parsed by its config report importer
plugins.callback		dict_diff	prv nxt	return a dict of keys that differ with another config object
plugins.callback		colorize	msg color	given a string add necessary codes to format the string
plugins.callback	CallbackModule	__init__	display	selective py callback plugin
plugins.callback	CallbackModule	v2_playbook_on_play_start	play	run on start of the play
plugins.callback	CallbackModule	v2_playbook_on_task_start	task	run when a task starts
plugins.callback	CallbackModule	v2_runner_on_ok	result	run when a task finishes correctly
plugins.callback	CallbackModule	v2_playbook_on_stats	stats	display info about playbook statistics
plugins.callback	CallbackModule	v2_runner_on_skipped	result	run when a task is skipped
plugins.callback	CallbackModule	v2_playbook_on_stats	stats	display info about playbook statistics
plugins.callback	CallbackModule	_dump_results	result	return the text to output for a result
plugins.callback	CallbackModule	_record_task	task	logs the start of each task
plugins.callback	CallbackModule	v2_playbook_on_play_start	play	display play start messages
plugins.callback	CallbackModule	v2_playbook_on_stats	stats	display info about playbook statistics
plugins.callback	CallbackBase	_handle_warnings	res	display warnings if enabled and any exist in the result
plugins.callback	CallbackModule	v2_playbook_on_play_start	play	display playbook and play start messages
plugins.callback	CallbackModule	_start_task	task	record the start of a task for one or more hosts
plugins.callback	CallbackModule	_finish_task	status result	record the results of a task for a single host
plugins.callback	CallbackModule	_build_test_case	task_data host_data	build a testcase from the given taskdata and hostdata
plugins.callback	CallbackModule	_cleanse_string	value	convert surrogate escapes to the unicode replacement character to avoid xml encoding errors
plugins.callback	CallbackModule	_generate_report		generate a testsuite report from the collected taskdata and hostdata
plugins.callback	CallbackModule	write_tree_file	hostname buf	write something into treedir/hostname
plugins.callback	CallbackModule	send_msg	msg msg_format color notify	method for sending a message to hipchat
plugins.callback	CallbackModule	v2_playbook_on_play_start	play	display playbook and play start messages
plugins.callback	CallbackModule	playbook_on_stats	stats	display info about playbook statistics
plugins.callback	CallbackModule	_command_generic_msg	host result caption	output the result of a command run
compat.selectors		_fileobj_to_fd	fileobj	return a file descriptor from a file object if
compat.selectors	BaseSelector	_fileobj_lookup	fileobj	return a file descriptor from a file object
compat.selectors	BaseSelector	register	fileobj events data	register a file object for a set of events to monitor
compat.selectors	BaseSelector	unregister	fileobj	unregister a file object from being monitored
compat.selectors	BaseSelector	modify	fileobj events data	change a registered file object monitored events and data
compat.selectors	BaseSelector	select	timeout	perform the actual selection until some monitored file objects are ready or the timeout expires
compat.selectors	BaseSelector	close		close the selector this must be called to ensure that all
compat.selectors	BaseSelector	get_key	fileobj	return the key associated with a registered file object
compat.selectors	BaseSelector	get_map		return a mapping of file objects to selector keys
compat.selectors	BaseSelector	_key_from_fd	fd	return the key associated to a given file descriptor return none if it is not found
playbook	Block	get_vars		blocks do not store variables directly however they may be a member of a role or task include which does so return those if present
playbook	Block	preprocess_data	ds	if a simple task is given an implicit block for that single task
playbook	Block	serialize		override of the default serialize method since when we're serializing a task we don't want to include the attribute list of tasks
playbook	Block	deserialize	data	override of the default deserialize method to match the above overridden
playbook	Block	_get_parent_attribute	attr extend prepend	generic logic to get the attribute or parent attribute for a block value
playbook	Block	filter_tagged_tasks	play_context all_vars	creates a new block with task lists filtered based on the tags contained within the play_context object
playbook	Block	all_parents_static		determine if all of the parents of this block were statically loaded or not
playbook		load_list_of_blocks	ds play parent_block role	given a list of mixed task/block data parsed from yaml return a list of block() objects where implicit blocks
playbook		load_list_of_tasks	ds play block role	given a list of task datastructures parsed from yaml return a list of task() or taskinclude() objects
playbook		load_list_of_roles	ds play current_role_path variable_manager	loads and returns a list of roleinclude objects from the datastructure
playbook	Task	__init__	block role task_include	constructors a task without the task load classmethod it will be pretty blank
playbook	Task	get_path		return the absolute path of the task with its line number
playbook	Task	get_name		return the name of the task
playbook	Task	__repr__		returns a human readable representation of the task
playbook	Task	_preprocess_loop	ds new_ds k v	take a lookup plugin name and store it correctly
playbook	Task	preprocess_data	ds	tasks are especially complex arguments so need pre-processing
playbook	Task	post_validate	templar	override of base class post_validate to also do final validation on the block and task include if any to which this task belongs
playbook	Task	_post_validate_loop_args	attr value templar	override post validation for the loop args field which is templated specially in the taskexecutor class when evaluating loops
playbook	Task	_post_validate_environment	attr value templar	override post validation of vars on the play as we don't want to template these too early
playbook	Task	_post_validate_changed_when	attr value templar	changed_when is evaluated after the execution of the task is complete and should not be templated during the regular post_validate step
playbook	Task	_post_validate_failed_when	attr value templar	failed_when is evaluated after the execution of the task is complete and should not be templated during the regular post_validate step
playbook	Task	_post_validate_until	attr value templar	until is evaluated after the execution of the task is complete and should not be templated during the regular post_validate step
playbook	Task	set_loader	loader	sets the loader on this object and recursively on parent child objects
playbook	Task	_get_parent_attribute	attr extend prepend	generic logic to get the attribute or parent attribute for a task value
playbook	Task	_get_attr_environment		override for the 'tags' getattr fetcher used from base
playbook	Task	get_search_path		return the list of paths you should search for files in order
playbook	Play	get_name		return the name of the play
playbook	Play	preprocess_data	ds	adjusts play datastructure to cleanup old/legacy items
playbook	Play	_load_tasks	attr ds	loads a list of blocks from a list which may be mixed tasks/blocks
playbook	Play	_load_pre_tasks	attr ds	loads a list of blocks from a list which may be mixed tasks/blocks
playbook	Play	_load_post_tasks	attr ds	loads a list of blocks from a list which may be mixed tasks/blocks
playbook	Play	_load_handlers	attr ds	loads a list of blocks from a list which may be mixed handlers/blocks
playbook	Play	_load_roles	attr ds	loads and returns a list of roleinclude objects from the datastructure
playbook	Play	_compile_roles		handles the role compilation step returning a flat list of tasks with the lowest level dependencies first
playbook	Play	compile_roles_handlers		handles the role handler compilation step returning a flat list of handlers this is done for all roles in the play
playbook	Play	compile		compiles and returns the task list for this play compiled from the roles which are themselves compiled recursively and/or the list of
playbook	Base	preprocess_data	ds	infrequently used method to do some pre-processing of legacy terms
playbook	Base	load_data	ds variable_manager loader	walk the input datastructure and assign any values
playbook	Base	_validate_attributes	ds	ensures that there are no keys in the datastructure which do not map to attributes for this object
playbook	Base	validate	all_vars	validation that is done at parse time not load time
playbook	Base	squash		evaluates all attributes and sets them to the evaluated version so that all future accesses of attributes do not need to evaluate
playbook	Base	copy		create a copy of this object and return it
playbook	Base	post_validate	templar	we can't tell that everything is of the right type until we have all the variables
playbook	Base	_load_vars	attr ds	vars in a play can be specified either as a dictionary directly or as a list of dictionaries
playbook	Base	_extend_value	value new_value prepend	will extend the value given with new_value and will turn both into lists if they are not so already
playbook	Base	dump_attrs		dumps all attributes to a dictionary
playbook	Base	serialize		serializes the object derived from the base object into a dictionary of values
playbook	Base	deserialize	data	given a dictionary of values load up the field attributes for this object
playbook	PlayContext	set_play	play	configures this connection information instance with data from the play class
playbook	PlayContext	set_options	options	configures this connection information instance with data from options specified by the user on the command line
playbook	PlayContext	set_task_and_variable_override	task variables templar	sets attributes from the task if they are set which will override those from the play
playbook	PlayContext	make_become_cmd	cmd executable	helper function to create privilege escalation commands
playbook	PlayContext	update_vars	variables	adds 'magic' variables relating to connections to the variable dictionary provided
playbook	Conditional	_get_attr_when		override for the 'tags' getattr fetcher used from base
playbook	Conditional	evaluate_conditional	templar all_vars	loops through the conditionals set on this object returning false if any of them evaluate as such
playbook	Conditional	_check_conditional	conditional templar all_vars	this method does the low-level evaluation of each conditional set on this object using jinja2 to wrap the conditionals for
playbook	Become	_preprocess_data_become	ds	preprocess the playbook data for become attributes this is called from the base object's preprocess_data() method which
playbook	Become	set_become_defaults	become become_method become_user	if we are becoming someone else but some fields are unset
playbook	PlaybookInclude	load_data	ds basedir variable_manager loader	overrides the base load_data(), as we're actually going to return a new
playbook	PlaybookInclude	preprocess_data	ds	regorganizes the data for a playbookinclude datastructure to line
playbook	PlaybookInclude	_preprocess_include	ds new_ds k v	splits the include line up into filename and parameters
playbook	Handler	__repr__		returns a human readable representation of the handler
playbook	Taggable	_get_attr_tags		override for the 'tags' getattr fetcher used from base
playbook	Taggable	evaluate_tags	only_tags skip_tags all_vars	this checks if the current item should be executed depending on tag options
playbook	TaskInclude	get_vars		we override the parent task() classes get_vars here because we need to include the args of the include into the vars as
playbook	Attribute	__init__	isa private default required	:class attribute specifies constraints for attributes of objects which derive from playbook data
playbook.role	RoleMetadata	load	data owner variable_manager loader	returns a new rolemetadata object based on the datastructure passed in
playbook.role	RoleMetadata	_load_dependencies	attr ds	this is a helper loading function for the dependencies list
playbook.role	RoleMetadata	_load_galaxy_info	attr ds	this is a helper loading function for the galaxy info entry in the metadata which returns a galaxyinfo object rather than
playbook.role	RoleDefinition	_load_role_name	ds	returns the role name either the role or name field from
playbook.role	RoleDefinition	_load_role_path	role_name	the 'role', as specified in the ds or as a bare string can either be a simple name or a full path
playbook.role	RoleDefinition	_split_role_params	ds	splits any random role params off from the role spec and store
playbook.role		hash_params	params	construct a data structure of parameters that is hashable
playbook.role	Role	_resolve_main	basepath main	flexibly handle variations in main filenames
playbook.role	Role	_load_dependencies		recursively loads role dependencies from the metadata list of
playbook.role	Role	add_parent	parent_role	adds a role to the list of this roles parents
playbook.role	Role	get_all_dependencies		returns a list of all deps built recursively from all child dependencies in the proper order in which they should be executed or evaluated
playbook.role	Role	has_run	host	returns true if this role has been iterated over completely and
playbook.role	Role	compile	play dep_chain	returns the task list for this role which is created by first recursively compiling the tasks for all direct dependencies and
parsing	ModuleArgsParser	_split_module_string	module_string	when module names are expressed like action copy src=a dest=b
parsing	ModuleArgsParser	_handle_shell_weirdness	action args	given an action name and an args dictionary return the proper action name and args dictionary
parsing	ModuleArgsParser	_normalize_parameters	thing action additional_args	arguments can be fuzzy deal with all the forms
parsing	ModuleArgsParser	_normalize_new_style_args	thing action	deals with fuzziness in new style module invocations
parsing	ModuleArgsParser	_normalize_old_style_args	thing	deals with fuzziness in old-style (action/local_action) module invocations
parsing	ModuleArgsParser	parse		given a task in one of the supported forms parses and returns returns the action arguments and delegate_to values for the
parsing		unquote	data	removes first and last quotes from a string if the string starts and ends with the same quotes
parsing		parse_kv	args check_raw	convert a string of key/value items to a dict if any free-form params
parsing		_get_quote_state	token quote_char	the goal of this block is to determine if the quoted string
parsing		_count_jinja2_blocks	token cur_depth open_token close_token	this function counts the number of opening/closing blocks for a
parsing		split_args	args	splits args on whitespace but intelligently reassembles those that may have been split over a jinja2 block or quotes
parsing	DataLoader	load	data file_name show_content	creates a python datastructure from the given data which can be either a json or yaml string
parsing	DataLoader	load_from_file	file_name	loads data from a file which can contain either json or yaml
parsing	DataLoader	is_executable	path	is the given path executable?
parsing	DataLoader	_safe_load	stream file_name	implements yaml safe_load(), except using our custom loader class
parsing	DataLoader	_get_file_contents	file_name	reads the file contents from the given file name and will decrypt them if they are found to be vault-encrypted
parsing	DataLoader	_handle_error	yaml_exc file_name show_content	optionally constructs an object ansiblebaseyamlobject to encapsulate the file name/position where a yaml exception occurred and raises an ansibleparsererror
parsing	DataLoader	get_basedir		returns the current basedir
parsing	DataLoader	set_basedir	basedir	sets the base directory used to find files when a relative path is given
parsing	DataLoader	path_dwim	given	make relative paths work like folks expect
parsing	DataLoader	_is_role	path	imperfect role detection roles are still valid w/o main yml/yaml/etc
parsing	DataLoader	path_dwim_relative	path dirname source is_role	find one file in either a role or playbook dir with or without explicitly named dirname subdirs
parsing	DataLoader	path_dwim_relative_stack	paths dirname source is_role	find one file in first path in stack taking roles into account and adding play basedir as fallback :arg paths a list of text strings which are the paths to look for the filename in
parsing	DataLoader	_create_content_tempfile	content	create a tempfile containing defined content
parsing	DataLoader	get_real_file	file_path decrypt	if the file is vault encrypted return a path to a temporary decrypted file
parsing	DataLoader	cleanup_tmp_file	file_path	removes any temporary files created from a previous call to get_real_file
parsing.yaml	AnsibleVaultEncryptedUnicode	__init__	ciphertext	a ansibleunicode with a vault attribute that can decrypt it
parsing.utils		parse_address	address allow_ranges	takes a string and returns a host port tuple if the host is none then
parsing.utils		jsonify	result format	format json output uncompressed or uncompressed
parsing.vault		is_encrypted	data	test if this is vault encrypted data blob
parsing.vault		is_encrypted_file	file_obj start_pos count	test if the contents of a file obj are a vault encrypted data blob
parsing.vault	VaultLib	is_encrypted	data	test if this is vault encrypted data
parsing.vault	VaultLib	encrypt	plaintext	vault encrypt a piece of data
parsing.vault	VaultLib	decrypt	vaulttext filename	decrypt a piece of vault encrypted data
parsing.vault	VaultLib	_format_output	b_ciphertext	add header and format to 80 columns
parsing.vault	VaultLib	_split_header	b_vaulttext	retrieve information about the vault and clean the data when data is saved it has a header prepended and is formatted into 80
parsing.vault	VaultEditor	_shred_file_custom	tmp_path	"destroy a file when shred core-utils is not available unix shred' destroys files "so that they can be recovered only with great difficulty with
parsing.vault	VaultEditor	_shred_file	tmp_path	securely destroy a decrypted file note standard limitations of gnu shred apply (for flash overwriting would have no effect
parsing.vault	VaultEditor	create_file	filename	create a new encrypted file
parsing.vault	VaultEditor	write_data	data filename shred	write the data bytes to given path this is used to write a byte string to a file or stdout
parsing.vault	VaultAES	_aes_derive_key_and_iv	b_password b_salt key_length iv_length	create a key and an initialization vector
parsing.vault	VaultAES	encrypt	b_plaintext b_password key_length	read plaintext data from in_file and write encrypted to out_file
parsing.vault	VaultAES	decrypt	b_vaulttext b_password key_length	decrypt the given data and return it
parsing.vault	VaultAES256	_is_equal	b_a b_b	comparing 2 byte arrrays in constant time to avoid timing attacks
vars	HostVars	raw_get	host_name	similar to __getitem__, however the returned data is not run through the templating engine to expand variables in the hostvars
vars		get_reserved_names	include_private	this function returns the list of reserved names associated with play objects
vars		warn_if_reserved	myvars	this function warns if any variable passed conflicts with internally reserved names
vars		preprocess_vars	a	ensures that vars contained in the parameter passed in are returned as a list of dictionaries to ensure for instance
vars		strip_internal_keys	dirty	all keys stating with _ansible_ are internal so create a copy of the 'dirty' dict
vars	VariableManager	extra_vars		ensures a clean copy of the extra_vars are made
vars	VariableManager	extra_vars	value	ensures a clean copy of the extra_vars are used to set the value
vars	VariableManager	options_vars		ensures a clean copy of the options_vars are made
vars	VariableManager	options_vars	value	ensures a clean copy of the options_vars are used to set the value
vars	VariableManager	_preprocess_vars	a	ensures that vars contained in the parameter passed in are returned as a list of dictionaries to ensure for instance
vars	VariableManager	get_vars	loader play host task	returns the variables with optional "context" given via the parameters for the play host and task (which could possibly result in different
vars	VariableManager	_get_magic_variables	loader play host task	returns a dictionary of so-called "magic" variables in ansible which are special variables we set internally for use
vars	VariableManager	_get_inventory_basename	path	returns the basename minus the extension of the given path so the
vars	VariableManager	_load_inventory_file	path loader filter_ext	helper function which loads the file and gets the
vars	VariableManager	add_host_vars_file	path loader	loads and caches a host_vars file in the _host_vars_files dict
vars	VariableManager	add_group_vars_file	path loader	loads and caches a host_vars file in the _host_vars_files dict
vars	VariableManager	clear_facts	hostname	clears the facts for a host
vars	VariableManager	set_host_facts	host facts	sets or updates the given facts for a host in the fact cache
vars	VariableManager	set_nonpersistent_facts	host facts	sets or updates the given facts for a host in the fact cache
vars	VariableManager	set_host_variable	host varname value	sets a value in the vars_cache for a host
template		safe_eval	expr locals include_exceptions	this is intended for allowing things like with_items a_list_variable
template	AnsibleJ2Vars	__init__	templar globals locals	initializes this object with a valid templar() object as well as several dictionaries of variables representing
template	AnsibleJ2Vars	add_locals	locals	if locals are provided create a copy of self containing those locals in addition to what is already in this variable proxy
template		_escape_backslashes	data jinja_env	double backslashes within jinja2 expressions a user may enter something like this in a playbook :
template		_count_newlines_from_end	in_str	counts the number of newlines at the end of a string this is used during
template	AnsibleContext	_is_unsafe	val	our helper function which will also recursively check dict and list entries due to the fact that they may be repr'd and contain
template	AnsibleContext	resolve	key	the intercepted resolve(), which uses the helper above to set the internal flag whenever an unsafe variable value is returned
template	Templar	_get_filters		returns filter plugins after loading and caching them if need be
template	Templar	_get_tests		returns tests plugins after loading and caching them if need be
template	Templar	_get_extensions		return jinja2 extensions to load
template	Templar	_clean_data	orig_data	remove jinja2 template tags from data
template	Templar	set_available_variables	variables	sets the list of template variables this templar instance will use to template things so we don't have to pass them around between
template	Templar	template	variable convert_bare preserve_trailing_newlines escape_backslashes	templates possibly recursively any given data as input if convert_bare is
template	Templar	is_template	data	lets us know if data has a template
template	Templar	templatable	data	returns true if the data can be templated w/o errors
template	Templar	_contains_vars	data	returns true if the data contains a variable pattern
template	Templar	_convert_bare_variable	variable bare_deprecated	wraps a bare string which may have an attribute portion ie foo bar
template	Templar	_finalize	thing	a custom finalize method for jinja2 which prevents none from being returned
executor	TaskExecutor	run		the main executor entrypoint where we determine if the specified task requires looping and either runs the task with self
executor	TaskExecutor	_get_loop_items		loads a lookup plugin to handle the with_* portion of a task if specified and returns the items result
executor	TaskExecutor	_run_loop	items	runs the task with the loop items specified and collates the result into an array named 'results' which is inserted into the final result
executor	TaskExecutor	_squash_items	items loop_var variables	squash items down to a comma-separated list for certain modules which support it typically package management modules
executor	TaskExecutor	_execute	variables	the primary workhorse of the executor system this runs the task
executor	TaskExecutor	_poll_async_result	result templar task_vars	polls for the specified jid to be complete
executor	TaskExecutor	_get_connection	variables templar	reads the connection property for the host and returns the
executor	TaskExecutor	_get_action_handler	connection templar	returns the correct action plugin to handle the requestion task action
executor	ModuleDepFinder	__init__		walk the ast tree for the python module
executor		_get_shebang	interpreter task_vars args	note not stellar api returns none instead of always returning a shebang line
executor		recursive_finder	name data py_module_names py_module_cache	using moduledepfinder make sure we have all of the module_utils files that the module its module_utils files needs
executor		_find_module_utils	module_name b_module_data module_path module_args	given the source of the module convert it to a jinja2 template to insert module code and return whether it's a new or old style module
executor		modify_module	module_name module_path module_args task_vars	used to insert chunks of code into modules before transfer rather than doing regular python imports
executor	PlayIterator	get_original_task	host task	finds the task in the task list which matches the uuid of the given task
executor	AggregateStats	increment	what host	helper function to bump a statistic
executor	AggregateStats	summarize	host	return information about a particular host
executor	AggregateStats	set_custom_stats	which what host	allow setting of a custom stat
executor	AggregateStats	update_custom_stats	which what host	allow aggregation of a custom stat
executor	TaskResult	_check_key	key	get a specific key from the result or it's items
executor	PlaybookExecutor	run		run the given playbook based on the settings in the play which may limit the runs to serialized groups etc
executor	PlaybookExecutor	_get_serialized_batches	play	returns a list of hosts subdivided into batches based on the serial size specified in the play
executor	PlaybookExecutor	_generate_retry_inventory	retry_path replay_hosts	called when a playbook run fails it generates an inventory which allows
executor	TaskQueueManager	_initialize_notified_handlers	play	clears and initializes the shared notified handlers dict with entries for each handler in the play which is an empty array that will contain
executor	TaskQueueManager	load_callbacks		loads all available callbacks with the exception of those which utilize the callback_type option
executor	TaskQueueManager	run	play	iterates over the roles/tasks in a play using the given or default strategy for queueing tasks
executor.process	WorkerProcess	run		called when the process is started pushes the result onto the
errors	AnsibleError	_get_error_lines_from_file	file_name line_number	returns the line in the file which corresponds to the reported error location as well as the line preceding it (if the error did not
errors	AnsibleError	_get_extended_error		given an object reporting the location of the exception in a file return detailed information regarding it including
utils		unfrackpath	path follow	returns a path that is free of symlinks (if follow=true), environment variables relative path traversals and symbols (~) :arg path a byte or text string representing a path to be canonicalized
utils		makedirs_safe	path mode	safe way to create dirs in muliprocess/thread environments
utils		get_docstring	filename verbose	search for assignment of the documentation and examples variables in the given file
utils		pct_to_int	value num_items min_value	converts a given value to a percentage if specified as "x%", otherwise converts the given value to an integer
utils		parsecolor	color	sgr parameter string for the specified color name
utils		stringc	text color	string in color
utils		colorize	lead num color	print 'lead' = 'num' in 'color'
utils		_validate_mutable_mappings	a b	internal convenience function to ensure arguments are mutablemappings
utils		combine_vars	a b	return a copy of dictionaries of variables based on configured hash behavior
utils		merge_hash	a b	recursively merges hash b into a so that keys from b take precedence over keys from a
utils		isidentifier	ident	determines if string is valid python identifier using the ast module
utils		unicode_wrap	func	if a function returns a string force it to be a text string
utils		secure_hash_s	data hash_func	return a secure hash hex digest of data
utils		secure_hash	filename hash_func	return a secure hash hex digest of local file none if file is not present or a directory
utils	Display	display	msg color stderr screen_only	display a message to the user note msg *must* be a unicode string to prevent unicodeerror tracebacks
utils	Display	deprecated	msg version removed	used to print out a deprecation message
utils	Display	banner	msg color cows	prints a header-looking line with cowsay or stars wit hlength depending on terminal width 3 minimum
module_utils	KubernetesAnsibleModule	argspec		build the module argument spec from the helper argspec removing any extra attributes not needed by
module_utils	KubernetesAnsibleModule	execute_module		performs basic crud operations on the model object ends by calling
module_utils	KubernetesAnsibleModule	load_resource_definition	src	load the requested src path
module_utils	KubernetesAnsibleModule	resource_to_parameters	resource	converts a resource definition to module parameters
module_utils		uldap		return a configured univention uldap object
module_utils		ldap_search	filter base attr	replaces uldaps search and uses a generator
module_utils		module_by_name	module_name_	returns an initialized umc module identified by the given name
module_utils		get_umc_admin_objects		convenience accessor for getting univention admin objects
module_utils		umc_module_for_add	module container_dn superordinate	returns an umc module object prepared for creating a new entry
module_utils		umc_module_for_edit	module object_dn superordinate	returns an umc module object prepared for editing an existing entry
module_utils		create_containers_and_parents	container_dn	create a container and if needed the parents containers
module_utils		axapi_call	module url post	returns a datastructure based on the result of the api call
module_utils		axapi_call_v3	module url method body	returns a datastructure based on the result of the api call
module_utils		axapi_enabled_disabled	flag	the axapi uses 0/1 integer values for flags rather than strings or booleans so convert the given flag to a 0 or 1
module_utils		get_platform		what's the platform? example linux is a platform
module_utils		get_distribution		return the distribution name
module_utils		get_distribution_version		return the distribution version
module_utils		get_all_subclasses	cls	used by modules like hardware or network fact classes to retrieve all subclasses of a given class
module_utils		load_platform_subclass	cls	used by modules like user to have different implementations based on detected platform see user
module_utils		json_dict_unicode_to_bytes	d encoding errors	recursively convert dict keys and values to byte str
module_utils		json_dict_bytes_to_unicode	d encoding errors	recursively convert dict keys and values to byte str
module_utils		return_values	obj	return native stringified values from datastructures
module_utils		remove_values	value no_log_strings	remove strings in no_log_strings from value if value is a container
module_utils		heuristic_log_sanitize	data no_log_values	remove strings that look like passwords from log messages
module_utils		human_to_bytes	number default_unit isbits	convert number in string format into bytes (ex '2k' => 2048) or using unit argument
module_utils		is_executable	path	is the given path executable? limitations
module_utils		_load_params		read the modules parameters and store them globally
module_utils		env_fallback		load value from environment
module_utils		_lenient_lowercase	lst	lowercase elements of a list
module_utils	AnsibleModule	__init__	argument_spec bypass_checks no_log check_invalid_arguments	common code for quickly building an ansible module in python
module_utils	AnsibleModule	load_file_common_arguments	params	many modules deal with files this encapsulates common options that the file module accepts such that it is directly
module_utils	AnsibleModule	is_special_selinux_path	path	returns a tuple containing (true selinux_context) if the given path is on a nfs or other 'special' fs mount point otherwise the return will be false none
module_utils	AnsibleModule	add_path_info	kwargs	for results that are files supplement the info about the file in the return path with stats about the file path
module_utils	AnsibleModule	_check_locale		uses the locale module to test the currently set locale
module_utils	AnsibleModule	_check_required_arguments	spec param	ensure all required arguments are present
module_utils	AnsibleModule	_check_required_if	spec	ensure that parameters which conditionally required are present
module_utils	AnsibleModule	_check_argument_values	spec param	ensure all arguments have the requested values and there are no stray arguments
module_utils	AnsibleModule	_check_argument_types	spec param	ensure all arguments have the requested type
module_utils	AnsibleModule	_load_params		read the input and set the params attribute
module_utils	AnsibleModule	_log_invocation		log that ansible ran the module
module_utils	AnsibleModule	get_bin_path	arg required opt_dirs	find system executable in path
module_utils	AnsibleModule	boolean	arg	return a bool for the arg
module_utils	AnsibleModule	exit_json		return from the module without error
module_utils	AnsibleModule	fail_json		return from the module with an error message
module_utils	AnsibleModule	fail_on_missing_params	required_params	this is for checking for required params when we can not check via argspec because we need more information than is simply given in the argspec
module_utils	AnsibleModule	digest_from_file	filename algorithm	return hex digest of local file for a digest_method specified by name or none if file is not present
module_utils	AnsibleModule	md5	filename	return md5 hex digest of local file using digest_from_file()
module_utils	AnsibleModule	sha1	filename	return sha1 hex digest of local file using digest_from_file()
module_utils	AnsibleModule	sha256	filename	return sha-256 hex digest of local file using digest_from_file()
module_utils	AnsibleModule	backup_local	fn	make a date-marked backup of the specified file return true or false on success or failure
module_utils	AnsibleModule	atomic_move	src dest unsafe_writes	atomically move src to dest copying attributes from dest returns true on success it uses os
module_utils	AnsibleModule	run_command	args check_rc close_fds executable	execute a command returns rc stdout and stderr
module_utils	Cli	get_config	flags	retrieves the current config from the device or cache
module_utils	Cli	run_commands	commands check_rc	run list of commands on remote device and return results
module_utils	Cli	load_config	config	sends configuration commands to the remote device
module_utils	Nxapi	_request_builder	commands output version chunk	encodes a nxapi json request message
module_utils	Nxapi	get_config	flags	retrieves the current config from the device or cache
module_utils	Nxapi	run_commands	commands check_rc	run list of commands on remote device and return results
module_utils	Nxapi	load_config	commands	sends the ordered set of commands to the device
module_utils		rax_slugify	value	prepend a key with rax_ and normalize the key name
module_utils		rax_clb_node_to_dict	obj	function to convert a clb node object to a dict
module_utils		rax_to_dict	obj obj_type	generic function to convert a pyrax object to a dict
module_utils		rax_find_bootable_volume	module rax_module server exit	find a servers bootable volume
module_utils		rax_find_image	module rax_module image exit	find a server image by id or name
module_utils		rax_find_volume	module rax_module name	find a block storage volume by id or name
module_utils		rax_find_network	module rax_module network	find a cloud network by id or name
module_utils		rax_find_server	module rax_module server	find a cloud server by id or name
module_utils		rax_find_loadbalancer	module rax_module loadbalancer	find a cloud load balancer by id or name
module_utils		rax_argument_spec		return standard base dictionary used for the argument_spec
module_utils		rax_required_together		return the default list used for the required_together argument to
module_utils		setup_rax_module	module rax_module region_required	set up pyrax in a standard way for all modules
module_utils	AnsibleCloudStack	get_vpc	key	return a vpc dictionary or the value of given key of
module_utils	AnsibleCloudStack	is_vpc_network	network_id	returns true if network is in vpc
module_utils	AnsibleCloudStack	get_network	key	return a network dictionary or the value of given key of
module_utils		find_vm_by_id	content vm_id vm_id_type datacenter	uuid is unique to a vm every other id returns the first match
module_utils		gather_vm_facts	content vm	gather facts from vim virtualmachine object
module_utils		fetch_file_from_guest	content vm username password	use vmware's filemanager api to fetch a file over http
module_utils		push_file_to_guest	content vm username password	use vmware's filemanager api to fetch a file over http
module_utils		add_git_host_key	module url accept_hostkey create_dir	idempotently add a git url hostkey
module_utils		is_ssh_url	url	check if url is ssh
module_utils		get_fqdn_and_port	repo_url	chop the hostname and port out of a url
module_utils		add_host_key	module fqdn port key_type	use ssh-keyscan to add the hostkey
module_utils		to_bytes	obj encoding errors nonstring	make sure that a string is a byte string :arg obj an object to make sure is a byte string
module_utils		to_text	obj encoding errors nonstring	make sure that a string is a text string :arg obj an object to make sure is a text string
module_utils	CloudRetry	status_code_from_exception	error	return the status code from the exception object args
module_utils	CloudRetry	found	response_code	return true if the response code to retry on was found
module_utils	CloudRetry	backoff	cls tries delay backoff	retry calling the cloud decorated function using an exponential backoff
module_utils	Rhsm	_read_config	rhsm_conf	load rhsm configuration from /etc/rhsm/rhsm conf
module_utils	Rhsm	enable		enable the system to receive updates from subscription-manager
module_utils	Rhsm	configure		configure the system as directed for registration with rhn
module_utils	Rhsm	is_registered		determine whether the current system returns
module_utils	Rhsm	register	username password autosubscribe activationkey	register the current system to the provided rhn server
module_utils	Rhsm	unsubscribe		unsubscribe a system from all subscribed channels
module_utils	Rhsm	unregister		unregister a currently registered system
module_utils	Rhsm	subscribe	regexp	subscribe current system to available pools matching the specified
module_utils	RhsmPools	_load_product_list		loads list of all available pools for system in data structure
module_utils	RhsmPools	filter	regexp	return a list of rhsmpools whose name matches the provided regular expression
module_utils		get_dict_of_struct	struct connection fetch_nested attributes	convert sdk struct type into dictionary
module_utils		engine_version	connection	return string representation of ovirt engine version
module_utils		create_connection	auth	create a connection to python sdk from task auth parameter
module_utils		convert_to_bytes	param	this method convert units to bytes which follow iec standard
module_utils		follow_link	connection link	this method returns the entity of the element which link points to
module_utils		get_link_name	connection link	this method returns the name of the element which link points to
module_utils		equal	param1 param2 ignore_case	compare two parameters and return if they are equal
module_utils		search_by_attributes	service	search for the entity by attributes nested entities don't support search
module_utils		search_by_name	service name	search for the entity by its name nested entities don't support search
module_utils		get_entity	service	ignore sdk error in case of getting an entity from service
module_utils		get_id_by_name	service name raise_error ignore_case	search an entity id by it's name
module_utils		wait	service condition fail_condition timeout	wait until entity fulfill expected condition
module_utils		ovirt_facts_full_argument_spec		extend parameters of facts module with parameters which are common to all ovirt facts modules
module_utils		ovirt_full_argument_spec		extend parameters of module with parameters which are common to all ovirt modules
module_utils		check_params	module	most modules must have either name or id specified
module_utils		check_support	version connection module params	check if parameters used by user are supported by ovirt python sdk and ovirt engine
module_utils	BaseModule	build_entity		this method should return ovirt python sdk type which we want to create or update initialized by values passed by ansible module
module_utils	BaseModule	param	name default	return a module parameter specified by it's name
module_utils	BaseModule	update_check	entity	this method handle checks whether the entity values are same as values passed to ansible module
module_utils	BaseModule	pre_create	entity	this method is called right before entity is created
module_utils	BaseModule	post_create	entity	this method is called right after entity is created
module_utils	BaseModule	post_update	entity	this method is called right after entity is updated
module_utils	BaseModule	create	entity result_state fail_condition search_params	method which is called when state of the entity is 'present' if user
module_utils	BaseModule	pre_remove	entity	this method is called right before entity is removed
module_utils	BaseModule	remove	entity search_params	method which is called when state of the entity is 'absent' if user
module_utils	BaseModule	action	action entity action_condition wait_condition	this method is executed when we want to change the state of some ovirt entity
module_utils	BaseModule	search_entity	search_params	always first try to search by id, if id isn't specified check if user constructed special search in search_params,
module_utils		gcdns_connect	module provider	return a gcp connection for google cloud dns
module_utils		unexpected_error_msg	error	create an error string based on passed in error
module_utils		_filter_non_json_lines	data	used to filter unrelated output around module json output like messages from tcagetattr or where dropbear spews motd on every single command which is nuts
module_utils		_botocore_exception_maybe		allow for boto3 not being installed when using these utils by wrapping botocore
module_utils		get_ec2_creds	module	for compatibility mode with old modules that don't/can't yet
module_utils		boto_fix_security_token_in_profile	conn profile_name	monkey patch for boto issue boto/boto#2100
module_utils		ec2_connect	module	return an ec2 connection
module_utils		paging	pause marker_property	adds paging to boto retrieval functions that support a 'marker' this is configurable as not all boto functions seem to use the
module_utils		ansible_dict_to_boto3_filter_list	filters_dict	convert an ansible dict of filters to list of dicts that boto3 can use args
module_utils		boto3_tag_list_to_ansible_dict	tags_list	convert a boto3 list of resource tags to a flat dict of key value pairs args
module_utils		ansible_dict_to_boto3_tag_list	tags_dict	convert a flat dict of key value pairs representing aws resource tags to a boto3 list of dicts args
module_utils		get_ec2_security_group_ids_from_names	sec_group_list ec2_connection vpc_id boto3	return list of security group ids from security group names note that security group names are not unique
module_utils		sort_json_policy_dict	policy_dict	sort any lists in an iam json policy so that comparison of two policies with identical values but different orders will return true
module_utils		map_complex_type	complex_type type_map	allows to cast elements within a dictionary to a specific type example of usage
module_utils	Cli	get_config	flags	retrieves the current config from the device or cache
module_utils	Cli	run_commands	commands check_rc	run list of commands on remote device and return results
module_utils	Cli	configure	commands	sends configuration commands to the remote device
module_utils	Cli	load_config	commands commit replace	loads the config commands onto the remote device
module_utils	Eapi	run_commands	commands	runs list of commands on remote device and returns results
module_utils	Eapi	get_config	flags	retrieves the current config from the device or cache
module_utils	Eapi	configure	commands	sends the ordered set of commands to the device
module_utils	Eapi	load_config	config commit replace	loads the configuration onto the remote devices if the device doesn't support configuration sessions this will
module_utils	NetworkConfig	difference	other match path replace	perform a config diff against the another network config
module_utils		generic_urlparse	parts	returns a dictionary of url parts as parsed by urlparse but accounts for the fact that older versions of that
module_utils		RedirectHandlerFactory	follow_redirects validate_certs	this is a class factory that closes over the value of follow_redirects so that the redirecthandler class has access to
module_utils		build_ssl_validation_error	hostname port paths exc	inteligently build out the sslvalidationerror based on what support
module_utils	SSLValidationHandler	validate_proxy_response	response valid_codes	make sure we get back a valid code from the proxy
module_utils	SSLValidationHandler	detect_no_proxy	url	detect if the 'no_proxy' environment variable is set and honor those locations
module_utils		open_url	url data headers method	sends a request via http s or ftp using urllib2 python2 or urllib python3
module_utils		basic_auth_header	username password	takes a username and password and returns a byte string suitable for using as value of an authorization header to do basic auth
module_utils		url_argument_spec		creates an argument spec that can be used with any module
module_utils		fetch_url	module url data headers	sends a request via http s or ftp needs the module as parameter :arg module the ansiblemodule (used to get username password etc
module_utils		avi_common_argument_spec		returns common arguments for all avi modules
module_utils		ansible_return	module rsp changed req	helper function to return the right ansible return based on the error code and changed status
module_utils	DimensionDataModule	__init__	module	create a new dimensiondatamodule
module_utils	DimensionDataModule	get_credentials		get user_id and key from module configuration environment or dotfile
module_utils	DimensionDataModule	get_mcp_version	location	get the mcp version for the specified location
module_utils	DimensionDataModule	get_network_domain	locator location	retrieve a network domain by its name or id
module_utils	DimensionDataModule	get_vlan	locator location network_domain	get a vlan object by its name or id
module_utils	DimensionDataModule	argument_spec		build an argument specification for a dimension data module
module_utils	DimensionDataModule	argument_spec_with_wait		build an argument specification for a dimension data module that includes "wait for completion" arguments
module_utils	DimensionDataModule	required_together		get the basic argument specification for dimension data modules indicating which arguments are must be specified together
module_utils		get_dd_regions		get the list of available regions whose vendor is dimension data
module_utils		is_uuid	u version	test if valid v4 uuid
module_utils	AnsibleDockerClient	get_container	name	lookup a container and return the inspection results
module_utils	AnsibleDockerClient	find_image	name tag	lookup an image and return the inspection results
module_utils	AnsibleDockerClient	_image_lookup	name tag	including a tag in the name parameter sent to the docker-py images method does not work consistently
module_utils	AnsibleDockerClient	pull_image	name tag	pull an image
module_utils		_get_gcp_ansible_credentials	module	helper to fetch creds from ansiblemodule object
module_utils		_get_gcp_environ_var	var_name default_value	wrapper around os environ get call
module_utils		_get_gcp_environment_credentials	service_account_email credentials_file project_id	helper to look in environment variables for credentials
module_utils		_get_gcp_libcloud_credentials	service_account_email credentials_file project_id	helper to look for libcloud secrets py file
module_utils		_get_gcp_credentials	module require_valid_json check_libcloud	obtain gcp credentials by trying various methods
module_utils		_validate_credentials_file	module credentials_file require_valid_json check_libcloud	check for valid credentials file
module_utils		gcp_connect	module provider get_driver user_agent_product	return a google libcloud driver connection
module_utils		get_google_cloud_credentials	module scopes	get credentials object for use with google cloud client
module_utils		get_google_api_auth	module scopes user_agent_product user_agent_version	authentication for use with google-python-api-client
module_utils		check_min_pkg_version	pkg_name minimum_version	minimum required version is >= installed version
module_utils		unexpected_error_msg	error	create an error string based on passed in error
module_utils		check_params	params field_list	helper to validate params
module_utils		api_wrapper	func	catch api errors decorator
module_utils		get_system	module	return system object or fail
module_utils		infinibox_argument_spec		return standard base dictionary used for the argument_spec argument in ansiblemodule
module_utils		infinibox_required_together		return the default list used for the required_together argument to ansiblemodule
module_utils		rate_limit_argument_spec	spec	creates an argument spec for working with rate limiting
module_utils		retry_argument_spec	spec	creates an argument spec for working with retrying
module_utils		rate_limit	rate rate_limit	rate limiting decorator
module_utils		tower_auth_config	module	tower_auth_config attempts to load the tower-cli cfg file
module_utils		tower_check_mode	module	execute check mode logic for ansible tower modules
module_utils		eseries_host_argument_spec		retrieve a base argument specifiation common to all netapp e-series modules
module_utils		request	url data headers method	issue an http request to a url retrieving an optional json response
module_utils		sysv_is_enabled	name	this function will check if the service name supplied
module_utils		get_sysv_script	name	this function will return the expected path for an init script corresponding to the service name supplied
module_utils		sysv_exists	name	this function will return true or false depending on the existance of an init script corresponding to the service name supplied
module_utils		fail_if_missing	module found service msg	this function will return an error or exit gracefully depending on check mode status and if the service is missing or not
module_utils		daemonize	module cmd	execute a command while detaching as a deamon returns rc stdout and stderr
module_utils		get_exception		get the current exception
module_utils	LinuxHardware	get_dmi_facts		learn dmi facts from system try /sys first for dmi related facts
module_utils	LinuxHardware	get_lvm_facts		get lvm facts if running as root and lvm utils are available
module_utils	FreeBSDHardware	get_dmi_facts		learn dmi facts from system
module_utils	AIX	get_vgs_facts		get vg and pv facts rootvg
module_utils		get_file_lines	path	get list of lines from file
module_utils		ismount	path	test whether a path is a mount point clone of os
module_utils	AzureRMModuleBase	fail	msg	shortcut for calling module fail()
module_utils	AzureRMModuleBase	validate_tags	tags	check if tags dictionary contains string string pairs
module_utils	AzureRMModuleBase	update_tags	tags	call from the module to update metadata tags returns tuple
module_utils	AzureRMModuleBase	has_tags	obj_tags tag_list	used in fact modules to compare object tags to list of parameter tags return true if list of parameter tags
module_utils	AzureRMModuleBase	get_resource_group	resource_group	fetch a resource group
module_utils	AzureRMModuleBase	serialize_obj	obj class_name enum_modules	return a json representation of an azure object
module_utils	AzureRMModuleBase	get_poller_result	poller wait	consistent method of waiting on and retrieving results from azure's long poller
module_utils	AzureRMModuleBase	check_provisioning_state	azure_object requested_state	check an azure object's provisioning state if something did not complete the provisioning
module_utils	AzureRMModuleBase	create_default_pip	resource_group location name allocation_method	create a default public ip address <name>01 to associate with a network interface
module_utils	AzureRMModuleBase	create_default_securitygroup	resource_group location name os_type	create a default security group <name>01 to associate with a network interface if a security group matching
module_utils		check_aos_version	module min	check if the library aos-pyez is present
module_utils		get_aos_session	module auth	resume an existing session and return an aos object
module_utils		find_collection_item	collection item_name item_id	find collection_item based on name or id from a collection object
module_utils		content_to_dict	module content	convert 'content' into a python dict based on 'content_format'
module_utils		do_load_resource	module collection name	create a new object collection item by loading a datastructure directly
module_utils		gce_connect	module provider	return a gcp connection for google compute engine
module_utils		unexpected_error_msg	error	create an error string based on passed in error
module_utils		_get_quote_state	token quote_char	the goal of this block is to determine if the quoted string
module_utils		_count_jinja2_blocks	token cur_depth open_token close_token	this function counts the number of opening/closing blocks for a
module_utils		split_args	args	splits args on whitespace but intelligently reassembles those that may have been split over a jinja2 block or quotes
module_utils		unquote	data	removes first and last quotes from a string if the string starts and ends with the same quotes
module_utils.six		_add_doc	func doc	add documentation to a function
module_utils.six		_import_module	name	import module returning the module after the last dot
module_utils.six	_SixMetaPathImporter	is_package	fullname	return true if the named module is a package
module_utils.six		add_move	move	add an item to six moves
module_utils.six		remove_move	name	remove item from six moves
module_utils.six		with_metaclass	meta	create a base class with a metaclass
module_utils.six		add_metaclass	metaclass	class decorator for creating a class with a metaclass
module_utils.six		python_2_unicode_compatible	klass	a decorator that defines __unicode__ and __str__ methods under python 2
module_utils.six		_find_module	name path	alternative to imp find_module that can also search in subpackages
module_utils.six		_get_six_source		import the newest version of the six library that's available
modules.crypto	CertificateSigningRequest	generate	module	generate the certificate signing request
modules.crypto	CertificateSigningRequest	remove		remove the certificate signing request
modules.crypto	CertificateSigningRequest	dump		serialize the object into a dictionnary
modules.crypto	PrivateKey	generate	module	generate a keypair
modules.crypto	PrivateKey	remove		remove the private key from the filesystem
modules.crypto	PrivateKey	dump		serialize the object into a dictionnary
modules.crypto	PublicKey	generate	module	generate the public key
modules.crypto	PublicKey	remove		remove the public key from the filesystem
modules.crypto	PublicKey	dump		serialize the object into a dictionnary
modules.notification	Pushover	run	priority msg	do whatever it is we do
modules.notification		send_message	module client_id client_secret topic	send message to typetalk
modules.notification		escape_quotes	text	backslash any quotes within text
modules.notification		send_msg	msg server port channel	send message to irc
modules.notification		send_msg_v1	module token room msg_from	sending message to hipchat v1 server
modules.notification		send_msg_v2	module token room msg_from	sending message to hipchat v2 server
modules.notification		spark_message	module	when check mode is specified establish a read only connection that does not return any user specific data to validate connectivity
modules.source_control	Hg	get_revision		hg id -b -i -t returns a string in the format "<changeset>[+] <branch_name> <tag>"
modules.source_control	Hg	at_revision		there is no point in pulling from a potentially down/slow remote site if the desired changeset is already the current changeset
modules.source_control	Subversion	_exec	args check_rc	execute a subversion command and return output if check_rc is false returns the return code instead of the output
modules.source_control	Subversion	is_svn_repo		checks if path is a svn repo
modules.source_control	Subversion	checkout		creates new svn working directory if it does not already exist
modules.source_control	Subversion	export	force	export svn repo to directory
modules.source_control	Subversion	switch		change working directory's repo
modules.source_control	Subversion	update		update existing svn working directory
modules.source_control	Subversion	revert		revert svn working directory
modules.source_control	Subversion	get_revision		revision and url of subversion working directory
modules.source_control	Subversion	get_remote_revision		revision and url of subversion working directory
modules.source_control	Subversion	has_local_mods		true if revisioned files have been added or modified unrevisioned files are ignored
modules.source_control		head_splitter	headfile remote module fail_on_error	extract the head reference
modules.source_control		get_version	module git_path dest ref	samples the version of the git repo
modules.source_control		clone	git_path module repo dest	makes a new git repo if it does not already exist
modules.source_control		reset	git_path module dest	resets the index and working tree to head
modules.source_control		get_diff	module git_path dest repo	return the difference between 2 versions
modules.source_control		get_head_branch	git_path module dest remote	determine what branch head is associated with this is partly
modules.source_control		get_remote_url	git_path module dest remote	return url of remote source for repo
modules.source_control		set_remote_url	git_path module repo dest	updates repo from remote sources
modules.source_control		fetch	git_path module repo dest	updates repo from remote sources
modules.source_control		submodule_update	git_path module dest track_submodules	init and update any submodules
modules.source_control		set_remote_branch	git_path module dest remote	set refs for the remote branch version this assumes the branch does not yet exist locally and is therefore also not checked out
modules.source_control		git_version	git_path module	return the installed version of git
modules.source_control	Bzr	get_version		samples the version of the bzr branch
modules.source_control	Bzr	clone		makes a new bzr branch if it does not already exist
modules.source_control	Bzr	reset	force	resets the index and working tree to head
modules.source_control	Bzr	fetch		updates branch from remote sources
modules.source_control	Bzr	switch_version		once pulled switch to a particular revno or revid
modules.database.postgresql		partial	f	partial function application
modules.database.postgresql	Connection	encoding		connection encoding in python-compatible form
modules.database.postgresql	Connection	manipulate_privs	obj_type privs objs roles	manipulate database object privileges
modules.database.postgresql		user_add	cursor user password role_attr_flags	create a new database user role
modules.database.postgresql		user_alter	cursor module user password	change user password and/or attributes return true if changed false otherwise
modules.database.postgresql		user_delete	cursor user	try to remove a user returns true if successful otherwise false
modules.database.postgresql		has_table_privileges	cursor user table privs	return the difference between the privileges that a user already has and the privileges that they desire to have
modules.database.postgresql		has_database_privileges	cursor user db privs	return the difference between the privileges that a user already has and the privileges that they desire to have
modules.database.postgresql		parse_role_attrs	role_attr_flags	parse role attributes string for user creation
modules.database.postgresql		parse_privs	privs db	parse privilege string to determine permissions for database db
modules.database.postgresql		lang_exists	cursor lang	checks if language exists for db
modules.database.postgresql		lang_istrusted	cursor lang	checks if language is trusted for db
modules.database.postgresql		lang_altertrust	cursor lang trust	changes if language is trusted for db
modules.database.postgresql		lang_add	cursor lang trust	adds language for db
modules.database.postgresql		lang_drop	cursor lang cascade	drops language for db
modules.database.mongodb		check_compatibility	module client	check the compatibility between the driver and the database
modules.database.mongodb		user_find	client user db_name	check if the user exists
modules.database.mysql		privileges_get	cursor user host	mysql doesn't have a better method of getting privileges aside from the show grants query syntax which requires us to then parse the returned string
modules.database.mysql		privileges_unpack	priv mode	take a privileges string typically passed as a parameter and unserialize it into a dictionary the same format as privileges_get() above
modules.database.mysql		typedvalue	value	convert value to number whenever possible return same value otherwise
modules.database.mysql		setvariable	cursor mysqlvar value	set a global mysql variable to a given value the db driver will handle quoting of the given value based on its
modules.remote_management		wakeonlan	module mac broadcast port	send a magic wake-on-lan packet
modules.system		is_available	name ubuntuMode	check if the given locale is available on the system this is done by
modules.system		is_present	name	checks if the given locale is currently installed
modules.system		fix_case	name	locale -a might return the encoding in either lower or upper case
modules.system		replace_line	existing_line new_line	replaces lines in /etc/locale gen
modules.system		set_locale	name enabled	sets the state of the locale defaults to enabled
modules.system		apply_change	targetState name	create or remove locale
modules.system		apply_change_ubuntu	targetState name	create or remove locale
modules.system		_get_dev_size	dev module	return size in bytes of device returns int
modules.system		_get_fs_size	fssize_cmd dev module	return size in bytes of filesystem on device returns int
modules.system	CronVar	write	backup_file	write the crontab to the system saves all information
modules.system	CronVar	render		render a proper crontab
modules.system	CronVar	_read_user_execute		returns the command line for reading a crontab
modules.system	CronVar	_write_execute	path	return the command line for writing a crontab
modules.system	Timezone	__new__	cls module	return the platform-specific subclass
modules.system	Timezone	__init__	module	initialize of the class
modules.system	Timezone	abort	msg	abort the process with error message
modules.system	Timezone	execute		execute the shell command
modules.system	Timezone	diff	phase1 phase2	calculate the difference between given 2 phases
modules.system	Timezone	check	phase	check the state in given phase and set it to self value
modules.system	Timezone	change		make the changes effect based on self value
modules.system	Timezone	get	key phase	get the value for the key at the given phase
modules.system	Timezone	set	key value	set the value for the key (of course for the phase 'after')
modules.system	NosystemdTimezone	_edit_file	filename regexp value	replace the first matched line with given value
modules.system	SmartOSTimezone	get	key phase	lookup the current timezone name in /etc/default/init if anything else
modules.system	SmartOSTimezone	set	key value	set the requested timezone through sm-set-timezone an invalid timezone name will be rejected and we have no further input validation to perform
modules.system	BSDTimezone	get	key phase	lookup the current timezone by resolving /etc/localtime
modules.system		_load_dist_subclass	cls	used for derivative implementations
modules.system	CronTab	write	backup_file	write the crontab to the system saves all information
modules.system	CronTab	render		render this crontab as it would be in the crontab
modules.system	CronTab	_read_user_execute		returns the command line for reading a crontab
modules.system	CronTab	_write_execute	path	return the command line for writing a crontab
modules.system		enforce_state	module params	add or remove key
modules.system		sanity_check	module host key sshkeygen	check supplied key is sensible host and key are parameters provided by the user if the host
modules.system		search_for_host_key	module host key hash_host	search_for_host_key module host key path sshkeygen -> (found replace_or_add found_line) looks up host and keytype in the known_hosts file path if it's there looks to see
modules.system		normalize_known_hosts_key	key	transform a key either taken from a known_host file or provided by the user into a normalized form
modules.system		_escape_fstab	v	escape invalid characters in fstab fields
modules.system		set_mount	module args	set/change a mount point location in fstab
modules.system		unset_mount	module args	remove a mount point from fstab
modules.system		mount	module args	mount up a path or remount if needed
modules.system		umount	module path	unmount a path
modules.system		remount	module args	try to use 'remount' first and fallback to u mount if unsupported
modules.system		is_bind_mounted	module linux_mounts dest src	return whether the dest is bind mounted :arg module the ansiblemodule used for helper functions
modules.system		get_linux_mounts	module	gather mount information
modules.system		parse_unit	size_str unit	parses a string containing a size of information
modules.system		parse_partition_info	parted_output unit	parses the output of parted and transforms the data into a dictionary
modules.system		format_disk_size	size_bytes unit	formats a size in bytes into a different unit like parted does it doesn't
modules.system		get_unlabeled_device_info	device unit	fetches device information directly from the kernel and it is used when parted cannot work because of a missing label
modules.system		get_device_info	device unit	fetches information about a disk and its partitions and it returns a dictionary
modules.system		check_parted_label	device	determines if parted needs a label to complete its duties versions prior
modules.system		parted_version		returns the major and minor version of parted installed on the system
modules.system		parted	script device align	runs a parted script
modules.system		read_record	file_path default	reads the first line of a file and returns it
modules.system		part_exists	partitions attribute number	looks if a partition that has a specific value for a specific attribute actually exists
modules.system		check_size_format	size_str	checks if the input string is an allowed size
modules.system		action_handler	action_func action_func_args	function to wrap calls to make actions on firewalld in try/except
modules.system		check_cert_present	module executable keystore_path keystore_pass	check if certificate with alias is present in keystore
modules.system		import_cert_url	module executable url port	import certificate from url into keystore located at keystore_path
modules.system		import_cert_path	module executable path keystore_path	import certificate from path into keystore located on
modules.system		delete_cert	module executable keystore_path keystore_pass	delete cerificate identified with alias from keystore on keystore_path
modules.system		test_keytool	module executable	test if keytool is actuall executable or not
modules.system		test_keystore	module keystore_path	check if we can access keystore as file or not
modules.system		semanage_fcontext_exists	sefcontext target ftype	get the selinux file context mapping definition from policy return none if it does not exist
modules.system		semanage_fcontext_modify	module result target ftype	add or modify selinux file context mapping definition to the policy
modules.system		semanage_fcontext_delete	module result target ftype	delete selinux file context mapping definition from the policy
modules.system		semanage_port_get_ports	seport setype proto	get the list of ports that have the specified type definition
modules.system		semanage_port_get_type	seport port proto	get the selinux type of the specified port
modules.system		semanage_port_add	module ports proto setype	add selinux port type definition to the policy
modules.system		semanage_port_del	module ports proto setype	delete selinux port type definition from the policy
modules.system		keyfile	module user write path	calculate name of authorized keys file optionally creating the directories and file properly setting permissions
modules.system		parseoptions	module options	reads a string containing ssh-key options
modules.system		parsekey	module raw_key rank	parses a key which may or may not contain a list of ssh-key options at the beginning
modules.system		enforce_state	module params	add or remove key
modules.system	User	user_group_membership	exclude_primary	return a list of groups the user belongs to
modules.system	DarwinUser	_get_user_property	property	return user property as given my dscl 1 read or none if not found
modules.system	DarwinUser	_get_next_uid	system	return the next available uid if system=true then
modules.system	DarwinUser	_change_user_password		change password for self name against self password
modules.system	DarwinUser	_make_group_numerical		convert self group to is stringed numerical value suitable for dscl
modules.system	DarwinUser	__modify_group	group action	add or remove self name to or from group depending on action
modules.system	DarwinUser	_modify_group		add or remove self name to or from group depending on action
modules.system	DarwinUser	_update_system_user		hide or show user on login window according self system
modules.system	DarwinUser	user_exists		check is self name is a known user on the system
modules.system	DarwinUser	remove_user		delete self name if self force is true remove its home directory
modules.system		_load_dist_subclass	cls	used for derivative implementations
modules.system		run_command	command module check_rc	run a command using the module return the result code and std{err out} content
modules.system		sanitize_output	output	sanitize the output string before we pass it to module
modules.system	SysctlModule	_values_is_equal	a b	expects two string values it will split the string by whitespace
modules.system	GConf2Preference	call	call_type fail_onerr	helper function to perform gconftool-2 operations
modules.packaging.os		get_version	pacman_output	take pacman -qi or pacman -si output and get the version
modules.packaging.os		query_package	module pacman_path name state	query the package status in both the local system and the repository returns a boolean to indicate if the package is installed a second
modules.packaging.os		parse_key_id	key_id	validate the key_id and break it into segments :arg key_id the key_id as supplied by the user
modules.packaging.os		shorten_key_ids	key_id_list	takes a list of key ids and converts them to the 'short' format by reducing them to their last 8 characters
modules.packaging.os		update_package_db	module opkg_path	updates packages list
modules.packaging.os		query_package	module opkg_path name state	returns whether a package is installed or not
modules.packaging.os		remove_packages	module opkg_path packages	uninstalls one or more packages if installed
modules.packaging.os		install_packages	module opkg_path packages	installs one or more packages if not already installed
modules.packaging.os		transaction_exists	pkglist	checks the package list to see if any packages are
modules.packaging.os		local_nvra	module path	return nvra of a local rpm passed in
modules.packaging.os		init_layman	config	returns the initialized laymanapi
modules.packaging.os		download_url	module url dest	:param url the url to download
modules.packaging.os		install_overlay	module name list_url	installs the overlay repository if not on the central overlays list
modules.packaging.os		uninstall_overlay	module name	uninstalls the given overlay repository from the system
modules.packaging.os		sync_overlay	name	synchronizes the specified overlay repository
modules.packaging.os		sync_overlays		synchronize all of the installed overlays
modules.packaging.os		is_installed	xbps_output	returns package install state
modules.packaging.os		query_package	module xbps_path name state	returns package info
modules.packaging.os		update_package_db	module xbps_path	returns true if update_package_db changed
modules.packaging.os		upgrade	module xbps_path	returns true is full upgrade succeeds
modules.packaging.os		remove_packages	module xbps_path packages	returns true if package removal succeeds
modules.packaging.os		install_packages	module xbps_path state packages	returns true if package install succeeds
modules.packaging.os		check_packages	module xbps_path packages state	returns change status of command
modules.packaging.os		main		returns calling appropriate command
modules.packaging.os		get_cache_mtime		return mtime of a valid apt cache file
modules.packaging.os		get_updated_cache_time		return the mtime time stamp and the updated cache time
modules.packaging.os		get_cache	module	attempt to get the cache object and update till it works
modules.packaging.os		_get_cmd		combines the non-interactive zypper command with arguments/subcommands
modules.packaging.os		_parse_repos	module	parses the output of zypper --xmlout repos and return a parse repo dictionary
modules.packaging.os		_repo_changes	realrepo repocmp	check whether the 2 given repos have different settings
modules.packaging.os		repo_exists	module repodata overwrite_multiple	check whether the repository already exists
modules.packaging.os		addmodify_repo	module repodata old_repos zypper_version	adds the repo removes old repos before that would conflict
modules.packaging.os		remove_repo	module repo	removes the repo
modules.packaging.os		runrefreshrepo	module auto_import_keys shortname	forces zypper to refresh repo metadata
modules.packaging.os		_configure_base	module base conf_file disable_gpg_check	configure the dnf base object
modules.packaging.os		_specify_repositories	base disablerepo enablerepo	enable and disable repositories matching the provided patterns
modules.packaging.os		_base	module conf_file disable_gpg_check disablerepo	return a fully configured dnf base object
modules.packaging.os		_package_dict	package	return a dictionary of information for the package
modules.packaging.os		list_items	module base command	list package info based on the command
modules.packaging.os		_mark_package_install	module base pkg_spec	mark the package for install
modules.packaging.os		main		the main function
modules.packaging.os	Rhn	load_config		read configuration from /etc/sysconfig/rhn/up2date
modules.packaging.os	Rhn	hostname		return the non-xmlrpc rhn hostname this is a convenience method
modules.packaging.os	Rhn	is_registered		determine whether the current system is registered
modules.packaging.os	Rhn	configure_server_url	server_url	configure server_url for registration
modules.packaging.os	Rhn	enable		prepare the system for rhn registration this includes
modules.packaging.os	Rhn	register	enable_eus activationkey profilename sslcacert	register system to rhn if enable_eus=true extended update
modules.packaging.os	Rhn	api	method	convenience rpc wrapper
modules.packaging.os	Rhn	unregister		unregister a previously registered system
modules.packaging.os	Rhn	_is_hosted		return true if we are running against hosted rhn redhat com or
modules.packaging.os		is_pubkey	string	verifies if string is a pubkey
modules.packaging.os	RpmKey	fetch_key	url	downloads a key from url returns a valid path to a gpg key
modules.packaging.os	RpmKey	normalize_keyid	keyid	ensure a keyid doesn't have a leading 0x has leading or trailing whitespace and make sure is lowercase
modules.packaging.os	RpmKey	is_keyid	keystr	verifies if a key as provided by the user is a keyid
modules.packaging.os	Rhsm	_read_config	rhsm_conf	load rhsm configuration from /etc/rhsm/rhsm conf
modules.packaging.os	Rhsm	enable		enable the system to receive updates from subscription-manager
modules.packaging.os	Rhsm	configure		configure the system as directed for registration with rhsm
modules.packaging.os	Rhsm	is_registered		determine whether the current system returns
modules.packaging.os	Rhsm	register	username password autosubscribe activationkey	register the current system to the provided rhsm or sat6 server
modules.packaging.os	Rhsm	unsubscribe	serials	unsubscribe a system from subscribed channels args
modules.packaging.os	Rhsm	unregister		unregister a currently registered system
modules.packaging.os	Rhsm	subscribe	regexp	subscribe current system to available pools matching the specified regular expression
modules.packaging.os	Rhsm	subscribe_pool	regexp	subscribe current system to available pools matching the specified
modules.packaging.os	Rhsm	subscribe_product	regexp	subscribe current system to available pools matching the specified
modules.packaging.os	RhsmPools	_load_product_list	consumed	loads list of all available or consumed pools for system in data structure
modules.packaging.os	RhsmPools	filter_pools	regexp	return a list of rhsmpools whose pool id matches the provided regular expression
modules.packaging.os	RhsmPools	filter_products	regexp	return a list of rhsmpools whose product name matches the provided regular expression
modules.packaging.os		compare_package	version1 version2	compare version packages
modules.packaging.os		query_package	module name depot	returns whether a package is installed or not and version
modules.packaging.os		remove_package	module name	uninstall package if installed
modules.packaging.os		install_package	module depot name	install package if not already installed
modules.packaging.os		update_package_db	module port_path	updates packages list
modules.packaging.os		query_package	module port_path name state	returns whether a package is installed or not
modules.packaging.os		remove_packages	module port_path packages	uninstalls one or more packages if installed
modules.packaging.os		install_packages	module port_path packages	installs one or more packages if not already installed
modules.packaging.os		activate_packages	module port_path packages	activate a package if it's inactive
modules.packaging.os		deactivate_packages	module port_path packages	deactivate a package if it's active
modules.packaging.os		get_sorcery_ver	module	get sorcery version
modules.packaging.os		codex_fresh	codex module	check if grimoire collection is fresh enough
modules.packaging.os		codex_list	module	list valid grimoire collection
modules.packaging.os		update_sorcery	module	update sorcery scripts
modules.packaging.os		update_codex	module	update grimoire collections
modules.packaging.os		match_depends	module	check for matching dependencies
modules.packaging.os		manage_spells	module	cast or dispel spells
modules.packaging.os	Swupd	install_bundle	bundle	installs a bundle with swupd bundle-add bundle
modules.packaging.os	Swupd	remove_bundle	bundle	removes a bundle with swupd bundle-remove bundle
modules.packaging.os	Swupd	update_os		updates the os with swupd update
modules.packaging.os	Swupd	verify_os		verifies filesystem agains specified or current version
modules.packaging.os		main		the main function
modules.packaging.os		a_valid_tap	tap	returns true if the tap is valid
modules.packaging.os		already_tapped	module brew_path tap	returns true if already tapped
modules.packaging.os		add_tap	module brew_path tap url	adds a single tap
modules.packaging.os		add_taps	module brew_path taps	adds one or more taps
modules.packaging.os		remove_tap	module brew_path tap	removes a single tap
modules.packaging.os		remove_taps	module brew_path taps	removes one or more taps
modules.packaging.os	SourcesList	__iter__		simple iterator to go over all sources empty non-source and other not valid lines will be skipped
modules.packaging.os	SourcesList	_apt_cfg_file	filespec	wrapper for apt_pkg module for running with python 2 5
modules.packaging.os	SourcesList	_apt_cfg_dir	dirspec	wrapper for apt_pkg module for running with python 2 5
modules.packaging.os	SourcesList	modify	file n enabled source	this function to be used with iterator so we don't care of invalid sources
modules.packaging.os		query_package	module name	search for the package by name
modules.packaging.os		split_name_version	name	splits of the package name and desired version example formats
modules.packaging.os		get_installed_state	m packages	get installed state of packages
modules.packaging.os		get_cmd	m subcommand	puts together the basic zypper command arguments with those passed to the module
modules.packaging.os		package_present	m name want_latest	install and update (if want_latest) the packages in name_install while removing the packages in name_remove
modules.packaging.os		package_update_all	m	run update or patch on all available packages
modules.packaging.os		package_absent	m name	remove the packages in name
modules.packaging.os		repo_refresh	m	update the repositories
modules.packaging.os	HomebrewCask	valid_path	cls path	path must be one of - list of paths
modules.packaging.os	HomebrewCask	valid_brew_path	cls brew_path	brew_path must be one of - none
modules.packaging.os	HomebrewCask	valid_cask	cls cask	a valid cask is either none or alphanumeric + backslashes
modules.packaging.os	HomebrewCask	valid_state	cls state	a valid state is one of
modules.packaging.os	HomebrewCask	valid_module	cls module	a valid module is an instance of ansiblemodule
modules.packaging.os	Homebrew	valid_path	cls path	path must be one of - list of paths
modules.packaging.os	Homebrew	valid_brew_path	cls brew_path	brew_path must be one of - none
modules.packaging.os	Homebrew	valid_package	cls package	a valid package is either none or alphanumeric
modules.packaging.os	Homebrew	valid_state	cls state	a valid state is one of
modules.packaging.os	Homebrew	valid_module	cls module	a valid module is an instance of ansiblemodule
modules.packaging.language		get_local_version	pear_output	take pear remoteinfo output and get the installed version
modules.packaging.language		get_repository_version	pear_output	take pear remote-info output and get the latest version
modules.packaging.language		query_package	module name state	query the package status in both the local system and the repository
modules.packaging.language		_get_packages	module pip chdir	return results of pip command to get packages
modules.packaging.language		_is_present	name version installed_pkgs pkg_command	return whether or not package is installed
modules.packaging.language		_get_package_info	module package env	this is only needed for special packages which do not show up in pip freeze pip and setuptools fall into this category
modules.identity.ipa		get_user_diff	client ipa_user module_user	return the keys of each dict whereas values are different unfortunately the ipa
modules.identity.ipa		get_ssh_key_fingerprint	ssh_key	return the public key fingerprint of a given public ssh key
modules.network.eos		main		main entry point for module execution
modules.network.eos		main		main entry point for module execution
modules.network.eos		main		main entry point for module execution
modules.network.eos		main		entry point for module execution
modules.network.eos		main		main entry point for module execution
modules.network.eos		main		main entry point for module execution
modules.network.eos		main		main entry point for module execution
modules.network.eos		main		main entry point for module execution
modules.network.ios		main		main entry point for module execution
modules.network.ios		main		main entry point for module execution
modules.network.ios		main		main entry point for module execution
modules.network.ios		main		main entry point for ansible module execution
modules.network.ios		main		main entry point for module execution
modules.network.ios		main		main entry point for module execution
modules.network.ios		main		main entry point for module execution
modules.network.sros		main		main entry point for module execution
modules.network.sros		main		main entry point for module execution
modules.network.sros		main		main entry point for module execution
modules.network.dellos10		main		main entry point for module execution
modules.network.dellos10		main		main entry point for module execution
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks if vrouter exists on the target node
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this portion is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks if vrouter exists on the target node
modules.network.netvisor		get_nic	module cli	this module checks if vrrp interface can be added if no return vrrp_exists
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this portion is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks for idempotency using the vlag-show command
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this section is for argument parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks for idempotency using the cluster-show command
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this section is for arguments parsing
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this section is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks for idempotency using the vlan-show command
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this section is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks for idempotency using the vlan-show command
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this section is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks if vrouter exists on the target node
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this section is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		main		this section is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks if vrouter exists on the target node
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this portion is for arguments parsing
modules.network.netvisor		pn_cli	module	this method is to generate the cli portion to launch the netvisor cli
modules.network.netvisor		check_cli	module cli	this method checks for idempotency using the trunk-show command
modules.network.netvisor		run_cli	module cli	this method executes the cli command on the target node s and returns the output
modules.network.netvisor		get_command_from_state	state	this method gets appropriate command name for the state specified it
modules.network.netvisor		main		this portion is for arguments parsing
modules.network.f5	BigIpDeviceSshd	read		read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding
modules.network.f5	BigIpSelfIp	read		read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding
modules.network.f5	BigIpSelfIp	verify_services		verifies that a supplied service string has correct format the string format for port lockdown is protocol port
modules.network.f5	BigIpSelfIp	fmt_services	services	returns services formatted for consumption by f5-sdk update the big-ip endpoint for services takes different values depending on
modules.network.f5	BigIpSelfIp	get_vlans		returns formatted list of vlans the vlan values stored in big-ip are done so using their fully
modules.network.f5	BigIpSnatPoolManager	format_snat_pool_information	pool	ensure that the pool information is in a standard format the sdk provides information back in a format that may change with
modules.network.f5	BigIpVlan	read		read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding
modules.network.f5	BigIpGtmDatacenter	read		read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding
modules.network.f5	BigIpiRule	read		read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding
modules.network.f5	BigIpRouteDomain	read		read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding
modules.network.f5	BigIpDeviceNtp	read		read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding
modules.network.iosxr		main		main entry point for ansible module execution
modules.network.iosxr		main		main entry point for module execution
modules.network.iosxr		main		main entry point for module execution
modules.network.ordnance		main		main entry point for module execution
modules.network.junos		main		main entry point for ansible module
modules.network.junos		main		entry point for module execution
modules.network.junos		main		main entry point for ansible module execution
modules.network.junos		main		main entry point for module execution
modules.network.junos		main		main entry point for module execution
modules.network.junos		main		main entry point for module execution
modules.network.junos		main		main entry point for ansiblemodule
modules.network.ovs		map_obj_to_commands	want have module	define ovs-vsctl command to meet desired state
modules.network.ovs		main		entry point for ansible module
modules.network.openswitch		main		main entry point for module execution
modules.network.asa		main		main entry point for module execution
modules.network.cumulus		add_glob_to_array	_bondmems	goes through each bond member if it sees a dash add glob
modules.network.cumulus		build_desired_iface_config	module	take parameters defined and build ifupdown2 compatible hash
modules.network.cumulus		config_dict_changed	module	return true if 'config' dict in hash is different
modules.network.cumulus		config_changed	module	returns true if config has changed
modules.network.cumulus		write_to_ports_conf	module	use tempfile to first write out config in temp file then write to actual location
modules.network.cumulus		build_desired_iface_config	module	take parameters defined and build ifupdown2 compatible hash
modules.network.cumulus		config_dict_changed	module	return true if 'config' dict in hash is different
modules.network.cumulus		config_changed	module	returns true if config has changed
modules.network.cumulus		command_helper	module command errmsg	run a command catch any nclu errors
modules.network.cumulus		check_pending	module	check the pending diff of the nclu buffer
modules.network.cumulus		add_glob_to_array	_bridgemems	goes through each bridge member if it sees a dash add glob
modules.network.cumulus		build_desired_iface_config	module	take parameters defined and build ifupdown2 compatible hash
modules.network.cumulus		config_dict_changed	module	return true if 'config' dict in hash is different
modules.network.cumulus		config_changed	module	returns true if config has changed
modules.network.dellos9		main		main entry point for module execution
modules.network.dellos9		main		main entry point for module execution
modules.network.panos		_commit	device device_group	:param device either firewall or panorama
modules.network.dellos6		main		main entry point for module execution
modules.network.dellos6		main		main entry point for module execution
modules.network.nxos		validate_feature	module mode	some features may need to be mapped due to inconsistency
modules.network.nxos		get_interface_type	interface	gets the type of interface args
modules.network.nxos		get_interface_mode	interface module	gets current mode of interface layer2 or layer3 args
modules.network.nxos		interface_is_portchannel	interface module	checks to see if an interface is part of portchannel bundle args
modules.network.nxos		get_switchport	port module	gets current config of l2 switchport args
modules.network.nxos		get_switchport_config_commands	interface existing proposed module	gets commands required to config a given switchport interface
modules.network.nxos		is_switchport_default	existing	determines if switchport has a default config based on mode args
modules.network.nxos		numerical_sort	string_int_list	sorts list of strings/integers that are digits in numerical order
modules.network.nxos		main		main entry point for module execution
modules.network.nxos		is_default_interface	interface module	checks to see if interface exists and if it is a default config args
modules.network.nxos		get_interface_type	interface	gets the type of interface args
modules.network.nxos		get_manual_interface_attributes	interface module	gets admin state and description of a svi interface hack due to api
modules.network.nxos		get_interface	intf module	gets current config/state of interface args
modules.network.nxos		get_interfaces_dict	module	gets all active interfaces on a given switch returns
modules.network.nxos		normalize_interface	if_name	return the normalized interface name
modules.network.nxos		get_interface_config_commands	interface intf existing	generates list of commands to configure on device args
modules.network.nxos		main		main entry point for module execution
modules.network.nxos		get_boot_options	module	get current boot variables like system image and kickstart image
modules.network.nxos		set_boot_options	module image_name kickstart	set boot variables like system image and kickstart image
modules.network.nxos		main		main entry point for module execution
modules.network.nxos		main		main entry point for module execution
modules.network.nxos		main		main entry point for module execution
modules.network.nxos		main		entry point for module execution
modules.network.nxos		numerical_sort	iterable	sort list of strings vlan ids that are digits in numerical order
modules.network.nxos		get_vlan_config_commands	vlan vid	build command list required for vlan configuration
modules.network.nxos		get_vlan	vlanid module	get instance of vlan as a dictionary
modules.files		crc32	path	return a crc32 checksum of a file
modules.files		shell_escape	string	quote meta-characters in the args for the unix shell
modules.files	ZipArchive	_permstr_to_octal	modestr umask	convert a unix permission string rw-r--r-- into a mode 0644
modules.files		split_entry	entry	splits entry and ensures normalized return
modules.files		build_entry	etype entity permissions use_nfsv4_acls	builds and returns an entry string does not include the permissions bit if they are not provided
modules.files		build_command	module mode path follow	builds and returns a getfacl/setfacl command
modules.files		acl_changed	module cmd	returns true if the provided command affects the existing acls false otherwise
modules.files		assemble_from_fragments	src_path delimiter compiled_regexp ignore_hidden	assemble a file from a directory of fragments
modules.files		split_pre_existing_dir	dirname	return the first pre-existing directory and a list of the new directories that will be created
modules.files		adjust_recursive_directory_permissions	pre_existing_dir new_directory_list module directory_args	walk the new directories list and make sure that permissions are as we would expect
modules.files		get_state	b_path	find out current state
modules.files		pfilter	f patterns use_regex	filter using glob patterns
modules.files		agefilter	st now age timestamp	filter files older than age
modules.files		sizefilter	st size	filter files greater than size
modules.files		contentfilter	fsname pattern	filter files which contain the given expression
modules.net_tools	HAProxy	execute	cmd timeout capture_output	executes a haproxy command by sending a message to a haproxy's local unix socket and waiting up to 'timeout' milliseconds for the response
modules.net_tools	HAProxy	capture_command_output	cmd output	capture the output for a command
modules.net_tools	HAProxy	discover_all_backends		discover all entries with svname = 'backend' and return a list of their corresponding
modules.net_tools	HAProxy	execute_for_backends	cmd pxname svname wait_for_status	run some command on the specified backends if no backends are provided they will
modules.net_tools	HAProxy	get_state_for	pxname svname	find the state of specific services when pxname is not set get all backends for a specific host
modules.net_tools	HAProxy	wait_until_status	pxname svname status	wait for a service to reach the specified status try retries times
modules.net_tools	HAProxy	enabled	host backend weight	enabled action marks server to up and checks are re-enabled also supports to get current weight for server default and
modules.net_tools	HAProxy	disabled	host backend shutdown_sessions	disabled action marks server to down for maintenance in this mode no more checks will be
modules.net_tools	HAProxy	act		figure out what you want to do from ansible and then do it
modules.net_tools.basics		absolute_location	url location	attempts to create an absolute url based on initial url and next url specifically in the case of a location header
modules.net_tools.basics		url_get	module url dest use_proxy	download data from the url and store in a temporary file
modules.net_tools.basics		extract_filename_from_headers	headers	extracts a filename from the given dict of http headers
modules.net_tools.ldap	LdapEntry	_load_attrs		turn attribute's value to array
modules.net_tools.ldap	LdapEntry	add		if self dn does not exist returns a callable that will add it
modules.net_tools.ldap	LdapEntry	delete		if self dn exists returns a callable that will delete it
modules.net_tools.ldap	LdapAttr	_is_value_present	value	true if the target attribute has the given value
modules.net_tools.ldap	LdapAttr	_is_value_absent	value	true if the target attribute doesn't have the given value
modules.cloud.azure	AzureRMVirtualMachine	get_vm		get the vm with expanded instanceview
modules.cloud.azure	AzureRMVirtualMachine	serialize_vm	vm	convert a virtualmachine object to dict
modules.cloud.azure	AzureRMVirtualMachine	vm_size_is_valid		validate self vm_size against the list of virtual machine sizes available for the account and location
modules.cloud.azure	AzureRMVirtualMachine	create_default_storage_account		create a default storage account <vm name>xxxx where xxxx is a random number if <vm name>xxxx exists use it
modules.cloud.azure	AzureRMVirtualMachine	create_default_nic		create a default network interface <vm name>01 requires an existing virtual network
modules.cloud.azure		virtual_network_to_dict	vnet	convert a virtual network object to a dict
modules.cloud.azure	AzureRMStorageAccount	account_has_blob_containers		if there are blob containers then there are likely vms depending on this account and it should not be deleted
modules.cloud.azure		validate_rule	rule rule_type	apply defaults to a rule dictionary and check that all values are valid
modules.cloud.azure		create_rule_instance	rule	create an instance of securityrule from a dict
modules.cloud.azure		create_rule_dict_from_obj	rule	create a dict from an instance of a securityrule
modules.cloud.azure	AzureRMDeploymentManager	deploy_template		deploy the targeted template and parameters
modules.cloud.azure	AzureRMDeploymentManager	destroy_resource_group		destroy the targeted resource group
modules.cloud.azure	AzureRMDeploymentManager	resource_group_exists	resource_group	return true/false based on existence of requested resource group
modules.cloud.azure		get_ssh_certificate_tokens	module ssh_cert_path	returns the sha1 fingerprint and a base64-encoded pkcs12 version of the certificate
modules.cloud.azure		create_virtual_machine	module azure	create new virtual machine
modules.cloud.azure		terminate_virtual_machine	module azure	terminates a virtual machine
modules.cloud.pubnub		pubnub_user	module	create and configure user model if it possible
modules.cloud.pubnub		pubnub_account	module user	create and configure account if it is possible
modules.cloud.pubnub		pubnub_application	module account	retrieve reference on target application from account model
modules.cloud.pubnub		pubnub_keyset	module account application	retrieve reference on target keyset from application model
modules.cloud.pubnub		pubnub_block	module account keyset	retrieve reference on target keyset from application model
modules.cloud.pubnub		pubnub_event_handler	block data	retrieve reference on target event handler from application model
modules.cloud.pubnub		_failure_title_from_exception	exception	compose human-readable title for module error title
modules.cloud.pubnub		_content_of_file_at_path	path	read file content
modules.cloud.misc	LibvirtConnection	find_vm	vmid	extra bonus feature vmid = -1 returns a list of everything
modules.cloud.misc	Virt	shutdown	vmid	make the machine with the given vmid stop running whatever that takes
modules.cloud.misc	Virt	pause	vmid	pause the machine with the given vmid
modules.cloud.misc	Virt	unpause	vmid	unpause the machine with the given vmid
modules.cloud.misc	Virt	create	vmid	start the machine via the given vmid
modules.cloud.misc	Virt	start	vmid	start the machine via the given id/name
modules.cloud.misc	Virt	destroy	vmid	pull the virtual power from the virtual domain giving it virtually no time to virtually shut down
modules.cloud.misc	Virt	undefine	vmid	stop a domain and then wipe it from the face of the earth (delete disk/config file)
modules.cloud.misc	Virt	status	vmid	return a state suitable for server consumption aka codes py values not xm output
modules.cloud.misc	Virt	get_xml	vmid	receive a vm id as input
modules.cloud.misc	Virt	get_maxVcpus	vmid	gets the max number of vcpus on a guest
modules.cloud.misc	Virt	get_max_memory	vmid	gets the max memory on a guest
modules.cloud.misc	Virt	define	xml	define a guest with the given xml
modules.cloud.misc		change_keys	recs key filter_func	take a xapi dict and make the keys the value of recs[ref][key]
modules.cloud.misc		get_host	session	get the host
modules.cloud.ovirt		_search_by_lun	disks_service lun_id	find disk by lun id
modules.cloud.ovirt	AffinityGroupsModule	update_vms	affinity_group	this method iterate via the affinity vm assignnments and datech the vms which should not be attached to affinity and attach vms which should be
modules.cloud.ovirt	VmsModule	__get_template_with_version		ovirt/rhv in version 4 1 doesn't support search by template+version_number
modules.cloud.ovirt	VmsModule	wait_for_down	vm	this function will first wait for the status down of the vm
modules.cloud.ovirt	VmsModule	__get_vnic_profile_id	nic	return vnic profile id looked up by it's name because there can be more vnic profiles with same name other criteria of filter is cluster
modules.cloud.docker	LoginManager	login		log into the registry with provided username/password on success update the config
modules.cloud.docker	LoginManager	logout		log out of the registry on success update the config file
modules.cloud.docker	LoginManager	create_config_file	path	create a config file with a json blob containing an auths key
modules.cloud.docker	LoginManager	update_config_file		if the authorization not stored in the config file or reauthorize is true update the config file with the new authorization
modules.cloud.docker	TaskParameters	update_parameters		returns parameters used to update a container
modules.cloud.docker	TaskParameters	create_parameters		returns parameters used to create a container
modules.cloud.docker	TaskParameters	_get_mounts		return a list of container mounts
modules.cloud.docker	TaskParameters	_host_config		returns parameters used to create a hostconfig object
modules.cloud.docker	TaskParameters	_parse_publish_ports		parse ports from docker cli syntax
modules.cloud.docker	TaskParameters	_get_volume_binds	volumes	extract host bindings if any from list of volume mapping strings
modules.cloud.docker	TaskParameters	_parse_exposed_ports	published_ports	parse exposed ports from docker cli-style ports syntax
modules.cloud.docker	TaskParameters	_parse_links	links	turn links into a dictionary
modules.cloud.docker	TaskParameters	_parse_ulimits		turn ulimits into an array of ulimit objects
modules.cloud.docker	TaskParameters	_parse_log_config		create a logconfig object
modules.cloud.docker	TaskParameters	_get_environment		if environment file is combined with explicit environment variables the explicit environment variables take precedence
modules.cloud.docker	Container	has_different_configuration	image	diff parameters vs existing container config returns tuple (true | false list of differences)
modules.cloud.docker	Container	_compare_dictionary_lists	list_a list_b	if all of list_a exists in list_b return true
modules.cloud.docker	Container	_compare_dicts	dict_a dict_b	if dict_a in dict_b return true
modules.cloud.docker	Container	has_different_resource_limits		diff parameters and container resource limits
modules.cloud.docker	Container	has_network_differences		check if the container is connected to requested networks with expected options links aliases ipv4 ipv6
modules.cloud.docker	Container	has_extra_networks		check if the container is connected to non-requested networks
modules.cloud.docker	Container	_get_image_binds	volumes	convert array of binds to array of strings with format host_path container_path mode
modules.cloud.docker	ContainerManager	_get_container	container	expects container id or name returns a container object
modules.cloud.docker	ImageManager	present		handles state = 'present', which includes building loading or pulling an image depending on user provided parameters
modules.cloud.docker	ImageManager	absent		handles state = 'absent', which removes an image
modules.cloud.docker	ImageManager	archive_image	name tag	archive an image to a tar file called when archive_path is passed
modules.cloud.docker	ImageManager	push_image	name tag	if the name of the image contains a repository path then push the image
modules.cloud.docker	ImageManager	tag_image	name tag repository force	tag an image into a repository
modules.cloud.docker	ImageManager	build_image		build an image
modules.cloud.docker	ImageManager	load_image		load an image from a tar archive
modules.cloud.docker	ImageManager	get_facts		lookup and inspect each image name found in the names parameter
modules.cloud.docker	DockerNetworkManager	has_different_config	net	evaluates an existing network and returns a tuple containing a boolean indicating if the configuration is different and a list of differences
modules.cloud.docker		normalize_image	image	normalize a docker image name to include the implied :latest tag
modules.cloud.docker		is_running	container	return true if an inspected container is in a state we consider "running "
modules.cloud.docker		check_dependencies	module	ensure docker-py >= 0 3 0 is installed and call module fail_json with a
modules.cloud.docker	DockerManager	_check_capabilities		create a list of available capabilities
modules.cloud.docker	DockerManager	ensure_capability	capability fail	some of the functionality this ansible module implements are only available in newer versions of docker
modules.cloud.docker	DockerManager	get_environment	env env_file	if environment files are combined with explicit environment variables the explicit environment variables will override the key from the env file
modules.cloud.docker	DockerManager	get_links	links	parse the links passed if a link is specified without an alias then just create the alias of the same name as the link
modules.cloud.docker	DockerManager	get_exposed_ports	expose_list	parse the ports and protocols (tcp/udp) to expose in the docker-py create_container call from the docker cli-style syntax
modules.cloud.docker	DockerManager	get_start_params		create start params
modules.cloud.docker	DockerManager	create_host_config		create hostconfig object
modules.cloud.docker	DockerManager	get_port_bindings	ports	parse the ports string into a port bindings dict for the start_container call
modules.cloud.docker	DockerManager	get_summary_message		generate a message that briefly describes the actions taken by this task in english
modules.cloud.docker	DockerManager	get_reload_reason_message		generate a message describing why any reloaded containers were reloaded
modules.cloud.docker	DockerManager	get_differing_containers		inspect all matching running containers and return those that were started with parameters that differ from the ones that are provided
modules.cloud.docker	DockerManager	get_deployed_containers		return any matching containers that are already present
modules.cloud.docker	ContainerSet	refresh		update our view of the matching containers from the docker daemon
modules.cloud.docker	ContainerSet	notice_changed	containers	record a collection of containers as "changed"
modules.cloud.docker		present	manager containers count name	ensure that exactly count matching containers exist in any state
modules.cloud.docker		started	manager containers count name	ensure that exactly count matching containers exist and are running
modules.cloud.docker		reloaded	manager containers count name	ensure that exactly count matching containers exist and are running
modules.cloud.docker		restarted	manager containers count name	ensure that exactly count matching containers exist and are running
modules.cloud.docker		stopped	manager containers count name	stop any matching containers that are running
modules.cloud.docker		killed	manager containers count name	kill any matching containers that are running
modules.cloud.docker		absent	manager containers count name	stop and remove any matching containers
modules.cloud.vmware		migrate_vm	vm_object host_object	migrate virtual machine and return the task
modules.cloud.vmware		get_obj	content vimtype name	return an object by name if name is none the
modules.cloud.vmware	PyVmomiHelper	set_powerstate	vm state force	set the power status for a vm determined by the current and requested states
modules.cloud.vmware		get_obj	content vimtype name	return an object by name if name is none the
modules.cloud.vmware		vmware_path	datastore datacenter path	constructs a url path that vsphere accepts reliably
modules.cloud.vmware		power_state	vm state force	correctly set the power status for a vm determined by the current and requested states
modules.cloud.vmware		gather_facts	vm	gather facts for vm directly from vsphere
modules.cloud.vmware		config_check	name passed default module	checks that the dict passed for vm configuration matches the required
modules.cloud.dimensiondata	DimensionDataNetworkModule	__init__		create a new dimension data network module
modules.cloud.cloudstack	CloudStackFacts	_get_dhcp_lease_file		return the path of the lease file
modules.cloud.cloudstack	CloudStackFacts	_get_api_ip		return the ip of the dhcp server
modules.cloud.lxc		create_script	command	write out a script onto a target
modules.cloud.lxc	LxcContainerManagement	__init__	module	management of lxc containers via ansible
modules.cloud.lxc	LxcContainerManagement	_roundup	num	return a rounded floating point number
modules.cloud.lxc	LxcContainerManagement	_container_exists	container_name lxc_path	check if a container exists
modules.cloud.lxc	LxcContainerManagement	_add_variables	variables_dict build_command	return a command list with all found options
modules.cloud.lxc	LxcContainerManagement	_get_vars	variables	return a dict of all variables as found within the module
modules.cloud.lxc	LxcContainerManagement	_run_command	build_command unsafe_shell	return information from running an ansible command
modules.cloud.lxc	LxcContainerManagement	_config		configure an lxc container
modules.cloud.lxc	LxcContainerManagement	_container_create_clone		clone a new lxc container from an existing container
modules.cloud.lxc	LxcContainerManagement	_create		create a new lxc container
modules.cloud.lxc	LxcContainerManagement	_container_data		returns a dict of container information
modules.cloud.lxc	LxcContainerManagement	_unfreeze		unfreeze a container
modules.cloud.lxc	LxcContainerManagement	_get_state		return the state of a container
modules.cloud.lxc	LxcContainerManagement	_execute_command		execute a shell command
modules.cloud.lxc	LxcContainerManagement	_container_startup	timeout	ensure a container is started
modules.cloud.lxc	LxcContainerManagement	_check_archive		create a compressed archive of a container
modules.cloud.lxc	LxcContainerManagement	_check_clone		create a compressed archive of a container
modules.cloud.lxc	LxcContainerManagement	_destroyed	timeout	ensure a container is destroyed
modules.cloud.lxc	LxcContainerManagement	_frozen	count	ensure a container is frozen
modules.cloud.lxc	LxcContainerManagement	_restarted	count	ensure a container is restarted
modules.cloud.lxc	LxcContainerManagement	_stopped	count	ensure a container is stopped
modules.cloud.lxc	LxcContainerManagement	_started	count	ensure a container is started
modules.cloud.lxc	LxcContainerManagement	_get_lxc_vg		return the name of the volume group used in lxc
modules.cloud.lxc	LxcContainerManagement	_lvm_lv_list		return a list of all lv in a current vg
modules.cloud.lxc	LxcContainerManagement	_get_vg_free_pe	vg_name	return the available size of a given vg
modules.cloud.lxc	LxcContainerManagement	_get_lv_size	lv_name	return the available size of a given lv
modules.cloud.lxc	LxcContainerManagement	_lvm_snapshot_create	source_lv snapshot_name snapshot_size_gb	create an lvm snapshot
modules.cloud.lxc	LxcContainerManagement	_lvm_lv_mount	lv_name mount_point	mount an lv
modules.cloud.lxc	LxcContainerManagement	_create_tar	source_dir	create an archive of a given source_dir to output_path
modules.cloud.lxc	LxcContainerManagement	_lvm_lv_remove	lv_name	remove an lv
modules.cloud.lxc	LxcContainerManagement	_rsync_data	container_path temp_dir	sync the container directory to the temp directory
modules.cloud.lxc	LxcContainerManagement	_unmount	mount_point	unmount a file system
modules.cloud.lxc	LxcContainerManagement	_overlayfs_mount	lowerdir upperdir mount_point	mount an lv
modules.cloud.lxc	LxcContainerManagement	_container_create_tar		create a tar archive from an lxc container
modules.cloud.lxc	LxcContainerManagement	failure		return a failure when running an ansible command
modules.cloud.lxc	LxcContainerManagement	run		run the main method
modules.cloud.lxc		main		ansible main module
modules.cloud.openstack		_system_state_change	module project_quota_output	determine if changes are required to the current project quota
modules.cloud.openstack		_needs_update	module secgroup	check for differences in the updatable values
modules.cloud.openstack		_needs_update	module port cloud	check for differences in the updatable values
modules.cloud.openstack		_needs_update	cloud module router network	decide if the given router needs an update
modules.cloud.openstack		_system_state_change	cloud module router network	check if the system state would be changed
modules.cloud.openstack		_system_state_change	state device	check if system state would change
modules.cloud.openstack		_ports_match	protocol module_min module_max rule_min	capture the complex port matching logic
modules.cloud.openstack		_find_matching_rule	module secgroup remotegroup	find a rule in the group that matches the module parameters
modules.cloud.openstack		_wait	timeout cloud server action	wait for the server to reach the desired state for the given action
modules.cloud.openstack		_system_state_change	action status	check if system state would change
modules.cloud.openstack		_can_update	subnet module cloud	check for differences in non-updatable values
modules.cloud.openstack		_needs_update	subnet module cloud	check for differences in the updatable values
modules.cloud.packet		serialize_device	device	standard represenation for a device as returned by various tasks : {
modules.cloud.univention		convert_time	time	convert a time in seconds into the biggest unit
modules.cloud.google		create_image	gce name module	create an image with the specified name
modules.cloud.google		delete_image	gce name module	delete a specific image resource by name
modules.cloud.google		find_snapshot	volume name	check if there is a snapshot already created with the given name for the passed in volume
modules.cloud.google		create_zone	module gcdns zone	creates a new google cloud dns zone
modules.cloud.google		remove_zone	module gcdns zone	removes an existing google cloud dns zone
modules.cloud.google		_get_zone	gcdns zone_name	gets the zone object for a given domain name
modules.cloud.google		_sanity_check	module	run module sanity checks
modules.cloud.google		_check_params	params field_list	helper to validate params
modules.cloud.google		_validate_autoscaling_params	params	validate that the minimum configuration is present for autoscaling
modules.cloud.google		_validate_named_port_params	params	validate the named ports parameters
modules.cloud.google		_get_instance_list	mig field filter_list	helper to grab field from instances response
modules.cloud.google		_gen_gce_as_policy	as_params	take autoscaler params and generate gce-compatible policy
modules.cloud.google		create_autoscaler	gce mig params	create a new autoscaler for a mig
modules.cloud.google		update_autoscaler	gce autoscaler params	update an autoscaler
modules.cloud.google		delete_autoscaler	autoscaler	delete an autoscaler does not affect mig
modules.cloud.google		get_autoscaler	gce name zone	get an autoscaler from gce
modules.cloud.google		create_mig	gce params	create a new managed instance group
modules.cloud.google		delete_mig	mig	delete a managed instance group all vms in that mig are also deleted "
modules.cloud.google		recreate_instances_in_mig	mig	recreate the instances for a managed instance group
modules.cloud.google		resize_mig	mig size	resize a managed instance group
modules.cloud.google		get_mig	gce name zone	get a managed instance group from gce
modules.cloud.google		update_named_ports	mig named_ports	set the named ports on a managed instance group
modules.cloud.google		transform_headers	headers	boto url-encodes values unless we convert the value to str, so doing this prevents 'max-age=100000' from being converted to "max-age%3d100000"
modules.cloud.google		list_func	data member	used for state=list
modules.cloud.google		create_record	module gcdns zone record	creates or overwrites a resource record
modules.cloud.google		remove_record	module gcdns record	remove a resource record
modules.cloud.google		_get_record	gcdns zone record_type record_name	gets the record object for a given fqdn
modules.cloud.google		_get_zone	gcdns zone_name zone_id	gets the zone object for a given domain name
modules.cloud.google		_records_match	old_ttl old_record_data new_ttl new_record_data	checks to see if original and new ttl and values match
modules.cloud.google		_sanity_check	module	run sanity checks that don't depend on info from the zone/record
modules.cloud.google		_additional_sanity_checks	module zone	run input sanity checks that depend on info from the zone/record
modules.cloud.google		_validate_params	params	validate backend_service params
modules.cloud.google		_validate_backend_params	backends	validate configuration for backends
modules.cloud.google		get_backend_service	gce name	get a backend service from gce
modules.cloud.google		create_backend_service	gce params	create a new backend service
modules.cloud.google		delete_backend_service	bes	delete a backend service the instance groups are not destroyed
modules.cloud.google		pull_messages	pull_params sub	:rtype tuple output changed
modules.cloud.google		_union_items	baselist comparelist	combine two lists removing duplicates
modules.cloud.google		_intersect_items	baselist comparelist	return matching items in both lists
modules.cloud.google		_get_changed_items	baselist comparelist	return changed items as they relate to baselist
modules.cloud.google		modify_tags	gce module node tags	modify tags on an instance
modules.cloud.google		get_address	gce name region	get an address from gce
modules.cloud.google		create_address	gce params	create a new address
modules.cloud.google		delete_address	address	delete an address
modules.cloud.google		format_allowed_section	allowed	format each section of the allowed list
modules.cloud.google		format_allowed	allowed	format the 'allowed' value so that it is gce compatible
modules.cloud.google		sorted_allowed_list	allowed_list	sort allowed_list (output of format_allowed) by protocol and port
modules.cloud.google		get_info	inst	retrieves instance template information
modules.cloud.google		create_instance_template	module gce	create an instance template
modules.cloud.google		delete_instance_template	module gce	delete instance template
modules.cloud.google		module_controller	module gce	control module state parameter
modules.cloud.google		instance_update	instance	call update method on spanner client
modules.cloud.google		get_instance_info	inst	retrieves instance information from an instance object and returns it as a dictionary
modules.cloud.google		create_instances	module gce instance_names number	creates new instances attributes other than instance_names are picked
modules.cloud.google		change_instance_state	module gce instance_names number	changes the state of a list of instances for example
modules.cloud.linode		randompass		generate a long random password that comply to linode requirements
modules.cloud.linode		getInstanceDetails	api server	return the details of an instance populating ips etc
modules.cloud.profitbricks		create_volume	module profitbricks	creates a volume
modules.cloud.profitbricks		delete_volume	module profitbricks	removes a volume
modules.cloud.profitbricks		_attach_volume	module profitbricks datacenter volume	attaches a volume
modules.cloud.profitbricks		create_datacenter	module profitbricks	creates a datacenter this will create a new datacenter in the specified location
modules.cloud.profitbricks		remove_datacenter	module profitbricks	removes a datacenter
modules.cloud.profitbricks		create_nic	module profitbricks	creates a nic
modules.cloud.profitbricks		delete_nic	module profitbricks	removes a nic module : ansiblemodule object
modules.cloud.profitbricks		attach_volume	module profitbricks	attaches a volume
modules.cloud.profitbricks		detach_volume	module profitbricks	detaches a volume
modules.cloud.profitbricks		create_virtual_machine	module profitbricks	create new virtual machine
modules.cloud.profitbricks		remove_virtual_machine	module profitbricks	removes a virtual machine
modules.cloud.profitbricks		_remove_boot_volume	module profitbricks datacenter_id server_id	remove the boot volume from the server
modules.cloud.profitbricks		startstop_machine	module profitbricks state	starts or stops a virtual machine
modules.cloud.profitbricks		_get_datacenter_id	datacenters identity	fetch and return datacenter uuid by datacenter name if found
modules.cloud.profitbricks		_get_server_id	servers identity	fetch and return server uuid by server name if found
modules.cloud.amazon		find_subnets	vpc_conn vpc_id identified_subnets	finds a list of subnets each identified either by a raw id a unique 'name' tag or a cidr such as 10
modules.cloud.amazon		find_igw	vpc_conn vpc_id	finds the internet gateway for the given vpc id
modules.cloud.amazon	CloudTrailManager	enable_logging	name	turn on logging for a cloudtrail that already exists throws exception on error
modules.cloud.amazon	CloudTrailManager	delete	name	delete a given cloudtrial configuration throws exception on error
modules.cloud.amazon		boto_exception	err	boto error message handler
modules.cloud.amazon		build_kwargs	registry_id	builds a kwargs dict which may contain the optional registryid
modules.cloud.amazon		boto_exception	err	generic error message handler
modules.cloud.amazon		get_zone_by_name	conn module zone_name want_private	finds a zone by name or zone_id
modules.cloud.amazon		commit	changes retry_interval wait wait_timeout	commit changes but retry priorrequestnotcomplete errors
modules.cloud.amazon		find_health_check	conn wanted	searches for health checks that have the exact same set of immutable values
modules.cloud.amazon		pc	key	changes python key into pascale case equivalent for example 'this_function_name' becomes 'thisfunctionname'
modules.cloud.amazon		ordered_obj	obj	order object for comparison purposes
modules.cloud.amazon		set_api_sub_params	params	sets module sub-parameters to those expected by the boto3 api
modules.cloud.amazon		validate_params	module aws	performs basic parameter validation
modules.cloud.amazon		get_qualifier	module	returns the function qualifier as a version or alias or none
modules.cloud.amazon		lambda_event_stream	module aws	adds updates or deletes lambda stream dynamodb kinesis event notifications
modules.cloud.amazon		main		produce a list of function suffixes which handle lambda events
modules.cloud.amazon	CloudFrontServiceManager	paginated_response	func result_key	returns expanded response for paginated operations
modules.cloud.amazon		enforce_required_arguments	module	as many arguments are not required for autoscale group deletion
modules.cloud.amazon		boto_exception	err	generic error message handler
modules.cloud.amazon		get_stack_events	cfn stack_name	this event data was never correct it worked as a side effect so the v2 3 format is different
modules.cloud.amazon		stack_operation	cfn stack_name operation	gets the status of a stack while it is created/updated/deleted
modules.cloud.amazon		pc	key	changes python key into pascale case equivalent for example 'this_function_name' becomes 'thisfunctionname'
modules.cloud.amazon		set_api_params	module module_params	sets module parameters to those expected by the boto3 api
modules.cloud.amazon		validate_params	module aws	performs basic parameter validation
modules.cloud.amazon		get_lambda_alias	module aws	returns the lambda function alias if it exists
modules.cloud.amazon		lambda_alias	module aws	adds updates or deletes lambda function aliases
modules.cloud.amazon		main		main entry point
modules.cloud.amazon		get_vpc_info	vpc	retrieves vpc information from an instance
modules.cloud.amazon		find_vpc	module vpc_conn vpc_id cidr	finds a vpc that matches a specific id or cidr + tags
modules.cloud.amazon		routes_match	rt_list rt igw	check if the route table has all routes as in given list rt_list : a list if routes provided in the module
modules.cloud.amazon		rtb_changed	route_tables vpc_conn module vpc	checks if the remote routes match the local routes
modules.cloud.amazon		create_vpc	module vpc_conn	creates a new or modifies an existing vpc
modules.cloud.amazon		terminate_vpc	module vpc_conn vpc_id cidr	terminates a vpc module ansible module object
modules.cloud.amazon		get_instance_info	inst	retrieves instance information from an instance
modules.cloud.amazon		boto_supports_associate_public_ip_address	ec2	check if boto library has associate_public_ip_address in the networkinterfacespecification class
modules.cloud.amazon		boto_supports_profile_name_arg	ec2	check if boto library has instance_profile_name argument instance_profile_name has been added in boto 2 5 0
modules.cloud.amazon		boto_supports_volume_encryption		check if boto library supports encryption of ebs volumes added in 2 29 0
modules.cloud.amazon		boto_supports_param_in_spot_request	ec2 param	check if boto library has a <param> in its request_spot_instances() method for example the placement_group parameter wasn't added until 2 3 0
modules.cloud.amazon		await_spot_requests	module ec2 spot_requests count	wait for a group of spot requests to be fulfilled or fail
modules.cloud.amazon		create_instances	module ec2 vpc override_count	creates new instances
modules.cloud.amazon		terminate_instances	module ec2 instance_ids	terminates a list of instances module ansible module object
modules.cloud.amazon		startstop_instances	module ec2 instance_ids state	starts or stops a list of existing instances module ansible module object
modules.cloud.amazon		restart_instances	module ec2 instance_ids state	restarts a list of existing instances module ansible module object
modules.cloud.amazon		create	module conn name group_family	create elasticache parameter group
modules.cloud.amazon		delete	module conn name	delete elasticache parameter group
modules.cloud.amazon		make_current_modifiable_param_dict	module conn name	gets the current state of the cache parameter group and creates a dict with the format {parametername [allowed_values datatype parametervalue]}
modules.cloud.amazon		check_valid_modification	module values modifiable_params	check if the parameters and values in values are valid
modules.cloud.amazon		check_changed_parameter_values	values old_parameters new_parameters	checking if the new values are different than the old values
modules.cloud.amazon		modify	module conn name values	modify elasticache parameter group to reflect the new information if it differs from the current
modules.cloud.amazon		reset	module conn name values	reset elasticache parameter group if the current information is different from the new information
modules.cloud.amazon		get_info	conn name	gets info about the elasticache parameter group returns false if it doesn't exist or we don't have access
modules.cloud.amazon		copy_image	module ec2	copies an ami
modules.cloud.amazon		fetch_dhcp_options_for_vpc	vpc_conn vpc_id	returns the dhcp options object currently associated with the requested vpc id using the vpc connection variable
modules.cloud.amazon		match_dhcp_options	vpc_conn tags options	finds a dhcp options object that optionally matches the tags and options provided
modules.cloud.amazon		set_parameter	param value immediate	allows setting parameters with 10m = 10* 1024 * 1024 and so on
modules.cloud.amazon		modify_group	group params immediate	set all of the params in a group to the provided new params raises notmodifiableerror if any of the
modules.cloud.amazon	ElbManager	ensure_ok		create the elb
modules.cloud.amazon	ElbManager	ensure_gone		destroy the elb
modules.cloud.amazon	ElbManager	_create_elb_listeners	listeners	takes a list of listener tuples and creates them
modules.cloud.amazon	ElbManager	_delete_elb_listeners	listeners	takes a list of listener tuples and deletes them from the elb
modules.cloud.amazon	ElbManager	_set_elb_listeners		creates listeners specified by self listeners overwrites existing
modules.cloud.amazon	ElbManager	_api_listener_as_tuple	listener	adds ssl_certificate_id to elb api tuple if present
modules.cloud.amazon	ElbManager	_listener_as_tuple	listener	formats listener as a 4- or 5-tuples in the order specified by the
modules.cloud.amazon	ElbManager	_set_subnets		determine which subnets need to be attached or detached on the elb
modules.cloud.amazon	ElbManager	_set_zones		determine which zones need to be enabled or disabled on the elb
modules.cloud.amazon	ElbManager	_set_health_check		set health check values on elb as needed
modules.cloud.amazon	ElbManager	_get_backend_policies		get a list of backend policies
modules.cloud.amazon	ElbManager	_set_backend_policies		sets policies for all backends
modules.cloud.amazon	ElbManager	_get_proxy_protocol_policy		find out if the elb has a proxy protocol enabled
modules.cloud.amazon	ElbManager	_set_proxy_protocol_policy		install a proxy protocol policy if needed
modules.cloud.amazon	ElbManager	_diff_list	a b	find the entries in list a that are not in list b
modules.cloud.amazon	ElbManager	_get_instance_ids		get the current list of instance ids installed in the elb
modules.cloud.amazon	ElbManager	_set_instance_ids		register or deregister instances from an lb instance
modules.cloud.amazon	ElbManager	_get_health_check_target		compose target string from healthcheck parameters
modules.cloud.amazon		_get_most_recent_snapshot	snapshots max_snapshot_age_secs now	gets the most recently created snapshot and optionally filters the result
modules.cloud.amazon		_create_with_wait	snapshot wait_timeout_secs sleep_func	wait for the snapshot to be created
modules.cloud.amazon		find_asgs	conn module name tags	args conn (boto3
modules.cloud.amazon		convert_to_lower	data	convert all uppercase keys in dict with lowercase_ args
modules.cloud.amazon		make_tags_in_proper_format	tags	take a dictionary of tags and convert them into the aws tags format
modules.cloud.amazon		make_tags_in_aws_format	tags	take a dictionary of tags and convert them into the aws tags format
modules.cloud.amazon		get_tags	client stream_name check_mode	retrieve the tags for a kinesis stream
modules.cloud.amazon		find_stream	client stream_name check_mode	retrieve a kinesis stream
modules.cloud.amazon		wait_for_status	client stream_name status wait_timeout	wait for the the status to change for a kinesis stream
modules.cloud.amazon		tags_action	client stream_name tags action	create or delete multiple tags from a kinesis stream
modules.cloud.amazon		recreate_tags_from_list	list_of_tags	recreate tags from a list of tuples into the amazon tag format
modules.cloud.amazon		update_tags	client stream_name tags check_mode	update tags for an amazon resource
modules.cloud.amazon		stream_action	client stream_name shard_count action	create or delete an amazon kinesis stream
modules.cloud.amazon		retention_action	client stream_name retention_period action	increase or decreaste the retention of messages in the kinesis stream
modules.cloud.amazon		update	client current_stream stream_name retention_period	update an amazon kinesis stream
modules.cloud.amazon		create_stream	client stream_name number_of_shards retention_period	create an amazon kinesis stream
modules.cloud.amazon		delete_stream	client stream_name wait wait_timeout	delete an amazon kinesis stream
modules.cloud.amazon		find_address	ec2 public_ip device_id isinstance	find an existing elastic ip address
modules.cloud.amazon		address_is_associated_with_device	ec2 address device_id isinstance	check if the elastic ip is currently associated with the device
modules.cloud.amazon		allocate_address	ec2 domain reuse_existing_ip_allowed	allocate a new elastic ip address when needed and return it
modules.cloud.amazon		release_address	ec2 address check_mode	release a previously allocated elastic ip address
modules.cloud.amazon		find_device	ec2 module device_id isinstance	attempt to find the ec2 instance and return it
modules.cloud.amazon		make_rule_key	prefix rule group_id cidr_ip	creates a unique key for an individual group rule
modules.cloud.amazon		get_target_from_rule	module ec2 rule name	returns tuple of (group_id ip) after validating rule params
modules.cloud.amazon	EFSConnection	get_file_systems		returns generator of file systems including all attributes of fs
modules.cloud.amazon	EFSConnection	get_tags		returns tag list for selected instance of efs
modules.cloud.amazon	EFSConnection	get_mount_targets		returns mount targets for selected instance of efs
modules.cloud.amazon	EFSConnection	get_security_groups		returns security groups for selected instance of efs
modules.cloud.amazon		iterate_all	attr map_method	method creates iterator from boto result set
modules.cloud.amazon		prefix_to_attr	attr_id	helper method to convert id prefix to mount target attribute
modules.cloud.amazon		first_or_default	items default	helper method to fetch first element of list if exists
modules.cloud.amazon		has_tags	available required	helper method to determine if tag requested already exists
modules.cloud.amazon		has_targets	available required	helper method to determine if mount tager requested already exists
modules.cloud.amazon		group_list_of_dict	array	helper method to group list of dict to dict with all possible values
modules.cloud.amazon		main		module action handler
modules.cloud.amazon		convert_to_lower	data	convert all uppercase keys in dict with lowercase_ args
modules.cloud.amazon		get_nat_gateways	client subnet_id nat_gateway_id states	retrieve a list of nat gateways args
modules.cloud.amazon		wait_for_status	client wait_timeout nat_gateway_id status	wait for the nat gateway to reach a status args
modules.cloud.amazon		gateway_in_subnet_exists	client subnet_id allocation_id check_mode	retrieve all nat gateways for a subnet
modules.cloud.amazon		get_eip_allocation_id_by_address	client eip_address check_mode	release an eip from your eip pool args
modules.cloud.amazon		allocate_eip_address	client check_mode	release an eip from your eip pool args
modules.cloud.amazon		release_address	client allocation_id check_mode	release an eip from your eip pool args
modules.cloud.amazon		create	client subnet_id allocation_id client_token	create an amazon nat gateway
modules.cloud.amazon		pre_create	client subnet_id allocation_id eip_address	create an amazon nat gateway
modules.cloud.amazon		remove	client nat_gateway_id wait wait_timeout	delete an amazon nat gateway
modules.cloud.amazon		get_server_certs	iam name	retrieve the attributes of a server certificate if it exists or all certs
modules.cloud.amazon		create	module connection replication_id cluster_id	create an elasticache backup
modules.cloud.amazon		copy	module connection name target	copy an elasticache backup
modules.cloud.amazon		delete	module connection name	delete an elasticache backup
modules.cloud.amazon	EFSConnection	get_file_systems		returns generator of file systems including all attributes of fs
modules.cloud.amazon	EFSConnection	get_tags		returns tag list for selected instance of efs
modules.cloud.amazon	EFSConnection	get_mount_targets		returns mount targets for selected instance of efs
modules.cloud.amazon	EFSConnection	get_security_groups		returns security groups for selected instance of efs
modules.cloud.amazon	EFSConnection	get_file_system_id	name	returns id of instance by instance name
modules.cloud.amazon	EFSConnection	get_file_system_state	name file_system_id	returns state of filesystem by efs id/name
modules.cloud.amazon	EFSConnection	get_mount_targets_in_state	file_system_id states	returns states of mount targets of selected efs with selected state s optional
modules.cloud.amazon	EFSConnection	create_file_system	name performance_mode	creates new filesystem with selected name
modules.cloud.amazon	EFSConnection	converge_file_system	name tags targets	change attributes mount targets and tags of filesystem by name
modules.cloud.amazon	EFSConnection	delete_file_system	name file_system_id	removes efs instance by id/name
modules.cloud.amazon	EFSConnection	delete_mount_targets	file_system_id	removes mount targets by efs id
modules.cloud.amazon		iterate_all	attr map_method	method creates iterator from boto result set
modules.cloud.amazon		targets_equal	keys a b	method compare two mount targets by specified attributes
modules.cloud.amazon		dict_diff	dict1 dict2 by_key	helper method to calculate difference of two dictionaries
modules.cloud.amazon		first_or_default	items default	helper method to fetch first element of list if exists
modules.cloud.amazon		wait_for	callback value timeout	helper method to wait for desired value returned by callback method
modules.cloud.amazon		main		module action handler
modules.cloud.amazon	Ec2Metadata	fix_invalid_varnames	data	change ':'' and '-' to '_' to ensure valid template variable names
modules.cloud.amazon	Ec2Metadata	add_ec2_region	data	use the 'ansible_ec2_placement_availability_zone' key/value pair to add 'ansible_ec2_placement_region' key/value pair with
modules.cloud.amazon		boto_exception	err	generic error message handler
modules.cloud.amazon		vpc_exists	module vpc name cidr_block	returns none or a vpc object depending on the existence of a vpc when supplied
modules.cloud.amazon		is_fakes3	s3_url	return true if s3_url has scheme fakes3 //
modules.cloud.amazon		is_walrus	s3_url	return true if it's walrus endpoint not s3 we assume anything other than *
modules.cloud.amazon		get_block_device_mapping	image	retrieves block device mapping from ami
modules.cloud.amazon		boto_exception	err	generic error message handler
modules.cloud.amazon		boto_exception	err	generic error message handler
modules.cloud.amazon		calculate_multipart_etag	source_path chunk_size	calculates a multipart upload etag for amazon s3 arguments
modules.cloud.amazon		calculate_local_etag	filelist key_prefix	really "calculate md5", but since aws uses their own format we'll just call it a "local etag"
modules.cloud.amazon		boto_exception	err	generic error message handler
modules.cloud.amazon		_paginate	func attr	paginates the results from func by continuously passing in the returned marker if the results were truncated
modules.cloud.amazon		set_users_groups	module iam name groups	sets groups for a user will purge groups not explicitly passed while retaining pre-existing groups that also are in the new list
modules.cloud.amazon		_collect_facts	resource	transfrom cluster information to dict
modules.cloud.amazon		create_cluster	module redshift	create a new cluster
modules.cloud.amazon		describe_cluster	module redshift	collect data about the cluster
modules.cloud.amazon		delete_cluster	module redshift	delete a cluster
modules.cloud.amazon		modify_cluster	module redshift	modify an existing cluster
modules.cloud.amazon		create_instance	module client instance_name	create an instance module ansible module object
modules.cloud.amazon		delete_instance	module client instance_name	terminates an instance module ansible module object
modules.cloud.amazon		restart_instance	module client instance_name	reboot an existing instance module ansible module object
modules.cloud.amazon		startstop_instance	module client instance_name state	starts or stops an existing instance module ansible module object
modules.cloud.amazon		_find_instance_info	client instance_name	handle exceptions where this function is called
modules.cloud.amazon		get_url	module url	get url and return response
modules.cloud.amazon		ubuntu	module	get the ami for ubuntu
modules.cloud.amazon		lookup_ubuntu_ami	table release stream store	look up the ubuntu ami that matches query given a table of amis
modules.cloud.amazon		get_block_device_mapping	image	retrieves block device mapping from ami
modules.cloud.amazon		create_image	module ec2	creates new ami
modules.cloud.amazon		boto_supports_volume_encryption		check if boto library supports encryption of ebs volumes added in 2 29 0
modules.cloud.amazon		boto_supports_kms_key_id		check if boto library supports kms_key_ids added in 2 39 0
modules.cloud.amazon		modify_dot_attribute	module ec2 instance device_name	modify delete_on_termination attribute
modules.cloud.amazon		fix_return	node	fixup returned dictionary
modules.cloud.amazon		alias_details	client module	returns list of aliases for a specified function
modules.cloud.amazon		all_details	client module	returns all lambda related facts
modules.cloud.amazon		config_details	client module	returns configuration details for one or all lambda functions
modules.cloud.amazon		mapping_details	client module	returns all lambda event source mappings
modules.cloud.amazon		policy_details	client module	returns policy attached to a lambda function
modules.cloud.amazon		version_details	client module	returns all lambda function versions
modules.cloud.amazon		main		main entry point
modules.cloud.amazon	ElbManager	deregister	wait timeout	de-register the instance from all elbs and wait for the elb
modules.cloud.amazon	ElbManager	register	wait enable_availability_zone timeout	register the instance for all elbs and wait for the elb
modules.cloud.amazon	ElbManager	exists	lbtest	verify that the named elb actually exists
modules.cloud.amazon	ElbManager	_enable_availailability_zone	lb	enable the current instance's availability zone in the provided lb
modules.cloud.amazon	ElbManager	_await_elb_instance_state	lb awaited_state initial_state timeout	wait for an elb to change state
modules.cloud.amazon	ElbManager	_is_instance_state_pending	instance_state	determines whether the instance_state is "pending", meaning there is an operation under way to bring it in service
modules.cloud.amazon	ElbManager	_get_instance_health	lb	check instance health should return status object or none under certain error conditions
modules.cloud.amazon	ElbManager	_get_instance_lbs	ec2_elbs	returns a list of elbs attached to self instance_id
modules.cloud.amazon	ElbManager	_get_auto_scaling_group_lbs		returns a list of elbs associated with self instance_id
modules.cloud.amazon	ElbManager	_get_instance		returns a boto ec2 instanceobject for self instance_id
modules.cloud.amazon		is_fakes3	s3_url	return true if s3_url has scheme fakes3 //
modules.cloud.amazon		is_walrus	s3_url	return true if it's walrus endpoint not s3 we assume anything other than *
modules.cloud.amazon	CloudWatchEventRule	describe		returns the existing details of the rule in aws
modules.cloud.amazon	CloudWatchEventRule	put	enabled	creates or updates the rule in aws
modules.cloud.amazon	CloudWatchEventRule	delete		deletes the rule in aws
modules.cloud.amazon	CloudWatchEventRule	enable		enables the rule in aws
modules.cloud.amazon	CloudWatchEventRule	disable		disables the rule in aws
modules.cloud.amazon	CloudWatchEventRule	list_targets		lists the existing targets for the rule in aws
modules.cloud.amazon	CloudWatchEventRule	put_targets	targets	creates or updates the provided targets on the rule in aws
modules.cloud.amazon	CloudWatchEventRule	remove_targets	target_ids	removes the provided targets from the rule in aws
modules.cloud.amazon	CloudWatchEventRule	remove_all_targets		removes all targets on rule
modules.cloud.amazon	CloudWatchEventRule	_targets_request	targets	formats each target for the request
modules.cloud.amazon	CloudWatchEventRule	_snakify	dict	converts cammel case to snake case
modules.cloud.amazon	CloudWatchEventRuleManager	ensure_present	enabled	ensures the rule and targets are present and synced
modules.cloud.amazon	CloudWatchEventRuleManager	ensure_disabled		ensures the rule and targets are present but disabled and synced
modules.cloud.amazon	CloudWatchEventRuleManager	ensure_absent		ensures the rule and targets are absent
modules.cloud.amazon	CloudWatchEventRuleManager	fetch_aws_state		retrieves rule and target state from aws
modules.cloud.amazon	CloudWatchEventRuleManager	_sync_rule	enabled	syncs local rule state with aws
modules.cloud.amazon	CloudWatchEventRuleManager	_sync_targets		syncs local targets with aws
modules.cloud.amazon	CloudWatchEventRuleManager	_sync_state	enabled	syncs local rule state with aws
modules.cloud.amazon	CloudWatchEventRuleManager	_create	enabled	creates rule and targets on aws
modules.cloud.amazon	CloudWatchEventRuleManager	_rule_matches_aws		checks if the local rule data matches aws
modules.cloud.amazon	CloudWatchEventRuleManager	_targets_to_put		returns a list of targets that need to be updated or added remotely
modules.cloud.amazon	CloudWatchEventRuleManager	_remote_target_ids_to_remove		returns a list of targets that need to be removed remotely
modules.cloud.amazon	CloudWatchEventRuleManager	_remote_state		returns the remote state from aws
modules.cloud.amazon		get_cloudwatchevents_client	module	returns a boto3 client for accessing cloudwatch events
modules.cloud.amazon	CloudFormationServiceManager	paginated_response	func result_key next_token	returns expanded response for paginated operations
modules.cloud.amazon		to_dict	items key value	transforms a list of items to a key/value dictionary
modules.cloud.amazon	ElastiCacheManager	ensure_present		ensure cache cluster exists or create it if not
modules.cloud.amazon	ElastiCacheManager	ensure_absent		ensure cache cluster is gone or delete it if not
modules.cloud.amazon	ElastiCacheManager	ensure_rebooted		ensure cache cluster is gone or delete it if not
modules.cloud.amazon	ElastiCacheManager	exists		check if cache cluster exists
modules.cloud.amazon	ElastiCacheManager	create		create an elasticache cluster
modules.cloud.amazon	ElastiCacheManager	delete		destroy an elasticache cluster
modules.cloud.amazon	ElastiCacheManager	sync		sync settings to cluster if required
modules.cloud.amazon	ElastiCacheManager	modify		modify the cache cluster note it's only possible to modify a few select options
modules.cloud.amazon	ElastiCacheManager	reboot		reboot the cache cluster
modules.cloud.amazon	ElastiCacheManager	get_info		return basic info about the cache cluster
modules.cloud.amazon	ElastiCacheManager	_wait_for_status	awaited_status	wait for status to change from present status to awaited_status
modules.cloud.amazon	ElastiCacheManager	_requires_modification		check if cluster requires nondestructive modification
modules.cloud.amazon	ElastiCacheManager	_requires_destroy_and_create		check whether a destroy and create is required to synchronize cluster
modules.cloud.amazon	ElastiCacheManager	_get_elasticache_connection		get an elasticache connection
modules.cloud.amazon	ElastiCacheManager	_get_port		get the port where this information is retrieved from is engine dependent
modules.cloud.amazon	ElastiCacheManager	_refresh_data	cache_cluster_data	refresh data about this cache cluster
modules.cloud.amazon	ElastiCacheManager	_get_nodes_to_remove		if there are nodes to remove it figures out which need to be removed
modules.cloud.amazon		boto_exception	err	generic error message handler
modules.cloud.amazon		assert_policy_shape	policy	since the policy seems a little uh fragile make sure we know approximately what we're looking at
modules.cloud.lxd	LXDProfileManagement	__init__	module	management of lxc containers via ansible
modules.cloud.lxd	LXDProfileManagement	run		run the main method
modules.cloud.lxd		main		ansible main module
modules.cloud.lxd	LXDContainerManagement	__init__	module	management of lxc containers via ansible
modules.cloud.lxd	LXDContainerManagement	run		run the main method
modules.cloud.lxd		main		ansible main module
modules.cloud.centurylink	ClcPublicIp	process_request		process the request - main code path
modules.cloud.centurylink	ClcPublicIp	_define_module_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcPublicIp	ensure_public_ip_present	server_ids protocol ports	ensures the given server ids having the public ip available
modules.cloud.centurylink	ClcPublicIp	ensure_public_ip_absent	server_ids	ensures the given server ids having the public ip removed if there is any
modules.cloud.centurylink	ClcPublicIp	_wait_for_requests_to_complete	requests_lst	waits until the clc requests are complete if the wait argument is true
modules.cloud.centurylink	ClcPublicIp	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcPublicIp	_get_servers_from_clc	server_ids message	gets list of servers form clc api
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.centurylink	ClcBlueprintPackage	process_request		process the request - main code path
modules.cloud.centurylink	ClcBlueprintPackage	define_argument_spec		this function defines the dictionary object required for
modules.cloud.centurylink	ClcBlueprintPackage	ensure_package_installed	server_ids package_id package_params	ensure the package is installed in the given list of servers
modules.cloud.centurylink	ClcBlueprintPackage	clc_install_package	server package_id package_params	install the package to a given clc server
modules.cloud.centurylink	ClcBlueprintPackage	_wait_for_requests_to_complete	request_lst	waits until the clc requests are complete if the wait argument is true
modules.cloud.centurylink	ClcBlueprintPackage	_get_servers_from_clc	server_list message	internal function to fetch list of clc server objects from a list of server ids
modules.cloud.centurylink	ClcBlueprintPackage	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcGroup	process_request		execute the main code path and handle the request
modules.cloud.centurylink	ClcGroup	_define_module_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcGroup	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcGroup	_ensure_group_is_absent	group_name parent_name	ensure that group_name is absent by deleting it if necessary
modules.cloud.centurylink	ClcGroup	_delete_group	group_name	delete the provided server group
modules.cloud.centurylink	ClcGroup	_ensure_group_is_present	group_name parent_name group_description	checks to see if a server group exists creates it if it doesn't
modules.cloud.centurylink	ClcGroup	_create_group	group parent description	create the provided server group
modules.cloud.centurylink	ClcGroup	_group_exists	group_name parent_name	check to see if a group exists
modules.cloud.centurylink	ClcGroup	_get_group_tree_for_datacenter	datacenter	walk the tree of groups for a datacenter
modules.cloud.centurylink	ClcGroup	_walk_groups_recursive	parent_group child_group	walk a parent-child tree of groups starting with the provided child group
modules.cloud.centurylink	ClcGroup	_wait_for_requests_to_complete	requests_lst	waits until the clc requests are complete if the wait argument is true
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.centurylink	ClcServer	process_request		process the request - main code path
modules.cloud.centurylink	ClcServer	_define_module_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcServer	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcServer	_validate_module_params	clc module	validate the module params and lookup default values
modules.cloud.centurylink	ClcServer	_find_datacenter	clc module	find the datacenter by calling the clc api
modules.cloud.centurylink	ClcServer	_find_alias	clc module	find or validate the account alias by calling the clc api
modules.cloud.centurylink	ClcServer	_find_cpu	clc module	find or validate the cpu value by calling the clc api
modules.cloud.centurylink	ClcServer	_find_memory	clc module	find or validate the memory value by calling the clc api
modules.cloud.centurylink	ClcServer	_find_description	module	set the description module param to name if description is blank
modules.cloud.centurylink	ClcServer	_validate_types	module	validate that type and storage_type are set appropriately and fail if not
modules.cloud.centurylink	ClcServer	_validate_name	module	validate that name is the correct length if provided fail if it's not
modules.cloud.centurylink	ClcServer	_find_ttl	clc module	validate that ttl is > 3600 if set and fail if not
modules.cloud.centurylink	ClcServer	_find_template_id	module datacenter	find the template id by calling the clc api
modules.cloud.centurylink	ClcServer	_find_network_id	module datacenter	validate the provided network id or return a default
modules.cloud.centurylink	ClcServer	_find_aa_policy_id	clc module	validate if the anti affinity policy exist for the given name and throw error if not
modules.cloud.centurylink	ClcServer	_find_alert_policy_id	clc module	validate if the alert policy exist for the given name and throw error if not
modules.cloud.centurylink	ClcServer	_create_servers	module clc override_count	create new servers in clc cloud
modules.cloud.centurylink	ClcServer	_enforce_count	module clc	enforce that there is the right number of servers in the provided group
modules.cloud.centurylink	ClcServer	_wait_for_requests	module request_list	block until server provisioning requests are completed
modules.cloud.centurylink	ClcServer	_refresh_servers	module servers	loop through a list of servers and refresh them
modules.cloud.centurylink	ClcServer	_add_public_ip_to_servers	module should_add_public_ip servers public_ip_protocol	create a public ip for servers
modules.cloud.centurylink	ClcServer	_add_alert_policy_to_servers	clc module servers	associate the alert policy to servers
modules.cloud.centurylink	ClcServer	_add_alert_policy_to_server	clc alias server_id alert_policy_id	associate an alert policy to a clc server
modules.cloud.centurylink	ClcServer	_get_alert_policy_id_by_name	clc module alias alert_policy_name	returns the alert policy id for the given alert policy name
modules.cloud.centurylink	ClcServer	_delete_servers	module clc server_ids	delete the servers on the provided list
modules.cloud.centurylink	ClcServer	_start_stop_servers	module clc server_ids	start or stop the servers on the provided list
modules.cloud.centurylink	ClcServer	_change_server_power_state	module server state	change the server powerstate
modules.cloud.centurylink	ClcServer	_find_running_servers_by_group	module datacenter count_group	find a list of running servers in the provided group
modules.cloud.centurylink	ClcServer	_find_group	module datacenter lookup_group	find a server group in a datacenter by calling the clc api
modules.cloud.centurylink	ClcServer	_find_group_recursive	module group_list lookup_group	find a server group by recursively walking the tree
modules.cloud.centurylink	ClcServer	_create_clc_server	clc module server_params	call the clc rest api to create a server
modules.cloud.centurylink	ClcServer	_get_anti_affinity_policy_id	clc module alias aa_policy_name	retrieves the anti affinity policy id of the server based on the name of the policy
modules.cloud.centurylink	ClcServer	_find_server_by_uuid_w_retry	clc module svr_uuid alias	find the clc server by the uuid returned from the provisioning request retry the request if a 404 is returned
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.centurylink	ClcLoadBalancer	process_request		execute the main code path and handle the request
modules.cloud.centurylink	ClcLoadBalancer	ensure_loadbalancer_present	name alias location description	checks to see if a load balancer exists and creates one if it does not
modules.cloud.centurylink	ClcLoadBalancer	ensure_loadbalancerpool_present	lb_id alias location method	checks to see if a load balancer pool exists and creates one if it does not
modules.cloud.centurylink	ClcLoadBalancer	ensure_loadbalancer_absent	name alias location	checks to see if a load balancer exists and deletes it if it does
modules.cloud.centurylink	ClcLoadBalancer	ensure_loadbalancerpool_absent	alias location name port	checks to see if a load balancer pool exists and deletes it if it does
modules.cloud.centurylink	ClcLoadBalancer	ensure_lbpool_nodes_set	alias location name port	checks to see if the provided list of nodes exist for the pool
modules.cloud.centurylink	ClcLoadBalancer	ensure_lbpool_nodes_present	alias location name port	checks to see if the provided list of nodes exist for the pool and add the missing nodes to the pool
modules.cloud.centurylink	ClcLoadBalancer	ensure_lbpool_nodes_absent	alias location name port	checks to see if the provided list of nodes exist for the pool and removes them if found any
modules.cloud.centurylink	ClcLoadBalancer	create_loadbalancer	name alias location description	create a loadbalancer w/ params
modules.cloud.centurylink	ClcLoadBalancer	create_loadbalancerpool	alias location lb_id method	creates a pool on the provided load balancer
modules.cloud.centurylink	ClcLoadBalancer	delete_loadbalancer	alias location name	delete clc loadbalancer
modules.cloud.centurylink	ClcLoadBalancer	delete_loadbalancerpool	alias location lb_id pool_id	delete the pool on the provided load balancer
modules.cloud.centurylink	ClcLoadBalancer	_get_loadbalancer_id	name	retrieves unique id of loadbalancer
modules.cloud.centurylink	ClcLoadBalancer	_get_loadbalancer_list	alias location	retrieve a list of loadbalancers
modules.cloud.centurylink	ClcLoadBalancer	_loadbalancer_exists	name	verify a loadbalancer exists
modules.cloud.centurylink	ClcLoadBalancer	_loadbalancerpool_exists	alias location port lb_id	checks to see if a pool exists on the specified port on the provided load balancer
modules.cloud.centurylink	ClcLoadBalancer	_loadbalancerpool_nodes_exists	alias location lb_id pool_id	checks to see if a set of nodes exists on the specified port on the provided load balancer
modules.cloud.centurylink	ClcLoadBalancer	set_loadbalancernodes	alias location lb_id pool_id	updates nodes to the provided pool
modules.cloud.centurylink	ClcLoadBalancer	add_lbpool_nodes	alias location lb_id pool_id	add nodes to the provided pool
modules.cloud.centurylink	ClcLoadBalancer	remove_lbpool_nodes	alias location lb_id pool_id	removes nodes from the provided pool
modules.cloud.centurylink	ClcLoadBalancer	_get_lbpool_nodes	alias location lb_id pool_id	return the list of nodes available to the provided load balancer pool
modules.cloud.centurylink	ClcLoadBalancer	define_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcLoadBalancer	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.centurylink	ClcSnapshot	process_request		process the request - main code path
modules.cloud.centurylink	ClcSnapshot	ensure_server_snapshot_present	server_ids expiration_days	ensures the given set of server_ids have the snapshots created
modules.cloud.centurylink	ClcSnapshot	_create_server_snapshot	server expiration_days	create the snapshot for the clc server
modules.cloud.centurylink	ClcSnapshot	ensure_server_snapshot_absent	server_ids	ensures the given set of server_ids have the snapshots removed
modules.cloud.centurylink	ClcSnapshot	_delete_server_snapshot	server	delete snapshot for the clc server
modules.cloud.centurylink	ClcSnapshot	ensure_server_snapshot_restore	server_ids	ensures the given set of server_ids have the snapshots restored
modules.cloud.centurylink	ClcSnapshot	_restore_server_snapshot	server	restore snapshot for the clc server
modules.cloud.centurylink	ClcSnapshot	_wait_for_requests_to_complete	requests_lst	waits until the clc requests are complete if the wait argument is true
modules.cloud.centurylink	ClcSnapshot	define_argument_spec		this function defines the dictionary object required for
modules.cloud.centurylink	ClcSnapshot	_get_servers_from_clc	server_list message	internal function to fetch list of clc server objects from a list of server ids
modules.cloud.centurylink	ClcSnapshot	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcAlertPolicy	_define_module_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcAlertPolicy	process_request		process the request - main code path
modules.cloud.centurylink	ClcAlertPolicy	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcAlertPolicy	_ensure_alert_policy_is_present		ensures that the alert policy is present
modules.cloud.centurylink	ClcAlertPolicy	_ensure_alert_policy_is_absent		ensures that the alert policy is absent
modules.cloud.centurylink	ClcAlertPolicy	_ensure_alert_policy_is_updated	alert_policy	ensures the alert policy is updated if anything is changed in the alert policy configuration
modules.cloud.centurylink	ClcAlertPolicy	_get_alert_policies	alias	get the alert policies for account alias by calling the clc api
modules.cloud.centurylink	ClcAlertPolicy	_create_alert_policy		create an alert policy using the clc api
modules.cloud.centurylink	ClcAlertPolicy	_update_alert_policy	alert_policy_id	update alert policy using the clc api
modules.cloud.centurylink	ClcAlertPolicy	_delete_alert_policy	alias policy_id	delete an alert policy using the clc api
modules.cloud.centurylink	ClcAlertPolicy	_alert_policy_exists	policy_name	check to see if an alert policy exists
modules.cloud.centurylink	ClcAlertPolicy	_get_alert_policy_id	module alert_policy_name	retrieves the alert policy id of the account based on the name of the policy
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.centurylink	ClcFirewallPolicy	_define_module_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcFirewallPolicy	process_request		execute the main code path and handle the request
modules.cloud.centurylink	ClcFirewallPolicy	_get_policy_id_from_response	response	method to parse out the policy id from creation response
modules.cloud.centurylink	ClcFirewallPolicy	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcFirewallPolicy	_ensure_firewall_policy_is_present	source_account_alias location firewall_dict	ensures that a given firewall policy is present
modules.cloud.centurylink	ClcFirewallPolicy	_ensure_firewall_policy_is_absent	source_account_alias location firewall_dict	ensures that a given firewall policy is removed if present
modules.cloud.centurylink	ClcFirewallPolicy	_create_firewall_policy	source_account_alias location firewall_dict	creates the firewall policy for the given account alias
modules.cloud.centurylink	ClcFirewallPolicy	_delete_firewall_policy	source_account_alias location firewall_policy_id	deletes a given firewall policy for an account alias in a datacenter
modules.cloud.centurylink	ClcFirewallPolicy	_update_firewall_policy	source_account_alias location firewall_policy_id firewall_dict	updates a firewall policy for a given datacenter and account alias
modules.cloud.centurylink	ClcFirewallPolicy	_compare_get_request_with_dict	response firewall_dict	helper method to compare the json response for getting the firewall policy with the request parameters
modules.cloud.centurylink	ClcFirewallPolicy	_get_firewall_policy	source_account_alias location firewall_policy_id	get back details for a particular firewall policy
modules.cloud.centurylink	ClcFirewallPolicy	_wait_for_requests_to_complete	source_account_alias location firewall_policy_id wait_limit	waits until the clc requests are complete if the wait argument is true
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.centurylink	ClcModifyServer	process_request		process the request - main code path
modules.cloud.centurylink	ClcModifyServer	_define_module_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcModifyServer	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcModifyServer	_get_servers_from_clc	server_list message	internal function to fetch list of clc server objects from a list of server ids
modules.cloud.centurylink	ClcModifyServer	_modify_servers	server_ids	modify the servers configuration on the provided list
modules.cloud.centurylink	ClcModifyServer	_ensure_server_config	server server_params	ensures the server is updated with the provided cpu and memory
modules.cloud.centurylink	ClcModifyServer	_modify_clc_server	clc module server_id cpu	modify the memory or cpu of a clc server
modules.cloud.centurylink	ClcModifyServer	_wait_for_requests	module request_list	block until server provisioning requests are completed
modules.cloud.centurylink	ClcModifyServer	_refresh_servers	module servers	loop through a list of servers and refresh them
modules.cloud.centurylink	ClcModifyServer	_ensure_aa_policy_present	server server_params	ensures the server is updated with the provided anti affinity policy
modules.cloud.centurylink	ClcModifyServer	_ensure_aa_policy_absent	server server_params	ensures the the provided anti affinity policy is removed from the server
modules.cloud.centurylink	ClcModifyServer	_modify_aa_policy	clc module acct_alias server_id	modifies the anti affinity policy of the clc server
modules.cloud.centurylink	ClcModifyServer	_delete_aa_policy	clc module acct_alias server_id	delete the anti affinity policy of the clc server
modules.cloud.centurylink	ClcModifyServer	_get_aa_policy_id_by_name	clc module alias aa_policy_name	retrieves the anti affinity policy id of the server based on the name of the policy
modules.cloud.centurylink	ClcModifyServer	_get_aa_policy_id_of_server	clc module alias server_id	retrieves the anti affinity policy id of the server based on the clc server id
modules.cloud.centurylink	ClcModifyServer	_ensure_alert_policy_present	server server_params	ensures the server is updated with the provided alert policy
modules.cloud.centurylink	ClcModifyServer	_ensure_alert_policy_absent	server server_params	ensures the alert policy is removed from the server
modules.cloud.centurylink	ClcModifyServer	_add_alert_policy_to_server	clc module acct_alias server_id	add the alert policy to clc server
modules.cloud.centurylink	ClcModifyServer	_remove_alert_policy_to_server	clc module acct_alias server_id	remove the alert policy to the clc server
modules.cloud.centurylink	ClcModifyServer	_get_alert_policy_id_by_name	clc module alias alert_policy_name	retrieves the alert policy id of the server based on the name of the policy
modules.cloud.centurylink	ClcModifyServer	_alert_policy_exists	server alert_policy_id	checks if the alert policy exists for the server
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.centurylink	ClcAntiAffinityPolicy	_define_module_argument_spec		define the argument spec for the ansible module
modules.cloud.centurylink	ClcAntiAffinityPolicy	process_request		process the request - main code path
modules.cloud.centurylink	ClcAntiAffinityPolicy	_set_clc_credentials_from_env		set the clc credentials on the sdk by reading environment variables
modules.cloud.centurylink	ClcAntiAffinityPolicy	_get_policies_for_datacenter	p	get the policies for a datacenter by calling the clc api
modules.cloud.centurylink	ClcAntiAffinityPolicy	_create_policy	p	create an anti affinity policy using the clc api
modules.cloud.centurylink	ClcAntiAffinityPolicy	_delete_policy	p	delete an anti affinity policy using the clc api
modules.cloud.centurylink	ClcAntiAffinityPolicy	_policy_exists	policy_name	check to see if an anti affinity policy exists
modules.cloud.centurylink	ClcAntiAffinityPolicy	_ensure_policy_is_absent	p	makes sure that a policy is absent
modules.cloud.centurylink	ClcAntiAffinityPolicy	_ensure_policy_is_present	p	ensures that a policy is present
modules.cloud.centurylink		main		the main function instantiates the module and calls process_request
modules.cloud.rackspace		cloudfiles	module container_ state meta_	dispatch from here to work with metadata or file objects
modules.cloud.rackspace		rax_dns_record	module comment data domain	function for manipulating record types other than ptr
modules.cloud.rackspace		_upload_folder	cf folder container ttl	uploads a folder to cloud files
modules.cloud.rackspace		upload	module cf container src	uploads a single object or a folder to cloud files optionally sets an metadata ttl value expires or content-disposition and content-encoding
modules.cloud.rackspace		download	module cf container src	download objects from cloud files to a local path specified by "dest"
modules.cloud.rackspace		delete	module cf container src	delete specific objects by proving a single file name or a comma-separated list to src or dest but not both
modules.cloud.rackspace		get_meta	module cf container src	get metadata for a single file comma-separated list or entire
modules.cloud.rackspace		put_meta	module cf container src	set metadata on a container single file or comma-separated list
modules.cloud.rackspace		delete_meta	module cf container src	removes metadata keys and values specified in meta if any deletes on
modules.cloud.rackspace		cloudfiles	module container src dest	dispatch from here to work with metadata or file objects
modules.cloud.rackspace		_get_node	lb node_id address port	return a matching node
modules.utilities.logic		_convert_host_to_ip	host	perform forward dns resolution on host ip will give the same ip
modules.utilities.logic		_convert_host_to_hex	host	convert the provided host to the format in /proc/net/tcp*
modules.utilities.logic		_create_connection	host port connect_timeout	connect to a 2-tuple host port and return the socket object
modules.utilities.logic		_filter_non_json_lines	data	used to filter unrelated output around module json output like messages from tcagetattr or where dropbear spews motd on every single command which is nuts
modules.utilities.helper		get_pid_location	module	try to find a pid directory in the common locations falling
modules.monitoring	LogicMonitor	rpc	action params	make a call to the logicmonitor rpc library
modules.monitoring	LogicMonitor	do	action params	make a call to the logicmonitor
modules.monitoring	LogicMonitor	get_collectors		returns a json object containing a list of
modules.monitoring	LogicMonitor	get_host_by_hostname	hostname collector	returns a host object for the host matching the
modules.monitoring	LogicMonitor	get_host_by_displayname	displayname	returns a host object for the host matching the
modules.monitoring	LogicMonitor	get_collector_by_description	description	returns a json collector object for the collector
modules.monitoring	LogicMonitor	get_group	fullpath	returns a json group object for the group matching the
modules.monitoring	LogicMonitor	create_group	fullpath	recursively create a path of host groups
modules.monitoring	Collector	__init__	params module	initializor for the logicmonitor collector object
modules.monitoring	Collector	create		idempotent function to make sure that there is
modules.monitoring	Collector	remove		idempotent function to make sure that there is
modules.monitoring	Collector	get_installer_binary		download the logicmonitor collector installer binary
modules.monitoring	Collector	install		execute the logicmonitor installer if not
modules.monitoring	Collector	uninstall		uninstall logicmontitor collector from the system
modules.monitoring	Collector	sdt		create a scheduled down time
modules.monitoring	Collector	site_facts		output current properties information for the collector
modules.monitoring	Collector	_get		returns a json object representing this collector
modules.monitoring	Collector	_create		create a new collector in the associated
modules.monitoring	Collector	_unreigster		delete this collector from the associated
modules.monitoring	Host	__init__	params module	initializor for the logicmonitor host object
modules.monitoring	Host	create		idemopotent function to create if missing
modules.monitoring	Host	get_properties		returns a hash of the properties
modules.monitoring	Host	set_properties	propertyhash	update the host to have the properties
modules.monitoring	Host	add		add this device to monitoring
modules.monitoring	Host	update		this method takes changes made to this host and applies them to the corresponding host
modules.monitoring	Host	remove		remove this host from your logicmonitor account
modules.monitoring	Host	is_changed		return true if the host doesn't
modules.monitoring	Host	sdt		create a scheduled down time
modules.monitoring	Host	site_facts		output current properties information for the host
modules.monitoring	Host	_build_host_hash	hostname displayname collector description	return a property formatted hash for the
modules.monitoring	Host	_verify_property	propname	check with logicmonitor server to
modules.monitoring	Host	_compare_groups	hostresp	function to compare the host's current
modules.monitoring	Host	_compare_props	propresp ignore	function to compare the host's current
modules.monitoring	Host	_strip_groups	groups	function to strip whitespace from group list
modules.monitoring	Datasource	__init__	params module	initializor for the logicmonitor datasource object
modules.monitoring	Datasource	sdt		create a scheduled down time
modules.monitoring	Hostgroup	__init__	params module	initializor for the logicmonitor host object
modules.monitoring	Hostgroup	create		wrapper for self update()
modules.monitoring	Hostgroup	get_properties	final	returns a hash of the properties
modules.monitoring	Hostgroup	set_properties	propertyhash	update the host to have the properties
modules.monitoring	Hostgroup	add		idempotent function to ensure that the host
modules.monitoring	Hostgroup	update		idempotent function to ensure the host group settings alertenable properties etc in the
modules.monitoring	Hostgroup	remove		idempotent function to ensure the host group
modules.monitoring	Hostgroup	is_changed		return true if the host doesn't match
modules.monitoring	Hostgroup	sdt	duration starttime	create a scheduled down time
modules.monitoring	Hostgroup	site_facts		output current properties information for the hostgroup
modules.monitoring	Hostgroup	_build_host_group_hash	fullpath description properties alertenable	return a property formatted hash for the
modules.monitoring	Hostgroup	_verify_property	propname	check with logicmonitor server
modules.monitoring		selector	module	figure out which object and which actions
modules.monitoring		send_deploy_event	module key revision_id deployed_by	send a deploy event to stackdriver
modules.monitoring		send_annotation_event	module key msg annotated_by	send an annotation event to stackdriver
modules.monitoring		post_annotation	annotation api_key	takes annotation dict and api_key string
modules.monitoring		create_annotation	module	takes ansible module object
modules.monitoring		build_headers	api_token	takes api token returns headers with it included
modules.monitoring		main		main function dispatches logic
modules.monitoring	Nagios	_now		the time in seconds since 12 00 00am jan 1 1970
modules.monitoring	Nagios	_write_command	cmd	write the given command to the nagios command file
modules.monitoring	Nagios	_fmt_dt_str	cmd host duration author	format an external-command downtime string
modules.monitoring	Nagios	_fmt_dt_del_str	cmd host svc start	format an external-command downtime deletion string
modules.monitoring	Nagios	_fmt_notif_str	cmd host svc	format an external-command notification string
modules.monitoring	Nagios	schedule_svc_downtime	host services minutes	this command is used to schedule downtime for a particular service
modules.monitoring	Nagios	schedule_host_downtime	host minutes	this command is used to schedule downtime for a particular host
modules.monitoring	Nagios	schedule_host_svc_downtime	host minutes	this command is used to schedule downtime for all services associated with a particular host
modules.monitoring	Nagios	delete_host_downtime	host services comment	this command is used to remove scheduled downtime for a particular host
modules.monitoring	Nagios	schedule_hostgroup_host_downtime	hostgroup minutes	this command is used to schedule downtime for all hosts in a particular hostgroup
modules.monitoring	Nagios	schedule_hostgroup_svc_downtime	hostgroup minutes	this command is used to schedule downtime for all services in a particular hostgroup
modules.monitoring	Nagios	schedule_servicegroup_host_downtime	servicegroup minutes	this command is used to schedule downtime for all hosts in a particular servicegroup
modules.monitoring	Nagios	schedule_servicegroup_svc_downtime	servicegroup minutes	this command is used to schedule downtime for all services in a particular servicegroup
modules.monitoring	Nagios	disable_host_svc_notifications	host	this command is used to prevent notifications from being sent out for all services on the specified host
modules.monitoring	Nagios	disable_host_notifications	host	this command is used to prevent notifications from being sent out for the specified host
modules.monitoring	Nagios	disable_svc_notifications	host services	this command is used to prevent notifications from being sent out for the specified service
modules.monitoring	Nagios	disable_servicegroup_host_notifications	servicegroup	this command is used to prevent notifications from being sent out for all hosts in the specified servicegroup
modules.monitoring	Nagios	disable_servicegroup_svc_notifications	servicegroup	this command is used to prevent notifications from being sent out for all services in the specified servicegroup
modules.monitoring	Nagios	disable_hostgroup_host_notifications	hostgroup	disables notifications for all hosts in a particular hostgroup
modules.monitoring	Nagios	disable_hostgroup_svc_notifications	hostgroup	disables notifications for all services associated with hosts in a particular hostgroup
modules.monitoring	Nagios	enable_host_notifications	host	enables notifications for a particular host
modules.monitoring	Nagios	enable_host_svc_notifications	host	enables notifications for all services on the specified host
modules.monitoring	Nagios	enable_svc_notifications	host services	enables notifications for a particular service
modules.monitoring	Nagios	enable_hostgroup_host_notifications	hostgroup	enables notifications for all hosts in a particular hostgroup
modules.monitoring	Nagios	enable_hostgroup_svc_notifications	hostgroup	enables notifications for all services that are associated with hosts in a particular hostgroup
modules.monitoring	Nagios	enable_servicegroup_host_notifications	servicegroup	enables notifications for all hosts that have services that are members of a particular servicegroup
modules.monitoring	Nagios	enable_servicegroup_svc_notifications	servicegroup	enables notifications for all services that are members of a particular servicegroup
modules.monitoring	Nagios	silence_host	host	this command is used to prevent notifications from being sent out for the host and all services on the specified host
modules.monitoring	Nagios	unsilence_host	host	this command is used to enable notifications for the host and all services on the specified host
modules.monitoring	Nagios	silence_nagios		this command is used to disable notifications for all hosts and services in nagios
modules.monitoring	Nagios	unsilence_nagios		this command is used to enable notifications for all hosts and services in nagios
modules.monitoring	Nagios	nagios_cmd	cmd	this sends an arbitrary command to nagios
modules.monitoring	Nagios	act		figure out what you want to do from ansible and then do the needful at the earliest
modules.monitoring	LogicMonitor	rpc	action params	make a call to the logicmonitor rpc library
modules.monitoring	LogicMonitor	get_collectors		returns a json object containing a list of
modules.monitoring	LogicMonitor	get_host_by_hostname	hostname collector	returns a host object for the host matching the
modules.monitoring	LogicMonitor	get_host_by_displayname	displayname	returns a host object for the host matching the
modules.monitoring	LogicMonitor	get_collector_by_description	description	returns a json collector object for the collector
modules.monitoring	LogicMonitor	get_group	fullpath	returns a json group object for the group matching the
modules.monitoring	LogicMonitor	create_group	fullpath	recursively create a path of host groups
modules.monitoring	Host	__init__	params module	initializor for the logicmonitor host object
modules.monitoring	Host	get_properties		returns a hash of the properties
modules.monitoring	Host	site_facts		output current properties information for the host
modules.monitoring	Hostgroup	__init__	params module	initializor for the logicmonitor host object
modules.monitoring	Hostgroup	get_properties	final	returns a hash of the properties
modules.monitoring	Hostgroup	site_facts		output current properties information for the hostgroup
modules.monitoring		selector	module	figure out which object and which actions
modules.monitoring		query_log_status	module le_path path state	returns whether a log is followed or not
modules.monitoring		follow_log	module le_path logs name	follows one or more logs if not already followed
modules.monitoring		unfollow_log	module le_path logs	unfollows one or more logs if followed
modules.clustering		remove_value	module	remove the value associated with the given key if the recurse parameter
modules.clustering		add	module	adds a service or a check depending on supplied configuration
modules.clustering		remove	module	removes a service or a check
modules.clustering		add_check	module check	registers a check with the given agent currently there is no way
modules.clustering		remove_check	module check_id	removes a check using its id
modules.clustering		add_service	module service	registers a service with the the current agent
modules.clustering		remove_service	module service_id	deregister a service from the given agent using its service id
modules.clustering		get_service_by_id_or_name	consul_api service_id_or_name	iterate the registered services and find one with the given id
modules.storage.infinidat		get_pool	module system	return pool on none
modules.storage.infinidat		get_pool	module system	return pool or none
modules.storage.infinidat		get_volume	module system	return volume or none
modules.storage.infinidat		get_pool	module system	return pool or none
modules.storage.infinidat		get_filesystem	module system	return filesystem or none
modules.storage.infinidat		get_export	module system	retrun export if found fail module if not found
modules.storage.infinidat		update_client	module export	update export client list
modules.storage.infinidat		delete_client	module export	update export client list
modules.storage.infinidat		get_filesystem	module system	return filesystem or none
modules.storage.infinidat		get_export	module filesystem system	retrun export if found when not found return none
modules.storage.infinidat		update_export	module export filesystem system	create new filesystem or update existing one
modules.storage.infinidat		delete_export	module export	delete file system
modules.storage.netapp	NetAppCDOTUser	get_user		checks if the user exists
modules.storage.netapp	NetAppCDOTUser	change_password		changes the password
modules.storage.netapp	NetAppCDOTUserRole	get_role		checks if the role exists for specific command-directory-name
modules.storage.netapp	NetAppCDOTAggregate	get_aggr		checks if aggregate exists
modules.storage.netapp	NetAppCDOTVolume	get_volume		return details about the volume
modules.storage.netapp	NetAppCDOTVolume	rename_volume		rename the volume
modules.storage.netapp	NetAppCDOTVolume	resize_volume		re-size the volume
modules.storage.netapp	NetAppCDOTVolume	change_volume_state		change volume's state (offline/online)
modules.storage.netapp	NetAppCDOTSVM	get_vserver		checks if vserver exists
modules.storage.netapp	SolidFireVolume	get_volume		return volume object if found :return details about the volume
modules.storage.netapp	NetAppCDOTQTree	get_qtree		checks if the qtree exists
modules.storage.netapp	SolidFireAccount	get_account		return account object if found :return details about the account
modules.storage.netapp	NetAppCDOTLUN	get_lun		return details about the lun
modules.storage.netapp	NetAppCDOTLUN	create_lun		create lun with requested name and size
modules.storage.netapp	NetAppCDOTLUN	delete_lun		delete requested lun
modules.storage.netapp	NetAppCDOTLUN	resize_lun		resize requested lun
modules.storage.netapp	SolidFireConnection	check_mvip_connection		check connection to mvip :return true if connection was successful false otherwise
modules.storage.netapp	SolidFireConnection	check_svip_connection		check connection to svip :return true if connection was successful false otherwise
modules.storage.netapp	NetAppCDOTLicense	get_licensing_status		check licensing status
modules.storage.netapp	NetAppCDOTLicense	remove_licenses	remove_list	remove requested licenses
modules.storage.netapp	NetAppCDOTLicense	remove_unused_licenses		remove unused licenses
modules.storage.netapp	NetAppCDOTLicense	remove_expired_licenses		remove expired licenses
modules.storage.netapp	Host	port_on_diff_host	arg_port	checks to see if a passed in port arg is present on a different host
modules.web_infrastructure		regexp_extraction	string _regexp groups	returns the capture group (default=1) specified in the regexp applied to the string
modules.web_infrastructure	BalancerMember	get_member_attributes		returns a dictionary of a balancer member's attributes
modules.web_infrastructure	BalancerMember	get_member_status		returns a dictionary of a balancer member's status attributes
modules.web_infrastructure	BalancerMember	set_member_status	values	sets a balancer member's status attributes amongst pre-mapped values
modules.web_infrastructure	Balancer	fetch_balancer_page		returns the balancer management html page as a string for later parsing
modules.web_infrastructure	Balancer	get_balancer_members		returns members of the balancer as a generator object for later iteration
modules.web_infrastructure		present	dest username password crypt_scheme	ensures user is present
modules.web_infrastructure		absent	dest username check_mode	ensures user is absent
modules.web_infrastructure	EjabberdUser	changed		this method will check the current user and see if the password has changed
modules.web_infrastructure	EjabberdUser	exists		this method will check to see if the supplied username exists for host specified
modules.web_infrastructure	EjabberdUser	log	entry	this method will log information to the local syslog facility
modules.web_infrastructure	EjabberdUser	run_command	cmd options	this method will run the any command specified and return the
modules.web_infrastructure	EjabberdUser	update		the update method will update the credentials for the user provided
modules.web_infrastructure	EjabberdUser	create		the create method will create a new user on the host with the
modules.web_infrastructure	EjabberdUser	delete		the delete method will delete the user from the host
modules.web_infrastructure		manage_issue	module taiga_host project_name issue_subject	method that creates/deletes issues depending whether they exist and the state desired
modules.web_infrastructure		create_apache_identifier	name	by convention if a module is loaded via name it appears in apache2ctl -m as name_module
modules.web_infrastructure		get_cert_days	module cert_file	return the days the certificate in cert_file remains valid and -1 if the file was not found
modules.web_infrastructure		write_file	module dest content	write content to destination file dest only if the content has changed
modules.web_infrastructure	ACMEAccount	get_keyauthorization	token	returns the key authorization for the given token https //tools
modules.web_infrastructure	ACMEAccount	_parse_account_key	key	parses an rsa key file in pem format and returns the modulus
modules.web_infrastructure	ACMEAccount	send_signed_request	url payload	sends a jws signed http post request to the acme server and returns the response as dictionary
modules.web_infrastructure	ACMEAccount	_new_reg	contact	registers a new acme account returns true if the account was
modules.web_infrastructure	ACMEAccount	init_account		create or update an account on the acme server as the only way
modules.web_infrastructure	ACMEAccount	get_authorizations		return a list of currently active authorizations https //tools
modules.web_infrastructure	ACMEClient	_get_csr_domains		parse the csr and return the list of requested domains
modules.web_infrastructure	ACMEClient	_get_domain_auth	domain	get the status string of the first authorization for the given domain
modules.web_infrastructure	ACMEClient	_add_or_update_auth	auth	add or update the given authroization in the global authorizations list
modules.web_infrastructure	ACMEClient	_new_authz	domain	create a new authorization for the given domain
modules.web_infrastructure	ACMEClient	_get_challenge_data	auth	returns a dict with the data for all proposed and supported challenges of the given authorization
modules.web_infrastructure	ACMEClient	_validate_challenges	auth	validate the authorization provided in the auth dict returns true
modules.web_infrastructure	ACMEClient	_new_cert		create a new certificate based on the csr
modules.web_infrastructure	ACMEClient	_der_to_pem	der_cert	convert the der format certificate in der_cert to a pem format certificate and return it
modules.web_infrastructure	ACMEClient	do_challenges		create new authorizations for all domains of the csr and return the challenge details for the chosen challenge type
modules.web_infrastructure	ACMEClient	get_certificate		request a new certificate and write it to the destination file
modules.web_infrastructure.ansible_tower		update_resources	module p	update_resources attempts to fetch any of the resources given
modules.web_infrastructure.ansible_tower		update_fields	p	this updates the module field names to match the field names tower-cli expects to make
galaxy	GalaxyLogin	remove_github_token		if for some reason an ansible-galaxy token was left from a prior login remove it we cannot
galaxy	GalaxyLogin	create_github_token		create a personal authorization token with a note of 'ansible-galaxy login'
galaxy		g_connect	method	wrapper to lazily initialize connection info to galaxy
galaxy	GalaxyAPI	_get_server_api_version		fetches the galaxy api current version to ensure the api server is up and reachable
galaxy	GalaxyAPI	authenticate	github_token	retrieve an authentication token
galaxy	GalaxyAPI	create_import_task	github_user github_repo reference role_name	post an import request
galaxy	GalaxyAPI	get_import_task	task_id github_user github_repo	check the status of an import task
galaxy	GalaxyAPI	lookup_role_by_name	role_name notify	find a role by name
galaxy	GalaxyAPI	fetch_role_related	related role_id	fetch the list of related items for the given role
galaxy	GalaxyAPI	get_list	what	fetch the list of items specified
galaxy	GalaxyRole	__repr__		returns "rolename version " if version is not null
galaxy	GalaxyRole	metadata		returns role metadata
galaxy	GalaxyRole	install_info		returns role install info
galaxy	GalaxyRole	_write_galaxy_install_info		writes a yaml-formatted file to the role's meta/ directory (named
galaxy	GalaxyRole	remove		removes the specified role from the roles path
galaxy	GalaxyRole	fetch	role_data	downloads the archived role from github to a temp location
galaxy	GalaxyRole	spec		returns role spec info {
