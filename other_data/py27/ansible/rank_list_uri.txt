<tt style='background-color:#E8E8E8;'> core. <a href=' /constants.py#L43'>shell_expand</a>(path,expand_relative_paths)</tt>	Shell_expand is needed as os path expanduser does not work.
<tt style='background-color:#E8E8E8;'> core. <a href=' /constants.py#L124'>_get_config</a>(p,section,key,env_var)</tt>	Helper function for get_config.
<tt style='background-color:#E8E8E8;'> core. <a href=' /constants.py#L142'>load_config_file</a>()</tt>	Load config file order first found is used : env cwd home /etc/ansible.
<tt style='background-color:#E8E8E8;'> inventory.InventoryScript <a href=' /inventory/script.py#L150'>get_host_variables</a>(host)</tt>	Runs <script> --host <hostname> to determine additional host variables.
<tt style='background-color:#E8E8E8;'> inventory. <a href=' /inventory/expand_hosts.py#L40'>detect_range</a>(line)</tt>	A helper function that checks a given host line to see if it contains a range pattern described in the docstring above.
<tt style='background-color:#E8E8E8;'> inventory. <a href=' /inventory/expand_hosts.py#L52'>expand_hostname_range</a>(line)</tt>	A helper function that expands a given line that contains a pattern specified in top docstring and returns a list that consists of the.
<tt style='background-color:#E8E8E8;'> inventory.InventoryDirectory <a href=' /inventory/dir.py#L195'>_add_group</a>(group)</tt>	Merge an existing group or add a new one.
<tt style='background-color:#E8E8E8;'> inventory.InventoryDirectory <a href=' /inventory/dir.py#L219'>_merge_groups</a>(group,newgroup)</tt>	Merge all of instance newgroup into group.
<tt style='background-color:#E8E8E8;'> inventory.InventoryDirectory <a href=' /inventory/dir.py#L272'>_merge_hosts</a>(host,newhost)</tt>	Merge all of instance newhost into host.
<tt style='background-color:#E8E8E8;'> inventory.InventoryDirectory <a href=' /inventory/dir.py#L294'>get_host_variables</a>(host)</tt>	Gets additional host variables from all inventories.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/yaml.py#L56'>_parse</a>(lines)</tt>	Populates self groups from the given array of lines raises an error on.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/ini.py#L207'>_parse_group_name</a>(line)</tt>	Takes a single line and tries to parse it as a group name returns the.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/ini.py#L219'>_parse_variable_definition</a>(line)</tt>	Takes a string and tries to parse it as a variable definition returns.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/ini.py#L236'>_parse_host_definition</a>(line)</tt>	Takes a single line and tries to parse it as a host definition returns.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/yaml.py#L118'>_expand_hostpattern</a>(hostpattern)</tt>	Takes a single host pattern and returns a list of hostnames and an optional port number that applies to all of them.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/yaml.py#L144'>_Hosts</a>(hostnames,port)</tt>	Takes a list of hostnames and a port which may be none and returns a list of hosts (without recreating anything in self.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/ini.py#L324'>_parse_value</a>(v)</tt>	Attempt to transform the string value from an ini file into a basic python object int dict list unicode string etc.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/yaml.py#L166'>_compile_patterns</a>()</tt>	Compiles the regular expressions required to parse the inventory and stores them in self patterns.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/yaml.py#L56'>_parse</a>(data)</tt>	Populates self groups from the given array of lines raises an error on.
<tt style='background-color:#E8E8E8;'> inventory.InventoryParser <a href=' /inventory/yaml.py#L103'>_parse_host</a>(host_pattern,host_data)</tt>	Each host key can be a pattern try to process it and add variables as needed.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L225'>get_hosts</a>(pattern,ignore_limits,ignore_restrictions,order)</tt>	Takes a pattern or list of patterns and returns a list of matching.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L278'>split_host_pattern</a>(cls,pattern)</tt>	Takes a string containing host patterns separated by commas or a list thereof and returns a list of single patterns (which may not contain.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L345'>_evaluate_patterns</a>(patterns)</tt>	Takes a list of patterns and returns a list of matching host names taking into account any negative and intersection patterns.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L369'>_match_one_pattern</a>(pattern)</tt>	Takes a single pattern and returns a list of matching host names.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L421'>_split_subscript</a>(pattern)</tt>	Takes a pattern checks if it has a subscript and returns the pattern without the subscript and a start end tuple representing the given.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L466'>_apply_subscript</a>(hosts,subscript)</tt>	Takes a list of hosts and a start end tuple and returns the subset of hosts based on the subscript which may be none to return all hosts.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L484'>_enumerate_matches</a>(pattern)</tt>	Returns a list of host names matching the given pattern according to the rules explained above in _match_one_pattern.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L542'>clear_pattern_cache</a>()</tt>	Called exclusively by the add_host plugin to allow patterns to be recalculated.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L548'>clear_group_dict_cache</a>()</tt>	Called exclusively by the add_host and group_by plugins.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L618'>get_group_dict</a>()</tt>	In get_vars() we merge a 'magic' dictionary 'groups' with group name keys and hostname list values into every host variable set.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L679'>list_hosts</a>(pattern)</tt>	Return a list of hostnames for a pattern.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L691'>restrict_to_hosts</a>(restriction)</tt>	Restrict list operations to the hosts given in restriction this is used.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L703'>subset</a>(subset_pattern)</tt>	Limits inventory results to a subset of inventory that matches a given pattern such as to select a given geographic of numeric slice amongst.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L725'>remove_restriction</a>()</tt>	Do not restrict list operations.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L729'>is_file</a>()</tt>	Did inventory come from a file? we don't use the equivalent loader methods in inventory due to the fact that the loader does an implict.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L740'>is_directory</a>(path)</tt>	Is the inventory host list a directory? same caveat for here as with the is_file() method above.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L749'>basedir</a>()</tt>	If inventory came from a file what's the directory?.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L764'>src</a>()</tt>	If inventory came from a file what's the directory and file name?.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L770'>playbook_basedir</a>()</tt>	Returns the directory of the current playbook.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L774'>set_playbook_basedir</a>(dir_name)</tt>	Sets the base directory of the playbook so inventory can use it as a basedir for host_ and group_vars and other things.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L810'>get_host_vars</a>(host,new_pb_basedir,return_results)</tt>	Read host_vars/ files.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L814'>get_group_vars</a>(group,new_pb_basedir,return_results)</tt>	Read group_vars/ files.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L818'>_find_group_vars_files</a>(basedir)</tt>	Find group_vars/ files.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L831'>_find_host_vars_files</a>(basedir)</tt>	Find host_vars/ files.
<tt style='background-color:#E8E8E8;'> inventory.Inventory <a href=' /inventory/__init__.py#L841'>_get_hostgroup_vars</a>(host,group,new_pb_basedir,return_results)</tt>	Loads variables from group_vars/<groupname> and host_vars/<hostname> in directories parallel to the inventory base directory or in the same directory as the playbook.
<tt style='background-color:#E8E8E8;'> inventory.vars_plugins.VarsModule <a href=' /inventory/vars_plugins/noop.py#L35'>run</a>(host,vault_password)</tt>	For backwards compatibility when only vars per host were retrieved.
<tt style='background-color:#E8E8E8;'> inventory.vars_plugins.VarsModule <a href=' /inventory/vars_plugins/noop.py#L42'>get_host_vars</a>(host,vault_password)</tt>	Get host specific variables.
<tt style='background-color:#E8E8E8;'> inventory.vars_plugins.VarsModule <a href=' /inventory/vars_plugins/noop.py#L47'>get_group_vars</a>(group,vault_password)</tt>	Get group specific variables.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L164'>default</a>(arg,forceshell)</tt>	Actually runs modules.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L237'>do_shell</a>(arg)</tt>	You can run shell commands through the shell module.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L251'>do_forks</a>(arg)</tt>	Set the number of forks.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L261'>do_verbosity</a>(arg)</tt>	Set verbosity level.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L269'>do_cd</a>(arg)</tt>	Change active host/group you can use hosts patterns as well eg :.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L294'>do_list</a>(arg)</tt>	List the hosts in the current group.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L303'>do_become</a>(arg)</tt>	Toggle whether plays run with become.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L312'>do_remote_user</a>(arg)</tt>	Given a username set the remote user plays are run by.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L320'>do_become_user</a>(arg)</tt>	Given a username set the user that plays are run by when using become.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L329'>do_become_method</a>(arg)</tt>	Given a become_method set the privilege escalation method when using become.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L337'>do_check</a>(arg)</tt>	Toggle whether plays run with check mode.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L345'>do_diff</a>(arg)</tt>	Toggle whether plays run with diff.
<tt style='background-color:#E8E8E8;'> cli.ConsoleCLI <a href=' /cli/console.py#L353'>do_exit</a>(args)</tt>	Exits from the console.
<tt style='background-color:#E8E8E8;'> cli.VaultCLI <a href=' /cli/vault.py#L178'>execute_encrypt</a>()</tt>	Encrypt the supplied file using the provided vault secret.
<tt style='background-color:#E8E8E8;'> cli.VaultCLI <a href=' /cli/vault.py#L208'>execute_encrypt_string</a>()</tt>	Encrypt the supplied string using the provided vault secret.
<tt style='background-color:#E8E8E8;'> cli.VaultCLI <a href=' /cli/vault.py#L332'>execute_decrypt</a>()</tt>	Decrypt the supplied file using the provided vault secret.
<tt style='background-color:#E8E8E8;'> cli.VaultCLI <a href=' /cli/vault.py#L344'>execute_create</a>()</tt>	Create and open a file in an editor that will be encryped with the provided vault secret when closed.
<tt style='background-color:#E8E8E8;'> cli.VaultCLI <a href=' /cli/vault.py#L352'>execute_edit</a>()</tt>	Open and decrypt an existing vaulted file in an editor that will be encryped again when closed.
<tt style='background-color:#E8E8E8;'> cli.VaultCLI <a href=' /cli/vault.py#L357'>execute_view</a>()</tt>	Open decrypt and view an existing vaulted file using a pager using the supplied vault secret.
<tt style='background-color:#E8E8E8;'> cli.VaultCLI <a href=' /cli/vault.py#L368'>execute_rekey</a>()</tt>	Re-encrypt a vaulted file with a new secret the previous secret is required.
<tt style='background-color:#E8E8E8;'> cli.AdHocCLI <a href=' /cli/adhoc.py#L53'>parse</a>()</tt>	Create an options parser for bin/ansible.
<tt style='background-color:#E8E8E8;'> cli.AdHocCLI <a href=' /cli/adhoc.py#L98'>run</a>()</tt>	Create and execute the single task playbook.
<tt style='background-color:#E8E8E8;'> cli.DocCLI <a href=' /cli/doc.py#L249'>print_paths</a>(finder)</tt>	Returns a string suitable for printing of the search path.
<tt style='background-color:#E8E8E8;'> cli.PullCLI <a href=' /cli/pull.py#L70'>parse</a>()</tt>	Create an options parser for bin/ansible.
<tt style='background-color:#E8E8E8;'> cli.PullCLI <a href=' /cli/pull.py#L137'>run</a>()</tt>	Use runner lib to do ssh things.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L111'>__init__</a>(args,callback)</tt>	Base init method for all command line programs.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L122'>set_action</a>()</tt>	Get the action the user wants to execute from the sys argv list.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L144'>execute</a>()</tt>	Actually runs a child defined method using the execute_<action> pattern.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L151'>run</a>()</tt>	Run the ansible command subclasses must implement this method.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L165'>ask_vault_passwords</a>()</tt>	Prompt for vault password and/or password change.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L198'>ask_passwords</a>()</tt>	Prompt for connection and become passwords if needed.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L226'>normalize_become_options</a>()</tt>	This keeps backwards compatibility with sudo/su self options.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L240'>validate_conflicts</a>(vault_opts,runas_opts,fork_opts)</tt>	Check for conflicting options.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L273'>expand_paths</a>(option,opt,value,parser)</tt>	Optparse action callback to convert a path style string arg to a list of path strings.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L285'>base_parser</a>(usage,output_opts,runas_opts,meta_opts)</tt>	Create an options parser for most ansible scripts.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L421'>parse</a>()</tt>	Parse the command line args this method parses the command line arguments.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L474'>version</a>(prog)</tt>	Return ansible version.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L492'>version_info</a>(gitinfo)</tt>	Return full ansible version info.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L518'>_git_repo_info</a>(repo_path)</tt>	Returns a string containing git branch commit id and commit date.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L583'>pager</a>(text)</tt>	Find reasonable way to display text.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L601'>pager_pipe</a>(text,cmd)</tt>	Pipe text through a pager.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L625'>read_vault_password_file</a>(vault_password_file,loader)</tt>	Read a vault password from a file or if executable execute the script and.
<tt style='background-color:#E8E8E8;'> cli.CLI <a href=' /cli/__init__.py#L657'>get_opt</a>(k,defval)</tt>	Returns an option from an optparse values instance.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L129'>parse</a>()</tt>	Create an options parser for bin/ansible.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L155'>exit_without_ignore</a>(rc)</tt>	Exits with the specified return code unless the.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L188'>execute_init</a>()</tt>	Creates the skeleton framework of a role that complies with the galaxy metadata format.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L260'>execute_info</a>()</tt>	Prints out detailed information about an installed role as well as info available from the galaxy api.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L307'>execute_install</a>()</tt>	Uses the args list of roles to be installed unless -f was specified the list of roles.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L434'>execute_remove</a>()</tt>	Removes the list of roles passed as arguments from the local system.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L454'>execute_list</a>()</tt>	Lists the roles installed on the local system or matches a single role passed as an argument.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L499'>execute_search</a>()</tt>	Searches for roles on the ansible galaxy server.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L543'>execute_login</a>()</tt>	Verify user's identify via github and retrieve an auth token from ansible galaxy.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L567'>execute_import</a>()</tt>	Used to import a role into ansible galaxy.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L623'>execute_setup</a>()</tt>	Setup an integration from github or travis for ansible galaxy roles.
<tt style='background-color:#E8E8E8;'> cli.GalaxyCLI <a href=' /cli/galaxy.py#L660'>execute_delete</a>()</tt>	Delete a role from ansible galaxy.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L129'>format_paths</a>(paths)</tt>	Returns a string suitable for printing of the search path.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L151'>_get_package_paths</a>(subdirs)</tt>	Gets the path of a python package.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L166'>_get_paths</a>(subdirs)</tt>	Return a list of paths to search for plugins in.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L222'>add_directory</a>(directory,with_subdir)</tt>	Adds an additional directory to the search path.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L235'>find_plugin</a>(name,mod_type,ignore_deprecated)</tt>	Find a plugin named name.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L324'>has_plugin</a>(name)</tt>	Checks if a plugin named name exists.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L341'>get</a>(name)</tt>	Instantiates a plugin of the given name using arguments.
<tt style='background-color:#E8E8E8;'> plugins.PluginLoader <a href=' /plugins/__init__.py#L394'>all</a>()</tt>	Instantiates all plugins with the same arguments.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyModule <a href=' /plugins/strategy/linear.py#L170'>run</a>(iterator,play_context)</tt>	The linear strategy is simple - get the next task and queue.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyModule <a href=' /plugins/strategy/linear.py#L55'>_get_next_task_lockstep</a>(hosts,iterator)</tt>	Returns a list of host task tuples where the task may be a noop task to keep the iterator in lock step across.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L175'>add_tqm_variables</a>(vars,play)</tt>	Base class method to add extra variables/information to the list of task vars sent through the executor engine regarding the task queue manager state.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L183'>_queue_task</a>(host,task,task_vars,play_context)</tt>	Handles queueing the task up to be sent to a worker.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L251'>_process_pending_results</a>(iterator,one_pass,max_passes)</tt>	Reads results off the final queue and takes appropriate action based on the result (executing callbacks updating state etc.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L562'>_wait_on_pending_results</a>(iterator)</tt>	Wait for the shared counter to drop to zero using a short sleep.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L585'>_add_host</a>(host_info,iterator)</tt>	Helper function to add a new host to inventory based on a task result.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L635'>_add_group</a>(host,result_item)</tt>	Helper function to add a group if it does not exist and to assign the specified host to that group.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L671'>_load_included_file</a>(included_file,iterator,is_handler)</tt>	Loads an included yaml file of tasks applying the optional set of variables.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L735'>run_handlers</a>(iterator,play_context)</tt>	Runs handlers on those hosts which have been notified.
<tt style='background-color:#E8E8E8;'> plugins.strategy.StrategyBase <a href=' /plugins/strategy/__init__.py#L922'>get_hosts_left</a>(iterator)</tt>	Returns list of available hosts for this iterator by filtering out unreachables.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/include_vars.py#L74'>_set_args</a>()</tt>	Set instance variables based on the arguments that were passed.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/dellos10.py#L45'>run</a>(tmp,task_vars)</tt>	Handler for fetch operations.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/include_vars.py#L188'>_traverse_dir_depth</a>()</tt>	Recursively iterate over a directory and sort the files in alphabetical order.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/include_vars.py#L204'>_ignore_file</a>(filename)</tt>	Return true if a file matches the list of ignore_files.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/include_vars.py#L221'>_is_valid_file_ext</a>(source_file)</tt>	Verify if source file has a valid extension args.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/include_vars.py#L237'>_load_files</a>(filename,validate_extensions)</tt>	Loads a file and converts the output into a valid python dict.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/include_vars.py#L273'>_load_files_in_dir</a>(root_dir,var_files)</tt>	Load the found yml files and update/overwrite the dictionary.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/synchronize.py#L56'>_format_rsync_rsh_target</a>(host,path,user)</tt>	Formats rsync rsh target escaping ipv6 addresses if needed.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/synchronize.py#L82'>_process_remote</a>(task_args,host,path,user)</tt>	:arg host hostname for the path :arg path file path.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/synchronize.py#L112'>_override_module_replaced_vars</a>(task_vars)</tt>	Some vars are substituted into the modules have to make sure.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/assemble.py#L39'>_assemble_from_fragments</a>(src_path,delimiter,compiled_regexp,ignore_hidden)</tt>	Assemble a file from a directory of fragments.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L75'>run</a>(tmp,task_vars)</tt>	Action plugins should implement this method to perform their tasks.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L111'>_configure_module</a>(module_name,module_args,task_vars)</tt>	Handles the loading and templating of the module code through the modify_module() function.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L171'>_compute_environment_string</a>(raw_environment_out)</tt>	Builds the environment string to be used when executing the remote task.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L204'>_early_needs_tmp_path</a>()</tt>	Determines if a temp path should be created before the action is executed.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L211'>_is_pipelining_enabled</a>(module_style,wrap_async)</tt>	Determines if we are required and can do pipelining.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L233'>_make_tmp_path</a>(remote_user)</tt>	Create and return a temporary path on a remote box.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L296'>_should_remove_tmp_path</a>(tmp_path)</tt>	Determine if temporary path should be deleted or kept by user request/config.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L301'>_remove_tmp_path</a>(tmp_path)</tt>	Remove a temporary path we created.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L319'>_transfer_data</a>(remote_path,data)</tt>	Copies the module data out to the temporary module path.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L345'>_fixup_perms</a>(remote_path,remote_user,execute,recursive)</tt>	We need the files we upload to be readable and sometimes executable by the user being sudo'd to but we want to limit other people's access.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L369'>_fixup_perms2</a>(remote_paths,remote_user,execute)</tt>	We need the files we upload to be readable and sometimes executable by the user being sudo'd to but we want to limit other people's access.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L454'>_remote_chmod</a>(paths,mode,sudoable)</tt>	Issue a remote chmod command.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L462'>_remote_chown</a>(paths,user,sudoable)</tt>	Issue a remote chown command.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L470'>_remote_set_user_facl</a>(paths,user,mode,sudoable)</tt>	Issue a remote call to setfacl.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L478'>_execute_remote_stat</a>(path,all_vars,follow,tmp)</tt>	Get information from remote file.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L512'>_remote_checksum</a>(path,all_vars,follow)</tt>	Produces a remote checksum given a path.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L541'>_remote_expand_user</a>(path,sudoable)</tt>	Takes a remote path and performs tilde expansion on the remote host.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L569'>_strip_success_message</a>(data)</tt>	Removes the become-success message from the data.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L616'>_execute_module</a>(module_name,module_args,tmp,task_vars)</tt>	Transfer and run a module along with its arguments.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L849'>_low_level_execute_command</a>(cmd,sudoable,in_data,executable)</tt>	This is the function which executes the low level shell command which may be commands to create/remove directories for temporary files or to.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionBase <a href=' /plugins/action/__init__.py#L978'>_find_needle</a>(dirname,needle)</tt>	Find a needle in haystack of paths optionally using 'dirname' as a subdir.
<tt style='background-color:#E8E8E8;'> plugins.action.ActionModule <a href=' /plugins/action/copy.py#L322'>_create_content_tempfile</a>(content)</tt>	Create a tempfile containing defined content.
<tt style='background-color:#E8E8E8;'> plugins.shell.ShellBase <a href=' /plugins/shell/__init__.py#L75'>set_user_facl</a>(paths,user,mode)</tt>	Only sets acls for users as that's really all we need.
<tt style='background-color:#E8E8E8;'> plugins.shell.ShellBase <a href=' /plugins/shell/__init__.py#L134'>expand_user</a>(user_home_path)</tt>	Return a command to expand tildes in a path it can be either "~" or "~username".
<tt style='background-color:#E8E8E8;'> plugins.shell.ShellBase <a href=' /plugins/shell/__init__.py#L168'>append_command</a>(cmd,cmd_to_append)</tt>	Append an additional command if supported by the shell.
<tt style='background-color:#E8E8E8;'> plugins.shell.ShellBase <a href=' /plugins/shell/__init__.py#L176'>wrap_for_exec</a>(cmd)</tt>	Wrap script execution with any necessary decoration (eg '&' for quoted powershell script paths).
<tt style='background-color:#E8E8E8;'> plugins.shell.ShellModule <a href=' /plugins/shell/powershell.py#L1165'>_unquote</a>(value)</tt>	Remove any matching quotes that wrap the given value.
<tt style='background-color:#E8E8E8;'> plugins.shell.ShellModule <a href=' /plugins/shell/powershell.py#L1176'>_escape</a>(value,include_vars)</tt>	Return value escaped for use in powershell command.
<tt style='background-color:#E8E8E8;'> plugins.shell.ShellModule <a href=' /plugins/shell/powershell.py#L1190'>_encode_script</a>(script,as_list,strict_mode,preserve_rc)</tt>	Convert a powershell script to a single base64-encoded command.
<tt style='background-color:#E8E8E8;'> plugins.cache.BaseFileCacheModule <a href=' /plugins/cache/__init__.py#L103'>get</a>(key)</tt>	This checks the in memory cache first as the fact was not expired at 'gather time'.
<tt style='background-color:#E8E8E8;'> plugins.cache.BaseFileCacheModule <a href=' /plugins/cache/__init__.py#L210'>_load</a>(filepath)</tt>	Read data from a filepath and return it as a value :arg filepath the filepath to read from.
<tt style='background-color:#E8E8E8;'> plugins.cache.BaseFileCacheModule <a href=' /plugins/cache/__init__.py#L229'>_dump</a>(value,filepath)</tt>	Write data to a filepath.
<tt style='background-color:#E8E8E8;'> plugins.cache.FactCache <a href=' /plugins/cache/__init__.py#L271'>copy</a>()</tt>	Return a primitive copy of the keys and values from the cache.
<tt style='background-color:#E8E8E8;'> plugins.cache.FactCache <a href=' /plugins/cache/__init__.py#L278'>flush</a>()</tt>	Flush the fact cache of all keys.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/dig.py#L36'>make_rdata_dict</a>(rdata)</tt>	While the 'dig' lookup plugin supports anything which dnspython supports out of the box the following supported_types list describes which.
<tt style='background-color:#E8E8E8;'> plugins.lookup.LookupModule <a href=' /plugins/lookup/subelements.py#L32'>run</a>(terms,variables)</tt>	Terms contains a string with things to dig' for we support the.
<tt style='background-color:#E8E8E8;'> plugins.lookup.LookupModule <a href=' /plugins/lookup/sequence.py#L82'>reset</a>()</tt>	Set sensible defaults.
<tt style='background-color:#E8E8E8;'> plugins.lookup.LookupModule <a href=' /plugins/lookup/sequence.py#L90'>parse_kv_args</a>(args)</tt>	Parse key-value style arguments.
<tt style='background-color:#E8E8E8;'> plugins.lookup.LookupModule <a href=' /plugins/lookup/sequence.py#L112'>parse_simple_args</a>(term)</tt>	Parse the shortcut forms return true/false.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/filetree.py#L58'>file_props</a>(root,path)</tt>	Returns dictionary with file properties or return none on failure.
<tt style='background-color:#E8E8E8;'> plugins.lookup.LookupModule <a href=' /plugins/lookup/shelvefile.py#L29'>read_shelve</a>(shelve_filename,key)</tt>	Read the value of "key" from a shelve file.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/password.py#L40'>_parse_parameters</a>(term)</tt>	Hacky parsing of params see https //github.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/password.py#L90'>_read_password_file</a>(b_path)</tt>	Read the contents of a password file and return it.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/password.py#L106'>_gen_candidate_chars</a>(characters)</tt>	Generate a string containing all valid chars as defined by characters :arg characters a list of character specs.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/password.py#L139'>_random_password</a>(length,chars)</tt>	Return a random password string of length containing only chars :kwarg length the number of characters in the new password.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/password.py#L161'>_random_salt</a>()</tt>	Return a text string suitable for use as a salt for the hash functions we use to encrypt passwords.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/password.py#L170'>_parse_content</a>(content)</tt>	Parse our password data format into password and salt.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/password.py#L192'>_format_content</a>(password,salt,encrypt)</tt>	Format the password and salt for saving :arg password the plaintext password to save.
<tt style='background-color:#E8E8E8;'> plugins.lookup. <a href=' /plugins/lookup/ini.py#L31'>_parse_params</a>(term)</tt>	Safely split parameter term to preserve spaces.
<tt style='background-color:#E8E8E8;'> plugins.lookup.LookupBase <a href=' /plugins/lookup/__init__.py#L73'>run</a>(terms,variables)</tt>	When the playbook specifies a lookup this method is run the.
<tt style='background-color:#E8E8E8;'> plugins.lookup.LookupBase <a href=' /plugins/lookup/__init__.py#L105'>find_file_in_search_path</a>(myvars,subdir,needle,ignore_missing)</tt>	Return a file needle in the task's expected search path.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L129'>exec_command</a>(request)</tt>	Sends the request to the node and returns the reply.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L152'>put_file</a>(in_path,out_path)</tt>	Transfer a file from local to jail.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L174'>fetch_file</a>(in_path,out_path)</tt>	Fetch a file from jail to local.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L96'>_connect</a>()</tt>	Connect to the jail nothing to do here.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L103'>_buffered_exec_command</a>(cmd,stdin)</tt>	Run a command on the jail this is only needed for implementing.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L129'>exec_command</a>(cmd,in_data,sudoable)</tt>	Run a command on the jail.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L138'>_prefix_login_path</a>(remote_path)</tt>	Make sure that we put files into a standard path if a path is relative then we need to choose where to put it.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L198'>close</a>()</tt>	Terminate the connection nothing to do here.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L62'>update_play_context</a>(play_context)</tt>	Updates the play context information for the connection.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L124'>close_shell</a>()</tt>	Closes the vty shell if the device supports multiplexing.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L136'>receive</a>(obj)</tt>	Handles receiving of output from command.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L160'>send</a>(obj)</tt>	Sends the command to the device in the opened shell.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L173'>_strip</a>(data)</tt>	Removes ansi codes from device response.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L179'>_handle_prompt</a>(resp,obj)</tt>	Matches the command prompt and responds.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L191'>_sanitize</a>(resp,obj)</tt>	Removes elements from the response before returning to the caller.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L201'>_find_prompt</a>(response)</tt>	Searches the buffered response for a matching command prompt.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/network_cli.py#L220'>alarm_handler</a>(signum,frame)</tt>	Alarm handler raised in case of command timeout.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L129'>exec_command</a>(cmd)</tt>	Executes the cmd on in the shell and returns the output the method accepts two forms of cmd.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L215'>transport_test</a>(connect_timeout)</tt>	Test the transport mechanism if available.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/accelerate.py#L140'>validate_user</a>()</tt>	Checks the remote uid of the accelerated daemon vs the.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L129'>exec_command</a>(cmd,become_user,sudoable,executable)</tt>	Run a command on the remote minion.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/paramiko_ssh.py#L199'>_connect_uncached</a>()</tt>	Activates the connection object.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/paramiko_ssh.py#L395'>_save_ssh_host_keys</a>(filename)</tt>	Not using the paramiko save_ssh_host_keys function as we want to add new ssh keys at the bottom so folks.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/winrm.py#L98'>set_host_overrides</a>(host,hostvars)</tt>	Override winrm-specific options from host variables.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/winrm.py#L189'>_winrm_connect</a>()</tt>	Establish a winrm connection over http/https.
<tt style='background-color:#E8E8E8;'> plugins.connection. <a href=' /plugins/connection/ssh.py#L138'>_ssh_retry</a>(func)</tt>	Decorator to retry ssh/scp/sftp in the case of a connection failure.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L222'>_create_control_path</a>(host,port,user)</tt>	Make a hash for the controlpath based on con attributes.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L250'>_persistence_controls</a>(b_command)</tt>	Takes a command array and scans it for controlpersist and controlpath settings and returns two booleans indicating whether either was found.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L270'>_add_args</a>(b_command,b_args,explanation)</tt>	Adds arguments to the ssh command and displays a caller-supplied explanation of why.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L286'>_build_command</a>(binary)</tt>	Takes a binary ssh scp sftp and optional extra arguments and returns a command line as an array that can be passed to subprocess.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L419'>_send_initial_data</a>(fh,in_data)</tt>	Writes initial data to the stdin filehandle of the subprocess and closes it.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L437'>_terminate_process</a>(p)</tt>	Terminate a process ignoring errors.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L447'>_examine_output</a>(source,state,b_chunk,sudoable)</tt>	Takes a string extracts complete lines from it tests to see if they are a prompt error message etc.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/ssh.py#L493'>_run</a>(cmd,in_data,sudoable,checkrc)</tt>	Starts the command and communicates with it until it ends.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L104'>connected</a>()</tt>	Read-only property holding whether the connection to the remote host is active or closed.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L109'>_become_method_supported</a>()</tt>	Checks if the current class supports this privilege escalation method.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L117'>set_host_overrides</a>(host,hostvars)</tt>	An optional method which can be used to set connection plugin parameters from variables set on the host or groups to which the host belongs.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L128'>_split_ssh_args</a>(argstring)</tt>	Takes a string like '-o foo=1 -o bar="foo bar"' and returns a list ['-o', 'foo=1', '-o', 'bar=foo bar'] that can be added to.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L147'>transport</a>()</tt>	String used to identify this connection class from other classes.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L152'>_connect</a>()</tt>	Connect to the host we've been initialized with.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L160'>exec_command</a>(cmd,in_data,sudoable)</tt>	Run a command on the remote host.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L228'>put_file</a>(in_path,out_path)</tt>	Transfer a file from local to remote.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L234'>fetch_file</a>(in_path,out_path)</tt>	Fetch a file from remote to local.
<tt style='background-color:#E8E8E8;'> plugins.connection.ConnectionBase <a href=' /plugins/connection/__init__.py#L240'>close</a>()</tt>	Terminate the connection.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/docker.py#L148'>_get_docker_remote_user</a>()</tt>	Get the default user configured in the docker container.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/docker.py#L162'>_build_exec_cmd</a>(cmd)</tt>	Build the local docker exec command to run cmd on remote_host if remote_user is available and is supported by the docker.
<tt style='background-color:#E8E8E8;'> plugins.connection.Connection <a href=' /plugins/connection/jail.py#L96'>_connect</a>(port)</tt>	Connect to the container nothing to do.
<tt style='background-color:#E8E8E8;'> plugins.terminal.TerminalBase <a href=' /plugins/terminal/__init__.py#L50'>_exec_cli_command</a>(cmd,check_rc)</tt>	Executes a cli command on the device.
<tt style='background-color:#E8E8E8;'> plugins.terminal.TerminalBase <a href=' /plugins/terminal/__init__.py#L57'>_get_prompt</a>()</tt>	Returns the current prompt from the device.
<tt style='background-color:#E8E8E8;'> plugins.terminal.TerminalBase <a href=' /plugins/terminal/__init__.py#L63'>on_open_shell</a>()</tt>	Called after the ssh session is established this method is called right after the invoke_shell() is called from.
<tt style='background-color:#E8E8E8;'> plugins.terminal.TerminalBase <a href=' /plugins/terminal/__init__.py#L72'>on_close_shell</a>()</tt>	Called before the connection is closed this method gets called once the connection close has been requested.
<tt style='background-color:#E8E8E8;'> plugins.terminal.TerminalBase <a href=' /plugins/terminal/__init__.py#L82'>on_authorize</a>(passwd)</tt>	Called when privilege escalation is requested this method is called when the privilege is requested to be elevated.
<tt style='background-color:#E8E8E8;'> plugins.terminal.TerminalBase <a href=' /plugins/terminal/__init__.py#L92'>on_deauthorize</a>()</tt>	Called when privilege deescalation is requested this method is called when the privilege changed from escalated.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/json_query.py#L32'>json_query</a>(data,expr)</tt>	Query data using jmespath query language http //jmespath org example.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L75'>to_yaml</a>(a)</tt>	Make verbose human readable yaml.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L80'>to_nice_yaml</a>(a,indent)</tt>	Make verbose human readable yaml.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L85'>to_json</a>(a)</tt>	Convert the value to json.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L89'>to_nice_json</a>(a,indent)</tt>	Make verbose human readable json.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L112'>to_bool</a>(a)</tt>	Return a bool for the arg.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L126'>strftime</a>(string_format,second)</tt>	Return a date string using string see https //docs python org/2/library/time html#time strftime for format.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L135'>quote</a>(a)</tt>	Return its argument quoted for shell usage.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L139'>fileglob</a>(pathname)</tt>	Return list of matched regular files for glob.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L143'>regex_replace</a>(value,pattern,replacement,ignorecase)</tt>	Perform a re sub returning a string.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L155'>regex_findall</a>(value,regex,multiline,ignorecase)</tt>	Perform re findall and return the list of matches.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L164'>regex_search</a>(value,regex)</tt>	Perform re search and return the list of matches or a backref.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L194'>ternary</a>(value,true_val,false_val)</tt>	Value true_val : false_val.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L203'>regex_escape</a>(string)</tt>	Escape all regular expressions special characters from string.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L413'>failed</a>()</tt>	Test if task result yields failed.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L425'>success</a>()</tt>	Test if task result yields success.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L429'>changed</a>()</tt>	Test if task result yields changed.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L445'>skipped</a>()</tt>	Test if task result yields skipped.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/core.py#L454'>do_groupby</a>(environment,value,attribute)</tt>	Overridden groupby filter for jinja2 to address an issue with jinja2>=2.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/ipaddr.py#L261'>ipaddr</a>(value,query,version,alias)</tt>	Check if string is an ip address or network and filter it.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/ipaddr.py#L514'>ipsubnet</a>(value,query,index)</tt>	Manipulate ipv4/ipv6 subnets.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/ipaddr.py#L571'>nthhost</a>(value,query)</tt>	Get the nth host within a given network.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/ipaddr.py#L601'>slaac</a>(value,query)</tt>	Get the slaac address within given network.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/ipaddr.py#L632'>hwaddr</a>(value,query,alias)</tt>	Check if string is a hw/mac address and filter it.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/ipaddr.py#L676'>ip4_hex</a>(arg)</tt>	Convert an ipv4 address to hexadecimal notation.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/mathstuff.py#L105'>human_readable</a>(size,isbits,unit)</tt>	Return a human readable string.
<tt style='background-color:#E8E8E8;'> plugins.filter. <a href=' /plugins/filter/mathstuff.py#L112'>human_to_bytes</a>(size,default_unit,isbits)</tt>	Return bytes count from a human readable string.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/foreman.py#L101'>send_facts</a>(host,data)</tt>	Sends facts to foreman to be parsed by foreman_ansible fact parser.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/foreman.py#L133'>send_reports</a>(stats)</tt>	Send reports to foreman to be parsed by its config report importer.
<tt style='background-color:#E8E8E8;'> plugins.callback. <a href=' /plugins/callback/selective.py#L60'>dict_diff</a>(prv,nxt)</tt>	Return a dict of keys that differ with another config object.
<tt style='background-color:#E8E8E8;'> plugins.callback. <a href=' /plugins/callback/selective.py#L70'>colorize</a>(msg,color)</tt>	Given a string add necessary codes to format the string.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/hipchat.py#L54'>__init__</a>(display)</tt>	Selective py callback plugin.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/hipchat.py#L97'>v2_playbook_on_play_start</a>(play)</tt>	Display playbook and play start messages.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/default.py#L138'>v2_playbook_on_task_start</a>(task)</tt>	Run when a task starts.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/minimal.py#L57'>v2_runner_on_ok</a>(result)</tt>	Run when a task finishes correctly.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/logstash.py#L100'>v2_playbook_on_stats</a>(stats)</tt>	Display info about playbook statistics.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/minimal.py#L70'>v2_runner_on_skipped</a>(result)</tt>	Run when a task is skipped.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/debug.py#L18'>_dump_results</a>(result)</tt>	Return the text to output for a result.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/profile_tasks.py#L96'>_record_task</a>(task)</tt>	Logs the start of each task.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackBase <a href=' /plugins/callback/__init__.py#L100'>_handle_warnings</a>(res)</tt>	Display warnings if enabled and any exist in the result.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/junit.py#L99'>_start_task</a>(task)</tt>	Record the start of a task for one or more hosts.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/junit.py#L118'>_finish_task</a>(status,result)</tt>	Record the results of a task for a single host.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/junit.py#L137'>_build_test_case</a>(task_data,host_data)</tt>	Build a testcase from the given taskdata and hostdata.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/junit.py#L180'>_cleanse_string</a>(value)</tt>	Convert surrogate escapes to the unicode replacement character to avoid xml encoding errors.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/junit.py#L184'>_generate_report</a>()</tt>	Generate a testsuite report from the collected taskdata and hostdata.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/tree.py#L47'>write_tree_file</a>(hostname,buf)</tt>	Write something into treedir/hostname.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/hipchat.py#L79'>send_msg</a>(msg,msg_format,color,notify)</tt>	Method for sending a message to hipchat.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/hipchat.py#L130'>playbook_on_stats</a>(stats)</tt>	Display info about playbook statistics.
<tt style='background-color:#E8E8E8;'> plugins.callback.CallbackModule <a href=' /plugins/callback/minimal.py#L37'>_command_generic_msg</a>(host,result,caption)</tt>	Output the result of a command run.
<tt style='background-color:#E8E8E8;'> compat.selectors. <a href=' /compat/selectors/_selectors2.py#L84'>_fileobj_to_fd</a>(fileobj)</tt>	Return a file descriptor from a file object if.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L214'>_fileobj_lookup</a>(fileobj)</tt>	Return a file descriptor from a file object.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L234'>register</a>(fileobj,events,data)</tt>	Register a file object for a set of events to monitor.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L248'>unregister</a>(fileobj)</tt>	Unregister a file object from being monitored.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L268'>modify</a>(fileobj,events,data)</tt>	Change a registered file object monitored events and data.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L287'>select</a>(timeout)</tt>	Perform the actual selection until some monitored file objects are ready or the timeout expires.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L292'>close</a>()</tt>	Close the selector this must be called to ensure that all.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L298'>get_key</a>(fileobj)</tt>	Return the key associated with a registered file object.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L308'>get_map</a>()</tt>	Return a mapping of file objects to selector keys.
<tt style='background-color:#E8E8E8;'> compat.selectors.BaseSelector <a href=' /compat/selectors/_selectors2.py#L312'>_key_from_fd</a>(fd)</tt>	Return the key associated to a given file descriptor return none if it is not found.
<tt style='background-color:#E8E8E8;'> playbook.Block <a href=' /playbook/block.py#L68'>get_vars</a>()</tt>	Blocks do not store variables directly however they may be a member of a role or task include which does so return those if present.
<tt style='background-color:#E8E8E8;'> playbook.Block <a href=' /playbook/block.py#L97'>preprocess_data</a>(ds)</tt>	If a simple task is given an implicit block for that single task.
<tt style='background-color:#E8E8E8;'> playbook.Block <a href=' /playbook/block.py#L208'>serialize</a>()</tt>	Override of the default serialize method since when we're serializing a task we don't want to include the attribute list of tasks.
<tt style='background-color:#E8E8E8;'> playbook.Block <a href=' /playbook/block.py#L230'>deserialize</a>(data)</tt>	Override of the default deserialize method to match the above overridden.
<tt style='background-color:#E8E8E8;'> playbook.Block <a href=' /playbook/block.py#L285'>_get_parent_attribute</a>(attr,extend,prepend)</tt>	Generic logic to get the attribute or parent attribute for a block value.
<tt style='background-color:#E8E8E8;'> playbook.Block <a href=' /playbook/block.py#L339'>filter_tagged_tasks</a>(play_context,all_vars)</tt>	Creates a new block with task lists filtered based on the tags contained within the play_context object.
<tt style='background-color:#E8E8E8;'> playbook.Block <a href=' /playbook/block.py#L374'>all_parents_static</a>()</tt>	Determine if all of the parents of this block were statically loaded or not.
<tt style='background-color:#E8E8E8;'> playbook. <a href=' /playbook/helpers.py#L34'>load_list_of_blocks</a>(ds,play,parent_block,role)</tt>	Given a list of mixed task/block data parsed from yaml return a list of block() objects where implicit blocks.
<tt style='background-color:#E8E8E8;'> playbook. <a href=' /playbook/helpers.py#L77'>load_list_of_tasks</a>(ds,play,block,role)</tt>	Given a list of task datastructures parsed from yaml return a list of task() or taskinclude() objects.
<tt style='background-color:#E8E8E8;'> playbook. <a href=' /playbook/helpers.py#L317'>load_list_of_roles</a>(ds,play,current_role_path,variable_manager)</tt>	Loads and returns a list of roleinclude objects from the datastructure.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L87'>__init__</a>(block,role,task_include)</tt>	Constructors a task without the task load classmethod it will be pretty blank.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L100'>get_path</a>()</tt>	Return the absolute path of the task with its line number.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L108'>get_name</a>()</tt>	Return the name of the task.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L140'>__repr__</a>()</tt>	Returns a human readable representation of the task.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L147'>_preprocess_loop</a>(ds,new_ds,k,v)</tt>	Take a lookup plugin name and store it correctly.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L158'>preprocess_data</a>(ds)</tt>	Tasks are especially complex arguments so need pre-processing.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L238'>post_validate</a>(templar)</tt>	Override of base class post_validate to also do final validation on the block and task include if any to which this task belongs.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L249'>_post_validate_loop_args</a>(attr,value,templar)</tt>	Override post validation for the loop args field which is templated specially in the taskexecutor class when evaluating loops.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L256'>_post_validate_environment</a>(attr,value,templar)</tt>	Override post validation of vars on the play as we don't want to template these too early.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L295'>_post_validate_changed_when</a>(attr,value,templar)</tt>	Changed_when is evaluated after the execution of the task is complete and should not be templated during the regular post_validate step.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L302'>_post_validate_failed_when</a>(attr,value,templar)</tt>	Failed_when is evaluated after the execution of the task is complete and should not be templated during the regular post_validate step.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L309'>_post_validate_until</a>(attr,value,templar)</tt>	Until is evaluated after the execution of the task is complete and should not be templated during the regular post_validate step.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L392'>set_loader</a>(loader)</tt>	Sets the loader on this object and recursively on parent child objects.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L404'>_get_parent_attribute</a>(attr,extend,prepend)</tt>	Generic logic to get the attribute or parent attribute for a task value.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L423'>_get_attr_environment</a>()</tt>	Override for the 'tags' getattr fetcher used from base.
<tt style='background-color:#E8E8E8;'> playbook.Task <a href=' /playbook/task.py#L435'>get_search_path</a>()</tt>	Return the list of paths you should search for files in order.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L107'>get_name</a>()</tt>	Return the name of the play.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L121'>preprocess_data</a>(ds)</tt>	Adjusts play datastructure to cleanup old/legacy items.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L143'>_load_tasks</a>(attr,ds)</tt>	Loads a list of blocks from a list which may be mixed tasks/blocks.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L153'>_load_pre_tasks</a>(attr,ds)</tt>	Loads a list of blocks from a list which may be mixed tasks/blocks.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L163'>_load_post_tasks</a>(attr,ds)</tt>	Loads a list of blocks from a list which may be mixed tasks/blocks.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L173'>_load_handlers</a>(attr,ds)</tt>	Loads a list of blocks from a list which may be mixed handlers/blocks.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L183'>_load_roles</a>(attr,ds)</tt>	Loads and returns a list of roleinclude objects from the datastructure.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L223'>_compile_roles</a>()</tt>	Handles the role compilation step returning a flat list of tasks with the lowest level dependencies first.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L240'>compile_roles_handlers</a>()</tt>	Handles the role handler compilation step returning a flat list of handlers this is done for all roles in the play.
<tt style='background-color:#E8E8E8;'> playbook.Play <a href=' /playbook/play.py#L254'>compile</a>()</tt>	Compiles and returns the task list for this play compiled from the roles which are themselves compiled recursively and/or the list of.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L211'>preprocess_data</a>(ds)</tt>	Infrequently used method to do some pre-processing of legacy terms.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L220'>load_data</a>(ds,variable_manager,loader)</tt>	Walk the input datastructure and assign any values.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L273'>_validate_attributes</a>(ds)</tt>	Ensures that there are no keys in the datastructure which do not map to attributes for this object.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L284'>validate</a>(all_vars)</tt>	Validation that is done at parse time not load time.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L307'>squash</a>()</tt>	Evaluates all attributes and sets them to the evaluated version so that all future accesses of attributes do not need to evaluate.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L318'>copy</a>()</tt>	Create a copy of this object and return it.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L340'>post_validate</a>(templar)</tt>	We can't tell that everything is of the right type until we have all the variables.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L452'>_load_vars</a>(attr,ds)</tt>	Vars in a play can be specified either as a dictionary directly or as a list of dictionaries.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L485'>_extend_value</a>(value,new_value,prepend)</tt>	Will extend the value given with new_value and will turn both into lists if they are not so already.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L504'>dump_attrs</a>()</tt>	Dumps all attributes to a dictionary.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L513'>serialize</a>()</tt>	Serializes the object derived from the base object into a dictionary of values.
<tt style='background-color:#E8E8E8;'> playbook.Base <a href=' /playbook/base.py#L531'>deserialize</a>(data)</tt>	Given a dictionary of values load up the field attributes for this object.
<tt style='background-color:#E8E8E8;'> playbook.PlayContext <a href=' /playbook/play_context.py#L244'>set_play</a>(play)</tt>	Configures this connection information instance with data from the play class.
<tt style='background-color:#E8E8E8;'> playbook.PlayContext <a href=' /playbook/play_context.py#L275'>set_options</a>(options)</tt>	Configures this connection information instance with data from options specified by the user on the command line.
<tt style='background-color:#E8E8E8;'> playbook.PlayContext <a href=' /playbook/play_context.py#L313'>set_task_and_variable_override</a>(task,variables,templar)</tt>	Sets attributes from the task if they are set which will override those from the play.
<tt style='background-color:#E8E8E8;'> playbook.PlayContext <a href=' /playbook/play_context.py#L467'>make_become_cmd</a>(cmd,executable)</tt>	Helper function to create privilege escalation commands.
<tt style='background-color:#E8E8E8;'> playbook.PlayContext <a href=' /playbook/play_context.py#L597'>update_vars</a>(variables)</tt>	Adds 'magic' variables relating to connections to the variable dictionary provided.
<tt style='background-color:#E8E8E8;'> playbook.Conditional <a href=' /playbook/conditional.py#L70'>_get_attr_when</a>()</tt>	Override for the 'tags' getattr fetcher used from base.
<tt style='background-color:#E8E8E8;'> playbook.Conditional <a href=' /playbook/conditional.py#L93'>evaluate_conditional</a>(templar,all_vars)</tt>	Loops through the conditionals set on this object returning false if any of them evaluate as such.
<tt style='background-color:#E8E8E8;'> playbook.Conditional <a href=' /playbook/conditional.py#L121'>_check_conditional</a>(conditional,templar,all_vars)</tt>	This method does the low-level evaluation of each conditional set on this object using jinja2 to wrap the conditionals for.
<tt style='background-color:#E8E8E8;'> playbook.Become <a href=' /playbook/become.py#L59'>_preprocess_data_become</a>(ds)</tt>	Preprocess the playbook data for become attributes this is called from the base object's preprocess_data() method which.
<tt style='background-color:#E8E8E8;'> playbook.Become <a href=' /playbook/become.py#L96'>set_become_defaults</a>(become,become_method,become_user)</tt>	If we are becoming someone else but some fields are unset.
<tt style='background-color:#E8E8E8;'> playbook.PlaybookInclude <a href=' /playbook/playbook_include.py#L45'>load_data</a>(ds,basedir,variable_manager,loader)</tt>	Overrides the base load_data(), as we're actually going to return a new.
<tt style='background-color:#E8E8E8;'> playbook.PlaybookInclude <a href=' /playbook/playbook_include.py#L102'>preprocess_data</a>(ds)</tt>	Regorganizes the data for a playbookinclude datastructure to line.
<tt style='background-color:#E8E8E8;'> playbook.PlaybookInclude <a href=' /playbook/playbook_include.py#L131'>_preprocess_include</a>(ds,new_ds,k,v)</tt>	Splits the include line up into filename and parameters.
<tt style='background-color:#E8E8E8;'> playbook.Handler <a href=' /playbook/handler.py#L35'>__repr__</a>()</tt>	Returns a human readable representation of the handler.
<tt style='background-color:#E8E8E8;'> playbook.Taggable <a href=' /playbook/taggable.py#L50'>_get_attr_tags</a>()</tt>	Override for the 'tags' getattr fetcher used from base.
<tt style='background-color:#E8E8E8;'> playbook.Taggable <a href=' /playbook/taggable.py#L61'>evaluate_tags</a>(only_tags,skip_tags,all_vars)</tt>	This checks if the current item should be executed depending on tag options.
<tt style='background-color:#E8E8E8;'> playbook.TaskInclude <a href=' /playbook/task_include.py#L60'>get_vars</a>()</tt>	We override the parent task() classes get_vars here because we need to include the args of the include into the vars as.
<tt style='background-color:#E8E8E8;'> playbook.Attribute <a href=' /playbook/attribute.py#L26'>__init__</a>(isa,private,default,required)</tt>	:class attribute specifies constraints for attributes of objects which derive from playbook data.
<tt style='background-color:#E8E8E8;'> playbook.role.RoleMetadata <a href=' /playbook/role/metadata.py#L49'>load</a>(data,owner,variable_manager,loader)</tt>	Returns a new rolemetadata object based on the datastructure passed in.
<tt style='background-color:#E8E8E8;'> playbook.role.RoleMetadata <a href=' /playbook/role/metadata.py#L61'>_load_dependencies</a>(attr,ds)</tt>	This is a helper loading function for the dependencies list.
<tt style='background-color:#E8E8E8;'> playbook.role.RoleMetadata <a href=' /playbook/role/metadata.py#L95'>_load_galaxy_info</a>(attr,ds)</tt>	This is a helper loading function for the galaxy info entry in the metadata which returns a galaxyinfo object rather than.
<tt style='background-color:#E8E8E8;'> playbook.role.RoleDefinition <a href=' /playbook/role/definition.py#L113'>_load_role_name</a>(ds)</tt>	Returns the role name either the role or name field from.
<tt style='background-color:#E8E8E8;'> playbook.role.RoleDefinition <a href=' /playbook/role/definition.py#L137'>_load_role_path</a>(role_name)</tt>	The 'role', as specified in the ds or as a bare string can either be a simple name or a full path.
<tt style='background-color:#E8E8E8;'> playbook.role.RoleDefinition <a href=' /playbook/role/definition.py#L189'>_split_role_params</a>(ds)</tt>	Splits any random role params off from the role spec and store.
<tt style='background-color:#E8E8E8;'> playbook.role. <a href=' /playbook/role/__init__.py#L45'>hash_params</a>(params)</tt>	Construct a data structure of parameters that is hashable.
<tt style='background-color:#E8E8E8;'> playbook.role.Role <a href=' /playbook/role/__init__.py#L245'>_resolve_main</a>(basepath,main)</tt>	Flexibly handle variations in main filenames.
<tt style='background-color:#E8E8E8;'> playbook.role.Role <a href=' /playbook/role/__init__.py#L275'>_load_dependencies</a>()</tt>	Recursively loads role dependencies from the metadata list of.
<tt style='background-color:#E8E8E8;'> playbook.role.Role <a href=' /playbook/role/__init__.py#L292'>add_parent</a>(parent_role)</tt>	Adds a role to the list of this roles parents.
<tt style='background-color:#E8E8E8;'> playbook.role.Role <a href=' /playbook/role/__init__.py#L344'>get_all_dependencies</a>()</tt>	Returns a list of all deps built recursively from all child dependencies in the proper order in which they should be executed or evaluated.
<tt style='background-color:#E8E8E8;'> playbook.role.Role <a href=' /playbook/role/__init__.py#L382'>has_run</a>(host)</tt>	Returns true if this role has been iterated over completely and.
<tt style='background-color:#E8E8E8;'> playbook.role.Role <a href=' /playbook/role/__init__.py#L390'>compile</a>(play,dep_chain)</tt>	Returns the task list for this role which is created by first recursively compiling the tasks for all direct dependencies and.
<tt style='background-color:#E8E8E8;'> parsing.ModuleArgsParser <a href=' /parsing/mod_args.py#L100'>_split_module_string</a>(module_string)</tt>	When module names are expressed like action copy src=a dest=b.
<tt style='background-color:#E8E8E8;'> parsing.ModuleArgsParser <a href=' /parsing/mod_args.py#L115'>_handle_shell_weirdness</a>(action,args)</tt>	Given an action name and an args dictionary return the proper action name and args dictionary.
<tt style='background-color:#E8E8E8;'> parsing.ModuleArgsParser <a href=' /parsing/mod_args.py#L130'>_normalize_parameters</a>(thing,action,additional_args)</tt>	Arguments can be fuzzy deal with all the forms.
<tt style='background-color:#E8E8E8;'> parsing.ModuleArgsParser <a href=' /parsing/mod_args.py#L183'>_normalize_new_style_args</a>(thing,action)</tt>	Deals with fuzziness in new style module invocations.
<tt style='background-color:#E8E8E8;'> parsing.ModuleArgsParser <a href=' /parsing/mod_args.py#L210'>_normalize_old_style_args</a>(thing)</tt>	Deals with fuzziness in old-style (action/local_action) module invocations.
<tt style='background-color:#E8E8E8;'> parsing.ModuleArgsParser <a href=' /parsing/mod_args.py#L249'>parse</a>()</tt>	Given a task in one of the supported forms parses and returns returns the action arguments and delegate_to values for the.
<tt style='background-color:#E8E8E8;'> parsing. <a href=' /parsing/quoting.py#L26'>unquote</a>(data)</tt>	Removes first and last quotes from a string if the string starts and ends with the same quotes.
<tt style='background-color:#E8E8E8;'> parsing. <a href=' /parsing/splitter.py#L49'>parse_kv</a>(args,check_raw)</tt>	Convert a string of key/value items to a dict if any free-form params.
<tt style='background-color:#E8E8E8;'> parsing. <a href=' /parsing/splitter.py#L105'>_get_quote_state</a>(token,quote_char)</tt>	The goal of this block is to determine if the quoted string.
<tt style='background-color:#E8E8E8;'> parsing. <a href=' /parsing/splitter.py#L125'>_count_jinja2_blocks</a>(token,cur_depth,open_token,close_token)</tt>	This function counts the number of opening/closing blocks for a.
<tt style='background-color:#E8E8E8;'> parsing. <a href=' /parsing/splitter.py#L140'>split_args</a>(args)</tt>	Splits args on whitespace but intelligently reassembles those that may have been split over a jinja2 block or quotes.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L77'>load</a>(data,file_name,show_content)</tt>	Creates a python datastructure from the given data which can be either a json or yaml string.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L107'>load_from_file</a>(file_name)</tt>	Loads data from a file which can contain either json or yaml.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L145'>is_executable</a>(path)</tt>	Is the given path executable?.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L150'>_safe_load</a>(stream,file_name)</tt>	Implements yaml safe_load(), except using our custom loader class.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L162'>_get_file_contents</a>(file_name)</tt>	Reads the file contents from the given file name and will decrypt them if they are found to be vault-encrypted.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L187'>_handle_error</a>(yaml_exc,file_name,show_content)</tt>	Optionally constructs an object ansiblebaseyamlobject to encapsulate the file name/position where a yaml exception occurred and raises an ansibleparsererror.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L203'>get_basedir</a>()</tt>	Returns the current basedir.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L207'>set_basedir</a>(basedir)</tt>	Sets the base directory used to find files when a relative path is given.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L213'>path_dwim</a>(given)</tt>	Make relative paths work like folks expect.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L229'>_is_role</a>(path)</tt>	Imperfect role detection roles are still valid w/o main yml/yaml/etc.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L249'>path_dwim_relative</a>(path,dirname,source,is_role)</tt>	Find one file in either a role or playbook dir with or without explicitly named dirname subdirs.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L298'>path_dwim_relative_stack</a>(paths,dirname,source,is_role)</tt>	Find one file in first path in stack taking roles into account and adding play basedir as fallback :arg paths a list of text strings which are the paths to look for the filename in.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L361'>_create_content_tempfile</a>(content)</tt>	Create a tempfile containing defined content.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L375'>get_real_file</a>(file_path,decrypt)</tt>	If the file is vault encrypted return a path to a temporary decrypted file.
<tt style='background-color:#E8E8E8;'> parsing.DataLoader <a href=' /parsing/dataloader.py#L418'>cleanup_tmp_file</a>(file_path)</tt>	Removes any temporary files created from a previous call to get_real_file.
<tt style='background-color:#E8E8E8;'> parsing.yaml.AnsibleVaultEncryptedUnicode <a href=' /parsing/yaml/objects.py#L88'>__init__</a>(ciphertext)</tt>	A ansibleunicode with a vault attribute that can decrypt it.
<tt style='background-color:#E8E8E8;'> parsing.utils. <a href=' /parsing/utils/addresses.py#L169'>parse_address</a>(address,allow_ranges)</tt>	Takes a string and returns a host port tuple if the host is none then.
<tt style='background-color:#E8E8E8;'> parsing.utils. <a href=' /parsing/utils/jsonify.py#L27'>jsonify</a>(result,format)</tt>	Format json output uncompressed or uncompressed.
<tt style='background-color:#E8E8E8;'> parsing.vault. <a href=' /parsing/vault/__init__.py#L113'>is_encrypted</a>(data)</tt>	Test if this is vault encrypted data blob.
<tt style='background-color:#E8E8E8;'> parsing.vault. <a href=' /parsing/vault/__init__.py#L135'>is_encrypted_file</a>(file_obj,start_pos,count)</tt>	Test if the contents of a file obj are a vault encrypted data blob.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultLib <a href=' /parsing/vault/__init__.py#L163'>is_encrypted</a>(data)</tt>	Test if this is vault encrypted data.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultLib <a href=' /parsing/vault/__init__.py#L183'>encrypt</a>(plaintext)</tt>	Vault encrypt a piece of data.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultLib <a href=' /parsing/vault/__init__.py#L215'>decrypt</a>(vaulttext,filename)</tt>	Decrypt a piece of vault encrypted data.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultLib <a href=' /parsing/vault/__init__.py#L255'>_format_output</a>(b_ciphertext)</tt>	Add header and format to 80 columns.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultLib <a href=' /parsing/vault/__init__.py#L275'>_split_header</a>(b_vaulttext)</tt>	Retrieve information about the vault and clean the data when data is saved it has a header prepended and is formatted into 80.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultEditor <a href=' /parsing/vault/__init__.py#L305'>_shred_file_custom</a>(tmp_path)</tt>	"destroy a file when shred core-utils is not available unix shred' destroys files "so that they can be recovered only with great difficulty with.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultEditor <a href=' /parsing/vault/__init__.py#L339'>_shred_file</a>(tmp_path)</tt>	Securely destroy a decrypted file note standard limitations of gnu shred apply (for flash overwriting would have no effect.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultEditor <a href=' /parsing/vault/__init__.py#L449'>create_file</a>(filename)</tt>	Create a new encrypted file.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultEditor <a href=' /parsing/vault/__init__.py#L535'>write_data</a>(data,filename,shred)</tt>	Write the data bytes to given path this is used to write a byte string to a file or stdout.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultAES <a href=' /parsing/vault/__init__.py#L615'>_aes_derive_key_and_iv</a>(b_password,b_salt,key_length,iv_length)</tt>	Create a key and an initialization vector.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultAES <a href=' /parsing/vault/__init__.py#L630'>encrypt</a>(b_plaintext,b_password,key_length)</tt>	Read plaintext data from in_file and write encrypted to out_file.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultAES <a href=' /parsing/vault/__init__.py#L636'>decrypt</a>(b_vaulttext,b_password,key_length)</tt>	Decrypt the given data and return it.
<tt style='background-color:#E8E8E8;'> parsing.vault.VaultAES256 <a href=' /parsing/vault/__init__.py#L806'>_is_equal</a>(b_a,b_b)</tt>	Comparing 2 byte arrrays in constant time to avoid timing attacks.
<tt style='background-color:#E8E8E8;'> vars.HostVars <a href=' /vars/hostvars.py#L69'>raw_get</a>(host_name)</tt>	Similar to __getitem__, however the returned data is not run through the templating engine to expand variables in the hostvars.
<tt style='background-color:#E8E8E8;'> vars. <a href=' /vars/reserved.py#L33'>get_reserved_names</a>(include_private)</tt>	This function returns the list of reserved names associated with play objects.
<tt style='background-color:#E8E8E8;'> vars. <a href=' /vars/reserved.py#L69'>warn_if_reserved</a>(myvars)</tt>	This function warns if any variable passed conflicts with internally reserved names.
<tt style='background-color:#E8E8E8;'> vars. <a href=' /vars/__init__.py#L64'>preprocess_vars</a>(a)</tt>	Ensures that vars contained in the parameter passed in are returned as a list of dictionaries to ensure for instance.
<tt style='background-color:#E8E8E8;'> vars. <a href=' /vars/__init__.py#L84'>strip_internal_keys</a>(dirty)</tt>	All keys stating with _ansible_ are internal so create a copy of the 'dirty' dict.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L165'>extra_vars</a>()</tt>	Ensures a clean copy of the extra_vars are made.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L165'>extra_vars</a>(value)</tt>	Ensures a clean copy of the extra_vars are used to set the value.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L179'>options_vars</a>()</tt>	Ensures a clean copy of the options_vars are made.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L179'>options_vars</a>(value)</tt>	Ensures a clean copy of the options_vars are used to set the value.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L185'>_preprocess_vars</a>(a)</tt>	Ensures that vars contained in the parameter passed in are returned as a list of dictionaries to ensure for instance.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L205'>get_vars</a>(loader,play,host,task)</tt>	Returns the variables with optional "context" given via the parameters for the play host and task (which could possibly result in different.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L404'>_get_magic_variables</a>(loader,play,host,task)</tt>	Returns a dictionary of so-called "magic" variables in ansible which are special variables we set internally for use.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L546'>_get_inventory_basename</a>(path)</tt>	Returns the basename minus the extension of the given path so the.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L558'>_load_inventory_file</a>(path,loader,filter_ext)</tt>	Helper function which loads the file and gets the.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L609'>add_host_vars_file</a>(path,loader)</tt>	Loads and caches a host_vars file in the _host_vars_files dict.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L632'>add_group_vars_file</a>(path,loader)</tt>	Loads and caches a host_vars file in the _host_vars_files dict.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L668'>clear_facts</a>(hostname)</tt>	Clears the facts for a host.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L675'>set_host_facts</a>(host,facts)</tt>	Sets or updates the given facts for a host in the fact cache.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L690'>set_nonpersistent_facts</a>(host,facts)</tt>	Sets or updates the given facts for a host in the fact cache.
<tt style='background-color:#E8E8E8;'> vars.VariableManager <a href=' /vars/__init__.py#L705'>set_host_variable</a>(host,varname,value)</tt>	Sets a value in the vars_cache for a host.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/safe_eval.py#L29'>safe_eval</a>(expr,locals,include_exceptions)</tt>	This is intended for allowing things like with_items a_list_variable.
<tt style='background-color:#E8E8E8;'> template.AnsibleJ2Vars <a href=' /template/vars.py#L41'>__init__</a>(templar,globals,locals)</tt>	Initializes this object with a valid templar() object as well as several dictionaries of variables representing.
<tt style='background-color:#E8E8E8;'> template.AnsibleJ2Vars <a href=' /template/vars.py#L99'>add_locals</a>(locals)</tt>	If locals are provided create a copy of self containing those locals in addition to what is already in this variable proxy.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/__init__.py#L99'>_escape_backslashes</a>(data,jinja_env)</tt>	Double backslashes within jinja2 expressions a user may enter something like this in a playbook :.
<tt style='background-color:#E8E8E8;'> template. <a href=' /template/__init__.py#L142'>_count_newlines_from_end</a>(in_str)</tt>	Counts the number of newlines at the end of a string this is used during.
<tt style='background-color:#E8E8E8;'> template.AnsibleContext <a href=' /template/__init__.py#L170'>_is_unsafe</a>(val)</tt>	Our helper function which will also recursively check dict and list entries due to the fact that they may be repr'd and contain.
<tt style='background-color:#E8E8E8;'> template.AnsibleContext <a href=' /template/__init__.py#L193'>resolve</a>(key)</tt>	The intercepted resolve(), which uses the helper above to set the internal flag whenever an unsafe variable value is returned.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L265'>_get_filters</a>()</tt>	Returns filter plugins after loading and caching them if need be.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L282'>_get_tests</a>()</tt>	Returns tests plugins after loading and caching them if need be.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L298'>_get_extensions</a>()</tt>	Return jinja2 extensions to load.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L314'>_clean_data</a>(orig_data)</tt>	Remove jinja2 template tags from data.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L374'>set_available_variables</a>(variables)</tt>	Sets the list of template variables this templar instance will use to template things so we don't have to pass them around between.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L386'>template</a>(variable,convert_bare,preserve_trailing_newlines,escape_backslashes)</tt>	Templates possibly recursively any given data as input if convert_bare is.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L502'>is_template</a>(data)</tt>	Lets us know if data has a template.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L522'>templatable</a>(data)</tt>	Returns true if the data can be templated w/o errors.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L533'>_contains_vars</a>(data)</tt>	Returns true if the data contains a variable pattern.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L543'>_convert_bare_variable</a>(variable,bare_deprecated)</tt>	Wraps a bare string which may have an attribute portion ie foo bar.
<tt style='background-color:#E8E8E8;'> template.Templar <a href=' /template/__init__.py#L563'>_finalize</a>(thing)</tt>	A custom finalize method for jinja2 which prevents none from being returned.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L78'>run</a>()</tt>	The main executor entrypoint where we determine if the specified task requires looping and either runs the task with self.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L172'>_get_loop_items</a>()</tt>	Loads a lookup plugin to handle the with_* portion of a task if specified and returns the items result.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L242'>_run_loop</a>(items)</tt>	Runs the task with the loop items specified and collates the result into an array named 'results' which is inserted into the final result.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L320'>_squash_items</a>(items,loop_var,variables)</tt>	Squash items down to a comma-separated list for certain modules which support it typically package management modules.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L388'>_execute</a>(variables)</tt>	The primary workhorse of the executor system this runs the task.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L637'>_poll_async_result</a>(result,templar,task_vars)</tt>	Polls for the specified jid to be complete.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L705'>_get_connection</a>(variables,templar)</tt>	Reads the connection property for the host and returns the.
<tt style='background-color:#E8E8E8;'> executor.TaskExecutor <a href=' /executor/task_executor.py#L790'>_get_action_handler</a>(connection,templar)</tt>	Returns the correct action plugin to handle the requestion task action.
<tt style='background-color:#E8E8E8;'> executor.ModuleDepFinder <a href=' /executor/module_common.py#L381'>__init__</a>()</tt>	Walk the ast tree for the python module.
<tt style='background-color:#E8E8E8;'> executor. <a href=' /executor/module_common.py#L438'>_get_shebang</a>(interpreter,task_vars,args)</tt>	Note not stellar api returns none instead of always returning a shebang line.
<tt style='background-color:#E8E8E8;'> executor. <a href=' /executor/module_common.py#L460'>recursive_finder</a>(name,data,py_module_names,py_module_cache)</tt>	Using moduledepfinder make sure we have all of the module_utils files that the module its module_utils files needs.
<tt style='background-color:#E8E8E8;'> executor. <a href=' /executor/module_common.py#L601'>_find_module_utils</a>(module_name,b_module_data,module_path,module_args)</tt>	Given the source of the module convert it to a jinja2 template to insert module code and return whether it's a new or old style module.
<tt style='background-color:#E8E8E8;'> executor. <a href=' /executor/module_common.py#L786'>modify_module</a>(module_name,module_path,module_args,task_vars)</tt>	Used to insert chunks of code into modules before transfer rather than doing regular python imports.
<tt style='background-color:#E8E8E8;'> executor.PlayIterator <a href=' /executor/play_iterator.py#L527'>get_original_task</a>(host,task)</tt>	Finds the task in the task list which matches the uuid of the given task.
<tt style='background-color:#E8E8E8;'> executor.AggregateStats <a href=' /executor/stats.py#L41'>increment</a>(what,host)</tt>	Helper function to bump a statistic.
<tt style='background-color:#E8E8E8;'> executor.AggregateStats <a href=' /executor/stats.py#L48'>summarize</a>(host)</tt>	Return information about a particular host.
<tt style='background-color:#E8E8E8;'> executor.AggregateStats <a href=' /executor/stats.py#L59'>set_custom_stats</a>(which,what,host)</tt>	Allow setting of a custom stat.
<tt style='background-color:#E8E8E8;'> executor.AggregateStats <a href=' /executor/stats.py#L69'>update_custom_stats</a>(which,what,host)</tt>	Allow aggregation of a custom stat.
<tt style='background-color:#E8E8E8;'> executor.TaskResult <a href=' /executor/task_result.py#L75'>_check_key</a>(key)</tt>	Get a specific key from the result or it's items.
<tt style='background-color:#E8E8E8;'> executor.PlaybookExecutor <a href=' /executor/playbook_executor.py#L69'>run</a>()</tt>	Run the given playbook based on the settings in the play which may limit the runs to serialized groups etc.
<tt style='background-color:#E8E8E8;'> executor.PlaybookExecutor <a href=' /executor/playbook_executor.py#L227'>_get_serialized_batches</a>(play)</tt>	Returns a list of hosts subdivided into batches based on the serial size specified in the play.
<tt style='background-color:#E8E8E8;'> executor.PlaybookExecutor <a href=' /executor/playbook_executor.py#L273'>_generate_retry_inventory</a>(retry_path,replay_hosts)</tt>	Called when a playbook run fails it generates an inventory which allows.
<tt style='background-color:#E8E8E8;'> executor.TaskQueueManager <a href=' /executor/task_queue_manager.py#L116'>_initialize_notified_handlers</a>(play)</tt>	Clears and initializes the shared notified handlers dict with entries for each handler in the play which is an empty array that will contain.
<tt style='background-color:#E8E8E8;'> executor.TaskQueueManager <a href=' /executor/task_queue_manager.py#L154'>load_callbacks</a>()</tt>	Loads all available callbacks with the exception of those which utilize the callback_type option.
<tt style='background-color:#E8E8E8;'> executor.TaskQueueManager <a href=' /executor/task_queue_manager.py#L201'>run</a>(play)</tt>	Iterates over the roles/tasks in a play using the given or default strategy for queueing tasks.
<tt style='background-color:#E8E8E8;'> executor.process.WorkerProcess <a href=' /executor/process/worker.py#L91'>run</a>()</tt>	Called when the process is started pushes the result onto the.
<tt style='background-color:#E8E8E8;'> errors.AnsibleError <a href=' /errors/__init__.py#L69'>_get_error_lines_from_file</a>(file_name,line_number)</tt>	Returns the line in the file which corresponds to the reported error location as well as the line preceding it (if the error did not.
<tt style='background-color:#E8E8E8;'> errors.AnsibleError <a href=' /errors/__init__.py#L88'>_get_extended_error</a>()</tt>	Given an object reporting the location of the exception in a file return detailed information regarding it including.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/path.py#L29'>unfrackpath</a>(path,follow)</tt>	Returns a path that is free of symlinks (if follow=true), environment variables relative path traversals and symbols (~) :arg path a byte or text string representing a path to be canonicalized.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/path.py#L52'>makedirs_safe</a>(path,mode)</tt>	Safe way to create dirs in muliprocess/thread environments.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/plugin_docs.py#L93'>get_docstring</a>(filename,verbose)</tt>	Search for assignment of the documentation and examples variables in the given file.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/helpers.py#L25'>pct_to_int</a>(value,num_items,min_value)</tt>	Converts a given value to a percentage if specified as "x%", otherwise converts the given value to an integer.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/color.py#L70'>parsecolor</a>(color)</tt>	Sgr parameter string for the specified color name.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/color.py#L86'>stringc</a>(text,color)</tt>	String in color.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/color.py#L97'>colorize</a>(lead,num,color)</tt>	Print 'lead' = 'num' in 'color'.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/vars.py#L54'>_validate_mutable_mappings</a>(a,b)</tt>	Internal convenience function to ensure arguments are mutablemappings.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/vars.py#L78'>combine_vars</a>(a,b)</tt>	Return a copy of dictionaries of variables based on configured hash behavior.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/vars.py#L93'>merge_hash</a>(a,b)</tt>	Recursively merges hash b into a so that keys from b take precedence over keys from a.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/vars.py#L152'>isidentifier</a>(ident)</tt>	Determines if string is valid python identifier using the ast module.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/unicode.py#L61'>unicode_wrap</a>(func)</tt>	If a function returns a string force it to be a text string.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/hashing.py#L45'>secure_hash_s</a>(data,hash_func)</tt>	Return a secure hash hex digest of data.
<tt style='background-color:#E8E8E8;'> utils. <a href=' /utils/hashing.py#L54'>secure_hash</a>(filename,hash_func)</tt>	Return a secure hash hex digest of local file none if file is not present or a directory.
<tt style='background-color:#E8E8E8;'> utils.Display <a href=' /utils/display.py#L102'>display</a>(msg,color,stderr,screen_only)</tt>	Display a message to the user note msg *must* be a unicode string to prevent unicodeerror tracebacks.
<tt style='background-color:#E8E8E8;'> utils.Display <a href=' /utils/display.py#L184'>deprecated</a>(msg,version,removed)</tt>	Used to print out a deprecation message.
<tt style='background-color:#E8E8E8;'> utils.Display <a href=' /utils/display.py#L223'>banner</a>(msg,color,cows)</tt>	Prints a header-looking line with cowsay or stars wit hlength depending on terminal width 3 minimum.
<tt style='background-color:#E8E8E8;'> module_utils.KubernetesAnsibleModule <a href=' /module_utils/k8s_common.py#L79'>argspec</a>()</tt>	Build the module argument spec from the helper argspec removing any extra attributes not needed by.
<tt style='background-color:#E8E8E8;'> module_utils.KubernetesAnsibleModule <a href=' /module_utils/k8s_common.py#L104'>execute_module</a>()</tt>	Performs basic crud operations on the model object ends by calling.
<tt style='background-color:#E8E8E8;'> module_utils.KubernetesAnsibleModule <a href=' /module_utils/k8s_common.py#L250'>load_resource_definition</a>(src)</tt>	Load the requested src path.
<tt style='background-color:#E8E8E8;'> module_utils.KubernetesAnsibleModule <a href=' /module_utils/k8s_common.py#L263'>resource_to_parameters</a>(resource)</tt>	Converts a resource definition to module parameters.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/univention_umc.py#L102'>uldap</a>()</tt>	Return a configured univention uldap object.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/univention_umc.py#L155'>ldap_search</a>(filter,base,attr)</tt>	Replaces uldaps search and uses a generator.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/univention_umc.py#L183'>module_by_name</a>(module_name_)</tt>	Returns an initialized umc module identified by the given name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/univention_umc.py#L208'>get_umc_admin_objects</a>()</tt>	Convenience accessor for getting univention admin objects.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/univention_umc.py#L218'>umc_module_for_add</a>(module,container_dn,superordinate)</tt>	Returns an umc module object prepared for creating a new entry.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/univention_umc.py#L242'>umc_module_for_edit</a>(module,object_dn,superordinate)</tt>	Returns an umc module object prepared for editing an existing entry.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/univention_umc.py#L273'>create_containers_and_parents</a>(container_dn)</tt>	Create a container and if needed the parents containers.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/a10.py#L60'>axapi_call</a>(module,url,post)</tt>	Returns a datastructure based on the result of the api call.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/a10.py#L101'>axapi_call_v3</a>(module,url,method,body)</tt>	Returns a datastructure based on the result of the api call.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/a10.py#L129'>axapi_enabled_disabled</a>(flag)</tt>	The axapi uses 0/1 integer values for flags rather than strings or booleans so convert the given flag to a 0 or 1.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L241'>get_platform</a>()</tt>	What's the platform? example linux is a platform.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L245'>get_distribution</a>()</tt>	Return the distribution name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L264'>get_distribution_version</a>()</tt>	Return the distribution version.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L278'>get_all_subclasses</a>(cls)</tt>	Used by modules like hardware or network fact classes to retrieve all subclasses of a given class.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L298'>load_platform_subclass</a>(cls)</tt>	Used by modules like user to have different implementations based on detected platform see user.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L323'>json_dict_unicode_to_bytes</a>(d,encoding,errors)</tt>	Recursively convert dict keys and values to byte str.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L341'>json_dict_bytes_to_unicode</a>(d,encoding,errors)</tt>	Recursively convert dict keys and values to byte str.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L360'>return_values</a>(obj)</tt>	Return native stringified values from datastructures.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L384'>remove_values</a>(value,no_log_strings)</tt>	Remove strings in no_log_strings from value if value is a container.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L428'>heuristic_log_sanitize</a>(data,no_log_values)</tt>	Remove strings that look like passwords from log messages.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L510'>human_to_bytes</a>(number,default_unit,isbits)</tt>	Convert number in string format into bytes (ex '2k' => 2048) or using unit argument.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L558'>is_executable</a>(path)</tt>	Is the given path executable? limitations.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L571'>_load_params</a>()</tt>	Read the modules parameters and store them globally.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L626'>env_fallback</a>()</tt>	Load value from environment.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/basic.py#L634'>_lenient_lowercase</a>(lst)</tt>	Lowercase elements of a list.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L666'>__init__</a>(argument_spec,bypass_checks,no_log,check_invalid_arguments)</tt>	Common code for quickly building an ansible module in python.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L791'>load_file_common_arguments</a>(params)</tt>	Many modules deal with files this encapsulates common options that the file module accepts such that it is directly.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L930'>is_special_selinux_path</a>(path)</tt>	Returns a tuple containing (true selinux_context) if the given path is on a nfs or other 'special' fs mount point otherwise the return will be false none.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1321'>add_path_info</a>(kwargs)</tt>	For results that are files supplement the info about the file in the return path with stats about the file path.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1363'>_check_locale</a>()</tt>	Uses the locale module to test the currently set locale.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1491'>_check_required_arguments</a>(spec,param)</tt>	Ensure all required arguments are present.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1505'>_check_required_if</a>(spec)</tt>	Ensure that parameters which conditionally required are present.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1531'>_check_argument_values</a>(spec,param)</tt>	Ensure all arguments have the requested values and there are no stray arguments.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1720'>_check_argument_types</a>(spec,param)</tt>	Ensure all arguments have the requested type.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1791'>_load_params</a>()</tt>	Read the input and set the params attribute.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1851'>_log_invocation</a>()</tt>	Log that ansible ran the module.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1908'>get_bin_path</a>(arg,required,opt_dirs)</tt>	Find system executable in path.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L1938'>boolean</a>(arg)</tt>	Return a bool for the arg.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2010'>exit_json</a>()</tt>	Return from the module without error.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2020'>fail_json</a>()</tt>	Return from the module with an error message.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2030'>fail_on_missing_params</a>(required_params)</tt>	This is for checking for required params when we can not check via argspec because we need more information than is simply given in the argspec.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2043'>digest_from_file</a>(filename,algorithm)</tt>	Return hex digest of local file for a digest_method specified by name or none if file is not present.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2069'>md5</a>(filename)</tt>	Return md5 hex digest of local file using digest_from_file().
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2084'>sha1</a>(filename)</tt>	Return sha1 hex digest of local file using digest_from_file().
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2088'>sha256</a>(filename)</tt>	Return sha-256 hex digest of local file using digest_from_file().
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2092'>backup_local</a>(fn)</tt>	Make a date-marked backup of the specified file return true or false on success or failure.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2117'>atomic_move</a>(src,dest,unsafe_writes)</tt>	Atomically move src to dest copying attributes from dest returns true on success it uses os.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleModule <a href=' /module_utils/basic.py#L2270'>run_command</a>(args,check_rc,close_fds,executable)</tt>	Execute a command returns rc stdout and stderr.
<tt style='background-color:#E8E8E8;'> module_utils.Cli <a href=' /module_utils/asa.py#L97'>get_config</a>(flags)</tt>	Retrieves the current config from the device or cache.
<tt style='background-color:#E8E8E8;'> module_utils.Cli <a href=' /module_utils/cloudengine.py#L224'>run_commands</a>(commands,check_rc)</tt>	Run list of commands on remote device and return results.
<tt style='background-color:#E8E8E8;'> module_utils.Cli <a href=' /module_utils/asa.py#L109'>load_config</a>(config)</tt>	Sends configuration commands to the remote device.
<tt style='background-color:#E8E8E8;'> module_utils.Nxapi <a href=' /module_utils/nxos.py#L202'>_request_builder</a>(commands,output,version,chunk)</tt>	Encodes a nxapi json request message.
<tt style='background-color:#E8E8E8;'> module_utils.Nxapi <a href=' /module_utils/nxos.py#L287'>get_config</a>(flags)</tt>	Retrieves the current config from the device or cache.
<tt style='background-color:#E8E8E8;'> module_utils.Nxapi <a href=' /module_utils/nxos.py#L303'>run_commands</a>(commands,check_rc)</tt>	Run list of commands on remote device and return results.
<tt style='background-color:#E8E8E8;'> module_utils.Nxapi <a href=' /module_utils/nxos.py#L329'>load_config</a>(commands)</tt>	Sends the ordered set of commands to the device.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L53'>rax_slugify</a>(value)</tt>	Prepend a key with rax_ and normalize the key name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L58'>rax_clb_node_to_dict</a>(obj)</tt>	Function to convert a clb node object to a dict.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L68'>rax_to_dict</a>(obj,obj_type)</tt>	Generic function to convert a pyrax object to a dict.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L106'>rax_find_bootable_volume</a>(module,rax_module,server,exit)</tt>	Find a servers bootable volume.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L133'>rax_find_image</a>(module,rax_module,image,exit)</tt>	Find a server image by id or name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L156'>rax_find_volume</a>(module,rax_module,name)</tt>	Find a block storage volume by id or name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L172'>rax_find_network</a>(module,rax_module,network)</tt>	Find a cloud network by id or name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L195'>rax_find_server</a>(module,rax_module,server)</tt>	Find a cloud server by id or name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L216'>rax_find_loadbalancer</a>(module,rax_module,loadbalancer)</tt>	Find a cloud load balancer by id or name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L240'>rax_argument_spec</a>()</tt>	Return standard base dictionary used for the argument_spec.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L259'>rax_required_together</a>()</tt>	Return the default list used for the required_together argument to.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/rax.py#L265'>setup_rax_module</a>(module,rax_module,region_required)</tt>	Set up pyrax in a standard way for all modules.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleCloudStack <a href=' /module_utils/cloudstack.py#L213'>get_vpc</a>(key)</tt>	Return a vpc dictionary or the value of given key of.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleCloudStack <a href=' /module_utils/cloudstack.py#L245'>is_vpc_network</a>(network_id)</tt>	Returns true if network is in vpc.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleCloudStack <a href=' /module_utils/cloudstack.py#L263'>get_network</a>(key)</tt>	Return a network dictionary or the value of given key of.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/vmware.py#L146'>find_vm_by_id</a>(content,vm_id,vm_id_type,datacenter)</tt>	Uuid is unique to a vm every other id returns the first match.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/vmware.py#L189'>gather_vm_facts</a>(content,vm)</tt>	Gather facts from vim virtualmachine object.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/vmware.py#L354'>fetch_file_from_guest</a>(content,vm,username,password)</tt>	Use vmware's filemanager api to fetch a file over http.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/vmware.py#L403'>push_file_to_guest</a>(content,vm,username,password)</tt>	Use vmware's filemanager api to fetch a file over http.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/known_hosts.py#L46'>add_git_host_key</a>(module,url,accept_hostkey,create_dir)</tt>	Idempotently add a git url hostkey.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/known_hosts.py#L66'>is_ssh_url</a>(url)</tt>	Check if url is ssh.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/known_hosts.py#L78'>get_fqdn_and_port</a>(repo_url)</tt>	Chop the hostname and port out of a url.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/known_hosts.py#L172'>add_host_key</a>(module,fqdn,port,key_type)</tt>	Use ssh-keyscan to add the hostkey.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/_text.py#L52'>to_bytes</a>(obj,encoding,errors,nonstring)</tt>	Make sure that a string is a byte string :arg obj an object to make sure is a byte string.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/_text.py#L166'>to_text</a>(obj,encoding,errors,nonstring)</tt>	Make sure that a string is a text string :arg obj an object to make sure is a text string.
<tt style='background-color:#E8E8E8;'> module_utils.CloudRetry <a href=' /module_utils/cloud.py#L53'>status_code_from_exception</a>(error)</tt>	Return the status code from the exception object args.
<tt style='background-color:#E8E8E8;'> module_utils.CloudRetry <a href=' /module_utils/cloud.py#L61'>found</a>(response_code)</tt>	Return true if the response code to retry on was found.
<tt style='background-color:#E8E8E8;'> module_utils.CloudRetry <a href=' /module_utils/cloud.py#L69'>backoff</a>(cls,tries,delay,backoff)</tt>	Retry calling the cloud decorated function using an exponential backoff.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L83'>_read_config</a>(rhsm_conf)</tt>	Load rhsm configuration from /etc/rhsm/rhsm conf.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L107'>enable</a>()</tt>	Enable the system to receive updates from subscription-manager.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L117'>configure</a>()</tt>	Configure the system as directed for registration with rhn.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L134'>is_registered</a>()</tt>	Determine whether the current system returns.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L154'>register</a>(username,password,autosubscribe,activationkey)</tt>	Register the current system to the provided rhn server.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L176'>unsubscribe</a>()</tt>	Unsubscribe a system from all subscribed channels.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L185'>unregister</a>()</tt>	Unregister a currently registered system.
<tt style='background-color:#E8E8E8;'> module_utils.Rhsm <a href=' /module_utils/redhat.py#L194'>subscribe</a>(regexp)</tt>	Subscribe current system to available pools matching the specified.
<tt style='background-color:#E8E8E8;'> module_utils.RhsmPools <a href=' /module_utils/redhat.py#L242'>_load_product_list</a>()</tt>	Loads list of all available pools for system in data structure.
<tt style='background-color:#E8E8E8;'> module_utils.RhsmPools <a href=' /module_utils/redhat.py#L272'>filter</a>(regexp)</tt>	Return a list of rhsmpools whose name matches the provided regular expression.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L55'>get_dict_of_struct</a>(struct,connection,fetch_nested,attributes)</tt>	Convert sdk struct type into dictionary.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L113'>engine_version</a>(connection)</tt>	Return string representation of ovirt engine version.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L122'>create_connection</a>(auth)</tt>	Create a connection to python sdk from task auth parameter.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L149'>convert_to_bytes</a>(param)</tt>	This method convert units to bytes which follow iec standard.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L172'>follow_link</a>(connection,link)</tt>	This method returns the entity of the element which link points to.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L187'>get_link_name</a>(connection,link)</tt>	This method returns the name of the element which link points to.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L202'>equal</a>(param1,param2,ignore_case)</tt>	Compare two parameters and return if they are equal.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L220'>search_by_attributes</a>(service)</tt>	Search for the entity by attributes nested entities don't support search.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L242'>search_by_name</a>(service,name)</tt>	Search for the entity by its name nested entities don't support search.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L271'>get_entity</a>(service)</tt>	Ignore sdk error in case of getting an entity from service.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L285'>get_id_by_name</a>(service,name,raise_error,ignore_case)</tt>	Search an entity id by it's name.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L298'>wait</a>(service,condition,fail_condition,timeout)</tt>	Wait until entity fulfill expected condition.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L359'>ovirt_facts_full_argument_spec</a>()</tt>	Extend parameters of facts module with parameters which are common to all ovirt facts modules.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L376'>ovirt_full_argument_spec</a>()</tt>	Extend parameters of module with parameters which are common to all ovirt modules.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L417'>check_params</a>(module)</tt>	Most modules must have either name or id specified.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ovirt.py#L407'>check_support</a>(version,connection,module,params)</tt>	Check if parameters used by user are supported by ovirt python sdk and ovirt engine.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L446'>build_entity</a>()</tt>	This method should return ovirt python sdk type which we want to create or update initialized by values passed by ansible module.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L459'>param</a>(name,default)</tt>	Return a module parameter specified by it's name.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L465'>update_check</a>(entity)</tt>	This method handle checks whether the entity values are same as values passed to ansible module.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L475'>pre_create</a>(entity)</tt>	This method is called right before entity is created.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L483'>post_create</a>(entity)</tt>	This method is called right after entity is created.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L491'>post_update</a>(entity)</tt>	This method is called right after entity is updated.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L508'>create</a>(entity,result_state,fail_condition,search_params)</tt>	Method which is called when state of the entity is 'present' if user.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L606'>pre_remove</a>(entity)</tt>	This method is called right before entity is removed.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L620'>remove</a>(entity,search_params)</tt>	Method which is called when state of the entity is 'absent' if user.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L668'>action</a>(action,entity,action_condition,wait_condition)</tt>	This method is executed when we want to change the state of some ovirt entity.
<tt style='background-color:#E8E8E8;'> module_utils.BaseModule <a href=' /module_utils/ovirt.py#L744'>search_entity</a>(search_params)</tt>	Always first try to search by id, if id isn't specified check if user constructed special search in search_params,.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcdns.py#L43'>gcdns_connect</a>(module,provider)</tt>	Return a gcp connection for google cloud dns.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gce.py#L51'>unexpected_error_msg</a>(error)</tt>	Create an error string based on passed in error.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/json_utils.py#L34'>_filter_non_json_lines</a>(data)</tt>	Used to filter unrelated output around module json output like messages from tcagetattr or where dropbear spews motd on every single command which is nuts.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L61'>_botocore_exception_maybe</a>()</tt>	Allow for boto3 not being installed when using these utils by wrapping botocore.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L243'>get_ec2_creds</a>(module)</tt>	For compatibility mode with old modules that don't/can't yet.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L250'>boto_fix_security_token_in_profile</a>(conn,profile_name)</tt>	Monkey patch for boto issue boto/boto#2100.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L271'>ec2_connect</a>(module)</tt>	Return an ec2 connection.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L294'>paging</a>(pause,marker_property)</tt>	Adds paging to boto retrieval functions that support a 'marker' this is configurable as not all boto functions seem to use the.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L382'>ansible_dict_to_boto3_filter_list</a>(filters_dict)</tt>	Convert an ansible dict of filters to list of dicts that boto3 can use args.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L418'>boto3_tag_list_to_ansible_dict</a>(tags_list)</tt>	Convert a boto3 list of resource tags to a flat dict of key value pairs args.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L449'>ansible_dict_to_boto3_tag_list</a>(tags_dict)</tt>	Convert a flat dict of key value pairs representing aws resource tags to a boto3 list of dicts args.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L477'>get_ec2_security_group_ids_from_names</a>(sec_group_list,ec2_connection,vpc_id,boto3)</tt>	Return list of security group ids from security group names note that security group names are not unique.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L542'>sort_json_policy_dict</a>(policy_dict)</tt>	Sort any lists in an iam json policy so that comparison of two policies with identical values but different orders will return true.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ec2.py#L586'>map_complex_type</a>(complex_type,type_map)</tt>	Allows to cast elements within a dictionary to a specific type example of usage.
<tt style='background-color:#E8E8E8;'> module_utils.Cli <a href=' /module_utils/cloudengine.py#L241'>configure</a>(commands)</tt>	Sends configuration commands to the remote device.
<tt style='background-color:#E8E8E8;'> module_utils.Cli <a href=' /module_utils/asa.py#L109'>load_config</a>(commands,commit,replace)</tt>	Loads the config commands onto the remote device.
<tt style='background-color:#E8E8E8;'> module_utils.Eapi <a href=' /module_utils/eos.py#L318'>run_commands</a>(commands)</tt>	Runs list of commands on remote device and returns results.
<tt style='background-color:#E8E8E8;'> module_utils.Eapi <a href=' /module_utils/eos.py#L355'>get_config</a>(flags)</tt>	Retrieves the current config from the device or cache.
<tt style='background-color:#E8E8E8;'> module_utils.Eapi <a href=' /module_utils/eos.py#L370'>configure</a>(commands)</tt>	Sends the ordered set of commands to the device.
<tt style='background-color:#E8E8E8;'> module_utils.Eapi <a href=' /module_utils/eos.py#L383'>load_config</a>(config,commit,replace)</tt>	Loads the configuration onto the remote devices if the device doesn't support configuration sessions this will.
<tt style='background-color:#E8E8E8;'> module_utils.NetworkConfig <a href=' /module_utils/netcfg.py#L272'>difference</a>(other,match,path,replace)</tt>	Perform a config diff against the another network config.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/urls.py#L441'>generic_urlparse</a>(parts)</tt>	Returns a dictionary of url parts as parsed by urlparse but accounts for the fact that older versions of that.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/urls.py#L519'>RedirectHandlerFactory</a>(follow_redirects,validate_certs)</tt>	This is a class factory that closes over the value of follow_redirects so that the redirecthandler class has access to.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/urls.py#L573'>build_ssl_validation_error</a>(hostname,port,paths,exc)</tt>	Inteligently build out the sslvalidationerror based on what support.
<tt style='background-color:#E8E8E8;'> module_utils.SSLValidationHandler <a href=' /module_utils/urls.py#L682'>validate_proxy_response</a>(response,valid_codes)</tt>	Make sure we get back a valid code from the proxy.
<tt style='background-color:#E8E8E8;'> module_utils.SSLValidationHandler <a href=' /module_utils/urls.py#L693'>detect_no_proxy</a>(url)</tt>	Detect if the 'no_proxy' environment variable is set and honor those locations.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/urls.py#L823'>open_url</a>(url,data,headers,method)</tt>	Sends a request via http s or ftp using urllib2 python2 or urllib python3.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/urls.py#L967'>basic_auth_header</a>(username,password)</tt>	Takes a username and password and returns a byte string suitable for using as value of an authorization header to do basic auth.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/urls.py#L974'>url_argument_spec</a>()</tt>	Creates an argument spec that can be used with any module.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/urls.py#L993'>fetch_url</a>(module,url,data,headers)</tt>	Sends a request via http s or ftp needs the module as parameter :arg module the ansiblemodule (used to get username password etc.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/avi.py#L52'>avi_common_argument_spec</a>()</tt>	Returns common arguments for all avi modules.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/avi.py#L66'>ansible_return</a>(module,rsp,changed,req)</tt>	Helper function to return the right ansible return based on the error code and changed status.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L59'>__init__</a>(module)</tt>	Create a new dimensiondatamodule.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L107'>get_credentials</a>()</tt>	Get user_id and key from module configuration environment or dotfile.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L172'>get_mcp_version</a>(location)</tt>	Get the mcp version for the specified location.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L183'>get_network_domain</a>(locator,location)</tt>	Retrieve a network domain by its name or id.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L206'>get_vlan</a>(locator,location,network_domain)</tt>	Get a vlan object by its name or id.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L228'>argument_spec</a>()</tt>	Build an argument specification for a dimension data module.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L249'>argument_spec_with_wait</a>()</tt>	Build an argument specification for a dimension data module that includes "wait for completion" arguments.
<tt style='background-color:#E8E8E8;'> module_utils.DimensionDataModule <a href=' /module_utils/dimensiondata.py#L268'>required_together</a>()</tt>	Get the basic argument specification for dimension data modules indicating which arguments are must be specified together.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/dimensiondata.py#L318'>get_dd_regions</a>()</tt>	Get the list of available regions whose vendor is dimension data.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/dimensiondata.py#L332'>is_uuid</a>(u,version)</tt>	Test if valid v4 uuid.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleDockerClient <a href=' /module_utils/docker_common.py#L337'>get_container</a>(name)</tt>	Lookup a container and return the inspection results.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleDockerClient <a href=' /module_utils/docker_common.py#L376'>find_image</a>(name,tag)</tt>	Lookup an image and return the inspection results.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleDockerClient <a href=' /module_utils/docker_common.py#L407'>_image_lookup</a>(name,tag)</tt>	Including a tag in the name parameter sent to the docker-py images method does not work consistently.
<tt style='background-color:#E8E8E8;'> module_utils.AnsibleDockerClient <a href=' /module_utils/docker_common.py#L428'>pull_image</a>(name,tag)</tt>	Pull an image.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L67'>_get_gcp_ansible_credentials</a>(module)</tt>	Helper to fetch creds from ansiblemodule object.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L77'>_get_gcp_environ_var</a>(var_name,default_value)</tt>	Wrapper around os environ get call.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L82'>_get_gcp_environment_credentials</a>(service_account_email,credentials_file,project_id)</tt>	Helper to look in environment variables for credentials.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L98'>_get_gcp_libcloud_credentials</a>(service_account_email,credentials_file,project_id)</tt>	Helper to look for libcloud secrets py file.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L137'>_get_gcp_credentials</a>(module,require_valid_json,check_libcloud)</tt>	Obtain gcp credentials by trying various methods.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L221'>_validate_credentials_file</a>(module,credentials_file,require_valid_json,check_libcloud)</tt>	Check for valid credentials file.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L266'>gcp_connect</a>(module,provider,get_driver,user_agent_product)</tt>	Return a google libcloud driver connection.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L288'>get_google_cloud_credentials</a>(module,scopes)</tt>	Get credentials object for use with google cloud client.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L340'>get_google_api_auth</a>(module,scopes,user_agent_product,user_agent_version)</tt>	Authentication for use with google-python-api-client.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L391'>check_min_pkg_version</a>(pkg_name,minimum_version)</tt>	Minimum required version is >= installed version.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gcp.py#L417'>check_params</a>(params,field_list)</tt>	Helper to validate params.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/infinibox.py#L42'>api_wrapper</a>(func)</tt>	Catch api errors decorator.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/infinibox.py#L58'>get_system</a>(module)</tt>	Return system object or fail.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/infinibox.py#L81'>infinibox_argument_spec</a>()</tt>	Return standard base dictionary used for the argument_spec argument in ansiblemodule.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/infinibox.py#L91'>infinibox_required_together</a>()</tt>	Return the default list used for the required_together argument to ansiblemodule.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/api.py#L43'>rate_limit_argument_spec</a>(spec)</tt>	Creates an argument spec for working with rate limiting.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/api.py#L53'>retry_argument_spec</a>(spec)</tt>	Creates an argument spec for working with retrying.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/api.py#L74'>rate_limit</a>(rate,rate_limit)</tt>	Rate limiting decorator.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ansible_tower.py#L36'>tower_auth_config</a>(module)</tt>	Tower_auth_config attempts to load the tower-cli cfg file.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ansible_tower.py#L70'>tower_check_mode</a>(module)</tt>	Execute check mode logic for ansible tower modules.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/netapp.py#L118'>eseries_host_argument_spec</a>()</tt>	Retrieve a base argument specifiation common to all netapp e-series modules.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/netapp.py#L131'>request</a>(url,data,headers,method)</tt>	Issue an http request to a url retrieving an optional json response.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/service.py#L42'>sysv_is_enabled</a>(name)</tt>	This function will check if the service name supplied.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/service.py#L51'>get_sysv_script</a>(name)</tt>	This function will return the expected path for an init script corresponding to the service name supplied.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/service.py#L65'>sysv_exists</a>(name)</tt>	This function will return true or false depending on the existance of an init script corresponding to the service name supplied.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/service.py#L74'>fail_if_missing</a>(module,found,service,msg)</tt>	This function will return an error or exit gracefully depending on check mode status and if the service is missing or not.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/service.py#L90'>daemonize</a>(module,cmd)</tt>	Execute a command while detaching as a deamon returns rc stdout and stderr.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/pycompat24.py#L32'>get_exception</a>()</tt>	Get the current exception.
<tt style='background-color:#E8E8E8;'> module_utils.LinuxHardware <a href=' /module_utils/facts.py#L1221'>get_dmi_facts</a>()</tt>	Learn dmi facts from system try /sys first for dmi related facts.
<tt style='background-color:#E8E8E8;'> module_utils.LinuxHardware <a href=' /module_utils/facts.py#L1569'>get_lvm_facts</a>()</tt>	Get lvm facts if running as root and lvm utils are available.
<tt style='background-color:#E8E8E8;'> module_utils.FreeBSDHardware <a href=' /module_utils/facts.py#L2007'>get_dmi_facts</a>()</tt>	Learn dmi facts from system.
<tt style='background-color:#E8E8E8;'> module_utils.AIX <a href=' /module_utils/facts.py#L2237'>get_vgs_facts</a>()</tt>	Get vg and pv facts rootvg.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/facts.py#L3960'>get_file_lines</a>(path)</tt>	Get list of lines from file.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/ismount.py#L54'>ismount</a>(path)</tt>	Test whether a path is a mount point clone of os.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L210'>fail</a>(msg)</tt>	Shortcut for calling module fail().
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L230'>validate_tags</a>(tags)</tt>	Check if tags dictionary contains string string pairs.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L244'>update_tags</a>(tags)</tt>	Call from the module to update metadata tags returns tuple.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L267'>has_tags</a>(obj_tags,tag_list)</tt>	Used in fact modules to compare object tags to list of parameter tags return true if list of parameter tags.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L298'>get_resource_group</a>(resource_group)</tt>	Fetch a resource group.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L380'>serialize_obj</a>(obj,class_name,enum_modules)</tt>	Return a json representation of an azure object.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L400'>get_poller_result</a>(poller,wait)</tt>	Consistent method of waiting on and retrieving results from azure's long poller.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L417'>check_provisioning_state</a>(azure_object,requested_state)</tt>	Check an azure object's provisioning state if something did not complete the provisioning.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L468'>create_default_pip</a>(resource_group,location,name,allocation_method)</tt>	Create a default public ip address <name>01 to associate with a network interface.
<tt style='background-color:#E8E8E8;'> module_utils.AzureRMModuleBase <a href=' /module_utils/azure_rm_common.py#L506'>create_default_securitygroup</a>(resource_group,location,name,os_type)</tt>	Create a default security group <name>01 to associate with a network interface if a security group matching.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/aos.py#L56'>check_aos_version</a>(module,min)</tt>	Check if the library aos-pyez is present.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/aos.py#L74'>get_aos_session</a>(module,auth)</tt>	Resume an existing session and return an aos object.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/aos.py#L97'>find_collection_item</a>(collection,item_name,item_id)</tt>	Find collection_item based on name or id from a collection object.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/aos.py#L117'>content_to_dict</a>(module,content)</tt>	Convert 'content' into a python dict based on 'content_format'.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/aos.py#L153'>do_load_resource</a>(module,collection,name)</tt>	Create a new object collection item by loading a datastructure directly.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/gce.py#L43'>gce_connect</a>(module,provider)</tt>	Return a gcp connection for google compute engine.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/splitter.py#L29'>_get_quote_state</a>(token,quote_char)</tt>	The goal of this block is to determine if the quoted string.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/splitter.py#L48'>_count_jinja2_blocks</a>(token,cur_depth,open_token,close_token)</tt>	This function counts the number of opening/closing blocks for a.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/splitter.py#L62'>split_args</a>(args)</tt>	Splits args on whitespace but intelligently reassembles those that may have been split over a jinja2 block or quotes.
<tt style='background-color:#E8E8E8;'> module_utils. <a href=' /module_utils/splitter.py#L207'>unquote</a>(data)</tt>	Removes first and last quotes from a string if the string starts and ends with the same quotes.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/_six.py#L77'>_add_doc</a>(func,doc)</tt>	Add documentation to a function.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/_six.py#L82'>_import_module</a>(name)</tt>	Import module returning the module after the last dot.
<tt style='background-color:#E8E8E8;'> module_utils.six._SixMetaPathImporter <a href=' /module_utils/six/_six.py#L211'>is_package</a>(fullname)</tt>	Return true if the named module is a package.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/_six.py#L488'>add_move</a>(move)</tt>	Add an item to six moves.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/_six.py#L493'>remove_move</a>(name)</tt>	Remove item from six moves.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/_six.py#L802'>with_metaclass</a>(meta)</tt>	Create a base class with a metaclass.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/_six.py#L814'>add_metaclass</a>(metaclass)</tt>	Class decorator for creating a class with a metaclass.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/_six.py#L830'>python_2_unicode_compatible</a>(klass)</tt>	A decorator that defines __unicode__ and __str__ methods under python 2.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/__init__.py#L64'>_find_module</a>(name,path)</tt>	Alternative to imp find_module that can also search in subpackages.
<tt style='background-color:#E8E8E8;'> module_utils.six. <a href=' /module_utils/six/__init__.py#L94'>_get_six_source</a>()</tt>	Import the newest version of the six library that's available.
<tt style='background-color:#E8E8E8;'> modules.crypto.CertificateSigningRequest <a href=' /modules/crypto/openssl_csr.py#L208'>generate</a>(module)</tt>	Generate the certificate signing request.
<tt style='background-color:#E8E8E8;'> modules.crypto.CertificateSigningRequest <a href=' /modules/crypto/openssl_csr.py#L243'>remove</a>()</tt>	Remove the certificate signing request.
<tt style='background-color:#E8E8E8;'> modules.crypto.CertificateSigningRequest <a href=' /modules/crypto/openssl_csr.py#L255'>dump</a>()</tt>	Serialize the object into a dictionnary.
<tt style='background-color:#E8E8E8;'> modules.crypto.PrivateKey <a href=' /modules/crypto/openssl_privatekey.py#L137'>generate</a>(module)</tt>	Generate a keypair.
<tt style='background-color:#E8E8E8;'> modules.crypto.PrivateKey <a href=' /modules/crypto/openssl_privatekey.py#L171'>remove</a>()</tt>	Remove the private key from the filesystem.
<tt style='background-color:#E8E8E8;'> modules.crypto.PrivateKey <a href=' /modules/crypto/openssl_privatekey.py#L184'>dump</a>()</tt>	Serialize the object into a dictionnary.
<tt style='background-color:#E8E8E8;'> modules.crypto.PublicKey <a href=' /modules/crypto/openssl_publickey.py#L120'>generate</a>(module)</tt>	Generate the public key.
<tt style='background-color:#E8E8E8;'> modules.crypto.PublicKey <a href=' /modules/crypto/openssl_publickey.py#L143'>remove</a>()</tt>	Remove the public key from the filesystem.
<tt style='background-color:#E8E8E8;'> modules.crypto.PublicKey <a href=' /modules/crypto/openssl_publickey.py#L155'>dump</a>()</tt>	Serialize the object into a dictionnary.
<tt style='background-color:#E8E8E8;'> modules.notification.Pushover <a href=' /modules/notification/pushover.py#L80'>run</a>(priority,msg)</tt>	Do whatever it is we do.
<tt style='background-color:#E8E8E8;'> modules.notification. <a href=' /modules/notification/typetalk.py#L101'>send_message</a>(module,client_id,client_secret,topic)</tt>	Send message to typetalk.
<tt style='background-color:#E8E8E8;'> modules.notification. <a href=' /modules/notification/slack.py#L193'>escape_quotes</a>(text)</tt>	Backslash any quotes within text.
<tt style='background-color:#E8E8E8;'> modules.notification. <a href=' /modules/notification/irc.py#L159'>send_msg</a>(msg,server,port,channel)</tt>	Send message to irc.
<tt style='background-color:#E8E8E8;'> modules.notification. <a href=' /modules/notification/hipchat.py#L124'>send_msg_v1</a>(module,token,room,msg_from)</tt>	Sending message to hipchat v1 server.
<tt style='background-color:#E8E8E8;'> modules.notification. <a href=' /modules/notification/hipchat.py#L151'>send_msg_v2</a>(module,token,room,msg_from)</tt>	Sending message to hipchat v2 server.
<tt style='background-color:#E8E8E8;'> modules.notification. <a href=' /modules/notification/cisco_spark.py#L127'>spark_message</a>(module)</tt>	When check mode is specified establish a read only connection that does not return any user specific data to validate connectivity.
<tt style='background-color:#E8E8E8;'> modules.source_control.Hg <a href=' /modules/source_control/hg.py#L141'>get_revision</a>()</tt>	Hg id -b -i -t returns a string in the format "<changeset>[+] <branch_name> <tag>".
<tt style='background-color:#E8E8E8;'> modules.source_control.Hg <a href=' /modules/source_control/hg.py#L228'>at_revision</a>()</tt>	There is no point in pulling from a potentially down/slow remote site if the desired changeset is already the current changeset.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L145'>_exec</a>(args,check_rc)</tt>	Execute a subversion command and return output if check_rc is false returns the return code instead of the output.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L164'>is_svn_repo</a>()</tt>	Checks if path is a svn repo.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L169'>checkout</a>()</tt>	Creates new svn working directory if it does not already exist.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L173'>export</a>(force)</tt>	Export svn repo to directory.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L182'>switch</a>()</tt>	Change working directory's repo.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L187'>update</a>()</tt>	Update existing svn working directory.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L191'>revert</a>()</tt>	Revert svn working directory.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L195'>get_revision</a>()</tt>	Revision and url of subversion working directory.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L202'>get_remote_revision</a>()</tt>	Revision and url of subversion working directory.
<tt style='background-color:#E8E8E8;'> modules.source_control.Subversion <a href=' /modules/source_control/subversion.py#L208'>has_local_mods</a>()</tt>	True if revisioned files have been added or modified unrevisioned files are ignored.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L270'>head_splitter</a>(headfile,remote,module,fail_on_error)</tt>	Extract the head reference.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L384'>get_version</a>(module,git_path,dest,ref)</tt>	Samples the version of the git repo.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L420'>clone</a>(git_path,module,repo,dest)</tt>	Makes a new git repo if it does not already exist.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L478'>reset</a>(git_path,module,dest)</tt>	Resets the index and working tree to head.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L488'>get_diff</a>(module,git_path,dest,repo)</tt>	Return the difference between 2 versions.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L613'>get_head_branch</a>(git_path,module,dest,remote)</tt>	Determine what branch head is associated with this is partly.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L656'>get_remote_url</a>(git_path,module,dest,remote)</tt>	Return url of remote source for repo.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L667'>set_remote_url</a>(git_path,module,repo,dest)</tt>	Updates repo from remote sources.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L685'>fetch</a>(git_path,module,repo,dest)</tt>	Updates repo from remote sources.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L799'>submodule_update</a>(git_path,module,dest,track_submodules)</tt>	Init and update any submodules.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L822'>set_remote_branch</a>(git_path,module,dest,remote)</tt>	Set refs for the remote branch version this assumes the branch does not yet exist locally and is therefore also not checked out.
<tt style='background-color:#E8E8E8;'> modules.source_control. <a href=' /modules/source_control/git.py#L890'>git_version</a>(git_path,module)</tt>	Return the installed version of git.
<tt style='background-color:#E8E8E8;'> modules.source_control.Bzr <a href=' /modules/source_control/bzr.py#L91'>get_version</a>()</tt>	Samples the version of the bzr branch.
<tt style='background-color:#E8E8E8;'> modules.source_control.Bzr <a href=' /modules/source_control/bzr.py#L99'>clone</a>()</tt>	Makes a new bzr branch if it does not already exist.
<tt style='background-color:#E8E8E8;'> modules.source_control.Bzr <a href=' /modules/source_control/bzr.py#L121'>reset</a>(force)</tt>	Resets the index and working tree to head.
<tt style='background-color:#E8E8E8;'> modules.source_control.Bzr <a href=' /modules/source_control/bzr.py#L131'>fetch</a>()</tt>	Updates branch from remote sources.
<tt style='background-color:#E8E8E8;'> modules.source_control.Bzr <a href=' /modules/source_control/bzr.py#L141'>switch_version</a>()</tt>	Once pulled switch to a particular revno or revid.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_privs.py#L269'>partial</a>(f)</tt>	Partial function application.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql.Connection <a href=' /modules/database/postgresql/postgresql_privs.py#L329'>encoding</a>()</tt>	Connection encoding in python-compatible form.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql.Connection <a href=' /modules/database/postgresql/postgresql_privs.py#L450'>manipulate_privs</a>(obj_type,privs,objs,roles)</tt>	Manipulate database object privileges.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_user.py#L255'>user_add</a>(cursor,user,password,role_attr_flags)</tt>	Create a new database user role.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_user.py#L270'>user_alter</a>(cursor,module,user,password)</tt>	Change user password and/or attributes return true if changed false otherwise.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_user.py#L413'>user_delete</a>(cursor,user)</tt>	Try to remove a user returns true if successful otherwise false.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_user.py#L426'>has_table_privileges</a>(cursor,user,table,privs)</tt>	Return the difference between the privileges that a user already has and the privileges that they desire to have.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_user.py#L485'>has_database_privileges</a>(cursor,user,db,privs)</tt>	Return the difference between the privileges that a user already has and the privileges that they desire to have.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_user.py#L561'>parse_role_attrs</a>(role_attr_flags)</tt>	Parse role attributes string for user creation.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_user.py#L598'>parse_privs</a>(privs,db)</tt>	Parse privilege string to determine permissions for database db.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_lang.py#L162'>lang_exists</a>(cursor,lang)</tt>	Checks if language exists for db.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_lang.py#L168'>lang_istrusted</a>(cursor,lang)</tt>	Checks if language is trusted for db.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_lang.py#L174'>lang_altertrust</a>(cursor,lang,trust)</tt>	Changes if language is trusted for db.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_lang.py#L180'>lang_add</a>(cursor,lang,trust)</tt>	Adds language for db.
<tt style='background-color:#E8E8E8;'> modules.database.postgresql. <a href=' /modules/database/postgresql/postgresql_lang.py#L189'>lang_drop</a>(cursor,lang,cascade)</tt>	Drops language for db.
<tt style='background-color:#E8E8E8;'> modules.database.mongodb. <a href=' /modules/database/mongodb/mongodb_user.py#L230'>check_compatibility</a>(module,client)</tt>	Check the compatibility between the driver and the database.
<tt style='background-color:#E8E8E8;'> modules.database.mongodb. <a href=' /modules/database/mongodb/mongodb_user.py#L255'>user_find</a>(client,user,db_name)</tt>	Check if the user exists.
<tt style='background-color:#E8E8E8;'> modules.database.mysql. <a href=' /modules/database/mysql/mysql_user.py#L431'>privileges_get</a>(cursor,user,host)</tt>	Mysql doesn't have a better method of getting privileges aside from the show grants query syntax which requires us to then parse the returned string.
<tt style='background-color:#E8E8E8;'> modules.database.mysql. <a href=' /modules/database/mysql/mysql_user.py#L466'>privileges_unpack</a>(priv,mode)</tt>	Take a privileges string typically passed as a parameter and unserialize it into a dictionary the same format as privileges_get() above.
<tt style='background-color:#E8E8E8;'> modules.database.mysql. <a href=' /modules/database/mysql/mysql_variables.py#L73'>typedvalue</a>(value)</tt>	Convert value to number whenever possible return same value otherwise.
<tt style='background-color:#E8E8E8;'> modules.database.mysql. <a href=' /modules/database/mysql/mysql_variables.py#L108'>setvariable</a>(cursor,mysqlvar,value)</tt>	Set a global mysql variable to a given value the db driver will handle quoting of the given value based on its.
<tt style='background-color:#E8E8E8;'> modules.remote_management. <a href=' /modules/remote_management/wakeonlan.py#L80'>wakeonlan</a>(module,mac,broadcast,port)</tt>	Send a magic wake-on-lan packet.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/locale_gen.py#L80'>is_available</a>(name,ubuntuMode)</tt>	Check if the given locale is available on the system this is done by.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/locale_gen.py#L101'>is_present</a>(name)</tt>	Checks if the given locale is currently installed.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/locale_gen.py#L107'>fix_case</a>(name)</tt>	Locale -a might return the encoding in either lower or upper case.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/locale_gen.py#L114'>replace_line</a>(existing_line,new_line)</tt>	Replaces lines in /etc/locale gen.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/locale_gen.py#L127'>set_locale</a>(name,enabled)</tt>	Sets the state of the locale defaults to enabled.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/locale_gen.py#L145'>apply_change</a>(targetState,name)</tt>	Create or remove locale.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/locale_gen.py#L163'>apply_change_ubuntu</a>(targetState,name)</tt>	Create or remove locale.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/filesystem.py#L77'>_get_dev_size</a>(dev,module)</tt>	Return size in bytes of device returns int.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/filesystem.py#L84'>_get_fs_size</a>(fssize_cmd,dev,module)</tt>	Return size in bytes of filesystem on device returns int.
<tt style='background-color:#E8E8E8;'> modules.system.CronVar <a href=' /modules/system/cronvar.py#L187'>write</a>(backup_file)</tt>	Write the crontab to the system saves all information.
<tt style='background-color:#E8E8E8;'> modules.system.CronVar <a href=' /modules/system/cronvar.py#L296'>render</a>()</tt>	Render a proper crontab.
<tt style='background-color:#E8E8E8;'> modules.system.CronVar <a href=' /modules/system/cronvar.py#L305'>_read_user_execute</a>()</tt>	Returns the command line for reading a crontab.
<tt style='background-color:#E8E8E8;'> modules.system.CronVar <a href=' /modules/system/cronvar.py#L322'>_write_execute</a>(path)</tt>	Return the command line for writing a crontab.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L101'>__new__</a>(cls,module)</tt>	Return the platform-specific subclass.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L133'>__init__</a>(module)</tt>	Initialize of the class.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L151'>abort</a>(msg)</tt>	Abort the process with error message.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L165'>execute</a>()</tt>	Execute the shell command.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L185'>diff</a>(phase1,phase2)</tt>	Calculate the difference between given 2 phases.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L202'>check</a>(phase)</tt>	Check the state in given phase and set it to self value.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L216'>change</a>()</tt>	Make the changes effect based on self value.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L225'>get</a>(key,phase)</tt>	Get the value for the key at the given phase.
<tt style='background-color:#E8E8E8;'> modules.system.Timezone <a href=' /modules/system/timezone.py#L239'>set</a>(key,value)</tt>	Set the value for the key (of course for the phase 'after').
<tt style='background-color:#E8E8E8;'> modules.system.NosystemdTimezone <a href=' /modules/system/timezone.py#L359'>_edit_file</a>(filename,regexp,value)</tt>	Replace the first matched line with given value.
<tt style='background-color:#E8E8E8;'> modules.system.SmartOSTimezone <a href=' /modules/system/timezone.py#L470'>get</a>(key,phase)</tt>	Lookup the current timezone name in /etc/default/init if anything else.
<tt style='background-color:#E8E8E8;'> modules.system.SmartOSTimezone <a href=' /modules/system/timezone.py#L486'>set</a>(key,value)</tt>	Set the requested timezone through sm-set-timezone an invalid timezone name will be rejected and we have no further input validation to perform.
<tt style='background-color:#E8E8E8;'> modules.system.BSDTimezone <a href=' /modules/system/timezone.py#L517'>get</a>(key,phase)</tt>	Lookup the current timezone by resolving /etc/localtime.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/runit.py#L106'>_load_dist_subclass</a>(cls)</tt>	Used for derivative implementations.
<tt style='background-color:#E8E8E8;'> modules.system.CronTab <a href=' /modules/system/cron.py#L313'>write</a>(backup_file)</tt>	Write the crontab to the system saves all information.
<tt style='background-color:#E8E8E8;'> modules.system.CronTab <a href=' /modules/system/cron.py#L518'>render</a>()</tt>	Render this crontab as it would be in the crontab.
<tt style='background-color:#E8E8E8;'> modules.system.CronTab <a href=' /modules/system/cron.py#L531'>_read_user_execute</a>()</tt>	Returns the command line for reading a crontab.
<tt style='background-color:#E8E8E8;'> modules.system.CronTab <a href=' /modules/system/cron.py#L547'>_write_execute</a>(path)</tt>	Return the command line for writing a crontab.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/authorized_key.py#L517'>enforce_state</a>(module,params)</tt>	Add or remove key.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/known_hosts.py#L178'>sanity_check</a>(module,host,key,sshkeygen)</tt>	Check supplied key is sensible host and key are parameters provided by the user if the host.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/known_hosts.py#L215'>search_for_host_key</a>(module,host,key,hash_host)</tt>	Search_for_host_key module host key path sshkeygen -> (found replace_or_add found_line) looks up host and keytype in the known_hosts file path if it's there looks to see.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/known_hosts.py#L279'>normalize_known_hosts_key</a>(key)</tt>	Transform a key either taken from a known_host file or provided by the user into a normalized form.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L159'>_escape_fstab</a>(v)</tt>	Escape invalid characters in fstab fields.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L177'>set_mount</a>(module,args)</tt>	Set/change a mount point location in fstab.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L265'>unset_mount</a>(module,args)</tt>	Remove a mount point from fstab.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L341'>mount</a>(module,args)</tt>	Mount up a path or remount if needed.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L369'>umount</a>(module,path)</tt>	Unmount a path.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L383'>remount</a>(module,args)</tt>	Try to use 'remount' first and fallback to u mount if unsupported.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L437'>is_bind_mounted</a>(module,linux_mounts,dest,src)</tt>	Return whether the dest is bind mounted :arg module the ansiblemodule used for helper functions.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/mount.py#L493'>get_linux_mounts</a>(module)</tt>	Gather mount information.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L207'>parse_unit</a>(size_str,unit)</tt>	Parses a string containing a size of information.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L237'>parse_partition_info</a>(parted_output,unit)</tt>	Parses the output of parted and transforms the data into a dictionary.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L322'>format_disk_size</a>(size_bytes,unit)</tt>	Formats a size in bytes into a different unit like parted does it doesn't.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L374'>get_unlabeled_device_info</a>(device,unit)</tt>	Fetches device information directly from the kernel and it is used when parted cannot work because of a missing label.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L405'>get_device_info</a>(device,unit)</tt>	Fetches information about a disk and its partitions and it returns a dictionary.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L431'>check_parted_label</a>(device)</tt>	Determines if parted needs a label to complete its duties versions prior.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L452'>parted_version</a>()</tt>	Returns the major and minor version of parted installed on the system.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L482'>parted</a>(script,device,align)</tt>	Runs a parted script.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L499'>read_record</a>(file_path,default)</tt>	Reads the first line of a file and returns it.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L513'>part_exists</a>(partitions,attribute,number)</tt>	Looks if a partition that has a specific value for a specific attribute actually exists.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/parted.py#L524'>check_size_format</a>(size_str)</tt>	Checks if the input string is an allowed size.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/firewalld.py#L168'>action_handler</a>(action_func,action_func_args)</tt>	Function to wrap calls to make actions on firewalld in try/except.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/java_cert.py#L122'>check_cert_present</a>(module,executable,keystore_path,keystore_pass)</tt>	Check if certificate with alias is present in keystore.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/java_cert.py#L133'>import_cert_url</a>(module,executable,url,port)</tt>	Import certificate from url into keystore located at keystore_path.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/java_cert.py#L159'>import_cert_path</a>(module,executable,path,keystore_path)</tt>	Import certificate from path into keystore located on.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/java_cert.py#L183'>delete_cert</a>(module,executable,keystore_path,keystore_pass)</tt>	Delete cerificate identified with alias from keystore on keystore_path.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/java_cert.py#L200'>test_keytool</a>(module,executable)</tt>	Test if keytool is actuall executable or not.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/java_cert.py#L206'>test_keystore</a>(module,keystore_path)</tt>	Check if we can access keystore as file or not.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/sefcontext.py#L131'>semanage_fcontext_exists</a>(sefcontext,target,ftype)</tt>	Get the selinux file context mapping definition from policy return none if it does not exist.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/sefcontext.py#L142'>semanage_fcontext_modify</a>(module,result,target,ftype)</tt>	Add or modify selinux file context mapping definition to the policy.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/sefcontext.py#L194'>semanage_fcontext_delete</a>(module,result,target,ftype)</tt>	Delete selinux file context mapping definition from the policy.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/seport.py#L106'>semanage_port_get_ports</a>(seport,setype,proto)</tt>	Get the list of ports that have the specified type definition.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/seport.py#L127'>semanage_port_get_type</a>(seport,port,proto)</tt>	Get the selinux type of the specified port.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/seport.py#L153'>semanage_port_add</a>(module,ports,proto,setype)</tt>	Add selinux port type definition to the policy.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/seport.py#L213'>semanage_port_del</a>(module,ports,proto,setype)</tt>	Delete selinux port type definition from the policy.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/authorized_key.py#L301'>keyfile</a>(module,user,write,path)</tt>	Calculate name of authorized keys file optionally creating the directories and file properly setting permissions.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/authorized_key.py#L365'>parseoptions</a>(module,options)</tt>	Reads a string containing ssh-key options.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/authorized_key.py#L385'>parsekey</a>(module,raw_key,rank)</tt>	Parses a key which may or may not contain a list of ssh-key options at the beginning.
<tt style='background-color:#E8E8E8;'> modules.system.User <a href=' /modules/system/user.py#L563'>user_group_membership</a>(exclude_primary)</tt>	Return a list of groups the user belongs to.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1521'>_get_user_property</a>(property)</tt>	Return user property as given my dscl 1 read or none if not found.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1544'>_get_next_uid</a>(system)</tt>	Return the next available uid if system=true then.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1573'>_change_user_password</a>()</tt>	Change password for self name against self password.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1595'>_make_group_numerical</a>()</tt>	Convert self group to is stringed numerical value suitable for dscl.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1606'>__modify_group</a>(group,action)</tt>	Add or remove self name to or from group depending on action.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1620'>_modify_group</a>()</tt>	Add or remove self name to or from group depending on action.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1652'>_update_system_user</a>()</tt>	Hide or show user on login window according self system.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1694'>user_exists</a>()</tt>	Check is self name is a known user on the system.
<tt style='background-color:#E8E8E8;'> modules.system.DarwinUser <a href=' /modules/system/user.py#L1701'>remove_user</a>()</tt>	Delete self name if self force is true remove its home directory.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/make.py#L80'>run_command</a>(command,module,check_rc)</tt>	Run a command using the module return the result code and std{err out} content.
<tt style='background-color:#E8E8E8;'> modules.system. <a href=' /modules/system/make.py#L93'>sanitize_output</a>(output)</tt>	Sanitize the output string before we pass it to module.
<tt style='background-color:#E8E8E8;'> modules.system.SysctlModule <a href=' /modules/system/sysctl.py#L197'>_values_is_equal</a>(a,b)</tt>	Expects two string values it will split the string by whitespace.
<tt style='background-color:#E8E8E8;'> modules.system.GConf2Preference <a href=' /modules/system/gconftool2.py#L126'>call</a>(call_type,fail_onerr)</tt>	Helper function to perform gconftool-2 operations.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/pacman.py#L151'>get_version</a>(pacman_output)</tt>	Take pacman -qi or pacman -si output and get the version.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/pkgin.py#L143'>query_package</a>(module,pacman_path,name,state)</tt>	Query the package status in both the local system and the repository returns a boolean to indicate if the package is installed a second.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/apt_key.py#L158'>parse_key_id</a>(key_id)</tt>	Validate the key_id and break it into segments :arg key_id the key_id as supplied by the user.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/apt_key.py#L214'>shorten_key_ids</a>(key_id_list)</tt>	Takes a list of key ids and converts them to the 'short' format by reducing them to their last 8 characters.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L78'>update_package_db</a>(module,opkg_path)</tt>	Updates packages list.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/pkgin.py#L143'>query_package</a>(module,opkg_path,name,state)</tt>	Returns whether a package is installed or not.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L108'>remove_packages</a>(module,opkg_path,packages)</tt>	Uninstalls one or more packages if installed.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L132'>install_packages</a>(module,opkg_path,packages)</tt>	Installs one or more packages if not already installed.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/yum.py#L539'>transaction_exists</a>(pkglist)</tt>	Checks the package list to see if any packages are.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/yum.py#L578'>local_nvra</a>(module,path)</tt>	Return nvra of a local rpm passed in.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/layman.py#L111'>init_layman</a>(config)</tt>	Returns the initialized laymanapi.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/layman.py#L121'>download_url</a>(module,url,dest)</tt>	:param url the url to download.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/layman.py#L143'>install_overlay</a>(module,name,list_url)</tt>	Installs the overlay repository if not on the central overlays list.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/layman.py#L187'>uninstall_overlay</a>(module,name)</tt>	Uninstalls the given overlay repository from the system.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/layman.py#L212'>sync_overlay</a>(name)</tt>	Synchronizes the specified overlay repository.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/layman.py#L225'>sync_overlays</a>()</tt>	Synchronize all of the installed overlays.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/xbps.py#L106'>is_installed</a>(xbps_output)</tt>	Returns package install state.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/pkgin.py#L143'>query_package</a>(module,xbps_path,name,state)</tt>	Returns package info.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L78'>update_package_db</a>(module,xbps_path)</tt>	Returns true if update_package_db changed.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/xbps.py#L144'>upgrade</a>(module,xbps_path)</tt>	Returns true is full upgrade succeeds.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L108'>remove_packages</a>(module,xbps_path,packages)</tt>	Returns true if package removal succeeds.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L132'>install_packages</a>(module,xbps_path,state,packages)</tt>	Returns true if package install succeeds.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/xbps.py#L219'>check_packages</a>(module,xbps_path,packages,state)</tt>	Returns change status of command.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/swupd.py#L292'>main</a>()</tt>	The main function.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/apt.py#L749'>get_cache_mtime</a>()</tt>	Return mtime of a valid apt cache file.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/apt.py#L762'>get_updated_cache_time</a>()</tt>	Return the mtime time stamp and the updated cache time.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/apt.py#L775'>get_cache</a>(module)</tt>	Attempt to get the cache object and update till it works.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper_repository.py#L159'>_get_cmd</a>()</tt>	Combines the non-interactive zypper command with arguments/subcommands.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper_repository.py#L167'>_parse_repos</a>(module)</tt>	Parses the output of zypper --xmlout repos and return a parse repo dictionary.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper_repository.py#L191'>_repo_changes</a>(realrepo,repocmp)</tt>	Check whether the 2 given repos have different settings.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper_repository.py#L207'>repo_exists</a>(module,repodata,overwrite_multiple)</tt>	Check whether the repository already exists.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper_repository.py#L242'>addmodify_repo</a>(module,repodata,old_repos,zypper_version)</tt>	Adds the repo removes old repos before that would conflict.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper_repository.py#L287'>remove_repo</a>(module,repo)</tt>	Removes the repo.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper_repository.py#L301'>runrefreshrepo</a>(module,auto_import_keys,shortname)</tt>	Forces zypper to refresh repo metadata.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/dnf.py#L210'>_configure_base</a>(module,base,conf_file,disable_gpg_check)</tt>	Configure the dnf base object.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/dnf.py#L239'>_specify_repositories</a>(base,disablerepo,enablerepo)</tt>	Enable and disable repositories matching the provided patterns.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/dnf.py#L255'>_base</a>(module,conf_file,disable_gpg_check,disablerepo)</tt>	Return a fully configured dnf base object.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/dnf.py#L264'>_package_dict</a>(package)</tt>	Return a dictionary of information for the package.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/dnf.py#L281'>list_items</a>(module,base,command)</tt>	List package info based on the command.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/dnf.py#L305'>_mark_package_install</a>(module,base,pkg_spec)</tt>	Mark the package for install.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L161'>load_config</a>()</tt>	Read configuration from /etc/sysconfig/rhn/up2date.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L176'>hostname</a>()</tt>	Return the non-xmlrpc rhn hostname this is a convenience method.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L225'>is_registered</a>()</tt>	Determine whether the current system is registered.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L234'>configure_server_url</a>(server_url)</tt>	Configure server_url for registration.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L242'>enable</a>()</tt>	Prepare the system for rhn registration this includes.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L252'>register</a>(enable_eus,activationkey,profilename,sslcacert)</tt>	Register system to rhn if enable_eus=true extended update.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L274'>api</a>(method)</tt>	Convenience rpc wrapper.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L289'>unregister</a>()</tt>	Unregister a previously registered system.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhn <a href=' /modules/packaging/os/rhn_register.py#L327'>_is_hosted</a>()</tt>	Return true if we are running against hosted rhn redhat com or.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/rpm_key.py#L84'>is_pubkey</a>(string)</tt>	Verifies if string is a pubkey.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.RpmKey <a href=' /modules/packaging/os/rpm_key.py#L132'>fetch_key</a>(url)</tt>	Downloads a key from url returns a valid path to a gpg key.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.RpmKey <a href=' /modules/packaging/os/rpm_key.py#L147'>normalize_keyid</a>(keyid)</tt>	Ensure a keyid doesn't have a leading 0x has leading or trailing whitespace and make sure is lowercase.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.RpmKey <a href=' /modules/packaging/os/rpm_key.py#L175'>is_keyid</a>(keystr)</tt>	Verifies if a key as provided by the user is a keyid.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L224'>_read_config</a>(rhsm_conf)</tt>	Load rhsm configuration from /etc/rhsm/rhsm conf.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L248'>enable</a>()</tt>	Enable the system to receive updates from subscription-manager.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L258'>configure</a>()</tt>	Configure the system as directed for registration with rhsm.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L275'>is_registered</a>()</tt>	Determine whether the current system returns.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L291'>register</a>(username,password,autosubscribe,activationkey)</tt>	Register the current system to the provided rhsm or sat6 server.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L332'>unsubscribe</a>(serials)</tt>	Unsubscribe a system from subscribed channels args.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L353'>unregister</a>()</tt>	Unregister a currently registered system.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L362'>subscribe</a>(regexp)</tt>	Subscribe current system to available pools matching the specified regular expression.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L398'>subscribe_pool</a>(regexp)</tt>	Subscribe current system to available pools matching the specified.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Rhsm <a href=' /modules/packaging/os/redhat_subscription.py#L415'>subscribe_product</a>(regexp)</tt>	Subscribe current system to available pools matching the specified.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.RhsmPools <a href=' /modules/packaging/os/redhat_subscription.py#L485'>_load_product_list</a>(consumed)</tt>	Loads list of all available or consumed pools for system in data structure.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.RhsmPools <a href=' /modules/packaging/os/redhat_subscription.py#L522'>filter_pools</a>(regexp)</tt>	Return a list of rhsmpools whose pool id matches the provided regular expression.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.RhsmPools <a href=' /modules/packaging/os/redhat_subscription.py#L531'>filter_products</a>(regexp)</tt>	Return a list of rhsmpools whose product name matches the provided regular expression.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/swdepot.py#L82'>compare_package</a>(version1,version2)</tt>	Compare version packages.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/pkgin.py#L143'>query_package</a>(module,name,depot)</tt>	Returns whether a package is installed or not and version.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/swdepot.py#L109'>remove_package</a>(module,name)</tt>	Uninstall package if installed.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/swdepot.py#L120'>install_package</a>(module,depot,name)</tt>	Install package if not already installed.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L78'>update_package_db</a>(module,port_path)</tt>	Updates packages list.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/pkgin.py#L143'>query_package</a>(module,port_path,name,state)</tt>	Returns whether a package is installed or not.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L108'>remove_packages</a>(module,port_path,packages)</tt>	Uninstalls one or more packages if installed.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L132'>install_packages</a>(module,port_path,packages)</tt>	Installs one or more packages if not already installed.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L154'>activate_packages</a>(module,port_path,packages)</tt>	Activate a package if it's inactive.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/macports.py#L179'>deactivate_packages</a>(module,port_path,packages)</tt>	Deactivate a package if it's active.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/sorcery.py#L193'>get_sorcery_ver</a>(module)</tt>	Get sorcery version.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/sorcery.py#L206'>codex_fresh</a>(codex,module)</tt>	Check if grimoire collection is fresh enough.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/sorcery.py#L232'>codex_list</a>(module)</tt>	List valid grimoire collection.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/sorcery.py#L259'>update_sorcery</a>(module)</tt>	Update sorcery scripts.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/sorcery.py#L290'>update_codex</a>(module)</tt>	Update grimoire collections.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/sorcery.py#L330'>match_depends</a>(module)</tt>	Check for matching dependencies.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/sorcery.py#L460'>manage_spells</a>(module)</tt>	Cast or dispel spells.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Swupd <a href=' /modules/packaging/os/swupd.py#L207'>install_bundle</a>(bundle)</tt>	Installs a bundle with swupd bundle-add bundle.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Swupd <a href=' /modules/packaging/os/swupd.py#L231'>remove_bundle</a>(bundle)</tt>	Removes a bundle with swupd bundle-remove bundle.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Swupd <a href=' /modules/packaging/os/swupd.py#L251'>update_os</a>()</tt>	Updates the os with swupd update.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Swupd <a href=' /modules/packaging/os/swupd.py#L271'>verify_os</a>()</tt>	Verifies filesystem agains specified or current version.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/homebrew_tap.py#L83'>a_valid_tap</a>(tap)</tt>	Returns true if the tap is valid.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/homebrew_tap.py#L89'>already_tapped</a>(module,brew_path,tap)</tt>	Returns true if already tapped.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/homebrew_tap.py#L103'>add_tap</a>(module,brew_path,tap,url)</tt>	Adds a single tap.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/homebrew_tap.py#L134'>add_taps</a>(module,brew_path,taps)</tt>	Adds one or more taps.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/homebrew_tap.py#L159'>remove_tap</a>(module,brew_path,tap)</tt>	Removes a single tap.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/homebrew_tap.py#L189'>remove_taps</a>(module,brew_path,taps)</tt>	Removes one or more taps.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.SourcesList <a href=' /modules/packaging/os/apt_repository.py#L193'>__iter__</a>()</tt>	Simple iterator to go over all sources empty non-source and other not valid lines will be skipped.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.SourcesList <a href=' /modules/packaging/os/apt_repository.py#L262'>_apt_cfg_file</a>(filespec)</tt>	Wrapper for apt_pkg module for running with python 2 5.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.SourcesList <a href=' /modules/packaging/os/apt_repository.py#L273'>_apt_cfg_dir</a>(dirspec)</tt>	Wrapper for apt_pkg module for running with python 2 5.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.SourcesList <a href=' /modules/packaging/os/apt_repository.py#L349'>modify</a>(file,n,enabled,source)</tt>	This function to be used with iterator so we don't care of invalid sources.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/pkgin.py#L143'>query_package</a>(module,name)</tt>	Search for the package by name.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper.py#L188'>split_name_version</a>(name)</tt>	Splits of the package name and desired version example formats.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper.py#L236'>get_installed_state</a>(m,packages)</tt>	Get installed state of packages.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper.py#L288'>get_cmd</a>(m,subcommand)</tt>	Puts together the basic zypper command arguments with those passed to the module.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper.py#L340'>package_present</a>(m,name,want_latest)</tt>	Install and update (if want_latest) the packages in name_install while removing the packages in name_remove.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper.py#L386'>package_update_all</a>(m)</tt>	Run update or patch on all available packages.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper.py#L401'>package_absent</a>(m,name)</tt>	Remove the packages in name.
<tt style='background-color:#E8E8E8;'> modules.packaging.os. <a href=' /modules/packaging/os/zypper.py#L427'>repo_refresh</a>(m)</tt>	Update the repositories.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.HomebrewCask <a href=' /modules/packaging/os/homebrew_cask.py#L152'>valid_path</a>(cls,path)</tt>	Path must be one of - list of paths.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.HomebrewCask <a href=' /modules/packaging/os/homebrew_cask.py#L177'>valid_brew_path</a>(cls,brew_path)</tt>	Brew_path must be one of - none.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.HomebrewCask <a href=' /modules/packaging/os/homebrew_cask.py#L198'>valid_cask</a>(cls,cask)</tt>	A valid cask is either none or alphanumeric + backslashes.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.HomebrewCask <a href=' /modules/packaging/os/homebrew_cask.py#L210'>valid_state</a>(cls,state)</tt>	A valid state is one of.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.HomebrewCask <a href=' /modules/packaging/os/homebrew_cask.py#L229'>valid_module</a>(cls,module)</tt>	A valid module is an instance of ansiblemodule.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Homebrew <a href=' /modules/packaging/os/homebrew.py#L195'>valid_path</a>(cls,path)</tt>	Path must be one of - list of paths.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Homebrew <a href=' /modules/packaging/os/homebrew.py#L220'>valid_brew_path</a>(cls,brew_path)</tt>	Brew_path must be one of - none.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Homebrew <a href=' /modules/packaging/os/homebrew.py#L241'>valid_package</a>(cls,package)</tt>	A valid package is either none or alphanumeric.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Homebrew <a href=' /modules/packaging/os/homebrew.py#L253'>valid_state</a>(cls,state)</tt>	A valid state is one of.
<tt style='background-color:#E8E8E8;'> modules.packaging.os.Homebrew <a href=' /modules/packaging/os/homebrew.py#L281'>valid_module</a>(cls,module)</tt>	A valid module is an instance of ansiblemodule.
<tt style='background-color:#E8E8E8;'> modules.packaging.language. <a href=' /modules/packaging/language/pear.py#L75'>get_local_version</a>(pear_output)</tt>	Take pear remoteinfo output and get the installed version.
<tt style='background-color:#E8E8E8;'> modules.packaging.language. <a href=' /modules/packaging/language/pear.py#L86'>get_repository_version</a>(pear_output)</tt>	Take pear remote-info output and get the latest version.
<tt style='background-color:#E8E8E8;'> modules.packaging.language. <a href=' /modules/packaging/language/pear.py#L94'>query_package</a>(module,name,state)</tt>	Query the package status in both the local system and the repository.
<tt style='background-color:#E8E8E8;'> modules.packaging.language. <a href=' /modules/packaging/language/pip.py#L254'>_get_packages</a>(module,pip,chdir)</tt>	Return results of pip command to get packages.
<tt style='background-color:#E8E8E8;'> modules.packaging.language. <a href=' /modules/packaging/language/pip.py#L271'>_is_present</a>(name,version,installed_pkgs,pkg_command)</tt>	Return whether or not package is installed.
<tt style='background-color:#E8E8E8;'> modules.packaging.language. <a href=' /modules/packaging/language/pip.py#L357'>_get_package_info</a>(module,package,env)</tt>	This is only needed for special packages which do not show up in pip freeze pip and setuptools fall into this category.
<tt style='background-color:#E8E8E8;'> modules.identity.ipa. <a href=' /modules/identity/ipa/ipa_user.py#L201'>get_user_diff</a>(client,ipa_user,module_user)</tt>	Return the keys of each dict whereas values are different unfortunately the ipa.
<tt style='background-color:#E8E8E8;'> modules.identity.ipa. <a href=' /modules/identity/ipa/ipa_user.py#L231'>get_ssh_key_fingerprint</a>(ssh_key)</tt>	Return the public key fingerprint of a given public ssh key.
<tt style='background-color:#E8E8E8;'> modules.network.eos. <a href=' /modules/network/eos/eos_banner.py#L145'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.ios. <a href=' /modules/network/ios/ios_command.py#L167'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.sros. <a href=' /modules/network/sros/sros_rollback.py#L177'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.dellos10. <a href=' /modules/network/dellos10/dellos10_facts.py#L402'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.netvisor. <a href=' /modules/network/netvisor/pn_trunk.py#L169'>pn_cli</a>(module)</tt>	This method is to generate the cli portion to launch the netvisor cli.
<tt style='background-color:#E8E8E8;'> modules.network.netvisor. <a href=' /modules/network/netvisor/pn_trunk.py#L192'>check_cli</a>(module,cli)</tt>	This method checks for idempotency using the trunk-show command.
<tt style='background-color:#E8E8E8;'> modules.network.netvisor. <a href=' /modules/network/netvisor/pn_trunk.py#L215'>run_cli</a>(module,cli)</tt>	This method executes the cli command on the target node s and returns the output.
<tt style='background-color:#E8E8E8;'> modules.network.netvisor. <a href=' /modules/network/netvisor/pn_trunk.py#L259'>get_command_from_state</a>(state)</tt>	This method gets appropriate command name for the state specified it.
<tt style='background-color:#E8E8E8;'> modules.network.netvisor. <a href=' /modules/network/netvisor/pn_trunk.py#L275'>main</a>()</tt>	This portion is for arguments parsing.
<tt style='background-color:#E8E8E8;'> modules.network.netvisor. <a href=' /modules/network/netvisor/pn_vrouterif.py#L252'>get_nic</a>(module,cli)</tt>	This module checks if vrrp interface can be added if no return vrrp_exists.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpDeviceSshd <a href=' /modules/network/f5/bigip_device_sshd.py#L274'>read</a>()</tt>	Read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpSelfIp <a href=' /modules/network/f5/bigip_selfip.py#L276'>read</a>()</tt>	Read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpSelfIp <a href=' /modules/network/f5/bigip_selfip.py#L322'>verify_services</a>()</tt>	Verifies that a supplied service string has correct format the string format for port lockdown is protocol port.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpSelfIp <a href=' /modules/network/f5/bigip_selfip.py#L368'>fmt_services</a>(services)</tt>	Returns services formatted for consumption by f5-sdk update the big-ip endpoint for services takes different values depending on.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpSelfIp <a href=' /modules/network/f5/bigip_selfip.py#L513'>get_vlans</a>()</tt>	Returns formatted list of vlans the vlan values stored in big-ip are done so using their fully.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpSnatPoolManager <a href=' /modules/network/f5/bigip_snat_pool.py#L199'>format_snat_pool_information</a>(pool)</tt>	Ensure that the pool information is in a standard format the sdk provides information back in a format that may change with.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpVlan <a href=' /modules/network/f5/bigip_vlan.py#L193'>read</a>()</tt>	Read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpGtmDatacenter <a href=' /modules/network/f5/bigip_gtm_datacenter.py#L178'>read</a>()</tt>	Read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpiRule <a href=' /modules/network/f5/bigip_irule.py#L183'>read</a>()</tt>	Read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpRouteDomain <a href=' /modules/network/f5/bigip_routedomain.py#L233'>read</a>()</tt>	Read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding.
<tt style='background-color:#E8E8E8;'> modules.network.f5.BigIpDeviceNtp <a href=' /modules/network/f5/bigip_device_ntp.py#L143'>read</a>()</tt>	Read information and transform it the values that are returned by big-ip in the f5-sdk can have encoding.
<tt style='background-color:#E8E8E8;'> modules.network.iosxr. <a href=' /modules/network/iosxr/_iosxr_template.py#L110'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.ordnance. <a href=' /modules/network/ordnance/ordnance_config.py#L323'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.junos. <a href=' /modules/network/junos/junos_facts.py#L210'>main</a>()</tt>	Main entry point for ansiblemodule.
<tt style='background-color:#E8E8E8;'> modules.network.ovs. <a href=' /modules/network/ovs/openvswitch_db.py#L106'>map_obj_to_commands</a>(want,have,module)</tt>	Define ovs-vsctl command to meet desired state.
<tt style='background-color:#E8E8E8;'> modules.network.ovs. <a href=' /modules/network/ovs/openvswitch_db.py#L170'>main</a>()</tt>	Entry point for ansible module.
<tt style='background-color:#E8E8E8;'> modules.network.openswitch. <a href=' /modules/network/openswitch/_ops_template.py#L155'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.asa. <a href=' /modules/network/asa/asa_config.py#L300'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/_cl_bridge.py#L267'>add_glob_to_array</a>(_bondmems)</tt>	Goes through each bond member if it sees a dash add glob.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/_cl_bridge.py#L291'>build_desired_iface_config</a>(module)</tt>	Take parameters defined and build ifupdown2 compatible hash.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/_cl_bridge.py#L314'>config_dict_changed</a>(module)</tt>	Return true if 'config' dict in hash is different.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/_cl_bridge.py#L324'>config_changed</a>(module)</tt>	Returns true if config has changed.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/_cl_ports.py#L164'>write_to_ports_conf</a>(module)</tt>	Use tempfile to first write out config in temp file then write to actual location.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/nclu.py#L105'>command_helper</a>(module,command,errmsg)</tt>	Run a command catch any nclu errors.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/nclu.py#L113'>check_pending</a>(module)</tt>	Check the pending diff of the nclu buffer.
<tt style='background-color:#E8E8E8;'> modules.network.cumulus. <a href=' /modules/network/cumulus/_cl_bridge.py#L267'>add_glob_to_array</a>(_bridgemems)</tt>	Goes through each bridge member if it sees a dash add glob.
<tt style='background-color:#E8E8E8;'> modules.network.dellos9. <a href=' /modules/network/dellos9/dellos9_command.py#L185'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.panos. <a href=' /modules/network/panos/panos_security_policy.py#L354'>_commit</a>(device,device_group)</tt>	:param device either firewall or panorama.
<tt style='background-color:#E8E8E8;'> modules.network.dellos6. <a href=' /modules/network/dellos6/dellos6_command.py#L181'>main</a>()</tt>	Main entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_feature.py#L140'>validate_feature</a>(module,mode)</tt>	Some features may need to be mapped due to inconsistency.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_interface.py#L185'>get_interface_type</a>(interface)</tt>	Gets the type of interface args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_switchport.py#L192'>get_interface_mode</a>(interface,module)</tt>	Gets current mode of interface layer2 or layer3 args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_switchport.py#L226'>interface_is_portchannel</a>(interface,module)</tt>	Checks to see if an interface is part of portchannel bundle args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_switchport.py#L252'>get_switchport</a>(port,module)</tt>	Gets current config of l2 switchport args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_switchport.py#L323'>get_switchport_config_commands</a>(interface,existing,proposed,module)</tt>	Gets commands required to config a given switchport interface.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_switchport.py#L371'>is_switchport_default</a>(existing)</tt>	Determines if switchport has a default config based on mode args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_vlan.py#L130'>numerical_sort</a>(string_int_list)</tt>	Sorts list of strings/integers that are digits in numerical order.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_command.py#L199'>main</a>()</tt>	Entry point for module execution.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_interface.py#L154'>is_default_interface</a>(interface,module)</tt>	Checks to see if interface exists and if it is a default config args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_interface.py#L212'>get_manual_interface_attributes</a>(interface,module)</tt>	Gets admin state and description of a svi interface hack due to api.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_interface.py#L244'>get_interface</a>(intf,module)</tt>	Gets current config/state of interface args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_interface.py#L368'>get_interfaces_dict</a>(module)</tt>	Gets all active interfaces on a given switch returns.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_interface.py#L401'>normalize_interface</a>(if_name)</tt>	Return the normalized interface name.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_interface.py#L457'>get_interface_config_commands</a>(interface,intf,existing)</tt>	Generates list of commands to configure on device args.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_install_os.py#L137'>get_boot_options</a>(module)</tt>	Get current boot variables like system image and kickstart image.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_install_os.py#L170'>set_boot_options</a>(module,image_name,kickstart)</tt>	Set boot variables like system image and kickstart image.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_vlan.py#L130'>numerical_sort</a>(iterable)</tt>	Sort list of strings vlan ids that are digits in numerical order.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_vlan.py#L156'>get_vlan_config_commands</a>(vlan,vid)</tt>	Build command list required for vlan configuration.
<tt style='background-color:#E8E8E8;'> modules.network.nxos. <a href=' /modules/network/nxos/nxos_vlan.py#L223'>get_vlan</a>(vlanid,module)</tt>	Get instance of vlan as a dictionary.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/unarchive.py#L173'>crc32</a>(path)</tt>	Return a crc32 checksum of a file.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/unarchive.py#L177'>shell_escape</a>(string)</tt>	Quote meta-characters in the args for the unix shell.
<tt style='background-color:#E8E8E8;'> modules.files.ZipArchive <a href=' /modules/files/unarchive.py#L199'>_permstr_to_octal</a>(modestr,umask)</tt>	Convert a unix permission string rw-r--r-- into a mode 0644.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/acl.py#L156'>split_entry</a>(entry)</tt>	Splits entry and ensures normalized return.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/acl.py#L186'>build_entry</a>(etype,entity,permissions,use_nfsv4_acls)</tt>	Builds and returns an entry string does not include the permissions bit if they are not provided.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/acl.py#L196'>build_command</a>(module,mode,path,follow)</tt>	Builds and returns a getfacl/setfacl command.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/acl.py#L230'>acl_changed</a>(module,cmd)</tt>	Returns true if the provided command affects the existing acls false otherwise.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/assemble.py#L135'>assemble_from_fragments</a>(src_path,delimiter,compiled_regexp,ignore_hidden)</tt>	Assemble a file from a directory of fragments.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/copy.py#L225'>split_pre_existing_dir</a>(dirname)</tt>	Return the first pre-existing directory and a list of the new directories that will be created.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/copy.py#L240'>adjust_recursive_directory_permissions</a>(pre_existing_dir,new_directory_list,module,directory_args)</tt>	Walk the new directories list and make sure that permissions are as we would expect.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/file.py#L146'>get_state</a>(b_path)</tt>	Find out current state.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/find.py#L189'>pfilter</a>(f,patterns,use_regex)</tt>	Filter using glob patterns.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/find.py#L209'>agefilter</a>(st,now,age,timestamp)</tt>	Filter files older than age.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/find.py#L219'>sizefilter</a>(st,size)</tt>	Filter files greater than size.
<tt style='background-color:#E8E8E8;'> modules.files. <a href=' /modules/files/find.py#L229'>contentfilter</a>(fsname,pattern)</tt>	Filter files which contain the given expression.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L223'>execute</a>(cmd,timeout,capture_output)</tt>	Executes a haproxy command by sending a message to a haproxy's local unix socket and waiting up to 'timeout' milliseconds for the response.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L242'>capture_command_output</a>(cmd,output)</tt>	Capture the output for a command.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L253'>discover_all_backends</a>()</tt>	Discover all entries with svname = 'backend' and return a list of their corresponding.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L262'>execute_for_backends</a>(cmd,pxname,svname,wait_for_status)</tt>	Run some command on the specified backends if no backends are provided they will.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L284'>get_state_for</a>(pxname,svname)</tt>	Find the state of specific services when pxname is not set get all backends for a specific host.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L299'>wait_until_status</a>(pxname,svname,status)</tt>	Wait for a service to reach the specified status try retries times.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L317'>enabled</a>(host,backend,weight)</tt>	Enabled action marks server to up and checks are re-enabled also supports to get current weight for server default and.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L328'>disabled</a>(host,backend,shutdown_sessions)</tt>	Disabled action marks server to down for maintenance in this mode no more checks will be.
<tt style='background-color:#E8E8E8;'> modules.net_tools.HAProxy <a href=' /modules/net_tools/haproxy.py#L339'>act</a>()</tt>	Figure out what you want to do from ansible and then do it.
<tt style='background-color:#E8E8E8;'> modules.net_tools.basics. <a href=' /modules/net_tools/basics/uri.py#L313'>absolute_location</a>(url,location)</tt>	Attempts to create an absolute url based on initial url and next url specifically in the case of a location header.
<tt style='background-color:#E8E8E8;'> modules.net_tools.basics. <a href=' /modules/net_tools/basics/get_url.py#L240'>url_get</a>(module,url,dest,use_proxy)</tt>	Download data from the url and store in a temporary file.
<tt style='background-color:#E8E8E8;'> modules.net_tools.basics. <a href=' /modules/net_tools/basics/get_url.py#L288'>extract_filename_from_headers</a>(headers)</tt>	Extracts a filename from the given dict of http headers.
<tt style='background-color:#E8E8E8;'> modules.net_tools.ldap.LdapEntry <a href=' /modules/net_tools/ldap/ldap_entry.py#L195'>_load_attrs</a>()</tt>	Turn attribute's value to array.
<tt style='background-color:#E8E8E8;'> modules.net_tools.ldap.LdapEntry <a href=' /modules/net_tools/ldap/ldap_entry.py#L210'>add</a>()</tt>	If self dn does not exist returns a callable that will add it.
<tt style='background-color:#E8E8E8;'> modules.net_tools.ldap.LdapEntry <a href=' /modules/net_tools/ldap/ldap_entry.py#L223'>delete</a>()</tt>	If self dn exists returns a callable that will delete it.
<tt style='background-color:#E8E8E8;'> modules.net_tools.ldap.LdapAttr <a href=' /modules/net_tools/ldap/ldap_attr.py#L273'>_is_value_present</a>(value)</tt>	True if the target attribute has the given value.
<tt style='background-color:#E8E8E8;'> modules.net_tools.ldap.LdapAttr <a href=' /modules/net_tools/ldap/ldap_attr.py#L283'>_is_value_absent</a>(value)</tt>	True if the target attribute doesn't have the given value.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMVirtualMachine <a href=' /modules/cloud/azure/azure_rm_virtualmachine.py#L879'>get_vm</a>()</tt>	Get the vm with expanded instanceview.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMVirtualMachine <a href=' /modules/cloud/azure/azure_rm_virtualmachine.py#L891'>serialize_vm</a>(vm)</tt>	Convert a virtualmachine object to dict.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMVirtualMachine <a href=' /modules/cloud/azure/azure_rm_virtualmachine.py#L1124'>vm_size_is_valid</a>()</tt>	Validate self vm_size against the list of virtual machine sizes available for the account and location.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMVirtualMachine <a href=' /modules/cloud/azure/azure_rm_virtualmachine.py#L1139'>create_default_storage_account</a>()</tt>	Create a default storage account <vm name>xxxx where xxxx is a random number if <vm name>xxxx exists use it.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMVirtualMachine <a href=' /modules/cloud/azure/azure_rm_virtualmachine.py#L1192'>create_default_nic</a>()</tt>	Create a default network interface <vm name>01 requires an existing virtual network.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure. <a href=' /modules/cloud/azure/azure_rm_virtualnetwork.py#L154'>virtual_network_to_dict</a>(vnet)</tt>	Convert a virtual network object to a dict.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMStorageAccount <a href=' /modules/cloud/azure/azure_rm_storageaccount.py#L425'>account_has_blob_containers</a>()</tt>	If there are blob containers then there are likely vms depending on this account and it should not be deleted.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure. <a href=' /modules/cloud/azure/azure_rm_securitygroup.py#L354'>validate_rule</a>(rule,rule_type)</tt>	Apply defaults to a rule dictionary and check that all values are valid.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure. <a href=' /modules/cloud/azure/azure_rm_securitygroup.py#L437'>create_rule_instance</a>(rule)</tt>	Create an instance of securityrule from a dict.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure. <a href=' /modules/cloud/azure/azure_rm_securitygroup.py#L461'>create_rule_dict_from_obj</a>(rule)</tt>	Create a dict from an instance of a securityrule.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMDeploymentManager <a href=' /modules/cloud/azure/azure_rm_deployment.py#L476'>deploy_template</a>()</tt>	Deploy the targeted template and parameters.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMDeploymentManager <a href=' /modules/cloud/azure/azure_rm_deployment.py#L531'>destroy_resource_group</a>()</tt>	Destroy the targeted resource group.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure.AzureRMDeploymentManager <a href=' /modules/cloud/azure/azure_rm_deployment.py#L545'>resource_group_exists</a>(resource_group)</tt>	Return true/false based on existence of requested resource group.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure. <a href=' /modules/cloud/azure/azure.py#L312'>get_ssh_certificate_tokens</a>(module,ssh_cert_path)</tt>	Returns the sha1 fingerprint and a base64-encoded pkcs12 version of the certificate.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure. <a href=' /modules/cloud/azure/azure.py#L330'>create_virtual_machine</a>(module,azure)</tt>	Create new virtual machine.
<tt style='background-color:#E8E8E8;'> modules.cloud.azure. <a href=' /modules/cloud/azure/azure.py#L446'>terminate_virtual_machine</a>(module,azure)</tt>	Terminates a virtual machine.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L258'>pubnub_user</a>(module)</tt>	Create and configure user model if it possible.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L288'>pubnub_account</a>(module,user)</tt>	Create and configure account if it is possible.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L319'>pubnub_application</a>(module,account)</tt>	Retrieve reference on target application from account model.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L356'>pubnub_keyset</a>(module,account,application)</tt>	Retrieve reference on target keyset from application model.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L387'>pubnub_block</a>(module,account,keyset)</tt>	Retrieve reference on target keyset from application model.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L437'>pubnub_event_handler</a>(block,data)</tt>	Retrieve reference on target event handler from application model.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L483'>_failure_title_from_exception</a>(exception)</tt>	Compose human-readable title for module error title.
<tt style='background-color:#E8E8E8;'> modules.cloud.pubnub. <a href=' /modules/cloud/pubnub/pubnub_blocks.py#L530'>_content_of_file_at_path</a>(path)</tt>	Read file content.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.LibvirtConnection <a href=' /modules/cloud/misc/virt.py#L177'>find_vm</a>(vmid)</tt>	Extra bonus feature vmid = -1 returns a list of everything.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L362'>shutdown</a>(vmid)</tt>	Make the machine with the given vmid stop running whatever that takes.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L369'>pause</a>(vmid)</tt>	Pause the machine with the given vmid.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L375'>unpause</a>(vmid)</tt>	Unpause the machine with the given vmid.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L381'>create</a>(vmid)</tt>	Start the machine via the given vmid.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L387'>start</a>(vmid)</tt>	Start the machine via the given id/name.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L393'>destroy</a>(vmid)</tt>	Pull the virtual power from the virtual domain giving it virtually no time to virtually shut down.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L398'>undefine</a>(vmid)</tt>	Stop a domain and then wipe it from the face of the earth (delete disk/config file).
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L404'>status</a>(vmid)</tt>	Return a state suitable for server consumption aka codes py values not xm output.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L411'>get_xml</a>(vmid)</tt>	Receive a vm id as input.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L420'>get_maxVcpus</a>(vmid)</tt>	Gets the max number of vcpus on a guest.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L428'>get_max_memory</a>(vmid)</tt>	Gets the max memory on a guest.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc.Virt <a href=' /modules/cloud/misc/virt.py#L436'>define</a>(xml)</tt>	Define a guest with the given xml.
<tt style='background-color:#E8E8E8;'> modules.cloud.misc. <a href=' /modules/cloud/misc/xenserver_facts.py#L128'>change_keys</a>(recs,key,filter_func)</tt>	Take a xapi dict and make the keys the value of recs[ref][key].
<tt style='background-color:#E8E8E8;'> modules.cloud.misc. <a href=' /modules/cloud/misc/xenserver_facts.py#L146'>get_host</a>(session)</tt>	Get the host.
<tt style='background-color:#E8E8E8;'> modules.cloud.ovirt. <a href=' /modules/cloud/ovirt/ovirt_disks.py#L243'>_search_by_lun</a>(disks_service,lun_id)</tt>	Find disk by lun id.
<tt style='background-color:#E8E8E8;'> modules.cloud.ovirt.AffinityGroupsModule <a href=' /modules/cloud/ovirt/ovirt_affinity_groups.py#L165'>update_vms</a>(affinity_group)</tt>	This method iterate via the affinity vm assignnments and datech the vms which should not be attached to affinity and attach vms which should be.
<tt style='background-color:#E8E8E8;'> modules.cloud.ovirt.VmsModule <a href=' /modules/cloud/ovirt/ovirt_vms.py#L525'>__get_template_with_version</a>()</tt>	Ovirt/rhv in version 4 1 doesn't support search by template+version_number.
<tt style='background-color:#E8E8E8;'> modules.cloud.ovirt.VmsModule <a href=' /modules/cloud/ovirt/ovirt_vms.py#L734'>wait_for_down</a>(vm)</tt>	This function will first wait for the status down of the vm.
<tt style='background-color:#E8E8E8;'> modules.cloud.ovirt.VmsModule <a href=' /modules/cloud/ovirt/ovirt_vms.py#L808'>__get_vnic_profile_id</a>(nic)</tt>	Return vnic profile id looked up by it's name because there can be more vnic profiles with same name other criteria of filter is cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.LoginManager <a href=' /modules/cloud/docker/docker_login.py#L175'>login</a>()</tt>	Log into the registry with provided username/password on success update the config.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.LoginManager <a href=' /modules/cloud/docker/docker_login.py#L205'>logout</a>()</tt>	Log out of the registry on success update the config file.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.LoginManager <a href=' /modules/cloud/docker/docker_login.py#L230'>create_config_file</a>(path)</tt>	Create a config file with a json blob containing an auths key.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.LoginManager <a href=' /modules/cloud/docker/docker_login.py#L252'>update_config_file</a>()</tt>	If the authorization not stored in the config file or reauthorize is true update the config file with the new authorization.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L816'>update_parameters</a>()</tt>	Returns parameters used to update a container.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L839'>create_parameters</a>()</tt>	Returns parameters used to create a container.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L891'>_get_mounts</a>()</tt>	Return a list of container mounts.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L914'>_host_config</a>()</tt>	Returns parameters used to create a hostconfig object.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L970'>_parse_publish_ports</a>()</tt>	Parse ports from docker cli syntax.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L1007'>_get_volume_binds</a>(volumes)</tt>	Extract host bindings if any from list of volume mapping strings.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L1032'>_parse_exposed_ports</a>(published_ports)</tt>	Parse exposed ports from docker cli-style ports syntax.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L1067'>_parse_links</a>(links)</tt>	Turn links into a dictionary.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L1084'>_parse_ulimits</a>()</tt>	Turn ulimits into an array of ulimit objects.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L1107'>_parse_log_config</a>()</tt>	Create a logconfig object.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.TaskParameters <a href=' /modules/cloud/docker/docker_container.py#L1127'>_get_environment</a>()</tt>	If environment file is combined with explicit environment variables the explicit environment variables take precedence.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.Container <a href=' /modules/cloud/docker/docker_container.py#L1189'>has_different_configuration</a>(image)</tt>	Diff parameters vs existing container config returns tuple (true | false list of differences).
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.Container <a href=' /modules/cloud/docker/docker_container.py#L1321'>_compare_dictionary_lists</a>(list_a,list_b)</tt>	If all of list_a exists in list_b return true.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.Container <a href=' /modules/cloud/docker/docker_container.py#L1336'>_compare_dicts</a>(dict_a,dict_b)</tt>	If dict_a in dict_b return true.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.Container <a href=' /modules/cloud/docker/docker_container.py#L1358'>has_different_resource_limits</a>()</tt>	Diff parameters and container resource limits.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.Container <a href=' /modules/cloud/docker/docker_container.py#L1393'>has_network_differences</a>()</tt>	Check if the container is connected to requested networks with expected options links aliases ipv4 ipv6.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.Container <a href=' /modules/cloud/docker/docker_container.py#L1449'>has_extra_networks</a>()</tt>	Check if the container is connected to non-requested networks.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.Container <a href=' /modules/cloud/docker/docker_container.py#L1558'>_get_image_binds</a>(volumes)</tt>	Convert array of binds to array of strings with format host_path container_path mode.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ContainerManager <a href=' /modules/cloud/docker/docker_container.py#L1752'>_get_container</a>(container)</tt>	Expects container id or name returns a container object.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image.py#L304'>present</a>()</tt>	Handles state = 'present', which includes building loading or pulling an image depending on user provided parameters.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image.py#L353'>absent</a>()</tt>	Handles state = 'absent', which removes an image.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image.py#L374'>archive_image</a>(name,tag)</tt>	Archive an image to a tar file called when archive_path is passed.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image.py#L411'>push_image</a>(name,tag)</tt>	If the name of the image contains a repository path then push the image.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image.py#L452'>tag_image</a>(name,tag,repository,force)</tt>	Tag an image into a repository.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image.py#L492'>build_image</a>()</tt>	Build an image.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image.py#L540'>load_image</a>()</tt>	Load an image from a tar archive.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ImageManager <a href=' /modules/cloud/docker/docker_image_facts.py#L192'>get_facts</a>()</tt>	Lookup and inspect each image name found in the names parameter.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerNetworkManager <a href=' /modules/cloud/docker/docker_network.py#L231'>has_different_config</a>(net)</tt>	Evaluates an existing network and returns a tuple containing a boolean indicating if the configuration is different and a list of differences.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L616'>normalize_image</a>(image)</tt>	Normalize a docker image name to include the implied :latest tag.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L624'>is_running</a>(container)</tt>	Return true if an inspected container is in a state we consider "running ".
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L661'>check_dependencies</a>(module)</tt>	Ensure docker-py >= 0 3 0 is installed and call module fail_json with a.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L857'>_check_capabilities</a>()</tt>	Create a list of available capabilities.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L867'>ensure_capability</a>(capability,fail)</tt>	Some of the functionality this ansible module implements are only available in newer versions of docker.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L896'>get_environment</a>(env,env_file)</tt>	If environment files are combined with explicit environment variables the explicit environment variables will override the key from the env file.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L915'>get_links</a>(links)</tt>	Parse the links passed if a link is specified without an alias then just create the alias of the same name as the link.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L930'>get_exposed_ports</a>(expose_list)</tt>	Parse the ports and protocols (tcp/udp) to expose in the docker-py create_container call from the docker cli-style syntax.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L948'>get_start_params</a>()</tt>	Create start params.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L1021'>create_host_config</a>()</tt>	Create hostconfig object.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L1028'>get_port_bindings</a>(ports)</tt>	Parse the ports string into a port bindings dict for the start_container call.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L1070'>get_summary_message</a>()</tt>	Generate a message that briefly describes the actions taken by this task in english.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L1092'>get_reload_reason_message</a>()</tt>	Generate a message describing why any reloaded containers were reloaded.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L1148'>get_differing_containers</a>()</tt>	Inspect all matching running containers and return those that were started with parameters that differ from the ones that are provided.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.DockerManager <a href=' /modules/cloud/docker/_docker.py#L1517'>get_deployed_containers</a>()</tt>	Return any matching containers that are already present.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ContainerSet <a href=' /modules/cloud/docker/_docker.py#L1728'>refresh</a>()</tt>	Update our view of the matching containers from the docker daemon.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker.ContainerSet <a href=' /modules/cloud/docker/_docker.py#L1737'>notice_changed</a>(containers)</tt>	Record a collection of containers as "changed".
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L1745'>present</a>(manager,containers,count,name)</tt>	Ensure that exactly count matching containers exist in any state.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L1771'>started</a>(manager,containers,count,name)</tt>	Ensure that exactly count matching containers exist and are running.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L1793'>reloaded</a>(manager,containers,count,name)</tt>	Ensure that exactly count matching containers exist and are running.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L1808'>restarted</a>(manager,containers,count,name)</tt>	Ensure that exactly count matching containers exist and are running.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L1825'>stopped</a>(manager,containers,count,name)</tt>	Stop any matching containers that are running.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L1833'>killed</a>(manager,containers,count,name)</tt>	Kill any matching containers that are running.
<tt style='background-color:#E8E8E8;'> modules.cloud.docker. <a href=' /modules/cloud/docker/_docker.py#L1841'>absent</a>(manager,containers,count,name)</tt>	Stop and remove any matching containers.
<tt style='background-color:#E8E8E8;'> modules.cloud.vmware. <a href=' /modules/cloud/vmware/vmware_vmotion.py#L83'>migrate_vm</a>(vm_object,host_object)</tt>	Migrate virtual machine and return the task.
<tt style='background-color:#E8E8E8;'> modules.cloud.vmware. <a href=' /modules/cloud/vmware/vmware_guest.py#L1221'>get_obj</a>(content,vimtype,name)</tt>	Return an object by name if name is none the.
<tt style='background-color:#E8E8E8;'> modules.cloud.vmware.PyVmomiHelper <a href=' /modules/cloud/vmware/vmware_guest.py#L486'>set_powerstate</a>(vm,state,force)</tt>	Set the power status for a vm determined by the current and requested states.
<tt style='background-color:#E8E8E8;'> modules.cloud.vmware. <a href=' /modules/cloud/vmware/vsphere_copy.py#L108'>vmware_path</a>(datastore,datacenter,path)</tt>	Constructs a url path that vsphere accepts reliably.
<tt style='background-color:#E8E8E8;'> modules.cloud.vmware. <a href=' /modules/cloud/vmware/vsphere_guest.py#L1520'>power_state</a>(vm,state,force)</tt>	Correctly set the power status for a vm determined by the current and requested states.
<tt style='background-color:#E8E8E8;'> modules.cloud.vmware. <a href=' /modules/cloud/vmware/vsphere_guest.py#L1563'>gather_facts</a>(vm)</tt>	Gather facts for vm directly from vsphere.
<tt style='background-color:#E8E8E8;'> modules.cloud.vmware. <a href=' /modules/cloud/vmware/vsphere_guest.py#L1648'>config_check</a>(name,passed,default,module)</tt>	Checks that the dict passed for vm configuration matches the required.
<tt style='background-color:#E8E8E8;'> modules.cloud.dimensiondata.DimensionDataNetworkModule <a href=' /modules/cloud/dimensiondata/dimensiondata_network.py#L138'>__init__</a>()</tt>	Create a new dimension data network module.
<tt style='background-color:#E8E8E8;'> modules.cloud.cloudstack.CloudStackFacts <a href=' /modules/cloud/cloudstack/cs_facts.py#L168'>_get_dhcp_lease_file</a>()</tt>	Return the path of the lease file.
<tt style='background-color:#E8E8E8;'> modules.cloud.cloudstack.CloudStackFacts <a href=' /modules/cloud/cloudstack/cs_facts.py#L183'>_get_api_ip</a>()</tt>	Return the ip of the dhcp server.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc. <a href=' /modules/cloud/lxc/lxc_container.py#L554'>create_script</a>(command)</tt>	Write out a script onto a target.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L604'>__init__</a>(module)</tt>	Management of lxc containers via ansible.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L623'>_roundup</a>(num)</tt>	Return a rounded floating point number.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L638'>_container_exists</a>(container_name,lxc_path)</tt>	Check if a container exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L652'>_add_variables</a>(variables_dict,build_command)</tt>	Return a command list with all found options.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L672'>_get_vars</a>(variables)</tt>	Return a dict of all variables as found within the module.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L693'>_run_command</a>(build_command,unsafe_shell)</tt>	Return information from running an ansible command.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L711'>_config</a>()</tt>	Configure an lxc container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L775'>_container_create_clone</a>()</tt>	Clone a new lxc container from an existing container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L837'>_create</a>()</tt>	Create a new lxc container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L898'>_container_data</a>()</tt>	Returns a dict of container information.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L913'>_unfreeze</a>()</tt>	Unfreeze a container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L925'>_get_state</a>()</tt>	Return the state of a container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L939'>_execute_command</a>()</tt>	Execute a shell command.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L953'>_container_startup</a>(timeout)</tt>	Ensure a container is started.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L980'>_check_archive</a>()</tt>	Create a compressed archive of a container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L991'>_check_clone</a>()</tt>	Create a compressed archive of a container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1008'>_destroyed</a>(timeout)</tt>	Ensure a container is destroyed.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1045'>_frozen</a>(count)</tt>	Ensure a container is frozen.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1082'>_restarted</a>(count)</tt>	Ensure a container is restarted.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1115'>_stopped</a>(count)</tt>	Ensure a container is stopped.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1145'>_started</a>(count)</tt>	Ensure a container is started.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1188'>_get_lxc_vg</a>()</tt>	Return the name of the volume group used in lxc.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1206'>_lvm_lv_list</a>()</tt>	Return a list of all lv in a current vg.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1225'>_get_vg_free_pe</a>(vg_name)</tt>	Return the available size of a given vg.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1254'>_get_lv_size</a>(lv_name)</tt>	Return the available size of a given lv.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1285'>_lvm_snapshot_create</a>(source_lv,snapshot_name,snapshot_size_gb)</tt>	Create an lvm snapshot.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1329'>_lvm_lv_mount</a>(lv_name,mount_point)</tt>	Mount an lv.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1354'>_create_tar</a>(source_dir)</tt>	Create an archive of a given source_dir to output_path.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1406'>_lvm_lv_remove</a>(lv_name)</tt>	Remove an lv.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1428'>_rsync_data</a>(container_path,temp_dir)</tt>	Sync the container directory to the temp directory.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1465'>_unmount</a>(mount_point)</tt>	Unmount a file system.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1485'>_overlayfs_mount</a>(lowerdir,upperdir,mount_point)</tt>	Mount an lv.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1512'>_container_create_tar</a>()</tt>	Create a tar archive from an lxc container.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1627'>failure</a>()</tt>	Return a failure when running an ansible command.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc.LxcContainerManagement <a href=' /modules/cloud/lxc/lxc_container.py#L1637'>run</a>()</tt>	Run the main method.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxc. <a href=' /modules/cloud/lxc/lxc_container.py#L1656'>main</a>()</tt>	Ansible main module.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_server_actions.py#L122'>_system_state_change</a>(module,project_quota_output)</tt>	Determine if changes are required to the current project quota.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_subnet.py#L203'>_needs_update</a>(module,secgroup)</tt>	Check for differences in the updatable values.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_subnet.py#L203'>_needs_update</a>(module,port,cloud)</tt>	Check for differences in the updatable values.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_subnet.py#L203'>_needs_update</a>(cloud,module,router,network)</tt>	Decide if the given router needs an update.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_server_actions.py#L122'>_system_state_change</a>(cloud,module,router,network)</tt>	Check if the system state would be changed.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_server_actions.py#L122'>_system_state_change</a>(state,device)</tt>	Check if system state would change.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_security_group_rule.py#L185'>_ports_match</a>(protocol,module_min,module_max,rule_min)</tt>	Capture the complex port matching logic.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_security_group_rule.py#L231'>_find_matching_rule</a>(module,secgroup,remotegroup)</tt>	Find a rule in the group that matches the module parameters.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_server_actions.py#L105'>_wait</a>(timeout,cloud,server,action)</tt>	Wait for the server to reach the desired state for the given action.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_server_actions.py#L122'>_system_state_change</a>(action,status)</tt>	Check if system state would change.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_subnet.py#L178'>_can_update</a>(subnet,module,cloud)</tt>	Check for differences in non-updatable values.
<tt style='background-color:#E8E8E8;'> modules.cloud.openstack. <a href=' /modules/cloud/openstack/os_subnet.py#L203'>_needs_update</a>(subnet,module,cloud)</tt>	Check for differences in the updatable values.
<tt style='background-color:#E8E8E8;'> modules.cloud.packet. <a href=' /modules/cloud/packet/packet_device.py#L250'>serialize_device</a>(device)</tt>	Standard represenation for a device as returned by various tasks : {.
<tt style='background-color:#E8E8E8;'> modules.cloud.univention. <a href=' /modules/cloud/univention/udm_dns_zone.py#L122'>convert_time</a>(time)</tt>	Convert a time in seconds into the biggest unit.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_img.py#L139'>create_image</a>(gce,name,module)</tt>	Create an image with the specified name.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_img.py#L182'>delete_image</a>(gce,name,module)</tt>	Delete a specific image resource by name.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_snapshot.py#L145'>find_snapshot</a>(volume,name)</tt>	Check if there is a snapshot already created with the given name for the passed in volume.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_zone.py#L162'>create_zone</a>(module,gcdns,zone)</tt>	Creates a new google cloud dns zone.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_zone.py#L223'>remove_zone</a>(module,gcdns,zone)</tt>	Removes an existing google cloud dns zone.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L500'>_get_zone</a>(gcdns,zone_name)</tt>	Gets the zone object for a given domain name.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L537'>_sanity_check</a>(module)</tt>	Run sanity checks that don't depend on info from the zone/record.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L296'>_check_params</a>(params,field_list)</tt>	Helper to validate params.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L326'>_validate_autoscaling_params</a>(params)</tt>	Validate that the minimum configuration is present for autoscaling.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L375'>_validate_named_port_params</a>(params)</tt>	Validate the named ports parameters.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L407'>_get_instance_list</a>(mig,field,filter_list)</tt>	Helper to grab field from instances response.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L430'>_gen_gce_as_policy</a>(as_params)</tt>	Take autoscaler params and generate gce-compatible policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L461'>create_autoscaler</a>(gce,mig,params)</tt>	Create a new autoscaler for a mig.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L486'>update_autoscaler</a>(gce,autoscaler,params)</tt>	Update an autoscaler.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L514'>delete_autoscaler</a>(autoscaler)</tt>	Delete an autoscaler does not affect mig.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L530'>get_autoscaler</a>(gce,name,zone)</tt>	Get an autoscaler from gce.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L556'>create_mig</a>(gce,params)</tt>	Create a new managed instance group.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L585'>delete_mig</a>(mig)</tt>	Delete a managed instance group all vms in that mig are also deleted ".
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L607'>recreate_instances_in_mig</a>(mig)</tt>	Recreate the instances for a managed instance group.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L628'>resize_mig</a>(mig,size)</tt>	Resize a managed instance group.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L652'>get_mig</a>(gce,name,zone)</tt>	Get a managed instance group from gce.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_mig.py#L678'>update_named_ports</a>(mig,named_ports)</tt>	Set the named ports on a managed instance group.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gc_storage.py#L254'>transform_headers</a>(headers)</tt>	Boto url-encodes values unless we convert the value to str, so doing this prevents 'max-age=100000' from being converted to "max-age%3d100000".
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcpubsub_facts.py#L103'>list_func</a>(data,member)</tt>	Used for state=list.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L366'>create_record</a>(module,gcdns,zone,record)</tt>	Creates or overwrites a resource record.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L458'>remove_record</a>(module,gcdns,record)</tt>	Remove a resource record.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L487'>_get_record</a>(gcdns,zone,record_type,record_name)</tt>	Gets the record object for a given fqdn.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L500'>_get_zone</a>(gcdns,zone_name,zone_id)</tt>	Gets the zone object for a given domain name.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L524'>_records_match</a>(old_ttl,old_record_data,new_ttl,new_record_data)</tt>	Checks to see if original and new ttl and values match.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcdns_record.py#L624'>_additional_sanity_checks</a>(module,zone)</tt>	Run input sanity checks that depend on info from the zone/record.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcp_backend_service.py#L208'>_validate_params</a>(params)</tt>	Validate backend_service params.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcp_backend_service.py#L233'>_validate_backend_params</a>(backends)</tt>	Validate configuration for backends.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcp_backend_service.py#L266'>get_backend_service</a>(gce,name)</tt>	Get a backend service from gce.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcp_backend_service.py#L295'>create_backend_service</a>(gce,params)</tt>	Create a new backend service.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcp_backend_service.py#L336'>delete_backend_service</a>(bes)</tt>	Delete a backend service the instance groups are not destroyed.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcpubsub.py#L216'>pull_messages</a>(pull_params,sub)</tt>	:rtype tuple output changed.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_tag.py#L133'>_union_items</a>(baselist,comparelist)</tt>	Combine two lists removing duplicates.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_tag.py#L137'>_intersect_items</a>(baselist,comparelist)</tt>	Return matching items in both lists.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_tag.py#L141'>_get_changed_items</a>(baselist,comparelist)</tt>	Return changed items as they relate to baselist.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_tag.py#L145'>modify_tags</a>(gce,module,node,tags)</tt>	Modify tags on an instance.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_eip.py#L112'>get_address</a>(gce,name,region)</tt>	Get an address from gce.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_eip.py#L131'>create_address</a>(gce,params)</tt>	Create a new address.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_eip.py#L156'>delete_address</a>(address)</tt>	Delete an address.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_net.py#L284'>format_allowed_section</a>(allowed)</tt>	Format each section of the allowed list.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_net.py#L302'>format_allowed</a>(allowed)</tt>	Format the 'allowed' value so that it is gce compatible.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_net.py#L313'>sorted_allowed_list</a>(allowed_list)</tt>	Sort allowed_list (output of format_allowed) by protocol and port.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_instance_template.py#L230'>get_info</a>(inst)</tt>	Retrieves instance template information.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_instance_template.py#L240'>create_instance_template</a>(module,gce)</tt>	Create an instance template.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_instance_template.py#L413'>delete_instance_template</a>(module,gce)</tt>	Delete instance template.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce_instance_template.py#L445'>module_controller</a>(module,gce)</tt>	Control module state parameter.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gcspanner.py#L153'>instance_update</a>(instance)</tt>	Call update method on spanner client.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce.py#L323'>get_instance_info</a>(inst)</tt>	Retrieves instance information from an instance object and returns it as a dictionary.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce.py#L370'>create_instances</a>(module,gce,instance_names,number)</tt>	Creates new instances attributes other than instance_names are picked.
<tt style='background-color:#E8E8E8;'> modules.cloud.google. <a href=' /modules/cloud/google/gce.py#L565'>change_instance_state</a>(module,gce,instance_names,number)</tt>	Changes the state of a list of instances for example.
<tt style='background-color:#E8E8E8;'> modules.cloud.linode. <a href=' /modules/cloud/linode/linode.py#L294'>randompass</a>()</tt>	Generate a long random password that comply to linode requirements.
<tt style='background-color:#E8E8E8;'> modules.cloud.linode. <a href=' /modules/cloud/linode/linode.py#L313'>getInstanceDetails</a>(api,server)</tt>	Return the details of an instance populating ips etc.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_volume.py#L225'>create_volume</a>(module,profitbricks)</tt>	Creates a volume.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_volume.py#L299'>delete_volume</a>(module,profitbricks)</tt>	Removes a volume.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_volume.py#L342'>_attach_volume</a>(module,profitbricks,datacenter,volume)</tt>	Attaches a volume.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_datacenter.py#L137'>create_datacenter</a>(module,profitbricks)</tt>	Creates a datacenter this will create a new datacenter in the specified location.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_datacenter.py#L179'>remove_datacenter</a>(module,profitbricks)</tt>	Removes a datacenter.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_nic.py#L132'>create_nic</a>(module,profitbricks)</tt>	Creates a nic.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_nic.py#L182'>delete_nic</a>(module,profitbricks)</tt>	Removes a nic module : ansiblemodule object.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_volume_attachments.py#L130'>attach_volume</a>(module,profitbricks)</tt>	Attaches a volume.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks_volume_attachments.py#L173'>detach_volume</a>(module,profitbricks)</tt>	Detaches a volume.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks.py#L363'>create_virtual_machine</a>(module,profitbricks)</tt>	Create new virtual machine.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks.py#L449'>remove_virtual_machine</a>(module,profitbricks)</tt>	Removes a virtual machine.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks.py#L499'>_remove_boot_volume</a>(module,profitbricks,datacenter_id,server_id)</tt>	Remove the boot volume from the server.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks.py#L512'>startstop_machine</a>(module,profitbricks,state)</tt>	Starts or stops a virtual machine.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks.py#L571'>_get_datacenter_id</a>(datacenters,identity)</tt>	Fetch and return datacenter uuid by datacenter name if found.
<tt style='background-color:#E8E8E8;'> modules.cloud.profitbricks. <a href=' /modules/cloud/profitbricks/profitbricks.py#L581'>_get_server_id</a>(servers,identity)</tt>	Fetch and return server uuid by server name if found.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_route_table.py#L170'>find_subnets</a>(vpc_conn,vpc_id,identified_subnets)</tt>	Finds a list of subnets each identified either by a raw id a unique 'name' tag or a cidr such as 10.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_route_table.py#L226'>find_igw</a>(vpc_conn,vpc_id)</tt>	Finds the internet gateway for the given vpc id.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudTrailManager <a href=' /modules/cloud/amazon/cloudtrail.py#L156'>enable_logging</a>(name)</tt>	Turn on logging for a cloudtrail that already exists throws exception on error.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudTrailManager <a href=' /modules/cloud/amazon/cloudtrail.py#L167'>delete</a>(name)</tt>	Delete a given cloudtrial configuration throws exception on error.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/aws_kms.py#L120'>boto_exception</a>(err)</tt>	Generic error message handler.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ecs_ecr.py#L156'>build_kwargs</a>(registry_id)</tt>	Builds a kwargs dict which may contain the optional registryid.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/route53.py#L331'>get_zone_by_name</a>(conn,module,zone_name,want_private)</tt>	Finds a zone by name or zone_id.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/route53.py#L355'>commit</a>(changes,retry_interval,wait,wait_timeout)</tt>	Commit changes but retry priorrequestnotcomplete errors.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/route53_health_check.py#L155'>find_health_check</a>(conn,wanted)</tt>	Searches for health checks that have the exact same set of immutable values.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_alias.py#L198'>pc</a>(key)</tt>	Changes python key into pascale case equivalent for example 'this_function_name' becomes 'thisfunctionname'.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_event.py#L182'>ordered_obj</a>(obj)</tt>	Order object for comparison purposes.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_event.py#L198'>set_api_sub_params</a>(params)</tt>	Sets module sub-parameters to those expected by the boto3 api.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_alias.py#L228'>validate_params</a>(module,aws)</tt>	Performs basic parameter validation.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_event.py#L251'>get_qualifier</a>(module)</tt>	Returns the function qualifier as a version or alias or none.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_event.py#L277'>lambda_event_stream</a>(module,aws)</tt>	Adds updates or deletes lambda stream dynamodb kinesis event notifications.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L339'>main</a>()</tt>	Main entry point.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudFrontServiceManager <a href=' /modules/cloud/amazon/cloudfront_facts.py#L496'>paginated_response</a>(func,result_key)</tt>	Returns expanded response for paginated operations.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_asg.py#L266'>enforce_required_arguments</a>(module)</tt>	As many arguments are not required for autoscale group deletion.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/cloudformation.py#L256'>get_stack_events</a>(cfn,stack_name)</tt>	This event data was never correct it worked as a side effect so the v2 3 format is different.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/cloudformation.py#L321'>stack_operation</a>(cfn,stack_name,operation)</tt>	Gets the status of a stack while it is created/updated/deleted.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_alias.py#L209'>set_api_params</a>(module,module_params)</tt>	Sets module parameters to those expected by the boto3 api.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_alias.py#L256'>get_lambda_alias</a>(module,aws)</tt>	Returns the lambda function alias if it exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_alias.py#L283'>lambda_alias</a>(module,aws)</tt>	Adds updates or deletes lambda function aliases.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_vpc.py#L183'>get_vpc_info</a>(vpc)</tt>	Retrieves vpc information from an instance.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_vpc.py#L197'>find_vpc</a>(module,vpc_conn,vpc_id,cidr)</tt>	Finds a vpc that matches a specific id or cidr + tags.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_vpc.py#L242'>routes_match</a>(rt_list,rt,igw)</tt>	Check if the route table has all routes as in given list rt_list : a list if routes provided in the module.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_vpc.py#L292'>rtb_changed</a>(route_tables,vpc_conn,module,vpc)</tt>	Checks if the remote routes match the local routes.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_vpc.py#L340'>create_vpc</a>(module,vpc_conn)</tt>	Creates a new or modifies an existing vpc.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_vpc.py#L655'>terminate_vpc</a>(module,vpc_conn,vpc_id,cidr)</tt>	Terminates a vpc module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L702'>get_instance_info</a>(inst)</tt>	Retrieves instance information from an instance.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L762'>boto_supports_associate_public_ip_address</a>(ec2)</tt>	Check if boto library has associate_public_ip_address in the networkinterfacespecification class.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L781'>boto_supports_profile_name_arg</a>(ec2)</tt>	Check if boto library has instance_profile_name argument instance_profile_name has been added in boto 2 5 0.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vol.py#L327'>boto_supports_volume_encryption</a>()</tt>	Check if boto library supports encryption of ebs volumes added in 2 29 0.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L851'>boto_supports_param_in_spot_request</a>(ec2,param)</tt>	Check if boto library has a <param> in its request_spot_instances() method for example the placement_group parameter wasn't added until 2 3 0.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L864'>await_spot_requests</a>(module,ec2,spot_requests,count)</tt>	Wait for a group of spot requests to be fulfilled or fail.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L977'>create_instances</a>(module,ec2,vpc,override_count)</tt>	Creates new instances.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L1300'>terminate_instances</a>(module,ec2,instance_ids)</tt>	Terminates a list of instances module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L1369'>startstop_instances</a>(module,ec2,instance_ids,state)</tt>	Starts or stops a list of existing instances module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2.py#L1477'>restart_instances</a>(module,ec2,instance_ids,state)</tt>	Restarts a list of existing instances module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_snapshot.py#L138'>create</a>(module,conn,name,group_family)</tt>	Create elasticache parameter group.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_snapshot.py#L164'>delete</a>(module,conn,name)</tt>	Delete elasticache parameter group.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_parameter_group.py#L149'>make_current_modifiable_param_dict</a>(module,conn,name)</tt>	Gets the current state of the cache parameter group and creates a dict with the format {parametername [allowed_values datatype parametervalue]}.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_parameter_group.py#L164'>check_valid_modification</a>(module,values,modifiable_params)</tt>	Check if the parameters and values in values are valid.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_parameter_group.py#L193'>check_changed_parameter_values</a>(values,old_parameters,new_parameters)</tt>	Checking if the new values are different than the old values.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_parameter_group.py#L213'>modify</a>(module,conn,name,values)</tt>	Modify elasticache parameter group to reflect the new information if it differs from the current.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_parameter_group.py#L227'>reset</a>(module,conn,name,values)</tt>	Reset elasticache parameter group if the current information is different from the new information.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_parameter_group.py#L256'>get_info</a>(conn,name)</tt>	Gets info about the elasticache parameter group returns false if it doesn't exist or we don't have access.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_ami_copy.py#L152'>copy_image</a>(module,ec2)</tt>	Copies an ami.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_dhcp_options.py#L238'>fetch_dhcp_options_for_vpc</a>(vpc_conn,vpc_id)</tt>	Returns the dhcp options object currently associated with the requested vpc id using the vpc connection variable.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_dhcp_options.py#L251'>match_dhcp_options</a>(vpc_conn,tags,options)</tt>	Finds a dhcp options object that optionally matches the tags and options provided.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/rds_param_group.py#L180'>set_parameter</a>(param,value,immediate)</tt>	Allows setting parameters with 10m = 10* 1024 * 1024 and so on.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/rds_param_group.py#L214'>modify_group</a>(group,params,immediate)</tt>	Set all of the params in a group to the provided new params raises notmodifiableerror if any of the.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L490'>ensure_ok</a>()</tt>	Create the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L523'>ensure_gone</a>()</tt>	Destroy the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L737'>_create_elb_listeners</a>(listeners)</tt>	Takes a list of listener tuples and creates them.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L743'>_delete_elb_listeners</a>(listeners)</tt>	Takes a list of listener tuples and deletes them from the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L751'>_set_elb_listeners</a>()</tt>	Creates listeners specified by self listeners overwrites existing.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L808'>_api_listener_as_tuple</a>(listener)</tt>	Adds ssl_certificate_id to elb api tuple if present.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L815'>_listener_as_tuple</a>(listener)</tt>	Formats listener as a 4- or 5-tuples in the order specified by the.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L861'>_set_subnets</a>()</tt>	Determine which subnets need to be attached or detached on the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L876'>_set_zones</a>()</tt>	Determine which zones need to be enabled or disabled on the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L899'>_set_health_check</a>()</tt>	Set health check values on elb as needed.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1095'>_get_backend_policies</a>()</tt>	Get a list of backend policies.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1106'>_set_backend_policies</a>()</tt>	Sets policies for all backends.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1135'>_get_proxy_protocol_policy</a>()</tt>	Find out if the elb has a proxy protocol enabled.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1144'>_set_proxy_protocol_policy</a>()</tt>	Install a proxy protocol policy if needed.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1156'>_diff_list</a>(a,b)</tt>	Find the entries in list a that are not in list b.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1161'>_get_instance_ids</a>()</tt>	Get the current list of instance ids installed in the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1170'>_set_instance_ids</a>()</tt>	Register or deregister instances from an lb instance.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb_lb.py#L1222'>_get_health_check_target</a>()</tt>	Compose target string from healthcheck parameters.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_snapshot.py#L138'>_get_most_recent_snapshot</a>(snapshots,max_snapshot_age_secs,now)</tt>	Gets the most recently created snapshot and optionally filters the result.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_snapshot.py#L166'>_create_with_wait</a>(snapshot,wait_timeout_secs,sleep_func)</tt>	Wait for the snapshot to be created.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_asg_facts.py#L220'>find_asgs</a>(conn,module,name,tags)</tt>	Args conn (boto3.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L278'>convert_to_lower</a>(data)</tt>	Convert all uppercase keys in dict with lowercase_ args.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L205'>make_tags_in_proper_format</a>(tags)</tt>	Take a dictionary of tags and convert them into the aws tags format.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L227'>make_tags_in_aws_format</a>(tags)</tt>	Take a dictionary of tags and convert them into the aws tags format.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L259'>get_tags</a>(client,stream_name,check_mode)</tt>	Retrieve the tags for a kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L302'>find_stream</a>(client,stream_name,check_mode)</tt>	Retrieve a kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L399'>wait_for_status</a>(client,stream_name,status,wait_timeout)</tt>	Wait for the the status to change for a kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L413'>tags_action</a>(client,stream_name,tags,action)</tt>	Create or delete multiple tags from a kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L467'>recreate_tags_from_list</a>(list_of_tags)</tt>	Recreate tags from a list of tuples into the amazon tag format.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L500'>update_tags</a>(client,stream_name,tags,check_mode)</tt>	Update tags for an amazon resource.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L580'>stream_action</a>(client,stream_name,shard_count,action)</tt>	Create or delete an amazon kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L634'>retention_action</a>(client,stream_name,retention_period,action)</tt>	Increase or decreaste the retention of messages in the kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L698'>update</a>(client,current_stream,stream_name,retention_period)</tt>	Update an amazon kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L826'>create_stream</a>(client,stream_name,number_of_shards,retention_period)</tt>	Create an amazon kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/kinesis_stream.py#L963'>delete_stream</a>(client,stream_name,wait,wait_timeout)</tt>	Delete an amazon kinesis stream.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_eip.py#L224'>find_address</a>(ec2,public_ip,device_id,isinstance)</tt>	Find an existing elastic ip address.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_eip.py#L234'>address_is_associated_with_device</a>(ec2,address,device_id,isinstance)</tt>	Check if the elastic ip is currently associated with the device.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_eip.py#L245'>allocate_address</a>(ec2,domain,reuse_existing_ip_allowed)</tt>	Allocate a new elastic ip address when needed and return it.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L645'>release_address</a>(ec2,address,check_mode)</tt>	Release a previously allocated elastic ip address.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_eip.py#L274'>find_device</a>(ec2,module,device_id,isinstance)</tt>	Attempt to find the ec2 instance and return it.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_group.py#L190'>make_rule_key</a>(prefix,rule,group_id,cidr_ip)</tt>	Creates a unique key for an individual group rule.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_group.py#L232'>get_target_from_rule</a>(module,ec2,rule,name)</tt>	Returns tuple of (group_id ip) after validating rule params.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L236'>get_file_systems</a>()</tt>	Returns generator of file systems including all attributes of fs.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L263'>get_tags</a>()</tt>	Returns tag list for selected instance of efs.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L274'>get_mount_targets</a>()</tt>	Returns mount targets for selected instance of efs.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L292'>get_security_groups</a>()</tt>	Returns security groups for selected instance of efs.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs.py#L500'>iterate_all</a>(attr,map_method)</tt>	Method creates iterator from boto result set.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs_facts.py#L282'>prefix_to_attr</a>(attr_id)</tt>	Helper method to convert id prefix to mount target attribute.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs.py#L547'>first_or_default</a>(items,default)</tt>	Helper method to fetch first element of list if exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs_facts.py#L308'>has_tags</a>(available,required)</tt>	Helper method to determine if tag requested already exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs_facts.py#L317'>has_targets</a>(available,required)</tt>	Helper method to determine if mount tager requested already exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs_facts.py#L327'>group_list_of_dict</a>(array)</tt>	Helper method to group list of dict to dict with all possible values.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L317'>get_nat_gateways</a>(client,subnet_id,nat_gateway_id,states)</tt>	Retrieve a list of nat gateways args.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L399'>wait_for_status</a>(client,wait_timeout,nat_gateway_id,status)</tt>	Wait for the nat gateway to reach a status args.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L484'>gateway_in_subnet_exists</a>(client,subnet_id,allocation_id,check_mode)</tt>	Retrieve all nat gateways for a subnet.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L546'>get_eip_allocation_id_by_address</a>(client,eip_address,check_mode)</tt>	Release an eip from your eip pool args.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L604'>allocate_eip_address</a>(client,check_mode)</tt>	Release an eip from your eip pool args.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L645'>release_address</a>(client,allocation_id,check_mode)</tt>	Release an eip from your eip pool args.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_snapshot.py#L138'>create</a>(client,subnet_id,allocation_id,client_token)</tt>	Create an amazon nat gateway.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L788'>pre_create</a>(client,subnet_id,allocation_id,eip_address)</tt>	Create an amazon nat gateway.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_nat_gateway.py#L905'>remove</a>(client,nat_gateway_id,wait,wait_timeout)</tt>	Delete an amazon nat gateway.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/iam_server_certificate_facts.py#L101'>get_server_certs</a>(iam,name)</tt>	Retrieve the attributes of a server certificate if it exists or all certs.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_snapshot.py#L138'>create</a>(module,connection,replication_id,cluster_id)</tt>	Create an elasticache backup.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_snapshot.py#L153'>copy</a>(module,connection,name,target)</tt>	Copy an elasticache backup.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/elasticache_snapshot.py#L164'>delete</a>(module,connection,name)</tt>	Delete an elasticache backup.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L302'>get_file_system_id</a>(name)</tt>	Returns id of instance by instance name.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L313'>get_file_system_state</a>(name,file_system_id)</tt>	Returns state of filesystem by efs id/name.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L325'>get_mount_targets_in_state</a>(file_system_id,states)</tt>	Returns states of mount targets of selected efs with selected state s optional.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L342'>create_file_system</a>(name,performance_mode)</tt>	Creates new filesystem with selected name.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L367'>converge_file_system</a>(name,tags,targets)</tt>	Change attributes mount targets and tags of filesystem by name.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L453'>delete_file_system</a>(name,file_system_id)</tt>	Removes efs instance by id/name.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.EFSConnection <a href=' /modules/cloud/amazon/efs.py#L479'>delete_mount_targets</a>(file_system_id)</tt>	Removes mount targets by efs id.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs.py#L524'>targets_equal</a>(keys,a,b)</tt>	Method compare two mount targets by specified attributes.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs.py#L535'>dict_diff</a>(dict1,dict2,by_key)</tt>	Helper method to calculate difference of two dictionaries.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/efs.py#L556'>wait_for</a>(callback,value,timeout)</tt>	Helper method to wait for desired value returned by callback method.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.Ec2Metadata <a href=' /modules/cloud/amazon/ec2_facts.py#L139'>fix_invalid_varnames</a>(data)</tt>	Change ':'' and '-' to '_' to ensure valid template variable names.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.Ec2Metadata <a href=' /modules/cloud/amazon/ec2_facts.py#L146'>add_ec2_region</a>(data)</tt>	Use the 'ansible_ec2_placement_availability_zone' key/value pair to add 'ansible_ec2_placement_region' key/value pair with.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vpc_net.py#L123'>vpc_exists</a>(module,vpc,name,cidr_block)</tt>	Returns none or a vpc object depending on the existence of a vpc when supplied.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/s3.py#L447'>is_fakes3</a>(s3_url)</tt>	Return true if s3_url has scheme fakes3 //.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/s3.py#L454'>is_walrus</a>(s3_url)</tt>	Return true if it's walrus endpoint not s3 we assume anything other than *.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_ami.py#L364'>get_block_device_mapping</a>(image)</tt>	Retrieves block device mapping from ami.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/s3_sync.py#L249'>calculate_multipart_etag</a>(source_path,chunk_size)</tt>	Calculates a multipart upload etag for amazon s3 arguments.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/s3_sync.py#L332'>calculate_local_etag</a>(filelist,key_prefix)</tt>	Really "calculate md5", but since aws uses their own format we'll just call it a "local etag".
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/iam.py#L187'>_paginate</a>(func,attr)</tt>	Paginates the results from func by continuously passing in the returned marker if the results were truncated.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/iam.py#L399'>set_users_groups</a>(module,iam,name,groups)</tt>	Sets groups for a user will purge groups not explicitly passed while retaining pre-existing groups that also are in the new list.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/redshift.py#L222'>_collect_facts</a>(resource)</tt>	Transfrom cluster information to dict.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/redshift.py#L242'>create_cluster</a>(module,redshift)</tt>	Create a new cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/redshift.py#L305'>describe_cluster</a>(module,redshift)</tt>	Collect data about the cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/redshift.py#L322'>delete_cluster</a>(module,redshift)</tt>	Delete a cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/redshift.py#L357'>modify_cluster</a>(module,redshift)</tt>	Modify an existing cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lightsail.py#L186'>create_instance</a>(module,client,instance_name)</tt>	Create an instance module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lightsail.py#L239'>delete_instance</a>(module,client,instance_name)</tt>	Terminates an instance module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lightsail.py#L300'>restart_instance</a>(module,client,instance_name)</tt>	Reboot an existing instance module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lightsail.py#L355'>startstop_instance</a>(module,client,instance_name,state)</tt>	Starts or stops an existing instance module ansible module object.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lightsail.py#L442'>_find_instance_info</a>(client,instance_name)</tt>	Handle exceptions where this function is called.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_ami_search.py#L122'>get_url</a>(module,url)</tt>	Get url and return response.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_ami_search.py#L133'>ubuntu</a>(module)</tt>	Get the ami for ubuntu.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/_ec2_ami_search.py#L156'>lookup_ubuntu_ami</a>(table,release,stream,store)</tt>	Look up the ubuntu ami that matches query given a table of amis.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_ami.py#L405'>create_image</a>(module,ec2)</tt>	Creates new ami.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vol.py#L336'>boto_supports_kms_key_id</a>()</tt>	Check if boto library supports kms_key_ids added in 2 39 0.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/ec2_vol.py#L431'>modify_dot_attribute</a>(module,ec2,instance,device_name)</tt>	Modify delete_on_termination attribute.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L110'>fix_return</a>(node)</tt>	Fixup returned dictionary.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L133'>alias_details</a>(client,module)</tt>	Returns list of aliases for a specified function.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L165'>all_details</a>(client,module)</tt>	Returns all lambda related facts.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L193'>config_details</a>(client,module)</tt>	Returns configuration details for one or all lambda functions.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L237'>mapping_details</a>(client,module)</tt>	Returns all lambda event source mappings.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L276'>policy_details</a>(client,module)</tt>	Returns policy attached to a lambda function.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/lambda_facts.py#L306'>version_details</a>(client,module)</tt>	Returns all lambda function versions.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L129'>deregister</a>(wait,timeout)</tt>	De-register the instance from all elbs and wait for the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L150'>register</a>(wait,enable_availability_zone,timeout)</tt>	Register the instance for all elbs and wait for the elb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L168'>exists</a>(lbtest)</tt>	Verify that the named elb actually exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L178'>_enable_availailability_zone</a>(lb)</tt>	Enable the current instance's availability zone in the provided lb.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L192'>_await_elb_instance_state</a>(lb,awaited_state,initial_state,timeout)</tt>	Wait for an elb to change state.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L230'>_is_instance_state_pending</a>(instance_state)</tt>	Determines whether the instance_state is "pending", meaning there is an operation under way to bring it in service.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L241'>_get_instance_health</a>(lb)</tt>	Check instance health should return status object or none under certain error conditions.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L255'>_get_instance_lbs</a>(ec2_elbs)</tt>	Returns a list of elbs attached to self instance_id.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L293'>_get_auto_scaling_group_lbs</a>()</tt>	Returns a list of elbs associated with self instance_id.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElbManager <a href=' /modules/cloud/amazon/ec2_elb.py#L319'>_get_instance</a>()</tt>	Returns a boto ec2 instanceobject for self instance_id.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L134'>describe</a>()</tt>	Returns the existing details of the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L145'>put</a>(enabled)</tt>	Creates or updates the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L163'>delete</a>()</tt>	Deletes the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L170'>enable</a>()</tt>	Enables the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L176'>disable</a>()</tt>	Disables the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L182'>list_targets</a>()</tt>	Lists the existing targets for the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L193'>put_targets</a>(targets)</tt>	Creates or updates the provided targets on the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L205'>remove_targets</a>(target_ids)</tt>	Removes the provided targets from the rule in aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L217'>remove_all_targets</a>()</tt>	Removes all targets on rule.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L222'>_targets_request</a>(targets)</tt>	Formats each target for the request.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRule <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L237'>_snakify</a>(dict)</tt>	Converts cammel case to snake case.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L249'>ensure_present</a>(enabled)</tt>	Ensures the rule and targets are present and synced.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L261'>ensure_disabled</a>()</tt>	Ensures the rule and targets are present but disabled and synced.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L265'>ensure_absent</a>()</tt>	Ensures the rule and targets are absent.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L273'>fetch_aws_state</a>()</tt>	Retrieves rule and target state from aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L291'>_sync_rule</a>(enabled)</tt>	Syncs local rule state with aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L296'>_sync_targets</a>()</tt>	Syncs local targets with aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L308'>_sync_state</a>(enabled)</tt>	Syncs local rule state with aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L316'>_create</a>(enabled)</tt>	Creates rule and targets on aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L321'>_rule_matches_aws</a>()</tt>	Checks if the local rule data matches aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L332'>_targets_to_put</a>()</tt>	Returns a list of targets that need to be updated or added remotely.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L337'>_remote_target_ids_to_remove</a>()</tt>	Returns a list of targets that need to be removed remotely.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudWatchEventRuleManager <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L345'>_remote_state</a>()</tt>	Returns the remote state from aws.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/cloudwatchevent_rule.py#L353'>get_cloudwatchevents_client</a>(module)</tt>	Returns a boto3 client for accessing cloudwatch events.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.CloudFormationServiceManager <a href=' /modules/cloud/amazon/cloudformation_facts.py#L217'>paginated_response</a>(func,result_key,next_token)</tt>	Returns expanded response for paginated operations.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/cloudformation_facts.py#L232'>to_dict</a>(items,key,value)</tt>	Transforms a list of items to a key/value dictionary.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L189'>ensure_present</a>()</tt>	Ensure cache cluster exists or create it if not.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L196'>ensure_absent</a>()</tt>	Ensure cache cluster is gone or delete it if not.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L200'>ensure_rebooted</a>()</tt>	Ensure cache cluster is gone or delete it if not.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L204'>exists</a>()</tt>	Check if cache cluster exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L208'>create</a>()</tt>	Create an elasticache cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L245'>delete</a>()</tt>	Destroy an elasticache cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L271'>sync</a>()</tt>	Sync settings to cluster if required.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L299'>modify</a>()</tt>	Modify the cache cluster note it's only possible to modify a few select options.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L320'>reboot</a>()</tt>	Reboot the cache cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L348'>get_info</a>()</tt>	Return basic info about the cache cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L359'>_wait_for_status</a>(awaited_status)</tt>	Wait for status to change from present status to awaited_status.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L384'>_requires_modification</a>()</tt>	Check if cluster requires nondestructive modification.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L413'>_requires_destroy_and_create</a>()</tt>	Check whether a destroy and create is required to synchronize cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L430'>_get_elasticache_connection</a>()</tt>	Get an elasticache connection.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L442'>_get_port</a>()</tt>	Get the port where this information is retrieved from is engine dependent.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L451'>_refresh_data</a>(cache_cluster_data)</tt>	Refresh data about this cache cluster.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon.ElastiCacheManager <a href=' /modules/cloud/amazon/elasticache.py#L472'>_get_nodes_to_remove</a>()</tt>	If there are nodes to remove it figures out which need to be removed.
<tt style='background-color:#E8E8E8;'> modules.cloud.amazon. <a href=' /modules/cloud/amazon/aws_kms.py#L215'>assert_policy_shape</a>(policy)</tt>	Since the policy seems a little uh fragile make sure we know approximately what we're looking at.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxd.LXDProfileManagement <a href=' /modules/cloud/lxd/lxd_profile.py#L193'>__init__</a>(module)</tt>	Management of lxc containers via ansible.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxd.LXDProfileManagement <a href=' /modules/cloud/lxd/lxd_profile.py#L297'>run</a>()</tt>	Run the main method.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxd. <a href=' /modules/cloud/lxd/lxd_container.py#L545'>main</a>()</tt>	Ansible main module.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxd.LXDContainerManagement <a href=' /modules/cloud/lxd/lxd_container.py#L291'>__init__</a>(module)</tt>	Management of lxc containers via ansible.
<tt style='background-color:#E8E8E8;'> modules.cloud.lxd.LXDContainerManagement <a href=' /modules/cloud/lxd/lxd_container.py#L510'>run</a>()</tt>	Run the main method.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcPublicIp <a href=' /modules/cloud/centurylink/clc_publicip.py#L181'>process_request</a>()</tt>	Process the request - main code path.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcPublicIp <a href=' /modules/cloud/centurylink/clc_publicip.py#L205'>_define_module_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcPublicIp <a href=' /modules/cloud/centurylink/clc_publicip.py#L220'>ensure_public_ip_present</a>(server_ids,protocol,ports)</tt>	Ensures the given server ids having the public ip available.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcPublicIp <a href=' /modules/cloud/centurylink/clc_publicip.py#L260'>ensure_public_ip_absent</a>(server_ids)</tt>	Ensures the given server ids having the public ip removed if there is any.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcPublicIp <a href=' /modules/cloud/centurylink/clc_publicip.py#L297'>_wait_for_requests_to_complete</a>(requests_lst)</tt>	Waits until the clc requests are complete if the wait argument is true.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcPublicIp <a href=' /modules/cloud/centurylink/clc_publicip.py#L312'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcPublicIp <a href=' /modules/cloud/centurylink/clc_publicip.py#L340'>_get_servers_from_clc</a>(server_ids,message)</tt>	Gets list of servers form clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink. <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L349'>main</a>()</tt>	The main function instantiates the module and calls process_request.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcBlueprintPackage <a href=' /modules/cloud/centurylink/clc_blueprint_package.py#L148'>process_request</a>()</tt>	Process the request - main code path.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcBlueprintPackage <a href=' /modules/cloud/centurylink/clc_blueprint_package.py#L167'>define_argument_spec</a>()</tt>	This function defines the dictionary object required for.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcBlueprintPackage <a href=' /modules/cloud/centurylink/clc_blueprint_package.py#L183'>ensure_package_installed</a>(server_ids,package_id,package_params)</tt>	Ensure the package is installed in the given list of servers.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcBlueprintPackage <a href=' /modules/cloud/centurylink/clc_blueprint_package.py#L209'>clc_install_package</a>(server,package_id,package_params)</tt>	Install the package to a given clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcBlueprintPackage <a href=' /modules/cloud/centurylink/clc_blueprint_package.py#L228'>_wait_for_requests_to_complete</a>(request_lst)</tt>	Waits until the clc requests are complete if the wait argument is true.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcBlueprintPackage <a href=' /modules/cloud/centurylink/clc_blueprint_package.py#L243'>_get_servers_from_clc</a>(server_list,message)</tt>	Internal function to fetch list of clc server objects from a list of server ids.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcBlueprintPackage <a href=' /modules/cloud/centurylink/clc_blueprint_package.py#L255'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L272'>process_request</a>()</tt>	Execute the main code path and handle the request.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L301'>_define_module_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L317'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L345'>_ensure_group_is_absent</a>(group_name,parent_name)</tt>	Ensure that group_name is absent by deleting it if necessary.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L364'>_delete_group</a>(group_name)</tt>	Delete the provided server group.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L380'>_ensure_group_is_present</a>(group_name,parent_name,group_description)</tt>	Checks to see if a server group exists creates it if it doesn't.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L423'>_create_group</a>(group,parent,description)</tt>	Create the provided server group.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L440'>_group_exists</a>(group_name,parent_name)</tt>	Check to see if a group exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L454'>_get_group_tree_for_datacenter</a>(datacenter)</tt>	Walk the tree of groups for a datacenter.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L466'>_walk_groups_recursive</a>(parent_group,child_group)</tt>	Walk a parent-child tree of groups starting with the provided child group.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcGroup <a href=' /modules/cloud/centurylink/clc_group.py#L483'>_wait_for_requests_to_complete</a>(requests_lst)</tt>	Waits until the clc requests are complete if the wait argument is true.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L516'>process_request</a>()</tt>	Process the request - main code path.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L587'>_define_module_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L662'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L689'>_validate_module_params</a>(clc,module)</tt>	Validate the module params and lookup default values.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L720'>_find_datacenter</a>(clc,module)</tt>	Find the datacenter by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L740'>_find_alias</a>(clc,module)</tt>	Find or validate the account alias by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L758'>_find_cpu</a>(clc,module)</tt>	Find or validate the cpu value by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L781'>_find_memory</a>(clc,module)</tt>	Find or validate the memory value by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L804'>_find_description</a>(module)</tt>	Set the description module param to name if description is blank.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L816'>_validate_types</a>(module)</tt>	Validate that type and storage_type are set appropriately and fail if not.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L839'>_validate_name</a>(module)</tt>	Validate that name is the correct length if provided fail if it's not.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L854'>_find_ttl</a>(clc,module)</tt>	Validate that ttl is > 3600 if set and fail if not.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L871'>_find_template_id</a>(module,datacenter)</tt>	Find the template id by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L896'>_find_network_id</a>(module,datacenter)</tt>	Validate the provided network id or return a default.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L922'>_find_aa_policy_id</a>(clc,module)</tt>	Validate if the anti affinity policy exist for the given name and throw error if not.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L944'>_find_alert_policy_id</a>(clc,module)</tt>	Validate if the alert policy exist for the given name and throw error if not.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L967'>_create_servers</a>(module,clc,override_count)</tt>	Create new servers in clc cloud.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1057'>_enforce_count</a>(module,clc)</tt>	Enforce that there is the right number of servers in the provided group.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1104'>_wait_for_requests</a>(module,request_list)</tt>	Block until server provisioning requests are completed.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1122'>_refresh_servers</a>(module,servers)</tt>	Loop through a list of servers and refresh them.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1138'>_add_public_ip_to_servers</a>(module,should_add_public_ip,servers,public_ip_protocol)</tt>	Create a public ip for servers.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1175'>_add_alert_policy_to_servers</a>(clc,module,servers)</tt>	Associate the alert policy to servers.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1201'>_add_alert_policy_to_server</a>(clc,alias,server_id,alert_policy_id)</tt>	Associate an alert policy to a clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1225'>_get_alert_policy_id_by_name</a>(clc,module,alias,alert_policy_name)</tt>	Returns the alert policy id for the given alert policy name.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1248'>_delete_servers</a>(module,clc,server_ids)</tt>	Delete the servers on the provided list.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1276'>_start_stop_servers</a>(module,clc,server_ids)</tt>	Start or stop the servers on the provided list.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1326'>_change_server_power_state</a>(module,server,state)</tt>	Change the server powerstate.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1352'>_find_running_servers_by_group</a>(module,datacenter,count_group)</tt>	Find a list of running servers in the provided group.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1375'>_find_group</a>(module,datacenter,lookup_group)</tt>	Find a server group in a datacenter by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1407'>_find_group_recursive</a>(module,group_list,lookup_group)</tt>	Find a server group by recursively walking the tree.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1432'>_create_clc_server</a>(clc,module,server_params)</tt>	Call the clc rest api to create a server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1500'>_get_anti_affinity_policy_id</a>(clc,module,alias,aa_policy_name)</tt>	Retrieves the anti affinity policy id of the server based on the name of the policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcServer <a href=' /modules/cloud/centurylink/clc_server.py#L1530'>_find_server_by_uuid_w_retry</a>(clc,module,svr_uuid,alias)</tt>	Find the clc server by the uuid returned from the provisioning request retry the request if a 404 is returned.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L274'>process_request</a>()</tt>	Execute the main code path and handle the request.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L355'>ensure_loadbalancer_present</a>(name,alias,location,description)</tt>	Checks to see if a load balancer exists and creates one if it does not.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L384'>ensure_loadbalancerpool_present</a>(lb_id,alias,location,method)</tt>	Checks to see if a load balancer pool exists and creates one if it does not.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L422'>ensure_loadbalancer_absent</a>(name,alias,location)</tt>	Checks to see if a load balancer exists and deletes it if it does.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L443'>ensure_loadbalancerpool_absent</a>(alias,location,name,port)</tt>	Checks to see if a load balancer pool exists and deletes it if it does.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L478'>ensure_lbpool_nodes_set</a>(alias,location,name,port)</tt>	Checks to see if the provided list of nodes exist for the pool.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L520'>ensure_lbpool_nodes_present</a>(alias,location,name,port)</tt>	Checks to see if the provided list of nodes exist for the pool and add the missing nodes to the pool.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L553'>ensure_lbpool_nodes_absent</a>(alias,location,name,port)</tt>	Checks to see if the provided list of nodes exist for the pool and removes them if found any.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L586'>create_loadbalancer</a>(name,alias,location,description)</tt>	Create a loadbalancer w/ params.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L611'>create_loadbalancerpool</a>(alias,location,lb_id,method)</tt>	Creates a pool on the provided load balancer.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L637'>delete_loadbalancer</a>(alias,location,name)</tt>	Delete clc loadbalancer.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L657'>delete_loadbalancerpool</a>(alias,location,lb_id,pool_id)</tt>	Delete the pool on the provided load balancer.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L677'>_get_loadbalancer_id</a>(name)</tt>	Retrieves unique id of loadbalancer.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L689'>_get_loadbalancer_list</a>(alias,location)</tt>	Retrieve a list of loadbalancers.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L706'>_loadbalancer_exists</a>(name)</tt>	Verify a loadbalancer exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L719'>_loadbalancerpool_exists</a>(alias,location,port,lb_id)</tt>	Checks to see if a pool exists on the specified port on the provided load balancer.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L742'>_loadbalancerpool_nodes_exists</a>(alias,location,lb_id,pool_id)</tt>	Checks to see if a set of nodes exists on the specified port on the provided load balancer.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L764'>set_loadbalancernodes</a>(alias,location,lb_id,pool_id)</tt>	Updates nodes to the provided pool.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L788'>add_lbpool_nodes</a>(alias,location,lb_id,pool_id)</tt>	Add nodes to the provided pool.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L818'>remove_lbpool_nodes</a>(alias,location,lb_id,pool_id)</tt>	Removes nodes from the provided pool.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L849'>_get_lbpool_nodes</a>(alias,location,lb_id,pool_id)</tt>	Return the list of nodes available to the provided load balancer pool.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L869'>define_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcLoadBalancer <a href=' /modules/cloud/centurylink/clc_loadbalancer.py#L896'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L162'>process_request</a>()</tt>	Process the request - main code path.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L192'>ensure_server_snapshot_present</a>(server_ids,expiration_days)</tt>	Ensures the given set of server_ids have the snapshots created.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L219'>_create_server_snapshot</a>(server,expiration_days)</tt>	Create the snapshot for the clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L237'>ensure_server_snapshot_absent</a>(server_ids)</tt>	Ensures the given set of server_ids have the snapshots removed.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L263'>_delete_server_snapshot</a>(server)</tt>	Delete snapshot for the clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L278'>ensure_server_snapshot_restore</a>(server_ids)</tt>	Ensures the given set of server_ids have the snapshots restored.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L304'>_restore_server_snapshot</a>(server)</tt>	Restore snapshot for the clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L319'>_wait_for_requests_to_complete</a>(requests_lst)</tt>	Waits until the clc requests are complete if the wait argument is true.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L334'>define_argument_spec</a>()</tt>	This function defines the dictionary object required for.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L354'>_get_servers_from_clc</a>(server_list,message)</tt>	Internal function to fetch list of clc server objects from a list of server ids.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcSnapshot <a href=' /modules/cloud/centurylink/clc_server_snapshot.py#L366'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L229'>_define_module_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L257'>process_request</a>()</tt>	Process the request - main code path.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L274'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L302'>_ensure_alert_policy_is_present</a>()</tt>	Ensures that the alert policy is present.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L327'>_ensure_alert_policy_is_absent</a>()</tt>	Ensures that the alert policy is absent.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L351'>_ensure_alert_policy_is_updated</a>(alert_policy)</tt>	Ensures the alert policy is updated if anything is changed in the alert policy configuration.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L380'>_get_alert_policies</a>(alias)</tt>	Get the alert policies for account alias by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L396'>_create_alert_policy</a>()</tt>	Create an alert policy using the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L435'>_update_alert_policy</a>(alert_policy_id)</tt>	Update alert policy using the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L474'>_delete_alert_policy</a>(alias,policy_id)</tt>	Delete an alert policy using the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L491'>_alert_policy_exists</a>(policy_name)</tt>	Check to see if an alert policy exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAlertPolicy <a href=' /modules/cloud/centurylink/clc_alert_policy.py#L503'>_get_alert_policy_id</a>(module,alert_policy_name)</tt>	Retrieves the alert policy id of the account based on the name of the policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L227'>_define_module_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L247'>process_request</a>()</tt>	Execute the main code path and handle the request.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L293'>_get_policy_id_from_response</a>(response)</tt>	Method to parse out the policy id from creation response.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L306'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L334'>_ensure_firewall_policy_is_present</a>(source_account_alias,location,firewall_dict)</tt>	Ensures that a given firewall policy is present.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L384'>_ensure_firewall_policy_is_absent</a>(source_account_alias,location,firewall_dict)</tt>	Ensures that a given firewall policy is removed if present.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L413'>_create_firewall_policy</a>(source_account_alias,location,firewall_dict)</tt>	Creates the firewall policy for the given account alias.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L440'>_delete_firewall_policy</a>(source_account_alias,location,firewall_policy_id)</tt>	Deletes a given firewall policy for an account alias in a datacenter.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L462'>_update_firewall_policy</a>(source_account_alias,location,firewall_policy_id,firewall_dict)</tt>	Updates a firewall policy for a given datacenter and account alias.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L490'>_compare_get_request_with_dict</a>(response,firewall_dict)</tt>	Helper method to compare the json response for getting the firewall policy with the request parameters.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L525'>_get_firewall_policy</a>(source_account_alias,location,firewall_policy_id)</tt>	Get back details for a particular firewall policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcFirewallPolicy <a href=' /modules/cloud/centurylink/clc_firewall_policy.py#L549'>_wait_for_requests_to_complete</a>(source_account_alias,location,firewall_policy_id,wait_limit)</tt>	Waits until the clc requests are complete if the wait argument is true.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L380'>process_request</a>()</tt>	Process the request - main code path.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L409'>_define_module_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L433'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L461'>_get_servers_from_clc</a>(server_list,message)</tt>	Internal function to fetch list of clc server objects from a list of server ids.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L473'>_modify_servers</a>(server_ids)</tt>	Modify the servers configuration on the provided list.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L537'>_ensure_server_config</a>(server,server_params)</tt>	Ensures the server is updated with the provided cpu and memory.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L567'>_modify_clc_server</a>(clc,module,server_id,cpu)</tt>	Modify the memory or cpu of a clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L598'>_wait_for_requests</a>(module,request_list)</tt>	Block until server provisioning requests are completed.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L616'>_refresh_servers</a>(module,servers)</tt>	Loop through a list of servers and refresh them.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L632'>_ensure_aa_policy_present</a>(server,server_params)</tt>	Ensures the server is updated with the provided anti affinity policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L669'>_ensure_aa_policy_absent</a>(server,server_params)</tt>	Ensures the the provided anti affinity policy is removed from the server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L704'>_modify_aa_policy</a>(clc,module,acct_alias,server_id)</tt>	Modifies the anti affinity policy of the clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L729'>_delete_aa_policy</a>(clc,module,acct_alias,server_id)</tt>	Delete the anti affinity policy of the clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L753'>_get_aa_policy_id_by_name</a>(clc,module,alias,aa_policy_name)</tt>	Retrieves the anti affinity policy id of the server based on the name of the policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L783'>_get_aa_policy_id_of_server</a>(clc,module,alias,server_id)</tt>	Retrieves the anti affinity policy id of the server based on the clc server id.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L805'>_ensure_alert_policy_present</a>(server,server_params)</tt>	Ensures the server is updated with the provided alert policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L836'>_ensure_alert_policy_absent</a>(server,server_params)</tt>	Ensures the alert policy is removed from the server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L869'>_add_alert_policy_to_server</a>(clc,module,acct_alias,server_id)</tt>	Add the alert policy to clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L894'>_remove_alert_policy_to_server</a>(clc,module,acct_alias,server_id)</tt>	Remove the alert policy to the clc server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L917'>_get_alert_policy_id_by_name</a>(clc,module,alias,alert_policy_name)</tt>	Retrieves the alert policy id of the server based on the name of the policy.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcModifyServer <a href=' /modules/cloud/centurylink/clc_modify_server.py#L943'>_alert_policy_exists</a>(server,alert_policy_id)</tt>	Checks if the alert policy exists for the server.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L192'>_define_module_argument_spec</a>()</tt>	Define the argument spec for the ansible module.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L207'>process_request</a>()</tt>	Process the request - main code path.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L229'>_set_clc_credentials_from_env</a>()</tt>	Set the clc credentials on the sdk by reading environment variables.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L257'>_get_policies_for_datacenter</a>(p)</tt>	Get the policies for a datacenter by calling the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L271'>_create_policy</a>(p)</tt>	Create an anti affinity policy using the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L286'>_delete_policy</a>(p)</tt>	Delete an anti affinity policy using the clc api.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L300'>_policy_exists</a>(policy_name)</tt>	Check to see if an anti affinity policy exists.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L311'>_ensure_policy_is_absent</a>(p)</tt>	Makes sure that a policy is absent.
<tt style='background-color:#E8E8E8;'> modules.cloud.centurylink.ClcAntiAffinityPolicy <a href=' /modules/cloud/centurylink/clc_aa_policy.py#L324'>_ensure_policy_is_present</a>(p)</tt>	Ensures that a policy is present.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L550'>cloudfiles</a>(module,container_,state,meta_)</tt>	Dispatch from here to work with metadata or file objects.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_dns_record.py#L198'>rax_dns_record</a>(module,comment,data,domain)</tt>	Function for manipulating record types other than ptr.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L252'>_upload_folder</a>(cf,folder,container,ttl)</tt>	Uploads a folder to cloud files.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L267'>upload</a>(module,cf,container,src)</tt>	Uploads a single object or a folder to cloud files optionally sets an metadata ttl value expires or content-disposition and content-encoding.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L320'>download</a>(module,cf,container,src)</tt>	Download objects from cloud files to a local path specified by "dest".
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L372'>delete</a>(module,cf,container,src)</tt>	Delete specific objects by proving a single file name or a comma-separated list to src or dest but not both.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L423'>get_meta</a>(module,cf,container,src)</tt>	Get metadata for a single file comma-separated list or entire.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L463'>put_meta</a>(module,cf,container,src)</tt>	Set metadata on a container single file or comma-separated list.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L499'>delete_meta</a>(module,cf,container,src)</tt>	Removes metadata keys and values specified in meta if any deletes on.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_files_objects.py#L550'>cloudfiles</a>(module,container,src,dest)</tt>	Dispatch from here to work with metadata or file objects.
<tt style='background-color:#E8E8E8;'> modules.cloud.rackspace. <a href=' /modules/cloud/rackspace/rax_clb_nodes.py#L137'>_get_node</a>(lb,node_id,address,port)</tt>	Return a matching node.
<tt style='background-color:#E8E8E8;'> modules.utilities.logic. <a href=' /modules/utilities/logic/wait_for.py#L318'>_convert_host_to_ip</a>(host)</tt>	Perform forward dns resolution on host ip will give the same ip.
<tt style='background-color:#E8E8E8;'> modules.utilities.logic. <a href=' /modules/utilities/logic/wait_for.py#L337'>_convert_host_to_hex</a>(host)</tt>	Convert the provided host to the format in /proc/net/tcp*.
<tt style='background-color:#E8E8E8;'> modules.utilities.logic. <a href=' /modules/utilities/logic/wait_for.py#L363'>_create_connection</a>(host,port,connect_timeout)</tt>	Connect to a 2-tuple host port and return the socket object.
<tt style='background-color:#E8E8E8;'> modules.utilities.logic. <a href=' /modules/utilities/logic/async_wrapper.py#L76'>_filter_non_json_lines</a>(data)</tt>	Used to filter unrelated output around module json output like messages from tcagetattr or where dropbear spews motd on every single command which is nuts.
<tt style='background-color:#E8E8E8;'> modules.utilities.helper. <a href=' /modules/utilities/helper/_accelerate.py#L150'>get_pid_location</a>(module)</tt>	Try to find a pid directory in the common locations falling.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor_facts.py#L177'>rpc</a>(action,params)</tt>	Make a call to the logicmonitor rpc library.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor.py#L612'>do</a>(action,params)</tt>	Make a call to the logicmonitor.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor_facts.py#L216'>get_collectors</a>()</tt>	Returns a json object containing a list of.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor_facts.py#L231'>get_host_by_hostname</a>(hostname,collector)</tt>	Returns a host object for the host matching the.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor_facts.py#L265'>get_host_by_displayname</a>(displayname)</tt>	Returns a host object for the host matching the.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor_facts.py#L283'>get_collector_by_description</a>(description)</tt>	Returns a json collector object for the collector.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor_facts.py#L301'>get_group</a>(fullpath)</tt>	Returns a json group object for the group matching the.
<tt style='background-color:#E8E8E8;'> modules.monitoring.LogicMonitor <a href=' /modules/monitoring/logicmonitor_facts.py#L327'>create_group</a>(fullpath)</tt>	Recursively create a path of host groups.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L833'>__init__</a>(params,module)</tt>	Initializor for the logicmonitor collector object.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L1092'>_create</a>()</tt>	Create a new collector in the associated.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L867'>remove</a>()</tt>	Idempotent function to make sure that there is.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L875'>get_installer_binary</a>()</tt>	Download the logicmonitor collector installer binary.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L938'>install</a>()</tt>	Execute the logicmonitor installer if not.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L976'>uninstall</a>()</tt>	Uninstall logicmontitor collector from the system.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L1005'>sdt</a>()</tt>	Create a scheduled down time.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L1066'>site_facts</a>()</tt>	Output current properties information for the collector.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L1078'>_get</a>()</tt>	Returns a json object representing this collector.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Collector <a href=' /modules/monitoring/logicmonitor.py#L1130'>_unreigster</a>()</tt>	Delete this collector from the associated.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/zabbix_host.py#L188'>__init__</a>(params,module)</tt>	Initializor for the logicmonitor host object.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1235'>create</a>()</tt>	Idemopotent function to create if missing.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor_facts.py#L466'>get_properties</a>()</tt>	Returns a hash of the properties.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1269'>set_properties</a>(propertyhash)</tt>	Update the host to have the properties.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1282'>add</a>()</tt>	Add this device to monitoring.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1319'>update</a>()</tt>	This method takes changes made to this host and applies them to the corresponding host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1369'>remove</a>()</tt>	Remove this host from your logicmonitor account.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1399'>is_changed</a>()</tt>	Return true if the host doesn't.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1445'>sdt</a>()</tt>	Create a scheduled down time.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor_facts.py#L493'>site_facts</a>()</tt>	Output current properties information for the host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1520'>_build_host_hash</a>(hostname,displayname,collector,description)</tt>	Return a property formatted hash for the.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1566'>_verify_property</a>(propname)</tt>	Check with logicmonitor server to.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1596'>_compare_groups</a>(hostresp)</tt>	Function to compare the host's current.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1634'>_compare_props</a>(propresp,ignore)</tt>	Function to compare the host's current.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Host <a href=' /modules/monitoring/logicmonitor.py#L1658'>_strip_groups</a>(groups)</tt>	Function to strip whitespace from group list.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Datasource <a href=' /modules/monitoring/logicmonitor.py#L1668'>__init__</a>(params,module)</tt>	Initializor for the logicmonitor datasource object.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Datasource <a href=' /modules/monitoring/logicmonitor.py#L1680'>sdt</a>()</tt>	Create a scheduled down time.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor_facts.py#L508'>__init__</a>(params,module)</tt>	Initializor for the logicmonitor host object.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L1760'>create</a>()</tt>	Wrapper for self update().
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor_facts.py#L519'>get_properties</a>(final)</tt>	Returns a hash of the properties.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L1789'>set_properties</a>(propertyhash)</tt>	Update the host to have the properties.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L1803'>add</a>()</tt>	Idempotent function to ensure that the host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L1824'>update</a>()</tt>	Idempotent function to ensure the host group settings alertenable properties etc in the.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L1875'>remove</a>()</tt>	Idempotent function to ensure the host group.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L1905'>is_changed</a>()</tt>	Return true if the host doesn't match.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L1941'>sdt</a>(duration,starttime)</tt>	Create a scheduled down time.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor_facts.py#L543'>site_facts</a>()</tt>	Output current properties information for the hostgroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L2014'>_build_host_group_hash</a>(fullpath,description,properties,alertenable)</tt>	Return a property formatted hash for the.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Hostgroup <a href=' /modules/monitoring/logicmonitor.py#L2058'>_verify_property</a>(propname)</tt>	Check with logicmonitor server.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/logicmonitor_facts.py#L556'>selector</a>(module)</tt>	Figure out which object and which actions.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/stackdriver.py#L127'>send_deploy_event</a>(module,key,revision_id,deployed_by)</tt>	Send a deploy event to stackdriver.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/stackdriver.py#L141'>send_annotation_event</a>(module,key,msg,annotated_by)</tt>	Send an annotation event to stackdriver.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/circonus_annotation.py#L100'>post_annotation</a>(annotation,api_key)</tt>	Takes annotation dict and api_key string.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/circonus_annotation.py#L110'>create_annotation</a>(module)</tt>	Takes ansible module object.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/circonus_annotation.py#L133'>build_headers</a>(api_token)</tt>	Takes api token returns headers with it included.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/circonus_annotation.py#L141'>main</a>()</tt>	Main function dispatches logic.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L389'>_now</a>()</tt>	The time in seconds since 12 00 00am jan 1 1970.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L396'>_write_command</a>(cmd)</tt>	Write the given command to the nagios command file.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L411'>_fmt_dt_str</a>(cmd,host,duration,author)</tt>	Format an external-command downtime string.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L461'>_fmt_dt_del_str</a>(cmd,host,svc,start)</tt>	Format an external-command downtime deletion string.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L502'>_fmt_notif_str</a>(cmd,host,svc)</tt>	Format an external-command notification string.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L527'>schedule_svc_downtime</a>(host,services,minutes)</tt>	This command is used to schedule downtime for a particular service.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L549'>schedule_host_downtime</a>(host,minutes)</tt>	This command is used to schedule downtime for a particular host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L565'>schedule_host_svc_downtime</a>(host,minutes)</tt>	This command is used to schedule downtime for all services associated with a particular host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L581'>delete_host_downtime</a>(host,services,comment)</tt>	This command is used to remove scheduled downtime for a particular host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L601'>schedule_hostgroup_host_downtime</a>(hostgroup,minutes)</tt>	This command is used to schedule downtime for all hosts in a particular hostgroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L617'>schedule_hostgroup_svc_downtime</a>(hostgroup,minutes)</tt>	This command is used to schedule downtime for all services in a particular hostgroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L637'>schedule_servicegroup_host_downtime</a>(servicegroup,minutes)</tt>	This command is used to schedule downtime for all hosts in a particular servicegroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L654'>schedule_servicegroup_svc_downtime</a>(servicegroup,minutes)</tt>	This command is used to schedule downtime for all services in a particular servicegroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L675'>disable_host_svc_notifications</a>(host)</tt>	This command is used to prevent notifications from being sent out for all services on the specified host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L690'>disable_host_notifications</a>(host)</tt>	This command is used to prevent notifications from being sent out for the specified host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L705'>disable_svc_notifications</a>(host,services)</tt>	This command is used to prevent notifications from being sent out for the specified service.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L725'>disable_servicegroup_host_notifications</a>(servicegroup)</tt>	This command is used to prevent notifications from being sent out for all hosts in the specified servicegroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L740'>disable_servicegroup_svc_notifications</a>(servicegroup)</tt>	This command is used to prevent notifications from being sent out for all services in the specified servicegroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L755'>disable_hostgroup_host_notifications</a>(hostgroup)</tt>	Disables notifications for all hosts in a particular hostgroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L771'>disable_hostgroup_svc_notifications</a>(hostgroup)</tt>	Disables notifications for all services associated with hosts in a particular hostgroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L787'>enable_host_notifications</a>(host)</tt>	Enables notifications for a particular host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L801'>enable_host_svc_notifications</a>(host)</tt>	Enables notifications for all services on the specified host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L819'>enable_svc_notifications</a>(host,services)</tt>	Enables notifications for a particular service.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L845'>enable_hostgroup_host_notifications</a>(hostgroup)</tt>	Enables notifications for all hosts in a particular hostgroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L864'>enable_hostgroup_svc_notifications</a>(hostgroup)</tt>	Enables notifications for all services that are associated with hosts in a particular hostgroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L884'>enable_servicegroup_host_notifications</a>(servicegroup)</tt>	Enables notifications for all hosts that have services that are members of a particular servicegroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L904'>enable_servicegroup_svc_notifications</a>(servicegroup)</tt>	Enables notifications for all services that are members of a particular servicegroup.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L924'>silence_host</a>(host)</tt>	This command is used to prevent notifications from being sent out for the host and all services on the specified host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L952'>unsilence_host</a>(host)</tt>	This command is used to enable notifications for the host and all services on the specified host.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L980'>silence_nagios</a>()</tt>	This command is used to disable notifications for all hosts and services in nagios.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L990'>unsilence_nagios</a>()</tt>	This command is used to enable notifications for all hosts and services in nagios.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L1000'>nagios_cmd</a>(cmd)</tt>	This sends an arbitrary command to nagios.
<tt style='background-color:#E8E8E8;'> modules.monitoring.Nagios <a href=' /modules/monitoring/nagios.py#L1015'>act</a>()</tt>	Figure out what you want to do from ansible and then do the needful at the earliest.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/logentries.py#L68'>query_log_status</a>(module,le_path,path,state)</tt>	Returns whether a log is followed or not.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/logentries.py#L78'>follow_log</a>(module,le_path,logs,name)</tt>	Follows one or more logs if not already followed.
<tt style='background-color:#E8E8E8;'> modules.monitoring. <a href=' /modules/monitoring/logentries.py#L107'>unfollow_log</a>(module,le_path,logs)</tt>	Unfollows one or more logs if followed.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul_kv.py#L227'>remove_value</a>(module)</tt>	Remove the value associated with the given key if the recurse parameter.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul.py#L247'>add</a>(module)</tt>	Adds a service or a check depending on supplied configuration.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul.py#L263'>remove</a>(module)</tt>	Removes a service or a check.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul.py#L275'>add_check</a>(module,check)</tt>	Registers a check with the given agent currently there is no way.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul.py#L297'>remove_check</a>(module,check_id)</tt>	Removes a check using its id.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul.py#L308'>add_service</a>(module,service)</tt>	Registers a service with the the current agent.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul.py#L335'>remove_service</a>(module,service_id)</tt>	Deregister a service from the given agent using its service id.
<tt style='background-color:#E8E8E8;'> modules.clustering. <a href=' /modules/clustering/consul.py#L354'>get_service_by_id_or_name</a>(consul_api,service_id_or_name)</tt>	Iterate the registered services and find one with the given id.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_fs.py#L82'>get_pool</a>(module,system)</tt>	Return pool or none.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_vol.py#L91'>get_volume</a>(module,system)</tt>	Return volume or none.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_export.py#L109'>get_filesystem</a>(module,system)</tt>	Return filesystem or none.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_export.py#L118'>get_export</a>(module,system)</tt>	Retrun export if found fail module if not found.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_export_client.py#L121'>update_client</a>(module,export)</tt>	Update export client list.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_export_client.py#L159'>delete_client</a>(module,export)</tt>	Update export client list.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_export.py#L118'>get_export</a>(module,filesystem,system)</tt>	Retrun export if found when not found return none.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_export.py#L133'>update_export</a>(module,export,filesystem,system)</tt>	Create new filesystem or update existing one.
<tt style='background-color:#E8E8E8;'> modules.storage.infinidat. <a href=' /modules/storage/infinidat/infini_export.py#L158'>delete_export</a>(module,export)</tt>	Delete file system.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTUser <a href=' /modules/storage/netapp/na_cdot_user.py#L171'>get_user</a>()</tt>	Checks if the user exists.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTUser <a href=' /modules/storage/netapp/na_cdot_user.py#L243'>change_password</a>()</tt>	Changes the password.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTUserRole <a href=' /modules/storage/netapp/na_cdot_user_role.py#L131'>get_role</a>()</tt>	Checks if the role exists for specific command-directory-name.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTAggregate <a href=' /modules/storage/netapp/na_cdot_aggregate.py#L122'>get_aggr</a>()</tt>	Checks if aggregate exists.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTVolume <a href=' /modules/storage/netapp/na_cdot_volume.py#L185'>get_volume</a>()</tt>	Return details about the volume.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTVolume <a href=' /modules/storage/netapp/na_cdot_volume.py#L268'>rename_volume</a>()</tt>	Rename the volume.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTVolume <a href=' /modules/storage/netapp/na_cdot_volume.py#L292'>resize_volume</a>()</tt>	Re-size the volume.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTVolume <a href=' /modules/storage/netapp/na_cdot_volume.py#L316'>change_volume_state</a>()</tt>	Change volume's state (offline/online).
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTSVM <a href=' /modules/storage/netapp/na_cdot_svm.py#L139'>get_vserver</a>()</tt>	Checks if vserver exists.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.SolidFireVolume <a href=' /modules/storage/netapp/sf_volume_manager.py#L213'>get_volume</a>()</tt>	Return volume object if found :return details about the volume.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTQTree <a href=' /modules/storage/netapp/na_cdot_qtree.py#L127'>get_qtree</a>()</tt>	Checks if the qtree exists.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.SolidFireAccount <a href=' /modules/storage/netapp/sf_account_manager.py#L165'>get_account</a>()</tt>	Return account object if found :return details about the account.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLUN <a href=' /modules/storage/netapp/na_cdot_lun.py#L191'>get_lun</a>()</tt>	Return details about the lun.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLUN <a href=' /modules/storage/netapp/na_cdot_lun.py#L264'>create_lun</a>()</tt>	Create lun with requested name and size.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLUN <a href=' /modules/storage/netapp/na_cdot_lun.py#L281'>delete_lun</a>()</tt>	Delete requested lun.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLUN <a href=' /modules/storage/netapp/na_cdot_lun.py#L300'>resize_lun</a>()</tt>	Resize requested lun.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.SolidFireConnection <a href=' /modules/storage/netapp/sf_check_connections.py#L110'>check_mvip_connection</a>()</tt>	Check connection to mvip :return true if connection was successful false otherwise.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.SolidFireConnection <a href=' /modules/storage/netapp/sf_check_connections.py#L128'>check_svip_connection</a>()</tt>	Check connection to svip :return true if connection was successful false otherwise.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLicense <a href=' /modules/storage/netapp/na_cdot_license.py#L175'>get_licensing_status</a>()</tt>	Check licensing status.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLicense <a href=' /modules/storage/netapp/na_cdot_license.py#L202'>remove_licenses</a>(remove_list)</tt>	Remove requested licenses.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLicense <a href=' /modules/storage/netapp/na_cdot_license.py#L224'>remove_unused_licenses</a>()</tt>	Remove unused licenses.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.NetAppCDOTLicense <a href=' /modules/storage/netapp/na_cdot_license.py#L237'>remove_expired_licenses</a>()</tt>	Remove expired licenses.
<tt style='background-color:#E8E8E8;'> modules.storage.netapp.Host <a href=' /modules/storage/netapp/netapp_e_host.py#L298'>port_on_diff_host</a>(arg_port)</tt>	Checks to see if a passed in port arg is present on a different host.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure. <a href=' /modules/web_infrastructure/apache2_mod_proxy.py#L223'>regexp_extraction</a>(string,_regexp,groups)</tt>	Returns the capture group (default=1) specified in the regexp applied to the string.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.BalancerMember <a href=' /modules/web_infrastructure/apache2_mod_proxy.py#L257'>get_member_attributes</a>()</tt>	Returns a dictionary of a balancer member's attributes.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.BalancerMember <a href=' /modules/web_infrastructure/apache2_mod_proxy.py#L279'>get_member_status</a>()</tt>	Returns a dictionary of a balancer member's status attributes.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.BalancerMember <a href=' /modules/web_infrastructure/apache2_mod_proxy.py#L294'>set_member_status</a>(values)</tt>	Sets a balancer member's status attributes amongst pre-mapped values.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.Balancer <a href=' /modules/web_infrastructure/apache2_mod_proxy.py#L333'>fetch_balancer_page</a>()</tt>	Returns the balancer management html page as a string for later parsing.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.Balancer <a href=' /modules/web_infrastructure/apache2_mod_proxy.py#L347'>get_balancer_members</a>()</tt>	Returns members of the balancer as a generator object for later iteration.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure. <a href=' /modules/web_infrastructure/htpasswd.py#L127'>present</a>(dest,username,password,crypt_scheme)</tt>	Ensures user is present.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure. <a href=' /modules/web_infrastructure/htpasswd.py#L175'>absent</a>(dest,username,check_mode)</tt>	Ensures user is absent.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.EjabberdUser <a href=' /modules/web_infrastructure/ejabberd_user.py#L104'>changed</a>()</tt>	This method will check the current user and see if the password has changed.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.EjabberdUser <a href=' /modules/web_infrastructure/ejabberd_user.py#L118'>exists</a>()</tt>	This method will check to see if the supplied username exists for host specified.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.EjabberdUser <a href=' /modules/web_infrastructure/ejabberd_user.py#L132'>log</a>(entry)</tt>	This method will log information to the local syslog facility.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.EjabberdUser <a href=' /modules/web_infrastructure/ejabberd_user.py#L138'>run_command</a>(cmd,options)</tt>	This method will run the any command specified and return the.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.EjabberdUser <a href=' /modules/web_infrastructure/ejabberd_user.py#L150'>update</a>()</tt>	The update method will update the credentials for the user provided.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.EjabberdUser <a href=' /modules/web_infrastructure/ejabberd_user.py#L161'>create</a>()</tt>	The create method will create a new user on the host with the.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.EjabberdUser <a href=' /modules/web_infrastructure/ejabberd_user.py#L173'>delete</a>()</tt>	The delete method will delete the user from the host.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure. <a href=' /modules/web_infrastructure/taiga_issue.py#L139'>manage_issue</a>(module,taiga_host,project_name,issue_subject)</tt>	Method that creates/deletes issues depending whether they exist and the state desired.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure. <a href=' /modules/web_infrastructure/apache2_module.py#L153'>create_apache_identifier</a>(name)</tt>	By convention if a module is loaded via name it appears in apache2ctl -m as name_module.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure. <a href=' /modules/web_infrastructure/letsencrypt.py#L202'>get_cert_days</a>(module,cert_file)</tt>	Return the days the certificate in cert_file remains valid and -1 if the file was not found.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure. <a href=' /modules/web_infrastructure/letsencrypt.py#L225'>write_file</a>(module,dest,content)</tt>	Write content to destination file dest only if the content has changed.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEAccount <a href=' /modules/web_infrastructure/letsencrypt.py#L337'>get_keyauthorization</a>(token)</tt>	Returns the key authorization for the given token https //tools.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEAccount <a href=' /modules/web_infrastructure/letsencrypt.py#L346'>_parse_account_key</a>(key)</tt>	Parses an rsa key file in pem format and returns the modulus.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEAccount <a href=' /modules/web_infrastructure/letsencrypt.py#L363'>send_signed_request</a>(url,payload)</tt>	Sends a jws signed http post request to the acme server and returns the response as dictionary.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEAccount <a href=' /modules/web_infrastructure/letsencrypt.py#L408'>_new_reg</a>(contact)</tt>	Registers a new acme account returns true if the account was.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEAccount <a href=' /modules/web_infrastructure/letsencrypt.py#L438'>init_account</a>()</tt>	Create or update an account on the acme server as the only way.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEAccount <a href=' /modules/web_infrastructure/letsencrypt.py#L478'>get_authorizations</a>()</tt>	Return a list of currently active authorizations https //tools.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L531'>_get_csr_domains</a>()</tt>	Parse the csr and return the list of requested domains.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L549'>_get_domain_auth</a>(domain)</tt>	Get the status string of the first authorization for the given domain.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L562'>_add_or_update_auth</a>(auth)</tt>	Add or update the given authroization in the global authorizations list.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L582'>_new_authz</a>(domain)</tt>	Create a new authorization for the given domain.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L603'>_get_challenge_data</a>(auth)</tt>	Returns a dict with the data for all proposed and supported challenges of the given authorization.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L646'>_validate_challenges</a>(auth)</tt>	Validate the authorization provided in the auth dict returns true.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L698'>_new_cert</a>()</tt>	Create a new certificate based on the csr.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L717'>_der_to_pem</a>(der_cert)</tt>	Convert the der format certificate in der_cert to a pem format certificate and return it.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L725'>do_challenges</a>()</tt>	Create new authorizations for all domains of the csr and return the challenge details for the chosen challenge type.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ACMEClient <a href=' /modules/web_infrastructure/letsencrypt.py#L750'>get_certificate</a>()</tt>	Request a new certificate and write it to the destination file.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ansible_tower. <a href=' /modules/web_infrastructure/ansible_tower/tower_role.py#L149'>update_resources</a>(module,p)</tt>	Update_resources attempts to fetch any of the resources given.
<tt style='background-color:#E8E8E8;'> modules.web_infrastructure.ansible_tower. <a href=' /modules/web_infrastructure/ansible_tower/tower_job_template.py#L215'>update_fields</a>(p)</tt>	This updates the module field names to match the field names tower-cli expects to make.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyLogin <a href=' /galaxy/login.py#L76'>remove_github_token</a>()</tt>	If for some reason an ansible-galaxy token was left from a prior login remove it we cannot.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyLogin <a href=' /galaxy/login.py#L98'>create_github_token</a>()</tt>	Create a personal authorization token with a note of 'ansible-galaxy login'.
<tt style='background-color:#E8E8E8;'> galaxy. <a href=' /galaxy/api.py#L43'>g_connect</a>(method)</tt>	Wrapper to lazily initialize connection info to galaxy.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyAPI <a href=' /galaxy/api.py#L108'>_get_server_api_version</a>()</tt>	Fetches the galaxy api current version to ensure the api server is up and reachable.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyAPI <a href=' /galaxy/api.py#L129'>authenticate</a>(github_token)</tt>	Retrieve an authentication token.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyAPI <a href=' /galaxy/api.py#L140'>create_import_task</a>(github_user,github_repo,reference,role_name)</tt>	Post an import request.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyAPI <a href=' /galaxy/api.py#L160'>get_import_task</a>(task_id,github_user,github_repo)</tt>	Check the status of an import task.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyAPI <a href=' /galaxy/api.py#L176'>lookup_role_by_name</a>(role_name,notify)</tt>	Find a role by name.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyAPI <a href=' /galaxy/api.py#L198'>fetch_role_related</a>(related,role_id)</tt>	Fetch the list of related items for the given role.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyAPI <a href=' /galaxy/api.py#L219'>get_list</a>(what)</tt>	Fetch the list of items specified.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyRole <a href=' /galaxy/role.py#L85'>__repr__</a>()</tt>	Returns "rolename version " if version is not null.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyRole <a href=' /galaxy/role.py#L98'>metadata</a>()</tt>	Returns role metadata.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyRole <a href=' /galaxy/role.py#L118'>install_info</a>()</tt>	Returns role install info.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyRole <a href=' /galaxy/role.py#L137'>_write_galaxy_install_info</a>()</tt>	Writes a yaml-formatted file to the role's meta/ directory (named.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyRole <a href=' /galaxy/role.py#L159'>remove</a>()</tt>	Removes the specified role from the roles path.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyRole <a href=' /galaxy/role.py#L174'>fetch</a>(role_data)</tt>	Downloads the archived role from github to a temp location.
<tt style='background-color:#E8E8E8;'> galaxy.GalaxyRole <a href=' /galaxy/role.py#L355'>spec</a>()</tt>	Returns role spec info {.
