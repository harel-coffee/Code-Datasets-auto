function	new copy ||| copy	count=1
class	cookie jar over ||| requests cookie jar	count=1
function	[function_1] socket makefile ||| [function_1] [function_2]	count=1
function	[function_1] user ||| [function_1] [function_2]	count=3
function	[function_1] loopback ||| [function_1] [function_2]	count=1
arg	pattern ||| pattern	count=1
class	for an ||| regex	count=1
function	return urllib3 proxymanager ||| manager	count=1
class	incremented [class] counters ||| [class]	count=1
function	key associated ||| key	count=1
module	that defines ||| _vendor requests packages urllib3 packages	count=1
function	iteritems() that ||| iteritems	count=1
arg	appropriate ||| options index_urls session	count=1
arg	name and version ||| name version	count=3
module	returns ||| requests packages	count=2
class	previously made ||| set	count=1
class	by ||| path set	count=1
class	selector this must ||| base selector	count=1
function	move a ||| move	count=1
arg	paths [arg_2] ||| install [arg_1] [arg_2]	count=2
function	object fileobj' (using os ||| gettarinfo	count=1
arg	represent [arg] as ||| [arg]	count=2
function	transform [function] letters ||| [function]	count=1
function	return prefix ||| prefix	count=2
function_arg	count [arg_2] ||| [arg_2] [function_1]	count=2
arg	args into a ||| args	count=1
class	new ordered dictionary ||| ordered dict	count=2
arg	c{re} ||| pattern	count=1
class	ip address as ||| ipaddress base	count=1
function	return ||| get resource stream	count=2
function	prepare ||| prepare	count=2
function	to a file ||| path to	count=1
function	[function_1] the url ||| [function_1] [function_2]	count=1
function	return an iterator ||| get	count=1
function	terminal window ||| get terminal size	count=1
function_arg	add a [arg_2] ||| [function_1] [arg_2]	count=4
arg	path entries (default=sys path) ||| entries	count=1
arg	path_item ||| path_item	count=3
class	to the c{re compile()} ||| regex	count=1
function	:class session for ||| session	count=1
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=5
function	to insert [function_2] ||| [function_1] from [function_2]	count=1
module	the value to use ||| packages urllib3 util	count=1
module_class	[module_1] field ||| [module_1] request [class_2]	count=1
function	all distribution [function_2] ||| [function_2] [function_1]	count=2
module	returns an ||| requests packages	count=1
function	current for this ||| current	count=1
module	the _stream object no ||| distlib _backport	count=1
arg	of events to monitor ||| fileobj events data	count=1
function	[function_1] element ||| [function_2] [function_1]	count=3
module	or none ||| pkg_resources	count=2
arg	a hook ||| hook	count=1
module	a string or sequence ||| _vendor pkg_resources	count=1
module	create a base class ||| packaging	count=1
module	is normally one for ||| _vendor distlib	count=1
module	a zip file from ||| distlib	count=1
module	file [module] ||| [module]	count=1
class	compile()} function as-is ||| regex	count=1
function	as options ||| options	count=1
function	tag based on soabi ||| tag	count=1
function	[function_1] file to ||| [function_1] [function_2]	count=1
arg	the paths have the ||| paths	count=1
module	a summary of me ||| core	count=1
class	list of parsed tokens ||| parse	count=1
module	if this ||| core	count=1
arg	of fields [arg_2] ||| [arg_2] [arg_1]	count=3
arg	[arg_1] the url ||| [arg_2] [arg_1]	count=2
function	cookie ||| remove cookie	count=1
module	raise an ||| _vendor distlib	count=1
module	a set ||| distlib	count=1
function	state ||| state	count=1
function	link-local ||| link local	count=2
function_arg	[function_1] no extension ||| [function_1] filename [arg_2]	count=1
arg	a [arg] and ||| [arg]	count=1
arg	tempname ||| tempname	count=1
function	dir for ||| site config dir	count=1
class	resource files and directories ||| resource	count=1
function	is a directory ||| is	count=1
module	or if ||| core	count=1
arg	the path will be ||| path	count=1
function	[function_1] names known ||| [function_1] [function_2]	count=27
module	a character or ||| _vendor distlib	count=1
function	supported tags for ||| supported	count=1
function_arg	mode bits [arg_2] ||| [arg_2] [function_1]	count=3
function	proxymanager ||| manager	count=1
class	the different directives ||| cache controller	count=1
function	shared locations whose keys ||| shared locations	count=1
module	and host ||| requests packages urllib3	count=1
module	a file ||| _vendor	count=1
function	download url for a ||| download info	count=1
module	a random url on ||| packages urllib3	count=1
arg	events to ||| fileobj events data	count=1
module	url on ||| _vendor requests packages urllib3	count=1
module	return a ||| _vendor distlib	count=2
function	remove [function] ||| remove temporary [function]	count=1
module_class	return repr ||| _vendor linux distribution	count=1
module	a tuple path hash ||| distlib	count=1
arg	certificate ||| cert	count=1
arg	for loader_type loader_type ||| loader_type	count=1
function	return ||| get missing	count=1
class	files from [class] if ||| [class]	count=1
arg	dictionary on a given ||| key	count=1
module	same as :meth urllib3 ||| urllib3	count=1
function	[function_1] cache control ||| [function_2] [function_1]	count=1
function	transform [function] ||| [function]	count=1
function	the makefile ||| makefile filename	count=1
arg	url is a ||| url	count=1
class	address ||| ipv4address	count=4
function	is a directory containing ||| is	count=1
arg	dist_name ||| dist_name	count=1
module_class	the heading ||| core hash error	count=1
function	exports ||| exports	count=1
module	see ||| _vendor	count=2
module	:class packer ||| msgpack	count=1
function	metadata resource as ||| metadata	count=1
function	is a [function_2] ||| [function_2] [function_1]	count=7
arg	final request ||| request	count=1
function	[function_1] legacy ||| [function_1] [function_2]	count=3
function	should a ||| should include	count=1
arg	writes the ||| prefix dry_run	count=1
function	pip delete [function_2] ||| [function_1] [function_2]	count=2
module	a string that ||| distlib _backport	count=1
module	for ||| core	count=1
class	the response ||| response	count=2
module	operation ||| _vendor distlib _backport	count=2
module	reading a ||| _vendor distlib _backport	count=1
arg	lists of allowed ||| allowed	count=1
class	for each distributionpath ||| cache	count=1
arg	specifications ||| specifications options	count=1
arg	[arg_1] targetpath ||| [arg_1] [arg_2]	count=1
function	[function_1] command ||| [function_1] [function_2]	count=1
function_arg	response [arg_2] ||| [function_1] req [arg_2]	count=2
function	[function_1] makefile ||| [function_1] [function_2]	count=1
function	[function_1] dir ||| [function_2] [function_1]	count=6
module	pack object ||| msgpack	count=1
arg	names the ||| names	count=1
arg	and names the ||| names	count=1
class	made ||| uninstall path	count=1
class	exception ||| base exception	count=1
arg	[arg_1] path_item ||| [arg_2] [arg_1]	count=2
class	parameters c{pattern} ||| regex	count=1
module	arguments return [module] all configuration ||| [module]	count=1
function	prepare [function_2] ||| [function_1] [function_2]	count=1
class	object no operation should ||| stream	count=1
function	dictionary [function_2] ||| [function_1] [function_2]	count=3
function	suitable ||| process	count=1
function	[function_1] edge from ||| [function_1] [function_2]	count=1
function	untar the file (with ||| untar file	count=1
function	the parameters ||| init	count=1
class	return ||| hash	count=1
arg	filename [arg_2] ||| [arg_1] [arg_2]	count=2
module	a list of ||| _vendor distlib _backport	count=2
function	c{re compile()} function ||| init	count=1
function	object is ||| is	count=2
class	of pools ||| pool	count=1
arg	source ||| source	count=2
function_arg	[function_1] requirementset ||| [function_1] [arg_2]	count=1
module_class	[module_1] list ||| [module_1] [class_2]	count=1
function	json-encoded content of a ||| json	count=1
module	distributionpath ||| _vendor	count=1
arg	bitwise netmask args ||| prefixlen	count=1
arg	function as-is see the ||| pattern	count=1
module	fields as a ||| distlib	count=1
module	a child process passing ||| distlib	count=1
function	turn the prefix ||| ip int from prefix	count=1
class	compile()} function as-is see ||| regex	count=1
function_arg	[function_1] from ||| [function_1] [arg_2]	count=4
module	look for an ||| _vendor webencodings	count=1
module	as a name that ||| distlib	count=1
arg	fields [arg_2] ||| [arg_2] url [arg_1]	count=1
class	graph ||| dependency graph	count=3
class	standard formatter but will ||| indenting formatter	count=1
class	address as ||| base	count=1
function	for archiving and unarchiving ||| archive	count=1
function	cache path ||| path	count=1
function	[function_1] download ||| [function_1] [function_2]	count=2
arg	download_dir for ||| link download_dir	count=1
function	[function_1] dropped ||| [function_1] connection [function_2]	count=1
class	by remove() ||| path	count=1
module	packed ||| msgpack	count=1
arg	bytes ||| bytes	count=1
function	[function_1] installed ||| [function_2] [function_1]	count=1
function	the reverse [function_2] ||| [function_2] [function_1]	count=2
function	print the ||| print results	count=1
class	resource files and ||| resource	count=1
function	insert ||| insert	count=3
function	verify ||| verify	count=1
class	parse ||| linux distribution	count=3
class	return ||| distribution path	count=1
arg	of events ||| fileobj events data	count=1
function	a download url ||| download info	count=1
class	in the file ||| file	count=1
function	points to an ||| is	count=1
class	the python c{re} ||| regex	count=1
function	default user ||| default user	count=1
function_arg	cookiejar from ||| cookiejar cj cookie_dict	count=1
module	insert ||| html5lib treebuilders	count=2
class	the changes ||| uninstall path	count=1
class	over the record ||| installed	count=1
function	__reversed__() <==> reversed ||| reversed	count=1
module	if given ||| requests	count=1
function	requirements of [function] that ||| get [function]	count=1
module	a directory tree ||| _vendor distlib _backport	count=1
function	[function_1] dropped and ||| [function_2] [function_1]	count=5
module	this class is ||| _vendor	count=1
function	given distribution object is ||| is	count=1
function	the path url ||| path url	count=2
module	a decorator that defines ||| _vendor requests	count=1
function	connection is [function_2] ||| [function_1] [function_2]	count=3
module	raise an exception if ||| distlib	count=1
function	the requests tuple auth ||| auth	count=1
module	same as for ||| _vendor requests packages urllib3 packages	count=1
class	*requirement* ||| graph	count=1
class	metadata provider from ||| egg metadata	count=2
arg	a resource prefix to ||| prefix	count=1
module	as a ||| _vendor	count=2
function	<==> reversed ||| reversed	count=1
function	is the named metadata ||| metadata	count=1
function	global header ||| header	count=1
function	get the [function_2] ||| [function_1] [function_2]	count=3
class	instantiation of the option ||| option	count=1
function	venv and [function] system ||| virtualenv [function]	count=1
function	counted list of ||| counted	count=1
class	update ||| version control	count=1
function_arg	[function_1] appropriate ||| [function_1] [arg_2]	count=4
arg	bitwise netmask ||| cls prefixlen	count=1
function	installrequirement from ||| from	count=1
class	*distribution* to the graph ||| graph	count=1
class	response if any ||| response	count=1
function	proxy for ||| proxy	count=1
function	return the file ||| to file	count=1
function	to insert an ||| set insert	count=1
class	remove() ||| set	count=1
arg	the scheme ||| scheme	count=1
module	for reading a ||| _vendor distlib _backport	count=1
function	date ||| date	count=1
arg	install ||| req wheeldir user	count=1
function	fragment container - name ||| fragment	count=1
module	is ||| _vendor	count=2
class	tar ||| tar	count=1
arg	of the working_set to ||| working_set	count=1
arg	case a-z [arg] mapped to ||| [arg]	count=1
module	as a ||| _vendor distlib _backport	count=1
module_class	[module_1] file ||| [module_1] [class_2]	count=3
function	a child of the ||| append child	count=1
function	return the file cache ||| file	count=1
arg	distribution for requires ||| requires	count=1
class	address as a ||| ipaddress	count=1
arg	a :class ||| req	count=1
arg	[arg_1] input ||| [arg_2] [arg_1]	count=2
arg	resource prefix to a ||| prefix	count=1
function	to make providers for ||| loader	count=1
module	returns a key/value ||| _vendor requests	count=2
arg	given [arg] e ||| [arg]	count=1
function	samefile ||| samefile	count=1
class	record entries and returns ||| installed	count=1
function	environment variables ||| environment vars	count=2
class	the file [class_2] ||| [class_1] [class_2]	count=1
function	config [function_2] ||| [function_2] [function_1]	count=4
arg	to a [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	[module_1] distribution ||| [module_1] [class_2]	count=8
class	record entries and ||| installed distribution	count=1
module	make a ||| _vendor distlib _backport	count=1
arg	[arg_1] to extract_dir ||| [arg_1] [arg_2]	count=2
arg	values ||| filepath	count=1
class	ordered ||| ordered	count=1
function	c{flags} ||| init	count=1
function_arg	from a [arg_2] ||| [function_1] dict [arg_2]	count=1
function	is included on the ||| is	count=1
function	is the ||| is	count=1
arg	[arg_1] and last ||| [arg_1] [arg_2]	count=3
arg	last ||| last	count=1
function	[function_1] release file ||| [function_1] [function_2]	count=3
function	return the longhand version ||| exploded	count=1
function	[function_1] number ||| [function_1] [function_2]	count=6
function	read through the ||| load	count=1
class	of me for ||| hash	count=1
class	for display under the ||| hash error	count=1
class	expression ||| parser element	count=7
module	random url on the ||| requests packages urllib3	count=1
function_arg	[function_1] link points ||| [arg_2] [function_1]	count=4
function_arg	[function_1] function ||| [function_1] [arg_2]	count=1
module	this must be called ||| _vendor requests packages urllib3 util	count=1
arg	tempname this is ||| tempname	count=1
arg	the ||| pattern	count=4
module	for an ||| _vendor webencodings	count=1
function	[function_1] key associated ||| [function_2] [function_1]	count=1
function	hash value for this ||| hash	count=1
arg	url must ||| url redirect	count=2
function	to the logger ||| logger	count=1
arg	the method [arg_2] ||| [arg_1] [arg_2]	count=1
class	the entry ||| entry	count=1
function	of sys stdout ||| captured stdout	count=2
arg	object o and return ||| o	count=1
class	exception with a ||| base exception	count=1
function	python ||| init	count=1
arg	expressions ||| expr	count=1
class	of me for ||| hash error	count=1
function	data [function_2] ||| [function_1] [function_2]	count=6
function	a cookie ||| remove cookie	count=1
class	timeout clock used ||| timeout	count=1
class	this jar ||| cookie jar	count=1
function	zip ||| zipfile	count=1
module_class	[module_1] [class_2] ||| [module_1] _backport tar [class_2]	count=3
function	get the pid from ||| read pid	count=1
function	return prefix length from ||| from prefix	count=1
module	create a ||| _vendor distlib _backport	count=1
function	the specified os-release file ||| os	count=1
class	with a registered file ||| selector	count=1
class	set ||| set	count=4
function_arg	socket makefile [arg_2] ||| [arg_2] [function_1]	count=1
arg	socket object ||| address timeout	count=1
function	decodes ||| decode response unicode	count=1
arg	location and download ||| location	count=1
class	a c{parseresults} object ||| parse	count=1
function_arg	[function_1] each ||| [function_1] versions [arg_2]	count=2
class	tarinfo [class_2] ||| [class_1] [class_2]	count=4
class	is normally one ||| cache	count=1
module	request has been started ||| packages urllib3 util	count=1
function_arg	children of [arg_2] ||| [arg_2] [function_1]	count=1
class	the stream or ||| htmlunicode input stream	count=1
function	[function_1] url to ||| [function_2] [function_1]	count=2
function	handler ||| handler	count=1
module	lock ||| _vendor lockfile	count=2
class	values from the config ||| config	count=1
module	distribution as ||| _vendor	count=1
arg	connect to *address* ||| source_address socket_options	count=1
class	request with ||| request	count=1
class	ntlm ||| ntlmconnection pool	count=1
function	[function_1] the subscribers ||| [function_1] [function_2]	count=1
module	:class packer for options ||| msgpack	count=1
module	_stream ||| _vendor	count=1
module	an http ||| distlib	count=1
class	see the python ||| regex	count=1
function	look for ||| lookup	count=1
function	move a file or ||| move	count=1
class	for the ipv4 address ||| base v4	count=1
arg	to file-like object fdst ||| fdst	count=1
arg	<requests response> object from ||| resp	count=1
class	wait ||| simple scraping locator	count=1
function	urllib3 proxymanager for ||| manager for	count=1
class	undocumented method use requirement ||| requirement	count=1
class	specifier are allowed in ||| specifier	count=1
module	if this class is ||| _vendor	count=1
module	started ||| packages	count=1
arg	requirement ||| reqt	count=1
class	be a sequence of ||| set	count=1
function	slices of a ||| slices	count=1
arg	given rev_options ||| dest rev_options	count=1
function	backport of socket makefile ||| backport makefile	count=1
function	the minor version of ||| minor version	count=1
class	are passed to the ||| regex	count=1
class	for the cache ||| cache	count=1
class	return ||| iresource provider	count=1
function	[function_1] marker ||| [function_2] [function_1]	count=3
arg	the provided version ||| version	count=1
class	the exception with a ||| parse base exception	count=1
function	python version ||| python	count=1
function	dropped and ||| dropped	count=1
arg	path will ||| path	count=1
class	as a string ||| ipaddress base	count=1
module	for each distributionpath ||| _vendor	count=1
function	add the ||| add distribution	count=1
function	[function_1] children ||| [function_1] [function_2]	count=1
module	and with a ||| _vendor distlib	count=1
function	an ||| is	count=1
function	return the final fragment ||| get fragment	count=1
arg	algorithm names pointing ||| gots	count=1
function	get the installed version ||| get installed version	count=1
module	object no operation should ||| _vendor distlib	count=1
function	[function_1] [function_2] the ||| [function_2] [function_1]	count=4
function	the subnets which join ||| subnets	count=1
module_class	[module_1] wheel ||| [module_1] [class_2]	count=6
arg	default grouping [arg] ||| [arg]	count=1
function	method add ||| add	count=1
module	for [module] ||| [module]	count=1
module	started so we ||| requests packages	count=1
class	an ||| regex	count=1
arg	c{re} module for an ||| pattern	count=1
arg	of targetpath ||| targetpath	count=2
class	changes previously ||| uninstall	count=1
class	whether or not ||| base	count=1
function	locking ||| am locking	count=1
arg	potentially flush the ||| decode_content flush_decoder	count=1
function	[function] in case ||| deduce [function]	count=1
class	make ||| base v4	count=1
module	been started ||| _vendor requests packages urllib3 util	count=1
class	return a summary of ||| hash	count=1
class	stream up to but ||| stream	count=1
class	specifier ||| base specifier	count=6
arg	acceptable patterns and flags ||| pattern flags	count=1
function	nt ||| non posix	count=1
function	scheme [function] the ||| [function] scheme if	count=1
class	a pooled connection if ||| httpconnection pool	count=1
module	an item ||| requests packages urllib3 packages	count=1
function	state dir for ||| state dir	count=2
function	passed to ||| init	count=1
function	[function_1] a digest ||| [function_2] [function_1]	count=1
class	changes previously made by ||| uninstall path set	count=1
module	the _stream ||| _backport	count=1
function	named distribution ||| distribution	count=1
arg	add the tarinfo ||| tarinfo	count=1
function_arg	[function_1] of group ||| [arg_2] [function_1]	count=2
function	representation of ||| repr	count=2
module	the _stream object no ||| _vendor	count=1
function	[function_1] pip delete ||| [function_1] [function_2]	count=1
module	of a single variable ||| _vendor distlib	count=1
module	from ||| _vendor requests	count=1
arg	calls ||| installer	count=1
function	compatible with the ||| compatible	count=1
class	a pooled connection ||| httpconnection pool	count=1
class	exception with a ||| parse base exception	count=1
arg	using the paths iterable ||| paths	count=1
function	[function_1] command for ||| [function_1] [function_2]	count=1
function	does the dirty work ||| get default values	count=1
class	timeout ||| timeout	count=1
module	information from a ||| _vendor distlib	count=1
class	- ||| parser	count=5
arg	in directory order ||| wantdirs	count=1
arg	the number ||| number	count=1
module	accept and ||| requests	count=1
arg	url if applicable ||| url	count=1
function	named distribution on ||| distribution	count=1
module_class	[module_1] tarinfo ||| [module_1] _backport [class_2]	count=2
arg	write it [arg] see :class ||| o [arg]	count=1
function	the named metadata ||| metadata	count=1
class	the standard formatter ||| indenting formatter	count=1
module	object and test ||| _vendor requests	count=1
class	me for display ||| hash	count=1
module	one for each distributionpath ||| _vendor	count=1
function_arg	from a [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	of supported [arg_2] ||| [function_1] [arg_2]	count=1
function	the connection is ||| is connection	count=2
function_arg	point of [arg_2] ||| [function_1] [arg_2]	count=1
class	stream up to but ||| htmlunicode input stream	count=1
arg	parameters c{pattern} and c{flags} ||| pattern	count=1
function	distribution names known by ||| distribution names	count=1
function_arg	control [arg_2] ||| [function_1] [arg_2]	count=4
arg	member from the ||| member	count=1
module	a child process passing ||| _vendor distlib	count=1
class	distribution as a ||| distribution	count=3
function	the codename ||| codename	count=1
arg	encoding of fields based ||| fields headers	count=1
arg	are passed ||| pattern	count=1
function_arg	cache control headers ||| cache control headers	count=1
module	base class ||| packaging	count=1
arg	using the paths ||| paths	count=1
function	[function_1] version of ||| [function_2] [function_1]	count=6
function	file cache path ||| url to file path	count=1
function	are passed ||| init	count=1
class	no operation should ||| stream	count=1
arg	one chunk [arg_2] ||| [arg_2] [arg_1]	count=2
class	files from [class] if they ||| [class]	count=1
module	vcs ||| vcs	count=1
module	been started so ||| requests packages urllib3 util	count=1
arg	paths if [arg_2] ||| [arg_2] [arg_1]	count=2
arg	scheme ||| scheme	count=3
module	returns a ||| _vendor requests	count=8
function	setting a connection ||| connect	count=1
module	a base class ||| _vendor packaging	count=1
module	normally one for each ||| _vendor distlib	count=1
function	return the build number ||| build number	count=2
function	return prefix length from ||| prefix from ip int	count=1
function	c{pattern} and c{flags} ||| init	count=1
class	of the ip ||| ipaddress	count=1
function	from a [function_2] ||| [function_1] [function_2]	count=3
function	path to [function_2] ||| [function_1] [function_2]	count=2
module	an index ||| distlib	count=1
arg	fsrc [arg_2] ||| [arg_1] [arg_2]	count=1
class	line from the file ||| ex file	count=1
module	package-level ||| _vendor requests packages urllib3 contrib	count=1
module	parse ||| _vendor html5lib	count=1
function	codename for the ||| codename	count=1
function	children ||| child	count=1
function	od viewkeys() ||| viewkeys	count=1
function	working ||| working	count=1
class	stream up ||| stream	count=1
module	a single ||| distlib _backport	count=1
function	deregister a ||| deregister	count=1
function	look ||| jump to	count=1
arg	optional domain ||| default domain	count=1
function	for a given project ||| project	count=1
module	create a zip file ||| _vendor distlib _backport	count=1
arg	when being redirected we ||| prepared_request	count=1
function	[function_1] from ||| [function_2] [function_1]	count=16
arg	callback for all distributions ||| callback existing	count=1
arg	point from string src ||| cls src	count=1
class	determines if this ||| link	count=1
class	parse expression on a ||| parser element	count=1
module	a string that identifies ||| distlib _backport	count=1
module	is normally one ||| distlib	count=1
module	to a ||| distlib	count=1
module	a list of characters ||| _vendor	count=1
function_arg	make providers [arg_2] ||| [function_1] type [arg_2]	count=2
class	of the ||| ipaddress base	count=1
class	from the stream or ||| input stream	count=1
class	check if [class] ||| [class]	count=1
function	tree type required ||| tree	count=1
module	take a list of ||| distlib	count=1
module	object ||| _vendor distlib	count=1
function	converting ||| and convert	count=1
function	located under ||| distinfo	count=1
arg	config var ||| var	count=1
function	patch ||| patch	count=1
module	always returns a ||| _vendor requests	count=1
function	look for the next ||| jump to	count=1
module	and returns ||| _vendor requests	count=1
module	checks if given ||| _vendor requests packages urllib3	count=1
function	copy [function_2] ||| [function_1] [function_2]	count=4
arg	targetpath if ||| targetpath	count=1
module	distribution ||| _vendor	count=1
module	entry ||| _vendor pkg_resources	count=2
module	initialize for reading a ||| _vendor distlib	count=1
function	are passed to ||| init	count=1
function	working set and make ||| working set	count=1
module	an object and ||| _vendor requests	count=1
class	parsed results ||| parse results	count=2
arg	request of a response ||| response	count=1
module	version of a ||| _vendor distlib	count=1
function_arg	[function_1] url ||| [function_1] [arg_2]	count=3
function	copy distribution ||| copy dist	count=2
function	[function_1] path to ||| [function_2] [function_1]	count=1
arg	all the paths have ||| paths	count=1
function	[function_1] fixed ||| [function_2] [function_1]	count=2
function	return all ||| get	count=7
function	prefix length args ||| prefix	count=1
function	sleep a [function_2] ||| [function_2] [function_1]	count=4
module	a file [module] ||| [module]	count=1
module	see :class ||| _vendor	count=1
function	timeout from a ||| from	count=1
module	ssl ||| requests packages urllib3 util	count=1
module	initialize for reading a ||| distlib	count=1
class	list of ||| dict	count=1
arg	[arg_1] entry is ||| [arg_2] [arg_1]	count=2
function	packer for ||| packb	count=1
module	is ||| _vendor pkg_resources	count=1
arg	to extract_dir ||| extract_dir	count=2
arg	the same meaning as ||| cert_reqs	count=1
module	each distributionpath ||| _vendor	count=1
function_arg	path based on ||| path url filecache	count=1
function_arg	[function_1] for project_name ||| [arg_2] [function_1]	count=1
function	supported formats for ||| get unpack formats	count=1
module	if ||| core	count=3
module	a directory ||| distlib	count=2
module_class	[module_1] tar ||| [module_1] [class_2]	count=1
arg	name for reading or ||| cls name mode fileobj	count=1
class	with a registered ||| base selector	count=1
function	dist [function_2] ||| [function_2] [function_1]	count=2
arg	with [arg] incompatible ||| [arg]	count=1
module	given file-like object ||| requests packages urllib3 util	count=1
class	the ||| uninstall path set	count=1
arg	that header value is ||| header	count=1
function	:class session ||| session	count=1
function	requests tuple auth for ||| auth	count=1
function	[function_1] a file ||| [function_1] [function_2]	count=1
class	jar ||| cookie jar	count=4
function	prefix length into a ||| ip int from prefix	count=1
function_arg	[function_1] download_dir for ||| [function_1] [arg_2]	count=1
module	files ||| core	count=1
class	sort ||| package finder	count=1
function	the minor version number ||| minor version	count=1
function	config ||| config	count=3
function_arg	return absolute [function_1] [arg_2] ||| _vendor pkg_resources resource manager [function_1] path [arg_2]	count=3
class	file object ||| ex file object	count=2
module	a list of ||| distlib	count=7
module	an object and ||| requests	count=1
function	[function_1] list ||| [function_2] [function_1]	count=2
class	the jar ||| cookie jar	count=3
module	accept and host ||| requests packages urllib3	count=1
module	response ||| _vendor requests	count=2
module	no ||| distlib _backport	count=2
function	overrides the default ||| set default	count=1
arg	pkg-info format data ||| fileobject skip_unknown	count=1
module	a file ||| distlib	count=4
function	download ||| download	count=2
class	for the ipv4 ||| v4	count=1
function	assume that the server ||| read error	count=1
function_arg	[function_1] data ||| base installed distribution [function_1] hash [arg_2] hasher	count=1
function	stop after the ||| stop after	count=2
arg	if entry is unspecified ||| entry	count=1
module	if present or ||| _vendor pkg_resources	count=1
arg	[arg_1] name which ||| [arg_2] [arg_1]	count=1
module	decorator that defines __unicode__ ||| requests packages	count=1
module	given ||| _vendor requests packages	count=2
function	list of supported tags ||| supported	count=1
class	as a ||| ipaddress	count=1
function	get a digest ||| get digest	count=3
function	distribution object is ||| dist is	count=1
arg	single requirements ||| req_to_install require_hashes ignore_dependencies	count=1
function	the named resource a ||| resource	count=1
class	at most size ||| ex	count=1
class	given expression ||| parser element	count=1
function	[function_1] release ||| [function_1] [function_2]	count=3
class	me ||| hash	count=1
module	get ||| html5lib treewalkers	count=1
function	a :class session for ||| session	count=1
function	split ||| split	count=5
module	arguments return [module] ||| [module]	count=2
arg	given the first ||| first	count=1
function	path url to use ||| path url	count=1
module	a file [module] tarinfo ||| [module]	count=1
arg	link points ||| link	count=1
function	a hook ||| hook	count=1
class	*distribution* to the graph ||| dependency graph	count=1
function	remove node ||| remove	count=1
module	from an html ||| _vendor distlib	count=1
module	string or [module_2] ||| [module_1] [module_2]	count=1
function_arg	list of expressions ||| list expr	count=2
function	an address ||| address	count=1
arg	name for reading ||| name mode	count=1
module	on ||| _vendor requests packages urllib3	count=1
arg	to the ||| pattern	count=1
class	source ||| evaluator	count=1
function	a file located ||| distinfo	count=1
class	calls the standard formatter ||| formatter	count=1
module	to an ||| _vendor distlib	count=1
module	a given file-like object ||| _vendor requests	count=1
module	page and with a ||| _vendor distlib	count=1
function	remove node [function_2] ||| [function_1] [function_2]	count=2
module_class	[module_1] preparedrequest ||| [module_1] [class_2]	count=3
arg	headers returning a ||| headers	count=1
function_arg	record file [arg_2] ||| [function_1] [arg_2]	count=2
module_class	-> [class_2] ||| [module_1] ordered [class_2]	count=4
function_arg	string to [arg_2] ||| [arg_2] [function_1]	count=2
function	an ||| init	count=1
class	of a c{parseresults} ||| parse results	count=1
class	suitable manifest ||| manifests	count=1
module	explanation ||| _vendor	count=1
function	to insert [function_2] ||| [function_2] [function_1]	count=3
module	as :meth urllib3 ||| _vendor requests packages urllib3	count=1
module	no operation should ||| distlib	count=1
function	returns [function] ||| deduce [function]	count=1
class	the resource ||| resource	count=1
function	decoder ||| decoder	count=1
module_class	[module_1] file and ||| [module_1] [class_2]	count=1
function	return the file ||| file	count=1
module	:class packer ||| _vendor	count=1
arg	the target ||| target	count=1
class	over the record entries ||| installed	count=1
function	[function_1] all ||| [function_2] [function_1]	count=1
module	points [module] ||| [module]	count=1
function	connection [function_2] ||| [function_2] [function_1]	count=2
function	for a download ||| download	count=1
class	svn ||| subversion	count=1
function	of version ||| version	count=1
arg	group arches [arg] ||| [arg] minor	count=1
class	the stream up to ||| stream	count=1
function	yield ||| yield	count=1
module	package-level ||| urllib3 contrib	count=1
module	be called to ensure ||| _vendor requests packages urllib3 util	count=1
function	subnets ||| subnets	count=1
function_arg	[function_1] from src ||| [arg_2] [function_1]	count=4
module	should be ||| distlib _backport	count=1
module	a string that identifies ||| _vendor distlib	count=1
function	[function_1] treebuilder ||| [function_1] tree [function_2] treetype implementation	count=1
function	of an extracted wheel ||| wheel	count=1
arg	a piece of data ||| data	count=1
module_class	or environment ||| _vendor pkg_resources environment	count=1
function	check ||| check	count=3
arg	given http ||| params	count=1
arg	fields based on the ||| fields headers	count=1
class	stream or queue ||| input stream	count=1
function	[function_1] abi ||| [function_2] [function_1]	count=1
function	the python version in ||| requires python	count=1
function	used to insert ||| set insert	count=1
module	[module] supported arches ||| [module]	count=1
function	[function] the ||| [function]	count=5
function	and make ||| make	count=1
module	started so we ||| packages	count=1
arg	turn the ||| ip_str	count=1
class	list of parsed ||| parse results	count=1
arg	set of events ||| events	count=1
function_arg	[function_1] the number ||| [function_1] zero bits [arg_2]	count=1
module	_stream ||| distlib _backport	count=2
function	names known by ||| names	count=1
function	[function_1] from a ||| [function_2] [function_1]	count=6
module	construct ||| _backport	count=1
function	a list of integers ||| intranges from list	count=1
function	return packed bytes ||| packb	count=1
class	dictionary with ||| dict	count=1
function	encodings ||| encodings	count=1
function	prefix length into a ||| from prefix	count=1
arg	are contained within ||| prereleases	count=1
arg	of characters from the ||| characters	count=1
class	request with the given ||| request	count=1
function_arg	tuple auth [arg_2] ||| [arg_2] [function_1]	count=1
class	this locator ||| locator	count=4
function	the version is ||| check version	count=1
arg	data to ||| data	count=1
module	a given http method ||| _vendor requests	count=1
function	an error [function_2] ||| [function_2] [function_1]	count=2
arg	the old retries format ||| cls retries	count=1
class	using one cookie jar ||| requests cookie jar	count=1
function	create ||| init	count=3
class	using one cookie jar ||| cookie jar	count=1
arg	in a uri ||| uri	count=1
function	of supported ||| supported	count=1
module	a zip ||| _vendor distlib	count=1
module	normally one ||| _vendor distlib	count=1
class	the response data one ||| response	count=1
module	[module] tarinfo ||| [module]	count=1
class	ordered dictionary signature ||| ordered dict	count=1
function	split a string ||| split	count=1
function	for an ||| lookup	count=1
module	urllib3 ||| packages urllib3	count=3
arg	bitwise netmask ||| prefixlen	count=1
function	remove [function] files from ||| remove temporary [function]	count=1
module	an install ||| distlib	count=1
function	[function_1] attempt >= ||| [function_2] [function_1]	count=2
module	the _stream object no ||| _vendor distlib	count=1
function	itervalues() that returns an ||| itervalues	count=1
function	iteritems() ||| iteritems	count=1
function	minor version of the ||| minor version	count=1
class	[class_1] request with ||| [class_2] [class_1]	count=1
arg	distributions ||| distributions	count=1
class	[class_1] request ||| [class_1] [class_2]	count=1
arg	to a physical ||| set_attrs	count=1
module	cache ||| _vendor distlib	count=3
function	[function] available ||| [function]	count=1
class	as a ||| base	count=1
module	[module] not using ||| [module]	count=1
function_arg	the subscribers [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] previous attempt ||| [function_2] [function_1]	count=2
module	reading a ||| distlib _backport	count=1
class	version ||| version	count=1
function	[function_1] file url ||| [function_1] [function_2]	count=3
function	return repr ||| repr	count=1
function	of [function] that ||| get [function]	count=1
module	[module_1] a list ||| [module_1] [module_2]	count=3
class	return the ||| base	count=1
function	prefix ||| ip int from prefix	count=2
module	tarball or if ||| core	count=1
arg	minor and machine ||| minor	count=1
function	[function_1] paths in ||| [function_1] [function_2]	count=2
class	file ||| file	count=12
function	matching ||| match	count=1
module	returns ||| _vendor	count=2
class	use requirement ||| requirement	count=1
function	insert an [function_2] ||| [function_1] from [function_2]	count=1
class	stream or ||| htmlunicode input stream	count=1
module	returns true ||| _vendor requests	count=3
class	specifier like ||| base specifier	count=2
function_arg	from a [arg_2] ||| [function_1] prefix string [arg_2]	count=1
module	a file in ||| _vendor distlib	count=1
function	from netrc ||| get netrc	count=1
module	is ||| distlib	count=1
class	the two specifier like ||| base specifier	count=1
module	the named field returns ||| requests	count=1
function_arg	[function_1] paths iterable ||| [arg_2] [function_1]	count=1
function	headers from ||| from	count=1
arg	[arg_1] method ||| [arg_2] [arg_1]	count=1
function	file to ||| file	count=1
module	string or ||| _vendor pkg_resources	count=1
class	with incremented [class] counters ||| [class]	count=1
function	the current linux distribution ||| linux distribution	count=1
function	hash value ||| hash	count=1
function	the heading ||| body	count=1
function	itervalues() ||| itervalues	count=1
function	[function_1] dir for ||| [function_1] [function_2]	count=6
class	[class_1] parser possible ||| [class_2] [class_1]	count=4
arg	on the method used ||| method url	count=1
function	for archiving and unarchiving ||| get archive	count=1
function	the prefix length ||| from prefix	count=1
function	member of the same ||| same	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=206
function	column within a ||| col	count=1
arg	filesystem path for specified ||| package_or_requirement resource_name	count=1
function	turn the prefix ||| prefix	count=1
function	of sys [function_2] ||| [function_2] [function_1]	count=1
function	field into a multipart ||| multipart	count=1
module	of the ip ||| _vendor	count=1
module	and returns a ||| distlib	count=1
module	the named field returns ||| _vendor requests packages urllib3	count=1
function	list all [function_2] ||| [function_2] [function_1]	count=5
module	look for ||| webencodings	count=1
arg	[arg_1] the socket ||| [arg_2] [arg_1]	count=4
class	of ||| results	count=1
function	return prefix length from ||| prefix from	count=1
class	a metadata ||| metadata	count=1
class	return ||| ipaddress	count=1
class	working ||| working	count=3
function	versions provided by ||| provides	count=1
class	formatter but ||| formatter	count=1
module	looks for a ||| _vendor distlib	count=1
function	true if the extracted ||| is	count=1
function_arg	before [arg_2] ||| [function_1] node [arg_2]	count=4
function	download for a ||| download	count=1
module	given file-like ||| requests packages urllib3 util	count=1
function	[function_1] host ||| [function_2] [function_1]	count=5
function	a treewalker ||| walker	count=1
function	cache dir for ||| cache dir	count=1
function_arg	[function_1] message object ||| [arg_2] [function_1]	count=7
module	same as :meth urllib3 ||| packages urllib3	count=1
module	c{re compile()} function ||| _vendor	count=1
arg	of fields based ||| fields headers	count=1
module	based on ||| requests packages	count=2
function	rebuild ||| rebuild	count=1
function	the domains ||| domains	count=1
arg	[arg_1] versions ||| [arg_2] [arg_1]	count=2
arg	the url if applicable ||| url proxies	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=1282
class	if we can_add() ||| environment	count=1
class	operator ||| parser element	count=2
arg	files for ||| files	count=1
function	address is [function_2] ||| [function_1] [function_2]	count=1
function	return the [function_2] ||| [function_2] [function_1]	count=13
function	[function_1] [function_2] of the ||| [function_1] [function_2]	count=6
function	supported formats for unpacking ||| unpack formats	count=1
function	[function_1] previous attempt ||| [function_1] [function_2]	count=2
function	dependencies [function_2] ||| [function_1] [function_2]	count=1
function	initialize an ||| init	count=1
class	to the graph ||| dependency graph	count=1
function	[function_1] mapping ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] file [arg_2]	count=3
arg	next sequence of bytes ||| bytes	count=1
function	download ||| download info	count=1
module	if present or none ||| _vendor pkg_resources	count=1
function	to a file url ||| path to url	count=1
function	return prefix [function_2] ||| [function_1] [function_2]	count=1
module	pack object ||| _vendor msgpack	count=1
function	evaluate a ||| evaluate	count=1
arg	it [arg] ||| o [arg]	count=1
module	archive as ||| _backport	count=3
arg	targetpath according to tarinfo ||| tarinfo targetpath	count=2
arg	if all the paths ||| paths	count=1
module	named field returns an ||| requests packages urllib3	count=1
arg	[arg_1] targetpath if ||| [arg_2] [arg_1]	count=1
class	the ip address ||| base	count=1
arg	url ||| url proxies	count=1
module	raise an exception ||| distlib	count=1
function	the abi [function_2] ||| [function_1] [function_2]	count=1
module	operation ||| distlib _backport	count=2
class	heading ||| hash error	count=1
module	summarize [module] network ||| [module]	count=1
module	an encoding ||| _vendor webencodings	count=1
function	[function_1] proxy ||| [function_2] [function_1]	count=1
class	git ||| git	count=1
function	download url for ||| download	count=1
class	[class_1] object ||| [class_1] [class_2]	count=3
class	iterates over the record ||| installed	count=1
module_class	[module_1] set ||| [module_1] working [class_2]	count=4
function	[function_1] [function_2] found ||| [function_2] [function_1]	count=5
module	and ||| _vendor	count=1
function	the final fragment ||| fragment	count=1
function	new copy of a ||| copy	count=1
class	of ||| error	count=1
module	the object [module_2] ||| [module_2] [module_1]	count=1
module	for ||| msgpack	count=1
module	should ||| distlib _backport	count=2
module	given an ||| requests packages urllib3	count=1
function	current position in ||| position	count=1
function_arg	all [arg_2] ||| [arg_2] [function_1]	count=3
module	archive as a ||| _vendor distlib _backport	count=6
function	prefix [function_2] ||| [function_1] [function_2]	count=1
module	has been started so ||| _vendor requests packages urllib3 util	count=1
class	in the stream ||| input stream	count=1
module	see if [module_2] ||| [module_1] [module_2]	count=2
module	return packed bytes see ||| _vendor	count=1
class	for ||| error	count=1
module	the [module] scheme ||| _vendor [module]	count=1
module	packer for ||| _vendor	count=1
function_arg	add dist to ||| add dist	count=1
class	made by ||| set	count=1
module	a zip file ||| distlib	count=1
class	a registered file object ||| base selector	count=1
function	in a piece of ||| params	count=1
arg	[arg_1] tarinfo ||| [arg_2] [arg_1]	count=8
function	returns glibc [function_1] [function_2] or ||| [function_1] [function_2]	count=1
function	date string to ||| to	count=1
module_class	[module_1] field ||| [module_1] [class_2]	count=1
arg	files for posting ||| files	count=1
function	posix ||| pax	count=1
function	[function] the ||| [function] optional	count=2
module	field if present or ||| _vendor pkg_resources	count=1
class	object for member ||| file	count=1
class	[class_1] operator ||| [class_1] [class_2]	count=3
class	changes previously made by ||| set	count=1
function	parse the [function_2] ||| [function_1] [function_2]	count=2
arg	project_name this ||| project_name	count=1
module	a decorator that ||| _vendor requests	count=1
class	locator ||| locator	count=4
class	of all ||| distribution	count=1
function	of [function_2] ||| [function_2] [function_1]	count=1
function_arg	file [arg_2] ||| [arg_2] [function_1]	count=1
function	encoding ||| lookup	count=1
arg	refnode in the list ||| refnode	count=1
function	threads to terminate ||| threads	count=1
function	[function_1] version ||| [function_2] [function_1]	count=6
function	optionally converting ||| convert	count=1
function	the version field if ||| version	count=1
class	this points to ||| link	count=1
function	[function_1] after ||| [function_2] [function_1]	count=1
function	to find a ||| find requirement	count=1
function_arg	url [arg_2] ||| [arg_2] [function_1]	count=3
function	define action ||| action	count=1
function	[function] files ||| remove temporary [function]	count=1
function	html ||| strip htmltags	count=1
module	an exception if not ||| distlib	count=1
arg	a [arg_2] ||| [arg_1] [arg_2]	count=5
module	object [module_2] ||| [module_1] [module_2]	count=1
function	distro [function_2] ||| [function_2] [function_1]	count=2
function	normalize a ||| normalize	count=2
function	location ||| dist location	count=1
module	for ||| webencodings	count=1
class	one for ||| cache	count=1
class	whether or not ||| lock base	count=1
module	that defines ||| requests packages	count=1
class	the option parser possible ||| option parser	count=1
module	is ||| urllib3 util	count=1
arg	req_to_install should ||| req_to_install	count=1
arg	installed_dists ||| installed_dists	count=1
arg	point from string src ||| src dist	count=1
function	return any errors ||| get errors	count=2
class	of ||| distribution	count=1
arg	of expressions ||| expr	count=1
module	must be ||| requests packages urllib3 util	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] init user pw	count=1
module	should ||| distlib	count=1
module	a string ||| distlib	count=1
function	make a cookie ||| cookie	count=1
arg	the first [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	load [arg_2] ||| [arg_2] [function_1]	count=1
function	of the tree type ||| tree	count=1
module	the python c{re} ||| _vendor	count=1
class	tarinfo object for ||| tar file	count=2
function	[function_1] column ||| [function_1] [function_2]	count=1
function	resource ||| resource filename	count=1
module	the standard library on ||| packages	count=1
class	repr ||| linux distribution	count=1
module	of a ||| _vendor	count=1
class	the hash of the ||| hash missing	count=1
function	[function_1] makefile from ||| [function_2] [function_1]	count=1
module	a child ||| distlib	count=1
function	requests tuple auth ||| auth	count=1
function	finder ||| finder	count=1
function	and lines ||| lines	count=1
function_arg	from a ||| from line cls	count=1
class	see the python c{re} ||| regex	count=1
function	return a readable ||| get	count=1
function	sleep a random ||| random sleep	count=3
module	to a tar archive ||| distlib _backport	count=1
function	we redirect and ||| redirect	count=1
class	decimal ||| base v4	count=3
function	return url of ||| get url	count=2
module	checks if given ||| requests packages	count=1
function	valid 1xx [function] header value ||| [function]	count=1
arg	version specified in versions ||| versions	count=1
module_class	[module_1] [class_2] is opened for reading ||| [module_1] [class_2]	count=4
arg	and files ||| files	count=1
function	exported entries in ||| exported entries	count=2
arg	[arg] even ||| [arg]	count=2
class	return a summary of ||| error	count=1
function_arg	[function_1] from ||| [arg_2] [function_1]	count=4
function	[function_1] the installed ||| [function_1] [function_2]	count=1
class	cookie jar over ||| cookie jar	count=1
function	parameters ||| init	count=1
function_arg	[function_1] download_dir ||| [function_1] [arg_2]	count=1
function	process ||| proc	count=1
function_arg	netmask [arg_2] ||| [function_1] [arg_2]	count=1
arg	and path args ||| path	count=1
module	[module] absolute ||| [module]	count=1
module	get the value to ||| requests packages urllib3 util	count=1
class	the version of the [class_1] [class_2] ||| _vendor [class_1] [class_2]	count=4
class	for display under the ||| error	count=1
function	any errors ||| errors	count=1
function	[function_1] distro release ||| [function_1] [function_2]	count=1
function	a command ||| command	count=1
function	[function_1] confidence based ||| [function_1] [function_2]	count=1
function	located ||| distinfo files	count=1
class	changes previously ||| set	count=1
function	iterates over the record ||| installed files	count=1
module	return fields as a ||| distlib	count=1
function_arg	a treewalker [arg_2] ||| [arg_2] [function_1]	count=1
module	return true if given ||| utils	count=1
function	distro release [function_2] ||| [function_2] [function_1]	count=1
function_arg	dir [arg_2] ||| [function_1] [arg_2]	count=7
function_arg	marker file [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] python ||| [function_1] datetime [arg_2]	count=4
function	check if ||| check skip	count=1
function_arg	string into ||| from string cls	count=1
function_arg	length from [arg_2] ||| [arg_2] [function_1]	count=1
function	the current linux ||| linux	count=1
arg	events to ||| fileobj events	count=1
function	if unicode ||| unicode is	count=1
class	returns a ||| parse results	count=1
function	located in ||| distinfo files	count=1
function	[function] for ||| get [function]	count=1
module	-> ||| requests packages urllib3 packages	count=1
class	see the ||| regex	count=1
arg	as-is see ||| pattern	count=1
class	this locator ||| aggregating locator	count=1
function	the named script ||| script	count=1
module	remove ||| _vendor lockfile	count=1
module	address as a string ||| _vendor	count=1
function	read headers from a ||| from	count=1
class	for this specifier ||| specifier	count=1
module	certificate [module] ||| [module]	count=1
module	the named field returns ||| requests packages	count=1
function	stdout ||| stdout	count=1
module	string like abc 1 ||| packaging	count=1
module	bytes ||| _vendor	count=1
module	an install ||| _vendor distlib	count=1
module	an object and test ||| requests	count=1
module	this points to ||| core	count=1
function	list of resource ||| resource	count=1
function	update an ||| update	count=1
arg	if kwarg warner ||| maker	count=1
module	backport ||| packages backports	count=1
arg	the final request ||| request proxies	count=1
module	the value of a ||| distlib _backport	count=1
function	to a file url ||| to url	count=1
class	previously made ||| uninstall path set	count=1
function	from ||| exclude	count=1
arg	the first ||| first	count=1
module	request has been started ||| _vendor requests packages urllib3 util	count=1
function	backport of socket ||| backport	count=1
arg	a separator ||| instring maxsplit includeseparators	count=1
class	the stream ||| htmlbinary input stream	count=1
module	this must be ||| packages urllib3 util	count=1
function_arg	[function_1] url ||| [arg_2] [function_1]	count=3
function	mapping of ||| map	count=1
arg	optional domain and ||| domain	count=1
arg	stores that in private ||| include_lsb os_release_file distro_release_file	count=1
module	returns an ||| _vendor requests packages	count=1
class	to selector keys ||| selector	count=1
function	return the ||| get cache	count=1
function	for ||| packb	count=1
function_arg	registers a [arg_2] ||| [arg_2] [function_1]	count=4
function	the tree type required ||| tree	count=1
class	of me ||| hash	count=1
module_class	[module_1] object ||| [module_1] [class_2]	count=4
arg	should [arg] be ||| conn [arg] verify	count=1
function	msg ||| msg	count=1
module	a symlink or ||| _vendor distlib	count=1
arg	the paths have ||| paths	count=1
module	a filesystem or zipfile ||| pkg_resources	count=1
arg	required_by is non-empty ||| required_by	count=1
module	the value to ||| requests packages urllib3	count=1
arg	[arg_1] writing ||| [arg_2] [arg_1]	count=2
module	for a ||| _vendor distlib	count=2
class	ipv4 ||| base v4	count=1
function	record file using ||| installed files	count=1
module	this points to an ||| core	count=1
module	a zip ||| _vendor distlib _backport	count=1
class	the exception with ||| base exception	count=1
function_arg	config dir [arg_2] ||| [arg_2] [function_1]	count=2
module	get ||| _vendor html5lib treebuilders	count=1
function_arg	cache control [arg_2] ||| [function_1] [arg_2]	count=4
function	registers a ||| mount	count=1
class	return the ||| ipaddress base	count=1
module	the _stream object no ||| distlib	count=1
module	a given file-like object ||| _vendor requests packages urllib3	count=1
class	[class_1] parser ||| [class_1] [class_2]	count=4
function	url the ||| url	count=1
module	passed in [module_2] ||| [module_2] [module_1]	count=1
arg	a prefix ||| prefix	count=1
class	the exception ||| exception	count=1
arg	working_set this calls ||| installer	count=1
class	locator ||| directory locator	count=1
class	_stream object no operation ||| stream	count=1
module	and returns ||| requests	count=1
function	abi [function_2] ||| [function_1] [function_2]	count=1
module	like abc 1 twelve ||| packaging	count=1
arg	to a prefix ||| prefix	count=1
function	a prefix length args ||| prefix from	count=1
module	fields as a ||| _vendor distlib	count=1
class	must be a sequence ||| set	count=1
function_arg	[function_1] the request ||| [function_1] [arg_2]	count=1
function	the file cache path ||| file path	count=1
function	look for ||| jump to	count=1
function	log ||| log	count=1
arg	grouping [arg] ||| [arg]	count=1
module	distribution as a string ||| _vendor	count=1
function	[function_1] from ||| [function_1] [function_2]	count=4
class	previously made by remove() ||| uninstall	count=1
arg	string s to ||| s	count=1
module	the current linux distribution ||| _vendor	count=1
function_arg	verifies that [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] string s ||| [arg_2] [function_1]	count=1
class	objects to selector keys ||| base selector	count=1
module	an ||| pkg_resources	count=2
function_arg	[function_1] [arg_2] ||| [function_1] purelib name [arg_2]	count=3
class	request ||| prepared request	count=1
arg	specified ||| package_or_requirement resource_name	count=2
function	waits for [function_2] ||| [function_1] [function_2] events	count=1
class	ansi [class_2] ||| [class_1] [class_2] win32	count=1
function_arg	netmask [arg_2] ||| [arg_2] [function_1]	count=1
function	requirement ||| populate requirement	count=1
module_class	distribution or environment ||| _vendor pkg_resources environment	count=1
function	hook ||| dispatch hook	count=1
module	always returns ||| requests	count=1
function	[function_1] msg ||| [function_2] [function_1]	count=1
function	distutils [function] ||| get pypirc [function]	count=2
class	not the two specifier ||| base specifier	count=1
function	return all of the ||| get	count=1
function	verifies that ||| validity	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to re [arg_2]	count=1
module	decorator that ||| _vendor requests	count=1
function	[function_1] cache control ||| [function_1] [function_2]	count=1
function	the connection ||| connection	count=1
function	string ||| from string	count=1
function	default ||| default	count=2
function	of supported tags ||| supported	count=1
function	documentation to the ||| documentation	count=1
module	a sequence of ||| _vendor	count=1
class	formatter but will indent ||| indenting formatter	count=1
module	an pyopenssl certificate provides ||| packages urllib3	count=1
function_arg	return absolute location in [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
arg	dict of ||| value	count=1
module	or [module] not using ||| [module]	count=1
module_class	[module_1] [class_2] extended ||| [module_1] [class_2]	count=2
module	should be ||| distlib	count=1
class	or the file ||| file	count=1
function	zero ||| zero	count=1
class	feed ||| distribution analysis	count=1
function	[function_1] url ||| [function_1] [function_2]	count=8
arg	be [arg] ||| [arg] url verify	count=2
function	as an archive file ||| archive file	count=1
function	[function_1] mapping of ||| [function_1] [function_2]	count=1
function	[function_1] url to ||| [function_1] [function_2]	count=2
module	pack ||| _vendor msgpack	count=2
arg	fsrc to file-like object ||| fsrc	count=1
module	same ||| requests packages urllib3 packages	count=1
function	parse actions [function_2] ||| [function_2] [function_1] at	count=1
class	test if this address ||| ipv4address	count=1
module	normally ||| _vendor distlib	count=2
function	obtain the url ||| url	count=1
module	the ip address as ||| _vendor	count=1
function	wrapper ||| wrapper	count=1
class	tell whether or not ||| lock base	count=1
arg	the distribution currently satisfying ||| auto_confirm	count=1
function	read one character from ||| char	count=1
module	for an encoding ||| _vendor	count=1
function_arg	[function_1] a hook ||| [function_1] [arg_2]	count=1
function	yields tuples ||| get full refs	count=1
class	of the [class_1] [class_2] ||| [class_1] [class_2]	count=12
arg	a name ||| cls name	count=2
function_arg	[function_1] path or ||| [function_1] [arg_2]	count=1
function	the decoder is actually ||| decoder	count=1
arg	and closing tag expressions ||| tagstr	count=1
module	group, or ||| pkg_resources	count=1
arg	piece of data ||| data	count=1
function	[function_1] the name ||| support [function_1] backend [function_2]	count=1
function	file located ||| distinfo	count=1
module	returns a ||| _vendor distlib	count=4
module	made ||| req	count=1
module	always returns a ||| _vendor requests packages	count=2
class	the config ||| config	count=1
function	our cached value ||| cached response	count=1
class	of the [class_1] [class_2] ||| _vendor [class_1] [class_2]	count=12
class	the ip ||| ipaddress	count=1
class	the hash ||| hash missing	count=1
function	ensure that ||| ensure	count=1
class	to the finder ||| finder	count=1
function	is a package ||| is package	count=3
function	unpack tar/tar [function_2] ||| [function_2] [function_1]	count=1
class	points to an ||| link	count=1
function_arg	[function_1] non-empty/non-comment ||| [function_1] lines [arg_2]	count=1
arg	converts a resource prefix ||| prefix	count=1
function	return confidence based ||| get confidence	count=2
module	hold a gnu longname ||| distlib	count=1
arg	of sockets or optionally ||| socks	count=3
function	header ||| unquote header	count=1
arg	node ||| node	count=1
module	if given ||| requests packages urllib3	count=1
function_arg	[function_1] for each ||| [function_1] versions [arg_2]	count=3
function	message for problems extracting ||| extraction	count=1
function	new timeout from a ||| from	count=1
class	return ||| py pijsonlocator	count=1
module	unpack ||| distlib _backport	count=2
function	a download url for ||| to download	count=1
module_class	given preparedrequest ||| requests session	count=1
function	overrides the default keyword ||| default keyword	count=1
module	decorator that defines ||| requests packages urllib3 packages	count=1
class	object ||| lock base	count=1
function	have been met ||| met	count=1
function_arg	the subscribers [arg_2] ||| [arg_2] [function_1]	count=1
arg	dist_name avoiding pkg_resources cache ||| dist_name lookup_dirs	count=1
module_class	a wheel ||| _vendor distlib wheel	count=1
class	made by ||| uninstall	count=1
module	look for an encoding ||| _vendor webencodings	count=1
class	metadata ||| imetadata provider	count=1
class	the parameters c{pattern} ||| regex	count=1
class	name in the cache ||| cache	count=1
arg	targetpath according [arg_2] ||| [arg_2] [arg_1]	count=4
arg	required_by is non-empty return ||| required_by	count=1
module	object ||| _vendor	count=3
function	[function_1] url ||| [function_2] [function_1]	count=8
function	[function_1] all distribution ||| [function_2] [function_1]	count=1
function	c{pattern} ||| init	count=1
module_class	a gnu [class_2] ||| [module_1] [class_2]	count=1
arg	*address* and ||| source_address socket_options	count=1
function	[function_1] [function_2] ||| [function_1] connection [function_2]	count=3
function	list of integers as ||| list	count=1
module	that defines __unicode__ ||| requests packages urllib3 packages	count=1
arg	group ||| group	count=1
class	repo ||| control	count=1
class	the ip address ||| ipaddress base	count=1
arg	encoding by its label ||| label	count=1
module	given a string and ||| _vendor requests	count=1
class	[class_1] sequences ||| [class_1] [class_2] win32	count=2
arg	first [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] a metaclass ||| [function_2] [function_1]	count=1
class	with a registered ||| selector	count=1
function	iterator ||| iter	count=1
function	string containing ||| string	count=1
function	return a readable ||| get resource stream	count=1
arg	not ||| url	count=1
module	be ||| distlib	count=1
function	helper function to format ||| format	count=1
function	supported formats for ||| unpack formats	count=1
class	whether or not the ||| lock base	count=1
arg	the socket ||| timeout	count=1
module_class	is protected [module_1] [class_2] ||| [module_1] [class_2]	count=1
module	look ||| _vendor webencodings	count=2
arg	dictionary on a ||| key	count=1
function_arg	[function_1] a key/value ||| [function_1] dict [arg_2]	count=1
class	over the record ||| installed distribution	count=1
arg	closing tag expressions ||| tagstr	count=1
function	a string containing ||| resource string	count=1
class	a response as an ||| response	count=1
function	create a package ||| package	count=1
class	point from ||| point	count=1
function	list ||| list	count=3
module	each ||| distlib	count=1
function	decode ||| decode	count=3
arg	text and ||| text	count=1
class	of ||| parse	count=1
class	two specifier like objects ||| base specifier	count=1
function	return a dict of ||| get	count=1
arg	physical ||| set_attrs	count=1
class	stream or ||| stream	count=1
function	dropped ||| dropped	count=1
arg	corresponding to the scheme ||| name scheme vars expand	count=1
arg	dist_name [arg_2] ||| [arg_1] [arg_2]	count=1
class	the option ||| option	count=1
module	character ||| _vendor requests packages chardet	count=1
module	if an ||| _vendor distlib	count=2
function	extract the tarinfo object ||| extract member	count=1
function	passed in ||| write	count=1
module	a tuple containing the ||| distlib	count=2
module	an ||| treebuilders	count=1
function	entry point ||| entry point	count=2
class	given expression as ||| parser element	count=1
class	jar ||| jar	count=5
module	returns an ||| distlib	count=1
module	of a distribution or ||| pkg_resources	count=1
arg	[arg_1] prefix ||| [arg_2] [arg_1]	count=2
arg	fsrc to [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function] letters to ||| [function]	count=1
arg	tarinfo [arg_2] ||| [arg_2] [arg_1]	count=1
function	run ||| run command	count=2
class	stream or queue ||| htmlunicode input stream	count=1
arg	iterable of items and ||| iterable	count=1
function	html source ||| strip htmltags	count=1
module	filesystem or zipfile ||| pkg_resources	count=1
module	based on the ||| requests packages	count=1
class	specifier like ||| specifier	count=2
function	for ||| for	count=2
module	on the ||| requests packages urllib3	count=1
arg	size is ||| size	count=2
function	and unarchiving ||| archive	count=1
class	this requirement ||| install requirement	count=2
class	no longer [class] possible ||| [class]	count=1
module	a file path ||| distlib	count=1
function_arg	range given [arg_2] ||| [function_1] [arg_2]	count=3
module	the value ||| _vendor requests packages urllib3	count=2
function	list ||| intranges from list	count=1
arg	(reversal of :func quote_header_value) ||| is_filename	count=1
function	open gzip compressed ||| gzopen	count=1
function	sleep a fixed ||| fixed sleep	count=3
class	formatter but ||| indenting formatter	count=1
module	a single variable using ||| _vendor distlib _backport	count=1
module	_stream ||| distlib	count=1
function	file ||| url to file	count=1
arg	postprocessing of tempname this ||| tempname	count=1
function	quickly disabling ||| disable	count=1
function	the record file ||| installed	count=1
function_arg	[function_1] all headers ||| [arg_2] [function_1]	count=1
class	of me ||| hash error	count=1
arg	port ||| port	count=1
class	update ||| cache controller	count=1
class	exception ||| parse base exception	count=1
function	the longhand version of ||| exploded	count=1
class	if we can_add() it ||| environment	count=1
arg	and c{flags} are passed ||| pattern	count=1
arg	possibly ||| importer path_item only	count=1
class	from the stream up ||| htmlunicode input stream	count=1
module	make a ||| distlib	count=4
arg	from ||| info	count=1
module	as-is see the python ||| _vendor	count=1
module	request has been ||| urllib3 util	count=1
module	returns ||| requests	count=13
function	paths names ||| path names	count=1
arg	[arg_1] or writing ||| [arg_1] [arg_2]	count=2
arg	writes ||| prefix dry_run	count=1
arg	on the native filesystem ||| pathname	count=1
class	c{re} module for an ||| regex	count=1
arg	sockets or optionally a ||| socks timeout	count=2
arg	method [arg_2] ||| [arg_2] [arg_1]	count=1
module	a string ||| _vendor	count=3
function_arg	uninstall [arg_2] ||| [arg_2] [function_1]	count=1
function	given project ||| project	count=1
function_arg	[function_1] the path ||| [function_1] [arg_2]	count=7
function	archiving and unarchiving ||| archive	count=1
class	should be ||| stream	count=1
module	object and ||| _vendor requests	count=1
function	named metadata resource as ||| metadata	count=1
module_class	request [class_2] ||| [module_1] request [class_2]	count=1
function_arg	cache path [arg_2] ||| [arg_2] [function_1]	count=3
module	and ||| requests	count=11
function	location in [function] for archive_name ||| get [function]	count=1
class	:class preparedrequest <preparedrequest> ||| request	count=1
function	specific [function] in the ||| match only at [function]	count=1
function	the exported entries ||| exported entries	count=2
module	passed in and ||| _vendor requests packages urllib3	count=1
function_arg	current for [arg_2] ||| [function_1] file_path [arg_2]	count=1
module_class	[module_1] [class_2] from ||| [module_1] [class_2] win32	count=1
class	tell whether ||| lock base	count=1
function	name of [function_2] ||| [function_2] [function_1]	count=4
function	itervalues() that ||| itervalues	count=1
function	verify a ||| verify	count=1
function	bits atime mtime flags ||| copystat	count=1
function	of parsed [function_2] ||| [function_2] [function_1]	count=1
function	connection is dropped ||| is connection dropped	count=2
function	[function_1] name ||| support [function_1] backend [function_2]	count=1
function_arg	remove a [arg_2] ||| [function_1] event [arg_2]	count=1
function	dependencies have been met ||| dependencies met	count=1
function_arg	the record [arg_2] ||| [arg_2] [function_1]	count=1
function	distro [function_2] ||| [function_1] [function_2]	count=2
arg	this calls ||| installer	count=1
arg	[arg_1] writing ||| [arg_1] [arg_2]	count=2
module	this method ||| requests	count=1
module	an item ||| packages	count=1
function	is current ||| is current	count=1
module	insert before ||| html5lib treebuilders	count=1
arg	is either 'r' ||| name mode fileobj format	count=1
module	the accept and host ||| requests packages urllib3	count=1
arg	url ||| url rev_options	count=1
function	[function_1] an element ||| [function_1] from [function_2]	count=4
function_arg	register [arg_2] ||| [arg_2] [function_1]	count=1
arg	text and optionally ||| text	count=1
function	current linux [function_2] ||| [function_2] [function_1]	count=1
arg	optional domain [arg] ||| domain [arg]	count=1
module	decorator that ||| _vendor requests packages urllib3 packages	count=1
function_arg	[function_1] [arg_2] ||| [function_1] url [arg_2]	count=10
arg	set [arg] k ||| [arg]	count=1
module	default converter [module] the ||| _vendor [module]	count=1
function	the cache [function_2] ||| [function_2] [function_1]	count=1
module	that defines __unicode__ and ||| requests	count=1
class	pooled connection ||| httpconnection pool	count=1
class	deletes a cookie ||| cookie	count=1
function	base ||| cache base	count=1
function	length from ||| prefix from	count=1
function	given just ||| make	count=1
function	repr of all ||| repr	count=1
arg	[arg_1] location ||| [arg_2] [arg_1]	count=2
module	single ||| webencodings	count=2
class	the dist-info directory ||| installed distribution	count=1
arg	either 'r' to ||| format	count=1
function	the output of sys ||| captured	count=1
function	unquotes a header ||| header	count=1
arg	the c{re ||| pattern	count=1
function	determines ||| is	count=1
module	get the value ||| _vendor requests packages urllib3	count=1
class	of ||| linux distribution	count=1
arg	url they came from ||| url	count=1
class	ansi ||| ansi	count=1
module	the _stream object ||| _backport	count=1
function_arg	a digest [arg_2] ||| [arg_2] [function_1]	count=4
module	on the ||| packages	count=3
class	from the pool ||| pool	count=1
class	the ||| regex	count=4
function	[function_1] a package ||| [function_1] [function_2]	count=1
module	initialize for reading a ||| _vendor distlib _backport	count=1
module	value to ||| _vendor requests packages urllib3	count=1
arg	to ||| pattern	count=1
module	return ||| _vendor	count=4
function	netmask ||| netmask	count=1
arg	a urllib3 ||| connections maxsize	count=1
function_arg	data [arg_2] ||| [function_1] [arg_2]	count=3
module	return a ||| _vendor distlib _backport	count=4
function_arg	[function_1] current node ||| [function_1] [arg_2]	count=5
function	c{re compile()} ||| init	count=1
function	uninstall ||| uninstall	count=1
module_class	a shell-like ||| _vendor distlib manifest	count=1
module	decorator that defines __unicode__ ||| requests packages urllib3	count=1
class	by remove() ||| uninstall path set	count=1
function	[function_1] finder ||| [function_1] [function_2]	count=3
module_class	a [class_2] ||| [module_1] legacy [class_2]	count=1
function	previous attempt ||| attempt	count=1
module	made by ||| req	count=1
function	the prefix ||| ip int from prefix	count=1
function	[function] events to ||| [function]	count=2
arg	initializes a urllib3 ||| connections maxsize block	count=1
module_class	[module_1] [class_2] for reading ||| [module_1] [class_2]	count=7
function	prepare the master working ||| master working	count=1
module	points to ||| core	count=1
function	urllib3 proxymanager [function_2] ||| [function_1] [function_2]	count=1
function	return true if the ||| root is	count=1
function	turn the prefix length ||| int from prefix	count=1
module	pack [module] o ||| [module]	count=1
function	write a ||| write	count=1
module	for a file ||| _vendor distlib	count=1
function	[function_1] [function_2] ||| [function_1] tree [function_2]	count=1
function	stop [function_2] ||| [function_2] [function_1]	count=6
module	to a ||| _vendor distlib	count=1
class	of me for display ||| error	count=1
function	pack object ||| packb	count=1
arg	fdst ||| fdst	count=1
module	started so ||| requests packages	count=1
module	see :class packer for ||| msgpack	count=1
function	verifies ||| validity	count=1
function	process a single ||| process	count=1
module	returns [module_2] ||| [module_2] [module_1]	count=5
function	the default ||| default	count=2
function	dependencies [function_2] ||| [function_2] [function_1]	count=1
function	data ||| data	count=3
function	the path to ||| path	count=1
module	ordered ||| urllib3 packages	count=1
arg	[arg_1] the input ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] path_item [arg_2]	count=2
module_class	[module_1] [class_2] ||| [module_1] legacy [class_2]	count=1
module	is the same as ||| packages urllib3 packages	count=1
function	to a path ||| to path	count=3
function	range ||| range	count=1
function	the default user agent ||| default user agent	count=1
function	authentication [function_2] ||| [function_2] [function_1]	count=1
function_arg	in [arg_2] ||| [function_1] [arg_2]	count=1
function	stop after the previous ||| stop after	count=1
arg	builds a :class ||| req	count=1
function_arg	[function_1] function for ||| [function_1] [arg_2]	count=1
function	[function] class ||| get tree [function]	count=1
function	with a metaclass ||| with metaclass	count=3
function	[function_1] map ||| [function_2] [function_1]	count=1
function	[function_1] from given ||| [function_1] [function_2]	count=1
function	wheel ||| wheel	count=2
class	link from ||| link	count=1
function	[function_1] package ||| [function_1] [function_2]	count=1
module	normally ||| distlib	count=1
function	initialise an instance ||| init	count=2
class	can_add() ||| environment	count=1
class	location of the exception ||| exception	count=1
function	[function_1] attempt >= ||| [function_1] [function_2]	count=2
class	we can_add() it and ||| environment	count=1
class	of the ip address ||| ipaddress	count=1
arg	also supports optional domain ||| default domain	count=1
function	the installed [function_2] ||| [function_1] [function_2]	count=2
module	be a string or ||| pkg_resources	count=1
class	the _stream object ||| stream	count=1
arg	to stream ||| stream	count=1
function	add an ||| add	count=1
function	:class ||| packb	count=1
module_class	[module_1] gnu tar ||| [module_1] _backport [class_2] info	count=1
function	returns [function] in ||| deduce [function]	count=1
module_class	[module_1] perform an ||| [module_1] [class_2]	count=2
function	__iter__() <==> iter ||| iter	count=1
class	using :meth urlopen ||| methods	count=2
arg	the given http ||| params	count=1
arg	of targetpath according ||| targetpath	count=2
function	send a request ||| send	count=1
module	given ||| requests packages	count=3
function	os-release file ||| os	count=2
function	:class packer ||| packb	count=1
function	hash value for ||| hash	count=1
class	return a ||| hash	count=1
module	the value to use ||| requests packages urllib3 util	count=1
function	to split a ||| split	count=2
function	computing the current backoff ||| get backoff	count=1
arg	resource prefix ||| prefix	count=1
class	subnets ||| base network	count=1
module	:class packer for ||| msgpack	count=1
function	supported formats [function_2] ||| [function_2] [function_1]	count=2
function	select a proxy for ||| select proxy	count=1
function	[function] them ||| write [function]	count=2
module	or [module] not ||| [module]	count=1
module	of all ||| _vendor	count=1
function	tree with built-in ||| tree	count=1
class	the changes ||| uninstall	count=1
function	a file url ||| url	count=1
function_arg	remove a [arg_2] ||| [arg_2] [function_1]	count=2
function	json-encoded content of ||| json	count=1
class	ordered dictionary with ||| ordered dict	count=1
arg	of allowed ||| allowed	count=1
class	is ||| zip provider	count=1
function	return all of ||| get	count=1
arg	of events ||| events data	count=1
function_arg	wrapper [arg_2] ||| [function_1] [arg_2]	count=4
function	is reserved for link-local ||| is link local	count=2
function_arg	digest from a ||| digest info	count=1
function	named distribution on the ||| get distribution	count=1
function	iterator for the subscribers ||| subscribers	count=1
arg	file object from source ||| source	count=1
module	construct [module_2] ||| [module_1] [module_2]	count=1
function_arg	path samefile [arg_2] ||| [arg_2] [function_1]	count=1
class	the exception with ||| exception	count=1
module	as a name ||| _vendor distlib	count=1
class	the ip address ||| ipaddress	count=1
function	file cache path ||| file path	count=1
function_arg	write [arg_2] ||| [function_1] [arg_2]	count=3
function	function as-is see ||| init	count=1
function	file or ||| file	count=1
arg	fields based on the ||| fields	count=1
class	object ||| file	count=2
function	split a ||| split	count=3
function	random ||| random	count=1
class	stream if ||| stream	count=3
function	[function_1] column ||| [function_2] [function_1]	count=1
function	fragment container - ||| fragment	count=1
function_arg	[function_1] a numeric ||| [function_1] string [arg_2]	count=2
arg	the native filesystem ||| pathname	count=1
module	detection ||| _vendor html5lib	count=1
function	located under ||| distinfo file	count=1
arg	of dist_name [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] dist ||| [function_1] [arg_2]	count=2
arg	an iterable ||| iterable	count=1
function	for an ||| init	count=1
class	if this distribution ||| distribution	count=1
module	no operation should ||| _backport	count=1
arg	path args in ||| path	count=1
module	if given ||| requests packages	count=1
arg	tarinfo ||| tarinfo	count=3
class	a c{parseresults} ||| parse results	count=1
function	from the children ||| child	count=1
function	key/value dictionary [function_2] ||| [function_1] [function_2]	count=3
arg	registers an ||| extensions function extra_args	count=1
function	this points to ||| is	count=1
class	[class_1] [class_2] from ||| [class_1] [class_2] win32	count=2
module	no operation ||| distlib	count=1
class	registered file ||| base selector	count=1
module	no operation should be ||| _vendor distlib	count=1
function	subnets which join to ||| subnets	count=1
function	[function_1] list ||| [function_1] [function_2]	count=2
module	packed bytes see ||| msgpack	count=1
module_class	of a distribution ||| _vendor distlib locator	count=1
module	object as a ||| _vendor distlib	count=1
function	current linux ||| linux	count=1
function	the files ||| files	count=1
class	the given parse expression ||| parser element	count=1
function_arg	[function_1] single requirements ||| [function_1] file [arg_2]	count=1
module	for an ||| webencodings	count=1
module	_stream object ||| _backport	count=1
function	[function] or ||| glibc [function]	count=1
module	a string or a ||| _vendor pkg_resources	count=1
class	the hash ||| hash	count=1
class	summary of ||| hash error	count=1
module	that ||| _vendor requests packages	count=1
module	look ||| _vendor	count=1
module	are passed to the ||| _vendor	count=1
function	tarball or ||| is	count=1
arg	[arg] as ||| [arg]	count=2
function	none ||| link	count=1
function_arg	command name ||| commands name	count=1
function	the address is ||| is	count=1
function	[function_1] the domains ||| [function_1] [function_2]	count=3
module	a set ||| _vendor distlib	count=1
module	packed bytes see ||| _vendor	count=1
module	recursively generate a ||| _vendor distlib	count=2
module	value to use ||| packages urllib3	count=1
arg	of tempname this ||| tempname filename	count=1
function_arg	[function_1] path will ||| [function_1] [arg_2]	count=7
module	a list ||| _vendor distlib _backport	count=2
class	the changes ||| set	count=1
function	write the [function_2] ||| [function_2] [function_1]	count=3
function_arg	list of [arg_2] ||| [arg_2] [function_1]	count=1
module	process a ||| _vendor distlib _backport	count=1
function	timeout ||| get timeout	count=1
function	used to insert an ||| insert	count=1
class	[class_1] [class_2] when tarfile is opened ||| [class_1] [class_2] next	count=1
arg	supports optional domain ||| name default domain	count=1
function	write the pid ||| write	count=1
arg	name for reading or ||| name	count=3
module	and returns a tuple ||| distlib	count=1
function	[function_1] is identical ||| [function_2] [function_1]	count=8
function	is currently ||| is locked	count=2
function	metadata resource ||| metadata	count=1
class	two specifier like objects ||| specifier	count=1
function	return the entry ||| get	count=1
module_class	a source ||| _vendor distlib evaluator	count=1
class	write ||| legacy metadata	count=1
arg	is ||| string	count=1
arg	string of characters ||| characters	count=1
module	create a ||| _vendor distlib	count=2
function	supported formats for unpacking ||| get unpack formats	count=1
function	[function_1] link_path ||| [function_2] [function_1]	count=2
module	if the given ||| _vendor requests packages urllib3	count=1
function	entries in ||| entries	count=1
arg	the python ||| pattern	count=1
arg	some [arg] using ||| [arg]	count=1
class	prepares the entire ||| prepared	count=1
arg	*address* and [arg_2] ||| [arg_2] [arg_1]	count=4
arg	based on [arg_2] ||| [arg_2] [arg_1]	count=2
arg	fields and files for ||| fields files	count=1
arg	mode' is either 'r' ||| name mode fileobj format	count=1
function	return a name ||| get	count=1
arg	headers returning a dictionary ||| headers	count=1
module	of a symlink ||| _vendor distlib _backport	count=1
module	returns a tuple path ||| _vendor distlib	count=1
function	point of ||| point	count=1
arg	extended ||| pax_headers	count=1
function_arg	[function_1] zip_path ||| [function_1] file_path [arg_2]	count=2
function	itervalues() that returns ||| itervalues	count=1
class	display ||| error	count=1
function_arg	[function_1] [arg_2] ||| [function_1] event [arg_2]	count=2
module	named field returns an ||| _vendor requests packages	count=1
module	checks if given ||| requests packages urllib3	count=1
function_arg	registers [arg_2] ||| [function_1] prefix [arg_2]	count=2
class	dictionary with keys from ||| dict	count=1
module	object no operation should ||| distlib	count=1
module	on the ||| requests packages	count=2
function	url ||| request url	count=1
arg	paths have ||| paths	count=1
function	str representation of this ||| str	count=1
module	should be ||| _backport	count=1
module	the lock ||| lockfile	count=1
function	for transmission ||| prepare	count=2
module	return a summary ||| core	count=1
function	tuple auth ||| auth	count=1
function_arg	package finder [arg_2] ||| [function_1] [arg_2]	count=3
function	token ||| normalize token	count=1
function	normalize a file/dir ||| normalize	count=1
function	the first found delimiter ||| first	count=1
module	get the value ||| requests packages urllib3	count=1
module	convert a file ||| core	count=1
module	packed bytes ||| _vendor msgpack	count=1
arg	name which might ||| name	count=1
arg	is either 'r' ||| format	count=1
function_arg	// [arg_2] ||| [arg_2] [function_1]	count=3
class	return a summary ||| error	count=1
function	record file using ||| installed	count=1
module	a list of ||| core	count=2
arg	[arg] method ||| var [arg] expected	count=2
function_arg	from [arg_2] ||| [function_1] dict [arg_2]	count=1
class	of the ip address ||| base	count=1
function	[function] of the ||| [function]	count=10
class	to the c{re ||| regex	count=1
module_class	[module_1] point ||| [module_1] entry [class_2]	count=1
function	c{re} module ||| init	count=1
class	standard formatter but ||| formatter	count=1
class	by ||| uninstall path	count=1
module	been started ||| packages urllib3 util	count=1
module	g numpy or ||| pkg_resources	count=1
arg	old retries format ||| retries redirect	count=1
function	counted list ||| counted	count=1
function	[function_1] unspecified ||| [function_1] [function_2]	count=3
class	the changes previously ||| uninstall path	count=1
function	matches ||| match	count=1
function	fixed ||| fixed	count=1
class	point from its module ||| point	count=1
function	options ||| packb	count=1
function	closes all adapters and ||| close	count=1
module	c{pattern} and ||| _vendor	count=1
module	backport ||| _vendor requests packages urllib3 packages backports	count=1
class	[class_1] [class_2] when tarfile is opened ||| [class_1] [class_2]	count=1
class	linux ||| linux	count=9
module	returns response ||| requests	count=2
class	over the record entries ||| installed distribution	count=1
function	stream decodes ||| stream decode response unicode	count=1
function	return true if ||| root is	count=1
function	topological sort of ||| topological sort	count=2
class	to this locator ||| simple scraping locator	count=1
function	[function_1] msg ||| req deduce [function_1] [function_2]	count=1
class	perform a ||| httpconnection	count=1
class	*requirement* for the given ||| graph	count=1
function_arg	hook dictionary on ||| dispatch hook key	count=1
function_arg	[function_1] of dist_name ||| [arg_2] [function_1]	count=4
function	unsets a cookie ||| cookie	count=1
module	blocks that hold a ||| distlib	count=1
module	given file-like object ||| requests packages	count=1
class	previously made by ||| uninstall path set	count=1
function	located in ||| distinfo	count=1
module	posting to an http ||| _vendor distlib	count=1
function	and c{flags} are ||| init	count=1
arg	on the method ||| method	count=1
arg	of fields based on ||| fields headers	count=1
class	previously ||| path set	count=1
function	[function_1] gz/tar bz2 ||| [function_2] [function_1]	count=1
module	been ||| urllib3 util	count=2
class	this address ||| base network	count=1
function	url of ||| url	count=1
function	allows you ||| iter	count=1
arg	[arg_1] name which ||| [arg_1] [arg_2]	count=1
module	takes a string like ||| _vendor packaging	count=1
arg	see the python c{re} ||| pattern	count=1
module	same version of a ||| _vendor distlib	count=1
function	edge from distribution *x* ||| edge	count=1
module	[module_1] given ||| [module_1] [module_2]	count=8
function_arg	[function_1] subscriber ||| [function_1] event [arg_2]	count=2
class	network ||| base network	count=1
function	for each line if ||| list	count=1
function	"rel" attribute [function] queued ||| [function]	count=1
arg	provided version ||| version	count=1
module	determines ||| core	count=1
function	build number of the ||| build number	count=1
module	if the lock ||| _vendor lockfile	count=1
function_arg	[function_1] path exists ||| [function_1] [arg_2]	count=1
arg	characters ||| characters opposite	count=1
function	in ||| in	count=2
arg	to tarfile's mode ||| mode	count=1
class	to ||| regex	count=1
class	held ||| pidlock file	count=1
module	a list ||| distlib _backport	count=2
module	_stream ||| _backport	count=1
class	a string ||| ipaddress	count=1
arg	registers an ||| function extra_args description	count=1
function	change the method ||| method	count=1
function_arg	deregister a [arg_2] ||| [arg_2] [function_1]	count=1
arg	the parameters c{pattern} and ||| pattern	count=1
class	previously made ||| uninstall path	count=1
module	an explanation of the ||| _vendor	count=1
class	[class_1] dictionary ||| [class_1] [class_2]	count=2
function	topological [function_2] ||| [function_1] [function_2]	count=3
function	there are multiple domains ||| multiple domains	count=1
function	packer ||| packb	count=1
class	response ||| response	count=3
module	must be called to ||| _vendor requests packages urllib3 util	count=1
class	remove() ||| path	count=1
function_arg	record [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] a string ||| [arg_2] [function_1]	count=1
function	[function] some ||| [function]	count=1
function	[function_1] entries in ||| [function_1] [function_2]	count=5
function	requirement set ||| populate requirement set	count=2
function	a file located ||| distinfo files	count=1
arg	create a packagefinder ||| find_links index_urls allow_all_prereleases trusted_hosts	count=1
function_arg	[function_1] a distribution ||| [arg_2] [function_1]	count=1
arg	given major [arg_2] ||| [arg_2] [arg_1]	count=4
function	a prefix ||| prefix from	count=1
function	to the c{re ||| init	count=1
function	prefix length from a ||| from prefix	count=1
class	list of parsed tokens ||| parse results	count=1
arg	and sends ||| url	count=1
function	a file located in ||| distinfo	count=1
class	file ||| file in file	count=1
arg	filepath ||| filepath skip_unknown	count=1
module	if given ||| requests packages urllib3 util	count=1
arg	tempname ||| tempname filename	count=1
module	if it ||| utils	count=1
arg	header value is ||| header	count=1
function	after finishing ||| finish	count=1
function	a hash value ||| hash	count=1
function	[function] if ||| get [function]	count=3
function	method of the request ||| rebuild method	count=1
class	a ||| parse results	count=2
arg	to *address* and ||| source_address socket_options	count=1
function	of parsed ||| parse	count=1
module	been [module_2] ||| [module_2] [module_1]	count=4
module	given a string ||| _vendor requests	count=2
function	a requirement [function_2] ||| [function_2] [function_1]	count=1
arg	called targetpath if ||| tarinfo targetpath	count=2
module	raise an exception ||| _vendor distlib	count=1
function	record file using the ||| installed	count=1
module	python number to a ||| _vendor distlib	count=1
function	has been a head-request ||| to head	count=1
function	move ||| move	count=1
class	and c{flags} ||| regex	count=1
arg	name ||| cls name mode	count=1
module	package-level ||| requests packages urllib3 contrib	count=1
module	decorator that defines ||| _vendor requests packages	count=1
function	[function] as ||| [function]	count=3
arg	callback ||| callback	count=1
arg	set of events to ||| events data	count=1
arg	from [arg] ||| [arg] tags	count=1
function	from ||| from ip	count=1
function	number of the current ||| number	count=1
function	of parsed [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] req_to_install should ||| [arg_2] [function_1]	count=1
class	or the file object ||| file	count=1
function_arg	[function_1] dist if ||| [function_1] [arg_2]	count=1
module	object no ||| _vendor distlib _backport	count=1
class	of the exception ||| exception	count=1
function	agent ||| agent	count=2
arg	bytes matching a ||| bytes	count=1
arg	*label* ||| x y label	count=1
module	the value to use ||| requests packages urllib3	count=1
function_arg	point [arg_2] ||| [arg_2] [function_1]	count=1
function	spaces before parsing the ||| with tabs	count=1
arg	set of events ||| events data	count=1
function	after ||| after	count=1
module	the release of ||| _vendor	count=1
class	two specifier like ||| specifier	count=1
class	made by remove() ||| uninstall path	count=1
class	made by remove() ||| path	count=1
arg	see ||| pattern	count=1
arg	the destination [arg] ||| [arg]	count=1
arg	or global ||| encoding errors	count=1
arg	dest to point ||| dest	count=1
class	the exception with a ||| base exception	count=1
module_class	the [class_2] ||| [module_1] [class_2]	count=2
arg	size ||| size	count=2
function_arg	[function_1] from a ||| [arg_2] [function_1]	count=4
arg	a iterator ||| iterator r	count=1
class	c{pattern} and c{flags} ||| regex	count=1
function	yields tuples of ||| get full refs	count=1
function	to declare namespace packages ||| namespace handler	count=1
function	if ||| context	count=1
module	field returns an ||| _vendor requests packages urllib3	count=1
module	operation should be ||| distlib	count=1
arg	metadata ||| metadata	count=1
module	hold a gnu ||| distlib	count=1
function_arg	treewalker [arg_2] ||| [function_1] [arg_2]	count=1
class	in the file ||| ex file	count=1
module	tar archive ||| distlib _backport	count=1
arg	string of characters from ||| characters	count=1
module	and construct a ||| _vendor	count=1
class	[class_1] results ||| [class_2] [class_1]	count=8
function	to a file located ||| distinfo files	count=1
function	[function] is ||| clean [function]	count=3
module	no operation ||| _backport	count=1
class	of parsed ||| parse	count=1
module	python version from a ||| distlib	count=1
function	is current for this ||| is current	count=1
class	decode ||| incremental decoder	count=1
arg	headers have been ||| headers	count=1
function	the default keyword ||| default keyword	count=1
arg	name [arg_2] ||| [arg_1] [arg_2]	count=3
function	read the ||| read	count=1
module	an pyopenssl certificate ||| packages urllib3	count=1
function	[function_1] the exported ||| distribution path [function_1] [function_2]	count=1
module	construct a ||| _vendor	count=1
class	option parser possible ||| option parser	count=1
class	the ip address as ||| ipaddress base	count=1
function_arg	[function_1] on windows/python2 ||| [function_1] [arg_2]	count=4
module_class	and [class_2] ||| [module_1] [class_2]	count=6
function	to ||| to	count=7
module	value of a ||| distlib _backport	count=1
arg	[arg_1] the filename ||| [arg_2] [arg_1]	count=2
module	no operation ||| _vendor distlib _backport	count=1
module	[module_1] and ||| [module_2] [module_1]	count=1
function	creates an installrequirement from ||| from	count=1
function	the default [function_2] ||| [function_1] [function_2]	count=3
class	can_add() it and ||| environment	count=1
function_arg	a proxy [arg_2] ||| [arg_2] [function_1]	count=2
arg	must be absolute ||| redirect	count=1
function	add it back if ||| add	count=1
function	compare two digests of ||| const compare	count=1
module	named ||| pkg_resources	count=1
class	from the stream or ||| stream	count=1
function	unarchiving ||| get archive	count=1
function	raise a ||| raise	count=1
arg	the pkg-info format data ||| fileobject skip_unknown	count=1
module	re-quote ||| _vendor requests	count=1
function	file located ||| distinfo files	count=1
module	that hold a gnu ||| distlib	count=1
module	object no operation ||| _vendor	count=1
function	file ||| to file	count=1
class	encode ||| package index	count=1
module	object as a ||| _vendor distlib _backport	count=4
class	the [class_1] [class_2] ||| _vendor [class_1] [class_2]	count=1
module	be ||| packages urllib3 util	count=2
arg	the response ||| response	count=1
arg	make the current subnet ||| prefixlen_diff new_prefix	count=1
module	c{re compile()} ||| _vendor	count=1
class	the file if ||| ex file	count=1
module	no operation should ||| _vendor	count=1
arg	specifications ||| specifications	count=1
arg	paths if ||| paths	count=1
function	character in 'characters' or ||| chars until	count=1
module_class	[module_1] tarinfo object ||| [module_1] [class_2] next	count=3
function_arg	[function_1] header value ||| [function_1] [arg_2]	count=1
module	process a ||| distlib	count=1
module	if given ||| _vendor requests	count=1
function	files [function_2] ||| [function_2] [function_1]	count=2
function	passed to the c{re ||| init	count=1
arg	[arg_1] files for ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] req [arg_2]	count=2
module	node ||| _vendor html5lib treebuilders	count=1
function	check if tarfile ||| check	count=1
function	a list of integers ||| list	count=1
function	should ||| should	count=1
arg	list of specifications ||| specifications options	count=1
function	[function_1] release ||| [function_2] [function_1]	count=3
function	the source archive download ||| source	count=1
function	type or ||| type	count=1
module	of the ip address ||| _vendor	count=1
function	add any [function] ||| add [function]	count=2
function_arg	[function_1] a path ||| [arg_2] [function_1]	count=1
function	for a download ||| to download info	count=1
class	[class_1] object ||| [class_1] [class_2] next	count=1
function_arg	finder [arg_2] ||| [arg_2] [function_1]	count=3
function	a list ||| list	count=1
function	[function_1] [function_2] as a tuple (id_name ||| [function_1] [function_2]	count=4
arg	name for reading ||| cls name mode	count=1
module	of a ||| distlib	count=3
arg	dest [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	return a textual ||| _vendor distlib distribution	count=1
function	remove [function] files ||| remove temporary [function]	count=1
function	find a ||| find requirement	count=1
arg	[arg_1] scheme ||| [arg_1] [arg_2]	count=1
module	tree ||| _vendor html5lib treebuilders	count=1
arg	url if applicable ||| url proxies	count=1
arg	install scheme ||| scheme	count=1
function	[function_1] url the ||| [function_1] [function_2]	count=2
module	be ||| _vendor distlib _backport	count=2
arg	for an explanation ||| pattern	count=1
function	[function_1] [function_2] ||| distribution path [function_1] [function_2]	count=12
arg	of the ||| pattern	count=1
module	helper that always returns ||| requests	count=1
function	as-is see the python ||| init	count=1
function	user agent ||| user agent	count=4
module	for a ||| distlib	count=2
function_arg	hook [arg_2] ||| [arg_2] [function_1]	count=4
module	a tuple containing ||| distlib _backport	count=2
function	files in [function_2] ||| [function_2] [function_1]	count=2
module	[module_1] if a ||| [module_1] [module_2]	count=1
function	prefix ||| int from prefix	count=2
function	domains ||| domains	count=2
function_arg	[function_1] paths ||| [function_1] [arg_2]	count=1
function	the codename for the ||| codename	count=1
function	from the ||| release	count=2
function	gzip compressed fileobj ||| init read gz	count=1
function	proxies or ||| proxies	count=1
function	module for an ||| init	count=1
function	version of ||| version	count=3
module_class	urllib3 [class_2] ||| [class_2] [module_1]	count=1
function	and c{flags} are passed ||| init	count=1
function	[function_1] final fragment ||| [function_1] [function_2]	count=1
module	a zip file from ||| distlib _backport	count=1
module	packed bytes see :class ||| msgpack	count=1
class	of a response if ||| response	count=1
module	ip address as ||| _vendor	count=1
function	as-is see ||| init	count=1
module	a tuple ||| _vendor distlib	count=3
function	find ||| find requirement	count=1
module	a symlink or hardlink ||| _vendor distlib	count=1
arg	url-based ||| trust_internet	count=1
function	a list ||| intranges from list	count=1
module_class	given [class_2] ||| [class_2] [module_1]	count=1
arg	for a given url ||| url	count=1
function	address is ||| is	count=1
arg	and names the parent ||| names	count=1
class	point syntax follows the ||| point	count=1
module	a ||| _vendor	count=38
function	link headers proxies ||| header links	count=1
function_arg	return absolute location [function_1] [arg_2] ||| _vendor pkg_resources resource manager [function_1] path archive_name [arg_2]	count=3
arg	represent [arg] ||| [arg]	count=2
module	a decorator that defines ||| _vendor requests packages	count=1
function	extract the tarinfo ||| extract member	count=1
module	the _stream object ||| distlib	count=1
class	me for ||| error	count=1
function	[function_1] entries ||| [function_1] [function_2]	count=5
arg	given major [arg_2] ||| darwin arches [arg_1] [arg_2]	count=4
function	[function_1] cookiejar ||| [function_2] [function_1]	count=3
module	the chksum field which ||| _vendor distlib	count=1
function_arg	decodes a [arg_2] ||| [function_1] [arg_2]	count=1
module	returns true if ||| _vendor requests	count=3
arg	marshal cmd line ||| requirement_set	count=1
function	see :class packer for ||| packb	count=1
arg	string src ||| cls src	count=1
module	url on the ||| _vendor requests packages urllib3	count=1
module	[module_1] a string ||| [module_2] [module_1]	count=1
class	if this ||| link	count=1
function	is ||| check	count=1
function	the children ||| child	count=1
arg	single requirements ||| finder req_to_install require_hashes ignore_dependencies	count=1
class	exception with a ||| exception	count=1
class	for an explanation of ||| regex	count=1
module	and port ||| _vendor requests	count=1
module	from a ||| distlib _backport	count=1
module	returns a list of ||| _vendor distlib _backport	count=2
class	ip ||| ipaddress base	count=1
arg	and c{flags} are ||| pattern	count=1
function	the url ||| url	count=2
class	list ||| dict	count=1
function	remove paths in ||| remove	count=1
function	switch ||| switch	count=1
function	[function_1] agent ||| [function_1] [function_2]	count=9
module	given an pyopenssl certificate ||| _vendor requests packages urllib3 contrib	count=1
function	zip ||| zip	count=1
module	a base class ||| packaging	count=1
module	parameters c{pattern} and c{flags} ||| _vendor	count=1
function	represent a list ||| intranges from list	count=1
class	entry point ||| entry point	count=1
module	given an pyopenssl ||| requests packages urllib3 contrib	count=1
function	a directory name ||| dir	count=1
class	in the jar ||| requests cookie jar	count=1
arg	distribution to the ||| dist	count=1
class	must be a sequence ||| working set	count=1
module	display ||| core	count=1
module_class	a gnu [class_2] ||| [module_1] _backport [class_2] info	count=1
function	[function_1] our cached ||| [function_2] [function_1]	count=3
function	a tarball ||| is	count=1
module	determines if this ||| core	count=1
function	an element from the ||| from table	count=1
function	extract the ||| extract	count=1
class	stream or queue ||| stream	count=1
function	is identical to what ||| check	count=1
module	read ||| _vendor lockfile	count=1
function	the appropriate connection adapter ||| adapter	count=1
arg	length for path ||| path	count=1
function_arg	[function_1] [arg_2] ||| [function_1] filename [arg_2]	count=1
function	count the ||| count	count=1
function	16 ||| v6	count=1
class	address ||| ipaddress	count=1
module	parameters c{pattern} and ||| _vendor	count=1
module	same version of a ||| distlib	count=1
module	helper to define a ||| _vendor	count=2
class	of a c{parseresults} object ||| results	count=1
function	running ||| running	count=1
function	to a ||| path to	count=1
class	a marker ||| marker	count=1
function	will raise ||| raise	count=1
function	write the given text ||| write and	count=1
module	a summary ||| core	count=1
module	from a ||| distlib	count=3
function	requirement that ||| requirement	count=1
module_class	[module_1] list of ||| [module_1] [class_2]	count=1
function	mro ||| mro	count=1
arg	based on ||| filecache	count=1
arg	either 'r' to ||| fileobj format	count=1
class	the changes previously ||| uninstall	count=1
function_arg	file url [arg_2] ||| [function_1] [arg_2]	count=3
module_class	[module_1] tar ||| [module_1] _backport [class_2] info	count=1
class	request with the ||| request	count=1
module	url on the ||| requests packages urllib3	count=1
function	transmission ||| prepare	count=2
arg	bytes matching ||| bytes	count=1
arg	either 'r' ||| mode fileobj format	count=1
module	each ||| _vendor	count=1
module	if [module_2] ||| [module_1] [module_2]	count=2
class	stream up ||| htmlunicode input stream	count=1
function	[function_1] distro ||| [function_1] [function_2]	count=1
function_arg	supported [arg_2] ||| [function_1] [arg_2]	count=1
function	tree type required case-insensitive ||| tree	count=1
class	return a suitable manifest ||| manifests	count=1
function	[function_1] file url ||| [function_2] [function_1]	count=3
function_arg	decode the [arg_2] ||| [function_1] [arg_2]	count=1
module	been started so ||| packages urllib3 util	count=1
function	wait ||| wait	count=1
function	dropped and should ||| dropped	count=1
function	a cookiejar ||| cookiejar	count=1
module	that ||| requests packages urllib3	count=1
class	linux distribution as a ||| linux distribution	count=3
function	return a readable file-like ||| get resource	count=1
function	return a ||| get paths	count=1
function	an os-release file ||| os release	count=1
module	an ||| _vendor distlib	count=14
function	helper method for defining [function_1] [function_2] at a specific ||| [function_2] [function_1]	count=1
arg	reading or writing ||| mode fileobj	count=2
function	treebuilder ||| builder	count=1
function	line and lines ||| lines	count=1
function	authentication from the request ||| auth	count=1
class	file and ||| file	count=1
arg	closing tag expressions for ||| tagstr	count=1
function	encodings from given ||| encodings from	count=2
function_arg	zip filename to ||| zipfile filename	count=1
module	module ||| _vendor	count=1
module	of a string or ||| pkg_resources	count=1
function	to update [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] refnode in ||| [function_1] node [arg_2]	count=1
function	this points ||| is	count=1
function	if the decoder is ||| decoder	count=1
class	of the [class] ||| [class]	count=3
arg	dest to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	as shown in the ||| pretty best	count=1
function_arg	version [arg_2] ||| [arg_2] [function_1]	count=2
module	version from a ||| distlib	count=1
module	at ||| vcs	count=6
function	look for an encoding ||| lookup	count=1
function	create a package finder ||| build package finder	count=1
arg	a previously registered hook ||| event hook	count=1
module	a string and an ||| _vendor	count=1
class	exception with ||| parse base exception	count=1
module	the python c{re} module ||| _vendor	count=1
class	the timeout ||| timeout	count=1
function	threads to ||| threads	count=1
class	*requirement* ||| dependency graph	count=1
class	a network ||| base network	count=1
module	a ||| distlib _backport	count=28
module	a filesystem or ||| pkg_resources	count=1
function	find ||| find link	count=1
class	resource ||| iresource provider	count=2
function	attribute [function] ||| [function]	count=1
class	distribution as a string ||| distribution	count=2
class	path ||| distribution path	count=2
function	return [function_2] ||| [function_2] [function_1]	count=44
class	the dist-info ||| installed distribution	count=1
module	the value of ||| requests packages urllib3 util	count=1
function	[function_1] for ||| [function_1] [function_2]	count=3
function_arg	[function_1] first and ||| [arg_2] [function_1]	count=2
function	path name (i ||| dir	count=1
function	proxy ||| proxy	count=1
function	remove [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] sort of ||| [function_1] [function_2]	count=1
function	get a dictionary mapping ||| get	count=1
module	return ||| _vendor pkg_resources	count=1
class	the exception with a ||| exception	count=1
function	wheel ||| move wheel	count=1
class	option [class_2] ||| [class_1] [class_2]	count=4
function	to [function] ||| path to cache [function]	count=1
function_arg	[function_1] based on ||| [arg_2] [function_1]	count=5
function	returns [function] in case ||| deduce [function]	count=1
function	the same [function_2] ||| [function_2] [function_1]	count=3
class	of the stream ||| htmlbinary input stream	count=1
function_arg	[function_1] message ||| [function_1] [arg_2]	count=7
function	remove ||| remove	count=4
module	checks if given ||| requests packages urllib3 util	count=1
function	[function_1] a fixed ||| [function_2] [function_1]	count=2
function	get a dictionary ||| get	count=1
module	or a ||| _vendor pkg_resources	count=2
function	add ||| add	count=14
module	checks [module_2] ||| [module_2] requests [module_1]	count=1
function	is a member of ||| is	count=1
class	remove ||| path set	count=1
arg	method [arg_2] ||| [arg_1] [arg_2]	count=1
arg	to the c{re compile()} ||| pattern	count=1
arg	to point to url ||| url	count=1
function	the file ||| file	count=2
class	when making ||| httpadapter	count=1
module	python c{re} module ||| _vendor	count=1
function	asserts whether ||| assert header parsing	count=1
module	object and test ||| requests	count=1
class	previously made by ||| path set	count=1
function	version string ||| version string	count=1
arg	either 'r' ||| fileobj format	count=1
function_arg	[function_1] refnode ||| [arg_2] [function_1]	count=1
function	prefix length into ||| from prefix	count=1
arg	subscriber [arg_2] ||| [arg_2] [arg_1]	count=4
function	if the version ||| version	count=1
module	for options ||| _vendor msgpack	count=1
arg	if path ||| path	count=1
function	optionally converting ||| and convert	count=1
function	[function_1] get ||| [function_2] [function_1]	count=6
function	a header ||| header	count=2
module	reading a ||| distlib	count=1
function	the reverse ||| reverse	count=1
arg	[arg_1] method ||| [arg_2] url [arg_1]	count=1
arg	to file-like object fdst ||| fdst length	count=1
function_arg	[function_1] iterator ||| [function_1] [arg_2]	count=2
module	up a ||| _vendor distlib	count=1
module	on ||| requests packages	count=3
function	control ||| control	count=1
arg	of characters from the ||| characters opposite	count=1
function	representing the ip ||| init	count=1
class	can_add() it and it ||| environment	count=1
module	object no ||| distlib	count=1
function	the target member ||| link target	count=1
function	cookie ||| cookie	count=2
function	from the [function_2] ||| [function_2] [function_1]	count=4
class	file [class_2] ||| [class_1] [class_2]	count=1
arg	message ||| message	count=1
function	download url for a ||| to download info	count=1
function	distribution ||| dist	count=1
module	random url on the ||| packages urllib3	count=1
function	all the threads ||| threads	count=1
function	is dropped and ||| is connection dropped	count=1
arg	dest to ||| dest	count=1
arg	[arg_1] and path ||| [arg_2] [arg_1]	count=3
function	archiving and unarchiving ||| get archive	count=1
arg	function as-is see ||| pattern	count=1
function	attempt to split ||| split	count=1
function	paths in ||| paths	count=1
arg	namespace_handler to ||| namespace_handler	count=1
function	a parser for ||| parser	count=1
module	return ||| distlib	count=2
arg	index in the ||| index	count=1
arg	the old retries format ||| retries redirect default	count=1
class	determines ||| link	count=1
arg	to url ||| url	count=1
function	a file // ||| is dir url	count=1
arg	set of events ||| fileobj events data	count=1
class	remove ||| uninstall path set	count=1
module_class	[module_1] metadata ||| [module_1] legacy [class_2]	count=1
module	our wrapped stream stripping ||| _vendor colorama	count=1
function	logger ||| logger	count=1
function	parse [function_2] ||| [function_1] [function_2]	count=3
function	return urllib3 proxymanager for ||| manager for	count=1
function	this method add ||| add	count=1
module	value to use ||| requests packages urllib3	count=1
arg	c{re compile()} function ||| pattern	count=1
arg	connection adapter [arg_2] ||| [arg_2] [arg_1]	count=2
function	header ||| header	count=6
module	a list of ||| _vendor distlib	count=7
class	[class] is ||| [class]	count=1
arg	url [arg_2] ||| [arg_2] [arg_1]	count=3
module	[module] iterator that ||| [module]	count=1
arg	and files for ||| files	count=1
module	url repository ||| vcs	count=1
function	with [function_2] ||| [function_2] [function_1]	count=1
class	if this points to ||| link	count=1
function	environment ||| environment	count=2
function	[function_1] loopback address ||| [function_1] [function_2]	count=1
module	process an ||| _vendor distlib	count=1
arg	into an integer ||| cls	count=1
module	an encoding ||| _vendor	count=1
function_arg	[function_1] importer_type ||| [arg_2] [function_1]	count=3
function	in the body ||| body	count=1
class	a parsed link from ||| link	count=1
module	filesystem or zipfile ||| _vendor pkg_resources	count=1
module	one ||| _vendor distlib	count=2
module	has been [module_2] ||| [module_2] [module_1]	count=4
function	ip ||| address	count=1
module	the given ||| requests packages	count=1
function	a fresh ||| new conn	count=1
module	and raise an ||| _vendor distlib	count=1
arg	iterator ||| iterator r	count=1
function	select a [function_2] ||| [function_2] [function_1]	count=3
module	_stream object ||| _vendor	count=1
class	previously made ||| path	count=1
function	the version [function_2] ||| [function_2] [function_1]	count=6
arg	req ||| req	count=1
arg	object for resource_name ||| resource_name	count=1
function_arg	dir [arg_2] ||| [arg_2] [function_1]	count=7
class	to the stream if ||| stream	count=1
function	timeout from a legacy ||| from float	count=1
function_arg	[function_1] a iterator ||| [function_1] [arg_2]	count=2
module	returns ||| _vendor requests packages urllib3	count=1
function	[function_1] [function_2] ||| support [function_2] [function_1]	count=5
function_arg	[function_1] dictionary ||| [arg_2] [function_1]	count=2
module	function as-is ||| _vendor	count=1
function_arg	a options [arg_2] ||| [arg_2] [function_1]	count=1
arg	c{re} module for ||| pattern	count=1
class	the _stream object no ||| stream	count=1
function	[function_1] a legacy ||| [function_2] [function_1]	count=4
function	an edge ||| edge	count=1
module	a single variable using ||| _vendor distlib	count=1
arg	a ||| name	count=1
function	location of ||| location	count=1
class	specifier are ||| specifier	count=1
function	[function_1] in a ||| [function_1] [function_2]	count=1
module	a file object from ||| _vendor	count=1
module	the keys in a ||| _vendor	count=1
module	that defines ||| requests packages urllib3	count=1
function	prefix ||| prefix	count=4
class	changes previously made by ||| uninstall path	count=1
module	function as-is see ||| _vendor	count=1
module	a tuple ||| _vendor distlib _backport	count=2
module	object ||| _vendor distlib _backport	count=2
function	rollback the changes ||| rollback	count=1
function_arg	cache path [arg_2] ||| [function_1] url [arg_2]	count=2
function	integer ||| int from string	count=1
function	1xx [function] header value ||| [function]	count=1
class	a version ||| version conflict	count=1
class	object for ||| file	count=1
module	construct a ||| distlib _backport	count=1
class	stream up to ||| input stream	count=1
module	an ||| html5lib treebuilders	count=1
class	the c{re compile()} ||| regex	count=1
arg	the method [arg_2] ||| [arg_2] [arg_1]	count=1
function	distribution files ||| dist	count=1
function	urllib3 proxymanager ||| proxy manager	count=1
arg	paths have the ||| paths	count=1
module	return 'pathname' as a ||| distlib	count=1
arg	fields based [arg_2] ||| [arg_2] url [arg_1]	count=1
class	a metadata provider ||| egg metadata	count=1
function	if the decoder ||| decoder	count=1
module	field returns an ||| requests packages	count=1
function	return the ||| get	count=10
class	construct a zipfile ||| zip	count=1
function	distribution best ||| best	count=1
function	entry point of ||| entry point	count=2
function	the python c{re} module ||| init	count=1
function	cache ||| cache	count=4
function	representing the default user ||| default user	count=1
arg	for path [arg_2] ||| [arg_1] algo [arg_2]	count=1
function	marker [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] gz/tar bz2 ||| [function_1] [function_2]	count=1
function	add an edge ||| add edge	count=2
module	is normally ||| _vendor distlib	count=1
module	under ||| core	count=1
function	each line ||| list	count=1
function	record ||| installed	count=1
arg	targetpath [arg_2] ||| [arg_2] [arg_1]	count=4
module	an exception ||| _vendor distlib	count=1
module	named field returns an ||| _vendor requests packages urllib3	count=1
class	the ||| base	count=2
module	even [module] all ||| [module]	count=1
function_arg	data [arg_2] ||| [arg_2] [function_1]	count=3
module	a file in ini ||| distlib	count=1
function	user [function_2] ||| [function_2] [function_1]	count=2
module	should ||| _vendor distlib	count=1
function	ip string is ||| is	count=1
function	[function_1] [function_2] ||| support [function_1] backend [function_2]	count=7
arg	entry if entry is ||| entry	count=1
arg	of characters ||| characters opposite	count=1
function	threads ||| threads	count=1
function	response ||| build response	count=1
class	retry ||| retry	count=2
function	the children ||| children	count=1
arg	makes this request field ||| content_disposition content_type content_location	count=1
function	or if ||| is	count=1
arg	the input ||| input	count=1
arg	tarinfo [arg] ||| tarinfo targetpath [arg]	count=1
arg	[arg_1] minor and ||| [arg_2] [arg_1]	count=4
function	[function_1] proxy for ||| [function_2] [function_1]	count=1
module	translate a ||| _vendor distlib	count=1
function_arg	httplib [arg_2] ||| [arg_2] [function_1]	count=2
module	the object [module_2] ||| [module_1] [module_2]	count=1
function	iterable passed in any ||| write	count=1
module	'pathname' as a ||| _vendor distlib	count=1
module	field returns ||| requests packages urllib3	count=1
arg	point from string src ||| src	count=1
function	path to a ||| to	count=1
function	// ||| is dir url	count=1
class	of a response ||| response	count=1
function	process ||| process	count=1
module	operation should ||| distlib	count=1
module	urllib3 ||| requests packages urllib3	count=2
function_arg	register a [arg_2] ||| [function_1] [arg_2]	count=1
class	over the response ||| response	count=1
module	is normally one for ||| distlib	count=1
function	unquotes a header ||| unquote header	count=1
function	a :class session ||| session	count=1
class	under ||| error	count=1
module	[module_1] a given ||| [module_2] [module_1]	count=1
arg	from src [arg_2] ||| [arg_2] [arg_1]	count=3
module	ssl ||| _vendor requests packages urllib3 util	count=1
function	unpack ||| unpack	count=3
module	of me for ||| core	count=1
function_arg	state dir [arg_2] ||| [arg_2] [function_1]	count=1
function	return true if the ||| is	count=1
arg	url from ||| url raise_errors	count=1
module	like abc 1 ||| _vendor packaging	count=1
module	of ||| core	count=1
class	parse [class_2] ||| _vendor [class_1] [class_2]	count=1
function	returns [function_1] [function_2] in case requirements file ||| req deduce [function_1] [function_2]	count=1
module	return the ||| _vendor	count=2
arg	tags ||| tags	count=1
function	a requirement set ||| populate requirement set	count=2
module	the value to use ||| _vendor requests packages urllib3	count=1
function	no ||| no global	count=1
class	record entries ||| installed distribution	count=1
module	copy ||| _backport	count=2
module	to a tar archive ||| _backport	count=1
class	tarball or ||| link	count=1
class	decimal notation ||| base v4	count=1
function	encoding ||| encoding	count=1
module	bytes see ||| msgpack	count=1
arg	paths [arg_2] ||| [arg_2] [arg_1]	count=2
function	get the ||| get	count=10
class	a tarball or if ||| link	count=1
class	metadata provider ||| egg metadata	count=1
module	a character ||| distlib	count=1
module	[module] the ||| _vendor requests [module] urllib3	count=3
arg	specified [arg] ||| [arg]	count=2
class	changes ||| uninstall path	count=1
arg	or file-like object into ||| doc treebuilder namespacehtmlelements	count=1
class	expression on the ||| parser element	count=1
function	run ||| run	count=2
function	return a string ||| get resource string	count=1
function	the method of the ||| method	count=1
function	[function_1] metaclass ||| [function_1] [function_2]	count=1
arg	a subscriber ||| subscriber append	count=1
arg	postprocessing of tempname ||| tempname filename	count=1
function	a hash ||| hash	count=1
module	a summary of ||| core	count=1
function	parse a string or ||| parse	count=1
function	datetime datetime ||| datetime	count=1
function	collapse ||| collapse	count=1
function	first found delimiter ||| first	count=1
module	for ||| requests	count=1
arg	of tempname this ||| tempname	count=1
function	datetime string to ||| to	count=1
function	for an encoding ||| lookup	count=1
module	a name that ||| distlib	count=1
function	list of integers as ||| intranges from list	count=1
function	ensure that a ||| ensure	count=1
function	version is identical to ||| check version	count=1
function	current backoff ||| backoff time	count=1
module_class	if a wheel ||| _vendor distlib wheel	count=1
class	previously made by remove() ||| path set	count=1
arg	according to tarinfo ||| tarinfo	count=2
function	paths names ||| names	count=1
module	bytes see :class packer ||| _vendor msgpack	count=1
module	always returns ||| requests packages	count=1
arg	extract a member from ||| member	count=1
arg	zip_path ||| zip_path	count=1
module	take a ||| _vendor distlib	count=1
function	represent a list ||| from list	count=1
function	hash algorithm if specified ||| hash	count=1
function	head ||| head	count=1
function	and c{flags} ||| init	count=1
function	a given project get ||| get project	count=1
function	as a child ||| append child	count=1
function	from the os-release file ||| os	count=1
function	integer ||| int from	count=1
function	build a ||| build	count=2
arg	given major minor ||| major minor	count=1
arg	dist if ||| dist	count=1
function	makefile ||| makefile filename	count=1
arg	is either 'r' ||| fileobj format	count=1
function	determines if this points ||| is	count=1
module	a string that identifies ||| _vendor distlib _backport	count=1
module	module for an explanation ||| _vendor	count=1
module	for reading a ||| _vendor distlib	count=1
function	element ||| table	count=1
function	metadata ||| metadata	count=2
arg	[arg_1] version ||| [arg_1] [arg_2]	count=1
module	the value of ||| _vendor requests packages urllib3	count=1
arg	a single requirements ||| req_to_install require_hashes ignore_dependencies	count=1
class	the timeout clock used ||| timeout	count=1
function_arg	[function_1] a name ||| [function_1] [arg_2]	count=4
class	previously made by remove() ||| uninstall path set	count=1
arg	as a separator ||| instring maxsplit includeseparators	count=1
function	backport of ||| backport	count=1
arg	subscriber ||| subscriber	count=1
arg	dictionary as shown in ||| pretty best	count=1
arg	a subscriber ||| subscriber	count=1
function	path ||| normalize path	count=1
class	our store of pools ||| pool	count=1
function	bytes ||| packb	count=1
function	uninstall the distribution ||| uninstall	count=1
function	[function] data source ||| [function] release	count=10
function_arg	registers a [arg_2] ||| [function_1] prefix [arg_2]	count=3
function	located under the ||| distinfo	count=1
module	up a ||| _vendor distlib _backport	count=1
module	of self that is ||| _vendor pkg_resources	count=1
class	the ip ||| base	count=1
function	method add it ||| add	count=1
arg	filename [arg_2] ||| [arg_2] [arg_1]	count=2
module	and ||| _vendor requests packages urllib3	count=2
class	of a c{parseresults} ||| parse	count=1
function	to a regular ||| to	count=1
arg	[arg_1] and scheme ||| [arg_2] [arg_1]	count=1
module	and returns it ||| _vendor requests	count=1
function	inc ||| inc	count=1
function	prefix ||| prefix from	count=1
function	[function_1] a metaclass ||| [function_1] [function_2]	count=1
class	of ||| hash error	count=1
arg	all the paths ||| paths	count=1
module	for ||| _vendor webencodings	count=2
function	linux [function_2] ||| [function_1] [function_2] full_distribution_name	count=1
arg	[arg_1] to tarinfo ||| [arg_2] [arg_1]	count=8
arg	a set of events ||| events	count=1
module_class	use [class_2] ||| [module_1] [class_2]	count=6
arg	[arg_1] or writing ||| [arg_2] [arg_1]	count=2
function	get a connection will ||| get conn	count=1
class	of the exception with ||| parse base exception	count=1
function	[function] of ||| [function]	count=13
function	all distribution ||| all distribution	count=2
class	return ||| error	count=1
module	tarball ||| core	count=1
class	stream or queue if ||| stream	count=1
class	be a sequence ||| set	count=1
arg	an explanation of the ||| pattern	count=1
function	otherwise ietf reserved ||| reserved	count=2
module	and returns a tuple ||| _vendor distlib	count=1
arg	extras ||| extras	count=1
function_arg	write string s ||| write s	count=1
class	metadata [class_2] ||| [class_2] [class_1]	count=6
arg	on working_set this calls ||| installer	count=1
arg	of and expressions ||| expr	count=1
function	[function_1] compatible with ||| [function_1] [function_2]	count=1
class	new ordered [class_2] ||| [class_1] [class_2]	count=4
function_arg	yield distributions [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] dist_name ||| [arg_2] [function_1]	count=4
module	test if the lock ||| _vendor lockfile	count=1
class	ipv4 ||| v4	count=1
module	parse and ||| pkg_resources	count=1
module	a single variable ||| distlib _backport	count=1
function	in 'characters' or ||| chars until	count=1
module	for an explanation ||| _vendor	count=1
function_arg	list [arg_2] ||| [function_1] [arg_2]	count=1
function	packed ||| packb	count=1
module	on the ||| packages urllib3	count=1
function	supported tags ||| supported	count=1
arg	for project_name this ||| project_name	count=1
module_class	like [class_2] ||| [module_1] [class_2]	count=6
module	given an pyopenssl ||| _vendor requests packages urllib3	count=1
arg	a urllib3 ||| connections maxsize block	count=1
module	given an pyopenssl ||| requests packages urllib3	count=1
function	python 2 httplib ||| httplib	count=1
module	_stream object no operation ||| _vendor distlib _backport	count=1
module	[module_1] started so ||| [module_2] [module_1]	count=4
function	[function_1] the distribution ||| [function_2] [function_1]	count=6
module	on ||| requests packages urllib3	count=1
class	resource files ||| resource	count=1
arg	port and scheme ||| port scheme	count=3
function	to the form ||| to	count=1
module	raise an exception if ||| _vendor distlib	count=1
arg	bytes matching a given ||| bytes	count=1
function	os-release file data source ||| os release	count=1
function	method add it back ||| add	count=1
class	line from the file ||| file	count=1
class	one cookie jar over ||| requests cookie jar	count=1
function	a loopback ||| loopback	count=1
function_arg	the children [arg_2] ||| [function_1] [arg_2]	count=1
function	closed ||| closed	count=1
function	field into a multipart ||| make multipart	count=1
module	archive ||| distlib _backport	count=2
class	ip address ||| ipaddress	count=1
function	content-length header based on ||| content length	count=1
module	a tag name matches ||| _vendor	count=1
function	a random ||| random	count=1
class	the ip address as ||| base	count=1
function	initialise an instance there ||| init	count=1
function_arg	[function_1] hook ||| [arg_2] [function_1]	count=1
function	the type or ||| type	count=1
arg	takes an iterable of ||| iterable	count=1
function	expand a shortened ||| explode shorthand ip string	count=1
function	for transmission and returns ||| prepare	count=1
function_arg	path to a ||| path name	count=2
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=138
function	a child of ||| append child	count=1
function	the parse ||| parse	count=1
arg	into an integer ||| cls octet_str	count=1
arg	in project name version ||| project_name	count=1
class	files from [class] ||| [class]	count=1
class	remove() ||| uninstall path	count=1
function	access [function] you must ||| save [function]	count=1
class	function as-is ||| regex	count=1
function	process a ||| process	count=1
module	chksum field which ||| _vendor distlib	count=1
module	random url on ||| _vendor requests packages urllib3	count=1
function	authentication from ||| auth	count=1
function	list all [function_2] ||| [function_1] [function_2]	count=5
function_arg	[function_1] currently satisfying ||| [function_1] [arg_2]	count=1
module	an http server ||| _vendor distlib	count=1
class	of the stream if ||| input stream	count=1
function	is not anything else ||| is ref	count=1
arg	[arg_1] to dst ||| [arg_1] [arg_2]	count=3
arg	extract a member ||| member	count=1
module	no operation ||| _vendor	count=1
function	start ||| start	count=1
module	cache ||| _vendor cachecontrol	count=1
function_arg	a hook [arg_2] ||| [function_1] [arg_2]	count=4
function	as an archive ||| archive	count=1
class	the index ||| package index	count=2
function	our cached value with ||| cached response	count=1
function	[function_1] cookiejar ||| [function_1] [function_2]	count=3
class	the changes previously made ||| uninstall path set	count=1
module	a file in ini ||| _vendor distlib	count=1
module	returns a ||| distlib	count=4
module	object ||| _backport	count=2
function	turn the prefix ||| int from prefix	count=1
module	return packed ||| _vendor	count=1
function	copy ||| copy	count=1
module	create a zip ||| distlib _backport	count=1
module	url on the ||| packages urllib3	count=1
function	the decoder ||| decoder	count=1
class	the pool ||| pool	count=1
module	the value of ||| requests packages urllib3	count=1
module	linux ||| _vendor	count=1
module	a single ||| distlib	count=1
function	repr of all info ||| repr	count=1
function	connection is ||| is connection	count=2
module	for ||| _vendor	count=6
class	this specifier ||| specifier	count=2
arg	currently satisfying this ||| auto_confirm	count=1
function	obtain the url to ||| request url	count=1
function	the master ||| master	count=1
function	display under the heading ||| body	count=1
function_arg	count [arg_2] ||| [function_1] zero bits [arg_2]	count=2
function	proxymanager for the ||| proxy manager for	count=1
module	all ||| _vendor	count=1
function	certificate ||| assert fingerprint	count=1
function	from 'files' ||| exclude	count=1
module	from an html ||| distlib	count=1
module	a symlink ||| _vendor distlib	count=1
function	verifies ||| header validity	count=1
function	[function_1] bz2 ||| [function_2] [function_1]	count=1
arg	passed to ||| pattern	count=1
function	[function_1] children of ||| [function_2] [function_1]	count=1
function	[function_1] get a ||| [function_2] [function_1]	count=6
function	return the name of ||| name	count=1
arg	loader_type loader_type ||| loader_type	count=1
arg	the parameters ||| pattern	count=1
arg	this calls the ||| installer	count=1
class	new ordered ||| ordered	count=1
class	of all info ||| linux	count=1
class	of me ||| error	count=1
function	return prefix length from ||| prefix from prefix	count=1
arg	of fields [arg_2] ||| [arg_2] url [arg_1]	count=1
function	parse actions [function_2] ||| [function_2] [function_1]	count=1
function	as a nested ||| as	count=2
arg	dest to [arg_2] ||| [arg_2] [arg_1]	count=1
class	suitable ||| scraping locator	count=1
module	of a c{parseresults} ||| _vendor	count=1
function	a package [function_2] ||| [function_1] [function_2]	count=1
arg	path exists ||| path	count=2
arg	extracted wheel in wheeldir ||| wheeldir	count=1
arg	a hook ||| event hook	count=1
function	authentication from the ||| auth	count=1
module	the value to ||| packages urllib3 util	count=1
function	items from ||| release info	count=4
class	previously made by remove() ||| uninstall path	count=1
module_class	[module_1] source ||| [module_1] [class_2]	count=2
function_arg	[function_1] the data ||| [function_1] [arg_2]	count=1
function	control backend ||| backend	count=1
function	metadata a ||| metadata	count=1
module	ordered ||| _vendor requests packages urllib3 packages	count=1
module	the named field returns ||| _vendor requests packages	count=1
class	an ||| link	count=1
function	this method add it ||| add	count=1
class	this address ||| ipv4address	count=1
module	-> ||| packages urllib3 packages	count=1
class	are ||| regex	count=1
module	c{flags} ||| _vendor	count=1
class	specifier like objects ||| base specifier	count=2
module_class	[module_1] :class ||| [module_1] urllib3 httpconnection [class_2]	count=4
arg	if name ||| name	count=2
function	distribution [function_2] ||| [function_2] [function_1]	count=20
function	namespace packages ||| namespace	count=1
arg	callback for all ||| callback existing	count=1
function	build number ||| build number	count=3
module	look for an ||| webencodings	count=1
function	body ||| body	count=1
class	parse [class_2] ||| [class_2] [class_1]	count=2
function	[function_1] in a ||| [function_2] [function_1]	count=1
function	prefix length from ||| prefix from	count=1
function	add the *distribution* ||| add distribution	count=1
module	see :class packer ||| _vendor	count=1
module	c{flags} are passed ||| _vendor	count=1
function	allows you to ||| iter	count=1
class	the ||| path	count=1
arg	from src [arg_2] ||| [arg_1] [arg_2]	count=3
class	return ||| hash error	count=1
module	python number to a ||| distlib	count=1
class	option ||| option	count=1
function	insert an ||| set insert	count=1
module	construct [module_2] ||| [module_2] [module_1]	count=1
module	decorator that ||| requests packages	count=1
function	to list all ||| list	count=2
function_arg	[function_1] of data ||| [arg_2] [function_1]	count=2
function	length from a ||| prefix from	count=1
function	[function_1] host ||| [function_1] [function_2]	count=5
module	:class ||| msgpack	count=1
module	take a ||| distlib	count=1
function	[function_1] netmask ||| [function_2] [function_1]	count=2
arg	ns-package subpath for ||| path_item packagename module	count=1
class	the jar ||| requests cookie jar	count=2
class	tarinfo object ||| tar file	count=3
function	entries ||| entries	count=1
function_arg	[function_1] numeric ||| [function_1] string [arg_2]	count=2
function	the same ||| same	count=1
arg	socket ||| timeout	count=1
function	representation of the ||| repr	count=1
function_arg	verifies [arg_2] ||| [arg_2] [function_1]	count=2
function	for a download url ||| to download	count=1
arg	name for ||| name mode fileobj	count=1
arg	object fsrc [arg_2] ||| [arg_2] [arg_1]	count=1
module	of self that ||| pkg_resources	count=1
module_class	[module_1] [class_2] from ||| [module_1] [class_2]	count=1
function	distro ||| distro	count=1
module	under the ||| core	count=1
function	the version of the ||| version	count=1
class	from the stream ||| input stream	count=2
module	to ||| distlib	count=1
class	this api may ||| distribution	count=1
module	object ||| distlib	count=1
class	dictionary with keys ||| dict	count=1
module	on the server ||| packages urllib3	count=1
function	url to use ||| url	count=1
class	[class] repository ||| [class]	count=4
module	-> ||| _vendor requests packages urllib3 packages	count=1
module	operation should be ||| _vendor distlib _backport	count=1
module	if ||| utils	count=1
module	be called to ||| requests packages urllib3 util	count=1
arg	optional domain [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	point of group ||| point group	count=2
function_arg	[function_1] subscriber ||| [arg_2] [function_1]	count=2
module	be called to ||| _vendor requests packages urllib3 util	count=1
function_arg	decodes [arg_2] ||| [function_1] [arg_2]	count=1
class	is ||| base v4	count=1
function	parse the ||| parse	count=1
module	that hold a gnu ||| _vendor distlib	count=1
module	that defines ||| _vendor requests	count=1
arg	dest [arg_2] ||| [arg_1] [arg_2]	count=1
module	accept and host ||| _vendor requests packages urllib3	count=1
function	if it exists ||| existing	count=1
module	given ||| _vendor requests	count=3
module	operation should be ||| _vendor distlib	count=1
function	documentation to ||| documentation	count=1
function	[function_1] cache path ||| [function_2] [function_1]	count=3
function	a hash value for ||| hash	count=1
function_arg	find all [arg_2] ||| [arg_2] [function_1]	count=3
arg	supports optional domain ||| domain	count=1
arg	name for ||| cls name mode fileobj	count=1
module	returns true if :attr ||| _vendor requests	count=1
function	resource ||| resource	count=5
function	as a nested dictionary ||| as dict	count=1
function	iteritems() that returns ||| iteritems	count=1
function	[function_1] zip files ||| [function_1] [function_2]	count=1
function	for an explanation ||| init	count=1
function	source archive download ||| source	count=1
arg	message ||| cls message	count=1
module_class	return a [class_2] ||| [module_1] [class_2]	count=12
function	function as-is see the ||| init	count=1
arg	fields [arg_2] ||| [arg_1] [arg_2]	count=3
function	[function_1] a path ||| [function_2] [function_1]	count=1
arg	[arg_1] must ||| [arg_2] [arg_1]	count=1
function	prefix length from ||| prefix from ip	count=1
module	if possible ||| core	count=1
function	components extract them into ||| from	count=1
function_arg	[function_1] a ||| [arg_2] [function_1]	count=7
class	be a sequence ||| working set	count=1
module	normally one for each ||| distlib	count=1
function_arg	path to [arg_2] ||| [arg_2] [function_1]	count=2
class	this distribution ||| distribution	count=4
module	based on the ||| _vendor requests packages	count=1
function	sorted ||| sorted	count=1
class	of the exception ||| base exception	count=1
class	passed ||| regex	count=1
arg	callback for ||| callback existing	count=1
function	output of sys ||| captured	count=1
function	run a command in ||| run command	count=1
function	it is ||| is	count=2
function	are ||| init	count=1
function	have the same leading ||| has leading	count=1
module	the changes ||| req	count=1
function_arg	add a distribution ||| add dist	count=2
module	the ||| _vendor distlib	count=1
module	as a name that ||| _vendor distlib	count=1
arg	return true if name ||| name	count=2
function	[function_1] url of ||| [function_1] [function_2]	count=1
module	c{re ||| _vendor	count=1
function_arg	cookiejar from a ||| cookiejar cj cookie_dict	count=1
function	rollback ||| rollback	count=1
arg	name for reading or ||| name mode	count=1
arg	object from source ||| source	count=1
function	add the *distribution* to ||| add	count=1
function	path to a file ||| path to	count=1
function	write a dictionary ||| write	count=1
function	to insert [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] expressions ||| [function_1] [arg_2]	count=2
function_arg	installrequirement from a ||| from line cls	count=1
function	for io ||| wait for io	count=1
arg	loader_type loader_type is the ||| loader_type	count=1
function	sleep [function_2] ||| [function_2] [function_1]	count=4
arg	marker ||| marker execution_context	count=1
module	a gnu ||| distlib	count=2
module	a tarball or ||| core	count=1
arg	for resource_name ||| manager resource_name	count=1
function	upload a release file ||| upload file	count=1
class	whether or ||| lock base	count=1
function	select ||| select	count=1
arg	for path [arg_2] ||| [arg_2] [arg_1]	count=2
function	module for ||| init	count=1
function	obtain the url to ||| url	count=1
function	[function_1] user ||| [function_2] [function_1]	count=3
module	of me for display ||| core	count=1
arg	are ||| pattern	count=1
arg	makes this ||| content_disposition content_type content_location	count=1
function	[function_1] set ||| [function_2] [function_1]	count=6
function	a dnsname ||| dnsname	count=1
module_class	[module_1] tarinfo ||| [module_1] [class_2]	count=10
module	a [module_2] ||| [module_1] [module_2]	count=24
function	location ||| location	count=1
function_arg	add [arg_2] ||| [arg_2] [function_1]	count=8
arg	return the name ||| name	count=1
module_class	request [class_2] ||| [module_1] [class_2]	count=1
class	to this locator ||| locator	count=4
function	name of the tree ||| tree	count=1
function	close the ||| close	count=3
class	the changes previously ||| uninstall path set	count=1
class	previously made ||| path set	count=1
arg	set [arg] ||| [arg]	count=1
arg	[arg_1] scheme ||| [arg_2] [arg_1]	count=1
function	suitable download for a ||| process download	count=1
function	scheme ||| scheme	count=1
module	must be called ||| packages urllib3 util	count=1
function	[function_1] finder ||| [function_2] [function_1]	count=3
module	repository [module] the ||| [module]	count=4
arg	major [arg_2] ||| darwin arches [arg_1] [arg_2]	count=4
arg	for path [arg_2] ||| [arg_1] [arg_2]	count=1
module	[module_1] single string ||| [module_1] [module_2]	count=4
class	network ||| network	count=1
module	the ip ||| _vendor	count=1
module	backport ||| requests packages urllib3 packages backports	count=1
class	by ||| uninstall path set	count=1
function	c{re} ||| init	count=1
function	[function_1] matching ||| [function_1] [function_2] req	count=2
function	master [function_2] ||| [function_1] [function_2]	count=5
function_arg	[function_1] headers ||| [function_1] [arg_2]	count=5
function_arg	[function_1] name ||| [arg_2] [function_1]	count=1
module	tar archive ||| _backport	count=1
module	an item to ||| requests packages urllib3 packages	count=1
arg	either 'r' to ||| name mode fileobj format	count=1
function	want to update ||| update	count=1
function	the ||| init	count=4
function	python version in use ||| requires python	count=1
arg	old retries format ||| retries redirect default	count=1
function	turn the prefix length ||| ip int from prefix	count=1
class	the standard formatter but ||| formatter	count=1
function	hash algorithm if ||| hash	count=1
function	parse a map ||| parse map	count=3
arg	path_item if ||| path_item	count=1
class	longer [class] possible ||| [class]	count=1
function	the previous attempt ||| attempt	count=1
module	the current ||| _vendor	count=1
module	provider ||| _vendor pkg_resources	count=1
function	to update [function_2] ||| [function_2] [function_1]	count=3
module	the _stream ||| _vendor	count=1
function	[function_1] cache path ||| [function_1] [function_2]	count=3
module	does an ||| distlib	count=1
function	to find ||| find	count=1
function	verifies ||| check header validity	count=1
class	the ||| error	count=1
class	standard formatter but will ||| formatter	count=1
function	compile()} function as-is ||| init	count=1
class	a requirement ||| requirement	count=1
function	[function_1] digest ||| [function_2] [function_1]	count=1
function	in a defined order ||| config	count=1
arg	to tarinfo ||| tarinfo	count=2
function	fragment container ||| fragment	count=1
arg	iterator ||| iterator	count=1
function	look for an ||| lookup	count=1
class	specifier like objects are ||| base specifier	count=2
function	httplib ||| httplib	count=1
module	find ||| _vendor pkg_resources	count=1
class	parsed tokens ||| parse	count=1
function	named metadata a ||| metadata	count=1
function	items() ||| items	count=1
function_arg	slices [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] of path ||| [function_1] [arg_2]	count=1
arg	makes this request ||| content_disposition content_type content_location	count=1
function_arg	[function_1] dist to ||| [arg_2] [function_1]	count=1
function_arg	check if [arg_2] ||| [function_1] [arg_2]	count=1
module	a decorator that defines ||| requests packages urllib3 packages	count=1
function_arg	[function_1] headers have ||| [arg_2] [function_1]	count=1
module	generate a ||| distlib	count=2
function	lines of a ||| lines	count=1
function	get the hash of ||| get	count=1
class	previously made by ||| uninstall	count=1
function_arg	of supported [arg_2] ||| [function_1] versions [arg_2]	count=2
function	proxymanager [function_2] ||| [function_1] [function_2]	count=1
function	config dir ||| config dir	count=4
function	html [function_2] ||| [function_2] [function_1]	count=2
module	normally one for ||| distlib	count=1
module_class	distribution or [class_2] ||| [module_1] [class_2]	count=2
class	perform ||| httpconnection	count=2
function	if the connection ||| connection	count=1
module	for ||| distlib	count=3
arg	events ||| fileobj events	count=1
function	list of integers as ||| from list	count=1
module	check if the given ||| requests packages	count=1
function	sys ||| captured	count=1
function_arg	[function_1] bitwise netmask ||| [arg_2] [function_1]	count=1
function	heading ||| body	count=1
function	authentication ||| rebuild auth	count=1
function	parse actions ||| only	count=1
function_arg	proxy [arg_2] ||| [arg_2] [function_1]	count=2
class	changes previously made by ||| path set	count=1
module	that defines __unicode__ and ||| requests packages	count=1
arg	encoding of fields ||| fields	count=1
arg	compile()} function as-is ||| pattern	count=1
function	the file ||| to file	count=1
function	[function] files from ||| remove temporary [function]	count=1
function	to make providers ||| loader	count=1
function	[function_1] treewalker ||| [function_2] [function_1]	count=1
arg	[arg_1] files ||| [arg_2] [arg_1]	count=1
function	url to ||| url	count=2
class	>>> lock ||| lock	count=1
function	same leading [function_2] ||| [function_1] [function_2]	count=1
function	list of ||| from list	count=1
arg	contained within ||| prereleases	count=1
function	package ||| package	count=2
module	as-is see the ||| _vendor	count=1
class	linux ||| linux distribution	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=4
arg	point to url ||| url rev_options	count=1
function	dictionary from [function_2] ||| [function_1] [function_2]	count=1
arg	the parameters c{pattern} ||| pattern	count=1
module	a name ||| distlib	count=1
function	read one character ||| char	count=1
class	[class_1] set ||| [class_2] [class_1]	count=2
function	create a package finder ||| package finder	count=1
function	[function_1] working set ||| [function_2] [function_1]	count=3
function_arg	makefile [arg_2] ||| [arg_2] [function_1]	count=1
module	to an ||| distlib	count=1
module_class	[module_1] [class_2] ||| [module_1] urllib3 httpconnection [class_2]	count=4
class	with a registered file ||| base selector	count=1
function	turn the prefix length ||| prefix	count=1
function	the user [function_2] ||| [function_2] [function_1]	count=1
function	poolmanager ||| poolmanager	count=1
module	create a zip file ||| _vendor distlib	count=1
arg	zipimporter ||| importer	count=1
function	html given ||| make htmltags	count=2
arg	the final request ||| request	count=1
function_arg	proxy for [arg_2] ||| [arg_2] [function_1]	count=3
arg	file-like object fsrc ||| fsrc	count=1
module	evaluate ||| _vendor pkg_resources	count=1
class	ipv4 address ||| v4	count=1
arg	to location ||| location	count=1
function	to [function_2] ||| [function_1] [function_2]	count=3
module	a dictionary of ||| distlib	count=2
function	get a treewalker ||| get tree walker	count=1
module	packer for options ||| _vendor	count=1
arg	[arg_1] args into ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] no extension ||| [arg_2] [function_1]	count=1
function	same [function_2] ||| [function_1] [function_2]	count=3
class	configuration ||| configuration	count=2
function	[function_1] agent ||| [function_2] [function_1]	count=9
function	python version in use ||| python	count=1
arg	final request ||| request proxies	count=1
module	has been started ||| packages urllib3 util	count=1
function	makes sure a link ||| link	count=1
class	of all ||| linux distribution	count=1
function	the [function] // ||| [function]	count=1
arg	the given *label* ||| x y label	count=1
function	current position in the ||| position	count=1
arg	[arg_1] and version ||| [arg_2] [arg_1]	count=1
function	should a ||| should	count=1
arg	refnode in the ||| refnode	count=1
module	options ||| msgpack	count=1
arg	specified paths ||| paths	count=1
class	:class ||| pool	count=1
function	write the given text ||| write	count=1
function	encodings [function_2] ||| [function_2] [function_1]	count=1
function	warning ||| warning	count=1
module	pack object ||| _vendor	count=1
class	response as an iterator ||| response	count=1
function	a new timeout from ||| from	count=1
module	a decorator that ||| _vendor requests packages urllib3 packages	count=1
module	returns true ||| requests	count=3
class	all info ||| distribution	count=1
module	that hold a ||| _vendor distlib	count=1
function_arg	[function_1] of path_item ||| [function_1] packagename [arg_2]	count=1
arg	working_set ||| working_set	count=1
function	an editable ||| editable	count=1
arg	or global header ||| encoding	count=1
function	stop [function_2] ||| [function_1] [function_2]	count=6
function_arg	[function_1] group ||| [function_1] [arg_2]	count=2
arg	the tarinfo ||| tarinfo	count=1
class	send ||| control adapter	count=1
function	string ||| string	count=5
arg	member ||| member	count=1
function	urllib3 proxymanager [function_2] ||| [function_2] [function_1]	count=1
function_arg	zip [arg_2] ||| [arg_2] [function_1]	count=3
arg	install a ||| req wheeldir user	count=1
function	[function_1] [function_2] events to be ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] type [arg_2]	count=10
module	a new ipv6 ||| _vendor	count=1
module	given file-like object ||| requests	count=1
arg	project name version ||| project_name	count=1
function	[function_1] file ||| [function_1] [function_2]	count=11
function	is dropped ||| is connection dropped	count=1
class	made by remove() ||| set	count=1
function	into a multipart ||| make multipart	count=1
module	take a list ||| _vendor distlib	count=1
function	compile()} function ||| init	count=1
function	a metaclass ||| metaclass	count=1
function	a download url for ||| download	count=1
module	decorator that defines ||| requests	count=1
function	importer ||| ns handler	count=1
module_class	[module_1] metadata field ||| [module_1] [class_2]	count=2
module_class	[module_1] dictionary with ||| [module_1] ordered [class_2]	count=1
module	a symlink or hardlink ||| _vendor distlib _backport	count=1
arg	if the target ||| target	count=1
function	[function_1] keyword ||| [function_1] [function_2]	count=3
function	parse a ||| parse	count=6
function	is a loopback ||| is loopback	count=3
function	check if ||| check	count=2
class	me ||| error	count=1
module	a ||| distlib	count=77
module	if the given ||| requests	count=1
arg	files ||| files	count=1
function	[function_1] exported entries ||| [function_2] [function_1]	count=1
class	specifier are allowed ||| base specifier	count=1
module	return ||| _vendor distlib _backport	count=2
function	items ||| info	count=3
function_arg	load a [arg_2] ||| [function_1] [arg_2]	count=2
module	a symlink or ||| distlib _backport	count=1
function_arg	[function_1] path ||| [arg_2] [function_1]	count=9
module	current linux distribution ||| _vendor	count=1
function	of the same host ||| same host	count=1
function_arg	bz2 [arg_2] ||| [arg_2] [function_1]	count=3
function	add the *distribution* ||| add	count=1
function	download url ||| to download info	count=1
class	in the cache ||| cache	count=1
arg	the tarinfo [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] from given ||| [function_2] [function_1]	count=1
function	true if the ||| root is	count=1
class	bytes from the file ||| file object	count=1
module	the request has been ||| urllib3 util	count=1
function	their names it has ||| getnames	count=1
function	the current backoff ||| backoff	count=1
class	results ||| parse results	count=1
arg	old retries format ||| cls retries	count=1
function_arg	[function_1] at path ||| [function_1] [arg_2]	count=1
class	under ||| hash	count=1
function	the version is identical ||| check version	count=1
function	timeout from ||| from	count=1
function	[function_1] the name ||| [function_2] [function_1]	count=1
arg	args into ||| args options	count=1
function	2 httplib ||| httplib	count=1
module_class	ordered [class_2] ||| [module_1] [class_2]	count=4
module	function as-is see the ||| _vendor	count=1
function	a commit ||| ref commit	count=1
function	delimited ||| delimited	count=1
module	stream ||| _vendor requests	count=1
module	one for each ||| distlib	count=1
class	the ||| ipaddress base	count=2
function	c{flags} are passed to ||| init	count=1
arg	the paths ||| paths	count=2
class	the ||| hash	count=1
function	[function] letters ||| [function]	count=1
arg	connect to *address* and ||| source_address socket_options	count=1
module	even [module] all but ||| [module]	count=1
function	to insert an ||| insert	count=1
function	backport of [function_2] ||| [function_2] [function_1]	count=2
class	test if this address ||| base network	count=1
module	check if the given ||| _vendor requests packages	count=1
module	looks for a ||| distlib	count=1
function	write a dictionary of ||| write	count=1
arg	[arg_1] used ||| [arg_1] [arg_2]	count=4
module	c{re compile()} function as-is ||| _vendor	count=1
function	type ||| type	count=1
class	the jar ||| jar	count=3
function	of the version field ||| version	count=1
function	see :class ||| packb	count=1
class	from our pool ||| pool	count=1
arg	function ||| func	count=1
module	c{re} module ||| _vendor	count=1
class	a :class ||| session	count=1
arg	each version specified in ||| noarch platform impl	count=1
module	one for each ||| _vendor	count=1
arg	wheeldir ||| wheeldir	count=1
module	package-level ||| packages urllib3 contrib	count=1
function_arg	is current [arg_2] ||| [arg_2] [function_1]	count=1
arg	needed config var ||| var	count=1
module	return ||| _vendor distlib	count=2
module	address as a ||| _vendor	count=1
arg	into this directory ||| directory	count=1
module	[module_1] started ||| [module_2] [module_1]	count=4
function	required by ||| required	count=1
class	whether ||| lock base	count=1
function	[function_1] distribution ||| [function_1] [function_2]	count=9
module	an app ||| pkg_resources	count=1
class	stream if a ||| stream	count=1
arg	dest to point to ||| dest	count=1
arg	minor ||| minor	count=1
function	[function_1] for ||| [function_2] [function_1]	count=7
function	read through the entire ||| load	count=1
function	[function_1] length from ||| [function_1] [function_2]	count=2
function_arg	[function_1] importer_type is ||| [arg_2] [function_1]	count=3
arg	file-like object fsrc to ||| fsrc	count=1
function	object is closed ||| is fp closed	count=1
function	reserved for multicast use ||| multicast	count=1
arg	the python c{re} ||| pattern	count=1
class	ip address as a ||| ipaddress base	count=1
module_class	[module_1] list ||| [module_1] ordered [class_2]	count=1
arg	fields and [arg_2] ||| [arg_1] [arg_2]	count=4
class	the stream ||| input stream	count=4
module	the chksum field which ||| distlib	count=1
module	this ||| core	count=1
class	[class_1] point from ||| [class_2] [class_1]	count=1
arg	pkg-info format data to ||| fileobject skip_unknown	count=1
arg	url if ||| url proxies	count=1
arg	to *address* [arg_2] ||| [arg_2] [arg_1]	count=2
function	return a parser for ||| parser	count=1
arg	algo ||| algo	count=1
arg	[arg_1] minor and ||| darwin arches [arg_1] [arg_2]	count=4
arg	a requirementset ||| build_dir src_dir download_dir upgrade	count=1
module	return packed ||| msgpack	count=1
module_class	for [class_2] ||| [module_1] [class_2]	count=2
class	stream ||| input stream	count=4
class	[class_1] parser ||| [class_2] [class_1]	count=4
class	ordered dictionary with keys ||| ordered dict	count=1
arg	the data to ||| data	count=1
function	the c{re compile()} ||| init	count=1
function	file cache [function_2] ||| [function_1] [function_2]	count=1
class	lock ||| lock	count=1
class	previously ||| uninstall path set	count=1
function	installed [function_2] ||| [function_1] [function_2]	count=2
function	make providers for ||| loader	count=1
function	download url ||| download	count=1
function	and [function] system ||| virtualenv [function]	count=1
function	of tree with built-in ||| tree	count=1
arg	name ||| cls name mode fileobj	count=1
function	[function_1] names ||| [function_2] [function_1]	count=4
function	a file located in ||| distinfo files	count=1
module	arguments return [module] all ||| [module]	count=1
module	the same ||| requests packages urllib3 packages	count=1
function	load ||| load	count=1
module_class	urllib3 [class_2] ||| [module_1] [class_2]	count=1
function_arg	digest [arg_2] ||| [arg_2] [function_1]	count=4
class	expression on ||| parser element	count=2
arg	or ||| encoding	count=1
module	packed bytes see :class ||| _vendor msgpack	count=1
module_class	[module_1] file and ||| [module_1] tar [class_2]	count=1
class	our pool ||| pool	count=1
class	object ||| results	count=1
function	all the threads to ||| threads	count=1
function	to the ||| to	count=1
function	a proxy ||| proxy	count=1
arg	string src ||| src dist	count=1
function_arg	to [arg_2] ||| [function_1] datetime [arg_2]	count=1
function	for quickly disabling ||| disable	count=1
function	of a [function_2] ||| [function_2] [function_1]	count=1
class	using the given expression ||| parser element	count=1
function	metaclass ||| metaclass	count=1
module	bytes see :class packer ||| msgpack	count=1
module	of a symlink or ||| distlib _backport	count=1
function	the file cache ||| to file	count=1
class	formatter but will ||| formatter	count=1
function_arg	to python datetime ||| to date fmt	count=1
class	pretty-printer for parsed ||| parse	count=1
function_arg	[function_1] url if ||| [function_1] [arg_2]	count=3
module	be ||| _vendor requests packages urllib3 util	count=1
class	[class] when ||| [class]	count=1
arg	of dist_name ||| dist_name	count=1
class	by remove() ||| uninstall	count=1
function_arg	[function_1] [arg_2] ||| [function_1] datetime [arg_2]	count=4
function	loopback ||| loopback	count=1
function_arg	directory [arg_2] ||| [arg_2] [function_1]	count=2
function	makefile from ||| makefile	count=1
function	located in the ||| distinfo files	count=1
function	compare two ||| const compare	count=1
function	attribute [function] queued ||| [function]	count=1
function_arg	a path [arg_2] ||| [function_1] [arg_2]	count=1
function	header block ||| header	count=2
function	parser for ||| parser	count=1
function	a new copy of ||| copy	count=1
module	perform a ||| distlib	count=1
module	bytes ||| _vendor msgpack	count=2
module	changes previously made ||| req	count=1
module	or ||| pkg_resources	count=11
class	for an explanation ||| regex	count=1
function	a package [function_2] ||| [function_2] [function_1]	count=1
class	the selector ||| base selector	count=1
module	one for each distributionpath ||| distlib	count=1
function	insert node ||| insert	count=1
module	make a character or ||| distlib	count=1
arg	data ||| data	count=7
function	named resource an ||| resource	count=1
function	a key/value dictionary ||| add dict to	count=1
class	of all info ||| linux distribution	count=1
module	[module_1] a ||| [module_1] [module_2]	count=29
function	from [function] data source ||| [function] release	count=2
module_class	[module_1] [class_2] is opened for reading ||| [module_1] [class_2] next	count=3
function	raise addressvalueerror if needed ||| optional	count=1
module	a file object ||| _vendor	count=1
function	find the ||| find link	count=1
function	raise addressvalueerror if ||| optional	count=1
arg	mode' is either 'r' ||| fileobj format	count=1
function	[function_1] unspecified ||| [function_2] [function_1]	count=3
arg	download_dir for previously ||| download_dir	count=1
class	the changes ||| path set	count=1
function	parse a html fragment ||| parse	count=1
function	string is a ||| is	count=1
function	build [function_2] ||| [function_1] [function_2]	count=5
function	re-quote the ||| requote	count=1
module	the value to use ||| packages urllib3	count=1
module	returns a tuple ||| _vendor distlib	count=1
function	named resource ||| resource	count=2
module	me for display ||| core	count=1
arg	when being redirected ||| prepared_request	count=1
module	return ||| distlib _backport	count=2
function	it is not ||| is	count=1
function	returns glibc [function_1] [function_2] or ||| glibc [function_1] [function_2]	count=1
class	returns ||| parse results	count=1
module	made by remove() ||| req	count=1
module	url on ||| requests packages urllib3	count=1
function	[function_1] abi ||| [function_1] [function_2]	count=1
class	a working [class_2] ||| [class_1] [class_2]	count=1
class	_stream object ||| stream	count=1
function	parse the [function_2] ||| [function_2] [function_1]	count=2
function	integer ||| int	count=1
class	the ||| path set	count=1
module_class	return [class_2] ||| [module_1] [class_2]	count=2
arg	or ||| other	count=1
class	a summary ||| hash error	count=1
module	round up a ||| _vendor distlib	count=1
arg	the fields ||| fields	count=1
module	numpy or ||| pkg_resources	count=1
function	tuple containing the schemes ||| scheme	count=1
module	record ||| _vendor distlib	count=1
class	returns ||| parse	count=1
function_arg	[function_1] the paths ||| [arg_2] [function_1]	count=2
class	previously made by ||| uninstall path	count=1
arg	python c{re} module for ||| pattern	count=1
function	environment [function_2] ||| [function_2] [function_1]	count=1
function	allocated for public networks ||| global	count=2
class	the stream ||| stream	count=5
function	[function_1] [function_2] events to be ||| [function_1] [function_2] events	count=2
function	supported ||| supported	count=1
module	[module] should ||| [module]	count=1
function_arg	gz/tar bz2 [arg_2] ||| [arg_2] [function_1]	count=3
class	compile()} function ||| regex	count=1
module_class	[module_1] [class_2] is opened for reading ||| [module_1] _backport [class_2] next	count=1
arg	[arg_1] to url ||| [arg_1] [arg_2]	count=1
class	by ||| uninstall	count=1
class	this jar ||| jar	count=1
function_arg	proxy [arg_2] ||| [function_1] [arg_2]	count=2
module	get the value ||| packages urllib3	count=1
module	_stream object no ||| distlib	count=1
function	of the exported ||| exported	count=1
class	to working ||| working	count=1
class	the file ||| file	count=6
arg	return the socket object ||| address timeout	count=1
function	data dir for ||| data dir	count=6
module	decorator that defines __unicode__ ||| _vendor requests	count=1
arg	name for reading or ||| cls name mode	count=1
arg	an ||| pattern	count=1
arg	as-is see the python ||| pattern	count=1
arg	events to monitor ||| events data	count=1
arg	platform-specific postprocessing of tempname ||| tempname	count=1
function	a delete request ||| delete	count=1
class	a summary ||| error	count=1
module	a file path ||| _vendor distlib	count=1
arg	one chunk of ||| final	count=1
arg	minor and machine architecture ||| minor	count=1
class	_stream ||| stream	count=1
arg	requirementset ||| build_dir src_dir download_dir upgrade	count=1
function	the logger ||| logger	count=1
class	two specifier like ||| base specifier	count=1
arg	url ||| url new_scheme	count=1
arg	args into a ||| args options finder	count=1
class	parsed [class_2] ||| [class_1] [class_2]	count=1
module	a tar archive ||| _backport	count=1
module	bytes ||| msgpack	count=1
function_arg	namespace packages [arg_2] ||| [arg_2] [function_1]	count=4
module	string like abc ||| _vendor packaging	count=1
arg	supports optional domain and ||| default domain	count=1
function	of zero ||| zero	count=1
class	an explanation of ||| regex	count=1
class	metadata fields ||| legacy metadata	count=2
class	of a ||| parse results	count=1
function_arg	uninstall the [arg_2] ||| [function_1] [arg_2]	count=2
class	be a requirement ||| requirement	count=1
arg	from string src ||| cls src dist	count=1
function	from a python 2 ||| from	count=1
arg	function for ||| func	count=1
class	get ||| tree builder	count=1
function	the exported [function_2] ||| [function_2] [function_1]	count=2
function_arg	child [arg_2] ||| [arg_2] [function_1]	count=1
function	string args ||| string	count=1
function_arg	[function_1] the url ||| [arg_2] [function_1]	count=3
class	expression as ||| parser element	count=1
class	the ||| ipaddress	count=2
function	release [function_2] ||| [function_1] [function_2]	count=1
arg	of ||| pattern	count=1
arg	from [arg] ||| [arg]	count=3
class	two specifier ||| specifier	count=1
function	prefix length ||| from prefix	count=1
module	has been [module_2] ||| [module_1] [module_2]	count=4
function	parsed date string to ||| to	count=1
class	any ansi sequences ||| ansi to	count=1
class	object ||| object	count=1
module	c{parseresults} object ||| _vendor	count=1
function	[function_1] any errors ||| [function_2] [function_1]	count=1
function	true if the ||| is	count=1
module	keys in a ||| _vendor	count=1
arg	return the socket ||| timeout	count=1
function	the minor [function_2] ||| [function_1] [function_2]	count=4
function	pack ||| packb	count=1
module	are ||| _vendor	count=1
module_class	for this distribution ||| _vendor distlib distribution	count=1
module	must be ||| _vendor requests packages urllib3 util	count=1
class	file ||| in file	count=1
module	distribution or ||| _vendor pkg_resources	count=1
arg	tags for each version ||| noarch platform impl	count=1
function	abi [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] name ||| [function_2] [function_1]	count=1
module	given python ||| requests	count=1
arg	user-shared data ||| multipath	count=1
class	parser possible _update_defaults() ||| parser	count=1
module	given an pyopenssl certificate ||| requests packages urllib3 contrib	count=1
arg	given the first and ||| first	count=1
arg	name for reading or ||| name mode fileobj	count=1
function	check the environment ||| environment	count=1
function	verifies that ||| check header validity	count=1
module	the object as a ||| distlib	count=1
function_arg	subpath [arg_2] ||| [arg_2] [function_1]	count=3
module	or ||| core	count=1
function	return repr of all ||| repr	count=1
arg	from source ||| source	count=1
function	list of ||| intranges from list	count=1
function	asserts whether all ||| assert header parsing	count=1
arg	resource prefix to ||| prefix	count=1
arg	object fsrc to file-like ||| fsrc	count=1
arg	*address* and return the ||| source_address socket_options	count=1
function	[function_1] number of ||| [function_1] [function_2]	count=3
arg	a string of characters ||| characters	count=1
class	no ||| stream	count=1
function	tuple of version ||| version	count=1
class	as a ||| ipaddress base	count=1
function	source ||| source	count=1
arg	path will be ||| path	count=1
function	of sys ||| captured	count=1
arg	a distribution to ||| dist	count=1
function	remove [function_2] ||| [function_1] [function_2]	count=1
function	move a file ||| move	count=1
module	operation should ||| _vendor distlib _backport	count=1
module	decorator that ||| _vendor requests packages	count=1
module	posting to an http ||| distlib	count=1
function	insert [function_2] ||| [function_1] [function_2]	count=2
module	returns [module_2] ||| [module_1] [module_2]	count=5
class	stream up to but ||| input stream	count=1
module	that defines __unicode__ ||| _vendor requests	count=1
module	_stream object no operation ||| _vendor distlib	count=1
function	[function_1] installed version ||| [function_2] [function_1]	count=1
function	the lsb_release command ||| lsb	count=1
function	insert an [function_2] ||| [function_2] [function_1]	count=3
arg	given url from ||| url	count=1
class	a ||| results	count=2
arg	locate distribution for requires ||| requires	count=1
function_arg	entry point [arg_2] ||| [arg_2] [function_1]	count=1
module	started ||| requests packages	count=1
module	points ||| core	count=1
module	that ||| requests	count=1
function_arg	installrequirement from [arg_2] ||| [function_1] [arg_2]	count=5
arg	the working_set to see ||| working_set	count=1
arg	optional domain ||| domain	count=1
function	[function_1] confidence based ||| [function_2] [function_1]	count=1
function_arg	[function_1] dictionary on ||| [function_1] [arg_2]	count=2
module	parsed ||| _vendor requests	count=1
module	a directory tree ||| _vendor distlib	count=2
function	the cache control ||| cache control	count=2
class	each ||| cache	count=1
class	a working [class_2] ||| [class_2] [class_1]	count=1
class	list ||| list	count=1
function	urllib3 proxymanager ||| manager	count=1
module	be called to ensure ||| requests packages urllib3 util	count=1
module	perform ||| packages urllib3	count=2
function	writing with gzip compression ||| write gz	count=1
function	package [function_2] ||| [function_2] [function_1]	count=1
class	implementation of - ||| parser	count=1
function	method of the ||| rebuild method	count=1
module	given an ||| _vendor requests packages	count=1
arg	associated with entry if ||| insert replace	count=1
function_arg	[function_1] python datetime ||| [function_1] date [arg_2]	count=4
function	see :class packer ||| packb	count=1
function	urls for identity ||| urls	count=1
function	all the children ||| reparent children	count=1
function	any [function] ||| add [function]	count=2
module_class	[module_1] gnu tar ||| [module_1] [class_2]	count=1
arg	optional domain ||| name default domain	count=1
class	a ||| parse	count=2
class	this specifier are allowed ||| specifier	count=1
function	of the version ||| version	count=1
function	node from the children ||| child	count=1
arg	the given major ||| major	count=1
function_arg	supported tags [arg_2] ||| [arg_2] [function_1]	count=4
arg	download_dir for previously ||| link download_dir hashes	count=1
module	the [module] ||| _vendor [module] packages urllib3	count=2
function	sure a link ||| link	count=1
function	compare two digests ||| compare	count=1
class	of the stream ||| stream	count=1
class	c{flags} are passed to ||| regex	count=1
function	specified os-release file ||| os	count=1
class	this specifier ||| base specifier	count=1
function	package ||| build package	count=1
function	the exported entries in ||| exported entries	count=1
module	value ||| packages urllib3 util	count=3
function	set and make ||| set	count=1
class	of the ||| base	count=1
module	for posting to an ||| _vendor distlib	count=1
function_arg	asserts whether [arg_2] ||| [function_1] [arg_2]	count=3
class	field ||| field	count=1
module	translate a ||| distlib	count=1
function	determines if ||| is	count=1
function	[function_1] confidence ||| [function_2] [function_1]	count=1
function	an encoding ||| lookup	count=1
function	to split ||| split	count=3
module_class	entry [class_2] ||| [module_1] [class_2]	count=6
function	[function_1] map ||| [function_1] [function_2]	count=1
function	download url for ||| to download	count=1
class	cache ||| cache	count=6
module	[module_1] given file-like ||| [module_1] [module_2]	count=2
module	information from a ||| _vendor distlib _backport	count=1
arg	either 'r' ||| name mode fileobj format	count=1
module	look for ||| _vendor webencodings	count=1
function_arg	hook dictionary ||| dispatch hook key	count=1
arg	supports optional domain and ||| domain	count=1
function	[function_1] point of ||| [function_1] [function_2]	count=1
arg	[arg_1] method used ||| [arg_2] [arg_1]	count=2
class	of - ||| parser	count=1
module	the value of ||| packages urllib3	count=1
function	headers from a python ||| from	count=1
class	linux distribution ||| linux distribution	count=8
function	the prefix ||| from prefix	count=1
module	an exception ||| distlib	count=1
function	and wait for them ||| wait	count=1
arg	url they came from ||| data url	count=1
arg	class for various types ||| treetype implementation	count=1
function	after the previous ||| after	count=1
class	to the cache ||| cache	count=1
function	raise ||| raise	count=1
arg	a [arg] and return ||| [arg]	count=1
module	a single ||| _vendor distlib	count=1
function	return ||| get cache	count=1
function	marker file ||| marker file	count=2
module	checks if ||| packages urllib3 util	count=1
arg	list of specifications ||| specifications	count=1
arg	major minor and machine ||| major minor	count=1
arg	given url from ||| url raise_errors	count=1
module	normally one ||| _vendor	count=1
class	use a response as ||| response	count=1
class	see if this distribution ||| distribution	count=1
class	version ||| version conflict	count=2
module	started so we should ||| packages	count=1
class	c{re} module ||| regex	count=1
class	stream if internal ||| stream	count=1
arg	to dst ||| dst	count=3
function	[function_1] a loopback ||| [function_1] [function_2]	count=1
module	a character ||| _vendor distlib	count=1
module	a character or ||| distlib	count=1
class	ordered dictionary ||| ordered dict	count=1
function_arg	[function_1] into a ||| [function_1] [arg_2]	count=1
function	assume that the server ||| is read error	count=1
module	given an pyopenssl ||| _vendor requests packages	count=1
module	the accept and ||| _vendor requests	count=1
function_arg	count the [arg_2] ||| [arg_2] [function_1]	count=2
function	a download ||| download info	count=1
class	summary of ||| error	count=1
function	a package finder ||| package finder	count=1
class	a cookie ||| cookie	count=1
class	the stream if ||| htmlbinary input stream	count=1
class	address as a string ||| ipaddress base	count=1
class	[class] is compliant ||| [class]	count=1
module	[module_1] [module_2] ||| [module_2] requests [module_1]	count=2
class	c{parseresults} ||| parse	count=1
function	parameters c{pattern} ||| init	count=1
class	list of key value ||| dict	count=1
arg	packagefinder ||| find_links index_urls allow_all_prereleases trusted_hosts	count=1
class	[class] from ||| [class]	count=3
function	return ||| get missing reqs	count=1
class	to this locator ||| directory locator	count=1
arg	filename to extract_dir ||| filename extract_dir	count=6
arg	a connection adapter to ||| adapter	count=1
function	[function_1] after the ||| [function_2] [function_1]	count=1
function_arg	the path [arg_2] ||| [function_1] [arg_2]	count=2
function	return [function_2] ||| [function_1] [function_2]	count=38
function	version of the current ||| version	count=2
arg	resource_name ||| resource_name	count=2
function	stop ||| stop	count=1
module_class	[module_1] [class_2] ||| [module_1] tar [class_2]	count=7
function	[function_1] currently ||| [function_2] [function_1]	count=1
arg	sockets or optionally ||| socks timeout	count=2
class	made by ||| uninstall path	count=1
arg	method used ||| method url	count=2
arg	[arg_1] socket ||| [arg_2] [arg_1]	count=2
function	base ||| base	count=1
module	if the given ||| _vendor requests packages	count=1
module	decorator that defines ||| _vendor requests	count=1
function	return the codename for ||| codename	count=1
class	exception with ||| exception	count=1
module	distribution ||| _vendor pkg_resources	count=1
module	operation should be ||| distlib _backport	count=1
module	a string that identifies ||| distlib	count=1
arg	to the given rev_options ||| dest rev_options	count=1
function	file-like object is ||| is	count=1
module	present or none otherwise ||| pkg_resources	count=1
class	prepares ||| prepared request	count=7
function_arg	yield [arg_2] ||| [arg_2] [function_1]	count=1
arg	the message ||| message	count=1
module	a tarball or if ||| core	count=1
module	context-management ||| requests	count=1
module	bytes see :class ||| _vendor	count=1
module	be closed ||| packages urllib3 util	count=1
arg	the filename ||| filename	count=1
function	config dir for ||| config dir	count=4
module	a distribution or ||| _vendor pkg_resources	count=1
class	bazaar ||| bazaar	count=1
class	the repo ||| version control	count=1
function_arg	[function_1] headers returning ||| [arg_2] [function_1]	count=4
module	a ||| core	count=5
arg	first ||| first	count=1
module	determine if a ||| distlib	count=1
function_arg	url the [arg_2] ||| [arg_2] [function_1]	count=4
function	download for ||| download	count=1
class	the option ||| config option	count=1
function_arg	in a [arg_2] ||| [function_1] [arg_2]	count=1
class	response data one line ||| response	count=1
module	a symlink or ||| distlib	count=1
module	to the c{re ||| _vendor	count=1
function	[function_1] the same ||| [function_2] [function_1]	count=1
class	deregister ||| request hooks mixin	count=1
function	points to ||| is	count=1
function	the file cache ||| file	count=1
function	target member ||| link target	count=1
function	dir for ||| dir	count=7
module	object as [module_2] ||| [module_1] [module_2]	count=1
function	test to see ||| to	count=1
function	of the terminal window ||| terminal size	count=1
function	[function_1] attempt ||| [function_2] [function_1]	count=2
function	attempt to split a ||| split	count=1
function	delete request ||| delete	count=1
module	should be ||| packages urllib3 util	count=1
function	[function_1] mapping ||| [function_1] [function_2]	count=1
class	response data one ||| response	count=1
function	prefix length ||| int from prefix	count=1
class	manifest ||| manifests	count=1
function	the domains in the ||| domains	count=1
function	prefix length from ||| from prefix	count=1
arg	associated with [arg_2] ||| [arg_2] [arg_1]	count=4
module	context-management ||| _vendor requests	count=1
module	a filesystem or zipfile ||| _vendor pkg_resources	count=1
module	library on ||| packages	count=1
class	made by ||| path	count=1
arg	resource ||| relative_path	count=1
module	provides an ||| _vendor distlib	count=1
function	dir ||| dir	count=8
module	python ||| packages urllib3 packages	count=1
module	value to ||| packages urllib3 util	count=1
module	_stream object no ||| _vendor	count=1
function	error [function_2] ||| [function_2] [function_1]	count=2
function	return confidence ||| get confidence	count=2
function	[function_1] string ||| glibc [function_1] [function_2]	count=1
function	re-quote ||| requote	count=1
class	tarinfo [class_2] ||| [class_1] [class_2] next	count=1
function	compare two ||| compare	count=2
function	build number of ||| build number	count=2
function	defined order ||| config	count=1
function	slices of ||| slices	count=1
function	return a parser ||| parser	count=1
function	parse [function_2] ||| [function_2] [function_1]	count=3
function	child ||| append child	count=1
function	the prefix length into ||| int from prefix	count=1
class	from the file ||| file object	count=1
function	of ||| of	count=1
module	takes a string like ||| packaging	count=1
module	map for group, or ||| pkg_resources	count=1
class	of the exception with ||| base exception	count=1
function_arg	[function_1] number of ||| [function_1] zero bits [arg_2]	count=1
function_arg	samefile [arg_2] ||| [function_1] [arg_2]	count=1
class	tarinfo' ||| tar file	count=1
class	if this address ||| ipv4address	count=1
function	[function_1] the distribution ||| [function_1] [function_2]	count=6
class	we can_add() ||| environment	count=1
function	[function_1] treewalker ||| [function_1] tree [function_2]	count=1
arg	port and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	object fsrc to ||| fsrc	count=1
class	formatter but will ||| indenting formatter	count=1
function	rollback the ||| rollback	count=1
function_arg	is current [arg_2] ||| [function_1] file_path [arg_2]	count=1
class	ip address as a ||| ipaddress	count=1
function	address is [function_2] ||| [function_2] [function_1]	count=1
module	object no ||| _backport	count=1
class	-> new ordered dictionary ||| ordered dict	count=1
arg	byte count by ||| count	count=1
module	returns true if ||| requests	count=3
function	slices ||| slices	count=1
class	ipv6 [class_2] ||| [class_2] [class_1]	count=2
class	this api may change ||| distribution	count=1
module	value ||| requests packages urllib3 util	count=3
function	normalize a file/dir ||| normalize path	count=1
function	a mapping ||| map	count=1
function_arg	[function_1] single requirements ||| [arg_2] [function_1]	count=1
module	this points ||| core	count=1
arg	for path ||| path	count=1
module	named field returns ||| requests packages urllib3	count=1
function	4 ||| v4	count=1
class	address ||| base	count=2
class	of a c{parseresults} object ||| parse results	count=1
function	the paths names ||| path names	count=1
function	[function_1] random ||| [function_2] [function_1]	count=2
module	python ||| urllib3 packages	count=1
arg	project name version and ||| project_name	count=1
function	lsb_release command output ||| lsb	count=2
function	dependencies ||| dependencies	count=2
module	the _stream object ||| _vendor	count=1
function_arg	digest from ||| digest info	count=1
arg	python 3 5 ||| mode buffering encoding errors	count=1
arg	[arg] instance ||| [arg]	count=1
class	linux [class_2] ||| [class_2] [class_1]	count=17
arg	[arg_1] if entry ||| [arg_2] [arg_1]	count=2
class	of the stream ||| input stream	count=1
arg	events ||| events	count=2
module	and raise an ||| distlib	count=1
module_class	[module_1] ntlm ||| [module_1] [class_2]	count=1
module	options ||| _vendor msgpack	count=2
class	we can_add() it ||| environment	count=1
function	pip delete [function_2] ||| [function_2] [function_1]	count=2
function	name of the current ||| name	count=1
function	"rel" attribute [function] ||| [function]	count=1
arg	[arg] k not ||| [arg]	count=1
class	wheel in ||| wheel	count=1
module_class	[module_1] util ||| [class_2] [module_1]	count=1
function	of a ||| of	count=1
class	summary of me for ||| hash error	count=1
function	[function_1] edge ||| [function_1] [function_2]	count=1
function	pip delete marker file ||| delete marker file	count=1
function	register ||| register	count=4
class	parse [class_2] ||| [class_1] [class_2]	count=1
class	sigint handler for later ||| mixin	count=1
function	send a ||| send	count=1
module	ordered ||| packages urllib3 packages	count=1
class	of file ||| file	count=1
function	url to ||| request url	count=1
class	:class preparedrequest <preparedrequest> for ||| request	count=1
arg	a-z [arg] mapped ||| [arg]	count=1
function	exported ||| exported	count=1
class	under the ||| hash error	count=1
module	this ||| _vendor pkg_resources	count=1
class	registered file ||| selector	count=1
function_arg	[function_1] accessible via ||| [arg_2] [function_1]	count=2
function	a list of ||| from list	count=1
function	[function_1] control ||| [function_2] [function_1]	count=3
module	a tuple containing the ||| _vendor distlib _backport	count=2
class	list of key ||| dict	count=1
module	use ||| _vendor requests	count=1
function	appropriate connection adapter ||| adapter	count=1
class	-> new ordered ||| ordered	count=1
function	[function_1] exported entries ||| distribution path [function_1] [function_2]	count=1
class	expression as a ||| parser element	count=1
function	yield named metadata resource ||| metadata	count=1
function_arg	the server [arg_2] ||| [function_1] [arg_2]	count=1
class	different directives ||| cache controller	count=1
function	an encoding object or ||| encoding	count=1
function	see the python ||| init	count=1
arg	acceptable patterns and flags ||| flags	count=1
function	[function_1] sort of ||| [function_2] [function_1]	count=1
module	backport ||| packages urllib3 packages backports	count=1
class	the ip ||| ipaddress base	count=1
arg	the old retries format ||| cls retries redirect default	count=1
function	a path to a ||| to	count=1
arg	name and ||| name	count=1
arg	specified paths and ||| paths	count=1
module	to an http ||| distlib	count=1
arg	request ||| request	count=2
function_arg	a digest [arg_2] ||| [function_1] [arg_2]	count=4
function	compile()} function as-is see ||| init	count=1
arg	name for reading ||| name mode fileobj	count=1
module	is the same ||| packages urllib3 packages	count=1
function	locations ||| locations	count=1
arg	writing ||| mode fileobj	count=2
arg	are passed to the ||| pattern	count=1
class	file and look ||| file	count=1
function_arg	load [arg_2] ||| [function_1] [arg_2]	count=1
function	platform-relevant user cache dir ||| default cache	count=1
class	finder this ||| finder	count=2
arg	a single requirements ||| finder req_to_install require_hashes ignore_dependencies	count=1
function	[function] at a ||| [function] only at	count=1
arg	with the fields ||| fields	count=1
function	[function_1] dictionary ||| [function_2] [function_1]	count=1
arg	path args ||| path	count=1
arg	grouping [arg] even ||| [arg]	count=1
module	an ||| packages	count=2
arg	true if name ||| name	count=2
class	as ||| ipaddress base	count=1
function	passed in any ||| write	count=1
function	the version of ||| version	count=1
function	default user agent ||| default user agent	count=2
function_arg	delimited list [arg_2] ||| [arg_2] [function_1]	count=1
function	returns current column ||| col	count=1
module	[module] supported ||| [module]	count=1
function	update our cached value ||| update cached response	count=1
module	hold a ||| _vendor distlib	count=1
function	the record file using ||| installed	count=1
arg	a given url ||| url raise_errors	count=1
function	[function] the ||| get [function]	count=2
function	[function_1] dropped and ||| [function_1] [function_2]	count=4
class	me for ||| hash error	count=1
function	the cache ||| cache	count=1
function	topological ||| topological	count=1
function	a download ||| to download info	count=1
module	module for an ||| _vendor	count=1
class	all ||| linux	count=1
module	page and with a ||| distlib	count=1
class	return ||| linux	count=1
module	converter [module] the ||| _vendor [module]	count=1
module	has been ||| urllib3 util	count=1
function	candidate for a download ||| to download	count=1
function	parse a distro release ||| parse distro release	count=1
function	that the server ||| is read error	count=1
arg	object o and ||| o	count=1
class	a zipfile ||| zip	count=1
function	authentication ||| auth	count=2
function_arg	dir for [arg_2] ||| [arg_2] [function_1]	count=7
function_arg	current [arg_2] ||| [function_1] file_path [arg_2]	count=1
module	req ||| req	count=1
class	address as ||| ipaddress base	count=1
arg	[arg_1] to url ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] possibly ||| [arg_2] [function_1]	count=2
arg	the method used ||| method url	count=2
module	or [module] ||| [module]	count=1
function	[function_1] domains ||| [function_2] [function_1]	count=4
function_arg	version of dist_name ||| version dist_name	count=2
arg	constructs and sends ||| url	count=1
arg	[arg_1] targetpath ||| [arg_2] [arg_1]	count=1
module	to the ||| _vendor	count=1
class	in the stream ||| htmlunicode input stream	count=1
function	the method of the ||| rebuild method	count=1
function_arg	create a [arg_2] ||| [arg_2] [function_1]	count=1
arg	paths ||| paths	count=4
function	remove node from the ||| remove	count=1
function	tarball ||| is	count=1
function_arg	command [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] appropriate to ||| [function_1] [arg_2]	count=4
module	to an http server ||| distlib	count=1
function	return a header ||| header	count=1
module	[module_1] an pyopenssl ||| [module_1] [module_2]	count=2
class	path ||| encoding mixin	count=1
function	viewitems() ||| viewitems	count=1
class	address as a string ||| ipaddress	count=1
module	up a ||| distlib _backport	count=1
module	be called ||| requests packages urllib3 util	count=1
module	address ||| _vendor	count=1
function	the master [function_2] ||| [function_2] [function_1]	count=5
class	formatter ||| formatter	count=1
function	[function_1] 2 httplib ||| [function_2] [function_1]	count=2
module	field returns ||| requests packages	count=1
function	is a [function_2] ||| [function_1] [function_2]	count=7
module_class	[module_1] file object ||| [module_1] tar [class_2]	count=3
module	for display ||| core	count=1
class	are passed to ||| regex	count=1
function	[function_1] list of ||| [function_1] [function_2]	count=2
function	helper for quickly disabling ||| disable	count=1
module	urllib3 ||| urllib3	count=4
function	is compatible with ||| is compatible	count=2
class	for ||| hash error	count=1
function	into a multipart ||| multipart	count=1
module	a name ||| _vendor distlib	count=1
arg	paths with confirmation (unless ||| auto_confirm	count=1
class	summary of me ||| hash error	count=1
arg	tags from web page ||| s l tokens	count=1
module	the parameters ||| _vendor	count=1
arg	the text and optionally ||| text	count=1
function_arg	[function_1] and ||| [function_1] [arg_2]	count=5
function	the codename for ||| codename	count=1
function_arg	[function_1] [arg_2] ||| [function_1] versions [arg_2]	count=23
arg	given a url ||| url	count=1
arg	_stream object ||| name mode comptype fileobj	count=1
module	returns true if :attr ||| requests	count=1
class	registered ||| selector	count=1
module	process a ||| _vendor distlib	count=1
function	that require matching ||| match	count=1
arg	paths if [arg_2] ||| install [arg_1] [arg_2]	count=2
arg	distribution to ||| dist	count=1
module	register ||| _vendor pkg_resources	count=2
module	for context-management ||| _vendor requests	count=1
arg	fail due to eintr ||| recalc_timeout	count=1
module	an pyopenssl ||| packages urllib3	count=1
module	look for an encoding ||| webencodings	count=1
function_arg	[function_1] key/value ||| [function_1] dict [arg_2]	count=1
module	a given file-like ||| _vendor requests packages	count=1
module	an ||| _vendor html5lib treebuilders	count=1
function	serialize ||| tostring	count=1
class	to the index ||| package index	count=2
function	prefix length from ||| prefix from ip int	count=1
arg	major [arg_2] ||| [arg_2] [arg_1]	count=4
class	parameters ||| regex	count=1
function	key associated with a ||| key	count=1
function	file is locked ||| is locked	count=1
function_arg	[function_1] into ||| [function_1] [arg_2]	count=2
module	an object and test ||| _vendor requests	count=1
function_arg	bz2 filename to ||| tarfile filename	count=1
function	[function_1] download for ||| [function_2] [function_1]	count=2
function	[function] data ||| [function] release	count=10
arg	names ||| names	count=1
class	the changes previously made ||| set	count=1
module	if a ||| _vendor distlib	count=1
function	dns pointer name ||| pointer	count=1
function_arg	stream decodes [arg_2] ||| [arg_2] [function_1]	count=1
arg	of the working_set ||| working_set	count=1
arg	at path ||| path	count=1
function_arg	server [arg_2] ||| [function_1] [arg_2]	count=1
class	c{re compile()} function ||| regex	count=1
module	a string or sequence ||| pkg_resources	count=1
class	parser possible ||| parser	count=1
arg	potentially flush ||| decode_content flush_decoder	count=1
function	to a file object ||| file	count=1
arg	the c{re compile()} ||| pattern	count=1
arg	byte count by blocksize ||| count	count=1
module	been started so we ||| packages urllib3 util	count=1
function	[function_1] marker file ||| [function_1] [function_2]	count=3
function_arg	distributions [arg_2] ||| [function_1] [arg_2]	count=1
function	to a file ||| to	count=1
class	as this connection pool ||| httpconnection pool	count=1
function	return an iterator for ||| get	count=1
arg	to the destination location ||| location	count=1
module	make a ||| distlib _backport	count=1
module	an ||| packages urllib3 contrib	count=2
arg	from ||| cj cookie_dict	count=1
class	previously made by ||| path	count=1
function	user ||| user	count=2
function	print ||| print results	count=1
module	to ||| core	count=1
arg	distribution ||| dist	count=1
module	object ||| distlib _backport	count=2
function	a distro [function_2] ||| [function_1] [function_2]	count=2
class	the changes previously ||| path	count=1
module	given an pyopenssl certificate ||| requests packages urllib3	count=1
function	return the file ||| url to file	count=1
function	the body ||| body	count=1
arg	mode' is either 'r' ||| mode fileobj format	count=1
module	no ||| _backport	count=1
class	any ||| base heuristic	count=1
arg	mode' is either 'r' ||| format	count=1
function_arg	[function_1] distribution ||| [function_1] [arg_2]	count=1
module_class	returns a [class_2] ||| [module_1] [class_2]	count=1
module	can_add() ||| _vendor pkg_resources	count=1
function_arg	octet [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] the cache ||| [function_2] [function_1]	count=1
function_arg	[function_1] distribution to ||| [arg_2] [function_1]	count=1
class	must be ||| working set	count=1
class	the file [class_2] ||| [class_2] [class_1]	count=1
arg	set of events to ||| events	count=1
arg	path_item ||| path_item parent	count=1
function	a defined order ||| config	count=1
arg	a file's [arg] ||| [arg]	count=3
function_arg	[function_1] importer_type is ||| [function_1] [arg_2]	count=3
function	an edge from ||| edge	count=1
arg	numeric ||| cls prefixlen_str	count=1
function	with a ||| with	count=1
module	construct a ||| _vendor distlib _backport	count=2
class	for parsed results ||| parse results	count=2
class	[class_1] - ||| [class_2] [class_1]	count=4
module	or [module_2] ||| [module_2] [module_1]	count=1
function	a options ||| options	count=2
module	of self that is ||| pkg_resources	count=1
function	version [function_2] ||| glibc [function_1] [function_2]	count=1
function	representing the user agent ||| user agent	count=1
arg	args into a ||| args options	count=1
module	given file-like ||| requests	count=1
module_class	urllib3 util ||| packages urllib3 httpconnection	count=1
arg	it [arg] see :class ||| o [arg]	count=1
module	same as for ||| requests packages urllib3 packages	count=1
class	to the graph ||| graph	count=1
arg	connection adapter to ||| adapter	count=1
module	attempts ||| packages urllib3 util	count=1
class	list of parsed ||| parse	count=1
class	the path ||| distribution path	count=1
module_class	under the [class_2] ||| [module_1] [class_2]	count=2
function	the method ||| method	count=1
class	from the stream or ||| htmlunicode input stream	count=1
function	return an installationcandidate ||| link package	count=1
function_arg	if [arg_2] ||| [arg_2] [function_1]	count=2
function	[function_1] metaclass ||| [function_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] node [arg_2]	count=4
class	explanation of the ||| regex	count=1
arg	dictionary on ||| key	count=1
arg	destination location ||| location	count=1
class	for parsed [class_2] ||| [class_1] [class_2]	count=1
module	all urllib3 ||| packages urllib3	count=1
function	fileobj' (using os ||| gettarinfo	count=1
function	length from ||| from ip	count=1
function_arg	[function_1] given url ||| [function_1] [arg_2]	count=1
arg	the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
function	format ||| format	count=1
function_arg	children [arg_2] ||| [function_1] [arg_2]	count=1
arg	index ||| index	count=1
module	value of ||| requests packages urllib3 util	count=1
function	inc ||| inc convert	count=2
function	reserved for link-local ||| link local	count=2
function	file located in the ||| distinfo files	count=1
function	to split a string ||| split	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=168
module	the ||| distlib	count=1
class	the file ||| in file	count=1
function_arg	from [arg_2] ||| [function_1] prefix string [arg_2]	count=1
function	identifies the current platform ||| platform	count=1
function	a wheel ||| move wheel files	count=1
class	return a summary ||| hash error	count=1
module	bytes see ||| _vendor msgpack	count=1
function	if this points ||| is	count=1
module	this must be called ||| requests packages urllib3 util	count=1
arg	explanation ||| pattern	count=1
module_class	of a parser ||| _vendor parser	count=1
arg	called ||| conn	count=1
function	[function_1] marker ||| [function_1] [function_2]	count=3
function	uncompressed ||| taropen	count=1
arg	a bitwise netmask ||| prefixlen	count=1
function	all [function_2] ||| [function_2] [function_1]	count=3
arg	req_to_install should ||| req_to_install finder	count=1
function	actual artifact e g ||| is artifact	count=1
function	netrc ||| netrc	count=1
class	from the stream up ||| input stream	count=1
module	see :class ||| _vendor msgpack	count=1
function	the named resource ||| resource	count=2
module_class	a [class_2] ||| [module_1] _backport [class_2] next	count=3
class	the hash of ||| hash missing	count=1
arg	callback for ||| callback	count=1
function	download url for a ||| to download	count=1
function	return ||| get dist	count=1
function	the first found ||| first	count=1
module	in a ||| _vendor distlib	count=1
function	for quickly disabling all ||| disable	count=1
arg	for the url ||| url proxies	count=1
module	given an pyopenssl ||| requests packages	count=1
class	made by remove() ||| uninstall	count=1
function_arg	mode bits [arg_2] ||| [function_1] [arg_2]	count=3
module_class	[module_1] any ansi ||| [module_1] [class_2]	count=2
function	load a ||| load	count=1
class	file [class_2] ||| [class_2] [class_1]	count=1
module	returns an ||| _vendor requests packages urllib3	count=1
function	helpful [function_2] ||| [function_2] [function_1]	count=1
function	a package ||| build package	count=1
function	decode the ||| decode	count=1
module	request has been started ||| requests packages urllib3 util	count=1
class	operator [class_2] ||| [class_2] [class_1]	count=4
function	add it ||| add	count=1
module_class	[module_1] :class ||| [module_1] [class_2]	count=4
class	response data ||| response	count=1
module	returns a list of ||| _vendor distlib	count=2
function	a path to a ||| path to	count=1
arg	[arg_1] in versions ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] appropriate ||| [arg_2] [function_1]	count=4
arg	path [arg_2] ||| [arg_1] [arg_2]	count=1
function	installed in ||| in	count=1
class	environment ||| environment	count=1
function	return [function_2] ||| support [function_1] backend [function_2]	count=3
function_arg	add a [arg_2] ||| [arg_2] [function_1]	count=5
function	host as this ||| host	count=1
arg	parameters ||| pattern	count=1
arg	manifest at path ||| path	count=1
module	on the server that ||| _vendor requests packages urllib3	count=1
class	the finder this ||| finder	count=2
function	are dependent on ||| dependent	count=1
class	the stream or queue ||| stream	count=1
class	by ||| set	count=1
class	[class_1] set ||| [class_1] [class_2]	count=2
function	write ||| write and	count=1
function	abi ||| abi	count=1
class	ordered dictionary signature is ||| ordered dict	count=1
module	of the ||| _vendor	count=3
class	*requirement* for the ||| graph	count=1
class	connection from the pool ||| pool	count=1
class	exception ||| exception	count=1
class	make ||| base v6	count=1
module	a tuple ||| distlib _backport	count=2
module	a given file-like object ||| _vendor requests packages	count=1
module	[module] all ||| [module]	count=1
module	a zip file from ||| _vendor distlib	count=1
function	file object ||| file	count=1
module	generate a ||| _vendor distlib	count=2
class	passed to the c{re ||| regex	count=1
arg	dispatches ||| hooks hook_data	count=1
module	been started so we ||| requests packages urllib3 util	count=1
module	checks if a given ||| _vendor requests packages urllib3 util	count=1
arg	[arg_1] the method ||| [arg_2] [arg_1]	count=2
class	[class] extended ||| [class]	count=1
function	:class packer for ||| packb	count=1
function	requirement that triggered ||| requirement name	count=1
function	archive ||| register archive	count=1
module	get the value ||| requests packages urllib3 util	count=1
arg	file-like object for specified ||| package_or_requirement resource_name	count=1
function	we want to update ||| update	count=1
function	change the method of ||| rebuild method	count=1
function	topological sort ||| topological sort	count=2
function	names known to ||| names	count=6
function	files in a ||| files	count=1
class	for each ||| cache	count=1
arg	accessible via path_item ||| path_item only	count=2
module_class	archive [class_2] ||| [module_1] [class_2]	count=4
function	files in ||| files	count=1
function_arg	link_path [arg_2] ||| [function_1] link_path [arg_2]	count=1
function	create a package ||| build package	count=1
arg	kwarg warner ||| maker	count=1
class	the two specifier ||| specifier	count=1
class	stream if ||| htmlbinary input stream	count=1
module	the python ||| _vendor	count=1
module_class	like object ||| _vendor packaging base	count=2
function	a loopback address ||| loopback	count=1
arg	dictionary ||| key	count=1
module	value to ||| requests packages urllib3 util	count=1
function	to format ||| format	count=1
class	the changes previously made ||| uninstall path	count=1
module	must be ||| packages urllib3 util	count=1
class	previously ||| path	count=1
module	make a character ||| _vendor distlib	count=1
function	should we redirect and ||| redirect location	count=1
module_class	a [class_2] ||| [module_1] _backport [class_2]	count=7
module	create a zip ||| _vendor distlib _backport	count=1
function	file // ||| is dir url	count=1
arg	requires ||| requires	count=1
class	a string ||| base	count=1
function	tuple auth for ||| auth	count=1
class	dictionary ||| dict	count=2
arg	url from ||| url	count=1
class	be ||| uninstall path set	count=1
function	download ||| to download info	count=1
arg	currently satisfying ||| auto_confirm	count=1
class	the stream up ||| htmlunicode input stream	count=1
arg	interpret a [arg] and return ||| [arg]	count=1
class	request ||| request	count=3
function	by the files ||| files	count=1
module	ip address ||| _vendor	count=1
module	current linux ||| _vendor	count=1
function	a requirement ||| populate requirement	count=1
module	look for ||| _vendor	count=1
module	and [module_2] ||| [module_1] [module_2]	count=2
arg	dist if we ||| dist	count=1
arg	given url ||| url raise_errors	count=1
class	the ||| stream	count=1
class	or if ||| link	count=1
module	started ||| _vendor requests packages	count=1
function	[function_1] set ||| [function_1] [function_2]	count=6
module	[module] is ||| [module]	count=1
module	an item ||| _vendor requests packages urllib3 packages	count=1
module	return fields as a ||| _vendor distlib	count=1
arg	parameters c{pattern} ||| pattern	count=1
module	generate a list ||| _vendor distlib	count=2
function	mapping of file ||| map	count=1
module	round up a ||| distlib	count=1
module	object no operation should ||| _vendor	count=1
module	url on the server ||| packages urllib3	count=1
function	url ||| url	count=7
module	a string like abc ||| packaging	count=1
function	the distribution ||| distribution	count=6
module	be ||| _vendor distlib	count=1
function	to the c{re compile()} ||| init	count=1
module	no operation should ||| distlib _backport	count=1
class	the _stream ||| stream	count=1
module	method and ||| _vendor requests	count=1
module	display under the ||| core	count=1
function	tree with ||| tree	count=1
class	working set ||| working set	count=3
function	a suitable download for ||| process download	count=1
function	write the given ||| write	count=1
module	perform ||| requests packages urllib3	count=1
class	rollback ||| uninstall path set	count=1
arg	for an explanation of ||| pattern	count=1
module	if a ||| _vendor	count=1
class	start of the stream ||| input stream	count=1
module	an ||| requests packages urllib3 packages	count=1
function	[function_1] digest ||| [function_1] [function_2]	count=1
class	formatter ||| indenting formatter	count=1
arg	for project_name this checks ||| project_name	count=1
module	if given ||| _vendor requests packages urllib3 util	count=1
class	find ||| tar file	count=1
arg	connection adapter ||| adapter	count=1
class	distribution is ||| distribution	count=1
module	if a ||| distlib	count=1
class	provider ||| egg	count=1
arg	fields based on ||| fields	count=1
arg	the python c{re} module ||| pattern	count=1
function	shortened ||| explode shorthand ip string	count=1
function	[function_1] a file ||| [function_2] [function_1]	count=1
arg	called targetpath ||| tarinfo targetpath	count=2
module	present or none ||| pkg_resources	count=1
class	must be a ||| set	count=1
class	be ||| set	count=3
function	unsets a cookie ||| remove cookie	count=1
arg	path will be made ||| path	count=1
module	normally one ||| distlib	count=1
module	the archive as ||| _backport	count=3
class	formatter but will indent ||| formatter	count=1
module	decorator that ||| requests packages urllib3	count=1
class	be a ||| set	count=1
arg	[arg_1] [arg_2] ||| install [arg_1] [arg_2]	count=2
module	operation should be ||| _vendor	count=1
class	parsed [class_2] ||| [class_2] [class_1]	count=1
arg	if size ||| size	count=2
module	for each ||| _vendor distlib	count=1
module	[module_1] started so ||| [module_1] [module_2]	count=4
module	string ||| _vendor	count=2
class	stream if ||| input stream	count=1
function	header block if it ||| header	count=1
arg	loader_type loader_type is ||| loader_type	count=1
function	string containing ||| resource string	count=1
module	of a ||| _vendor distlib	count=3
module	an ||| webencodings	count=1
function	is ||| is	count=31
function	return a name value ||| get	count=1
function	passed ||| init	count=1
arg	fields based [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	a hook dictionary ||| dispatch hook key	count=1
function_arg	[function_1] [arg_2] ||| [function_1] lines [arg_2]	count=1
arg	given rev_options ||| rev_options	count=1
function	computing the current backoff ||| backoff	count=1
function	distro release ||| distro release	count=2
function	release [function_2] ||| [function_2] [function_1]	count=1
function	from netrc ||| netrc	count=1
module	the changes previously ||| req	count=1
module_class	[module_1] [class_2] ||| [module_1] working [class_2]	count=4
function	is not ||| is	count=1
function	a path ||| path	count=2
arg	[arg_1] last ||| [arg_2] [arg_1]	count=3
class	the list of parsed ||| parse results	count=1
module	an item to ||| packages	count=1
function_arg	registers [arg_2] ||| [arg_2] [function_1]	count=3
function	return [function_2] ||| distribution path [function_1] [function_2]	count=3
module	no operation should be ||| _vendor distlib _backport	count=1
class	or ||| link	count=1
function	is current for ||| is current	count=1
class	of a ||| parse	count=1
class	changes ||| path set	count=1
arg	the paths iterable ||| paths	count=1
class	summary ||| hash	count=1
arg	an address ||| address	count=2
module	been started so we ||| _vendor requests packages urllib3 util	count=1
function	about the current linux ||| linux	count=1
function	headers from [function_2] ||| [function_1] [function_2]	count=1
arg	location i ||| location	count=1
function	[function_1] [function_2] ||| _vendor [function_1] [function_2]	count=2
arg	path or return ||| path	count=1
class	made by ||| path set	count=1
arg	function ||| pattern	count=1
module	the changes previously made ||| req	count=1
arg	is either 'r' to ||| format	count=1
class	object ||| parse results	count=1
class	summary of me ||| hash	count=1
module	return a ||| core	count=1
module	for a file ||| distlib	count=1
class	this locator ||| scraping locator	count=1
function_arg	length from [arg_2] ||| [function_1] prefix string [arg_2]	count=1
function	compatible with the running ||| compatible	count=1
class	perform an ||| httpconnection	count=1
class	of the ||| regex	count=1
class	address as a ||| ipaddress base	count=1
function_arg	a child [arg_2] ||| [function_1] [arg_2]	count=1
function	a requirement ||| requirement	count=1
function	get [function_2] ||| [function_2] [function_1]	count=4
function	all [function_2] ||| [function_1] [function_2]	count=3
function	sys [function_2] ||| [function_2] [function_1]	count=1
class	exception with ||| base exception	count=1
arg	a connection adapter ||| adapter	count=1
module	tar archive ||| _vendor distlib _backport	count=1
arg	this zip_path ||| zip_path	count=1
function_arg	[function_1] filename to ||| [arg_2] [function_1]	count=5
function	returns ||| get	count=2
class	distribution ||| distribution	count=10
arg	directory containing 'setup ||| comes_from isolated	count=1
function	[function] distutils ||| [function] pypirc	count=1
module	the ||| _backport	count=1
function	a file ||| file	count=1
arg	it ||| token	count=1
function	[function_1] stdout ||| [function_1] [function_2]	count=4
module	for the release ||| _vendor	count=1
function	backend ||| backend	count=1
arg	old retries format ||| cls retries redirect default	count=1
arg	each version ||| noarch platform impl	count=1
function	network [function] ||| summarize address [function]	count=2
function	socket makefile ||| makefile	count=1
function	stop after ||| stop after	count=2
module	as a ||| distlib _backport	count=1
function	length from ||| from ip int	count=1
class	for display ||| hash	count=1
function	located under the ||| get distinfo file	count=1
function	object ||| create connection	count=1
function	[function_1] names ||| [function_1] [function_2]	count=4
class	[class_1] request ||| [class_2] [class_1]	count=1
class	get the resource ||| resource	count=1
module	c{re} module for ||| _vendor	count=1
function	extract the tarinfo ||| extract	count=1
function_arg	prepare a [arg_2] ||| [function_1] file [arg_2]	count=1
module	passed ||| _vendor	count=1
module	use ||| requests	count=1
function	[function_1] netmask ||| _vendor [function_1] [function_2]	count=2
class	expression on a series ||| parser element	count=1
module	value ||| _vendor requests packages urllib3 util	count=3
function	prepare [function_2] ||| [function_2] [function_1]	count=1
function	in zip files ||| in zip	count=2
arg	called with [arg] incompatible ||| [arg]	count=1
module	a tar archive ||| distlib _backport	count=1
function_arg	from [arg_2] ||| [function_1] [arg_2]	count=5
function	the name ||| name	count=3
function	filename ||| split filename	count=1
function	distributions ||| find distributions	count=1
module_class	[module_1] [class_2] tarfile is opened for ||| [module_1] [class_2] next	count=3
function	[function] class for ||| get tree [function]	count=1
function	current position ||| position	count=1
class	when making the ||| httpadapter	count=1
arg	name for ||| name mode	count=1
function	the user ||| user	count=1
class	python c{re} module for ||| regex	count=1
function	the terminal window ||| get terminal size	count=1
function	of zero ||| righthand zero	count=1
function_arg	supported [arg_2] ||| [function_1] versions [arg_2]	count=2
class	_stream object no ||| stream	count=1
module	convert an ||| distlib	count=1
module	[module_1] given http ||| [module_1] [module_2]	count=4
function	distribution names known to ||| distribution names	count=6
function	under the heading ||| body	count=1
class	record entries and returns ||| installed distribution	count=1
function	update an already-existing ||| update	count=1
module	or zipfile ||| _vendor pkg_resources	count=1
function_arg	[function_1] link points ||| [function_1] [arg_2]	count=4
function	installed version of ||| installed version	count=2
function_arg	[function_1] function ||| [arg_2] [function_1]	count=1
class	the c{re ||| regex	count=1
arg	of events to monitor ||| events data	count=1
class	[class_1] distribution ||| [class_2] [class_1]	count=8
function	our cached value ||| cached	count=1
class	this api ||| distribution	count=1
class	a ||| hash	count=1
function	[function] in ||| deduce [function]	count=1
class	previously made by remove() ||| set	count=1
class	the ipv4 ||| v4	count=1
function	tree fragment container - ||| fragment	count=1
module	an html ||| _vendor distlib	count=1
class	file ||| tar file	count=3
function	reverse [function_2] ||| [function_2] [function_1]	count=2
function	by ||| header	count=1
function	:class packer for options ||| packb	count=1
function	exported entries ||| exported entries	count=2
class	group, ||| distribution	count=1
module	get the value to ||| packages urllib3	count=1
module_class	to use [class_2] ||| [module_1] [class_2]	count=6
function	print ||| print	count=1
function	parsed datetime string to ||| to	count=1
module	returns a list of ||| distlib _backport	count=2
class	address ||| base network	count=4
function	return the name ||| name	count=2
function	state dir ||| state dir	count=2
function	select a ||| select	count=1
class	[class_1] sequences ||| [class_2] [class_1]	count=2
class	constraints ||| matcher	count=1
arg	number ||| number	count=1
class	suitable ||| simple scraping locator	count=1
module	normally one for ||| _vendor distlib	count=1
function	counted ||| counted	count=1
class	linux [class_2] ||| _vendor [class_1] [class_2]	count=17
function	location of ||| dist location	count=1
module	the _stream ||| distlib	count=1
function	return a mapping of ||| get map	count=1
function_arg	write the [arg_2] ||| [function_1] file [arg_2]	count=2
class	[class_1] request with ||| [class_1] [class_2]	count=1
class	scraping ||| scraping	count=1
class	function ||| regex	count=1
module	file [module] tarinfo object ||| [module]	count=1
function_arg	[function_1] this application ||| [arg_2] [function_1]	count=14
arg	for requires ||| requires	count=1
arg	paths if kwarg warner ||| paths maker	count=1
function	[function_1] the cache ||| [function_1] [function_2]	count=1
module	and ||| requests packages	count=2
module	ssl certificate [module] should ||| [module]	count=1
module	info ||| _vendor	count=1
arg	optional domain and ||| name default domain	count=1
function	slices ||| iter slices	count=1
arg	c{re} module ||| pattern	count=1
function	method to list all ||| list	count=2
module	for the ||| _vendor	count=1
arg	calls the find ||| installer	count=1
arg	size bytes ||| size	count=1
arg	the modifier ||| modifier	count=1
function	write [function_2] ||| [function_1] [function_2]	count=3
arg	importer_type is the ||| importer_type	count=1
function	insert an element from ||| insert from table	count=1
class	standard formatter but ||| indenting formatter	count=1
class	string ||| ipaddress	count=1
module	if the lock ||| lockfile	count=1
module	a zip file from ||| _vendor distlib _backport	count=1
class	return ||| encoding parser	count=1
class	a metadata [class_2] ||| [class_2] [class_1]	count=4
arg	from a path ||| path	count=1
module	a given http ||| _vendor requests	count=2
function	a header ||| unquote header	count=1
module	ssl ||| urllib3 util	count=1
function	the user agent ||| user agent	count=2
arg	and path args in ||| path	count=1
function_arg	filename [arg_2] ||| [function_1] filename [arg_2]	count=1
arg	add the tarinfo object ||| tarinfo fileobj	count=1
function_arg	file // [arg_2] ||| [arg_2] [function_1]	count=3
function	for a download url ||| to download info	count=1
arg	name for reading ||| name	count=3
function	point ||| point	count=1
function	[function_1] dir for ||| [function_2] [function_1]	count=6
arg	for an ||| pattern	count=1
function	a suitable download ||| process download	count=2
function	find distribution best ||| best	count=1
class	standard formatter ||| formatter	count=1
arg	:class ||| req	count=1
function	and [function] system site ||| virtualenv [function]	count=1
class	of the exception ||| parse base exception	count=1
function_arg	return absolute location [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
module	to use ||| requests	count=1
class	new ordered dictionary with ||| ordered dict	count=1
function	the current backoff ||| get backoff	count=1
arg	files in specified paths ||| paths	count=1
module	:meth urllib3 ||| packages urllib3	count=1
class	for parsed [class_2] ||| [class_2] [class_1]	count=1
arg	events to monitor ||| events	count=1
module	for context-management ||| requests	count=1
function	that are dependent on ||| dependent	count=1
module	directory returns a ||| distlib	count=1
module	is the same ||| requests packages urllib3 packages	count=1
class	this distribution is ||| distribution	count=1
function	the default ||| set default	count=1
function_arg	current [arg_2] ||| [arg_2] [function_1]	count=1
function	proxymanager ||| proxy manager	count=1
arg	targetpath if it ||| targetpath	count=1
module	given python version ||| requests	count=1
arg	[arg_1] files ||| [arg_1] [arg_2]	count=1
function_arg	directory of [arg_2] ||| [arg_2] [function_1]	count=2
module	a tuple path ||| distlib	count=1
class	distribution ||| locator	count=1
module	for the release of ||| _vendor	count=1
module	the _stream object ||| distlib _backport	count=1
arg	entry is unspecified it ||| entry	count=1
class	expression on a ||| parser element	count=1
function	explanation of the ||| init	count=1
module	the value of ||| packages urllib3 util	count=1
module	is ||| packages urllib3 util	count=1
module	on the server ||| requests packages urllib3	count=1
arg	name which might be ||| name	count=1
arg	fields [arg_2] ||| [arg_2] [arg_1]	count=6
module	be called ||| _vendor requests packages urllib3 util	count=1
function	return a dict ||| get	count=1
class	pypi ||| package index	count=2
function	[function_1] exported ||| distribution path [function_1] [function_2]	count=1
arg	sequence of bytes ||| bytes	count=1
function	current backoff ||| get backoff time	count=1
module	to ||| _vendor	count=1
module	files and the environ ||| core	count=1
function	[function_1] element from ||| [function_1] [function_2]	count=3
class	the option [class_2] ||| [class_2] [class_1]	count=4
function_arg	[function_1] and names ||| [arg_2] [function_1]	count=2
module	checks if [module_2] ||| [module_2] [module_1]	count=4
module	:class packer for options ||| _vendor msgpack	count=1
arg	object fdst ||| fdst length	count=1
module	if ||| _vendor	count=2
function	check ||| check download dir	count=2
function	[function_1] point ||| [function_2] [function_1]	count=1
class	might be a requirement ||| install requirement	count=1
module	value of ||| requests packages urllib3	count=1
module	the release of the ||| _vendor	count=1
arg	passed to the ||| pattern	count=1
function	[function_1] download for ||| [function_1] [function_2]	count=2
arg	[arg_1] extract_dir ||| [arg_2] [arg_1]	count=2
module	[module_1] host ||| [module_1] [module_2]	count=6
function_arg	[function_1] this application ||| [function_1] [arg_2]	count=14
function	a digest ||| digest	count=1
module	the lock ||| _vendor lockfile	count=1
module	on the ||| _vendor requests packages	count=2
function	the name of ||| name	count=2
module	information from a ||| distlib	count=1
module	string like ||| _vendor packaging	count=1
function	return a path ||| get path	count=2
function	returns ||| get info	count=2
function	that are unreserved characters ||| unreserved	count=1
class	the record ||| installed	count=1
module	no operation should be ||| distlib _backport	count=1
class	rollback ||| path set	count=1
arg	passed ||| pattern	count=1
function	current backoff ||| get backoff	count=1
module	returns true if the ||| _vendor requests	count=1
module	field returns an ||| requests	count=1
function	for a download url ||| download info	count=1
function	in 'characters' or eof ||| chars until	count=1
function	[function_1] host as ||| [function_2] [function_1]	count=5
module	this must be ||| requests packages urllib3 util	count=1
arg	tarinfo [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	control [arg_2] ||| [arg_2] [function_1]	count=4
arg	[arg_1] algo ||| [arg_2] [arg_1]	count=2
function	select a [function_2] ||| [function_1] [function_2]	count=3
function	entry [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] first ||| [function_1] [arg_2]	count=2
module	request ||| _vendor requests packages urllib3	count=1
module	write ||| _vendor lockfile	count=1
arg	req [arg] ||| req [arg]	count=1
module	get the value ||| packages urllib3 util	count=1
class	- [class_2] ||| [class_1] [class_2]	count=1
class	to working set ||| working set	count=2
arg	name for [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] installed ||| [function_1] [function_2]	count=1
module	return packed bytes see ||| msgpack	count=1
class	entry point from its ||| entry point	count=1
arg	distribution currently satisfying ||| auto_confirm	count=1
function	represent a list of ||| list	count=1
class	me ||| hash error	count=1
function	[function_1] link_path ||| [function_1] [function_2]	count=2
class	this list ||| list	count=1
module	using [module] particular ||| [module]	count=1
arg	[arg_1] [arg_2] ||| [arg_1] algo [arg_2]	count=4
module	a dictionary ||| distlib	count=3
module	same ||| packages urllib3 packages	count=1
function	[function_1] the exported ||| [function_2] [function_1]	count=1
function	return urllib3 proxymanager ||| proxy manager	count=1
function_arg	child of [arg_2] ||| [function_1] [arg_2]	count=1
arg	domain [arg] ||| domain [arg]	count=1
class	c{re compile()} function as-is ||| regex	count=1
function	as-is see the ||| init	count=1
class	to working [class_2] ||| [class_2] [class_1]	count=1
class	parse expression on ||| parser element	count=1
class	the file if ||| file	count=2
function	default keyword ||| set default keyword	count=2
arg	a response ||| response	count=1
arg	download_dir for ||| link download_dir hashes	count=1
class	registered ||| base selector	count=1
function	python version in ||| python	count=1
function	[function_1] dictionary ||| [function_1] [function_2]	count=1
function	a fixed ||| fixed	count=1
function	for [function_2] ||| [function_2] [function_1]	count=1
function	prefix length [function_2] ||| [function_1] [function_2]	count=1
module	a decorator that ||| requests packages	count=1
module	[module] that we ||| [module]	count=3
arg	download_dir for previously downloaded ||| download_dir hashes	count=1
class	display under the ||| hash	count=1
function	to the ||| init	count=1
module	value of a ||| _vendor distlib	count=1
function	[function_1] release file ||| [function_2] [function_1]	count=3
module	_stream object ||| distlib _backport	count=1
function	return a pkg_resources distribution ||| get	count=1
class	address ||| ipv6address	count=5
arg	the text and ||| text	count=1
function	treewalker ||| walker	count=1
arg	name ||| name	count=13
function	[function_1] [function_2] req ||| [function_1] [function_2] req	count=2
module	the object ||| _backport	count=1
class	ipv6 ||| base v6	count=1
class	information ||| linux distribution	count=4
arg	given *label* ||| x y label	count=1
module	lock ||| lockfile	count=3
module	if this points to ||| core	count=1
function	suitable command ||| command	count=1
function	remove paths in self ||| remove	count=1
class	a version ||| version	count=1
arg	port [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	[module_1] [class_2] ||| [module_1] _backport [class_2] info	count=1
module	a directory ||| _vendor distlib	count=2
function	prefix length into ||| prefix	count=1
function	a prefix ||| prefix	count=1
function	[function_1] closed ||| [function_1] fp [function_2]	count=2
module	based on ||| _vendor requests packages	count=2
arg	message object ||| cls message	count=1
function	for html given ||| make htmltags	count=2
arg	of characters from ||| characters	count=1
function	wheel ||| wheel files	count=2
function	located ||| distinfo	count=1
function	with authentication [function_2] ||| [function_1] [function_2]	count=1
function	function as-is ||| init	count=1
function	the installed version of ||| installed version	count=1
function	same [function_2] ||| [function_2] [function_1]	count=3
module	value ||| _vendor requests packages urllib3	count=3
class	textual ||| distribution	count=1
arg	string src ||| cls src dist	count=1
function	parser ||| parser	count=1
class	info ||| distribution	count=1
class	in ||| cookie	count=1
module	a zip file ||| _vendor distlib	count=1
module	this must be called ||| packages urllib3 util	count=1
arg	the socket object ||| address timeout	count=1
function	path to ||| path to	count=1
function	waits for io ||| for io	count=1
function	open uncompressed ||| taropen	count=1
function	[function_1] all distribution ||| [function_1] [function_2]	count=1
function	children of ||| child	count=1
module	and raise an exception ||| distlib	count=1
class	the parameters c{pattern} and ||| regex	count=1
class	request field ||| request field	count=1
arg	a distribution ||| dist	count=1
function	python c{re} module for ||| init	count=1
function_arg	cache [arg_2] ||| [arg_2] [function_1]	count=3
module	started so ||| _vendor requests packages	count=1
function	[function_1] matching ||| [function_2] [function_1]	count=2
function	an element ||| table	count=1
class	previously made ||| uninstall	count=1
arg	current subnet ||| prefixlen_diff new_prefix	count=1
class	[class_1] fields ||| [class_2] [class_1]	count=4
function	register ||| register hook	count=2
function	release file ||| release file	count=2
module	[module_1] as a ||| [module_2] [module_1]	count=3
function	package [function_2] ||| [function_1] [function_2]	count=1
class	is ||| version control	count=1
function_arg	cache [arg_2] ||| pkg_resources resource manager get [function_1] path [arg_2]	count=3
function	wheel ||| move wheel files	count=2
module	_stream object no operation ||| distlib	count=1
function	map ||| map	count=1
function	change a registered ||| modify	count=1
module	a child process ||| _vendor distlib	count=1
module	returns an ||| requests packages urllib3	count=1
function	longhand version of ||| exploded	count=1
function	minor version ||| minor version	count=2
function	schemes [function_2] ||| [function_2] [function_1]	count=1
class	changes previously ||| path set	count=1
function_arg	[function_1] number ||| [function_1] zero bits [arg_2]	count=1
arg	[arg_1] and files ||| [arg_1] [arg_2]	count=1
function	writing with gzip compression ||| init write gz	count=1
module	that ||| requests packages urllib3 packages	count=1
module	packed ||| _vendor msgpack	count=2
arg	must ||| redirect	count=1
class	the standard formatter but ||| indenting formatter	count=1
arg	events to ||| events data	count=1
class	named parse [class_2] ||| [class_2] [class_1]	count=1
module	see the python c{re} ||| _vendor	count=1
function	the ip string is ||| is	count=1
class	changes ||| path	count=1
module	standard library on ||| packages	count=1
function	topological [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] cache ||| [function_2] [function_1]	count=1
function	value of the version ||| version	count=1
arg	o and return packed ||| o	count=1
function	the schemes [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] file to ||| [function_2] [function_1]	count=1
module	for each distributionpath ||| _vendor distlib	count=1
function_arg	[function_1] based on ||| [function_1] url [arg_2]	count=5
arg	fields ||| fields headers	count=1
function	zip files ||| zip	count=1
arg	[arg_1] dst ||| [arg_2] [arg_1]	count=3
function	supported formats for ||| formats	count=2
class	sign ||| package index	count=1
function	[function_1] stdout ||| [function_2] [function_1]	count=4
class	the graph ||| graph	count=1
function	update our cached value ||| update cached	count=1
module	that defines __unicode__ ||| _vendor requests packages urllib3 packages	count=1
module	and ||| _vendor requests packages	count=2
module	a single ||| _vendor distlib _backport	count=1
class	display under the ||| hash error	count=1
module	return [module] ||| [module]	count=2
class	the option parser ||| option parser	count=1
class	under the ||| error	count=1
function	the cache [function_2] ||| [function_1] [function_2]	count=1
module	get ||| html5lib treebuilders	count=1
function	[function_1] the subscribers ||| [function_2] [function_1]	count=1
function	is the type or ||| type	count=1
module	the _stream object ||| _vendor distlib _backport	count=1
arg	is not a ||| other	count=3
function	valid 1xx [function] header ||| [function]	count=1
function	returns url ||| get info	count=1
function	column within ||| col	count=1
arg	accessible via ||| only	count=1
function	return ||| get resource	count=2
function	c{re} module for an ||| init	count=1
function	tarball or if ||| is	count=1
module	to an http ||| _vendor distlib	count=1
class	under the ||| hash	count=1
function_arg	record file [arg_2] ||| [arg_2] [function_1]	count=2
arg	as a human-readable string ||| pretty	count=1
function_arg	[function_1] each ||| [arg_2] [function_1]	count=2
module	select ||| _vendor requests	count=1
module	method and ||| requests	count=1
function	deregister a ||| deregister hook	count=1
module	for ||| _vendor requests	count=1
class	the file ||| ex file	count=3
function	names known ||| names	count=7
arg	rev_options ||| dest rev_options	count=1
function	get ||| get conn	count=2
module	or sequence ||| _vendor pkg_resources	count=1
arg	events ||| events data	count=1
function	in [function_2] ||| [function_1] [function_2]	count=1
function_arg	string [arg_2] ||| [arg_2] [function_1]	count=3
arg	install ||| wheeldir user	count=1
function	return a ||| get	count=8
function	[function_1] installed version ||| [function_1] [function_2]	count=1
function	the schemes ||| scheme	count=1
module	_stream object no ||| _vendor distlib _backport	count=1
module	[module] all configuration ||| [module]	count=1
arg	download_dir for ||| download_dir hashes	count=1
module	an exception if ||| distlib	count=1
function	[function_1] io ||| [function_2] [function_1]	count=2
function	the method ||| rebuild method	count=1
function_arg	[function_1] from src ||| [function_1] [arg_2]	count=4
function	for the next attribute ||| attribute	count=1
arg	filename to [arg_2] ||| [arg_1] [arg_2]	count=2
function	return all the ||| get	count=6
class	made ||| uninstall	count=1
arg	case a-z [arg] mapped ||| [arg]	count=1
module	a tuple containing the ||| _vendor distlib	count=2
class	add ||| mock request	count=1
function	resource a ||| resource	count=1
arg	sends ||| url	count=1
function_arg	a child [arg_2] ||| [arg_2] [function_1]	count=1
class	hash of ||| hash	count=1
function	explanation of ||| init	count=1
module	insert before ||| _vendor html5lib treebuilders	count=1
class	no operation should be ||| stream	count=1
arg	it [arg] see ||| o [arg]	count=1
module	is normally one ||| _vendor	count=1
arg	temp_dir ||| temp_dir	count=1
class	[class_1] point ||| [class_2] [class_1]	count=1
class	the option parser ||| config option parser	count=2
function	length from a ||| from	count=1
arg	into [arg_2] ||| [arg_2] [arg_1]	count=2
module	[module_1] a ||| [module_2] [module_1]	count=28
function	return a pkg_resources ||| get	count=1
arg	importer_type is ||| importer_type	count=1
function	working set and ||| working set	count=2
function_arg	string to [arg_2] ||| [function_1] datetime [arg_2]	count=1
class	made ||| path	count=1
function_arg	installed version [arg_2] ||| [function_1] [arg_2]	count=2
function	master working [function_2] ||| [function_1] [function_2]	count=3
class	passed to the ||| regex	count=1
arg	using hashlib new algo ||| algo blocksize	count=1
arg	characters from the ||| characters opposite	count=1
class	the changes previously made ||| path set	count=1
module	[module_1] a ||| [module_2] requests [module_1]	count=1
function_arg	tuple auth [arg_2] ||| [function_1] [arg_2]	count=1
class	the stream up ||| stream	count=1
function	length ||| length	count=1
class	the option [class_2] ||| [class_1] [class_2]	count=4
function	yield distributions ||| distributions	count=1
module	round up a ||| distlib _backport	count=1
arg	function as-is ||| pattern	count=1
class	a requirement ||| install requirement	count=1
arg	working_set to see if ||| working_set	count=1
module	normally one for each ||| _vendor	count=1
arg	in wheeldir ||| wheeldir	count=1
function_arg	count the [arg_2] ||| [function_1] zero bits [arg_2]	count=2
function	stop after [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] loader_type loader_type ||| [arg_2] [function_1]	count=2
module	return [module_2] ||| [module_1] [module_2]	count=2
function	[function_1] bz2 ||| [function_1] [function_2]	count=1
function	response ||| response	count=1
arg	for the given major ||| major	count=1
function	add an edge from ||| add edge	count=1
function	is the type ||| type	count=1
module	packed ||| _vendor	count=1
class	summary of me for ||| hash	count=1
arg	namespace_handler ||| namespace_handler	count=1
function	tar/tar gz/tar bz2 ||| tarfile	count=1
function	a ||| is	count=1
arg	appropriate to this ||| options index_urls session	count=1
module	of a c{parseresults} object ||| _vendor	count=1
function	to a [function_2] ||| [function_2] [function_1]	count=3
function	helper to split ||| split	count=1
class	is ||| base network	count=1
function	spaces before parsing the ||| parse with tabs	count=1
arg	install a ||| wheeldir user	count=1
function_arg	[function_1] request ||| [arg_2] [function_1]	count=2
module	take an object and ||| _vendor requests	count=1
class	dist-info directory returns ||| installed distribution	count=1
function	reverse [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] connection adapter ||| [arg_2] [function_1]	count=1
module	an index ||| _vendor distlib	count=1
function	allocated for private networks ||| private	count=1
module	marker ||| _vendor packaging	count=1
class	cookie ||| requests cookie	count=1
class	option parser possible _update_defaults() ||| option parser	count=1
function	write the pid in ||| write	count=1
module	passed in [module_2] ||| [module_1] [module_2]	count=1
arg	c{pattern} and c{flags} are ||| pattern	count=1
function_arg	cookiejar [arg_2] ||| [arg_2] [function_1]	count=2
module	that defines ||| _vendor requests packages	count=1
arg	callback for all distributions ||| callback	count=1
class	at most ||| ex	count=1
function	[function_1] edge from ||| [function_2] [function_1]	count=1
module	previously made ||| req	count=1
module	a list of tarinfo ||| distlib	count=1
arg	as-is ||| pattern	count=1
function	passed to the ||| init	count=1
module	returns an ||| requests	count=1
arg	extract_dir ||| extract_dir	count=2
module	no operation should be ||| _vendor	count=1
function	yield distributions ||| find distributions	count=1
class	normalize ||| version control	count=1
class	parsed tokens ||| parse results	count=1
module	returns ||| _vendor requests	count=10
function	return prefix length from ||| prefix from ip	count=1
function	evaluate ||| evaluate	count=1
function	the default keyword ||| set default keyword	count=2
function	attempt >= ||| attempt	count=1
arg	fields and files ||| fields files	count=3
module	value of a ||| distlib	count=1
module	only a ||| distlib	count=1
class	of the ip ||| ipaddress base	count=1
module	create a base class ||| _vendor packaging	count=1
arg	location and download the ||| location	count=1
arg	c{flags} ||| pattern	count=1
function	unpack tar/tar ||| unpack	count=1
function	an error ||| error	count=1
function	namespace packages ||| namespace packages	count=1
function_arg	[function_1] pattern ||| [arg_2] [function_1]	count=1
arg	be updated ||| dest rev_options	count=1
module	field returns an ||| requests packages urllib3	count=1
class	previously made by remove() ||| path	count=1
function	reverse ||| reverse	count=1
function	path url ||| path url	count=1
function	register a ||| register	count=2
arg	turn the given ||| ip_str	count=1
function	the connection is dropped ||| is connection dropped	count=1
function_arg	[function_1] a resource ||| [function_1] [arg_2]	count=3
arg	default grouping [arg] even ||| [arg]	count=1
function	the build number ||| build number	count=3
function	dir ||| site config dir	count=1
function	defining [function] ||| match [function] at	count=1
function_arg	[function_1] the first ||| [function_1] [arg_2]	count=2
class	if this address ||| ipv6address	count=1
module_class	[module_1] dictionary ||| [module_1] [class_2]	count=1
function	has been a head-request ||| response to head	count=1
module	has been started ||| requests packages urllib3 util	count=1
module	for group, or ||| pkg_resources	count=1
function	c{re} module for ||| init	count=1
arg	same meaning as ||| cert_reqs	count=1
function_arg	return absolute [function_1] [arg_2] ||| _vendor pkg_resources resource manager [function_1] path archive_name [arg_2]	count=3
module	[module] that ||| [module]	count=3
class	ip address ||| ipaddress base	count=1
function	whether a file // ||| is dir url	count=1
arg	the destination location ||| filename location	count=1
module_class	if a [class_2] ||| [module_1] [class_2]	count=2
arg	and ||| address	count=1
function	file located in ||| distinfo files	count=1
function	should a filename be ||| should	count=1
function	version field ||| version	count=1
class	[class_1] results ||| [class_1] [class_2]	count=7
module	me for ||| core	count=1
function	[function_1] [function_2] ||| [function_2] from [function_1]	count=3
function	helpful ||| helpful	count=1
function_arg	[function_1] to a ||| [arg_2] [function_1]	count=3
module	a list ||| distlib	count=7
function	the pip delete marker ||| delete marker	count=1
function	parse a [function_2] ||| [function_2] [function_1]	count=4
module	blocks that hold a ||| _vendor distlib	count=1
arg	c{flags} are passed ||| pattern	count=1
arg	a url ||| url new_scheme	count=1
module	python c{re} module for ||| _vendor	count=1
function	of supported formats ||| unpack formats	count=1
module	see :class packer for ||| _vendor	count=1
function	the source ||| source	count=1
function	change the method of ||| method	count=1
arg	data to work on ||| data	count=1
class	write ||| installed distribution	count=1
function	of the terminal window ||| get terminal size	count=1
function	from [function_2] ||| [function_2] [function_1]	count=6
arg	a key/value ||| cookie_dict	count=1
class	for this ||| distribution	count=1
class	new ordered [class_2] ||| [class_2] [class_1]	count=4
module	stream ||| _vendor distlib _backport	count=3
module	given an ||| _vendor requests packages urllib3 contrib	count=1
arg	a dict ||| value	count=1
module	[module_1] a list ||| [module_2] [module_1]	count=3
function	has typically been scraped ||| convert	count=1
function	[function_1] key associated ||| [function_1] [function_2]	count=1
function	a parser ||| parser	count=1
function	our cached ||| cached	count=1
module	an pyopenssl ||| packages urllib3 contrib	count=1
class	from the stream ||| stream	count=3
function	the python c{re} ||| init	count=1
class	the file object ||| file object	count=1
module	:class packer ||| _vendor msgpack	count=1
function	a file // ||| dir url	count=1
function_arg	path [arg_2] ||| [function_1] url [arg_2]	count=2
function_arg	samefile on windows/python2 ||| samefile file1 file2	count=1
module	chksum field which ||| distlib	count=1
function	a tarball or if ||| is	count=1
arg	name ||| cls name	count=3
function	file cache [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] a cookiejar ||| [function_1] [function_2]	count=3
module	an http server ||| distlib	count=1
arg	kwarg warner is ||| maker	count=1
function	[function_1] number ||| [function_2] [function_1]	count=6
function	unicode ||| unicode	count=1
function	a delete ||| delete	count=1
class	ip address as ||| base	count=1
module	decorator that defines __unicode__ ||| _vendor requests packages urllib3 packages	count=1
class	from ||| httpheader dict	count=1
arg	avoiding pkg_resources cache ||| lookup_dirs	count=1
function	reserved for site-local ||| site local	count=2
arg	name ||| name mode fileobj	count=1
function	the path ||| path	count=3
module	string or ||| pkg_resources	count=2
function	a package finder ||| build package finder	count=2
arg	the url if ||| url proxies	count=1
function	tree ||| tree	count=2
function	the default user ||| default user	count=2
arg	from a dictionary by ||| info	count=1
function	have the same leading ||| leading	count=1
function	connection ||| connection	count=1
class	this class gathers information ||| linux distribution	count=1
function_arg	path [arg_2] ||| [arg_2] [function_1]	count=6
arg	each version [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	file [arg_2] ||| [function_1] [arg_2]	count=1
arg	ns-package subpath for a ||| path_item packagename module	count=1
class	stream or queue if ||| input stream	count=1
function	[function_1] a mapping ||| [function_2] [function_1]	count=1
class	summary ||| error	count=1
function	prefix length args ||| prefix from	count=1
arg	from string src ||| cls src	count=1
class	parser against a test ||| parser	count=1
module	decorator that defines ||| _vendor requests packages urllib3 packages	count=1
function	the current position ||| position	count=1
function_arg	url [arg_2] ||| [function_1] [arg_2]	count=3
function	a prefix length ||| prefix	count=1
module	a single variable ||| distlib	count=1
class	prepare ||| requirement set	count=1
arg	the given url ||| url	count=1
function_arg	current for [arg_2] ||| [arg_2] [function_1]	count=1
arg	wheel in wheeldir ||| wheeldir	count=1
module	an html page ||| distlib	count=1
module	encoding ||| webencodings	count=1
module	[module_1] by ||| [module_1] [module_2]	count=2
function	[function_1] [function_2] ||| [function_1] from [function_2]	count=7
function	copy distribution files in ||| copy dist	count=1
function	authentication from the ||| rebuild auth	count=1
function	previous attempt >= ||| attempt	count=1
arg	url if ||| url	count=1
function	return ||| get path	count=1
function	get the installed ||| get installed	count=3
function	[function_1] after ||| [function_1] [function_2]	count=1
arg	subscriber for an event ||| event subscriber	count=1
function	linux distribution ||| linux distribution	count=1
class	the record entries ||| installed distribution	count=1
function	to see ||| to	count=1
module	the c{re ||| _vendor	count=1
arg	the number of ||| number	count=1
function	backport of [function_2] ||| [function_1] [function_2]	count=2
module	as a name ||| distlib	count=1
arg	[arg_1] object ||| [arg_1] [arg_2]	count=3
module	get the value to ||| _vendor requests packages urllib3 util	count=1
class	a response as ||| response	count=1
module	me for display under ||| core	count=1
function_arg	wrapper function ||| syscall wrapper func	count=1
arg	project_name ||| project_name	count=1
module	is normally one for ||| _vendor	count=1
module	a child ||| _vendor distlib	count=1
arg	fdst ||| fdst length	count=1
arg	destination [arg] ||| [arg]	count=1
arg	of tempname this is ||| tempname	count=1
module	for ||| _vendor msgpack	count=2
module	parse and ||| _vendor pkg_resources	count=1
module	for an encoding ||| _vendor webencodings	count=1
arg	based on the ||| filecache	count=1
class	timeout clock used during ||| timeout	count=1
module	and ||| distlib	count=1
arg	non-empty/non-comment ||| strs	count=1
class	the ipv4 ||| base v4	count=1
function	codename for the release ||| codename	count=1
arg	[arg_1] path ||| [arg_1] [arg_2]	count=2
module	a random url on ||| _vendor requests packages urllib3	count=1
function_arg	[function_1] download_dir ||| [arg_2] [function_1]	count=1
function_arg	[function_1] of expressions ||| [arg_2] [function_1]	count=2
module_class	[module_1] [class_2] when tarfile is opened ||| [module_1] _backport [class_2] next	count=1
function	[function_1] a mapping ||| [function_1] [function_2]	count=1
arg	path_item if needed ||| path_item	count=1
function_arg	[function_1] the first ||| [arg_2] [function_1]	count=2
module	of a single ||| distlib	count=1
arg	targetpath if it cannot ||| targetpath	count=1
function	[function_1] given ||| [function_2] [function_1]	count=4
arg	stream ||| stream	count=2
function_arg	installed version [arg_2] ||| [arg_2] [function_1]	count=2
arg	write it [arg] see ||| o [arg]	count=1
module	of ||| _vendor	count=5
function_arg	marker file [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	send a [arg_2] ||| [arg_2] [function_1]	count=1
arg	c{pattern} and c{flags} ||| pattern	count=1
module	the value of a ||| _vendor distlib	count=1
arg	a bitwise netmask ||| cls prefixlen	count=1
function	the distribution names known ||| distribution names	count=6
module	object no ||| _vendor	count=1
arg	a urllib3 ||| connections	count=1
arg	a set of events ||| fileobj events data	count=1
class	add ||| dependency graph	count=1
arg	characters from ||| characters opposite	count=1
module_class	[module_1] parser against ||| [module_1] [class_2]	count=2
arg	from string src ||| src dist	count=1
arg	to a resource ||| name relative_path	count=2
function	prefix length ||| prefix from	count=1
module	make a character ||| distlib	count=1
module	requirement ||| req	count=1
class	to ||| link	count=1
function	an explanation of ||| init	count=1
class	return a version ||| version conflict	count=1
function	names known to this ||| names	count=6
function_arg	data dir [arg_2] ||| [arg_2] [function_1]	count=3
arg	length ||| length	count=1
class	if [class] is ||| [class]	count=1
module	a decorator that defines ||| requests	count=1
class	changes previously made ||| set	count=1
function	helper method for defining [function_1] [function_2] at a specific ||| [function_2] [function_1] at	count=1
function_arg	subscribers [arg_2] ||| [arg_2] [function_1]	count=1
module	one for ||| distlib	count=1
class	is normally ||| cache	count=1
module	the object as ||| _backport	count=1
class	such the session ||| session	count=1
class	c{re} ||| regex	count=1
module	the value ||| _vendor requests packages urllib3 util	count=2
arg	called targetpath if it ||| tarinfo targetpath	count=1
class	point ||| point	count=1
module	rebuild ||| _vendor pkg_resources	count=1
function_arg	find all [arg_2] ||| [function_1] candidates [arg_2]	count=3
function	the installed ||| installed	count=1
function	[function_1] a path ||| [function_1] [function_2]	count=1
class	create ||| requirement set	count=1
arg	[arg] of ||| [arg]	count=1
module	a list ||| _vendor	count=2
module	the value of a ||| _vendor distlib _backport	count=1
function	sleep a ||| sleep	count=2
arg	resource_name ||| manager resource_name	count=2
function	the distribution [function_2] ||| [function_2] [function_1]	count=18
function	dictionary [function_2] ||| [function_2] [function_1]	count=3
module	take a list ||| distlib	count=1
function	[function_1] names known ||| [function_2] [function_1]	count=27
function	error ||| error	count=1
class	retrying ||| retrying	count=1
class	[class_1] [class_2] from ||| [class_1] [class_2]	count=2
function	if it is included ||| is	count=1
function_arg	registers a [arg_2] ||| [function_1] [arg_2]	count=1
class	properly ||| request hooks mixin	count=1
class	with pypi ||| package index	count=1
module	linux distribution ||| _vendor	count=1
arg	provider_factory ||| provider_factory	count=1
class	a c{parseresults} ||| results	count=1
function	return all distribution ||| get all distribution	count=3
function	find ||| find	count=5
function	[function_1] url of ||| [function_2] [function_1]	count=1
class	*requirement* for ||| dependency graph	count=1
class	on the path ||| path	count=1
function	lines of a string ||| lines	count=1
class	parameters c{pattern} and ||| regex	count=1
function	number of ||| number	count=1
function	get a [function_2] ||| [function_2] [function_1]	count=3
function	key/value dictionary ||| add dict to	count=1
function_arg	config dir [arg_2] ||| [function_1] [arg_2]	count=2
module	value ||| requests packages urllib3	count=3
function	[function_1] confidence ||| [function_1] [function_2]	count=1
arg	of path_item if ||| path_item	count=1
class	at most size bytes ||| ex	count=1
function_arg	cache control [arg_2] ||| [arg_2] [function_1]	count=4
function	true if the connection ||| connection	count=1
function	codename for ||| codename	count=1
arg	a member ||| member	count=1
function	spaces before parsing ||| with tabs	count=1
arg	args into ||| args options finder	count=1
function_arg	[function_1] string ||| [arg_2] [function_1]	count=1
module_class	[module_1] file ||| [module_1] _backport tar [class_2]	count=2
arg	[arg_1] files for ||| [arg_1] [arg_2]	count=1
function	return all [function_2] ||| [function_2] [function_1]	count=30
arg	contained within this ||| prereleases	count=1
function_arg	supported tags [arg_2] ||| [function_1] versions [arg_2]	count=3
module	if present or ||| pkg_resources	count=1
arg	all headers ||| headers	count=1
class	c{flags} ||| regex	count=1
function	named distribution on ||| get distribution	count=1
module_class	[module_1] set ||| [module_1] [class_2]	count=4
module	[module_1] started ||| [module_1] [module_2]	count=4
class	remove() ||| uninstall	count=1
function	the prefix length ||| ip int from prefix	count=1
function	paths for each line ||| list	count=1
module	e g numpy or ||| _vendor pkg_resources	count=1
module	field returns an ||| _vendor requests packages	count=1
module	request ||| _vendor requests	count=1
arg	if the provided version ||| version	count=1
module	distributionpath ||| _vendor distlib	count=2
function	described ||| proc pax	count=1
class	ip ||| ipaddress	count=1
arg	importer ||| importer	count=1
class	gathers information ||| linux distribution	count=1
function	build ||| build	count=6
function	packed bytes see :class ||| packb	count=1
module	passed to ||| _vendor	count=1
function	iteritems() that returns an ||| iteritems	count=1
function	the version ||| version	count=4
arg	[arg_1] must be ||| [arg_1] [arg_2]	count=1
class	the metadata ||| metadata	count=2
function	name of ||| name	count=2
arg	the data to work ||| data	count=1
module	to a tar archive ||| _vendor distlib _backport	count=1
class	*requirement* for the given ||| dependency graph	count=1
arg	subscriber ||| subscriber append	count=1
function	os path samefile ||| samefile	count=1
module	directory returns a ||| _vendor distlib	count=1
class	operator - ||| parser element	count=4
function	wait for them to ||| wait	count=1
function	containing the schemes ||| scheme	count=1
module	must be called ||| _vendor requests packages urllib3 util	count=1
arg	for project_name ||| project_name	count=1
arg	size is not ||| size	count=1
arg	c{re compile()} function as-is ||| pattern	count=1
function	element from ||| from table	count=2
class	save the [class] access ||| [class]	count=1
arg	names the parent ||| names	count=1
class	the named parse results ||| parse results	count=1
module	:class ||| _vendor msgpack	count=2
arg	headers have been successfully ||| headers	count=1
function	of resource ||| resource	count=1
module	returns a ||| requests	count=1
arg	into ||| cls	count=3
class	a summary ||| hash	count=1
function	path ||| path	count=7
class	calls the standard formatter ||| indenting formatter	count=1
class	c{parseresults} ||| parse results	count=1
function	particular [function] ||| get [function]	count=3
function_arg	[function_1] to location ||| [function_1] link_path [arg_2]	count=3
module	display under ||| core	count=1
arg	provider_factory to ||| provider_factory	count=1
function	see ||| init	count=1
module	the c{re compile()} ||| _vendor	count=1
function	a map ||| map	count=1
function	sys [function_2] ||| [function_1] [function_2]	count=1
module	each distributionpath ||| distlib	count=1
module_class	a given preparedrequest ||| _vendor requests session	count=1
function	attempt ||| attempt	count=1
class	named parse ||| parse	count=1
function_arg	[function_1] [arg_2] ||| [function_1] packagename [arg_2]	count=3
class	dist-info directory ||| installed distribution	count=1
function	the os-release file ||| os	count=2
function	namespace packages ||| namespace handler	count=1
arg	old retries format ||| retries	count=1
function	current linux [function_2] ||| [function_1] [function_2] full_distribution_name	count=1
function	transmission and returns it ||| prepare	count=1
arg	url they ||| url	count=1
module	that ||| _vendor requests	count=1
arg	all headers have ||| headers	count=1
function	server ||| is read error	count=1
function	an element [function_2] ||| [function_2] [function_1]	count=4
function	write the pip delete ||| write delete	count=1
arg	for each version ||| noarch platform impl	count=1
module	for an explanation of ||| _vendor	count=1
class	this requirement ||| requirement	count=2
function	is not ||| is ref	count=1
module	and ||| requests packages urllib3	count=2
module	a symlink or hardlink ||| distlib	count=1
function	a suitable [function_2] ||| [function_2] [function_1]	count=4
arg	python datetime ||| fmt	count=1
function	the prefix length into ||| prefix	count=1
arg	a given url from ||| url	count=1
function_arg	[function_1] a hook ||| [arg_2] [function_1]	count=1
function	prefix length into ||| int from prefix	count=1
function_arg	[function_1] path or ||| [arg_2] [function_1]	count=1
function	method of the ||| method	count=1
module	field returns ||| _vendor requests	count=1
function	[function_1] the url ||| [function_2] [function_1]	count=1
module	:meth urllib3 ||| _vendor requests packages urllib3	count=1
function	installrequirement from ||| from line	count=1
function	parameters c{pattern} and c{flags} ||| init	count=1
function	currently ||| locked	count=1
function_arg	to [arg_2] ||| [function_1] date [arg_2]	count=1
arg	of sockets or optionally ||| socks timeout	count=2
module	and c{flags} are passed ||| _vendor	count=1
class	using :meth urlopen with ||| methods	count=2
class	parse ||| parse	count=2
module	hold a ||| distlib	count=1
arg	importer_type ||| importer_type	count=1
function	the domains in ||| domains	count=1
class	jar ||| requests cookie jar	count=3
class	normally ||| cache	count=1
class	option parser ||| config option parser	count=2
class	file object ||| file object	count=1
class	the cache ||| cache	count=5
class	address as ||| ipaddress	count=1
arg	marker ||| marker	count=1
module	must be called to ||| requests packages urllib3 util	count=1
function_arg	[function_1] filename ||| [function_1] [arg_2]	count=5
arg	of fields ||| fields	count=1
class	index ||| package index	count=2
arg	from src to dst ||| src dst	count=3
class	summary of me ||| error	count=1
module	an exception if not ||| _vendor distlib	count=1
arg	c{flags} are ||| pattern	count=1
arg	iterable of items ||| iterable	count=1
class	the file object ||| ex file object	count=2
function	record file using the ||| installed files	count=1
module	points to an ||| core	count=1
module	be ||| _backport	count=1
class	and c{flags} are ||| regex	count=1
class	decimal ||| v4	count=1
function	master working set and ||| master working set	count=1
arg	c{pattern} and ||| pattern	count=1
class	operation should be ||| stream	count=1
class	the hash of the ||| hash	count=1
class	to working [class_2] ||| [class_1] [class_2]	count=1
arg	from ||| cj	count=1
function	should ||| should include	count=1
arg	[arg_1] entry ||| [arg_2] [arg_1]	count=2
function	cache [function_2] ||| [function_2] [function_1]	count=1
function	or global header ||| header	count=1
arg	name and [arg_2] ||| [arg_1] [arg_2]	count=1
class	the ||| hash error	count=1
function	set and ||| set	count=1
function	get a [function_2] ||| [function_1] [function_2]	count=1
function	test to see if ||| to	count=1
module	return the object ||| _backport	count=1
module	one for ||| _vendor	count=1
module	as a string ||| _vendor	count=2
module	a string that ||| _vendor distlib _backport	count=1
arg	major ||| major	count=1
function	[function_1] a map ||| [function_2] [function_1]	count=1
module	decorator that defines __unicode__ ||| _vendor requests packages urllib3	count=1
function	in a piece ||| params	count=1
arg	if size is ||| size	count=2
function	a string ||| string	count=1
class	to this locator ||| aggregating locator	count=1
module	recursively generate a list ||| _vendor distlib	count=2
function	there are multiple ||| multiple	count=1
function_arg	[function_1] zip_path ||| [arg_2] [function_1]	count=2
arg	namespace_handler to declare ||| namespace_handler	count=1
function	normalize ||| normalize	count=2
module	as :meth urllib3 ||| urllib3	count=1
arg	eintr ||| recalc_timeout	count=1
function_arg	[function_1] number of ||| [arg_2] [function_1]	count=1
arg	into a bitwise netmask ||| prefixlen	count=1
class	from the stream ||| htmlunicode input stream	count=2
class	for display under ||| hash	count=1
class	parse expression ||| parser element	count=2
module	and host ||| _vendor requests packages urllib3	count=1
function	from a ||| prefix from	count=1
function	the minor [function_2] ||| [function_2] [function_1]	count=4
function	for making a dist ||| dist	count=1
module	pack ||| msgpack	count=1
module	get the value to ||| _vendor requests packages urllib3	count=1
arg	also supports optional domain ||| name default domain	count=1
class	be ||| working set	count=1
function	[function_1] any errors ||| [function_1] [function_2]	count=1
class	python ||| regex	count=1
function	record file ||| installed	count=1
module	if a given http ||| _vendor requests	count=1
class	finder ||| finder	count=2
function_arg	yield distributions [arg_2] ||| [function_1] path_item [arg_2]	count=1
module	perform a ||| _vendor distlib	count=1
function_arg	range [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	makefile from [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=2
class	from [class] if ||| [class]	count=1
class	the metadata ||| legacy metadata	count=2
arg	urllib3 ||| connections maxsize block	count=1
function	suitable download for ||| process download	count=1
function	making a dist ||| dist	count=1
function	items from [function_2] ||| [function_2] [function_1]	count=4
module	address as ||| _vendor	count=1
class	the python ||| regex	count=1
class	this specifier are ||| base specifier	count=1
class	specifier like objects are ||| specifier	count=2
module	operation should ||| _vendor distlib	count=1
function	and ||| init	count=1
function	[function_1] string ||| [function_2] [function_1]	count=1
arg	method ||| method	count=1
module	summary ||| core	count=1
function	requirement ||| requirement	count=2
function	a package ||| package	count=2
function	linux [function_2] ||| [function_2] [function_1]	count=1
arg	targetpath according ||| targetpath	count=2
function	all the distribution ||| distribution	count=6
arg	object fdst ||| fdst	count=1
module	a string ||| _vendor distlib _backport	count=1
function	if ||| is	count=3
function	of supported formats for ||| formats	count=2
function	if it is ||| is	count=2
function	tell all the threads ||| threads	count=1
function_arg	the [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
arg	headers ||| url headers	count=1
module	accept and [module_2] ||| [module_1] [module_2]	count=2
class	a summary of me ||| hash	count=1
module	checks if [module_2] ||| [module_1] [module_2]	count=5
function	a link ||| link	count=1
function	[function_1] link-local ||| [function_2] [function_1]	count=2
module	see :class ||| msgpack	count=1
function	a download url for ||| download info	count=1
function	current linux distribution ||| linux distribution	count=1
arg	as-is see the ||| pattern	count=1
class	point from its ||| point	count=1
module	a zip ||| distlib _backport	count=1
arg	download_dir ||| link download_dir	count=1
function	count ||| count	count=1
class	request method ||| prepared request	count=1
arg	algorithm names pointing to ||| gots	count=1
function	given project [function_2] ||| [function_2] [function_1]	count=8
module_class	[module_1] file object ||| [module_1] _backport tar [class_2]	count=1
function	a head ||| head	count=1
arg	sequence of bytes matching ||| bytes	count=1
function	download url ||| to download	count=1
class	[class_1] provider from ||| [class_2] [class_1]	count=4
class	pypi and ||| package index	count=1
function	same host ||| same host	count=2
arg	use a fallback ||| fallback	count=1
function	the dirty work ||| get default values	count=1
class	for scraping ||| scraping	count=1
module	value of ||| _vendor requests packages urllib3	count=1
class	class gathers information ||| linux distribution	count=1
function	allows you to use ||| iter	count=1
class	of the option ||| option	count=1
function_arg	control headers returning ||| control headers	count=1
arg	previously registered hook ||| event hook	count=1
function_arg	range given [arg_2] ||| [arg_2] [function_1]	count=3
function	iterable passed ||| write	count=1
function	after the [function_2] ||| [function_2] [function_1]	count=3
function	command ||| commands	count=1
arg	mode ||| mode	count=1
class	the ||| set	count=1
arg	the data ||| data	count=2
function_arg	write the [arg_2] ||| [arg_2] [function_1]	count=2
function	number of the ||| number	count=1
function	environment [function_2] ||| [function_1] [function_2]	count=1
function	upload a release ||| upload	count=1
arg	fields based ||| fields headers	count=1
class	distribution as ||| distribution	count=3
module	_stream ||| _vendor distlib	count=1
function	a list of ||| intranges from list	count=1
arg	entry if entry ||| entry	count=1
function_arg	[function_1] the request ||| [arg_2] [function_1]	count=1
function_arg	[function_1] requirementset ||| [arg_2] [function_1]	count=1
module	if the given ||| _vendor requests	count=1
function_arg	wrapper function for ||| syscall wrapper func	count=1
module	on the server ||| _vendor requests packages urllib3	count=1
function	this points to an ||| is	count=1
function	[function_1] path ||| [function_2] [function_1]	count=6
class	changes previously made ||| uninstall path set	count=1
function	ip string is a ||| is	count=1
function	return the entry point ||| get	count=1
class	under ||| hash error	count=1
class	for the different directives ||| controller	count=1
function_arg	decode [arg_2] ||| [function_1] [arg_2]	count=1
class	c{re ||| regex	count=1
function	distribution object is ||| is	count=1
class	return a version ||| version	count=1
function	stream decodes a ||| stream decode response unicode	count=1
arg	from src ||| src	count=3
function	download url for a ||| download	count=1
arg	explanation of the ||| pattern	count=1
function	c{re ||| init	count=1
class	- the ||| parser	count=1
arg	the given rev_options ||| dest rev_options	count=1
class	display under ||| hash error	count=1
function_arg	[function_1] [arg_2] ||| [function_1] prefix [arg_2]	count=5
arg	mode to a string ||| mode	count=1
module_class	[module_1] parser ||| [module_1] [class_2]	count=2
arg	download_dir ||| download_dir hashes	count=1
module	'pathname' as a name ||| distlib	count=1
arg	appropriate to ||| options index_urls session	count=1
function	a list of ||| list	count=1
module	current linux distribution as ||| _vendor	count=1
function	[function_1] url the ||| [function_2] [function_1]	count=2
function	path for the ||| path	count=1
function	[function_1] [function_2] req ||| [function_1] [function_2]	count=2
arg	the [arg] ||| [arg]	count=3
function_arg	the record [arg_2] ||| [function_1] [arg_2]	count=1
class	of the graph ||| dependency graph	count=2
function	after the previous attempt ||| after attempt	count=1
arg	[arg_1] path args ||| [arg_1] [arg_2]	count=2
module	[module] particular ||| [module]	count=4
module_class	or [class_2] ||| [module_1] [class_2]	count=2
function	depending if it is ||| is	count=1
function	the record file ||| installed files	count=1
module	numpy or ||| _vendor pkg_resources	count=1
arg	header value is a ||| header	count=1
module	get the value ||| _vendor requests packages urllib3 util	count=1
function	bzip2 compressed ||| bz2open	count=1
function	od viewitems() ||| viewitems	count=1
class	file object ||| file	count=2
function_arg	[function_1] function for ||| [arg_2] [function_1]	count=1
function	dir for ||| config dir	count=1
module	[module] absolute path ||| [module]	count=1
function	encode parameters in ||| encode params	count=2
function_arg	make providers [arg_2] ||| [arg_2] [function_1]	count=2
function	<==> repr ||| repr	count=1
function	of sys [function_2] ||| [function_1] [function_2]	count=1
module	given an ||| requests packages urllib3 contrib	count=1
module	packed bytes see :class ||| _vendor	count=1
class	normally one ||| cache	count=1
class	display under ||| error	count=1
class	c{pattern} ||| regex	count=1
function	start the ||| start	count=1
function	link ||| link	count=1
class	locator ||| aggregating locator	count=1
module	a symlink ||| distlib _backport	count=1
function	copy distribution files ||| copy dist	count=2
function	add an [function_2] ||| [function_2] [function_1]	count=4
arg	src ||| cls src	count=1
function	delimited [function_2] ||| [function_1] [function_2]	count=2
function	range given ||| range	count=1
class	the version of the [class_1] [class_2] ||| [class_1] [class_2]	count=4
module	a directory ||| _vendor distlib _backport	count=1
module	filesystem or ||| _vendor pkg_resources	count=1
class	the information ||| linux distribution	count=3
arg	no extension ||| project_name	count=1
module	the ||| core	count=1
function	feed ||| feed	count=1
function	distribution files in ||| dist	count=1
function	[function_1] [function_2] ||| [function_1] file [function_2]	count=2
module	no ||| _vendor distlib	count=1
function	default keyword ||| default keyword	count=1
function	longhand version of the ||| exploded	count=1
arg	filename ||| filename	count=4
class	me for ||| hash	count=1
arg	supplied namespace dictionary ||| script_name namespace	count=1
module_class	a given [class_2] ||| [module_1] [class_2]	count=2
class	from the file if ||| file object	count=1
function_arg	[function_1] current node ||| [arg_2] [function_1]	count=5
module	posting to an ||| distlib	count=1
module_class	[module_1] dictionary with ||| [module_1] [class_2]	count=1
module	[module_1] as a ||| [module_1] [module_2]	count=3
module	the release ||| _vendor	count=1
arg	file-like object for resource_name ||| resource_name	count=1
arg	archive_name [arg] ||| archive_name [arg]	count=3
class	the file ||| file object	count=1
function	return the minor version ||| minor version	count=1
function	any character in 'characters' ||| chars until	count=1
function	backport ||| backport	count=1
class	the stream if ||| input stream	count=1
module	given an pyopenssl certificate ||| _vendor requests packages	count=1
function	the python ||| init	count=1
arg	for each ||| noarch platform impl	count=1
function	[function_1] [function_2] in the input text ||| [function_1] [function_2]	count=2
arg	on windows/python2 ||| file1 file2	count=1
module	a zip file ||| distlib _backport	count=1
arg	dict ||| value	count=1
module	that defines __unicode__ and ||| _vendor requests packages	count=1
module	that defines __unicode__ and ||| _vendor requests	count=1
module	on ||| packages urllib3	count=1
module	packed bytes see ||| _vendor msgpack	count=1
class	points ||| link	count=1
module	from an html page ||| distlib	count=1
module	look for an ||| _vendor	count=1
module	a given file-like ||| _vendor requests packages urllib3	count=1
class	file ||| file object	count=1
function	[function_1] currently ||| [function_1] [function_2]	count=1
function	authentication from the request ||| rebuild auth	count=1
arg	string ||| string	count=1
function	a requirement set ||| requirement set	count=1
class	[class] from the ||| [class]	count=3
class	changes previously made ||| uninstall	count=1
function	od __iter__() <==> iter ||| iter	count=1
arg	headers returning ||| headers	count=1
function	for ||| get	count=1
arg	true if the file_path ||| file_path	count=1
class	this specifier are ||| specifier	count=1
module	archive as a ||| distlib _backport	count=3
function	obtain the url ||| request url	count=1
function	turn the prefix length ||| from prefix	count=1
function	build the path ||| path	count=1
arg	subscriber for an event ||| event subscriber append	count=1
class	record entries and ||| installed	count=1
function_arg	in [arg_2] ||| [arg_2] [function_1]	count=1
module	should be ||| _vendor	count=1
module	random url on ||| packages urllib3	count=1
function	converting ||| convert	count=1
class	made by remove() ||| uninstall path set	count=1
function	the paths names ||| names	count=1
function	insert node as ||| insert	count=1
function	a requirement that ||| requirement	count=1
module	from an html page ||| _vendor distlib	count=1
function	distribution best [function_2] ||| [function_2] [function_1]	count=1
module	value of ||| _vendor requests packages urllib3 util	count=1
arg	[arg_1] the method ||| [arg_2] url [arg_1]	count=2
function	[function_1] name of ||| support [function_1] backend [function_2]	count=1
function	[function_1] an element ||| [function_2] [function_1]	count=4
arg	events to monitor ||| fileobj events	count=1
function_arg	file url [arg_2] ||| [arg_2] [function_1]	count=3
function	the connection [function_2] ||| [function_2] [function_1]	count=2
class	return a summary ||| hash	count=1
function	the threads ||| threads	count=1
arg	based on the method ||| method	count=1
module	_stream object ||| _vendor distlib	count=1
arg	python c{re} ||| pattern	count=1
class	bitwise netmask ||| ipaddress base	count=1
function	stale for the given ||| stale	count=1
function_arg	socket makefile [arg_2] ||| [function_1] [arg_2]	count=1
function	value and wait for ||| wait	count=1
function	decoder is actually ||| decoder	count=1
function	edge ||| edge	count=1
module	an pyopenssl certificate provides ||| packages	count=1
function	after the ||| after	count=1
module	tree ||| html5lib treebuilders	count=1
module	url on the server ||| requests packages urllib3	count=1
module	no operation should be ||| _backport	count=1
function	confidence based ||| confidence	count=1
function_arg	remove a [arg_2] ||| [function_1] [arg_2]	count=1
arg	link ||| link	count=1
module	a file ||| _vendor distlib	count=4
module	returns ||| requests packages urllib3	count=1
function	child of ||| append child	count=1
module	a tuple containing ||| distlib	count=2
class	for display ||| hash error	count=1
module	an ||| packages urllib3 packages	count=1
module	[module] is protected ||| [module]	count=1
class	string or integer ||| ipv4address	count=1
function	an element ||| element	count=1
module	tarball or ||| core	count=1
module	prints only a ||| distlib	count=1
function_arg	wrapper [arg_2] ||| [arg_2] [function_1]	count=4
module	with a ||| _vendor distlib	count=1
class	remove() ||| uninstall path set	count=1
function	version is identical ||| check version	count=2
function	dictionary ||| dict	count=4
module	no operation should be ||| distlib	count=1
function	to declare namespace packages ||| namespace	count=1
function_arg	path samefile [arg_2] ||| [function_1] [arg_2]	count=1
function	of supported formats ||| get unpack formats	count=1
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=3
class	timeout clock ||| timeout	count=1
arg	for an event ||| event	count=3
arg	__repr__() ||| _repr_running	count=1
function	the [function] ||| get [function]	count=2
module	an ||| distlib	count=11
function	determines if this ||| is	count=1
arg	of dist_name [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] dist ||| [arg_2] [function_1]	count=2
class	if this address ||| base network	count=1
class	option [class_2] ||| [class_2] [class_1]	count=4
module	create a zip file ||| distlib _backport	count=1
function	convert a path to ||| path to	count=1
class	ipv6 ||| v6	count=2
module	always returns [module_2] ||| [module_1] [module_2]	count=1
function	the url ||| request url	count=1
module	c{flags} are passed to ||| _vendor	count=1
class	for display ||| error	count=1
module	and disable ||| requests	count=1
arg	fields and ||| fields	count=1
function	stale for the ||| stale	count=1
function	python ||| python	count=1
module	the given ||| requests	count=1
function	return a requirement that ||| requirement	count=1
module	an ||| _vendor requests packages urllib3 packages	count=1
function	the record file using ||| installed files	count=1
arg	minor and ||| minor	count=1
class	for ||| regex	count=1
function_arg	subpath [arg_2] ||| [function_1] packagename [arg_2]	count=3
arg	url they came ||| data url	count=1
function	remove node from ||| remove	count=1
module_class	make a [class_2] ||| [module_1] _backport tar [class_2]	count=1
function	a new copy ||| copy	count=1
function	output of sys stdout ||| captured stdout	count=1
function	directory name ||| dir	count=1
arg	return true if path ||| path	count=1
module	return packed bytes ||| _vendor	count=1
arg	calls the ||| installer	count=1
class	as-is see the python ||| regex	count=1
function	path to [function] ||| path to cache [function]	count=1
module	a name that will ||| _vendor distlib	count=1
function	[function_1] path to ||| [function_1] file [function_2]	count=1
function	list of supported formats ||| formats	count=2
function	file to the ||| file	count=1
class	fields ||| legacy	count=1
function	get the part ||| get	count=1
module	decorator that ||| _vendor requests packages urllib3	count=1
module	look for an encoding ||| _vendor	count=1
function	a path to ||| path to	count=1
function	of the ||| init	count=1
module	same ||| _vendor requests packages urllib3 packages	count=1
function	are specified as options ||| options	count=1
class	queued [class] ||| [class]	count=1
arg	od __repr__() ||| _repr_running	count=1
module_class	use when making ||| _vendor requests httpadapter	count=1
module	check if the given ||| _vendor requests	count=1
class	file if ||| ex file	count=1
module	a dictionary of ||| _vendor distlib	count=2
function_arg	[function_1] of group ||| [function_1] [arg_2]	count=2
module	the ||| distlib _backport	count=2
module	like abc 1 ||| packaging	count=1
module_class	archive [class_2] ||| [module_1] tar [class_2]	count=4
function_arg	[function_1] path will ||| [arg_2] [function_1]	count=7
module_class	-> [class_2] ||| [module_1] [class_2]	count=4
function	is a ||| is	count=7
function	bytes see :class packer ||| packb	count=1
function	a download url ||| to download	count=1
function	attempt >= stop_max_attempt_number ||| attempt	count=1
module	all urllib3 ||| _vendor requests packages urllib3	count=1
module	determine if a ||| _vendor distlib	count=1
arg	o and ||| o	count=1
module	[module] iterator ||| [module]	count=1
function	[function_1] variables ||| [function_2] [function_1]	count=1
module	reading a ||| _vendor distlib	count=1
class	the stream up to ||| htmlunicode input stream	count=1
function	is reserved for ||| is	count=2
class	resource ||| resource manager	count=3
arg	for the url if ||| url proxies	count=1
class	ansi [class_2] ||| [class_2] [class_1]	count=1
function	pip delete ||| delete	count=1
function	are required by ||| required	count=1
arg	[arg] instance attributes ||| [arg]	count=1
class	display under the ||| error	count=1
function_arg	[function_1] [arg_2] using ||| [function_1] [arg_2]	count=1
function	path url to ||| path url	count=1
function	mode bits ||| copymode	count=1
module	all urllib3 ||| requests packages urllib3	count=1
class	objects to selector keys ||| selector	count=1
module	look ||| webencodings	count=1
function_arg	of supported [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	point of [arg_2] ||| [arg_2] [function_1]	count=1
class	passed ||| installed distribution	count=1
class	sigint handler for ||| mixin	count=1
arg	or writing ||| mode fileobj	count=2
function_arg	[function_1] numeric ||| [arg_2] [function_1]	count=4
function	'characters' or ||| chars until	count=1
class	register ||| base selector	count=1
function	tree type ||| tree	count=1
module	_stream ||| _vendor distlib _backport	count=2
module	value of a ||| _vendor distlib _backport	count=1
module	[module] particular "rel" ||| [module]	count=3
function	od items() ||| items	count=1
module	a decorator that defines ||| _vendor requests packages urllib3 packages	count=1
function	if this ||| is	count=1
module	file [module] tarinfo ||| [module]	count=1
module_class	[module_1] [class_2] tarfile is opened for ||| [module_1] [class_2]	count=4
class	return ||| legacy metadata	count=1
class	from the file ||| ex file	count=1
arg	to point to url ||| url rev_options	count=1
function	the server ||| read error	count=1
module	filesystem or ||| pkg_resources	count=1
function	return the version ||| version	count=2
function	command for interacting ||| command	count=1
arg	supports optional domain ||| default domain	count=1
class	the response data ||| response	count=1
function	build a dictionary ||| build	count=1
function	to list all the ||| list	count=2
module	attempts ||| _vendor requests packages urllib3 util	count=1
module	the ||| req	count=1
module_class	make a [class_2] ||| [module_1] [class_2]	count=1
class	the list of parsed ||| parse	count=1
function	the subnets which ||| subnets	count=1
function	c{flags} are passed ||| init	count=1
function_arg	package finder [arg_2] ||| [arg_2] [function_1]	count=3
arg	tempname this is ||| tempname filename	count=1
function	register a file object ||| register	count=1
function	legacy ||| float	count=1
class	if [class] ||| [class]	count=1
function	[function] them into ||| write [function]	count=2
function	an installrequirement from ||| from line	count=1
module	named field returns an ||| requests packages	count=1
arg	of specifications ||| specifications options	count=1
function	children of the ||| child	count=1
function	minor [function_2] ||| [function_2] [function_1]	count=4
function_arg	// [arg_2] ||| [function_1] [arg_2]	count=3
function	a mapping of file ||| map	count=1
function	pid from ||| read pid	count=1
function	get a connection ||| get conn	count=1
function	keyword ||| keyword	count=1
module	a new ipv6 network ||| _vendor	count=1
function_arg	a path [arg_2] ||| [arg_2] [function_1]	count=1
function	is included ||| is	count=1
function	returns glibc [function] ||| glibc [function]	count=1
arg	c{pattern} ||| pattern	count=1
module	is ||| _vendor distlib	count=2
module	the parameters c{pattern} and ||| _vendor	count=1
function_arg	[function_1] [arg_2] ||| base installed distribution [function_1] hash [arg_2] hasher	count=1
function	[function_1] after the ||| [function_1] [function_2]	count=1
arg	of data ||| data	count=1
module	should be closed ||| packages urllib3 util	count=1
function	source archive download url ||| source url	count=1
arg	is either 'r' ||| mode fileobj format	count=1
function	bom ||| bom	count=1
class	all info ||| linux	count=1
function	is reserved for site-local ||| is site local	count=1
module	and disable ||| _vendor requests	count=1
class	sequences ||| to	count=1
class	the file if ||| file object	count=1
class	the given expression as ||| parser element	count=1
module	an ||| _vendor webencodings	count=2
function	access [function] you ||| save [function]	count=1
arg	file_path ||| file_path	count=1
class	determines if this points ||| link	count=1
arg	of events to monitor ||| events	count=1
arg	or global header ||| encoding errors	count=1
module	no ||| _vendor distlib _backport	count=2
class	are passed ||| regex	count=1
arg	name which ||| name	count=1
module	bytes see ||| _vendor	count=1
function	rollback the changes previously ||| rollback	count=1
class	object ||| base	count=3
module	character ||| requests packages chardet	count=1
function	the build [function_2] ||| [function_2] [function_1]	count=5
function	specified as options ||| options	count=1
arg	category ||| category	count=1
function	to change the method ||| rebuild method	count=1
module	archive as [module_2] ||| [module_2] [module_1]	count=6
class	returns the named parse ||| parse	count=1
function_arg	[function_1] of dist_name ||| [function_1] [arg_2]	count=4
module	of the archive as ||| _backport	count=2
module	field returns ||| _vendor requests packages	count=1
module	a string like ||| packaging	count=1
function	look ||| lookup	count=1
function	a prefix length ||| prefix from	count=1
class	be a sequence of ||| working set	count=1
function	a get ||| get	count=1
function	the same leading ||| has leading	count=1
module	present or none ||| _vendor pkg_resources	count=1
module	a given file-like ||| _vendor requests packages urllib3 util	count=1
arg	the name ||| name	count=1
function	[function_1] dir ||| [function_1] [function_2]	count=6
function	prepare a ||| prepare	count=1
function	the path for ||| path	count=1
arg	a name which ||| cls name	count=2
arg	request ||| request proxies	count=1
arg	of tempname ||| tempname filename	count=1
function_arg	[function_1] a numeric ||| [function_1] prefix string [arg_2]	count=2
class	*requirement* for ||| graph	count=1
module	returns an ||| _vendor distlib	count=1
function	define action to perform ||| action	count=1
function	[function_1] the same ||| [function_1] [function_2]	count=1
function	master [function_2] ||| [function_2] [function_1]	count=5
module	given http method ||| requests	count=1
arg	this calls the find ||| installer	count=1
function	the file [function_2] ||| [function_2] [function_1]	count=1
module	string or sequence ||| _vendor pkg_resources	count=1
function	and wait for ||| wait	count=1
function	working set ||| working set	count=2
function	list of integers ||| from list	count=1
class	the stream if a ||| stream	count=1
arg	[arg_1] name ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] download_dir for ||| [arg_2] [function_1]	count=1
function_arg	deregister a [arg_2] ||| [function_1] [arg_2]	count=1
module	of a symlink or ||| distlib	count=1
arg	the filename the ||| filename	count=1
module	is [module] ||| [module]	count=1
function	unspecified ||| unspecified	count=3
function	schemes names ||| scheme names	count=2
module	of me ||| core	count=1
function_arg	all [arg_2] ||| [function_1] candidates [arg_2]	count=3
function	switch the ||| switch	count=1
arg	[arg_1] to extract_dir ||| [arg_2] [arg_1]	count=2
function	and versions provided by ||| provides	count=1
function	given ||| make	count=1
function	[function_1] a random ||| [function_2] [function_1]	count=2
class	of parsed ||| parse results	count=1
module	a distribution or ||| pkg_resources	count=1
function	make providers ||| loader	count=1
class	position in the file ||| ex file	count=1
module	a given file-like ||| _vendor requests	count=1
function	is reserved [function_2] ||| [function_1] [function_2]	count=2
class	changes previously ||| uninstall path	count=1
function	return a string containing ||| get resource string	count=1
function	for an explanation of ||| init	count=1
function	return a [function_2] ||| [function_1] [function_2]	count=5
arg	[arg_1] to dst ||| [arg_2] [arg_1]	count=3
function	list all the domains ||| list domains	count=1
function	proxymanager for ||| manager for	count=1
arg	optional domain and ||| default domain	count=1
class	by remove() ||| set	count=1
function	should a filename ||| should include	count=1
module	a zip file ||| _vendor distlib _backport	count=1
module	for a filesystem or ||| pkg_resources	count=1
arg	a url ||| url	count=1
arg	return a dict ||| value	count=1
module	for each distributionpath ||| distlib	count=1
class	option parser possible _update_defaults() ||| config option parser	count=1
module	helper that always returns ||| requests packages	count=1
module	a given file-like object ||| _vendor requests packages urllib3 util	count=1
function	headers from [function_2] ||| [function_2] [function_1]	count=1
function	overrides the default ||| default	count=1
function	located in the ||| distinfo	count=1
function	[function_1] given just ||| [function_2] [function_1]	count=8
module	see ||| _vendor msgpack	count=2
function	true if the extracted ||| root is	count=1
module	_stream object no ||| distlib _backport	count=1
function	distutils ||| distutils	count=1
function	named metadata ||| metadata	count=2
function	of ||| init	count=1
module	returns a list ||| distlib	count=2
arg	location and ||| location	count=1
module	the same as for ||| packages urllib3 packages	count=1
function_arg	point [arg_2] ||| [function_1] [arg_2]	count=1
module	each ||| _vendor distlib	count=2
function	generator method to split ||| split	count=1
arg	for each [arg_2] ||| [arg_2] [arg_1]	count=2
arg	file-like object for resource_name ||| manager resource_name	count=1
arg	for a given url ||| url raise_errors	count=1
module	repository [module] the url ||| [module]	count=4
function	actual artifact e g ||| artifact	count=1
function	or ||| is	count=1
class	this specifier are allowed ||| base specifier	count=1
module	[module_1] and ||| [module_1] [module_2]	count=1
module	a directory ||| distlib _backport	count=1
module	checks [module_2] ||| [module_1] [module_2]	count=5
function	of the tree ||| tree	count=1
function	returns [function_1] [function_2] in case requirements file ||| [function_1] [function_2]	count=1
module	the same ||| packages urllib3 packages	count=1
arg	see the python ||| pattern	count=1
module	a c{parseresults} object ||| _vendor	count=1
arg	[arg_1] dst ||| [arg_1] [arg_2]	count=3
module	initialize for reading a ||| distlib _backport	count=1
module	given an pyopenssl certificate ||| _vendor requests packages urllib3	count=1
function	list all the ||| list	count=2
module	value to ||| _vendor requests packages urllib3 util	count=1
function	read headers from ||| from	count=1
arg	[arg_1] and path ||| [arg_1] [arg_2]	count=3
function	called if the decoder ||| decoder	count=1
class	c{flags} are ||| regex	count=1
function_arg	before [arg_2] ||| [arg_2] [function_1]	count=4
module	return [module] all configuration ||| [module]	count=1
function	explanation ||| init	count=1
function	a wheel ||| wheel	count=1
module	recursively generate a ||| distlib	count=2
class	of parsed tokens ||| parse results	count=1
module	for context-management ||| _vendor	count=1
module	by an ||| _vendor distlib	count=1
function	resource ||| resource stream	count=1
class	display ||| hash error	count=1
function_arg	[function_1] a numeric ||| [arg_2] [function_1]	count=4
function	record file ||| installed files	count=1
function_arg	glob [arg_2] ||| [function_1] to re [arg_2]	count=1
function	to ||| init	count=1
function_arg	[function_1] on windows/python2 ||| [arg_2] [function_1]	count=4
module	a decorator that defines ||| requests packages urllib3	count=1
function	containing the paths names ||| path names	count=1
function	glibc [function] ||| glibc [function]	count=1
class	of a ||| results	count=1
class	of the stream if ||| stream	count=1
module	from ||| requests	count=1
function	data dir ||| data dir	count=6
arg	mode to ||| mode	count=1
module	given an pyopenssl certificate ||| requests packages	count=1
arg	each [arg_2] ||| [arg_2] [arg_1]	count=2
module	an explanation ||| _vendor	count=1
function	return the path ||| get file path	count=1
function	bytes see :class ||| packb	count=1
arg	to newparent ||| newparent	count=1
function	file url the ||| url	count=1
function	the [function] ||| [function]	count=3
function	retry-after ||| retry after	count=1
function	unpack tar/tar [function_2] ||| [function_1] [function_2]	count=1
function	representation of this ||| repr	count=1
function	remove the ||| remove	count=1
module	single string ||| webencodings	count=2
arg	requirements requirements ||| requirements	count=1
module	like abc 1 twelve ||| _vendor packaging	count=1
function	c{pattern} and c{flags} are ||| init	count=1
function	function used to insert ||| set insert	count=1
module	given an ||| _vendor requests packages urllib3	count=1
function	get a connection will ||| get	count=1
function	true if the version ||| version	count=1
module	a zip ||| distlib	count=1
function	the subscribers ||| subscribers	count=1
function	compile()} ||| init	count=1
arg	filename to [arg_2] ||| [arg_2] [arg_1]	count=2
function	release ||| release	count=3
arg	to the given rev_options ||| rev_options	count=1
function	representation ||| repr	count=2
module	that ||| _vendor requests packages urllib3 packages	count=1
function	parameters c{pattern} and ||| init	count=1
function	for a download ||| to download	count=1
function	after the [function_2] ||| [function_1] [function_2]	count=3
arg	method of the working_set ||| working_set	count=1
class	this points to an ||| link	count=1
function	key/value dictionary from ||| dict from	count=2
function	update the contents ||| update	count=1
class	function as-is see ||| regex	count=1
module	be ||| distlib _backport	count=2
module	a string that ||| _vendor distlib	count=1
function	named distribution ||| get distribution	count=1
function	the path [function_2] ||| [function_1] [function_2]	count=3
function	// ||| dir url	count=1
arg	write it [arg] ||| o [arg]	count=1
arg	url is ||| url	count=1
class	whether or not the ||| base	count=1
function_arg	[function_1] header value ||| [arg_2] [function_1]	count=1
function	glob ||| glob	count=1
function	of a [function_2] ||| [function_1] [function_2]	count=1
module	a list of distributions ||| distlib	count=2
function_arg	[function_1] numeric ||| [function_1] prefix string [arg_2]	count=2
class	a summary of me ||| hash error	count=1
module	returns a ||| _vendor	count=2
function	the distribution [function_2] ||| [function_1] [function_2]	count=18
function	version [function_2] ||| [function_2] [function_1]	count=7
function	target member of ||| target	count=1
arg	file's [arg] of ||| [arg]	count=1
function	return the [function_2] ||| support [function_1] backend [function_2]	count=4
function	python version in ||| requires python	count=1
module	compile()} function ||| _vendor	count=1
class	one for each ||| cache	count=1
function	a download url ||| download	count=1
arg	[arg_1] version ||| [arg_2] [arg_1]	count=1
function	create an instance ||| init	count=1
arg	url [arg_2] ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] [arg_2] using ||| base installed distribution [function_1] hash [arg_2] hasher	count=1
class	preparedrequest ||| session	count=1
class	the c{re compile()} function ||| regex	count=1
arg	namespace ||| namespace	count=1
class	the record entries ||| installed	count=1
function	is [function_2] ||| [function_1] [function_2]	count=19
function_arg	finder [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] this zip_path ||| [function_1] file_path [arg_2]	count=2
module	return a ||| distlib _backport	count=2
function	[function_1] marker file ||| [function_2] [function_1]	count=3
function	get a [function_2] ||| [function_1] tree [function_2] treetype implementation	count=1
function	is [function_2] ||| [function_1] connection [function_2]	count=3
function	create an instance from ||| init	count=1
function	used to insert an ||| set insert	count=1
module	entries [module] ||| [module]	count=2
arg	url they ||| data url	count=1
function	repr of ||| repr	count=1
function	the terminal window ||| terminal size	count=1
function_arg	[function_1] paths iterable ||| [function_1] [arg_2]	count=1
class	the svn ||| subversion	count=1
function	requirement [function_2] ||| [function_1] [function_2]	count=1
class	points to ||| link	count=1
class	if this distribution is ||| distribution	count=1
function	default [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] all ||| [function_1] [function_2]	count=1
class	cookie ||| cookie	count=2
function	to an ||| is	count=1
function	distributions ||| distribution	count=1
function_arg	hook [arg_2] ||| [function_1] [arg_2]	count=4
function	resolve the ||| resolve	count=1
class	return the ||| ipaddress	count=1
module	value ||| packages urllib3	count=3
module	and returns a ||| _vendor distlib	count=1
function	to spaces before parsing ||| parse with tabs	count=1
function	minor [function_2] ||| [function_1] [function_2]	count=4
arg	of group ||| group	count=1
arg	and return the socket ||| timeout	count=1
function	return a fresh ||| new conn	count=1
function	[function_1] a package ||| [function_2] [function_1]	count=1
function_arg	octet [arg_2] ||| [arg_2] [function_1]	count=1
function	list of matching tokens ||| list	count=1
arg	link points to ||| link	count=1
function	should we redirect ||| redirect location	count=1
module	checks if given ||| _vendor requests packages urllib3 util	count=1
module	summary of me for ||| core	count=1
function	string ||| resource string	count=2
function	distribution best [function_2] ||| [function_1] [function_2] req	count=1
class	specifier are allowed ||| specifier	count=1
function	[function_1] distribution ||| [function_2] [function_1]	count=13
module	object no operation should ||| distlib _backport	count=1
class	a summary of ||| hash error	count=1
class	wheel ||| wheel	count=3
function_arg	[function_1] message object ||| [function_1] [arg_2]	count=7
class	[class_1] object for ||| [class_2] [class_1]	count=1
class	connection pool ||| httpconnection pool	count=1
class	return a ||| error	count=1
module_class	like object this ||| _vendor packaging base	count=1
function	to update our cached ||| update cached response	count=1
arg	a path ||| path	count=2
arg	[arg_1] socket object ||| [arg_2] [arg_1]	count=2
module	each distributionpath ||| _vendor distlib	count=1
function	html source example ||| htmltags	count=1
arg	names the parent directory ||| names	count=1
arg	is not a c{l{parserelement}} ||| other	count=2
module	and c{flags} ||| _vendor	count=1
function	registers ||| mount	count=1
module	this method ||| _vendor requests	count=1
module	no ||| distlib	count=1
function	[function_1] proxy ||| [function_1] [function_2]	count=1
arg	to the destination location ||| filename location	count=1
arg	session ||| session	count=1
arg	of events ||| events	count=1
class	the record entries and ||| installed distribution	count=1
module	as ||| _vendor	count=2
module	a tar archive ||| _vendor distlib _backport	count=1
arg	one chunk ||| final	count=1
function	a cookie ||| cookie	count=2
module	[module_1] an ||| [module_1] [module_2]	count=6
class	[class_1] address ||| [class_2] [class_1]	count=2
function	a prefix length args ||| prefix	count=1
function_arg	a digest from ||| digest info	count=1
module	parameters ||| _vendor	count=1
class	the dist-info directory returns ||| installed distribution	count=1
function	insert node as a ||| insert	count=1
arg	od[k]=d if ||| key	count=1
arg	optional domain [arg_2] ||| [arg_2] [arg_1]	count=3
function	insert ||| insert option group	count=2
module_class	under the heading ||| core hash error	count=1
function	to the form used ||| to	count=1
function	of the same ||| same	count=1
function	dnsname ||| dnsname	count=1
function	[function_1] variables ||| [function_1] [function_2]	count=1
module	[module_1] if a ||| [module_2] requests [module_1]	count=1
module	the ||| _vendor	count=10
function	method of ||| method	count=1
arg	compute an ns-package subpath ||| path_item packagename module	count=1
class	python c{re} module ||| regex	count=1
arg	byte count ||| count	count=1
arg	c{re compile()} ||| pattern	count=1
function	return an ||| get	count=1
arg	file-like object into ||| doc treebuilder namespacehtmlelements	count=1
arg	in specified paths ||| paths	count=1
module	checks if given ||| requests	count=1
function	for the subscribers ||| subscribers	count=1
class	c{flags} are passed ||| regex	count=1
function_arg	zip filename ||| zipfile filename	count=1
arg	and files for posting ||| files	count=1
module	a given ||| _vendor requests packages urllib3	count=1
module	:meth urllib3 ||| requests packages urllib3	count=1
class	a ||| ipaddress base	count=1
function	is compatible with the ||| is compatible	count=1
class	all info ||| linux distribution	count=1
function	list of supported formats ||| get unpack formats	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=140
arg	a physical ||| set_attrs	count=1
module	a set of distribution ||| distlib	count=1
function	the installed version ||| installed version	count=2
function	element [function_2] ||| [function_2] [function_1]	count=4
module	the value ||| requests packages urllib3 util	count=2
class	explanation of ||| regex	count=1
function	test to ||| to	count=1
class	previously made by ||| set	count=1
function	delimited list ||| delimited list	count=2
arg	the [arg_1] [arg_2] ||| install [arg_1] [arg_2]	count=2
function	if it is ||| is ref	count=1
arg	fallback ||| fallback	count=1
module	decorator that defines __unicode__ ||| requests packages urllib3 packages	count=1
module	and a ||| _vendor distlib	count=1
function	string to ||| to	count=2
function_arg	[function_1] accessible via ||| [function_1] path_item [arg_2]	count=2
function	write the ||| write and	count=1
function_arg	decode the [arg_2] ||| [arg_2] [function_1]	count=1
arg	a resource prefix ||| prefix	count=1
arg	refnode in ||| refnode	count=1
function	repr ||| repr	count=2
arg	set [arg] k not ||| [arg]	count=1
arg	the file_path ||| file_path	count=1
function	unpack tar/tar gz/tar bz2 ||| unpack tarfile	count=1
module	:class packer for options ||| _vendor	count=1
class	provider from a ||| egg	count=1
function	the target member of ||| target	count=1
function	[function_1] httplib ||| [function_1] [function_2]	count=1
class	[class_1] parser possible ||| [class_1] [class_2]	count=4
module	and c{flags} are ||| _vendor	count=1
arg	callback for all ||| callback	count=1
function	distributions ||| distributions	count=2
function	the server ||| is read error	count=1
class	a summary of ||| hash	count=1
module	class ||| packaging	count=1
arg	of the given url ||| url session	count=1
module	release of the ||| _vendor	count=1
arg	module ||| pattern	count=1
function	that are unreserved characters ||| unquote unreserved	count=1
function	default user [function_2] ||| [function_2] [function_1]	count=1
class	of file ||| tar file	count=1
arg	point from string src ||| cls src dist	count=1
module	add ||| packages urllib3 packages	count=1
arg	install a ||| name req wheeldir user	count=1
module	the _stream ||| distlib _backport	count=1
function	sleep ||| sleep	count=2
function	returns a :class session ||| session	count=1
function	and wait ||| wait	count=1
class	object no ||| stream	count=1
class	normally one for ||| cache	count=1
arg	project ||| project_name	count=1
function	the method of ||| rebuild method	count=1
class	provider from ||| egg	count=1
function	linux ||| linux	count=1
function	named distribution on the ||| distribution	count=1
module	string or sequence ||| pkg_resources	count=1
module	if this points ||| core	count=1
arg	a [arg_2] ||| [arg_2] [arg_1]	count=5
module	returns a list ||| _vendor distlib	count=2
function	method ||| method	count=1
module	context-management ||| _vendor	count=1
module	for display under the ||| core	count=1
function	a distro ||| distro	count=1
module	by an ||| distlib	count=1
module	see :class packer ||| msgpack	count=1
module	return [module_2] ||| [module_2] [module_1]	count=2
function	them ||| multiple	count=1
function	no ||| no	count=1
module	a string ||| _vendor distlib	count=1
module	to insert before ||| _vendor html5lib treebuilders	count=1
class	string ||| ipaddress base	count=1
function	distro release [function_2] ||| [function_1] [function_2]	count=1
module_class	a [class_2] ||| [module_1] [class_2]	count=37
class	for the ipv4 address ||| v4	count=1
function	normalize ||| normalize path	count=2
function	a download ||| download	count=1
function	to ||| path to	count=1
class	file ||| ex file	count=3
arg	[arg_1] extract_dir ||| [arg_1] [arg_2]	count=2
module	a ||| _vendor requests	count=1
function	first found ||| first	count=1
module_class	[module_1] [class_2] when tarfile is opened ||| [module_1] [class_2]	count=4
function	a setup py file ||| installable dir	count=1
function_arg	a treewalker [arg_2] ||| [function_1] [arg_2]	count=1
function	compare two digests of ||| compare	count=1
function	slices of ||| iter slices	count=1
function	the abi ||| abi	count=1
arg	element ||| element	count=1
function	an installationcandidate ||| package	count=1
module	a tuple path ||| _vendor distlib	count=1
function	[function_1] treebuilder ||| [function_2] [function_1]	count=1
module	as a ||| _vendor distlib	count=4
arg	a dict of ||| value	count=1
function	[function_1] length from ||| [function_2] [function_1]	count=6
module	a list of ||| distlib _backport	count=2
function_arg	[function_1] message ||| [arg_2] [function_1]	count=7
module	that defines __unicode__ and ||| requests packages urllib3	count=1
class	ansi sequences from ||| ansi to win32	count=1
class	the python c{re} module ||| regex	count=1
arg	if the file_path ||| file_path	count=1
module	working ||| _vendor pkg_resources	count=4
class	one for each distributionpath ||| cache	count=1
function	the python version in ||| python	count=1
function	for html ||| htmltags	count=1
class	might be a requirement ||| requirement	count=1
class	constructs a :class ||| session	count=1
function	urllib3 ||| urllib3	count=1
class	specifier are allowed in ||| base specifier	count=1
function	the named metadata a ||| metadata	count=1
function	[function_1] dropped and ||| [function_1] connection [function_2]	count=1
arg	if entry ||| entry	count=1
module	an item to ||| packages urllib3 packages	count=1
module	c{pattern} and c{flags} ||| _vendor	count=1
function	unarchiving ||| archive	count=1
module	given http ||| requests	count=1
arg	[arg_1] fdst ||| [arg_1] [arg_2]	count=1
class	this address ||| ipv6address	count=1
function	from the children of ||| child	count=1
module	random url on ||| requests packages urllib3	count=1
arg	python ||| pattern	count=1
module	same as ||| packages urllib3 packages	count=1
module	the given ||| _vendor requests packages urllib3	count=1
function	authentication ||| get auth	count=1
function_arg	[function_1] iterator ||| [arg_2] [function_1]	count=2
function	the next attribute in ||| attribute	count=1
function	the path [function_2] ||| [function_2] [function_1]	count=3
class	shell-like ||| manifest	count=1
module	for display under ||| core	count=1
module	repository ||| vcs	count=1
module	determines if ||| core	count=1
function	loopback address ||| loopback	count=1
arg	uri ||| uri	count=1
arg	project_name this checks index_urls ||| project_name	count=1
class	ansi sequences ||| ansi to	count=1
function	representing the ||| init	count=1
module	the archive as a ||| _vendor distlib _backport	count=3
function	link_path ||| from dir	count=1
function	helpful [function_2] ||| req deduce [function_1] [function_2]	count=1
function	a string containing ||| string	count=1
module	named field returns ||| requests packages	count=1
module	always returns [module_2] ||| [module_2] [module_1]	count=1
function	[function_1] version ||| [function_1] [function_2]	count=6
arg	an ||| version	count=1
function	if the address is ||| is	count=1
function	see ||| packb	count=1
function	a suitable command ||| command	count=1
arg	[arg] see :class ||| o [arg]	count=1
module_class	given [class_2] ||| [module_1] [class_2]	count=1
function	schemes ||| scheme	count=1
function	file [function_2] ||| [function_1] [function_2]	count=1
function	file return the ||| file	count=1
class	hash of the possibly ||| hash	count=1
module	a string or ||| _vendor pkg_resources	count=1
module	decorator that defines __unicode__ ||| _vendor requests packages	count=1
class	prefix ||| ipaddress base	count=1
arg	the destination location ||| location	count=1
arg	manifest at path or ||| path	count=1
arg	sockets or optionally ||| socks	count=3
function	master working ||| master working	count=2
function	the children of the ||| child	count=1
class	any ansi [class_2] ||| [class_2] [class_1]	count=1
function	after [function_2] ||| [function_1] [function_2]	count=2
arg	header value ||| header	count=1
function	metadata resource as list ||| metadata	count=1
function	codename ||| codename	count=1
function	[function_1] children of ||| [function_1] [function_2]	count=1
arg	into ||| download_dir	count=1
module	a list of distributions ||| _vendor distlib	count=2
function	new timeout from ||| from	count=1
arg	port [arg_2] ||| [arg_1] [arg_2]	count=1
arg	[arg_1] resource ||| [arg_2] [arg_1]	count=2
function	register a file ||| register	count=1
class	explanation ||| regex	count=1
module	python c{re} ||| _vendor	count=1
arg	of events to ||| fileobj events	count=1
module	return ||| _backport	count=2
function_arg	[function_1] filename to ||| [function_1] [arg_2]	count=5
function	[function_1] path ||| [function_1] file [function_2]	count=1
arg	turn ||| ip_str	count=1
arg	called from user ||| conn	count=1
class	tell whether or not ||| base	count=1
function	[function_1] control backend ||| [function_2] [function_1]	count=2
arg	the given major minor ||| major minor	count=1
module	our wrapped stream stripping ||| colorama	count=1
arg	src ||| src	count=3
module_class	[module_1] util ||| [module_1] [class_2]	count=1
function_arg	[function_1] importer_type ||| [function_1] [arg_2]	count=3
arg	explanation of ||| pattern	count=1
class	stream or ||| input stream	count=1
arg	rev_options ||| rev_options	count=1
function_arg	[function_1] string s ||| [function_1] [arg_2]	count=1
module	by remove() ||| req	count=1
module	be called ||| packages urllib3 util	count=1
module	:class ||| _vendor	count=1
function	the threads to ||| threads	count=1
function	decoder is ||| decoder	count=1
function	extract ||| extract	count=1
class	passed to ||| regex	count=1
module	operation should ||| _backport	count=1
class	tarinfo object for member ||| tar file	count=1
module	of a ||| _vendor distlib _backport	count=2
function	return a pkg_resources ||| get dist	count=1
function	hash algorithm ||| hash	count=1
function_arg	a options [arg_2] ||| [function_1] [arg_2]	count=1
class	by ||| path	count=1
module	options ||| _vendor requests	count=1
function	a multipart ||| make multipart	count=1
function	[function_1] in ||| [function_1] [function_2]	count=1
module	an pyopenssl ||| packages	count=1
function	headers ||| header	count=1
function	lsb_release command ||| lsb	count=1
arg	callback ||| callback existing	count=1
function	is identical to ||| check	count=1
function	parsed link headers proxies ||| parse header links	count=1
function	number ||| number	count=2
arg	element and ||| element	count=1
function	is a commit ||| ref commit	count=1
function	return the [function_2] ||| [function_1] [function_2]	count=7
function	makefile ||| makefile	count=1
function	return true if ||| is	count=1
function	socket makefile from ||| makefile	count=1
class	the linux distribution ||| _vendor linux distribution	count=1
arg	characters ||| characters	count=1
module	the c{re compile()} function ||| _vendor	count=1
arg	tempname this ||| tempname filename	count=1
function_arg	yield [arg_2] ||| [function_1] lines [arg_2]	count=1
class	string ||| base	count=1
function	from ||| release	count=2
function	file return ||| file	count=1
function	all distribution names known ||| all distribution names	count=1
module	decorator that defines ||| requests packages	count=1
function	close all ||| close	count=1
class	of me for display ||| hash error	count=1
class	a summary of ||| error	count=1
function	the paths in the ||| paths	count=1
class	perform an http ||| httpconnection	count=1
class	should ||| stream	count=1
module	the _stream object no ||| _backport	count=1
module	match and construct a ||| _vendor	count=1
function	is reserved ||| is	count=2
class	a registered ||| selector	count=1
function	domains in the ||| domains	count=2
module	passed in ||| packages urllib3	count=1
class	the metadata fields ||| legacy metadata	count=2
class	module for ||| regex	count=1
module	add ||| requests packages urllib3 packages	count=1
module	number to a ||| distlib	count=1
arg	of bytes matching ||| bytes	count=1
function_arg	verifies that [arg_2] ||| [function_1] [arg_2]	count=3
function	checks whether ||| fp	count=1
class	for parsed ||| parse	count=1
function	the longhand version ||| exploded	count=1
function	for os path samefile ||| samefile	count=1
module	to ||| _vendor distlib	count=1
module	same as for ||| packages urllib3 packages	count=1
function	file cache ||| url to file	count=1
function	[function_1] io ||| [function_1] [function_2] events	count=2
function	[function_1] point ||| [function_1] [function_2]	count=1
function	insert an element from ||| set insert from table	count=1
function	working [function_2] ||| [function_2] [function_1]	count=3
function	iterable passed in ||| write	count=1
arg	fields and [arg_2] ||| [arg_2] [arg_1]	count=4
function	function to format ||| format	count=1
function	close ||| close	count=3
class	c{parseresults} object ||| parse results	count=1
class	tarball or if ||| link	count=1
function_arg	network [function_1] [arg_2] ||| [function_1] [arg_2]	count=18
arg	compile()} function as-is see ||| pattern	count=1
function	[function_1] element from ||| [function_2] [function_1]	count=3
class	a working ||| working	count=1
arg	accessible via [arg_2] ||| [arg_2] [arg_1]	count=2
function	distribution [function_2] ||| [function_1] [function_2]	count=20
arg	[arg_1] targetpath if ||| [arg_1] [arg_2]	count=1
function	find the target member ||| find link target	count=1
module	the _stream ||| _vendor distlib _backport	count=1
function	all distribution [function_2] ||| [function_1] [function_2]	count=2
function	check ||| check download	count=1
function	parse a single ||| parse	count=1
module	a decorator that defines ||| requests packages	count=1
function	the minor version ||| minor version	count=2
module	on the ||| _vendor requests packages urllib3	count=1
function	var ||| get flag	count=1
function	[function_1] sort ||| [function_2] [function_1]	count=1
function_arg	[function_1] key/value ||| [arg_2] [function_1]	count=1
function	strip ||| strip	count=1
function	current column ||| col	count=1
class	ipv6 address ||| base v6	count=2
function	should a filename ||| should	count=1
module	value of ||| packages urllib3	count=1
module_class	[module_1] [class_2] tarfile is opened for ||| [module_1] _backport [class_2] next	count=1
arg	index in the list ||| index	count=1
function	merge ||| merge	count=1
function	header block sequence ||| header	count=1
class	pooled connection if one ||| httpconnection pool	count=1
function	file located in the ||| distinfo	count=1
class	changes previously made by ||| path	count=1
module	for ||| _vendor distlib	count=3
function	previous attempt >= stop_max_attempt_number ||| attempt	count=1
function	is not anything ||| is ref	count=1
arg	potentially flush the decoder ||| decode_content flush_decoder	count=1
function	return prefix length ||| prefix	count=2
arg	versions ||| versions	count=1
module_class	[module_1] [class_2] ||| [module_1] request [class_2]	count=1
class	standard formatter ||| indenting formatter	count=1
arg	[arg_1] and scheme ||| [arg_1] [arg_2]	count=1
function	current for ||| current	count=1
class	point groups ||| point	count=1
function	from a [function_2] ||| [function_2] [function_1]	count=3
function	it is not anything ||| is	count=1
function	prefix length ||| prefix	count=4
function	a download url for ||| to download info	count=1
module	return ||| core	count=1
function	[function_1] domains in ||| [function_1] [function_2]	count=4
function	of tree ||| tree	count=1
function	key associated with ||| key	count=1
function	for [function_2] ||| [function_1] [function_2] events	count=1
class	distributionpath ||| cache	count=1
arg	args into ||| args	count=1
module_class	by [class_2] ||| [class_2] [module_1]	count=1
function	to insert ||| set insert	count=1
class	a network ||| network	count=1
module	module for ||| _vendor	count=1
function	list all ||| list	count=2
module	same as ||| requests packages urllib3 packages	count=1
module	one for each distributionpath ||| _vendor distlib	count=1
function	'characters' ||| chars until	count=1
module	a tag ||| _vendor	count=1
module_class	[module_1] [class_2] for reading ||| [module_1] _backport [class_2]	count=1
module	return a summary of ||| core	count=1
arg	path or return a ||| path	count=1
class	[class_1] object ||| [class_2] [class_1]	count=4
function_arg	string [arg_2] ||| [function_1] [arg_2]	count=3
module	and a ||| distlib	count=1
function_arg	makefile from [arg_2] ||| [function_1] [arg_2]	count=1
arg	entries (default=sys path) ||| entries	count=1
arg	a fallback ||| fallback	count=1
module	a prefix and a ||| _vendor distlib	count=1
function	edge from distribution ||| edge	count=1
arg	[arg_1] object fdst ||| [arg_2] [arg_1]	count=2
module	for options ||| msgpack	count=1
function	atime mtime flags ||| copystat	count=1
module	based on the ||| packages	count=1
class	the stream or ||| stream	count=1
arg	the working_set to ||| working_set	count=1
function	and optionally converting ||| convert	count=1
arg	a file's [arg] of the ||| [arg]	count=1
arg	tarinfo object ||| tarinfo fileobj	count=2
function	next attribute ||| attribute	count=1
module	prints only a ||| _vendor distlib	count=1
arg	path or ||| path	count=1
class	from [class] if they ||| [class]	count=1
class	to the ||| regex	count=1
arg	function for syscalls ||| func	count=1
arg	into a bitwise netmask ||| cls prefixlen	count=1
module	with a ||| distlib	count=1
function	context ||| context	count=1
function	timeout? will raise a ||| raise	count=1
module	be called to ||| packages urllib3 util	count=1
module	create a zip ||| _vendor distlib	count=1
class	[class_1] results ||| _vendor [class_1] [class_2]	count=1
module	the value of a ||| distlib	count=1
module	stream ||| distlib _backport	count=3
function	represent a list ||| list	count=1
arg	string s ||| s	count=1
module	a [module] subcommand ||| [module]	count=1
arg	[arg_1] object ||| [arg_2] [arg_1]	count=3
function	the abi [function_2] ||| [function_2] [function_1]	count=1
class	store of pools ||| pool	count=1
module	points [module] that ||| [module]	count=1
module	that ||| requests packages	count=1
module	object and ||| requests	count=1
module	object no ||| distlib _backport	count=1
arg	called ||| tarinfo	count=1
arg	one chunk of the ||| final	count=1
function	[function_1] a digest ||| [function_1] [function_2]	count=1
arg	newparent ||| newparent	count=1
arg	of events to monitor ||| fileobj events	count=1
function	parse a distro ||| parse distro	count=2
function	[function_1] user agent ||| [function_1] [function_2]	count=3
function	encode ||| encode	count=2
function	a specific [function] in the ||| match only at [function]	count=1
function	whether a file // ||| dir url	count=1
module	packer for ||| msgpack	count=1
function	:class request ||| request	count=1
class	c{re compile()} ||| regex	count=1
function	key ||| key	count=2
arg	download_dir ||| download_dir	count=1
module	make a ||| _vendor distlib	count=4
function_arg	[function_1] a name ||| [arg_2] [function_1]	count=4
function	for defining [function] ||| match [function] at	count=1
function	of a file ||| of file	count=3
arg	element and its child ||| element	count=1
function	converts a dnsname ||| dnsname	count=1
function	insert ||| set insert	count=1
module	value to ||| packages urllib3	count=1
module	a list of ||| _vendor	count=2
class	a registered file ||| selector	count=1
arg	refnode ||| refnode	count=1
function_arg	[function_1] string ||| [function_1] [arg_2]	count=1
arg	to lists of allowed ||| allowed	count=1
function	list of integers ||| list	count=1
class	of ||| regex	count=1
class	the changes previously made ||| uninstall	count=1
function	return the file cache ||| url to file	count=1
function	as a child of ||| append child	count=1
function	return ||| get	count=41
class	made ||| path set	count=1
arg	and last ||| last	count=1
arg	fields ||| fields	count=3
class	can_add() it ||| environment	count=1
arg	number of ||| number	count=1
function	prefix [function_2] ||| [function_2] [function_1]	count=5
module	which ||| distlib	count=1
module	returns a tuple path ||| distlib	count=1
function	computing the current backoff ||| backoff time	count=1
function	encode parameters in a ||| encode params	count=1
function	path for ||| path	count=1
function_arg	uninstall [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] the path ||| [arg_2] [function_1]	count=7
function	the type or class ||| type	count=1
module	create a zip file ||| distlib	count=1
module	returns an ||| _vendor requests	count=1
function	parse a single entry ||| parse	count=1
arg	each ||| noarch platform impl	count=1
function_arg	cache path [arg_2] ||| [function_1] [arg_2]	count=1
class	linux distribution as ||| linux distribution	count=3
function	give an error ||| error	count=1
module	or sequence ||| pkg_resources	count=1
function	are passed to the ||| init	count=1
module	posting to an ||| _vendor distlib	count=1
class	hg ||| mercurial	count=1
function	[function_1] domains in ||| [function_2] [function_1]	count=4
function	data ||| copyfile	count=1
module	an ||| _vendor	count=2
function_arg	digest [arg_2] ||| [function_1] [arg_2]	count=4
function	the prefix length into ||| from prefix	count=1
module	passed to the c{re ||| _vendor	count=1
module	started so we should ||| _vendor requests packages	count=1
function	c{pattern} and ||| init	count=1
arg	name for [arg_2] ||| [arg_2] [arg_1]	count=2
function	the subnets ||| subnets	count=1
function	get a ||| get	count=5
class	from [class] ||| [class]	count=1
module	_stream object no operation ||| _backport	count=1
class	[class_1] distribution as ||| _vendor [class_1] [class_2]	count=3
function	passed ||| write	count=1
function	same leading ||| has leading	count=1
function	sends a delete request ||| delete	count=1
class	in the jar ||| jar	count=2
module	string or [module_2] ||| [module_2] [module_1]	count=1
function	prefix length from a ||| prefix from prefix	count=1
class	the changes previously made ||| path	count=1
function	is not anything else ||| is	count=1
module	been started ||| requests packages urllib3 util	count=1
function_arg	yield distributions [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	register [arg_2] ||| [function_1] [arg_2]	count=1
function	download url for ||| to download info	count=1
function	command for ||| command	count=1
function	an explanation ||| init	count=1
arg	a name which might ||| cls name	count=1
function	find distribution best matching ||| best match	count=1
function	wait for them ||| wait	count=1
function_arg	[function_1] non-empty/non-comment ||| [arg_2] [function_1]	count=1
function	python c{re} ||| init	count=1
module	a single variable ||| _vendor distlib _backport	count=1
function	insert an [function_2] ||| [function_1] [function_2]	count=2
function	close the _stream object ||| close	count=1
function	add it back ||| add	count=1
module	for an encoding ||| webencodings	count=1
function	the minor ||| minor	count=1
arg	download_dir for previously downloaded ||| download_dir	count=1
function_arg	[function_1] [arg_2] ||| [function_1] dict [arg_2]	count=2
function	dns pointer name for ||| pointer	count=1
function	connection is dropped and ||| is connection dropped	count=1
class	made ||| uninstall path set	count=1
function	insert ||| insert option	count=1
function	specific [function] in ||| match only at [function]	count=1
arg	link points to a ||| link	count=1
function	io ||| io	count=1
function	object ||| packb	count=1
class	to the finder this ||| finder	count=1
arg	python ||| fmt	count=1
function	the user [function_2] ||| [function_1] [function_2]	count=1
function	c{re compile()} function as-is ||| init	count=1
function_arg	the children [arg_2] ||| [arg_2] [function_1]	count=1
module	ssl certificate [module] ||| [module]	count=1
arg	a numeric ||| cls prefixlen_str	count=1
arg	called with [arg] incompatible wheel-version ||| [arg]	count=1
arg	a resource ||| name relative_path	count=2
function_arg	the path [arg_2] ||| [arg_2] [function_1]	count=2
class	as-is see the ||| regex	count=1
class	c{re} module for ||| regex	count=1
module	all urllib3 ||| urllib3	count=1
function	[function_1] entries ||| [function_2] [function_1]	count=5
function	resolve ||| resolve	count=1
module	as-is ||| _vendor	count=1
module	the object as a ||| _vendor distlib _backport	count=2
module	class is ||| _vendor	count=1
function	the current backoff ||| backoff time	count=1
function	return url ||| get url	count=2
class	pooled connection if ||| httpconnection pool	count=1
class	stream ||| htmlunicode input stream	count=3
function	function ||| init	count=1
function	importer ||| file ns handler	count=1
function	the current platform ||| platform	count=1
arg	mode to a ||| mode	count=1
module	on ||| packages	count=4
function	[function_1] from a ||| [function_1] [function_2]	count=2
module	pack [module] o and ||| [module]	count=1
function	the python version ||| requires python	count=1
class	to an ||| link	count=1
arg	must be ||| redirect	count=1
function	headers from a ||| from	count=1
function	parsing fails at this ||| set fail	count=1
arg	working_set to see ||| working_set	count=1
arg	interpret a [arg] and ||| [arg]	count=1
function	[function_1] proxy for ||| [function_1] [function_2]	count=1
arg	returns a path ||| path	count=1
arg	and scheme ||| scheme	count=1
arg	set of events to ||| fileobj events data	count=1
arg	appropriate encoding of fields ||| fields	count=1
function	[function_1] list of ||| [function_2] [function_1]	count=2
function	sends a options ||| options	count=1
function	names ||| names	count=1
function_arg	a hook [arg_2] ||| [arg_2] [function_1]	count=4
function	is installed in ||| in	count=1
module	return ||| _vendor msgpack	count=2
function_arg	url the path ||| url path	count=2
function	a specific [function] in ||| match only at [function]	count=1
function	the requirement that triggered ||| requirement name	count=1
function	locking the ||| am locking	count=1
module	a decorator that ||| _vendor requests packages	count=1
arg	a subscriber [arg_2] ||| [arg_2] [arg_1]	count=4
module	bytes see :class ||| msgpack	count=1
function	[function_1] download ||| [function_2] [function_1]	count=2
module	operation should be ||| _backport	count=1
class	this points ||| link	count=1
function	the file cache path ||| url to file path	count=1
module	that defines __unicode__ ||| _vendor requests packages	count=1
function	minor version of ||| minor version	count=2
arg	target ||| target	count=1
arg	headers ||| headers	count=3
class	must be a ||| working set	count=1
function	write the ||| write	count=5
module	the _stream ||| _vendor distlib	count=1
function	the prefix length ||| prefix	count=1
function	parsing fails at this ||| fail	count=1
arg	a bitwise netmask args ||| cls prefixlen	count=1
function	from a cookiejar ||| from cookiejar	count=3
function	path to a ||| path to	count=1
function	true if ||| is	count=1
function	ensure that the parent ||| ensure	count=1
function	sleep between ||| sleep	count=1
module	given ||| _vendor requests packages urllib3 util	count=2
class	directory ||| directory	count=1
module	packer ||| _vendor	count=1
function	of [function_2] ||| [function_1] [function_2]	count=1
class	whether ||| base	count=1
module	a considered ||| core	count=1
module	python ||| _vendor	count=1
module	_stream object ||| distlib	count=1
module	an ||| _vendor pkg_resources	count=2
function	exported [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] working ||| [function_2] [function_1]	count=3
module	if the given ||| requests packages	count=1
arg	are passed to ||| pattern	count=1
arg	fields based ||| fields	count=1
module	decorator that defines ||| requests packages urllib3	count=1
function	candidate for a download ||| to download info	count=1
function	as a nested list ||| as list	count=1
arg	separator ||| instring maxsplit includeseparators	count=1
module	are passed to ||| _vendor	count=1
arg	a-z [arg] mapped to ||| [arg]	count=1
function_arg	check [arg_2] ||| [function_1] [arg_2]	count=4
module	object no operation should ||| _backport	count=1
function_arg	[function_1] the data ||| [arg_2] [function_1]	count=1
function	package finder ||| package finder	count=1
arg	a given url from ||| url raise_errors	count=1
arg	importer_type is the type ||| importer_type	count=1
function	true if ||| root is	count=1
class	as ||| base	count=1
arg	dst ||| dst	count=3
module	locator ||| _vendor distlib	count=1
function	the tree ||| tree	count=1
function	prefix ||| from prefix	count=2
arg	name ||| name mode	count=1
module	is ||| pkg_resources	count=1
class	metadata provider from a ||| egg metadata	count=1
arg	a packagefinder ||| find_links index_urls allow_all_prereleases trusted_hosts	count=1
arg	url must be absolute ||| url redirect	count=1
arg	url ||| data url	count=1
function_arg	[function_1] python ||| [arg_2] [function_1]	count=4
function	has been a head-request ||| is response to head	count=1
class	stream if internal buffer ||| stream	count=1
module	from an ||| distlib	count=1
module	[module] not ||| [module]	count=1
arg	port and ||| port	count=1
function_arg	return absolute location [function_1] [arg_2] ||| _vendor pkg_resources resource manager [function_1] path [arg_2]	count=3
arg	object for resource_name ||| manager resource_name	count=1
arg	platform-specific postprocessing of tempname ||| tempname filename	count=1
class	return ||| event mixin	count=1
arg	given a url ||| url new_scheme	count=1
function	html source example : ||| strip htmltags	count=1
class	return a pooled connection ||| httpconnection pool	count=1
function	character in 'characters' ||| chars until	count=1
module	the value ||| packages urllib3	count=2
module	if a [module_2] ||| [module_1] [module_2]	count=8
arg	[arg_1] minor ||| darwin arches [arg_1] [arg_2]	count=4
module	parse ||| _vendor requests	count=1
function_arg	[function_1] of data ||| [function_1] [arg_2]	count=2
function	missing ||| missing	count=1
class	changes previously made ||| path set	count=1
module	has been started ||| _vendor requests packages urllib3 util	count=1
module	checks if [module_2] ||| [module_2] requests [module_1]	count=1
function_arg	[function_1] refnode ||| [function_1] node [arg_2]	count=1
arg	[arg_1] must be ||| [arg_2] [arg_1]	count=1
function	return an installationcandidate ||| package	count=1
function	the url to ||| url	count=1
arg	url ||| url raise_errors	count=1
function	same leading ||| leading	count=1
module	c{parseresults} ||| _vendor	count=1
function	the threads to terminate ||| threads	count=1
class	a registered file object ||| selector	count=1
function	a child ||| append child	count=1
function_arg	2 httplib [arg_2] ||| [arg_2] [function_1]	count=2
class	all ||| linux distribution	count=1
function	html ||| htmltags	count=2
module	or [module_2] ||| [module_1] [module_2]	count=1
function	update ||| update	count=3
arg	name and [arg_2] ||| [arg_2] [arg_1]	count=1
class	distribution as a tuple ||| distribution	count=1
class	return ||| ipaddress base	count=1
class	path ||| path	count=1
function	[function_1] [function_2] ||| [function_1] fp [function_2]	count=2
arg	used ||| url	count=1
arg	an iterable of items ||| iterable	count=1
module	like ||| packaging	count=3
function	[function_1] command ||| [function_2] [function_1]	count=1
function_arg	before refnode in ||| before node refnode	count=1
module	packed bytes ||| msgpack	count=1
module	is the same ||| _vendor requests packages urllib3 packages	count=1
class	location of the exception ||| parse base exception	count=1
module	previously made by remove() ||| req	count=1
function	deregister ||| deregister hook	count=1
class	the ||| uninstall	count=1
module	object no ||| _vendor distlib	count=1
arg	of characters ||| characters	count=1
module	object as ||| _backport	count=1
function	unicode ||| text	count=1
function_arg	list of [arg_2] ||| [function_1] [arg_2]	count=1
module	should ||| _vendor	count=1
class	*requirement* for the ||| dependency graph	count=1
class	stream ||| htmlbinary input stream	count=1
function_arg	decodes [arg_2] ||| [arg_2] [function_1]	count=1
module	round up a ||| _vendor distlib _backport	count=1
arg	[arg_1] must ||| [arg_1] [arg_2]	count=1
arg	and path ||| path	count=2
function_arg	link_path [arg_2] ||| [arg_2] [function_1]	count=1
module	and disable the ||| _vendor requests	count=1
function	[function] queued ||| [function]	count=1
class	address as a ||| base	count=1
function_arg	string to [arg_2] ||| [function_1] date [arg_2]	count=1
function	return a readable file-like ||| get resource stream	count=1
function	a hook ||| dispatch hook	count=1
arg	from a ||| cj	count=1
function	return the path for ||| path	count=1
module	create a ||| distlib _backport	count=1
arg	the needed config var ||| var	count=1
arg	passed to the c{re ||| pattern	count=1
module	given [module_2] ||| [module_2] [module_1]	count=5
function	longhand version ||| exploded	count=1
function	mapping of file objects ||| map	count=1
function	config [function_2] ||| [function_1] [function_2]	count=4
module	a set of ||| distlib	count=1
function	stale ||| stale	count=1
function	from a python ||| from	count=1
module	decorator that defines __unicode__ ||| requests	count=1
module	and ||| _vendor pkg_resources	count=2
class	scripts from ||| script maker	count=1
module_class	[module_1] this distribution ||| [module_1] [class_2]	count=2
function_arg	path to [arg_2] ||| [function_1] [arg_2]	count=2
class	parameters c{pattern} and c{flags} ||| regex	count=1
arg	[arg] see ||| o [arg]	count=1
arg	appropriate encoding of fields ||| fields headers	count=1
function	[function_1] point of ||| [function_2] [function_1]	count=1
class	parser possible _update_defaults() does ||| parser	count=1
arg	an ns-package subpath for ||| path_item packagename module	count=1
class	the finder ||| finder	count=2
arg	when being redirected ||| prepared_request response	count=1
function	in [function] for ||| get [function]	count=1
function	child of the ||| append child	count=1
arg	for the url if ||| url	count=1
arg	the given url ||| url session	count=1
arg	handler ||| handler	count=1
class	me for display under ||| hash	count=1
function	a given project ||| project	count=1
module_class	[module_1] point from ||| [module_1] [class_2]	count=1
module	provides an ||| distlib	count=1
function	get a [function_2] ||| [function_1] tree [function_2]	count=1
class	a tarball or ||| link	count=1
module	check if the given ||| requests packages urllib3	count=1
module	a string that ||| distlib	count=1
class	named parse results ||| parse results	count=2
class	verify ||| package index	count=1
arg	of the current node ||| node	count=3
module	that defines ||| requests	count=1
module	e g numpy or ||| pkg_resources	count=1
module	decorator that ||| requests packages urllib3 packages	count=1
function	distribution best matching ||| best match	count=1
class	for scraping ||| simple scraping	count=1
function	file cache path ||| to file path	count=1
class	string [class] ||| encoding [class]	count=1
function	[function_1] for link-local ||| [function_2] [function_1]	count=2
module	current ||| _vendor	count=1
arg	point to url ||| url	count=1
function	key/value dictionary [function_2] ||| [function_2] [function_1]	count=3
function	add the file name' ||| add	count=1
class	of all info ||| distribution	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=3
arg	path args in order ||| path	count=1
function	1xx [function] header ||| [function]	count=1
arg	paths iterable ||| paths	count=1
function	dictionary from [function_2] ||| [function_2] [function_1]	count=1
class	the hash of ||| hash	count=1
function	if there are multiple ||| multiple	count=1
class	the stream ||| htmlunicode input stream	count=3
function	update our cached ||| update cached response	count=1
class	and c{flags} are passed ||| regex	count=1
class	this locator ||| simple scraping locator	count=1
module_class	[module_1] list of ||| [module_1] ordered [class_2]	count=1
module	that always returns ||| requests packages	count=1
module	a symlink ||| _vendor distlib _backport	count=1
module	encoding ||| _vendor	count=1
function	method of the request ||| method	count=1
function	make a ||| make	count=2
class	cache ||| resource cache	count=1
module	c{re} ||| _vendor	count=1
arg	of the given url ||| url	count=1
function_arg	add [arg_2] ||| [function_1] [arg_2]	count=8
module	summary of ||| core	count=1
module	to an ||| core	count=1
class	this locator ||| directory locator	count=1
module	distribution as a ||| _vendor	count=1
module	no operation should ||| _vendor distlib _backport	count=1
function	urls for ||| urls	count=1
module	options ||| _vendor	count=1
class	tarball ||| link	count=1
module_class	[module_1] tarinfo object ||| [module_1] _backport [class_2]	count=1
function	version ||| version	count=9
module	been [module_2] ||| [module_1] [module_2]	count=4
class	instantiation of the option ||| config option	count=1
class	of - operator ||| parser element	count=2
module_class	[module_1] repr ||| [module_1] [class_2]	count=2
arg	the user-shared data ||| multipath	count=1
function	normalize a file/dir name ||| normalize	count=1
class	the parse expression ||| parser element	count=1
module	format ||| packages urllib3	count=1
arg	tempname this ||| tempname	count=1
function	[function_1] in ||| [function_2] [function_1]	count=1
module	field returns ||| requests	count=1
function	of socket makefile ||| makefile	count=1
function	packed bytes see ||| packb	count=1
arg	is not ||| other	count=3
arg	tempname this is where ||| tempname filename	count=1
arg	an iterable of ||| iterable	count=1
module	returns a ||| _vendor distlib _backport	count=2
function_arg	[function_1] name ||| [function_1] [arg_2]	count=1
class	resource ||| resource	count=2
function	variables ||| vars	count=1
function	authentication from ||| rebuild auth	count=1
function	the record ||| installed files	count=2
function	prefix length into a ||| int from prefix	count=1
module	distributionpath ||| distlib	count=1
function	parse the cache ||| parse cache	count=3
function	the same [function_2] ||| [function_1] [function_2]	count=3
function	extract the ||| extract member	count=1
function	the file [function_2] ||| [function_1] [function_2]	count=1
class	of all ||| linux	count=1
function_arg	[function_1] path exists ||| [arg_2] [function_1]	count=1
class	a response ||| response	count=1
arg	wheel from [arg] ||| [arg] tags	count=1
module	value of a single ||| distlib _backport	count=1
module	returns a list of ||| distlib	count=2
function	new copy of ||| copy	count=1
module	see :class packer ||| _vendor msgpack	count=1
function_arg	[function_1] a string ||| [function_1] [arg_2]	count=1
arg	requires_python specifier ||| requires_python	count=1
arg	at path or ||| path	count=1
function	return the version of ||| version	count=1
module	the same ||| _vendor requests packages urllib3 packages	count=1
function	return the abi ||| get abi	count=3
module	session ||| _vendor requests	count=1
function	ssl ||| ssl	count=1
function	turn the prefix ||| from prefix	count=1
function	an installrequirement from ||| from	count=1
function	is reserved [function_2] ||| [function_2] [function_1]	count=2
function_arg	slices [arg_2] ||| [arg_2] [function_1]	count=1
module	return packed bytes see ||| _vendor msgpack	count=1
function_arg	[function_1] of path ||| [arg_2] [function_1]	count=1
function	column ||| col	count=2
function	item from [function] data source ||| [function] release	count=2
function	file // ||| dir url	count=1
function_arg	[function_1] dist to ||| [function_1] [arg_2]	count=1
module	a list ||| core	count=2
module	see if an ||| _vendor distlib	count=2
class	of ||| parse results	count=1
function_arg	[function_1] headers have ||| [function_1] [arg_2]	count=1
arg	[arg_1] path args ||| [arg_2] [arg_1]	count=2
function	containing the paths names ||| names	count=1
function	it is included ||| is	count=1
function	should we redirect ||| redirect	count=1
arg	the url ||| url	count=2
function	cache [function_2] ||| [function_1] [function_2]	count=1
class	the hg ||| mercurial	count=1
module	a ||| _vendor distlib _backport	count=28
arg	string of characters ||| characters opposite	count=1
module	same as :meth urllib3 ||| requests packages urllib3	count=1
function	prefix length from ||| prefix from prefix	count=3
function	each line if ||| list	count=1
arg	[arg_1] name ||| [arg_1] [arg_2]	count=1
function	slices of a ||| iter slices	count=1
arg	hook ||| hook	count=1
arg	[arg_1] a prefix ||| [arg_2] [arg_1]	count=4
function	the lsb_release command output ||| lsb	count=2
module	field which ||| distlib	count=1
function	split a string using ||| split	count=1
function	children ||| reparent children	count=1
module	checks if given ||| _vendor requests packages	count=1
function	a wheel ||| wheel files	count=1
function	children ||| children	count=1
module	a string like abc ||| _vendor packaging	count=1
function_arg	[function_1] bitwise netmask ||| [function_1] [arg_2]	count=1
function	if the connection is ||| is connection	count=1
module	string like abc 1 ||| _vendor packaging	count=1
class	one cookie jar over ||| cookie jar	count=1
function_arg	[function_1] req_to_install should ||| [function_1] [arg_2]	count=1
arg	encoding of fields ||| fields headers	count=1
class	for the different directives ||| cache controller	count=1
function_arg	[function_1] dist if ||| [arg_2] [function_1]	count=1
function	sends a delete ||| delete	count=1
function	[function] tarinfo ||| [function]	count=1
module_class	[module_1] [class_2] ||| [module_1] ordered [class_2]	count=8
module	from an ||| _vendor distlib	count=1
class	zipfile ||| zip	count=1
module	_stream object ||| _vendor distlib _backport	count=1
module	for options ||| _vendor	count=1
class	selector this ||| base selector	count=1
function	distro release file ||| distro release file	count=3
arg	fsrc [arg_2] ||| [arg_2] [arg_1]	count=1
function	installed ||| installed	count=1
class	requirements needed for this ||| distribution	count=1
arg	of path_item ||| path_item	count=1
function	read through ||| load	count=1
arg	of events ||| fileobj events	count=1
function	host ||| host	count=1
function	and unarchiving ||| get archive	count=1
arg	recursively delete ||| ignore_errors onerror	count=1
arg	the request ||| request	count=1
function	object is ||| dist is	count=1
function	[function_1] distribution files ||| [function_1] [function_2]	count=1
class	a summary of me ||| error	count=1
module	is normally ||| distlib	count=1
function_arg	httplib message ||| httplib cls message	count=1
module	of a single ||| _vendor distlib _backport	count=1
arg	to the scheme ||| scheme	count=1
function_arg	[function_1] from a ||| [function_1] [arg_2]	count=4
function	from [function] ||| [function] release	count=2
class	response as an ||| response	count=1
function	located under the ||| distinfo file	count=1
function	[function_1] children ||| [function_2] [function_1]	count=1
function	[function_1] for link-local ||| [function_1] [function_2]	count=2
module	get the value to ||| requests packages urllib3	count=1
function	current column within a ||| col	count=1
function	prefix length ||| ip int from prefix	count=1
arg	sequences in a uri ||| uri	count=1
module	given ||| requests packages urllib3	count=3
module	string like abc ||| packaging	count=1
function_arg	proxy for [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	treewalker [arg_2] ||| [arg_2] [function_1]	count=1
class	each distributionpath ||| cache	count=1
function_arg	[function_1] each version ||| [arg_2] [function_1]	count=2
function	from given ||| from	count=1
module	the same as ||| requests packages urllib3 packages	count=1
module	requests ||| _vendor requests	count=1
class	the named parse ||| parse	count=1
class	option parser ||| option parser	count=1
arg	targetpath ||| targetpath	count=8
arg	for resource_name ||| resource_name	count=1
arg	string src ||| src	count=1
module	the accept and ||| requests	count=1
module	:meth urllib3 ||| urllib3	count=1
function	[function_1] from the ||| [function_2] [function_1]	count=8
function	read exports data from ||| read exports	count=1
function	this ||| is	count=1
class	when making the final ||| httpadapter	count=1
module	field if present or ||| pkg_resources	count=1
function	waits for ||| for	count=1
class	file if ||| file object	count=1
arg	when being redirected we ||| prepared_request response	count=1
module	see :class packer for ||| _vendor msgpack	count=1
class	httpresponse ||| httpresponse	count=1
class	given parse expression ||| parser element	count=1
module	value to use ||| packages urllib3 util	count=1
module	the same as for ||| requests packages urllib3 packages	count=1
function	write the [function_2] ||| [function_1] [function_2]	count=3
function_arg	a proxy [arg_2] ||| [function_1] [arg_2]	count=2
function	items [function_2] ||| [function_2] [function_1]	count=12
arg	of fields based on ||| fields	count=1
module	should ||| _backport	count=1
function	full entry map ||| entry map	count=2
class	c{pattern} and c{flags} are ||| regex	count=1
function_arg	[function_1] group ||| [arg_2] [function_1]	count=2
function	of the current position ||| position	count=1
function	file cache ||| to file	count=1
function	in 'characters' ||| chars until	count=1
class	a metadata provider from ||| egg metadata	count=1
arg	for archive_name [arg] ||| archive_name [arg]	count=3
arg	install ||| name req wheeldir user	count=1
module	host ||| packages urllib3	count=1
function_arg	version [arg_2] ||| [function_1] [arg_2]	count=2
class	[class_1] dictionary ||| [class_2] [class_1]	count=2
function	to insert ||| insert	count=1
function_arg	add a [arg_2] ||| [function_1] event [arg_2]	count=1
class	[class] configurations ||| [class]	count=3
module	certificate [module] should ||| [module]	count=1
class	stream if a whole ||| stream	count=1
function	select a proxy ||| select proxy	count=2
function	from a ||| from	count=7
function	gz/tar bz2 ||| tarfile	count=1
function	the exported ||| exported	count=1
function	resource finder for ||| finder	count=1
arg	to the c{re ||| pattern	count=1
function	item from [function] data ||| [function] release	count=2
class	record ||| installed	count=1
arg	download_dir ||| link download_dir hashes	count=1
function	subpath ||| handle ns	count=1
module	a file in ||| distlib	count=1
module	linux distribution as ||| _vendor	count=1
module	prefix and a ||| distlib	count=1
arg	of tempname ||| tempname	count=1
module	of a symlink ||| distlib	count=1
function	returns a new copy ||| copy	count=1
arg	allowed ||| allowed	count=1
module	checks ||| packages urllib3 util	count=2
function	parsed ||| parse	count=1
function	timeout from [function_2] ||| [function_1] [function_2]	count=1
function_arg	load a [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] path ||| [function_1] [arg_2]	count=9
function_arg	bz2 [arg_2] ||| [function_1] [arg_2]	count=3
arg	directory tree into ||| directory	count=1
function	version of the ||| version	count=2
function	the parameters c{pattern} and ||| init	count=1
module	take an object and ||| requests	count=1
function	add the ||| add	count=2
class	tree ||| tree	count=1
arg	supports optional domain and ||| name default domain	count=1
function	open bzip2 compressed ||| bz2open	count=1
module	a dictionary ||| _vendor distlib	count=3
class	record ||| installed distribution	count=1
function	a requirement [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] the domains ||| [function_2] [function_1]	count=3
module	normally ||| _vendor	count=1
arg	a string ||| string	count=1
function	over the record ||| installed files	count=1
function	convert a path to ||| to	count=1
function	the same host as ||| same host	count=1
class	selector keys ||| selector	count=1
function	[function_1] paths in ||| [function_2] [function_1]	count=2
arg	from a ||| info	count=1
function	suitable download ||| process download	count=1
function	add an [function_2] ||| [function_1] [function_2]	count=4
module	as :meth urllib3 ||| packages urllib3	count=1
function	version field if ||| version	count=1
module	ordered ||| requests packages urllib3 packages	count=1
module_class	a [class_2] ||| [module_1] _backport tar [class_2]	count=2
arg	destination location ||| filename location	count=1
function	a tuple of version ||| version	count=1
class	iterates over the response ||| response	count=1
function	nt ||| init non posix	count=1
function	topological sort of the ||| topological sort	count=1
arg	available installationcandidate [arg] ||| [arg]	count=3
function	return the key associated ||| get key	count=1
function	a list of integers ||| from list	count=1
module	from a ||| _vendor distlib _backport	count=1
module_class	returns a [class_2] ||| [module_1] urllib3 httpconnection [class_2]	count=1
module	must be called to ||| packages urllib3 util	count=1
module	or none otherwise ||| pkg_resources	count=1
function_arg	prefix length [arg_2] ||| [arg_2] [function_1]	count=1
module	which ||| _vendor distlib	count=3
function	get a ||| get conn	count=1
arg	src ||| src dist	count=1
function	ignore ||| ignore	count=1
function	the next attribute ||| attribute	count=1
function	server ||| read error	count=1
function	download ||| to download	count=1
module	of the current linux ||| _vendor	count=1
arg	tell if the target ||| target	count=1
function	from ||| prefix from	count=1
function_arg	[function_1] paths ||| [arg_2] [function_1]	count=1
module	the value to ||| requests packages urllib3 util	count=1
module	of a single ||| distlib _backport	count=1
class	changes previously made ||| path	count=1
arg	[arg] is ||| source [arg]	count=3
class	[class_1] operator ||| [class_2] [class_1]	count=3
function	from the ||| from	count=1
function_arg	children of [arg_2] ||| [function_1] [arg_2]	count=1
module	a given ||| _vendor requests packages urllib3 util	count=1
module	pooled ||| packages urllib3	count=1
module	a tuple ||| distlib	count=3
function	<==> iter ||| iter	count=1
function	[function_1] distribution ||| [function_1] [function_2] full_distribution_name	count=4
module	packer for options ||| msgpack	count=1
function	find all ||| find all	count=1
arg	function for syscalls that ||| func	count=1
function	the prefix length ||| int from prefix	count=1
function	proxy for the ||| proxy	count=1
function	archive ||| archive	count=1
function	[function_1] distro release ||| [function_2] [function_1]	count=1
module	field returns ||| _vendor requests packages urllib3	count=1
function	[function_1] set and ||| [function_2] [function_1]	count=4
function	url of the ||| url	count=1
class	implementation of - operator ||| parser element	count=1
arg	extended or ||| pax_headers	count=1
function	key/value dictionary ||| dict	count=1
function	packed bytes ||| packb	count=1
function	check if tarfile is ||| check	count=1
function	is [function_2] ||| [function_2] [function_1]	count=22
arg	given major ||| major	count=1
function	[function_1] loopback ||| [function_2] [function_1]	count=1
class	the exception ||| parse base exception	count=1
class	deregister ||| hooks mixin	count=1
function_arg	bz2 filename ||| tarfile filename	count=1
function	get [function_2] ||| [function_1] [function_2]	count=4
class	file and look for ||| file	count=1
function	return a ||| get resource stream	count=1
class	an explanation ||| regex	count=1
function_arg	decodes a [arg_2] ||| [arg_2] [function_1]	count=1
module	given http method should ||| requests	count=1
function	[function_1] closed ||| [function_2] [function_1]	count=2
class	parsed ||| parse results	count=2
module	of a symlink or ||| _vendor distlib _backport	count=1
function	with authentication [function_2] ||| [function_2] [function_1]	count=1
arg	filename to ||| filename	count=2
function	[function_1] compatible with ||| [function_2] [function_1]	count=1
arg	optional domain and path ||| domain path	count=1
class	interacting with pypi ||| package index	count=1
module	for posting to an ||| distlib	count=1
function	for html [function_2] ||| [function_2] [function_1]	count=2
class	one ||| cache	count=1
function	version is ||| check version	count=1
module	operation ||| _vendor distlib	count=1
class	option ||| config option	count=1
function	[function_1] user agent ||| [function_2] [function_1]	count=3
function	path samefile ||| samefile	count=1
function_arg	[function_1] a distribution ||| [function_1] [arg_2]	count=1
function	prefix length into ||| ip int from prefix	count=1
function	update an already-existing repo ||| update	count=1
function	raise addressvalueerror ||| optional	count=1
module	convert an ||| _vendor distlib	count=1
arg	characters from the ||| characters	count=1
class	from the file if ||| ex file	count=1
function	is the named resource ||| resource	count=2
class	- operator ||| parser element	count=2
arg	of tempname this is ||| tempname filename	count=1
module	named field returns ||| requests	count=1
arg	iterate over ||| slice_length	count=1
module	or none otherwise ||| _vendor pkg_resources	count=1
arg	need to be updated ||| dest rev_options	count=1
module	of a symlink or ||| _vendor distlib	count=1
module	a given ||| _vendor requests packages	count=1
function	computing the current backoff ||| get backoff time	count=1
function_arg	to python ||| to datetime fmt	count=1
function	an element from ||| from table	count=2
module	value of a single ||| _vendor distlib _backport	count=1
class	this connection pool ||| httpconnection pool	count=1
class	scraping ||| simple scraping	count=1
function	it is not ||| is ref	count=1
module_class	by [class_2] ||| [module_1] [class_2] init user pw	count=1
arg	url must be ||| url redirect	count=2
arg	targetpath according to ||| targetpath	count=2
function	return a pkg_resources distribution ||| get dist	count=1
function	urls for identity ignoring ||| urls	count=1
function	parse a html ||| parse	count=1
class	the stream up ||| input stream	count=1
module	the same as ||| packages urllib3 packages	count=1
module	summary of me ||| core	count=1
function	a timeout? will raise ||| raise	count=1
module	recursively generate a list ||| distlib	count=2
arg	of a string ||| string	count=1
module	generate a list of ||| _vendor distlib	count=2
function	from the lsb_release command ||| lsb	count=1
class	hash of ||| hash missing	count=1
arg	compile()} ||| pattern	count=1
function	[function_1] distro ||| [function_2] [function_1]	count=1
module	by ||| contrib	count=1
function_arg	[function_1] url if ||| [arg_2] [function_1]	count=3
module	returns a ||| distlib _backport	count=2
function	each line if the ||| list	count=1
arg	name for reading ||| cls name	count=3
module	has been started so ||| requests packages urllib3 util	count=1
function	check if ||| check skip installed	count=1
function	download url ||| download info	count=1
function	key/value dictionary from a ||| dict from	count=1
arg	path [arg_2] ||| [arg_2] [arg_1]	count=2
function	matched by the files ||| files	count=1
function_arg	directory [arg_2] ||| [function_1] [arg_2]	count=2
module	parameters c{pattern} ||| _vendor	count=1
arg	url ||| url	count=13
class	the entry point ||| entry point	count=2
class	to the stream ||| stream	count=1
function	make ||| make	count=3
class	a ||| error	count=1
function_arg	supported [arg_2] ||| [arg_2] [function_1]	count=3
module	given file-like ||| requests packages	count=1
arg	extended or global ||| pax_headers	count=1
module_class	[module_1] ntlm ||| [class_2] [module_1]	count=1
module	are passed ||| _vendor	count=1
function_arg	[function_1] [arg_2] ||| [function_1] date [arg_2]	count=4
module	an item ||| urllib3 packages	count=1
function	encode ||| encode request	count=1
module	the named field returns ||| _vendor requests	count=1
class	remove ||| event mixin	count=1
module	download the url repository ||| vcs	count=1
function	the key associated with ||| key	count=1
arg	the specified [arg_1] [arg_2] ||| install [arg_1] [arg_2]	count=4
class	the two specifier like ||| specifier	count=1
class	operator ||| element	count=5
class	from the config ||| config	count=1
module	an ||| core	count=1
function	with a [function_2] ||| [function_2] [function_1]	count=1
function	is a loopback address ||| is loopback	count=1
function	pip delete marker ||| delete marker	count=2
function	cookiejar ||| cookiejar	count=2
function_arg	zip files [arg_2] ||| [function_1] [arg_2]	count=1
arg	address ||| address	count=1
function	[function_1] [function_2] class for various types ||| [function_1] [function_2]	count=1
class	the stream or ||| input stream	count=1
arg	file-like object fdst ||| fdst length	count=1
arg	an ns-package subpath ||| path_item packagename module	count=1
function	length from ||| from	count=2
function	write [function_2] ||| [function_2] [function_1]	count=3
class	operation ||| stream	count=1
arg	given url ||| url session	count=1
class	info ||| linux	count=1
class	a ||| base	count=1
arg	o and return ||| o	count=1
function_arg	[function_1] all headers ||| [function_1] [arg_2]	count=1
module	object [module_2] ||| [module_2] [module_1]	count=1
module	returns a list ||| distlib _backport	count=2
function	update the contents of ||| update	count=1
function	the master [function_2] ||| [function_1] [function_2]	count=5
class	the stream if ||| stream	count=2
arg	project name ||| project_name	count=1
class	to this locator ||| scraping locator	count=1
module	started so ||| packages	count=1
class	[class_1] dictionary with ||| [class_2] [class_1]	count=2
arg	[arg] req ||| req working_set [arg]	count=2
module	the ip address ||| _vendor	count=1
arg	tempname this is where ||| tempname	count=1
arg	first and [arg_2] ||| [arg_1] [arg_2]	count=1
function	for this method add ||| add	count=1
function_arg	[function_1] first and ||| [function_1] [arg_2]	count=2
module	a symlink or ||| _vendor distlib _backport	count=1
module	value of ||| packages urllib3 util	count=1
function	should a filename be ||| should include	count=1
module	generate a list ||| distlib	count=2
class	stream up ||| input stream	count=1
function	well-formed tree fragment container ||| fragment	count=1
arg	are contained within this ||| prereleases	count=1
module	an exception if ||| _vendor distlib	count=1
module	a decorator that ||| requests packages urllib3 packages	count=1
function	path of the makefile ||| makefile filename	count=1
function	is a suitable download ||| process download	count=1
module	checks [module_2] ||| [module_2] [module_1]	count=4
module	object no operation ||| _vendor distlib	count=1
arg	a string of characters ||| characters opposite	count=1
function	helpful msg ||| helpful msg	count=1
module	an item to ||| urllib3 packages	count=1
module_class	[module_1] preparedrequest ||| [class_2] [module_1]	count=1
module	on the server that ||| requests packages urllib3	count=1
function_arg	[function_1] the number ||| [arg_2] [function_1]	count=1
function_arg	gz/tar bz2 [arg_2] ||| [function_1] [arg_2]	count=3
module	version from a ||| _vendor distlib	count=1
function	return the build ||| build	count=2
class	changes ||| uninstall path set	count=1
function	type or class of ||| type	count=1
arg	requirements requirements must ||| requirements	count=1
arg	download_dir for previously ||| link download_dir	count=1
function	candidate for a download ||| download	count=1
arg	*address* ||| source_address socket_options	count=1
class	as such the session ||| session	count=1
arg	encoding of fields based ||| fields	count=1
class	the [class_1] [class_2] ||| [class_1] [class_2]	count=1
function	quickly disabling all ||| disable	count=1
function	[function_1] working ||| [function_1] [function_2]	count=3
function	supported formats for archiving ||| formats	count=1
class	an explanation of the ||| regex	count=1
class	util ||| httpconnection	count=1
arg	[arg_1] and files ||| [arg_2] [arg_1]	count=1
class	send ||| cache control adapter	count=1
arg	the tarinfo object ||| tarinfo fileobj	count=2
module	the value of ||| _vendor requests packages urllib3 util	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=1087
function	named resource a ||| resource	count=1
function	remove paths ||| remove	count=1
class	must be ||| set	count=1
arg	the first and ||| first	count=1
arg	return a dict of ||| value	count=1
arg	name [arg_2] ||| [arg_2] [arg_1]	count=3
function	header block if ||| header	count=1
function	html source example : ||| htmltags	count=1
arg	the path ||| path	count=1
arg	fingerprint matches the supplied ||| fingerprint	count=1
module	to use ||| _vendor requests	count=1
function_arg	namespace packages [arg_2] ||| [function_1] [arg_2]	count=4
arg	iterable ||| iterable	count=1
function	find the ||| find	count=1
arg	key ||| key default	count=1
function	representing the default ||| default	count=1
function	decodes a ||| decode response unicode	count=1
arg	or ||| encoding errors	count=1
module	operation ||| _vendor	count=1
function_arg	uninstall the [arg_2] ||| [arg_2] [function_1]	count=2
function	schemes [function_2] ||| [function_1] [function_2]	count=1
function	of supported tags for ||| supported	count=1
function_arg	slices of [arg_2] ||| [function_1] [arg_2]	count=1
module	packer ||| _vendor msgpack	count=2
arg	at path or return ||| path	count=1
module	a list of tarinfo ||| _vendor distlib	count=1
module	copy ||| distlib _backport	count=2
module	one for each ||| _vendor distlib	count=1
function_arg	child [arg_2] ||| [function_1] [arg_2]	count=1
function	locking the file ||| am locking	count=1
arg	all headers have been ||| headers	count=1
class	request method ||| request	count=1
module	object no operation should ||| _vendor distlib _backport	count=1
function	name of the ||| name	count=2
arg	prefix ||| prefix	count=1
function	return the value ||| get	count=1
arg	[arg_1] path ||| [arg_2] [arg_1]	count=2
module	given ||| _vendor requests packages urllib3	count=2
module	archive ||| _vendor distlib _backport	count=2
function	the build ||| build	count=2
function_arg	httplib message object ||| httplib cls message	count=1
module	by an index ||| _vendor distlib	count=1
function	dictionary from a ||| dict from	count=2
arg	__repr__() <==> ||| _repr_running	count=1
function	a file url the ||| url	count=1
module	a random url on ||| requests packages urllib3	count=1
module	previously made by ||| req	count=1
class	[class_1] dictionary with ||| [class_1] [class_2]	count=2
arg	to eintr ||| recalc_timeout	count=1
arg	the text ||| text	count=1
module	that defines __unicode__ ||| requests	count=1
module	that always returns a ||| _vendor requests packages	count=1
function_arg	directory of path ||| directory path	count=2
arg	the requires_python specifier ||| requires_python	count=1
function	representing the user ||| user	count=1
module	operation should ||| distlib _backport	count=1
function	configuration ||| configuration	count=1
function	[function_1] attempt ||| [function_1] [function_2]	count=2
function	iter ||| iter	count=1
class	tell whether or ||| base	count=1
module	given ||| requests	count=12
function	create a ||| init	count=2
arg	var ||| var	count=1
module	of a distribution or ||| _vendor pkg_resources	count=1
function	representation of this instance ||| repr	count=1
function	domains in ||| domains	count=2
module	or none ||| _vendor pkg_resources	count=2
function	count ||| count righthand	count=1
module	bytes see :class ||| _vendor msgpack	count=1
module_class	ordered [class_2] ||| [module_1] ordered [class_2]	count=4
arg	[arg_1] last ||| [arg_1] [arg_2]	count=3
module	a c{parseresults} ||| _vendor	count=1
module	_stream object no ||| _vendor distlib	count=1
function	reversed ||| reversed	count=1
module	one ||| distlib	count=1
module	return packed ||| _vendor msgpack	count=1
module	of a string or ||| _vendor pkg_resources	count=1
function	string representing the default ||| default	count=1
arg	project_name this checks ||| project_name	count=1
module	be ||| _vendor	count=1
function	[function_1] [function_2] as a tuple (id_name ||| [function_1] [function_2] full_distribution_name	count=4
function	given project get ||| get project	count=2
function	for transmission and ||| prepare	count=1
function	[function_1] makefile from ||| [function_1] [function_2]	count=1
function	return a ||| get dist	count=1
module	of ||| pkg_resources	count=1
module	the parameters c{pattern} ||| _vendor	count=1
arg	module for ||| pattern	count=1
module	[module] the ||| _vendor [module]	count=3
arg	set of events ||| fileobj events	count=1
function_arg	[function_1] a iterator ||| [arg_2] [function_1]	count=2
module	a file [module] tarinfo object ||| [module]	count=1
function_arg	[function_1] dictionary ||| [function_1] [arg_2]	count=2
function	from [function] data ||| [function] release	count=2
class	perform an http request ||| httpconnection	count=1
function	object is [function_2] ||| [function_1] fp [function_2]	count=1
class	return a ||| hash error	count=1
class	graph ||| graph	count=1
arg	of path_item if needed ||| path_item	count=1
arg	which are contained within ||| prereleases	count=1
module	returns response ||| _vendor requests	count=2
function	a distro release file ||| distro release file	count=1
class	the given expression ||| parser element	count=1
function	the build [function_2] ||| [function_1] [function_2]	count=5
arg	a ||| cls	count=1
arg	from python 3 5 ||| mode buffering encoding errors	count=1
function	to change the method ||| method	count=1
function	the record ||| installed	count=1
function	setup py file ||| installable dir	count=1
function_arg	entry point [arg_2] ||| [function_1] [arg_2]	count=1
module_class	[module_1] when making ||| [module_1] [class_2]	count=4
arg	major minor and ||| major minor	count=1
arg	a zipimporter ||| importer	count=1
class	requirement ||| requirement	count=4
function_arg	string into ||| string cls	count=1
module	value of a single ||| distlib	count=1
function	parse the cache control ||| parse cache control	count=1
arg	c{flags} are passed to ||| pattern	count=1
function	command ||| command	count=3
function	installed version ||| installed version	count=2
arg	pack object o and ||| o	count=1
function	file cache ||| file	count=1
function	download url for ||| download info	count=1
function	if it is not ||| is ref	count=1
module	request ||| packages urllib3	count=1
arg	[arg] of the ||| [arg]	count=1
function	[function_1] defined order ||| [function_2] [function_1]	count=2
arg	arches including group arches [arg_1] [arg_2] ||| darwin arches [arg_1] [arg_2]	count=4
function	version control backend ||| backend	count=1
function	return a ||| get resource	count=2
arg	a manifest at path ||| path	count=1
arg	[arg_1] url ||| [arg_1] [arg_2]	count=1
class	ip address as a ||| base	count=1
module	changes previously made by ||| req	count=1
class	previously ||| uninstall	count=1
class	the session ||| session	count=1
function	each line and lines ||| lines	count=1
class	if this points ||| link	count=1
arg	first and ||| first	count=1
class	if ||| link	count=2
function	[function_1] control ||| [function_1] [function_2]	count=3
module	number to a ||| _vendor distlib	count=1
function	fresh ||| new conn	count=1
function_arg	[function_1] for each ||| [arg_2] [function_1]	count=3
arg	proxy ||| proxy	count=1
function_arg	supported tags [arg_2] ||| [function_1] [arg_2]	count=1
module	to insert before ||| html5lib treebuilders	count=1
arg	text ||| text	count=1
function	supported formats ||| get unpack formats	count=1
function_arg	record [arg_2] ||| [arg_2] [function_1]	count=1
arg	input ||| input	count=1
arg	connection adapter to a ||| adapter	count=1
class	parsed link from ||| link	count=1
module	files and the ||| core	count=1
function	state [function_2] ||| [function_1] [function_2]	count=2
arg	name for reading ||| cls name mode fileobj	count=1
function	a dist given just ||| make dist	count=1
class	the timeout clock ||| timeout	count=1
function	[function_1] a cookiejar ||| [function_2] [function_1]	count=3
function	send a request use ||| send	count=1
module	return 'pathname' as a ||| _vendor distlib	count=1
function	module ||| init	count=1
function	sort ||| sort	count=2
module	archive as [module_2] ||| [module_1] [module_2]	count=6
class	response if ||| response	count=1
function	posix ||| create pax	count=1
class	metadata ||| metadata	count=4
function_arg	httplib [arg_2] ||| [function_1] [arg_2]	count=2
arg	associated with ||| insert replace	count=1
module	a single variable ||| _vendor distlib	count=1
function	distribution is installed in ||| in	count=1
function	to update our cached ||| update cached	count=1
arg	this application ||| appname	count=3
module	no operation ||| _vendor distlib	count=1
arg	from string src ||| src	count=1
class	remove() ||| path set	count=1
class	me for display under ||| hash error	count=1
arg	iterable of ||| iterable	count=1
function	multipart ||| make multipart	count=1
function	path to ||| path	count=1
function	encode parameters [function_2] ||| [function_1] [function_2]	count=4
function_arg	data from src ||| copyfile src	count=1
function	timeout from [function_2] ||| [function_2] [function_1]	count=1
function_arg	register a [arg_2] ||| [arg_2] [function_1]	count=1
function	reverse dns pointer name ||| reverse pointer	count=1
class	:class ||| session	count=1
module	c{re} module for an ||| _vendor	count=1
function	dependent on ||| dependent	count=1
function	load a manifest ||| load	count=1
arg	and version ||| version	count=1
function	update our cached ||| update cached	count=1
module	passed to the ||| _vendor	count=1
function	host as ||| host	count=1
module	value to use ||| requests packages urllib3 util	count=1
class	execute [class] ||| [class]	count=2
class	made ||| set	count=1
arg	postprocessing of tempname this ||| tempname filename	count=1
module	return a ||| distlib	count=2
function	a string ||| resource string	count=1
class	different directives ||| controller	count=1
function	[function] at ||| [function] only at	count=1
module	points [module] that we ||| [module]	count=1
class	a c{parseresults} object ||| results	count=1
function_arg	range [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	[function_1] into a ||| [arg_2] [function_1]	count=1
function	is identical ||| check	count=1
module	field which ||| _vendor distlib	count=1
function	sort of ||| sort	count=1
arg	of events to ||| fileobj events data	count=1
function	c{flags} are ||| init	count=1
function	it is included on ||| is	count=1
arg	port and [arg_2] ||| [arg_2] [arg_1]	count=1
arg	optional domain and path ||| name default domain path	count=1
arg	using hashlib new ||| blocksize	count=1
module	raise an ||| distlib	count=1
function	into ||| from string	count=1
arg	arches including group arches [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
module	should be ||| _vendor distlib _backport	count=1
function_arg	[function_1] of path_item ||| [arg_2] [function_1]	count=1
function	function used to insert ||| insert	count=1
function	waits for ||| wait for	count=1
arg	hash length for path ||| path	count=1
function	[function_1] host as ||| [function_1] [function_2]	count=5
module	if a given ||| _vendor requests	count=2
class	return ||| base	count=1
function	underspecified parameters ||| create	count=1
function_arg	before refnode ||| before node refnode	count=1
function	dict-like [function] ||| [function]	count=6
module	information from a ||| distlib _backport	count=1
arg	for this zip_path ||| zip_path	count=1
function	only ascii ||| ascii	count=1
class	by remove() ||| uninstall path	count=1
class	the selector this must ||| base selector	count=1
module	or ||| _vendor pkg_resources	count=9
class	the file object ||| file	count=1
arg	of a response ||| response	count=1
function	:class session for context-management ||| session	count=1
function	terminal window ||| terminal size	count=1
class	for interacting with pypi ||| package index	count=1
class	previously ||| uninstall path	count=1
function	same ||| same	count=1
module	object as [module_2] ||| [module_2] [module_1]	count=1
module	compile()} ||| _vendor	count=1
arg	download_dir for previously downloaded ||| link download_dir	count=1
function	element ||| element	count=1
arg	began processing it ||| err	count=1
function	return a mapping ||| get map	count=3
class	specifier ||| specifier	count=6
function	is otherwise ietf reserved ||| is reserved	count=2
class	as ||| ipaddress	count=1
function	version field if present ||| version	count=1
function	entry ||| entry	count=3
function	normalize a file/dir name ||| normalize path	count=1
arg	version ||| version	count=2
class	values ||| mismatch	count=1
arg	installationcandidate [arg] ||| [arg]	count=3
function_arg	slices of [arg_2] ||| [arg_2] [function_1]	count=1
arg	[arg_1] object fdst ||| [arg_1] [arg_2]	count=2
function	of [function] that aren't ||| get [function]	count=1
function	our cached value with ||| cached	count=1
function	[function_1] path ||| [function_1] [function_2]	count=5
function	dictionary from a cookiejar ||| dict from cookiejar	count=1
module	the url repository ||| vcs	count=1
function	return ||| get paths	count=1
function_arg	[function_1] headers returning ||| [function_1] [arg_2]	count=4
function	a distro [function_2] ||| [function_2] [function_1]	count=2
function_arg	url the [arg_2] ||| [function_1] [arg_2]	count=4
function	return all [function_2] ||| distribution path [function_1] [function_2]	count=3
function_arg	in a [arg_2] ||| [arg_2] [function_1]	count=1
class	stream or queue if ||| htmlunicode input stream	count=1
class	of a c{parseresults} ||| results	count=1
class	hash of the ||| hash missing	count=1
arg	the current node ||| node	count=3
module_class	a [class_2] ||| [module_1] _backport [class_2] info	count=2
function	to a [function_2] ||| [function_1] [function_2]	count=3
module	a decorator that ||| _vendor requests packages urllib3	count=1
arg	with confirmation (unless ||| auto_confirm	count=1
class	tarinfo ||| tar	count=2
class	ipv4 address ||| base v4	count=1
function	viewkeys() ||| viewkeys	count=1
function	a list ||| from list	count=1
module	the _stream object no ||| _vendor distlib _backport	count=1
function	the c{re compile()} function ||| init	count=1
arg	headers have ||| headers	count=1
function	the children of ||| child	count=1
function	stop after [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] name of ||| [function_2] [function_1]	count=1
module	or zipfile ||| pkg_resources	count=1
class	the different directives ||| controller	count=1
class	return ||| tree builder	count=1
function	the prefix ||| prefix	count=1
function	a download ||| to download	count=1
module	an pyopenssl certificate provides ||| packages urllib3 contrib	count=1
arg	of bytes matching a ||| bytes	count=1
function	add ||| add distribution	count=2
class	the changes previously ||| set	count=1
class	returns a ||| results	count=1
arg	authurl ||| authurl	count=1
arg	request use the request ||| request	count=1
function	warnings ||| warnings	count=1
module	release ||| _vendor	count=1
function	method ||| rebuild method	count=1
function	is ||| dist is	count=2
function_arg	[function_1] this zip_path ||| [arg_2] [function_1]	count=2
class	find ||| package finder	count=2
function_arg	[function_1] [arg_2] ||| [function_1] string [arg_2]	count=4
function	with [function_2] ||| [function_1] [function_2]	count=1
function	the previous attempt >= ||| attempt	count=1
function	return the hash ||| hash	count=1
class	the changes ||| path	count=1
module	given file-like object ||| requests packages urllib3	count=1
class	location of the exception ||| base exception	count=1
function	[function_1] a map ||| [function_1] [function_2]	count=1
module_class	a distribution ||| _vendor distlib locator	count=1
module	named field returns ||| _vendor requests packages urllib3	count=1
arg	is either 'r' to ||| mode fileobj format	count=1
module	one ||| _vendor	count=1
function	default [function_2] ||| [function_2] [function_1]	count=1
class	of me for ||| error	count=1
module_class	entry [class_2] ||| [module_1] entry [class_2]	count=6
module	has been started so ||| packages urllib3 util	count=1
module	a gnu longname ||| distlib	count=1
module	pack ||| _vendor	count=1
class	for ||| cache	count=1
arg	of path ||| path	count=2
arg	location ||| filename location	count=1
function_arg	[function_1] dist_name ||| [function_1] [arg_2]	count=4
module	started so we should ||| requests packages	count=1
module	a tuple containing the ||| distlib _backport	count=2
class	parser against a ||| parser	count=1
arg	dispatches a ||| hooks hook_data	count=1
module	c{pattern} ||| _vendor	count=1
function	with ||| with	count=2
function_arg	list [arg_2] ||| [arg_2] [function_1]	count=1
function	a shortened ||| explode shorthand ip string	count=1
module	to define a ||| _vendor	count=2
class	return a summary of ||| hash error	count=1
class	to selector keys ||| base selector	count=1
function	return the codename ||| codename	count=1
arg	associated with entry ||| insert replace	count=1
module	archive as a list ||| distlib _backport	count=1
arg	args address ||| address	count=1
class	the graph ||| dependency graph	count=3
arg	the url if ||| url	count=1
module	should be ||| _vendor distlib	count=1
module	decorator that defines ||| _vendor requests packages urllib3	count=1
function	distribution names known ||| distribution names	count=14
function_arg	add dist ||| add dist	count=2
function_arg	distributions [arg_2] ||| [function_1] path_item [arg_2]	count=1
function	return all the distribution ||| get distribution	count=6
function	write the given ||| write and	count=1
function	[function_1] [function_2] the ||| [function_1] [function_2]	count=28
function	to a file located ||| distinfo	count=1
arg	[arg_1] resource ||| [arg_1] [arg_2]	count=2
module	a set of ||| _vendor distlib	count=1
arg	from a ||| cj cookie_dict	count=1
arg	a member from the ||| member	count=1
function	the build number of ||| build number	count=1
class	the stream or queue ||| htmlunicode input stream	count=1
function	[function_1] makefile ||| [function_2] [function_1]	count=1
module	python version from a ||| _vendor distlib	count=1
arg	first and last ||| first last	count=3
function	all the children ||| children	count=1
function_arg	[function_1] hook ||| [function_1] [arg_2]	count=1
class	hash ||| hash	count=1
module	of a single variable ||| _vendor distlib _backport	count=1
function	commit ||| ref commit	count=1
class	locator ||| simple scraping locator	count=1
module	unpack ||| _vendor distlib _backport	count=2
module	encoding ||| _vendor webencodings	count=2
function	to [function_2] ||| [function_2] [function_1]	count=3
arg	to url ||| url rev_options	count=1
arg	for specified ||| package_or_requirement resource_name	count=2
function	build the path url ||| path url	count=1
function	find a ||| find	count=1
function	the schemes names ||| scheme names	count=2
module	be ||| requests packages urllib3 util	count=1
function	venv and [function] system site ||| virtualenv [function]	count=1
module	the same as for ||| _vendor requests packages urllib3 packages	count=1
function_arg	[function_1] [arg_2] ||| [function_1] zero bits [arg_2]	count=4
function_arg	[function_1] currently satisfying ||| [arg_2] [function_1]	count=1
module	checks if given ||| _vendor requests	count=1
function	for a download url ||| download	count=1
class	is ||| cache	count=1
class	iterates over the record ||| installed distribution	count=1
function_arg	the netmask and ||| netmask address	count=1
function	[function_1] edge ||| [function_2] [function_1]	count=1
function	for ||| init	count=1
function	return the value of ||| get	count=1
module_class	[module_1] ntlm ||| [module_1] [class_2] init user pw	count=2
module_class	[module_1] [class_2] ||| [module_1] _backport [class_2]	count=6
module	a single variable using ||| distlib _backport	count=1
arg	an explanation ||| pattern	count=1
function	the environment ||| environment	count=1
function	waits for [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] our cached ||| [function_1] [function_2]	count=3
function	located under ||| get distinfo	count=1
class	changes ||| set	count=1
function	options ||| options	count=3
function	a legacy ||| float	count=1
function	define action to ||| action	count=1
arg	path ||| path	count=12
module	a new ||| _vendor	count=1
function	returns a hash ||| hash	count=1
arg	given url ||| url	count=2
function	[function_1] sort ||| [function_1] [function_2]	count=1
function	unpack ||| register unpack	count=1
function	a dist ||| dist	count=1
class	the metadata [class_2] ||| [class_2] [class_1]	count=2
arg	[arg_1] url ||| [arg_2] [arg_1]	count=3
module	test if the lock ||| lockfile	count=1
class	c{parseresults} ||| results	count=1
class	export [class] ||| [class]	count=4
module	packer ||| msgpack	count=1
arg	[arg_1] and last ||| [arg_2] [arg_1]	count=3
function	data [function_2] ||| [function_2] [function_1]	count=6
function_arg	version of [arg_2] ||| [arg_2] [function_1]	count=2
function	range given the ||| range	count=1
module	if given ||| _vendor requests packages	count=1
module	define a ||| _vendor	count=2
class	a suitable manifest ||| manifests	count=1
arg	compile()} function ||| pattern	count=1
module	the accept and host ||| _vendor requests packages urllib3	count=1
class	of the option ||| config option	count=1
function_arg	[function_1] to location ||| [arg_2] [function_1]	count=3
module	insert ||| _vendor html5lib treebuilders	count=2
module	urllib3 ||| _vendor requests packages urllib3	count=2
function_arg	2 httplib [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] tarinfo targetpath [arg_2]	count=1
module	return the object as ||| _backport	count=1
arg	old retries format ||| cls retries redirect	count=1
function	[function_1] loopback address ||| [function_2] [function_1]	count=1
function	for link-local ||| link local	count=2
function	sys stdout ||| captured stdout	count=2
function	return the url ||| get url	count=3
module	a decorator that defines ||| _vendor requests packages urllib3	count=1
function_arg	delimited list [arg_2] ||| [function_1] [arg_2]	count=1
function	a patch ||| patch	count=1
class	[class] if ||| [class]	count=1
function	the tree type ||| tree	count=1
function	return the minor ||| minor	count=1
class	be ||| path set	count=1
arg	into location ||| location download_dir	count=2
arg	for this application ||| appname appauthor version	count=5
module	previously ||| req	count=1
function	given project get a ||| get project	count=1
arg	download_dir for ||| download_dir	count=1
function	named script ||| script	count=1
module	the value to use ||| _vendor requests packages urllib3 util	count=1
function	name of the version ||| name	count=1
class	[class] if they ||| [class]	count=1
module	no operation should ||| _vendor distlib	count=1
module	a symlink ||| distlib	count=1
module	[module_1] a key/value ||| [module_1] [module_2]	count=1
function	the version field ||| version	count=1
arg	name for reading or ||| cls name	count=3
function	located under the ||| get distinfo	count=1
function_arg	glob [arg_2] ||| [arg_2] [function_1]	count=1
function	whitelist ||| retryable	count=1
function_arg	dir for [arg_2] ||| [function_1] [arg_2]	count=7
function	directory of ||| directory	count=1
module	a tuple path hash ||| _vendor distlib	count=1
arg	set of events to ||| fileobj events	count=1
module	distribution or ||| pkg_resources	count=1
arg	src ||| cls src dist	count=1
module	as a ||| distlib	count=4
class	point syntax follows ||| point	count=1
function	value and wait ||| wait	count=1
arg	requirement ||| requirement	count=1
function	from 'files' that ||| exclude	count=1
function	master working set ||| master working set	count=3
class	gnu tar ||| tar	count=1
function_arg	create a [arg_2] ||| [function_1] [arg_2]	count=1
arg	od __repr__() <==> ||| _repr_running	count=1
arg	module for an explanation ||| pattern	count=1
function_arg	[function_1] appropriate to ||| [arg_2] [function_1]	count=4
function	the method of ||| method	count=1
module	a ||| requests	count=1
module	and should be closed ||| packages urllib3 util	count=1
arg	[arg_1] [arg_2] ||| darwin arches [arg_1] [arg_2]	count=12
function_arg	the server [arg_2] ||| [arg_2] [function_1]	count=1
arg	of targetpath according to ||| targetpath	count=2
arg	string of characters from ||| characters opposite	count=1
module	create a zip ||| distlib	count=1
arg	tags for each ||| noarch platform impl	count=1
function	[function_1] socket makefile ||| [function_2] [function_1]	count=1
function	get a connection ||| get	count=1
function_arg	verifies [arg_2] ||| [function_1] [arg_2]	count=2
function	element from the ||| from table	count=2
function	supported formats ||| formats	count=2
function	apparent encoding provided by ||| apparent encoding	count=1
module	returns a tuple ||| distlib	count=1
class	see ||| regex	count=1
function	return the file cache ||| to file	count=1
arg	fsrc ||| fsrc	count=1
module	named field returns an ||| requests	count=1
class	on the path ||| distribution path	count=1
function	for options ||| packb	count=1
function	a proxy for the ||| proxy	count=1
arg	[arg_1] fdst ||| [arg_2] [arg_1]	count=1
class	the directory ||| directory	count=1
module	and with a ||| distlib	count=1
function	a mapping of ||| map	count=1
module	of a single variable ||| distlib	count=1
class	parser against ||| parser	count=1
function	of the makefile ||| makefile filename	count=1
class	- [class_2] ||| [class_2] [class_1]	count=1
class	stream ||| stream	count=6
function	default ||| set default	count=1
function	download for a project ||| download	count=1
module	return packed bytes ||| msgpack	count=1
arg	the supplied namespace dictionary ||| script_name namespace	count=1
function	resource an ||| resource	count=1
function	set ||| set	count=3
module	a ||| _vendor distlib	count=89
module	that defines __unicode__ ||| _vendor requests packages urllib3	count=1
module	changes previously ||| req	count=1
class	specifier are ||| base specifier	count=1
arg	key/value ||| cookie_dict	count=1
arg	response ||| response	count=2
function	and optionally converting ||| and convert	count=1
function	netrc ||| get netrc	count=1
module	started so we ||| _vendor requests packages	count=1
class	as-is ||| regex	count=1
arg	of the input ||| input	count=1
class	of ||| linux	count=1
function_arg	stream decodes [arg_2] ||| [function_1] [arg_2]	count=1
class	is normally one for ||| cache	count=1
function	zip ||| zip dir	count=1
class	the git ||| git	count=1
function	commit ||| commit	count=2
module	copy ||| _vendor distlib _backport	count=2
function_arg	server [arg_2] ||| [arg_2] [function_1]	count=1
module	accept and ||| _vendor requests	count=1
class	add ||| event mixin	count=1
arg	is either 'r' to ||| fileobj format	count=1
module	:class packer for ||| _vendor	count=1
module	a tarball ||| core	count=1
function	returns current column within ||| col	count=1
function	if this points to ||| is	count=1
function_arg	[function_1] a ||| [function_1] [arg_2]	count=7
class	two specifier ||| base specifier	count=1
module	class ||| _vendor packaging	count=1
class	changes previously ||| uninstall path set	count=1
function	a wheel ||| move wheel	count=1
module	by an index ||| distlib	count=1
function	before ||| before	count=1
arg	member from ||| member	count=1
function	2 ||| 2	count=1
arg	the c{re compile()} function ||| pattern	count=1
module	that defines __unicode__ and ||| _vendor requests packages urllib3 packages	count=1
class	if [class] is compliant ||| [class]	count=1
module	of a single variable ||| distlib _backport	count=1
function	move all the children ||| reparent children	count=1
class	changes ||| uninstall	count=1
function	method to split a ||| split	count=1
class	display ||| hash	count=1
function_arg	decode [arg_2] ||| [arg_2] [function_1]	count=1
arg	request ||| url	count=1
function_arg	[function_1] distribution ||| [arg_2] [function_1]	count=1
class	this ||| distribution	count=3
class	for ||| hash	count=1
function	close the _stream ||| close	count=1
class	the file ||| file in file	count=1
arg	fsrc to ||| fsrc	count=1
module	based on ||| packages	count=1
module	the _stream object ||| _vendor distlib	count=1
module	that defines ||| _vendor requests packages urllib3	count=1
class	to this list ||| list	count=1
arg	to be updated ||| dest rev_options	count=1
arg	path for specified ||| package_or_requirement resource_name	count=1
function	html source example ||| strip htmltags	count=1
module	the named field returns ||| requests packages urllib3	count=1
class	the stream up to ||| input stream	count=1
module	object no operation ||| distlib _backport	count=1
function	from ||| read	count=1
module	an explanation of ||| _vendor	count=1
function	get the part of ||| get	count=1
function	count the ||| count righthand	count=1
function	same host as this ||| same host	count=1
function	items from the ||| release info	count=4
function_arg	[function_1] expressions ||| [arg_2] [function_1]	count=2
function	closes all adapters ||| close	count=1
arg	the first and last ||| first last	count=1
module	a gnu ||| _vendor distlib	count=2
function	the file is locked ||| is locked	count=1
class	returns the [class_1] [class_2] ||| [class_1] [class_2]	count=1
function	dist given just ||| make dist	count=2
arg	zipfile importer ||| importer	count=1
module	for an ||| _vendor	count=2
module	an ||| packages urllib3	count=1
arg	native filesystem ||| pathname	count=1
function	[function_1] 2 httplib ||| [function_1] [function_2]	count=2
class	no operation ||| stream	count=1
function	[function_1] element ||| [function_1] from [function_2]	count=3
module	as :meth urllib3 ||| requests packages urllib3	count=1
function	string representing the user ||| user	count=1
function	of the exported entries ||| exported entries	count=1
function	python version ||| requires python	count=1
arg	location ||| location	count=11
module	see the ||| _vendor	count=1
class	selector ||| base selector	count=1
function	for io ||| for io	count=1
module_class	[module_1] point ||| [module_1] [class_2]	count=1
function	[function] as a ||| [function]	count=3
function_arg	if [arg_2] ||| [function_1] [arg_2]	count=2
arg	human-readable string ||| pretty	count=1
arg	bitwise netmask args ||| cls prefixlen	count=1
module	backport ||| urllib3 packages backports	count=1
class	session ||| session	count=1
module	the value to ||| _vendor requests packages urllib3 util	count=1
function	consume ||| consume	count=1
arg	path [arg_2] ||| [arg_1] algo [arg_2]	count=1
function	add the *distribution* to ||| add distribution	count=1
class	object this ||| base	count=1
function_arg	children [arg_2] ||| [arg_2] [function_1]	count=1
class	for display under the ||| hash	count=1
module	a directory tree ||| distlib	count=2
class	return ||| distribution	count=1
module	decorator that ||| requests	count=1
arg	of fields ||| fields headers	count=1
function	should be ||| should	count=1
function	return packed ||| packb	count=1
class	in the jar ||| cookie jar	count=2
function	that the server ||| read error	count=1
module	for each ||| _vendor	count=1
function	[function_1] the abi ||| [function_2] [function_1]	count=1
class	changes previously ||| path	count=1
class	of a c{parseresults} object ||| parse	count=1
module	like abc ||| packaging	count=1
module	return ||| msgpack	count=1
arg	fields based on ||| fields headers	count=1
class	from the file ||| file	count=2
module	explanation of the ||| _vendor	count=1
arg	a uri ||| uri	count=1
function	file or filename ||| file	count=1
module	from a ||| _vendor distlib	count=3
arg	and c{flags} ||| pattern	count=1
function	marker [function_2] ||| [function_2] [function_1]	count=1
arg	recursively delete ||| path ignore_errors onerror	count=1
function	the master working set ||| master working set	count=1
module	a child process ||| distlib	count=1
arg	requirement ||| requirement prereleases	count=1
function	virtualenv ||| virtualenv	count=1
module	add ||| _vendor requests packages urllib3 packages	count=1
module	no operation ||| distlib _backport	count=1
arg	specified in versions ||| versions	count=1
function	for each line ||| list	count=1
class	the two specifier ||| base specifier	count=1
module_class	[module_1] [class_2] when tarfile is opened ||| [module_1] [class_2] next	count=3
module	returns a list ||| _vendor distlib _backport	count=2
class	path ||| request encoding mixin	count=1
function	lines of ||| lines	count=1
function	delimited list of ||| delimited list	count=2
module_class	[module_1] tarinfo object ||| [module_1] [class_2]	count=7
arg	<requests response> object ||| resp	count=1
function	list of ||| list	count=3
function	list ||| from list	count=1
module	of self ||| pkg_resources	count=1
function	for ||| wait for	count=1
class	a ||| hash error	count=1
module	a symlink or hardlink ||| distlib _backport	count=1
module	the given ||| _vendor requests packages	count=1
arg	that header value ||| header	count=1
function	state [function_2] ||| [function_2] [function_1]	count=2
class	not the two specifier ||| specifier	count=1
function	should we redirect and ||| redirect	count=1
module	a string and ||| _vendor	count=1
module_class	working [class_2] ||| [module_1] working [class_2]	count=4
module	[module_1] a given ||| [module_1] [module_2]	count=1
arg	from file-like object fsrc ||| fsrc	count=1
function_arg	check if [arg_2] ||| [arg_2] [function_1]	count=1
class	the path ||| path	count=1
class	the ipv4 address ||| base v4	count=1
function	subnets which join ||| subnets	count=1
function	record ||| installed files	count=2
function	the url to ||| request url	count=1
module	present or none otherwise ||| _vendor pkg_resources	count=1
arg	in versions ||| versions	count=1
arg	file-like object fdst ||| fdst	count=1
module	representing ||| core	count=1
module	'pathname' as a ||| distlib	count=1
arg	[arg_1] minor ||| [arg_2] [arg_1]	count=4
function	glibc [function] or ||| glibc [function]	count=1
module	the given ||| _vendor requests	count=1
module	a tuple containing ||| _vendor distlib	count=2
arg	working_set to ||| working_set	count=1
arg	of targetpath [arg_2] ||| [arg_2] [arg_1]	count=4
module	an app ||| _vendor pkg_resources	count=1
function	return a [function_2] ||| [function_2] [function_1]	count=5
module	returns ||| _vendor requests packages	count=1
function	zero ||| righthand zero	count=1
function	requirement set ||| requirement set	count=1
module	hold a gnu longname ||| _vendor distlib	count=1
module_class	[module_1] [class_2] ||| [module_1] entry [class_2]	count=6
function	verifies that ||| header validity	count=1
module	an pyopenssl certificate ||| packages urllib3 contrib	count=1
arg	events to ||| events	count=1
function	creates an installrequirement from ||| from line	count=1
module	none if ||| utils	count=1
module	hold a gnu ||| _vendor distlib	count=1
function	transform [function] letters to ||| [function]	count=1
function	stream ||| stream	count=2
class	returns ||| results	count=1
function	[function_1] a loopback ||| [function_2] [function_1]	count=1
arg	first and [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	return absolute location in [function_1] [arg_2] ||| pkg_resources resource manager get [function_1] path [arg_2]	count=3
class	hash of the possibly ||| hash missing	count=1
function_arg	[function_1] connection adapter ||| [function_1] prefix [arg_2]	count=1
module	see if ||| _vendor	count=1
module	like abc ||| _vendor packaging	count=1
function_arg	[function_1] data ||| [function_1] [arg_2]	count=3
module	same as ||| _vendor requests packages urllib3 packages	count=1
class	the exception with ||| parse base exception	count=1
class	hash of the ||| hash	count=1
class	the [class] access ||| [class]	count=1
module	return [module] all ||| [module]	count=1
class	hash ||| hash missing	count=1
arg	and names ||| names	count=1
function	is ||| is ref	count=1
arg	object for specified ||| package_or_requirement resource_name	count=1
function_arg	makefile [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] httplib ||| [function_2] [function_1]	count=1
arg	https //pypi python org/simple/* ||| url comes_from requires_python	count=1
function	subnets which ||| subnets	count=1
class	[class_1] distribution ||| _vendor [class_1] [class_2]	count=8
module_class	[module_1] textual ||| [module_1] [class_2]	count=2
function	the current backoff ||| get backoff time	count=1
function	in a ||| params	count=1
function	normalize a ||| normalize path	count=1
function	delete ||| delete	count=1
function	files ||| files	count=3
module	to insert ||| html5lib treebuilders	count=1
class	file if ||| file	count=2
module	url on ||| packages urllib3	count=1
module	an html page ||| _vendor distlib	count=1
module	see the python ||| _vendor	count=1
arg	filename the ||| filename	count=1
function	never ||| no	count=1
module	if the given ||| requests packages urllib3	count=1
function	gzip compressed ||| gzopen	count=1
function	declare namespace packages ||| namespace	count=1
function	add a ||| add	count=3
function	process a single requirements ||| process	count=1
function	for ||| lookup	count=1
function	overrides the default keyword ||| set default keyword	count=1
function	the file cache ||| url to file	count=1
class	test if this address ||| ipv6address	count=1
arg	name for ||| cls name mode	count=1
module	[module_1] a key/value ||| [module_2] [module_1]	count=1
class	determines if ||| link	count=1
arg	dist_name [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	[module_1] dictionary ||| [module_1] ordered [class_2]	count=1
arg	either 'r' to ||| mode fileobj format	count=1
class	the record ||| installed distribution	count=1
module	the given ||| requests packages urllib3	count=1
class	tell whether ||| base	count=1
arg	based on the url ||| url filecache	count=1
module	be called to ensure ||| packages urllib3 util	count=1
class	sigint handler ||| mixin	count=2
arg	the given rev_options ||| rev_options	count=1
class	[class_1] point ||| [class_1] [class_2]	count=1
class	of parsed tokens ||| parse	count=1
module	a single string ||| _vendor webencodings	count=4
module	must be called ||| requests packages urllib3 util	count=1
arg	object ||| fileobj	count=1
function	from ||| from line	count=1
module	that always returns a ||| _vendor requests	count=1
function	the same host ||| same host	count=2
function	as [function] packed ||| [function] int to	count=2
function	[function_1] mapping of ||| [function_2] [function_1]	count=1
function	from a legacy ||| from float	count=3
function_arg	zip [arg_2] ||| [function_1] [arg_2]	count=3
class	module for an ||| regex	count=1
function	the version control backend ||| backend	count=1
class	check if [class] is compliant ||| [class]	count=1
arg	a set of events ||| events data	count=1
class	needed for this ||| distribution	count=1
function	python 2 ||| python 2	count=1
function	return a readable ||| get resource	count=1
module	for reading a ||| distlib	count=1
module	a decorator that ||| requests packages urllib3	count=1
module	that defines __unicode__ and ||| _vendor requests packages urllib3	count=1
module	object no operation ||| _vendor distlib _backport	count=1
module	a dictionary with ||| _vendor distlib	count=1
arg	of events to ||| events	count=1
class	c{parseresults} object ||| parse	count=1
function	a file object ||| file	count=1
arg	a human-readable string ||| pretty	count=1
class	me for display under ||| error	count=1
function	is unspecified ||| is unspecified	count=6
function	prepare the master ||| master	count=1
function_arg	[function_1] [arg_2] ||| [function_1] candidates [arg_2]	count=12
module	see ||| msgpack	count=1
class	display under ||| hash	count=1
class	[class] when tarfile ||| [class]	count=1
function	is a commit ||| commit	count=1
arg	file's [arg] of the ||| [arg]	count=1
function	a tarball or ||| is	count=1
class	previously ||| set	count=1
module	should ||| _vendor distlib _backport	count=2
module	:class packer for ||| _vendor msgpack	count=1
function	the decoder is ||| decoder	count=1
function	hook ||| hook	count=1
module	that defines __unicode__ and ||| requests packages urllib3 packages	count=1
arg	paths and ||| paths	count=1
module_class	[module_1] file object ||| [module_1] [class_2]	count=4
module	bytes see :class packer ||| _vendor	count=1
function_arg	command [arg_2] ||| [function_1] [arg_2]	count=1
arg	sockets or optionally a ||| socks	count=3
class	decimal notation ||| v4	count=1
class	as a string ||| ipaddress	count=1
function	exported [function_2] ||| [function_1] [function_2]	count=2
module	like ||| _vendor packaging	count=3
function	directory ||| directory	count=1
module	'pathname' as a name ||| _vendor distlib	count=1
function_arg	[function_1] at path ||| [arg_2] [function_1]	count=1
class	the standard formatter ||| formatter	count=1
function	to find ||| find requirement	count=1
arg	the url if applicable ||| url	count=1
class	the entry point from ||| entry point	count=1
class	used ||| version control	count=1
module	from the archive as ||| _backport	count=1
module	the value ||| packages urllib3 util	count=2
class	normally one for each ||| cache	count=1
module	and ||| _vendor requests	count=12
arg	or global ||| encoding	count=1
function_arg	registers [arg_2] ||| [function_1] [arg_2]	count=1
module	prefix and a ||| _vendor distlib	count=1
arg	[arg] method for ||| var [arg] expected	count=2
module	object ||| _vendor msgpack	count=4
function_arg	prefix length [arg_2] ||| [function_1] [arg_2]	count=1
function	if it is not ||| is	count=1
function	the same leading ||| leading	count=1
module	an item ||| packages urllib3 packages	count=1
function	[function] available installationcandidate ||| [function]	count=1
class	export [class] repository ||| [class]	count=4
function	the key associated ||| key	count=1
module	process an ||| distlib	count=1
arg	and ||| pattern	count=1
function	[function_1] final fragment ||| [function_2] [function_1]	count=1
function	od __reversed__() <==> reversed ||| reversed	count=1
arg	an explanation of ||| pattern	count=1
class	this ||| link	count=1
module	an item to ||| _vendor requests packages urllib3 packages	count=1
arg	for loader_type loader_type is ||| loader_type	count=1
arg	[arg] points ||| [arg]	count=3
function	sentinel value and wait ||| wait	count=1
module	a key/value ||| _vendor	count=1
function	in [function_2] ||| [function_2] [function_1]	count=1
arg	if kwarg warner is ||| maker	count=1
module	explanation of ||| _vendor	count=1
function	move all the children ||| children	count=1
arg	data to work ||| data	count=1
module	the same as ||| _vendor requests packages urllib3 packages	count=1
class	this jar ||| requests cookie jar	count=1
function	return repr of ||| repr	count=1
function	[function_1] the children ||| [function_1] [function_2]	count=1
arg	the path will ||| path	count=1
class	a response if any ||| response	count=1
class	bytes from the stream ||| stream	count=1
function	see the ||| init	count=1
function	parse a [function_2] ||| [function_1] [function_2]	count=4
arg	module for an ||| pattern	count=1
class	the parse expression on ||| parser element	count=1
function	delimited [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] the abi ||| [function_1] [function_2]	count=1
function	dictionary from ||| dict from	count=2
class	[class_1] [class_2] ||| [class_1] [class_2]	count=106
arg	specified ast node type ||| node_type	count=1
arg	name for ||| cls name	count=3
module	a list ||| _vendor distlib	count=7
class	for the ipv4 ||| base v4	count=1
function	a download url ||| to download info	count=1
arg	[arg_1] used ||| [arg_2] [arg_1]	count=4
module	and port ||| requests	count=1
function	return an [function_2] ||| [function_1] [function_2]	count=1
function	insert [function_2] ||| [function_2] [function_1]	count=3
function	the [function] // protocol ||| [function]	count=1
class	of ||| base	count=1
function	installed [function_2] ||| [function_2] [function_1]	count=2
arg	a iterator ||| iterator	count=1
class	made by ||| uninstall path set	count=1
arg	object fsrc ||| fsrc	count=1
module	value of a single ||| _vendor distlib	count=1
module	an html ||| distlib	count=1
function	poolmanager ||| init poolmanager	count=1
class	module ||| regex	count=1
module	c{pattern} and c{flags} are ||| _vendor	count=1
function	wrapper ||| syscall wrapper	count=1
function	represent a list of ||| intranges from list	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=7
class	hashes ||| hashes	count=3
class	metadata ||| legacy metadata	count=2
function	from [function_2] ||| [function_1] [function_2]	count=2
arg	the old retries format ||| retries	count=1
arg	machine ||| machine	count=1
arg	the old retries format ||| cls retries redirect	count=1
arg	match the requires_python specifier ||| requires_python	count=1
function	bz2 ||| tarfile	count=1
class	position in the file ||| file	count=1
module	a dictionary with ||| distlib	count=1
class	for display under ||| hash error	count=1
function	supported formats for unpacking ||| formats	count=1
function	'characters' or eof ||| chars until	count=1
arg	use the request ||| request	count=1
module	release of the current ||| _vendor	count=1
function	authentication [function_2] ||| [function_1] [function_2]	count=1
module	the value to ||| packages urllib3	count=1
arg	current node ||| node	count=3
class	prepares the entire request ||| prepared request	count=1
class	object no operation ||| stream	count=1
function	from 'files' that match ||| exclude	count=1
class	specifier like objects ||| specifier	count=2
class	config ||| config	count=1
module	that defines __unicode__ ||| requests packages urllib3	count=1
function	return packed bytes see ||| packb	count=1
function_arg	yield non-empty/non-comment ||| yield lines strs	count=1
module	the value ||| requests packages urllib3	count=2
arg	in project name ||| project_name	count=1
function	send ||| send	count=2
arg	ip_str into ||| cls ip_str	count=1
class	script ||| script maker	count=1
module	check if the given ||| _vendor requests packages urllib3	count=1
function	type or class ||| type	count=1
function	unpack tar/tar gz/tar ||| unpack	count=1
function	urls ||| urls	count=1
arg	this application ||| appname appauthor version	count=5
arg	takes an iterable ||| iterable	count=1
class	for display under ||| error	count=1
module	value to ||| requests packages urllib3	count=1
arg	from src to ||| src	count=3
function	the python version ||| python	count=1
arg	of events to ||| events data	count=1
class	module for an explanation ||| regex	count=1
function	[function] the ||| initialize master working [function]	count=1
function	subscribers ||| subscribers	count=1
function	threads to terminate by ||| threads	count=1
function	the type ||| type	count=1
function	confidence ||| confidence	count=1
function	os-release file ||| os release	count=1
module	a tag name ||| _vendor	count=1
function	[function_1] version of ||| [function_1] [function_2]	count=6
class	wait ||| scraping locator	count=1
module	an pyopenssl certificate ||| packages	count=1
function	detect at bom at ||| detect bom	count=1
module	default ||| _vendor requests	count=1
function_arg	[function_1] python datetime ||| [arg_2] [function_1]	count=4
function	dist ||| dist	count=1
function	see the python c{re} ||| init	count=1
function	[function_1] package ||| [function_2] [function_1]	count=1
function_arg	[function_1] and names ||| _vendor pkg_resources resource manager [function_1] path archive_name [arg_2]	count=2
class	members ||| tar file	count=1
module	a set of distribution ||| _vendor distlib	count=1
function	encode parameters [function_2] ||| [function_2] [function_1]	count=4
module	a name that ||| _vendor distlib	count=1
function	the path url to ||| path url	count=1
module	a decorator that ||| requests	count=1
function	a commit ||| commit	count=1
arg	for reading or writing ||| mode fileobj	count=2
arg	[arg] is unset ||| [arg] fallback expected	count=3
function	appropriate connection adapter for ||| get adapter	count=1
function	has ||| has content	count=1
module	named field returns an ||| _vendor requests	count=1
module	if present or none ||| pkg_resources	count=1
class	the tree ||| tree	count=1
arg	from a zipimporter ||| importer	count=1
module	the archive as a ||| distlib _backport	count=3
module	make a character or ||| _vendor distlib	count=1
function	add the file ||| add	count=1
function	pax ||| pax	count=1
module	string like ||| packaging	count=1
arg	arches [arg] ||| [arg] minor	count=1
function	to spaces before parsing ||| with tabs	count=1
function_arg	[function_1] [arg_2] ||| [function_1] file_path [arg_2]	count=6
function_arg	[function_1] and ||| [arg_2] [function_1]	count=1
function	the file ||| url to file	count=1
function_arg	[function_1] [arg_2] ||| [function_1] link_path [arg_2]	count=3
class	function as-is see the ||| regex	count=1
function_arg	[function_1] each version ||| [function_1] versions [arg_2]	count=2
module	that always returns ||| requests	count=1
arg	[arg_1] [arg_2] ||| [arg_2] url [arg_1]	count=10
function_arg	file // [arg_2] ||| [function_1] [arg_2]	count=3
function	from ||| from ip int	count=2
function	the c{re ||| init	count=1
class	the exception ||| base exception	count=1
function	list of supported formats ||| unpack formats	count=1
arg	to *address* ||| source_address socket_options	count=1
arg	first [arg_2] ||| [arg_2] [arg_1]	count=1
arg	called from ||| conn	count=1
module	a string like ||| _vendor packaging	count=1
arg	the first [arg_2] ||| [arg_2] [arg_1]	count=1
arg	urllib3 ||| connections	count=1
function	the name of the ||| name	count=2
function	[function_1] set and ||| [function_1] [function_2]	count=4
function	return the path ||| path	count=1
function	module for an explanation ||| init	count=1
function	[function_1] zip files ||| [function_2] [function_1]	count=1
module	return ||| _vendor requests	count=1
function	distribution ||| distribution	count=8
arg	the specified [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=4
module	unicode ||| _vendor requests	count=1
function_arg	2 httplib message ||| httplib cls message	count=1
function	dist ||| missing reqs	count=1
function	method of ||| rebuild method	count=1
function	return prefix [function_2] ||| [function_2] [function_1]	count=5
function	we redirect and ||| redirect location	count=1
function	an encoding object or ||| get encoding	count=1
class	raise ||| httpconnection pool	count=1
function	[function_1] legacy ||| [function_2] [function_1]	count=3
module	to insert ||| _vendor html5lib treebuilders	count=1
function	same host as ||| same host	count=2
class	dist-info ||| installed distribution	count=3
function_arg	directory of [arg_2] ||| [function_1] [arg_2]	count=2
module	object no operation ||| distlib	count=1
class	selector keys ||| base selector	count=1
function	next attribute in ||| attribute	count=1
module	in a ||| _vendor	count=1
function	in ||| params	count=1
module	of a single ||| _vendor distlib	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=160
function_arg	[function_1] the paths ||| [function_1] [arg_2]	count=2
arg	of algorithm names pointing ||| gots	count=1
arg	into a ||| cls	count=1
module	to an http server ||| _vendor distlib	count=1
module	and disable the ||| requests	count=1
module	up a ||| distlib	count=1
module	changes ||| req	count=1
module_class	[module_1] environment ||| [module_1] [class_2]	count=8
arg	[arg_1] args into ||| [arg_2] [arg_1]	count=1
module	if given ||| _vendor requests packages urllib3	count=1
arg	dist to ||| dist	count=1
module	of a symlink ||| distlib _backport	count=1
module	is normally one ||| _vendor distlib	count=1
function	declare namespace packages ||| namespace handler	count=1
arg	if size is not ||| size	count=1
module	random url on the ||| _vendor requests packages urllib3	count=1
function	to find a ||| find	count=1
function	an explanation of the ||| init	count=1
module	one for ||| _vendor distlib	count=1
module	object as a ||| distlib _backport	count=2
function	extract ||| extract member	count=1
function	cache control ||| cache control	count=2
class	be a requirement ||| install requirement	count=1
function	headers needed by ||| headers	count=1
class	the record entries and ||| installed	count=1
module	a sequence ||| _vendor	count=1
class	as-is see ||| regex	count=1
function	to ||| is	count=1
class	the stream or queue ||| input stream	count=1
arg	a given url ||| url	count=1
class	ip address ||| base	count=1
arg	called [arg_2] ||| [arg_2] [arg_1]	count=4
arg	initializes a urllib3 ||| connections maxsize	count=1
module	only a ||| _vendor distlib	count=1
class	the entry [class_2] ||| [class_2] [class_1]	count=4
function	lines ||| lines	count=2
arg	[arg_1] and version ||| [arg_1] [arg_2]	count=1
module	return ||| req	count=1
arg	*address* [arg_2] ||| [arg_2] [arg_1]	count=2
arg	path ||| path replace	count=1
module	compile()} function as-is ||| _vendor	count=1
function	list of supported ||| supported	count=1
arg	each version specified ||| noarch platform impl	count=1
module	check if the given ||| requests	count=1
function	a distro release ||| distro release	count=2
class	whether or ||| base	count=1
arg	of path exists ||| path	count=2
function	name of [function_2] ||| support [function_2] [function_1]	count=2
arg	distribution currently satisfying this ||| auto_confirm	count=1
arg	name for ||| name	count=3
function	target member ||| target	count=1
function_arg	[function_1] the url ||| [function_1] [arg_2]	count=3
function	the schemes [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] first ||| [arg_2] [function_1]	count=2
arg	file using the paths ||| paths	count=1
function	if ||| with context	count=1
class	the ip address as ||| ipaddress	count=1
class	stream up to ||| stream	count=1
function_arg	version of [arg_2] ||| [function_1] [arg_2]	count=2
module	operation should ||| _vendor	count=1
class	object for member name' ||| file	count=1
arg	events ||| fileobj events data	count=1
function	resource finder ||| finder	count=2
arg	entry is ||| entry	count=1
class	me for display ||| hash error	count=1
function	return ||| packb	count=1
class	stream up to ||| htmlunicode input stream	count=1
arg	url they came ||| url	count=1
function	compatible with ||| compatible	count=2
class	locator ||| scraping locator	count=1
function	read ||| read	count=2
module	add ||| urllib3 packages	count=1
function	mapping ||| map	count=1
arg	if entry is ||| entry	count=1
class	of the ip ||| base	count=1
function_arg	child of [arg_2] ||| [arg_2] [function_1]	count=1
function	split a name ||| split	count=1
function	points ||| is	count=1
module	of self ||| _vendor pkg_resources	count=1
class	be ||| stream	count=1
arg	by its label ||| label	count=1
function	string is ||| is	count=1
module	detection ||| html5lib	count=1
function	name ||| name	count=3
arg	entry ||| entry	count=1
arg	ip_str ||| ip_str	count=1
arg	is either 'r' to ||| name mode fileobj format	count=1
function	all of the exported ||| exported	count=1
function_arg	gz/tar bz2 filename ||| tarfile filename	count=1
module	given ||| requests packages urllib3 util	count=3
class	bytes from the file ||| file	count=1
module	is the same as ||| _vendor requests packages urllib3 packages	count=1
class	me for display ||| error	count=1
class	tarinfo [class_2] ||| [class_2] [class_1]	count=5
module	archive as a list ||| _vendor distlib _backport	count=1
function	named metadata resource ||| metadata	count=1
function	extracted wheel ||| wheel	count=1
arg	the tarinfo [arg_2] ||| [arg_1] [arg_2]	count=1
class	from the file if ||| file	count=2
arg	body ||| body	count=1
class	pretty-printer for parsed results ||| parse results	count=1
function	the prefix length into ||| ip int from prefix	count=1
class	any ansi ||| ansi	count=1
function	load a manifest at ||| load	count=1
function	master working [function_2] ||| [function_2] [function_1]	count=3
module	get ||| _vendor html5lib treewalkers	count=1
module	given an ||| requests packages	count=1
arg	ns-package subpath ||| path_item packagename module	count=1
class	the ipv4 address ||| v4	count=1
module	and raise an exception ||| _vendor distlib	count=1
function	[function_1] domains ||| [function_1] [function_2]	count=4
module_class	working [class_2] ||| [module_1] [class_2]	count=4
class	address ||| ipaddress base	count=1
function	suggest ||| suggest	count=1
function	[function_1] the installed ||| [function_2] [function_1]	count=1
function	copy [function_2] ||| [function_2] [function_1]	count=4
function	our cached ||| cached response	count=1
module	version of a ||| distlib	count=1
function	has ||| has	count=1
function	[function_1] [function_2] found ||| support [function_2] [function_1]	count=5
function	tree fragment container ||| fragment	count=1
class	made by remove() ||| path set	count=1
function	waits for io ||| wait for io	count=1
class	record entries ||| installed	count=1
function	[function_1] [function_2] class for various types ||| [function_1] tree [function_2] treetype implementation	count=1
module	to the c{re compile()} ||| _vendor	count=1
function_arg	a options request ||| options url	count=1
function	[function] events ||| [function]	count=2
function	minor ||| minor	count=1
module	:class ||| _vendor requests	count=1
module	of the current ||| _vendor	count=1
class	[class_1] [class_2] ||| [class_2] [class_1]	count=18
arg	http ||| params	count=1
function	if the version is ||| check version	count=1
function	return the [function_2] ||| [function_1] file [function_2]	count=2
class	parsed ||| parse	count=2
module	a filesystem or ||| _vendor pkg_resources	count=1
function	of socket makefile from ||| makefile	count=1
function	[function_1] link-local ||| [function_1] [function_2]	count=2
module	value to use ||| _vendor requests packages urllib3 util	count=1
function_arg	installrequirement from [arg_2] ||| [arg_2] [function_1]	count=5
class	files ||| manifest	count=1
arg	working_set this calls the ||| installer	count=1
function	of tree with ||| tree	count=1
function_arg	[function_1] dictionary on ||| [arg_2] [function_1]	count=2
function	to see if ||| to	count=1
arg	element and its ||| element	count=1
function_arg	[function_1] headers ||| [arg_2] [function_1]	count=5
function_arg	state dir [arg_2] ||| [function_1] [arg_2]	count=1
module	req name ||| req	count=1
arg	a set of events ||| fileobj events	count=1
function	return url of the ||| get url	count=1
function	file located in ||| distinfo	count=1
module	c{flags} are ||| _vendor	count=1
function	we redirect ||| redirect	count=1
arg	treewalker walker ||| walker	count=1
function	the default [function_2] ||| [function_2] [function_1]	count=3
function	deregister ||| deregister	count=1
module	does an ||| _vendor distlib	count=1
arg	for ||| pattern	count=1
class	a :class preparedrequest <preparedrequest> ||| request	count=1
module	present or ||| pkg_resources	count=1
module	base class ||| _vendor packaging	count=1
function	documentation ||| documentation	count=1
class	pools ||| pool	count=1
module	compile()} function as-is see ||| _vendor	count=1
arg	postprocessing of tempname ||| tempname	count=1
function	the file cache path ||| to file path	count=1
class	a ||| link	count=1
class	a response if ||| response	count=1
function	hash ||| hash	count=3
function	[function_1] file ||| [function_2] [function_1]	count=11
function	don't ||| no	count=1
arg	temp_dir ||| temp_dir hashes	count=1
function	it is ||| is ref	count=1
function	packer for options ||| packb	count=1
function	current column within ||| col	count=1
function	the target member ||| target	count=1
function	the exported [function_2] ||| [function_1] [function_2]	count=2
function	representing ||| init	count=1
function	compare two digests ||| const compare	count=1
function	[function_1] pip delete ||| [function_2] [function_1]	count=1
class	of ||| ipaddress base	count=1
function	supported formats ||| unpack formats	count=1
function	node as a child ||| append child	count=1
module	a single ||| _vendor webencodings	count=4
function	dirty work ||| get default values	count=1
function	file return the value ||| file	count=1
module_class	[module_1] point from ||| [module_1] entry [class_2]	count=1
function_arg	[function_1] for project_name ||| [function_1] candidates [arg_2]	count=1
class	the [class] ||| [class]	count=15
function_arg	asserts whether [arg_2] ||| [arg_2] [function_1]	count=3
module	object ||| msgpack	count=3
arg	the current subnet ||| prefixlen_diff new_prefix	count=1
function	after [function_2] ||| [function_2] [function_1]	count=2
arg	[arg] is ||| [arg] fallback expected	count=3
module	and ||| pkg_resources	count=2
function	as [function] packed bytes ||| [function] int to	count=2
function	print the ||| print	count=1
function	parse ||| parse	count=11
class	of the stream if ||| htmlbinary input stream	count=1
class	changes previously made by ||| uninstall	count=1
class	return ||| linux distribution	count=1
function	file [function_2] ||| [function_2] [function_1]	count=1
arg	index in ||| index	count=1
function	headers needed by the ||| headers	count=1
function	an archive ||| archive	count=1
function	the reverse [function_2] ||| [function_1] [function_2]	count=2
module_class	is protected [module_1] [class_2] ||| [module_1] [class_2] init user pw	count=1
module	the object as a ||| distlib _backport	count=2
function	open ||| open	count=1
class	summary ||| hash error	count=1
function	write ||| write	count=8
function	distributions that are like ||| like	count=1
module	no ||| _vendor	count=1
function	of supported formats for ||| get unpack formats	count=1
function	change the method ||| rebuild method	count=1
function	the paths in ||| paths	count=1
function	all ||| all	count=2
module	return packed bytes ||| _vendor msgpack	count=1
arg	in project ||| project_name	count=1
module	release of ||| _vendor	count=1
class	[class_1] distribution as ||| [class_2] [class_1]	count=3
function	[function_1] is ||| [function_2] [function_1]	count=8
module	and should be ||| packages urllib3 util	count=1
function	tuple auth for a ||| auth	count=1
function	the pid from ||| read pid	count=1
class	any ansi [class_2] ||| [class_1] [class_2] win32	count=1
class	of me for display ||| hash	count=1
function	same leading [function_2] ||| [function_2] [function_1]	count=1
module	node ||| html5lib treebuilders	count=1
function	spaces before parsing ||| parse with tabs	count=1
function	default user [function_2] ||| [function_1] [function_2]	count=1
module	that defines __unicode__ ||| requests packages	count=1
function	with a [function_2] ||| [function_1] [function_2]	count=1
function	to a ||| to	count=3
class	objects ||| base	count=1
function	to update ||| update	count=1
arg	the old retries format ||| retries redirect	count=1
arg	dest ||| dest	count=1
function	a suitable ||| process	count=1
class	the changes previously ||| path set	count=1
function	build [function_2] ||| [function_2] [function_1]	count=5
arg	object fsrc [arg_2] ||| [arg_1] [arg_2]	count=1
function	[function_1] the children ||| [function_2] [function_1]	count=1
function	remove node [function_2] ||| [function_2] [function_1]	count=2
function	the current position in ||| position	count=1
class	address as a string ||| base	count=1
class	object ||| stream	count=1
module	is normally ||| _vendor	count=1
function	[function_1] a legacy ||| [function_1] [function_2]	count=4
function	represent a list of ||| from list	count=1
class	returns the [class_1] [class_2] ||| _vendor [class_1] [class_2]	count=1
function	method to split ||| split	count=1
class	given expression as a ||| parser element	count=1
function	returns a hash value ||| hash	count=1
class	name' or the file ||| file	count=1
class	of the option parser ||| option parser	count=1
class	results ||| results	count=4
function	of supported formats for ||| unpack formats	count=1
class	the bazaar ||| bazaar	count=1
module	the value to ||| _vendor requests packages urllib3	count=1
arg	file-like object into a ||| doc treebuilder namespacehtmlelements	count=1
function	the hash ||| hash	count=1
class	[class_1] object for ||| [class_1] [class_2]	count=1
module	of ||| _vendor pkg_resources	count=1
module	an encoding ||| webencodings	count=1
module	a name that will ||| distlib	count=1
module	given file-like ||| requests packages urllib3	count=1
function	return an [function_2] ||| [function_2] [function_1]	count=1
arg	urllib3 ||| connections maxsize	count=1
function	[function] is fully ||| clean [function]	count=3
module	get the value to ||| packages urllib3 util	count=1
module	of a symlink ||| _vendor distlib	count=1
arg	a file's [arg] of ||| [arg]	count=1
arg	entry is unspecified ||| entry	count=1
arg	*address* and return ||| source_address socket_options	count=1
module	the ||| _vendor distlib _backport	count=2
function	list of matching ||| list	count=1
module	[module_1] single ||| [module_1] [module_2]	count=4
function	current platform ||| platform	count=1
module_class	[module_1] [class_2] extended ||| [module_1] _backport [class_2] info	count=2
function	package finder ||| build package finder	count=2
function	the pip delete ||| delete	count=1
module	for each ||| distlib	count=1
function	list of integers ||| intranges from list	count=1
function	of an os-release file ||| os release	count=1
module	and returns it ||| requests	count=1
function	get the hash ||| get	count=1
module	archive ||| _backport	count=1
module_class	[module_1] tarinfo object ||| [module_1] _backport [class_2] next	count=1
function	bytes see ||| packb	count=1
arg	file's [arg] ||| [arg]	count=3
module	of self that ||| _vendor pkg_resources	count=1
function	is a member ||| is	count=1
arg	due to eintr ||| recalc_timeout	count=1
function	used to insert ||| insert	count=1
class	of the exception with ||| exception	count=1
arg	python c{re} module ||| pattern	count=1
arg	and expressions ||| expr	count=1
module	normally one for ||| _vendor	count=1
class	the changes ||| uninstall path set	count=1
function_arg	[function_1] request ||| [function_1] [arg_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] prefix string [arg_2]	count=4
function	we redirect ||| redirect location	count=1
function	parse a string ||| parse	count=1
function	[function_1] dropped ||| [function_1] [function_2]	count=4
class	marker ||| marker	count=1
class	c{parseresults} object ||| results	count=1
function	json-encoded content ||| json	count=1
module	as-is see ||| _vendor	count=1
class	all ||| distribution	count=1
function	proxymanager [function_2] ||| [function_2] [function_1]	count=1
function	is a suitable ||| process	count=1
function	final fragment ||| fragment	count=1
class	as a string ||| base	count=1
function_arg	cookiejar [arg_2] ||| [function_1] [arg_2]	count=2
arg	for each version specified ||| noarch platform impl	count=1
arg	files for posting to ||| files	count=1
module	process a ||| distlib _backport	count=1
function	it is not anything ||| is ref	count=1
function	script ||| script	count=2
function	an extracted wheel ||| wheel	count=1
function_arg	prepare a [arg_2] ||| [arg_2] [function_1]	count=1
arg	for the url ||| url	count=1
class	ip ||| base	count=1
function	dir ||| config dir	count=1
module	all info ||| _vendor	count=1
module	field returns an ||| _vendor requests	count=1
function	with authentication ||| auth	count=1
module	create a ||| distlib	count=2
module	this must be ||| _vendor requests packages urllib3 util	count=1
module	a given ||| _vendor requests	count=5
function	multipart ||| multipart	count=1
module	attempts ||| requests packages urllib3 util	count=1
function	location in [function] for ||| get [function]	count=1
arg	download_dir for previously ||| download_dir hashes	count=1
module	is the same as ||| requests packages urllib3 packages	count=1
function	[function_1] number of ||| [function_2] [function_1]	count=3
function	requirement [function_2] ||| [function_2] [function_1]	count=1
arg	key ||| key	count=1
function	feed a ||| feed	count=1
function_arg	samefile [arg_2] ||| [arg_2] [function_1]	count=1
module	ip ||| _vendor	count=1
function	returns url ||| get	count=1
arg	also supports optional domain ||| domain	count=1
module	a gnu longname ||| _vendor distlib	count=1
class	the parameters ||| regex	count=1
arg	[arg] k ||| [arg]	count=1
class	metadata field ||| legacy metadata	count=1
module_class	of a [class_2] ||| [module_1] [class_2]	count=2
class	a registered ||| base selector	count=1
class	changes previously made ||| uninstall path	count=1
module	[module_1] a string ||| [module_1] [module_2]	count=1
module	_stream object no ||| _backport	count=1
function_arg	[function_1] a resource ||| [arg_2] [function_1]	count=3
module	on ||| _vendor requests packages	count=3
function	return all ||| get all	count=2
arg	the specified [arg] ||| [arg]	count=1
function	tree with built-in support ||| tree	count=1
function	minor version number ||| minor version	count=1
module	_stream object no operation ||| _vendor	count=1
module_class	[module_1] file ||| [module_1] tar [class_2]	count=1
module	linux distribution as a ||| _vendor	count=1
class	returns a ||| parse	count=1
module	packer for ||| _vendor msgpack	count=1
class	entry ||| entry	count=1
function	register a ||| register hook	count=1
function	transmission and returns ||| prepare	count=1
function	the target member of ||| link target	count=1
class	check if [class] is ||| [class]	count=1
function	current ||| current	count=1
function	stale for ||| stale	count=1
function	[function] entries ||| list [function]	count=3
class	entry point from ||| entry point	count=1
function	the prefix ||| int from prefix	count=1
module	named field returns ||| _vendor requests	count=1
class	requirement ||| install requirement	count=3
function	get ||| get	count=18
function	the children ||| reparent children	count=1
arg	to the user-shared data ||| multipath	count=1
arg	string s to the ||| s	count=1
module	for reading a ||| distlib _backport	count=1
function_arg	[function_1] to a ||| [function_1] [arg_2]	count=3
module	a single variable using ||| distlib	count=1
module	an ||| urllib3 packages	count=1
function	wait for ||| wait	count=1
function	is not anything ||| is	count=1
class	element ||| element	count=1
function_arg	[function_1] pattern ||| [function_1] to re [arg_2]	count=1
function	object is [function_2] ||| [function_2] [function_1]	count=1
module	me ||| core	count=1
function_arg	control headers ||| control headers	count=1
function	as-is ||| init	count=1
function	update the ||| update	count=1
class	a working set ||| working set	count=2
function_arg	[function_1] a key/value ||| [arg_2] [function_1]	count=1
function	next attribute in the ||| attribute	count=1
arg	the url ||| url proxies	count=1
module	remove() ||| req	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=52
function	item from [function] ||| [function] release	count=2
module	generate a list of ||| distlib	count=2
function	[function_1] entries in ||| [function_2] [function_1]	count=5
module	packed bytes ||| _vendor	count=1
function	file ||| file	count=12
class	the cache ||| resource cache	count=1
module	that defines ||| requests packages urllib3 packages	count=1
arg	for this application ||| appname	count=2
module	a prefix and a ||| distlib	count=1
class	of the ip address ||| ipaddress base	count=1
class	the entry [class_2] ||| [class_1] [class_2]	count=4
module	of all info ||| _vendor	count=1
function_arg	string to python ||| to datetime fmt	count=1
function_arg	[function_1] a path ||| [function_1] [arg_2]	count=1
class	parse results ||| parse results	count=3
function	[function_1] command for ||| [function_2] [function_1]	count=1
class	start of the stream ||| stream	count=1
arg	called [arg_2] ||| [arg_1] [arg_2]	count=4
module	given a ||| _vendor requests	count=4
arg	fsrc to file-like ||| fsrc	count=1
function	html source ||| htmltags	count=1
class	registered file object ||| base selector	count=1
function_arg	from a key/value ||| from dict cookie_dict	count=2
arg	the method ||| method	count=1
arg	with the given *label* ||| x y label	count=1
function	file url ||| url	count=1
arg	optional domain and path ||| default domain path	count=1
arg	major minor ||| major minor	count=1
function	candidate for a download ||| download info	count=1
module	an http ||| _vendor distlib	count=1
function	given distribution object is ||| dist is	count=1
module	url on the server ||| _vendor requests packages urllib3	count=1
class	a ||| ipaddress	count=1
module	in a ||| distlib	count=1
module_class	[module_1] metadata ||| [module_1] [class_2]	count=1
module	ip address as a ||| _vendor	count=1
function	[function_1] keyword ||| [function_2] [function_1]	count=3
module	object no operation ||| _backport	count=1
arg	to a [arg_2] ||| [arg_1] [arg_2]	count=1
function	proxymanager for ||| proxy manager for	count=1
function_arg	remove a subscriber ||| remove event subscriber	count=1
module	passed in and ||| requests packages urllib3	count=1
arg	download_dir for previously downloaded ||| link download_dir hashes	count=1
arg	to *address* and return ||| source_address socket_options	count=1
arg	true if path ||| path	count=1
class	method use requirement ||| requirement	count=1
arg	c{re ||| pattern	count=1
function	working [function_2] ||| [function_1] [function_2]	count=3
class	parser ||| parser	count=2
function_arg	path [arg_2] ||| [function_1] [arg_2]	count=4
function	the master working ||| master working	count=2
function	current backoff ||| backoff	count=1
arg	the working_set ||| working_set	count=1
function_arg	zip files [arg_2] ||| [arg_2] [function_1]	count=1
function	user [function_2] ||| [function_1] [function_2]	count=2
module	a directory tree ||| distlib _backport	count=1
function	uninstall the ||| uninstall	count=1
module	on the server that ||| packages urllib3	count=1
class	of ||| ipaddress	count=1
module	a string or ||| pkg_resources	count=2
module	by ||| req	count=1
function	a proxy for ||| proxy	count=1
function	with authentication ||| get auth	count=1
function	master ||| build master	count=1
module	files and ||| core	count=1
function_arg	filename [arg_2] ||| [arg_2] [function_1]	count=1
arg	with [arg] incompatible wheel-version ||| [arg]	count=1
function_arg	add dist if ||| add dist	count=1
class	of - [class_2] ||| [class_2] [class_1]	count=1
function	return urllib3 proxymanager for ||| proxy manager for	count=1
function	insert an ||| insert	count=1
module	_stream object no operation ||| distlib _backport	count=1
class	and ||| regex	count=1
class	operation should ||| stream	count=1
function	will raise a ||| raise	count=1
arg	url ||| url session	count=1
arg	package ||| package	count=1
function	prefix length into a ||| prefix	count=1
arg	as shown in ||| pretty best	count=1
function	the path for the ||| path	count=1
function	paths in the ||| paths	count=1
class	summary of me for ||| error	count=1
class	option parser possible ||| config option parser	count=2
module	take a list of ||| _vendor distlib	count=1
class	of - [class_2] ||| [class_1] [class_2]	count=1
arg	fsrc to [arg_2] ||| [arg_2] [arg_1]	count=1
module	that hold a ||| distlib	count=1
module	g numpy or ||| _vendor pkg_resources	count=1
module	character ||| packages chardet	count=1
function_arg	[function_1] possibly ||| [function_1] [arg_2]	count=2
class	of ||| hash	count=1
function	a python 2 httplib ||| httplib	count=1
module	been started so ||| _vendor requests packages urllib3 util	count=1
class	the selector this ||| base selector	count=1
arg	[arg_1] kwarg warner ||| [arg_2] [arg_1]	count=3
function	look for the ||| jump to	count=1
module	string or a ||| _vendor pkg_resources	count=2
function	master ||| master	count=1
module	named field returns ||| _vendor requests packages	count=1
function_arg	return absolute [function_1] [arg_2] ||| [function_1] [arg_2]	count=6
class	of the option parser ||| config option parser	count=1
function	for a download ||| download info	count=1
function	[function_1] working set ||| [function_1] [function_2]	count=3
module	function ||| _vendor	count=1
function	an installationcandidate ||| link package	count=1
function_arg	namespace packages importer_type ||| namespace handler importer_type	count=1
module	the object as a ||| _vendor distlib	count=1
function	extract the tarinfo object ||| extract	count=1
function	[function_1] distribution files ||| [function_2] [function_1]	count=1
class	from the stream up ||| stream	count=1
function_arg	[function_1] of expressions ||| [function_1] [arg_2]	count=2
class	ip address as ||| ipaddress	count=1
function	is included on ||| is	count=1
module	same as :meth urllib3 ||| _vendor requests packages urllib3	count=1
module	of a ||| distlib _backport	count=2
function	remove a ||| remove	count=1
module	determines if this points ||| core	count=1
module_class	[module_1] script ||| [module_1] [class_2]	count=2
module	value to use ||| _vendor requests packages urllib3	count=1
arg	of fields based ||| fields	count=1
module	packer for options ||| _vendor msgpack	count=1
function	[function] if found ||| get [function]	count=3
module	returns true if the ||| requests	count=1
function	connection is [function_2] ||| [function_2] [function_1]	count=3
arg	from a dictionary ||| info	count=1
function	an ||| lookup	count=1
function_arg	send a [arg_2] ||| [function_1] [arg_2]	count=1
class	a c{parseresults} ||| parse	count=1
function_arg	[function_1] refnode in ||| [arg_2] [function_1]	count=1
class	summary of ||| hash	count=1
module_class	[module_1] object this ||| [module_1] [class_2]	count=2
arg	a member from ||| member	count=1
function	requirements of [function] that aren't ||| get [function]	count=1
function	containing the schemes names ||| scheme names	count=1
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=8
class	the option parser possible ||| config option parser	count=1
function	as ||| as	count=1
function	a suitable [function_2] ||| [function_1] [function_2]	count=4
arg	of characters from ||| characters opposite	count=1
arg	object ||| address	count=1
function_arg	[function_1] number ||| [arg_2] [function_1]	count=1
function	the parameters c{pattern} ||| init	count=1
function	yield named metadata ||| metadata	count=1
function_arg	data dir [arg_2] ||| [function_1] [arg_2]	count=3
function	located under ||| get distinfo file	count=1
module	object as a ||| distlib	count=1
function	return the reverse ||| reverse	count=1
function_arg	subscribers [arg_2] ||| [function_1] [arg_2]	count=1
arg	given major minor and ||| major minor	count=1
arg	tarfile's mode ||| mode	count=1
class	tell whether or ||| lock base	count=1
function_arg	[function_1] loader_type loader_type ||| [function_1] type [arg_2]	count=2
module	returns a ||| _vendor requests packages	count=2
function	a treebuilder ||| builder	count=1
class	start of the stream ||| htmlbinary input stream	count=1
function_arg	[function_1] into ||| [arg_2] [function_1]	count=2
arg	modifier ||| modifier	count=1
class	[class_1] point from ||| [class_1] [class_2]	count=1
function_arg	string into a ||| string cls	count=1
module	operation ||| distlib	count=1
function	[function_1] cache ||| [function_1] [function_2]	count=1
function	yields tuples of commit ||| get full refs	count=1
arg	see the ||| pattern	count=1
module_class	[module_1] heading ||| [module_1] [class_2]	count=8
function	[function] the ||| prefix [function]	count=1
class	python c{re} ||| regex	count=1
function	a multipart ||| multipart	count=1
module	present or ||| _vendor pkg_resources	count=1
function	the installed [function_2] ||| [function_2] [function_1]	count=2
class	a string ||| ipaddress base	count=1
function	marker ||| marker	count=1
function	insert [function_2] ||| [function_1] from [function_2]	count=1
class	response as ||| response	count=1
module	a string ||| distlib _backport	count=1
function	return a readable file-like ||| get	count=1
module	perform ||| _vendor requests packages urllib3	count=1
class	named parse [class_2] ||| [class_1] [class_2]	count=1
arg	[arg_1] kwarg warner ||| install [arg_1] [arg_2]	count=3
class	of the ||| ipaddress	count=1
module	operation ||| _backport	count=1
arg	either 'r' ||| format	count=1
class	a c{parseresults} object ||| parse results	count=1
class	this distribution is the ||| distribution	count=1
module	[module] tarinfo object ||| [module]	count=1
function_arg	distributions [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	check [arg_2] ||| [arg_2] [function_1]	count=4
function	[function_1] dropped ||| [function_2] [function_1]	count=5
arg	events to monitor ||| fileobj events data	count=1
class	info ||| linux distribution	count=1
arg	hook ||| event hook	count=1
arg	of specifications ||| specifications	count=1
function	[function_1] exported ||| [function_2] [function_1]	count=1
class	value for this specifier ||| specifier	count=1
function_arg	response [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	decode the data ||| decode data	count=2
arg	return size bytes ||| size	count=1
module	for a filesystem or ||| _vendor pkg_resources	count=1
function	path to a file ||| to	count=1
function	an edge from distribution ||| edge	count=1
class	be a ||| working set	count=1
arg	to a ||| name	count=1
function	encode parameters ||| encode	count=1
module	given [module_2] ||| [module_1] [module_2]	count=13
module	request ||| requests packages urllib3	count=1
function	prepend ||| prepend	count=1
class	compile()} ||| regex	count=1
class	registered file object ||| selector	count=1
function	prefix length [function_2] ||| [function_2] [function_1]	count=5
arg	initializes a urllib3 ||| connections	count=1
arg	corresponds to tarfile's mode ||| mode	count=1
arg	dist ||| dist	count=4
function	entry [function_2] ||| [function_2] [function_1]	count=2
arg	of bytes ||| bytes	count=1
function_arg	[function_1] distribution to ||| [function_1] [arg_2]	count=1
module	normalize ||| _vendor pkg_resources	count=1
function	to a regular expression ||| to	count=1
function	target member of ||| link target	count=1
function	edge from ||| edge	count=1
function	from ||| from	count=10
function	that are required by ||| required	count=1
module_class	[module_1] shell-like ||| [module_1] [class_2]	count=2
function	path to [function_2] ||| [function_2] [function_1]	count=2
module	that ||| _vendor requests packages urllib3	count=1
arg	in specified paths and ||| paths	count=1
function	in [function] for archive_name ||| get [function]	count=1
function	digest ||| digest	count=1
arg	parameters c{pattern} and ||| pattern	count=1
function	a path to ||| to	count=1
function	urllib3 proxymanager for ||| proxy manager for	count=1
class	a tarball ||| link	count=1
function	return all [function_2] ||| [function_1] [function_2]	count=27
module	the current linux ||| _vendor	count=1
function	the named resource an ||| resource	count=1
function	octet ||| octet	count=1
module	a tuple containing ||| _vendor distlib _backport	count=2
function	gzip compressed fileobj ||| read gz	count=1
class	the ||| uninstall path	count=1
function	path to ||| to	count=1
class	repo ||| version control	count=2
arg	characters from ||| characters	count=1
module	given an pyopenssl ||| _vendor requests packages urllib3 contrib	count=1
function	transmission and ||| prepare	count=1
function	of supported formats ||| formats	count=2
function	python c{re} module ||| init	count=1
class	a registered file ||| base selector	count=1
function	timeout? will raise ||| raise	count=1
class	c{pattern} and ||| regex	count=1
function	build a dictionary similar ||| build	count=1
arg	a bitwise netmask args ||| prefixlen	count=1
arg	a distribution to the ||| dist	count=1
function	[function_1] [function_2] if found ||| [function_2] [function_1]	count=10
class	object ||| parse	count=1
class	by remove() ||| path set	count=1
function	[function_1] and unarchiving ||| [function_2] [function_1]	count=2
arg	archive? as well as ||| parent	count=1
function	sort of the ||| sort	count=1
function	encodings [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] given url ||| [arg_2] [function_1]	count=1
function	a dist [function_2] ||| [function_2] [function_1]	count=2
class	pool ||| pool	count=2
module	ssl ||| packages urllib3 util	count=1
