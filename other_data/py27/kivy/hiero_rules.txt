module	physical line checks and ||| tools pep8checker	count=1
arg	a given [arg] i ||| [arg]	count=1
module	runtime ||| packaging pyinstaller_hooks	count=1
function	axis ||| joy axis	count=1
module_class	a [class_2] ||| [module_1] [class_2]	count=8
class	[class_1] loader after ||| [class_2] [class_1]	count=2
module_class	to the [class_2] ||| [module_1] [class_2]	count=10
arg	to catch ||| exception _traceback	count=1
class	[class_1] rules ||| [class_2] [class_1]	count=6
module	joystick has [module] hat/dpad ||| [module]	count=1
function	coordinates to ||| to	count=3
class	once before run() ||| event loop	count=1
arg	the data selection ||| data	count=1
class	initialise the ||| base	count=1
class	initialise ||| base	count=1
module	implementation doesn't support ||| window	count=1
module	from ||| core audio	count=2
class	the :meth read ||| parser	count=1
function	dpi ||| dpi	count=1
function	properties to [function_2] ||| [function_1] [function_2]	count=1
function	when the instance has ||| on key down	count=1
function	default config ||| config	count=1
class	and ||| loop	count=1
function	[function_1] to a ||| [function_2] [function_1]	count=3
class	layout manager ||| layout manager behavior	count=1
arg	coordinates see ||| x y relative	count=2
arg	passed either via arglist ||| arglist	count=1
module	a list with $bits ||| core	count=1
arg	widget that set the ||| widget	count=1
function	the file ||| file	count=1
class	display when being selected ||| selectable	count=1
function	for fonts ||| fonts	count=1
module	call callbacks ||| core	count=1
function_arg	options [arg_2] ||| [function_1] [arg_2]	count=3
function	create [function_2] ||| [function_2] [function_1]	count=2
function	default config ||| update config	count=1
function	list ||| list	count=3
class	call callbacks ||| loop base	count=1
function	index of the ||| of	count=3
class	reset ||| scroll effect	count=1
function	pass the filepath [function_1] [function_2] ||| [function_1] [function_2]	count=1
module	implicitly converted to a ||| core	count=1
function	delete text [function_2] ||| [function_1] word [function_2]	count=4
function	[function_1] start ||| [function_1] [function_2]	count=3
function	around ||| around	count=2
module	create osc message and ||| lib osc	count=1
class	associates ||| recycle data adapter	count=1
function	compound statements ||| compound statements	count=1
class	callbacks registered using eventloop ||| event loop	count=1
function	selects a range ||| range	count=1
arg	program ||| prog version	count=1
function	when the cursor leaves ||| on cursor leave	count=1
arg	internal loading a network ||| filename kwargs	count=1
module	of matching lines ||| tools pep8checker	count=1
function	find ||| find	count=3
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=4
function_arg	released [arg_2] ||| [function_1] key [arg_2]	count=1
class	called) but ||| app	count=1
function	[function_1] fonts ||| [function_1] [function_2]	count=4
arg	order to catch ||| _traceback	count=1
module	[module] string removing ||| [module]	count=1
function	[function_1] [function_2] contained in a specific ||| behaviors toggle button behavior [function_1] [function_2] groupname	count=3
function	returns the dict ||| get	count=1
function	indentation ||| continued indentation	count=1
function	main function that starts ||| run	count=1
function	want to dispatch an ||| dispatch	count=1
function	[function_1] cursor leaves ||| [function_1] [function_2]	count=3
function	[function_1] event ||| [function_2] touch [function_1]	count=1
function	extraneous [function_2] ||| [function_1] [function_2]	count=1
class	via the ||| factory base	count=1
arg	this invalidates all previously ||| p	count=1
function	headers of the ||| headers	count=1
arg	use != instead ||| logical_line	count=1
class	configuration to the ||| config parser	count=1
module	call ||| core camera	count=2
module	the configuration to ||| core	count=1
function	the viewport changes and ||| refresh from viewport	count=1
module	via the ||| core	count=1
function	[function_1] tap ||| [function_2] [function_1]	count=6
function_arg	parent [arg_2] ||| [function_1] [arg_2]	count=1
module_class	[module_1] dpi ||| [module_1] [class_2]	count=4
function	of all the keys ||| keys	count=1
function	iterate over all nodes ||| iterate all nodes	count=1
function	the viewport ||| viewport	count=1
arg	to numpoints points ||| numpoints orientation_sens	count=1
class	be ||| behavior	count=1
function_arg	a point [arg_2] ||| [arg_2] [function_1]	count=5
arg	s ||| s	count=1
module	[module] actionview ||| [module]	count=3
module	the :meth ||| core	count=1
function	in one ||| read	count=1
function	is ||| is	count=5
function	maximum ||| maximum	count=1
function	size hint ||| hint with	count=1
function	less than [function_2] ||| [function_2] [function_1]	count=4
function	cached version of the ||| cached	count=1
module	a configuration ||| core	count=1
function	get statistics for ||| get statistics	count=1
function	of the file ||| of file	count=3
arg	touch on [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] for fonts ||| [function_1] [function_2]	count=5
class	registered ||| event	count=1
class	menu buttons unless ||| menu	count=1
class	implementation ||| window	count=1
function	[function_1] keyboard in ||| [function_1] [function_2]	count=6
function_arg	add [arg_2] ||| [arg_2] [function_1]	count=1
class	file ||| sound	count=1
class	return the ||| event loop	count=1
arg	in the database ||| classname	count=1
arg	b c ||| b c	count=1
function	velocity according to the ||| velocity	count=1
arg	classname ||| classname	count=1
function	[function_1] [function_2] that can be used ||| [function_1] [function_2]	count=1
module	the hook ||| packaging pyinstaller_hooks	count=1
function	append it [function_2] ||| [function_2] [function_1]	count=2
function	yield ||| generate	count=1
function	unregister a path ||| unregister	count=1
function	runtime ||| runtime	count=1
function	create ||| create	count=4
function_arg	[function_1] matching ||| [function_1] score comparison_gesture [arg_2]	count=1
module	and strip and ||| tools pep8checker	count=1
module	this method when you ||| uix	count=1
arg	when [arg] ||| [arg]	count=3
function	dot product of the ||| dot product	count=1
function	select the first ||| select	count=1
class	event you ||| event	count=1
function	[function_1] binary operators ||| [function_1] [function_2]	count=1
function	the keyboard when ||| keyboard on	count=2
class	if ||| window	count=1
arg	return a list ||| content	count=1
module	call this method ||| uix	count=1
function	in sorted_keys [function_2] ||| [function_1] [function_2]	count=8
function	appends ||| append	count=1
module	joystick has [module] hat/dpad moved ||| [module]	count=1
module	of matching lines ||| pep8checker	count=1
arg	[arg_1] y ||| [arg_1] [arg_2]	count=2
function	icon of the ||| icon	count=1
class	of ||| window base	count=1
function	a double tap touch ||| double tap	count=1
class	eventloop ||| loop	count=1
function	adds a callback to ||| add	count=1
module	if word is a ||| core	count=1
class	loader ||| image loader	count=4
module	text [module] ||| [module]	count=1
function	to dispatch an ||| dispatch	count=1
function	options passed ||| options	count=1
arg	if the key ||| key	count=1
function	never mix tabs ||| tabs or	count=2
function	tick ||| tick	count=1
arg	numpoints points ||| numpoints	count=1
module	using the :meth read ||| core	count=1
class	application ||| app	count=3
function	get the ||| get	count=8
module	provides a thread-safe exit ||| core	count=1
function	warnings for this ||| results	count=1
module	create osc ||| osc	count=1
module	message and ||| lib	count=1
function_arg	register [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	parser for [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	update the movement ||| update val t	count=1
arg	are [arg_2] ||| [arg_1] lines [arg_2]	count=1
class	the device ||| device	count=2
function	returning ||| load	count=1
class	[class_1] object ||| [class_2] [class_1]	count=1
class	touch [class_2] ||| [class_1] [class_2]	count=1
function	start ||| start	count=8
function	hint ||| hint with	count=1
class	candidate ||| candidate	count=4
class	default ||| metrics base	count=1
function	paths ||| paths	count=2
module_class	[module_1] vector object ||| [module_1] [class_2]	count=6
function	unload the file from ||| unload	count=1
function	list of all ||| list	count=1
function	parent coordinates to ||| to	count=1
module	the file from ||| core	count=1
module	provides a ||| core	count=1
arg	to catch all the ||| _traceback	count=1
function	is a [function_2] ||| [function_1] [function_2]	count=1
function	trailing blank ||| trailing blank	count=1
class	register method ||| factory	count=1
function	appropriate size hint ||| layout hint	count=1
module_class	[module_1] current line ||| [module_1] [class_2]	count=2
function	dictionary containing the headers ||| headers	count=1
class	file opened using the ||| config	count=1
arg	comma-separated list ||| value parent	count=1
function_arg	[function_1] in the ||| [function_1] [arg_2]	count=2
class	file from memory ||| sound	count=1
function	of the last selected ||| of	count=1
class	provider ||| motion event factory	count=1
class	providers and call ||| loop	count=1
function_arg	[function_1] the program ||| [arg_2] [function_1]	count=3
function	put ||| put	count=1
arg	the data as ||| data	count=2
class	and call ||| event	count=1
function	from ||| remove	count=1
arg	the value ||| section option value	count=1
module	change the position to ||| uix	count=2
function	[function] iteration before ||| install twisted [function]	count=3
function	sleeps for the ||| usleep	count=1
function	[function_1] parent ||| [function_1] [function_2]	count=4
arg	keyvalues should ||| keyvalues	count=1
function	[function_1] double tap ||| [function_1] [function_2]	count=1
function	the cursor [function_2] ||| [function_1] [function_2]	count=2
function	deselect any selected ||| deselect	count=1
class	layout [class_2] ||| [class_2] [class_1]	count=1
function	height ||| get height	count=1
function_arg	the checks [arg_2] ||| [arg_2] [function_1]	count=1
class	registered using eventloop ||| event	count=1
function	grab and decode frame ||| frame	count=1
class	the ||| config	count=3
module	of all ||| core	count=1
arg	the value is ||| value	count=1
function	extraneous whitespace [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] a given ||| [function_1] bundle bundle [arg_2]	count=4
module	provides a thread-safe ||| core	count=1
class	loader can ||| loader	count=1
module	this textinput ||| uix	count=1
function_arg	[function_1] with index ||| [arg_2] [function_1]	count=2
function	shown ||| show	count=1
function	set ||| set	count=3
class	to the last file ||| config parser	count=1
class	using ||| event loop	count=1
arg	each enabled ||| flags reverse	count=1
function	ast ||| ast	count=1
class	text and ||| text input	count=1
function_arg	max bounds [arg_2] ||| [function_1] [arg_2]	count=1
module	and warnings ||| tools pep8checker	count=1
class	loader can be ||| loader	count=1
function	a proxy [function_2] ||| [function_1] [function_2]	count=1
class	if a ||| abstract	count=1
function	the cursor ||| cursor	count=2
function	returns the [function_1] [function_2] ||| [function_1] [function_2]	count=2
class	motion event ||| motion event	count=2
function	filepath [function] ||| [function] nice	count=1
class	providers have been started ||| loop	count=1
class	for on_stop events ||| loop base	count=1
class	request has been ||| request	count=1
module_class	the application ||| core app	count=1
module	ast and run ||| tools pep8checker	count=1
module	of a ||| core	count=2
arg	via arglist [arg_2] ||| [arg_1] [arg_2]	count=2
function	[function_1] position ||| [function_1] [function_2]	count=1
function	[function_1] the start ||| [function_2] [function_1]	count=4
function	starts the application loop ||| app	count=1
function	index ||| index	count=1
class	insert ||| text input	count=1
function	[function_1] event ||| [function_1] [function_2]	count=1
module	ast and run all ||| tools pep8checker	count=1
arg	[arg_1] section ||| [arg_2] [arg_1] defaultvalue	count=1
module	[module] runtime_hooks ||| [module] packaging	count=3
arg	in the [arg] intended ||| [arg]	count=1
function	search ||| resource	count=1
module	current ||| input	count=2
function	[function_1] triple tap ||| [function_1] [function_2]	count=1
class	last file opened using ||| config parser	count=1
class	call callbacks registered ||| event	count=1
function	size hint for all ||| layout hint with	count=1
function	extraneous whitespace after ||| whitespace around	count=1
function	word ||| word	count=2
function	the word ||| word	count=1
function	contextualactionview ||| contextual action	count=1
function	bounds on the ||| bounds	count=1
function	of ||| of	count=4
module_class	objects [class_2] ||| [module_1] builder [class_2]	count=1
arg	section/key ||| section key	count=1
module	the file from ||| core audio	count=1
class	if defined of the ||| base	count=1
function	the distance between ||| distance	count=1
function_arg	bounds on [arg_2] ||| [function_1] [arg_2]	count=1
function	unregisters the classnames previously ||| unregister	count=1
class	list of ||| base	count=1
function	[function_1] stroke ||| [function_1] [function_2]	count=3
module	views into the ||| uix	count=1
function	pass [function_1] [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] cursor ||| [function_2] [function_1]	count=3
module	and run all ||| tools pep8checker	count=1
function	start [function_2] ||| [function_1] unit [function_2]	count=3
function	[function_1] circle ||| core [function_1] [function_2]	count=2
function	[function_1] reference ||| [function_1] [function_2]	count=3
module	return the text ||| core text	count=2
function	[function_1] that are ||| [function_1] [function_2]	count=2
function	grab ||| grab	count=1
arg	[arg_1] c ||| core circumcircle a [arg_1] [arg_2]	count=1
class	via the ||| base	count=1
function	logical checks on ||| logical	count=1
arg	new ||| panel name	count=1
module_class	remove the [class_2] ||| [module_1] [class_2] dismiss	count=1
module	return a ||| core	count=3
class	the texture ||| image	count=1
function	[function_1] that are ||| [function_2] [function_1]	count=11
module	this should be called ||| uix recycleview	count=2
module	runs the ||| core	count=1
function	for this [function_2] ||| [function_2] [function_1]	count=2
class	to the label ||| label	count=1
class	the configuration to ||| config	count=1
function	[function_1] around keywords ||| [function_1] [function_2]	count=1
module_class	[module_1] provided ||| [module_1] [class_2] input copy	count=2
function_arg	returns the [arg_2] ||| [function_1] score comparison_gesture [arg_2]	count=1
module	check if a ||| core	count=1
module_class	[module_1] the ||| [module_1] [class_2]	count=1
function	when ||| on key down	count=2
function	it adds [function_2] ||| [function_2] [function_1]	count=3
class	call callbacks ||| event loop	count=1
module_class	[module_1] vector ||| [module_1] [class_2] segment	count=6
function	on_start which will ||| start	count=1
function	if a screen ||| screen	count=1
function	angle similarity between ||| get angle similarity	count=1
class	and call callbacks registered ||| event	count=1
function_arg	released [arg_2] ||| [arg_2] [function_1]	count=1
class	[class_1] called ||| [class_2] [class_1]	count=1
module_class	[module_1] [class_2] in argument ||| [module_1] [class_2]	count=1
function_arg	[function_1] touch is ||| [arg_2] [function_1]	count=1
arg	the number of microseconds ||| microseconds	count=1
class	providers and call ||| event loop base	count=1
class	the loader after ||| loader base	count=2
function	[function_1] [function_2] ||| [function_2] of [function_1]	count=8
function	new default config ||| update config	count=1
function	the screen widget ||| screen	count=1
function	random [function_2] ||| [function_1] [function_2]	count=1
arg	on the widgets' size ||| sh_sum available_space min_bounded_size sh_min_vals	count=1
arg	in order to catch ||| _traceback	count=1
module_class	v3->v4 and [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	path ||| path	count=1
arg	option in [arg_2] ||| [arg_2] [arg_1]	count=1
arg	that the value ||| value	count=1
module	converted to a ||| core	count=1
function	call post-configuration ||| configure	count=1
function	[function_1] lines ||| [function_2] [function_1]	count=1
arg	key is not found ||| key	count=1
arg	a [arg] ||| a [arg]	count=1
class	the implementation ||| base	count=1
function	[function] made for ||| [function]	count=2
function	of all supported languages ||| languages	count=1
function_arg	[function_1] plugin ||| [arg_2] [function_1]	count=1
class	registered using eventloop ||| loop	count=1
function	[function_1] around ||| [function_2] [function_1]	count=2
arg	[arg_1] option in ||| [arg_2] [arg_1]	count=4
class	in one ||| camera android	count=1
function	vector for [function_2] ||| [function_2] [function_1]	count=2
function	content to ||| content	count=1
class	the list ||| event loop	count=1
function	convert ||| convert	count=1
arg	widgets' size ||| sh_sum available_space min_bounded_size sh_min_vals	count=1
class	using ||| parser	count=1
function	the distance ||| get distance	count=1
function	a binary and send ||| send	count=1
function	of the first ||| of	count=2
module	by ||| behaviors	count=1
module_class	[module_1] dropdown ||| [module_1] [class_2] dismiss	count=2
class	widget i ||| widget	count=1
module	decoded osc data to ||| lib osc	count=1
function_arg	widget [arg_2] ||| [function_1] [arg_2]	count=1
module	screen if the ||| core	count=1
arg	use [arg_2] ||| [arg_2] [arg_1]	count=1
module	initialise the ||| core camera	count=1
module	return true if a ||| core	count=1
function	line ||| line	count=1
function	drawing counter ||| draw	count=1
function	extraneous whitespace ||| whitespace	count=4
class	to the button ||| button	count=1
function	paths with the binary ||| paths	count=1
function	physical line s ||| physical	count=1
function	sleeps for ||| usleep	count=1
function	key ||| key	count=1
module	into a single line ||| core text	count=1
arg	syncs the view ||| view	count=1
function	the system [function_2] ||| [function_1] [function_2]	count=1
class	support ||| window	count=1
module_class	current [class_2] ||| [module_1] [class_2]	count=4
arg	catch ||| exception _traceback	count=1
function	the checks for ||| checks	count=1
function	set the ||| set	count=3
module	return the ||| window	count=1
class	the store ||| store	count=1
function	a range ||| range	count=1
module	[module] word ||| [module]	count=3
module	the register method ||| core	count=1
function	removes ||| detach	count=2
class	the implementation doesn't ||| window	count=1
function	process options passed ||| process options	count=1
class	opened ||| config parser	count=1
class	when your [class] is ||| [class]	count=1
arg	object ||| codes	count=1
function	only get the ||| get	count=1
arg	using ||| filename	count=1
module_class	[module_1] is ||| [module_1] file [class_2]	count=1
arg	key ||| key	count=4
class	to the last file ||| config	count=1
function_arg	is released [arg_2] ||| [arg_2] [function_1]	count=1
arg	spaces ||| indent_char	count=1
function	that are less ||| left of sel	count=2
function	contextualactionview and display ||| contextual action view	count=1
function	viewport changes and ||| refresh from viewport	count=2
class	the last ||| config parser	count=1
function	settings to add ||| add panel	count=2
function	options passed either ||| options	count=1
function	[function_1] screen widget ||| [function_2] [function_1]	count=1
class	fired ||| app	count=1
class	file opened using the ||| parser	count=1
function	[function_1] widget ||| [function_2] [function_1]	count=3
function	merges two gestures ||| gestures	count=1
function	register ||| kivy register	count=1
class	return ||| event loop base	count=1
module	the current ||| uix recycleview	count=1
module_class	[module_1] list ||| [module_1] [class_2]	count=4
arg	the method bound to ||| keycode text modifiers	count=1
class	only once before run() ||| event loop base	count=1
class	read method ||| config parser	count=1
function	to the keyboard when ||| keyboard on	count=2
arg	with a config name ||| name	count=1
function	has been ||| has	count=1
module	the hook ||| tools packaging pyinstaller_hooks	count=1
function	name of the application ||| application name	count=1
function	containing the headers of ||| headers	count=1
arg	are [arg_2] ||| [arg_2] [arg_1]	count=1
class	the provider ||| motion event provider	count=1
function	syntax ||| syntax	count=1
class	[class_1] event ||| [class_2] [class_1]	count=1
function	[function_1] the binary ||| [function_1] [function_2]	count=1
class	displayed panel ||| panel	count=1
class	the :class ||| transition base	count=1
arg	by offsetting ||| offset_x offset_y	count=1
function	the start vector ||| start unit vector	count=1
module	to the last file ||| core	count=1
function	associates a ||| attach	count=2
arg	data selection ||| data	count=1
module_class	[module_1] readable ||| [module_1] [class_2]	count=6
module	a single line by ||| core text	count=1
module	doesn't support ||| window	count=1
module	checks on the ||| pep8checker	count=2
function	node at the ||| goto node	count=1
module	to a ||| core	count=6
class	callbacks ||| event	count=1
function	[function_1] [function_2] ||| [function_1] distance [function_2]	count=8
function	called when [function_2] ||| [function_1] [function_2]	count=2
class	providers and ||| event loop base	count=1
function_arg	to add [arg_2] ||| [function_1] panel [arg_2]	count=1
class	return ||| window	count=1
module	this method when ||| uix	count=1
module	last ||| core	count=1
function	and send it ||| send	count=1
module	into the ||| uix	count=1
arg	widget [arg_2] ||| [arg_1] [arg_2]	count=1
class	the stroke ||| gesture stroke	count=1
function	event [function_2] ||| [function_2] [function_1]	count=1
function	to local [function_2] ||| [function_1] [function_2]	count=1
class	using eventloop ||| base	count=1
module_class	[module_1] sorted_keys ||| [module_1] [class_2]	count=2
function	the settings panel ||| settings	count=1
arg	viewport is ||| data viewport	count=1
class	print the result ||| standard report	count=1
function	has [function_2] ||| [function_2] [function_1]	count=2
module_class	tuio [class_2] ||| [module_1] tuio [class_2]	count=1
class	providers ||| event loop base	count=1
function_arg	returns [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
class	is ||| motion event	count=1
function	unbind ||| unbind	count=2
function	template ||| template	count=1
function	returns ||| get	count=14
class	resample ||| unistroke template	count=1
module	true if this ||| uix	count=1
module	current selection [module] clipboard then ||| [module]	count=1
function	lines to a maximum ||| maximum	count=1
module	a :meth pause ||| core	count=1
module	the implementation doesn't support ||| core window	count=1
arg	triangle defined by a [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	if you really want ||| dismiss	count=1
arg	value is ||| option value	count=1
class	return the ||| window	count=1
function	content to ime ||| content	count=1
function_arg	[function_1] [arg_2] ||| [function_1] button up [arg_2]	count=2
function	[function_1] drawing counter ||| [function_1] [function_2]	count=1
arg	down by scale_factor ||| scale_factor	count=1
arg	catch all the ||| _traceback	count=1
module	hook ||| tools packaging pyinstaller_hooks	count=1
module_class	[module_1] event ||| [module_1] [class_2]	count=2
class	for on_stop events which ||| event loop base	count=1
class	response [class] ||| url [class]	count=2
function	to show [function_2] ||| [function_2] [function_1]	count=3
class	screen if the ||| window base	count=1
arg	stick or other ||| axisid	count=1
arg	level ||| level width	count=1
function	frames ||| frames	count=1
function_arg	screen [arg_2] ||| [function_1] [arg_2]	count=1
arg	method bound to the ||| window keycode text modifiers	count=1
function	when ||| on joy	count=5
function_arg	nodes from [arg_2] ||| [function_1] [arg_2]	count=4
class	for on_stop events ||| event loop base	count=1
class	input providers ||| loop	count=1
module	for [module] ||| [module]	count=5
module_class	of a [class_2] ||| [module_1] [class_2]	count=6
function	[function] of ||| resp [function]	count=3
function	[function_1] [function_2] ||| [function_1] word [function_2]	count=4
function	name [function_2] ||| [function_2] [function_1]	count=2
arg	filename if the filename ||| filename	count=1
function	bounding circle ||| bounding circle	count=1
function	s ||| update counts	count=1
module	this method in ||| uix	count=1
function	images/anim_in_out_expo ||| out expo	count=1
arg	[arg] keycode number ||| [arg]	count=1
arg	the method bound to ||| window keycode text modifiers	count=1
class	registered using ||| loop base	count=1
function	get a ||| get	count=1
function	the start [function_2] ||| [function_1] unit [function_2]	count=3
class	file opened ||| config parser	count=1
class	called) ||| app	count=1
class	return the ||| loop base	count=1
class	depack ||| motion event	count=1
module_class	the current line ||| uix code input	count=1
function	[function_1] triple ||| [function_2] [function_1]	count=1
module	of from/to if ||| uix	count=1
class	registered using ||| loop	count=1
function_arg	stop the [arg_2] ||| [function_1] [arg_2]	count=1
function	new image descriptor ||| new image	count=1
module	in one call ||| core camera	count=1
arg	by dispatch_input() when ||| etype me	count=1
class	event ||| event loop base	count=2
module_class	for the loader ||| core loader base	count=1
function	the distance ||| distance	count=1
function_arg	to local [arg_2] ||| [arg_2] [function_1]	count=1
function	separate lines ||| separate lines	count=2
function	contextualactionview and ||| contextual action view	count=1
arg	catch ||| _traceback	count=1
module_class	[module_1] config ||| [module_1] [class_2]	count=4
arg	version ||| version	count=1
arg	upgrade ||| filename overwrite	count=1
class	stop ||| event loop base	count=1
class	screen if ||| window	count=1
module	into a single ||| core	count=1
module_class	for [module_1] [class_2] ||| [module_1] [class_2]	count=5
function	list ||| register	count=1
function	view index ||| view index	count=2
module	remove a ||| core	count=3
class	the :meth read method ||| config parser	count=1
function	the top left toolbar ||| toolbar	count=1
class	last ||| config	count=1
function_arg	when [arg_2] ||| [function_1] down [arg_2]	count=2
function	[function_1] [function_2] ||| [function_1] around [function_2]	count=1
arg	unistroketemplate for ||| numpoints	count=1
arg	with a config name ||| name widget_ref	count=1
function_arg	stop the [arg_2] ||| [arg_2] [function_1]	count=1
class	the ||| factory	count=2
class	from ||| sound	count=1
module	list items with ||| adapters	count=1
module	this should ||| uix recycleview	count=2
function_arg	[function_1] level ||| [arg_2] [function_1]	count=3
function	[function_1] index of ||| [function_1] [function_2]	count=2
function	method is ||| is dir	count=1
function	[function_1] whitespace ||| [function_1] [function_2]	count=1
module	[module] date ||| [module]	count=3
function	[function_1] hooks for ||| [function_1] [function_2]	count=3
class	event [class_2] ||| [class_1] [class_2]	count=1
module	and [module] ||| [module]	count=1
class	when being selected ||| selectable	count=1
arg	x y is inside ||| x y	count=1
function_arg	[function_1] [arg_2] ||| [function_1] state name [arg_2]	count=1
class	of the screen ||| window	count=1
class	the view [class_2] ||| [class_2] [class_1]	count=8
class	returns ||| gif decoder	count=1
function	initialise ||| init	count=1
function	hint ||| layout hint with	count=1
function	properties [function_2] ||| [function_2] [function_1]	count=2
arg	angle in degrees ||| angle	count=1
class	without ||| label base	count=2
function	and assigns one ||| setup	count=1
function	the parser for ||| get parser	count=1
module_class	[module_1] loader thread/process ||| [module_1] [class_2]	count=2
function	count for this ||| results	count=1
function	the appropriate size hint ||| hint with	count=1
function	the current [function] ||| pop [function]	count=3
function	top of [function_2] ||| [function_2] [function_1]	count=1
module_class	for [module_1] [class_2] ||| [module_1] [class_2] base	count=1
function	for this ||| results	count=1
function	of text ||| text	count=1
function	a double [function_2] ||| [function_2] [function_1]	count=6
function	associates a [function_2] ||| [function_1] [function_2]	count=1
class	prepare the [class] vectors ||| [class]	count=1
arg	argument [arg] into current ||| [arg]	count=1
class	loader can be ||| loader base	count=1
function	a point ||| point	count=1
arg	matching gesture in the ||| gesture minscore rotation_invariant	count=1
class	opened using ||| config	count=1
function	[function] for a ||| [function]	count=1
function	~kivy ||| recycleview	count=2
module	in this ||| uix	count=1
module	return the [module] ||| [module]	count=1
function	one reactor ||| reactor	count=1
arg	[arg_1] definition ||| classname [arg_2] module [arg_1]	count=1
class	image data from ||| android	count=1
function	the [function] for a ||| [function]	count=1
function	check ||| check	count=1
module_class	[module_1] motion ||| [module_1] [class_2]	count=4
function_arg	nodes [arg_2] ||| [function_1] [arg_2]	count=3
function	the start ||| start	count=1
arg	and warnings ||| prefix	count=1
function	this [function_2] ||| [function_2] [function_1]	count=2
arg	a config name ||| name widget_ref	count=1
class	list of all ||| base	count=1
function	find a double ||| find double	count=2
function	by the system ||| system	count=1
class	the last file opened ||| config	count=1
function	the top [function_2] ||| [function_1] [function_2]	count=3
function	for the [function_2] ||| [function_2] [function_1]	count=1
module	errors and ||| tools pep8checker	count=2
arg	value is implicitly converted ||| option value	count=1
function	grab a touch ||| grab	count=1
class	the tuio [class_2] ||| [class_1] [class_2]	count=1
arg	the default value for ||| value	count=1
class	1 by default ||| metrics base	count=1
function	get the start ||| get start	count=3
arg	value for [arg_2] ||| [arg_2] [arg_1]	count=2
module	indentation ||| tools pep8checker	count=1
module	one ||| camera	count=1
function	paths with ||| paths	count=1
class	eventloop ||| event loop	count=1
function	the cursor from ||| cursor from	count=2
module	the list ||| core	count=1
class	has focus ||| focus behavior	count=2
function	to local widget ||| to widget	count=3
function	centers ||| center	count=2
function	dispatch an ||| post dispatch	count=1
function	tap ||| tap	count=2
function	blank ||| blank	count=1
function_arg	returns [arg_2] ||| [function_1] score comparison_gesture [arg_2]	count=1
class	configuration ||| config	count=1
function	used to create an ||| create	count=1
arg	the filename ||| filename	count=1
function	return the content ||| content	count=2
module	of that property ||| lang	count=1
module	to this ||| uix	count=1
module	a target number of ||| core	count=1
function	x/y window coordinate ||| highlight at	count=1
class	loader after ||| loader	count=1
function_arg	[function_1] data ||| [function_1] append [arg_2]	count=1
class	of all ||| event loop base	count=1
arg	touch ||| touch	count=9
function	[function_1] product ||| [function_1] [function_2]	count=3
class	handler fired ||| app	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] segment	count=8
function	to parent ||| to parent	count=2
class	opened using the :meth ||| config parser	count=1
arg	an option in ||| option	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=175
function	by settings to add ||| add panel	count=2
arg	unistroketemplate for matching ||| numpoints	count=1
function	append [function_2] ||| [function_2] [function_1]	count=2
class	all input providers and ||| loop	count=1
function	get a list of ||| list	count=1
arg	unistroketemplate ||| tpl numpoints	count=1
class	focus ||| focus behavior	count=2
function	the rules ||| rules	count=1
class	registered using ||| event	count=1
class	[class_1] thread/process ||| [class_1] [class_2]	count=1
arg	the view and brings ||| view	count=1
arg	node and ||| node	count=1
arg	x y ||| x y	count=4
function	remove the ||| remove	count=1
module	the screen if the ||| core window	count=1
arg	c ||| c	count=1
class	returns ||| focus behavior	count=2
class	defined of the ||| base	count=1
arg	the key ||| key	count=1
function	is a ||| is	count=2
module	file from memory ||| core audio	count=1
arg	always use != ||| logical_line	count=1
module	if the implementation doesn't ||| core	count=1
module	[module] app is ||| [module]	count=3
class	[class_1] window this ||| [class_2] [class_1]	count=8
function	returns [function_1] [function_2] for a ||| [function_1] [function_2]	count=1
class	callbacks ||| loop	count=1
arg	x ||| x	count=2
function	select the ||| select	count=1
arg	by dispatch_input() ||| etype me	count=1
module	if changing code ||| uix behaviors	count=1
class	all input [class_2] ||| [class_1] [class_2]	count=1
class	the [class] vectors ||| [class]	count=1
class	this candidate with the ||| candidate	count=1
function	return the density of ||| density	count=1
class	sound and ||| sound loader	count=1
function	the filepath [function] ||| [function] nice	count=1
class	event you can ||| event	count=1
function	event is released terminated ||| up	count=1
class	cache with the ||| cache	count=1
function	[function] of ||| [function]	count=2
module	displayed in this ||| uix	count=1
function	index of ||| of	count=3
function	[function_1] to ||| [function_1] [function_2]	count=4
function	[function_1] right ||| [function_2] [function_1]	count=1
function	options passed either via ||| options	count=1
arg	the given factor ||| factor	count=1
function	method to load ||| load	count=1
class	:meth read method ||| parser	count=1
function	[function_1] right of ||| [function_2] [function_1]	count=1
class	call callbacks registered using ||| loop base	count=1
class	unregisters ||| base	count=1
module	if changing code ensure ||| uix behaviors	count=1
module	list items ||| adapters	count=2
function	cached version of ||| cached extents	count=1
module	the implementation doesn't ||| core window	count=1
class	if the request ||| request	count=2
function_arg	[function_1] widgets' size ||| [function_1] [arg_2]	count=2
module	file ||| core audio	count=2
arg	the section/key ||| section key	count=1
function_arg	returns [arg_2] ||| [arg_2] [function_1]	count=1
function	the node at ||| node	count=1
module	mtdev ||| lib	count=1
class	call ||| loop	count=1
module	of that ||| lang	count=1
arg	the classname ||| classname	count=1
class	specified ||| config parser	count=1
module	:attr ||| uix	count=1
class	file ||| config parser	count=1
arg	data ||| data	count=9
function_arg	raw [arg_2] ||| [arg_2] [function_1]	count=4
class	the tuio ||| tuio	count=1
function	gestures together ||| gestures	count=1
function	activate a module on ||| activate module	count=1
function_arg	bounding circle [arg_2] ||| [function_1] [arg_2]	count=1
class	animation is running ||| animation	count=2
class	call callbacks registered ||| event loop base	count=1
arg	use [arg_2] ||| [arg_1] [arg_2]	count=1
module	current views into the ||| uix recycleview	count=1
function	[function_1] bounding ||| [function_2] [function_1]	count=1
module	implementation ||| window	count=1
module	a dummy placeholder ||| core camera	count=1
arg	a config name ||| name	count=1
function	local ||| local	count=2
module	mtdev converter ||| lib	count=1
module	fit into a ||| core	count=1
module	the text with all ||| core text	count=1
function	two gestures together the ||| merge gestures	count=1
arg	new touch is registered ||| touch	count=1
module	and ||| core	count=1
class	call callbacks registered using ||| event loop	count=1
function	to a [function_2] ||| [function_2] [function_1]	count=1
function	hint for all the ||| hint with	count=1
module	internal ||| uix	count=1
module_class	of a config ||| core config	count=1
class	file opened using the ||| config parser	count=1
class	method ||| factory	count=1
function_arg	[function_1] them ||| [function_1] widget [arg_2]	count=2
function	brought to [function] ||| on bring to [function]	count=3
function	return a ||| get	count=1
class	and call callbacks ||| base	count=1
arg	[arg_1] superfluous ||| [arg_1] lines [arg_2]	count=1
class	configparser instance if not ||| config parser	count=1
function	grab a ||| grab	count=1
function	return [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] offset on ||| [function_1] [function_2]	count=3
class	return ||| loop	count=1
function	when data changes data ||| data	count=1
function	tick the [function_2] ||| [function_2] [function_1]	count=1
module	return ||| window	count=1
module_class	the scatter widget ||| uix scatter	count=1
class	of the ||| builder base	count=1
module	it as a ||| core	count=1
arg	viewport ||| data viewport	count=1
module	screen ||| core	count=1
module	a list with $bits ||| core image	count=1
arg	or via command line ||| parse_argv config_file parser	count=1
function	data [function_2] ||| [function_2] [function_1]	count=2
class	read ||| config parser	count=1
function	in sorted_keys [function_2] ||| [function_1] to [function_2]	count=1
module_class	the [class_2] ||| [module_1] [class_2] base	count=1
arg	a touch [arg_2] ||| [arg_2] [arg_1]	count=2
module	previous position ||| input	count=1
function	return the overall count ||| get	count=1
module	via ||| core	count=1
arg	is called by dispatch_input() ||| etype me	count=1
function	a module ||| module	count=1
function	changes and ||| refresh from	count=1
class	returns ||| selection behavior	count=1
class	the request ||| request	count=1
function	call ||| read	count=1
function	run ||| run	count=1
class	store ||| store	count=1
function	will schedule one reactor ||| reactor	count=1
class	before run() ||| event loop	count=1
class	request has ||| request	count=1
arg	y position ||| y	count=1
module_class	of the animation ||| core animation	count=2
function	switch to ||| switch to	count=2
module_class	tuio [class_2] ||| [module_1] [class_2]	count=1
arg	a touch on ||| touch	count=1
function	more ||| create view	count=1
module	by calling both ||| uix behaviors	count=1
function	the velocity according ||| velocity	count=1
function	append ||| append	count=1
function	iterate over all ||| iterate all	count=2
class	the [class] vectors self ||| [class]	count=1
function	we want to dispatch ||| dispatch	count=1
function	string ||| string	count=1
class	loader [class_2] ||| [class_1] [class_2]	count=1
function	scale ||| scale	count=1
module	the :class ||| uix	count=1
module	one or the ||| uix	count=1
arg	with index ||| index	count=1
class	the register method ||| factory base	count=1
class	config [class_2] ||| [class_1] [class_2]	count=1
module_class	[module_1] touch ||| [module_1] [class_2]	count=2
class	implementation doesn't ||| base	count=1
function	the [function] for ||| [function]	count=1
class	input providers and call ||| loop base	count=1
function	hint ||| hint	count=1
class	all ||| loop base	count=2
function	the headers [function_2] ||| [function_2] [function_1]	count=2
module	via the register method ||| core	count=1
function	down event ||| on touch down	count=1
arg	view_list ||| view_list	count=1
module	list of root objects ||| lang	count=1
function	the select call is ||| select	count=1
class	instance has focus ||| focus	count=2
function	less ||| left	count=2
function	the cursor [function_2] ||| [function_2] [function_1]	count=2
arg	to catch all the ||| exception _traceback	count=1
module	a bound ||| core	count=1
module	parse [module] string ||| [module]	count=1
function	interpolate ||| interpolate	count=1
function	can load an ||| can load	count=1
function	return a proxy ||| proxy	count=1
module_class	[module_1] tree ||| [module_1] [class_2]	count=4
module	to ||| uix	count=6
class	unregisters ||| factory base	count=1
class	callbacks registered ||| event	count=1
function	breaks before binary ||| break around binary	count=1
function_arg	local widget [arg_2] ||| [arg_2] [function_1]	count=1
function	when a ||| on	count=6
function	[function_1] vector ||| [function_1] protractor [function_2]	count=1
function	around [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] this directory ||| [function_1] [function_2]	count=4
function	[function_1] load an ||| [function_2] [function_1]	count=1
class	input providers ||| event loop base	count=1
arg	value is ||| section option value	count=1
class	texture ||| image	count=1
function	template from ||| template	count=1
function	associates a [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] lines ||| [function_1] [function_2]	count=1
module_class	v3->v4 and [module_1] [class_2] ||| [module_1] [class_2] segment	count=2
module	this ||| input	count=1
function	stop the ||| stop	count=2
arg	one for each enabled ||| flags reverse	count=1
module	registered via the register ||| core	count=1
arg	that the value is ||| section option value	count=1
function_arg	distance [arg_2] ||| [function_1] to scroll [arg_2]	count=3
function	select a ||| select	count=1
function	we want to dispatch ||| post dispatch	count=1
function	when the ||| on key	count=2
function	property it ||| property	count=3
module	a matching ||| core	count=1
class	return the ||| window base	count=1
module	configuration to the last ||| core	count=1
class	eventloop ||| loop base	count=1
function	centers the gesture ||| center	count=1
arg	a config name instead ||| name widget_ref	count=1
class	screen ||| base	count=1
arg	[arg_1] [arg_2] in ||| classname [arg_2] module [arg_1]	count=1
module	file from memory ||| audio	count=1
arg	idx ||| idx	count=1
function	returns the [function_2] ||| [function_2] [function_1]	count=7
function	an input ||| input	count=1
class	the bounding box ||| surface	count=1
arg	the x y coordinates ||| x y	count=1
class	addon ||| addon	count=2
class	is 1 by default ||| metrics	count=1
function	[function] joystick ||| [function]	count=3
function	[function_1] triple ||| [function_1] [function_2]	count=1
arg	touch x/y collides ||| touch	count=1
class	register ||| factory	count=1
function	released terminated ||| up	count=1
class	data and ||| recycle data	count=1
function	convert a distance ||| convert	count=1
module	input providers and ||| core	count=1
function	velocity according ||| velocity	count=1
function	an event ||| event	count=1
function	used by the system ||| system	count=1
function	to dispatch an ||| post dispatch	count=1
class	of all ||| loop	count=1
module	callbacks registered using ||| core	count=1
module_class	of the [class_2] ||| [module_1] [class_2]	count=4
function_arg	path resampled [arg_2] ||| [function_1] vector [arg_2]	count=1
module	file from ||| core audio	count=1
arg	widget that ||| widget	count=1
function	main function ||| run	count=1
class	gesture ||| gesture	count=7
module	if ||| core	count=1
function_arg	[function_1] node and ||| [arg_2] [function_1]	count=3
arg	even if an ||| widget prop	count=3
arg	continuation lines ||| logical_line tokens indent_level hang_closing	count=1
class	via ||| base	count=1
function	[function_1] vector for ||| [function_2] [function_1]	count=7
class	text and order of ||| text input	count=1
function_arg	[function_1] joystick has ||| [function_1] button down [arg_2] buttonid	count=1
module	using the ||| core	count=1
function_arg	the stroke [arg_2] ||| [arg_2] [function_1]	count=4
function	the index of ||| of	count=3
class	remove ||| loop base	count=1
class	and call callbacks ||| loop base	count=1
module_class	[module_1] provided ||| [module_1] [class_2]	count=2
class	the configuration to the ||| config	count=1
module	brings it up to ||| uix	count=1
arg	view and brings it ||| view	count=1
function	[function_1] node at ||| [function_1] [function_2]	count=1
class	your [class] is resuming ||| [class]	count=1
function	register [function_2] ||| [function_1] named [function_2]	count=1
function	[function_1] when the ||| [function_2] [function_1]	count=6
function	[function_1] when ||| [function_1] [function_2]	count=6
function	returns the binary ||| get binary	count=3
class	all input providers and ||| base	count=1
module	return the [module] the ||| [module]	count=1
function	when the [function_2] ||| [function_1] [function_2]	count=2
class	called every frame ||| base	count=1
class	associates ||| recycle data model behavior	count=1
function	only get the start ||| get start	count=1
function_arg	window [arg_2] ||| [arg_2] [function_1]	count=1
arg	in the format ||| size	count=1
arg	arglist or via command ||| arglist parse_argv config_file parser	count=1
arg	matching language exists it ||| language	count=1
module	a data is ||| core	count=1
module	call this method when ||| uix	count=1
function	the runtime hooks ||| runtime hooks	count=2
function	minimized ||| minimize	count=1
module_class	objects matching [class_2] ||| [module_1] builder [class_2]	count=1
function	transform parent coordinates to ||| to	count=1
module	create osc [module_2] ||| [module_2] [module_1]	count=2
class	return the list of ||| event loop base	count=1
function	coordinates to window ||| to window	count=2
function	[function] the ||| [function]	count=3
class	is ||| base	count=1
module_class	[module_1] touch and ||| [module_1] [class_2]	count=2
function_arg	point [arg_2] ||| [arg_2] [function_1]	count=5
module	the screen ||| core	count=1
function	return the error ||| error	count=1
class	to the last ||| config parser	count=1
function	is a directory ||| is	count=1
function_arg	all nodes [arg_2] ||| [arg_2] [function_1]	count=3
function	return a list of ||| get	count=1
module	implementation ||| core window	count=2
function	languages select the first ||| select	count=1
function	[function_1] right ||| [function_1] word [function_2]	count=1
class	call ||| event	count=1
function	released ||| up	count=2
arg	widget that [arg_2] ||| [arg_1] [arg_2]	count=1
function	all ast checks ||| ast	count=1
function	remove ||| remove	count=5
class	callbacks registered ||| loop	count=1
class	trigger a data and ||| recycle data	count=1
function_arg	[function_1] coordinates ||| [arg_2] [function_1]	count=6
function_arg	color table in ||| color table size	count=1
class	stroke ||| gesture stroke	count=1
function	find a double tap ||| find double tap	count=1
function	trigger whatever action s ||| trigger action	count=1
function	event is released terminated ||| touch up	count=1
arg	the unistroketemplate for matching ||| numpoints	count=1
function	texture created on the ||| texture	count=1
module	length of a ||| core	count=1
class	the :class ||| base	count=1
function	want to dispatch an ||| post dispatch	count=1
function	proxy [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] x ||| [arg_2] [function_1]	count=4
function	[function_1] mousewheel scrolling ||| [function_2] [function_1]	count=3
function	read events [function] ||| dispatch [function]	count=3
module	if the ||| core window	count=1
class	configparser ||| config	count=1
class	a sound and ||| sound	count=1
function	a joycursor instance attached ||| joycursor	count=1
arg	bytes of the data ||| data	count=2
function	[function_1] supported languages ||| [function_2] [function_1]	count=1
class	the configuration ||| config	count=1
function	when the instance ||| on	count=2
function	[function_1] line ||| [function_2] [function_1]	count=1
arg	[arg] for ||| [arg]	count=1
class	the ||| label base	count=1
function	iterate over [function_2] ||| [function_1] [function_2]	count=3
arg	convert ||| value	count=1
class	text ||| text input	count=1
function	returns a list of ||| get	count=2
class	registered via ||| base	count=1
function	extraneous [function_2] ||| [function_2] [function_1]	count=1
class	all input providers and ||| event	count=1
module	from/to if ||| uix	count=1
class	register method ||| factory base	count=1
function	parser ||| parser	count=1
class	the request ||| url request	count=1
function	double [function_2] ||| [function_2] [function_1]	count=6
class	opened ||| parser	count=1
class	and ||| base	count=2
class	text and order ||| text	count=1
arg	a config name instead ||| name	count=1
module	the ||| core audio	count=2
function	[function_1] less than ||| [function_2] of [function_1]	count=2
function	dot ||| dot	count=1
arg	filename ||| filename	count=1
function_arg	a screen [arg_2] ||| [function_1] [arg_2]	count=1
function	all ||| all	count=1
class	check if ||| abstract	count=1
module_class	copy [module_1] [class_2] in argument ||| [module_1] [class_2] input copy	count=2
class	we have ||| event loop	count=1
function	to load ||| load	count=1
function	it adds the ||| add dep	count=2
function	be used to create ||| create	count=1
module	a single line ||| core	count=1
function	minimum bounding [function_2] ||| core [function_1] [function_2]	count=1
class	candidate with ||| candidate	count=1
class	the file from ||| sound	count=1
function	assigns one [function_2] ||| [function_2] [function_1]	count=2
module	will instantiate [module] ||| [module]	count=1
class	returns ||| data adapter	count=1
module	via the register ||| core	count=1
function	the node [function_2] ||| [function_1] [function_2]	count=1
arg	arglist [arg_2] ||| [arg_1] [arg_2]	count=2
function	in this directory ||| input dir	count=2
module	implementation ||| core	count=1
function	returns the current position ||| get pos	count=1
arg	code should always use ||| logical_line	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=495
function	key release ||| select with key	count=1
function	update the [function_2] ||| [function_1] [function_2]	count=3
function	images/anim_in_out_circ ||| out circ	count=1
function	when the instance has ||| on	count=2
module_class	the [class_2] ||| [module_1] [class_2] input copy	count=3
class	argument passed ||| file system	count=1
class	exception ||| exception	count=1
class	the screen if the ||| base	count=1
module	the screen ||| window	count=1
function	scroll ||| scroll	count=1
class	of ||| event loop base	count=1
module_class	a vector ||| core vector	count=1
function	appropriate size hint for ||| hint	count=1
function	the appropriate size hint ||| layout hint with	count=1
function	[function_1] binary operators ||| [function_2] [function_1]	count=1
class	the view if ||| modal view	count=2
arg	x [arg_2] ||| [arg_1] [arg_2]	count=6
arg	widget ||| widget x	count=1
function	to dispatch an input ||| dispatch input	count=1
class	all input providers ||| event loop base	count=1
function	calculates the dot ||| dot	count=1
function	from window to ||| to	count=1
function	coordinates to local ||| to local	count=2
module	internal this ||| uix	count=1
function	close ||| close	count=2
class	returns ||| chooser controller	count=1
arg	events from ||| dispatch_fn	count=1
function	uid of ||| uid	count=1
function	logical checks on it ||| logical	count=1
class	providers and call ||| event loop	count=1
function	to the keyboard ||| keyboard	count=2
function_arg	[function_1] 4 tuple ||| [function_1] [arg_2]	count=2
function	the distance from ||| distance	count=1
module	the spec hookspath and ||| tools	count=1
function	attempt to [function] ||| [function]	count=3
function	pixels to [function_2] ||| [function_1] [function_2]	count=1
function	bounding [function_2] ||| [function_1] [function_2]	count=1
class	configuration to the last ||| config parser	count=1
class	method ||| base	count=1
function_arg	node [arg_2] ||| [arg_2] [function_1]	count=2
class	motion event you can ||| motion event	count=1
module	from ||| uix	count=1
function	the system for fonts ||| system fonts dir	count=1
function	key ||| with key	count=1
function_arg	put [arg_2] ||| [function_1] [arg_2] mimetype	count=1
function	current position ||| pos	count=1
arg	the specified limit ||| limit timeout	count=1
module	memory ||| audio	count=1
function	the dot product of ||| dot product	count=1
function	[function] class from ||| [function]	count=1
class	list of all ||| event loop	count=1
function	hide the keyboard ||| hide keyboard	count=2
module	if a data ||| core	count=1
module	language builder [module] ||| [module]	count=3
module_class	[module_1] widget i ||| [module_1] [class_2]	count=2
class	requested you should ||| app	count=1
function	stopped ||| stop	count=1
function_arg	[function_1] data to ||| [arg_2] [function_1]	count=2
class	the currently displayed panel ||| panel	count=1
function	when the viewport ||| viewport	count=1
function	keyboard when the instance ||| keyboard on key	count=2
arg	the minimum [arg] required to ||| [arg]	count=1
function	multitouch data ||| mtdata	count=1
module	the mtdev ||| lib	count=1
class	call ||| android	count=1
arg	method bound ||| keycode text modifiers	count=1
function	save ||| save	count=1
arg	[arg_1] key ||| [arg_2] [arg_1]	count=4
function	[function_1] the stroke ||| [function_2] [function_1]	count=1
function	is used for returning ||| load	count=1
class	using the :meth ||| config parser	count=1
arg	[arg_1] y is ||| [arg_2] [arg_1]	count=1
class	indicate if the ||| base	count=1
class	on ||| gesture surface	count=1
class	the :meth read method ||| parser	count=1
arg	the [arg] intended ||| [arg]	count=1
function	[function_1] this directory ||| [function_2] [function_1]	count=4
class	the list of all ||| event loop base	count=1
arg	a joystick has ||| stickid	count=1
module_class	:attr [class_2] ||| [module_1] [class_2]	count=2
function	[function] for ||| minimum [function]	count=1
function	space ||| missing whitespace	count=2
function	runtime hooks ||| runtime hooks	count=1
class	registered using eventloop ||| event loop base	count=1
arg	position indicated ||| last_node last_node_idx	count=1
arg	to catch all ||| _traceback	count=1
class	scatter by ||| scatter	count=1
class	to the last ||| parser	count=1
module	if word is a ||| core spelling	count=1
function	[function_1] leaves ||| [function_1] [function_2]	count=5
class	event ||| window base	count=1
function	color ||| get color	count=1
class	the list ||| event loop base	count=1
module	a single ||| core	count=1
class	:meth read ||| parser	count=1
module	create osc [module_2] ||| [module_1] [module_2]	count=2
function	single space ||| missing whitespace	count=1
function	window to ||| to	count=1
class	provider ||| provider	count=1
class	image data ||| android	count=1
function	mousewheel scrolling ||| mouse scrolling	count=1
module	import statement [module] parenthesised name ||| [module]	count=1
function	to hide [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] size in ||| [function_1] nice [function_2]	count=1
function	node ||| select node	count=1
arg	touch on the ||| touch	count=1
function	or max bounds ||| bounds	count=1
class	open the [class] list and ||| [class]	count=1
function	hidden ||| hide	count=1
module	of matching ||| tools pep8checker	count=1
class	the [class_2] ||| [class_2] [class_1]	count=34
function	density of the screen ||| density	count=1
class	tuio ||| tuio	count=1
function_arg	[function_1] [arg_2] the ||| base [function_1] [arg_2]	count=3
class	registered via the ||| base	count=1
arg	to catch all ||| exception _traceback	count=1
class	return the list ||| event	count=1
class	been [class] ||| [class]	count=3
arg	the view and ||| view	count=1
function	property ||| property	count=4
arg	upgrade the configuration ||| filename overwrite	count=1
function_arg	[function_1] [arg_2] ||| core [function_1] [arg_2]	count=3
module	called by the hook ||| packaging pyinstaller_hooks	count=1
function	node ||| goto node	count=1
function	string ||| load string	count=1
module	the file from memory ||| core	count=1
class	configuration to ||| config	count=1
function	keyboard when the instance ||| keyboard on	count=2
class	be called ||| base behavior	count=1
function	less [function_2] ||| [function_1] [function_2]	count=2
function	to create an ||| create	count=1
arg	smoothing some ||| value_from value_to step	count=1
class	the result ||| standard report	count=1
function_arg	[function_1] [arg_2] ||| [function_1] widget [arg_2]	count=2
class	the ||| config parser	count=3
function	hint for all ||| hint with	count=1
module_class	runs the [class_2] ||| [module_1] [class_2]	count=2
module	return the list of ||| core	count=1
function	creates and assigns one ||| setup	count=1
class	filechoosercontroller ||| file chooser progress	count=1
function_arg	[function_1] portion ||| [function_1] text [arg_2]	count=1
class	in one call ||| camera	count=1
module	word or a ||| core spelling	count=1
module_class	adds [module_1] [class_2] ||| [module_1] [class_2]	count=8
function	[function_1] local ||| [function_2] [function_1]	count=4
arg	b [arg_2] ||| [arg_2] [arg_1]	count=1
arg	value is implicitly converted ||| value	count=1
arg	handling it in ||| oscpath classname	count=1
class	list ||| event	count=1
function	or max bounds on ||| bounds	count=1
function_arg	[function_1] [arg_2] on ||| [function_1] [arg_2] mimetype	count=1
function	with the runtime hooks ||| runtime hooks	count=1
class	the list of ||| event loop base	count=1
function	[function_1] bounding circle ||| core [function_1] [function_2]	count=1
class	indicate whether the texture ||| image	count=1
function	a single space ||| missing whitespace	count=1
function	in sorted_keys [function_2] ||| [function_1] left of [function_2]	count=1
function	uid ||| uid	count=1
module	registered ||| core	count=2
class	animation is ||| animation	count=2
function	to ||| to	count=10
class	loader can be useful ||| loader	count=1
function	send ||| send	count=1
function	[function_1] vector for ||| [function_1] unit [function_2]	count=6
class	event handler fired ||| app	count=1
module	word or a ||| core	count=1
module	of the ||| core	count=5
function	function to show ||| show	count=1
module_class	the scatter ||| uix scatter	count=1
function	breaks before [function_2] ||| [function_1] around [function_2]	count=1
arg	the position indicated by ||| last_node last_node_idx	count=1
class	[class] in argument ||| [class]	count=1
function	[function_1] ~kivy ||| [function_2] [function_1]	count=1
module	a standard number ||| core	count=1
class	matching the ||| base	count=1
class	the ||| event loop	count=1
function_arg	[function_1] an alias ||| [function_1] [arg_2]	count=1
module_class	[module_1] [class_2] ||| [module_1] file [class_2]	count=1
module	override this method in ||| uix	count=1
module	instantiate [module] ||| [module]	count=1
class	the last file ||| config parser	count=1
class	the configuration to the ||| parser	count=1
module	from ||| core	count=1
function_arg	[function_1] node ||| [function_1] [arg_2]	count=3
module	configuration to ||| core	count=1
module	the text [module] ||| [module]	count=1
function	high level ||| to bits	count=1
class	hide ||| focus behavior	count=1
class	instance has focus ||| focus behavior	count=2
function	interface_cls, ||| add interface	count=1
module_class	grab this motion ||| input motion	count=1
function	create an ||| create	count=1
function	[function_1] animate ||| [function_2] [function_1]	count=2
class	return ||| layout manager behavior	count=1
class	the argument passed ||| file system abstract	count=1
function	[function_1] start vector ||| [function_1] [function_2]	count=3
module_class	[module_1] provider ||| [module_1] [class_2]	count=3
class	the list of ||| loop	count=1
class	read method ||| parser	count=1
function	in ||| input	count=1
function	usage to the ||| usage	count=1
function_arg	[function_1] coordinates see ||| [arg_2] [function_1]	count=15
arg	method bound to ||| window keycode text modifiers	count=1
function	and apply ||| apply	count=2
module	by the hook ||| tools packaging pyinstaller_hooks	count=1
function	register a ||| register	count=2
function	node [function_2] ||| [function_1] [function_2]	count=1
class	called) but before the ||| app	count=1
arg	[arg] if ||| [arg] option	count=2
module	screen if the implementation ||| core	count=1
function	update ||| update	count=5
arg	[arg_1] name ||| [arg_1] [arg_2]	count=1
function	have [function] between ||| [function] after import	count=1
class	gesture and returns ||| gesture	count=1
class	without ||| label	count=2
function	create the parser ||| parser	count=1
arg	upgrade the ||| filename overwrite	count=1
function	[function_1] an operator ||| [function_1] [function_2]	count=2
function	has ||| has	count=2
function	compound statements on ||| compound statements	count=1
function	[function_1] distance ||| [function_2] [function_1]	count=10
arg	given [arg] i e ||| [arg]	count=1
function	the velocity according to ||| velocity	count=1
function	method is more ||| create view	count=1
function	distance ||| distance	count=2
class	registered via the ||| factory base	count=1
function	squared ||| length2	count=1
function	method is a directory ||| is	count=1
function	scales the [function_2] ||| [function_1] [function_2]	count=1
arg	the data ||| data	count=3
function	with indices in sorted_keys ||| trim	count=2
function	list of [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] [arg_2] in ||| [arg_2] [arg_1]	count=1
function	extraneous whitespace ||| extraneous whitespace	count=2
function_arg	correct [arg_2] ||| [function_1] [arg_2]	count=1
function	the application loop ||| app	count=1
module	[module] the provided ||| [module]	count=1
arg	value for ||| value	count=1
module	and return ||| lang	count=1
class	menu buttons unless ||| menu sidebar	count=1
function	on ||| on	count=1
module	views into the ||| uix recycleview	count=1
function	:class ~kivy graphics fbo ||| refresh fbo	count=1
function	front ||| front	count=1
module	configuration to the ||| core	count=1
module	storage ||| storage	count=2
module	read ||| core	count=1
function	send it ||| send	count=1
arg	that the value is ||| value	count=1
arg	joystick has ||| stickid	count=1
arg	[arg] a ||| filename [arg]	count=1
module	window ||| core window	count=6
function	nodes that can ||| selectable nodes	count=1
module	statement [module] parenthesised name ||| [module]	count=1
arg	touch is registered the ||| touch	count=1
module	uninstalls [module] kivy's threaded ||| [module]	count=1
module	this should be called ||| uix	count=3
function	new default config ||| config	count=1
module	opened using the ||| core	count=1
function	length of ||| length	count=1
module	adds a ||| core image	count=1
module	of the text ||| core text	count=3
function	viewport ||| viewport	count=1
module	and return the ||| lang	count=1
function	cursor ||| cursor	count=2
function	[function_1] [function_2] ||| [function_1] touch [function_2]	count=5
function	kivy ||| kivy	count=1
class	layout manager ||| recycle layout manager behavior	count=1
function	duration ||| duration	count=1
class	file opened ||| parser	count=1
class	if ||| base	count=1
function	after a comma ||| around comma	count=1
class	window ||| window	count=4
function	[function_1] rounded to ||| [function_1] [function_2]	count=1
function	random ||| random	count=1
class	textinput ||| text	count=1
function	adds the paths ||| add dep paths	count=2
function	the camera internal ||| init camera	count=1
function_arg	[function_1] new touch ||| [function_1] down [arg_2]	count=1
function	for the ||| for	count=1
function	scroll [function_2] ||| [function_2] [function_1]	count=1
class	the mtdev ||| device	count=1
function	append [function_2] ||| [function_1] [function_2]	count=2
function	the content ||| content	count=2
function_arg	raw [arg_2] ||| [function_1] append [arg_2]	count=4
function	size hint for all ||| hint with	count=1
function	the android ||| android	count=1
module	override this method ||| uix	count=1
function_arg	and apply [arg_2] ||| [function_1] widget [arg_2]	count=1
module	generator to ||| uix	count=1
function	triple tap happens inside ||| triple tap	count=1
function	proxy reference ||| proxy ref	count=2
module_class	[module_1] gesture and ||| [module_1] [class_2]	count=4
module	if it collides with ||| uix	count=1
class	implementation ||| base	count=1
class	the window ||| window base	count=4
module	if a data is ||| core	count=1
function	that the view ||| view	count=1
class	only once before run() ||| event loop	count=1
module	causes the ||| uix	count=1
function	merges two gestures ||| merge gestures	count=1
function	want to dispatch ||| post dispatch	count=1
module	of the screen if ||| window	count=1
function_arg	[function_1] numpoints points ||| [arg_2] [function_1]	count=2
class	return ||| manager behavior	count=1
function	[function_1] circle ||| [function_1] [function_2]	count=3
function	node at ||| node at	count=2
class	tree ||| tree view	count=2
function	unbind all the ||| unbind	count=1
class	method ||| config	count=1
module	complicated [module] the ||| [module]	count=1
function	in [function_2] ||| [function_2] [function_1]	count=1
function	start [function_2] ||| [function_2] [function_1]	count=3
module	[module] the ||| [module]	count=2
function_arg	image [arg_2] ||| [arg_2] [function_1]	count=1
function	interpolate between two values ||| interpolate	count=1
class	to the ||| module base	count=1
arg	position indicated by key ||| key last_node last_node_idx	count=1
arg	rules of the widget ||| widget	count=1
arg	the key is ||| key	count=1
arg	computes the angle between ||| a	count=1
class	call callbacks ||| base	count=1
function_arg	[function_1] node and ||| [function_1] [arg_2]	count=3
function	:class ~kivy ||| recycleview	count=2
class	for ||| loop base	count=1
function	the keyboard when ||| keyboard on key	count=2
module	grab this ||| input	count=1
class	via the register ||| factory	count=1
class	the list of ||| event	count=1
function_arg	[function_1] [arg_2] ||| [function_1] key [arg_2]	count=16
class	the button ||| button	count=1
class	bound to the button ||| button	count=1
function	of the first selected ||| of	count=2
function	the binary message ||| binary	count=1
class	the list of ||| base	count=1
class	animation ||| animation	count=5
module	given a target number ||| core	count=1
function	main function that ||| run	count=1
arg	associated with the name ||| name	count=1
function	get statistics for message ||| get statistics	count=1
function	top ||| top	count=1
class	check if a ||| abstract	count=1
function	scale_stroke(scale_factor=float) scales the ||| scale	count=1
function	reset ||| anim reset	count=1
function	[function_1] vector ||| [function_2] [function_1]	count=7
function	[function_1] for this ||| [function_1] file [function_2]	count=1
module	parse [module] ||| [module]	count=1
function_arg	image using the ||| base image filename	count=1
arg	proxyimage ||| load_callback post_callback	count=1
class	input providers and ||| event loop base	count=1
module	support ||| core window	count=2
module	a data is loaded ||| core	count=1
arg	index is visible ||| index	count=1
arg	loading ||| filename kwargs	count=1
arg	loading a ||| filename kwargs	count=1
arg	4 tuple ||| alpha	count=1
module	this method must ||| uix	count=1
function	[function_1] velocity according ||| [function_1] [function_2]	count=2
function	when the ||| on	count=3
class	configparser ||| config parser	count=1
function	fonts ||| fonts dir	count=1
function	show ||| show	count=1
function	action ||| action	count=1
function	[function_1] to animate ||| [function_2] [function_1]	count=1
arg	header ||| header	count=1
arg	convert a ||| value	count=1
arg	catch all the exceptions ||| _traceback	count=1
class	one ||| camera	count=1
function	process options passed either ||| process options	count=1
function	to dispatch [function_2] ||| [function_1] [function_2]	count=1
arg	in the database ||| name classname	count=1
function_arg	register [arg_2] ||| [function_1] [arg_2]	count=2
function	a key release ||| key	count=1
function	main function [function_2] ||| [function_2] [function_1]	count=1
function	restored ||| restore	count=1
class	read method ||| config	count=1
function	create a ||| create	count=1
arg	default value for ||| value	count=1
function	has transformed ||| transform with	count=1
arg	a new touch is ||| touch	count=1
function	the keyboard in managed ||| keyboard	count=2
function	the select call is ||| select list	count=1
arg	set of points ||| points	count=1
class	found ||| screen manager	count=1
module	text with ||| text	count=1
function_arg	[function_1] [arg_2] for ||| [function_1] [arg_2]	count=2
class	all input providers ||| base	count=1
function	write the configuration to ||| write	count=1
function	convert a distance in ||| convert	count=1
function	to show the keyboard ||| show keyboard	count=1
arg	loading a network file ||| filename kwargs	count=1
module	event causes the ||| uix	count=1
function	is a [function_2] ||| [function_2] [function_1]	count=1
class	of ||| base	count=2
class	rules of the ||| builder base	count=1
function_arg	[function_1] 4 tuple ||| [arg_2] [function_1]	count=2
module	spec hookspath and ||| tools	count=1
class	of ||| event	count=1
function	decode ||| decode	count=1
arg	minimum [arg] required to ||| [arg]	count=1
class	implementation doesn't ||| window base	count=1
function	a scroll [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] plugin ||| [function_1] state name [arg_2]	count=1
function_arg	high level [arg_2] ||| [arg_2] [function_1]	count=1
module	in one ||| core camera	count=1
function	to register [function_2] ||| [function_1] named [function_2]	count=1
function_arg	[function_1] new panels ||| [function_1] [arg_2]	count=3
function_arg	for a [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
class	the window this method ||| window base	count=4
function	on the ||| on	count=1
module	hookspath and ||| tools	count=1
module	get the ||| core	count=1
function	files in [function_2] ||| [function_2] [function_1]	count=1
arg	the [arg] intended to ||| [arg]	count=1
function	coordinate from window to ||| to	count=1
arg	by offsetting the ||| offset_x offset_y	count=1
class	via the ||| factory	count=1
function	local coordinates to window ||| to window	count=1
function	unregister a path to ||| unregister	count=1
class	motion [class_2] ||| [class_1] [class_2]	count=3
module_class	the value [class_2] ||| [module_1] [class_2] input copy	count=1
function	logical [function_2] ||| [function_2] [function_1]	count=1
class	to call the callback ||| callback	count=1
function	[function_1] the file ||| [function_1] [function_2]	count=4
module	the screen if the ||| core	count=1
function	[function_1] double ||| [function_1] [function_2]	count=1
module	image ||| core image	count=3
function	[function_1] hooks ||| [function_2] [function_1]	count=3
class	callbacks registered ||| base	count=1
module	configuration based on a ||| core	count=1
module_class	the gesture ||| core gesture	count=1
class	configuration to the last ||| config	count=1
class	using ||| event	count=1
function	get [function_2] ||| [function_1] [function_2]	count=4
arg	touch if you want ||| class_instance exclusive	count=1
function	system for fonts ||| system fonts	count=1
module	is a ||| core	count=1
function_arg	[function_1] with index ||| [function_1] [arg_2]	count=2
function	scroll distance ||| distance to scroll	count=1
function	is more ||| create view	count=1
function	when the ||| on key up	count=1
function	it ||| dep	count=1
function	returns the [function_2] ||| [function_1] [function_2]	count=6
function_arg	[function_1] given ||| [function_1] bundle bundle [arg_2]	count=4
function_arg	[function_1] new ||| [function_1] [arg_2]	count=3
function	rounded to the nearest ||| rounded	count=1
arg	the given *ctx* ||| win ctx	count=3
function	rounded to the ||| rounded	count=1
module	it up to ||| uix	count=1
function	[function_1] released ||| [function_1] [function_2]	count=1
class	using eventloop ||| event loop base	count=1
class	loader thread/process ||| loader base	count=2
function	in standalone mode ||| run	count=1
arg	a touch on the ||| touch	count=1
class	callbacks ||| loop base	count=1
function_arg	[function_1] new touch ||| [arg_2] [function_1]	count=1
arg	that the value ||| option value	count=1
class	if it is open ||| modal	count=1
function	the start [function_2] ||| [function_2] [function_1]	count=3
module	the configuration ||| core	count=1
function	property it ||| cancel property	count=2
module	a standard ||| core	count=1
module	screen if ||| core	count=1
module_class	[module_1] without ||| [module_1] [class_2]	count=4
arg	method bound to the ||| window keycode	count=1
class	using eventloop ||| loop base	count=1
function_arg	returns the [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
class	callback ||| callback	count=1
function	dispatch an input ||| dispatch input	count=1
function	[function_1] keyboard ||| [function_1] [function_2]	count=6
function	[function_1] binary ||| [function_1] [function_2]	count=1
function	triple tap touch ||| triple tap	count=2
function	run all ast checks ||| check ast	count=1
function	to hide [function_2] ||| [function_2] [function_1]	count=3
class	all input ||| loop	count=1
function	size hint for all ||| layout hint	count=1
class	and call callbacks registered ||| event loop base	count=1
class	last file opened ||| config	count=1
module	and ||| tools	count=1
function	node ||| with touch	count=1
class	config ||| config	count=1
function	return the count ||| get	count=1
function	run a ||| run	count=1
function	[function_1] rounded ||| [function_2] [function_1]	count=1
module_class	[module_1] [class_2] widget from the window ||| [module_1] [class_2]	count=2
function	range ||| range	count=1
function_arg	put [arg_2] ||| [arg_2] [function_1]	count=1
module	split and strip and ||| tools pep8checker	count=1
function_arg	to window [arg_2] ||| [arg_2] [function_1]	count=1
module_class	[module_1] [class_2] ||| [module_1] builder [class_2]	count=2
function	convert a [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] binary message ||| [function_1] [function_2]	count=1
function	hint for ||| hint	count=1
function	[function_1] [function_2] contained in a specific ||| [function_1] [function_2]	count=3
function	[function_1] for fonts ||| [function_2] [function_1]	count=5
function	the index of the ||| of	count=3
function	currently running application instance ||| running app	count=1
class	last ||| config parser	count=1
function_arg	process options [arg_2] ||| [arg_2] [function_1]	count=3
function	all files in ||| input	count=1
arg	section keyvalues ||| section keyvalues	count=2
module	screen if the implementation ||| core window	count=1
function	interpolate between ||| interpolate	count=1
module	comparison ||| tools pep8checker	count=1
function_arg	[function_1] a given ||| [arg_2] [function_1]	count=4
class	using ||| config parser	count=1
function	scale_stroke(scale_factor=float) scales [function_2] ||| [function_1] [function_2]	count=1
function	properties [function_2] ||| [function_1] [function_2]	count=2
arg	prefix ||| prefix	count=1
function	return vector for comparing ||| get protractor vector	count=1
function	double ||| double	count=2
arg	matching language ||| language	count=1
function	can load an ||| can load memory	count=2
class	input providers ||| base	count=1
function	the transition ||| transition	count=1
module_class	return the [class_2] ||| [module_1] [class_2]	count=2
class	the last file ||| parser	count=1
function	[function_1] node ||| [function_1] [function_2]	count=1
function_arg	parser [arg_2] ||| [function_1] [arg_2]	count=1
function	also cut leaving only ||| cut to	count=2
function	checker ||| checker	count=1
function	is more ||| view	count=1
class	and call ||| event loop	count=1
module	to a string ||| core	count=1
function_arg	[function_1] joystick has ||| [arg_2] [function_1]	count=2
arg	specified section ||| section	count=1
module	displayed in this textinput ||| uix	count=1
arg	true if the classname ||| classname	count=1
class	using ||| loop	count=1
class	using eventloop ||| loop	count=1
module_class	[module_1] specified ||| [module_1] [class_2]	count=2
class	and ||| event	count=3
class	opened using the :meth ||| config	count=1
class	callbacks registered using eventloop ||| event	count=1
function	bounds on ||| with bounds	count=1
function	changes data [function_2] ||| [function_2] [function_1]	count=2
class	find ||| postproc double tap	count=1
function	all ast ||| ast	count=1
class	return the ||| event	count=1
arg	number of microseconds ||| microseconds	count=1
function	[function_1] bounding circle ||| [function_2] [function_1]	count=1
module_class	launches the [class_2] ||| [module_1] [class_2]	count=2
class	[class_1] called every ||| [class_2] [class_1]	count=1
arg	level ||| level width height data	count=1
function_arg	stop the movement ||| stop val t	count=1
module	to a kivy ||| core	count=1
class	via ||| factory base	count=1
module_class	causes the [class_2] ||| [module_1] [class_2] on bring to	count=1
class	return the list ||| loop base	count=1
class	this candidate and ||| candidate	count=1
function	[function_1] input ||| [function_1] [function_2]	count=3
arg	the value is implicitly ||| value	count=1
module	osc data to ||| lib osc	count=1
function	the appropriate size hint ||| hint	count=1
class	call ||| base	count=1
function	list of the widgets ||| widgets	count=1
arg	triangle defined by a [arg_1] [arg_2] ||| core circumcircle a [arg_1] [arg_2]	count=1
function	[function_1] context ||| [function_1] [function_2]	count=1
arg	view ||| view	count=1
function	when the [function_2] ||| [function_2] [function_1]	count=2
class	the register ||| factory base	count=1
function	[function_1] type ||| [function_1] [function_2] tp	count=1
arg	called when [arg] ||| [arg]	count=3
function	left of ||| left	count=1
function	top of the file ||| top of file	count=1
module	a word or a ||| core spelling	count=1
function	find a [function_2] ||| [function_1] [function_2]	count=10
function	write the configuration ||| write	count=1
class	versionadded : 1 0 ||| app	count=3
function	appropriate size hint for ||| layout hint with	count=1
class	point ||| gesture point	count=1
module_class	the [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	[function_1] the paths ||| [function_1] [function_2]	count=1
class	using the :meth read ||| config	count=1
function	contextualactionview and display either ||| contextual action view	count=1
module	count of errors and ||| tools pep8checker	count=1
function	name associated with this ||| name	count=1
function	packer ||| to int	count=1
class	list ||| loop	count=1
class	event loop ||| event loop	count=1
class	dpi ||| window base	count=1
function	rules ||| rules	count=1
class	window to the ||| base	count=1
class	the ||| loop base	count=1
function	returns the stroke ||| add stroke	count=1
class	bound to the button ||| button behavior	count=1
class	search all the ||| base	count=1
function	sorted_keys ||| trim	count=2
class	true if the device ||| device	count=2
function	[function_1] all nodes ||| [function_1] [function_2]	count=1
arg	the value ||| value	count=1
class	input ||| loop base	count=1
function_arg	checks [arg_2] ||| [arg_2] [function_1]	count=1
function	can ||| can	count=1
arg	a joystick has ||| stickid buttonid	count=1
function	update the ||| update	count=3
module_class	[module_1] animation ||| [module_1] [class_2]	count=4
module	screen if the ||| core window	count=1
module	call this ||| uix	count=1
function	appropriate size hint for ||| layout hint	count=1
class	doesn't ||| window	count=1
module	true if the ||| uix	count=2
arg	portion ||| start end	count=1
class	document ||| document	count=1
function	keys ||| keys	count=1
function	ast checks ||| check ast	count=1
function	[function_1] [function_2] ||| [function_1] to [function_2]	count=3
arg	an alias ||| name fn_regular fn_italic fn_bold	count=1
function_arg	scroll distance [arg_2] ||| [function_1] [arg_2]	count=3
class	callbacks registered ||| event loop base	count=1
function	that are greater ||| sel	count=1
function	front of the ||| front	count=1
function	the node at ||| node at	count=2
class	scatter ||| scatter	count=3
module	instead of a ||| core	count=1
class	the list ||| loop	count=1
module	if the implementation ||| core	count=1
function	dispatch an input ||| post dispatch input	count=3
function	classnames previously registered ||| unregister	count=1
class	return ||| screen manager	count=1
module	[module] json ||| [module]	count=1
function	it adds the paths ||| add dep paths	count=1
function	returns the current ||| get	count=1
module	or a ||| core spelling	count=1
class	next step must [class_1] [class_2] ||| [class_2] [class_1] tick	count=3
function	property it will ||| stop property	count=1
module_class	internal [class_2] ||| [module_1] compound [class_2]	count=1
function	has [function_2] ||| [function_1] [function_2]	count=2
class	set ||| effect fbo	count=1
function	animate content ||| animate content	count=1
arg	touch on ||| touch	count=1
arg	level ||| level width height	count=1
module	the screen if the ||| window	count=1
module	return the text with ||| core text	count=1
class	run() ||| event loop base	count=2
module	a list with ||| core	count=1
class	all input ||| event loop	count=1
function	current ||| current	count=1
function	that are less ||| to sel	count=1
module	callbacks registered using eventloop ||| core	count=1
function	images/anim_in_out_quint ||| out quint	count=1
function	the front of ||| front	count=1
function	parser ||| get parser	count=1
class	converter ||| device	count=1
module	takes a ||| core image	count=1
class	initialise ||| camera	count=1
function	extraneous whitespace after ||| whitespace	count=1
function	backspace ||| backspace	count=1
arg	keyvalues ||| keyvalues	count=1
function_arg	the node [arg_2] ||| [arg_2] [function_1]	count=2
arg	module ||| module	count=1
function	returns the [function_1] [function_2] ||| core [function_1] [function_2]	count=2
module	converted to a string ||| core	count=1
function	return the transition ||| transition	count=1
class	label options ||| label	count=1
function	load ||| load memory	count=1
class	using ||| loop base	count=1
function	and append [function_2] ||| [function_1] [function_2]	count=2
function	gestures together the ||| gestures	count=1
function	node ||| select with touch	count=1
class	in one ||| camera	count=1
class	using the :meth ||| config	count=1
arg	a given [arg] i e ||| [arg]	count=1
module	maximum ||| tools pep8checker	count=1
module_class	v3->v4 [module_1] [class_2] ||| [module_1] [class_2] segment	count=2
function	[function_1] the application ||| [function_2] [function_1]	count=5
class	screen if the implementation ||| window	count=1
function	the [function] ||| init [function]	count=1
function	new default config file ||| config	count=1
module	one call ||| core	count=1
module	an image ||| image	count=1
function	[function_1] the binary ||| [function_2] [function_1]	count=1
class	[class] of ||| gesture [class]	count=3
module_class	to [class_2] ||| [module_1] [class_2]	count=1
function	[function] complicated ||| [function]	count=3
module_class	[module_1] scatter widget ||| [module_1] [class_2]	count=2
arg	the *ctx* and bound ||| win ctx	count=2
class	if the argument passed ||| file	count=1
function	widget [function] them ||| [function]	count=1
arg	prepares the unistroketemplate ||| numpoints	count=1
class	shader ||| effect	count=1
function	add a panel ||| add	count=1
arg	to numpoints points ||| numpoints	count=1
arg	the method bound ||| keycode text modifiers	count=1
module	read ||| lib osc	count=1
module	given a target ||| core	count=1
function	[function_1] index ||| [function_1] [function_2]	count=1
function	[function_1] multitouch data ||| [function_2] [function_1]	count=1
class	the ||| base	count=33
function	append it to ||| append to	count=3
function	can load an image ||| can load memory	count=1
function	list of [function_2] ||| [function_1] [function_2]	count=1
class	configparser instance ||| config	count=1
function	node at the ||| node	count=1
module	from memory ||| core	count=1
function_arg	[function_1] widgets' size ||| [arg_2] [function_1]	count=2
function	the density of the ||| density	count=1
arg	level ||| level	count=1
module	the ||| core	count=35
function	the node [function_2] ||| [function_2] [function_1]	count=1
class	the list ||| base	count=1
module	instead of ||| pep8checker	count=1
function	[function_1] the screen ||| [function_2] [function_1]	count=1
module	internal this method must ||| uix	count=1
function	comparing ||| protractor	count=1
function	returns [function_1] [function_2] for a ||| core [function_1] [function_2]	count=1
module	that ||| lang	count=2
class	gesture and returns the ||| gesture	count=1
arg	definition ||| cls	count=2
function	indices in sorted_keys ||| trim	count=4
function	close the mtdev ||| close	count=1
function	texture created on ||| texture	count=1
arg	gesture ||| gesture	count=2
module	call callbacks registered ||| core	count=1
function	match ||| match	count=1
function	is released ||| up	count=1
function	of [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] movement ||| [function_1] [arg_2]	count=3
function	axis ||| axis	count=1
function	used for returning ||| load	count=1
class	selected ||| selectable	count=1
function_arg	returns [function_1] [arg_2] ||| core [function_1] [arg_2]	count=3
function	extraneous whitespace [function_2] ||| [function_1] [function_2]	count=4
class	the implementation doesn't support ||| window base	count=1
class	the implementation doesn't ||| window base	count=1
function	print ||| print	count=1
function_arg	[function_1] touch ||| [function_1] down [arg_2]	count=1
arg	in the ||| right	count=1
function	appropriate size hint ||| hint	count=1
function	the binary ||| binary	count=1
arg	the unistroketemplate ||| numpoints	count=1
arg	value is implicitly converted ||| section option value	count=1
function	from window to local ||| to	count=1
module	of [module] widget ||| [module]	count=1
function	read ||| read	count=2
function	returns [function_2] ||| [function_2] [function_1]	count=4
function	the density of ||| density	count=1
function	switch ||| switch	count=1
function_arg	when a [arg_2] ||| [function_1] down [arg_2]	count=3
function	breaks before [function_2] ||| [function_1] [function_2]	count=1
class	the stack ||| manager base	count=2
class	event [class_2] ||| [class_2] [class_1]	count=1
function	to create ||| create	count=1
function	the stroke ||| stroke	count=3
arg	its current transformation state ||| trans post_multiply	count=1
function	when ||| on touch	count=2
arg	by a [arg] ||| a [arg]	count=1
function	local coordinates to parent ||| to parent	count=1
module	and call ||| core	count=1
arg	language exists it ||| language	count=1
class	the tuio [class_2] ||| [class_2] [class_1]	count=1
function	a key ||| select with key	count=1
class	to the label ||| markup label	count=1
class	return the list ||| event loop	count=1
function	[function_1] adds the ||| [function_2] [function_1]	count=2
module	a single line ||| core text	count=1
arg	computes ||| a	count=1
function	size hint ||| layout hint	count=1
arg	x y coordinates ||| x y	count=1
function	update the [function_2] ||| [function_2] [function_1]	count=3
class	[class_1] loop ||| [class_1] [class_2]	count=1
function	property ||| cancel property	count=2
arg	value ||| value	count=2
module	the register ||| core	count=1
function	[function_1] binary message ||| [function_2] [function_1]	count=1
function	node ||| node	count=2
function	cancel a ||| cancel	count=1
module_class	[module_1] value provided ||| [module_1] [class_2]	count=1
function	handles the given ||| handles	count=1
function	after a comma ||| comma	count=1
function_arg	[function_1] level ||| [function_1] [arg_2]	count=3
function	appends raw ||| raw append	count=2
function	registered languages select ||| select	count=1
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=57
module	process ||| tools pep8checker	count=1
arg	new panels for ||| panel name uid	count=1
function	viewport [function_2] ||| [function_2] [function_1]	count=6
module	in one call ||| core	count=1
function	calculates the dot product ||| dot product	count=1
module	sound() instance ||| audio	count=1
class	last file opened ||| config parser	count=1
function	the system ||| system	count=1
class	tokenize the ||| checker	count=1
function	parser for the ||| get parser	count=1
class	in the store ||| store	count=1
function	should have [function] between ||| [function] after import	count=1
function_arg	[function_1] data ||| [function_1] [arg_2] mimetype	count=1
function_arg	nodes from [arg_2] ||| [arg_2] [function_1]	count=4
module	order of from/to if ||| uix	count=1
module	the [module] ||| [module]	count=3
function	of the [function_2] ||| [function_1] [function_2]	count=1
module	to ||| core	count=2
function	adds a callback ||| add	count=1
module	test if it collides ||| uix	count=1
function_arg	a point [arg_2] ||| [function_1] [arg_2]	count=5
function	data ||| data	count=1
arg	if the key is ||| key	count=1
function_arg	when a [arg_2] ||| [function_1] button down [arg_2] buttonid	count=1
class	callbacks registered using ||| loop	count=1
class	the rules ||| builder base	count=2
function	convert a [function_2] ||| [function_1] distance [function_2]	count=2
function	an inspector instance attached ||| inspector	count=1
function	[function_1] [function_2] that can be used ||| [function_1] [function_2] tp	count=1
module	and ||| tools pep8checker	count=11
function	returns the dict for ||| get	count=1
class	tokenize ||| checker	count=1
function	files in ||| input	count=1
function	returns the ||| get	count=8
arg	value is implicitly ||| option value	count=1
class	loop ||| loop	count=1
function	classnames previously registered via ||| unregister	count=1
function	the uid of ||| uid	count=1
arg	the value is implicitly ||| option value	count=1
function	contextualactionview and display either ||| contextual action	count=1
class	the ||| loop	count=1
function	[function] instance ||| [function]	count=3
module	instead of ||| tools pep8checker	count=1
class	view [class_2] ||| [class_2] [class_1]	count=8
function	joycursor instance attached ||| joycursor	count=1
arg	[arg_1] keyvalues should ||| [arg_2] [arg_1]	count=1
class	dispatched ||| text input	count=3
class	[class_1] provider ||| [class_2] [class_1]	count=1
function_arg	[function_1] depending on ||| [function_1] [arg_2]	count=7
class	with the bounding box ||| surface	count=1
class	in one call ||| android	count=1
class	all ||| event loop	count=2
arg	velocity to the pos ||| pos	count=1
module_class	for the event ||| core event	count=1
class	associates ||| model behavior	count=1
class	the provider ||| provider	count=1
arg	new touch ||| touch	count=1
function	toggle ||| toggle	count=1
function_arg	when [arg_2] ||| [function_1] textinput [arg_2]	count=1
class	and ||| event loop base	count=1
module	return a sound() instance ||| core audio	count=1
function	merges two gestures together ||| gestures	count=1
function	[function_1] the response ||| [function_2] [function_1]	count=6
function	headers of [function_2] ||| [function_2] [function_1]	count=2
function_arg	appends raw [arg_2] ||| [function_1] [arg_2]	count=4
function_arg	[function_1] given ||| [arg_2] [function_1]	count=4
function	[function_1] binary ||| [function_1] around [function_2]	count=1
function	that are ||| to sel	count=1
module	the :meth read method ||| core	count=1
function	return a list ||| get	count=1
function	released terminated ||| touch up	count=1
function	minimum [function_2] ||| core [function_1] [function_2]	count=3
arg	pos ||| pos	count=1
class	call callbacks ||| loop	count=1
module	last file opened ||| core	count=1
class	gesture ||| gesture container	count=1
function	a list of ||| list	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=930
class	return ||| label base	count=2
module	used [module] ||| [module]	count=1
module	the file from memory ||| core audio	count=1
function	pass the filepath [function_1] [function_2] ||| [function_1] nice [function_2]	count=1
arg	given [arg] i ||| [arg]	count=1
arg	widget ||| widget	count=8
module	if any ||| uix	count=1
function	centers the stroke ||| center stroke	count=2
arg	always use ||| logical_line	count=1
class	input ||| event loop	count=1
module	if the ||| core	count=1
module_class	to [class_2] ||| [module_1] recycleview [class_2]	count=1
class	callbacks ||| event loop	count=1
function	right ||| right	count=1
function	a maximum ||| maximum	count=1
module	position to ||| uix	count=2
arg	for an option in ||| option	count=1
class	last file ||| config parser	count=1
function	return the [function_2] ||| [function_1] file [function_2]	count=1
module	text with all ||| text	count=1
class	the ||| window	count=3
class	using eventloop ||| event loop	count=1
function	create the parser for ||| parser	count=1
module	implementation doesn't ||| window	count=1
class	corresponding ||| layout manager behavior	count=1
function	from a ||| load from	count=1
class	menu ||| menu sidebar	count=2
module	line checks and ||| tools pep8checker	count=1
function	[function_1] from ||| [function_2] [function_1]	count=3
function	for [function_2] ||| [function_2] [function_1]	count=1
module	unregisters the ||| core	count=1
class	to the last file ||| parser	count=1
class	select ||| list adapter	count=1
module	[module] a ||| [module]	count=7
function	in ||| read	count=1
module	be used [module] ||| [module]	count=1
function	a image ||| image	count=1
class	database ||| database	count=1
arg	method bound ||| window keycode	count=1
class	to ||| config	count=1
class	called) but before ||| app	count=1
function	remove an [function_2] ||| [function_1] [function_2]	count=1
class	via the register method ||| base	count=1
module	if the ||| window	count=1
function	when ||| on key up	count=2
module	the first time the ||| core	count=1
module	to fit into a ||| core	count=1
module	screen if ||| window	count=1
function	[function_1] tokens ||| [function_2] [function_1]	count=1
class	indicate if the loader ||| loader base	count=1
function	warnings for this file ||| file results	count=1
function	and returns the stroke ||| add stroke	count=1
module	of the screen ||| core	count=1
module_class	the loader ||| core loader base	count=1
module	this method ||| uix	count=5
class	if the ||| window base	count=1
module	word is a ||| core spelling	count=1
module_class	[module_1] [class_2] of ||| [module_1] gesture [class_2]	count=3
module	the mtdev converter ||| lib	count=1
class	the ||| parser	count=3
function	[function_1] the keyboard ||| [function_1] [function_2]	count=6
module	if the ||| uix	count=3
class	the ||| camera base	count=2
function	a [function] ||| add [function]	count=1
arg	coordinates see ||| x y initial relative	count=1
module	text ||| text	count=2
module	objects ||| lang	count=1
function	[function_1] selection ||| [function_2] [function_1]	count=1
function	[function_1] the keyboard ||| [function_2] [function_1]	count=6
module	the implementation ||| core window	count=1
function_arg	node at [arg_2] ||| [function_1] key [arg_2]	count=2
function_arg	[function_1] a new ||| [function_1] panel [arg_2]	count=1
function	animate content to ime ||| animate content	count=1
function	keyboard [function_2] ||| [function_1] [function_2]	count=8
class	if the implementation ||| window	count=1
arg	or via command ||| parse_argv config_file parser	count=1
function	[function_1] tokens ||| [function_1] [function_2]	count=1
function	when a ||| on joy	count=5
class	file ||| file	count=1
arg	touch [arg_2] ||| [arg_2] [arg_1]	count=2
function	and append [function_2] ||| [function_2] [function_1]	count=2
arg	specified limit ||| limit timeout	count=1
module	file opened using ||| core	count=1
class	and call ||| loop base	count=1
function	the screen ||| screen	count=1
module	this will be the ||| core	count=1
class	the configuration ||| config parser	count=1
function	return the [function_2] ||| [function_1] [function_2]	count=5
arg	internal loading a ||| filename kwargs	count=1
function	name ||| name	count=1
module_class	the loader can ||| core loader base	count=1
function	[function_1] to ||| [function_2] [function_1]	count=4
function	local file ||| local	count=1
function_arg	[function_1] of microseconds ||| [arg_2] [function_1]	count=1
module_class	a exception ||| core exception	count=1
function	from ||| load from	count=1
function_arg	[function_1] in ||| [arg_2] [function_1]	count=2
function	hint for all ||| layout hint	count=1
arg	viewport ||| viewport	count=1
arg	with the specified limit ||| limit timeout	count=1
class	mtdev ||| device	count=1
module_class	and [class_2] ||| [module_1] [class_2]	count=2
class	current ||| code input	count=1
function	[function_1] file ||| [function_1] [function_2]	count=4
function	for the android ||| android	count=1
function	exists in the ||| exists	count=1
function	import ||| import gesture	count=2
class	gesture and ||| gesture	count=1
function	[function_1] cursor leaves ||| [function_2] [function_1]	count=3
class	providers and ||| event loop	count=1
function	size width height ||| size	count=2
class	[class_1] loader ||| [class_2] [class_1]	count=8
arg	from grabbed ||| buf	count=1
function	that are [function_2] ||| [function_2] [function_1]	count=24
function	interpolate between two ||| interpolate	count=1
function	pythonconfigparser's set method except ||| set	count=1
function_arg	[function_1] [arg_2] ||| [function_1] panel [arg_2]	count=5
function	unbind all ||| unbind	count=1
class	an atlas ||| atlas	count=1
arg	viewport is in ||| data viewport	count=1
module	the [module] the ||| [module]	count=2
function	min or max bounds ||| bounds	count=1
function	[function] joystick has ||| [function]	count=3
arg	match [arg] widget ||| widget [arg]	count=1
class	sorted_keys ||| dict adapter	count=1
module	compound ||| tools pep8checker	count=1
module	launches the ||| core	count=1
class	of the screen if ||| base	count=1
arg	if you want ||| class_instance exclusive	count=1
arg	depending on ||| dx dy	count=1
function	statistics for ||| statistics	count=1
function	logical checks ||| logical	count=1
module	used [module] json ||| [module]	count=1
module_class	[module_1] gesture ||| [module_1] [class_2]	count=8
function	scale_stroke(scale_factor=float) scales [function_2] ||| [function_2] [function_1]	count=1
module_class	[module_1] container ||| [module_1] [class_2]	count=6
module	file opened using the ||| core	count=1
function	less than [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] that are ||| [function_1] to [function_2]	count=4
arg	value ||| section option value	count=1
arg	events from the ||| dispatch_fn	count=1
function	rounded to ||| rounded	count=1
function	dispatch an ||| dispatch	count=1
function	return [function_2] ||| [function_2] [function_1]	count=8
module	a thread-safe ||| core	count=1
function	return the name ||| get application name	count=2
arg	finished is true ||| finished	count=1
class	candidate with the ||| candidate	count=1
function	button [function_2] ||| [function_2] [function_1]	count=1
class	provider ||| motion event	count=1
function	get ||| get	count=12
class	result ||| standard	count=1
function	coordinate ||| highlight at	count=2
module	!= instead of ||| tools pep8checker	count=1
module	return a [module_2] ||| [module_1] [module_2]	count=2
function_arg	checker [arg_2] ||| [arg_2] [function_1]	count=1
class	if the ||| window	count=1
function	returns the stroke ||| stroke	count=1
class	list ||| list	count=4
function	signed integer ||| long	count=1
function	than the index of ||| of	count=3
arg	warnings ||| prefix	count=1
module	list of all ||| core	count=1
function	line on ||| on	count=1
module	a string ||| core	count=1
function	check if the syntax ||| syntax	count=1
class	current line ||| input	count=1
class	and call callbacks ||| event loop	count=1
function	to show [function_2] ||| [function_1] [function_2]	count=3
function	the status code ||| status	count=1
class	list of ||| event loop	count=1
function_arg	[function_1] [arg_2] ||| [function_1] button down [arg_2] buttonid	count=2
module	items with indices ||| adapters	count=1
function	find a ||| find	count=2
module	on a ||| core	count=1
module	after a ||| core	count=1
function	[function_1] single space ||| [function_2] [function_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] bundle bundle [arg_2]	count=8
function	the parser for the ||| parser	count=1
function	changes data changes typically ||| refresh from data	count=1
function	[function] that ||| [function]	count=1
function	return the dpi ||| dpi	count=1
function	front of ||| front	count=1
module	and call callbacks registered ||| core	count=1
function	convenience function to show ||| show	count=1
arg	the value of an [arg_1] [arg_2] if not found ||| [arg_2] [arg_1] defaultvalue	count=3
function	assigns one ||| setup	count=1
class	the implementation doesn't support ||| base	count=1
class	the loader ||| image loader base	count=2
function_arg	[function_1] this category ||| [arg_2] [function_1]	count=2
class	using ||| event loop base	count=1
class	registered ||| base	count=2
arg	b [arg_2] ||| core circumcircle a [arg_1] [arg_2]	count=1
class	registered ||| event loop base	count=1
function	for returning ||| load	count=1
function	a scroll distance ||| distance to scroll	count=1
class	all input providers ||| loop	count=1
function	add a panel for ||| add	count=1
arg	a [arg] ||| filename [arg]	count=3
module	all ||| core	count=2
function	of paths ||| paths	count=1
class	in ||| camera	count=1
arg	for this category ||| argument_name	count=1
function	physical ||| physical	count=1
function	starts the application ||| app	count=1
module	from the ||| uix	count=1
function_arg	[function_1] data to ||| [function_1] [arg_2]	count=1
class	using eventloop ||| event	count=1
class	[class] kv ||| builder [class]	count=3
function	iterate over [function_2] ||| [function_2] [function_1]	count=3
function	the node at the ||| goto node	count=1
module	specific group [module] ||| [module]	count=1
function	the cursor leaves ||| cursor leave	count=2
module	to test if ||| uix	count=1
class	for on_stop events which ||| base	count=1
class	input ||| loop	count=1
class	image data from ||| camera android	count=1
function	sorted_keys [function_2] ||| [function_1] to [function_2]	count=1
arg	a new touch ||| touch	count=1
function	top of [function_2] ||| [function_1] [function_2]	count=1
class	container ||| gesture container	count=1
function	template from the :class ||| template	count=1
module	the ||| camera	count=1
class	pass to the ||| base	count=1
class	requested you ||| app	count=1
class	registered using eventloop ||| base	count=1
function	more ||| view	count=1
function	[function_1] the stroke ||| [function_1] [function_2]	count=1
module	return true if the ||| uix	count=1
function_arg	a point x ||| point x	count=1
function	the runtime ||| runtime	count=1
class	window this ||| window	count=4
function	[function_1] rounded ||| [function_1] [function_2]	count=1
class	once before run() ||| event loop base	count=1
function	two gestures together ||| merge gestures	count=1
module_class	causes the [class_2] ||| [module_1] [class_2]	count=1
module	that match ||| lang	count=1
class	[class_1] event you ||| [class_1] [class_2]	count=1
function	[function_1] index of ||| [function_2] [function_1]	count=2
function	tap touch within *self ||| tap	count=1
function	internal update [function_2] ||| [function_1] [function_2]	count=2
module_class	[module_1] exception ||| [module_1] [class_2]	count=2
function	local coordinates to ||| to	count=2
function	to a maximum ||| maximum	count=1
module	the :meth read ||| core	count=1
function	when the instance has ||| on key up	count=1
function	scales ||| scale	count=1
arg	string unpacker ||| string	count=1
module	screen if the ||| window	count=1
arg	position indicated [arg_2] ||| [arg_2] [arg_1]	count=2
function	[function_1] position ||| [function_2] [function_1]	count=1
function	in pixels to a ||| to	count=1
class	all input providers and ||| loop base	count=1
class	request has been completed ||| url request	count=1
class	to the ||| config parser	count=1
function	cancel a movement ||| cancel	count=1
function	physical line ||| physical	count=1
module	if ||| uix	count=7
function	[function_1] product of ||| [function_1] [function_2]	count=3
function_arg	[function_1] data ||| [function_1] [arg_2]	count=1
arg	the program ||| prog version	count=1
class	method ||| factory base	count=1
arg	node and down ||| node	count=1
function	keyboard when the instance ||| keyboard on key up	count=1
class	in ||| android	count=1
class	return the list ||| loop	count=1
module	screen if the implementation ||| window	count=1
function	comparison to ||| comparison to	count=1
arg	dispatch_input() when we ||| etype me	count=1
function	languages select the ||| select	count=1
class	call callbacks ||| event loop base	count=1
function	[function_1] the name ||| [function_2] [function_1]	count=1
function	minimum [function_2] ||| [function_2] [function_1]	count=3
module	trailing ||| tools pep8checker	count=1
class	called every ||| base	count=1
arg	the widget and ||| widget	count=1
arg	unistroketemplate ||| numpoints	count=1
function	vector for comparing ||| protractor vector	count=3
function	reactor ||| reactor	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to scroll [arg_2]	count=3
function	is a ||| is dir	count=1
module	a thread-safe exit point ||| core	count=1
function_arg	path resampled [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] the widgets ||| [function_2] [function_1]	count=1
class	if the request is ||| request	count=1
function_arg	[function_1] x y ||| [function_1] [arg_2]	count=4
module_class	a vector ||| core vector segment	count=1
class	list of ||| loop	count=1
class	print the result ||| standard	count=1
function	leaves ||| leave	count=1
module	a standard number of ||| core	count=1
function_arg	point x ||| point x	count=1
arg	dispatch_input() ||| etype me	count=1
class	implementation ||| window base	count=1
class	sound and ||| sound	count=1
function	contextualactionview and display ||| contextual action	count=1
module	the file's ast and ||| tools pep8checker	count=1
function	[function] in the ||| [function]	count=3
class	return the list of ||| base	count=1
arg	numpoints points ||| numpoints orientation_sens	count=1
arg	set the name ||| name	count=1
function	images/anim_out_quint ||| out quint	count=1
function	when the instance ||| on key	count=2
function	binary ||| binary	count=2
arg	section [arg_2] ||| [arg_1] [arg_2]	count=3
function	property ||| stop property	count=1
arg	another ||| comparison_gesture	count=1
function	checks ||| checks	count=1
function_arg	color [arg_2] ||| [arg_2] [function_1]	count=1
arg	new panels ||| panel name uid	count=1
class	providers and call ||| event	count=1
class	registered via ||| factory base	count=1
function	[function_1] input ||| [function_2] [function_1]	count=3
function	offset on ||| offset	count=1
function	when the cursor ||| on cursor	count=3
class	default ||| metrics	count=1
function	to ||| copy to	count=1
function	the stroke ||| add stroke	count=1
function	hint for all ||| hint	count=1
function	bounds on ||| bounds	count=1
function	of paths ||| normalize paths	count=1
function	create [function_2] ||| [function_1] [function_2]	count=2
function	if the syntax ||| syntax	count=1
function	to hide the ||| hide	count=1
function	the keyboard [function_2] ||| [function_1] [function_2]	count=8
class	the list of all ||| event loop	count=1
class	registered via the ||| factory	count=1
arg	finished ||| finished	count=1
function	hint for all ||| layout hint with	count=1
function	path resampled ||| unit	count=1
function_arg	checks [arg_2] ||| [function_1] [arg_2]	count=1
function	images/anim_out_back ||| out back	count=1
function	a :class ~kivy ||| recycleview	count=1
function	to add ||| add	count=2
module_class	[module_1] returns ||| [module_1] [class_2]	count=1
class	implementation doesn't support ||| window	count=1
arg	index is ||| index	count=1
module	a target ||| core	count=1
function	load an image ||| load	count=1
module	has [module] hat/dpad moved ||| [module]	count=1
arg	this category ||| argument_name	count=1
arg	text ||| text	count=2
function	[function_1] that are ||| [function_1] of [function_2]	count=1
class	loader ||| loader	count=9
module	remove the ||| uix	count=1
function	nodes that can be ||| selectable nodes	count=1
function	product ||| product	count=1
function	that ||| selectable	count=1
module_class	[module_1] [class_2] in argument ||| [module_1] [class_2] input copy	count=1
module	the implementation doesn't ||| window	count=1
function	correct ||| correct	count=1
module_class	as a vector ||| core vector segment	count=1
function	ball ||| ball	count=1
arg	the matching ||| rotation_invariant	count=1
function	[function_1] scroll ||| [function_1] [function_2]	count=4
function	[function_1] start vector ||| [function_2] [function_1]	count=3
function	up event ||| on touch up	count=1
class	touch [class_2] ||| [class_2] [class_1]	count=1
function	select call is ||| select	count=1
function	[function] for ||| [function]	count=2
function	property it will ||| property	count=3
class	has been [class] ||| [class]	count=3
module	file from memory ||| core	count=1
function	proxy [function_2] ||| [function_1] [function_2]	count=1
module	of root objects ||| lang	count=1
arg	via arglist [arg_2] ||| [arg_2] [arg_1]	count=2
function	button ||| joy button	count=2
function	called when the viewport ||| viewport	count=1
function	start vector for ||| start unit vector	count=1
module_class	internal [class_2] ||| [module_1] [class_2]	count=1
class	if it ||| modal	count=1
module	attach a ||| core	count=1
arg	*ctx* and bound ||| win ctx	count=2
module_class	[module_1] vector object ||| [module_1] [class_2] segment	count=6
module	and run checks on ||| tools pep8checker	count=1
class	the database ||| gesture database	count=1
class	initialise the ||| camera base	count=1
module_class	copy [module_1] [class_2] ||| [module_1] [class_2]	count=1
function	[function_1] around keywords ||| [function_2] [function_1]	count=1
class	for ||| base	count=3
module	test if ||| uix	count=1
function	lzw ||| lzw	count=1
arg	given *ctx* ||| win ctx	count=3
function	from input providers ||| input	count=1
function	[function_1] current position ||| [function_2] [function_1]	count=1
function	only when [function] needs ||| install [function]	count=1
function	binary and send ||| send	count=1
class	providers and call ||| base	count=1
function	product of the gesture ||| product	count=1
arg	scroll to the reference ||| ref	count=1
function	[function] gesture ||| on [function]	count=1
class	file opened ||| config	count=1
module	first time the ||| core	count=1
module	the file ||| core audio	count=1
class	atlas ||| atlas	count=1
class	scatter by applying ||| scatter	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=6
arg	match the widget and ||| widget	count=1
function	of the widgets ||| widgets	count=1
module	a dummy ||| core camera	count=1
function	angle similarity between this ||| angle similarity	count=1
class	for on_stop events ||| base	count=1
class	last ||| parser	count=1
module	a ||| core camera	count=2
module	one ||| core camera	count=2
arg	widget that [arg_2] ||| [arg_2] [arg_1]	count=1
function	images/anim_in_out_quart ||| out quart	count=1
function	[function_1] mousewheel scrolling ||| [function_1] [function_2]	count=3
function	cancel any action ||| cancel	count=1
arg	matching ||| rotation_invariant	count=1
class	:meth read method ||| config	count=1
function	gestures ||| gestures	count=1
function	[function_1] load ||| [function_2] [function_1]	count=1
class	if the ||| base	count=2
function	to get the node ||| node	count=1
arg	parse a comma-separated list ||| value parent	count=1
function	[function_1] tap ||| [function_1] [function_2]	count=6
arg	of errors and warnings ||| prefix	count=1
function	with the runtime ||| runtime	count=1
function	get the node ||| goto node	count=1
class	:meth ||| parser	count=1
function_arg	[function_1] via arglist ||| [function_1] [arg_2]	count=2
function	compute the distance ||| distance	count=1
function	of the cursor from ||| cursor from	count=1
module	implementation doesn't ||| core window	count=1
module	and return the root ||| lang	count=1
function	minimum ||| minimum	count=1
function	this method is more ||| view	count=1
class	label options ||| markup label	count=1
function	[function] for ||| resolve [function]	count=2
class	the file from memory ||| sound	count=1
function	all the rules ||| rules	count=1
class	of the ||| base	count=3
function	around [function_2] ||| [function_2] [function_1]	count=2
class	loader can be useful ||| loader base	count=1
module	as a ||| core	count=1
module_class	as a [class_2] ||| [module_1] [class_2] segment	count=2
module	to the last ||| core	count=1
function	append it ||| append	count=1
function	this directory ||| dir	count=1
function	reset the ||| reset	count=1
class	list of ||| loop base	count=1
class	read ||| config	count=1
module	call ||| core	count=2
function	[function_1] icon of ||| [function_1] application [function_2]	count=1
function	separate [function_2] ||| [function_1] [function_2]	count=1
function	max bounds ||| bounds	count=1
function	size hint ||| layout hint with	count=1
function	top left toolbar of ||| toolbar	count=1
arg	widget [arg_2] ||| [arg_2] [arg_1]	count=1
function	that are [function_2] ||| [function_2] of [function_1]	count=8
function	get the node at ||| goto node	count=1
function	all logical checks ||| logical	count=1
class	removes ||| data adapter	count=1
function_arg	[function_1] string unpacker ||| [arg_2] [function_1]	count=1
function_arg	grab a [arg_2] ||| [arg_2] [function_1]	count=1
class	multistrokegesture object ||| multistroke gesture	count=1
function	create the parser ||| get parser	count=1
function	is a mousewheel scrolling ||| is mouse scrolling	count=1
class	menu buttons unless they ||| menu sidebar	count=1
function	when a new ||| on touch	count=1
function	select the first language ||| select	count=1
module	implementation doesn't support ||| core window	count=1
class	:meth ||| config	count=1
function	gestures together the ||| merge gestures	count=1
function	parser for ||| parser	count=1
arg	the widget [arg_2] ||| [arg_1] [arg_2]	count=1
function	a double ||| double	count=2
class	in one ||| android	count=1
class	add ||| event loop base	count=1
class	registered via the register ||| base	count=1
function	[function_1] tap touch ||| [function_1] [function_2]	count=6
class	all input [class_2] ||| [class_2] [class_1]	count=1
function_arg	when a [arg_2] ||| [arg_2] [function_1]	count=5
arg	data to ||| data	count=1
class	rules of the ||| base	count=1
arg	with the prefix ||| prefix	count=1
function_arg	apply them ||| apply widget ignored_consts	count=1
class	your [class] is ||| [class]	count=1
arg	unistroketemplate for matching given ||| numpoints	count=1
function	density of the ||| density	count=1
function	return the directories ||| get	count=1
function	when [function] needs ||| install [function]	count=1
function	of text displayed ||| text	count=1
function	called when [function_2] ||| [function_2] [function_1]	count=2
function	from ||| from	count=2
function	[function_1] drawing counter ||| [function_2] [function_1]	count=1
function	configparser with ||| config	count=1
function	the dot [function_2] ||| [function_1] [function_2]	count=4
function	changes and the displayed ||| refresh from	count=1
class	button ||| button	count=1
function	another known ||| touch down	count=1
module_class	the cache ||| core cache	count=2
function	when the instance has ||| on key	count=2
function_arg	to window [arg_2] ||| [function_1] [arg_2]	count=1
module	a list ||| core	count=2
class	the list ||| event	count=1
function	get a list ||| list	count=1
module_class	the current touch ||| input motion	count=1
module	implementation doesn't support ||| core	count=1
class	for this loader ||| loader	count=3
class	for on_stop ||| base	count=1
function	[function_1] node at ||| [function_2] [function_1]	count=1
class	toggle ||| window base	count=1
arg	finished is ||| finished	count=1
function	density of ||| density	count=1
function	keyboard in managed mode ||| keyboard	count=2
class	animate ||| carousel	count=1
function	[function_1] keywords ||| [function_2] [function_1]	count=2
module	input ||| core	count=1
function	create a [function_2] ||| [function_2] [function_1]	count=2
class	of the ||| window base	count=1
function	current context ||| current context	count=2
module	if it collides ||| uix	count=1
function	the drawing counter ||| draw	count=1
function	the paths with the ||| paths	count=1
function	event called [function_2] ||| [function_2] [function_1]	count=1
function_arg	a image [arg_2] ||| base [function_1] [arg_2]	count=1
arg	widget and ||| widget	count=1
module	file from ||| core	count=1
function	for [function_2] ||| [function_1] [function_2]	count=1
class	configparser instance if ||| config parser	count=1
function	parser for ||| get parser	count=1
arg	[arg] of ||| [arg]	count=1
class	configuration to ||| parser	count=1
class	view ||| modal view	count=1
function	a scroll [function_2] ||| [function_2] to [function_1]	count=1
class	opened using ||| parser	count=1
function	the distance from ||| get distance	count=1
function	scale_stroke(scale_factor=float) scales the stroke ||| scale stroke	count=1
class	provider ||| event provider	count=1
function	properties to [function_2] ||| [function_2] [function_1]	count=1
function	process ||| process	count=1
function	executed mainloop ||| run mainloop	count=1
function	1 9 ||| root window	count=1
arg	internal loading ||| filename kwargs	count=1
function	table ||| table	count=1
function	get [function_2] ||| [function_2] [function_1]	count=4
module	of the ||| core window	count=1
function	application loop ||| app	count=1
function	when the instance ||| on key up	count=1
module_class	[module_1] provider ||| [module_1] tuio [class_2]	count=1
function	dispatch an [function_2] ||| [function_2] [function_1]	count=1
function	window to [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] the file ||| [function_2] [function_1]	count=4
class	event ||| event loop	count=1
arg	the newer one gets ||| g other	count=1
function	select ||| select	count=3
module	in one ||| camera	count=1
module	if ||| uix behaviors	count=2
module_class	[module_1] the ||| [module_1] builder [class_2]	count=1
class	gesture with another gesture ||| gesture	count=1
module	override this ||| uix	count=1
function	files in [function_2] ||| [function_1] [function_2]	count=1
module	tuio ||| input providers	count=1
class	the data ||| data	count=1
function	method is a directory ||| is dir	count=1
function	top of the ||| top of	count=2
class	call callbacks registered using ||| event	count=1
module	return the ||| core window	count=1
class	the point ||| point	count=1
function_arg	[function_1] depending on ||| [function_1] to scroll [arg_2]	count=1
function	[function_1] local ||| [function_1] [function_2]	count=4
module	this method must be ||| uix	count=1
function	the widgets ||| widgets	count=1
class	current line ||| code input	count=1
class	providers and ||| base	count=1
class	call the callback ||| callback	count=1
function	internal update [function_2] ||| [function_2] [function_1]	count=2
module	word is a ||| core	count=1
arg	config name instead ||| name	count=1
module	cursor to the ||| uix	count=1
function	the classnames previously registered ||| unregister	count=1
module	checks on ||| pep8checker	count=2
function	a list ||| list	count=1
function	so that the view ||| view	count=1
function	to [function] ||| on bring to [function]	count=3
class	whole ||| abstract store	count=1
class	report ||| standard report	count=1
function	to animate ||| to animate	count=2
class	the ||| module base	count=1
function	[function_1] keyboard in ||| [function_2] [function_1]	count=6
function	the checks ||| checks	count=1
arg	name instead ||| name	count=1
module_class	objects [class_2] ||| [module_1] [class_2]	count=1
function_arg	[function_1] using ||| base [function_1] [arg_2]	count=3
function	called when the ||| on	count=1
module	return the [module_2] ||| [module_1] [module_2]	count=8
class	sleeps ||| base behavior	count=1
function	[function] of the ||| [function]	count=2
module	selection [module] clipboard ||| [module]	count=1
function	distance ||| get distance	count=1
class	to the ||| config	count=1
function	dot product of ||| dot product	count=2
class	configparser instance if not ||| config	count=1
function_arg	and apply [arg_2] ||| [arg_2] [function_1]	count=1
module	by calling ||| behaviors	count=1
function	start vector ||| start unit vector	count=1
function	stroke ||| stroke	count=3
arg	category in ||| category	count=1
function	current [function] ||| pop [function]	count=3
function	image ||| image	count=2
function	the select call ||| select list	count=1
function	cursor [function_2] ||| [function_1] [function_2]	count=2
function	front of the parent ||| front	count=1
function	hide the ||| hide	count=1
module	[module] app ||| [module]	count=3
function	[function_1] [function_2] ||| [function_1] named [function_2]	count=4
arg	from node and ||| node	count=1
function_arg	[function_1] an alias ||| [arg_2] [function_1]	count=1
function	[function_1] the paths ||| [function_1] dep [function_2]	count=1
function	delete text [function_2] ||| [function_2] [function_1]	count=4
arg	useful for smoothing some ||| value_from value_to step	count=1
class	view ||| view	count=2
module	[module] beginning ||| [module]	count=3
arg	rule_name ||| rule_name	count=1
module	to the ||| uix	count=6
class	layout manager ||| recycle layout manager	count=1
class	all input providers ||| event loop	count=1
module_class	the value [class_2] ||| [module_1] [class_2]	count=1
class	the instance has focus ||| focus	count=2
function	the parser for ||| parser	count=1
function_arg	[function_1] numpoints points ||| [function_1] vector [arg_2]	count=2
function	statements on the same ||| statements	count=1
class	of the screen ||| window base	count=1
class	the register ||| base	count=1
arg	y ||| y	count=3
function	parent ||| parent	count=1
arg	to handle in ||| oscpath classname	count=1
function	end of the word ||| word	count=1
function	raw ||| raw	count=1
function	index of the last ||| of	count=1
module	matching given a ||| core	count=1
class	the screen if ||| window	count=1
function	frame ||| frame	count=1
function	size hint for ||| layout hint with	count=1
class	the screen ||| base	count=1
module	of errors and ||| tools pep8checker	count=2
class	select ||| spelling base	count=1
class	[class_1] manager ||| [class_1] [class_2]	count=1
function	on_start which ||| start	count=1
class	candidate and ||| candidate	count=1
module	[module] runtime_hooks values ||| [module] packaging	count=3
module	in ||| core camera	count=2
class	screen if the implementation ||| window base	count=1
function	[function_1] type ||| [function_2] [function_1]	count=1
function	up ||| touch up	count=1
class	list of all ||| event loop base	count=1
module	by calling both ||| behaviors	count=1
function	return the count of ||| get	count=1
function	triple tap touch within ||| triple tap	count=1
function	the keyboard when the ||| keyboard on	count=2
function	at ||| at	count=1
module	this filename if ||| uix	count=1
function	less than the index ||| left	count=2
function_arg	specific mipmap [arg_2] ||| [function_1] [arg_2]	count=1
class	must [class] ||| clock [class]	count=3
function	internal reset the value ||| reset	count=1
function	keyboard in ||| keyboard	count=2
class	step must [class] ||| clock [class]	count=3
function	associates a :class ||| attach	count=1
module	doesn't support ||| core	count=1
function	when a ||| on touch	count=1
function	register a new type ||| register type	count=1
module	the [module] the provided ||| [module]	count=1
module	or a ||| core	count=1
function	double float ||| double	count=1
module_class	[module_1] widget ||| [module_1] [class_2]	count=4
function	associates ||| attach	count=2
class	if ||| window base	count=1
arg	the movement ||| val t	count=3
class	readable ||| gif decoder	count=1
function	register a [function_2] ||| [function_1] named [function_2]	count=1
module	checks on the input ||| pep8checker	count=1
function	get the node ||| get node	count=2
function	hide the [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] less ||| [function_2] of [function_1]	count=2
arg	the pos ||| pos	count=1
class	of the screen if ||| window	count=1
class	window to the ||| module base	count=1
function	context ||| context	count=1
function	circle ||| circle	count=1
function_arg	[function_1] by offsetting ||| [arg_2] [function_1]	count=3
class	list of all ||| event	count=1
module	a target number ||| core	count=1
function_arg	[function_1] program ||| [arg_2] [function_1]	count=2
function	schedule one reactor ||| reactor	count=1
module	opened using the :meth ||| core	count=1
module	register ||| core	count=1
function_arg	specific mipmap [arg_2] ||| [arg_2] [function_1]	count=1
function	returns a list ||| get	count=2
class	all input ||| loop base	count=1
function_arg	appends raw data ||| raw append data	count=1
arg	the method bound to ||| window keycode	count=1
module	to a ||| core image	count=1
function	[function_1] icon of ||| [function_2] [function_1]	count=1
function	load ||| load	count=4
class	app ||| app	count=1
class	initialise ||| camera base	count=2
class	key-value pairs ||| abstract store	count=1
module_class	[module_1] is ||| [module_1] [class_2]	count=1
function	statistics for message ||| statistics	count=1
class	via the register ||| factory base	count=1
function	method is ||| is	count=1
function	event called [function_2] ||| [function_1] [function_2]	count=1
module	is a ||| core spelling	count=1
arg	a [arg] ||| [arg]	count=4
function	tick the ||| tick	count=1
function	[function_1] file ||| [function_2] [function_1]	count=14
function	place imports ||| imports	count=1
class	argument passed ||| file	count=1
function	of the word ||| word	count=1
class	the [class] list ||| [class]	count=1
function_arg	stroke [arg_2] ||| [arg_2] [function_1]	count=4
function	property it will not ||| property	count=3
module	a single line by ||| core	count=1
arg	default value ||| value	count=1
function	usable string ||| paste	count=1
function	the angle similarity between ||| angle similarity	count=1
function	is released terminated ||| touch up	count=1
function	to a scroll ||| to scroll	count=3
module	screen ||| window	count=1
arg	name instead ||| name widget_ref	count=1
class	event loop ||| event loop base	count=2
arg	the mimetype if possible ||| mimetype	count=1
module	the list of ||| core	count=1
class	manager ||| manager	count=1
function	return the [function_2] ||| [function_2] [function_1]	count=9
class	animation is running remove ||| animation	count=2
class	all ||| style	count=1
class	the :meth read method ||| config	count=1
arg	given ||| oscaddress dataarray	count=1
function	[function_1] fonts ||| [function_2] [function_1]	count=4
class	all ||| loop	count=2
module	callbacks registered ||| core	count=1
module	and call callbacks ||| core	count=1
function	[function_1] of ||| [function_1] [function_2]	count=5
function	the response ||| resp	count=1
arg	proxyimage is returned with ||| load_callback post_callback	count=1
function_arg	put data on ||| put data mimetype	count=1
class	be called every ||| base behavior	count=1
module	of errors and warnings ||| tools pep8checker	count=1
module	a dummy placeholder the ||| core	count=1
function	[function_1] selection ||| [function_1] [function_2]	count=1
function	function to hide the ||| hide	count=1
class	the loader ||| loader base	count=3
module	into a single line ||| core	count=1
class	manager ||| manager behavior	count=2
class	[class_1] object ||| [class_1] [class_2]	count=1
function	the dot [function_2] ||| [function_2] [function_1]	count=4
function	checks for ||| checks	count=1
function	register ||| register	count=6
arg	the value is ||| option value	count=1
function	keyboard [function_2] ||| [function_2] [function_1]	count=8
function	less than the ||| left	count=2
function	update the velocity according ||| update velocity	count=1
arg	by dispatch_input() when we ||| etype me	count=1
class	touch ||| motion	count=1
function	all nodes from ||| all nodes	count=2
class	list ||| event loop base	count=1
module	it a ||| core	count=1
module	returns ||| packaging pyinstaller_hooks	count=1
function	down [function_2] ||| [function_2] touch [function_1]	count=1
class	the configuration to the ||| config parser	count=1
class	and call ||| base	count=1
module_class	[module_1] vector ||| [module_1] [class_2]	count=16
arg	config name ||| name widget_ref	count=1
arg	newer one gets ||| g other	count=1
function_arg	sleeps for [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] tap touch ||| [function_2] [function_1]	count=6
class	doesn't ||| base	count=1
arg	a portion ||| start end	count=1
module	[module_1] text with ||| [module_1] [module_2]	count=4
function	range ||| select range	count=1
function	hooks for kivy ||| hooks	count=1
function_arg	to a [arg_2] ||| [arg_2] [function_1]	count=1
class	[class_1] event you ||| [class_2] [class_1]	count=1
class	callbacks registered using ||| event loop base	count=1
function	logical ||| logical	count=2
module	if a ||| core	count=3
module	osc [module_2] ||| [module_1] [module_2]	count=2
function	with the path resampled ||| unit	count=1
function	adds [function_2] ||| [function_1] dep [function_2]	count=3
class	the ||| factory base	count=2
class	all ||| event loop base	count=2
class	config [class_2] ||| [class_2] [class_1]	count=1
function_arg	to add [arg_2] ||| [function_1] [arg_2]	count=4
module	converter ||| lib	count=1
function	select call ||| select	count=1
function	[function_1] nodes ||| [function_1] [function_2]	count=2
function	get the node at ||| node	count=1
function	template from the ||| template	count=1
function	screen widget ||| screen	count=1
class	select ||| text input	count=1
function	it to ||| to	count=1
class	if the loader ||| image loader base	count=2
class	providers and call callbacks ||| event loop	count=1
module	registered using eventloop ||| core	count=1
class	the screen ||| window base	count=1
arg	method bound to ||| keycode text modifiers	count=1
function	[function_1] paths with ||| [function_1] [function_2]	count=1
function	size hint for ||| hint	count=1
function	[function_1] scroll ||| [function_2] [function_1]	count=4
function	returns the [function_1] [function_2] for a ||| [function_1] [function_2]	count=2
function	property it will not ||| stop property	count=1
function	stop and unload any ||| stop	count=3
class	configparser instance ||| config parser	count=1
arg	patterns ||| patterns	count=1
function	this method is more ||| create view	count=1
class	convert ||| scroll view	count=1
class	input providers ||| loop base	count=1
class	object ||| parser	count=1
function	[function_1] the screen ||| [function_1] [function_2]	count=1
function_arg	point x y ||| point x y	count=1
function	when [function_2] ||| [function_2] [function_1]	count=2
arg	that the value ||| section option value	count=1
class	the last ||| parser	count=1
function_arg	color table [arg_2] ||| [arg_2] [function_1]	count=4
arg	keyvalues should be ||| keyvalues	count=1
class	the screen ||| window	count=1
function	new event ||| event	count=1
module	register all ||| tools	count=1
function_arg	[function_1] in the ||| [arg_2] [function_1]	count=2
class	the provider ||| event provider	count=1
class	[class] in ||| [class]	count=1
function	size hint for ||| hint with	count=1
function	start the ||| start	count=3
class	the ||| base report	count=1
class	eventloop ||| event loop base	count=1
function_arg	high level [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	options [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	update the [arg_2] ||| [function_1] [arg_2]	count=1
class	the [class] a ||| [class]	count=1
class	to the last ||| config	count=1
module	for the [module] the provided ||| [module]	count=1
class	in ||| camera android	count=2
module	opened using ||| core	count=1
function	count for this file ||| file results	count=1
function_arg	returns the [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	screen widget [arg_2] ||| [arg_2] [function_1]	count=1
class	bounding box ||| surface	count=1
class	callbacks registered using eventloop ||| event loop base	count=1
module_class	copy [module_1] [class_2] argument ||| [module_1] [class_2]	count=1
module_class	[module_1] event loop ||| [module_1] [class_2]	count=2
class	device :parameters ||| device	count=1
module	from ||| audio	count=1
function	[function_1] the name ||| [function_1] application [function_2]	count=1
module	return a ||| core text	count=1
class	the :meth ||| config	count=1
function	text [function] ||| delete word [function]	count=3
function	yield [function_2] ||| [function_2] [function_1]	count=1
arg	dispatch_input() when ||| etype me	count=1
module	line from tokens and ||| tools pep8checker	count=1
function	[function_1] screen ||| [function_2] [function_1]	count=1
function	returns the length of ||| length	count=1
function	checker ||| init checker	count=1
class	file ||| file system abstract	count=1
class	[class_1] loop ||| [class_2] [class_1]	count=1
arg	events from the queue ||| dispatch_fn	count=1
module	the last file ||| core	count=1
arg	section ||| section	count=3
function	unregister ||| unregister	count=1
module	[module_1] message ||| [module_1] [module_2]	count=2
arg	given factor ||| factor	count=1
arg	the widget that set ||| widget	count=1
module_class	the specified ||| core config parser	count=1
function	the keyboard when the ||| keyboard on key up	count=1
module	in ||| core	count=1
class	input providers and ||| base	count=1
function	bounds on the ||| with bounds	count=1
module_class	[module_1] motion event ||| [module_1] [class_2]	count=4
function	get the cursor x ||| cursor	count=1
function_arg	[function_1] new ||| [arg_2] [function_1]	count=7
class	the :meth ||| parser	count=1
class	registered ||| loop	count=1
class	opened ||| config	count=1
class	find ||| postproc triple tap	count=1
class	if the request has ||| url request	count=1
class	and call callbacks ||| event loop base	count=1
class	text and ||| text	count=1
function_arg	[function_1] program ||| [function_1] [arg_2]	count=2
module	storage any ||| storage	count=1
module_class	the current ||| uix code input	count=1
arg	joystick has ||| stickid buttonid	count=1
function	height ||| height	count=2
function	a key release ||| with key	count=1
function	panel ||| panel	count=1
function	the system for fonts ||| system fonts	count=1
function	icon of ||| icon	count=1
function_arg	random color [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] the widgets ||| behaviors toggle button behavior [function_1] [function_2] groupname	count=1
function	7 ||| user data dir	count=1
function	internal update ||| update	count=1
function	to a scroll distance ||| distance to scroll	count=1
function	images/anim_in_out_sine ||| out sine	count=1
function	the current position ||| pos	count=1
function	can [function_2] ||| [function_1] [function_2]	count=4
module	[module] of the ||| [module]	count=6
module	current position ||| input	count=1
arg	config name ||| name	count=1
function	[function_1] screen ||| [function_1] [function_2]	count=1
arg	coordinates ||| x y relative	count=1
function	it [function_2] ||| [function_2] [function_1]	count=4
module_class	[module_1] [class_2] ||| [module_1] recycleview [class_2]	count=4
class	for on_stop ||| loop base	count=1
function	event ||| event	count=2
arg	order to catch ||| exception _traceback	count=1
function	[function_1] whitespace ||| [function_2] [function_1]	count=1
function_arg	circle [arg_2] ||| [arg_2] [function_1]	count=1
arg	new touch is ||| touch	count=1
module	a stroke to the ||| core	count=1
module	the ||| window	count=3
module_class	copy [module_1] [class_2] ||| [module_1] [class_2] input copy	count=1
class	return the list of ||| loop	count=1
module	of ||| window	count=1
class	be [class_2] ||| [class_2] [class_1]	count=3
function	handler ||| handler	count=1
function	distance from ||| distance	count=1
function_arg	[function_1] node ||| [arg_2] [function_1]	count=3
function	angle similarity between ||| angle similarity	count=1
function	a range ||| select range	count=1
class	of the screen if ||| window base	count=1
class	all the ||| base	count=1
function	in one call ||| read	count=1
function	register [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] nodes from ||| [function_2] [function_1]	count=2
arg	order to catch all ||| _traceback	count=1
class	and call callbacks ||| loop	count=1
module	this ||| uix	count=21
module	doesn't ||| window	count=1
function	[function_1] hooks for ||| [function_2] [function_1]	count=3
class	the database ||| database	count=1
class	method ||| parser	count=1
arg	for a [arg] ||| [arg]	count=1
arg	superfluous ||| line_number total_lines	count=1
module_class	[module_1] matching the ||| [module_1] builder [class_2]	count=1
module	using ||| core	count=2
function	tokens ||| tokens	count=1
module	check if a data ||| core	count=1
arg	comma-separated list of ||| value parent	count=1
function	adds the [function_2] ||| [function_1] dep [function_2]	count=4
module	copy [module] ||| [module]	count=1
function_arg	parser [arg_2] ||| [arg_2] [function_1]	count=1
function	path resampled to ||| unit	count=1
function	cut list [function_1] [function_2] ||| [function_1] [function_2]	count=2
function	hide the [function_2] ||| [function_1] [function_2]	count=4
function	the name ||| name	count=1
function	unbind ||| unbind property	count=1
class	close the view if ||| modal view	count=1
function	right of ||| right	count=1
class	with the data ||| data	count=1
function	packer ||| bits to int	count=1
class	menu buttons ||| menu sidebar	count=1
class	transition ||| transition	count=3
class	and call callbacks registered ||| base	count=1
function	[function_1] product ||| [function_2] [function_1]	count=3
function_arg	[function_1] touch is ||| [function_1] down [arg_2]	count=1
module	this will ||| uix	count=1
class	file opened using ||| parser	count=1
arg	in ||| right	count=1
function	all ast ||| check ast	count=1
arg	[arg_1] by key ||| [arg_2] [arg_1]	count=6
module	this should ||| uix	count=3
function	when ||| on	count=15
module	point to the ||| uix	count=1
function	in [function_2] ||| [function_1] [function_2]	count=1
module_class	the loader ||| core loader	count=1
class	corresponding ||| recycle layout manager behavior	count=1
module	on either side ||| tools pep8checker	count=1
class	[class_1] and ||| [class_2] [class_1]	count=1
function	[function_1] vector for ||| [function_1] protractor [function_2]	count=1
function	have been stopped ||| stop	count=1
module	the screen if ||| core window	count=1
class	image ||| camera android	count=1
function	run all ast checks ||| ast	count=1
class	the [class] list and ||| [class]	count=1
function	to register a ||| register	count=1
class	dropdown ||| drop down	count=2
function	flip between buffers ||| flip	count=2
class	[class_1] provider ||| [class_1] [class_2]	count=1
module	uninstalls [module] kivy's ||| [module]	count=1
function	system ||| system	count=1
arg	y is ||| y	count=1
function	currently ||| uid	count=1
arg	fragment ||| fragment	count=1
function	hint for all the ||| layout hint with	count=1
arg	widget ||| widget x y	count=1
class	callbacks registered ||| event loop	count=1
function	all logical ||| logical	count=1
arg	language exists ||| language	count=1
class	list of ||| event	count=1
module	returns it as a ||| core	count=1
class	if the argument passed ||| file system	count=1
module	builder [module] ||| [module]	count=3
function	add a ||| add	count=3
class	last file ||| config	count=1
module	address manager ||| lib osc	count=1
arg	the widget ||| widget	count=2
class	file ||| file system	count=1
arg	data to the ||| data	count=1
module	the current viewport ||| uix	count=1
class	focus ||| focus	count=2
function	node at ||| node	count=1
class	one call ||| camera	count=1
function	point ||| point	count=2
function	all logical checks on ||| logical	count=1
class	has focus ||| focus	count=2
function	images/anim_out_bounce ||| out bounce	count=1
function	[function_1] around ||| [function_1] [function_2]	count=2
function	[function_1] comparing ||| [function_2] [function_1]	count=2
function_arg	[function_1] the matching ||| [arg_2] [function_1]	count=1
function_arg	color 4 tuple ||| color alpha	count=1
class	file ||| parser	count=1
function	selection ||| selection	count=2
module	into a single ||| core text	count=1
function	initialise the camera internal ||| camera	count=1
function	compound ||| compound	count=1
arg	of the section/key ||| section key	count=1
class	all input providers ||| loop base	count=1
function	viewport changes and the ||| refresh from viewport	count=1
function_arg	to a [arg_2] ||| [function_1] bundle bundle [arg_2]	count=1
function	indices in sorted_keys ||| trim right	count=1
function	the viewport [function_2] ||| [function_2] [function_1]	count=6
function	[function] them ||| [function]	count=1
module_class	[module_1] current ||| [module_1] [class_2]	count=2
function	centers the [function_2] ||| [function_1] [function_2]	count=1
function	color table ||| color table	count=2
class	the ||| camera	count=1
class	the transition ||| transition	count=1
arg	that the value is ||| option value	count=1
module_class	objects matching the ||| lang builder base	count=2
function_arg	[function_1] a new ||| [arg_2] [function_1]	count=1
function	[function_1] the cursor ||| [function_1] [function_2]	count=3
function	switch [function_2] ||| [function_2] [function_1]	count=2
function	max bounds on ||| bounds	count=1
function_arg	[function_1] [arg_2] ||| [function_1] score comparison_gesture [arg_2]	count=2
function	icon of the application ||| application icon	count=1
module	the ||| core camera	count=2
class	passed ||| file	count=1
class	last file opened ||| parser	count=1
module	if changing ||| uix behaviors	count=1
class	parser file ||| parser	count=1
function	the icon of ||| icon	count=1
function	sorted_keys [function_2] ||| [function_2] [function_1]	count=1
module	the last ||| core	count=1
arg	the value ||| option value	count=1
function	the binary message so ||| binary	count=1
function	called before we close ||| request close	count=1
function	gestures ||| merge gestures	count=1
arg	a given ||| oscaddress	count=1
function	surround operators with ||| around operator	count=1
class	providers ||| loop	count=1
function	minimizes ||| minimize	count=1
function	when a new ||| on	count=1
function	all supported languages ||| languages	count=1
function	when the ||| on key down	count=1
function	internal configure all ||| configure	count=1
module	initial position ||| input	count=1
function	create the parser for ||| get parser	count=1
function_arg	[function_1] arglist ||| [arg_2] [function_1]	count=1
function	[function_1] at ||| [function_2] [function_1]	count=3
function	the headers of ||| headers	count=1
class	providers and call callbacks ||| loop base	count=1
class	passed ||| file system abstract	count=1
function	hint ||| layout hint	count=1
module	providers and call callbacks ||| core	count=1
class	widget ||| widget	count=2
module_class	this motion event ||| input motion event	count=1
function	keyboard in managed ||| keyboard	count=2
function	camera internal ||| init camera	count=1
function_arg	the node [arg_2] ||| [function_1] [arg_2]	count=1
arg	a touch ||| touch	count=3
function	usage ||| usage	count=1
function	index of the first ||| of	count=2
function	internal reset ||| reset	count=1
function	changes typically ||| refresh from	count=1
function	hint for ||| layout hint with	count=1
function	you can grab ||| grab	count=1
module_class	a [module_1] [class_2] ||| [module_1] [class_2]	count=2
module	a list of gestures ||| core	count=1
function	[function_1] name ||| [function_1] application [function_2]	count=1
function	keyboard when ||| keyboard on	count=2
module_class	[module_1] application ||| [module_1] [class_2]	count=2
module	return it a ||| core	count=1
module	replace the ||| modules	count=1
function	scale_stroke(scale_factor=float) scales ||| scale	count=1
module	if a bound ||| core	count=1
class	right after all input ||| event	count=1
function_arg	[function_1] touch ||| [arg_2] [function_1]	count=2
module_class	creates an instance of [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	property it will not ||| cancel property	count=2
function	that are less ||| sel	count=1
module	one call ||| camera	count=1
class	via ||| factory	count=1
function	the classnames previously ||| unregister	count=1
module	the configuration to the ||| core	count=1
module	the current viewport ||| uix recycleview	count=1
class	next step must [class_1] [class_2] ||| [class_2] [class_1]	count=3
class	providers ||| base	count=1
class	if the request has ||| request	count=1
module	this should be ||| uix	count=3
function	return the status code ||| status	count=1
class	and return it ||| base	count=1
function	[function_1] raw ||| [function_2] [function_1]	count=2
function	[function_1] paths ||| [function_1] dep [function_2]	count=1
function	[function_1] a property ||| [function_1] named [function_2]	count=2
arg	in argument [arg] into ||| [arg]	count=1
function	return a [function_2] ||| [function_2] [function_1]	count=1
function	[function] canvas so ||| [function] touch	count=2
function	languages select ||| select	count=1
class	return the list of ||| event loop	count=1
module_class	[module_1] shader ||| [module_1] [class_2]	count=2
class	call callbacks registered using ||| base	count=1
function	insert ||| insert	count=1
function	adds ||| add	count=2
class	call ||| camera android	count=2
function	show the [function_2] ||| [function_2] [function_1]	count=4
function	a double tap ||| double tap	count=2
module	return the initial position ||| input	count=1
function	nodes from ||| nodes	count=1
function	[function_1] keywords ||| [function_1] [function_2]	count=2
function	statements on ||| statements	count=1
module_class	a vector object ||| core vector segment	count=1
module_class	[module_1] file ||| [module_1] [class_2]	count=6
function	around an operator ||| around operator	count=2
module_class	[module_1] cache ||| [module_1] [class_2]	count=4
function	7 ||| build settings	count=2
class	the last file opened ||| parser	count=1
function_arg	image [arg_2] ||| base [function_1] [arg_2]	count=1
function	view [function_2] ||| [function_2] [function_1]	count=1
arg	for each enabled ||| flags reverse	count=1
function	vector for this ||| vector	count=1
class	removes ||| model behavior	count=1
function	event ||| on	count=5
arg	depending on the content ||| dx dy	count=1
function_arg	when [arg_2] ||| [function_1] button up [arg_2]	count=1
function	the path ||| path	count=1
arg	of the widget that ||| widget	count=1
module	this method is used ||| uix	count=2
function_arg	the parser [arg_2] ||| [function_1] [arg_2]	count=1
arg	with name if ||| name	count=1
function_arg	[function_1] movement ||| [arg_2] [function_1]	count=3
module	a dummy placeholder ||| core	count=1
arg	args into attributes ||| args	count=1
function_arg	when [arg_2] ||| [arg_2] [function_1]	count=5
function	double tap happens inside ||| double tap	count=1
function	the select call ||| select	count=1
class	all input providers and ||| event loop	count=1
class	callbacks ||| base	count=1
function	the keys ||| keys	count=1
class	return ||| base report	count=1
function	[function_1] multitouch ||| [function_2] [function_1]	count=1
module_class	a [class_2] ||| [module_1] [class_2] segment	count=2
class	label ||| markup label	count=1
function	[function_1] load an ||| [function_1] [function_2]	count=1
class	last file opened using ||| config	count=1
function_arg	checks for [arg_2] ||| [function_1] [arg_2]	count=1
function	displayed frames from ||| frames displayed	count=1
function	[function_1] multitouch ||| [function_1] [function_2]	count=1
module	return the list ||| core	count=1
function	widget [function] them to ||| [function]	count=1
class	value provided ||| text	count=1
function	size hint for all ||| hint	count=1
function	[function_1] the application ||| [function_1] touch [function_2]	count=1
class	when your [class] is resuming ||| [class]	count=1
function	stop all ||| stop	count=1
function	stroke ||| add stroke	count=1
class	configuration ||| config parser	count=1
class	window this method should ||| window	count=4
function	text ||| text	count=1
module	the implementation doesn't support ||| core	count=1
module_class	[module_1] layout ||| [module_1] [class_2]	count=2
arg	dispatch_input() when we want ||| etype me	count=1
class	providers ||| event	count=2
function	[function_1] of the ||| [function_1] [function_2]	count=5
class	decodes ||| gif decoder	count=1
module_class	as a [class_2] ||| [module_1] [class_2]	count=2
function	depack ||| depack	count=1
function	[function] configuring kivy ||| [function] kivy	count=1
function	[function_1] keyboard ||| [function_2] [function_1]	count=6
function	size in ||| size	count=1
arg	config name instead ||| name widget_ref	count=1
function	the appropriate size hint ||| layout hint	count=1
class	the mtdev converter ||| device	count=1
class	stroke ||| stroke	count=1
arg	4 spaces per ||| previous_logical indent_char indent_level	count=1
function	[function_1] size in ||| [function_1] [function_2]	count=2
class	all ||| style guide	count=1
function_arg	it to [arg_2] ||| [arg_2] [function_1]	count=1
function	changes data ||| data	count=1
class	return ||| event	count=1
class	providers and ||| event	count=1
function	[function_1] the cursor ||| [function_2] [function_1]	count=3
class	loader [class_2] ||| [class_2] [class_1]	count=1
module	into a ||| core	count=1
arg	a new ||| name	count=1
function	triple [function_2] ||| [function_1] [function_2]	count=6
module	call ||| camera	count=1
function	stop all input providers ||| stop	count=1
module	the ||| audio	count=1
arg	use != ||| logical_line	count=1
module	read method ||| core	count=1
module	one ||| core	count=1
function	[function_1] triple tap ||| [function_2] [function_1]	count=1
module	memory ||| core	count=1
function	return [function_2] ||| [function_1] protractor [function_2]	count=2
function	only get ||| get	count=1
function	[function_1] event ||| [function_2] [function_1]	count=2
class	input providers ||| event loop	count=1
module	a :meth ||| core	count=1
function	containing the headers ||| headers	count=1
arg	widget that set ||| widget	count=1
module_class	grab this [class_2] ||| [module_1] [class_2]	count=8
function	angle similarity between this ||| get angle similarity	count=1
function	window to [function_2] ||| [function_1] [function_2]	count=1
function	hidden ||| hidden	count=1
function_arg	window [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] data to ||| [function_1] append [arg_2]	count=1
function	[function] them to ||| [function]	count=1
class	the implementation ||| window base	count=1
class	the screen if the ||| window base	count=1
class	widget i e without ||| widget	count=1
module	an ||| core image	count=2
module	the text to a ||| core text	count=1
function	function to show the ||| show	count=1
class	return ||| window base	count=1
class	called when the addon ||| addon	count=2
class	the configuration to ||| config parser	count=1
function	7 ||| build config	count=1
function_arg	[function_1] [arg_2] i e alpha numeric ||| [function_1] textinput [arg_2]	count=1
function	left of the cursor ||| left	count=1
function	[function_1] local widget ||| [function_2] [function_1]	count=4
arg	view and ||| view	count=1
arg	if the filename ||| filename	count=1
function	internal method to load ||| load	count=1
function_arg	[function_1] portion ||| [arg_2] [function_1]	count=1
function	cached version of the ||| cached extents	count=1
function	get statistics ||| get statistics	count=1
module	[module] beginning of ||| [module]	count=3
arg	events ||| dispatch_fn	count=1
class	the view ||| modal view	count=1
function	supported languages ||| languages	count=1
module	:meth read ||| core	count=1
arg	option in [arg_2] ||| [arg_2] [arg_1] defaultvalue	count=1
function_arg	bounds [arg_2] ||| [arg_2] [function_1]	count=1
function	sleeps ||| usleep	count=1
class	apply ||| builder base	count=1
class	scales ||| gesture stroke	count=1
class	application configuration ||| app	count=1
class	by default ||| metrics	count=1
function	the paths with ||| paths	count=1
class	be [class_2] ||| [class_2] [class_1] tick	count=3
function	dot product ||| dot product	count=2
class	in pixels ||| data	count=1
class	register ||| base	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=24
function	vector for ||| vector	count=2
class	all input ||| event	count=2
function	logical line ||| logical line	count=2
function	[function_1] [function_2] ||| [function_1] file [function_2]	count=3
class	support ||| window base	count=1
function	[function_1] :class ~kivy ||| [function_1] [function_2]	count=1
class	tokenize the file run ||| checker	count=1
arg	for smoothing some ||| value_from value_to step	count=1
function	on_start which will be ||| start	count=1
function	the front ||| front	count=1
function_arg	for [function_1] [arg_2] ||| [function_1] [arg_2]	count=2
class	the register method ||| base	count=1
function	one ||| read	count=1
function	images/anim_in_out_quad ||| out quad	count=1
class	layout ||| layout	count=1
function	view ||| view	count=3
class	screen if the ||| base	count=1
class	get ||| base report	count=1
arg	format and orientation ||| _img_tmp	count=1
module	to a kivy :class ||| core	count=1
module	if ||| window	count=1
class	result ||| standard report	count=1
function	or max bounds ||| with bounds	count=1
class	the ||| device	count=1
class	before run() ||| event loop base	count=1
function	the top [function_2] ||| [function_2] [function_1]	count=3
module	is to test if ||| uix	count=1
function	[function_1] it to ||| [function_1] [function_2]	count=2
module	return the previous position ||| input	count=1
module	in one ||| core	count=1
function_arg	point [arg_2] ||| [function_1] [arg_2]	count=5
function	keyboard when ||| keyboard on key down	count=1
class	loop ||| loop base	count=1
function	the keyboard when ||| keyboard on key down	count=1
class	via the register ||| base	count=1
class	using the ||| parser	count=1
module_class	return a [class_2] ||| [module_1] [class_2]	count=2
function	a key release ||| select with key	count=1
function	cursor x [function_2] ||| [function_2] [function_1]	count=1
arg	key if the key ||| key	count=1
function	internal use only get ||| get	count=1
function	statements ||| statements	count=1
module	the ||| uix	count=19
arg	position ||| pos	count=1
arg	*ctx* and bound to ||| win ctx	count=2
class	associates ||| data adapter	count=1
function	of displayed frames from ||| frames displayed	count=1
module	this filename if the ||| uix	count=1
function_arg	[function_1] text ||| [arg_2] [function_1]	count=1
arg	computes the angle ||| a	count=1
class	registered using ||| base	count=1
module	into the ||| uix recycleview	count=1
function	[function_1] node ||| [function_2] [function_1]	count=1
function	register a new path ||| register	count=1
module	a ||| core spelling	count=6
arg	its current transformation state ||| trans post_multiply anchor	count=1
function	the parser for the ||| get parser	count=1
function	vector [function_2] ||| [function_2] [function_1]	count=2
function	called when ||| on	count=1
class	and call callbacks ||| event	count=1
function	called when the cursor ||| on cursor	count=1
function_arg	all nodes [arg_2] ||| [function_1] [arg_2]	count=3
function	button released ||| joy button up	count=2
class	the configuration to ||| parser	count=1
module_class	[module_1] console ||| [module_1] [class_2]	count=2
function	key release ||| with key	count=1
arg	x [arg_2] ||| [arg_2] [arg_1]	count=6
module	a configuration token ||| core	count=1
module	registered via the ||| core	count=1
function	return the ||| get	count=11
function	[function_1] name ||| [function_2] [function_1]	count=1
class	date [class] ||| recycle [class]	count=1
class	support ||| base	count=1
function	nodes ||| nodes	count=1
function	8 ||| display settings	count=1
function	settings panel ||| settings	count=1
module	[module_1] message and ||| [module_1] [module_2]	count=2
module	the file from ||| audio	count=1
function_arg	sleeps for [arg_2] ||| [function_1] [arg_2]	count=1
module	registered using ||| core	count=1
class	input providers and ||| loop base	count=1
arg	the unistroketemplate for ||| numpoints	count=1
function	window to local widget ||| to widget	count=1
arg	in the [arg] intended to ||| [arg]	count=1
class	the list of all ||| loop base	count=1
class	configuration to the last ||| parser	count=1
module	a ||| core window	count=1
class	the screen if the ||| window	count=1
function	dot [function_2] ||| [function_2] [function_1]	count=4
function	binary message so far ||| binary	count=1
function	[function] canvas ||| [function] touch	count=2
module	return the ||| core	count=4
module	the screen if ||| window	count=1
function	the path resampled ||| unit	count=1
class	event ||| event	count=3
module	initialise ||| core camera	count=2
module_class	remove the [class_2] ||| [module_1] [class_2]	count=1
module	the [module_2] ||| [module_1] [module_2]	count=8
module	a dummy placeholder the ||| core camera	count=1
class	the callback ||| callback	count=1
function	triple tap ||| triple tap	count=2
function	right of the cursor ||| right	count=1
class	providers and call ||| loop base	count=1
module	file opened ||| core	count=1
arg	the position indicated ||| last_node last_node_idx	count=1
arg	b ||| b	count=1
function	keyboard when ||| keyboard on key up	count=1
class	to the ||| parser	count=1
function	set the fragment ||| set	count=1
arg	list of ints ||| bool_list	count=1
function_arg	grab a [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] changes and ||| [function_2] [function_1]	count=8
class	if the implementation doesn't ||| window	count=1
arg	in the ||| classname	count=1
function	return vector for ||| get protractor vector	count=1
function	is missing ||| adddefaultsection	count=1
class	the request has ||| url request	count=1
function	trailing ||| trailing	count=1
module	internal check if a ||| core	count=1
function	[function_1] load ||| [function_1] [function_2]	count=1
function_arg	stroke by offsetting ||| stroke offset_x offset_y	count=1
function	status code ||| status	count=1
arg	section keyvalues should be ||| section keyvalues	count=1
function	all nodes ||| all nodes	count=2
function	images/anim_out_quart ||| out quart	count=1
class	the last file ||| config	count=1
function_arg	[function_1] in ||| [function_1] [arg_2]	count=2
arg	in ||| name classname	count=1
arg	via arglist ||| arglist	count=1
function	can grab ||| grab	count=1
class	with the data ||| data adapter	count=1
module	return ||| core	count=2
function	up ||| up	count=1
arg	set the default value ||| value	count=1
function	the error ||| error	count=1
function	top left toolbar ||| toolbar	count=1
class	opened using ||| config parser	count=1
arg	by offsetting the points ||| offset_x offset_y	count=1
module_class	[module_1] [class_2] to be brought to ||| [module_1] [class_2] on bring to	count=3
arg	syncs the view and ||| view	count=1
function	color [function_2] ||| [function_2] [function_1]	count=1
arg	from node ||| node	count=1
class	show the view ||| view	count=1
module	[module_1] [module_2] ||| [module_2] [module_1]	count=8
arg	a key ||| key	count=1
module	[module_1] message and ||| [module_2] [module_1]	count=2
function	create a [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] y position ||| [arg_1] [arg_2]	count=1
function	the dpi of the ||| dpi	count=1
function	if a point ||| point	count=1
function	joycursor instance attached to ||| joycursor	count=1
class	call callbacks registered ||| loop	count=1
module_class	[module_1] all ||| [module_1] [class_2]	count=2
class	input providers and ||| event	count=1
arg	(same arguments as on_keyboard) ||| scancode codepoint modifier	count=1
arg	a given ||| oscaddress dataarray	count=1
module	a word or a ||| core	count=1
class	centers ||| gesture stroke	count=1
function	can grab a touch ||| grab	count=1
arg	to the reference ||| ref	count=1
class	provider ||| motion event provider	count=2
class	of all ||| event loop	count=1
function	is 0 ||| is	count=1
arg	the method bound to ||| keycode	count=1
arg	name ||| name	count=2
module	a file ||| core	count=1
function_arg	it to [arg_2] ||| [function_1] bundle bundle [arg_2]	count=1
class	unregisters ||| factory	count=1
function	use only get ||| get	count=1
function	images/anim_linear ||| linear	count=1
function	binary message so ||| binary	count=1
class	providers and ||| loop	count=1
function	[function_1] window ||| [function_2] [function_1]	count=4
function	it to a ||| to	count=1
function	module ||| module	count=2
arg	loading a network ||| filename kwargs	count=1
function	the syntax ||| syntax	count=1
class	id ||| factory	count=1
class	screen if the ||| window	count=1
module	focus ||| uix behaviors	count=2
class	device ||| device	count=3
class	callbacks ||| event loop base	count=1
function_arg	[function_1] this category ||| [function_1] [arg_2]	count=2
module	group [module] ||| [module]	count=1
module	running remove a ||| core	count=3
function	[function_1] right of ||| [function_1] word [function_2]	count=1
class	adds ||| callback manager	count=1
function	yield [function_2] ||| [function_1] [function_2]	count=1
function	write the ||| write	count=1
module_class	this widget ||| uix widget	count=1
function	the name [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] [function_2] for a ||| [function_1] [function_2]	count=4
class	the addon ||| addon	count=2
function	runtime hooks for kivy ||| runtime hooks	count=1
class	the register ||| factory	count=1
function	breaks before [function_2] ||| [function_2] [function_1]	count=2
function	returns [function_2] ||| [function_1] [function_2]	count=4
arg	errors and warnings ||| prefix	count=1
module	this ||| uix recycleview	count=4
function	selects a range ||| select range	count=1
arg	return a ||| content	count=1
function	get the path ||| path	count=1
arg	[arg] a ||| [arg]	count=6
class	menu ||| menu	count=2
function	to show ||| show	count=1
module	to test if it ||| uix	count=1
class	configuration to the ||| config	count=1
function	hint for ||| hint with	count=1
function	binary operators ||| around binary operator	count=1
function	[function_1] nodes from ||| [function_1] [function_2]	count=2
class	cache ||| cache	count=4
function	run all ast ||| check ast	count=1
function	from input providers pass ||| input	count=1
function_arg	[function_1] [arg_2] ||| [function_1] down [arg_2]	count=9
module	this should be ||| uix recycleview	count=2
class	call ||| loop base	count=1
function_arg	select a [arg_2] ||| [function_1] text [arg_2]	count=1
class	window this method ||| window	count=4
class	call callbacks registered ||| event loop	count=1
function_arg	node [arg_2] ||| [function_1] key [arg_2]	count=1
function	extraneous ||| extraneous	count=1
module	or the ||| uix	count=1
module	time the ||| core	count=1
class	callbacks registered using ||| event	count=1
class	one ||| android	count=1
function	flip between buffers event ||| on flip	count=1
class	the point ||| gesture point	count=1
class	via the register method ||| factory	count=1
function	from a ||| from	count=1
module	from memory ||| audio	count=1
function	touch is a ||| is	count=1
function	mouse ||| mouse	count=3
class	providers ||| loop base	count=1
arg	[arg_1] y ||| [arg_2] [arg_1]	count=2
class	the last file opened ||| config parser	count=1
function	of the gesture ||| gesture	count=1
function	less [function_2] ||| [function_2] [function_1]	count=2
class	view if it ||| modal view	count=2
function	load an image by ||| load	count=1
arg	[arg_1] the node ||| [arg_2] [arg_1]	count=4
class	the ||| sound	count=1
module_class	[module_1] [class_2] of ||| [module_1] [class_2]	count=3
class	callbacks registered using ||| base	count=1
function	the size in ||| size	count=1
function	all the keys ||| keys	count=1
class	thread/process ||| base	count=1
function	triple [function_2] ||| [function_2] [function_1]	count=6
module_class	[module_1] [class_2] to be brought to ||| [module_1] [class_2]	count=3
function_arg	start the [arg_2] ||| [arg_2] [function_1]	count=1
class	screen ||| window	count=1
function	statistics for message codes ||| statistics	count=1
function	[function_1] at ||| [function_1] [function_2]	count=3
function	the node ||| goto node	count=1
function	dispatch ||| post dispatch	count=1
function	main ||| run	count=1
function	appropriate size hint for ||| hint with	count=1
class	[class_1] called ||| [class_2] [class_1] tick	count=1
function	cut list items [function_1] [function_2] ||| [function_1] to [function_2]	count=1
class	label ||| label	count=2
arg	[arg_1] keyvalues ||| [arg_2] [arg_1]	count=1
class	call callbacks registered using ||| loop	count=1
function	top of ||| top of	count=2
class	for on_stop events which ||| loop base	count=1
module	to the line ||| uix	count=1
function	the select ||| select list	count=1
class	opened using the :meth ||| parser	count=1
function	find a triple tap ||| find triple tap	count=1
module	file ||| audio	count=1
function_arg	[function_1] x y ||| [arg_2] [function_1]	count=4
function	return the density ||| density	count=1
class	request has ||| url request	count=1
module	send ||| lib osc	count=1
arg	always use != instead ||| logical_line	count=1
module_class	[module_1] app ||| [module_1] [class_2]	count=4
class	the data ||| data adapter	count=1
function	the dpi ||| dpi	count=1
function	keyboard when the ||| keyboard on key	count=2
function	left ||| left	count=1
module	64-bit ||| lib osc	count=2
arg	reference ||| ref	count=1
module_class	objects matching [class_2] ||| [module_1] [class_2]	count=1
module_class	[module_1] [class_2] ||| [module_1] compound [class_2]	count=1
class	all the [class_2] ||| [class_2] [class_1]	count=2
arg	[arg_1] c ||| [arg_2] [arg_1]	count=1
module	internal computes the appropriate ||| uix	count=1
class	a data and ||| data	count=1
function	window coordinate ||| highlight at	count=1
class	register ||| factory base	count=1
module	checks if ||| uix	count=1
class	[class_1] called every ||| [class_2] [class_1] tick	count=1
class	return the ||| event loop base	count=1
module	a list with ||| core image	count=1
arg	matching language exists ||| language	count=1
function	[function_1] to a ||| [function_1] [function_2]	count=3
function	of the response ||| resp	count=1
function	two gestures together ||| gestures	count=1
function	cursor [function_2] ||| [function_2] [function_1]	count=2
arg	name ||| name widget_ref	count=1
arg	value [arg_2] ||| [arg_2] [arg_1]	count=2
function	items [function] ||| [function] to	count=1
function	the top ||| top	count=1
function	report ||| report	count=1
module	support ||| window	count=1
function	a property ||| property	count=1
function	[function_1] from ||| [function_1] [function_2]	count=3
function	the camera internal ||| camera	count=1
module_class	[module_1] scatter ||| [module_1] [class_2]	count=5
arg	upgrade the configuration based ||| filename overwrite	count=1
function	has multitouch data ||| has mtdata	count=2
class	panel ||| panel	count=2
module	that match the ||| lang	count=1
class	update ||| kinetic effect	count=2
module	of ||| core window	count=2
arg	input ||| input	count=1
function_arg	table in ||| table size	count=1
function	the gesture ||| gesture	count=1
module	the file ||| core	count=1
class	for ||| event loop base	count=1
function	hides ||| hide	count=1
function	want to dispatch ||| dispatch	count=1
arg	the widget that ||| widget	count=1
module_class	[module_1] settings ||| [module_1] [class_2]	count=2
function	system for fonts ||| system fonts dir	count=3
module	registered via ||| core	count=1
module	a set of ||| core	count=1
function	distance between two ||| distance	count=1
arg	touch x/y collides with ||| touch	count=1
arg	a [arg] a ||| filename [arg]	count=1
module	runtime ||| tools packaging pyinstaller_hooks	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=135
module_class	[module_1] on ||| [module_1] [class_2]	count=4
function	load an image by ||| load memory	count=1
module	in the ||| uix	count=1
class	the view if it ||| modal view	count=1
module	in one call ||| camera	count=1
function	in ||| init	count=1
class	settings ||| settings	count=1
function	dpi of the ||| dpi	count=1
function	unload the file ||| unload	count=1
function	[function_1] when ||| [function_2] [function_1]	count=6
function	header ||| header	count=1
class	search all the rules ||| builder base	count=1
class	view if ||| modal view	count=2
function	method is a ||| is dir	count=1
function	stops ||| stop	count=1
class	using the :meth read ||| parser	count=1
class	request has been ||| url request	count=1
function	convert a [function_2] ||| [function_2] [function_1]	count=3
class	input providers and call ||| event	count=1
function	cursor x offset on ||| cursor offset	count=1
function	contextualactionview ||| contextual	count=1
function	[function_1] [function_2] ||| [function_1] unit [function_2]	count=18
arg	of microseconds ||| microseconds	count=1
arg	section [arg_2] ||| [arg_2] [arg_1]	count=3
function	node at ||| goto node	count=1
function	[function_1] nodes ||| [function_2] [function_1]	count=2
module	fit into a single ||| core text	count=1
module	this filename ||| uix	count=1
function	adds the ||| add	count=1
module	a ||| core text	count=8
function	removes the ||| detach	count=1
class	the request has been ||| url request	count=1
function	event ||| on touch	count=1
function_arg	node at [arg_2] ||| [function_1] [arg_2]	count=1
class	if it is ||| modal	count=1
class	the label ||| label	count=1
function	[function_1] to animate ||| [function_1] [function_2]	count=1
function	distance in pixels to ||| to	count=1
function_arg	scroll distance [arg_2] ||| [arg_2] [function_1]	count=3
arg	that set the name ||| name	count=1
function	[function_1] context ||| [function_2] [function_1]	count=1
class	text and order of ||| text	count=1
module	for the [module] ||| [module]	count=1
module	the implementation ||| core	count=1
class	be called every frame ||| base behavior	count=1
function	cut list items [function_1] [function_2] ||| [function_1] [function_2]	count=1
arg	index ||| index	count=2
function	stop and unload ||| stop	count=3
arg	[arg_1] [arg_2] ||| [arg_1] lines [arg_2]	count=1
function	[function] contained in ||| get [function]	count=3
function_arg	[function_1] arglist ||| [function_1] [arg_2]	count=1
module	if the implementation doesn't ||| window	count=1
class	and return ||| base	count=1
function	max bounds ||| with bounds	count=1
function	delete text ||| delete	count=1
function	extraneous whitespace after a ||| whitespace around	count=1
class	if the device ||| device	count=2
function_arg	color table [arg_2] ||| [function_1] [arg_2]	count=4
module	to this method ||| uix	count=1
class	animation previously applied ||| animation	count=2
arg	value ||| option value	count=1
function	top [function_2] ||| [function_1] [function_2]	count=3
function	a triple tap touch ||| triple tap	count=1
class	if the argument passed ||| file system abstract	count=1
function_arg	[function_1] via arglist ||| [arg_2] [function_1]	count=2
function	register a [function_2] ||| [function_2] [function_1]	count=1
function	only get [function_2] ||| [function_1] [function_2]	count=4
module	providers and ||| core	count=1
module	configuration ||| core	count=1
function	adds a ||| add	count=1
function	cursor x ||| cursor	count=1
function_arg	color [arg_2] ||| [function_1] [arg_2]	count=1
class	motion [class_2] ||| [class_2] [class_1]	count=3
function	window ||| window	count=3
function	return the screen widget ||| get screen	count=1
class	eventloop ||| base	count=1
function	dispatch [function_2] ||| [function_2] [function_1]	count=1
function	return the [function_2] ||| [function_1] application [function_2]	count=3
function	keyboard when ||| keyboard on key	count=2
class	the list of all ||| event	count=1
function	the system for ||| system	count=1
class	of all ||| loop base	count=1
class	return the ||| loop	count=1
function	update selection ||| update selection	count=2
function	[function_1] stroke ||| [function_2] [function_1]	count=3
module	the text with ||| core text	count=2
function	[function] contained ||| get [function]	count=3
function	centers the ||| center	count=2
module	of booleans to a ||| core image	count=1
class	according to the label ||| label	count=1
class	input providers and call ||| base	count=1
class	cache with ||| cache	count=1
class	and ||| motion event	count=1
function	when the instance ||| on key down	count=1
function	to window ||| to window	count=2
function	search all the rules ||| rules	count=1
function_arg	[function_1] depending on ||| [arg_2] [function_1]	count=8
function_arg	[function_1] them ||| [arg_2] [function_1]	count=2
function	a triple [function_2] ||| [function_1] [function_2]	count=6
class	find ||| input postproc triple tap	count=1
class	the tuio provider ||| tuio motion event provider	count=1
function	[function_1] that are ||| [function_1] left of [function_2]	count=4
function	to add ||| add panel	count=2
module	input providers ||| core	count=1
function_arg	[function_1] new panels ||| [arg_2] [function_1]	count=3
module	if changing ||| uix	count=1
function	scroll [function_2] ||| [function_2] to [function_1]	count=1
function	return the directories used ||| get	count=1
function	yield tokens ||| generate tokens	count=2
function	[function_1] [function_2] ||| [function_2] to [function_1]	count=2
function	dpi of the screen ||| dpi	count=2
arg	value is ||| value	count=1
function	button [function_2] ||| [function_1] [function_2]	count=1
function	android ||| android	count=1
class	current ||| text input	count=1
arg	in the format [ ||| size	count=1
function	view [function_2] ||| [function_1] [function_2]	count=1
class	return ||| loop base	count=1
function	the dpi of ||| dpi	count=1
arg	if the classname ||| classname	count=1
class	layout manager ||| layout manager	count=1
arg	the prefix ||| prefix	count=1
function	pause mode ||| pause	count=1
function	[function_1] vector ||| [function_1] unit [function_2]	count=6
function	extraneous whitespace ||| whitespace around	count=1
function	bind ||| bind	count=1
module_class	to the shader ||| uix effect	count=1
function	[function_1] index ||| [function_2] [function_1]	count=1
function	keyboard when the ||| keyboard on key up	count=1
function_arg	screen widget [arg_2] ||| [function_1] [arg_2]	count=1
module_class	[module_1] loader ||| [module_1] [class_2]	count=5
function	you can grab a ||| grab	count=1
arg	on token ||| token	count=1
class	callbacks registered using eventloop ||| base	count=1
function	return the overall ||| get	count=1
function	can [function_2] ||| [function_2] [function_1]	count=4
function	pixels to a ||| to	count=1
class	eventloop ||| event	count=1
function	[function] made ||| [function]	count=2
arg	token ||| token	count=1
class	registered ||| factory base	count=1
arg	a comma-separated list of ||| value parent	count=1
class	providers and ||| loop base	count=1
class	the list of all ||| base	count=1
function	the duration ||| duration	count=1
arg	the minimum [arg] required ||| [arg]	count=1
function	returns the binary message ||| get binary	count=1
function_arg	add a [arg_2] ||| [function_1] panel [arg_2]	count=1
function_arg	update the [arg_2] ||| [arg_2] [function_1]	count=1
arg	plugin ||| argument_names	count=2
function	this ||| results	count=1
module	this method is ||| uix	count=2
class	registered via the register ||| factory base	count=1
module	internal this method ||| uix	count=1
function	remove an [function_2] ||| [function_2] [function_1]	count=1
arg	minimum [arg] required ||| [arg]	count=1
module_class	[module_1] [class_2] ||| [module_1] recycleview recycle [class_2]	count=3
function_arg	options passed [arg_2] ||| [function_1] [arg_2]	count=3
function	have [function] between import ||| [function] after import	count=1
function	the node at the ||| node	count=1
module	texture ||| core image	count=1
class	the implementation ||| window	count=1
class	call callbacks registered ||| loop base	count=1
function_arg	to parent [arg_2] ||| [arg_2] [function_1]	count=1
function	uid of the ||| uid	count=1
arg	[arg_1] the name ||| [arg_2] [arg_1]	count=2
function	keyboard when the instance ||| keyboard on key down	count=1
function	dispatch an [function_2] ||| [function_1] [function_2]	count=1
module	using eventloop ||| core	count=1
function	minimum bounding circle ||| minimum bounding circle	count=1
class	text and order ||| text input	count=1
module	a ||| core image	count=8
module_class	[module_1] dropdown ||| [module_1] [class_2]	count=2
function	[function_1] offset on ||| [function_2] [function_1]	count=3
function	gesture ||| gesture	count=2
function	the ||| init	count=1
module	returns ||| tools packaging pyinstaller_hooks	count=1
module	list ||| core	count=1
class	using the :meth read ||| config parser	count=1
module	a list ||| core image	count=1
function_arg	and apply them ||| apply widget ignored_consts	count=1
module	than ||| adapters	count=1
function	[function] of the ||| resp [function]	count=3
function	that are less than ||| to sel	count=1
module	callbacks ||| core	count=1
module_class	if this container ||| uix gesture container	count=1
class	the implementation doesn't ||| base	count=1
arg	catch all ||| exception _traceback	count=1
function	parent coordinates to local ||| to local	count=1
function	of the [function_2] ||| [function_2] [function_1]	count=1
module	from memory ||| core audio	count=1
function	select call is ||| select list	count=1
function	right of the ||| right	count=1
function	content to ime height ||| content	count=1
class	the list of all ||| loop	count=1
module	booleans to a ||| core	count=1
arg	another ||| other_touch	count=1
function	that are ||| sel	count=5
class	and ||| loop base	count=1
arg	for the program ||| prog version	count=1
function	texture ||| texture	count=1
module	of the screen ||| core window	count=1
function_arg	[function_1] new ||| [function_1] panel [arg_2]	count=4
function	color ||| color	count=2
function	double tap touch ||| double tap	count=2
class	find ||| double tap	count=1
function	random color ||| random color	count=2
module_class	[module_1] gesturecontainer ||| [module_1] [class_2]	count=2
function	set the fragment shader ||| set	count=1
class	stop ||| kinetic effect	count=1
function	check if a point ||| point	count=1
class	report ||| report	count=2
module	file's ast and run ||| tools pep8checker	count=1
arg	movement ||| val t	count=3
function	ast checks ||| ast	count=1
arg	*ctx* and ||| win ctx	count=2
class	registered using ||| event loop base	count=1
function_arg	[function_1] [arg_2] on ||| [function_1] [arg_2]	count=1
function	hooks for ||| hooks	count=1
function	[function_1] color ||| [function_1] [function_2]	count=1
module_class	[module_1] [class_2] widget from the window ||| [module_1] [class_2] dismiss	count=2
function	switch to a ||| switch to	count=2
class	list ||| base	count=1
function	list with the runtime ||| runtime	count=1
function	animate content to ||| animate content	count=1
function	main function [function_2] ||| [function_1] touch [function_2]	count=1
class	multistrokegesture ||| multistroke gesture	count=1
function	minimum bounding ||| minimum bounding	count=1
module_class	to a [class_2] ||| [module_1] [class_2]	count=2
class	the stroke ||| stroke	count=1
function	a key ||| with key	count=1
function	contextualactionview ||| contextual action view	count=1
class	menu buttons ||| menu	count=1
function	cached version of ||| cached	count=1
class	of the screen ||| base	count=1
module_class	[module_1] value provided ||| [module_1] [class_2] input copy	count=1
arg	input import ||| input	count=1
function	unload ||| unload	count=1
function	tap touch ||| tap	count=2
function	statements on the ||| statements	count=1
arg	in the ||| size	count=1
module_class	the [class_2] ||| [module_1] [class_2]	count=56
module	if changing code ||| uix	count=1
arg	the *ctx* and ||| win ctx	count=2
class	registered ||| factory	count=1
class	stop ||| loop base	count=1
function_arg	the checks [arg_2] ||| [function_1] [arg_2]	count=1
class	:meth read method ||| config parser	count=1
class	file opened using ||| config	count=1
arg	manually from ||| outname filenames size padding	count=1
function	[function] classname ||| [function]	count=1
function	return the distance between ||| distance	count=1
arg	arglist [arg_2] ||| [arg_2] [arg_1]	count=2
module	doesn't ||| core	count=1
module	of the ||| window	count=1
class	image data ||| camera android	count=1
class	vector object ||| vector	count=1
function	that starts the application ||| app	count=1
class	screen if ||| base	count=1
class	if the request ||| url request	count=1
arg	points ||| points	count=1
function	[function] configuring ||| [function] kivy	count=1
class	callbacks registered ||| loop base	count=1
class	return the list ||| base	count=1
arg	match the widget ||| widget	count=1
function	cursor x [function_2] ||| [function_1] [function_2]	count=1
function	specific mipmap ||| mipmap	count=1
class	[class_1] stack ||| [class_2] [class_1]	count=2
module_class	this motion ||| input motion	count=1
function	append it to a ||| append to	count=1
module	in this textinput ||| uix	count=1
function	[function_1] ~kivy ||| [function_1] [function_2]	count=1
class	all input ||| base	count=1
class	data ||| data	count=1
function	that are greater than ||| sel	count=1
module	[module] of ||| [module]	count=6
arg	new ||| name	count=4
function	close the mtdev converter ||| close	count=1
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=36
function	images/anim_in_out_back ||| out back	count=1
function	pixels to a scroll ||| to scroll	count=1
function	multitouch ||| mtdata	count=1
class	registered ||| event loop	count=1
function	hide ||| hide	count=1
function	is released terminated ||| up	count=1
arg	value for an ||| value	count=1
class	container ||| container	count=1
function_arg	checker [arg_2] ||| [function_1] state name [arg_2]	count=1
arg	prepares the unistroketemplate for ||| numpoints	count=1
class	touch and ||| motion event	count=2
arg	to catch ||| _traceback	count=1
function_arg	when a [arg_2] ||| [function_1] button up [arg_2]	count=1
function	headers ||| headers	count=1
class	gesturecontainer ||| gesture surface	count=2
function	return ||| get	count=19
function	initialise the ||| init	count=1
function	compute the distance ||| get distance	count=1
function	of the cursor ||| cursor	count=1
function	the node ||| node	count=2
module	memory ||| core audio	count=2
class	one call ||| android	count=1
arg	default value for an ||| value	count=1
module	a list of ||| core	count=1
module_class	the loader thread/process ||| core loader base	count=1
function	[function] iteration ||| install twisted [function]	count=3
class	implementation doesn't support ||| window base	count=1
module	be the ||| core	count=1
function_arg	the node [arg_2] ||| [function_1] key [arg_2]	count=1
function	the runtime [function_2] ||| [function_1] [function_2]	count=4
function	a triple ||| triple	count=2
module	called by the hook ||| tools packaging pyinstaller_hooks	count=1
module	tokens and ||| tools pep8checker	count=1
module	initialise the ||| camera	count=1
module	osc [module_2] ||| [module_2] [module_1]	count=2
function	that are selected ||| sel	count=2
function	get the [function_2] ||| [function_1] [function_2]	count=6
arg	new panels for possible ||| panel name uid	count=1
function	run all ast ||| ast	count=1
class	implementation doesn't ||| window	count=1
arg	them ||| ignored_consts	count=1
module	by calling both the ||| behaviors	count=1
class	start ||| kinetic effect	count=1
function_arg	[function_1] by offsetting ||| [function_1] [arg_2]	count=3
function_arg	a image [arg_2] ||| [arg_2] [function_1]	count=1
module	this method in order ||| uix	count=1
class	kv rules of the ||| base	count=1
arg	proxyimage is ||| load_callback post_callback	count=1
function	closed ||| close	count=1
function	load a ||| load	count=1
function	position ||| pos	count=1
arg	[arg_1] definition ||| [arg_2] [arg_1]	count=1
module	message ||| lib	count=1
module	previous one or the ||| uix	count=1
function	and append it to ||| append to	count=1
function	report instance ||| report	count=1
function	unbind all the handlers ||| unbind	count=1
class	get ||| tree view	count=1
module	the value ||| uix	count=1
class	the label options ||| label	count=1
class	of ||| loop	count=1
function	cursor from ||| cursor from	count=2
function	scales the [function_2] ||| [function_2] [function_1]	count=1
module	adds [module] ||| [module]	count=1
arg	a touch event causes ||| touch	count=1
module_class	this [class_2] ||| [module_1] [class_2]	count=10
function	hooks ||| hooks	count=1
module	of the screen if ||| core	count=1
module_class	the vector ||| core vector	count=1
arg	grabbed ||| buf	count=1
class	run() ||| event loop	count=1
function_arg	stroke [arg_2] ||| [function_1] [arg_2]	count=4
class	[class_1] thread/process ||| [class_2] [class_1]	count=1
module_class	the [class_2] ||| [module_1] [class_2] on bring to	count=1
arg	of the widget ||| widget	count=1
module_class	[module_1] matching the ||| [module_1] [class_2]	count=1
class	screen if ||| window base	count=1
module_class	[module_1] scatter ||| [module_1] [class_2] on bring to	count=3
arg	[arg_1] specified section ||| [arg_2] [arg_1]	count=1
module	the text ||| core text	count=2
function	top [function_2] ||| [function_2] [function_1]	count=3
arg	catch all the exceptions ||| exception _traceback	count=1
function_arg	[function_1] joystick has ||| [function_1] button up [arg_2]	count=1
function	max bounds on ||| with bounds	count=1
class	tick ||| base behavior	count=1
function_arg	parent [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] of ||| [function_2] [function_1]	count=5
function	twisted ||| twisted	count=1
module	and ||| pep8checker	count=1
function	the uid ||| uid	count=1
function	get the node ||| node	count=1
class	tokenize the file ||| checker	count=1
class	the :class screenmanager ||| transition base	count=1
function	in ||| right	count=1
module	the ||| core window	count=6
arg	method bound to ||| keycode	count=1
function	the top of ||| top of	count=2
function	a triple tap ||| triple tap	count=2
class	call callbacks ||| event	count=1
function	system for [function_2] ||| [function_2] [function_1]	count=1
class	registered using eventloop ||| event loop	count=1
class	the implementation doesn't support ||| window	count=1
function	icon of [function_2] ||| [function_2] [function_1]	count=2
class	return the list of ||| loop base	count=1
arg	use ||| logical_line	count=2
module	unregisters ||| core	count=1
function	compute the distance from ||| get distance	count=1
arg	in argument [arg] into current ||| [arg]	count=1
function_arg	[function_1] from node ||| [arg_2] [function_1]	count=3
module	file from ||| audio	count=1
function	properties ||| properties	count=1
class	if the implementation doesn't ||| window base	count=1
class	using the :meth ||| parser	count=1
class	if the implementation ||| base	count=1
function	import ||| import	count=1
class	view if it is ||| modal view	count=1
class	the request has ||| request	count=1
arg	a touch event ||| touch	count=1
function	delta between last position ||| dpos	count=1
function	[function_1] property ||| [function_2] [function_1]	count=2
function	keyboard ||| keyboard	count=4
arg	the value is ||| section option value	count=1
function	node [function_2] ||| [function_2] [function_1]	count=1
function	stop all input ||| stop	count=1
class	call ||| event loop	count=1
class	file from ||| sound	count=1
function	bounding [function_2] ||| [function_2] [function_1]	count=1
module	the previous position ||| input	count=1
class	input providers and call ||| loop	count=1
module	providers ||| core	count=1
class	input providers ||| event	count=1
function	an operator ||| operator	count=1
module	if the implementation doesn't ||| core window	count=1
function	less than ||| left	count=2
function	around keywords ||| around keywords	count=2
class	input ||| event	count=1
class	when the addon ||| addon	count=2
module	is running remove a ||| core	count=3
class	the button ||| button behavior	count=1
class	call callbacks registered using ||| event loop base	count=1
function	left of the ||| left	count=1
arg	stick or other ||| axisid value	count=1
module	test if it ||| uix	count=1
module	release this ||| uix	count=1
class	using the ||| config parser	count=1
function_arg	to add [arg_2] ||| [arg_2] [function_1]	count=5
class	a parser file ||| parser	count=1
function	[function_1] line ||| [function_1] [function_2]	count=1
module_class	and all ||| tools pep8checker style	count=1
function	max bounds on the ||| bounds	count=1
function	apply ||| apply	count=2
arg	method bound to the ||| keycode	count=1
function	used to create ||| create	count=1
function	candidate against ||| candidate	count=1
function	a screen ||| screen	count=1
function	texture created ||| texture	count=1
function	the density ||| density	count=1
function	reset the value and ||| reset	count=1
arg	option in ||| option	count=2
function	the top of the ||| top of	count=1
arg	either via arglist ||| arglist	count=1
arg	view and brings ||| view	count=1
class	stack ||| manager	count=1
arg	touch event is ||| touch	count=1
function	widgets ||| widgets	count=1
function	[function_1] table ||| [function_2] [function_1]	count=1
function_arg	parser for [arg_2] ||| [function_1] [arg_2]	count=1
function	of [function] gesture ||| on [function]	count=1
function	the runtime hooks for ||| runtime hooks	count=1
function	event called ||| on	count=1
function	indentation ||| indentation	count=2
function	convert a ||| convert	count=1
module	return ||| core window	count=2
arg	option in the ||| option	count=1
module	!= instead of ||| pep8checker	count=1
class	registered via the register ||| factory	count=1
arg	option in the specified ||| option	count=1
function	bounds ||| with bounds	count=1
function	extraneous whitespace around keywords ||| whitespace around keywords	count=1
class	the :meth ||| config parser	count=1
function	statistics ||| statistics	count=2
function_arg	start the movement ||| start val t	count=1
function	[function_1] multitouch data ||| [function_1] [function_2]	count=1
module	using the :meth ||| core	count=1
function	appropriate size hint ||| layout hint with	count=1
arg	mimetype if possible ||| mimetype	count=1
function	overall count for this ||| results	count=1
module	hook ||| packaging pyinstaller_hooks	count=1
function	cancel ||| cancel	count=2
class	call callbacks registered ||| base	count=1
class	all input providers ||| event	count=1
function	show the keyboard ||| show keyboard	count=2
arg	of the data as ||| data	count=2
function_arg	raw data ||| raw append data	count=1
function	before we close ||| request close	count=1
function	hide the keyboard in ||| hide keyboard	count=1
function	centers the [function_2] ||| [function_2] [function_1]	count=1
arg	method bound to ||| window keycode	count=1
function	size hint for ||| layout hint	count=1
module	a data ||| core	count=1
function	to local ||| to	count=1
arg	updating ||| argument typehint	count=1
function_arg	[function_1] the program ||| [function_1] [arg_2]	count=3
class	return ||| settings panel	count=1
function	[function_1] it to ||| [function_2] [function_1]	count=2
function	whitespace ||| whitespace	count=1
module_class	up to [class_2] ||| [module_1] [class_2]	count=1
function	returns the [function_2] ||| [function_1] nice [function_2]	count=1
function	headers [function_2] ||| [function_2] [function_1]	count=2
arg	touch on the node ||| node touch	count=1
module	return a ||| core spelling	count=1
class	and call callbacks registered ||| event loop	count=1
class	sleeps ||| clock base behavior	count=1
module	tabs ||| tools pep8checker	count=1
module	typetags ||| lib osc	count=1
function	by the system for ||| system	count=1
function	the angle similarity between ||| get angle similarity	count=1
function	for comparing ||| protractor	count=1
function	minimum bounding [function_2] ||| [function_2] [function_1]	count=1
class	argument passed ||| file system abstract	count=1
class	input ||| base	count=1
function_arg	distance [arg_2] ||| [arg_2] [function_1]	count=3
class	configuration to ||| config parser	count=1
class	of ||| loop base	count=1
function	or max bounds on ||| with bounds	count=1
function	contextualactionview and ||| contextual action	count=1
arg	the method bound ||| keycode	count=1
class	all the ||| style guide	count=1
module	list of ||| core	count=1
function	for fonts ||| fonts dir	count=1
function	is hidden ||| is hidden	count=1
function	ast ||| check ast	count=1
module	views for [module] ||| [module]	count=2
arg	node ||| node	count=3
function	dispatch ||| dispatch	count=1
module_class	[module_1] config object ||| [module_1] [class_2]	count=4
function_arg	[function_1] matching ||| [arg_2] [function_1]	count=1
class	the response [class] ||| url [class]	count=2
function	unselects any currently selected ||| selected uid	count=1
function	internal update the ||| update	count=1
class	motion event you ||| motion event	count=2
module	text with all the ||| text	count=1
class	the label ||| markup label	count=1
arg	value is implicitly ||| value	count=1
module	input providers and call ||| core	count=1
function_arg	max bounds [arg_2] ||| [arg_2] [function_1]	count=1
module_class	copy [module_1] [class_2] in argument ||| [module_1] [class_2]	count=2
function	events [function] ||| dispatch [function]	count=3
class	the transition ||| card transition	count=1
class	the register method ||| factory	count=1
function	files in this directory ||| input dir	count=1
module	position ||| input	count=2
class	image ||| android	count=1
class	the ||| builder base	count=1
function	[function_1] distance ||| [function_2] to [function_1]	count=2
function	the headers ||| headers	count=1
function	coordinates to [function_2] ||| [function_1] [function_2]	count=3
function_arg	random color [arg_2] ||| [arg_2] [function_1]	count=1
function	local widget ||| widget	count=1
function	sorted_keys that are ||| trim to sel	count=1
function	return a proxy reference ||| proxy ref	count=1
module	by calling both the ||| uix behaviors	count=1
class	button ||| button behavior	count=1
class	config object ||| config parser	count=2
module	matching given a target ||| core	count=1
class	mouse ||| mouse	count=1
class	input providers and call ||| event loop base	count=1
function	the keyboard ||| keyboard	count=4
function	platform have memory issue ||| memorywarning	count=1
module	all input ||| core	count=1
module	current position in ||| input	count=1
function	delete text right ||| delete word right	count=1
function	cut [function_1] [function_2] ||| [function_1] [function_2]	count=2
module	selection [module] clipboard then ||| [module]	count=1
function	[function_1] released ||| [function_2] [function_1]	count=1
arg	touch event causes ||| touch	count=1
function	shows ||| show	count=1
class	keyboard ||| keyboard	count=1
arg	y is inside the ||| y	count=1
function	is a directory ||| is dir	count=1
class	returns ||| file chooser controller	count=1
module	based on a new ||| core	count=1
module	a single ||| core text	count=1
function	returns the [function_1] [function_2] for a ||| core [function_1] [function_2]	count=2
class	data and ||| data	count=1
class	currently displayed panel ||| panel	count=1
function_arg	bounds on [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] all ||| [function_1] [function_2]	count=1
class	of all ||| base	count=1
function	is released ||| key up	count=1
function_arg	select a [arg_2] ||| [arg_2] [function_1]	count=1
function	[function] that can ||| [function]	count=1
arg	the value is implicitly ||| section option value	count=1
class	request has been completed ||| request	count=1
function	in sorted_keys [function_2] ||| [function_2] [function_1]	count=10
function_arg	process options [arg_2] ||| [function_1] [arg_2]	count=3
module	input ||| input	count=1
function	[function_1] screen widget ||| [function_1] [function_2]	count=1
module	to fit into a ||| core text	count=1
arg	default value [arg_2] ||| [arg_2] [arg_1]	count=2
function	to [function_2] ||| [function_1] [function_2]	count=6
module	items with indices in ||| adapters	count=1
function	button released ||| button up	count=1
function	[function_1] pixels to ||| [function_1] distance [function_2]	count=1
class	if ||| abstract	count=1
class	a sound and ||| sound loader	count=1
function	the distance between two ||| distance	count=1
module_class	[module_1] loader can ||| [module_1] [class_2]	count=2
module	:meth read method ||| core	count=1
function	for a [function] ||| add [function]	count=1
arg	touch is registered ||| touch	count=1
arg	language exists it is ||| language	count=1
arg	handle in ||| oscpath classname	count=1
module	[module] word by ||| [module]	count=3
function	readable ||| readable	count=1
module	items ||| adapters	count=2
arg	the name ||| name	count=1
module	implementation doesn't ||| core	count=1
function_arg	circle [arg_2] ||| [function_1] [arg_2]	count=1
class	this candidate with ||| candidate	count=1
arg	the reference ||| ref	count=1
module	into a ||| core text	count=1
module	a configuration token has ||| core	count=1
arg	viewport is ||| viewport	count=1
module	of the screen ||| window	count=1
class	return the ||| base	count=3
module	and run ||| tools pep8checker	count=1
class	after all input ||| event	count=1
function	current [function_2] ||| [function_2] [function_1]	count=1
module	be used [module] json ||| [module]	count=1
class	to ||| parser	count=1
function	changes and the ||| refresh from	count=1
function	touch is ||| is	count=1
function	sleeps for the number ||| usleep	count=1
function	the select ||| select	count=1
arg	use 4 spaces per ||| logical_line previous_logical indent_char indent_level	count=1
function	[function_1] animate ||| [function_1] [function_2]	count=2
function	hooks for kivy it ||| hooks	count=1
function	tap happens inside textinput ||| tap	count=2
arg	x y position ||| x y	count=2
function	[function_1] an operator ||| [function_2] [function_1]	count=2
module	screen ||| core window	count=2
function	high level ||| string to bits	count=1
class	for this loader ||| image loader	count=3
function	screen ||| screen	count=2
arg	lines ||| lines	count=1
class	report ||| base report	count=1
function	input ||| input	count=1
function	the dot product ||| dot product	count=2
function	transition ||| transition	count=1
module	the ||| lib	count=1
class	input providers and ||| event loop	count=1
class	register method ||| base	count=1
class	tick ||| clock base behavior	count=1
module	a bound function ||| core	count=1
function	lines ||| lines	count=1
function	pixels to ||| to	count=1
function	[function_1] adds ||| [function_2] [function_1]	count=2
function	double [function_2] ||| [function_1] [function_2]	count=6
function	internal stops ||| stop	count=1
function	default config file ||| config	count=1
class	of all ||| event	count=1
function	it adds [function_2] ||| [function_1] [function_2]	count=3
module	screen if ||| core window	count=1
class	the mouse ||| mouse	count=1
class	remove ||| event loop base	count=1
class	the list of ||| loop base	count=1
class	1 by default ||| metrics	count=1
function	fonts ||| fonts	count=1
class	passed ||| file system	count=1
function	reset the value ||| reset	count=1
function	currently visible view associated ||| visible view	count=1
function	[function] in ||| [function]	count=3
class	open the [class] list ||| [class]	count=1
function	ball ||| joy ball	count=1
class	call ||| event loop base	count=1
arg	[arg] if not ||| [arg] option	count=2
class	this loader ||| loader	count=3
class	registered using eventloop ||| loop base	count=1
module	up to ||| uix	count=1
function	return [function_2] ||| [function_1] application [function_2]	count=3
class	list of all ||| loop base	count=1
class	the argument passed ||| file	count=1
module	a set ||| core	count=1
module_class	the app ||| core app	count=1
arg	unistroketemplate ||| tpl	count=1
class	mtdev converter ||| device	count=1
function_arg	bounding circle [arg_2] ||| [arg_2] [function_1]	count=1
module	returns true if the ||| uix	count=1
arg	called by dispatch_input() when ||| etype me	count=1
module	the screen if ||| core	count=1
arg	[arg_1] keyvalues should ||| [arg_1] [arg_2]	count=1
class	to the button ||| button behavior	count=1
arg	value is implicitly ||| section option value	count=1
function	density ||| density	count=1
function	1 9 ||| root	count=1
function	7 ||| build	count=1
class	returns ||| label base	count=1
function	dpi of ||| dpi	count=1
class	using ||| config	count=1
function	points of the gesture ||| gesture	count=1
function	show the [function_2] ||| [function_1] [function_2]	count=4
function	[function_1] the paths ||| [function_2] [function_1]	count=2
function	stop ||| stop	count=9
function	[function_1] widget ||| [function_1] [function_2]	count=3
function_arg	local [arg_2] ||| [arg_2] [function_1]	count=1
function	inches ||| inch	count=1
function	touch is [function_2] ||| [function_2] [function_1]	count=1
function	type ||| type	count=1
class	registered ||| loop base	count=1
class	if the implementation doesn't ||| base	count=1
function	8 ||| destroy settings	count=1
module	file ||| core	count=2
arg	should always use ||| logical_line	count=1
function	register a new ||| register	count=4
module	statement [module] parenthesised ||| [module]	count=1
function	find a [function_2] ||| [function_2] [function_1]	count=10
function_arg	table [arg_2] ||| [function_1] [arg_2]	count=4
class	show the view ||| modal view	count=1
function	[function_1] pixels to ||| [function_2] [function_1]	count=1
module	a bound function returns ||| core	count=1
function	[function_1] circle ||| [function_2] [function_1]	count=3
function	cursor leaves ||| cursor leave	count=2
module	the :class ||| uix recycleview	count=1
function	it adds ||| add dep	count=2
function	[function_1] less than ||| [function_2] [function_1]	count=2
class	screen ||| window base	count=1
class	called ||| base	count=1
function	maximizes ||| maximize	count=1
function	when [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] append [arg_2]	count=4
module	[module_1] text ||| [module_1] [module_2]	count=4
module	a string to a ||| core	count=1
class	close the view ||| view	count=1
arg	argument [arg] into ||| [arg]	count=1
arg	order to catch all ||| exception _traceback	count=1
module	[module] mimetype ||| [module]	count=1
function	you really want ||| dismiss	count=1
module	and a ||| core	count=2
function	remove a ||| remove	count=1
module_class	v3->v4 [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	line on the ||| on	count=1
module	the last file opened ||| core	count=1
function	[function_1] [function_2] ||| [function_1] protractor [function_2]	count=2
function	hint for ||| layout hint	count=1
function	the keyboard [function_2] ||| [function_2] [function_1]	count=8
class	kv rules of the ||| builder base	count=1
class	to the ||| base	count=2
function	options ||| options	count=1
class	is ||| system abstract	count=2
class	one ||| camera android	count=2
function	rounded ||| rounded	count=1
function	usage to the console ||| usage	count=1
function	scales the stroke ||| scale stroke	count=2
function_arg	[function_1] touch ||| [function_1] [arg_2]	count=1
function	return a [function_2] ||| behaviors toggle button behavior [function_1] [function_2] groupname	count=1
function	and send ||| send	count=1
class	indicate if the loader ||| image loader base	count=1
function	adds [function_2] ||| [function_2] [function_1]	count=3
function	indices in sorted_keys ||| trim to	count=1
arg	data as ||| data	count=2
function	extraneous whitespace after a ||| whitespace	count=1
function	new default config file ||| update config	count=1
class	one call ||| camera android	count=1
class	the :meth read ||| config	count=1
module	items in ||| adapters	count=1
module	after a :meth pause ||| core	count=1
class	returns ||| recycle data adapter	count=1
function	to a [function_2] ||| [function_1] [function_2]	count=1
function	pass the [function_1] [function_2] ||| [function_1] [function_2]	count=2
module	current views into the ||| uix	count=1
arg	the node ||| node	count=1
arg	proxyimage is returned ||| load_callback post_callback	count=1
arg	a comma-separated list ||| value parent	count=1
arg	real class or class ||| is_template	count=1
function	correct ||| img correct	count=1
class	the ||| event	count=1
function	you really want to ||| dismiss	count=1
module	if it ||| uix	count=1
arg	given ||| oscaddress	count=1
class	the screen if ||| base	count=1
class	layout [class_2] ||| [class_1] [class_2]	count=1
module	given a ||| core	count=1
class	find ||| triple tap	count=1
function_arg	[function_1] of microseconds ||| [function_1] [arg_2]	count=1
function	load a image ||| image	count=1
arg	the view ||| view	count=1
arg	all lines ||| lines	count=1
function	to dispatch [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] the start ||| [function_1] [function_2]	count=4
function	double tap touch within ||| double tap	count=1
class	motion ||| motion	count=1
function	the dot ||| dot	count=1
arg	viewport is in coordinates ||| viewport	count=1
arg	arglist ||| arglist	count=1
module	has [module] hat/dpad ||| [module]	count=1
function	binary and send it ||| send	count=1
function	for this file ||| file results	count=2
module	v3->v4 and [module] ||| [module]	count=1
class	return ||| text input	count=1
function	[function_1] velocity according ||| [function_2] [function_1]	count=2
function_arg	screen [arg_2] ||| [arg_2] [function_1]	count=1
function	touch is [function_2] ||| [function_1] [function_2]	count=1
class	implementation doesn't support ||| base	count=1
arg	[arg_1] specified section ||| [arg_2] [arg_1] defaultvalue	count=1
arg	the value of an [arg_1] [arg_2] if not found ||| [arg_2] [arg_1]	count=3
arg	function prepares the unistroketemplate ||| numpoints	count=1
function	[function_1] rounded to ||| [function_2] [function_1]	count=1
function	appends [function_2] ||| [function_2] [function_1]	count=2
module	list items with indices ||| adapters	count=1
function	for ||| for	count=1
function_arg	the parser [arg_2] ||| [arg_2] [function_1]	count=1
function	dot [function_2] ||| [function_1] [function_2]	count=4
arg	the widget [arg_2] ||| [arg_2] [arg_1]	count=1
module	method ||| core	count=2
class	the file ||| sound	count=1
class	removes ||| recycle data adapter	count=1
class	if the implementation ||| window base	count=1
function	logical [function_2] ||| [function_1] [function_2]	count=1
function	associates a :class ~kivy ||| attach recycleview	count=1
function	default config file ||| update config	count=1
class	configuration ||| parser	count=1
class	:meth read ||| config	count=1
function	to register [function_2] ||| [function_2] [function_1]	count=1
function	properties to animate ||| properties to animate	count=3
function	return the duration ||| duration	count=1
function_arg	[function_1] the matching ||| [function_1] score comparison_gesture [arg_2]	count=1
class	last file opened using ||| parser	count=1
function_arg	checks for [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] position indicated ||| [arg_2] [function_1]	count=2
function	[function_1] [function_2] ||| [function_2] touch [function_1]	count=1
class	all the rules ||| builder base	count=2
function	down [function_2] ||| [function_2] [function_1]	count=1
module	the implementation doesn't ||| core	count=1
arg	on the node ||| node	count=1
function	to a ||| to	count=3
function_arg	to local [arg_2] ||| [function_1] [arg_2]	count=1
function	double tap ||| double tap	count=2
function	hint for all the ||| layout hint	count=1
function	providers have been stopped ||| stop	count=1
function	use only get the ||| get	count=1
module	based on a ||| core	count=1
function	select ||| select list	count=1
function	find a triple ||| find triple	count=2
function	event called when ||| on	count=1
function_arg	nodes from node ||| nodes node	count=2
function	to local ||| to local	count=2
arg	key is ||| key	count=2
function	delete text [function] ||| delete word [function]	count=3
function	centers the gesture points ||| center	count=1
module	of ||| core	count=3
function	[function_1] leaves ||| [function_2] [function_1]	count=5
function	the [function] ||| [function]	count=2
function	list of ||| list	count=3
module	this facilitates re-loading of ||| uix	count=1
class	of a parser file ||| parser	count=1
function_arg	[function_1] [arg_2] i e alpha numeric ||| [function_1] [arg_2]	count=1
function	the parser ||| get parser	count=1
function	[function_1] [function_2] ||| [function_1] left of [function_2]	count=4
class	removes ||| data model behavior	count=1
function	remove an event ||| remove event	count=2
class	the window this ||| window base	count=8
function	the keyboard when the ||| keyboard on key	count=2
function	run ||| check	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] [function_arg_2]	count=18
module_class	the gesturecontainer ||| uix gesture surface	count=1
module	initialise ||| camera	count=1
class	data ||| data adapter	count=2
class	being selected ||| selectable	count=1
module	on a new ||| core	count=1
function	product of ||| product	count=1
module	of ||| pep8checker	count=2
arg	in ||| size	count=1
module	[module_1] message ||| [module_2] [module_1]	count=2
function	method is a ||| is	count=1
arg	from node and down ||| node	count=1
module	booleans to a ||| core image	count=1
arg	[arg_1] the name ||| [arg_1] [arg_2]	count=2
module	osc message and ||| lib osc	count=2
module_class	runs the gesture ||| core gesture	count=1
arg	data from grabbed ||| buf	count=1
function	headers of the response ||| resp headers	count=1
function	to hide ||| hide	count=1
class	the list ||| loop base	count=1
arg	language ||| language	count=1
function	application ||| application	count=1
function	coordinates to parent ||| to parent	count=2
class	find ||| input postproc double tap	count=1
function	load an ||| load	count=1
function	widget ||| widget	count=2
module	all input providers ||| core	count=1
module	if changing code ensure ||| uix	count=1
function	<> ||| python 3000 not equal	count=1
class	the label options ||| markup label	count=1
class	for this candidate with ||| candidate	count=1
function	of registered languages select ||| select	count=1
class	trigger a data and ||| data	count=1
class	for this candidate ||| candidate	count=1
arg	the method bound ||| window keycode text modifiers	count=1
class	with another gesture ||| gesture	count=1
module	a ||| core	count=68
arg	the specified section ||| section	count=1
function_arg	nodes [arg_2] ||| [arg_2] [function_1]	count=3
function	close the ||| close	count=1
function	random [function_2] ||| [function_2] [function_1]	count=1
function	unselects any currently selected ||| on selected uid	count=1
function	contextualactionview and display ||| contextual	count=1
arg	to the *ctx* and ||| win ctx	count=2
function	the length of ||| length	count=1
class	return ||| recycle layout manager behavior	count=1
function	[function_1] paths ||| [function_2] [function_1]	count=2
module	last file opened using ||| core	count=1
function_arg	bounds [arg_2] ||| [function_1] [arg_2]	count=1
function	never mix [function_2] ||| [function_2] [function_1]	count=2
function	to the keyboard when ||| keyboard on key up	count=1
function_arg	[function_1] position indicated ||| [function_1] key [arg_2]	count=2
function	update [function_2] ||| [function_1] [function_2]	count=1
class	the list of ||| event loop	count=1
arg	at the position indicated ||| last_node last_node_idx	count=1
class	initialise the ||| camera	count=1
function	scale-independent ||| sp	count=1
module	called ||| core window	count=5
module	takes a ||| core	count=1
function	redo ||| redo	count=1
function	tap touch within ||| tap	count=2
class	all input ||| event loop base	count=1
class	console ||| console	count=1
module	the position to ||| uix	count=2
module	this facilitates ||| uix	count=1
function	[function_1] paths with ||| [function_1] dep [function_2]	count=1
function	the icon of the ||| icon	count=1
class	clock ||| clock	count=5
function	the touch is a ||| is	count=1
function	to show the ||| show	count=1
arg	path to handle in ||| oscpath classname	count=1
function	comma ||| around comma	count=1
function	the keyboard when the ||| keyboard on key down	count=1
arg	touch event ||| touch	count=2
function	of the ||| of	count=4
module	ast and ||| tools pep8checker	count=1
function	down ||| down	count=1
class	file opened using ||| config parser	count=1
module	by calling ||| uix behaviors	count=1
module	one call ||| core camera	count=1
arg	start with the prefix ||| prefix	count=1
arg	data to the message ||| data	count=1
class	and pass to the ||| base	count=1
class	list of ||| event loop base	count=1
module_class	to the widget ||| uix widget	count=1
class	providers ||| event loop	count=1
function	a key ||| key	count=1
function_arg	when [arg_2] ||| [function_1] button down [arg_2] buttonid	count=1
function	compute the distance from ||| distance	count=1
arg	touch is ||| touch	count=1
function	process options ||| process options	count=1
function	system [function_2] ||| [function_1] [function_2]	count=1
module	the current ||| uix	count=1
function	[function_1] for comparing ||| [function_2] [function_1]	count=2
module	will be the ||| core	count=1
arg	in order to catch ||| exception _traceback	count=1
function	to the keyboard when ||| keyboard on key	count=2
function	[function_1] less ||| [function_2] [function_1]	count=2
arg	an [arg] ||| section [arg]	count=3
function	extraneous whitespace around ||| whitespace around	count=4
module	address ||| lib osc	count=1
function	iterate over ||| iterate	count=1
arg	with the name ||| name	count=1
function	hint for all the ||| hint	count=1
function	returns a ||| get	count=2
function	the application ||| app	count=1
function_arg	returns the [function_1] [arg_2] ||| core [function_1] [arg_2]	count=3
function	select call ||| select list	count=1
function	packer ||| int	count=1
function	[function_1] when the ||| [function_1] [function_2]	count=6
function	[function_1] an input ||| [function_2] [function_1]	count=4
function	the parser ||| parser	count=1
arg	position indicated by ||| last_node last_node_idx	count=1
class	show ||| focus behavior	count=1
module	true if a ||| core	count=1
function_arg	raw data to ||| raw append data	count=1
function	centimeters ||| cm	count=1
module	all ||| tools	count=1
function	can grab a ||| grab	count=1
class	using the ||| config	count=1
function_arg	local [arg_2] ||| [function_1] [arg_2]	count=1
arg	internal syncs the view ||| view	count=1
module	cut list items with ||| adapters	count=1
function	keywords ||| keywords	count=1
function	the system [function_2] ||| [function_2] [function_1]	count=1
class	loader ||| loader base	count=1
class	current ||| input	count=1
class	unregisters the ||| factory	count=1
function	a comma ||| around comma	count=1
function	proxy ||| proxy	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=18
module	of booleans to a ||| core	count=1
class	list ||| loop base	count=1
function	event handler ||| on	count=2
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=3
function	stop and ||| stop	count=3
function	density-independent ||| dp	count=1
function	the cursor x ||| cursor	count=1
function_arg	appends raw [arg_2] ||| [arg_2] [function_1]	count=4
function	in pixels to ||| to	count=1
class	doesn't support ||| base	count=1
function	at the top ||| top	count=1
module	if this ||| uix	count=1
function	[function_1] changes typically ||| [function_2] [function_1]	count=8
arg	node and down whether ||| node	count=1
function	[function_1] size in ||| [function_2] [function_1]	count=3
function	millimeters ||| mm	count=1
class	callbacks registered using ||| loop base	count=1
arg	the widgets' size ||| sh_sum available_space min_bounded_size sh_min_vals	count=1
class	the last ||| config	count=1
function	function to hide ||| hide	count=1
class	this candidate ||| candidate	count=2
arg	[arg] keycode ||| [arg]	count=1
arg	[arg_1] section ||| [arg_2] [arg_1]	count=1
function	[function_1] response ||| [function_2] [function_1]	count=4
function	to get the node ||| goto node	count=1
function	[function_1] [function_2] ||| [function_1] application [function_2]	count=6
module_class	replace the console ||| modules console	count=1
function	write ||| write	count=1
module_class	replace the [class_2] ||| [module_1] [class_2]	count=2
arg	viewport is in ||| viewport	count=1
function	system for [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] name ||| [arg_2] [arg_1]	count=1
function	the headers of the ||| headers	count=1
module_class	input [class_2] ||| [module_1] [class_2]	count=2
function	the keyboard in ||| keyboard	count=2
arg	return ||| content	count=1
class	return ||| event loop	count=1
class	multistrokegesture object will ||| multistroke gesture	count=1
module	last file ||| core	count=1
class	the :class screenmanager ||| base	count=1
module	adds a ||| core	count=1
function	content ||| content	count=3
arg	the key is not ||| key	count=1
module	eventloop ||| core	count=1
function	distance between ||| distance	count=1
module	data ||| lib	count=4
function	property it will ||| cancel property	count=2
function	grab and decode frame ||| read frame	count=1
class	if the [class_2] ||| [class_2] [class_1]	count=2
module	providers and call ||| core	count=1
function	to local [function_2] ||| [function_2] [function_1]	count=1
class	read ||| parser	count=1
function	should have [function] between import ||| [function] after import	count=1
class	tuio provider ||| tuio motion event provider	count=1
arg	in the ||| name classname	count=1
function	all ast checks ||| check ast	count=1
module	internal ||| uix behaviors	count=1
module	errors and warnings ||| tools pep8checker	count=1
module	doesn't support ||| core window	count=1
class	scatter widget ||| scatter	count=1
function	breaks before binary operators ||| break around binary operator	count=1
arg	unistroketemplate object ||| tpl	count=1
function	the node at ||| goto node	count=1
function	show the keyboard in ||| show keyboard	count=1
module	for matching given a ||| core	count=1
function	event [function_2] ||| [function_1] [function_2]	count=1
function	comparison ||| comparison	count=1
function	a triple [function_2] ||| [function_2] [function_1]	count=6
function	color [function_2] ||| [function_1] [function_2]	count=1
function	system [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] string unpacker ||| [function_1] [arg_2]	count=1
module	if the implementation ||| window	count=1
class	this loader ||| image loader	count=3
module	current selection [module] clipboard ||| [module]	count=1
module	items with ||| adapters	count=1
module	fit into a single ||| core	count=1
arg	[arg_1] superfluous ||| [arg_2] [arg_1]	count=1
arg	to the pos ||| pos	count=1
function	the path resampled to ||| unit	count=1
function	in sorted_keys ||| trim	count=2
function	from input ||| input	count=1
arg	should always use != ||| logical_line	count=1
function	[function_1] all ||| [function_2] [function_1]	count=1
function	file ||| file	count=4
function	remove an ||| remove	count=1
module	the initial position ||| input	count=1
module_class	copy [module_1] [class_2] argument ||| [module_1] [class_2] input copy	count=1
class	transition ||| card transition	count=1
class	the ||| event loop base	count=1
function	dispatch [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] a scroll ||| [function_1] [function_2]	count=5
function	contextualactionview and display either ||| contextual	count=1
class	write ||| config parser	count=1
class	another gesture ||| gesture	count=1
module	fit into a ||| core text	count=1
module	returns true if this ||| uix	count=1
class	input ||| event loop base	count=1
function	to dispatch ||| dispatch	count=1
module	create osc message ||| lib osc	count=2
arg	method bound ||| window keycode text modifiers	count=1
module	of matching ||| pep8checker	count=1
module	cut list items ||| adapters	count=1
function	the view ||| view	count=1
function	to [function] ||| [function]	count=3
function	all [function_2] ||| [function_1] [function_2]	count=2
module	of the screen if ||| core window	count=1
function	[function_1] table ||| [function_1] [function_2]	count=1
function	properties to ||| properties to	count=2
module	the screen ||| core window	count=1
function	bounds ||| bounds	count=1
function	current [function_2] ||| [function_1] [function_2]	count=1
class	doesn't support ||| window base	count=1
function	that are less than ||| sel	count=1
class	the configuration ||| parser	count=1
function_arg	to [arg_2] ||| [function_1] bundle bundle [arg_2]	count=1
function	of the application ||| application	count=1
class	and ||| event loop	count=1
function	[function_1] double ||| [function_2] [function_1]	count=1
function	list items [function] ||| [function] to	count=1
function	cancel a movement this ||| cancel	count=1
function	[function_1] paths with ||| [function_2] [function_1]	count=2
class	removes ||| recycle data model behavior	count=1
arg	of points ||| points	count=1
module	the file ||| audio	count=1
function	[function_1] all nodes ||| [function_2] [function_1]	count=1
function_arg	add a new ||| add panel name	count=2
arg	in ||| classname	count=1
module_class	[module_1] loader ||| [module_1] [class_2] base	count=1
function_arg	add a [arg_2] ||| [arg_2] [function_1]	count=1
function	returns the [function] for ||| [function]	count=1
class	all input providers and ||| event loop base	count=1
function	[function_1] bounding ||| core [function_1] [function_2]	count=1
function	and append it ||| append	count=1
class	in one call ||| camera android	count=1
module	if a bound function ||| core	count=1
function	[function_1] hooks ||| [function_1] [function_2]	count=3
class	for on_stop ||| event loop base	count=1
function_arg	widget [arg_2] ||| [arg_2] [function_1]	count=1
function	application ||| app	count=2
function	[function_1] [function_2] ||| [function_1] dep [function_2]	count=7
class	if ||| modal	count=1
module_class	the tree ||| uix tree view	count=2
function	[function_1] parent ||| [function_2] [function_1]	count=4
class	providers and call callbacks ||| base	count=1
class	memory ||| sound	count=1
module	register method ||| core	count=1
function	to dispatch an input ||| post dispatch input	count=1
function	[function_1] property ||| [function_1] named [function_2]	count=2
function	error ||| error	count=1
function	product of the ||| product	count=1
function_arg	local widget [arg_2] ||| [function_1] [arg_2]	count=1
function	two gestures ||| gestures	count=1
function	can load ||| can load memory	count=2
function	when ||| on key	count=3
function	merges two gestures together ||| merge gestures	count=1
class	cut list ||| list	count=3
module	this facilitates re-loading ||| uix	count=1
class	according to the label ||| markup label	count=1
function	coordinates to [function_2] ||| [function_2] [function_1]	count=3
arg	x y is ||| x y	count=2
module	complicated [module] the ones ||| [module]	count=1
class	loader can ||| loader base	count=1
function	comma ||| comma	count=1
module	a new ||| core	count=3
class	call ||| camera	count=1
class	and call callbacks registered ||| loop	count=1
function	exists ||| exists	count=2
module	after a :meth ||| core	count=1
function	a new gesture ||| gesture	count=1
class	return the list of ||| event	count=1
function	and append ||| append	count=1
class	text ||| text	count=1
class	registered using ||| event loop	count=1
function	return the dpi of ||| dpi	count=1
function	uid of the currently ||| uid	count=1
module	internal computes ||| uix	count=1
module	the implementation ||| window	count=1
function	[function_1] of the ||| [function_2] [function_1]	count=5
function	never mix ||| or	count=1
function	runtime hooks for ||| runtime hooks	count=1
class	:meth ||| config parser	count=1
function	the uid of the ||| uid	count=1
function	one call ||| read	count=1
function	can load ||| can load	count=1
class	opened using the ||| config	count=1
function_arg	start the [arg_2] ||| [function_1] [arg_2]	count=1
function	reset ||| reset	count=2
class	the :meth read ||| config parser	count=1
module	the list of all ||| core	count=1
arg	of the data ||| data	count=2
class	the window to the ||| module base	count=1
function	the application ||| application	count=1
function	[function_1] [function_2] ||| [function_1] of [function_2]	count=3
function	indentation level ||| indentation	count=1
class	unregisters the ||| factory base	count=1
function	[function_1] :class ~kivy ||| [function_2] [function_1]	count=1
class	image ||| image	count=1
module	of ||| tools pep8checker	count=2
function	main loop ||| run	count=1
function	reference ||| ref	count=1
function	separate ||| separate	count=1
class	the result ||| standard	count=1
class	list of all ||| loop	count=1
class	the window to the ||| base	count=1
arg	computes the ||| a	count=1
class	configuration to the ||| parser	count=1
function	a comma ||| comma	count=1
class	providers and call callbacks ||| event	count=1
function	resume ||| resume	count=1
function	binary message ||| binary	count=1
module	from tokens and ||| tools pep8checker	count=1
arg	viewport is in coordinates ||| data viewport	count=1
function_arg	the stroke [arg_2] ||| [function_1] [arg_2]	count=4
function	and returns the stroke ||| stroke	count=1
function	[function_1] reference ||| [function_2] [function_1]	count=3
function	transform local coordinates to ||| to	count=2
class	to the label options ||| label	count=1
class	whether the texture ||| image	count=1
function	pause ||| pause	count=2
function	the runtime [function_2] ||| [function_2] [function_1]	count=4
class	point ||| point	count=2
function	two gestures ||| merge gestures	count=1
class	and call ||| loop	count=1
function	animate ||| animate	count=2
class	method ||| config parser	count=1
class	to ||| config parser	count=1
class	vector ||| vector	count=4
class	gesture consists only of ||| gesture	count=1
function	a proxy reference ||| proxy ref	count=2
function	this file ||| file results	count=2
function	show the ||| show	count=1
module_class	[module_1] [class_2] ||| [module_1] loader [class_2]	count=1
class	last file ||| parser	count=1
function	a x/y window coordinate ||| highlight at	count=1
module	initialise the ||| core	count=1
function	usage to ||| usage	count=1
class	registered via ||| factory	count=1
function	gestures together the oldest ||| merge gestures	count=1
function	a mousewheel scrolling ||| mouse scrolling	count=1
arg	invalidates all previously ||| p	count=1
function	get a provider ||| get	count=1
arg	convert a gesture ||| gesture	count=1
arg	animation if available ||| allow_anim	count=1
function	of the last ||| of	count=1
class	callbacks registered using ||| event loop	count=1
class	requested ||| app	count=1
function	two gestures together the ||| gestures	count=1
arg	touch x/y ||| touch	count=1
function	has multitouch ||| has mtdata	count=2
function_arg	correct [arg_2] ||| [arg_2] [function_1]	count=1
arg	by key ||| key	count=1
module	[module_1] sound() instance ||| [module_1] [module_2]	count=2
module	internal computes the ||| uix	count=1
function	[function] class ||| [function]	count=1
function	paths with the ||| paths	count=1
function_arg	[function_1] coordinates ||| [function_1] [arg_2]	count=6
module	import statement [module] parenthesised ||| [module]	count=1
function	settings to add ||| add	count=2
module_class	if the [class_2] ||| [module_1] [class_2]	count=4
function	paths ||| normalize paths	count=1
arg	[arg_1] keyvalues ||| [arg_1] [arg_2]	count=1
class	prepare the [class] vectors self ||| [class]	count=1
function	scales the ||| scale	count=1
function_arg	[function_1] x ||| [function_1] [arg_2]	count=4
function	[function_1] current position ||| [function_1] [function_2]	count=1
module	if the implementation ||| core window	count=1
function	remove a widget from ||| remove	count=1
function	breaks before ||| break	count=1
module	in ||| camera	count=1
function	triple ||| triple	count=2
class	a data and ||| recycle data	count=1
class	via the register method ||| factory base	count=1
class	return ||| base	count=2
function	unload the ||| unload	count=1
function	bounding ||| bounding	count=1
arg	depending on the ||| dx dy	count=1
function	[function_1] start ||| [function_2] [function_1]	count=3
function	to register ||| register	count=1
class	[class_1] and ||| [class_1] [class_2]	count=1
function	a proxy [function_2] ||| [function_2] [function_1]	count=1
function	key ||| select with key	count=1
function_arg	node at [arg_2] ||| [arg_2] [function_1]	count=3
function	the keyboard when ||| keyboard on key up	count=1
function	to [function_2] ||| [function_2] [function_1]	count=6
function	unregister a ||| unregister	count=1
module	a section if the ||| core	count=1
module	opened ||| core	count=1
function	vector ||| vector	count=2
function	tap touch within self ||| tap	count=1
class	return the list ||| event loop base	count=1
function	internal reset the ||| reset	count=1
function	at the top of ||| top of	count=1
function_arg	[function_1] from node ||| [function_1] [arg_2]	count=3
module	objects matching ||| lang	count=1
function	min or max bounds ||| with bounds	count=1
class	transition ||| transition base	count=1
class	to the label options ||| markup label	count=1
function	camera internal ||| camera	count=1
class	opened using the ||| parser	count=1
function	to dispatch ||| post dispatch	count=1
function	7 ||| directory	count=1
function	switch [function_2] ||| [function_1] [function_2]	count=2
module_class	the [class_2] ||| [module_1] [class_2] dismiss	count=1
function_arg	a screen [arg_2] ||| [arg_2] [function_1]	count=1
function	of [function] ||| on [function]	count=1
arg	handling it in the ||| oscpath classname	count=1
function	appropriate size hint ||| hint with	count=1
function	widget [function] ||| [function]	count=1
function	tabs ||| tabs	count=2
module	to the ||| core	count=2
module	the length of a ||| core	count=1
class	file ||| config	count=1
function_arg	apply [arg_2] ||| [function_1] widget [arg_2]	count=1
module	if ||| core window	count=2
function	new gesture ||| gesture	count=1
function	of text displayed in ||| text	count=1
class	unregisters the ||| base	count=1
function	a proxy ||| proxy	count=1
function	load an ||| load memory	count=1
function	the touch is ||| is	count=1
function	get the node at ||| get node at	count=1
function	data changes data ||| data	count=1
module	[module] string ||| [module]	count=1
function	[function_1] a property ||| [function_2] [function_1]	count=2
class	for ||| label base	count=1
module	:meth ||| core	count=1
class	[class_1] event ||| [class_1] [class_2]	count=1
function	[function_1] tabs ||| [function_2] [function_1]	count=2
function_arg	is released [arg_2] ||| [function_1] key [arg_2]	count=1
class	:meth read ||| config parser	count=1
module	a point to the ||| uix	count=1
class	callbacks registered using eventloop ||| loop base	count=1
function	keyboard when the ||| keyboard on key down	count=1
module	the ||| uix recycleview	count=9
class	request ||| url request	count=1
function	gestures together ||| merge gestures	count=1
class	the argument passed ||| file system	count=1
class	by default ||| metrics base	count=1
function	all [function_2] ||| [function_2] [function_1]	count=2
class	[class_1] if ||| [class_2] [class_1]	count=6
function	to hide the keyboard ||| hide keyboard	count=1
class	using ||| base	count=1
function	tap happens inside ||| tap	count=2
function	velocity according to ||| velocity	count=1
function	to the keyboard when ||| keyboard on key down	count=1
class	database ||| gesture database	count=1
function_arg	add [arg_2] ||| [function_1] panel [arg_2]	count=1
function	the front of the ||| front	count=1
arg	section keyvalues should ||| section keyvalues	count=2
class	[class_1] [class_2] ||| [class_2] [class_1]	count=66
arg	[arg_1] y is ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] vector [arg_2]	count=5
module	osc ||| osc	count=1
function	parser for the ||| parser	count=1
function	initialise the camera internal ||| init camera	count=1
class	provided ||| text	count=1
class	the screen if ||| window base	count=1
function	[function_1] color ||| [function_2] [function_1]	count=1
function	method is more ||| view	count=1
class	configparser instance if ||| config	count=1
function	displayed frames from the ||| frames displayed	count=1
class	the ||| transition base	count=1
module	to ||| uix recycleview	count=2
arg	method bound ||| keycode	count=1
module	a set of images ||| core	count=1
function	the paths ||| paths	count=1
arg	are ||| physical_line	count=1
class	list ||| spelling base	count=1
function_arg	node [arg_2] ||| [function_1] [arg_2]	count=1
arg	of an [arg] ||| section [arg]	count=3
class	list ||| event loop	count=1
function	load an image ||| load memory	count=1
function	append it [function_2] ||| [function_1] [function_2]	count=2
module	the file from memory ||| audio	count=1
module	by ||| uix behaviors	count=1
function	automatically ||| start	count=2
class	and call callbacks registered ||| loop base	count=1
function	key release ||| key	count=1
module_class	[module_1] returns ||| [module_1] compound [class_2]	count=1
function	separate [function_2] ||| [function_2] [function_1]	count=1
class	associates ||| data model behavior	count=1
module	for the [module] the ||| [module]	count=1
class	all ||| base	count=2
arg	method bound to the ||| keycode text modifiers	count=1
function	by settings to add ||| add	count=2
function	check all files in ||| input	count=1
class	all ||| event	count=2
function	gestures together the oldest ||| gestures	count=1
module	an image ||| core image	count=1
function	[function_1] cursor ||| [function_1] [function_2]	count=3
module_class	up to [class_2] ||| [module_1] recycleview [class_2]	count=1
arg	another touch ||| other_touch	count=1
class	doesn't ||| window base	count=1
function	released ||| key up	count=1
class	of the ||| window	count=1
module_class	if this [class_2] ||| [module_1] [class_2]	count=2
class	doesn't support ||| window	count=1
arg	catch all ||| _traceback	count=1
function	returns the [function] ||| [function]	count=1
class	and call ||| event loop base	count=1
function	size hint ||| hint	count=1
module_class	[module_1] [class_2] ||| [module_1] tuio [class_2]	count=1
module	of that property is ||| lang	count=1
class	providers and call callbacks ||| loop	count=1
function	max bounds on the ||| with bounds	count=1
class	layout ||| recycle layout	count=1
arg	called by dispatch_input() ||| etype me	count=1
function	surround operators with a ||| around operator	count=1
function	system for ||| system	count=1
function	classnames previously ||| unregister	count=1
function	pixels to [function_2] ||| [function_2] [function_1]	count=1
function	can load an image ||| can load	count=1
function	only get [function_2] ||| [function_2] [function_1]	count=4
class	rules ||| builder	count=1
function	[function_1] double tap ||| [function_2] [function_1]	count=1
function	adds the [function_2] ||| [function_2] [function_1]	count=4
class	[class_1] manager ||| [class_2] [class_1]	count=1
function_arg	options passed [arg_2] ||| [arg_2] [function_1]	count=3
class	from memory ||| sound	count=1
function	remove the image ||| remove	count=1
function	cached version ||| cached extents	count=1
arg	microseconds ||| microseconds	count=1
function_arg	to parent [arg_2] ||| [function_1] [arg_2]	count=1
module	call callbacks registered using ||| core	count=1
function	headers of ||| headers	count=1
function	update [function_2] ||| [function_2] [function_1]	count=1
class	menu buttons unless they ||| menu	count=1
module	by the hook ||| packaging pyinstaller_hooks	count=1
function	data changes typically ||| refresh from data	count=2
function	return vector ||| get protractor vector	count=1
arg	key is not ||| key	count=1
function	window to local ||| to	count=1
arg	high level bit list ||| bits	count=1
module	osc message ||| lib osc	count=2
arg	a gesture ||| gesture	count=1
function	a double [function_2] ||| [function_1] [function_2]	count=6
function	add ||| add	count=5
arg	for the given *ctx* ||| win ctx	count=3
function	[function_1] window ||| [function_1] [function_2]	count=4
function	if the touch is ||| is	count=1
class	the instance has focus ||| focus behavior	count=2
function	response ||| resp	count=1
class	input providers and ||| loop	count=1
function	register a property ||| register named property	count=2
function	of [function_2] ||| [function_2] [function_1]	count=1
function	compound statements on the ||| compound statements	count=1
function	been stopped ||| stop	count=1
module	the cursor to the ||| uix	count=1
function	[function_1] a scroll ||| [function_2] [function_1]	count=5
class	opened using the ||| config parser	count=1
class	widget i e ||| widget	count=1
function_arg	table [arg_2] ||| [arg_2] [function_1]	count=4
function	for the screen ||| for screen	count=3
function_arg	[function_1] coordinates see ||| [function_1] [arg_2]	count=15
function	spaces ||| spaces	count=1
class	the ||| window base	count=3
class	add ||| loop base	count=1
function	[function_1] supported languages ||| [function_1] [function_2]	count=1
module_class	launches the app ||| core app	count=1
function	[function_1] binary ||| [function_2] [function_1]	count=2
function_arg	[function_1] text ||| [function_1] textinput [arg_2]	count=1
module	the implementation doesn't support ||| window	count=1
arg	catch all the ||| exception _traceback	count=1
class	found ||| manager	count=1
class	input providers and call ||| event loop	count=1
function	exists in ||| exists	count=1
class	the view ||| view	count=2
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=1
class	callbacks registered using eventloop ||| loop	count=1
function	the nodes that can ||| selectable nodes	count=1
class	the request has been ||| request	count=1
function	remove a widget ||| remove	count=1
module	a thread-safe exit ||| core	count=1
module	and a matching ||| core	count=1
function	registered languages select the ||| select	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=3
module_class	[module_1] layout manager ||| [module_1] [class_2]	count=2
function	[function_1] for this ||| [function_2] [function_1]	count=1
module	support ||| core	count=1
arg	args into attributes of ||| args	count=1
arg	the default value ||| value	count=1
function	cached version ||| cached	count=1
function	distance from ||| get distance	count=1
class	of ||| window	count=1
function	[function_1] paths ||| [function_1] [function_2]	count=1
class	screen if the implementation ||| base	count=1
class	is ||| factory base	count=1
function	property it ||| stop property	count=1
arg	[arg_1] y position ||| [arg_2] [arg_1]	count=1
function	for the [function_2] ||| [function_1] [function_2]	count=1
module	a dummy ||| core	count=1
function_arg	[function_1] using ||| [arg_2] [function_1]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] text [arg_2]	count=1
function	button ||| button	count=2
module	position in ||| input	count=1
module	doesn't ||| core window	count=2
class	[class_1] if it ||| [class_2] [class_1]	count=6
arg	matching gesture in ||| gesture minscore rotation_invariant	count=1
function	tick the drawing counter ||| tick draw	count=1
class	is 1 by default ||| metrics base	count=1
function	[function_1] local widget ||| [function_1] [function_2]	count=4
function	another known ||| down	count=1
function	keyboard when the ||| keyboard on	count=2
function	[function_1] application ||| [function_2] [function_1]	count=4
module	initialise ||| core	count=1
function_arg	apply [arg_2] ||| [arg_2] [function_1]	count=1
function	true if a screen ||| screen	count=1
arg	stop handling it in ||| oscpath classname	count=1
function	size ||| size	count=1
function	[function_1] product of ||| [function_2] [function_1]	count=3
class	of ||| event loop	count=1
module	strip and ||| tools pep8checker	count=1
arg	even if an animation ||| widget prop	count=1
function	tick the [function_2] ||| [function_1] [function_2]	count=1
function	similarity ||| similarity	count=1
function	event called when the ||| on	count=1
function	contextualactionview and ||| contextual	count=1
module_class	of a vector ||| core vector	count=1
function	[function_1] an input ||| [function_1] [function_2]	count=4
function	a scroll ||| scroll	count=1
class	request ||| request	count=1
function	convenience function to hide ||| hide	count=1
function	is ||| is dir	count=2
module	current position in the ||| input	count=1
function_arg	table in the ||| table size	count=1
arg	the method bound ||| window keycode	count=1
module	point to the line ||| uix	count=1
module	builds a ||| core	count=1
class	if the loader ||| loader base	count=1
module	parse [module] string removing ||| [module]	count=1
module	on either ||| tools pep8checker	count=1
module	file's ast and ||| tools pep8checker	count=1
function	:class ~kivy graphics fbo ||| fbo	count=1
module	all input providers and ||| core	count=1
class	animate ||| window base	count=1
class	providers and call callbacks ||| event loop base	count=1
arg	y is inside ||| y	count=1
