function	name of the ||| name	count=1
function	stopped and is ||| stopped	count=1
class	provider ||| process monitor	count=2
arg	message ||| message protocol address	count=2
class	value of c{key} by ||| mem cache	count=2
class	unique across ||| name	count=1
arg	an sexp ||| sexp	count=1
function_arg	@param hints ||| init hints	count=1
function	an l{iprocesstransport} ||| force	count=1
class	stdin ||| process	count=1
class	print ||| reporter	count=1
function	resumeproducing} ||| resume	count=2
module	if they have the ||| web	count=1
arg	request but ||| timestamp request	count=1
class	as ||| element	count=3
function	more than once ||| finished finished	count=1
function	[function_1] a new ||| [function_2] [function_1]	count=1
function	[function] trigger ||| [function] trigger	count=1
arg	a data ||| data	count=1
arg	the given queries ||| queries timeout	count=1
arg	single [arg] response ||| [arg]	count=1
arg	reporter ||| testname reason	count=1
function	to get a channel ||| channel open	count=1
function	in dispatch ||| dispatch	count=1
function	[function_1] for closing ||| [function_1] [function_2]	count=1
class	the ||| itelnet	count=1
function	cancel this l{deferredlist} ||| cancel	count=1
function	the ||| build service	count=1
module	the avatar if ||| conch	count=1
function	setup method ||| setup	count=1
function	[function_1] a resolver ||| [function_2] [function_1]	count=1
class	news files ||| news builder	count=1
class	has been ||| queue	count=1
function	exhorting the ||| replacement	count=1
arg	change the modes on ||| chan set modes limit	count=1
module_class	[module_1] [class_2] ||| [module_1] igroup [class_2]	count=5
arg	receive data ||| data	count=1
function	provider ||| force stop	count=1
function	removing ||| agentc remove	count=1
arg	wisde wanted a reply ||| result localchannel	count=1
function	[function_1] address ||| [function_2] [function_1]	count=6
module	with given arguments ||| web	count=1
function	us to a chat ||| chat	count=1
module	to avoid a reference ||| internet	count=1
function	[function_1] bounce ||| [function_1] [function_2]	count=1
function	rpy file to ||| script	count=1
module	[module_1] the ||| [module_2] [module_1]	count=20
class	wait ||| unix application runner	count=1
function	a command in ||| command	count=1
function	[function_1] expiration tracking ||| [function_1] [function_2]	count=1
function	pop one search term ||| single search step	count=1
class	completely ||| protocol	count=1
module_class	the buffer immediately ||| conch buffering mixin	count=1
function	the named plugin package ||| plugin package paths	count=1
function	an expected [function_2] ||| [function_2] [function_1]	count=3
function	of ||| not	count=1
function	notify ||| notify	count=3
function	the send window ||| window	count=1
class	kqueue ||| kqueue reactor	count=3
function	available personal ||| get personal	count=1
class	data as a single ||| tuntap	count=1
function_arg	query is [arg_2] ||| [arg_2] [function_1]	count=1
function	to the process ||| process	count=2
arg	for the given group ||| group low high header	count=1
module	log ||| _dist	count=1
function	returns the hash ||| hash	count=1
function	we receive a msg_disconnect ||| ssh disconnect	count=1
function	while a long ||| long	count=1
function	return a quote ||| get quote	count=3
function	[function_1] types ||| [function_2] [function_1]	count=2
class	all the accounts ||| account manager	count=1
class	initialization ||| feature initiating	count=1
function	dtds are ignored ||| end dtd	count=1
module	them when ||| conch	count=1
module	local port [module_2] ||| [module_2] [module_1]	count=1
arg	callback ||| callback	count=2
function	[function_1] a child ||| [function_1] [function_2]	count=1
arg	with the name c{avatarid} ||| avatarid	count=1
function	get state [function_2] ||| [function_2] [function_1]	count=1
function	cancel the timeout ||| cancel timeout	count=2
class	last write ||| daily log	count=1
function	the normal prefix to ||| prefix	count=1
class	and moduledict ||| python	count=1
function	object from modules instance ||| name	count=1
class	mailbox ||| imailbox imap	count=2
function	[function_1] and directories ||| [function_2] [function_1]	count=3
module	initiated by the ||| conch ssh	count=1
class	unless ||| ftpclient basic	count=2
class	[class] consists of ||| [class]	count=2
module	arrange ||| names	count=1
class	authorities to trust ||| sslcertificate authorities	count=1
class	accumulate ||| read body protocol	count=1
function	and ||| get deprecated	count=1
module_class	the name [class_2] ||| [module_1] [class_2]	count=2
function	user-space send buffer for ||| send buffer	count=2
function	for a ||| get	count=1
arg	using this l{command}'s ||| cls box protocol	count=1
function_arg	[function_1] proto ||| [function_1] [arg_2]	count=1
function	query ||| query	count=7
arg	query ||| query timeout queriesleft	count=1
function	reading writing [function_2] ||| [function_2] [function_1]	count=3
class	for name lookups ||| ireactor pluggable resolver	count=1
function	some ||| get replacement	count=1
function	all child elements of ||| elements by	count=1
arg	a box was ||| box	count=1
function	points to a ||| islink	count=1
function_arg	[function_1] primary ||| [arg_2] [function_1]	count=1
function	identify [function] messages ||| [function]	count=1
function	the deferred has ||| get	count=1
arg	turn the request ||| request	count=1
function	of hard [function_2] ||| [function_2] [function_1]	count=1
function	twisted ||| get deprecated	count=1
function	create a l{bucket} corresponding ||| bucket for	count=1
arg	undeliverable email ||| failedfrom failedto transcript	count=1
class	want log levels to ||| log level	count=1
arg	group over ||| group low high	count=1
module_class	[module_1] cgi specification ||| [module_1] [class_2]	count=2
function	a channel of ||| lookup channel	count=1
function	internal create a ||| create	count=1
class	add ||| epoll reactor	count=1
arg	the primary high-level api ||| commandtype	count=1
function	joining to c{path} ||| to	count=1
class	[class] an address ||| [class]	count=3
function	a reply [function_2] ||| [function_2] [function_1]	count=4
class	to at [class] l{filepath} c{linkfilepath} ||| [class]	count=1
class	of this sentence ||| sentence	count=1
function	child elements of ||| elements	count=1
module	the given message object ||| mail	count=1
function	the envelope for ||| envelope	count=1
function	c{datetime time} object ||| combine date and time	count=1
function	[function_1] clientside ||| [function_1] cache [function_2]	count=2
function_arg	to [arg_2] ||| [function_1] [arg_2]	count=2
function	a sentence ||| sentence	count=1
class	the group [class_2] ||| [class_2] [class_1]	count=13
module	pathentry this is a ||| python	count=1
function	the setup ||| setup	count=1
function	into a trust root ||| trust root path	count=1
module	content-length and store ||| web	count=1
function	when the size of ||| size	count=1
function	date string one of ||| string	count=1
module	the running ||| conch ssh	count=1
class	of my class ||| tuntap port	count=1
function	tls ||| client tls	count=1
function_arg	c{kwargs} raises [arg_2] ||| [function_1] [arg_2]	count=1
module	root element ||| words xish	count=2
function	c{type}, or raise an ||| typecheck	count=1
class	selected states ||| imap4client	count=5
function_arg	[function_1] outiv ||| [arg_2] [function_1]	count=2
arg	[arg_1] indication of ||| [arg_1] [arg_2]	count=1
function_arg	or return default ||| get key default	count=1
class	called after [class] ||| synchronous [class]	count=2
module	called to handle the ||| conch ssh	count=1
module	return the ssh key ||| conch ssh	count=1
function	a variable name ||| name	count=1
function	to register ||| register	count=1
function	flag ||| deprecated	count=1
class	for use ||| factory	count=1
function	a response code ||| code	count=1
arg	logical url ||| logicalurl	count=2
function	our channel request ||| ssh channel	count=1
function_arg	any received [arg_2] ||| [function_1] [arg_2]	count=6
function	special-case your [function_2] ||| [function_2] to [function_1]	count=1
function	'message' is successfully posted ||| post request	count=1
function	flag if any ||| get	count=1
function	nonce parameter of ||| generate nonce	count=1
function	an entity for 'name', ||| entity	count=2
function	return first [function_2] ||| [function_2] [function_1]	count=1
class	underlying pkey object ||| key	count=1
module	c{request}'s ||| web	count=1
arg	user ||| user channel data	count=1
class	current authentication type ||| sshuser auth	count=1
arg	[arg_1] port ||| [arg_2] [arg_1]	count=10
class	as a zip ||| zip	count=1
arg	adding [arg] ||| test [arg]	count=1
arg	the jellier ||| jellier	count=1
function	c{loop} ||| as future	count=1
arg	exit status ||| signal status	count=1
function	contextmanager that replaces stdout ||| replace stdout	count=1
arg	information about ||| info	count=1
class	[class] address ||| record [class]	count=1
function	to the specified directory ||| to	count=1
function	this checker ||| checker	count=1
class	an idle one ||| team	count=1
function	[function_1] warning suppressions ||| [function_1] [function_2]	count=1
arg	and apply stringprep ||| jidstring	count=1
function	internal get the ||| get	count=1
function	called when the connection ||| connection	count=3
function	exception into the given ||| exception into	count=1
class	visible ||| nmeaadapter	count=1
module	xml stream ||| protocols jabber	count=2
arg	called when a test ||| test	count=1
arg	buffer some bytes ||| data	count=1
function_arg	[function_1] [arg_2] ||| [function_1] inode [arg_2]	count=2
module	log observer if it ||| python	count=1
class	received [class_2] ||| [class_2] [class_1]	count=8
function	is in the known_hosts ||| is in	count=1
function	of the handler ||| handler	count=1
function	[function_1] also be ||| h2connection [function_1] [function_2]	count=3
function_arg	send for [arg_2] ||| [arg_2] [function_1]	count=1
arg	tests that [arg_2] ||| [arg_2] [arg_1]	count=1
function	extract ||| extract	count=2
arg	utf-8 byte data ||| data	count=1
function	[function_1] an encoder ||| iencoding resource [function_1] [function_2]	count=2
class	named command ||| command locator	count=1
function_arg	push [arg_2] ||| [arg_2] [function_1]	count=1
class	web context factory ||| policy	count=1
module	context using this pidfile ||| application	count=1
arg	locally-unique id ||| luid dorefcount	count=1
function	[function_1] in c{paths} ||| [function_2] [function_1]	count=5
function	indicate ||| finish	count=1
class	new win32 ||| win32reactor	count=1
module	to the transport of ||| mail	count=1
arg	position ||| position	count=1
class	with this publisher ||| log publisher	count=1
module	reset the xml stream ||| words protocols jabber	count=1
function	add a mailbox change ||| add	count=1
function	from ||| from	count=29
function	of human readable flags ||| human readable	count=1
function	check ||| check	count=3
function	l{bucket} corresponding to ||| bucket for	count=1
function	[function_1] [function_2] ||| [function_2] exchange [function_1]	count=6
class	file and ||| file	count=3
function	unicode for python 2 ||| unicode	count=1
class	inclusion ||| iknown host	count=1
module	command ||| mail	count=1
function	suitable log observer for ||| log observer	count=1
arg	request to another user ||| user filename port	count=1
function	[function] in ||| format [function]	count=3
function	install ||| install	count=8
function	[function_1] of message ||| [function_2] [function_1]	count=2
class	stop performing the ||| transport	count=1
function	success to the ||| success	count=1
arg	a class object c{classobj}, ||| classobj prefix	count=1
arg	mac ||| seqid data mac	count=1
function	final one in a ||| last gsvsentence	count=1
class	an l{ipv4address} ||| server	count=1
function	a package ||| package	count=1
arg	objects and ||| objects proto	count=1
module	[module_1] key ||| [module_1] [module_2]	count=4
function	with ||| sibling	count=2
function	to keep [function_2] ||| [function_2] [function_1]	count=2
function	described by rfc 1035 ||| str	count=1
function	[function_1] msg_userauth_info_response the ||| [function_1] [function_2]	count=1
arg	application bytes and send ||| bytes	count=2
function	message to [function_2] ||| [function_2] [function_1]	count=2
arg	primary high-level api ||| commandtype	count=1
function	fails to ||| on fail	count=1
arg	see [arg_2] ||| [arg_2] hostname [arg_1]	count=1
function	successfully posted to one ||| post	count=1
function	send for ||| copy for	count=2
function	no credentials ||| credentials	count=1
arg	the given numeric ||| interface	count=1
function	canceled ||| cancel get	count=1
class	[class_1] proxy ||| [class_2] [class_1]	count=3
function	set the ||| get deprecated	count=1
module	up the response ||| web	count=1
arg	fail because authentication is ||| code resp	count=1
module	sessionno ||| internet iocpreactor	count=1
function	should enable [function] ||| should enable [function]	count=2
class	context ||| ipidfile	count=1
function	size ||| get size	count=1
arg	pidfile ||| exctype excvalue traceback	count=1
function	body of an l{iresponse} ||| read body	count=1
module	the same integer ||| conch ssh	count=1
function	-> [function] parent ||| [function]	count=1
class	temporary file when ||| file wrapper	count=2
arg	new l{connectionpool} ||| dbapiname	count=1
function_arg	replace a [arg_2] ||| [function_1] child [arg_2]	count=3
arg	tests that ||| recurse	count=1
class	i close [class_2] ||| [class_1] [class_2]	count=1
arg	aren't value constants the ||| level	count=1
function	this will be called ||| sent mail	count=1
function	from the float ||| from floats	count=1
class	a certificate ||| certificate	count=1
class	this failure's type is ||| failure	count=1
function	private constructor to create ||| init	count=1
class	all processes reboots etc ||| maildir name	count=1
arg	line of a multi-line ||| line	count=1
class	further processing of this ||| cooperative	count=1
function	contact list ||| contact changed	count=1
function	receive a msg_disconnect ||| disconnect	count=1
function	rotate the ||| rotate	count=2
function	add a filedescriptor ||| add	count=7
class	the xmlstream when the ||| authenticator	count=2
arg	header ||| header	count=3
function	display ||| opt	count=1
class	a www-authenticate ||| factory	count=1
function	log to ||| log	count=1
function	path to ||| path	count=2
class	it to ||| resolver	count=1
function	given signal ||| signal	count=1
arg	the modes on ||| modes limit	count=1
class	defined ||| abstract maildir	count=1
function	if two [function] are ||| [function]	count=1
arg	a message which cannot ||| relay message	count=1
module	change on the ||| conch	count=1
rep	the exception [function_arg_2] ||| [module_class_1] [function_arg_2]	count=2
arg	given transport ||| transport	count=4
function	when host ||| host	count=1
function	challenge ||| generate	count=1
class	avatar to be ||| avatar	count=1
function	have a result at ||| result	count=1
function	convert a name ||| to	count=1
function	update of a particular ||| update	count=1
arg	host a ||| host	count=1
class	thread ||| thread worker	count=1
function	with a name ||| search	count=1
function_arg	list [arg_2] ||| [function_1] [arg_2]	count=1
class	remove ||| queue	count=1
function	provider ||| process	count=1
module	pre-built ||| protocols	count=1
function_arg	[function_1] directory ||| [function_1] [arg_2]	count=3
arg	wisde wanted ||| result localchannel	count=1
function	find ||| maybe find	count=1
class	l{irenderable} to allow ||| element	count=1
function	the challenge for use ||| challenge	count=1
class	exposed ||| expose	count=1
function	ready [function_2] ||| [function_2] [function_1]	count=7
arg	observers this will ||| observers	count=1
function_arg	from [arg_2] ||| [function_1] [arg_2]	count=4
function	the given signal ||| signal	count=1
module	stop ||| conch	count=1
function	a local [function_2] ||| [function_2] [function_1]	count=3
arg	a command over it ||| reactor command username	count=1
function	write into the receive ||| receive	count=1
function	session ||| session	count=2
arg	host the host of ||| host port path reactor	count=1
arg	pop3 [arg] short ||| [arg]	count=1
function_arg	or return [arg_2] ||| [arg_2] [function_1]	count=1
function	warning suppressions ||| suppress	count=1
function	l{interfaces ihandshakelistener} to ||| handshake completed	count=1
module	see ||| conch	count=1
arg	provider of l{twisted ||| contextfactory connecttimeout bindaddress	count=1
function	errors caught by ||| errors	count=1
function	as the nonce parameter ||| generate nonce	count=1
function	size in ||| size	count=2
arg	name ||| name	count=29
arg	set flags [arg_2] ||| [arg_1] [arg_2]	count=1
arg	system ||| modulename	count=1
module	the xml stream has ||| words protocols jabber	count=1
function	mark a message ||| delete message	count=6
arg	write out ||| write	count=1
function	point monitoring the given ||| ignore	count=1
function	representation of ||| compact repr	count=1
function_arg	an authenticator [arg_2] ||| [arg_2] [function_1]	count=1
module	line [module] a ||| [module]	count=1
module_class	[module_1] [class_2] ||| [module_1] ssh sshagent [class_2]	count=1
module	for sending messages via ||| protocols	count=1
function	prefix with some text ||| prefix	count=1
function	the time based seed ||| time	count=1
function	[function_1] to frame ||| [function_2] [function_1]	count=2
arg	user not [arg_2] ||| [arg_1] message [arg_2]	count=1
module	create a random value ||| cred	count=1
function	start this l{clientservice}, initiating ||| start service	count=1
class	has changed since last ||| daily	count=1
arg	an l{_adaptedreporter} ||| original testadapter	count=1
function	retrieves the number ||| get number	count=1
class	[class_1] conversation ||| [class_2] [class_1]	count=12
arg	fd filtering [arg_2] ||| [arg_1] [arg_2]	count=1
class	is intended ||| name	count=1
function	a malformed [function_2] ||| [function_2] [function_1]	count=1
class	http ||| getter	count=1
arg	more python objects and ||| objects	count=1
function	from a ||| fix	count=1
arg	c{value} when c{patch} ||| value	count=1
function	for joining to c{path} ||| coerce to filesystem encoding	count=1
class	as the ||| digest	count=1
function	on set ||| get deprecated	count=1
function	internal get a ||| get	count=1
module	will ||| conch	count=1
module	them when ||| conch client	count=1
function_arg	[function_1] some sort ||| [arg_2] [function_1]	count=7
arg	if host ||| host	count=1
arg	pre-built ||| jid password	count=1
module	[module] values ||| [module]	count=1
arg	given ||| format	count=3
function	to start calling ||| start receiving	count=1
class	this is ||| dispatcher	count=1
module	a context using ||| application runner	count=1
arg	packet to address we ||| packet	count=1
class	use as the ||| digest	count=1
function	[function_1] window ||| [function_2] [function_1]	count=11
function	a direct client connection ||| dcc	count=1
function_arg	[function_1] banana-encoded string ||| [arg_2] [function_1]	count=1
function	format ||| format	count=10
function	constructs ||| service	count=1
arg	box with ||| box	count=1
function	from ||| fix	count=1
function	log prefix to ||| get log prefix	count=2
arg	from beginning of line ||| line	count=1
arg	for [arg_2] ||| [arg_2] [arg_1]	count=2
function	and puts method names ||| add method names to dict	count=1
function_arg	mapping which [arg_2] ||| [function_1] prefix [arg_2]	count=1
class	suitable ||| factory	count=1
function	request [function] ||| [function] connection	count=2
module_class	[module_1] bucket ||| [module_1] [class_2]	count=2
function	create a random value ||| generate	count=1
function	body has been completely ||| body	count=1
class	given [class_2] ||| [class_2] [class_1]	count=10
module	with a ||| python	count=1
function	on set the ||| deprecated	count=1
arg	observers this ||| observers	count=1
function	currently selected ||| fetch head	count=1
module	be delivered after the ||| web	count=1
function	parse a ||| parse	count=8
function	all child elements of ||| elements by tag	count=1
module	unique across ||| mail	count=1
module	base64-encoding the ||| conch client	count=1
function	or ||| or	count=4
function_arg	[function_1] msgs the ||| [arg_2] [function_1]	count=3
function_arg	check against [arg_2] ||| [arg_2] [function_1]	count=1
class	stop ||| transport proxy producer	count=1
class	web context factory ||| to current policy	count=1
function	l{servicemanager}, using ||| service	count=1
arg	a test [arg_2] ||| [arg_1] [arg_2]	count=1
class	for a message ||| delivery base	count=1
function	update of a ||| update	count=1
arg	the password and ||| password	count=1
class	forwarding destination ||| sshconnect forwarding channel	count=1
function	documentation string describing ||| xmlrpc method help	count=1
module	type is in ||| python	count=1
module	of all news ||| news	count=1
class	a l{igroup<interfaces ||| chat ui	count=2
module	pkey object ||| internet	count=1
class	www-authenticate challenge ||| credential factory	count=1
class	channel ||| command channel	count=1
arg	previously generated ||| uid	count=1
class	is necessary ||| assert	count=1
module	a www-authenticate ||| cred	count=1
function	the process ||| process ended	count=1
function	a connection control ||| connection control	count=2
arg	the reporter ||| testname error todo	count=1
module	this entry or ||| python	count=1
class	which this descriptor will ||| descriptor	count=1
class	an [class] ||| [class]	count=3
arg	client protocol ||| protocol	count=1
function	for iteration ||| iterate	count=1
arg	command over it ||| reactor command username	count=1
class	protocol you need ||| box protocol	count=1
class	acquire ||| filesystem	count=1
class	the underlying pkey object ||| public key	count=1
function	peer side ||| peer	count=1
function_arg	selected article [arg_2] ||| [function_1] [arg_2]	count=3
class	fixed ||| fixed	count=1
class	www-authenticate challenge ||| digest credential	count=1
arg	packet to ||| packet	count=1
arg	invoke [arg] that ||| [arg]	count=1
class	lock this method ||| filesystem lock	count=1
function	is in ||| is in known hosts	count=1
class	whether signal handlers ||| signal reactor	count=1
function	[function_1] key object ||| [function_2] [function_1]	count=3
class	to the [class] as the ||| pbserver [class]	count=1
class	file given to __init__ ||| arguments	count=1
arg	an error to ||| error	count=1
class	this task has ||| task	count=1
function	for unix ||| unix	count=1
function	[function_1] address and ||| [function_1] [function_2]	count=6
function	an error ||| cmd server error	count=1
arg	query ||| query timeout	count=1
arg	a wrapper and ||| wrapper wrapped	count=2
class	contact ||| chat ui	count=1
function	parse ||| xform	count=1
function_arg	store stor [arg_2] ||| [arg_2] [function_1]	count=1
function	exception into [function_2] ||| [function_2] [function_1]	count=1
function	backoff interval with configurable ||| backoff	count=1
function	a non-blocking socket ||| socket	count=1
function_arg	authentication method for ||| auth description	count=1
module	non-volatile state of the ||| mail	count=1
function_arg	an opaque [arg_2] ||| [arg_2] [function_1]	count=2
function	removing [function_2] ||| [function_2] [function_1]	count=1
module	iterator and pass ||| web	count=1
function	[function_1] size ||| to [function_1] [function_2]	count=1
class	name of my class ||| tuntap port	count=1
function	exhorting the user ||| get replacement	count=1
function_arg	to resume [arg_2] ||| [function_1] [arg_2]	count=2
function	amp invoke it ||| call	count=1
function	a response to a ||| response from	count=1
module	a [module] ||| [module]	count=6
arg	the reporter ||| testname fail failclass	count=1
module	return ||| internet	count=1
module	the message ||| mail	count=2
module	which is intended ||| mail	count=1
function	state [function_2] ||| [function_1] [function_2]	count=3
function	of two ||| to	count=1
function	a complete [function_2] ||| [function_1] [function_2]	count=1
function	callback ||| callback	count=1
module	only the ||| conch	count=1
function	not a request ||| ignore	count=1
function	cache [function_2] ||| to [function_1] [function_2]	count=1
function	series of human ||| human	count=1
function	the [function] address the ||| [function]	count=1
function	received header string ||| received header	count=2
arg	failed and ||| todo	count=1
class	processes reboots etc ||| maildir name generator	count=1
module	which is intended to ||| mail	count=1
class	the test is ||| test case	count=1
arg	file any ||| file	count=1
class	this lock this method ||| deferred filesystem lock	count=1
arg	c{inode} with a name ||| inode name	count=1
class	message to its ||| message	count=1
class	via ||| box	count=1
module	that the ||| conch ssh	count=1
class	possibly send the buffer ||| buffer	count=1
function	prepare the c{self extensions} ||| prepare	count=1
class	is the file ||| file	count=1
function	io completion ||| iteration	count=1
module	server gotoverview() is called ||| news	count=1
function	render method ||| render method	count=2
function	return credentials [function_2] ||| [function_1] [function_2]	count=4
function	private ||| get private	count=1
function	[function_1] timeout value ||| [function_1] [function_2]	count=1
class	select and ||| saslinitiating	count=1
class	the connection retry ||| machine	count=1
module	the top level of ||| web	count=1
arg	line of ||| line	count=4
function	exit the python interpreter ||| exit	count=1
function	[function_1] key exchange ||| [function_2] [function_1]	count=2
class	the module [class] ||| module [class]	count=2
function	length ||| length	count=4
module	for use on this ||| python	count=1
function	write some bytes ||| write	count=1
function	[function_1] message to ||| [function_1] [function_2]	count=1
module_class	[module_1] process' stdin ||| [module_1] [class_2]	count=2
class	is unconnected ||| iprotocol	count=1
arg	fd filtering [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	switch [arg_2] ||| [arg_2] [function_1]	count=1
module	instance from l{_connectedprotocol}, issue ||| names	count=1
function	add the ||| add	count=2
class	this is called when ||| receiver	count=1
function_arg	[function_1] or examine ||| [arg_2] [function_1]	count=4
function	group from ||| group	count=1
class	underlying pkey ||| key	count=1
function	a deprecated api ||| replacement string	count=1
class	we ||| sshclient transport	count=1
class	with ||| dict	count=1
function	private ||| string private blob	count=2
arg	if there's anything left ||| name qname	count=1
class	is ||| maildir name generator	count=1
function_arg	[function_1] [arg_2] ||| [function_1] from handle [arg_2]	count=2
module	in the ||| protocols	count=1
function	unregister the ||| unregister	count=1
arg	used by tlsbox to ||| verifyauthorities	count=1
function	body data is available ||| body data	count=1
class	lock ||| lock	count=2
function	number ||| number	count=3
arg	query to ||| query servers	count=1
function	their own handler methods ||| handlers	count=1
module_class	to [module_1] [class_2] decoder object ||| [module_1] [class_2] raw	count=1
arg	xmlstream l{xmlstream xmlstream} ||| xmlstream stanzatype	count=1
function_arg	leave a [arg_2] ||| [arg_2] [function_1]	count=1
function	set whether this ||| set	count=3
class	create a random value ||| digest	count=1
function	endpoint from an ||| from	count=1
arg	a client protocol to ||| protocol maxpacketsize	count=1
function	login [function_2] ||| [function_1] [function_2]	count=1
function	connect the transport ||| connect	count=1
function_arg	an error [arg_2] ||| [function_1] [arg_2]	count=1
module	this pidfile ||| application runner	count=1
arg	a non-filled-out cached instance ||| cid instance	count=1
function	[function_1] all ||| [function_2] [function_1]	count=8
arg	c{value} when c{patch} ||| name value	count=1
arg	group for the ||| group	count=1
arg	remote root object ||| root client	count=1
function_arg	add [arg_2] ||| [function_1] callbacks callback errback [arg_2]	count=2
function	l{ipv4address} ||| get	count=1
arg	attributes ||| attrs	count=1
arg	[arg] other users ||| [arg] recipient	count=1
module	working directory and ||| scripts	count=1
class	reboots ||| maildir name generator	count=1
function	discard the reactor started ||| reactor	count=1
module	for ||| python	count=1
function	a msg_kex_dh_gex_init message ||| ssh kex dh gex init	count=1
function	when ||| eb	count=1
module_class	[module_1] [class_2] a pair c{ root ||| [module_1] [class_2]	count=2
arg	of a logical url ||| logicalurl physicalurl	count=1
module	etc ||| mail	count=1
function	a datagram ||| datagram	count=1
class	observer method called whenever ||| log observer	count=1
function	waiting state during which ||| state waiting	count=1
class	coerce ||| coerce parameter	count=1
function	object for ||| object for	count=2
function	override the normal prefix ||| log prefix	count=1
class	the wrapped web context ||| policy	count=1
function	number of tests in ||| count	count=1
function	channel ||| eb channel	count=1
module_class	[module_1] conversation and ||| [module_1] igroup [class_2]	count=1
function_arg	the same [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] c{failure} ||| [arg_2] [function_1]	count=3
function	stop listening on the ||| stop	count=1
class	this ||| maildir	count=1
function	public or private lsh ||| to string lsh	count=1
function	binding instance ||| binding	count=1
function	interfaces that can be ||| interfaces	count=1
class	the key matches the ||| sshpublic key database	count=1
function	store this header ||| header received	count=1
function	for [function_2] ||| [function_1] [function_2]	count=4
function	log ||| log	count=24
arg	data on ||| data	count=1
class	for ||| digest credential	count=1
function	boolean and of ||| boolean and	count=1
function	for removing [function_2] ||| [function_1] [function_2]	count=1
module_class	[module_1] underlying producer ||| [module_1] [class_2]	count=3
class	message ||| append message	count=1
function	[function_1] data is ||| [function_2] [function_1]	count=4
function	a pre-built ||| build service manager	count=1
class	publisher i'll now reply ||| resource subscription	count=1
function	version information ||| opt version	count=1
module_class	[module_1] reactor should ||| [module_1] threaded select [class_2]	count=1
function	to consider it as ||| replacement	count=1
function	return an iterator of ||| get	count=1
function	two ||| to	count=1
arg	when failed to connect ||| reason	count=1
function	internally ||| request done	count=1
class	number of [class] passed ||| [class]	count=1
function_arg	item [function_1] [arg_2] this should be a ||| [function_1] [arg_2]	count=4
function	decimal degrees ||| decimal degrees	count=2
function	of line [function_2] ||| [function_2] [function_1]	count=2
module	if [module] ||| [module]	count=3
function	when a connection to ||| connection	count=1
function	[function] so ||| [function]	count=1
function	gets ||| getattr	count=1
class	arrange for ||| resolver	count=1
class	l{iprotocol datareceived} [class_2] ||| [class_1] [class_2]	count=1
function	bad [function_2] ||| [function_2] [function_1]	count=3
class	[class_1] factory ||| [class_2] [class_1]	count=1
function	a failure [function] ||| info or failure [function] exc	count=1
class	host ||| host	count=2
function	given header ||| header	count=2
class	changed since ||| daily log file	count=1
arg	[arg_1] optional message ||| [arg_1] [arg_2]	count=2
function	recommended subscription ||| subscription	count=1
arg	l{httpclientparser} to indicate that ||| rest	count=1
function	a deprecated api with ||| get	count=1
class	next ||| call	count=1
function_arg	a chat [arg_2] ||| [arg_2] [function_1]	count=3
class	called when a transport ||| abstract datagram protocol	count=1
module	the date has ||| python	count=1
class	other side wants ||| sshconnection	count=1
module	handlers ||| protocols jabber	count=1
class	all necessary ||| publishable	count=1
function	early termination of ||| abort	count=1
module_class	[module_1] [class_2] ||| [module_1] httpconnection [class_2]	count=4
function_arg	[function_1] given response ||| [arg_2] [function_1]	count=1
function_arg	[function_1] previously generated ||| [function_1] session [arg_2]	count=1
function	this l{command}'s response ||| response	count=1
function	drives ||| producing	count=1
arg	indication of ||| host serv_name username	count=1
function	function signature of c{obj}'s [function_1] [function_2] should be displayed ||| [function_1] [function_2]	count=4
function	with the given protocol ||| init	count=1
class	the date ||| daily log	count=1
module	to this ||| python	count=3
function	start the ||| start	count=4
function_arg	[function_1] bytes ||| [arg_2] [function_1]	count=4
class	calls to this function ||| maildir name generator	count=1
class	[class_1] service ||| [class_1] [class_2]	count=3
class	this [class_2] ||| [class_2] [class_1]	count=18
module_class	[module_1] http/2 ||| [module_1] [class_2]	count=8
function_arg	[function_1] [arg_2] the specified c{nodeid} as ||| [function_1] [arg_2] nodeid	count=3
class	a ||| credential	count=2
class	an ipv6 address ||| a6	count=1
function	this private ||| private	count=1
module	this instance but with ||| python	count=1
function	processor ||| processor	count=1
function	session cookie and if ||| session	count=1
class	and ||| initializer	count=1
function	a given stream ||| stream	count=1
arg	given numeric ||| interface	count=1
class	moduledict ||| python	count=1
function	stop listening ||| stop	count=1
function	sending messages via ||| call remote	count=1
function	a copy ||| copy	count=2
arg	c{value} when c{patch} is ||| name value	count=1
class	next ||| looping	count=1
class	of the suite ||| suite	count=1
arg	address the address ||| address message	count=1
function	the type ||| type	count=2
arg	set of observers ||| observers discardbuffer	count=1
function	child elements ||| elements by tag name	count=1
arg	some amp data stored ||| fileobj	count=1
class	database [class] ||| [class]	count=1
function	option @type [function] c{str} ||| [function]	count=1
module	called when the ||| words	count=1
arg	of data and attempt ||| data	count=2
arg	header based on the [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
function	api with some ||| get replacement	count=1
module	using ||| words	count=1
arg	serv_type an [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function] an object ||| [function]	count=2
function	a list of ||| get	count=1
function_arg	set [arg_2] ||| [function_1] messages [arg_2]	count=4
function	a query to it ||| query	count=1
function	msg_kexinit ||| kexinit	count=1
function	[function_1] control ||| [function_1] [function_2]	count=10
function	monitored for input ||| readers	count=1
function_arg	send a datagram ||| send udp datagram	count=2
class	dictionary ||| dict	count=1
module_class	[module_1] [class_2] ||| [module_1] rfc822message [class_2]	count=3
function	alternative ||| get	count=1
arg	an 'in' ||| name	count=1
function_arg	xml document [arg_2] ||| [arg_2] [function_1]	count=3
class	of l{iprotocol datareceived} ||| generic httpchannel	count=1
arg	sections which have been ||| alwaysshow flagnames fieldnames	count=1
class	this domain or ||| maildir domain	count=1
arg	[arg_1] messages ||| [arg_2] [arg_1]	count=26
function	[function_1] deprecated to ||| [function_2] [function_1]	count=6
function	with l{getpage} and l{downloadpage} ||| get page classes	count=1
arg	user the hostmask ||| user	count=1
module	this function ||| mail	count=1
arg	the credentials we ||| credentials	count=1
function	[function_1] conditions ||| [function_2] [function_1]	count=1
arg	of c{inode} with ||| inode	count=1
function_arg	decoded from [arg_2] ||| [arg_2] [function_1]	count=1
function	object it ||| deprecated	count=1
function	be ||| notify	count=1
class	to this function ||| name generator	count=1
arg	to c{message} ||| responseconstructor message	count=1
function	collect received ||| received	count=1
module	of ||| trial	count=2
function	and its ||| collect	count=1
function	ctcp ||| ctcp make	count=1
function	handle a reply ||| reply	count=1
function	[function_1] global ||| [function_1] [function_2]	count=1
module	the data ||| conch	count=2
function_arg	[function_1] domain to ||| [arg_2] [function_1]	count=1
function	returns a list of ||| get	count=1
arg	[arg] reason ||| [arg] user	count=1
function_arg	encode [arg_2] ||| [arg_2] [function_1]	count=2
function	and ignore the failure ||| ignore and	count=1
arg	domain from [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	several different messages depending [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	display ||| display	count=3
module_class	of this [class_2] ||| [module_1] ifile [class_2]	count=1
class	for a message ||| domain delivery base	count=1
module	with this ||| names	count=1
module_class	[module_1] running agent ||| [module_1] [class_2]	count=8
class	the ||| tree reporter	count=2
function	c{commandconnected} deferred [function] indicating ||| exec [function]	count=1
function	consider it ||| get replacement	count=1
module	and arrange for ||| names	count=1
function	pythonmodule pythonattribute ||| name	count=1
function	an opaque to be ||| opaque	count=1
function	name repr ||| repr	count=1
function	return first filename ||| get filename	count=3
class	this dictionary ||| domain with default dict	count=1
arg	reactor the reactor to ||| reactor pidfile kill defaultloglevel	count=1
function	return ||| get path	count=1
function	[function_1] child process ||| [function_1] [function_2]	count=1
function	a channel ||| lookup channel	count=1
module	[module_1] private key ||| [module_1] [module_2]	count=2
module	an instance of ||| trial	count=1
module	message added to this ||| mail	count=1
function_arg	certificate [arg_2] ||| [arg_2] [function_1]	count=1
function	call remote ||| call remote	count=2
class	a ||| ipidfile	count=1
arg	[arg_1] [arg_2] ||| cls [arg_1] [arg_2]	count=8
function	object from a stream ||| from stream	count=1
arg	server [arg_2] ||| [arg_1] client [arg_2]	count=1
module	is msg_userauth_passwd_changereq the ||| conch	count=1
module	immediately logged and the ||| internet	count=1
module_class	[module_1] reactor ||| [module_1] threaded select [class_2]	count=1
function	ignore the failure ||| ignore	count=1
arg	called ||| reason	count=1
arg	request but ||| request	count=1
module	was given to ||| internet	count=1
function	messages ||| remote	count=1
function	[function_1] success ||| [function_2] [function_1]	count=4
function_arg	string key [arg_2] ||| [function_1] [arg_2]	count=1
function	set [function_2] ||| [function_1] [function_2]	count=1
function	if any of the ||| get deprecated	count=1
function	of disconnect ||| disconnect	count=1
class	that ||| itelnet transport	count=2
function	all name entity pairs ||| entities	count=1
function	progress ||| trying	count=1
arg	as [arg] for ||| transport [arg]	count=1
function	being deprecated ||| deprecated module	count=1
class	of the test ||| synchronous test	count=1
function	event ||| event	count=3
arg	[arg_1] addresses ||| [arg_1] [arg_2]	count=7
function_arg	decode the [arg_2] ||| [arg_2] [function_1]	count=3
class	the unit ||| decorator	count=1
class	response to ||| httpclient	count=1
module	using ||| words protocols	count=1
arg	of the given ||| name value	count=1
function	[function] to ||| raw data [function]	count=1
arg	constructs a ||| jid password	count=1
class	all processes ||| name generator	count=1
arg	domain ||| domain	count=4
class	the application on unix ||| unix application	count=1
arg	[arg] using the ||| [arg]	count=1
module	closed the channel ||| conch	count=1
module	init to set the ||| internet	count=1
module	constructs a pre-built l{servicemanager}, ||| protocols jabber	count=1
function	object into a string ||| to string	count=1
function	request the overview format ||| fetch overview	count=1
module	select and ||| jabber	count=1
arg	l{localworkeramp} ||| worker result testcases cooperate	count=1
class	domain name ||| domain	count=1
function	authorities into a trust ||| trust	count=1
function	handle the ||| handle	count=1
function	a data [function_2] ||| [function_2] [function_1]	count=3
function	a function ||| unpickle function	count=1
function	[function_1] a string ||| [function_2] [function_1]	count=2
function	start the [function_2] ||| [function_2] [function_1]	count=1
function	calculate boolean ||| boolean	count=2
function_arg	send response [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] by importing ||| [arg_2] [function_1]	count=4
module	value suitable ||| cred	count=1
function	default ||| default log	count=1
arg	[arg_1] host name ||| value [arg_1] [arg_2]	count=1
function	[function_1] plugin to ||| [function_1] [function_2]	count=1
class	@return true [class_2] ||| [class_2] [class_1]	count=2
function	retrieve [function_2] ||| [function_1] access [function_2]	count=1
class	messages via ||| box	count=1
arg	@param [arg] ||| reactor [arg]	count=3
function_arg	[function_1] list s-expression ||| [arg_2] [function_1]	count=1
module	a context using this ||| application	count=1
arg	data [arg_1] [arg_2] ||| data [arg_1] [arg_2] data	count=1
function_arg	[function_1] server challenge ||| [arg_2] [function_1]	count=3
module	wire [module] saving flags ||| [module]	count=1
function	5 standard format for ||| for	count=1
arg	element ||| request element	count=1
function	print a traceback ||| print detailed traceback	count=2
arg	with the given queries ||| queries timeout	count=1
function_arg	[function_1] returned to ||| [function_1] [arg_2]	count=3
function	a child with ||| child with	count=2
function	for joining to c{path} ||| to	count=1
function	get an endpoint ||| get endpoint	count=1
function	c{args} and c{kwargs} raises ||| raises	count=1
function	http password sent with ||| password	count=1
function	[function_1] and returns ||| [function_1] [function_2]	count=2
function	password sent with ||| password	count=2
function	[function_1] success to ||| [function_1] [function_2]	count=2
class	to this function ||| maildir name	count=1
class	stop the hostname resolution ||| resolution	count=1
function	marked todo checks on ||| todo	count=1
arg	period of time ||| delay	count=1
function	bytes received either ||| data received	count=1
arg	the euid and ||| euid	count=1
function	from ||| from path	count=2
function	msg_userauth_success the server has ||| ssh userauth success	count=1
function_arg	return [arg_2] ||| [arg_2] [function_1]	count=2
function	one search term ||| single search step	count=1
function	[function_1] is made ||| [function_1] [function_2]	count=4
arg	to c{message} ||| message rcode answers authority	count=1
function_arg	[function_1] err is ||| [function_1] [arg_2]	count=2
function	[function_1] sequence of ||| [function_1] [function_2]	count=1
arg	if the error is ||| test error	count=1
class	checker ||| sshprotocol checker	count=1
class	destination address ||| address alias	count=2
function	[function_1] resolver instance ||| [function_2] [function_1]	count=1
function	format a list ||| format	count=4
function	to a ||| from	count=1
arg	first shut it ||| reason	count=1
function	trust [function] root ||| [function]	count=1
class	all calls ||| maildir name	count=1
function	listen ||| listen	count=1
function	abort [function_2] ||| [function_1] [function_2]	count=1
arg	bytes to the receive ||| bytes	count=1
class	an ipv6 address ||| record a6	count=1
function	control header ||| control header	count=2
module	path to ||| conch	count=2
function	the auth ||| auth	count=1
module_class	for this file ||| python ifile path	count=1
module	whether the ||| mail	count=1
function	c{dict} that maps each ||| make excludes dict	count=1
arg	name to newnick ||| newnick	count=1
class	construct a l{fixedoffsettimezone} ||| time zone	count=2
module_class	[module_1] scheduled call ||| [module_1] [class_2]	count=4
arg	encrypted communication ||| contextfactory	count=1
class	message as it is ||| message task	count=1
function	checkers for ||| checkers	count=1
function	particular authentication [function_2] ||| [function_1] [function_2]	count=1
function	number of ||| number of	count=1
function	extension to ignore ||| ignore	count=1
class	amp ||| amp	count=1
arg	== ||| groupid	count=1
function	which local class ||| class	count=1
function	chunk from [function] ||| [function]	count=1
function	to deliver ||| deliver body initial	count=1
function	as child ||| element	count=1
function	will not ||| will	count=1
function	compute a hash ||| key hash	count=1
module_class	[module_1] next ||| [module_1] [class_2]	count=2
function	should be logged based ||| should log	count=1
arg	code and description ||| errorcode description fatal local	count=1
class	for a maildir mailbox ||| maildir mailbox	count=1
function	return a string representation ||| str	count=1
class	file [class_2] ||| [class_1] [class_2] splitext	count=1
function	trial [function] class ||| [function]	count=1
function	name [function_2] ||| [function_2] [function_1]	count=2
arg	files ||| files remotepath single	count=1
function	default appropriate ||| default log	count=1
function	[function] wx event ||| [function]	count=1
class	[class] and issue ||| deprecated [class]	count=1
function	opaque to ||| opaque	count=1
function	bases and puts method ||| method	count=1
module	initiated by the peer ||| conch	count=1
function	convert an ||| strings to	count=1
function	in ||| end line	count=2
module	drawing on the ||| conch	count=1
function	a chunk ||| handle content chunk	count=1
class	the ||| base feature	count=1
module	of [module] c{testsuiteorcase} ||| [module]	count=1
arg	or more [arg_2] ||| [arg_2] [arg_1]	count=3
arg	by c{blob} ||| blob data	count=1
function	[function_1] proxy ||| [function_2] [function_1]	count=1
function	the connection by ||| connection	count=1
function	post an ||| post	count=1
function	spwd ||| shadow get by	count=1
function	the article ||| article	count=1
function	@param suffix ||| init	count=1
class	error for server responses ||| pop3client	count=1
function_arg	class [arg_2] ||| [arg_2] [function_1]	count=6
function	[function_1] size ||| [function_1] [function_2]	count=3
class	if the test is ||| test	count=1
arg	creator an l{_isshconnectioncreator} ||| creator	count=1
class	method may ||| iwrite	count=1
module	[module] l{threadpool} ||| [module]	count=3
class	is ||| protocol	count=1
function	a malformed ||| authmalformed	count=1
function	method test ||| test	count=1
function	consumes the payload portion ||| consume payload	count=1
function_arg	directory for [arg_2] ||| [function_1] [arg_2]	count=1
class	this formatting [class_2] ||| [class_2] [class_1]	count=3
function	set the attributes for ||| set attributes	count=1
class	has ||| log	count=1
module	to ||| protocols	count=14
arg	the given transport ||| class transport	count=1
function	i get a message ||| message	count=1
function	generate the challenge for ||| challenge	count=1
arg	given sender ||| sender text metadata	count=1
module	and moduledict ||| python	count=1
function	parse a string ||| string	count=1
function	tokenize and colorize ||| last colorized line	count=1
class	of ||| credential	count=1
module_class	time the reactor ||| internet reactor	count=1
function	an offset and ||| offset and	count=1
class	message as ||| maildir mailbox append message task	count=1
module	the message authentication ||| conch	count=1
function_arg	[function_1] returned ||| [arg_2] [function_1]	count=3
arg	l{bytes} or l{unicode} ||| ttl	count=3
function	run ||| run process	count=2
class	underlying [class] unless ||| length enforcing [class]	count=1
function	given header ||| header received	count=1
module_class	[module_1] cgi ||| [module_1] [class_2]	count=2
function	carry ||| opt group	count=1
function	an openssl cipher string ||| open sslcipher string	count=1
function	has disabled this ||| disable remote	count=1
arg	message ||| message length	count=2
class	the given log ||| log	count=1
class	before c{teardown} ||| synchronous	count=1
function	with level ||| level	count=1
module_class	[module_1] [class_2] away ||| [module_1] [class_2] force abort client	count=3
function	text ||| get	count=1
function	available personal namespaces ||| get personal namespaces	count=2
arg	get the password the ||| password	count=1
module	[module] rate information ||| words [module]	count=3
arg	l{message} ||| message	count=1
arg	rmailbx [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] into ||| [function_1] unicode [arg_2]	count=1
class	web context ||| to current policy	count=1
class	component ||| component	count=1
function	retrieve the flags for ||| flags	count=1
function	new message ||| new message	count=2
arg	send a message ||| message length	count=2
function	find the [function_2] ||| [function_2] [function_1]	count=9
function	all [function] are emitted ||| collect [function]	count=1
function	pre-built l{servicemanager}, using ||| build	count=1
arg	[arg_1] over it ||| [arg_2] [arg_1]	count=4
function	a clientside [function_2] ||| [function_2] [function_1]	count=2
module	pythonmodule ||| trial	count=1
class	of a www-authenticate ||| credential	count=1
module	a total number of ||| python	count=1
function	from the server ||| fetch	count=1
function	and return first ||| get	count=1
module	the url for which ||| web	count=1
class	message ||| multipart message	count=1
class	a protocol ||| protocol	count=2
class	create ||| connection creator	count=2
arg	message from the relay ||| relay message	count=1
function_arg	l{bytes} @param [arg_2] ||| [arg_2] [function_1]	count=4
function	the write [function_2] ||| [function_1] [function_2]	count=1
module_class	[module_1] component ||| [module_1] [class_2]	count=1
arg	declare a ||| modulename name	count=1
module	representing this action which ||| python	count=1
arg	a start [arg_2] ||| [arg_1] [arg_2]	count=3
function	in [function] fire ||| open [function]	count=1
function	authentication ||| set	count=1
function	the deferred to indicate ||| fail	count=1
module	a pb [module] in ||| [module]	count=1
arg	1 ||| numok	count=1
function	reading writing or was ||| write or	count=1
class	this [class] matches ||| [class]	count=1
class	for this task retrieving ||| cooperative task	count=1
module	and the object ||| python	count=1
arg	flags of [arg_2] ||| [arg_2] [arg_1]	count=1
arg	value constants the ||| cls level	count=1
function_arg	[function_1] [arg_2] ||| [function_1] stdin [arg_2]	count=3
function	close ||| connection lost	count=2
arg	format ||| format	count=1
function	of the named plugin ||| plugin	count=1
module_class	[module_1] structure ||| [module_1] rfc822message [class_2]	count=3
function	namespace [function_2] ||| [function_1] [function_2]	count=5
module_class	the [class_2] ||| [module_1] ssh [class_2]	count=1
module_class	[module_1] given file ||| [module_1] [class_2]	count=1
function	of human ||| human	count=1
function	all methods that ||| accumulate methods	count=2
function	a thread from ||| defer to thread	count=1
function	print 'message' in ||| end	count=1
class	writer ||| iterator	count=1
function	put ||| put child	count=1
function	received ||| data received	count=2
class	the ||| base feature initiating initializer	count=1
class	user ||| user	count=3
arg	when a fd is ||| selectable fd event	count=1
module	a particular positioning ||| positioning	count=1
module_class	[module_1] formatting ||| [module_1] [class_2]	count=16
class	boxes from this protocol ||| protocol	count=1
arg	nonce from ||| nonce	count=1
function	it resets [function_2] ||| [function_2] [function_1]	count=3
module	print ||| scripts	count=1
function	single callable as both ||| both	count=1
function_arg	put a [arg_2] ||| [function_1] path [arg_2]	count=1
class	factory was ||| basic credential factory	count=1
arg	period of time has ||| delay	count=1
function	return an l{ipv4address} or ||| get	count=1
function	return a l{key} from ||| get	count=1
function	joining to c{path} ||| coerce to filesystem encoding	count=1
function	available personal [function_2] ||| [function_2] [function_1]	count=1
arg	a c{failure} with ||| errorclass frames	count=1
function	string formatting for sequence ||| string	count=1
arg	[arg] with the ||| [arg] nodeid	count=1
function	cookie that was sent ||| cookie	count=1
class	error translation objects ||| error	count=1
arg	domain to ||| reactor service domain factory	count=1
module	request to the ||| conch ssh	count=1
function	as a string ||| get	count=1
function	of a single test ||| stop test	count=1
class	for sending ||| dispatcher	count=1
function	[function] to ||| [function]	count=13
module	this method is ||| spread	count=2
arg	hashes using the ||| outkey iniv inkey	count=1
function	or was ||| or	count=1
function	lose the ||| lose	count=1
class	we are connected to ||| iunixdatagram connected	count=1
function	channel of ||| lookup channel	count=1
module	subclass this ||| python	count=1
function	the elements which are ||| elements	count=1
function	[function_1] a new ||| [function_1] [function_2]	count=1
module	chain if the ||| conch	count=1
arg	reload a module and ||| module dolog	count=1
module	l{ipv4address} ||| internet	count=1
function	the hashed ||| hash	count=1
function_arg	[function_1] a user ||| [function_1] [arg_2]	count=3
arg	checks ||| pubkey	count=1
module	the trial ||| trial _dist	count=1
class	reschedule this call for ||| call	count=1
class	port ||| ilistening port	count=1
function	the above mapping adding ||| mapping	count=1
function	[function_1] [function_2] on ||| wsgiresponse send [function_1] [function_2]	count=4
function	observe ||| observe	count=1
function	xml ||| xml	count=2
arg	broker and ||| broker	count=1
module	from ||| news	count=1
function_arg	function [arg_2] ||| [arg_2] [function_1]	count=2
function	c{commandconnected} deferred [function] ||| exec [function]	count=1
module	pointing at a ||| python	count=1
arg	incrementally write ||| write	count=1
arg	defined render_foo ||| resource	count=1
function	a new l{privatecertificate} ||| new	count=1
function_arg	envelope for [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] snac ||| [function_1] [function_2]	count=1
function	[function_1] message ||| [function_2] [function_1]	count=10
function	a deprecated ||| replacement	count=1
module	the c{nodename}, ||| web	count=1
function	us to a chat ||| chat invite	count=1
module	gotoverview() ||| news	count=1
function	list of supported ||| supported	count=1
function	[function_1] expiration tracking ||| [function_2] [function_1]	count=1
function	string one of ||| string	count=1
function_arg	[function_1] for operating ||| [arg_2] [function_1]	count=3
function	suppress ||| suppress	count=1
function	user-space send ||| send	count=2
function	[function_1] change ||| [function_1] [function_2]	count=1
class	the message to ||| message	count=1
function	a ||| cancel get	count=1
function	for sending messages via ||| call remote	count=1
function	getattr method ||| getattr	count=1
class	a random ||| credential	count=1
arg	change the ||| chan set	count=1
module	to [module] ||| [module]	count=20
function	body has been ||| body data received finished	count=1
function	[function_1] likely uid ||| [function_2] [function_1]	count=1
module	return the values of [module_1] [module_2] ||| [module_1] [module_2]	count=2
class	to ||| maildir name generator	count=2
arg	application bytes ||| bytes	count=2
function	write it to the ||| write	count=1
function	bar ||| bar	count=1
function	a cookie that was ||| cookie	count=1
module	though [module] rfc ||| [module]	count=1
class	the speed ||| speed	count=1
class	address [class] address ||| [class]	count=1
class	partial visible satellite information ||| nmeaadapter	count=1
module_class	the [class_2] ||| [module_1] client [class_2] prompt	count=1
arg	[arg_1] module and ||| [arg_2] [arg_1]	count=2
arg	the filename ||| filename	count=2
arg	an argument name ||| name	count=1
module	value of [module] attribute ||| [module]	count=1
module	map this ||| mail	count=1
module	string ||| words protocols	count=1
arg	reload a module ||| module dolog	count=3
module	object corresponding [module] ||| [module]	count=1
function	determine whether a function ||| function	count=1
function	throw the original exception ||| throw exception	count=1
arg	to look up and ||| portonserver portonclient	count=1
module	with the ||| conch	count=1
class	connect ||| client creator	count=1
arg	unjelly an sexp ||| sexp	count=1
function	available the number of ||| with count	count=1
arg	a message to user ||| user message	count=1
class	and moduledict in ||| path	count=1
function	convert to ||| to message	count=1
arg	beginning of c{query} possibly ||| msg lastsequenceid	count=1
class	this test if ||| test	count=1
arg	an offered file ||| user file port resumepos	count=1
module_class	the [class_2] ||| [module_1] [class_2]	count=392
function	shell [function_2] ||| [function_1] [function_2]	count=2
function	to the default appropriate ||| default	count=1
function	[function_1] also ||| [function_2] [function_1]	count=3
module	[module] been ||| [module]	count=1
function	server address ||| server address	count=2
module_class	[module_1] pool ||| [module_1] [class_2]	count=5
function	ptr ||| pointer	count=1
function	c{other} if the ||| is equal	count=1
function	a new user ||| user	count=2
class	for use as ||| digest credential factory	count=1
function_arg	of headers [arg_2] ||| raw [function_1] [arg_2]	count=2
function_arg	[function_1] fd with ||| [arg_2] [function_1]	count=1
class	create ||| insensitive dict	count=1
function	a request is ||| request	count=1
module_class	[module_1] factory for ||| [module_1] [class_2]	count=2
function	which share an ||| kex dh gex group	count=1
class	get a new ||| resolver	count=1
class	maildir ||| abstract maildir domain	count=3
module	whenever the first line ||| web	count=1
arg	system in _shellcomp ||| optname shelltype	count=1
arg	query to ||| query servers timeout	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] ssh channel [function_arg_2]	count=2
function	global ||| maybe global	count=1
function	[function_1] message to ||| [function_2] [function_1]	count=2
function	set up ||| setup	count=1
function	a global ||| global	count=1
function	been received to complete ||| complete	count=1
class	of all domain names ||| domain with	count=1
function	client [function_2] ||| [function_1] [function_2]	count=2
function	sigterm ||| term	count=1
function	failure responses to match ||| match	count=1
function	with the ||| init	count=1
function	state of the relay ||| state	count=1
function	default [function_2] ||| [function_1] [function_2]	count=6
function	resolve an ipv6 literal ||| resolve	count=1
function	single test ||| stop test	count=2
class	that was provided ||| invalid address error	count=1
arg	the filesystem ||| fn	count=1
arg	argument name and an ||| name	count=1
function	failed and ||| failure	count=1
class	[class] number ||| [class]	count=3
function	for sending messages via ||| call	count=1
function	producer for standard ||| producer	count=1
function	to read some ||| read	count=1
class	l{maildirmailbox} ||| append message task	count=1
arg	@type position l{tuple} ||| terminal position dimension	count=1
module_class	[module_1] [class_2] ||| [module_1] connect [class_2]	count=4
function	[function_1] resolver instance ||| [function_1] [function_2]	count=1
function	return an l{imessagedelivery} ||| get message delivery	count=1
function	[function_1] article with ||| [function_1] [function_2]	count=3
class	attempt ||| client machine	count=1
module	message to the ||| conch	count=1
function	deprecated api with ||| get replacement	count=1
module	messages on the ||| mail	count=1
function	i{quit} ||| quit	count=1
module	used to get the ||| conch	count=1
function	the number of calls ||| count	count=1
function	c{connectionready} ||| service started	count=1
function	[function_1] an l{iresponse} ||| [function_2] [function_1]	count=6
module	local port ||| scripts	count=1
function	connection was [function_2] ||| [function_1] [function_2]	count=1
class	called when l{httpchannel} ||| ideprecated httpchannel to request	count=1
function	the user to consider ||| replacement string	count=1
class	file from ||| file	count=1
function	expressed by ||| waiters	count=1
module_class	[module_1] [class_2] ||| [module_1] traffic logging [class_2]	count=1
function	group if this ||| group	count=1
function	list ||| get deprecated	count=1
function	[function_1] frozenset using ||| [function_1] [function_2]	count=1
function_arg	registration info [arg_2] ||| [arg_2] [function_1]	count=1
module	sent us the ||| conch ssh	count=2
arg	or more python objects ||| objects	count=1
arg	by first request ||| request	count=1
module	to the other ||| conch ssh	count=5
function	[function_1] handler for ||| [function_2] [function_1]	count=1
class	the group conversation ||| group conversation	count=4
class	of c{key} by ||| mem cache	count=2
arg	[arg] is allowed ||| [arg]	count=3
class	this service ||| service	count=1
function_arg	switching [arg_2] ||| [arg_2] [function_1]	count=1
arg	a hostname resolution ||| hostname	count=1
function	an l{iprocesstransport} ||| force stop	count=1
arg	of data and ||| data	count=2
class	we will stop ||| transport	count=1
function	on set ||| get	count=1
function	the source code surrounding ||| source	count=1
function_arg	[function_1] jellier ||| [arg_2] [function_1]	count=1
function	find the ||| maybe find	count=1
function	exception [function_2] ||| [function_2] [function_1]	count=4
module	a pre-built ||| words	count=1
module	line this ||| web	count=1
module	www-authenticate challenge ||| cred	count=1
class	monitor ||| monitoring service	count=1
function	initialize with a ||| init	count=2
function	the connection ||| connection made	count=1
function	degrees this value ||| degrees	count=1
function	to resume an ||| resume	count=1
function_arg	prefix [arg_2] ||| [arg_2] [function_1]	count=5
function	will start ||| start receiving	count=1
arg	given instance ||| instance methodname	count=1
function	msg_kexinit ||| ssh kexinit	count=1
function	[function_1] code representing ||| [function_2] [function_1]	count=4
function	a dcc resume ||| dcc resume	count=2
function_arg	[function_1] connection ||| [arg_2] [function_1]	count=1
module	the object it ||| python	count=1
function	the trigger ||| trigger base	count=1
class	a log [class_2] ||| [class_2] [class_1]	count=1
function_arg	rich equality [arg_2] ||| [function_1] [arg_2]	count=1
function	the global [function_2] ||| [function_2] [function_1]	count=4
module_class	this port ||| internet port	count=1
function	create a ||| init	count=21
class	this service ||| words realm	count=2
class	to the destination address ||| address alias	count=1
function	[function_1] with ||| [function_2] [function_1]	count=7
class	server ||| pop3client	count=2
function	send an ||| send	count=5
module	jabber id that ||| protocols jabber	count=1
function	leave ||| leave	count=1
module_class	for the l{tcp6serverendpoint} ||| internet tcp6server	count=1
function_arg	success [arg_2] ||| [arg_2] [function_1]	count=1
function	returns the file number ||| fileno	count=1
class	new protocol you ||| protocol	count=1
function	to a partial xml ||| xml	count=1
module	the content ||| protocols	count=1
arg	name of this ||| name	count=1
class	and selected ||| imap4client	count=5
function_arg	@param creator ||| init creator command	count=1
module	is the ||| conch ssh	count=2
class	any of them ||| janitor	count=1
class	l{methodname} method ||| method	count=1
function	text exhorting ||| string	count=1
function	canceled ||| cancel	count=1
module	the output of an ||| mail	count=1
class	[class_1] this dictionary ||| [class_1] with [class_2]	count=1
function_arg	[function_1] [arg_2] to ||| [function_1] datetime [arg_2]	count=1
function	endpoint factory to ||| endpoint factory	count=2
function_arg	connected to [arg_2] ||| [function_1] [arg_2]	count=3
function	quote an iterable of ||| quote arguments	count=1
arg	callback and an ||| callback	count=1
function	windows error ||| error	count=1
class	every time ||| iprotocol factory	count=1
function	from ||| out received	count=1
class	i've ||| resource subscription	count=1
class	attribute of this sentence ||| base sentence	count=1
class	unconnected ||| iprotocol	count=1
arg	or a channel ||| channel message	count=2
arg	unique ||| uid reactor	count=1
function	a reply to ||| reply	count=1
function	the disposition and a ||| disposition	count=1
class	skip the next ||| looping	count=1
arg	[arg_1] see ||| [arg_2] [arg_1]	count=2
function	an object ||| object	count=1
module_class	this l{filepath} ||| python file	count=1
arg	group ||| group low high header	count=1
function	begin [function_2] ||| [function_2] [function_1]	count=3
class	create a random ||| digest	count=1
function	authorized to ||| authorized	count=1
function	giving a server address ||| server address	count=1
arg	readers [arg_2] ||| [arg_1] [arg_2]	count=3
function	parsed a complete response ||| finish response	count=1
function	process ||| process	count=9
module	a twisted deprecation ||| python	count=1
arg	flags ||| flags mode	count=1
function	initializes a ||| init	count=2
function	create a ziparchive treating ||| init	count=1
function	failed attempts ||| failed attempts	count=2
function	callback ||| on disconnect	count=1
function	other side has closed ||| close	count=1
arg	the exit status ||| signal status	count=1
function	create a new mailbox ||| create	count=1
function	if the key ||| verify key	count=1
module	when we get the ||| protocols	count=1
arg	@param credentials [arg_2] ||| [arg_2] [arg_1]	count=3
function	testcase ||| name	count=2
function	a ecdh exchange ||| kex ecdh	count=2
module	to compare me to ||| spread	count=1
arg	access [arg] is allowed ||| [arg]	count=1
class	file and create a ||| daily log file	count=1
function	the global reactor if ||| global reactor	count=1
function_arg	address [arg_2] ||| [function_1] domainurl [arg_2]	count=1
function	body ||| body data received deferred close	count=1
function	return destination ||| get destination	count=2
class	the value of c{key} ||| mem cache	count=2
function	representation of the ||| repr	count=1
function	json ||| json	count=1
class	value suitable for use ||| digest	count=1
function	to consider it ||| get	count=1
function	polite text ||| get	count=1
class	a script ||| script	count=1
function_arg	[function_1] given offset ||| [arg_2] [function_1]	count=1
function_arg	[function_1] given name ||| [arg_2] [function_1]	count=2
arg	a failure ||| format failure	count=1
function	key exchange is ||| allowed key exchange	count=2
function	retrieve the date ||| date	count=1
function	convert a string like ||| to	count=1
arg	[arg_1] messages ||| [arg_2] flags silent [arg_1]	count=8
function	a sibling ||| sibling	count=1
module_class	remove the watch ||| internet inotify	count=1
function_arg	opaque [arg_2] ||| [arg_2] [function_1]	count=2
module_class	[module_1] [class_2] ||| [module_1] threaded select [class_2]	count=2
class	initializes a new l{inmemorysshkeydb} ||| in memory sshkey db	count=1
module	is called when the ||| protocols	count=1
arg	[arg_1] on ||| [arg_2] [arg_1]	count=4
arg	addition to a deprecated ||| version replacement	count=1
arg	specified strport ||| password strport	count=1
module	context ||| application	count=1
function_arg	[function_1] [arg_2] ||| [function_1] name strings [arg_2]	count=1
function_arg	exteneded data [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to fd fd [arg_2]	count=1
function	select a ||| select	count=2
arg	of message sizes into ||| msgs	count=1
module	pythonmodule pythonattribute ||| trial	count=1
function_arg	_exc_info if err ||| exc info err	count=1
arg	given group ||| group	count=3
arg	a length ||| length	count=1
function_arg	[function_1] [arg_2] ||| [function_1] list [arg_2]	count=12
function_arg	with daemon information ||| your host info	count=1
class	of ||| digest credential factory	count=2
function	[function_1] and a ||| [function_2] [function_1]	count=5
arg	message sizes into ||| msgs getuidl	count=1
class	stop ||| itelnet transport	count=2
class	function ||| name	count=1
function	our c{self _wrappedfactory} or ||| build	count=1
function_arg	send extended [arg_2] ||| [arg_2] [function_1]	count=3
function	child of ||| child	count=1
function	global reactor if the ||| global reactor	count=1
function	a name in c{paths} ||| preauth	count=1
module	get the ||| web	count=1
class	reactor kill [class] ||| [class]	count=2
class	ignore ||| client machine	count=1
class	retrieve ||| cert	count=1
function_arg	a module [arg_2] ||| [arg_2] [function_1]	count=2
class	standard [class_2] ||| [class_2] [class_1]	count=1
function	to a method on ||| add	count=1
module_class	from the [class_2] ||| [module_1] httpconnection [class_2]	count=1
function_arg	set [arg_2] ||| [arg_2] [function_1]	count=6
arg	scheme [arg_2] ||| value [arg_1] [arg_2]	count=5
function_arg	initialize with [arg_2] ||| [arg_2] [function_1]	count=10
arg	[arg_1] a query ||| [arg_2] [arg_1]	count=3
function	none if [function] cannot be ||| [function]	count=1
function	returns the user id ||| get user id	count=1
function	get ||| get element	count=2
function	credentials checkers for ||| credentials checkers	count=2
arg	to the consumer ||| consumer	count=1
function	[function_1] no credentials ||| [function_2] [function_1]	count=1
function	a msg_unimplemented message ||| ssh unimplemented	count=1
function	in the known_hosts file ||| in known	count=1
class	the mailbox ||| maildir mailbox	count=1
function	cookie that ||| cookie	count=1
function	text [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] mbox ||| [arg_2] [function_1]	count=1
function_arg	opaque to [arg_2] ||| [function_1] [arg_2]	count=3
module	from the ||| web	count=5
class	this function ||| maildir	count=1
function	waiting for read availability ||| reading	count=1
arg	to a query ||| query timeout	count=1
function_arg	_exc_info if [arg_2] ||| [function_1] [arg_2]	count=4
function	full or not ||| full	count=2
function	suitable for joining to ||| to	count=1
arg	them to the consumer ||| consumer	count=1
module	set up the response ||| web	count=1
class	process identified by ||| iprocess transport	count=1
function_arg	a query message ||| query message	count=1
function	channel ||| lookup channel	count=1
function	prepare to deliver ||| deliver body initial	count=1
arg	for the given request ||| request	count=2
module	get the ||| conch	count=1
arg	[arg_1] an error ||| [arg_1] [arg_2]	count=3
class	process's stdin ||| writer	count=1
arg	a string representing a ||| cls string	count=1
module	return the ||| protocols	count=1
function	inverse query ||| inverse query	count=2
function	dispatch ||| dispatch	count=1
function_arg	[function_1] given fd ||| [function_1] [arg_2]	count=1
function	subsystem ||| lookup subsystem	count=1
class	are ||| iunixdatagram	count=1
function	decimal degrees this value ||| decimal degrees	count=1
function_arg	msg_unimplemented message [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] method to ||| [function_1] [function_2]	count=1
function	pythonattribute a testcase ||| name	count=1
function	degrees this ||| degrees	count=1
function	to c{path} ||| coerce to	count=1
function	test cases ||| test case	count=1
function	returns ||| get peer	count=1
class	has ||| log file	count=2
function	a successful [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] the delay ||| [function_2] [function_1]	count=3
function	[function_1] of headers ||| [function_1] raw [function_2]	count=1
class	@param address [class] address ||| record [class]	count=1
arg	and nonce ||| nonce	count=1
function	subclass or ||| name	count=1
arg	making ||| method uri headers	count=1
function	from this handle ||| from handle	count=3
function	registration info for ||| registration info	count=2
function	arithmetic magic methods ||| convert	count=1
function	add a header ||| add header	count=1
function	[function_1] a traceback ||| [function_1] detailed [function_2]	count=1
function	run ||| run	count=16
function	an error for a ||| error	count=1
function	[function_1] child process ||| [function_2] [function_1]	count=1
function	[function] in ||| [function]	count=4
arg	width return ||| width	count=1
arg	change [arg_2] ||| [arg_2] [arg_1]	count=2
function	the deferred has ||| cancel get	count=1
arg	the value ||| value	count=1
arg	event loop ||| xer primary other selectables	count=1
function	retrieve a child resource ||| get child with	count=1
class	test if ||| test case	count=1
class	zippath by looking ||| zip map impl	count=1
class	when the channel ||| channel	count=1
function	format a ||| format uidlist	count=1
function	default appropriate ||| default	count=1
module_class	this path with ||| python file path	count=1
function_arg	given [arg_2] ||| [function_1] [arg_2]	count=1
class	message as it is ||| mailbox append message	count=1
function	[function_1] prefix ||| thread fdwrapper [function_1] [function_2]	count=1
function	attribute ||| attribute	count=5
arg	to communicate with that ||| startthread	count=1
function	set whether ||| set	count=3
arg	data for inclusion ||| data	count=1
function	the signed ||| signed	count=1
module	to ||| words protocols	count=2
class	hashed entry ||| hashed entry	count=1
module_class	[module_1] ftp server ||| [module_1] [class_2]	count=8
function	connection by sending a ||| connection	count=1
class	processes reboots ||| name generator	count=1
function	rotate when the ||| should rotate	count=1
arg	to look up ||| portonserver portonclient	count=1
arg	[arg_1] given path ||| [arg_2] [arg_1]	count=2
function	offline ||| offline	count=1
function	the raw [function] to the ||| [function]	count=1
arg	is specified ||| i	count=1
class	suitable for use as ||| digest	count=1
module_class	to [module_1] [class_2] ||| [module_1] [class_2]	count=16
function	as a processor for ||| processor	count=1
arg	fixes the ||| coordinatetype sentencedatakey	count=1
function_arg	its window [arg_2] ||| [function_1] [arg_2]	count=1
arg	l{localworkeramp} ||| result testcases cooperate	count=1
function	line of human-readable text ||| text	count=1
function	some polite ||| string	count=1
module	constructs a pre-built l{servicemanager}, ||| words protocols jabber	count=1
arg	tell me what to ||| protoclass bucketfilter	count=1
arg	an implementor of ||| mind	count=1
class	initializes a ||| sshpublic key checker	count=1
function	the generator [function_2] ||| [function_1] [function_2]	count=1
class	object ||| with default dict	count=1
class	to for name lookups ||| ireactor pluggable resolver	count=1
arg	error is a ||| error	count=1
arg	specified the sizes of ||| i	count=1
function_arg	kicked from [arg_2] ||| [arg_2] [function_1]	count=2
function	our channel ||| channel	count=1
module_class	jabber id [class_2] ||| [module_1] connect [class_2]	count=1
function	exhorting the user to ||| replacement string	count=1
function	enter ||| enter	count=1
class	record ||| subunit reporter	count=1
function	left the ||| left	count=1
function	to define ||| define failed	count=1
function_arg	[function_1] will represent ||| [arg_2] [function_1]	count=4
arg	article ||| article	count=2
function	[function_1] connection to ||| [function_1] [function_2]	count=1
function	setup authentication mechanism ||| mechanism	count=1
function	for iteration to ||| iterate	count=1
module	on the screen ||| conch insults	count=1
function	server protocol ||| server	count=1
arg	values [arg] ||| [arg]	count=1
class	to be ||| maildir	count=1
class	group conversation and displays ||| group conversation	count=2
function	with a list ||| get	count=1
function_arg	@param exitcode the ||| init exitcode signal	count=1
arg	issue a query ||| query servers timeout	count=1
class	my process's ||| process writer	count=1
arg	command the command to ||| command	count=1
class	and ||| sshtransport base	count=2
class	and arrange for ||| resolver	count=1
class	create ||| cooperative task	count=1
class	this function across all ||| name generator	count=1
arg	report that [arg] ||| [arg] error	count=1
function	get the private part ||| get private	count=1
class	my syspath and moduledict ||| python path	count=1
function	an ||| replacement	count=1
class	with l{callremote}, ||| box dispatcher	count=1
function	a character ||| character	count=1
function	connection attempt ||| client connection	count=1
function	set which ||| set unjellyable for	count=1
arg	set of observers this ||| observers	count=1
arg	function in ||| f	count=2
class	by the xmlstream when ||| connect authenticator	count=1
function	a process ||| process	count=5
class	that we will stop ||| transport	count=1
module	which ||| mail	count=1
class	pool this will be ||| pool	count=1
class	[class_1] channel ||| conch [class_1] [class_2] exec	count=2
function	body has been ||| body data	count=2
function	resume request made ||| resume	count=1
function	when a connection ||| connection	count=2
class	current platform ||| platform	count=4
module_class	return the values [module_1] [class_2] ||| [module_1] [class_2]	count=2
function_arg	run [arg_2] ||| [function_1] with warnings suppressed [arg_2]	count=1
function	the number [function_2] ||| [function_1] [function_2]	count=4
class	make ||| transfer	count=1
function	start this ||| start service	count=1
arg	socket ||| socket	count=1
class	all ansi color ||| ansi parser	count=2
function_arg	[function_1] l the ||| [arg_2] [function_1]	count=1
function_arg	[function_1] l{memoryworker} ||| [function_1] [arg_2]	count=1
function	to ||| get	count=1
function	[function_1] path to ||| [function_1] [function_2]	count=1
module	message added to ||| mail	count=1
function	constructs a pre-built l{servicemanager}, ||| manager	count=1
function	get a channel ||| channel open	count=1
function	namespace from ||| namespace from	count=2
class	[class_1] state has ||| [class_2] [class_1]	count=4
class	[class_1] complete ||| [class_2] [class_1]	count=8
function	open ||| open	count=10
arg	status and [arg_2] ||| [arg_1] [arg_2]	count=1
function	decorators and ||| get	count=1
function	trying to resume ||| do resume	count=1
function	caller's caller ||| calling context	count=1
function	[function_1] [function_2] ||| [function_2] to bad request [function_1]	count=10
function	for subnegotiations for which ||| subnegotiation	count=1
class	make an ||| file transfer client	count=2
function	connection control [function_2] ||| [function_1] [function_2]	count=1
module	positioning attribute ||| positioning	count=1
function	create a string ||| to string	count=1
function_arg	[function_1] data by ||| internet iconsumer [function_1] [arg_2]	count=1
function	and an amp box ||| from box	count=1
function	document ||| document	count=2
function_arg	size of [arg_2] ||| [function_1] [arg_2]	count=1
function	main wx/twisted [function_2] ||| [function_1] [function_2]	count=1
function	to traceback ||| traceback	count=1
function	the ipv6 ||| aaaa	count=1
function	the user to ||| get replacement	count=1
function_arg	query message ||| query message	count=1
class	for use as ||| credential	count=1
function	package ||| package	count=2
class	use as ||| digest credential	count=1
function	error to remove ||| remove	count=1
module	of decorators ||| python	count=1
function_arg	coerce a [function_1] [arg_2] failure ||| [function_1] [arg_2]	count=1
function	a position [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] resolver ||| [function_1] [function_2]	count=1
arg	a pre-built l{servicemanager}, ||| password	count=1
function	of finish ||| finish	count=1
class	[class_1] as ||| [class_1] [class_2]	count=2
class	running agent ||| sshagent client	count=2
module	whether [module] known ||| [module]	count=1
function	the time of ||| time	count=4
function	yield in source ||| get source lines	count=2
function_arg	udp [arg_2] ||| [arg_2] [function_1]	count=3
function	api with some polite ||| get replacement	count=1
function	l{str} representation of ||| compact repr	count=1
function	[function] that ||| get access [function]	count=1
class	date has ||| daily log file	count=1
arg	[arg_1] the reactor ||| [arg_2] [arg_1]	count=1
class	be ||| maildir	count=1
function	retrieve the list ||| get	count=2
class	the endpoint ||| server endpoint service	count=1
module_class	[module_1] watch ||| [module_1] [class_2]	count=4
function	normal prefix to include ||| get log prefix	count=1
module	pre-built l{servicemanager}, ||| words protocols	count=1
function	is linux in a ||| is	count=1
class	www-authenticate ||| digest	count=1
function	select ||| cb select	count=1
module	will stop ||| conch	count=1
function	several different fields ||| fast	count=1
function	[function] conversion ||| should enable [function]	count=2
arg	l{node} which ||| newchild oldchild	count=1
class	authentication ||| auth	count=3
function	[function_1] warnings which ||| [function_1] [function_2] observewarning	count=3
function_arg	decode [arg_2] ||| [function_1] [arg_2]	count=4
arg	c{newpath} that is suitable ||| path newpath encoding	count=1
arg	this object ||| obj	count=1
function	build an l{esmtpsender} protocol ||| build protocol	count=1
class	and ||| banana	count=1
function	follow a delegation ||| discover authority	count=1
module	public ||| conch ssh	count=1
function_arg	with the [arg_2] ||| [function_1] range [arg_2]	count=3
module	packet using the ||| conch	count=1
arg	whether access [arg] ||| [arg]	count=1
function	a client ||| client	count=1
function	more body [function_2] ||| [function_2] [function_1]	count=3
arg	a domain ||| domain	count=1
function	query is received ||| query	count=1
class	calls ||| name	count=1
function	encountered closing tag ||| tag	count=1
function	may [function] ||| connection [function]	count=2
class	method ||| method	count=3
module	if the given ||| conch ssh	count=1
function	specific section of ||| specific	count=1
function	protocol to ||| protocol	count=1
function	and ||| bytes and	count=1
arg	a failure ||| failure level	count=1
function	execute a command in ||| execute command	count=1
function	failure [function] ||| info or failure [function]	count=1
function_arg	[function_1] was ||| [function_1] test [arg_2]	count=1
module	create a ||| cred	count=1
function	should be logged based ||| should log event	count=1
class	function ||| maildir name generator	count=1
module	pb [module] in another ||| [module]	count=1
arg	a c{regexp} search ||| regex msg	count=1
module	has closed the ||| conch	count=1
arg	is a private constructor ||| filepath pythonpath	count=1
function_arg	service [arg_2] ||| [function_1] [arg_2]	count=2
function	a basename ||| sibling	count=1
function	a stream [function_2] ||| [function_2] [function_1]	count=5
function	as an ||| client	count=1
arg	message on a ||| data ancillary flags	count=1
function	personal namespaces ||| personal namespaces	count=1
module	object it is ||| python	count=1
function	class ||| for class	count=1
class	for sending messages via ||| dispatcher	count=1
class	a transport is connected ||| abstract datagram	count=1
arg	[arg_1] listen on ||| [arg_1] [arg_2]	count=2
module	a ||| positioning	count=2
module	an object from modules ||| trial	count=1
arg	status line into ||| status	count=1
class	random value ||| digest	count=1
module	the authentication is ||| conch	count=1
function	from the ||| from	count=4
function	expand c{cipherstring} according to ||| expand	count=1
function_arg	[function_1] binaryboxprotocol's transport ||| [arg_2] [function_1]	count=1
module	the first line of ||| web	count=1
class	both ends of ||| fdwaker	count=1
class	[class_1] as a ||| [class_2] [class_1]	count=2
class	test has run ||| test case	count=1
function	[function] to ||| connection lost [function]	count=2
arg	spawn ||| executable args environment	count=1
function	pre-built l{servicemanager}, using ||| service manager	count=1
function_arg	initialize with [arg_2] ||| [function_1] port factory backlog [arg_2]	count=1
function	connection control header ||| connection control header	count=3
function	exception object from a ||| exception from	count=1
arg	see [arg_2] ||| [arg_2] [arg_1]	count=1
class	descriptor will use to ||| descriptor	count=1
arg	schema ||| objects proto	count=1
function	the challenge for use ||| get challenge	count=1
function_arg	[function_1] using ||| [function_1] [arg_2]	count=8
class	wsgi i{start_response} callable ||| wsgiresponse	count=1
function	hashed username realm ||| hash	count=1
function	will start being ||| start receiving	count=2
class	listing with attributes to ||| lister	count=1
function	some polite text ||| replacement	count=1
function	an expected failure to ||| expected failure	count=1
function	enable debug hooks ||| debug mode	count=1
function	group which should exist ||| group	count=1
arg	[arg] 0 ||| item [arg]	count=1
module	using this pidfile ||| application	count=1
function	is a ||| is	count=2
function	a request [function_2] ||| [function_1] [function_2]	count=2
function	the write connection ||| write connection lost	count=2
arg	this ||| path	count=2
class	c{filedescriptor} ||| continuous polling	count=2
class	create a ||| factory	count=1
arg	relaying manager to ||| manager delay	count=1
class	called when a client ||| ircclient	count=1
function	prefix for a ||| prefix	count=1
function	[function_1] timeout value ||| [function_2] [function_1]	count=1
module	crypted matches the ||| conch	count=1
arg	[arg_1] module ||| [arg_2] [arg_1]	count=2
function	xml document @param ||| to xml	count=1
function_arg	ampbox [arg_2] ||| [arg_2] [function_1]	count=5
function	maximum line [function_2] ||| [function_1] [function_2]	count=1
class	a port ||| port	count=1
function	currently selected ||| fetch	count=3
arg	a previously ||| requestid	count=1
function_arg	format an event ||| format event	count=1
module	me i am the ||| protocols	count=1
module	jabber id that ||| words protocols jabber	count=1
function	running on set ||| get deprecated	count=1
module	given protocol factory and ||| internet	count=1
module_class	get the filepath's ||| protocols ftpanonymous shell	count=2
class	alias and return ||| alias	count=1
function_arg	[function_1] given pattern ||| python file path [function_1] [arg_2]	count=2
function	to uncache an ||| proto uncache	count=2
function	the name of ||| name	count=3
function	a hemisphere ||| hemisphere	count=1
class	redirect ||| redirect agent	count=2
module_class	the given [class_2] ||| [module_1] [class_2]	count=5
function	[function] made ||| make [function]	count=3
module	set ||| python	count=1
rep	the line [function_arg_2] ||| [module_class_1] line [function_arg_2]	count=1
class	l{agent} that will ||| agent	count=1
class	of a mailbox @type ||| imap	count=1
function	the envelope for a ||| envelope	count=1
function	list of [function] of entities ||| list dynamic [function]	count=1
class	for use as the ||| digest credential factory	count=1
class	copy ||| remote copy	count=2
class	remove a ||| deferred queue	count=1
function	receive a msg_service_accept message ||| ssh service accept	count=1
function	an ||| stop process	count=1
function	suitable log ||| log	count=1
function	body has been ||| body data received	count=2
class	a new win32 event ||| win32reactor	count=1
module_class	this formatting ||| python default formatting	count=1
arg	username and [arg_2] ||| [arg_2] [arg_1]	count=1
arg	a ||| factory timeout	count=1
class	this descriptor will ||| descriptor	count=1
function	the number of hard ||| get number of hard	count=1
class	predetermined ||| failure	count=1
function	list [function] in this ||| [function]	count=1
arg	reconnecting subclasses should ||| reconnecting	count=1
function	wait for ||| wait for	count=1
arg	default ||| key default	count=1
class	decode ||| dir dbm	count=1
class	has ||| daily log file	count=2
function_arg	[function_1] an 'in' ||| [arg_2] [function_1]	count=4
function	c{_deprecated_info} ||| get deprecated	count=1
arg	@param environ ||| cls environ	count=1
function	arguments to ||| arguments	count=1
function	c{self _wrappedfactory} or ||| build	count=1
arg	group over ||| group low	count=1
function	into a function ||| function	count=1
module	and run the reactor ||| internet	count=1
arg	is l{none} ||| maybereactor	count=1
class	request ||| nntpclient	count=1
function_arg	[function_1] another protocol ||| [arg_2] [function_1]	count=2
arg	[arg] for reading ||| [arg]	count=1
function	log prefix for ||| wrapped log prefix	count=2
function	unique identifier ||| get uid	count=1
function	anonymous login on the ||| cb login anonymous	count=1
function	mac [function_2] ||| [function_1] [function_2]	count=1
module	result from ||| client	count=1
function_arg	response to ||| response data	count=1
function	mapping of arguments ||| make arguments	count=1
function_arg	[function_1] osslpkey ||| [arg_2] [function_1]	count=1
function_arg	for the jellier ||| for jellier jellylist	count=2
arg	a query to a ||| query servers	count=1
function	as a recommended subscription ||| subscription	count=1
arg	the reporter ||| testname fail failclass frames	count=1
arg	method/function ||| filename	count=1
function	sign the given ||| sign	count=1
class	and bind my socket ||| port	count=2
function	escape ||| opt escape	count=1
function	return the portal ||| portal	count=1
class	date has changed since ||| daily log	count=1
function	[function_1] modules and ||| [function_1] [function_2]	count=1
function	removeall} ||| remove all	count=2
function	[function_1] a file ||| [function_2] [function_1]	count=2
arg	shut ||| reason	count=1
class	write ||| file	count=1
function	some polite ||| get	count=1
class	is ||| sshuser auth client	count=1
arg	provides one ||| mind	count=1
module_class	[module_1] coordinate ||| [module_1] [class_2]	count=2
class	public key ||| key	count=1
class	[class_1] encoding ||| [class_1] [class_2]	count=1
function	an error for ||| error	count=1
function	allow [function] ||| [function]	count=1
class	syspath and moduledict in ||| python	count=1
class	task has been stopped ||| task	count=1
function	return c{path} as a ||| as	count=1
function	all pending requests ||| connect waiters	count=1
arg	mail exchange server cannot ||| relay	count=1
module	the beginning ||| conch ssh	count=1
arg	line and ||| line	count=1
function	[function_1] extended ||| [function_2] [function_1]	count=1
function	[function_1] tcp connection ||| [function_1] [function_2]	count=1
function_arg	group [arg_2] ||| [arg_2] [function_1]	count=1
arg	python objects and add ||| objects proto	count=1
function	resume an ||| resume	count=1
function	[function_1] client response ||| [function_2] [function_1]	count=3
module_class	[module_1] method may ||| [module_1] [class_2]	count=2
function	a received [function_2] ||| [function_1] [function_2]	count=2
function	of [function] of entities ||| list dynamic [function]	count=1
function	testcase subclass or ||| name	count=1
class	of all [class_2] ||| [class_2] [class_1]	count=8
function	spawn a process with ||| spawn	count=1
module	the protocols and ||| web	count=1
class	peer should ||| itelnet	count=1
function	were [function] or ||| was [function]	count=1
arg	the given offset and ||| offset	count=1
function	[function_1] connection to ||| [function_2] [function_1]	count=1
function	responding to [function_2] ||| [function_1] [function_2]	count=2
function	a www-authenticate ||| generate	count=1
module	that match [module] string ||| [module]	count=1
function	create a l{bucket} corresponding ||| get bucket	count=1
module	for content-length and store ||| web	count=1
arg	l{h2stream} objects to ||| streamid	count=1
arg	channel the channel ||| channel	count=1
arg	l{imessagepart} provider which ||| attrs	count=1
module_class	[module_1] http/2 header ||| [module_1] [class_2]	count=8
module	called by the ||| words	count=2
function	an error has ||| server error	count=1
function	[function_1] was made ||| [function_2] [function_1]	count=1
class	satellite information from ||| nmeaadapter	count=1
class	a secured ||| endpoint	count=1
function_arg	registration on [arg_2] ||| [function_1] [arg_2]	count=3
module	that match [module] string c{prefix} ||| [module]	count=1
class	message as ||| append message task	count=1
function	version of an ||| version of	count=2
arg	declare ||| modulename name	count=1
class	further processing [class_2] ||| [class_2] [class_1]	count=1
function	text exhorting the user ||| get replacement string	count=1
module	them to [module] ||| [module]	count=1
function_arg	received chunk [arg_2] ||| [function_1] [arg_2]	count=1
class	jid ||| jid	count=1
arg	and return the watch ||| mask	count=1
function	a traceback ||| traceback	count=2
function	tcp ||| tcp	count=2
arg	message is specified the ||| i	count=1
arg	a module ||| module	count=2
function	from a l{str} or ||| from string	count=1
function	comments ||| comments	count=1
class	the ||| box dispatcher	count=2
module	user that an ||| words im	count=2
arg	flags of ||| flags mode	count=1
arg	module return ||| module	count=1
arg	sign ||| sign	count=1
function	subclass ||| name	count=1
module	body which uses the ||| web	count=1
arg	extensions with leading dot ||| mimetype_locations init	count=1
arg	object subclasses must implement ||| instring	count=1
function	degrees ||| in degrees	count=1
module	notifying [module] user ||| [module]	count=1
arg	when a fd ||| selectable fd event	count=1
function_arg	[function_1] l{node} which ||| [function_1] child [arg_2]	count=1
function	any previously set values ||| set	count=1
function	[function_1] expiration ||| [function_1] checking [function_2]	count=1
function	exteneded ||| ssh channel extended	count=1
class	lines ||| line	count=1
class	running service [class_2] ||| [class_2] [class_1]	count=2
class	notify any nested ||| binary box	count=1
module	consider it ||| python	count=1
function	for removing ||| remove	count=1
function	user to consider it ||| get	count=1
function	[function_1] client ||| [function_2] [function_1]	count=19
function	key for a ||| flat key	count=1
class	initiate ||| initiating initializer	count=1
function	object into a string ||| string	count=1
module	us ||| ssh	count=1
module	key ask the user ||| conch ssh	count=1
function	the user id of ||| get user id	count=1
function	set up child ||| setup child	count=2
function_arg	[function_1] flags ||| [arg_2] [function_1]	count=1
function	certificates to an ||| to	count=1
function	raw [function] to the ||| [function]	count=1
module	of a ||| trial	count=1
function	information from a gsv ||| fix gsv	count=1
module	moduledict in ||| python	count=1
class	across all ||| name	count=2
arg	start [arg_2] ||| [arg_1] [arg_2]	count=3
function	exteneded data ||| channel extended data	count=1
function_arg	[function_1] opener a ||| [arg_2] [function_1]	count=1
arg	of the ||| path reactor	count=1
module	a deprecated api ||| python	count=1
function	parse ||| parse	count=23
function	when called in dispatch ||| dispatch	count=1
function	set ||| deprecated	count=1
function	and a ||| and	count=2
class	called when ||| iresolution receiver	count=1
arg	in channel ||| channel	count=1
function	[function_1] working ||| [function_2] [function_1]	count=1
function	l{servicemanager}, using ||| build service manager	count=1
function_arg	@param exitcode ||| init exitcode signal	count=1
module_class	number and column of [module_1] [class_2] character parsed ||| [module_1] [class_2] save mark	count=1
function	[function_1] prefix to ||| [function_2] [function_1]	count=3
function	certificate-authority certificates to ||| cacerts to	count=1
arg	given [arg] other ||| [arg] recipient	count=1
function	of newlines encountered ||| newlines	count=1
function	reading ||| reading	count=1
class	across all calls to ||| name generator	count=1
function	this stream's flow control ||| flow control	count=1
class	in a ||| path	count=1
arg	modes on ||| modes	count=1
class	this l{boxdispatcher} ||| box dispatcher	count=1
function	[function_1] stopped ||| [function_2] [function_1]	count=3
function	decorate all ||| decorate	count=1
arg	host a hostname used ||| host	count=1
module_class	the cgi script ||| web cgiscript	count=1
class	changed since last write ||| daily	count=1
arg	provides one of ||| mind	count=1
function	stop ||| do stop	count=1
function	has ||| ssh	count=1
class	socksv4 ||| socksv4	count=1
function	c{inode} ||| by tag name	count=1
class	unique across all ||| maildir name	count=1
function	is a quick and ||| and disconnect	count=3
function_arg	[function_1] referring ||| [function_1] trust root path [arg_2]	count=1
function	[function_1] its ||| [function_1] [function_2]	count=1
arg	method ||| klass	count=1
function	coerce a failure [function_1] [function_2] ||| [function_1] [function_2]	count=2
module	to the other side ||| conch ssh	count=1
class	c{filedescriptor} for notification of ||| continuous polling	count=1
class	signal handlers if ||| signal	count=1
function	unjelly an ||| unjelly	count=1
module	the state of this ||| python	count=3
function	[function_1] l{ireactorinstaller} plugins ||| [function_1] [function_2]	count=1
arg	an event ||| event	count=6
arg	comparison with another ||| other	count=3
module	command running on the ||| conch	count=1
arg	a locally-unique id ||| luid dorefcount	count=1
class	calls to ||| maildir name generator	count=1
function	necessary for unix client ||| client unix	count=1
class	is intended ||| maildir name generator	count=1
arg	l{sshpublickeychecker} ||| keydb	count=1
arg	ssl ||| certificate method	count=1
class	calls to this ||| maildir name	count=1
function	number of failed attempts ||| failed attempts	count=1
function	getattr method to cause ||| getattr	count=1
function	sentence ||| fix	count=1
function_arg	[function_1] @param fp ||| [function_1] [arg_2]	count=1
module	the beginning of ||| conch ssh	count=1
function	this is msg_userauth_info_response ||| ssh userauth pk ok keyboard interactive	count=1
class	c{usegtk} flag ||| portable gtk3reactor	count=1
arg	domain to connect ||| domain	count=1
class	iteration ||| looping	count=1
module	when it ||| conch client	count=1
function	[function_1] and ||| [function_1] output [function_2]	count=2
arg	[arg_1] given numeric ||| [arg_2] [arg_1]	count=2
module	pre-built l{servicemanager}, ||| protocols	count=1
arg	data and attempt ||| data	count=2
function	failure ||| fail	count=1
function	[function_1] [function_2] ||| [function_2] resource [function_1]	count=1
function	parse a mapping of ||| parse	count=1
arg	two-sequence ||| disp	count=1
module	called when the user ||| conch ssh	count=1
function	and get a list ||| get	count=1
function	a fix for a ||| fix	count=1
arg	[arg_1] query checking ||| [arg_1] [arg_2]	count=2
class	channel fails ||| channel	count=1
function	and construct appropriate records ||| records	count=1
class	signal handlers should ||| signal reactor mixin	count=1
module	root element has ||| words xish	count=2
module	port ||| internet iocpreactor	count=2
function	return an id ||| id	count=2
class	to proxy ||| proxy resource	count=1
function	is in ||| is in known	count=1
module	when it is done ||| conch client	count=1
module_class	[module_1] this channel ||| [module_1] [class_2]	count=4
module	deferred has been ||| internet	count=1
class	to be ||| name	count=1
function	[function_1] checkers for ||| [function_1] [function_2]	count=2
function	and dirty way ||| and disconnect	count=3
function	request is ||| request	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] deliver [function_arg_2]	count=4
function	of pythonmodule pythonattribute ||| name	count=1
arg	it'll translate a ||| signalid	count=1
class	iteration ||| call	count=1
function	the source line of ||| source line	count=1
function_arg	[function_1] [arg_2] ||| [function_1] unix address [arg_2]	count=3
class	unique across ||| maildir name	count=1
function_arg	[function_1] occurred in ||| [function_1] [arg_2]	count=1
function	[function_1] warnings suppressed ||| [function_1] [function_2]	count=2
function	unless ||| stop producing	count=1
arg	response to a query ||| response query timeout queriesleft	count=1
arg	the protocol then ||| proto	count=1
function	render a ||| render	count=1
arg	of local files ||| files remotepath	count=1
function	factory ||| factory	count=5
class	monitoring service ||| monitoring service	count=2
module_class	[module_1] distributed manager ||| [module_1] [class_2]	count=6
arg	[arg_1] the password ||| [arg_1] [arg_2]	count=1
class	indicates ||| ihalf closeable	count=1
function	skip reason set on ||| skip	count=1
function	[function_1] of headers ||| [function_2] [function_1]	count=1
class	argument ||| argument	count=1
function	into ||| to	count=1
function	ecdh [function_2] ||| [function_2] [function_1]	count=2
function	calculate boolean [function_2] ||| [function_1] [function_2]	count=6
function	a malformed authentication challenge ||| authmalformed challenge	count=1
function	buffer for this transport ||| buffer	count=2
module_class	the given [class_2] ||| [module_1] known hosts [class_2]	count=1
function	key object to offer ||| key	count=1
arg	acknowledgement then initiate ||| proto	count=1
class	endpoint ||| server endpoint	count=1
arg	a l{node} which ||| newchild oldchild	count=1
function	enable debug hooks ||| start debug mode	count=1
module	directory as this ||| python	count=1
class	a string ||| maildir	count=1
function	the response to a ||| response	count=1
arg	command ||| reactor command	count=1
arg	a wrapper [arg_2] ||| [arg_2] [arg_1]	count=4
function	set the ||| set flags	count=1
class	[class_1] this task ||| [class_1] [class_2]	count=1
arg	[arg_1] port number ||| value [arg_1] [arg_2]	count=3
class	create a zippath ||| zip	count=1
arg	numeric ||| protocol interface	count=3
module	value if ||| python	count=1
function	alternative ||| string	count=1
function	when a connection ||| notify no connection	count=1
function	[function_1] original exception ||| [function_1] [function_2]	count=1
function	deprecated api ||| get	count=1
class	and moduledict in a ||| python	count=1
class	group conversation ||| group conversation	count=2
function_arg	[function_1] payload : ||| [arg_2] [function_1]	count=48
function	message-id ||| article	count=1
function	to a new-style ||| to	count=1
function	by ||| by	count=2
class	checks on ||| synchronous	count=2
function	a l{bucket} corresponding ||| get bucket for	count=1
function	sent a malformed ||| esmtp authmalformed	count=1
class	called ||| ircclient	count=3
function	[function_1] not ||| [function_1] [function_2]	count=2
module	closed the ||| conch ssh	count=1
function	a string containing ||| string	count=1
arg	domain name ||| name	count=1
module	ask the user for ||| conch	count=1
arg	[arg_1] of the ||| [arg_2] [arg_1]	count=1
function	of the given arguments ||| arguments	count=1
function	return their ||| clean	count=1
function	public or private lsh ||| string lsh	count=1
function	[function] c{path} ||| [function] is working	count=1
module	of the ||| words protocols	count=1
function	the threadpool used by ||| pool	count=1
module	[module] a ||| [module]	count=12
function	connection by ||| connection	count=1
class	to return a path ||| path	count=2
class	an integer file descriptor ||| descriptor	count=1
class	zsh completion code ||| zsh	count=1
class	handle one ||| httpparser	count=1
module	file in the ||| conch	count=1
function	convert ||| strings to	count=1
class	new protocol ||| protocol	count=1
function	the setup ||| get setup	count=1
module	sent to the ||| conch	count=1
class	step ||| iinitiating	count=1
class	speed ||| speed	count=1
function	a pre-built l{servicemanager}, ||| build service manager	count=1
function	resume copying bytes to ||| resume producing	count=1
arg	path within ||| path	count=1
class	file ||| isftpfile	count=3
function	like a package ||| package	count=1
module	write ||| python	count=1
function	compute a hash of ||| hash	count=1
arg	beginning of c{query} possibly ||| query msgid msg lastsequenceid	count=1
function	print all of ||| print	count=1
function	l{bytes} @param ||| init	count=4
function	component has lost ||| component	count=1
arg	for logical url ||| logicalurl	count=1
module	pre-built l{servicemanager}, ||| words	count=1
function_arg	register/unregister an [arg_2] ||| [function_1] [arg_2]	count=4
function	create a l{bucket} corresponding ||| get bucket for	count=1
module	this may only be ||| internet	count=1
class	function across all processes ||| maildir name	count=1
class	indicate that ||| itelnet transport	count=1
function	number of calls ||| with count	count=1
class	unix this is done ||| unix	count=1
arg	broadcast the given [arg_1] [arg_2] in group ||| [arg_2] [arg_1]	count=2
module	of the ||| protocols	count=2
module	on [module_2] ||| [module_2] [module_1]	count=1
class	unparsed entry from ||| unparsed entry	count=1
function	c{f} using a thread ||| to thread	count=1
arg	status and an ||| status	count=1
function	remove all keys ||| remove all identities	count=3
class	a mailbox change ||| imailbox imap	count=1
function	for ||| generate	count=1
class	by c{self frame} ||| source fragment element	count=1
arg	1 addresses ||| code resp numok addresses	count=1
function	remove a child ||| remove	count=1
function	response to a select ||| cb select	count=1
arg	check if there is ||| sessioninterface forcenotsecure	count=1
function	containing the caller's caller ||| calling context	count=1
function	bytes representation of ||| bytes	count=1
module	suitable for use as ||| cred	count=1
arg	file any file-like object ||| file consumer	count=1
class	of a paused l{cooperativetask} ||| cooperative task	count=1
module	when a connection ||| jabber	count=1
function	our [function] ||| [function]	count=1
function	request [function_2] ||| [function_1] [function_2]	count=3
module	[module_1] public key ||| [module_1] [module_2]	count=6
arg	a two-sequence ||| disp	count=1
function_arg	[function_1] c{deferred} ||| [arg_2] [function_1]	count=1
class	for use ||| digest credential factory	count=1
function	beginning of the ||| beginning	count=1
class	authentication type ||| sshuser auth client	count=1
module_class	[module_1] header ||| [module_1] [class_2]	count=4
function	socket using ||| internet socket	count=1
arg	c{classobj}, returns a list ||| classobj prefix	count=1
function	the stream ||| stream	count=4
function	of errors caught by ||| errors	count=1
function	prepare the ||| prepare	count=1
function	return a l{todo} object ||| get	count=1
module	information from ||| positioning	count=1
class	in the mailbox ||| mailbox	count=2
class	ziparchive treating the archive ||| archive	count=1
function	the receive [function_2] ||| [function_1] [function_2]	count=1
module	has closed the ||| conch ssh	count=1
arg	using this l{command}'s argument ||| cls box	count=1
arg	to user [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	the outgoing request's ||| web iagent	count=1
class	handle user authentication ||| user auth	count=2
function	partial xml document ||| to xml	count=1
arg	unique [arg_2] ||| [arg_2] [arg_1]	count=2
function	with some polite ||| get	count=1
module	of the string a ||| conch	count=1
function	finished disconnecting ||| wait	count=1
module	this ||| names	count=1
function	retrieve [function_2] ||| [function_1] [function_2]	count=6
function	the [function] is ||| private [function]	count=1
function	client endpoint ||| client	count=1
function	limit ||| limit	count=1
function	[function_1] full ||| [function_2] [function_1]	count=1
function	any warning suppressions ||| suppress	count=1
class	given c{key} it must ||| mem cache protocol	count=1
function	to read ||| read	count=1
function	set the [function_2] ||| [function_1] [function_2]	count=5
arg	the given offset ||| offset	count=1
class	ansi ||| ansi	count=1
module	dns resolver instances ||| names	count=1
function	load ||| load	count=7
module	my syspath and moduledict ||| python	count=1
arg	a query ||| query	count=3
function	child elements of ||| elements by tag name	count=1
module_class	[module_1] [class_2] input ||| [module_1] [class_2]	count=5
function	from the child process ||| received	count=1
class	and ||| saslinitiating initializer	count=2
class	infinite [class_2] ||| [class_2] [class_1]	count=2
function_arg	file containing username ||| file filename	count=1
class	all ||| publishable	count=1
function	an attribute ||| attribute	count=2
class	c{key} only if ||| mem cache protocol	count=1
class	this test if any ||| test	count=1
function_arg	return a [arg_2] ||| [arg_2] [function_1]	count=2
class	compute a ||| key	count=1
class	current authentication ||| auth	count=1
class	a ||| factory	count=4
function_arg	file from [arg_2] ||| [function_1] [arg_2]	count=1
module	authentication ||| words protocols jabber	count=2
module	a ||| jabber	count=1
arg	a server challenge ||| challenge	count=1
arg	c{name} on [arg] will be ||| [arg]	count=1
arg	to c{message} ||| rcode answers authority	count=1
function	determines whether ||| constraint	count=1
class	endpoint ||| server endpoint service	count=1
function	a channel of ||| get channel	count=2
module	a string which is ||| mail	count=1
arg	a l{chunkingzipfile} ||| chunkingzipfile length	count=1
arg	parent then ||| parent	count=1
class	and ||| resolver	count=1
module	which corresponds to the ||| conch	count=1
function	directory and return a ||| get	count=1
arg	communicate with that ||| startthread	count=1
class	is intended to be ||| generator	count=1
function	to the beginning ||| beginning	count=1
function_arg	write data ||| write data	count=1
module_class	this l{filepath} ||| python file path	count=5
function	topic ||| topic	count=1
function	[function] string ||| dump [function]	count=1
function	host [function_2] ||| [function_2] [function_1]	count=2
arg	l{record_afsdb hostname} ||| subtype	count=1
arg	constructs a pre-built ||| jid password	count=1
function	existing beacon information state ||| beacon information	count=1
class	to it ||| resolver	count=1
function	parameterize the time ||| time	count=1
function	there is [function] ||| is [function]	count=3
module	a result from ||| client	count=1
class	instance from l{_connectedprotocol}, issue ||| resolver	count=1
arg	string [arg] int ||| [arg]	count=1
function	variable name into ||| name	count=1
class	key matches the user ||| sshpublic key	count=1
function	remove all readers ||| remove all	count=2
class	the endpoint ||| server endpoint	count=1
function	bcc address matching ||| bcc	count=1
function	[function_1] address ||| [function_1] [function_2]	count=6
arg	user [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function_1] proxy ||| [function_2] [function_1] wrappedendpoint	count=1
function	failed [function_2] ||| [function_1] [function_2]	count=1
arg	the key to ||| key value	count=1
function	remove the [function_2] ||| [function_1] [function_2]	count=2
class	if the ||| with	count=1
class	to the ||| append	count=1
module_class	[module_1] [class_2] ||| [module_1] command [class_2]	count=1
function	implement me to ||| to	count=1
function	decorators and ||| deprecated	count=1
function	plugin [function_2] ||| [function_1] [function_2]	count=2
arg	serv_type [arg_2] ||| [arg_2] [arg_1]	count=3
module	it ||| names	count=2
function	reset ||| reset	count=7
function	a new [function] an ||| new [function]	count=1
function	the initial ||| initial	count=1
module_class	the [class_2] ||| [module_1] [class_2] raw	count=1
module	has sent us the ||| conch ssh	count=1
module	run c{rest} using the ||| conch	count=1
function_arg	item [function_1] [arg_2] then this should be ||| [function_1] [arg_2]	count=4
function_arg	@param osslpkey ||| init osslpkey	count=1
arg	a datagram to ||| datagram	count=1
function	removing all ||| remove all	count=1
function	for joining to c{path} ||| coerce to	count=1
arg	to this person ||| text metadata	count=1
function	extract the field ||| extract	count=1
class	[class_1] file ||| [class_2] [class_1]	count=17
function	[function_1] namespaces ||| [function_2] [function_1]	count=2
class	since last write ||| daily log file	count=1
function	which may refer ||| smart	count=1
class	a process ||| base process	count=1
function	the disposition ||| disposition	count=1
arg	l{localworkeramp} instance iterating ||| testcases cooperate	count=1
arg	header from ||| header	count=1
arg	[arg_1] of ||| [arg_1] [arg_2]	count=1
function	some polite text ||| get	count=1
function	some ||| replacement string	count=1
function	of the sub-messages ||| parts	count=1
arg	initiate ||| portnumber addresstypes	count=1
module	has ||| python	count=1
function	[function_1] id of ||| [function_2] [function_1]	count=3
function_arg	[function_1] hints a ||| [function_1] [arg_2]	count=1
function	the child may or ||| child	count=1
class	port for ||| port	count=1
class	the underlying producer ||| producer	count=2
arg	given name as the ||| name default	count=1
function	text data if ||| gather text	count=1
function	add an ||| coiterate	count=1
function	flag if any of ||| get deprecated	count=1
arg	reconnecting subclasses ||| reason reconnecting	count=1
class	all calls to this ||| maildir name	count=1
function	deliver any future ||| deliver body initial	count=1
arg	for the client ||| client	count=1
class	messages ||| box	count=1
arg	file any ||| file consumer	count=1
module	is installed if ||| internet	count=1
class	setup authentication ||| initializer	count=1
module_class	is this [class_2] ||| [module_1] [class_2]	count=2
class	name of the file ||| file receive	count=1
function	the number of tests ||| count	count=1
function	add ||| add	count=36
function	a notice ||| irc notice	count=1
function	the service is stopped ||| service stopped	count=1
class	remote method ||| remote method	count=2
module	to the jabber server ||| words protocols jabber	count=1
function	c{datetime [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] [function_2] in the response body ||| [function_2] [function_1]	count=2
class	create ||| known hosts file	count=1
function_arg	[function_1] numeric port ||| [function_1] [arg_2]	count=1
class	display my syspath and ||| python	count=1
class	across all ||| maildir name generator	count=2
function	exit the ||| exit	count=1
function	prepare an object ||| prepare	count=1
class	group conversation and ||| igroup conversation	count=1
function	accumulate all ||| accumulate	count=1
arg	protocol header line ||| line	count=2
function	parse a ||| parse server	count=1
arg	primary the ||| primary domains	count=1
function	metadata to keep a ||| to	count=1
arg	in the chat ||| chat user	count=2
arg	a true heading ||| heading	count=1
function	the ||| get replacement	count=1
function	add additional options ||| add additional options	count=2
function	level ||| level	count=1
module	convert any path to ||| conch ssh	count=1
arg	happened server-side ||| errtext	count=1
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] func args kw	count=4
arg	is in progress ||| messagetype	count=1
function	received to the protocol ||| received	count=1
class	underlying path ||| file path	count=1
module	whether [module] ||| [module]	count=2
function_arg	[function_1] [arg_2] that ||| [function_1] [arg_2]	count=4
function	a l{bucket} corresponding ||| bucket for	count=1
class	cleanup ||| existing connection helper	count=1
class	of current l{filedescriptor} ||| glib reactor base	count=2
arg	the attributes ||| attrs	count=1
function	accumulate all attributes of ||| accumulate	count=1
function_arg	@param mainmod the ||| init mainmod	count=1
arg	method [arg_2] ||| [arg_2] [arg_1]	count=2
class	the mailbox ||| mailbox	count=3
function	file ||| file transfer	count=1
module	requests are the ||| web	count=1
function	[function_1] [function_2] are emitted as a ||| [function_1] [function_2]	count=3
arg	domain name and if ||| name	count=1
module	that the clients ||| conch	count=1
function	[function_1] names ||| [function_1] [function_2]	count=4
function	the write connection ||| write connection	count=1
module	the remote buffer has ||| conch	count=1
function	ipv6 address bytes into ||| ipv6	count=1
function	writing or was ||| write or	count=1
module	algorithm in the ||| conch ssh	count=1
function	detailed locals ||| detailed	count=1
module	with ||| python	count=3
module	and ||| words im	count=1
class	process's stderr ||| process	count=1
class	indicate that we will ||| itelnet	count=1
class	initializes ||| checker	count=1
module	an iterator and pass ||| web	count=1
function	been ||| cancel	count=1
function	outstanding delayed calls in ||| delayed calls	count=1
arg	flags [arg_2] ||| [arg_1] [arg_2]	count=2
arg	return whatever tests ||| recurse	count=1
class	mailbox ||| imailbox	count=2
module	select and setup ||| protocols jabber	count=1
function	interfaces that can ||| interfaces	count=1
arg	resumeoffset an integer ||| resumeoffset	count=1
class	when a ||| factory	count=1
module_class	if this [class_2] ||| [module_1] [class_2]	count=16
arg	data to be ||| data	count=2
function	a response to ||| response	count=1
function	suppressed ||| suppressed	count=2
arg	in the given namespaces ||| globals locals	count=1
arg	declare ||| message modulename name	count=1
function	our channel ||| ssh channel	count=1
function	my first existing child ||| child	count=1
function_arg	[function_1] some sort ||| [function_1] channel [arg_2]	count=1
function	next public [function_2] ||| [function_2] [function_1]	count=3
function	which local class ||| unjellyable for class	count=1
arg	the error is ||| test error	count=1
function	create a l{_fileentry} from ||| init	count=1
class	calls to this function ||| generator	count=1
function_arg	[function_1] exitcode ||| [function_1] [arg_2]	count=1
arg	the tests ||| recurse	count=1
function	to find [function_2] ||| [function_2] [function_1]	count=5
arg	callback and an errback ||| callback	count=1
arg	[arg_1] argument schema ||| [arg_1] [arg_2]	count=1
function	message for removing ||| remove	count=1
arg	file ||| file consumer	count=1
function	hinfo ||| host info	count=2
class	intended to be unique ||| maildir name	count=1
function	ipv6 address bytes ||| ipv6	count=1
class	[class_1] task ||| [class_2] [class_1]	count=1
module_class	[module_1] port ||| [module_1] [class_2]	count=4
class	to an address ||| iudptransport	count=1
function	method that determines whether ||| constraint	count=1
class	start monitoring ||| monitoring service	count=1
function	if ||| with	count=1
arg	wisde wanted a ||| result localchannel	count=1
function	test cases c{false} ||| test	count=1
arg	private ||| extra	count=1
class	performing ||| itelnet transport	count=2
module	and run the ||| internet	count=1
class	print 'message' ||| tree reporter	count=1
module	and setup ||| words protocols	count=1
arg	that c{deferred} does ||| deferred	count=1
class	using this ||| ipidfile	count=1
module	object [module] wrap ||| [module]	count=1
function	the delay and the ||| delay	count=1
function	returns [function_2] ||| [function_1] [function_2]	count=6
arg	[arg] a ||| [arg]	count=1
function	as a [function_2] ||| [function_2] [function_1]	count=1
function	a ctcp ||| ctcp	count=1
function_arg	[function_1] object ||| [arg_2] [function_1]	count=2
arg	a command ||| reactor command	count=1
class	l{filepath} ||| file path	count=6
arg	scheme host ||| scheme host	count=1
function	parse of ||| parse	count=1
class	is ||| name generator	count=1
arg	of c{query} possibly more ||| query msgid msg lastsequenceid	count=1
function	directory ||| user directory	count=1
arg	user not ||| user	count=1
function	a given port command ||| port command	count=1
module	handle the ||| protocols	count=3
module	print 'message' ||| trial	count=1
function	object ||| name	count=1
function	create a message ||| create	count=1
class	initializes ||| sshpublic key checker	count=2
function	a chat ||| chat invite	count=1
function_arg	@type code ||| init code	count=1
function	a process and returns ||| get process output and	count=1
function_arg	write a [arg_2] ||| [function_1] [arg_2]	count=2
function_arg	install a [arg_2] ||| [function_1] [arg_2]	count=2
arg	exitcode the ||| exitcode	count=1
arg	c{newpath} that is suitable ||| newpath encoding	count=1
function	invoke the specified l{methodname} ||| call	count=1
class	process identified by its ||| iprocess transport	count=1
class	[class] an ||| [class]	count=3
arg	logical url ||| logicalurl physicalurl	count=1
class	response ||| dnsserver factory	count=1
function	different key exchange ||| ssh kex	count=1
function	reactor [function_2] ||| [function_1] [function_2]	count=1
arg	given user ||| user reason	count=1
function	and get a ||| get	count=1
module_class	map this alias ||| mail alias	count=1
function	address and a ||| address and domains	count=1
function	the private part ||| private	count=1
module	as an ||| python	count=1
function	xml document ||| xml	count=1
arg	directory ||| directory	count=1
module_class	whether the peer ||| conch itelnet protocol	count=1
class	date ||| log file	count=2
function	start expiration ||| start checking expiration	count=1
class	of a l{igroup<interfaces ||| chat ui	count=2
function	parse given jid string ||| parse	count=1
function_arg	[function_1] wrapper and ||| [function_1] [arg_2]	count=4
function_arg	call a [arg_2] ||| [function_1] when running [arg_2]	count=1
arg	func -> ||| func	count=3
function	for unix client ||| client unix	count=2
module	them when it is ||| conch	count=1
class	[class_1] c{key} ||| [class_2] [class_1]	count=8
function	[function_1] cache on ||| [function_2] [function_1]	count=1
arg	article if index ||| index	count=2
module	be used fire the ||| conch	count=1
module	me as ||| spread	count=1
function	and dirty [function_2] ||| [function_2] bad request [function_1]	count=1
function	initialize a ||| init	count=1
function	@return the [function_1] [function_2] in the response body ||| web xforwarded for request [function_2] [function_1]	count=1
function	to a channel ||| ssh channel	count=1
arg	given member to the ||| member	count=2
module	for c{b'http'} scheme and ||| web	count=1
arg	the given channel ||| channel	count=1
function	as being deprecated ||| deprecated module	count=1
function	a thread ||| thread	count=3
module	of ||| internet	count=3
function	exchange is in ||| exchange	count=1
class	pop3 server ||| pop3	count=1
function	emit a ||| safe emit	count=1
class	report the ||| unit result	count=1
function	[function_1] setting up ||| [function_2] [function_1]	count=1
module	the given ||| conch	count=6
class	add ||| log publisher	count=1
class	news ||| news builder	count=1
function	that contains test cases ||| test	count=1
class	suffix an ipv6 address ||| record a6	count=1
module	the lock of the ||| python	count=1
arg	see l{record_soa mname} ||| rname serial refresh	count=1
function_arg	a unix [arg_2] ||| [arg_2] [function_1]	count=2
class	is intended to ||| name	count=1
function	writing [function_2] ||| [function_1] [function_2]	count=3
arg	and nonce ||| nonce clientip	count=1
function	an inverse ||| inverse	count=1
class	list of known files ||| ftpfile list	count=1
function_arg	a msg_userauth_failure [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] that may ||| [arg]	count=1
function	[function_1] the time ||| [function_1] [function_2]	count=1
function	mime [function_2] ||| [function_2] [function_1]	count=1
function	initialization has failed ||| initialization failed	count=3
module	the message ||| conch	count=1
module_class	set parameters of [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	[function] of one ||| [function]	count=1
class	regardless ||| iconnector	count=1
module_class	[module_1] request's ||| [module_1] [class_2]	count=2
function	string representation ||| string	count=1
function_arg	then run [arg_2] ||| [arg_2] [function_1]	count=1
module_class	proxy the stoppage to [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	the ||| transport	count=1
class	for use ||| digest credential	count=1
class	since ||| daily log file	count=2
function_arg	of filepaths representing my [function_1] [arg_2] ||| python file path glob [function_1] [arg_2]	count=3
class	the ||| mail	count=1
module	stop performing the given ||| conch	count=1
class	task retrieving ||| cooperative task	count=2
function	and ||| get	count=1
class	for ||| delivery base	count=1
module	check if this ||| python	count=7
arg	a byte string into ||| strio	count=1
function	store an [function_2] ||| [function_1] [function_2]	count=4
class	calls to this ||| generator	count=1
class	a ||| digest credential factory	count=4
module	once the ||| python	count=1
arg	a hostname [arg_2] ||| [arg_2] [arg_1]	count=3
class	initiate ||| base feature initiating initializer	count=1
function	remove the private ||| remove identity	count=1
class	failure's type ||| failure	count=1
function	[function] of ||| [function]	count=12
function	string ||| build	count=1
arg	channel ||| channel	count=12
function_arg	[function_1] [arg_2] ||| [function_1] user channel [arg_2]	count=2
function	[function_1] sanity of ||| [function_2] [function_1]	count=1
class	and setup ||| saslinitiating initializer	count=1
module	printable bytes to the ||| conch insults	count=1
function	l{servicemanager}, using the ||| build service manager	count=1
class	entry in ||| entry	count=1
class	the group conversation and ||| igroup conversation	count=1
function	the lookout for ssi ||| ssi	count=1
function	resolve an ||| resolve	count=1
function	object from [function_2] ||| [function_1] [function_2]	count=2
function	to remove [function_2] ||| [function_2] [function_1]	count=1
class	make [class_2] ||| [class_1] [class_2]	count=1
function	some polite text exhorting ||| string	count=1
function	messages which share ||| kex dh gex group	count=1
arg	with ||| auth	count=1
function	to a string ||| to	count=1
module	for the version ||| conch	count=1
function	_wrappedfactory} or errback the ||| build protocol	count=1
module	been ||| internet	count=1
arg	change the [arg_2] ||| [arg_1] [arg_2]	count=3
module_class	of this ||| mail domain	count=1
function	[function_1] l{unicode}-mode ||| [function_1] [function_2]	count=1
function	subject of this ||| get subject	count=1
function	get a local ||| local	count=1
function	attribute name ||| get method name	count=1
function	as an alternative ||| get replacement	count=1
function	[function_1] handler ||| [function_1] [function_2]	count=1
function	interface of outgoing multicast ||| outgoing interface	count=1
arg	domain from the ||| answers domain	count=2
function	welcome from the server ||| irc rpl welcome	count=1
function	is ||| get deprecated	count=1
class	address we are ||| iunixdatagram	count=1
module	constructs a ||| words protocols	count=1
function	c{self _wrappedfactory} ||| build protocol	count=1
module_class	[module_1] marked for ||| [module_1] [class_2]	count=8
function	the fileno() of my ||| fileno	count=1
function	of each ||| list	count=1
function	to [function] ||| to cache and [function]	count=1
function	a textual and ||| as bytes and text	count=1
function	on this logger which ||| logger	count=1
function	a maildir ||| maildir	count=1
class	for this broker ||| broker	count=2
function	constructs a pre-built l{servicemanager}, ||| build	count=1
class	etc ||| maildir name generator	count=1
module	moduledict ||| python	count=1
arg	a message to a ||| message	count=3
class	l{iprocesstransport} provider ||| process monitor	count=1
class	this l{istreamclientendpoint} provider ||| endpoint	count=1
function	with the given ||| init	count=1
function	into an ip address ||| get host	count=1
module	the string ||| conch ssh	count=1
function	return the final ||| complete	count=1
function_arg	assert [arg_2] ||| [arg_2] [function_1]	count=3
module	this ||| positioning	count=1
function	to consider ||| replacement string	count=1
class	unique across all ||| name generator	count=1
function	bytes received either ||| received	count=1
class	string for a ||| base	count=1
module	the value ||| web	count=1
class	l{agent} that ||| agent	count=1
arg	of observers this will ||| observers discardbuffer redirectstandardio	count=1
function	arguments ||| exclusive arguments	count=1
arg	construct an ||| src dst	count=1
module	resource at the given ||| web	count=1
function	username password ||| password	count=1
function	the angular [function] of this ||| angle [function]	count=1
arg	particular perspective ||| perspective	count=1
module	return the ||| internet	count=1
function	the command [function_2] ||| [function_1] [function_2]	count=4
arg	domain the domain to ||| reactor service domain	count=1
function	a systemd [function] ||| [function]	count=3
function	wait for the ||| wait for	count=1
function	convert an ampbox ||| to	count=1
function	[function_1] [function_2] ||| [function_1] news [function_2]	count=2
function	new ||| new	count=4
class	select ||| saslinitiating initializer	count=2
function	first existing child ||| child	count=1
function	root object ||| root object	count=1
arg	given response and attempt ||| response method host	count=1
module	their string representations ||| trial	count=1
arg	l the list of ||| l	count=1
function	changed ||| changed	count=2
module	has ||| protocols jabber	count=1
module	rename the ||| mail	count=1
function	registration on a given ||| registration	count=1
function	and its file ||| collect	count=1
function	[function_1] conditions ||| [function_1] [function_2]	count=1
class	each ||| only receiver	count=1
function_arg	[function_1] xml ||| [arg_2] [function_1]	count=2
function_arg	[function_1] c{exception} ||| [arg_2] [function_1]	count=3
function	or l{ipv6address} ||| get host	count=1
function	refers to ||| isdir	count=2
class	authentication agent if there ||| user auth	count=1
function	log formatted log line ||| log formatter	count=1
arg	[arg] this ||| [arg]	count=1
function	determine whether the user-space ||| is	count=2
class	last ||| file	count=1
function	copy the ||| copy	count=1
function	[function_1] bad ||| [function_1] [function_2]	count=7
arg	[arg_1] broker ||| [arg_1] [arg_2]	count=1
function	set if [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] protocol ||| [function_1] unixdatagram address [arg_2]	count=1
class	www-authenticate challenge ||| digest	count=1
function	receive a msg_unimplemented message ||| unimplemented	count=1
function	whether ||| is	count=4
class	called by the xmlstream ||| connect authenticator	count=1
module	to the public key ||| conch ssh	count=1
arg	with a unique id ||| site uid	count=1
function	list of [function] ||| list dynamic [function]	count=1
function	any cleanup on ||| cleanup	count=1
class	proxy has been ||| proxy	count=3
module_class	the [class_2] ||| [module_1] _auth [class_2]	count=1
function	[function_1] string in ||| [function_1] [function_2]	count=1
class	given ||| itelnet transport	count=2
module_class	for this connection ||| internet connection	count=1
module	l{servicemanager}, ||| words protocols	count=1
function_arg	receive [arg_2] ||| [function_1] error [arg_2]	count=1
function	user to consider ||| string	count=1
function	a non-blocking socket ||| internet socket	count=1
function	[function_1] host that ||| [function_1] [function_2]	count=1
module_class	over the [class_2] ||| [module_1] [class_2]	count=2
function	path entry ||| entry	count=1
function	the timeout value ||| timeout	count=1
function	is held or not ||| is locked	count=1
function	a new message ||| new message	count=2
function	try to find ||| maybe find	count=1
arg	coordinator an l{iexclusiveworker} ||| coordinator	count=1
function	status change [function_2] ||| [function_1] [function_2]	count=1
function	name/domain object pair ||| popitem	count=1
function	recipient per envelope this ||| sent mail	count=1
class	as ||| factory	count=1
function_arg	[function_1] [arg_2] ||| positioning nmeaadapter [function_1] float [arg_2]	count=1
function	[function_1] [function_2] keys ||| [function_1] [function_2]	count=1
class	group ||| group	count=5
arg	whether [arg] themselves ||| pubkey [arg]	count=1
class	path ||| file path	count=7
function	polite ||| get replacement string	count=1
module_class	[module_1] pool ||| [module_1] httpconnection [class_2] put connection key connection	count=1
function_arg	[function_1] [arg_2] ||| [function_1] hostname [arg_2]	count=1
function	which ||| smart	count=1
function	serial [function_2] ||| [function_1] [function_2]	count=1
function	text to ||| to	count=1
module	attributes this ||| python	count=1
module	the url ||| web	count=1
arg	in the given ||| format	count=2
function	[function_1] this handle ||| [function_2] [function_1]	count=2
function	object for this ||| unique	count=1
function	i{sigchld} handler is the ||| handler	count=1
function_arg	[function_1] @param outiv ||| [function_1] [arg_2]	count=2
function_arg	failure [arg_2] ||| [arg_2] [function_1]	count=1
function	the the setup ||| get setup	count=1
function	envelope this will ||| mail	count=1
class	structure object reports on ||| singlepart message structure	count=1
module	to remote server ||| internet	count=2
arg	the xml ||| xs	count=1
class	[class] into a ||| [class]	count=1
function	the final one in ||| last gsvsentence	count=1
function	close the underlying connection ||| lose connection	count=1
function	single ||| single	count=2
class	c{key} by given ||| mem cache	count=2
module	that ||| conch	count=1
arg	key the key ||| key value	count=1
function_arg	[function_1] python ||| positioning nmeaadapter [function_1] float [arg_2]	count=3
function	formatted log line for ||| log	count=1
class	l{_isshconnectioncreator} provider which ||| endpoint	count=1
class	the message ||| mailbox append message task	count=1
function_arg	@param reactor an ||| init reactor	count=1
class	of my process's ||| writer	count=1
module_class	proxy the [module_1] [class_2] ||| [module_1] [class_2]	count=1
class	local ||| local	count=1
class	a web context factory ||| deprecated to current policy	count=1
function	compute ||| compute	count=2
arg	issue a query to ||| query servers timeout	count=1
class	we will stop performing ||| transport	count=1
class	'message' ||| reporter	count=1
class	signal handlers if ||| signal reactor mixin	count=1
function_arg	selected [arg_2] ||| [function_1] [arg_2]	count=2
function	generate a string ||| generate	count=1
module	failure's ||| python	count=1
class	of this ||| cert base	count=1
function	key object ||| key	count=2
function_arg	[function_1] coordinator ||| [function_1] [arg_2]	count=1
function	sent we will ||| sent	count=1
function	quote an iterable ||| quote	count=1
arg	protocol to a ||| factory timeout checkpid	count=1
module	to the server ||| conch ssh	count=1
arg	[arg_1] host name ||| [arg_2] [arg_1]	count=1
function	set the c{_deprecated_info} flag ||| get deprecated	count=1
module_class	[module_1] peer ||| [module_1] [class_2]	count=12
function	[function_1] sequence of ||| [function_2] [function_1]	count=1
function	number and device ||| device	count=1
function	object it is running ||| get deprecated	count=1
function	all [function] ||| list [function]	count=1
function	helper returning files and ||| get files and	count=1
function_arg	[function_1] registered ||| [function_1] adapter factory [arg_2]	count=1
arg	user the ||| user channel	count=1
function	return a [function_2] ||| [function_1] deprecation warning [function_2]	count=2
arg	[arg] protocol ||| [arg] protocol clientaddr	count=1
function_arg	the response [arg_2] ||| [function_1] [arg_2]	count=3
function	tag ||| tag end	count=2
arg	a callback and ||| callback	count=1
module	and the ||| internet	count=1
class	the underlying pkey object ||| public	count=1
function	return the number ||| get	count=1
class	this test if any ||| test case	count=1
module_class	once the news ||| python news builder	count=1
function	the display [function_2] ||| [function_2] [function_1]	count=4
function	from a l{str} ||| from string	count=1
function	into a ||| to	count=1
function	client endpoint from a ||| client from	count=1
function	notify all pending requests ||| notify waiters	count=1
function	any of the ||| get deprecated	count=1
class	is intended to ||| name generator	count=1
function	[function_1] as ||| [function_2] [function_1]	count=2
function_arg	notify [arg_2] ||| [function_1] [arg_2]	count=2
arg	[arg_1] port ||| value [arg_1] [arg_2]	count=3
class	function across ||| maildir name generator	count=1
function	find an unused directory ||| unused test directory	count=1
arg	destination and application payload ||| payload	count=2
class	set ||| transfer client	count=1
function	status [function_2] ||| [function_2] [function_1]	count=2
class	message as it is ||| message	count=1
function	started set up instance ||| started	count=1
function	yield in source ||| source lines	count=1
function	api with ||| replacement string	count=1
class	relayed ||| manager	count=1
function	reset the [function_2] ||| [function_2] [function_1]	count=2
arg	whether an event ||| event	count=2
function	[function_1] endpoint from ||| [function_1] [function_2]	count=7
arg	the given [arg] sent ||| sender recipient [arg]	count=1
function	[function_1] prefix ||| [function_2] [function_1]	count=12
module_class	platform? @return boolean indicating [module_1] [class_2] not ||| [module_1] [class_2]	count=2
function	time return a ||| get	count=1
module_class	[module_1] via header ||| [module_1] [class_2]	count=2
arg	mapping strings ||| strings objects	count=1
function_arg	[function_1] client protocol ||| [arg_2] [function_1]	count=1
class	process's ||| process writer	count=1
function_arg	a list [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] previously generated ||| [arg_2] [function_1]	count=1
class	the given configuration ||| app	count=1
class	pool ||| pool	count=3
function	is no longer connected ||| connection lost	count=1
arg	connects ||| protocol maxpacketsize	count=1
arg	connects ||| protocol maxpacketsize mode	count=1
function	a thread from the ||| thread	count=1
arg	of a given ||| name	count=1
function	password ||| get password	count=1
class	tls negotiation and ||| tlsinitiating initializer	count=1
function	connect the given protocol ||| connect	count=1
function	internal create a ||| create internet	count=1
function	a property ||| property	count=1
function	to its [function_2] ||| [function_2] [function_1]	count=2
arg	return true [arg] represents ||| [arg]	count=1
class	log levels ||| log level	count=1
function_arg	authentication failure ||| eb unexpected failure	count=1
arg	host a hostname used ||| host port timeout	count=1
module	later delivery to the ||| conch	count=2
function	unjelly an abstract ||| unjelly	count=1
function	a full ||| full	count=1
arg	opener a ||| opener	count=1
class	treating the archive ||| archive	count=1
function	[function_1] factory which ||| [function_2] [function_1]	count=3
function	start producing ||| start producing	count=1
function	schedule a retry attempt ||| wait	count=1
module	the object [module] wrap ||| [module]	count=1
function	a ||| from	count=1
function	delete ||| delitem	count=1
function	corresponding to this private ||| string private blob	count=1
module	when ||| ssh	count=1
function	the stream window ||| stream window	count=2
function	no more body data ||| body data finished	count=1
function	success in ||| success	count=1
module_class	with [class_2] ||| [module_1] [class_2]	count=2
function	sequence is received ||| sequence	count=1
function	blob ||| blob	count=1
arg	given namespaces ||| globals locals	count=1
arg	domain to connect ||| reactor service domain	count=1
module	the underlying pkey ||| internet	count=1
class	that this component ||| component	count=1
arg	protocol to ||| protocol maxpacketsize mode	count=1
function	a test method test ||| test	count=1
arg	method for the server ||| description	count=1
arg	topic [arg_2] ||| [arg_2] [arg_1]	count=2
function	successfully posted to one ||| post request	count=1
function	this will ||| mail	count=1
function	personal [function_2] ||| [function_1] [function_2]	count=1
class	@return true ||| idelayed	count=1
function	service is stopped ||| service stopped	count=3
function	this private ||| string private	count=1
arg	article to a ||| article	count=1
arg	date ||| date	count=1
module	of available threads by ||| python	count=1
function_arg	[function_1] coordinator an ||| [function_1] [arg_2]	count=1
function	modification ||| get modification	count=1
module	called when the ||| conch ssh	count=12
class	web context factory in ||| policy	count=1
function	[function_1] into ||| [function_1] [function_2]	count=4
function	package ||| package paths	count=2
function_arg	line of [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	string @param [arg_2] ||| [arg_2] [function_1]	count=8
function	[function] of entities ||| list dynamic [function]	count=1
function	a character [function_2] ||| [function_2] [function_1]	count=1
class	intended ||| name generator	count=1
function	is still active false ||| active	count=1
module	syspath and moduledict ||| python	count=1
function	request ||| request ssi	count=2
class	attribute value ||| attribute	count=1
function	find the value of ||| value	count=1
function	iterate all [function_2] ||| [function_2] [function_1]	count=4
arg	string into a ||| cls s	count=1
function	to close [function_2] ||| [function_2] [function_1]	count=1
class	a random value suitable ||| credential	count=1
function	the other ||| close	count=1
function	executing the ||| responder	count=1
function	copy ||| copy	count=3
function	and return [function_2] ||| [function_1] [function_2]	count=5
function	as expressed ||| waiters	count=1
function	append given data ||| append	count=1
function	currently selected article ||| fetch article	count=2
function	a person ||| person	count=1
function	the consumer by pausing ||| pause	count=1
class	across ||| generator	count=2
function	issue a query to ||| query	count=1
function	to remove [function_2] ||| [function_1] [function_2]	count=1
function	for subnegotiations for ||| subnegotiation	count=1
class	retry attempt ||| machine	count=1
class	this function ||| generator	count=1
arg	and writers and list ||| writers	count=1
function	use the inotify api ||| supports inotify	count=1
class	[class_1] installed ||| [class_2] [class_1]	count=2
module_class	the pool ||| web httpconnection pool	count=1
class	is ||| failure	count=1
class	glib ||| glib	count=1
arg	[arg_1] to user ||| [arg_2] [arg_1]	count=4
class	file ||| file body	count=1
function_arg	a select [arg_2] ||| [function_1] [arg_2]	count=2
arg	reactor ||| reactor	count=10
function_arg	success to [arg_2] ||| [function_1] [arg_2]	count=1
class	remote ||| remote	count=2
function	build [function_2] ||| [function_2] [function_1]	count=2
class	frame references [class_2] ||| [class_2] [class_1]	count=8
function	replacement ||| replacement string	count=1
class	position ||| position error	count=2
function	for public ||| factory	count=1
function	print [function_2] ||| [function_2] [function_1]	count=7
function	request to be ||| request	count=1
module	select and setup ||| words protocols	count=1
module	[module_1] when ||| [module_1] [module_2]	count=3
arg	value ||| value	count=3
function_arg	[function_1] pair ||| [arg_2] [function_1]	count=1
class	domain names in ||| domain	count=1
class	across all processes ||| maildir name generator	count=1
arg	version ||| version	count=2
function	options to the optflags ||| options	count=1
function	find [function_2] ||| [function_1] [function_2]	count=8
class	of l{taskfinished} ||| cooperative	count=1
function	socket and its file ||| collect socket	count=1
function	as the ||| generate	count=1
class	and log out ||| base	count=1
function_arg	a msg_disconnect [arg_2] ||| [arg_2] [function_1]	count=1
module	from modules instance of ||| trial	count=1
arg	to refer to ||| autologin username password	count=1
class	a www-authenticate ||| digest credential factory	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] element	count=4
function	convert to ||| to	count=1
function	of certificate [function] ||| sign certificate [function]	count=3
class	date ||| file	count=1
class	all calls ||| name	count=1
arg	accountname a [arg_2] ||| [arg_1] [arg_2]	count=2
function	create ||| generate	count=1
class	start ||| ibox receiver	count=1
module_class	[module_1] completion function ||| [module_1] [class_2]	count=4
class	calls to this function ||| maildir name	count=1
arg	value ||| attrib value	count=1
module_class	of this certificate ||| internet certificate	count=1
class	spawn ||| process alias	count=1
arg	hostname and ||| hostname	count=1
class	report ||| result	count=2
function	failure [function_2] ||| [function_1] [function_2]	count=1
arg	been established ||| xs	count=1
function	start calling ||| start receiving	count=1
class	l{hostnameendpoint} ||| hostname endpoint	count=1
class	this is the ||| dispatcher	count=1
function	and ignore ||| ignore and	count=1
module_class	[module_1] server ||| [module_1] ssh sshagent [class_2]	count=1
function	reply ||| make reply	count=2
function	print a [function_2] ||| [function_1] [function_2]	count=4
module	[module_1] the encryption ||| [module_1] [module_2]	count=1
function	be sent while key ||| allowed key	count=1
function	some polite text ||| string	count=1
arg	protocol ||| processprotocol executable args	count=1
module_class	[module_1] [class_2] buffer ||| [module_1] [class_2] finish	count=4
function	to a ecdh exchange ||| kex ecdh	count=1
module	[module] the ||| conch [module]	count=1
arg	this key ||| key	count=1
function	the ||| should	count=1
arg	and an optional message ||| message	count=1
module_class	the certificate ||| internet certificate	count=1
class	unixtime to ||| daily log file	count=1
arg	[arg] for ||| [arg]	count=10
function	connect the given ||| connect	count=1
arg	check whether a user ||| user	count=1
function	in the known_hosts file ||| in known hosts	count=1
module	the string a ||| conch	count=1
function	boolean or of the ||| boolean or	count=1
function	that certificate verification ||| verification	count=1
class	return ||| imailbox imap	count=2
arg	with the given queries ||| address queries timeout id	count=1
function	i{x-forwarded-for} header ||| proxied	count=1
class	in a non-blocking fashion ||| itransport	count=1
function	modules ||| name	count=1
module_class	over the domain ||| mail domain	count=1
function	degrees this value is ||| degrees	count=1
function	unhandled time to ||| unhandled	count=1
arg	parent then default to ||| parent	count=1
function	to ||| to new	count=1
arg	[arg_1] addresses ||| [arg_2] [arg_1]	count=7
function_arg	[function_1] a string ||| [arg_2] [function_1]	count=1
arg	indication of what ||| host serv_name username	count=1
arg	@type file ||| file	count=1
arg	print 'message' in ||| message	count=1
module	of a www-authenticate challenge ||| cred	count=1
function	l{ipv6address} indicating ||| host	count=1
arg	ssl ||| certificate	count=2
function	return a l{key} from ||| get public	count=1
class	factory was ||| factory	count=1
function	it ||| replacement	count=1
class	print 'message' in the ||| tree reporter	count=1
module	the epoll() ||| internet	count=1
function	add a [function_2] ||| [function_1] [function_2]	count=6
class	moduledict in a ||| python path	count=1
arg	cacerts the certificate ||| cacerts	count=1
function	to [function_1] [function_2] ||| to [function_1] [function_2]	count=7
class	value suitable ||| digest credential factory	count=1
class	given configuration ||| app	count=1
class	create ||| credential	count=1
class	create a ||| credential factory	count=1
function	the service ||| eb service	count=1
class	@param ||| endpoint factory	count=1
function	pkey object ||| key	count=1
function	print 'message' in the ||| end line	count=1
function	possibly available ||| opt help reactors	count=1
function_arg	[function_1] prefixes ||| [function_1] [arg_2]	count=2
function	it is running on ||| deprecated	count=1
function	the hostname ||| hostname	count=1
module	to [module] c{'connection_lost'} ||| [module]	count=1
class	create ||| path entry	count=1
function	send as much ||| write some	count=1
function	altitude this [function] ||| [function]	count=1
module	the outgoing ||| conch ssh	count=1
class	a c{datetime datetime} instance ||| date time	count=1
class	of resource resource's ||| name virtual host	count=1
function	mail exchange host ||| cb mx	count=1
arg	they aren't value constants ||| cls level	count=1
module_class	[module_1] console ||| [module_1] client [class_2] prompt	count=1
function	[function_1] log observer ||| [function_2] [function_1]	count=2
arg	a reason ||| reason	count=1
function	to the ssi server ||| ssi	count=1
class	and moduledict in a ||| path	count=1
function	arrives over the ||| received	count=1
arg	the error is a ||| error	count=1
function	[function_1] closed ||| [function_1] [function_2]	count=2
function	of the ||| get deprecated	count=1
class	apply ||| monkey patcher	count=1
class	the test has ||| test	count=1
function	template for unsupported ||| unsupported	count=1
function	parses partial visible satellite ||| fix	count=1
arg	[arg] calling this ||| [arg]	count=1
function	process ends with ||| process ended	count=1
function	wait until we acquire ||| defer until	count=1
function_arg	with the [arg_2] ||| [function_1] stream [arg_2]	count=1
function	retrieve a static or ||| get	count=1
module_class	with this [class_2] ||| [module_1] [class_2]	count=8
arg	the flags for one ||| flags silent	count=1
function_arg	[function_1] c{message} ||| [arg_2] [function_1]	count=3
arg	mapping strings to ||| strings objects	count=1
class	iresource implementor at ||| iresource	count=1
function	passed [function] ||| [function]	count=1
module	when the ||| web	count=3
arg	[arg_1] [arg_2] ||| [arg_2] [arg_1]	count=360
module	function ||| mail	count=1
arg	suffix ||| suffix prefix	count=1
function	the user-space send ||| send	count=2
function	visible satellite ||| fix	count=1
function	[function_1] warning suppressions ||| [function_2] [function_1]	count=1
module	msg_userauth_passwd_changereq the ||| conch ssh	count=1
module	the response for range ||| web	count=1
arg	[arg_1] dns records ||| [arg_1] [arg_2]	count=3
class	zippath by looking at ||| zip	count=1
function	has made a global ||| ssh global	count=1
function	private ||| private blob	count=2
function_arg	a msg_unimplemented [arg_2] ||| [arg_2] [function_1]	count=1
class	workers ||| thread pool	count=1
class	stdin ||| process writer	count=1
function	new [function_2] ||| [function_1] [function_2]	count=5
function	single list ||| list	count=1
arg	specified text to ||| text	count=1
function	[function_1] logging to ||| [function_1] [function_2]	count=1
function	from the module ||| from	count=1
class	this dictionary ||| default dict	count=3
function	connection over the underlying ||| make connection	count=1
arg	[arg_1] l{ireactorunix} provider ||| [arg_2] [arg_1]	count=1
function	an id ||| id	count=2
function	[function_1] from an ||| [function_2] [function_1]	count=3
function	reception of one stat ||| cmd stat	count=1
function	function is an optional ||| function	count=1
arg	l{error} subclass ||| fail requestid	count=1
arg	observers this ||| observers discardbuffer	count=1
arg	a specific header ||| header	count=1
function	returns any [function_2] ||| [function_2] [function_1]	count=3
class	l{_gzipprotocol} ||| gzip decoder	count=1
function	proxy the resumption ||| resume	count=1
function_arg	[function_1] [arg_2] with the specified c{nodeid} ||| [function_1] [arg_2] nodeid	count=4
module	time out this ||| internet	count=1
class	be unique ||| generator	count=1
module	from a ||| positioning	count=1
arg	a message in the ||| user message	count=1
module	the string ||| conch	count=1
function	to mime [function_2] ||| [function_1] [function_2]	count=1
function_arg	service for [arg_2] ||| [arg_2] [function_1]	count=1
function	a string ||| string proto	count=1
class	[class_1] file ||| [class_1] [class_2]	count=5
module	is ||| web	count=1
class	test has [class_2] ||| [class_2] [class_1] add cleanup	count=1
function	a windows error ||| format error	count=1
arg	and the object it ||| wrapped	count=1
arg	[arg] sessionno ||| sock protocol [arg]	count=1
function	been ||| connection lost	count=2
arg	a domain name ||| name	count=1
arg	to define behavior ||| message addr	count=2
class	context factory ||| context factory to connection factory	count=1
function	[function_1] resource ||| [function_1] [function_2]	count=4
function	[function_1] cache ||| [function_1] [function_2]	count=1
function	is connected ||| connected	count=1
module	inspect the ||| web	count=1
class	processes reboots ||| generator	count=1
function	invoke it ||| remote	count=1
class	path in ||| file path	count=1
class	message as it is ||| mailbox append message task	count=1
module	select ||| jabber	count=1
module	xmlstreamfactory [module] ||| words [module]	count=3
function	or was lost ||| or	count=1
function_arg	write [arg_2] ||| [function_1] [arg_2]	count=16
module	for ||| cred	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] eq	count=3
function	for when raw ||| raw	count=1
function	connects ||| listen	count=1
function	[function_1] made to ||| [function_1] [function_2]	count=3
module	scheme and ||| web	count=1
function	stream server endpoint ||| stream server	count=2
function	for a deprecated ||| get	count=1
class	display my ||| python	count=1
function_arg	the process [arg_2] ||| [arg_2] [function_1]	count=2
function	and returns a deferred ||| output and	count=1
function	print all of the ||| print errors	count=1
function	protocol configured with ||| protocol	count=1
function	has received a chunk ||| data chunk	count=1
class	the given [class_2] ||| [class_2] [class_1]	count=10
class	be unique ||| name	count=1
function_arg	[function_1] a disconnect ||| [function_1] error [arg_2]	count=1
arg	byte data for ||| data	count=1
function	object in a ||| call in	count=1
class	[class_1] data represents ||| [class_2] [class_1]	count=4
class	list of all domain ||| domain with	count=1
function	[function] the ||| [function]	count=4
class	reschedule this call ||| call	count=1
class	that this port ||| port	count=1
arg	filename of a ||| filename	count=2
function	regular file ||| isfile	count=1
arg	channel this should ||| channel	count=1
class	which this channel ||| channel	count=1
function	and a c{datetime ||| date	count=1
module	when it is ||| conch	count=1
class	selectable ||| win32reactor	count=1
function	request data and ||| request	count=1
function	full ||| full	count=1
function_arg	[function_1] information about ||| [arg_2] [function_1]	count=1
arg	one of three formats ||| datestring	count=1
function	authentication will return ||| get	count=1
function	from this ||| from	count=1
arg	messages related to c{applicationobject}, ||| applicationobject	count=1
function	for ||| get replacement	count=1
function_arg	item [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] io ||| [class_2] [class_1]	count=1
function	of messages waiting ||| waiting	count=1
arg	of c{query} ||| msgid msg lastsequenceid	count=1
function	after successfully signing on ||| signed on	count=1
function	match plugin to prefix ||| match plugin to prefix	count=1
arg	a version ||| fileobj	count=1
arg	an object to ||| object	count=1
function	string representation of this ||| repr	count=1
module_class	iteration and reset ||| internet looping call	count=1
module	the stream ||| web	count=1
function	using ||| service	count=1
function	modification ||| change	count=1
module	all of [module] c{testsuiteorcase} ||| [module]	count=1
function	attribute as ||| attribute	count=1
module	and ||| protocols	count=1
function_arg	[function_1] endpoint description ||| [arg_2] [function_1]	count=6
arg	accountname a [arg_2] ||| [arg_2] [arg_1]	count=2
arg	the given ||| name value	count=1
class	of [class] passed as ||| [class]	count=1
function	[function] process ||| [function] process	count=1
class	called when ||| protocol	count=1
function	processing while a long ||| long	count=1
arg	the real [arg] ||| [arg]	count=3
arg	and account client ||| client	count=2
function_arg	leaves the [arg_2] ||| [arg_2] [function_1]	count=1
class	this key ||| key pair	count=2
module	create ||| cred	count=1
arg	osslpkey the underlying ||| osslpkey	count=1
arg	of c{query} possibly more ||| msgid msg lastsequenceid	count=1
function	message ||| irc	count=1
function	adapter class ||| adapter	count=1
function	[function_1] uid of ||| [function_2] [function_1]	count=1
arg	return whatever tests that ||| thing recurse	count=1
function	a deprecated api with ||| replacement	count=1
class	within the archive ||| archive	count=1
function_arg	[function_1] three formats ||| [function_1] to datetime [arg_2]	count=2
class	initializes a ||| sshpublic key	count=1
arg	received lines for the ||| line	count=2
function	the likely uid ||| uidnext	count=1
function	of possibly available ||| opt help reactors	count=1
class	monitor [class_2] ||| [class_2] [class_1]	count=6
arg	fixes ||| coordinatetype sentencedatakey	count=1
function	that will ||| ensure	count=1
class	this formatting state has ||| formatting state	count=1
arg	deliver a datagram ||| datagram	count=1
function	all child elements ||| elements by	count=1
function	consider ||| string	count=1
class	internal parser ||| parser	count=1
module	be ||| internet	count=2
function	fileno() ||| fileno	count=1
function	a server address and ||| server address and	count=1
class	as a zip file ||| zip	count=1
arg	[arg_1] port ||| [arg_1] [arg_2]	count=5
function	[function_1] of failed ||| [function_1] [function_2]	count=1
class	key ||| sshpublic key	count=1
function	list of disconnect ||| dont notify on disconnect	count=1
class	certificate authorities to trust ||| open sslcertificate authorities	count=1
function	of human-readable text for ||| text	count=1
class	to domain object ||| domain with	count=1
function	all of the ipv6 ||| aaaa	count=1
arg	server challenge ||| challenge	count=2
class	the avatar to be ||| avatar	count=1
function	is ||| boxes	count=1
arg	name and if ||| name	count=1
function	the hashed username ||| hash	count=1
arg	message an [arg_2] ||| [arg_1] [arg_2]	count=6
function_arg	read [arg_2] ||| [function_1] [arg_2]	count=2
module	the file description ||| internet	count=2
arg	an alternate constructor ||| cls countcallable	count=1
function	segments between ||| segments	count=1
function	the end [function_2] ||| [function_2] [function_1]	count=4
function	get a list of ||| get	count=1
function	is still active ||| active	count=1
function	flow control [function_2] ||| [function_2] [function_1]	count=1
function	the last access ||| access	count=1
function	exhorting the ||| string	count=1
module	the private ||| conch	count=1
function	all keys from ||| all identities	count=2
function	given file [function_2] ||| [function_1] [function_2]	count=1
class	file [class_2] ||| [class_1] [class_2] fileno	count=1
module	character ||| conch insults	count=1
function	the object ||| get	count=1
function	particular authentication type ||| auth type	count=2
module	for the ||| conch	count=2
class	this pidfile ||| ipidfile	count=1
arg	provided value ||| value	count=1
arg	service ||| reactor service	count=1
function_arg	avatar which [arg_2] ||| [arg_2] [function_1]	count=4
class	the initialization ||| feature initiating	count=1
function	[function_1] connection has ||| [function_2] [function_1]	count=2
function	drives that ||| producing	count=1
arg	specified the sizes ||| i	count=1
arg	name base path ||| name	count=1
arg	of local files ||| files remotepath single	count=1
function	offset and [function_2] ||| [function_1] [function_2]	count=1
function	object to a string ||| string	count=1
arg	l{bytes} or l{unicode} ||| type cls ttl	count=1
module	the connection ||| conch	count=2
function	metadata to ||| state to	count=1
function	for public and private ||| factory	count=1
function	should be logged based ||| should	count=1
function	to special-case your state ||| state to publish	count=1
module	i am the ||| protocols	count=1
arg	writers and list ||| writers	count=1
function	for consuming [function_2] ||| [function_1] [function_2]	count=3
module	element items ||| words xish	count=2
arg	a new l{unixauthorizedkeysfiles} ||| userdb parsekey	count=1
class	certificate ||| cert base	count=2
module	the [module] instance passing ||| [module]	count=1
class	message to ||| append message	count=2
class	unique across all calls ||| maildir	count=1
arg	work on this thread ||| work	count=1
module_class	distinguishes this [class_2] ||| [module_1] [class_2]	count=8
class	the initialization ||| initializer	count=1
class	[class] new one ||| [class]	count=1
module	l{servicemanager}, ||| protocols jabber	count=2
class	ipv6 ||| aaaa	count=1
function	add certificate-authority certificates ||| add cacerts	count=1
module_class	[module_1] url ||| [module_1] [class_2]	count=10
function	connect to the ||| connect	count=1
function	user-space send [function_2] ||| [function_2] [function_1]	count=10
arg	[arg_1] and size ||| [arg_2] [arg_1]	count=2
class	string which is ||| name generator	count=1
function_arg	[function_1] state ||| [arg_2] [function_1]	count=1
class	called when l{httpchannel} has ||| ideprecated httpchannel to request	count=1
module	this base ||| python	count=1
arg	a [arg] if ||| [arg]	count=1
function	[function_1] local address ||| [function_1] [function_2]	count=1
arg	message from the ||| message	count=2
module	to ||| conch ssh	count=3
function	i'll [function] nicely-formatted ||| [function]	count=1
class	a random value ||| digest credential	count=1
module	for the ||| web _auth	count=1
class	path with a ||| path	count=1
class	in the ||| reporter	count=1
arg	l{twisted ||| contextfactory connecttimeout bindaddress	count=1
function	bytes received ||| data received	count=1
class	isupport ||| server supported features	count=2
function	[function] occurs ||| [function]	count=1
function	the receive bio ||| receive bio	count=1
module_class	[module_1] conversation ||| [module_1] [class_2]	count=4
arg	an article to a ||| article	count=1
class	set up an ||| endpoint	count=1
function_arg	send a [arg_2] ||| [function_1] short [arg_2] params	count=5
module	before sending the failure ||| conch ssh	count=1
arg	c{inode} with [arg_2] ||| [arg_2] [arg_1]	count=3
arg	publisher ||| publisher	count=1
function	[function_1] lost ||| [function_2] [function_1]	count=3
function	check [function_2] ||| [function_1] [function_2]	count=3
function	c{other} if ||| is equal	count=1
arg	[arg_1] the password ||| [arg_2] [arg_1]	count=1
class	threadpool ||| thread pool	count=2
arg	pre-built l{servicemanager}, ||| jid password	count=1
function	single file ||| single file	count=2
arg	received lines for ||| line	count=2
function	receiver which delivers a ||| receiver	count=1
module_class	[module_1] side and ||| [module_1] [class_2]	count=7
module	sets up the ||| trial	count=1
function	maximum line length ||| line length	count=2
function	and prepare to deliver ||| deliver body initial	count=1
function	end of [function_2] ||| [function_2] [function_1]	count=8
function	an expected failure ||| expected failure	count=2
function	a domain ||| domain	count=1
function	[function_1] next public ||| [function_1] [function_2]	count=1
module	the given ||| words	count=1
class	during and after phase ||| phase	count=1
module	using the ||| words protocols	count=1
module	l{servicemanager}, using ||| jabber	count=1
function_arg	[function_1] a function ||| [arg_2] [function_1]	count=1
function	two [function] ||| [function]	count=1
module	a deprecated api with ||| python	count=1
function	query and return ||| run query	count=1
arg	method the http method ||| method	count=1
function	specify ||| opt	count=1
function	[function_1] exchange is ||| [function_2] [function_1]	count=4
class	by the xmlstream ||| connect authenticator	count=1
class	suitable for use as ||| factory	count=1
module	flag part of ||| mail	count=1
function	flow control [function_2] ||| [function_1] [function_2]	count=1
function	end ||| end	count=3
function	of decorators and ||| deprecated	count=1
function	and of the ||| and	count=1
function	attribute name on ||| name	count=1
function_arg	channel [arg_2] ||| [arg_2] [function_1]	count=3
arg	the c{objects} ||| strings	count=1
class	a selectable for ||| win32reactor	count=1
class	of a www-authenticate ||| digest	count=1
function	add a skip to ||| add skip	count=1
function	send ||| send message	count=3
class	their string ||| janitor	count=1
function	handler for the ||| handler	count=1
function	the next file ||| next	count=1
module	a context ||| application	count=1
function	return a list ||| get	count=2
module	the user to consider ||| python	count=1
function	l{servicemanager}, ||| service	count=1
function	from an event ||| from event	count=2
module	the given value ||| python	count=1
module	a context ||| runner	count=1
module	user portion [module] c{userinfo}; ||| [module]	count=1
class	channel to run ||| channel	count=1
class	this conversation ||| conversation	count=1
function	replace a ||| replace	count=1
function	return a l{gitcommand} ||| get	count=1
function	a twisted ||| deprecated	count=1
function	marked todo ||| todo	count=1
function_arg	[function_1] l{remotereference} and ||| [function_1] [arg_2]	count=1
arg	send a message to ||| message length	count=2
function	a recommended subscription ||| opt subscription	count=1
function	port command ||| generate port command	count=2
function	a successful ||| cb	count=1
function	to close ||| close	count=1
class	is called when ||| receiver	count=1
class	uri ||| uri	count=1
function	[function_1] directories in ||| [function_2] [function_1]	count=4
function	as much of c{data} ||| some data	count=1
function	to a list ||| list	count=1
function	rotate when the date ||| should rotate	count=1
function	given server ||| server	count=1
class	mailbox ||| imap	count=1
function_arg	[function_1] data ||| [function_1] to fd fd [arg_2]	count=1
module	have the same number ||| web	count=1
arg	given python source ||| source	count=1
class	reboots etc ||| generator	count=1
arg	the reason ||| reason	count=1
class	suitable for use as ||| digest credential factory	count=1
function	default appropriate for the ||| default	count=1
function	connected to this protocol ||| protocol	count=1
function	as an ||| get	count=1
arg	[arg_1] size ||| [arg_2] [arg_1]	count=2
module	this entry ||| python	count=1
function_arg	create a [arg_2] ||| [arg_2] [function_1]	count=14
function	keyword arguments and collect ||| collect	count=1
function	given ||| search	count=1
class	returns an l{ipv4address} ||| server	count=1
arg	domain ||| domain factory	count=1
class	has changed since ||| daily log file	count=1
arg	key given by c{blob} ||| blob	count=1
module	'message' in the ||| trial	count=1
class	log [class_2] ||| [class_1] [class_2]	count=6
arg	query ||| query id	count=4
class	the ||| factory	count=1
module	[module] a l{deferred} ||| [module]	count=1
arg	given text as a ||| text	count=1
class	reactor ||| wx reactor	count=4
class	an offset ||| offset	count=1
function_arg	currently selected [arg_2] ||| [function_1] [arg_2]	count=2
function	a given port ||| generate port	count=1
function_arg	[function_1] [arg_2] ||| [function_1] request [arg_2]	count=3
function	if the process ends ||| process ended	count=1
function	version information ||| version	count=1
function	i'll [function] ||| [function]	count=1
function	[function_1] method to ||| [function_2] [function_1]	count=1
function	a hemisphere ||| fix hemisphere	count=1
class	reactor ||| reactor selection mixin	count=2
function	shell code representing ||| shell code	count=2
function	l{istreamserverendpoint listen} to listen ||| listen	count=1
function	replace ||| replace	count=2
module	indicate that we ||| conch	count=1
class	syspath and moduledict ||| python	count=1
function	to c{path} ||| to filesystem encoding	count=1
class	[class] to ||| iterator [class]	count=3
arg	of plaintext login ||| username	count=1
function	from ||| from message	count=2
class	deferred ||| queue	count=1
module_class	[module_1] has been ||| [module_1] [class_2]	count=2
function	a ||| get replacement string	count=2
class	a unixaddress ||| unixport	count=1
arg	the flags of ||| flags mode	count=1
class	this function ||| maildir name	count=1
function	via ||| call remote	count=1
class	reactor ||| glib reactor base	count=2
arg	a reason that ||| reason	count=1
function	list of possibly available ||| opt help reactors	count=1
function_arg	for [arg_2] ||| [function_1] [arg_2]	count=5
function	of a message ||| get message	count=3
class	allow ||| security options	count=1
function	to request early ||| abort request	count=2
class	path in ||| path	count=1
class	for use as the ||| credential factory	count=1
class	a ||| base speed	count=2
module	fields the ||| mail	count=1
arg	port to listen on ||| port factory backlog	count=1
function	similar to ||| to	count=1
function	a digest hash ||| digest	count=1
function	[function_1] with the ||| [function_2] [function_1]	count=4
module	from the network ||| web	count=1
function_arg	[function_1] of c{tag} ||| [arg_2] [function_1]	count=2
module	parses partial visible ||| positioning	count=1
function	groups from ||| groups	count=1
function_arg	log prefix [arg_2] ||| [function_1] [arg_2]	count=5
arg	in ||| message	count=1
module	this failure's type ||| python	count=1
class	given l{filedescriptor} for monitoring ||| glib reactor base	count=1
function	is an entity header ||| is	count=1
function	string ends [function_2] ||| [function_1] [function_2]	count=2
module_class	[module_1] line ||| [module_1] [class_2]	count=4
function	enter a context using ||| enter	count=1
arg	c{blob} ||| blob data	count=1
class	child process ||| process	count=1
class	my ||| python path	count=1
function	and puts method names ||| method names	count=1
function	the ||| get replacement string	count=1
function	parent ||| parent	count=1
arg	name in the filesystem ||| fn	count=1
class	last write ||| log file	count=1
function	tls context object ||| context	count=1
module	and reset the ||| protocols	count=1
class	date ||| log	count=1
module	the ||| web _auth	count=2
class	charstr ||| charstr	count=1
function_arg	[function_1] l{localworkeramp} ||| [arg_2] [function_1]	count=1
function	"list modes" a client ||| maxlist	count=1
function	share an integer ||| ssh kex dh gex group	count=1
function	resolve address family for ||| set address family	count=1
function	[function_1] options ||| [function_2] [function_1]	count=2
function	c{importerror} is ||| require	count=1
arg	given group over the ||| group low high header	count=1
module	if the ||| python	count=2
function	into name repr ||| repr	count=1
class	task completed with a ||| maildir mailbox append message task	count=1
function_arg	[function_1] id ||| [arg_2] [function_1]	count=1
arg	new instance using an ||| cls cipherstring	count=1
module	exhorting the user to ||| python	count=1
module	path to ||| conch ssh	count=1
class	return their ||| janitor	count=1
arg	using the specified strport ||| jid password strport	count=1
arg	from a response ||| response	count=1
arg	path as a list ||| path	count=1
arg	[arg] with ||| [arg] nodeid	count=1
function	[function_1] the socket ||| [function_2] [function_1]	count=3
module	a pre-built l{servicemanager}, ||| protocols	count=1
function_arg	[function_1] url ||| [function_1] [arg_2]	count=1
module	is used by the ||| web	count=1
function_arg	method [arg_2] ||| [arg_2] [function_1]	count=3
module	when a connection has ||| protocols jabber	count=2
function	and to [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] control header ||| [function_1] [function_2]	count=6
function	percent-encode only ||| minimal percent encode	count=2
function	of [function] ||| list static [function]	count=1
class	object ||| public	count=1
class	reference ||| reference	count=1
class	the log ||| line log	count=1
function	of a tcp connection ||| connection	count=1
function_arg	join a [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	register/unregister [arg_2] ||| [function_1] [arg_2]	count=3
class	print 'message' in the ||| tree	count=1
class	string which is ||| name	count=1
arg	to ||| manager	count=3
module	the user ||| conch ssh	count=3
arg	1 ||| resp numok	count=1
function	get ||| get if	count=1
module	the server ||| mail	count=1
function	has been ||| connection	count=1
class	for valid ||| reactor base	count=1
function	hard links ||| hard links	count=1
class	with a different node ||| node	count=1
function	some polite ||| get replacement string	count=1
module	arrange for it to ||| names	count=1
function	l{bucket} corresponding ||| bucket	count=1
function	number ||| fileno	count=1
function	ascii bytes representation of ||| bytes	count=1
arg	an event dict ||| eventdict	count=1
arg	client protocol to ||| protocol maxpacketsize mode	count=1
function	service from this application ||| get service	count=1
function	broadcast this ||| broadcast	count=2
class	ansi color ||| ansi parser	count=2
module	user to consider it ||| python	count=1
function	a [function] ||| make [function]	count=2
module	before sending [module_2] ||| [module_2] [module_1]	count=4
function	remove the protocol ||| remove protocol	count=3
function	expected [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] attributes ||| [function_2] [function_1]	count=2
arg	or more [arg_2] ||| [arg_2] flags silent [arg_1]	count=2
class	the speed that ||| base speed	count=1
module_class	of position ||| positioning position error	count=1
function	ciphers to ||| select ciphers	count=1
function	message for removing all ||| agentc remove all	count=1
function	a new request ||| request	count=1
arg	a true heading is ||| heading	count=1
arg	group over the ||| group low	count=1
module	disconnect message to the ||| conch	count=1
arg	string referring ||| pathname	count=1
module	the given ||| web	count=13
function	remove from the ||| remove	count=1
class	has changed since last ||| file	count=1
class	connect ||| ireactor unix	count=1
class	and exit ||| options	count=1
function	an [function_1] [function_2] e g traditional ||| [function_1] [function_2]	count=2
class	create a new l{agent} ||| agent	count=1
arg	host name and ||| host	count=1
arg	http header and ||| request	count=1
arg	consumer ||| consumer	count=2
function	bytes representation of that ||| bytes	count=1
function	malformed ||| authmalformed	count=1
class	all calls to this ||| name	count=1
arg	in data ||| data	count=1
function	disconnect ||| dont notify on disconnect	count=1
function	[function_1] thread ||| [function_2] [function_1]	count=5
class	messages via amp ||| box dispatcher	count=1
function	[function_1] state in ||| [function_2] [function_1]	count=6
class	to the [class_2] ||| [class_2] [class_1]	count=2
function	an ip address ||| host	count=1
module	closed the ||| conch	count=1
class	to copy ||| copy	count=1
module	of the string ||| conch ssh	count=1
function	of the command ||| command	count=1
module	a random value suitable ||| cred	count=1
module	messages ||| protocols	count=1
function	a local ||| local	count=1
arg	nonce ||| nonce clientip	count=1
function	stopped either by ||| stopped	count=1
function	[function_1] attribute value ||| [function_2] [function_1]	count=2
function	[function_1] exchange is ||| [function_1] [function_2]	count=4
function	to enable [function_2] ||| [function_2] [function_1]	count=1
arg	person the person ||| person	count=1
class	date has changed ||| file	count=1
class	formatting state has ||| default formatting state	count=2
module	this ||| words	count=3
class	netstring ||| netstring	count=1
arg	leave that responsibility ||| immediate	count=1
function	string representation of a ||| repr	count=1
function	and the object ||| deprecated	count=1
function	quote ||| quote	count=3
function	start [function_2] ||| [function_2] [function_1]	count=4
function_arg	list of filepaths representing [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function_arg	joins the [arg_2] ||| [function_1] [arg_2]	count=1
function	time at ||| time	count=1
function	text ||| get replacement string	count=1
function	the beginning of ||| beginning	count=1
function	search the given file ||| search file	count=1
arg	the speed is ||| speed	count=1
function	a callback for notification ||| callback	count=1
function	a l{defer deferred} notification ||| when done	count=1
function	[function_1] a chat ||| [function_1] [function_2]	count=2
class	address we are connected ||| iunixdatagram connected transport	count=1
function	to get a channel ||| ssh channel	count=1
arg	the set flags for ||| flags silent	count=1
class	a ||| machine	count=1
function	[function_1] hostname that ||| irequest [function_1] request [function_2]	count=1
arg	list of local files ||| files	count=1
arg	make consequent ||| b	count=1
class	a www-authenticate challenge ||| factory	count=1
class	structure ||| singlepart message structure	count=1
class	calls to ||| maildir	count=1
class	has been canceled ||| deferred queue	count=1
arg	username and password ||| username password	count=3
module	the avatar if any ||| conch ssh	count=1
arg	connection try to ||| connection	count=1
arg	the specified strport string ||| jid password strport	count=1
function	[function_1] private ||| [function_1] [function_2]	count=1
function	is made to the ||| made	count=1
function	and a ||| bytes and	count=1
class	event ||| event	count=1
function	a git repository ||| repository	count=1
class	message ||| append message task	count=1
function	deferred has ||| cancel get	count=1
function	as a list of ||| for writing	count=1
function_arg	remove [arg_2] ||| [function_1] [arg_2]	count=2
function	reactor [function_2] ||| [function_2] [function_1]	count=1
module	to connect to the ||| conch	count=1
arg	to the method ||| method	count=1
function	charset ||| charset	count=1
function	non ||| insecure	count=1
arg	using this ||| cls box protocol	count=1
class	proxy and ||| proxy	count=1
class	server gotoverview() is called ||| nntpclient	count=1
function	return a l{deferred} that ||| get	count=2
class	directly ||| bypass tls	count=1
function	the next ||| next	count=1
arg	unexpected ||| todo	count=1
class	of file descriptors currently ||| ireactor fdset	count=1
function	default appropriate for the ||| default log	count=1
class	key ||| sshpublic key database	count=2
arg	resumeoffset an ||| resumeoffset	count=1
function	an exponential backoff interval ||| backoff	count=1
function_arg	leave [arg_2] ||| [arg_2] [function_1]	count=1
class	authorized keys and ||| sshpublic key database	count=1
function	offset ||| offset	count=1
arg	me with a broker ||| perspective broker	count=1
arg	and then ||| cls	count=1
class	whenever ||| iprotocol	count=1
class	the consumer by resuming ||| file body	count=1
arg	[arg_1] server and ||| [arg_2] [arg_1]	count=2
function	given port command ||| generate port command	count=2
module	print 'message' in the ||| trial	count=1
function	responses to define ||| define	count=1
function	of disconnect callbacks ||| on disconnect	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] line [function_arg_2]	count=2
module	[module] c{attribute} attribute ||| [module]	count=3
module	this may only ||| internet	count=1
class	text ||| text message	count=1
function	absolute url to the ||| url	count=1
arg	server and client protocol ||| server client port	count=1
function	a chat ||| chat	count=3
arg	given name as the ||| name	count=1
function	[function_1] character set ||| [function_2] [function_1]	count=1
function	to consider ||| string	count=1
arg	the acknowledgement then ||| proto	count=1
module_class	this request ||| python request	count=1
class	given ||| itelnet	count=1
function	wsgi application object ||| wsgi	count=1
arg	key the key ||| key	count=1
class	@type mbox l{maildirmailbox} ||| append message task	count=1
function	for use [function] ||| [function]	count=1
class	has been ||| deferred	count=1
class	a paused l{cooperativetask} ||| cooperative task	count=1
function	canceled ||| get	count=1
function	a stat [function_2] ||| [function_1] [function_2]	count=1
function_arg	this [arg_2] ||| [function_1] [arg_2]	count=1
function	and accepted ||| do accept	count=1
arg	username the name ||| accountname autologin username password	count=1
function	to start calling boxreceived ||| start receiving	count=1
class	www-authenticate challenge ||| digest credential factory	count=1
function	information ||| fix	count=1
function	restart all ||| restart all	count=1
module_class	when the [class_2] ||| [module_1] [class_2]	count=8
class	l{httpchannel} has determined the ||| ideprecated httpchannel to request interface	count=1
function_arg	@param id ||| init id	count=1
function	prefix for ||| prefix	count=1
function	its window ||| ssh channel window adjust	count=1
function_arg	person for a ||| person name	count=2
function	[function_1] writing or ||| [function_2] [function_1]	count=4
function	sending messages via amp ||| call	count=1
arg	given file descriptor ||| fd request	count=1
class	is intended to be ||| maildir	count=1
function	a certificate [function_2] ||| [function_2] [function_1]	count=1
class	unconnected from a ||| iprotocol factory	count=1
class	the value of c{key} ||| mem cache protocol	count=2
function	references ||| static	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] stat [function_arg_2]	count=8
function	an entity [function] me ||| [function]	count=1
function	notify all pending requests ||| and cancel connect waiters	count=1
class	write ||| file descriptor	count=1
module	the source line ||| web	count=1
function	write the given ||| write	count=2
arg	a string referring ||| pathname	count=1
class	a new l{dnsdatagramprotocol} instance ||| resolver	count=1
arg	mbox see l{record_rp mbox} ||| mbox txt ttl	count=1
module	this ||| internet	count=19
function	request if ||| request	count=1
function	from ||| name	count=1
class	if the log ||| base log	count=1
function	attribute value ||| attribute	count=1
class	dictionary with ||| with	count=1
module_class	for [module_1] [class_2] ||| [module_1] [class_2]	count=14
class	reporting ||| holder	count=1
function	this header ||| header received	count=1
function	return the uid ||| get uid	count=3
function	a [function] server ||| connect [function]	count=1
arg	half of plaintext login ||| username	count=1
arg	pre-built ||| jid	count=1
module	adds tokens to the ||| protocols	count=1
class	notify any nested protocol ||| binary box protocol	count=1
class	sign ||| sshuser auth client	count=1
module	the root ||| conch	count=1
function	to create a new ||| init	count=1
function	value ||| generate	count=1
function	socket [function_2] ||| [function_2] [function_1]	count=10
class	gotoverview() ||| nntpclient	count=1
module	the transport of ||| mail	count=1
function_arg	[function_1] byte string ||| [function_1] [arg_2]	count=1
function	text exhorting ||| replacement	count=1
function	login and ||| login	count=1
function	whether a function is ||| function	count=1
class	pop3 ||| iserver factory pop3	count=1
function	[function] all ||| [function]	count=6
function	file which is in ||| file	count=1
function	prepare [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] all readers ||| [function_1] [function_2]	count=1
function	the time based ||| time	count=1
arg	wrapper and the ||| wrapper wrapped	count=2
arg	transport and a server ||| transport	count=1
function	personal [function_2] ||| [function_2] [function_1]	count=1
function	an [function_1] [function_2] ||| [function_1] [function_2] event formattime	count=3
function	state ||| get state	count=2
function	[function_1] names for ||| python collection [function_1] [function_2]	count=3
function	[function_1] l{ireactorinstaller} plugins ||| [function_2] [function_1]	count=1
arg	the given dns records ||| cnamesleft	count=1
function	a string representation ||| str	count=1
function_arg	given a blob of [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	change time ||| change time	count=2
function	returning files and directories ||| get files and directories	count=1
function	this logger which ||| logger	count=1
function	global [function_2] ||| [function_2] [function_1]	count=4
class	report the ||| result	count=1
class	[class_1] call ||| [class_1] [class_2]	count=2
class	l{tcp6serverendpoint} ||| tcp6server	count=1
class	has ||| client machine	count=1
function	a specific section ||| fetch specific	count=1
function	possibly available ||| help reactors	count=1
class	[class_1] monitoring ||| [class_2] [class_1]	count=4
function	to import a module ||| module	count=1
module_class	[module_1] channel exists ||| [module_1] [class_2]	count=2
class	it indicates a redirect ||| redirect agent	count=1
class	if defined for this ||| isaslmechanism	count=1
function	retrieve the size ||| size	count=1
module	sent us ||| ssh	count=1
arg	the decorators are a ||| decorators	count=1
module	values and the ||| web	count=1
module	[module] string ||| [module]	count=1
arg	l{localworkeramp} instance ||| worker result testcases cooperate	count=1
function	exhorting ||| get replacement string	count=1
function	[function_1] attributes ||| [function_1] [function_2]	count=2
arg	call [arg] ||| observewarning [arg]	count=1
function	of decorators and ||| get deprecated	count=1
arg	client protocol ||| client	count=1
class	this function across ||| maildir name generator	count=1
function	the screen and return ||| screen	count=1
class	signal handlers ||| signal	count=3
class	from the input file ||| file body	count=1
class	request the ||| nntpclient	count=1
module_class	the input ||| conch manhole interpreter	count=1
arg	representation ||| type	count=1
arg	the flags ||| flags mode	count=1
arg	given response and attempt ||| response method	count=1
class	web server to proxy ||| proxy	count=1
function_arg	[function_1] line of ||| [arg_2] [function_1]	count=1
arg	[arg_1] user ||| [arg_2] [arg_1]	count=16
function	write a single chunk ||| write	count=1
function	is [function] ||| [function]	count=1
class	reliably ||| file descriptor	count=1
arg	started first shut it ||| reason	count=1
function	[function_1] the ||| [function_2] [function_1]	count=1
function	all [function] entities ||| list [function]	count=1
function	decoded from ||| from	count=1
function	exchange ||| exchange	count=1
module	a portion [module] a uri ||| [module]	count=1
function	single [function_2] ||| [function_2] [function_1]	count=2
function	to this private ||| private	count=1
function_arg	[function_1] specified text ||| [function_1] [arg_2]	count=5
arg	and end from a ||| end	count=1
arg	whether [arg] themselves are ||| pubkey [arg]	count=1
arg	other another ||| other	count=1
function	credentials interfaces that ||| credentials interfaces	count=2
function	send a user ||| user	count=1
function	and accepted a ||| do accept	count=1
class	c{key} only if the ||| mem cache protocol	count=1
function	signed ||| signed	count=1
function	function ||| func	count=1
module	method converts the ||| web	count=1
class	the input file to ||| file body	count=1
function	retrieve a file from ||| file	count=1
module	of headers when it ||| web	count=1
arg	a l{remotereference} and ||| obj	count=1
function	resumption ||| resume	count=1
function	read a ||| read	count=1
arg	object ||| object	count=1
class	challenge ||| digest	count=1
class	being closed ||| ihalf closeable protocol	count=2
function_arg	directory [arg_2] ||| [arg_2] [function_1]	count=2
arg	unique ||| uid	count=1
function	[function] of ||| add raw [function]	count=1
function	is successfully posted ||| post	count=1
module	date has ||| python	count=1
class	given host ||| host	count=1
class	notification when each complete ||| netstring receiver	count=1
function	url ||| url	count=3
class	task completed ||| task	count=1
class	and moduledict in ||| python	count=1
class	of my process's stdin ||| writer	count=1
function	number of ||| get number of	count=2
function_arg	window by [arg_2] ||| [function_1] [arg_2]	count=1
class	information from ||| nmeaadapter	count=1
function	log file ||| log	count=2
class	to the terminal ||| terminal	count=1
function	address and ||| address and	count=1
function	to a ||| header to	count=1
function_arg	[function_1] [arg_2] ||| web request [function_1] [arg_2]	count=2
module	unique across all calls ||| mail	count=1
function	determine the log prefix ||| get log prefix	count=1
module	and setup authentication ||| protocols	count=1
arg	is ||| status	count=1
function	set interface for outgoing ||| set outgoing interface	count=1
class	this domain by adding ||| domain	count=1
class	greater than c{max_length} is ||| int nstring receiver	count=1
function	connection and return ||| connection	count=1
arg	been started first shut ||| reason	count=1
arg	filename to get the ||| k	count=1
function_arg	msg_disconnect [arg_2] ||| [arg_2] [function_1]	count=1
function	normal characters ||| numeric	count=1
function	the number of ||| count	count=2
function	socket and to ||| collect socket	count=2
module_class	[module_1] serial ||| [module_1] [class_2]	count=2
function	[function_1] of sentence ||| [function_2] [function_1]	count=12
function	a stream ||| stream	count=2
class	stored in ||| parser helper	count=1
function	[function_1] interfaces that ||| [function_2] [function_1]	count=2
function	c{root} into [function_2] ||| [function_1] [function_2]	count=1
function	all keys ||| all identities	count=2
function	to ||| header to	count=1
arg	to another user ||| user filename port resumepos	count=1
function_arg	[function_1] [arg_2] ||| [function_1] trust root path [arg_2]	count=9
function	a callback ||| callback	count=1
class	l{ampbox}es or relay it ||| binary box	count=1
function	non-blocking socket using self ||| internet socket	count=1
module	when the producer is ||| internet	count=1
function	sent while key exchange ||| key exchange	count=1
function_arg	[function_1] reactor an ||| [function_1] [arg_2]	count=1
module_class	and writers ||| internet ireactor fdset	count=1
function_arg	[function_1] event dict ||| [arg_2] [function_1]	count=1
class	and ||| database	count=1
module_class	public [class_2] ||| [class_2] [module_1]	count=1
arg	access [arg] ||| [arg]	count=1
function	to listen ||| listen	count=1
class	for use as ||| digest	count=1
function_arg	[function_1] out ||| [arg_2] [function_1]	count=1
function	surround ||| get	count=1
class	[class_1] l{istreamclientendpoint} provider ||| [class_2] [class_1]	count=1
function	called when a position ||| position	count=1
arg	to a query checking ||| query timeout	count=1
function	will stop performing the ||| wont	count=1
module_class	[module_1] entry from ||| [module_1] [class_2]	count=1
function	uncache ||| uncache	count=1
module	the initialization ||| words protocols jabber	count=1
class	connect ||| tcp6client endpoint	count=1
function	to request early termination ||| abort request	count=1
function	group returns deferred of ||| group	count=2
function	from json ||| from json	count=2
class	file ||| logging file	count=1
function	a server [function_2] ||| [function_2] [function_1]	count=5
function	delete the c{self ||| delete	count=1
class	name to domain object ||| domain with default	count=1
function	unregister ||| unregister	count=6
function	just try to remove ||| remove	count=1
module	remove a ||| internet	count=1
function_arg	certificate request [arg_2] ||| [arg_2] [function_1]	count=1
function	the object ||| get deprecated	count=1
function	time based ||| time	count=1
class	[class] otherwise ||| [class] endpoint	count=3
arg	user to me ||| user	count=1
function	[function_1] [function_2] ||| [function_1] output [function_2]	count=2
function	parser call its ||| parser	count=1
function	new l{privatecertificate} ||| new	count=1
module	forward local [module_2] ||| [module_2] [module_1]	count=1
module	for which the message ||| mail	count=1
function_arg	create an [arg_2] ||| [function_1] [arg_2]	count=1
module	closed pop the ||| web	count=1
function	override the normal prefix ||| prefix	count=1
arg	channel's modes are ||| user channel set modes	count=1
function	when an i/o event ||| event	count=1
function	[function_1] command ||| [function_1] [function_2]	count=4
function	session [function] attribute ||| add unique [function]	count=1
function	is ||| call remote	count=1
module_class	this port's ||| internet iudptransport	count=1
function	cache on [function_2] ||| to [function_1] [function_2]	count=1
function	number of tests ||| count	count=1
function	of this ||| get	count=1
class	factory ||| factory to connection factory	count=1
function	the uid ||| uid	count=1
function	disconnect ||| on disconnect	count=1
function	charset of search ||| charset	count=1
function	exit the python ||| exit	count=1
function	clear [function_2] ||| [function_2] [function_1]	count=2
function	a socket ||| socket	count=1
function	define ||| define failed	count=2
function	escape some character or ||| escape for	count=1
function	subject of ||| subject	count=1
arg	pid file's content ||| pid	count=1
function	l{iprocesstransport} ||| stop process	count=1
function	for a deprecated api ||| replacement	count=1
function	determines whether an entity ||| name constraint	count=1
function	this handle ||| handle	count=2
function	main wx/twisted thread ||| main thread	count=2
function	user [function_2] ||| [function_2] [function_1]	count=6
class	across all calls ||| name generator	count=1
class	l{cooperator} ||| cooperator	count=1
function	internal create ||| create internet	count=1
module_class	of the [class_2] ||| [module_1] [class_2]	count=6
function	a success ||| success	count=1
function	the mail exchange host ||| cb mx	count=1
module	if it cannot ||| python	count=1
function	delete the entry ||| delitem	count=1
function	subnegotiations for which no ||| subnegotiation	count=1
function	all waiting writes ||| writes	count=1
class	stop performing the given ||| itelnet	count=1
function	and ||| deprecated	count=1
function	challenge ||| get challenge	count=1
class	this [class] the c{commandconnected} ||| command [class]	count=1
class	close the temporary file ||| file wrapper	count=1
function	object for this process ||| process unique	count=1
class	for a maildir ||| maildir	count=1
class	response ||| error response	count=1
function	setup authentication mechanism ||| set mechanism	count=1
function	the command ||| command	count=2
class	the key matches ||| sshpublic key	count=1
class	new file that ||| file	count=1
class	add ||| worker amp	count=2
module	text ||| python	count=1
function	successful ||| cb	count=1
function_arg	[function_1] data from ||| [arg_2] [function_1]	count=3
arg	relay ||| relay	count=1
arg	bytes into ||| strio	count=1
function_arg	[function_1] the chat ||| [function_1] [arg_2]	count=2
function	traceback [function_2] ||| [function_2] [function_1]	count=6
arg	a c{newpath} that ||| newpath encoding	count=1
arg	bits bits as ||| bits	count=1
function	to [function] ||| string to [function]	count=1
function	in the ||| in known	count=1
arg	with the given name ||| name	count=2
class	l{iprotocol datareceived} ||| generic httpchannel	count=1
arg	of c{inode} [arg_2] ||| [arg_1] [arg_2]	count=2
function	getnewgroups() ||| new groups	count=1
function	a process [function_2] ||| [function_1] [function_2]	count=4
class	valid file [class_2] ||| [class_1] [class_2] fileno	count=1
arg	name and an amp ||| name	count=1
class	when each complete ||| netstring receiver	count=2
function	node ||| if exists	count=1
function	[function] if ||| add [function]	count=3
function_arg	msg_unimplemented [arg_2] ||| [arg_2] [function_1]	count=1
module	handle the beginning of ||| conch ssh	count=1
function	words trust [function] ||| [function]	count=1
function	line of ||| line	count=1
function	with a name in ||| search	count=1
function	deprecated api with ||| replacement	count=1
module	and return ||| web	count=2
function	request is ||| is	count=1
module	retry ||| application	count=1
function	to c{path} ||| coerce to filesystem encoding	count=1
function	the elements which ||| elements	count=1
arg	the specified address pair ||| serveraddress clientaddress	count=1
function	convert an ampbox to ||| strings to	count=1
function_arg	@param address ||| init address	count=1
function	render [function_2] ||| [function_1] [function_2]	count=4
function	and get ||| get	count=1
function_arg	parse some [arg_2] ||| [arg_2] [function_1]	count=1
function	ends [function_2] ||| [function_2] [function_1]	count=2
function	return an encoder if ||| get encoder	count=1
arg	a connection from ||| connection	count=1
module	this is msg_userauth_passwd_changereq the ||| conch	count=1
class	structure object reports ||| message structure	count=2
function	getnewnews() ||| new news	count=1
function	traceback with ||| traceback	count=1
function	[function] key from ||| [function]	count=3
class	other side ||| sshtransport base	count=2
function_arg	[function_1] containing username ||| [function_1] [arg_2]	count=2
function	from the server gotoverview() ||| fetch	count=1
class	of a www-authenticate ||| digest credential	count=1
function	has received a chunk ||| receive data chunk	count=1
function	size in octets of ||| size	count=2
function	bytes received either deliver ||| data received	count=1
function	the serial [function_2] ||| [function_1] [function_2]	count=1
arg	string ||| password	count=1
class	the given configuration ||| unix app	count=1
function_arg	[function_1] buddyid ||| [function_1] item groupid [arg_2]	count=4
arg	text to ||| text	count=1
arg	me or a channel ||| channel message	count=1
arg	err is ||| err	count=1
arg	the given group ||| group	count=3
function	open the stream window ||| open stream window	count=1
function	represents different [function_2] ||| [function_1] [function_2]	count=2
function	is no ||| connection lost	count=1
function	locally ||| locally	count=1
function	to ignore ||| ignore	count=1
class	[class_1] mailbox ||| [class_1] [class_2]	count=6
class	performing ||| itelnet	count=1
function	[function_1] given generator ||| [function_2] [function_1]	count=5
arg	[arg_1] if host ||| [arg_2] [arg_1]	count=2
arg	user to ||| user	count=1
function	print a traceback ||| print brief traceback	count=2
module_class	[module_1] certificate ||| [module_1] [class_2]	count=6
class	unique across all ||| generator	count=1
function	[function_1] [function_2] using l{_irequestencoderfactory ||| iencoding resource [function_1] [function_2]	count=4
function	the given keys ||| keys	count=1
function_arg	[function_1] node ||| [function_1] [arg_2] nodeid	count=1
function	[function_1] type of ||| [function_2] name [function_1]	count=1
class	the log ||| base log	count=1
function	with ||| get	count=2
module	we will stop performing ||| conch	count=1
module	the server has ||| web	count=1
module_class	[module_1] current platform ||| [module_1] [class_2]	count=12
function	wake up the ||| waker	count=1
function_arg	[function_1] [arg_2] l{serialnumber} instance ||| names serial number [function_1] [arg_2]	count=1
class	a ||| nmeaadapter	count=1
function_arg	[function_1] primary ||| [function_1] [arg_2]	count=1
function_arg	put [arg_2] ||| [arg_2] [function_1]	count=1
function	a chunk ||| data chunk	count=1
function	processor for ||| processor	count=1
module	start running [module] given iterator ||| [module]	count=1
function	add an unexpected ||| add unexpected	count=1
class	file from all other ||| file path	count=1
function	subnegotiations ||| subnegotiation	count=1
function	follow a delegation if ||| discover authority	count=1
class	a log file ||| log file	count=2
class	for each alias and ||| alias	count=1
function	when this stream's flow ||| flow	count=1
function	the next string from ||| next	count=1
arg	queries via ||| queries	count=1
arg	status and ||| status	count=1
function	drive ||| drive worker	count=2
function_arg	[function_1] function f ||| [arg_2] [function_1]	count=3
function	connection from ||| client connection	count=1
function	we receive a msg_kexinit ||| ssh kexinit	count=1
function	iterate over ||| iterentries	count=1
function_arg	[function_1] this ||| [function_1] [arg_2]	count=5
class	setup authentication ||| saslinitiating	count=1
arg	given work on this ||| work	count=1
class	the accounts ||| account manager	count=1
class	test if any is ||| test	count=1
arg	name in ||| name value	count=1
arg	surround a replacement for ||| replacement	count=1
function	text ||| gather text	count=1
arg	function to a list ||| f	count=1
function	service is stopped either ||| service stopped	count=1
module	connection to the ||| words protocols	count=1
function	into the [function_2] ||| [function_1] [function_2]	count=1
arg	override the comparison defined ||| other	count=1
module	from the ||| conch client	count=2
function	the signed ||| cb signed	count=1
function	signed [function_2] ||| [function_1] [function_2]	count=1
function	response to [function_2] ||| [function_2] [function_1]	count=1
module	the location header ||| web	count=1
function	format for ||| for	count=1
function	a msg_kex_dh_gex_request message ||| ssh kex dh gex request	count=1
function	callback for notification ||| add callback	count=1
function	an error has ||| cmd server error	count=1
class	my syspath and moduledict ||| path	count=1
function	no ||| no	count=2
function	end tag of the ||| document end	count=1
module_class	that the peer ||| conch itelnet protocol	count=1
arg	[arg] chunk from ||| [arg]	count=2
module	whether the ||| conch	count=1
class	underlying pkey ||| public key	count=1
function	xml as a child ||| xml	count=1
arg	if [arg_1] [arg_2] 0 then this should ||| item [arg_2] [arg_1]	count=1
arg	key in blob from ||| blob	count=1
function	existing child [function_2] ||| [function_2] [function_1]	count=5
function	an l{iprocesstransport} ||| stop process	count=1
function	child may or may ||| child	count=1
class	method (due ||| tlsmemory bioprotocol	count=1
function_arg	any received [arg_2] ||| [arg_2] [function_1]	count=6
module	before sending the ||| conch ssh	count=2
function	me to ||| to	count=1
function	[function_1] in ||| [function_2] [function_1]	count=6
function	monitored for reading ||| readers	count=1
module	result from the ||| conch client	count=2
module	the negation of a ||| mail	count=1
function	running process ||| running	count=1
function	close all pool connections ||| close	count=1
function	[function_1] original exception ||| [function_2] [function_1]	count=1
function_arg	of arguments using ||| make arguments cls	count=1
arg	the credentials we call ||| credentials	count=1
function	list of xhdr data ||| xhdr request	count=1
module	message-digest algorithm in the ||| conch	count=1
module_class	[module_1] reactor should ||| [module_1] [class_2]	count=1
function	polite text exhorting ||| replacement string	count=1
module	basic fields the ||| mail	count=1
module	my process's stdin ||| internet	count=1
function	as a list of ||| writing	count=1
function_arg	[function_1] the xml ||| [function_1] stream [arg_2]	count=2
class	which is ||| maildir	count=1
function_arg	[function_1] of data ||| [function_1] [arg_2]	count=4
arg	list of local files ||| previousresult files remotepath	count=1
arg	open an [arg] ||| [arg]	count=1
function	connects a given ||| listen	count=1
function_arg	[function_1] body data ||| [function_1] [arg_2]	count=3
module	[module] were processes ||| [module]	count=2
function	a processor for ||| opt processor	count=1
class	authentication ||| initializer	count=1
function	empty the ||| clear	count=1
class	schedule ||| client machine	count=1
arg	generated ||| uid	count=1
function	user to consider ||| get	count=1
class	process instance ||| process	count=1
module	for the next message ||| mail	count=1
function	create a new ||| create	count=2
class	indicate that we ||| transport	count=1
arg	an l{ireactortcp} provider ||| port backlog interface	count=3
arg	user is conversing ||| text metadata	count=1
module	is intended ||| mail	count=1
function	determine if c{service_identity} ||| select verify implementation	count=1
function_arg	[function_1] cacerts ||| [function_1] [arg_2]	count=1
class	return ||| context factory	count=2
class	pop3 server ||| factory pop3	count=1
function	text from an event ||| text from event	count=1
class	file given to __init__ ||| arguments generator	count=1
function	the given server protocol ||| server	count=1
function	install the ||| install	count=1
module	of some other authentication ||| mail	count=1
function	service ||| get service	count=1
arg	to indicate ||| width height	count=1
function	the body for the ||| body request	count=1
function	stdin with /dev/tty ||| stdin	count=1
function	elements ||| elements by tag name	count=1
class	object ||| public key	count=2
function	logging to the ||| logging	count=1
module_class	the log file ||| python log	count=1
function	leaves ||| left	count=1
arg	or 1 [arg_2] ||| [arg_1] [arg_2]	count=2
class	create a log file ||| log file	count=1
function	arrange for iteration ||| iterate	count=1
module	response messages from the ||| protocols	count=1
function	private ||| private	count=5
module	direct the output of ||| mail	count=1
class	cancel ||| deferred list	count=1
function	this will be ||| mail	count=1
module	private key ||| ssh	count=1
function	attempt to deliver data ||| deliver	count=1
class	duration of the test ||| test	count=1
arg	for a wrapper and ||| wrapper wrapped	count=1
function	udp ||| query udp	count=1
module	by the ||| conch	count=2
function	join a ||| join	count=4
function	all processes ||| all	count=1
function_arg	[function_1] [arg_2] ||| [function_1] log [arg_2]	count=3
class	[class_1] [class_2] into a pair c{ ||| [class_1] [class_2]	count=1
function	again after a suitable ||| retry	count=1
module	select and ||| protocols jabber	count=1
function	the subject of this ||| subject	count=1
function_arg	[function_1] query ||| [function_1] [arg_2]	count=1
function	was [function] or ||| was [function]	count=1
class	unique ||| name	count=1
arg	extdata a ||| extdata	count=1
function	trust [function] ||| [function]	count=1
function	message [function] version-number check ||| [function]	count=1
function	method that determines whether ||| name constraint	count=1
module_class	[module_1] l{iconsumer<twisted ||| [module_1] [class_2]	count=4
function	notify all pending requests ||| cancel connect waiters	count=1
module	of arguments ||| python	count=1
class	of ||| digest	count=1
function	reception of one stat ||| stat	count=1
function	progress bar ||| bar	count=1
class	platform or ||| platform	count=1
function	files and [function_2] ||| [function_1] [function_2]	count=2
function	received ||| heading received	count=1
class	altitude ||| altitude	count=1
class	[class_1] redirection exception ||| [class_1] [class_2]	count=3
module	return all trial ||| trial	count=1
function	attributes for ||| attrs	count=2
class	mailbox change ||| imailbox imap	count=1
class	information from a ||| nmeaadapter	count=1
function_arg	[function_1] filename the ||| [function_1] [arg_2]	count=1
class	name of the file ||| dcc file receive	count=1
function	connection to the mail ||| notify no connection	count=1
function	a colon-separated ascii bytes ||| bytes	count=1
function	a c{datetime time} object ||| combine date and	count=1
module	underlying ||| internet	count=1
function	a stop to any ||| stop	count=1
function	child elements ||| elements by	count=1
class	factory expects ||| factory	count=1
function	that determines whether an ||| constraint	count=1
function	an article with the ||| article	count=1
module_class	[module_1] this dictionary ||| [module_1] [class_2]	count=2
module	the user for a ||| conch ssh	count=2
function	is ||| connection	count=2
function	set which ||| set unjellyable	count=1
function	this protocol [function] ||| [function]	count=3
function	the next public ||| public	count=1
function	file number ||| fileno	count=1
arg	[arg_1] level ||| [arg_2] [arg_1]	count=8
function	sub-messages of this ||| parts	count=1
class	of an [class_2] ||| [class_2] [class_1]	count=2
function	of all child elements ||| elements by tag	count=1
function	[function] function ||| [function] install	count=1
function	read connection ||| read connection lost	count=2
module	fail [module] ||| [module]	count=1
arg	c{message} to a given ||| protocol	count=1
class	method called ||| ipositioning	count=2
class	current authentication ||| sshuser auth client	count=1
arg	istypeallowed typename ||| typename	count=1
arg	send an article ||| article	count=1
class	[class_1] certificate ||| [class_1] [class_2]	count=4
class	all calls to ||| generator	count=1
module	to convert ||| internet	count=1
arg	lines ||| lines	count=1
arg	[arg_1] more ||| [arg_1] [arg_2]	count=2
module_class	if this l{filepath} ||| python file path	count=3
function	write some ||| write	count=1
function	is successfully posted to ||| post	count=1
function	were imported ||| imported	count=1
function	alpn ||| acceptable	count=1
function_arg	run [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	name of [arg_2] ||| [function_1] [arg_2]	count=1
class	the next iteration ||| looping	count=1
arg	beginning of c{query} possibly ||| msgid msg lastsequenceid	count=1
function_arg	or return [arg_2] ||| [function_1] [arg_2]	count=1
class	was ||| descriptor	count=1
function	a character [function_2] ||| [function_1] [function_2]	count=1
module	html ||| web	count=1
function	messages via amp ||| call	count=1
class	retrieve ||| context tracker	count=1
arg	a start and ||| start	count=1
function	[function_1] expected failure ||| [function_1] [function_2]	count=1
module	split the ||| python	count=1
module	return their string ||| trial	count=1
class	script ||| filtered script	count=1
arg	[arg] int port ||| [arg]	count=1
function_arg	string for [arg_2] ||| [function_1] [arg_2]	count=3
arg	group over the given ||| group	count=1
arg	provided value ||| attrib value	count=1
function	[function_1] keys from ||| [function_2] [function_1]	count=2
function	level sol_socket and ||| level	count=1
arg	@param command the command ||| command	count=1
function	deprecated ||| get	count=1
module	distinguishes this ||| python	count=1
function	handle a reply to ||| reply	count=1
function	is the [function_2] ||| [function_1] [function_2]	count=2
arg	callback to be ||| callback	count=1
class	server ||| nntpclient	count=1
class	endpoint ||| endpoint	count=1
class	this message ||| message	count=2
function	v1 message for removing ||| remove	count=1
function	c{_deprecated_info} ||| deprecated	count=1
function	[function_1] a cookie ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] this should be a ||| [function_1] [arg_2]	count=12
arg	digest for the ||| ha2 algo psznonce	count=1
function	url ||| root url	count=1
arg	[arg_1] id ||| [arg_2] [arg_1]	count=8
arg	set flags [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	write the [arg_2] ||| [function_1] to handle [arg_2]	count=1
module	the protocols ||| web	count=1
class	want log levels to ||| log	count=1
function	for a hemisphere ||| fix hemisphere	count=1
function	[function_1] responding to ||| [function_2] [function_1]	count=1
module	surround ||| python	count=1
function	with some ||| get replacement	count=1
function	dispatch a received ||| received	count=1
arg	given request if ||| request	count=1
module_class	the file monitoring ||| mail file monitoring	count=3
class	an authentication agent if ||| user auth	count=1
function	mapping ||| mapping	count=2
arg	a client protocol ||| protocol	count=1
function_arg	[function_1] some sort ||| [function_1] [arg_2]	count=6
arg	address the l{iaddress} ||| address	count=1
arg	prefix to submodules here ||| mn	count=1
function	convert an ||| to	count=2
function	request to ||| request	count=1
function	log message [function_2] ||| [function_1] [function_2]	count=1
arg	reactor an ||| reactor	count=5
function	initialize logging to a ||| start logging	count=1
function	the number of calls ||| with count	count=1
module	next ||| internet	count=1
arg	status line into its ||| status	count=1
arg	for the given interface ||| interface	count=1
class	string for a message ||| base	count=1
function	[function_1] with a ||| [function_1] [function_2]	count=3
function	escape some character or ||| escape for content	count=1
function	consider it ||| get replacement string	count=1
function	remove monitoring [function_2] ||| [function_1] [function_2]	count=1
function	from a gsv ||| gsv	count=1
function	above mapping adding ||| level mapping	count=1
function	the failure ||| failure	count=1
function_arg	[function_1] user the ||| [arg_2] [function_1]	count=1
class	configured file ||| file	count=1
function	restart ||| restart	count=1
arg	readers and writers and ||| readers writers	count=1
function	a namespace from the ||| namespace from	count=1
module	name in ||| mail	count=1
function	forcefully abort the ||| abort	count=1
function	a repr of this ||| repr	count=1
class	as the ||| credential	count=1
class	server responses received ||| pop3client	count=1
function	a pre-built l{servicemanager}, ||| service manager	count=1
function	for consuming ||| for	count=1
function	[function_1] for a ||| [function_1] [function_2]	count=4
class	encodes and sends a ||| ftp	count=1
class	all calls to this ||| generator	count=1
function	function [function_2] ||| [function_2] [function_1]	count=2
module	to the other ||| conch	count=1
function_arg	check against [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] reporter ||| [function_1] [arg_2]	count=7
function	the number of ||| number of	count=1
arg	string ||| s	count=1
class	by c{self frame} and ||| fragment element	count=2
class	@param ||| digest md5	count=1
class	an ||| process monitor	count=2
module	from ||| names	count=1
function	gather ||| gather	count=1
function	is a working ||| is working	count=1
function_arg	[function_1] protocol to ||| [function_1] unixdatagram address [arg_2]	count=1
function	read a datagram ||| datagram	count=1
function	offset and ||| offset and	count=1
module_class	convert this url ||| python url	count=1
function	when a class ||| class	count=1
function	we receive a msg_disconnect ||| disconnect	count=1
function	hashed ||| hash	count=1
function	and a binary ||| and	count=1
class	be unique ||| maildir name generator	count=1
class	suitable for inclusion ||| iknown host	count=1
class	want log levels ||| log	count=1
module_class	the [class_2] ||| [module_1] [class_2] save mark	count=1
arg	a signature using ||| signature data	count=1
module	for use as ||| cred	count=1
module_class	the resolved ||| internet tcp6client endpoint	count=1
function	post an [function_2] ||| [function_2] [function_1]	count=3
function	stream window by ||| stream window	count=2
class	specified l{methodname} method ||| method	count=1
class	for the given configuration ||| unix app logger	count=1
function	for subnegotiations for which ||| unhandled subnegotiation	count=1
function	string to a python ||| from string	count=1
module	have the same ||| web	count=1
arg	server and client ||| server client port	count=2
class	message while it ||| message	count=1
function_arg	selected article [arg_2] ||| [arg_2] [function_1]	count=3
class	signal handlers should be ||| signal reactor	count=1
module	of [module] command ||| [module]	count=1
arg	given offset and size ||| offset size	count=1
function	which may refer to ||| smart	count=1
function	an absolute url ||| url	count=1
function	receiver to pass a ||| receiver	count=1
function	the user to consider ||| replacement	count=1
function	[function_1] root object ||| [function_1] [function_2]	count=1
function	deliver any ||| deliver body	count=1
function	return the list of ||| get	count=1
function	os x ||| osx	count=1
function	for ssl [function_2] ||| [function_2] [function_1]	count=4
module	setup authentication ||| protocols jabber	count=1
class	connection which this channel ||| command channel	count=1
arg	message sizes into a ||| msgs	count=1
arg	specified keys ||| keys value	count=1
class	ssh ||| sshcommand client	count=1
class	c{key} it ||| mem cache	count=1
arg	a command over ||| reactor command username	count=1
function_arg	turns the [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
class	the message to its ||| message	count=1
module	log out the ||| conch ssh	count=1
function_arg	store stor [arg_2] ||| [function_1] [arg_2]	count=1
arg	dotted quad representation of ||| maximumqueries reactor resolverfactory	count=1
function	as a list ||| for writing	count=1
class	last ||| log file	count=2
function	account ||| account	count=1
class	the ||| key	count=1
function	[function_1] warnings which ||| [function_2] [function_1]	count=3
function_arg	coerce a [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
class	database ||| shadow database	count=1
class	which this structure ||| structure	count=1
function	all ||| all	count=9
function	representation of this ||| repr	count=1
module	type is ||| python	count=1
function	to get a channel ||| ssh channel open	count=1
arg	the data ||| data	count=1
arg	password ||| password	count=4
function	flags of one ||| flags	count=1
function_arg	@param cacerts ||| init cacerts	count=1
function_arg	@param name ||| init name	count=2
function	via amp ||| remote	count=1
function_arg	to resume [arg_2] ||| [arg_2] [function_1]	count=2
arg	[arg_1] end from ||| [arg_2] [arg_1]	count=3
function	generator [function_2] ||| [function_2] [function_1]	count=1
module_class	public key ||| ssh key	count=1
arg	call [arg] c{args} ||| observewarning [arg]	count=1
function	[function_1] envelope for ||| [function_1] [function_2]	count=1
function	[function_1] timeout ||| [function_1] [function_2]	count=2
function	which share an integer ||| kex dh gex group	count=1
class	skip the next iteration ||| call	count=1
function	the old ||| set old	count=1
function	an object ||| name	count=1
function	as ||| get replacement	count=1
function	build an l{esmtpsender} ||| build	count=1
function	thread ||| defer to thread	count=1
arg	[arg_1] hostname ||| [arg_2] [arg_1]	count=2
module	channel with the trial ||| trial _dist	count=1
function	stack of slot data ||| get slot	count=1
arg	l{httpclientparser} ||| rest	count=1
function	convert a ||| filename to	count=1
arg	name [arg_2] ||| [arg_1] [arg_2]	count=10
function	of a www-authenticate ||| generate	count=1
arg	convert some text ||| text	count=1
class	default ||| binary box protocol	count=1
module_class	@return boolean indicating whether [module_1] [class_2] ||| [module_1] [class_2] is known	count=2
function	is no longer ||| connection lost	count=1
class	for changing kqueue ||| kqueue reactor	count=1
function_arg	read [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	children that [arg_2] ||| python file path glob [function_1] [arg_2]	count=1
function	has already been ||| cancel	count=1
function	bytes from ||| received	count=1
class	suitable for use ||| digest credential factory	count=1
function	the user a message ||| message	count=1
class	syspath and moduledict in ||| path	count=1
function	the contact ||| contact changed	count=1
module_class	[module_1] response to ||| [module_1] [class_2]	count=6
function	this private ||| string private blob	count=1
function	initialization has ||| initialization	count=1
function	secondary for the specified ||| secondary	count=1
function	when the service is ||| service	count=1
function	was skipped ||| add skip	count=1
function	[function_1] prefix with ||| [function_2] [function_1]	count=1
arg	a function ||| f	count=1
arg	the topic [arg] or ask ||| [arg]	count=1
arg	user to [arg_2] ||| [arg_1] channel [arg_2]	count=1
class	helpful log message ||| amp	count=1
class	the server gotoverview() ||| nntpclient	count=1
module	to generate control functions ||| conch	count=1
function	bos ||| 09	count=1
class	[class_1] entry ||| [class_1] [class_2]	count=3
function	create a l{threadworker} ||| init	count=1
function	above mapping ||| log level mapping	count=1
function	a file ||| file	count=8
class	object ||| imessage	count=1
function	[function_1] object for ||| [function_2] [function_1]	count=4
function	the prefix ||| prefix	count=2
function	do ||| do	count=2
function	children ||| children	count=2
class	listen ||| ssl4server endpoint	count=1
function	its window ||| window adjust	count=1
function	name into a slightly ||| name	count=1
arg	outiv ||| outiv	count=1
module	c{event["log_format"]} ||| logger	count=1
function_arg	[function_1] newtopic ||| [arg_2] [function_1]	count=3
function	a child resource ||| child	count=1
module	hostmask of the ||| protocols	count=1
module	running on set ||| python	count=1
class	protocol by ||| protocol	count=1
arg	object as ||| obj	count=1
class	been canceled ||| queue	count=1
function	[function_1] display ||| [function_2] [function_1]	count=8
function	for ||| get replacement string	count=1
arg	a string referring to ||| pathname	count=1
function_arg	[function_1] containing ||| [function_1] [arg_2]	count=3
function	attribute name ||| method name	count=1
class	alias and ||| alias	count=1
function	has been canceled ||| get	count=1
function	connection for the given ||| connection for tls	count=2
class	[class_1] existing ||| [class_2] [class_1]	count=4
module	with the ||| conch ssh	count=1
function_arg	[function_1] given sender ||| [function_1] message [arg_2]	count=2
function	in progress ||| trying	count=1
function	default appropriate for ||| default	count=1
function_arg	[function_1] node ||| [arg_2] [function_1]	count=3
class	segments ||| iftpshell	count=2
module	the list of ||| conch	count=1
class	a mailbox @type ||| imap	count=2
function	maximum line ||| line	count=1
class	across ||| maildir name	count=2
function	[function] use ||| [function]	count=1
function	return [function_2] ||| [function_2] [function_1]	count=45
function	coercion necessary for unix ||| unix	count=1
class	are [class_2] ||| [class_2] [class_1]	count=2
class	the [class] in this ||| [class]	count=1
module	this function across all ||| mail	count=1
function	the receive ||| receive	count=1
function	it as an ||| get	count=1
function	initialize it with a ||| init	count=1
function	using ||| build	count=1
function	instance to ||| instance	count=1
class	body has ||| body	count=1
function	warning method to use ||| warning method	count=1
module_class	the trial [class_2] ||| [module_1] [class_2]	count=8
arg	c{query} possibly more ||| query msgid msg lastsequenceid	count=1
function	as a list ||| writing	count=1
class	this formatting [class_2] ||| [class_1] [class_2]	count=3
function	callback for ||| callback	count=1
function	indicate the connection ||| connection	count=1
function_arg	[function_1] a description ||| [function_1] string [arg_2]	count=5
module	when it ||| web	count=1
function	start calling ||| start	count=1
module	the server that ||| mail	count=1
module	object ||| trial	count=1
module	the service ||| application	count=1
function	recipient per envelope this ||| mail	count=1
arg	giving a reason ||| reason	count=1
module	password ask the ||| conch ssh	count=1
class	redirection exception ||| redirection	count=1
class	this reactor ||| threaded select reactor	count=1
function	is deprecated and always ||| is	count=1
class	all processes reboots ||| name	count=1
function	code and response headers ||| response headers	count=1
arg	domain to connect ||| domain factory	count=1
function	[function_1] main wx/twisted ||| [function_1] [function_2]	count=3
function	later ||| later	count=1
function	inverse [function_2] ||| [function_2] [function_1]	count=1
function	buffered events to ||| to	count=1
function	was rejected ||| authdeclined	count=1
function_arg	the same [arg_2] ||| [arg_2] [function_1]	count=1
function	object ||| from	count=1
arg	accountname a name ||| accountname	count=1
function	stop ||| wont	count=1
module_class	[module_1] request ||| [module_1] ideprecated httpchannel to [class_2]	count=1
arg	message [arg_2] ||| [arg_1] [arg_2]	count=6
module	we will stop ||| conch	count=1
function	process and create ||| create	count=1
function	return the portal for ||| portal	count=1
class	the wrapped web context ||| to current policy	count=1
function	exhorting ||| get replacement	count=1
function	[function_1] in ||| [function_1] [function_2]	count=6
function	a certificate ||| certificate	count=1
arg	message an ||| message	count=2
function	api with some polite ||| replacement string	count=1
arg	packet on the transport ||| messagenum packet	count=1
arg	transport and ||| transport	count=2
class	to this function across ||| maildir name	count=1
function	it as ||| replacement string	count=1
function	[function] among ||| lookup [function]	count=3
module	c{b'http'} scheme and ||| web	count=1
function	[function_1] resolver ||| [function_2] [function_1]	count=1
function	time} object ||| combine	count=1
module	nodes have the same ||| web	count=1
arg	chatui the gui chat ||| chatui	count=2
module	to generate control ||| conch	count=1
class	signal handlers ||| signal reactor	count=3
class	will stop ||| transport	count=1
class	use as ||| credential	count=1
arg	username the name ||| autologin username password	count=1
function	poll the poller ||| do poll	count=2
function	[function_1] of line ||| [function_2] [function_1]	count=2
module	the user's ||| conch	count=2
function	we get a ||| privmsg	count=1
function	ignore ||| ignore	count=3
function	response [function_1] [function_2] ||| [function_1] [function_2] streamid data	count=2
function	[function_1] destination this ||| [function_2] [function_1]	count=1
function	running ||| deprecated	count=1
class	by resuming ||| file body producer	count=2
function	filepath is a directory ||| directory	count=1
arg	objs l{list} of ||| objs	count=1
function	add additional options to ||| add additional options	count=1
function_arg	add an [arg_2] ||| [function_1] [arg_2]	count=4
arg	the error is ||| error	count=1
class	the [class] ||| [class] body	count=2
arg	a byte string into ||| strio length	count=1
arg	a given fd ||| fd	count=1
function	[function_1] logging ||| [function_1] [function_2]	count=1
module	the user ||| python	count=1
arg	msgs the contents of ||| msgs	count=1
function	beginning of ||| beginning	count=1
module	the hostmask of the ||| words protocols	count=1
function	generate a bounce ||| generate bounce	count=3
function_arg	[function_1] reason ||| [arg_2] [function_1]	count=1
arg	given fd filtering for ||| fd	count=1
function	[function_1] or ||| [function_1] [function_2]	count=4
function	to reconnect ||| retrying	count=1
module	corresponding [module] last public ||| [module]	count=1
function	initialize the l{filepath} ||| init	count=1
module	parse ||| words protocols jabber	count=1
module	dns resolver ||| names	count=1
function	return a suitable log ||| get log	count=1
function	gather state [function_2] ||| [function_2] [function_1]	count=2
function	cookie that was ||| cookie	count=1
module	to generate ||| conch	count=1
class	avatar to ||| avatar	count=1
function	a callback ||| add callback	count=1
function	that interface ||| proxy for interface	count=1
function	server address and ||| server address and	count=1
function	item [function] if ||| add [function]	count=1
function	it is running ||| deprecated	count=1
function	id of the ||| id	count=1
class	this test if ||| test case	count=1
function	additional ||| additional	count=1
arg	version ||| fileobj	count=1
class	l{httpchannel} ||| ideprecated httpchannel to request	count=1
arg	connection if the factory ||| connection	count=1
function	pop search ||| search	count=1
function	will return an ||| get	count=1
function	notify a ||| notify	count=1
arg	l{remotereference} and ||| obj	count=1
class	in this [class] the c{commandconnected} ||| command [class]	count=1
function	proxy l{interfaces ihandshakelistener} ||| handshake completed	count=1
function	to file ("-" ||| file	count=1
function	or return ||| get	count=1
function	[function_1] initial ||| [function_1] [function_2]	count=1
function	of decorators and the ||| get	count=1
function	_wrappedfactory} or ||| build protocol	count=1
class	[class_1] this observer ||| [class_2] [class_1]	count=1
function_arg	[function_1] an 'in' ||| [function_1] box [arg_2]	count=4
function	with some [function_2] ||| [function_1] [function_2]	count=4
module	a string describing this ||| python	count=1
function	received from ||| amp box received	count=1
function	to an ||| cacerts to	count=1
module	called by ||| words protocols	count=2
function_arg	a person [arg_2] ||| [arg_2] [function_1]	count=2
module	and writes them to ||| web	count=1
arg	creator an ||| creator command	count=1
function	sign for a given ||| sign	count=1
function	connect the transport to ||| connect	count=1
arg	a resolver ||| resolver	count=1
class	log ||| line log	count=1
function	the http user ||| user	count=1
function	method to report ||| report	count=1
module	this method ||| spread	count=2
arg	a pre-built l{servicemanager}, using ||| password	count=1
function	guess ||| guess	count=1
arg	datagram ||| datagram	count=4
class	called every time ||| iprotocol factory	count=1
class	certificate authorities to trust ||| sslcertificate authorities	count=1
function	increment the value ||| increment	count=1
function	connection was made ||| connection made	count=3
class	reactor ||| ireactor	count=1
function	[function_1] the failure ||| [function_2] [function_1]	count=1
function_arg	remove from [arg_2] ||| [function_1] [arg_2]	count=1
function	getpeer but for this ||| get host	count=1
module_class	[module_1] protocol instance ||| [module_1] [class_2]	count=6
function	compute a log ||| log	count=1
function	nodename -> [function] ||| [function]	count=3
function	sent we will always ||| sent mail	count=1
arg	@param key the key ||| key	count=1
module	has been received ||| ssh	count=1
function	to retrieve a ||| get	count=1
arg	client side ||| client	count=1
class	suitable for use ||| factory	count=1
function	of the ||| deprecated	count=1
function	hostname ||| host key	count=1
function	any data [function] ||| body data [function]	count=3
arg	data and this instance's ||| newcertdata format	count=1
arg	is invalid for data ||| data	count=2
function_arg	xml document [arg_2] ||| [function_1] [arg_2]	count=3
module_class	[module_1] conversation ||| [module_1] group [class_2]	count=2
function_arg	a directory [arg_2] ||| [function_1] [arg_2]	count=1
function	presence of ||| has key	count=1
function	[function_1] methods ||| [function_2] [function_1]	count=4
function	[function] item ||| [function]	count=1
function	remember the currently-processed ||| remember	count=1
function	prefix ||| prefix	count=7
function	dcc accept response to ||| dcc accept	count=1
function_arg	reactor method [arg_2] ||| [function_1] [arg_2]	count=3
arg	a command over it ||| command username	count=1
module	an entry with ||| client	count=1
class	transport using chunked encoding ||| chunked encoder	count=1
function	this is the ||| remote	count=1
module	the test if c{first} ||| trial	count=2
function	return ||| get person	count=1
function	referring to [function_2] ||| [function_2] [function_1]	count=1
module	the other side ||| conch	count=3
class	generate ||| name generator	count=1
function	[function_1] hostname ||| irequest [function_1] request [function_2]	count=1
function	@param domain ||| init	count=1
arg	[arg_1] listen on ||| [arg_2] [arg_1]	count=2
function_arg	chunk [arg_2] ||| [function_1] [arg_2]	count=3
function	for reading ||| for reading	count=2
function	l{servicemanager}, ||| build	count=1
module	of the ||| conch	count=1
class	a list of segments ||| iftpshell	count=2
class	this domain or ||| domain	count=1
module	given object ||| spread	count=1
function	invoke when executing the ||| responder	count=1
function	a malformed authentication challenge ||| esmtp authmalformed challenge	count=1
function	message ||| message	count=18
arg	a query checking ||| query timeout	count=1
function_arg	encode [arg_2] ||| [function_1] [arg_2]	count=2
function	[function_1] secondary for ||| [function_2] [function_1]	count=1
class	this task [class_2] ||| [class_2] [class_1]	count=2
function	discard the ||| sync	count=1
function_arg	msg_userauth_failure [arg_2] ||| [arg_2] [function_1]	count=1
class	produce data ||| ipull producer	count=1
function	subject ||| subject	count=1
class	[class_1] entry from ||| [class_1] [class_2]	count=1
class	this file ||| hosts file	count=1
arg	and nonce from the ||| nonce clientip	count=1
class	file descriptor ||| ifile descriptor	count=1
function	given header in c{self ||| header received	count=1
function_arg	[function_1] [arg_2] ||| [function_1] fdin asyncio [arg_2]	count=4
class	to proxy ||| reverse proxy resource	count=1
function	login delay period ||| login delay	count=2
function_arg	certificate [arg_2] ||| [function_1] [arg_2]	count=1
module	get the connection which ||| conch	count=1
arg	primary high-level api for ||| commandtype	count=1
function	initialize ||| init	count=25
function	wait until we acquire ||| until locked	count=1
function	[function_1] remote ||| [function_1] [function_2]	count=1
function	[function_1] [function_2] ||| [function_1] detailed [function_2]	count=4
class	'message' in the ||| reporter	count=1
function	remove all [function_2] ||| [function_2] [function_1]	count=2
arg	reload ||| dolog	count=1
function	list of ||| get	count=1
function_arg	type as [arg_2] ||| [function_1] [arg_2]	count=1
function	the body of ||| get body	count=1
function	an original' identifier ||| orig	count=1
function_arg	the given octets ||| write octets	count=1
module_class	the process which ||| internet process	count=1
class	my process's stdin ||| writer	count=1
arg	queue to [arg_2] ||| [arg_2] [arg_1]	count=2
class	of this message ||| message structure	count=1
function	finished disconnecting ||| wait for	count=1
class	has been canceled ||| deferred	count=1
function	a channel ||| ssh channel	count=2
function	the name [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] directories ||| [function_2] [function_1]	count=4
function_arg	article with [arg_2] ||| [function_1] [arg_2]	count=2
function	get an ||| get	count=1
function	the welcome from ||| irc rpl welcome	count=1
class	constructs a heading ||| heading	count=1
function_arg	[function_1] err ||| trial [function_1] [arg_2]	count=1
arg	host ||| host port timeout	count=1
function	the [function_1] [function_2] ||| [function_1] [function_2]	count=2
module	server has sent us ||| ssh	count=1
function	request early termination ||| abort request	count=2
class	reactor ||| threaded select reactor	count=1
arg	application bytes and ||| bytes	count=2
function	of method names ||| prefixed method names	count=1
function	events for that stream ||| stream	count=1
function	module ||| module	count=2
function	the underlying pkey ||| key	count=1
arg	the ||| jid password	count=1
function	file for changes ||| monitor file	count=1
function	make a ||| make	count=3
class	other side is ||| sshconnection	count=1
function	string ends [function_2] ||| [function_2] [function_1]	count=2
function_arg	given a blob [function_1] [arg_2] ||| internet key pair [function_1] [arg_2]	count=3
class	this structure object reports ||| message structure	count=2
class	iteration ||| looping call	count=1
function	log formatted log ||| log	count=1
class	all calls to ||| maildir name	count=1
arg	credentials an implementor ||| credentials mind	count=2
function	create and ||| create	count=1
module	[module_1] cursor down ||| [module_1] [module_2]	count=4
class	an unparsed entry ||| unparsed entry	count=2
function	messages via ||| call remote	count=1
class	retrieve ||| cert base	count=2
function	set our ||| set	count=2
function	return the ||| get path	count=1
class	permanently ||| body producer	count=1
module	this is connected ||| internet	count=1
function	set the c{self attributename} ||| set	count=1
function	[function_1] a server ||| [function_2] [function_1]	count=1
module	in a predetermined ||| python	count=1
function	unhandled time ||| unhandled	count=1
module	tostring} by base64-encoding the ||| conch client	count=1
module	the version string ||| conch	count=1
arg	send data ||| data	count=1
class	random value suitable for ||| digest credential factory	count=1
function	sent we will always ||| sent	count=1
class	an ||| client	count=1
function	deprecated ||| replacement	count=1
function	from an ||| from sign	count=1
function	given arguments ||| mutually exclusive arguments	count=1
function	for sending messages ||| call	count=1
function	of human readable ||| human readable	count=2
function_arg	send [arg_2] ||| [arg_2] [function_1]	count=20
function_arg	[function_1] prefixes dictionary ||| [function_1] [arg_2]	count=2
class	i close the ||| dcc	count=1
function_arg	[function_1] [arg_2] ||| [function_1] changed [arg_2]	count=3
function	of bytes [function_2] ||| [function_2] [function_1]	count=1
function_arg	an [arg_2] ||| [function_1] [arg_2]	count=4
module	a particular positioning attribute ||| positioning	count=1
function	a message receiver for ||| message	count=1
module_class	unparsed [class_2] ||| [module_1] unparsed [class_2]	count=4
function	long response is expected ||| long	count=1
class	has ||| daily log	count=1
module	formatting ||| words protocols	count=1
function	dcc resume request ||| dcc resume	count=2
function	as a flat list ||| attrs	count=1
function_arg	logging to [arg_2] ||| [arg_2] [function_1]	count=1
arg	a string [arg] int ||| [arg]	count=1
arg	the given path this ||| path protocol offset	count=1
function	is authorized ||| authorized resource	count=1
function	received a msg_userauth_success ||| ssh userauth success	count=1
function	to [function_1] [function_2] ||| [function_1] [function_2]	count=7
arg	readers and ||| readers	count=1
function	[function_1] exists in ||| [function_1] [function_2]	count=4
class	register ||| portable gireactor	count=1
arg	the given request is ||| request	count=1
class	of my process's ||| process writer	count=1
module	of the timeout ||| mail	count=1
function	be passed [function] 4-tuples ||| [function]	count=1
function	login [function_2] ||| [function_2] [function_1]	count=1
class	by resuming ||| file body	count=1
class	process' stdin ||| process	count=1
function	hard links to ||| hard links	count=1
function	[function_1] clientside cache ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] specified c{nodeid} as any ||| [function_1] [arg_2] nodeid	count=3
class	l{ipv4address} or ||| server	count=1
function	bytes received ||| received	count=1
function	to find the ||| find	count=1
module	in which ||| mail	count=2
function	hash of the underlying ||| key hash	count=1
module	that we will ||| conch	count=1
function	list of ||| deprecated	count=1
arg	c{classobj}, ||| classobj prefix	count=1
function	enable debug hooks ||| debug	count=1
function	[function_1] linux ||| [function_1] [function_2]	count=1
function	received either ||| received	count=1
function	when the server ||| server	count=1
function	specified message-id exists in ||| article exists	count=1
class	name into the ||| name	count=1
class	process ||| process	count=13
module	on ||| insults	count=1
function	data is ||| data	count=1
function	exception [function_2] ||| [function_1] [function_2]	count=4
module	file in the list ||| conch	count=1
arg	a file directly this ||| file	count=1
arg	bytes to this ||| bytes	count=1
function	send a noop ||| noop	count=1
module_class	this file path ||| python ifile path	count=1
function	key exchange is in ||| allowed key exchange	count=1
function	beacon ||| beacon	count=1
function_arg	[function_1] [arg_2] ||| [function_1] unicode [arg_2]	count=1
module_class	@return boolean indicating whether [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	into the given ||| into	count=1
class	a string ||| maildir name generator	count=1
class	this l{deferredlist} ||| list	count=1
function	escape some ||| escape for	count=1
arg	size the maximum ||| size	count=1
function	if loopback ||| loopback	count=1
class	the ||| base feature initiating	count=1
class	run ||| synchronous test case	count=1
module	execute ||| enterprise	count=1
function	a decimal ||| decimal	count=1
arg	to this ||| cls	count=2
class	to be called after [class_1] [class_2] ||| [class_2] [class_1] add cleanup	count=2
arg	convert a description ||| description	count=1
class	possible launch relayers ||| smart host smtprelaying	count=1
function	do any cleanup ||| cleanup	count=1
function_arg	[function_1] l{localworkeramp} instance ||| [function_1] [arg_2]	count=1
arg	query to a server ||| query servers	count=1
module	instance and [module] associated file ||| [module]	count=1
arg	a child resource to ||| child	count=1
arg	a l{memoryworker} ||| pending	count=1
function	[function_1] [function_2] keys ||| [function_1] [function_2] identities data	count=1
class	a redirect ||| redirect agent	count=1
function_arg	ipv6 [arg_2] ||| [function_1] [arg_2]	count=1
arg	passed as the ||| f	count=1
function	the running state ||| running	count=1
arg	a wrapper ||| wrapper	count=1
class	[class_1] an ||| [class_2] [class_1]	count=1
class	structure ||| structure	count=2
function	angular [function] of ||| angle [function]	count=1
module	l{_connectedprotocol}, ||| names	count=1
class	it prints ||| reporter	count=1
function	create a response to ||| response	count=1
function	noop ||| noop	count=2
module	connection has ||| protocols jabber	count=1
module_class	for this file ||| python file path	count=1
module	c{true} if the ||| internet	count=1
function_arg	[function_1] returned ||| [function_1] [arg_2]	count=3
function	body for the article ||| article request	count=1
class	a log file ||| base log file	count=1
module_class	that [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	xmlstream when ||| connect authenticator	count=1
module	be called when the ||| internet	count=1
class	failure's type is in ||| failure	count=1
function	with a [function_2] ||| [function_1] [function_2]	count=4
function	sending messages via amp ||| call remote	count=1
function	this private ||| from string private blob	count=1
arg	sends us a message ||| message	count=1
function_arg	doc chunks [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	send a [arg_2] ||| [function_1] [arg_2]	count=14
function	open a ||| open for reading	count=1
function	or load ||| or	count=1
arg	an indication of what ||| host serv_name username	count=1
class	context ||| context	count=2
function	a list ||| get	count=1
arg	a c{failure} with ||| error errorclass frames	count=1
module	the cursor to the ||| conch	count=1
function	process [function_2] ||| [function_1] [function_2]	count=4
arg	l{remotereference} and the name ||| obj name	count=1
function	format a string ||| format	count=1
function	[function_1] traceback ||| [function_1] detailed [function_2]	count=1
function	deprecated api ||| replacement string	count=1
class	characters we've ||| to stan	count=1
arg	using this object as ||| obj	count=1
function	@return the [function] in ||| [function]	count=1
module	the user for ||| conch	count=1
class	pop3 server ||| iserver factory pop3	count=1
function	marked todo checks ||| todo	count=1
class	a client ||| agent	count=1
function	certificate info ||| certificate	count=1
module	context using ||| application	count=1
function	processor for files ||| opt processor	count=1
class	complete ||| netstring	count=1
function	to find ||| find	count=1
class	which this structure ||| message structure	count=1
function	a list to ||| list	count=1
function_arg	run the [arg_2] ||| [function_1] with patches [arg_2]	count=1
function	port when the service ||| service	count=1
function_arg	kicked [arg_2] ||| [function_1] kickee [arg_2]	count=1
arg	login get the username ||| username	count=1
module_class	from the [class_2] ||| [module_1] [class_2]	count=9
function	of shell code ||| shell code	count=2
class	intended to ||| maildir	count=1
class	of c{key} only if ||| mem cache protocol	count=1
function	construct a client ||| client	count=1
function	object it is running ||| deprecated	count=1
function	the above mapping ||| mapping	count=1
function	a [function] ||| [function]	count=5
function	interface of ||| interface	count=1
function	signed [function_2] ||| [function_2] [function_1]	count=1
function	password ||| auth password	count=1
arg	name ||| name value	count=1
arg	[arg_1] host ||| [arg_2] [arg_1]	count=1
function	visible satellite information from ||| fix	count=1
function	objects that implement l{icheckerfactory} ||| checker factories	count=1
function_arg	type as [arg_2] ||| [arg_2] [function_1]	count=1
class	the message as it ||| maildir mailbox append message task	count=1
function	c{pattern} is c{bytes}, ||| same type	count=1
function	method [function] c{teardown} ||| run fixtures [function]	count=1
function_arg	[function_1] an event ||| [arg_2] [function_1]	count=1
arg	this object as a ||| obj	count=1
arg	receive a packet on ||| messagenum packet	count=1
function	return ||| get service	count=1
class	process handle ||| process	count=1
function	add a filedescriptor for ||| add	count=7
function	create a new ||| init	count=1
arg	of articles ||| low high id	count=1
rep	the filepath's [function_arg_2] ||| [module_class_1] stat [function_arg_2]	count=4
class	across ||| maildir	count=2
function_arg	[function_1] into ||| [arg_2] [function_1]	count=1
function	log prefix to ||| log prefix	count=1
function	a result ||| result	count=1
function	write into the receive ||| flush receive	count=1
function	will return ||| get	count=1
function	as the last access ||| access	count=1
function	an openssl cipher ||| open sslcipher	count=1
module_class	uses the i{chunked} ||| web chunked transfer	count=1
arg	more ||| uid	count=3
arg	data frame ||| data	count=1
function	set the [function_2] ||| [function_2] [function_1]	count=5
class	to a zippath ||| zip map	count=1
arg	@param user the hostmask ||| user channel	count=1
function	that contains test ||| test case	count=1
function	[function_1] file ||| [function_2] [function_1]	count=7
arg	c{query} ||| query msgid msg lastsequenceid	count=1
class	c{key} by given ||| mem cache protocol	count=2
class	an idle one or ||| team	count=1
function	[function_1] first filename ||| [function_2] [function_1]	count=4
function	query and return l{none} ||| operation	count=1
arg	given test failed ||| test todo	count=2
function_arg	[function_1] [arg_2] ||| [function_1] child [arg_2]	count=5
module	a pre-built ||| jabber	count=1
function	build the [function_2] ||| [function_1] [function_2]	count=3
function	ssl [function_2] ||| [function_2] [function_1]	count=4
arg	[arg_1] l{twisted ||| [arg_1] [arg_2]	count=1
class	this observer will ||| log observer	count=1
function	and return an ||| get	count=1
function	[function_1] as deprecated ||| [function_2] [function_1]	count=8
module	the avatar ||| conch ssh	count=1
function	is c{bytes}, [function_2] ||| [function_2] path [function_1] as pattern	count=1
function	receive a msg_unimplemented ||| unimplemented	count=1
function	for consuming the payload ||| prepare for payload	count=1
class	value ||| factory	count=1
arg	some ||| data	count=2
function	[function_1] a resolver ||| [function_1] [function_2]	count=1
arg	or other c{irenderable} ||| doctype _failelement	count=1
function	derive a namespace from ||| namespace from	count=1
arg	given mode ||| mode	count=1
function	bytes to its window ||| window adjust	count=1
class	object to encode and ||| banana	count=1
function	return a class to ||| get	count=1
function	encoder ||| encoder	count=1
function	from the ||| from message	count=1
function_arg	chat [arg_2] ||| [arg_2] [function_1]	count=3
class	the running service ||| sshtransport	count=1
class	[class_1] authentication ||| [class_1] [class_2]	count=2
arg	given name and account ||| name	count=2
class	connection and ||| base	count=1
function_arg	[function_1] mailbox this ||| [arg_2] [function_1]	count=1
class	transport ||| abstract datagram protocol	count=4
arg	@type address [arg] @param ||| address [arg]	count=2
class	private [class_2] ||| [class_1] [class_2] load pem class	count=1
function	[function_1] i{kexinit} message ||| [function_1] [function_2]	count=1
module_class	[module_1] key ||| [class_2] [module_1]	count=1
arg	the given [arg] run whatever ||| [arg]	count=1
class	this function across all ||| maildir	count=1
function	to a child ||| child	count=1
class	database [class] one becomes ||| [class]	count=1
function	value of ||| value	count=1
module	[module_1] cursor up ||| [module_1] [module_2]	count=4
class	this component wishes ||| connect component authenticator	count=1
arg	log a failure ||| format failure	count=1
function	drain ||| drip	count=1
arg	[arg_1] a module ||| [arg_2] [arg_1]	count=2
class	date has ||| daily log	count=1
class	to this ||| maildir	count=1
function	more body data ||| body data	count=1
function	c{datetime ||| date and time	count=1
arg	[arg] calling ||| [arg]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] port factory backlog [arg_2]	count=2
module_class	the domain ||| mail domain	count=2
arg	a wrapper [arg_2] ||| [arg_1] [arg_2]	count=4
module	that we will stop ||| conch	count=1
function	the current failure ||| failure	count=1
arg	header into ||| header	count=1
function_arg	[function_1] with ||| [function_1] [arg_2]	count=3
class	date has ||| file	count=1
arg	payload : ||| packet	count=20
function	address ||| address	count=4
arg	either for reading or ||| source primary other primaryflag	count=1
arg	of c{tag} ||| tag	count=5
function	which started ||| started connecting	count=1
class	a ||| generator	count=1
function	to the end of ||| end	count=1
arg	of c{message} (a l{message} ||| cls message	count=1
function	perform a checkpoint ||| check	count=1
function	copying bytes to the ||| producing	count=1
class	node ||| node	count=1
function	returns an address describing ||| get host	count=1
function	inverse [function_2] ||| [function_1] [function_2]	count=1
module	intended ||| mail	count=1
function	mapping ||| log level mapping	count=1
class	string which is intended ||| name generator	count=1
function	remove the [function_2] ||| [function_2] [function_1]	count=2
arg	id a ||| id	count=1
function	sent a malformed ||| authmalformed	count=1
function	not have a result ||| result	count=1
function	create the ||| create	count=1
arg	[arg_1] client protocol ||| [arg_2] [arg_1]	count=2
class	from the server gotoverview() ||| nntpclient	count=1
function	discard the contents ||| sync	count=1
function	rename ||| rename	count=1
class	process's stdin ||| process writer	count=1
module	to be unique ||| mail	count=1
module_class	to the file ||| mail file message	count=1
module	indicate ||| conch	count=1
function	the value of ||| value	count=1
arg	l{ireactortcp} provider ||| port backlog interface	count=3
function	local ||| local	count=1
arg	[arg_1] and ||| [arg_1] client [arg_2]	count=1
function	type as ||| type	count=1
arg	incoming mac ||| seqid data mac	count=1
function	retrieve [function_2] ||| [function_2] [function_1]	count=7
class	notify l{boxreceiver} ||| binary box	count=1
class	which this call ||| call	count=1
function	read [function_2] ||| [function_1] [function_2]	count=7
arg	an implementor of l{twisted ||| mind	count=1
class	print 'message' in the ||| reporter	count=1
class	has changed since ||| log file	count=1
function	writing or ||| do write or	count=2
arg	path ||| path	count=20
arg	readers and [arg_2] ||| [arg_1] [arg_2]	count=4
class	visible satellite information ||| nmeaadapter	count=1
function	send a message ||| send	count=1
class	valid file ||| ifile	count=1
function	[function_1] snac and ||| [function_1] [function_2]	count=1
function	accountname string @param ||| init	count=1
function	challenge for ||| challenge	count=1
class	infinite ||| infinite	count=1
function	the name of this ||| name	count=1
function	factory to [function_2] ||| [function_2] endpoint [function_1]	count=2
class	prepare ||| build ext twisted	count=1
function	fd ||| fd	count=1
class	this function across ||| maildir name	count=1
arg	[arg] by ||| [arg]	count=6
function	of message to be ||| mail	count=1
class	domain name if ||| domain	count=1
arg	consumer for each time ||| consumer	count=1
module	printable bytes to the ||| conch	count=1
arg	the server challenge ||| challenge	count=1
arg	element or other c{irenderable} ||| request element doctype _failelement	count=1
function	of xhdr data ||| xhdr request	count=1
class	text ||| text	count=2
arg	an l{httpclientparser} to ||| rest	count=1
class	read ||| iread handle	count=1
class	for in this mailbox ||| imailbox	count=1
module_class	group [class_2] ||| [module_1] group [class_2]	count=8
function	[function_1] log ||| [function_2] [function_1]	count=2
class	[class] consists ||| [class]	count=2
module_class	[module_1] entry from ||| [module_1] unparsed [class_2]	count=1
function	interface for [function_2] ||| [function_2] [function_1]	count=6
function	to listen on a ||| listen	count=1
arg	given dns records ||| cnamesleft	count=1
function	set the c{_deprecated_info} flag ||| get	count=1
class	a www-authenticate challenge ||| credential factory	count=1
function	store [function_2] ||| [function_2] [function_1]	count=3
function	exteneded ||| channel extended	count=1
arg	a [arg_2] ||| [arg_2] [arg_1]	count=3
arg	hostname ||| hostname	count=3
class	start monitoring ||| file monitoring service	count=1
function	[function_1] for ||| [function_2] [function_1]	count=8
function	[function_1] for later ||| [function_1] [function_2]	count=1
arg	issue a query to ||| query servers	count=1
function	[function_1] delay and ||| [function_2] [function_1]	count=2
function	[function_1] names for ||| [function_2] [function_1]	count=3
arg	bytes ||| bytes	count=5
function	retrieve the flags ||| flags	count=2
arg	given task ||| task	count=1
class	references by c{self frame} ||| fragment element	count=1
module_class	of the connection ||| web h2connection	count=1
class	@param ||| tcp6server endpoint	count=1
function	to its window ||| ssh channel window adjust	count=1
function_arg	convert [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
class	be unique ||| maildir name	count=1
class	unhandled ||| ibox sender	count=1
arg	invalid for data to ||| data	count=2
function	body of ||| get body	count=1
arg	true heading ||| heading	count=1
function	compute a hash ||| hash	count=1
function	amp box containing ||| from box	count=1
function	the heartbeat l{loopingcall} ||| heartbeat	count=1
function_arg	[function_1] _switchbox ||| [function_1] [arg_2]	count=1
class	update [class] ||| domain [class] default	count=1
function_arg	children that [arg_2] ||| [arg_2] [function_1]	count=1
class	retrieving ||| cooperative	count=1
class	will stop performing ||| itelnet transport	count=1
function	receiver which delivers ||| receiver	count=1
arg	a user ||| user	count=7
function	on this logger which ||| logger for	count=1
function	user to ||| get	count=1
class	reactor ||| select reactor	count=1
arg	the documentation in c{docdir} ||| docdir builddir version	count=1
function	existing child with ||| child search	count=2
class	processes reboots ||| maildir name	count=1
class	to this function across ||| name generator	count=1
function	twisted version ||| version	count=1
module_class	parse the [class_2] ||| [module_1] insults [class_2]	count=1
function	to file ("-" for ||| file	count=1
function	to its window ||| channel window adjust	count=1
function	next line ||| next line	count=2
function	channel request failed ||| eb channel request	count=2
function_arg	the parent [arg_2] ||| [arg_2] [function_1]	count=1
arg	invalid for data ||| data	count=2
function	new conversation ||| conversation	count=1
function_arg	switch this [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] [function_2] or not ||| is [function_2] [function_1]	count=3
class	this message ||| message structure	count=1
function	[function_1] a snac ||| [function_2] [function_1]	count=1
function	sign for a hemisphere ||| fix hemisphere sign	count=1
function	uid of a message ||| uid	count=1
function	authorized keys that are ||| authorized keys	count=1
class	this channel exists ||| command channel	count=1
class	create ||| iopen sslclient connection creator	count=1
module	return c{false} if the ||| python	count=1
arg	of observers this ||| observers discardbuffer redirectstandardio	count=1
function	the old ||| old	count=1
function	names ||| names to	count=1
arg	given ||| name value	count=1
arg	nmea [arg] minus ||| [arg]	count=1
module	send this message ||| mail	count=1
arg	write out a string ||| write	count=1
arg	the given ||| format replacement	count=2
module_class	[module_1] contacts list ||| [module_1] [class_2]	count=8
class	validate ||| imessage delivery	count=1
class	the avatar ||| avatar	count=1
function	cleanup on ||| cleanup	count=1
function	msg_service_accept message ||| service accept	count=1
module	reboots etc ||| mail	count=1
function	the date [function_2] ||| [function_2] [function_1]	count=2
arg	[arg_1] oscaruser ||| [arg_1] message [arg_2]	count=2
module	of the ||| internet	count=1
module	to dispatch ||| internet	count=1
module	determine if the given ||| conch	count=1
function_arg	[function_1] [arg_2] ||| [function_1] event [arg_2]	count=1
function	close [function_2] ||| [function_1] [function_2]	count=1
function	fix ||| fix	count=1
function	used the the setup ||| setup	count=1
function	body for the specified ||| body	count=1
arg	c{f(*args **kwargs)}, but ||| suppressedwarnings f	count=1
function	buffer this makes ||| buffer	count=1
module_class	[module_1] vcs ||| [module_1] [class_2]	count=2
module	using ||| protocols	count=1
arg	domain ||| reactor service domain factory	count=1
function	[function] of ||| list dynamic [function]	count=1
function	return an iterator ||| get	count=2
function	an authentication ||| auth	count=1
arg	a previously generated ||| uid	count=1
function	may broadcast this is ||| broadcast allowed	count=2
function	character which delimits namespaces ||| hierarchical delimiter	count=1
function	the user ||| user	count=1
function	print a [function_2] ||| [function_1] brief [function_2]	count=1
class	that we will ||| itelnet	count=1
arg	file directly this ||| file	count=1
function	last status change ||| status change	count=2
function	to execute [function_2] ||| [function_1] [function_2]	count=2
function	pre-built l{servicemanager}, ||| build service manager	count=1
arg	[arg_1] query ||| [arg_1] [arg_2]	count=2
arg	description ||| reactor description	count=1
function_arg	[function_1] a node ||| [arg_2] [function_1]	count=5
function_arg	[function_1] packet ||| [arg_2] [function_1]	count=1
function	[function_1] on ||| [function_1] [function_2]	count=1
function	@return the [function] ||| [function]	count=1
arg	reactor and ||| reactor	count=1
module_class	[module_1] were ||| [module_1] [class_2]	count=6
arg	when a true heading ||| heading	count=1
module	used by the ||| web	count=1
function	write a sequence of ||| write sequence	count=1
arg	writers and ||| writers	count=1
arg	with [arg_2] ||| [arg_2] [arg_1]	count=2
class	lock ||| deferred lock	count=1
function	uses expat-based stream ||| stream	count=1
function	retrieves the number ||| number	count=1
function	object ||| from text	count=2
function	[function_1] log observer ||| [function_1] [function_2]	count=2
function	return a list of ||| get	count=2
module	pidfile ||| application	count=1
function	additional options to ||| additional options	count=2
function	timeout value set on ||| timeout	count=1
function	the above mapping ||| level mapping	count=1
arg	the given namespaces ||| globals locals	count=1
function	underlying pkey object ||| key	count=1
function	an alternative ||| replacement string	count=1
function	when connection is made ||| connection made	count=1
class	and ||| call	count=1
function_arg	all [arg_2] ||| [arg_2] [function_1]	count=6
function	certificate [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] stream ||| [function_1] [function_2]	count=6
module	[module] multiple precision ||| [module]	count=2
arg	user [arg_2] ||| [arg_1] channel [arg_2]	count=1
class	a process instance to ||| process	count=1
function	[function_1] handler ||| [function_2] [function_1]	count=1
function_arg	one stat line ||| cmd stat line	count=1
module_class	[module_1] defined ||| [module_1] [class_2]	count=2
function	the object it ||| get deprecated	count=1
function	the overview format ||| overview	count=1
arg	aren't value constants ||| level	count=1
function	collect its text ||| text	count=1
function	control sequence ||| control sequence	count=2
arg	attributes for ||| attrs	count=1
function	hint to continue writing ||| start writing	count=1
function	start this l{clientservice}, ||| start	count=1
arg	me [arg_2] ||| [arg_2] [arg_1]	count=3
function	an l{ipv4address} or ||| get	count=1
function	a deprecated ||| string	count=1
function	stream if available and ||| stream	count=1
module	sending the failure ||| conch ssh	count=2
function_arg	[function_1] [arg_2] then read and deliver ||| [function_1] [arg_2]	count=6
function	attributes for drawing on ||| attributes	count=1
class	which is ||| name	count=1
class	@return ||| xforwarded	count=1
arg	coordinate type ||| coordinatetype	count=1
function	flag if ||| get deprecated	count=1
function_arg	[function_1] given name ||| [function_1] [arg_2]	count=2
function	given signal [function_2] ||| [function_1] [function_2]	count=1
function	initiate the ||| do connect	count=1
function	a specific ||| fetch specific	count=1
class	channel exists ||| channel	count=1
class	received data represents a ||| netstring receiver	count=1
class	make ||| abstract datagram protocol	count=1
function	a partial xml document ||| xml	count=1
class	the path in the ||| path	count=1
function	challenge ||| challenge	count=2
function	connection is [function_2] ||| [function_2] [function_1]	count=5
module_class	[module_1] [class_2] ||| [module_1] unparsed [class_2]	count=4
arg	from the ||| answers	count=1
arg	following ||| bodyproducer	count=1
module	to given ||| internet	count=2
module	instance and [module] associated ||| [module]	count=1
function_arg	[function_1] port ||| [function_1] [arg_2]	count=3
module	testcase subclass or an ||| trial	count=1
function	hash ||| key hash	count=1
arg	udppayloadsize ||| udppayloadsize	count=1
function	called by l{unittest testcase} ||| cleanup	count=1
function	name is the ||| is	count=1
arg	channel this [arg_2] ||| data [arg_1] [arg_2] data	count=1
arg	test raises ||| test	count=1
function	to reconnect in progress ||| trying	count=1
function	credentials interfaces that can ||| credentials interfaces	count=1
module	given ||| python	count=1
function	chunk read and send ||| send	count=1
function_arg	[function_1] given work ||| [arg_2] [function_1]	count=1
function	accepted a ||| do accept	count=1
arg	called when failed to ||| reason	count=1
function	an l{iprocesstransport} provider ||| force stop process	count=1
function_arg	get [arg_2] ||| [function_1] [arg_2] nodeid	count=9
function	[function_1] the time ||| [function_2] [function_1]	count=2
function	of message ||| mail	count=1
function	of last access from ||| modification	count=2
function_arg	article [arg_2] ||| [arg_2] [function_1]	count=3
function	the api documentation of ||| apidocs	count=1
arg	a channel ||| channel kicker	count=2
function_arg	[function_1] provides one ||| [arg_2] [function_1]	count=1
function	writing [function_2] ||| [function_2] [function_1]	count=3
class	get ||| string list mailbox	count=1
module	testcase ||| trial	count=2
function	the c{_deprecated_info} ||| deprecated	count=1
function	closes ||| lose connection	count=1
class	record in ||| record	count=1
class	all ||| maildir	count=2
function	[function_1] a message ||| [function_2] [function_1]	count=2
function	success in the normal ||| success	count=1
arg	construct ||| src dst	count=3
arg	with 0 or 1 ||| code resp numok	count=1
function	send an unexpected ||| unexpected	count=1
function	method ||| prefixed method	count=1
function	registers an authenticator ||| register authenticator	count=1
class	and ||| python	count=1
arg	plaintext ||| password	count=1
class	tls negotiation and reset ||| tlsinitiating initializer	count=1
class	as ||| digest credential	count=1
class	l{stream [class] endpoint <interfaces ||| [class]	count=1
module	key ask the ||| conch	count=1
class	observer ||| log observer	count=4
arg	a particular perspective ||| perspective	count=1
function	read buffer this ||| read buffer	count=2
function	have requested a resume ||| resume	count=1
function	additional options ||| additional options	count=2
function	to send ||| to copy	count=2
class	window ||| ui	count=1
function	[function_1] [function_2] ||| [function_2] endpoint [function_1]	count=3
class	the date ||| daily	count=1
function	reading writing or was ||| do write or	count=1
function	[function_1] change ||| [function_2] [function_1]	count=1
class	this request to ||| request	count=2
arg	digest for ||| ha1 ha2 algo psznonce	count=1
class	of my process's stdin ||| process writer	count=1
class	the pop3 ||| iserver factory pop3	count=1
module	of this ||| positioning	count=2
function	ensure that [function_2] ||| [function_2] [function_1]	count=2
arg	a speed ||| speed	count=1
class	known [class] ||| [class]	count=1
class	underlying ||| public key	count=2
class	run ||| wx reactor	count=1
class	has changed ||| daily	count=1
function	polite ||| get	count=1
class	challenge ||| credential factory	count=2
function	add an ||| add	count=2
function_arg	[function_1] work ||| [arg_2] [function_1]	count=1
class	bootstrap observers ||| bootstrap mixin	count=1
function	constructs ||| build service	count=1
module	[module] envelope ||| [module]	count=3
module_class	[module_1] text lines ||| [module_1] [class_2]	count=8
function	get a ||| get and clear	count=1
class	all processes ||| maildir name	count=1
class	peer ||| itelnet protocol	count=2
function_arg	[function_1] [arg_2] specified c{nodeid} as any ||| [function_1] [arg_2] nodeattrs	count=2
function_arg	request payload : ||| request packet	count=1
module	observer if ||| python	count=1
function_arg	given [arg_2] ||| [arg_2] [function_1]	count=1
arg	transport ||| transport	count=4
module	responses to the ||| conch	count=1
class	current authentication type ||| auth client	count=1
function	[function_1] and to ||| [function_2] [function_1]	count=8
class	call ||| process	count=2
arg	c{regexp} search ||| text regex msg	count=1
function	find the ||| find	count=2
function	readers ||| readers	count=1
module	running [module] given ||| [module]	count=1
module	the working directory and ||| scripts	count=1
function	return the list ||| get	count=2
function	to ||| replacement string	count=1
arg	domain the domain ||| service domain factory	count=1
module	[module] rate ||| words [module]	count=3
function	joining to c{path} ||| coerce to	count=1
function	cookie ||| cookie	count=3
arg	the decorators are ||| decorators	count=1
arg	initiate a hostname ||| hostname portnumber addresstypes	count=1
function	[function_1] line of ||| [function_1] [function_2]	count=5
class	reset ||| looping call	count=1
arg	[arg] 0 then ||| item [arg]	count=1
arg	a hostname and port ||| hostname port	count=1
function	outgoing multicast ||| outgoing	count=2
function	variable name ||| name	count=1
function_arg	resume request [arg_2] ||| [arg_2] [function_1]	count=1
function	certificate request ||| certificate request	count=2
function_arg	its window [arg_2] ||| [arg_2] [function_1]	count=1
function	inode number and device ||| device	count=1
arg	[arg_1] end ||| [arg_2] [arg_1]	count=3
function	add an expected failure ||| add expected failure	count=1
function	a textual and a ||| host as bytes and text	count=1
function	start [function_2] ||| [function_1] checking [function_2]	count=1
function	a date [function] ||| to rfc4034date [function]	count=3
function	[function_1] and ||| [function_1] [function_2]	count=9
function	turns the [function] format into ||| fix [function]	count=1
module	trial ||| trial	count=1
class	name of my ||| tuntap port	count=1
class	changed since last ||| daily log	count=1
function	initial ||| initial	count=1
function	with daemon ||| your host	count=1
function	[function_1] [function_2] ||| irequest [function_1] request [function_2]	count=7
module_class	this url ||| python url	count=2
module	that the clients ||| conch ssh	count=1
class	child process identified ||| iprocess transport	count=1
module_class	the server ||| mail server error	count=1
function	messages which share an ||| kex dh gex group	count=1
function	to ||| to string	count=2
class	the socket ||| port	count=2
arg	length prefix ||| length	count=1
function	an l{iprocesstransport} provider ||| stop process	count=1
function	to our c{self _wrappedfactory} ||| build	count=1
function	xhdr data for the ||| xhdr request	count=1
function_arg	[function_1] will represent ||| [function_1] [arg_2]	count=4
class	internal handler for when ||| h2connection	count=1
function	return a child ||| get child	count=3
function_arg	add an iterator ||| coiterate iterator donedeferred	count=1
function	initial client response ||| initial response	count=3
function_arg	[function_1] iterator to ||| [arg_2] [function_1]	count=2
function	send a snac and ||| send snac	count=1
arg	hints a l{list} of ||| hints	count=1
function	received header ||| received header	count=2
function	disconnects ||| notify on disconnect	count=1
class	time ||| offset time	count=1
function	on ||| get	count=1
function	which share an integer ||| ssh kex dh gex	count=1
module	and ||| words protocols jabber	count=2
arg	the key ||| key value	count=1
arg	a strports description into ||| description	count=1
module_class	return the [class_2] ||| [module_1] [class_2]	count=6
class	which this channel ||| command channel	count=1
function	getpeer but returns an ||| get host	count=1
function	a connection to ||| no connection	count=1
function	any more data ||| ssh channel eof	count=1
function	openssl server connection from ||| client connection	count=1
class	a date ||| date	count=1
function	an article with ||| article	count=1
function	a package ||| is package	count=1
class	all processes reboots etc ||| name	count=1
arg	the given response ||| response	count=1
function	subject of ||| get subject	count=1
function	session cookie ||| session	count=1
arg	to a given ||| protocol message address	count=1
class	display ||| group conversation	count=1
function	linux ||| linux	count=2
arg	from a channel ||| channel	count=1
class	connect the wrapped protocol ||| protocol	count=1
module	constructs a pre-built l{servicemanager}, ||| words	count=1
class	print ||| tree	count=1
arg	namespace the namespace for ||| namespace	count=1
module	invoke ||| protocols	count=1
function	to report [function_2] ||| application basic profiler [function_1] [function_2] module e	count=1
module_class	the fileno() ||| internet process writer	count=1
function	expand c{cipherstring} according ||| expand	count=1
arg	reactor [arg_2] ||| [arg_2] [arg_1]	count=5
class	run ||| ireporter	count=1
function	closing ||| connection lost msg	count=1
module	to [module] access ||| [module]	count=1
arg	for a message ||| message	count=1
arg	a function ||| callable	count=1
class	for server responses received ||| pop3client	count=1
class	be ||| name	count=1
class	suite ||| suite	count=1
function	given signal [function_2] ||| [function_2] [function_1]	count=1
module_class	render the exception ||| web failure element	count=1
module	the user's shell (or ||| conch	count=1
function	from a gsv sentence ||| gsv	count=1
arg	port number ||| port	count=2
function	destination this will ||| destination	count=1
class	this structure ||| structure	count=1
function	format a list of ||| format uidlist	count=1
function_arg	size of [arg_2] ||| [arg_2] [function_1]	count=1
class	the next iteration ||| looping call	count=1
module_class	[module_1] isupport ||| [module_1] [class_2]	count=2
module	this action which is ||| python	count=1
function	[function_1] degrees ||| [function_1] [function_2]	count=2
function	[function_1] with a ||| [function_2] [function_1]	count=3
function	wake up the io ||| waker	count=1
function	render ||| render	count=4
class	@param ||| standard endpoint factory	count=1
class	the file and ||| file	count=2
function	lower-cased name is ||| is	count=1
class	observer method called ||| log observer	count=1
arg	query to a ||| query servers timeout queriesleft	count=1
arg	a query checking ||| query timeout queriesleft	count=1
function	l{interfaces ihandshakelistener} to our ||| handshake completed	count=1
class	current authentication type ||| sshuser auth client	count=1
function	request the server ||| request ssi	count=1
function_arg	[function_1] some data ||| [function_1] [arg_2]	count=4
class	channel exists on ||| command channel	count=1
arg	and then asking it ||| cls	count=1
function	[function_1] factory which ||| [function_1] [function_2]	count=3
arg	flags of one ||| flags mode	count=1
function_arg	[function_1] factory ||| [arg_2] [function_1]	count=1
module	parse the ||| conch	count=1
module	repository once the ||| python	count=1
function	fire a ||| fire	count=1
class	this channel ||| command channel	count=1
function	the group ||| alias group	count=1
function	append file ||| file	count=1
arg	a hostname [arg_2] ||| [arg_1] [arg_2]	count=3
function	the group [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] first filename ||| [function_1] [function_2]	count=4
module	the outgoing initialization vector ||| conch	count=1
function_arg	[function_1] user credentials ||| [arg_2] [function_1]	count=1
module	is this ||| python	count=1
function	mapping adding both ||| level mapping	count=1
function	generate an opaque ||| generate opaque	count=2
function	a method ||| method	count=1
class	setup ||| initializer	count=1
function	when the service ||| service	count=2
function	to the given set ||| to	count=1
arg	speed ||| speed	count=2
class	notify ||| news shelf	count=1
class	calls to ||| maildir name	count=1
function	authenticator ||| authenticator	count=1
module	response generation for the ||| web	count=1
function	changed ||| should	count=1
arg	buddyid == ||| groupid buddyid	count=1
arg	@type file any ||| file	count=1
function	for a unix ||| unix	count=1
function_arg	[function_1] l{gairesolver} ||| [arg_2] [function_1]	count=1
function	failure responses to match ||| match failed	count=1
class	message as it ||| maildir mailbox append message	count=1
function	open a new ||| open	count=1
module_class	if current platform ||| python platform	count=2
function	resume copying ||| resume producing	count=2
module_class	[module_1] scheduled ||| [module_1] [class_2]	count=6
arg	a service ||| service description	count=1
arg	a query to ||| query servers timeout	count=1
function_arg	the parent directory ||| parent keepquery	count=1
function	a list ||| deprecated	count=1
function	remove a selectable for ||| remove	count=6
function	a degrees [function_2] ||| [function_2] [function_1]	count=2
function	stream's flow control ||| flow control	count=2
class	which is intended ||| generator	count=1
function	special-case your state ||| state to publish	count=1
function	name on ||| get method name	count=1
function	response ||| response from	count=2
function	unexpected authentication ||| eb unexpected	count=2
class	the test has run ||| test case	count=1
class	for use as ||| credential factory	count=1
function	status of ||| status	count=1
function	to connect via ||| connect	count=3
module	from wire [module] saving ||| [module]	count=1
module	constructs a ||| protocols	count=1
function	io completion ||| do iteration	count=1
function	namespace from the ||| namespace from	count=2
function	name given a ||| name	count=1
module	unique ||| mail	count=1
module	test in ||| trial	count=1
class	the test is ||| test	count=1
class	mailbox ||| string list mailbox	count=2
function	test cases c{false} otherwise ||| test case	count=1
function	return the size of ||| size	count=1
module	terminal server dispatching to ||| insults	count=1
function_arg	close a [arg_2] ||| [function_1] [arg_2]	count=1
module	contents of any message ||| mail	count=1
arg	specified address pair ||| serveraddress clientaddress	count=1
function_arg	[function_1] [arg_2] ||| [function_1] connection control header [arg_2]	count=21
function	is stopped either by ||| stopped	count=1
function	check [function_2] ||| [function_2] [function_1]	count=3
function_arg	get a [arg_2] ||| [function_1] session [arg_2]	count=1
function	and a c{datetime ||| date and	count=1
function	send me ||| send	count=1
module_class	[module_1] lock ||| [module_1] [class_2]	count=2
class	completely received ||| protocol	count=1
arg	a reactor and ||| reactor	count=1
module	local ||| scripts	count=2
function	register/unregister ||| update registration	count=1
function	object it is running ||| get	count=1
class	the next ||| call	count=1
module	called on the ||| web	count=1
function	are l{cancellederror}s to l{timeouterror}s ||| cancelled to timed out error	count=1
function	a previously-remembered [function_2] ||| [function_1] [function_2]	count=1
function	monkey patch ||| patch	count=1
function	undelete any [function_2] ||| [function_1] [function_2]	count=4
class	the task completed ||| mailbox append message task	count=1
class	interpret ||| decoder	count=1
function	combined log formatted log ||| log	count=1
class	mailbox ||| mailbox	count=6
class	clients asks ||| isftpserver	count=1
module_class	split the file ||| python file	count=1
function	state [function_2] ||| [function_2] [function_1]	count=3
class	text lines ||| text	count=1
module	the ||| web	count=136
function	number as ||| number	count=1
function	protocol ||| body deferred close	count=1
function	nonce parameter ||| nonce	count=1
function	instance of a class ||| instance	count=1
function_arg	[function_1] using ||| [arg_2] [function_1]	count=8
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2]	count=3466
function	set ||| get deprecated	count=1
function	message-id exists in ||| article exists	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] [function_arg_2]	count=102
function	added as a processor ||| opt processor	count=1
arg	@param key the key ||| key value	count=1
arg	reconnecting subclasses ||| connector reason reconnecting	count=1
function	instance to be ||| instance	count=1
arg	record the reason ||| reason	count=1
function	closed ||| lost	count=2
arg	normally be ||| datatype	count=1
function	new request ||| request	count=1
arg	c{messageset} or l{str} ||| headertype headernumber	count=1
function	prefix to ||| prefix	count=1
function	and to ||| collect	count=1
module	encountered ||| web	count=1
module	context using this pidfile ||| application runner	count=1
arg	creator an ||| creator	count=1
function	an rpy file ||| script	count=1
arg	a ||| message	count=1
function	[function_1] internally ||| [function_2] [function_1]	count=6
arg	run a function in ||| f	count=2
function	random value suitable for ||| generate	count=1
arg	[arg_1] an implementor ||| [arg_2] [arg_1]	count=2
function	for the presence ||| contains	count=1
function	get a message ||| message	count=1
module	the message is ||| mail	count=1
function	[function_1] [function_2] ||| [function_1] do accept [function_2]	count=8
function	with ||| string	count=1
function	to a real one ||| to	count=1
function	unjelly an abstract object ||| unjelly	count=1
arg	factory to [arg_2] ||| [arg_1] backlog [arg_2]	count=1
function	helper to build ||| build	count=1
arg	c{inode} with a ||| inode	count=1
arg	following ||| method uri headers bodyproducer	count=1
function_arg	topic to [arg_2] ||| [arg_2] [function_1]	count=1
class	initializes ||| base	count=1
module	canceled ||| internet	count=1
function_arg	[function_1] the directory ||| [arg_2] [function_1]	count=1
function	c{root} into a ||| flatten	count=1
arg	files ||| files remotepath	count=1
function	session cookie and if ||| get session	count=1
function	acquire ||| acquire	count=1
class	stop performing the given ||| itelnet transport	count=1
function	return first [function_2] ||| [function_1] [function_2]	count=1
function	all_record lookup ||| lookup all records	count=2
function	body ||| body data received	count=2
function	successful [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] initial client ||| [function_1] [function_2]	count=1
class	listening ||| stream server	count=1
class	create ||| sslserver connection creator	count=1
function	this to close ||| close	count=1
function	updates ||| update	count=1
function_arg	to build [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] the directory ||| [function_1] repository command [arg_2]	count=1
arg	from the ||| default	count=1
arg	scheme host name ||| scheme host	count=1
function	address of a ||| address	count=1
function	connection it resets the ||| reset	count=1
function_arg	[function_1] given buffer ||| [function_1] to handle [arg_2]	count=1
function	l{iprocesstransport} provider ||| stop process	count=1
function	in decimal ||| in decimal	count=2
function_arg	service [arg_2] ||| [arg_2] [function_1]	count=2
function	c{setup}, [function_1] [function_2] any of these may ||| [function_2] [function_1]	count=2
arg	to receive ||| packet	count=1
function	challenge for ||| get challenge	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to [arg_2]	count=5
function	[function_1] channel ||| [function_2] [function_1]	count=4
arg	of c{query} possibly ||| query msgid msg lastsequenceid	count=1
class	changed since last ||| daily log file	count=1
function	[function_1] person for ||| [function_2] [function_1]	count=1
function	create or load ||| create or	count=1
module_class	[module_1] [class_2] hasn't gone away ||| [module_1] [class_2]	count=3
class	the test ||| synchronous test	count=2
class	to a zippath ||| zip map impl	count=1
module	exit ||| application runner	count=1
arg	a certificate authority's distinguishedname ||| issuerdistinguishedname requestdata verifydncallback serialnumber	count=1
arg	reason is ||| reason	count=1
function	[function_1] exists in ||| [function_2] [function_1]	count=4
module	to a [module] ||| [module]	count=1
module_class	the reactor ||| internet ireactor core	count=1
arg	containing the contents ||| i	count=1
function	for inclusion ||| escaping	count=1
function	l{none} ||| operation	count=1
arg	the file descriptor ||| fd	count=2
function	to tls ||| tls	count=1
function_arg	received bytes ||| received bytes	count=1
function	test ||| test case	count=1
class	which is intended to ||| name	count=1
function	the log prefix to ||| log prefix	count=1
arg	serialize ||| prefixes closeelement defaulturi prefixesinscope	count=1
function	a specific section of ||| fetch specific	count=1
function	set whether this port ||| set	count=1
function_arg	[function_1] group ||| [arg_2] [function_1]	count=2
module_class	[module_1] consumer ||| [module_1] [class_2]	count=2
function	send it to collector ||| send next page	count=1
function	an l{iprocesstransport} provider ||| stop	count=1
function	a string describing the ||| cap	count=1
module	suitable ||| cred	count=1
function	cache on ||| cache	count=1
function	of the handler ||| disown handler	count=1
class	received on this connection ||| receiver	count=1
arg	l{ireactorunix} provider ||| path timeout checkpid	count=1
function	of disconnect ||| on disconnect	count=1
function_arg	[function_1] hints ||| [function_1] [arg_2]	count=1
class	task ||| task	count=4
class	via amp invoke ||| dispatcher	count=1
module_class	the outgoing ||| web iagent	count=1
module	out the avatar if ||| conch	count=1
module	handle the beginning of ||| conch	count=1
arg	the given ||| flags date	count=1
arg	c{message} to a given ||| protocol message address	count=1
arg	connects ||| address protocol maxpacketsize	count=1
arg	from a channel ||| channel kicker message	count=1
arg	a scheduler-like object to ||| terminationpredicatefactory scheduler started	count=1
arg	given queries ||| address queries timeout id	count=1
class	on this l{boxdispatcher} ||| box dispatcher	count=1
class	file descriptor ||| descriptor	count=1
function	reactor started ||| reactor	count=1
function_arg	@param primary ||| init primary domains	count=1
function	[function] operation ||| [function]	count=3
class	an infinite [class_2] ||| [class_1] [class_2]	count=2
function	whether the [function_2] ||| [function_2] [function_1]	count=12
function_arg	[function_1] wrapper ||| [arg_2] [function_1]	count=4
function	gets an attribute of ||| getattr	count=1
module	xml stream ||| jabber	count=2
class	the file ||| dcc file receive	count=1
function	return interface of outgoing ||| get outgoing interface	count=1
class	will stop ||| itelnet	count=1
module	incoming mac using the ||| conch ssh	count=1
function	marks a property as ||| property	count=1
function	the endpoint [function_2] ||| [function_2] [function_1]	count=2
function	header into start stop ||| header	count=1
function	to ||| replay to	count=1
function	l{servicemanager}, ||| manager	count=1
module_class	the i{chunked} ||| web chunked transfer	count=1
function_arg	[function_1] c{inode} with ||| [function_1] [arg_2]	count=4
function	account ||| register account	count=1
arg	l{httpclientparser} to ||| rest	count=1
function	string key for a ||| key	count=1
arg	at archivepathname as ||| archivepathname	count=1
function	[function_1] root object ||| [function_2] [function_1]	count=1
class	__init__ ||| arguments generator	count=1
function	child [function_2] ||| [function_2] [function_1]	count=2
class	[class] new ||| [class]	count=1
arg	[arg_1] locally-unique id ||| [arg_1] [arg_2]	count=3
function	all [function] ||| collect [function]	count=1
class	the deferred ||| deferred	count=1
function	to this private ||| from string private blob	count=1
arg	a ||| factory timeout checkpid	count=1
arg	credentials [arg_2] ||| [arg_2] [arg_1]	count=3
arg	c{value} ||| name value	count=1
function	[function_1] while key ||| [function_2] [function_1]	count=3
function	the io completion port ||| do iteration	count=1
function	node to c{other} if ||| is equal to node	count=1
function_arg	[function_1] option ||| [function_1] [arg_2]	count=6
function	of failed attempts ||| failed attempts	count=2
arg	files ||| previousresult files remotepath	count=1
class	has changed since last ||| daily log file	count=1
module	of available threads ||| python	count=1
function	[function_1] root ||| [function_2] [function_1]	count=5
class	to ||| maildir	count=2
class	a netstring ||| netstring	count=1
arg	in a list ||| list	count=1
module	it as an ||| python	count=1
function	deferred [function] ||| exec [function]	count=1
function	[function_1] private part ||| [function_2] [function_1]	count=1
function	the connection is ||| connection	count=9
class	timer ||| looping call	count=1
function	write out ||| write	count=2
function	filename ||| filename	count=1
module	the outgoing ||| conch	count=1
function	remove a ||| remove connection	count=1
function	accepted [function_2] ||| [function_2] [function_1]	count=2
function_arg	received chunk [arg_2] ||| [arg_2] [function_1]	count=1
function	amp invoke it ||| call remote	count=1
arg	to refer to the ||| autologin username password	count=1
function	[function_1] to ||| [function_2] body [function_1]	count=2
arg	run ||| result	count=1
function_arg	[function_1] data ||| [function_1] [arg_2]	count=6
arg	or xml readable ||| readable	count=1
class	information for extra arguments ||| arguments	count=1
arg	the given response ||| response method	count=1
class	return a path ||| file path	count=2
function	satellite ||| fix	count=1
function	this node to ||| to node	count=2
module	server gotoverview() ||| news	count=1
module	the outgoing initialization vector ||| conch ssh	count=1
function	remove all [function_2] ||| [function_1] [function_2]	count=2
function	a new ||| set new	count=1
arg	to encrypted communication ||| contextfactory tls	count=1
module	this ||| protocols	count=6
arg	this method to ||| to	count=1
function	error message ||| error	count=1
class	for ||| factory	count=1
arg	of local files ||| previousresult files remotepath single	count=1
function_arg	[function_1] a l{gairesolver} ||| [arg_2] [function_1]	count=1
class	all processes reboots ||| name generator	count=1
function	surround a ||| get replacement string	count=1
function	exception which caused ||| error message	count=1
function	inode number and device ||| get device	count=1
module	make the current line ||| conch	count=1
class	this function ||| name generator	count=1
arg	shut it ||| reason	count=1
arg	to me or a ||| message	count=1
function	deprecated to deprecate a ||| deprecated	count=1
function	polite text exhorting the ||| get replacement string	count=1
arg	@param person ||| person	count=1
arg	loggername identifier used ||| loggername	count=1
class	this [class] matches the ||| [class]	count=1
function	factory which will ||| factory	count=1
function	data if one ||| data	count=2
arg	name to newnick and ||| newnick	count=1
function	the server ||| fetch	count=1
class	cprofile profiler ||| cprofile runner	count=1
class	envelope ||| domain queuer	count=1
class	encodes and sends ||| ftp	count=1
module	any message ||| mail	count=1
function	last ||| append	count=1
arg	the given queries ||| queries	count=1
function	has ||| cancel get	count=1
class	the group conversation ||| igroup conversation	count=4
class	portal to ||| portal	count=1
arg	application payload ||| payload	count=2
arg	declare a module-level ||| version message modulename	count=1
module	conversion [module] ||| [module]	count=4
function	add as child ||| add element	count=2
function	[function_1] has failed ||| [function_2] [function_1]	count=1
arg	line ||| cls line	count=1
arg	l{registerreapprocesshandler} ||| pid	count=1
function	gets a notice ||| notice	count=1
module	c{self attributename} property of ||| python	count=2
function	doctype ||| got doctype	count=1
function	[function_1] bio ||| [function_1] [function_2]	count=4
function	with the given ||| client	count=1
function	find the source line ||| maybe find source line	count=1
arg	password and ||| password	count=1
function	the group id ||| group id	count=1
module	from l{_connectedprotocol}, issue a ||| names	count=1
function	function [function] ||| get [function]	count=3
class	deferred has ||| queue	count=1
class	function across all ||| maildir	count=1
module_class	[module_1] gets disconnected ||| [module_1] [class_2]	count=8
class	i ||| aotjellier	count=1
class	marked for deletion ||| imailbox pop3	count=1
class	want log ||| log	count=1
module	given stream and so ||| web	count=1
arg	request but use the ||| timestamp request	count=1
function	the size in ||| size	count=1
function	default ||| default log observer	count=1
function	remove all keys from ||| remove all identities	count=1
arg	the specified keys ||| keys	count=1
class	file ||| file receive	count=3
function	received from ||| box received	count=1
arg	another user ||| user filename port resumepos	count=1
module_class	[module_1] producer ||| [module_1] transport proxy [class_2]	count=7
function	service for ||| service	count=1
function	in c{self ||| child	count=1
module	jabber id that this ||| jabber	count=1
class	directories ||| transfer server	count=2
function	[function_1] ecdh ||| [function_2] [function_1]	count=4
function	which share ||| ssh kex dh gex group	count=1
function	two-tuple ||| list group request	count=1
function	the ipv4 ||| a	count=1
arg	information about the ||| info	count=1
class	if this [class] matches the ||| [class]	count=1
function	create a ||| create	count=7
function	the user id ||| user id	count=1
function	decrement the value of ||| decrement	count=1
function	thread from the ||| thread	count=1
function	to mime ||| load mime	count=1
class	when ||| iresolution receiver	count=2
class	function across all processes ||| generator	count=1
function	[function_1] credentials checkers ||| [function_1] [function_2]	count=1
arg	given response and ||| response	count=1
class	the message to ||| append message	count=2
function_arg	lookup [arg_2] ||| [arg_2] [function_1]	count=1
function	checkers for this ||| checkers	count=1
module	from ||| positioning	count=1
function	locate a callable ||| locate	count=1
function	server implementation ||| implementation	count=1
class	at [class] ||| [class]	count=3
function	removereader} ||| remove reader	count=2
function	[function_1] method ||| [function_2] [function_1]	count=3
function	signal ||| signal	count=2
function	the name ||| name	count=3
function	timeout ||| timeout	count=2
function	been [function_2] ||| [function_1] [function_2]	count=1
function	message-id exists in ||| article exists request	count=2
arg	name and port ||| port	count=1
class	for changing kqueue ||| kqueue	count=1
function	throw [function_2] ||| [function_1] [function_2]	count=5
module	sent from the network ||| web	count=1
class	the deferred has ||| deferred	count=1
function	queue or none if ||| queue	count=1
function	the api documentation ||| apidocs	count=1
function	closing tag ||| tag	count=1
function	get the host ||| get host	count=3
arg	given interface ||| interface default	count=1
function	returns any warning suppressions ||| get suppress	count=1
function_arg	[function_1] a pair ||| [arg_2] [function_1]	count=1
module	containing only the ||| conch	count=1
function	messages via ||| call	count=1
function	series of human readable ||| human readable	count=1
function	channel request ||| eb channel request	count=2
function	into a string for ||| string	count=1
function	in decimal degrees ||| in decimal degrees	count=3
class	all processes ||| generator	count=1
function	hemisphere ||| fix hemisphere	count=1
function	[function_1] some warnings ||| [function_2] [function_1]	count=2
class	this descriptor will use ||| descriptor	count=1
class	scheduled [class] restarts ||| [class]	count=1
function	child resource all path ||| child with default	count=1
function	[function_1] reactor if ||| [function_1] [function_2]	count=4
module	using c{*args}, ||| names	count=1
arg	@param prefixes ||| prefixes	count=1
module	decode the given ||| web	count=1
module	pre-built l{servicemanager}, using the ||| words protocols	count=1
class	for ||| mixin	count=1
arg	service ||| service	count=3
function_arg	read into [arg_2] ||| [function_1] from handle [arg_2]	count=1
module	denied and for the ||| web _auth	count=1
arg	the topic to a ||| channel topic author	count=1
function	peer ||| peer	count=2
arg	blob from ||| blob	count=1
function	class ||| unjellyable for class	count=1
module	key from the ||| conch ssh	count=1
module	portion [module] c{userinfo}; everything ||| [module]	count=1
function_arg	parse a [arg_2] ||| [function_1] trust root path [arg_2]	count=3
module	the ||| conch client	count=9
class	all calls to this ||| name generator	count=1
function	of one stat ||| cmd stat	count=1
arg	c{classobj}, returns a list ||| classobj	count=1
function	context object ||| context	count=1
function	an object from modules ||| name	count=1
class	will try ||| iconnector	count=1
arg	constructs a pre-built l{servicemanager}, ||| password	count=1
class	a predetermined ||| failure	count=1
function	broadcast this is ||| broadcast allowed	count=4
function	a header ||| header	count=1
module	challenge ||| cred	count=1
module	the same number of ||| web	count=1
function	to listen for ||| listen	count=1
class	suitable for securing ||| iopen sslcontext factory	count=2
function	flag if any of ||| get	count=1
function	time at which this ||| time	count=1
class	run ||| reactor base	count=1
class	@param ||| default open sslcontext factory	count=1
class	when the request to [class_1] [class_2] ||| conch [class_1] [class_2] exec	count=2
class	the temporary ||| wrapper	count=2
module_class	this alias to ||| mail alias	count=1
function	lookup ||| lookup mail box	count=2
module	the user's personal i{known ||| conch	count=1
arg	client side of the ||| client	count=1
arg	dns [arg_2] ||| [arg_2] [arg_1]	count=2
class	[class_1] any and ||| [class_1] [class_2]	count=2
function	c{path} [function_1] [function_2] ||| [function_1] [function_2]	count=10
function	via amp ||| call remote	count=1
function	[function_1] tcp connection ||| [function_2] [function_1]	count=1
module	a ||| cred	count=2
function	get a previously-remembered url ||| get root url	count=1
module	string ||| words protocols jabber	count=2
function	client endpoint [function_2] ||| [function_2] [function_1]	count=2
function	number of hard links ||| get number of hard links	count=1
function	with a list ||| deprecated	count=1
function	object it ||| get	count=1
function	indicate the ||| fail	count=1
arg	unique id ||| site uid	count=1
module_class	handle the [class_2] ||| [module_1] [class_2]	count=6
arg	key database ||| hostname key	count=1
arg	l{message} ||| cls message	count=1
function	read into ||| read	count=1
module_class	[module_1] aliases ||| [module_1] [class_2]	count=2
function	register [function_2] ||| [function_1] [function_2]	count=2
function	is no ||| no	count=1
class	the file and ||| log file	count=2
function	an endpoint with proxy ||| proxy endpoint	count=1
module	determine if the ||| conch	count=2
arg	local files ||| previousresult files remotepath	count=1
function	to keep [function_2] ||| [function_1] cache [function_2]	count=1
function	the body ||| body request	count=1
arg	[arg_1] or more ||| [arg_1] [arg_2]	count=5
module	out [module] multiple ||| [module]	count=1
function	as a ctcp ||| ctcp	count=1
module	l{servicemanager}, using the ||| protocols jabber	count=1
arg	an iterable of ||| addr	count=1
arg	query ||| query id msg	count=4
module	c{self pending} [module] ||| [module]	count=3
arg	a c{failure} ||| error errorclass frames	count=1
function	class ||| class	count=6
class	keys and ||| sshpublic key database	count=1
class	received ||| ibox receiver	count=1
class	[class] top of ||| iraw packet [class]	count=2
function	their ||| clean	count=1
function_arg	[function_1] fully ||| [arg_2] [function_1]	count=1
function	v1 message for removing ||| agentc remove	count=1
function	anonymous cred login ||| anonymous	count=1
function	attempt to post an ||| post	count=1
class	file ||| file	count=47
class	report ||| py unit result adapter	count=2
function	access [function] ||| [function]	count=1
arg	refer to the account ||| autologin username password	count=1
arg	login ||| username	count=1
function	request to a ||| request	count=1
class	a script through ||| script	count=1
function	of the test ||| test	count=1
function_arg	@param opener a ||| init opener	count=1
function	offset [function_2] ||| to [function_1] [function_2]	count=2
function	print 'message' ||| end line	count=1
function	a message ||| message	count=15
function	responding [function_2] ||| [function_1] [function_2]	count=3
arg	c{query} possibly ||| msg lastsequenceid	count=1
function	add a ||| add	count=25
module	output of an iterator ||| mail	count=1
class	l{iprotocol datareceived} that checks ||| generic httpchannel	count=1
module	key for [module] ||| [module]	count=2
function	levels to the ||| levels	count=1
function	cleanup ||| cleanup	count=1
class	box ignoring ||| box dispatcher	count=1
function	additional [function_2] ||| [function_1] [function_2]	count=4
arg	the given version ||| version format replacement	count=4
function	contains test cases ||| test case	count=1
function	consider it as an ||| replacement	count=1
module	it ||| protocols	count=1
class	unique across ||| generator	count=1
function	a twisted deprecation ||| deprecated	count=1
function	uncache an object ||| proto uncache	count=2
arg	@param environ a ||| cls environ start	count=1
class	information ||| bosconnection	count=1
function_arg	decode a byte ||| decode strio length	count=2
function_arg	item [function_1] [arg_2] ||| [function_1] item groupid [arg_2]	count=1
function	available personal ||| personal	count=1
module	sending messages via ||| protocols	count=1
function	return the name ||| get description	count=1
arg	running the given test ||| test	count=1
class	the message as ||| mailbox append message	count=1
function	request to be ||| with request	count=1
class	load a hashed ||| hashed	count=1
module	of the underlying pkey ||| internet	count=1
arg	[arg_1] indication ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] c{deferred} ||| [function_1] [arg_2]	count=1
class	arguments ||| arguments	count=1
class	authentication type ||| sshuser auth	count=1
module	called by ||| words	count=2
function	with level sol_socket ||| level	count=1
class	report that the ||| test result	count=1
function	determine what type ||| type	count=1
function	ciphers ||| ciphers	count=1
function	process ends with ||| process	count=1
class	canceled ||| deferred	count=1
class	the test [class_2] ||| [class_2] [class_1]	count=1
function	emit ||| safe emit	count=1
arg	string representing ||| string	count=1
module	continue the process of ||| mail	count=1
module	publish me as ||| spread	count=1
function	[function_1] headers ||| wsgiresponse send [function_1] [function_2]	count=4
module	the timer ||| internet	count=1
class	script through the ||| script	count=1
arg	or examine ||| result rw	count=1
function	cache on the client ||| cache	count=1
function	protocol to register ||| register protocol	count=2
class	a socksv4 packet ||| socksv4	count=1
class	as ||| digest credential factory	count=2
class	function across all ||| maildir name generator	count=1
arg	host a ||| host port	count=1
function	parse a mapping ||| parse	count=1
arg	the topic [arg] ||| [arg]	count=1
arg	an object ||| object	count=4
function	coerce ascii-only byte strings ||| coerced	count=1
arg	new instance using an ||| cls	count=1
arg	in c{docdir} ||| docdir builddir version	count=1
class	of a netstring ||| netstring receiver	count=3
arg	when a length prefix ||| length	count=1
function_arg	[function_1] in progress ||| [function_1] [arg_2]	count=3
function	abort ||| abort	count=1
function	create a l{bucket} ||| init	count=1
function	the threadpool used by ||| thread pool	count=1
function	the source [function_2] ||| [function_1] [function_2]	count=4
class	[class] from a ||| [class]	count=3
function	entity ||| entity	count=3
function	nmeaprotocol timestamp ||| timestamp	count=1
function	path ||| find entry path	count=1
function	the given client ||| client	count=1
arg	before ||| f	count=1
function	to frame the body ||| to body	count=2
function	in c{self archive} which ||| child	count=1
module	find the ||| web	count=2
module	the transport connection has ||| jabber	count=1
function	named plugin package ||| plugin package paths	count=2
function	[function] key ||| [function]	count=5
class	and moduledict ||| path	count=1
class	port's ||| iudptransport	count=1
function	[function_1] application based ||| [function_2] [function_1]	count=2
arg	user a [arg_2] ||| [arg_2] [arg_1]	count=4
module	the server ||| web	count=3
function	function of ||| func of	count=2
function	[function_1] accept response ||| [function_2] [function_1]	count=3
function	define ||| define	count=2
arg	domain to connect to ||| reactor service domain	count=1
class	reactor ||| ireactor core	count=1
module	initialization ||| words protocols	count=1
module_class	[module_1] dispatch ||| [module_1] [class_2]	count=1
function	[function_1] delay and ||| [function_1] [function_2]	count=2
function	initialize with ||| init	count=3
class	underlying [class] unless c{_nomorewritesexpected} ||| length enforcing [class]	count=1
module_class	that the response ||| web response	count=1
function	returns the user id ||| user id	count=1
function	receive a msg_unimplemented message ||| ssh unimplemented	count=1
arg	given group ||| group low	count=1
function_arg	[function_1] [arg_2] ||| names serial number [function_1] [arg_2]	count=1
function	for the command ||| command	count=1
arg	set flags ||| flags silent	count=1
class	been canceled ||| deferred queue	count=1
arg	utc value as a ||| when	count=1
module	global python path but ||| python	count=1
function	[function_1] message ||| [function_1] [function_2]	count=7
class	a non-blocking fashion ||| itransport	count=1
module	the given ||| mail	count=1
module	method ||| spread	count=5
class	for sending messages ||| box dispatcher	count=1
function	the server gotoverview() is ||| fetch	count=1
class	a ||| public key	count=2
arg	referring to a directory ||| pathname	count=1
function	quick and dirty way ||| and disconnect	count=3
arg	child resource to this ||| path child	count=1
arg	name matching c{name} ||| name	count=1
function	targets allowable for commands ||| targmax	count=1
function	the stream has ||| stream	count=2
class	[class_1] monitoring service ||| [class_2] [class_1]	count=1
function	as a processor ||| processor	count=1
class	return ||| web client context factory	count=1
function	for this process ||| process unique	count=2
function	deferred ||| cancel get	count=1
function_arg	topic to [arg_2] ||| [function_1] updated user channel [arg_2]	count=1
class	i{chunked} transfer-encoding ||| chunked transfer	count=2
function	a degrees ||| in degrees	count=1
function	by l{unittest testcase} ||| cleanup	count=1
function	already been [function_2] ||| [function_1] [function_2]	count=1
class	test has [class_2] ||| [class_2] [class_1]	count=1
function	the handler ||| handler	count=1
function	try to execute a ||| execute	count=1
function	to consider it ||| replacement string	count=1
function	[function_1] server ||| [function_1] [function_2]	count=3
function	leaves the ||| left	count=1
function	methods ||| methods	count=1
function	[function_1] change time ||| [function_2] [function_1]	count=1
class	resuming ||| file	count=1
function	unjelly frozenset ||| unjelly frozenset	count=2
function	response to a list ||| list	count=1
module	to connect to the ||| conch ssh	count=1
arg	l{clientservice} which computes an ||| initialdelay maxdelay factor jitter	count=1
function	currently selected [function_2] ||| [function_1] [function_2]	count=1
function	the uid of ||| uid	count=1
class	for a ||| auth option mixin	count=1
function	personal ||| personal	count=1
function	generate ||| generate	count=4
arg	nonce from the request ||| nonce	count=1
function	mail exchange host for ||| mx	count=1
function	to deliver any ||| deliver body initial	count=1
module_class	[module_1] channel ||| [module_1] [class_2]	count=2
function	[function_1] early ||| [function_2] [function_1]	count=4
arg	message on ||| data ancillary flags	count=1
function_arg	of filepaths representing my [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	decimal [function_2] ||| [function_1] [function_2]	count=4
arg	a failure ||| format failure level	count=1
module	information about [module] amp connection ||| [module]	count=1
arg	response and ||| response method	count=1
class	instance from l{_connectedprotocol}, ||| resolver	count=1
function	a malformed authentication ||| authmalformed	count=1
function	the above mapping ||| log level mapping	count=1
module	element ||| xish	count=2
arg	two-sequence of the ||| disp	count=1
function	and a c{str} giving ||| and	count=1
class	consumer by resuming ||| file body producer	count=2
function_arg	an ipv6 [arg_2] ||| [function_1] [arg_2]	count=1
module	when the other ||| conch ssh	count=2
function	connection has been lost ||| connection lost	count=1
module	keys for the connection ||| conch ssh	count=1
function	deliver any ||| deliver body initial	count=1
module_class	the ssh [class_2] ||| [module_1] [class_2]	count=2
function	description ||| description	count=1
function	the given file ||| file	count=1
class	web context factory ||| current policy	count=1
function	that contains test cases ||| test case	count=1
class	certain ||| iinput output system	count=1
function	[function] using l{_irequestencoderfactory ||| get [function]	count=2
arg	domain [arg_2] ||| [arg_2] [arg_1]	count=6
class	port may ||| port	count=2
class	at [class] l{filepath} ||| [class]	count=1
class	the ||| daily log file	count=2
function	convert an object ||| to	count=1
function	success ||| success	count=6
function	as an alternative ||| replacement	count=1
arg	datagram to ||| datagram	count=1
class	the daylight saving time ||| offset time zone	count=1
arg	the exit status ||| status	count=1
function	to a real ||| to	count=1
arg	for the given group ||| group	count=1
function	enter a ||| enter	count=1
module_class	the socket ||| internet port	count=1
arg	the username ||| username	count=1
function	to deliver any future ||| deliver body	count=1
function	a new instance ||| new instance	count=2
arg	with the given queries ||| queries timeout id	count=1
function_arg	send for me ||| copy for perspective	count=1
function	[function_1] [function_2] ||| [function_1] to [function_2]	count=4
arg	given address ||| address	count=2
function	a cookie ||| cookie	count=1
function_arg	dcc resume [arg_2] ||| [arg_2] [function_1]	count=1
arg	module and do ||| module	count=1
function	get registration info ||| get registration info	count=3
class	some ||| socket waker	count=1
module	list ||| python	count=2
function	close-on-exec c{true} ||| close on exec	count=1
class	the message ||| append message task	count=1
function	[function_1] [function_2] to ||| [function_1] [function_2] to	count=1
function	getreaders} ||| get readers	count=2
function	retrieve the ||| get	count=8
class	the ipv6 ||| aaaa	count=1
function	ctcp reply ||| ctcp make reply	count=1
module_class	out this [class_2] ||| [module_1] [class_2]	count=8
arg	protocol factory to the ||| factory	count=1
module_class	out this l{deferred} ||| internet deferred	count=1
function_arg	msg_kex_dh_gex_request message [arg_2] ||| [arg_2] [function_1]	count=1
function	asynchronously invoke a ||| call	count=1
function	auth ||| auth	count=1
class	[class_1] dictionary ||| [class_2] [class_1]	count=6
function	root resource of ||| opt resource	count=1
function	soa ||| authority	count=1
function	a failure [function] ||| info or failure [function]	count=1
class	will ||| itelnet transport	count=2
arg	hostname resolution ||| resolutionreceiver hostname	count=1
class	transport is ||| abstract datagram	count=1
function	socket ||| handle	count=1
class	log file ||| log file	count=4
class	[class_1] this dictionary ||| [class_2] [class_1]	count=5
function	connection ||| connection made	count=1
function	size of ||| size changed	count=1
function	[function_1] state of ||| [function_1] [function_2]	count=1
function	function is an ||| function	count=1
class	by ||| body	count=1
function	[function_1] path to ||| [function_2] [function_1]	count=1
function	interface of [function_2] ||| [function_2] [function_1]	count=6
function_arg	file containing ||| file filename	count=1
function	spwd module if ||| shadow get by name	count=1
function	no connection is expected ||| no connection	count=1
class	server to proxy ||| reverse proxy resource	count=1
arg	the consumer for each ||| consumer	count=1
function_arg	[function_1] function ||| [arg_2] [function_1]	count=1
function_arg	mapping [arg_2] ||| [function_1] prefix [arg_2]	count=1
function	flow [function_2] ||| [function_2] [function_1]	count=2
function	class or type ||| class	count=1
arg	subset ||| reference wildcard	count=1
function	call [function_2] ||| [function_1] [function_2]	count=4
class	file ||| file body producer	count=1
function	throw the original ||| throw	count=1
module	offer to the ||| conch	count=1
arg	and description ||| errorcode description fatal	count=1
class	monitoring [class_2] ||| [class_1] [class_2]	count=1
function	[function_1] encoder ||| [function_2] [function_1]	count=2
class	log ||| log level	count=1
class	client ||| agent	count=1
class	[class_1] task ||| [class_1] [class_2]	count=1
function	a list of headers ||| headers	count=1
function	quote ||| quote arguments	count=2
arg	prefixes ||| prefixes	count=1
module	using ||| application runner	count=2
class	this [class] to ||| [class]	count=1
function	send me i am ||| send	count=1
function	frozenset using the ||| frozenset	count=1
function	objects [function] response data ||| [function] data to	count=1
function	the group to ||| group	count=1
arg	new ||| cls	count=1
function	[function] text ||| fetch [function]	count=1
arg	channel ||| channel kicker message	count=2
function	of c{root} into ||| flatten	count=1
function	[function_1] from ||| [function_1] [function_2]	count=13
function	is msg_userauth_info_response the server ||| ssh userauth pk ok keyboard interactive	count=1
class	completely received without error ||| protocol	count=1
function	close [function_2] ||| [function_2] [function_1]	count=1
function	of the underlying ||| key	count=1
class	a new protocol you ||| binary box protocol	count=1
function	l{bucket} corresponding to the ||| get bucket for	count=1
class	create ||| sslcertificate options	count=1
arg	the filesystem to the ||| fn	count=1
function	an entity for ||| entity	count=2
function	[function_1] readable flags ||| [function_2] [function_1]	count=4
class	component wishes ||| connect component authenticator	count=1
function	the stream window by ||| stream window	count=1
function	xml as ||| xml	count=1
module	the c{_deprecated_info} flag ||| python	count=1
arg	a list s-expression ||| lst	count=1
class	from this protocol ||| protocol	count=1
class	conversing ||| conversation	count=1
function	internet ||| resolved	count=1
function	the generator [function_2] ||| [function_2] [function_1]	count=1
function	subject of this certificate ||| subject	count=1
function	cache a ||| cache	count=1
arg	comparison ||| other	count=1
class	value suitable for use ||| factory	count=1
module	type is in a ||| python	count=1
function	a channel request ||| channel request	count=2
function	ready [function_2] ||| [function_2] or [function_1]	count=1
module	part are [module] ||| [module]	count=1
function	is stopped ||| stopped	count=1
module	an object with the ||| conch ssh	count=1
arg	a child resource ||| path child	count=1
module	l{dnsdatagramprotocol} ||| names	count=1
arg	a pre-built ||| jid password	count=1
class	service ||| service	count=4
function	waiting for the ||| waiting	count=1
module	on set the ||| python	count=1
module	server using the ||| internet	count=1
function_arg	[function_1] an event ||| [function_1] [arg_2]	count=1
class	contacts ||| contacts	count=1
module	messages from the ||| protocols	count=1
function	or load [function_2] ||| [function_2] [function_1]	count=2
function	unjelly ||| unjelly	count=5
class	the ||| deferred	count=1
function	build an [function_2] ||| [function_2] [function_1]	count=3
class	this port ||| ilistening port	count=1
module	partial visible ||| positioning	count=1
class	server gotoverview() is ||| nntpclient	count=1
function	[function_1] logging ||| [function_2] [function_1]	count=1
module_class	[module_1] filepath's ||| [module_1] [class_2]	count=8
class	across all calls ||| maildir name	count=1
function	[function_1] was made ||| [function_1] [function_2]	count=1
arg	look up ||| portonserver portonclient	count=1
function	next [function_2] ||| [function_1] [function_2]	count=1
function_arg	data [arg_2] ||| [function_1] [arg_2]	count=2
function	generate a [function_2] ||| [function_2] [function_1]	count=1
module	resource the ||| web	count=1
class	l{boxdispatcher} ||| box dispatcher	count=1
module	using ||| application	count=1
function	create or retrieve ||| get	count=1
module	publish me as a ||| spread	count=1
class	a ||| request	count=1
class	when a transport ||| abstract datagram protocol	count=1
module	next message added to ||| mail	count=1
module	set the ||| internet	count=1
class	path in the ||| path	count=1
class	display my ||| python path	count=1
function_arg	write [arg_2] ||| [function_1] to fd fd [arg_2]	count=1
arg	data [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
module	connect [module] a ||| [module]	count=1
class	for ||| base	count=2
function_arg	write a [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	install a [arg_2] ||| [arg_2] [function_1]	count=2
class	associated with ||| with	count=1
function	remove an [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] no ||| [function_2] [function_1]	count=4
class	shutdown the pool ||| connection pool	count=1
function	shell code ||| shell code	count=2
function	received ||| perspective message received	count=1
function	body [function_2] ||| [function_2] [function_1]	count=11
arg	a l{localworkeramp} ||| worker result testcases cooperate	count=1
class	remove ||| threaded select reactor	count=1
function_arg	exchange is [arg_2] ||| [function_1] message type [arg_2]	count=1
function	[function_1] buffer ||| [function_1] [function_2]	count=11
module	and their status ||| words im	count=1
class	system user account with ||| system ftprealm	count=1
function_arg	partial xml [arg_2] ||| [arg_2] [function_1]	count=2
module	to the public ||| conch ssh	count=2
function	[function_1] to ||| [function_2] [function_1]	count=24
function	create a l{_fileentry} ||| init	count=1
arg	the command ||| command	count=1
function_arg	[function_1] wrapper and ||| [arg_2] [function_1]	count=4
function	the child process ||| child	count=1
arg	credentials we call ||| credentials	count=1
function	removing [function_2] ||| [function_1] [function_2]	count=1
class	key see _fromstring_public_lsh ||| key	count=1
function	timeout value ||| timeout	count=1
class	[class_1] color ||| [class_2] [class_1]	count=3
function	deliver data ||| deliver	count=1
function	[function_1] trigger ||| [function_2] [function_1]	count=3
function	ssl client [function_2] ||| [function_2] [function_1]	count=2
class	which is intended to ||| maildir	count=1
class	adapter for ||| componentized	count=1
function	is mac os x ||| is mac osx	count=1
arg	[arg_1] locally-unique id ||| [arg_2] [arg_1]	count=3
arg	c{messageset} or ||| headertype headernumber	count=1
function	exhorting the ||| get replacement string	count=1
class	from ||| module	count=1
function	the initial client response ||| initial response	count=1
class	address [class] an ||| [class]	count=1
function	[function_1] the display ||| [function_2] [function_1]	count=12
function	resolve ||| resolve	count=2
function	attribute value ||| with attribute	count=1
function	children that match the ||| children	count=1
function	use as the response ||| response from message	count=2
function	its c{getfilehandle} method ||| details	count=1
function	given generator ||| generator	count=1
function	python module ||| module	count=1
class	stop performing the given ||| transport	count=1
function_arg	[function_1] person ||| [arg_2] [function_1]	count=3
function	the current [function] prompt ||| draw [function]	count=1
function	interfaces that ||| interfaces	count=1
module	return their string representations ||| trial	count=1
module	remove the ||| internet	count=1
arg	the acknowledgement then initiate ||| proto	count=1
arg	[arg_1] a broker ||| [arg_1] [arg_2]	count=1
function	messages} as a ctcp ||| ctcp	count=1
function	name/domain object pairs ||| iteritems	count=1
function_arg	[function_1] given pattern ||| [arg_2] [function_1]	count=3
function	changed [function_2] ||| [function_2] [function_1]	count=4
function	try to find the ||| maybe find	count=1
function	[function_1] [function_2] ||| [function_2] [function_1]	count=1253
function	metadata to [function_2] ||| [function_1] cache [function_2]	count=1
class	lock ||| filesystem lock	count=3
function	[function_1] to join ||| [function_2] [function_1]	count=8
class	authorities ||| open sslcertificate authorities	count=1
function_arg	channel of [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	[function_1] fd that ||| [arg_2] [function_1]	count=1
function	to retrieve ||| get	count=1
function	receive an ||| receive	count=1
module_class	for this frame ||| python frame	count=1
class	this object represents is ||| connection	count=1
function	a child of this ||| child	count=1
function	of xhdr data for ||| xhdr request	count=1
function	delayed ||| delayed	count=1
function	data ||| channel data	count=1
module	a [module] values ||| [module]	count=1
function	version ||| proto version	count=1
arg	a channel ||| channel	count=8
function	to continue writing ||| start writing	count=1
module	setup ||| words protocols jabber	count=2
arg	fromemail the [arg_2] ||| [arg_1] [arg_2]	count=2
arg	path as a ||| path	count=1
function	attribute name ||| name	count=1
arg	primary the ip ||| primary	count=1
function	the factory to construct ||| unjellyable factory	count=1
module	constructs ||| protocols	count=1
function	reactor if the ||| reactor	count=1
module_class	the command's ||| conch command	count=1
arg	euid and ||| euid	count=1
function	deprecated ||| get replacement	count=1
function	[function_1] directory ||| [function_2] [function_1]	count=11
function	[function] wx ||| [function]	count=1
function_arg	[function_1] prefixes ||| [arg_2] [function_1]	count=2
function	retrieve the next public ||| get public	count=1
class	attempt ||| client	count=2
function	exhorting the user ||| string	count=1
function	with a ||| get deprecated	count=1
function	checkers for this domain ||| checkers	count=1
arg	byte string ||| strio	count=1
module	visible satellite information ||| positioning	count=1
class	of the underlying pkey ||| public	count=1
function	nmea datestamp ||| datestamp	count=1
class	consumer by ||| body	count=1
module	the cursor up ||| conch insults	count=2
arg	cannot be established prepare ||| relay	count=1
function	the receiver to ||| to	count=1
function_arg	parse [arg_2] ||| [function_1] string [arg_2]	count=1
class	the temporary file ||| file wrapper	count=4
function	add a new user ||| add user	count=2
function_arg	[function_1] command ||| [function_1] short [arg_2] params	count=1
arg	a query to ||| query servers	count=1
class	messages via amp ||| box	count=1
module	a context ||| application runner	count=1
function	the c{_deprecated_info} flag ||| get deprecated	count=1
function	a message sent ||| show message	count=1
arg	act ||| ip_domain	count=1
arg	a logical url ||| logicalurl	count=1
function	file from the given ||| file	count=1
class	web context factory in ||| deprecated to current policy	count=1
function	a ||| get deprecated	count=2
function	[function_1] a bounce ||| [function_2] [function_1]	count=1
arg	the consumer ||| consumer	count=1
function	pauseproducing} ||| pause	count=2
class	generate ||| digest credential factory	count=1
class	method called when the ||| ipositioning receiver	count=1
function	complete enough to ||| absolute	count=1
function	of bytes received ||| data received	count=1
class	as a context manager ||| assert raises context	count=1
function	poll the poller ||| poll	count=2
class	create ||| sslclient connection creator	count=1
arg	scheme host [arg_2] ||| [arg_2] [arg_1]	count=2
function_arg	[function_1] containing unit ||| [function_1] [arg_2]	count=1
module	jabber id that this ||| protocols jabber	count=1
module_class	at this [class_2] ||| [module_1] file [class_2]	count=4
function	is successfully posted to ||| post request	count=1
function	a malformed [function_2] ||| [function_1] [function_2]	count=1
function	channel ||| channel open	count=1
module	this ||| application runner	count=2
arg	the modes on a ||| modes	count=1
class	for use as ||| digest credential	count=1
arg	message payload : ||| packet	count=4
class	indicate ||| transport	count=1
class	initialise ||| to stan	count=1
function	the current ||| current	count=1
function	called for subnegotiations for ||| unhandled subnegotiation	count=1
module	get a ||| names	count=1
class	any of ||| janitor	count=1
module	to this ||| mail	count=1
function	[function_1] extended ||| [function_1] [function_2] data	count=1
module	shift to the ||| conch	count=1
arg	[arg_1] == ||| [arg_2] [arg_1]	count=1
function	[function_1] [function_2] to ||| [function_1] [function_2]	count=27
arg	request if possible and ||| request	count=1
function_arg	[function_1] fd ||| [function_1] [arg_2]	count=2
function_arg	for me ||| for perspective	count=1
arg	given color ||| color	count=2
module	polite text exhorting ||| python	count=1
class	this task is ||| task	count=1
function	to open a new ||| open	count=1
function	received a chunk of ||| data chunk	count=1
function	the given file descriptor ||| file descriptor	count=1
function	which drives ||| producing	count=1
function	return an instance of ||| get person	count=1
function	[function_1] source ||| [function_1] [function_2]	count=3
arg	longname ||| longname	count=1
module_class	[module_1] domain ||| [module_1] [class_2]	count=10
class	script through the ||| filtered script	count=1
function	[function_1] change time ||| [function_1] [function_2]	count=1
function	socket ||| socket	count=4
class	indicate that we will ||| itelnet transport	count=1
module_class	the peer ||| conch itelnet protocol	count=2
class	an exposed ||| expose	count=1
function_arg	allow [function_1] [arg_2] ||| names serial number [function_1] [arg_2]	count=1
function	given ||| wont	count=1
function_arg	[function_1] c{exception} ||| [function_1] [arg_2]	count=3
function	[function_1] types ||| [function_1] [function_2]	count=2
module	parse the ||| web	count=2
function	body for the article ||| body request	count=1
module	l{servicemanager}, ||| words protocols jabber	count=2
function	write the given request ||| write	count=1
function	login and get perspective ||| login	count=1
function	getxheader() action ||| xheader	count=1
function	generate a string which ||| generate	count=1
class	suitable for securing a ||| iopen sslcontext factory	count=1
module	the current line ||| conch	count=1
function	find the attribute name ||| name	count=1
class	test if ||| test	count=1
module_class	body in text ||| mail text message	count=1
function_arg	[function_1] set flags ||| [arg_2] [function_1]	count=1
arg	string into ||| cls s	count=1
module_class	[module_1] reactor ||| [module_1] [class_2]	count=21
class	to this file ||| file	count=1
function	when the stream ||| stream	count=2
function	request ||| request	count=18
function	number as a child ||| number	count=1
arg	events when c{predictates} yield ||| predicates negativeobserver	count=1
arg	[arg_1] account client ||| [arg_2] [arg_1]	count=6
module	this to ||| internet	count=2
function	[function_1] data directory ||| [function_2] [function_1]	count=1
class	the ipv6 ||| record aaaa	count=1
module_class	this [class_2] ||| [module_1] [class_2]	count=134
module	[module] stdin and ||| [module]	count=3
class	notify ||| client machine	count=1
class	string which is intended ||| maildir	count=1
function	the ||| service	count=1
function	print ||| line	count=1
module	l{twisted spread ||| spread	count=1
class	[class_1] factory ||| [class_1] [class_2]	count=1
module	a ||| mail	count=2
class	is ||| maildir	count=1
function	envelope this will ||| sent mail	count=1
function	setting up ||| setup	count=1
arg	a message which ||| message	count=1
function	[function_1] the prefix ||| [function_1] [function_2]	count=1
function	write to ||| write	count=2
function_arg	create a _switchbox ||| init innerproto	count=2
arg	key ||| hostname key	count=1
module	the basic fields the ||| mail	count=1
function	delete the change information ||| delete	count=1
function	article with ||| article	count=1
arg	from the given ||| default	count=1
arg	@param fp l{twisted ||| fp	count=1
function	undelete any [function_2] ||| [function_2] [function_1]	count=4
function	a class ||| class	count=2
class	[class_1] color ||| [class_1] [class_2]	count=3
function	now ok to uncache ||| uncache	count=1
class	content of c{key} ||| mem cache protocol	count=1
class	calls to ||| name	count=1
class	legacy observer to which ||| legacy	count=1
module	terminal server dispatching ||| insults	count=1
function_arg	failed and was ||| failure test error	count=2
function	decrement the ||| decrement	count=1
function	object ||| object	count=4
class	messages via amp ||| dispatcher	count=1
function	send a message to ||| send message	count=1
function	polite text exhorting the ||| get	count=1
function	send a uidl ||| uidl	count=1
class	the message as it ||| maildir mailbox append message	count=1
function	envelope for ||| envelope	count=1
function_arg	[function_1] description ||| [function_1] string [arg_2]	count=5
module	the application in ||| application	count=1
arg	listen on ||| proto maxpacketsize mode	count=2
arg	creator the l{_isshconnectioncreator} provider ||| creator command protocolfactory	count=1
class	fire ||| ireactor core	count=1
function_arg	failure [arg_2] ||| [function_1] [arg_2]	count=1
class	a ||| checker	count=1
module	any of the ||| python	count=1
class	build ||| build apidocs script	count=1
function	l{servicemanager}, using the ||| service	count=1
arg	for name ||| name	count=1
class	my syspath and ||| python path	count=1
function	collect received ||| descriptor received	count=1
module	@return c{true} if the ||| internet	count=1
function_arg	[function_1] an fd ||| [function_1] [arg_2]	count=1
function	the subject of ||| get subject	count=1
arg	protocol then initiate tls ||| proto	count=1
class	mailbox @type ||| iaccount imap	count=2
class	close the temporary ||| wrapper	count=1
arg	a numeric [arg_2] ||| [arg_2] factory backlog [arg_1]	count=2
function	different messages which share ||| kex dh gex group	count=1
class	we are ||| iunixdatagram	count=1
function	list query ||| list	count=1
function	convert ||| to	count=6
class	random value suitable for ||| credential	count=1
class	format ||| application runner	count=1
function	attribute value ||| write with attribute	count=1
module	to send this message ||| mail	count=1
function	[function_1] single string ||| [function_1] [function_2]	count=2
module	an instance of a ||| trial	count=1
function	executes a fix ||| fix	count=1
function	c{commandconnected} deferred [function] indicating this ||| exec [function]	count=1
module_class	map this [class_2] ||| [module_1] [class_2]	count=4
class	whenever ||| socksv4	count=1
class	notifies ||| ichat ui	count=1
class	listening on the endpoint ||| stream server endpoint	count=1
function	the stream [function_2] ||| [function_1] [function_2]	count=3
function	from the attributes and ||| from	count=2
function	request to [function_2] ||| [function_2] [function_1]	count=2
module	state change on the ||| conch	count=1
function	indicate that we will ||| wont	count=1
class	by c{self frame} and ||| source fragment element	count=1
function	match plugin ||| match plugin	count=2
module_class	[module_1] protocol ||| [module_1] [class_2]	count=23
function	for a public key ||| auth publickey	count=1
function	a partial xml document ||| to xml	count=1
class	task completed with a ||| append message task	count=1
function	trigger ||| trigger base	count=2
function_arg	unexpected authentication failure ||| eb unexpected failure	count=1
module_class	the watch ||| internet inotify	count=1
module	initialization ||| words protocols jabber	count=2
module_class	this [class_2] ||| [module_1] [class_2] element	count=2
function	command [function_2] ||| [function_1] [function_2]	count=4
module_class	by the [class_2] ||| [module_1] [class_2]	count=2
function	the portal for the ||| portal	count=1
function	is in the known_hosts ||| is in known	count=1
function	protocol ||| deferred close	count=1
arg	datagram is ||| datagram	count=1
function	return an instance ||| get person	count=1
function	final one in ||| last gsvsentence	count=1
function_arg	[function_1] message ||| [function_1] [arg_2]	count=12
class	has been ||| client machine	count=1
function	deprecated api with some ||| string	count=1
class	current authentication ||| auth client	count=1
function	holding the ||| eom received	count=1
module_class	the response to ||| web httpclient parser	count=1
function	a character set ||| character set	count=2
function	has [function_2] ||| [function_1] [function_2]	count=2
function	delete a mailbox this ||| delete	count=1
function	any data [function] to which ||| body data [function]	count=1
arg	list of local files ||| previousresult files remotepath single	count=1
arg	an [arg] for reading ||| [arg]	count=1
arg	1 addresses ||| numok addresses	count=1
function_arg	notify [arg_2] ||| [arg_2] [function_1]	count=2
module	element has been ||| xish	count=2
class	a ||| name generator	count=1
function	path to a ||| path	count=1
arg	called ||| version code reason	count=1
function	object for a ||| object for	count=2
module	running on the ||| conch	count=1
class	the consumer by resuming ||| file body producer	count=1
function	and [function_2] ||| [function_2] request [function_1]	count=1
function	succeeded [function_2] ||| [function_2] [function_1]	count=2
module	object has ||| spread	count=1
function	node ||| and clear	count=1
arg	same as the query ||| query id	count=1
function	[function_1] length ||| [function_1] [function_2]	count=3
module	observer if it ||| python	count=1
function_arg	export the [arg_2] ||| [function_1] to [arg_2]	count=1
function	fails ||| failed	count=2
function_arg	[function_1] a l{chunkingzipfile} ||| [arg_2] [function_1]	count=1
class	key matches the user ||| key	count=1
function	unregister producer for standard ||| unregister producer	count=1
function	[function_1] a server ||| names secondary authority service [function_1] [function_2]	count=1
class	a group ||| group	count=1
function	proxy l{interfaces ihandshakelistener} to ||| handshake completed	count=1
module	and state ||| spread	count=1
arg	path this ||| path protocol	count=1
module_class	this record ||| names record	count=1
function	stat [function_2] ||| [function_2] [function_1]	count=1
function	sending messages ||| remote	count=1
module	so that the ||| web	count=1
arg	host ||| host	count=4
class	command's input ||| command	count=1
arg	given protocol factory ||| factory	count=1
class	list of [class_2] ||| [class_2] [class_1]	count=2
function	listen for ssl on ||| listen	count=1
function_arg	[function_1] credentials ||| [function_1] [arg_2]	count=1
function	connect a client protocol ||| connect	count=1
arg	a c{newpath} that is ||| newpath encoding	count=1
function_arg	string [arg_2] ||| [function_1] to datetime [arg_2]	count=2
module	if ||| trial	count=2
function	sent we ||| sent	count=1
function	from list of disconnect ||| disconnect	count=1
function	sequence ||| sequence	count=2
function	prefix to use ||| prefix	count=1
arg	host [arg_2] ||| [arg_1] [arg_2]	count=2
module_class	[module_1] transport is ||| [module_1] [class_2]	count=6
arg	numeric [arg_2] ||| [arg_2] [arg_1]	count=4
arg	me with a ||| perspective	count=1
function	stopped and ||| stopped	count=1
arg	a plaintext ||| password	count=1
function	string into ||| parse	count=1
function	an l{imessagedelivery} object ||| message delivery	count=1
class	delegating to an authentication ||| user auth	count=1
class	received on ||| ibox receiver	count=1
function	the given header can ||| header	count=1
arg	reconnecting subclasses should call ||| connector reason reconnecting	count=1
function	message for removing ||| agentc remove	count=1
module	the test storing the ||| trial	count=1
function	will stop performing ||| wont	count=1
class	this l{deferredlist} ||| deferred	count=1
module	decorators ||| python	count=1
arg	accountname a ||| accountname	count=1
function_arg	date string [arg_2] ||| [function_1] to datetime [arg_2]	count=2
module	jabber ||| jabber	count=2
arg	the given function to ||| f	count=1
function	[function_1] request ||| [function_2] [function_1]	count=10
function	receive [function_2] ||| [function_2] [function_1]	count=1
module	resets them when ||| conch client	count=1
function	l{list} of l{bytes} @param ||| init	count=3
class	iteration and ||| looping call	count=1
arg	start [arg_2] ||| [arg_2] [arg_1]	count=3
arg	when the speed ||| speed	count=1
function_arg	authenticator with ||| register authenticator auth	count=1
arg	namespace the namespace ||| namespace source	count=1
function	[function_1] as child ||| [function_2] [function_1]	count=2
function	of arguments ||| arguments	count=1
function	info ||| info	count=1
function	[function_1] the source ||| [function_1] [function_2]	count=3
class	message as it ||| maildir mailbox append message task	count=1
function	url to the ||| url	count=1
function	[function_1] into ||| [function_2] [function_1]	count=4
function	send as much ||| some data	count=1
arg	to listen on ||| factory backlog	count=1
function_arg	[function_1] [arg_2] failure ||| [function_1] [arg_2]	count=5
function	thread from the ||| to thread	count=1
function	into a byte ||| to	count=1
arg	mode [arg] ||| [arg]	count=1
class	underlying pkey object ||| public key	count=1
function	write a line containing [function_1] [function_2] ||| [function_1] [function_2]	count=1
arg	[arg_1] an oscaruser ||| [arg_2] [arg_1]	count=4
module	or ||| trial	count=1
function	called after [function_2] ||| [function_2] [function_1]	count=8
function	the read ||| read	count=1
arg	to a user ||| user	count=2
function	[function_1] given certificate ||| [function_1] [function_2]	count=1
function	address ||| get host by	count=1
function_arg	@type [arg_2] ||| [arg_2] [function_1]	count=4
module	consider it as an ||| python	count=1
function	[function_1] payload ||| [function_2] [function_1]	count=1
module	the given c{protocol} with ||| web	count=1
function	next string ||| next	count=1
arg	public key ||| publickey signdata	count=1
arg	a new instance using ||| cls cipherstring	count=1
arg	called when ||| reason	count=2
arg	referring to ||| pathname	count=1
function	[function_1] delay ||| [function_1] [function_2]	count=2
class	the terminal ||| terminal	count=1
module_class	the i{start_response} callable ||| web wsgiresponse	count=1
function	a single [function_2] ||| [function_2] [function_1]	count=2
arg	udppayloadsize l{int} ||| udppayloadsize	count=1
module	using the ||| conch ssh	count=1
class	remove ||| deferred queue	count=2
module	to the secure ||| conch	count=1
arg	with the contents of ||| i	count=1
arg	on ||| proto	count=1
function	return the fileno() ||| fileno	count=1
class	a www-authenticate challenge ||| digest credential factory	count=1
class	whether signal handlers should ||| signal	count=1
function_arg	a blob of certificate [function_1] [arg_2] ||| key pair sign certificate [function_1] [arg_2]	count=3
function_arg	success to [arg_2] ||| [arg_2] [function_1]	count=1
function	c{address} via the ||| reply	count=1
function_arg	parse [arg_2] ||| [function_1] trust root path [arg_2]	count=2
class	base filenames ||| smtpmanaged relayer	count=2
class	formatting ||| default formatting	count=3
class	private encodes and sends ||| ftp	count=1
class	suitable for ||| factory	count=2
class	to a zippath ||| zip	count=1
module	of available ||| python	count=1
module_class	command [class_2] ||| [module_1] command [class_2]	count=1
function	test to the ||| test	count=2
module	data from the ||| web	count=1
class	files and directories ||| file transfer server	count=1
function	new instance of a ||| new instance	count=1
class	further processing ||| cooperative	count=1
class	a child process ||| process	count=1
function	number of hard ||| number of hard	count=1
function_arg	a rectangle [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] authentication ||| [function_2] [function_1]	count=2
module	l{servicemanager}, ||| jabber	count=1
class	remove ||| ixmpphandler collection	count=1
function	any application-level [function] which becomes ||| [function]	count=1
function	body of an ||| body	count=1
function	to deliver data ||| deliver	count=1
function	[function_1] [function_2] of ||| [function_1] [function_2]	count=34
module	the output of ||| mail	count=1
class	connect ||| tcp4client endpoint	count=1
function	when the connection ||| connection	count=3
function	if a sentence ||| sentence	count=1
class	file and create ||| log file	count=2
function	version number of ||| version	count=1
function	and a message receiver ||| message	count=1
class	ipv6 ||| tcp6client	count=1
class	xmlstream ||| listen authenticator	count=1
arg	the given text as ||| text	count=1
module	for it to ||| names	count=1
class	private encodes and ||| ftp	count=1
function	that we will ||| wont	count=1
module	[module] the perspective ||| [module]	count=1
arg	an implementor ||| mind	count=1
function	the [function] ||| sent [function]	count=1
module	out the ||| conch ssh	count=1
function	of line including ||| to line	count=2
arg	room ||| exchange fullname	count=1
arg	a username and ||| username	count=1
function	of shell [function_2] ||| [function_2] [function_1]	count=2
arg	domain to ||| service domain factory	count=1
class	directory ||| path	count=1
function	return a l{key} ||| get public key	count=1
function	unpack ||| unpack open direct	count=1
module	retry attempt ||| application	count=1
function	return a child with ||| get child with	count=1
function	to execute a ||| execute	count=1
function	[function_1] a process ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] instance ||| names serial number [function_1] [arg_2]	count=1
module	for ||| protocols	count=1
module_class	of the file ||| python file path	count=1
function	stdin with ||| stdin	count=1
function	c{bytes}, ||| same type	count=1
arg	name in this ||| name value	count=1
module	even though [module] rfc ||| [module]	count=1
function	retrieve the date internally ||| get internal date	count=1
module	corresponsing to the secure ||| conch	count=1
class	be relayed ||| queue	count=1
arg	block ||| d	count=1
class	random value suitable ||| credential factory	count=1
function	protocol instances over tcp ||| loopback tcp	count=1
function	type of ||| type	count=2
arg	file descriptor to ||| fd	count=2
module_class	the l{filepath} ||| python file path	count=1
class	task is complete ||| task	count=1
class	changed ||| log file	count=2
function	in the ||| line	count=1
function	spwd module ||| shadow get by	count=1
arg	logreader for an old ||| identifier	count=1
function	user record ||| user	count=2
class	this failure's ||| failure	count=1
function	to ||| coerce to filesystem encoding	count=2
function	[function_1] a traceback ||| [function_1] brief [function_2]	count=1
function	[function_1] closing ||| [function_2] [function_1]	count=1
arg	default value ||| seq default	count=1
arg	given work ||| work	count=1
arg	@param notifier callback ||| notifier	count=4
function	test inside ||| run test	count=1
arg	and [arg] further ||| [arg]	count=1
class	the ||| daily	count=1
function	from ||| from string	count=4
function	add ||| add cacerts	count=1
module	them when it is ||| conch client	count=1
function	registration ||| update registration	count=1
class	unique across all ||| name	count=1
class	l{filedescriptor} ||| glib reactor base	count=2
arg	dbm ||| dbm	count=1
arg	cases in c{test} ||| decorator	count=1
module_class	command [class_2] ||| [module_1] [class_2]	count=1
function	a string in ||| string	count=1
module_class	of the queue ||| mail queue	count=1
function	expected failure to ||| expected failure	count=2
module	given object has ||| spread	count=1
class	a private certificate to ||| private certificate	count=1
function	is linux ||| is linux	count=2
function	generate [function_2] ||| [function_2] [function_1]	count=1
function	checks if enough data ||| payload	count=1
arg	an amplist ||| subargs optional	count=1
class	a zip file ||| zip	count=1
function	stop performing the ||| wont	count=1
function	c{root} into ||| flatten	count=1
function	[function_1] which arguments ||| [function_2] [function_1]	count=1
function	c{importerror} is raised during ||| require	count=1
function	[function_1] a global ||| [function_1] [function_2]	count=1
module	the user for ||| conch ssh	count=2
function	register a new ||| register authenticator	count=1
function	receiver which ||| receiver	count=2
function_arg	[function_1] function f ||| [function_1] with patches [arg_2]	count=3
function	processes the length ||| length	count=1
module	is called on the ||| web	count=1
module	object from modules ||| trial	count=1
function	line for a file ||| line	count=1
function	[function_1] failure that ||| [function_1] [function_2]	count=1
function	for a given class ||| factory	count=1
module_class	[module_1] cookie jar ||| [module_1] [class_2]	count=2
module	it as an alternative ||| python	count=1
function	received ||| datagram received	count=1
class	an l{iprocesstransport} provider ||| process monitor	count=1
function	deferred to indicate the ||| fail	count=1
function	test whether c{descendantname} is ||| is	count=1
function	convert to a ||| to	count=1
function	indicate that we ||| wont	count=1
module_class	[module_1] authentication type ||| [module_1] [class_2]	count=6
arg	name ||| name type	count=1
function	build an ||| build	count=1
function_arg	msg_kexinit [arg_2] ||| [function_1] [arg_2]	count=1
function	this ||| mail	count=1
function	header can ||| header	count=1
function_arg	from its [arg_2] ||| [arg_2] [function_1]	count=1
function	format ||| format child	count=1
module	program consisting [module] ||| [module]	count=1
module_class	[module_1] maildir ||| [module_1] [class_2]	count=4
arg	me with ||| perspective	count=1
class	segments ||| abstract file path	count=1
function	stream window by a ||| stream window	count=1
function_arg	[function_1] [arg_2] ||| [function_1] string [arg_2]	count=25
function	when [function_2] ||| [function_2] [function_1]	count=2
arg	or more messages have ||| newflags	count=1
class	list of ||| list	count=2
function	twisted version and exit ||| version	count=1
function	the list [function] in ||| [function]	count=1
function	start listening on the ||| start	count=1
function	get a msg_kex_dh_gex_init message ||| kex dh gex init	count=1
class	lines of storage ||| line	count=1
function	all_record ||| all records	count=2
function	text from [function_2] ||| [function_1] [function_2]	count=1
module	of this ||| python	count=15
arg	c{name} the ||| name	count=1
class	the date has ||| log file	count=1
function	remove ||| cancel get	count=1
class	reactor names ||| reactor selection mixin	count=1
arg	for data ||| data	count=2
class	moduledict in ||| python path	count=1
class	a valid file ||| ifile	count=1
module	in the top level ||| web	count=1
module_class	[module_1] netstring has ||| [module_1] [class_2]	count=2
function	a udp ||| udp	count=1
arg	given instance ||| instance methodname default	count=1
class	initialization ||| base feature initiating	count=1
function	[function_1] a clientside ||| [function_2] [function_1]	count=3
class	which this descriptor will ||| file descriptor	count=1
module_class	[module_1] socket ||| [module_1] [class_2]	count=4
function_arg	set the [arg_2] ||| [function_1] path [arg_2]	count=2
function	a channel request if ||| channel request	count=1
function	this will ||| sent mail	count=1
class	for valid arguments ||| reactor base	count=1
module	when a connection has ||| jabber	count=2
function	object c{obj}, add all ||| accumulate	count=1
class	was ||| file descriptor	count=1
arg	protocolfactory a ||| protocolfactory	count=1
function	build an exception ||| exception	count=1
function	[function_1] working directory ||| [function_1] [function_2]	count=1
function_arg	exchange [arg_2] ||| [arg_2] [function_1]	count=1
module	the server gotoverview() ||| news	count=1
arg	a transport and a ||| transport	count=1
arg	chunk of data ||| data	count=2
function	when getnewgroups() ||| got new groups	count=1
function	been [function_2] ||| [function_2] [function_1]	count=1
function_arg	an authentication [arg_2] ||| [arg_2] [function_1]	count=4
function	initialize it ||| init	count=1
function	is supported ||| supports	count=1
function	i take an adapter ||| adapter	count=1
module	select and setup authentication ||| protocols jabber	count=1
function	private part of a ||| private	count=1
function	seconds ||| seconds	count=1
function	for joining to c{path} ||| to filesystem encoding	count=1
function	[function_1] all registered ||| [function_2] [function_1]	count=1
function	information from a gsv ||| gsv	count=1
arg	add a child resource ||| path child	count=1
function_arg	service for [arg_2] ||| [function_1] [arg_2]	count=1
arg	the given request ||| request	count=3
function	select a [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] key ||| [function_2] [function_1]	count=2
function	all selectables and return ||| all	count=2
module_class	[module_1] called when ||| [module_1] process [class_2]	count=3
function	return the ||| get message	count=1
function	a series of human ||| human	count=1
module	satellite information from a ||| positioning	count=1
function_arg	list of filepaths representing [function_1] [arg_2] ||| python file path [function_1] [arg_2]	count=3
class	response ||| response	count=7
arg	data ||| cls data	count=2
arg	referring ||| pathname	count=1
function	the child may ||| child	count=1
function	the socket and to ||| collect socket	count=1
function	as much of c{data} ||| write some data	count=1
class	structure object reports ||| structure	count=2
module	to convert the ||| internet	count=1
class	this is called when ||| iresolution receiver	count=1
function	received a chunk of ||| receive data chunk	count=1
function	a c{dict} that maps ||| make excludes dict	count=1
function_arg	replaces stdout [arg_2] ||| [function_1] stdin [arg_2]	count=1
module	c{*args}, and arrange for ||| names	count=1
function	[function_1] to file ||| [function_2] [function_1]	count=1
module_class	the digest ||| web _auth digest	count=1
function	git repository ||| repository	count=1
function	[function_1] header ||| [function_1] [function_2]	count=10
function	date ||| date	count=2
module	to avoid a ||| internet	count=1
function	response ||| uidlist response	count=1
module	called when the ||| words protocols	count=2
arg	given remote root object ||| root client	count=1
function	the flags for ||| flags	count=1
class	legacy compatibility purposes return ||| thread pool	count=2
function	write a line containing [function_1] [function_2] ||| recv line [function_1] [function_2]	count=1
function	a msg_kexinit ||| kexinit	count=1
function	underlying connection is ||| connection	count=1
function	underlying connection ||| connection	count=1
function	ssi ||| ssi	count=1
arg	given field/format/conversion ||| fieldname formatspec conversion	count=1
function	[function_1] envelope for ||| [function_2] [function_1]	count=1
class	in a ||| python	count=1
arg	object ||| other	count=2
function_arg	[function_1] [arg_2] ||| [function_1] clean [arg_2]	count=1
function	received ||| message received	count=1
function	with some polite text ||| replacement string	count=1
class	in the group ||| igroup	count=2
function	decode the xtext-encoded string ||| decode	count=1
arg	generate a ||| helo origin recipients	count=1
class	domain object ||| domain with default	count=1
arg	match the given pattern ||| pattern	count=1
function	from the float values ||| from	count=1
function	some polite text ||| get replacement	count=1
function	exists in ||| exists request	count=1
class	suitable ||| digest credential factory	count=2
class	attributes this formatting ||| formatting	count=1
function	_wrappedfactory} or ||| build	count=1
module	hostmask of the ||| words protocols	count=1
class	moduledict in a ||| path	count=1
function	process and returns ||| get process output and	count=1
arg	aren't value constants ||| cls level	count=1
function	send [function_2] ||| [function_1] [function_2]	count=23
function	is ready [function_2] ||| [function_2] [function_1]	count=7
function_arg	one stat [arg_2] ||| [function_1] [arg_2]	count=1
module_class	[module_1] side ||| [module_1] [class_2]	count=15
function	an unexpected ||| unexpected	count=2
function	escape ||| escape for	count=1
arg	a response ||| response	count=1
arg	an offered file via ||| user file port resumepos	count=1
function	a c{datetime ||| date and time	count=1
module	for sending ||| protocols	count=1
module	the l{cooperativetask} which drives ||| web	count=1
module	an iterator and ||| web	count=1
function	with a ||| deprecated	count=1
module	instance of pythonmodule ||| trial	count=1
class	port [class_2] ||| [class_2] [class_1]	count=4
function	refers to a directory ||| isdir	count=2
function	the state ||| state	count=1
function_arg	[function_1] [arg_2] response is expected ||| [function_1] short [arg_2] params	count=2
function	elements of ||| elements by	count=1
arg	a publisher i'll ||| publisher	count=1
arg	header @param request ||| request	count=1
function	[function_1] interfaces that ||| [function_1] [function_2]	count=3
function	create ||| init	count=31
class	calls ||| name generator	count=1
module	exception ||| words protocols jabber	count=1
arg	the first [arg] ||| [arg]	count=3
module_class	the response ||| web httpclient parser	count=1
function	l{servicemanager}, ||| build service	count=1
function	parsed a complete ||| finish	count=1
class	the next ||| looping call	count=1
function	[function] e g ||| as classic log [function]	count=3
function	remove from the ||| remove flags	count=1
arg	to the reporter ||| testname	count=2
function_arg	leaves the [arg_2] ||| [function_1] [arg_2]	count=1
function	expand c{cipherstring} ||| expand	count=1
class	@param ||| file transfer client	count=1
function_arg	[function_1] message to ||| [arg_2] [function_1]	count=1
arg	with a name ||| name	count=1
arg	for an undeliverable email ||| failedfrom failedto transcript	count=1
arg	serv_type an ||| serv_type	count=1
function	specified message-id exists in ||| article exists request	count=1
class	of ||| writer	count=1
function	enable debug hooks for ||| start debug	count=1
function	from the child ||| received	count=1
function_arg	[function_1] [arg_2] ||| [function_1] updated user channel [arg_2]	count=4
function	verify ||| verify	count=4
arg	name and [arg_2] ||| [arg_2] [arg_1]	count=2
class	channel exists on ||| channel	count=1
function	the timeout ||| timeout	count=2
function	[function_1] a data ||| [function_2] [function_1]	count=1
function	surround ||| replacement string	count=1
arg	a fd ||| selectable fd event	count=1
function	[function_1] directory for ||| [function_1] [function_2]	count=3
function_arg	arguments [arg_2] ||| [arg_2] [function_1]	count=5
function	is in the ||| is in known	count=1
module	the kqueue() ||| internet	count=1
arg	[arg_1] name matching ||| [arg_1] [arg_2]	count=2
class	peer should be allowed ||| itelnet	count=1
arg	port to [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	this lock ||| python filesystem lock	count=1
function	[function_1] global ||| [function_2] [function_1]	count=1
class	protocol you ||| binary box protocol	count=1
function	[function_1] response ||| [function_1] [function_2]	count=10
function	create the heartbeat l{loopingcall} ||| create heartbeat	count=1
function	is linux in ||| is	count=1
function	the overview format from ||| fetch overview	count=1
arg	the ||| jid	count=1
arg	[arg_1] unexpected ||| [arg_2] [arg_1]	count=1
arg	disconnect the protocol ||| protocol	count=1
class	send ||| file pager	count=1
function	pwd module ||| pwd get by	count=1
function	a line containing the [function_1] [function_2] ||| recv line [function_1] [function_2]	count=1
function_arg	[function_1] is l{none} ||| [function_1] [arg_2]	count=5
function	the final ||| complete	count=1
class	a message to pop3 ||| pop3	count=1
arg	a c{regexp} search of ||| regex msg	count=1
arg	returned to the client ||| nonce clientip	count=1
function	[function_1] a quote ||| [function_2] [function_1]	count=1
arg	c{true} if c{obj} ||| obj	count=1
function	a file from the ||| file	count=1
arg	for option declarations ||| optlist width	count=1
function	objects [function] ||| [function] data to	count=1
arg	session with a unique ||| uid reactor	count=1
arg	@param thing ||| thing	count=1
arg	and then the tests ||| recurse	count=1
function	for the article ||| article	count=1
class	underlying archive ||| zip archive	count=1
arg	command [arg_2] ||| cls [arg_1] [arg_2]	count=2
function	version ||| version	count=5
class	log ||| limited history log	count=1
arg	returned ||| nonce clientip	count=1
arg	a broker [arg_2] ||| [arg_1] [arg_2]	count=1
arg	a l{localworkeramp} instance iterating ||| worker result testcases cooperate	count=1
module	flag if ||| python	count=1
class	formatting [class_2] ||| [class_2] [class_1]	count=5
class	given c{key} ||| mem cache protocol	count=4
class	is ||| assert	count=1
function	the consumer a ||| resume producing	count=1
arg	protocol to a ||| factory	count=1
function	receive ||| flush receive	count=1
class	on the endpoint ||| server endpoint	count=1
arg	cases in ||| decorator	count=1
module	l{servicemanager}, using ||| protocols jabber	count=1
function	generate the challenge ||| get challenge	count=1
function	ensure that [function_2] ||| ivcscommand [function_1] [function_2]	count=2
arg	a unique [arg_2] ||| [arg_2] [arg_1]	count=2
function	mac ||| mac	count=1
class	start ||| client service	count=1
arg	valid ipv4 or ipv6 ||| timeout effort	count=1
function	sent a malformed authentication ||| authmalformed	count=1
function	should be ||| should	count=2
function	return ||| get public key	count=1
function	a stream server ||| server	count=1
arg	data to be delivered ||| data	count=2
function	deferred [function] indicating ||| exec [function]	count=1
module	when the ||| mail	count=3
function	remove monitoring [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] numeric ||| [arg_2] [function_1]	count=1
arg	c{tag} ||| tag	count=5
arg	[arg_1] file ||| [arg_1] [arg_2]	count=2
class	perform an ||| iresolver	count=1
function	processor for files ||| processor	count=1
function	resume processing of a ||| resume	count=1
arg	associated with the key ||| key	count=1
arg	to the value ||| val	count=2
function	gather state to ||| get state to	count=4
class	this function across ||| generator	count=1
class	my ||| process writer	count=1
class	cgi script ||| cgiscript	count=2
arg	creates a function that ||| width maxposition donechar undonechar	count=1
module	if the ||| conch ssh	count=1
module	which have the ||| web	count=1
function	is called ||| fetch	count=1
function	metadata to keep a ||| state to	count=1
class	all calls to ||| name generator	count=1
function	add all methods ||| accumulate methods	count=2
function	lose the connection ||| lose connection	count=2
class	amp invoke ||| box	count=1
class	queries if the tcp ||| dnsclient	count=1
class	retry ||| client machine	count=1
function	build the [function_2] ||| [function_2] [function_1]	count=3
class	using ||| ipidfile	count=1
module	pre-built l{servicemanager}, using the ||| jabber	count=1
function	@return the [function] in the ||| [function]	count=1
class	a new protocol you ||| protocol	count=1
module_class	ssh [class_2] ||| [class_2] [module_1]	count=1
module	that the clients wants ||| conch	count=1
module	object from ||| trial	count=1
function	whether this ||| is multipart	count=1
class	the certificate authorities to ||| sslcertificate authorities	count=1
arg	l{servicemanager}, ||| jid password	count=1
function	a deprecated api ||| get replacement string	count=1
function	a child resource ||| child with default	count=1
class	an infinite redirection ||| infinite redirection	count=2
function	header not a connection ||| connection	count=1
arg	the domain ||| service domain	count=1
module	and hook the ||| conch	count=1
class	if the key ||| key database	count=1
function	signal c{signalid} to ||| signal	count=1
function	[function_1] person ||| [function_1] [function_2]	count=1
function	msg_userauth_success the ||| ssh userauth success	count=1
function_arg	leave [arg_2] ||| [function_1] [arg_2]	count=1
function	the private ||| private	count=3
function	default appropriate for ||| default log	count=1
function	unregister ||| unregister reap	count=1
class	factory ||| credential factory	count=1
function	try to find the ||| find	count=1
module	the stack ||| web	count=1
function	an ||| get replacement	count=1
function	assert ||| assert no	count=1
function	given modules were imported ||| imported	count=1
function	and resume copying ||| resume producing	count=2
function	result or raise l{illegalserverresponse} ||| int or raise	count=1
module	factory and ||| internet	count=1
function	list of disconnect callbacks ||| notify on disconnect	count=1
arg	as a filename ||| k	count=1
module_class	[module_1] zlib ||| [module_1] [class_2]	count=4
module	invalid wait before sending ||| ssh	count=1
class	of this node ||| node	count=1
module	root element has been ||| xish	count=2
arg	remaining line ||| line	count=1
function	start ||| start receiving	count=1
module	new instance of ||| python	count=1
class	completion function ||| zsh subcommand builder	count=1
function	the subject ||| subject	count=1
function	[function_1] as a ||| [function_2] [function_1]	count=2
function	to ||| get replacement string	count=1
arg	[arg_1] or a ||| [arg_2] [arg_1]	count=2
function	user to consider it ||| string	count=1
function	lower-cased name is the ||| is	count=1
module	converts the ||| web	count=1
function	consider ||| get replacement	count=1
function	key [function_2] ||| [function_2] [function_1]	count=3
module	and return it ||| web	count=2
function	sign for a ||| sign	count=1
function	[function_1] the host ||| [function_1] [function_2]	count=1
function	retrieve the serial number ||| serial number	count=1
class	name to domain object ||| domain with	count=1
function	the log prefix ||| log prefix	count=1
module	suppresses [module] indicated ||| [module]	count=1
class	server to proxy ||| proxy	count=1
function	element ||| end	count=1
function	attempts to load ||| load	count=1
module	python path but do ||| python	count=1
function	as an ||| get replacement string	count=1
module	flag if any ||| python	count=1
function	[function_1] stream ||| data [function_1] [function_2] streamid data	count=1
function	hostname ||| host	count=1
class	contacts list ||| contacts list	count=2
arg	group and ||| group	count=2
arg	on [arg] will be ||| [arg]	count=1
class	transport dispatch it appropriately ||| ibox receiver	count=1
arg	invoke [arg] ||| [arg]	count=1
class	a ||| path	count=1
function	message has been answered ||| answered	count=1
function	threadpool used by ||| pool	count=1
function_arg	[function_1] [arg_2] ||| [function_1] result [arg_2]	count=3
arg	l{localworkeramp} instance ||| result testcases cooperate	count=1
arg	containing username ||| filename	count=1
function	been ||| connection	count=2
function_arg	[function_1] l{remotereference} and ||| [arg_2] [function_1]	count=1
module_class	base64-encoding the [class_2] ||| [module_1] [class_2]	count=2
function	[function_1] and size ||| [function_2] [function_1]	count=2
function	stream server endpoint from ||| server from	count=1
module	back if the other ||| conch ssh	count=1
function	delay and the ||| delay	count=1
function	me to [function_2] ||| [function_2] [function_1]	count=1
arg	the given name as ||| name default	count=1
function	[function] occurs before ||| [function]	count=1
class	a [class] ||| [class]	count=6
module_class	[module_1] file path ||| [module_1] [class_2] splitext	count=2
function	as [function_2] ||| [function_1] [function_2]	count=5
function	@return a newly ||| new local id	count=1
class	next [class_2] ||| [class_1] [class_2]	count=1
arg	c{applicationobject}, which may or ||| applicationobject	count=1
function	expressed by a ||| waiters	count=1
function	not a request for ||| ignore ext	count=1
function	a ||| manager	count=1
function	[function_1] time ||| [function_1] [function_2]	count=6
function	that a connection ||| client connection	count=1
module	headers when it ||| web	count=1
module_class	the http/2 ||| web h2stream	count=1
arg	mark a message ||| message	count=2
function	io completion port for ||| iteration	count=1
module	the screen ||| conch insults	count=1
function	early ||| abort	count=1
module	and the connection still ||| web	count=1
module	the features supported by ||| protocols	count=1
function	or ||| int or	count=1
function	command in ||| command	count=1
function	format the ||| format	count=1
arg	challenge ||| challenge	count=2
arg	a [arg] if present ||| [arg]	count=1
class	all ||| maildir name	count=2
function	[function] to ||| runner [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] when running [arg_2]	count=2
class	request ||| request	count=13
module	with some polite ||| python	count=1
function	already [function_2] ||| [function_1] [function_2]	count=1
module	been indicated that the ||| web	count=1
function	text to the ||| to	count=1
module	object corresponsing to the ||| conch	count=1
arg	reporter ||| testname error todo	count=1
class	the initialization ||| base feature initiating initializer	count=1
class	port is listening ||| ilistening port	count=2
class	messages via ||| dispatcher	count=1
function	deliver ||| deliver	count=1
function	pass me an ao [function_1] [function_2] representation ||| [function_1] [function_2]	count=1
function	a6 ||| address6	count=1
arg	group ||| group low	count=1
function	l{servicemanager}, using ||| build	count=1
function	a snapshot ||| get snap shot	count=1
arg	a message to ||| message length	count=2
module_class	entry with [class_2] ||| [module_1] [class_2]	count=2
function	hostname that the user ||| hostname	count=1
arg	packet on the ||| messagenum packet	count=1
function	the test to ||| test	count=2
arg	an error that ||| error	count=1
function_arg	[function_1] creator an ||| [arg_2] [function_1]	count=1
module	filters [module] list ||| [module]	count=1
function	messages ||| call remote	count=1
module_class	[module_1] l{cooperativetask} ||| [module_1] [class_2]	count=2
class	waiting on the service ||| client machine	count=1
function	share ||| kex dh gex group	count=2
class	options ||| options	count=4
arg	request if possible ||| request	count=1
function	key for a ||| key	count=1
function	the time at ||| time	count=1
function	ipv6 address ||| ipv6	count=1
class	list ||| list	count=1
class	changed ||| file	count=1
arg	mapping strings to string ||| strings objects	count=1
class	are connected ||| iunixdatagram connected	count=1
function	clear ||| clear	count=2
function_arg	log prefix [arg_2] ||| [arg_2] [function_1]	count=5
arg	the flags [arg_2] ||| [arg_1] [arg_2]	count=2
module	given object has support ||| spread	count=1
arg	return a c{newpath} ||| path newpath encoding	count=1
function_arg	from a [arg_2] ||| [function_1] [arg_2]	count=5
function	we receive a msg_unimplemented ||| unimplemented	count=1
function	pass me an [function_1] [function_2] representation ||| [function_1] [function_2]	count=1
function	using a thread from ||| to thread	count=1
function	constructs ||| manager	count=1
function	doc ||| doc make	count=1
arg	value constants the only ||| cls level	count=1
module	called ||| news	count=1
function	quote an ||| quote string	count=1
class	provider which ||| endpoint	count=1
function	adjust the ||| adjust	count=1
function	the threadpool ||| pool	count=1
function	already added key object ||| agentc	count=1
arg	when a test raises ||| test	count=1
class	the task completed ||| maildir mailbox append message task	count=1
class	client server ||| server	count=1
function	threadpool used ||| thread pool	count=1
arg	there's anything left in ||| name qname	count=1
module_class	the next ||| mail file	count=1
arg	0 or 1 addresses ||| code resp numok addresses	count=2
arg	user a [arg_2] ||| [arg_1] [arg_2]	count=4
function	tls ||| start tls	count=1
module	the factory is ||| conch	count=1
class	of the message ||| message	count=1
class	next iteration ||| looping call	count=1
function	puts method [function_2] ||| [function_2] [function_1]	count=1
function	with ||| content	count=1
arg	of line and ||| line	count=1
arg	base signing behavior ||| publickey signdata	count=2
function	the nmeaprotocol timestamp ||| timestamp	count=1
function	argument ||| string argument	count=1
function	retrieve a specific ||| specific	count=1
function_arg	[function_1] the reporter ||| [function_1] [arg_2]	count=10
function	interface of outgoing ||| outgoing interface	count=2
function	send buffer ||| send buffer	count=4
class	create a random value ||| credential	count=1
class	reboots etc ||| maildir name	count=1
arg	a protocolswitchcommand ||| _prototoswitchtofactory	count=1
class	a log [class_2] ||| [class_1] [class_2]	count=1
function	child resource all ||| child	count=1
function	pre-built l{servicemanager}, ||| service manager	count=1
module	constructs a ||| jabber	count=1
class	the endpoint ||| stream server endpoint service	count=1
function	queue ||| queue	count=2
function	overview format ||| fetch overview	count=1
function	fragment of shell code ||| shell code	count=1
function	the hash ||| hash	count=1
function	running ||| get deprecated	count=1
function	when the size of ||| size changed	count=1
function	its text ||| gather text	count=1
class	be useful to ||| file	count=1
function	original exception into ||| exception into	count=2
function	node to [function_2] ||| [function_2] [function_1]	count=6
function	to load ||| load	count=1
module_class	[module_1] salt host ||| [module_1] [class_2]	count=8
class	across all processes ||| name	count=1
function	user id of the ||| user id	count=1
arg	initiate a hostname resolution ||| hostname portnumber addresstypes	count=1
class	signal handlers if c{self ||| signal reactor	count=1
function_arg	[function_1] [arg_2] ||| [function_1] session [arg_2]	count=3
function	textual and a binary ||| as bytes and text	count=1
function_arg	[function_1] [arg_2] ||| [function_1] datetime [arg_2]	count=1
module_class	of this l{urlpath} ||| python urlpath	count=2
class	iteration and ||| looping	count=1
class	object associated with it ||| with	count=1
arg	of c{query} possibly ||| msgid msg lastsequenceid	count=1
class	return the ||| process	count=1
function	returns the timeout value ||| get timeout	count=1
class	calls to this ||| name generator	count=1
arg	private munging to ||| k n	count=1
class	initiating the connection retry ||| machine	count=1
function	a newly ||| new	count=1
function	connection and return the ||| connection	count=1
function	header in ||| header	count=1
arg	endpoint description ||| reactor description	count=1
arg	the query ||| query id msg	count=4
function	[function] to which ||| body data [function]	count=1
function	install the reactor most ||| install	count=1
function	to consider it ||| get replacement string	count=1
arg	a query ||| query servers timeout	count=1
module	is ||| protocols	count=1
function	a msg_service_accept ||| service accept	count=1
function_arg	read a [arg_2] ||| [arg_2] [function_1]	count=2
class	called ||| nntpclient	count=1
class	hostname resolution [class_2] ||| [class_2] [class_1]	count=2
class	for use as the ||| digest	count=1
function	of ||| generate	count=1
module_class	[module_1] runner should ||| [module_1] [class_2]	count=6
arg	event an event ||| event	count=1
arg	other wisde wanted ||| result localchannel	count=1
module	this key if the ||| conch	count=1
function	add a child ||| add	count=1
function	trust [function_2] ||| [function_1] [function_2]	count=1
class	the message as ||| mailbox append message task	count=1
module	us [module_2] ||| [module_1] [module_2]	count=1
function	send a [function_2] ||| [function_2] [function_1]	count=16
class	for the socket ||| port	count=1
arg	receive ||| packet	count=1
module_class	handle the command's ||| conch command	count=1
function	to bad ||| to bad	count=6
arg	new l{unixauthorizedkeysfiles} ||| userdb parsekey	count=1
class	and c{requiretransportsecurity} as specified ||| esmtpsender factory	count=1
function	the connection is ||| connection made	count=1
module	the outgoing initialization ||| conch	count=1
function	lookout for ssi ||| ssi	count=1
function	mapping adding both ||| mapping	count=1
module	wait before sending ||| ssh	count=1
function	print a ||| print	count=2
function	get a data ||| get data	count=3
class	window or create and ||| chat ui	count=2
function	@type ||| init	count=8
arg	[arg] @param ||| address [arg]	count=2
module	across all processes reboots ||| mail	count=1
class	file and create ||| daily log file	count=1
arg	ampprotocol ||| ampprotocol	count=1
function	string ||| service manager	count=2
class	value suitable for use ||| credential factory	count=1
function	register ||| register reap	count=1
function	working ||| working	count=1
module	this entry or package ||| python	count=1
function	or private lsh ||| string lsh	count=1
class	the xmlstream when the ||| connect authenticator	count=1
function	helper method to report ||| report	count=1
function	[function_1] [function_2] that ||| [function_1] access [function_2]	count=2
class	given configuration ||| unix app	count=1
function_arg	extended [arg_2] ||| [function_1] data [arg_2] data	count=2
module	the current line a ||| conch	count=1
function	and return a ||| get	count=2
arg	to the given path ||| path	count=1
class	my syspath and ||| path	count=1
module	has ||| internet	count=1
class	skip the next iteration ||| looping	count=1
function	if ||| deprecated	count=1
class	random value suitable for ||| credential factory	count=1
function	wait until we ||| defer until	count=1
class	a c{filedescriptor} for ||| continuous polling	count=1
function	the given arguments ||| arguments	count=1
class	list of segments ||| iftpshell	count=2
arg	type ||| type name	count=1
class	a mailbox ||| imailbox imap	count=1
class	to an authentication agent ||| user auth	count=1
function	[function_1] person ||| [function_2] [function_1]	count=1
class	expression ||| broker	count=1
function	make ||| make	count=3
function	log observer ||| log observer	count=2
function	from modules instance of ||| name	count=1
function	in ||| child	count=1
function	run in [function_2] ||| [function_2] [function_1]	count=2
module	of my process's stdin ||| internet	count=1
arg	domain from the given ||| answers domain	count=1
class	performing the ||| itelnet	count=1
module	l{servicemanager}, using the ||| words	count=1
function	bio ||| bio	count=1
function	similar to getpeer but ||| get host	count=1
function	data ||| for content	count=1
function	ciphers to allow ||| select ciphers	count=1
module	move the cursor up ||| conch insults	count=1
function	c{other} if the nodes ||| is equal	count=1
module	the application in the ||| application	count=1
function	it as an alternative ||| replacement string	count=1
class	resolved ||| tcp6client endpoint	count=1
class	body ||| body	count=1
function	attempts ||| attempts	count=1
function	line number as ||| line number	count=1
function	methods that share ||| dh gex request	count=1
module	the underlying ||| web	count=3
function	tuple to a ||| header to	count=1
arg	domain the domain to ||| reactor service domain factory	count=1
function_arg	[function_1] transport and ||| [function_1] [arg_2]	count=3
function	sending i{ping} messages ||| heartbeat	count=1
function	this will be ||| sent mail	count=1
function	into the [function_2] ||| [function_2] [function_1]	count=1
function	thread with the given ||| thread	count=1
function	way of responding ||| respond	count=1
function	[function] query return ||| [function]	count=1
function_arg	this [arg_2] ||| [arg_2] [function_1]	count=1
function	prefix length ||| prefix	count=1
function	a pre-built ||| build	count=1
function	[function_1] entity for ||| [function_1] [function_2]	count=2
class	input file to the ||| file body	count=1
function_arg	coerce a failure [function_1] [arg_2] failure ||| [function_1] [arg_2]	count=1
arg	code ||| code	count=1
function	previously set values ||| set	count=1
function	is authorized ||| authorized	count=1
arg	constructs a pre-built ||| password	count=1
function_arg	[function_1] flags ||| [function_1] messages [arg_2]	count=1
function	c{inode} ||| tag name	count=1
module	associated with this ||| names	count=1
module	which the message is ||| mail	count=1
function	stat [function_2] ||| [function_1] [function_2]	count=1
module	the ||| scripts	count=1
function	position [function_2] ||| [function_1] [function_2]	count=1
class	already listening ||| stream server	count=1
arg	a query to a ||| query	count=1
function	the private part of ||| private	count=1
arg	rfc 2821 address ||| toemail file deferred	count=1
module	iterator and pass them ||| web	count=1
function	serialized arguments ||| arguments	count=1
function	write to ||| write chunk	count=1
function	exists in the database ||| exists request	count=1
arg	root object ||| root client	count=1
arg	alias ||| memo	count=1
arg	c{second} ||| first second msg	count=1
function	'message' in ||| end line	count=1
class	listening on the endpoint ||| stream server endpoint service	count=1
module	the ||| conch ssh	count=62
function	value of the named ||| value	count=1
function	it resets [function_2] ||| [function_1] [function_2]	count=3
arg	by importing it ||| fullyqualifiedname	count=1
arg	queue to ||| queue	count=1
function_arg	emit an [arg_2] ||| [arg_2] [function_1]	count=1
class	message as it is ||| maildir mailbox append message	count=1
arg	path with mode ||| mode	count=1
function	any ||| get deprecated	count=1
function	group ||| alias group	count=1
function	the number ||| message count	count=1
module	a predetermined list ||| python	count=1
arg	a message from the ||| message	count=1
class	and ||| saslinitiating	count=1
arg	if c{obj} ||| obj	count=1
function	[function_1] anonymous cred ||| [function_1] [function_2]	count=2
arg	name base ||| name	count=1
module	[module_1] ssh ||| [module_1] [module_2]	count=4
class	message to the mailbox ||| maildir mailbox append message	count=1
class	this ||| maildir name	count=1
arg	client protocol instances ||| client	count=1
function	tls is required ||| tlsrequired	count=1
function	a connection is ||| connection	count=5
class	task is ||| cooperative task	count=1
function	return ||| get thread	count=1
module	context using this ||| application	count=1
module_class	the current remote ||| protocols ftpclient	count=1
class	of my class to ||| tuntap port	count=1
class	an l{iprotocol} provider ||| wrap iprotocol	count=1
arg	of the password ||| password	count=1
class	key see _fromstring_public_lsh and ||| key	count=1
module	a new ||| names	count=1
function	attribute name on the ||| get method name	count=1
function_arg	[function_1] response and ||| [arg_2] [function_1]	count=1
class	authentication agent if there ||| auth	count=1
function	also be ||| made	count=1
arg	protocol ||| processprotocol	count=1
arg	command over it ||| command username	count=1
function_arg	header [arg_2] ||| [function_1] [arg_2]	count=3
function	_wrappedfactory} ||| build	count=1
function	while key exchange is ||| key exchange	count=1
function	l{esmtpsender} protocol configured ||| protocol	count=1
class	if the key ||| key	count=1
function_arg	set the [arg_2] ||| [function_1] [arg_2]	count=1
module	object with the ||| conch ssh	count=1
function	an opaque ||| opaque	count=1
function	[function_1] an entity ||| [function_2] [function_1]	count=2
arg	server ||| server	count=3
module	split version [module] an ||| [module]	count=1
class	log ||| log	count=14
arg	query ||| query servers timeout queriesleft	count=1
function	prepare an object for ||| prepare for	count=1
module	the url for ||| web	count=1
function	associate ||| setitem	count=1
module	protocol factory and ||| internet	count=1
function	[function_1] wrapped old-style ||| [function_1] [function_2]	count=2
class	name lookups ||| ireactor pluggable	count=1
function	an offset and size ||| offset and size	count=1
arg	to c{message} ||| responseconstructor	count=1
class	each alias and ||| alias group	count=1
arg	incoming mac values ||| data mac	count=1
function	is received ||| datagram received	count=1
module	the failure in ||| conch	count=1
module	my ||| internet iocpreactor	count=1
module	the emacs ||| scripts	count=1
class	@param ||| from event	count=1
function	[function_1] in c{paths} ||| [function_1] [function_2]	count=5
function	remember ||| remember root	count=1
arg	python source ||| source	count=1
class	across all ||| name generator	count=2
function	of an object ||| of	count=1
module	the failure ||| conch	count=1
function	to this protocol ||| start protocol	count=1
function	return an authorized ||| get	count=1
function	request data and a ||| request	count=1
function_arg	[function_1] name ||| [function_1] [arg_2]	count=3
function_arg	timeout policy [arg_2] ||| [function_1] [arg_2]	count=1
function	reply to a ||| reply	count=1
function	referring to a sibling ||| temporary sibling	count=1
module	current line the ||| conch	count=1
function	float ||| float	count=1
function	string ||| to string	count=2
function	it resets ||| reset	count=1
function	stream if ||| stream	count=1
function	master index ||| query clientinfo	count=1
function	check if the ||| check	count=1
class	the hostname resolution ||| resolution	count=1
arg	the given buffers ||| bufflist evt	count=1
module	set of ||| mail	count=1
module	l{servicemanager}, using ||| words protocols	count=1
function	write a ||| write	count=6
function	return no [function_2] ||| [function_2] [function_1]	count=1
arg	by c{blob} ||| blob	count=1
function_arg	parse a line ||| xform line	count=2
class	string which ||| name generator	count=1
class	moduledict in ||| python	count=1
class	l{ampbox}es or relay ||| binary box	count=1
function	to [function] ||| send [function]	count=1
module	the ||| protocols	count=65
function	for removing [function_2] ||| [function_2] [function_1]	count=1
function	l{ipv4address} or l{ipv6address} indicating ||| host	count=1
function_arg	append file [arg_2] ||| [arg_2] [function_1]	count=4
arg	user the hostmask of ||| user	count=1
function	a connection over ||| make connection	count=1
class	value suitable ||| credential factory	count=1
function	a successful anonymous ||| cb anonymous authentication	count=2
function_arg	[function_1] [arg_2] reason ||| [function_1] [arg_2]	count=2
arg	login get the password ||| password	count=1
module	to handle the ||| conch ssh	count=1
function	returns a tls ||| get	count=1
function	last write ||| should	count=1
function	refers ||| isdir	count=2
module	password ask the user ||| conch ssh	count=1
function	a [function] server ||| [function]	count=1
arg	[arg] using ||| [arg]	count=1
function	suite was [function] or not ||| was [function]	count=1
class	signal handlers for ||| signal	count=1
module	called when the other ||| conch ssh	count=1
function	start this l{clientservice}, ||| start service	count=1
function	client protocol ||| client	count=1
function	join a chat ||| join chat	count=3
function	complete uidl response ||| response	count=1
module	returns ||| internet	count=1
arg	beginning of line ||| line	count=1
module	a context using this ||| application runner	count=1
function	api with some ||| replacement string	count=1
function	called when the channel ||| channel	count=1
arg	and size ||| size	count=1
class	this domain or an ||| maildir domain	count=1
class	certificate to ||| certificate	count=1
function	publish ||| publish	count=1
function	pwd command ||| parse pwdresponse	count=1
class	members in the group ||| group	count=2
function	open the ||| open	count=2
arg	to [arg] ||| obj [arg]	count=3
arg	a c{regexp} search of ||| text regex msg	count=1
function	user-space send buffer ||| send buffer	count=4
class	address [class] address for ||| [class]	count=1
arg	given an argument name ||| name	count=1
arg	start and [arg_2] ||| [arg_1] [arg_2]	count=3
class	it is already listening ||| stream server	count=1
function	to the default ||| default log	count=1
function	is ||| connection lost	count=2
module	a pre-built l{servicemanager}, ||| protocols jabber	count=1
function	a working [function_2] ||| [function_2] [function_1]	count=1
class	create ||| credential factory	count=2
function	[function_1] info for ||| [function_2] [function_1]	count=2
class	[class] from ||| [class]	count=3
class	message to the ||| append message	count=2
module_class	[module_1] [class_2] pair c{ root ext ||| [module_1] [class_2] splitext	count=2
class	to the mailbox ||| maildir mailbox append	count=3
arg	[arg] is ||| [arg]	count=6
function	ready for [function_2] ||| [function_2] [function_1]	count=7
function	it is running on ||| get deprecated	count=1
function	a connection is made ||| connection made	count=1
function_arg	[function_1] reactor an ||| [arg_2] [function_1]	count=1
function	internal date associated with ||| internal date	count=1
function	write [function_2] ||| [function_2] [function_1]	count=2
class	format ||| unix application runner	count=1
module	sent from the ||| web	count=1
module	to ||| python	count=1
function	from an ||| from	count=3
function	log prefix for a ||| log prefix	count=1
arg	a broker [arg_2] ||| [arg_2] [arg_1]	count=1
function	c{self _wrappedfactory} or ||| build protocol	count=1
arg	exception ||| exception f	count=1
function_arg	[function_1] out ||| [function_1] [arg_2]	count=1
class	be unique across ||| maildir name generator	count=1
class	specify ||| option mixin	count=1
function	a testcase subclass or ||| name	count=1
class	an argument ||| argument	count=1
class	offset ||| offset	count=1
module	[module] c{__init__} ||| [module]	count=3
function	to frame [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] modules ||| [function_1] [function_2]	count=1
function	methods that share ||| dh gex	count=1
class	the input file ||| file body producer	count=1
arg	constants the only value ||| level	count=1
function	msg_disconnect ||| ssh disconnect	count=1
class	message ||| message task	count=1
module	the negation ||| mail	count=1
arg	bytes to ||| bytes	count=2
module_class	and process handle ||| internet process	count=1
function_arg	certificate request [arg_2] ||| [function_1] [arg_2]	count=1
function	uidl response ||| response	count=1
class	wrapped web context ||| current policy	count=1
class	create ||| hosts file	count=1
arg	command to get from ||| command	count=1
class	changed since last ||| log	count=1
arg	given file descriptor ||| fd	count=2
function	body ||| body request	count=1
function	ancillary data payload holds ||| ancillary	count=1
arg	set an outgoing http ||| k v expires domain	count=1
function	keep a clientside cache ||| cache and observe for	count=1
module_class	parse the [class_2] ||| [module_1] [class_2]	count=1
function	by pausing ||| pause	count=1
function	a ||| get replacement	count=2
function	identity for public-key authentication ||| opt identity	count=1
function	keys that ||| keys	count=1
function_arg	a function [arg_2] ||| [function_1] [arg_2]	count=2
function	return a class ||| get service	count=1
module	c{request}'s uri ||| web	count=1
arg	of data from ||| data	count=1
function	deferred has been canceled ||| get	count=1
module	deferred ||| internet	count=1
function	all selectables ||| all	count=2
function	response code ||| code	count=1
function	in ||| end	count=1
class	cgi specification ||| cgiscript	count=1
module	convert ||| protocols haproxy	count=1
function	a pre-built l{servicemanager}, ||| manager	count=1
class	and [class_2] ||| [class_2] [class_1]	count=2
function	the authentication ||| auth	count=1
class	retrieve the ||| base	count=1
function	get the host that ||| get host	count=1
function	remove a ||| cancel	count=1
function	policy ||| policy	count=1
class	remove a ||| queue	count=1
class	[class_1] domain ||| [class_2] [class_1]	count=8
class	unique across all calls ||| name	count=1
function	arguments ||| arguments	count=4
class	[class] consumer by ||| [class] body	count=1
function	[function_1] special-case your ||| [function_2] [function_1]	count=3
class	[class_1] utc ||| [class_1] [class_2]	count=1
class	function across ||| maildir name	count=1
class	sending messages via amp ||| box	count=1
arg	the largest udp ||| extendedrcode version dnssecok	count=1
function	pre-built ||| build service manager	count=2
class	we will stop performing ||| itelnet	count=1
class	transport using chunked ||| chunked	count=1
arg	argument is l{none} ||| maybereactor	count=1
function	broadcast this [function_2] ||| [function_2] [function_1]	count=2
arg	given group ||| group low high	count=1
function	to its c{getfilehandle} method ||| details	count=1
function_arg	get [arg_2] ||| [function_1] session [arg_2]	count=1
function	[function_1] [function_2] ||| [function_1] to display [function_2]	count=6
class	via amp invoke it ||| box dispatcher	count=1
function	snac and wait ||| snac	count=1
module	to connect to ||| internet	count=2
class	with a ||| auth client	count=1
function	[function_1] the service ||| [function_2] [function_1]	count=2
class	proxyforinterface ||| proxied class	count=1
function	chain another [function_2] ||| [function_2] [function_1]	count=1
function	mapping which ||| mapping	count=1
function_arg	directory this ||| directory path	count=1
rep	with matching [function_arg_2] ||| [module_class_1] has [function_arg_2]	count=1
class	transfer-encoding ||| chunked	count=1
function	to this private ||| string private	count=1
function_arg	[function_1] a command ||| [arg_2] [function_1]	count=1
function	cancel the [function_2] ||| [function_1] [function_2]	count=1
arg	message to a user ||| user message	count=1
class	is set checks on ||| synchronous	count=1
module	handle the beginning ||| conch ssh	count=1
function	run in ||| run in	count=1
class	@param ||| python logging observer	count=1
function	replaces stdout ||| replace stdout	count=1
class	this for when each ||| only receiver	count=1
function	get [function_2] ||| [function_1] [function_2] to	count=1
class	[class_1] dictionary ||| [class_1] with [class_2]	count=1
arg	local files ||| previousresult files	count=1
arg	c{cas} value matches the ||| val cas flags	count=1
function	newlines encountered ||| newlines	count=1
function	a connection [function_2] ||| [function_2] [function_1]	count=2
function_arg	key exchange [arg_2] ||| [function_1] message type [arg_2]	count=1
arg	ampprotocol the communication channel ||| ampprotocol	count=1
function	data ||| data received	count=2
module	for the ||| protocols	count=1
class	print ||| minimal reporter	count=1
arg	given response and attempt ||| response	count=1
function	[function_1] [function_2] using l{_irequestencoderfactory ||| [function_1] [function_2]	count=4
function	of the readers ||| readers	count=1
function	[function_1] [function_2] ||| [function_1] cache [function_2]	count=8
function	get the initial ||| get initial	count=3
module	public key ||| ssh	count=1
arg	[arg] query parameter ||| [arg]	count=3
function	fileno() of my process's ||| fileno	count=1
function_arg	[function_1] logical url ||| [function_1] domainurl [arg_2]	count=1
arg	with the given status ||| status	count=1
function_arg	[function_1] [arg_2] ||| [function_1] ipv6 [arg_2]	count=1
function	path l{bytes} [function] path ||| [function]	count=1
function	connect to remote ||| connect	count=1
class	create a ||| digest	count=1
class	spawn ||| ireactor process	count=1
class	both ends of my ||| fdwaker	count=1
function_arg	[function_1] containing username ||| [arg_2] [function_1]	count=2
module	indicate whether the ||| conch	count=1
module_class	any message [class_2] ||| [module_1] [class_2]	count=4
function	compute a string key ||| flat key	count=1
function	special-case your [function_2] ||| [function_2] [function_1]	count=1
function	been patched by ||| patched	count=1
function	class that contains test ||| test	count=1
function	the subject of this ||| get subject	count=1
function	l{secondaryauthorityservice} [function] ||| [function] server address and	count=3
function	via amp invoke it ||| call remote	count=1
arg	scheduler-like object to which ||| terminationpredicatefactory scheduler started	count=1
function	fails to ||| fail	count=1
arg	broker [arg_2] ||| [arg_1] [arg_2]	count=1
function	multi-line ||| code status split	count=1
function	[function] or ||| is [function]	count=2
function	key exchange ||| ssh	count=1
function	the given ||| write	count=1
arg	l{knownhostsfile} provider available on ||| hostkey fingerprint	count=1
module_class	[module_1] process which ||| [module_1] [class_2]	count=2
function	list of disconnect callbacks ||| dont notify on disconnect	count=1
class	supported ||| option mixin	count=1
class	the underlying path ||| file path	count=1
function	agent v3 format ||| from string agentv3	count=1
module	the repository once the ||| python	count=1
function	fails to connect ||| fail	count=1
arg	[arg_1] size ||| [arg_1] [arg_2]	count=2
function	the source [function_2] ||| [function_2] [function_1]	count=4
function	status has changed ||| status	count=1
arg	channel this should not ||| channel	count=1
function	extract text [function_2] ||| [function_1] [function_2]	count=2
function	and the current line ||| line	count=1
function_arg	[function_1] chat ||| [arg_2] [function_1]	count=2
arg	items in a list ||| list	count=1
function_arg	[function_1] octets ||| [function_1] [arg_2]	count=3
function	get ||| get	count=58
function	[function_1] python module ||| [function_2] [function_1]	count=4
function	query and ||| query	count=1
function	stop ||| stop	count=29
function_arg	[function_1] and ||| [function_1] stdin [arg_2]	count=3
class	paused l{cooperativetask} ||| cooperative task	count=1
function	build an [function_2] ||| [function_1] [function_2]	count=3
module	matches the ||| conch	count=1
class	checks what protocol we're ||| protocol	count=1
function	send ||| send box	count=2
class	copy locally ||| remote copy	count=1
arg	some data as a ||| data	count=1
function	polite text exhorting ||| get replacement string	count=1
function	encountered text ||| text	count=1
function_arg	switch [arg_2] ||| [function_1] to [arg_2]	count=1
function	send a ||| send udp	count=1
module_class	[module_1] file ||| [module_1] known hosts [class_2]	count=1
arg	l{gairesolver} ||| reactor getthreadpool getaddrinfo	count=1
function	and send this ||| send	count=1
function	remove the ||| remove identity	count=1
class	file ||| daily log file	count=1
function	other side ||| close	count=1
class	of a cgi script ||| cgiscript	count=1
function	start calling boxreceived ||| start	count=1
function	retrieve the flags ||| get flags	count=1
function	buffer for this ||| buffer	count=2
class	in the ||| tree reporter	count=1
function_arg	verify [arg_2] ||| [arg_2] [function_1]	count=1
arg	default value ||| default	count=1
function	certificate [function] ||| sign certificate [function]	count=3
function	detailed locals and ||| detailed	count=1
class	l{tlsmemorybiofactory} ||| tlsmemory biofactory	count=1
function	to ||| to node	count=4
module_class	converts the http/2 ||| web h2stream	count=1
function	previously-remembered url ||| root url	count=2
arg	username the ||| autologin username password	count=1
module	and setup authentication ||| words	count=1
function	consuming the payload ||| payload	count=1
class	a new protocol you ||| box protocol	count=1
arg	[arg] has ||| group [arg]	count=3
function	the flags ||| get flags	count=1
function	[function_1] all registered ||| [function_1] [function_2]	count=1
function	connection and set it ||| connection	count=1
function	post ||| post	count=1
function	data [function] to which ||| body data [function]	count=1
function	constructs a ||| manager	count=1
function	remove ||| cancel	count=1
function	compute ||| compute host	count=1
function	given message [function_2] ||| [function_1] [function_2]	count=4
class	standard ||| standard	count=1
class	as a single ||| tuntap	count=1
class	authentication ||| saslinitiating	count=1
function	a stat [function_2] ||| [function_2] [function_1]	count=1
class	define ||| dict client	count=1
function	closes deliver disconnection notification ||| closed	count=1
class	of this task ||| task	count=1
function	[function_1] initial ||| [function_2] [function_1]	count=1
function	fetchgroups() ||| all groups	count=1
function	of the [function] ||| [function] log	count=3
class	the message as it ||| append message task	count=1
function	or dynamically generated child ||| child	count=1
module	which distinguishes this ||| python	count=1
function	add a socket filedescriptor ||| add	count=1
function	to start ||| start receiving	count=1
module	component of the ||| python	count=1
module_class	[module_1] [class_2] unless c{_nomorewritesexpected} has been ||| [module_1] length enforcing [class_2]	count=2
function	data directory ||| data directory	count=2
module_class	to standard ||| internet standard	count=1
arg	as an http/1 ||| transport	count=1
arg	as [arg] ||| transport [arg]	count=1
function	c{name} into ||| by	count=1
module	the l{cooperativetask} which ||| web	count=2
class	test if [class_2] ||| [class_2] [class_1]	count=2
class	ancillary ||| sendmsg mixin	count=1
function	original handler's [function] ||| [function]	count=3
class	certificate ||| base	count=1
function	[function_1] and its ||| [function_2] [function_1]	count=8
function	l{downloadpage} ||| get page classes	count=1
function	file descriptors to ||| file descriptor	count=1
arg	create a sha1-digest ||| sid	count=1
class	the group ||| igroup	count=2
function	the ||| key	count=1
module	underlying transport of the ||| protocols	count=1
function	join [function_2] ||| [function_2] [function_1]	count=1
arg	called [arg] ||| [arg]	count=2
function	makes doc chunks for ||| doc make chunks	count=1
arg	transport and connect the ||| transport	count=1
function_arg	joins [arg_2] ||| [arg_2] [function_1]	count=1
class	clone of this tag ||| tag	count=1
function	a specific ||| specific	count=1
function	api with some ||| replacement	count=1
function	to post [function_2] ||| [function_2] [function_1]	count=2
function	stream server [function_2] ||| [function_2] [function_1]	count=2
module_class	[module_1] mailbox ||| [module_1] [class_2]	count=14
function	[function_1] the connection ||| [function_2] [function_1]	count=2
function	a tcp connection ||| connection	count=1
module	constructs a pre-built ||| words protocols jabber	count=1
class	process which signals ||| process	count=1
function	[function_1] time ||| [function_1] access [function_2]	count=1
function_arg	[function_1] body data ||| [arg_2] [function_1]	count=3
arg	fd that ||| fd	count=1
class	object associated with ||| with	count=2
function	local class ||| class	count=1
module	calls ||| mail	count=1
function	to ||| to xml	count=2
function	quoting ||| cmd line quote	count=1
module	we ||| conch	count=1
class	string for a ||| domain delivery base	count=1
function_arg	arguments using ||| make arguments cls	count=1
class	[class] command ||| command [class]	count=1
class	that ||| itelnet	count=1
class	i{start_response} callable ||| wsgiresponse	count=1
function	data ||| data received finished	count=1
function	c{name} into an ip ||| by	count=1
module_class	[module_1] [class_2] a pair c{ root ||| [module_1] [class_2] splitext	count=2
function	the log prefix ||| get log prefix	count=2
module	handlers ||| words protocols jabber	count=1
function	[function_1] source ||| [function_2] [function_1]	count=12
function	msg_userauth_success the ||| userauth success	count=1
arg	[arg_1] end ||| [arg_1] [arg_2]	count=3
module	mac using the ||| conch	count=1
function	when the underlying connection ||| connection	count=1
arg	[arg_1] refer to ||| [arg_2] [arg_1]	count=1
arg	the path as a ||| path	count=1
module	[module] is a ||| [module]	count=1
class	close the file ||| file	count=1
function	next [function_2] ||| [function_2] [function_1]	count=1
function	retrieve an ||| get	count=2
function	is running ||| get	count=1
function	a data directory for ||| data directory	count=1
module	the body of ||| web	count=1
class	factory ||| iprotocol negotiation factory	count=1
arg	checks if the path ||| path	count=1
class	current l{filedescriptor} ||| glib reactor base	count=2
function	to enable this ||| enable remote	count=2
function	of c{root} into a ||| flatten	count=1
function	a msg_kex_dh_gex_init message ||| kex dh gex init	count=1
arg	byte ||| strio	count=1
function	unique identifier ||| uid	count=1
function_arg	[function_1] [arg_2] ||| [function_1] unexpected [arg_2]	count=1
function	message [function_2] ||| [function_1] [function_2]	count=4
function	select a character set ||| select character set	count=1
arg	the given version ||| version format	count=2
arg	serv_type an indication of ||| serv_type host serv_name username	count=1
module_class	[module_1] agent ||| [class_2] [module_1]	count=1
function	expressed by a list ||| waiters	count=1
function	[function] in the ||| format [function]	count=3
function	header ||| header	count=12
function	[function_1] id ||| [function_2] [function_1]	count=7
function	boolean or ||| boolean or	count=1
function	name on the ||| method name	count=1
arg	the given interface ||| interface default	count=1
class	infinite redirection ||| infinite redirection	count=2
function	[function_1] a clientside ||| [function_1] cache [function_2]	count=3
module	select and setup ||| jabber	count=1
class	internal parser function for ||| parser	count=1
class	channel ||| channel	count=5
function	will return an authorized ||| get	count=1
class	create a random value ||| digest credential	count=1
function	send it ||| send	count=1
function	challenge for use ||| challenge	count=1
function	store ||| store	count=1
function	as waiting ||| waiting	count=1
arg	using a username and ||| username	count=1
function	encode a key so ||| encode	count=1
arg	the given member to ||| member	count=2
class	value suitable ||| factory	count=1
function	find the failure that ||| find failure	count=1
function	an offset ||| offset	count=1
module	rectangle ||| conch insults	count=1
function	c{obj}'s constructor [function] ||| [function] displayable	count=3
arg	[arg] given ||| sender recipient [arg]	count=1
module	predetermined list ||| python	count=1
function	[function_1] article ||| [function_2] [function_1]	count=4
function	size in ||| get size	count=1
arg	func ||| func value	count=1
arg	file any file-like object ||| file consumer transform	count=1
arg	there's anything left ||| name qname	count=1
function	with level sol_socket and ||| level	count=1
arg	numeric [arg_2] ||| [arg_2] factory backlog [arg_1]	count=2
arg	[arg] with the ||| [arg]	count=3
module	connection to [module] been ||| [module]	count=1
function	the names ||| names	count=2
arg	[arg] by the ||| [arg]	count=3
arg	err ||| err	count=1
function	given message type ||| message type	count=2
function	specific ||| fetch specific	count=1
function	from its ||| from url	count=2
function	connection ||| connection	count=46
class	file to ||| file body	count=1
arg	cannot be established ||| relay	count=1
function	boolean and ||| boolean and	count=1
function	generated child ||| child	count=1
function	is running on set ||| get	count=1
function	named plugin package ||| plugin package	count=1
class	this ||| generator	count=1
arg	given a module return ||| module	count=1
function	new l{privatecertificate} [function_2] ||| [function_1] [function_2]	count=1
class	user [class_2] ||| [class_2] [class_1]	count=1
function	from modules ||| name	count=1
arg	file @type file any ||| file	count=1
class	this request ||| request	count=2
function	try to return ||| get	count=1
function	user ||| get replacement	count=1
function	resume ||| do resume	count=1
function_arg	ampbox [arg_2] ||| [function_1] name [arg_2]	count=4
function	auth state ||| state auth	count=2
class	task completed with ||| message task	count=1
class	proxy ||| proxy resource	count=1
module	c{b'http'} scheme and tls ||| web	count=1
function	this [function] ||| [function]	count=1
module	an object from ||| trial	count=1
function	permissions to access ||| permissions	count=1
function	[function_1] the attributes ||| [function_1] [function_2]	count=1
module_class	[module_1] key ||| [module_1] [class_2] eq	count=4
function	c{address} via ||| reply	count=1
class	descriptor will use ||| file descriptor	count=1
function	msg_unimplemented ||| unimplemented	count=1
arg	a fd ||| fd	count=1
class	if the key matches ||| key	count=1
arg	filename ||| k	count=2
function	and send [function_2] ||| [function_2] [function_1]	count=1
function_arg	remove from [arg_2] ||| [function_1] messages [arg_2]	count=3
arg	[arg_1] an indication ||| [arg_1] [arg_2]	count=1
class	signal handlers ||| signal reactor mixin	count=3
arg	given [arg] using ||| [arg]	count=1
function	[function_1] result ||| [function_2] [function_1]	count=4
function	reactor if ||| reactor	count=1
module	l{sshtransportaddress} corresponding to the ||| conch	count=1
arg	store a non-filled-out cached ||| cid	count=1
function	a snapshot of ||| get snap shot	count=1
class	to handle waiting messages ||| manager	count=1
module	channel with the trial ||| trial	count=1
class	line ||| line element	count=1
class	[class_1] containing only ||| [class_1] [class_2]	count=1
function	as an alternative ||| string	count=1
class	and log ||| base	count=1
function	[function_1] buffer this ||| [function_2] [function_1]	count=1
function	user record to ||| user	count=2
function	a local object ||| local object	count=2
function	succeeded against expectations ||| add unexpected success	count=2
function	[function_1] per ||| [function_2] [function_1]	count=1
module	the screen ||| conch	count=2
class	this channel exists on ||| command channel	count=1
arg	overrides ||| k v	count=1
function	server ||| fetch	count=1
class	that we will ||| itelnet transport	count=1
function	subclass or an instance ||| name	count=1
function	convert ||| convert	count=1
function	if the connection is ||| is	count=1
arg	previously ||| requestid	count=1
class	for valid ||| base	count=1
function	current failure [function_2] ||| [function_1] [function_2]	count=1
class	domain [class_2] ||| [class_2] [class_1]	count=2
class	to __init__ ||| arguments generator	count=1
arg	uid and gid or ||| uid gid	count=1
function	a trust ||| trust	count=1
module	global python ||| python	count=1
function	user ||| get replacement string	count=1
module	when the ||| internet	count=2
module	l{_connectedprotocol}, issue a ||| names	count=1
module	and the connection ||| web	count=1
function	peer side ||| get peer	count=1
function	for use as ||| generate	count=1
arg	message to user not ||| user message	count=1
arg	of the web server ||| path reactor	count=1
module	suppresses [module] indicated warnings ||| [module]	count=1
function	is mac [function_2] ||| [function_1] [function_2]	count=1
function	of disconnect callbacks ||| notify on disconnect	count=1
class	[class_1] redirection exception ||| [class_2] [class_1]	count=3
function_arg	write the [arg_2] ||| [arg_2] [function_1]	count=1
module_class	be [class_2] ||| [module_1] process [class_2]	count=1
arg	a callback and an ||| callback	count=1
function	a fix for ||| fix	count=1
module	as this instance but ||| python	count=1
function_arg	[function_1] user the ||| [function_1] [arg_2]	count=1
arg	a numeric [arg_2] ||| [arg_2] [arg_1]	count=4
function	that an account ||| register account	count=1
arg	generic callback for a ||| ignored	count=1
class	object containing only ||| imessage imappart	count=2
function	api with some polite ||| get	count=1
module	attempts to ||| conch	count=1
module_class	address [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	modules were imported ||| imported	count=1
class	for valid arguments and ||| base	count=1
class	[class_1] file size ||| [class_1] [class_2]	count=1
class	last ||| daily	count=1
module	will stop performing the ||| conch	count=1
arg	tests that are in ||| thing recurse	count=1
function	l{servicemanager}, using the ||| manager	count=1
module_class	the [class_2] ||| [module_1] known hosts [class_2]	count=1
function	a list of ||| list	count=6
function	a ||| name	count=3
class	xmlstream when ||| authenticator	count=2
module_class	the reactor ||| internet reactor	count=1
class	in a predetermined list ||| failure	count=1
module	protocol from the ||| conch	count=1
function_arg	[function_1] reporter ||| [arg_2] [function_1]	count=7
function_arg	[function_1] option declarations ||| [arg_2] [function_1]	count=3
function	when executing the named ||| responder	count=1
class	value suitable for ||| digest credential factory	count=1
module	consumer attached to me ||| spread	count=1
class	as [class] ||| [class]	count=2
function	a header tuple to ||| header to	count=1
class	l{icredentialschecker} interface called ||| sshprotocol checker	count=1
module	the associated connection has ||| web	count=1
function_arg	[function_1] a connection ||| [function_1] [arg_2]	count=1
class	is intended to be ||| maildir name generator	count=1
arg	the given instance ||| instance methodname default	count=1
module	when a ||| jabber	count=1
function_arg	[function_1] buddyid ||| [arg_2] [function_1]	count=4
function	the ||| deprecated	count=3
function	list of disconnect ||| on disconnect	count=1
function	against the correct ||| check	count=1
function	[function_1] expected ||| [function_1] [function_2]	count=1
module	the given ||| conch client	count=1
arg	message to ||| message length	count=2
function	object it is ||| get deprecated	count=1
class	file's [class_2] ||| [class_1] [class_2]	count=1
arg	using [arg_2] ||| [arg_2] [arg_1]	count=1
arg	factory factory ||| factory wrappedprotocol logfile lengthlimit	count=1
arg	of data ||| data	count=3
function	a child ||| child	count=4
module	even though [module] rfc says ||| [module]	count=1
module	from the ||| conch ssh	count=4
function	the fileno() of ||| fileno	count=1
function	object represents in meters ||| in meters	count=1
function	all ||| accumulate	count=1
function	[function_1] accept response ||| [function_1] [function_2]	count=3
class	an unparsed [class_2] ||| [class_2] [class_1]	count=4
module	the connection ||| conch ssh	count=1
class	xmlstream when the ||| listen authenticator	count=1
function	surround a ||| get	count=1
arg	reconnecting ||| connector reason reconnecting	count=1
arg	the name of a ||| name	count=1
function	[function_1] return ||| [function_2] [function_1]	count=4
function	[function_1] [function_2] ||| [function_1] socket [function_2]	count=2
function	write [function_2] ||| [function_1] [function_2]	count=2
function	the default ||| default log	count=1
class	socket to ||| socket	count=3
module	new l{dnsdatagramprotocol} ||| names	count=1
module	context using this ||| application runner	count=1
function	set up child process ||| setup child	count=1
class	dictionary ||| domain with default dict	count=1
function	object to a string ||| string proto	count=1
function	modification time ||| modification time	count=2
function	the local address ||| host	count=1
arg	coordinator an l{iexclusiveworker} which ||| coordinator	count=1
function	method names ||| add method names to	count=1
function	[function_1] class ||| [function_2] [function_1]	count=1
function	[function_1] set ||| [function_1] [function_2]	count=4
module	find the source line ||| web	count=1
function	string ends in ||| ends in	count=2
function	the response ||| response	count=3
function	return a l{key} ||| get public	count=1
arg	protocol ||| protocol maxpacketsize	count=1
function	observer ||| observer	count=3
function	nicely-formatted [function] representation ||| get [function]	count=1
class	l{httpchannel} has determined ||| ideprecated httpchannel to request interface	count=1
class	add ||| poll reactor	count=2
function	name of ||| name	count=3
function	l{bucket} corresponding ||| bucket for	count=1
function	verified and accepted ||| do accept	count=1
function	joining to ||| to filesystem	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2] cmp other	count=3
function	and discard the reactor ||| reactor	count=1
function	rename a ||| rename	count=1
arg	[arg] with ||| [arg]	count=3
function_arg	[function_1] l ||| [function_1] [arg_2]	count=1
arg	serialize ||| closeelement defaulturi prefixesinscope	count=1
function	[function_1] links ||| [function_1] [function_2]	count=5
arg	by an l{httpclientparser} ||| rest	count=1
class	[class_1] scheme ||| [class_2] [class_1]	count=2
module	is done in the ||| internet	count=1
function	the reactor ||| run reactor	count=1
arg	a module and do ||| module	count=1
function_arg	return default ||| get key default	count=1
function	of that interface ||| interface	count=1
module	the connection and ||| web	count=1
arg	are in it whatever ||| parent qualname	count=1
module	stop performing the ||| conch	count=1
arg	chatui the gui chat ||| group chatui	count=1
function	c{obj}, add all methods ||| accumulate methods	count=1
module_class	start the [class_2] ||| [module_1] [class_2]	count=2
function	parse a stream server ||| parse stream server	count=1
function	returning files and ||| files and	count=1
function	the body of this ||| get body	count=1
class	function across ||| generator	count=1
class	input file to ||| file body producer	count=1
class	suitable for use as ||| credential factory	count=1
function	host ||| known hosts	count=1
class	size ||| pop3	count=1
function	reads ||| reads	count=1
function	stream [function_2] ||| [function_1] [function_2]	count=8
function	flags ||| get flags	count=1
arg	an article ||| article	count=2
function	and initialize ||| init	count=1
arg	to a transport ||| transport	count=1
arg	flags for one ||| flags silent	count=1
function	process [function_2] ||| [function_1] output [function_2]	count=1
class	was provided ||| invalid address error	count=1
arg	a ||| factory	count=2
function_arg	[function_1] progress ||| [function_1] [arg_2]	count=3
arg	generic callback for ||| ignored	count=1
function_arg	@param id a ||| init id	count=1
function	reactor to ||| reactor	count=1
class	monitoring ||| monitoring service	count=3
function_arg	[function_1] representation of ||| [arg_2] [function_1]	count=3
class	ssh server and run ||| sshcommand client	count=1
function	ciphers to allow to ||| select ciphers	count=1
function_arg	[function_1] [arg_2] ||| [function_1] module name [arg_2]	count=6
module	the c{commandconnected} deferred with ||| conch	count=1
arg	failure to ||| failure	count=1
module	l{dnsdatagramprotocol} instance from ||| names	count=1
function	progress bar ||| make stat bar	count=1
function	c{dict} that ||| make excludes dict	count=1
class	want log ||| log level	count=1
module	though [module] rfc says ||| [module]	count=1
class	is set checks ||| synchronous	count=1
class	object containing only the ||| imessage imappart	count=1
class	prepare ||| ext twisted	count=1
arg	given ||| flags date	count=1
class	stop ||| timer service	count=1
function	[function_1] header string ||| [function_1] [function_2]	count=2
class	was ||| protocol	count=1
class	process ||| base process	count=2
function	the number of failed ||| failed	count=1
function	generate a [function_2] ||| [function_1] [function_2]	count=1
function	with ||| get replacement string	count=1
arg	connection from ||| connection	count=1
arg	pre-built ||| password	count=1
class	is ||| generator	count=1
arg	group over the given ||| group low	count=1
class	url to ||| url	count=1
module_class	from the [class_2] ||| [module_1] [class_2] prompt	count=1
function	a l{str} representation of ||| repr	count=1
module_class	[module_1] [class_2] root ext } such ||| [module_1] [class_2]	count=4
function	[function_1] the prefix ||| [function_2] [function_1]	count=1
function_arg	of [arg_2] ||| [function_1] channel [arg_2]	count=1
function	decorators and the object ||| get deprecated	count=1
function	[function_1] generator ||| [function_2] [function_1]	count=6
function	messages waiting ||| waiting	count=1
function_arg	left [arg_2] ||| [arg_2] [function_1]	count=2
function	trailing comma at the ||| for trailing comma	count=1
rep	the maildir [function_arg_2] ||| [module_class_1] [function_arg_2]	count=2
function	[function] indicating ||| exec [function]	count=1
function	[function] public key ||| [function] public	count=1
function	the active ||| stop reading and writing	count=1
class	outgoing ||| iagent	count=1
function	to return ||| get	count=1
function	sax [function] ||| flatsax [function]	count=3
function	and ||| from	count=1
module	l{filelogobserver} that emits ||| logger	count=1
function	the default appropriate for ||| default	count=1
function	exception into [function_2] ||| [function_1] [function_2]	count=1
function	message sent to ||| message	count=1
function	[function_1] connection ||| [function_2] [function_1]	count=22
function	data more than once ||| data finished finished	count=1
function	[function_1] path factory ||| [function_1] [function_2]	count=2
module	pre-built ||| jabber	count=1
function	amp invoke ||| call remote	count=1
class	a zippath ||| zip map impl	count=1
function	observe locally ||| observe for	count=1
function	entire ||| message	count=1
class	that this component wishes ||| connect component authenticator	count=1
class	a satellite ||| satellite	count=1
function	a filename [function] ||| [function] local	count=1
function	[function_1] of failed ||| [function_2] [function_1]	count=1
function	[function_1] server protocol ||| [function_2] connection [function_1]	count=1
class	unique across all ||| maildir name generator	count=1
function	header into ||| header	count=1
function	correct parsing ||| mode params	count=1
function	a ||| not	count=1
function_arg	[function_1] to newtopic ||| [arg_2] [function_1]	count=3
class	l{iprocesstransport} provider ||| monitor	count=1
module	lock of the ||| python	count=1
arg	given name [arg_2] ||| [arg_2] [arg_1]	count=2
arg	asn 1- or pem-format ||| class requestdata format args	count=1
arg	client [arg_2] ||| [arg_2] [arg_1]	count=1
arg	@param [arg] an ||| [arg] host port	count=1
module	element has been received ||| xish	count=2
function	checker ||| checker	count=1
function_arg	[function_1] a disconnect ||| [arg_2] [function_1]	count=1
arg	namespace the namespace for ||| namespace source	count=1
function_arg	replace a [arg_2] ||| [arg_2] [function_1]	count=3
class	opened files and directories ||| file transfer	count=1
function	[function_1] second ||| [function_1] [function_2]	count=2
module_class	[module_1] [class_2] ||| [module_1] dcc [class_2]	count=1
function	write c{bytes} to ||| write	count=1
module_class	[module_1] state has ||| [module_1] [class_2]	count=1
module	when i ||| words	count=1
function	open failed for some ||| open failed	count=1
function	the caller's caller ||| calling context	count=1
arg	the given [arg] ||| sender recipient [arg]	count=2
function	a trust [function_2] ||| [function_1] [function_2]	count=1
arg	child resource ||| child	count=1
function	polite ||| replacement string	count=1
class	to domain object ||| domain with default dict	count=1
module	directory and ||| scripts	count=1
function	an ||| coiterate	count=1
function	share an integer ||| kex dh gex group	count=1
arg	given pattern ||| pattern	count=1
class	new l{inmemorysshkeydb} ||| in memory sshkey db	count=1
class	relayed ||| attempt manager	count=1
arg	deprecated in the given ||| format replacement	count=2
function	serial number of ||| serial number	count=1
function	stat response ||| stat response	count=2
function	[function_1] traceback with ||| [function_2] [function_1]	count=1
class	[class_1] this dictionary ||| [class_1] [class_2]	count=4
arg	user the hostmask ||| user channel data	count=1
function_arg	@param name base ||| init name	count=1
function	refers to a ||| isdir	count=2
class	integer file descriptor ||| descriptor	count=1
function	[function_1] quote ||| [function_1] [function_2]	count=1
function_arg	register/unregister an fd ||| update registration fd	count=2
function	all processes this ||| all	count=1
module	convert this ||| python	count=1
arg	string [arg] int port ||| [arg]	count=1
class	[class] otherwise cancel ||| [class] endpoint	count=3
arg	return whatever tests that ||| recurse	count=1
function	[function_1] given server ||| [function_2] connection [function_1]	count=1
class	method of the ||| method	count=1
module	enable the ||| conch insults	count=1
function	command state in which ||| state command	count=1
module	a ||| python	count=6
function	trailing slash ||| slash	count=1
module	constructs a ||| words protocols jabber	count=1
function	what type ||| type	count=1
arg	file ||| file	count=5
module	broker ||| spread	count=2
function	return the socket ||| get handle	count=1
function	to identify [function] messages ||| [function]	count=1
module	if ||| python	count=8
function	when a connection attempt ||| client connection	count=1
module	the encryption ||| conch	count=1
function_arg	exit a [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	list command ||| list i	count=1
function_arg	resume an [arg_2] ||| [arg_2] [function_1]	count=2
module_class	[module_1] user ||| [module_1] [class_2]	count=4
arg	reactor an [arg_2] ||| [arg_1] [arg_2]	count=4
arg	[arg] run ||| [arg]	count=1
arg	the client ||| client	count=1
function	that i store references ||| static	count=1
arg	and writers and ||| writers	count=1
function	version of finish ||| finish	count=1
module	deprecated api with some ||| python	count=1
function	trial [function] class set ||| [function]	count=1
arg	file ||| file consumer transform	count=1
arg	[arg_1] of l{twisted ||| [arg_2] [arg_1]	count=1
arg	[arg_1] dns records ||| [arg_2] [arg_1]	count=4
function	protocol configured ||| protocol	count=1
function_arg	add an [arg_2] ||| [arg_2] [function_1]	count=4
function	notification of the read ||| read	count=1
module	given ||| web	count=4
class	protocol [class] ||| [class]	count=1
module	closed the channel ||| conch ssh	count=1
arg	prefixes dictionary ||| prefixes	count=1
function	make a new ||| new	count=1
function_arg	suppress [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	info [arg_2] ||| [arg_2] [function_1]	count=1
module_class	argument is passed to [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	data into a data ||| data	count=1
module_class	the total ||| mail imessage imappart	count=1
module	remove them from the ||| web	count=1
class	iteration and ||| call	count=1
arg	a test [arg_2] ||| [arg_2] [arg_1]	count=1
function	connects a given protocol ||| listen	count=1
function	that we will stop ||| wont	count=1
class	service is ||| machine	count=2
class	an l{iprocesstransport} ||| process monitor	count=1
arg	string representing ||| cls string	count=1
class	the path in ||| file path	count=1
function	character set ||| character set	count=2
function	returning files ||| get files	count=1
function	ssl ||| ssl	count=2
module	the ||| news	count=2
module	the root of ||| conch	count=1
function	replacement ||| get replacement string	count=1
module	an ||| python	count=1
class	a string which is ||| name generator	count=1
function	pem-format data ||| pem	count=1
function_arg	[function_1] ampprotocol ||| [arg_2] [function_1]	count=1
class	pausing ||| body producer	count=1
function	[function_1] or was ||| [function_2] [function_1]	count=3
function	specify a single ||| single	count=1
arg	data to a usable ||| data	count=1
function	sequence of ||| sequence	count=2
function	request so ||| request	count=1
arg	[arg_1] and the ||| [arg_1] [arg_2]	count=3
module	handle the ||| words protocols	count=2
function	on set the c{_deprecated_info} ||| deprecated	count=1
function	extract text from ||| text from	count=2
class	web server to proxy ||| reverse proxy resource	count=1
arg	creator the ||| creator command protocolfactory commandconnected	count=1
class	@param ||| record rp	count=1
function	above mapping adding both ||| level mapping	count=1
function	when a file ||| file	count=1
function	and directories ||| and directories	count=2
function	[function] and ||| [function]	count=3
function	local object for ||| local object for	count=3
function	[function_1] directory for ||| [function_2] [function_1]	count=3
function	the portal ||| portal	count=1
function	a twisted ||| get	count=1
arg	objs l{list} of l{imessage ||| objs	count=1
function	the date has changed ||| should	count=1
module	the content of ||| web	count=1
function	get the body of ||| body	count=1
module	in ||| trial	count=1
module_class	the http/2 header ||| web h2stream	count=1
function	[function_1] command in ||| [function_2] [function_1]	count=3
module	the beginning of a ||| conch ssh	count=1
function	a msg_kexinit message ||| ssh kexinit	count=1
arg	the domain to connect ||| service domain factory	count=1
module	amp invoke it ||| protocols	count=1
function	resume request made by ||| resume	count=1
function_arg	remove from [arg_2] ||| [arg_2] [function_1]	count=4
class	authentication agent ||| auth	count=1
class	authentication ||| user auth	count=2
class	file path refers to ||| ifile path	count=1
function	a newly ||| new local id	count=1
class	[class] pem-format ||| [class]	count=2
arg	two-tuple of ||| group	count=1
function_arg	@param chatui the ||| init chatui	count=1
function	by l{unittest testcase} after ||| class cleanup	count=1
module	of any message ||| mail	count=1
function	with ||| get replacement	count=1
function	to request [function_2] ||| [function_2] [function_1]	count=8
function	dcc send ||| dcc do	count=1
arg	specific header ||| header	count=1
function	of bytes received ||| received	count=1
function	returns the user ||| get user	count=1
module	the outgoing response ||| web	count=1
arg	mainmod ||| mainmod	count=1
class	header ||| headers	count=1
function	[function_1] json ||| [function_2] [function_1]	count=1
function_arg	[function_1] a line ||| [arg_2] [function_1]	count=2
function	a quick and ||| and disconnect	count=3
arg	named ||| name	count=2
module_class	[module_1] [class_2] has been called or ||| [module_1] [class_2]	count=6
function	connection for the ||| connection for tls	count=2
function	hash of ||| key hash	count=1
function	tls ||| tls	count=2
function	enable ||| enable remote	count=2
function_arg	chunk [arg_2] ||| [arg_2] [function_1]	count=3
module_class	the [class_2] ||| [module_1] oscar [class_2]	count=1
module	this will be ||| internet	count=2
class	the [class] as the ||| pbserver [class]	count=1
arg	constructs ||| jid	count=1
function	a trust root ||| trust root	count=1
function	mode - interpret ||| mode	count=1
module	modification time mdtm the ||| protocols	count=1
arg	to the c{objects} ||| strings	count=1
function	the timeout value set ||| timeout	count=1
function	a msg_userauth_success the ||| userauth success	count=1
function	running state ||| running	count=1
arg	message to a user ||| user message length	count=1
class	to encode and ||| banana	count=1
function	to figure out how ||| using	count=1
function_arg	[function_1] a child ||| [arg_2] [function_1]	count=1
class	execute the [class] in ||| [class]	count=1
function_arg	[function_1] publisher i'll ||| [arg_2] [function_1]	count=1
class	protocol on ||| protocol	count=2
function	poll the ||| do poll	count=2
arg	string into ||| s	count=1
arg	creator the l{_isshconnectioncreator} provider ||| creator	count=1
function	character ||| character	count=1
class	idle one or ||| team	count=1
module	msg_userauth_passwd_changereq the ||| conch	count=1
arg	0 or 1 ||| numok	count=1
arg	parent ||| obj recurse parent	count=1
arg	related to c{applicationobject}, ||| applicationobject	count=1
module_class	iteration and [class_2] ||| [module_1] [class_2]	count=2
module	if the ||| conch	count=6
function	called when [function_2] ||| [function_2] [function_1]	count=6
function	all pending requests for ||| connect waiters	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] log [arg_2]	count=1
class	@param ||| file log observer	count=1
module	public key given by ||| ssh	count=1
arg	stanza from another stanza ||| stanza stanzatype	count=1
class	box ||| box dispatcher	count=2
function	group [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] a numeric ||| [function_1] port factory backlog [arg_2]	count=1
class	indicate that ||| transport	count=1
arg	c{query} possibly more than ||| lastsequenceid	count=1
module	all processes ||| mail	count=1
class	random value ||| digest credential	count=1
module_class	[module_1] contacts ||| [module_1] [class_2]	count=8
function	register to ||| register	count=6
function	partial xml ||| to xml	count=1
function	api with ||| get replacement string	count=1
arg	containing the host ||| host	count=1
module	match [module] string ||| [module]	count=1
arg	connects a given ||| address protocol maxpacketsize mode	count=1
function	this group ||| group	count=2
function	have been ||| setitem	count=1
class	the date has changed ||| log	count=1
class	when l{httpchannel} has ||| ideprecated httpchannel to request	count=1
function	deliver any buffered data ||| deliver body deferred close	count=1
function	and recreate the volatile ||| setstate	count=1
arg	encrypted communication ||| contextfactory tls	count=1
function	validate the address for ||| validate	count=2
arg	creator the ||| creator	count=1
function_arg	[function_1] mapping ||| [function_1] name strings [arg_2]	count=1
class	the ||| python	count=1
function	use the endpoint factory ||| endpoint factory	count=1
function	combined log formatted log ||| log formatter	count=1
class	user is conversing ||| conversation	count=1
arg	an l{imessagepart} provider ||| attrs	count=1
function	resolution has ||| resolution complete	count=1
function	select a character ||| select character	count=2
function	run a ||| run	count=1
function	and call it ||| handle	count=1
function	existing beacon information ||| beacon information	count=1
module	random ||| cred	count=1
module	move to [module] c{'connection_lost'} ||| [module]	count=1
arg	a broker and a ||| broker	count=1
module	is msg_userauth_passwd_changereq the ||| conch ssh	count=1
class	observer will forward ||| log observer	count=1
class	[class] to ||| [class]	count=1
function	user to consider ||| replacement	count=1
function	the ancillary data ||| ancillary	count=1
class	string into this charstr ||| charstr	count=1
module	authentication ||| words protocols	count=1
function	body has been ||| body data received deferred close	count=1
arg	deferred after a timeout ||| deferred	count=1
arg	beginning of c{query} ||| msgid msg lastsequenceid	count=1
function	or the global reactor ||| maybe global reactor	count=1
function_arg	single test [arg_2] ||| [arg_2] [function_1]	count=2
function	an c{eval}-able representation that ||| repr	count=1
function	l{servicemanager}, using ||| build service	count=1
arg	[arg_1] an oscaruser ||| [arg_1] message [arg_2]	count=2
function	from the ||| from floats	count=1
class	received on ||| receiver	count=1
arg	serialize ||| prefixesinscope	count=1
class	web context factory in ||| to current policy	count=1
module_class	[module_1] request ||| [module_1] [class_2]	count=15
function	a domain is ||| domain	count=1
function	enable this ||| enable remote	count=2
function	will ||| will	count=1
function	log levels to the ||| log levels	count=1
function	[function] format into ||| fix [function]	count=1
class	new l{dnsdatagramprotocol} instance ||| resolver	count=1
arg	a file @type file ||| file consumer	count=1
function	message ||| show message	count=1
function	a ecdh [function_2] ||| [function_2] [function_1]	count=2
class	a zippath by ||| zip map	count=1
function_arg	from a [arg_2] ||| [function_1] string [arg_2]	count=1
arg	response to a ||| name	count=1
arg	fp ||| fp name finalname	count=1
arg	change [arg_2] ||| [arg_1] [arg_2]	count=2
function	of message along ||| eom received	count=1
arg	@param environ a dictionary-like ||| cls environ	count=1
function_arg	an [arg_2] ||| [arg_2] [function_1]	count=4
function	opaque ||| opaque	count=1
module	and parse the ||| web	count=1
module	with this ||| im	count=2
function	subnegotiations for which no ||| unhandled subnegotiation	count=1
arg	host a hostname ||| host port	count=1
arg	new instance using ||| cls	count=1
function	an exception [function_2] ||| [function_2] [function_1]	count=4
class	return ||| delivery factory	count=1
function	running on ||| get deprecated	count=1
module	an l{ipv4address} ||| internet	count=1
module	the encryption has been ||| conch	count=1
class	ssh server and ||| sshcommand client	count=1
function	fetchgroup() action ||| group	count=1
module	called when ||| words	count=1
function	callbacks for the current ||| callbacks	count=1
module	connection has ||| jabber	count=1
class	this lock ||| filesystem lock	count=1
function	the file number ||| fileno	count=1
function	provider ||| stop process	count=1
function	unregister a producer with ||| unregister producer	count=1
function	then run ||| run	count=1
function	a database connection and ||| connection	count=1
function_arg	[function_1] fp ||| [arg_2] [function_1]	count=4
class	is necessary ||| assert raises	count=1
function	[function] format ||| fix [function]	count=1
class	syspath and ||| path	count=1
arg	[arg] or ||| [arg]	count=3
function	sentence ||| sentence	count=3
function	all [function] are ||| collect [function]	count=1
function	flow ||| flow	count=1
function	the response to ||| response from message	count=2
function	handler for ||| handler	count=1
function	authentication chain ||| auth	count=1
function	domain [function] ||| [function]	count=3
class	handle user [class_2] ||| [class_2] [class_1]	count=1
arg	maps fully ||| uri	count=1
arg	given path this ||| path	count=1
function	configure a service for ||| service	count=1
module	the response for ||| web	count=1
module_class	[module_1] connection still ||| [module_1] [class_2]	count=3
function	i{content-type} parameters unquoted ||| unquoted	count=1
function	an iterator over ||| iterkeys	count=1
arg	a non-filled-out cached ||| cid	count=1
function	the given header ||| header received	count=1
function	a trailing slash ||| slash	count=1
class	'message' in ||| tree	count=1
function	an inverse query ||| inverse query	count=2
function	end of ||| end	count=2
arg	given its name returning ||| name default	count=1
arg	protocolfactory a callable which ||| protocolfactory	count=1
function	an unexpected [function_2] ||| [function_1] [function_2]	count=4
arg	a l{localworkeramp} instance ||| testcases cooperate	count=1
module	to get the connection ||| conch	count=1
function_arg	select a mailbox ||| select mailbox	count=2
function_arg	decode a filename ||| decode k	count=1
class	protocol by invoking l{iboxreceiver ||| protocol	count=1
arg	work on ||| work	count=1
module_class	[module_1] peer should ||| [module_1] [class_2]	count=6
arg	port ||| port	count=9
function	xml ||| to xml	count=1
class	address [class] address ||| record [class]	count=1
function	specific section ||| fetch specific	count=1
function_arg	format a [arg_2] ||| [arg_2] [function_1]	count=1
arg	the comparison of the ||| other	count=1
module	over the ||| mail	count=2
module	called ||| words	count=5
function	determine the size of ||| size	count=1
arg	request a specific header ||| header	count=1
function	handler ||| handler	count=3
function	response headers ||| response headers	count=1
function	an unused directory named ||| unused test directory	count=1
function	get a string ||| get	count=1
function	compute the string ||| compute	count=1
function	the flags ||| flags	count=3
function	has parsed a complete ||| finish	count=1
function	application-level [function] which becomes ||| [function]	count=1
function	abort the [function_2] ||| [function_2] [function_1]	count=1
arg	reactor a provider of ||| reactor	count=1
class	instance ||| irequest	count=1
class	constructor l{run} will treat ||| synchronous test	count=1
arg	me with [arg_2] ||| [arg_2] [arg_1]	count=4
function	[function_1] all ||| [function_1] [function_2] identities data	count=1
function	make ||| make producer	count=1
class	l{stream [class] endpoint ||| [class]	count=1
arg	for a message which ||| message	count=1
arg	a _switchbox ||| innerproto	count=1
function_arg	query [arg_2] ||| [function_1] [arg_2]	count=2
module	called to handle the ||| conch	count=1
arg	c{message} (a l{message} ||| cls message	count=1
function	a ||| generate	count=2
function	[function_1] set ||| [function_2] [function_1]	count=4
function	handshake of the tls ||| tls	count=1
function	to match ||| match	count=1
function	the key ||| key	count=1
function	[function_1] cookie ||| [function_2] [function_1]	count=1
function	exponential backoff interval ||| backoff	count=1
function	of shell code representing ||| shell code	count=1
function	signed data ||| signed data	count=1
class	messages via ||| box dispatcher	count=1
class	the underlying ||| public	count=1
class	date ||| daily log	count=1
class	information that could be ||| file	count=1
function	expiration tracking ||| checking expiration	count=2
function	[function_1] tracking ||| [function_2] [function_1]	count=2
function_arg	permissions to [arg_2] ||| [function_1] uid gid spath [arg_2]	count=1
function	and call ||| handle	count=1
class	service ||| realm	count=1
function	with a database ||| run with	count=1
function	[function] are emitted ||| collect [function]	count=1
arg	class object c{classobj}, ||| classobj	count=1
arg	c{query} possibly more ||| msg lastsequenceid	count=1
function_arg	[function_1] accountname ||| [arg_2] [function_1]	count=4
class	c{self headers} ||| httpparser	count=1
module	called when ||| conch insults	count=1
function	the number [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] be importable ||| [function_1] [arg_2]	count=2
module	for the ||| web	count=2
arg	[arg] represents ||| [arg]	count=1
arg	given protocol factory to ||| factory	count=1
arg	[arg_1] [arg_2] ||| [arg_1] channel [arg_2]	count=7
arg	addresses ||| addresses	count=2
module	property of ||| python	count=2
function_arg	reactor method c{name} ||| reactor method name	count=1
class	results ||| ireporter	count=1
arg	for a [arg_2] ||| [arg_2] [arg_1]	count=1
function	of a given port ||| port	count=1
function_arg	[function_1] chatui ||| [function_1] [arg_2]	count=2
function	an encoder if applicable ||| encoder	count=1
arg	file any file-like ||| file consumer	count=1
function	maildir ||| maildir	count=1
module_class	[module_1] other side ||| [module_1] [class_2]	count=8
function	dcc resume request to ||| dcc resume	count=1
function	with the ||| with	count=3
class	deferred has been ||| queue	count=1
module	constructs a ||| words	count=1
function	a complete ||| finish	count=1
function	[function_1] l{ipv6address} indicating ||| [function_2] [function_1]	count=1
function_arg	[function_1] response ||| [arg_2] [function_1]	count=1
class	the connection retry ||| client machine	count=1
module	object from modules instance ||| trial	count=1
function	an c{eval}-able representation ||| repr	count=1
module	which the message ||| mail	count=1
function	specific ||| specific	count=1
function	pipe ||| pipe behavior	count=1
function	a user ||| irc	count=2
function	last access ||| access	count=1
function	a request to a ||| request	count=1
function	'key' or return ||| get	count=1
arg	return a c{newpath} ||| newpath encoding	count=1
arg	value constants ||| level	count=1
arg	a string ||| string	count=1
function	provider of that interface ||| for interface	count=1
function	our c{self _wrappedfactory} or ||| build protocol	count=1
class	time ||| fixed offset time	count=1
function	protocol [function] ||| [function]	count=3
function_arg	@param hints a ||| init hints	count=1
module	format ||| names	count=1
function	[function_1] object from ||| [function_1] [function_2]	count=2
arg	function ||| callable	count=1
arg	strings ||| strings	count=1
function	since last ||| should	count=1
module_class	[module_1] body ||| [module_1] [class_2]	count=1
class	[class_1] what protocol ||| [class_1] [class_2]	count=1
module	failure's type is ||| python	count=1
function	a new instance of ||| new instance	count=1
class	file ||| file path	count=13
function	pwd module ||| pwd	count=1
function	check the state ||| check state	count=3
class	checks what protocol ||| protocol	count=1
function	user gets a notice ||| notice	count=1
function	spwd ||| shadow	count=1
module	to the secure shell ||| conch	count=1
function	key for ||| flat key	count=1
function	namespace ||| namespace	count=1
arg	address ||| ip port	count=1
function	stop performing the given ||| wont	count=1
function	poll the ||| poll	count=2
function_arg	the producer will [function_1] [arg_2] calling this method ||| [function_1] [arg_2]	count=1
module	authenticate ||| conch client	count=1
class	box ignoring l{protocolswitched} and ||| box	count=1
class	unique across all calls ||| name generator	count=1
function	disconnect callbacks ||| dont notify on disconnect	count=1
function_arg	[function_1] text ||| [arg_2] [function_1]	count=4
function	create a new l{privatecertificate} ||| new	count=1
module	jabber ||| protocols jabber	count=1
arg	the modes on a ||| modes limit	count=1
function	for writing ||| for writing	count=2
function	the [function] is the ||| private [function]	count=1
class	use as ||| credential factory	count=1
function	write side ||| write	count=1
arg	[arg_1] writers ||| [arg_2] [arg_1]	count=1
class	get ||| resolver	count=1
arg	the domain to connect ||| reactor service domain factory	count=1
arg	an undeliverable email ||| failedfrom failedto transcript	count=1
module	a terminal ||| insults	count=1
function	resolution ||| resolution	count=1
function_arg	decoded from [arg_2] ||| [function_1] box [arg_2]	count=1
function	response to a ||| response from	count=3
function	load absolutely anything (as ||| load	count=1
arg	datagram ||| datagram address	count=1
module	in ||| mail	count=10
class	from this protocol by ||| protocol	count=1
function	[function_1] resume request ||| [function_1] [function_2]	count=7
module	in the list ||| conch	count=1
arg	to c{applicationobject}, ||| applicationobject	count=1
function_arg	elements [arg_2] ||| [arg_2] [function_1]	count=6
function	unsupported ||| unsupported	count=1
class	encode and ||| banana	count=1
function	execute a [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] [arg_2] reason	count=1
function	[function_1] this ||| [function_2] [function_1]	count=4
function_arg	[function_1] [arg_2] ||| [function_1] stat response [arg_2]	count=3
function	a fragment of shell ||| shell	count=1
function	serial number ||| serial number	count=1
function	a connection to ||| connection	count=2
function	a dcc [function_2] ||| [function_1] do accept [function_2]	count=4
function	return the system-defined home ||| get home	count=1
module_class	[module_1] angle ||| [module_1] [class_2]	count=6
function	[function] response ||| [function] data to	count=1
arg	a channel ||| channel kicker message	count=2
class	in addition to the ||| ibody producer	count=1
arg	the relay ||| relay	count=1
module	message-digest algorithm in the ||| conch ssh	count=1
function	warnings which ||| warnings	count=1
arg	at the given ||| format	count=1
arg	and end ||| end	count=1
module	and for the ||| web	count=1
function	generate an [function_2] ||| [function_2] [function_1]	count=3
arg	c{applicationobject}, which may ||| applicationobject	count=1
class	command ||| command	count=3
arg	[arg_1] from the ||| [arg_2] [arg_1]	count=6
class	message as ||| mailbox append message task	count=1
function	[function_1] responding ||| [function_2] to bad request [function_1]	count=1
function_arg	run [arg_2] ||| [function_1] with patches [arg_2]	count=1
function	string formatting ||| string	count=1
arg	client protocol to a ||| factory timeout checkpid	count=1
function_arg	[function_1] c{name} the ||| [arg_2] [function_1]	count=2
function	l{ipv6address} indicating the ||| host	count=1
function_arg	a file containing ||| file filename	count=2
function_arg	[function_1] with ||| [arg_2] [function_1]	count=3
arg	to a query checking ||| query	count=1
arg	using ||| cls box	count=1
function	to indicate the connection ||| connection	count=1
class	my process's stdin ||| process	count=1
function	instance of ||| instance	count=1
function	state ||| state	count=15
function_arg	[function_1] given response ||| [function_1] [arg_2]	count=1
function	the child process ||| process	count=3
function	human-readable text for ||| text	count=1
function	for a hemisphere ||| hemisphere	count=1
class	new protocol you ||| box protocol	count=1
function	a received chunk ||| chunk	count=1
function	[function] as deprecated ||| deprecate [function]	count=3
module	part are [module] following ||| [module]	count=1
function	attribute name on the ||| name	count=1
function	connection over the underlying ||| connection	count=1
arg	given offset and ||| offset	count=1
function	prepare the c{self extensions} ||| prepare extensions	count=1
function	[function_1] source line ||| [function_2] [function_1]	count=3
module	and ||| trial	count=1
function	[function] of ||| list static [function]	count=1
module	the cursor ||| conch insults	count=2
function	[function_1] context object ||| [function_2] [function_1]	count=1
module	to provide a unique ||| internet	count=1
class	specified l{methodname} method of ||| method	count=1
function	unjelly set ||| unjelly set	count=2
function	user id of the ||| get user id	count=1
function	anonymous ||| anonymous authentication	count=2
function	pipe ||| broken pipe	count=1
arg	user to [arg_2] ||| [arg_1] [arg_2]	count=1
arg	is ||| protocol address	count=2
arg	c{objects} ||| strings	count=1
class	to be unique across ||| maildir	count=1
function	[function_1] in a ||| [function_2] [function_1]	count=4
function	returns a [function_2] ||| [function_1] [function_2]	count=3
class	boxreceived on this l{boxdispatcher} ||| box dispatcher	count=1
class	message while it is ||| message	count=1
function	write side of a ||| write	count=1
arg	number of local ||| number	count=1
function	to run [function_2] ||| [function_2] [function_1]	count=3
module_class	the filepath's ||| protocols ftpanonymous shell	count=2
arg	a user to me ||| user	count=1
arg	mapping strings to string ||| strings objects proto	count=1
function	msg_userauth_success the server ||| userauth success	count=1
function	[function_1] early termination ||| [function_2] [function_1]	count=4
function	the presence of a ||| has key	count=1
function	response code and response ||| response	count=1
function	channel ||| ssh channel	count=3
function	log ||| wrapped log	count=1
function	of all keys found ||| request identities	count=1
class	a new ||| resolver	count=1
function	finish setting up ||| finish port setup	count=1
class	log file ||| log	count=2
class	given configuration ||| unix app logger	count=1
module	all ||| mail	count=2
function	[function_1] [function_2] e g traditional ||| [function_1] [function_2]	count=2
function	message ||| get message	count=3
class	c{original} attribute for proxyforinterface ||| proxied class	count=1
function	in a list response ||| list	count=1
function	lookup user information about ||| lookup	count=1
arg	article to ||| article	count=1
class	domain ||| domain	count=4
arg	mac ||| mac	count=1
function	[function_1] [function_2] ||| [function_1] checking [function_2]	count=1
module_class	[module_1] c{usegtk} flag ||| [module_1] [class_2]	count=8
function	name on ||| name	count=1
function	[function_1] the docstring ||| [function_2] [function_1]	count=2
function	as a dictionary ||| data	count=1
module	the remaining ||| conch	count=1
function	system-defined home directory ||| home directory	count=1
arg	specified text to the ||| text	count=1
arg	the method ||| method	count=1
class	deferred has been canceled ||| deferred	count=1
class	by l{ireactorinthreads callinthread} ||| ireactor threads	count=1
function	stream's flow [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] message ||| [function_1] group [function_2]	count=1
function	the ||| wont	count=1
module	forward local port to ||| conch scripts	count=1
arg	a start and end ||| start end	count=1
module	exception when that ||| trial	count=1
function	an 'ls' [function] ||| ls [function]	count=3
class	representations ||| janitor	count=1
class	response to a head ||| httpclient	count=1
function	c{path} as a ||| as	count=1
arg	parse a line of ||| line	count=1
arg	domain to connect ||| service domain factory	count=1
arg	[arg_1] failed and ||| [arg_2] [arg_1]	count=1
function	return the ||| get description	count=1
function	send [function_2] ||| [function_1] group [function_2]	count=3
class	of this message ||| multipart message	count=1
function_arg	a chunk [arg_2] ||| [function_1] [arg_2]	count=2
arg	have this connector connect ||| connector	count=1
function	l{cooperativetask} which drives that ||| producing	count=1
function	create a message receiver ||| create	count=1
function	symlink ||| link	count=1
module	look up the ||| web	count=1
arg	group over ||| group	count=1
class	file ||| dcc file	count=1
arg	query ||| query	count=8
class	string for a message ||| domain delivery base	count=1
function	the presence ||| has key	count=1
class	as the ||| credential factory	count=1
function_arg	[function_1] the physical ||| [arg_2] [function_1]	count=1
function_arg	the parent [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] conversation ||| [function_1] [function_2]	count=1
module_class	at this [class_2] ||| [module_1] [class_2]	count=10
function	login ||| queue login	count=1
function	objects ||| itervalues	count=1
arg	a channel this should ||| channel	count=1
function	fix [function_2] ||| [function_2] [function_1]	count=4
module	[module] enters binary ||| [module]	count=3
function	reverse the ||| reverse	count=1
class	to be ||| name generator	count=1
arg	to [arg] elements filling ||| [arg]	count=1
arg	deferred after ||| deferred	count=1
function_arg	[function_1] command ||| [function_1] [arg_2]	count=3
function	producer with ||| producer	count=1
class	test ||| synchronous test	count=2
module	the remote buffer ||| conch	count=1
class	implement this ||| remote	count=1
module_class	[module_1] [class_2] buffer ||| [module_1] [class_2]	count=4
function	like a package ||| is package	count=1
class	string ||| maildir name	count=1
function	been received ||| received	count=4
function	client and ||| and	count=1
module_class	to the writer ||| mail iterator	count=1
arg	buffer some ||| data	count=1
function	[function_1] a sibling ||| [function_2] [function_1]	count=1
function	a pre-built l{servicemanager}, ||| service	count=1
arg	message is ||| message protocol	count=2
function	[function_1] data ||| [function_1] [function_2]	count=11
module	string which ||| mail	count=1
arg	the comparison defined ||| other	count=1
function	[function_1] bio ||| [function_2] [function_1]	count=4
class	is unconnected from a ||| iprotocol factory	count=1
function	has been received ||| received	count=8
function	open ||| open for reading	count=2
arg	modes on a ||| modes limit	count=1
module_class	[module_1] digest ||| [module_1] [class_2]	count=1
module	from [module_2] ||| [module_1] [module_2]	count=1
class	unregister ||| asyncio selector reactor	count=1
arg	[arg_1] client ||| [arg_1] [arg_2]	count=6
class	changed since ||| daily	count=1
class	including ||| to	count=1
function_arg	for [arg_2] ||| [arg_2] [function_1]	count=5
class	existing ||| mem cache	count=1
class	server response minus ||| server error response	count=1
function	number of ||| with count	count=1
function_arg	permissions [arg_2] ||| [arg_2] [function_1]	count=2
class	win32 event ||| win32reactor	count=1
function	charset of search command ||| charset	count=1
class	this is a port ||| port	count=1
module	for the ||| conch ssh	count=1
module	xml ||| words protocols jabber	count=1
function_arg	[function_1] @param prefixes ||| [arg_2] [function_1]	count=3
function	close the [function_2] ||| [function_2] [function_1]	count=2
function	to build a ||| build failure	count=1
arg	look up and ||| portonserver portonclient	count=1
function	root object of ||| root object	count=1
arg	@type address [arg] @param address ||| address [arg]	count=2
module	to consider ||| python	count=1
arg	call this method to ||| to	count=1
function_arg	that will [arg_2] ||| [arg_2] [function_1]	count=2
module	given ||| ui	count=1
arg	[arg_1] path ||| [arg_2] [arg_1]	count=10
class	log file for ||| log	count=1
arg	whatever tests ||| thing recurse	count=1
function	we receive a msg_service_accept ||| ssh service accept	count=1
class	[class_1] redirection ||| [class_1] [class_2]	count=3
function	parse of an ||| parse	count=1
arg	schedule function to ||| f	count=1
arg	string into a ||| s	count=1
function	from request until the ||| received	count=1
function_arg	[function_1] packet ||| [function_1] [arg_2]	count=1
arg	this person ||| text metadata	count=1
function	failure result ||| failure result	count=2
module	forward local port ||| scripts	count=1
class	of [class] ||| [class]	count=1
arg	schedule function ||| f	count=1
arg	a unique id ||| site uid	count=1
module	set the ||| python	count=1
function	an event [function_1] [function_2] e g traditional ||| event [function_1] classic log [function_2] event formattime	count=2
function	handle a 'form feed' ||| handle	count=1
arg	transport and a ||| transport	count=1
arg	file ||| filename	count=1
arg	spawn an ||| executable args environment	count=1
function	[function_1] header ||| [function_2] [function_1]	count=10
function	stop ||| stop service	count=1
function	the number of hard ||| number of hard	count=1
function	into [function_2] ||| [function_1] [function_2]	count=1
function	user id ||| user id	count=1
arg	status and [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	[module_1] run ||| [module_1] [class_2]	count=6
function	[function_1] detailed locals ||| [function_2] [function_1]	count=4
module	public ||| ssh	count=2
arg	authorities ||| authorities	count=1
function	path to [function_2] ||| [function_2] [function_1]	count=2
module	string representation of ||| mail	count=4
function	resume processing ||| resume	count=1
module	when we ||| conch ssh	count=2
function_arg	[function_1] with mode ||| [arg_2] [function_1]	count=1
function	of human-readable text ||| text	count=1
function_arg	[function_1] and was ||| [arg_2] [function_1]	count=1
function	get registration [function_2] ||| [function_1] [function_2]	count=2
function	return the likely uid ||| get uidnext	count=1
function	share ||| ssh kex dh gex	count=1
function	quick and dirty ||| and	count=3
function	type may be ||| type	count=1
class	has a valid file ||| ifile	count=1
module	instance from ||| names	count=1
class	[class_1] existing c{key} ||| [class_2] [class_1]	count=2
function	the time at which ||| time	count=1
class	connection ||| terminal protocol	count=1
module_class	@return boolean indicating whether [module_1] [class_2] not ||| [module_1] [class_2] is known	count=2
function	[function_1] options to ||| [function_2] [function_1]	count=2
class	transport ||| h2connection	count=2
function	referring [function_2] ||| [function_1] [function_2]	count=1
function_arg	add a [arg_2] ||| [arg_2] [function_1]	count=2
class	provider which will be ||| endpoint	count=1
function	[function_1] to register ||| [function_2] [function_1]	count=2
function	iterator over ||| iter	count=1
function	return a ||| get handle	count=2
function	and return a suitable ||| get	count=1
function	set our service ||| set	count=1
class	data represents a valid ||| netstring	count=1
arg	@param credentials [arg_2] ||| [arg_1] [arg_2]	count=3
class	scheduling steps ||| cooperator	count=1
function	[function_1] sibling ||| [function_2] [function_1]	count=1
arg	message on a ||| ancillary flags	count=1
function	parse common ||| parse	count=1
class	for ||| dispatcher	count=1
function	degrees [function_2] ||| [function_1] [function_2]	count=2
class	return ||| process writer	count=1
class	of this certificate ||| base	count=1
function_arg	[function_1] port ||| [arg_2] [function_1]	count=3
function	build ||| build	count=4
class	in c{self headers} ||| httpparser	count=1
function	[function_1] stream server ||| [function_1] [function_2]	count=1
function_arg	[function_1] this broker ||| [function_1] [arg_2]	count=1
function	the endpoint ||| endpoint	count=1
function	returns a deferred that ||| output	count=1
class	the token ||| semaphore	count=1
function	the date internally ||| get internal date	count=2
arg	a line ||| line	count=3
function	[function_1] [function_2] for ||| [function_1] [function_2]	count=8
function	mapping adding ||| mapping	count=1
function	[function_1] a stream ||| [function_1] [function_2]	count=4
arg	[arg] this command ||| [arg]	count=1
module_class	the other side ||| conch ssh sshconnection	count=4
function	remote ||| remote	count=5
arg	[arg_1] numeric ||| [arg_2] [arg_1]	count=1
function	with a ||| get	count=1
arg	for one or more ||| uid	count=2
function	warning [function_2] ||| [function_1] [function_2]	count=4
function	convert ||| filename to	count=1
function	all pending timed calls ||| until current	count=1
module	of itself with the ||| web	count=1
class	any and log out ||| base	count=1
arg	from the [arg_2] ||| [arg_1] domain [arg_2]	count=1
class	changed since ||| log	count=1
function	next public [function_2] ||| [function_1] [function_2]	count=3
class	sending ||| dispatcher	count=1
function	execute [function_2] ||| [function_2] [function_1]	count=2
function	local address ||| host	count=1
function	a hash of the ||| hash	count=1
function	discard ||| sync	count=1
function	of responding [function_2] ||| [function_1] [function_2]	count=3
module	the types ||| conch	count=1
arg	returned to ||| nonce clientip	count=1
function	to file ||| file	count=1
function	domain is ||| domain	count=1
function	retrieve the serial ||| serial	count=1
class	message in the mailbox ||| mailbox	count=2
function	rotate when ||| should rotate	count=2
function_arg	string representation ||| to string type	count=1
module	exhorting ||| python	count=1
arg	a given ||| protocol message address	count=1
function	[function_1] secondary ||| [function_1] [function_2]	count=1
function	[function_1] handle ||| [function_1] [function_2]	count=2
function_arg	a channel [arg_2] ||| [function_1] request [arg_2]	count=1
function	thread from ||| defer to thread	count=1
class	a zippath by ||| zip	count=1
function	data that ||| data	count=1
function_arg	send a [arg_2] ||| [arg_2] [function_1]	count=21
function	local object ||| local object	count=2
function	begin logging to the ||| start logging	count=1
module	the clients ||| conch	count=1
module_class	jabber id [class_2] ||| [module_1] [class_2]	count=3
function	workers as expressed ||| waiters	count=1
class	[class] is ||| attempt [class]	count=1
function	this for when raw ||| raw	count=1
class	function across all ||| name	count=1
function	a msg_kex_dh_gex_request message ||| kex dh gex request	count=1
function	l{bucket} corresponding to the ||| bucket	count=1
function	as a string ||| as	count=1
function	envelope this ||| sent mail	count=1
arg	socket ||| socket data	count=1
function	received either deliver them ||| data received	count=1
function	identity ||| identity	count=1
arg	the given [arg] sent by ||| sender recipient [arg]	count=1
function	a pre-built ||| manager	count=1
arg	the host ||| host	count=1
arg	and ||| cls	count=2
module_class	number of non ||| python random factory	count=1
function	send ||| send udp	count=1
class	address ||| iudptransport	count=1
function	[function_1] requests ||| [function_1] [function_2]	count=10
function	bytes ||| bytes	count=4
class	[class_1] and log ||| [class_1] [class_2]	count=1
function	parse ||| parse server	count=1
function	twisted deprecation ||| deprecated	count=1
function	generate an [function_2] ||| [function_1] [function_2]	count=3
function	load the value ||| load	count=1
function	the process ends ||| process ended	count=1
function	[function] so re-add ||| [function]	count=1
function	build [function_2] ||| [function_1] [function_2]	count=2
module	sent to the server ||| conch ssh	count=1
function	[function_1] levels to ||| [function_2] [function_1]	count=1
class	process instance to connect ||| process	count=1
arg	and return ||| cls	count=1
function	[function_1] the time ||| [function_1] access [function_2]	count=1
function	failure that represents the ||| failure	count=1
module	the underlying ||| internet	count=1
class	for use as the ||| credential	count=1
class	calls to ||| name generator	count=1
function	event object ||| event	count=1
class	has changed since ||| daily	count=1
function	with a list ||| get deprecated	count=1
function_arg	stream window [arg_2] ||| [function_1] [arg_2]	count=1
module	setup ||| jabber	count=1
function	the string size of ||| size	count=1
module	wire [module] saving ||| [module]	count=1
function	client parameters ||| parse client	count=4
function	[function_1] of hard ||| [function_1] [function_2]	count=3
class	select and setup ||| saslinitiating	count=1
function	string ends in a ||| ends in	count=1
class	message as it ||| message	count=1
function	be passed [function] ||| [function]	count=1
function	api with some ||| get replacement string	count=1
function	this is msg_userauth_info_response the ||| ssh userauth pk ok keyboard interactive	count=1
class	and arrange ||| resolver	count=1
arg	given name [arg_2] ||| [arg_1] [arg_2]	count=2
arg	stanza ||| stanza	count=1
class	run but before c{teardown} ||| synchronous	count=1
function	success to ||| success	count=1
module	content-length in the ||| web	count=1
function	user id of ||| get user id	count=2
function	of busy workers ||| working	count=1
function	render a request ||| render	count=1
function	comment ||| comment	count=1
function	a positive ||| success	count=1
function	the endpoint [function_2] ||| [function_1] [function_2]	count=2
module	a pre-built l{servicemanager}, ||| words protocols	count=1
class	etc ||| name generator	count=1
module	and the ||| python	count=1
class	of the file ||| dcc file	count=1
function	a [function] server response ||| [function]	count=1
function_arg	method c{name} ||| method name	count=1
function	initialization [function_2] ||| [function_2] [function_1]	count=1
module	[module] window ||| [module]	count=1
function	[function_1] queue or ||| [function_1] [function_2]	count=3
function	device ||| get device	count=1
class	by this l{istreamclientendpoint} ||| client	count=1
function	of the ||| key	count=1
function	global reactor ||| global reactor	count=1
arg	given by c{blob} ||| blob data	count=1
function_arg	[function_1] [arg_2] with the specified c{nodeid} ||| [function_1] [arg_2]	count=8
function	a connection ||| connection	count=14
function	standard format for an ||| for	count=1
function_arg	[function_1] user a ||| [arg_2] [function_1]	count=1
function	thread ||| thread	count=6
arg	an error that occurred ||| error	count=1
function	decimal ||| decimal	count=2
function	exit a context ||| exit	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to datetime [arg_2]	count=8
function	suitable for joining to ||| to filesystem	count=1
module	from [module_2] ||| [module_2] [module_1]	count=1
function	and puts method names ||| add method names	count=1
class	test is ||| synchronous test case	count=1
function	[function_1] the uid ||| [function_1] [function_2]	count=1
function	and send [function_2] ||| [function_1] [function_2]	count=1
class	all calls ||| name generator	count=1
class	server ||| server	count=3
module_class	readers and writers ||| internet ireactor fdset	count=1
function	the new-style ||| new style	count=2
function	spwd module ||| shadow get by name	count=1
class	called every time ||| iprotocol	count=1
class	the path in ||| path	count=1
function	l{bucket} corresponding ||| get bucket for	count=1
function	[function_1] twisted version ||| [function_2] [function_1]	count=1
module	and setup authentication ||| words protocols	count=1
class	unique across ||| maildir	count=1
function	the connection is started ||| connection made	count=1
function_arg	with daemon [arg_2] ||| [arg_2] [function_1]	count=4
function	cache [function_2] ||| [function_2] [function_1]	count=1
class	helpful log message when ||| amp	count=1
function	any application-level [function] which ||| [function]	count=1
arg	[arg] run whatever ||| [arg]	count=1
module	the associated connection ||| web	count=1
function	stream ||| stream	count=11
arg	given [arg] ||| sender recipient [arg]	count=2
function	of the elements which ||| elements	count=1
function	pass a received ||| received	count=3
arg	channel there ||| channel	count=1
class	unparsed ||| unparsed	count=1
class	param [class] intervals ||| [class]	count=1
function	l{h2stream} objects [function] response ||| [function] data to	count=1
arg	to record deprecation warnings ||| newmethod	count=1
class	of the underlying pkey ||| public key	count=1
function	processes ||| processes	count=1
function	[function_1] lost ||| [function_1] [function_2]	count=3
function	imported ||| imported	count=1
function	[function_1] [function_2] of ||| [function_2] [function_1]	count=6
module	visible satellite information from ||| positioning	count=1
function	to a [function_2] ||| [function_1] [function_2]	count=3
module	[module_1] given ||| [module_1] [module_2]	count=2
class	a zippath by looking ||| zip	count=1
function	for all registered ||| all	count=1
function	user for a password ||| auth password	count=1
arg	the domain to ||| reactor service domain factory	count=1
module	some polite text exhorting ||| python	count=1
function	mapping adding both the ||| mapping	count=1
class	the ||| digest	count=1
function	the number of ||| get number of	count=2
function	of frames ||| frames	count=1
function	for a deprecated api ||| get	count=1
class	failure ||| failure	count=2
class	[class_1] channel ||| [class_2] [class_1]	count=2
arg	if the error is ||| error	count=1
arg	failed and was ||| todo	count=1
class	if the test is ||| synchronous test	count=1
function_arg	a list of filepaths [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
arg	writers ||| writers	count=1
class	verify ||| command transport	count=1
module	create a random ||| cred	count=1
function	exists in the ||| exists	count=1
function_arg	method associated [arg_2] ||| [arg_2] [function_1]	count=1
function	receive a msg_disconnect message ||| disconnect	count=1
module	of old-style ||| python	count=2
function	hard ||| hard	count=1
class	was provided ||| invalid address	count=1
class	of a www-authenticate ||| credential factory	count=1
class	structure object ||| structure	count=2
class	[class_1] before c{teardown} ||| [class_2] [class_1]	count=1
function_arg	send extended [arg_2] ||| [function_1] data [arg_2] data	count=2
function_arg	[function_1] attributes ||| [arg_2] [function_1]	count=1
function	using the ||| service manager	count=1
function	authentication ||| eb	count=2
arg	l{command}'s argument schema ||| objects proto	count=1
function	c{message} ||| from message	count=1
module	at [module] a ||| [module]	count=1
function	to invoke when executing ||| responder	count=1
function	connection was in an ||| connection	count=1
function	with ||| with	count=6
function	iterator over all ||| iter	count=2
function	add a message to ||| append message	count=1
function	our [function] so ||| [function]	count=1
function	_wrappedfactory} or errback ||| build	count=1
function	start the application ||| post application	count=1
class	via amp ||| box dispatcher	count=1
class	the transport ||| transport	count=1
arg	string ||| jid	count=1
function_arg	[function_1] text to ||| [arg_2] [function_1]	count=4
module	the clients wants signed ||| conch ssh	count=1
function	workers ||| workers	count=1
function	version information and ||| opt version	count=1
class	and ||| looping call	count=1
function	print all ||| print	count=1
function_arg	[function_1] [arg_2] be a group ||| [function_1] [arg_2]	count=6
class	the suite ||| suite	count=1
class	context manager ||| assert raises context	count=2
function	escape a ||| escape	count=1
function_arg	ampbox [arg_2] ||| [function_1] name strings [arg_2]	count=1
function	get ||| get and	count=1
function	receive ||| receive	count=3
function	as a float ||| float	count=1
class	total ||| imessage imappart	count=2
arg	request and ||| request	count=1
function	return [function_2] ||| iencoding resource [function_1] [function_2]	count=3
arg	pathname of a message ||| message	count=1
function	class which ||| class	count=1
class	an infinite redirection exception ||| infinite redirection	count=1
class	challenge ||| digest credential factory	count=2
function	deprecated api with ||| get	count=1
function	same ||| eq	count=1
function_arg	start running [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] in the ||| [function_1] [function_2]	count=1
function	l{bucket} corresponding to ||| get bucket	count=1
function	one stat ||| stat	count=1
arg	a datagram ||| datagram address	count=1
class	next iteration and ||| looping	count=1
arg	set of observers ||| observers discardbuffer redirectstandardio	count=1
function	delete a mailbox ||| delete	count=1
module_class	[module_1] cprofile profiler ||| [module_1] [class_2]	count=2
function_arg	[function_1] mainmod ||| [function_1] [arg_2]	count=1
class	a plain-text [class] ||| plain [class]	count=3
function	and dirty [function_2] ||| [function_2] to bad request [function_1]	count=1
function	compute a log ||| wrapped log	count=1
function	[function_1] on ||| [function_2] [function_1]	count=1
function	mapping adding both the ||| level mapping	count=1
function	[function_1] closing ||| [function_1] [function_2]	count=1
arg	and run a command ||| command	count=1
function	in decimal degrees this ||| in decimal degrees	count=1
class	and ||| chat ui	count=2
function	polite ||| string	count=1
class	perform an mb record ||| iresolver	count=1
arg	the function c{f} with ||| f	count=1
function	text exhorting the ||| replacement string	count=1
function	of segments between ||| segments	count=1
arg	given a module ||| module	count=1
module	are [module] following ||| [module]	count=1
class	on this test ||| test	count=1
function	[function_1] filename ||| [function_2] [function_1]	count=3
function_arg	[function_1] user ||| [arg_2] [function_1]	count=7
class	moduledict in ||| path	count=1
function	[function_1] credentials ||| [function_2] [function_1]	count=4
function_arg	[function_1] overrides any ||| [function_1] [arg_2]	count=1
arg	flags of [arg_2] ||| [arg_1] [arg_2]	count=1
function	and ||| and	count=14
function	dump ||| dump	count=2
module_class	command is sent prepare [module_1] [class_2] tls but don't actually ||| [module_1] [class_2] tls do command	count=1
function	[function_1] os x ||| [function_2] [function_1]	count=2
arg	bytes and send ||| bytes	count=2
module	side has closed the ||| conch	count=1
class	[class_1] conversation ||| [class_1] [class_2]	count=12
module	any of ||| python	count=1
function	to write ||| write	count=2
class	message in the mailbox ||| string list mailbox	count=2
function	the serial number ||| serial number	count=1
module	the [module_2] ||| [module_1] [module_2]	count=22
function	[function_1] the topic ||| [function_2] [function_1]	count=2
arg	when failed to ||| reason	count=1
function	write a [function_2] ||| [function_1] [function_2]	count=3
class	the pop3 ||| pop3	count=1
class	a database [class] one ||| [class]	count=1
function	control [function_2] ||| [function_2] [function_1]	count=5
arg	as ||| test	count=1
arg	at a path ||| path	count=1
module	any ||| python	count=1
function	[function_1] handler for ||| [function_1] [function_2]	count=1
function	unjelly set using ||| unjelly set	count=2
module	[module_1] jabber server ||| [module_1] [module_2]	count=6
function	[function_1] processes ||| [function_2] [function_1]	count=1
module	key ||| ssh	count=1
arg	packet on ||| messagenum packet	count=1
function_arg	failure to [arg_2] ||| [arg_2] [function_1]	count=1
function	udp ||| udp	count=4
arg	file ||| filename kind	count=1
module	keys for the ||| conch	count=1
function	create and return a ||| get	count=1
arg	warnings [arg] invoking c{f} ||| [arg]	count=1
arg	the given instance ||| instance methodname	count=1
class	frame references [class_2] ||| [class_1] [class_2]	count=8
arg	in channel user ||| user channel	count=2
function_arg	window [arg_2] ||| [function_1] adjust [arg_2]	count=1
function	is ready ||| read	count=1
function	get a channel ||| ssh channel open	count=1
function	the source ||| source	count=1
function_arg	msg_service_accept [arg_2] ||| [arg_2] [function_1]	count=1
module	intended to ||| mail	count=1
function	[function_1] a stream ||| [function_2] [function_1]	count=4
arg	domain ||| service domain	count=1
class	attribute for proxyforinterface ||| proxied class	count=1
arg	name [arg] ||| name [arg]	count=3
function	connection is ||| connection	count=19
function	been ||| get	count=1
function	logging to a ||| start logging	count=1
function	l{bytes} [function] path ||| [function]	count=1
arg	a path within ||| path	count=1
function	a deprecated ||| get replacement	count=1
function	writing or was lost ||| do write or	count=1
function	get a list ||| get	count=2
arg	a domain [arg_2] ||| [arg_2] [arg_1]	count=6
function	[function_1] working ||| [function_1] [function_2]	count=1
function_arg	registration [arg_2] ||| [arg_2] [function_1]	count=1
function	credentials [function_2] ||| [function_2] [function_1]	count=7
module	l{servicemanager}, using the ||| jabber	count=1
function	given arguments ||| exclusive arguments	count=1
class	this ||| imap	count=1
class	create a random ||| digest credential factory	count=1
arg	run a command over ||| reactor command username	count=1
module	and store ||| web	count=1
arg	of l{twisted ||| contextfactory connecttimeout bindaddress	count=1
arg	for a client ||| name client	count=2
module	user portion [module] c{userinfo}; everything ||| [module]	count=1
arg	to another user ||| user filename port	count=1
function	previously set values for ||| set	count=1
function_arg	a notify message ||| notify message	count=1
arg	top or bottom ||| top	count=1
module	visible ||| positioning	count=1
function	to mime types ||| mime types	count=1
arg	message for a message ||| message	count=1
module	calls to ||| mail	count=1
function	all keys found ||| request identities	count=1
function	single [function_2] ||| [function_1] [function_2]	count=2
arg	[arg] c{args} positional ||| observewarning [arg]	count=1
function	application based on the ||| get application	count=1
function	[function_1] [function_2] ||| to [function_1] [function_2]	count=2
class	the same [class] as ||| [class]	count=1
arg	pre-built l{servicemanager}, using ||| jid password	count=1
function	final ||| complete	count=1
class	given to __init__ ||| arguments	count=1
class	random value ||| factory	count=1
function	[function_1] for closing ||| [function_2] [function_1]	count=1
function	to [function_2] ||| [function_2] [function_1]	count=26
function_arg	name is [arg_2] ||| [arg_2] [function_1]	count=3
class	www-authenticate ||| digest credential factory	count=2
module	pre-built l{servicemanager}, using ||| protocols	count=1
function	message sent ||| message	count=2
arg	a response to a ||| name	count=1
arg	message is specified ||| i	count=1
function_arg	to build [arg_2] ||| [function_1] [arg_2]	count=3
class	a remote ||| remote	count=2
module	the list of local ||| conch	count=1
function	that determines whether an ||| name constraint	count=1
function	generator [function_2] ||| [function_1] [function_2]	count=1
function_arg	failed [arg_2] ||| [function_1] test [arg_2]	count=1
function	sessionno [function] ||| [function]	count=3
function	and all children to ||| to	count=1
module	for the connection ||| conch	count=1
arg	a username [arg_2] ||| [arg_1] [arg_2]	count=1
function	create a [function_2] ||| [function_2] [function_1]	count=4
class	display my syspath ||| python	count=1
class	of this sentence ||| base sentence	count=1
function	human ||| human	count=1
arg	password the ||| password	count=1
class	write ||| news builder	count=1
class	function ||| name generator	count=1
function	a ecdh ||| ecdh	count=1
module	constructs ||| words	count=1
function	stopproducing} ||| stop producing	count=1
function	match [function_2] ||| [function_1] [function_2]	count=3
function	the current ||| clean current	count=1
arg	parent ||| recurse parent	count=1
arg	domain the domain to ||| service domain factory	count=1
function_arg	to the [arg_2] ||| [arg_2] [function_1]	count=4
function	article with the specified ||| article	count=1
function	client response ||| response	count=1
module_class	split the [class_2] ||| [module_1] [class_2]	count=7
function	of human [function_2] ||| [function_1] [function_2]	count=2
class	a l{hostresolution} ||| host resolution	count=1
class	for valid arguments and ||| reactor base	count=1
class	a string which is ||| maildir name generator	count=1
module	[module] options ||| [module]	count=3
class	l{callremote}, ||| dispatcher	count=1
class	the date ||| log	count=1
function	a list to be ||| list	count=1
function	a l{str} representation of ||| compact repr	count=1
module	out the avatar ||| conch ssh	count=1
class	the key matches ||| sshpublic key database	count=1
function	are head response for ||| urlas head	count=1
class	could be useful ||| file	count=1
arg	rfc 2821 address from ||| toemail file deferred	count=1
arg	the function f ||| f	count=1
arg	hostname see l{record_afsdb hostname} ||| subtype hostname ttl	count=1
class	name of my ||| port	count=2
class	cancel ||| timeout protocol	count=1
module	file size the ||| protocols	count=1
arg	indicate ||| width height	count=1
module	at [module] ||| [module]	count=1
function	a recommended subscription ||| subscription	count=1
function	update of ||| update	count=1
function	and dirty ||| and disconnect	count=3
class	method for changing kqueue ||| kqueue	count=1
function	of modes ||| modes	count=1
class	[class_1] to handle ||| [class_1] [class_2]	count=2
function	switch ||| switch	count=2
function	c{pauseproducing} and resume copying ||| resume producing	count=1
arg	the given [arg] using ||| [arg]	count=1
function	registration info ||| registration info	count=2
arg	see l{record_minfo rmailbx} ||| emailbx ttl	count=1
function	return the threadpool used ||| get thread pool	count=1
function	c{datetime ||| date and	count=1
function	mime ||| mime	count=1
function	unix [function_2] ||| [function_2] [function_1]	count=4
function_arg	@param address the ||| init address	count=1
function	the size in octets ||| size	count=1
arg	[arg_1] and uri ||| [arg_1] [arg_2]	count=1
arg	a user to ||| user	count=1
function	overview format from ||| fetch overview	count=1
function	increment the ||| increment	count=1
function	method ||| method	count=10
module	check if the ||| python	count=1
function	signal ||| install signal	count=1
function	selected article ||| fetch article	count=2
function	return the number of ||| count	count=1
function	[function_1] a working ||| [function_2] [function_1]	count=1
module	to ||| conch insults	count=2
function	as a processor ||| opt processor	count=1
module	the incoming ||| conch	count=1
class	log file ||| base log file	count=1
module	output of ||| mail	count=1
arg	l{localworkeramp} instance iterating the ||| result testcases cooperate	count=1
module_class	the user ||| python user	count=1
module	had a chance to ||| protocols	count=1
function	server address [function_2] ||| [function_2] [function_1]	count=4
function	file for changes ||| file	count=1
function_arg	[function_1] reactor ||| [function_1] [arg_2]	count=3
class	of a www-authenticate challenge ||| credential factory	count=1
module	to provide a ||| internet	count=1
class	a www-authenticate challenge ||| digest credential	count=1
function_arg	create [arg_2] ||| [arg_2] [function_1]	count=6
function	[function_1] delay period ||| [function_2] [function_1]	count=1
class	l{dnsdatagramprotocol} instance ||| resolver	count=1
class	file monitoring ||| file monitoring	count=6
function	[function_1] secondary ||| [function_2] [function_1]	count=1
function_arg	handle an expected [function_1] [arg_2] ||| mail pop3 [function_1] mailbox [arg_2]	count=1
module	of the string a ||| conch ssh	count=1
arg	status indicator ||| consumer	count=1
function	a server address ||| server address	count=2
class	to a zippath by ||| zip map impl	count=1
function	string representation of ||| repr	count=11
arg	parse a line ||| line	count=1
module_class	other side requested ||| ssh sshconnection	count=1
function_arg	enable this [arg_2] ||| [function_1] [arg_2]	count=1
function	a msg_disconnect ||| disconnect	count=1
function_arg	do [arg_2] ||| [arg_2] [function_1]	count=2
function	of an attribute ||| attribute	count=2
function	alpn ||| acceptable protocols	count=1
arg	define behavior for responses ||| message addr	count=1
function	to deliver any ||| deliver	count=1
function	list response ||| list	count=1
function	as close-on-exec c{true} ||| close on exec	count=1
function	[function_1] responding ||| [function_2] [function_1]	count=1
class	syspath and ||| python	count=1
class	this mailbox ||| imailbox imap	count=1
function	existing child [function_2] ||| [function_1] [function_2]	count=5
class	stop ||| reconnecting client factory	count=1
function	representing my [function] ||| glob [function]	count=3
arg	[arg_1] l{ireactortcp} provider ||| [arg_2] [arg_1]	count=3
function	in the ||| end line	count=1
function	using a thread ||| thread	count=1
function	returns a persistent ||| get persistent	count=1
function	connection ||| make connection	count=1
function_arg	[function_1] a l{gairesolver} ||| [function_1] [arg_2]	count=1
function	[function_1] [function_2] entities that i contain ||| python collection [function_1] [function_2]	count=3
function	next public key object ||| public key	count=1
module_class	the host [class_2] ||| [module_1] [class_2]	count=2
function	entry ||| entry	count=1
arg	based on defined render_foo ||| resource	count=1
arg	that [arg] ||| [arg] error	count=1
function	or ||| send failure or	count=1
module_class	[module_1] path with ||| [module_1] [class_2]	count=4
function	representing a progress bar ||| stat bar	count=1
class	in ||| dict	count=1
function	[function] this ||| [function] test	count=1
function_arg	[function_1] mbox a ||| [function_1] [arg_2]	count=1
function	with the specified message-id ||| article	count=1
class	the factory ||| factory	count=1
class	returns an ||| server	count=1
function	receiver to ||| to	count=1
function_arg	[function_1] l{node} which ||| [arg_2] [function_1]	count=1
function_arg	local class [arg_2] ||| [function_1] [arg_2]	count=3
module	gotoverview() is ||| news	count=1
module	after the associated connection ||| web	count=1
arg	matching [arg] ||| [arg]	count=2
class	for proxyforinterface ||| proxied class	count=1
class	return ||| process	count=1
function_arg	get [arg_2] ||| [function_1] [arg_2] nodeid nodeattrs	count=1
function	method ||| add method	count=1
class	report the ||| result adapter	count=1
function	is authorized to ||| authorized resource	count=1
class	this formatting ||| formatting	count=1
function	to ||| coerce to	count=1
arg	to be returned to ||| nonce clientip	count=1
module	a string representation of ||| mail	count=4
module	a [module] constructed ||| [module]	count=1
class	to this function across ||| maildir name generator	count=1
function	create an instance ||| build	count=1
function_arg	[function_1] scheduler-like object ||| [arg_2] [function_1]	count=1
arg	the reporter ||| testname error	count=1
function_arg	for this ||| for jellier	count=1
arg	real [arg] ||| [arg]	count=3
module	[module] file ||| [module]	count=3
arg	a fd that ||| fd	count=1
function	number of failed ||| failed	count=1
function	handler ||| disown handler	count=1
function	tuple giving a server ||| server	count=1
function	command in [function] fire ||| open [function]	count=1
function	a client [function_2] ||| [function_1] [function_2]	count=2
function	spwd module if it ||| shadow get by name	count=1
function	write ||| should	count=1
arg	with a given name ||| name	count=3
function	a process ||| get process	count=1
function	key ||| verify key	count=1
function	guess ||| guess string	count=1
module	for ||| names	count=1
function	[function_1] ecdh exchange ||| [function_2] [function_1]	count=4
class	authorities to trust when ||| authorities	count=1
function	producer for standard input ||| producer	count=1
function	[function] received may ||| [function]	count=3
function_arg	[function_1] user credentials ||| [function_1] [arg_2]	count=1
function	[function_1] child with ||| [function_1] [function_2]	count=1
function	server address and a ||| server address and	count=1
arg	response to [arg_2] ||| [arg_2] [arg_1]	count=3
function	default appropriate for ||| default log observer	count=1
function_arg	connects a [arg_2] ||| [function_1] tcp port [arg_2]	count=3
module	keys for the ||| conch ssh	count=1
function_arg	[function_1] a datagram ||| [function_1] [arg_2]	count=2
function_arg	[function_1] mapping strings ||| [arg_2] [function_1]	count=1
class	challenge ||| factory	count=1
function	[function_1] an ||| [function_2] [function_1]	count=8
function	is linux ||| is	count=1
function	[function_1] suitable log ||| [function_1] [function_2]	count=3
module	get the connection ||| conch	count=1
class	a remote method ||| remote method	count=2
function	i{x-forwarded-for} header as the ||| proxied	count=1
module	perform the necessary ||| mail	count=1
arg	cannot be issued ||| _	count=1
arg	given name and ||| name	count=2
arg	python ||| coordinatetype	count=1
class	random value suitable for ||| factory	count=1
arg	the given group ||| group low high header	count=1
module	a ||| protocols	count=1
function	that ||| request	count=1
function	class that contains test ||| test case	count=1
function	a working directory ||| working directory	count=2
class	of ||| process	count=1
function_arg	[function_1] [arg_2] ||| [function_1] to handle [arg_2]	count=1
module	the test results to ||| trial	count=1
arg	function c{f}, but ||| suppressedwarnings f	count=1
function	a suitable log ||| log	count=1
class	each alias ||| alias	count=1
arg	remove a message ||| message	count=2
function	a msg_kexinit message ||| kexinit	count=1
arg	timeouts and [arg] further ||| [arg]	count=1
function	a message for deletion ||| message	count=3
module_class	[module_1] alias ||| [module_1] [class_2]	count=4
function	[function_1] [function_2] data ||| [function_1] [function_2] data	count=1
function	sending messages via amp ||| remote	count=1
function	of method names ||| method names	count=1
function	calculate boolean or of ||| boolean or	count=1
class	received on this ||| receiver	count=1
module	and setup ||| words protocols jabber	count=1
function	unregister a [function_2] ||| [function_2] [function_1]	count=2
function	header is received ||| header	count=1
class	for use ||| credential factory	count=1
function	[function_1] some ||| [function_1] [function_2]	count=1
class	jellyable ||| jellyable	count=1
function	some polite ||| replacement	count=1
class	the file and create ||| daily log file	count=1
arg	true [arg] ||| [arg]	count=1
module	across all ||| mail	count=2
function	changed ||| updated	count=1
module	character at [module] ||| [module]	count=1
function	including ||| to	count=3
function	send a message ||| send message	count=3
function	subject of this certificate ||| get subject	count=1
function	[function_1] producer for ||| [function_1] [function_2]	count=1
module	display ||| python	count=1
function_arg	return [arg_2] ||| [function_1] adapter factory [arg_2]	count=1
function	child elements ||| elements by tag	count=1
class	body ||| httpparser	count=1
class	filename l{bytes} ||| alias	count=1
arg	a datagram ||| datagram	count=3
function	file descriptors to ||| file	count=1
module	the server ||| news	count=1
arg	message to [arg_2] ||| [arg_2] [arg_1]	count=8
function	send ||| send	count=49
class	test [class_2] ||| [class_1] [class_2]	count=1
arg	the specified text ||| text	count=1
class	of the file ||| file	count=1
function	group which ||| group	count=1
module	pop the stack if ||| web	count=1
class	sentence ||| base sentence	count=1
function	the [function] address ||| [function]	count=1
function	deliver ||| deliver body	count=1
function_arg	internal initialize [arg_2] ||| [arg_2] [function_1]	count=7
function	extract frames ||| get frames	count=1
function	[function_1] request if ||| [function_2] [function_1]	count=4
class	syspath ||| path	count=1
arg	for a ||| name	count=1
function	[function_1] -> boolean ||| [function_2] [function_1]	count=2
function	connection to the mail ||| connection	count=1
arg	channel this ||| channel	count=1
function	[function_1] contains test ||| [function_2] [function_1]	count=1
function	encode ||| encode	count=4
arg	connects a given l{datagramprotocol} ||| protocol maxpacketsize	count=1
function	enable [function_2] ||| [function_2] [function_1]	count=1
class	factory was created ||| factory	count=1
arg	some data either ||| data	count=1
arg	sock protocol [arg] ||| sock protocol [arg]	count=1
class	a c{filedescriptor} for notification ||| continuous polling	count=1
function	maximum line [function_2] ||| [function_2] [function_1]	count=1
module	for a deprecated ||| python	count=1
function	reverse the ||| reverse log	count=1
function_arg	[function_1] the jellier ||| [function_1] [arg_2]	count=1
class	authenticated and selected ||| imap4client	count=5
class	use as the ||| digest credential factory	count=1
function	mac os x ||| mac osx	count=2
module	message added ||| mail	count=1
function	[function_1] name ||| [function_1] news [function_2]	count=1
module	the user if ||| conch	count=1
function	data ||| write	count=1
function	called for subnegotiations ||| subnegotiation	count=1
class	will stop ||| itelnet transport	count=1
module	called when the ||| web	count=3
class	been ||| deferred queue	count=2
class	system user account ||| system ftprealm	count=1
module	protocol support so that ||| haproxy	count=1
module_class	[module_1] database ||| [module_1] [class_2]	count=12
class	called when ||| ircclient	count=6
function	get a data directory ||| get data directory	count=1
function	the user to consider ||| get	count=1
function	key exchange is in ||| key exchange	count=1
arg	a client protocol to ||| protocol	count=1
function	[function_1] [function_2] ||| [function_2] bad request [function_1]	count=10
class	could not be parsed ||| ftpfile list	count=1
function	[function_1] query ||| [function_2] [function_1]	count=2
arg	define behavior for ||| message addr	count=2
function	[function_1] for consuming ||| [function_2] payload [function_1]	count=1
function	type as a child ||| type	count=1
class	if defined ||| isaslmechanism	count=1
module	to dispatch an ||| internet	count=1
function	increment ||| increment	count=1
function	if the key ||| key	count=1
function	a connection ||| notify no connection	count=1
function	not a ||| ignore ext	count=1
arg	a child of c{tag} ||| request tag	count=5
function	from a ||| received	count=3
class	signal handlers for ||| signal reactor	count=1
arg	[arg_1] [arg_2] ||| [arg_2] flags mode [arg_1]	count=4
class	the file ||| log file	count=5
class	the ||| digest credential factory	count=2
function	connection is started ||| connection made	count=1
function	connection and ||| connection	count=2
arg	[arg_1] broker and ||| [arg_2] [arg_1]	count=1
arg	public key in blob ||| blob	count=1
function	modification [function_2] ||| [function_2] [function_1]	count=2
class	signal handlers if ||| signal reactor	count=1
arg	line of the ||| line	count=2
function_arg	lookup [arg_2] ||| [function_1] function [arg_2]	count=1
module_class	[module_1] input ||| [module_1] [class_2]	count=2
module	request the ||| news	count=1
function_arg	a message [arg_2] ||| [arg_2] [function_1]	count=1
function	default appropriate for the ||| default log observer	count=1
class	send ||| file transfer server	count=1
function	[function_1] state of ||| [function_2] [function_1]	count=1
module_class	[module_1] path ||| [module_1] file [class_2]	count=4
function	manager that a connection ||| client connection	count=1
function	[function_1] bounce ||| [function_2] [function_1]	count=1
function	a specific section ||| specific	count=1
function_arg	topic [arg_2] ||| [arg_2] [function_1]	count=1
function	user ||| user	count=9
module	keys for the connection ||| conch	count=1
module	all calls to this ||| mail	count=1
function	the portal [function_2] ||| [function_2] [function_1]	count=2
class	since ||| daily log	count=1
function	from ||| from floats	count=2
function	send a [function_2] ||| [function_1] [function_2]	count=13
arg	given status [arg_2] ||| [arg_2] [arg_1]	count=1
module	[module_1] [module_2] an ||| [module_2] [module_1]	count=2
function	consider it ||| string	count=1
function_arg	[function_1] to a ||| [function_1] [arg_2]	count=2
arg	response and attempt ||| response method host	count=1
module	corresponds to the ||| conch	count=1
class	calls to this ||| name	count=1
function	ssl context object override ||| context	count=1
function	as l{dict} keys ||| hash	count=1
module	this ||| im	count=3
class	socksv4 packet this ||| socksv4	count=1
arg	module return all ||| module	count=1
function	entity for 'name', ||| entity	count=2
function_arg	[function_1] if index ||| [arg_2] [function_1]	count=5
function	clone ||| clone	count=2
function	also be called ||| made	count=1
function	set using the ||| set	count=1
arg	[arg] to run ||| [arg]	count=1
function_arg	[function_1] path this ||| [function_1] [arg_2]	count=1
function	reactor method ||| reactor method	count=2
function	for a password ||| password	count=1
class	queue ||| ftpclient basic	count=1
function	for joining to ||| coerce to filesystem encoding	count=1
class	this protocol by invoking ||| protocol	count=1
arg	a c{failure} with some ||| error errorclass frames	count=1
arg	the username the ||| username	count=1
module	be run inside the ||| internet	count=1
arg	a client ||| name client	count=2
module	it to ||| names	count=1
arg	files ||| files	count=1
arg	relaying manager to ||| manager	count=2
arg	c{classobj}, returns ||| classobj	count=1
function	a process and returns ||| process output and	count=1
class	initializes a ||| sshpublic	count=1
function	we received a msg_userauth_success ||| ssh userauth success	count=1
function	suitable for joining to ||| coerce to	count=1
module_class	the http ||| web httppage getter	count=1
function	a mapping of arguments ||| arguments	count=1
class	domain names [class_2] ||| [class_1] with [class_2]	count=1
class	xmlstream when the ||| connect authenticator	count=1
arg	a l{localworkeramp} instance ||| result testcases cooperate	count=1
class	message as it is ||| append message	count=1
class	a script through the ||| filtered script	count=1
function	set the prefix ||| set prefix	count=3
function	handshake ||| start tls	count=1
class	via ||| dispatcher	count=1
class	file and ||| daily log file	count=1
arg	a name ||| name	count=1
function	api ||| replacement string	count=1
function	performing the given ||| wont	count=1
class	checker ||| checker	count=1
function	a non-blocking socket using ||| internet socket	count=1
class	daylight saving time ||| fixed offset time zone	count=1
module_class	the cgi ||| web cgiscript	count=1
module_class	[module_1] consumer ||| [module_1] length enforcing [class_2]	count=2
class	in this [class] the ||| command [class]	count=1
module	[module] enters ||| [module]	count=3
module	as this instance ||| python	count=1
class	this ||| name generator	count=1
class	l{_newconnectionhelper} that created ||| command transport	count=1
function	request failed ||| request	count=1
class	a retry attempt ||| client machine	count=1
module_class	to the l{bucket} ||| protocols bucket	count=1
module_class	[module_1] entry ||| [module_1] unparsed [class_2]	count=1
function	line number as a ||| line number	count=1
arg	the topic [arg_2] ||| [arg_2] [arg_1]	count=2
function	and the ||| get deprecated	count=1
module	on [module] ||| [module]	count=2
function	a log [function_2] ||| [function_2] [function_1]	count=3
function	number of bytes sent ||| sent length	count=1
function	an event [function_1] [function_2] e g traditional ||| [function_1] [function_2]	count=2
function	[function_1] and returns ||| [function_2] [function_1]	count=2
function	and reset the ||| reset	count=1
class	as ||| credential factory	count=2
module	this is connected to ||| internet	count=1
function	first existing child with ||| child search	count=1
function	with a database connection ||| run with connection	count=1
class	my standard output stream ||| ptyprocess	count=1
function	received a chunk ||| data chunk	count=1
function	[function_1] an endpoint ||| [function_2] [function_1]	count=1
arg	protocol factory [arg_2] ||| [arg_1] backlog [arg_2]	count=1
function	set another function ||| set	count=1
class	the next iteration and ||| looping call	count=1
function_arg	request [arg_2] ||| [arg_2] [function_1]	count=3
function	a checkpoint ||| check	count=1
class	c{decimal decimal} instance ||| decimal	count=1
function	contains test ||| test	count=1
function	the read [function_2] ||| [function_2] [function_1]	count=1
class	web context ||| current policy	count=1
module_class	the other [class_2] ||| [module_1] [class_2]	count=8
module	in a ||| python	count=2
class	file to the consumer ||| file body	count=1
function_arg	a string [arg_2] ||| [arg_2] [function_1]	count=6
arg	l{servicemanager}, using the ||| jid password	count=1
function	contact list and ||| contact changed	count=1
class	my class ||| port	count=2
function	sent while key ||| allowed key	count=1
function	register a ||| register authenticator	count=1
arg	c{tag} ||| request tag	count=5
module	of an iterator ||| mail	count=1
class	mailbox ||| maildir mailbox	count=3
function	a message sent from ||| message	count=1
function	a child resource all ||| child	count=1
function	a pre-built ||| build service	count=1
function	new [function] an ||| new [function]	count=1
function	groups from ||| fetch groups	count=1
function	store the given header ||| header	count=1
function	attribute name on the ||| method name	count=1
function	check if ||| check	count=3
function	log ||| get log	count=1
class	all domain [class_2] ||| [class_2] [class_1]	count=1
class	which is intended ||| maildir	count=1
module	remote port to ||| conch	count=1
class	signal handlers if c{self ||| signal	count=1
class	changed since last ||| log file	count=1
module	constructs a pre-built ||| words protocols	count=1
function	a regular file ||| isfile	count=1
function	l{ipv4address} or l{ipv6address} ||| get host	count=1
function	fire ||| fire	count=1
module	the characters that ||| python	count=1
function	version information and ||| version	count=1
module_class	[module_1] key ||| [module_1] [class_2]	count=13
class	monitoring ||| file monitoring service	count=2
function	l{servicemanager}, using the ||| service manager	count=1
function	return the [function_2] ||| [function_1] news [function_2]	count=2
class	object [class_2] ||| [class_2] [class_1]	count=2
function_arg	is the [arg_2] ||| [arg_2] [function_1]	count=3
function	last access ||| access time	count=1
function	a wsgi application object ||| wsgi	count=1
class	add ||| stream manager	count=1
arg	a packet on ||| messagenum packet	count=1
function	it is ||| get deprecated	count=1
class	what protocol we're ||| protocol	count=1
function	a stop ||| stop	count=1
function	a deprecated api ||| replacement	count=1
module_class	the given ||| conch itelnet protocol	count=1
class	map this alias to ||| alias	count=1
function	to a ||| to xml	count=1
function	as deprecated to ||| deprecated	count=1
module	requesting to publish me ||| spread	count=1
function	logging to ||| logging	count=1
class	date has changed ||| log file	count=1
class	after phase ||| phase	count=1
module	use as the ||| cred	count=1
arg	privatekeyfilename name of a ||| privatekeyfilename certificatefilename sslmethod _contextfactory	count=1
arg	used by tlsbox ||| verifyauthorities	count=1
function	what type ||| get type	count=1
function	permissions to access path ||| permissions	count=1
module	about [module] amp connection ||| [module]	count=1
arg	a user a file ||| user file	count=1
function	send [function_2] ||| [function_2] [function_1]	count=27
function	or retrieve ||| get	count=1
function	the body for ||| body	count=2
class	[class_1] and log ||| [class_2] [class_1]	count=1
arg	func -> none ||| func	count=3
function_arg	[function_1] proto ||| [arg_2] [function_1]	count=1
class	transport is ||| abstract datagram protocol	count=2
class	server to proxy ||| reverse proxy	count=1
class	l{fixedoffsettimezone} ||| time zone	count=2
function	a response [function_2] ||| [function_2] [function_1]	count=1
class	an ||| endpoint	count=1
class	a legacy ||| legacy	count=1
arg	accountname [arg_2] ||| [arg_1] [arg_2]	count=1
arg	add [arg] ||| [arg]	count=2
class	method of ||| method	count=1
class	messages ||| box dispatcher	count=2
function	create a new ||| create new	count=3
class	by ||| body producer	count=1
function	enable [function] conversion ||| should enable [function]	count=2
class	when l{httpchannel} ||| ideprecated httpchannel to request	count=1
arg	connects ||| address protocol maxpacketsize mode	count=1
function_arg	[function_1] creator ||| [function_1] [arg_2]	count=3
arg	mode string ||| modes params	count=1
function	message-id exists in the ||| article exists request	count=1
arg	when c{predictates} yield a ||| predicates negativeobserver	count=1
class	return the ||| process writer	count=1
function	this ||| call remote	count=1
function	throw [function_2] ||| [function_2] [function_1]	count=5
arg	given ||| followlinks	count=2
module	as an alternative ||| python	count=1
arg	person's name to newnick ||| newnick	count=1
function	sent while key ||| key	count=1
function	retrieve a ||| get	count=3
arg	cases in c{test} with ||| decorator	count=1
function	of a ||| name	count=1
module_class	and [class_2] ||| [module_1] [class_2]	count=8
arg	c{inode} with [arg_2] ||| [arg_1] [arg_2]	count=3
module	when ||| conch client	count=2
arg	file containing the contents ||| i	count=1
class	use ||| digest credential factory	count=2
function	kicked from a ||| kicked from	count=2
arg	pair of ||| callbackargs callbackkeywords	count=1
function_arg	[function_1] the name ||| [function_1] connection control header [arg_2]	count=4
class	it using c{*args}, ||| resolver	count=1
module	negation ||| mail	count=1
class	task completed with a ||| mailbox append message task	count=1
arg	[arg_1] func -> ||| [arg_1] [arg_2]	count=3
function	object from [function_2] ||| [function_2] [function_1]	count=2
class	unregister ||| selector reactor	count=1
function	by ||| cleanup	count=1
arg	banana-encoded string ||| st	count=1
function	amp box containing serialized ||| from box	count=1
module	setup authentication ||| protocols	count=1
function	the reactor started ||| reactor	count=1
arg	messages ||| messages	count=4
function	[function_1] heartbeat l{loopingcall} ||| [function_1] [function_2]	count=1
class	this mailbox ||| icloseable mailbox imap	count=2
class	as the ||| digest credential	count=1
function	waiting for write availability ||| writing	count=2
module_class	on the [class_2] ||| [module_1] [class_2]	count=6
arg	command to ||| command	count=2
arg	certificate authority's distinguishedname return ||| issuerdistinguishedname requestdata verifydncallback serialnumber	count=1
module	to enable an ||| conch	count=1
function	stop the [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] a function ||| [function_1] when running [arg_2]	count=1
function	hostname ||| hostname	count=1
class	sentence ||| nmeaadapter	count=1
class	delegating to an authentication ||| auth	count=1
arg	a pair of ||| callbackargs callbackkeywords	count=1
class	a context using ||| ipidfile	count=1
function	[function_1] new message ||| [function_2] [function_1]	count=1
function	has been answered ||| answered	count=1
function	[function_1] name of ||| [function_2] [function_1]	count=1
module	stoppage to [module] ||| [module]	count=1
function	failure ||| failure	count=6
arg	a replacement for ||| replacement	count=1
function	of the underlying pkey ||| key	count=1
function	poll the poller for ||| do poll	count=2
function	corresponding to this private ||| private	count=1
function	[function_1] attributes for ||| [function_2] [function_1]	count=3
function	enable debug hooks ||| start debug	count=1
function	flush ||| flush	count=2
module_class	platform? @return boolean indicating [module_1] [class_2] ||| [module_1] [class_2] is known	count=2
function	when a connection ||| no connection	count=1
arg	parent ||| parent	count=2
module	the error to a ||| conch	count=1
function_arg	@param mbox ||| init mbox msg	count=1
arg	deferred after ||| deferred id	count=1
module	sending messages via amp ||| protocols	count=1
arg	@param user ||| user channel data	count=1
function	[function_1] object ||| [function_1] [function_2]	count=5
function	c{importerror} ||| require	count=1
function	[function_1] a full ||| [function_2] [function_1]	count=1
function_arg	window [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	group [arg_2] ||| [function_1] message [arg_2]	count=1
function	stream server endpoint from ||| stream server	count=1
function_arg	@param ampprotocol the ||| init ampprotocol	count=1
function	a deprecated api with ||| get replacement string	count=1
class	function across ||| name generator	count=1
arg	for passing over ||| inobject	count=1
function	is running ||| deprecated	count=1
function_arg	[function_1] [arg_2] is expected ||| [function_1] [arg_2]	count=2
function	via dcc send ||| dcc do	count=1
function	surround a ||| replacement	count=1
function_arg	data [arg_2] ||| [arg_2] [function_1]	count=2
class	connections has died ||| ptyprocess	count=1
class	since last ||| daily	count=1
function	operate on [function] arguments which ||| matching [function]	count=1
function_arg	[function_1] line ||| [function_1] [arg_2]	count=5
arg	payload ||| packet	count=2
arg	connects a given ||| address protocol maxpacketsize	count=1
function	a session cookie ||| session	count=1
class	subclass of l{taskfinished} ||| cooperative	count=1
arg	l{request} as an http/1 ||| transport	count=1
function	a [function] ||| dump [function]	count=1
function	validate ||| validate to	count=4
function	remove an [function_2] ||| [function_1] [function_2]	count=4
module	is ||| mail	count=1
function_arg	[function_1] file object ||| [arg_2] [function_1]	count=2
arg	of the web ||| path	count=1
arg	the message originates ||| helo origin	count=2
function	[function_1] warnings ||| [function_2] [function_1]	count=2
function	given header in ||| header received	count=1
class	installed ||| reactor	count=1
function	find the value ||| value	count=1
class	as a child of ||| element	count=3
module	forward remote port to ||| conch	count=1
module	the data suitable for ||| conch	count=1
arg	populated by c{write} ||| fd limit	count=1
function	[function_1] from the ||| [function_1] [function_2]	count=3
function	close a ||| close	count=1
arg	some data as ||| data	count=1
function	return the base filenames ||| get	count=1
function	snapshot of all the ||| get snap shot	count=1
function	log observer for ||| log observer	count=2
function	path l{bytes} [function] path the ||| [function]	count=1
arg	l{irealm} ||| realm checkers	count=1
function	list ||| list	count=8
class	provider ||| process	count=1
function	[function] response data ||| [function] data to	count=1
function	data if one is ||| data	count=2
module	the response ||| web	count=3
function	a null ||| null	count=1
function_arg	@param accountname a ||| init accountname	count=1
class	appropriate subclass of l{taskfinished} ||| cooperative	count=1
module	given stream and ||| web	count=1
class	get ||| mem cache protocol	count=1
arg	key the key to ||| key	count=1
arg	using the ||| jid	count=1
function	export the content of ||| export	count=1
function	partial visible satellite ||| fix	count=1
function_arg	[function_1] reactor and ||| [function_1] [arg_2]	count=4
module	the data suitable ||| conch	count=1
arg	a publisher ||| publisher	count=1
function	stop sending i{ping} messages ||| stop heartbeat	count=1
class	a l{fixedoffsettimezone} ||| time zone	count=2
module_class	attributes this [class_2] ||| [module_1] [class_2]	count=8
function	return the ||| get mail	count=2
function	from ||| fetch	count=1
arg	@param credentials ||| credentials	count=2
function	puts method names ||| method names to dict	count=1
function	attribute as ||| module attribute	count=1
function	portal for [function_2] ||| [function_2] [function_1]	count=2
arg	domain to connect to ||| reactor service domain factory	count=1
function	the command queue or ||| command queue	count=1
arg	function f ||| f	count=1
function	path ||| for reading	count=1
class	with ||| auth client	count=1
function	do any cleanup on ||| cleanup	count=1
function	a stream error ||| stream error	count=2
arg	a response to ||| response	count=1
function	[function_1] a chat ||| [function_2] [function_1]	count=2
arg	connects a ||| address protocol maxpacketsize	count=1
arg	a user a ||| user	count=1
class	last ||| path	count=2
class	provider ||| endpoint	count=2
function	the socket ||| socket	count=2
arg	c{name} ||| name	count=1
function	hint to continue writing ||| writing	count=1
function	session cookie and ||| get session	count=1
class	the underlying ||| key	count=1
module	attached to me ||| spread	count=1
class	an l{iprocesstransport} ||| monitor	count=1
function	groups from the ||| fetch groups	count=1
function	instance of a ||| name	count=1
arg	for doing npn and/or ||| context acceptableprotocols	count=1
function	deprecate c{iterate}, c{crash} ||| deprecate	count=1
function	the response to ||| response from	count=2
arg	request to another user ||| user filename port resumepos	count=1
arg	the request ||| request	count=1
class	new l{dnsdatagramprotocol} ||| resolver	count=1
arg	with the key ||| key	count=1
function	add all [function_2] ||| [function_1] [function_2]	count=4
arg	failure to a ||| failure	count=1
arg	the relay queue after ||| relay	count=1
function	return destination this ||| get destination	count=2
module	when it is done ||| conch	count=1
function	an i/o event ||| event	count=1
function	puts method ||| method	count=1
function	signal c{signalid} ||| signal	count=1
class	changed since ||| file	count=1
class	pkey ||| public	count=1
module	process of ||| mail	count=1
function	[function_1] the timeout ||| [function_1] [function_2]	count=1
module	l{twisted internet ||| internet	count=2
function	state to ||| state to	count=2
class	the deferred has been ||| deferred queue	count=1
class	server just sets ||| sshclient transport	count=1
arg	with the ||| defaulttype ignoredexts registry	count=1
function	sending ||| call remote	count=1
arg	comparison of the index ||| other	count=1
class	this certificate ||| cert	count=1
function	get ||| get if exists	count=1
function	to create ||| init	count=1
module	to publish me ||| spread	count=1
class	previously sent with l{callremote}, ||| box dispatcher	count=1
function_arg	[function_1] failure ||| mail pop3 [function_1] mailbox [arg_2]	count=1
module	do pre-processing [module] ||| [module]	count=2
function	start the reactor ||| run reactor	count=1
function	a quit ||| quit	count=1
function	download a ||| download	count=1
function	it as an ||| get replacement string	count=1
function_arg	an authenticator [arg_2] ||| [function_1] [arg_2]	count=1
function	a select ||| select	count=1
function	listen on a unix ||| listen	count=1
class	by [class_2] ||| [class_1] [class_2]	count=1
function_arg	unregister the [arg_2] ||| [arg_2] [function_1]	count=1
class	create a random ||| factory	count=1
arg	given offset ||| offset	count=1
arg	the domain ||| service domain factory	count=1
class	an l{iprocesstransport} provider ||| process	count=1
class	to domain [class_2] ||| [class_1] [class_2]	count=1
class	for sending messages ||| box	count=1
function	in the child process ||| child	count=1
function	kicked [function_2] ||| [function_2] [function_1]	count=2
module	out the ||| conch	count=1
class	file [class_2] ||| [class_2] [class_1]	count=8
function	channel of ||| channel	count=1
function	[function_1] failure that ||| [function_2] [function_1]	count=1
arg	ciphers and hashes using ||| outkey iniv inkey	count=1
class	a zippath by looking ||| zip map	count=1
class	www-authenticate challenge ||| credential	count=1
function	welcome from the ||| irc rpl welcome	count=1
function	frozenset using the c{frozenset} ||| frozenset	count=1
arg	of authentication when invoking ||| auth	count=1
function	as an alternative ||| get replacement string	count=1
module	l{deferredlist} ||| internet	count=1
arg	@param outiv ||| outiv	count=1
module	last ||| python	count=1
module	body bytes to the ||| web	count=1
function	processor for files ending ||| processor	count=1
class	compute a ||| public key	count=1
function	spawn a ||| spawn	count=1
function	try to remove ||| remove	count=1
function	[function_1] set using ||| [function_1] [function_2]	count=1
function_arg	parse a [arg_2] ||| [arg_2] [function_1]	count=10
function_arg	[function_1] containing unit ||| [arg_2] [function_1]	count=1
function	send as much ||| write some data	count=1
arg	option declarations ||| optlist width	count=1
arg	as the query ||| query id msg	count=1
function	the current line ||| line	count=1
arg	utf-7 ||| errors	count=1
class	up the characters we've ||| to stan	count=1
function_arg	receive a [arg_2] ||| [function_1] error [arg_2]	count=1
function	close the underlying ||| lose	count=1
class	the certificate authorities ||| authorities	count=1
module	pre-built l{servicemanager}, using ||| words protocols jabber	count=1
class	intended to be unique ||| maildir	count=1
function_arg	[function_1] banana-encoded string ||| [function_1] [arg_2]	count=1
arg	l ||| l	count=1
function	api with ||| string	count=1
function_arg	prefix for [arg_2] ||| [arg_2] [function_1]	count=5
arg	line of a ||| line	count=1
class	represents is ||| connection	count=1
class	this ||| words	count=1
module	api with some polite ||| python	count=1
arg	a unique ||| uid reactor	count=1
function_arg	[function_1] fd ||| [arg_2] [function_1]	count=3
class	a satellite object ||| satellite	count=1
class	a maildir ||| maildir	count=2
class	l{filedescriptor}s ||| glib reactor base	count=1
function	to find the ||| maybe find	count=1
function	method to send a ||| send	count=1
module	this ||| words im	count=3
function	[function_1] registration info ||| [function_1] [function_2]	count=1
module	the network ||| web	count=2
function	a delegation if necessary ||| discover authority	count=1
function	[function_1] suppressed ||| [function_2] [function_1]	count=6
function	complete ||| finish	count=1
function	bind9 syntax zone definition ||| bindzone	count=1
function	stop the ||| stop	count=4
class	for each alias ||| alias group	count=1
class	of the test ||| synchronous test case	count=1
function	create a new ||| new	count=1
arg	c{message} (a l{message} ||| message	count=1
function	the client and ||| and	count=1
class	[class_1] this observer ||| [class_1] [class_2]	count=1
function	reverse ||| reverse	count=1
class	all processes reboots ||| generator	count=1
class	retryable manner ||| retrying http11client protocol	count=1
function	list of decorators ||| deprecated	count=1
arg	the given [arg] ||| [arg]	count=8
function_arg	a directory [arg_2] ||| [arg_2] [function_1]	count=1
class	tag ||| tag	count=1
function_arg	arguments [arg_2] ||| [function_1] [arg_2]	count=5
function	a previously-remembered ||| root	count=1
function	an instance of a ||| name	count=1
arg	and [arg] ||| obj [arg]	count=1
function	to [function_2] ||| [function_1] [function_2]	count=17
class	the endpoint ||| endpoint	count=1
function	in source ||| get source lines	count=2
module_class	[module_1] position ||| [module_1] [class_2]	count=2
arg	the specified strport ||| jid password strport	count=1
function_arg	[function_1] string ||| [function_1] [arg_2]	count=2
function	iteration per reactor iteration ||| reactor	count=1
class	proxy ||| reverse proxy resource	count=1
function	socket and its ||| collect socket	count=2
class	[class_1] [class_2] from a chunk of ||| [class_1] [class_2]	count=4
function	service from this ||| service	count=1
class	a www-authenticate ||| credential	count=1
function	send as much of ||| write some	count=1
function	cancel the ||| cancel	count=1
arg	file object ||| file	count=1
class	to be unique across ||| generator	count=1
module	the underlying pkey object ||| internet	count=1
class	the server ||| nntpclient	count=1
class	if the key matches ||| sshpublic key database	count=1
function	return the time ||| get time	count=3
arg	username ||| accountname autologin username password	count=1
function	device ||| device	count=2
function	we received a msg_userauth_success ||| userauth success	count=1
arg	an altitude ||| altitude	count=1
class	initializes an infinite redirection ||| infinite redirection	count=1
function	to its window ||| window adjust	count=1
class	value ||| credential	count=1
function	quick and [function_2] ||| [function_2] request [function_1]	count=1
class	server response ||| server error response	count=1
function	connection and set ||| connection	count=1
module	me and ||| spread	count=1
arg	l{h2stream} objects ||| streamid	count=1
class	that checks what protocol ||| protocol	count=1
function	a process [function_2] ||| [function_2] [function_1]	count=5
arg	privatekeyfilename name of ||| privatekeyfilename certificatefilename sslmethod _contextfactory	count=1
function	make c{root} into an ||| flatten	count=1
function	given l{node} the last ||| append	count=1
function	the envelope data for ||| envelope	count=1
module	the error ||| conch	count=1
arg	given [arg] run whatever ||| [arg]	count=1
arg	a username [arg_2] ||| [arg_2] [arg_1]	count=1
class	file from all ||| file path	count=1
class	we want log levels ||| log level	count=1
function	and write ||| write	count=1
function	an application based on ||| get application	count=1
arg	a network message is ||| broker message args kwargs	count=1
function	[function_1] [function_2] ||| [function_2] message [function_1]	count=9
function	a server ||| server	count=1
function	children ||| named children	count=1
function	fd in the child ||| child fd	count=1
function	resolver ||| resolver	count=1
function	connection is [function_2] ||| [function_1] [function_2]	count=5
function	openssl cipher string ||| from open sslcipher string	count=1
function_arg	chunks for [arg_2] ||| [function_1] [arg_2]	count=1
class	has changed since last ||| log	count=1
arg	user to [arg_2] ||| [arg_2] [arg_1]	count=2
function	deferred has been ||| cancel get	count=1
function	return a l{key} ||| get	count=1
function	a message for ||| message	count=3
function_arg	the producer will [function_1] [arg_2] method ||| [function_1] [arg_2]	count=1
function	a request to ||| request	count=1
function_arg	unregister the physical ||| unregister address domainurl	count=2
arg	replacement for ||| replacement	count=1
module	depending on [module] ||| [module]	count=1
function	whether the user-space ||| is	count=2
function	[function_1] command in ||| [function_1] [function_2]	count=3
function	query to it using ||| query	count=1
module	channel ||| words protocols	count=1
class	file size is larger ||| file	count=1
function	a stat ||| stat	count=2
function	in a string ||| string	count=1
arg	an altitude is ||| altitude	count=1
function	for the next file ||| next	count=1
function	[function] key blob ||| [function]	count=2
function	'message' in ||| line	count=1
function	l{iprocesstransport} ||| force stop	count=1
function	its text data ||| gather text	count=1
function	challenge including the http ||| challenge	count=1
function	current line buffer at ||| line	count=1
class	l{rrheader ||| rrheader	count=1
function	delay and ||| delay	count=1
class	side and ||| sshtransport base	count=1
module	test ||| trial	count=2
arg	over ||| username	count=1
function	an error ||| error	count=5
arg	of the largest udp ||| extendedrcode version dnssecok	count=1
class	web context factory in ||| current policy	count=1
function_arg	[function_1] factory ||| [function_1] tcp port [arg_2]	count=1
function	as ||| replacement	count=1
function	set if ||| set	count=1
function	[function_1] exchange ||| [function_1] [function_2]	count=4
arg	of the i{host} header [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=12
function	to connect via tcp ||| connect	count=2
class	and directories ||| transfer	count=1
function	it is running ||| get deprecated	count=1
arg	digest for the given ||| ha1 ha2 algo psznonce	count=1
function	[function] nicely-formatted ||| [function]	count=1
module	string-only ||| protocols haproxy	count=1
module	this pidfile ||| runner	count=1
function_arg	connection [arg_2] ||| [arg_2] [function_1]	count=2
class	write ||| iwrite handle	count=1
class	to this ||| maildir name generator	count=1
function	[function_1] the hostname ||| [function_2] [function_1]	count=1
function	and the ||| get	count=1
class	object with a ||| with	count=1
function_arg	[function_1] or examine ||| [function_1] [arg_2]	count=4
function	[function_1] service ||| [function_2] [function_1]	count=3
function	is running on ||| get	count=1
function	chain another [function_2] ||| [function_1] [function_2]	count=1
function	for the [function_2] ||| [function_2] connection [function_1]	count=4
function	previously set ||| set	count=1
function	as secondary for the ||| opt secondary	count=1
class	retry attempt ||| client machine	count=1
arg	proxy protocol header line ||| cls line	count=1
function	host [function_2] ||| [function_2] in [function_1]	count=1
arg	c{newpath} that is ||| newpath encoding	count=1
function	necessary for ssl ||| ssl	count=1
function	for consuming the ||| prepare for	count=1
arg	given application bytes and ||| bytes	count=2
function_arg	[function_1] @param prefixes ||| [function_1] [arg_2]	count=3
class	zippath by ||| zip	count=1
function	an l{iprocesstransport} ||| force stop process	count=1
class	serial ||| serial	count=1
class	string which ||| maildir	count=1
function	window ||| channel window	count=1
function	[function_1] url ||| [function_1] [function_2]	count=3
module_class	time the [class_2] ||| [module_1] [class_2]	count=8
function	unexpected [function_2] ||| [function_2] [function_1]	count=2
arg	for ||| observerfn priority	count=1
function_arg	leave a [arg_2] ||| [function_1] [arg_2]	count=1
function	some warnings suppressed ||| warnings suppressed	count=4
function	the deferred has been ||| get	count=1
module	[module] last public ||| [module]	count=1
function	a partial xml ||| to xml	count=1
function	this string ends in ||| ends in	count=1
function	read some data ||| do read	count=1
class	select ||| iterminal transport	count=1
function	the command state ||| state command	count=2
arg	deferred after a timeout ||| deferred id	count=1
function_arg	an error [arg_2] ||| [arg_2] [function_1]	count=1
function	c{exception} ||| child exception	count=1
arg	the value of ||| val	count=2
function	to remove ||| remove	count=2
arg	[arg] an ||| [arg]	count=1
function	for ssl client ||| client ssl	count=2
function	by the reactor thread ||| thread	count=1
function	constructs a pre-built l{servicemanager}, ||| build service manager	count=1
arg	to listen on ||| proto maxpacketsize mode	count=2
module_class	[module_1] [class_2] c{_nomorewritesexpected} has been called ||| [module_1] [class_2]	count=6
arg	path to the inotify ||| path	count=1
arg	[arg_1] writers and ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] physical ||| [arg_2] [function_1]	count=1
arg	to the given address ||| address	count=1
arg	deferred ||| deferred id	count=1
function_arg	[function_1] a l{chunkingzipfile} ||| [function_1] [arg_2]	count=1
function	the process ends with ||| process ended	count=1
function	when the connection ||| connection made	count=1
class	by c{self frame} ||| fragment element	count=2
function	list of headers ||| headers	count=1
class	file that ||| file	count=1
function	internal get ||| get	count=2
function	a msg_service_accept message ||| service accept	count=1
function	a ||| service	count=1
function	socket using self ||| internet socket	count=1
arg	text to the server ||| text	count=1
function	write side [function_2] ||| [function_1] [function_2]	count=1
function	from a tuple giving ||| from	count=1
function	state ||| set copyable state	count=1
function	[function_1] to ||| [function_1] [function_2]	count=10
function	join [function_2] ||| [function_1] [function_2]	count=1
function	checks ||| check	count=1
function_arg	run reactor ||| run reactor	count=1
arg	change the [arg_2] ||| [arg_2] [arg_1]	count=3
module	initiated by the ||| conch	count=1
class	endpoint ||| endpoint service	count=1
function	a message sent from ||| show message	count=1
function	[function_1] new ||| [function_2] [function_1]	count=1
arg	[arg_1] port number ||| [arg_1] [arg_2]	count=5
arg	argument name ||| name	count=1
module	and ||| protocols jabber	count=2
function	the group ||| get group	count=1
class	a ||| python	count=1
arg	with our project policy ||| projectroot output	count=1
arg	@param [arg] an l{ireactortcp} ||| [arg] host port	count=1
class	c{filedescriptor} for notification ||| continuous polling	count=1
arg	exitcode the exit ||| exitcode signal	count=1
function	[function_1] reading writing ||| [function_2] [function_1]	count=2
class	a box ||| box dispatcher	count=1
function	[function_1] error ||| [function_2] [function_1]	count=6
class	for authentication ||| user auth	count=1
module	the types map ||| conch	count=1
function	put a stop to ||| stop	count=1
class	of the suite ||| test suite	count=1
function	remove [function_2] ||| [function_1] [function_2]	count=10
module	on the ||| conch	count=4
module_class	if this l{filepath} ||| python file	count=1
function_arg	@param chatui ||| init chatui	count=1
arg	by l{h2stream} objects ||| streamid	count=1
function	whether a domain ||| domain	count=1
function	from the attributes ||| from message	count=1
module	this certificate ||| internet	count=1
module_class	of this coordinate ||| positioning coordinate	count=1
module	move the ||| conch	count=4
arg	strports description into ||| description factory	count=1
function	from the float values ||| from floats	count=1
module	of pythonmodule ||| trial	count=1
module_class	from the [class_2] ||| [module_1] [class_2] finish	count=1
module	indicate whether the ||| mail	count=1
function	position ||| position	count=1
class	remove ||| xmpphandler collection	count=1
arg	a message ||| message	count=17
function	a working ||| working	count=1
function	a snac and wait ||| snac	count=1
function_arg	a chat [arg_2] ||| [function_1] [arg_2]	count=3
function	this process ||| process unique	count=2
function	line number ||| line number	count=1
function	object in ||| call in	count=1
arg	the name of this ||| name	count=1
function	a stop to ||| stop	count=1
class	create a log ||| log	count=2
function	the ||| end line	count=2
function	per second ||| per second	count=2
class	a public key ||| key	count=1
function	a running ||| running	count=1
module	instance of pythonmodule pythonattribute ||| trial	count=1
module_class	of [module_1] [class_2] ||| [module_1] [class_2]	count=16
arg	operating ||| config	count=1
class	the appropriate ||| virtual	count=1
function	received [function_2] ||| [function_1] [function_2]	count=2
function	get a cookie that ||| get cookie	count=1
arg	factory [arg_2] ||| [arg_2] [arg_1]	count=1
arg	[arg_1] modes on ||| [arg_2] [arg_1]	count=1
function	in c{paths} ||| preauth	count=1
class	drive ||| dist trial runner	count=1
module	signal that the test ||| trial	count=1
module_class	this factory for ||| internet factory	count=1
class	a random value suitable ||| digest credential factory	count=1
module	time mdtm the ||| protocols	count=1
function	uid of ||| uid	count=1
arg	whether access [arg] is allowed ||| [arg]	count=1
function	[function_1] expiration ||| [function_2] [function_1]	count=1
function	an object for later ||| for	count=1
function	in this ||| exec	count=1
class	authentication ||| sshuser auth server	count=1
arg	a given avatarid ||| avatarid	count=1
arg	host the host of ||| host port path	count=1
function	[function_1] [function_2] ||| [function_1] deprecation warning [function_2]	count=4
module_class	this l{deferred} by ||| internet deferred	count=1
function	active handle from ||| stop reading and writing	count=1
function	has been delivered ||| finished	count=1
function	the user to ||| replacement	count=1
function	using the ||| build	count=1
function	is no longer ||| connection	count=1
class	function across all ||| generator	count=1
module	the expiration of the ||| mail	count=1
class	has ||| deferred	count=1
function	contains test cases c{false} ||| test case	count=1
function	user to ||| get replacement string	count=1
class	are [class_2] ||| [class_1] [class_2]	count=2
arg	the filesystem to ||| fn	count=1
function_arg	@param accountname ||| init accountname	count=1
function	called by l{unittest testcase} ||| class cleanup	count=1
function	method to send ||| send	count=1
class	component wishes to ||| connect component authenticator	count=1
function	[function_1] buffer this ||| [function_1] [function_2]	count=1
function	url to the most ||| url	count=1
function	a particular authentication ||| auth	count=1
function	a ||| init	count=2
class	the message as ||| maildir mailbox append message task	count=1
function	is received ||| speed received	count=1
module	performing the ||| conch	count=1
arg	local files ||| previousresult files remotepath single	count=1
class	of this certificate ||| cert base	count=1
function	for the consumer ||| resume producing	count=1
module	l{servicemanager}, using ||| protocols	count=1
arg	coordinator an ||| coordinator	count=1
function	projects in ||| iter projects	count=1
function_arg	convert [arg_2] ||| [function_1] ipv6 [arg_2]	count=1
function	is ||| call	count=1
arg	header @param request the ||| request	count=1
module_class	[module_1] state ||| [module_1] [class_2]	count=1
module	set the c{_deprecated_info} ||| python	count=1
function	dcc send ||| dcc	count=1
function_arg	set [arg_2] ||| [function_1] path [arg_2]	count=1
function	pre-built ||| service	count=1
arg	factory factory ||| factory wrappedprotocol logfile	count=1
arg	fromemail [arg_2] ||| [arg_2] [arg_1]	count=1
function	notice ||| irc notice	count=2
module	select and ||| words protocols jabber	count=1
function_arg	[function_1] [arg_2] for ||| [function_1] [arg_2]	count=7
function	all child elements of ||| elements	count=1
class	the ||| feature initiating initializer	count=1
class	a portal to a ||| portal	count=1
function	a quote ||| quote	count=1
function	[function_1] loopback ||| [function_1] [function_2]	count=1
class	log file size ||| log file	count=2
class	my process's ||| writer	count=1
class	l{hostresolution} ||| host resolution	count=1
function	an [function] method ||| [function]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] error [arg_2]	count=2
arg	l{_adaptedreporter} ||| original testadapter	count=1
arg	has happened server-side ||| errtext	count=1
function	[function_1] from a ||| [function_1] [function_2]	count=4
module	pre-built l{servicemanager}, using the ||| protocols	count=1
function	next public ||| public	count=1
function	number of calls which ||| count	count=1
function	to resume ||| resume	count=1
class	l{_newconnectionhelper} ||| command transport	count=1
function	l{iprocesstransport} ||| force	count=1
class	which this structure object ||| message structure	count=2
function	as a ||| attrs	count=1
function	display twisted version and ||| opt version	count=1
function	register a new form ||| register	count=1
arg	group over the ||| group low high	count=1
function	of the given arguments ||| exclusive arguments	count=1
module	be sent to the ||| conch	count=1
function_arg	[function_1] message an ||| [function_1] [arg_2]	count=2
arg	the xml-rpc ||| contents	count=1
function	to this protocol ||| protocol	count=1
class	c{key} by ||| mem cache	count=2
class	produce a log ||| log	count=1
module	the callback when ||| conch ssh	count=3
class	each alias and ||| alias	count=1
function_arg	fail if c{deferred} ||| assert failure deferred	count=1
function	to wake up the ||| waker	count=1
function	[function_1] the body ||| [function_2] [function_1]	count=2
arg	alternate constructor for ||| cls countcallable	count=1
module	to dispatch an event ||| internet	count=1
arg	observe someone else being ||| kickee	count=1
arg	for the given named ||| name	count=1
module	the date ||| python	count=1
function_arg	create a l{memoryworker} ||| init pending	count=1
function	a single test ||| stop test	count=2
class	my ||| writer	count=1
function	a certificate request ||| certificate request	count=2
function_arg	convert [function_1] [arg_2] ||| [function_1] to datetime [arg_2]	count=1
arg	@param environ a dictionary-like ||| environ	count=1
function	port ||| generate port	count=1
function	colon-separated ascii bytes representation ||| bytes	count=1
function	and add ||| add	count=1
arg	[arg_1] cannot ||| [arg_2] [arg_1]	count=6
function	internal create a non-blocking ||| create	count=1
function	a string representation of ||| repr	count=6
class	test has run but ||| test	count=1
function	connection is ||| is	count=1
module	by base64-encoding the ||| conch	count=1
class	authentication ||| auth server	count=2
function	formatted log ||| log formatter	count=1
function	initializes ||| init	count=2
class	current authentication type ||| auth	count=1
arg	from [arg_2] ||| [arg_1] domain [arg_2]	count=1
function	a channel of ||| channel	count=1
arg	as a failure ||| test	count=1
function	called when a file ||| file	count=1
function	is running ||| get deprecated	count=1
function	for inclusion in ||| escaping	count=1
function	return [function_1] [function_2] ||| cred portal [function_1] [function_2]	count=7
function	node to ||| to node	count=2
function	response data [function_1] [function_2] ||| [function_1] [function_2]	count=3
module	called when an ||| conch insults	count=1
module	two requests are the ||| web	count=1
function	l{cooperativetask} which drives ||| producing	count=1
class	[class_1] state has ||| [class_1] [class_2]	count=4
function	to wake up ||| waker	count=1
function	exhorting the ||| replacement string	count=1
arg	constants the ||| level	count=1
arg	a callback ||| callback	count=2
function	last access from ||| modification	count=2
arg	filesystem to ||| fn	count=1
function	for a socket ||| socket	count=1
arg	containing ||| filename	count=2
function_arg	[function_1] [arg_2] ||| [function_1] messages [arg_2]	count=16
function	deliver any buffered data ||| deliver	count=1
module	timer ||| internet	count=1
class	which is intended to ||| generator	count=1
class	via amp invoke it ||| dispatcher	count=1
function	parameters for correct parsing ||| mode params	count=1
arg	non-filled-out cached [arg_2] ||| [arg_2] [arg_1]	count=1
module	set the c{_deprecated_info} flag ||| python	count=1
module	an alternative ||| python	count=1
class	connection ||| h2stream	count=1
function_arg	[function_1] the attributes ||| [arg_2] [function_1]	count=1
class	containing authorized keys and ||| key database	count=1
class	the initialization ||| base feature	count=1
function	the factory to ||| unjellyable factory	count=1
module	called by the ||| words protocols	count=2
function	clean up references to ||| details	count=1
arg	@param prefixes dictionary that ||| prefixes	count=1
module	to generate ||| conch insults	count=1
function	the system-defined home directory ||| home directory	count=1
function	and puts method names ||| add method names to	count=1
function	to install the ||| install	count=1
module	is ||| ssh	count=4
class	initializes a ||| base speed	count=1
function	remove a specific key ||| remove identity	count=1
function	no connection is ||| no connection	count=1
function	type may be sent ||| type	count=1
function	anything is ||| anything	count=1
function	been ||| cancel get	count=1
class	l{bucket} ||| bucket	count=2
module	protocol support so ||| haproxy	count=1
function_arg	an authentication [arg_2] ||| [function_1] [arg_2]	count=4
function	signature of c{obj}'s constructor [function_1] [function_2] should be displayed ||| [function_1] displayable [function_2]	count=2
function	whether or [function] ||| opt allow [function]	count=3
class	is ||| name	count=1
arg	reactor a [arg_2] ||| [arg_1] [arg_2]	count=1
class	initializes an infinite ||| infinite	count=1
arg	[arg_1] of l{twisted ||| [arg_1] [arg_2]	count=1
function	a deprecated api ||| get replacement	count=1
function	message to ||| message	count=2
arg	listen on ||| factory backlog	count=1
function_arg	get a [arg_2] ||| [function_1] [arg_2] nodeid	count=1
function	what path entry ||| entry	count=1
function	[function_1] messages which ||| [function_2] [function_1]	count=1
function_arg	string one [arg_2] ||| [arg_2] [function_1]	count=2
function	append given data to ||| append	count=1
arg	using [arg_2] ||| [arg_1] [arg_2]	count=1
function	some polite text exhorting ||| get replacement	count=1
function	encountered closing tag ||| tag end	count=1
function	close all ||| close	count=1
function	close the ||| lose connection	count=1
module	using ||| words protocols jabber	count=2
function	escape ||| escape for content	count=1
class	@param ||| interval differential	count=1
function	and return a l{gitcommand} ||| get	count=1
function	combined ||| combined	count=1
module	object with a descriptive ||| spread	count=1
function_arg	[function_1] byte ||| [arg_2] [function_1]	count=1
class	the timer ||| call	count=1
module	use on this ||| python	count=1
function	gsv ||| gsv	count=1
function	parse a stream ||| parse stream	count=2
function	with some ||| get replacement string	count=1
function	to start ||| start	count=1
class	an l{ipv4address} or l{ipv6address} ||| base tcpclient	count=2
function	c{_deprecated_info} flag if ||| get deprecated	count=1
function	received to ||| received	count=1
function	of the reactor ||| reactor	count=1
module_class	xml [class_2] ||| [module_1] [class_2]	count=2
class	across all calls to ||| generator	count=1
module	[module] object but ||| [module]	count=1
function	vt102 control sequence that ||| vt102	count=1
class	find the ||| mail	count=1
function	[function] an ||| new [function]	count=1
function	to retrieve [function_2] ||| [function_2] [function_1]	count=2
module	packed ||| conch ssh	count=1
class	completely received without ||| protocol	count=1
function	number of busy workers ||| working	count=1
function	the size of this ||| file size	count=1
function	set the factory to ||| set unjellyable factory	count=1
class	factory was created ||| basic credential factory	count=1
function	to the ||| to string	count=1
function	body has been delivered ||| body data	count=1
function	set ||| set flags	count=1
class	when the request to [class_1] [class_2] the c{commandconnected} deferred ||| conch [class_1] [class_2] exec	count=1
class	set checks ||| synchronous	count=1
function	[function_1] line of ||| [function_2] [function_1]	count=5
arg	amplist ||| subargs optional	count=1
function_arg	class [arg_2] ||| [function_1] [arg_2]	count=3
function	get the read/write status ||| is writeable	count=1
arg	render_foo ||| resource	count=1
class	[class_1] connected to ||| [class_2] [class_1]	count=4
class	the underlying ||| public key	count=1
arg	credentials ||| credentials	count=7
function	iteration to ||| iterate	count=1
function	queue the given file ||| file	count=1
arg	log a failure ||| format failure level	count=1
arg	test raises an error ||| test error	count=1
class	the destination address ||| address alias	count=2
class	an l{iprocesstransport} provider ||| monitor	count=1
module_class	[module_1] reactor may ||| [module_1] [class_2]	count=8
function_arg	directory for [arg_2] ||| [arg_2] [function_1]	count=1
function	share an integer value ||| ssh kex dh gex	count=1
class	l{dnsdatagramprotocol} ||| resolver	count=1
function	received that answered a ||| received	count=1
class	[class_1] as ||| [class_2] [class_1]	count=2
function	file ("-" for ||| file	count=1
function	l{iprocesstransport} ||| force stop process	count=1
function	from [function] ||| [function]	count=1
function	box ||| from box	count=1
function	match plugin [function_2] ||| [function_2] [function_1]	count=2
function	command ||| command	count=3
arg	@type file ||| file consumer transform	count=1
arg	given remote root object ||| root	count=1
module	the specified set of ||| mail	count=1
function	queue or none ||| queue	count=1
function	[function_1] producing ||| [function_1] [function_2]	count=1
module	setup authentication ||| words protocols jabber	count=1
arg	modes on a user ||| modes	count=1
function	an endpoint with ||| endpoint	count=1
function	also support handling sigchld ||| handle signals	count=1
arg	deferred ||| deferred	count=1
function	original exception ||| exception	count=1
class	a context ||| context	count=1
function_arg	[function_1] string representing ||| [function_1] [arg_2]	count=1
class	mailbox ||| icloseable mailbox	count=1
function	this string ends ||| ends	count=1
arg	the rfc 2821 address ||| toemail file deferred	count=1
function_arg	failed [arg_2] ||| [function_1] [arg_2]	count=1
module	is intended to ||| mail	count=1
class	report the ||| unit result adapter	count=1
arg	notify the caller that ||| failafterfailures	count=1
function	get the envelope for ||| get envelope	count=1
function_arg	[function_1] it'll translate ||| [function_1] [arg_2]	count=8
function	load the value associated ||| load	count=1
function	factory to construct ||| factory	count=1
function_arg	[function_1] filename ||| [function_1] [arg_2]	count=2
function	find the source ||| maybe find source	count=3
function	threadpool used by ||| thread pool	count=1
function	elements which are direct ||| elements	count=1
class	the date has ||| file	count=1
function	have defined ordering - ||| priority for level	count=1
function	a string ||| string	count=7
class	url ||| url	count=4
function	of a single test ||| test	count=1
function_arg	[function_1] work on ||| [arg_2] [function_1]	count=1
arg	command the command ||| command	count=1
function	all child elements ||| elements	count=1
function	list to be sent ||| list	count=1
function	for ||| prepare for	count=1
arg	euid ||| euid	count=1
class	files and directories ||| file transfer	count=1
arg	specified strport ||| strport	count=1
class	file descriptor ||| file descriptor	count=2
module	fire the ||| conch	count=1
function_arg	connected [arg_2] ||| [arg_2] [function_1]	count=2
arg	a c{failure} ||| errorclass frames	count=1
class	the list of ||| list protocol	count=1
arg	uid ||| uid	count=3
function	deliver data to ||| deliver	count=1
function	private ||| string private	count=1
function	open a [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] [function_2] data ||| [function_1] [function_2]	count=1
function	for a public key ||| publickey	count=1
function	error ||| error	count=7
function	fails to connect ||| notify on fail	count=1
function	send a dcc ||| dcc	count=2
function	suitable log [function_2] ||| [function_1] [function_2]	count=3
function_arg	the producer will [function_1] [arg_2] method ||| internet iconsumer [function_1] [arg_2]	count=1
module	the given ||| conch ssh	count=2
class	decompression ||| content decoder agent	count=1
arg	initiate a ||| portnumber addresstypes	count=1
module	handle the ||| mail	count=1
arg	line ||| line	count=17
class	unit ||| decorator	count=1
function_arg	l{bytes} @param [arg_2] ||| [function_1] [arg_2]	count=4
function	remove all ||| remove all	count=6
function	with some polite text ||| get replacement	count=1
module_class	[module_1] non ||| [module_1] [class_2]	count=8
function	on set the c{_deprecated_info} ||| get deprecated	count=1
function_arg	[function_1] to newtopic ||| [function_1] user channel [arg_2]	count=1
function	print [function_2] ||| [function_1] detailed [function_2]	count=2
function	or private lsh ||| to string lsh	count=1
function	the io completion port ||| iteration	count=1
arg	file via ||| file	count=1
arg	serv_type ||| serv_type	count=1
function	to a chat ||| chat	count=1
function	not ||| ignore	count=1
function	a message ||| get message	count=3
function_arg	[function_1] using this ||| [arg_2] [function_1]	count=8
class	their original case ||| insensitive	count=1
class	this dictionary with ||| with	count=1
function	expat-based stream if ||| stream	count=1
function	event object for ||| event	count=1
module	that the clients wants ||| conch ssh	count=1
class	a maildir [class_2] ||| [class_1] [class_2]	count=2
arg	spawn an ||| executable args	count=1
function	an object that ||| object	count=1
class	be unique across all ||| maildir	count=1
class	to the temporary file ||| file wrapper	count=1
function	connection to ||| notify no connection	count=1
function	requested a channel ||| channel	count=2
class	of my ||| process	count=1
function	constructs a pre-built ||| build service	count=1
module_class	for the socket ||| internet port	count=1
function	get the generator and ||| get dhgenerator and	count=1
arg	using ||| jid	count=1
function	invoke ||| call	count=2
function	date has ||| should	count=1
class	conversation ||| conversation	count=5
function	[function_1] an event ||| [function_1] [function_2]	count=3
function	returns the group id ||| get group id	count=1
arg	server cannot ||| relay	count=1
arg	given buffer ||| buff evt	count=1
module	processes reboots ||| mail	count=1
function	a service ||| service	count=1
module	the authentication is finished ||| conch	count=1
function	remove ||| get	count=1
class	create a ||| iopen sslclient connection creator	count=1
function	constructs a ||| build service	count=1
function	suitable for use as ||| generate	count=1
function	that interface ||| for interface	count=1
function	[function] matches ||| [function]	count=3
function	[function_1] encoder if ||| [function_2] [function_1]	count=2
module	from l{_connectedprotocol}, issue ||| names	count=1
function	last access from ||| get modification	count=2
arg	broadcast the given [arg_1] [arg_2] users in group ||| [arg_2] [arg_1]	count=2
function	the threadpool used ||| pool	count=1
arg	given c{avatarid} ||| avatarid	count=1
function	since ||| should	count=1
function	public key ||| auth publickey	count=1
class	an unparsed ||| unparsed	count=1
module	directory as this instance ||| python	count=1
function	certificates to ||| cacerts to	count=1
function	return credentials [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] provides one ||| [function_1] avatarid [arg_2]	count=1
function	along ||| eom received	count=1
function	[function_1] instance ||| [function_1] [function_2]	count=3
function	the maximum line ||| line	count=1
module	deprecation ||| python	count=1
function	[function_1] factory ||| [function_1] [function_2]	count=7
arg	digest of the password ||| password	count=1
function	consumer a ||| resume producing	count=1
module_class	after the [class_2] ||| [module_1] [class_2]	count=4
class	object ||| with	count=1
function	wait until we acquire ||| until	count=1
class	calls to ||| generator	count=1
class	add ||| arguments generator	count=1
function	with the ||| client	count=1
function	running on ||| deprecated	count=1
function	explains ||| get	count=1
function	try to return a ||| get	count=1
function	msg_service_accept ||| service accept	count=1
function	message [function] version-number ||| [function]	count=1
function	[function_1] to a ||| [function_1] [function_2]	count=3
function	endpoint [function_2] ||| [function_1] [function_2]	count=2
function	for a single file ||| single file	count=1
function	[function_1] send ||| [function_1] [function_2]	count=5
function	return the attributes for ||| get attrs	count=2
arg	name see ||| name ttl	count=2
module	resets them when it ||| conch client	count=1
arg	following ||| headers bodyproducer	count=1
class	the ||| feature	count=1
function	key object to ||| key	count=1
arg	passing over the network ||| inobject	count=1
module	when the ||| protocols	count=2
class	this sentence ||| sentence	count=1
class	which is intended ||| maildir name	count=1
arg	the given group over ||| group	count=1
function	validate the address ||| validate	count=2
function	the modules present ||| iter modules	count=1
function	[function_1] or l{ipv6address} ||| [function_1] [function_2]	count=1
class	connection when ||| connection pool	count=1
function	[function_1] as ||| [function_1] [function_2]	count=2
class	for use ||| digest	count=1
function	convert an ampbox to ||| to	count=1
function	default appropriate ||| default log observer	count=1
function	type may ||| type	count=1
class	connection attempts is ||| machine	count=1
module	to the jabber server ||| protocols jabber	count=1
function	random domain [function] ||| [function]	count=3
function	[function_1] per ||| [function_1] [function_2]	count=1
class	to the consumer by ||| body	count=1
module	the c{_deprecated_info} flag if ||| python	count=1
module	constructs ||| protocols jabber	count=2
function	reap all registered processes ||| reap all processes	count=1
function	directories ||| directories	count=1
function	set which local ||| set unjellyable	count=1
class	suitable for use ||| digest	count=1
arg	an alias of ||| memo	count=1
function	overview format ||| overview	count=1
function	list to be ||| list	count=1
function	send an unexpected success ||| unexpected success	count=1
function	c{_deprecated_info} flag ||| deprecated	count=1
function	[function_1] made to ||| [function_2] [function_1]	count=3
class	connection and ||| sshtransport base	count=1
function	gotoverview() is ||| fetch	count=1
class	create a random value ||| factory	count=1
class	[class] command in ||| command [class]	count=1
class	the ||| initializer	count=1
function	factory for ||| factory	count=2
function_arg	from [arg_2] ||| [function_1] box [arg_2]	count=1
function	checks if [function_2] ||| [function_2] [function_1]	count=1
class	from my server ||| resource subscription	count=1
function	release ||| unlock	count=1
class	random ||| digest credential	count=1
function	log message for closing ||| log connection lost msg	count=1
function	[function] pop3 ||| [function]	count=2
class	a cgi script ||| cgiscript	count=1
arg	@param request the ||| request	count=1
arg	construct an l{_adaptedreporter} ||| original testadapter	count=1
arg	a class object c{classobj}, ||| classobj	count=1
function	extract frames from ||| get frames	count=1
arg	@param proc an ||| proc	count=1
function_arg	[function_1] publisher ||| [arg_2] [function_1]	count=1
arg	replacement for a deprecated ||| replacement	count=1
function	decorators and the object ||| deprecated	count=1
function	reply ||| reply	count=2
function_arg	[function_1] option ||| [arg_2] [function_1]	count=6
module	a [module] service ||| [module]	count=1
function	any of ||| get deprecated	count=1
arg	the given level ||| level format	count=2
class	last write ||| daily	count=1
class	side information ||| bosconnection	count=1
function	the connection was ||| connection	count=2
function	[function_1] stream window ||| [function_1] [function_2]	count=1
function	original exception [function_2] ||| [function_1] [function_2]	count=4
arg	dispatch it appropriately ||| args kw	count=3
module	and their ||| im	count=1
function	a string representation ||| repr	count=2
function	newly ||| new local id	count=1
class	for ||| isftpserver	count=2
arg	host name [arg_2] ||| [arg_1] [arg_2]	count=2
module	values of [module] ||| [module]	count=1
arg	opaque and nonce from ||| nonce clientip	count=1
arg	@type file any ||| file consumer transform	count=1
class	the date ||| daily log file	count=1
class	for ||| digest credential factory	count=2
function	for this ||| unique	count=1
function	retrieve the file ||| get	count=1
function	envelope this will be ||| mail	count=1
function	with some warnings ||| with warnings	count=6
arg	user not [arg_2] ||| [arg_2] [arg_1]	count=1
function	with a ||| init	count=1
function	a stream server ||| stream server	count=2
class	l{deferredlist} ||| deferred	count=1
function_arg	[function_1] provides ||| [arg_2] [function_1]	count=1
function	parse ||| parse fields	count=2
module	connection to [module] ||| [module]	count=2
class	return a path ||| path	count=2
arg	name of the ||| name	count=1
arg	either reading ||| source primary other flags	count=1
module	[module] window by ||| [module]	count=1
class	that we will stop ||| itelnet	count=1
function	the c{_deprecated_info} ||| get deprecated	count=1
function	remove monitoring for ||| remove	count=1
class	the certificate authorities ||| open sslcertificate authorities	count=1
module	the outgoing initialization ||| conch ssh	count=1
function	header ||| handle header	count=1
class	this port may ||| port	count=2
function	from ||| from sign	count=1
function	a random value suitable ||| generate	count=1
module	[module] following ||| [module]	count=1
arg	group over ||| group low high header	count=1
arg	will represent a remote ||| classname unjellyable	count=1
module	the reactor when a ||| web	count=1
function	a single ||| single	count=2
function	connect a client ||| connect	count=2
module	it ||| python	count=2
function	resume an ||| do resume	count=1
class	date has changed ||| log	count=1
function	received file descriptors to ||| file descriptor received	count=1
function	rset command ||| rset	count=1
arg	the given sender ||| sender text metadata	count=1
function	from request ||| received	count=1
class	display ||| path	count=1
function	call this to close ||| close	count=1
function	a list ||| get deprecated	count=1
function	inclusion ||| escaping	count=1
arg	given member ||| member	count=2
arg	more messages have ||| newflags	count=1
class	return ||| transfer client	count=1
function	find all [function_2] ||| [function_2] [function_1]	count=1
function	key exchange ||| key exchange	count=1
class	the stream ||| xml stream	count=1
arg	message l{int} ||| message	count=1
function	encoding ||| encoding	count=1
function	[function_1] name ||| [function_2] [function_1]	count=1
arg	a command over ||| command username	count=1
function	[function_1] checkers ||| [function_1] [function_2]	count=2
module_class	of this formatting ||| python default formatting	count=2
class	received on this ||| ibox receiver	count=1
class	cookie ||| cookie	count=1
function	log line for ||| log	count=1
arg	fd that it cannot ||| fd	count=1
function	given server protocol ||| server	count=1
function	make a connection ||| make connection	count=2
function	service is [function_2] ||| [function_2] [function_1]	count=4
function	with an error ||| error	count=1
function	files and directories in ||| files and directories	count=1
function	[function_1] the private ||| [function_1] [function_2]	count=1
arg	module-level ||| version message	count=1
class	[class_1] list ||| [class_2] [class_1]	count=1
module	done in the ||| internet	count=1
module	and ||| spread	count=1
module	the last header is ||| web	count=1
function	the program files folder ||| program files	count=1
function_arg	[function_1] jellier ||| [function_1] [arg_2]	count=1
function	it is ||| deprecated	count=1
module	the data for ||| conch	count=1
function_arg	header [arg_2] ||| [arg_2] [function_1]	count=3
class	[class_1] [class_2] ||| [class_2] [class_1]	count=269
class	formatting [class_2] ||| [class_1] [class_2]	count=5
arg	alternate constructor ||| cls countcallable	count=1
arg	if [arg] 0 then ||| item [arg]	count=1
arg	set of observers this ||| observers discardbuffer redirectstandardio	count=1
module_class	[module_1] [class_2] ||| [module_1] ssh [class_2]	count=1
function_arg	unregister [arg_2] ||| [arg_2] [function_1]	count=1
arg	a subset ||| reference wildcard	count=1
arg	print 'message' ||| message	count=1
arg	the response ||| response	count=1
class	function across all ||| maildir name	count=1
function	all of the ipv4 ||| a	count=1
class	will stop performing the ||| transport	count=1
function	using the ||| build service manager	count=1
function	deprecated ||| deprecated module	count=1
class	remember whether signal handlers ||| signal	count=1
class	and ||| base	count=3
function	[function] does not ||| error [function]	count=2
function	add [function_2] ||| [function_1] [function_2]	count=5
function_arg	@param l the ||| init l	count=1
arg	the given application bytes ||| bytes	count=2
module	and return ||| trial	count=1
module	this method converts the ||| web	count=1
function_arg	[function_1] of c{inode} ||| [function_1] [arg_2]	count=5
function_arg	[function_1] username the ||| [arg_2] [function_1]	count=1
function_arg	a response [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] the filesystem ||| [arg_2] [function_1]	count=1
function	test for the presence ||| contains	count=1
class	a random ||| factory	count=1
class	called when a transport ||| abstract datagram	count=1
function	[function_1] local address ||| [function_2] [function_1]	count=1
module	extracting the ||| web	count=1
function	the original exception ||| exception	count=1
function_arg	connected to [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] initial client ||| [function_2] [function_1]	count=1
function	thread from the ||| defer to thread	count=1
function	the given ||| wont	count=1
module	connection to the jabber ||| words protocols jabber	count=1
arg	request but use ||| timestamp request	count=1
module_class	of this angle ||| positioning angle	count=1
function	c{dict} ||| make excludes dict	count=1
function_arg	[function_1] a publisher ||| [function_1] [arg_2]	count=1
function	a connection ||| no connection	count=1
arg	l{clientservice} which computes ||| initialdelay maxdelay factor jitter	count=1
function	error message from ||| error	count=1
function	an error ||| send error	count=1
class	and return their string ||| janitor	count=1
class	file from all other ||| file	count=1
function_arg	[function_1] a callback ||| [arg_2] [function_1]	count=1
function	[function_1] state ||| [function_1] [function_2]	count=1
function	create a file ||| file	count=1
function	connect via a ||| connect	count=1
arg	incrementally write out ||| write	count=1
class	from ||| nmeaadapter	count=1
class	[class_1] unix this ||| [class_2] [class_1]	count=2
class	suitable for ||| credential	count=1
class	connection still ||| h2connection	count=1
function	set this ||| set	count=1
module	a l{filelogobserver} that emits ||| logger	count=1
arg	1 [arg_2] ||| [arg_1] [arg_2]	count=1
module	messages via amp invoke ||| protocols	count=1
class	the test ||| synchronous test case	count=1
function	deliver any buffered data ||| deliver body	count=1
function	[function_1] writing ||| [function_2] or [function_1]	count=2
module_class	when the transport ||| web h2connection	count=1
class	of the pipe signal ||| reader	count=1
arg	parts and apply stringprep ||| jidstring	count=1
function	hemisphere ||| get hemisphere	count=1
function	check if this ||| check	count=1
module_class	of workers ||| python thread pool	count=1
function	with the signed ||| signed	count=1
module	[module_1] the factory ||| [module_2] [module_1]	count=1
arg	[arg_1] the name ||| [arg_1] [arg_2]	count=2
function	address [function_2] ||| [function_2] [function_1]	count=4
class	called with ||| ircclient	count=1
class	daylight saving time ||| offset time zone	count=1
function	[function_1] copying ||| [function_1] [function_2]	count=4
class	write ||| daily log file	count=2
function	the exception which caused ||| error message	count=1
function_arg	format [arg_2] ||| [arg_2] [function_1]	count=2
module	pointing ||| python	count=1
class	each alias and return ||| alias	count=1
function	generated child ||| child with	count=1
function	get a person ||| get person	count=2
function	@param ||| init	count=83
class	which is intended to ||| maildir name generator	count=1
function	[function_1] info ||| [function_2] [function_1]	count=2
function	is made to ||| made	count=1
arg	in data ||| cls data	count=1
function	decorators and the ||| get deprecated	count=1
function	authentication type ||| auth type	count=2
class	file to the ||| file body producer	count=1
function_arg	opaque [arg_2] ||| [function_1] [arg_2]	count=2
module	an ||| runner	count=1
arg	c{name} on [arg] will ||| [arg]	count=1
arg	[arg_1] version ||| [arg_2] [arg_1]	count=16
function	msg_disconnect message ||| ssh disconnect	count=1
class	a heading ||| heading	count=1
module_class	[module_1] [class_2] c{tag} ||| [module_1] [class_2] element	count=4
arg	python objects ||| objects	count=1
class	mailbox change listener @type ||| imailbox imap	count=1
function	to start calling ||| start	count=1
function	which take a ||| parameters	count=1
arg	from ||| default	count=1
module	@return the ||| mail	count=1
class	this ||| deferred	count=1
function	accepted a dcc resume ||| dcc do accept resume	count=1
class	transport is connected to ||| abstract datagram protocol	count=1
function	while key exchange is ||| allowed key exchange	count=1
function	the presence of ||| has key	count=1
function	with a list of ||| get	count=1
class	indicate that [class_2] ||| [class_1] [class_2]	count=1
function	an ip ||| ip	count=1
class	hostname resolution ||| resolution	count=1
arg	or 1 ||| numok	count=1
function	[function_1] a child ||| [function_2] [function_1]	count=3
class	perform an srv record ||| iresolver	count=1
function	colon-separated ascii bytes ||| bytes	count=1
module	a ||| application	count=2
function_arg	has [function_1] [arg_2] ||| [function_1] [arg_2]	count=17
class	key matches the ||| key	count=1
function	per [function_2] ||| [function_1] [function_2]	count=1
arg	access path with mode ||| mode	count=1
function	messages which share an ||| ssh kex dh gex	count=1
function	pack a ||| pack	count=1
function_arg	[function_1] disconnect ||| [arg_2] [function_1]	count=1
module	represents [module] ||| [module]	count=1
function	exponential backoff ||| backoff	count=1
function	sent to this group ||| group	count=1
class	we will stop performing ||| itelnet transport	count=1
class	the message ||| maildir mailbox append message	count=1
module	the first ||| conch	count=1
module	command ||| words protocols	count=1
function_arg	a module [arg_2] ||| [function_1] [arg_2]	count=2
class	peer should ||| itelnet protocol	count=1
function	[function_1] no credentials ||| [function_1] [function_2]	count=1
function	suitable for joining to ||| coerce to filesystem	count=1
module	some polite text ||| python	count=1
arg	an alias ||| memo	count=1
arg	object c{classobj}, ||| classobj	count=1
class	see l{protocol protocol datareceived} ||| dcc file receive basic	count=1
class	authorities to ||| sslcertificate authorities	count=1
class	[class] appearing ||| zsh [class]	count=3
function	warning [function_2] ||| [function_2] [function_1]	count=4
function	on [function] arguments which ||| matching [function]	count=1
arg	port to [arg_2] ||| [arg_1] [arg_2]	count=1
function	arguments and collect ||| collect	count=1
class	calls to this function ||| maildir	count=1
function	line for ||| line	count=1
function_arg	@param name see ||| init name ttl	count=1
function	time return ||| get	count=1
class	smart host ||| smart host smtprelaying manager	count=1
function_arg	_exc_info if [arg_2] ||| [arg_2] [function_1]	count=4
function	all children to ||| to xml	count=1
function	l{none} ||| run operation	count=1
function	inverse ||| inverse	count=1
function	topic to ||| topic	count=1
module	and setup ||| words	count=1
function	removes our [function] so re-add ||| [function]	count=1
function	reverse the ||| reverse log level	count=1
function	implementation where ||| fdimplementation	count=1
arg	[arg] by resolving ||| [arg]	count=3
class	this proxy has ||| transport proxy	count=6
function_arg	coerce [function_1] [arg_2] failure ||| trial exc [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] file filename [arg_2]	count=3
function	to deliver ||| deliver	count=1
arg	incoming mac ||| data mac	count=1
class	from l{_connectedprotocol}, issue ||| resolver	count=1
class	monitoring [class_2] ||| [class_2] [class_1]	count=1
arg	related to c{applicationobject}, which ||| applicationobject	count=1
module_class	the scheduled ||| internet idelayed	count=3
module	the reactor when ||| web	count=1
arg	[arg_1] listen ||| [arg_2] [arg_1]	count=1
function	connection ||| client connection	count=2
function	text to [function_2] ||| [function_2] [function_1]	count=1
function_arg	write some bytes ||| write bytes	count=1
function	that interface ||| interface	count=1
function	[function_1] type ||| [function_2] name [function_1]	count=1
function	key exchange is ||| key exchange	count=1
function	invoke the ||| call	count=1
class	@param address [class] address for ||| [class]	count=1
class	angle ||| angle	count=1
class	satellite information from a ||| nmeaadapter	count=1
function	anonymous login on ||| cb login anonymous	count=1
function_arg	[function_1] maps fully ||| [function_1] prefix [arg_2]	count=1
module_class	[module_1] transport ||| [module_1] [class_2]	count=14
module	on set ||| python	count=1
class	[class_1] a file ||| [class_2] [class_1]	count=2
module	and ||| internet	count=10
arg	pre-built l{servicemanager}, using the ||| jid password	count=1
class	to this function across ||| maildir	count=1
function	[function_1] copying bytes ||| [function_1] [function_2]	count=4
function	agent to sign ||| sign	count=2
class	this failure's type ||| failure	count=1
arg	should not normally be ||| datatype	count=1
function	waiting writes ||| writes	count=1
module	structured arguments for the ||| internet	count=1
function	path entries ||| find entry path	count=1
function	[function_1] remote xml-rpc ||| [function_1] [function_2]	count=1
function	user message ||| irc user	count=2
function	chat ||| chat receive message	count=1
function_arg	@param message an ||| init message	count=2
arg	a c{failure} with some ||| errorclass frames	count=1
module	via ||| protocols	count=1
function	the ||| line	count=1
function	[function] to self ||| [function]	count=2
module	the failure in order ||| conch	count=1
arg	user the ||| user channel data	count=1
function	load the private ||| get private	count=1
module_class	hashed [class_2] ||| [module_1] hashed [class_2]	count=1
class	and ||| ui	count=2
function	copying ||| producing	count=1
function	file ("-" ||| file	count=1
function	or the global reactor ||| reactor	count=1
function	available personal namespaces ||| personal namespaces	count=1
function	receiver ||| receiver	count=3
function	accept response ||| accept	count=1
function	register a callback for ||| callback	count=1
function	log prefix with ||| log prefix	count=2
function	cache on the ||| cache	count=1
class	in this file ||| file	count=1
function	flush the ||| flush	count=1
module	from the server ||| web	count=1
arg	a c{newpath} ||| path newpath encoding	count=1
function	some polite text exhorting ||| get replacement string	count=1
arg	files ||| previousresult files remotepath single	count=1
arg	the caller that ||| failafterfailures	count=1
class	coerce for ||| coerce parameter	count=1
arg	a channel ||| channel reason	count=1
module	calls to this ||| mail	count=1
arg	and password ||| password	count=1
function	l{iprocesstransport} provider ||| force stop process	count=1
class	[class_1] method ||| [class_1] [class_2]	count=2
function	for the consumer a ||| resume producing	count=1
arg	name l{bytes} or l{unicode} ||| ttl	count=1
function	a previously-remembered url ||| root url	count=2
function	the attribute name ||| method name	count=1
function	reading writing or ||| do write or	count=2
function	receive a msg_kex_dh_gex_reply message ||| ssh kex dh gex reply	count=1
function	the deferred has been ||| cancel get	count=1
function	'message' ||| line	count=1
class	and shutdown the pool ||| pool	count=1
arg	a broker ||| broker	count=1
class	connect ||| unixclient endpoint	count=1
function	a chat ||| receive chat	count=1
module	when [module] other side ||| [module]	count=1
function	l{ipv6address} indicating the listening ||| host	count=1
function	mark a [function_2] ||| [function_1] [function_2]	count=9
function	l{ipv4address} or ||| get	count=1
class	filepath's ||| ftpanonymous shell	count=2
arg	of the ||| path	count=1
module	the associated ||| web	count=1
arg	document @param prefixes ||| prefixes	count=1
function	pre-built l{servicemanager}, using ||| service	count=1
function	[function_1] root ||| [function_1] [function_2]	count=5
function	the beginning ||| beginning	count=1
class	conversation and ||| conversation	count=3
arg	given transport ||| class transport	count=1
function	parse an ||| parse	count=2
module_class	[module_1] conversation with ||| [module_1] [class_2]	count=2
class	parsed result ||| formatting parser	count=1
function	type of ||| string type	count=1
function	it resets the ||| reset	count=1
function	provider of that interface ||| interface	count=1
function	all processes this is ||| all	count=1
class	the suite ||| test suite	count=1
class	skip the next ||| call	count=1
module_class	the underlying connection ||| internet bypass tls	count=1
function	determine the log ||| log	count=1
function	exteneded data ||| ssh channel extended data	count=1
arg	of observers ||| observers	count=1
arg	a callback to be ||| callback	count=1
function	signed data ||| cb signed data	count=2
arg	with a broker and ||| broker	count=1
function	[function_1] number ||| [function_2] [function_1]	count=3
function	the same ||| eq	count=1
function	log prefix with some ||| log prefix	count=1
arg	the given queries ||| address queries	count=1
class	a zippath ||| zip map	count=1
function	main ||| main	count=1
function	number and device ||| get device	count=1
arg	1 ||| code resp numok	count=1
class	the ||| reporter	count=1
module_class	open [module_1] [class_2] using c{mode} or for ||| [module_1] [class_2] open mode	count=1
class	processes ||| maildir name	count=1
arg	spawn ||| executable args	count=1
module	all calls ||| mail	count=1
function_arg	i{less than} [arg_2] ||| [function_1] [arg_2]	count=1
class	in ||| path	count=1
class	the xmlstream when ||| authenticator	count=2
module	of old-style classes ||| python	count=2
module	check for the version ||| conch	count=1
function	add a new ||| add	count=5
module	[module_1] [module_2] ||| [module_2] [module_1]	count=94
arg	domain to ||| reactor service domain	count=1
function	with some polite text ||| string	count=1
class	user i ||| user	count=1
arg	a test ||| test	count=1
function	that determines whether ||| name constraint	count=1
arg	privatekeyfilename name ||| privatekeyfilename certificatefilename sslmethod _contextfactory	count=1
arg	and client protocol ||| client port	count=2
function	global reactor ||| maybe global reactor	count=2
function	calculate boolean and of ||| boolean and	count=1
function_arg	item [function_1] [arg_2] 0 then this should ||| [function_1] item [arg_2]	count=1
function	l{ipv6address} ||| get host	count=1
class	test ||| tree reporter	count=1
function	initial client ||| initial	count=1
module_class	[module_1] standard ||| [module_1] [class_2]	count=6
function	[function_1] plugin ||| [function_1] [function_2]	count=1
class	my ||| tuntap port	count=1
function_arg	[function_1] [arg_2] a ||| [function_1] [arg_2]	count=12
arg	url path ||| path	count=1
function	decode ||| decode	count=5
function_arg	@param primary the ||| init primary domains	count=1
function	a c{datetime ||| date and	count=1
arg	host the host ||| host port	count=1
function	new user record to ||| user	count=2
function_arg	[function_1] amplist ||| [function_1] [arg_2]	count=1
function	return the name ||| get	count=1
function	whether a domain is ||| domain	count=1
function	subclass of protocol ||| protocol	count=1
function	the global ||| global	count=1
arg	[arg_1] the relay ||| [arg_2] [arg_1]	count=6
function	running on set the ||| get	count=1
function	a successful anonymous cred ||| cb anonymous authentication	count=1
module_class	[module_1] pool ||| [module_1] httpconnection [class_2]	count=4
class	against ||| iusername md5password	count=1
function	cdata element collect up ||| end cdata	count=1
class	suitable for use ||| credential factory	count=1
module_class	of aliases ||| mail alias	count=1
class	legacy observer [class_2] ||| [class_1] [class_2]	count=1
module	amp ||| protocols	count=1
function_arg	[function_1] the value ||| [function_1] key [arg_2]	count=1
class	this channel exists on ||| channel	count=1
class	we want log levels ||| log	count=1
arg	user [arg_2] ||| [arg_2] [arg_1]	count=6
arg	the directory ||| directory	count=1
module	constructs a pre-built l{servicemanager}, ||| words protocols	count=1
function	a chat ||| receive chat invite	count=1
arg	user ||| user filename port	count=1
class	request to the ||| request	count=2
function	from the attributes ||| from	count=2
arg	response and ||| response method host	count=1
function	api with some ||| get	count=1
function_arg	append given [arg_2] ||| [function_1] key [arg_2]	count=1
arg	an [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=2
class	including its ||| to	count=1
class	all processes reboots etc ||| maildir name generator	count=1
function	status ||| get status	count=2
module_class	[module_1] buffer immediately ||| [module_1] [class_2]	count=2
class	is unconnected from ||| iprotocol factory	count=1
function	basename of ||| sibling	count=1
module	from the running ||| conch	count=1
function	box containing serialized ||| from box	count=1
function	level of an attribute ||| attribute	count=1
function	directory named ||| directory	count=1
class	changed since last write ||| daily log	count=1
function	from ||| get	count=1
function	domain ||| domain	count=1
module	tostring} by base64-encoding the ||| conch	count=1
function	message sent to this ||| message	count=1
function	msg_kexinit message ||| kexinit	count=1
class	which ||| wrapper	count=1
class	the message to the ||| append message	count=1
function	a long ||| long	count=1
function	[function] for ||| is [function]	count=1
arg	[arg_1] refer ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] pair ||| [function_1] callbacks callback errback [arg_2]	count=1
module	l{dnsdatagramprotocol} instance from l{_connectedprotocol}, ||| names	count=1
function	from the message ||| received	count=1
function	[function_1] hard ||| [function_1] [function_2]	count=4
arg	and nonce from the ||| nonce	count=1
function_arg	unexpected authentication [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] and password ||| [arg_1] [arg_2]	count=4
function	this is [function_2] ||| [function_1] [function_2]	count=4
function	and dirty way of ||| and	count=3
function	and puts method ||| add method	count=1
class	return ||| continuous polling	count=1
function	human readable flags ||| human readable	count=2
function	a sequence of ||| sequence	count=2
class	which is ||| generator	count=1
arg	for passing over the ||| inobject	count=1
function	monitored for ||| readers	count=2
function	[function_1] to bad ||| [function_2] [function_1]	count=4
function	initialization has [function_2] ||| [function_2] [function_1]	count=1
arg	overrides any previously ||| k v	count=1
function	flags ||| flags	count=4
function_arg	a message [arg_2] ||| [function_1] [arg_2]	count=1
module	to [module] c{'connection_lost'} state ||| [module]	count=1
function	body has ||| body data received finished	count=1
function	non-blocking socket using self ||| socket	count=1
function	has failed ||| failed	count=1
function	enable options ||| enable remote	count=1
class	amp instance by the ||| amp	count=1
function	user a message sent ||| message	count=1
class	the file ||| file receive	count=2
function_arg	[function_1] message ||| [function_1] user [arg_2]	count=1
class	a parent l{bucket} ||| bucket	count=1
class	deferred has been canceled ||| deferred queue	count=1
function	envelope data for ||| envelope	count=1
class	that we will ||| transport	count=1
function	[function_1] a data ||| [function_1] [function_2]	count=1
arg	text as ||| text	count=1
function	single test ||| test	count=1
function	of the command queue ||| command queue	count=1
module	all of [module] ||| [module]	count=3
function	it as an alternative ||| get replacement string	count=1
function	[function_1] [function_2] ||| [function_1] group [function_2]	count=6
module_class	to this database ||| python shadow database	count=1
function	consumer by pausing ||| pause	count=1
function	start the reactor ||| reactor	count=1
function	[function_1] c{paths} ||| [function_1] [function_2]	count=4
function	connection control [function_2] ||| [function_2] [function_1]	count=1
arg	protocol then initiate ||| proto	count=1
class	the wrapped web context ||| deprecated to current policy	count=1
class	use ||| credential	count=1
function_arg	this group [arg_2] ||| [function_1] message [arg_2]	count=1
module	transport of ||| mail	count=1
function	[function_1] getnewgroups() ||| [function_2] [function_1]	count=1
function	projects ||| iter projects	count=1
module	frames in the ||| web	count=1
function	[function_1] to frame ||| [function_2] body [function_1]	count=2
function	[function_1] the private ||| [function_2] [function_1]	count=1
function	xhdr data for the ||| xhdr	count=1
function	seconds since epoch ||| datetime	count=1
function	to this l{deferred} ||| deferred	count=1
arg	[arg_1] name of ||| [arg_2] [arg_1]	count=2
function	key ||| flat key	count=1
arg	using this ||| cls box	count=1
function_arg	[function_1] address ||| [function_1] [arg_2]	count=6
module	for the ||| words protocols	count=1
function	c{pattern} is c{bytes}, ||| as same type	count=1
arg	an l{httpclientparser} to indicate ||| rest	count=1
module	on [module_2] ||| [module_1] [module_2]	count=1
function	an unexpected success ||| unexpected success	count=4
function_arg	[function_1] file object ||| [function_1] [arg_2]	count=2
arg	received lines ||| line	count=2
arg	declare a ||| modulename	count=1
module	the nodes have the ||| web	count=1
module	to convert the string ||| internet	count=1
class	new l{dnsdatagramprotocol} instance from ||| resolver	count=1
function	and ||| file	count=1
function_arg	[function_1] time seconds ||| [arg_2] [function_1]	count=1
function	[function_1] producer ||| [function_1] [function_2]	count=2
function	disconnect ||| disconnect	count=4
arg	to a channel this ||| channel	count=1
function_arg	[function_1] err ||| [arg_2] [function_1]	count=6
arg	either for ||| source primary other primaryflag	count=1
arg	been populated by c{write} ||| fd limit	count=1
arg	the reporter ||| testname fail	count=1
class	connected ||| connected transport	count=1
class	know if the key ||| key database	count=1
module	return this ||| python	count=3
function	polite text exhorting ||| string	count=1
module	the channel if ||| conch	count=1
function	[function_1] is ||| [function_1] [function_2]	count=4
function	authentication ||| try auth	count=1
function	as a line of ||| as	count=1
arg	[arg_1] l{ireactortcp} provider ||| [arg_1] [arg_2]	count=3
function_arg	[function_1] request but ||| [arg_2] [function_1]	count=2
class	@param ||| dnsserver factory	count=1
class	test is ||| test	count=1
function	two [function] are passed ||| [function]	count=1
function	called by l{unittest testcase} ||| post class cleanup	count=1
function	retrieve the [function_2] ||| [function_1] [function_2]	count=4
function	addreader} ||| add reader	count=2
function	header can be ||| header	count=1
function	this is [function_2] ||| [function_2] [function_1]	count=4
function	return the name of ||| get description	count=1
function	and collect its text ||| text	count=1
arg	connection try ||| connection protocolfactory	count=1
function	[function_1] methods that ||| [function_2] [function_1]	count=4
function	to a ||| to new	count=1
arg	with a hostname ||| hostname	count=1
arg	get 0 or 1 ||| resp numok	count=1
function	share an integer value ||| kex dh gex group	count=1
function	[function_1] no additional ||| [function_2] [function_1]	count=2
function	server endpoint into structured ||| server	count=1
module	emits ||| logger	count=1
module	the factory ||| conch	count=1
function	[function_1] while key ||| [function_2] exchange [function_1]	count=2
function	mechanism ||| set mechanism	count=1
function	of serialized arguments ||| arguments	count=1
function	query and return the ||| query	count=1
class	l{filedescriptor} for ||| glib reactor base	count=3
function	api with ||| get replacement	count=1
function	spwd module if ||| shadow get	count=1
class	scheme ||| iclient	count=1
class	file path ||| file path	count=1
function_arg	@param chatui ||| init group chatui	count=1
class	signal handlers should ||| signal reactor	count=1
class	the daylight saving ||| zone	count=1
function	deferred has been ||| cancel	count=1
function_arg	[function_1] a command ||| [function_1] [arg_2]	count=1
function	set the c{_deprecated_info} ||| get deprecated	count=1
class	initializes ||| key	count=1
arg	serv_type an indication ||| serv_type host serv_name username	count=1
function	server ||| make	count=1
function	any ||| get	count=1
function	connection is lost ||| connection lost	count=2
function	[function_1] opaque ||| [function_1] [function_2]	count=1
function_arg	a list of filepaths [function_1] [arg_2] ||| python file path [function_1] [arg_2]	count=3
function	remove an ||| remove	count=2
arg	c{newpath} that is ||| path newpath encoding	count=1
function	[function_1] bad ||| [function_2] [function_1]	count=7
function	with the ||| with patches	count=1
function	more body data is ||| body data	count=1
arg	mbox ||| mbox msg	count=1
module_class	[module_1] [class_2] into a pair c{ ||| [module_1] [class_2]	count=2
class	address [class] ||| [class]	count=2
class	to be ||| resolver	count=1
arg	int @param fp ||| fp	count=1
arg	c{avatarid} ||| avatarid	count=1
class	members in the group ||| igroup	count=2
arg	[arg_1] argument schema ||| [arg_2] [arg_1]	count=1
class	leaf resource for a ||| iresource	count=1
class	'message' ||| tree	count=1
function_arg	add a [arg_2] ||| [function_1] callbacks callback errback [arg_2]	count=2
module	address [module] ||| [module]	count=1
function	partial xml document ||| xml	count=1
function	locate a callable to ||| locate	count=1
function	a deprecated api with ||| get replacement	count=1
function	[function_1] keys from ||| [function_1] [function_2]	count=2
class	apply each patch ||| monkey patcher	count=1
function	header extract the field ||| extract	count=1
class	the xmlstream when ||| connect authenticator	count=1
class	display my syspath and ||| python path	count=1
class	[class_1] io ||| [class_1] [class_2]	count=1
function_arg	[function_1] this pidfile ||| [arg_2] [function_1]	count=1
arg	fp ||| fp name	count=1
module	to handle the beginning ||| conch	count=1
class	time ||| time	count=2
function	determine the size of ||| file size	count=1
arg	uris to suggested ||| closeelement defaulturi prefixesinscope	count=1
function	is [function] ||| is [function]	count=3
function	key from the key ||| key	count=1
class	entries in this file ||| file	count=1
function	response [function_1] [function_2] ||| [function_1] [function_2]	count=2
function	text exhorting the user ||| get replacement	count=1
module	with this ||| words im	count=1
function	database connection and ||| connection	count=1
class	l{endpoints clientfromstring}, [class] ||| endpoint string parser [class]	count=3
arg	in [arg_2] ||| [arg_2] [arg_1]	count=2
function	return an [function_2] ||| iencoding resource [function_1] [function_2]	count=3
function	get ||| get and clear	count=1
function	root [function_2] ||| [function_2] [function_1]	count=2
class	and ||| base client	count=1
module	using c{*args}, and arrange ||| names	count=1
function_arg	[function_1] osslpkey ||| [function_1] [arg_2]	count=1
function	l{command}'s response ||| response	count=1
class	securing a ||| iopen sslcontext	count=1
class	across all processes reboots ||| maildir	count=1
function	c{_deprecated_info} flag ||| get	count=1
function	user to consider it ||| replacement string	count=1
function	key ||| key received	count=1
module	a portion [module] a ||| [module]	count=1
module	if the given ||| conch	count=1
arg	if uid ||| uid	count=1
function_arg	[function_1] attributes for ||| [arg_2] [function_1]	count=1
class	message to [class_2] ||| [class_2] [class_1]	count=2
function	flag ||| get deprecated	count=1
function	if the process ends ||| process	count=1
arg	a mailbox ||| mailbox	count=1
function	[function_1] frozenset ||| [function_1] [function_2]	count=1
function	report [function_2] ||| application basic profiler [function_1] [function_2] module e	count=1
class	this key ||| key	count=1
function_arg	is the [arg_2] ||| [function_1] connection control header [arg_2]	count=3
function	the value ||| value	count=1
function	modules ||| modules	count=1
function	selected [function_2] ||| [function_2] [function_1]	count=1
arg	path as ||| path	count=1
function	string containing ||| string	count=1
module	if the ||| conch client	count=1
module	read a result from ||| client	count=1
function	object [function_2] ||| [function_2] [function_1]	count=2
module	deprecated ||| python	count=1
class	request or create a ||| irequest	count=1
function	is running on set ||| deprecated	count=1
function	body data ||| body data	count=5
class	the file ||| dcc file	count=1
class	pop3 server ||| pop3factory	count=1
module_class	talking to standard ||| internet standard	count=1
function	the auth [function_2] ||| [function_2] [function_1]	count=2
function	length of a topic ||| topiclen	count=1
arg	a wrapper and the ||| wrapper wrapped	count=1
class	suitable for ||| credential factory	count=1
function	points to ||| islink	count=1
module	pre-built l{servicemanager}, using the ||| words protocols jabber	count=1
function	cleans the current sentence ||| clean current sentence	count=1
function	property as deprecated to ||| deprecated property	count=1
function	continue writing ||| start writing	count=1
class	lock this ||| filesystem lock	count=1
function	generated child ||| child with default	count=1
function	[function_1] state ||| [function_1] [function_2] to	count=1
arg	given function to ||| f	count=1
function	dynamically generated child ||| child	count=1
class	create a ||| digest credential	count=1
arg	iterator to the ||| iterator donedeferred	count=1
class	web context ||| deprecated to current policy	count=1
arg	a hostname and ||| hostname	count=1
function	receive a msg_kex_dh_gex_request message ||| kex dh gex request	count=1
function	to build a ||| build	count=1
function	a deprecated ||| get	count=1
function	it ||| get replacement	count=1
class	indicates a redirect ||| redirect	count=1
function	protocol configured with c{helofallback}, ||| protocol	count=1
function	by its fd ||| fd	count=1
class	write ||| dir dbm	count=1
function	register a ||| register reap	count=1
function	for joining to ||| coerce to	count=1
arg	some data that ||| data	count=1
module	object ||| spread	count=3
function	next file ||| next	count=1
class	a zippath by ||| zip map impl	count=1
function	text exhorting the user ||| replacement	count=1
function	a msg_kex_dh_gex_reply message ||| ssh kex dh gex reply	count=1
class	and shutdown the pool ||| connection pool	count=1
arg	the given consumer ||| consumer	count=1
function	certificate [function_2] ||| [function_1] [function_2]	count=1
function	attribute name on ||| get method name	count=1
module_class	broker [class_2] ||| [module_1] [class_2]	count=2
class	factory ||| negotiation factory	count=1
function	a c{datetime time} object ||| combine date and time	count=1
class	if defined for ||| isaslmechanism	count=1
function	a unix ||| unix	count=1
arg	filesystem ||| fn	count=1
function	some warnings [function_2] ||| [function_2] [function_1]	count=2
function_arg	login [arg_2] ||| [function_1] [arg_2]	count=3
module	message from the ||| mail	count=1
class	the deferred ||| queue	count=1
arg	the given name as ||| name	count=1
function	the user to ||| string	count=1
arg	host a ||| host port timeout	count=1
function	metadata to keep ||| to	count=1
function_arg	verify [arg_2] ||| [function_1] [arg_2]	count=1
function	to the socket ||| socket	count=2
class	scheduled [class_2] ||| [class_1] [class_2]	count=2
function	context ||| context	count=1
function	[function_1] path ||| [function_2] [function_1]	count=3
class	zippath ||| zip map	count=1
class	claimed later by l{descriptor} ||| descriptor exchanger	count=1
function	[function_1] requests ||| [function_2] [function_1]	count=10
function	a [function_2] ||| [function_1] [function_2]	count=2
module	perform the necessary local ||| mail	count=1
module	if the given object ||| spread	count=1
module	indicated that the ||| web	count=1
class	file's [class_2] ||| [class_2] [class_1]	count=2
arg	@param user ||| user channel	count=1
arg	given response ||| response method	count=1
function_arg	leave a channel ||| leave channel reason	count=2
class	get ||| sshsession process protocol	count=1
function_arg	internal get [arg_2] ||| [function_1] [arg_2] nodeid nodeattrs	count=1
module_class	[module_1] [class_2] pair c{ root ext ||| [module_1] [class_2]	count=2
function	the write ||| write	count=1
function	local [function_2] ||| [function_1] [function_2]	count=3
module	called when ||| ssh	count=8
class	could be ||| file	count=1
class	the message as it ||| append message	count=1
class	the path in the ||| file path	count=1
function	to run ||| run	count=1
function	an [function] address ||| [function]	count=1
function	[function_1] copying bytes ||| [function_2] [function_1]	count=4
function	parse common arguments ||| parse	count=1
class	an smtp ||| smtp	count=1
module	the stack if ||| web	count=1
module	a l{key} from the ||| conch	count=1
class	initialization ||| initiating	count=1
function	[function_1] some ||| [function_2] [function_1]	count=1
function_arg	turns [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	by a list ||| by	count=1
function	flags of ||| flags	count=1
function	source line ||| source line	count=2
arg	then the tests ||| recurse	count=1
function	segments between a child ||| segments	count=1
arg	[arg_1] of the ||| [arg_1] [arg_2]	count=1
module	entry with ||| client	count=1
class	line ||| source line element	count=1
class	an exposed method with ||| expose	count=1
function	set values for ||| set	count=1
module	return ||| trial	count=1
module_class	the running [class_2] ||| [module_1] [class_2]	count=2
module	nodes have the ||| web	count=1
function	child resource ||| child with default	count=1
arg	method [arg_2] ||| [arg_1] [arg_2]	count=2
function	unless l{privilegedstartservice} ||| service	count=1
function	time of an ||| time	count=1
function	readable ||| readable	count=1
module	on the global python ||| python	count=1
function	corresponding to this private ||| from string private blob	count=1
class	via amp invoke ||| box dispatcher	count=1
function	text exhorting ||| get replacement string	count=1
function	command state ||| state command	count=2
class	load parameters ||| open ssldiffie hellman parameters	count=1
function	[function_1] prefix for ||| [function_2] [function_1]	count=3
function_arg	a class [arg_2] ||| [function_1] list [arg_2]	count=3
function	invoke it ||| call remote	count=1
function	ends ||| ends	count=1
class	[class_1] authentication ||| [class_2] [class_1]	count=2
function	[function_1] stream server ||| [function_2] [function_1]	count=1
module	pre-processing [module] ||| [module]	count=2
arg	to a channel ||| channel	count=1
function	[function] for ||| [function]	count=7
function	to check against ||| check	count=1
function	iterate ||| iterate	count=1
function	the envelope file for ||| envelope file	count=1
class	webserver ||| options	count=1
class	for it to be ||| resolver	count=1
function	a windows error ||| error	count=1
function	as a string of ||| as	count=1
class	for deletion ||| maildir mailbox	count=1
class	the ||| log file	count=2
function	[function_1] producing ||| [function_2] [function_1]	count=1
arg	iterator to ||| iterator donedeferred	count=1
function	generate the challenge ||| challenge	count=1
arg	[arg_1] and the ||| [arg_2] [arg_1]	count=3
function	amp invoke it ||| remote	count=1
function	constructs a ||| service manager	count=1
module_class	[module_1] l{logpublisher} ||| [module_1] [class_2]	count=4
function	filename [function] ||| [function] local	count=1
function	provider ||| stop	count=1
function	to a [function_2] ||| data [function_1] [function_2] streamid data	count=1
function	the body for ||| body request	count=1
function	returns the [function_2] ||| [function_1] [function_2]	count=4
class	alias to ||| alias	count=2
function	validate the ||| validate	count=2
function	challenge including ||| challenge	count=1
function	to deliver any ||| deliver body	count=1
class	on the endpoint ||| server endpoint service	count=1
function	in a list ||| list	count=1
module	random value suitable for ||| cred	count=1
arg	command over ||| reactor command username	count=1
function	[function_1] response ||| [function_2] [function_1]	count=10
function	state of ||| state	count=1
module	representation of [module] channel ||| [module]	count=1
function	remote xml-rpc c{method} with ||| remote	count=1
function_arg	[function_1] another user ||| [arg_2] [function_1]	count=4
class	of a ||| factory	count=1
function	random ||| generate	count=1
function	resumeproducing} ||| resume producing	count=2
module	fired and the ||| web	count=2
function	its fd [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] [arg_2] to ||| [function_1] to datetime [arg_2]	count=8
function	post an [function_2] ||| [function_1] [function_2]	count=3
function_arg	[function_1] [arg_2] ||| [function_1] test [arg_2]	count=2
module	sending ||| protocols	count=1
arg	constants the only ||| cls level	count=1
class	as ||| client factory	count=1
function	number ||| message count	count=1
function	print all ||| print errors	count=1
function	messages which have ||| messages	count=1
function	recommended subscription ||| opt subscription	count=1
function	set up the ||| set	count=2
function_arg	flags for [arg_2] ||| [arg_2] [function_1]	count=1
function	receive a msg_service_accept message ||| service accept	count=1
arg	an [arg_2] ||| [arg_2] [arg_1]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] function [arg_2]	count=1
class	build news for them ||| news builder	count=1
arg	the given name ||| name default	count=1
function	[function_1] copying ||| [function_2] [function_1]	count=4
arg	first shut ||| reason	count=1
function	the ||| generate	count=1
function	resume processing of ||| resume	count=1
function	resolution has completed no ||| resolution complete	count=1
function	c{importerror} is raised ||| require	count=1
class	suffix ||| log file	count=1
function	line ||| line	count=9
module_class	a the vcs ||| python ivcscommand	count=1
class	connection when ||| connection	count=1
function_arg	[function_1] occurred in ||| [arg_2] [function_1]	count=1
function_arg	from a [arg_2] ||| [arg_2] [function_1]	count=6
function_arg	message to [arg_2] ||| [arg_2] [function_1]	count=1
function	of the python module ||| module	count=1
module	take a deferred that ||| trial	count=1
function	date internally ||| get internal date	count=2
function	[function_1] frozenset using ||| [function_2] [function_1]	count=1
function	to this private ||| string private blob	count=1
module	select and setup ||| words	count=1
class	for inclusion ||| iknown host	count=1
module	random value suitable ||| cred	count=1
function	returning files [function_2] ||| [function_2] [function_1]	count=3
class	build an "official" ||| domain with	count=1
module_class	[module_1] connection ||| [module_1] [class_2]	count=14
function_arg	unix [arg_2] ||| [arg_2] [function_1]	count=2
function	a noop ||| noop	count=2
class	we will ||| itelnet transport	count=1
class	date has ||| log file	count=1
function	all pending requests for ||| cancel connect waiters	count=1
function	allow the receiver to ||| to	count=1
function	[function_1] failed ||| [function_2] [function_1]	count=2
function	of decorators and ||| get	count=1
function	our c{self _wrappedfactory} ||| build	count=1
function	protocol ||| start protocol	count=1
function	body has ||| body data received	count=2
arg	c{query} possibly ||| lastsequenceid	count=1
function	sibling ||| sibling	count=1
arg	an alias of it ||| memo	count=1
function	received a chunk ||| receive data chunk	count=1
function	delete the c{self attributename} ||| delete	count=1
function	spwd module if it ||| shadow get by	count=1
arg	connection ||| connection	count=3
module	an object ||| trial	count=1
function	returns an ||| get host	count=1
function_arg	rich equality [arg_2] ||| [arg_2] [function_1]	count=1
function	returns an ||| get	count=1
class	zsh code ||| zsh arguments generator	count=1
function	end of the ||| end	count=1
module	the same ||| web	count=1
function	connection over ||| make connection	count=1
function	as ||| generate	count=1
function	an unexpected success to ||| unexpected success	count=1
module_class	[module_1] by broker ||| [module_1] [class_2]	count=2
class	consumer by [class_2] ||| [class_2] [class_1]	count=2
arg	l{write} ||| iovec	count=1
function	to start calling boxreceived ||| start	count=1
class	intended ||| maildir name generator	count=1
function_arg	allow [function_1] [arg_2] instance ||| names serial number [function_1] [arg_2]	count=1
class	an l{iprocesstransport} ||| process	count=1
class	random ||| credential factory	count=2
arg	oscaruser ||| wantack autoresponse	count=1
class	the temporary file when ||| file wrapper	count=1
module	flag ||| python	count=1
arg	for data to be ||| data	count=2
class	@param ||| smtpsender factory	count=1
function	contextmanager that replaces stdout ||| stdout	count=1
module	all calls to ||| mail	count=1
function	print 'message' in the ||| line	count=1
class	@type service l{mailservice} ||| smtpfactory	count=1
function	when the channel ||| channel	count=1
function	idle ||| idle	count=1
function	version number ||| version	count=1
function	the ancillary ||| ancillary	count=1
function	split ||| split	count=2
class	[class_1] last ||| python [class_1] [class_2]	count=1
function	[function_1] received ||| [function_2] [function_1]	count=4
function	log prefix ||| get log prefix	count=2
function	print 'message' ||| line	count=1
function_arg	[function_1] opener ||| [arg_2] [function_1]	count=1
class	and ||| sshpublic key database	count=1
arg	group ||| group low high	count=1
function	pythonmodule ||| name	count=1
function	generate a new ||| make	count=1
class	name into ||| name	count=1
class	the [class] in ||| [class]	count=1
class	log ||| history log	count=1
module	the user to ||| python	count=1
class	to store the message ||| message	count=1
function	of supported ||| supported	count=1
function	date [function_2] ||| [function_2] [function_1]	count=2
class	the specified l{methodname} method ||| method	count=1
function_arg	register/unregister an [arg_2] ||| [arg_2] [function_1]	count=4
class	file when ||| file	count=1
arg	asn 1- [arg_2] ||| [arg_2] [arg_1]	count=4
module	and [module] associated file ||| [module]	count=1
function	@return the [function] ||| sent [function]	count=1
function	has succeeded ||| done	count=1
function	running on set ||| get	count=1
function	command to [function] ||| send [function]	count=1
function	string one ||| string	count=1
function_arg	[function_1] [arg_2] ||| [function_1] address [arg_2]	count=2
class	of ||| credential factory	count=2
module	of them that ||| trial	count=1
function	[function_1] a message ||| [function_1] group [function_2]	count=1
function	to enable [function_2] ||| [function_1] [function_2]	count=1
arg	that c{deferred} ||| deferred	count=1
function	will ||| wont	count=1
module	pathentry this is ||| python	count=1
function	[function_1] sequence is ||| [function_1] [function_2]	count=1
module	an instance ||| trial	count=1
function	in ||| in	count=9
arg	prefixes dictionary that maps ||| prefixes	count=1
module	[module] is ||| [module]	count=1
function	doc chunks for ||| doc make chunks	count=1
arg	a message on ||| data ancillary flags	count=1
function	a function is an ||| function	count=1
function_arg	[function_1] a domain ||| [arg_2] [function_1]	count=1
module_class	[module_1] record ||| [module_1] [class_2]	count=8
function	log ||| log formatter	count=2
function	compute a hash of ||| key hash	count=1
function	of hard ||| of hard	count=2
class	will fire @rtype c{float} ||| delayed	count=1
class	all calls to ||| maildir	count=1
class	key see ||| key	count=1
function	of "list modes" a ||| maxlist	count=1
function	display a message sent ||| show message	count=1
function	received either deliver ||| received	count=1
class	l{istreamclientendpoint} provider ||| endpoint	count=1
class	send ||| sshtransport base	count=1
function	a getattr method ||| getattr	count=1
class	is intended to ||| maildir	count=1
arg	resolver return a resolver ||| resolver	count=1
function	issue a new request ||| request	count=1
function	[function_1] conversation ||| [function_2] [function_1]	count=1
arg	network message is ||| broker message args kwargs	count=1
class	file's ||| zip path	count=1
class	it to be ||| resolver	count=1
module	[module] string implementation ||| [module]	count=1
function	corresponding to this private ||| private blob	count=1
class	unconnected from a port ||| iprotocol	count=1
arg	to indicate the ||| width height	count=1
function	mark a message for ||| delete message	count=3
arg	to a file ||| file contextfactory	count=1
function	a noop command ||| noop	count=1
function	exhorting ||| get	count=1
module_class	[module_1] server response ||| [module_1] [class_2]	count=2
function	return credentials checkers for ||| get credentials checkers	count=1
function_arg	[function_1] [arg_2] short response is expected ||| [function_1] [arg_2]	count=2
class	values ||| protocol	count=1
arg	nonce from ||| nonce clientip	count=1
function	source code surrounding the ||| source	count=1
function	spwd module ||| shadow get	count=1
arg	request the l{irequest} ||| request	count=1
function	iterate all [function_2] ||| [function_1] [function_2]	count=4
class	if the key matches ||| key database	count=1
function	remote xml-rpc ||| remote	count=1
function	[function_1] is ||| [function_2] [function_1]	count=5
arg	i{host} header based on [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=6
arg	function in the ||| f	count=1
module	test-failing exception when that ||| trial	count=1
arg	msg_channel_open request payload : ||| packet	count=1
class	[class_1] state ||| [class_2] [class_1]	count=6
function	store [function_2] ||| [function_1] [function_2]	count=3
class	be ||| generator	count=1
arg	creator the l{_isshconnectioncreator} ||| creator command protocolfactory commandconnected	count=1
class	io ||| io	count=1
arg	the given queries ||| address queries timeout	count=1
class	wrapped web context ||| policy	count=1
function_arg	[function_1] a connection ||| [arg_2] [function_1]	count=1
function	[function_1] directory ||| [function_1] [function_2]	count=11
function	consider it as ||| string	count=1
class	the token ||| deferred semaphore	count=1
function	not a connection control ||| connection control	count=1
class	this lock this method ||| filesystem lock	count=1
function	format a list ||| format uidlist	count=1
class	unixtime to ||| daily log	count=1
function_arg	write a datagram ||| write datagram addr	count=2
module	the given message ||| mail	count=1
function	chat ||| chat	count=3
class	is conversing ||| conversation	count=1
function	active ||| stop reading and writing	count=1
function	[function_1] in the ||| [function_2] [function_1]	count=1
class	this formatting state ||| formatting state	count=2
function	[function_1] anonymous ||| [function_1] [function_2]	count=2
function	its text data ||| text	count=1
module	it using ||| names	count=1
module	messages related [module] ||| [module]	count=1
function	the display ||| display	count=2
arg	to a publisher i'll ||| publisher	count=1
function	with detailed locals ||| detailed	count=1
function	method to use to ||| method	count=1
module	setup authentication ||| words	count=1
arg	c{value} when c{patch} is ||| value	count=1
function	if ||| get deprecated	count=1
function	pre-built l{servicemanager}, using ||| build service	count=1
module	protocol to handle the ||| conch	count=1
function	twisted deprecation ||| get	count=1
function	the type of ||| string type	count=1
function	all methods ||| accumulate methods	count=2
arg	reconnecting subclasses should call ||| reconnecting	count=1
arg	authorization [arg] ||| path [arg]	count=3
arg	file directly ||| file	count=1
function	[function_1] setting up ||| [function_1] port [function_2]	count=1
function	was made ||| made	count=1
arg	connector connect ||| connector	count=1
arg	a new l{connectionpool} ||| dbapiname	count=1
module	is installed if so ||| internet	count=1
module	is [module_2] ||| [module_1] [module_2]	count=1
arg	occurred in response to ||| failure	count=1
class	the date has changed ||| file	count=1
function	export the ||| export	count=1
function	the ||| call remote	count=1
function	side requested a channel ||| channel	count=1
module	key for [module] no more ||| [module]	count=1
function	from the server ||| received	count=1
function	list query return ||| list	count=1
arg	connection try to ||| connection protocolfactory	count=1
class	module ||| module	count=2
module	this user ||| words	count=1
function	use in a list ||| list	count=1
class	skip the ||| looping call	count=1
class	has changed since last ||| daily log	count=1
function	to a chat ||| chat invite	count=1
arg	@return c{true} if c{obj} ||| obj	count=1
function	exchange ||| kex	count=1
module	next message ||| mail	count=1
function	a key ||| key	count=1
class	descriptor will use to ||| file descriptor	count=1
function	import a module ||| module	count=1
arg	fromemail ||| fromemail	count=1
function	clear the ||| clear	count=1
function	open a ||| open	count=3
function	should be logged ||| should log event	count=1
function_arg	[function_1] binaryboxprotocol's transport ||| [function_1] to [arg_2]	count=1
function	nonce parameter of ||| nonce	count=1
module	for it ||| names	count=1
class	infinite redirection exception ||| infinite redirection	count=2
function	command state in ||| state command	count=2
function	and a representation of ||| repr	count=1
arg	[arg_1] normally be ||| [arg_2] [arg_1]	count=1
function	prefix as ||| prefix	count=1
class	the date has changed ||| daily log file	count=1
arg	the given path ||| path offset	count=2
function	main wx/twisted [function_2] ||| [function_2] [function_1]	count=1
function	make a ||| make producer	count=1
module_class	that the [class_2] ||| [module_1] [class_2]	count=4
function	the given header in ||| header received	count=1
function	as ||| data	count=1
module_class	for this request ||| web request	count=1
arg	interpret the response to ||| response	count=1
function	key ||| has key	count=1
function	writing or was ||| do write or	count=2
class	stop ||| file descriptor	count=1
module	key for [module] no ||| [module]	count=1
class	l{deferredlist} ||| deferred list	count=1
module	this function across ||| mail	count=1
function	skip reason set ||| skip	count=1
arg	c{deferred} does ||| deferred	count=1
arg	given path this ||| path protocol offset	count=1
arg	offered file via ||| user file port resumepos	count=1
module	close the ||| web	count=1
class	the key matches the ||| key database	count=1
arg	of observers this ||| observers	count=1
arg	hostname and port ||| hostname port	count=3
module_class	in text lines ||| mail text message	count=1
class	this publisher ||| publisher	count=1
class	parent l{bucket} ||| bucket	count=1
class	socket ||| socket	count=3
function_arg	[function_1] representation of ||| [function_1] [arg_2]	count=3
module	is called ||| internet	count=1
arg	us a message in ||| user message	count=1
class	i close the file ||| dcc file	count=1
class	the test case ||| test case	count=1
function_arg	[function_1] generated ||| [arg_2] [function_1]	count=1
function	send buffer for this ||| send buffer	count=2
arg	the physical ||| domainurl	count=1
class	the task completed with ||| append message task	count=1
function_arg	[function_1] particular perspective ||| [arg_2] [function_1]	count=1
function	key exchange ||| allowed key exchange	count=2
arg	a user [arg_2] ||| [arg_2] [arg_1]	count=5
function	reactor iteration ||| reactor	count=1
arg	byte string into this ||| strio length	count=1
module	object [module] wrap currently ||| [module]	count=1
arg	signed with ||| distinguishedname format digestalgorithm	count=1
module	this is ||| protocols	count=1
function	reactor ||| reactor	count=9
arg	given consumer this ||| consumer	count=1
function	the log [function_2] ||| [function_1] [function_2]	count=4
arg	name [arg_2] ||| [arg_2] [arg_1]	count=10
function	the sub-messages of ||| parts	count=1
arg	called by an l{httpclientparser} ||| rest	count=1
arg	a c{newpath} that ||| path newpath encoding	count=1
class	authorities ||| sslcertificate authorities	count=1
function	from the given certificate ||| certificate	count=1
function	a new request via ||| request	count=1
function	naptr ||| naming authority pointer	count=2
class	channel to run this ||| channel	count=1
arg	given response and ||| response method	count=1
function	[function_1] for ||| [function_2] payload [function_1]	count=1
module_class	sent when [class_2] ||| [module_1] [class_2]	count=2
arg	of local files ||| previousresult files remotepath	count=1
module	in ||| python	count=2
function_arg	left [arg_2] ||| [function_1] [arg_2]	count=2
class	method ||| ipositioning receiver	count=3
module	the client ||| web	count=1
arg	and a locally-unique id ||| luid dorefcount	count=1
function	a new [function_2] ||| [function_2] [function_1]	count=5
function	[function_1] and a ||| [function_1] [function_2] domains	count=6
arg	parameters ||| params	count=1
class	see l{rrheader ||| rrheader	count=1
function	a symlink ||| link	count=1
function	constructs ||| service manager	count=2
arg	tuple containing the host ||| host	count=1
arg	[arg] is already ||| [arg]	count=3
arg	@param path the path ||| path	count=2
class	message as ||| maildir mailbox append message	count=1
function	box containing serialized values ||| box	count=1
function	snapshot of all ||| get snap shot	count=1
module	print 'message' in ||| trial	count=1
class	l{_connectedprotocol}, ||| resolver	count=1
function	the size of ||| file size	count=1
arg	[arg_1] or more ||| [arg_2] [arg_1]	count=5
class	the reactor ||| reactor	count=2
class	an l{_isshconnectioncreator} provider ||| endpoint	count=1
function	returns an l{ipv4address} or ||| get	count=1
arg	following ||| uri headers bodyproducer	count=1
function	[function_1] key ||| [function_1] [function_2]	count=2
module	process's ||| internet	count=1
class	name of my class ||| port	count=2
function_arg	msg_kex_dh_gex_init message [arg_2] ||| [arg_2] [function_1]	count=1
module	the avatar ||| conch	count=1
module	parses partial visible satellite ||| positioning	count=1
class	test [class_2] ||| [class_2] [class_1]	count=1
function	to uncache [function_2] ||| [function_2] [function_1]	count=4
class	called when an ||| protocol	count=1
module_class	[module_1] frame ||| [module_1] [class_2]	count=2
function_arg	ssi server [arg_2] ||| [function_1] [arg_2]	count=4
function	deprecation ||| get deprecated	count=1
function	particular authentication [function_2] ||| [function_2] [function_1]	count=1
module	datagram with the ||| pair	count=2
function	this the end ||| end	count=1
arg	filename to ||| k	count=1
function	handler previously registered ||| handler	count=1
arg	originates ||| helo origin	count=1
function	changed since last ||| should	count=1
module	associated with this ||| words im	count=1
class	[class_1] set checks ||| [class_2] [class_1]	count=2
function	over tcp ||| loopback tcp	count=1
function	our channel request ||| channel	count=1
function	from list of disconnect ||| on disconnect	count=1
module	file at this ||| python	count=1
function	[function_1] all keys ||| [function_1] [function_2]	count=1
function	path entries ||| path	count=1
function	pass me an ao [function_1] [function_2] representation ||| [function_1] [function_2] ao	count=1
arg	text to the ||| text	count=1
function	to the specified ||| to	count=2
class	signal handlers if c{self ||| signal reactor mixin	count=1
module_class	[module_1] agent ||| [module_1] [class_2]	count=9
function	represents different [function_2] ||| [function_2] [function_1]	count=2
arg	a message to ||| message	count=4
function	enable [function_2] ||| [function_1] [function_2]	count=1
class	group conversation and displays ||| igroup conversation	count=1
function	buffered events to ||| replay to	count=1
function	of method names that ||| method names	count=1
module	cursor to the ||| conch	count=1
arg	an optional message ||| message	count=1
class	satellite information ||| nmeaadapter	count=1
function	failure to the ||| failure	count=1
function_arg	[function_1] channel ||| [function_1] kickee [arg_2]	count=1
class	a hashed [class_2] ||| [class_2] [class_1]	count=1
class	of a www-authenticate challenge ||| digest credential factory	count=1
function	classes to new-style classes ||| style	count=1
arg	path the path ||| path	count=2
arg	for a key ||| key	count=1
function	connects a ||| listen	count=1
function	string size of ||| size	count=1
function	the object it is ||| deprecated	count=1
arg	child resource to ||| path child	count=1
function_arg	convert [function_1] [arg_2] to ||| [function_1] [arg_2]	count=1
function	the root [function_2] ||| [function_2] [function_1]	count=1
function	i{sigchld} handler ||| handler	count=1
class	the ||| looping	count=2
function_arg	[function_1] the xml ||| [arg_2] [function_1]	count=2
class	send ||| dnsserver factory	count=1
function	failed ||| fail	count=1
class	we ||| itelnet	count=1
function	name/domain object pair from ||| popitem	count=1
arg	alias of it ||| memo	count=1
function	connection is made to ||| connection made	count=1
function	[function_1] observer for ||| [function_1] [function_2]	count=6
arg	protocol to ||| protocol	count=1
module	list of decorators and ||| python	count=1
function	reading writing or ||| write or	count=1
function	we will stop performing ||| wont	count=1
function	return an [function_2] ||| [function_2] [function_1]	count=6
function	the given signal c{signalid} ||| signal	count=1
function	the ancillary data payload ||| ancillary	count=1
function	c{calllater} callback this callback ||| call later	count=1
function	and return l{none} ||| run operation	count=1
module	the test unless ||| trial	count=1
class	path in the ||| file path	count=1
class	to be unique ||| maildir name	count=1
class	the next iteration and ||| looping	count=1
class	[class_1] c{key} it ||| [class_2] [class_1]	count=4
function	[function_1] opaque to ||| [function_1] [function_2]	count=1
class	mark ||| maildir mailbox	count=1
arg	a line of the ||| line	count=2
class	'key' ||| insensitive	count=1
class	the message as ||| message task	count=1
class	transport ||| worker transport	count=1
function	sign the given ||| sign data	count=1
class	in addition to ||| ibody producer	count=1
module	for [module] ||| [module]	count=12
arg	reactor an [arg_2] ||| [arg_2] [arg_1]	count=4
arg	given response ||| response	count=1
class	if the key matches ||| sshpublic key	count=1
arg	l{localworkeramp} instance iterating the ||| testcases cooperate	count=1
arg	[arg_1] and ||| [arg_2] [arg_1]	count=4
function_arg	[function_1] and key ||| [function_1] hostname [arg_2]	count=1
arg	mbox a ||| mbox msg	count=1
module	install the ||| internet	count=1
class	task completed with a ||| message task	count=1
module	c{*args}, and arrange ||| names	count=1
class	the service ||| client machine	count=1
module	the same integer value ||| conch ssh	count=1
arg	reactor an l{ireactorfdset} ||| reactor	count=1
class	using c{*args}, and ||| resolver	count=1
arg	subclasses must implement ||| instring	count=1
class	next iteration and ||| looping call	count=1
function	as densely as possible ||| brief	count=1
function	long ||| long	count=1
function	text exhorting the ||| get replacement string	count=1
function	status change [function_2] ||| [function_2] [function_1]	count=1
class	file path refers ||| ifile path	count=1
class	the mailbox ||| list mailbox	count=2
function_arg	[function_1] ampprotocol ||| [function_1] [arg_2]	count=1
arg	@type file ||| file consumer	count=1
function	nonce parameter of a ||| nonce	count=1
arg	[arg_1] communicate with ||| [arg_2] [arg_1]	count=2
function	name/domain ||| popitem	count=1
arg	object c{classobj}, returns ||| classobj prefix	count=1
module_class	the mailbox ||| mail maildir mailbox	count=1
function	[function_1] to prefix ||| [function_2] [function_1]	count=2
function	send a [function_2] ||| [function_1] group [function_2]	count=3
function	from a ||| from string	count=2
class	since ||| log	count=1
arg	is of the given ||| name	count=1
function	passed to traceback ||| traceback	count=1
module_class	[module_1] process ||| [module_1] [class_2]	count=12
function	this protocol ||| start protocol	count=1
function_arg	[function_1] a channel ||| [function_1] [arg_2]	count=5
function	[function_1] serialized arguments ||| [function_1] [function_2]	count=1
function	[function_1] reference ||| [function_1] [function_2]	count=1
arg	l{localworkeramp} ||| testcases cooperate	count=1
function	as a processor for ||| opt processor	count=1
function	rotate when ||| rotate	count=2
function	deprecated api with some ||| get replacement	count=1
function_arg	key for [arg_2] ||| [function_1] [arg_2]	count=1
module	a protocol after the ||| web	count=1
class	with this conversation ||| conversation	count=1
function	datagram ||| datagram	count=1
function	end [function_2] ||| [function_2] [function_1]	count=8
class	we want log ||| log level	count=1
module	[module] list ||| [module]	count=1
class	create a ||| sslclient connection creator	count=1
function	a module ||| module	count=1
module	c{rest} using the ||| conch	count=1
function	endpoint ||| endpoint	count=1
function	like a string split ||| split	count=1
function	documentation string describing the ||| method help	count=1
function	the above mapping adding ||| level mapping	count=1
function	[function_1] anonymous cred ||| [function_2] [function_1]	count=2
function	two [function] are ||| [function]	count=1
arg	ismoduleallowed modulename ||| modulename	count=1
module	resets them when it ||| conch	count=1
function	handle a 'form ||| handle	count=1
arg	to be returned ||| nonce clientip	count=1
function	writing ||| do write	count=1
function	ends in ||| ends in	count=2
function	quick and dirty way ||| and	count=3
class	initialization ||| initializer	count=1
function_arg	a msg_userauth_failure [arg_2] ||| [arg_2] [function_1]	count=1
function	port [function_2] ||| [function_2] [function_1]	count=1
function	rpy ||| script	count=1
class	on the service ||| client machine	count=1
module	xml stream ||| words protocols jabber	count=2
class	request to the given ||| request	count=2
module	processes reboots etc ||| mail	count=1
module	it is running on ||| python	count=1
function	and dirty [function_2] ||| [function_2] [function_1]	count=5
class	sending messages ||| box	count=1
function	a single list ||| list	count=1
arg	a test raises ||| test	count=1
class	path the ||| path	count=1
class	intervals ||| looping call	count=1
arg	mac ||| data mac	count=1
function	create a pathentry ||| init	count=1
function	[function_1] sent ||| web xforwarded for request [function_2] [function_1]	count=3
class	task completed ||| maildir mailbox append message task	count=1
class	all processes reboots ||| maildir name	count=1
module	initializes a ||| conch	count=1
module_class	if the [class_2] ||| [module_1] [class_2]	count=4
function	snapshot ||| get snap shot	count=1
module_class	line this [class_2] ||| [module_1] [class_2] element	count=2
function	of the read connection ||| read connection	count=1
function	run in [function_2] ||| [function_1] [function_2]	count=2
class	message ||| maildir mailbox append message	count=1
function_arg	push a line ||| push line	count=2
function	it resets the delay ||| reset delay	count=1
arg	given namespaces ||| filename globals locals	count=1
class	indicates ||| ihalf closeable descriptor	count=1
function	collect its text data ||| text	count=1
function_arg	and of [arg_2] ||| [arg_2] [function_1]	count=1
function	receive bio ||| receive bio	count=1
function	partial visible ||| fix	count=1
function_arg	a channel [arg_2] ||| [arg_2] [function_1]	count=3
function	invoke ||| call remote	count=1
function	return ||| get public	count=1
arg	the attributes for ||| attrs	count=1
class	to be unique across ||| maildir name	count=1
function	which take ||| parameters	count=1
function_arg	initialize a [arg_2] ||| [function_1] site [arg_2]	count=1
function	[function_1] the stream ||| [function_2] [function_1]	count=1
function	changed the topic ||| topic updated	count=3
function	either ||| coordinate this task	count=1
function	is stopped either ||| stopped	count=1
class	if the type of ||| with	count=1
function	[function_1] options to ||| [function_1] [function_2]	count=2
arg	client protocol to a ||| factory timeout	count=1
function	result synchronously ||| blocking call	count=1
function	over tcp ||| tcp	count=1
function	retrieve the list of ||| get	count=2
function	malformed authentication challenge ||| esmtp authmalformed challenge	count=3
module	a testcase ||| trial	count=2
module	partial ||| positioning	count=1
class	by this [class_2] ||| [class_1] [class_2]	count=1
module	this may ||| internet	count=1
module	[module] vcs ||| [module]	count=1
function	[function_1] code ||| [function_1] [function_2]	count=4
module	across all calls ||| mail	count=1
module	for [module] no more ||| [module]	count=1
function	xml as a ||| xml	count=1
module	information from a ||| positioning	count=1
module	directory of this ||| python	count=1
function	the value of the ||| value	count=1
function	the credentials ||| credentials	count=1
function_arg	[function_1] opener ||| [function_1] [arg_2]	count=1
module	select and setup authentication ||| protocols	count=1
function_arg	get [arg_2] ||| [arg_2] [function_1]	count=13
arg	digesthash ||| digesthash	count=1
class	task completed with a ||| task	count=1
class	if any and ||| base	count=1
module	string ||| protocols jabber	count=2
function	current failure [function_2] ||| [function_2] [function_1]	count=1
function	initial client [function_2] ||| [function_2] [function_1]	count=1
function_arg	the same object ||| eq other	count=1
module_class	this file ||| python file path	count=2
arg	time ||| time	count=1
function	a ptr ||| pointer	count=1
function	an l{ipv4address} or l{ipv6address} ||| host	count=2
function	malformed authentication [function_2] ||| [function_2] [function_1]	count=1
arg	c{deferred} ||| deferred	count=2
function	server's overview format ||| overview request	count=1
module	the clients wants ||| conch ssh	count=1
arg	scheme host name and ||| scheme host	count=1
class	[class_1] observer ||| [class_1] [class_2]	count=1
function	find the failure ||| find failure	count=3
function	format a list of ||| format	count=4
arg	client ||| client	count=7
class	xmlstream when the ||| authenticator	count=2
function_arg	with [arg_2] ||| [arg_2] [function_1]	count=4
function	[function_1] expected failure ||| [function_2] [function_1]	count=1
arg	username the name ||| username password	count=1
module	report the ||| mail	count=1
class	since last ||| daily log	count=1
function	openssl cipher [function_2] ||| [function_2] [function_1]	count=1
arg	constructs a ||| jid	count=1
function_arg	[function_1] information dictionary ||| [arg_2] [function_1]	count=2
function	one stat ||| cmd stat	count=1
function	to ||| write to	count=1
module	key ask the user ||| conch	count=1
class	in the group ||| group	count=2
arg	a filename to ||| k	count=1
function	remove from ||| remove	count=1
class	when each ||| only receiver	count=1
arg	the filename of a ||| filename	count=2
function	and render it ||| render	count=1
class	l{agent} ||| agent	count=2
function	[function_1] private ||| [function_2] [function_1]	count=1
class	path ||| path	count=15
module	root element ||| xish	count=2
arg	module ||| module	count=2
class	log levels to ||| log level	count=1
module_class	this file ||| python ifile	count=1
class	if the log ||| log	count=1
function	the socket and its ||| collect socket	count=1
function	a string for ||| string	count=1
module	the available ||| mail	count=1
function	a gsv sentence ||| gsv	count=1
function	the connection is started ||| connection	count=1
class	this domain or ||| abstract maildir domain	count=1
module_class	unparsed [class_2] ||| [module_1] [class_2]	count=4
function	[function_1] logging to ||| [function_2] [function_1]	count=1
module	to serialize ||| spread	count=1
class	all processes ||| name	count=1
function	by l{unittest testcase} after ||| cleanup	count=1
function_arg	[function_1] buddyid == ||| [arg_2] [function_1]	count=4
class	offset ||| fixed offset	count=1
arg	for a domain ||| domain	count=1
function	returning files and directories ||| files and directories	count=1
function	idle workers as expressed ||| waiters	count=1
function	parse a string ||| parse	count=1
function	from ||| received	count=9
function	body of this ||| body	count=1
function	add an ||| add item	count=1
arg	hostname ||| resolutionreceiver hostname	count=1
module	to the ||| conch client	count=1
arg	a l{node} which is ||| newchild oldchild	count=1
module	of decorators and the ||| python	count=1
module_class	and process ||| internet process	count=1
function_arg	with [arg_2] ||| [function_1] stream [arg_2]	count=1
arg	of the decorators are ||| decorators	count=1
function	response data [function] ||| write data [function]	count=2
class	amp ||| dispatcher	count=1
function_arg	[function_1] code ||| [arg_2] [function_1]	count=1
function	connection to ||| no connection	count=1
class	l{_isshconnectioncreator} provider which will ||| endpoint	count=1
arg	response ||| response method uri	count=1
module	perform the ||| mail	count=1
function	as much ||| some	count=1
function	l{defer deferred} notification ||| when done	count=1
module	with the ||| web	count=2
arg	path the path as ||| path	count=1
class	the ||| initiating initializer	count=1
arg	exit status ||| status	count=1
arg	query to a server ||| query	count=1
arg	group for ||| group	count=1
function	[function_1] uid ||| [function_2] [function_1]	count=1
class	different node ||| node	count=1
arg	the domain ||| reactor service domain factory	count=1
function	[function_1] type ||| [function_1] [function_2]	count=5
class	@param address [class] ||| [class]	count=1
module	pack ||| conch ssh	count=1
function	private part of ||| private	count=1
function	of bytes [function_2] ||| web xforwarded for request [function_2] [function_1]	count=1
class	the agent ||| sshagent client	count=1
function	to load the private ||| get private	count=1
function	iteration per reactor ||| reactor	count=1
function	a getattr method to ||| getattr	count=1
function	a pre-built l{servicemanager}, ||| build	count=1
class	this [class] to the ||| [class]	count=1
class	an authentication agent if ||| auth	count=1
function	a connection ||| client connection	count=2
function	endpoint from a ||| from	count=1
module_class	[module_1] signal handlers ||| [module_1] [class_2]	count=4
function	an iterator over ||| iter	count=1
function_arg	@param filename the ||| init filename	count=1
class	of an existing ||| mem cache protocol	count=2
function	of a www-authenticate challenge ||| generate	count=1
class	a ||| sshpublic key	count=1
function	[function_1] line ||| [function_2] [function_1]	count=8
function	to ||| get replacement	count=1
function	string in the ||| string	count=2
class	this will try ||| iconnector	count=1
function	the hash of the ||| hash	count=1
function	underlying ||| connection	count=1
function_arg	a file [arg_2] ||| [arg_2] [function_1]	count=2
function	factory [function_2] ||| [function_2] endpoint [function_1]	count=1
class	a random value suitable ||| factory	count=1
class	time in the wire ||| time	count=1
function	[function_1] an event ||| [function_2] [function_1]	count=3
function	me to special-case your ||| to publish	count=1
function	alternative ||| replacement string	count=1
function	a connection attempt ||| client connection	count=1
function	expected failure to the ||| expected failure	count=1
function_arg	the topic [arg_2] ||| [function_1] updated user channel [arg_2]	count=1
function	get a ||| get	count=20
function	[function_1] messages ||| [function_1] [function_2]	count=1
function_arg	call a [arg_2] ||| [arg_2] [function_1]	count=1
function	was skipped for c{reason} ||| add skip	count=1
module	method is ||| spread	count=2
class	initializes ||| sshpublic key	count=1
function	l{bucket} corresponding to the ||| bucket for	count=1
module	date ||| python	count=1
arg	a filename to get ||| k	count=1
function	minutes seconds tuple this ||| minutes seconds	count=1
function	or retrieve ||| get component	count=1
arg	up a domain name ||| name	count=1
arg	the chat ||| chat	count=3
function	it as ||| get replacement string	count=1
function	request so that it ||| request	count=1
arg	[arg_1] port ||| [arg_2] factory backlog [arg_1]	count=2
module	method is called ||| spread	count=2
function	current ||| current	count=1
class	across ||| name	count=2
function	successfully posted to ||| post	count=1
arg	nonce ||| nonce	count=1
function	to ||| to filesystem	count=1
module	by the ||| web	count=2
function	wrap it to handle ||| handle	count=1
arg	bits bits as possible ||| bits	count=1
function	identity ||| opt identity	count=2
function	reset the number of ||| reset	count=1
function_arg	[function_1] [arg_2] ||| [function_1] data [arg_2] data	count=4
module_class	[module_1] [class_2] ||| [module_1] oscar [class_2]	count=1
function	mapping adding ||| level mapping	count=1
module	from the server gotoverview() ||| news	count=1
class	string ||| generator	count=1
function	connected ||| connection	count=1
arg	status [arg_2] ||| [arg_1] [arg_2]	count=1
function	the default appropriate ||| default log	count=1
class	be ||| maildir name	count=1
function	open [function_2] ||| [function_1] [function_2]	count=5
class	netstring has ||| netstring receiver	count=1
arg	a given increment ||| streamid increment	count=1
class	of the ||| public key	count=1
class	key matches the user ||| key database	count=1
function	sending messages via ||| remote	count=1
function	the payload of a ||| payload	count=1
function	to format a string ||| format	count=1
module	user ||| python	count=1
function_arg	[function_1] be importable ||| [function_1] imported [arg_2]	count=3
class	a ||| client	count=1
function_arg	[function_1] node ||| [function_1] [arg_2] nodeid nodeattrs	count=2
arg	file descriptor ||| fd request	count=1
class	monitoring ||| monitoring	count=3
module_class	[module_1] [class_2] unless c{_nomorewritesexpected} has been ||| [module_1] [class_2]	count=2
arg	of the given interface ||| interface	count=1
class	some ||| memory worker	count=1
arg	the domain to ||| domain factory	count=1
function	to our c{self _wrappedfactory} ||| build protocol	count=1
class	when ||| receiver	count=1
function	pipe ||| pipe	count=1
class	has changed since ||| daily log	count=1
function	that ||| wont	count=1
function	fragment of shell ||| shell	count=1
function	get the response to ||| get response	count=1
module_class	[module_1] coerce ||| [module_1] [class_2]	count=2
class	path with [class_2] ||| [class_2] [class_1]	count=2
function	a stat response ||| stat response	count=2
function	discard the reactor ||| reactor	count=1
class	for ||| box	count=1
class	new win32 event ||| win32reactor	count=1
arg	source ||| source	count=1
function	'message' ||| end line	count=2
function	[function_1] [function_2] ||| iencoding resource [function_1] [function_2]	count=8
class	skip ||| looping	count=1
arg	a function in the ||| f	count=1
function	quick and ||| and	count=3
class	using this pidfile ||| ipidfile	count=1
function	bytes to its window ||| ssh channel window adjust	count=1
class	checks ||| synchronous	count=2
module_class	[module_1] log ||| [module_1] [class_2]	count=2
function_arg	[function_1] chatui ||| [arg_2] [function_1]	count=2
function	[function_1] c{paths} ||| [function_2] [function_1]	count=4
arg	l{servicemanager}, using ||| jid password	count=1
function	when a position is ||| position	count=1
class	reject attempts ||| wsgiresource	count=1
function	parses ||| fix	count=1
function	path ||| entry path	count=1
arg	more python objects ||| objects	count=1
arg	accountname a name to ||| accountname	count=1
function	to [function_2] ||| exc info or failure [function_1] [function_2]	count=1
function_arg	a list [arg_2] ||| [function_1] [arg_2]	count=1
function	a previously-remembered [function_2] ||| [function_2] [function_1]	count=1
arg	byte string into ||| strio	count=1
arg	set of observers ||| observers	count=1
function_arg	[function_1] response ||| [function_1] [arg_2]	count=1
function_arg	method c{name} the ||| method name	count=1
function	peer side of this ||| peer	count=1
class	[class_1] manager ||| [class_2] [class_1]	count=6
function_arg	process [arg_2] ||| [arg_2] [function_1]	count=3
arg	response and ||| response	count=1
function	a ctcp reply ||| ctcp make reply	count=1
function	for the presence ||| has key	count=1
function	message type may ||| message type	count=2
class	canceled ||| queue	count=1
function	is ||| fetch	count=1
function	already added key object ||| agentc sign	count=1
arg	another protocol ||| protocol	count=2
arg	given set of observers ||| observers discardbuffer	count=1
module	and writes them ||| web	count=1
function	list of disconnect callbacks ||| disconnect	count=1
function	should be ||| should log event	count=1
class	order ||| command transport	count=1
function_arg	convert [function_1] [arg_2] to ||| [function_1] to datetime [arg_2]	count=1
function	given file descriptor ||| file descriptor	count=2
function	for a password ||| get password	count=1
class	call ||| call	count=5
class	parser ||| parser	count=2
function	last status change ||| get status change	count=2
module	and extracting the ||| web	count=1
arg	constants ||| level	count=1
class	[class_1] entry from ||| [class_2] [class_1]	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] event formattime	count=3
function	find all ||| find	count=2
module	tests ||| trial	count=1
function	program files folder ||| program files	count=1
arg	domain the domain ||| reactor service domain	count=1
function	stdin ||| stdin	count=1
function	[function_1] cookie ||| [function_1] [function_2]	count=1
arg	@param environ a ||| environ	count=1
module	the given object ||| spread	count=1
function	avatar which ||| avatar	count=1
function	cache on [function_2] ||| [function_2] [function_1]	count=1
arg	group for the given ||| group	count=1
class	as ||| credential	count=1
arg	or 1 ||| resp numok	count=1
arg	name and if it ||| name	count=1
function	of ||| of	count=3
class	this domain or an ||| abstract maildir domain	count=1
arg	to a query checking ||| query timeout queriesleft	count=1
function	root ||| root path	count=1
function	and add [function_2] ||| [function_1] [function_2]	count=1
function	extract frames from a ||| get frames	count=1
function_arg	allow [function_1] [arg_2] l{serialnumber} instance ||| [function_1] [arg_2]	count=1
function	and tell the contact ||| contact	count=1
module	to either ||| protocols	count=1
function	intervals ||| interval	count=1
function	object it is ||| deprecated	count=1
class	the test is ||| synchronous test	count=1
function	spwd module if it ||| shadow get	count=1
function	entity for 'name', based ||| entity	count=2
function_arg	set [arg_2] ||| [function_1] [arg_2]	count=1
function	in the ||| in known hosts	count=1
function	stop to any attempt ||| stop	count=1
function	[function_1] object for ||| [function_1] [function_2]	count=4
function	convert an object to ||| to	count=1
function	search ||| search	count=2
module	other ||| ssh	count=5
arg	amp data ||| data	count=1
function	degrees minutes seconds tuple ||| in degrees minutes seconds	count=1
function	to a partial xml ||| to xml	count=1
function	[function_1] secondary for ||| [function_1] [function_2]	count=1
function_arg	[function_1] coordinator an ||| [arg_2] [function_1]	count=1
module	deprecated api with ||| python	count=1
module	the request ||| web	count=1
class	all ||| generator	count=2
function	disconnect [function] ||| eom [function]	count=3
arg	creator an l{_isshconnectioncreator} ||| creator command	count=1
function	all pending requests ||| and cancel connect waiters	count=1
function	text ||| text	count=6
function	checks if ||| check	count=3
function	vt102 control sequence ||| to vt102	count=1
function	groups ||| fetch groups	count=1
arg	mapping ||| objects	count=1
function	convert a name in ||| to	count=1
function	interface for outgoing multicast ||| outgoing interface	count=1
arg	in the given namespaces ||| filename globals locals	count=1
function_arg	a class [arg_2] ||| [arg_2] [function_1]	count=3
function	download a web ||| download	count=1
class	path with a new ||| path	count=1
class	gotoverview() is called ||| nntpclient	count=1
function	nmeaprotocol coordinate ||| coordinate	count=1
function	[function_1] outgoing multicast ||| [function_2] [function_1]	count=4
function	remove a ||| cancel get	count=1
class	appropriate ||| virtual	count=1
function	load the ||| load	count=1
class	structure object reports ||| singlepart message structure	count=1
class	producer ||| producer	count=5
arg	namespace the namespace ||| namespace	count=1
function	next ||| next	count=2
class	offset from ||| offset	count=1
function	key ||| check and set	count=1
function	adjust ||| adjust	count=1
function_arg	a select [arg_2] ||| [arg_2] [function_1]	count=2
function	a snac ||| snac	count=1
function	authorized ||| authorized	count=1
function_arg	from [arg_2] ||| [function_1] string [arg_2]	count=2
class	data ||| netstring	count=1
function	via ||| call	count=1
function	log [function_2] ||| [function_1] [function_2]	count=22
function	is started to get ||| get	count=1
class	[class_1] and ||| [class_1] [class_2]	count=1
function_arg	receive a [arg_2] ||| [arg_2] [function_1]	count=1
function	of the test to ||| test	count=1
function	and a binary representation ||| bytes and	count=1
module	and ||| names	count=1
function	this server's overview format ||| overview	count=1
module	the connection which this ||| conch	count=1
function	degrees [function_2] ||| [function_2] [function_1]	count=2
class	add ||| threaded select reactor	count=2
arg	a two-sequence of ||| disp	count=1
class	of c{key} ||| mem cache protocol	count=3
arg	address ||| ip	count=1
function	turns the [function] ||| fix [function]	count=1
module	of an ||| mail	count=1
function	formatted log line ||| log	count=1
function_arg	[function_1] failure ||| [arg_2] [function_1]	count=3
arg	in the given version ||| version format replacement	count=2
function	a session cookie and ||| get session	count=1
function	control sequence is received ||| control sequence	count=1
function	dirty way of responding ||| respond	count=1
function	keys ||| identities	count=1
class	l{cooperativetask} ||| cooperative task	count=1
function_arg	given certificate [arg_2] ||| [arg_2] [function_1]	count=1
function	the consumer ||| resume producing	count=1
class	moduledict ||| path	count=1
arg	test raises [arg_2] ||| [arg_1] [arg_2]	count=1
function	api documentation of twisted ||| apidocs	count=1
function_arg	@param reactor ||| init reactor	count=2
class	the message as ||| append message task	count=1
function	using a thread from ||| thread	count=1
function	server endpoint ||| server	count=3
arg	flags ||| flags silent	count=1
class	value ||| digest	count=1
class	deferred has been ||| deferred queue	count=1
class	for a ||| option mixin	count=1
class	c{key} only ||| mem cache protocol	count=1
function	the presence ||| contains	count=1
function	secure ||| secure	count=1
function	a dcc accept response ||| dcc accept	count=1
function	time based seed used ||| time	count=1
function	a snac and ||| snac	count=1
class	database [class] one ||| [class]	count=1
function_arg	[function_1] the domain ||| [function_1] [arg_2]	count=1
function	[function_1] this l{deferred} ||| [function_1] [function_2]	count=1
function	a header is received ||| header	count=1
function	file ("-" for stdout ||| file	count=1
arg	being delivered [arg] ||| [arg]	count=1
module	pythonattribute a testcase ||| trial	count=1
function_arg	remove a [arg_2] ||| [function_1] [arg_2]	count=2
function	uid of a ||| uid	count=1
module	them when it ||| conch	count=1
arg	given group for ||| group	count=1
module	of a testcase ||| trial	count=1
class	which is intended to ||| maildir name	count=1
function	string representation ||| str	count=1
function	end tag of ||| document end	count=1
class	a context using this ||| ipidfile	count=1
class	pool this ||| pool	count=1
class	skip the ||| call	count=1
class	to be unique ||| generator	count=1
module_class	split the [class_2] ||| [module_1] [class_2] splitext	count=3
class	is in ||| failure	count=1
function	positive ||| success	count=1
class	web server to proxy ||| reverse proxy	count=1
module	notifies [module] ||| [module]	count=2
function	instance ||| name	count=2
class	this task retrieving ||| cooperative task	count=2
function	to a new ||| to	count=1
function	state of the ||| state	count=1
function	working [function_2] ||| [function_1] [function_2]	count=1
function	of last access from ||| get modification	count=2
class	visible satellite information from ||| nmeaadapter	count=1
class	checks on the ||| case	count=1
class	underlying pkey ||| public	count=1
function	child may or ||| child	count=1
module	up the ||| web	count=3
module_class	[module_1] protocol ||| [module_1] traffic logging [class_2]	count=1
function	deliver any future data ||| deliver body	count=1
function	or load an ||| or	count=1
module	them from the ||| web	count=1
arg	with parsed ||| sentencedata	count=1
function	add all ||| accumulate	count=1
function	is an entity ||| is	count=1
function	listening ||| port	count=2
arg	the relay queue ||| relay	count=1
arg	first [arg] ||| [arg]	count=3
class	each alias ||| alias group	count=1
arg	to be relayed ||| manager	count=3
arg	new instance using ||| cls cipherstring	count=1
module	user ||| words im	count=2
class	listing with ||| lister	count=1
function	list of disconnect ||| notify on disconnect	count=1
arg	to a transport and ||| transport	count=1
arg	top or bottom half ||| top	count=1
function	receive a message ||| message	count=1
class	[class] c{func} ||| delayed [class]	count=3
function_arg	[function_1] a message ||| [function_1] [arg_2]	count=7
class	is intended to be ||| name generator	count=1
function	or of the ||| or	count=1
arg	when a length ||| length	count=1
function	[function_1] a bounce ||| [function_1] [function_2]	count=1
class	alias ||| alias group	count=1
arg	a given field/format/conversion ||| fieldname formatspec conversion	count=1
arg	a publisher i'll now ||| publisher	count=1
function	directory for ||| directory	count=2
module	decorators and ||| python	count=1
arg	given test ||| test	count=5
class	which this structure object ||| singlepart message structure	count=1
function	whether a function ||| function	count=1
function	constructs a ||| service	count=1
function	is ||| is	count=13
arg	an l{ireactorunix} provider ||| path timeout checkpid	count=1
arg	message in the ||| user message	count=2
function	verify a ||| verify	count=2
function	beginning of [function_2] ||| [function_2] [function_1]	count=4
function	size of ||| size	count=5
function	whether the [function_2] ||| [function_1] [function_2]	count=12
class	outgoing request's connection ||| iagent	count=1
module	from the ||| news	count=1
function	backoff ||| backoff	count=1
arg	from the ||| out	count=1
class	partial visible satellite ||| nmeaadapter	count=1
function	to this private ||| private blob	count=1
arg	open an [arg] for ||| [arg]	count=1
class	task is ||| task	count=1
function	responses to match ||| match failed	count=1
function	us to a chat ||| receive chat	count=1
function_arg	currently selected [arg_2] ||| [arg_2] [function_1]	count=4
function	class [function_2] ||| [function_2] [function_1]	count=4
arg	@param environ ||| cls environ start	count=1
class	transport is connected to ||| abstract datagram	count=1
function_arg	[function_1] strports description ||| [function_1] [arg_2]	count=1
module_class	[module_1] writer ||| [module_1] [class_2]	count=2
class	client ||| client	count=1
function	size as ||| size	count=1
class	each complete ||| netstring receiver	count=2
class	performing the given ||| itelnet	count=1
class	a netstring ||| netstring receiver	count=3
module_class	the test [class_2] ||| [module_1] [class_2]	count=6
function_arg	permissions [arg_2] ||| [function_1] [arg_2]	count=2
arg	a filename ||| k	count=2
module	to get the ||| conch	count=1
class	an smtp-like ||| postfix tcpmap server	count=1
function	wrap an ||| wrap	count=1
function	object's docstring ||| docstring	count=1
function	[function_1] factory to ||| [function_1] [function_2]	count=4
function	a list of segments ||| segments	count=1
class	suitable for use as ||| digest credential	count=1
arg	flags for one or ||| flags silent	count=1
function	elementstream uses expat-based stream ||| stream	count=1
function	the given arguments ||| mutually exclusive arguments	count=1
arg	bytes and send any ||| bytes	count=2
function	an l{iprocesstransport} provider ||| process	count=1
class	add ||| bootstrap mixin	count=1
arg	c{failure} with some traceback ||| error errorclass frames	count=1
arg	end ||| end	count=1
arg	text ||| text	count=5
function	of all child elements ||| elements	count=1
function	[function_1] and size ||| to [function_1] [function_2]	count=2
arg	who you're having ||| chatui	count=1
function	render it ||| render	count=1
function	a pre-built ||| service	count=1
module_class	proxy the stoppage [module_1] [class_2] ||| [module_1] transport proxy [class_2]	count=1
arg	time seconds ||| time	count=1
module	[module_1] the ||| [module_1] [module_2]	count=20
function	buffer ||| buffer	count=4
function	name into a ||| name	count=1
function	[function_1] or of ||| [function_2] [function_1]	count=1
module_class	messages related [module_1] [class_2] ||| [module_1] [class_2]	count=4
module	report the ||| python	count=1
class	runnable ||| open sslcipher	count=1
arg	another user ||| user	count=1
function	anything ||| anything	count=1
class	the server side information ||| bosconnection	count=1
class	use for authentication ||| user auth	count=1
function	get root object ||| get root object	count=1
module	is available if the ||| web	count=1
function	to frame ||| to	count=2
module	handle the ||| conch ssh	count=1
class	adapter ||| componentized	count=1
function	unregister [function_2] ||| [function_2] [function_1]	count=5
arg	different ||| sourcetype targettype	count=1
class	unparsed entry from a ||| unparsed entry	count=1
class	new l{agent} that ||| agent	count=1
arg	[arg] l{secondaryauthorityservice} ||| [arg] serveraddress	count=2
function	authentication was rejected ||| authdeclined	count=1
class	connection which this channel ||| channel	count=1
function	ascii bytes ||| bytes	count=1
function	l{iprocesstransport} provider ||| process	count=1
function	in a string representation ||| repr	count=1
arg	with address [arg_2] ||| [arg_1] [arg_2]	count=1
module	the current line the ||| conch	count=1
arg	angle ||| angle angletype	count=1
arg	[arg_1] to refer ||| [arg_2] [arg_1]	count=1
function	to acquire ||| acquire	count=1
module	parse ||| protocols jabber	count=1
function_arg	of arguments [arg_2] ||| [arg_2] [function_1]	count=5
function	a string describing ||| cap	count=1
function	add a socket ||| add	count=1
function	try to execute ||| execute	count=1
arg	credentials we ||| credentials	count=1
arg	l{servicemanager}, using ||| password	count=1
function	component has ||| component	count=2
function	to c{path} ||| coerce to filesystem	count=1
function	files and [function_2] ||| [function_2] [function_1]	count=2
module_class	group [class_2] ||| [module_1] igroup [class_2]	count=5
arg	a length prefix ||| length	count=1
arg	with address [arg_2] ||| [arg_2] [arg_1]	count=2
function	metadata to [function_2] ||| [function_2] [function_1]	count=2
function	print all of the ||| print	count=1
function_arg	parent [arg_2] ||| [arg_2] [function_1]	count=1
class	and setup authentication ||| saslinitiating initializer	count=1
function	[function_1] the default ||| is [function_2] [function_1]	count=1
class	the tcp ||| dnsclient	count=1
class	date has changed since ||| file	count=1
function	directory for ||| user directory	count=1
module_class	of non ||| python random factory	count=1
function	try to read some ||| read	count=1
class	from l{_connectedprotocol}, issue a ||| resolver	count=1
module	the beginning of ||| conch	count=1
class	intended to be unique ||| name	count=1
arg	authentication when invoking ||| auth	count=1
class	which is intended ||| name	count=1
function	control ||| control	count=3
function	or retrieve an ||| get	count=1
function	error ||| format error	count=1
arg	information ||| info	count=3
class	formatting state ||| default formatting state	count=6
arg	name and an ||| name	count=1
function	clone an ||| clone	count=1
class	the [class] as ||| pbserver [class]	count=1
arg	the given queries ||| queries timeout id	count=1
arg	whether access [arg] is ||| [arg]	count=1
function_arg	[function_1] filename to ||| [function_1] [arg_2]	count=1
module	given stream ||| web	count=2
function	deprecated api ||| get replacement	count=1
function	test cases c{false} ||| test case	count=1
function	compute a log prefix ||| wrapped log prefix	count=1
class	true if the log ||| log	count=1
function_arg	[function_1] passed as ||| [arg_2] [function_1]	count=2
function	modification time ||| change time	count=1
module	in the ||| python	count=1
module	string which is ||| mail	count=1
function	which share an ||| kex dh gex	count=1
class	exception ||| failure element	count=1
function_arg	verify a [arg_2] ||| [arg_2] [function_1]	count=1
class	the initialization ||| base feature initiating	count=1
module	select ||| words	count=1
function	is ||| is reading	count=1
arg	and the ||| wrapped	count=1
function	[function_1] system-defined home ||| [function_2] [function_1]	count=1
function	it ||| get	count=2
function_arg	[function_1] [arg_2] ||| web [function_1] [arg_2]	count=14
function	chain another l{deferred} to ||| chain	count=1
function_arg	file [arg_2] ||| [arg_2] [function_1]	count=9
arg	port number and ||| port	count=1
function	a stream server endpoint ||| stream server	count=1
function	segments ||| segments	count=1
function	to a regular ||| isfile	count=1
function	fails ||| notify on fail	count=1
class	[class_1] proxy has ||| [class_2] [class_1]	count=3
module	representing this action ||| python	count=1
class	has changed since ||| file	count=1
class	same [class] as mine ||| [class]	count=1
module_class	using the [class_2] ||| [module_1] [class_2]	count=2
arg	an http/1 ||| transport	count=1
class	notify l{boxreceiver} that it ||| binary box	count=1
function	elements ||| elements by	count=1
module	on ||| python	count=1
function	welcome from ||| irc rpl welcome	count=1
arg	some text ||| text	count=1
class	the message ||| message task	count=1
arg	c{inode} ||| inode	count=1
class	protocol ||| protocol	count=11
module	setup ||| protocols jabber	count=2
function	as a [function_2] ||| event [function_1] classic log [function_2] event formattime	count=1
function	observer for ||| observer	count=1
arg	given [arg] given ||| sender recipient [arg]	count=1
function	set our idle ||| set	count=1
module	move to [module] c{'connection_lost'} state ||| [module]	count=1
function	all readers ||| all	count=1
function_arg	select [arg_2] ||| [function_1] [arg_2]	count=5
arg	protocol ||| processprotocol executable args env	count=1
class	the worker ||| worker	count=1
function_arg	[function_1] [arg_2] ||| [function_1] body [arg_2]	count=8
function	command queue ||| command queue	count=2
function	[function_1] user ||| [function_2] [function_1]	count=3
class	entry from a ||| entry	count=1
function	resume [function_2] ||| [function_1] [function_2]	count=4
function	the nonce parameter of ||| nonce	count=1
function	find all [function_2] ||| [function_1] [function_2]	count=1
function	send buffer for ||| send buffer	count=4
function	return ||| get message	count=1
arg	sentence ||| sentence	count=1
function	presence of a ||| contains	count=1
module	a ||| names	count=2
class	an adapter for the ||| componentized	count=1
class	format the given log ||| log	count=1
class	email address ||| smtpclient	count=1
class	date ||| date	count=1
class	the speed that this ||| speed	count=1
arg	user ||| user channel	count=1
arg	descriptor i e :: ||| oself type	count=1
arg	either reading or ||| source primary other flags	count=1
module_class	the [class_2] ||| [module_1] transport proxy [class_2]	count=3
function	initialize me with an ||| init	count=1
arg	from the given sender ||| sender text	count=1
arg	the path as ||| path	count=1
function	or ||| msg	count=1
arg	a domain from ||| answers domain	count=2
arg	pre-built l{servicemanager}, using the ||| jid	count=1
arg	[arg] int ||| [arg]	count=1
class	my process's stderr ||| process	count=1
function	unicode for python ||| unicode	count=1
function	[function_1] api documentation ||| [function_1] [function_2]	count=1
function	path [function_2] ||| [function_1] [function_2]	count=4
function	consider it as ||| replacement string	count=1
function	change ||| change	count=1
function	[function_1] challenge ||| [function_1] [function_2]	count=3
function	if c{tcp_nodelay} is enabled ||| tcp no delay	count=1
module	is running on ||| python	count=1
class	a transport ||| abstract datagram protocol	count=1
function	remote version of finish ||| finish	count=1
arg	registered ||| frominterface tointerface	count=1
arg	using this l{command}'s ||| cls	count=2
function	a list of ||| deprecated	count=1
function	string ||| build service manager	count=2
class	report the ||| py unit result	count=1
function	the date has ||| should	count=1
function	targets allowable for ||| targmax	count=1
class	a ||| sshpublic	count=1
module	the ||| protocols jabber	count=4
module_class	the redirect ||| web redirect agent	count=1
class	[class_1] state ||| [class_1] [class_2]	count=6
arg	the given response and ||| response method host	count=1
class	notification when each ||| receiver	count=1
function	[function_1] string ||| [function_1] deprecation warning [function_2]	count=2
function	joining to ||| to	count=1
function	returns [function_2] ||| [function_1] raw [function_2]	count=1
class	unix ||| unix	count=1
function_arg	the given [arg_2] ||| [arg_2] [function_1]	count=1
function	a user ||| user	count=1
arg	connection if ||| connection	count=1
arg	given by c{blob} ||| blob	count=1
function	arrange for iteration to ||| iterate	count=1
function_arg	[function_1] bytes to ||| [arg_2] [function_1]	count=4
class	with this conversation ||| group conversation	count=1
arg	and application payload ||| payload	count=2
class	a maildir [class_2] ||| [class_2] [class_1]	count=2
arg	fail because ||| code resp	count=1
function_arg	the topic [arg_2] ||| [arg_2] [function_1]	count=1
class	files and directories ||| transfer	count=1
function	chat ||| receive chat	count=1
function_arg	[function_1] user a ||| [function_1] [arg_2]	count=1
module	it to be ||| names	count=1
class	task has been ||| task	count=1
module	extensions @return the ||| mail	count=1
function	points to a symbolic ||| islink	count=1
module	surround a ||| python	count=1
class	a ||| client machine	count=1
function	the connection is made ||| connection made	count=1
module	stop the ||| conch	count=1
class	set checks on ||| synchronous	count=1
function	prefix to use for ||| prefix	count=1
class	task [class_2] ||| [class_2] [class_1]	count=2
module	check for the ||| conch	count=1
function	io completion port for ||| do iteration	count=1
class	to this function ||| generator	count=1
class	of ||| base	count=1
class	any ||| janitor	count=1
function	traceback ||| traceback	count=3
function	esmtp ||| esmtp	count=1
function	accepted a dcc ||| dcc do accept	count=3
arg	is not c{second} ||| first second msg	count=1
function	[function_1] number ||| [function_1] [function_2]	count=3
class	parsed ||| formatting parser	count=1
arg	[arg_1] message ||| [arg_2] [arg_1]	count=1
function	return credentials ||| get credentials	count=4
arg	not normally be ||| datatype	count=1
function	for the next ||| next	count=1
arg	hostname and port number ||| hostname port	count=1
class	child ||| collection	count=3
function	make a [function_2] ||| [function_1] [function_2]	count=3
function	[function_1] prefix as ||| thread fdwrapper [function_1] [function_2]	count=1
class	error translation objects as ||| error	count=1
module	available if the ||| web	count=1
function	the default domain ||| default	count=1
function_arg	coerce a failure [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	the global ||| maybe global	count=1
function	execute a [function_2] ||| [function_2] [function_1]	count=3
function	a variable name into ||| name	count=1
class	this tag ||| tag	count=1
arg	a query to a ||| query servers timeout	count=1
class	'message' in ||| reporter	count=1
function	names ||| names to dict	count=1
function	to a ||| to	count=8
module_class	[module_1] digest ||| [module_1] _auth [class_2]	count=1
function	render the source code ||| source	count=1
function	more than once ||| finished deferred close	count=1
arg	l{team}; that is ||| createworker logexception	count=1
function_arg	[function_1] err is ||| trial exc [function_1] [arg_2]	count=2
function	children not descendants of ||| named children	count=1
function	register a new form ||| register authenticator	count=1
function	overview format from the ||| fetch overview	count=1
arg	http ||| request	count=1
class	this function across ||| name	count=1
function	remove all items from ||| clear	count=1
module	shift to the ||| conch insults	count=1
class	iterated ||| body producer	count=1
arg	define behavior for requests ||| message addr	count=1
arg	specified keys ||| keys	count=1
function	prefix with some ||| prefix	count=1
class	context using ||| ipidfile	count=1
function	c{eval}-able representation that ||| repr	count=1
function	by l{unittest testcase} ||| post class cleanup	count=1
arg	objects and add them ||| objects proto	count=1
class	method called when a ||| ipositioning	count=1
function	ipv6 ||| aaaa	count=1
function	against the correct md5 ||| check	count=1
function_arg	[function_1] c{deferred} does ||| [arg_2] [function_1]	count=1
module	a pre-built l{servicemanager}, ||| jabber	count=1
function	patched by ||| patched	count=1
module	in the list of ||| conch	count=1
class	which this observer ||| log observer	count=1
arg	bits bits ||| bits	count=1
function	quote an ||| quote	count=2
module_class	the l{_newconnectionhelper} ||| conch command transport	count=1
function_arg	[function_1] underlying l{_url} ||| [function_1] [arg_2]	count=2
arg	of local files ||| files	count=1
class	when a transport is ||| abstract datagram protocol	count=1
function	locate a ||| locate	count=1
function	some ||| string	count=1
function	group which should ||| group	count=1
module	number of available ||| python	count=1
function	method names ||| method names to	count=1
function	complete enough ||| absolute	count=1
class	sending messages ||| box dispatcher	count=1
function	to the ssi server ||| item ssi	count=1
class	formatting ||| formatting	count=2
arg	of the web server ||| path	count=1
arg	string representing a line ||| cls string	count=1
arg	apply stringprep ||| jidstring	count=1
arg	width return a ||| width	count=1
function	arguments ||| mutually exclusive arguments	count=1
module_class	this file from ||| python file path	count=1
function	previously-remembered [function_2] ||| [function_2] [function_1]	count=1
arg	user ||| user	count=15
arg	base signing behavior by ||| publickey signdata	count=2
class	xmlstream ||| authenticator	count=2
function	identifier as a string ||| string	count=1
class	use ||| factory	count=1
module	to the ||| conch	count=23
function	a msg_kexinit ||| ssh kexinit	count=1
function_arg	[function_1] text to ||| [function_1] [arg_2]	count=4
function	join ||| join	count=5
class	[class] c{tag} ||| [class]	count=1
arg	sender to ||| sender	count=1
function	root ||| root	count=2
class	return ||| imessage delivery factory	count=1
function	we receive a msg_service_accept ||| service accept	count=1
function_arg	emit an [arg_2] ||| [function_1] [arg_2]	count=1
function	initialization has [function_2] ||| [function_1] [function_2]	count=1
function	this [function] was ||| unhandled [function]	count=1
function	this [function_2] ||| [function_2] [function_1]	count=2
class	to at [class] l{filepath} ||| [class]	count=1
function	split a ||| split	count=1
arg	[arg_1] is ||| [arg_2] [arg_1]	count=2
function	data is ||| data finished	count=1
function	polite ||| replacement	count=1
function	c{bytes}, [function_2] ||| [function_2] path [function_1] as pattern	count=1
function	[function_1] child ||| [function_2] [function_1]	count=2
function	provider ||| force stop process	count=1
arg	one or more ||| uid	count=3
class	an exposed method ||| expose	count=1
function	of the read ||| read	count=1
function	sign for a hemisphere ||| hemisphere sign	count=1
function	for a deprecated ||| replacement string	count=1
function	a connection to the ||| no connection	count=1
module	polite text ||| python	count=1
arg	will represent ||| classname unjellyable	count=1
class	arrange for it ||| resolver	count=1
function	[function_1] made ||| [function_2] [function_1]	count=7
function	chat ||| chat invite	count=2
function	bar ||| stat bar	count=1
class	last ||| xmlparser	count=1
function	name is ||| is	count=1
function_arg	[function_1] mainmod ||| [arg_2] [function_1]	count=1
function	data is available ||| data finished	count=1
arg	each pair also separated ||| argstring	count=1
arg	acallable ||| acallable command	count=1
function	to find the source ||| find source	count=1
function	a screen refresh/redraw ||| ff	count=1
class	time in ||| time	count=2
arg	the line ||| line	count=3
function	is ||| disconnect	count=1
function	return a ||| get service	count=1
arg	set the flags ||| flags mode	count=1
function	[function_1] send buffer ||| [function_1] [function_2]	count=4
class	function across all processes ||| maildir	count=1
class	@see c{ipushproducer ||| pull to push	count=3
function	into ||| into	count=1
module	using this pidfile ||| application runner	count=1
class	at which to call ||| call	count=1
function	c{kwargs} raises ||| raises	count=1
function	a child of ||| child	count=1
arg	occurred in response ||| failure	count=1
class	portal to a ||| portal	count=1
class	of a mailbox @type ||| iaccount imap	count=1
arg	a string representing a ||| string	count=1
module	in [module] selected ||| [module]	count=1
arg	period of ||| delay	count=1
function	wait until we ||| until locked	count=1
class	accounts ||| account manager	count=1
arg	from a l{chunkingzipfile} ||| chunkingzipfile length	count=1
arg	address [arg] ||| address [arg]	count=2
class	to __init__ ||| arguments	count=1
arg	for an event ||| event observerfn	count=1
function_arg	[function_1] and was ||| [function_1] test [arg_2]	count=1
module_class	with this record ||| names record	count=1
class	remember whether signal handlers ||| signal reactor mixin	count=1
arg	publisher i'll now ||| publisher	count=1
function	[function] parent ||| [function]	count=1
class	the deferred has been ||| queue	count=1
class	actual [class] ||| [class]	count=3
arg	using the ||| password	count=1
function	acquire the ||| acquire	count=1
arg	connection try ||| connection	count=1
class	[class_1] this domain ||| [class_1] [class_2]	count=1
module	text exhorting the user ||| python	count=1
function	polite ||| get replacement	count=1
class	in a ||| python path	count=1
function	[function_1] msg_userauth_info_response ||| [function_1] [function_2]	count=1
function_arg	[function_1] of c{tag} ||| [function_1] [arg_2]	count=2
module	has changed since last ||| python	count=1
function_arg	[function_1] protocol then ||| [function_1] [arg_2]	count=1
function	window ||| ssh channel window	count=1
function	the setup method ||| get setup	count=1
class	an authentication ||| auth	count=1
function	joins ||| joined	count=1
arg	was ||| error	count=1
function_arg	[function_1] person ||| [function_1] [arg_2]	count=3
function	the log ||| get log	count=1
class	method called when ||| ipositioning receiver	count=2
function	an ||| string	count=1
class	the message ||| append message	count=1
function	handle a sigterm ||| term	count=1
class	this is unconnected from ||| iprotocol	count=1
arg	doing npn and/or ||| context acceptableprotocols	count=1
arg	an fd with ||| fd	count=1
function_arg	append given [arg_2] ||| [arg_2] [function_1]	count=1
arg	given name as ||| name	count=1
arg	hostname and [arg_2] ||| [arg_2] [arg_1]	count=4
module_class	the coerce ||| python coerce parameter	count=1
arg	tuple properly pass options ||| action	count=1
class	opened files and directories ||| transfer server	count=1
function_arg	[function_1] domain ||| [function_1] [arg_2]	count=1
function	notify all pending requests ||| connect waiters	count=1
function	python syntax zone definition ||| pyzone	count=1
arg	box was ||| box	count=1
module	my syspath and ||| python	count=1
arg	sock ||| sock	count=1
class	for it ||| resolver	count=1
function	start being ||| start	count=1
function	some ||| get replacement string	count=1
function_arg	registration [arg_2] ||| [function_1] [arg_2]	count=1
module_class	the [class_2] ||| [module_1] httppage [class_2]	count=1
arg	child of c{tag} ||| tag	count=5
arg	name ||| name type cls	count=1
class	my class to ||| tuntap port	count=1
function	initiate the ||| initialize	count=1
class	reboots ||| maildir	count=1
function	a list of supported ||| supported	count=1
class	[class_1] [class_2] from a chunk of ||| [class_1] [class_2] load pem class	count=4
function_arg	method [arg_2] ||| [function_1] [arg_2]	count=3
function	write some ||| write some	count=2
function	reporter were [function] or not ||| was [function]	count=1
class	command's input and ||| command	count=1
function	a session cookie ||| get session	count=1
class	is ||| auth client	count=1
module	given arguments ||| web	count=1
function	[function_1] sentence ||| [function_2] [function_1]	count=13
class	created ||| traffic logging	count=1
function	a single test ||| test	count=1
module	failure's type ||| python	count=1
arg	pop3 [arg] ||| [arg]	count=3
module	[module] same ||| [module]	count=6
class	compute ||| key	count=1
function	the current failure result ||| failure result	count=1
class	[class] of ||| [class]	count=1
function	this will be called ||| mail	count=1
arg	l{team}; that is to ||| createworker logexception	count=1
function_arg	[function_1] the vcsrepository ||| [function_1] to [arg_2]	count=1
class	of ||| process writer	count=1
class	indicates that ||| imailbox imaplistener	count=1
function	login ||| login	count=5
arg	modes on a ||| modes	count=1
class	my process's ||| process	count=1
class	a box ||| box	count=1
arg	given [arg] other users ||| [arg] recipient	count=1
function_arg	a process [arg_2] ||| [arg_2] [function_1]	count=1
class	remember whether signal handlers ||| signal reactor	count=1
class	same as l{loseconnection} ||| loopback transport	count=1
class	file descriptors currently ||| ireactor fdset	count=2
module	the callback [module_2] ||| [module_1] [module_2]	count=2
arg	or examine command ||| result rw	count=1
module	jabber id ||| protocols jabber	count=1
function	an identifier ||| name	count=1
arg	the speed ||| speed	count=1
function	the ||| call	count=1
module	print ||| trial	count=1
function	object in ||| in	count=1
class	of all the accounts ||| account manager	count=1
arg	true heading is ||| heading	count=1
arg	the flags of one ||| flags mode	count=1
function	a combined ||| combined	count=1
arg	request to another user ||| user filename	count=1
function	this is ||| call	count=1
arg	shut it down ||| reason	count=1
function	words trust [function] root certificates ||| [function]	count=1
function	of ||| get deprecated	count=2
class	amp instance ||| amp	count=1
function	compute the ||| compute	count=1
function	[function_1] previously-remembered ||| [function_1] [function_2]	count=1
arg	amp data ||| cls data	count=1
function_arg	group from [arg_2] ||| [arg_2] [function_1]	count=1
class	set ||| timeout protocol	count=1
arg	the contents ||| i	count=2
function_arg	@param [arg_2] ||| [arg_2] [function_1]	count=129
module	it using c{*args}, and ||| names	count=1
function	the underlying connection ||| connection	count=1
class	an ||| monitor	count=1
function	reconnect ||| retrying	count=1
module	to ||| internet	count=22
module	to ||| names	count=2
function	to handle a reply ||| reply	count=1
arg	for l{clientservice} which computes ||| initialdelay maxdelay factor jitter	count=1
function	write some bytes to ||| write	count=1
function	mode ||| mode	count=2
function	the reactor ||| reactor	count=3
function_arg	response [arg_2] ||| [arg_2] [function_1]	count=6
class	type is in a ||| failure	count=1
function_arg	test [arg_2] ||| [function_1] [arg_2]	count=2
function	create a l{bucket} corresponding ||| bucket	count=1
class	with the credentials ||| credentials	count=1
class	this structure object ||| structure	count=2
function	[function_1] queue ||| [function_2] [function_1]	count=3
function	[function_1] new message ||| [function_1] [function_2]	count=1
function	store an entity ||| store entity	count=3
arg	of the vcsrepository ||| fromdir exportdir	count=1
class	a ||| base	count=1
function	as a ctcp reply ||| ctcp make reply	count=1
function	mode - ||| mode	count=1
function	wait until we ||| defer until locked	count=1
class	gets the altitude ||| altitude	count=1
class	calls ||| maildir name generator	count=1
function	-> boolean ||| module allowed	count=1
module	by the ||| conch ssh	count=1
arg	a name matching ||| name	count=1
arg	sexp ||| sexp	count=1
function	the source line ||| source line	count=2
class	by the xmlstream ||| listen authenticator	count=1
module	which suppresses [module] indicated warnings ||| [module]	count=1
class	this call for ||| call	count=1
function	represents expressed in meters ||| in meters	count=1
function	a malformed ||| esmtp authmalformed	count=1
class	to the list of ||| list	count=1
function	channel request failed ||| channel request	count=1
function	public or private lsh ||| lsh	count=1
module_class	to [class_2] ||| [module_1] [class_2] tls do command	count=1
class	associated with this conversation ||| conversation	count=1
function	the active handle from ||| stop reading and writing	count=1
module	[module] c{attribute} ||| [module]	count=3
function_arg	message [arg_2] ||| [arg_2] [function_1]	count=1
function	observer ||| remove observer	count=1
function	to remove the trigger ||| remove trigger base	count=1
function	new user ||| user	count=2
function	a timeout policy for ||| policy	count=1
class	last write ||| file	count=1
module	the [module] instance ||| [module]	count=1
class	monitor a file ||| file monitoring service	count=1
arg	new message is ||| status	count=1
arg	c{query} possibly more than ||| msgid msg lastsequenceid	count=1
function	[function_1] to a ||| [function_2] [function_1]	count=3
arg	representation of ||| type	count=1
class	@param ||| file receive basic	count=1
arg	creator the l{_isshconnectioncreator} ||| creator command protocolfactory	count=1
class	be unique ||| name generator	count=1
arg	member to ||| member	count=2
function	returns an l{ipv4address} ||| get	count=1
function	keep a clientside ||| and observe	count=1
function_arg	response to [arg_2] ||| [function_1] [arg_2]	count=2
function	human [function_2] ||| [function_1] [function_2]	count=2
function	second ||| second	count=1
function	has completed no further ||| complete	count=1
arg	function c{f} with ||| f	count=1
arg	of c{predicates} ||| predicates	count=1
function	special-case your ||| publish	count=1
module	the ||| conch insults	count=5
class	is a port for ||| port	count=1
function_arg	expected failure [arg_2] ||| [arg_2] [function_1]	count=1
class	an offset ||| fixed offset	count=1
class	the message as ||| message	count=1
class	connection ||| connection	count=4
function	a malformed authentication ||| esmtp authmalformed	count=1
function	add ||| add proto	count=2
function	surround ||| get replacement string	count=1
function	this to write to ||| write	count=1
arg	the result of c{predicates} ||| predicates	count=1
module	spread ||| spread	count=1
function	hash of the ||| key hash	count=1
class	processes ||| generator	count=1
function_arg	do [arg_2] ||| [function_1] [arg_2]	count=2
function	some ||| get	count=1
function_arg	address of [arg_2] ||| [arg_2] [function_1]	count=1
function	the size of the ||| size	count=1
function	of the reactor to ||| reactor	count=1
function_arg	[function_1] string referring ||| [function_1] trust root path [arg_2]	count=1
function	send a global ||| send global	count=3
function	not a connection ||| connection	count=1
module	to either the ||| protocols	count=1
function	delete the change ||| delete	count=1
function	a textual and a ||| as bytes and text	count=1
function	date internally ||| internal date	count=1
arg	to define behavior for ||| message addr	count=2
function	[function_1] id ||| [function_1] [function_2]	count=7
function	flag if any of ||| deprecated	count=1
function	response to a select ||| select	count=1
function	an event [function_1] [function_2] ||| event [function_1] classic log [function_2] event formattime	count=3
module_class	this l{cooperativetask} ||| internet cooperative task	count=1
function	store an ||| store	count=1
function	dynamically generated child ||| child with	count=1
class	[class_1] service ||| [class_2] [class_1]	count=3
function_arg	function by importing ||| unpickle function fullyqualifiedname	count=1
arg	function ||| f	count=4
arg	set the flags of ||| flags mode	count=1
function	test to ||| test	count=2
function	create and return a ||| create	count=1
function	hemisphere ||| hemisphere	count=3
arg	credentials we call our ||| credentials	count=1
class	if the factory ||| factory	count=1
function	poll the io completion ||| iteration	count=1
function_arg	local class [arg_2] ||| [arg_2] [function_1]	count=3
class	this alias to ||| address alias	count=1
class	_wrappedfactory} ||| wrapping factory	count=1
module	the first blob ||| conch	count=1
arg	and then asking it ||| cls type timeout	count=1
arg	remote root object ||| root	count=1
class	mailbox ||| imailbox imapinfo	count=1
function	iteration ||| iterate	count=1
function	msg_kex_dh_gex_reply message ||| kex dh gex reply	count=1
function	to complete ||| complete	count=1
module	[module_1] when ||| [module_2] [module_1]	count=1
function	rotate when the ||| rotate	count=1
function	successful anonymous cred ||| cb anonymous	count=1
arg	method name to ||| klass name	count=2
function_arg	[function_1] scheduler-like object ||| [function_1] [arg_2]	count=1
class	across all calls ||| maildir	count=1
function	[function_1] response to ||| [function_2] [function_1]	count=1
function	of which arguments ||| arguments	count=1
function	consider it as ||| get replacement string	count=1
function_arg	failed payload : ||| failure packet	count=1
function	a clientside cache ||| cache and observe	count=1
function	messages which share an ||| ssh kex dh gex group	count=1
module_class	[module_1] [class_2] ||| [module_1] process [class_2]	count=3
function	bar ||| make stat bar	count=1
function_arg	[function_1] logical url ||| [arg_2] [function_1]	count=4
function	[function_1] new ||| [function_1] [function_2]	count=1
function	doc chunks ||| doc make chunks	count=1
arg	serialize ||| defaulturi prefixesinscope	count=1
class	[class_1] domain names ||| [class_2] [class_1]	count=8
function_arg	receive [arg_2] ||| [arg_2] [function_1]	count=1
class	parses ||| digest md5	count=1
function	a log prefix ||| wrapped log prefix	count=2
function	an event [function] ||| format event [function] classic log	count=3
module	this pidfile ||| application	count=1
module	protocol support ||| haproxy	count=1
class	an unparsed entry from ||| unparsed entry	count=1
function	test ||| test	count=8
function	to a given ||| to	count=1
function	has changed ||| changed	count=2
function	of [function_2] ||| [function_1] [function_2]	count=3
function	log levels ||| log levels	count=2
function	register/unregister an ||| update registration	count=1
function	us to a chat ||| receive chat invite	count=1
function	[function_1] cookie that ||| [function_1] [function_2]	count=1
function	using content-length [function_2] ||| [function_2] [function_1]	count=5
function	body has ||| body data received deferred close	count=1
module	visible satellite ||| positioning	count=1
module	[module_1] [module_2] ||| [module_1] [module_2]	count=92
arg	given ||| name	count=2
function_arg	[function_1] a datagram ||| [arg_2] [function_1]	count=2
module_class	the ftp server ||| protocols ftpclient	count=1
function	close the ||| lose	count=2
function	value of the ||| value	count=1
class	write ||| daily	count=1
function	change [function_2] ||| [function_2] [function_1]	count=1
function	references to the socket ||| socket	count=1
class	list file descriptors currently ||| fdset	count=1
function_arg	[function_1] description ||| [arg_2] [function_1]	count=5
function	initialize a new ||| init	count=1
arg	method for the ||| description	count=1
function	this is ||| ssh	count=2
function	with ||| search	count=1
class	reactor may ||| reactor	count=1
module	first line [module] a ||| [module]	count=1
class	report that ||| result	count=1
function	quit ||| quit	count=3
function	writes ||| writes	count=2
class	redirects ||| redirect	count=1
function	requested a channel of ||| get channel	count=1
function_arg	send [arg_2] ||| [function_1] user [arg_2]	count=2
function_arg	[function_1] time ||| [function_1] [arg_2] func args kw	count=1
class	utc ||| time	count=1
arg	header into a two-sequence ||| disp	count=1
function	set if [function_2] ||| [function_1] [function_2]	count=1
class	given l{filedescriptor} for ||| glib reactor base	count=2
class	state ||| state	count=5
function	of failed ||| failed	count=1
class	compute ||| public	count=1
class	will stop performing ||| transport	count=1
module	the test storing ||| trial	count=1
function_arg	string representation of ||| to string type	count=1
module	the ||| words protocols	count=14
function	bases and puts method ||| add method	count=1
function	of human [function_2] ||| [function_2] [function_1]	count=2
module_class	[module_1] fileno() ||| [module_1] [class_2]	count=4
arg	publisher i'll now send ||| publisher	count=1
function_arg	decode a [arg_2] ||| [arg_2] [function_1]	count=9
class	a private ||| private	count=2
function_arg	@param creator an ||| init creator command	count=1
function	a trial [function] class ||| [function]	count=1
arg	domain the domain ||| domain	count=1
function	in the ||| in	count=3
function_arg	parent directory ||| parent keepquery	count=1
arg	element or other c{irenderable} ||| element doctype _failelement	count=1
function	[function_1] body ||| [function_1] [function_2]	count=2
class	of my ||| process writer	count=1
function	the end tag ||| document end	count=1
arg	message which ||| message	count=1
function	begin logging to ||| start logging	count=2
arg	reactor a provider ||| reactor	count=1
arg	issue a query ||| query	count=1
class	this ||| dispatcher	count=1
function	resume copying bytes ||| resume producing	count=2
function	the given generator ||| generator	count=1
arg	the named ||| name	count=1
arg	command was received but ||| command	count=1
function	to execute ||| execute	count=1
class	key matches the user ||| sshpublic key database	count=1
function_arg	internal initialize [arg_2] ||| [function_1] [arg_2]	count=7
class	which ||| name generator	count=1
arg	the domain to ||| domain	count=1
class	when each [class_2] ||| [class_2] [class_1]	count=2
arg	[arg_1] failed ||| [arg_2] [arg_1]	count=1
function	list of [function_2] ||| [function_2] [function_1]	count=6
function	joining to ||| to filesystem encoding	count=1
module	an iterator over the ||| mail	count=2
module_class	[module_1] side requested ||| [module_1] [class_2]	count=3
function	listening on this ||| listening	count=1
function	constructs a ||| build	count=1
function	from an ||| from sign hours	count=1
class	listening on the endpoint ||| endpoint service	count=1
class	[class_1] file size ||| [class_2] [class_1]	count=1
function	to remove a ||| remove	count=1
function	a uidl ||| uidl	count=1
module	ask the user ||| conch	count=1
class	l{deferred} by ||| deferred	count=1
function	old ||| old	count=1
arg	submodules here ||| mn	count=1
class	buffer immediately ||| buffering mixin	count=1
module	and state to ||| spread	count=1
class	this certificate ||| cert base	count=1
function	put a stop ||| stop	count=1
arg	namespace the namespace ||| namespace source observer	count=1
arg	topic to a ||| channel topic author	count=1
function	c{path} [function] ||| ensure [function] working	count=1
function_arg	timeout policy [arg_2] ||| [arg_2] [function_1]	count=1
function	a pre-built l{servicemanager}, ||| build service	count=1
module	server gotoverview() is ||| news	count=1
function	return [function_1] [function_2] ||| [function_1] [function_2]	count=7
function	[function] pop3 command ||| [function]	count=1
function	it ||| string	count=1
module	we will ||| conch	count=1
function	emulate ||| child with default	count=1
arg	domain the domain ||| service domain	count=1
class	[class_1] the file ||| [class_1] [class_2]	count=1
module	delivered after the ||| web	count=1
class	a port for tls ||| port	count=1
function_arg	[function_1] of observers ||| [arg_2] [function_1]	count=1
arg	run a command ||| reactor command	count=1
module	callable returned by the ||| web	count=1
function_arg	[function_1] default ||| [function_1] [arg_2]	count=4
function	joins the ||| joined	count=1
function	credentials [function_2] ||| [function_1] [function_2]	count=7
class	value of c{key} ||| mem cache	count=2
function	[function_1] the state ||| [function_1] [function_2]	count=1
function	attribname ||| get attribute	count=1
arg	by first request in ||| request	count=1
class	last ||| daily log	count=1
class	given log ||| log	count=1
function_arg	mapping which [arg_2] ||| [arg_2] [function_1]	count=1
class	maildir mailbox ||| maildir mailbox	count=4
arg	whether [arg] ||| pubkey [arg]	count=1
function	and c{kwargs} raises ||| raises	count=1
function	refers to a regular ||| isfile	count=1
function	[function_1] opaque to ||| [function_2] [function_1]	count=1
class	[class] and ||| deprecated [class]	count=1
module	l{servicemanager}, using the ||| words protocols	count=1
function	a pre-built l{servicemanager}, using ||| manager	count=1
arg	of observers this will ||| observers	count=1
module	select ||| protocols jabber	count=2
module_class	[module_1] standard io ||| [module_1] [class_2]	count=6
function	send to ||| to	count=1
arg	it has ||| rootelement	count=1
function	[function_1] into the ||| [function_1] [function_2]	count=4
arg	the c{cas} value matches ||| val cas flags	count=1
class	terminal ||| terminal	count=2
function	a namespace from ||| namespace from	count=2
module_class	if the connection ||| internet connection mixin	count=1
arg	@param thing an ||| thing	count=1
function	an authenticator ||| authenticator	count=1
class	group ||| igroup	count=2
function	box containing serialized values ||| from box	count=1
function	if [function] occurs ||| [function]	count=1
class	socket ||| port	count=5
arg	given ||| protocol message	count=1
function	pwd print working directory ||| pwd	count=1
class	random value ||| credential factory	count=1
function	boxes ||| boxes	count=1
arg	with the given queries ||| queries	count=1
class	bridge it to python ||| stdlib	count=1
arg	protocol [arg] sessionno ||| sock protocol [arg]	count=1
arg	channel user ||| user channel	count=2
function	setup method ||| get setup	count=1
function	the user to ||| get replacement string	count=1
module	l{servicemanager}, using the ||| protocols	count=1
function	log message ||| log	count=2
function_arg	turns the [function_1] [arg_2] ||| positioning nmeaadapter [function_1] float [arg_2]	count=1
function	l{bucket} corresponding to the ||| get bucket	count=1
function	input and return ||| get	count=1
class	reboots etc ||| maildir name generator	count=1
class	[class_1] certificate ||| [class_2] [class_1]	count=8
arg	return true [arg] ||| [arg]	count=1
function	return the time at ||| get time	count=1
module_class	get the certificate ||| internet certificate	count=1
function	any warning suppressions set ||| suppress	count=1
module	the string a ||| conch ssh	count=1
class	suitable for [class_2] ||| [class_2] [class_1]	count=8
function	as the last access ||| access time	count=1
module	am the ||| protocols	count=1
class	a mailbox ||| iaccount imap	count=1
function_arg	[function_1] if index ||| [function_1] [arg_2]	count=5
function	factory which ||| factory	count=2
function	null ||| null	count=1
class	script through ||| filtered script	count=1
module	called back if the ||| conch	count=1
class	for when each ||| only receiver	count=1
function	[function_1] also be ||| [function_2] [function_1]	count=3
arg	format an event ||| event	count=1
function	is ||| remote	count=1
class	select and setup authentication ||| initializer	count=1
function	and device ||| device	count=1
function	referring to a ||| temporary	count=1
function	path factory ||| path factory	count=2
function	contact ||| contact	count=2
arg	l{_fileentry} from a l{chunkingzipfile} ||| chunkingzipfile length	count=1
function	events to ||| to	count=1
module	if any of ||| python	count=1
function	an offset [function_2] ||| to [function_1] [function_2]	count=2
module	a pre-built l{servicemanager}, using ||| jabber	count=1
function_arg	[function_1] path this ||| [arg_2] [function_1]	count=1
function	buffer for ||| buffer	count=2
arg	me or a ||| message	count=1
function	trust ||| trust	count=1
function	text exhorting the ||| get	count=1
function	warnings suppressed ||| warnings suppressed	count=4
function	with some polite ||| replacement string	count=1
function	thread ||| to thread	count=1
function	[function] should be ||| get displayable [function]	count=3
class	create ||| factory	count=1
module	connect to the ||| conch ssh	count=1
class	from the [class] consumer ||| [class] body	count=1
arg	scheduler-like object ||| terminationpredicatefactory scheduler started	count=1
function_arg	[function_1] transport ||| [arg_2] [function_1]	count=3
class	selectable for notification of ||| win32reactor	count=1
module	the data suitable for ||| conch ssh	count=1
function	chunk of body ||| chunk	count=1
class	for the given configuration ||| unix app	count=1
function	[function_1] exchange ||| [function_2] [function_1]	count=18
module_class	group [class_2] ||| [module_1] [class_2]	count=13
function	messages which share an ||| kex dh gex	count=1
arg	[arg_1] broker ||| [arg_2] [arg_1]	count=1
function	runner ||| runner	count=2
function	this group from ||| group	count=1
function	build the main ||| main	count=1
module	subclass or ||| trial	count=1
class	number of [class] passed as ||| [class]	count=1
module_class	[module_1] file from ||| [module_1] [class_2]	count=6
function	the contact list ||| contact changed	count=1
function	as secondary for ||| opt secondary	count=2
arg	the filename of ||| filename	count=2
function	file from ||| file	count=1
function	it ||| get replacement string	count=1
arg	'message' in the ||| message	count=1
function_arg	a blob of certificate [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	successful anonymous cred login ||| cb anonymous	count=1
class	for ||| domain delivery base	count=1
function	a chunk of ||| chunk	count=1
class	the timer ||| looping	count=1
arg	given interface ||| interface	count=2
function	the test ||| test	count=3
class	@raise alreadycancelled raised ||| delayed	count=1
function	behavior of pythonpath's sys ||| sys	count=1
function	write to the ||| write	count=1
class	to an authentication ||| user auth	count=1
class	is ||| maildir name	count=1
class	pop3 ||| pop3	count=2
class	all ||| maildir name generator	count=2
function	waiting to ||| waiting	count=1
class	this function across all ||| name	count=1
function	timestamp ||| timestamp	count=1
function	rectangle ||| rectangle	count=1
function	which share ||| kex dh gex	count=1
class	close the file ||| file receive	count=1
function_arg	a msg_unimplemented [arg_2] ||| [function_1] [arg_2]	count=1
function	of shell ||| shell	count=1
module_class	the file ||| python file	count=1
arg	and was ||| error	count=1
module	denied and for the ||| web	count=1
module_class	[module_1] http ||| [module_1] [class_2]	count=1
class	cookie jar ||| cookie agent	count=2
module_class	this [class_2] ||| [module_1] file [class_2]	count=4
arg	the given test ||| test	count=4
function	construct a stream server ||| server	count=1
module	the callback ||| conch	count=1
class	this task is ||| cooperative task	count=1
function_arg	msg_unimplemented [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] topic ||| [function_2] [function_1]	count=2
class	the ||| file	count=1
function	already a child ||| child	count=1
class	receiver for each alias ||| alias group	count=1
module	to do stop the ||| conch	count=1
rep	the watch [function_arg_2] ||| [module_class_1] [function_arg_2]	count=2
class	of a www-authenticate challenge ||| factory	count=1
function	while key ||| key	count=1
function	any of ||| get	count=1
arg	pre-built l{servicemanager}, using the ||| password	count=1
module	our broker ||| spread	count=1
module	invoke it ||| protocols	count=1
arg	given request if possible ||| request	count=1
arg	and a queue ||| queue	count=1
function	line of the ||| line	count=1
arg	the given status ||| status	count=1
function	an object for ||| for	count=1
module	constructs a ||| protocols jabber	count=1
function_arg	a string [arg_2] ||| [function_1] [arg_2]	count=6
module_class	the certificate for ||| internet certificate	count=1
function	[function_1] previously-remembered url ||| [function_2] [function_1]	count=1
class	representation from self ||| stanza error	count=1
class	processes ||| name generator	count=1
arg	checks to see if ||| pubkey options	count=1
function	body has been received ||| received	count=1
module	long as that ||| trial	count=1
function	messages ||| call	count=1
function	this private ||| private blob	count=1
class	formatting state has ||| formatting state	count=2
function	to bad requests ||| to bad request	count=9
arg	failed ||| todo	count=1
function	for a ||| get replacement string	count=1
function	box containing serialized ||| box	count=1
module	c{_deprecated_info} flag ||| python	count=1
function	a documentation string describing ||| xmlrpc method help	count=1
class	create a ||| iopen sslserver connection creator	count=1
module	polite ||| python	count=1
function	log prefix to use ||| get log prefix	count=1
function	python session [function] attribute to ||| add unique [function]	count=1
arg	keys ||| keys	count=1
module	the global python path ||| python	count=1
arg	mac values ||| data mac	count=1
function	unused ||| unused	count=1
class	channel ||| ircclient	count=1
function	from modules instance ||| name	count=1
function	a clientside ||| and observe for	count=1
class	exposed method ||| expose	count=1
arg	for a given avatarid ||| avatarid	count=1
module	check if ||| python	count=2
function	[function_1] type of ||| [function_2] [function_1]	count=5
class	test if any ||| test case	count=1
function	a child resource all ||| child with	count=1
module_class	[module_1] [class_2] ||| [module_1] chunked [class_2]	count=4
module	get a new l{dnsdatagramprotocol} ||| names	count=1
function	print 'message' in ||| line	count=1
function	surround ||| replacement	count=1
arg	file descriptor ||| fd request args	count=1
class	formatting state has set ||| formatting state	count=2
arg	text by writing it ||| text	count=1
arg	specific header from ||| header	count=1
class	if a checker ||| sshprotocol checker	count=1
function	different messages which share ||| ssh kex dh gex group	count=1
class	handle ||| pop3	count=3
function	l{bytes} [function] path the ||| [function]	count=1
module_class	[module_1] headers ||| [module_1] [class_2]	count=3
class	is intended ||| maildir name	count=1
function	[function_1] window by ||| [function_1] [function_2]	count=3
function	this ||| unique	count=1
function	an error ||| server error	count=1
function	connection ||| notify no connection	count=1
class	this is unconnected ||| iprotocol factory	count=1
arg	c{newpath} ||| newpath encoding	count=1
arg	flags for [arg_2] ||| [arg_1] [arg_2]	count=1
arg	a pre-built l{servicemanager}, ||| jid	count=1
module	pythonmodule pythonattribute a ||| trial	count=1
class	[class_1] retrieving ||| [class_2] [class_1]	count=6
function	log prefix as ||| log prefix	count=1
class	initialization ||| base feature	count=1
function_arg	[function_1] [arg_2] response is expected ||| [function_1] [arg_2]	count=2
function	targets allowable ||| targmax	count=1
function_arg	item [function_1] [arg_2] be a group ||| [function_1] [arg_2]	count=2
class	@param ||| record minfo	count=1
function_arg	[function_1] creator ||| [arg_2] [function_1]	count=3
module	this base uri ||| python	count=1
module_class	[module_1] failure ||| [module_1] [class_2]	count=4
class	the server gotoverview() is ||| nntpclient	count=1
arg	filename the ||| filename	count=1
module	c{request}'s uri deprecated ||| web	count=1
function	of the ipv4 ||| a	count=1
function	received that answered ||| received	count=1
function	for ||| get	count=2
class	when l{httpchannel} has determined ||| ideprecated httpchannel to request interface	count=1
arg	messages have ||| newflags	count=1
function	[function_1] character set ||| [function_1] [function_2]	count=1
arg	a broker and ||| broker	count=1
function	the above mapping adding ||| log level mapping	count=1
function	for outgoing multicast packets ||| outgoing	count=1
function	'recent' flag ||| recent count	count=1
class	l{iprotocol datareceived} [class_2] ||| [class_2] [class_1]	count=1
module	the connection to the ||| protocols	count=1
function	if c{so_keepalive} is enabled ||| tcp keep alive	count=1
arg	given status ||| status	count=1
class	this call for a ||| call	count=1
arg	issue a query ||| query servers	count=1
function_arg	[function_1] this ||| [arg_2] [function_1]	count=5
function	[function_1] remote xml-rpc ||| [function_2] [function_1]	count=1
function	body for ||| body request	count=1
module	to the server possibly ||| conch	count=1
function	for consuming ||| prepare for	count=1
class	other side is sending ||| sshconnection	count=1
class	their string representations ||| janitor	count=1
arg	containing unit ||| filename	count=1
arg	c{applicationobject}, which ||| applicationobject	count=1
arg	name from the global ||| name	count=1
function	from list of disconnect ||| notify on disconnect	count=1
class	the given ||| transport	count=1
module	of a particular positioning ||| positioning	count=1
function	gsv ||| fix gsv	count=1
class	arrange ||| resolver	count=1
arg	by l{h2stream} objects to ||| streamid	count=1
class	alias ||| address alias	count=1
module	to enable ||| conch	count=1
arg	query to a server ||| query servers timeout queriesleft	count=1
function	initialization ||| initialization	count=1
arg	a provided value ||| attrib value	count=1
arg	[arg_1] an error ||| [arg_2] [arg_1]	count=3
function	method ||| get method	count=1
class	a l{filedescriptor} for monitoring ||| glib reactor base	count=1
function	the initial [function_2] ||| [function_2] [function_1]	count=1
arg	constructs a ||| password	count=1
function	non-blocking socket ||| internet socket	count=1
arg	[arg] prompt to ||| [arg]	count=2
class	the pop3 server ||| factory pop3	count=1
function	print [function_2] ||| [function_1] [function_2]	count=4
function	our [function] so re-add ||| [function]	count=1
function	i{less than} ||| lt	count=1
function	exists in the database ||| exists	count=1
function_arg	[function_1] data over ||| [function_1] [arg_2]	count=3
function	the presence of ||| contains	count=1
class	satellite ||| nmeaadapter	count=1
function	return the fileno() of ||| fileno	count=1
function	removes ||| remove	count=1
function	mail exchange host ||| mx	count=1
function	partial xml document @param ||| xml	count=1
class	reactor methods ||| ireactor	count=1
module_class	a persistent connection to [module_1] [class_2] ||| [module_1] httpconnection [class_2] put connection key connection	count=4
class	the file and create ||| log file	count=2
function	spawn ||| spawn	count=1
function	udp ||| listen multicast	count=1
function	for a password ||| auth password	count=1
function	[function_1] generator and ||| [function_1] [function_2]	count=1
function	left ||| left	count=1
function_arg	coerce a failure [function_1] [arg_2] failure ||| exc info or failure [function_1] [arg_2]	count=1
module_class	number of [class_2] ||| [module_1] [class_2]	count=4
arg	strports description into a ||| description	count=1
function	initialize it with ||| init	count=1
function	[function_1] a string ||| [function_1] deprecation warning [function_2]	count=2
function	switching ||| start tls	count=1
function	share an ||| kex dh gex group	count=1
function	modules instance ||| name	count=1
arg	initiate a [arg_2] ||| [arg_2] [arg_1]	count=4
function	complete ||| complete	count=1
module_class	the leaf resource ||| web iresource	count=1
function_arg	[function_1] of data ||| [arg_2] [function_1]	count=4
function	a progress bar ||| bar	count=1
arg	l{imessagepart} provider ||| attrs	count=1
function	to c{other} if ||| is equal to	count=2
function	personal ||| get personal	count=1
module	generate the ||| python	count=1
function	protocol message [function] version-number ||| [function]	count=1
class	we ||| itelnet transport	count=2
arg	mname [arg_2] ||| [arg_2] [arg_1]	count=1
class	domain name if it ||| domain	count=1
function	a list of ||| list methods	count=1
class	create a random value ||| digest credential factory	count=1
function	initialize a session ||| init	count=1
function	new ||| set new	count=1
module	at the ||| conch	count=2
function	reading writing [function_2] ||| [function_1] [function_2]	count=3
function	a successful anonymous cred ||| cb anonymous	count=1
arg	object c{classobj}, returns ||| classobj	count=1
arg	l{localworkeramp} instance ||| testcases cooperate	count=1
function	forcefully abort ||| abort	count=1
class	a www-authenticate challenge ||| digest	count=1
function	[function_1] l{iresponse} ||| [function_2] [function_1]	count=4
class	port for tls connections ||| port	count=1
class	value suitable for use ||| credential	count=1
module_class	[module_1] is ||| [module_1] [class_2]	count=8
module	if this ||| python	count=7
class	of c{key} by given ||| mem cache protocol	count=2
function	a new [function_2] ||| [function_1] [function_2]	count=5
arg	dotted quad representation ||| maximumqueries reactor resolverfactory	count=1
function	successful anonymous cred ||| cb anonymous authentication	count=2
function	return the name ||| get news name	count=1
function	prepare ||| prepare	count=2
module	which uses the ||| web	count=1
function	an _exc_info if ||| exc info	count=1
function	list of segments ||| segments	count=1
function	specified then run ||| run	count=1
function	unused directory ||| unused test directory	count=1
class	since last ||| log	count=1
function	ao i'll [function] ||| [function]	count=1
class	select and ||| initializer	count=1
function	pwd module ||| pwd get by name	count=1
function_arg	[function_1] maps fully ||| [arg_2] [function_1]	count=1
function	registration [function_2] ||| [function_1] [function_2]	count=2
arg	some data ||| data	count=10
function	on to the ||| on	count=1
class	[class_1] redirection ||| [class_2] [class_1]	count=3
function	[function_1] string ||| [function_1] [function_2]	count=2
function	build the api documentation ||| build apidocs	count=1
function	file ||| file	count=19
class	the file and ||| daily log file	count=1
function	string representations ||| clean	count=1
class	in ||| python path	count=1
arg	test raises [arg_2] ||| [arg_2] [arg_1]	count=1
function	current [function] prompt ||| draw [function]	count=1
arg	header line ||| line	count=2
function_arg	@param [arg_2] ||| [function_1] [arg_2] func args kw	count=4
function_arg	[function_1] failure ||| [function_1] unexpected [arg_2]	count=1
class	server gotoverview() ||| nntpclient	count=1
function	registers an authenticator ||| authenticator	count=1
arg	mapping strings ||| strings objects proto	count=2
function_arg	[function_1] filename the ||| [arg_2] [function_1]	count=1
function	api documentation ||| apidocs	count=1
function	is mac [function_2] ||| [function_2] [function_1]	count=1
function	read from ||| read from	count=2
module	pre-built ||| words protocols	count=1
function	write error ||| err	count=1
function_arg	fail if [arg_2] ||| [function_1] [arg_2]	count=4
function	load absolutely anything ||| load	count=1
function	and of ||| and	count=1
function	returns the group id ||| group id	count=1
class	new l{agent} ||| agent	count=1
function	write ||| write	count=35
function	is an ||| is	count=1
function	standard format for ||| for	count=1
function	will ||| receiving	count=1
function	send the given signal ||| signal	count=1
class	[class_1] provider ||| [class_1] [class_2]	count=1
function	requested a channel ||| lookup channel	count=1
function	sign [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] [function_2] ||| [function_1] brief [function_2]	count=2
class	initialization ||| initiating initializer	count=1
arg	the specified strport ||| strport	count=1
function	check if [function_2] ||| [function_2] [function_1]	count=2
class	of this tag ||| tag	count=1
function	an ip address ||| get host	count=1
arg	for the given group ||| group low high	count=1
module	expiration of the ||| mail	count=1
class	attempt ||| httpclient factory	count=1
function	[function_1] snac and ||| [function_2] [function_1]	count=1
function	beginning ||| beginning	count=1
function	header into start ||| header	count=1
arg	path this ||| path protocol offset	count=1
function	channel ||| channel	count=8
function	as a ||| get	count=1
function	a callback for ||| callback	count=1
function	and returns ||| output and	count=2
arg	given test [arg_2] ||| [arg_2] [arg_1]	count=4
arg	tests that are ||| thing recurse	count=1
function	for the ||| for	count=5
function	[function_1] from an ||| [function_1] [function_2]	count=3
function	l{secondaryauthorityservice} [function_1] [function_2] ||| [function_1] [function_2]	count=18
function	specific section ||| specific	count=1
module	reboots ||| mail	count=1
function	still active false if ||| active	count=1
arg	dns queries via ||| queries timeout	count=2
function	[function_1] of the ||| [function_2] [function_1]	count=1
class	if the type ||| with	count=1
arg	filesystem to the ||| fn	count=1
function	publish an ||| publish	count=1
function	map the given fs ||| map	count=1
function	deliver ||| deliver body initial	count=2
class	to build news for ||| news builder	count=1
arg	an l{imessagepart} provider which ||| attrs	count=1
arg	[arg] them ||| [arg]	count=1
function	[function_1] observer ||| [function_2] [function_1]	count=6
class	sending messages via amp ||| dispatcher	count=1
function	of hard [function_2] ||| [function_1] [function_2]	count=1
arg	query checking ||| query timeout queriesleft	count=1
class	when a transport ||| abstract datagram	count=1
function	get the given ||| get	count=1
module	and setup authentication ||| jabber	count=1
class	the ||| cert	count=1
function	request the ||| request	count=2
class	key matches the ||| sshpublic key database	count=1
class	log event as ||| log	count=1
function	buffer this ||| buffer	count=1
function	files [function_2] ||| [function_2] [function_1]	count=3
function	channel request ||| ssh channel	count=1
function	body data [function_2] ||| [function_2] [function_1]	count=2
arg	response to a query ||| response query timeout	count=1
function	call remote xml-rpc ||| call remote	count=2
function	a random ||| generate	count=1
function_arg	[function_1] for ||| [arg_2] [function_1]	count=1
class	the user is conversing ||| conversation	count=1
module	by [module] ||| [module]	count=3
function	c{setup}, [function] method ||| run fixtures and [function]	count=1
arg	name base path to ||| name	count=1
class	when this task is ||| task	count=1
function	a connection for the ||| connection for tls	count=2
function	get root [function_2] ||| [function_1] [function_2]	count=1
class	a retry ||| client	count=1
class	for a ||| base	count=1
module	see l{twisted internet ||| internet	count=1
arg	channel [arg_2] ||| [arg_2] [arg_1]	count=2
arg	an error ||| error	count=3
function	bytes to its window ||| channel window adjust	count=1
function	a pre-built l{servicemanager}, using ||| build service	count=1
function	i{sigchld} handler [function_2] ||| [function_2] [function_1]	count=5
class	this ||| ipidfile	count=1
class	box ignoring ||| box	count=1
function	[function] the response ||| [function]	count=1
class	received data ||| netstring receiver	count=2
function	both a textual and ||| host as bytes and text	count=1
function	or private lsh ||| lsh	count=1
function	[function_1] a thread ||| [function_2] [function_1]	count=1
function_arg	parse a [arg_2] ||| [function_1] [arg_2]	count=7
class	perform a txt record ||| iresolver	count=1
function	next chunk [function] ||| [function]	count=2
function	sequence of application ||| sequence	count=1
function	offset and [function_2] ||| [function_2] [function_1]	count=1
class	whether ||| sendmsg mixin	count=1
function	l{h2stream} objects [function] response data ||| [function] data to	count=1
function	unpack ||| unpack open direct tcpip	count=1
module	sent us [module_2] ||| [module_2] [module_1]	count=1
class	name to domain ||| domain	count=1
function	a ||| replacement	count=2
class	extra arguments ||| arguments	count=1
function	set for a single ||| single	count=1
arg	a name matching c{name} ||| name	count=1
function	contact list and any ||| contact changed	count=1
module_class	ssh [class_2] ||| [module_1] [class_2]	count=1
function	file to which an ||| file	count=1
module_class	whether the [class_2] ||| [module_1] [class_2]	count=8
arg	length ||| length	count=1
function	an alternative ||| get	count=1
class	date has changed since ||| daily log file	count=1
arg	to bits bits as ||| bits	count=1
function_arg	prefix for [arg_2] ||| [function_1] [arg_2]	count=5
module	instance ||| trial	count=2
module_class	[module_1] exception ||| [module_1] [class_2]	count=8
function_arg	[function_1] [arg_2] ||| [function_1] caps [arg_2]	count=1
arg	thread and a queue ||| queue	count=1
arg	[arg_1] a name ||| [arg_1] [arg_2]	count=2
class	the ||| call	count=2
function	the underlying ||| key	count=1
function	the consumer a single ||| resume producing	count=1
function	retrieves the number of ||| number of	count=1
class	file's ||| zip	count=3
function	prepare to deliver any ||| deliver body initial	count=1
function	no additional ||| allow no	count=1
arg	message [arg_2] ||| [arg_2] [arg_1]	count=26
arg	the given path ||| path	count=2
function	retrieve ||| get component	count=1
module	the channel ||| conch ssh	count=1
function	removewriter} ||| remove writer	count=2
class	the content of c{key} ||| mem cache protocol	count=1
class	be ||| resolver	count=1
function	specified directory and return ||| get	count=1
function	named plugin ||| plugin	count=1
function	[function_1] control ||| [function_2] [function_1]	count=10
function	of that interface ||| for interface	count=1
function	[function_1] character ||| [function_2] [function_1]	count=1
function	and ||| and disconnect	count=4
function	the factory ||| factory	count=1
function	send [function_2] ||| [function_1] [function_2] data	count=1
arg	sentence with parsed ||| sentencedata	count=1
function	is msg_userauth_info_response ||| ssh userauth pk ok keyboard interactive	count=1
class	win32 event to ||| win32reactor	count=1
module	be sent when ||| conch ssh	count=1
arg	asn 1- ||| requestdata format args	count=1
function	received file ||| file descriptor received	count=1
function	as the response to ||| response	count=2
function	l{ireactorinstaller} plugins ||| reactor types	count=1
function	stop [function_2] ||| [function_1] [function_2]	count=6
function_arg	[function_1] amp data ||| [function_1] string [arg_2]	count=1
function	add a message ||| message	count=1
function	[function_1] observer ||| [function_1] [function_2]	count=6
function	internal create a non-blocking ||| create internet	count=1
function	[function_1] sequence ||| [function_2] [function_1]	count=1
class	initializes ||| speed	count=1
function_arg	[function_1] a c{failure} ||| [arg_2] [function_1]	count=2
function	a ||| string	count=2
function_arg	[function_1] name of ||| [function_1] connection control header [arg_2]	count=3
function	sequence is ||| sequence	count=1
class	this is ||| box dispatcher	count=1
function	has been ||| connection lost	count=1
module_class	[module_1] [class_2] into a pair c{ ||| [module_1] [class_2] splitext	count=2
arg	with the contents ||| i	count=1
module	is closed pop the ||| web	count=1
function	the connection ||| connection	count=16
arg	protocol to ||| protocol maxpacketsize	count=1
arg	challenge ||| challenge password	count=1
function	test for the presence ||| has key	count=1
function	it as ||| get	count=1
class	[class_1] monitoring service ||| [class_1] [class_2]	count=1
function	responding to [function_2] ||| [function_2] [function_1]	count=2
function	the [function] in ||| [function]	count=1
function	i{x-forwarded-for} header as ||| proxied	count=1
arg	of c{query} possibly more ||| msg lastsequenceid	count=1
arg	to user not an ||| user	count=1
class	domain names ||| domain	count=1
function	the threadpool used ||| thread pool	count=1
function	of pythonmodule pythonattribute a ||| name	count=1
arg	the contents of a ||| i	count=2
module_class	the [class_2] ||| [module_1] httpconnection [class_2]	count=1
function	[function_1] connection ||| [function_1] [function_2]	count=18
class	the given ||| itelnet	count=1
function	remove monitoring the ||| remove	count=1
function_arg	policy [arg_2] ||| [arg_2] [function_1]	count=1
arg	c{value} when ||| value	count=1
function	a head request is ||| is	count=1
function	to consider it as ||| get	count=1
class	deferred has ||| deferred queue	count=1
class	@param ||| raises context	count=1
module	an l{iprocesstransport} ||| runner	count=1
arg	topic [arg] ||| [arg]	count=1
function	[function_1] body ||| [function_2] [function_1]	count=2
function	mapping of arguments ||| arguments	count=1
function_arg	@param cacerts the ||| init cacerts	count=1
function	in l{unicode}-mode ||| as text mode	count=1
function	string into a ||| parse	count=1
function	system-defined home [function_2] ||| [function_1] [function_2]	count=1
class	the [class] consumer by ||| [class] body	count=1
function	signed ||| cb signed	count=1
function_arg	[function_1] osslpkey the ||| [function_1] [arg_2]	count=1
class	[class_1] file when ||| [class_2] [class_1]	count=6
arg	topic to [arg_2] ||| [arg_2] [arg_1]	count=2
function	selected [function_2] ||| [function_1] [function_2]	count=1
arg	progress ||| messagetype	count=1
function	-> boolean ||| is	count=1
function_arg	chunks for [arg_2] ||| [arg_2] [function_1]	count=1
arg	register a callback ||| callback	count=1
function	application-level [function] which ||| [function]	count=1
function	text to ||| text	count=1
arg	[arg_1] a query ||| [arg_1] [arg_2]	count=3
function_arg	msg_kex_dh_gex_reply message [arg_2] ||| [function_1] [arg_2]	count=1
function	text exhorting the ||| replacement	count=1
module_class	from the pool ||| web httpconnection pool	count=1
module	the response to ||| web	count=1
module	public key given ||| ssh	count=1
class	www-authenticate ||| credential	count=1
function	an ||| force stop process	count=1
function_arg	[function_1] iterator ||| [function_1] [arg_2]	count=2
function	an ||| stop	count=1
function	an l{ipv4address} or l{ipv6address} ||| get host	count=1
function	text exhorting ||| get replacement	count=1
function	this l{deferred} ||| deferred	count=1
function	mime types ||| mime types	count=1
function	the [function] ||| [function] log	count=3
function	factory to [function_2] ||| [function_2] [function_1]	count=2
function	message for ||| message	count=3
arg	get the username ||| username	count=1
function	[function_1] instance ||| [function_2] [function_1]	count=3
function	gets an attribute ||| getattr	count=1
function	return the number ||| get message count	count=1
arg	with a unique ||| uid reactor	count=1
function	for joining to c{path} ||| to filesystem	count=1
function	set which local class ||| set unjellyable for class	count=1
arg	l{bytes} or l{unicode} ||| cls ttl	count=1
function	the receive [function_2] ||| [function_2] [function_1]	count=1
arg	[arg_1] [arg_2] ||| [arg_1] client [arg_2]	count=1
class	the xmlstream when the ||| listen authenticator	count=1
module	return the ||| python	count=4
class	underlying connection ||| bypass tls	count=1
function	extracts payload information from ||| extract payload	count=1
function	addressresolved} ||| address resolved	count=1
arg	of the given channel ||| channel	count=1
class	protocol you need ||| binary box protocol	count=1
function	open [function_2] ||| [function_2] [function_1]	count=5
function	retrieve a static ||| get	count=1
module	the default ||| conch	count=1
class	changed ||| log	count=1
class	authentication ||| auth client	count=2
class	git repository ||| git command	count=1
function	bytes ||| length	count=1
arg	extdata a dict of ||| extdata	count=1
class	the file ||| base log file	count=2
function	[function_1] method associated ||| [function_2] [function_1]	count=1
function_arg	append file [arg_2] ||| [function_1] [arg_2]	count=4
function	a testcase ||| name	count=2
function	the response [function] corresponding to ||| [function]	count=1
class	changed since ||| daily log	count=1
function	sets up variables necessary ||| consumption	count=1
arg	to user ||| user	count=1
arg	started first shut ||| reason	count=1
function	request the server ||| request	count=1
function	gets the hemisphere ||| hemisphere	count=1
module	a testcase subclass ||| trial	count=1
function_arg	write packet ||| write packet	count=1
function	warning method ||| warning method	count=2
class	a ||| maildir	count=1
function	the system-defined home ||| home	count=1
arg	convert a failure to ||| failure	count=1
arg	queue to use to ||| queue	count=1
function_arg	[function_1] containing ||| [arg_2] [function_1]	count=3
class	return ||| with context	count=1
arg	osslpkey ||| osslpkey	count=1
class	l{_newconnectionhelper} that created this ||| command transport	count=1
class	whether ||| file descriptor	count=1
function	stream has ||| stream	count=2
class	changing kqueue ||| kqueue reactor	count=1
function	[function_1] headers ||| [function_1] raw [function_2]	count=1
class	will ||| itelnet	count=1
class	random ||| digest credential factory	count=2
function	constructs a pre-built l{servicemanager}, ||| service manager	count=1
arg	from the given instance ||| instance	count=1
function	modification time ||| get status change time	count=1
function	in news ||| news	count=1
function	command in this ||| exec	count=1
function	running on set the ||| deprecated	count=1
class	report that ||| test result	count=1
arg	primary the ip address ||| primary	count=1
class	if the test is ||| synchronous test case	count=1
function	open a [function_2] ||| [function_2] [function_1]	count=1
function	a string representation of ||| name repr	count=1
module	the global python ||| python	count=1
function	alternative ||| replacement	count=1
class	will stop performing the ||| itelnet	count=1
function	l{defer deferred} notification of ||| when done	count=1
arg	[arg_1] an indication ||| [arg_2] [arg_1]	count=1
function	for ||| for	count=17
function	a progress bar ||| make stat bar	count=1
class	conversation ||| group conversation	count=1
arg	and uri ||| uri	count=1
function	[function_1] previously-remembered url ||| [function_1] [function_2]	count=1
arg	query checking ||| query timeout	count=1
function	message ||| to message	count=1
function	again after ||| retry	count=1
class	message [class_2] ||| [class_2] [class_1]	count=6
function	body ||| body data received finished	count=1
module	called when the transport ||| words	count=1
arg	of c{inode} with a ||| inode	count=1
arg	domain the domain to ||| domain factory	count=1
function	for sending messages via ||| remote	count=1
class	for a ||| domain delivery base	count=1
function	body of this ||| get body	count=1
function	[function_1] time at ||| [function_1] [function_2]	count=1
class	unix this ||| unix	count=1
class	server to proxy ||| proxy resource	count=1
function_arg	remove all readers ||| remove all readers	count=1
class	across all processes ||| generator	count=1
function	the given header ||| header	count=2
function	[function_1] resource ||| [function_2] [function_1]	count=4
function	imported and if ||| imported	count=1
module	c{default} value if ||| python	count=1
class	in the group conversation ||| igroup conversation	count=2
module	my ||| python	count=1
function	receive a msg_kexinit message ||| kexinit	count=1
function	generate an opaque to ||| generate opaque	count=1
function_arg	[function_1] name ||| [function_1] connection control header [arg_2]	count=3
function_arg	[function_1] information about ||| [function_1] [arg_2]	count=1
module_class	of this [class_2] ||| [module_1] [class_2]	count=24
function	argument or the global ||| maybe global	count=1
function	quote an ||| quote arguments	count=1
function	[function_1] the readers ||| [function_1] [function_2]	count=1
module	a [module] constructed from ||| [module]	count=1
function	the object it is ||| get	count=1
function_arg	drive a [arg_2] ||| [arg_2] [function_1]	count=4
function	from the ||| fetch	count=1
class	random value suitable ||| digest credential factory	count=1
function	the resumption ||| resume	count=1
function	subnegotiations for ||| subnegotiation	count=1
function	type may [function_2] ||| [function_2] message [function_1]	count=3
module	do stop the ||| conch	count=1
function	a msg_disconnect message ||| disconnect	count=1
function	or the global ||| maybe global	count=1
function	is the ||| is	count=2
function	c{bytes}, [function_2] ||| [function_2] [function_1]	count=1
function	returns a [function] this ||| [function]	count=1
arg	port ||| port protocol	count=3
arg	a connection ||| connection	count=1
class	connection factory ||| factory	count=1
module	called when [module_2] ||| [module_2] [module_1]	count=17
class	a string which is ||| name	count=1
module	of the ||| mail	count=4
function_arg	replace [arg_2] ||| [function_1] child [arg_2]	count=2
function	to indicate the ||| fail	count=1
arg	c{classobj}, returns a ||| classobj	count=1
function	ready for ||| read	count=5
module_class	platform? @return boolean indicating [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	accept response to ||| accept	count=1
function	a reply to a ||| reply	count=1
function	a deprecated ||| replacement string	count=1
function	chunk of ||| data chunk	count=1
function	begin ||| start	count=2
function	[function_1] package ||| [function_1] [function_2]	count=3
module	object ||| internet	count=1
module	on [module] object but ||| [module]	count=1
class	calls to this ||| maildir	count=1
function	constructs ||| build service manager	count=2
class	sending messages via amp ||| box dispatcher	count=1
function_arg	[function_1] reason ||| [function_1] [arg_2]	count=1
function	group ||| fetch group	count=1
function	as ||| client	count=1
module	the requested resource ||| web	count=1
module	has closed the channel ||| conch	count=1
arg	a file ||| file	count=2
module	constructs a pre-built l{servicemanager}, ||| protocols	count=1
arg	group ||| group	count=6
function	for sending ||| remote	count=1
arg	domain name and ||| name	count=1
function_arg	window by [arg_2] ||| [arg_2] [function_1]	count=1
arg	fp ||| fp	count=1
function	[function_1] producer for ||| [function_2] [function_1]	count=1
arg	the given group for ||| group	count=1
arg	passing over the ||| inobject	count=1
function	event [function_2] ||| [function_2] [function_1]	count=2
function	l{servicemanager}, using the ||| build service	count=1
module	an object with the ||| conch	count=1
module	dns ||| names	count=1
function	any of ||| deprecated	count=1
function	children not descendants ||| named children	count=1
arg	the given transport ||| transport	count=3
module	to consider it as ||| python	count=1
function	accepted our msg_channel_open request ||| ssh channel open confirmation	count=1
function	a msg_disconnect ||| ssh disconnect	count=1
module	the factory is started ||| conch	count=1
class	ansi [class_2] ||| [class_2] [class_1]	count=1
function	children to a string ||| to xml	count=1
class	the ||| credential factory	count=2
class	zippath ||| zip map impl	count=1
module	element ||| words xish	count=10
module	subclass or an instance ||| trial	count=1
arg	a datagram out ||| limit	count=1
function	key [function_2] ||| [function_1] [function_2]	count=3
function	into a function ||| unpickle function	count=1
class	add ||| ixmpphandler collection	count=1
module	called if our broker ||| spread	count=1
function	returns the user ||| user	count=1
arg	representation of this ||| type	count=1
function	addwriter} ||| add writer	count=2
arg	@param user the hostmask ||| user	count=1
function	observe ||| observe for	count=2
arg	a queue to ||| queue	count=1
function	a c{datetime time} object ||| combine date	count=1
function	arrives ||| received	count=1
function_arg	a person [arg_2] ||| [function_1] [arg_2]	count=2
function	sending messages ||| call remote	count=1
function	date [function] ||| to rfc4034date [function]	count=3
arg	set uid and gid ||| uid gid	count=1
module	a result from the ||| conch client	count=1
class	information ||| nmeaadapter	count=1
arg	hierarchy into a ||| classobj attr listobj baseclass	count=1
function	is received ||| received	count=15
class	a random value suitable ||| digest	count=1
arg	with a broker ||| broker	count=1
class	provider which will ||| endpoint	count=1
function	add all [function_2] ||| [function_2] [function_1]	count=4
class	signal handlers for the ||| signal	count=1
function	service is [function_2] ||| [function_1] [function_2]	count=4
function	a msg_userauth_failure ||| ssh userauth failure	count=1
function	-> boolean ||| allowed	count=2
function_arg	elements of [arg_2] ||| [function_1] [arg_2]	count=5
arg	to a ||| data	count=1
class	the date has ||| daily	count=1
arg	[arg_1] is ||| [arg_1] [arg_2]	count=2
function	used as the root ||| opt	count=1
class	certificate for the local ||| certificate	count=1
class	glib timeout for next ||| glib	count=1
function	methods that ||| methods	count=1
arg	given test ||| test todo	count=1
function	rename a mailbox ||| rename	count=1
arg	factory [arg_2] ||| [arg_1] backlog [arg_2]	count=1
function	new l{privatecertificate} [function_2] ||| [function_2] [function_1]	count=1
function	body for the article ||| article	count=1
arg	connects a ||| address protocol maxpacketsize mode	count=1
class	proxy has ||| proxy	count=3
class	message to its final ||| message	count=1
function	abort the ||| abort	count=1
function	helper method to send ||| send	count=1
arg	description ||| errorcode description fatal local	count=1
class	create ||| switch command	count=1
function_arg	[function_1] name base ||| [function_1] [arg_2]	count=1
function_arg	observer [arg_2] ||| [function_1] event [arg_2]	count=1
function	number of calls ||| count	count=1
module	request ||| news	count=1
class	sent with l{callremote}, ||| dispatcher	count=1
arg	port [arg_2] ||| [arg_1] [arg_2]	count=1
class	a l{filedescriptor} for ||| glib reactor base	count=1
arg	testcase the ||| testcase expected	count=1
class	input file to the ||| file	count=1
class	after [class] ||| synchronous [class]	count=2
function	reset the ||| reset	count=3
function_arg	[function_1] directory ||| [arg_2] [function_1]	count=3
module	are the ||| web	count=1
arg	is specified the ||| i	count=1
arg	given avatarid ||| avatarid	count=1
function	_wrappedfactory} ||| build protocol	count=2
class	the underlying pkey ||| public	count=1
function_arg	[function_1] [arg_2] ||| [function_1] path [arg_2]	count=5
arg	construct a l{_wrapperendpoint} ||| wrappedendpoint wrapperfactory	count=1
module	the method ||| web	count=2
function	as ||| string	count=1
function	the test to the ||| test	count=2
function	some ||| replacement	count=1
module_class	other side ||| ssh sshtransport base	count=1
module	called when [module] other ||| [module]	count=1
arg	primary ||| primary	count=1
class	if this task ||| task	count=1
arg	person ||| person newnick	count=1
arg	[arg] c{args} ||| observewarning [arg]	count=1
arg	name and ||| name	count=4
function	runner ||| make runner	count=1
function_arg	convert packed 128-bit ||| to ipv6 bytestring	count=1
class	create ||| digest credential factory	count=2
function	executing the named ||| responder	count=1
function_arg	[function_1] message an ||| [arg_2] [function_1]	count=2
module	[module] underlying ||| [module]	count=2
function	log formatted log ||| log formatter	count=1
function	string ||| from	count=1
class	an l{ampbox} ||| ibox sender	count=1
function	stdin with /dev/tty and ||| stdin	count=1
arg	l{node} which is ||| newchild oldchild	count=1
arg	[arg_1] a channel ||| [arg_1] [arg_2]	count=1
function	data ||| data finished	count=2
function	key ||| key	count=7
function	[function_1] [function_2] matching ||| [function_1] raw [function_2]	count=4
arg	the status indicator ||| consumer	count=1
function	path ||| path	count=6
class	protocol ||| box protocol	count=1
arg	if the file descriptor ||| fd	count=2
arg	pop3 [arg] short response ||| [arg]	count=1
module	the body in ||| mail	count=1
class	[class_1] address ||| [class_2] [class_1]	count=6
function	text data if any ||| gather text	count=1
class	server responses ||| pop3client	count=1
function	enable debug hooks for ||| start debug mode	count=1
function	successful anonymous ||| cb anonymous	count=1
arg	[arg_1] failed and ||| [arg_1] [arg_2]	count=1
function	normal prefix ||| prefix	count=1
function_arg	[function_1] 'in' ||| [arg_2] [function_1]	count=3
function	from a tuple ||| from	count=1
function	url for ||| root url	count=1
function	commands ||| commands	count=1
function_arg	[function_1] packet to ||| [arg_2] [function_1]	count=1
function_arg	for this broker ||| for jellier	count=1
arg	[arg] for ||| transport [arg]	count=1
arg	opaque and nonce ||| nonce clientip	count=1
function	response [function_2] ||| [function_1] [function_2]	count=1
function	parse an ||| parse fields	count=1
module	pidfile ||| application runner	count=2
class	queue ||| queue	count=4
function	representation of ||| repr	count=4
arg	if index is '') ||| index	count=1
function	[function_1] keys ||| [function_1] [function_2]	count=2
function	triggered ||| func	count=1
function_arg	[function_1] attributes ||| [function_1] path [arg_2]	count=1
function	are l{cancellederror}s to l{timeouterror}s ||| cancelled to timed out	count=1
module	initializes ||| positioning	count=1
arg	username ||| autologin username password	count=1
function_arg	article with [arg_2] ||| [arg_2] [function_1]	count=2
class	message as ||| message	count=1
function	responses to match ||| match	count=1
function	tuple to a ||| to	count=1
arg	the topic to ||| channel topic author	count=1
function	flag if any ||| deprecated	count=1
arg	a message originates ||| helo origin	count=1
function	request the overview format ||| overview	count=1
function	[function_1] server protocol ||| [function_2] [function_1]	count=3
function	create ||| create	count=11
class	[class] hasn't ||| [class]	count=1
arg	a given protocol factory ||| factory	count=1
arg	to user [arg_2] ||| [arg_1] message [arg_2]	count=1
arg	name of this message ||| name	count=1
arg	deferred after a ||| deferred id	count=1
function	display a message sent ||| message	count=1
module	has been ||| conch ssh	count=1
function	[function_1] [function_2] ||| [function_2] body [function_1]	count=6
module	the ||| words	count=7
class	an inetd ||| inetd	count=1
arg	scheduler-like object to ||| terminationpredicatefactory scheduler started	count=1
class	create and ||| chat ui	count=2
arg	domain the domain ||| domain factory	count=1
function	children not ||| children	count=1
function	value suitable ||| generate	count=1
arg	given person object return ||| person	count=1
arg	command over ||| command username	count=1
function	unique validity identifier ||| uidvalidity	count=1
arg	get the username the ||| username	count=1
class	stop performing ||| itelnet transport	count=1
function	and [function_2] ||| [function_2] to bad request [function_1]	count=1
function	article ||| article request	count=2
class	this function across all ||| maildir name generator	count=1
arg	[arg_1] and port ||| [arg_1] [arg_2]	count=5
class	duration of the test ||| synchronous test	count=1
arg	node ||| node	count=5
function	[function_1] the process ||| [function_1] [function_2]	count=2
function	[function_1] server endpoint ||| [function_2] [function_1]	count=3
function	all children to ||| to	count=1
function	[function_1] an error ||| [function_1] [function_2]	count=1
class	protocol you ||| box protocol	count=1
arg	client [arg_2] ||| sock protocol [arg_1] [arg_2]	count=1
function	input and return first ||| get	count=1
function	version number of the ||| version	count=1
function	reading writing ||| write	count=1
function	an amp box containing ||| from box	count=1
class	in a predetermined ||| failure	count=1
function	connection for ||| connection for tls	count=2
function	to continue writing ||| writing	count=1
function	as the root resource ||| opt resource	count=1
function_arg	connected [arg_2] ||| [function_1] [arg_2]	count=2
class	member of the suite ||| suite	count=1
function	[function_1] given server ||| [function_2] [function_1]	count=5
function	is the [function_2] ||| [function_2] [function_1]	count=2
function	uidl ||| uidl	count=1
class	back ||| sshuser	count=2
class	initializes ||| sshpublic	count=1
function	prepare the c{self ||| prepare extensions	count=1
function	exteneded [function_2] ||| [function_2] [function_1]	count=1
function	c{name} ||| by	count=1
class	i close the file ||| dcc file receive	count=1
function	[function_1] or was ||| [function_1] [function_2]	count=3
class	is ||| assert raises context	count=1
class	for this task ||| task	count=1
function	a twisted ||| get deprecated	count=1
class	to be unique ||| name generator	count=1
function	state ||| copyable state	count=1
function	body has been ||| body data received deferred	count=1
function	[function_1] the response ||| [function_2] [function_1]	count=1
module	attributename} property of ||| python	count=2
arg	to a ||| factory timeout checkpid	count=1
arg	tests ||| thing recurse	count=1
module	exchange initiated by the ||| conch ssh	count=1
class	of [class] consists ||| [class]	count=1
function	is the ||| call remote	count=1
arg	see ||| ttl	count=2
function	the c{_deprecated_info} flag if ||| get deprecated	count=1
module	suitable for ||| cred	count=1
class	it ||| resolver	count=2
module	enable the ||| conch	count=1
function	documentation string describing ||| method help	count=1
module_class	messages [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	the directory ||| directory	count=1
arg	l{remotereference} and the ||| obj	count=1
function	format ||| format uidlist	count=1
class	a legacy observer ||| legacy	count=1
function	user to ||| replacement string	count=1
function	with a ||| run with	count=1
function	extract the field name ||| extract	count=1
function_arg	[function_1] [arg_2] ||| [function_1] adapter factory [arg_2]	count=1
function	status of the files ||| status	count=1
function	the factory to ||| factory	count=1
function	remove a specific key ||| remove	count=1
arg	l{servicemanager}, ||| password	count=1
function	name ||| by name	count=1
function	property as [function_2] ||| [function_2] [function_1]	count=8
module	pre-built l{servicemanager}, using the ||| protocols jabber	count=1
function	start calling boxreceived on ||| start	count=1
function	textual and a binary ||| host as bytes and text	count=1
function	that the ancillary ||| ancillary	count=1
arg	[arg_1] modes on ||| [arg_1] [arg_2]	count=1
module	from modules instance ||| trial	count=1
function	[function_1] user-space send ||| [function_1] [function_2]	count=4
module	used fire the ||| conch	count=1
function	for an address ||| for	count=2
class	wrapped web context ||| deprecated to current policy	count=1
arg	failed and was expected ||| todo	count=1
function	remove [function_2] ||| [function_2] [function_1]	count=11
function	[function_1] prefix with ||| [function_1] [function_2]	count=1
function	quick and [function_2] ||| [function_2] to bad request [function_1]	count=1
function	string representing that time ||| time	count=1
function	[function_1] in a ||| [function_1] [function_2]	count=4
class	of an ||| protocol	count=2
class	the underlying pkey ||| key	count=1
arg	domain ||| service domain factory	count=1
arg	domain to connect ||| service domain	count=1
function	the attribute name on ||| name	count=1
function	[function_1] [function_2] ||| [function_2] payload [function_1]	count=3
module	a ||| words	count=1
class	[class] the ||| command [class]	count=1
module	parent ||| words protocols jabber	count=1
function	the signed [function_2] ||| [function_2] [function_1]	count=1
function_arg	ipv6 [arg_2] ||| [arg_2] [function_1]	count=1
arg	invoke [arg] that may ||| [arg]	count=1
function	contacts list associated ||| contacts list	count=1
function	as an ||| get replacement	count=1
module	sending the failure in ||| conch ssh	count=1
function	different messages which share ||| kex dh gex	count=1
class	cross reference ||| twisted sphinx inventory	count=1
function	the ||| cancel get	count=1
function	decorators ||| get deprecated	count=1
module	when a connection ||| protocols jabber	count=1
function	normal prefix to include ||| log prefix	count=1
arg	[arg_1] unexpected ||| test [arg_1] [arg_2]	count=1
function	return the current failure ||| failure	count=1
arg	replacement ||| replacement	count=1
class	string which ||| maildir name	count=1
function	do the ||| do	count=1
function_arg	[function_1] new l{connectionpool} ||| [arg_2] [function_1]	count=1
class	all calls to this ||| maildir	count=1
function	request to a channel ||| channel request	count=1
function_arg	[function_1] it'll translate ||| [arg_2] [function_1]	count=8
function	hemisphere [function_2] ||| [function_2] [function_1]	count=1
function	the user ||| replacement string	count=1
class	a retry ||| client machine	count=1
function	has been received ||| datagram received	count=1
function_arg	push a [arg_2] ||| [function_1] [arg_2]	count=1
function	twisted ||| get	count=1
function	global [function_2] ||| [function_1] [function_2]	count=4
class	the ipv4 ||| a	count=1
function	reap all registered ||| reap all	count=1
class	intended to be unique ||| name generator	count=1
function	for ssl ||| ssl	count=1
function_arg	[function_1] work on ||| [function_1] [arg_2]	count=1
function	body data is ||| body data finished	count=2
function	amp invoke ||| remote	count=1
function	successfully posted ||| post	count=1
class	all ||| with	count=1
function	connected to a ||| connected	count=1
function	l{response} [function] ||| body data received [function]	count=1
arg	query to a ||| query servers timeout	count=1
arg	indicated warnings [arg] invoking c{f} ||| [arg]	count=1
class	contacts [class_2] ||| [class_1] [class_2]	count=1
function	return the full ||| get path	count=1
function	protocol conditions ||| protocol error	count=2
class	process identified ||| iprocess transport	count=1
module	constructs a pre-built ||| protocols	count=1
function	to listen for ssl ||| listen	count=1
class	performing the given ||| transport	count=1
function_arg	@param opener ||| init opener	count=1
function	messages which share ||| kex dh gex	count=1
module	to this resource the ||| web	count=1
module	find the root ||| conch	count=1
class	token ||| semaphore	count=1
class	the altitude ||| altitude	count=1
class	an authentication ||| user auth	count=1
class	into this charstr ||| charstr	count=1
class	underlying ||| key	count=1
function	is the ||| call	count=1
module	when the ||| conch	count=4
class	that was provided ||| invalid	count=1
function	ok to uncache an ||| proto uncache	count=1
module_class	this method may ||| protocols iwrite	count=1
function	for when a request ||| request	count=2
arg	decoder ||| decoder	count=1
module	to ||| conch	count=8
function	[function_1] while key ||| [function_2] exchange message [function_1]	count=1
class	the pop3 server ||| iserver factory pop3	count=1
class	received ||| receiver	count=2
function	to deliver any future ||| deliver body initial	count=1
function	to consider it ||| get replacement	count=1
function	an object from ||| name	count=1
function	if two [function] ||| [function]	count=1
function	return a class to ||| get service	count=1
module	indicate that ||| conch	count=1
module	the host entries ||| conch client	count=1
module	value of this ||| positioning	count=1
function	amp box containing serialized ||| box	count=1
module	the passphrase if the ||| conch	count=1
function	expat-based stream if available ||| stream	count=1
class	file descriptors currently ||| fdset	count=2
function	body has been completely ||| body data	count=1
function	a hash ||| key hash	count=1
function	for a single ||| single	count=1
class	l{_newconnectionhelper} that ||| command transport	count=1
module_class	this alias ||| mail alias	count=1
class	be unique across ||| maildir	count=1
function	handle ||| handle	count=8
function	that time ||| time	count=1
function	[function_1] system-defined home ||| [function_1] [function_2]	count=1
module	text exhorting ||| python	count=1
function	a gsv ||| gsv	count=1
function	the test [function_2] ||| [function_2] [function_1]	count=4
function	the response ||| response from	count=2
function	get registration ||| get registration	count=2
function	execute ||| run	count=1
function_arg	[function_1] method for ||| [function_1] [arg_2]	count=2
function	of targets allowable for ||| targmax	count=1
function	function returns a persistent ||| get persistent	count=1
function	[function_1] normal characters ||| [function_2] [function_1]	count=2
module	[module] current ||| [module]	count=2
function	instances over tcp ||| tcp	count=1
function	return the [function_2] ||| [function_2] [function_1]	count=26
class	a context [class_2] ||| [class_2] [class_1]	count=2
class	[class_1] the mailbox ||| [class_2] [class_1]	count=6
function	scheme l{bytes} @param ||| init	count=1
function_arg	[function_1] and ||| [arg_2] [function_1]	count=3
function	msg_userauth_info_response ||| userauth pk ok keyboard interactive	count=2
function	that replaces stdout ||| replace stdout	count=1
function	and add as child ||| add element	count=1
arg	[arg_1] [arg_2] ||| data [arg_1] [arg_2] data	count=8
function	or an instance of ||| name	count=1
function	monitoring for all registered ||| all	count=1
class	of c{key} only ||| mem cache protocol	count=1
arg	optional message ||| message	count=1
class	by the xmlstream when ||| listen authenticator	count=1
arg	there's anything left ||| qname	count=1
function	constructs a pre-built ||| service manager	count=1
class	watch ||| inotify	count=1
function	given port command ||| port command	count=1
function	records ||| records	count=1
function	puts method names ||| add method names to	count=1
function	from a file ||| from file	count=3
function	[function_1] decimal ||| [function_1] [function_2]	count=1
module_class	[module_1] outgoing ||| [module_1] [class_2]	count=2
function	twisted ||| deprecated	count=1
function	interface for ||| interface	count=1
function_arg	chat [arg_2] ||| [function_1] [arg_2]	count=3
function	set the ||| set	count=17
function	requested a channel of ||| lookup channel	count=1
function	api ||| string	count=1
function_arg	[function_1] mapping ||| [arg_2] [function_1]	count=1
arg	iterator to the ||| iterator	count=1
module	setup authentication ||| words protocols	count=1
class	the configured file ||| file	count=1
function_arg	not [arg_2] ||| [function_1] imported [arg_2]	count=3
arg	initializes a l{sshpublickeychecker} ||| keydb	count=1
module	in which the server ||| mail	count=2
class	function ||| maildir name	count=1
class	to this function across ||| name	count=1
class	unconnected from a ||| iprotocol	count=1
function	representation of c{root} into ||| flatten	count=1
arg	data [arg] ||| [arg] datatype	count=2
module	since last write ||| python	count=1
function	add an [function_2] ||| [function_2] [function_1]	count=4
module_class	other side ||| ssh sshconnection	count=2
function_arg	a query [arg_2] ||| [function_1] [arg_2]	count=2
function	messages which share ||| ssh kex dh gex	count=1
class	initialize a session ||| session	count=1
arg	object c{classobj}, ||| classobj prefix	count=1
function	write the given data ||| write	count=1
function	is ||| is writing	count=1
class	reactor may sleep ||| reactor	count=1
class	value suitable for use ||| digest credential	count=1
function_arg	[function_1] channel ||| [function_1] [arg_2]	count=5
function	channel [function_2] ||| [function_1] [function_2]	count=4
class	indicate that ||| itelnet	count=1
module	the beginning ||| conch	count=1
function_arg	[function_1] look up ||| [function_1] [arg_2]	count=1
module	issue a ||| names	count=1
module	instance of [module] command with ||| [module]	count=1
function	with ||| replacement	count=1
function	has changed since last ||| should	count=1
class	authorities to trust when ||| open sslcertificate authorities	count=1
arg	of c{query} ||| query msgid msg lastsequenceid	count=1
class	l{httpchannel} ||| ideprecated httpchannel to request interface	count=2
arg	option ||| option	count=6
module	satellite information from ||| positioning	count=1
function	name of the group ||| group	count=1
function_arg	[function_1] group for ||| [function_1] [arg_2]	count=2
function	disposition and ||| disposition	count=1
module	changed ||| python	count=1
function_arg	[function_1] username the ||| [function_1] [arg_2]	count=1
class	which this structure object ||| structure	count=2
function	and device ||| get device	count=1
class	retry attempt ||| client	count=1
class	date has changed ||| daily log	count=1
function	session cookie and ||| session	count=1
function	a query ||| query	count=3
arg	of c{query} possibly more ||| lastsequenceid	count=1
function	[function_1] command ||| [function_2] [function_1]	count=4
module	@see l{twisted internet ||| internet	count=1
module	the emacs variable ||| scripts	count=1
class	the test case ||| synchronous test case	count=2
arg	strports description into ||| description	count=1
class	file ||| file password	count=1
class	initialization ||| feature initiating initializer	count=1
module	incoming mac using the ||| conch	count=1
function	leave a ||| leave	count=1
function	authentication [function_2] ||| [function_1] [function_2]	count=1
class	window or create and ||| ui	count=2
class	to this function ||| name	count=1
function_arg	[function_1] publisher ||| [function_1] [arg_2]	count=1
module	using the ||| conch	count=4
class	@param ||| record afsdb	count=1
module	python path ||| python	count=1
arg	change the modes on ||| chan set modes	count=1
module	of [module] channel ||| [module]	count=1
function	new instance of ||| new instance	count=2
function	anonymous cred ||| anonymous authentication	count=1
function	[function_1] code representing ||| [function_1] [function_2]	count=4
function	the user ||| replacement	count=1
function_arg	sanity of lengthasstring ||| string size lengthasstring	count=1
arg	cannot ||| relay	count=2
function	adjust the number ||| adjust	count=1
function	[function_1] server ||| [function_2] connection [function_1]	count=1
module	element has been received ||| words xish	count=2
class	which this observer will ||| log observer	count=1
module	the next message ||| mail	count=1
class	listening on the endpoint ||| server endpoint	count=1
function	an ||| proto	count=1
function	l{iprocesstransport} provider ||| force stop	count=1
function	a vt102 control sequence ||| to vt102	count=1
function	body of this message ||| body	count=1
arg	bytes to the ||| bytes	count=1
function_arg	registration info [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] before c{teardown} ||| [class_2] [class_1] add cleanup	count=1
function	a pre-built l{servicemanager}, using ||| service manager	count=1
class	on this test if ||| test	count=1
arg	connects a ||| protocol maxpacketsize	count=1
module	close the connection ||| web	count=1
module	get ||| names	count=1
function	the host that ||| host	count=1
module	the attributes this ||| python	count=1
arg	http header ||| request	count=1
function	heartbeat l{loopingcall} ||| heartbeat	count=1
function_arg	[function_1] [arg_2] with the specified c{nodeid} ||| [function_1] [arg_2] nodeid nodeattrs	count=4
function	key ||| and set	count=1
module	to generate control functions ||| conch insults	count=1
class	the date has ||| daily log	count=1
function	size of ||| file size	count=1
module_class	return the fileno() ||| internet process writer	count=1
function	a processor ||| opt processor	count=1
module	given packet using the ||| conch	count=1
function	remove monitoring the given ||| remove	count=1
function_arg	[function_1] protocol to ||| [arg_2] [function_1]	count=1
function	returns [function_2] ||| [function_2] [function_1]	count=7
function	c{root} into [function_2] ||| [function_2] [function_1]	count=1
class	as ||| digest	count=1
arg	giving a reason that ||| reason	count=1
function	sub-messages of ||| parts	count=1
function	and return their ||| clean	count=1
module	surrounding the line this ||| web	count=1
module_class	the netstring has ||| protocols netstring receiver	count=1
arg	based on the given [arg_1] [arg_2] ||| value [arg_1] [arg_2]	count=11
arg	a module and ||| module	count=1
function_arg	[function_1] _switchbox with ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] the ||| [function_1] [arg_2]	count=2
class	we are connected to ||| iunixdatagram connected transport	count=1
module	internal method called ||| spread	count=1
function	plugin to ||| plugin to	count=2
function_arg	[function_1] this pidfile ||| [function_1] [arg_2]	count=1
function_arg	given keys [arg_2] ||| [function_1] [arg_2]	count=1
arg	status [arg_2] ||| [arg_2] [arg_1]	count=1
class	since ||| file	count=1
function	[function_1] failure ||| [function_1] [function_2]	count=4
module	the test unless calling ||| trial	count=1
arg	override to define behavior ||| message addr	count=2
function	as much of ||| some	count=1
class	certificate authorities to ||| authorities	count=1
function	likely uid ||| uidnext	count=1
function	[function_1] process ||| [function_1] [function_2]	count=1
class	is called when ||| iresolution receiver	count=1
function_arg	[function_1] [arg_2] ||| [function_1] message type [arg_2]	count=15
module_class	talking to [class_2] ||| [module_1] [class_2]	count=4
arg	a _switchbox with ||| innerproto	count=1
arg	c{obj} ||| obj	count=2
module	python ||| python	count=1
function	joining to c{path} ||| to filesystem	count=1
function	the active handle ||| stop reading and writing	count=1
class	l{urlpath} ||| urlpath	count=2
function	[function_1] processes ||| [function_1] [function_2]	count=1
arg	the domain to ||| service domain factory	count=1
class	win32 ||| win32reactor	count=1
arg	dummysecurityoptions ismoduleallowed modulename ||| modulename	count=1
class	all calls to ||| name	count=1
function	abort the connection ||| abort connection	count=3
arg	value constants ||| cls level	count=1
function	parameterize the time based ||| time	count=1
class	the message ||| message	count=5
function	log levels to ||| log levels	count=2
class	a string which ||| maildir name generator	count=1
arg	name to refer ||| autologin username password	count=1
class	data ||| messages parser	count=1
class	a protocol on ||| protocol	count=2
arg	key the key to ||| key value	count=1
class	duration of the test ||| synchronous test case	count=1
module	corresponsing to the ||| conch	count=1
function_arg	[function_1] mapping strings ||| [function_1] name [arg_2]	count=1
arg	number of dns ||| timeout	count=1
function	[function_1] [function_2] ||| h2connection [function_1] [function_2]	count=9
class	a string which ||| name generator	count=1
class	string for ||| base	count=1
arg	room ||| exchange fullname instance	count=1
function	a msg_userauth_failure ||| userauth failure	count=1
function	a twisted deprecation ||| get deprecated	count=1
function	called when the server ||| server	count=1
arg	disconnect ||| reasoncode description	count=1
module_class	generate the [class_2] ||| [module_1] [class_2]	count=4
function_arg	authentication method ||| auth description	count=1
class	underlying [class] and ||| deprecated [class]	count=1
function	does ||| exists	count=1
class	this proxy ||| transport proxy	count=6
function	[function_1] the ||| [function_1] [function_2]	count=1
function	box ||| box	count=1
function	fileno() of my ||| fileno	count=1
function	prepare an ||| prepare	count=1
function	stream error ||| stream error	count=2
arg	nmea [arg] minus header ||| [arg]	count=1
function	list of ||| list methods	count=1
class	file ||| base log file	count=3
function	connection to the ||| no connection	count=1
function	you ||| from aot	count=1
arg	string ||| jid password	count=1
function	[function_1] data ||| [function_2] [function_1]	count=11
function	execute ||| execute	count=1
class	rules for this broker ||| broker	count=2
function	user ||| string	count=1
arg	[arg_1] server ||| [arg_2] [arg_1]	count=2
arg	queue adding [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=1
function	possible and render ||| render	count=1
module	and [module] ||| [module]	count=1
class	a new l{dnsdatagramprotocol} ||| resolver	count=1
function	extract the ||| extract	count=1
function_arg	[function_1] of c{inode} ||| [arg_2] [function_1]	count=5
function	entity [function_2] ||| [function_1] [function_2]	count=1
function_arg	a response [arg_2] ||| [function_1] [arg_2]	count=1
module_class	[module_1] reset ||| [module_1] [class_2]	count=8
function	[function_1] docstring ||| [function_1] [function_2]	count=2
class	port ||| port	count=11
function	monitored ||| writers	count=2
class	key matches the ||| sshpublic key	count=1
function_arg	[function_1] happened server-side ||| [arg_2] [function_1]	count=1
module	method if ||| spread	count=1
function	[function_1] and ||| [function_2] [function_1]	count=26
class	entry ||| base entry	count=1
function	remove protocol ||| remove	count=1
function	returns a ||| output	count=1
class	[class_1] [class_2] number associated with it ||| [class_1] [class_2]	count=4
arg	@param request ||| request	count=1
module	failure's type is in ||| python	count=1
function	and reset the timer ||| reset	count=1
class	report ||| unit result	count=1
function	successful anonymous ||| cb anonymous authentication	count=2
arg	the domain ||| domain factory	count=1
arg	string referring to a ||| pathname	count=1
function	collect received file descriptors ||| file descriptor received	count=1
function	receive a msg_disconnect message ||| ssh disconnect	count=1
function_arg	xhdr data [arg_2] ||| [function_1] [arg_2]	count=1
function	send as much ||| some	count=1
arg	primary the ip address ||| primary domains	count=1
function	data ||| deferred close	count=1
function	to keep ||| state to	count=1
function_arg	[function_1] a callback ||| [function_1] [arg_2]	count=1
class	create a ||| digest credential factory	count=1
class	deferred has ||| deferred	count=1
function_arg	[function_1] username ||| [function_1] [arg_2]	count=1
class	unconnected ||| iprotocol factory	count=2
module	pre-built l{servicemanager}, using ||| jabber	count=1
class	that thread ||| thread worker	count=1
function	factory which is ||| factory	count=1
module	received in the ||| mail	count=1
function	inclusion in ||| escaping	count=1
function	method associated ||| method	count=1
function_arg	msg_disconnect message [arg_2] ||| [function_1] [arg_2]	count=1
function	and return ||| clean	count=1
module	[module] following order ||| [module]	count=1
function	into the receive bio ||| receive bio	count=1
function	a session ||| session	count=1
function	pwd module ||| pwd get	count=1
function	message sent ||| show message	count=1
function	a deprecated ||| get replacement string	count=1
function_arg	all [arg_2] ||| [function_1] [arg_2]	count=6
arg	c{query} ||| msg lastsequenceid	count=1
class	unpersistable ||| unpersistable	count=1
arg	this pidfile ||| exctype excvalue traceback	count=1
function	the group [function_2] ||| [function_2] [function_1]	count=3
function	l{deferred} to this l{deferred} ||| deferred	count=1
function	already ||| already	count=1
function	of sentence ||| sentence	count=1
function	interface ||| proxy for interface	count=1
class	each [class_2] ||| [class_2] [class_1]	count=2
function	authentication ||| auth	count=4
function	close all pool ||| close	count=1
class	for ||| reactor base	count=1
module	same directory as this ||| python	count=1
class	processes reboots etc ||| maildir	count=1
function_arg	format [arg_2] ||| [function_1] [arg_2]	count=2
module	it to the ||| conch client	count=1
class	which to call ||| call	count=1
function	be passed to traceback ||| traceback	count=1
arg	dns ||| timeout	count=1
module	the content of a ||| protocols	count=1
function	[function_1] a snac ||| [function_1] [function_2]	count=1
class	this lock this ||| filesystem lock	count=1
function_arg	[function_1] [arg_2] ||| [function_1] avatarid [arg_2]	count=4
function	options to the ||| options	count=1
function	for outgoing ||| outgoing	count=1
module	move the [module_2] ||| [module_1] [module_2]	count=6
class	was ||| box protocol	count=1
arg	convert [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=12
module	corresponding to the ||| conch	count=1
arg	or more [arg_2] ||| [arg_2] flags mode [arg_1]	count=1
arg	server using a username ||| username	count=1
class	a string ||| maildir name	count=1
module	when the ||| words protocols	count=1
function	transform a ||| transform	count=1
function	wait until we acquire ||| defer until locked	count=1
function	consider ||| get	count=1
function	list ||| deprecated	count=1
module	writing it to the ||| conch	count=1
function	l{bucket} corresponding ||| get bucket	count=1
function	status ||| status	count=6
arg	[arg_1] password ||| [arg_1] [arg_2]	count=3
class	all calls ||| maildir	count=1
function_arg	been received [arg_2] ||| [arg_2] [function_1]	count=3
class	be unique across ||| name	count=1
module	the c{commandconnected} deferred ||| conch	count=1
module_class	when both ||| conch ssh sshsession	count=1
class	the given host ||| host	count=1
function	when raw ||| raw	count=1
function_arg	[function_1] overrides ||| [arg_2] [function_1]	count=1
function	wrap [function_1] [function_2] ||| [function_2] [function_1]	count=1
function	amp box ||| from box	count=1
class	[class] defined as ||| [class]	count=2
function	response ||| response	count=17
function	mx ||| exchange	count=1
function	pre-built ||| manager	count=1
function	notify when ||| notify	count=1
class	return ||| file transfer client	count=1
module_class	the l{_newconnectionhelper} that ||| conch command transport	count=1
function	i receive a message ||| message	count=1
module_class	[module_1] path on ||| [module_1] file [class_2]	count=3
arg	another ||| other	count=1
function	a cookie that ||| cookie	count=1
module	the features ||| protocols	count=1
function	coordinate ||| coordinate	count=1
arg	www-authenticate header @param request ||| request	count=1
function	initialize the l{filepath} with ||| init	count=1
function	for the command state ||| state command	count=1
function_arg	article [arg_2] ||| [function_1] [arg_2]	count=3
function	has been received parse ||| received	count=1
arg	client protocol to a ||| protocol maxpacketsize mode	count=1
arg	given task on the ||| task	count=1
module_class	[module_1] leaf resource ||| [module_1] [class_2]	count=8
arg	factory to ||| factory	count=1
function	hard [function_2] ||| [function_1] [function_2]	count=1
module	protocol support so that ||| protocols haproxy	count=1
function	create or retrieve an ||| get component	count=1
arg	a l{gairesolver} ||| reactor getthreadpool getaddrinfo	count=1
arg	with a failure ||| err	count=1
arg	completion system in _shellcomp ||| optname shelltype	count=1
arg	wrapper [arg_2] ||| [arg_1] [arg_2]	count=4
module_class	the [class_2] ||| [module_1] insults [class_2]	count=1
arg	a message ||| message protocol	count=1
arg	an endpoint description ||| reactor description	count=1
function	exhorting ||| string	count=1
module	port to ||| conch	count=2
arg	fd filtering ||| fd	count=1
class	the date has changed ||| daily	count=1
function	it ||| replacement string	count=1
function	object ||| get deprecated	count=1
function	the group ||| group	count=3
class	which is intended to ||| name generator	count=1
function	a pre-built l{servicemanager}, using ||| service	count=1
function	determines whether an entity ||| constraint	count=1
module	process's stdin ||| internet	count=1
class	invoke it ||| box	count=1
class	this call ||| call	count=2
function	it as an ||| replacement string	count=1
function	it to handle ||| handle	count=1
module	base64-encoding the ||| conch	count=1
function	a line containing the [function_1] [function_2] ||| [function_1] [function_2]	count=1
class	and ||| janitor	count=1
function	[function_1] path ||| [function_1] [function_2]	count=3
function	that ||| more	count=2
arg	in the ||| user	count=1
function	read/write status ||| is writeable	count=1
function	send me i ||| send	count=1
function	some warnings [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] failure ||| [function_2] [function_1]	count=4
module	the source line references ||| web	count=1
class	used by l{ireactorinthreads callinthread} ||| ireactor threads	count=1
function_arg	single test method ||| test method	count=1
arg	proxy protocol header line ||| line	count=2
class	side requested a ||| sshconnection	count=1
function	to the specified ||| to string	count=1
function	user to consider it ||| get replacement	count=1
function	sent while key exchange ||| allowed key exchange	count=1
function	read a datagram ||| read	count=1
class	file that contains ||| file	count=1
function	conditions ||| error	count=1
module	associated with this ||| im	count=1
class	the given log event ||| log	count=1
function	for a deprecated ||| string	count=1
function	trailing comma at ||| for trailing comma	count=1
module	subclass ||| trial	count=1
arg	class object c{classobj}, returns ||| classobj prefix	count=1
function	signature of c{obj}'s constructor [function_1] [function_2] should be displayed ||| [function_1] [function_2]	count=2
arg	and the object ||| wrapped	count=1
function	create and return ||| create	count=1
function	stop to ||| stop	count=1
function	[function_1] reactor ||| [function_1] [function_2]	count=4
class	called when an ||| iterminal protocol	count=1
function	load a file and ||| load	count=1
function	root [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] the value ||| [arg_2] [function_1]	count=1
class	reboots etc ||| name	count=1
module	the cursor down ||| conch insults	count=2
module_class	uses the [class_2] ||| [module_1] chunked [class_2]	count=1
function_arg	append file information ||| add file info	count=1
function	remove a ||| remove identity	count=1
function	message-id [function_2] ||| [function_2] [function_1]	count=3
class	reactor should ||| reactor	count=1
function_arg	[function_1] [arg_2] ||| [function_1] reply [arg_2]	count=2
function	directory named ||| test directory	count=1
module_class	[module_1] cookie ||| [module_1] [class_2]	count=2
arg	an argument name and ||| name	count=1
module_class	uses the [class_2] ||| [module_1] [class_2]	count=3
module	is intended to be ||| mail	count=1
function	at ||| at	count=1
class	authorities to ||| open sslcertificate authorities	count=1
arg	given status and an ||| status	count=1
module	provider ||| runner	count=1
function	log [function_2] ||| thread fdwrapper [function_1] [function_2]	count=4
function	plugin to [function_2] ||| [function_2] [function_1]	count=1
class	select and ||| saslinitiating initializer	count=1
function	connected to this protocol ||| start protocol	count=1
module_class	our broker [class_2] ||| [module_1] [class_2]	count=2
function	as ||| as	count=3
function	new l{privatecertificate} from the ||| new	count=1
module	list of all news ||| news	count=1
class	a ||| maildir name generator	count=1
module	exchange initiated by the ||| conch	count=1
class	to ||| append	count=1
function	the negation ||| not	count=1
class	changing kqueue ||| kqueue	count=1
arg	attempts to ||| lengthasstring	count=1
module	user to consider ||| python	count=1
function	stop running ||| stop	count=1
module	work ||| _threads	count=1
arg	l{staticproducer} that will produce ||| request fileforreading	count=1
module	sent us [module_2] ||| [module_1] [module_2]	count=1
function	generator ||| dhgenerator	count=1
class	key the ||| key	count=1
function_arg	[function_1] dbm ||| [function_1] [arg_2]	count=1
arg	the domain to ||| service domain	count=1
arg	a disconnect ||| reasoncode description	count=1
arg	from the relay ||| relay	count=1
function	expiration policy ||| expiration	count=1
class	which the ||| wrapper	count=1
function	disconnect callbacks ||| disconnect	count=1
arg	buddyid [arg_2] ||| item [arg_2] [arg_1]	count=1
function_arg	this group [arg_2] ||| [arg_2] [function_1]	count=1
function	with some polite ||| string	count=1
function	register to receive ||| register	count=6
class	create ||| open sslcertificate options	count=1
function	l{ipv6address} ||| host	count=2
function	[function_1] client protocol ||| [function_2] connection [function_1]	count=1
arg	c{query} ||| msgid msg lastsequenceid	count=1
class	to this ||| maildir name	count=1
function_arg	person for [arg_2] ||| [function_1] [arg_2]	count=2
class	attribute of this sentence ||| sentence	count=1
module_class	render the [class_2] ||| [module_1] [class_2]	count=6
function	arguments for a unix ||| unix	count=1
arg	content of the vcsrepository ||| fromdir exportdir	count=1
class	datagram ||| connected datagram port	count=1
function	a received [function_2] ||| [function_2] [function_1]	count=2
function	header is received ||| handle header	count=1
class	across all calls to ||| name	count=1
class	reboots etc ||| maildir	count=1
function	return a l{deferred} ||| get	count=2
function	unix client [function_2] ||| [function_2] [function_1]	count=2
function_arg	return a [arg_2] ||| [function_1] repository command [arg_2]	count=1
module_class	[module_1] this ||| [module_1] [class_2]	count=2
function	if any ||| get deprecated	count=1
function	[function_1] the uid ||| [function_2] [function_1]	count=1
arg	protocol ||| processprotocol executable	count=1
class	param [class] intervals the ||| [class]	count=1
module	the root element has ||| xish	count=2
function	check if this failure's ||| check	count=1
function	read some bytes out ||| read	count=1
function	exhorting the user to ||| replacement	count=1
function	text to the docstring ||| to docstring	count=1
function	chunks for ||| make chunks	count=1
function	pauseproducing} ||| pause producing	count=2
class	messages via amp invoke ||| dispatcher	count=1
function_arg	[function_1] hierarchy into ||| [function_1] list [arg_2]	count=4
arg	response to [arg_2] ||| [arg_1] [arg_2]	count=3
function	into an ipv6 ||| ipv6	count=1
function	check the ||| check	count=1
class	the message as ||| maildir mailbox append message	count=1
function	specify what path entry ||| entry	count=1
function	textual and ||| as bytes and text	count=1
class	this ||| pair	count=1
module	date has changed since ||| python	count=1
function	an alternative ||| get replacement string	count=1
function	[function_1] previously-remembered ||| [function_2] [function_1]	count=1
class	message ||| message	count=7
function	to run in ||| run in	count=2
function	reverse the above ||| reverse log level	count=1
function	drive a ||| drive	count=1
arg	code and description ||| errorcode description fatal	count=1
arg	utf-8 byte data for ||| data	count=1
arg	add a child resource ||| child	count=1
function_arg	[function_1] method ||| [function_1] [arg_2]	count=10
module	to be ||| mail	count=1
function_arg	create a protocolswitchcommand ||| init _prototoswitchtofactory	count=1
arg	to user not ||| user	count=1
function	the handler ||| disown handler	count=1
function	with the given failure ||| client	count=1
arg	key corresponding to this ||| cls	count=2
function	the payload ||| payload	count=2
function	lookup user information ||| lookup	count=1
class	moduledict ||| python path	count=1
module	the last value ||| web	count=2
module_class	[module_1] platform or ||| [module_1] [class_2] is known	count=3
module	display my ||| python	count=1
module_class	proxy the [module_1] [class_2] ||| [module_1] transport proxy [class_2]	count=1
arg	(a l{message} ||| cls message	count=1
arg	given request is ||| request	count=1
function	c{f} using a thread ||| defer to thread	count=1
function	constructs a pre-built ||| build	count=1
function	the authentication chain ||| auth	count=1
arg	text as a ||| text	count=1
function	[function_1] protocol configured ||| [function_1] [function_2]	count=1
class	run is ||| ireporter	count=1
function	is full or not ||| full	count=2
class	for sending ||| box	count=1
function	start the application and ||| post application	count=1
class	of c{key} by given ||| mem cache	count=2
function	group returns ||| group	count=2
class	the ||| base	count=2
arg	public key ||| publickey	count=1
function	[function] based ||| get bucket [function]	count=2
function	to send a ||| send	count=1
class	changed since last write ||| log file	count=1
class	salt host ||| hashed	count=1
function	for a unix ||| parse unix	count=1
module	program consisting [module] path ||| [module]	count=1
function	an exception object from ||| exception from	count=1
function	pythonattribute a ||| name	count=1
module	provide the ||| python	count=1
function	[function_1] new conversation ||| [function_2] [function_1]	count=1
function	[function] 4-tuples name ||| [function]	count=3
class	true if the log ||| base log	count=1
function	http user ||| user	count=1
function	partial xml document @param ||| to xml	count=1
module	delivery to the ||| conch	count=2
arg	this connector connect ||| connector	count=1
function	line [function_2] ||| [function_1] [function_2]	count=1
class	name to domain object ||| domain with default dict	count=1
arg	containing the contents of ||| i	count=1
function	retrieve a [function_2] ||| [function_1] [function_2]	count=3
function	other side has ||| close	count=1
function	to an [function_2] ||| [function_2] [function_1]	count=1
arg	the given user ||| user	count=2
module	i ||| words protocols	count=1
function_arg	or of [arg_2] ||| [function_1] [arg_2]	count=1
module	select and setup ||| protocols	count=1
module	returning c{default} value if ||| python	count=1
class	digest ||| digest	count=1
arg	to the value of ||| val	count=2
function	as a recommended subscription ||| opt subscription	count=1
function_arg	do the [arg_2] ||| [function_1] [arg_2]	count=3
function	negation ||| not	count=1
function	beginning [function_2] ||| [function_2] [function_1]	count=4
class	process's ||| writer	count=1
function	constructs a pre-built ||| build service manager	count=1
function	[function_1] parameters ||| [function_2] [function_1]	count=20
module	a protocol from the ||| conch	count=1
function	received ||| received	count=28
function	[function_1] c{other} if ||| [function_2] [function_1]	count=8
arg	digest ||| ha1 ha2 algo psznonce	count=1
class	box on ||| box	count=1
module_class	[module_1] underlying producer ||| [module_1] transport proxy [class_2]	count=3
arg	name from ||| name	count=1
class	handle ||| redirect agent	count=1
function	service ||| service	count=9
function	the c{_deprecated_info} ||| get	count=1
class	reactor ||| reactor selection	count=1
arg	normally be used ||| datatype	count=1
function	successful connection it resets ||| reset	count=1
function_arg	[function_1] l{gairesolver} ||| [function_1] [arg_2]	count=1
module_class	[module_1] [class_2] hasn't gone away ||| [module_1] [class_2] force abort client	count=3
function	above mapping adding ||| log level mapping	count=1
arg	[arg_1] [arg_2] ||| [arg_2] hostname [arg_1]	count=1
module	syspath and moduledict in ||| python	count=1
function	attempt to acquire the ||| acquire	count=1
class	distributed ||| worker reporter	count=1
function	instance of a ||| instance	count=1
arg	[arg_1] a ||| [arg_1] channel [arg_2]	count=1
function	[function] does ||| error [function]	count=2
module	and pass them ||| web	count=1
arg	server sock protocol [arg_1] [arg_2] sessionno ||| [arg_1] [arg_2]	count=1
class	xml parser ||| xml	count=1
function	any of the ||| deprecated	count=1
arg	iterator ||| iterator donedeferred	count=1
class	function ||| generator	count=1
class	to ||| to	count=1
function	[function_1] uid ||| [function_1] [function_2]	count=1
arg	for operating ||| config	count=1
function	return [function_2] ||| [function_1] [function_2]	count=40
class	will stop performing ||| itelnet	count=1
function_arg	[function_1] me ||| [arg_2] [function_1]	count=4
class	time in the ||| time	count=1
arg	[arg_1] and password ||| [arg_2] [arg_1]	count=4
function	chunk [function] ||| [function]	count=2
function	while key exchange ||| allowed key exchange	count=2
function	single callable as both ||| add both	count=1
function	a degrees [function_2] ||| [function_1] [function_2]	count=2
module	determine if the given ||| conch ssh	count=1
class	zlib ||| gzip encoder	count=1
arg	to a server challenge ||| challenge	count=1
function	called when the ||| received	count=1
function	a string ||| from string	count=1
function_arg	@param coordinator ||| init coordinator	count=1
function	i/o event ||| event	count=1
class	address we are connected ||| iunixdatagram connected	count=1
arg	of c{query} ||| lastsequenceid	count=1
function	some polite text exhorting ||| get	count=1
function_arg	received [arg_2] ||| [function_1] [arg_2]	count=6
function	running state this ||| running	count=1
arg	the vcsrepository ||| fromdir exportdir	count=1
arg	with matching [arg] regardless ||| list [arg]	count=1
function	basename ||| sibling	count=1
module	when crypted matches the ||| conch	count=1
class	is in a ||| failure	count=1
function	log [function_2] ||| [function_2] [function_1]	count=26
module	log out the avatar ||| conch	count=1
function	[function_1] only ||| [function_2] [function_1]	count=2
arg	level ||| level	count=1
module	integer out [module] ||| [module]	count=3
function	to verify ||| verify	count=1
class	child ||| iprocess protocol	count=1
class	intended ||| generator	count=1
class	error ||| error	count=3
arg	c{regexp} search of ||| text regex msg	count=1
arg	host a hostname ||| host	count=1
module_class	[module_1] certificate for ||| [module_1] [class_2]	count=4
function	render a request this ||| render	count=1
function	parse a ||| xform	count=1
module	pre-built ||| words	count=1
class	the ||| writer	count=1
module	the first line ||| web	count=1
arg	a c{newpath} that is ||| path newpath encoding	count=1
function	types ||| types	count=1
function	number [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] c{failure} with ||| [arg_2] [function_1]	count=3
function_arg	[function_1] err ||| [function_1] [arg_2]	count=2
class	lock this ||| deferred filesystem lock	count=1
function	remove the private ||| remove	count=1
class	date has ||| log	count=1
class	this is the ||| box dispatcher	count=1
arg	to initiate the ssl ||| certificate	count=1
module	perform some work ||| _threads	count=1
module	instance of ||| python	count=1
function	when the service ||| eb service	count=1
function	pre-built l{servicemanager}, ||| build service	count=1
module	verify ||| conch client	count=1
function	a string key ||| flat key	count=1
function	join a [function_2] ||| [function_1] [function_2]	count=1
function	via amp invoke ||| call	count=1
arg	[arg_1] file directly ||| [arg_1] [arg_2]	count=2
function	roots or ||| platform	count=1
class	cookie [class_2] ||| [class_1] [class_2]	count=1
arg	response to a query ||| response query	count=1
function	the receive ||| flush receive	count=1
function	a directory ||| directory	count=2
arg	url ||| url	count=2
function	create an ||| init	count=6
arg	response and attempt to ||| response method host	count=1
function	in ||| line	count=1
class	if this call is ||| call	count=1
class	[class] top ||| iraw packet [class]	count=2
class	make an ||| transfer client	count=1
function	overview format from the ||| overview	count=1
function	an openssl cipher string ||| from open sslcipher string	count=1
function	as [function_2] ||| [function_2] [function_1]	count=5
class	which is ||| maildir name	count=1
function	the last status change ||| get status change	count=2
function_arg	an ipv6 [arg_2] ||| [arg_2] [function_1]	count=1
class	remote [class_2] ||| [class_2] [class_1]	count=1
function	me to [function_2] ||| [function_1] [function_2]	count=1
function	with the 'recent' flag ||| recent count	count=1
function	size ||| size	count=4
class	protocol ||| mem cache protocol	count=1
function	use as the ||| generate	count=1
module_class	in the response ||| web httpclient parser	count=1
function_arg	[function_1] cacerts the ||| [arg_2] [function_1]	count=1
function	exhorting the ||| get replacement	count=1
function	to a display string ||| to	count=1
function	query is received to ||| query	count=1
module	and setup ||| protocols jabber	count=1
class	the connection ||| connection	count=1
function	an error to remove ||| remove	count=1
class	override of l{iprotocol datareceived} ||| generic httpchannel	count=1
function	get a [function_2] ||| [function_1] displayable [function_2]	count=1
arg	of observers this ||| observers discardbuffer	count=1
function	consider it ||| replacement	count=1
module	us [module_2] ||| [module_2] [module_1]	count=1
function	to install the reactor ||| install	count=1
module_class	proxy the stoppage [module_1] [class_2] ||| [module_1] [class_2]	count=1
function	with a failure ||| failure	count=1
function_arg	data payload : ||| data packet	count=1
function	source ||| get source	count=1
function_arg	channel [arg_2] ||| [function_1] [arg_2]	count=2
class	terminal ||| terminal buffer	count=4
function	wrapped old-style ||| for tls	count=1
module	a ||| conch	count=1
function	box containing ||| box	count=1
module	before sending [module_2] ||| [module_1] [module_2]	count=4
function	additional [function_2] ||| [function_2] [function_1]	count=4
class	a child ||| collection	count=1
function	credentials checkers ||| credentials checkers	count=2
class	alias and return a ||| alias group	count=1
function_arg	for the [arg_2] ||| [arg_2] [function_1]	count=1
function	continue writing ||| writing	count=1
class	indicated by c{self frame} ||| fragment element	count=1
function	identity for public-key ||| identity	count=1
module	to the [module_2] ||| [module_1] [module_2]	count=16
function	[function_1] key object ||| [function_1] [function_2]	count=3
module_class	[module_1] l{tcp6serverendpoint} ||| [module_1] [class_2]	count=8
function	disposition ||| disposition	count=1
module	resets them when ||| conch	count=1
function	the ||| cancel	count=1
module_class	[module_1] is necessary ||| [module_1] [class_2]	count=8
function	all registered ||| all	count=1
arg	creates a ||| width maxposition donechar undonechar	count=1
function	to return a ||| get	count=1
module	callback notifying [module] user ||| [module]	count=1
function	to request ||| request	count=1
class	and moduledict in ||| python path	count=1
function	flag ||| get	count=1
class	moduledict in a ||| python	count=1
function	for reading writing ||| write	count=1
module	to avoid ||| internet	count=1
module	the data ||| conch ssh	count=1
arg	the given interface ||| interface	count=2
function	envelope file for ||| envelope file	count=1
function	long response ||| long	count=1
function	compute the ||| compute host	count=1
function	l{ipv4address} or l{ipv6address} ||| host	count=2
function	the given server ||| server	count=1
function	exhorting the user to ||| get replacement string	count=1
function	pre-built ||| build service	count=1
module	of the ||| conch ssh	count=1
module	display this ||| python	count=1
function	the source code ||| source	count=1
function	snac ||| snac	count=1
function	hostname that ||| hostname	count=1
class	domain names [class_2] ||| [class_2] [class_1]	count=1
class	secured ssh ||| sshcommand client endpoint	count=2
class	zippath by looking ||| zip map	count=1
function_arg	[function_1] for a ||| [function_1] [arg_2]	count=3
module	method if you want ||| spread	count=1
function	register a new ||| register	count=1
function	msg_kexinit message ||| ssh kexinit	count=1
arg	me with [arg_2] ||| [arg_1] [arg_2]	count=4
function	decode a ||| decode	count=3
function	to send [function_2] ||| [function_1] [function_2]	count=1
module_class	when [class_2] ||| [module_1] [class_2]	count=2
function	file descriptors ||| file	count=1
arg	in the ||| message	count=1
function	writing ||| write	count=1
function_arg	[function_1] path ||| [arg_2] [function_1]	count=1
function	in the known_hosts file ||| in	count=1
function	using ||| build service	count=1
function	[function] with a ||| [function]	count=1
function_arg	[function_1] wrapper ||| [function_1] [arg_2]	count=4
class	@param ||| unixclient endpoint	count=1
arg	mapping ||| objects proto	count=1
function	is from ||| from	count=1
function	and arrange for iteration ||| iterate	count=1
arg	using ||| password	count=1
module	string ||| jabber	count=1
function_arg	[function_1] c{inode} with ||| [arg_2] [function_1]	count=4
function	adapter class ||| set adapter	count=1
module	from the ||| protocols	count=1
function	the ||| replacement string	count=1
function	getpeer} ||| peer	count=1
function	the factory ||| unjellyable factory	count=1
arg	given work on ||| work	count=1
function	linux ||| linux broken	count=1
function	to a ecdh ||| ecdh	count=1
class	calls ||| maildir	count=1
module	if given ||| python	count=1
function	prepare [function_2] ||| [function_2] [function_1]	count=2
module	of my process's ||| internet	count=1
module	this is ||| python	count=2
arg	set flags for ||| flags silent	count=1
class	for ||| credential	count=1
module_class	broker gets disconnected ||| spread remote reference	count=1
function	handler previously ||| handler	count=1
function_arg	connect a [arg_2] ||| [function_1] unixdatagram address [arg_2]	count=3
class	to it using ||| resolver	count=1
module	xml-rpc c{method} with given ||| web	count=1
function	a processor ||| processor	count=1
function	whether c{descendantname} is equal ||| is	count=1
function	list of disconnect callbacks ||| on disconnect	count=1
function	state in ||| state	count=1
function_arg	info for [arg_2] ||| [function_1] [arg_2]	count=1
function	deliver data to a ||| deliver	count=1
module	of the root element ||| words xish	count=2
module	the root element ||| words xish	count=2
module_class	[module_1] cgi script ||| [module_1] [class_2]	count=4
class	received on this connection ||| ibox receiver	count=1
module	called when the factory ||| conch ssh	count=1
function	the beginning [function_2] ||| [function_2] [function_1]	count=4
function	git repository ||| repository command	count=1
arg	exitcode the exit status ||| exitcode signal status	count=1
arg	key to lookup ||| key value	count=1
module	[module] option ||| [module]	count=1
class	for a ||| mixin	count=1
module	function across ||| mail	count=1
function	string in the format ||| string	count=1
arg	acallable ||| acallable	count=1
function	marks a property ||| property	count=1
arg	the given person object ||| person	count=1
function	[function_1] traceback ||| [function_2] [function_1]	count=2
function	from a gsv sentence ||| fix gsv	count=1
function	to an _exc_info if ||| to exc info	count=1
function_arg	[function_1] data ||| [arg_2] [function_1]	count=10
module	some polite ||| python	count=1
function	[function_1] the type ||| [function_2] name [function_1]	count=1
function	get a string of ||| get	count=1
function	l{esmtpsender} protocol configured with ||| protocol	count=1
arg	not normally be used ||| datatype	count=1
arg	the directory is ||| directory	count=1
function	function [function_2] ||| [function_1] [function_2]	count=2
module	the ||| conch	count=168
arg	group over the ||| group	count=1
function	fix for a ||| fix	count=1
function	name in c{paths} ||| preauth	count=1
class	netstring ||| netstring receiver	count=6
arg	error is ||| test error	count=1
function	read buffer this makes ||| read buffer	count=1
function	[function_1] [function_2] that ||| [function_1] [function_2]	count=2
class	of ||| public key	count=2
function	destination this ||| destination	count=1
function	cleans the current ||| current	count=1
class	test is ||| synchronous test	count=1
function	[function_1] payload of ||| [function_2] [function_1]	count=1
function	relay ||| notify success	count=1
function	in decimal [function_2] ||| [function_2] [function_1]	count=4
function	create a maildir ||| maildir	count=1
function	body data [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] the specified c{nodeid} as ||| [function_1] [arg_2] nodeattrs	count=2
arg	broker and [arg_2] ||| [arg_1] [arg_2]	count=1
arg	this ||| jellier	count=1
function_arg	an ipv6 address ||| ipv6 ip port	count=1
function	new [function] ||| new [function]	count=1
function	child resource ||| child	count=1
arg	amp box was ||| box	count=1
arg	a deprecated ||| version replacement	count=1
module	if our broker ||| spread	count=1
function	and dirty way of ||| and disconnect	count=3
function_arg	[function_1] registered ||| [arg_2] [function_1]	count=1
class	log file size is ||| log file	count=1
module	to the jabber ||| protocols jabber	count=1
function	[function_1] reactor ||| [function_2] [function_1]	count=4
arg	member to the ||| member	count=2
module	the ||| jabber	count=2
arg	user the hostmask of ||| user channel	count=1
module	and tls ||| web	count=1
function	joining to ||| coerce to filesystem encoding	count=1
module	of the error ||| python	count=1
function	for consuming [function_2] ||| [function_2] [function_1]	count=3
arg	the given group over ||| group low	count=1
function	as secondary ||| opt secondary	count=2
class	wait ||| application runner	count=1
arg	if index ||| index	count=1
function	string ||| string proto	count=2
function	for the auth state ||| state auth	count=1
function	domain [function] this ||| [function]	count=1
class	c{key} ||| mem cache	count=4
class	initialization ||| feature	count=1
module	scheme and tls ||| web	count=1
arg	wrapper and the object ||| wrapper wrapped	count=1
class	private [class_2] ||| [class_1] [class_2]	count=2
function	being deprecated ||| deprecated	count=1
function	the socket [function_2] ||| [function_2] [function_1]	count=10
module	the user ||| conch client	count=1
function	match plugin [function_2] ||| [function_1] [function_2]	count=2
class	a new protocol ||| binary box protocol	count=1
module	the host entries in ||| conch client	count=1
arg	new empty knownhostsfile ||| savepath	count=1
class	unparsed entry ||| unparsed entry	count=1
class	process's stdin ||| process	count=1
function	store an [function_2] ||| [function_2] [function_1]	count=4
function	and return first filename ||| get filename	count=1
function	return the flags ||| get	count=1
arg	to a publisher ||| publisher	count=1
class	this node ||| node	count=1
function	warning ||| warning	count=1
function	schedule ||| wait	count=1
arg	using the specified strport ||| strport	count=1
class	which this channel exists ||| command channel	count=1
function	a thread ||| defer to thread	count=1
function	a ||| service manager	count=2
arg	reload a [arg_2] ||| [arg_2] [arg_1]	count=8
function	[function_1] connection and ||| [function_2] [function_1]	count=1
arg	data by doing nothing ||| data	count=1
function	an l{iprocesstransport} provider ||| force	count=1
function	register [function_2] ||| [function_2] [function_1]	count=2
arg	#include line ||| header_name	count=1
function	the deferred has ||| cancel	count=1
function_arg	[function_1] [arg_2] ||| [function_1] user [arg_2]	count=4
function	figure out how to ||| using	count=1
module	and resets them when ||| conch client	count=1
function	[function_1] ip address ||| [function_2] [function_1]	count=2
function_arg	[function_1] buddyid == ||| [function_1] item [arg_2]	count=4
function	boolean ||| boolean	count=2
function	a command in a ||| command	count=1
function	return an iterator over ||| iterkeys	count=1
arg	constants the ||| cls level	count=1
class	socket to the ||| socket	count=3
module	l{iprocesstransport} provider ||| runner	count=1
function	files ||| files	count=2
function	get [function_2] ||| irequest [function_1] request [function_2]	count=3
function	as bytes ||| as bytes	count=2
arg	a request ||| request	count=1
module	when ||| jabber	count=1
function	the negation of a ||| not	count=1
module	a retry ||| application	count=1
class	node ||| element	count=1
arg	given public key ||| publickey	count=1
function_arg	[function_1] a node ||| [function_1] [arg_2] nodeid nodeattrs	count=2
function	deliver any future ||| deliver body	count=1
function	an application based ||| get application	count=1
function	with some polite ||| replacement	count=1
function_arg	flags for [arg_2] ||| [function_1] [arg_2]	count=1
module	all processes reboots etc ||| mail	count=1
function_arg	an iterator to ||| coiterate iterator donedeferred	count=1
arg	modes on ||| modes limit	count=1
function	objects [function] response ||| [function] data to	count=1
function	child of this node ||| child	count=1
function	consumer a single ||| resume producing	count=1
function	set [function_2] ||| [function_2] [function_1]	count=1
class	to be unique ||| maildir	count=1
function	nick ||| nick	count=1
function	handler's [function] ||| [function]	count=3
arg	creates a function ||| width maxposition donechar undonechar	count=1
arg	data to the value ||| val	count=2
arg	a previously sent message ||| fail requestid	count=1
module	if the authentication is ||| conch	count=1
class	display my ||| path	count=1
function	a sax [function] ||| flatsax [function]	count=3
function_arg	message to [arg_2] ||| [function_1] [arg_2]	count=1
class	be unique across all ||| generator	count=1
class	an existing c{key} ||| mem cache protocol	count=2
function	a list ||| list	count=5
class	return their string ||| janitor	count=1
function	[function_1] [function_2] with a profile module ||| [function_1] [function_2]	count=4
function	surround a ||| string	count=1
function	shell ||| shell	count=1
class	report ||| py unit result	count=1
function	return an ||| get person	count=1
class	when l{httpchannel} ||| ideprecated httpchannel to request interface	count=1
function_arg	[function_1] primary the ||| [arg_2] [function_1]	count=1
class	to copy locally ||| copy	count=1
function	directory named similarly to ||| directory	count=1
function	a persistent ||| persistent	count=1
function	to get ||| get	count=2
function	for later referencing by ||| for	count=1
function_arg	select a [arg_2] ||| [function_1] [arg_2]	count=4
function	msg_userauth_success ||| userauth success	count=2
class	[class_1] proxy ||| [class_1] [class_2]	count=3
function	validate the ||| validate to	count=2
function	server [function_2] ||| [function_2] [function_1]	count=7
class	service ||| client machine	count=1
arg	the response [arg_2] ||| [arg_1] [arg_2]	count=2
arg	constants the only value ||| cls level	count=1
function	master index of ||| query clientinfo	count=1
arg	the given queries ||| address queries timeout id	count=1
module	in the ||| trial	count=1
arg	existing shortcut ||| filename	count=1
class	key matches the ||| key database	count=1
class	case ||| case	count=2
function_arg	file information dictionary ||| add file info	count=1
module_class	[module_1] state ||| [module_1] formatting [class_2]	count=1
function	start running function ||| start	count=1
arg	start and [arg_2] ||| [arg_2] [arg_1]	count=3
module	the authentication ||| conch	count=2
function	envelope file for a ||| envelope file	count=1
function	bytes [function_2] ||| web xforwarded for request [function_2] [function_1]	count=1
function	level sol_socket ||| level	count=1
module	[module_1] the remote ||| [module_1] [module_2]	count=1
arg	as the query ||| query	count=1
function	is no longer connected ||| connection	count=1
function	message sent from ||| message	count=1
class	this protocol by ||| protocol	count=1
function	consider it as an ||| string	count=1
function	[function_1] file ("-" ||| [function_2] [function_1]	count=1
function	path [function_2] ||| [function_2] [function_1]	count=4
class	[class] and set ||| [class] avatar	count=3
function	state ||| instance state	count=1
class	containing a date ||| date	count=1
class	script through ||| script	count=1
function	for removing all ||| agentc remove all	count=2
module	represents [module] same ||| [module]	count=1
function	c{type}, or raise ||| typecheck	count=1
function	tuple of two ||| to	count=1
arg	broker and a ||| broker	count=1
module_class	the news ||| python news builder	count=1
arg	creator ||| creator command	count=2
function	"list modes" a ||| maxlist	count=1
function	of the display including ||| to display	count=2
function	named plugin [function_2] ||| [function_2] [function_1]	count=1
module	are [module] following order ||| [module]	count=1
arg	then the tests in ||| recurse	count=1
class	is in a predetermined ||| failure	count=1
function	msg_unimplemented ||| ssh unimplemented	count=1
module	the message is destined ||| mail	count=1
module_class	[module_1] dispatch ||| [module_1] command [class_2]	count=1
function	get state to ||| get state to	count=1
arg	with ||| defaulttype ignoredexts registry	count=1
class	suitable ||| credential	count=1
function	is a git repository ||| repository	count=1
class	for use ||| credential	count=1
module	the queue ||| trial	count=1
function	cookies out of ||| cookies	count=1
module_class	this failure ||| python failure	count=2
function	to the default ||| default log observer	count=1
arg	an l{httpclientparser} ||| rest	count=1
module	instance and [module] ||| [module]	count=1
function	files and ||| files and	count=1
module	callback when ||| ssh	count=1
function	[function_1] from a ||| [function_2] [function_1]	count=4
function	checks the ||| check	count=1
arg	[arg_1] name of ||| [arg_1] [arg_2]	count=2
function	openssl cipher ||| open sslcipher	count=1
class	the underlying archive ||| zip archive	count=1
class	new protocol ||| box protocol	count=1
arg	another user ||| user filename	count=1
class	to be ||| maildir name generator	count=1
module	a pre-built l{servicemanager}, ||| words	count=1
function	and ||| set	count=1
class	a selectable for notification ||| win32reactor	count=1
module	modules instance of pythonmodule ||| trial	count=1
function_arg	chunk of [arg_2] ||| [arg_2] [function_1]	count=3
function	argument or the global ||| global	count=1
class	create ||| protocol switch command	count=1
function	this stream's flow ||| flow	count=1
function	channel [function_2] ||| [function_2] [function_1]	count=6
function	of decorators ||| deprecated	count=1
function	to consider it as ||| replacement string	count=1
function	a tls context object ||| context	count=1
class	factory was created ||| credential factory	count=1
function	poll ||| do poll	count=4
arg	a queue to use ||| queue	count=1
function	we receive a msg_kexinit ||| kexinit	count=1
function	to a sibling ||| sibling	count=1
function	unix client ||| client unix	count=2
class	http/2 header ||| h2stream	count=1
function	a new user record ||| user	count=2
function	of message to ||| mail	count=1
function	and the object ||| get deprecated	count=1
function	validate the address ||| validate to	count=2
class	skip the next ||| looping call	count=1
function	to [function] ||| get state to [function] and observe	count=3
module	content-length and ||| web	count=1
class	domain object ||| domain with default dict	count=1
class	attempt ||| machine	count=1
function	the serial [function_2] ||| [function_2] [function_1]	count=1
function	password sent with this ||| password	count=1
function	get [function_2] ||| [function_2] [function_1]	count=43
module_class	[module_1] interpreter ||| [module_1] [class_2]	count=2
function	mail is from ||| from	count=1
class	the name of my ||| port	count=2
arg	two-tuple ||| group	count=1
arg	@param environ a dictionary-like ||| environ start	count=1
function_arg	[function_1] xml ||| [function_1] stream [arg_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] prefix [arg_2]	count=3
class	daylight saving ||| zone	count=1
function	registration on ||| registration	count=1
module_class	part of [module_1] [class_2] ||| [module_1] [class_2]	count=4
class	of [class] passed ||| [class]	count=1
class	l{mailservice} ||| smtpfactory	count=1
function	incr/decr/delete ||| not found	count=1
arg	a username and password ||| username password	count=1
function	docstring ||| docstring	count=1
function	and puts method ||| method	count=1
function	file ||| opt	count=1
arg	[arg] tls handshake ||| [arg]	count=1
function	[function_1] of hard ||| [function_2] [function_1]	count=3
function	the global detector object ||| list open fds	count=1
class	protocol ||| command	count=3
function	return the path ||| path	count=1
function	points ||| islink	count=1
function	[function_1] this l{deferred} ||| [function_2] [function_1]	count=1
class	a log ||| log	count=5
module_class	[module_1] command's input ||| [module_1] [class_2]	count=8
function	children not ||| named children	count=1
arg	[arg_1] or pem-format ||| [arg_2] [arg_1]	count=4
function	stream server endpoint ||| server	count=1
function_arg	mapping [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] in progress ||| [arg_2] [function_1]	count=8
function	write this ||| write	count=2
function	group id ||| group id	count=1
function	it ||| deprecated	count=1
arg	a pid file's content ||| pid	count=1
module	of the root element ||| xish	count=2
arg	the reporter ||| testname todo	count=1
class	return their string representations ||| janitor	count=1
function	a msg_userauth_success the server ||| ssh userauth success	count=1
arg	constructs a pre-built l{servicemanager}, ||| jid	count=1
module	log out the avatar ||| conch ssh	count=1
class	this group ||| igroup	count=1
class	stderr ||| process	count=1
class	the deferred has been ||| deferred	count=1
module	this ||| runner	count=1
function	of the client ||| client	count=2
class	[class_1] jar ||| [class_2] [class_1]	count=1
arg	readers ||| readers	count=1
class	initializes ||| key checker	count=2
arg	resolver ||| resolver	count=1
arg	at archivepathname ||| archivepathname	count=1
function	compute the string to ||| compute host	count=1
function	connection for [function_2] ||| [function_2] [function_1]	count=8
function	not ||| ignore ext	count=1
class	terminal ||| terminal process protocol	count=2
module	is installed ||| internet	count=1
module	a pre-built ||| words protocols	count=1
module	render the ||| web	count=4
module	to determine if the ||| conch	count=1
class	across all ||| maildir name	count=2
arg	strports description into a ||| description factory	count=1
function	register ||| register authenticator	count=1
function	data with level ||| level	count=1
function_arg	authentication [arg_2] ||| [function_1] [arg_2]	count=4
function	user to ||| get replacement	count=1
arg	@param notifier callback to ||| notifier	count=4
module	a string ||| mail	count=1
arg	error is a ||| test error	count=1
class	parser function for ||| parser	count=1
arg	declare a ||| message modulename name	count=1
function	split a string into ||| split	count=1
class	ignore attempts ||| bounce	count=1
arg	data from ||| data	count=1
function	password sent ||| password	count=1
function	of method names that ||| prefixed method names	count=1
class	writers ||| ireactor fdset	count=1
arg	two-sequence of ||| disp	count=1
function	c{_deprecated_info} flag ||| get deprecated	count=1
function	to frame [function_2] ||| [function_2] [function_1]	count=2
function	start the service ||| start service	count=3
function	sent we will ||| sent mail	count=1
function	[function_1] is stopped ||| [function_2] [function_1]	count=4
class	web context factory ||| deprecated to current policy	count=1
function	given header in ||| header	count=1
function	a thread from the ||| defer to thread	count=1
function	fails ||| fail	count=1
function	allow ||| allow	count=2
arg	a scheduler-like object ||| terminationpredicatefactory scheduler started	count=1
class	and after phase ||| phase	count=1
arg	response ||| response method host	count=1
class	a ||| key checker	count=2
arg	opener a no-argument callable ||| opener	count=1
module_class	[module_1] conversation ||| [module_1] igroup [class_2]	count=2
module	to the other side ||| conch	count=1
module	list of decorators ||| python	count=1
class	string ||| maildir name generator	count=1
class	intended ||| maildir name	count=1
class	open a console ||| console	count=1
arg	the domain to connect ||| reactor service domain	count=1
function	to uncache an object ||| proto uncache	count=1
arg	beginning of c{query} possibly ||| lastsequenceid	count=1
arg	channel this [arg_2] ||| [arg_2] [arg_1]	count=1
function	contact list and any ||| contact	count=2
module	is in a predetermined ||| python	count=1
arg	more python objects ||| objects proto	count=1
class	http/2 header set ||| h2stream	count=1
class	task completed with ||| mailbox append message task	count=1
function	class -> boolean ||| is class	count=2
function	is running ||| running	count=2
function	the threadpool ||| thread pool	count=1
module	state of the ||| mail	count=1
function	over the modules present ||| iter modules	count=1
function	with a list of ||| get deprecated	count=1
module	describing this ||| python	count=1
function	the failure that ||| failure	count=1
module	select ||| protocols	count=1
class	we want log ||| log	count=1
class	file and create ||| file	count=2
arg	loggername identifier used for ||| loggername	count=1
function_arg	[function_1] command to ||| [function_1] short [arg_2] params	count=1
class	for the given configuration ||| app	count=1
function	rfc 1035 ||| str	count=1
function	'message' in the ||| end	count=1
function	-> [function] ||| [function]	count=3
class	processes reboots etc ||| maildir name	count=1
function_arg	[function_1] [arg_2] ||| raw [function_1] [arg_2]	count=8
arg	file descriptor ||| fd	count=6
function	pass me an [function_1] [function_2] representation ||| [function_1] [function_2] ao	count=1
arg	fire on success/failure of ||| coro	count=1
class	script ||| script	count=1
module	up the response for ||| web	count=1
module	representation of ||| mail	count=4
module	when ||| protocols jabber	count=1
module	partial visible satellite information ||| positioning	count=1
function	[function_1] registration info ||| [function_2] [function_1]	count=1
class	the request to execute [class_1] [class_2] ||| [class_1] [class_2]	count=2
function	changed since last write ||| should	count=1
class	task ||| cooperative task	count=1
function	the command in this ||| exec	count=1
arg	initializes an angle ||| angle angletype	count=1
arg	[arg_1] l{imessagepart} provider ||| [arg_2] [arg_1]	count=2
module	the peer ||| conch ssh	count=1
function	or [function] ||| opt allow [function]	count=3
function	to ||| replacement	count=1
function	retrieve the [function_2] ||| [function_2] [function_1]	count=5
function	a list of decorators ||| get deprecated	count=1
function	an event [function_1] [function_2] ||| [function_1] [function_2]	count=3
function	reply to [function_2] ||| [function_2] [function_1]	count=4
class	from a ||| nmeaadapter	count=1
function	[function_1] as child ||| [function_1] [function_2]	count=2
function	mirc control sequence that ||| to mirccontrol codes	count=1
function_arg	[function_1] particular perspective ||| [function_1] [arg_2]	count=1
arg	given channel ||| channel	count=1
function	user-space send [function_2] ||| [function_1] [function_2]	count=10
function	pre-built l{servicemanager}, using ||| manager	count=1
class	the ||| feature initiating	count=1
function	to perform a checkpoint ||| check	count=1
class	alias and ||| alias group	count=1
arg	c{unicode} string ||| s	count=1
arg	c{applicationobject}, ||| applicationobject	count=1
function	from a l{str} ||| from	count=1
arg	host name and port ||| host port	count=1
function	and the object it ||| get deprecated	count=1
class	as a ||| element	count=3
arg	the given buffer ||| buff evt	count=1
class	protocol by invoking ||| protocol	count=1
function_arg	[function_1] pair of ||| [function_1] callbacks callback errback [arg_2]	count=1
module	the given ||| conch ui	count=2
function	permissions to ||| permissions	count=1
function	for unsupported ||| unsupported	count=1
class	exist in [class] ||| bounce [class]	count=1
class	the path ||| file path	count=1
function	underlying ||| connection lost	count=2
function	www-authenticate ||| generate	count=1
function	messages via amp invoke ||| call	count=1
function	resolve an ipv6 ||| resolve	count=1
function	gather up boolean flag ||| gather flags	count=1
class	do ||| reactor base	count=1
function	the hash of ||| hash	count=1
function	[function_1] linux ||| [function_2] [function_1]	count=1
module	to which [module] l{response} ||| [module]	count=1
arg	using this l{command}'s ||| cls box	count=1
function_arg	[function_1] a ||| [arg_2] [function_1]	count=3
function	the other side has ||| close	count=1
function	files [function_2] ||| [function_1] [function_2]	count=3
function	date has changed ||| should	count=1
function	setup ||| get setup	count=1
arg	message to a ||| message	count=3
class	a valid file descriptor ||| ifile descriptor	count=1
function	and l{downloadpage} ||| get page classes	count=1
class	value suitable for use ||| digest credential factory	count=1
function	already a child of ||| child	count=1
function	single string ||| string	count=1
arg	be importable ||| modulenames errormessage preventimports	count=1
function	port when the service ||| eb service	count=1
function	[function_1] the generator ||| [function_2] [function_1]	count=1
class	to an authentication agent ||| auth	count=1
arg	[arg_1] oscaruser ||| [arg_2] [arg_1]	count=4
class	suite ||| test suite	count=2
arg	the given ||| name	count=1
function	all selectables and ||| all	count=2
function	the python module ||| module	count=1
function	when a request is ||| request	count=1
class	the reactor ||| wx reactor	count=1
arg	a l{localworkeramp} ||| result testcases cooperate	count=1
function	header is ||| header	count=1
function	[function_1] main wx/twisted ||| [function_2] [function_1]	count=3
function_arg	msg_kex_dh_gex_init message [arg_2] ||| [function_1] [arg_2]	count=1
function	by a ||| by	count=1
arg	underlying l{_url} ||| cls urlinstance	count=1
class	date has ||| daily	count=1
function	marked as close-on-exec c{true} ||| close on exec	count=1
function_arg	observer [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] buffer for ||| [function_2] [function_1]	count=10
function	the given keys @param ||| keys	count=1
function	a child resource all ||| child with default	count=1
function	puts method names ||| method names	count=1
function	print 'message' in ||| end line	count=1
arg	query checking ||| query	count=1
arg	for all appropriate interfaces ||| ignoreclass	count=1
module	and the ||| web	count=3
function	returning files [function_2] ||| [function_1] [function_2]	count=3
function	unless ||| producing	count=3
function	[function_1] given header ||| [function_1] [function_2]	count=1
class	for a particular ||| mixin	count=1
class	record ||| record	count=1
arg	issue a query ||| query servers timeout queriesleft	count=1
function	as much of ||| write some data	count=1
function	socket using self ||| socket	count=1
arg	is of the given ||| name value	count=1
function	l{bucket} corresponding to ||| get bucket for	count=1
function	initialize an ||| init	count=1
arg	server cannot be established ||| relay	count=1
function	presence of a ||| has key	count=1
arg	with the given queries ||| address queries timeout	count=1
module_class	[module_1] this component ||| [module_1] connect [class_2]	count=1
class	across all processes reboots ||| generator	count=1
function	the trigger ||| trigger	count=1
module	generation for the ||| web	count=1
function	records ||| filter records	count=1
function	the end ||| end	count=2
arg	c{regexp} search of c{text} ||| regex msg	count=1
arg	to suggested ||| closeelement defaulturi prefixesinscope	count=1
function	of ||| get	count=5
arg	testcase the l{testcase} ||| testcase expected	count=1
function	send a dcc resume ||| dcc resume	count=1
module	string ||| trial	count=1
function	given stream ||| stream	count=1
class	list file descriptors currently ||| ireactor fdset	count=1
class	stop performing the ||| itelnet transport	count=1
class	log levels ||| log	count=1
function	status change time ||| status change time	count=3
class	for name lookups ||| ireactor pluggable	count=1
function	of arguments ||| make arguments	count=1
function	and collect ||| collect	count=1
function	a complete uidl response ||| uidlist response	count=1
function	[function_1] and ||| [function_1] [function_2] domains	count=6
arg	domain from ||| answers domain	count=2
function	gid ||| gid	count=1
arg	[arg_1] func -> ||| [arg_2] [arg_1]	count=3
function	url for later ||| root url	count=1
function	in main wx/twisted ||| in main	count=2
function_arg	a connection [arg_2] ||| [function_1] [arg_2]	count=2
function	given port ||| port	count=1
arg	[arg_1] server ||| sock protocol [arg_1] [arg_2]	count=1
class	given ||| protocol	count=3
arg	request is ||| request	count=1
function	update ||| update	count=1
function	tuple to ||| to	count=1
function	request to a channel ||| ssh channel request	count=1
class	l{iprocesstransport} ||| process monitor	count=2
function	given signal c{signalid} ||| signal	count=1
class	suitable ||| digest credential	count=1
function	receive a msg_unimplemented ||| ssh unimplemented	count=1
module	to provide ||| internet	count=1
function	for a specific type ||| specific	count=1
function	add certificate-authority ||| add cacerts	count=1
class	the given c{key} ||| mem cache protocol	count=4
arg	consumer this ||| consumer	count=1
module	in the ||| web	count=3
arg	decorators are a ||| decorators	count=1
module	exception ||| protocols jabber	count=1
class	c{self frame} and several ||| fragment element	count=1
function	process and returns a ||| get process output and	count=1
function	or l{ipv6address} indicating the ||| host	count=1
function	running process corresponding to ||| running	count=1
function	c{filelogobserverfactory} to the default ||| default log observer	count=1
module	authentication ||| protocols jabber	count=2
function	c{filelogobserverfactory} to the default ||| default log	count=1
class	all domain names in ||| domain with	count=1
function	as much of c{data} ||| write some	count=1
function	write connection ||| write connection	count=1
function	body for ||| body	count=2
function	current failure result ||| failure result	count=2
module	if the other ||| conch ssh	count=2
function	the named plugin ||| plugin	count=1
module	has been canceled ||| internet	count=1
function	return an l{imessagedelivery} object ||| get message delivery	count=1
arg	given [arg] sent ||| sender recipient [arg]	count=1
function	a thread from ||| thread	count=1
class	lookup ||| ident server	count=1
module	'message' ||| trial	count=1
function	deliver any ||| deliver	count=1
function	a traceback with ||| traceback	count=1
arg	given [arg] ||| [arg]	count=8
module_class	for the [class_2] ||| [module_1] [class_2]	count=4
module	uses the ||| web	count=1
arg	given status and ||| status	count=1
class	to the terminal ||| terminal buffer	count=1
function	a ||| replacement string	count=2
function	l{iprocesstransport} provider ||| force	count=1
function_arg	replaces stdout [arg_2] ||| [arg_2] [function_1]	count=1
function	selected ||| fetch head	count=1
arg	given [arg] ||| fd [arg]	count=3
class	select and setup authentication ||| saslinitiating	count=1
function_arg	[function_1] with mode ||| [function_1] uid gid spath [arg_2]	count=1
function	a textual and ||| host as bytes and text	count=1
module	its ||| python	count=1
function_arg	[function_1] lengthasstring ||| [arg_2] [function_1]	count=3
function	a msg_userauth_success the server ||| userauth success	count=1
function_arg	key for [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	[function_1] factory to ||| [arg_2] [function_1]	count=1
arg	to the reporter ||| testname error todo	count=1
function	child with ||| child with	count=2
class	constructor l{run} will treat ||| synchronous test case	count=1
arg	a line of ||| line	count=2
function	when the connection is ||| connection	count=8
function	return the attributes ||| get attrs	count=3
module_class	of this [class_2] ||| [module_1] file [class_2]	count=1
function_arg	string @param accountname ||| init accountname	count=1
arg	@param environ a ||| cls environ	count=1
function	of [function_2] ||| [function_2] [function_1]	count=3
function	more bytes from ||| received	count=1
arg	the given name and ||| name	count=2
function	failure [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] [function_2] ||| [function_2] name [function_1]	count=4
class	we've ||| to stan	count=1
function_arg	msg_kexinit message [arg_2] ||| [function_1] [arg_2]	count=1
function	a fix ||| fix	count=1
arg	a private ||| extra	count=1
arg	function every interval seconds ||| interval now	count=1
class	if this task has ||| task	count=1
function	msg_userauth_failure ||| userauth failure	count=1
function	the maximum line length ||| line length	count=1
function_arg	switching [arg_2] ||| [function_1] caps [arg_2]	count=1
function	the attribute name on ||| method name	count=1
class	name for a maildir ||| maildir	count=1
class	an l{_isshconnectioncreator} provider which ||| endpoint	count=1
class	dictionary ||| default dict	count=5
class	failure's type is ||| failure	count=1
function	the sign for ||| sign	count=1
arg	contents of ||| i	count=2
class	zippath by looking at ||| zip map impl	count=1
arg	using this ||| cls	count=2
function	[function_1] method associated ||| [function_1] [function_2]	count=1
function	given port [function_2] ||| [function_2] [function_1]	count=1
arg	room ||| message exchange fullname	count=1
arg	argument name and ||| name	count=1
arg	server cannot be ||| relay	count=1
class	the log ||| log	count=3
arg	provides one of the ||| mind	count=1
function	options and [function] a ||| [function]	count=1
class	in this dictionary ||| default dict	count=3
function	use the endpoint ||| endpoint	count=1
function	the date internally ||| internal date	count=1
function	existing child ||| child	count=1
function_arg	and of [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	a channel [arg_2] ||| [function_1] [arg_2]	count=2
function	stopped and is disconnected ||| stopped	count=1
module	since last ||| python	count=1
module_class	[module_1] path on ||| [module_1] [class_2]	count=6
class	instance ||| resolver	count=1
class	be unique across ||| generator	count=1
arg	the given ||| offset	count=1
class	the buffer ||| buffer	count=1
function	instances over tcp ||| loopback tcp	count=1
function	[function_1] test ||| [function_2] [function_1]	count=3
module	[module_1] other ||| [module_1] [module_2]	count=24
function	[function_1] exception into ||| [function_1] [function_2]	count=1
function	return destination this will ||| get destination	count=1
function	returns the group ||| group	count=1
function	method [function_2] ||| [function_1] [function_2]	count=1
arg	task on the ||| task	count=1
arg	connects a given l{datagramprotocol} ||| protocol maxpacketsize mode	count=1
function	is trying to resume ||| do resume	count=1
function	body has been delivered ||| body data received	count=1
class	plain-text [class] ||| plain [class]	count=3
function_arg	[function_1] a wrapper ||| [function_1] [arg_2]	count=4
function	url to ||| url	count=1
module_class	[module_1] pool this ||| [module_1] [class_2]	count=1
module_class	[module_1] url to ||| [module_1] [class_2]	count=4
arg	reporter ||| testname fail failclass	count=1
function	class ||| lookup method	count=1
class	lock this method is ||| deferred filesystem lock	count=1
arg	checks whether [arg] ||| pubkey [arg]	count=1
function_arg	[function_1] given buffer ||| [arg_2] [function_1]	count=1
function	rich equality ||| eq	count=1
module	that we ||| conch	count=1
function_arg	avatar which [arg_2] ||| [function_1] avatarid [arg_2]	count=4
function	we ||| wont	count=1
function	name in a class ||| class	count=1
arg	n ||| n	count=2
function	[function_1] i{kexinit} ||| [function_1] [function_2]	count=1
function	successful anonymous cred login ||| cb anonymous authentication	count=1
function	deprecation ||| deprecated	count=1
module	pythonattribute a testcase subclass ||| trial	count=1
function	modules and ||| modules	count=1
class	complete ||| http11client protocol	count=1
class	across all calls to ||| maildir name	count=1
function	local class ||| for class	count=1
module	the negation of ||| mail	count=1
module	only available after the ||| web	count=1
function	contact ||| contact changed	count=1
function_arg	leaves the chat ||| left chat	count=2
class	box ignoring l{protocolswitched} and ||| box dispatcher	count=1
function	messages via amp ||| remote	count=1
class	input file ||| file body	count=1
class	across all calls to ||| maildir name generator	count=1
function	called when ||| received	count=1
function	[function_1] links ||| [function_2] [function_1]	count=5
function	[function] failure in ||| client [function]	count=2
function	for joining to c{path} ||| coerce to filesystem	count=1
arg	given the data ||| data	count=1
arg	given queries ||| queries	count=1
function	represents different key exchange ||| ssh kex	count=1
function	of [function] of ||| list static [function]	count=1
class	is intended to be ||| name	count=1
class	on the endpoint ||| endpoint	count=1
module_class	[module_1] threadpool ||| [module_1] [class_2]	count=6
arg	and port number and ||| port	count=1
arg	format an event and ||| event	count=1
arg	[arg_1] normally be ||| data [arg_1] [arg_2] data	count=1
function	send me ||| send to	count=1
class	this method (due ||| tlsmemory bioprotocol	count=1
function	fetchhead() action ||| head	count=1
function	a c{dict} ||| make excludes dict	count=1
function	have a result ||| result	count=1
class	initiating the connection retry ||| client machine	count=1
module	http ||| web	count=1
arg	a non-0 ||| idletime	count=1
function	a rset command ||| rset	count=1
module	will be ||| internet	count=2
class	signal handlers should be ||| signal reactor mixin	count=1
arg	is specified the sizes ||| i	count=1
function_arg	[function_1] signature using ||| [arg_2] [function_1]	count=1
function	group to [function_2] ||| [function_2] [function_1]	count=2
function	set which local ||| set unjellyable for	count=1
class	private key ||| private certificate	count=1
arg	to see if host ||| host	count=1
function	for unix client parameters ||| parse client unix	count=1
class	in ||| tree	count=1
class	to the mailbox ||| mailbox append	count=1
module	it as ||| python	count=1
arg	generate ||| helo origin recipients	count=1
module	and run ||| internet	count=1
class	using c{*args}, and arrange ||| resolver	count=1
class	securing a tls ||| iopen sslcontext	count=1
function	with [function_2] ||| [function_1] [function_2]	count=7
arg	time seconds from ||| time	count=1
function	has finished ||| done	count=1
function	the body ||| body	count=7
function	all [function] text ||| as [function]	count=1
arg	err is a ||| err	count=1
function	to build ||| build failure	count=1
function	with ||| deprecated	count=1
module	issue ||| names	count=1
function	for the presence of ||| contains	count=1
arg	host name ||| host	count=1
module_class	the peer should ||| conch itelnet protocol	count=1
class	create a random ||| credential factory	count=1
function	[function_1] hard links ||| [function_1] [function_2]	count=4
function	start producing to ||| start producing	count=1
class	internal parser function ||| parser	count=1
arg	with the [arg_2] ||| [arg_2] [arg_1]	count=2
class	both ||| sshsession	count=1
class	indicate that this domain ||| bounce domain	count=1
function	a string in the ||| string	count=1
arg	consumer for ||| consumer	count=1
function	address [function_2] ||| [function_1] [function_2] domains	count=4
function_arg	authentication [arg_2] ||| [function_1] unexpected [arg_2]	count=1
module	[module] key ||| [module]	count=3
function	exception into ||| exception into	count=2
class	we will ||| itelnet	count=1
class	for notification when each ||| receiver	count=1
function	c{paths} ||| preauth	count=1
module	stop performing ||| conch	count=1
function	url for later ||| url	count=1
arg	see l{record_rp mbox} ||| txt ttl	count=1
function	descriptor ||| descriptor	count=1
function	fetchhead() ||| head	count=1
function	modification ||| status change	count=1
function	with some polite text ||| get	count=1
module	called when we ||| conch ssh	count=3
function	waiting state during ||| state waiting	count=1
function_arg	resume [arg_2] ||| [arg_2] [function_1]	count=3
arg	command to which ||| command	count=1
function	a child [function_2] ||| [function_2] [function_1]	count=2
class	string which is intended ||| maildir name	count=1
class	maildir [class_2] ||| [class_1] [class_2]	count=2
function	add an unexpected success ||| add unexpected success	count=1
arg	the given file descriptor ||| fd	count=2
module	a pre-built ||| protocols	count=1
function	stopping ||| finish stopping	count=1
function_arg	[function_1] type ||| [arg_2] [function_1]	count=1
class	create ||| digest credential	count=1
function	getpeer but for ||| get host	count=1
function	from a response ||| received	count=1
arg	more [arg_2] ||| [arg_2] [arg_1]	count=3
arg	checks whether [arg] themselves ||| pubkey [arg]	count=1
function	for joining to ||| to filesystem encoding	count=1
class	given ||| transport	count=1
arg	given application bytes ||| bytes	count=2
class	a box ignoring ||| box dispatcher	count=1
function	and follow a delegation ||| discover authority	count=1
function	xhdr data for ||| xhdr request	count=1
function	determines whether ||| name constraint	count=1
class	a listing ||| directory lister	count=1
class	processes ||| maildir	count=1
module	bytes to the ||| conch	count=1
function	reactor if the argument ||| reactor	count=1
function	body of ||| body	count=2
function	performing ||| wont	count=1
module	key ||| conch ssh	count=5
function	[function_1] given stream ||| data [function_1] [function_2] streamid data	count=1
module_class	convert this [class_2] ||| [module_1] [class_2]	count=4
module_class	this platform? @return boolean [module_1] [class_2] not ||| [module_1] [class_2] is known	count=2
function	with some polite text ||| get replacement string	count=1
function	build ||| build failure	count=2
module	l{servicemanager}, ||| protocols	count=1
module	are [module] ||| [module]	count=1
function	detailed locals and globals ||| detailed	count=1
function	in [function_2] ||| [function_2] [function_1]	count=10
function	of segments ||| segments	count=1
function	test [function_2] ||| [function_2] [function_1]	count=4
function	[function_1] group ||| [function_2] [function_1]	count=6
arg	a domain from the ||| answers domain	count=1
function	the ||| service manager	count=2
function	chunks for ||| chunks	count=1
function_arg	[function_1] an fd ||| [arg_2] [function_1]	count=1
function	[function_1] response to ||| [function_1] [function_2]	count=1
function	[function_1] timeout ||| [function_2] [function_1]	count=2
arg	the given file descriptor ||| fd request	count=1
class	and arrange for it ||| resolver	count=1
class	from the server ||| nntpclient	count=1
class	from l{_connectedprotocol}, ||| resolver	count=1
function	the buffered events to ||| to	count=1
class	manager ||| assert raises	count=1
arg	passed as the first ||| f	count=1
function	unix ||| parse unix	count=1
arg	response and attempt ||| response method	count=1
function	create the [function_2] ||| [function_1] [function_2]	count=1
function	the beginning of the ||| beginning	count=1
function	when ||| got	count=3
function	[function_1] of ||| [function_1] [function_2]	count=5
arg	which the given request ||| request	count=1
arg	l{serialnumber} instance ||| number serialbits	count=1
arg	checks [arg_2] ||| [arg_2] [arg_1]	count=2
module	i ||| words	count=1
class	try ||| iconnector	count=2
class	called whenever ||| iprotocol	count=1
module	the deferred has been ||| internet	count=1
function	quick and [function_2] ||| [function_2] [function_1]	count=5
arg	query ||| query servers	count=1
function	returns ||| get	count=7
class	partial ||| nmeaadapter	count=1
class	file ||| ifile	count=5
function	type may [function_2] ||| [function_2] [function_1]	count=4
function	expat-based stream ||| stream	count=1
class	suffix ||| daily log file	count=1
class	sign ||| auth client	count=1
function	bounce ||| bounce	count=1
function	get the body ||| body	count=2
function	gsv sentence ||| gsv	count=1
function	the endpoint factory ||| endpoint factory	count=2
function	data ||| received finished	count=1
function	connection ||| connection lost	count=2
function	[function_1] exception ||| [function_1] [function_2]	count=1
function	the underlying pkey object ||| key	count=1
function_arg	[function_1] coordinate type ||| [arg_2] [function_1]	count=2
function	name on ||| method name	count=1
function	the challenge ||| get challenge	count=1
function	password to check against ||| check	count=1
module_class	retrieve the total ||| mail imessage imappart	count=1
module	or ||| internet	count=3
function	decrement ||| decrement	count=1
function	absolute url to ||| url	count=1
function	given host [function_2] ||| [function_1] [function_2]	count=1
function	a session cookie and ||| session	count=1
class	the path ||| path	count=1
arg	a ||| name callback interval	count=1
function	returns the hash of ||| hash	count=1
function	[function] login info ||| opt [function]	count=1
function_arg	[function_1] python ||| [arg_2] [function_1]	count=3
function_arg	[function_1] and key ||| [arg_2] [function_1]	count=1
module	instance of a ||| trial	count=1
function	deprecated api ||| replacement	count=1
arg	and client protocol instances ||| client port	count=1
function	[function_1] heartbeat l{loopingcall} ||| [function_2] [function_1]	count=1
function_arg	joins the chat ||| joined chat	count=2
module	parses ||| positioning	count=1
class	formatting state has set ||| default formatting state	count=1
function	to ||| opt bounce to	count=1
function_arg	[function_1] flags for ||| [function_1] messages [arg_2]	count=1
function	ends [function_2] ||| [function_1] [function_2]	count=2
arg	blob ||| cls blob	count=1
function	authentication will return an ||| get	count=1
function	made to the ||| made	count=1
function	as ||| replacement string	count=1
function	a string ||| to string	count=2
function	send the disconnect ||| disconnect	count=1
arg	l{localworkeramp} instance iterating ||| result testcases cooperate	count=1
module	function ||| words xish	count=1
module	on the ||| web	count=2
arg	header from the ||| header	count=1
function_arg	[function_1] query ||| [arg_2] [function_1]	count=1
module	has changed ||| python	count=1
arg	given sender ||| sender	count=1
function	alternative ||| get replacement string	count=1
function	lookup user ||| lookup	count=1
function_arg	internal get [arg_2] ||| [function_1] [arg_2] nodeattrs	count=2
function_arg	process [arg_2] ||| [function_1] [arg_2]	count=3
module	running if we ||| conch ssh	count=1
function	returns any [function_2] ||| [function_1] [function_2]	count=3
class	the ||| itelnet transport	count=2
function	try to read ||| read	count=1
module	integer out [module] multiple ||| [module]	count=1
module	for an entry with ||| conch client	count=1
function	as the response ||| response from	count=2
module	transport connection has ||| jabber	count=1
function	rpy file ||| script	count=1
module	sending [module_2] ||| [module_1] [module_2]	count=4
module	them when it ||| conch client	count=1
module	random value ||| cred	count=1
module_class	[module_1] current authentication ||| [module_1] [class_2]	count=2
module	a list of ||| python	count=2
class	file monitoring [class_2] ||| [class_2] [class_1]	count=1
arg	object return whatever tests ||| thing recurse	count=1
arg	flags of one or ||| flags mode	count=1
class	stop ||| proxy producer	count=1
function	when a connection to ||| notify no connection	count=1
module	talking to ||| internet	count=1
function	information from ||| fix	count=1
function	from this [function_2] ||| [function_2] [function_1]	count=1
class	any and log ||| base	count=1
arg	from the given file ||| default	count=1
class	for server responses ||| pop3client	count=1
function	close the process' ||| lose connection	count=1
module	changed since ||| python	count=1
function	this certificate ||| get	count=1
arg	reason ||| reason	count=6
arg	given person ||| person	count=1
module	modules instance of ||| trial	count=1
function	a master index of ||| query clientinfo	count=1
function	a hash of ||| key hash	count=1
module	of the string ||| conch	count=1
function	from [function] query ||| [function]	count=1
function	an import error ||| import error	count=1
arg	given its name ||| name default	count=1
arg	file @type file any ||| file consumer	count=1
class	be unique across all ||| name	count=1
function	given client protocol ||| client	count=1
function	documentation string describing the ||| xmlrpc method help	count=1
class	listening on the endpoint ||| endpoint	count=1
function	message type ||| message type	count=2
function_arg	@param coordinator an ||| init coordinator	count=1
module	object has support ||| spread	count=1
function	method to use ||| method	count=1
function	render [function_2] ||| [function_2] [function_1]	count=4
arg	box with a ||| box	count=1
arg	name c{avatarid} ||| avatarid	count=1
class	references by c{self frame} ||| source fragment element	count=1
arg	a relaying manager to ||| manager	count=2
function	frozenset using ||| frozenset	count=1
class	this [class] the ||| command [class]	count=1
module	key from the ||| conch	count=1
module_class	[module_1] [class_2] gone away ||| [module_1] [class_2]	count=3
function	an l{iprocesstransport} ||| stop	count=1
module	positioning ||| positioning	count=1
function	a log prefix for ||| wrapped log prefix	count=1
arg	text by writing ||| text	count=1
function	deprecated ||| deprecated	count=2
function	url for later recalling ||| url	count=1
class	l{methodname} method of the ||| method	count=1
function	compute a string key ||| key	count=1
function	cookies out ||| cookies	count=1
function	msg_unimplemented message ||| unimplemented	count=1
function	to consider it as ||| string	count=1
class	initializes a ||| key checker	count=1
function	send a message ||| send group message	count=2
module	datagram ||| pair	count=3
arg	[arg_1] [arg_2] ||| [arg_2] flags silent [arg_1]	count=8
class	unconnected from a port ||| iprotocol factory	count=1
arg	with matching [arg] regardless of ||| list [arg]	count=1
class	in ||| reporter	count=1
module	the initialization ||| jabber	count=1
arg	l the ||| l	count=1
module	with the trial ||| trial	count=1
function	host that this ||| host	count=1
function	transform ||| transform	count=1
function	the ||| string	count=1
module	l{servicemanager}, using ||| words	count=1
class	display my syspath ||| python path	count=1
arg	1 addresses ||| resp numok addresses	count=1
function	code and response ||| response	count=1
function_arg	[function_1] amp data ||| [arg_2] [function_1]	count=1
arg	fd with the poller ||| fd	count=1
function	character [function_2] ||| [function_2] [function_1]	count=1
function	convert a string ||| to	count=1
class	response ||| httpclient	count=1
arg	@param credentials an implementor ||| credentials mind	count=1
arg	0 or 1 addresses ||| resp numok addresses	count=1
module	threads in the ||| python	count=1
function	[function] the ||| proxied [function]	count=2
function	a clientside ||| and observe	count=1
function	set our service to ||| set	count=1
function	reset the number ||| reset	count=1
function	repr ||| repr	count=1
class	l{ampbox} ||| amp box	count=1
function_arg	[function_1] failure ||| [function_1] [arg_2]	count=1
arg	beginning of line and ||| line	count=1
function	responding ||| respond	count=1
function	fully ||| named	count=1
function	a position ||| position	count=1
arg	given group over the ||| group low high	count=1
function	return l{none} ||| run operation	count=1
function	the currently selected article ||| fetch article	count=1
function	create a ||| make	count=1
function	by rfc 1035 ||| str	count=1
function	name ||| name	count=6
function	sending messages ||| call	count=1
function_arg	convert [arg_2] ||| [arg_2] [function_1]	count=1
arg	constants the only ||| level	count=1
function	a channel [function_2] ||| [function_1] [function_2]	count=2
function	of l{bytes} @param ||| init	count=3
function	stop writing ||| stop writing	count=1
module	bytes to the ||| web	count=1
arg	hostname see [arg_2] ||| [arg_2] [arg_1]	count=2
module	and setup ||| protocols	count=1
function	text exhorting ||| get	count=1
function	groups from the ||| groups	count=1
function	or dynamically generated child ||| child with	count=1
module_class	[module_1] connection ||| [module_1] oscar [class_2]	count=1
class	structure ||| message structure	count=1
module	to connect ||| internet	count=3
class	launch a child process ||| process	count=1
function	producer ||| producer	count=7
function_arg	[function_1] the domain ||| [arg_2] [function_1]	count=1
function	[function] root certificates ||| [function]	count=1
arg	non-filled-out cached instance ||| cid instance	count=2
class	wx ||| wx reactor	count=2
arg	the given member ||| member	count=2
module	last write ||| python	count=1
function	of the write connection ||| write connection lost	count=1
function	[function_1] for later ||| [function_2] [function_1]	count=1
function	allowed ||| allowed	count=1
function	a header is received ||| handle header	count=1
function	msg_userauth_info_response the ||| userauth pk ok keyboard interactive	count=1
arg	bytes to this connection ||| bytes	count=1
function	[function_1] state ||| [function_2] to [function_1]	count=1
class	web context ||| policy	count=1
class	report ||| test result	count=1
class	the deferred ||| deferred queue	count=1
class	create a ||| creator	count=2
module	a pre-built l{servicemanager}, ||| words protocols jabber	count=1
arg	the domain to connect ||| domain	count=1
function	set the c{_deprecated_info} flag ||| deprecated	count=1
function	the text that links ||| link	count=1
function	directory for the ||| directory	count=1
function	modules were imported and ||| imported	count=1
function_arg	put [arg_2] ||| [function_1] path [arg_2]	count=1
function	[function_1] a cookie ||| [function_2] [function_1]	count=1
arg	given file descriptor ||| fd request args	count=1
arg	given test failed and ||| test todo	count=1
arg	monitoring either ||| source primary other primaryflag	count=1
class	@type ||| multi wrapper	count=1
function	[function_1] descriptor ||| [function_1] [function_2]	count=4
function	is c{bytes}, ||| as same type	count=1
function	the sanity of ||| string size	count=1
arg	site ||| site	count=1
function	remote xml-rpc c{method} ||| remote	count=1
class	the next ||| looping	count=1
arg	[arg_1] it whatever ||| [arg_1] [arg_2]	count=1
class	when the request to [class_1] [class_2] ||| [class_1] [class_2]	count=2
function	[function_1] or of ||| [function_1] [function_2]	count=1
class	of this message ||| message	count=1
class	to the [class] as ||| pbserver [class]	count=1
class	l{filepath} ||| file	count=1
module	internet ||| internet	count=4
function	for a ||| replacement	count=1
function	[function_1] client and ||| to [function_1] [function_2]	count=1
class	the running service if ||| sshtransport	count=1
arg	nonce from the ||| nonce clientip	count=1
class	c{*args}, ||| resolver	count=1
function	the user ||| string	count=1
function	msg_service_accept message ||| ssh service accept	count=1
module	to [module] been ||| [module]	count=1
arg	observers ||| observers discardbuffer	count=1
arg	directory is a ||| directory	count=1
class	box on the connection ||| box	count=1
function	consider ||| replacement string	count=1
function	more body ||| body	count=1
function	active handle ||| stop reading and writing	count=1
function	mechanism ||| mechanism	count=1
arg	for the given name ||| name	count=2
function	set ||| set unjellyable	count=2
function	version [function_2] ||| [function_2] [function_1]	count=3
function	[function_1] line ||| [function_1] [function_2]	count=6
function	axfr ||| zone	count=1
class	print 'message' in ||| reporter	count=1
function_arg	[function_1] to ||| [function_1] [arg_2]	count=2
class	a different node ||| node	count=1
function	an expected [function_2] ||| [function_1] [function_2]	count=3
module	report the available ||| mail	count=1
arg	request payload : ||| packet	count=1
module_class	the transport ||| web h2connection	count=2
class	file ||| dcc file receive	count=2
function_arg	[function_1] fully ||| [function_1] prefix [arg_2]	count=1
class	aliases ||| alias	count=3
function	of ||| key	count=1
function	user ||| irc	count=2
arg	event dict ||| eventdict	count=1
module	datagram with ||| pair	count=2
module	authentication ||| protocols	count=1
function_arg	from its [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	@param chatui the ||| init group chatui	count=1
function	get from this class ||| lookup method	count=1
arg	end from a ||| end	count=1
class	last ||| log	count=1
arg	given expressions given an ||| elem	count=2
function	a chunk of ||| receive data chunk	count=1
function	their string ||| clean	count=1
arg	numeric ||| interface	count=5
function	enable debug hooks for ||| debug	count=1
function	this is the ||| call	count=1
arg	form of authentication when ||| auth	count=1
function	an [function] ||| update [function]	count=3
class	a remote ||| remote amp	count=1
function	[function_1] a working ||| [function_1] [function_2]	count=1
function	additional ||| allow	count=1
function	degrees ||| degrees	count=1
module_class	other [class_2] ||| [module_1] [class_2]	count=6
function	initialize logging to ||| start logging	count=1
function	current [function_2] ||| [function_1] [function_2]	count=1
class	-- set your realname ||| ircuser	count=1
function	corresponding to this private ||| from string private	count=1
function	[function_1] a hemisphere ||| [function_2] [function_1]	count=4
function_arg	parse some [arg_2] ||| [function_1] string [arg_2]	count=1
module	will encode the ||| web	count=1
module	c{_deprecated_info} flag if any ||| python	count=1
class	connection ||| connection mixin	count=1
module	constructs a pre-built l{servicemanager}, ||| jabber	count=1
module	character at [module] a ||| [module]	count=1
function	get a channel ||| ssh channel	count=1
function	deprecated api with some ||| get replacement string	count=1
function	string key for ||| flat key	count=1
function	reply to ||| reply	count=1
function	a parser call its ||| parser	count=1
class	value suitable for ||| credential	count=1
function	put the given ||| write	count=1
class	this alias ||| address alias	count=1
class	of a www-authenticate challenge ||| credential	count=1
arg	tests that ||| thing recurse	count=1
function	return [function] ||| get [function]	count=2
function	different ||| ssh	count=1
arg	the ssl ||| certificate	count=1
function	envelope for a ||| envelope	count=1
function_arg	key [arg_2] ||| [function_1] [arg_2]	count=1
function	i{greater than or equal} ||| ge	count=1
module	an ||| trial	count=2
function	as the response to ||| response from message	count=2
module	[module_1] the failure ||| [module_2] [module_1]	count=4
class	string which ||| generator	count=1
function	request ||| fetch	count=1
function	for sending ||| call	count=1
function	item [function] ||| add [function]	count=1
function	xml document ||| to xml	count=1
class	value of c{key} by ||| mem cache protocol	count=2
class	remove a ||| deferred	count=1
function	it ||| call	count=1
arg	the given address ||| address	count=1
function	path factory which is ||| path factory	count=1
arg	the given color ||| color	count=2
function	given ||| write	count=1
function	[function_1] given certificate ||| [function_2] [function_1]	count=1
function	last ||| should	count=1
class	method called when ||| ipositioning	count=2
function	extract the length information ||| extract length	count=1
arg	given group for the ||| group	count=1
function	[function_1] dcc ||| [function_2] [function_1]	count=6
function	mark ||| delete	count=3
function	send a disconnect message ||| send	count=1
module	value ||| cred	count=1
function	file to which ||| file	count=1
class	to a certain ||| iinput output system	count=1
class	[class_1] path ||| [class_2] [class_1]	count=2
function	twisted deprecation ||| get deprecated	count=1
class	legacy observer ||| legacy	count=1
module	of ||| python	count=18
function	time of [function_2] ||| [function_2] [function_1]	count=12
function	to enable ||| enable	count=1
function	a [function_2] ||| [function_2] [function_1]	count=2
function_arg	[function_1] function ||| [function_1] when running [arg_2]	count=1
class	and directories ||| file transfer server	count=1
function	return a l{gitcommand} if ||| get	count=1
function	[function_1] stream error ||| [function_1] [function_2]	count=4
class	service ||| ichat service	count=1
arg	[arg_1] to listen ||| [arg_1] proto [arg_2]	count=1
function	a subclass of protocol ||| protocol	count=1
function	names ||| names	count=4
class	signal ||| base process	count=1
function	if any of ||| deprecated	count=1
module	deferred has been canceled ||| internet	count=1
arg	referring to a ||| pathname	count=1
function	header ||| header received	count=4
module	api with some ||| python	count=1
arg	protocol then ||| proto	count=1
function	validates ||| line received	count=1
function	the c{_deprecated_info} flag if ||| deprecated	count=1
function	the state of the ||| state	count=1
function_arg	of arguments [arg_2] ||| [function_1] [arg_2]	count=5
arg	sign ||| cls sign	count=1
arg	fd that it ||| fd	count=1
function	find the source ||| find source	count=1
function	a i{kexinit} message ||| kex init	count=1
class	was ||| box	count=1
function	get ||| get state	count=1
function	has ||| get	count=1
function	@return a newly ||| new	count=1
function_arg	exchange is [arg_2] ||| [arg_2] [function_1]	count=1
arg	a two-sequence of the ||| disp	count=1
module	content-length and store this ||| web	count=1
arg	fd with ||| fd	count=1
arg	specified strport string ||| password strport	count=1
function	server endpoint [function_2] ||| [function_2] [function_1]	count=2
arg	a byte string ||| strio length	count=1
function_arg	with [arg_2] ||| [function_1] range [arg_2]	count=3
module	the next iteration and ||| internet	count=1
class	frame references as ||| frame element	count=4
class	transport ||| local worker transport	count=1
function	add a header tuple ||| add header	count=1
arg	username and ||| username	count=1
function	connect a ||| connect	count=2
class	this ||| box dispatcher	count=2
class	this ||| remote	count=1
arg	if the directory ||| directory	count=1
module_class	[module_1] l{bucket} ||| [module_1] [class_2]	count=8
function	presence ||| contains	count=1
arg	a socket ||| socket	count=1
function	send the ||| send	count=1
function	the topic to ||| topic	count=1
function	[function_1] l{ipv6address} ||| [function_2] [function_1]	count=1
function	corresponding to this private ||| string private	count=1
module	itself with the ||| web	count=1
function_arg	[function_1] filename to ||| [arg_2] [function_1]	count=1
arg	'in' ||| name	count=1
function	register a callback ||| add callback	count=1
arg	l{_wrapperendpoint} ||| wrappedendpoint wrapperfactory	count=1
function	guess the ||| guess string	count=1
arg	a module return ||| module	count=1
function	if the process ||| process ended	count=1
function	contains a valid fix ||| validate current	count=1
class	processing ||| to stan	count=1
function	and response [function_2] ||| wsgiresponse send [function_1] [function_2]	count=1
function	new [function_2] ||| [function_2] [function_1]	count=5
class	file to ||| file body producer	count=1
class	should be logged ||| ilog filter predicate	count=1
function_arg	header overrides any ||| header k v	count=1
module	with some polite text ||| python	count=1
function	stream server ||| server	count=1
function	the running ||| running	count=1
function	wait until we ||| until	count=1
class	the key ||| key	count=1
arg	a pre-built l{servicemanager}, using ||| jid	count=1
function	a [function] ||| iterate in [function]	count=1
function	get a ||| get if	count=1
function	a channel ||| ssh channel open	count=1
function	reconnect in progress ||| trying	count=1
function	save ||| save	count=2
module	date has changed ||| python	count=1
function_arg	for a [arg_2] ||| [arg_2] [function_1]	count=1
function	c{eval}-able representation that shows ||| repr	count=1
function	logging to ||| start logging	count=1
function_arg	[function_1] name base ||| [arg_2] [function_1]	count=1
class	a script through ||| filtered script	count=1
function	ctcp ||| ctcp	count=1
function_arg	file [arg_2] ||| [function_1] [arg_2]	count=9
arg	for a given field/format/conversion ||| fieldname formatspec conversion	count=1
function	the socket ||| handle	count=1
function	has [function_2] ||| [function_2] [function_1]	count=2
arg	request the l{irequest} to ||| request	count=1
class	sending messages via ||| box dispatcher	count=1
function	or l{ipv6address} indicating ||| host	count=1
function	stop [function_2] ||| [function_2] [function_1]	count=6
arg	the given status and ||| status	count=1
function	first filename ||| filename	count=1
function	line length ||| line length	count=2
class	suitable for use ||| credential	count=1
function	write connection ||| write connection lost	count=2
class	the ||| looping call	count=2
function	host address ||| host	count=1
function	tuple to ||| header to	count=1
arg	a function in a ||| f	count=1
function	to keep ||| to	count=1
arg	string received in ||| string	count=1
class	the underlying pkey ||| public key	count=1
function	one ||| one	count=1
function_arg	reactor if [arg_2] ||| [function_1] [arg_2]	count=1
function	moderator ||| opt moderator	count=1
arg	to the given transport ||| transport	count=2
arg	fromemail [arg_2] ||| [arg_1] [arg_2]	count=1
function	received the welcome from ||| irc rpl welcome	count=1
function	to a string in ||| to string	count=1
class	get ||| twisted sphinx inventory	count=1
function	header can be included ||| header	count=1
function	getpeer but ||| get host	count=1
function	spwd module if it ||| shadow	count=1
function	connection [function_2] ||| [function_2] [function_1]	count=8
arg	l{servicemanager}, using the ||| password	count=1
arg	member ||| member	count=2
function_arg	call [arg_2] ||| [arg_2] [function_1]	count=1
function	string for ||| to string	count=1
class	service l{mailservice} ||| smtpfactory	count=1
class	all [class_2] ||| [class_2] [class_1]	count=8
arg	be importable in ||| modulenames errormessage preventimports	count=1
function	to an ||| to	count=2
module	exhorting the user ||| python	count=1
function	deprecation ||| get	count=1
function_arg	[function_1] [arg_2] ||| file [function_1] file [arg_2]	count=1
arg	given user ||| user	count=2
function	user ||| get user	count=1
module	object ||| python	count=1
arg	channel ||| params	count=2
function	display twisted version ||| opt version	count=2
arg	a description ||| description	count=1
function	files and directories ||| get files and directories	count=1
function	while key [function_2] ||| [function_2] [function_1]	count=3
arg	the given path this ||| path	count=1
function	to report [function_2] ||| [function_2] [function_1]	count=1
class	private encodes ||| ftp	count=1
function	dcc [function_2] ||| [function_1] do accept [function_2]	count=4
module	consider ||| python	count=1
class	name of the file ||| file	count=1
function_arg	string [arg_2] ||| [function_1] [arg_2]	count=6
function_arg	[function_1] request but ||| web [function_1] [arg_2]	count=2
function	return an ||| get	count=8
function	processor ||| opt processor	count=2
module	mac using the incoming ||| conch ssh	count=1
class	the test ||| test case	count=1
function	into the ||| into	count=1
function	child ||| child	count=10
module_class	the netstring ||| protocols netstring receiver	count=2
arg	16 bit identifier assigned ||| answer opcode recdes	count=1
function	a persistent ||| get persistent	count=1
function	and return a factory ||| factory	count=1
arg	indicated warnings [arg] invoking ||| [arg]	count=1
module_class	[module_1] headers ||| [module_1] [class_2] cmp other	count=3
function	[function_1] credentials checkers ||| [function_2] [function_1]	count=1
class	the input file to ||| file body producer	count=1
class	date has changed since ||| log file	count=1
function	query ||| run query	count=1
function	no more body ||| body	count=1
function	data from a producer ||| producer	count=3
function	a connection has ||| connection	count=1
function_arg	[function_1] bytes to ||| [function_1] [arg_2]	count=4
function	write it ||| write	count=1
function_arg	[function_1] a transport ||| [function_1] [arg_2]	count=3
class	[class] ssh ||| sshcommand client [class]	count=2
class	associated with this conversation ||| group conversation	count=1
class	of a www-authenticate ||| factory	count=1
class	next [class_2] ||| [class_2] [class_1]	count=1
function	checkpoint ||| check	count=1
module	a new l{dnsdatagramprotocol} ||| names	count=1
arg	given queries ||| queries timeout	count=1
arg	data by doing ||| data	count=1
function	object as a positive ||| success	count=1
function	a delegation ||| discover authority	count=1
module	information ||| words protocols	count=1
class	of the file ||| dcc file receive	count=1
function_arg	[function_1] request ||| [arg_2] [function_1]	count=2
arg	reconnecting ||| reason reconnecting	count=1
class	this mailbox ||| imailbox imapinfo	count=1
function	of segments between a ||| segments	count=1
function_arg	unregister a [arg_2] ||| [arg_2] [function_1]	count=4
function	this is the ||| call remote	count=1
function	listen} to listen for ||| listen	count=1
function	to an c{eval}-able representation ||| repr	count=1
function	suite was [function] or ||| was [function]	count=1
class	across all ||| maildir	count=2
function_arg	file information ||| add file info	count=1
function_arg	of [arg_2] ||| [arg_2] [function_1]	count=1
class	failure's ||| failure	count=1
module	the beginning of a ||| conch	count=1
class	module [class] ||| module [class]	count=2
class	[class_1] call ||| [class_2] [class_1]	count=2
module_class	[module_1] platform or ||| [module_1] [class_2]	count=3
module	with a list ||| python	count=1
function	endpoint [function_2] ||| [function_2] [function_1]	count=2
module	is called ||| news	count=1
function	connection over the ||| make connection	count=1
class	the date has changed ||| daily log	count=1
function_arg	[function_1] test thing ||| [arg_2] [function_1]	count=6
function	some data ||| write	count=1
module	as ||| cred	count=1
function	is already a child ||| child	count=1
class	produce data for ||| ipull producer	count=1
function	[function_1] including ||| [function_2] [function_1]	count=34
arg	out to [arg] elements ||| [arg]	count=1
function	returns a list of ||| list	count=1
function	receive a msg_kexinit ||| ssh kexinit	count=1
arg	send the topic ||| channel topic author	count=1
class	report the ||| py unit result adapter	count=1
arg	l{remotereference} and [arg_2] ||| [arg_1] [arg_2]	count=3
function	the function ||| function	count=1
function	with the signed data ||| signed data	count=1
class	for ||| resolver	count=1
function_arg	@type dbm ||| init dbm	count=1
arg	mname ||| mname	count=1
function	get the ||| get	count=12
function	remember ||| remember	count=1
class	the date has ||| log	count=1
function	outgoing ||| outgoing	count=2
function	the object it ||| get	count=1
function	match [function_2] ||| [function_2] [function_1]	count=3
function	a hinfo ||| host info	count=1
class	last ||| daily log file	count=2
arg	fd ||| selectable fd event	count=1
arg	fails record the reason ||| reason	count=1
class	method of the c{original} ||| method	count=1
function	writing ||| writing	count=2
function	the challenge ||| challenge	count=1
arg	the given expressions given ||| elem	count=2
function	from ||| from sign hours minutes	count=2
function	key for ||| key	count=1
class	for this domain ||| domain	count=3
class	etc ||| generator	count=1
function	aaaa ||| ipv6address	count=1
arg	name l{bytes} or l{unicode} ||| cls ttl	count=1
function	handle [function] success ||| [function]	count=1
function_arg	[function_1] underlying l{_url} ||| [arg_2] [function_1]	count=2
arg	a l{remotereference} and the ||| obj	count=1
function	figure out how ||| using	count=1
function	on set the ||| get	count=1
arg	given [arg] sent by ||| sender recipient [arg]	count=1
arg	an amp box was ||| box	count=2
arg	newnick and ||| newnick	count=1
module	changed since last ||| python	count=1
function	ciphers to allow ||| ciphers	count=1
arg	passing them to l{write} ||| iovec	count=1
module	the location header fields ||| web	count=1
function	a partial xml ||| xml	count=1
function_arg	child elements [arg_2] ||| [arg_2] [function_1]	count=6
function	left the given ||| user left	count=1
function	list of [function_2] ||| [function_1] static [function_2]	count=1
function	c{_deprecated_info} ||| get	count=1
function_arg	call [arg_2] ||| [function_1] when running [arg_2]	count=1
function	report a connection ||| connection	count=1
module	unparsed ||| conch client	count=1
class	has changed ||| daily log file	count=1
module	using this pidfile ||| runner	count=1
class	file ||| descriptor receiver	count=1
function	report [function_2] ||| [function_2] [function_1]	count=1
function	initialize logging ||| start logging	count=1
function	[function_1] file ("-" ||| [function_1] [function_2]	count=1
function	retrieve the date internally ||| internal date	count=1
function_arg	permissions to [arg_2] ||| [arg_2] [function_1]	count=1
function	object it ||| get deprecated	count=1
function_arg	exchange [arg_2] ||| [function_1] message type [arg_2]	count=1
arg	name func -> none ||| name func	count=3
class	the terminal ||| terminal buffer	count=1
arg	an l{serialnumber} instance ||| number serialbits	count=1
class	create a random ||| digest credential	count=1
class	value suitable for ||| digest credential	count=1
class	a string which is ||| maildir	count=1
class	segments ||| file path	count=1
function	factory which is to ||| factory	count=1
class	of all ||| with	count=1
function	begin logging ||| start logging	count=2
function	gsv sentence ||| fix gsv	count=1
module	whether the message ||| mail	count=1
function	and to [function_2] ||| [function_1] socket [function_2]	count=1
function	authorized to receive ||| authorized	count=1
function	to a given stream ||| to stream	count=1
function	return the full base ||| get path	count=1
class	a database [class] one becomes ||| [class]	count=1
function	[function_1] control header ||| [function_2] [function_1]	count=6
module_class	return the [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	know if the key ||| sshpublic key	count=1
class	mark ||| list mailbox	count=1
function	fetchgroup() ||| group	count=1
function	with a database connection ||| with connection	count=1
module	us the ||| conch ssh	count=2
class	domain name to domain ||| domain	count=1
arg	will represent a ||| classname unjellyable	count=1
arg	monitoring either for reading ||| source primary other primaryflag	count=1
module	and ||| jabber	count=1
function	news ||| news	count=1
function	chunk ||| chunk	count=2
module	the test if ||| trial	count=6
function	create a l{threadworker} with ||| init	count=1
function	child resource all ||| child with default	count=1
function_arg	size as [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg_1] indication ||| [arg_2] [arg_1]	count=1
function	changed the topic to ||| topic updated	count=1
class	state has ||| state	count=2
function	noop command ||| noop	count=1
arg	a command ||| command	count=2
function	a long response is ||| long	count=1
function	[function_1] getnewgroups() ||| [function_1] [function_2]	count=1
function	and size ||| and size	count=2
class	the task completed with ||| mailbox append message task	count=1
arg	tests in that ||| recurse	count=1
function	the function signature of [function_1] [function_2] should be displayed ||| [function_1] [function_2]	count=4
class	is called ||| nntpclient	count=1
class	given ||| itelnet protocol	count=1
arg	string referring to ||| pathname	count=1
function	next iteration and reset ||| reset	count=1
class	[class_1] encoding ||| [class_2] [class_1]	count=1
class	since ||| daily	count=1
module	pop the ||| web	count=1
arg	the given response and ||| response	count=1
module	logged and the ||| internet	count=1
rep	[module_class_1] [function_arg_2] ||| [module_class_1] has [function_arg_2]	count=4
function	[function_1] os x ||| [function_1] [function_2]	count=2
arg	user in this group ||| user	count=1
function	empty ||| clear	count=1
class	and setup authentication ||| initializer	count=1
arg	relay queue after it ||| relay	count=1
arg	from the given instance ||| instance methodname	count=1
arg	testcase the l{testcase} ||| testcase	count=1
class	reactor ||| glib reactor	count=3
arg	[arg_1] a name ||| [arg_2] [arg_1]	count=2
function	ensure that ||| ensure	count=1
function	use as ||| generate	count=1
function	request the ||| request ssi	count=1
function	the user to consider ||| string	count=1
class	a box ignoring l{protocolswitched} ||| box	count=1
module	a ||| internet	count=2
arg	module-level ||| version	count=1
function_arg	write a datagram ||| write datagram address	count=1
arg	[arg_1] given numeric ||| [arg_1] backlog [arg_2]	count=2
function	deprecated api with some ||| replacement	count=1
function	resume request ||| resume	count=2
function	c{eval}-able representation ||| repr	count=1
function	dcc [function_2] ||| [function_1] [function_2]	count=7
class	the connection factory ||| factory	count=1
function	a public key ||| auth publickey	count=1
module	fired and the connection ||| web	count=1
function	share an integer ||| kex dh gex	count=1
function	a person for ||| person	count=1
arg	be returned [arg] ||| fileishobject [arg]	count=3
function	for ||| remote	count=1
class	mbox l{maildirmailbox} ||| append message task	count=1
function_arg	is [arg_2] ||| [function_1] connection control header [arg_2]	count=3
class	new l{agent} that will ||| agent	count=1
function	since last write ||| should	count=1
module	select and setup authentication ||| words protocols	count=1
module	value suitable for use ||| cred	count=1
arg	sha1-digest ||| sid	count=1
function	method associated with the ||| method	count=1
function_arg	c{kwargs} raises c{exception} ||| raises exception	count=1
function	[function_1] into the ||| [function_2] [function_1]	count=4
arg	objects and ||| objects	count=1
class	web server to proxy ||| proxy resource	count=1
class	the initialization ||| initiating initializer	count=1
function	for subnegotiations for ||| unhandled subnegotiation	count=1
function	factory to construct a ||| unjellyable factory	count=1
function	the user id of ||| user id	count=1
arg	[arg_1] l{imessagepart} provider ||| [arg_1] [arg_2]	count=2
class	retrieve the ||| cert base	count=1
function	documentation string describing ||| help	count=1
function	this ||| get	count=2
function	we will stop ||| wont	count=1
class	of my class ||| port	count=2
arg	address the address that ||| address	count=1
module	c{false} if the ||| python	count=1
function	unix time return a ||| get	count=1
function	of [function] ||| list dynamic [function]	count=1
function_arg	[function_1] the reporter ||| [arg_2] [function_1]	count=10
function	ssh agent to sign ||| sign	count=2
function	[function_1] outgoing ||| [function_2] [function_1]	count=4
function	value of via header ||| via	count=1
function	pwd ||| pwd get by name	count=2
module	to the ||| web	count=2
function	stop running tests ||| stop	count=1
function_arg	[function_1] a channel ||| [function_1] kickee [arg_2]	count=1
class	reboots ||| name	count=1
class	connects ||| ireactor tcp	count=1
function	control sequence is ||| control sequence	count=2
function	is a quick and ||| and	count=3
class	pipe signal ||| reader	count=1
module	me as a ||| spread	count=1
function	per envelope this will ||| sent mail	count=1
class	coordinate ||| coordinate	count=2
class	ampbox ||| amp box	count=1
function_arg	join [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] a ecdh ||| [function_2] [function_1]	count=6
arg	a service ||| service	count=2
function	name into ||| name	count=1
function	to run the test ||| test	count=1
function	a namespace [function_2] ||| [function_2] [function_1]	count=5
function	given message [function_2] ||| [function_2] [function_1]	count=4
module	to me ||| spread	count=1
function	send this ||| send	count=2
class	to ||| name generator	count=2
function	exhorting the user to ||| get	count=1
function_arg	[function_1] [arg_2] failure ||| trial [function_1] [arg_2]	count=1
function	[function_1] the stream ||| [function_1] [function_2]	count=1
function	create a random ||| generate	count=1
function	surround a ||| replacement string	count=1
module	it running if we ||| conch ssh	count=1
function	necessary metadata to keep ||| to	count=1
function	children not descendants ||| children	count=1
function_arg	chunks [arg_2] ||| [function_1] [arg_2]	count=1
module	and pass them to ||| web	count=1
module	the characters ||| python	count=1
class	factory that this object ||| factory	count=1
function_arg	[function_1] me with ||| [arg_2] [function_1]	count=1
arg	either reading or writing ||| source primary other flags	count=1
function	the ||| mail	count=1
class	of this message ||| multipart message structure	count=1
class	completion function and ||| zsh subcommand builder	count=1
class	smtp-like ||| postfix tcpmap server	count=1
function	close a file descriptor ||| close	count=1
function	responding to bad ||| respond to bad	count=3
function	in ||| lines	count=1
function	monitored for output ||| writers	count=1
arg	decorators are a twisted ||| decorators	count=1
class	[class] existing ||| mem cache [class]	count=1
class	is ||| connection	count=1
function	the last status change ||| status change	count=2
function	the global reactor ||| global reactor	count=1
function	to mime ||| mime	count=1
function_arg	response [arg_2] ||| [function_1] [arg_2]	count=6
arg	given ||| format replacement	count=2
class	in this file ||| known hosts file	count=1
function	received [function_2] ||| [function_2] [function_1]	count=2
class	peer should be ||| itelnet	count=1
function	mime ||| load mime	count=1
function	add certificate-authority ||| add	count=1
function	collect its text ||| gather text	count=1
function	unix ||| unix	count=2
arg	comparison defined ||| other	count=1
function	[function_1] source ||| [function_1] [function_2] ao	count=3
function	[function_1] client and ||| [function_1] [function_2]	count=1
arg	http header and return ||| request	count=1
class	a url ||| url	count=1
function	for incr/decr/delete ||| not found	count=1
function	with ||| get deprecated	count=1
arg	or an alias ||| memo	count=1
function	closing tag ||| tag end	count=1
class	a socksv4 ||| socksv4	count=1
function	is [function_2] ||| [function_1] [function_2]	count=11
module	ipv4address ||| internet iocpreactor	count=2
function	has been received ||| complete	count=1
function	[function_1] the hostname ||| irequest [function_1] request [function_2]	count=1
module	out the avatar ||| conch	count=1
module	the top level ||| web	count=1
function	called after ||| made	count=2
arg	initiate a hostname ||| resolutionreceiver hostname portnumber addresstypes	count=1
function	a position [function_2] ||| [function_1] [function_2]	count=1
arg	a default value ||| default	count=1
function	[function_1] readable ||| [function_2] [function_1]	count=4
function	the command [function_2] ||| [function_2] [function_1]	count=12
arg	given name ||| name default	count=1
function_arg	[function_1] fd filtering ||| [arg_2] [function_1]	count=1
class	www-authenticate ||| factory	count=1
arg	c{failure} ||| error errorclass frames	count=1
class	parser function for l{_parseserver} ||| parser	count=1
arg	key ||| key	count=9
function	is running on set ||| get deprecated	count=1
function_arg	message [arg_2] ||| [function_1] [arg_2]	count=1
function	of ||| name	count=2
class	we ||| transport	count=2
function	via amp invoke ||| call remote	count=1
function	in decimal [function_2] ||| [function_1] [function_2]	count=4
module_class	[module_1] l{_gzipprotocol} ||| [module_1] [class_2]	count=2
class	called if a checker ||| sshprotocol checker	count=1
function	readable flags ||| readable	count=1
function_arg	channel [arg_2] ||| [function_1] request [arg_2]	count=1
function	or dynamically generated child ||| child with default	count=1
arg	connects a given l{datagramprotocol} ||| address protocol maxpacketsize mode	count=1
class	to this ||| generator	count=1
function_arg	given certificate [arg_2] ||| [function_1] [arg_2]	count=1
function	timeout policy for ||| policy	count=1
function_arg	[function_1] [arg_2] ||| trial [function_1] [arg_2]	count=3
arg	an nmea [arg] minus header ||| [arg]	count=1
function_arg	response to [arg_2] ||| [arg_2] [function_1]	count=2
module	called when the encryption ||| conch ssh	count=1
function_arg	[function_1] to a ||| [arg_2] [function_1]	count=3
arg	[arg] themselves ||| pubkey [arg]	count=1
class	changed since last write ||| file	count=1
class	command ||| command locator	count=1
arg	client protocol to a ||| protocol	count=1
function_arg	expected failure [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] an object ||| [function_2] [function_1]	count=9
function	source ||| source	count=4
class	message as ||| mailbox append message	count=1
arg	declare ||| modulename	count=1
function	[function_1] the trigger ||| [function_2] [function_1]	count=3
function	kicked from ||| user kicked	count=1
function	write out a ||| write	count=1
module_class	the file ||| conch isftpfile	count=3
function	method [function_2] ||| [function_2] [function_1]	count=1
module	given to ||| internet	count=1
function	l{esmtpsender} protocol ||| protocol	count=1
function_arg	internal initialize me ||| init perspective	count=1
function	schedule a retry ||| wait	count=1
class	waiting on the service ||| machine	count=1
arg	the topic ||| channel topic author	count=1
function	mime types ||| load mime types	count=2
class	called ||| protocol	count=1
arg	message which cannot ||| relay message	count=3
function	the time ||| time	count=7
function	into the receive ||| flush receive	count=1
module	a ||| application runner	count=2
function	complete http header extract ||| extract	count=1
arg	client protocol to a ||| protocol maxpacketsize	count=1
arg	address the address that ||| address message	count=1
function	the normal prefix to ||| log prefix	count=1
function_arg	[function_1] transport and ||| [arg_2] [function_1]	count=3
function	not do any cleanup ||| cleanup	count=1
module_class	[module_1] connection still ||| [module_1] [class_2] force abort client	count=3
module	the response to this ||| python	count=1
module	called when i ||| words	count=1
function	[function_1] cache ||| [function_2] [function_1]	count=7
module	after the ||| web	count=3
function	this ||| remote	count=2
class	initializes a satellite ||| satellite	count=1
class	since last ||| file	count=1
module_class	of this file ||| python file path	count=1
function	return a new conversation ||| get conversation	count=1
class	connection retry ||| machine	count=1
module	attempt ||| application	count=1
class	all processes ||| maildir name generator	count=1
module_class	the current [class_2] ||| [module_1] [class_2]	count=4
arg	in the given ||| format replacement	count=2
class	this structure ||| singlepart message structure	count=1
arg	beginning of c{query} ||| lastsequenceid	count=1
function	from a producer ||| producer	count=3
arg	a failure to a ||| failure	count=1
arg	c{failure} with some ||| error errorclass frames	count=1
function_arg	unregister [arg_2] ||| [function_1] address [arg_2]	count=1
class	a transport is ||| abstract datagram protocol	count=1
class	encode ||| irequest encoder	count=1
function	into a trust root ||| trust root	count=1
function	processor for ||| opt processor	count=1
function	an unused directory ||| unused test directory	count=1
function	l{h2stream} objects [function] ||| [function] data to	count=1
class	and ||| path	count=1
arg	name in this ||| name	count=1
module_class	[module_1] path ||| [module_1] [class_2]	count=6
arg	[arg] to ||| [arg]	count=4
class	color ||| parser	count=1
class	performing ||| transport	count=1
arg	a hostname ||| hostname	count=2
function	determine the log prefix ||| log prefix	count=1
class	remove ||| bootstrap mixin	count=1
class	this [class] ||| command [class]	count=2
function	a factory which ||| factory	count=1
class	redirect ||| redirect	count=2
function	delete the ||| delete	count=2
function	[function_1] reading ||| [function_2] [function_1]	count=1
module	if the authentication ||| conch	count=1
class	initiate ||| feature initiating initializer	count=1
function	and yield in source ||| source lines	count=1
class	www-authenticate ||| credential factory	count=2
function_arg	set the [arg_2] ||| [function_1] messages [arg_2]	count=5
function_arg	leaves [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] logical url ||| [function_1] [arg_2]	count=3
function	a delegation if ||| discover authority	count=1
class	has changed since last ||| log file	count=1
function	methods that share ||| dh gex request old	count=1
arg	digesthash the ||| digesthash	count=1
function	[function] public ||| [function] public	count=1
function	to sign ||| sign	count=2
function	per envelope this ||| mail	count=1
function	an l{esmtpsender} protocol ||| protocol	count=1
class	@return ||| xforwarded for request	count=2
class	matching ||| known hosts file	count=1
function	into a string ||| string	count=1
class	a legacy observer to ||| legacy	count=1
function	a password ||| password	count=2
arg	method for ||| description	count=1
function_arg	[function_1] given group ||| [function_1] [arg_2]	count=3
function	[function_1] service ||| [function_1] [function_2]	count=3
function	read buffer ||| read buffer	count=2
arg	a channel this ||| channel	count=1
function_arg	[function_1] a message ||| [function_1] user [arg_2]	count=1
function	using the ||| build service	count=1
class	returns an l{ipv4address} or ||| server	count=1
class	a ||| public	count=1
arg	path from a response ||| response	count=1
function_arg	headers [arg_2] ||| raw [function_1] [arg_2]	count=2
function	initiate the outgoing ||| do connect	count=1
class	see twisted ||| reactor	count=1
function	date string one ||| string	count=1
function	format the ||| format child	count=1
function	consider it ||| get	count=1
class	exposed method with ||| expose	count=1
function	[function] for ||| get [function]	count=2
class	sent with l{callremote}, ||| box dispatcher	count=1
module	the server gotoverview() is ||| news	count=1
function	[function] current ||| [function]	count=1
class	received data represents ||| netstring receiver	count=2
function	end tag ||| document end	count=1
function	as a ||| writing	count=1
function	indicate ||| wont	count=1
arg	and description ||| errorcode description fatal local	count=1
class	context using this pidfile ||| ipidfile	count=1
function	the ||| build service manager	count=2
function	list of method names ||| prefixed method names	count=1
module	pre-built l{servicemanager}, using the ||| words	count=1
module	l{servicemanager}, using ||| words protocols jabber	count=1
arg	[arg_1] from ||| [arg_2] [arg_1]	count=6
function	iterator of l{ireactorinstaller} plugins ||| reactor types	count=1
function	to a string ||| string proto	count=1
function	the number ||| number	count=1
function	received a msg_userauth_failure ||| ssh userauth failure	count=1
module	on the ||| mail	count=1
arg	reconnecting subclasses ||| reconnecting	count=1
module	[module] c{testsuiteorcase} ||| [module]	count=1
function	was last accessed ||| access	count=1
module	select and ||| protocols	count=1
arg	given its name ||| name	count=1
function	the likely uid for ||| uidnext	count=1
function	control [function_2] ||| [function_1] [function_2]	count=5
class	file ||| log file	count=5
function	make a connection to ||| make connection	count=1
arg	this object as ||| obj	count=1
function	returning files and ||| get files and	count=2
function	amp ||| call remote	count=1
module	service extensions @return the ||| mail	count=1
module	inside the ||| internet	count=1
function	object represents in feet ||| in feet	count=1
arg	protocol [arg] ||| sock protocol [arg]	count=1
class	[class] one becomes ||| [class]	count=1
function	[function_1] failed ||| [function_1] [function_2]	count=2
function	a c{datetime ||| date	count=1
function	and the object it ||| deprecated	count=1
function	iterate all modules and ||| iter modules	count=1
class	dn ||| distinguished name	count=1
arg	list of local files ||| previousresult files	count=1
function	reverse the above ||| reverse log	count=1
function	if loopback mode ||| loopback mode	count=1
arg	reporter ||| testname fail	count=1
class	file's last ||| zip path	count=4
function_arg	a msg_kexinit [arg_2] ||| [function_1] [arg_2]	count=1
class	to address we are ||| iunixdatagram	count=1
function	prefix to log with ||| log prefix	count=3
class	a l{tlsmemorybiofactory} ||| tlsmemory biofactory	count=1
function	hash of ||| hash	count=2
class	function across all processes ||| name	count=1
function	its window ||| channel window adjust	count=1
module_class	this database ||| python user database	count=1
module	the public ||| conch ssh	count=1
class	been ||| deferred	count=1
module	transport of the ||| protocols	count=1
class	remove all ansi color ||| ansi parser	count=1
function	and close the underlying ||| lose	count=1
function	a testcase subclass ||| name	count=1
function	return the threadpool ||| get thread pool	count=1
arg	a new message is ||| status	count=1
function	get a [function_2] ||| [function_1] [function_2]	count=15
function	connect via tcp ||| connect	count=2
class	existing c{key} ||| mem cache	count=1
function	[function_1] options ||| [function_1] [function_2]	count=2
function	chunks ||| chunks	count=1
arg	called to indicate ||| width height	count=1
function_arg	endpoint from [arg_2] ||| [function_1] string [arg_2]	count=2
function	protocol instances over tcp ||| tcp	count=1
function	a message ||| show message	count=1
class	value of c{key} ||| mem cache protocol	count=2
function	internet ||| address resolved	count=1
function	factory to construct a ||| factory	count=1
function_arg	object @param [arg_2] ||| [function_1] [arg_2]	count=1
module_class	formatting [class_2] ||| [module_1] [class_2]	count=3
function_arg	kicked [arg_2] ||| [arg_2] [function_1]	count=1
module	l{servicemanager}, using the ||| words protocols jabber	count=1
function	a server [function_2] ||| [function_1] [function_2]	count=5
function_arg	[function_1] [arg_2] l{serialnumber} instance ||| [function_1] [arg_2]	count=1
arg	c{messageset} ||| headertype headernumber	count=1
function	read into the ||| read	count=1
class	all processes reboots etc ||| maildir	count=1
class	string for a message ||| delivery base	count=1
arg	text by ||| text	count=1
function	'message' in the ||| end line	count=1
function_arg	[function_1] of observers ||| [function_1] [arg_2]	count=1
function	messages which have been ||| messages	count=1
function	for a given ||| factory	count=1
arg	c{query} possibly more ||| msgid msg lastsequenceid	count=1
function	a msg_userauth_success ||| userauth success	count=1
arg	service an email service ||| service	count=2
arg	get 0 or 1 ||| numok	count=1
arg	a description ||| reactor description	count=1
function	the mail is from ||| from	count=1
function	projects ||| projects	count=2
function	[function_1] sentence ||| [function_1] [function_2]	count=3
function	creates a symlink ||| link	count=1
class	which is intended ||| maildir name generator	count=1
arg	implement l{istreamclientendpoint connect} to ||| protocolfactory	count=3
function	a channel ||| channel	count=5
arg	of c{message} (a l{message} ||| message	count=1
class	structure object reports on ||| message structure	count=2
function	[function_1] url ||| [function_2] [function_1]	count=3
class	given a secured ||| endpoint	count=1
function	flags of one or ||| flags	count=1
function_arg	c{inode} [arg_2] ||| [function_1] inode [arg_2]	count=2
class	a private [class_2] ||| [class_1] [class_2] load pem class	count=1
function_arg	[function_1] signed with ||| [function_1] [arg_2]	count=4
function	a password ||| auth password	count=1
arg	given response and ||| response method host	count=1
arg	by an l{httpclientparser} to ||| rest	count=1
function	all pending requests for ||| and cancel connect waiters	count=1
class	descriptor will use ||| descriptor	count=1
arg	c{project} that should appear ||| project	count=1
function	default [function_2] ||| [function_2] [function_1]	count=6
function	disposition and a flattened ||| disposition	count=1
function	validate the address for ||| validate to	count=2
rep	other side [function_arg_2] ||| [function_arg_2] [module_class_1]	count=1
arg	from the given sender ||| sender text metadata	count=1
function	this logger which ||| logger for	count=1
module	the ||| words protocols jabber	count=4
function	construct a key ||| key	count=1
function	an exponential backoff ||| backoff	count=1
class	via amp ||| box	count=1
arg	failure ||| failure	count=5
module_class	[module_1] domain name ||| [module_1] [class_2]	count=2
function	above mapping adding both ||| mapping	count=1
arg	whether the credentials ||| credentials	count=1
module	a random value ||| cred	count=1
function	chat ||| receive chat invite	count=2
arg	host name [arg_2] ||| [arg_2] [arg_1]	count=2
class	connection ||| http11client protocol	count=1
module	intended to be ||| mail	count=1
function	this node ||| node	count=1
module	setup ||| words	count=1
module	sending [module_2] ||| [module_2] [module_1]	count=4
function	set the c{_deprecated_info} ||| get	count=1
function	screen and return ||| screen	count=1
arg	an asyncio-based reactor ||| eventloop	count=1
function	[function_1] length ||| [function_2] [function_1]	count=3
arg	the specified path ||| path	count=3
function	[function] trigger if ||| [function] trigger	count=1
class	shutdown the pool ||| pool	count=1
class	a random value ||| factory	count=1
module	of [module] attribute ||| [module]	count=1
function	data of message to ||| mail data	count=1
class	set ||| insults client	count=1
function_arg	its [arg_2] ||| [function_1] [arg_2]	count=1
class	[class_1] file that ||| [class_2] [class_1]	count=2
function	[function_1] [function_2] e g traditional ||| [function_1] [function_2] event formattime	count=2
class	to relay ||| manager	count=1
module_class	[module_1] file ||| [module_1] [class_2]	count=58
function_arg	response string ||| response secret	count=1
function	list of ||| get deprecated	count=1
class	are connected to ||| iunixdatagram connected	count=1
function_arg	authentication [arg_2] ||| mail pop3 [function_1] mailbox [arg_2]	count=1
function	create a ziparchive ||| init	count=1
module	of message rename the ||| mail	count=1
function	for the article ||| article request	count=1
function_arg	[function_1] datagram ||| [arg_2] [function_1]	count=3
function	position is [function_2] ||| [function_1] [function_2]	count=1
function	connection from the ||| client connection	count=1
function	single ||| stop	count=1
function	type ||| string type	count=2
arg	a queue ||| queue	count=1
function	request early termination of ||| abort request	count=1
arg	[arg_1] over ||| cls [arg_1] [arg_2]	count=4
function	to a string ||| string	count=1
arg	and port number ||| port	count=2
class	a retry ||| machine	count=1
class	intended to ||| maildir name generator	count=1
function	user gets a notice ||| irc notice	count=1
arg	[arg_1] name to ||| [arg_1] [arg_2]	count=1
function	set our idle time ||| set	count=1
module	the value of a ||| web	count=1
function	a ||| build	count=1
function	dcc resume ||| dcc resume	count=2
function	given file [function_2] ||| [function_2] [function_1]	count=1
arg	objects ||| objects proto	count=1
function_arg	[function_1] [arg_2] ||| [function_1] channel [arg_2]	count=1
module	[module] daemonize ||| [module]	count=3
arg	the reporter ||| testname reason	count=1
module	the beginning ||| mail	count=2
class	file ||| ifile descriptor receiver	count=1
function	unregister producer for ||| unregister producer	count=2
arg	if other ||| other	count=1
arg	objects and add them ||| objects	count=1
arg	[arg_1] hostname resolution ||| [arg_2] [arg_1]	count=2
function	[function_1] character ||| [function_1] [function_2]	count=1
function	data [function] ||| write data [function]	count=3
function	create or load an ||| create or	count=1
arg	work ||| work	count=1
function	the stream [function_2] ||| [function_2] [function_1]	count=3
class	handle user [class_2] ||| [class_1] [class_2]	count=1
arg	protocol ||| protocol maxpacketsize mode	count=1
class	my syspath and ||| python	count=1
class	cprofile profiler ||| cprofile	count=1
module_class	[module_1] entry ||| [module_1] [class_2]	count=2
function	-> boolean ||| type allowed	count=1
class	intended to be unique ||| generator	count=1
class	time this is unconnected ||| iprotocol factory	count=1
arg	a hostname ||| resolutionreceiver hostname	count=1
class	from the input file ||| file	count=2
module_class	the [class_2] ||| [module_1] [class_2] splitext	count=3
class	containing authorized keys and ||| sshpublic key database	count=1
arg	set flags for one ||| flags silent	count=1
module	a string which ||| mail	count=1
function	own signal handlers ||| signal handlers	count=1
function	poll ||| poll	count=2
function	close a ||| send close	count=1
module	running [module] given iterator ||| [module]	count=1
arg	information about the server ||| info	count=1
function	the serial ||| serial	count=1
arg	to a query ||| query	count=1
class	was ||| ifile descriptor	count=1
class	previously sent with l{callremote}, ||| dispatcher	count=1
function	hash of the underlying ||| hash	count=1
arg	the key to lookup ||| key value	count=1
arg	in blob from ||| blob	count=1
class	has changed ||| log	count=1
function_arg	[function_1] the query ||| [arg_2] [function_1]	count=2
function	_exc_info if ||| exc info	count=1
module	if any of the ||| python	count=1
arg	checks whether [arg] themselves are ||| pubkey [arg]	count=1
arg	the given [arg] given ||| sender recipient [arg]	count=1
class	endpoint ||| stream server endpoint	count=1
function	version information and exit ||| version	count=1
module	select and setup authentication ||| words	count=1
class	zippath ||| zip	count=2
function	component has lost the ||| component	count=1
function	body has ||| body data received deferred	count=1
module	a pre-built l{servicemanager}, using ||| protocols	count=1
function	msg_kex_dh_gex_request message ||| ssh kex dh gex request	count=1
arg	data for ||| data	count=1
function	the read connection ||| read connection	count=1
function	time of the ||| time	count=2
function	directory for a ||| user directory	count=1
function	[function_1] type ||| [function_2] [function_1]	count=10
class	to this ||| name generator	count=1
arg	given name ||| name	count=11
arg	@param groupname ||| groupname	count=1
function	directory ||| test directory	count=2
class	syspath and moduledict in ||| python path	count=1
arg	server [arg_2] ||| [arg_2] [arg_1]	count=5
class	a web context factory ||| current policy	count=1
arg	and then asking ||| cls type timeout	count=1
class	response minus ||| response	count=1
arg	iterator ||| iterator	count=1
function	frame the body ||| body	count=2
function	the connection was in ||| connection	count=1
module_class	the given ||| conch isftpserver	count=1
function	to a new-style ||| to new	count=1
module	[module] the ||| [module]	count=1
function	elements which are ||| elements	count=1
function	which drives that ||| producing	count=1
arg	test thing ||| testthing	count=1
function	filenames keys ||| keys	count=1
module	them if the ||| internet	count=1
class	the pool ||| connection pool	count=1
function	[function_1] trigger ||| [function_1] [function_2]	count=3
function	global detector object ||| list open fds	count=1
function	when executing ||| responder	count=1
function	necessary for unix ||| unix	count=1
function	deprecated api with some ||| get	count=1
function	create a ||| generate	count=1
class	initializes a ||| checker	count=1
class	signal handlers for the ||| signal reactor mixin	count=1
arg	[arg_1] which cannot ||| [arg_2] [arg_1]	count=8
function	c{self _wrappedfactory} or errback ||| build	count=1
module	string ||| words	count=1
class	file size ||| file	count=1
function	on set the ||| get deprecated	count=1
arg	c{failure} with some ||| errorclass frames	count=1
function	as ||| for writing	count=1
module	called when the transport ||| words protocols	count=1
class	convert ||| argument	count=1
class	the ||| process writer	count=1
class	file's last access-time ||| zip path	count=1
function	server's overview format ||| overview	count=1
function	against ||| check	count=1
class	of ||| cert	count=1
function	[function] made register ||| make [function]	count=3
function	all pending requests ||| ignore and cancel connect waiters	count=1
function	transition to the running ||| running	count=1
function	authentication [function_2] ||| [function_2] [function_1]	count=1
arg	protocol factory to ||| factory	count=1
module	[module_1] the user ||| [module_2] [module_1]	count=1
class	date ||| daily	count=1
arg	a l{sshpublickeychecker} ||| keydb	count=1
arg	test has ||| test	count=1
class	the ||| queue	count=1
class	this is unconnected from ||| iprotocol factory	count=1
class	domain [class_2] ||| [class_1] with [class_2]	count=1
class	[class_1] utc ||| [class_2] [class_1]	count=1
function	partial visible satellite information ||| fix	count=1
function	check if [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] octets ||| [arg_2] [function_1]	count=3
function	msg_unimplemented message ||| ssh unimplemented	count=1
function	end of message along ||| eom received	count=1
function	[function_1] to bad ||| [function_1] [function_2]	count=4
class	l{dnsdatagramprotocol} instance from ||| resolver	count=1
class	in [class] ||| bounce [class]	count=1
class	a new l{agent} ||| agent	count=1
arg	hierarchy into ||| classobj attr listobj baseclass	count=1
class	the received data represents ||| netstring receiver	count=1
function	retrieve a child resource ||| get child with default	count=1
function	increment the value of ||| increment	count=1
function	list [function] ||| [function]	count=1
function	c{setup}, [function] ||| run fixtures and [function]	count=1
function_arg	[function_1] numeric ||| [function_1] port factory backlog [arg_2]	count=1
arg	to l{write} ||| iovec	count=1
function	after successfully signing ||| signed	count=1
class	this lock ||| deferred filesystem lock	count=1
arg	to encrypted communication ||| contextfactory	count=1
function	l{iprocesstransport} ||| stop	count=1
function_arg	initialize a [arg_2] ||| [arg_2] [function_1]	count=2
function	idle time ||| idle time	count=2
function	to this group ||| group	count=2
class	reactor ||| reactor	count=6
function	length ||| length limit exceeded	count=1
arg	exitcode ||| exitcode	count=1
class	generate ||| credential factory	count=1
module	initialization ||| protocols jabber	count=2
class	[class_1] last ||| [class_1] [class_2]	count=1
module	variables of this ||| python	count=1
class	[class] the c{commandconnected} ||| command [class]	count=1
function_arg	[function_1] err is ||| trial [function_1] [arg_2]	count=1
function	opaque to be ||| opaque	count=1
class	print 'message' ||| tree	count=1
function	incoming request [function] ||| [function] connection	count=2
function	get a previously-remembered ||| get root	count=3
arg	an iterable of l{bytes} ||| addr	count=1
arg	file any file-like ||| file	count=1
class	file and make ||| file	count=1
function	using a thread ||| to thread	count=1
function	to an [function_2] ||| exc info or failure [function_1] [function_2]	count=1
function	@type accountname string @param ||| init	count=1
class	prefix greater than c{max_length} ||| int nstring receiver	count=1
function	of all child elements ||| elements by tag name	count=1
arg	waker ||| waker	count=1
class	string for ||| domain delivery base	count=1
class	authentication type ||| auth	count=1
module	l{_connectedprotocol}, issue ||| names	count=1
function	modification ||| get status change	count=1
function	expiration ||| expiration	count=1
function	l{deferred} ||| deferred	count=2
function	match plugin to ||| match plugin to	count=3
module	pre-built l{servicemanager}, using ||| protocols jabber	count=1
function	a string split ||| split	count=1
class	cgi script file ||| cgiscript	count=1
class	running service if any ||| sshtransport	count=1
arg	they aren't value constants ||| level	count=1
arg	to listen [arg_2] ||| [arg_2] [arg_1]	count=2
class	write ||| log file	count=2
class	be unique across all ||| maildir name	count=1
class	set ||| xml stream	count=1
class	a ||| speed	count=1
arg	publisher i'll ||| publisher	count=1
function	test whether ||| is	count=1
function	[function_1] producer ||| [function_2] [function_1]	count=2
class	message as ||| append message	count=1
class	remove ||| epoll reactor	count=3
arg	using this [arg_2] ||| [arg_1] [arg_2]	count=1
module	open the ||| python	count=1
function_arg	[function_1] data over ||| [arg_2] [function_1]	count=3
function	passed [function] 4-tuples ||| [function]	count=1
class	request that the agent ||| sshagent client	count=1
class	that could be useful ||| file	count=1
function	a connection ||| make connection	count=1
function	current sentence ||| current sentence	count=1
module	it was given to ||| internet	count=1
function	service from ||| service	count=1
function	a connection over the ||| make connection	count=1
function	with some polite ||| get replacement string	count=1
class	input file ||| file	count=2
arg	in the filesystem ||| fn	count=1
function	makes sure that ||| check partial length specification	count=1
arg	a query checking for ||| query timeout	count=1
function	[function_1] quote ||| [function_2] [function_1]	count=1
function	given certificate ||| certificate	count=1
function	likely uid for the ||| uidnext	count=1
module	xml ||| protocols jabber	count=1
arg	of local files ||| previousresult files	count=1
function	makes doc ||| doc make	count=1
function	listen} to listen on ||| listen	count=2
class	lose ||| sshtransport base	count=1
function	handle [function] success by ||| [function]	count=1
function	to uncache ||| uncache	count=1
class	a random value ||| digest credential factory	count=1
function	from a [function_2] ||| [function_2] [function_1]	count=9
function	prepare the ||| prepare extensions	count=1
class	temporary file ||| file wrapper	count=4
class	the [class] ||| [class]	count=2
function	user that an account ||| register account	count=1
module	using the ||| internet	count=1
function	for a ||| get replacement	count=1
class	file and create a ||| file	count=2
function_arg	[function_1] datagram out ||| [arg_2] [function_1]	count=1
arg	only an #include line ||| header_name	count=1
function	[function_1] all readers ||| [function_2] [function_1]	count=1
arg	connection from ||| key connection	count=1
function	delete a ||| delete	count=1
class	certificate authorities to trust ||| authorities	count=1
arg	to ||| to	count=1
function	add ||| add item	count=1
function_arg	[function_1] given increment ||| [arg_2] [function_1]	count=4
class	in this mailbox ||| imailbox	count=1
module	retrieve the first ||| words xish	count=1
module_class	retrieve the [class_2] ||| [module_1] [class_2]	count=2
function	the subject of ||| subject	count=1
class	l{_connectedprotocol}, issue a ||| resolver	count=1
function	above mapping adding ||| mapping	count=1
arg	[arg_1] account client ||| [arg_1] [arg_2]	count=6
function	application based ||| get application	count=1
function	query and ||| run query	count=1
module_class	[module_1] i{chunked} ||| [module_1] [class_2]	count=4
function	an account ||| account	count=1
function_arg	send for [arg_2] ||| [function_1] [arg_2]	count=1
module	is the ||| protocols	count=1
function_arg	push [arg_2] ||| [function_1] [arg_2]	count=1
module	a new l{dnsdatagramprotocol} instance ||| names	count=1
function_arg	[function_1] @param user ||| [arg_2] [function_1]	count=2
module	called when the remote ||| conch ssh	count=1
function	deprecate c{iterate}, c{crash} and ||| deprecate reactor	count=1
module	protocol support ||| protocols haproxy	count=1
class	error translation ||| error	count=1
arg	user not an ||| user	count=1
module	performing the given ||| conch	count=1
function	changed since ||| should	count=1
function_arg	i{less than} [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	is [arg_2] ||| [arg_2] [function_1]	count=5
module_class	the connection ||| protocols oscar connection	count=1
class	dictionary ||| with default dict	count=9
arg	c{value} when ||| name value	count=1
arg	to c{applicationobject}, which may ||| applicationobject	count=1
module	instance from l{_connectedprotocol}, ||| names	count=1
class	unique ||| name generator	count=1
module_class	[module_1] workers ||| [module_1] [class_2]	count=8
function	attributes ||| attrs	count=1
function	received to complete ||| complete	count=1
arg	another ||| name type cls	count=1
arg	key ||| key value	count=1
function	that determines whether ||| constraint	count=1
function	variable name into a ||| name	count=1
arg	person object ||| person	count=1
function	of decorators and the ||| get deprecated	count=1
arg	c{regexp} search ||| regex msg	count=1
arg	python objects ||| objects proto	count=1
class	this ||| name	count=1
arg	child resource to this ||| child	count=1
module	twisted internet ||| internet	count=1
function_arg	[function_1] [arg_2] ||| [function_1] key [arg_2]	count=5
function	failure [function] ||| info or failure [function] exc	count=1
class	across all processes reboots ||| maildir name generator	count=1
class	we will stop ||| itelnet transport	count=1
class	this reactor ||| reactor	count=1
function	new instance ||| new instance	count=2
function	amp ||| call	count=1
module	the next iteration ||| internet	count=1
function	if [function] cannot be ||| [function]	count=1
function	metadata to [function_2] ||| [function_1] [function_2]	count=1
function	register a ||| register	count=4
function	parse some ||| parse	count=1
class	last write ||| log	count=1
function	a deprecated api ||| get	count=1
class	running service [class_2] ||| [class_1] [class_2]	count=2
module	out this ||| internet	count=1
class	response to a head ||| httpclient parser	count=1
arg	@param fp ||| fp	count=1
function	twisted global c{zope ||| registry	count=1
module	to it using c{*args}, ||| names	count=1
function	this object for this ||| unique	count=1
arg	data over ||| obj	count=4
function	iteration and reset ||| reset	count=1
class	worker ||| worker	count=1
class	file ||| ifile path	count=5
function	polite text ||| get replacement	count=1
module	the encryption has ||| conch	count=1
module	child of this ||| python	count=1
function	vt102 control sequence that ||| to vt102	count=1
module_class	[module_1] [class_2] ||| [module_1] group [class_2]	count=8
module	move the cursor ||| conch insults	count=2
module	running on ||| python	count=1
function	[function_1] encoder ||| iencoding resource [function_1] [function_2]	count=2
function	sha1-digest ||| hash password	count=1
arg	a chunk of data ||| data	count=2
function	it as an alternative ||| get	count=1
class	file and make a ||| file	count=1
class	of a ||| digest credential factory	count=1
function	error message from the ||| error	count=1
function	[function_1] specific type ||| [function_2] [function_1]	count=4
arg	[arg] other ||| [arg] recipient	count=1
function	directory named similarly to ||| test directory	count=1
function	or ||| get	count=1
function	none if [function] cannot ||| [function]	count=1
arg	opaque and nonce ||| nonce	count=1
class	[class] defined ||| [class]	count=2
function	the given header in ||| header	count=1
function_arg	internal get [arg_2] ||| [arg_2] [function_1]	count=3
function	name into a function ||| unpickle function	count=1
arg	the given name ||| name	count=6
class	to a zippath by ||| zip map	count=1
class	the file and create ||| file	count=2
function	[function_1] id of ||| [function_1] [function_2]	count=3
function	a client [function_2] ||| [function_2] [function_1]	count=2
function	amp ||| remote	count=1
function	i ||| factory	count=1
arg	given group ||| group low high header	count=1
module_class	[module_1] called when ||| [module_1] [class_2]	count=3
module	messages via amp ||| protocols	count=1
class	test if any is ||| test case	count=1
function_arg	list [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] a connection ||| [function_2] [function_1]	count=4
arg	the given response ||| response method host	count=1
module	keys [module] ||| [module]	count=1
function	name of this ||| name	count=1
function	number of hard links ||| number of hard links	count=1
function	to connect via a ||| connect	count=1
arg	given response ||| response method host	count=1
function	returns a [function] ||| [function]	count=1
arg	[arg_1] password ||| [arg_2] [arg_1]	count=3
function	of line ||| line	count=1
function_arg	from [arg_2] ||| [arg_2] [function_1]	count=7
module	via amp ||| protocols	count=1
function_arg	[function_1] room ||| [arg_2] [function_1]	count=10
function	request the resource ||| request	count=1
arg	[arg] or ask ||| [arg]	count=3
arg	user the hostmask ||| user channel	count=1
module_class	open [module_1] [class_2] using c{mode} or for ||| [module_1] [class_2]	count=1
function	function returns a persistent ||| persistent	count=1
class	across all calls ||| maildir name generator	count=1
class	l{httpchannel} has ||| ideprecated httpchannel to request	count=1
function	the name of the ||| name	count=1
module	initialization ||| jabber	count=1
arg	some data to ||| data	count=1
class	signal ||| iprocess transport	count=1
function_arg	[function_1] the flags ||| [function_1] messages [arg_2]	count=1
class	timer ||| looping	count=1
class	get ||| cache protocol	count=1
function	two-tuple ||| group request	count=1
function	has changed ||| should	count=1
function	to connect ||| connect	count=3
function	is a [function_2] ||| [function_1] [function_2]	count=3
class	a random value ||| credential factory	count=1
module	the test results ||| trial	count=1
function	return ||| get group	count=1
class	that thread ||| thread	count=1
class	an existing ||| mem cache protocol	count=2
function	and render ||| render	count=1
function	ancillary data payload ||| ancillary	count=1
arg	instance ||| instance	count=1
class	the service is ||| machine	count=2
module_class	[module_1] [class_2] ||| [module_1] _auth [class_2]	count=1
function	of the read connection ||| read connection lost	count=1
function	cancel all pending calls ||| pending	count=1
class	a port for ||| port	count=1
class	contact ||| ichat ui	count=1
function	group [function_2] ||| [function_2] [function_1]	count=3
function	host [function_2] ||| [function_1] [function_2]	count=1
function	address and a ||| address and	count=1
function	resolve address family ||| set address family	count=2
class	[class_1] this domain ||| [class_2] [class_1]	count=1
function	main wx/twisted ||| main	count=1
module	for drawing on the ||| conch	count=1
function_arg	a [function_1] [arg_2] ||| [function_1] [arg_2]	count=9
function	group to join ||| join group	count=3
function	get the initial client ||| get initial	count=1
class	headers} ||| httpparser	count=1
function_arg	[function_1] passing over ||| [arg_2] [function_1]	count=3
function	waiting for ||| waiting	count=1
class	is jellyable ||| jellyable	count=1
function	plugin [function_2] ||| [function_2] [function_1]	count=2
function	number of ||| count	count=2
function	factory which will respond ||| factory	count=1
class	timer ||| call	count=1
function	a list response ||| list	count=1
function	kicked ||| user kicked	count=1
function	formatted log ||| log	count=1
class	id that this component ||| component	count=1
function	[function_1] descriptor ||| [function_2] [function_1]	count=4
function	to the docstring ||| to docstring	count=3
function	to the given ||| to	count=1
arg	[arg_1] == ||| item [arg_2] [arg_1]	count=1
module_class	[module_1] both ||| [module_1] [class_2]	count=8
class	scheduled [class_2] ||| [class_2] [class_1]	count=2
module_class	if [class_2] ||| [module_1] [class_2]	count=4
class	of the test ||| test	count=1
module	run the ||| python	count=1
class	processes reboots etc ||| generator	count=1
function	close ||| lose connection	count=1
function	to send [function_2] ||| [function_2] [function_1]	count=1
function	number of [function_2] ||| [function_2] [function_1]	count=3
arg	wrapper and ||| wrapper wrapped	count=2
module	connection to the jabber ||| protocols jabber	count=1
function	receive a msg_service_accept ||| service accept	count=1
class	certificate authorities ||| authorities	count=1
function	the deferred ||| get	count=1
function	to find [function_2] ||| [function_1] [function_2]	count=5
function	an extension to ignore ||| ignore	count=1
arg	0 or 1 ||| code resp numok	count=2
class	the message as it ||| message task	count=1
class	response ||| httpclient parser	count=1
arg	an [arg] ||| [arg]	count=1
function_arg	[function_1] msgs the ||| [function_1] [arg_2]	count=3
module	it ||| web	count=1
function	[function] c{obj} ||| [function]	count=3
arg	on a given fd ||| fd	count=1
function_arg	[function_1] given field/format/conversion ||| [function_1] [arg_2]	count=2
function	message to ||| append message	count=2
function_arg	[function_1] [arg_2] for ||| sshfactory [function_1] transport [arg_2]	count=1
function	remove ||| remove connection	count=2
function	given host [function_2] ||| [function_2] [function_1]	count=1
class	i close ||| dcc	count=1
arg	information dictionary to ||| info	count=1
class	via ||| box dispatcher	count=2
function_arg	serialized arguments [arg_2] ||| [function_1] [arg_2]	count=4
arg	user ||| user filename port resumepos	count=1
module	the server using the ||| internet	count=1
arg	@param groupname the ||| groupname	count=1
function	to the running state ||| running	count=1
module	a new instance of ||| python	count=1
function_arg	[function_1] a c{failure} ||| [function_1] [arg_2]	count=2
class	the ||| log	count=1
function	log formatted log line ||| log	count=1
function	emulate ||| with default	count=1
arg	document @param prefixes dictionary ||| prefixes	count=1
function	information from a ||| fix	count=1
function	connection by sending ||| connection	count=1
module	[module] session ||| [module]	count=2
class	[class] pem-format data ||| private [class]	count=1
function	c{_deprecated_info} flag if any ||| get	count=1
module	local [module_2] ||| [module_2] [module_1]	count=1
function	challenge including the ||| challenge	count=1
class	it ||| dispatcher	count=1
function	lookup ||| lookup text	count=2
module_class	be [class_2] ||| [module_1] [class_2]	count=1
module	[module_1] public ||| [module_1] [module_2]	count=8
function	generate a ||| generate	count=3
arg	value constants the only ||| level	count=1
class	key matches ||| sshpublic key database	count=1
function	a new conversation ||| conversation	count=1
function	xhdr data ||| xhdr request	count=1
module	[module] current cursor ||| [module]	count=2
arg	message sizes into ||| msgs	count=1
function	levels ||| levels	count=1
function	a log prefix for ||| log prefix	count=1
function	[function_1] cache on ||| [function_1] [function_2]	count=1
function	to retrieve [function_2] ||| [function_1] [function_2]	count=2
arg	use as [arg] ||| transport [arg]	count=1
function_arg	an opaque [arg_2] ||| [function_1] [arg_2]	count=2
function	modes ||| modes	count=1
class	smtp ||| smtp	count=1
class	@param ||| record soa	count=1
function	file for ||| file	count=1
function	c{calllater} callback ||| call later	count=1
function	send a i{kexinit} ||| send kex init	count=2
class	connected to ||| connected	count=1
class	time this is unconnected ||| iprotocol	count=1
function	to ||| coerce to filesystem	count=1
function	log prefix for a ||| wrapped log prefix	count=1
arg	into a two-sequence of ||| disp	count=1
module	to local ||| conch scripts	count=2
function	convert ||| to date	count=1
function	a msg_unimplemented ||| ssh unimplemented	count=1
function_arg	[function_1] l ||| [arg_2] [function_1]	count=1
function	frozenset ||| frozenset	count=1
function	log prefix as it ||| log prefix	count=1
function_arg	server endpoint [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	group from [arg_2] ||| [function_1] message [arg_2]	count=1
arg	using the ||| jid password	count=1
arg	l{remotereference} and [arg_2] ||| [arg_2] [arg_1]	count=3
function	manager that a connection ||| connection	count=1
module_class	rename the file ||| mail file	count=1
arg	from the given ||| answers	count=1
function_arg	[function_1] time ||| [arg_2] [function_1]	count=1
class	text lines ||| text message	count=1
function	busy workers as ||| working	count=1
function_arg	[function_1] iterator ||| [arg_2] [function_1]	count=2
class	the ||| process	count=1
function	return its exit ||| get	count=1
module	parent ||| protocols jabber	count=1
module	determine if the authentication ||| conch	count=1
function	[function_1] given stream ||| [function_2] [function_1]	count=3
function	retrieve the unique identifier ||| uid	count=1
class	copy locally ||| copy	count=1
class	implementation of resource resource's ||| name virtual host	count=1
function_arg	serialized arguments [arg_2] ||| [arg_2] [function_1]	count=4
function	with ||| client	count=1
function	associate a ||| setitem	count=1
function	of disconnect callbacks ||| disconnect	count=1
module_class	[module_1] pool this ||| [module_1] httpconnection [class_2] put connection key connection	count=1
function	the date ||| should	count=1
arg	strings to ||| strings	count=1
arg	the consumer for ||| consumer	count=1
arg	determine whether an event ||| event	count=2
function	into the receive bio ||| flush receive bio	count=1
function	represents different ||| ssh	count=1
arg	of the web ||| path reactor	count=1
function_arg	[function_1] progress ||| [arg_2] [function_1]	count=8
function	a pre-built l{servicemanager}, using ||| build	count=1
function	[function_1] header can ||| [function_2] [function_1]	count=1
arg	@param user the ||| user	count=1
function	clientside ||| and observe for	count=2
module	tokens to the ||| protocols	count=1
module	find the ||| conch	count=1
arg	to ||| data	count=1
module_class	[module_1] total ||| [module_1] [class_2]	count=4
arg	protocol header line ||| cls line	count=1
class	connection factory ||| negotiation factory	count=1
function	is ready for ||| read	count=1
function	provider of that interface ||| proxy for interface	count=1
class	in a ||| failure	count=1
arg	port to ||| port	count=1
function	options to ||| options	count=1
arg	to newtopic ||| newtopic	count=1
function	joining to ||| coerce to	count=1
class	child process identified by ||| iprocess transport	count=1
class	c{datetime datetime} instance ||| date time	count=1
arg	[arg_1] and end ||| [arg_1] [arg_2]	count=3
function	add all methods that ||| accumulate methods	count=1
class	this domain by ||| domain	count=1
module	using the incoming ||| conch	count=1
class	[class_1] path ||| [class_1] [class_2] splitext	count=1
module_class	using the resolved ||| internet tcp6client endpoint	count=1
function	the connection by sending ||| connection	count=1
function_arg	directory [arg_2] ||| [function_1] [arg_2]	count=2
class	that the avatar ||| avatar	count=1
function	forcefully abort [function_2] ||| [function_1] [function_2]	count=3
function	to the socket and ||| collect socket	count=2
module_class	[module_1] formatting state ||| [module_1] [class_2]	count=16
function	failure responses to define ||| define failed	count=1
arg	some sort ||| channeltype windowsize maxpacket data	count=2
class	the message ||| mailbox append message	count=1
class	by this l{istreamclientendpoint} provider ||| client endpoint	count=1
function	newly ||| new	count=1
function	the unique identifier ||| get uid	count=1
class	type ||| failure	count=1
module	to [module] request ||| [module]	count=1
class	the key matches ||| key	count=1
class	@param ||| server protocol	count=1
module	if the ||| internet	count=2
arg	incrementally write out a ||| write	count=1
function	ends in a ||| ends in	count=2
function	[function] as ||| deprecate [function]	count=3
class	l{deferredlist} ||| list	count=1
class	given a secured ssh ||| sshcommand client endpoint	count=1
function	the contact ||| contact	count=2
module_class	to the [class_2] ||| [module_1] ssh sshagent [class_2]	count=1
function	[function_1] next public ||| [function_2] [function_1]	count=1
function	to a select ||| select	count=1
function	for use ||| generate	count=1
function	it is running ||| get	count=1
module	the write status of ||| mail	count=1
function	ancillary data with level ||| level	count=1
class	pkey ||| key	count=1
function	for the default domain ||| default	count=1
arg	for the given interface ||| interface default	count=1
arg	for a wrapper ||| wrapper	count=1
function	a deprecated api with ||| replacement string	count=1
arg	testcase the l{testcase} instance ||| testcase expected	count=1
class	changed since ||| log file	count=1
function	to a chat ||| receive chat invite	count=1
arg	c{value} ||| value	count=1
function	value suitable for ||| generate	count=1
function	text data if any ||| text	count=1
function	fix for ||| fix	count=1
function	validate ||| validate	count=2
function	conversation ||| conversation	count=3
module	activate the ||| conch	count=1
function	already been patched by ||| already patched	count=1
function	changed the ||| updated	count=1
function	unjelly [function_2] ||| [function_1] [function_2]	count=7
function	guess the ||| guess	count=1
function_arg	[function_1] err ||| exc info or failure [function_1] [arg_2]	count=1
class	private [class_2] ||| [class_2] [class_1]	count=3
function	to log ||| log	count=3
class	descriptor ||| descriptor	count=2
class	the task completed with ||| message task	count=1
class	file ||| file message	count=1
function	text exhorting ||| replacement string	count=1
arg	get the password ||| password	count=1
arg	an event and ||| event	count=1
class	add ||| local worker amp	count=2
function	emulate ||| get child with default	count=1
class	exposed method with the ||| expose	count=1
arg	message on a socket ||| socket data ancillary flags	count=1
function	start being called ||| start	count=1
function	copying bytes to ||| producing	count=1
function_arg	object @param [arg_2] ||| [arg_2] [function_1]	count=1
function	return a [function_2] ||| [function_1] [function_2]	count=11
function	the sub-messages of this ||| parts	count=1
class	c{path} ||| ftpanonymous shell	count=1
module	pre-built l{servicemanager}, ||| jabber	count=1
arg	if index is ||| index	count=1
function	return the full base ||| get	count=1
class	across all calls to ||| maildir	count=1
class	directories ||| transfer	count=1
function	sub-messages ||| parts	count=1
function	message sent from the ||| message	count=1
class	unconnected from ||| iprotocol factory	count=1
function	tests if a sentence ||| sentence	count=1
class	bind my socket ||| port	count=2
class	remove ||| log publisher	count=1
class	task completed ||| append message task	count=1
class	an infinite [class_2] ||| [class_2] [class_1]	count=2
function_arg	drive a [arg_2] ||| [function_1] [arg_2]	count=4
function	to consider ||| replacement	count=1
function	deprecated api ||| string	count=1
arg	msgs ||| msgs	count=1
function	an [function_1] [function_2] ||| [function_1] [function_2]	count=3
function_arg	a msg_service_accept [arg_2] ||| [arg_2] [function_1]	count=1
function	called for subnegotiations for ||| subnegotiation	count=1
arg	the response [arg_2] ||| [arg_2] [arg_1]	count=2
arg	to a previously ||| requestid	count=1
function_arg	exit a [arg_2] ||| [arg_2] [function_1]	count=1
function	registration on a given ||| update registration	count=1
function_arg	[function_1] a unique ||| [function_1] site [arg_2]	count=1
arg	status line ||| status	count=1
module_class	this contacts ||| words im contacts	count=1
class	bootstrap ||| bootstrap mixin	count=1
module_class	formatting [class_2] ||| [module_1] formatting [class_2]	count=3
class	coerce for ||| coerce	count=1
module	received in the ||| protocols	count=1
class	daylight saving [class_2] ||| [class_2] [class_1]	count=2
function	remember the ||| remember	count=1
function	a connection has been ||| connection	count=1
function	event object [function_2] ||| [function_2] [function_1]	count=2
class	connect ||| wrapper endpoint	count=1
function	of "list modes" ||| maxlist	count=1
function	signal c{signalid} [function_2] ||| [function_1] [function_2]	count=1
function	actual test inside ||| run test	count=1
function	should be ||| should log	count=1
function	restart all processes this ||| restart all	count=1
module	sending ||| ssh	count=1
function	left the given ||| left	count=1
module_class	[module_1] webserver ||| [module_1] [class_2]	count=2
class	initializes a ||| speed	count=1
function	a response [function_2] ||| [function_1] [function_2]	count=1
function	of an l{iresponse} ||| read	count=1
function	[function_1] string in ||| [function_2] [function_1]	count=1
function	offset and size ||| offset and size	count=1
function_arg	unexpected authentication [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	lookup published ||| lookup function functionname	count=1
class	remove ||| deferred	count=1
class	the received [class_2] ||| [class_2] [class_1]	count=8
class	and ||| python path	count=1
class	input file to the ||| file body producer	count=1
class	create a random value ||| credential factory	count=1
function	server endpoint from an ||| server from	count=1
module_class	to this request ||| python request	count=1
function	filenames of messages waiting ||| waiting	count=1
function	the running state this ||| running	count=1
module	the given ||| python	count=3
class	which this structure ||| singlepart message structure	count=1
function	[function_1] file which ||| [function_2] [function_1]	count=1
function	random value ||| generate	count=1
function	clear the [function_2] ||| [function_1] [function_2]	count=1
function	to consider ||| get replacement	count=1
arg	cacerts ||| cacerts	count=1
function	check against ||| check	count=1
module	using the ||| words	count=1
function	stopped either ||| stopped	count=1
function	join a [function_2] ||| [function_2] [function_1]	count=1
arg	relay queue after ||| relay	count=1
function	child with a name ||| child search	count=1
arg	given member to ||| member	count=2
class	task completed ||| message task	count=1
function	coerce a failure [function_1] [function_2] ||| exc info or failure [function_1] [function_2]	count=2
function	accumulate all attributes ||| accumulate	count=1
module	specified set of ||| mail	count=1
function	anonymous cred ||| anonymous	count=1
function	plugin to [function_2] ||| [function_1] [function_2]	count=1
function	pack ||| pack	count=2
module	a context using ||| application	count=1
function	escape some character ||| escape for content	count=1
function	a long response ||| long	count=1
function	a response ||| response	count=2
function	a documentation string describing ||| help	count=1
function	server endpoint ||| parse server	count=1
function	root ||| opt	count=1
class	to the list of ||| list protocol	count=1
class	across all processes ||| maildir name	count=1
module	and their status ||| im	count=1
function	consider it as an ||| get replacement string	count=1
module	my process's ||| internet	count=1
function_arg	from an [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	@param domain [arg_2] ||| [arg_2] [function_1]	count=3
arg	from a response to ||| response	count=1
function	node [function_2] ||| [function_2] [function_1]	count=8
function	text for ||| text	count=1
function_arg	[function_1] a node ||| [function_1] [arg_2] nodeid	count=3
module	about [module] amp ||| [module]	count=1
arg	of the given ||| name	count=1
function	connect to remote address ||| connect	count=1
arg	a node ||| node	count=5
arg	pre-built l{servicemanager}, ||| password	count=1
function	string ||| manager	count=1
function	www-authenticate challenge ||| generate	count=1
class	performing the given ||| itelnet transport	count=1
function	removed ||| remove	count=1
arg	the domain ||| reactor service domain	count=1
function	fetcharticle() ||| get article	count=1
module	the ||| cred	count=1
arg	channel ||| channel key	count=1
function	return no credentials ||| get credentials	count=3
function	received either ||| data received	count=1
function	port [function_2] ||| [function_1] [function_2]	count=1
class	for a particular ||| auth option mixin	count=1
function	or an ||| name	count=1
function_arg	[function_1] [arg_2] ||| [function_1] message [arg_2]	count=9
function	[function_1] [function_2] ||| [function_1] static [function_2]	count=3
function	to remove the ||| remove	count=1
function	chain ||| chain	count=1
module	set up the ||| web	count=2
class	a l{hostnameendpoint} ||| hostname endpoint	count=1
class	setup ||| saslinitiating initializer	count=2
function	[function] received ||| [function]	count=3
module	the file description of ||| internet	count=2
function	the nonce parameter of ||| generate nonce	count=1
module	pre-built l{servicemanager}, ||| words protocols jabber	count=1
function	set another ||| set	count=1
function	reverse ||| reverse log	count=1
arg	datagram to a ||| datagram	count=1
function	to the default appropriate ||| default log observer	count=1
class	@type service l{mailservice} ||| pop3factory	count=1
function	initiate the initialization ||| initialize	count=1
function	for a [function] ||| [function]	count=1
class	be unique across all ||| name generator	count=1
arg	@param user the ||| user channel data	count=1
function	window has been exhausted ||| blocked	count=1
module	to the path ||| conch	count=1
arg	0 or 1 addresses ||| numok addresses	count=1
function	a thread from the ||| to thread	count=1
module_class	this l{deferred} ||| internet deferred	count=1
arg	in with [arg] ||| n [arg]	count=1
function	to this [function_2] ||| [function_1] [function_2]	count=1
function_arg	[function_1] domain to ||| [function_1] [arg_2]	count=1
module	this instance but ||| python	count=1
class	return the ||| writer	count=1
function	of an ||| of	count=1
module_class	get the [class_2] ||| [module_1] [class_2]	count=14
class	a new l{agent} that ||| agent	count=1
function	[function_1] result ||| [function_1] [function_2]	count=4
function	above mapping adding both ||| log level mapping	count=1
module	for a deprecated api ||| python	count=1
arg	the base signing behavior ||| publickey signdata	count=2
function	a dcc [function_2] ||| [function_1] [function_2]	count=7
module_class	[module_1] given ||| [module_1] insults [class_2]	count=2
class	of ||| key	count=1
function	[function_1] the delay ||| [function_1] [function_2]	count=3
module	expiration of the timeout ||| mail	count=1
function	return no [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] sanity of ||| [function_1] [function_2]	count=1
function	type ||| get type	count=1
module	of key ||| python	count=1
function_arg	[function_1] a domain ||| [function_1] answers [arg_2]	count=1
class	string which is intended ||| generator	count=1
function	define command ||| define	count=1
function	rpy file to be ||| script	count=1
function	unix time return ||| get	count=1
arg	called ||| code reason	count=1
arg	issue a query to ||| query	count=1
class	peer ||| itelnet	count=2
function	a chunk ||| chunk	count=1
function	find ||| find	count=2
function_arg	[function_1] following ||| [function_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] range [arg_2]	count=6
function	to a display ||| to	count=1
function	of the display ||| display	count=2
function	formatted log line for ||| log formatter	count=1
function	log line ||| log formatter	count=1
module_class	the exception ||| web failure element	count=1
function	[function_1] chat ||| [function_2] [function_1]	count=2
class	offset from [class_2] ||| [class_1] [class_2]	count=1
function	trust [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] for ||| [function_1] event [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] name [arg_2]	count=4
function	deprecated api with ||| string	count=1
module	and writes ||| web	count=1
function	consider it as an ||| replacement string	count=1
arg	[arg] for ||| [arg] uri headers	count=1
class	authorities to trust ||| authorities	count=1
arg	command was ||| command	count=1
arg	for [arg] ||| [arg]	count=1
module	pythonattribute ||| trial	count=1
function_arg	[function_1] mailbox ||| [function_1] [arg_2]	count=1
class	a box ignoring l{protocolswitched} ||| box dispatcher	count=1
function	[function_1] given header ||| [function_2] [function_1]	count=1
function	post an article with ||| post article	count=1
function_arg	[function_1] mailbox this ||| [function_1] [arg_2]	count=1
function	key exchange [function_2] ||| [function_2] [function_1]	count=1
function_arg	decode the [arg_2] ||| [function_1] [arg_2]	count=3
function	run the test ||| test	count=1
function	it as ||| string	count=1
function	[function_1] stream ||| [function_1] [function_2] streamid data	count=2
function	specific type of ||| specific	count=1
function	groups from the server ||| fetch groups	count=1
function	some polite text ||| get replacement string	count=1
function	property [function_2] ||| [function_2] [function_1]	count=6
class	value suitable ||| digest	count=1
module	in a predetermined list ||| python	count=1
function_arg	[function_1] [arg_2] short response is expected ||| [function_1] short [arg_2] params	count=2
module	buffer at the ||| conch	count=1
module_class	the scheduled call ||| internet idelayed call	count=2
class	[class_1] ssh ||| [class_2] [class_1]	count=6
function	a [function] string ||| dump [function]	count=1
class	different ||| sshserver transport	count=1
class	[class] l{filepath} ||| [class]	count=2
arg	and hashes using the ||| outkey iniv inkey	count=1
class	intended to be ||| name generator	count=1
arg	[arg] prompt ||| [arg]	count=2
function_arg	send response [arg_2] ||| [function_1] [arg_2]	count=2
function	a service for ||| service	count=1
function_arg	[function_1] by importing ||| [function_1] [arg_2]	count=4
class	this port ||| port	count=5
module	with some ||| python	count=1
module_class	to the interpreter ||| conch manhole interpreter	count=1
function	the number of ||| with count	count=1
class	[class_1] resuming ||| [class_2] [class_1]	count=8
function	[function_1] send for ||| [function_1] [function_2]	count=1
function	compare this node to ||| to node	count=1
function	a www-authenticate challenge ||| generate	count=1
function	[function_1] methods ||| [function_1] [function_2]	count=4
module_class	in the queue ||| mail queue	count=3
module	the object it is ||| python	count=1
function_arg	single test [arg_2] ||| [function_1] [arg_2]	count=2
arg	mname see l{record_soa mname} ||| mname rname serial refresh	count=1
class	performing the ||| transport	count=1
module	python path but ||| python	count=1
function	check if the given ||| check	count=1
function	integer gid ||| gid	count=1
function	for public and ||| factory	count=1
function	a message sent ||| message	count=2
class	or create and ||| ui	count=2
function	exit a context using ||| exit	count=1
function	a gsv sentence ||| fix gsv	count=1
function	queue or ||| queue	count=1
class	called when we have ||| ircclient	count=1
function_arg	number as [arg_2] ||| [function_1] [arg_2]	count=1
module	has sent us ||| ssh	count=1
function	@return a combined ||| combined	count=1
module	and return their ||| trial	count=1
class	emit ||| default observer	count=1
function	vt102 control sequence ||| vt102	count=1
function	makes doc ||| doc	count=1
arg	the comparison ||| other	count=1
function_arg	[function_1] err is ||| [arg_2] [function_1]	count=6
arg	the path ||| path	count=3
arg	given queries ||| address queries	count=1
function	protocol to verify ||| verify	count=1
class	data represents ||| netstring	count=1
function	to its ||| adjust	count=1
function	log prefix ||| wrapped log prefix	count=2
module	of the underlying ||| internet	count=1
function	[function_1] and of ||| [function_2] [function_1]	count=1
function	an ||| process	count=1
class	indicate that [class_2] ||| [class_2] [class_1]	count=1
function	[function_1] all ||| [function_1] [function_2]	count=7
function	global detector object to ||| list open fds	count=1
function	methods that begin ||| methods	count=1
function	msg_userauth_info_response the server ||| userauth pk ok keyboard interactive	count=1
function	reference ||| reference	count=1
function	is authorized to receive ||| authorized resource	count=1
function	[function_1] payload of ||| [function_1] [function_2]	count=1
function	called after a ||| made	count=2
class	a datagram ||| connected datagram port	count=1
class	that we ||| itelnet	count=1
function	children to a ||| to xml	count=1
class	string which ||| maildir name generator	count=1
function_arg	[function_1] fp ||| [function_1] [arg_2]	count=4
arg	request but use ||| request	count=1
arg	client side of ||| client	count=1
function	end of the display ||| display end	count=1
function	[function_1] human-readable text ||| [function_2] [function_1]	count=3
class	on the endpoint ||| endpoint service	count=1
function	calculate boolean and ||| boolean and	count=2
class	domain object ||| domain with	count=1
class	[class_1] object ||| [class_1] [class_2]	count=4
function	against the ||| check	count=1
arg	when c{predictates} yield ||| predicates negativeobserver	count=1
function	[function_1] some warnings ||| [function_1] [function_2]	count=2
class	their ||| janitor	count=1
function	via amp invoke ||| remote	count=1
function	install the reactor ||| install	count=1
function	the object ||| deprecated	count=1
module_class	the request ||| web irequest	count=1
arg	domain from [arg_2] ||| [arg_2] [arg_1]	count=1
function	response to ||| response	count=4
module	by the peer ||| conch	count=1
arg	the given [arg] using the ||| [arg]	count=1
rep	the filepath's [function_arg_2] ||| [module_class_1] [function_arg_2]	count=4
function	set a ||| set	count=1
module	read and parse the ||| web	count=1
function	connection is started ||| connection	count=1
function	be allowed to enable ||| enable	count=1
arg	the ||| password	count=1
function	bad requests ||| bad request	count=6
class	match ||| dict client	count=1
module_class	under the [class_2] ||| [module_1] [class_2]	count=2
function	to c{path} ||| to filesystem	count=1
module_class	rename the [class_2] ||| [module_1] [class_2]	count=2
arg	a query ||| query timeout	count=1
class	selectable for ||| win32reactor	count=1
class	l{agent} that will use ||| agent	count=1
function	get a [function_2] ||| [function_2] [function_1]	count=16
module_class	[module_1] l{_newconnectionhelper} ||| [module_1] [class_2]	count=2
function	attributes for drawing ||| attributes	count=1
class	formatting state ||| formatting state	count=2
function	an ipv6 ||| ipv6	count=1
class	the date has changed ||| log file	count=1
arg	when a datagram ||| datagram	count=1
function	subnegotiations ||| unhandled subnegotiation	count=2
function	select and setup ||| set	count=1
function_arg	elements [arg_2] ||| [function_1] [arg_2]	count=6
module_class	[module_1] state has ||| [module_1] formatting [class_2]	count=1
function	l{bucket} corresponding to ||| bucket	count=1
arg	refer to the ||| autologin username password	count=1
function	a local object for ||| local object for	count=1
function	credentials checkers for this ||| credentials checkers	count=1
arg	l{imessagepart} provider ||| main subtype attrs	count=1
class	with the ||| with	count=1
arg	a name to refer ||| autologin username password	count=1
class	indicate that ||| bounce	count=1
function	unhandled ||| unhandled	count=2
class	and moduledict in a ||| python path	count=1
class	log ||| base log	count=2
arg	whatever tests that are ||| recurse	count=1
function	ancillary ||| ancillary	count=1
class	select and setup ||| saslinitiating initializer	count=1
function	polite text ||| get replacement string	count=1
function	[function_1] is received ||| [function_2] [function_1]	count=4
function	write a received ||| received	count=2
function	return an [function_2] ||| [function_1] [function_2]	count=3
arg	next ||| failafterfailures	count=1
function	try to find ||| find	count=1
function_arg	left the [arg_2] ||| [function_1] [arg_2]	count=3
function	log line ||| log	count=1
arg	speed is ||| speed	count=1
function_arg	[function_1] [arg_2] ||| [function_1] imported [arg_2]	count=9
class	which is ||| maildir name generator	count=1
function_arg	[function_1] new l{connectionpool} ||| [function_1] [arg_2]	count=1
function	time ||| time	count=13
class	the certificate authorities to ||| authorities	count=1
function	the the setup method ||| get setup	count=1
arg	tkinter tk() object into ||| widget ms	count=1
module	called [module_2] ||| [module_1] [module_2]	count=1
class	of when this task ||| cooperative task	count=1
function	frames ||| frames	count=1
function	the user ||| get user	count=1
class	value suitable ||| credential	count=1
class	directories ||| file transfer server	count=2
module	information about [module] amp ||| [module]	count=1
class	is unconnected from a ||| iprotocol	count=1
function	object and a c{datetime ||| date and time	count=1
function	[function_1] suitable log ||| [function_2] [function_1]	count=3
class	[class_1] channel fails ||| [class_2] [class_1]	count=2
function	child with a ||| child search	count=1
function	a property [function_2] ||| [function_2] [function_1]	count=6
function	and create ||| create	count=1
arg	transport and connect ||| transport	count=1
arg	domain to connect to ||| service domain factory	count=1
rep	with matching [function_arg_2] ||| [module_class_1] [function_arg_2]	count=1
function_arg	[function_1] be importable ||| [arg_2] [function_1]	count=5
class	this ||| deferred list	count=1
arg	given name as ||| name default	count=1
function	[function_1] the protocol ||| [function_2] [function_1]	count=1
function	pwd ||| pwd get by	count=1
function	convert an ||| jelly to	count=1
function	to getpeer but returns ||| get host	count=1
arg	strports description ||| description factory	count=1
arg	authentication when invoking the ||| auth	count=1
function	construct appropriate records to ||| records	count=1
function	current line buffer ||| line	count=1
module	log observer if ||| python	count=1
function	[function_1] data directory ||| [function_1] [function_2]	count=1
function	python module it ||| module	count=1
function	write a chunk ||| handle content chunk	count=1
module	the name of ||| web	count=1
module	for [module] no ||| [module]	count=1
arg	new l{cooperativetask}, see l{cooperator ||| iterator cooperator	count=1
function	log prefix for ||| log prefix	count=1
function	number for ||| fileno	count=1
arg	chatui the ||| chatui	count=2
class	file size is ||| file	count=1
module	longest time the ||| internet	count=1
function	[function_1] traceback ||| [function_1] brief [function_2]	count=1
arg	a user [arg_2] ||| [arg_1] channel [arg_2]	count=1
class	send bio ||| tlsmemory bioprotocol	count=2
function	regular ||| isfile	count=1
class	called when a ||| ircclient	count=4
class	authentication ||| saslinitiating initializer	count=2
module_class	[module_1] [class_2] ||| [module_1] formatting [class_2]	count=3
function_arg	[function_1] readers ||| [function_1] [arg_2]	count=2
function	strip comments from ||| strip comments	count=1
function	the generator and ||| dhgenerator and	count=2
function	[function_1] protocol configured ||| [function_2] [function_1]	count=1
function	lost ||| lost	count=2
arg	given named ||| name	count=1
function	list of [function] of ||| list dynamic [function]	count=1
class	of the underlying pkey ||| key	count=1
function	partial xml ||| xml	count=1
arg	the dotted quad representation ||| maximumqueries reactor resolverfactory	count=1
function	and the object ||| get	count=1
function_arg	[function_1] object ||| [function_1] [arg_2]	count=2
function	line of the given ||| line	count=1
function	child resource all path ||| child with	count=1
function	process ||| process ended	count=2
function	and puts method names ||| method names to dict	count=1
function	add additional [function_2] ||| [function_2] [function_1]	count=4
class	l{callremote}, with ||| box dispatcher	count=1
class	the connection factory ||| negotiation factory	count=1
class	@param ||| log observer	count=3
function	portal [function_2] ||| [function_2] [function_1]	count=2
module	is ||| news	count=1
function	should enable [function] conversion ||| should enable [function]	count=2
function	type may [function_2] ||| [function_2] exchange message [function_1]	count=1
function	were imported and ||| imported	count=1
class	token ||| mem cache protocol	count=1
function	the host that this ||| host	count=1
class	a transport is connected ||| abstract datagram protocol	count=1
class	buffer ||| buffer	count=1
function_arg	[function_1] published ||| [arg_2] [function_1]	count=1
function	that stream ||| stream	count=1
function	the last ||| append	count=1
class	initializes ||| base speed	count=2
function	a msg_unimplemented ||| unimplemented	count=1
module	jabber ||| words protocols jabber	count=1
class	archive ||| archive	count=4
class	stop ||| wx reactor	count=1
function	set using ||| set	count=1
function	log observer for the ||| log observer	count=1
class	path on ||| path	count=2
function	all of the sub-messages ||| parts	count=1
function	remove the active handle ||| stop reading and writing	count=1
class	of a ||| digest credential	count=1
module	it to the ||| conch	count=1
class	c{*args}, and ||| resolver	count=1
class	of the underlying ||| public	count=1
rep	the response [function_arg_2] ||| [module_class_1] [function_arg_2]	count=1
function	modules present ||| iter modules	count=1
function	all children to a ||| to	count=1
arg	given set of observers ||| observers	count=1
arg	specified text ||| text	count=1
class	alias and return a ||| alias	count=1
function	polite text ||| replacement string	count=1
arg	show ||| authtype	count=1
function_arg	[function_1] text ||| [function_1] [arg_2]	count=4
function_arg	[function_1] method for ||| [arg_2] [function_1]	count=2
module	using this ||| application	count=1
module_class	[module_1] terminal ||| [module_1] [class_2]	count=12
class	[class_1] transfer-encoding ||| [class_2] [class_1]	count=2
function	certificate ||| get	count=1
class	return ||| sshuser auth client	count=2
arg	person ||| person	count=2
function_arg	[function_1] to c{message} ||| [function_1] [arg_2]	count=7
module	[module] last ||| [module]	count=1
function	send response ||| send response	count=2
arg	username ||| username	count=3
function_arg	[function_1] id a ||| [function_1] [arg_2]	count=1
module	make the ||| conch	count=1
function	deferred [function] indicating this ||| exec [function]	count=1
rep	the line [function_arg_2] ||| [module_class_1] [function_arg_2]	count=1
class	test has run ||| test	count=1
module	is ||| python	count=2
function_arg	function [arg_2] ||| [function_1] [arg_2]	count=2
class	[class_1] descriptor ||| [class_2] [class_1]	count=5
class	[class] in the ||| [class]	count=3
function	'message' is successfully posted ||| post	count=1
module	which [module] l{response} ||| [module]	count=1
class	from the input file ||| file body producer	count=1
arg	[arg_1] end from ||| [arg_1] [arg_2]	count=3
class	remove ||| poll reactor	count=2
function_arg	[function_1] [arg_2] ||| [function_1] tcp port [arg_2]	count=12
function	execute a ||| run	count=1
function	[function] in this ||| [function]	count=1
function	that we ||| wont	count=1
function	method names ||| add method names	count=1
function	the given client protocol ||| client	count=1
function_arg	[function_1] channel ||| [arg_2] [function_1]	count=6
function	channel of ||| get channel	count=2
function_arg	[function_1] for operating ||| [function_1] [arg_2]	count=3
function	receiver to pass ||| receiver	count=1
arg	[arg_1] a file ||| [arg_2] [arg_1]	count=2
function	has received a chunk ||| chunk	count=1
function_arg	[function_1] look up ||| [arg_2] [function_1]	count=1
function	digest hash ||| digest	count=1
arg	connects a given ||| protocol maxpacketsize	count=1
arg	to another user ||| user filename	count=1
function	in the ||| is in	count=1
function	to this group from ||| group	count=1
function	[function_1] [function_2] of these may ||| [function_2] [function_1]	count=2
function	of bytes ||| length	count=1
function	to ||| add	count=2
function	wrap [function] ||| proxy [function]	count=1
class	this event ||| event	count=1
class	c{path} ||| ftpshell	count=1
module_class	the [class_2] ||| [module_1] threaded select [class_2]	count=2
class	avatar ||| avatar	count=1
arg	scheme [arg_2] ||| [arg_2] [arg_1]	count=5
class	been ||| queue	count=1
arg	header from the server ||| header	count=1
function	header tuple to ||| to	count=1
function	the read connection ||| read connection lost	count=2
module	the content of ||| protocols	count=1
function	c{datetime ||| date	count=1
class	print ||| tree reporter	count=2
function	is in the known_hosts ||| is in known hosts	count=1
function	string ||| from string	count=3
module	[module] object ||| [module]	count=1
module	the line this ||| web	count=1
class	basename ||| file path	count=1
function	children to a string ||| to	count=1
class	processes ||| name	count=1
function	to ||| cacerts to	count=1
function	retrieve several different fields ||| fast	count=1
module	c{_deprecated_info} flag if ||| python	count=1
function	it as an ||| get replacement	count=1
function	c{address} via the supplied ||| reply	count=1
class	the initialization ||| feature	count=1
function	payload of ||| payload	count=1
module_class	[module_1] producer ||| [module_1] [class_2]	count=7
function	and return [function_2] ||| iencoding resource [function_1] [function_2]	count=3
function	push a ||| push	count=1
function	a snapshot of all ||| get snap shot	count=1
function	loopback ||| loopback	count=2
module	the server-dtp to accept ||| protocols	count=1
arg	occurred in ||| failure	count=1
function_arg	a chat room ||| chat shortname	count=1
module	log out the ||| conch	count=1
arg	exitcode the exit ||| exitcode	count=1
class	the child process identified ||| iprocess transport	count=1
module	the same integer value ||| conch	count=1
function_arg	[function_1] fd with ||| [function_1] [arg_2]	count=1
class	to be unique ||| maildir name generator	count=1
module	[module] c{raw} ||| [module]	count=3
function	io completion port ||| do iteration	count=1
function	an ||| force stop	count=1
arg	message is ||| message protocol address	count=4
function	the key ||| verify key	count=1
function	module to use ||| module	count=1
class	the channel ||| channel	count=1
class	the message as ||| append message	count=1
function	name ||| get method name	count=1
function	api with ||| replacement	count=1
arg	a file @type file ||| file	count=1
class	resource resource's ||| name virtual host	count=1
function	of bytes received either ||| data received	count=1
function	deferred to indicate ||| fail	count=1
function	connection to ||| connection	count=3
function	string ||| build service	count=1
arg	[arg] l{serialnumber} ||| [arg]	count=1
class	an ||| factory	count=1
function	the auth state ||| state auth	count=2
function	request handler ||| request	count=1
class	next ||| file	count=1
function	[function_1] application based ||| [function_1] [function_2]	count=2
arg	a string representing ||| cls string	count=1
function	expected [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] physical ||| [function_1] address [arg_2]	count=1
function	query and return the ||| run query	count=1
function	an exception [function_2] ||| [function_1] [function_2]	count=4
function_arg	[function_1] _switchbox with ||| [arg_2] [function_1]	count=1
module	a password ask the ||| conch ssh	count=1
class	remote ||| remote cache	count=1
arg	refer ||| autologin username password	count=1
function	[function_1] stream ||| [function_2] [function_1]	count=9
arg	message to a ||| message length	count=2
function	a processor for ||| processor	count=1
function_arg	not [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] bytes ||| [function_2] [function_1]	count=1
function	if two [function] are passed ||| [function]	count=1
class	mailbox change listener ||| imailbox imap	count=1
module_class	[module_1] connection and ||| [module_1] [class_2]	count=8
class	list of current l{filedescriptor} ||| glib reactor base	count=2
module	the name ||| web	count=1
class	from ||| nntpclient	count=1
function	a query to ||| query	count=1
arg	[arg_1] and uri ||| [arg_2] [arg_1]	count=1
class	bucket ||| bucket	count=1
class	connected to ||| connected transport	count=1
arg	either for reading ||| source primary other primaryflag	count=1
function	with some warnings suppressed ||| with warnings suppressed	count=2
class	for sending messages via ||| box dispatcher	count=1
class	c{self frame} ||| fragment element	count=2
class	log observer ||| history log observer	count=1
arg	exchange server cannot ||| relay	count=1
module	and store this ||| web	count=1
arg	the euid ||| euid	count=1
function	[function_1] plugin ||| [function_2] [function_1]	count=1
function	the topic ||| topic	count=1
function	current sentence ||| clean current sentence	count=2
arg	using this pidfile ||| exctype excvalue traceback	count=1
class	is already listening ||| stream server	count=1
function	create a query ||| query	count=1
arg	user the ||| user	count=1
function	that no ||| no more	count=4
function	[function] this ||| [function]	count=2
function	child of this ||| child	count=1
function	diffie-hellman generators and primes ||| primes	count=1
module	intended to be unique ||| mail	count=1
arg	comparison of the ||| other	count=1
class	unix this is ||| unix	count=1
arg	a client protocol to ||| protocol maxpacketsize mode	count=1
class	encode ||| dir dbm	count=1
function	create a response ||| response	count=2
class	my connections has died ||| ptyprocess	count=1
function	in the known_hosts ||| in	count=1
function_arg	[function_1] connection ||| [function_1] [arg_2]	count=1
module	pointing at ||| python	count=1
function	an [function] server ||| connect [function]	count=1
class	given ||| isftpserver	count=1
function_arg	[function_1] [arg_2] ||| [function_1] with patches [arg_2]	count=7
class	get ||| list mailbox	count=1
function	the generator ||| dhgenerator	count=1
module_class	[module_1] c{deferred} ||| [module_1] [class_2]	count=2
function	with some [function_2] ||| [function_2] [function_1]	count=4
function	send window ||| window	count=1
function	throw the ||| throw	count=1
module	the body of this ||| web	count=1
class	log observer ||| limited history log observer	count=1
class	when this task is ||| cooperative task	count=1
function	long response is ||| long	count=1
function	send a response ||| send	count=1
module	given ||| conch	count=1
class	and setup authentication ||| saslinitiating	count=1
function_arg	convert a [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	success [arg_2] ||| [function_1] [arg_2]	count=1
arg	given [arg] using the ||| [arg]	count=1
arg	l{gitcommand} if the directory ||| directory	count=1
function	deferred has been canceled ||| cancel get	count=1
function	attribute ||| module attribute	count=1
module_class	[module_1] text ||| [module_1] [class_2]	count=8
function	the attribute name ||| name	count=1
arg	matching [arg] regardless ||| list [arg]	count=1
module_class	a [module_1] [class_2] ||| [module_1] [class_2]	count=2
function	getxheader() ||| xheader	count=1
arg	id a [arg_2] ||| [arg_2] [arg_1]	count=1
function	removes our [function] ||| [function]	count=1
function	file for ||| monitor file	count=1
arg	tests that are ||| recurse	count=1
function	calculate boolean or ||| boolean or	count=2
arg	function c{f} with the ||| f	count=1
arg	be returned to ||| nonce clientip	count=1
arg	a strports description ||| description	count=1
module_class	and the [class_2] ||| [module_1] [class_2]	count=3
function	for a ||| for	count=2
arg	[arg] bio ||| [arg]	count=1
class	random value suitable ||| credential	count=1
arg	reconnecting ||| reconnecting	count=1
function	the unique validity identifier ||| uidvalidity	count=1
arg	specified ||| i	count=1
class	this port [class_2] ||| [class_2] [class_1]	count=4
class	build news for ||| news builder	count=1
function	[function] 4-tuples ||| [function]	count=5
function_arg	xhdr data [arg_2] ||| [arg_2] [function_1]	count=1
function_arg	c{inode} [arg_2] ||| [arg_2] [function_1]	count=2
function	the user ||| get replacement string	count=1
class	alias to ||| address alias	count=1
class	the pop3 ||| factory pop3	count=1
class	kill [class] ||| [class]	count=2
function	[function_1] success to ||| [function_2] [function_1]	count=2
function	children that ||| children	count=1
function	a msg_userauth_success the ||| ssh userauth success	count=1
function	of the group to ||| group	count=1
function	[function_1] the process ||| [function_2] [function_1]	count=2
arg	over it ||| username	count=1
function_arg	msg_disconnect message [arg_2] ||| [arg_2] [function_1]	count=1
function	module to ||| module	count=1
arg	convert a failure ||| failure	count=1
function	address ||| get host	count=2
function	kicked ||| kicked	count=2
arg	a given ||| protocol	count=1
function	the welcome from the ||| irc rpl welcome	count=1
function	the currently selected ||| fetch	count=3
arg	of observers ||| observers discardbuffer redirectstandardio	count=1
function	exteneded [function_2] ||| [function_1] [function_2]	count=1
function	an iterator over all ||| iter	count=2
module	copy of this ||| python	count=1
class	across all processes ||| name generator	count=1
function	api with some polite ||| string	count=1
function	result or raise l{illegalserverresponse} ||| or raise	count=1
arg	the comparison of ||| other	count=1
arg	newnick ||| newnick	count=1
class	waiting l{deferred}, ||| read	count=1
module	to the ||| conch ssh	count=5
class	underlying [class] and issue ||| deprecated [class]	count=1
function	[function_1] messages which ||| [function_1] [function_2]	count=1
function	the c{_deprecated_info} flag if ||| get	count=1
arg	python objects and ||| objects	count=1
function	pwd ||| pwd get	count=1
arg	of the given transport ||| class transport	count=1
class	string ||| janitor	count=1
class	peer should be allowed ||| itelnet protocol	count=1
class	or create and ||| chat ui	count=2
arg	object as a ||| obj	count=1
function	whether the user-space send ||| is send	count=2
function	host ||| host	count=5
class	cookie [class_2] ||| [class_2] [class_1]	count=1
arg	c{query} possibly more ||| lastsequenceid	count=1
function	a ||| deprecated	count=2
arg	element [arg_2] ||| [arg_2] [arg_1]	count=1
module_class	[module_1] structure ||| [module_1] [class_2]	count=3
module	some ||| python	count=1
class	to proxy ||| proxy	count=1
function	add an endpoint to ||| add endpoint	count=1
class	single ||| tuntap	count=1
class	challenge ||| digest credential	count=1
class	the request to execute [class_1] [class_2] the c{commandconnected} deferred ||| conch [class_1] [class_2] exec	count=1
arg	called when a datagram ||| datagram	count=1
class	issue a ||| resolver	count=1
function	a string key for ||| flat key	count=1
arg	a logical url ||| logicalurl physicalurl	count=1
function	to this handle ||| to handle	count=3
function	number as a ||| number	count=1
function	enable [function] ||| should enable [function]	count=2
arg	client protocol to ||| protocol maxpacketsize	count=1
module	use as ||| cred	count=1
class	[class] address for ||| [class]	count=1
class	@param ||| logging observer	count=1
function	the flags of one ||| flags	count=1
function_arg	test method ||| test method	count=2
module_class	[module_1] start ||| [module_1] [class_2]	count=1
function	[function_1] a file ||| [function_1] [function_2]	count=2
class	l{mailservice} ||| pop3factory	count=1
function	body data is ||| body data	count=1
function	[function_1] modules and ||| [function_2] [function_1]	count=1
function_arg	exteneded data [arg_2] ||| [function_1] [arg_2]	count=1
function	timeout policy ||| policy	count=1
arg	a byte ||| strio	count=1
arg	the given ||| format	count=3
class	this domain ||| domain	count=5
arg	file ||| file contextfactory	count=1
arg	using a username ||| username	count=1
class	print 'message' in ||| tree	count=1
arg	a deprecated [arg] ||| module [arg] version	count=1
class	side ||| sshconnection	count=2
arg	which cannot ||| relay	count=1
function	[function_1] of supported ||| [function_1] [function_2]	count=1
function_arg	[function_1] overrides ||| [function_1] [arg_2]	count=1
class	stream ||| component authenticator	count=1
function	cause keypad ||| keypad mode	count=1
function	protocol [function_2] ||| [function_1] [function_2]	count=1
class	[class_1] monitoring ||| [class_1] [class_2]	count=4
module	integer out [module] multiple precision ||| [module]	count=1
module	the frames in the ||| web	count=1
function_arg	send extended [arg_2] ||| [function_1] [arg_2]	count=1
class	map this alias ||| address alias	count=1
module_class	[module_1] console ||| [module_1] [class_2]	count=11
arg	[arg_1] the name ||| [arg_2] [arg_1]	count=2
class	for use as the ||| digest credential	count=1
function	hash of the identifier ||| hash	count=1
module	the ssh ||| conch ssh	count=2
function	is trying to resume ||| resume	count=1
function	success in the ||| success	count=1
module	returns an l{ipv4address} ||| internet	count=1
arg	or utf-8 byte data ||| data	count=1
function_arg	write some [arg_2] ||| [arg_2] [function_1]	count=4
function	given client ||| client	count=1
arg	[arg_1] host ||| value [arg_1] [arg_2]	count=1
function	changed the [function_2] ||| [function_2] [function_1]	count=4
function	rotate when the date ||| rotate	count=1
module	if it ||| python	count=1
function_arg	initialize with [arg_2] ||| [function_1] [arg_2]	count=9
function	number in the ||| number	count=1
arg	l{none} ||| maybereactor	count=1
class	what protocol ||| protocol	count=1
function	[function_1] which arguments ||| [function_1] displayable [function_2]	count=1
function	arguments ||| make arguments	count=1
function_arg	[function_1] mbox ||| [function_1] [arg_2]	count=1
arg	@param digesthash ||| digesthash	count=1
class	parses partial ||| nmeaadapter	count=1
function	with [function_2] ||| [function_2] [function_1]	count=7
function	when the child process ||| process	count=3
function	has been ||| cancel get	count=1
function	create ||| make	count=1
function	of a ||| not	count=1
function	stop listening on this ||| stop listening	count=1
class	a path ||| path	count=2
function	any of the ||| get	count=1
class	regardless of the ||| iconnector	count=1
function	[function] to the ||| [function]	count=3
arg	look up and deliver ||| portonserver portonclient	count=1
module	for a [module] ||| [module]	count=4
function	system's filesystem ||| filesystem bytes	count=1
function	keep a clientside ||| and observe for	count=1
class	for it to ||| resolver	count=1
class	a transport is ||| abstract datagram	count=1
function	[function_1] protocol ||| [function_2] [function_1]	count=2
function	make a copy ||| copy	count=2
class	[class] one ||| [class]	count=1
function	running ||| running	count=2
function	the ||| get	count=7
function	events to ||| replay to	count=1
class	signal handlers should be ||| signal	count=1
function	create a [function_2] ||| [function_1] [function_2]	count=4
class	[class_1] [class_2] into a pair c{ ||| [class_1] [class_2] splitext	count=1
function	the delay ||| delay	count=1
class	adapter for the ||| componentized	count=1
module_class	the underlying [class_2] ||| [module_1] [class_2]	count=3
class	socksv4 packet ||| socksv4	count=1
module	the next message added ||| mail	count=1
module	this is a ||| python	count=2
function	an rpy file to ||| script	count=1
arg	message originates ||| helo origin	count=3
class	this structure object reports ||| singlepart message structure	count=1
module_class	[module_1] [class_2] ||| [module_1] hashed [class_2]	count=1
class	signal handlers should ||| signal	count=1
class	string ||| maildir	count=1
function_arg	[function_1] packed 128-bit ||| [arg_2] [function_1]	count=1
function	some polite text exhorting ||| replacement string	count=1
function	convert to a ||| to message	count=1
module	the content of c{self ||| web	count=1
function	the user to ||| get	count=1
function	normal prefix to ||| prefix	count=1
arg	[arg_1] l{record_afsdb hostname} ||| [arg_2] hostname [arg_1]	count=1
function	an ||| force	count=1
function	and yield in ||| lines	count=1
function	ip address ||| get host	count=1
arg	top ||| top	count=1
function	deprecated api with ||| get replacement string	count=1
function	a ||| get	count=5
class	l{bytes} ||| alias	count=1
class	user ||| ftprealm	count=1
class	response to a ||| httpclient	count=1
function	[function_1] l{ipv6address} indicating ||| [function_1] [function_2]	count=1
function	when a connection is ||| connection	count=5
function	@return the [function_1] [function_2] in the response body ||| [function_2] [function_1]	count=1
arg	and client ||| client port	count=2
function	threadpool ||| thread pool	count=1
arg	[arg_1] and client ||| [arg_2] [arg_1]	count=1
module	when the test ||| trial	count=1
function	connection to the mail ||| no connection	count=1
function	cache ||| cache	count=3
class	etc ||| maildir name	count=1
function	[function_1] on to ||| [function_2] [function_1]	count=1
function	windows error ||| format error	count=1
module	up the ||| trial	count=1
function	text data ||| text	count=1
module	for a ||| python	count=1
class	[class_1] certificate to ||| [class_1] [class_2]	count=4
module	the given value is ||| python	count=1
function	a channel [function_2] ||| [function_2] [function_1]	count=4
function	decoded from an ||| from	count=1
function	called when the service ||| service	count=1
function	name into a function ||| function	count=1
function	lookup ||| lookup service	count=2
arg	c{query} ||| lastsequenceid	count=1
function	instance of pythonmodule ||| name	count=1
arg	event ||| event	count=3
arg	a given fd filtering ||| fd	count=1
arg	factory factory ||| factory	count=1
function	[function_1] mac ||| [function_2] [function_1]	count=1
function	list of credentials ||| list credentials	count=1
function	body data ||| body data finished	count=2
function_arg	install [arg_2] ||| [function_1] [arg_2]	count=1
arg	mailbox ||| mailbox	count=1
function	and add [function_2] ||| [function_2] [function_1]	count=1
function	directory ||| directory	count=10
function	log line for ||| log formatter	count=1
class	the wrapped web context ||| current policy	count=1
function	[function_1] for outgoing ||| [function_2] [function_1]	count=2
function_arg	kicked from [arg_2] ||| [function_1] [arg_2]	count=1
module_class	the test run ||| trial ireporter	count=1
arg	client protocol to a ||| factory	count=1
function	data of message ||| mail data	count=2
function	[function_1] names ||| [function_2] [function_1]	count=7
module	the running ||| conch	count=1
arg	l{httpclientparser} to indicate ||| rest	count=1
function	authorized keys that are ||| get authorized keys	count=1
class	indicate ||| itelnet transport	count=2
function_arg	person for [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	turns [function_1] [arg_2] ||| positioning nmeaadapter [function_1] float [arg_2]	count=1
function	return a [function_2] ||| [function_2] [function_1]	count=13
function	using content-length ||| producer content length	count=1
arg	scheme host [arg_2] ||| value [arg_1] [arg_2]	count=2
function	get the private ||| get private	count=3
class	securing ||| iopen sslcontext	count=1
function	return ||| get description	count=2
arg	[arg_1] and port ||| value [arg_1] [arg_2]	count=3
function	[function_1] private part ||| [function_1] [function_2]	count=1
function_arg	from an [arg_2] ||| [function_1] box [arg_2]	count=1
function	policy for ||| policy	count=1
class	secured ||| endpoint	count=1
function_arg	xml [arg_2] ||| [function_1] [arg_2]	count=2
class	for in this mailbox ||| imailbox imapinfo	count=1
function	create a certificate request ||| certificate request	count=1
class	the ||| deferred queue	count=2
arg	declare a module-level ||| version message modulename name	count=1
function	executing ||| responder	count=1
class	authentication ||| sshuser auth	count=1
class	c{float} param [class] intervals ||| [class]	count=1
arg	at archivepathname as a ||| archivepathname	count=1
module	part are [module] following order ||| [module]	count=1
module	string which is intended ||| mail	count=1
module	syspath and ||| python	count=1
function	representation of the cipher ||| repr	count=1
arg	checks to ||| pubkey options	count=1
class	proxy has been stopped ||| proxy	count=3
class	running service ||| sshtransport	count=1
function	to close [function_2] ||| [function_1] [function_2]	count=1
function	specified then run the ||| run	count=1
class	this domain ||| abstract maildir domain	count=1
class	both ends ||| fdwaker	count=1
module	for the ||| internet	count=1
module_class	[module_1] userauth ||| [module_1] ssh [class_2]	count=1
module	the c{_deprecated_info} ||| python	count=1
arg	[arg_1] l{record_afsdb hostname} ||| [arg_2] [arg_1]	count=3
module	indicate that we will ||| conch	count=1
function	object and a c{datetime ||| date	count=1
arg	and end from ||| end	count=1
class	factory ||| basic credential factory	count=1
function_arg	received bytes to ||| received bytes	count=1
module	of my ||| internet	count=1
function	the process ends ||| process	count=1
module	a ||| words protocols	count=1
function	possible and render it ||| render	count=1
function	c{_deprecated_info} flag if ||| deprecated	count=1
function_arg	switch this [arg_2] ||| [function_1] to [arg_2]	count=1
arg	the given mode ||| mode	count=1
function_arg	[function_1] method ||| [arg_2] [function_1]	count=10
function	configure a service ||| service	count=1
class	entry in a known_hosts ||| entry	count=1
module_class	[module_1] l{deferred} ||| [module_1] [class_2]	count=6
class	amp invoke it ||| box	count=1
function	receive bio ||| flush receive bio	count=2
function	is authorized to ||| authorized	count=1
function	[function_1] a dcc ||| [function_2] [function_1]	count=8
function	connection to the ||| notify no connection	count=1
function	verified and accepted a ||| do accept	count=1
function	[function_1] time} object ||| [function_2] [function_1]	count=8
arg	specified path ||| path	count=3
class	c{self frame} and ||| fragment element	count=2
function	line input and return ||| get	count=1
function_arg	method associated [arg_2] ||| [function_1] [arg_2]	count=1
function	identity for public-key ||| opt identity	count=1
function	reply to a ecdh ||| ecdh reply	count=1
arg	the name of the ||| name	count=1
class	file from ||| file path	count=1
function	it ||| get deprecated	count=1
function	position is received ||| position received	count=3
function	invoke it ||| call	count=1
class	[class] pem-format ||| private [class]	count=1
class	an nmeaprotocol ||| nmeaprotocol	count=1
arg	a channel ||| params	count=1
module_class	mean several different messages [module_1] [class_2] ||| [module_1] [class_2]	count=4
module	to ||| mail	count=2
module	to the path it ||| conch	count=1
function_arg	create [arg_2] ||| [function_1] [arg_2]	count=6
class	factory that ||| factory	count=1
class	[class_1] known files ||| [class_2] [class_1]	count=6
module	cursor down ||| insults	count=1
arg	a strports description into ||| description factory	count=1
function	list of possibly available ||| help reactors	count=1
function	[function_1] socket ||| [function_1] [function_2]	count=1
function	with a basename ||| sibling	count=1
function	to identify [function] messages related ||| [function]	count=1
function	cursor to the end ||| end	count=1
module_class	the l{tcp6serverendpoint} ||| internet tcp6server	count=1
function	[function_1] hard ||| [function_2] [function_1]	count=4
class	a random value ||| credential	count=1
module_class	this [class_2] ||| [module_1] traffic logging [class_2]	count=1
function	old ||| set old	count=1
arg	define behavior ||| message addr	count=2
class	salt host ||| hashed entry	count=1
class	object ||| key	count=1
function	[function_1] user-space send ||| [function_2] [function_1]	count=4
function_arg	[function_1] payload : ||| [function_1] adjust [arg_2]	count=1
function_arg	decode [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	do the [arg_2] ||| [arg_2] [function_1]	count=3
module	select and setup authentication ||| words protocols jabber	count=1
function	endpoint factory [function_2] ||| [function_2] [function_1]	count=2
module	back if the ||| conch	count=1
module	available after the ||| web	count=1
class	authorized keys and ||| database	count=1
arg	objs l{list} ||| objs	count=1
function	in the child ||| child	count=1
arg	a unique ||| uid	count=1
arg	reconnecting subclasses should ||| reason reconnecting	count=1
class	is listening for ||| ilistening	count=1
arg	queue ||| queue	count=1
module	when ||| conch ssh	count=1
arg	exchange server cannot be ||| relay	count=1
function	[function_1] has failed ||| [function_1] [function_2]	count=1
class	this task is complete ||| task	count=1
class	information ||| information	count=1
function	minutes seconds tuple ||| minutes seconds	count=1
function	into [function_2] ||| [function_2] [function_1]	count=1
function	is closed ||| closed	count=1
function	received a msg_userauth_success the ||| ssh userauth success	count=1
function	monkey patch an ||| patch	count=1
function_arg	this option ||| remote option	count=1
function	close ||| lose	count=2
class	if possible launch relayers ||| smart host smtprelaying	count=1
function	non-ascii ||| uri	count=1
class	the lock ||| lock	count=2
class	file monitoring [class_2] ||| [class_1] [class_2]	count=1
module_class	return the values of [module_1] [class_2] ||| [module_1] [class_2]	count=2
class	this charstr ||| charstr	count=1
function	query and return ||| query	count=1
function	notify all pending requests ||| ignore and cancel connect waiters	count=1
function_arg	its underlying l{_url} ||| url cls urlinstance	count=1
arg	when a datagram is ||| datagram	count=1
arg	communicate with ||| startthread	count=1
arg	cannot be issued ||| _ reason	count=1
module_class	[module_1] conversation and ||| [module_1] [class_2]	count=3
function	successfully posted ||| post request	count=1
module	observer if it cannot ||| python	count=1
function	a git repository ||| repository command	count=1
function	connection ||| no connection	count=1
function	prepare to deliver any ||| deliver body	count=1
class	same ||| request interface	count=1
function	authorized to ||| authorized resource	count=1
function	the normal prefix ||| log prefix	count=1
class	this observer will forward ||| log observer	count=1
arg	iterator to the list ||| iterator donedeferred	count=1
function	has verified and accepted ||| do accept	count=1
function_arg	[function_1] me ||| [function_1] [arg_2]	count=4
function	[function_1] method ||| [function_1] [function_2]	count=3
class	display my syspath ||| path	count=1
function_arg	[function_1] [arg_2] ||| [function_1] response [arg_2]	count=3
function	throw the [function_2] ||| [function_2] [function_1]	count=5
function	remove all selectables and ||| remove all	count=2
function	to ||| append	count=1
class	unixtime to year ||| daily log	count=1
function	forcefully abort the connection ||| abort connection	count=1
function_arg	[function_1] overrides any ||| [arg_2] [function_1]	count=1
arg	the client side of ||| client	count=1
function	the last access ||| access time	count=1
arg	authentication when ||| auth	count=1
function	sent ||| sent mail	count=2
function_arg	received [arg_2] ||| [arg_2] [function_1]	count=9
function	of responding to bad ||| respond to bad	count=1
function	bad ||| bad	count=3
function	listen} to listen ||| listen	count=1
class	build ||| local worker amp	count=1
module	[module] no more ||| [module]	count=1
arg	constructs ||| password	count=1
function	satellite information from a ||| fix	count=1
class	transport ||| transport	count=2
function	return the original handler's [function_1] [function_2] ||| thread fdwrapper [function_1] [function_2]	count=4
function	in the send window ||| window	count=1
function	to acquire the ||| acquire	count=1
arg	reconnecting subclasses should ||| connector reason reconnecting	count=1
arg	checks ||| pubkey options	count=1
arg	this l{team}; that is ||| createworker logexception	count=1
function_arg	replace [arg_2] ||| [arg_2] [function_1]	count=2
class	a retry attempt ||| machine	count=1
function_arg	failure to [arg_2] ||| [function_1] [arg_2]	count=1
function	pre-built ||| service manager	count=2
function	a msg_newkeys message no ||| ssh newkeys	count=2
arg	function ||| func	count=1
arg	whatever tests that are ||| thing recurse	count=1
function	amp invoke ||| call	count=1
function_arg	[function_1] reactor and ||| [arg_2] [function_1]	count=4
function_arg	[function_1] c{failure} with ||| [function_1] [arg_2]	count=3
function	generator ||| generator	count=1
arg	the url path ||| path	count=1
arg	[arg_1] port to ||| [arg_2] factory backlog [arg_1]	count=2
function	line [function_2] ||| [function_2] [function_1]	count=3
arg	whatever tests ||| recurse	count=1
class	a secured [class_2] ||| [class_2] [class_1]	count=2
class	the xmlstream ||| listen authenticator	count=1
class	the test [class_2] ||| [class_1] [class_2]	count=1
function	we receive a msg_unimplemented ||| ssh unimplemented	count=1
function	finish [function_2] ||| [function_2] [function_1]	count=1
class	a runnable ||| open sslcipher	count=1
function	the size of ||| size	count=4
class	since last ||| log file	count=1
function	list of method names ||| method names	count=1
module	convert any path to ||| conch	count=2
function	quick and ||| and disconnect	count=3
class	[class] appearing on ||| zsh [class]	count=3
module	a predetermined ||| python	count=1
class	processes reboots ||| name	count=1
module	get a new ||| names	count=1
function	open ||| open for	count=2
arg	object using this object ||| obj	count=1
function	user to consider it ||| replacement	count=1
class	is intended ||| generator	count=1
function	convert ||| jelly to	count=1
function	given host key ||| host key	count=2
function	as the nonce parameter ||| nonce	count=1
arg	topic to a user ||| user channel topic author	count=1
class	test ||| synchronous test case	count=1
class	initialize ||| datagram port	count=1
class	all processes reboots ||| maildir name generator	count=1
function	called ||| fetch	count=1
function	a processor for files ||| opt processor	count=1
function	from the float ||| from	count=1
function	the prefix length ||| prefix	count=1
class	of the underlying ||| public key	count=1
arg	a failure to ||| failure	count=1
arg	the other wisde wanted ||| result localchannel	count=1
function	a c{datetime [function_2] ||| [function_2] [function_1]	count=2
class	factory was ||| credential factory	count=1
function_arg	[function_1] cacerts the ||| [function_1] [arg_2]	count=1
arg	and then asking ||| cls	count=1
function	temporary file to hold ||| temp file	count=1
function	way of responding to ||| respond to	count=1
arg	[arg] check ||| [arg]	count=2
class	in [class_2] ||| [class_2] [class_1]	count=2
class	a string which ||| maildir	count=1
class	create ||| amp list	count=1
class	to ||| resolver	count=2
function	a l{bucket} corresponding to ||| get bucket	count=1
function	chunks ||| make chunks	count=1
function	me an ao i'll [function_1] [function_2] representation ||| [function_1] [function_2]	count=1
function	receive a msg_kexinit message ||| ssh kexinit	count=1
module	return a number of ||| python	count=2
function	[function_1] request failed ||| [function_2] [function_1]	count=1
function	as much ||| some data	count=1
function	service from ||| get service	count=1
function	is ready for reading ||| read	count=1
function	group id ||| get group id	count=2
function	print ||| end	count=1
class	connected ||| connected	count=1
function	exhorting the user to ||| get replacement	count=1
function	list [function] in ||| [function]	count=1
function	all success callbacks ||| callback	count=1
class	string ||| name	count=1
function	a connection to the ||| notify no connection	count=1
function_arg	authenticator [arg_2] ||| [function_1] [arg_2]	count=1
function	called when the connection ||| connection made	count=1
function	a non-blocking socket using ||| socket	count=1
function	string ends ||| ends	count=1
function	to a [function_2] ||| [function_2] [function_1]	count=4
function	call this to write ||| write	count=1
arg	accountname [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] stopped either ||| [function_1] [function_2]	count=3
function	[function_1] code ||| [function_2] [function_1]	count=4
function	name on the ||| name	count=1
function	the setup method ||| setup	count=1
function	thread from ||| thread	count=1
module	pythonmodule pythonattribute a testcase ||| trial	count=1
function	return a list of ||| list methods	count=1
function_arg	to the [arg_2] ||| [function_1] [arg_2]	count=4
function	test cases c{false} otherwise ||| test	count=1
function	[function] failure ||| client [function]	count=2
function	msg_kex_dh_gex_reply message ||| ssh kex dh gex reply	count=1
function	ignore the ||| ignore	count=2
function	mode - interpret any ||| mode	count=1
class	l{iprocesstransport} ||| process	count=1
class	it ||| box dispatcher	count=2
function_arg	[function_1] another protocol ||| [function_1] [arg_2]	count=2
arg	an asn 1- ||| requestdata format args	count=1
arg	assigned to [arg] ||| obj [arg]	count=3
function	fp file-like object @param ||| init	count=1
class	the pop3 server ||| pop3	count=1
class	the message while it ||| message	count=1
function_arg	[function_1] [arg_2] ||| [function_1] repository command [arg_2]	count=10
arg	l{localworkeramp} instance iterating ||| worker result testcases cooperate	count=1
function	a received header string ||| received header	count=1
function	of targets allowable ||| targmax	count=1
class	by this [class_2] ||| [class_2] [class_1]	count=1
module_class	the cookie ||| web cookie	count=1
function	been closed ||| connection lost	count=2
module	to be unique across ||| mail	count=1
arg	command ||| i	count=1
module_class	[module_1] dn ||| [module_1] [class_2]	count=2
function	receiver to ||| receiver	count=1
function	equal ||| equal	count=1
class	could be useful to ||| file	count=1
function	[function] to ||| body data [function]	count=1
function	register to receive data ||| register	count=6
function	method [function] c{teardown} any ||| run fixtures [function]	count=1
module	[module] xmlstreamfactory ||| [module]	count=1
function_arg	[function_1] provides ||| [function_1] avatarid [arg_2]	count=1
function	attribute name on ||| method name	count=1
function	the child ||| child	count=2
arg	underlying transport ||| flowcontrolledlength	count=1
arg	beginning of c{query} ||| msg lastsequenceid	count=1
function	enable options ||| enable	count=1
class	initializes a ||| base	count=1
function	connection from [function_2] ||| [function_2] [function_1]	count=1
function	prepare to deliver ||| deliver body	count=1
class	skip ||| call	count=1
module	hashed ||| conch client	count=1
function_arg	[function_1] for a ||| [arg_2] [function_1]	count=3
function	an error has ||| error	count=1
arg	make consequent state updates ||| b	count=1
arg	account client ||| client	count=2
class	this function across ||| name generator	count=1
class	random value suitable ||| digest credential	count=1
arg	whatever tests that ||| recurse	count=1
class	userauth ||| sshuser auth server	count=1
function	get the [function_2] ||| [function_2] [function_1]	count=23
arg	name see ||| name	count=1
arg	the l{logbeginner} associated with ||| other setstdout	count=1
module	the root of a ||| conch	count=1
function	elements of ||| elements by tag	count=1
function	text from [function_2] ||| [function_2] [function_1]	count=1
function_arg	close a channel ||| send close channel	count=2
class	[class_1] what protocol ||| [class_2] [class_1]	count=1
function	ecdh ||| ecdh	count=1
function	for later referencing ||| for	count=1
class	entry ||| iknown host entry	count=1
arg	creates ||| width maxposition donechar undonechar	count=1
arg	to c{applicationobject}, which ||| applicationobject	count=1
class	speed that this object ||| base speed	count=1
function	[function_1] send for ||| [function_2] [function_1]	count=1
class	could not be parsed ||| ftpfile	count=1
function	for joining to ||| coerce to filesystem	count=1
class	of when this task ||| task	count=1
class	to the destination ||| alias	count=1
module_class	[module_1] outgoing request's ||| [module_1] [class_2]	count=2
class	a ||| sshpublic key checker	count=2
class	this alias to ||| alias	count=1
arg	using ||| cls	count=2
module_class	[module_1] [class_2] c{tag} ||| [module_1] [class_2]	count=4
function_arg	[function_1] [arg_2] for that ||| [function_1] [arg_2]	count=4
function	emit ||| emit	count=2
function	[function_1] a message ||| [function_1] [function_2]	count=1
module	when [module] other ||| [module]	count=1
arg	the given user ||| user reason	count=1
arg	proto ||| proto executable	count=1
function_arg	[function_1] to a ||| [function_1] unix address [arg_2]	count=1
function	tcp connection ||| connection	count=1
arg	a perspective ||| perspective	count=1
class	across all processes reboots ||| name generator	count=1
function_arg	[function_1] reactor ||| [arg_2] [function_1]	count=3
class	processes ||| maildir name generator	count=1
function	all [function] text has ||| as [function]	count=1
arg	address [arg] @param ||| address [arg]	count=2
function	return a ||| get public key	count=1
function_arg	remove all [arg_2] ||| [arg_2] [function_1]	count=6
arg	query to a server ||| query servers timeout	count=1
function	[function_1] test ||| [function_1] [function_2]	count=3
arg	a client protocol ||| protocol maxpacketsize mode	count=1
function	length ||| limit exceeded	count=1
function_arg	registration on [arg_2] ||| [arg_2] [function_1]	count=3
function	[function_1] warnings ||| [function_1] [function_2]	count=2
module	sent when ||| conch ssh	count=1
arg	pre-built l{servicemanager}, using ||| jid	count=1
arg	physical ||| domainurl	count=1
class	mailbox ||| iaccount imap	count=2
module	from the running ||| conch ssh	count=1
class	by the connection factory ||| factory	count=1
function_arg	enable this [arg_2] ||| [arg_2] [function_1]	count=1
arg	of dns ||| timeout	count=1
module	a terminal server dispatching ||| insults	count=1
function	size in octets ||| size	count=2
function	[function_1] [function_2] ||| [function_2] connection [function_1]	count=12
class	function across all processes ||| name generator	count=1
class	a zippath by looking ||| zip map impl	count=1
arg	reload a ||| dolog	count=1
class	agent ||| sshagent client	count=4
function	this class ||| lookup method	count=1
arg	change ||| chan set	count=1
function	server endpoint from ||| server	count=1
function	decrement the value ||| decrement	count=1
arg	python objects and ||| objects proto	count=1
class	[class_1] and ||| [class_2] [class_1]	count=1
function_arg	allow [function_1] [arg_2] instance ||| [function_1] [arg_2]	count=1
function	as a degrees ||| in degrees	count=1
function	plugin to prefix ||| plugin to prefix	count=3
arg	every time a ||| key val	count=1
class	for valid arguments ||| base	count=1
module_class	let some of [module_1] [class_2] ||| [module_1] [class_2]	count=2
module	the root element has ||| words xish	count=2
module	consisting [module] path ||| [module]	count=1
module	connect to the ||| conch	count=1
class	is ||| dispatcher	count=1
function	get state [function_2] ||| [function_1] [function_2]	count=1
class	log event ||| log	count=1
arg	a message [arg_2] ||| [arg_2] [arg_1]	count=20
class	we are [class_2] ||| [class_2] [class_1]	count=2
function	that a connection ||| connection	count=1
function	retrieve a specific section ||| specific	count=1
function	the size ||| size	count=1
module	the beginning of ||| mail	count=3
class	compute ||| agent base	count=1
class	process which signals the ||| process	count=1
module	as that ||| trial	count=1
class	write ||| datagram port	count=1
class	satellite ||| satellite	count=1
function	in [function_2] ||| [function_1] [function_2]	count=8
function	a bcc address matching ||| bcc	count=1
module	ask the user for ||| conch ssh	count=2
module_class	after the response ||| web response	count=2
class	this domain ||| maildir domain	count=1
function	data directory for ||| data directory	count=2
function	a result at ||| result	count=1
class	contacts [class_2] ||| [class_2] [class_1]	count=1
module	a pre-built ||| protocols jabber	count=1
function	wrap an ||| wrap client	count=1
class	this component ||| component	count=1
function	in the ||| end	count=1
function	and collect its text ||| gather text	count=1
function	[function_1] levels to ||| [function_1] [function_2]	count=1
function	documentation string describing the ||| help	count=1
class	case insensitive ||| insensitive	count=1
class	to domain [class_2] ||| [class_2] [class_1]	count=1
module_class	to the [class_2] ||| [module_1] [class_2]	count=27
function	[function_1] buffer for ||| [function_1] [function_2]	count=10
class	this task has been ||| task	count=1
arg	test [arg_2] ||| [arg_2] [arg_1]	count=1
class	[class_1] conversation and ||| [class_1] [class_2]	count=9
function	user to ||| replacement	count=1
function	[function_1] a sibling ||| [function_1] [function_2]	count=1
arg	[arg_1] over it ||| cls [arg_1] [arg_2]	count=4
function	to report ||| report	count=1
function	[function_1] and a ||| [function_1] [function_2]	count=1
class	the pool ||| pool	count=1
function	[function_1] [function_2] or not ||| [function_2] [function_1]	count=3
function	make c{root} into ||| flatten	count=1
class	gets disconnected ||| remote reference	count=1
module_class	[module_1] l{_newconnectionhelper} that ||| [module_1] [class_2]	count=2
function	header extract ||| extract	count=1
class	[class] number associated ||| [class]	count=3
arg	failure ||| format failure	count=1
module	filters [module] ||| [module]	count=3
function	to a regular file ||| isfile	count=1
module	the test cases ||| trial	count=1
function	address and ||| address and domains	count=1
module	port to [module_2] ||| [module_1] [module_2]	count=2
function	of the group ||| group	count=1
module	corresponding [module] ||| [module]	count=1
class	for a [class] ||| [class]	count=1
function	a [function] this ||| [function]	count=1
function	with a [function_2] ||| [function_2] [function_1]	count=4
arg	when failed ||| reason	count=1
class	tag ||| copyable	count=1
function	as a line ||| as	count=1
class	use ||| credential factory	count=2
arg	protocol to a ||| protocol	count=1
function	in a ||| in	count=1
class	named command ||| command	count=1
class	a file and ||| file	count=1
module_class	this [class_2] ||| [module_1] [class_2] open mode	count=1
function	logging system ||| logging	count=1
module	testcase subclass or ||| trial	count=1
arg	negation of a query ||| query	count=1
function	remember the ||| remember root	count=1
function_arg	login [arg_2] ||| [arg_2] [function_1]	count=3
function	should stop ||| stop	count=1
function	authentication mechanism ||| set mechanism	count=1
function_arg	[function_1] @param fp ||| [arg_2] [function_1]	count=1
function	type as a ||| type	count=1
function_arg	a string representation ||| to string type	count=1
function	[function_1] query ||| [function_1] [function_2]	count=2
arg	_switchbox with ||| innerproto	count=1
function	the end of the ||| end	count=1
class	c{key} by given value ||| mem cache protocol	count=2
function	ensure they will ||| ensure	count=1
arg	request ||| timestamp request	count=1
arg	message from ||| message	count=2
function	retrieve a specific ||| fetch specific	count=1
function	create or retrieve ||| get component	count=1
function	the body [function_2] ||| [function_2] [function_1]	count=2
module	via the ||| web	count=1
function	as the root ||| opt	count=1
function	a complete response ||| finish response	count=2
function	non-blocking socket ||| socket	count=1
function	specific type ||| specific	count=1
arg	checks to see ||| pubkey options	count=1
module_class	[module_1] redirects ||| [module_1] [class_2]	count=2
arg	the given response and ||| response method	count=1
function	[function_1] decimal ||| [function_2] [function_1]	count=1
function	human readable ||| human readable	count=2
class	this structure object ||| message structure	count=2
function_arg	[function_1] the vcsrepository ||| [arg_2] [function_1]	count=1
module_class	will be [class_2] ||| [module_1] [class_2]	count=1
arg	@param proc ||| proc	count=1
function	[function_1] from the ||| [function_2] [function_1]	count=3
arg	private munging to turn ||| k n	count=1
module_class	to the file ||| python file path	count=1
arg	leave that responsibility to ||| immediate	count=1
module_class	that [class_2] ||| [module_1] [class_2]	count=4
class	dictionary and return it ||| with default dict	count=1
class	entry ||| host entry	count=1
module	using the user's ||| conch	count=1
function	deliver a received chunk ||| chunk	count=1
class	all ||| name generator	count=2
class	a zsh ||| zsh	count=1
arg	not an oscaruser ||| wantack autoresponse	count=1
function	a position is received ||| position received	count=1
function	server endpoint into ||| parse server	count=1
class	dictionary and return ||| with default dict	count=1
class	display ||| python path	count=1
module_class	http redirects ||| web redirect	count=1
function	call [function_2] ||| [function_2] [function_1]	count=4
module	been canceled ||| internet	count=1
class	new protocol you ||| binary box protocol	count=1
class	[class] consumer ||| [class] body	count=1
module	log ||| trial _dist	count=2
function	[function_1] to prefix ||| [function_1] [function_2]	count=2
function_arg	coerce a failure [function_1] [arg_2] ||| exc info or failure [function_1] [arg_2]	count=3
function	with some ||| replacement string	count=1
function	generate the challenge for ||| get challenge	count=1
module	indicating whether [module] ||| [module]	count=2
function	which share an integer ||| kex dh gex	count=1
function	[function_1] headers ||| [function_2] [function_1]	count=5
function	receive a msg_kex_dh_gex_reply message ||| kex dh gex reply	count=1
class	a random value suitable ||| digest credential	count=1
function	finished ||| completion	count=1
function	own signal handlers ||| install signal handlers	count=1
function	dcc accept response ||| dcc accept	count=2
function	received chunk of body ||| chunk	count=1
function	or the global ||| global	count=1
function	message along ||| eom received	count=1
class	file's last access-time ||| zip	count=1
function	to this private ||| from string private	count=1
function	[function_1] [function_2] ||| [function_1] port [function_2]	count=1
arg	a start ||| start	count=1
arg	datagram ||| datagram addr	count=1
function	check the [function_2] ||| [function_2] [function_1]	count=4
function	thread from the given ||| defer to thread	count=1
class	my encoded value ||| tlsbox	count=1
function	to this ||| to	count=1
function	[function_1] decimal degrees ||| [function_2] [function_1]	count=1
module	clear the ||| words protocols	count=1
function	string ||| string	count=18
function	backoff interval with ||| backoff	count=1
class	a socket object ||| port	count=1
class	instance from ||| resolver	count=1
module	element has ||| words xish	count=2
function	an anonymous login on ||| cb login anonymous	count=1
arg	service an email service ||| service portal	count=1
function	to resume an ||| do resume	count=1
module	this action ||| python	count=1
class	temporary ||| wrapper	count=2
function	spwd module if ||| shadow	count=1
function	send as much of ||| some	count=1
arg	[arg] @param address ||| address [arg]	count=2
class	in the send bio ||| tlsmemory bioprotocol	count=2
function	of disconnect ||| dont notify on disconnect	count=1
function	exception into the ||| exception into	count=2
function_arg	[function_1] the jellier ||| [arg_2] [function_1]	count=1
function	[function_1] attributes for ||| [function_1] [function_2]	count=3
class	conversation and displays the ||| conversation	count=2
arg	the domain to ||| reactor service domain	count=1
function	representing that time ||| time	count=1
module_class	the log file ||| python log file	count=1
function	get registration info for ||| get registration info	count=1
function	chunk of ||| receive data chunk	count=1
class	private key ||| private	count=1
arg	user credentials ||| credentials	count=1
function	to deliver ||| deliver body	count=1
function	identity for public-key authentication ||| identity	count=1
function	in ||| is in	count=1
arg	binaryboxprotocol's transport ||| newproto clientfactory	count=1
function	a msg_userauth_success ||| ssh userauth success	count=1
module	the value of ||| web	count=1
function	[function_1] observer for ||| [function_2] [function_1]	count=6
function	received a msg_userauth_failure ||| userauth failure	count=1
function	wake up ||| waker	count=1
function_arg	[function_1] protocol ||| [arg_2] [function_1]	count=6
function	called after a connection ||| connection made	count=2
class	[class_1] connected ||| [class_2] [class_1]	count=4
arg	send a message to ||| message	count=3
function	address of ||| address	count=1
function	close this ||| close	count=1
function	@type [function] c{str} ||| [function]	count=1
function	process [function_2] ||| [function_2] [function_1]	count=5
function	the underlying connection is ||| connection	count=1
arg	mailbox this command is ||| mailbox	count=1
class	close ||| file descriptor	count=1
function	a message receiver ||| message	count=1
module	timeout fired and the ||| web	count=2
function	previously-remembered ||| root	count=1
arg	to a given ||| protocol	count=1
function	[function_1] client ||| [function_2] connection [function_1]	count=1
function	a child [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] the specified c{nodeid} as ||| [function_1] [arg_2]	count=5
function	reporter were [function] or ||| was [function]	count=1
function	an object ||| proto	count=1
arg	filename to get ||| k	count=1
module	[module_1] cursor ||| [module_1] [module_2]	count=4
function_arg	initialize a [arg_2] ||| [function_1] [arg_2]	count=1
arg	of observers this will ||| observers discardbuffer	count=1
class	speed that this ||| base speed	count=1
function	[function_1] listening on ||| [function_2] [function_1]	count=1
function_arg	[function_1] code ||| [function_1] [arg_2]	count=1
arg	some data either directly ||| data	count=1
arg	certificate authority's distinguishedname ||| issuerdistinguishedname requestdata verifydncallback serialnumber	count=1
function	validate these credentials against ||| check md5password	count=1
function_arg	send response to ||| send response data	count=1
function	data [function] ||| body data [function]	count=3
function	[function_1] an object ||| [function_1] traceback [function_2]	count=1
function	register ||| register	count=14
function_arg	read into [arg_2] ||| [arg_2] [function_1]	count=1
module	indicate that the ||| conch	count=1
function	file descriptors to be ||| file descriptor	count=1
function	complete ||| done	count=1
function_arg	chunk of [arg_2] ||| [function_1] [arg_2]	count=3
module	has ||| ssh	count=1
function	get the generator ||| get dhgenerator	count=3
module	find the root of ||| conch	count=1
function_arg	[function_1] protocolswitchcommand ||| [function_1] [arg_2]	count=1
module	output of an ||| mail	count=1
class	@param ||| open sslcontext factory	count=1
module	an ||| mail	count=3
function	and returns a ||| output and	count=2
function_arg	a list command ||| list i	count=1
arg	creator ||| creator command protocolfactory commandconnected	count=1
class	remote ||| remote amp	count=1
class	daylight saving time ||| time zone	count=1
class	speed that ||| speed	count=1
class	set checks on the ||| synchronous	count=1
function	iteration and reset the ||| reset	count=1
function	of decorators and the ||| deprecated	count=1
arg	an object to this ||| object	count=1
function	as an error ||| client	count=1
function	compute a ||| key	count=1
function	[function_1] success ||| [function_1] [function_2]	count=4
function	deprecated ||| string	count=1
class	to be relayed ||| queue	count=1
function	a json-serializable data structure ||| as json	count=1
module	remote port to local ||| conch scripts	count=1
function	poll the io completion ||| do iteration	count=1
function	prefix with ||| prefix	count=1
class	value suitable for ||| factory	count=1
function	escape some character or ||| escape	count=1
class	across all calls ||| name	count=1
module	instance ||| names	count=1
function	a string to ||| from string	count=1
module	element items in a ||| words xish	count=2
function	from a thread ||| from thread	count=3
class	[class_1] connected ||| [class_1] [class_2]	count=4
function	deliver any future ||| deliver	count=1
function	the receive bio ||| flush receive bio	count=2
arg	func ||| func	count=1
function	msg_userauth_success ||| ssh userauth success	count=2
function	a string representation of ||| safe repr	count=1
class	a mailbox ||| imap	count=1
function	header in c{self ||| header	count=1
arg	and writers ||| writers	count=1
function	trust root ||| trust root	count=1
function	[function_1] sibling ||| [function_1] [function_2]	count=1
function	modification ||| modification	count=2
module	get ||| conch ssh	count=2
class	@param ||| address error	count=1
function	global reactor ||| reactor	count=1
class	response to a ||| httpclient parser	count=1
function	message sent [function_2] ||| [function_2] [function_1]	count=4
function	normal prefix to include ||| prefix	count=1
function	trying to resume ||| resume	count=1
arg	task ||| task	count=1
class	an infinite ||| infinite	count=1
module	to remote ||| internet	count=2
function	left the ||| user left	count=1
function	return an instance of ||| get	count=2
class	for sending ||| box dispatcher	count=1
function	receiver which will pass ||| receiver	count=1
function	certificate-authority certificates to ||| to	count=1
arg	a replacement ||| replacement	count=1
arg	then ||| desc	count=1
function	of the ||| get	count=1
function	user [function_2] ||| [function_1] [function_2]	count=4
function	send extended ||| send extended	count=1
function	request has been received ||| request complete	count=1
arg	the system ||| modulename	count=1
function	has been canceled ||| cancel	count=1
function_arg	[function_1] [arg_2] ||| [function_1] site [arg_2]	count=3
function	pre-built l{servicemanager}, using the ||| service manager	count=1
function_arg	make a [arg_2] ||| [function_1] [arg_2]	count=1
arg	there's anything left in ||| qname	count=1
class	headers ||| headers	count=1
arg	reactor a ||| reactor	count=1
class	acquire this lock ||| deferred filesystem lock	count=1
function	negation of a ||| not	count=1
module	with a list of ||| python	count=1
function	been canceled ||| cancel get	count=1
function	finish ||| finish	count=2
class	by [class_2] ||| [class_2] [class_1]	count=3
class	retrieve the ||| cert	count=1
module	the ||| trial	count=10
function	expected failure ||| expected failure	count=2
function	-> boolean ||| is module allowed	count=1
function	agent v3 format ||| string agentv3	count=1
class	same [class] as ||| [class]	count=1
function	on ||| deprecated	count=1
function	return an instance ||| get	count=2
function	were [function] or not ||| was [function]	count=1
function	generate a new value ||| generate	count=1
function	retrieve a specific section ||| fetch specific	count=1
function	replace the ||| replace	count=1
arg	one or more messages ||| messages uid	count=8
function_arg	file from [arg_2] ||| [arg_2] [function_1]	count=1
function	early termination of a ||| abort	count=1
function	twisted version and ||| version	count=1
function	[function] current running ||| [function]	count=1
class	a process ||| process	count=3
function	determine whether ||| is	count=3
function	set up the l{openssl ||| set	count=1
function	this protocol ||| protocol	count=1
arg	the given work ||| work	count=1
function	additional options to the ||| additional options	count=1
arg	[arg_1] channel ||| [arg_2] [arg_1]	count=8
class	file and create a ||| log file	count=2
arg	when a test ||| test	count=1
module	with ||| conch client	count=1
function	working [function_2] ||| [function_2] [function_1]	count=1
function	erase from the cursor ||| erase	count=3
function	close a file ||| close	count=1
class	has changed ||| daily log	count=1
arg	the given work on ||| work	count=1
module	to handle the ||| conch	count=2
arg	files ||| previousresult files	count=1
function	send as much of ||| write some data	count=1
function	[function_1] registration ||| [function_1] [function_2]	count=1
class	return ||| factory with context	count=1
arg	given group over ||| group low high header	count=1
function_arg	request [arg_2] ||| [function_1] [arg_2]	count=3
function	[function_1] a full ||| [function_1] [function_2]	count=1
function	reset the [function_2] ||| [function_1] [function_2]	count=2
function_arg	for the [arg_2] ||| [function_1] [arg_2]	count=1
function	a callback for notification ||| add callback	count=1
module	method is called when ||| spread	count=2
module	start the ||| internet	count=1
function	if [function] ||| [function]	count=1
class	the actual [class] ||| [class]	count=3
function	to find the source ||| maybe find source	count=1
arg	id ||| site	count=1
function	idle [function_2] ||| [function_1] [function_2]	count=1
function	check whether a domain ||| domain	count=1
module	via amp invoke ||| protocols	count=1
class	print 'message' in ||| tree reporter	count=1
function	[function_1] a thread ||| [function_1] [function_2]	count=1
function_arg	[function_1] fd that ||| [function_1] fdin asyncio [arg_2]	count=1
class	all ansi [class_2] ||| [class_2] [class_1]	count=1
module	[module] were ||| [module]	count=2
arg	byte string into ||| strio length	count=1
module	@see l{twisted spread ||| spread	count=1
function	the user ||| get	count=1
module	context ||| runner	count=1
function_arg	[function_1] prefixes dictionary ||| [arg_2] [function_1]	count=2
function	connect the ||| connect	count=2
arg	a module-level ||| version message	count=1
module_class	[module_1] log file ||| [module_1] [class_2]	count=6
function	spwd module if ||| shadow get by	count=1
module	hook the ||| conch	count=1
class	this reactor ||| select reactor	count=1
function	boolean and of the ||| boolean and	count=1
function_arg	@param [arg_2] ||| [function_1] [arg_2]	count=125
module	to this function across ||| mail	count=1
function	per reactor ||| reactor	count=1
arg	a packet on the ||| messagenum packet	count=1
function	connected ||| connected	count=1
function	this ||| call	count=1
arg	a message on a ||| ancillary flags	count=1
class	whether signal handlers should ||| signal reactor mixin	count=1
function	the initial client ||| initial	count=1
module	of an iterator to ||| mail	count=1
function	an endpoint ||| endpoint	count=2
function	an unexpected [function_2] ||| [function_2] [function_1]	count=4
arg	given increment ||| streamid increment	count=1
module	a ||| runner	count=1
function_arg	[function_1] hints a ||| [arg_2] [function_1]	count=1
function	add an expected ||| add expected	count=2
module	the error to ||| conch	count=1
function	with some polite ||| get replacement	count=1
function_arg	[function_1] [arg_2] is expected ||| [function_1] short [arg_2] params	count=2
function	called by the stream ||| stream	count=1
function	turns the [function] format ||| fix [function]	count=1
function	[function_1] of ||| [function_2] [function_1]	count=11
function	the cleanups added ||| cleanups	count=1
function	i{kexinit} message ||| kex init	count=1
function	return all ||| get	count=1
class	sent with l{callremote}, with ||| dispatcher	count=1
class	l{_isshconnectioncreator} provider ||| endpoint	count=1
arg	the name c{avatarid} ||| avatarid	count=1
function	[function_1] header string ||| [function_2] [function_1]	count=2
class	this conversation ||| group conversation	count=1
arg	largest udp ||| extendedrcode version dnssecok	count=1
class	create a ||| sslserver connection creator	count=1
function	set another function to ||| set	count=1
function	number of bytes ||| length	count=1
class	address [class] ||| record [class]	count=1
arg	server sock ||| sock	count=1
function	add a watch ||| add	count=1
class	the connection factory ||| iprotocol negotiation factory	count=1
function	by l{unittest testcase} after ||| post class cleanup	count=1
function	an inverse [function_2] ||| [function_2] [function_1]	count=1
module	the ||| application	count=2
module	and moduledict in a ||| python	count=1
function	the size of this ||| size	count=1
arg	non-filled-out cached ||| cid	count=1
function	a quick and ||| and	count=3
class	create ||| iopen sslserver connection creator	count=1
function	set the ||| set unjellyable	count=1
function	api with ||| get	count=1
function	kicked from ||| kicked	count=1
function	application based on ||| get application	count=1
function	specific type [function_2] ||| [function_2] [function_1]	count=2
class	log event as text ||| log	count=1
arg	[arg_1] or a ||| [arg_1] channel [arg_2]	count=2
function	[function_1] the trigger ||| [function_1] [function_2]	count=3
module	a retry attempt ||| application	count=1
arg	mapping strings to ||| strings objects proto	count=2
function	tls for ||| for	count=1
function_arg	[function_1] a child ||| [function_1] path [arg_2]	count=1
function	monkey patch an object ||| patch	count=1
module	context using this pidfile ||| runner	count=1
function	unregister a [function_2] ||| [function_1] [function_2]	count=2
class	a list of all ||| with	count=1
class	console ||| console	count=2
function	[function_1] the attributes ||| [function_2] [function_1]	count=1
module	this instance ||| python	count=1
class	[class_1] certificate ||| [class_1] [class_2] load pem class	count=4
module	called when the ||| internet	count=2
function	[function_1] an error ||| [function_2] [function_1]	count=1
arg	the given group ||| group low high	count=1
arg	port [arg_2] ||| [arg_2] [arg_1]	count=1
function	command in a new ||| command	count=1
module	the user for a ||| conch	count=1
function	group from the ||| group	count=1
function	request data ||| request	count=1
arg	body data ||| data	count=1
class	restart ||| process monitor	count=1
function	body of [function_2] ||| [function_2] [function_1]	count=2
function	msg_disconnect ||| disconnect	count=1
function	called on page ||| page	count=1
module	using this ||| application runner	count=1
function	the connection has been ||| connection	count=1
class	l{httpchannel} has determined ||| ideprecated httpchannel to request	count=1
function	the sign ||| sign	count=1
module_class	the connection ||| internet connection mixin	count=1
function	the server ||| server	count=1
class	of a www-authenticate ||| digest credential factory	count=1
function	deprecate c{iterate}, c{crash} ||| deprecate reactor	count=1
function	a connection to the ||| connection	count=1
class	a c{filedescriptor} ||| continuous polling	count=2
function	raw [function] to ||| [function]	count=1
module	flag if any of ||| python	count=1
function	return no ||| get	count=1
function	data ||| received deferred close	count=1
function	message receiver for the ||| message	count=1
function	processing ||| processing	count=1
function	open a file ||| open file	count=3
class	[class_1] protocol ||| [class_1] [class_2]	count=1
function	from this class ||| lookup method	count=1
class	encoding ||| encoder	count=1
function_arg	observer [arg_2] ||| [arg_2] [function_1]	count=2
arg	the given task on ||| task	count=1
function	via dcc send ||| dcc	count=1
function	[function_1] join ||| [function_2] [function_1]	count=6
arg	three formats ||| datestring	count=1
function	this is ||| is	count=1
function	failure that represents ||| failure	count=1
function	is [function_2] ||| [function_2] [function_1]	count=11
arg	[arg_1] we're connected ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] item groupid [arg_2]	count=3
arg	the given consumer this ||| consumer	count=1
arg	id ||| id	count=1
function	add additional [function_2] ||| [function_1] [function_2]	count=4
class	test is ||| test case	count=1
function	a message to ||| message	count=2
function	print all of ||| print errors	count=1
function	retrieve body ||| body	count=1
function	authentication error ||| error	count=1
function	per [function_2] ||| [function_2] [function_1]	count=1
module_class	[module_1] [class_2] ||| [module_1] known hosts [class_2]	count=2
function	create a chat ||| create chat	count=3
function	returns ||| output	count=1
function_arg	get [arg_2] ||| [function_1] [arg_2] nodeattrs	count=2
class	server side information ||| bosconnection	count=1
class	compute ||| public key	count=2
class	runner should ||| subunit reporter	count=1
arg	and some data ||| data	count=1
class	changed since last ||| file	count=1
function_arg	address [arg_2] ||| [arg_2] [function_1]	count=1
function	the list [function] ||| [function]	count=1
function	for ||| string	count=1
function_arg	[function_1] exitcode ||| [arg_2] [function_1]	count=1
function	header tuple to a ||| header to	count=1
function	and response headers ||| response headers	count=1
class	[class_1] in progress ||| [class_2] [class_1]	count=6
function	registration on ||| update registration	count=1
arg	[arg_1] and client ||| [arg_1] [arg_2]	count=1
arg	of the domain ||| domain	count=1
arg	client protocol ||| protocol maxpacketsize	count=1
class	sphinx ||| sphinx builder	count=1
class	the send bio ||| tlsmemory bioprotocol	count=2
class	all scheduled [class] restarts ||| [class]	count=1
function	install a ||| install	count=3
arg	construct an l{serialnumber} instance ||| number serialbits	count=1
function	[function_1] given client ||| [function_2] [function_1]	count=5
function	[function_1] send ||| [function_2] [function_1]	count=5
function_arg	window [arg_2] ||| [arg_2] [function_1]	count=2
function	presence ||| has key	count=1
arg	host [arg_2] ||| [arg_2] [arg_1]	count=2
class	be unique across all ||| maildir name generator	count=1
class	[class_1] jar ||| [class_1] [class_2]	count=1
function_arg	[function_1] be returned ||| [function_1] [arg_2]	count=3
function	the flags of ||| flags	count=1
arg	[arg_1] and writers ||| [arg_1] [arg_2]	count=1
module	subclass or an ||| trial	count=1
function	undelete any ||| undelete	count=1
function	remove from ||| remove flags	count=1
class	a string ||| name	count=1
arg	object with the contents ||| i	count=1
function	next string from the ||| next	count=1
module	of a ||| mail	count=1
function_arg	a connection [arg_2] ||| [arg_2] [function_1]	count=2
function	an entity ||| entity	count=2
function	a ctcp ||| ctcp make	count=1
arg	the given request if ||| request	count=1
function	signal c{signalid} [function_2] ||| [function_2] [function_1]	count=1
arg	provides ||| mind	count=1
function_arg	[function_1] operating ||| [arg_2] [function_1]	count=3
module	protocol after the ||| web	count=1
module	called when the test ||| trial	count=1
function	a complete [function_2] ||| [function_2] [function_1]	count=1
function	encoder if ||| encoder	count=1
class	factory for ||| factory	count=1
function	all [function] entities that ||| list [function]	count=1
class	date has changed since ||| daily	count=1
module	see twisted internet ||| internet	count=1
module	and [module] associated ||| [module]	count=1
function	a given port command ||| generate port command	count=1
function	use as the response ||| response from	count=2
arg	an article to ||| article	count=1
arg	given color ||| message color	count=1
class	an ||| protocol	count=4
function	ascii bytes representation ||| bytes	count=1
function_arg	[function_1] referring ||| [arg_2] [function_1]	count=1
class	will ||| transport	count=1
module	and return the ||| web	count=1
function	l{_commandtransport} ||| ssh userauth	count=1
function_arg	chat room ||| chat shortname	count=1
function	files ||| get files	count=1
class	glib timeout ||| glib	count=1
function	c{_deprecated_info} flag if ||| get	count=1
function	return an ||| get group	count=1
function	the connection [function_2] ||| [function_1] [function_2]	count=5
arg	value constants the ||| level	count=1
arg	[arg_1] an oscaruser ||| [arg_1] [arg_2]	count=2
function	generate [function_2] ||| [function_1] [function_2]	count=1
class	method ||| ipositioning	count=2
function	for ssl client parameters ||| parse client ssl	count=1
module	entry with ||| conch client	count=1
function	undelete any messages which ||| undelete messages	count=1
arg	overrides any ||| k v	count=1
class	the attributes this formatting ||| formatting	count=1
class	this descriptor will use ||| file descriptor	count=1
function_arg	[function_1] lengthasstring ||| [function_1] [arg_2]	count=3
module	key ask the ||| conch ssh	count=1
function_arg	kicked from [arg_2] ||| [function_1] kickee [arg_2]	count=1
function	method to ||| method	count=1
function	[function_1] hostname ||| [function_2] [function_1]	count=1
module	of some other ||| mail	count=1
function	and yield in source ||| get source lines	count=1
function	[function] away ||| [function]	count=2
function	get [function_2] ||| [function_1] [function_2]	count=37
function	likely uid for ||| uidnext	count=1
function	checks if [function_2] ||| [function_1] [function_2]	count=1
function	me an ao i'll [function_1] [function_2] representation ||| [function_1] [function_2] ao	count=1
function	repr of this ||| repr	count=1
arg	service ||| service description	count=1
arg	message ||| code	count=1
module	arrange for it ||| names	count=1
class	if this [class] matches ||| [class]	count=1
arg	name in ||| name	count=1
arg	c{message} ||| rcode answers authority	count=1
function	exchange is ||| exchange	count=1
class	want log levels ||| log level	count=1
function	chunk ||| receive data chunk	count=1
function	the channel ||| channel	count=1
function	all [function_2] ||| [function_1] [function_2]	count=6
function	metadata to keep ||| state to	count=1
function	to install ||| install	count=1
function_arg	a unix [arg_2] ||| [function_1] [arg_2]	count=2
function	accept response to clients ||| accept	count=1
function	match ||| match failed	count=2
class	to ||| manager	count=1
class	pkey object ||| public	count=1
module_class	[module_1] [class_2] away ||| [module_1] [class_2]	count=3
function	cancel all pending calls ||| clean pending	count=1
function	we get a message ||| privmsg	count=1
class	across all processes reboots ||| maildir name	count=1
class	date has changed ||| daily	count=1
class	to be ||| generator	count=1
function	the default appropriate ||| default log observer	count=1
function	sentence [function_2] ||| [function_2] [function_1]	count=2
arg	of ||| path	count=1
class	[class] hasn't gone ||| [class]	count=1
arg	creator the ||| creator command protocolfactory	count=1
class	test ||| test case	count=2
arg	buddyid [arg_2] ||| [arg_2] [arg_1]	count=1
class	@param ||| tcpserver endpoint	count=1
module	parse the given ||| python	count=1
function	the deferred ||| cancel	count=1
function	the attributes ||| attributes	count=1
class	this ||| base	count=1
function	using content-length [function_2] ||| [function_2] body [function_1]	count=3
class	be unique ||| maildir	count=1
function	group ||| group	count=12
function	for reading writing ||| do write	count=1
arg	using ||| cls box protocol	count=1
arg	a child resource to ||| path child	count=1
class	an adapter for ||| componentized	count=1
module	the initialization ||| words	count=1
function	[function_1] anonymous ||| [function_2] [function_1]	count=2
function	to write to ||| write	count=1
function	to build ||| build	count=1
arg	use as [arg] for ||| transport [arg]	count=1
function	[function_1] failure to ||| [function_1] [function_2]	count=3
function	a message to this ||| message	count=2
function	connection to a ||| connection	count=1
function_arg	class [arg_2] ||| [function_1] list [arg_2]	count=3
function	finish [function_2] ||| [function_1] port [function_2]	count=1
class	each ||| receiver	count=1
module	that ||| trial	count=8
arg	session with a unique ||| uid	count=1
class	calls to this ||| maildir name generator	count=1
module	beginning of ||| mail	count=1
function	arrives over ||| received	count=1
function	a connection to a ||| connection	count=1
function	the ||| replacement	count=1
module	allowed in [module] selected ||| [module]	count=1
class	via amp invoke it ||| box	count=1
arg	[arg_1] schema ||| [arg_1] [arg_2]	count=1
class	processes reboots ||| maildir	count=1
module	the last test in ||| trial	count=1
function	an authenticator ||| register authenticator	count=1
function	minfo ||| mailbox info	count=2
function_arg	[function_1] the name ||| [arg_2] [function_1]	count=4
function	deprecate c{iterate}, c{crash} and ||| deprecate	count=1
function	or ||| failure or	count=1
function	initiate ||| do connect	count=1
function_arg	[function_1] a wrapper ||| [arg_2] [function_1]	count=4
function	flag if ||| deprecated	count=1
arg	pythonmodule do not construct ||| name filepath pathentry	count=1
arg	passed as ||| f	count=1
function	returns the timeout ||| get timeout	count=3
class	commands ||| mem cache protocol	count=1
function	to mime types ||| load mime types	count=2
function	msg_userauth_failure ||| ssh userauth failure	count=1
function	already added key object ||| agentc sign request	count=1
arg	pair ||| callbackargs callbackkeywords	count=1
function	if c{pattern} is c{bytes}, ||| same type	count=1
function	"list modes" ||| maxlist	count=1
function	when a position ||| position	count=1
function	test whether c{descendantname} ||| is	count=1
module	that the ||| web	count=2
function	server endpoint [function_2] ||| [function_1] [function_2]	count=2
function	it as an alternative ||| get replacement	count=1
arg	a c{newpath} ||| newpath encoding	count=1
function	[function] login ||| opt [function]	count=1
arg	key to ||| key	count=1
function	of a ||| generate	count=1
arg	a message ||| desturl message	count=1
function	[function_1] time at ||| [function_2] [function_1]	count=1
class	has ||| daily	count=1
arg	the directory is a ||| directory	count=1
function	request the server side ||| request	count=1
class	send the buffer ||| buffer	count=1
class	if the underlying archive ||| zip archive	count=1
module	with ||| client	count=1
class	l{firsterror} instances is ||| first error	count=1
function	[function] or not ||| is [function]	count=2
arg	the given sender ||| sender text	count=1
module_class	install the [class_2] ||| [module_1] [class_2]	count=6
function	try to remove the ||| remove	count=1
arg	offered file ||| user file port resumepos	count=1
function	[function_1] database connection ||| [function_1] [function_2]	count=1
class	redirection ||| redirection	count=1
class	called when ||| receiver	count=1
class	l{taskfinished} ||| cooperative	count=1
function	the ssi server ||| item ssi	count=1
module	a pre-built ||| words protocols jabber	count=1
function	send a ||| send	count=20
function	a ||| cancel	count=1
class	reactor names ||| reactor	count=1
function	spawn a process ||| spawn	count=1
function	json-serializable data structure ||| failure as json	count=1
function	a successful [function_2] ||| [function_1] [function_2]	count=3
class	intended to be ||| maildir name generator	count=1
class	box on the ||| box	count=1
class	ansi [class_2] ||| [class_1] [class_2]	count=1
module	in the ||| conch ssh	count=1
function_arg	[function_1] signature using ||| [function_1] [arg_2]	count=1
class	when an ||| protocol	count=1
function	which share ||| kex dh gex group	count=1
function	member ||| member joined	count=2
function	group ||| get group	count=1
function	and prepare to deliver ||| deliver	count=1
function	the endpoint factory to ||| endpoint factory	count=1
module	return the ||| mail	count=1
class	the service is ||| client machine	count=2
class	this ||| domain	count=1
function	file from the ||| file	count=1
function	and resume [function_2] ||| [function_1] [function_2]	count=4
module	out [module] ||| [module]	count=3
module	[module] associated ||| [module]	count=1
function	[function_1] request ||| [function_1] [function_2]	count=10
module	the application ||| application twist	count=1
arg	factory to the ||| factory	count=1
function	its text data if ||| text	count=1
function	ampbox ||| box	count=1
class	changed ||| daily	count=1
function	should be logged ||| should log	count=1
arg	a banana-encoded string ||| st	count=1
function	pre-built l{servicemanager}, using the ||| build service manager	count=1
function	[function_1] handle ||| [function_2] [function_1]	count=2
function	polite text ||| string	count=1
function	names for ||| names	count=1
function	execute a ||| execute	count=1
function_arg	[function_1] string ||| [arg_2] [function_1]	count=2
function	receive a msg_service_accept ||| ssh service accept	count=1
function	only ||| minimal	count=1
class	by the xmlstream ||| authenticator	count=2
class	are connected to ||| iunixdatagram connected transport	count=2
class	email address the ||| smtpclient	count=1
module	the necessary local to ||| mail	count=1
function	[function_1] listening on ||| [function_1] [function_2]	count=1
function	of this certificate ||| get	count=1
class	be unique across ||| maildir name	count=1
arg	data to a ||| data	count=2
function_arg	resume [arg_2] ||| [function_1] [arg_2]	count=3
function	exists in the ||| exists request	count=1
class	certificate authorities ||| open sslcertificate authorities	count=1
function	parses partial visible ||| fix	count=1
class	[class] a ||| logging [class]	count=2
class	[class_1] [class_2] pem-format data ||| [class_1] [class_2]	count=8
arg	into ||| s	count=1
function	stopped ||| stopped	count=3
function	initialize me ||| init	count=2
function	closes the ||| lose connection	count=1
arg	into a data ||| data	count=1
function	string in the specified ||| string	count=1
function	is c{bytes}, ||| same type	count=1
module_class	[module_1] side requested ||| [class_2] [module_1]	count=1
function	monitored for writing ||| writers	count=1
function	number ||| count	count=1
arg	the given file descriptor ||| fd request args	count=1
module_class	the [class_2] ||| [module_1] [class_2] finish	count=1
function	resolution has completed ||| resolution complete	count=1
class	my ||| process	count=1
arg	a mailbox this command ||| mailbox	count=1
class	connect ||| ireactor unixdatagram	count=1
arg	or pem-format string ||| class	count=1
arg	be importable in the ||| modulenames errormessage preventimports	count=1
class	initializes a ||| key	count=1
function	message for closing ||| connection lost msg	count=1
function	c{self _wrappedfactory} ||| build	count=1
function	metadata to ||| to	count=1
arg	l the list ||| l	count=1
arg	server [arg_2] ||| [arg_1] [arg_2]	count=4
class	the ||| credential	count=1
class	whether signal handlers ||| signal	count=1
function	header tuple to ||| header to	count=1
class	c{key} ||| mem cache protocol	count=4
function	api ||| replacement	count=1
function_arg	[function_1] @param outiv ||| [arg_2] [function_1]	count=2
function_arg	[function_1] a _switchbox ||| [arg_2] [function_1]	count=1
function	appropriate records to ||| records	count=1
arg	and key ||| key	count=1
function	visible ||| fix	count=1
class	[class] and ||| [class] avatar	count=3
module_class	[module_1] start ||| [module_1] [class_2] tls do command	count=1
class	to be unique across ||| name	count=1
function	i{kexinit} message to initiate ||| kex init	count=1
function	property as deprecated ||| deprecated property	count=3
function	log to [function_2] ||| [function_1] [function_2]	count=4
module	the location ||| web	count=1
function	of responding [function_2] ||| [function_2] [function_1]	count=3
arg	a query checking for ||| query	count=1
module_class	[module_1] side and ||| [class_2] [module_1]	count=1
arg	a box with a ||| box	count=1
class	call for ||| call	count=1
class	a predetermined list ||| failure	count=1
function	allowed to enable this ||| enable remote	count=1
module_class	is this url ||| python url	count=1
function	object for later referencing ||| for	count=1
module	protocol support so ||| protocols haproxy	count=1
function	service [function_2] ||| [function_2] [function_1]	count=3
module	[module_1] local ||| [module_1] [module_2]	count=8
arg	and nonce from ||| nonce clientip	count=1
function	[function_1] and directories ||| [function_1] [function_2]	count=3
class	an ||| server	count=1
function	peer side of this ||| get peer	count=1
function	request the resource at ||| request	count=1
function	select ||| set	count=1
function	for a ||| string	count=1
module	called to ||| internet	count=1
function	un-buffer all waiting writes ||| writes	count=1
function	and return ||| get	count=4
function_arg	[function_1] coordinator ||| [arg_2] [function_1]	count=1
arg	and hashes using ||| outkey iniv inkey	count=1
function	alternative ||| get replacement	count=1
class	create ||| creator	count=2
function_arg	connection [arg_2] ||| [function_1] [arg_2]	count=2
function	stop performing ||| wont	count=1
class	the named command ||| command locator	count=1
arg	[arg] chunk ||| [arg]	count=2
function	still active ||| active	count=1
function	in the known_hosts ||| in known hosts	count=1
class	a private certificate ||| private certificate	count=3
arg	@param environ ||| environ	count=1
class	standard io ||| standard io	count=2
function	a running process ||| running	count=1
function	[function] are ||| [function]	count=3
function	[function_1] the state ||| [function_2] [function_1]	count=1
class	for ||| auth option mixin	count=1
class	my process's stdin ||| process writer	count=1
function	the disposition and ||| disposition	count=1
arg	the protocol ||| protocol	count=1
class	up an ||| endpoint	count=1
class	transport dispatch it appropriately ||| ibox	count=1
function_arg	[function_1] coordinate type ||| [function_1] [arg_2]	count=2
function_arg	the response [arg_2] ||| [arg_2] [function_1]	count=3
class	etc ||| name	count=1
function	lookup ||| lookup mail	count=1
function	the log [function_2] ||| [function_2] [function_1]	count=4
function	fail if ||| assert failure	count=1
function	cleans the current ||| clean current	count=1
function	[function_1] and of ||| [function_1] [function_2]	count=1
function	looks like a package ||| is package	count=1
function	[function_1] twisted version ||| [function_1] [function_2]	count=1
module	the server ||| conch ssh	count=1
arg	tests that [arg_2] ||| [arg_1] [arg_2]	count=1
function	the attributes for ||| attrs	count=2
function	in ||| in known hosts	count=1
arg	when ||| reason	count=1
arg	creator the ||| creator command	count=1
arg	rmailbx see l{record_minfo rmailbx} ||| rmailbx emailbx ttl	count=1
arg	chatui the ||| group chatui	count=1
function_arg	[function_1] [arg_2] ||| [function_1] short [arg_2] params	count=5
arg	@param digesthash the ||| digesthash	count=1
function	directory for a ||| directory	count=1
class	[class_1] connected to ||| [class_1] [class_2]	count=4
function	and the object it ||| get	count=1
arg	the watch ||| mask	count=1
module	returns an l{ipv4address} or ||| internet	count=1
class	entry ||| entry	count=5
function	it is running on ||| get	count=1
arg	of c{query} ||| msg lastsequenceid	count=1
function	prefix as it ||| prefix	count=1
arg	[arg_1] an implementor ||| [arg_1] [arg_2]	count=2
function	exhorting the user ||| replacement string	count=1
function	list of [function] ||| list static [function]	count=1
class	scheduled call ||| idelayed call	count=4
arg	[arg_1] [arg_2] ||| [arg_1] proto [arg_2]	count=2
function	[function_1] [function_2] any of these may ||| [function_2] [function_1]	count=2
class	build ||| worker amp	count=1
function	string in ||| string	count=2
arg	directory ||| keepquery	count=1
function	add a watch for ||| add	count=1
function	file-like object @param ||| init	count=1
function	report ||| report	count=1
module_class	message [class_2] ||| [module_1] [class_2]	count=4
module	a terminal server ||| insults	count=1
function	export the content ||| export	count=1
function	the object it ||| deprecated	count=1
module	select and setup authentication ||| jabber	count=1
arg	opener a no-argument ||| opener	count=1
function	pwd ||| pwd	count=1
function	any previously set ||| set	count=1
function_arg	[function_1] 'in' ||| [function_1] box [arg_2]	count=3
class	in the ||| tree	count=1
function	failure responses to define ||| define	count=1
class	type is ||| failure	count=1
function	a connection for ||| connection for tls	count=2
class	fingerprint of [class] ||| [class]	count=1
function	a class which ||| class	count=1
function	send me i ||| send to	count=1
module	a ||| trial	count=2
function	perform some configuration change ||| ioctl	count=1
function	[function_1] destination ||| [function_2] [function_1]	count=1
function	thread with ||| thread	count=1
class	parses ||| nmeaadapter	count=1
function	deprecated api with ||| replacement string	count=1
function	[function_1] all keys ||| [function_2] [function_1]	count=1
function	register a callback for ||| add callback	count=1
function	[function_1] queue ||| [function_1] [function_2]	count=3
function	decimal [function_2] ||| [function_2] [function_1]	count=4
class	new ||| resolver	count=1
arg	of a query ||| query	count=1
function	messages ||| messages	count=3
function_arg	person [arg_2] ||| [arg_2] [function_1]	count=2
class	the task completed with ||| maildir mailbox append message task	count=1
function	is the default ||| default	count=1
module	message to the other ||| conch ssh	count=1
function	response data [function_1] [function_2] ||| data [function_1] [function_2] streamid data	count=3
function	a ||| fix	count=1
module_class	to the server ||| mail pop3client	count=1
function	[function_1] full ||| [function_1] [function_2]	count=1
class	containing authorized keys and ||| database	count=1
function	given keys @param ||| keys	count=1
function	the hostname that the ||| hostname	count=1
class	is intended to ||| maildir name generator	count=1
function	consider it as an ||| get	count=1
function	result at ||| result	count=1
function	and an amp box ||| box	count=1
function	send a stat ||| stat	count=1
class	name of the file ||| dcc file	count=1
module	is in ||| python	count=1
function	while key [function_2] ||| [function_1] [function_2]	count=3
class	l{ipv4address} or l{ipv6address} ||| base tcpclient	count=2
function_arg	[function_1] representation ||| [arg_2] [function_1]	count=3
function	[function_1] and ||| to [function_1] [function_2]	count=3
function	find the attribute name ||| method name	count=1
function	deprecated api ||| get replacement string	count=1
function	helper to build a ||| build	count=1
function	[function_1] object ||| [function_2] [function_1]	count=5
function	[function_1] clientside ||| [function_2] [function_1]	count=2
function	headers ||| headers	count=5
function	[function_1] [function_2] ||| [function_1] traceback [function_2]	count=2
class	this is the ||| box	count=1
class	signal handlers for ||| signal reactor mixin	count=1
function	a progress bar ||| stat bar	count=1
class	unregister ||| connection mixin	count=1
function	object from ||| name	count=1
function	api documentation of ||| apidocs	count=1
class	message to ||| message	count=1
function_arg	string @param [arg_2] ||| [function_1] [arg_2]	count=8
class	a www-authenticate challenge ||| credential	count=1
function	work [function] ||| [function]	count=2
class	idle ||| team	count=1
arg	me [arg_2] ||| [arg_1] [arg_2]	count=3
class	sphinx ||| sphinx	count=1
arg	acknowledgement then ||| proto	count=1
function_arg	[function_1] name of ||| [arg_2] [function_1]	count=3
function	to get [function_2] ||| [function_2] [function_1]	count=1
arg	fire on success/failure ||| coro	count=1
class	protocol you need ||| protocol	count=1
class	distributed manager which collects ||| worker reporter	count=1
class	pkey ||| public key	count=2
function	set the ||| get	count=1
function	register ||| associate	count=1
class	new protocol you need ||| box protocol	count=1
function	on to ||| on	count=1
class	below ||| iterator helper	count=1
function	get state ||| get state	count=1
arg	specified strport ||| jid password strport	count=1
arg	called when failed ||| reason	count=1
class	this ||| transport	count=3
function	file [function_2] ||| [function_2] [function_1]	count=1
function	the write [function_2] ||| [function_2] [function_1]	count=1
arg	non-0 ||| idletime	count=1
function	[function_1] as a ||| [function_1] [function_2]	count=2
function	new l{privatecertificate} from ||| new	count=1
class	is listening ||| ilistening	count=1
function	snac and wait for ||| snac	count=1
arg	if [arg_1] [arg_2] 0 then this should ||| [arg_2] [arg_1]	count=1
module	[module] path ||| [module]	count=1
arg	a datagram ||| datagram addr	count=1
module	string ||| protocols	count=1
module	the other side requested ||| conch	count=2
class	list of all ||| with	count=1
module	string ||| mail	count=1
function	when a connection to ||| no connection	count=1
function	format for an ||| for	count=1
function	exponential backoff interval with ||| backoff	count=1
arg	objects and add ||| objects	count=1
function	dynamically generated child ||| child with default	count=1
class	write ||| daily log	count=1
function_arg	all readers ||| all readers	count=1
arg	filename ||| filename	count=3
class	frame ||| frame	count=1
arg	the value ||| val	count=2
function	direct client connection @param ||| dcc	count=1
function	object [function_2] ||| [function_1] [function_2]	count=2
function	dispatch a response ||| dispatch	count=1
arg	prefixes dictionary that ||| prefixes	count=1
arg	platform ||| platform	count=1
class	of l{iprotocol datareceived} that ||| generic httpchannel	count=1
function	[function_1] ignore the ||| [function_2] [function_1]	count=2
function	a ||| build service	count=1
arg	[arg] methods ||| [arg]	count=3
function	return a string representation ||| repr	count=1
class	a string ||| name generator	count=1
function	single iteration per reactor ||| reactor	count=1
function	database connection and return ||| connection	count=1
arg	to communicate with ||| startthread	count=1
arg	caller that ||| failafterfailures	count=1
function	messages} as a ctcp ||| ctcp make	count=1
function	sign the given c{data} ||| sign data	count=1
function	[function] among the ||| lookup [function]	count=3
function	for subnegotiations ||| unhandled subnegotiation	count=1
function	it as an ||| replacement	count=1
arg	c{failure} with ||| error errorclass frames	count=1
class	unique ||| generator	count=1
class	string which is intended ||| name	count=1
function	to resume ||| do resume	count=1
function	with ||| run with	count=1
module	as the ||| cred	count=1
arg	filename of ||| filename	count=2
function	initialize polling ||| init	count=1
arg	name a name ||| name	count=1
function	process and create a ||| create	count=1
module	setup ||| words protocols	count=1
function	a hash of ||| hash	count=1
module	[module_1] to ||| [module_2] [module_1]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] uid gid spath [arg_2]	count=3
arg	[arg_1] an event ||| [arg_2] [arg_1]	count=2
module_class	[module_1] [class_2] ||| [module_1] ifile [class_2]	count=3
arg	return the watch ||| mask	count=1
arg	given version ||| version format	count=2
module	[module] c{logout} callback ||| [module]	count=2
class	test case ||| synchronous test case	count=2
class	using ||| resolver	count=1
function	currently happening move ||| quiescent	count=1
function	deprecated api with some ||| replacement string	count=1
function	stream server [function_2] ||| [function_1] [function_2]	count=2
arg	list ||| list	count=1
arg	given buffers ||| bufflist evt	count=1
function	query and return l{none} ||| run operation	count=1
module	changed since last write ||| python	count=1
class	for sending messages ||| dispatcher	count=1
function	afsdb ||| afsdatabase	count=1
function	generator and ||| dhgenerator and	count=2
function	expand ||| expand	count=1
class	construct a log ||| base log	count=1
class	a l{stream [class] endpoint ||| [class]	count=1
function	the state of ||| state	count=1
function	data ||| data received deferred close	count=1
function	a c{dict} that ||| make excludes dict	count=1
class	called if a checker ||| checker	count=1
function	child resource ||| child with	count=1
class	which the message ||| wrapper	count=1
function	[function_1] [function_2] ||| python collection [function_1] [function_2]	count=3
function	message [function_2] ||| [function_2] [function_1]	count=10
function	time of ||| time	count=5
module	and for the ||| web _auth	count=1
class	syspath and ||| python path	count=1
class	box ||| box	count=3
function	set the ||| deprecated	count=1
class	underlying ||| public	count=1
function_arg	[function_1] a string ||| [function_1] [arg_2]	count=1
function_arg	coerce [function_1] [arg_2] failure ||| [function_1] [arg_2]	count=1
function	get root ||| get root	count=2
function	prepare an [function_2] ||| [function_2] [function_1]	count=3
arg	chatui the gui ||| chatui	count=2
function	uid ||| uid	count=1
function	[function_1] checkers for ||| [function_2] [function_1]	count=2
class	@return ||| xforwarded for	count=1
module	as this ||| python	count=1
arg	a number of dns ||| timeout	count=1
arg	group over the ||| group low high header	count=1
arg	a module-level ||| version	count=1
module	a chance to ||| protocols	count=1
function	of a connection ||| connection	count=1
function	called in dispatch ||| dispatch	count=1
function	is the ||| remote	count=1
function	with the ||| content	count=1
function	function name ||| function	count=1
class	random value suitable ||| factory	count=1
function	io completion port ||| iteration	count=1
arg	the given named ||| name	count=1
function	list of ||| list	count=7
function	ssi server ||| item ssi	count=1
arg	to newnick and ||| newnick	count=1
function	responding to bad requests ||| respond to bad request	count=1
arg	start and ||| start	count=1
module_class	[module_1] redirect ||| [module_1] [class_2]	count=2
function	the end of ||| end	count=1
module_class	be called when ||| internet process protocol	count=1
function	load the private ||| private	count=1
function	l{interfaces ihandshakelistener} ||| handshake completed	count=1
arg	[arg_1] it whatever ||| [arg_2] [arg_1]	count=1
arg	a specific header from ||| header	count=1
function_arg	[function_1] to ||| [arg_2] [function_1]	count=2
class	the speed that this ||| base speed	count=1
function	[function_1] buffer ||| [function_2] [function_1]	count=11
function	received file descriptors ||| file descriptor received	count=1
function	all pending requests ||| cancel connect waiters	count=1
function_arg	[function_1] accountname ||| [function_1] [arg_2]	count=4
class	boolean ||| boolean value	count=2
function	the deferred ||| cancel get	count=1
class	that we ||| transport	count=1
function	returns a [function_2] ||| [function_2] [function_1]	count=4
class	a string ||| generator	count=1
module	c{*args}, and ||| names	count=1
class	the ||| digest credential	count=1
function	the contacts list associated ||| contacts list	count=1
module	the threads in the ||| python	count=1
class	this certificate ||| base	count=1
function	l{iprocesstransport} provider ||| stop	count=1
arg	server and ||| server client port	count=1
class	l{iprocesstransport} provider ||| process	count=1
module_class	to the console ||| conch client console	count=1
function	version [function_2] ||| [function_1] [function_2]	count=3
module	to the ||| conch insults	count=2
module	called by [module] ||| [module]	count=3
function_arg	join a channel ||| join channel key	count=2
function_arg	query [arg_2] ||| [arg_2] [function_1]	count=2
arg	a sha1-digest ||| sid	count=1
function	deliver any future data ||| deliver body initial	count=1
class	sent with l{callremote}, with ||| box dispatcher	count=1
module	and return their string ||| trial	count=1
function	status change ||| status change	count=2
arg	protocolfactory a callable ||| protocolfactory	count=1
function	package ||| is package	count=2
module	user that ||| words im	count=2
module	a pre-built l{servicemanager}, using ||| words protocols	count=1
function	which a long response ||| long	count=1
arg	[arg_1] a user ||| [arg_2] [arg_1]	count=12
class	this function ||| name	count=1
class	entry in a ||| entry	count=1
function	address ||| host by	count=1
function	size of the ||| size	count=1
function	ciphers to allow to ||| ciphers	count=1
arg	strings to string values ||| strings	count=1
arg	given ||| protocol message address	count=1
module	user to ||| python	count=1
function	mime [function_2] ||| [function_1] [function_2]	count=1
function	from a request ||| received	count=1
class	for ||| option mixin	count=1
class	intended to be unique ||| maildir name generator	count=1
function	put a ||| put	count=1
function	download ||| download	count=1
function_arg	key [arg_2] ||| [arg_2] [function_1]	count=1
function	retrieve the unique identifier ||| get uid	count=1
function	subnegotiations for which ||| subnegotiation	count=1
arg	returned [arg] ||| fileishobject [arg]	count=3
module	to the ||| words protocols	count=1
function	[function_1] protocol ||| [function_1] [function_2]	count=2
class	reject attempts to ||| wsgiresource	count=1
function	the docstring ||| docstring	count=1
class	selectable for notification ||| win32reactor	count=1
module	object with a ||| spread	count=1
class	name lookups ||| ireactor pluggable resolver	count=1
class	entries in this file ||| hosts file	count=1
module_class	[module_1] path with ||| [module_1] file [class_2]	count=4
class	for a particular ||| option mixin	count=1
function	error to remove a ||| remove	count=1
module	a random ||| cred	count=1
class	to the consumer by ||| body producer	count=1
module	to either the underlying ||| protocols	count=1
function	running on set the ||| get deprecated	count=1
arg	name and port number ||| port	count=1
class	the task completed with ||| task	count=1
function	[function] root ||| [function]	count=1
function	original' identifier ||| orig	count=1
arg	hostname and [arg_2] ||| [arg_1] [arg_2]	count=4
function	[function_1] l{esmtpsender} protocol ||| [function_2] [function_1]	count=1
arg	[arg] query ||| [arg]	count=3
arg	private munging ||| k n	count=1
class	speed object ||| base speed	count=1
function	get a ||| get if exists	count=1
class	unique across all ||| maildir	count=1
function	that specify a single ||| single	count=1
arg	a pre-built l{servicemanager}, using ||| jid password	count=1
function	user a message ||| message	count=1
arg	c{regexp} search of ||| regex msg	count=1
function	unregister [function_2] ||| [function_1] [function_2]	count=5
function	the user to consider ||| get replacement	count=1
function	version information and exit ||| opt version	count=1
function	mapping adding ||| log level mapping	count=1
function	source [function_2] ||| [function_2] [function_1]	count=4
function	source line of ||| source line	count=2
module	pidfile ||| runner	count=1
module_class	command is sent prepare [module_1] [class_2] tls but don't actually ||| [module_1] [class_2]	count=1
function	[function_1] the payload ||| [function_1] [function_2]	count=1
function	an instance ||| name	count=1
module	portion [module] c{userinfo}; ||| [module]	count=1
arg	and [arg] protocol instances ||| server [arg]	count=1
function	convert a name in ||| filename to	count=1
function	http header extract ||| extract	count=1
module	notifying [module] user of ||| [module]	count=1
arg	[arg] l{serialnumber} instance ||| [arg]	count=1
function	objects ||| objects	count=1
class	publisher ||| publisher	count=1
function	[function_1] [function_2] ||| [function_2] request [function_1]	count=10
function	class -> ||| is class	count=2
function	challenge for use in ||| get challenge	count=1
function_arg	[function_1] byte ||| [function_1] [arg_2]	count=1
class	the endpoint ||| endpoint service	count=1
function	[function_1] warnings suppressed ||| [function_2] [function_1]	count=2
arg	using this l{command}'s argument ||| cls box protocol	count=1
class	opened files and directories ||| transfer	count=1
function	on page ||| page	count=1
function	decorators and the ||| deprecated	count=1
function	was [function] or not ||| was [function]	count=1
function	the nonce parameter ||| generate nonce	count=1
module_class	[module_1] record in ||| [module_1] [class_2]	count=8
arg	an angle ||| angle angletype	count=1
function	necessary metadata to keep ||| state to	count=1
class	structure object reports on ||| structure	count=2
class	names in this dictionary ||| default dict	count=1
class	a random ||| credential factory	count=1
module	and arrange for it ||| names	count=1
function	the sign for a ||| sign	count=1
arg	[arg_1] more ||| [arg_2] [arg_1]	count=2
arg	remove a message from ||| message	count=1
arg	c{f} with ||| f	count=1
class	event loop ||| glib reactor	count=1
class	a database [class] ||| [class]	count=1
module	terminal server ||| insults	count=1
function	[function_1] [function_2] this ||| [function_1] [function_2]	count=2
arg	to the consumer for ||| consumer	count=1
class	of a www-authenticate challenge ||| digest credential	count=1
function	a master index ||| query clientinfo	count=1
function	read some ||| read	count=1
function	function ||| function	count=5
arg	conversing ||| text metadata	count=1
function	channel ||| ssh channel open	count=1
class	a new l{inmemorysshkeydb} ||| in memory sshkey db	count=1
function	as ||| opt	count=1
class	'message' in the ||| tree	count=1
arg	a ||| jid	count=1
arg	a query ||| query servers timeout queriesleft	count=1
function	random value suitable ||| generate	count=1
function	name ||| method name	count=1
class	__init__ ||| arguments	count=1
arg	start and end from ||| start end	count=1
function	as a string ||| string	count=1
module	under the ||| application	count=1
function	checks the sanity of ||| check string size	count=1
arg	called every time ||| key val	count=1
arg	client protocol instances over ||| client	count=1
arg	the given person ||| person	count=1
function	previously-remembered [function_2] ||| [function_1] [function_2]	count=1
function	file number of ||| fileno	count=1
function	rename a mailbox this ||| rename	count=1
module	to the method which ||| internet	count=1
arg	@type file any file-like ||| file	count=1
function	authentication mechanism ||| mechanism	count=1
function	reply to a channel ||| channel	count=1
function	original exception [function_2] ||| [function_2] [function_1]	count=4
function_arg	[function_1] line ||| [arg_2] [function_1]	count=5
module_class	will be [class_2] ||| [module_1] process [class_2]	count=1
function	change [function_2] ||| [function_1] [function_2]	count=1
module	[module_1] jabber ||| [module_1] [module_2]	count=6
function	i{kexinit} message to ||| kex init	count=1
function	delete the entry for ||| delitem	count=1
function	it to collector ||| next page	count=1
function	indicate that ||| wont	count=1
function	string ||| service	count=1
module	of ||| positioning	count=2
arg	of a message ||| message	count=1
class	speed that ||| base speed	count=1
module	discarding them if the ||| internet	count=1
function_arg	[function_1] string representing ||| [arg_2] [function_1]	count=1
class	sends a line unless ||| ftpclient basic	count=1
arg	message an l{imessagepart} provider ||| message main subtype attrs	count=1
function	[function_1] [function_2] are emitted as a ||| [function_1] [function_2] observewarning	count=3
class	print 'message' ||| reporter	count=1
function_arg	failed [arg_2] ||| [arg_2] [function_1]	count=2
function	has ||| cancel	count=2
function	version of ||| version of	count=2
function	load a ||| load	count=1
function	keys ||| keys	count=1
class	underlying producer ||| producer	count=5
function	returns ||| get host	count=1
arg	information dictionary to the ||| info	count=1
function_arg	[function_1] filename ||| [arg_2] [function_1]	count=2
function	return ||| get host	count=1
module_class	of defined ||| mail abstract maildir	count=1
arg	person object return ||| person	count=1
function	encode a ||| encode	count=2
class	a file and make ||| file	count=1
module	[module_1] to ||| [module_1] [module_2]	count=2
function	file which is ||| file	count=1
module	all attempts to ||| conch	count=1
function	successfully posted to ||| post request	count=1
function_arg	[function_1] the physical ||| [function_1] address [arg_2]	count=1
function	an opaque to ||| opaque	count=1
arg	given task on ||| task	count=1
function	a documentation string describing ||| method help	count=1
function	[function_1] interfaces that ||| cred portal [function_1] [function_2]	count=1
function_arg	reactor if [arg_2] ||| [arg_2] [function_1]	count=1
arg	aliases ||| alias	count=1
function	add a failure to ||| add failure	count=1
class	message ||| mailbox append message task	count=1
function	code ||| code	count=1
arg	(a l{message} ||| message	count=1
function	percent-encode ||| percent encode	count=2
function	test method test ||| test	count=1
arg	matching [arg] regardless of ||| list [arg]	count=1
function	a file from ||| file	count=1
module	of decorators and ||| python	count=1
class	with ||| with	count=3
function	requested ensure they will ||| ensure	count=1
class	known ||| known	count=1
arg	file any file-like object ||| file	count=1
arg	group over the given ||| group low high header	count=1
function	write c{bytes} ||| write	count=1
function	for the presence of ||| has key	count=1
function	a string for ||| to string	count=1
function	pre-built l{servicemanager}, using the ||| build	count=1
function_arg	a notify [arg_2] ||| [arg_2] [function_1]	count=2
arg	strings to string ||| strings	count=1
class	the deferred has ||| queue	count=1
module	the hostmask of the ||| protocols	count=1
arg	[arg_1] the euid ||| [arg_2] [arg_1]	count=2
function	an amp box ||| from box	count=1
function	reply [function_2] ||| [function_2] [function_1]	count=4
arg	a domain name and ||| name	count=1
function	[function_1] levels ||| [function_1] [function_2]	count=1
function_arg	[function_1] accountname a ||| [arg_2] [function_1]	count=4
function	[function_1] entity ||| [function_2] [function_1]	count=2
function_arg	[function_1] using this ||| [function_1] [arg_2]	count=8
function	api ||| get	count=1
class	random value suitable for ||| digest credential	count=1
function	i{sigchld} handler is ||| handler	count=1
function	will stop ||| wont	count=1
arg	for a user ||| user	count=2
function	a specific type of ||| specific	count=1
function	connection has been made ||| connection made	count=2
class	from the [class] consumer by ||| [class] body	count=1
class	convert a ||| argument	count=1
arg	command to which a ||| command	count=1
module	the deferred has ||| internet	count=1
arg	replacement for a ||| replacement	count=1
function_arg	string [arg_2] ||| [arg_2] [function_1]	count=8
function	attempt to acquire ||| acquire	count=1
function	file descriptors ||| file descriptor	count=1
function	[function_1] this handle ||| [function_1] [function_2]	count=2
function	suitable for joining to ||| to filesystem encoding	count=1
function	body ||| body data	count=2
function	thread from the given ||| to thread	count=1
function	consumes the length portion ||| consume length	count=1
function	and [function] a ||| [function]	count=1
class	connection retry ||| client machine	count=1
function	[function_1] a process ||| [function_2] [function_1]	count=1
class	this task is complete ||| cooperative task	count=1
function	attribute as being ||| module attribute	count=1
function	certificate verification failed ||| fail verification	count=1
function	to keep a ||| to	count=1
function	all basic' types (dictionary ||| basic types	count=1
class	securing a tls connection ||| iopen sslcontext	count=1
function	[function_1] the initial ||| [function_2] [function_1]	count=1
function	consider it ||| replacement string	count=1
function	a given port ||| port	count=1
function	the mail exchange host ||| mx	count=1
module	instance of [module] command ||| [module]	count=1
class	deferred ||| deferred queue	count=2
function	unpack ||| unpack	count=1
function	we get ||| privmsg	count=1
arg	corresponding to a description ||| description factory reactor	count=1
module	forward local ||| scripts	count=1
function	when executing the ||| responder	count=1
function	finished disconnecting ||| wait for stop	count=1
function	a naptr ||| naming authority pointer	count=1
function	[function_1] prefix as ||| [function_2] [function_1]	count=1
function	data if ||| data	count=2
function	a rectangle ||| rectangle	count=1
arg	@see u{rfc1035 section-4 ||| id answer opcode auth	count=1
function	remember the currently-processed part ||| remember root	count=1
function_arg	encode this ||| encode strio	count=1
function	a chunk of ||| data chunk	count=1
function	a child with the ||| child with	count=1
function	[function_1] child with ||| [function_2] [function_1]	count=1
function	[function_1] server endpoint ||| [function_1] [function_2]	count=3
class	descriptor will ||| descriptor	count=1
module	root element has been ||| words xish	count=2
function	select and ||| set	count=1
function	the wrapped old-style ||| for tls	count=1
function	group ||| head request	count=1
class	name ||| name	count=2
arg	log a failure ||| failure level	count=1
function	warning suppressions set for ||| suppress	count=1
function	given header can ||| header	count=1
arg	to a given ||| protocol message	count=1
function	reset the timer ||| reset	count=1
function	a successful anonymous ||| cb anonymous	count=1
function	child resource all ||| child with	count=1
class	skip ||| looping call	count=1
arg	run a command over ||| command username	count=1
class	client is jellyable ||| jellyable	count=1
module	to compare me ||| spread	count=1
class	given ||| client protocol	count=1
arg	alternate constructor for l{loopingcall} ||| cls countcallable	count=1
class	an [class_2] ||| [class_2] [class_1]	count=4
function	the named plugin package ||| plugin package	count=1
arg	[arg_1] and port ||| [arg_2] [arg_1]	count=8
module	text exhorting the ||| python	count=1
arg	disabled by default ||| enabled	count=2
function	chunk from [function] query ||| [function]	count=1
module	conversing ||| words im	count=1
function_arg	@param osslpkey the ||| init osslpkey	count=1
module	the last ||| web	count=3
function	position is [function_2] ||| [function_2] [function_1]	count=1
class	with the specified ||| with	count=1
class	the key ||| key database	count=1
function	[function_1] connection by ||| [function_1] [function_2]	count=1
module_class	return the user ||| python user	count=1
function	with detailed locals and ||| detailed	count=1
function	which may ||| smart	count=1
function	and directories in ||| and directories	count=2
arg	a new ||| cls	count=1
function	start expiration tracking ||| start checking expiration	count=2
function	[function_1] against expectations ||| [function_2] [function_1]	count=2
function	this node [function_2] ||| [function_2] [function_1]	count=8
function	key ||| allowed key	count=1
function	has [function] ||| [function]	count=2
function	whether the ||| is	count=2
class	content of c{key} only ||| mem cache protocol	count=1
arg	to a file ||| file	count=1
class	is the ||| box	count=1
arg	given test thing ||| testthing	count=1
class	message ||| message structure	count=1
function_arg	header overrides ||| header k v	count=1
function_arg	[function_1] a byte ||| [arg_2] [function_1]	count=1
module	skip the next iteration ||| internet	count=1
class	an authentication agent ||| user auth	count=1
function	url for ||| url	count=1
module_class	this process ||| internet process	count=2
arg	observers this will ||| observers discardbuffer	count=1
class	all calls ||| maildir name generator	count=1
module	a pre-built l{servicemanager}, using ||| protocols jabber	count=1
function	protocol [function_2] ||| [function_2] [function_1]	count=3
function	return credentials checkers ||| get credentials checkers	count=3
function	has ||| should	count=1
class	an authentication agent ||| auth	count=1
function	set ||| set attrs	count=2
function	a msg_newkeys message no ||| newkeys	count=2
module	has closed the channel ||| conch ssh	count=1
class	this box ||| box	count=1
function	pre-built ||| build	count=1
module	and ||| python	count=2
arg	given version ||| version format replacement	count=4
class	be ||| name generator	count=1
function	response ||| response from message	count=3
module	has been received ||| conch ssh	count=1
module	and resets them when ||| conch	count=1
module	closed pop the stack ||| web	count=1
class	a certain ||| iinput output system	count=1
arg	to [arg] elements ||| [arg]	count=1
function	get the next string ||| next	count=1
module_class	multi-line human-readable representation of [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	byte ||| strio length	count=1
class	alias ||| alias	count=3
module_class	[module_1] component ||| [module_1] connect [class_2]	count=1
function	convert an object to ||| jelly to	count=1
arg	a callback to ||| callback	count=1
function	namespace from the module ||| namespace from	count=1
arg	the set flags ||| flags silent	count=1
module	messages via ||| protocols	count=1
arg	packed 128-bit ||| bytestring	count=1
function	client endpoint [function_2] ||| [function_1] [function_2]	count=2
function	random domain [function] this ||| [function]	count=1
module	indicate whether the message ||| mail	count=1
arg	specified the ||| i	count=1
module	public key ask the ||| conch ssh	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] domains	count=24
arg	bytes and ||| bytes	count=2
function	challenge for use in ||| challenge	count=1
arg	and run a command ||| reactor command	count=1
function	share an ||| ssh kex dh gex group	count=1
function	responses to define ||| define failed	count=1
arg	c{failure} with some traceback ||| errorclass frames	count=1
arg	for ||| observerfn	count=1
arg	to a ||| factory timeout	count=1
class	this sentence ||| base sentence	count=1
arg	from ||| answers	count=1
function	the fileno() ||| fileno	count=1
function	the display including ||| to display	count=4
class	context using this ||| ipidfile	count=1
module	element has been ||| words xish	count=2
function	[function_1] stream error ||| [function_2] [function_1]	count=4
function	from [function_2] ||| [function_1] [function_2]	count=7
module	close the connection and ||| web	count=1
function	c{setup}, [function_1] [function_2] of these may ||| [function_2] [function_1]	count=2
class	a www-authenticate ||| digest credential	count=1
function	value ||| value	count=3
module	initializes a ||| positioning	count=1
module_class	[module_1] command's ||| [module_1] [class_2]	count=8
function	already been ||| already	count=1
module_class	[module_1] i{start_response} callable ||| [module_1] [class_2]	count=8
function	a new ||| make	count=1
class	all calls to ||| maildir name generator	count=1
class	phase ||| phase	count=1
function	object @param ||| init	count=2
function	set ||| set alias	count=1
arg	warnings [arg] invoking ||| [arg]	count=1
module_class	the service [class_2] ||| [module_1] [class_2]	count=2
function	an rpy ||| script	count=1
function	[function_1] directories in ||| [function_1] [function_2]	count=4
function	options ||| options	count=1
function	[function_1] contains test ||| [function_1] [function_2]	count=1
function	body has ||| body	count=2
module	the server ||| conch	count=1
function	[function_1] is received ||| [function_1] [function_2]	count=4
function	initialize polling object ||| init	count=1
function_arg	key exchange [arg_2] ||| [arg_2] [function_1]	count=1
module	and extracting the location ||| web	count=1
class	calls to this function ||| name generator	count=1
arg	string received ||| string	count=1
function	password ||| password	count=6
arg	initiate a hostname resolution ||| resolutionreceiver hostname portnumber addresstypes	count=1
function	executes a fix for ||| fix	count=1
module	for the version string ||| conch	count=1
function	modules instance of ||| name	count=1
arg	query to a ||| query servers	count=1
function	created start the application ||| post application	count=1
class	is ||| box dispatcher	count=2
arg	a channel ||| channel key	count=1
class	use ||| digest	count=1
class	add ||| imailbox imap	count=1
function	has completed ||| complete	count=1
function	is authorized to receive ||| authorized	count=1
function	udp ||| listen udp	count=2
arg	response and attempt to ||| response method	count=1
function	enable ||| enable	count=2
arg	[arg_1] schema ||| [arg_2] [arg_1]	count=1
class	a redirect ||| redirect	count=1
arg	namespace uris to suggested ||| closeelement defaulturi prefixesinscope	count=1
function	[function] with ||| [function]	count=3
function	[function_1] instance of ||| [function_1] [function_2]	count=3
arg	on [arg] will ||| [arg]	count=1
arg	command [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	platform? @return boolean indicating [module_1] [class_2] not ||| [module_1] [class_2] is known	count=2
arg	and unwrap its result ||| protocolfactory	count=1
function	set an ||| set	count=1
arg	surround a replacement ||| replacement	count=1
function	unless l{privilegedstartservice} got around ||| service	count=1
arg	to a query ||| query timeout queriesleft	count=1
function	extract text ||| text	count=1
module	the avatar if ||| conch ssh	count=1
class	create a random ||| credential	count=1
class	observer ||| observer	count=2
function_arg	[function_1] l{localworkeramp} ||| [function_1] [arg_2]	count=1
arg	i{host} header based on [arg_1] [arg_2] ||| value [arg_1] [arg_2]	count=6
module	modules ||| trial	count=1
function	sent ||| sent	count=2
function	id ||| id	count=6
class	since last write ||| log	count=1
class	to this function ||| maildir name generator	count=1
function	l{node} the last ||| append	count=1
class	use as the ||| digest credential	count=1
arg	a message on a ||| data ancillary flags	count=1
function	invoke when executing ||| responder	count=1
class	invoke it ||| dispatcher	count=1
function	[function_1] [function_2] for ||| [function_2] [function_1]	count=20
function	connection is established ||| connection	count=1
function	get a resolver ||| get resolver	count=3
function_arg	[function_1] id ||| [function_1] [arg_2]	count=1
class	register ||| no push producer	count=1
class	@param ||| receive basic	count=1
function	domain the default domain ||| default	count=1
function	a dcc [function_2] ||| [function_2] [function_1]	count=11
function	head request is ||| is	count=1
class	'message' ||| tree reporter	count=2
class	listing with attributes ||| lister	count=1
module	the c{nodename}, c{namespace}, ||| web	count=1
arg	this ||| cls	count=2
function	group if this is ||| group	count=1
class	temporary [class_2] ||| [class_2] [class_1]	count=6
arg	readers [arg_2] ||| [arg_2] [arg_1]	count=3
module_class	http [class_2] ||| [module_1] [class_2]	count=2
function	sending ||| call	count=1
function	[function_1] l{ipv6address} ||| [function_1] [function_2]	count=1
function	body for the ||| body	count=2
arg	perform actual ||| commandname	count=1
function	convert a response code ||| code	count=1
function	[function_1] child ||| [function_1] [function_2]	count=2
function	formatting ||| formatting	count=1
function	to ||| to	count=42
function_arg	join a [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	[function_1] a publisher ||| [arg_2] [function_1]	count=1
arg	method ||| description	count=1
module	satellite ||| positioning	count=1
class	imap4client ||| imap4client	count=1
function_arg	register/unregister [arg_2] ||| [arg_2] [function_1]	count=3
function	sigbreak ||| break	count=1
function	return the ||| get thread	count=1
class	address [class] an address ||| [class]	count=1
function	the inotify api ||| supports inotify	count=1
arg	to another user ||| user	count=1
arg	interpret the response ||| response	count=1
class	[class_1] certificate to ||| [class_2] [class_1]	count=4
function	connection was ||| connection	count=3
function	and attempts to load ||| load	count=1
function	of busy workers as ||| working	count=1
function	a password ||| get password	count=1
function_arg	[function_1] a mailbox ||| [function_1] [arg_2]	count=1
function	path entries ||| entry path	count=1
class	cache ||| cache resolver	count=1
class	publishable ||| published	count=1
function	via ||| remote	count=1
class	including its body ||| to	count=1
arg	c{name} the new ||| name	count=1
function	with some ||| string	count=1
arg	channel ||| channel kicker	count=2
function_arg	[function_1] me with ||| [function_1] [arg_2]	count=1
class	of ||| cert base	count=2
function	the user ||| get replacement	count=1
class	unixtime to year month ||| daily log file	count=1
function	find the source line ||| find source line	count=1
arg	encountered mnemonic ||| entityref	count=1
arg	factory to the given ||| factory	count=1
module_class	message marked for ||| mail imailbox pop3	count=1
function_arg	[function_1] a numeric ||| [arg_2] [function_1]	count=1
function	format a ||| format	count=7
module	to log ||| trial _dist	count=1
class	this alias ||| alias	count=1
class	which is intended ||| name generator	count=1
function	log message for ||| log	count=2
arg	cases ||| decorator	count=1
function	[function] use as ||| [function]	count=1
module	compute ||| internet	count=1
arg	if [arg] ||| item [arg]	count=1
arg	that the given user ||| user	count=1
module_class	[module_1] [class_2] input ||| [module_1] client [class_2] prompt	count=1
class	by the xmlstream when ||| authenticator	count=2
class	all calls to this ||| maildir name generator	count=1
class	lock this method is ||| filesystem lock	count=1
arg	[arg_1] [arg_2] for that ||| [arg_2] [arg_1]	count=8
function	lose the [function_2] ||| [function_1] [function_2]	count=1
class	the ||| daily log	count=1
function	of the ipv6 ||| aaaa	count=1
arg	states ||| oldname newname	count=1
class	message while ||| message	count=1
function	fd [function_2] ||| [function_2] [function_1]	count=4
arg	construct a new ||| cls	count=1
function	the user [function_2] ||| [function_2] [function_1]	count=4
module	from the ||| conch	count=6
function	anything is a module ||| anything	count=1
class	this function across all ||| maildir name	count=1
function	list of segments between ||| segments	count=1
function	a timeout policy ||| policy	count=1
arg	observers this ||| observers discardbuffer redirectstandardio	count=1
function	with 'key' or return ||| get	count=1
function	state to ||| get state to	count=4
arg	[arg_1] refer ||| [arg_1] [arg_2]	count=1
module	to this ||| protocols	count=1
function	checkers ||| checkers	count=1
module	a deprecated ||| python	count=1
arg	string [arg] ||| [arg]	count=1
module	to consider it ||| python	count=1
function_arg	[function_1] offered file ||| [function_1] [arg_2]	count=3
function	is ||| ssh	count=2
class	of a private certificate ||| private certificate	count=2
arg	given offset [arg_2] ||| [arg_2] [arg_1]	count=1
function	escape ||| escape	count=4
class	stop ||| itelnet	count=1
function	[function] e ||| as classic log [function]	count=3
module_class	to this [class_2] ||| [module_1] [class_2]	count=10
module	the file at this ||| python	count=1
arg	message to ||| message	count=4
function	the [function] ||| [function]	count=1
arg	opener ||| opener	count=1
module	decorators and the ||| python	count=1
function	the process ||| process	count=3
module	method if you ||| spread	count=1
function	a producer ||| producer	count=5
class	c{*args}, and arrange for ||| resolver	count=1
function	will start being called ||| start receiving	count=1
class	method called when a ||| ipositioning receiver	count=1
class	keys and ||| database	count=1
function	[function] based on ||| get bucket [function]	count=2
arg	ssl ||| certificate method verify	count=1
arg	[arg_1] user not ||| [arg_2] [arg_1]	count=4
function	[function_1] uid of ||| [function_1] [function_2]	count=1
function	server gotoverview() ||| fetch	count=1
function	send extended data ||| send extended data	count=1
module	ask the ||| conch ssh	count=2
module	the object ||| python	count=1
function	execute [function_2] ||| [function_1] [function_2]	count=2
function	this server's overview format ||| overview request	count=1
class	we will ||| transport	count=1
function	a data ||| data	count=1
function	api with some ||| string	count=1
arg	whatever tests that ||| thing recurse	count=1
function_arg	[function_1] exitcode the ||| [arg_2] [function_1]	count=1
class	suitable for ||| digest credential	count=1
module	to be ||| names	count=1
arg	address the l{iaddress} that ||| address	count=1
arg	a fd that it ||| fd	count=1
arg	private generates the text ||| portcmd	count=1
arg	into the given buffers ||| bufflist evt	count=1
function	bad [function_2] ||| [function_1] [function_2]	count=3
module	pythonattribute a ||| trial	count=1
function_arg	[function_1] [arg_2] ||| [function_1] deferred [arg_2]	count=2
class	this structure object reports ||| structure	count=2
class	unique across all calls ||| maildir name generator	count=1
module	or an instance ||| trial	count=1
class	function across ||| name	count=1
class	the file ||| daily log file	count=1
arg	the argument is l{none} ||| maybereactor	count=1
function	boolean or of ||| boolean or	count=1
function	[function_1] degrees this ||| [function_1] [function_2]	count=2
function	[function_1] string ||| [function_2] [function_1]	count=4
function	server endpoint from a ||| server	count=1
class	valid file [class_2] ||| [class_2] [class_1]	count=1
class	[class] ready ||| [class]	count=3
function_arg	name is [arg_2] ||| [function_1] connection control header [arg_2]	count=3
function	the current [function_2] ||| [function_1] [function_2]	count=1
module	the connection ||| web	count=1
class	the endpoint ||| stream server endpoint	count=1
arg	[arg_1] [arg_2] ||| [arg_2] client port [arg_1]	count=1
class	drive ||| trial runner	count=1
function	early termination ||| abort	count=1
arg	c{deferred} does not ||| deferred	count=1
function	display a message ||| message	count=1
arg	a new empty knownhostsfile ||| savepath	count=1
function	return a factory which ||| factory	count=1
class	log observer ||| log observer	count=1
function	constructs a pre-built ||| manager	count=1
function	an encoder ||| encoder	count=1
function	the challenge for ||| challenge	count=1
function	the body for the ||| body	count=2
class	possible launch relayers to ||| smart host smtprelaying manager	count=1
class	file ||| hosts file	count=1
module	[module_1] callback when ||| [module_1] [module_2]	count=2
function	nonce parameter ||| generate nonce	count=1
class	wrapped protocol ||| protocol	count=1
function	server [function_2] ||| [function_1] [function_2]	count=7
function	requested a resume ||| resume	count=1
function_arg	[function_1] chatui the ||| [arg_2] [function_1]	count=2
arg	[arg_1] [arg_2] ||| [arg_1] [arg_2]	count=749
function	command in a ||| command	count=1
function	an unhandled error ||| unhandled error	count=1
module	their string ||| trial	count=1
class	[class_1] conversation and ||| [class_2] [class_1]	count=9
function_arg	[function_1] passing over ||| [function_1] [arg_2]	count=3
module	l{key} from the first ||| conch	count=1
module	all the attributes this ||| python	count=1
arg	access [arg] is ||| [arg]	count=1
function	derive a namespace ||| namespace	count=1
function	deprecated ||| replacement string	count=1
class	supported ||| auth option mixin	count=1
function	pre-built l{servicemanager}, ||| build	count=1
module_class	[module_1] writers ||| [module_1] [class_2]	count=4
module	select and ||| words protocols	count=1
class	string for ||| delivery base	count=1
arg	user a file ||| user file	count=3
class	changed since last ||| daily	count=1
function	as an ||| replacement string	count=1
function	exception ||| exception	count=2
class	get ||| process protocol	count=1
function	set the group ||| set alias group	count=1
module	the message authentication code ||| conch	count=1
function	attributes for ||| attributes	count=1
class	register ||| consumer mixin	count=1
class	[class_1] descriptor ||| [class_1] [class_2] fileno	count=4
function_arg	close [arg_2] ||| [function_1] [arg_2]	count=1
function	openssl cipher string ||| open sslcipher string	count=1
function	_wrappedfactory} or errback ||| build protocol	count=1
function	find [function_2] ||| [function_2] [function_1]	count=8
function	which share an ||| ssh kex dh gex	count=1
arg	tests that are in ||| recurse	count=1
function	[function_1] [function_2] ||| [function_1] [function_2]	count=4101
function	to load the private ||| private	count=1
function	its text ||| text	count=1
class	ipv6 address ||| tcp6client	count=1
function	if ||| get	count=1
function	logging ||| start logging	count=1
arg	and ||| wrapped	count=1
class	offset from utc ||| offset time	count=2
module	processes ||| mail	count=1
function	the python module it ||| module	count=1
function	a local [function_2] ||| [function_1] [function_2]	count=3
function	as much of ||| write some	count=1
arg	l{servicemanager}, ||| jid	count=1
module	any path to ||| conch	count=2
class	every time ||| iprotocol	count=1
arg	host ||| host port	count=1
arg	query to a ||| query	count=1
class	since last write ||| daily	count=1
class	attribute ||| attribute	count=1
arg	server sock protocol [arg_1] [arg_2] sessionno ||| sock protocol [arg_1] [arg_2]	count=1
arg	parent then default ||| parent	count=1
function_arg	[function_1] given group ||| [arg_2] [function_1]	count=3
arg	watch ||| mask	count=1
arg	[arg_1] to listen ||| [arg_2] [arg_1]	count=1
class	a transport ||| abstract datagram	count=1
function	[function_1] message for ||| [function_2] [function_1]	count=3
arg	open an [arg] for reading ||| [arg]	count=1
function_arg	[function_1] err ||| trial exc [function_1] [arg_2]	count=2
function	made ||| made	count=3
function	state ||| set instance state	count=1
function	a dcc resume request ||| dcc resume	count=1
function	or l{ipv6address} ||| host	count=2
function	set if loopback ||| set loopback	count=2
function	the underlying ||| connection lost	count=1
function	[function_1] request failed ||| [function_1] [function_2]	count=1
function	c{path} as ||| as	count=1
arg	whether a user ||| user	count=1
class	the group [class_2] ||| [class_1] [class_2]	count=13
class	for ||| digest	count=1
arg	mode ||| mode	count=2
arg	and then asking it ||| cls type	count=1
class	service ||| machine	count=1
arg	mapping [arg_2] ||| [arg_2] [arg_1]	count=8
module	get the ||| internet	count=1
function	to a channel request ||| channel request	count=1
module	the object [module] wrap currently ||| [module]	count=1
function	arguments for a unix ||| parse unix	count=1
function	string representation of ||| string	count=1
function	return l{none} ||| operation	count=1
module	dns resolver instances in ||| names	count=1
function	auth [function_2] ||| [function_2] [function_1]	count=2
function	call a ||| call	count=2
module	the user if ||| conch ssh	count=1
arg	a file directly ||| file	count=1
function	not yet allocated to ||| queue	count=1
function	[function_1] process ||| [function_2] [function_1]	count=9
arg	declare a ||| message modulename	count=1
function	collect its text data ||| gather text	count=1
function	or the global reactor ||| global reactor	count=1
arg	strports description ||| description	count=1
module	context using ||| runner	count=1
function	l{servicemanager}, using the ||| build	count=1
arg	root object ||| root	count=1
function_arg	[function_1] line of ||| [function_1] [arg_2]	count=1
function_arg	[function_1] attributes for ||| [function_1] path [arg_2]	count=1
arg	c{predicates} ||| predicates	count=1
arg	path within the ||| path	count=1
module	the list ||| conch	count=1
module	specific key from the ||| conch	count=1
function_arg	[function_1] amplist ||| [arg_2] [function_1]	count=1
arg	error is ||| error	count=1
function	to send ||| send	count=1
class	back ||| sshuser auth	count=2
function_arg	[function_1] in progress ||| [function_1] message type [arg_2]	count=5
module_class	to [module_1] [class_2] ||| [module_1] transport proxy [class_2]	count=4
function	[function_1] article ||| [function_1] [function_2]	count=4
function	the size of ||| size changed	count=1
function_arg	[function_1] that c{deferred} ||| [arg_2] [function_1]	count=1
function_arg	a msg_kexinit [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] request if ||| [function_1] [function_2]	count=4
function	exhorting the user ||| replacement	count=1
arg	a l{localworkeramp} instance iterating ||| testcases cooperate	count=1
class	zsh ||| zsh	count=1
function	body has been delivered ||| body	count=1
arg	with the given path ||| path defaulttype ignoredexts registry	count=1
class	factory expects to get ||| factory	count=1
function	[function_1] the readers ||| [function_2] [function_1]	count=1
class	value ||| credential factory	count=2
function	returns a ||| get	count=2
function	data ||| ssh channel data	count=1
class	path with ||| path	count=1
function	create [function_2] ||| [function_2] [function_1]	count=4
function	send a disconnect ||| send	count=1
function	which share an ||| ssh kex dh gex group	count=1
function	initiate the outgoing connection ||| do connect	count=1
arg	[arg_1] [arg_2] ||| [arg_2] factory backlog [arg_1]	count=4
function	to execute [function_2] ||| [function_2] [function_1]	count=2
class	the received data ||| netstring receiver	count=2
class	c{self frame} and yield ||| fragment element	count=1
function	puts method [function_2] ||| [function_1] [function_2]	count=1
function	create an ||| create	count=1
arg	end from ||| end	count=1
module	wait before sending the ||| conch ssh	count=1
function	quit command ||| quit	count=1
arg	name see ||| name type cls	count=1
arg	return a c{newpath} that ||| path newpath encoding	count=1
module_class	a persistent connection to [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	all pending requests for ||| waiters	count=2
function	the challenge for ||| get challenge	count=1
function	request so that ||| request	count=1
function	decode the xtext-encoded ||| decode	count=1
class	any is set checks ||| synchronous	count=1
class	adjust ||| thread pool	count=1
module_class	[module_1] i{chunked} ||| [module_1] chunked [class_2]	count=4
function_arg	msg_disconnect [arg_2] ||| [function_1] [arg_2]	count=1
module	a deferred that ||| trial	count=1
module	message ||| mail	count=4
arg	fd filtering for ||| fd	count=1
class	certificate ||| certificate	count=7
function	close the connection ||| lose connection	count=4
function	the user-space send buffer ||| send buffer	count=2
module	across all processes ||| mail	count=1
function	remember the currently-processed part ||| remember	count=1
function	has completed no ||| complete	count=1
function	to the default appropriate ||| default log	count=1
function	[function_1] user record ||| [function_2] [function_1]	count=2
class	l{methodname} method of ||| method	count=1
function	header string ||| header	count=1
function	a vt102 control sequence ||| vt102	count=1
class	for ||| credential factory	count=2
class	c{filedescriptor} for ||| continuous polling	count=1
class	protocol we're ||| protocol	count=1
class	across all ||| generator	count=2
function	send an error ||| send error	count=2
function_arg	connect a [arg_2] ||| [arg_2] [function_1]	count=4
class	c{key} by ||| mem cache protocol	count=2
function	has been delivered to ||| finished	count=1
function	[function_1] [function_2] ||| [function_2] exchange message [function_1]	count=3
module	as ||| python	count=1
function	allowed to enable ||| enable	count=1
class	this structure ||| message structure	count=1
arg	a private constructor ||| filepath pythonpath	count=1
function_arg	[function_1] exitcode the ||| [function_1] [arg_2]	count=1
class	c{teardown} ||| synchronous	count=1
module	of ||| cred	count=1
function	[function] with a ||| report [function]	count=1
class	response minus the ||| response	count=1
function_arg	[function_1] msgs ||| [function_1] [arg_2]	count=3
class	known files ||| ftpfile	count=1
function	[function_1] is made ||| [function_2] [function_1]	count=4
arg	with address to ||| addr	count=1
function	[function_1] is stopped ||| [function_1] [function_2]	count=4
arg	a query checking for ||| query timeout queriesleft	count=1
function	share ||| ssh kex dh gex group	count=2
arg	message to user ||| user message	count=3
function	as a ||| for writing	count=1
class	[class_1] data ||| [class_2] [class_1]	count=4
module	global python path ||| python	count=1
function	an l{iprocesstransport} provider ||| force stop	count=1
module	drawing on the ||| conch insults	count=1
module	the process of ||| mail	count=1
module_class	this url to ||| python url	count=1
arg	a ||| name	count=4
class	interpreter ||| manhole interpreter	count=1
module	for sending messages ||| protocols	count=1
class	write to this file ||| file	count=1
function_arg	get a [arg_2] ||| [arg_2] [function_1]	count=3
function	method names ||| method names	count=1
function	escape some character ||| escape	count=1
function	when no more body ||| body	count=1
function	a connection control header ||| connection control header	count=1
function	write side [function_2] ||| [function_2] [function_1]	count=1
class	this message ||| multipart message structure	count=1
function	[function] using ||| get [function]	count=2
module_class	[module_1] side ||| [class_2] [module_1]	count=3
class	a socket ||| port	count=1
class	pkey object ||| key	count=1
module	parse ||| words protocols	count=1
function	headers ||| get headers	count=1
class	a context ||| ipidfile	count=1
module	the types map to ||| conch	count=1
arg	authority's distinguishedname return a ||| issuerdistinguishedname requestdata verifydncallback serialnumber	count=1
function	the initial [function_2] ||| [function_1] [function_2]	count=1
arg	packet ||| packet	count=1
class	server response minus the ||| server error response	count=1
function	exhorting the user to ||| string	count=1
class	reactor may sleep (waiting ||| reactor	count=1
arg	[arg_1] [arg_2] ||| [arg_1] domain [arg_2]	count=3
function_arg	[function_1] address ||| [arg_2] [function_1]	count=6
function_arg	[function_1] datagram ||| [function_1] [arg_2]	count=3
class	whether signal handlers ||| signal reactor mixin	count=1
arg	run a command ||| command	count=1
arg	[arg_1] writers and ||| [arg_2] [arg_1]	count=1
module	web client ||| web	count=1
class	list ||| failure	count=1
class	type is in ||| failure	count=1
function	[function_1] window ||| [function_1] [function_2]	count=3
module	when it ||| conch	count=1
class	method called when the ||| ipositioning	count=1
function	at ||| insert at	count=1
function	protocol ||| protocol	count=10
module	constructs a pre-built ||| protocols jabber	count=1
function	xhdr data for ||| xhdr	count=1
arg	deprecated in the given ||| format	count=2
class	which ||| generator	count=1
function	not a request for ||| ignore	count=1
arg	using the specified strport ||| password strport	count=1
function	calculate boolean [function_2] ||| [function_2] [function_1]	count=6
function	[function_1] reading ||| [function_1] [function_2]	count=1
function	remote ||| call remote	count=1
class	pop3 ||| factory pop3	count=1
arg	response ||| response method uri headers	count=1
function	a reply ||| reply	count=1
function_arg	parse [arg_2] ||| [function_1] [arg_2]	count=5
module	twisted deprecation ||| python	count=1
class	from the ||| nntpclient	count=1
function_arg	[function_1] child ||| [function_1] path [arg_2]	count=1
class	a script ||| filtered script	count=1
function	private part ||| private	count=1
arg	message ||| message	count=30
class	stop ||| transport	count=1
function	delegation ||| discover authority	count=1
module	them that ||| trial	count=1
class	in a retryable manner ||| retrying http11client protocol	count=1
class	when an ||| iterminal protocol	count=1
class	next ||| looping call	count=1
arg	username and [arg_2] ||| [arg_1] [arg_2]	count=1
module	consider it as ||| python	count=1
class	this file ||| known hosts file	count=1
function	draw a rectangle ||| rectangle	count=1
arg	the client side ||| client	count=1
function	share an integer value ||| kex dh gex	count=1
class	certificate authorities ||| sslcertificate authorities	count=1
function	date has changed since ||| should	count=1
class	unixtime to year month ||| daily log	count=1
class	all domain names ||| domain with	count=2
function_arg	[function_1] a service ||| sshfactory [function_1] transport [arg_2]	count=1
function	event [function] ||| format event [function] classic log	count=3
function	the read/write status ||| is writeable	count=1
arg	blob ||| blob	count=2
function	return the full ||| get	count=1
module	is ||| internet	count=2
class	protocol instance ||| protocol	count=1
arg	[arg_1] the chat ||| [arg_2] [arg_1]	count=10
module	of [module] command with ||| [module]	count=1
class	a coordinate ||| coordinate	count=1
class	xmlstream ||| connect authenticator	count=1
function	a connection over the ||| connection	count=1
function	display [function_2] ||| [function_1] [function_2]	count=3
function	status has ||| status	count=1
function	forcefully abort [function_2] ||| [function_2] [function_1]	count=3
function	suitable log [function_2] ||| [function_2] [function_1]	count=3
class	encodes and ||| ftp	count=1
function_arg	[function_1] the query ||| [function_1] [arg_2]	count=2
arg	hierarchy into a single ||| classobj attr listobj baseclass	count=1
arg	fully ||| uri	count=1
function_arg	[function_1] the chat ||| [arg_2] [function_1]	count=2
module	constructs a pre-built ||| words	count=1
class	this ||| cert base	count=2
class	by the connection factory ||| negotiation factory	count=1
function	clear all ||| clear all	count=2
function	[function_1] delay period ||| [function_1] [function_2]	count=1
class	return ||| auth client	count=2
function	for joining to ||| to filesystem	count=1
module	the same integer ||| conch	count=1
class	[class_1] path ||| [class_1] [class_2]	count=1
module	the features supported ||| protocols	count=1
module	a pathentry this is ||| python	count=1
function	until l{unpause}() ||| pause	count=1
arg	client protocol ||| protocol maxpacketsize mode	count=1
arg	[arg_1] instance ||| [arg_2] [arg_1]	count=3
arg	opaque and nonce from ||| nonce	count=1
arg	a single [arg] response ||| [arg]	count=1
function	the next string ||| next	count=1
function	complete response ||| finish response	count=1
function	factory [function_2] ||| [function_2] [function_1]	count=1
function	flag if ||| get	count=1
arg	to another protocol ||| protocol	count=2
module_class	i [class_2] ||| [module_1] dcc [class_2]	count=1
module	start running [module] given ||| [module]	count=1
arg	fd ||| fd	count=3
function	flags for ||| flags	count=1
class	c{requiretransportsecurity} as specified ||| esmtpsender factory	count=1
class	use ||| digest credential	count=1
arg	send the username send ||| username	count=1
function	component ||| component	count=2
function	and [function_2] ||| [function_2] bad request [function_1]	count=1
module	[module_1] port to ||| [module_2] [module_1]	count=2
function	suffix ||| suffix	count=1
function	a file to ||| file	count=1
function	decorators and the ||| get	count=1
class	register ||| wrapping factory	count=1
function	trust root ||| trust root path	count=2
class	idle one or a ||| team	count=1
module	sessionno ||| iocpreactor	count=1
module	authenticate ||| client	count=1
class	a string which is ||| maildir name	count=1
function	non-blocking socket using ||| socket	count=1
class	if the key ||| sshpublic key	count=1
function	above mapping ||| mapping	count=1
class	string which is ||| generator	count=1
function	size as an int ||| size	count=1
function	adapter ||| set adapter	count=1
function	a basename of ||| sibling	count=1
arg	readers and [arg_2] ||| [arg_2] [arg_1]	count=4
function	server ||| server	count=6
function	as much ||| write some	count=1
function	arguments to pass ||| arguments	count=1
arg	uri using c{self _endpointfactory} ||| uri	count=1
class	the ||| initiating	count=1
module	and moduledict in ||| python	count=1
function	which local class ||| for class	count=1
class	reactor names ||| reactor selection	count=1
arg	a string ||| cls string	count=1
function	group if ||| group	count=1
arg	of the given transport ||| transport	count=1
function	home ||| home	count=1
function	any received ||| received	count=1
function	sanity of ||| string size	count=1
arg	extdata a dict ||| extdata	count=1
module	skip the ||| internet	count=1
function	[function_1] decimal degrees ||| [function_1] [function_2]	count=1
function	which drives that activity ||| producing	count=1
function	store an entity for ||| store entity	count=1
function	@param domain the ||| init	count=1
function	received that ||| received	count=1
function	determine whether [function_2] ||| [function_1] [function_2]	count=12
function_arg	[function_1] given buffers ||| [arg_2] [function_1]	count=1
function	address and a c{str} ||| address and	count=1
function	side requested a channel ||| lookup channel	count=1
function	returns any ||| get	count=1
function	[function_1] topic to ||| [function_2] [function_1]	count=2
class	user [class_2] ||| [class_1] [class_2]	count=1
class	if the tcp ||| dnsclient	count=1
function	set the factory ||| set unjellyable factory	count=1
arg	response ||| response	count=6
class	coerce ||| coerce	count=1
arg	user ||| user reason	count=1
function	collect received file ||| file descriptor received	count=1
module	extract the ||| protocols	count=2
class	this is unconnected ||| iprotocol	count=1
function	subject ||| get subject	count=1
class	ipv6 ||| tcp6client endpoint	count=2
arg	data over the ||| obj	count=1
function	polite text exhorting ||| get	count=1
class	by broker ||| pager	count=1
module_class	set the [class_2] ||| [module_1] [class_2]	count=2
function	date ||| senton	count=1
module	this ||| python	count=49
class	[class_1] dictionary ||| [class_1] [class_2]	count=5
class	when l{httpchannel} has determined ||| ideprecated httpchannel to request	count=1
arg	[arg] of ||| exitcode [arg]	count=2
class	checks ||| netstring receiver	count=1
arg	using this [arg_2] ||| [arg_2] [arg_1]	count=1
arg	an alternate constructor for ||| cls countcallable	count=1
module	suitable for use ||| cred	count=1
module	underlying pkey object ||| internet	count=1
function	the log prefix to ||| get log prefix	count=1
arg	uid and ||| uid	count=1
class	all ansi ||| ansi	count=1
module	we get the ||| protocols	count=1
arg	a datagram is ||| datagram	count=1
function	to deliver data to ||| deliver	count=1
arg	data for inclusion in ||| data	count=1
class	test has run but ||| test case	count=1
function	person for ||| person	count=1
module_class	the connection [class_2] ||| [module_1] [class_2]	count=6
function	to send to ||| to	count=1
arg	address the address ||| address	count=1
function	a challenge including ||| challenge	count=1
function	attempt to post ||| post	count=1
arg	and then asking ||| cls type	count=1
function	this is an ||| is	count=1
class	a ||| credential factory	count=4
function	file which ||| file	count=1
class	proxy ||| proxy	count=7
arg	or channel's modes are ||| user channel set modes	count=1
function	a regular ||| isfile	count=1
function	retrieve a child resource ||| get child	count=1
function	postarticle() ||| post	count=1
class	message as it ||| append message	count=1
arg	given group over ||| group low high	count=1
function_arg	[function_1] [arg_2] ||| [function_1] md5password [arg_2]	count=1
module_class	of the mailbox ||| mail imailbox imap	count=1
class	add ||| xmpphandler collection	count=1
function	set ||| set	count=43
function	number of [function_2] ||| [function_1] [function_2]	count=3
module_class	distinguishes this file ||| python file path	count=1
class	of this file ||| file	count=1
class	a ||| resolver	count=2
function	a namespace ||| namespace	count=1
function	subclass or an ||| name	count=1
function	into a byte string ||| to	count=1
class	l{iprotocol datareceived} that ||| generic httpchannel	count=1
function	[function_1] host ||| [function_2] [function_1]	count=1
arg	containing unit tests ||| filename	count=1
function	is a git repository ||| repository command	count=1
arg	with the given ||| defaulttype ignoredexts registry	count=1
function	add a mailbox ||| add	count=1
class	intended to ||| name generator	count=1
function_arg	[function_1] packed 128-bit ||| [function_1] ipv6 [arg_2]	count=1
class	create ||| file entry	count=1
class	reboots etc ||| name generator	count=1
module	running ||| python	count=1
function	deliver any buffered data ||| deliver body deferred	count=1
function	@type scheme l{bytes} @param ||| init	count=1
arg	be returned to the ||| nonce clientip	count=1
module_class	[module_1] [class_2] ||| [module_1] transport proxy [class_2]	count=2
class	this function across all ||| generator	count=1
arg	user a ||| user	count=1
function	system-defined home [function_2] ||| [function_2] [function_1]	count=1
function	body data is available ||| body data finished	count=1
function	current line ||| line	count=1
class	message to the mailbox ||| mailbox append message	count=1
function	the time [function_2] ||| [function_2] [function_1]	count=4
function	line ||| send line	count=4
class	this channel ||| channel	count=1
arg	the given [arg] run ||| [arg]	count=1
function	number for select() ||| fileno	count=1
class	factory expects to ||| factory	count=1
module_class	different messages depending on [module_1] [class_2] ||| [module_1] [class_2]	count=8
class	unixaddress ||| unixport	count=1
arg	[arg_1] l{twisted ||| [arg_2] [arg_1]	count=1
arg	message ||| desturl message	count=1
arg	minus the status indicator ||| consumer	count=1
arg	l{imessagepart} provider which this ||| attrs	count=1
arg	of c{query} possibly ||| msg lastsequenceid	count=1
class	of my process's stdin ||| process	count=1
function	the root [function_2] ||| [function_1] [function_2]	count=1
module	handle the ||| conch	count=2
module_class	[module_1] console ||| [module_1] [class_2] prompt	count=4
function	have defined ordering - ||| priority for	count=1
function	return its exit code ||| get	count=1
arg	a transport and ||| transport	count=1
arg	@type address [arg] ||| address [arg]	count=2
function	this is ||| remote	count=1
module	[module] same raw ||| [module]	count=3
arg	as [arg] ||| [arg]	count=3
module	get the ||| protocols	count=5
function_arg	[function_1] datagram out ||| [function_1] [arg_2]	count=1
arg	[arg] that ||| [arg]	count=1
module_class	the [class_2] ||| [module_1] chunked [class_2]	count=1
function	the group to join ||| join group	count=1
function	that the ancillary data ||| ancillary	count=1
function_arg	[function_1] ampprotocol the ||| [function_1] [arg_2]	count=1
function_arg	@param creator ||| init creator	count=1
function	end of line ||| line end	count=3
module	from the first ||| conch	count=1
module	this resource the ||| web	count=1
function	monitored ||| readers	count=2
class	private ||| private	count=2
class	a log ||| base log	count=1
function	the reactor to ||| reactor	count=1
module	the remote ||| conch	count=2
class	@type ||| maildir name generator	count=1
function	c{name} into an ||| by	count=1
function	elements ||| elements by tag	count=1
function	a resume ||| resume	count=1
class	register ||| write pipe	count=1
function	[function] are passed ||| [function]	count=3
class	an ip ||| iraw	count=1
function_arg	[function_1] @param user ||| [function_1] [arg_2]	count=2
function	receive a ||| receive	count=1
class	a www-authenticate ||| credential factory	count=1
arg	the response to ||| response	count=1
function	connection ||| set client	count=1
function	enter a context ||| enter	count=1
function	[function_1] info for ||| [function_1] [function_2]	count=2
class	call for a ||| call	count=1
function	uncache an ||| proto uncache	count=2
function	the current line buffer ||| line	count=1
function_arg	is [arg_2] ||| [function_1] [arg_2]	count=2
module	publish me ||| spread	count=1
module	'message' in ||| trial	count=1
arg	suggested ||| closeelement defaulturi prefixesinscope	count=1
module	next iteration ||| internet	count=1
function	a processor for files ||| processor	count=1
function_arg	return a [arg_2] ||| [function_1] log [arg_2]	count=1
module_class	[module_1] next monitoring ||| [module_1] [class_2]	count=2
function	connected to ||| connected	count=1
class	to copy locally ||| remote copy	count=1
class	the key ||| sshpublic key database	count=1
function_arg	[function_1] another user ||| [function_1] [arg_2]	count=4
function	port ||| port	count=1
arg	[arg_1] name ||| [arg_2] [arg_1]	count=5
function	service ||| eb service	count=1
function	query to it ||| query	count=1
function	authentication chain if ||| auth	count=1
function	process with a process ||| process	count=1
function	whether c{descendantname} ||| is	count=1
function	[function_1] clientside cache ||| [function_2] [function_1]	count=2
function	data [function_2] ||| [function_1] [function_2]	count=6
function	api with some polite ||| replacement	count=1
class	unixtime ||| daily log file	count=1
class	wrapped web context ||| to current policy	count=1
function	malformed [function_2] ||| [function_1] [function_2]	count=1
function_arg	failed and [arg_2] ||| [function_1] test [arg_2]	count=1
module	have the ||| web	count=3
function	undelete any messages ||| undelete messages	count=2
function	negation of ||| not	count=1
function	for ||| replacement	count=1
class	to ||| name	count=2
class	the ||| box	count=1
function	create a response ||| to response	count=1
function	return the original handler's [function_1] [function_2] ||| [function_1] [function_2]	count=4
arg	[arg_1] instance ||| [arg_1] [arg_2]	count=3
function	a header tuple to ||| to	count=1
module	the incoming ||| conch ssh	count=1
function	idle [function_2] ||| [function_2] [function_1]	count=1
arg	with address ||| addr	count=1
module	in the ||| internet	count=1
function	date ||| should	count=1
arg	it whatever ||| parent qualname	count=1
function	to listen on ||| listen	count=2
function	suitable ||| generate	count=1
function	a trust root ||| trust root path	count=2
arg	object return whatever tests ||| recurse	count=1
class	all domain ||| domain with	count=2
class	string representations ||| janitor	count=1
module	c{request}'s uri deprecated do ||| web	count=1
function	state in which ||| state	count=1
function_arg	unix [arg_2] ||| [function_1] [arg_2]	count=2
function	box containing ||| from box	count=1
function	the io completion ||| iteration	count=1
class	this structure object ||| singlepart message structure	count=1
function	processor for files ending ||| opt processor	count=1
function	as a flat ||| attrs	count=1
function	polite text ||| replacement	count=1
arg	by importing ||| fullyqualifiedname	count=1
function	return the number of ||| get	count=1
function	[function] of ||| get [function]	count=3
arg	given path ||| path offset	count=2
arg	creator the l{_isshconnectioncreator} provider ||| creator command	count=1
function	window changes ||| window	count=1
function	store this header ||| header	count=1
class	message as it is ||| append message task	count=1
function_arg	add [arg_2] ||| [arg_2] [function_1]	count=2
function_arg	a service [arg_2] ||| [arg_2] [function_1]	count=2
function	server gotoverview() is called ||| fetch	count=1
class	acquire this lock ||| filesystem lock	count=1
class	indicate that we ||| itelnet transport	count=1
function	deprecated ||| get replacement string	count=1
arg	see if uid ||| uid	count=1
function	fails to connect ||| on fail	count=1
class	the avatar to ||| avatar	count=1
function	with a windows error ||| error	count=1
class	to proxy ||| reverse proxy	count=1
function	an absolute url to ||| url	count=1
class	the task completed ||| task	count=1
class	is unconnected ||| iprotocol factory	count=1
function	[function] in the ||| [function]	count=3
function	hashed username ||| hash	count=1
module	the clients ||| conch ssh	count=1
function	to post an ||| post	count=1
function	property ||| property	count=1
function_arg	run [arg_2] ||| [arg_2] [function_1]	count=3
class	message as it ||| mailbox append message task	count=1
class	conversation and displays this ||| conversation	count=1
function_arg	name of [arg_2] ||| [arg_2] [function_1]	count=1
module	using the ||| jabber	count=1
function_arg	[function_1] room ||| [function_1] [arg_2]	count=10
function	string to a ||| from string	count=1
function	[function_1] special-case your ||| [function_1] [function_2]	count=3
arg	indication ||| host serv_name username	count=1
arg	hints ||| hints	count=1
arg	initiate the ssl ||| certificate	count=1
function	the private ||| get private	count=1
class	a new win32 ||| win32reactor	count=1
function	child may ||| child	count=1
class	a portal to ||| portal	count=1
function	[function_1] message for ||| [function_1] [function_2]	count=3
function_arg	string for [arg_2] ||| [arg_2] [function_1]	count=3
function_arg	[function_1] datagram to ||| [function_1] [arg_2]	count=1
function	request early ||| abort request	count=2
function	local object for a ||| local object for	count=1
class	of a private ||| private	count=2
arg	for an event ||| event observerfn priority	count=2
arg	do a plaintext ||| password	count=1
function	timeout value set ||| timeout	count=1
function	to ||| string	count=1
arg	credentials [arg_2] ||| [arg_1] [arg_2]	count=3
class	retrieve this [class_1] [class_2] ||| python [class_1] [class_2]	count=1
function	to read some bytes ||| read	count=1
function	host ||| name resolution	count=1
function_arg	has [function_1] [arg_2] ||| [function_1] [arg_2] reason	count=1
function	interface ||| interface	count=2
class	an l{agent} ||| agent	count=1
function	version ||| opt version	count=1
class	a new protocol ||| protocol	count=1
arg	command ||| command	count=5
function	local class ||| unjellyable for class	count=1
arg	mbox [arg_2] ||| [arg_1] [arg_2]	count=1
function	into a string ||| to string	count=1
function	locally ||| cache locally	count=1
function	envelope this will be ||| sent mail	count=1
function	[function_1] remote ||| [function_2] [function_1]	count=1
function	outgoing multicast packets ||| outgoing	count=2
module	the same number ||| web	count=1
arg	callback to be called ||| callback	count=1
module	the server-dtp ||| protocols	count=1
function	log in ||| login	count=1
function	returns the ||| get	count=1
arg	objects and add ||| objects proto	count=1
class	etc ||| maildir	count=1
class	private certificate to ||| private certificate	count=1
function	added as a processor ||| processor	count=1
module	if the ||| web	count=1
function	[function_1] producer with ||| [function_1] [function_2]	count=1
module	the buffer ||| conch	count=1
class	create a ||| connection creator	count=2
function	warning suppressions set ||| suppress	count=1
arg	consumer for each ||| consumer	count=1
function	angular [function] of this ||| angle [function]	count=1
function_arg	register with [arg_2] ||| [arg_2] [function_1]	count=1
class	to this function ||| maildir	count=1
module	deferred that ||| trial	count=1
function	file ||| monitor file	count=1
class	below ||| module iterator helper	count=1
function	pythonmodule pythonattribute a ||| name	count=1
function	a l{bucket} corresponding to ||| bucket	count=1
class	transport is disconnected ||| abstract datagram protocol	count=1
module_class	the cookie jar ||| web cookie agent	count=1
function	into an ip address ||| host	count=1
function	for joining to ||| to	count=1
function	and ignore the ||| ignore and	count=2
module	the c{commandconnected} ||| conch	count=1
module	any data from the ||| web	count=1
class	my ||| port	count=2
function_arg	[function_1] information ||| [arg_2] [function_1]	count=3
class	l{ipv4address} ||| server	count=1
function	listen on a ||| listen	count=3
class	in this mailbox ||| imailbox imapinfo	count=1
arg	wrapper ||| wrapper	count=1
function	determine whether [function_2] ||| [function_2] [function_1]	count=12
function	keys from ||| identities	count=1
module	the given python ||| conch	count=1
function	iterate all modules ||| iter modules	count=2
arg	the flags [arg_2] ||| [arg_2] [arg_1]	count=2
function	all child elements ||| elements by tag name	count=1
module	cursor ||| insults	count=1
function	of shell [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] destination this ||| [function_1] [function_2]	count=1
function	mr ||| mail rename	count=2
function	unregister a ||| unregister	count=4
function	send ||| send to	count=2
module	in the top ||| web	count=1
function	pre-built l{servicemanager}, using the ||| build service	count=1
function_arg	[function_1] err is ||| exc info or failure [function_1] [arg_2]	count=1
arg	issue a query to ||| query servers timeout queriesleft	count=1
function	previous c{pauseproducing} and resume ||| resume	count=1
function	or load [function_2] ||| [function_1] [function_2]	count=2
module	called when ||| words protocols	count=1
function	writing or ||| write or	count=1
function	parse a [function_2] ||| [function_2] [function_1]	count=6
function	put ||| put	count=1
arg	an [arg_2] ||| test [arg_1] [arg_2]	count=1
function	callback for notification ||| callback	count=1
function_arg	[function_1] given field/format/conversion ||| [arg_2] [function_1]	count=2
function	ssl client ||| client ssl	count=2
class	the next iteration ||| call	count=1
function	validate these credentials ||| md5password	count=1
function	socket and [function_2] ||| [function_2] [function_1]	count=1
arg	given group over ||| group	count=1
function	[function_1] _exc_info if ||| [function_2] [function_1]	count=1
arg	in the given color ||| message color	count=1
arg	[arg] tls ||| [arg]	count=1
function	for a deprecated ||| get replacement string	count=1
function	create a file to ||| file	count=1
module	setup authentication ||| jabber	count=1
class	my class to ||| port	count=2
class	invoke ||| box	count=1
class	frame references replacing ||| frame	count=1
class	as the ||| factory	count=1
class	pkey object ||| public key	count=1
class	a hashed [class_2] ||| [class_1] [class_2]	count=1
function	server endpoint from ||| server from	count=3
function	as the response ||| response from message	count=2
arg	and [arg] protocol ||| server [arg]	count=1
arg	in the specified path ||| path	count=1
class	it using c{*args}, and ||| resolver	count=1
arg	unique id ||| site uid reactor	count=1
class	to this method (due ||| tlsmemory bioprotocol	count=1
function	is a [function_2] ||| [function_2] [function_1]	count=3
function_arg	[function_1] [arg_2] 0 then this should ||| [function_1] item [arg_2]	count=3
function	stream window ||| stream window	count=2
arg	a message ||| message protocol address	count=1
module	value suitable for ||| cred	count=1
module	an l{iprocesstransport} provider ||| runner	count=1
function	for [function_2] ||| [function_2] connection [function_1]	count=4
function	cdata content ||| unicode	count=1
function	to c{other} if the ||| is equal to	count=1
function	with some ||| get	count=1
function	add protocol ||| add	count=1
function	a header is ||| handle header	count=1
arg	given ||| protocol	count=1
class	http/2 ||| h2stream	count=1
arg	every interval seconds ||| interval now	count=1
arg	[arg] raw string ||| [arg]	count=1
function	[function_1] file which ||| [function_1] [function_2]	count=1
class	use as the ||| factory	count=1
arg	data and ||| data	count=2
function	helper returning files ||| get files	count=1
class	lock ||| deferred filesystem lock	count=2
function	a stream [function_2] ||| [function_1] [function_2]	count=5
function	[function_1] failed attempts ||| [function_1] [function_2]	count=1
module	and setup ||| jabber	count=1
function	[function_1] default domain ||| [function_2] [function_1]	count=4
function	server endpoint into ||| server	count=1
function_arg	register with [arg_2] ||| [function_1] stream [arg_2]	count=1
function	user ||| replacement	count=1
function	returns a [function_2] ||| [function_1] raw [function_2]	count=1
class	domain names in this ||| domain	count=1
class	the [class] consumer ||| [class] body	count=1
function	failure that ||| failure	count=1
function	body has been completely ||| body data received deferred close	count=1
function	[function_1] serialized arguments ||| [function_2] [function_1]	count=1
module_class	[module_1] file monitoring ||| [module_1] [class_2]	count=6
function	connect to ||| connect	count=2
function	mark a ||| delete	count=3
function	yield in ||| lines	count=1
class	of my ||| writer	count=1
module	message rename the ||| mail	count=1
function	inotify api ||| supports inotify	count=1
arg	iterator to ||| iterator	count=1
function	list of decorators and ||| deprecated	count=1
function	find an unused ||| unused test	count=1
function_arg	server endpoint [arg_2] ||| [arg_2] [function_1]	count=1
function	via amp invoke it ||| call	count=1
function	it as an alternative ||| replacement	count=1
module	be unique across all ||| mail	count=1
class	really [class] c{setup}, ||| [class]	count=1
function	escape some ||| escape for content	count=1
class	which ||| maildir name	count=1
function	[function_1] single string ||| [function_2] [function_1]	count=2
class	a random ||| digest	count=1
function	c{_deprecated_info} flag if any ||| get deprecated	count=1
class	sending messages via ||| box	count=1
function	[function_1] this group ||| [function_2] [function_1]	count=8
function	tree ||| tree	count=1
function	convert a name ||| filename to	count=1
arg	of c{tag} ||| request tag	count=5
arg	the query ||| query id	count=4
class	syspath and moduledict ||| path	count=1
function	in ||| as	count=1
function	a list of ||| get deprecated	count=1
class	is a port ||| port	count=1
class	[class_1] to the ||| [class_2] [class_1]	count=4
class	be ||| file	count=1
function	and [function_2] ||| [function_2] [function_1]	count=23
arg	connects a given l{datagramprotocol} ||| address protocol maxpacketsize	count=1
function	[function] operation completes ||| [function]	count=3
class	random value suitable for ||| digest	count=1
arg	message to a channel ||| message	count=1
function_arg	[function_1] given increment ||| [function_1] [arg_2]	count=4
function	deprecated l{deferred} ||| deferred	count=1
class	satellite object ||| satellite	count=1
function	family 0x13 server side ||| init ssi	count=1
function	constructs a ||| build service manager	count=1
class	could not be parsed ||| ftpfile list protocol	count=1
function	given port [function_2] ||| [function_1] [function_2]	count=1
arg	user in this ||| user	count=1
arg	returned to the ||| nonce clientip	count=1
function_arg	connection to [arg_2] ||| [function_1] [arg_2]	count=3
class	l{igroup<interfaces ||| chat ui	count=2
function	[function_1] time ||| [function_2] [function_1]	count=7
function	requests ||| request	count=3
function	send a i{kexinit} message ||| send kex init	count=1
class	underlying [class] ||| deprecated [class]	count=1
function	received a msg_userauth_success the ||| userauth success	count=1
function	stop listening on ||| stop	count=1
function	gets an ||| getattr	count=1
class	listing ||| lister	count=1
function	a msg_disconnect message ||| ssh disconnect	count=1
arg	resumeoffset ||| resumeoffset	count=1
function	the normal prefix ||| prefix	count=1
function	is running on ||| deprecated	count=1
function	joining to c{path} ||| to filesystem encoding	count=1
module	a pre-built l{servicemanager}, using ||| words protocols jabber	count=1
arg	channel ||| channel reason	count=1
module	build the [module] instance ||| [module]	count=1
class	and directories ||| file transfer	count=1
module	reset the ||| protocols	count=1
class	this publisher ||| log publisher	count=1
function_arg	create an amplist ||| init subargs optional	count=1
class	ipv6 ||| record aaaa	count=1
module	from l{_connectedprotocol}, ||| names	count=1
class	authentication agent ||| user auth	count=1
arg	[arg_1] [arg_2] ||| [arg_1] message [arg_2]	count=6
class	at which this call ||| call	count=1
arg	given test [arg_2] ||| [arg_1] [arg_2]	count=4
arg	it ||| rootelement	count=1
function	from [function] query return ||| [function]	count=1
function	have a notice from ||| noticed	count=1
function	server address [function_2] ||| [function_1] [function_2] domains	count=4
function	person ||| person	count=1
module	xml document with the ||| web	count=1
function	prepare to deliver ||| deliver	count=1
module	be unique ||| mail	count=1
module	or an instance of ||| trial	count=1
arg	reactor an l{ireactorunix} provider ||| reactor path timeout checkpid	count=1
function	object for a socket ||| socket	count=1
function	[function_1] writing ||| [function_2] [function_1]	count=4
function	openssl cipher ||| from open sslcipher	count=1
module	request to the ||| conch	count=1
function	the i{content-type} parameters unquoted ||| unquoted	count=1
function_arg	[function_1] protocol factory ||| [arg_2] [function_1]	count=1
function	body has ||| body data	count=2
class	to the [class] ||| [class]	count=1
class	the xmlstream when ||| listen authenticator	count=1
class	this component wishes to ||| connect component authenticator	count=1
module	pre-built l{servicemanager}, using ||| words	count=1
function	remove [function_2] ||| [function_1] [function_2] identities data	count=1
function	render method associated with ||| render method	count=1
function	and other ||| close	count=1
function	render method associated ||| render method	count=2
arg	at a path within ||| path	count=1
function	header tuple to a ||| to	count=1
arg	user the hostmask of ||| user channel data	count=1
arg	payload ||| payload	count=2
arg	function to ||| f	count=2
arg	c{failure} with ||| errorclass frames	count=1
function	position is ||| position	count=1
function	connect ||| connect	count=10
class	on ||| worker	count=1
function	serial [function_2] ||| [function_2] [function_1]	count=1
module	the value of this ||| positioning	count=1
function	offset [function_2] ||| [function_2] [function_1]	count=2
class	skip the ||| looping	count=1
function_arg	ssi server [arg_2] ||| [arg_2] [function_1]	count=4
arg	the name of ||| name	count=3
function	check against user ||| check key	count=1
function	a remote ||| remote	count=4
function	select a [function_2] ||| [function_1] [function_2]	count=2
function	character [function_2] ||| [function_1] [function_2]	count=1
function	as an alternative ||| replacement string	count=1
class	constructor l{run} will treat ||| synchronous	count=1
class	request ||| irequest	count=3
function	or ||| name	count=1
function	pairs into name repr ||| repr	count=1
arg	it'll translate ||| signalid	count=1
function	api with some polite ||| get replacement string	count=1
class	this test ||| test case	count=1
function	determine the log ||| get log	count=1
class	the characters we've ||| to stan	count=1
function	[function_1] returns a ||| [function_2] [function_1]	count=2
arg	adds the given member ||| member	count=1
function_arg	ipv6 address ||| ipv6 ip port	count=1
module	body in ||| mail	count=1
class	create ||| application runner	count=1
function	[function_1] stopped ||| [function_1] [function_2]	count=3
arg	the given function ||| f	count=2
function	an ||| get replacement string	count=1
function_arg	[function_1] newtopic ||| [function_1] updated user channel [arg_2]	count=2
function	with a list of ||| deprecated	count=1
function	pre-built l{servicemanager}, using the ||| service	count=1
function	run in main wx/twisted ||| run in main	count=1
class	zip ||| zip	count=1
module	the longest time the ||| internet	count=1
function	[function_1] not ||| [function_2] [function_1]	count=2
function	host key ||| host key	count=2
class	data represents a ||| netstring	count=1
function	textual and a ||| as bytes and text	count=1
class	the test ||| test	count=2
arg	python objects and add ||| objects	count=1
function	[function_1] prefix for ||| [function_1] [function_2]	count=3
function	the signed [function_2] ||| [function_1] [function_2]	count=1
arg	person ||| text metadata	count=1
function	return [function_2] ||| [function_1] deprecation warning [function_2]	count=2
arg	reactor an l{ireactorfdset} provider ||| reactor	count=1
function	a client endpoint from ||| client from	count=1
class	to be ||| maildir name	count=1
function	with ||| replacement string	count=1
function	[function_1] [function_2] ||| [function_1] [function_2] streamid data	count=2
class	for the given configuration ||| app logger	count=1
class	a string which ||| maildir name	count=1
function_arg	a msg_service_accept [arg_2] ||| [function_1] [arg_2]	count=1
class	next monitoring ||| file monitoring service	count=2
class	file-like object containing ||| smtpclient	count=1
arg	[arg_1] and ||| [arg_1] [arg_2]	count=3
function_arg	build a [arg_2] ||| [function_1] [arg_2]	count=4
function	registration on a ||| registration	count=1
function	refers to an absolute ||| isabs	count=1
arg	a channel ||| channel message	count=2
function	as ||| writing	count=1
class	setup authentication ||| saslinitiating initializer	count=1
function	message to this group ||| group message	count=1
class	or ||| server	count=1
function	emit an ||| emit	count=1
class	the xmlstream ||| authenticator	count=2
arg	protocol to a ||| protocol maxpacketsize mode	count=1
function	c{filelogobserverfactory} to the default ||| default	count=1
class	l{twisted ||| ftpanonymous shell	count=1
function	any data [function] to ||| body data [function]	count=1
function	stream's flow [function_2] ||| [function_2] [function_1]	count=2
module	number of ||| python	count=4
function	add ||| add header	count=1
arg	l{logbeginner} associated with ||| other setstdout	count=1
function	server ||| parse server	count=2
class	me ||| script	count=1
function	@return a c{dict} that ||| make excludes dict	count=1
function	sequence of application bytes ||| sequence	count=1
class	called when i ||| ircclient	count=3
arg	a replacement for a ||| replacement	count=1
function	logging ||| logging	count=2
class	the deferred has ||| deferred queue	count=1
function	when the connection is ||| connection made	count=1
function_arg	[function_1] the filesystem ||| [function_1] module name [arg_2]	count=1
module	available after the associated ||| web	count=1
function	the hashed username realm ||| hash	count=1
arg	group over the given ||| group low high	count=1
module	to decode the given ||| web	count=1
module	select and setup ||| words protocols jabber	count=1
function	of the write connection ||| write connection	count=1
module	the authentication process ||| conch	count=1
class	a process instance ||| process	count=1
function	local [function_2] ||| [function_2] [function_1]	count=3
class	file monitoring service ||| file monitoring service	count=3
arg	the topic [arg] or ||| [arg]	count=1
function	consider ||| replacement	count=1
function	verify an ||| verify	count=1
function_arg	[function_1] this broker ||| [arg_2] [function_1]	count=1
function	a trust [function_2] ||| [function_2] [function_1]	count=1
function	returns a list ||| get	count=1
arg	method ||| method	count=4
arg	l{chunkingzipfile} ||| chunkingzipfile length	count=1
function	for reading writing or ||| write or	count=1
function	is c{bytes}, [function_2] ||| [function_2] [function_1]	count=1
function	[function_1] second ||| [function_2] [function_1]	count=2
module	before sending ||| ssh	count=1
function_arg	[function_1] a channel ||| [arg_2] [function_1]	count=6
function	spawn a [function_2] ||| [function_2] [function_1]	count=1
function	user to ||| string	count=1
function	a list of decorators ||| get	count=1
function	list of which arguments ||| arguments	count=1
function	an inverse [function_2] ||| [function_1] [function_2]	count=1
arg	and ||| cls type	count=1
class	this task ||| task	count=4
function	receive a msg_disconnect ||| ssh disconnect	count=1
class	start ||| file descriptor	count=2
class	the dictionary ||| insensitive dict	count=1
function	malformed authentication ||| esmtp authmalformed	count=1
function	a pre-built l{servicemanager}, using ||| build service manager	count=1
function	to a pwd command ||| parse pwdresponse	count=1
class	the input file ||| file body	count=1
arg	of body data ||| data	count=1
arg	string representing a ||| cls string	count=1
class	@type filename l{bytes} ||| alias	count=1
module_class	[module_1] [class_2] ||| [module_1] file [class_2]	count=19
function_arg	[function_1] generated ||| [function_1] session [arg_2]	count=1
class	in the dictionary ||| with default dict	count=1
class	avatar to be returned ||| avatar	count=1
module	final component of the ||| python	count=1
function	of all keys found ||| identities	count=1
function	joining to ||| coerce to filesystem	count=1
module	if the [module_2] ||| [module_1] [module_2]	count=2
module	xml ||| words xish	count=1
function_arg	@param domain [arg_2] ||| [function_1] [arg_2]	count=3
function	openssl cipher [function_2] ||| [function_1] [function_2]	count=1
arg	start ||| start	count=2
class	amp invoke ||| dispatcher	count=1
class	partial visible ||| nmeaadapter	count=1
class	list of known files ||| ftpfile list protocol	count=1
arg	a strports description ||| description factory	count=1
module_class	the reactor ||| internet wx reactor	count=2
module	unique across all ||| mail	count=1
module	the ||| python	count=32
function	associate 'value' ||| setitem	count=1
module	an l{ipv4address} or ||| internet	count=1
module	line the ||| conch	count=1
function	referring to [function_2] ||| [function_1] [function_2]	count=1
function	from a [function_2] ||| [function_1] [function_2]	count=3
function	article with the ||| article	count=1
function	share an integer ||| ssh kex dh gex	count=1
function	to a chat ||| receive chat	count=1
function	children to ||| to	count=1
function_arg	module [arg_2] ||| [arg_2] [function_1]	count=2
function	files and ||| get files and	count=2
module	the content ||| web	count=1
function_arg	reactor method [arg_2] ||| [arg_2] [function_1]	count=3
class	that ||| transport	count=1
function_arg	[function_1] c{name} ||| [arg_2] [function_1]	count=2
function	active handle from the ||| stop reading and writing	count=1
class	file and ||| log file	count=2
function	modification time ||| status change time	count=1
module_class	[module_1] userauth ||| [module_1] [class_2]	count=3
function	[function_1] levels ||| [function_2] [function_1]	count=1
function	against expectations ||| add unexpected	count=1
class	[class_1] [class_2] number associated with it ||| [class_1] [class_2] fileno	count=4
arg	a new instance using ||| cls	count=1
function	ip address ||| host	count=1
class	[class_1] l{istreamclientendpoint} provider ||| [class_1] [class_2]	count=1
function	a complete uidl response ||| response	count=1
function	retrieve the time ||| time	count=4
class	offset from [class_2] ||| [class_2] [class_1]	count=1
function	where all [function] text ||| as [function]	count=1
class	the mailbox ||| string list mailbox	count=2
class	internal handler ||| h2connection	count=1
function	to a select ||| cb select	count=1
module	it is running ||| python	count=1
function	[function_1] hard links ||| [function_2] [function_1]	count=4
function	be ||| notify failure	count=1
class	a zippath ||| zip	count=2
class	as the ||| digest credential factory	count=1
module_class	the l{bucket} ||| protocols bucket	count=1
module	the necessary local ||| mail	count=1
module	jabber id ||| jabber	count=1
function_arg	msg_userauth_failure [arg_2] ||| [function_1] [arg_2]	count=1
module	encode the ||| web	count=1
function	a property as ||| property	count=1
function	when ||| when	count=1
function	that an account ||| account	count=1
class	the transport ||| local worker transport	count=1
function	file ||| file descriptor	count=1
function	the actual test inside ||| run test	count=1
arg	out ||| limit	count=1
function	[function_1] entity for ||| [function_2] [function_1]	count=2
class	send a client ||| agent	count=1
function	message receiver ||| message	count=1
class	command's ||| command	count=1
function_arg	decode a [arg_2] ||| [function_1] [arg_2]	count=9
arg	value ||| val	count=3
arg	exitcode the ||| exitcode signal	count=1
arg	writers and list of ||| writers	count=1
function	the user to ||| replacement string	count=1
arg	username ||| username password	count=1
function	load a file ||| load	count=1
class	mark ||| string list mailbox	count=1
arg	return ||| avatarid	count=1
function	is ||| get	count=1
arg	msgs the contents ||| msgs	count=1
function	c{datetime time} object ||| combine date and	count=1
function	satellite information from ||| fix	count=1
function	on set the c{_deprecated_info} ||| get	count=1
arg	digest for the ||| ha1 ha2 algo psznonce	count=1
class	this proxy has been ||| transport proxy	count=3
arg	object ||| obj	count=2
class	remote ||| view point	count=1
function	class or type of ||| class	count=1
function	to a channel ||| channel	count=2
function	delegation if ||| discover authority	count=1
function	master index of what ||| query clientinfo	count=1
function	list of [function_2] ||| [function_1] [function_2]	count=1
arg	the given option ||| option	count=1
class	build ||| apidocs script	count=1
function	warnings ||| warnings	count=2
class	the open process ||| process	count=1
function	[function_1] authentication challenge ||| [function_2] [function_1]	count=4
function_arg	[function_1] mailbox ||| [arg_2] [function_1]	count=1
class	has changed since ||| log	count=1
class	task is complete ||| cooperative task	count=1
function	the contact list and ||| contact changed	count=1
function	fires ||| fire	count=1
function	object from a ||| from	count=1
function_arg	address of [arg_2] ||| [function_1] domainurl [arg_2]	count=1
module	next message added ||| mail	count=1
class	@param ||| sslcontext factory	count=1
function	the group id ||| get group id	count=2
arg	command was received ||| command	count=1
function	set the c{self ||| set	count=1
class	information object ||| information	count=1
function	resolver instance ||| resolver	count=1
class	distributed manager which ||| worker reporter	count=1
arg	l{servicemanager}, using ||| jid	count=1
module	predetermined ||| python	count=1
function	response [function] corresponding to ||| [function]	count=1
class	the reactor ||| glib reactor	count=1
class	store the message ||| message	count=1
function	send a response c{message} ||| send	count=1
class	the ||| dispatcher	count=1
function	from this [function_2] ||| [function_1] [function_2]	count=1
function	append ||| append	count=1
arg	@param prefixes dictionary ||| prefixes	count=1
function_arg	[function_1] information dictionary ||| [function_1] [arg_2]	count=2
function	responding to ||| respond to	count=2
arg	mname [arg_2] ||| [arg_1] [arg_2]	count=1
function	the number ||| count	count=1
function	the global reactor if ||| maybe global reactor	count=1
function	to the specified wire ||| to string	count=1
function	session cookie ||| get session	count=1
arg	[arg_1] refer to ||| [arg_1] [arg_2]	count=1
function	an l{iprocesstransport} ||| process	count=1
function	import ||| import	count=1
function	[function_1] error ||| [function_1] [function_2]	count=6
class	database ||| database	count=1
function_arg	sanity of [arg_2] ||| [function_1] [arg_2]	count=1
class	returns ||| server	count=1
function	directory named similarly ||| test directory	count=1
function	a request [function_2] ||| [function_2] [function_1]	count=4
function	normal prefix to ||| log prefix	count=1
arg	provider @param [arg] ||| reactor [arg]	count=3
function_arg	[function_1] given sender ||| [arg_2] [function_1]	count=4
arg	chatui ||| group chatui	count=1
arg	domain to connect to ||| domain factory	count=1
function	emit a ||| emit	count=1
function	unregister a ||| unregister reap	count=1
class	marked for ||| imailbox pop3	count=1
module	fire [module] ||| [module]	count=3
arg	write mode [arg] them ||| [arg]	count=1
arg	name and account ||| name	count=2
class	signal handlers for the ||| signal reactor	count=1
module	for drawing on the ||| conch insults	count=1
module	a list of decorators ||| python	count=1
function	line including ||| to line	count=2
function	restart all processes ||| restart all	count=1
class	context [class_2] ||| [class_2] [class_1]	count=3
function	it as ||| get replacement	count=1
module_class	of the end of [module_1] [class_2] ||| [module_1] [class_2]	count=4
function	of all child elements ||| elements by	count=1
class	if any and log ||| base	count=1
function	to the specified wire ||| to	count=1
function	log prefix to use ||| log prefix	count=1
arg	a string representing ||| string	count=1
class	component wishes to bind ||| connect component authenticator	count=1
class	file's [class_2] ||| python [class_1] [class_2]	count=1
module	to compare ||| spread	count=1
class	proxy and a ||| proxy	count=1
function_arg	send [arg_2] ||| [function_1] [arg_2]	count=18
class	random value suitable ||| digest	count=1
function	create and return ||| get	count=1
function	removing ||| remove	count=1
function_arg	write some data ||| write data	count=4
function	dcc ||| dcc	count=4
function	surround a ||| get replacement	count=1
class	amp ||| box dispatcher	count=2
arg	in progress ||| messagetype	count=1
function	[function_1] responding to ||| [function_2] bad request [function_1]	count=1
arg	the query ||| query	count=4
class	clientfromstring}, [class] ||| endpoint string parser [class]	count=3
class	a file ||| file	count=3
module	ask the user ||| conch ssh	count=2
class	create ||| tlsmemory biofactory	count=1
module	the number of available ||| python	count=1
class	this mailbox ||| mailbox imap	count=1
class	the message ||| maildir mailbox append message task	count=1
class	message ||| mailbox append message	count=1
function_arg	then run [arg_2] ||| [function_1] with patches [arg_2]	count=1
function_arg	logging to [arg_2] ||| [function_1] [arg_2]	count=1
arg	called by l{h2stream} objects ||| streamid	count=1
arg	protocol to a ||| factory timeout	count=1
arg	[arg_1] indication of ||| [arg_2] [arg_1]	count=1
function	observer ||| add observer	count=1
arg	corresponding to this ||| cls	count=2
function	as an ||| replacement	count=1
module	the channel ||| conch	count=2
function_arg	[function_1] address the ||| [arg_2] [function_1]	count=1
function	and return l{none} ||| operation	count=1
function	resource ||| resource	count=1
module	for use ||| cred	count=1
function	[function_1] a global ||| [function_2] [function_1]	count=1
module	that the ||| trial	count=1
function	accepted our msg_channel_open request ||| channel open confirmation	count=1
function	instance to be current ||| instance	count=1
function_arg	given octets ||| write octets	count=1
function	child process ||| child	count=2
function	as expressed by ||| waiters	count=1
function_arg	[function_1] [arg_2] ||| [function_1] stream [arg_2]	count=4
function_arg	a file [arg_2] ||| [function_1] [arg_2]	count=2
function	warnings [function_2] ||| [function_2] [function_1]	count=2
class	wrap ||| command locator	count=1
function	an alternative ||| get replacement	count=1
module	using c{*args}, and ||| names	count=1
function	[function_1] client and ||| [function_2] [function_1]	count=2
function	for sending messages ||| call remote	count=1
function	retrieve an ||| get component	count=1
module	each message in the ||| mail	count=1
arg	privatekeyfilename ||| privatekeyfilename certificatefilename sslmethod _contextfactory	count=1
function	per envelope this ||| sent mail	count=1
function	a gsv ||| fix gsv	count=1
function	drive a ||| drive worker	count=1
module_class	this conversation with ||| words im conversation	count=1
function	should be logged ||| should	count=1
function	request [function_2] ||| [function_2] [function_1]	count=13
module	called ||| insults	count=1
arg	or 1 ||| code resp numok	count=2
function	non-blocking socket using ||| internet socket	count=1
class	[class] into ||| [class]	count=1
module	c{method} with given arguments ||| web	count=1
module	terminal ||| insults	count=1
class	[class] top of ||| iraw datagram [class]	count=2
function_arg	arguments using this ||| make arguments cls	count=1
function	types of newlines encountered ||| newlines	count=1
function	or of ||| or	count=1
module	jabber id that ||| jabber	count=1
function	set up the ciphers ||| set	count=1
class	of a ||| credential	count=1
function	payload of a ||| payload	count=1
function	mapping which maps ||| mapping	count=1
function	check against ||| check key	count=1
class	port is listening for ||| ilistening port	count=1
function	a notify ||| notify	count=1
arg	hostname [arg_2] ||| [arg_2] [arg_1]	count=4
function	has ||| complete	count=1
arg	for the acknowledgement then ||| proto	count=1
class	@param ||| filtering log observer	count=1
module	they have the ||| web	count=1
function	c{function} ||| app function	count=1
function	extract frames from ||| frames	count=1
function	representing a progress bar ||| bar	count=1
class	the name of my ||| tuntap port	count=1
arg	run session between ||| noisy	count=1
class	a hashed ||| hashed	count=1
function	portal for the ||| portal	count=1
function	a pwd command ||| parse pwdresponse	count=1
function_arg	send a user ||| send user	count=2
function	closed? ||| closed	count=1
function	a channel ||| channel open	count=1
module	[module] stdin ||| [module]	count=3
arg	class object c{classobj}, ||| classobj prefix	count=1
arg	this file object ||| file	count=1
function	attribute as being ||| attribute	count=1
class	when this task ||| task	count=1
module	display my syspath and ||| python	count=1
function_arg	left the [arg_2] ||| [arg_2] [function_1]	count=3
class	selected ||| imap4client	count=5
function	deprecated to ||| deprecated	count=1
function	c{name} ||| by name	count=1
class	a ||| name	count=1
function	child [function_2] ||| [function_1] [function_2]	count=2
module	to this ||| internet	count=2
function	receive a msg_kexinit ||| kexinit	count=1
function	find the [function_2] ||| [function_1] [function_2]	count=9
arg	and ||| reactor	count=1
function	locally ||| local	count=1
class	produce data for the ||| ipull producer	count=1
function_arg	doc chunks [arg_2] ||| [arg_2] [function_1]	count=1
function	that no additional ||| allow no more	count=2
function	monitored for output events ||| writers	count=1
class	of this ||| base	count=1
arg	and some data that ||| data	count=1
arg	a sentence with parsed ||| sentencedata	count=1
arg	domain to ||| domain	count=1
function	reactor ||| run reactor	count=1
function	nonce parameter of a ||| generate nonce	count=1
function_arg	[function_1] a client ||| [function_1] [arg_2]	count=3
function	[function_1] a channel ||| [function_2] [function_1]	count=4
function	of messages waiting to ||| waiting	count=1
function	parse common arguments for ||| parse	count=1
function	number ||| get number	count=1
module_class	the [class_2] ||| [module_1] ideprecated httpchannel to [class_2]	count=1
function	for subnegotiations ||| subnegotiation	count=1
function	query to ||| query	count=1
module	of [module] ||| [module]	count=13
function	mirc control sequence ||| to mirccontrol codes	count=1
class	the given c{key} it ||| mem cache protocol	count=1
function	return the base ||| get	count=1
function	has been made ||| made	count=2
module	of some ||| mail	count=1
function	child elements of ||| elements by	count=1
module	the ||| internet	count=54
class	register ||| pollable write pipe	count=1
function	mapping adding both ||| log level mapping	count=1
arg	id a [arg_2] ||| [arg_1] [arg_2]	count=1
function	selected ||| fetch	count=3
function	as a ||| data	count=1
module	disconnect the ||| conch	count=1
function	string to ||| from string	count=1
function	tell the contact list ||| contact	count=1
module	out [module] multiple precision ||| [module]	count=1
arg	size the ||| size	count=1
function	an unused ||| unused test	count=1
function_arg	[function_1] readers ||| [arg_2] [function_1]	count=2
function	the [function] in the ||| [function]	count=1
arg	buddyid ||| buddyid	count=1
function	if any of the ||| get	count=1
arg	the ||| message	count=1
function	a cdata element collect ||| end cdata	count=1
function_arg	[function_1] a pair ||| [function_1] callbacks callback errback [arg_2]	count=1
function	prefix log entries with ||| log prefix	count=3
class	user ||| auth	count=1
class	my class ||| tuntap port	count=1
module	using the ||| protocols jabber	count=1
class	the request to execute [class_1] [class_2] ||| conch [class_1] [class_2] exec	count=2
arg	local files ||| files remotepath single	count=1
class	the dictionary ||| dict	count=1
function	process [function] ||| register reap process [function]	count=2
arg	request ||| request	count=10
function_arg	coerce a [function_1] [arg_2] failure ||| trial exc [function_1] [arg_2]	count=1
function	server sent a malformed ||| esmtp authmalformed	count=1
function	failed [function_2] ||| [function_2] [function_1]	count=1
arg	a numeric ||| interface	count=1
function	portal for ||| portal	count=1
class	module object ||| module	count=1
class	create a ||| credential	count=1
function	list of [function_2] ||| cred portal [function_1] [function_2]	count=4
module_class	[module_1] resolved ||| [module_1] [class_2]	count=8
function_arg	run the [arg_2] ||| [arg_2] [function_1]	count=1
function	using ||| build service manager	count=2
class	we are [class_2] ||| [class_1] [class_2]	count=2
function	received a msg_userauth_success ||| userauth success	count=1
class	a ||| digest credential	count=2
function	uncache [function_2] ||| [function_2] [function_1]	count=4
module_class	once the [class_2] ||| [module_1] [class_2]	count=2
module	for the connection ||| conch ssh	count=1
module	[module_1] the failure ||| [module_1] [module_2]	count=4
function	the failure that represents ||| failure	count=1
function	header in c{self ||| header received	count=1
arg	every time ||| key val	count=1
function_arg	extended [arg_2] ||| [function_1] [arg_2]	count=1
module_class	[module_1] current remote ||| [module_1] [class_2]	count=2
function	[function_1] queue or ||| [function_2] [function_1]	count=3
function	process ||| get process	count=1
function	sent a malformed authentication ||| esmtp authmalformed	count=1
function	will use the endpoint ||| endpoint	count=1
module_class	[module_1] [class_2] ||| [module_1] [class_2]	count=1398
arg	or 1 addresses ||| code resp numok addresses	count=2
function_arg	[function_1] this person ||| [arg_2] [function_1]	count=3
function	return if loopback mode ||| get loopback mode	count=1
function	writing or was lost ||| write or	count=1
arg	tell me what ||| protoclass bucketfilter	count=1
arg	an iterable ||| addr	count=1
function	return ||| get	count=90
arg	name from the ||| name	count=1
function	[function_1] the service ||| [function_1] [function_2]	count=2
function	bytes received either deliver ||| received	count=1
arg	in the given version ||| version format	count=2
arg	module and ||| module	count=1
function	c{crypto publickey} object similar ||| object	count=1
function_arg	[function_1] to c{message} ||| [arg_2] [function_1]	count=7
arg	name and account client ||| name client	count=2
module	constructs a pre-built ||| jabber	count=1
function	to consider it ||| string	count=1
class	with l{callremote}, ||| dispatcher	count=1
function_arg	[function_1] id a ||| [arg_2] [function_1]	count=1
function_arg	l{bytes} @param msgs ||| init msgs	count=1
class	whether signal handlers should ||| signal reactor	count=1
module_class	[module_1] alias to ||| [module_1] [class_2]	count=4
function	list of decorators and ||| get	count=1
arg	the given color ||| message color	count=1
function	the disconnect flap ||| disconnect	count=1
function_arg	[function_1] [arg_2] 0 then this should ||| [function_1] [arg_2]	count=9
class	in their original case ||| insensitive dict	count=1
class	response minus the ||| error response	count=1
function	and resume copying bytes ||| resume producing	count=1
class	create ||| connection pool	count=1
module	iteration ||| internet	count=1
arg	based on the given [arg_1] [arg_2] ||| [arg_1] [arg_2]	count=11
function	[function_1] encoder if ||| iencoding resource [function_1] [function_2]	count=2
class	to an authentication ||| auth	count=1
arg	host a hostname ||| host port timeout	count=1
function	connection to the ||| connection	count=1
class	l{irenderable} to allow one ||| element	count=1
class	return ||| reactor base	count=1
arg	testcase ||| testcase expected	count=1
module	with the trial ||| trial _dist	count=1
function	[function_1] or l{ipv6address} ||| [function_2] [function_1]	count=1
class	parser function ||| parser	count=1
function	iterable of the elements ||| elements	count=1
function	deferred has ||| cancel	count=1
function	i{kexinit} ||| kex init	count=1
function	into the given generator ||| into generator	count=1
function_arg	[function_1] default ||| [arg_2] [function_1]	count=4
function	all pending requests ||| waiters	count=2
function	c{pauseproducing} and resume ||| resume	count=1
function	data ||| data	count=15
function	rotate ||| rotate	count=2
arg	proto ||| proto executable errflag	count=1
class	processes reboots etc ||| name generator	count=1
function	initialize a session with ||| init	count=1
arg	the given instance ||| instance	count=1
module	record to this ||| python	count=2
function	line ||| parse directory line	count=1
function	setup ||| set	count=1
function	with a basename of ||| sibling	count=1
class	task completed with ||| maildir mailbox append message task	count=1
arg	performing the given option ||| option	count=1
function	set ||| set unjellyable for	count=1
function_arg	[function_1] [arg_2] bio and then read ||| [function_1] [arg_2]	count=6
arg	into a data frame ||| data	count=1
module	the given object has ||| spread	count=1
function	messages which ||| messages	count=1
arg	testcase the ||| testcase	count=1
class	that we will stop ||| itelnet transport	count=1
function	[function_1] host ||| [function_1] [function_2]	count=1
arg	[arg_1] of ||| [arg_2] [arg_1]	count=1
function	attempt ||| client	count=1
arg	member to the list ||| member	count=2
function	called when a class ||| class	count=1
function	a result at this ||| result	count=1
module	to it using ||| names	count=1
arg	testcase the l{testcase} instance ||| testcase	count=1
arg	[arg_1] strings to ||| [arg_2] [arg_1]	count=2
class	l{ampbox} ||| ibox sender	count=1
function	removes our [function] so ||| [function]	count=1
arg	file @type file ||| file consumer transform	count=1
module	running on set the ||| python	count=1
module	has ||| conch ssh	count=1
function	get a cookie ||| get cookie	count=3
function	more body data is ||| body data finished	count=1
module	a number of ||| python	count=2
class	register ||| push producer	count=1
arg	a query ||| query timeout queriesleft	count=1
function	append given ||| append	count=1
arg	an l{imessagepart} provider ||| main subtype attrs	count=1
class	certificate for the ||| certificate	count=1
function	for a deprecated api ||| get replacement	count=1
arg	the given pattern ||| pattern	count=1
function	all_record [function_2] ||| [function_2] [function_1]	count=2
function	data for the consumer ||| resume producing	count=1
class	method called ||| ipositioning receiver	count=2
class	checks on the instance ||| case	count=1
function	decorators and the object ||| get	count=1
function	wsgi application object to ||| wsgi	count=1
function	[function_1] deprecated ||| [function_2] [function_1]	count=6
function	id of ||| id	count=1
arg	key to lookup ||| key	count=1
function	the command queue ||| command queue	count=2
function	check the [function_2] ||| [function_1] [function_2]	count=4
class	destination [class_2] ||| [class_2] [class_1]	count=2
function	cleans the current sentence ||| current sentence	count=1
function	per envelope this will ||| mail	count=1
function	successful ||| successful	count=2
module	[module] authorization ||| [module]	count=1
function	the service is ||| service	count=1
function_arg	[function_1] [arg_2] ||| [function_1] answers [arg_2]	count=3
function	exists ||| exists	count=3
module	extracting the location ||| web	count=1
class	other side wants to ||| sshconnection	count=1
class	a string which ||| generator	count=1
arg	file directly this generally ||| file	count=1
function	is deprecated ||| is	count=1
arg	from a reactor and ||| reactor	count=1
function	line for a ||| line	count=1
class	invoke ||| box dispatcher	count=2
function	and puts method names ||| method names to	count=1
function_arg	remove a [arg_2] ||| [arg_2] [function_1]	count=2
function	bytes sent ||| sent length	count=1
function_arg	given a blob of [function_1] [arg_2] ||| internet key pair [function_1] [arg_2]	count=3
class	see l{protocol protocol ||| dcc file receive basic	count=1
function	asynchronously invoke ||| call	count=1
function	quote an iterable of ||| quote	count=1
arg	we're connected to ||| queued	count=1
arg	called to indicate the ||| width height	count=1
arg	a pre-built l{servicemanager}, ||| jid password	count=1
class	has been ||| deferred queue	count=1
module_class	[module_1] run is ||| [module_1] [class_2]	count=6
module	calls to this function ||| mail	count=1
function	which take a value ||| parameters	count=1
arg	a pre-built ||| jid	count=1
module_class	number and column of [module_1] [class_2] character parsed ||| [module_1] [class_2]	count=1
function_arg	@param mbox a ||| init mbox msg	count=1
function	test inside ||| test	count=1
function	body ||| get body	count=1
function_arg	[function_1] [arg_2] ||| [function_1] unixdatagram address [arg_2]	count=6
function	a position is ||| position	count=1
module	object with ||| spread	count=1
module_class	other [class_2] ||| [class_2] [module_1]	count=6
module	the clients wants ||| conch	count=1
function	contains test ||| test case	count=1
function	[function] with ||| report [function]	count=1
class	l{filedescriptor} for monitoring ||| glib reactor base	count=2
function	reverse the above mapping ||| reverse log level mapping	count=1
function	from [function_2] ||| [function_2] [function_1]	count=7
function	remove a specific ||| remove identity	count=1
class	the key matches ||| key database	count=1
class	the task completed ||| message task	count=1
function_arg	[function_1] [arg_2] ||| [function_1] callbacks callback errback [arg_2]	count=4
function_arg	[function_1] _switchbox ||| [arg_2] [function_1]	count=1
function	an account ||| register account	count=1
arg	testcase ||| testcase	count=1
class	value ||| digest credential	count=1
class	side requested ||| sshconnection	count=1
arg	write mode [arg] ||| [arg]	count=1
function	remove the active ||| stop reading and writing	count=1
function	receive [function_2] ||| [function_1] [function_2]	count=1
class	the underlying pkey object ||| key	count=1
function	send ||| copy	count=1
class	a remote [class_2] ||| [class_2] [class_1]	count=1
module	part of ||| mail	count=1
function	compute the string ||| compute host	count=1
function	thread from ||| to thread	count=1
function_arg	[function_1] a message ||| [arg_2] [function_1]	count=8
class	a box ignoring ||| box	count=1
class	l{deferred} by scheduling ||| deferred	count=1
function	it as an ||| string	count=1
function	a deprecated api with ||| string	count=1
class	indicates that the ||| imailbox imaplistener	count=1
function	segments between a ||| segments	count=1
function	of the disposition ||| disposition	count=1
module	to the jabber ||| words protocols jabber	count=2
function	a string key for ||| key	count=1
function_arg	[function_1] a service ||| [function_1] [arg_2]	count=1
class	[class_1] time ||| [class_2] [class_1]	count=6
class	the given configuration ||| app logger	count=1
class	the ||| cert base	count=2
arg	query checking for ||| query timeout	count=1
function	message-id exists in the ||| article exists	count=1
arg	username [arg_2] ||| [arg_1] [arg_2]	count=1
function	to consider ||| get replacement string	count=1
class	and selected states ||| imap4client	count=5
arg	a given ||| protocol message	count=1
module	to ||| spread	count=3
module	using the ||| words protocols jabber	count=1
class	heading ||| heading	count=1
class	xml ||| xml	count=2
class	visible satellite ||| nmeaadapter	count=1
module	my syspath ||| python	count=1
arg	request to another user ||| user	count=1
function_arg	[function_1] message is ||| [arg_2] [function_1]	count=4
arg	checks to ||| pubkey	count=1
module	write status of ||| mail	count=1
function_arg	[function_1] strports description ||| [arg_2] [function_1]	count=1
function	retrieve ||| get	count=15
function	body has been completely ||| body data received deferred	count=1
class	run ||| test case	count=2
function	identity for ||| identity	count=1
class	[class_1] securing ||| [class_2] [class_1]	count=2
class	a ||| python path	count=1
arg	hints a ||| hints	count=1
module	and ||| scripts	count=1
arg	from the given instance ||| instance methodname default	count=1
function	for correct parsing ||| mode params	count=1
function	specified message-id [function_2] ||| [function_2] [function_1]	count=3
arg	use to communicate with ||| startthread	count=1
class	in the mailbox ||| string list mailbox	count=2
class	jar ||| agent	count=1
function	user ||| get	count=1
class	the task completed ||| append message task	count=1
class	non ||| random factory	count=1
function	new ||| make	count=1
function	the type ||| string type	count=1
function	message ||| code to message	count=1
function	length ||| got length	count=1
arg	byte string into this ||| strio	count=1
arg	status and an optional ||| status	count=1
module	extracting the location header ||| web	count=1
class	i ||| dcc	count=1
arg	the reactor ||| reactor	count=1
function	[function_1] state ||| [function_2] [function_1]	count=21
function	also ||| made	count=1
class	test case ||| test case	count=1
function	listen on ||| listen	count=4
arg	the given test ||| test todo	count=1
class	add ||| zsh arguments generator	count=1
function	a received header ||| received header	count=2
class	the message [class_2] ||| [class_2] [class_1]	count=6
function	to the [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] sequence ||| [function_1] [function_2]	count=1
module	internal method ||| spread	count=1
class	message ||| maildir mailbox append message task	count=1
function	add a ||| add proto	count=2
module	all news ||| news	count=1
arg	at the given level ||| level format	count=1
class	file's last ||| zip	count=1
class	the speed ||| base speed	count=1
class	authentication scheme ||| iclient authentication	count=2
class	called by the xmlstream ||| listen authenticator	count=1
module	type ||| python	count=1
function	was skipped for ||| add skip	count=1
function	values decoded from ||| from	count=1
function	called when a user ||| irc	count=1
arg	to submodules here ||| mn	count=1
arg	c{classobj}, returns ||| classobj prefix	count=1
function	the root ||| opt	count=1
function	of a single ||| stop	count=1
function	[function_1] send buffer ||| [function_2] [function_1]	count=4
function	destination ||| destination	count=1
arg	the given sender ||| sender	count=1
function	post [function_2] ||| [function_2] [function_1]	count=2
function	similar to ||| write to	count=1
function_arg	get a [arg_2] ||| [function_1] [arg_2] nodeid nodeattrs	count=1
arg	keys ||| keys value	count=1
function_arg	failed and [arg_2] ||| [arg_2] [function_1]	count=1
function	a unix ||| parse unix	count=1
module	in the [module_2] ||| [module_1] [module_2]	count=2
arg	@param proc an l{iprocesstransport} ||| proc	count=1
function	[function_1] checkers ||| [function_2] [function_1]	count=2
function	using a thread ||| defer to thread	count=1
module	context ||| application runner	count=2
function	delay and the retry ||| delay	count=1
function	unix client parameters ||| parse client unix	count=3
function	to the ||| bounce to	count=1
module	the avatar if any ||| conch	count=1
function	child with [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] specified text ||| [arg_2] [function_1]	count=5
function	default domain ||| default	count=1
function	[function_1] hemisphere ||| [function_2] [function_1]	count=4
arg	mbox ||| mbox	count=2
function	object ||| deprecated	count=1
function	[function_1] lookup ||| [function_2] [function_1]	count=2
function	cookie ||| add cookie	count=1
arg	when the speed is ||| speed	count=1
module	to set the ||| internet	count=1
function	position [function_2] ||| [function_2] [function_1]	count=1
function	of that interface ||| proxy for interface	count=1
function	registration [function_2] ||| [function_2] [function_1]	count=2
function	path factory which ||| path factory	count=2
function_arg	[function_1] factory to ||| [function_1] tcp port [arg_2]	count=1
class	return ||| imulticast transport	count=2
function	absolute url ||| url	count=1
module	the responses to the ||| conch	count=1
function	available personal [function_2] ||| [function_1] [function_2]	count=1
function	to a method ||| add	count=1
arg	or a ||| message	count=1
function	i{content-type} parameters unquoted as ||| unquoted attrs	count=1
function	initial [function_2] ||| [function_1] [function_2]	count=1
function	data [function] to ||| body data [function]	count=1
class	to pop3 ||| pop3	count=1
function	is currently happening move ||| quiescent	count=1
arg	[arg_1] name ||| [arg_1] [arg_2]	count=5
function	received ||| descriptor received	count=2
class	win32 event to the ||| win32reactor	count=1
function	for [function_2] ||| [function_2] [function_1]	count=8
function_arg	parent [arg_2] ||| [function_1] [arg_2]	count=1
class	performing the ||| itelnet transport	count=1
module_class	jabber [class_2] ||| [module_1] [class_2]	count=1
function	formatted log line ||| log formatter	count=1
function	return their string representations ||| clean	count=1
function	@return a c{dict} ||| make excludes dict	count=1
arg	close to bits bits ||| bits	count=1
function	[function_1] traceback with ||| [function_1] detailed [function_2]	count=1
class	checks on the ||| synchronous	count=2
function	return ||| clean	count=1
module	the protocols and factories ||| web	count=1
class	other l{firsterror} instances is ||| first error	count=1
function	get the [function_2] ||| [function_1] [function_2]	count=19
arg	to be ||| manager	count=3
function	to match ||| match failed	count=1
function	set the c{_deprecated_info} ||| deprecated	count=1
function	object ||| key	count=1
function	key exchange ||| kex	count=2
module	that the test ||| trial	count=1
function	put a ||| put child	count=1
function_arg	[function_1] given work ||| [function_1] [arg_2]	count=1
function	[function_1] the socket ||| [function_1] [function_2]	count=1
function_arg	[function_1] [arg_2] ||| [function_1] domainurl [arg_2]	count=3
function	connection from [function_2] ||| [function_1] [function_2]	count=1
function	an identifier associated ||| name	count=1
function_arg	write some [arg_2] ||| [function_1] [arg_2]	count=4
function	which share ||| ssh kex dh gex	count=1
arg	namespace the namespace for ||| namespace source observer	count=1
function_arg	[function_1] passed as ||| [function_1] [arg_2]	count=2
module	return a list of ||| python	count=1
function_arg	[function_1] creator the ||| [arg_2] [function_1]	count=1
class	string which is ||| maildir	count=1
function	contact list and ||| contact	count=2
function	pre-built l{servicemanager}, ||| manager	count=1
function	return the ||| get	count=25
class	request or create ||| irequest	count=1
function	prepare ||| prepare extensions	count=1
class	load ||| py3test loader	count=4
function	split a string ||| split	count=1
function_arg	verify a [arg_2] ||| [function_1] [arg_2]	count=1
function	tell the contact ||| contact	count=1
class	with the credentials represented ||| credentials	count=1
module	to [module_2] ||| [module_1] [module_2]	count=2
function	like a variable name ||| name	count=1
function_arg	join [arg_2] ||| [function_1] [arg_2]	count=1
class	gotoverview() is ||| nntpclient	count=1
class	which ||| maildir	count=1
arg	@param request the l{irequest} ||| request	count=1
function	a l{bucket} corresponding ||| get bucket	count=1
arg	an int @param fp ||| fp	count=1
function	as a positive ||| success	count=1
class	this port is listening ||| ilistening port	count=1
function	print ||| end line	count=2
function	python session [function] attribute ||| add unique [function]	count=1
function	next file in ||| next	count=1
function	the path ||| path	count=1
class	unique across all calls ||| generator	count=1
function	to prefix ||| to prefix	count=2
class	a web context factory ||| to current policy	count=1
function	the service ||| service	count=5
function	polite text exhorting ||| replacement	count=1
class	l{iprocesstransport} ||| monitor	count=1
function	initialize me with a ||| init	count=1
class	certificate ||| cert	count=1
function	personal namespaces ||| get personal namespaces	count=2
arg	incoming mac values ||| seqid data mac	count=1
function	using a thread from ||| defer to thread	count=1
module	(as long as that ||| trial	count=1
class	[class] address ||| [class]	count=1
function	set which local ||| set	count=1
function_arg	select [arg_2] ||| [arg_2] [function_1]	count=5
function	list to ||| list	count=1
class	for each alias and ||| alias group	count=1
arg	work on this ||| work	count=1
module	number of available threads ||| python	count=1
function	request the server side ||| request ssi	count=1
function_arg	[function_1] work ||| [function_1] [arg_2]	count=1
function	message type may be ||| message type	count=1
function	from a l{str} or ||| from	count=1
arg	acknowledgement then initiate the ||| proto	count=1
function	load absolutely ||| load	count=1
arg	description ||| description	count=1
function	consumer ||| resume producing	count=1
arg	the command to get ||| command	count=1
function	a property as deprecated ||| deprecated property	count=1
arg	creator the l{_isshconnectioncreator} provider ||| creator command protocolfactory commandconnected	count=1
class	called by the xmlstream ||| authenticator	count=2
function	connection is made ||| connection made	count=5
class	in progress ||| ihost	count=1
function	percent-encode [function_2] ||| [function_2] [function_1]	count=2
module	the connection to the ||| words protocols	count=1
module	we ||| conch ssh	count=6
class	l{httpchannel} has determined the ||| ideprecated httpchannel to request	count=1
function	[function_1] also ||| h2connection [function_1] [function_2]	count=3
module	element items in ||| words xish	count=2
module	the first blob in ||| conch	count=1
function	[function_1] closed ||| [function_2] [function_1]	count=2
function_arg	[function_1] progress ||| [function_1] message type [arg_2]	count=5
function	api ||| get replacement	count=1
module_class	the reactor may ||| internet reactor	count=1
class	[class] not ||| [class]	count=1
function	retrieve the [function_2] ||| [function_1] access [function_2]	count=1
class	an adapter ||| componentized	count=1
function	is a directory ||| directory	count=1
function	a thread from ||| to thread	count=1
function	return a new ||| get	count=2
function	listening on ||| listening	count=1
function	received ||| amp box received	count=1
function	guess the type of ||| guess string type	count=1
function	[function_1] child resource ||| [function_1] [function_2]	count=2
function	stream [function_2] ||| [function_2] [function_1]	count=8
arg	caller function or c{modulename} ||| modulename	count=1
function	response to [function_2] ||| [function_1] [function_2]	count=1
function	[function_1] destination ||| [function_1] [function_2]	count=1
function	unjelly frozenset using ||| unjelly frozenset	count=2
arg	or 1 addresses ||| numok addresses	count=1
function_arg	resume request [arg_2] ||| [function_1] [arg_2]	count=1
function	ssl client parameters ||| parse client ssl	count=3
arg	the given namespaces ||| filename globals locals	count=1
module	time the ||| internet	count=1
function	the user to consider ||| get replacement string	count=1
function_arg	install [arg_2] ||| [arg_2] [function_1]	count=1
module	object has support for ||| spread	count=1
function	progress bar ||| stat bar	count=1
module_class	this platform? @return boolean [module_1] [class_2] not ||| [module_1] [class_2]	count=2
function	[function_1] data is ||| [function_1] [function_2]	count=4
arg	file @type file ||| file	count=1
function	[function] matching ||| get raw [function]	count=3
function_arg	the given [arg_2] ||| [function_1] [arg_2]	count=1
arg	number ||| number	count=1
class	of file descriptors currently ||| fdset	count=1
function	test cases ||| test	count=1
function	is no ||| connection	count=1
arg	received to look up ||| portonserver portonclient	count=1
function	call remote xml-rpc c{method} ||| call remote	count=1
function	write it to ||| write	count=1
function	[function_1] an entity ||| [function_1] [function_2]	count=2
function	using the ||| service	count=1
class	sending messages via ||| dispatcher	count=1
arg	write out a ||| write	count=1
function	from the attributes and ||| from message	count=1
function	ip ||| ip	count=1
function	to frame the ||| to	count=2
arg	query checking for ||| query timeout queriesleft	count=1
class	valid ||| ident server	count=1
arg	mailbox this command ||| mailbox	count=1
function	the sign [function_2] ||| [function_2] [function_1]	count=2
function	serial ||| serial	count=1
function	a running process corresponding ||| running	count=1
class	failed ||| tlsmemory bioprotocol	count=1
function_arg	[function_1] iterator to ||| [function_1] [arg_2]	count=2
arg	name see ||| name type	count=1
function	children not descendants of ||| children	count=1
function	peer ||| get peer	count=1
module	callback notifying [module] user of ||| [module]	count=1
function	file descriptor ||| file descriptor	count=2
function	[function_1] factory ||| [function_2] [function_1]	count=7
function	helper to build a ||| build failure	count=1
function_arg	xml [arg_2] ||| [arg_2] [function_1]	count=2
class	invoke it ||| box dispatcher	count=1
class	to it using c{*args}, ||| resolver	count=1
function	invoke ||| remote	count=1
function	[function_1] new user ||| [function_2] [function_1]	count=2
function	the body of this ||| body	count=1
function	pkey ||| key	count=1
function_arg	received [arg_2] ||| [function_1] broker message [arg_2]	count=3
function	monitored for input events ||| readers	count=1
function	traceback with detailed locals ||| detailed traceback	count=1
arg	domain the domain ||| reactor service domain factory	count=1
function	the c{_deprecated_info} flag ||| get	count=1
function_arg	assert [arg_2] ||| [function_1] result [arg_2]	count=3
function	returns the group ||| get group	count=1
function	header in ||| header received	count=1
function	as being deprecated ||| deprecated	count=1
function_arg	[function_1] creator the ||| [function_1] [arg_2]	count=1
function	a namespace [function_2] ||| [function_1] [function_2]	count=5
function	all child elements of ||| elements by tag name	count=1
function_arg	[function_1] readers and ||| [function_1] [arg_2]	count=2
function	retrieve the size in ||| size	count=1
arg	c{message} to a given ||| protocol message	count=1
class	a secured ssh ||| sshcommand client endpoint	count=2
module	version [module] an ||| [module]	count=1
function	thread from the given ||| thread	count=1
arg	return a c{newpath} that ||| newpath encoding	count=1
function	for ssi ||| ssi	count=1
module	c{method} with given ||| web	count=1
arg	user in ||| user	count=1
class	dispatch ||| dispatcher mixin	count=1
function	a quit command ||| quit	count=1
arg	reactor an l{ireactortcp} provider ||| reactor port backlog interface	count=3
function	send the disconnect flap ||| disconnect	count=1
class	file [class_2] ||| [class_1] [class_2]	count=6
function	[function_1] stopped either ||| [function_2] [function_1]	count=3
function	a callback for ||| add callback	count=1
class	'message' in the ||| tree reporter	count=1
function	as deprecated to deprecate ||| deprecated	count=1
class	called when l{httpchannel} ||| ideprecated httpchannel to request interface	count=1
function	[function_1] person for ||| [function_1] [function_2]	count=1
class	suitable for ||| digest credential factory	count=1
function	user to consider ||| get replacement string	count=1
module	socket ||| internet iocpreactor	count=2
module	the passphrase if the ||| conch client	count=1
module	mdtm the ||| protocols	count=1
module	the file ||| internet	count=2
function	[function_1] info ||| [function_1] [function_2]	count=2
class	has been canceled ||| queue	count=1
arg	an oscaruser ||| wantack autoresponse	count=1
function	[function_1] of responding ||| [function_2] to bad request [function_1]	count=2
module	[module] no ||| [module]	count=1
function	[function_1] prefix ||| [function_1] [function_2]	count=11
function_arg	[function_1] c{deferred} does ||| [function_1] [arg_2]	count=1
arg	decorators are ||| decorators	count=1
class	the xmlstream ||| connect authenticator	count=1
function	messages waiting to ||| waiting	count=1
arg	the protocol then initiate ||| proto	count=1
function	start listening ||| start	count=1
class	test has ||| test case	count=1
function	giving a server ||| server	count=1
arg	if a c{regexp} search ||| regex msg	count=1
function	unjelly frozenset using the ||| unjelly frozenset	count=1
module_class	the coerce for ||| python coerce parameter	count=1
function	trigger ||| trigger	count=1
function	is in the ||| is in	count=1
function	looks like a package ||| package	count=1
class	string which is intended ||| maildir name generator	count=1
function	l{_connectedprotocol}, issue a query ||| query	count=1
class	a web context factory ||| policy	count=1
function	retrieves the number of ||| get number of	count=1
class	[class_1] channel fails ||| conch [class_1] [class_2] exec	count=2
arg	osslpkey the ||| osslpkey	count=1
function	messages via amp ||| call remote	count=1
function_arg	[function_1] some data ||| [arg_2] [function_1]	count=4
module_class	to [module_1] [class_2] decoder object ||| [module_1] [class_2]	count=1
function	to the [function_2] ||| [function_2] [function_1]	count=1
module	to the ||| internet	count=5
arg	if the directory is ||| directory	count=1
function	and response ||| response	count=1
arg	file any file-like ||| file consumer transform	count=1
module_class	proxy the stoppage to [module_1] [class_2] ||| [module_1] transport proxy [class_2]	count=2
function	retrieve the subject of ||| get subject	count=1
module	the user's personal ||| conch	count=1
arg	a query to ||| query servers timeout queriesleft	count=1
class	a socksv4 packet this ||| socksv4	count=1
function	mail exchange host for ||| cb mx	count=1
arg	message which [arg_2] ||| [arg_2] [arg_1]	count=2
class	[class_1] an ||| [class_1] [class_2]	count=1
function	source code surrounding ||| source	count=1
function	return a ||| get	count=30
module_class	the response ||| web response	count=4
arg	with a hostname and ||| hostname	count=1
function	[function] indicating this ||| exec [function]	count=1
class	to for name lookups ||| ireactor pluggable	count=1
function	client ||| get client	count=1
function_arg	any received bytes ||| received bytes	count=1
function	the c{calllater} callback ||| call later	count=1
arg	a box with ||| box	count=1
function_arg	[function_1] connection from ||| [function_1] [arg_2]	count=1
class	display my syspath and ||| path	count=1
module_class	the exception ||| web failure	count=1
arg	key in blob ||| blob	count=1
function	with the signed data ||| cb signed data	count=1
function_arg	[function_1] pair of ||| [arg_2] [function_1]	count=1
class	that was provided ||| invalid address	count=1
function	select ||| select	count=3
function	locate ||| locate	count=1
module	[module_1] the user ||| [module_1] [module_2]	count=1
function	exhorting ||| replacement string	count=1
function	return a factory ||| factory	count=1
function	[function] for a ||| remaining outbound [function]	count=3
function	user id of ||| user id	count=1
arg	queue to use ||| queue	count=1
class	hashed ||| hashed	count=1
module_class	and reset ||| internet looping call	count=1
function	prefix as it was ||| prefix	count=1
class	when l{httpchannel} has ||| ideprecated httpchannel to request interface	count=1
function	cursor to the beginning ||| beginning	count=1
function	status of the ||| status	count=1
arg	messages an ||| messages	count=1
function	the ||| build	count=1
arg	path to the ||| path	count=1
arg	be returned ||| nonce clientip	count=1
function	made a global ||| global	count=1
function_arg	[function_1] command to ||| [arg_2] [function_1]	count=1
module	function across all processes ||| mail	count=1
function	verify an incoming ||| verify	count=1
arg	a provider of l{twisted ||| contextfactory connecttimeout bindaddress	count=1
arg	a user [arg_2] ||| [arg_1] [arg_2]	count=4
function	an sql [function] ||| [function]	count=4
function	node ||| node	count=1
class	legacy ||| legacy	count=1
arg	perspective ||| perspective	count=1
function	internal create ||| create	count=1
function	instance of a testcase ||| name	count=1
function	connection [function_2] ||| [function_1] [function_2]	count=8
function	and setup authentication mechanism ||| set mechanism	count=1
class	retrieve ||| proxy descriptor	count=1
function	certificate-authority certificates to an ||| to	count=1
function	know if the key ||| key	count=1
module	drawing on the screen ||| conch insults	count=1
function	polite text exhorting the ||| string	count=1
function_arg	close a [arg_2] ||| [arg_2] [function_1]	count=1
function	server gotoverview() is ||| fetch	count=1
function	notify all pending requests ||| waiters	count=1
module	to the server ||| conch	count=2
function	text exhorting the user ||| get	count=1
arg	file any ||| file consumer transform	count=1
function	chunk from [function] query return ||| [function]	count=1
function	into an original' identifier ||| orig	count=1
module	l{ipv4address} or ||| internet	count=1
module	a context using this ||| runner	count=1
class	construct a log ||| log	count=1
module	when a ||| protocols jabber	count=1
arg	fromemail the [arg_2] ||| [arg_2] [arg_1]	count=2
module	iterator and ||| web	count=1
class	[class_1] the file ||| [class_2] [class_1]	count=1
function_arg	[function_1] protocol then ||| [arg_2] [function_1]	count=1
module	of the ||| python	count=5
arg	given group over ||| group low	count=1
module	on this ||| python	count=1
function	listen for ||| listen	count=1
arg	_switchbox ||| innerproto	count=1
module	compute a ||| internet	count=1
function_arg	convert a [arg_2] ||| [function_1] module name [arg_2]	count=1
function	a l{bucket} corresponding ||| bucket	count=1
function	sql [function] ||| [function]	count=4
class	[class_1] key ||| [class_2] [class_1]	count=2
function	for sending messages ||| remote	count=1
function	files and directories in ||| get files and directories	count=1
module_class	[module_1] last ||| [module_1] [class_2] save mark	count=1
class	since last ||| daily log file	count=1
module	connect [module] an ||| [module]	count=1
function	some polite text exhorting ||| replacement	count=1
function	literal into an ipv6 ||| ipv6	count=1
class	an ||| process	count=1
arg	topic [arg] or ||| [arg]	count=1
arg	the key to lookup ||| key	count=1
function_arg	[function_1] domain ||| [arg_2] [function_1]	count=1
function	user id ||| get user id	count=2
class	amp invoke it ||| dispatcher	count=1
module_class	[module_1] [class_2] input ||| [module_1] [class_2] prompt	count=4
function	export ||| export	count=1
function	compute the string to ||| compute	count=1
function	secondary ||| secondary	count=1
arg	authority's distinguishedname return ||| issuerdistinguishedname requestdata verifydncallback serialnumber	count=1
module	has been ||| ssh	count=1
arg	data and attempt to ||| data	count=2
function	[function] are ||| collect [function]	count=1
function_arg	policy for [arg_2] ||| [function_1] [arg_2]	count=2
class	pool this will ||| pool	count=1
class	[class_1] mailbox ||| [class_2] [class_1]	count=14
module	is running on set ||| python	count=1
function	the [function] ||| fix [function]	count=1
function	factory to ||| unjellyable factory	count=1
arg	[arg_1] file ||| [arg_2] [arg_1]	count=2
arg	some data to the ||| data	count=1
function	is ||| receiving boxes	count=1
function	a thread ||| to thread	count=1
function	header is ||| handle header	count=1
class	session ||| session	count=2
function	then run the ||| run	count=1
function	a single string ||| string	count=1
function	normal prefix ||| log prefix	count=1
class	this test ||| test	count=1
function	msg_service_accept ||| ssh service accept	count=1
function	a message [function_2] ||| [function_2] [function_1]	count=6
module	this ||| application	count=1
arg	[arg_1] file directly ||| [arg_2] [arg_1]	count=2
function	an amp box containing ||| box	count=1
module	string representations ||| trial	count=1
class	input ||| manhole interpreter	count=1
function	sign for [function_2] ||| [function_2] [function_1]	count=2
arg	from the given sender ||| sender	count=1
function	a hash ||| hash	count=1
function	returning files ||| files	count=1
function	threadpool ||| pool	count=1
function	[function_1] exception ||| [function_2] [function_1]	count=1
function	for a request ||| request	count=1
function_arg	[function_1] name see ||| [arg_2] [function_1]	count=2
class	method for changing kqueue ||| kqueue reactor	count=1
class	task completed ||| mailbox append message task	count=1
arg	incoming mac ||| mac	count=1
function_arg	a process [arg_2] ||| [function_1] [arg_2]	count=1
function	certificate-authority certificates to an ||| cacerts to	count=1
module	last test in ||| trial	count=1
function	register a callback ||| callback	count=1
class	suffix an ipv6 address ||| a6	count=1
module_class	[module_1] netstring ||| [module_1] [class_2]	count=4
class	unique across ||| maildir name generator	count=1
function	[function_1] payload ||| [function_1] [function_2]	count=1
function_arg	authenticator [arg_2] ||| [arg_2] [function_1]	count=1
function	udp ||| multicast	count=1
class	changed since last write ||| daily log file	count=1
function	[function_1] the type ||| [function_2] [function_1]	count=5
class	the lock ||| deferred lock	count=1
function	register with the ||| associate with	count=2
module_class	[module_1] port's ||| [module_1] [class_2]	count=2
module_class	[module_1] given ||| [module_1] [class_2]	count=6
function	new request via ||| request	count=1
function	constructor to create a ||| init	count=1
class	calls to this function ||| name	count=1
function	resume [function_2] ||| [function_2] [function_1]	count=4
arg	digest for ||| ha2 algo psznonce	count=1
class	deferred ||| deferred	count=1
function	select and setup authentication ||| set	count=1
arg	given ||| offset	count=1
class	duration of the test ||| test case	count=1
function	get the parent ||| parent	count=1
function	all children to a ||| to xml	count=1
arg	jellier ||| jellier	count=1
module	if we ||| conch ssh	count=1
class	reset ||| client machine	count=1
function	child process ||| process	count=3
function	decorators and ||| get deprecated	count=1
function	source line of the ||| source line	count=1
arg	state ||| state	count=1
function	private ||| from string private blob	count=2
class	has ||| queue	count=1
arg	filename the name ||| filename	count=1
function	exhorting the user ||| get	count=1
class	short ||| itest case	count=1
module	the initialization ||| words protocols	count=1
function_arg	[function_1] group ||| [function_1] [arg_2]	count=2
function	[function_1] child resource ||| [function_2] [function_1]	count=2
function_arg	test [arg_2] ||| [arg_2] [function_1]	count=2
function	state in which commands ||| state	count=1
arg	the given test thing ||| testthing	count=1
function	l{iresponse} ||| read	count=1
function	ecdh exchange ||| kex ecdh	count=2
function_arg	[function_1] hints ||| [arg_2] [function_1]	count=1
function	[function_1] is ||| [function_2] in [function_1]	count=1
function	[function_1] other side ||| [function_2] [function_1]	count=2
class	at [class] l{filepath} c{linkfilepath} ||| [class]	count=1
module	pop the stack ||| web	count=1
arg	or range of articles ||| low high id	count=1
function	event object for a ||| event	count=1
class	[class_1] [class_2] ||| [class_1] with [class_2]	count=4
class	[class_1] securing a ||| [class_2] [class_1]	count=2
arg	me ||| perspective	count=2
function	[function_1] [function_2] with a profile module ||| application basic profiler [function_1] [function_2] module e	count=4
module	the next ||| internet	count=1
class	use as ||| factory	count=1
module_class	the file ||| mail file	count=4
arg	values [arg] query parameter ||| [arg]	count=1
function	to the name ||| name	count=1
function	file to ||| file	count=2
class	this descriptor will ||| file descriptor	count=1
function	with the signed ||| cb signed	count=1
arg	of observers ||| observers discardbuffer	count=1
function	[function_1] readable ||| [function_1] [function_2]	count=4
function	offset and ||| to offset and	count=1
function	spwd module ||| shadow	count=1
function	c{obj}, add all ||| accumulate	count=1
function	specified message-id ||| article	count=1
function	elements which ||| elements	count=1
class	start ||| looping call	count=1
class	token ||| deferred semaphore	count=1
function_arg	encode a [arg_2] ||| [function_1] [arg_2]	count=1
function	[function_1] plugin to ||| [function_2] [function_1]	count=1
arg	pre-built l{servicemanager}, ||| jid	count=1
function	list of the readers ||| readers	count=1
arg	name of a ||| name	count=1
function	to tls ||| client tls	count=1
function	c{calllater} callback this ||| call later	count=1
function	[function_1] group from ||| [function_2] [function_1]	count=2
function	changed ||| mode changed	count=1
module	by base64-encoding the ||| conch client	count=1
function	the date ||| date	count=1
function_arg	[function_1] [arg_2] for ||| sshfactory [function_1] [arg_2]	count=2
function	text [function_2] ||| [function_1] [function_2]	count=2
class	been canceled ||| deferred	count=1
class	zsh code for the ||| zsh arguments generator	count=1
class	of my process's stderr ||| process	count=1
module_class	[module_1] last ||| [module_1] [class_2]	count=1
class	in this file ||| hosts file	count=1
function_arg	msg_service_accept message [arg_2] ||| [arg_2] [function_1]	count=1
function	[function_1] line including ||| [function_2] [function_1]	count=2
function_arg	remove all [arg_2] ||| [function_1] [arg_2]	count=6
function	text exhorting the ||| string	count=1
class	that the avatar to ||| avatar	count=1
arg	of one or more ||| uid	count=1
module	www-authenticate ||| cred	count=1
arg	hostname [arg_2] ||| [arg_1] [arg_2]	count=4
module	split version [module] an nmea ||| [module]	count=1
class	lock this method ||| deferred filesystem lock	count=1
function	received ||| speed received	count=1
function	cancel this ||| cancel	count=1
class	distributed manager ||| worker reporter	count=1
class	[class_1] unix ||| [class_2] [class_1]	count=2
function	quick and [function_2] ||| [function_2] bad request [function_1]	count=1
module	command and hook the ||| conch	count=1
arg	tests in ||| recurse	count=1
arg	message an [arg_2] ||| [arg_2] [arg_1]	count=6
class	map this alias ||| alias	count=1
function	given ||| get	count=1
function	tcp ||| loopback tcp	count=1
function	code representing ||| code	count=1
class	process which ||| process	count=1
class	group to ||| group	count=1
class	a maildir mailbox ||| maildir mailbox	count=4
arg	send a message on ||| data ancillary flags	count=1
class	a ||| digest	count=2
function	[function_1] [function_2] should be displayed ||| [function_1] [function_2]	count=3
class	test if any ||| test	count=1
function	initialize the ||| init	count=1
class	www-authenticate ||| digest credential	count=1
function	avatar which ||| request avatar	count=1
module	is running ||| python	count=1
function	successful [function_2] ||| [function_2] [function_1]	count=3
function	the attributes for drawing ||| attributes	count=1
class	a string which ||| name	count=1
arg	c{deferred} does not errback ||| deferred	count=1
module	using the incoming ||| conch ssh	count=1
function	[function_1] the host ||| [function_2] [function_1]	count=1
function	ok to uncache ||| uncache	count=1
class	the application on ||| application	count=1
class	ip ||| iraw	count=1
arg	for events given filter/op ||| filter op	count=1
function	is made ||| made	count=1
class	keys and ||| key database	count=1
function	sign for ||| sign	count=1
class	checks on ||| case	count=1
function	challenge for use ||| get challenge	count=1
module	the deferred ||| internet	count=1
module	reject all attempts to ||| conch	count=1
function	and response [function_2] ||| [function_2] [function_1]	count=1
class	calls ||| generator	count=1
arg	modes on a user ||| modes limit	count=1
class	the daylight saving time ||| fixed offset time zone	count=1
function	to consider it ||| replacement	count=1
function	json-serializable data structure ||| as json	count=1
function	it ||| call remote	count=1
arg	task on ||| task	count=1
arg	[arg_1] query ||| [arg_2] [arg_1]	count=2
module	some work ||| _threads	count=1
function	[function_1] human-readable text ||| [function_1] [function_2] event formattime	count=2
class	we are connected ||| iunixdatagram connected	count=1
function	skip ||| skip	count=2
function	failed ||| failed	count=2
function	snapshot of ||| get snap shot	count=1
arg	response to a ||| response	count=2
function	c{self _wrappedfactory} or errback ||| build protocol	count=1
arg	xmlstream l{xmlstream xmlstream} ||| xmlstream type	count=1
class	the timer ||| looping call	count=1
function	string formatting for ||| string	count=1
function	given keys ||| keys	count=1
class	byte to the terminal ||| terminal buffer	count=1
class	compute a ||| public	count=1
module	exhorting the ||| python	count=1
module	start talking to ||| internet	count=1
class	authentication [class_2] ||| [class_2] [class_1]	count=2
arg	more [arg_2] ||| [arg_2] flags silent [arg_1]	count=2
class	to call ||| call	count=1
class	random ||| factory	count=1
arg	given sender ||| sender text	count=1
function_arg	unregister a [arg_2] ||| [function_1] fdin asyncio [arg_2]	count=4
class	the next iteration and ||| call	count=1
function	to the beginning of ||| beginning	count=1
function	root resource ||| opt resource	count=1
module_class	[module_1] [class_2] ||| [module_1] httppage [class_2]	count=1
function	running ||| get	count=1
function_arg	[function_1] a description ||| [arg_2] [function_1]	count=5
class	an l{ipv4address} or ||| server	count=1
function	for later ||| for	count=1
function	convert an ampbox ||| strings to	count=1
module	be ||| mail	count=1
function	directory named similarly ||| directory	count=1
class	input file to ||| file body	count=1
class	will stop performing the ||| itelnet transport	count=1
function	-> boolean ||| is type allowed	count=1
function	fallback implementation where either ||| fallback fdimplementation	count=1
class	descriptor will ||| file descriptor	count=1
arg	using this object ||| obj	count=1
module	underlying values and the ||| web	count=1
module	of a www-authenticate ||| cred	count=1
function	or retrieve an ||| get component	count=1
function	and setup ||| set	count=1
function	records to ||| records	count=1
module	and arrange ||| names	count=1
module	sentence ||| positioning	count=1
arg	a provided value ||| value	count=1
arg	or more python objects ||| objects proto	count=1
class	the destination [class_2] ||| [class_2] [class_1]	count=2
class	attempt to ||| client	count=1
arg	name of the domain ||| domain	count=1
function	object in a ||| in	count=1
function_arg	has [function_1] [arg_2] reason ||| [function_1] [arg_2]	count=2
function	c{path} as a string ||| as	count=1
function	malformed authentication ||| authmalformed	count=1
function	the protocol ||| protocol	count=1
class	the speed that ||| speed	count=1
function_arg	from an [arg_2] ||| [function_1] string [arg_2]	count=1
class	regardless of ||| iconnector	count=1
arg	primary ||| primary domains	count=1
function	the connection [function_2] ||| [function_2] [function_1]	count=5
module	an ||| internet	count=1
arg	address ||| address	count=4
class	which ||| maildir name generator	count=1
function	ipv6 ||| ipv6	count=1
class	report ||| unit result adapter	count=2
class	and return ||| janitor	count=1
function	accepted a [function_2] ||| [function_2] [function_1]	count=2
class	that we ||| itelnet transport	count=1
function	normal prefix ||| get log prefix	count=1
function	[function_1] [function_2] ||| [function_2] not [function_1]	count=3
arg	constants ||| cls level	count=1
module_class	[module_1] distributed ||| [module_1] [class_2]	count=6
function	user to consider ||| get replacement	count=1
arg	which maps fully ||| uri	count=1
function_arg	@param type ||| init type name	count=1
function	from a [function_2] ||| names secondary authority service [function_1] [function_2]	count=6
function	the uid of a ||| uid	count=1
module	the host ||| conch client	count=1
function	an ||| replacement string	count=1
module_class	the [class_2] ||| [class_2] [module_1]	count=1
function	warning method currently used ||| warning method	count=1
function	the skip reason set ||| skip	count=1
module	in the ssh ||| conch ssh	count=2
arg	[arg_1] the reactor ||| [arg_1] [arg_2]	count=1
function	has changed since ||| should	count=1
function	default log ||| log	count=1
function	fails ||| on fail	count=1
class	indicate that we will ||| transport	count=1
function	[function_1] other ||| [function_2] [function_1]	count=2
arg	called when a fd ||| selectable fd event	count=1
arg	[arg] themselves are ||| pubkey [arg]	count=1
arg	[arg_1] over ||| [arg_2] [arg_1]	count=4
function	malformed authentication [function_2] ||| [function_1] [function_2]	count=1
function	disconnect callbacks ||| notify on disconnect	count=1
function	response to ||| response from message	count=2
class	state has set ||| state	count=2
function	imported and if requested ||| imported	count=1
function	[function_1] database connection ||| [function_2] [function_1]	count=1
function	escape some character ||| escape for	count=1
function	unjelly [function_2] ||| [function_2] [function_1]	count=7
module	to given address ||| internet	count=1
class	[class_1] case ||| [class_1] [class_2]	count=2
function	read [function_2] ||| [function_2] [function_1]	count=7
function	necessary for ssl client ||| client ssl	count=1
module	and arguments ||| internet	count=1
module	a twisted ||| python	count=1
function	construct appropriate records ||| records	count=1
arg	port number and return ||| port	count=1
arg	see l{record_afsdb hostname} ||| subtype hostname ttl	count=1
function	constructs ||| build	count=1
class	a path ||| file path	count=2
module	[module] _tostan ||| [module]	count=3
arg	connection if the ||| connection	count=1
arg	into a different ||| sourcetype targettype	count=1
module	using this ||| runner	count=1
module	l{servicemanager}, ||| words	count=1
function_arg	[function_1] payload : ||| [function_1] request [arg_2]	count=3
function	directories in ||| directories	count=1
function	and its file descriptor ||| collect	count=1
module_class	sent when both ||| conch ssh sshsession	count=1
arg	flags [arg_2] ||| [arg_2] [arg_1]	count=2
function	of the sub-messages of ||| parts	count=1
module	a log observer if ||| python	count=1
function	any more data ||| channel eof	count=1
class	consumer by resuming ||| file body	count=1
function	[function_1] readable flags ||| [function_1] [function_2]	count=4
function	id of the file's ||| id	count=1
function	polite text exhorting ||| get replacement	count=1
class	l{ipv4address} or l{ipv6address} ||| itcptransport	count=1
class	messages via amp invoke ||| box	count=1
function_arg	[function_1] protocol ||| [function_1] [arg_2]	count=5
function	sign the ||| sign	count=1
class	process ||| process terminated	count=1
class	l{dnsdatagramprotocol} instance from l{_connectedprotocol}, ||| resolver	count=1
module_class	the underlying [class_2] ||| [module_1] transport proxy [class_2]	count=3
arg	a failure ||| err	count=1
class	random value ||| digest credential factory	count=1
arg	to a deprecated ||| version replacement	count=1
class	@type ||| name generator	count=1
function	value of an attribute ||| attribute	count=1
module	a copy of this ||| python	count=1
module	the necessary ||| mail	count=1
function	msg_userauth_success the server has ||| userauth success	count=1
function	set default log ||| log	count=1
module	[module] file path's ||| [module]	count=3
function	hemisphere [function_2] ||| [function_1] [function_2]	count=1
function	function of the ||| func of	count=2
module	for use as the ||| cred	count=1
module_class	this database ||| python shadow database	count=1
module	display my syspath ||| python	count=1
module	using the ||| protocols	count=1
class	across ||| name generator	count=2
function	as much of ||| some data	count=1
function	if this string ends ||| ends	count=1
class	underlying pkey object ||| public	count=1
function	[function_1] [function_2] matching ||| [function_1] [function_2]	count=4
class	to return a path ||| file path	count=2
class	l{irenderable} to ||| element	count=1
class	in this [class] ||| command [class]	count=2
function	[function_1] class ||| [function_1] [function_2]	count=1
arg	class object c{classobj}, returns ||| classobj	count=1
class	endpoint ||| stream server endpoint service	count=1
function_arg	[function_1] protocolswitchcommand ||| [arg_2] [function_1]	count=1
arg	set of observers this ||| observers discardbuffer	count=1
function	fileno() of ||| fileno	count=1
function	available the number of ||| count	count=1
function	window by ||| window	count=1
function	logging ||| log	count=1
function	[function_1] per second ||| [function_2] [function_1]	count=1
function	determines whether an ||| name constraint	count=1
function	[function_1] instance of ||| [function_2] [function_1]	count=3
module	to the method ||| internet	count=1
module	mail ||| mail	count=2
function	write a [function_2] ||| [function_2] [function_1]	count=3
module_class	[module_1] event loop ||| [module_1] [class_2]	count=2
function	a list of decorators ||| deprecated	count=1
module	ssh ||| ssh	count=1
arg	file @type file any ||| file consumer transform	count=1
function	[function_1] source line ||| [function_1] [function_2]	count=3
function	we've passed bandwidth limits ||| read bandwidth	count=1
class	input file to ||| file	count=1
class	new win32 event to ||| win32reactor	count=1
function	were imported and if ||| imported	count=1
class	logged-in [class] ||| for unix conch [class]	count=1
function	check the state of ||| check state	count=1
class	string which is ||| maildir name	count=1
module_class	attributes this formatting ||| python default formatting	count=1
arg	sender ||| sender	count=2
function	the context ||| context	count=1
function	request is an entity ||| is	count=1
module_class	to standard io ||| internet standard io	count=1
arg	given path ||| path followlinks	count=4
function	implementation ||| implementation	count=1
function	on set ||| deprecated	count=1
function	key the [function] is the ||| private [function]	count=1
arg	checks to [arg_2] ||| [arg_2] [arg_1]	count=2
function	service [function_2] ||| [function_1] [function_2]	count=3
function	to special-case your ||| to publish	count=2
function_arg	[function_1] fd ||| [function_1] fdin asyncio [arg_2]	count=1
class	a portal ||| portal	count=1
module	jabber id that this ||| words protocols jabber	count=1
module	the test ||| trial	count=15
module	be ||| names	count=1
arg	articles ||| low high id	count=1
function	snac and ||| snac	count=1
class	entry from ||| entry	count=1
function	[function_1] human-readable text ||| event [function_1] classic log [function_2] event formattime	count=1
arg	or an alias of ||| memo	count=1
class	from the other side ||| sshtransport base	count=2
arg	if the path ||| path	count=1
module_class	if we [class_2] ||| [module_1] [class_2]	count=2
function	checks the [function_2] ||| [function_1] [function_2]	count=1
function	of the write ||| write	count=1
class	with l{callremote}, with ||| box dispatcher	count=1
function	[function_1] the initial ||| [function_1] [function_2]	count=1
function_arg	make a [arg_2] ||| [arg_2] [function_1]	count=1
module_class	[module_1] [class_2] gone away ||| [module_1] [class_2] force abort client	count=3
function	the signed data ||| cb signed data	count=2
arg	fromemail the ||| fromemail	count=1
class	kqueue ||| kqueue	count=2
function	from request until ||| received	count=1
function	remove a ||| remove	count=16
class	create and ||| ui	count=2
function	switch this ||| switch	count=1
module	message format ||| mail	count=1
function	and a c{datetime ||| date and time	count=1
function	of work [function] ||| [function]	count=2
function	find an unused ||| unused	count=1
module	a [module] to ||| [module]	count=1
class	apply each patch already ||| monkey patcher	count=1
function	which arguments ||| arguments	count=1
arg	n ||| n seq	count=1
class	know if the key ||| sshpublic key database	count=1
function	be sent while key ||| key	count=1
function_arg	[function_1] path ||| [function_1] [arg_2]	count=1
module	mac using the incoming ||| conch	count=1
class	decode ||| credential factory	count=1
module_class	[module_1] this component ||| [module_1] [class_2]	count=1
arg	string ||| secret	count=1
arg	a [arg_2] ||| [arg_1] [arg_2]	count=1
function	delay ||| delay	count=2
function_arg	been received [arg_2] ||| [function_1] broker message [arg_2]	count=3
function	get an object ||| get traceback object	count=1
module	alternative ||| python	count=1
class	transport is connected ||| abstract datagram protocol	count=1
arg	c{query} possibly ||| msgid msg lastsequenceid	count=1
function	child resource all path ||| child	count=1
class	my syspath ||| python	count=1
function	certificates to an ||| cacerts to	count=1
module_class	[module_1] queue ||| [module_1] [class_2]	count=12
function	but with a basename ||| sibling	count=1
module	me ||| spread	count=1
function	if any ||| get	count=1
arg	given instance ||| instance	count=1
class	l{icredentialschecker} interface called by ||| sshprotocol checker	count=1
arg	fail because authentication ||| code resp	count=1
function	http date string one ||| string	count=1
class	a git repository ||| git command	count=1
function	a connection over ||| connection	count=1
function	a challenge including the ||| challenge	count=1
function	[function_1] host that ||| [function_2] [function_1]	count=1
arg	the password ||| password	count=3
function	window by a ||| window	count=1
function_arg	@param ampprotocol ||| init ampprotocol	count=1
arg	an #include line ||| header_name	count=1
class	by this ||| client	count=1
function	remove all selectables ||| remove all	count=2
function	the factory to construct ||| factory	count=1
arg	a stanza ||| stanza	count=1
function	erase from the ||| erase	count=3
function	create a new user ||| create user	count=1
function	get a description ||| get	count=1
function	given host ||| host	count=1
arg	amount and ||| amount	count=1
function	quote ||| quote string	count=1
function	attribute as being deprecated ||| deprecated module attribute	count=1
arg	object c{classobj}, returns a ||| classobj prefix	count=1
function_arg	query is [arg_2] ||| [function_1] [arg_2]	count=1
arg	more [arg_2] ||| [arg_2] flags mode [arg_1]	count=1
function	response to a ||| response	count=1
class	l{httpchannel} has ||| ideprecated httpchannel to request interface	count=1
class	close ||| file handle	count=1
function	i{sigchld} handler [function_2] ||| is [function_2] [function_1]	count=1
module_class	of this c{deferred} ||| internet deferred	count=1
arg	list of local files ||| files remotepath	count=1
function	helper returning files ||| files	count=1
module	partial visible satellite ||| positioning	count=1
module	using ||| protocols jabber	count=2
module_class	the i{chunked} transfer-encoding ||| web chunked transfer	count=1
arg	them to l{write} ||| iovec	count=1
function	retrieve the time of ||| time	count=4
function	the elements ||| elements	count=1
class	greater than c{max_length} ||| int nstring receiver	count=1
function	deferred has ||| get	count=1
class	this request to the ||| request	count=2
module	deprecated api ||| python	count=1
module_class	to this database ||| python user database	count=1
function_arg	[function_1] state ||| [function_1] [arg_2]	count=1
function_arg	process it'll translate ||| process signalid	count=1
function	set up ||| set	count=2
function	data ||| open direct tcpip	count=1
function	stream if available ||| stream	count=1
function	the article ||| article request	count=1
class	peer should be ||| itelnet protocol	count=1
function	this group from the ||| group	count=1
function	exit ||| exit	count=2
class	tls negotiation ||| tlsinitiating initializer	count=1
class	given configuration ||| app logger	count=1
class	amp ||| box	count=1
function	[function_1] file ||| [function_1] [function_2]	count=7
class	is ||| nntpclient	count=1
arg	the jellier ||| jellier jellylist	count=1
function	specific section of ||| fetch specific	count=1
function	referring ||| temporary	count=1
arg	c{exception} ||| exception	count=1
class	service l{mailservice} ||| pop3factory	count=1
function	register an ||| register	count=1
class	amp invoke ||| box dispatcher	count=1
function	add additional ||| add additional	count=1
function_arg	[function_1] following ||| [arg_2] [function_1]	count=1
class	to be unique across ||| name generator	count=1
class	to ||| maildir name	count=2
arg	a l{irealm} ||| realm checkers	count=1
class	which this channel exists ||| channel	count=1
arg	a connection ||| key connection	count=1
arg	reporter ||| testname todo	count=1
function	[function_1] returns ||| [function_2] [function_1]	count=2
module	has changed since ||| python	count=1
module_class	[module_1] [class_2] ||| [module_1] insults [class_2]	count=2
module	api ||| python	count=1
arg	[arg_1] a hostname ||| [arg_2] [arg_1]	count=2
arg	address the ||| address	count=1
arg	a ||| name callback	count=1
function_arg	dcc resume [arg_2] ||| [function_1] [arg_2]	count=1
class	the group conversation and ||| group conversation	count=2
arg	mnemonic ||| entityref	count=1
function	peer side of ||| get peer	count=1
function	the overview format from ||| overview	count=1
arg	[arg_1] a file ||| [arg_1] [arg_2]	count=2
function	[function_1] object from ||| [function_2] [function_1]	count=2
function	key the [function] is ||| private [function]	count=1
arg	construct a ||| src dst	count=1
function_arg	[function_1] list s-expression ||| [function_1] [arg_2]	count=1
module	initialization ||| words	count=1
function_arg	msg_kex_dh_gex_request message [arg_2] ||| [function_1] [arg_2]	count=1
module	from modules ||| trial	count=1
function	connect to the server ||| connect	count=1
function	type ||| type	count=7
function	parse given ||| parse	count=1
function	[function_1] generator ||| [function_1] [function_2]	count=6
function	spwd ||| shadow get by name	count=2
class	the archive ||| archive	count=4
function	[function] to ||| [function] previous	count=1
function_arg	to [arg_2] ||| [arg_2] [function_1]	count=2
class	via amp invoke ||| box	count=1
class	'message' in ||| tree reporter	count=1
arg	domain ||| reactor service domain	count=1
function	the sub-messages ||| parts	count=1
function	set up [function_2] ||| [function_2] [function_1]	count=2
function	string into a list ||| parse	count=1
function	malformed [function_2] ||| [function_2] [function_1]	count=1
arg	method name ||| klass name	count=2
class	this channel exists ||| channel	count=1
function	[function_1] exception into ||| [function_2] [function_1]	count=1
arg	resumeoffset an integer representing ||| resumeoffset	count=1
function	hostname that the ||| hostname	count=1
arg	xml ||| xs	count=1
function	[function_1] to file ||| [function_1] [function_2]	count=1
function	return the flags defined ||| get	count=1
arg	[arg_1] broker and ||| [arg_1] [arg_2]	count=1
function_arg	c{kwargs} raises [arg_2] ||| [arg_2] [function_1]	count=1
module	select ||| words protocols	count=1
module	root element has ||| xish	count=2
module_class	body in [class_2] ||| [module_1] [class_2]	count=4
function	[function_1] producer with ||| [function_2] [function_1]	count=1
function	use ||| generate	count=1
function_arg	[function_1] outiv ||| [function_1] [arg_2]	count=2
module	any path to ||| conch ssh	count=1
arg	if there's anything left ||| qname	count=1
arg	in blob ||| blob	count=1
function	return a list of ||| list	count=1
function	unregister producer ||| unregister producer	count=2
function	remove a selectable ||| remove	count=6
arg	monitoring either for ||| source primary other primaryflag	count=1
arg	byte data ||| data	count=1
function	[function_1] a quote ||| [function_1] [function_2]	count=1
class	object with ||| with	count=1
class	request's ||| ideprecated httpchannel to request interface	count=1
arg	l{node} which is already ||| newchild oldchild	count=1
module	get the ||| python	count=1
function	the the setup method ||| setup	count=1
arg	c{newpath} that ||| newpath encoding	count=1
function	the default appropriate for ||| default log observer	count=1
function	a new l{privatecertificate} from ||| new	count=1
class	of ||| factory	count=1
module	whenever the ||| web	count=1
class	the date ||| log file	count=1
class	to copy ||| remote copy	count=1
class	a l{stream [class] endpoint <interfaces ||| [class]	count=1
function	ssi server ||| ssi	count=1
arg	@param environ a ||| environ start	count=1
class	all processes reboots etc ||| generator	count=1
arg	documentation in c{docdir} ||| docdir builddir version	count=1
function	[function_1] with ||| [function_1] [function_2]	count=7
function	as an ||| string	count=1
class	initialize ||| file path	count=1
module	called ||| words protocols	count=6
function	push ||| push	count=1
arg	xml-rpc ||| contents	count=1
module	on the screen ||| conch	count=1
function	and call it with ||| handle	count=1
function	write a single ||| write	count=1
module	[module] promopts ||| [module]	count=3
function	specified message-id [function_2] ||| [function_1] [function_2]	count=3
class	which is ||| name generator	count=1
function	set the reference ||| set	count=1
arg	a path ||| path	count=1
function	if c{pattern} is c{bytes}, ||| as same type	count=1
class	client-cache reference ||| cacheable	count=1
class	an unpersistable ||| unpersistable	count=1
function	backoff interval ||| backoff	count=1
arg	an outgoing http ||| k v expires domain	count=1
function	producer for ||| producer	count=1
function_arg	[function_1] data by ||| [arg_2] [function_1]	count=1
function	some polite ||| get replacement	count=1
function	and a binary representation ||| and	count=1
arg	domain to ||| service domain	count=1
class	to use for authentication ||| user auth	count=1
class	with this publisher ||| publisher	count=1
function	return a class ||| get	count=1
module	sent to the server ||| conch	count=1
function	retrieve a file ||| file	count=2
class	my socket ||| datagram port	count=2
module	when it is ||| conch client	count=1
class	path} ||| file	count=1
function_arg	[function_1] be returned ||| [arg_2] [function_1]	count=3
function	on to the server ||| on	count=1
class	via header ||| via	count=1
arg	cacerts the ||| cacerts	count=1
arg	chatui ||| chatui	count=2
function	for closing ||| connection lost msg	count=1
function	info for ||| info	count=1
class	use as ||| digest	count=1
class	file to ||| file	count=2
class	a random value ||| digest	count=1
function	connect via ||| connect	count=3
function_arg	[function_1] operating ||| [function_1] [arg_2]	count=3
function	a specific section of ||| specific	count=1
module	followed and extracting the ||| web	count=1
function	a sentence [function_2] ||| [function_2] [function_1]	count=2
function	directory and return ||| get	count=1
arg	byte data for inclusion ||| data	count=1
function	body [function_2] ||| [function_1] [function_2]	count=9
function	not a request ||| ignore ext	count=1
arg	child of c{tag} ||| request tag	count=5
arg	path ||| path keys	count=2
function	received a chunk ||| chunk	count=1
function	contains test cases c{false} ||| test	count=1
function	receiver which will ||| receiver	count=1
function	signal c{signalid} to the ||| signal	count=1
function	partial ||| fix	count=1
function	the response ||| response from message	count=2
arg	[arg_1] in the ||| [arg_2] [arg_1]	count=8
arg	and an object ||| object	count=1
function_arg	with daemon [arg_2] ||| [function_1] [arg_2]	count=4
function	function is ||| function	count=1
arg	refer to ||| autologin username password	count=1
function	return first ||| get	count=1
arg	color ||| color	count=1
class	the initialization ||| base	count=1
function_arg	partial xml [arg_2] ||| [function_1] [arg_2]	count=2
arg	data by ||| data	count=2
function	_wrappedfactory} or errback the ||| build	count=1
function	initial [function_2] ||| [function_2] [function_1]	count=1
function	referring [function_2] ||| [function_2] [function_1]	count=1
arg	child resource to ||| child	count=1
function	a select ||| cb select	count=1
arg	fail because the server ||| code resp	count=1
function	threadpool used ||| pool	count=1
class	c{key} it must ||| mem cache	count=1
function	all methods that begin ||| accumulate methods	count=1
function	the body ||| get body	count=1
function	[function_1] failed attempts ||| [function_2] [function_1]	count=1
arg	true [arg] represents ||| [arg]	count=1
function_arg	fail if [arg_2] ||| [arg_2] [function_1]	count=4
arg	cannot be ||| relay	count=1
class	and setup ||| saslinitiating	count=1
function	database connection ||| connection	count=1
arg	status ||| signal status	count=1
function	pausing ||| pause	count=1
class	certificate authorities to ||| sslcertificate authorities	count=1
arg	user to me or ||| user	count=1
arg	published ||| functionname	count=1
class	remove ||| select reactor	count=2
arg	given function to a ||| f	count=1
class	is necessary ||| assert raises context	count=1
function	observe locally ||| observe	count=1
function	this ||| sent mail	count=1
function	an event ||| event	count=1
function	no more body data ||| body data	count=1
module	to generate control ||| conch insults	count=1
function	stop to any ||| stop	count=1
function	extract text [function_2] ||| [function_2] [function_1]	count=2
function	a tuple of two ||| to	count=1
function	api ||| get replacement string	count=1
function	any cleanup ||| cleanup	count=1
function	[function_1] [function_2] on ||| [function_1] [function_2]	count=4
arg	a [arg] ||| [arg]	count=2
module_class	with this contacts ||| words im contacts	count=1
function	the connection is ||| is	count=1
class	message as it ||| mailbox append message	count=1
function	an unused ||| unused	count=1
arg	a file @type file ||| file consumer transform	count=1
function	to a string ||| to xml	count=1
arg	broker [arg_2] ||| [arg_2] [arg_1]	count=1
function	poll the poller for ||| poll	count=2
arg	host a hostname used ||| host port	count=1
arg	[arg_1] to refer ||| [arg_1] [arg_2]	count=1
function	to find ||| maybe find	count=1
function_arg	channel of [arg_2] ||| [function_1] [arg_2]	count=2
class	and installed ||| reactor base	count=2
function	the process ends with ||| process	count=1
class	random ||| digest	count=1
module	when that ||| trial	count=1
function	satellite information ||| fix	count=1
class	on the service ||| machine	count=1
class	the test has ||| test case	count=1
arg	a key ||| key	count=2
class	[class] recipient ||| maildir [class]	count=2
function	[function_1] opaque ||| [function_2] [function_1]	count=1
function	[function_1] client parameters ||| [function_2] [function_1]	count=16
function	tracking ||| checking	count=1
arg	protocolfactory ||| protocolfactory	count=1
function	is complete ||| done	count=1
function	the request to be ||| with request	count=1
function	my [function] ||| glob [function]	count=3
function	socket and [function_2] ||| [function_1] [function_2]	count=1
arg	some tests ||| recurse	count=2
function	not ||| not	count=1
function	the other side ||| close	count=1
function	in c{self archive} ||| child	count=1
function	gather state [function_2] ||| [function_1] [function_2]	count=2
function	send me i am ||| send to	count=1
arg	in channel [arg_2] ||| [arg_2] [arg_1]	count=2
function	currently selected [function_2] ||| [function_2] [function_1]	count=1
module	if any ||| python	count=1
function	deprecated to deprecate ||| deprecated	count=1
function	[function_1] or ||| [function_2] [function_1]	count=4
function	unexpected ||| unexpected	count=1
function	return the suffix ||| suffix	count=1
arg	and port ||| port	count=4
function	and reset ||| reset	count=1
module	instance of ||| trial	count=2
module	c{rest} using the user's ||| conch	count=1
function	time [function_2] ||| [function_2] [function_1]	count=4
class	group conversation and ||| group conversation	count=2
function	[function_1] the generator ||| [function_1] [function_2]	count=1
function	prefix length for ||| prefix	count=1
function	return an iterator over ||| iter	count=1
arg	response [arg_2] ||| [arg_1] [arg_2]	count=2
function	gather up ||| gather	count=1
arg	that c{deferred} does not ||| deferred	count=1
function	retrieve the subject ||| subject	count=1
module	instance of a testcase ||| trial	count=1
class	[class_1] this task ||| [class_2] [class_1]	count=1
module	pre-built ||| words protocols jabber	count=2
class	domain [class_2] ||| [class_1] [class_2]	count=1
function	connection control ||| connection control	count=2
module	which suppresses [module] indicated ||| [module]	count=1
function	read and send ||| send	count=1
arg	extdata ||| extdata	count=1
function	a log ||| wrapped log	count=1
class	test has ||| test	count=1
arg	absolute path if necessary ||| path alwayscreate	count=1
module	jabber id ||| words protocols jabber	count=1
module_class	this path ||| python file path	count=1
function	local object [function_2] ||| [function_1] [function_2]	count=2
arg	the key to ||| key	count=1
module	on [module] object ||| [module]	count=1
function	joining to c{path} ||| coerce to filesystem	count=1
function	trust [function] root certificates ||| [function]	count=1
function	and setup authentication ||| set	count=1
function	hashed username realm password ||| hash	count=1
module	all trial ||| trial	count=1
arg	the specified keys ||| keys value	count=1
class	intended to ||| maildir name	count=1
function	will [function_2] ||| [function_2] [function_1]	count=4
function	to the name of ||| name	count=1
function	a factory ||| factory	count=1
class	the initialization ||| feature initiating initializer	count=1
class	changed since last write ||| log	count=1
arg	reload [arg_2] ||| [arg_2] [arg_1]	count=6
class	[class_1] [class_2] ||| [class_2] [class_1] add cleanup	count=3
function	c{cls} is an old-style ||| old	count=1
function	start ||| start	count=20
class	this observer ||| log observer	count=1
module_class	the public [class_2] ||| [module_1] [class_2]	count=2
arg	the specified strport string ||| strport	count=1
arg	element ||| element	count=1
function	levels to the default ||| levels	count=1
class	all processes ||| maildir	count=1
class	[class_1] case ||| [class_2] [class_1]	count=2
function	and a binary ||| bytes and	count=1
class	ssh server ||| sshcommand client	count=1
class	intended to be ||| name	count=1
function	a random value ||| generate	count=1
function	to create a ||| init	count=1
class	certificate authorities to ||| open sslcertificate authorities	count=1
function	close standard input on ||| close stdin	count=1
class	across ||| maildir name generator	count=2
arg	description ||| errorcode description fatal	count=1
function	name on the ||| get method name	count=1
class	from ||| imap4server	count=1
arg	or 1 addresses ||| resp numok addresses	count=1
class	by ||| client	count=1
class	line unless ||| ftpclient basic	count=1
arg	of dns [arg_2] ||| [arg_2] [arg_1]	count=2
arg	get 0 or 1 ||| code resp numok	count=1
function	certificate verification ||| verification	count=1
function_arg	notify message ||| notify message	count=1
function	suitable for ||| generate	count=1
function	file ||| add file	count=1
function	proxy the pause ||| pause	count=1
arg	of authentication when ||| auth	count=1
class	the date has ||| daily log file	count=1
module	local [module_2] ||| [module_1] [module_2]	count=1
function	a process [function_2] ||| [function_1] output [function_2]	count=1
function	used the the setup ||| get setup	count=1
class	the destination ||| alias	count=1
arg	callback to ||| callback	count=1
arg	from the event loop ||| xer primary other selectables	count=1
module	next iteration and ||| internet	count=1
function	throw the [function_2] ||| [function_1] [function_2]	count=5
module_class	remove the [class_2] ||| [module_1] [class_2]	count=2
function	the main ||| main	count=1
class	wx ||| wx	count=1
function	this represents different ||| ssh	count=1
function	text that links ||| link	count=1
arg	and ||| port	count=1
function	cdup change directory up ||| cdup	count=1
class	legacy observer to ||| legacy	count=1
class	message ||| multipart message structure	count=1
function	body has been ||| body	count=2
arg	an unexpected ||| error todo	count=1
function	[function] c{obj} which ||| [function]	count=3
function	parses partial ||| fix	count=1
function	returns an address ||| get host	count=1
class	processes reboots etc ||| name	count=1
function	messages via amp invoke ||| call remote	count=1
function	we will ||| wont	count=1
class	since last write ||| log file	count=1
class	called when we ||| ircclient	count=1
arg	[arg_1] [arg_2] ||| [arg_1] backlog [arg_2]	count=10
function	[function_1] modules ||| [function_2] [function_1]	count=1
arg	either ||| source primary other primaryflag	count=1
function	registration ||| registration	count=2
class	a random ||| digest credential factory	count=1
class	were ||| sshtransport base	count=1
function_arg	policy [arg_2] ||| [function_1] [arg_2]	count=1
module_class	in the [class_2] ||| [module_1] [class_2]	count=16
function	the deferred has been ||| cancel	count=1
arg	topic to ||| channel topic author	count=1
function	entity for ||| entity	count=2
function	resume request to ||| resume	count=1
function	flow [function_2] ||| [function_1] [function_2]	count=2
class	if the key ||| sshpublic key database	count=1
function	function ||| unpickle function	count=1
function	process ends ||| process ended	count=1
function	create a new message ||| create new message	count=1
function	the contact list and ||| contact	count=2
function	msg_newkeys message no ||| ssh newkeys	count=2
function	size as an ||| size	count=1
class	database ||| user database	count=1
function	from the ||| received	count=3
class	this message ||| multipart message	count=1
function	method names ||| method names to dict	count=1
function	mapping of serialized arguments ||| arguments	count=1
function_arg	[function_1] [arg_2] ||| [function_1] adjust [arg_2]	count=1
class	authorities to trust when ||| sslcertificate authorities	count=1
class	get a new l{dnsdatagramprotocol} ||| resolver	count=1
class	pidfile ||| ipidfile	count=1
module	from the first blob ||| conch	count=1
function	giving an absolute url ||| url	count=1
function_arg	[function_1] a _switchbox ||| [function_1] [arg_2]	count=1
function	remove an entity for ||| remove entity	count=1
function	[function_1] api documentation ||| [function_2] [function_1]	count=1
function	a database connection ||| connection	count=1
function	return its ||| get	count=1
module	group ||| words im	count=4
module	the application ||| application	count=1
module_class	things to conform to [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	[arg] bio and ||| [arg]	count=1
function	[function] for ||| remaining outbound [function]	count=3
function	msg_userauth_success the server ||| ssh userauth success	count=1
module	to this function ||| mail	count=1
function	to getpeer but for ||| get host	count=1
function	chunk ||| data chunk	count=1
class	stream ||| listen component authenticator	count=1
function	pythonattribute a testcase subclass ||| name	count=1
class	consumer by ||| body producer	count=1
function	on the client and ||| and	count=1
module	decorators and the object ||| python	count=1
arg	a function in ||| f	count=2
class	additional ||| chunked encoder	count=1
function	guess the type ||| guess string type	count=1
arg	key database ||| key	count=1
function	the next file in ||| next	count=1
class	protocol ||| binary box protocol	count=1
class	is intended ||| maildir	count=1
class	indicate that we ||| itelnet	count=1
module	new ||| names	count=1
function	method associated with ||| method	count=1
function	abort the [function_2] ||| [function_1] [function_2]	count=1
module	modules instance ||| trial	count=1
function	an exception ||| exception	count=1
class	zippath by ||| zip map impl	count=1
function	for consuming the payload ||| for payload	count=1
function	[function_1] hostname that ||| [function_2] [function_1]	count=1
class	amp invoke it ||| box dispatcher	count=1
function	set the ||| set alias	count=1
function	passed ||| success	count=1
arg	name matching ||| name	count=1
arg	nonce from the ||| nonce	count=1
function	display [function_2] ||| [function_2] [function_1]	count=7
function	an expected ||| expected	count=2
function	with a ||| with	count=1
function	iterator over ||| iterkeys	count=1
class	running service if ||| sshtransport	count=1
class	retrieve this [class_1] [class_2] ||| [class_1] [class_2]	count=1
class	of my class to ||| port	count=2
class	handle user ||| user	count=1
function	an instance of ||| name	count=1
function	resume ||| resume	count=10
class	authorized keys and ||| key database	count=1
function	a connection to ||| notify no connection	count=1
function	succeeded ||| success	count=2
class	string for a ||| delivery base	count=1
function	to define ||| define	count=1
function_arg	[function_1] message ||| [arg_2] [function_1]	count=13
function	l{servicemanager}, using ||| manager	count=1
function_arg	child elements [arg_2] ||| [function_1] [arg_2]	count=6
arg	message is ||| status	count=1
module	filters [module] list with ||| [module]	count=1
function	[function_1] [function_2] ||| [function_2] path [function_1] as pattern	count=4
function	clientside cache ||| cache and observe for	count=1
class	is intended to be ||| maildir name	count=1
function	in the known_hosts ||| in known	count=1
module	using ||| runner	count=1
arg	checks to see if ||| pubkey	count=1
function	the default ||| default	count=3
function	values decoded from an ||| from	count=1
class	authorities to trust ||| open sslcertificate authorities	count=1
module	the characters that are ||| python	count=1
class	that the agent ||| sshagent client	count=1
function	tls is required and ||| tlsrequired	count=1
arg	the modes on ||| modes	count=1
arg	[arg_1] client ||| [arg_2] [arg_1]	count=8
function	process and returns ||| process output and	count=1
function	msg_newkeys message no ||| newkeys	count=2
function	for removing ||| agentc remove	count=1
arg	creator the l{_isshconnectioncreator} ||| creator	count=1
function	version of an object ||| version of	count=1
function_arg	number as [arg_2] ||| [arg_2] [function_1]	count=1
class	response to ||| httpclient parser	count=1
function	remove ||| remove	count=34
function	prepare to deliver any ||| deliver	count=1
module	the beginning of c{query} ||| mail	count=1
function	the currently selected ||| fetch head	count=1
function	gets a notice ||| irc notice	count=1
function	to consider it as ||| get replacement	count=1
class	date ||| daily log file	count=2
function	[function_1] an endpoint ||| [function_1] [function_2]	count=1
function	parse some amp ||| parse	count=1
function	a json-serializable data structure ||| failure as json	count=1
arg	vcsrepository ||| fromdir exportdir	count=1
class	maildir ||| maildir	count=2
module_class	converts the [class_2] ||| [module_1] [class_2]	count=6
class	a new file that ||| file	count=1
function	all child elements ||| elements by tag	count=1
class	whether this port ||| port	count=2
function	authenticator ||| register authenticator	count=1
function	[function_1] a previously-remembered ||| [function_2] [function_1]	count=1
module	this method is called ||| spread	count=2
class	tcp ||| dnsclient	count=1
function_arg	[function_1] credentials ||| [arg_2] [function_1]	count=1
function	method's class which refers ||| in class	count=1
module	object with the ||| conch	count=1
function	remove an entity ||| remove entity	count=3
class	initializes a coordinate ||| coordinate	count=1
module_class	[module_1] matching ||| [module_1] [class_2]	count=8
module	[module] to ||| [module]	count=1
function_arg	[function_1] c{failure} ||| [function_1] [arg_2]	count=3
class	known [class] not ||| [class]	count=1
class	@param ||| alias base	count=1
arg	given level ||| level format	count=2
arg	initializes a new l{unixauthorizedkeysfiles} ||| userdb parsekey	count=1
arg	a byte ||| strio length	count=1
arg	representation of this key ||| type	count=1
function	add a success to ||| add success	count=1
function	[function_1] namespaces ||| [function_1] [function_2]	count=2
function	create or retrieve an ||| get	count=1
function	[function] method ||| run fixtures and [function]	count=1
function	a dcc ||| dcc	count=4
module	retrieve the ||| internet	count=1
function	from an ||| from sign hours minutes	count=1
arg	a start [arg_2] ||| [arg_2] [arg_1]	count=3
function_arg	[function_1] data ||| [function_1] string [arg_2]	count=1
class	has ||| deferred queue	count=2
arg	mac values ||| seqid data mac	count=1
function	stat ||| stat	count=2
arg	invoked when a length ||| length	count=1
function_arg	person [arg_2] ||| [function_1] [arg_2]	count=2
function	a response ||| to response	count=1
class	function across all ||| name generator	count=1
function	messages via ||| remote	count=1
module	a pb [module] in another ||| [module]	count=1
class	if this call ||| call	count=1
module_class	to [class_2] ||| [module_1] [class_2]	count=5
function	for an address entry ||| for	count=2
function	from a gsv ||| fix gsv	count=1
function	cancel ||| cancel	count=5
arg	dns records ||| cnamesleft	count=1
class	to ||| generator	count=2
arg	another ||| stanzatype	count=1
function	returns a deferred ||| output	count=1
function	anything is a ||| anything	count=1
function	command [function_2] ||| [function_2] [function_1]	count=12
function	a sequence of application ||| sequence	count=1
function	a ||| build service manager	count=2
function	a i{kexinit} message to ||| kex init	count=1
function	and resume ||| resume	count=1
class	authorities to ||| authorities	count=1
function	object it is ||| get	count=1
function	and a message ||| message	count=1
class	[class_1] observer ||| [class_2] [class_1]	count=1
function	get a channel ||| channel	count=1
arg	test [arg_2] ||| [arg_1] [arg_2]	count=1
module	return their ||| trial	count=1
function	fetchoverview() ||| get overview	count=1
function	channel request ||| channel	count=1
module_class	in [class_2] ||| [module_1] [class_2]	count=10
function	a mirc control sequence ||| to mirccontrol codes	count=1
arg	[arg_1] failed ||| [arg_1] [arg_2]	count=1
function	[function_1] the timeout ||| [function_2] [function_1]	count=1
arg	failure ||| err	count=1
function	time of an entry ||| time	count=1
function	an instance ||| build	count=1
function	more body [function_2] ||| [function_1] [function_2]	count=3
function	close the process' stdout ||| lose connection	count=1
function_arg	@type [arg_2] ||| [function_1] [arg_2]	count=4
function	(or the currently selected ||| fetch	count=3
class	list of ||| list protocol	count=1
function	[function] deferred ||| [function] completion	count=1
function	the type of ||| type	count=2
function	their string representations ||| clean	count=1
function	'message' in the ||| line	count=1
class	from the [class] ||| [class] body	count=2
function	fails to ||| notify on fail	count=1
function	start ||| start service	count=3
class	to be unique across ||| maildir name generator	count=1
function	puts method names ||| method names to	count=1
class	is intended to ||| generator	count=1
class	generate ||| maildir name generator	count=1
module	sending the ||| conch ssh	count=2
arg	given site ||| site	count=1
function	the response [function] corresponding ||| [function]	count=1
arg	the event loop ||| xer primary other selectables	count=1
function	c{f} using a thread ||| thread	count=1
arg	room ||| shortname	count=1
module	since ||| python	count=1
function_arg	[function_1] bytes ||| [function_1] [arg_2]	count=4
function	to get a channel ||| channel	count=1
module	the other side can ||| conch	count=1
module_class	the process ||| internet process	count=2
class	regardless of the connection ||| iconnector	count=1
arg	a socket ||| socket data	count=1
arg	objects ||| objects	count=1
module	version [module] an nmea ||| [module]	count=1
arg	implement l{istreamclientendpoint connect} ||| protocolfactory	count=3
module	the reactor ||| web	count=1
arg	an indication ||| host serv_name username	count=1
module	the test if c{containee} ||| trial	count=2
module	the outgoing ||| web	count=1
function	of bytes sent ||| sent length	count=1
arg	@param user the hostmask ||| user channel data	count=1
class	set ||| imulticast transport	count=2
function	child ||| child with default	count=2
arg	newtopic ||| newtopic	count=1
class	of the ||| key	count=1
function	socket using ||| socket	count=1
function	decimal degrees this ||| decimal degrees	count=2
function	close ||| send close	count=1
function	a public key ||| publickey	count=1
class	@param ||| transfer client	count=1
function_arg	a rectangle [arg_2] ||| [function_1] [arg_2]	count=1
class	ftp server ||| ftpclient	count=1
function	a child resource ||| child with	count=1
arg	used as a filename ||| k	count=1
arg	a relaying manager to ||| manager delay	count=1
function_arg	allow [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	header ||| fetch xheader	count=1
function	a msg_service_accept ||| ssh service accept	count=1
class	position ||| position	count=1
function	to post [function_2] ||| [function_1] [function_2]	count=2
function_arg	elements of [arg_2] ||| [arg_2] [function_1]	count=5
function	representations ||| clean	count=1
function	request via ||| request	count=1
function	the server gotoverview() ||| fetch	count=1
function_arg	[function_1] [arg_2] specified c{nodeid} as any ||| [function_1] [arg_2]	count=5
class	the group ||| group	count=2
function	[function_1] [function_2] should be displayed ||| [function_1] displayable [function_2]	count=3
class	a script through the ||| script	count=1
class	know if the key ||| key	count=1
function	convert a ||| to	count=2
class	socket object ||| port	count=1
module	[module] list with ||| [module]	count=1
function	handle a ||| handle	count=2
arg	reporter ||| testname error	count=1
module	c{_deprecated_info} ||| python	count=1
arg	'message' ||| message	count=1
class	an idle ||| team	count=1
function	[function_1] for a ||| [function_2] [function_1]	count=4
function	start this ||| start	count=1
arg	indicate the ||| width height	count=1
function	string key ||| flat key	count=1
function	or an instance ||| name	count=1
class	port for tls ||| port	count=1
function	messages via amp invoke ||| remote	count=1
arg	suffix ||| suffix prefix ttl	count=1
function	kicked from ||| kicked from	count=2
module	of a ||| cred	count=1
class	attributes this formatting state ||| formatting state	count=1
function	[function_1] message to ||| [function_1] group [function_2]	count=1
class	file from all ||| file	count=1
function	add a header ||| add	count=1
function	list of [function] of ||| list static [function]	count=1
function	of xhdr data for ||| xhdr	count=1
function	whether this ||| is	count=1
function	add certificate-authority certificates to ||| add cacerts to	count=1
class	c{self ||| netstring	count=1
function	for outgoing multicast ||| outgoing	count=1
module	iteration and ||| internet	count=1
class	execute the [class] in this ||| [class]	count=1
arg	the domain ||| domain	count=2
function	given message type may ||| message type	count=1
function	into a trust ||| trust	count=1
arg	from the relay queue ||| relay	count=1
class	listing ||| directory lister	count=1
module	and ||| im	count=1
function_arg	[function_1] the attributes ||| [function_1] path [arg_2]	count=1
function_arg	connects a [arg_2] ||| [arg_2] [function_1]	count=3
function	prepare an [function_2] ||| [function_1] [function_2]	count=3
class	new protocol you need ||| binary box protocol	count=1
module	mark [module] ||| [module]	count=3
function	already [function_2] ||| [function_2] [function_1]	count=1
module	certificate ||| internet	count=1
arg	a message from ||| message	count=1
class	this [class] ||| domain [class]	count=2
arg	the response to a ||| response	count=1
class	all calls ||| generator	count=1
class	my socket ||| connected datagram port	count=1
function	on [function] arguments ||| matching [function]	count=1
function	object ||| get	count=1
module	pkey ||| internet	count=1
class	a line unless ||| ftpclient basic	count=1
function	an l{imessagedelivery} ||| message delivery	count=1
arg	number of ||| number	count=1
function	a trial [function] class set ||| [function]	count=1
arg	queue adding [arg_1] [arg_2] ||| test [arg_1] [arg_2]	count=1
class	response minus ||| error response	count=1
function	as ||| get replacement string	count=1
module	result from [module_2] ||| [module_2] [module_1]	count=1
class	authentication type ||| auth client	count=1
arg	command to get ||| command	count=1
arg	a path within the ||| path	count=1
class	provider ||| monitor	count=1
function_arg	string key [arg_2] ||| [arg_2] [function_1]	count=1
class	predetermined list ||| failure	count=1
function	session ||| get session	count=1
arg	chat ||| chat	count=3
function_arg	[function_1] packet to ||| [function_1] [arg_2]	count=1
function	the normal prefix ||| get log prefix	count=1
arg	inside cfrunloop ||| runloop runner	count=1
class	of the underlying ||| key	count=1
class	all ||| name	count=2
function	other authentication error ||| error	count=1
function	[function_1] its ||| [function_2] [function_1]	count=1
function_arg	msg_kexinit [arg_2] ||| [arg_2] [function_1]	count=1
arg	a pair ||| callbackargs callbackkeywords	count=1
function	text ||| replacement string	count=1
class	l{callremote}, ||| box dispatcher	count=1
class	on this test ||| test case	count=1
function	start running ||| start	count=1
function	size of this ||| file size	count=1
module_class	of this port ||| internet port	count=1
function	the given arguments ||| exclusive arguments	count=1
arg	[arg_1] messages ||| [arg_2] flags mode [arg_1]	count=4
function	current [function_2] ||| [function_2] [function_1]	count=1
function	interface ||| for interface	count=1
arg	[arg_1] relay queue ||| [arg_2] [arg_1]	count=4
arg	failure ||| format failure level	count=1
arg	hashes using ||| outkey iniv inkey	count=1
function	deferred ||| cancel	count=1
function	constructor [function] ||| [function] displayable	count=3
function	has already ||| cancel	count=1
function	[function_1] factory to ||| [function_2] [function_1]	count=4
class	proxy ||| reverse proxy	count=1
function	post [function_2] ||| [function_1] [function_2]	count=2
function	list ||| get	count=1
arg	attempts ||| lengthasstring	count=1
function	number [function_2] ||| [function_1] [function_2]	count=4
arg	another user ||| user filename port	count=1
class	unique ||| maildir name	count=1
function	consider it as ||| get	count=1
module	the test if a ||| trial	count=1
function	for ||| replacement string	count=1
function	a suitable log observer ||| log observer	count=1
function_arg	[function_1] server challenge ||| [function_1] [arg_2]	count=3
function	to bad [function_2] ||| [function_1] [function_2]	count=3
function	expiration [function_2] ||| [function_2] [function_1]	count=2
function	and all children to ||| to xml	count=1
function	not yet allocated ||| queue	count=1
function	as expressed by a ||| waiters	count=1
function	for a deprecated api ||| string	count=1
function_arg	[function_1] returned to ||| [arg_2] [function_1]	count=3
function_arg	size as [arg_2] ||| [arg_2] [function_1]	count=1
function	for that stream ||| stream	count=1
function	secondary for ||| secondary	count=1
arg	of message sizes into ||| msgs getuidl	count=1
class	be ||| maildir name generator	count=1
function	instance of ||| name	count=2
module_class	[module_1] zlib ||| [module_1] [class_2] finish	count=4
arg	l{imessagepart} provider which ||| main subtype attrs	count=1
function	observer for the ||| observer	count=1
function	stream's flow ||| flow	count=1
function	left ||| user left	count=1
function	request has been received ||| request received	count=1
function	the list [function] in this ||| [function]	count=1
class	c{float} param [class] intervals the ||| [class]	count=1
function	and setup authentication mechanism ||| mechanism	count=1
arg	c{query} possibly ||| query msgid msg lastsequenceid	count=1
function	[function_1] bytes ||| [function_1] [function_2]	count=1
function_arg	return [arg_2] ||| [function_1] [arg_2]	count=1
class	@param ||| tcp4server endpoint	count=1
class	retrieve ||| base	count=1
arg	[arg_1] dns records ||| [arg_1] domain [arg_2]	count=1
function	some polite ||| replacement string	count=1
function	wait ||| wait	count=1
class	setup ||| saslinitiating	count=1
class	value suitable for ||| digest	count=1
module	negation of ||| mail	count=1
arg	message in [arg_2] ||| [arg_2] [arg_1]	count=2
arg	name method/function name ||| name filename	count=1
arg	of c{query} possibly ||| lastsequenceid	count=1
class	a ||| key	count=2
class	http ||| request	count=1
class	of my ||| port	count=2
function	and write it to ||| write	count=1
function	pythonmodule pythonattribute a testcase ||| name	count=1
class	the logged-in [class] ||| for unix conch [class]	count=1
class	intended to be ||| generator	count=1
class	report ||| result adapter	count=2
function	unpack ||| unpack open	count=1
function	spawn a [function_2] ||| [function_1] [function_2]	count=1
module	is in a ||| python	count=1
function	has been ||| cancel	count=1
class	be unique across ||| name generator	count=1
function	system-defined home ||| home	count=1
class	the certificate authorities to ||| open sslcertificate authorities	count=1
function	all keys found in ||| request identities	count=1
function	the contact list ||| contact	count=2
class	the underlying [class] ||| deprecated [class]	count=1
rep	the peer [function_arg_2] ||| [module_class_1] [function_arg_2]	count=2
arg	record deprecation warnings ||| newmethod	count=1
class	retry ||| machine	count=1
function	reading writing ||| do write	count=1
function	parse given jid ||| parse	count=1
function	dcc [function_2] ||| [function_2] [function_1]	count=11
class	publisher ||| log publisher	count=2
class	this service ||| ichat service	count=1
class	new protocol you need ||| protocol	count=1
function_arg	hostname [arg_2] ||| [arg_2] [function_1]	count=1
arg	response and attempt to ||| response	count=1
class	since last write ||| file	count=1
function	underlying pkey ||| key	count=1
function	display including ||| to display	count=4
function	[function_1] sent ||| [function_2] [function_1]	count=3
arg	fd with the ||| fd	count=1
class	next iteration and ||| call	count=1
class	get a ||| resolver	count=1
arg	local files ||| files	count=1
module	for content-length and ||| web	count=1
function	write the ||| write	count=3
function_arg	allow [function_1] [arg_2] l{serialnumber} instance ||| names serial number [function_1] [arg_2]	count=1
function_arg	one stat [arg_2] ||| [arg_2] [function_1]	count=1
module	the server-dtp to ||| protocols	count=1
function	prompt [function] ||| draw input [function]	count=1
module	in which the ||| mail	count=2
function	resume request to another ||| resume	count=1
arg	object @param fp l{twisted ||| fp	count=1
class	given file ||| file	count=1
function	[function_1] attempts ||| [function_2] [function_1]	count=5
function	that marks a property ||| property	count=1
function_arg	[function_1] a byte ||| [function_1] [arg_2]	count=1
arg	internal ||| broker	count=1
function	internally ||| internal	count=1
class	portal ||| portal	count=1
function	this to write ||| write	count=1
module	to handle the beginning ||| conch ssh	count=1
function	[function_1] per second ||| [function_1] [function_2]	count=1
arg	the password the ||| password	count=1
class	for deletion ||| mailbox	count=1
function	for the [function_2] ||| [function_2] [function_1]	count=4
arg	a message in ||| user message	count=2
function	date string ||| string	count=1
arg	mbox [arg_2] ||| [arg_2] [arg_1]	count=1
function	a msg_service_accept message ||| ssh service accept	count=1
function_arg	[function_1] published ||| [function_1] function [arg_2]	count=1
function	request a screen refresh/redraw ||| ff	count=1
arg	a l{localworkeramp} instance ||| worker result testcases cooperate	count=1
function	list of disconnect ||| disconnect	count=1
function	[function_1] wrapped old-style ||| [function_2] [function_1]	count=2
function	[function_1] keys ||| [function_2] [function_1]	count=2
class	parses partial visible ||| nmeaadapter	count=1
function	set the attributes ||| set attributes	count=2
function	some ||| some	count=2
class	of a www-authenticate challenge ||| digest	count=1
function_arg	push a [arg_2] ||| [arg_2] [function_1]	count=1
function	appropriate records ||| records	count=1
module	[module] known ||| [module]	count=1
function	gather state ||| state	count=2
module	the l{cooperativetask} ||| web	count=2
function_arg	hostname [arg_2] ||| [function_1] hostname [arg_2]	count=1
class	if a checker ||| checker	count=1
function	determine what type ||| get type	count=1
function	received ||| box received	count=1
function	of headers ||| headers	count=1
function	for a ||| factory	count=1
function	send an error for ||| send error	count=1
module	at this ||| python	count=1
class	interrupt ||| reactor base	count=2
module	c{request} to [module] access ||| [module]	count=1
module	new l{dnsdatagramprotocol} instance ||| names	count=1
function	the disconnect ||| disconnect	count=1
function	clientside [function_2] ||| [function_2] [function_1]	count=2
function	[function_1] a ||| [function_2] [function_1]	count=3
class	the input file to ||| file	count=1
arg	declare ||| message modulename	count=1
function	above mapping ||| level mapping	count=1
function	the attributes ||| attrs	count=1
module	pre-built l{servicemanager}, ||| protocols jabber	count=1
function	modules instance of pythonmodule ||| name	count=1
module_class	represents [module_1] [class_2] ||| [module_1] [class_2] eq	count=1
class	fileno() ||| process writer	count=1
module	[module_1] the encryption ||| [module_2] [module_1]	count=1
function	to the ||| to	count=6
arg	article to a list ||| article	count=1
class	the wrapped protocol ||| protocol	count=1
function	all pending requests for ||| ignore and cancel connect waiters	count=1
module	string describing this ||| python	count=1
function	list of decorators ||| get deprecated	count=1
function	open the stream ||| open stream	count=3
arg	name of ||| name	count=3
arg	name and uri ||| name uri	count=2
arg	@param environ ||| environ start	count=1
module	in the ||| conch	count=3
function_arg	connect a [arg_2] ||| [function_1] unix address [arg_2]	count=1
function	the [function] format ||| fix [function]	count=1
module	object it ||| python	count=1
function	already been [function_2] ||| [function_2] [function_1]	count=1
module	server ||| news	count=1
module	api with ||| python	count=1
arg	fail because the ||| code resp	count=1
function	text ||| get replacement	count=1
function_arg	endpoint from [arg_2] ||| [arg_2] [function_1]	count=2
function	sign the given c{data} ||| sign	count=1
function	add a [function_2] ||| [function_2] [function_1]	count=6
module_class	render the exception ||| web failure	count=1
function	ready for [function_2] ||| [function_2] or [function_1]	count=1
function_arg	a notify [arg_2] ||| [function_1] [arg_2]	count=2
class	unique ||| maildir name generator	count=1
arg	a ||| jid password	count=1
function	request the ||| fetch	count=1
function	'message' ||| end	count=1
function_arg	[function_1] is l{none} ||| [arg_2] [function_1]	count=5
class	stop performing ||| itelnet	count=1
class	for the daylight saving ||| zone	count=1
class	a ||| failure	count=1
arg	[arg_1] query checking ||| [arg_2] [arg_1]	count=2
arg	result of c{predicates} ||| predicates	count=1
function	connection it resets ||| reset	count=1
function	log to file ||| log file	count=3
class	of ||| public	count=1
function	and ||| collect	count=2
function_arg	[function_1] accountname a ||| [function_1] [arg_2]	count=4
function	broadcast this [function_2] ||| [function_1] [function_2]	count=2
class	frame references ||| frame	count=2
function	data is available ||| data	count=1
arg	initializes a speed ||| speed	count=1
function	data directory for the ||| data directory	count=1
function	polite text exhorting the ||| replacement string	count=1
class	apply each ||| monkey patcher	count=1
module_class	[module_1] http ||| [module_1] httppage [class_2]	count=1
function	remove a ||| get	count=1
module_class	at this path ||| python file path	count=1
function	of l{ireactorinstaller} plugins ||| reactor types	count=1
function	with ||| init	count=2
function	[function_1] registration ||| [function_2] [function_1]	count=1
function	called for subnegotiations ||| unhandled subnegotiation	count=1
function	[function_1] the default ||| [function_2] [function_1]	count=1
arg	to newnick ||| newnick	count=1
function	into a string for ||| to string	count=1
function	in the non-authenticated ||| login	count=1
module_class	that this file ||| python ifile path	count=1
function	[function_1] of supported ||| [function_2] [function_1]	count=1
class	test ||| dist trial	count=1
class	mailbox @type ||| imap	count=2
function	msg_kex_dh_gex_init message ||| ssh kex dh gex init	count=1
function	send an expected ||| expected	count=1
function	session [function] attribute to ||| add unique [function]	count=1
function_arg	[function_1] l{localworkeramp} instance ||| [arg_2] [function_1]	count=1
function	and ||| clean	count=1
function	store the given header ||| header received	count=1
arg	[arg_1] queries via ||| [arg_2] [arg_1]	count=8
function_arg	[function_1] referring to ||| [arg_2] [function_1]	count=1
function	initialization [function_2] ||| [function_1] [function_2]	count=1
function	per reactor iteration ||| reactor	count=1
function	[function_1] context object ||| [function_1] [function_2]	count=1
function	given lower-cased name is ||| is	count=1
module	corresponds to the public ||| conch ssh	count=1
function	[function] entities that ||| list [function]	count=1
function	share an ||| kex dh gex	count=1
function	client after the connection ||| connection	count=1
function	l{servicemanager}, using ||| service manager	count=1
class	this function ||| maildir name generator	count=1
arg	given [arg] ||| [arg] recipient	count=1
arg	[arg_1] see ||| [arg_1] [arg_2]	count=2
arg	a query to a ||| query servers timeout queriesleft	count=1
function	time based seed ||| time	count=1
module	context using ||| application runner	count=1
module	all processes reboots ||| mail	count=1
class	but before c{teardown} ||| synchronous	count=1
class	the temporary [class_2] ||| [class_2] [class_1]	count=6
function	install a signal handler ||| install	count=1
module	side has closed the ||| conch ssh	count=1
class	for a message ||| base	count=1
module	key if the ||| conch	count=1
class	api documentation ||| apidocs script	count=1
function	and return the final ||| complete	count=1
module	on the ||| conch insults	count=3
function	the ||| remote	count=1
function	string @param ||| init	count=1
function	callback for ||| add callback	count=1
function	a quick and dirty ||| and disconnect	count=3
class	back ||| sshuser auth client	count=4
function	and initialize the l{filepath} ||| init	count=1
arg	@type file any ||| file consumer	count=1
function	of the given arguments ||| mutually exclusive arguments	count=1
module_class	number of workers ||| python thread pool	count=1
function	human-readable text ||| text	count=1
class	acquire this lock this ||| filesystem lock	count=1
function_arg	[function_1] a user ||| [arg_2] [function_1]	count=3
function	data with level sol_socket ||| level	count=1
function	the c{calllater} callback this ||| call later	count=1
module	is [module_2] ||| [module_2] [module_1]	count=1
class	skip the next iteration ||| looping call	count=1
function	is a working directory ||| is working directory	count=1
function_arg	enable this option ||| enable remote option	count=1
function	an alternative ||| string	count=1
function	constructor to create ||| init	count=1
class	the ||| public	count=1
class	sending messages ||| dispatcher	count=1
arg	deprecated ||| version replacement	count=1
arg	non-filled-out cached [arg_2] ||| [arg_1] [arg_2]	count=1
function_arg	[function_1] time seconds ||| [function_1] [arg_2] func args kw	count=1
arg	the flags for ||| flags silent	count=1
arg	@param thing an object ||| thing	count=1
arg	reason that ||| reason	count=1
module	it is ||| python	count=1
function	body for the ||| body request	count=1
function	the number ||| get number	count=1
class	disposition ||| message structure	count=1
function	text to [function_2] ||| [function_1] [function_2]	count=1
arg	element [arg_2] ||| [arg_1] [arg_2]	count=1
class	task completed with ||| task	count=1
function_arg	envelope for [arg_2] ||| [arg_2] [function_1]	count=1
function	set values ||| set	count=1
function	given file ||| file	count=1
arg	for the client side ||| client	count=1
class	task completed with ||| append message task	count=1
function	a basename of c{path} ||| sibling	count=1
arg	c{message} ||| responseconstructor	count=1
class	select and setup authentication ||| saslinitiating initializer	count=1
function	disconnecting after being asked ||| disconnecting	count=1
function_arg	a query [arg_2] ||| [arg_2] [function_1]	count=2
function	result at this ||| result	count=1
function_arg	[function_1] representation ||| [function_1] [arg_2]	count=3
arg	an ||| error	count=1
function	to ||| state to	count=1
function	message sent from ||| show message	count=1
arg	incoming mac values ||| mac	count=1
function	[function_1] frozenset ||| [function_2] [function_1]	count=1
function	envelope this ||| mail	count=1
arg	client protocol to ||| protocol	count=1
arg	[arg_1] server ||| [arg_2] client port [arg_1]	count=1
function	start calling boxreceived ||| start receiving	count=1
function	already specified then run ||| run	count=1
function	basename of c{path} ||| sibling	count=1
arg	and nonce from ||| nonce	count=1
function	per ||| per	count=1
module	key containing only the ||| conch	count=1
function	cname ||| canonical name	count=1
arg	a l{localworkeramp} ||| testcases cooperate	count=1
function	[function_1] _exc_info if ||| exc info or failure [function_1] [function_2]	count=1
function	complete uidl response ||| uidlist response	count=1
function	which share an integer ||| ssh kex dh gex group	count=1
arg	of a logical url ||| logicalurl	count=1
function	line buffer at ||| line	count=1
function	it is ||| get	count=1
function	enable debug hooks for ||| debug mode	count=1
function	for a ||| replacement string	count=1
function	of failed [function_2] ||| [function_2] [function_1]	count=1
function_arg	[function_1] group for ||| [arg_2] [function_1]	count=2
function	projects in ||| projects	count=1
function	proxy ||| proxy	count=1
arg	string representing a line ||| string	count=1
function	the portal for ||| portal	count=1
function	for removing all ||| remove all	count=1
module	retrieve ||| internet	count=1
function	[function] should ||| get displayable [function]	count=3
function_arg	headers [arg_2] ||| [arg_2] [function_1]	count=2
function	cookies out of received ||| cookies	count=1
function	[function_1] resume ||| [function_1] do accept [function_2]	count=2
function	gather state ||| get state	count=2
class	[class_1] to ||| [class_2] [class_1]	count=6
module	the private [module_2] ||| [module_1] [module_2]	count=2
function	identity for ||| opt identity	count=1
class	further processing of ||| cooperative	count=1
function	[function_1] mac ||| [function_1] [function_2]	count=1
class	@return true [class_2] ||| [class_1] [class_2]	count=2
function	[function_1] resume ||| [function_2] [function_1]	count=9
function	of a message ||| message	count=4
arg	0 or 1 ||| resp numok	count=1
function	the ||| get deprecated	count=3
function	textual and ||| host as bytes and text	count=1
function	for ||| call remote	count=1
class	l{remotereference} ||| remote reference	count=1
function	cleanups added ||| cleanups	count=1
module	it using c{*args}, ||| names	count=1
module	up when the ||| mail	count=2
function	[function_1] generator and ||| [function_2] [function_1]	count=1
arg	response ||| response method	count=2
function	received from ||| received	count=2
function_arg	the producer will [function_1] [arg_2] this method ||| internet iconsumer [function_1] [arg_2]	count=1
class	invoke ||| dispatcher	count=1
arg	on defined render_foo ||| resource	count=1
class	the consumer by ||| body	count=1
class	non-blocking fashion ||| itransport	count=1
function	share an ||| ssh kex dh gex	count=1
arg	given path this ||| path protocol	count=1
function_arg	[function_1] child ||| [arg_2] [function_1]	count=1
function	unicode ||| unicode	count=1
class	initializes a satellite object ||| satellite	count=1
function	determines whether an ||| constraint	count=1
class	stdin ||| writer	count=1
arg	digest ||| ha2 algo psznonce	count=1
class	of a ||| credential factory	count=1
arg	a child ||| child	count=1
class	context [class_2] ||| [class_1] [class_2]	count=1
module	a context using ||| runner	count=1
class	the service ||| machine	count=1
module_class	[module_1] component wishes ||| [module_1] [class_2]	count=2
function	connection was [function_2] ||| [function_2] [function_1]	count=1
module	from the ||| mail	count=2
module	across ||| mail	count=2
function	to send for ||| to copy for	count=3
arg	and then ||| cls type timeout	count=1
function	made to ||| made	count=1
arg	the key ||| key	count=2
arg	file @type file ||| file consumer	count=1
class	of a netstring ||| netstring	count=1
arg	for data to ||| data	count=2
function	verify an incoming mac ||| verify	count=1
function	to c{path} ||| to	count=1
class	stop ||| client factory	count=1
function	human [function_2] ||| [function_2] [function_1]	count=2
class	a retry attempt ||| client	count=1
function	to deliver any future ||| deliver	count=1
class	certificate using ||| certificate	count=1
module	in the ||| mail	count=6
arg	with ||| text	count=1
module	first check for the ||| conch	count=1
function	[function_1] [function_2] in the response body ||| web xforwarded for request [function_2] [function_1]	count=2
function	characters starting ||| character	count=1
class	is intended to ||| maildir name	count=1
function_arg	given keys [arg_2] ||| [arg_2] [function_1]	count=1
class	a private [class_2] ||| [class_2] [class_1]	count=3
arg	by a given increment ||| streamid increment	count=1
class	this ||| cert	count=1
class	it ||| box	count=1
function	sign ||| sign data	count=1
function	get registration [function_2] ||| [function_2] [function_1]	count=2
function	from a ||| from	count=9
class	be useful ||| file	count=1
module	authentication ||| words	count=1
arg	domain to connect to ||| domain	count=1
function_arg	[function_1] creator an ||| [function_1] [arg_2]	count=1
module	after the associated ||| web	count=1
function	user that an account ||| account	count=1
function	[function_1] loopback ||| [function_2] [function_1]	count=1
function	append file ||| add file	count=1
function	the length ||| length	count=3
class	remove ||| three phase event	count=3
module	this message ||| mail	count=1
class	see l{_janitor test} ||| janitor	count=1
arg	the given path this ||| path protocol	count=1
function	line buffer ||| line	count=1
function	list of decorators and ||| get deprecated	count=1
class	member of the suite ||| test suite	count=1
class	suitable ||| credential factory	count=2
function_arg	stream window [arg_2] ||| [arg_2] [function_1]	count=1
function	user to consider it ||| get replacement string	count=1
class	of the test ||| test case	count=1
function	while key ||| allowed key	count=1
function	when the stream has ||| stream	count=2
function_arg	prefix [arg_2] ||| [function_1] [arg_2]	count=5
function	namespace [function_2] ||| [function_2] [function_1]	count=5
class	service is ||| client machine	count=2
function	message for deletion ||| message	count=3
arg	deprecated [arg] ||| module [arg] version	count=1
class	using c{*args}, ||| resolver	count=1
class	legacy observer [class_2] ||| [class_2] [class_1]	count=1
module	set the ||| conch	count=1
arg	response [arg_2] ||| [arg_2] [arg_1]	count=2
function	flag if any ||| get deprecated	count=1
class	suitable for ||| digest	count=1
function	ipv4 ||| a	count=1
module	[module] session associated ||| [module]	count=2
class	domain object associated with ||| with	count=1
class	in addition ||| ibody producer	count=1
function	as a ctcp ||| ctcp make	count=1
arg	(af_unix/sock_stream) stream endpoint into ||| factory address mode backlog	count=1
function	all [function_2] ||| [function_2] [function_1]	count=6
class	address ||| address	count=2
function	client [function_2] ||| [function_2] [function_1]	count=6
class	is the ||| dispatcher	count=1
arg	as the query ||| query id	count=1
arg	size the maximum number ||| size	count=1
class	of segments ||| iftpshell	count=2
function	-> ||| is	count=1
module	constructs ||| words protocols	count=1
function	tag ||| tag	count=1
function_arg	[function_1] [arg_2] ||| [function_1] with warnings suppressed [arg_2]	count=1
module_class	[module_1] i{chunked} transfer-encoding ||| [module_1] [class_2]	count=8
arg	to listen ||| maxpacketsize mode	count=1
function	text data ||| gather text	count=1
class	processes reboots ||| maildir name generator	count=1
function	the log ||| log	count=1
module	on set the c{_deprecated_info} ||| python	count=1
class	on this test if ||| test case	count=1
function_arg	[function_1] happened server-side ||| [function_1] [arg_2]	count=1
function	url for later recalling ||| root url	count=1
function_arg	[function_1] type ||| [function_1] [arg_2]	count=1
function	issue a query ||| query	count=1
function	pre-built l{servicemanager}, using ||| build service manager	count=1
module	for [module_1] [module_2] ||| [module_1] [module_2]	count=4
function	body ||| body data received deferred	count=1
function	l{unicode}-mode ||| text mode	count=1
function	entity [function_2] ||| [function_2] [function_1]	count=1
function	is in ||| is in	count=1
function	secondary for the ||| secondary	count=1
class	deferred has been canceled ||| queue	count=1
function	makes sure that the ||| check partial length specification	count=1
function	print a [function_2] ||| [function_2] [function_1]	count=7
module	from ||| words protocols	count=1
function	again after a ||| retry	count=1
function_arg	[function_1] was ||| [arg_2] [function_1]	count=1
class	has ||| file	count=1
module	the transport connection has ||| protocols jabber	count=1
arg	octets ||| octets	count=1
function_arg	[function_1] url ||| [arg_2] [function_1]	count=1
arg	c{query} possibly more than ||| msg lastsequenceid	count=1
function_arg	[function_1] username ||| [arg_2] [function_1]	count=1
arg	an l{imessagepart} provider which ||| main subtype attrs	count=1
function	return a l{key} from ||| get public key	count=1
function_arg	[function_1] a mailbox ||| [arg_2] [function_1]	count=1
function	direct client connection ||| dcc	count=1
function	the signed data ||| signed data	count=1
class	user authentication ||| user auth	count=2
class	log [class_2] ||| [class_2] [class_1]	count=6
class	unique across all calls ||| maildir name	count=1
class	register ||| connection mixin	count=1
class	has changed ||| log file	count=1
module	datagram with the given ||| pair	count=2
function	string representation of ||| safe repr	count=1
arg	given option ||| option	count=1
function	body for the article ||| body	count=1
function	install a signal ||| install	count=1
function	text to a ||| text	count=1
function	[function_1] patched by ||| [function_1] [function_2]	count=1
function	file descriptors to be ||| file	count=1
function	in a class ||| class	count=1
function	its ||| url	count=1
function	remove the private key ||| remove identity	count=1
function	the queue ||| queue	count=1
function	to keep [function_2] ||| [function_1] [function_2]	count=1
class	files and directories ||| transfer server	count=1
arg	them to the c{objects} ||| strings	count=1
function	c{dict} that maps ||| make excludes dict	count=1
function	the presence of a ||| contains	count=1
function	permissions ||| permissions	count=2
function_arg	read a [arg_2] ||| [function_1] [arg_2]	count=2
class	suitable for use ||| digest credential	count=1
module	find the source ||| web	count=1
class	this broker ||| broker	count=2
arg	[arg_1] a ||| [arg_2] [arg_1]	count=1
function	persistent ||| persistent	count=1
function	that contains test ||| test	count=1
function	in source ||| source lines	count=1
function	to keep a ||| state to	count=1
class	the date ||| file	count=1
class	since ||| log file	count=2
function_arg	single test method ||| stop test method	count=1
function	print 'message' in the ||| end	count=1
module	[module] a c{testcase} ||| [module]	count=3
arg	value of ||| val	count=2
class	the key matches the ||| sshpublic key	count=1
module	has been ||| internet	count=1
arg	a query ||| query servers	count=1
arg	gid ||| gid	count=1
function	[function_1] prefix to ||| [function_1] [function_2]	count=3
function	[function_1] authentication challenge ||| [function_1] [function_2]	count=4
arg	domain to ||| domain factory	count=1
arg	c{inode} with ||| inode	count=1
function	a new ||| new	count=4
arg	l{servicemanager}, using the ||| jid	count=1
function	http header extract the ||| extract	count=1
function	host that ||| host	count=1
function	[function_1] resume ||| [function_1] [function_2]	count=7
function	the attributes for ||| attributes	count=1
arg	type ||| type	count=1
function	into the receive ||| receive	count=1
module_class	of [class_2] ||| [module_1] [class_2]	count=16
class	file to the consumer ||| file	count=1
function	selectable ||| disconnect selectable	count=1
function	[function_1] header can ||| [function_1] [function_2]	count=1
function_arg	[function_1] offered file ||| [arg_2] [function_1]	count=3
arg	call [arg] c{args} positional ||| observewarning [arg]	count=1
function	doc ||| doc	count=1
module	[module] key is ||| [module]	count=3
arg	protocolswitchcommand ||| _prototoswitchtofactory	count=1
module	[module] options and ||| [module]	count=3
function	an offset [function_2] ||| [function_2] [function_1]	count=2
function	spwd ||| shadow get	count=1
function	remove a specific ||| remove	count=1
function	[function_1] docstring ||| [function_2] [function_1]	count=2
function	response [function] corresponding ||| [function]	count=1
function	some other authentication error ||| error	count=1
function	[function_1] from ||| [function_2] [function_1]	count=13
arg	c{classobj}, ||| classobj	count=1
function	instance ||| build	count=1
class	[class_1] to handle ||| [class_2] [class_1]	count=2
arg	a given ||| name	count=1
function	malformed authentication challenge ||| authmalformed challenge	count=1
arg	a username ||| username	count=1
function	consider it as an ||| get replacement	count=1
arg	c{query} possibly more than ||| query msgid msg lastsequenceid	count=1
class	get ||| ichat ui	count=1
class	write ||| log	count=1
module	l{key} from the ||| conch	count=1
function	for sending ||| call remote	count=1
module	size the ||| protocols	count=1
function_arg	export the [arg_2] ||| [arg_2] [function_1]	count=1
class	retry ||| client	count=1
function	[function_1] the docstring ||| [function_1] [function_2]	count=2
function_arg	[function_1] [arg_2] ||| [function_1] broker message [arg_2]	count=9
class	the key ||| sshpublic key	count=1
arg	specific header from the ||| header	count=1
function	[function_1] client response ||| [function_1] [function_2]	count=3
arg	[arg_1] name matching ||| [arg_2] [arg_1]	count=2
function_arg	opaque to [arg_2] ||| [arg_2] [function_1]	count=3
function	listen for ssl ||| listen	count=1
class	return ||| news builder	count=1
arg	list s-expression ||| lst	count=1
function	the current sentence ||| current sentence	count=1
module	corresponding [module] last ||| [module]	count=1
class	this mailbox ||| imailbox	count=1
function	cause keypad ||| application keypad mode	count=1
function	encoder if applicable ||| encoder	count=1
function	delay period ||| delay	count=1
module	performing ||| conch	count=1
arg	the specified strport ||| password strport	count=1
class	a session ||| session	count=1
class	ipv4 ||| a	count=1
function	display a message ||| show message	count=1
function	the specified message-id ||| article	count=1
arg	of line ||| line	count=1
class	intended to ||| name	count=1
class	key object ||| key	count=1
function	of [function] of ||| list dynamic [function]	count=1
function	i{flag} or an i{option} ||| flag	count=1
module	this action which ||| python	count=1
function	add an [function_2] ||| [function_1] [function_2]	count=4
function_arg	write [arg_2] ||| internet iconsumer [function_1] [arg_2]	count=3
function	[function_1] snac ||| [function_2] [function_1]	count=1
function_arg	[function_1] given fd ||| [arg_2] [function_1]	count=1
function_arg	msg_unimplemented message [arg_2] ||| [function_1] [arg_2]	count=1
function_arg	of headers [arg_2] ||| [arg_2] [function_1]	count=2
module	client associated with this ||| words im	count=1
class	conversation and displays ||| conversation	count=3
class	the key matches the ||| key	count=1
class	unixtime ||| daily log	count=1
function	a single ||| stop	count=1
arg	from ||| out	count=1
module	current directory of this ||| python	count=1
arg	the [arg] ||| [arg]	count=3
function_arg	[function_1] [arg_2] then this should be ||| [function_1] [arg_2]	count=12
function	uses expat-based stream if ||| stream	count=1
function	is running on ||| get deprecated	count=1
function	[function_1] l{unicode}-mode ||| [function_2] [function_1]	count=1
module	this is the ||| protocols	count=1
function	beginning of the display ||| display beginning	count=1
function	ciphers to ||| ciphers	count=1
class	intended to be ||| maildir name	count=1
module	client associated with this ||| im	count=1
function_arg	a service [arg_2] ||| [function_1] [arg_2]	count=2
arg	to the reporter ||| testname todo	count=1
class	listening on the endpoint ||| server endpoint service	count=1
class	to which this observer ||| log observer	count=1
function	[function_1] set using ||| [function_2] [function_1]	count=1
function	child with [function_2] ||| [function_1] [function_2]	count=1
function	messages which share ||| ssh kex dh gex group	count=1
module_class	one iteration of [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	a file ||| file contextfactory	count=1
function	[function_1] the body ||| [function_1] [function_2]	count=2
function	local object [function_2] ||| [function_2] [function_1]	count=2
function	close ||| close	count=7
class	reboots ||| maildir name	count=1
arg	username the ||| accountname autologin username password	count=1
function	workers as expressed by ||| waiters	count=1
module	the name of a ||| web	count=1
module_class	the command's input ||| conch command	count=1
function	throw ||| throw	count=1
module_class	[module_1] l{filepath} ||| [module_1] [class_2]	count=34
function_arg	[function_1] chatui the ||| [function_1] [arg_2]	count=2
class	speed ||| base speed	count=1
function	it ||| remote	count=1
class	box ignoring l{protocolswitched} ||| box dispatcher	count=1
class	my ||| path	count=1
function	log message [function_2] ||| [function_2] [function_1]	count=1
function	returns a persistent ||| persistent	count=1
arg	domain the domain to ||| domain	count=1
function	entity reference ||| entity reference	count=2
arg	some amp data ||| data	count=1
arg	first shut it down ||| reason	count=1
function	is closed ||| connection lost	count=2
function	all keys found ||| identities	count=1
function	if the process ||| process	count=1
class	deferred has been ||| deferred	count=1
class	given log event as ||| log	count=1
class	internal handler for ||| h2connection	count=1
function	suitable for use ||| generate	count=1
class	l{deferred} by scheduling it ||| deferred	count=1
class	internal [class] function for ||| systemd [class]	count=1
class	the message as it ||| mailbox append message task	count=1
function	return c{path} as ||| as	count=1
module_class	[module_1] coerce for ||| [module_1] [class_2]	count=2
function_arg	[function_1] set flags ||| [function_1] messages [arg_2]	count=1
class	the underlying [class] and issue ||| deprecated [class]	count=1
function	connection has been ||| connection	count=4
function_arg	[function_1] dbm ||| [arg_2] [function_1]	count=1
module	an entry with ||| conch client	count=1
function	a single file ||| single file	count=2
function	for reading writing or ||| do write or	count=1
class	current remote ||| ftpclient	count=1
function	do the given ||| do	count=1
function	shell [function_2] ||| [function_2] [function_1]	count=2
arg	with [arg] ||| n [arg]	count=1
function	close the [function_2] ||| [function_1] [function_2]	count=2
function_arg	[function_1] hierarchy into ||| [arg_2] [function_1]	count=4
function	pre-built l{servicemanager}, ||| service	count=1
module_class	in the threadpool ||| python thread pool	count=1
function	[function_1] of an ||| [function_1] [function_2]	count=1
function	add a ||| add header	count=1
class	unixtime to year ||| daily log file	count=1
class	byte to the terminal ||| terminal	count=1
module	the body ||| web	count=1
function	close the connection ||| connection	count=1
class	the test is ||| synchronous test case	count=1
function_arg	[function_1] response and ||| [function_1] [arg_2]	count=1
function	object and a c{datetime ||| date and	count=1
function	references to ||| static	count=1
arg	creator ||| creator	count=3
function	length has ||| length	count=1
arg	a child of c{tag} ||| tag	count=5
class	parses partial visible satellite ||| nmeaadapter	count=1
module	the initialization ||| protocols jabber	count=1
class	maildir [class_2] ||| [class_2] [class_1]	count=2
function	screen refresh/redraw ||| ff	count=1
function_arg	set the [arg_2] ||| [arg_2] [function_1]	count=8
function	to getpeer but ||| get host	count=1
arg	reconnecting subclasses should call ||| reason reconnecting	count=1
function	connection is ||| connection made	count=1
arg	the specified strport string ||| password strport	count=1
function	returns the [function_2] ||| [function_2] [function_1]	count=4
function	original exception into the ||| exception into	count=1
class	the transport ||| worker transport	count=1
arg	not c{second} ||| first second msg	count=1
module	c{bytes} to the ||| web	count=1
module	the last value received ||| web	count=2
arg	with mode ||| mode	count=1
class	zippath by ||| zip map	count=1
function	links ||| links	count=1
class	structure object ||| message structure	count=2
function	to the end ||| end	count=1
function	setup ||| setup	count=1
class	zippath by looking at ||| zip map	count=1
arg	request the ||| request	count=1
function	read connection ||| read connection	count=3
function	register with ||| associate with	count=2
function	delete ||| delete	count=5
class	indicates a redirect ||| redirect agent	count=1
function	a clientside cache ||| cache and observe for	count=1
module	[module] multiple ||| [module]	count=2
module_class	this record in ||| names record	count=1
arg	given group over the ||| group	count=1
module	this l{deferredlist} ||| internet	count=1
function	and accepted [function_2] ||| [function_2] [function_1]	count=2
function	l{iprocesstransport} ||| process	count=1
arg	connection ||| connection protocolfactory	count=1
function_arg	[function_1] name ||| [arg_2] [function_1]	count=6
function	as an alternative ||| get	count=1
arg	observers at the given ||| format	count=1
function_arg	[function_1] l the ||| [function_1] [arg_2]	count=1
module	to the connection ||| internet	count=1
function_arg	[function_1] l{memoryworker} ||| [arg_2] [function_1]	count=1
function	of the disposition and ||| disposition	count=1
module	readers and ||| internet	count=1
module	[module] c{logout} ||| [module]	count=2
function	'ls' [function] ||| ls [function]	count=3
arg	ampprotocol the ||| ampprotocol	count=1
function	[function_1] filename ||| [function_1] [function_2]	count=3
function	the ||| end	count=1
module	cursor up ||| insults	count=1
module	this ||| web	count=4
module	total number of ||| python	count=1
function	after ||| after	count=1
function	lose ||| lose	count=1
class	authenticated and selected states ||| imap4client	count=5
class	in ||| failure	count=1
function	get the response ||| get response	count=3
function	puts method names ||| add method names to dict	count=1
arg	or pem-format ||| class	count=1
arg	c{newpath} ||| path newpath encoding	count=1
module	syspath ||| python	count=1
function	responding [function_2] ||| [function_2] [function_1]	count=3
module	object corresponding [module] last public ||| [module]	count=1
function	other ||| close	count=2
arg	for a domain from ||| answers domain	count=1
function	return an iterator over ||| get	count=1
class	by the connection factory ||| iprotocol negotiation factory	count=1
function	with a ||| search	count=1
class	the authenticated and selected ||| imap4client	count=5
module_class	[module_1] response ||| [module_1] [class_2]	count=36
module	a [module] to catch ||| [module]	count=1
class	sentence ||| sentence	count=1
class	the client is jellyable ||| jellyable	count=1
class	conversation with ||| conversation	count=1
function	and return an encoder ||| get encoder	count=1
class	key ||| key	count=8
class	channel to ||| channel	count=1
function	longname ||| exclude str	count=1
arg	nonce from the request ||| nonce clientip	count=1
function	default ||| default	count=4
function	a hash of the ||| key hash	count=1
function	the given certificate ||| certificate	count=1
arg	a datagram to a ||| datagram	count=1
function	[function_1] size ||| [function_2] [function_1]	count=4
function	the io completion ||| do iteration	count=1
function	the global [function_2] ||| [function_1] [function_2]	count=4
arg	and [arg_2] ||| [arg_2] [arg_1]	count=8
arg	from [arg_2] ||| [arg_2] [arg_1]	count=1
function	data received ||| data received	count=2
function	[function_1] directories ||| [function_1] [function_2]	count=4
arg	plaintext login ||| username	count=1
function	send a list ||| list	count=1
module	called [module_2] ||| [module_2] [module_1]	count=1
module	stdin ||| internet	count=1
arg	a different ||| sourcetype targettype	count=1
module	function across all ||| mail	count=1
arg	primary the ||| primary	count=1
class	is intended ||| name generator	count=1
module	l{dnsdatagramprotocol} instance ||| names	count=1
function	[function_1] stream window ||| [function_2] [function_1]	count=1
class	given log event ||| log	count=1
function	reverse the above ||| reverse	count=1
arg	accountname ||| accountname	count=1
function	[function_1] methods that ||| [function_1] [function_2]	count=4
function	that [function_2] ||| [function_2] [function_1]	count=6
arg	with a unique id ||| site uid reactor	count=1
arg	name to ||| name	count=1
module	c{*args}, ||| names	count=1
arg	topic ||| channel topic author	count=1
function	process and returns a ||| process output and	count=1
module	object corresponding [module] last ||| [module]	count=1
class	a helpful log message ||| amp	count=1
function	the unique identifier ||| uid	count=1
module	[module_1] the remote ||| [module_2] [module_1]	count=1
arg	given offset [arg_2] ||| [arg_1] [arg_2]	count=1
arg	outfile a file-like object ||| outfile	count=1
arg	the domain to connect ||| domain factory	count=1
function	clientside ||| and observe	count=1
arg	sets the value ||| value	count=1
class	if ||| with	count=1
function_arg	[function_1] [arg_2] ||| [function_1] kickee [arg_2]	count=3
function	a l{bucket} corresponding to ||| bucket for	count=1
arg	response to ||| response	count=2
module	for it to be ||| names	count=1
class	has died ||| ptyprocess	count=1
function	where all [function] text has ||| as [function]	count=1
function	return the local address ||| get host	count=1
function	[function_1] reading writing ||| [function_2] or [function_1]	count=2
function	of decorators ||| get deprecated	count=1
class	a context manager ||| assert raises context	count=2
function	in ||| in known	count=1
module	if any ||| web	count=3
class	are connected ||| iunixdatagram connected transport	count=2
arg	send an article to ||| article	count=1
function	fix for [function_2] ||| [function_2] [function_1]	count=6
arg	observers this will ||| observers discardbuffer redirectstandardio	count=1
arg	connection ||| key connection	count=1
function	invoke the specified ||| call	count=1
class	vcs ||| ivcscommand	count=1
function	removing all ||| agentc remove all	count=2
function	[function_1] writing ||| [function_1] [function_2]	count=2
arg	header line ||| cls line	count=1
function	socket ||| internet socket	count=1
function_arg	[function_1] msgs ||| [arg_2] [function_1]	count=3
function	waiting for the reconnection ||| waiting	count=1
class	across all calls ||| generator	count=1
class	this function across ||| maildir	count=1
function	and initialize the ||| init	count=1
function	for the c{calllater} callback ||| call later	count=1
function	global reactor if ||| maybe global reactor	count=2
function	name of the test ||| test	count=1
module	[module] _tostan class ||| [module]	count=3
function	has finished ||| finish	count=1
arg	constructs a pre-built l{servicemanager}, ||| jid password	count=1
function	endpoint from ||| from	count=2
function	its ||| adjust	count=1
function	puts method ||| add method	count=1
class	initialize ||| remote reference	count=1
class	produce ||| ipull producer	count=1
class	default ||| box protocol	count=1
function	print ||| print	count=2
class	message as it ||| append message task	count=1
class	certificate for ||| certificate	count=1
arg	module and do as ||| module	count=1
function	[function_1] default ||| is [function_2] [function_1]	count=1
module	the peer ||| conch	count=1
class	[class_1] list ||| [class_1] [class_2]	count=1
function	this private ||| from string private	count=1
arg	[arg] short response ||| [arg]	count=1
function	to [function_2] ||| data [function_1] [function_2] streamid data	count=1
module	the emacs variable declarations ||| scripts	count=1
class	is ||| assert raises	count=1
function	a quick and dirty ||| and	count=3
function	page ||| page	count=1
function	a representation of ||| repr	count=1
class	add ||| select reactor	count=4
function	producing ||| producing	count=1
function	of possibly available ||| help reactors	count=1
function	bytes [function_2] ||| [function_2] [function_1]	count=1
module	[module] associated file ||| [module]	count=1
function	attributes ||| attributes	count=1
function_arg	a function [arg_2] ||| [arg_2] [function_1]	count=2
function	the parent ||| parent	count=1
function	compare this node ||| node	count=1
function	the default appropriate ||| default	count=1
function	parse a string containing ||| string	count=1
class	make ||| file transfer	count=1
class	function across ||| maildir	count=1
function	message for removing all ||| remove all	count=1
function	cause keypad to generate ||| keypad mode	count=1
function	start the [function_2] ||| [function_1] [function_2]	count=1
arg	given consumer ||| consumer	count=1
module	this is ||| internet	count=1
function	[function_1] start being ||| [function_2] [function_1]	count=2
function_arg	[function_1] flags for ||| [arg_2] [function_1]	count=1
class	unique ||| maildir	count=1
class	[class] in ||| [class]	count=3
class	xmlstream when ||| listen authenticator	count=1
function	callback ||| notify on disconnect	count=1
module	and pass ||| web	count=1
module_class	[module_1] path on ||| [module_1] ifile [class_2]	count=3
function	body ||| body	count=15
function_arg	parse [arg_2] ||| [arg_2] [function_1]	count=8
module	the requested ||| web	count=1
function	chunk ||| handle content chunk	count=1
module_class	public [class_2] ||| [module_1] [class_2]	count=1
arg	given fd ||| fd	count=1
arg	query checking for ||| query	count=1
function	checks the [function_2] ||| [function_2] [function_1]	count=1
arg	message on ||| ancillary flags	count=1
class	directories ||| file transfer	count=1
arg	digest for the given ||| ha2 algo psznonce	count=1
function	received a chunk of ||| chunk	count=1
function	different messages which share ||| ssh kex dh gex	count=1
function	the delay and ||| delay	count=1
module	a list ||| python	count=1
function	get a previously ||| get	count=1
function	is received from ||| received	count=1
class	with l{callremote}, with ||| dispatcher	count=1
arg	our project policy ||| projectroot output	count=1
class	protocol you ||| protocol	count=1
class	set ||| to stan	count=1
class	sign ||| user auth	count=1
function	from a request or ||| received	count=1
function	method names ||| add method names to dict	count=1
class	for use as ||| factory	count=1
class	test ||| trial	count=1
class	parent ||| iservice	count=1
function	running on ||| get	count=1
arg	msgs the ||| msgs	count=1
function	l{str} representation of ||| repr	count=1
function	chain another l{deferred} ||| chain	count=1
function_arg	[function_1] string referring ||| [arg_2] [function_1]	count=1
class	when each ||| receiver	count=1
arg	an indication of ||| host serv_name username	count=1
module_class	@return boolean indicating whether [module_1] [class_2] not ||| [module_1] [class_2]	count=2
arg	path this ||| path	count=1
class	is ||| box	count=1
module	the other ||| conch	count=3
function	given header can be ||| header	count=1
module	to the ||| protocols	count=4
function	[function_1] [function_2] not ||| [function_2] [function_1]	count=4
arg	article if index is ||| index	count=2
function	as a ||| as	count=2
class	receiver for each alias ||| alias	count=1
function	the overview format ||| fetch overview	count=1
function	undelete all messages marked ||| undelete messages	count=2
class	@param ||| dcc file receive basic	count=1
function	pause ||| pause	count=3
class	the list of ||| list	count=1
function	methods that begin with ||| methods	count=1
module	the data suitable ||| conch ssh	count=1
function	warning method to ||| warning method	count=2
function	source [function_2] ||| [function_1] [function_2]	count=4
arg	minutes ||| minutes	count=1
function	requested a channel of ||| channel	count=1
function	exists in ||| exists	count=1
class	l{istreamclientendpoint} that was cancelled ||| connecting cancelled error	count=1
module	the user has ||| conch	count=1
module	and setup authentication ||| protocols jabber	count=1
function	[function_1] the response ||| [function_1] [function_2]	count=1
function	private ||| from string private	count=1
function	certificate ||| certificate	count=3
arg	credentials an implementor of ||| credentials mind	count=1
arg	value to an ||| value	count=1
module	across all calls to ||| mail	count=1
function	open the [function_2] ||| [function_1] [function_2]	count=4
class	infinite [class_2] ||| [class_1] [class_2]	count=2
function	checks if enough ||| payload	count=1
function	object from modules ||| name	count=1
arg	path to ||| path	count=1
module	arrange for ||| names	count=1
arg	listen ||| maxpacketsize mode	count=1
function	consider ||| get replacement string	count=1
module	determine if the ||| conch ssh	count=1
rep	other side [function_arg_2] ||| [module_class_1] [function_arg_2]	count=1
arg	protocol factory ||| factory	count=1
function	client ||| client	count=7
class	transport ||| abstract datagram	count=1
arg	of c{inode} [arg_2] ||| [arg_2] [arg_1]	count=2
function	still active false ||| active	count=1
function	decode the given ||| decode	count=1
class	to handle waiting ||| manager	count=1
module	the producer is ||| internet	count=1
function	a function ||| function	count=2
arg	username the ||| username	count=1
module	state of this ||| python	count=3
function	if any of ||| get	count=1
class	@param ||| stringifiable from event	count=1
function	the user [function_2] ||| [function_1] [function_2]	count=4
class	object [class_2] ||| [class_1] [class_2]	count=2
function	string for ||| string	count=1
arg	exitcode ||| exitcode signal	count=1
class	called when l{httpchannel} has ||| ideprecated httpchannel to request interface	count=1
function	replaces stdout ||| stdout	count=1
function	body has been completely ||| body data received	count=1
function	return the name of ||| get	count=1
module	of ||| mail	count=25
function	report an import error ||| report import error	count=1
arg	and minutes ||| minutes	count=1
module	direct child of this ||| python	count=1
arg	to the given consumer ||| consumer	count=1
function	for consuming the ||| for	count=1
function	initialize me with ||| init	count=2
class	load a hashed entry ||| hashed entry	count=1
arg	indication of what kind ||| host serv_name username	count=1
arg	query ||| query servers timeout	count=1
class	entries in this file ||| known hosts file	count=1
function	hash of the ||| hash	count=2
class	the size ||| pop3	count=1
function	factory to construct ||| unjellyable factory	count=1
function	when a request ||| request	count=2
function	text from ||| text from	count=2
function_arg	the producer will [function_1] [arg_2] calling this method ||| internet iconsumer [function_1] [arg_2]	count=1
function	run the test to ||| test	count=1
function	when [function_2] ||| [function_1] [function_2]	count=2
arg	contents of a ||| i	count=2
function	been canceled ||| get	count=1
module	called when the ||| protocols	count=2
arg	callback with ||| callback	count=1
class	of the ||| public	count=1
function	using ||| service manager	count=2
arg	the tests in ||| recurse	count=1
function	is ||| allowed	count=2
arg	a data frame ||| data	count=1
class	key matches ||| key database	count=1
arg	initiate [arg_2] ||| [arg_2] [arg_1]	count=4
arg	c{first} is not c{second} ||| first second msg	count=1
function	parse of an xml ||| parse	count=1
class	l{ireactorinthreads callinthread} ||| ireactor threads	count=1
function_arg	[function_1] chat ||| [function_1] [arg_2]	count=2
function	start this l{clientservice}, initiating ||| start	count=1
function	setup authentication ||| set	count=1
function	callback ||| add callback	count=3
function	rset ||| rset	count=1
rep	hashed entry [function_arg_2] ||| [module_class_1] [function_arg_2]	count=8
arg	called when the speed ||| speed	count=1
function	as much of c{data} ||| some	count=1
function	the prefix length for ||| prefix	count=1
arg	information dictionary ||| info	count=1
class	[class_1] descriptor ||| [class_1] [class_2]	count=1
arg	domain the domain to ||| service domain	count=1
function	a trailing comma at ||| for trailing comma	count=1
function	list of decorators ||| get	count=1
module	local port [module_2] ||| [module_1] [module_2]	count=1
module	testcase subclass ||| trial	count=1
function	an ||| name	count=3
module_class	[module_1] news ||| [module_1] [class_2]	count=8
function	[function_1] log ||| [function_1] [function_2]	count=2
function_arg	info for [arg_2] ||| [arg_2] [function_1]	count=1
class	hostname resolution in progress ||| ihost resolution	count=1
class	observer method ||| log observer	count=1
function	any ||| deprecated	count=1
arg	comparison of ||| other	count=1
function	server connection from ||| client connection	count=1
class	file ||| known hosts file	count=1
function_arg	close [arg_2] ||| [arg_2] [function_1]	count=1
arg	level ||| streamerror	count=1
arg	a connection from ||| key connection	count=1
class	the ||| public key	count=2
function	add the given ||| add	count=1
arg	some amp data ||| cls data	count=1
function	to mime [function_2] ||| [function_2] [function_1]	count=1
class	as a context ||| context	count=1
arg	'message' in ||| message	count=1
function	and dirty [function_2] ||| [function_2] request [function_1]	count=1
class	box ignoring l{protocolswitched} ||| box	count=1
function	of the ||| of	count=1
function	query is ||| query	count=1
class	file to the ||| file body	count=1
function	deferred ||| get	count=1
function	standard input on ||| stdin	count=1
class	our transport ||| sender protocol	count=1
class	[class_1] proxy has ||| [class_1] [class_2]	count=3
function	authorized ||| authorized resource	count=1
function	nodename -> [function] parent ||| [function]	count=1
class	log levels to ||| log	count=1
function	has been canceled ||| cancel get	count=1
module	that the ||| conch	count=2
function	operate on [function] arguments ||| matching [function]	count=1
function	traceback with [function_2] ||| [function_2] [function_1]	count=6
class	all processes reboots ||| maildir	count=1
arg	this broker ||| jellier	count=1
function	the actual test inside ||| test	count=1
function_arg	a directory this ||| directory path	count=1
function	for an ||| for	count=2
function	as ||| get	count=2
arg	fd is ||| selectable fd event	count=1
function	[function_1] bad requests ||| [function_2] [function_1]	count=7
function	received may [function] ||| connection [function]	count=2
function	override the normal prefix ||| get log prefix	count=1
function	(or the currently selected ||| fetch head	count=1
arg	exception ||| exception	count=1
arg	a default value ||| seq default	count=1
class	to this ||| name	count=1
class	which the message should ||| wrapper	count=1
function	connection creator ||| creator	count=2
arg	a hostname resolution ||| resolutionreceiver hostname	count=1
arg	l{cooperativetask}, see l{cooperator ||| iterator cooperator	count=1
module	returns ||| positioning	count=1
class	in the mailbox ||| list mailbox	count=2
arg	[arg_1] name to ||| [arg_2] [arg_1]	count=1
function	return an encoder ||| get encoder	count=1
function	user ||| replacement string	count=1
arg	client server ||| client server	count=1
function_arg	[function_1] opener a ||| [function_1] [arg_2]	count=1
module	only be sent when ||| conch ssh	count=1
function	and accepted a dcc ||| dcc do accept	count=1
function	remove the private key ||| remove	count=1
function	test to the stream ||| test	count=2
arg	a response to a ||| response	count=1
function	determine whether the ||| is	count=2
function	decode the ||| decode	count=2
arg	raises an error ||| error	count=1
arg	a l{_wrapperendpoint} ||| wrappedendpoint wrapperfactory	count=1
function	and [function_2] ||| [function_1] socket [function_2]	count=1
function	sign the ||| sign data	count=1
function_arg	joins [arg_2] ||| [function_1] [arg_2]	count=1
function	adapter ||| adapter	count=1
arg	chunk of data and ||| data	count=2
module_class	the domain name ||| mail domain	count=1
module	producer is ||| internet	count=1
module	the private key ||| conch ssh	count=1
class	c{key} it must already ||| mem cache	count=1
arg	the domain to connect ||| service domain	count=1
arg	[arg_1] writers ||| [arg_1] [arg_2]	count=1
function_arg	encode a [arg_2] ||| [arg_2] [function_1]	count=1
class	a console ||| console	count=1
function	unused ||| unused test	count=1
arg	to a ||| factory	count=2
class	the same [class] as mine ||| [class]	count=1
function_arg	[function_1] ampprotocol the ||| [arg_2] [function_1]	count=1
class	zsh code for ||| zsh arguments generator	count=1
function	chat ||| receive message	count=1
arg	relay queue ||| relay	count=1
class	basename ||| abstract file path	count=1
function	string key for a ||| flat key	count=1
function	received either deliver ||| data received	count=1
function	peer side of ||| peer	count=1
arg	of three formats ||| datestring	count=1
function	[function_1] l{esmtpsender} protocol ||| [function_1] [function_2]	count=1
function	given port ||| generate port	count=1
arg	connects a given ||| protocol maxpacketsize mode	count=1
function	anonymous cred login ||| anonymous authentication	count=1
function	write side of ||| write	count=1
class	consumer ||| consumer	count=1
function	on ||| get deprecated	count=1
function	read some bytes ||| read	count=1
module_class	[module_1] l{urlpath} ||| [module_1] [class_2]	count=8
class	any and ||| base	count=1
function_arg	[function_1] to newtopic ||| [function_1] updated user channel [arg_2]	count=2
class	a mailbox change listener ||| imailbox imap	count=1
function	amp box containing ||| box	count=1
function	[function_1] [function_2] ||| [function_2] in [function_1]	count=1
arg	message an l{imessagepart} provider ||| message attrs	count=1
function	puts method names ||| add method names	count=1
class	a checker ||| checker	count=1
function	stop writing this ||| stop writing	count=1
module	underlying pkey ||| internet	count=1
module_class	start the reactor ||| internet wx reactor	count=1
module	particular positioning ||| positioning	count=1
function	with some ||| with	count=2
arg	[arg_1] and writers ||| [arg_2] [arg_1]	count=1
class	initialization ||| base feature initiating initializer	count=1
function	representing a progress bar ||| make stat bar	count=1
class	to handle ||| manager	count=1
function	connection over ||| connection	count=1
module	of this ||| internet	count=1
function	a factory which will ||| factory	count=1
class	i close [class_2] ||| [class_2] [class_1]	count=1
function	sending ||| remote	count=1
function	find the attribute name ||| get method name	count=1
function	the angular [function] of ||| angle [function]	count=1
function	gotoverview() ||| fetch	count=1
class	[class_1] to ||| [class_1] [class_2]	count=2
function	children to ||| to xml	count=1
class	message to pop3 ||| pop3	count=1
function	[function_1] path factory ||| [function_2] [function_1]	count=2
arg	the given group over ||| group low high	count=1
class	my syspath and moduledict ||| python	count=1
class	this protocol ||| protocol	count=1
arg	cannot be issued if ||| _	count=1
function	by l{unittest testcase} ||| class cleanup	count=1
module_class	ssh agent ||| ssh sshagent client	count=1
arg	factory to [arg_2] ||| [arg_2] [arg_1]	count=1
arg	in ||| user	count=1
arg	[arg_1] message ||| [arg_1] [arg_2]	count=1
class	lines of storage default ||| line	count=1
function_arg	[function_1] [arg_2] and then read and ||| [function_1] [arg_2]	count=6
function	group returns deferred ||| group	count=2
function	warnings [function_2] ||| [function_1] [function_2]	count=2
class	date has changed since ||| log	count=1
arg	status ||| status	count=2
function	[function_1] i{kexinit} ||| [function_2] [function_1]	count=1
arg	with the given queries ||| address queries	count=1
function	body has been delivered ||| body finished	count=1
function	msg_kex_dh_gex_init message ||| kex dh gex init	count=1
function_arg	[function_1] [arg_2] ||| [function_1] keys outiv [arg_2]	count=3
class	reboots ||| generator	count=1
function	kicked from a ||| kicked	count=1
class	to the open process ||| process	count=1
function_arg	[function_1] primary the ||| [function_1] [arg_2]	count=1
arg	the opaque and nonce ||| nonce	count=1
function_arg	coerce [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	a string key ||| key	count=1
function	a header ||| handle header	count=1
function	and send ||| send	count=2
function	remove the ||| remove	count=4
function	notice ||| notice	count=1
function_arg	select a [arg_2] ||| [arg_2] [function_1]	count=4
function	bytes representation ||| bytes	count=1
arg	[arg_1] a broker ||| [arg_2] [arg_1]	count=1
function	constructs a pre-built l{servicemanager}, ||| build service	count=1
class	that could be ||| file	count=1
function	of one stat ||| stat	count=1
function	a session ||| get session	count=1
function	as much ||| write some data	count=1
module	[module] server ||| [module]	count=3
module	[module] wsgi ||| [module]	count=3
function	user to consider ||| replacement string	count=1
class	suitable for use as ||| credential	count=1
function_arg	handle an expected [function_1] [arg_2] ||| [function_1] [arg_2]	count=1
function	get a local object ||| local object	count=1
arg	with address [arg_2] ||| [arg_1] proto [arg_2]	count=1
arg	message from [arg_2] ||| [arg_2] [arg_1]	count=6
function	its [function_2] ||| [function_2] [function_1]	count=2
function	for a deprecated ||| replacement	count=1
function	global ||| global	count=2
class	new protocol ||| binary box protocol	count=1
function	process ends ||| process	count=1
class	this domain or an ||| domain	count=1
arg	a command [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	represents [module_1] [class_2] ||| [module_1] [class_2]	count=1
function_arg	[function_1] payload : ||| [function_1] [arg_2]	count=44
function_arg	[function_1] a unique ||| [arg_2] [function_1]	count=1
function	get a resolver instance ||| get resolver	count=1
class	the message as it ||| message	count=1
function	source code ||| source	count=1
class	www-authenticate challenge ||| factory	count=1
arg	name to refer to ||| autologin username password	count=1
module	from the server ||| news	count=1
class	exception ||| failure	count=2
module_class	of this url ||| python url	count=1
arg	callback and ||| callback	count=1
arg	an fd ||| fd	count=1
function_arg	article if index ||| article index	count=1
class	a ||| deferred	count=1
function	ready for reading ||| read	count=5
class	key ||| key database	count=2
function	to bad [function_2] ||| [function_2] [function_1]	count=3
class	create ||| digest	count=1
module	will stop performing ||| conch	count=1
function	construct a client endpoint ||| client	count=1
function	for a deprecated ||| get replacement	count=1
class	c{self frame} and yield ||| source fragment element	count=1
function_arg	msg_service_accept message [arg_2] ||| [function_1] [arg_2]	count=1
class	base filenames ||| smtpmanaged relayer factory	count=1
module	[module] specified ||| [module]	count=3
module	drawing on the screen ||| conch	count=1
class	use as the ||| credential	count=1
class	internal [class] function ||| systemd [class]	count=1
arg	message in ||| user message	count=2
function	[function_1] this ||| [function_1] [function_2]	count=4
function	a new [function] ||| new [function]	count=1
function	address ||| host	count=2
function	[function_1] article with ||| [function_2] [function_1]	count=3
class	return ||| janitor	count=1
function	return a string describing ||| cap	count=1
arg	if [arg] 0 ||| item [arg]	count=1
function	given a class which ||| class	count=1
function	suitable log observer ||| log observer	count=2
arg	in the filesystem to ||| fn	count=1
class	the given l{filedescriptor} for ||| glib reactor base	count=2
module	was sent from the ||| web	count=1
function_arg	[function_1] datagram to ||| [arg_2] [function_1]	count=1
function	value suitable for use ||| generate	count=1
arg	the user is conversing ||| text metadata	count=1
function	return a l{todo} ||| get	count=1
module_class	[module_1] conversation and ||| [module_1] group [class_2]	count=2
class	object represents is ||| connection	count=1
function	name/domain object ||| popitem	count=1
function	remove the trigger ||| remove trigger base	count=2
module_class	[module_1] process handle ||| [module_1] [class_2]	count=2
function	hash ||| hash	count=2
class	as a child ||| element	count=3
function_arg	[function_1] protocol factory ||| [function_1] tcp port [arg_2]	count=1
function	constructs a pre-built ||| service	count=1
arg	failure ||| failure level	count=1
module	in given ||| web	count=1
function	the body of ||| body	count=2
function	input ||| input	count=1
function_arg	date string [arg_2] ||| [arg_2] [function_1]	count=2
function	open the [function_2] ||| [function_2] [function_1]	count=4
class	element ||| element	count=1
class	fingerprint of [class] consists ||| [class]	count=1
function	that replaces stdout ||| stdout	count=1
arg	private constructor ||| filepath pythonpath	count=1
function	request is an ||| is	count=1
function	[function_1] credentials ||| cred portal [function_1] [function_2]	count=1
function	necessary metadata to ||| state to	count=1
function	[function_1] likely uid ||| [function_1] [function_2]	count=1
class	called when a ||| factory	count=1
function_arg	[function_1] given buffers ||| [function_1] from handle [arg_2]	count=1
arg	to a ||| name	count=1
function	ignore the failure passed ||| ignore	count=1
function	initial client [function_2] ||| [function_1] [function_2]	count=1
function	using chunked transfer-encoding ||| producer chunked	count=1
class	for ||| box dispatcher	count=2
function	clear the [function_2] ||| [function_2] [function_1]	count=1
module	the date has changed ||| python	count=1
function	an encoder if ||| encoder	count=1
class	string which ||| name	count=1
class	to domain ||| domain	count=1
arg	session between [arg] and ||| [arg] client	count=1
module	a testcase subclass or ||| trial	count=1
arg	called every time a ||| key val	count=1
arg	out to [arg] elements filling ||| [arg]	count=1
module_class	[module_1] file path ||| [module_1] [class_2]	count=8
function	wrap [function_1] [function_2] ||| [function_2] [function_1] wrappedendpoint	count=1
arg	string representing a ||| string	count=1
class	start ||| start	count=1
function	on ||| on	count=1
function	[function_1] messages ||| [function_2] [function_1]	count=1
class	[class_1] protocol ||| [class_2] [class_1]	count=1
function	the default appropriate for ||| default log	count=1
function	groups from the server ||| groups	count=1
arg	response and attempt ||| response	count=1
module	polite text exhorting the ||| python	count=1
function	the end tag of ||| document end	count=1
function	specific type of sentence ||| sentence specific	count=1
class	a random value suitable ||| credential factory	count=1
function	store stor ||| stor	count=1
module	passphrase if the ||| conch	count=1
arg	reporter ||| testname fail failclass frames	count=1
class	initializes an nmeaprotocol ||| nmeaprotocol	count=1
module	deferred has ||| internet	count=1
function	share an integer value ||| ssh kex dh gex group	count=1
class	netstring has a ||| netstring receiver	count=1
function_arg	[function_1] information ||| [function_1] [arg_2]	count=3
class	unconnected from ||| iprotocol	count=1
arg	c{message} ||| message rcode answers authority	count=1
function	to remove the trigger ||| remove trigger	count=1
function	set ||| get	count=1
module	to serialize me ||| spread	count=1
arg	a message to a ||| message length	count=2
class	have a parent l{bucket} ||| bucket	count=1
function	a string containing a ||| string	count=1
function_arg	[function_1] given offset ||| [function_1] range [arg_2]	count=1
class	in the group conversation ||| group conversation	count=2
function	ao i'll [function] nicely-formatted ||| [function]	count=1
function	subject of this ||| subject	count=1
function	data ||| direct tcpip	count=1
arg	once with a non-0 ||| idletime	count=1
function	return a ||| get public	count=1
function	when a user ||| irc	count=1
function	[function_1] given generator ||| [function_1] [function_2]	count=5
function_arg	[function_1] option declarations ||| [function_1] [arg_2]	count=3
function	a failure ||| failure	count=1
module	pending} [module] ||| [module]	count=3
class	via amp ||| dispatcher	count=1
function	named plugin [function_2] ||| [function_1] [function_2]	count=1
function	and the ||| deprecated	count=1
function	both a textual and ||| as bytes and text	count=1
class	the file ||| file	count=8
function	to handle ||| handle	count=1
class	stored in a ||| parser helper	count=1
function	and [function_2] ||| [function_1] [function_2]	count=3
function	child elements of ||| elements by tag	count=1
function	[function] the given ||| proxied [function]	count=2
function	the [function] format into ||| fix [function]	count=1
arg	some bytes ||| data	count=1
class	and return their ||| janitor	count=1
module_class	[module_1] given file ||| [module_1] known hosts [class_2]	count=1
arg	chatui the gui ||| group chatui	count=1
arg	name func -> ||| name func	count=6
function	cancel the [function_2] ||| [function_2] [function_1]	count=1
function	the buffered events to ||| replay to	count=1
class	[class_1] containing only ||| [class_2] [class_1]	count=1
class	[class_1] provider ||| [class_2] [class_1]	count=1
function	if any of ||| get deprecated	count=1
class	the pipe signal ||| reader	count=1
function	[function_1] against the ||| [function_2] [function_1]	count=2
arg	protocol ||| protocol	count=5
class	[class_1] method ||| [class_2] [class_1]	count=2
module	local port to ||| conch scripts	count=3
class	file path ||| ifile path	count=2
arg	file ||| filename kind passphrase	count=1
function_arg	authentication [arg_2] ||| [arg_2] [function_1]	count=6
class	send ||| service manager	count=1
arg	to bits bits ||| bits	count=1
arg	other wisde wanted a ||| result localchannel	count=1
class	acquire this lock this ||| deferred filesystem lock	count=1
class	the message while ||| message	count=1
class	this call [class_2] ||| [class_2] [class_1]	count=2
arg	number of local workers ||| number	count=1
function	out a one-line summary ||| summary	count=1
module	moduledict in a ||| python	count=1
function	current failure ||| failure	count=1
arg	determine if the specified ||| attrib	count=1
module	a pre-built l{servicemanager}, using ||| words	count=1
arg	[arg] raw ||| [arg]	count=1
function	may broadcast this ||| broadcast	count=2
function	given header in c{self ||| header	count=1
function	running on set ||| deprecated	count=1
function	some ||| do	count=3
function_arg	[function_1] referring to ||| [function_1] trust root path [arg_2]	count=1
class	function ||| maildir	count=1
function	set which ||| set	count=1
function	[function_1] credentials ||| [function_1] [function_2]	count=3
module	that ||| python	count=1
function	and return their string ||| clean	count=1
function	[function_1] with the ||| [function_1] [function_2]	count=4
function	the response to ||| response	count=3
function	surround ||| get replacement	count=1
function	entity [function] me ||| [function]	count=1
class	email address the mail ||| smtpclient	count=1
function	[function] matches the ||| [function]	count=3
function	for use as the ||| generate	count=1
function	get a ||| get and	count=1
function	[function_1] type may ||| [function_1] [function_2]	count=2
function	[function_1] server ||| [function_2] [function_1]	count=6
module	skip ||| internet	count=1
class	cleanup ||| connection helper	count=1
module	[module_1] the factory ||| [module_1] [module_2]	count=1
function	malformed ||| esmtp authmalformed	count=1
arg	of ||| path reactor	count=1
function	this protocol to verify ||| verify	count=1
function_arg	[function_1] data ||| web request [function_1] [arg_2]	count=2
function	[function_1] given stream ||| [function_1] [function_2] streamid data	count=2
function	we received a msg_userauth_failure ||| ssh userauth failure	count=1
arg	function to a ||| f	count=1
arg	for the given person ||| person	count=1
function	escapes from ||| strip escapes	count=1
rep	the response [function_arg_2] ||| [module_class_1] deliver [function_arg_2]	count=1
function	remove monitoring ||| remove	count=2
function	pre-built l{servicemanager}, using the ||| manager	count=1
function_arg	[function_1] [arg_2] of ||| [function_1] [arg_2]	count=10
class	inetd ||| inetd	count=1
function	python values decoded from ||| from	count=1
function	string ||| clean	count=1
arg	the given site ||| site	count=1
function_arg	item [function_1] [arg_2] 0 then this should ||| [function_1] [arg_2]	count=3
arg	top or ||| top	count=1
arg	signature using ||| signature data	count=1
function	the service [function_2] ||| [function_2] [function_1]	count=3
class	across all processes reboots ||| name	count=1
module	the same ||| conch	count=1
class	key matches ||| key	count=1
arg	@param environ a dictionary-like ||| cls environ start	count=1
arg	factory factory ||| factory wrappedprotocol	count=1
function	'message' in ||| end	count=1
function	service from this application ||| service	count=1
function	a mapping of arguments ||| make arguments	count=1
module	and ||| words protocols	count=1
function	use as the response ||| response	count=2
class	cryptography's ||| open ssleccurve	count=1
function	returns a ||| name	count=1
module_class	[module_1] l{deferred} by ||| [module_1] [class_2]	count=6
function	body has been delivered ||| body data received finished	count=1
module	this failure's type is ||| python	count=1
function	fail if ||| assert	count=1
class	this is ||| box	count=1
function_arg	with the [arg_2] ||| [arg_2] [function_1]	count=4
arg	scheme ||| scheme	count=1
module	to log ||| _dist	count=1
function	some polite text ||| replacement string	count=1
arg	c{classobj}, returns a ||| classobj prefix	count=1
class	input file ||| file body producer	count=1
class	the certificate authorities ||| sslcertificate authorities	count=1
arg	the given task ||| task	count=1
function	supported ||| supports	count=1
class	channel fails fire ||| channel	count=1
function	initiate ||| initialize	count=2
function	tells ||| changed nick	count=1
class	new file that contains ||| file	count=1
arg	between [arg] and ||| [arg] client	count=1
class	socket to the reactor ||| socket	count=3
function_arg	[function_1] numeric port ||| [arg_2] [function_1]	count=1
function	[function_1] user record ||| [function_1] [function_2]	count=2
function	[function_1] [function_2] ||| ivcscommand [function_1] [function_2]	count=2
function	[function_1] a previously-remembered ||| [function_1] [function_2]	count=1
function	[function_1] default ||| [function_2] [function_1]	count=1
function	a working [function_2] ||| [function_1] [function_2]	count=1
arg	a string [arg] int port ||| [arg]	count=1
function	server sent a malformed ||| authmalformed	count=1
module	is ||| conch ssh	count=1
arg	contents ||| i	count=2
class	for use as the ||| factory	count=1
function_arg	[function_1] transport ||| [function_1] [arg_2]	count=3
module	result from [module_2] ||| [module_1] [module_2]	count=1
arg	perform the given task ||| task	count=1
function	is deprecated and ||| is	count=1
function	modification [function_2] ||| [function_1] [function_2]	count=2
class	secured [class_2] ||| [class_2] [class_1]	count=2
function	to get [function_2] ||| [function_1] [function_2]	count=1
module	select ||| words protocols jabber	count=2
class	stop performing the ||| itelnet	count=1
function	[function_1] patched by ||| [function_2] [function_1]	count=1
class	containing only ||| imappart	count=1
module	of the timeout for ||| mail	count=1
function	channel request ||| channel request	count=3
function_arg	[function_1] a ||| [function_1] [arg_2]	count=3
function	[function_1] address and ||| [function_2] [function_1]	count=4
function	number of hard ||| get number of hard	count=1
arg	reactor the reactor ||| reactor pidfile kill defaultloglevel	count=1
function	make a new instance ||| new instance	count=1
function	is a class ||| is	count=1
function	log to file ("-" ||| log file	count=1
class	the input file ||| file	count=2
function	exhorting ||| replacement	count=1
function	is ||| deprecated	count=1
function	head request is an ||| is	count=1
class	containing only the ||| imappart	count=1
function	text ||| string	count=1
arg	defined as [arg] ||| [arg]	count=3
function	[function_1] user ||| [function_1] [function_2]	count=3
class	further processing [class_2] ||| [class_1] [class_2]	count=1
arg	@param other another ||| other	count=1
function	[function_1] [function_2] entities that i contain ||| [function_1] [function_2]	count=3
function	trying to resume an ||| do resume	count=1
function	inclusion within an xml ||| escaping	count=1
class	from ||| resolver	count=1
function	buffer and other ||| close	count=1
function	get a person for ||| get person	count=1
module	the xml stream ||| words protocols jabber	count=2
module	mac using the ||| conch ssh	count=1
class	to be called after [class_1] [class_2] ||| [class_2] [class_1]	count=2
function	deferred has been ||| get	count=1
function	[function_1] name of ||| [function_1] news [function_2]	count=1
function	of disconnect callbacks ||| dont notify on disconnect	count=1
function	of decorators ||| get	count=1
module	the connection which ||| conch	count=1
function	of the elements ||| elements	count=1
function	schedule a ||| wait	count=1
module	the source ||| web	count=1
function	[function_1] [function_2] ||| [function_2] or [function_1]	count=6
function	port command ||| port command	count=1
module	authentication ||| jabber	count=1
arg	given its name returning ||| name	count=1
arg	message ||| message protocol	count=2
arg	[arg_1] and end ||| [arg_2] [arg_1]	count=3
function	of failed [function_2] ||| [function_1] [function_2]	count=1
module	handle the beginning ||| conch	count=1
function	a pre-built ||| service manager	count=1
arg	int @param fp l{twisted ||| fp	count=1
function	packet out ||| packet	count=1
function	with a database ||| with	count=1
function	string key for ||| key	count=1
arg	response ||| response request	count=2
function	file ||| filename	count=1
class	of my ||| tuntap port	count=1
module	transport connection has ||| protocols jabber	count=1
class	the message as it ||| mailbox append message	count=1
class	this ||| box	count=1
function	get the given list ||| get	count=1
module	a pathentry this ||| python	count=1
function	indicate ||| fail	count=1
function	the ||| not	count=1
arg	@param person ||| person newnick	count=1
module	context using this ||| runner	count=1
arg	a module return all ||| module	count=1
function	any more data ||| eof	count=1
class	of my process's ||| process	count=1
arg	broker ||| broker	count=1
function	resolutionbegan} ||| resolution began	count=1
function	in-memory buffer and other ||| close	count=1
module	internal ||| spread	count=1
function	[function_1] key exchange ||| [function_1] [function_2]	count=2
class	scheduled ||| idelayed	count=3
function	raw ||| raw	count=1
function	c{predicates} ||| log event	count=1
class	encodes ||| ftp	count=1
function	the nonce parameter ||| nonce	count=1
function_arg	build a [arg_2] ||| [arg_2] [function_1]	count=4
function_arg	resume an [arg_2] ||| [function_1] [arg_2]	count=2
class	a www-authenticate ||| digest	count=1
arg	[arg] failure ||| [arg]	count=1
module_class	readers and [class_2] ||| [module_1] [class_2]	count=2
class	a selectable ||| win32reactor	count=1
function	to ||| bounce to	count=1
class	of this certificate ||| cert	count=1
class	console ||| console ui	count=1
arg	given queries ||| address queries timeout	count=1
function	sent we ||| sent mail	count=1
arg	register a callback to ||| callback	count=1
arg	of dns queries via ||| queries timeout	count=1
class	a single ||| tuntap	count=1
function	text ||| replacement	count=1
arg	this l{command}'s argument schema ||| objects proto	count=1
function	xml document @param ||| xml	count=1
class	it indicates a redirect ||| redirect	count=1
function	the raw [function] to ||| [function]	count=1
function	connection has been established ||| connection	count=1
function_arg	suppress [arg_2] ||| [arg_2] [function_1]	count=1
arg	and then ||| cls type	count=1
function	return all the ||| get	count=1
function	the original exception into ||| exception into	count=1
function	bytes to its ||| adjust	count=1
module	for an entry with ||| client	count=1
arg	hints a l{list} ||| hints	count=1
arg	query to ||| query	count=1
module	using ||| jabber	count=1
module_class	[module_1] entry ||| [module_1] hashed [class_2]	count=1
class	sending ||| box	count=1
class	this lock this ||| deferred filesystem lock	count=1
class	entry from a line ||| entry	count=1
function	size in octets ||| get size	count=1
arg	this ||| strio	count=2
class	we will stop ||| itelnet	count=1
class	zip file ||| zip	count=1
function	[function_1] connection by ||| [function_2] [function_1]	count=1
function	endpoint factory ||| endpoint factory	count=2
function	using this l{command}'s response ||| response	count=1
function	gather state to ||| state to	count=2
function	to the default ||| default	count=1
function	disposition and a ||| disposition	count=1
function	convert [function] ||| [function] to	count=1
function	not a ||| ignore	count=1
arg	this binaryboxprotocol's transport ||| newproto clientfactory	count=1
arg	given utc value as ||| when	count=1
class	my ||| python	count=1
arg	1 [arg_2] ||| [arg_2] [arg_1]	count=1
function	[function_1] reactor if ||| [function_2] [function_1]	count=4
class	remove all ansi ||| ansi	count=1
function	been canceled ||| cancel	count=1
arg	against the request i{uri} ||| requesturi	count=1
function	a traceback [function_2] ||| [function_2] [function_1]	count=6
module	/etc/shadow database using the ||| conch	count=1
arg	factory ||| factory	count=1
arg	the reporter ||| testname	count=5
function	[function_1] given client ||| [function_2] connection [function_1]	count=1
function	new-style ||| new style	count=2
arg	return a resolver ||| resolver	count=1
function	constructs a pre-built l{servicemanager}, ||| service	count=1
function	rp ||| responsibility	count=1
function	as the response to ||| response from	count=2
arg	readers and writers ||| readers writers	count=3
class	intended to ||| generator	count=1
class	to domain object ||| domain with default	count=1
class	all ansi [class_2] ||| [class_1] [class_2]	count=1
function	is in the ||| is in known hosts	count=1
class	given to __init__ ||| arguments generator	count=1
class	run ||| itest case	count=1
module	l{iprocesstransport} ||| runner	count=1
class	return ||| writer	count=1
function	child elements ||| elements	count=1
function	that certificate verification failed ||| fail verification	count=1
arg	with a non-0 ||| idletime	count=1
function	clear [function_2] ||| [function_1] [function_2]	count=2
function	of bytes received either ||| received	count=1
class	canceled ||| deferred queue	count=2
arg	given set of observers ||| observers discardbuffer redirectstandardio	count=1
function	log to [function_2] ||| [function_2] [function_1]	count=4
arg	an [arg] for ||| [arg]	count=1
function	to the queue ||| queue	count=1
arg	specifier ||| netloc host port	count=1
function	message to this ||| message	count=2
function_arg	create a command ||| init command	count=2
arg	proto ||| proto	count=1
function	start [function_2] ||| [function_1] [function_2]	count=3
arg	byte string ||| strio length	count=1
arg	[arg] of ||| [arg]	count=4
arg	@param groupname the name ||| groupname	count=1
class	glib timeout for ||| glib	count=1
arg	return whatever tests ||| thing recurse	count=1
function_arg	msg_kexinit message [arg_2] ||| [arg_2] [function_1]	count=1
class	alias and return ||| alias group	count=1
function	response [function_2] ||| wsgiresponse send [function_1] [function_2]	count=1
class	[class_1] as a ||| [class_1] [class_2]	count=2
function	result at this point ||| result	count=1
function	a client endpoint ||| client	count=1
function	subnegotiations for which ||| unhandled subnegotiation	count=1
class	amp instance by ||| amp	count=1
function	referring to ||| temporary	count=1
class	authentication agent if ||| auth	count=1
function	the readers ||| readers	count=1
function	mail exchange lookup fails ||| mx	count=1
function	keep a clientside cache ||| cache and observe	count=1
arg	reactor [arg_2] ||| [arg_1] [arg_2]	count=5
function	copying bytes ||| producing	count=1
function	text that links to ||| link	count=1
function_arg	[function_1] a line ||| [function_1] [arg_2]	count=2
function_arg	module [arg_2] ||| [function_1] [arg_2]	count=2
function	return an instance of ||| get group	count=1
module_class	of the connection ||| web h2stream	count=1
arg	to the given numeric ||| interface	count=1
function_arg	[function_1] c{name} ||| [function_1] [arg_2]	count=2
function	time at which ||| time	count=1
function	with ||| with patches	count=1
function	connection has ||| connection	count=1
function	stop the service ||| stop service	count=5
module	returns an ||| internet	count=1
module	portion [module] a uri ||| [module]	count=1
arg	print 'message' in the ||| message	count=1
function	the hemisphere ||| hemisphere	count=1
arg	lengthasstring ||| lengthasstring	count=1
function	[function_1] suppressed ||| [function_1] [function_2]	count=6
class	create a log file ||| base log file	count=1
arg	a ||| password	count=1
function	successful authentication will return ||| get	count=1
class	task has ||| task	count=1
function_arg	an authentication method ||| auth description	count=1
arg	[arg_1] a channel ||| [arg_2] [arg_1]	count=1
function	using ||| manager	count=1
function	a bounce ||| bounce	count=1
arg	events given filter/op ||| filter op	count=1
function	the current sentence ||| clean current sentence	count=2
function	called when the other ||| close received	count=1
function	existing child with a ||| child search	count=1
arg	l{memoryworker} ||| pending	count=1
class	which ||| name	count=1
function	is mac ||| is mac	count=2
module_class	in text ||| mail text message	count=1
function_arg	[function_1] given pattern ||| python file path glob [function_1] [arg_2]	count=1
function_arg	[function_1] publisher i'll ||| [function_1] [arg_2]	count=1
function	parameters ||| parse	count=2
arg	c{regexp} search of c{text} ||| text regex msg	count=1
function	[function_1] degrees this ||| [function_2] [function_1]	count=2
module	of this certificate ||| internet	count=1
class	process instance to ||| process	count=1
module_class	jabber [class_2] ||| [module_1] connect [class_2]	count=1
function	for a deprecated api ||| get replacement string	count=1
function	text exhorting the user ||| string	count=1
function	if any of the ||| deprecated	count=1
class	send ||| transfer server	count=1
function	the 'recent' flag ||| recent count	count=1
class	when a transport is ||| abstract datagram	count=1
module	from ||| protocols	count=1
function	a stream server endpoint ||| server	count=1
function	sign ||| sign	count=4
function	get root [function_2] ||| [function_2] [function_1]	count=1
function	ancillary data ||| ancillary	count=1
function	name of [function_2] ||| [function_2] [function_1]	count=4
arg	header object ||| header	count=1
module	has ||| jabber	count=1
function	chain another ||| chain	count=1
arg	packet to address ||| packet	count=1
function	start listening on ||| start	count=1
class	dictionary ||| insensitive dict	count=1
function	unregister a producer ||| unregister producer	count=2
function	log prefix ||| log prefix	count=5
class	nmeaprotocol ||| nmeaprotocol	count=1
function	build a ||| build failure	count=1
function	the socket and ||| collect socket	count=3
class	indicate ||| itelnet	count=1
class	c{deferred} ||| deferred	count=1
function	[function_1] sequence is ||| [function_2] [function_1]	count=1
function	the service [function_2] ||| [function_1] [function_2]	count=3
module_class	open the [class_2] ||| [module_1] [class_2]	count=4
function	quote an iterable ||| quote arguments	count=1
module	pre-built ||| protocols jabber	count=2
module	message in the ||| mail	count=2
function	with a process ||| process	count=1
function	[function_1] -> ||| [function_2] [function_1]	count=2
arg	flags for ||| flags silent	count=1
function	packet ||| packet	count=1
class	this [class_2] ||| [class_1] [class_2]	count=14
class	random ||| credential	count=1
module	the test cases in ||| trial	count=1
class	this ||| failure	count=1
module	the comma-separated ||| conch	count=1
arg	function in a ||| f	count=1
arg	for a [arg_2] ||| [arg_1] [arg_2]	count=1
function	a specific type ||| specific	count=1
function	provider ||| force	count=1
arg	room ||| user message exchange fullname	count=1
function	is a class that ||| is	count=1
function	persistent ||| get persistent	count=1
function_arg	or of [arg_2] ||| [arg_2] [function_1]	count=1
function	consider it as ||| replacement	count=1
arg	using this l{command}'s argument ||| cls	count=2
arg	observers ||| observers	count=1
arg	a command [arg_2] ||| cls [arg_1] [arg_2]	count=2
function	[function_1] window by ||| [function_2] [function_1]	count=3
function	to indicate ||| fail	count=1
function	received to the ||| received	count=1
function	a file to which ||| file	count=1
module	a ||| protocols jabber	count=2
function	an l{iresponse} ||| read	count=1
class	to a zippath by ||| zip	count=1
function	a twisted deprecation ||| get	count=1
function	child with ||| child search	count=1
function	[function] key ||| save [function] key	count=1
function	if the connection is ||| connection	count=1
function	article ||| article	count=2
function	hard [function_2] ||| [function_2] [function_1]	count=1
function	if [function] occurs before ||| [function]	count=1
arg	no message is specified ||| i	count=1
class	returns a unixaddress ||| unixport	count=1
function	authentication challenge ||| challenge	count=1
function	busy workers ||| working	count=1
class	broker ||| broker	count=2
function	[function_1] the connection ||| [function_1] [function_2]	count=2
class	the named command ||| command	count=1
class	thread ||| thread	count=2
class	factory ||| factory	count=8
function	return an instance ||| get group	count=1
arg	if a c{regexp} search ||| text regex msg	count=1
function	prepare the c{self ||| prepare	count=1
module_class	the request ||| web request	count=1
arg	@type file any file-like ||| file consumer	count=1
module	the authentication ||| mail	count=1
function	l{getpage} and l{downloadpage} ||| get page classes	count=1
function	send a snac ||| send snac	count=3
module	the user's shell ||| conch	count=1
function	c{datetime time} object ||| combine date	count=1
function	[function_1] [function_2] ||| [function_2] to [function_1]	count=2
arg	all appropriate interfaces ||| ignoreclass	count=1
function	started to get ||| get	count=1
class	function across all processes ||| maildir name generator	count=1
function	of ||| deprecated	count=2
function	decorators ||| deprecated	count=1
arg	jellier ||| jellier jellylist	count=1
function_arg	send data over ||| send obj	count=3
class	for each alias ||| alias	count=1
function_arg	[function_1] osslpkey the ||| [arg_2] [function_1]	count=1
module_class	the c{usegtk} flag ||| internet portable gtk3reactor	count=1
class	the other side ||| sshtransport base	count=2
class	parts of a private ||| private	count=2
function	[function_1] package ||| [function_2] [function_1]	count=3
arg	mode ||| modes params	count=1
class	request or ||| irequest	count=1
module	the current ||| conch	count=2
function	namespaces ||| namespaces	count=1
class	stream ||| xml stream	count=1
module_class	of the webserver ||| web options	count=1
arg	see if host ||| host	count=1
class	of ||| digest credential	count=1
function_arg	response to a ||| response data	count=1
arg	string ||| cls string	count=1
function	generate a new ||| generate	count=1
arg	[arg_1] and size ||| [arg_1] [arg_2]	count=2
function	[function_1] the source ||| [function_2] [function_1]	count=3
class	my syspath ||| path	count=1
function	set the ||| set attrs	count=2
arg	string ||| string	count=3
function	run the ||| run	count=2
class	remove ||| reactor base	count=1
module	representations ||| trial	count=1
function	return the private ||| private	count=1
module	to offer to the ||| conch	count=1
function	internally ||| get internal	count=1
function	whether c{descendantname} is ||| is	count=1
module	using the user's shell ||| conch	count=1
function	pythonattribute ||| name	count=1
class	should open a console ||| console	count=1
function	set up [function_2] ||| [function_1] [function_2]	count=2
function	visible satellite information ||| fix	count=1
function	response ||| to response	count=1
class	file to the ||| file	count=2
module	which is ||| mail	count=1
class	observer will forward events ||| log observer	count=1
function_arg	[function_1] address the ||| [function_1] [arg_2]	count=1
function	get [function_2] ||| [function_1] traceback [function_2]	count=2
class	message as ||| message task	count=1
arg	reactor a [arg_2] ||| [arg_2] [arg_1]	count=1
class	[class_1] object ||| [class_2] [class_1]	count=4
class	remove ||| phase event	count=3
function	[function_1] working directory ||| [function_2] [function_1]	count=1
function	[function_1] msg_userauth_info_response ||| [function_2] [function_1]	count=1
arg	domain to connect to ||| service domain	count=1
arg	as a ||| test	count=1
module	indicating whether [module] known ||| [module]	count=1
function	to [function_2] ||| [function_1] cache [function_2]	count=1
module	when ||| conch	count=2
class	for sending messages via ||| box	count=1
class	value ||| digest credential factory	count=2
function_arg	msg_kex_dh_gex_reply message [arg_2] ||| [arg_2] [function_1]	count=1
class	server ||| server error	count=1
function	delegation if necessary ||| discover authority	count=1
class	be useful to the ||| file	count=1
module	the first ||| web	count=1
module_class	the log ||| python log	count=1
module	run inside the ||| internet	count=1
function	to consider it as ||| get replacement string	count=1
module	the top ||| web	count=1
arg	wrapper [arg_2] ||| [arg_2] [arg_1]	count=4
function	are the same ||| eq	count=1
class	add ||| open ssleccurve	count=1
class	authentication agent if ||| user auth	count=1
class	when the request to [class_1] [class_2] the c{commandconnected} deferred ||| [class_1] [class_2]	count=1
function	the attribute name on ||| get method name	count=1
function_arg	format a [arg_2] ||| [function_1] [arg_2]	count=1
function	number in ||| number	count=1
function	and prepare to deliver ||| deliver body	count=1
function	modules and top-level packages ||| modules	count=1
arg	specified strport string ||| strport	count=1
class	a ||| queue	count=1
class	a retryable manner ||| retrying http11client protocol	count=1
arg	[arg_1] port to ||| [arg_2] [arg_1]	count=2
module	algorithm in the ||| conch	count=1
module	clean up when the ||| mail	count=2
arg	check whether the credentials ||| credentials	count=1
function	a particular authentication type ||| auth type	count=1
function_arg	selected [arg_2] ||| [arg_2] [function_1]	count=4
function	msg_kex_dh_gex_request message ||| kex dh gex request	count=1
arg	@param user ||| user	count=1
function	compute a log prefix ||| log prefix	count=1
function	a fix [function_2] ||| [function_2] [function_1]	count=4
function	abort [function_2] ||| [function_2] [function_1]	count=1
function	a ||| key	count=1
arg	rmailbx ||| rmailbx	count=1
function	attempt to get ||| get	count=1
class	intended ||| name	count=1
class	ensure that the avatar ||| avatar	count=1
function_arg	an authenticator with ||| register authenticator auth	count=1
function	connection was in ||| connection	count=1
module	the version ||| conch	count=1
module_class	and the [class_2] ||| [module_1] [class_2] force abort client	count=3
module	database using the ||| conch	count=1
class	sending ||| box dispatcher	count=2
module	match [module] string c{prefix} ||| [module]	count=1
function	adding bytes to its ||| adjust	count=1
function	[function_1] a ||| [function_1] [function_2]	count=3
class	a cgi script file ||| cgiscript	count=1
function_arg	an iterator ||| coiterate iterator donedeferred	count=1
function	text data if ||| text	count=1
module	of pythonmodule pythonattribute a ||| trial	count=1
function	of disconnect ||| notify on disconnect	count=1
function	[function_1] received ||| [function_1] [function_2]	count=4
function	for the given ||| for	count=3
module	and return it as ||| web	count=1
class	c{*args}, and arrange ||| resolver	count=1
function	end of line including ||| to line end	count=1
function	don't break substrings inside ||| quoted	count=1
module	this failure's ||| python	count=1
arg	send a message on ||| ancillary flags	count=1
function	[function_1] expected ||| [function_2] [function_1]	count=1
function_arg	[function_1] a client ||| [arg_2] [function_1]	count=3
module	used for [module] ||| [module]	count=1
arg	passing over ||| inobject	count=1
function	to a ||| add	count=1
function	this header ||| header	count=1
class	ireactorcore ||| base	count=1
module	select and ||| words	count=1
module	my ||| internet	count=1
function	the ||| manager	count=1
class	intended to be ||| maildir	count=1
arg	and gid ||| gid	count=1
function_arg	[function_1] [arg_2] instance ||| [function_1] [arg_2]	count=1
class	connection ||| h2connection	count=1
function	the read [function_2] ||| [function_1] [function_2]	count=1
class	was provided ||| invalid	count=1
class	last write ||| daily log file	count=1
arg	of some sort ||| channeltype windowsize maxpacket data	count=1
arg	given status [arg_2] ||| [arg_1] [arg_2]	count=1
module_class	this platform? @return boolean [module_1] [class_2] ||| [module_1] [class_2] is known	count=2
class	is unconnected from ||| iprotocol	count=1
function	of xhdr data ||| xhdr	count=1
class	map this alias to ||| address alias	count=1
arg	from the [arg_2] ||| [arg_2] [arg_1]	count=1
arg	checks to see ||| pubkey	count=1
class	on the endpoint ||| stream server endpoint service	count=1
function_arg	[function_1] [arg_2] ||| sshfactory [function_1] [arg_2]	count=3
class	idle one ||| team	count=1
function	drive ||| drive	count=1
class	for a ||| delivery base	count=1
module	status of ||| mail	count=1
arg	method to ||| to	count=1
module	the ||| mail	count=49
function	message-id [function_2] ||| [function_1] [function_2]	count=3
class	authentication ||| authentication	count=1
function	[function_1] names ||| python collection [function_1] [function_2]	count=3
function	ready ||| read	count=5
function	reverse ||| reverse log level	count=1
arg	an option ||| option	count=1
module	using ||| names	count=1
arg	@type file any file-like ||| file consumer transform	count=1
arg	user ||| user filename	count=1
module	pathentry this ||| python	count=1
function	a rset ||| rset	count=1
arg	or a [arg_2] ||| [arg_2] [arg_1]	count=2
module	of the body in ||| mail	count=1
class	each alias and return ||| alias group	count=1
arg	child ||| child	count=1
module	the other ||| conch ssh	count=6
arg	broadcast the given [arg_1] [arg_2] other users in group ||| [arg_2] [arg_1]	count=2
function	received either deliver them ||| received	count=1
class	the consumer by ||| body producer	count=1
class	l{callremote}, with ||| dispatcher	count=1
class	challenge ||| credential	count=1
class	zippath by looking ||| zip	count=1
module_class	[module_1] authentication ||| [module_1] [class_2]	count=6
module	dcc ||| words protocols	count=1
function	quick and dirty ||| and disconnect	count=3
arg	base implementation in order ||| installsignalhandlers	count=1
module	representing this ||| python	count=1
arg	given text as ||| text	count=1
class	the given ||| protocol	count=2
function	create a l{bucket} that ||| init	count=1
arg	or more ||| uid	count=3
arg	protocol to a ||| protocol maxpacketsize	count=1
function	normal prefix to ||| get log prefix	count=1
function	failed ||| failure	count=2
function_arg	extended [arg_2] ||| [arg_2] [function_1]	count=3
function	a skip ||| skip	count=1
module	a www-authenticate challenge ||| cred	count=1
function	stop the [function_2] ||| [function_1] [function_2]	count=2
function	[function_1] display including ||| [function_2] [function_1]	count=8
function	[function_1] i{kexinit} message ||| [function_2] [function_1]	count=1
module	bytes to the ||| conch insults	count=1
arg	topic [arg] or ask ||| [arg]	count=1
class	process's ||| process	count=1
class	is the ||| box dispatcher	count=1
class	a ||| maildir name	count=1
function_arg	[function_1] this person ||| [function_1] [arg_2]	count=3
function	remove ||| remove identity	count=3
arg	[arg_1] in ||| [arg_2] [arg_1]	count=8
class	[class] ssh connection ||| sshcommand client [class]	count=2
arg	for a request ||| request	count=1
class	[class_1] last ||| [class_2] [class_1]	count=2
class	my socket ||| port	count=6
module	initiated by the peer ||| conch ssh	count=1
function	iterate all ||| iter	count=1
arg	for the given group ||| group low	count=1
function	in main wx/twisted thread ||| in main thread	count=1
module_class	[module_1] connection ||| [class_2] [module_1]	count=1
function	the default ||| default log observer	count=1
arg	the command to ||| command	count=1
function_arg	[function_1] message to ||| [function_1] user [arg_2]	count=1
function_arg	coerce a [function_1] [arg_2] ||| trial exc [function_1] [arg_2]	count=3
arg	cannot be issued if ||| _ reason	count=1
module	from ||| client	count=1
function_arg	the producer will [function_1] [arg_2] this method ||| [function_1] [arg_2]	count=1
function	[function_1] made ||| [function_1] [function_2]	count=7
arg	constructs ||| jid password	count=1
class	open process ||| process	count=1
function	an [function_1] [function_2] e g traditional ||| [function_1] [function_2] event formattime	count=2
arg	coordinator ||| coordinator	count=1
function	to this [function_2] ||| [function_2] [function_1]	count=1
arg	either ||| source primary other flags	count=1
function_arg	line of [arg_2] ||| [arg_2] [function_1]	count=1
function	the subject ||| get subject	count=1
function	interface [function_2] ||| [function_2] [function_1]	count=6
class	l{iconsumer<twisted ||| ibody producer	count=1
module	returned by the ||| web	count=1
function	exhorting the ||| get	count=1
arg	given expressions given ||| elem	count=2
module	in [module] selected state ||| [module]	count=1
function	particular authentication ||| auth	count=1
function	actual test inside ||| test	count=1
function	[function] entities ||| list [function]	count=1
function	name given ||| name	count=1
function	utility ||| call	count=1
module	be unique across ||| mail	count=1
function	for a deprecated api ||| replacement string	count=1
function_arg	connection to [arg_2] ||| [arg_2] [function_1]	count=3
function	to ||| to filesystem encoding	count=2
function	return a suitable ||| get	count=1
arg	primary the ip ||| primary domains	count=1
function	the current [function_2] ||| [function_2] [function_1]	count=1
function	an http date string ||| string	count=1
class	frame references as a ||| frame element	count=2
function_arg	coerce [function_1] [arg_2] ||| trial exc [function_1] [arg_2]	count=3
function_arg	given a blob [function_1] [arg_2] ||| [function_1] [arg_2]	count=3
function	holding ||| eom received	count=1
class	given c{key} it ||| mem cache protocol	count=2
class	get ||| sshuser auth client	count=1
function	return the [function_2] ||| [function_1] [function_2]	count=24
function	erase from ||| erase	count=3
function	the request to be ||| request	count=1
function	the user id ||| get user id	count=2
arg	the given group over ||| group low high header	count=1
arg	c{failure} ||| errorclass frames	count=1
function_arg	[function_1] c{name} the ||| [function_1] [arg_2]	count=2
function	send a ||| send message	count=2
class	suitable ||| digest	count=1
class	c{self frame} ||| source fragment element	count=1
module	the keys for the ||| conch ssh	count=1
arg	more python objects and ||| objects proto	count=1
function	the normal prefix to ||| get log prefix	count=1
class	messages via amp invoke ||| box dispatcher	count=1
function	build the ||| build	count=1
class	to be unique ||| name	count=1
function	notification of the write ||| write	count=1
function	from ||| from sign hours	count=1
function	add a header tuple ||| add	count=1
function	get the body for ||| body	count=1
arg	c{blob} ||| blob	count=1
class	return ||| client context factory	count=1
function	string split ||| split	count=1
function	credentials ||| credentials	count=5
arg	mbox a ||| mbox	count=1
function	the pause ||| pause	count=1
module	called when the ||| conch	count=4
arg	the name [arg] ||| name [arg]	count=3
function	retrieve the subject ||| get subject	count=1
function	client endpoint from ||| client from	count=3
function	line ||| directory line	count=1
arg	flags for [arg_2] ||| [arg_2] [arg_1]	count=1
module	related [module] ||| [module]	count=1
class	of the file ||| file receive	count=1
module	of pythonmodule pythonattribute ||| trial	count=1
function_arg	a msg_disconnect [arg_2] ||| [function_1] [arg_2]	count=1
function	consider it as ||| get replacement	count=1
class	side ||| sshtransport base	count=1
function_arg	string one [arg_2] ||| [function_1] to datetime [arg_2]	count=2
function	of hard links ||| of hard links	count=1
class	create ||| memory worker	count=1
arg	valid ipv4 or ipv6 ||| effort	count=1
class	message as it ||| message task	count=1
class	private certificate ||| private certificate	count=3
module	list of ||| python	count=5
arg	l{imessagepart} provider which this ||| main subtype attrs	count=1
function	all keys found in ||| identities	count=1
class	to this function across ||| generator	count=1
class	a c{decimal decimal} instance ||| decimal	count=1
function	send as much of ||| some data	count=1
arg	given request ||| request	count=3
function	header extract the ||| extract	count=1
arg	given group over the ||| group low	count=1
module	new l{dnsdatagramprotocol} instance from ||| names	count=1
function	return a digest hash ||| digest	count=1
module_class	to the process ||| mail process alias	count=1
function	a notice ||| notice	count=1
function	[function_1] of the ||| [function_1] [function_2]	count=1
function	mark a [function_2] ||| [function_2] [function_1]	count=9
function	text received ||| text	count=1
function	remember the currently-processed ||| remember root	count=1
module	passphrase if the ||| conch client	count=1
function	chunk of ||| chunk	count=2
class	issue ||| resolver	count=1
function	extract frames from a ||| frames	count=1
module	and their ||| words im	count=1
function	received chunk of ||| chunk	count=1
module	parses partial ||| positioning	count=1
class	an address ||| iudptransport	count=1
function	the attribute name ||| get method name	count=1
module	arguments for the ||| internet	count=1
function_arg	unregister the [arg_2] ||| [function_1] address [arg_2]	count=1
function	its fd ||| fd	count=1
function	a resolver ||| resolver	count=1
function	elements ||| elements	count=2
function	levels to ||| levels	count=1
function	use [function] ||| [function]	count=1
arg	of c{inode} ||| inode	count=1
function	sending messages via ||| call	count=1
function	create a certificate ||| certificate	count=1
function	for ||| call	count=1
function	and a c{str} ||| and	count=1
module	information ||| positioning	count=1
function	clientside cache ||| cache and observe	count=1
arg	user [arg_2] ||| [arg_1] message [arg_2]	count=1
function	an ||| get	count=2
function	path to the ||| path	count=1
arg	rmailbx [arg_2] ||| [arg_2] [arg_1]	count=1
function	next string from ||| next	count=1
function	and dirty ||| and	count=3
class	value suitable for ||| credential factory	count=1
module_class	[module_1] [class_2] ||| [module_1] ideprecated httpchannel to [class_2]	count=1
arg	iterator to the list ||| iterator	count=1
function_arg	that will [arg_2] ||| [function_1] deferred [arg_2]	count=2
module	web ||| web	count=1
function_arg	a chunk [arg_2] ||| [arg_2] [function_1]	count=2
function	print [function_2] ||| [function_1] brief [function_2]	count=1
class	store the message while ||| message	count=1
arg	a pre-built ||| password	count=1
function	are elements ||| elements	count=1
function	disconnect flap ||| disconnect	count=1
module	object it is running ||| python	count=1
module_class	if this file ||| python ifile	count=1
function	kicked [function_2] ||| [function_1] [function_2]	count=2
arg	[arg_1] we're connected ||| [arg_2] [arg_1]	count=1
function_arg	@param l ||| init l	count=1
function	from list of disconnect ||| dont notify on disconnect	count=1
class	string ||| name generator	count=1
function	of pythonmodule ||| name	count=1
class	valid file descriptor ||| ifile descriptor	count=1
function	read ||| read	count=8
function	[function_1] msg_userauth_info_response the ||| [function_2] [function_1]	count=1
module	portion [module] a ||| [module]	count=1
function	an l{esmtpsender} protocol configured ||| protocol	count=1
class	file to the consumer ||| file body producer	count=1
class	parsing ||| httpparser	count=1
arg	setup giving a reason ||| reason	count=1
function_arg	[function_1] a service ||| [arg_2] [function_1]	count=2
class	i{chunked} [class_2] ||| [class_2] [class_1]	count=2
function	call ||| call	count=3
function_arg	[function_1] command ||| [arg_2] [function_1]	count=4
arg	given function ||| f	count=2
function	loop ||| loop	count=1
class	test ||| test	count=3
arg	using ||| jid password	count=1
function	handle a sigbreak ||| break	count=1
function	prefix length for all ||| prefix	count=1
arg	c{newpath} that ||| path newpath encoding	count=1
module_class	return this [class_2] ||| [module_1] [class_2]	count=4
function	to [function] ||| range to [function] and	count=1
function	testcase subclass or an ||| name	count=1
function	add [function_2] ||| [function_2] [function_1]	count=5
class	the test has run ||| test	count=1
arg	and its c{parentbucket} ||| amount	count=1
function	generate an ||| generate	count=1
function	global reactor if ||| global reactor	count=1
arg	broker and [arg_2] ||| [arg_2] [arg_1]	count=1
class	fingerprint of [class] consists of ||| [class]	count=1
function	result ||| result	count=2
function	a function is ||| function	count=1
function	the command state in ||| state command	count=1
function	we received a msg_userauth_failure ||| userauth failure	count=1
function_arg	[function_1] message is ||| [function_1] [arg_2]	count=4
function	[function_1] the failure ||| [function_1] [function_2]	count=1
arg	constructs a pre-built ||| jid	count=1
module	response to this ||| python	count=1
function	contact list ||| contact	count=2
function	socket and ||| collect socket	count=3
arg	make consequent state ||| b	count=1
class	transport to an address ||| iudptransport	count=1
function	a sigbreak ||| break	count=1
class	group conversation ||| igroup conversation	count=2
function	instance ||| instance	count=2
arg	same as the query ||| query id msg	count=1
function_arg	from an 'in' ||| from box name	count=2
arg	username [arg_2] ||| [arg_2] [arg_1]	count=1
function	a received ||| received	count=7
class	@param address [class] address ||| [class]	count=1
arg	[arg_1] port number ||| [arg_2] [arg_1]	count=8
function	authorized to receive ||| authorized resource	count=1
function_arg	[function_1] [arg_2] ||| [function_1] all hostsfile [arg_2]	count=1
function	the ||| fetch	count=2
module	to it ||| names	count=1
module_class	this l{logpublisher} ||| python log publisher	count=2
function	and resume [function_2] ||| [function_2] [function_1]	count=4
function	the root resource ||| opt resource	count=1
function_arg	[function_1] given sender ||| [function_1] [arg_2]	count=2
class	zsh completion code to ||| zsh	count=1
module	by the peer ||| conch ssh	count=1
arg	[arg_1] listen ||| [arg_1] proto [arg_2]	count=1
class	[class] top ||| iraw datagram [class]	count=2
arg	the error is a ||| test error	count=1
function	msg_userauth_info_response the server has ||| userauth pk ok keyboard interactive	count=1
class	message in the mailbox ||| list mailbox	count=2
class	cgi ||| cgiscript	count=1
function	return [function] ||| [function] credentials	count=1
function	[function_1] client protocol ||| [function_2] [function_1]	count=3
function	interface for outgoing ||| outgoing interface	count=3
arg	mailbox this ||| mailbox	count=1
arg	with a unique ||| uid	count=1
arg	a given name ||| name	count=4
function	new user record ||| user	count=2
function	complete enough to resolve ||| absolute	count=1
function	c{bytes}, ||| as same type	count=1
class	instance of a l{igroup<interfaces ||| chat ui	count=2
module	and which have the ||| web	count=1
function	here this [function] was ||| unhandled [function]	count=1
class	other side is adding ||| sshconnection	count=1
arg	a fd is ||| selectable fd event	count=1
module	from wire [module] saving flags ||| [module]	count=1
function	to the ||| opt bounce to	count=1
module	instance variables of this ||| python	count=1
function	a data [function_2] ||| [function_1] [function_2]	count=3
function	of a given port ||| generate port	count=1
function	the host ||| host	count=1
class	select ||| initializer	count=1
class	request to ||| request	count=2
function	data [function_2] ||| [function_2] [function_1]	count=12
function_arg	selected [arg_2] ||| [function_1] body [arg_2]	count=2
module	jabber server ||| jabber	count=1
class	stored ||| parser helper	count=1
module	out the avatar if ||| conch ssh	count=1
function	size of this ||| size	count=1
module	either by the ||| conch	count=1
class	across all processes ||| maildir	count=1
arg	data ||| data	count=25
function	and write it ||| write	count=1
function	a sigterm ||| term	count=1
class	factory that this ||| factory	count=1
function_arg	[function_1] request ||| web [function_1] [arg_2]	count=2
function	exhorting the user ||| get replacement string	count=1
function	factory ||| unjellyable factory	count=1
function_arg	store stor this ||| stor path	count=1
function	[function_1] return ||| [function_2] path [function_1] as pattern	count=4
module	ask the ||| conch	count=1
function	[function_1] the other ||| [function_2] [function_1]	count=2
function	a log [function_2] ||| [function_1] [function_2]	count=3
function	while key exchange ||| key exchange	count=1
function	of responding to ||| respond to	count=2
module	to publish me as ||| spread	count=1
function	payload ||| payload	count=3
function	stop listening on ||| stop listening	count=2
function	extended ||| extended	count=1
function	c{_deprecated_info} flag if any ||| deprecated	count=1
arg	given [arg] run ||| [arg]	count=1
function	more body data ||| body data finished	count=2
arg	a message on ||| ancillary flags	count=1
class	select ||| saslinitiating	count=1
function	an integer gid ||| gid	count=1
function_arg	write [arg_2] ||| [arg_2] [function_1]	count=20
function	[function_1] bad requests ||| [function_1] [function_2]	count=7
arg	encrypted communication using ||| contextfactory	count=1
function	the the setup ||| setup	count=1
module	consisting [module] ||| [module]	count=1
function	string describing the ||| cap	count=1
class	arrange for it to ||| resolver	count=1
class	syspath ||| python path	count=1
function	the negation of ||| not	count=1
class	the ||| tree	count=1
function	escape some ||| escape	count=1
module_class	[module_1] server ||| [module_1] [class_2]	count=5
class	[class] l{filepath} c{linkfilepath} ||| [class]	count=2
module	and the object it ||| python	count=1
function_arg	the process [arg_2] ||| [function_1] [arg_2]	count=2
arg	header based on the [arg_1] [arg_2] ||| value [arg_1] [arg_2]	count=6
class	stop performing ||| transport	count=1
function	mapping adding both the ||| log level mapping	count=1
class	since last write ||| daily log	count=1
arg	[arg] and ||| [arg]	count=2
function	files and directories ||| files and directories	count=1
class	of [class] consists of ||| [class]	count=1
class	called when a user ||| ircclient	count=1
function	getpeer but returns ||| get host	count=1
class	changed ||| daily log file	count=2
arg	and ||| cls type timeout	count=1
class	copy ||| copy	count=1
class	and setup ||| initializer	count=1
class	the ||| nntpclient	count=2
function	using the ||| manager	count=1
function	for the auth ||| auth	count=1
function	by the stream ||| stream	count=1
function	is successfully posted ||| post request	count=1
function_arg	write packet to ||| write packet	count=1
module	the trial ||| trial	count=1
function	is msg_userauth_info_response the ||| ssh userauth pk ok keyboard interactive	count=1
arg	data to ||| data	count=4
arg	query to ||| query servers timeout queriesleft	count=1
function	kicked from a ||| user kicked	count=1
module_class	when that [class_2] ||| [module_1] [class_2]	count=4
arg	authority's distinguishedname ||| issuerdistinguishedname requestdata verifydncallback serialnumber	count=1
class	an unparsed [class_2] ||| [class_1] [class_2]	count=4
function	received chunk ||| chunk	count=1
function	login and get ||| login	count=1
function	unused directory named similarly ||| unused test directory	count=1
arg	write ||| write	count=1
arg	mode [arg] them ||| [arg]	count=1
function_arg	[function_1] payload ||| [arg_2] [function_1]	count=4
arg	to see if uid ||| uid	count=1
arg	line of the response ||| line	count=2
arg	rotating on length ||| name directory rotatelength defaultmode	count=1
class	process ||| process alias	count=1
arg	local files ||| files remotepath	count=1
arg	subclasses must implement this ||| instring	count=1
arg	name and [arg_2] ||| [arg_1] [arg_2]	count=2
arg	the given [arg_2] ||| [arg_2] [arg_1]	count=8
module	that emits ||| logger	count=1
function_arg	for a [arg_2] ||| [function_1] [arg_2]	count=1
class	file that contains the ||| file	count=1
class	@param address [class] ||| record [class]	count=1
class	select and setup ||| initializer	count=1
function	retrieve the subject of ||| subject	count=1
arg	[arg_1] l{ireactorunix} provider ||| [arg_1] [arg_2]	count=1
function	window ||| window	count=3
class	the request to execute [class_1] [class_2] the c{commandconnected} deferred ||| [class_1] [class_2]	count=1
module	the last header ||| web	count=1
function	given arguments ||| arguments	count=1
function	a message sent to ||| message	count=1
function	the underlying ||| connection	count=1
module_class	this platform? @return boolean [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	send a message ||| message	count=3
function	coercion necessary for ssl ||| ssl	count=1
arg	normalise the url path ||| path	count=1
module	move the cursor down ||| conch insults	count=1
class	my syspath ||| python path	count=1
module	news ||| news	count=1
class	all necessary metadata ||| publishable	count=1
class	headers set ||| headers	count=1
arg	the given group ||| group low	count=1
module	if ||| web	count=1
arg	convert [arg] ||| [arg]	count=2
arg	given [arg_2] ||| [arg_2] [arg_1]	count=12
function	get a msg_kex_dh_gex_init message ||| ssh kex dh gex init	count=1
function	with a windows error ||| format error	count=1
arg	we're connected ||| queued	count=1
function	delete the ||| delitem	count=1
arg	address [arg] @param address ||| address [arg]	count=2
function	contains test cases ||| test	count=1
function	[function_1] json ||| [function_1] [function_2]	count=1
function	[function_1] new user ||| [function_1] [function_2]	count=2
arg	list of local files ||| files remotepath single	count=1
class	call [class_2] ||| [class_2] [class_1]	count=2
class	a private [class_2] ||| [class_1] [class_2]	count=2
function	message receiver for ||| message	count=1
function	[function_1] of responding ||| [function_2] [function_1]	count=2
module_class	[module_1] this file ||| [module_1] [class_2]	count=2
function	sign ||| set sign	count=1
function	message sent from the ||| show message	count=1
class	object ||| with default	count=1
class	and ||| looping	count=1
class	a remote [class_2] ||| [class_1] [class_2]	count=1
function	this is ||| call remote	count=1
function	some warnings ||| warnings	count=2
function	flow control ||| flow control	count=2
function	data more than once ||| data finished deferred close	count=1
function	[function_1] thread ||| [function_1] [function_2]	count=5
arg	given person object ||| person	count=1
function_arg	[function_1] the flags ||| [arg_2] [function_1]	count=1
function	to run [function_2] ||| [function_1] [function_2]	count=3
function	an amp box ||| box	count=1
arg	pre-built l{servicemanager}, using ||| password	count=1
function	registration on a ||| update registration	count=1
function	testcase subclass ||| name	count=1
function	extract a ||| extract	count=1
arg	is conversing ||| text metadata	count=1
function	charset of ||| charset	count=1
module	make the current ||| conch	count=1
class	c{self frame} and ||| source fragment element	count=1
function	to join ||| join	count=1
function	[function_1] on to ||| [function_1] [function_2]	count=1
function	given signal c{signalid} to ||| signal	count=1
arg	with a name matching ||| name	count=1
class	observer will ||| log observer	count=1
function	format for an address ||| for	count=1
function_arg	[function_1] [arg_2] ||| [function_1] box [arg_2]	count=7
arg	log a failure ||| failure	count=1
function	thread with the ||| thread	count=1
function	a msg_kex_dh_gex_reply message ||| kex dh gex reply	count=1
function_arg	[function_1] [arg_2] to ||| [function_1] [arg_2]	count=9
class	died ||| ptyprocess	count=1
module_class	hashed [class_2] ||| [module_1] [class_2]	count=1
function	made a global request ||| global request	count=1
arg	size ||| size	count=3
class	of this ||| cert	count=1
function	gotoverview() is called ||| fetch	count=1
function	know if the key ||| verify key	count=1
arg	to a l{irealm} ||| realm checkers	count=1
class	changed ||| daily log	count=1
arg	[arg] short ||| [arg]	count=1
class	[class_1] [class_2] ||| [class_1] [class_2]	count=432
function_arg	put a [arg_2] ||| [arg_2] [function_1]	count=1
arg	add the given member ||| member	count=1
function	[function_1] a traceback ||| [function_2] [function_1]	count=2
arg	request if ||| request	count=1
module	the number of ||| python	count=1
function	l{servicemanager}, ||| build service manager	count=2
arg	to encrypted communication using ||| contextfactory	count=1
arg	observers ||| observers discardbuffer redirectstandardio	count=1
function	connection over the ||| connection	count=1
class	ipv6 address ||| tcp6client endpoint	count=1
function	extract frames ||| frames	count=1
class	mark ||| imailbox pop3	count=1
class	to at [class] ||| [class]	count=3
module	clear the ||| protocols	count=1
arg	delivered [arg] ||| [arg]	count=1
function	[function_1] an encoder ||| [function_2] [function_1]	count=2
function_arg	[function_1] a transport ||| [arg_2] [function_1]	count=3
function	the ssi server ||| ssi	count=1
module	the server that we ||| mail	count=1
class	of all domain ||| domain with	count=2
class	in ||| python	count=1
module	return the ||| web	count=1
function	group to ||| group	count=1
function	with some ||| replacement	count=1
class	we are connected ||| iunixdatagram connected transport	count=2
class	messages ||| dispatcher	count=1
class	value suitable ||| digest credential	count=1
class	next iteration ||| looping	count=1
function_arg	all readers and ||| all readers	count=1
function	a received chunk of ||| chunk	count=1
function_arg	[function_1] test thing ||| [function_1] [arg_2]	count=6
function	[function_1] resume request ||| [function_1] do accept [function_2]	count=2
function_arg	[function_1] readers and ||| [arg_2] [function_1]	count=2
arg	domain to connect ||| reactor service domain factory	count=1
function	[function_1] delay ||| [function_2] [function_1]	count=2
arg	us a message ||| message	count=1
class	the underlying [class] and ||| deprecated [class]	count=1
arg	datagram out ||| limit	count=1
function	[function_1] resume request ||| [function_2] [function_1]	count=9
function	signals to wake up ||| waker	count=1
function	get a description of ||| get	count=1
function_arg	send a [arg_2] ||| [function_1] user [arg_2]	count=2
class	channel exists ||| command channel	count=1
function	service is ||| service	count=2
arg	the specified text to ||| text	count=1
module	the clients wants signed ||| conch	count=1
function	identify [function] messages related ||| [function]	count=1
class	next iteration ||| call	count=1
function	and return [function_2] ||| [function_2] [function_1]	count=8
function	an alternative ||| replacement	count=1
class	standard [class_2] ||| [class_1] [class_2]	count=1
function	remove the trigger ||| remove trigger	count=1
function	a certificate [function_2] ||| [function_1] [function_2]	count=1
module	whenever the first ||| web	count=1
class	an expression ||| broker	count=1
class	l{_connectedprotocol}, issue ||| resolver	count=1
class	a hashed entry ||| hashed entry	count=2
arg	hostname resolution ||| hostname	count=1
function	clean up references ||| details	count=1
arg	a child resource ||| child	count=1
function	text exhorting the ||| get replacement	count=1
function	a message to ||| append message	count=2
class	has changed ||| file	count=1
arg	in it whatever ||| parent qualname	count=1
module	constructs ||| words protocols jabber	count=2
class	syspath and moduledict ||| python path	count=1
function	subnegotiations for ||| unhandled subnegotiation	count=1
class	message as it is ||| maildir mailbox append message task	count=1
arg	listen [arg_2] ||| [arg_2] [arg_1]	count=2
function	string key ||| key	count=1
module	initializes ||| conch	count=1
class	for extra arguments ||| arguments	count=1
module	the user ||| conch	count=4
class	use as the ||| credential factory	count=1
class	current authentication ||| sshuser auth	count=1
function	retrieve a list of ||| list	count=3
module	the root element ||| xish	count=2
function	a producer with ||| producer	count=1
arg	object @param fp ||| fp	count=1
class	random value ||| credential	count=1
function	a remote ||| call remote	count=1
function	from the module containing ||| from	count=1
arg	tests ||| recurse	count=2
arg	a byte string ||| strio	count=1
function	[function_1] new conversation ||| [function_1] [function_2]	count=1
arg	serv_type [arg_2] ||| [arg_1] [arg_2]	count=3
function	and dirty way ||| and	count=3
class	this ||| list	count=1
function	children to a ||| to	count=1
arg	an fd with the ||| fd	count=1
class	raw ||| line receiver	count=1
arg	period ||| delay	count=1
function	waiting ||| waiting	count=2
module_class	return this l{filepath} ||| python file path	count=2
function	trying to resume an ||| resume	count=1
function	polite text exhorting the ||| replacement	count=1
class	c{key} by given value ||| mem cache	count=2
arg	given queries ||| queries timeout id	count=1
function	has been ||| get	count=1
function	to the running ||| running	count=1
function	the c{_deprecated_info} flag ||| deprecated	count=1
arg	into a two-sequence ||| disp	count=1
function	as deprecated ||| deprecated	count=1
arg	serv_type an [arg_2] ||| [arg_2] [arg_1]	count=4
class	this task ||| cooperative task	count=1
function_arg	[function_1] connection from ||| [arg_2] [function_1]	count=1
function	c{signalid} to the process ||| process	count=1
function	elements of ||| elements	count=1
function	discard the contents of ||| sync	count=1
module	this is msg_userauth_passwd_changereq the ||| conch ssh	count=1
function_arg	create a [arg_2] ||| [function_1] [arg_2]	count=14
function_arg	start running [arg_2] ||| [function_1] [arg_2]	count=1
arg	[arg] descriptor ||| fd path [arg]	count=3
module	remove ||| internet	count=1
module	a message from the ||| mail	count=1
module	allowed in [module] selected state ||| [module]	count=1
class	write ||| tlsmemory bioprotocol	count=1
module	amp invoke ||| protocols	count=1
function	for unix [function_2] ||| [function_2] [function_1]	count=4
function	global reactor if the ||| maybe global reactor	count=1
function	begin [function_2] ||| [function_1] [function_2]	count=3
function	monitored for ||| writers	count=2
function	it as an alternative ||| string	count=1
arg	the tests in that ||| recurse	count=1
function	given message ||| message	count=1
arg	in the given color ||| color	count=2
function	string representation ||| repr	count=2
class	this l{deferredlist} ||| deferred list	count=1
function	groups ||| groups	count=1
function	accepted ||| do accept	count=1
function	surround ||| string	count=1
arg	previously sent message ||| fail requestid	count=1
function	a i{kexinit} ||| kex init	count=1
function	via amp invoke it ||| remote	count=1
class	and directories ||| transfer server	count=1
function_arg	[function_1] user ||| [function_1] [arg_2]	count=7
function	a resolver instance ||| resolver	count=1
class	of c{key} ||| mem cache	count=2
function_arg	[function_1] disconnect ||| [function_1] error [arg_2]	count=1
function	body of this message ||| get body	count=1
function	failure to ||| failure	count=1
function	a deprecated api ||| string	count=1
function	msg_disconnect message ||| disconnect	count=1
arg	c{message} ||| responseconstructor message	count=1
class	initialization ||| base	count=1
class	authorities ||| authorities	count=1
arg	http/1 ||| transport	count=1
class	report that the ||| result	count=1
function	response [function_2] ||| [function_2] [function_1]	count=2
arg	the flags ||| flags silent	count=1
arg	a transport ||| transport	count=1
module	iterator over the ||| mail	count=2
function	the body of an ||| body	count=1
module	writing it to the ||| conch client	count=1
function	build a ||| build	count=1
function	ensure they will not ||| ensure not	count=1
function_arg	[function_1] endpoint description ||| [function_1] string [arg_2]	count=6
class	leaf resource ||| iresource	count=1
module	offer to the server ||| conch	count=1
function	drives that activity ||| producing	count=1
arg	person object return the ||| person	count=1
arg	private generates the ||| portcmd	count=1
class	a string which is ||| generator	count=1
module	the given ||| internet	count=1
function	[function_1] for consuming ||| [function_2] [function_1]	count=1
class	get ||| sphinx inventory	count=1
function	imported and ||| imported	count=1
class	make [class_2] ||| [class_2] [class_1]	count=1
class	syspath ||| python	count=1
function	string describing ||| cap	count=1
arg	reporter ||| testname	count=5
function	[function] an ||| [function]	count=2
module	setup ||| protocols	count=1
class	string which is ||| maildir name generator	count=1
class	and moduledict ||| python path	count=1
function_arg	[function_1] three formats ||| [arg_2] [function_1]	count=2
function_arg	udp [arg_2] ||| [function_1] [arg_2]	count=3
arg	time seconds from the ||| time	count=1
function	is ready [function_2] ||| [function_2] or [function_1]	count=1
function_arg	msg_service_accept [arg_2] ||| [function_1] [arg_2]	count=1
function	if ||| call	count=1
function	unjelly set using the ||| unjelly set	count=1
module	the current ||| conch ssh	count=1
function	create [function_2] ||| [function_1] [function_2]	count=4
class	to the temporary ||| wrapper	count=1
function	start calling boxreceived on ||| start receiving	count=1
function	print 'message' ||| end	count=1
arg	unwrap its result ||| protocolfactory	count=1
function	add a child to ||| add child	count=1
module	chance to ||| protocols	count=1
arg	in 'dict' ||| dict	count=1
function	[function_1] a socket ||| [function_2] [function_1]	count=2
function	helper to build ||| build failure	count=1
function	python module it is ||| module	count=1
class	child ||| file path	count=1
arg	[arg_1] optional message ||| [arg_2] [arg_1]	count=2
module	sending messages ||| protocols	count=1
class	opened files and directories ||| file transfer server	count=1
function	[function_1] attempts ||| [function_1] [function_2]	count=5
function_arg	policy for [arg_2] ||| [arg_2] [function_1]	count=2
module	satellite information ||| positioning	count=1
module	and ||| web	count=5
function	the global reactor ||| maybe global reactor	count=2
function	factory to ||| factory	count=2
function	object for ||| for	count=1
function	an nmea datestamp ||| datestamp	count=1
arg	true and [arg] ||| obj [arg]	count=1
class	a checker ||| sshprotocol checker	count=1
function	[function_1] cookie that ||| [function_2] [function_1]	count=1
module_class	i [class_2] ||| [module_1] [class_2]	count=1
function	size in octets of ||| get size	count=1
class	decode ||| digest credential factory	count=1
arg	name wrapper ||| name	count=1
function_arg	topic [arg_2] ||| [function_1] updated user channel [arg_2]	count=1
class	callback invoked after ||| httpparser	count=1
function	[function_1] of an ||| [function_2] [function_1]	count=1
module_class	this file ||| python ifile path	count=1
function	return ||| get handle	count=2
module	specific key from the ||| conch ssh	count=1
class	get ||| auth client	count=1
arg	a failure ||| failure	count=2
function	from a full ||| from full	count=3
function_arg	[function_1] name see ||| [function_1] [arg_2]	count=2
function	performing the ||| wont	count=1
module	convert this ||| internet	count=1
function	consumer a single time ||| resume producing	count=1
function	[function_1] for ||| [function_1] [function_2]	count=7
module	gotoverview() is called ||| news	count=1
function	make a [function_2] ||| [function_2] [function_1]	count=3
arg	creator ||| creator command protocolfactory	count=1
arg	beginning of c{query} ||| query msgid msg lastsequenceid	count=1
class	pool ||| connection pool	count=1
function	for this [function_2] ||| [function_2] [function_1]	count=2
function	c{name} into [function_2] ||| [function_2] [function_1]	count=2
function	request id ||| request id	count=2
function	[function] query ||| [function]	count=1
function	[function_1] degrees ||| [function_2] [function_1]	count=2
function	systemd [function] ||| [function]	count=3
module_class	other side and ||| ssh sshtransport base	count=1
function	search the given ||| search	count=1
function	exception object from ||| exception from	count=1
function_arg	chunks [arg_2] ||| [arg_2] [function_1]	count=1
function	wrap ||| wrap	count=1
function	portal ||| portal	count=1
function	a l{bucket} corresponding to ||| get bucket for	count=1
function	buffer this makes it ||| buffer	count=1
arg	same as the query ||| query	count=1
class	unique across ||| name generator	count=1
arg	the contents of ||| i	count=2
function	textual and a ||| host as bytes and text	count=1
module	an element ||| words xish	count=2
function	number in the range ||| number	count=1
function	object from ||| from	count=1
class	the initialization ||| initiating	count=1
function	deliver any future data ||| deliver	count=1
arg	enable an option ||| option	count=1
arg	or 1 [arg_2] ||| [arg_2] [arg_1]	count=2
module_class	the serial ||| internet serial	count=1
function	property as ||| property	count=1
function	the hostname that ||| hostname	count=1
arg	utc value as ||| when	count=1
function	descriptors ||| descriptors	count=1
class	parse ||| server parser	count=1
function	[function] the wrapped ||| [function]	count=3
module	pb [module] in ||| [module]	count=1
function	sending i{ping} messages to ||| heartbeat	count=1
function	return their string ||| clean	count=1
class	date has changed ||| daily log file	count=1
function	of a testcase ||| name	count=1
class	notify l{boxreceiver} that ||| binary box	count=1
function	expected ||| expected	count=2
function	our c{self _wrappedfactory} ||| build protocol	count=1
function	for ||| factory	count=2
class	the received ||| receiver	count=1
function	overview format from ||| overview	count=1
module	their ||| trial	count=1
function	[function_1] socket ||| [function_2] [function_1]	count=3
function	is received ||| heading received	count=1
function_arg	joins the [arg_2] ||| [arg_2] [function_1]	count=1
function	c{name} [function_2] ||| [function_2] [function_1]	count=2
module	be sent to the ||| conch ssh	count=1
class	make ||| datagram protocol	count=1
arg	mac values ||| mac	count=1
function	lose the [function_2] ||| [function_2] [function_1]	count=1
function	a log ||| log	count=1
class	specify ||| auth option mixin	count=1
function	[function_1] challenge ||| [function_2] [function_1]	count=3
module	list of key ||| python	count=1
function	underlying ||| key	count=1
function_arg	@param message ||| init message	count=2
function	several different fields of ||| fast	count=1
function	amp box ||| box	count=1
function	helper returning files and ||| files and	count=1
arg	range of articles ||| low high id	count=1
function_arg	[function_1] fd filtering ||| [function_1] [arg_2]	count=1
module	negation of a ||| mail	count=1
arg	protocol factory [arg_2] ||| [arg_2] [arg_1]	count=1
function	plugin ||| plugin	count=1
class	the daylight saving time ||| time zone	count=1
function	the file number of ||| fileno	count=1
class	lines of ||| line	count=1
class	resolution ||| iresolution receiver	count=1
module	pre-built l{servicemanager}, using ||| words protocols	count=1
function	observer ||| for observer	count=1
function	its text data if ||| gather text	count=1
class	all processes reboots etc ||| name generator	count=1
module	the keys for the ||| conch	count=1
module	twisted ||| python	count=1
function	as ||| attrs	count=1
arg	[arg] check state ||| [arg]	count=2
function	text exhorting the user ||| replacement string	count=1
function_arg	remove [arg_2] ||| [arg_2] [function_1]	count=2
arg	name l{bytes} or l{unicode} ||| type cls ttl	count=1
arg	user a file directly ||| user file	count=1
class	key matches ||| sshpublic key	count=1
module_class	[module_1] file ||| [module_1] [class_2] open mode	count=1
function	parse a [function_2] ||| [function_1] [function_2]	count=6
function	getwriters} ||| get writers	count=1
function	the time of the ||| time	count=2
arg	[arg_1] oscaruser ||| [arg_1] [arg_2]	count=2
function	the suffix ||| suffix	count=1
arg	an nmea [arg] minus ||| [arg]	count=1
arg	l{localworkeramp} instance iterating the ||| worker result testcases cooperate	count=1
function	[function_1] failure to ||| [function_2] [function_1]	count=3
arg	aren't value constants the ||| cls level	count=1
function	presence of ||| contains	count=1
function	protocol message [function] version-number check ||| [function]	count=1
arg	key given by c{blob} ||| blob data	count=1
class	connection factory ||| iprotocol negotiation factory	count=1
arg	start and end ||| start end	count=3
function	a msg_unimplemented message ||| unimplemented	count=1
class	transport is connected ||| abstract datagram	count=1
arg	creator the l{_isshconnectioncreator} ||| creator command	count=1
class	l{deferred} ||| deferred	count=1
class	called whenever ||| socksv4	count=1
class	outgoing request's ||| iagent	count=1
module	constructs ||| jabber	count=1
function	mapping ||| level mapping	count=1
function	cdata element collect ||| end cdata	count=1
function	to consider ||| get	count=1
class	a ||| deferred queue	count=2
function	unused directory named ||| unused test directory	count=1
arg	username the ||| username password	count=1
arg	a query checking ||| query	count=1
class	speed that this ||| speed	count=1
function	it as ||| replacement	count=1
function	return an l{ipv4address} ||| get	count=1
arg	a mailbox this ||| mailbox	count=1
function	a connection [function_2] ||| [function_1] [function_2]	count=2
arg	message in the chat ||| chat user message	count=1
arg	sock protocol [arg] sessionno ||| sock protocol [arg]	count=1
module_class	check if [class_2] ||| [module_1] [class_2]	count=4
arg	a message ||| message length	count=2
arg	[arg_1] numeric ||| [arg_1] backlog [arg_2]	count=1
function	status [function_2] ||| [function_1] [function_2]	count=2
function	file [function_2] ||| [function_1] [function_2]	count=1
class	characters of a netstring ||| netstring	count=1
module	from ||| trial	count=1
function	a single [function_2] ||| [function_1] [function_2]	count=2
function	that are elements ||| elements	count=1
class	in ||| tree reporter	count=2
class	a mailbox @type ||| iaccount imap	count=2
function	yield in [function_2] ||| [function_2] [function_1]	count=2
class	the given ||| itelnet transport	count=1
function	[function_1] the payload ||| [function_2] [function_1]	count=1
function	[function_1] reference ||| [function_2] [function_1]	count=1
module	with given ||| web	count=1
function	modules and top-level ||| modules	count=1
module_class	the [class_2] ||| [module_1] httpconnection [class_2] put connection key connection	count=4
function	children that match ||| children	count=1
arg	to refer ||| autologin username password	count=1
arg	deferred after a ||| deferred	count=1
arg	@param user the ||| user channel	count=1
function_arg	[function_1] mbox a ||| [arg_2] [function_1]	count=1
function	[function_1] entity ||| [function_1] [function_2]	count=2
function	the object it is ||| get deprecated	count=1
module	this ||| mail	count=2
function	[function_1] chat ||| [function_1] [function_2]	count=2
module	use ||| cred	count=1
module	called when [module] other side ||| [module]	count=1
arg	test ||| test	count=2
function	unicode for ||| unicode	count=1
function	expressed ||| waiters	count=1
class	remote [class_2] ||| [class_1] [class_2]	count=1
module	initialization ||| protocols	count=1
function	channel request if ||| channel request	count=2
function	child with the ||| child with	count=2
function_arg	with the xml ||| with stream xs	count=2
module	a ||| words protocols jabber	count=2
function	the global reactor ||| reactor	count=1
module	connection to the ||| protocols	count=1
class	a new protocol ||| box protocol	count=1
function	from the message body ||| received	count=1
function	mac [function_2] ||| [function_2] [function_1]	count=1
class	mailbox ||| list mailbox	count=2
function	server connection from the ||| client connection	count=1
function	l{servicemanager}, ||| service manager	count=2
module	sent to the ||| conch ssh	count=1
class	a zip ||| zip	count=1
module_class	line this [class_2] ||| [module_1] [class_2]	count=2
function	uidl response ||| uidlist response	count=1
class	whether this port may ||| port	count=2
function	[function_1] endpoint from ||| [function_2] [function_1]	count=7
class	authentication ||| sshuser auth client	count=2
function	list of xhdr data ||| xhdr	count=1
class	i{chunked} ||| transfer	count=1
function_arg	[function_1] that c{deferred} ||| [function_1] result [arg_2]	count=1
function_arg	info [arg_2] ||| [function_1] [arg_2]	count=1
function	compute ||| key	count=1
module	and ||| words	count=1
module	called when [module_2] ||| [module_1] [module_2]	count=17
module_class	[module_1] body ||| [module_1] [class_2] raw	count=1
module	xml ||| jabber	count=1
function_arg	leaves [arg_2] ||| [arg_2] [function_1]	count=1
function	convert an object ||| jelly to	count=1
function_arg	[function_1] c{message} ||| [function_1] [arg_2]	count=3
module	particular positioning attribute ||| positioning	count=1
function	receive a msg_kex_dh_gex_request message ||| ssh kex dh gex request	count=1
function	with some polite text ||| replacement	count=1
function	return the uid of ||| get uid	count=1
function	xhdr data ||| xhdr	count=1
function	anonymous ||| anonymous	count=1
function_arg	currently selected [arg_2] ||| [function_1] body [arg_2]	count=2
arg	then disconnect the protocol ||| protocol	count=1
class	leaf resource for ||| iresource	count=1
function_arg	[function_1] byte string ||| [arg_2] [function_1]	count=1
function	[function_1] connection and ||| [function_1] [function_2]	count=1
function	unless l{privilegedstartservice} got ||| service	count=1
function	lookup ||| lookup	count=20
function	the authentication chain if ||| auth	count=1
function	disconnect callbacks ||| on disconnect	count=1
function_arg	[function_1] cacerts ||| [arg_2] [function_1]	count=1
function	disconnect ||| notify on disconnect	count=1
arg	a unique id ||| site uid reactor	count=1
function	a data directory ||| data directory	count=2
class	a fixed ||| fixed	count=1
function	print a [function_2] ||| [function_1] detailed [function_2]	count=2
function	match ||| match	count=2
class	display ||| python	count=1
function	a process and create ||| create	count=1
arg	a string [arg] ||| [arg]	count=1
function	the payload of ||| payload	count=1
function_arg	[function_1] newtopic ||| [function_1] user channel [arg_2]	count=1
function	internal initialize ||| init	count=1
function	certificates to ||| to	count=1
class	implement [class] ||| [class]	count=3
class	on the endpoint ||| stream server endpoint	count=1
function_arg	@param filename ||| init filename	count=1
arg	c{cas} value matches ||| val cas flags	count=1
function	if any ||| deprecated	count=1
function	if possible and render ||| render	count=1
function	send an ||| send box	count=1
function	string containing a ||| string	count=1
function_arg	[function_1] payload ||| [function_1] [arg_2]	count=4
function_arg	[function_1] client protocol ||| [function_1] unixdatagram address [arg_2]	count=1
function	an openssl cipher ||| from open sslcipher	count=1
arg	a query to ||| query	count=1
function	deliver any received ||| received	count=1
function	elements of ||| elements by tag name	count=1
class	this file ||| file	count=4
module_class	with [module_1] [class_2] ||| [module_1] [class_2]	count=2
arg	outgoing http ||| k v expires domain	count=1
arg	(af_unix/sock_stream) stream endpoint ||| factory address mode backlog	count=1
class	destination ||| alias	count=1
function	working directory ||| working directory	count=2
class	if the test is ||| test case	count=1
arg	ampprotocol the communication ||| ampprotocol	count=1
function	a header is ||| header	count=1
arg	the name ||| name	count=3
module	build the [module] instance passing ||| [module]	count=1
arg	a l{localworkeramp} instance iterating ||| result testcases cooperate	count=1
function	add certificate-authority certificates ||| add	count=1
module	the response to this ||| web	count=1
module	document with the ||| web	count=1
class	remove ||| posix reactor base	count=1
module	retrieve the ||| mail	count=1
function	suitable for joining to ||| coerce to filesystem encoding	count=1
module_class	to the protocol ||| conch command	count=3
function	of responding ||| respond	count=1
arg	key to ||| key value	count=1
class	@see ||| h2stream	count=1
arg	the credentials ||| credentials	count=3
function	necessary metadata to ||| to	count=1
function	l{secondaryauthorityservice} [function_1] [function_2] ||| names secondary authority service [function_1] [function_2]	count=18
class	other side ||| sshconnection	count=3
arg	given path ||| path	count=2
function_arg	sanity of [arg_2] ||| [arg_2] [function_1]	count=1
arg	a list ||| list	count=1
function	running process corresponding ||| running	count=1
arg	given public key ||| publickey signdata	count=1
function	server endpoint into structured ||| parse server	count=1
module	at the given ||| web	count=1
function	getattr method to ||| getattr	count=1
arg	is ||| protocol	count=2
arg	suffix ||| suffix	count=1
class	calls ||| maildir name	count=1
function	makes doc chunks ||| doc make chunks	count=1
arg	hostname see ||| hostname ttl	count=2
function	resolver ||| install resolver	count=1
arg	request but use the ||| request	count=1
class	structure object ||| singlepart message structure	count=1
function	out ||| timeout	count=1
class	intended ||| maildir	count=1
function	an l{ipv4address} ||| get	count=1
module	port to local ||| conch scripts	count=2
function	and create a ||| create	count=1
module	skip the next ||| internet	count=1
function	retrieve a [function_2] ||| [function_2] [function_1]	count=3
function	service from this ||| get service	count=1
function	a request ||| request	count=4
arg	context using this pidfile ||| exctype excvalue traceback	count=1
function	http date string ||| string	count=1
arg	specified strport string ||| jid password strport	count=1
arg	alias of ||| memo	count=1
arg	print ||| message	count=1
class	and ||| key database	count=1
function	command queue or ||| command queue	count=2
function	via amp ||| call	count=1
module	dispatch [module] an ||| [module]	count=1
arg	c{obj} ||| obj name	count=1
arg	send the topic to ||| channel topic author	count=1
module	[module_1] port to ||| [module_1] [module_2]	count=2
function	to post ||| post	count=1
arg	values [arg] query ||| [arg]	count=1
arg	given fd filtering ||| fd	count=1
arg	and a queue to ||| queue	count=1
function	get the [function_2] ||| irequest [function_1] request [function_2]	count=4
class	[class_1] entry ||| [class_2] [class_1]	count=3
class	[class_1] any and ||| [class_2] [class_1]	count=2
class	of a ||| digest	count=1
class	l{logpublisher} ||| log publisher	count=2
function	a log prefix ||| log prefix	count=1
function	erase ||| erase	count=1
function	decorators ||| get	count=1
class	the given configuration ||| unix app logger	count=1
arg	argument schema ||| objects proto	count=1
arg	pattern ||| pattern	count=1
function_arg	[function_1] signed with ||| [arg_2] [function_1]	count=4
function	response to ||| response from	count=2
function	the client ||| client	count=2
function	disable ||| disable	count=1
function	as waiting to ||| waiting	count=1
module	the initialization ||| protocols	count=1
class	path ||| abstract file path	count=2
function	a string to a ||| from string	count=1
function	bcc address matching the ||| bcc	count=1
function	ciphers ||| select ciphers	count=1
module	when the [module_2] ||| [module_1] [module_2]	count=2
function_arg	[function_1] event dict ||| [function_1] [arg_2]	count=1
function	encode a key ||| encode	count=1
class	speed that this object ||| speed	count=1
function	pipe ||| broken pipe behavior	count=1
module	the same ||| conch ssh	count=1
class	this ||| maildir name generator	count=1
function	after the connection ||| connection	count=2
class	this [class] ||| [class]	count=4
function	string representation of the ||| repr	count=2
arg	to the reporter ||| testname error	count=1
function	number of calls which ||| with count	count=1
function	as the response ||| response	count=2
function_arg	[function_1] data from ||| [function_1] [arg_2]	count=3
class	a random ||| digest credential	count=1
function	[function_1] the protocol ||| [function_1] [function_2]	count=1
module	forward local [module_2] ||| [module_1] [module_2]	count=1
function	public key ||| publickey	count=2
arg	private generates ||| portcmd	count=1
arg	default ||| default	count=1
module	and setup authentication ||| words protocols jabber	count=1
function	if loopback mode is ||| loopback mode	count=1
function	deferred has been canceled ||| cancel	count=1
function	polite text exhorting the ||| get replacement	count=1
function	stream server ||| stream server	count=2
arg	from a channel ||| channel kicker	count=1
module_class	[module_1] and ||| [module_1] [class_2]	count=6
module_class	[module_1] this domain ||| [module_1] [class_2]	count=2
class	to [class_2] ||| [class_2] [class_1]	count=2
function	help ||| opt help	count=2
function	[function_1] type may ||| [function_2] [function_1]	count=2
arg	c{thingwithdoc} ||| thingwithdoc texttoappend	count=1
function	share ||| kex dh gex	count=1
class	all domain [class_2] ||| [class_1] [class_2]	count=1
function_arg	its [arg_2] ||| [arg_2] [function_1]	count=1
module	element has ||| xish	count=2
arg	connects a ||| protocol maxpacketsize mode	count=1
function	object for later ||| for	count=1
function	child ||| child with	count=1
module	or an ||| trial	count=1
class	l{irenderable} ||| element	count=1
module	public key ask the ||| conch	count=1
module_class	[module_1] underlying connection ||| [module_1] [class_2]	count=2
arg	child resource ||| path child	count=1
function_arg	create an [arg_2] ||| [arg_2] [function_1]	count=1
arg	message sizes into a ||| msgs getuidl	count=1
function	busy workers as expressed ||| working	count=1
function	words trust [function] root ||| [function]	count=1
class	when this task ||| cooperative task	count=1
function	exit a ||| exit	count=1
arg	[arg_1] strings ||| [arg_2] [arg_1]	count=2
function	key exchange [function_2] ||| [function_1] [function_2]	count=1
function	of protocol ||| protocol	count=1
arg	directory is ||| directory	count=1
class	it using ||| resolver	count=1
function	if [function] cannot ||| [function]	count=1
function	command queue or none ||| command queue	count=1
module	via amp invoke it ||| protocols	count=1
function	create the [function_2] ||| [function_2] [function_1]	count=1
arg	object c{classobj}, returns a ||| classobj	count=1
arg	a client protocol ||| protocol maxpacketsize	count=1
class	of c{key} by ||| mem cache protocol	count=2
arg	the opaque and nonce ||| nonce clientip	count=1
class	reboots ||| name generator	count=1
function	instance of pythonmodule pythonattribute ||| name	count=1
function	current ||| clean current	count=1
function	a chunk ||| receive data chunk	count=1
class	[class_1] is listening ||| [class_2] [class_1]	count=6
class	use as ||| digest credential factory	count=1
function	consuming the payload of ||| payload	count=1
arg	a c{regexp} search ||| text regex msg	count=1
