core		_determinePickleModule		determine which 'pickle' api module to use
core		getCache	module	compute all the possible loadable plugins while loading as few as possible and hitting the filesystem as little as possible
core		getPlugins	interface package	retrieve all plugins implementing the given interface beneath the given module
core		pluginPackagePaths	name	return a list of additional directories which should be searched for modules to be included as part of the named plugin package
news	INewsStorage	listRequest		returns a deferred whose callback will be passed a list of 4-tuples
news	INewsStorage	subscriptionRequest		returns a deferred whose callback will be passed the list of
news	INewsStorage	postRequest	message	returns a deferred whose callback will be invoked if 'message' is successfully posted to one or more specified groups and
news	INewsStorage	overviewRequest		returns a deferred whose callback will be passed the a list of headers describing this server's overview format
news	INewsStorage	xoverRequest	group low high	returns a deferred whose callback will be passed a list of xover headers for the given group over the given range
news	INewsStorage	xhdrRequest	group low high header	returns a deferred whose callback will be passed a list of xhdr data for the given group over the given range
news	INewsStorage	listGroupRequest	group	returns a deferred whose callback will be passed a two-tuple of
news	INewsStorage	groupRequest	group	returns a deferred whose callback will be passed a five-tuple of
news	INewsStorage	articleExistsRequest	id	returns a deferred whose callback will be passed with a true value if a message with the specified message-id exists in the database
news	INewsStorage	articleRequest	group index id	returns a deferred whose callback will be passed a file-like object containing the full article text headers and body for the article
news	INewsStorage	headRequest	group index	returns a deferred whose callback will be passed the header for the article of the specified index in the specified group and
news	INewsStorage	bodyRequest	group index	returns a deferred whose callback will be passed the body for the article of the specified index in the specified group and
news	_ModerationMixin	notifyModerators	moderators article	send an article to a list of group moderators to be moderated
news	PickleStorage	__init__	filename groups moderators mailhost	@param mailhost a c{str} giving the mail exchange host which will accept moderation emails from this server
news	PickleStorage	listRequest		returns a list of 4-tuples name max index min index flags
news	NewsShelf	__init__	mailhost path sender	@param mailhost a c{str} giving the mail exchange host which will accept moderation emails from this server
news	NewsShelf	notifyModerator	moderator article	notify a single moderator about an article requiring moderation
news	Options	opt_group	group	the name of a newsgroup to carry
news	Options	opt_moderator	moderator	the email of the moderator for the most recently passed group
news	Options	opt_subscription	group	a newsgroup to list as a recommended subscription
news	Options	opt_server	server	the address of a usenet server to pass messages to and receive messages from
news	NNTPClient	gotAllGroups	groups	override for notification when fetchgroups() action is completed
news	NNTPClient	getAllGroupsFailed	error	override for notification when fetchgroups() action fails
news	NNTPClient	gotOverview	overview	override for notification when fetchoverview() action is completed
news	NNTPClient	getOverviewFailed	error	override for notification when fetchoverview() action fails
news	NNTPClient	gotSubscriptions	subscriptions	override for notification when fetchsubscriptions() action is completed
news	NNTPClient	getSubscriptionsFailed	error	override for notification when fetchsubscriptions() action fails
news	NNTPClient	gotGroup	group	override for notification when fetchgroup() action is completed
news	NNTPClient	getGroupFailed	error	override for notification when fetchgroup() action fails
news	NNTPClient	gotArticle	article	override for notification when fetcharticle() action is completed
news	NNTPClient	getArticleFailed	error	override for notification when fetcharticle() action fails
news	NNTPClient	gotHead	head	override for notification when fetchhead() action is completed
news	NNTPClient	getHeadFailed	error	override for notification when fetchhead() action fails
news	NNTPClient	gotBody	info	override for notification when fetchbody() action is completed
news	NNTPClient	getBodyFailed	body	override for notification when fetchbody() action fails
news	NNTPClient	postedOk		override for notification when postarticle() action is successful
news	NNTPClient	postFailed	error	override for notification when postarticle() action fails
news	NNTPClient	gotXHeader	headers	override for notification when getxheader() action is successful
news	NNTPClient	getXHeaderFailed	error	override for notification when getxheader() action fails
news	NNTPClient	gotNewNews	news	override for notification when getnewnews() action is successful
news	NNTPClient	getNewNewsFailed	error	override for notification when getnewnews() action fails
news	NNTPClient	gotNewGroups	groups	override for notification when getnewgroups() action is successful
news	NNTPClient	getNewGroupsFailed	error	override for notification when getnewgroups() action fails
news	NNTPClient	setStreamSuccess		override for notification when setstream() action is successful
news	NNTPClient	setStreamFailed	error	override for notification when setstream() action fails
news	NNTPClient	fetchGroups		request a list of all news groups from the server gotallgroups()
news	NNTPClient	fetchOverview		request the overview format from the server gotoverview() is called
news	NNTPClient	fetchSubscriptions		request a list of the groups it is recommended a new user subscribe to
news	NNTPClient	fetchGroup	group	get group information for the specified group from the server gotgroup()
news	NNTPClient	fetchHead	index	get the header for the specified article (or the currently selected article if index is '') from the server
news	NNTPClient	fetchBody	index	get the body for the specified article (or the currently selected article if index is '') from the server
news	NNTPClient	fetchArticle	index	get the complete article with the specified index (or the currently selected article if index is '') or message-id from the server
news	NNTPClient	postArticle	text	attempt to post an article with the specified text to the server 'text'
news	NNTPClient	fetchNewNews	groups date distributions	get the message-ids for all new news posted to any of the given groups since the specified date - in seconds since the epoch gmt -
news	NNTPClient	fetchNewGroups	date distributions	get the names of all new groups created/added to the server since the specified date - in seconds since the ecpoh gmt - optionally
news	NNTPClient	fetchXHeader	header low high id	request a specific header from the server for an article or range of articles
news	NNTPClient	setStream		set the mode to stream suspending the normal "lock-step" mode of communications
news	NNTPServer	do_XROVER	range	handle a request for references of all messages in the currently selected group
news	UsenetClientProtocol	__init__	groups date storage	fetch all new articles from the given groups since the given date and dump them into the given storage
spread	IPBRoot	rootObject	broker	return root referenceable for broker
spread	Serializable	processUniqueID		return an id which uniquely represents this object for this process
spread	Referenceable	remoteMessageReceived	broker message args kw	a remote message has been received dispatch it appropriately
spread	Referenceable	jellyFor	jellier	internal return a tuple which will be used as the s-expression to
spread	Root	rootObject	broker	a factory is requesting to publish me as a root object
spread	ViewPoint	__init__	perspective object	initialize me with a perspective and an object
spread	ViewPoint	processUniqueID		return an id unique to a proxy for this perspective+object combination
spread	ViewPoint	remoteMessageReceived	broker message args kw	a remote message has been received dispatch it appropriately
spread	Viewable	jellyFor	jellier	serialize a l{viewpoint} for me and the perspective of the given broker
spread	Copyable	getStateToCopy		gather state to send when i am serialized for a peer
spread	Copyable	getStateToCopyFor	perspective	gather state to send when i am serialized for a particular perspective
spread	Copyable	getTypeToCopy		determine what type tag to send for me
spread	Copyable	getTypeToCopyFor	perspective	determine what type tag to send for me
spread	Copyable	jellyFor	jellier	assemble type tag and state to copy for this broker
spread	Cacheable	getStateToCacheAndObserveFor	perspective observer	get state to cache on the client and client-cache reference to observe locally
spread	Cacheable	jellyFor	jellier	return an appropriate tuple to serialize me
spread	Cacheable	stoppedObserving	perspective observer	this method is called when a client has stopped observing me
spread	RemoteCopy	setCopyableState	state	i will be invoked with the state to copy locally
spread	RemoteCache	remoteMessageReceived	broker message args kw	a remote message has been received dispatch it appropriately
spread	RemoteCache	jellyFor	jellier	serialize me (only for the broker i'm for) as the original cached reference
spread	RemoteCache	__cmp__	other	compare me [to another remotecache
spread	RemoteCache	__del__		do distributed reference counting on finalize
spread	RemoteCache	_borgify		create a new object that shares its state (i e its c{__dict__}) and
spread	RemoteCacheMethod	__call__		internal action method
spread	RemoteCacheObserver	__init__	broker cached perspective	internal initialize me
spread	RemoteCacheObserver	__hash__		generate a hash unique to all l{remotecacheobserver}s for this broker/perspective/cached triplet
spread	RemoteCacheObserver	__cmp__	other	compare me to another l{remotecacheobserver}
spread	RemoteCacheObserver	callRemote	_name	internal action method
spread	RemoteCacheObserver	remoteMethod	key	get a l{pb remotemethod} for this key
spread	LocalAsRemote	callRemote	name	call a specially-designated local method
spread	Pager	__init__	collector callback	create a pager with a reference to a remote collector and an optional callable to invoke upon completion
spread	Pager	stillPaging		internal method called by broker
spread	Pager	sendNextPage		internal method called by broker
spread	Pager	nextPage		override this to return an object to be sent to my collector
spread	Pager	stopPaging		call this when you're done paging
spread	FilePager	sendNextPage		get the first chunk read and send it to collector
spread		getAllPages	referenceable methodName	a utility method that will call a remote method which expects a pagecollector as the first argument
spread		_createBlank	cls	given an object if that object is a type or a legacy old-style class return a new blank instance of that type which has not had c{__init__}
spread		_newInstance	cls state	make a new instance of a class without calling its __init__ method
spread		setUnjellyableForClass	classname unjellyable	set which local class will represent a remote type
spread		setUnjellyableFactoryForClass	classname copyFactory	set the factory to construct a remote instance of a type : jellier
spread		setUnjellyableForClassTree	module baseClass prefix	set all classes in a module derived from c{baseclass} as copiers for a corresponding remote class
spread		getInstanceState	inst jellier	utility method to default to 'normal' state rules in serialization
spread		setInstanceState	inst unjellier jellyList	utility method to default to 'normal' state rules in unserialization
spread	Unpersistable	__init__	reason	initialize an unpersistable object with a descriptive c{reason} string
spread	Jellyable	jellyFor	jellier	@see l{twisted spread interfaces ijellyable jellyfor}
spread	Unjellyable	unjellyFor	unjellier jellyList	perform the inverse operation of l{jellyable jellyfor}
spread	_Jellier	_cook	object	internal backreference an object
spread	_Jellier	prepare	object	internal create a list for persisting an object to this will allow
spread	_Jellier	preserve	object sexp	internal mark an object's persistent list for later referral
spread	_Jellier	_jellyIterable	atom obj	jelly an iterable object
spread	_Jellier	jelly_decimal	d	jelly a decimal object
spread	_Jellier	unpersistable	reason sxp	internal returns an sexp (unpersistable "reason") utility method
spread	_Unjellier	_maybePostUnjelly	unjellied	if the given object has support for the c{postunjelly} hook set it up to be called at the end of deserialization
spread	_Unjellier	_genericUnjelly	cls state	unjelly a type for which no specific unjellier is registered but which is nonetheless allowed
spread	_Unjellier	_unjelly_decimal	exp	unjelly decimal objects
spread	_Unjellier	_unjellySetOrFrozenset	lst containerType	helper method to unjelly set or frozenset
spread	_Unjellier	_unjelly_set	lst	unjelly set using the c{set} builtin
spread	_Unjellier	_unjelly_frozenset	lst	unjelly frozenset using the c{frozenset} builtin
spread	_Unjellier	_unjelly_instance	rest	internal unjelly an instance
spread	_Unjellier	_unjelly_method	rest	internal unjelly a method
spread	DummySecurityOptions	isModuleAllowed	moduleName	dummysecurityoptions ismoduleallowed modulename -> boolean
spread	DummySecurityOptions	isClassAllowed	klass	dummysecurityoptions isclassallowed class -> boolean
spread	DummySecurityOptions	isTypeAllowed	typeName	dummysecurityoptions istypeallowed typename -> boolean
spread	SecurityOptions	allowBasicTypes		allow all basic' types (dictionary and list int string and float
spread	SecurityOptions	allowTypes		securityoptions allowtypes typestring : allow a particular type by its
spread	SecurityOptions	allowInstancesOf		securityoptions allowinstances klass klass : allow instances
spread	SecurityOptions	allowModules		securityoptions allowmodules module module : allow modules by
spread	SecurityOptions	isModuleAllowed	moduleName	securityoptions ismoduleallowed modulename -> boolean
spread	SecurityOptions	isClassAllowed	klass	securityoptions isclassallowed class -> boolean
spread	SecurityOptions	isTypeAllowed	typeName	securityoptions istypeallowed typename -> boolean
spread		jelly	object taster persistentStore invoker	serialize to s-expression
spread		unjelly	sexp taster persistentLoad invoker	unserialize from s-expression
spread		b1282int	st	convert an integer represented as a base 128 string into an l{int} or l{long}
spread		setPrefixLimit	limit	set the limit on the prefix length for all banana connections established after this call
spread	Banana	setPrefixLimit	limit	set the prefix limit for decoding done by this protocol instance
spread	Banana	connectionReady		surrogate for connectionmade called after protocol negotiation
spread	Banana	expressionReceived	lst	called when an expression list string or int is received
spread	Banana	sendEncoded	obj	send the encoded representation of the given object @param obj an object to encode and send
spread		encode	lst	encode a list s-expression
spread		decode	st	decode a banana-encoded string
spread	IJellyable	jellyFor	jellier	jelly myself for jellier
spread	IUnjellyable	unjellyFor	jellier jellyList	unjelly myself for the jellier
spread	RemoteMethod	__init__	obj name	initialize with a l{remotereference} and the name of this message
spread	RemoteMethod	__call__		asynchronously invoke a remote method
spread	IPerspective	perspectiveMessageReceived	broker message args kwargs	this method is called when a network message is received
spread	Avatar	perspectiveMessageReceived	broker message args kw	this method is called when a network message is received
spread	RemoteReference	__init__	perspective broker luid doRefCount	internal initialize me with a broker and a locally-unique id
spread	RemoteReference	notifyOnDisconnect	callback	register a callback to be called if our broker gets disconnected
spread	RemoteReference	dontNotifyOnDisconnect	callback	remove a callback that was registered with notifyondisconnect
spread	RemoteReference	_disconnected		called if we are disconnected and have callbacks registered
spread	RemoteReference	jellyFor	jellier	if i am being sent back to where i came from serialize as a local backreference
spread	RemoteReference	callRemote	_name	asynchronously invoke a remote method
spread	RemoteReference	remoteMethod	key	@param key the key
spread	RemoteReference	__cmp__	other	@param other another l{remotereference} to compare me to
spread	RemoteReference	__del__		do distributed reference counting on finalization
spread	Local	incref		increment the reference count
spread	Local	decref		decrement the reference count
spread	CopyableFailure	getStateToCopy		collect state related to the exception which occurred discarding state which cannot reasonably be serialized
spread	CopiedFailure	throwExceptionIntoGenerator	g	throw the original exception into the given generator preserving traceback information if available
spread	Broker	resumeProducing		called when the consumer attached to me runs out of buffer
spread	Broker	expressionReceived	sexp	evaluate an expression as it's received
spread	Broker	proto_version	vnum	protocol message version version-number check to make sure that both ends of the protocol are speaking
spread	Broker	sendCall		utility method to send an expression to the other side of the connection
spread	Broker	proto_didNotUnderstand	command	respond to stock 'c{didnotunderstand}' message
spread	Broker	connectionReady		initialize called after banana negotiation is done
spread	Broker	connectionLost	reason	the connection was lost
spread	Broker	notifyOnDisconnect	notifier	@param notifier callback to call when the broker disconnects
spread	Broker	notifyOnFail	notifier	@param notifier callback to call if the broker fails to connect
spread	Broker	notifyOnConnect	notifier	@param notifier callback to call when the broker connects
spread	Broker	dontNotifyOnDisconnect	notifier	@param notifier callback to remove from list of disconnect callbacks
spread	Broker	localObjectForID	luid	get a local object for a locally unique id
spread	Broker	registerReference	object	store a persistent reference to a local object and map its id() to a generated session-unique id
spread	Broker	setNameForLocal	name object	store a special string id for this object
spread	Broker	remoteForName	name	returns an object from the remote name mapping
spread	Broker	cachedRemotelyAs	instance incref	@param instance the instance to look up
spread	Broker	remotelyCachedForLUID	luid	@param luid the luid to look up
spread	Broker	cacheRemotely	instance	xxx @return a new luid
spread	Broker	cacheLocally	cid instance	internal store a non-filled-out cached instance locally
spread	Broker	serialize	object perspective method args	jelly an object according to the remote security rules for this broker
spread	Broker	unserialize	sexp perspective	unjelly an sexp according to the local security rules for this broker
spread	Broker	newLocalID		@return a newly generated luid
spread	Broker	newRequestID		@return a newly generated request id
spread	Broker	_recvMessage	findObjMethod requestID objectID message	received a message-send
spread	Broker	_sendAnswer	netResult requestID	internal send an answer to a previously sent message
spread	Broker	proto_answer	requestID netResult	internal got an answer to a previously sent message
spread	Broker	_sendFailureOrError	fail requestID	call l{_senderror} or l{_sendfailure}, depending on whether c{fail} represents an l{error} subclass or not
spread	Broker	_sendFailure	fail requestID	log error and then send it
spread	Broker	_sendError	fail requestID	internal send an error for a previously sent message
spread	Broker	proto_error	requestID fail	internal deal with an error
spread	Broker	sendDecRef	objectID	internal send a decref directive
spread	Broker	proto_decref	objectID	internal decrement the reference count of an object
spread	Broker	decCacheRef	objectID	internal send a decache directive
spread	Broker	proto_decache	objectID	internal decrement the reference count of a cached object
spread	Broker	proto_uncache	objectID	internal tell the client it is now ok to uncache an object
spread		respond	challenge password	respond to a challenge
spread		challenge		@return some random data
spread	PBClientFactory	__init__	unsafeTracebacks security	@param unsafetracebacks if set tracebacks for exceptions will be sent over the wire
spread	PBClientFactory	buildProtocol	addr	build the broker instance passing the security options to it
spread	PBClientFactory	clientConnectionLost	connector reason reconnecting	reconnecting subclasses should call with reconnecting=1
spread	PBClientFactory	getRootObject		get root object of remote pb server
spread	PBClientFactory	disconnect		if the factory is connected close the connection
spread	PBClientFactory	_cbLoginAnonymous	root client	attempt an anonymous login on the given remote root object
spread	PBClientFactory	login	credentials client	login and get perspective from remote pb server
spread	PBServerFactory	__init__	root unsafeTracebacks security	@param root factory providing the root referenceable used by the broker
spread	PBServerFactory	buildProtocol	addr	return a broker attached to the factory as the service provider
spread	IUsernameMD5Password	checkPassword	password	validate these credentials against the correct password
spread	IUsernameMD5Password	checkMD5Password	password	validate these credentials against the correct md5 digest of the password
spread	_JellyableAvatarMixin	_cbLogin	result	ensure that the avatar to be returned to the client is jellyable and set up disconnection notification to call the realm's logout object
spread	_PortalWrapper	remote_login	username	start of username/password login
spread	_PortalWrapper	remote_loginAnonymous	mind	attempt an anonymous login
spread	_PortalAuthChallenger	checkPassword	password	l{iusernamehashedpassword} @param password the password
spread	_PortalAuthChallenger	checkMD5Password	md5Password	l{iusernamemd5password} @param md5password
spread	Publishable	republish		set the timestamp to current and todo update all observers
spread	Publishable	getStateToPublishFor	perspective	implement me to special-case your state for a perspective
spread	Publishable	getStateToPublish		implement me to return state to copy as part of the publish phase
spread	Publishable	getStateToCacheAndObserveFor	perspective observer	get all necessary metadata to keep a clientside cache
spread	RemotePublished	activated		implement this method if you want to be notified when your publishable subclass is activated
spread	RemotePublished	callWhenActivated	callback	externally register for notification when this publishable has received all relevant data
spread		whenReady	d	wrap a deferred returned from a pb method in another deferred that expects a remotepublished as a result
enterprise	ConnectionPool	__init__	dbapiName	create a new l{connectionpool}
enterprise	ConnectionPool	start		start the connection pool
enterprise	ConnectionPool	runWithConnection	func	execute a function with a database connection and return the result
enterprise	ConnectionPool	runInteraction	interaction	interact with the database and return the result
enterprise	ConnectionPool	runQuery		execute an sql query and return the result
enterprise	ConnectionPool	runOperation		execute an sql query and return l{none}
enterprise	ConnectionPool	close		close all pool connections and shutdown the pool
enterprise	ConnectionPool	finalClose		this should only be called by the shutdown trigger
enterprise	ConnectionPool	connect		return a database connection when one becomes available
enterprise	ConnectionPool	disconnect	conn	disconnect a database connection associated with this pool
plugins	FileCheckerFactory	generateChecker	argstring	this checker factory expects to get the location of a file
plugins	UNIXCheckerFactory	generateChecker	argstring	this checker factory ignores the argument string everything
plugins	InMemoryCheckerFactory	generateChecker	argstring	this checker factory expects to get a list of username password pairs with each pair also separated by a
names		randomSource		wrapper around l{twisted python randbytes randomfactory securerandom} to return
names		_nameToLabels	name	split a domain name into its constituent labels
names		_isSubdomainOf	descendantName ancestorName	test whether c{descendantname} is equal to or is a i{subdomain} of c{ancestorname}
names		str2time	s	parse a string description of an interval into an integer number of seconds
names	IEncodable	encode	strio compDict	write a representation of this object to the given file object
names	IEncodable	decode	strio length	reconstruct an object from data read from the given file object
names	Charstr	encode	strio compDict	encode this character string into the appropriate byte format
names	Charstr	decode	strio length	decode a byte string into this charstr
names	Charstr	__str__		represent this l{charstr} instance by its string value
names	Name	__init__	name	@param name a name
names	Name	encode	strio compDict	encode this name into the appropriate byte format
names	Name	decode	strio length	decode a byte string into this name
names	Name	__str__		represent this l{name} instance by its string name
names	Query	__init__	name type cls	@type name l{bytes} or l{unicode} @param name see l{query
names	_OPTHeader	__init__	udpPayloadSize extendedRCODE version dnssecOK	@type udppayloadsize l{int} @param payload the number of octets of the largest udp
names	_OPTHeader	name		a readonly property for accessing the c{name} attribute of this record
names	_OPTHeader	type		a readonly property for accessing the c{type} attribute of this record
names	_OPTHeader	encode	strio compDict	encode this l{_optheader} instance to bytes
names	_OPTHeader	decode	strio length	decode bytes into an l{_optheader} instance
names	_OPTHeader	fromRRHeader	cls rrHeader	a classmethod for constructing a new l{_optheader} from the attributes and payload of an existing l{rrheader} instance
names	_OPTVariableOption	__init__	code data	@type code l{int}
names	_OPTVariableOption	encode	strio compDict	encode this l{_optvariableoption} to bytes
names	_OPTVariableOption	decode	strio length	decode bytes into an l{_optvariableoption} instance
names	RRHeader	__init__	name type cls ttl	@type name l{bytes} or l{unicode} @param name see l{rrheader
names	SimpleRecord	__init__	name ttl	@param name see l{simplerecord name}
names	Record_A	__init__	address ttl	@type address l{bytes} or l{unicode} @param address the ipv4 address associated with this record in
names	Record_SOA	__init__	mname rname serial refresh	@param mname see l{record_soa mname}
names	Record_WKS	__init__	address protocol map ttl	@type address l{bytes} or l{unicode} @param address the ipv4 address associated with this record in
names	Record_AAAA	__init__	address ttl	@type address l{bytes} or l{unicode} @param address the ipv6 address for this host in rfc 2373 format
names	Record_A6	__init__	prefixLen suffix prefix ttl	@param suffix an ipv6 address suffix in in rfc 2373 format
names	Record_SRV	__init__	priority weight port target	@param target see l{record_srv target}
names	Record_NAPTR	__init__	order preference flags service	@param replacement see l{record_naptr replacement}
names	Record_AFSDB	__init__	subtype hostname ttl	@param hostname see l{record_afsdb hostname}
names	Record_RP	__init__	mbox txt ttl	@param mbox see l{record_rp mbox}
names	Record_MINFO	__init__	rmailbx emailbx ttl	@param rmailbx see l{record_minfo rmailbx}
names	Record_MX	__init__	preference name ttl	@param name see l{record_mx name}
names	UnknownRecord	encode	strio compDict	write the raw bytes corresponding to this record's payload to the stream
names	UnknownRecord	decode	strio length	load the bytes which are part of this record from the stream and store them unparsed and unmodified
names		_responseFromMessage	responseConstructor message	generate a l{message} like instance suitable for use as the response to c{message}
names		_getDisplayableArguments	obj alwaysShow fieldNames	inspect the function signature of c{obj}'s constructor and get a list of which arguments should be displayed
names		_compactRepr	obj alwaysShow flagNames fieldNames	return a l{str} representation of c{obj} which only shows fields with non-default values flags which are true and sections which have been
names	Message	__init__	id answer opCode recDes	@param id a 16 bit identifier assigned by the program that generates any kind of query
names	Message	__repr__		generate a repr of this l{message}
names	Message	addQuery	name type cls	add another query to this message
names	Message	lookupRecordType	type	retrieve the l{irecord} implementation for the given record type
names	Message	toStr		encode this l{message} into a byte string in the format described by rfc 1035
names	Message	fromStr	str	decode a byte string in the format described by rfc 1035 into this l{message}
names	_EDNSMessage	__init__	id answer opCode auth	construct a new l{_ednsmessage} @see u{rfc1035 section-4
names	_EDNSMessage	_toMessage		convert to a standard l{dns message}
names	_EDNSMessage	toStr		encode to wire format by first converting to a standard l{dns message}
names	_EDNSMessage	_fromMessage	cls message	construct and return a new l{_ednsmessage} whose attributes and records are derived from the attributes and records of c{message} (a l{message}
names	_EDNSMessage	fromStr	bytes	decode from wire format saving flags values and records to this l{_ednsmessage} instance in place
names	DNSMixin	pickID		return a unique id for queries
names	DNSMixin	callLater	period func	wrapper around reactor calllater mainly for test purpose
names	DNSMixin	_query	queries timeout id writeMessage	send out a message with the given queries
names	DNSMixin	_clearFailed	deferred id	clean the deferred after a timeout
names	DNSDatagramProtocol	stopProtocol		stop protocol reset state variables
names	DNSDatagramProtocol	startProtocol		upon start reset internal state
names	DNSDatagramProtocol	writeMessage	message address	send a message holding dns queries
names	DNSDatagramProtocol	datagramReceived	data addr	read a datagram extract the message in it and trigger the associated deferred
names	DNSDatagramProtocol	removeResend	id	mark message id as no longer having duplication suppression
names	DNSDatagramProtocol	query	address queries timeout id	send out a message with the given queries
names	DNSProtocol	writeMessage	message	send a message holding dns queries
names	DNSProtocol	connectionMade		connection is made reset internal state and notify the controller
names	DNSProtocol	connectionLost	reason	notify the controller that this protocol is no longer connected
names	DNSProtocol	query	queries timeout	send out a message with the given queries
names	DNSServerFactory	__init__	authorities caches clients verbose	@param authorities resolvers which provide authoritative answers
names	DNSServerFactory	_verboseLog		log a message only if verbose logging is enabled
names	DNSServerFactory	connectionMade	protocol	track a newly connected l{dnsprotocol}
names	DNSServerFactory	connectionLost	protocol	stop tracking a no-longer connected l{dnsprotocol}
names	DNSServerFactory	sendReply	protocol message address	send a response c{message} to a given c{address} via the supplied c{protocol}
names	DNSServerFactory	_responseFromMessage	message rCode answers authority	generate a l{message} instance suitable for use as the response to c{message}
names	DNSServerFactory	gotResolverResponse	response protocol message address	a callback used by l{dnsserverfactory handlequery} for handling the
names	DNSServerFactory	gotResolverError	failure protocol message address	a callback used by l{dnsserverfactory handlequery} for handling deferred
names	DNSServerFactory	handleQuery	message protocol address	called by l{dnsserverfactory messagereceived} when a query message is
names	DNSServerFactory	handleInverseQuery	message protocol address	called by l{dnsserverfactory messagereceived} when an inverse query
names	DNSServerFactory	handleStatus	message protocol address	called by l{dnsserverfactory messagereceived} when a status message is
names	DNSServerFactory	handleNotify	message protocol address	called by l{dnsserverfactory messagereceived} when a notify message is
names	DNSServerFactory	handleOther	message protocol address	called by l{dnsserverfactory messagereceived} when a message with
names	DNSServerFactory	messageReceived	message proto address	l{dnsserverfactory messagereceived} is called by protocols which are
names	DNSServerFactory	allowQuery	message protocol address	called by l{dnsserverfactory messagereceived} to decide whether to
names	ResolverChain	__init__	resolvers	@type resolvers l{list} @param resolvers a l{list} of l{iresolver} providers
names	ResolverChain	_lookup	name cls type timeout	build a l{dns query} for the given parameters and dispatch it
names	Resolver	__init__	hints maximumQueries reactor resolverFactory	@param hints a l{list} of l{str} giving the dotted quad representation of ip addresses of root servers at which to
names	Resolver	_roots		return a list of two-tuples representing the addresses of the root servers as defined by c{self
names	Resolver	_query	query servers timeout filter	issue one query and return a l{deferred} which fires with its response
names	Resolver	_lookup	name cls type timeout	implement name lookup by recursively discovering the authoritative server for the name and then asking it starting at one of the servers
names	Resolver	_discoverAuthority	query servers timeout queriesLeft	issue a query to a server and follow a delegation if necessary
names	Resolver	_discoveredAuthority	response query timeout queriesLeft	interpret the response to a query checking for error codes and following delegations if necessary
names		bootstrap	resolver resolverFactory	lookup the root nameserver addresses using the given resolver return a resolver which will eventually become a c{root
names	SerialNumber	__init__	number serialBits	construct an l{serialnumber} instance
names	SerialNumber	_convertOther	other	check that a foreign object is suitable for use in the comparison or arithmetic magic methods of this l{serialnumber} instance
names	SerialNumber	__str__		return a string representation of this l{serialnumber} instance
names	SerialNumber	__int__		@return the integer value of this l{serialnumber} instance
names	SerialNumber	__eq__	other	allow rich equality comparison with another l{serialnumber} instance
names	SerialNumber	__ne__	other	allow rich equality comparison with another l{serialnumber} instance
names	SerialNumber	__lt__	other	allow i{less than} comparison with another l{serialnumber} instance
names	SerialNumber	__gt__	other	allow i{greater than} comparison with another l{serialnumber} instance
names	SerialNumber	__le__	other	allow i{less than or equal} comparison with another l{serialnumber} instance
names	SerialNumber	__ge__	other	allow i{greater than or equal} comparison with another l{serialnumber} instance
names	SerialNumber	__add__	other	allow i{addition} with another l{serialnumber} instance
names	SerialNumber	__hash__		allow l{serialnumber} instances to be hashed for use as l{dict} keys
names	SerialNumber	fromRFC4034DateString	cls utcDateString	create an l{serialnumber} instance from a date string in format 'yyyymmddhhmmss' described in u{rfc4034
names	SerialNumber	toRFC4034DateString		calculate a date by treating the current l{serialnumber} value as a unix timestamp and return a date string in the format described in
names		getSerial	filename	return a monotonically increasing across program runs integer
names	FileAuthority	_additionalRecords	answer authority ttl	find locally known information that could be useful to the consumer of the response and construct appropriate records to include in the
names	FileAuthority	_lookup	name cls type timeout	determine a response to a particular dns query
names	BindAuthority	loadFile	filename	load records from c{filename}
names	BindAuthority	stripComments	lines	strip comments from c{lines}
names	BindAuthority	collapseContinuations	lines	transform multiline statements into single lines
names	BindAuthority	addRecord	owner ttl type domain	add a record to our authority expand domain with origin if necessary
names	BindAuthority	class_IN	ttl type domain rdata	simulate a class in and recurse into the actual class
names	BindAuthority	parseRecordLine	origin ttl line	parse a c{line} from a zone file respecting c{origin} and c{ttl}
names	ResolverBase	exceptionForCode	responseCode	convert a response code (one of the possible values of l{dns
names	SecondaryAuthorityService	__init__	primary domains	@param primary the ip address of the server from which to perform zone transfers
names	SecondaryAuthorityService	fromServerAddressAndDomains	cls serverAddress domains	construct a new l{secondaryauthorityservice} from a tuple giving a server address and a c{str} giving the name of a domain for which this
names	SecondaryAuthority	__init__	primaryIP domain	@param domain the domain for which this will be the secondary authority
names	SecondaryAuthority	fromServerAddressAndDomain	cls serverAddress domain	construct a new l{secondaryauthority} from a tuple giving a server address and a c{bytes} giving the name of a domain for which this is an
names	Resolver	__init__	resolv servers timeout reactor	construct a resolver which will query domain name servers listed in the c{resolv
names	Resolver	_openFile	path	wrapper used for opening files in the class exists primarily for unit testing purposes
names	Resolver	pickServer		return the address of a nameserver
names	Resolver	_connectedProtocol	interface	return a new l{dnsdatagramprotocol} bound to a randomly selected port number
names	Resolver	connectionMade	protocol	called by associated l{dns dnsprotocol} instances when they connect
names	Resolver	connectionLost	protocol	called by associated l{dns dnsprotocol} instances when they disconnect
names	Resolver	_query		get a new l{dnsdatagramprotocol} instance from l{_connectedprotocol}, issue a query to it using c{*args}, and arrange for it to be
names	Resolver	queryUDP	queries timeout	make a number of dns queries via udp
names	Resolver	queryTCP	queries timeout	make a number of dns queries via tcp
names	Resolver	filterAnswers	message	extract results from the given message
names	Resolver	_lookup	name cls type timeout	build a l{dns query} for the given parameters and dispatch it via udp
names	DNSClientFactory	clientConnectionFailed	connector reason	fail all pending tcp dns queries if the tcp connection attempt fails
names		createResolver	servers resolvconf hosts	create and return a resolver
names		getResolver		get a resolver instance
names		getHostByName	name timeout effort	resolve a name to a valid ipv4 or ipv6 address
names	Options	opt_pyzone	filename	specify the filename of a python syntax zone definition
names	Options	opt_bindzone	filename	specify the filename of a bind9 syntax zone definition
names	Options	opt_secondary	ip_domain	act as secondary for the specified domain performing
names	Options	opt_verbose		increment verbosity level
names		_buildResolvers	config	build dns resolver instances in an order which leaves recursive resolving as a last resort
names	SRVConnector	__init__	reactor service domain factory	@param domain the domain to connect to if passed as a unicode
names	SRVConnector	connect		start connection to remote server
names	SRVConnector	_ebServiceUnknown	failure	connect to the default port when the service name is unknown
names	SRVConnector	pickServer		pick the next server
names	SRVConnector	stopConnecting		stop attempting to connect
names	SRVConnector	disconnect		disconnect whatever our are state is
names	CacheResolver	cacheResult	query payload cacheTime	cache a dns entry
names		searchFileForAll	hostsFile name	search the given file which is in hosts 5 standard format for an address entry with a given name
names		searchFileFor	file name	grep given file which is in hosts 5 standard format for an address entry with a given name
names	Resolver	_aRecords	name	return a tuple of l{dns rrheader} instances for all of the ipv4
names	Resolver	_aaaaRecords	name	return a tuple of l{dns rrheader} instances for all of the ipv6
names	Resolver	_respond	name records	generate a response for the given name containing the given result records or a failure if there are no result records
names	Resolver	lookupAddress	name timeout	read any ipv4 addresses from c{self file} and return them as l{record_a}
names	Resolver	lookupIPV6Address	name timeout	read any ipv6 addresses from c{self file} and return them as
internet	_SocketWaker	wakeUp		send a byte to my connection
internet	_SocketWaker	doRead		read some data from my connection
internet	_FDWaker	doRead		read some bytes from the pipe and discard them
internet	_FDWaker	connectionLost	reason	close both ends of my pipe
internet	_UnixWaker	wakeUp		write one byte to the pipe and flush it
internet	_SIGCHLDWaker	install		install the handler necessary to make this waker active
internet	_SIGCHLDWaker	uninstall		remove the handler which makes this waker active
internet	_SIGCHLDWaker	doRead		having woken up the reactor in response to receipt of c{sigchld}, reap the process which exited
internet	_DisconnectSelectableMixin	_disconnectSelectable	selectable why isRead faildict	utility function for disconnecting a selectable
internet	PosixReactorBase	installWaker		install a waker' to allow threads and signals to wake up the io thread
internet	PosixReactorBase	_handleSignals		extend the basic signal handling logic to also support handling sigchld to know when to try to reap child processes
internet	PosixReactorBase	_uninstallHandler		if a child waker was created and installed uninstall it now
internet	PosixReactorBase	listenUDP	port protocol interface maxPacketSize	connects a given l{datagramprotocol} to the given numeric udp port
internet	PosixReactorBase	listenMulticast	port protocol interface maxPacketSize	connects a given datagramprotocol to the given numeric udp port
internet	PosixReactorBase	listenUNIXDatagram	address protocol maxPacketSize mode	connects a given l{datagramprotocol} to the given path
internet	PosixReactorBase	connectUNIXDatagram	address protocol maxPacketSize mode	connects a l{connecteddatagramprotocol} instance to a path
internet	PosixReactorBase	adoptStreamPort	fileDescriptor addressFamily factory	create a new l{ilisteningport} from an already-initialized socket
internet	PosixReactorBase	_removeAll	readers writers	remove all readers and writers and list of removed l{ireaddescriptor}s and l{iwritedescriptor}s
internet	_PollLikeMixin	_doReadOrWrite	selectable fd event	fd is available for read or write do the work and raise errors if necessary
internet	_ContinuousPolling	_checkLoop		start or stop a c{loopingcall} based on whether there are readers and writers
internet	_ContinuousPolling	iterate		call c{doread} and c{dowrite} on all readers and writers respectively
internet	_ContinuousPolling	addReader	reader	add a c{filedescriptor} for notification of data available to read
internet	_ContinuousPolling	addWriter	writer	add a c{filedescriptor} for notification of data available to write
internet	_ContinuousPolling	removeReader	reader	remove a c{filedescriptor} from notification of data available to read
internet	_ContinuousPolling	removeWriter	writer	remove a c{filedescriptor} from notification of data available to write
internet	_ContinuousPolling	removeAll		remove all readers and writers
internet	_ContinuousPolling	getReaders		return a list of the readers
internet	_ContinuousPolling	getWriters		return a list of the writers
internet	_ContinuousPolling	isReading	fd	checks if the file descriptor is currently being observed for read readiness
internet	_ContinuousPolling	isWriting	fd	checks if the file descriptor is currently being observed for write readiness
internet		install	widget ms reactor	install a tkinter tk() object into the reactor
internet		uninstall		remove the root tk widget from the reactor
internet	BaseProcess	processEnded	status	this is called when the child terminates
internet	BaseProcess	maybeCallProcessEnded		call processended on protocol after final cleanup
internet	_DCHandle	cancel		cancel the inner l{asyncio handle}
internet	AsyncioSelectorReactor	_unregisterFDInAsyncio	fd	compensate for a bug in asyncio where it will not unregister a fd that it cannot handle in the epoll loop
internet		install	eventloop	install an asyncio-based reactor
internet		ensureNotImported	moduleNames errorMessage preventImports	check whether the given modules were imported and if requested ensure they will not be importable in the future
internet	GlibReactorBase	_ioEventCallback	source condition	called by event loop when an i/o event occurs
internet	GlibReactorBase	_add	source primary other primaryFlag	add the given l{filedescriptor} for monitoring either for reading or writing
internet	GlibReactorBase	addReader	reader	add a l{filedescriptor} for monitoring of data available to read
internet	GlibReactorBase	addWriter	writer	add a l{filedescriptor} for monitoring ability to write data
internet	GlibReactorBase	getReaders		retrieve the list of current l{filedescriptor} monitored for reading
internet	GlibReactorBase	getWriters		retrieve the list of current l{filedescriptor} monitored for writing
internet	GlibReactorBase	removeAll		remove monitoring for all registered l{filedescriptor}s
internet	GlibReactorBase	_remove	source primary other flags	remove monitoring the given l{filedescriptor} for either reading or writing
internet	GlibReactorBase	removeReader	reader	stop monitoring the given l{filedescriptor} for reading
internet	GlibReactorBase	removeWriter	writer	stop monitoring the given l{filedescriptor} for writing
internet	GlibReactorBase	iterate	delay	one iteration of the event loop for trial's use
internet	GlibReactorBase	crash		crash the reactor
internet	GlibReactorBase	stop		stop the reactor
internet	GlibReactorBase	run	installSignalHandlers	run the reactor
internet	GlibReactorBase	callLater		schedule a c{delayedcall}
internet	GlibReactorBase	_reschedule		schedule a glib timeout for c{_simulate}
internet	GlibReactorBase	_simulate		run timers and then reschedule glib timeout for next scheduled event
internet	PortableGlibReactorBase	simulate		run simulation loops and reschedule callbacks
internet		installReactor	reactor	install reactor c{reactor}
internet	SerialPort	writeSomeData	data	write some data to the serial device
internet	SerialPort	doRead		some data's readable from serial device
internet	SerialPort	connectionLost	reason	called when the serial port disconnects
internet		install	useGtk	configure the twisted mainloop to be run inside the gtk mainloop
internet		portableInstall	useGtk	configure the twisted mainloop to be run inside the gtk mainloop
internet		humanReadableMask	mask	auxiliary function that converts a hexadecimal mask into a series of human readable flags
internet	_Watch	_notify	filepath events	callback function used by l{inotify} to dispatch an event
internet	INotify	_addWatch	path mask autoAdd callbacks	private helper that abstracts the use of ctypes
internet	INotify	_rmWatch	wd	private helper that abstracts the use of ctypes
internet	INotify	connectionLost	reason	release the inotify file descriptor and do the necessary cleanup
internet	INotify	fileno		get the underlying file descriptor from this inotify observer
internet	INotify	doRead		read some data from the observed file descriptors
internet	INotify	_doRead	in_	work on the data just read from the file descriptor
internet	INotify	_addChildren	iwp	this is a very private method please don't even think about using it
internet	INotify	watch	path mask autoAdd callbacks	watch the 'mask' events in given path can raise c{inotifyerror} when
internet	INotify	ignore	path	remove the watch point monitoring the given path
internet	INotify	_isWatched	path	helper function that checks if the path is already monitored and returns its watchdescriptor if so or none otherwise
internet		setNonBlocking	fd	set the file description of the given file descriptor to non-blocking
internet		setBlocking	fd	set the file description of the given file descriptor to blocking
internet		readFromFD	fd callback	read from file descriptor calling callback with resulting data
internet		writeToFD	fd data	write data to file descriptor
internet	_PullToPush	_pull		a generator that calls c{resumeproducing} on the underlying producer forever
internet	_PullToPush	startStreaming		this should be called by the consumer when the producer is registered
internet	_PullToPush	stopStreaming		this should be called by the consumer when the producer is unregistered
internet	_PullToPush	pauseProducing		@see c{ipushproducer pauseproducing}
internet	_PullToPush	resumeProducing		@see c{ipushproducer resumeproducing}
internet	_PullToPush	stopProducing		@see c{ipushproducer stopproducing}
internet	ContextFactory	getContext		return a ssl context object override in subclasses
internet	DefaultOpenSSLContextFactory	__init__	privateKeyFileName certificateFileName sslmethod _contextFactory	@param privatekeyfilename name of a file containing a private key
internet	DefaultOpenSSLContextFactory	getContext		return an ssl context
internet	Port	_getLogPrefix	factory	override the normal prefix to include an annotation indicating this is a port for tls connections
internet	LoopingCall	deferred		deprecated l{deferred} fired when loop stops or fails
internet	LoopingCall	withCount	cls countCallable	an alternate constructor for l{loopingcall} that makes available the number of calls which should have occurred since it was last invoked
internet	LoopingCall	_intervalOf	t	determine the number of intervals passed as of the given point in time
internet	LoopingCall	start	interval now	start running function every interval seconds
internet	LoopingCall	stop		stop running function
internet	LoopingCall	reset		skip the next iteration and reset the timer
internet	LoopingCall	_scheduleFrom	when	schedule the next iteration of this looping call
internet	CooperativeTask	__init__	iterator cooperator	a private constructor to create a new l{cooperativetask}, see l{cooperator
internet	CooperativeTask	whenDone		get a l{defer deferred} notification of when this task is complete
internet	CooperativeTask	pause		pause this l{cooperativetask} stop doing work until
internet	CooperativeTask	resume		resume processing of a paused l{cooperativetask}
internet	CooperativeTask	_completeWith	completionState deferredResult	@param completionstate a l{taskfinished} exception or a subclass thereof indicating what exception should be raised when subsequent
internet	CooperativeTask	stop		stop further processing of this task
internet	CooperativeTask	_checkFinish		if this task has been stopped raise the appropriate subclass of l{taskfinished}
internet	CooperativeTask	_oneWorkUnit		perform one unit of work for this task retrieving one item from its iterator stopping if there are no further items in the iterator and
internet	Cooperator	__init__	terminationPredicateFactory scheduler started	create a scheduler-like object to which iterators may be added
internet	Cooperator	coiterate	iterator doneDeferred	add an iterator to the list of iterators this l{cooperator} is currently running
internet	Cooperator	cooperate	iterator	start running the given iterator as a long-running cooperative task by calling next() on it as a periodic timed event
internet	Cooperator	_addTask	task	add a l{cooperativetask} object to this l{cooperator}
internet	Cooperator	_removeTask	task	remove a l{cooperativetask} from this l{cooperator}
internet	Cooperator	_tasksWhileNotStopped		yield all l{cooperativetask} objects in a loop as long as this l{cooperator}'s termination condition has not been met
internet	Cooperator	_tick		run one scheduler tick
internet	Cooperator	start		begin scheduling steps
internet	Cooperator	stop		stop scheduling steps errback the completion deferreds of all
internet	Cooperator	running		is this l{cooperator} is currently running? @return c{true} if the l{cooperator} is running c{false} otherwise
internet		coiterate	iterator	cooperatively iterate over the given iterator dividing runtime between it and all other iterators which have been passed to this function and not yet
internet		cooperate	iterator	start running the given iterator as a long-running cooperative task by calling next() on it as a periodic timed event
internet	Clock	seconds		pretend to be time time() this is used internally when an operation
internet	Clock	_sortCalls		sort the pending calls according to the time they are scheduled
internet	Clock	callLater	when what	see l{twisted internet interfaces ireactortime calllater}
internet	Clock	getDelayedCalls		see l{twisted internet interfaces ireactortime getdelayedcalls}
internet	Clock	advance	amount	move time on this clock forward by the given amount and run whatever pending calls should be run
internet	Clock	pump	timings	advance incrementally by the given set of times
internet		deferLater	clock delay callable	call the given function after a certain period of time has passed
internet		react	main argv _reactor	call c{main} and run the reactor until the l{deferred} it returns fires
internet	Gtk3Reactor	__init__		override init to set the c{usegtk} flag
internet	PortableGtk3Reactor	__init__		override init to set the c{usegtk} flag
internet		install		configure the twisted mainloop to be run inside the gtk3+ mainloop
internet	_WrappingProtocol	__init__	connectedDeferred wrappedProtocol	@param connecteddeferred the l{deferred} that will callback with the c{wrappedprotocol} when it is connected
internet	_WrappingProtocol	logPrefix		transparently pass through the wrapped protocol's log prefix
internet	_WrappingProtocol	connectionMade		connect the c{self _wrappedprotocol} to our c{self transport} and
internet	_WrappingProtocol	dataReceived	data	proxy c{datareceived} calls to our c{self _wrappedprotocol}
internet	_WrappingProtocol	fileDescriptorReceived	descriptor	proxy c{filedescriptorreceived} calls to our c{self _wrappedprotocol}
internet	_WrappingProtocol	connectionLost	reason	proxy c{connectionlost} calls to our c{self _wrappedprotocol}
internet	_WrappingProtocol	readConnectionLost		proxy l{ihalfcloseableprotocol readconnectionlost} to our
internet	_WrappingProtocol	writeConnectionLost		proxy l{ihalfcloseableprotocol writeconnectionlost} to our
internet	_WrappingProtocol	handshakeCompleted		proxy l{interfaces ihandshakelistener} to our
internet	_WrappingFactory	__init__	wrappedFactory	@param wrappedfactory a provider of i{iprotocolfactory} whose buildprotocol method will be called and whose resulting protocol
internet	_WrappingFactory	startedConnecting	connector	a connection attempt was started remember the connector which started
internet	_WrappingFactory	_canceller	deferred	the outgoing connection attempt was cancelled fail that l{deferred}
internet	_WrappingFactory	doStart		start notifications are passed straight through to the wrapped factory
internet	_WrappingFactory	doStop		stop notifications are passed straight through to the wrapped factory
internet	_WrappingFactory	buildProtocol	addr	proxy c{buildprotocol} to our c{self _wrappedfactory} or errback the
internet	_WrappingFactory	clientConnectionFailed	connector reason	errback the c{self _onconnection} l{deferred} when the
internet	StandardIOEndpoint	__init__	reactor	@param reactor the reactor for the endpoint
internet	StandardIOEndpoint	listen	stdioProtocolFactory	implement l{istreamserverendpoint listen} to listen on stdin/stdout
internet	_WrapIProtocol	__init__	proto executable errFlag	@param proto an l{iprotocol} provider
internet	_WrapIProtocol	makeConnection	process	call l{iprotocol} provider's makeconnection method with an l{itransport} provider
internet	_WrapIProtocol	childDataReceived	childFD data	this is called with data from the process's stdout or stderr pipes it
internet	_WrapIProtocol	processEnded	reason	if the process ends with l{error processdone}, this method calls the
internet	ProcessEndpoint	__init__	reactor executable args env	see l{ireactorprocess spawnprocess}
internet	ProcessEndpoint	connect	protocolFactory	implement l{istreamclientendpoint connect} to launch a child process
internet	_TCPServerEndpoint	__init__	reactor port backlog interface	@param reactor an l{ireactortcp} provider
internet	_TCPServerEndpoint	listen	protocolFactory	implement l{istreamserverendpoint listen} to listen on a tcp
internet	TCP4ServerEndpoint	__init__	reactor port backlog interface	@param reactor an l{ireactortcp} provider
internet	TCP6ServerEndpoint	__init__	reactor port backlog interface	@param reactor an l{ireactortcp} provider
internet	TCP4ClientEndpoint	__init__	reactor host port timeout	@param reactor an l{ireactortcp} provider @param host a hostname used when connecting
internet	TCP4ClientEndpoint	connect	protocolFactory	implement l{istreamclientendpoint connect} to connect via tcp
internet	TCP6ClientEndpoint	__init__	reactor host port timeout	@param host an ipv6 address literal or a hostname with an ipv6 address
internet	TCP6ClientEndpoint	connect	protocolFactory	implement l{istreamclientendpoint connect} to connect via tcp
internet	TCP6ClientEndpoint	_nameResolution	host	resolve the hostname string into a tuple containing the host ipv6 address
internet	TCP6ClientEndpoint	_resolvedHostConnect	resolvedHost protocolFactory	connect to the server using the resolved hostname
internet	HostnameEndpoint	__init__	reactor host port timeout	create a l{hostnameendpoint}
internet	HostnameEndpoint	_hostAsBytesAndText	host	for various reasons (documented in the c{@ivar}'s in the class docstring) we need both a textual and a binary representation of the
internet	HostnameEndpoint	connect	protocolFactory	attempts a connection to each address returned by gai and returns a connection which is established first
internet	SSL4ServerEndpoint	__init__	reactor port sslContextFactory backlog	@param reactor an l{ireactorssl} provider
internet	SSL4ServerEndpoint	listen	protocolFactory	implement l{istreamserverendpoint listen} to listen for ssl on a
internet	SSL4ClientEndpoint	__init__	reactor host port sslContextFactory	@param reactor an l{ireactorssl} provider
internet	SSL4ClientEndpoint	connect	protocolFactory	implement l{istreamclientendpoint connect} to connect with ssl over
internet	UNIXServerEndpoint	__init__	reactor address backlog mode	@param reactor an l{ireactorunix} provider
internet	UNIXServerEndpoint	listen	protocolFactory	implement l{istreamserverendpoint listen} to listen on a unix socket
internet	UNIXClientEndpoint	__init__	reactor path timeout checkPID	@param reactor an l{ireactorunix} provider
internet	UNIXClientEndpoint	connect	protocolFactory	implement l{istreamclientendpoint connect} to connect via a
internet	AdoptedStreamServerEndpoint	__init__	reactor fileno addressFamily	@param reactor an l{ireactorsocket} provider
internet	AdoptedStreamServerEndpoint	listen	factory	implement l{istreamserverendpoint listen} to start listening on and
internet		_parseTCP	factory port interface backlog	internal parser function for l{_parseserver} to convert the string arguments for a tcp ipv4 stream endpoint into the structured arguments
internet		_parseUNIX	factory address mode backlog	internal parser function for l{_parseserver} to convert the string arguments for a unix (af_unix/sock_stream) stream endpoint into the
internet		_parseSSL	factory port privateKey certKey	internal parser function for l{_parseserver} to convert the string arguments for an ssl (over tcp/ipv4) stream endpoint into the structured
internet	_StandardIOParser	_parseServer	reactor	internal parser function for l{_parseserver} to convert the string
internet	_SystemdParser	_parseServer	reactor domain index	internal parser function for l{_parseserver} to convert the string arguments for a systemd server endpoint into structured arguments for
internet	_TCP6ServerParser	_parseServer	reactor port backlog interface	internal parser function for l{_parseserver} to convert the string arguments into structured arguments for the l{tcp6serverendpoint}
internet		_tokenize	description	tokenize a strports string and yield each token
internet		_parse	description	convert a description string into a list of positional and keyword parameters using logic vaguely like what python does
internet		_parseServer	description factory	parse a strports description into a 2-tuple of arguments and keyword values
internet		_matchPluginToPrefix	plugins endpointType	match plugin to prefix
internet		serverFromString	reactor description	construct a stream server endpoint from an endpoint description string
internet		quoteStringArgument	argument	quote an argument to l{serverfromstring} and l{clientfromstring} since
internet		_parseClientTCP		perform any argument value coercion necessary for tcp client parameters
internet		_loadCAsFromDir	directoryPath	load certificate-authority certificate objects in a given directory
internet		_parseTrustRootPath	pathName	parse a string referring to a directory full of certificate authorities into a trust root
internet		_privateCertFromPaths	certificatePath keyPath	parse a certificate path and key path either or both of which might be l{none}, into a certificate object
internet		_parseClientSSLOptions	kwargs	parse common arguments for ssl endpoints creating an l{certificateoptions} instance
internet		_parseClientSSL		perform any argument value coercion necessary for ssl client parameters
internet		_parseClientUNIX		perform any argument value coercion necessary for unix client parameters
internet		clientFromString	reactor description	construct a client endpoint from a description string
internet		connectProtocol	endpoint protocol	connect a protocol instance to an endpoint
internet	_WrapperEndpoint	__init__	wrappedEndpoint wrapperFactory	construct a l{_wrapperendpoint}
internet	_WrapperEndpoint	connect	protocolFactory	connect the given protocol factory and unwrap its result
internet	_WrapperServerEndpoint	__init__	wrappedEndpoint wrapperFactory	construct a l{_wrapperserverendpoint}
internet	_WrapperServerEndpoint	listen	protocolFactory	connect the given protocol factory and unwrap its result
internet		wrapClientTLS	connectionCreator wrappedEndpoint	wrap an endpoint which upgrades to tls as soon as the connection is established
internet		_parseClientTLS	reactor host port timeout	internal method to construct an endpoint from string parameters
internet	_TLSClientEndpointParser	parseStreamClient	reactor	redirects to another function l{_parseclienttls}; tricks zope interface
internet	_WakerPlus	doRead		wake up the loop and force c{rununtilcurrent} to run immediately in the next timed iteration
internet	CFReactor	installWaker		override c{installwaker} in order to use l{_wakerplus}; otherwise this should be exactly the same as the parent implementation
internet	CFReactor	_socketCallback	cfSocket callbackType ignoredAddress ignoredData	the socket callback issued by cfrunloop this will issue c{doread} or
internet	CFReactor	_watchFD	fd descr flag	register a file descriptor with the c{cfrunloop}, or modify its state so that it's listening for both notifications read and write rather
internet	CFReactor	_flag2idx	flag	convert a c{kcfsocket } constant to an index into the read/write
internet	CFReactor	_unwatchFD	fd descr flag	unregister a file descriptor with the c{cfrunloop}, or modify its state so that it's listening for only one notification read or write as
internet	CFReactor	addReader	reader	implement l{ireactorfdset addreader}
internet	CFReactor	addWriter	writer	implement l{ireactorfdset addwriter}
internet	CFReactor	removeReader	reader	implement l{ireactorfdset removereader}
internet	CFReactor	removeWriter	writer	implement l{ireactorfdset removewriter}
internet	CFReactor	removeAll		implement l{ireactorfdset removeall}
internet	CFReactor	getReaders		implement l{ireactorfdset getreaders}
internet	CFReactor	getWriters		implement l{ireactorfdset getwriters}
internet	CFReactor	_moveCallLaterSooner	tple	override l{posixreactorbase}'s implementation of l{idelayedcall reset}
internet	CFReactor	mainLoop		run the runner (c{cfrunlooprun} or something that calls it), which runs the run loop until c{crash()} is called
internet	CFReactor	_scheduleSimulate	force	schedule a call to c{self rununtilcurrent} this will cancel the
internet	CFReactor	callLater	_seconds _f	implement l{ireactortime calllater}
internet	CFReactor	stop		implement l{ireactorcore stop}
internet	CFReactor	crash		implement l{ireactorcore crash}
internet	CFReactor	_stopNow		immediately stop the cfrunloop (which must be running!)
internet	CFReactor	iterate	delay	emulate the behavior of c{iterate()} for things that want to call it by letting the loop run for a little while and then scheduling a timed
internet		install	runLoop runner	configure the twisted mainloop to be run inside cfrunloop
internet	_BypassTLS	__getattr__	name	forward any extra attribute access to the original transport object
internet	_BypassTLS	write	data	write some bytes directly to the connection
internet	_BypassTLS	writeSequence	iovec	write a some bytes directly to the connection
internet	_BypassTLS	loseConnection		close the underlying connection
internet	_BypassTLS	registerProducer	producer streaming	register a producer with the underlying connection
internet	_BypassTLS	unregisterProducer		unregister a producer with the underlying connection
internet		startTLS	transport contextFactory normal bypass	add a layer of ssl to a transport
internet	ConnectionMixin	startTLS	ctx normal	@see l{itlstransport starttls}
internet	ConnectionMixin	write	bytes	write some bytes to this connection passing them through a tls layer if necessary or discarding them if the connection has already been lost
internet	ConnectionMixin	writeSequence	iovec	write some bytes to this connection scatter/gather-style passing them through a tls layer if necessary or discarding them if the connection
internet	ConnectionMixin	loseConnection		close this connection after writing all pending data
internet	ConnectionMixin	registerProducer	producer streaming	register a producer
internet	ConnectionMixin	unregisterProducer		unregister a producer
internet	_PollableWritePipe	registerProducer	producer streaming	register to receive data from a producer
internet	_PollableWritePipe	unregisterProducer		stop consuming data from a producer without disconnecting
internet	_PollableWritePipe	writeSequence	seq	append a c{list} or c{tuple} of bytes to the output buffer
internet	_PollableWritePipe	write	data	append some bytes to the output buffer
internet		_getExcludedTLSProtocols	oldest newest	given a pair of l{tlsversion} constants figure out what versions we want to disable as openssl is an exclusion based api
internet		simpleVerifyHostname	connection hostname	check only the common name in the certificate presented by the peer and only for an exact match
internet		_usablePyOpenSSL	version	check pyopenssl version string whether we can use it for host verification
internet		_selectVerifyImplementation		determine if c{service_identity} is installed if so use it if not use
internet		_sessionCounter	counter	private - shared between all opensslcertificateoptions counts up to provide a unique session id for each context
internet		protocolNegotiationMechanisms		checks whether your versions of pyopenssl and openssl are recent enough to support protocol negotiation and if they are what kind of protocol
internet	DistinguishedName	inspect		return a multi-line human-readable representation of this dn
internet	CertBase	getSubject		retrieve the subject of this certificate
internet	CertBase	__conform__	interface	convert this l{certbase} into a provider of the given interface
internet		_handleattrhelper	Class transport methodName	private helper for l{certificate peerfromtransport} and
internet	Certificate	load	Class requestData format args	load a certificate from an asn 1- or pem-format string
internet	Certificate	dumpPEM		dump this certificate to a pem-format data string
internet	Certificate	loadPEM	Class data	load a certificate from a pem-format data string
internet	Certificate	peerFromTransport	Class transport	get the certificate for the remote end of the given transport
internet	Certificate	hostFromTransport	Class transport	get the certificate for the local end of the given transport
internet	Certificate	getPublicKey		get the public key for this certificate
internet	Certificate	serialNumber		retrieve the serial number of this certificate
internet	Certificate	digest	method	return a digest hash of this certificate using the specified hash algorithm
internet	Certificate	inspect		return a multi-line human-readable representation of this certificate including information about the subject issuer and
internet	Certificate	getIssuer		retrieve the issuer of this certificate
internet	PrivateCertificate	newCertificate	newCertData format	create a new l{privatecertificate} from the given certificate data and this instance's private key
internet	PrivateCertificate	dumpPEM		dump both public and private parts of a private certificate to pem-format data
internet	PrivateCertificate	loadPEM	Class data	load both private and public parts of a private certificate from a chunk of pem-format data
internet	PrivateCertificate	options		create a context factory using this l{privatecertificate}'s certificate and private key
internet	PublicKey	__init__	osslpkey	@param osslpkey the underlying pyopenssl key object
internet	PublicKey	matches	otherKey	does this l{publickey} contain the same value as another l{publickey}? @param otherkey the key to compare c{self} to
internet	PublicKey	keyHash		compute a hash of the underlying pkey object
internet	KeyPair	certificateRequest	distinguishedName format digestAlgorithm	create a certificate request signed with this key
internet	KeyPair	signCertificateRequest	issuerDistinguishedName requestData verifyDNCallback serialNumber	given a blob of certificate request data and a certificate authority's distinguishedname return a blob of signed certificate data
internet	KeyPair	signRequestObject	issuerDistinguishedName requestObject serialNumber secondsToExpiry	sign a certificaterequest instance returning a certificate instance
internet	IOpenSSLTrustRoot	_addCACertsToContext	context	add certificate-authority certificates to an ssl context whose connections should trust those authorities
internet	OpenSSLCertificateAuthorities	__init__	caCerts	@param cacerts the certificate authorities to trust when using this object as a c{trustroot} for l{opensslcertificateoptions}
internet		trustRootFromCertificates	certificates	builds an object that trusts multiple root l{certificate}s
internet		platformTrust		attempt to discover a set of trusted certificate authority certificates or in other words trust roots or root certificates whose trust is
internet		_tolerateErrors	wrapped	wrap up an c{info_callback} for pyopenssl so that if something goes wrong the error is immediately logged and the connection is dropped if possible
internet	ClientTLSOptions	clientConnectionForTLS	tlsProtocol	create a tls connection for a client
internet	ClientTLSOptions	_identityVerifyingInfoCallback	connection where ret	u{info_callback <http //pythonhosted
internet		optionsForClientTLS	hostname trustRoot clientCertificate acceptableProtocols	create a l{client connection creator <iopensslclientconnectioncreator>} for use with apis such as l{ssl4clientendpoint
internet	OpenSSLCertificateOptions	__init__	privateKey certificate method verify	create an openssl context ssl connection context factory
internet	OpenSSLCertificateOptions	getContext		return an l{openssl ssl context} object
internet	_OpenSSLECCurve	__init__	snName	@param snname the name of the curve as used by c{obj_sn2nid}
internet	_OpenSSLECCurve	_getBinding		attempt to get cryptography's binding instance
internet	_OpenSSLECCurve	addECKeyToContext	context	add a temporary ec key to c{context}
internet	OpenSSLCipher	__init__	fullName	@param fullname the full name of the cipher for example
internet	OpenSSLCipher	__repr__		a runnable representation of the cipher
internet		_expandCipherString	cipherString method options	expand c{cipherstring} according to c{method} and c{options} to a list of explicit ciphers that are supported by the current platform
internet	OpenSSLAcceptableCiphers	fromOpenSSLCipherString	cls cipherString	create a new instance using an openssl cipher string
internet	OpenSSLDiffieHellmanParameters	fromFile	cls filePath	load parameters from a file
internet		_setAcceptableProtocols	context acceptableProtocols	called to set up the l{openssl ssl context} for doing npn and/or alpn
internet	ProcessEventsTimer	Notify		called repeatedly by wx event loop
internet	WxReactor	registerWxApp	wxapp	register wxapp instance with the reactor
internet	WxReactor	_installSignalHandlersAgain		wx sometimes removes our own signal handlers so re-add them
internet	WxReactor	stop		stop the reactor
internet	WxReactor	_runInMainThread	f	schedule function to run in main wx/twisted thread
internet	WxReactor	_stopWx		stop the wx event loop if it hasn't already been stopped
internet	WxReactor	run	installSignalHandlers	start the reactor
internet		install		configure the twisted mainloop to be run inside the wxpython mainloop
internet	StandardIO	__init__	proto reactor	start talking to standard io with the given protocol
internet	DelayedCall	__init__	time func args kw	@param time seconds from the epoch at which to call c{func}
internet	DelayedCall	getTime		return the time at which this call will fire @rtype c{float}
internet	DelayedCall	cancel		unschedule this call @raise alreadycancelled raised if this call has already been
internet	DelayedCall	reset	secondsFromNow	reschedule this call for a different time @type secondsfromnow c{float}
internet	DelayedCall	delay	secondsLater	reschedule this call for a later time @type secondslater c{float}
internet	DelayedCall	active		determine whether this call is still pending @rtype c{bool}
internet	DelayedCall	__le__	other	implement c{<=} operator between two l{delayedcall} instances
internet	DelayedCall	__lt__	other	implement c{<} operator between two l{delayedcall} instances
internet	ThreadedResolver	getHostByName	name timeout	see l{twisted internet interfaces iresolversimple gethostbyname}
internet	_ThreePhaseEvent	addTrigger	phase callable	add a trigger to the indicate phase
internet	_ThreePhaseEvent	removeTrigger	handle	remove a previously added trigger callable
internet	_ThreePhaseEvent	removeTrigger_BASE	handle	just try to remove the trigger
internet	_ThreePhaseEvent	removeTrigger_BEFORE	handle	remove the trigger if it has yet to be executed otherwise emit a warning that in the future an exception will be raised when removing an
internet	_ThreePhaseEvent	fireEvent		call the triggers added to this event
internet	_ThreePhaseEvent	_continueFiring	ignored	call the during and after phase triggers for this event
internet	ReactorBase	nameResolver		implementation of read-only l{ireactorpluggablenameresolver
internet	ReactorBase	wakeUp		wake up the event loop
internet	ReactorBase	doIteration	delay	do one iteration over the readers and writers which have been added
internet	ReactorBase	resolve	name timeout	return a deferred that will resolve a hostname
internet	ReactorBase	stop		see twisted internet interfaces ireactorcore stop
internet	ReactorBase	crash		see twisted internet interfaces ireactorcore crash
internet	ReactorBase	sigInt		handle a sigint interrupt
internet	ReactorBase	sigBreak		handle a sigbreak interrupt
internet	ReactorBase	sigTerm		handle a sigterm interrupt
internet	ReactorBase	disconnectAll		disconnect every reader and writer in the system
internet	ReactorBase	iterate	delay	see twisted internet interfaces ireactorcore iterate
internet	ReactorBase	fireSystemEvent	eventType	see twisted internet interfaces ireactorcore firesystemevent
internet	ReactorBase	addSystemEventTrigger	_phase _eventType _f	see twisted internet interfaces ireactorcore addsystemeventtrigger
internet	ReactorBase	removeSystemEventTrigger	triggerID	see twisted internet interfaces ireactorcore removesystemeventtrigger
internet	ReactorBase	callWhenRunning	_callable	see twisted internet interfaces ireactorcore callwhenrunning
internet	ReactorBase	startRunning		method called when reactor starts do some initialization and fire startup events
internet	ReactorBase	_reallyStartRunning		method called to transition to the running state this should happen
internet	ReactorBase	callLater	_seconds _f	see twisted internet interfaces ireactortime calllater
internet	ReactorBase	getDelayedCalls		return all the outstanding delayed calls in the system
internet	ReactorBase	timeout		determine the longest time the reactor may sleep (waiting on i/o notification perhaps) before it must wake up to service a time-related
internet	ReactorBase	runUntilCurrent		run all pending timed calls
internet	ReactorBase	_checkProcessArgs	args env	check for valid arguments and environment to spawnprocess
internet	BaseConnector	disconnect		disconnect whatever our state is
internet	BaseConnector	connect		start connection to remote server
internet	BaseConnector	stopConnecting		stop attempting to connect
internet	BasePort	doWrite		raises a runtimeerror
internet	_SignalReactorMixin	_handleSignals		install the signal handlers for the twisted event loop
internet	_SignalReactorMixin	startRunning	installSignalHandlers	extend the base implementation in order to remember whether signal handlers should be installed later
internet	_SignalReactorMixin	_reallyStartRunning		extend the base implementation by also installing signal handlers if c{self
internet	PollReactor	__init__		initialize polling object file descriptor tracking dictionaries and the base class
internet	PollReactor	_updateRegistration	fd	register/unregister an fd with the poller
internet	PollReactor	addReader	reader	add a filedescriptor for notification of data available to read
internet	PollReactor	addWriter	writer	add a filedescriptor for notification of data available to write
internet	PollReactor	removeReader	reader	remove a selectable for notification of data available to read
internet	PollReactor	removeWriter	writer	remove a selectable for notification of data available to write
internet	PollReactor	removeAll		remove all selectables and return a list of them
internet	PollReactor	doPoll	timeout	poll the poller for new events
internet		install		install the poll() reactor
internet		getConnectError	e	given a socket exception return connection error
internet	ProcessTerminated	__init__	exitCode signal status	@param exitcode the exit status of the process this is roughly like
internet	ConnectingCancelledError	__init__	address	@param address the l{iaddress} that is the destination of the l{istreamclientendpoint} that was cancelled
internet	InvalidAddressError	__init__	address message	@param address the address that was provided
internet		_idnaBytes	text	convert some text typed by a human into some ascii bytes
internet		_idnaText	octets	convert some idna-encoded octets into some human-readable text
internet		install	ms reactor args kw	schedule pyui's display to be updated approximately every c{ms} milliseconds and initialize pyui with the specified arguments
internet		reapAllProcesses		reap all registered processes
internet		registerReapProcessHandler	pid process	register a process handler for the given pid in case l{reapallprocesses} is called
internet		unregisterReapProcessHandler	pid process	unregister a process handler previously registered with l{registerreapprocesshandler}
internet		detectLinuxBrokenPipeBehavior		on some linux version write-only pipe are detected as readable this
internet	ProcessWriter	__init__	reactor proc name fileno	initialize specifying a process instance to connect to
internet	ProcessWriter	fileno		return the fileno() of my process's stdin
internet	ProcessWriter	writeSomeData	data	write some data to the open process
internet	ProcessWriter	doRead		the only way a write pipe can become "readable" is at eof because the child has closed it and we're using a reactor which doesn't
internet	ProcessWriter	connectionLost	reason	see abstract filedescriptor connectionlost
internet	ProcessReader	__init__	reactor proc name fileno	initialize specifying a process to connect to
internet	ProcessReader	fileno		return the fileno() of my process's stderr
internet	ProcessReader	doRead		this is called when the pipe becomes readable
internet	ProcessReader	connectionLost	reason	close my end of the pipe signal the process which signals the processprotocol
internet	_BaseProcess	reapProcess		try to reap a process without blocking via waitpid
internet	_BaseProcess	signalProcess	signalID	send the given signal c{signalid} to the process it'll translate a
internet	_BaseProcess	_fork	path uid gid executable	fork and then exec sub-process
internet	_BaseProcess	_setupChild		setup the child process override in subclasses
internet	_BaseProcess	_execChild	path uid gid executable	the exec() which is done in the forked child
internet	_BaseProcess	__repr__		string representation of a process
internet	_FDDetector	_listOpenFDs		return an iterable of file descriptors which i{may} be open in this process
internet	_FDDetector	_getImplementation		pick a method which gives correct results for c{_listopenfds} in this runtime environment
internet	_FDDetector	_devFDImplementation		simple implementation for systems where /dev/fd actually works
internet	_FDDetector	_procFDImplementation		simple implementation for systems where /proc/pid/fd exists we assume it works
internet	_FDDetector	_fallbackFDImplementation		fallback implementation where either the resource module can inform us about the upper bound of how many fds to expect or where we just guess
internet		_listOpenFDs		use the global detector object to figure out which fd implementation to use
internet	Process	__init__	reactor executable args environment	spawn an operating-system process
internet	Process	_setupChild	fdmap	fdmap[childfd] = parentfd the child wants to end up with 'childfd' attached to what used to be
internet	Process	closeStdin		call this to close standard input on this process
internet	Process	write	data	call this to write to standard input on this process
internet	Process	registerProducer	producer streaming	call this to register producer for standard input
internet	Process	unregisterProducer		call this to unregister producer for standard input
internet	Process	writeSequence	seq	call this to write to standard input on this process
internet	PTYProcess	__init__	reactor executable args environment	spawn an operating-system process
internet	PTYProcess	_setupChild	masterfd slavefd	set up child process after c{fork()} but before c{exec()}
internet	PTYProcess	doRead		called when my standard output stream is ready for reading
internet	PTYProcess	fileno		this returns the file number of standard output on this process
internet	PTYProcess	connectionLost	reason	i call this to clean up when one or all of my connections has died
internet	PTYProcess	writeSomeData	data	write some data to the open process
internet	IConnector	stopConnecting		stop attempting to connect
internet	IConnector	disconnect		disconnect regardless of the connection state
internet	IConnector	connect		try to connect to remote address
internet	IConnector	getDestination		return destination this will try to connect to
internet	IResolverSimple	getHostByName	name timeout	resolve the domain name c{name} into an ip address
internet	IHostResolution	cancel		stop the hostname resolution in progress
internet	IResolutionReceiver	resolutionBegan	resolutionInProgress	a hostname resolution began
internet	IResolutionReceiver	addressResolved	address	an internet address this is called when an address for the given name
internet	IResolutionReceiver	resolutionComplete		resolution has completed no further addresses will be relayed to l{iresolutionreceiver
internet	IHostnameResolver	resolveHostName	resolutionReceiver hostName portNumber addressTypes	initiate a hostname resolution
internet	IResolver	query	query timeout	dispatch c{query} to the method which can handle its type
internet	IResolver	lookupAddress	name timeout	perform an a record lookup
internet	IResolver	lookupAddress6	name timeout	perform an a6 record lookup
internet	IResolver	lookupIPV6Address	name timeout	perform an aaaa record lookup
internet	IResolver	lookupMailExchange	name timeout	perform an mx record lookup
internet	IResolver	lookupNameservers	name timeout	perform an ns record lookup
internet	IResolver	lookupCanonicalName	name timeout	perform a cname record lookup
internet	IResolver	lookupMailBox	name timeout	perform an mb record lookup
internet	IResolver	lookupMailGroup	name timeout	perform an mg record lookup
internet	IResolver	lookupMailRename	name timeout	perform an mr record lookup
internet	IResolver	lookupPointer	name timeout	perform a ptr record lookup
internet	IResolver	lookupAuthority	name timeout	perform an soa record lookup
internet	IResolver	lookupNull	name timeout	perform a null record lookup
internet	IResolver	lookupWellKnownServices	name timeout	perform a wks record lookup
internet	IResolver	lookupHostInfo	name timeout	perform a hinfo record lookup
internet	IResolver	lookupMailboxInfo	name timeout	perform an minfo record lookup
internet	IResolver	lookupText	name timeout	perform a txt record lookup
internet	IResolver	lookupResponsibility	name timeout	perform an rp record lookup
internet	IResolver	lookupAFSDatabase	name timeout	perform an afsdb record lookup
internet	IResolver	lookupService	name timeout	perform an srv record lookup
internet	IResolver	lookupAllRecords	name timeout	perform an all_record lookup
internet	IResolver	lookupSenderPolicy	name timeout	perform a spf record lookup
internet	IResolver	lookupNamingAuthorityPointer	name timeout	perform a naptr record lookup
internet	IResolver	lookupZone	name timeout	perform an axfr record lookup
internet	IReactorTCP	listenTCP	port factory backlog interface	connects a given protocol factory to the given numeric tcp/ip port
internet	IReactorTCP	connectTCP	host port factory timeout	connect a tcp client
internet	IReactorSSL	connectSSL	host port factory contextFactory	connect a client protocol to a remote ssl socket
internet	IReactorSSL	listenSSL	port factory contextFactory backlog	connects a given protocol factory to the given numeric tcp/ip port
internet	IReactorUNIX	connectUNIX	address factory timeout checkPID	connect a client protocol to a unix socket
internet	IReactorUNIX	listenUNIX	address factory backlog mode	listen on a unix socket
internet	IReactorUNIXDatagram	connectUNIXDatagram	address protocol maxPacketSize mode	connect a client protocol to a datagram unix socket
internet	IReactorUNIXDatagram	listenUNIXDatagram	address protocol maxPacketSize mode	listen on a datagram unix socket
internet	IReactorWin32Events	addEvent	event fd action	add a new win32 event to the event loop
internet	IReactorWin32Events	removeEvent	event	remove an event
internet	IReactorUDP	listenUDP	port protocol interface maxPacketSize	connects a given l{datagramprotocol} to the given numeric udp port
internet	IReactorMulticast	listenMulticast	port protocol interface maxPacketSize	connects a given l{datagramprotocol<twisted
internet	IReactorSocket	adoptStreamPort	fileDescriptor addressFamily factory	add an existing listening i{sock_stream} socket to the reactor to monitor for new connections to accept and handle
internet	IReactorSocket	adoptStreamConnection	fileDescriptor addressFamily factory	add an existing connected i{sock_stream} socket to the reactor to monitor for data
internet	IReactorSocket	adoptDatagramPort	fileDescriptor addressFamily protocol maxPacketSize	add an existing listening i{sock_dgram} socket to the reactor to monitor for read and write readiness
internet	IReactorProcess	spawnProcess	processProtocol executable args env	spawn a process with a process protocol
internet	IReactorTime	seconds		get the current time in seconds
internet	IReactorTime	callLater	delay callable	call a function later
internet	IReactorTime	getDelayedCalls		retrieve all currently scheduled delayed calls
internet	IDelayedCall	getTime		get time when delayed call will happen
internet	IDelayedCall	cancel		cancel the scheduled call
internet	IDelayedCall	delay	secondsLater	delay the scheduled call
internet	IDelayedCall	reset	secondsFromNow	reset the scheduled call's timer
internet	IDelayedCall	active		@return true if this call is still active false if it has been called or cancelled
internet	IReactorFromThreads	callFromThread	callable	cause a function to be executed by the reactor thread
internet	IReactorInThreads	callInThread	callable	run the given callable object in a separate thread with the given arguments and keyword arguments
internet	IReactorThreads	getThreadPool		return the threadpool used by l{ireactorinthreads callinthread}
internet	IReactorThreads	suggestThreadPoolSize	size	suggest the size of the internal threadpool used to dispatch functions passed to l{ireactorinthreads
internet	IReactorCore	resolve	name timeout	return a l{twisted internet defer deferred} that will resolve a hostname
internet	IReactorCore	run		fire 'startup' system events move the reactor to the 'running' state then run the main loop until it is stopped with c{stop()} or
internet	IReactorCore	stop		fire 'shutdown' system events which will move the reactor to the 'stopped' state and cause c{reactor
internet	IReactorCore	crash		stop the main loop *immediately*, without firing any system events
internet	IReactorCore	iterate	delay	run the main loop's i/o polling function for a period of time
internet	IReactorCore	fireSystemEvent	eventType	fire a system-wide event
internet	IReactorCore	addSystemEventTrigger	phase eventType callable	add a function to be called when a system event occurs
internet	IReactorCore	removeSystemEventTrigger	triggerID	removes a trigger added with addsystemeventtrigger
internet	IReactorCore	callWhenRunning	callable	call a function when the reactor is running
internet	IReactorPluggableResolver	installResolver	resolver	set the internal resolver to use to for name lookups
internet	IReactorPluggableNameResolver	installNameResolver	resolver	set the internal resolver to use for name lookups
internet	IReactorDaemonize	beforeDaemonize		hook to be called immediately before daemonization no reactor methods
internet	IReactorDaemonize	afterDaemonize		hook to be called immediately after daemonization this may only be
internet	IReactorFDSet	addReader	reader	i add reader to the set of file descriptors to get read events for
internet	IReactorFDSet	addWriter	writer	i add writer to the set of file descriptors to get write events for
internet	IReactorFDSet	removeReader	reader	removes an object previously added with l{addreader}
internet	IReactorFDSet	removeWriter	writer	removes an object previously added with l{addwriter}
internet	IReactorFDSet	removeAll		remove all readers and writers
internet	IReactorFDSet	getReaders		return the list of file descriptors currently monitored for input events by the reactor
internet	IReactorFDSet	getWriters		return the list file descriptors currently monitored for output events by the reactor
internet	IListeningPort	startListening		start listening on this port
internet	IListeningPort	stopListening		stop listening on this port
internet	IListeningPort	getHost		get the host that this port is listening for
internet	ILoggingContext	logPrefix		@return prefix used during log formatting to indicate context
internet	IFileDescriptor	fileno		@raise if the descriptor no longer has a valid file descriptor number associated with it
internet	IFileDescriptor	connectionLost	reason	called when the connection was lost
internet	IReadDescriptor	doRead		some data is available for reading on your descriptor
internet	IWriteDescriptor	doWrite		some data can be written to your descriptor
internet	IHalfCloseableDescriptor	writeConnectionLost	reason	indicates write connection was lost
internet	IHalfCloseableDescriptor	readConnectionLost	reason	indicates read connection was lost
internet	ISystemHandle	getHandle		return a system- and reactor-specific handle
internet	IConsumer	registerProducer	producer streaming	register to receive data from a producer
internet	IConsumer	unregisterProducer		stop consuming data from a producer without disconnecting
internet	IConsumer	write	data	the producer will write data by calling this method
internet	IProducer	stopProducing		stop producing data
internet	IPushProducer	pauseProducing		pause producing data
internet	IPushProducer	resumeProducing		resume producing data
internet	IPullProducer	resumeProducing		produce data for the consumer a single time
internet	IProtocol	dataReceived	data	called whenever data is received
internet	IProtocol	connectionLost	reason	called when the connection is shut down
internet	IProtocol	makeConnection	transport	make a connection to a transport and a server
internet	IProtocol	connectionMade		called when a connection is made
internet	IProcessProtocol	makeConnection	process	called when the process has been created
internet	IProcessProtocol	childDataReceived	childFD data	called when data arrives from the child process
internet	IProcessProtocol	childConnectionLost	childFD	called when a file descriptor associated with the child process is closed
internet	IProcessProtocol	processExited	reason	called when the child process exits
internet	IProcessProtocol	processEnded	reason	called when the child process exits and all file descriptors associated with it have been closed
internet	IHalfCloseableProtocol	readConnectionLost		notification of the read connection being closed
internet	IHalfCloseableProtocol	writeConnectionLost		notification of the write connection being closed
internet	IHandshakeListener	handshakeCompleted		notification of the tls handshake being completed
internet	IFileDescriptorReceiver	fileDescriptorReceived	descriptor	called when a file descriptor is received over the connection
internet	IProtocolFactory	buildProtocol	addr	called when a connection has been established to addr
internet	IProtocolFactory	doStart		called every time this is connected to a port or connector
internet	IProtocolFactory	doStop		called every time this is unconnected from a port or connector
internet	ITransport	write	data	write some data to the physical connection in sequence in a non-blocking fashion
internet	ITransport	writeSequence	data	write an iterable of byte strings to the physical connection
internet	ITransport	loseConnection		close my connection after writing all pending data
internet	ITransport	getPeer		get the remote address of this connection
internet	ITransport	getHost		similar to getpeer but returns an address describing this side of the connection
internet	ITCPTransport	loseWriteConnection		half-close the write side of a tcp connection
internet	ITCPTransport	abortConnection		close the connection abruptly
internet	ITCPTransport	getTcpNoDelay		return if c{tcp_nodelay} is enabled
internet	ITCPTransport	getTcpKeepAlive		return if c{so_keepalive} is enabled
internet	ITCPTransport	getHost		returns l{ipv4address} or l{ipv6address}
internet	ITCPTransport	getPeer		returns l{ipv4address} or l{ipv6address}
internet	IUNIXTransport	sendFileDescriptor	descriptor	send a duplicate of this file socket pipe etc descriptor to the other end of this connection
internet	IOpenSSLServerConnectionCreator	serverConnectionForTLS	tlsProtocol	create a connection for the given server protocol
internet	IOpenSSLClientConnectionCreator	clientConnectionForTLS	tlsProtocol	create a connection for the given client protocol
internet	IProtocolNegotiationFactory	acceptableProtocols		returns a list of protocols that can be spoken by the connection factory in the form of alpn tokens as laid out in the iana registry
internet	IOpenSSLContextFactory	getContext		returns a tls context object suitable for securing a tls connection
internet	ITLSTransport	startTLS	contextFactory	initiate tls negotiation
internet	ISSLTransport	getPeerCertificate		return an object with the peer's certificate info
internet	IAcceptableCiphers	selectCiphers	availableCiphers	choose which ciphers to allow to be negotiated on a tls connection
internet	IProcessTransport	closeStdin		close stdin after all data has been written out
internet	IProcessTransport	closeChildFD	descriptor	close a file descriptor which is connected to the child process identified by its fd in the child process
internet	IProcessTransport	writeToChild	childFD data	similar to l{itransport write} but also allows the file descriptor in
internet	IProcessTransport	loseConnection		close stdin stderr and stdout
internet	IProcessTransport	signalProcess	signalID	send a signal to the process
internet	IServiceCollection	getServiceNamed	serviceName	retrieve the named service from this application
internet	IServiceCollection	addService	service	add a service to this collection
internet	IServiceCollection	removeService	service	remove a service from this collection
internet	IUDPTransport	write	packet addr	write packet to given address
internet	IUDPTransport	connect	host port	connect the transport to an address
internet	IUDPTransport	getHost		get this port's host address
internet	IUDPTransport	stopListening		stop listening on this port
internet	IUDPTransport	setBroadcastAllowed	enabled	set whether this port may broadcast
internet	IUDPTransport	getBroadcastAllowed		checks if broadcast is currently allowed on this port
internet	IUNIXDatagramTransport	write	packet address	write packet to given address
internet	IUNIXDatagramConnectedTransport	write	packet	write packet to address we are connected to
internet	IMulticastTransport	getOutgoingInterface		return interface of outgoing multicast packets
internet	IMulticastTransport	setOutgoingInterface	addr	set interface for outgoing multicast packets
internet	IMulticastTransport	getLoopbackMode		return if loopback mode is enabled
internet	IMulticastTransport	setLoopbackMode	mode	set if loopback mode is enabled
internet	IMulticastTransport	getTTL		get time to live for multicast packets
internet	IMulticastTransport	setTTL	ttl	set time to live on multicast packets
internet	IMulticastTransport	joinGroup	addr interface	join a multicast group returns l{deferred} of success or failure
internet	IMulticastTransport	leaveGroup	addr interface	leave multicast group return l{deferred} of success
internet	IStreamClientEndpoint	connect	protocolFactory	connect the c{protocolfactory} to the location specified by this l{istreamclientendpoint} provider
internet	IStreamServerEndpoint	listen	protocolFactory	listen with c{protocolfactory} at the location specified by this l{istreamserverendpoint} provider
internet	IStreamServerEndpointStringParser	parseStreamServer	reactor	parse a stream server endpoint from a reactor and string-only arguments and keyword arguments
internet	IStreamClientEndpointStringParserWithReactor	parseStreamClient	reactor	this method is invoked by l{endpoints clientfromstring}, if the type of
internet	KQueueReactor	__init__	_kqueueImpl	initialize kqueue object file descriptor tracking dictionaries and the base class
internet	KQueueReactor	_updateRegistration	fd filter op	private method for changing kqueue registration on a given fd filtering for events given filter/op
internet	KQueueReactor	beforeDaemonize		implement l{ireactordaemonize beforedaemonize}
internet	KQueueReactor	afterDaemonize		implement l{ireactordaemonize afterdaemonize}
internet	KQueueReactor	addReader	reader	implement l{ireactorfdset addreader}
internet	KQueueReactor	addWriter	writer	implement l{ireactorfdset addwriter}
internet	KQueueReactor	removeReader	reader	implement l{ireactorfdset removereader}
internet	KQueueReactor	removeWriter	writer	implement l{ireactorfdset removewriter}
internet	KQueueReactor	removeAll		implement l{ireactorfdset removeall}
internet	KQueueReactor	getReaders		implement l{ireactorfdset getreaders}
internet	KQueueReactor	getWriters		implement l{ireactorfdset getwriters}
internet	KQueueReactor	doKEvent	timeout	poll the kqueue for new events
internet	KQueueReactor	_doWriteOrRead	selectable fd event	private method called when a fd is ready for reading writing or was lost
internet		install		install the kqueue() reactor
internet	EPollReactor	__init__		initialize epoll object file descriptor tracking dictionaries and the base class
internet	EPollReactor	_add	xer primary other selectables	private method for adding a descriptor from the event loop
internet	EPollReactor	addReader	reader	add a filedescriptor for notification of data available to read
internet	EPollReactor	addWriter	writer	add a filedescriptor for notification of data available to write
internet	EPollReactor	_remove	xer primary other selectables	private method for removing a descriptor from the event loop
internet	EPollReactor	removeReader	reader	remove a selectable for notification of data available to read
internet	EPollReactor	removeWriter	writer	remove a selectable for notification of data available to write
internet	EPollReactor	removeAll		remove all selectables and return a list of them
internet	EPollReactor	doPoll	timeout	poll the poller for new events
internet		install		install the epoll() reactor
internet	ThreadedSelectReactor	_doSelectInThread	timeout	run one iteration of the i/o monitor loop
internet	ThreadedSelectReactor	interleave	waker	interleave waker interleaves this reactor with the current application by moving the blocking parts of
internet	ThreadedSelectReactor	addReader	reader	add a filedescriptor for notification of data available to read
internet	ThreadedSelectReactor	addWriter	writer	add a filedescriptor for notification of data available to write
internet	ThreadedSelectReactor	removeReader	reader	remove a selectable for notification of data available to read
internet	ThreadedSelectReactor	removeWriter	writer	remove a selectable for notification of data available to write
internet	ThreadedSelectReactor	stop		extend the base stop implementation to also wake up the select thread so that c{rununtilcurrent} notices the reactor should stop
internet		install		configure the twisted mainloop to be run using the select() reactor
internet	Factory	forProtocol	cls protocol	create a factory for the given protocol
internet	Factory	logPrefix		describe this factory for log messages
internet	Factory	doStart		make sure startfactory is called
internet	Factory	doStop		make sure stopfactory is called
internet	Factory	startFactory		this will be called before i begin listening on a port or connector
internet	Factory	stopFactory		this will be called before i stop listening on all ports/connectors
internet	Factory	buildProtocol	addr	create an instance of a subclass of protocol
internet	ClientFactory	startedConnecting	connector	called when a connection has been started
internet	ClientFactory	clientConnectionFailed	connector reason	called when a connection has failed to connect
internet	ClientFactory	clientConnectionLost	connector reason	called when an established connection is lost
internet	_InstanceFactory	buildProtocol	addr	return the pre-constructed protocol instance and arrange to fire the waiting l{deferred} to indicate success establishing the connection
internet	_InstanceFactory	clientConnectionFailed	connector reason	arrange to fire the waiting l{deferred} with the given failure to indicate the connection could not be established
internet	_InstanceFactory	fire	func value	clear c{self pending} to avoid a reference cycle and then invoke func
internet	ClientCreator	_connect	method	initiate a connection attempt
internet	ClientCreator	connectTCP	host port timeout bindAddress	connect to a tcp server
internet	ClientCreator	connectUNIX	address timeout checkPID	connect to a unix socket
internet	ClientCreator	connectSSL	host port contextFactory timeout	connect to an ssl server
internet	ReconnectingClientFactory	retry	connector	have this connector connect again after a suitable delay
internet	ReconnectingClientFactory	stopTrying		put a stop to any attempt to reconnect in progress
internet	ReconnectingClientFactory	resetDelay		call this method after a successful connection it resets the delay and the retry counter
internet	ReconnectingClientFactory	__getstate__		remove all of the state which is mutated by connection attempts and failures returning just the state which describes how reconnections
internet	BaseProtocol	makeConnection	transport	make a connection to a transport and a server
internet	BaseProtocol	connectionMade		called when a connection is made
internet	Protocol	logPrefix		return a prefix matching the class name to identify log messages related to this protocol instance
internet	Protocol	dataReceived	data	called whenever data is received
internet	Protocol	connectionLost	reason	called when the connection is shut down
internet	ProcessProtocol	outReceived	data	some data was received from stdout
internet	ProcessProtocol	errReceived	data	some data was received from stderr
internet	ProcessProtocol	inConnectionLost		this will be called when stdin is closed
internet	ProcessProtocol	outConnectionLost		this will be called when stdout is closed
internet	ProcessProtocol	errConnectionLost		this will be called when stderr is closed
internet	ProcessProtocol	processExited	reason	this will be called when the subprocess exits
internet	ProcessProtocol	processEnded	reason	called when the child process exits and all file descriptors associated with it have been closed
internet	AbstractDatagramProtocol	doStart		make sure startprotocol is called
internet	AbstractDatagramProtocol	doStop		make sure stopprotocol is called
internet	AbstractDatagramProtocol	startProtocol		called when a transport is connected to this protocol
internet	AbstractDatagramProtocol	stopProtocol		called when the transport is disconnected
internet	AbstractDatagramProtocol	makeConnection	transport	make a connection to a transport and a server
internet	AbstractDatagramProtocol	datagramReceived	datagram addr	called when a datagram is received
internet	DatagramProtocol	logPrefix		return a prefix matching the class name to identify log messages related to this protocol instance
internet	DatagramProtocol	connectionRefused		called due to error from write in connected mode
internet	ConnectedDatagramProtocol	datagramReceived	datagram	called when a datagram is received
internet	ConnectedDatagramProtocol	connectionFailed	failure	called if connecting failed
internet	FileWrapper	registerProducer	producer streaming	from abstract filedescriptor
internet		_fsdecode	x	decode a string to a l{unicode} representation passing through existing l{unicode} unchanged
internet		_findShebang	filename	look for a #! line and return the value following the #! if one exists or none if this file is not a script
internet		_invalidWin32App	pywinerr	determine if a pywintypes error is telling us that the given process is
internet	Process	__init__	reactor protocol command args	create a new child process
internet	Process	write	data	write data to the process' stdin
internet	Process	writeSequence	seq	write data to the process' stdin
internet	Process	writeToChild	fd data	similar to l{itransport write} but also allows the file descriptor in
internet	Process	closeStdin		close the process' stdin
internet	Process	loseConnection		close the process' stdout in and err
internet	Process	connectionLostNotify		will be called 3 times by stdout/err threads and process handle
internet	Process	__repr__		return a string representation of the process
internet		logError	err	log and return failure
internet		succeed	result	return a l{deferred} that has already had c{ callback result } called
internet		fail	result	return a l{deferred} that has already had c{ errback result } called
internet		execute	callable	create a l{deferred} from a callable and arguments
internet		maybeDeferred	f	invoke a function that may or may not return a l{deferred}
internet		setDebugging	on	enable or disable l{deferred} debugging
internet		getDebugging		determine whether l{deferred} debugging is enabled
internet	Deferred	__init__	canceller	initialize a l{deferred}
internet	Deferred	addCallbacks	callback errback callbackArgs callbackKeywords	add a pair of callbacks success and error to this l{deferred}
internet	Deferred	addCallback	callback	convenience method for adding just a callback
internet	Deferred	addErrback	errback	convenience method for adding just an errback
internet	Deferred	addBoth	callback	convenience method for adding a single callable as both a callback and an errback
internet	Deferred	addTimeout	timeout clock onTimeoutCancel	time out this l{deferred} by scheduling it to be cancelled after c{timeout} seconds
internet	Deferred	chainDeferred	d	chain another l{deferred} to this l{deferred}
internet	Deferred	callback	result	run all success callbacks that have been added to this l{deferred}
internet	Deferred	errback	fail	run all error callbacks that have been added to this l{deferred}
internet	Deferred	pause		stop processing on a l{deferred} until l{unpause}() is called
internet	Deferred	unpause		process all callbacks made since l{pause}() was called
internet	Deferred	cancel		cancel this l{deferred}
internet	Deferred	_continuation		build a tuple of callback and errback with l{_continue}
internet	Deferred	_runCallbacks		run the chain of callbacks once a result is available
internet	Deferred	__str__		return a string representation of this c{deferred}
internet	Deferred	asFuture	loop	adapt a l{deferred} into a l{asyncio future} which is bound to c{loop}
internet	Deferred	fromFuture	cls future	adapt an l{asyncio future} to a l{deferred}
internet		_cancelledToTimedOutError	value timeout	a default translation function that translates l{failure}s that are l{cancellederror}s to l{timeouterror}s
internet		ensureDeferred	coro	schedule the execution of a coroutine that awaits/yields from l{deferred}s wrapping it in a l{deferred} that will fire on success/failure of the
internet	DebugInfo	__del__		print tracebacks and die
internet	FirstError	__repr__		the i{repr} of l{firsterror} instances includes the repr of the wrapped failure's exception and the index of the l{firsterror}
internet	FirstError	__str__		the i{str} of l{firsterror} instances includes the i{str} of the entire wrapped failure including its traceback and exception and
internet	FirstError	__cmp__	other	comparison between l{firsterror} and other l{firsterror} instances is defined as the comparison of the index and sub-failure of each
internet	DeferredList	__init__	deferredList fireOnOneCallback fireOnOneErrback consumeErrors	initialize a deferredlist
internet	DeferredList	_cbDeferred	result index succeeded	internal callback for when one of my deferreds fires
internet	DeferredList	cancel		cancel this l{deferredlist}
internet		gatherResults	deferredList consumeErrors	returns via a l{deferred}, a list with the results of the given l{deferred}s - in effect a "join" of multiple deferred operations
internet		deferredGenerator	f	l{deferredgenerator} and l{waitfordeferred} help you write l{deferred}-using code that looks like a regular sequential function
internet		returnValue	val	return val from a l{inlinecallbacks} generator
internet		inlineCallbacks	f	inlinecallbacks helps you write l{deferred}-using code that looks like a regular sequential function
internet	_ConcurrencyPrimitive	run		acquire run release
internet	DeferredLock	_cancelAcquire	d	remove a deferred d from our waiting list as the deferred has been canceled
internet	DeferredLock	acquire		attempt to acquire the lock returns a l{deferred} that fires on
internet	DeferredLock	release		release the lock if there is a waiting list then the first
internet	DeferredSemaphore	__init__	tokens	@param tokens initial value of l{tokens} and l{limit}
internet	DeferredSemaphore	_cancelAcquire	d	remove a deferred d from our waiting list as the deferred has been canceled
internet	DeferredSemaphore	acquire		attempt to acquire the token
internet	DeferredSemaphore	release		release the token
internet	DeferredQueue	_cancelGet	d	remove a deferred d from our waiting list as the deferred has been canceled
internet	DeferredQueue	put	obj	add an object to this queue
internet	DeferredQueue	get		attempt to retrieve and remove an object from the queue
internet	DeferredFilesystemLock	__init__	name scheduler	@param name the name of the lock to acquire
internet	DeferredFilesystemLock	deferUntilLocked	timeout	wait until we acquire this lock this method is not safe for
internet	_AbortingMixin	abortConnection		aborts the connection immediately dropping any buffered data
internet	Connection	getHandle		return the socket for this connection
internet	Connection	doRead		calls self protocol datareceived with all available data
internet	Connection	writeSomeData	data	write as much as possible of the given data to this tcp connection
internet	Connection	connectionLost	reason	see abstract filedescriptor connectionlost()
internet	Connection	logPrefix		return the prefix to log with when i own the logging thread
internet	_BaseBaseClient	_finishInit	whenDone skt error reactor	called by subclasses to continue to the stage of initialization where the socket connect attempt is made
internet	_BaseBaseClient	resolveAddress		resolve the name that was passed to this l{_basebaseclient}, if necessary and then move on to attempting the connection once an
internet	_BaseBaseClient	_setRealAddress	address	set the resolved address of this l{_basebaseclient} and initiate the connection attempt
internet	_BaseBaseClient	failIfNotConnected	err	generic method called when the attempts to connect failed it basically
internet	_BaseBaseClient	stopConnecting		if a connection attempt is still outstanding (i e no connection is
internet	_BaseBaseClient	connectionLost	reason	invoked by lower-level logic when it's time to clean the socket up
internet	BaseClient	_stopReadingAndWriting		implement the posix-ish (i e
internet	BaseClient	_collectSocketDetails		clean up references to the socket and its file descriptor
internet	BaseClient	createInternetSocket		internal create a non-blocking socket using self
internet	BaseClient	doConnect		initiate the outgoing connection attempt
internet	BaseClient	_connectDone		this is a hook for when a connection attempt has succeeded
internet		_resolveIPv6	ip port	resolve an ipv6 literal into an ipv6 address
internet	_BaseTCPClient	getHost		returns an l{ipv4address} or l{ipv6address}
internet	_BaseTCPClient	getPeer		returns an l{ipv4address} or l{ipv6address}
internet	Server	__init__	sock protocol client server	server sock protocol client server sessionno initialize it with a socket a protocol a descriptor for my peer (a
internet	Server	__repr__		a string representation of this connection
internet	Server	_fromConnectedSocket	cls fileDescriptor addressFamily factory	create a new l{server} based on an existing connected i{sock_stream} socket
internet	Server	getHost		returns an l{ipv4address} or l{ipv6address}
internet	Server	getPeer		returns an l{ipv4address} or l{ipv6address}
internet	Port	__init__	port factory backlog interface	initialize with a numeric port to listen on
internet	Port	_fromListeningDescriptor	cls reactor fd addressFamily	create a new l{port} based on an existing listening i{sock_stream} socket
internet	Port	startListening		create and bind my socket and begin listening on it
internet	Port	doRead		called when my socket is ready for reading
internet	Port	loseConnection	connDone	stop accepting connections on this port
internet	Port	_logConnectionLostMsg		log message for closing port
internet	Port	connectionLost	reason	cleans up the socket
internet	Port	logPrefix		returns the name of my class to prefix log entries with
internet	Port	getHost		return an l{ipv4address} or l{ipv6address} indicating the listening address of this port
internet	Connector	_makeTransport		create a l{client} bound to this l{connector}
internet	Connector	getDestination		@see l{twisted internet interfaces iconnector getdestination}
internet		getProcessOutput	executable args env path	spawn a process and return its output as a deferred returning a l{bytes}
internet		getProcessValue	executable args env path	spawn a process and return its exit code as a deferred
internet		getProcessOutputAndValue	executable args env path	spawn a process and returns a deferred that will be called back with
internet		runWithWarningsSuppressed	suppressedWarnings f	run the function c{f}, but with some warnings suppressed
internet		suppressWarnings	f	wrap c{f} in a callable which suppresses the indicated warnings before invoking c{f} and unsuppresses them afterwards
internet	Port	__init__	port proto interface maxPacketSize	@param port a port number on which to listen
internet	Port	_fromListeningDescriptor	cls reactor fd addressFamily	create a new l{port} based on an existing listening i{sock_dgram} socket
internet	Port	getHandle		return a socket object
internet	Port	startListening		create and bind my socket and begin listening on it
internet	Port	_bindSocket		prepare and assign a l{socket socket} instance to
internet	Port	doRead		called when my socket is ready for reading
internet	Port	write	datagram addr	write a datagram
internet	Port	writeSequence	seq addr	write a datagram constructed from an iterable of l{bytes}
internet	Port	connect	host port	'connect' to remote server
internet	Port	connectionLost	reason	cleans up my socket
internet	Port	setLogStr		initialize the c{logstr} attribute to be used by c{logprefix}
internet	Port	_setAddressFamily		resolve address family for the socket
internet	Port	logPrefix		return the prefix to log with
internet	Port	getHost		return the local address of the udp connection
internet	Port	setBroadcastAllowed	enabled	set whether this port may broadcast this is disabled by default
internet	Port	getBroadcastAllowed		checks if broadcast is currently allowed on this port
internet	MulticastMixin	setOutgoingInterface	addr	returns deferred of success
internet	MulticastMixin	joinGroup	addr interface	join a multicast group returns deferred of success
internet	MulticastMixin	leaveGroup	addr interface	leave multicast group return deferred of success
internet	MulticastPort	__init__	port proto interface maxPacketSize	@see l{twisted internet interfaces ireactormulticast listenmulticast}
internet	_ConsumerMixin	startWriting		override in a subclass to cause the reactor to monitor this selectable for write events
internet	_ConsumerMixin	registerProducer	producer streaming	register to receive data from a producer
internet	_ConsumerMixin	unregisterProducer		stop consuming data from a producer without disconnecting
internet	_LogOwner	_getLogPrefix	applicationObject	determine the log prefix to use for messages related to c{applicationobject}, which may or may not be an
internet	_LogOwner	logPrefix		override this method to insert custom logging behavior its
internet	FileDescriptor	__init__	reactor	@param reactor an l{ireactorfdset} provider which this descriptor will use to get readable and writeable event notifications
internet	FileDescriptor	connectionLost	reason	the connection was lost
internet	FileDescriptor	writeSomeData	data	write as much as possible of the given data immediately
internet	FileDescriptor	doRead		called when data is available for reading
internet	FileDescriptor	doWrite		called when data can be written
internet	FileDescriptor	_postLoseConnection		called after a loseconnection(), when all data has been written
internet	FileDescriptor	_isSendBufferFull		determine whether the user-space send buffer for this transport is full or not
internet	FileDescriptor	_maybePauseProducer		possibly pause a producer if there is one and the send buffer is full
internet	FileDescriptor	write	data	reliably write some data
internet	FileDescriptor	writeSequence	iovec	reliably write a sequence of data
internet	FileDescriptor	loseConnection	_connDone	close the connection at the next available opportunity
internet	FileDescriptor	stopReading		stop waiting for read availability
internet	FileDescriptor	stopWriting		stop waiting for write availability
internet	FileDescriptor	startReading		start waiting for read availability
internet	FileDescriptor	startWriting		start waiting for write availability
internet	FileDescriptor	stopConsuming		stop consuming data
internet	FileDescriptor	fileno		file descriptor number for select()
internet		isIPAddress	addr family	determine whether the given string represents an ip address of the given family by default an ipv4 address
internet		isIPv6Address	addr	determine whether the given string represents an ipv6 address
internet		deferToThreadPool	reactor threadpool f	call the function c{f} using a thread from the given threadpool and return the result as a deferred
internet		deferToThread	f	run a function in a thread and return the result as a deferred
internet		_runMultiple	tupleList	run a list of functions
internet		callMultipleInThread	tupleList	run a list of functions in the same thread
internet		blockingCallFromThread	reactor f	run a function in the reactor from a thread and wait for the result synchronously
internet	Glib2Reactor	__init__		override init to set the c{usegtk} flag
internet		install		configure the twisted mainloop to be run inside the glib mainloop
internet	Win32Reactor	_makeSocketEvent	fd action why	make a win32 event object for a socket
internet	Win32Reactor	addEvent	event fd action	add a new win32 event to the event loop
internet	Win32Reactor	removeEvent	event	remove an event
internet	Win32Reactor	addReader	reader	add a socket filedescriptor for notification of data available to read
internet	Win32Reactor	addWriter	writer	add a socket filedescriptor for notification of data available to write
internet	Win32Reactor	removeReader	reader	remove a selectable for notification of data available to read
internet	Win32Reactor	removeWriter	writer	remove a selectable for notification of data available to write
internet	Win32Reactor	removeAll		remove all selectables and return a list of them
internet	_ThreadFDWrapper	logPrefix		return the original handler's log prefix as it was given to c{__init__}
internet	_ThreadFDWrapper	_execute		callback fired when the associated event is set run the c{action}
internet	_ThreadFDWrapper	connectionLost	reason	pass through to the wrapped descriptor but in the main reactor thread instead of the helper c{win32reactor} thread
internet	_ThreadedWin32EventsMixin	_unmakeHelperReactor		stop and discard the reactor started by c{_makehelperreactor}
internet	_ThreadedWin32EventsMixin	_makeHelperReactor		create and in a new thread start a l{win32reactor} instance to use for the implementation of l{ireactorwin32events}
internet		_getInstallFunction	platform	return a function to install the reactor most suited for the given platform
internet		_ancillaryDescriptor	fd	pack an integer into an ancillary data structure suitable for use with l{sendmsg
internet	_SendmsgMixin	_isSendBufferFull		determine whether the user-space send buffer for this transport is full or not
internet	_SendmsgMixin	sendFileDescriptor	fileno	queue the given file descriptor to be sent and start trying to send it
internet	_SendmsgMixin	writeSomeData	data	send as much of c{data} as possible also send any pending file
internet	_SendmsgMixin	doRead		calls {iprotocol datareceived} with all available data and
internet	_SendmsgMixin	_ancillaryLevelSOLSOCKETTypeSCMRIGHTS	cmsgData	processes ancillary data with level sol_socket and type scm_rights indicating that the ancillary data payload holds file descriptors
internet		_inFilesystemNamespace	path	determine whether the given unix socket path is in a filesystem namespace
internet	_UNIXPort	getHost		returns a unixaddress
internet	Port	startListening		create and bind my socket and begin listening on it
internet	Port	_logConnectionLostMsg		log message for closing socket
internet	DatagramPort	__init__	addr proto maxPacketSize mode	initialize with address to listen on
internet	DatagramPort	write	datagram address	write a datagram
internet	DatagramPort	connectionLost	reason	cleans up my socket
internet	ConnectedDatagramPort	connectionFailed	reason	called when a connection fails stop listening on the socket
internet	ConnectedDatagramPort	doRead		called when my socket is ready for reading
internet	ConnectedDatagramPort	write	data	write a datagram
internet	wxRunner	run		execute pending wx events followed by wx idle events and reschedule
internet		install	app	install the wxpython support given a wxapp instance
internet		win32select	r w e timeout	win32 select wrapper
internet	SelectReactor	__init__		initialize file descriptor tracking dictionaries and the base class
internet	SelectReactor	doSelect	timeout	run one iteration of the i/o monitor loop
internet	SelectReactor	addReader	reader	add a filedescriptor for notification of data available to read
internet	SelectReactor	addWriter	writer	add a filedescriptor for notification of data available to write
internet	SelectReactor	removeReader	reader	remove a selectable for notification of data available to read
internet	SelectReactor	removeWriter	writer	remove a selectable for notification of data available to write
internet		install		configure the twisted mainloop to be run using the select() reactor
internet		installHandler	fd	install a signal handler which will write a byte to c{fd} when i{sigchld} is received
internet		isDefaultHandler		determine whether the i{sigchld} handler is the default or not
internet	UNIXAddress	name	name	on unix paths are always bytes however as paths are l{unicode} on
internet	StandardIO	stopReading		compatibility only don't use call pauseproducing
internet	StandardIO	startReading		compatibility only don't use call resumeproducing
internet	HostResolution	__init__	name	create a l{hostresolution} with the given name
internet	GAIResolver	__init__	reactor getThreadPool getaddrinfo	create a l{gairesolver}
internet	GAIResolver	resolveHostName	resolutionReceiver hostName portNumber addressTypes	see l{ihostnameresolver resolvehostname}
internet	SimpleResolverComplexifier	__init__	simpleResolver	construct a l{simpleresolvercomplexifier} with an l{iresolversimple}
internet	SimpleResolverComplexifier	resolveHostName	resolutionReceiver hostName portNumber addressTypes	see l{ihostnameresolver resolvehostname}
internet	FirstOneWins	__init__	deferred	@param deferred the l{deferred} to fire when the first resolution result arrives
internet	FirstOneWins	resolutionBegan	resolution	see l{iresolutionreceiver resolutionbegan}
internet	FirstOneWins	addressResolved	address	see l{iresolutionreceiver addressresolved}
internet	FirstOneWins	resolutionComplete		see l{iresolutionreceiver resolutioncomplete}
internet	ComplexResolverSimplifier	__init__	nameResolver	create a l{complexresolversimplifier} with an l{ihostnameresolver}
internet	ComplexResolverSimplifier	getHostByName	name timeouts	see l{iresolversimple gethostbyname}
internet		_oldGiInit		make sure pygtk and gi aren't loaded at the same time and import glib if possible
internet	GIReactor	registerGApplication	app	register a c{gio application} or c{gtk application}, whose main loop
internet	PortableGIReactor	registerGApplication	app	register a c{gio application} or c{gtk application}, whose main loop
internet		install	useGtk	configure the twisted mainloop to be run inside the glib mainloop
internet	SerialPort	_finishPortSetup		finish setting up the serial port
internet	SerialPort	connectionLost	reason	called when the serial port disconnects
internet.iocpreactor	IOCPReactor	doIteration	timeout	poll the io completion port for new events
internet.iocpreactor	IOCPReactor	listenTCP	port factory backlog interface	@see twisted internet interfaces ireactortcp listentcp
internet.iocpreactor	IOCPReactor	connectTCP	host port factory timeout	@see twisted internet interfaces ireactortcp connecttcp
internet.iocpreactor	IOCPReactor	listenUDP	port protocol interface maxPacketSize	connects a given l{datagramprotocol} to the given numeric udp port
internet.iocpreactor	IOCPReactor	listenMulticast	port protocol interface maxPacketSize	connects a given datagramprotocol to the given numeric udp port
internet.iocpreactor	IOCPReactor	spawnProcess	processProtocol executable args env	spawn a process
internet.iocpreactor	IReadHandle	readFromHandle	bufflist evt	read into the given buffers from this handle
internet.iocpreactor	IWriteHandle	writeToHandle	buff evt	write the given buffer to this handle
internet.iocpreactor	Connection	dataReceived	rbuffer	@param rbuffer data received
internet.iocpreactor	Connection	writeToHandle	buff evt	send c{buff} to current file handle using c{_iocp send} the buffer
internet.iocpreactor	Connection	logPrefix		return the prefix to log with when i own the logging thread
internet.iocpreactor	Connection	write	data	write some data either directly to the underlying handle or if tls has been started to the l{tlsmemorybioprotocol} for it to encrypt and
internet.iocpreactor	Connection	writeSequence	iovec	write some data either directly to the underlying handle or if tls has been started to the l{tlsmemorybioprotocol} for it to encrypt and
internet.iocpreactor	Connection	loseConnection	reason	close the underlying handle or if tls has been started first shut it down
internet.iocpreactor	Connection	registerProducer	producer streaming	register a producer
internet.iocpreactor	Connection	unregisterProducer		unregister a producer
internet.iocpreactor	Client	createInternetSocket		create a socket registered with the iocp reactor
internet.iocpreactor	Client	_collectSocketDetails		clean up potentially circular references to the socket and to its c{getfilehandle} method
internet.iocpreactor	Client	_stopReadingAndWriting		remove the active handle from the reactor
internet.iocpreactor	Server	__init__	sock protocol clientAddr serverAddr	server sock protocol client server sessionno initialize me with a socket a protocol a descriptor for my peer (a
internet.iocpreactor	Server	__repr__		a string representation of this connection
internet.iocpreactor	Server	getHost		returns an ipv4address
internet.iocpreactor	Server	getPeer		returns an ipv4address
internet.iocpreactor	Port	loseConnection	connDone	stop accepting connections on this port
internet.iocpreactor	Port	_logConnectionLostMsg		log message for closing port
internet.iocpreactor	Port	connectionLost	reason	cleans up the socket
internet.iocpreactor	Port	logPrefix		returns the name of my class to prefix log entries with
internet.iocpreactor	Port	getHost		returns an ipv4address
internet.iocpreactor	Port	__init__	port proto interface maxPacketSize	initialize with a numeric port to listen on
internet.iocpreactor	Port	_setAddressFamily		resolve address family for the socket
internet.iocpreactor	Port	getHandle		return a socket object
internet.iocpreactor	Port	startListening		create and bind my socket and begin listening on it
internet.iocpreactor	Port	write	datagram addr	write a datagram
internet.iocpreactor	Port	connect	host port	'connect' to remote server
internet.iocpreactor	Port	connectionLost	reason	cleans up my socket
internet.iocpreactor	Port	setLogStr		initialize the c{logstr} attribute to be used by c{logprefix}
internet.iocpreactor	Port	logPrefix		returns the name of my class to prefix log entries with
internet.iocpreactor	Port	getHost		return the local address of the udp connection
internet.iocpreactor	Port	setBroadcastAllowed	enabled	set whether this port may broadcast this is disabled by default
internet.iocpreactor	Port	getBroadcastAllowed		checks if broadcast is currently allowed on this port
internet.iocpreactor	MulticastMixin	setOutgoingInterface	addr	returns deferred of success
internet.iocpreactor	MulticastMixin	joinGroup	addr interface	join a multicast group returns deferred of success
internet.iocpreactor	MulticastMixin	leaveGroup	addr interface	leave multicast group return deferred of success
internet.iocpreactor	FileHandle	_dispatchData		dispatch previously read data return true if self reading and we don't
internet.iocpreactor	FileHandle	_handleRead	rc data evt	returns false if we should stop reading for now
internet.iocpreactor	FileHandle	_handleWrite	rc numBytesWritten evt	returns false if we should stop writing for now
internet.iocpreactor	FileHandle	write	data	reliably write some data
internet.iocpreactor	FileHandle	connectionLost	reason	the connection was lost
internet.iocpreactor	FileHandle	loseConnection	_connDone	close the connection at the next available opportunity
internet.iocpreactor	FileHandle	stopConsuming		stop consuming data
python		runCommand	args	execute a vector of arguments
python	IVCSCommand	ensureIsWorkingDirectory	path	ensure that c{path} is a working directory of this vcs
python	IVCSCommand	isStatusClean	path	return the git status of the files in the specified path
python	IVCSCommand	remove	path	remove the specified path from a the vcs
python	IVCSCommand	exportTo	fromDir exportDir	export the content of the vcsrepository to the specified directory
python	GitCommand	ensureIsWorkingDirectory	path	ensure that c{path} is a git working directory
python	GitCommand	isStatusClean	path	return the git status of the files in the specified path
python	GitCommand	remove	path	remove the specified path from a git repository
python	GitCommand	exportTo	fromDir exportDir	export the content of a git repository to the specified directory
python		getRepositoryCommand	directory	detect the vcs used in the specified directory and return a l{gitcommand} if the directory is a git repository
python	Project	getVersion		@return a l{incremental version} specifying the version number of the
python		findTwistedProjects	baseDirectory	find all twisted-style projects beneath a base directory
python		replaceInFile	filename oldToNew	i replace the text oldstr' with newstr' in filename' using science
python	APIBuilder	build	projectName projectURL sourceURL packagePath	call pydoctor's entry point with options which will generate html documentation for the specified package's api
python	NewsBuilder	_today		return today's date as a string in yyyy-mm-dd format
python	NewsBuilder	_findChanges	path ticketType	load all the feature ticket summaries
python	NewsBuilder	_formatHeader	header	format a header for a news file
python	NewsBuilder	_writeHeader	fileObj header	write a version header to the given file
python	NewsBuilder	_writeSection	fileObj header tickets	write out one section features bug fixes etc to the given file
python	NewsBuilder	_writeMisc	fileObj header tickets	write out a miscellaneous-changes section to the given file
python	NewsBuilder	build	path output header	load all of the change information from the given directory and write it out to the given output file
python	NewsBuilder	_deleteFragments	path	delete the change information to clean up the repository once the news files have been built
python	NewsBuilder	_getNewsName	project	return the name of c{project} that should appear in news
python	NewsBuilder	_iterProjects	baseDirectory	iterate through the twisted projects in c{basedirectory}, yielding everything we need to know to build news for them
python	NewsBuilder	buildAll	baseDirectory	find all of the twisted subprojects beneath c{basedirectory} and update their news files from the ticket change description files in their
python	NewsBuilder	main	args	build all news files
python	SphinxBuilder	main	args	build the main documentation
python	SphinxBuilder	build	docDir buildDir version	build the documentation in c{docdir} with sphinx
python		filePathDelta	origin destination	return a list of strings that represent c{destination} as a path relative to c{origin}
python	BuildAPIDocsScript	buildAPIDocs	projectRoot output	build the api documentation of twisted with our project policy
python	BuildAPIDocsScript	main	args	build api documentation
python	CheckTopfileScript	main	args	run the script
python	UserDatabase	addUser	username password uid gid	add a new user record to this database
python	UserDatabase	getpwuid	uid	return the user record corresponding to the given uid
python	UserDatabase	getpwnam	name	return the user record corresponding to the given username
python	UserDatabase	getpwall		return a list of all user records
python	ShadowDatabase	addUser	username password lastChange min	add a new user record to this database
python	ShadowDatabase	getspnam	username	return the shadow user record corresponding to the given username
python	ShadowDatabase	getspall		return a list of all shadow user records
python	SyslogObserver	__init__	prefix options facility	@type prefix c{str} @param prefix the syslog prefix to use
python	SyslogObserver	emit	eventDict	send a message event to the i{syslog}
python		startLogging	prefix options facility setStdout	send all twisted logging output to syslog from now on
python		sh	command null prompt	i'll try to execute c{command}, and if c{prompt} is true i'll ask before running it
python	ChunkingZipFile	readfile	name	return file-like object for name
python	_FileEntry	__init__	chunkingZipFile length	create a l{_fileentry} from a l{chunkingzipfile}
python	_FileEntry	isatty		returns false because zip files should not be ttys
python	_FileEntry	close		close self file-like object
python	_FileEntry	readline		read a line
python	_FileEntry	__next__		implement next as file does (like readline except raises stopiteration
python	_FileEntry	readlines		returns a list of all the lines
python	_FileEntry	xreadlines		returns an iterator so self
python	_FileEntry	__iter__		returns an iterator so self
python		countZipFileChunks	filename chunksize	predict the number of chunks that will be extracted from the entire zipfile given chunksize blocks
python		countFileChunks	zipinfo chunksize	count the number of chunks that will result from the given c{zipinfo}
python		unzipIterChunky	filename directory overwrite chunksize	return a generator for the zipfile this implementation will yield after
python		_stub_islink	path	always return c{false} if the operating system does not support symlinks
python	IFilePath	child	name	obtain a direct child of this file path the child may or may not
python	IFilePath	open	mode	opens this file path with the given mode
python	IFilePath	changed		clear any cached information about the state of this path on disk
python	IFilePath	getsize		retrieve the size of this file in bytes
python	IFilePath	getModificationTime		retrieve the time of last access from this file
python	IFilePath	getStatusChangeTime		retrieve the time of the last status change for this file
python	IFilePath	getAccessTime		retrieve the time that this file was last accessed
python	IFilePath	exists		check if this file path exists
python	IFilePath	isdir		check if this file path refers to a directory
python	IFilePath	isfile		check if this file path refers to a regular file
python	IFilePath	children		list the children of this path object
python	IFilePath	basename		retrieve the final component of the file path's path everything after the final path separator
python	IFilePath	parent		a file path for the directory containing the file at this file path
python	IFilePath	sibling	name	a file path for the directory containing the file at this file path
python	UnlistableError	__init__	originalException	create an unlistableerror exception
python		_secureEnoughString	path	compute a string usable as a new temporary filename
python	AbstractFilePath	getContent		retrieve the contents of the file at this path
python	AbstractFilePath	parents		retrieve an iterator of all the ancestors of this path
python	AbstractFilePath	children		list the children of this path object
python	AbstractFilePath	walk	descend	yield myself then each of my children and each of those children's children in turn
python	AbstractFilePath	sibling	path	return a l{filepath} with the same directory as this instance but with a basename of c{path}
python	AbstractFilePath	descendant	segments	retrieve a child or child's child of this path
python	AbstractFilePath	segmentsFrom	ancestor	return a list of segments between a child and its ancestor
python	AbstractFilePath	__hash__		hash the same as another l{filepath} with the same path as mine
python	AbstractFilePath	getmtime		deprecated use getmodificationtime instead
python	AbstractFilePath	getatime		deprecated use getaccesstime instead
python	AbstractFilePath	getctime		deprecated use getstatuschangetime instead
python	RWX	shorthand		returns a short string representing the permission bits looks like
python	Permissions	shorthand		returns a short string representing the permission bits looks like
python		_asFilesystemBytes	path encoding	return c{path} as a string of l{bytes} suitable for use on this system's filesystem
python		_asFilesystemText	path encoding	return c{path} as a string of l{unicode} suitable for use on this system's filesystem
python		_coerceToFilesystemEncoding	path newpath encoding	return a c{newpath} that is suitable for joining to c{path}
python	FilePath	__init__	path alwaysCreate	convert a path string to an absolute path if necessary and initialize the l{filepath} with the result
python	FilePath	__getstate__		support serialization by discarding cached l{os stat} results and
python	FilePath	sep		return a filesystem separator
python	FilePath	_asBytesPath	encoding	return the path of this l{filepath} as bytes
python	FilePath	_asTextPath	encoding	return the path of this l{filepath} as text
python	FilePath	asBytesMode	encoding	return this l{filepath} in l{bytes}-mode
python	FilePath	asTextMode	encoding	return this l{filepath} in l{unicode}-mode
python	FilePath	_getPathAsSameTypeAs	pattern	if c{pattern} is c{bytes}, return l{filepath path} as l{bytes}
python	FilePath	child	path	create and return a new l{filepath} representing a path contained by c{self}
python	FilePath	preauthChild	path	use me if c{path} might have slashes in it but you know they're safe
python	FilePath	childSearchPreauth		return my first existing child with a name in c{paths}
python	FilePath	siblingExtensionSearch		attempt to return a path with my name given multiple possible extensions
python	FilePath	realpath		returns the absolute target as a l{filepath} if self is a link self otherwise
python	FilePath	siblingExtension	ext	attempt to return a path with my name given the extension at c{ext}
python	FilePath	linkTo	linkFilePath	creates a symlink to self to at the path in the l{filepath} c{linkfilepath}
python	FilePath	open	mode	open this file using c{mode} or for writing if c{alwayscreate} is c{true}
python	FilePath	restat	reraise	re-calculate cached effects of 'stat' to refresh information on this
python	FilePath	changed		clear any cached information about the state of this path on disk
python	FilePath	chmod	mode	changes the permissions on self if possible propagates errors from
python	FilePath	getsize		retrieve the size of this file in bytes
python	FilePath	getModificationTime		retrieve the time of last access from this file
python	FilePath	getStatusChangeTime		retrieve the time of the last status change for this file
python	FilePath	getAccessTime		retrieve the time that this file was last accessed
python	FilePath	getInodeNumber		retrieve the file serial number also called inode number which distinguishes this file from all other files on the same device
python	FilePath	getDevice		retrieves the device containing the file the inode number and device
python	FilePath	getNumberOfHardLinks		retrieves the number of hard links to the file
python	FilePath	getUserID		returns the user id of the file's owner
python	FilePath	getGroupID		returns the group id of the file
python	FilePath	getPermissions		returns the permissions of the file should also work on windows
python	FilePath	exists		check if this l{filepath} exists
python	FilePath	isdir		check if this l{filepath} refers to a directory
python	FilePath	isfile		check if this file path refers to a regular file
python	FilePath	isBlockDevice		returns whether the underlying path is a block device
python	FilePath	isSocket		returns whether the underlying path is a socket
python	FilePath	islink		check if this l{filepath} points to a symbolic link
python	FilePath	isabs		check if this l{filepath} refers to an absolute path
python	FilePath	listdir		list the base names of the direct children of this l{filepath}
python	FilePath	splitext		split the file path into a pair c{ root ext } such that c{root + ext == path}
python	FilePath	touch		updates the access and last modification times of the file at this file path to the current time
python	FilePath	remove		removes the file or directory that is represented by self if
python	FilePath	makedirs	ignoreExistingDirectory	create all directories not yet existing in c{path} segments using l{os
python	FilePath	globChildren	pattern	assuming i am representing a directory return a list of filepaths representing my children that match the given pattern
python	FilePath	basename		retrieve the final component of the file path's path everything after the final path separator
python	FilePath	dirname		retrieve all of the components of the l{filepath}'s path except the last one everything up to the final path separator
python	FilePath	parent		a file path for the directory containing the file at this file path
python	FilePath	setContent	content ext	replace the file at this path with a new file that contains the given bytes trying to avoid data-loss in the meanwhile
python	FilePath	createDirectory		create the directory the l{filepath} refers to
python	FilePath	requireCreate	val	sets the c{alwayscreate} variable
python	FilePath	create		exclusively create a file only if this file previously did not exist
python	FilePath	temporarySibling	extension	construct a path referring to a sibling of this path
python	FilePath	copyTo	destination followLinks	copies self to destination
python	FilePath	moveTo	destination followLinks	move self to destination - basically renaming self to whatever destination is named
python	FilePath	statinfo	value	filepath statinfo is deprecated
python		addPre	klass name func	hook addpre klass name func -> none
python		addPost	klass name func	hook addpost klass name func -> none
python		removePre	klass name func	hook removepre klass name func -> none
python		removePost	klass name func	hook removepre klass name func -> none
python		_XXX	k n s	string manipulation garbage
python		PRE	k n	private munging to turn a method name into a pre-hook-method-name
python		POST	k n	private munging to turn a method name into a post-hook-method-name
python		ORIG	k n	private munging to turn a method name into an original' identifier
python		_addHook	klass name phase func	private adds a hook to a method on a class
python		_removeHook	klass name phase func	private removes a hook from a method on a class
python		_enhook	klass name	private causes a certain method name to be hooked on a class
python		_dehook	klass name	private causes a certain method name no longer to be hooked on a class
python	InsensitiveDict	__init__	dict preserve	create an empty dictionary or update from 'dict'
python	InsensitiveDict	__getitem__	key	retrieve the value associated with 'key' in any case
python	InsensitiveDict	__setitem__	key value	associate 'value' with 'key' if 'key' already exists but
python	InsensitiveDict	has_key	key	case insensitive test whether 'key' exists
python	InsensitiveDict	keys		list of keys in their original case
python	InsensitiveDict	values		list of values
python	InsensitiveDict	items		list of key value pairs
python	InsensitiveDict	get	key default	retrieve value associated with 'key' or return default value if 'key' doesn't exist
python	InsensitiveDict	setdefault	key default	if 'key' doesn't exist associate it with the 'default' value
python	InsensitiveDict	update	dict	copy key value pairs from 'dict'
python	InsensitiveDict	__repr__		string representation of the dictionary
python		uniquify	lst	make the elements of a list unique by inserting them into a dictionary
python		padTo	n seq default	pads a sequence out to n elements filling in with a default value if it is not long enough
python		sibpath	path sibling	return the path to a sibling of a file in the filesystem
python		_getpass	prompt	helper to turn ioerrors into keyboardinterrupts
python		getPassword	prompt confirm forceTTY confirmPrompt	obtain a password by prompting or from stdin
python		makeStatBar	width maxPosition doneChar undoneChar	creates a function that will return a string representing a progress bar
python		spewer	frame s ignored	a trace function for sys settrace that prints every function or method call
python		searchupwards	start files dirs	walk upwards from start looking for a directory containing all files and directories given as arguments :
python	LineLog	__init__	size	create a new log with size lines of storage default 10
python	LineLog	clear		empty the log
python		raises	exception f	determine whether the given call raises the given exception
python	IntervalDifferential	__init__	intervals default	@type intervals c{list} of c{int}, c{long}, or c{float} param @param intervals the intervals between instants
python		switchUID	uid gid euid	attempts to switch the uid/euid and gid/egid for the current process
python		untilConcludes	f	call c{f} with the given arguments handling c{eintr} by retrying
python		mergeFunctionMetadata	f g	overwrite c{g}'s name and docstring with values from c{f} update
python		nameToLabel	mname	convert a string like a variable name into a slightly more human-friendly string with spaces and capitalized letters
python		uidFromString	uidString	convert a user identifier as a string into an integer uid
python		gidFromString	gidString	convert a group identifier as a string into an integer gid
python		runAsEffectiveUser	euid egid function	run the given function wrapped with seteuid/setegid calls
python		runWithWarningsSuppressed	suppressedWarnings f	run c{f(*args **kwargs)}, but with some warnings suppressed
python		getSetupArgs	extensions	@return the keyword arguments to be used the the setup method
python	build_ext_twisted	prepare_extensions		prepare the c{self extensions} attribute (used by
python	build_ext_twisted	build_extensions		check to see which extension modules to build and then build them
python	build_ext_twisted	_check_header	header_name	check if the given header can be included by trying to compile a file that contains only an #include line
python		_checkCPython	sys platform	checks if this implementation is cpython
python	ListenFDs	__init__	descriptors	@param descriptors the descriptors which will be returned from calls to c{inheriteddescriptors}
python	ListenFDs	fromEnvironment	cls environ start	@param environ a dictionary-like object to inspect to discover inherited descriptors
python	ListenFDs	inheritedDescriptors		@return the configured list of descriptors
python		_isPythonIdentifier	string	cheezy fake test for proper identifier-ness
python	_ModuleIteratorHelper	iterModules		loop over the modules present below this entry or package on pythonpath
python	_ModuleIteratorHelper	walkModules	importPackages	similar to l{itermodules}, this yields self and then every module in my package or entry and every submodule in each package or entry
python	_ModuleIteratorHelper	_subModuleName	mn	this is a hook to provide packages with the ability to specify their names as a prefix to submodules here
python	_ModuleIteratorHelper	_packagePaths		implement in subclasses to specify where to look for modules
python	_ModuleIteratorHelper	_getEntry		implement in subclasses to specify what path entry submodules will come from
python	_ModuleIteratorHelper	__getitem__	modname	retrieve a module from below this path or package
python	_ModuleIteratorHelper	__iter__		implemented to raise notimplementederror for clarity so that attempting to loop over this object won't call __getitem__
python	PythonAttribute	__init__	name onObject loaded pythonValue	create a pythonattribute this is a private constructor do not construct
python	PythonAttribute	isLoaded		return a boolean describing whether the attribute this describes has actually been loaded into memory by importing its module
python	PythonAttribute	load	default	load the value associated with this attribute
python	PythonModule	__init__	name filePath pathEntry	create a pythonmodule do not construct this directly instead inspect a
python	PythonModule	__repr__		return a string representation including the module name
python	PythonModule	isLoaded		determine if the module is loaded into sys modules
python	PythonModule	iterAttributes		list all the attributes defined in this module
python	PythonModule	isPackage		returns true if this module is also a package and might yield something from itermodules
python	PythonModule	load	default	load this module
python	PythonModule	__eq__	other	pythonmodules with the same name are equal
python	PythonModule	__ne__	other	pythonmodules with different names are not equal
python	PythonModule	_subModuleName	mn	submodules of this module are prefixed with our name
python	PythonModule	_packagePaths		yield a sequence of filepath-like objects which represent path segments
python	PathEntry	__init__	filePath pythonPath	create a pathentry this is a private constructor
python	IPathImportMapper	mapPath	pathLikeString	return a filepath-like object
python	_ZipMapImpl	mapPath	fsPathString	map the given fs path to a zippath by looking at the zipimporter's "archive" attribute and using it as our ziparchive root then walking
python		_defaultSysPathFactory		provide the default behavior of pythonpath's sys path factory which is to
python	PythonPath	__init__	sysPath moduleDict sysPathHooks importerCache	create a pythonpath you almost certainly want to use
python	PythonPath	_getSysPath		retrieve the current value of the module search path list
python	PythonPath	_findEntryPathString	modobj	determine where a given python module object came from by looking at path entries
python	PythonPath	_smartPath	pathName	given a path entry from sys path which may refer to an importer
python	PythonPath	iterEntries		iterate the entries on my syspath
python	PythonPath	__getitem__	modname	get a python module by its given fully-qualified name
python	PythonPath	__contains__	module	check to see whether or not a module exists on my import path
python	PythonPath	__repr__		display my syspath and moduledict in a string representation
python	PythonPath	iterModules		yield all top-level modules on my syspath
python	PythonPath	walkModules	importPackages	similar to l{itermodules}, this yields every module on the path then every submodule in each package or entry
python		walkModules	importPackages	deeply iterate all modules on the global python path
python		iterModules		iterate all modules and top-level packages on the global python path but do not descend into packages
python		getModule	moduleName	retrieve a module from the system path
python	Sensitive	latestVersionOf	anObject	get the latest version of an object
python		latestFunction	oldFunc	get the latest version of a function
python		latestClass	oldClass	get the latest version of a class
python		updateInstance		updates an instance to be current
python		__getattr__	name	a getattr method to cause a class to be refreshed
python		rebuild	module doLog	reload a module and do as much as possible to replace its references
python		_minimalPercentEncode	text safe	percent-encode only the characters that are syntactically necessary for serialization preserving any iri-style textual data
python		_maximalPercentEncode	text safe	percent-encode everything required to convert a portion of an iri to a portion of a uri
python		_percentDecode	text	replace percent-encoded characters with their utf-8 equivalents
python		_resolveDotSegments	path	normalise the url path by resolving segments of ' ' and ' '
python		_optional	argument default	if the given value is c{_unspecified}, return c{default}; otherwise return c{argument}
python		_typecheck	name value	check that the given c{value} is of the given c{type}, or raise an exception describing the problem using c{name}
python	URL	__init__	scheme host path query	create a new l{url} from structured information about itself
python	URL	user		the user portion of c{userinfo}; everything up to the first c{":"}
python	URL	authority	includeSecrets	compute and return the appropriate host/port/userinfo combination
python	URL	__eq__	other	l{url}s are equal to l{url} objects whose attributes are equal
python	URL	__ne__	other	l{url}s are unequal to l{url} objects whose attributes are unequal
python	URL	absolute		is this url complete enough to resolve a resource without resolution
python	URL	replace	scheme host path query	make a new instance of c{self __class__}, passing along the given
python	URL	fromText	cls s	parse the given string into a url object
python	URL	child		construct a l{url} where the given path segments are a child of this url presering the query and fragment
python	URL	sibling	segment	construct a url where the given path segment is a sibling of this url
python	URL	click	href	resolve the given uri reference relative to this base uri
python	URL	asURI		convert a l{url} object that potentially contains non-ascii characters into a l{url} object where all non-ascii text has been encoded
python	URL	asIRI		convert a l{url} object that potentially contains text that has been percent-encoded or idna encoded into a l{url} object containing the
python	URL	asText	includeSecrets	convert this url to its canonical textual representation
python	URL	__repr__		convert this url to an c{eval}-able representation that shows all of its constituent parts
python	URL	add	name value	create a new l{url} with a given query argument c{name}, added to it with the value c{value}, like so :
python	URL	set	name value	create a new l{url} with all existing occurrences of the query argument c{name}, if any removed then add the argument with the given value
python	URL	get	name	retrieve a list of values for the given named query parameter
python	URL	remove	name	create a new l{url} with all query arguments with the given name removed
python		getDataDirectory	moduleName	get a data directory for the caller function or c{modulename} if given
python	_Attribute	serialize	write attrs attributeRenderer	serialize the text attribute and its children
python	DefaultFormattingState	copy		make a copy of this formatting state
python	DefaultFormattingState	_withAttribute	name value	add a character attribute to a copy of this formatting state
python	DefaultFormattingState	toVT102		emit a vt102 control sequence that will set up all the attributes this formatting state has set
python		flatten	output attrs attributeRenderer	serialize a sequence of characters with attribute information the resulting string can be interpreted by compatible software so that the
python		shellComplete	config cmdName words shellCompFile	perform shell completion
python	ZshBuilder	write	genSubs	generate the completion function and write it to the output file @return l{none}
python	ZshSubcommandBuilder	write		generate the completion function and write it to the output file
python	ZshArgumentsGenerator	write		write the zsh completion code to the file given to __init__
python	ZshArgumentsGenerator	writeHeader		this is the start of the code that calls _arguments
python	ZshArgumentsGenerator	writeOptions		write out zsh code for each option in this command
python	ZshArgumentsGenerator	writeExtras		write out completion information for extra arguments appearing on the command-line
python	ZshArgumentsGenerator	writeFooter		write the last bit of code that finishes the call to _arguments
python	ZshArgumentsGenerator	verifyZshNames		ensure that none of the option names given in the metadata are typoed @return l{none}
python	ZshArgumentsGenerator	excludeStr	longname buildShort	generate an "exclusion string" for the given option @type longname c{str}
python	ZshArgumentsGenerator	makeExcludesDict		@return a c{dict} that maps each option name appearing in self
python	ZshArgumentsGenerator	writeOpt	longname	write out the zsh code for the given argument this is just part of the
python	ZshArgumentsGenerator	getAction	longname	return a zsh "action" string for the given argument
python	ZshArgumentsGenerator	getDescription	longname	return the description to be used for this argument
python	ZshArgumentsGenerator	getShortOption	longname	return the short option letter or none
python	ZshArgumentsGenerator	addAdditionalOptions		add additional options to the optflags and optparams lists
python		descrFromDoc	obj	generate an appropriate description from docstring of the given object
python		escape	x	shell escape the given string implementation borrowed from now-deprecated commands
python	CoerceParameter	__init__	options coerce	@param options parent options object @param coerce callable used to coerce the value
python	CoerceParameter	dispatch	parameterName value	when called in dispatch do the coerce for c{value} and save the returned value
python	Options	opt_help		display this help and exit
python	Options	opt_version		display twisted version and exit
python	Options	parseOptions	options	the guts of the command-line parser
python	Options	postOptions		i am called after the options are parsed
python	Options	parseArgs		i am called with any leftover arguments which were not options
python	Options	_gather_flags		gather up boolean flag options
python	Options	_gather_parameters		gather options which take a value
python	Options	_gather_handlers		gather up options with their own handler methods
python	Options	getSynopsis		returns a string containing a description of these options and how to pass them to the executed file
python	Completer	__init__	descr repeat	@type descr c{str} @param descr an optional descriptive string displayed above matches
python	Completer	_shellCode	optName shellType	fetch a fragment of shell code representing this action which is suitable for use by the completion system in _shellcomp
python		docMakeChunks	optList width	makes doc chunks for option declarations
python		flagFunction	method name	determine whether a function is an optional handler for a i{flag} or an i{option}
python		portCoerce	value	coerce a string value to an int port number and checks the validity
python		_replaceIf	condition alternative	if c{condition}, replace this function with c{alternative}
python		passthru	arg	return c{arg} do nothing
python		_ensureOldClass	cls	ensure that c{cls} is an old-style class
python		_oldStyle	cls	a decorator which conditionally converts old-style classes to new-style classes
python	ThreadPool	__init__	minthreads maxthreads name	create a new threadpool
python	ThreadPool	workers		for legacy compatibility purposes return a total number of workers
python	ThreadPool	working		for legacy compatibility purposes return the number of busy workers as expressed by a list the length of that number
python	ThreadPool	waiters		for legacy compatibility purposes return the number of idle workers as expressed by a list the length of that number
python	ThreadPool	_queue		for legacy compatibility purposes return an object with a c{qsize} method that indicates the amount of work not yet allocated to a worker
python	ThreadPool	start		start the threadpool
python	ThreadPool	startAWorker		increase the number of available workers for the thread pool by 1 up to the maximum allowed by l{threadpool
python	ThreadPool	_generateName		generate a name for a new pool thread
python	ThreadPool	stopAWorker		decrease the number of available workers by 1 by quitting one as soon as it's idle
python	ThreadPool	callInThread	func	call a callable object in a separate thread
python	ThreadPool	callInThreadWithCallback	onResult func	call a callable object in a separate thread and call c{onresult} with the return value or a l{twisted
python	ThreadPool	stop		shutdown the threads in the threadpool
python	ThreadPool	adjustPoolsize	minthreads maxthreads	adjust the number of available threads by setting c{min} and c{max} to new values
python	ThreadPool	dumpStats		dump some plain-text informational messages to the log about the state of this l{threadpool}
python	MonkeyPatcher	addPatch	obj name value	add a patch so that the attribute c{name} on c{obj} will be assigned to c{value} when c{patch} is called or during c{runwithpatches}
python	MonkeyPatcher	_alreadyPatched	obj name	has the c{name} attribute of c{obj} already been patched by this
python	MonkeyPatcher	patch		apply all of the patches that have been specified with l{addpatch}
python	MonkeyPatcher	restore		restore all original values to any patched objects
python	MonkeyPatcher	runWithPatches	f	apply each patch already specified then run the function f with the
python		init		create an inotify instance and return the associated file descriptor
python		add	fd path mask	add a watch for the given path to the inotify file descriptor and return the watch descriptor
python		remove	fd wd	remove the given watch descriptor from the inotify file descriptor
python		initializeModule	libc	initialize the module checking if the expected apis exist and setting the argtypes and restype for c{inotify_init}, c{inotify_add_watch}, and
python	RandomFactory	_osUrandom	nbytes	wrapper around c{os urandom} that cleanly manage its absence
python	RandomFactory	secureRandom	nbytes fallback	return a number of secure random bytes
python	RandomFactory	_randBits	nbytes	wrapper around c{os getrandbits}
python	RandomFactory	insecureRandom	nbytes	return a number of non secure random bytes
python	Argument	coerce	val	convert the value to the correct format
python	Date	coerce	args	return tuple of ints year month day
python	FixedOffsetTimeZone	__init__	offset name	construct a l{fixedoffsettimezone} with a fixed offset
python	FixedOffsetTimeZone	fromSignHoursMinutes	cls sign hours minutes	construct a l{fixedoffsettimezone} from an offset described by sign ('+' or '-'), hours and minutes
python	FixedOffsetTimeZone	fromLocalTimeStamp	cls timeStamp	create a time zone with a fixed offset corresponding to a time stamp in the system's locally configured time zone
python	FixedOffsetTimeZone	utcoffset	dt	return this timezone's offset from utc
python	FixedOffsetTimeZone	dst	dt	return a zero c{datetime timedelta} for the daylight saving time
python	FixedOffsetTimeZone	tzname	dt	return a string describing this timezone
python		which	name flags	search path for executable files with the given name
python		open	filename	open an existing shortcut for reading
python	Shortcut	load	filename	read a shortcut file from disk
python	Shortcut	save	filename	write the shortcut to disk
python	FilesystemLock	lock		acquire this lock
python	FilesystemLock	unlock		release this lock
python		isLocked	name	determine if the lock of the given name is held or not
python		registerAdapter	adapterFactory origInterface	register an adapter class
python		getAdapterFactory	fromInterface toInterface default	return registered adapter for a given class and interface
python		_addHook	registry	add an adapter hook which will attempt to look up adapters in the given registry
python		_removeHook	hook	remove a previously added adapter hook
python		getRegistry		returns the twisted global c{zope
python	Adapter	__init__	original	set my 'original' attribute to be the object i am adapting
python	Adapter	__conform__	interface	i forward __conform__ to self original if it has it otherwise i
python	Adapter	isuper	iface adapter	forward isuper to self original
python	Componentized	setAdapter	interfaceClass adapterClass	cache a provider for the given interface by adapting c{self} using the given adapter class
python	Componentized	addAdapter	adapterClass ignoreClass	utility method that calls addcomponent i take an adapter class and
python	Componentized	setComponent	interfaceClass component	cache a provider of the given interface
python	Componentized	addComponent	component ignoreClass	add a component to me for all appropriate interfaces
python	Componentized	unsetComponent	interfaceClass	remove my component specified by the given interface class
python	Componentized	removeComponent	component	remove the given component from me entirely for all interfaces for which it has been registered
python	Componentized	getComponent	interface default	create or retrieve an adapter for the given interface
python		proxyForInterface	iface originalAttribute	create a class which proxies all method calls which adhere to an interface to another provider of that interface
python	_ProxiedClassMethod	__call__	oself	invoke the specified l{methodname} method of the c{original} attribute for proxyforinterface
python	_ProxyDescriptor	__get__	oself type	retrieve the c{self attributename} property from i{oself}
python	_ProxyDescriptor	__set__	oself value	set the c{self attributename} property of i{oself}
python	_ProxyDescriptor	__delete__	oself	delete the c{self attributename} property of i{oself}
python	HeadRequest	get_method		use the head http method
python	TwistedSphinxInventory	getLink	name	resolve the full url for a cross reference
python	TwistedSphinxInventory	_getURLAsHEAD	url	get are head response for url
python		getDeprecated	decorators	with a list of decorators and the object it is running on set the c{_deprecated_info} flag if any of the decorators are a twisted deprecation
python	TwistedModuleVisitor	visitClass	node	called when a class is visited
python	TwistedModuleVisitor	visitFunction	node	called when a class is visited
python		versionToUsefulObject	version	change an ast c{version()} to a real one
python		deprecatedToUsefulText	name deprecated	change a c{@deprecated} to a display string
python	TwistedSystem	privacyClass	documentable	report the privacy level for an object
python		sendmsg	socket data ancillary flags	send a message on a socket
python		recvmsg	socket maxSize cmsgSize flags	receive a message on a socket
python		getSocketFamily	socket	return the family of the given socket
python		getProgramsMenuPath		get the path to the programs menu
python		getProgramFilesPath		get the path to the program files folder
python		cmdLineQuote	s	internal method for quoting a single command-line argument
python		quoteArguments	arguments	quote an iterable of command-line arguments for passing to createprocess or a similar api
python	_ErrorFormatter	fromEnvironment	cls	get as many of the platform-specific error translation objects as possible and return an instance of c{cls} created with them
python	_ErrorFormatter	formatError	errorcode	returns the string associated with a windows error message such as the ones found in socket
python		prefixedMethodNames	classObj prefix	given a class object c{classobj}, returns a list of method names that match the string c{prefix}
python		addMethodNamesToDict	classObj dict prefix baseClass	this goes through c{classobj} and its bases and puts method names starting with 'prefix' in 'dict' with a value of 1
python		prefixedMethods	obj prefix	given an object c{obj}, returns a list of method objects that match the string c{prefix}
python		accumulateMethods	obj dict prefix curClass	given an object c{obj}, add all methods that begin with c{prefix}
python		namedModule	name	return a module given its name
python		namedObject	name	get a fully named module-global object
python		requireModule	name default	try to import a module given its name returning c{default} value if c{importerror} is raised during import
python		_importAndCheckStack	importName	import the given name as a module then walk the stack to determine whether the failure was the module not existing or some code in the module (for
python		namedAny	name	retrieve a python object by its fully qualified name from the global python module namespace
python		filenameToModuleName	fn	convert a name in the filesystem to the name of the python module it is
python		qual	clazz	return full import path of a class
python		_safeFormat	formatter o	helper function for l{safe_repr} and l{safe_str}
python		safe_repr	o	returns a string representation of an object or a string containing a traceback if that object's __repr__ raised an exception
python		safe_str	o	returns a string representation of an object or a string containing a traceback if that object's __str__ raised an exception
python		getClass	obj	return the class or type of object 'obj'
python		accumulateClassDict	classObj attr adict baseClass	accumulate all attributes of a given name in a class hierarchy into a single dictionary
python		accumulateClassList	classObj attr listObj baseClass	accumulate all attributes of a given name in a class hierarchy into a single list
python		_rereconstituter	name	attriute declaration to preserve mutability on l{urlpath}
python	URLPath	_reconstitute		reconstitute this l{urlpath} from all its given attributes
python	URLPath	_fromURL	cls urlInstance	reconstruct all the public instance variables of this l{urlpath} from its underlying l{_url}
python	URLPath	pathList	unquote copy	split this url's path into its components
python	URLPath	fromString	klass url	make a l{urlpath} from a l{str} or l{unicode}
python	URLPath	fromBytes	klass url	make a l{urlpath} from a l{bytes}
python	URLPath	fromRequest	klass request	make a l{urlpath} from a l{twisted web http request}
python	URLPath	_mod	newURL keepQuery	return a modified copy of c{self} using c{newurl}, keeping the query string if c{keepquery} is c{true}
python	URLPath	sibling	path keepQuery	get the sibling of the current l{urlpath} a sibling is a file which
python	URLPath	child	path keepQuery	get the child of this l{urlpath}
python	URLPath	parent	keepQuery	get the parent directory of this l{urlpath}
python	URLPath	here	keepQuery	get the current directory of this l{urlpath}
python	URLPath	click	st	return a path which is the url where a browser would presumably take you if you clicked on a link with an href as given
python	URLPath	__str__		the l{str} of a l{urlpath} is its url text
python	URLPath	__repr__		the l{repr} of a l{urlpath} is an eval-able expression which will construct a similar l{urlpath}
python	ZipPath	__init__	archive pathInArchive	don't construct me directly use c{ziparchive child()}
python	ZipPath	sep		return a zip directory separator
python	ZipPath	child	path	return a new zippath representing a path in c{self archive} which is
python	ZipPath	splitext		return a value similar to that returned by c{os path splitext}
python	ZipPath	getsize		retrieve this file's size
python	ZipPath	getAccessTime		retrieve this file's last access-time this is the same as the last access
python	ZipPath	getModificationTime		retrieve this file's last modification time this is the time of
python	ZipPath	getStatusChangeTime		retrieve this file's last modification time this name is provided for
python	ZipArchive	__init__	archivePathname	create a ziparchive treating the archive at archivepathname as a zip file
python	ZipArchive	child	path	create a zippath pointing at a path within the archive
python	ZipArchive	exists		returns c{true} if the underlying archive exists
python	ZipArchive	getAccessTime		return the archive file's last access time
python	ZipArchive	getModificationTime		return the archive file's modification time
python	ZipArchive	getStatusChangeTime		return the archive file's status change time
python		stringyString	object indentation	expansive string formatting for sequence types
python		isMultiline	s	returns c{true} if this string has a newline in it
python		endsInNewline	s	returns c{true} if this string ends in a newline
python		greedyWrap	inString width	given a string and a column width return a list of lines
python		splitQuoted	s	like a string split but don't break substrings inside quotes
python		strFile	p f caseSensitive	find whether string c{p} occurs in a read()able object c{f}
python		_shouldEnableNewStyle		returns whether or not we should enable the new-style conversion of old-style classes
python		_shouldEnableNewStyle		returns whether or not we should enable the new-style conversion of old-style classes
python		currentframe	n	in python 3 l{inspect currentframe} does not take a stack-level argument
python		inet_pton	af addr	emulator of l{socket inet_pton}
python		execfile	filename globals locals	execute a python script in the given namespaces
python		comparable	klass	class decorator that ensures support for the special c{__cmp__} method
python		ioType	fileIshObject default	determine the type which will be returned from the given file object's read() and accepted by its write() method as an argument
python		nativeString	s	convert c{bytes} or c{unicode} to the native c{str} type using ascii encoding if conversion is necessary
python		_matchingString	constantString inputString	some functions such as c{os path join}, operate on string arguments which
python		_keys	d	return a list of the keys of c{d}
python		bytesEnviron		return a l{dict} of l{os environ} where all text-strings are encoded into
python		_constructMethod	cls name	construct a bound method
python		_bytesChr	i	like l{chr} but always works on ascii returning l{bytes}
python		_coercedUnicode	s	coerce ascii-only byte strings into unicode for python 2
python		_bytesRepr	bytestring	provide a repr for a byte string that begins with 'b' on both python 2 and 3
python		shortPythonVersion		returns the python version as a dot-separated string
python	Platform	isKnown		do we know about this platform? @return boolean indicating whether this is a known platform or not
python	Platform	getType		get platform type
python	Platform	isMacOSX		check if current platform is mac os x
python	Platform	isWinNT		are we running in windows nt? this is deprecated and always returns c{true} on win32 because
python	Platform	isWindows		are we running in windows? @return c{true} if the current platform has been detected as
python	Platform	isVista		check if current platform is windows vista or windows server 2008
python	Platform	isLinux		check if current platform is linux
python	Platform	isDocker	_initCGroupLocation	check if the current platform is linux in a docker container
python	Platform	_supportsSymlinks		check for symlink support usable for twisted's purposes
python	Platform	supportsThreads		can threads be created? @return c{true} if the threads are supported on the current platform
python	Platform	supportsINotify		return c{true} if we can use the inotify api on this platform
python	Request	write	data	add some data to the response to this request
python	Request	finish		the response to this request is finished flush all data to the network stream
python	Entity	render	request	i produce a stream of bytes for the request by calling request write()
python	Collection	getStaticEntity	name	get an entity that was added to me using putentity
python	Collection	getDynamicEntity	name request	subclass this to generate an entity on demand
python	Collection	getEntity	name request	retrieve an entity from me
python	Collection	putEntity	name entity	store a static reference on 'name' for 'entity'
python	Collection	delEntity	name	remove a static reference for 'name'
python	Collection	storeEntity	name request	store an entity for 'name', based on the content of 'request'
python	Collection	removeEntity	name request	remove an entity for 'name', based on the content of 'request'
python	Collection	listStaticEntities		retrieve a list of all name entity pairs that i store references to
python	Collection	listDynamicEntities	request	a list of all name entity that i can generate on demand
python	Collection	listEntities	request	retrieve a list of all name entity pairs i contain
python	Collection	listStaticNames		retrieve a list of the names of entities that i store references to
python	Collection	listDynamicNames		retrieve a list of the names of entities that i store references to
python	Collection	listNames	request	retrieve a list of all names for entities that i contain
python	Constrained	nameConstraint	name	a method that determines whether an entity may be added to me with a given name
python	Constrained	entityConstraint	entity	a method that determines whether an entity may be added to me
python	Constrained	putEntity	name entity	store an entity if it meets both constraints
python		format_frames	frames write detail	format and write frames
python	_Traceback	__init__	frames	construct a fake traceback object using a list of frames note that
python	_Frame	__init__	name filename	@param name method/function name for this frame
python	Failure	__init__	exc_value exc_type exc_tb captureVars	initialize me with an explanation of the error
python	Failure	trap		trap this failure if its type is in a predetermined list
python	Failure	check		check if this failure's type is in a predetermined list
python	Failure	throwExceptionIntoGenerator	g	throw the original exception into the given generator preserving traceback information if available
python	Failure	_findFailure	cls	find the failure that represents the exception currently in context
python	Failure	__getstate__		avoid pickling objects in the traceback
python	Failure	cleanFailure		remove references to other objects replacing them with strings
python	Failure	getTracebackObject		get an object that represents this failure's stack that can be passed to traceback
python	Failure	getErrorMessage		get a string of the exception which caused this failure
python	Failure	printTraceback	file elideFrameworkCode detail	emulate python's standard error reporting mechanism
python	Failure	printBriefTraceback	file elideFrameworkCode	print a traceback as densely as possible
python	Failure	printDetailedTraceback	file elideFrameworkCode	print a traceback with detailed locals and globals information
python		_safeReprVars	varsDictItems	convert a list of name object pairs into name repr pairs
python		_debuginit	exc_value exc_type exc_tb captureVars	initialize failure object possibly spawning pdb
python		startDebugMode		enable debug hooks for failures
python	ILogObserver	__call__	eventDict	log an event
python		callWithLogger	logger func	utility method which wraps a function in a try /except logs a failure if one occurs and uses the system's logprefix
python		err	_stuff _why	write a failure to the log
python	Logger	logPrefix		override this method to insert custom logging behavior its
python	LogPublisher	observers		property returning all observers registered on this l{logpublisher}
python	LogPublisher	_startLogging	other setStdout	begin logging to the l{logbeginner} associated with this l{logpublisher}
python	LogPublisher	_stopLogging		clean-up hook for fixing potentially global state only for testing of
python	LogPublisher	addObserver	other	add a new observer
python	LogPublisher	removeObserver	other	remove an observer
python	LogPublisher	msg		log a new message
python		_safeFormat	fmtString fmtDict	try to format a string swallowing all errors to always return a string
python		textFromEventDict	eventDict	extract text from an event dict passed to a log observer if it cannot
python	_GlobalStartStopMixIn	start		start observing log events
python	_GlobalStartStopMixIn	stop		stop observing log events
python	FileLogObserver	getTimezoneOffset	when	return the current local timezone offset from utc
python	FileLogObserver	formatTime	when	format the given utc value as a string representing that time in the local timezone
python	FileLogObserver	emit	eventDict	format the given log event as text and write it to the output file
python	PythonLoggingObserver	__init__	loggerName	@param loggername identifier used for getting logger
python	PythonLoggingObserver	emit	eventDict	receive a twisted log entry format it and bridge it to python
python		startLogging	file	initialize logging to a specified file
python		startLoggingWithObserver	observer setStdout	initialize logging to a specified observer if setstdout is true
python		discardLogs		discard messages logged via the global c{logfile} object
python	DefaultObserver	emit	eventDict	emit an event dict
python	BaseLogFile	__init__	name directory defaultMode	create a log file
python	BaseLogFile	fromFullPath	cls filename	construct a log file from a full file path
python	BaseLogFile	shouldRotate		override with a method to that returns true if the log should be rotated
python	BaseLogFile	_openFile		open the log file
python	BaseLogFile	write	data	write some data to the file
python	BaseLogFile	flush		flush the file
python	BaseLogFile	close		close the file
python	BaseLogFile	reopen		reopen the log file this is mainly useful if you use an external log
python	BaseLogFile	getCurrentLog		return a logreader for the current log file
python	LogFile	__init__	name directory rotateLength defaultMode	create a log file rotating on length
python	LogFile	shouldRotate		rotate when the log file size is larger than rotatelength
python	LogFile	getLog	identifier	given an integer return a logreader for an old log file
python	LogFile	write	data	write some data to the file
python	LogFile	rotate		rotate the file and create a new one
python	LogFile	listLogs		return sorted list of integers - the old logs' identifiers
python	DailyLogFile	shouldRotate		rotate when the date has changed since last write
python	DailyLogFile	toDate		convert a unixtime to year month day localtime tuple or return the current year month day localtime tuple
python	DailyLogFile	suffix	tupledate	return the suffix given a year month day tuple or unixtime
python	DailyLogFile	getLog	identifier	given a unix time return a logreader for an old log file
python	DailyLogFile	write	data	write some data to the log file
python	DailyLogFile	rotate		rotate the file and create a new one
python	LogReader	__init__	name	open the log file for reading
python	LogReader	readLines	lines	read a list of lines from the log file
python		synchronize		make all methods listed in each class' synchronized attribute synchronized
python		isInIOThread		are we in the thread responsible for i/o requests the event loop
python		registerAsIOThread		mark the current thread as responsible for i/o requests
python		_fullyQualifiedName	obj	return the fully qualified name of a module class method or function
python		_getReplacementString	replacement	surround a replacement for a deprecated api with some polite text exhorting the user to consider it as an alternative
python		_getDeprecationDocstring	version replacement	generate an addition to a deprecated object's docstring that explains its deprecation
python		_getDeprecationWarningString	fqpn version format replacement	return a string indicating that the python name was deprecated in the given version
python		getDeprecationWarningString	callableThing version format replacement	return a string indicating that the callable was deprecated in the given version
python		_appendToDocstring	thingWithDoc textToAppend	append the given text to the docstring of c{thingwithdoc}
python		deprecated	version replacement	return a decorator that marks callables as deprecated to deprecate a
python		deprecatedProperty	version replacement	return a decorator that marks a property as deprecated to deprecate a
python		getWarningMethod		return the warning method currently used to record deprecation warnings
python		setWarningMethod	newMethod	set the warning method to use to record deprecation warnings
python	_ModuleProxy	__repr__		get a string containing the type of the module proxy and a representation of the wrapped module object
python	_ModuleProxy	__setattr__	name value	set an attribute on the wrapped module object
python	_ModuleProxy	__getattribute__	name	get an attribute from the module object possibly emitting a warning
python	_DeprecatedAttribute	__init__	module name version message	initialise a deprecated name wrapper
python	_DeprecatedAttribute	get		get the underlying attribute value and issue a deprecation warning
python		_deprecateAttribute	proxy name version message	mark a module-level attribute as being deprecated
python		deprecatedModuleAttribute	version message moduleName name	declare a module-level attribute as being deprecated
python		warnAboutFunction	offender warningString	issue a warning string identifying c{offender} as the responsible code
python		_passedArgSpec	argspec positional keyword	take an i{inspect argspec}, a tuple of positional arguments and a dict of
python		_passedSignature	signature positional keyword	take an l{inspect signature}, a tuple of positional arguments and a dict of
python		_mutuallyExclusiveArguments	argumentPairs	decorator which causes its decoratee to raise a l{typeerror} if two of the given arguments are passed at the same time
python	ContextTracker	callWithContext	newContext func	call c{func(*args **kw)} such that the contents of c{newcontext} will be available for it to retrieve using l{getcontext}
python	ContextTracker	getContext	key default	retrieve the value for a key from the context
logger	KeyFlattener	__init__		initialize a l{keyflattener}
logger	KeyFlattener	flatKey	fieldName formatSpec conversion	compute a string key for a given field/format/conversion
logger		flattenEvent	event	flatten the given event by pre-associating format fields with specific objects and callable results in a l{dict} put into the c{"log_flattened"}
logger		extractField	field event	extract a given format field from the given event
logger		flatFormat	event	format an event which has been flattened with l{flattenevent}
logger	FileLogObserver	__init__	outFile formatEvent	@param outfile a file-like object ideally one should be passed which
logger	FileLogObserver	__call__	event	write event to file
logger		textFileLogObserver	outFile timeFormat	create a l{filelogobserver} that emits text to a specified writable file-like object
logger	InvalidLogLevelError	__init__	level	@param level a log level
logger	LogLevel	levelWithName	cls name	get the log level with the given name
logger	LogLevel	_priorityForLevel	cls level	we want log levels to have defined ordering - the order of definition - but they aren't value constants the only value is the name
logger	LimitedHistoryLogObserver	__init__	size	@param size the maximum number of events to buffer if l{none}, the
logger	LimitedHistoryLogObserver	replayTo	otherObserver	re-play the buffered events to another log observer
logger		formatTrace	trace	format a trace (that is the contents of the c{log_trace} key of a log event) as a visual indication of the message's propagation through various
logger		_reverseLogLevelMapping		reverse the above mapping adding both the numerical keys used above and the corresponding string keys also used by python logging
logger	STDLibLogObserver	__init__	name stackDepth	@param loggername logger identifier
logger	STDLibLogObserver	_findCaller	stackInfo	based on the stack depth passed to this l{stdliblogobserver}, identify the calling function
logger	STDLibLogObserver	__call__	event	format an event and bridge it to python logging
logger	StringifiableFromEvent	__init__	event	@param event an event
logger		failureAsJSON	failure	convert a failure to a json-serializable data structure
logger		asBytes	obj	on python 2 we really need native strings in a variety of places attribute names will sort of work in a __dict__, but they're subtly wrong
logger		failureFromJSON	failureDict	load a l{failure} from a dictionary deserialized from json
logger		objectLoadHook	aDict	dictionary-to-object-translation hook for certain value types used within the logging system
logger		objectSaveHook	pythonObject	object-to-serializable hook for certain value types used within the logging system
logger		eventAsJSON	event	encode an event as json flattening it if necessary to preserve as much structure as possible
logger		eventFromJSON	eventText	decode a log event from json
logger		jsonFileLogObserver	outFile recordSeparator	create a l{filelogobserver} that emits json-serialized events to a specified writable file-like object
logger		eventsFromJSONLogFile	inFile recordSeparator bufferSize	load events from a file previously saved with l{jsonfilelogobserver}
logger	Logger	_namespaceFromCallingContext		derive a namespace from the module containing the caller's caller
logger	Logger	__init__	namespace source observer	@param namespace the namespace for this logger uses a dotted
logger	Logger	__get__	oself type	when used as a descriptor i e ::
logger	Logger	emit	level format	emit a log event to all log observers at the given level
logger	Logger	failure	format failure level	log a failure and emit a traceback
logger	Logger	debug	format	emit a log event at log level l{loglevel debug}
logger	Logger	info	format	emit a log event at log level l{loglevel info}
logger	Logger	warn	format	emit a log event at log level l{loglevel warn}
logger	Logger	error	format	emit a log event at log level l{loglevel error}
logger	Logger	critical	format	emit a log event at log level l{loglevel critical}
logger	LegacyLogObserverWrapper	__init__	legacyObserver	@param legacyobserver a legacy observer to which this observer will forward events
logger	LegacyLogObserverWrapper	__call__	event	forward events to the legacy observer after editing them to ensure compatibility
logger		publishToNewObserver	observer eventDict textFromEventDict	publish an old-style (l{twisted python log}) event to a new-style
logger	LoggingFile	__init__	logger level encoding	@param logger the logger to log through
logger	LoggingFile	closed		read-only property is the file closed?
logger	LoggingFile	encoding		read-only property file encoding
logger	LoggingFile	mode		read-only property file mode
logger	LoggingFile	newlines		read-only property types of newlines encountered
logger	LoggingFile	name		the name of this file a repr-style string giving information about its namespace
logger	LoggingFile	close		close this file so it can no longer be written to
logger	LoggingFile	flush		no-op this file does not buffer
logger	LoggingFile	fileno		returns an invalid file descriptor since this is not backed by an fd
logger	LoggingFile	isatty		a l{loggingfile} is not a tty
logger	LoggingFile	write	string	log the given message
logger	LoggingFile	writelines	lines	log each of the given lines as a separate message
logger	LoggingFile	_unsupported		template for unsupported operations
logger	ILogObserver	__call__	event	log an event
logger	LogPublisher	addObserver	observer	registers an observer with this publisher
logger	LogPublisher	removeObserver	observer	unregisters an observer with this publisher
logger	LogPublisher	__call__	event	forward events to contained observers
logger	LogPublisher	_errorLoggerForObserver	observer	create an error-logger based on this logger which does not contain the given bad observer
logger		formatEvent	event	formats an event as a l{unicode}, using the format in c{event["log_format"]}
logger		formatUnformattableEvent	event error	formats an event as a l{unicode} that describes the event generically and a formatting error
logger		formatTime	when timeFormat default	format a timestamp as text
logger		formatEventAsClassicLogText	event formatTime	format an event as a line of human-readable text for e g traditional log
logger	CallMapping	__init__	submapping	@param submapping another read-only mapping which will be used to look up items
logger	CallMapping	__getitem__	key	look up an item in the submapping for this l{callmapping}, calling it if c{key} ends with c{"()"}
logger		formatWithCall	formatString mapping	format a string like l{unicode format}, but
logger	ILogFilterPredicate	__call__	event	determine whether an event should be logged
logger		shouldLogEvent	predicates event	determine whether an event should be logged based on the result of c{predicates}
logger	FilteringLogObserver	__init__	observer predicates negativeObserver	@param observer an observer to which this observer will forward events when c{predictates} yield a positive result
logger	FilteringLogObserver	__call__	event	forward to next observer if predicate allows it
logger	LogLevelFilterPredicate	__init__	defaultLogLevel	@param defaultloglevel the default minimum log level
logger	LogLevelFilterPredicate	logLevelForNamespace	namespace	determine an appropriate log level for the given namespace
logger	LogLevelFilterPredicate	setLogLevelForNamespace	namespace level	sets the log level for a logging namespace
logger	LogLevelFilterPredicate	clearLogLevels		clears all log levels to the default
logger	LogBeginner	__init__	publisher errorStream stdio warningsModule	initialize this l{logbeginner}
logger	LogBeginner	beginLoggingTo	observers discardBuffer redirectStandardIO	begin logging to the given set of observers this will
logger	LogBeginner	showwarning	message category filename lineno	twisted-enabled wrapper around l{warnings showwarning}
_threads	Team	__init__	coordinator createWorker logException	@param coordinator an l{iexclusiveworker} which will coordinate access to resources on this l{team}; that is to say an
_threads	Team	statistics		gather information on the current status of this l{team}
_threads	Team	grow	n	increase the the number of idle workers by c{n}
_threads	Team	shrink	n	decrease the number of idle workers by c{n}
_threads	Team	_quitIdlers	n	the implmentation of c{shrink}, performed by the coordinator worker
_threads	Team	do	task	perform some work in a worker created by c{createworker}
_threads	Team	_coordinateThisTask	task	select a worker to dispatch to either an idle one or a new one and perform it
_threads	Team	_recycleWorker	worker	called only from coordinator
_threads	Team	quit		stop doing work and shut down all idle workers
_threads	Quit	__init__		create a l{quit} un-set
_threads	Quit	set		set the flag if it has not been set
_threads	Quit	check		check if the flag has been set
_threads	MemoryWorker	__init__	pending	create a l{memoryworker}
_threads	MemoryWorker	do	work	queue some work for to perform later see l{creatememoryworker}
_threads	MemoryWorker	quit		quit this worker
_threads		createMemoryWorker		create an l{iworker} that does nothing but defer work to be performed later
_threads		pool	currentLimit threadFactory	construct a l{team} that spawns threads as a thread pool with the given limiting function
_threads	IWorker	do	task	perform the given task
_threads	IWorker	quit		free any resources associated with this l{iworker} and cause it to reject all future work
_threads	ThreadWorker	__init__	startThread queue	create a l{threadworker} with a function to start a thread and a queue to use to communicate with that thread
_threads	ThreadWorker	do	task	perform the given task on the thread owned by this l{threadworker}
_threads	ThreadWorker	quit		reject all future work and stop the thread started by c{__init__}
_threads	LockWorker	__init__	lock local	@param lock a mutual-exclusion lock with c{acquire} and c{release} methods
_threads	LockWorker	do	work	do the given work on this thread with the mutex acquired if this is
_threads	LockWorker	quit		quit this l{lockworker}
scripts	ServerOptions	opt_version		print version information and exit
scripts	WindowsApplicationRunner	preApplication		do pre-application-creation setup
scripts	WindowsApplicationRunner	postApplication		start the application and run the reactor
scripts		_parseLocalVariables	line	accepts a single line in emacs local variable declaration format and returns a dict of all the variables {name value}
scripts		loadLocalVariables	filename	accepts a filename and attempts to load the emacs variable declarations from that file simulating what emacs does
scripts		isTestFile	filename	returns true if 'filename' looks like a file containing unit tests
scripts		_maybeFindSourceLine	testThing	try to find the source line of the given test thing
scripts		_checkKnownRunOrder	order	check that the given order is a known test running order
scripts	_BasicOptions	coverdir		return a l{filepath} representing the directory into which coverage results should be written
scripts	_BasicOptions	opt_coverage		generate coverage information in the coverage file in the directory specified by the temp-directory option
scripts	_BasicOptions	opt_testmodule	filename	filename to grep for test cases (-*- test-case-name)
scripts	_BasicOptions	opt_spew		print an insanely verbose log of everything that happens useful
scripts	_BasicOptions	opt_disablegc		disable the garbage collector
scripts	_BasicOptions	opt_tbformat	opt	specify the format to display tracebacks with valid formats are
scripts	_BasicOptions	opt_recursionlimit	arg	see sys setrecursionlimit()
scripts	_BasicOptions	opt_without_module	option	fake the lack of the specified modules separated with commas
scripts	Options	opt_jobs	number	number of local workers to run a strictly positive integer
scripts	Options	_getWorkerArguments		return a list of options to pass to distributed workers
scripts		_wrappedPdb		wrap an instance of c{pdb pdb} with readline support and load any rcs
scripts		_makeRunner	config	return a trial runner class set up with the parameters extracted from c{config}
scripts	ServerOptions	opt_version		print version information and exit
scripts	UnixAppLogger	_getLogObserver		create and return a suitable log observer for the given configuration
scripts	UnixApplicationRunner	preApplication		do pre-application-creation setup
scripts	UnixApplicationRunner	_formatChildException	exception	format the c{exception} in preparation for writing to the status pipe
scripts	UnixApplicationRunner	postApplication		to be called after the application is created start the application and run the reactor
scripts	UnixApplicationRunner	removePID	pidfile	remove the specified pid file if possible errors are logged not
scripts	UnixApplicationRunner	setupEnvironment	chroot rundir nodaemon umask	set the filesystem root the working directory and daemonize
scripts	UnixApplicationRunner	daemonize	reactor	daemonizes the application on unix this is done by the usual double
scripts	UnixApplicationRunner	_waitForStart	readPipe	wait for the daemonization success
scripts	UnixApplicationRunner	shedPrivileges	euid uid gid	change the uid and gid or the euid and egid of this process
scripts	UnixApplicationRunner	startApplication	application	configure global process state based on the given application and run the application
web	Request	sibLink	name	return the text that links to a sibling of the requested resource
web	Request	childLink	name	return the text that links to a child of the requested resource
web	Request	process		process a request
web	Request	write	data	write data to the transport if not responding to a head request
web	Request	finish		override c{http request finish} for possible encoding
web	Request	render	resrc	ask a resource to render itself
web	Request	view_write	issuer data	remote version of write same interface
web	Request	view_finish	issuer	remote version of finish same interface
web	Request	view_addCookie	issuer k v	remote version of addcookie same interface
web	Request	view_setHeader	issuer k v	remote version of setheader same interface
web	Request	view_setLastModified	issuer when	remote version of setlastmodified same interface
web	Request	view_setETag	issuer tag	remote version of setetag same interface
web	Request	view_setResponseCode	issuer code message	remote version of setresponsecode same interface
web	Request	view_registerProducer	issuer producer streaming	remote version of registerproducer same interface
web	Request	session		if a session has already been created or looked up with l{request
web	Request	getSession	sessionInterface forceNotSecure	check if there is a session cookie and if not create it
web	Request	rememberRootURL		remember the currently-processed part of the url for later recalling
web	Request	getRootURL		get a previously-remembered url
web	GzipEncoderFactory	encoderForRequest	request	check the headers if the client accepts gzip encoding and encodes the request if so
web	_GzipEncoder	encode	data	write to the request automatically compressing data on the fly
web	_GzipEncoder	finish		finish handling the request request flushing any data from the zlib buffer
web	Session	__init__	site uid reactor	initialize a session with a unique id for that session
web	Session	startCheckingExpiration		start expiration tracking
web	Session	notifyOnExpire	callback	call this callback when the session expires or logs out
web	Session	expire		expire/logout of the session
web	Session	touch		notify session modification
web	Site	__init__	resource requestFactory	@param resource the root of the resource hierarchy all request
web	Site	_mkuid		internal generate an opaque unique id for a user's session
web	Site	makeSession		generate a new session instance and store it for future reference
web	Site	getSession	uid	get a previously generated session
web	Site	buildProtocol	addr	generate a channel attached to this site
web	Site	render	request	redirect because a site is always a directory
web	Site	getChildWithDefault	pathEl request	emulate a resource's getchild method
web	Site	getResourceFor	request	get a resource for a request
web	Site	acceptableProtocols		protocols this server can speak
web	CGIScript	__init__	filename registry reactor	initialize with the name of a cgi script file
web	CGIScript	render	request	do various things to conform to the cgi specification
web	CGIScript	runProcess	env request qargs	run the cgi script
web	FilteredScript	runProcess	env request qargs	run a script through the c{filter} executable
web	CGIProcessProtocol	outReceived	output	handle a chunk of input
web		escapeForContent	data	escape some character or utf-8 byte data for inclusion in an html or xml document by replacing metacharacters (c{&<>}) with their entity
web		attributeEscapingDoneOutside	data	escape some character or utf-8 byte data for inclusion in the top level of an attribute
web		writeWithAttributeEscaping	write	decorate a c{write} callable so that all output written is properly quoted for inclusion within an xml attribute value
web		escapedCDATA	data	escape cdata for inclusion in a document
web		escapedComment	data	escape a comment for inclusion in a document
web		_getSlotValue	name slotData default	find the value of the named slot in the given stack of slot data
web		_flattenElement	request root write slotData	make c{root} slightly more flat by yielding all its immediate contents as strings deferreds or generators that are recursive calls to itself
web		_flattenTree	request root write	make c{root} into an iterable of l{bytes} and l{deferred} by doing a depth first traversal of the tree
web		_writeFlattenedData	state write result	take strings from an iterator and pass them to a writer function
web		flatten	request root write	incrementally write out a string representation of c{root} using c{write}
web		flattenString	request root	collate a string representation of c{root} into a single string
web	IResource	getChildWithDefault	name request	return a child with the given name for the given request
web	IResource	putChild	path child	put a child iresource implementor at the given path
web	IResource	render	request	render a request this is called on the leaf resource for a request
web		getChildForRequest	resource request	traverse resource tree to find who will handle the request
web	Resource	getChild	path request	retrieve a 'child' resource from me
web	Resource	getChildWithDefault	path request	retrieve a static or dynamically generated child resource from me
web	Resource	putChild	path child	register a static child
web	Resource	render	request	render a given resource see l{iresource}'s render method
web	Resource	render_HEAD	request	default handling of head method
web		_computeAllowedMethods	resource	compute the allowed methods on a c{resource} based on defined render_foo methods
web	_IEncodingResource	getEncoder	request	parse the request and return an encoder if applicable using l{_irequestencoderfactory
web	EncodingResourceWrapper	getEncoder	request	browser the list of encoders looking for one applicable encoder
web		ResourceScript	path registry	i am a normal py file which must define a 'resource' global which should be an instance of a subclass of web
web	PythonScript	__init__	filename registry	initialize me with a script name
web	PythonScript	render	request	render me to a web client
web	Tag	fillSlots		remember the slots provided at this position in the dom
web	Tag	__call__		add children and change attributes on this tag
web	Tag	_clone	obj deep	clone an arbitrary object used by l{tag clone}
web	Tag	clone	deep	return a clone of this tag if deep is true clone all of this tag's
web	Tag	clear		clear any existing children from this tag
web		getElementsByTagName	iNode name	return a list of all child elements of c{inode} with a name matching c{name}
web		unescape	text chars	perform the exact opposite of 'escape'
web		escape	text chars	escape a few xml special chars with xml entities
web	Node	isEqualToNode	other	compare this node to c{other} if the nodes have the same number of
web	Node	appendChild	child	make the given l{node} the last child of this node
web	Node	insertBefore	new ref	make the given l{node} c{new} a child of this node which comes before the l{node} c{ref}
web	Node	removeChild	child	remove the given l{node} from this node's children
web	Node	replaceChild	newChild oldChild	replace a l{node} which is already a child of this node with a different node
web	Document	appendChild	child	make the given l{node} the i{document element} of this l{document}
web	Text	isEqualToNode	other	compare this text to c{text} if the underlying values and the c{raw}
web	Element	isEqualToNode	other	compare this element to c{other} if the c{nodename}, c{namespace},
web	Element	writexml	stream indent addindent newl	serialize this l{element} to the given stream
web		parse	readable	parse html or xml readable
web		parseXML	readable	parse an xml readable object
web		parseXMLString	st	parse an xml readable object
web		_PRE	text	wraps <pre> tags around some text and html-escape it
web		redirectTo	URL request	generate a redirect to the given location
web	_SourceLineElement	sourceLine	request tag	render the line of source as a child of c{tag}
web	_SourceLineElement	lineNumber	request tag	render the line number as a child of c{tag}
web	_SourceFragmentElement	_getSourceLines		find the source line references by c{self frame} and yield in source
web	_SourceFragmentElement	sourceLines	request tag	render the source line indicated by c{self frame} and several
web	_FrameElement	filename	request tag	render the name of the file this frame references as a child of c{tag}
web	_FrameElement	lineNumber	request tag	render the source line number this frame references as a child of c{tag}
web	_FrameElement	function	request tag	render the function name this frame references as a child of c{tag}
web	_FrameElement	source	request tag	render the source code surrounding the line this frame references replacing c{tag}
web	_StackElement	frames	request tag	render the list of frames in this l{_stackelement}, replacing c{tag}
web	FailureElement	type	request tag	render the exception type as a child of c{tag}
web	FailureElement	value	request tag	render the exception value as a child of c{tag}
web	FailureElement	traceback	request tag	render all the frames in the wrapped l{failure<twisted
web		formatFailure	myFailure	construct an html representation of the given failure
web	_ErrorStream	write	data	generate an event for the logging system with the given bytes as the message
web	_ErrorStream	writelines	iovec	join the given lines and pass them to c{write} to be handled in the usual way
web	_ErrorStream	flush		nothing is buffered so flushing does nothing this method is required
web	_InputStream	__init__	input	initialize the instance
web	_InputStream	read	size	pass through to the underlying c{read}
web	_InputStream	readline	size	pass through to the underlying c{readline}, with a size of c{-1} replaced with a size of l{none}
web	_InputStream	readlines	size	pass through to the underlying c{readlines}
web	_InputStream	__iter__		pass through to the underlying c{__iter__}
web	_WSGIResponse	_finished	ignored	record the end of the response generation for the request being serviced
web	_WSGIResponse	startResponse	status headers excInfo	the wsgi i{start_response} callable the given values are saved until
web	_WSGIResponse	write	data	the wsgi i{write} callable returned by the i{start_response} callable
web	_WSGIResponse	_sendResponseHeaders		set the response code and response headers on the request object but do not flush them
web	_WSGIResponse	start		start the wsgi application in the threadpool
web	_WSGIResponse	run		call the wsgi application object iterate it and handle its output
web	WSGIResource	render	request	turn the request into the appropriate c{environ} c{dict} suitable to be passed to the wsgi application object and then pass it on
web	WSGIResource	getChildWithDefault	name request	reject attempts to retrieve a child resource all path segments beyond
web	WSGIResource	putChild	path child	reject attempts to add a child resource to this resource the wsgi
web		urlparse	url	parse an url into six components
web		parse_qs	qs keep_blank_values strict_parsing	like c{cgi parse_qs}, but with support for parsing byte strings on python 3
web		datetimeToString	msSinceEpoch	convert seconds since epoch to http datetime string
web		datetimeToLogString	msSinceEpoch	convert seconds since epoch to log datetime string
web		timegm	year month day hour	convert time tuple in gmt to seconds since epoch gmt
web		stringToDatetime	dateString	convert an http date string one of three formats to seconds since epoch
web		toChunk	data	convert string to a chunk
web		fromChunk	data	convert chunk to string
web		parseContentRange	header	parse a content-range header into start end reallength
web	_IDeprecatedHTTPChannelToRequestInterface	connectionLost	reason	the underlying connection has been lost
web	_IDeprecatedHTTPChannelToRequestInterface	gotLength	length	called when l{httpchannel} has determined the length if any of the incoming request's body
web	_IDeprecatedHTTPChannelToRequestInterface	handleContentChunk	data	deliver a received chunk of body data to the request note
web	_IDeprecatedHTTPChannelToRequestInterface	parseCookies		parse the request's cookies out of received headers
web	_IDeprecatedHTTPChannelToRequestInterface	requestReceived	command path version	called when the entire request including its body has been received
web	_IDeprecatedHTTPChannelToRequestInterface	__eq__	other	determines if two requests are the same object
web	_IDeprecatedHTTPChannelToRequestInterface	__ne__	other	determines if two requests are not the same object
web	HTTPClient	extractHeader	header	given a complete http header extract the field name and value and process the header
web	HTTPClient	lineReceived	line	parse the status line and headers for an http request
web	HTTPClient	handleResponseEnd		the response has been completely received
web	HTTPClient	handleStatus	version status message	called when the status-line is received
web	HTTPClient	handleHeader	key val	called every time a header is received
web	HTTPClient	handleEndHeaders		called when all headers have been received
web	Request	__init__	channel queued	@param channel the channel we're connected to
web	Request	_cleanup		called when have finished responding and are no longer queued
web	Request	noLongerQueued		notify the object that it is no longer queued
web	Request	gotLength	length	called when http channel got length of content in this request
web	Request	parseCookies		parse cookie headers
web	Request	handleContentChunk	data	write a chunk of data
web	Request	requestReceived	command path version	called by channel when all data has been received
web	Request	__repr__		return a string description of the request including such information as the request method and request uri
web	Request	process		override in subclasses
web	Request	registerProducer	producer streaming	register a producer
web	Request	unregisterProducer		unregister the producer
web	Request	getHeader	key	get an http request header
web	Request	getCookie	key	get a cookie that was sent from the network
web	Request	notifyFinish		notify when the response to this request has finished
web	Request	finish		indicate that all response data has been written to this l{request}
web	Request	write	data	write some data as a result of an http request the first
web	Request	addCookie	k v expires domain	set an outgoing http cookie
web	Request	setResponseCode	code message	set the http response code
web	Request	setHeader	name value	set an http response header overrides any previously set values for
web	Request	redirect	url	utility function that does a redirect
web	Request	setLastModified	when	set the c{last-modified} time for the response to this request
web	Request	setETag	etag	set an c{entity tag} for the outgoing response
web	Request	getAllHeaders		return dictionary mapping the names of all received headers to the last value received for each
web	Request	getRequestHostname		get the hostname that the user passed in to the request
web	Request	getHost		get my originally requesting transport's host
web	Request	setHost	host port ssl	change the host and port the request thinks it's using
web	Request	getClientIP		return the ip address of the client who submitted this request
web	Request	isSecure		return l{true} if this request is using a secure transport
web	Request	getUser		return the http user sent with this request if any
web	Request	getPassword		return the http password sent with this request if any
web	Request	getClient		get the client's ip address if it has one no attempt is made to
web	Request	connectionLost	reason	there is no longer a connection for this request to respond over
web	Request	loseConnection		pass the loseconnection through to the underlying channel
web	Request	__eq__	other	determines if two requests are the same object
web	Request	__ne__	other	determines if two requests are not the same object
web	_IdentityTransferDecoder	dataReceived	data	interpret the next chunk of bytes received either deliver them to the
web	_IdentityTransferDecoder	noMoreData		all data which will be delivered to this decoder has been check to
web	_ChunkedTransferDecoder	dataReceived	data	interpret data from a request or response body which uses the i{chunked} transfer-encoding
web	_ChunkedTransferDecoder	noMoreData		verify that all data has been received if it has not been raise
web	_NoPushProducer	pauseProducing		pause producing data
web	_NoPushProducer	resumeProducing		resume producing data
web	_NoPushProducer	registerProducer	producer streaming	register to receive data from a producer
web	_NoPushProducer	unregisterProducer		stop consuming data from a producer without disconnecting
web	HTTPChannel	lineReceived	line	called for each line from request until the end of headers when it enters binary mode
web	HTTPChannel	headerReceived	line	do pre-processing for content-length and store this header away
web	HTTPChannel	checkPersistence	request version	check if the channel should close or not
web	HTTPChannel	requestDone	request	called by first request in queue when it is done
web	HTTPChannel	forceAbortClient		called if c{aborttimeout} seconds have passed since the timeout fired and the connection still hasn't gone away
web	HTTPChannel	isSecure		return l{true} if this channel is using a secure transport
web	HTTPChannel	writeHeaders	version code reason headers	called by l{request} objects to write a complete set of http headers to a transport
web	HTTPChannel	write	data	called by l{request} objects to write response data
web	HTTPChannel	writeSequence	iovec	write a list of strings to the http response
web	HTTPChannel	getPeer		get the remote address of this connection
web	HTTPChannel	getHost		get the local address of this connection
web	HTTPChannel	loseConnection		closes the connection will write any data that is pending to be sent
web	HTTPChannel	registerProducer	producer streaming	register to receive data from a producer
web	HTTPChannel	unregisterProducer		stop consuming data from a producer without disconnecting
web	HTTPChannel	stopProducing		stop producing data
web	HTTPChannel	pauseProducing		pause producing data
web	HTTPChannel	resumeProducing		resume producing data
web	HTTPChannel	_send100Continue		sends a 100 continue response used to signal to clients that further processing will be performed
web	HTTPChannel	_respondToBadRequestAndDisconnect		this is a quick and dirty way of responding to bad requests
web		_escape	s	return a string like python repr but always escaped as if surrounding quotes were double quotes
web		combinedLogFormatter	timestamp request	@return a combined log formatted log line for the given request
web	_XForwardedForRequest	getClientIP		@return the client address the first address in the value of the i{x-forwarded-for header}
web	_XForwardedForRequest	clientproto		@return the protocol version in the request
web	_XForwardedForRequest	code		@return the response code for the request
web	_XForwardedForRequest	sentLength		@return the number of bytes sent in the response body
web		proxiedLogFormatter	timestamp request	@return a combined log formatted log line for the given request but use the value of the i{x-forwarded-for} header as the value for the client
web	_GenericHTTPChannelProtocol	requestFactory		a callable to use to build l{irequest} objects
web	_GenericHTTPChannelProtocol	requestFactory	value	a callable to use to build l{irequest} objects
web	_GenericHTTPChannelProtocol	site		a reference to the creating l{twisted web server site} object
web	_GenericHTTPChannelProtocol	site	value	a reference to the creating l{twisted web server site} object
web	_GenericHTTPChannelProtocol	timeOut		the idle timeout for the backing channel
web	_GenericHTTPChannelProtocol	timeOut	value	the idle timeout for the backing channel
web	_GenericHTTPChannelProtocol	callLater		a value for the c{calllater} callback this callback is used by the
web	_GenericHTTPChannelProtocol	callLater	value	sets the value for the c{calllater} callback this callback is used by
web	_GenericHTTPChannelProtocol	dataReceived	data	an override of l{iprotocol datareceived} that checks what protocol we're
web		_genericHTTPChannelProtocolFactory		returns an appropriately initialized _generichttpchannelprotocol
web	HTTPFactory	__init__	logPath timeout logFormatter reactor	@param logformatter an object to format requests into log lines for the access log
web	HTTPFactory	_updateLogDateTime		update log datetime periodically so we aren't always recalculating it
web	HTTPFactory	startFactory		set up request logging if necessary
web	HTTPFactory	_openLogFile	path	override in subclasses e g to use l{twisted python logfile}
web	HTTPFactory	log	request	write a line representing c{request} to the access log file
web		addSlash	request	add a trailing slash to c{request}'s uri deprecated do not use
web		_addSlash	request	add a trailing slash to c{request}'s uri
web		loadMimeTypes	mimetype_locations init	produces a mapping of extensions with leading dot to mime types
web	File	__init__	path defaultType ignoredExts registry	create a file with the given path
web	File	ignoreExt	ext	ignore the given extension
web	File	getChild	path request	if this l{file}'s path refers to a directory return a l{file} referring to the file named c{path} in that directory
web	File	openForReading		open a file and return it
web	File	getFileSize		return file size
web	File	_parseRangeHeader	range	parse the value of a range header into start stop pairs
web	File	_rangeToOffsetAndSize	start end	convert a start and end from a range header to an offset and size
web	File	_contentRange	offset size	return a string suitable for the value of a content-range header for a range with the given offset and size
web	File	_doSingleRangeRequest	request startAndEnd	set up the response for range headers that specify a single range
web	File	_doMultipleRangeRequest	request byteRanges	set up the response for range headers that specify a single range
web	File	_setContentHeaders	request size	set the content-length and content-type headers for this request
web	File	makeProducer	request fileForReading	make a l{staticproducer} that will produce the body of this response
web	File	render_GET	request	begin sending the contents of this l{file} (or a subset of the contents based on the 'range' header) to the given request
web	StaticProducer	__init__	request fileObject	initialize the instance
web	StaticProducer	stopProducing		stop producing data
web	SingleRangeStaticProducer	__init__	request fileObject offset size	initialize the instance
web	MultipleRangeStaticProducer	__init__	request fileObject rangeInfo	initialize the instance
web		formatFileSize	size	format the given file size in bytes to human readable format
web	DirectoryLister	_getFilesAndDirectories	directory	helper returning files and directories in given directory listing with attributes to be used to build a table content with
web	DirectoryLister	_buildTableContent	elements	build a table content using c{self linepattern} and giving elements odd
web	DirectoryLister	render	request	render a listing of the content of c{self path}
web		substitute	request node subs	look through the given node's children for strings and attempt to do string substitution with the given parameter
web		_get	node nodeId nodeAttrs	internal get a node with the specified c{nodeid} as any of the c{class}, c{id} or c{pattern} attributes
web		get	node nodeId	get a node with the specified c{nodeid} as any of the c{class}, c{id} or c{pattern} attributes
web		getIfExists	node nodeId	get a node with the specified c{nodeid} as any of the c{class}, c{id} or c{pattern} attributes
web		getAndClear	node nodeId	get a node with the specified c{nodeid} as any of the c{class}, c{id} or c{pattern} attributes
web		clearNode	node	remove all children from the given node
web		locateNodes	nodeList key value noNesting	find subnodes in the given node where the given attribute has the given value
web		gatherTextNodes	iNode dounescape joinWith	visit each child node and collect its text data if any into a string
web		findElementsWithAttributeShallow	parent attribute	return an iterable of the elements which are direct children of c{parent} and which have the c{attribute} attribute
web		findElements	parent matcher	return an iterable of the elements which are children of c{parent} for which the predicate c{matcher} returns true
web		namedChildren	parent nodeName	namedchildren parent nodename -> children not descendants of parent
web	H2Connection	connectionMade		called by the reactor when a connection is received may also be called
web	H2Connection	dataReceived	data	called whenever a chunk of data is received from the transport
web	H2Connection	timeoutConnection		called when the connection has been inactive for l{self
web	H2Connection	forceAbortClient		called if c{aborttimeout} seconds have passed since the timeout fired and the connection still hasn't gone away
web	H2Connection	connectionLost	reason	called when the transport connection is lost
web	H2Connection	stopProducing		stop producing data
web	H2Connection	pauseProducing		pause producing data
web	H2Connection	resumeProducing		resume producing data
web	H2Connection	_sendPrioritisedData		the data sending loop this function repeatedly calls itself either
web	H2Connection	_requestReceived	event	internal handler for when a request has been received
web	H2Connection	_requestDataReceived	event	internal handler for when a chunk of data is received for a given request
web	H2Connection	_requestEnded	event	internal handler for when a request is complete and we expect no further data for that request
web	H2Connection	_requestAborted	event	internal handler for when a request is aborted by a remote peer
web	H2Connection	_handlePriorityUpdate	event	internal handler for when a stream priority is updated
web	H2Connection	writeHeaders	version code reason headers	called by l{twisted web http request} objects to write a complete set
web	H2Connection	writeDataToStream	streamID data	may be called by l{h2stream} objects to write response data to a given stream
web	H2Connection	endRequest	streamID	called by l{h2stream} objects to signal completion of a response
web	H2Connection	abortRequest	streamID	called by l{h2stream} objects to request early termination of a stream
web	H2Connection	_requestDone	streamID	called internally by the data sending loop to clean up state that was being used for the stream
web	H2Connection	remainingOutboundWindow	streamID	called to determine how much room is left in the send window for a given stream
web	H2Connection	_handleWindowUpdate	event	manage flow control windows
web	H2Connection	getPeer		get the remote address of this connection
web	H2Connection	getHost		similar to getpeer but returns an address describing this side of the connection
web	H2Connection	openStreamWindow	streamID increment	open the stream window by a given increment
web	H2Connection	_isSecure		returns l{true} if this channel is using a secure transport
web	H2Connection	_send100Continue	streamID	sends a 100 continue response used to signal to clients that further processing will be performed
web	H2Connection	_respondToBadRequestAndDisconnect	streamID	this is a quick and dirty way of responding to bad requests
web	H2Connection	_streamIsActive	streamID	checks whether twisted has still got state for a given stream and so can process events for that stream
web	H2Stream	__init__	streamID connection headers requestFactory	initialize this http/2 stream
web	H2Stream	_convertHeaders	headers	this method converts the http/2 header set into something that looks like http/1
web	H2Stream	receiveDataChunk	data flowControlledLength	called when the connection has received a chunk of data from the underlying transport
web	H2Stream	requestComplete		called by the l{h2connection} when the all data for a request has been received
web	H2Stream	connectionLost	reason	called by the l{h2connection} when a connection is lost or a stream is reset
web	H2Stream	windowUpdated		called by the l{h2connection} when this stream's flow control window has been opened
web	H2Stream	flowControlBlocked		called by the l{h2connection} when this stream's flow control window has been exhausted
web	H2Stream	writeHeaders	version code reason headers	called by the consumer to write headers to the stream
web	H2Stream	requestDone	request	called by a consumer to clean up whatever permanent state is in use
web	H2Stream	_send100Continue		sends a 100 continue response used to signal to clients that further processing will be performed
web	H2Stream	_respondToBadRequestAndDisconnect		this is a quick and dirty way of responding to bad requests
web	H2Stream	write	data	write a single chunk of data into a data frame
web	H2Stream	writeSequence	iovec	write a sequence of chunks of data into data frames
web	H2Stream	loseConnection		close the connection after writing all pending data
web	H2Stream	abortConnection		forcefully abort the connection by sending a rststream frame
web	H2Stream	getPeer		get information about the peer
web	H2Stream	getHost		similar to getpeer but for this side of the connection
web	H2Stream	isSecure		returns l{true} if this channel is using a secure transport
web	H2Stream	registerProducer	producer streaming	register to receive data from a producer
web	H2Stream	unregisterProducer		@see l{iconsumer unregisterproducer}
web	H2Stream	stopProducing		@see l{iproducer stopproducing}
web	H2Stream	pauseProducing		@see l{ipushproducer pauseproducing}
web	H2Stream	resumeProducing		@see l{ipushproducer resumeproducing}
web		_addHeaderToRequest	request header	add a header tuple to a request header object
web		PRE	text	wrap <pre> tags around some text and html-escape it
web		output	func	output(func *args **kw) -> html string either return the result of a function (which presumably returns an
web	Request	setCopyableState	state	initialize this l{twisted web distrib request} based on the copied
web	Request	write	bytes	write the given bytes to the response body
web	ResourceSubscription	__getstate__		get persistent state for this resourcesubscription
web	ResourceSubscription	connected	publisher	i've connected to a publisher i'll now send all my requests
web	ResourceSubscription	notConnected	msg	i can't connect to a publisher i'll now reply to all pending requests
web	ResourceSubscription	render	request	render this request from my server
web	ResourcePublisher	remote_request	request	look up the resource for the given request and render it
web	UserDirectory	_users		return a list of two-tuples giving links to user resources and text to associate with those links
web	UserDirectory	render_GET	request	render as html a listing of all known users with links to their personal resources
web		_dashCapitalize	name	return a byte string which is capitalized using '-' as a word separator
web	Headers	__repr__		return a string fully describing the headers set on this object
web	Headers	__cmp__	other	define l{headers} instances as being equal to each other if they have the same raw headers
web	Headers	_encodeName	name	encode the name of a header (eg 'content-type') to an iso-8859-1 encoded bytestring if required
web	Headers	_encodeValue	value	encode a single header value to a utf-8 encoded bytestring if required
web	Headers	_encodeValues	values	encode a l{list} of header values to a l{list} of utf-8 encoded bytestrings if required
web	Headers	_decodeValues	values	decode a l{list} of header values into a l{list} of unicode strings
web	Headers	copy		return a copy of itself with the same headers set
web	Headers	hasHeader	name	check for the existence of a given header
web	Headers	removeHeader	name	remove the named header from this header object
web	Headers	setRawHeaders	name values	sets the raw representation of the given header
web	Headers	addRawHeader	name value	add a new raw value for the given header
web	Headers	getRawHeaders	name default	returns a list of headers matching the given name as the raw string given
web	Headers	getAllRawHeaders		return an iterator of key value pairs of all headers contained in this object as l{bytes}
web	Headers	_canonicalNameCaps	name	return the canonical name for the given header
web	_NSContext	__init__	parent	pull out the parent's namespaces if there's no parent then default to xml
web	_NSContext	get	k d	get a prefix for a namespace
web	_NSContext	__setitem__	k v	proxy through to setting the prefix for the namespace
web	_NSContext	__getitem__	k	proxy through to getting the prefix for the namespace
web	_ToStan	__init__	sourceFilename	@param sourcefilename the filename to load the xml out of
web	_ToStan	setDocumentLocator	locator	set the document locator which knows about line and character numbers
web	_ToStan	startDocument		initialise the document
web	_ToStan	processingInstruction	target data	processing instructions are ignored
web	_ToStan	startPrefixMapping	prefix uri	set up the prefix mapping which maps fully qualified namespace uris onto namespace prefixes
web	_ToStan	endPrefixMapping	prefix	"pops the stack" on the prefix mapping
web	_ToStan	startElementNS	namespaceAndName qname attrs	gets called when we encounter a new xmlns attribute
web	_ToStan	characters	ch	called when we receive some characters cdata characters get passed
web	_ToStan	endElementNS	name qname	a namespace tag is closed pop the stack if there's anything left in
web	_ToStan	startDTD	name publicId systemId	dtds are ignored
web	_ToStan	endDTD		dtds are ignored
web	_ToStan	startCDATA		we're starting to be in a cdata element make a note of this
web	_ToStan	endCDATA		we're no longer in a cdata element collect up the characters we've
web	_ToStan	comment	content	add an xml comment which we've encountered
web		_flatsaxParse	fl	perform a sax parse of an xml document with the _tostan class
web	TagLoader	__init__	tag	@param tag the object which will be loaded
web	XMLString	__init__	s	run the parser on a l{nativestringio} copy of the string
web	XMLString	load		return the document
web	XMLFile	__init__	path	run the parser on a file
web	XMLFile	_loadDoc		read and parse the xml
web	XMLFile	load		return the document first loading it if necessary
web		renderElement	request element doctype _failElement	render an element or other c{irenderable}
web		withRequest	f	decorator to cause the request to be passed as the first argument to the method
web	XMLRPC	lookupProcedure	procedurePath	given a string naming a procedure return a callable object for that procedure or raise nosuchfunction
web	XMLRPC	listProcedures		return a list of the names of all xmlrpc procedures
web	XMLRPCIntrospection	__init__	parent	implement introspection support for an xmlrpc server
web	XMLRPCIntrospection	xmlrpc_listMethods		return a list of the method names implemented by this server
web	XMLRPCIntrospection	xmlrpc_methodHelp	method	return a documentation string describing the use of the given method
web	XMLRPCIntrospection	xmlrpc_methodSignature	method	return a list of type signatures
web		addIntrospection	xmlrpc	add introspection support to an xmlrpc server
web	QueryProtocol	handleResponse	contents	handle the xml-rpc response received from the server
web	QueryProtocol	connectionLost	reason	the connection to the server has been lost
web	_QueryFactory	__init__	path host method user	@param method the name of the method to call
web	Proxy	__init__	url user password allowNone	@param url the url to which to post method calls calls will be made
web	Proxy	callRemote	method	call remote xml-rpc c{method} with given arguments
web	HTTPPageGetter	handleHeader	key value	called every time a header is received stores the header information
web	HTTPPageGetter	handleStatus	version status message	handle the http status line
web	HTTPPageGetter	connectionLost	reason	when the connection used to issue the http request is closed notify the factory if we have not already so it can produce a result
web	HTTPClientFactory	_waitForDisconnect	passthrough	chain onto the _disconnecteddeferred preserving c{passthrough}, so that the result is only available after the associated connection has been
web	HTTPClientFactory	gotStatus	version status message	set the status of the request on us
web	HTTPClientFactory	clientConnectionFailed	_ reason	when a connection attempt fails the request cannot be issued if no
web	HTTPDownloader	pageStart	partialContent	called on page download start
web	HTTPDownloader	noPage	reason	close the storage file and errback the waiting l{deferred} with the given reason
web	URI	__init__	scheme netloc host port	@type scheme l{bytes} @param scheme uri scheme specifier
web	URI	fromBytes	cls uri defaultPort	parse the given uri into a l{uri}
web	URI	toBytes		assemble the individual parts of the i{uri} into a fully formed i{uri}
web	URI	originForm		the absolute i{uri} path including i{uri} parameters query string and fragment identifier
web		_urljoin	base url	construct a full ("absolute") url by combining a "base url" with another url
web		_makeGetterFactory	url factoryFactory contextFactory	create and connect an http page getting factory
web		_deprecateGetPageClasses		mark the protocols and factories associated with l{getpage} and l{downloadpage} as deprecated
web		getPage	url contextFactory	download a web page as a string
web		downloadPage	url file contextFactory	download a web page to a file
web		_requireSSL	decoratee	the decorated method requires pyopenssl to be present or it raises l{notimplementederror}
web	WebClientContextFactory	_getCertificateOptions	hostname port	return a l{certificateoptions}
web	WebClientContextFactory	getContext	hostname port	return an l{openssl ssl context}
web	BrowserLikePolicyForHTTPS	creatorForNetloc	hostname port	create a l{client connection creator <twisted
web	_ContextFactoryWithContext	__init__	context	initialize a l{_contextfactorywithcontext} with a context
web	_ContextFactoryWithContext	getContext		return the context created by l{_deprecatedtocurrentpolicyforhttps
web	_DeprecatedToCurrentPolicyForHTTPS	__init__	webContextFactory	wrap a web context factory in an l{ipolicyforhttps}
web	_DeprecatedToCurrentPolicyForHTTPS	creatorForNetloc	hostname port	called the wrapped web context factory's c{getcontext} method with a hostname and port number and return the resulting context object
web	FileBodyProducer	_determineLength	fObj	determine how many bytes can be read out of c{fobj} assuming it is not modified from this point on
web	FileBodyProducer	stopProducing		permanently stop writing bytes from the file to the consumer by stopping the underlying l{cooperativetask}
web	FileBodyProducer	startProducing	consumer	start a cooperative task which will read bytes from the input file and write them to c{consumer}
web	FileBodyProducer	_writeloop	consumer	return an iterator which reads one chunk of bytes from the input file and writes them to the consumer for each time it is iterated
web	FileBodyProducer	pauseProducing		temporarily suspend copying bytes from the input file to the consumer by pausing the l{cooperativetask} which drives that activity
web	FileBodyProducer	resumeProducing		undo the effects of a previous c{pauseproducing} and resume copying bytes to the consumer by resuming the l{cooperativetask} which drives
web	_RetryingHTTP11ClientProtocol	_shouldRetry	method exception bodyProducer	indicate whether request should be retried
web	_RetryingHTTP11ClientProtocol	request	request	do a request and retry once with a new connection if it fails in a retryable manner
web	HTTPConnectionPool	getConnection	key endpoint	supply a connection newly created or retrieved from the pool to be used for one http request
web	HTTPConnectionPool	_newConnection	key endpoint	create a new connection
web	HTTPConnectionPool	_removeConnection	key connection	remove a connection from the cache and disconnect it
web	HTTPConnectionPool	_putConnection	key connection	return a persistent connection to the pool this will be called by
web	HTTPConnectionPool	closeCachedConnections		close all persistent connections and remove them from the pool
web	_AgentBase	_computeHostValue	scheme host port	compute the string to use for the value of the i{host} header based on the given scheme host name and port number
web	_AgentBase	_requestWithEndpoint	key endpoint method parsedURI	issue a new request given the endpoint and the path sent as part of the request
web	_StandardEndpointFactory	__init__	reactor contextFactory connectTimeout bindAddress	@param reactor a provider of l{twisted
web	_StandardEndpointFactory	endpointForURI	uri	connect directly over tcp for c{b'http'} scheme and tls for c{b'https'}
web	Agent	__init__	reactor contextFactory connectTimeout bindAddress	create an l{agent}
web	Agent	usingEndpointFactory	cls reactor endpointFactory pool	create a new l{agent} that will use the endpoint factory to figure out how to connect to the server
web	Agent	_init	reactor endpointFactory pool	initialize a new l{agent}
web	Agent	_getEndpoint	uri	get an endpoint for the given uri using c{self _endpointfactory}
web	Agent	request	method uri headers bodyProducer	issue a request to the server indicated by the given c{uri}
web	ProxyAgent	request	method uri headers bodyProducer	issue a new request via the configured proxy
web	_FakeUrllib2Request	__init__	uri	create a fake urllib2 request
web	CookieAgent	request	method uri headers bodyProducer	issue a new request to the wrapped l{agent}
web	CookieAgent	_extractCookies	response request	extract response cookies and store them in the cookie jar
web	GzipDecoder	deliverBody	protocol	override c{deliverbody} to wrap the given c{protocol} with l{_gzipprotocol}
web	_GzipProtocol	dataReceived	data	decompress c{data} with the zlib decompressor forwarding the raw data to the original protocol
web	_GzipProtocol	connectionLost	reason	forward the connection lost event flushing remaining data from the decompressor if any
web	ContentDecoderAgent	request	method uri headers bodyProducer	send a client request which declares supporting compressed content
web	ContentDecoderAgent	_handleResponse	response	check if the response is encoded and wrap it to handle decompression
web	RedirectAgent	request	method uri headers bodyProducer	send a client request following http redirects
web	RedirectAgent	_resolveLocation	requestURI location	resolve the redirect location against the request i{uri}
web	RedirectAgent	_handleRedirect	response method uri headers	handle a redirect response checking the number of redirects already followed and extracting the location header fields
web	RedirectAgent	_handleResponse	response method uri headers	handle the response making another request if it indicates a redirect
web	_ReadBodyProtocol	__init__	status message deferred	@param status status of l{iresponse}
web	_ReadBodyProtocol	dataReceived	data	accumulate some more bytes from the response
web	_ReadBodyProtocol	connectionLost	reason	deliver the accumulated response bytes to the waiting l{deferred}, if the response body has been completely received without error
web		readBody	response	get the body of an l{iresponse} and return it as a byte string
web		_codeToMessage	code	returns the response message corresponding to an http code or none if the code is unknown or unrecognized
web	Error	__init__	code message response	initializes a basic exception
web	PageRedirect	__init__	code message response location	initializes a page redirect exception
web	InfiniteRedirection	__init__	code message response location	initializes an infinite redirection exception
web	RedirectWithNoLocation	__init__	code message uri	initializes a page redirect exception when no location is given
web	FlattenerError	_formatRoot	obj	convert an object from c{self _roots} to a string suitable for
web	FlattenerError	__repr__		present a string representation which includes a template traceback so we can tell where this error occurred in the template as well as in
web	Options	opt_index	indexName	add the name of a file used to check for directory indexes
web	Options	opt_user		makes a server with ~/public_html and ~/ twistd-web-pb support for
web	Options	opt_path	path	<path> is either a specific file or a directory to be set as the root of the web server
web	Options	opt_processor	proc	ext=class' where class' is added as a processor for files ending with ext'
web	Options	opt_class	className	create a resource subclass with a zero-argument constructor
web	Options	opt_resource_script	name	an rpy file to be used as the root resource of the webserver
web	Options	opt_wsgi	name	the fqpn of a wsgi application object to serve as the root resource of the webserver
web	Options	opt_mime_type	defaultType	specify the default mime-type for static files
web	Options	opt_allow_ignore_ext		specify whether or not a request for 'foo' should return 'foo ext'
web	Options	opt_ignore_ext	ext	specify an extension to ignore these will be processed in order
web	Options	postOptions		set up conditional defaults and check for dependencies
web		makePersonalServerFactory	site	create and return a factory which will respond to i{distrib} requests against the given site
web	NameVirtualHost	addHost	name resrc	add a host to this virtual host
web	NameVirtualHost	removeHost	name	remove a host
web	NameVirtualHost	_getResourceForRequest	request	internal get the appropriate resource for the given host
web	NameVirtualHost	render	request	implementation of resource resource's render method
web	NameVirtualHost	getChild	path request	implementation of resource resource's getchild method
web		alias	aliasPath sourcePath	i am not a very good aliaser but i'm the best i can be if i'm
web	Expose	__call__		add one or more functions to the set of exposed functions
web	Expose	get	instance methodName default	retrieve an exposed method with the given name from the given instance
web	Expose	_withDocumentation	cls thunk	slight hack to make users of this class appear to have a docstring to documentation generators by defining them with a decorator
web		renderer		decorate with l{renderer} to use methods as template render directives
web	Element	lookupRenderMethod	name	look up and return the named render method
web	Element	render	request	implement l{irenderable} to allow one l{element} to be embedded in another's template or rendering output
web	IRequest	getHeader	key	get an http request header
web	IRequest	getCookie	key	get a cookie that was sent from the network
web	IRequest	getAllHeaders		return dictionary mapping the names of all received headers to the last value received for each
web	IRequest	getRequestHostname		get the hostname that the user passed in to the request
web	IRequest	getHost		get my originally requesting transport's host
web	IRequest	getClientIP		return the ip address of the client who submitted this request
web	IRequest	getClient		return the hostname of the ip address of the client who submitted this request if possible
web	IRequest	getUser		return the http user sent with this request if any
web	IRequest	getPassword		return the http password sent with this request if any
web	IRequest	isSecure		return true if this request is using a secure transport
web	IRequest	getSession	sessionInterface	look up the session associated with this request or create a new one if there is not one
web	IRequest	URLPath		@return a l{urlpath} instance which identifies the url for which this request is
web	IRequest	prePathURL		@return at any time during resource traversal a l{str} giving an absolute url to the most nested resource which has yet been
web	IRequest	rememberRootURL		remember the currently-processed part of the url for later recalling
web	IRequest	getRootURL		get a previously-remembered url
web	IRequest	finish		indicate that the response to this request is complete
web	IRequest	write	data	write some data to the body of the response to this request response
web	IRequest	addCookie	k v expires domain	set an outgoing http cookie
web	IRequest	setResponseCode	code message	set the http response code
web	IRequest	setHeader	k v	set an http response header overrides any previously set values for
web	IRequest	redirect	url	utility function that does a redirect
web	IRequest	setLastModified	when	set the c{last-modified} time for the response to this request
web	IRequest	setETag	etag	set an c{entity tag} for the outgoing response
web	IRequest	setHost	host port ssl	change the host and port the request thinks it's using
web	INonQueuedRequestFactory	__call__	channel	create an l{irequest} that is operating on the given channel there
web	IAccessLogFormatter	__call__	timestamp request	generate a line for the access log
web	ICredentialFactory	getChallenge	request	generate a new challenge to be sent to a client
web	ICredentialFactory	decode	response request	create a credentials object from the given response
web	IBodyProducer	startProducing	consumer	start producing to the given l{iconsumer<twisted
web	IBodyProducer	stopProducing		in addition to the standard behavior of l{iproducer
web	IRenderable	lookupRenderMethod	name	look up and return the render method associated with the given name
web	IRenderable	render	request	get the document for this l{irenderable}
web	ITemplateLoader	load		load a template suitable for rendering
web	IResponse	deliverBody	protocol	register an l{iprotocol<twisted internet interfaces iprotocol>} provider
web	IResponse	setPreviousResponse	response	set the reference to the previous l{iresponse}
web	_IRequestEncoder	encode	data	encode the data given and return the result
web	_IRequestEncoder	finish		callback called when the request is closing
web	_IRequestEncoderFactory	encoderForRequest	request	if applicable returns a l{_irequestencoder} instance which will encode the request
web	IAgent	request	method uri headers bodyProducer	request the resource at the given location
web	IPolicyForHTTPS	creatorForNetloc	hostname port	create a l{client connection creator <twisted
web	IAgentEndpointFactory	endpointForURI	uri	construct and return an l{istreamclientendpoint} for the outgoing request's connection
web		_callAppFunction	function	call c{function} if it raises an exception log it with a minimal
web	HTTPParser	switchToBodyMode	decoder	switch to body parsing mode - interpret any more bytes delivered as part of the message body and deliver them to the given decoder
web	HTTPParser	lineReceived	line	handle one line from a response
web	HTTPParser	rawDataReceived	data	pass data from the message body to the body decoder object
web	HTTPParser	isConnectionControlHeader	name	return c{true} if the given lower-cased name is the name of a connection control header rather than an entity header
web	HTTPParser	statusReceived	status	callback invoked whenever the first line of a new message is received
web	HTTPParser	headerReceived	name value	store the given header in c{self headers}
web	HTTPParser	allHeadersReceived		callback invoked after the last header is passed to c{headerreceived}
web	HTTPClientParser	dataReceived	data	override so that we know if any response has been received
web	HTTPClientParser	parseVersion	strversion	parse version strings of the form protocol '/' major ' ' minor e g
web	HTTPClientParser	statusReceived	status	parse the status line into its components and create a response object to keep track of this response's state
web	HTTPClientParser	_finished	rest	called to indicate that an entire response has been received no more
web	HTTPClientParser	isConnectionControlHeader	name	content-length in the response to a head request is an entity header not a connection control header
web	HTTPClientParser	allHeadersReceived		figure out how long the response body is going to be by examining headers and stuff
web	Request	__init__	method uri headers bodyProducer	@param method the http method for this request ex b'get', b'head', b'post', etc
web	Request	absoluteURI		the absolute uri of the request as c{bytes}, or l{none} if the absolute uri cannot be determined
web	Request	_writeToBodyProducerChunked	transport	write this request to the given transport using chunked transfer-encoding to frame the body
web	Request	_writeToBodyProducerContentLength	transport	write this request to the given transport using content-length to frame the body
web	Request	_writeToEmptyBodyContentLength	transport	write this request to the given transport using content-length to frame the empty body
web	Request	writeTo	transport	format this l{request} as an http/1 1 request and write it to the given
web	Request	stopWriting		stop writing this request to the transport this can only be called
web	LengthEnforcingConsumer	_allowNoMoreWrites		indicate that no additional writes are allowed attempts to write
web	LengthEnforcingConsumer	write	bytes	write c{bytes} to the underlying consumer unless c{_nomorewritesexpected} has been called or there are/have been too
web	LengthEnforcingConsumer	_noMoreWritesExpected		called to indicate no more bytes will be written to this consumer
web		makeStatefulDispatcher	name template	given a i{dispatch} name and a function return a function which can be used as a method and which when called will call another method defined
web	Response	__init__	version code phrase headers	@param version http version components protocol major minor e g
web	Response	deliverBody	protocol	dispatch the given l{iprotocol} depending of the current state of the response
web	Response	_deliverBody_INITIAL	protocol	deliver any buffered data to c{protocol} and prepare to deliver any future data to it
web	Response	_deliverBody_CONNECTED	protocol	it is invalid to attempt to deliver data to a protocol when it is already being delivered to another protocol
web	Response	_deliverBody_DEFERRED_CLOSE	protocol	deliver any buffered data to c{protocol} and then disconnect the protocol
web	Response	_deliverBody_FINISHED	protocol	it is invalid to attempt to deliver data to a protocol after the response body has been delivered to another protocol
web	Response	_bodyDataReceived	data	called by httpclientparser with chunks of data from the response body
web	Response	_bodyDataReceived_INITIAL	data	buffer any data received for later delivery to a protocol passed to c{deliverbody}
web	Response	_bodyDataReceived_CONNECTED	data	deliver any data received to the protocol to which this l{response} is connected
web	Response	_bodyDataReceived_DEFERRED_CLOSE	data	it is invalid for data to be delivered after it has been indicated that the response body has been completely delivered
web	Response	_bodyDataReceived_FINISHED	data	it is invalid for data to be delivered after the response body has been delivered to a protocol
web	Response	_bodyDataFinished	reason	called by httpclientparser when no more body data is available if the
web	Response	_bodyDataFinished_INITIAL	reason	move to the c{'deferred_close'} state to wait for a protocol to which to deliver the response body
web	Response	_bodyDataFinished_CONNECTED	reason	disconnect the protocol and move to the c{'finished'} state
web	Response	_bodyDataFinished_DEFERRED_CLOSE		it is invalid to attempt to notify the l{response} of the end of the response body data more than once
web	Response	_bodyDataFinished_FINISHED		it is invalid to attempt to notify the l{response} of the end of the response body data more than once
web	ChunkedEncoder	_allowNoMoreWrites		indicate that no additional writes are allowed attempts to write
web	ChunkedEncoder	registerProducer	producer streaming	register the given producer with c{self transport}
web	ChunkedEncoder	write	data	write the given request body bytes to the transport using chunked encoding
web	ChunkedEncoder	unregisterProducer		indicate that the request body is complete and finish the request
web	TransportProxyProducer	_stopProxying		stop forwarding calls of l{twisted internet interfaces ipushproducer}
web	TransportProxyProducer	stopProducing		proxy the stoppage to the underlying producer unless this proxy has been stopped
web	TransportProxyProducer	resumeProducing		proxy the resumption to the underlying producer unless this proxy has been stopped
web	TransportProxyProducer	pauseProducing		proxy the pause to the underlying producer unless this proxy has been stopped
web	HTTP11ClientProtocol	request	request	issue c{request} over c{self transport} and return a l{deferred} which
web	HTTP11ClientProtocol	_finishResponse	rest	called by an l{httpclientparser} to indicate that it has parsed a complete response
web	HTTP11ClientProtocol	_disconnectParser	reason	if there is still a parser call its c{connectionlost} method with the given reason
web	HTTP11ClientProtocol	_giveUp	reason	lose the underlying connection and disconnect the parser with the given l{failure}
web	HTTP11ClientProtocol	dataReceived	bytes	handle some stuff from some place
web	HTTP11ClientProtocol	connectionLost	reason	the underlying transport went away if appropriate notify the parser
web	HTTP11ClientProtocol	_connectionLost_QUIESCENT	reason	nothing is currently happening move to the c{'connection_lost'}
web	HTTP11ClientProtocol	_connectionLost_GENERATION_FAILED	reason	the connection was in an inconsistent state move to the
web	HTTP11ClientProtocol	_connectionLost_TRANSMITTING	reason	fail the l{deferred} for the current request notify the request object that it does not need to continue transmitting itself and
web	HTTP11ClientProtocol	_connectionLost_TRANSMITTING_AFTER_RECEIVING_RESPONSE	reason	move to the c{'connection_lost'} state
web	HTTP11ClientProtocol	_connectionLost_WAITING	reason	disconnect the response parser so that it can propagate the event as necessary (for example to call an application protocol's
web	HTTP11ClientProtocol	_connectionLost_ABORTING	reason	disconnect the response parser with a l{connectionaborted} failure and move to the c{'connection_lost'} state
web	HTTP11ClientProtocol	abort		close the connection and cause all outstanding l{request} l{deferred}s to fire with an error
web	ProxyClient	handleResponseEnd		finish the original request indicating that the response has been completely written to it and disconnect the outgoing transport
web	ProxyClientFactory	clientConnectionFailed	connector reason	report a connection failure in a response to the incoming request as an error
web	ReverseProxyRequest	process		handle this request by connecting to the proxied server and forwarding it there then forwarding the response back as the response to this
web	ReverseProxyResource	__init__	host port path reactor	@param host the host of the web server to proxy
web	ReverseProxyResource	getChild	path request	create and return a proxy resource with the same proxy configuration as this one except that its path also contains the segment given by
web	ReverseProxyResource	render	request	render a request by forwarding it to the proxied server
web	SOAPPublisher	lookupFunction	functionName	lookup published soap function
web	SOAPPublisher	render	request	handle a soap command
web	XMLParser	saveMark		get the line number and column of the last character parsed
web	XMLParser	_buildStateTable		return a dictionary of begin do end state function tuples
web	XMLParser	connectionLost	reason	end the last state we were in
web	XMLParser	gotTagStart	name attributes	encountered an opening tag
web	XMLParser	gotText	data	encountered text default behaviour is to print
web	XMLParser	gotEntityReference	entityRef	encountered mnemonic entity reference default behaviour is to print
web	XMLParser	gotDoctype	doctype	encountered doctype this is really grotty it basically just gives you everything between
web	XMLParser	gotTagEnd	name	encountered closing tag default behaviour is to print
web._auth	BasicCredentialFactory	getChallenge	request	return a challenge including the http authentication realm with which this factory was created
web._auth	BasicCredentialFactory	decode	response request	parse the base64-encoded colon-separated username and password into a l{credentials
web._auth	DigestCredentialFactory	__init__	algorithm authenticationRealm	create the digest credential factory that this object wraps
web._auth	DigestCredentialFactory	getChallenge	request	generate the challenge for use in the www-authenticate header @param request the l{irequest} to with access was denied and for the
web._auth	DigestCredentialFactory	decode	response request	create a l{twisted cred credentials digestedcredentials} object
web._auth	UnauthorizedResource	render	request	send www-authenticate headers to the client
web._auth	UnauthorizedResource	getChildWithDefault	path request	disable resource dispatch
web._auth	HTTPAuthSessionWrapper	__init__	portal credentialFactories	initialize a session wrapper
web._auth	HTTPAuthSessionWrapper	_authorizedResource	request	get the l{iresource} which the given request is authorized to receive
web._auth	HTTPAuthSessionWrapper	render	request	find the l{iresource} avatar suitable for the given request if possible and render it
web._auth	HTTPAuthSessionWrapper	getChildWithDefault	path request	inspect the authorization http header and return a deferred which when fired after successful authentication will return an authorized
web._auth	HTTPAuthSessionWrapper	_login	credentials	get the l{iresource} avatar for the given credentials
web._auth	HTTPAuthSessionWrapper	_loginSucceeded	args	handle login success by wrapping the resulting l{iresource} avatar so that the c{logout} callback will be invoked when rendering is
web._auth	HTTPAuthSessionWrapper	_loginFailed	result	handle login failure by presenting either another challenge (for expected authentication/authorization-related failures) or a server
web._auth	HTTPAuthSessionWrapper	_selectParseHeader	header	choose an c{icredentialfactory} from c{_credentialfactories} suitable to use to decode the given i{authenticate} header
trial	DirtyReactorAggregateError	__str__		return a multi-line message describing all of the unclean state
trial	_Janitor	__init__	test result reactor	@param test see l{_janitor test}
trial	_Janitor	postCaseCleanup		called by l{unittest testcase} after a test to catch any logged errors
trial	_Janitor	postClassCleanup		called by l{unittest testcase} after the last test in a c{testcase}
trial	_Janitor	_getReactor		get either the passed-in reactor or the global reactor
trial	_Janitor	_cleanPending		cancel all pending calls and return their string representations
trial	_Janitor	_cleanReactor		remove all selectables from the reactor kill any of them that were processes and return their string representation
trial		acquireAttribute	objects attr default	go through the list 'objects' sequentially until we find one which has attribute 'attr', then return the value of that attribute
trial		excInfoOrFailureToExcInfo	err	coerce a failure to an _exc_info if err is a failure
trial		suppress	action	sets up the suppress tuple properly pass options to this method as you
trial		_runSequentially	callables stopOnFirstError	run the given callables one after the other if a callable returns a
trial		_removeSafely	path	safely remove a path recursively
trial		_unusedTestDirectory	base	find an unused directory named similarly to c{base}
trial		_listToPhrase	things finalDelimiter delimiter	produce a string containing each thing in c{things}, separated by a c{delimiter}, with the last couple being separated
trial	ITestCase	__call__	result	run the test should always do exactly the same thing as run()
trial	ITestCase	countTestCases		return the number of tests in this test case usually 1
trial	ITestCase	id		return a unique identifier for the test usually the fully-qualified python name
trial	ITestCase	run	result	run the test storing the results in c{result}
trial	ITestCase	shortDescription		return a short description of the test
trial	IReporter	startTest	method	report the beginning of a run of a single test method
trial	IReporter	stopTest	method	report the status of a single test method
trial	IReporter	startSuite	name	deprecated in twisted 8 0
trial	IReporter	endSuite	name	deprecated in twisted 8 0
trial	IReporter	cleanupErrors	errs	deprecated in twisted 8 0
trial	IReporter	upDownError	userMeth warn printStatus	deprecated in twisted 8 0
trial	IReporter	addSuccess	test	record that test passed
trial	IReporter	addError	test error	record that a test has raised an unexpected exception
trial	IReporter	addFailure	test failure	record that a test has failed with the given failure
trial	IReporter	addExpectedFailure	test failure todo	record that the given test failed and was expected to do so
trial	IReporter	addUnexpectedSuccess	test todo	record that the given test failed and was expected to do so
trial	IReporter	addSkip	test reason	record that a test has been skipped for the given reason
trial	IReporter	printSummary		deprecated in twisted 8 0 use l{done} instead
trial	IReporter	printErrors		deprecated in twisted 8 0 use l{done} instead
trial	IReporter	write	string	deprecated in twisted 8 0 use l{done} instead
trial	IReporter	writeln	string	deprecated in twisted 8 0 use l{done} instead
trial	IReporter	wasSuccessful		return a boolean indicating whether all test results that were reported to this reporter were successful or not
trial	IReporter	done		called when the test run is complete
trial	Todo	__init__	reason errors	@param reason a string explaining why the test is marked 'todo' @param errors an iterable of exception types that the test is
trial	Todo	expected	failure	@param failure a l{twisted python failure failure}
trial		makeTodo	value	return a l{todo} object built from c{value}
trial		_setWarningRegistryToNone	modules	disable the per-module cache for every module found in c{modules}, typically c{sys
trial		_collectWarnings	observeWarning f	call c{f} with c{args} positional arguments and c{kwargs} keyword arguments and collect all warnings which are emitted as a result in a list
trial	PyUnitResultAdapter	__init__	original	@param original a c{testresult} instance from c{unittest}
trial	PyUnitResultAdapter	addSkip	test reason	report the skip as a failure
trial	PyUnitResultAdapter	addUnexpectedSuccess	test todo	report the unexpected success as a failure
trial	PyUnitResultAdapter	addExpectedFailure	test error	report the expected failure i e todo as a failure
trial	_AssertRaisesContext	__init__	testCase expected	@param testcase the l{testcase} instance which is used to raise a test-failing exception when that is necessary
trial	_AssertRaisesContext	_handle	obj	call the given object using this object as a context manager
trial	_AssertRaisesContext	__exit__	exceptionType exceptionValue traceback	check exit exception against expected exception
trial	_Assertions	fail	msg	absolutely fail the test do not pass go do not collect $200
trial	_Assertions	assertFalse	condition msg	fail the test if c{condition} evaluates to true
trial	_Assertions	assertTrue	condition msg	fail the test if c{condition} evaluates to false
trial	_Assertions	assertRaises	exception f	fail the test unless calling the function c{f} with the given c{args} and c{kwargs} raises c{exception}
trial	_Assertions	assertEqual	first second msg	fail the test if c{first} and c{second} are not equal
trial	_Assertions	assertIs	first second msg	fail the test if c{first} is not c{second} this is an
trial	_Assertions	assertIsNot	first second msg	fail the test if c{first} is c{second} this is an
trial	_Assertions	assertNotEqual	first second msg	fail the test if c{first} == c{second}
trial	_Assertions	assertIn	containee container msg	fail the test if c{containee} is not found in c{container}
trial	_Assertions	assertNotIn	containee container msg	fail the test if c{containee} is found in c{container}
trial	_Assertions	assertNotAlmostEqual	first second places msg	fail if the two objects are equal as determined by their difference rounded to the given number of decimal places
trial	_Assertions	assertAlmostEqual	first second places msg	fail if the two objects are unequal as determined by their difference rounded to the given number of decimal places
trial	_Assertions	assertApproximates	first second tolerance msg	fail if c{first} - c{second} > c{tolerance}
trial	_Assertions	assertSubstring	substring astring msg	fail if c{substring} does not exist within c{astring}
trial	_Assertions	assertNotSubstring	substring astring msg	fail if c{astring} contains c{substring}
trial	_Assertions	assertWarns	category message filename f	fail if the given function doesn't generate the specified warning when called
trial	_Assertions	assertIsInstance	instance classOrTuple message	fail if c{instance} is not an instance of the given class or of one of the given classes
trial	_Assertions	assertNotIsInstance	instance classOrTuple	fail if c{instance} is an instance of the given class or of one of the given classes
trial	_Assertions	successResultOf	deferred	return the current success result of c{deferred} or raise c{self
trial	_Assertions	failureResultOf	deferred	return the current failure result of c{deferred} or raise c{self
trial	_Assertions	assertNoResult	deferred	assert that c{deferred} does not have a result at this point
trial	_Assertions	assertRegex	text regex msg	fail the test if a c{regexp} search of c{text} fails
trial	_LogObserver	_ignoreErrors		do not store any errors with any of the given types
trial	_LogObserver	_clearIgnores		stop ignoring any errors we might currently be ignoring
trial	_LogObserver	flushErrors		flush errors from the list of caught errors if no arguments are
trial	_LogObserver	getErrors		return a list of errors caught by this observer
trial	_LogObserver	gotEvent	event	the actual observer method called whenever a message is logged
trial	SynchronousTestCase	__eq__	other	override the comparison defined by the base testcase which considers instances of the same class with the same _testmethodname to be
trial	SynchronousTestCase	getSkip		return the skip reason set on this test if any is set checks on the
trial	SynchronousTestCase	getTodo		return a l{todo} object if the test is marked todo checks on the
trial	SynchronousTestCase	runTest		if no c{methodname} argument is passed to the constructor l{run} will treat this method as the thing with the actual test inside
trial	SynchronousTestCase	run	result	run the test case storing the results in c{result}
trial	SynchronousTestCase	addCleanup	f	add the given function to a list of functions to be called after the test has run but before c{teardown}
trial	SynchronousTestCase	patch	obj attribute value	monkey patch an object for the duration of the test
trial	SynchronousTestCase	flushLoggedErrors		remove stored errors received from the log
trial	SynchronousTestCase	flushWarnings	offendingFunctions	remove stored warnings from the list of captured warnings and return them
trial	SynchronousTestCase	callDeprecated	version f	call a function that should have been deprecated at a specific version and in favor of a specific alternative and assert that it was thusly
trial	SynchronousTestCase	mktemp		create a new path name which can be used for a new file or directory
trial	SynchronousTestCase	_getSuppress		returns any warning suppressions set for this test checks on the
trial	SynchronousTestCase	_getSkipReason	method skip	return the reason to use for skipping a test method
trial	SynchronousTestCase	_run	suppress todo method result	run a single method either a test method or fixture
trial	SynchronousTestCase	_runFixturesAndTest	result	run c{setup}, a test method test cleanups and c{teardown}
trial	SynchronousTestCase	_runCleanups	result	synchronously run any cleanups which have been added
trial	TestCase	__init__	methodName	construct an asynchronous test case for c{methodname}
trial	TestCase	assertFailure	deferred	fail if c{deferred} does not errback with one of c{expectedfailures}
trial	TestCase	deferRunCleanups	ignored result	run any scheduled cleanups and report errors (if any to the result object
trial	TestCase	_makeReactorMethod	name	create a method which wraps the reactor method c{name} the new
trial	TestCase	_deprecateReactor	reactor	deprecate c{iterate}, c{crash} and c{stop} on c{reactor} that is
trial	TestCase	_undeprecateReactor	reactor	restore the deprecated reactor methods undoes what
trial	TestCase	_runCleanups		run the cleanups added with l{addcleanup} in order
trial	TestCase	_runFixturesAndTest	result	really run c{setup}, the test method and c{teardown} any of these may
trial	TestCase	addCleanup	f	extend the base cleanup feature with support for cleanup functions which return deferreds
trial	TestCase	getTimeout		returns the timeout value set on this test checks on the instance
trial	TestCase	_wait	d running	take a deferred that only ever callbacks block until it happens
trial		isPackage	module	given an object return true if the object looks like a package
trial		isPackageDirectory	dirname	is the directory at path 'dirname' a python package directory? returns the name of the __init__ file it may have a weird extension
trial		samefile	filename1 filename2	a hacky implementation of c{os path samefile} used by l{filenametomodule}
trial		filenameToModule	fn	given a filename do whatever possible to return a module object matching that file
trial		_getMethodNameInClass	method	find the attribute name on the method's class which refers to the method
trial	DestructiveTestSuite	run	result	almost the same as l{testsuite run}, but with c{self _tests} being
trial	LoggedSuite	run	result	run the suite storing all errors in c{result} if an error is logged
trial		name	thing	@param thing an object from modules instance of pythonmodule pythonattribute a testcase subclass or an instance of a testcase
trial		isTestCase	obj	@return c{true} if c{obj} is a class that contains test cases c{false} otherwise
trial	TestHolder	__init__	description	@param description a string to be displayed l{testresult}
trial	TestHolder	run	result	this test is just a placeholder run the test successfully
trial	ErrorHolder	__init__	description error	@param description a string used by c{testresult}s to identify this error
trial	ErrorHolder	run	result	run the test reporting the error
trial	TestLoader	sort	xs	sort the given things using l{sorter}
trial	TestLoader	findTestClasses	module	given a module return all trial test classes
trial	TestLoader	findByName	name	return a python object given a string describing it
trial	TestLoader	loadModule	module	return a test suite with all the tests from a module
trial	TestLoader	loadClass	klass	given a class which contains test cases return a sorted list of c{testcase} instances
trial	TestLoader	getTestCaseNames	klass	given a class that contains c{testcase}s return a list of names of methods that probably contain tests
trial	TestLoader	loadMethod	method	given a method of a c{testcase} that represents a test return a c{testcase} instance for that test
trial	TestLoader	loadPackage	package recurse	load tests from a module object representing a package and return a testsuite containing those tests
trial	TestLoader	loadDoctests	module	return a suite of tests for all the doctests defined in c{module}
trial	TestLoader	loadAnything	thing recurse parent qualName	given a python object return whatever tests that are in it whatever
trial	TestLoader	loadByName	name recurse	given a string representing a python object return whatever tests are in that object
trial	TestLoader	loadByNames	names recurse	construct a testsuite containing all the tests found in 'names', where names is a list of fully qualified python names and/or filenames
trial	TestLoader	_uniqueTests	things	gather unique suite objects from loaded things this will guarantee
trial	Py3TestLoader	loadFile	fileName recurse	load a file and then the tests in that file
trial	Py3TestLoader	findByName	_name recurse	find and load tests given c{name}
trial	Py3TestLoader	loadAnything	obj recurse parent qualName	load absolutely anything (as long as that anything is a module package class or method with associated parent class and qualname
trial	Py3TestLoader	loadByName	name recurse	load some tests by name
trial	Py3TestLoader	loadByNames	names recurse	load some tests by a list of names
trial	Py3TestLoader	loadClass	klass	given a class which contains test cases return a list of l{testcase}s
trial	Py3TestLoader	_uniqueTests	things	gather unique suite objects from loaded things this will guarantee
trial		_qualNameWalker	qualName	given a python qualified name this function yields a 2-tuple of the most specific qualified name first followed by the next-most-specific qualified
trial	TrialRunner	run	test	run the test or suite and return a result object
trial	TrialRunner	_runWithoutDecoration	test forceGarbageCollection	private helper that runs the given test but doesn't decorate it
trial	TrialRunner	runUntilFailure	test	repeatedly run c{test} until it fails
trial	TestSuite	run	result	call c{run} on every member of the suite
trial	TestDecorator	__call__	result	run the unit test
trial	TestDecorator	run	result	run the unit test
trial		_clearSuite	suite	clear all tests from c{suite}
trial		decorate	test decorator	decorate all test cases in c{test} with c{decorator}
trial	_BrokenIDTestCaseAdapter	id		return the fully-qualified python name of the doctest
trial		_iterateTests	testSuiteOrCase	iterate through all of the test cases in c{testsuiteorcase}
trial	TestResult	_getFailure	error	convert a c{sys exc_info()}-style tuple to a l{failure}, if necessary
trial	TestResult	startTest	test	this must be called before the given test is commenced
trial	TestResult	stopTest	test	this must be called after the given test is completed
trial	TestResult	addFailure	test fail	report a failed assertion for the given test
trial	TestResult	addError	test error	report an error that occurred while running the given test
trial	TestResult	addSkip	test reason	report that the given test was skipped
trial	TestResult	addUnexpectedSuccess	test todo	report that the given test succeeded against expectations
trial	TestResult	addExpectedFailure	test error todo	report that the given test failed and was expected to do so
trial	TestResult	addSuccess	test	report that the given test succeeded
trial	TestResult	wasSuccessful		report whether or not this test suite was successful or not
trial	TestResult	done		the test suite has finished running
trial	UncleanWarningsReporterWrapper	addError	test error	if the error is a l{util dirtyreactoraggregateerror}, instead of
trial	_AdaptedReporter	__init__	original testAdapter	construct an l{_adaptedreporter}
trial	_AdaptedReporter	addError	test error	see l{itrial ireporter}
trial	_AdaptedReporter	addExpectedFailure	test failure todo	see l{itrial ireporter}
trial	_AdaptedReporter	addFailure	test failure	see l{itrial ireporter}
trial	_AdaptedReporter	addSkip	test skip	see l{itrial ireporter}
trial	_AdaptedReporter	addUnexpectedSuccess	test todo	see l{itrial ireporter}
trial	_AdaptedReporter	startTest	test	see l{itrial ireporter}
trial	_AdaptedReporter	stopTest	test	see l{itrial ireporter}
trial	Reporter	_observeWarnings	event	observe warning events and write them to c{self _stream}
trial	Reporter	startTest	test	called when a test begins to run records the time when it was first
trial	Reporter	addFailure	test fail	called when a test fails if c{realtime} is set then it prints the
trial	Reporter	addError	test error	called when a test raises an error if c{realtime} is set then it
trial	Reporter	_write	format	safely write to the reporter's stream
trial	Reporter	_writeln	format	safely write a line to the reporter's stream newline is appended to
trial	Reporter	_trimFrames	frames	trim frames to remove internal paths
trial	Reporter	_groupResults	results formatter	group tests together based on their results
trial	Reporter	_printResults	flavor errors formatter	print a group of errors to the stream
trial	Reporter	_printErrors		print all of the non-success results to the stream in full
trial	Reporter	_getSummary		return a formatted count of tests status results
trial	Reporter	_printSummary		print a line summarising the test results to the stream
trial	Reporter	done		summarize the result of the test run
trial	MinimalReporter	_printErrors		don't print a detailed summary of errors we only care about the
trial	MinimalReporter	_printSummary		print out a one-line summary of the form
trial	TimingTextReporter	stopTest	method	mark the test as stopped and write the time it took to run the test to the stream
trial	_AnsiColorizer	supported	cls stream	a class method that returns true if the current platform supports coloring terminal output using this method
trial	_AnsiColorizer	write	text color	write the given text to the stream in the given color
trial	SubunitReporter	__init__	stream tbformat realtime publisher	construct a l{subunitreporter}
trial	SubunitReporter	done		record that the entire test suite run is finished
trial	SubunitReporter	shouldStop		whether or not the test runner should stop running tests
trial	SubunitReporter	stop		signal that the test runner should stop running tests
trial	SubunitReporter	wasSuccessful		has the test run been successful so far? @return c{true} if we have received no reports of errors or failures
trial	SubunitReporter	startTest	test	record that c{test} has started
trial	SubunitReporter	stopTest	test	record that c{test} has completed
trial	SubunitReporter	addSuccess	test	record that c{test} was successful
trial	SubunitReporter	addSkip	test reason	record that c{test} was skipped for c{reason}
trial	SubunitReporter	addError	test err	record that c{test} failed with an unexpected error c{err}
trial	SubunitReporter	addFailure	test err	record that c{test} failed an assertion with the error c{err}
trial	SubunitReporter	addExpectedFailure	test failure todo	record an expected failure from a test
trial	SubunitReporter	addUnexpectedSuccess	test todo	record an unexpected success
trial	TreeReporter	getDescription	test	return the name of the method which 'test' represents this is
trial	TreeReporter	_getPreludeSegments	testID	return a list of all non-leaf segments to display in the tree
trial	TreeReporter	_testPrelude	testID	write the name of the test to the stream indenting it appropriately
trial	TreeReporter	startTest	test	called when c{test} starts writes the tests name to the stream using
trial	TreeReporter	endLine	message color	print 'message' in the given color
trial	TreeReporter	_printSummary		print a line summarising the test results to the stream and color the status result
trial._dist		_setupPath	environ	override c{sys path} with what the parent passed in b{trial_pythonpath}
trial._dist	WorkerLogObserver	__init__	protocol	@param protocol a connected c{amp} protocol instance
trial._dist	WorkerLogObserver	emit	eventDict	produce a log output
trial._dist		main	_fdopen	main function to be run if __name__ == "__main__"
trial._dist	DistReporter	startTest	test	queue test starting
trial._dist	DistReporter	addFailure	test fail	queue adding a failure
trial._dist	DistReporter	addError	test error	queue error adding
trial._dist	DistReporter	addSkip	test reason	queue adding a skip
trial._dist	DistReporter	addUnexpectedSuccess	test todo	queue adding an unexpected success
trial._dist	DistReporter	addExpectedFailure	test error todo	queue adding an unexpected failure
trial._dist	DistReporter	addSuccess	test	queue adding a success
trial._dist	DistReporter	stopTest	test	queue stopping the test then unroll the queue
trial._dist	WorkerProtocol	run	testCase	run a test case by name
trial._dist	WorkerProtocol	start	directory	set up the worker moving into given directory for tests to run in them
trial._dist	LocalWorkerAMP	addSuccess	testName	add a success to the reporter
trial._dist	LocalWorkerAMP	_buildFailure	error errorClass frames	helper to build a c{failure} with some traceback
trial._dist	LocalWorkerAMP	addError	testName error errorClass frames	add an error to the reporter
trial._dist	LocalWorkerAMP	addFailure	testName fail failClass frames	add a failure to the reporter
trial._dist	LocalWorkerAMP	addSkip	testName reason	add a skip to the reporter
trial._dist	LocalWorkerAMP	addExpectedFailure	testName error todo	add an expected failure to the reporter
trial._dist	LocalWorkerAMP	addUnexpectedSuccess	testName todo	add an unexpected success to the reporter
trial._dist	LocalWorkerAMP	testWrite	out	print test output from the worker
trial._dist	LocalWorkerAMP	_stopTest	result	stop the current running test case forwarding the result
trial._dist	LocalWorkerAMP	run	testCase result	run a test
trial._dist	LocalWorkerAMP	setTestStream	stream	set the stream used to log output from tests
trial._dist	LocalWorkerTransport	write	data	forward data to transport
trial._dist	LocalWorkerTransport	writeSequence	sequence	emulate c{writesequence} by iterating data in the c{sequence}
trial._dist	LocalWorkerTransport	loseConnection		closes the transport
trial._dist	LocalWorkerTransport	getHost		return a l{localworkeraddress} instance
trial._dist	LocalWorkerTransport	getPeer		return a l{localworkeraddress} instance
trial._dist	LocalWorker	connectionMade		when connection is made create the amp protocol instance
trial._dist	LocalWorker	connectionLost	reason	on connection lost close the log files that we're managing for stdin and stdout
trial._dist	LocalWorker	processEnded	reason	when the process closes call c{connectionlost} for cleanup purposes and forward the information to the c{_ampprotocol}
trial._dist	LocalWorker	outReceived	data	send data received from stdout to log
trial._dist	LocalWorker	errReceived	data	write error data to log
trial._dist	LocalWorker	childDataReceived	childFD data	handle data received on the specific pipe for the c{_ampprotocol}
trial._dist	WorkerOptions	coverdir		return a l{filepath} representing the directory into which coverage results should be written
trial._dist	WorkerReporter	__init__	ampProtocol	@param ampprotocol the communication channel with the trial distributed manager which collects all test results
trial._dist	WorkerReporter	_getFailure	error	convert a c{sys exc_info()}-style tuple to a l{failure}, if necessary
trial._dist	WorkerReporter	_getFrames	failure	extract frames from a c{failure} instance
trial._dist	WorkerReporter	addSuccess	test	send a success over
trial._dist	WorkerReporter	addError	test error	send an error over
trial._dist	WorkerReporter	addFailure	test fail	send a failure over
trial._dist	WorkerReporter	addSkip	test reason	send a skip over
trial._dist	WorkerReporter	_getTodoReason	todo	get the reason for a c{todo}
trial._dist	WorkerReporter	addExpectedFailure	test error todo	send an expected failure over
trial._dist	WorkerReporter	addUnexpectedSuccess	test todo	send an unexpected success over
trial._dist	WorkerReporter	printSummary		i{don't} print a summary
trial._dist	DistTrialRunner	_makeResult		make reporter factory and wrap it with a l{distreporter}
trial._dist	DistTrialRunner	writeResults	result	write test run final outcome to result
trial._dist	DistTrialRunner	createLocalWorkers	protocols workingDirectory	create local worker protocol instances and return them
trial._dist	DistTrialRunner	launchWorkerProcesses	spawner protocols arguments	spawn processes from a list of process protocols
trial._dist	DistTrialRunner	_driveWorker	worker result testCases cooperate	drive a l{localworkeramp} instance iterating the tests and calling c{run} for every one of them
trial._dist	DistTrialRunner	run	suite reactor cooperate untilFailure	spawn local worker processes and load tests after that run them
trial._dist	DistTrialRunner	runUntilFailure	suite	run the tests with local worker processes until they fail
persisted	IPersistable	setStyle	style	set desired format
persisted	IPersistable	save	tag filename passphrase	save object to file
persisted	Persistent	setStyle	style	set desired format
persisted	Persistent	save	tag filename passphrase	save object to file
persisted	_EverythingEphemeral	__init__	mainMod	@param mainmod the '__main__' module that this class will proxy
persisted		load	filename style	load an object from a file
persisted		loadValueFromFile	filename variable	load the value of a variable in a python file
persisted		getSource	ao	pass me an ao i'll return a nicely-formatted source representation
persisted		unjellyFromAOT	aot	pass me an abstract object tree and i'll unjelly it for you
persisted		unjellyFromSource	stringOrFile	pass me a string of code or a filename that defines an 'app' variable (in
persisted	AOTUnjellier	unjellyLater	node	unjelly a node later
persisted	AOTUnjellier	unjellyInto	obj loc ao	utility method for unjellying one object into another
persisted	AOTUnjellier	unjellyAttribute	instance attrName ao	utility method for unjellying into instances of attributes
persisted	AOTUnjellier	unjellyAO	ao	unjelly an abstract object and everything it contains
persisted		jellyToAOT	obj	convert an object to an abstract object tree
persisted		jellyToSource	obj file	pass me an object and optionally a file object
persisted		_classOfMethod	methodObject	get the associated class of the given method object
persisted		_funcOfMethod	methodObject	get the associated function of the given method object
persisted		_selfOfMethod	methodObject	get the object that a bound method is bound to
persisted	AOTJellier	prepareForRef	aoref object	i prepare an object for later referencing by storing its id() and its _aoref in a cache
persisted	AOTJellier	jellyToAO	obj	i turn an object into an aot and return it
persisted		pickleMethod	method	support function for copy_reg to pickle method refs
persisted		_methodFunction	classObject methodName	retrieve the function object implementing a method name given the class it's on and a method name
persisted		unpickleMethod	im_name im_self im_class	support function for copy_reg to unpickle method refs
persisted		_pickleFunction	f	reduce in the sense of l{pickle}'s c{object __reduce__} special method a
persisted		_unpickleFunction	fullyQualifiedName	convert a function name into a function by importing it
persisted		pickleModule	module	support function for copy_reg to pickle module refs
persisted		unpickleModule	name	support function for copy_reg to unpickle module refs
persisted		pickleStringO	stringo	reduce the given cstringo
persisted		unpickleStringO	val sek	convert the output of l{picklestringo} into an appropriate type for the current python version
persisted		pickleStringI	stringi	reduce the given cstringi
persisted		unpickleStringI	val sek	convert the output of l{picklestringi} into an appropriate type for the current python version
persisted	Ephemeral	__reduce__		serialize any subclass of l{ephemeral} in a way which replaces it with l{ephemeral} itself
persisted		requireUpgrade	obj	require that a versioned instance be upgraded completely first
persisted		_aybabtu	c	get all of the parent classes of c{c}, not including c{c} itself which are strict subclasses of l{versioned}
persisted	Versioned	__getstate__	dict	get state adding a version number to it on its way out
persisted	Versioned	versionUpgrade		internal do a version upgrade
persisted	DirDBM	__init__	name	@type name str @param name base path to use for the directory storage
persisted	DirDBM	_encode	k	encode a key so it can be used as a filename
persisted	DirDBM	_decode	k	decode a filename to get the key
persisted	DirDBM	_readFile	path	read in the contents of a file
persisted	DirDBM	_writeFile	path data	write data to a file
persisted	DirDBM	__len__		@return the number of key/value pairs in this shelf
persisted	DirDBM	__setitem__	k v	c{dirdbm[k] = v}
persisted	DirDBM	__getitem__	k	c{dirdbm[k]} get the contents of a file in this directory as a string
persisted	DirDBM	__delitem__	k	c{del dirdbm[foo]} delete a file in this directory
persisted	DirDBM	keys		@return a l{list} of filenames keys
persisted	DirDBM	values		@return a l{list} of file-contents values
persisted	DirDBM	items		@return a l{list} of 2-tuples containing key/value pairs
persisted	DirDBM	has_key	key	@type key bytes @param key the key to test
persisted	DirDBM	setdefault	key value	@type key bytes @param key the key to lookup
persisted	DirDBM	get	key default	@type key bytes @param key the key to lookup
persisted	DirDBM	__contains__	key	@see l{dirdbm has_key}
persisted	DirDBM	update	dict	add all the key/value pairs in l{dict} to this dirdbm any conflicting
persisted	DirDBM	copyTo	path	copy the contents of this dirdbm to the dirdbm at c{path}
persisted	DirDBM	clear		delete all key/value pairs in this dirdbm
persisted	DirDBM	close		close this dbm no-op for dbm-style interface compliance
persisted	DirDBM	getModificationTime	key	returns modification time of an entry
persisted	Shelf	__setitem__	k v	c{shelf[foo] = bar} create or modify a textfile in this directory
persisted	Shelf	__getitem__	k	c{dirdbm[foo]} get and unpickle the contents of a file in this directory
persisted		open	file flag mode	this is for 'anydbm' compatibility
persisted	_Container	__init__	l containerType	@param l the list of object which may contain some not yet referenced objects
persisted	_Container	__setitem__	n obj	change the value of one contained objects and resolve references if all objects have been referenced
persisted	_Tuple	__init__	l	@param l the list of object which may contain some not yet referenced objects
application		service	description factory reactor	return the service corresponding to a description
application		listen	description factory	listen on a port corresponding to a description
application		_maybeGlobalReactor	maybeReactor	@return the argument or the global reactor if the argument is l{none}
application	_AbstractServer	_getPort		wrapper around the appropriate listen method of the reactor
application	_AbstractClient	_getConnection		wrapper around the appropriate connect method of the reactor
application	TimerService	__init__	step callable	@param step the number of seconds between calls
application	TimerService	stopService		stop the service
application	StreamServerEndpointService	privilegedStartService		start listening on the endpoint
application	StreamServerEndpointService	startService		start listening on the endpoint unless l{privilegedstartservice} got around to it already
application	StreamServerEndpointService	stopService		stop listening on the port if it is already listening otherwise cancel the attempt to listen
application	_ReconnectingProtocolProxy	__init__	protocol lostNotification	create a l{_reconnectingprotocolproxy}
application	_ReconnectingProtocolProxy	connectionLost	reason	the connection was lost relay this information
application	_DisconnectFactory	buildProtocol	addr	create a l{_reconnectingprotocolproxy} with the disconnect-notification callback we were called with
application		backoffPolicy	initialDelay maxDelay factor jitter	a timeout policy for l{clientservice} which computes an exponential backoff interval with configurable parameters
application		_firstResult	gen	return the first element of a generator and exhaust it
application	_ClientMachine	__init__	endpoint factory retryPolicy clock	@see l{clientservice __init__}
application	_ClientMachine	_init		the service has not been started
application	_ClientMachine	_connecting		the service has started connecting
application	_ClientMachine	_waiting		the service is waiting for the reconnection period before reconnecting
application	_ClientMachine	_connected		the service is connected
application	_ClientMachine	_disconnecting		the service is disconnecting after being asked to shutdown
application	_ClientMachine	_restarting		the service is disconnecting and has been asked to restart
application	_ClientMachine	_stopped		the service has been stopped and is disconnected
application	_ClientMachine	start		start this l{clientservice}, initiating the connection retry loop
application	_ClientMachine	_connect		start a connection attempt
application	_ClientMachine	_resetFailedAttempts		reset the number of failed attempts
application	_ClientMachine	stop		stop trying to connect and disconnect any current connection
application	_ClientMachine	_waitForStop		return a deferred that will fire when the service has finished disconnecting
application	_ClientMachine	_stopConnecting		stop pending connection attempt
application	_ClientMachine	_stopRetrying		stop pending attempt to reconnect
application	_ClientMachine	_disconnect		disconnect the current connection
application	_ClientMachine	_connectionMade	protocol	a connection has been made
application	_ClientMachine	_notifyWaiters	protocol	notify all pending requests for a connection that a connection has been made
application	_ClientMachine	_connectionFailed	f	the current connection attempt failed
application	_ClientMachine	_wait		schedule a retry attempt
application	_ClientMachine	_ignoreAndWait	f	schedule a retry attempt and ignore the failure passed in
application	_ClientMachine	_reconnect		the wait between connection attempts is done
application	_ClientMachine	_clientDisconnected		the current connection has been disconnected
application	_ClientMachine	_forgetConnection		forget the current connection
application	_ClientMachine	_cancelConnectWaiters		notify all pending requests for a connection that no more connections are expected
application	_ClientMachine	_ignoreAndCancelConnectWaiters	f	notify all pending requests for a connection that no more connections are expected after ignoring the failure passed in
application	_ClientMachine	_finishStopping		notify all deferreds waiting on the service stopping
application	_ClientMachine	_ignoreAndFinishStopping	f	notify all deferreds waiting on the service stopping and ignore the failure passed in
application	_ClientMachine	whenConnected	failAfterFailures	retrieve the currently-connected l{protocol}, or the next one to connect
application	_ClientMachine	_currentConnection	failAfterFailures	return the currently connected protocol
application	_ClientMachine	_noConnection	failAfterFailures	notify the caller that no connection is expected
application	_ClientMachine	_awaitingConnection	failAfterFailures	return a deferred that will fire with the next connected protocol
application	_ClientMachine	_deferredSucceededWithNone		return a deferred that has already fired with l{none}
application	_ClientMachine	_unawait	value	fire all outstanding l{clientservice whenconnected} l{deferred}s
application	_ClientMachine	_deliverConnectionFailure	f	deliver connection failures to any l{clientservice whenconnected}
application	ClientService	__init__	endpoint factory retryPolicy clock	@param endpoint a l{stream client endpoint <interfaces
application	ClientService	whenConnected	failAfterFailures	retrieve the currently-connected l{protocol}, or the next one to connect
application	ClientService	startService		start this l{clientservice}, initiating the connection retry loop
application	ClientService	stopService		stop attempting to reconnect and close any existing connections
application	_BasicProfiler	_reportImportError	module e	helper method to report an import error with a profile module this
application	ProfileRunner	run	reactor	run reactor under the standard profiler
application	CProfileRunner	run	reactor	run reactor under the cprofile profiler
application	AppLogger	__init__	options	initialize an l{applogger} with a l{serveroptions}
application	AppLogger	start	application	initialize the global logging system for the given application
application	AppLogger	_initialLog		print twistd start log message
application	AppLogger	_getLogObserver		create a log observer to be added to the logging system before running this application
application	AppLogger	stop		remove all log observers previously set up by l{applogger start}
application		runReactorWithLogging	config oldstdout oldstderr profiler	start the reactor using profiling if specified by the configuration and log any error happening in the process
application	ApplicationRunner	run		run the application
application	ApplicationRunner	startReactor	reactor oldstdout oldstderr	run the reactor with the given configuration subclasses should
application	ApplicationRunner	preApplication		override in subclass
application	ApplicationRunner	postApplication		override in subclass
application	ApplicationRunner	createOrGetApplication		create or load an application based on the parameters found in the given l{serveroptions} instance
application	ReactorSelectionMixin	opt_help_reactors		display a list of possibly available reactor names
application	ReactorSelectionMixin	opt_reactor	shortName	which reactor to use see --help-reactors for a list of possibilities
application	ServerOptions	opt_debug		run the application in the python debugger implies nodaemon
application	ServerOptions	opt_spew		print an insanely verbose log of everything that happens
application	IServiceMaker	makeService	options	create and return an object providing l{twisted
application	IService	setName	name	set the name of the service
application	IService	setServiceParent	parent	set the parent of the service this method is responsible for setting
application	IService	disownServiceParent		use this api to remove an l{iservice} from an l{iservicecollection}
application	IService	startService		start the service
application	IService	stopService		stop the service
application	IService	privilegedStartService		do preparation work for starting the service
application	IServiceCollection	getServiceNamed	name	get the child service with a given name
application	IServiceCollection	__iter__		get an iterator over all child services
application	IServiceCollection	addService	service	add a child service
application	IServiceCollection	removeService	service	remove a child service
application	Process	__init__	uid gid	set uid and gid
application		Application	name uid gid	return a compound class
application		loadApplication	filename kind passphrase	load application from a given file
application	IReactorInstaller	install		install this reactor
application		getReactorTypes		return an iterator of l{ireactorinstaller} plugins
application		installReactor	shortName	install the reactor with the given c{shortname} attribute
application.twist	Twist	options	argv	parse command line options
application.twist	Twist	service	plugin options	create the application service
application.twist	Twist	startService	reactor service	start the application service
application.twist	Twist	runnerArguments	twistOptions	take options obtained from command line and configure arguments to pass to the application runner
application.twist	Twist	run	runnerArguments	run the application service
application.twist	Twist	main	cls argv	executable entry point for l{twist}
application.twist	TwistOptions	opt_version		print version and exit
application.twist	TwistOptions	opt_reactor	name	the name of the reactor to use
application.twist	TwistOptions	installReactor	name	install the reactor
application.twist	TwistOptions	opt_log_level	levelName	set default log level
application.twist	TwistOptions	opt_log_file	fileName	log to file ("-" for stdout "+" for stderr default "-")
application.twist	TwistOptions	opt_log_format	format	log file format
application.twist	TwistOptions	selectDefaultLogObserver		set c{filelogobserverfactory} to the default appropriate for the chosen c{logfile}
application.runner	IPIDFile	read		read the process id stored in this pid file
application.runner	IPIDFile	writeRunningPID		store the pid of the current process in this pid file
application.runner	IPIDFile	remove		remove this pid file
application.runner	IPIDFile	isRunning		determine whether there is a running process corresponding to the pid in this pid file
application.runner	IPIDFile	__enter__		enter a context using this pidfile
application.runner	IPIDFile	__exit__	excType excValue traceback	exit a context using this pidfile
application.runner	PIDFile	_format	pid	format a pid file's content
application.runner	PIDFile	__init__	filePath	@param filepath the path to the pid file on disk
application.runner	PIDFile	_write	pid	store a pid in this pid file
application.runner	PIDFile	_pidIsRunningPOSIX	pid	posix implementation for running process check
application.runner	NonePIDFile	_write	pid	store a pid in this pid file
application.runner		exit	status message	exit the python interpreter with the given status and an optional message
application.runner	Runner	__init__	reactor pidFile kill defaultLogLevel	@param reactor the reactor to start and run the application in
application.runner	Runner	run		run this command
application.runner	Runner	killIfRequested		if c{self kill} is true attempt to kill a running instance of the
application.runner	Runner	startLogging		start the l{twisted logger} logging system
application.runner	Runner	startReactor		if c{self reactor} is l{none}, install the default reactor and set
application.runner	Runner	whenRunning		call c{self whenrunning}
application.runner	Runner	reactorExited		call c{self reactorexited}
tap	Options	opt_password_file	filename	specify a file containing username password login info for authenticated connections
positioning	_BaseSentence	__init__	sentenceData	initializes a sentence with parsed sentence data
positioning	_BaseSentence	presentAttributes		an iterable containing the names of the attributes that are present in this sentence
positioning	_BaseSentence	__getattr__	name	gets an attribute of this sentence
positioning	_BaseSentence	__repr__		returns a textual representation of this sentence
positioning	_PositioningSentenceProducerMixin	getSentenceAttributes	cls	returns a set of all attributes that might be found in the sentences produced by this protocol
positioning	BasePositioningReceiver	timeReceived	time	implements l{ipositioningreceiver timereceived} stub
positioning	BasePositioningReceiver	headingReceived	heading	implements l{ipositioningreceiver headingreceived} stub
positioning	BasePositioningReceiver	speedReceived	speed	implements l{ipositioningreceiver speedreceived} stub
positioning	BasePositioningReceiver	climbReceived	climb	implements l{ipositioningreceiver climbreceived} stub
positioning	BasePositioningReceiver	positionReceived	latitude longitude	implements l{ipositioningreceiver positionreceived} stub
positioning	BasePositioningReceiver	positionErrorReceived	positionError	implements l{ipositioningreceiver positionerrorreceived} stub
positioning	BasePositioningReceiver	altitudeReceived	altitude	implements l{ipositioningreceiver altitudereceived} stub
positioning	BasePositioningReceiver	beaconInformationReceived	beaconInformation	implements l{ipositioningreceiver beaconinformationreceived} stub
positioning	Angle	__init__	angle angleType	initializes an angle
positioning	Angle	inDecimalDegrees		the value of this angle in decimal degrees this value is immutable
positioning	Angle	inDegreesMinutesSeconds		the value of this angle as a degrees minutes seconds tuple this
positioning	Angle	setSign	sign	sets the sign of this angle
positioning	Angle	__float__		returns this angle as a float
positioning	Angle	__repr__		returns a string representation of this angle
positioning	Angle	_angleValueRepr		returns a string representation of the angular value of this angle
positioning	Angle	_angleTypeNameRepr		returns a string representation of the type of this angle
positioning	Heading	__init__	angle variation	initializes an angle with an optional variation
positioning	Heading	fromFloats	cls angleValue variationValue	constructs a heading from the float values of the angle and variation
positioning	Heading	correctedHeading		corrects the heading by the given variation this is sometimes known as
positioning	Heading	setSign	sign	sets the sign of the variation of this heading
positioning	Heading	__repr__		returns a string representation of this angle
positioning	Coordinate	__init__	angle coordinateType	initializes a coordinate
positioning	Coordinate	hemisphere		gets the hemisphere of this coordinate
positioning	Altitude	__init__	altitude	initializes an altitude
positioning	Altitude	inFeet		gets the altitude this object represents in feet
positioning	Altitude	inMeters		returns the altitude this object represents in meters
positioning	Altitude	__float__		returns the altitude represented by this object expressed in meters
positioning	Altitude	__repr__		returns a string representation of this altitude
positioning	_BaseSpeed	__init__	speed	initializes a speed
positioning	_BaseSpeed	inMetersPerSecond		the speed that this object represents expressed in meters per second
positioning	_BaseSpeed	inKnots		returns the speed represented by this object expressed in knots this
positioning	_BaseSpeed	__float__		returns the speed represented by this object expressed in meters per second
positioning	_BaseSpeed	__repr__		returns a string representation of this speed object
positioning	Speed	__init__	speed	initializes a l{speed} object
positioning	Climb	__init__	climb	initializes a l{climb} object
positioning	PositionError	__init__	pdop hdop vdop testInvariant	initializes a positioning error object
positioning	PositionError	_testDilutionOfPositionInvariant		tests if this positioning error object satisfies the dilution of position invariant (pdop = (hdop**2 + vdop**2)*
positioning	PositionError	_getDOP	dopType	gets a particular dilution of position value
positioning	PositionError	_setDOP	dopType value	sets a particular dilution of position value
positioning	PositionError	__repr__		returns a string representation of positioning information object
positioning	BeaconInformation	__init__	seenBeacons	initializes a beacon information object
positioning	BeaconInformation	__repr__		returns a string representation of this beacon information object
positioning	PositioningBeacon	__init__	identifier	initializes a positioning beacon
positioning	PositioningBeacon	__hash__		returns the hash of the identifier for this beacon
positioning	PositioningBeacon	__repr__		returns a string representation of this beacon
positioning	Satellite	__init__	identifier azimuth elevation signalToNoiseRatio	initializes a satellite object
positioning	Satellite	__repr__		returns a string representation of this satellite
positioning		_split	sentence	returns the split version of an nmea sentence minus header and checksum
positioning		_validateChecksum	sentence	validates the checksum of an nmea sentence
positioning	NMEAProtocol	__init__	receiver sentenceCallback	initializes an nmeaprotocol
positioning	NMEAProtocol	lineReceived	rawSentence	parses the data from the sentence and validates the checksum
positioning	NMEASentence	_isFirstGSVSentence		tests if this current gsv sentence is the first one in a sequence
positioning	NMEASentence	_isLastGSVSentence		tests if this current gsv sentence is the final one in a sequence
positioning	NMEAAdapter	__init__	receiver	initializes a new nmea adapter
positioning	NMEAAdapter	_fixTimestamp		turns the nmeaprotocol timestamp notation into a datetime time object
positioning	NMEAAdapter	_fixDatestamp		turns an nmea datestamp format into a c{datetime date} object
positioning	NMEAAdapter	_fixCoordinateFloat	coordinateType	turns the nmeaprotocol coordinate format into python float
positioning	NMEAAdapter	_fixHemisphereSign	coordinateType sentenceDataKey	fixes the sign for a hemisphere
positioning	NMEAAdapter	_getHemisphereSign	coordinateType	returns the hemisphere sign for a given coordinate type
positioning	NMEAAdapter	_convert	key converter	a simple conversion fix
positioning	NMEAAdapter	_statefulUpdate	sentenceKey	does a stateful update of a particular positioning attribute
positioning	NMEAAdapter	_fixUnits	unitKey valueKey sourceKey unit	fixes the units of a certain value if the units are already
positioning	NMEAAdapter	_fixGSV		parses partial visible satellite information from a gsv sentence
positioning	NMEAAdapter	_fixGSA		extracts the information regarding which satellites were used in obtaining the gps fix from a gsa sentence
positioning	NMEAAdapter	_sentenceSpecificFix		executes a fix for a specific type of sentence
positioning	NMEAAdapter	clear		resets this adapter
positioning	NMEAAdapter	sentenceReceived	sentence	called when a sentence is received
positioning	NMEAAdapter	_validateCurrentSentence		tests if a sentence contains a valid fix
positioning	NMEAAdapter	_cleanCurrentSentence		cleans the current sentence
positioning	NMEAAdapter	_updateState		updates the current state with the new information from the sentence
positioning	NMEAAdapter	_updateBeaconInformation		updates existing beacon information state with new data
positioning	NMEAAdapter	_updateUsedBeacons	beaconInformation	searches the adapter state and sentence data for information about which beacons where used then adds it to the provided beacon
positioning	NMEAAdapter	_mergeBeaconInformation	newBeaconInformation	merges beacon information in the adapter state if it exists into the provided beacon information
positioning	NMEAAdapter	_combineDateAndTime		combines a c{datetime date} object and a c{datetime time} object
positioning	NMEAAdapter	_fireSentenceCallbacks		fires sentence callbacks for the current sentence
positioning	IPositioningReceiver	positionReceived	latitude longitude	method called when a position is received
positioning	IPositioningReceiver	positionErrorReceived	positionError	method called when position error is received
positioning	IPositioningReceiver	timeReceived	time	method called when time and date information arrives
positioning	IPositioningReceiver	headingReceived	heading	method called when a true heading is received
positioning	IPositioningReceiver	altitudeReceived	altitude	method called when an altitude is received
positioning	IPositioningReceiver	speedReceived	speed	method called when the speed is received
positioning	IPositioningReceiver	climbReceived	climb	method called when the climb is received
positioning	IPositioningReceiver	beaconInformationReceived	beaconInformation	method called when positioning beacon information is received
positioning	INMEAReceiver	sentenceReceived	sentence	method called when a sentence is received
mail		generateBounce	message failedFrom failedTo transcript	generate a bounce message for an undeliverable email message
mail	DomainQueuer	exists	user	check whether mail can be relayed to a user
mail	DomainQueuer	willRelay	address protocol	check whether we agree to relay
mail	DomainQueuer	startMessage	user	create an envelope and a message receiver for the relay queue
mail	RelayerMixin	sentMail	code resp numOk addresses	since we only use one recipient per envelope this will be called with 0 or 1 addresses
mail	SMTPRelayer	__init__	messagePaths	@type messagepaths l{list} of l{bytes} @param messagepaths the base filename for each message to be relayed
mail	ESMTPRelayer	__init__	messagePaths	@type messagepaths l{list} of l{bytes} @param messagepaths the base filename for each message to be relayed
mail	SMTPClientError	__init__	code resp log addresses	@param code the smtp response code associated with this error
mail	ServerErrorResponse	__init__	reason consumer	@type reason l{bytes} @param reason the server response minus the status indicator
mail	_ListSetter	__init__	L	@type l l{list} of l{object} @param l the list being constructed
mail	_ListSetter	setitem	itemAndValue	add the value at the specified position padding out missing entries
mail		_statXform	line	parse the response to a stat command
mail		_listXform	line	parse a line of the response to a list command
mail		_uidXform	line	parse a line of the response to a uidl command
mail		_codeStatusSplit	line	parse the first line of a multi-line server response
mail		_dotUnquoter	line	remove a byte-stuffed termination character at the beginning of a line if present
mail	POP3Client	_blocked	f	block a command if necessary
mail	POP3Client	_unblock		send the next blocked command
mail	POP3Client	sendShort	cmd args	send a pop3 command to which a short response is expected
mail	POP3Client	sendLong	cmd args consumer xform	send a pop3 command to which a multi-line response is expected
mail	POP3Client	connectionMade		wait for a greeting from the server after the connection has been made
mail	POP3Client	timeoutConnection		drop the connection when the server does not respond in time
mail	POP3Client	connectionLost	reason	clean up when the connection has been lost
mail	POP3Client	lineReceived	line	pass a received line to a state machine function and transition to the next state
mail	POP3Client	lineLengthExceeded	buffer	drop the connection when a server response exceeds the maximum line length (l{lineonlyreceiver
mail	POP3Client	state_WELCOME	line	handle server responses for the welcome state in which the server greeting is expected
mail	POP3Client	state_WAITING	line	log an error for server responses received in the waiting state during which the server is not expected to send anything
mail	POP3Client	state_SHORT	line	handle server responses for the short state in which the server is expected to send a single line response
mail	POP3Client	state_LONG_INITIAL	line	handle server responses for the long_initial state in which the server is expected to send the first line of a multi-line response
mail	POP3Client	state_LONG	line	handle server responses for the long state in which the server is expected to send a non-initial line of a multi-line response
mail	POP3Client	serverGreeting	greeting	handle the server greeting
mail	POP3Client	startTLS	contextFactory	switch to encrypted communication using tls
mail	POP3Client	_startTLS	caps contextFactory tls	continue the process of switching to encrypted communication
mail	POP3Client	_startedTLS	result context tls	complete the process of switching to encrypted communication
mail	POP3Client	_getContextFactory		get a context factory with which to negotiate tls
mail	POP3Client	login	username password	log in to the server
mail	POP3Client	_login	caps username password	continue the process of logging in to the server
mail	POP3Client	_loginTLS	res username password	do a plaintext login over an encrypted transport
mail	POP3Client	_plaintext	username password	perform a plaintext login
mail	POP3Client	_apop	username password challenge	perform an apop login
mail	POP3Client	apop	username digest	send an apop command to perform authenticated login
mail	POP3Client	user	username	send a user command to perform the first half of plaintext login
mail	POP3Client	password	password	send a pass command to perform the second half of plaintext login
mail	POP3Client	delete	index	send a dele command to delete a message from the server
mail	POP3Client	_consumeOrSetItem	cmd args consumer xform	send a command to which a long response is expected and process the multi-line response into a list accounting for deleted messages
mail	POP3Client	_consumeOrAppend	cmd args consumer xform	send a command to which a long response is expected and process the multi-line response into a list
mail	POP3Client	capabilities	useCache	send a capa command to retrieve the capabilities supported by the server
mail	POP3Client	noop		send a noop command asking the server to do nothing but respond
mail	POP3Client	reset		send a rset command to unmark any messages that have been flagged for deletion on the server
mail	POP3Client	retrieve	index consumer lines	send a retr or top command to retrieve all or part of a message from the server
mail	POP3Client	stat		send a stat command to get information about the size of the mailbox
mail	POP3Client	listSize	consumer	send a list command to retrieve the sizes of all messages on the server
mail	POP3Client	listUID	consumer	send a uidl command to retrieve the uids of all messages on the server
mail	POP3Client	quit		send a quit command to disconnect from the server
mail	DomainDeliveryBase	__init__	service user host	@type service l{mailservice} @param service a mail service
mail	DomainDeliveryBase	receivedHeader	helo origin recipients	generate a received header string for a message
mail	DomainDeliveryBase	validateTo	user	validate the address for which a message is destined
mail	DomainDeliveryBase	validateFrom	helo origin	validate the address from which a message originates
mail	SMTPFactory	__init__	service portal	@type service l{mailservice} @param service an email service
mail	SMTPFactory	buildProtocol	addr	create an instance of an smtp server protocol
mail	ESMTPFactory	__init__		@param args arguments for l{smtpfactory __init__}
mail	ESMTPFactory	buildProtocol	addr	create an instance of an esmtp server protocol
mail	VirtualPOP3	authenticateUserAPOP	user digest	perform apop authentication
mail	VirtualPOP3	authenticateUserPASS	user password	perform authentication for a username/password login
mail	VirtualPOP3	lookupDomain	user	check whether a domain is among the virtual domains supported by the mail service
mail	POP3Factory	__init__	service	@type service l{mailservice} @param service an email service
mail	POP3Factory	buildProtocol	addr	create an instance of a pop3 server protocol
mail	ManagedRelayerMixin	sentMail	code resp numOk addresses	called when e-mail has been sent we will always get 0 or 1 addresses
mail	ManagedRelayerMixin	connectionLost	reason	called when connection is broken
mail	SMTPManagedRelayer	__init__	messages manager	@type messages l{list} of l{bytes} @param messages the base filenames of messages to be relayed
mail	ESMTPManagedRelayer	__init__	messages manager	@type messages l{list} of l{bytes} @param messages the base filenames of messages to be relayed
mail	SMTPManagedRelayerFactory	__init__	messages manager	@type messages l{list} of l{bytes} @param messages the base filenames of messages to be relayed
mail	SMTPManagedRelayerFactory	buildProtocol	addr	create an l{smtpmanagedrelayer}
mail	SMTPManagedRelayerFactory	clientConnectionFailed	connector reason	notify the attempt manager that a connection could not be established
mail	ESMTPManagedRelayerFactory	__init__	messages manager secret contextFactory	@type messages l{list} of l{bytes} @param messages the base filenames of messages to be relayed
mail	ESMTPManagedRelayerFactory	buildProtocol	addr	create an l{esmtpmanagedrelayer}
mail	Queue	__init__	directory	initialize non-volatile state
mail	Queue	_init		initialize volatile state
mail	Queue	__getstate__		create a representation of the non-volatile state of the queue
mail	Queue	__setstate__	state	restore the non-volatile state of the queue and recreate the volatile state
mail	Queue	readDirectory		scan the message directory for new messages
mail	Queue	getWaiting		return the base filenames of messages waiting to be relayed
mail	Queue	hasWaiting		return an indication of whether the queue has messages waiting to be relayed
mail	Queue	getRelayed		return the base filenames of messages in the process of being relayed
mail	Queue	setRelaying	message	mark a message as being relayed
mail	Queue	setWaiting	message	mark a message as waiting to be relayed
mail	Queue	addMessage	message	mark a message as waiting to be relayed unless it is in the process of being relayed
mail	Queue	done	message	remove a message from the queue
mail	Queue	getPath	message	return the full base pathname of a message in the queue
mail	Queue	getEnvelope	message	get the envelope for a message
mail	Queue	getEnvelopeFile	message	return the envelope file for a message in the queue
mail	Queue	createNewMessage		create a new message in the queue
mail	_AttemptManager	__init__	manager noisy reactor	@type manager l{smarthostsmtprelayingmanager} @param manager a smart host
mail	_AttemptManager	getCompletionDeferred		return a deferred which will fire when the attempt to relay is finished
mail	_AttemptManager	_finish	relay message	remove a message from the relay queue and from the smart host's list of messages being relayed
mail	_AttemptManager	notifySuccess	relay message	remove a message from the relay queue after it has been successfully sent
mail	_AttemptManager	notifyFailure	relay message	generate a bounce message for a message which cannot be relayed
mail	_AttemptManager	notifyDone	relay	when the connection is lost or cannot be established prepare to resend unsent messages and fire all deferred which are waiting for
mail	_AttemptManager	notifyNoConnection	relay	when a connection to the mail exchange server cannot be established prepare to resend messages later
mail	SmartHostSMTPRelayingManager	__init__	queue maxConnections maxMessagesPerConnection	initialize a smart host
mail	SmartHostSMTPRelayingManager	__getstate__		create a representation of the non-volatile state of this object
mail	SmartHostSMTPRelayingManager	__setstate__	state	restore the non-volatile state of this object and recreate the volatile state
mail	SmartHostSMTPRelayingManager	checkState		check the state of the relay queue and if possible launch relayers to handle waiting messages
mail	SmartHostSMTPRelayingManager	_cbExchange	address port factory	initiate a connection with a mail exchange server
mail	SmartHostSMTPRelayingManager	_ebExchange	failure factory domain	prepare to resend messages later
mail		_checkState	manager	prompt a relaying manager to check state
mail		RelayStateHelper	manager delay	set up a periodic call to prompt a relaying manager to check state
mail	MXCalculator	__init__	resolver clock	@type resolver l{iresolver <twisted internet interfaces iresolver>}
mail	MXCalculator	markBad	mx	record that a mail exchange host is not currently functioning
mail	MXCalculator	markGood	mx	record that a mail exchange host is functioning
mail	MXCalculator	getMX	domain maximumCanonicalChainLength	find the name of a host that acts as a mail exchange server for a domain
mail	MXCalculator	_filterRecords	records	organize the records of a dns response by record name
mail	MXCalculator	_cbMX	answers domain cnamesLeft	try to find the mail exchange host for a domain from the given dns records
mail	MXCalculator	_ebMX	failure domain	attempt to use the name of the domain directly when mail exchange lookup fails
mail	DomainWithDefaultDict	__init__	domains default	@type domains l{dict} of l{bytes} -> l{idomain} provider @param domains a mapping of domain name to domain object
mail	DomainWithDefaultDict	setDefaultDomain	domain	set the default domain
mail	DomainWithDefaultDict	has_key	name	test for the presence of a domain name in this dictionary
mail	DomainWithDefaultDict	fromkeys	klass keys value	create a new l{domainwithdefaultdict} with the specified keys
mail	DomainWithDefaultDict	__contains__	name	test for the presence of a domain name in this dictionary
mail	DomainWithDefaultDict	__getitem__	name	look up a domain name and if it is present return the domain object associated with it
mail	DomainWithDefaultDict	__setitem__	name value	associate a domain object with a domain name in this dictionary
mail	DomainWithDefaultDict	__delitem__	name	delete the entry for a domain name in this dictionary
mail	DomainWithDefaultDict	__iter__		return an iterator over the domain names in this dictionary
mail	DomainWithDefaultDict	__len__		return the number of domains in this dictionary
mail	DomainWithDefaultDict	__str__		build an informal string representation of this dictionary
mail	DomainWithDefaultDict	__repr__		build an "official" string representation of this dictionary
mail	DomainWithDefaultDict	get	key default	look up a domain name in this dictionary
mail	DomainWithDefaultDict	copy		make a copy of this dictionary
mail	DomainWithDefaultDict	iteritems		return an iterator over the domain name/domain object pairs in the dictionary
mail	DomainWithDefaultDict	iterkeys		return an iterator over the domain names in this dictionary
mail	DomainWithDefaultDict	itervalues		return an iterator over the domain objects in this dictionary
mail	DomainWithDefaultDict	keys		return a list of all domain names in this dictionary
mail	DomainWithDefaultDict	values		return a list of all domain objects in this dictionary
mail	DomainWithDefaultDict	items		return a list of all domain name/domain object pairs in this dictionary
mail	DomainWithDefaultDict	popitem		remove a random domain name/domain object pair from this dictionary and return it as a tuple
mail	DomainWithDefaultDict	update	other	update this dictionary with domain name/domain object pairs from another dictionary
mail	DomainWithDefaultDict	clear		remove all items from this dictionary
mail	DomainWithDefaultDict	setdefault	key default	return the domain object associated with the domain name if it is present in this dictionary
mail	BounceDomain	exists	user	raise an exception to indicate that the user does not exist in this domain
mail	BounceDomain	willRelay	user protocol	indicate that this domain will not relay
mail	BounceDomain	addUser	user password	ignore attempts to add a user to this domain
mail	BounceDomain	getCredentialsCheckers		return no credentials checkers for this domain
mail	FileMessage	__init__	fp name finalName	@type fp file-like object @param fp the file in which to store the message while it is being
mail	FileMessage	lineReceived	line	write a received line to the file
mail	FileMessage	eomReceived		at the end of message rename the file holding the message to its final name
mail	FileMessage	connectionLost		delete the file holding the partially received message
mail	MailService	__init__		initialize the mail service
mail	MailService	getPOP3Factory		create a pop3 protocol factory
mail	MailService	getSMTPFactory		create an smtp protocol factory
mail	MailService	getESMTPFactory		create an esmtp protocol factory
mail	MailService	addDomain	name domain	add a domain for which the service will accept email
mail	MailService	setQueue	queue	set the queue for outgoing emails
mail	MailService	requestAvatar	avatarId mind	return a message delivery for an authenticated smtp user
mail	MailService	lookupPortal	name	find the portal for a domain
mail	MailService	defaultPortal		return the portal for the default domain
mail	FileMonitoringService	__init__		initialize the file monitoring service
mail	FileMonitoringService	startService		start the file monitoring service
mail	FileMonitoringService	_setupMonitor		schedule the next monitoring call
mail	FileMonitoringService	stopService		stop the file monitoring service
mail	FileMonitoringService	monitorFile	name callback interval	start monitoring a file for changes
mail	FileMonitoringService	unmonitorFile	name	stop monitoring a file
mail	FileMonitoringService	_monitor		monitor a file and make a callback if it has changed
mail	Options	__init__		parse options and create a mail service
mail	Options	addEndpoint	service description	add an endpoint to a service
mail	Options	opt_pop3	description	add a pop3 port listener on the specified endpoint
mail	Options	opt_smtp	description	add an smtp port listener on the specified endpoint
mail	Options	opt_default		make the most recently specified domain the default domain
mail	Options	opt_maildirdbmdomain	domain	generate an smtp/pop3 virtual domain
mail	Options	opt_user	user_pass	add a user and password to the last specified domain
mail	Options	opt_bounce_to_postmaster		send undeliverable messages to the postmaster
mail	Options	opt_aliases	filename	specify an aliases 5 file to use for the last specified domain
mail	Options	_getEndpoints	reactor service	return a list of endpoints for the specified service constructing defaults if necessary
mail	Options	postOptions		check the validity of the specified set of options and configure authentication
mail	AliasUpdater	__init__	domains domain	@type domains l{dict} mapping l{bytes} to l{idomain} provider @param domains a mapping of domain name to domain object
mail	AliasUpdater	__call__	new	update the aliases for a domain from an aliases 5 file
mail		makeService	config	configure a service for operating a mail server
mail	MessageSet	__init__	start end	create a new messageset() @type start optional l{int}
mail	MessageSet	add	start end	add another range @type start l{int}
mail	MessageSet	clean		clean ranges list combining adjacent ranges
mail	MessageSet	__contains__	value	may raise typeerror if we encounter an open-ended range
mail	LiteralString	callback	line	call deferred with data and rest of line
mail	LiteralFile	callback	line	call deferred with data and rest of line
mail	IMAP4Server	arg_astring	line	parse an astring from the line return arg rest possibly
mail	IMAP4Server	arg_atom	line	parse an atom from the line
mail	IMAP4Server	arg_plist	line	parse a non-nested parenthesised list from the line
mail	IMAP4Server	arg_literal	line	parse a literal from the line
mail	IMAP4Server	arg_flaglist	line	flag part of store-att-flag
mail	IMAP4Server	arg_line	line	command line of uid command
mail	IMAP4Server	opt_plist	line	optional parenthesised list
mail	IMAP4Server	opt_datetime	line	optional date-time string
mail	IMAP4Server	opt_charset	line	optional charset of search command
mail	IMAP4Server	authenticateLogin	user passwd	lookup the account associated with the given parameters override this method to define the desired authentication behavior
mail	IMAP4Server	checkpoint		called when the client issues a check command
mail	IMAP4Server	__cbManualSearch	result tag mbox query	apply the search filter to a set of messages send the response to the
mail	IMAP4Server	_searchFilter	query id msg lastSequenceId	pop search terms from the beginning of c{query} until there are none left and apply them to the given message
mail	IMAP4Server	_singleSearchStep	query msgId msg lastSequenceId	pop one search term from the beginning of c{query} possibly more than one element and return whether it matches the given message
mail	IMAP4Server	search_ALL	query id msg	returns c{true} if the message matches the all search key always
mail	IMAP4Server	search_ANSWERED	query id msg	returns c{true} if the message has been answered
mail	IMAP4Server	search_BCC	query id msg	returns c{true} if the message has a bcc address matching the query
mail	IMAP4Server	search_NOT	query id msg lastIDs	returns c{true} if the message does not match the query
mail	IMAP4Server	search_OR	query id msg lastIDs	returns c{true} if the message matches any of the first two query items
mail	IMAP4Server	search_SENTBEFORE	query id msg	returns c{true} if the message date is earlier than the query date
mail	IMAP4Server	search_SENTON	query id msg	returns c{true} if the message date is the same as the query date
mail	IMAP4Server	search_SENTSINCE	query id msg	returns c{true} if the message date is later than the query date
mail	IMAP4Server	search_UID	query id msg lastIDs	returns c{true} if the message uid is in the range defined by the search query
mail	IMAP4Client	registerAuthenticator	auth	register a new form of authentication when invoking the authenticate() method of imap4client the first
mail	IMAP4Client	connectionLost	reason	we are no longer connected
mail	IMAP4Client	lineReceived	line	attempt to parse a single line from the server
mail	IMAP4Client	messageFile	octets	create a file to which an incoming message may be written
mail	IMAP4Client	getCapabilities	useCache	request the capabilities available on this server
mail	IMAP4Client	logout		inform the server that we are done with the connection
mail	IMAP4Client	noop		perform no operation
mail	IMAP4Client	startTLS	contextFactory	initiates a 'starttls' request and negotiates the tls / ssl handshake
mail	IMAP4Client	authenticate	secret	attempt to enter the authenticated state with the server this command is allowed in the non-authenticated state
mail	IMAP4Client	login	username password	authenticate with the server using a username and password this command is allowed in the non-authenticated state
mail	IMAP4Client	serverGreeting	caps	called when the server has sent us a greeting
mail	IMAP4Client	namespace		retrieve information about the namespaces available to this account this command is allowed in the authenticated and selected states
mail	IMAP4Client	select	mailbox	select a mailbox this command is allowed in the authenticated and selected states
mail	IMAP4Client	examine	mailbox	select a mailbox in read-only mode this command is allowed in the authenticated and selected states
mail	IMAP4Client	_intOrRaise	value phrase	parse c{value} as an integer and return the result or raise l{illegalserverresponse} with c{phrase} as an argument if c{value}
mail	IMAP4Client	__cbSelect	result rw	handle lines received in response to a select or examine command
mail	IMAP4Client	create	name	create a new mailbox on the server this command is allowed in the authenticated and selected states
mail	IMAP4Client	delete	name	delete a mailbox this command is allowed in the authenticated and selected states
mail	IMAP4Client	rename	oldname newname	rename a mailbox this command is allowed in the authenticated and selected states
mail	IMAP4Client	subscribe	name	add a mailbox to the subscription list this command is allowed in the authenticated and selected states
mail	IMAP4Client	unsubscribe	name	remove a mailbox from the subscription list this command is allowed in the authenticated and selected states
mail	IMAP4Client	list	reference wildcard	list a subset of the available mailboxes this command is allowed in the authenticated and selected states
mail	IMAP4Client	lsub	reference wildcard	list a subset of the subscribed available mailboxes this command is allowed in the authenticated and selected states
mail	IMAP4Client	status	mailbox	retrieve the status of the given mailbox this command is allowed in the authenticated and selected states
mail	IMAP4Client	append	mailbox message flags date	add the given message to the given mailbox
mail	IMAP4Client	check		tell the server to perform a checkpoint this command is allowed in the selected state
mail	IMAP4Client	close		return the connection to the authenticated state
mail	IMAP4Client	expunge		return the connection to the authenticate state
mail	IMAP4Client	search		search messages in the currently selected mailbox this command is allowed in the selected state
mail	IMAP4Client	fetchUID	messages uid	retrieve the unique identifier for one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchFlags	messages uid	retrieve the flags for one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchInternalDate	messages uid	retrieve the internal date associated with one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchEnvelope	messages uid	retrieve the envelope data for one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchBodyStructure	messages uid	retrieve the structure of the body of one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchSimplifiedBody	messages uid	retrieve the simplified body structure of one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchMessage	messages uid	retrieve one or more entire messages this command is allowed in the selected state
mail	IMAP4Client	fetchHeaders	messages uid	retrieve headers of one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchBody	messages uid	retrieve body text of one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchSize	messages uid	retrieve the size in octets of one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchFull	messages uid	retrieve several different fields of one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchAll	messages uid	retrieve several different fields of one or more messages this command is allowed in the selected state
mail	IMAP4Client	fetchFast	messages uid	retrieve several different fields of one or more messages this command is allowed in the selected state
mail	IMAP4Client	_parseFetchPairs	fetchResponseList	given the result of parsing a single i{fetch} response construct a c{dict} mapping response keys to response values
mail	IMAP4Client	fetchSpecific	messages uid headerType headerNumber	retrieve a specific section of one or more messages @type messages c{messageset} or l{str}
mail	IMAP4Client	setFlags	messages flags silent uid	set the flags for one or more messages
mail	IMAP4Client	addFlags	messages flags silent uid	add to the set flags for one or more messages
mail	IMAP4Client	removeFlags	messages flags silent uid	remove from the set flags for one or more messages
mail	IMAP4Client	copy	messages mailbox uid	copy the specified messages to the specified mailbox
mail		parseIdList	s lastMessageId	parse a message set search key into a c{messageset}
mail		Query	sorted	create a query string among the accepted keywords are :
mail		Or		the disjunction of two or more queries
mail		Not	query	the negation of a query
mail		splitQuoted	s	split a string into whitespace delimited tokens tokens that would otherwise be separated but are surrounded by "
mail		collapseStrings	results	turns a list of length-one strings and lists into a list of longer strings and lists
mail		parseNestedParens	s handleLiteral	parse an s-exp-like string into a more useful data structure
mail		collapseNestedLists	items	turn a nested list structure into an s-exp-like string
mail		_getContentType	msg	return a two-tuple of the main and subtype of the given message
mail		_getMessageStructure	message	construct an appropriate type of message structure object for the given message object
mail	_MessageStructure	__init__	message attrs	@param message an l{imessagepart} provider which this structure object reports on
mail	_MessageStructure	_disposition	disp	parse a i{content-disposition} header into a two-sequence of the disposition and a flattened list of its parameters
mail	_MessageStructure	_unquotedAttrs		@return the i{content-type} parameters unquoted as a flat list with each nth element giving a parameter name and n+1th element giving
mail	_SinglepartMessageStructure	__init__	message main subtype attrs	@param message an l{imessagepart} provider which this structure object reports on
mail	_SinglepartMessageStructure	_basicFields		return a list of the basic fields for a single-part message
mail	_SinglepartMessageStructure	encode	extended	construct and return a list of the basic and extended fields for a single-part message
mail	_SinglepartMessageStructure	_extended		the extension data of a non-multipart body part are in the following order
mail	_TextMessageStructure	encode	extended	a body type of type text contains immediately after the basic fields the size of the body in text lines
mail	_RFC822MessageStructure	encode	extended	a body type of type message and subtype rfc822 contains immediately after the basic fields the envelope structure
mail	_MultipartMessageStructure	__init__	message subtype attrs	@param message an l{imessagepart} provider which this structure object reports on
mail	_MultipartMessageStructure	_getParts		return an iterator over all of the sub-messages of this message
mail	_MultipartMessageStructure	encode	extended	encode each sub-message and added the additional i{multipart} fields
mail	_MultipartMessageStructure	_extended		the extension data of a multipart body part are in the following order 1
mail		getBodyStructure	msg extended	rfc 3501 7 4 2 bodystructure :
mail		iterateInReactor	i	consume an interator at most a single iteration per reactor iteration
mail	MessageProducer	__init__	msg buffer scheduler	produce this message
mail		encoder	s errors	encode the given c{unicode} string using the imap4 specific variation of utf-7
mail		decoder	s errors	decode the given l{str} using the imap4 specific variation of utf-7
mail	IClientAuthentication	getName		return an identifier associated with this authentication scheme
mail	IClientAuthentication	challengeResponse	secret challenge	generate a challenge response string
mail	IServerFactoryPOP3	cap_IMPLEMENTATION		return a string describing the pop3 server implementation
mail	IServerFactoryPOP3	cap_EXPIRE		return the minimum number of days messages are retained
mail	IServerFactoryPOP3	perUserExpiration		indicate whether the message expiration policy differs per user
mail	IServerFactoryPOP3	cap_LOGIN_DELAY		return the minimum number of seconds between client logins
mail	IServerFactoryPOP3	perUserLoginDelay		indicate whether the login delay period differs per user
mail	IMailboxPOP3	listMessages	index	retrieve the size of a message or if none is specified the size of each message in the mailbox
mail	IMailboxPOP3	getMessage	index	retrieve a file containing the contents of a message
mail	IMailboxPOP3	getUidl	index	get a unique identifier for a message
mail	IMailboxPOP3	deleteMessage	index	mark a message for deletion
mail	IMailboxPOP3	undeleteMessages		undelete all messages marked for deletion
mail	IMailboxPOP3	sync		discard the contents of any message marked for deletion
mail	IDomain	exists	user	check whether a user exists in this domain
mail	IDomain	addUser	user password	add a user to this domain
mail	IDomain	getCredentialsCheckers		return credentials checkers for this domain
mail	IAlias	createMessageReceiver		create a message receiver
mail	IAliasableDomain	setAliasGroup	aliases	set the group of defined aliases for this domain
mail	IAliasableDomain	exists	user memo	check whether a user exists in this domain or an alias of it
mail	IMessageDelivery	receivedHeader	helo origin recipients	generate the received header for a message
mail	IMessageDelivery	validateTo	user	validate the address for which the message is destined
mail	IMessageDelivery	validateFrom	helo origin	validate the address from which the message originates
mail	IMessageDeliveryFactory	getMessageDelivery		return an l{imessagedelivery} object
mail	IMessageSMTP	lineReceived	line	handle another line
mail	IMessageSMTP	eomReceived		handle end of message
mail	IMessageSMTP	connectionLost		handle message truncated
mail	IMessageIMAPPart	getHeaders	negate	retrieve a group of message headers
mail	IMessageIMAPPart	getBodyFile		retrieve a file object containing only the body of this message
mail	IMessageIMAPPart	getSize		retrieve the total size in octets of this message
mail	IMessageIMAPPart	isMultipart		indicate whether this message has subparts
mail	IMessageIMAPPart	getSubPart	part	retrieve a mime sub-message @type part l{int}
mail	IMessageIMAP	getUID		retrieve the unique identifier associated with this message
mail	IMessageIMAP	getFlags		retrieve the flags associated with this message
mail	IMessageIMAP	getInternalDate		retrieve the date internally associated with this message
mail	IMessageIMAPFile	open		return a file-like object opened for reading
mail	ISearchableIMAPMailbox	search	query uid	search for messages that meet the given query criteria
mail	IMailboxIMAPListener	modeChanged	writeable	indicates that the write status of a mailbox has changed
mail	IMailboxIMAPListener	flagsChanged	newFlags	indicates that the flags of one or more messages have changed
mail	IMailboxIMAPListener	newMessages	exists recent	indicates that the number of messages in a mailbox has changed
mail	IMessageIMAPCopier	copy	messageObject	copy the given message object into this mailbox
mail	IMailboxIMAPInfo	getFlags		return the flags defined in this mailbox flags with the \ prefix are reserved for use as system flags
mail	IMailboxIMAPInfo	getHierarchicalDelimiter		get the character which delimits namespaces for in this mailbox
mail	IMailboxIMAP	getUIDValidity		return the unique validity identifier for this mailbox
mail	IMailboxIMAP	getUIDNext		return the likely uid for the next message added to this mailbox
mail	IMailboxIMAP	getUID	message	return the uid of a message in the mailbox @type message l{int}
mail	IMailboxIMAP	getMessageCount		return the number of messages in this mailbox
mail	IMailboxIMAP	getRecentCount		return the number of messages with the 'recent' flag
mail	IMailboxIMAP	getUnseenCount		return the number of messages with the 'unseen' flag
mail	IMailboxIMAP	isWriteable		get the read/write status of the mailbox
mail	IMailboxIMAP	destroy		called before this mailbox is deleted permanently
mail	IMailboxIMAP	requestStatus	names	return status information about this mailbox
mail	IMailboxIMAP	addListener	listener	add a mailbox change listener @type listener any object which implements c{imailboximaplistener}
mail	IMailboxIMAP	removeListener	listener	remove a mailbox change listener @type listener any object previously added to and not removed from
mail	IMailboxIMAP	addMessage	message flags date	add the given message to this mailbox
mail	IMailboxIMAP	expunge		remove all messages flagged \deleted
mail	IMailboxIMAP	fetch	messages uid	retrieve one or more messages
mail	IMailboxIMAP	store	messages flags mode uid	set the flags of one or more messages
mail	ICloseableMailboxIMAP	close		close this mailbox
mail	IAccountIMAP	addMailbox	name mbox	add a new mailbox to this account @type name l{bytes}
mail	IAccountIMAP	create	pathspec	create a new mailbox from the given hierarchical name
mail	IAccountIMAP	select	name rw	acquire a mailbox given its name
mail	IAccountIMAP	delete	name	delete the mailbox with the specified name
mail	IAccountIMAP	rename	oldname newname	rename a mailbox @type oldname l{bytes}
mail	IAccountIMAP	isSubscribed	name	check the subscription status of a mailbox @type name l{bytes}
mail	IAccountIMAP	subscribe	name	subscribe to a mailbox @type name l{bytes}
mail	IAccountIMAP	unsubscribe	name	unsubscribe from a mailbox @type name l{bytes}
mail	IAccountIMAP	listMailboxes	ref wildcard	list all the mailboxes that meet a certain criteria @type ref l{bytes}
mail	INamespacePresenter	getPersonalNamespaces		report the available personal namespaces
mail	INamespacePresenter	getSharedNamespaces		report the available shared namespaces
mail	INamespacePresenter	getUserNamespaces		report the available user namespaces
mail		handle	result line filename lineNo	parse a line from an aliases file
mail		loadAliasFile	domains filename fp	load a file containing email aliases
mail	AliasBase	__init__	domains original	@type domains l{dict} mapping l{bytes} to l{idomain} provider @param domains a mapping of domain name to domain object
mail	AliasBase	domain		return the domain associated with original address
mail	AliasBase	resolve	aliasmap memo	map this alias to its ultimate destination
mail	AddressAlias	__init__	alias	@type alias l{address}, l{user}, l{bytes} or object which can be converted into l{bytes}
mail	AddressAlias	__str__		build a string representation of this l{addressalias} instance
mail	AddressAlias	createMessageReceiver		create a message receiver which delivers a message to the destination address
mail	AddressAlias	resolve	aliasmap memo	map this alias to its ultimate destination
mail	FileWrapper	__init__	filename	@type filename l{bytes} @param filename the name of the file in which the message should be
mail	FileWrapper	lineReceived	line	write a received line to the temporary file
mail	FileWrapper	eomReceived		handle end of message by writing the message to the file
mail	FileWrapper	connectionLost		close the temporary file when the connection is lost
mail	FileWrapper	__str__		build a string representation of this l{filewrapper} instance
mail	FileAlias	__init__	filename	@type filename l{bytes} @param filename the name of the file in which to store the message
mail	FileAlias	__str__		build a string representation of this l{filealias} instance
mail	FileAlias	createMessageReceiver		create a message receiver which delivers a message to the file
mail	MessageWrapper	__init__	protocol process reactor	@type protocol l{processaliasprotocol} @param protocol the protocol associated with the child process
mail	MessageWrapper	_processEnded	result	record process termination and cancel the timeout call if it is active
mail	MessageWrapper	lineReceived	line	write a received line to the child process
mail	MessageWrapper	eomReceived		disconnect from the child process and set up a timeout to wait for it to exit
mail	MessageWrapper	_completionCancel		handle the expiration of the timeout for the child process to exit by terminating the child process forcefully and issuing a failure to the
mail	MessageWrapper	connectionLost		ignore notification of lost connection
mail	MessageWrapper	__str__		build a string representation of this l{messagewrapper} instance
mail	ProcessAliasProtocol	processEnded	reason	call an errback
mail	ProcessAlias	__init__	path	@type path l{bytes} @param path the command to invoke the program consisting of the path
mail	ProcessAlias	__str__		build a string representation of this l{processalias} instance
mail	ProcessAlias	spawnProcess	proto program path	spawn a process
mail	ProcessAlias	createMessageReceiver		launch a process and create a message receiver to pass a message to the process
mail	MultiWrapper	__init__	objs	@type objs l{list} of l{imessage <smtp imessage>} provider
mail	MultiWrapper	lineReceived	line	pass a received line to the message receivers
mail	MultiWrapper	eomReceived		pass the end of message along to the message receivers
mail	MultiWrapper	connectionLost		inform the message receivers that the connection has been lost
mail	MultiWrapper	__str__		build a string representation of this l{multiwrapper} instance
mail	AliasGroup	__init__	items	create a group of aliases
mail	AliasGroup	__len__		return the number of aliases in the group
mail	AliasGroup	__str__		build a string representation of this l{aliasgroup} instance
mail	AliasGroup	createMessageReceiver		create a message receiver for each alias and return a message receiver which will pass on a message to each of those
mail	AliasGroup	resolve	aliasmap memo	map each of the aliases in the group to its ultimate destination
mail	_MaildirNameGenerator	__init__	clock	@type clock l{ireactortime <interfaces ireactortime>} provider
mail	_MaildirNameGenerator	generate		generate a string which is intended to be unique across all calls to this function across all processes reboots etc
mail		initializeMaildir	dir	create a maildir user directory if it doesn't already exist
mail	MaildirMessage	__init__	address fp	@type address l{bytes} @param address the address of the message recipient
mail	MaildirMessage	lineReceived	line	write a line to the file
mail	MaildirMessage	eomReceived		at the end of message rename the file holding the message to its final name concatenated with the size of the file
mail	AbstractMaildirDomain	__init__	service root	@type service l{mailservice} @param service an email service
mail	AbstractMaildirDomain	userDirectory	user	return the maildir directory for a user
mail	AbstractMaildirDomain	setAliasGroup	alias	set the group of defined aliases for this domain
mail	AbstractMaildirDomain	exists	user memo	check whether a user exists in this domain or an alias of it
mail	AbstractMaildirDomain	startMessage	user	create a maildir message for a user
mail	AbstractMaildirDomain	willRelay	user protocol	check whether this domain will relay
mail	AbstractMaildirDomain	addUser	user password	add a user to this domain
mail	AbstractMaildirDomain	getCredentialsCheckers		return credentials checkers for this domain
mail	_MaildirMailboxAppendMessageTask	__init__	mbox msg	@type mbox l{maildirmailbox} @param mbox a maildir mailbox
mail	_MaildirMailboxAppendMessageTask	startUp		start transferring the message to the mailbox
mail	_MaildirMailboxAppendMessageTask	registerProducer	producer streaming	register a producer and start asking it for data if it is non-streaming
mail	_MaildirMailboxAppendMessageTask	prodProducer		repeatedly prod a non-streaming producer to produce data
mail	_MaildirMailboxAppendMessageTask	unregisterProducer		finish transferring the message to the mailbox
mail	_MaildirMailboxAppendMessageTask	write	data	write data to the maildir file
mail	_MaildirMailboxAppendMessageTask	fail	err	fire the deferred to indicate the task completed with a failure
mail	_MaildirMailboxAppendMessageTask	moveFileToNew		place the message in the i{new/} directory add it to the mailbox and fire the deferred to indicate that the task has completed
mail	_MaildirMailboxAppendMessageTask	createTempFile		create a temporary file to hold the message as it is being transferred
mail	MaildirMailbox	__init__	path	@type path l{bytes} @param path the directory name for a maildir mailbox
mail	MaildirMailbox	listMessages	i	retrieve the size of a message or if none is specified the size of each message in the mailbox
mail	MaildirMailbox	getMessage	i	retrieve a file-like object with the contents of a message
mail	MaildirMailbox	getUidl	i	get a unique identifier for a message
mail	MaildirMailbox	deleteMessage	i	mark a message for deletion
mail	MaildirMailbox	undeleteMessages		undelete all messages marked for deletion
mail	MaildirMailbox	appendMessage	txt	add a message to the mailbox
mail	StringListMailbox	__init__	msgs	@type msgs l{list} of l{bytes} @param msgs the contents of each message in the mailbox
mail	StringListMailbox	listMessages	i	retrieve the size of a message or if none is specified the size of each message in the mailbox
mail	StringListMailbox	getMessage	i	return an in-memory file-like object with the contents of a message
mail	StringListMailbox	getUidl	i	get a unique identifier for a message
mail	StringListMailbox	deleteMessage	i	mark a message for deletion
mail	StringListMailbox	undeleteMessages		undelete any messages which have been marked for deletion
mail	StringListMailbox	sync		discard the contents of any messages marked for deletion
mail	MaildirDirdbmDomain	__init__	service root postmaster	@type service l{mailservice} @param service an email service
mail	MaildirDirdbmDomain	userDirectory	name	return the path to a user's mail directory
mail	MaildirDirdbmDomain	addUser	user password	add a user to this domain by adding an entry in the authentication database and initializing the user's mail directory
mail	MaildirDirdbmDomain	getCredentialsCheckers		return credentials checkers for this domain
mail	MaildirDirdbmDomain	requestAvatar	avatarId mind	get the mailbox for an authenticated user
mail	DirdbmDatabase	__init__	dbm	@type dbm l{dirdbm <dirdbm dirdbm>}
mail	DirdbmDatabase	requestAvatarId	c	authenticate a user and if successful return their username
mail	APOPCredentials	__init__	magic username digest	@type magic l{bytes} @param magic the challenge string used to encrypt the password
mail	APOPCredentials	checkPassword	password	validate a plaintext password against the credentials
mail	_HeadersPlusNLines	__init__	f n	@type f file-like object @param f a file containing a mail message
mail	_HeadersPlusNLines	read	bytes	scan bytes from the file
mail	_IteratorBuffer	__init__	write iterable memoryBufferSize	@type write callable that takes l{list} of l{bytes} @param write a writer which is a callable that takes a list of
mail	_IteratorBuffer	__iter__		return an iterator
mail	_IteratorBuffer	next		get the next string from the container buffer it and possibly send the buffer to the writer
mail		iterateLineGenerator	proto gen	direct the output of an iterator to the transport of a protocol and arrange for iteration to take place
mail		successResponse	response	format an object as a positive response
mail		formatStatResponse	msgs	format a list of message sizes into a stat response
mail		formatListLines	msgs	format a list of message sizes for use in a list response
mail		formatListResponse	msgs	format a list of message sizes into a complete list response
mail		formatUIDListLines	msgs getUidl	format a list of message sizes for use in a uidl response
mail		formatUIDListResponse	msgs getUidl	format a list of message sizes into a complete uidl response
mail	POP3	connectionMade		send a greeting to the client after the connection has been made
mail	POP3	connectionLost	reason	clean up when the connection has been lost
mail	POP3	generateMagic		generate an apop challenge
mail	POP3	successResponse	message	send a response indicating success
mail	POP3	failResponse	message	send a response indicating failure
mail	POP3	lineReceived	line	pass a received line to a state machine function
mail	POP3	_unblock	_	process as many blocked commands as possible
mail	POP3	state_COMMAND	line	handle received lines for the command state in which commands from the client are expected
mail	POP3	processCommand	command	dispatch a command from the client for handling
mail	POP3	listCapabilities		return a list of server capabilities suitable for use in a capa response
mail	POP3	do_CAPA		handle a capa command
mail	POP3	do_AUTH	args	handle an auth command
mail	POP3	state_AUTH	line	handle received lines for the auth state in which an authentication challenge response from the client is expected
mail	POP3	do_APOP	user digest	handle an apop command
mail	POP3	_cbMailbox	result user	complete successful authentication
mail	POP3	_ebMailbox	failure	handle an expected authentication failure
mail	POP3	_ebUnexpected	failure	handle an unexpected authentication failure
mail	POP3	do_USER	user	handle a user command
mail	POP3	do_PASS	password	handle a pass command
mail	POP3	_longOperation	d	stop timeouts and block further command processing while a long operation completes
mail	POP3	_coiterate	gen	direct the output of an iterator to the transport and arrange for iteration to take place
mail	POP3	do_STAT		handle a stat command
mail	POP3	do_LIST	i	handle a list command
mail	POP3	do_UIDL	i	handle a uidl command
mail	POP3	_getMessageFile	i	retrieve the size and contents of a message
mail	POP3	_sendMessageContent	i fpWrapper successResponse	send the contents of a message
mail	POP3	do_TOP	i size	handle a top command
mail	POP3	do_RETR	i	handle a retr command
mail	POP3	transformChunk	chunk	transform a chunk of a message to pop3 message format
mail	POP3	finishedFileTransfer	lastsent	send the termination sequence
mail	POP3	do_DELE	i	handle a dele command
mail	POP3	do_NOOP		handle a noop command
mail	POP3	do_RSET		handle a rset command
mail	POP3	do_LAST		handle a last command
mail	POP3	do_RPOP	user	handle an rpop command
mail	POP3	do_QUIT		handle a quit command
mail	POP3	authenticateUserAPOP	user digest	perform apop authentication
mail	POP3	authenticateUserPASS	user password	perform authentication for a username/password login
mail	Mailbox	listMessages	i	retrieve the size of a message or if none is specified the size of each message in the mailbox
mail	Mailbox	getMessage	i	retrieve a file containing the contents of a message
mail	Mailbox	getUidl	i	get a unique identifier for a message
mail	Mailbox	deleteMessage	i	mark a message for deletion
mail	Mailbox	undeleteMessages		undelete all messages marked for deletion
mail	Mailbox	sync		discard the contents of any message marked for deletion
mail	POP3Client	__init__		issue deprecation warning
mail	POP3Client	sendShort	command params	send a pop3 command to which a short response is expected
mail	POP3Client	sendLong	command params	send a pop3 command to which a long response is expected
mail	POP3Client	handle_default	line	handle responses from the server for which no other handler exists
mail	POP3Client	handle_WELCOME	line	handle a server response which is expected to be a server greeting
mail	POP3Client	_dispatch	command default	dispatch a response from the server for handling
mail	POP3Client	lineReceived	line	dispatch a received line for processing
mail	POP3Client	apopAuthenticate	user password magic	perform an authenticated login
mail	POP3Client	apop	user digest	send an apop command to perform authenticated login
mail	POP3Client	retr	i	send a retr command to retrieve a message from the server
mail	POP3Client	dele	i	send a dele command to delete a message from the server
mail	POP3Client	list	i	send a list command to retrieve the size of a message or if no message is specified the sizes of all messages
mail	POP3Client	uidl	i	send a uidl command to retrieve the unique identifier of a message or if no message is specified the unique identifiers of all messages
mail	POP3Client	user	name	send a user command to perform the first half of a plaintext login
mail	POP3Client	pass_	pass_	perform the second half of a plaintext login
mail	POP3Client	quit		send a quit command to disconnect from the server
mail		rfc822date	timeinfo local	format an rfc-2822 compliant date string
mail		messageid	uniq N	return a globally unique random string in rfc 2822 message-id format <datetime
mail		quoteaddr	addr	turn an email address possibly with realname part etc into a form suitable for and smtp envelope
mail	Address	dequote	addr	remove rfc-2821 quotes from address
mail	User	__getstate__		helper for pickle
mail	SMTP	sendCode	code message	send an smtp code with a message
mail	SMTP	lookupMethod	command	@param command the command to get from this class
mail	SMTP	_cbAnonymousAuthentication	result	save the state resulting from a successful anonymous cred login
mail	SMTP	validateFrom	helo origin	validate the address from which the message originates
mail	SMTP	validateTo	user	validate the address for which the message is destined
mail	SMTPClient	connectionLost	reason	we are no longer connected
mail	SMTPClient	transformChunk	chunk	perform the necessary local to network newline conversion and escape leading periods
mail	SMTPClient	getMailFrom		return the email address the mail is from
mail	SMTPClient	getMailTo		return a list of emails to send to
mail	SMTPClient	getMailData		return file-like object containing data of message to be sent
mail	SMTPClient	sendError	exc	if an error occurs before a mail message is sent senderror will be called
mail	SMTPClient	sentMail	code resp numOk addresses	called when an attempt to send an email is completed
mail	ESMTPClient	esmtpEHLORequired	code resp	fail because authentication is required but the server does not support esmtp which is required for authentication
mail	ESMTPClient	esmtpAUTHRequired	code resp	fail because authentication is required but the server does not support any schemes we support
mail	ESMTPClient	esmtpTLSRequired	code resp	fail because tls is required and the server does not support it
mail	ESMTPClient	esmtpTLSFailed	code resp	fail because the tls handshake wasn't able to be completed
mail	ESMTPClient	esmtpAUTHDeclined	code resp	fail because the authentication was rejected
mail	ESMTPClient	esmtpAUTHMalformedChallenge	code resp	fail because the server sent a malformed authentication challenge
mail	ESMTPClient	esmtpAUTHServerError	code resp	fail because of some other authentication error
mail	ESMTPClient	registerAuthenticator	auth	registers an authenticator with the esmtpclient the esmtpclient will
mail	ESMTPClient	connectionMade		called when a connection has been made and triggers sending an c{ehlo} to the server
mail	ESMTPClient	esmtpState_ehlo	code resp	send an c{ehlo} to the server
mail	ESMTPClient	esmtpState_serverConfig	code resp	handle a positive response to the i{ehlo} command by parsing the capabilities in the server's response and then taking the most
mail	ESMTPClient	tryTLS	code resp items	take a necessary step towards being able to begin a mail transaction
mail	ESMTPClient	esmtpState_starttls	code resp	handle a positive response to the i{starttls} command by starting a new tls session on c{self
mail	ESMTPClient	smtpState_maybeAuthenticated	code resp	called to handle the next message from the server after sending a response to a sasl challenge
mail	ESMTP	extensions		smtp service extensions @return the smtp service extensions that are supported
mail	ESMTP	_cbAuthenticated	loginInfo	save the state resulting from a successful cred login and mark this connection as authenticated
mail	ESMTP	_ebAuthenticated	reason	handle cred login errors by translating them to the smtp authenticate failed
mail	ESMTP	state_AUTH	response	handle one step of challenge/response authentication
mail	SMTPSenderFactory	__init__	fromEmail toEmail file deferred	@param fromemail the rfc 2821 address from which to send this message
mail	SMTPSenderFactory	_removeProtocol	result	remove the protocol created in c{buildprotocol}
mail	ESMTPSenderFactory	buildProtocol	addr	build an l{esmtpsender} protocol configured with c{helofallback}, c{requireauthentication}, and c{requiretransportsecurity} as specified
mail		sendmail	smtphost from_addr to_addrs msg	send an email
mail		xtext_decode	s errors	decode the xtext-encoded string c{s}
runner	SimpleConfFile	parseFile	file	parse a configuration file if file is none and self
runner	InetdConf	parseFields	serviceName socketType protocol wait	parse an inetd conf file
runner	ProcessMonitor	addProcess	name args uid gid	add a new monitored process and start it immediately if the l{processmonitor} service is running
runner	ProcessMonitor	removeProcess	name	stop the named process and remove it from the list of monitored processes
runner	ProcessMonitor	startService		start all monitored processes
runner	ProcessMonitor	stopService		stop all monitored processes and cancel all scheduled process restarts
runner	ProcessMonitor	connectionLost	name	called when a monitored processes exits if
runner	ProcessMonitor	startProcess	name	@param name the name of the process to be started
runner	ProcessMonitor	_forceStopProcess	proc	@param proc an l{iprocesstransport} provider
runner	ProcessMonitor	stopProcess	name	@param name the name of the process to be stopped
runner	ProcessMonitor	restartAll		restart all processes this is useful for third party management
runner	Options	parseArgs		grab the command line that is going to be started and monitored
runner	Options	postOptions		check for dependencies
conch	RecvLine	drawInputLine		write a line containing the current input prompt and the current line buffer at the current cursor position
conch	ITelnetProtocol	unhandledCommand	command argument	a command was received but not understood
conch	ITelnetProtocol	unhandledSubnegotiation	command data	a subnegotiation command was received but not understood
conch	ITelnetProtocol	enableLocal	option	enable the given option locally
conch	ITelnetProtocol	enableRemote	option	indicate whether the peer should be allowed to enable this option
conch	ITelnetProtocol	disableLocal	option	disable the given option locally
conch	ITelnetProtocol	disableRemote	option	indicate that the peer has disabled this option
conch	ITelnetTransport	do	option	indicate a desire for the peer to begin performing the given option
conch	ITelnetTransport	dont	option	indicate a desire for the peer to cease performing the given option
conch	ITelnetTransport	will	option	indicate our willingness to begin performing this option locally
conch	ITelnetTransport	wont	option	indicate that we will stop performing the given option
conch	ITelnetTransport	requestNegotiation	about data	send a subnegotiation request
conch	Telnet	will	option	indicate our willingness to enable an option
conch	Telnet	wont	option	indicate we are not willing to enable an option
conch	Telnet	requestNegotiation	about data	send a negotiation message for the option c{about} with c{data} as the payload
conch	Telnet	applicationDataReceived	data	called with application-level data
conch	Telnet	unhandledCommand	command argument	called for commands for which no handler is installed
conch	Telnet	unhandledSubnegotiation	command data	called for subnegotiations for which no handler is installed
conch	Telnet	enableLocal	option	reject all attempts to enable options
conch	Telnet	enableRemote	option	reject all attempts to enable options
conch	Telnet	disableLocal	option	signal a programming error by raising an exception
conch	Telnet	disableRemote	option	signal a programming error by raising an exception
conch		verifyCryptedPassword	crypted pw	check that the password when crypted matches the stored crypted password
conch		_pwdGetByName	username	look up a user in the /etc/passwd database using the pwd module if the
conch		_shadowGetByName	username	look up a user in the /etc/shadow database using the spwd module if it is
conch	SSHPublicKeyDatabase	_cbRequestAvatarId	validKey credentials	check whether the credentials themselves are valid now that we know if the key matches the user
conch	SSHPublicKeyDatabase	getAuthorizedKeysFiles	credentials	return a list of l{filepath} instances for i{authorized_keys} files which might contain information about authorized keys for the given
conch	SSHPublicKeyDatabase	checkKey	credentials	retrieve files containing authorized keys and check against user credentials
conch	SSHProtocolChecker	requestAvatarId	credentials	part of the l{icredentialschecker} interface called by a portal with
conch	SSHProtocolChecker	_cbGoodAuthentication	avatarId credentials	called if a checker has verified the credentials we call our
conch	SSHProtocolChecker	areDone	avatarId	override to determine if the authentication is finished for a given avatarid
conch	IAuthorizedKeysDB	getAuthorizedKeys	avatarId	gets an iterable of authorized keys that are valid for the given c{avatarid}
conch		readAuthorizedKeyFile	fileobj parseKey	reads keys from an authorized keys file any non-comment line that cannot
conch		_keysFromFilepaths	filepaths parseKey	helper function that turns an iterable of filepaths into a generator of keys
conch	InMemorySSHKeyDB	__init__	mapping	initializes a new l{inmemorysshkeydb}
conch	UNIXAuthorizedKeysFiles	__init__	userdb parseKey	initializes a new l{unixauthorizedkeysfiles}
conch	SSHPublicKeyChecker	__init__	keydb	initializes a l{sshpublickeychecker}
conch	SSHPublicKeyChecker	_sanityCheckKey	credentials	checks whether the provided credentials are a valid ssh key with a signature does not actually verify the signature
conch	SSHPublicKeyChecker	_checkKey	pubKey credentials	checks the public key against all authorized keys if any for the user
conch	SSHPublicKeyChecker	_verifyKey	pubKey credentials	checks whether the credentials themselves are valid now that we know if the key matches the user
conch	_ISSHConnectionCreator	secureConnection		return a new connected secured but not yet authenticated instance of l{twisted
conch	_ISSHConnectionCreator	cleanupConnection	connection immediate	perform cleanup necessary for a connection object previously returned from this creator's c{secureconnection} method
conch	SSHCommandAddress	__init__	server username command	@param server the address of the ssh server on which the command is running
conch	_CommandChannel	__init__	creator command protocolFactory commandConnected	@param creator the l{_isshconnectioncreator} provider which was used to get the connection which this channel exists on
conch	_CommandChannel	openFailed	reason	when the request to open a new channel to run this command in fails fire the c{commandconnected} deferred with a failure indicating that
conch	_CommandChannel	channelOpen	ignored	when the request to open a new channel to run this command in succeeds issue an c{"exec"} request to run the command
conch	_CommandChannel	_execFailure	reason	when the request to execute the command in this channel fails fire the c{commandconnected} deferred with a failure indicating this
conch	_CommandChannel	_execSuccess	ignored	when the request to execute the command in this channel succeeds use c{protocolfactory} to build a protocol to handle the command's input and
conch	_CommandChannel	dataReceived	data	when the command's stdout data arrives over the channel deliver it to the protocol instance
conch	_CommandChannel	request_exit_status	data	when the server sends the command's exit status record it for later delivery to the protocol
conch	_CommandChannel	request_exit_signal	data	when the server sends the command's exit status record it for later delivery to the protocol
conch	_CommandChannel	closed		when the channel closes deliver disconnection notification to the protocol
conch	_ConnectionReady	__init__	ready	@param ready a l{deferred} which should be fired when i{servicestarted} happens
conch	_ConnectionReady	serviceStarted		when the ssh i{connection} i{service} this object represents is ready to be used fire the c{connectionready} l{deferred} to publish that event
conch	_UserAuth	getPublicKey		retrieve the next public key object to offer to the server possibly delegating to an authentication agent if there is one
conch	_UserAuth	signData	publicKey signData	extend the base signing behavior by using an ssh agent to sign the data if one is available
conch	_UserAuth	getPrivateKey		get the private part of a key pair to use for authentication the key
conch	_UserAuth	getPassword		get the password to use for authentication
conch	_UserAuth	ssh_USERAUTH_SUCCESS	packet	handle user authentication success in the normal way but also make a note of the state change on the l{_commandtransport}
conch	_UserAuth	connectToAgent	endpoint	set up a connection to the authentication agent and trigger its initialization
conch	_UserAuth	loseAgentConnection		disconnect the agent
conch	_CommandTransport	__init__	creator	@param creator the l{_newconnectionhelper} that created this connection
conch	_CommandTransport	verifyHostKey	hostKey fingerprint	ask the l{knownhostsfile} provider available on the factory which created this protocol this protocol to verify the given host key
conch	_CommandTransport	_saveHostKeyFailure	reason	when host key verification fails record the reason for the failure in order to fire a l{deferred} with it later
conch	_CommandTransport	connectionSecure		when the connection is secure start the authentication process
conch	_CommandTransport	connectionLost	reason	when the underlying connection to the ssh server is lost if there were any connection setup errors propagate them
conch	SSHCommandClientEndpoint	__init__	creator command	@param creator an l{_isshconnectioncreator} provider which will be used to set up the ssh connection which will be used to run a
conch	SSHCommandClientEndpoint	newConnection	cls reactor command username	create and return a new endpoint which will try to create a new connection to an ssh server and run a command over it
conch	SSHCommandClientEndpoint	existingConnection	cls connection command	create and return a new endpoint which will try to open a new channel on an existing ssh connection and run a command over it
conch	SSHCommandClientEndpoint	connect	protocolFactory	set up an ssh connection use a channel from that connection to launch a command and hook the stdin and stdout of that command up as a
conch	SSHCommandClientEndpoint	_executeCommand	connection protocolFactory	given a secured ssh connection try to execute a command in a new channel created on it and associate the result with a protocol from the
conch	_ReadFile	__init__	contents	@param contents l{bytes} which will be returned from every c{readline} call
conch	_ReadFile	readline	count	always give back the byte string that this l{_readfile} was initialized with
conch	_NewConnectionHelper	__init__	reactor hostname port command	@param tty the path of the tty device to use in case c{ui} is l{none}
conch	_NewConnectionHelper	_opener		open the tty if possible otherwise give back a file-like object from which c{b"no"} can be read
conch	_NewConnectionHelper	_knownHosts	cls	@return a l{knownhostsfile} instance pointed at the user's personal i{known hosts} file
conch	_NewConnectionHelper	secureConnection		create and return a new ssh connection which has been secured and on which authentication has already happened
conch	_NewConnectionHelper	cleanupConnection	connection immediate	clean up the connection by closing it the command running on the
conch	_ExistingConnectionHelper	__init__	connection	@param connection see l{sshcommandclientendpoint existingconnection}'s
conch	_ExistingConnectionHelper	secureConnection		@return a l{deferred} that fires synchronously with the already-established connection object
conch	_ExistingConnectionHelper	cleanupConnection	connection immediate	do not do any cleanup on the connection leave that responsibility to
conch	TerminalProcessProtocol	write	data	write to the terminal
conch	TerminalProcessProtocol	outReceived	data	receive data from the terminal
conch	TerminalProcessProtocol	errReceived	data	report an error
conch	ConsoleManhole	connectionLost	reason	when the connection is lost there is nothing more to do stop the
conch	Options	addChecker	checker	add the checker specified if any checkers are added the default
conch		makeService	config	construct a service for operating a ssh server
conch	IConchUser	lookupChannel	channelType windowSize maxPacket data	the other side requested a channel of some sort
conch	IConchUser	lookupSubsystem	subsystem data	the other side requested a subsystem
conch	IConchUser	gotGlobalRequest	requestType data	a global request was sent from the other side
conch	ISession	getPty	term windowSize modes	get a pseudo-terminal for use by a shell or command
conch	ISession	openShell	proto	open a shell and connect it to proto
conch	ISession	execCommand	proto command	execute a command
conch	ISession	windowChanged	newWindowSize	called when the size of the remote screen has changed
conch	ISession	eofReceived		called when the other side has indicated no more data will be sent
conch	ISession	closed		called when the session is closed
conch	ISFTPServer	gotVersion	otherVersion extData	called when the client sends their version info
conch	ISFTPServer	openFile	filename flags attrs	called when the clients asks to open a file
conch	ISFTPServer	removeFile	filename	remove the given file
conch	ISFTPServer	renameFile	oldpath newpath	rename the given file
conch	ISFTPServer	makeDirectory	path attrs	make a directory
conch	ISFTPServer	removeDirectory	path	remove a directory non-recursively it is an error to remove a directory that has files or directories in
conch	ISFTPServer	openDirectory	path	open a directory for scanning
conch	ISFTPServer	getAttrs	path followLinks	return the attributes for the given path
conch	ISFTPServer	setAttrs	path attrs	set the attributes for the path
conch	ISFTPServer	readLink	path	find the root of a set of symbolic links
conch	ISFTPServer	makeLink	linkPath targetPath	create a symbolic link
conch	ISFTPServer	realPath	path	convert any path to an absolute path
conch	ISFTPServer	extendedRequest	extendedName extendedData	this is the extension mechanism for sftp the other side can send us
conch	IKnownHostEntry	matchesKey	key	return true if this entry matches the given key object false otherwise
conch	IKnownHostEntry	matchesHost	hostname	return true if this entry matches the given hostname false otherwise
conch	IKnownHostEntry	toString		@return a serialized string representation of this entry suitable for inclusion in a known_hosts file
conch	ISFTPFile	close		close the file
conch	ISFTPFile	readChunk	offset length	read from the file
conch	ISFTPFile	writeChunk	offset data	write to the file
conch	ISFTPFile	getAttrs		return the attributes for the file
conch	ISFTPFile	setAttrs	attrs	set the attributes for the file
conch		makeService	options	create a manhole server service
conch	BufferingMixin	write	data	buffer some bytes to be written soon
conch	BufferingMixin	flush		flush the buffer immediately
conch	SSHSessionForUnixConchUser	__init__	avatar reactor	construct an c{sshsessionforunixconchuser}
conch	SSHSessionForUnixConchUser	_writeHack	data	hack to send ignore messages when we aren't echoing
conch	SFTPServerForUnixConchUser	_setAttrs	path attrs	note this function assumes it runs as the logged-in user i
conch		lsLine	name s	build an 'ls' line for a file ('file' in its generic sense it can be of any type)
conch	ManholeInterpreter	resetBuffer		reset the input buffer
conch	ManholeInterpreter	push	line	push a line to the interpreter
conch	Manhole	handle_INT		handle ^c as an interrupt keystroke by resetting the current input variables to their initial state
conch	Manhole	handle_FF		handle a 'form feed' byte - generally used to request a screen refresh/redraw
conch		lastColorizedLine	source	tokenize and colorize the given python source
conch	ColoredManhole	getSource		return a string containing the currently entered source
conch.openssh_compat	OpenSSHFactory	getPublicKeys		return the server public keys
conch.openssh_compat	OpenSSHFactory	getPrivateKeys		return the server private keys
conch.ui	AnsiParser	stripEscapes	string	remove all ansi color escapes from the given string
conch.ui	AnsiParser	parseString	str	turn a string input into a list of l{colortext} elements
conch.ui	AnsiParser	parseColor	str	handle a single ansi color sequence
conch.scripts	ClientOptions	opt_escape	esc	set escape character none'' = disable
conch.scripts	ClientOptions	opt_localforward	f	forward local port to remote address lport host port
conch.scripts	ClientOptions	opt_remoteforward	f	forward remote port to local address rport host port
conch.scripts	StdioClient	cmd_PUT	rest	do an upload request for a single local file or a globing expression
conch.scripts	StdioClient	_putSingleFile	local remote	perform an upload for a single file
conch.scripts	StdioClient	_putMultipleFiles	files remote	perform an upload for a list of local files
conch.scripts	StdioClient	_cbPutMultipleNext	previousResult files remotePath single	perform an upload for the next file in the list of local files
conch.scripts	StdioClient	_putRemoteFile	localStream remotePath	do an upload request
conch.scripts	StdioClient	cmd_EXEC	rest	run c{rest} using the user's shell (or /bin/sh if they do not have one)
conch.scripts	StdioClient	_printProgressBar	f startTime	update a console progress bar on this l{stdioclient}'s transport based on the difference between the start time of the operation and the
conch.scripts	StdioClient	_getFilename	line	parse line received as command line input and return first filename together with the remaining line
conch.scripts		_saveKey	key options	persist a ssh key on local filesystem
conch.ssh	SSHConnection	serviceStopped		called when the connection is stopped
conch.ssh	SSHConnection	_cleanupGlobalDeferreds		all pending requests that have returned a deferred must be errbacked when this service is stopped otherwise they might be left uncalled and
conch.ssh	SSHConnection	ssh_GLOBAL_REQUEST	packet	the other side has made a global request payload :
conch.ssh	SSHConnection	ssh_REQUEST_SUCCESS	packet	our global request succeeded get the appropriate deferred and call
conch.ssh	SSHConnection	ssh_REQUEST_FAILURE	packet	our global request failed get the appropriate deferred and errback
conch.ssh	SSHConnection	ssh_CHANNEL_OPEN	packet	the other side wants to get a channel payload :
conch.ssh	SSHConnection	ssh_CHANNEL_OPEN_CONFIRMATION	packet	the other side accepted our msg_channel_open request payload :
conch.ssh	SSHConnection	ssh_CHANNEL_OPEN_FAILURE	packet	the other side did not accept our msg_channel_open request payload :
conch.ssh	SSHConnection	ssh_CHANNEL_WINDOW_ADJUST	packet	the other side is adding bytes to its window payload :
conch.ssh	SSHConnection	ssh_CHANNEL_DATA	packet	the other side is sending us data payload :
conch.ssh	SSHConnection	ssh_CHANNEL_EXTENDED_DATA	packet	the other side is sending us exteneded data payload :
conch.ssh	SSHConnection	ssh_CHANNEL_EOF	packet	the other side is not sending any more data payload :
conch.ssh	SSHConnection	ssh_CHANNEL_CLOSE	packet	the other side is closing its end it does not want to receive any more data
conch.ssh	SSHConnection	ssh_CHANNEL_REQUEST	packet	the other side is sending a request to a channel payload :
conch.ssh	SSHConnection	_cbChannelRequest	result localChannel	called back if the other side wanted a reply to a channel request if
conch.ssh	SSHConnection	_ebChannelRequest	result localChannel	called if the other wisde wanted a reply to the channel requeset and the channel request failed
conch.ssh	SSHConnection	ssh_CHANNEL_SUCCESS	packet	our channel request to the other side succeeded payload :
conch.ssh	SSHConnection	ssh_CHANNEL_FAILURE	packet	our channel request to the other side failed payload :
conch.ssh	SSHConnection	sendGlobalRequest	request data wantReply	send a global request for this connection current this is only used
conch.ssh	SSHConnection	openChannel	channel extra	open a new channel on this connection
conch.ssh	SSHConnection	sendRequest	channel requestType data wantReply	send a request to a channel
conch.ssh	SSHConnection	adjustWindow	channel bytesToAdd	tell the other side that we will receive more data this should not
conch.ssh	SSHConnection	sendData	channel data	send data to a channel this should not normally be used instead use
conch.ssh	SSHConnection	sendExtendedData	channel dataType data	send extended data to a channel this should not normally be used
conch.ssh	SSHConnection	sendEOF	channel	send an eof end of file for a channel
conch.ssh	SSHConnection	sendClose	channel	close a channel
conch.ssh	SSHConnection	getChannel	channelType windowSize maxPacket data	the other side requested a channel of some sort
conch.ssh	SSHConnection	gotGlobalRequest	requestType data	we got a global request pretty much this is just used by the client
conch.ssh	SSHConnection	channelClosed	channel	called when a channel is closed
conch.ssh	SSHConnectForwardingChannel	channelOpen	specificData	see l{channel sshchannel}
conch.ssh	SSHConnectForwardingChannel	_setClient	client	called when the connection was established to the forwarding destination
conch.ssh	SSHConnectForwardingChannel	_close	reason	called when failed to connect to the forwarding destination
conch.ssh	SSHConnectForwardingChannel	dataReceived	data	see l{channel sshchannel}
conch.ssh	SSHConnectForwardingChannel	closed		see l{channel sshchannel}
conch.ssh		packOpen_direct_tcpip	destination source	pack the data suitable for sending in a channel_open packet
conch.ssh		unpackOpen_direct_tcpip	data	unpack the data to a usable format
conch.ssh		packGlobal_tcpip_forward	peer	pack the data for tcpip forwarding
conch.ssh	SSHFactory	startFactory		check for public and private keys
conch.ssh	SSHFactory	buildProtocol	addr	create an instance of the server side of the ssh protocol
conch.ssh	SSHFactory	getPublicKeys		called when the factory is started to get the public portions of the servers host keys
conch.ssh	SSHFactory	getPrivateKeys		called when the factory is started to get the private portions of the servers host keys
conch.ssh	SSHFactory	getPrimes		called when the factory is started to get diffie-hellman generators and primes to use
conch.ssh	SSHFactory	getDHPrime	bits	return a tuple of g p for a diffe-hellman process with p being as close to bits bits as possible
conch.ssh	SSHFactory	getService	transport service	return a class to use as a service for the given transport
conch.ssh		getNS	s count	get net string
conch.ssh		getMP	data count	get multiple precision integer out of the string a multiple precision
conch.ssh		_MPpow	x y z	return the mp version of c{(x ** y) % z}
conch.ssh		ffs	c s	first from second
conch.ssh	SSHSessionProcessProtocol	outConnectionLost		eof should only be sent when both stdout and stderr have been closed
conch.ssh	SSHSessionProcessProtocol	_getSignalName	signum	get a signal name given a signal number
conch.ssh	SSHSessionProcessProtocol	processEnded	reason	when we are told the process ended try to notify the other side about how the process ended using the exit-signal or exit-status requests
conch.ssh	SSHSessionProcessProtocol	getHost		return the host from my session's transport
conch.ssh	SSHSessionProcessProtocol	getPeer		return the peer from my session's transport
conch.ssh		parseRequest_pty_req	data	parse the data from a pty-req request into usable data
conch.ssh		packRequest_pty_req	term geometry modes	pack a pty-req request so that it is suitable for sending
conch.ssh		parseRequest_window_change	data	parse the data from a window-change request into usuable data
conch.ssh		packRequest_window_change	geometry	pack a window-change request so that it is suitable for sending
conch.ssh	FileTransferServer	_sendStatus	requestId code message lang	helper method to send a fxp_status message
conch.ssh	FileTransferServer	connectionLost	reason	clean all opened files and directories
conch.ssh	FileTransferClient	__init__	extData	@param extdata a dict of extended_name : extended_data items to be sent to the server
conch.ssh	FileTransferClient	openFile	filename flags attrs	open a file
conch.ssh	FileTransferClient	removeFile	filename	remove the given file
conch.ssh	FileTransferClient	renameFile	oldpath newpath	rename the given file
conch.ssh	FileTransferClient	makeDirectory	path attrs	make a directory
conch.ssh	FileTransferClient	removeDirectory	path	remove a directory non-recursively it is an error to remove a directory that has files or directories in
conch.ssh	FileTransferClient	openDirectory	path	open a directory for scanning
conch.ssh	FileTransferClient	getAttrs	path followLinks	return the attributes for the given path
conch.ssh	FileTransferClient	setAttrs	path attrs	set the attributes for the path
conch.ssh	FileTransferClient	readLink	path	find the root of a set of symbolic links
conch.ssh	FileTransferClient	makeLink	linkPath targetPath	create a symbolic link
conch.ssh	FileTransferClient	realPath	path	convert any path to an absolute path
conch.ssh	FileTransferClient	extendedRequest	request data	make an extended request of the server
conch.ssh	FileTransferClient	gotServerVersion	serverVersion extData	called when the client sends their version info
conch.ssh	SFTPError	message		a string received over the network that explains the error to a human
conch.ssh	SSHChannel	__bytes__		return a byte string representation of the channel
conch.ssh	SSHChannel	channelOpen	specificData	called when the channel is opened specificdata is any data that the
conch.ssh	SSHChannel	openFailed	reason	called when the open failed for some reason
conch.ssh	SSHChannel	addWindowBytes	data	called when bytes are added to the remote window by default it clears
conch.ssh	SSHChannel	requestReceived	requestType data	called when a request is sent to this channel by default it delegates
conch.ssh	SSHChannel	dataReceived	data	called when we receive data
conch.ssh	SSHChannel	extReceived	dataType data	called when we receive extended data usually standard error
conch.ssh	SSHChannel	eofReceived		called when the other side will send no more data
conch.ssh	SSHChannel	closeReceived		called when the other side has closed the channel
conch.ssh	SSHChannel	closed		called when the channel is closed this means that both our side and
conch.ssh	SSHChannel	write	data	write some data to the channel if there is not enough remote window
conch.ssh	SSHChannel	writeExtended	dataType data	send extended data to this channel if there is not enough remote
conch.ssh	SSHChannel	writeSequence	data	part of the transport interface write a list of strings to the
conch.ssh	SSHChannel	loseConnection		close the channel if there is no buferred data otherwise note the
conch.ssh	SSHChannel	getPeer		see l{itransport getpeer}
conch.ssh	SSHChannel	getHost		see l{itransport gethost}
conch.ssh	SSHChannel	stopWriting		called when the remote buffer is full as a hint to stop writing
conch.ssh	SSHChannel	startWriting		called when the remote buffer has more room as a hint to continue writing
conch.ssh		getKex	kexAlgorithm	get a description of a named key exchange algorithm
conch.ssh		isEllipticCurve	kexAlgorithm	returns c{true} if c{kexalgorithm} is an elliptic curve
conch.ssh		isFixedGroup	kexAlgorithm	returns c{true} if c{kexalgorithm} has a fixed prime / generator group
conch.ssh		getHashProcessor	kexAlgorithm	get the hash algorithm callable to use in key exchange
conch.ssh		getDHGeneratorAndPrime	kexAlgorithm	get the generator and the prime to use in key exchange
conch.ssh		getSupportedKeyExchanges		get a list of supported key exchange algorithm names in order of preference
conch.ssh		intFromBytes	data byteorder signed	convert an integer in packed form to a python l{int}
conch.ssh		intToBytes	integer length	convert a python l{int} to packed data
conch.ssh	SSHUserAuthServer	serviceStarted		called when the userauth service is started set up instance
conch.ssh	SSHUserAuthServer	serviceStopped		called when the userauth service is stopped cancel the login timeout
conch.ssh	SSHUserAuthServer	timeoutAuthentication		called when the user has timed out on authentication disconnect
conch.ssh	SSHUserAuthServer	tryAuth	kind user data	try to authenticate the user with the given method dispatches to a
conch.ssh	SSHUserAuthServer	ssh_USERAUTH_REQUEST	packet	the client has requested authentication payload :
conch.ssh	SSHUserAuthServer	_cbFinishedAuth	result	the callback when user has successfully been authenticated for a
conch.ssh	SSHUserAuthServer	_ebMaybeBadAuth	reason	an intermediate errback if the reason is
conch.ssh	SSHUserAuthServer	_ebBadAuth	reason	the final errback in the authentication chain if the reason is
conch.ssh	SSHUserAuthServer	auth_publickey	packet	public key authentication payload :
conch.ssh	SSHUserAuthServer	_ebCheckKey	reason packet	called back if the user did not sent a signature if reason is
conch.ssh	SSHUserAuthServer	auth_password	packet	password authentication payload :
conch.ssh	SSHUserAuthServer	_ebPassword	f	if the password is invalid wait before sending the failure in order to delay brute-force password guessing
conch.ssh	SSHUserAuthClient	askForAuth	kind extraData	send a msg_userauth_request
conch.ssh	SSHUserAuthClient	tryAuth	kind	dispatch to an authentication method
conch.ssh	SSHUserAuthClient	_ebAuth	ignored	generic callback for a failed authentication attempt respond by
conch.ssh	SSHUserAuthClient	ssh_USERAUTH_SUCCESS	packet	we received a msg_userauth_success the server has accepted our
conch.ssh	SSHUserAuthClient	ssh_USERAUTH_FAILURE	packet	we received a msg_userauth_failure payload :
conch.ssh	SSHUserAuthClient	ssh_USERAUTH_PK_OK	packet	this message number 60 can mean several different messages depending on the current authentication type
conch.ssh	SSHUserAuthClient	ssh_USERAUTH_PK_OK_publickey	packet	this is msg_userauth_pk our public key is valid so we create a
conch.ssh	SSHUserAuthClient	ssh_USERAUTH_PK_OK_password	packet	this is msg_userauth_passwd_changereq the password given has expired
conch.ssh	SSHUserAuthClient	ssh_USERAUTH_PK_OK_keyboard_interactive	packet	this is msg_userauth_info_response the server has sent us the
conch.ssh	SSHUserAuthClient	_cbSignedData	signedData	called back out of self signdata with the signed data send the
conch.ssh	SSHUserAuthClient	_setOldPass	op	called back when we are choosing a new password simply store the old
conch.ssh	SSHUserAuthClient	_setNewPass	np	called back when we are choosing a new password get the old password
conch.ssh	SSHUserAuthClient	_cbGenericAnswers	responses	called back when we are finished answering keyboard-interactive questions
conch.ssh	SSHUserAuthClient	auth_publickey		try to authenticate with a public key ask the user for a public key
conch.ssh	SSHUserAuthClient	auth_password		try to authenticate with a password ask the user for a password
conch.ssh	SSHUserAuthClient	auth_keyboard_interactive		try to authenticate with keyboard-interactive authentication send
conch.ssh	SSHUserAuthClient	_cbPassword	password	called back when the user gives a password send the request to the
conch.ssh	SSHUserAuthClient	signData	publicKey signData	sign the given data with the given public key
conch.ssh	SSHUserAuthClient	_cbSignData	privateKey signData	called back when the private key is returned sign the data and
conch.ssh	SSHUserAuthClient	getPublicKey		return a public key for the user if no more public keys are
conch.ssh	SSHUserAuthClient	getPrivateKey		return a l{deferred} that will be called back with the private key object corresponding to the last public key from getpublickey()
conch.ssh	SSHUserAuthClient	getPassword	prompt	return a l{deferred} that will be called back with a password
conch.ssh	SSHUserAuthClient	getGenericAnswers	name instruction prompts	returns a l{deferred} with the responses to the promopts
conch.ssh	SSHService	serviceStarted		called when the service is active on the transport
conch.ssh	SSHService	serviceStopped		called when the service is stopped either by the connection ending
conch.ssh	SSHService	packetReceived	messageNum packet	called when we receive a packet on the transport
conch.ssh	SSHAgentClient	requestIdentities		@return a l{deferred} which will fire with a list of all keys found in the ssh agent
conch.ssh	SSHAgentClient	_cbRequestIdentities	data	unpack a collection of identities into a list of tuples comprised of public key blobs and comments
conch.ssh	SSHAgentClient	addIdentity	blob comment	add a private key blob to the agent's collection of keys
conch.ssh	SSHAgentClient	signData	blob data	request that the agent sign the given c{data} with the private key which corresponds to the public key given by c{blob}
conch.ssh	SSHAgentClient	removeIdentity	blob	remove the private key corresponding to the public key in blob from the running agent
conch.ssh	SSHAgentClient	removeAllIdentities		remove all keys from the running agent
conch.ssh	SSHAgentServer	agentc_REQUEST_IDENTITIES	data	return all of the identities that have been added to the server
conch.ssh	SSHAgentServer	agentc_SIGN_REQUEST	data	data is a structure with a reference to an already added key object and some data that the clients wants signed with that key
conch.ssh	SSHAgentServer	agentc_ADD_IDENTITY	data	adds a private key to the agent's collection of identities on
conch.ssh	SSHAgentServer	agentc_REMOVE_IDENTITY	data	remove a specific key from the agent's collection of identities
conch.ssh	SSHAgentServer	agentc_REMOVE_ALL_IDENTITIES	data	remove all keys from the agent's collection of identities
conch.ssh	SSHAgentServer	agentc_REQUEST_RSA_IDENTITIES	data	v1 message for listing rsa1 keys superseded by agentc_request_identities which handles different key types
conch.ssh	SSHAgentServer	agentc_REMOVE_RSA_IDENTITY	data	v1 message for removing rsa1 keys superseded by agentc_remove_identity which handles different key types
conch.ssh	SSHAgentServer	agentc_REMOVE_ALL_RSA_IDENTITIES	data	v1 message for removing all rsa1 keys superseded by agentc_remove_all_identities which handles different key types
conch.ssh		_getRandomNumber	random bits	generate a random number in the range [0 2 ** bits)
conch.ssh		_generateX	random bits	generate a new value for the private key x
conch.ssh	SSHCiphers	setKeys	outIV outKey inIV inKey	set up the ciphers and hashes using the given keys @param outiv the outgoing initialization vector
conch.ssh	SSHCiphers	_getCipher	cip iv key	creates an initialized cipher object
conch.ssh	SSHCiphers	_getMAC	mac key	gets a 4-tuple representing the message authentication code
conch.ssh	SSHCiphers	encrypt	blocks	encrypt some data
conch.ssh	SSHCiphers	decrypt	blocks	decrypt some data
conch.ssh	SSHCiphers	makeMAC	seqid data	create a message authentication code mac for the given packet using the outgoing mac values
conch.ssh	SSHCiphers	verify	seqid data mac	verify an incoming mac using the incoming mac values
conch.ssh		_getSupportedCiphers		build a list of ciphers that are supported by the backend in use
conch.ssh	SSHTransportBase	connectionLost	reason	when the underlying connection is closed stop the running service if any and log out the avatar if any
conch.ssh	SSHTransportBase	connectionMade		called when the connection is made to the other side we sent our
conch.ssh	SSHTransportBase	sendKexInit		send a i{kexinit} message to initiate key exchange or to respond to a key exchange initiated by the peer
conch.ssh	SSHTransportBase	_allowedKeyExchangeMessageType	messageType	determine if the given message type may be sent while key exchange is in progress
conch.ssh	SSHTransportBase	sendPacket	messageType payload	sends a packet if it's been set up compress the data encrypt it
conch.ssh	SSHTransportBase	getPacket		try to return a decrypted authenticated and decompressed packet out of the buffer
conch.ssh	SSHTransportBase	_unsupportedVersionReceived	remoteVersion	called when an unsupported version of the ssh protocol is received from the remote endpoint
conch.ssh	SSHTransportBase	dataReceived	data	first check for the version string (ssh-2 0-*) after that has been
conch.ssh	SSHTransportBase	dispatchMessage	messageNum payload	send a received message to the appropriate method
conch.ssh	SSHTransportBase	getPeer		returns an l{sshtransportaddress} corresponding to the other peer side of this transport
conch.ssh	SSHTransportBase	getHost		returns an l{sshtransportaddress} corresponding to the this side of transport
conch.ssh	SSHTransportBase	kexAlg		the key exchange algorithm name agreed between client and server
conch.ssh	SSHTransportBase	kexAlg	value	set the key exchange algorithm name
conch.ssh	SSHTransportBase	ssh_KEXINIT	packet	called when we receive a msg_kexinit message payload :
conch.ssh	SSHTransportBase	ssh_DISCONNECT	packet	called when we receive a msg_disconnect message payload :
conch.ssh	SSHTransportBase	ssh_IGNORE	packet	called when we receive a msg_ignore message no payload
conch.ssh	SSHTransportBase	ssh_UNIMPLEMENTED	packet	called when we receive a msg_unimplemented message payload :
conch.ssh	SSHTransportBase	ssh_DEBUG	packet	called when we receive a msg_debug message payload :
conch.ssh	SSHTransportBase	setService	service	set our service to service and start it running if we were
conch.ssh	SSHTransportBase	sendDebug	message alwaysDisplay language	send a debug message to the other side
conch.ssh	SSHTransportBase	sendIgnore	message	send a message that will be ignored by the other side this is
conch.ssh	SSHTransportBase	sendUnimplemented		send a message to the other side that the last packet was not understood
conch.ssh	SSHTransportBase	sendDisconnect	reason desc	send a disconnect message to the other side and then disconnect
conch.ssh	SSHTransportBase	_getKey	c sharedSecret exchangeHash	get one of the keys for authentication/encryption
conch.ssh	SSHTransportBase	_keySetup	sharedSecret exchangeHash	set up the keys for the connection and sends msg_newkeys when finished
conch.ssh	SSHTransportBase	_newKeys		called back by a subclass once a i{msg_newkeys} message has been received
conch.ssh	SSHTransportBase	isEncrypted	direction	check if the connection is encrypted in the given direction
conch.ssh	SSHTransportBase	isVerified	direction	check if the connection is verified/authentication in the given direction
conch.ssh	SSHTransportBase	loseConnection		lose the connection to the other side sending a disconnect_connection_lost message
conch.ssh	SSHTransportBase	receiveError	reasonCode description	called when we receive a disconnect error message from the other side
conch.ssh	SSHTransportBase	receiveUnimplemented	seqnum	called when we receive an unimplemented packet message from the other side
conch.ssh	SSHTransportBase	receiveDebug	alwaysDisplay message lang	called when we receive a debug message from the other side
conch.ssh	SSHServerTransport	ssh_KEXINIT	packet	called when we receive a msg_kexinit message for a description
conch.ssh	SSHServerTransport	_ssh_KEX_ECDH_INIT	packet	called from l{ssh_kex_dh_gex_request_old} to handle elliptic curve key exchanges
conch.ssh	SSHServerTransport	_ssh_KEXDH_INIT	packet	called to handle the beginning of a non-group key exchange
conch.ssh	SSHServerTransport	ssh_KEX_DH_GEX_REQUEST_OLD	packet	this represents different key exchange methods that share the same integer value
conch.ssh	SSHServerTransport	ssh_KEX_DH_GEX_REQUEST	packet	called when we receive a msg_kex_dh_gex_request message payload :
conch.ssh	SSHServerTransport	ssh_KEX_DH_GEX_INIT	packet	called when we get a msg_kex_dh_gex_init message payload :
conch.ssh	SSHServerTransport	ssh_NEWKEYS	packet	called when we get a msg_newkeys message no payload
conch.ssh	SSHServerTransport	ssh_SERVICE_REQUEST	packet	called when we get a msg_service_request message payload :
conch.ssh	SSHClientTransport	connectionMade		called when the connection is started with the server just sets
conch.ssh	SSHClientTransport	ssh_KEXINIT	packet	called when we receive a msg_kexinit message for a description
conch.ssh	SSHClientTransport	_ssh_KEX_ECDH_REPLY	packet	called to handle a reply to a ecdh exchange message(kex_ecdh_init)
conch.ssh	SSHClientTransport	_ssh_KEXDH_REPLY	packet	called to handle a reply to a non-group key exchange message (kexdh_init)
conch.ssh	SSHClientTransport	ssh_KEX_DH_GEX_GROUP	packet	this handles different messages which share an integer value
conch.ssh	SSHClientTransport	_continueKEXDH_REPLY	ignored pubKey f signature	the host key has been verified so we generate the keys
conch.ssh	SSHClientTransport	ssh_KEX_DH_GEX_REPLY	packet	called when we receive a msg_kex_dh_gex_reply message payload :
conch.ssh	SSHClientTransport	_continueGEX_REPLY	ignored pubKey f signature	the host key has been verified so we generate the keys
conch.ssh	SSHClientTransport	_keySetup	sharedSecret exchangeHash	see sshtransportbase _keysetup()
conch.ssh	SSHClientTransport	ssh_NEWKEYS	packet	called when we receive a msg_newkeys message no payload
conch.ssh	SSHClientTransport	ssh_SERVICE_ACCEPT	packet	called when we receive a msg_service_accept message payload :
conch.ssh	SSHClientTransport	requestService	instance	request that a service be run over this transport
conch.ssh	SSHClientTransport	verifyHostKey	hostKey fingerprint	returns a deferred that gets a callback if it is a valid key or an errback if not
conch.ssh	SSHClientTransport	connectionSecure		called when the encryption has been set up generally
conch.ssh	_NullEncryptionContext	update	data	'encrypt' new data by doing nothing
conch.ssh	_DummyCipher	encryptor		construct a noop encryptor
conch.ssh	_DummyCipher	decryptor		construct a noop decryptor
conch.ssh	Key	fromFile	cls filename type passphrase	load a key from a file
conch.ssh	Key	fromString	cls data type passphrase	return a key object corresponding to the string data
conch.ssh	Key	_fromString_BLOB	cls blob	return a public key object corresponding to this public key blob
conch.ssh	Key	_fromString_PRIVATE_BLOB	cls blob	return a private key object corresponding to this private key blob
conch.ssh	Key	_fromString_PUBLIC_OPENSSH	cls data	return a public key object corresponding to this openssh public key string
conch.ssh	Key	_fromString_PRIVATE_OPENSSH	cls data passphrase	return a private key object corresponding to this openssh private key string
conch.ssh	Key	_fromString_PUBLIC_LSH	cls data	return a public key corresponding to this lsh public key string
conch.ssh	Key	_fromString_PRIVATE_LSH	cls data	return a private key corresponding to this lsh private key string
conch.ssh	Key	_fromString_AGENTV3	cls data	return a private key object corresponsing to the secure shell key agent v3 format
conch.ssh	Key	_guessStringType	cls data	guess the type of key in data the types map to _fromstring_*
conch.ssh	Key	_fromRSAComponents	cls n e d	build a key from rsa numerical components
conch.ssh	Key	_fromDSAComponents	cls y p q	build a key from dsa numerical components
conch.ssh	Key	_fromECComponents	cls x y curve	build a key from ec components
conch.ssh	Key	__init__	keyObject	initialize with a private or public c{cryptography
conch.ssh	Key	__eq__	other	return true if other represents an object with the same key
conch.ssh	Key	__ne__	other	return true if other represents anything other than this key
conch.ssh	Key	__repr__		return a pretty representation of this object
conch.ssh	Key	keyObject		a c{crypto publickey} object similar to this key
conch.ssh	Key	isPublic		check if this instance is a public key
conch.ssh	Key	public		returns a version of this key containing only the public key data
conch.ssh	Key	fingerprint	format	the fingerprint of a public key consists of the output of the message-digest algorithm in the specified format
conch.ssh	Key	type		return the type of the object we wrap currently this can only be
conch.ssh	Key	sshType		get the type of the object we wrap as defined in the ssh protocol defined in rfc 4253 section 6
conch.ssh	Key	size		return the size of the object we wrap
conch.ssh	Key	data		return the values of the public key as a dictionary
conch.ssh	Key	blob		return the public key blob for this key the blob is the
conch.ssh	Key	privateBlob		return the private key blob for this key the blob is the
conch.ssh	Key	toString	type extra	create a string representation of this key if the key is a private
conch.ssh	Key	_toString_OPENSSH	extra	return a public or private openssh string see
conch.ssh	Key	_toString_LSH		return a public or private lsh key see _fromstring_public_lsh and
conch.ssh	Key	_toString_AGENTV3		return a private secure shell agent v3 key see
conch.ssh	Key	sign	data	sign some data with this key
conch.ssh	Key	verify	signature data	verify a signature using this key
conch.ssh		objectType	obj	deprecated return the ssh key type corresponding to a
conch.ssh		_getPersistentRSAKey	location keySize	this function returns a persistent l{key}
conch.client		_b64encode	s	encode a binary string as base64 with no trailing newline
conch.client		_extractCommon	string	extract common elements of base64 keys from an entry in a hosts file
conch.client	_BaseEntry	matchesKey	keyObject	check to see if this entry matches a given key object
conch.client	PlainEntry	fromString	cls string	parse a plain-text entry in a known_hosts file and return a corresponding l{plainentry}
conch.client	PlainEntry	matchesHost	hostname	check to see if this entry matches a given hostname
conch.client	PlainEntry	toString		implement l{iknownhostentry tostring} by recording the comma-separated
conch.client	UnparsedEntry	__init__	string	create an unparsed entry from a line in a known_hosts file which cannot otherwise be parsed
conch.client	UnparsedEntry	matchesHost	hostname	always returns false
conch.client	UnparsedEntry	matchesKey	key	always returns false
conch.client	UnparsedEntry	toString		returns the input line without its newline if one was given
conch.client		_hmacedString	key string	return the sha-1 hmac hash of the given key and string
conch.client	HashedEntry	fromString	cls string	load a hashed entry from a string representing a line in a known_hosts file
conch.client	HashedEntry	matchesHost	hostname	implement l{iknownhostentry matcheshost} to compare the hash of the
conch.client	HashedEntry	toString		implement l{iknownhostentry tostring} by base64-encoding the salt host
conch.client	KnownHostsFile	__init__	savePath	create a new empty knownhostsfile
conch.client	KnownHostsFile	savePath		@see c{savepath} parameter of l{__init__}
conch.client	KnownHostsFile	iterentries		iterate over the host entries in this file
conch.client	KnownHostsFile	hasHostKey	hostname key	check for an entry with matching hostname and key
conch.client	KnownHostsFile	verifyHostKey	ui hostname ip key	verify the given host key for the given ip and host asking for confirmation from and notifying the given ui about changes to this
conch.client	KnownHostsFile	addHostKey	hostname key	add a new l{hashedentry} to the key database
conch.client	KnownHostsFile	save		save this l{knownhostsfile} to the path it was loaded from
conch.client	KnownHostsFile	fromPath	cls path	create a new l{knownhostsfile}, potentially reading existing known hosts information from the given file
conch.client	ConsoleUI	__init__	opener	@param opener a no-argument callable which should open a console binary-mode file-like object to be used for reading and writing
conch.client	ConsoleUI	prompt	text	write the given text as a prompt to the console output then read a result from the console input
conch.client	ConsoleUI	warn	text	notify the user non-interactively of the provided text by writing it to the console
conch.client	ConchOptions	opt_identity	i	identity for public-key authentication
conch.client	ConchOptions	opt_ciphers	ciphers	select encryption algorithms
conch.client	ConchOptions	opt_macs	macs	specify mac algorithms
conch.client	ConchOptions	opt_host_key_algorithms	hkas	select host key algorithms
conch.client	ConchOptions	opt_user_authentications	uas	choose how to authenticate to the remote server
conch.client	SSHAgentClient	getPublicKey		return a l{key} from the first blob in c{self blobs}, if any or
conch.client		verifyHostKey	transport host pubKey fingerprint	verify a host's key
conch.client		isInKnownHosts	host pubKey options	checks to see if host is in the known_hosts file for the user
conch.client		getHostKeyAlgorithms	host options	look in known_hosts for a key corresponding to c{host}
conch.client	SSHUserAuthClient	_getPassword	prompt	prompt for a password using l{getpass getpass}
conch.client	SSHUserAuthClient	getPublicKey		get a public key from the key agent if possible otherwise look in the next configured identity file for one
conch.client	SSHUserAuthClient	signData	publicKey signData	extend the base signing behavior by using an ssh agent to sign the data if one is available
conch.client	SSHUserAuthClient	getPrivateKey		try to load the private key from the last used file identified by c{getpublickey}, potentially asking for the passphrase if the key is
conch.client	SSHUserAuthClient	_openTty	cls	open /dev/tty as two streams one in read one in write mode and return them
conch.client	SSHUserAuthClient	_replaceStdoutStdin	cls	contextmanager that replaces stdout and stdin with /dev/tty and resets them when it is done
conch.insults	ITerminalProtocol	makeConnection	transport	called with an l{iterminaltransport} when a connection is established
conch.insults	ITerminalProtocol	keystrokeReceived	keyID modifier	a keystroke was received
conch.insults	ITerminalProtocol	terminalSize	width height	called to indicate the size of the terminal
conch.insults	ITerminalProtocol	unhandledControlSequence	seq	called when an unsupported control sequence is received
conch.insults	ITerminalProtocol	connectionLost	reason	called when the connection has been lost
conch.insults	TerminalProtocol	connectionMade		called after a connection has been established
conch.insults	ITerminalTransport	cursorUp	n	move the cursor up n lines
conch.insults	ITerminalTransport	cursorDown	n	move the cursor down n lines
conch.insults	ITerminalTransport	cursorForward	n	move the cursor right n columns
conch.insults	ITerminalTransport	cursorBackward	n	move the cursor left n columns
conch.insults	ITerminalTransport	cursorPosition	column line	move the cursor to the given line and column
conch.insults	ITerminalTransport	cursorHome		move the cursor home
conch.insults	ITerminalTransport	index		move the cursor down one line performing scrolling if necessary
conch.insults	ITerminalTransport	reverseIndex		move the cursor up one line performing scrolling if necessary
conch.insults	ITerminalTransport	nextLine		move the cursor to the first position on the next line performing scrolling if necessary
conch.insults	ITerminalTransport	saveCursor		save the cursor position character attribute character set and origin mode selection
conch.insults	ITerminalTransport	restoreCursor		restore the previously saved cursor position character attribute character set and origin mode selection
conch.insults	ITerminalTransport	setModes	modes	set the given modes on the terminal
conch.insults	ITerminalTransport	resetModes	mode	reset the given modes on the terminal
conch.insults	ITerminalTransport	setPrivateModes	modes	set the given dec private modes on the terminal
conch.insults	ITerminalTransport	resetPrivateModes	modes	reset the given dec private modes on the terminal
conch.insults	ITerminalTransport	applicationKeypadMode		cause keypad to generate control functions
conch.insults	ITerminalTransport	numericKeypadMode		cause keypad to generate normal characters
conch.insults	ITerminalTransport	selectCharacterSet	charSet which	select a character set
conch.insults	ITerminalTransport	shiftIn		activate the g0 character set
conch.insults	ITerminalTransport	shiftOut		activate the g1 character set
conch.insults	ITerminalTransport	singleShift2		shift to the g2 character set for a single character
conch.insults	ITerminalTransport	singleShift3		shift to the g3 character set for a single character
conch.insults	ITerminalTransport	selectGraphicRendition		enabled one or more character attributes
conch.insults	ITerminalTransport	horizontalTabulationSet		set a tab stop at the current cursor position
conch.insults	ITerminalTransport	tabulationClear		clear the tab stop at the current cursor position
conch.insults	ITerminalTransport	tabulationClearAll		clear all tab stops
conch.insults	ITerminalTransport	doubleHeightLine	top	make the current line the top or bottom half of a double-height double-width line
conch.insults	ITerminalTransport	singleWidthLine		make the current line a single-width single-height line
conch.insults	ITerminalTransport	doubleWidthLine		make the current line a double-width line
conch.insults	ITerminalTransport	eraseToLineEnd		erase from the cursor to the end of line including cursor position
conch.insults	ITerminalTransport	eraseToLineBeginning		erase from the cursor to the beginning of the line including the cursor position
conch.insults	ITerminalTransport	eraseLine		erase the entire cursor line
conch.insults	ITerminalTransport	eraseToDisplayEnd		erase from the cursor to the end of the display including the cursor position
conch.insults	ITerminalTransport	eraseToDisplayBeginning		erase from the cursor to the beginning of the display including the cursor position
conch.insults	ITerminalTransport	eraseDisplay		erase the entire display
conch.insults	ITerminalTransport	deleteCharacter	n	delete n characters starting at the cursor position
conch.insults	ITerminalTransport	insertLine	n	insert n lines at the cursor position
conch.insults	ITerminalTransport	deleteLine	n	delete n lines starting at the cursor position
conch.insults	ITerminalTransport	reportCursorPosition		return a deferred that fires with a two-tuple of x y indicating the cursor position
conch.insults	ITerminalTransport	reset		reset the terminal to its initial state
conch.insults	ITerminalTransport	unhandledControlSequence	seq	called when an unsupported control sequence is received
conch.insults	ServerProtocol	__init__	protocolFactory	@param protocolfactory a callable which will be invoked with *a **kw and should return an iterminalprotocol implementor
conch.insults	ClientProtocol	__init__	terminalFactory	@param terminalfactory a callable which will be invoked with *a **kw and should return an iterminaltransport provider
conch.insults	ClientProtocol	dataReceived	data	parse the given data from a terminal server dispatching to event handlers defined by c{self
conch.insults	InsultsClient	gotoXY	x y	go to a position on the screen
conch.insults	InsultsClient	writeCh	ch	write a character to the screen if we're at the end of the row
conch.insults	InsultsClient	writeStr	s	write a string to the screen this does not wrap a the edge of the
conch.insults	InsultsClient	eraseToLine		erase from the current position to the end of the line
conch.insults	InsultsClient	eraseToScreen		erase from the current position to the end of the screen
conch.insults	InsultsClient	clearScreen		clear the screen and return the cursor to 0 0
conch.insults	InsultsClient	setAttributes		set the attributes for drawing on the screen
conch.insults	InsultsClient	refresh		redraw the screen
conch.insults	InsultsClient	windowSizeChanged		called when the size of the window changes
conch.insults	InsultsClient	keyReceived	key	called when the user hits a key
conch.insults	Widget	focusReceived		called when focus is being given to this widget
conch.insults		rectangle	terminal position dimension	draw a rectangle @type position l{tuple}
conch.insults	_FormattingState	wantOne		add a character attribute to a copy of this formatting state
conch.insults	TerminalBuffer	write	data	add the given printable bytes to the terminal
conch.insults	TerminalBuffer	insertAtCursor	b	add one byte to the terminal at the cursor and make consequent state updates
conch.insults	TerminalBuffer	nextLine		update the cursor position attributes and scroll down if appropriate
conch.insults	TerminalBuffer	setPrivateModes	modes	enable the given modes
conch.insults	TerminalBuffer	resetPrivateModes	modes	disable the given modes
conch.insults		assembleFormattedText	formatted	assemble formatted text from structured information
cred	IUsernameDigestHash	checkHash	digestHash	@param digesthash the hashed username realm password to check against
cred	IUsernameHashedPassword	checkPassword	password	validate these credentials against the correct password
cred	IUsernamePassword	checkPassword	password	validate these credentials against the correct password
cred	DigestedCredentials	checkPassword	password	verify that the credentials represented by this object agree with the given plaintext c{password} by hashing c{password} in the same way the
cred	DigestedCredentials	checkHash	digestHash	verify that the credentials represented by this object agree with the credentials represented by the i{h a1 } given in c{digesthash}
cred	DigestCredentialFactory	getChallenge	address	generate the challenge for use in the www-authenticate header
cred	DigestCredentialFactory	_generateNonce		create a random value suitable for use as the nonce parameter of a www-authenticate challenge
cred	DigestCredentialFactory	_getTime		parameterize the time based seed used in c{_generateopaque} so we can deterministically unittest it's behavior
cred	DigestCredentialFactory	_generateOpaque	nonce clientip	generate an opaque to be returned to the client this is a unique
cred	DigestCredentialFactory	_verifyOpaque	opaque nonce clientip	given the opaque and nonce from the request as well as the client ip that made the request verify that the opaque was generated by us
cred	DigestCredentialFactory	decode	response method host	decode the given response and attempt to generate a l{digestedcredentials} from it
cred	ICredentialsChecker	requestAvatarId	credentials	@param credentials something which implements one of the interfaces in self
cred	FilePasswordDB	__init__	filename delim usernameField passwordField	@type filename c{str} @param filename the name of the file from which to read username and
cred	FilePasswordDB	_loadCredentials		loads the credentials from the configured file
cred	ICheckerFactory	generateChecker	argstring	return an l{twisted cred checkers icredentialschecker} provider using the supplied
cred		findCheckerFactories		find all objects that implement l{icheckerfactory}
cred		findCheckerFactory	authType	find the first checker factory that supports the given authtype
cred		makeChecker	description	returns an l{twisted cred checkers icredentialschecker} based on the
cred	AuthOptionMixin	supportsInterface	interface	returns whether a particular credentials interface is supported
cred	AuthOptionMixin	supportsCheckerFactory	factory	returns whether a checker factory will provide at least one of the credentials interfaces that we care about
cred	AuthOptionMixin	addChecker	checker	supply a supplied credentials checker to the options class
cred	AuthOptionMixin	opt_auth	description	specify an authentication method for the server
cred	AuthOptionMixin	_checkerFactoriesForOptHelpAuth		return a list of which authtypes will be displayed by --help-auth
cred	AuthOptionMixin	opt_help_auth		show all authentication methods available
cred	AuthOptionMixin	opt_help_auth_type	authType	show help for a particular authentication type
cred		calcHA1	pszAlg pszUserName pszRealm pszPassword	compute h a1 from rfc 2617
cred		calcHA2	algo pszMethod pszDigestUri pszQop	compute h a2 from rfc 2617
cred		calcResponse	HA1 HA2 algo pszNonce	compute the digest for the given parameters
cred	IRealm	requestAvatar	avatarId mind	return avatar which provides one of the given interfaces
cred	Portal	__init__	realm checkers	create a portal to a l{irealm}
cred	Portal	listCredentialsInterfaces		return list of credentials interfaces that can be used to login
cred	Portal	login	credentials mind	@param credentials an implementor of l{twisted
words	Options	opt_group	name	specify a group which should exist
words	Options	opt_passwd	filename	name of a passwd-style file (this is for
words	IProtocolPlugin	getFactory	realm portal	retrieve a c{twisted internet interfaces iserverfactory} provider
words	IGroup	add	user	include the given user in this group
words	IGroup	remove	user reason	remove the given user from this group
words	IGroup	size		return the number of participants in this group
words	IGroup	receive	sender recipient message	broadcast the given message from the given sender to other users in group
words	IGroup	setMetadata	meta	change the metadata associated with this group
words	IGroup	iterusers		return an iterator of all users in this group
words	IChatClient	receive	sender recipient message	callback notifying this user of the given message sent by the given user
words	IChatClient	groupMetaUpdate	group meta	callback notifying this user that the metadata for the given group has changed
words	IChatClient	userJoined	group user	callback notifying this user that the given user has joined the given group
words	IChatClient	userLeft	group user reason	callback notifying this user that the given user has left the given group for the given reason
words	IUser	loggedIn	realm mind	invoked by the associated l{ichatservice} when login occurs
words	IUser	send	recipient message	send the given message to the given user or group
words	IUser	join	group	attempt to join the given group
words	IUser	leave	group	discontinue participation in the given group
words	IUser	itergroups		return an iterator of all groups of which this user is a member
words	IChatService	itergroups		return all groups available on this service
words	IChatService	getGroup	name	retrieve the group by the given name
words	IChatService	createGroup	name	create a new group with the given name
words	IChatService	lookupGroup	name	retrieve a group by name
words	IChatService	getUser	name	retrieve the user by the given name
words	IChatService	createUser	name	create a new user with the given name
words	IRCUser	irc_PASS	prefix params	password message -- register a password
words	IRCUser	irc_NICK	prefix params	nick message -- set your nickname
words	IRCUser	irc_USER	prefix params	user message -- set your realname
words	IRCUser	irc_NICKSERV_PRIVMSG	prefix params	send a private message
words	IRCUser	irc_MODE	prefix params	user mode message
words	IRCUser	irc_PRIVMSG	prefix params	send a private message
words	IRCUser	_sendTopic	group	send the topic of the given group to this user if it has one
words	IRCUser	list	channels	send a group of list response lines @type channel c{list} of c{ str int str }
words	IRCUser	irc_LIST	prefix params	list query return information about the indicated channels or about all
words	WordsRealm	addUser	user	add the given user to this service
words	WordsRealm	addGroup	group	add the given group to this service
words.xish	XmlStream	_initializeStream		sets up xml parser
words.xish	XmlStream	connectionMade		called when a connection is made
words.xish	XmlStream	dataReceived	data	called whenever data is received
words.xish	XmlStream	connectionLost	reason	called when the connection is shut down
words.xish	XmlStream	onDocumentStart	rootElement	called whenever the start tag of a root element has been received
words.xish	XmlStream	onElement	element	called whenever a direct child element of the root element has been received
words.xish	XmlStream	onDocumentEnd		called whenever the end tag of the root element has been received
words.xish	XmlStream	setDispatchFn	fn	set another function to handle elements
words.xish	XmlStream	resetDispatchFn		set the default function (c{onelement}) to handle elements
words.xish	XmlStream	send	obj	send data over the stream
words.xish	BootstrapMixin	installBootstraps	dispatcher	install registered bootstrap observers
words.xish	BootstrapMixin	addBootstrap	event fn	add a bootstrap event handler
words.xish	BootstrapMixin	removeBootstrap	event fn	remove a bootstrap event handler
words.xish	XmlStreamFactoryMixin	buildProtocol	addr	create an instance of xmlstream
words.xish	XmlStreamFactory	buildProtocol	addr	create a protocol instance
words.xish		_splitPrefix	name	internal method for splitting a prefixed element name into its
words.xish		escapeToXml	text isattrib	escape text to proper xml form per section 2 3 in the xml specification
words.xish		generateOnlyInterface	list int	filters items in a list by class
words.xish		generateElementsQNamed	list name uri	filters element items in a list with matching name and uri
words.xish		generateElementsNamed	list name	filters element items in a list with matching name regardless of uri
words.xish	IElement	toXml	prefixes closeElement defaultUri prefixesInScope	serializes object to a partial xml document @param prefixes dictionary that maps namespace uris to suggested
words.xish	IElement	addElement	name defaultUri content	create an element and add as child
words.xish	IElement	addChild	node	adds a node as child of this element
words.xish	IElement	addContent	text	adds character data to this element
words.xish	Element	__init__	qname defaultUri attribs localPrefixes	@param qname tuple of uri name @param defaulturi the default uri of the element defaults to the uri
words.xish	Element	__unicode__		retrieve the first cdata content node
words.xish	Element	__bytes__		retrieve the first character data node as utf-8 bytes
words.xish	Element	_dqa	attr	dequalify an attribute key as needed
words.xish	Element	getAttribute	attribname default	retrieve the value of attribname if it exists
words.xish	Element	hasAttribute	attrib	determine if the specified attribute exists
words.xish	Element	compareAttribute	attrib value	safely compare the value of an attribute against a provided value
words.xish	Element	swapAttributeValues	left right	swap the values of two attribute
words.xish	Element	addChild	node	add a child to this element
words.xish	Element	addContent	text	add some text data to this element
words.xish	Element	addRawXml	rawxmlstring	add a pre-serialized chunk o' xml as a child of this element
words.xish	Element	addUniqueId		add a unique across a given python session id attribute to this element
words.xish	Element	elements	uri name	iterate across all children of this element that are elements
words.xish	Element	toXml	prefixes closeElement defaultUri prefixesInScope	serialize this element and all children to a string
words.xish		elementStream		preferred method to construct an elementstream uses expat-based stream if available and falls back to sux if necessary
words.xish	BooleanValue	_booleanAnd	elem	calculate boolean and of the given expressions given an element
words.xish	BooleanValue	_booleanOr	elem	calculate boolean or of the given expressions given an element
words.xish		Function	fname	internal method which selects the function object
words.xish	CallbackList	callback		call all registered callbacks
words.xish	CallbackList	isEmpty		return if list of registered callbacks is empty
words.xish	EventDispatcher	addOnetimeObserver	event observerfn priority	register a one-time observer for an event
words.xish	EventDispatcher	addObserver	event observerfn priority	register an observer for an event
words.xish	EventDispatcher	removeObserver	event observerfn	remove callable as observer for an event
words.xish	EventDispatcher	dispatch	obj event	dispatch an event
words.im	TwistedWordsPerson	sendMessage	text metadata	return a deferred
words.im	TwistedWordsGroup	sendGroupMessage	text metadata	return a deferred
words.im	PBAccount	__init__	accountName autoLogin username password	@param username the name of your pb identity
words.im	PBAccount	logOn	chatui	@returns this breaks with l{interfaces iaccount}
words.im	ContactsList	__init__	chatui	@param chatui the gui chat client associated with this contacts list
words.im	ContactsList	setContactStatus	person	inform the user that a person's status has changed
words.im	ContactsList	registerAccountClient	client	notify the user that an account client has been signed on to
words.im	ContactsList	unregisterAccountClient	client	notify the user that an account client has been signed off or disconnected from
words.im	ContactsList	contactChangedNick	person newnick	update your contact information to reflect a change to a contact's nickname
words.im	Conversation	__init__	person chatui	@param person the person who you're having this conversation with
words.im	Conversation	show		display the conversationwindow
words.im	Conversation	hide		hide the conversationwindow
words.im	Conversation	sendText	text	send text to the person with whom the user is conversing
words.im	Conversation	showMessage	text metadata	display a message sent from the person with whom the user is conversing
words.im	Conversation	contactChangedNick	person newnick	change a person's name
words.im	GroupConversation	__init__	group chatui	@param chatui the gui chat client associated with this conversation
words.im	GroupConversation	show		display the groupconversationwindow
words.im	GroupConversation	hide		hide the groupconversationwindow
words.im	GroupConversation	sendText	text	send text to the group
words.im	GroupConversation	showGroupMessage	sender text metadata	display to the user a message sent to this group from the given sender
words.im	GroupConversation	setGroupMembers	members	set the list of members in the group
words.im	GroupConversation	setTopic	topic author	change the topic for the group conversation window and display this change to the user
words.im	GroupConversation	memberJoined	member	add the given member to the list of members in the group conversation and displays this to the user
words.im	GroupConversation	memberChangedNick	oldnick newnick	change the nickname for a member of the group conversation and displays this change to the user
words.im	GroupConversation	memberLeft	member	delete the given member from the list of members in the group conversation and displays the change to the user
words.im	ChatUI	registerAccountClient	client	notify the user that an account has been signed on to
words.im	ChatUI	unregisterAccountClient	client	notify the user that an account has been signed off or disconnected
words.im	ChatUI	getContactsList		get the contacts list associated with this chat window
words.im	ChatUI	getConversation	person Class stayHidden	for the given person object return the conversation window or create and return a new conversation window if one does not exist
words.im	ChatUI	getGroupConversation	group Class stayHidden	for the given group object return the group conversation window or create and return a new group conversation window if it doesn't exist
words.im	ChatUI	getPerson	name client	for the given name and account client return an instance of a l{igroup<interfaces
words.im	ChatUI	getGroup	name client	for the given name and account client return an instance of a l{igroup<interfaces
words.im	ChatUI	contactChangedNick	person newnick	for the given c{person}, change the c{person}'s c{name} to c{newnick} and tell the contact list and any conversation windows with that
words.im	IAccount	__init__	accountName autoLogin username password	@type accountname string @param accountname a name to refer to the account by locally
words.im	IAccount	isOnline		am i online?
words.im	IClient	__init__	account chatui logonDeferred	@type account l{iaccount} @type chatui l{ichatui}
words.im	IClient	joinGroup	groupName	@param groupname the name of the group to join
words.im	IClient	leaveGroup	groupName	@param groupname the name of the group to leave
words.im	IPerson	isOnline		am i online right now?
words.im	IPerson	getStatus		what is my on-line status? @return l{locals
words.im	IPerson	getIdleTime		@rtype string (xxx how about a scalar?)
words.im	IPerson	sendMessage	text metadata	send a message to this person
words.im	IGroup	setTopic	text	set this groups topic on the server
words.im	IGroup	sendGroupMessage	text metadata	send a message to this group
words.im	IGroup	join		join this group
words.im	IGroup	leave		depart this group
words.im	IConversation	__init__	person chatui	@type person l{iperson}
words.im	IConversation	show		doesn't seem like it belongs in this interface
words.im	IConversation	hide		nor this neither
words.im	IConversation	changedNick	person newnick	@param person xxx shouldn't this always be conversation person?
words.im	IGroupConversation	show		doesn't seem like it belongs in this interface
words.im	IGroupConversation	hide		nor this neither
words.im	IGroupConversation	setGroupMembers	members	sets the list of members in the group and displays it to the user
words.im	IGroupConversation	setTopic	topic author	displays the topic from the server for the group conversation window
words.im	IGroupConversation	memberJoined	member	adds the given member to the list of members in the group conversation
words.im	IGroupConversation	memberChangedNick	oldnick newnick	changes the oldnick in the list of members to c{newnick} and displays this
words.im	IGroupConversation	memberLeft	member	deletes the given member from the list of members in the group conversation and displays the change to the user
words.im	IChatUI	registerAccountClient	client	notifies user that an account has been signed on to
words.im	IChatUI	unregisterAccountClient	client	notifies user that an account has been signed off or disconnected
words.im	IChatUI	getConversation	person Class stayHidden	for the given person object returns the conversation window or creates and returns a new conversation window if one does not exist
words.im	IChatUI	getGroupConversation	group Class stayHidden	for the given group object returns the group conversation window or creates and returns a new group conversation window if it doesn't exist
words.im	IChatUI	getPerson	name client	get a person for a client
words.im	IChatUI	getGroup	name client	get a group for a client
words.im	IChatUI	contactChangedNick	oldnick newnick	for the given person changes the person's name to newnick and tells the contact list and any conversation windows with that person
words.im	AccountManager	getSnapShot		a snapshot of all the accounts and their status
words.im	AccountManager	connect	accountName chatui	@returntype deferred l{interfaces iclient}
words.im	IRCProto	kickedFrom	channel kicker message	called when i am kicked from a channel
words.im	IRCProto	irc_RPL_NAMREPLY	prefix params	rpl_namreply >> names #bnl
words.im	AbstractGroup	getGroupCommands		finds group commands
words.im	AbstractGroup	getTargetCommands	target	finds group commands
words.im	AbstractPerson	getPersonCommands		finds person commands
words.im	AbstractPerson	getIdleTime		returns a string
words.im	AbstractClientMixin	unregisterAsAccountClient		tell the chat ui that i have signed off'
words.im	AbstractAccount	logOn	chatui	log on to this account
words.im	AbstractAccount	_startLogOn	chatui	start the sign on process
words.im	AbstractAccount	_loginFailed	reason	errorback for l{logon}
words.protocols	OscarConnection	disconnect		send the disconnect flap and sever the connection
words.protocols	SNACBased	sendSNAC	fam sub data flags	send a snac and wait for the response by returning a deferred
words.protocols	SNACBased	sendSNACnr	fam sub data flags	send a snac but don't bother adding a deferred we don't care
words.protocols	SNACBased	oscar_01_0A	snac	change of rate information
words.protocols	SNACBased	oscar_01_18	snac	host versions in the same format as we sent
words.protocols	SNACBased	clientReady		called when the client is ready to be online
words.protocols	BOSConnection	oscar_01_05	snac d	data for a new service connection
words.protocols	BOSConnection	oscar_01_10	snac	we've been warned
words.protocols	BOSConnection	oscar_02_03	snac	location rights response
words.protocols	BOSConnection	oscar_03_03	snac	buddy list rights response
words.protocols	BOSConnection	oscar_04_05	snac	icbm parms response
words.protocols	BOSConnection	oscar_04_07	snac	icbm message instant message
words.protocols	BOSConnection	oscar_09_03	snac	bos rights response
words.protocols	BOSConnection	oscar_0B_02	snac	stats reporting interval
words.protocols	BOSConnection	oscar_13_03	snac	ssi rights response
words.protocols	BOSConnection	requestSelfInfo		ask for the oscaruser for ourselves
words.protocols	BOSConnection	initSSI		this sends the rate request for family 0x13 server side information
words.protocols	BOSConnection	requestSSI	timestamp revision	request the server side information
words.protocols	BOSConnection	activateSSI		active the data stored on the server use buddy list permit deny settings etc
words.protocols	BOSConnection	startModifySSI		tell the oscar server to be on the lookout for ssi modifications
words.protocols	BOSConnection	addItemSSI	item groupID buddyID	add an item to the ssi server if buddyid == 0 then this should be a group
words.protocols	BOSConnection	setProfile	profile	set the profile
words.protocols	BOSConnection	setAway	away	set the away message or return (if away == none)
words.protocols	BOSConnection	setIdleTime	idleTime	set our idle time don't call more than once with a non-0 idle time
words.protocols	BOSConnection	sendMessage	user message wantAck autoResponse	send a message to user not an oscaruser
words.protocols	BOSConnection	connectService	service wantCallback extraData	connect to another service if wantcallback we return a deferred that gets called back when the service is online
words.protocols	BOSConnection	createChat	shortName	create a chat room
words.protocols	BOSConnection	joinChat	exchange fullName instance	join a chat room
words.protocols	BOSConnection	initDone		called when we get the rate information which means we should do other init stuff
words.protocols	BOSConnection	updateBuddy	user	called when a buddy changes status with the oscaruser for that buddy
words.protocols	BOSConnection	offlineBuddy	user	called when a buddy goes offline
words.protocols	BOSConnection	receiveMessage	user multiparts flags	called when someone sends us a message
words.protocols	BOSConnection	receiveWarning	newLevel user	called when someone warns us
words.protocols	BOSConnection	receiveChatInvite	user message exchange fullName	called when someone invites us to a chat room
words.protocols	BOSConnection	chatReceiveMessage	chat user message	called when someone in a chatroom sends us a message in the chat
words.protocols	BOSConnection	chatMemberJoined	chat member	called when a member joins the chat
words.protocols	BOSConnection	chatMemberLeft	chat member	called when a member leaves the chat
words.protocols	BOSConnection	receiveSendFileRequest	user file description cookie	called when someone tries to send a file to us
words.protocols		parsemsg	s	breaks a message from an irc server into its prefix command and arguments
words.protocols		split	str length	split a string into multiple lines
words.protocols		_intOrDefault	value default	convert a value to an integer if possible
words.protocols	_CommandDispatcherMixin	dispatch	commandName	perform actual command dispatch
words.protocols		parseModes	modes params paramModes	parse an irc mode string
words.protocols	IRC	sendMessage	command	send a line formatted as an irc message
words.protocols	IRC	sendCommand	command parameters prefix tags	send to the remote peer a line formatted as an irc message
words.protocols	IRC	_stringTags	tags	converts a tag dictionary to a string
words.protocols	IRC	_validateTags	tags	checks the tag dict for errors and raises l{valueerror} if an error is found
words.protocols	IRC	_escapeTagValue	value	escape the given tag value according to u{escaping rules in ircv3 <https //ircv3
words.protocols	IRC	dataReceived	data	this hack is to support mirc which sends lf only even though the rfc says crlf
words.protocols	IRC	handleCommand	command prefix params	determine the function to call for the given command and call it with the given arguments
words.protocols	IRC	irc_unknown	prefix command params	called by l{handlecommand} on a command that doesn't have a defined handler
words.protocols	IRC	privmsg	sender recip message	send a message to a channel or user @type sender c{str} or c{unicode}
words.protocols	IRC	notice	sender recip message	send a "notice" to a channel or user
words.protocols	IRC	action	sender recip message	send an action to a channel or user
words.protocols	IRC	topic	user channel topic author	send the topic to a user
words.protocols	IRC	topicAuthor	user channel author date	send the author of and time at which a topic was set for the given channel
words.protocols	IRC	names	user channel names	send the names of a channel's participants to a user
words.protocols	IRC	who	user channel memberInfo	send a list of users participating in a channel
words.protocols	IRC	whois	user nick username hostname	send information about the state of a particular user
words.protocols	IRC	join	who where	send a join message
words.protocols	IRC	part	who where reason	send a part message
words.protocols	IRC	channelMode	user channel mode	send information about the mode of a channel
words.protocols	ServerSupportedFeatures	_splitParamArgs	cls params valueProcessor	split isupport parameter arguments
words.protocols	ServerSupportedFeatures	_unescapeParamValue	cls value	unescape an isupport parameter
words.protocols	ServerSupportedFeatures	_splitParam	cls param	split an isupport parameter
words.protocols	ServerSupportedFeatures	_parsePrefixParam	cls prefix	parse the isupport "prefix" parameter
words.protocols	ServerSupportedFeatures	_parseChanModesParam	params	parse the isupport "chanmodes" parameter
words.protocols	ServerSupportedFeatures	getFeature	feature default	get a server supported feature's value
words.protocols	ServerSupportedFeatures	hasFeature	feature	determine whether a feature is supported or not
words.protocols	ServerSupportedFeatures	parse	params	parse isupport parameters
words.protocols	ServerSupportedFeatures	isupport_unknown	command params	unknown isupport parameter
words.protocols	ServerSupportedFeatures	isupport_CHANLIMIT	params	the maximum number of each channel type a user may join
words.protocols	ServerSupportedFeatures	isupport_CHANMODES	params	available channel modes
words.protocols	ServerSupportedFeatures	isupport_CHANNELLEN	params	maximum length of a channel name a client may create
words.protocols	ServerSupportedFeatures	isupport_CHANTYPES	params	valid channel prefixes
words.protocols	ServerSupportedFeatures	isupport_EXCEPTS	params	mode character for "ban exceptions"
words.protocols	ServerSupportedFeatures	isupport_IDCHAN	params	safe channel identifiers
words.protocols	ServerSupportedFeatures	isupport_INVEX	params	mode character for "invite exceptions"
words.protocols	ServerSupportedFeatures	isupport_KICKLEN	params	maximum length of a kick message a client may provide
words.protocols	ServerSupportedFeatures	isupport_MAXLIST	params	maximum number of "list modes" a client may set on a channel at once
words.protocols	ServerSupportedFeatures	isupport_MODES	params	maximum number of modes accepting parameters that may be sent by a client in a single mode command
words.protocols	ServerSupportedFeatures	isupport_NETWORK	params	irc network name
words.protocols	ServerSupportedFeatures	isupport_NICKLEN	params	maximum length of a nickname the client may use
words.protocols	ServerSupportedFeatures	isupport_PREFIX	params	mapping of channel modes that clients may have to status flags
words.protocols	ServerSupportedFeatures	isupport_SAFELIST	params	flag indicating that a client may request a list without being disconnected due to the large amount of data generated
words.protocols	ServerSupportedFeatures	isupport_STATUSMSG	params	the server supports sending messages to only to clients on a channel with a specific status
words.protocols	ServerSupportedFeatures	isupport_TARGMAX	params	maximum number of targets allowable for commands that accept multiple targets
words.protocols	ServerSupportedFeatures	isupport_TOPICLEN	params	maximum length of a topic that may be set
words.protocols	IRCClient	_createHeartbeat		create the heartbeat l{loopingcall}
words.protocols	IRCClient	_sendHeartbeat		send a i{ping} message to the irc server as a form of keepalive
words.protocols	IRCClient	stopHeartbeat		stop sending i{ping} messages to keep the connection to the server alive
words.protocols	IRCClient	startHeartbeat		start sending i{ping} messages every l{ircclient heartbeatinterval}
words.protocols	IRCClient	created	when	called with creation date information about the server usually at logon
words.protocols	IRCClient	yourHost	info	called with daemon information about the server usually at logon
words.protocols	IRCClient	myInfo	servername version umodes cmodes	called with information about the server usually at logon
words.protocols	IRCClient	luserClient	info	called with information about the number of connections usually at logon
words.protocols	IRCClient	bounce	info	called with information about where the client should reconnect
words.protocols	IRCClient	isupport	options	called with various information about what the server supports
words.protocols	IRCClient	luserChannels	channels	called with the number of channels existent on the server
words.protocols	IRCClient	luserOp	ops	called with the number of ops logged on to the server
words.protocols	IRCClient	luserMe	info	called with information about the server connected to
words.protocols	IRCClient	privmsg	user channel message	called when i have a message from a user to me or a channel
words.protocols	IRCClient	joined	channel	called when i finish joining a channel
words.protocols	IRCClient	left	channel	called when i have left a channel
words.protocols	IRCClient	noticed	user channel message	called when i have a notice from a user to me or a channel
words.protocols	IRCClient	modeChanged	user channel set modes	called when users or channel's modes are changed
words.protocols	IRCClient	pong	user secs	called with the results of a ctcp ping query
words.protocols	IRCClient	signedOn		called after successfully signing on to the server
words.protocols	IRCClient	kickedFrom	channel kicker message	called when i am kicked from a channel
words.protocols	IRCClient	nickChanged	nick	called when my nick has been changed
words.protocols	IRCClient	userJoined	user channel	called when i see another user joining a channel
words.protocols	IRCClient	userLeft	user channel	called when i see another user leaving a channel
words.protocols	IRCClient	userQuit	user quitMessage	called when i see another user disconnect from the network
words.protocols	IRCClient	userKicked	kickee channel kicker message	called when i observe someone else being kicked from a channel
words.protocols	IRCClient	action	user channel data	called when i see a user perform an action on a channel
words.protocols	IRCClient	topicUpdated	user channel newTopic	in channel user changed the topic to newtopic
words.protocols	IRCClient	userRenamed	oldname newname	a user changed their name from oldname to newname
words.protocols	IRCClient	receivedMOTD	motd	i received a message-of-the-day banner from the server
words.protocols	IRCClient	join	channel key	join a channel
words.protocols	IRCClient	leave	channel reason	leave a channel
words.protocols	IRCClient	kick	channel user reason	attempt to kick a user from a channel
words.protocols	IRCClient	invite	user channel	attempt to invite user to channel @type user c{str}
words.protocols	IRCClient	topic	channel topic	attempt to set the topic of the given channel or ask what it is
words.protocols	IRCClient	mode	chan set modes limit	change the modes on a user or channel
words.protocols	IRCClient	say	channel message length	send a message to a channel @type channel c{str}
words.protocols	IRCClient	_safeMaximumLineLength	command	estimate a safe maximum line length for the given command
words.protocols	IRCClient	msg	user message length	send a message to a user or channel
words.protocols	IRCClient	notice	user message	send a notice to a user
words.protocols	IRCClient	away	message	mark this client as away
words.protocols	IRCClient	back		clear the away status
words.protocols	IRCClient	whois	nickname server	retrieve user information about the given nickname
words.protocols	IRCClient	register	nickname hostname servername	login to the server
words.protocols	IRCClient	setNick	nickname	set this client's nickname
words.protocols	IRCClient	quit	message	disconnect from the server @type message c{str}
words.protocols	IRCClient	describe	channel action	strike a pose
words.protocols	IRCClient	ping	user text	measure round-trip delay to another irc client
words.protocols	IRCClient	dccSend	user file	this is supposed to send a user a file directly this generally
words.protocols	IRCClient	dccResume	user fileName port resumePos	send a dcc resume request to another user
words.protocols	IRCClient	dccAcceptResume	user fileName port resumePos	send a dcc accept response to clients who have requested a resume
words.protocols	IRCClient	irc_ERR_NICKNAMEINUSE	prefix params	called when we try to register or change to a nickname that is already taken
words.protocols	IRCClient	alterCollidedNick	nickname	generate an altered version of a nickname that caused a collision in an effort to create an unused related name for subsequent registration
words.protocols	IRCClient	irc_ERR_ERRONEUSNICKNAME	prefix params	called when we try to register or change to an illegal nickname
words.protocols	IRCClient	irc_ERR_PASSWDMISMATCH	prefix params	called when the login was incorrect
words.protocols	IRCClient	irc_RPL_WELCOME	prefix params	called when we have received the welcome from the server
words.protocols	IRCClient	irc_JOIN	prefix params	called when a user joins a channel
words.protocols	IRCClient	irc_PART	prefix params	called when a user leaves a channel
words.protocols	IRCClient	irc_QUIT	prefix params	called when a user has quit
words.protocols	IRCClient	irc_MODE	user params	parse a server mode change message
words.protocols	IRCClient	irc_PING	prefix params	called when some has pinged us
words.protocols	IRCClient	irc_PRIVMSG	prefix params	called when we get a message
words.protocols	IRCClient	irc_NOTICE	prefix params	called when a user gets a notice
words.protocols	IRCClient	irc_NICK	prefix params	called when a user changes their nickname
words.protocols	IRCClient	irc_KICK	prefix params	called when a user is kicked from a channel
words.protocols	IRCClient	irc_TOPIC	prefix params	someone in the channel set the topic
words.protocols	IRCClient	irc_RPL_TOPIC	prefix params	called when the topic for a channel is initially reported or when it subsequently changes
words.protocols	IRCClient	irc_RPL_ENDOFMOTD	prefix params	i{rpl_endofmotd} indicates the end of the message of the day messages
words.protocols	IRCClient	ctcpQuery	user channel messages	dispatch method for any ctcp queries received
words.protocols	IRCClient	ctcpUnknownQuery	user channel tag data	fallback handler for unrecognized ctcp queries
words.protocols	IRCClient	ctcpQuery_CLIENTINFO	user channel data	a master index of what ctcp tags this client knows
words.protocols	IRCClient	ctcpQuery_DCC	user channel data	initiate a direct client connection @param user the hostmask of the user/client
words.protocols	IRCClient	dccDoSend	user address port fileName	called when i receive a dcc send offer from a client
words.protocols	IRCClient	dccDoResume	user file port resumePos	called when a client is trying to resume an offered file via dcc send
words.protocols	IRCClient	dccDoAcceptResume	user file port resumePos	called when a client has verified and accepted a dcc resume request made by us
words.protocols	IRCClient	ctcpMakeReply	user messages	send one or more c{extended messages} as a ctcp reply
words.protocols	IRCClient	ctcpMakeQuery	user messages	send one or more c{extended messages} as a ctcp query
words.protocols	IRCClient	ctcpReply	user channel messages	dispatch method for any ctcp replies received
words.protocols	IRCClient	ctcpUnknownReply	user channel tag data	called when a fitting ctcpreply_ method is not found
words.protocols	IRCClient	badMessage	line excType excValue tb	when i get a message that's so broken i can't use it
words.protocols	IRCClient	quirkyMessage	s	this is called when i receive a message which is peculiar but not wholly indecipherable
words.protocols	IRCClient	getUserModeParams		get user modes that require parameters for correct parsing
words.protocols	IRCClient	getChannelModeParams		get channel modes that require parameters for correct parsing
words.protocols	IRCClient	handleCommand	command prefix params	determine the function to call for the given command and call it with the given arguments
words.protocols	DccFileReceiveBasic	__init__	resumeOffset	@param resumeoffset an integer representing the amount of bytes from where the transfer of data should be resumed
words.protocols	DccFileReceiveBasic	dataReceived	data	see l{protocol protocol datareceived}
words.protocols		fileSize	file	i'll try my damndest to determine the size of this file object
words.protocols	DccChat	__init__	client queryData	initialize a new dcc chat session
words.protocols		dccDescribe	data	given the data chunk from a dcc query return a descriptive string
words.protocols	DccFileReceive	set_directory	directory	set the directory where the downloaded file will be placed
words.protocols	DccFileReceive	set_filename	filename	change the name of the file being transferred
words.protocols	DccFileReceive	set_overwrite	boolean	may i overwrite existing files? @param boolean a boolean value representing whether existing files
words.protocols	DccFileReceive	connectionLost	reason	when the connection is lost i close the file
words.protocols	_FormattingState	toMIRCControlCodes		emit a mirc control sequence that will set up all the attributes this formatting state has set
words.protocols		_foldr	f z xs	apply a function of two arguments cumulatively to the items of a sequence from right to left so as to reduce the sequence to
words.protocols	_FormattingParser	complete		flush the current buffer and return the final parsed result
words.protocols	_FormattingParser	emit		add the currently parsed input to the result
words.protocols	_FormattingParser	state_TEXT	ch	handle the "text" state
words.protocols	_FormattingParser	state_COLOR_FOREGROUND	ch	handle the foreground color state
words.protocols	_FormattingParser	state_COLOR_BACKGROUND	ch	handle the background color state
words.protocols		parseFormattedText	text	parse text containing irc formatting codes into structured information
words.protocols		assembleFormattedText	formatted	assemble formatted text from structured information
words.protocols		stripFormatting	text	remove all formatting codes from c{text}, leaving only the text
words.protocols		ctcpExtract	message	extract ctcp data from a string
words.protocols		ctcpStringify	messages	@type messages a list of extended messages an extended
words.protocols.jabber		hashPassword	sid password	create a sha1-digest string of a session identifier and password
words.protocols.jabber	Authenticator	connectionMade		called by the xmlstream when the underlying socket connection is in place
words.protocols.jabber	Authenticator	streamStarted	rootElement	called by the xmlstream when the stream has started
words.protocols.jabber	Authenticator	associateWithStream	xmlstream	called by the xmlstreamfactory when a connection has been made to the requested peer and an xmlstream object has been
words.protocols.jabber	ConnectAuthenticator	initializeStream		perform stream initialization procedures
words.protocols.jabber	ConnectAuthenticator	streamStarted	rootElement	called by the xmlstream when the stream has started
words.protocols.jabber	ListenAuthenticator	associateWithStream	xmlstream	called by the xmlstreamfactory when a connection has been made
words.protocols.jabber	ListenAuthenticator	streamStarted	rootElement	called by the xmlstream when the stream has started
words.protocols.jabber	BaseFeatureInitiatingInitializer	initialize		initiate the initialization
words.protocols.jabber	BaseFeatureInitiatingInitializer	start		start the actual initialization
words.protocols.jabber	TLSInitiatingInitializer	onProceed	obj	proceed with tls negotiation and reset the xml stream
words.protocols.jabber	TLSInitiatingInitializer	start		start tls negotiation
words.protocols.jabber	XmlStream	reset		reset xml stream
words.protocols.jabber	XmlStream	onStreamError	errelem	called when a stream error element has been received
words.protocols.jabber	XmlStream	sendHeader		send stream header
words.protocols.jabber	XmlStream	sendFooter		send stream footer
words.protocols.jabber	XmlStream	sendStreamError	streamError	send stream level error
words.protocols.jabber	XmlStream	send	obj	send data over the stream
words.protocols.jabber	XmlStream	connectionMade		called when a connection is made
words.protocols.jabber	XmlStream	onDocumentStart	rootElement	called when the stream header has been received
words.protocols.jabber	XmlStreamServerFactory	buildProtocol	addr	create an instance of xmlstream
words.protocols.jabber		upgradeWithIQResponseTracker	xs	enhances an xmlstream for iq response tracking
words.protocols.jabber	IQ	__init__	xmlstream stanzaType	@type xmlstream l{xmlstream xmlstream}
words.protocols.jabber	IQ	send	to	send out this iq
words.protocols.jabber		toResponse	stanza stanzaType	create a response stanza from another stanza
words.protocols.jabber	XMPPHandler	connectionMade		called after a connection has been established
words.protocols.jabber	XMPPHandler	connectionInitialized		the xml stream has been initialized
words.protocols.jabber	XMPPHandler	connectionLost	reason	the xml stream has been closed
words.protocols.jabber	XMPPHandler	send	obj	send data over the managed xml stream
words.protocols.jabber	XMPPHandlerCollection	__iter__		act as a container for handlers
words.protocols.jabber	XMPPHandlerCollection	addHandler	handler	add protocol handler
words.protocols.jabber	XMPPHandlerCollection	removeHandler	handler	remove protocol handler
words.protocols.jabber	StreamManager	addHandler	handler	add protocol handler
words.protocols.jabber	StreamManager	_connected	xs	called when the transport connection has been established
words.protocols.jabber	StreamManager	_authd	xs	called when the stream has been initialized
words.protocols.jabber	StreamManager	initializationFailed	reason	called when stream initialization has failed
words.protocols.jabber	StreamManager	_disconnected	reason	called when the stream has been closed
words.protocols.jabber	StreamManager	send	obj	send data over the xml stream
words.protocols.jabber		parse	jidstring	parse given jid string into its respective parts and apply stringprep
words.protocols.jabber		prep	user host resource	perform stringprep on all jid fragments
words.protocols.jabber		internJID	jidstring	return interned jid
words.protocols.jabber	JID	userhost		extract the bare jid as a unicode string
words.protocols.jabber	JID	userhostJID		extract the bare jid
words.protocols.jabber	JID	full		return the string representation of this jid
words.protocols.jabber	JID	__unicode__		get unicode representation
words.protocols.jabber	JID	__repr__		get object representation
words.protocols.jabber		_parseTCPSSL	factory domain port	for the moment parse tcp or ssl connections the same
words.protocols.jabber		get_mechanisms	xs	parse the sasl feature to extract the available mechanism names
words.protocols.jabber		fromBase64	s	decode base64 encoded string
words.protocols.jabber	SASLInitiatingInitializer	setMechanism		select and setup authentication mechanism
words.protocols.jabber	SASLInitiatingInitializer	start		start sasl authentication exchange
words.protocols.jabber	SASLInitiatingInitializer	sendAuth	data	initiate authentication protocol exchange
words.protocols.jabber	SASLInitiatingInitializer	sendResponse	data	send response to a challenge
words.protocols.jabber	SASLInitiatingInitializer	onChallenge	element	parse challenge and send response from the mechanism
words.protocols.jabber	SASLInitiatingInitializer	onSuccess	success	clean up observers reset the xml stream and send a new header
words.protocols.jabber	SASLInitiatingInitializer	onFailure	failure	clean up observers parse the failure and errback the deferred
words.protocols.jabber		componentFactory	componentid password	xml stream factory for external server-side components
words.protocols.jabber	ConnectComponentAuthenticator	__init__	componentjid password	@type componentjid c{str} @param componentjid jabber id that this component wishes to bind to
words.protocols.jabber	ListenComponentAuthenticator	associateWithStream	xs	associate the authenticator with a stream
words.protocols.jabber	ListenComponentAuthenticator	streamStarted	rootElement	called by the stream when it has started
words.protocols.jabber	ListenComponentAuthenticator	onElement	element	called on incoming xml stanzas
words.protocols.jabber	ListenComponentAuthenticator	onHandshake	handshake	called upon receiving the handshake request
words.protocols.jabber	Service	send	obj	send data over service parent's xml stream
words.protocols.jabber	ServiceManager	send	obj	send data over the xml stream
words.protocols.jabber		buildServiceManager	jid password strport	constructs a pre-built l{servicemanager}, using the specified strport string
words.protocols.jabber	Router	addRoute	destination xs	add a new route
words.protocols.jabber	Router	removeRoute	destination xs	remove a route
words.protocols.jabber	Router	route	stanza	route a stanza
words.protocols.jabber	XMPPComponentServerFactory	onConnectionMade	xs	called when a component connection was made
words.protocols.jabber	XMPPComponentServerFactory	onAuthenticated	xs	called when a component has successfully authenticated
words.protocols.jabber	IQ	__init__	xmlstream type	@type xmlstream l{xmlstream xmlstream}
words.protocols.jabber	IQ	addCallback	fn	register a callback for notification when the iq result is available
words.protocols.jabber	IQ	send	to	call this method to send this iq request via the associated xmlstream
words.protocols.jabber		XMPPClientFactory	jid password	client factory for xmpp 1 0 only
words.protocols.jabber	XMPPAuthenticator	associateWithStream	xs	register with the xml stream
words.protocols.jabber	BaseError	getElement		get xml representation from self
words.protocols.jabber	StreamError	getElement		get xml representation from self
words.protocols.jabber	StanzaError	getElement		get xml representation from self
words.protocols.jabber	StanzaError	toResponse	stanza	construct error response stanza
words.protocols.jabber		_parseError	error errorNamespace	parses an error element
words.protocols.jabber		exceptionFromStreamError	element	build an exception object from a stream error
words.protocols.jabber		exceptionFromStanza	stanza	build an exception object from an error stanza
words.protocols.jabber	ILookupTable	lookup	c	return whether character is in this table
words.protocols.jabber	IMappingTable	map	c	return mapping for character
words.protocols.jabber	IInitiatingInitializer	initialize		initiate the initialization step
words.protocols.jabber	IXMPPHandler	setHandlerParent	parent	set the parent of the handler
words.protocols.jabber	IXMPPHandler	disownHandlerParent	parent	remove the parent of the handler
words.protocols.jabber	IXMPPHandler	makeConnection	xs	a connection over the underlying transport of the xml stream has been established
words.protocols.jabber	IXMPPHandler	connectionMade		called after a connection has been established
words.protocols.jabber	IXMPPHandler	connectionInitialized		the xml stream has been initialized
words.protocols.jabber	IXMPPHandler	connectionLost	reason	the xml stream has been closed
words.protocols.jabber	IXMPPHandlerCollection	__iter__		get an iterator over all child handlers
words.protocols.jabber	IXMPPHandlerCollection	addHandler	handler	add a child handler
words.protocols.jabber	IXMPPHandlerCollection	removeHandler	handler	remove a child handler
words.protocols.jabber	IService	componentConnected	xs	parent component has established a connection
words.protocols.jabber	IService	componentDisconnected		parent component has lost the connection to the jabber server
words.protocols.jabber	IService	transportConnected	xs	parent component has established a connection over the underlying transport
words.protocols.jabber	ISASLMechanism	getInitialResponse		get the initial client response if defined for this mechanism
words.protocols.jabber	ISASLMechanism	getResponse	challenge	get the response to a server challenge
words.protocols.jabber	Plain	__init__	authzid authcid password	@param authzid the authorization identity
words.protocols.jabber	DigestMD5	__init__	serv_type host serv_name username	@param serv_type an indication of what kind of server authentication is being attempted against
words.protocols.jabber	DigestMD5	_parse	challenge	parses the server challenge
words.protocols.jabber	DigestMD5	_unparse	directives	create message string from directives
words.protocols.jabber	DigestMD5	_calculateResponse	cnonce nc nonce username	calculates response with given encoded parameters
pair		_H	n	pack an integer into a network-order two-byte string
pair		_ethernet	src dst protocol payload	construct an ethernet frame
pair		_ip	src dst payload	construct an ip datagram with the given source destination and application payload
pair		_udp	src dst payload	construct a udp datagram with the given source destination and application payload
pair	Tunnel	__init__	system openFlags fileMode	@param system an l{_iinputoutputsystem} provider to use to perform i/o
pair	Tunnel	blocking		if the file descriptor for this tunnel is open in blocking mode c{true}
pair	Tunnel	closeOnExec		if the file descriptor for this tunnel is marked as close-on-exec c{true}
pair	Tunnel	addToReadBuffer	datagram	deliver a datagram to this tunnel's read buffer this makes it
pair	Tunnel	read	limit	read a datagram out of this tunnel
pair	Tunnel	write	datagram	write a datagram into this tunnel
pair		_privileged	original	wrap a l{memoryiosystem} method with permission-checking logic the
pair	MemoryIOSystem	getTunnel	port	get the l{tunnel} object associated with the given l{tuntapport}
pair	MemoryIOSystem	registerSpecialDevice	name cls	specify a class which will be used to handle i/o to a device of a particular name
pair	MemoryIOSystem	open	name flags mode	a replacement for c{os open} this initializes state in this
pair	MemoryIOSystem	read	fd limit	try to read some bytes out of one of the in-memory buffers which may previously have been populated by c{write}
pair	MemoryIOSystem	write	fd data	try to add some bytes to one of the in-memory buffers to be accessed by a later c{read} call
pair	MemoryIOSystem	close	fd	discard the in-memory buffer and other in-memory state for the given file descriptor
pair	MemoryIOSystem	ioctl	fd request args	perform some configuration change to the in-memory state for the given file descriptor
pair	MemoryIOSystem	sendUDP	datagram address	write an ethernet frame containing an ip datagram containing a udp datagram containing the given payload addressed to the given address
pair	MemoryIOSystem	receiveUDP	fileno host port	get a socket-like object which can be used to receive a datagram sent from the given address
pair	_FakePort	recv	nbytes	receive a datagram sent to this port using the l{memoryiosystem} which created this object
pair	TunnelAddress	_typeValue		return the integer value of the c{type} attribute used to produce
pair	TunnelAddress	__init__	type name	@param type either l{tunnelflags iff_tun} or l{tunnelflags iff_tap},
pair	TunnelAddress	__getitem__	index	deprecated accessor for the tunnel name use attributes instead
pair	_IInputOutputSystem	open	filename flag mode	@see l{os open}
pair	_IInputOutputSystem	ioctl	fd opt arg mutate_flag	@see l{fcntl ioctl}
pair	_IInputOutputSystem	read	fd limit	@see l{os read}
pair	_IInputOutputSystem	write	fd data	@see l{os write}
pair	_IInputOutputSystem	close	fd	@see l{os close}
pair	_IInputOutputSystem	sendUDP	datagram address	send a datagram to a certain address
pair	_IInputOutputSystem	receiveUDP	fileno host port	return a socket which can be used to receive datagrams sent to the given address
pair	TuntapPort	startListening		create and bind my socket and begin listening on it
pair	TuntapPort	_openTunnel	name mode	open the named tunnel using the given mode
pair	TuntapPort	_bindSocket		open the tunnel
pair	TuntapPort	doRead		called when my socket is ready for reading
pair	TuntapPort	write	datagram	write the given data as a single datagram
pair	TuntapPort	writeSequence	seq	write a datagram constructed from a l{list} of l{bytes}
pair	TuntapPort	stopListening		stop accepting connections on this port
pair	TuntapPort	loseConnection		close this tunnel use l{tuntapport stoplistening} instead
pair	TuntapPort	connectionLost	reason	cleans up my socket
pair	TuntapPort	logPrefix		returns the name of my class to prefix log entries with
pair	TuntapPort	getHost		get the local address of this l{tuntapport}
pair	IRawDatagramProtocol	addProto		add a protocol on top of this one
pair	IRawDatagramProtocol	datagramReceived		an ip datagram has been received parse and process it
pair	IRawPacketProtocol	addProto		add a protocol on top of this one
pair	IRawPacketProtocol	datagramReceived		an ip datagram has been received parse and process it
pair	IEthernetProtocol	addProto		add an irawpacketprotocol protocol
pair	IEthernetProtocol	datagramReceived		an ethernet frame has been received
protocols	NetstringReceiver	makeConnection	transport	initializes the protocol
protocols	NetstringReceiver	sendString	string	sends a netstring
protocols	NetstringReceiver	dataReceived	data	receives some characters of a netstring
protocols	NetstringReceiver	stringReceived	string	override this for notification when each complete string is received
protocols	NetstringReceiver	_maxLengthSize		calculate and return the string size of c{self max_length}
protocols	NetstringReceiver	_consumeData		consumes the content of c{self _remainingdata}
protocols	NetstringReceiver	_consumeLength		consumes the length portion of c{self _remainingdata}
protocols	NetstringReceiver	_checkPartialLengthSpecification		makes sure that the received data represents a valid number
protocols	NetstringReceiver	_processLength	lengthMatch	processes the length definition of a netstring
protocols	NetstringReceiver	_extractLength	lengthAsString	attempts to extract the length information of a netstring
protocols	NetstringReceiver	_checkStringSize	lengthAsString	checks the sanity of lengthasstring
protocols	NetstringReceiver	_prepareForPayloadConsumption		sets up variables necessary for consuming the payload of a netstring
protocols	NetstringReceiver	_consumePayload		consumes the payload portion of c{self _remainingdata}
protocols	NetstringReceiver	_extractPayload		extracts payload information from c{self _remainingdata}
protocols	NetstringReceiver	_payloadComplete		checks if enough data have been received to complete the netstring
protocols	NetstringReceiver	_processPayload		processes the actual payload with l{stringreceived}
protocols	NetstringReceiver	_checkForTrailingComma		checks if the netstring has a trailing comma at the expected position
protocols	NetstringReceiver	_handleParseError		terminates the connection and sets the flag c{self brokenpeer}
protocols	LineOnlyReceiver	dataReceived	data	translates bytes into lines and calls linereceived
protocols	LineOnlyReceiver	lineReceived	line	override this for when each line is received
protocols	LineOnlyReceiver	sendLine	line	sends a line to the other end of the connection
protocols	LineOnlyReceiver	lineLengthExceeded	line	called when the maximum line length has been reached
protocols	LineReceiver	clearLineBuffer		clear buffered data
protocols	LineReceiver	setLineMode	extra	sets the line-mode of this receiver
protocols	LineReceiver	setRawMode		sets the raw mode of this receiver
protocols	LineReceiver	rawDataReceived	data	override this for when raw data is received
protocols	LineReceiver	lineReceived	line	override this for when each line is received
protocols	LineReceiver	sendLine	line	sends a line to the other end of the connection
protocols	LineReceiver	lineLengthExceeded	line	called when the maximum line length has been reached
protocols	IntNStringReceiver	stringReceived	string	override this for notification when each complete string is received
protocols	IntNStringReceiver	lengthLimitExceeded	length	callback invoked when a length prefix greater than c{max_length} is received
protocols	IntNStringReceiver	dataReceived	data	convert int prefixed strings into calls to stringreceived
protocols	IntNStringReceiver	sendString	string	send a prefixed string to the other end of the connection
protocols	StatefulStringProtocol	stringReceived	string	choose a protocol phase function and call it
protocols	FileSender	beginFileTransfer	file consumer transform	begin transferring a file @type file any file-like object
protocols		_wrappedLogPrefix	wrapper wrapped	compute a log prefix for a wrapper and the object it wraps
protocols	ProtocolWrapper	logPrefix		use a customized log prefix mentioning both the wrapped protocol and the current one
protocols	ProtocolWrapper	makeConnection	transport	when a connection is made register this wrapper with its factory save the real transport and connect the wrapped protocol to this
protocols	WrappingFactory	logPrefix		generate a log prefix mentioning both the wrapped factory and this one
protocols	WrappingFactory	registerProtocol	p	called by protocol to register itself
protocols	WrappingFactory	unregisterProtocol	p	called by protocols when they go away
protocols	ThrottlingFactory	callLater	period func	wrapper around l{reactor
protocols	ThrottlingFactory	registerWritten	length	called by protocol to tell us more bytes were written
protocols	ThrottlingFactory	registerRead	length	called by protocol to tell us more bytes were read
protocols	ThrottlingFactory	checkReadBandwidth		checks if we've passed bandwidth limits
protocols	ThrottlingFactory	throttleReads		throttle reads on all protocols
protocols	ThrottlingFactory	unthrottleReads		stop throttling reads on all protocols
protocols	ThrottlingFactory	throttleWrites		throttle writes on all protocols
protocols	ThrottlingFactory	unthrottleWrites		stop throttling writes on all protocols
protocols	TimeoutProtocol	setTimeout	timeoutPeriod	set a timeout
protocols	TimeoutProtocol	cancelTimeout		cancel the timeout
protocols	TimeoutProtocol	resetTimeout		reset the timeout usually because some activity just happened
protocols	TimeoutProtocol	timeoutFunc		this method is called when the timeout is triggered
protocols	TimeoutFactory	callLater	period func	wrapper around l{reactor
protocols	TrafficLoggingProtocol	__init__	factory wrappedProtocol logfile lengthLimit	@param factory factory which created this protocol
protocols	TrafficLoggingFactory	resetCounter		reset the value of the counter used to identify connections
protocols	TimeoutMixin	callLater	period func	wrapper around l{reactor
protocols	TimeoutMixin	resetTimeout		reset the timeout count down
protocols	TimeoutMixin	setTimeout	period	change the timeout period @type period c{int} or l{none}
protocols	TimeoutMixin	timeoutConnection		called when the connection times out
protocols		toSegments	cwd path	normalize a path as represented by a list of strings each representing one segment of the path
protocols		errnoToFailure	e path	map c{oserror} and c{ioerror} to standard ftp errors
protocols		_isGlobbingExpression	segments	helper for checking if a ftpshell segments contains a wildcard unix expression
protocols	FTPCmdError	response		generate a ftp response message for this error
protocols	DTP	sendLine	line	send a line to data channel
protocols	DTP	_formatOneListResponse	name size directory permissions	helper method to format one entry's info into a text entry like 'drwxrwxrwx 0 user group 0 jan 01 1970 filename
protocols	FTP	sendLine	line	private encodes and sends a line
protocols	FTP	getDTPPort	factory	return a port for passive access using c{self passiveportrange}
protocols	FTP	ftp_USER	username	first part of login get the username the peer wants to
protocols	FTP	ftp_PASS	password	second part of login get the password the peer wants to
protocols	FTP	ftp_PASV		request for a passive connection from the rfc :
protocols	FTP	_encodeName	name	encode c{name} to be sent over the wire
protocols	FTP	ftp_LIST	path	this command causes a list to be sent from the server to the passive dtp
protocols	FTP	ftp_NLST	path	this command causes a directory listing to be sent from the server to the client
protocols	FTP	ftp_RETR	path	this command causes the content of a file to be sent over the data transfer channel
protocols	FTP	ftp_STOR	path	store stor this command causes the server-dtp to accept the data
protocols	FTP	ftp_SIZE	path	file size the ftp command size of file size is used to obtain the transfer
protocols	FTP	ftp_MDTM	path	file modification time mdtm the ftp command modification time mdtm can be used to determine
protocols	FTP	ftp_TYPE	type	representation type type the argument specifies the representation type as described
protocols	FTP	ftp_FEAT		advertise the features supported by the server
protocols	FTP	ftp_OPTS	option	handle opts command
protocols	FTP	cleanupDTP		call when dtp connection exits
protocols	IFTPShell	makeDirectory	path	create a directory
protocols	IFTPShell	removeDirectory	path	remove a directory
protocols	IFTPShell	removeFile	path	remove a file
protocols	IFTPShell	rename	fromPath toPath	rename a file or directory
protocols	IFTPShell	access	path	determine whether access to the given path is allowed
protocols	IFTPShell	stat	path keys	retrieve information about the given path
protocols	IFTPShell	list	path keys	retrieve information about the given path
protocols	IFTPShell	openForReading	path	@param path the path as a list of segments to open
protocols	IFTPShell	openForWriting	path	@param path the path as a list of segments to open
protocols	IReadFile	send	consumer	produce the contents of the given path to the given consumer this
protocols	IWriteFile	receive		create a consumer which will write to this file this method may
protocols	IWriteFile	close		perform any post-write work that needs to be done this method may
protocols		_getgroups	uid	return the primary and supplementary groups for the given uid
protocols		_testPermissions	uid gid spath mode	checks to see if uid has proper permissions to access path with mode
protocols	FTPAnonymousShell	openForReading	path	open c{path} for reading
protocols	FTPAnonymousShell	openForWriting	path	reject write attempts by anonymous users with l{permissiondeniederror}
protocols	FTPAnonymousShell	list	path keys	return the list of files at given c{path}, adding c{keys} stat informations if specified
protocols	FTPAnonymousShell	_statNode	filePath keys	shortcut method to get stat info on a node
protocols	FTPAnonymousShell	_stat_size	fp	get the filepath's size as an int @param fp l{twisted
protocols	FTPAnonymousShell	_stat_permissions	fp	get the filepath's permissions object @param fp l{twisted
protocols	FTPAnonymousShell	_stat_hardlinks	fp	get the number of hardlinks for the filepath - if the number of hardlinks is not yet implemented say in windows just return 0 since
protocols	FTPAnonymousShell	_stat_modified	fp	get the filepath's last modified date @param fp l{twisted
protocols	FTPAnonymousShell	_stat_owner	fp	get the filepath's owner's username if this is not implemented
protocols	FTPAnonymousShell	_stat_group	fp	get the filepath's owner's group if this is not implemented
protocols	FTPAnonymousShell	_stat_directory	fp	get whether the filepath is a directory @param fp l{twisted
protocols	FTPShell	openForWriting	path	open c{path} for writing
protocols	BaseFTPRealm	getHomeDirectory	avatarId	return a l{filepath} representing the home directory of the given avatar
protocols	FTPRealm	getHomeDirectory	avatarId	use c{avatarid} as a single path segment to construct a child of c{self
protocols	SystemFTPRealm	getHomeDirectory	avatarId	return the system-defined home directory of the system user account with the name c{avatarid}
protocols	IFinishableConsumer	finish		the producer has finished producing
protocols	SenderProtocol	registerProducer	producer streaming	register the given producer with our transport
protocols	SenderProtocol	unregisterProducer		unregister the previously registered producer
protocols		decodeHostPort	line	decode an ftp response specifying a host and port
protocols	FTPClientBasic	fail	error	give an error to any queued deferreds
protocols	FTPClientBasic	_fail	error	errback all queued deferreds
protocols	FTPClientBasic	sendLine	line	sends a line unless line is none
protocols	FTPClientBasic	sendNextCommand		private processes the next command in the queue
protocols	FTPClientBasic	queueCommand	ftpCommand	add an ftpcommand object to the queue
protocols	FTPClientBasic	queueStringCommand	command public	queues a string to be issued as an ftp command @param command string of an ftp command to queue
protocols	FTPClientBasic	popCommandQueue		return the front element of the command queue or none if empty
protocols	FTPClientBasic	queueLogin	username password	login send the username send the password
protocols	FTPClientBasic	lineReceived	line	private parses the response messages from the ftp server
protocols	FTPClient	fail	error	disconnect and also give an error to any queued deferreds
protocols	FTPClient	receiveFromConnection	commands protocol	retrieves a file or listing generated by the given command feeding it to the given protocol
protocols	FTPClient	queueLogin	username password	login send the username send the password and
protocols	FTPClient	sendToConnection	commands	xxx @return a tuple of two l{deferred}s
protocols	FTPClient	_openDataConnection	commands protocol	this method returns a deferredlist
protocols	FTPClient	generatePortCommand	portCmd	private generates the text of a given port command
protocols	FTPClient	escapePath	path	returns a ftp escaped path replace newlines with nulls
protocols	FTPClient	retrieveFile	path protocol offset	retrieve a file from the given path this method issues the 'retr' ftp command
protocols	FTPClient	storeFile	path offset	store a file at the given path
protocols	FTPClient	rename	pathFrom pathTo	rename a file
protocols	FTPClient	list	path protocol	retrieve a file listing into the given protocol instance
protocols	FTPClient	nlst	path protocol	retrieve a short file listing into the given protocol instance
protocols	FTPClient	cwd	path	issues the cwd change working directory command
protocols	FTPClient	makeDirectory	path	make a directory this method issues the mkd command
protocols	FTPClient	removeFile	path	delete a file on the server
protocols	FTPClient	removeDirectory	path	delete a directory on the server
protocols	FTPClient	cdup		issues the cdup change directory up command
protocols	FTPClient	pwd		issues the pwd print working directory command
protocols	FTPClient	getDirectory		returns the current remote directory
protocols	FTPClient	quit		issues the i{quit} command
protocols	FTPFileListProtocol	parseDirectoryLine	line	return a dictionary of fields or none if line cannot be parsed
protocols	FTPFileListProtocol	addFile	info	append file information dictionary to the list of known files
protocols	FTPFileListProtocol	unknownLine	line	deal with received lines which could not be parsed as file information
protocols		parsePWDResponse	response	returns the path from a response to a pwd command
protocols	PostfixTCPMapServer	sendCode	code message	send an smtp-like code with a message
protocols	Command	__init__	command	create a command
protocols	Command	success	value	shortcut method to fire the underlying deferred
protocols	Command	fail	error	make the underlying deferred fails
protocols	MemCacheProtocol	__init__	timeOut	create the protocol
protocols	MemCacheProtocol	_cancelCommands	reason	cancel all the outstanding commands making them fail with c{reason}
protocols	MemCacheProtocol	timeoutConnection		close the connection in case of timeout
protocols	MemCacheProtocol	connectionLost	reason	cause any outstanding commands to fail
protocols	MemCacheProtocol	sendLine	line	override sendline to add a timeout to response
protocols	MemCacheProtocol	rawDataReceived	data	collect data for a get
protocols	MemCacheProtocol	cmd_STORED		manage a success response to a set operation
protocols	MemCacheProtocol	cmd_NOT_STORED		manage a specific 'not stored' response to a set operation this is not an error but some condition wasn't met
protocols	MemCacheProtocol	cmd_END		this the end token to a get or a stat operation
protocols	MemCacheProtocol	cmd_NOT_FOUND		manage error response for incr/decr/delete
protocols	MemCacheProtocol	cmd_VALUE	line	prepare the reading a value after a get
protocols	MemCacheProtocol	cmd_STAT	line	reception of one stat line
protocols	MemCacheProtocol	cmd_VERSION	versionData	read version token
protocols	MemCacheProtocol	cmd_ERROR		a non-existent command has been sent
protocols	MemCacheProtocol	cmd_CLIENT_ERROR	errText	an invalid input as been sent
protocols	MemCacheProtocol	cmd_SERVER_ERROR	errText	an error has happened server-side
protocols	MemCacheProtocol	cmd_DELETED		a delete command has completed successfully
protocols	MemCacheProtocol	cmd_OK		the last command has been completed
protocols	MemCacheProtocol	cmd_EXISTS		a c{checkandset} update has failed
protocols	MemCacheProtocol	lineReceived	line	receive line commands from the server
protocols	MemCacheProtocol	increment	key val	increment the value of c{key} by given value default to 1
protocols	MemCacheProtocol	decrement	key val	decrement the value of c{key} by given value default to 1
protocols	MemCacheProtocol	_incrdecr	cmd key val	internal wrapper for incr/decr
protocols	MemCacheProtocol	replace	key val flags expireTime	replace the given c{key} it must already exist in the server
protocols	MemCacheProtocol	add	key val flags expireTime	add the given c{key} it must not exist in the server
protocols	MemCacheProtocol	set	key val flags expireTime	set the given c{key}
protocols	MemCacheProtocol	checkAndSet	key val cas flags	change the content of c{key} only if the c{cas} value matches the current one associated with the key
protocols	MemCacheProtocol	_set	cmd key val flags	internal wrapper for setting values
protocols	MemCacheProtocol	append	key val	append given data to the value of an existing key
protocols	MemCacheProtocol	prepend	key val	prepend given data to the value of an existing key
protocols	MemCacheProtocol	get	key withIdentifier	get the given c{key} it doesn't support multiple keys if
protocols	MemCacheProtocol	getMultiple	keys withIdentifier	get the given list of c{keys} if c{withidentifier} is set to c{true},
protocols	MemCacheProtocol	_get	keys withIdentifier multiple	helper method for c{get} and c{getmultiple}
protocols	MemCacheProtocol	stats	arg	get some stats from the server it will be available as a dict
protocols	MemCacheProtocol	version		get the version of the server
protocols	MemCacheProtocol	delete	key	delete an existing c{key}
protocols	MemCacheProtocol	flushAll		flush all cached values
protocols	_ProducerMembrane	pauseProducing		c{pauseproducing} the underlying producer if it's not paused
protocols	_ProducerMembrane	resumeProducing		c{resumeproducing} the underlying producer if it's paused
protocols	_ProducerMembrane	stopProducing		c{stopproducing} the underlying producer
protocols	TLSMemoryBIOProtocol	getHandle		return the l{openssl ssl connection} object being used to encrypt and
protocols	TLSMemoryBIOProtocol	makeConnection	transport	connect this wrapper to the given transport and initialize the necessary l{openssl
protocols	TLSMemoryBIOProtocol	_checkHandshakeStatus		ask openssl to proceed with a handshake in progress
protocols	TLSMemoryBIOProtocol	_flushSendBIO		read any bytes out of the send bio and write them to the underlying transport
protocols	TLSMemoryBIOProtocol	_flushReceiveBIO		try to receive any application-level bytes which are now available because of a previous write into the receive bio
protocols	TLSMemoryBIOProtocol	dataReceived	bytes	deliver any received bytes to the receive bio and then read and deliver to the application any application-level data which becomes available
protocols	TLSMemoryBIOProtocol	_shutdownTLS		initiate or reply to the shutdown handshake of the tls layer
protocols	TLSMemoryBIOProtocol	_tlsShutdownFinished	reason	called when tls connection has gone away tell underlying transport to disconnect
protocols	TLSMemoryBIOProtocol	connectionLost	reason	handle the possible repetition of calls to this method (due to either the underlying transport going away or due to an error at the tls
protocols	TLSMemoryBIOProtocol	loseConnection		send a tls close alert and close the underlying connection
protocols	TLSMemoryBIOProtocol	abortConnection		tear down tls state so that if the connection is aborted mid-handshake we don't deliver any further data from the application
protocols	TLSMemoryBIOProtocol	failVerification	reason	abort the connection during connection setup giving a reason that certificate verification failed
protocols	TLSMemoryBIOProtocol	write	bytes	process the given application bytes and send any resulting tls traffic which arrives in the send bio
protocols	TLSMemoryBIOProtocol	_bufferedWrite	octets	put the given octets into l{tlsmemorybioprotocol _appsendbuffer}, and
protocols	TLSMemoryBIOProtocol	_unbufferPendingWrites		un-buffer all waiting writes in l{tlsmemorybioprotocol _appsendbuffer}
protocols	TLSMemoryBIOProtocol	_write	bytes	process the given application bytes and send any resulting tls traffic which arrives in the send bio
protocols	TLSMemoryBIOProtocol	writeSequence	iovec	write a sequence of application bytes by joining them into one string and passing them to l{write}
protocols	TLSMemoryBIOProtocol	negotiatedProtocol		@see l{inegotiated negotiatedprotocol}
protocols	_ContextFactoryToConnectionFactory	__init__	oldStyleContextFactory	construct a l{_contextfactorytoconnectionfactory} with a l{twisted
protocols	_ContextFactoryToConnectionFactory	_connectionForTLS	protocol	create an l{openssl ssl connection} object
protocols	_ContextFactoryToConnectionFactory	serverConnectionForTLS	protocol	construct an openssl server connection from the wrapped old-style context factory
protocols	_ContextFactoryToConnectionFactory	clientConnectionForTLS	protocol	construct an openssl server connection from the wrapped old-style context factory
protocols	TLSMemoryBIOFactory	__init__	contextFactory isClient wrappedFactory	create a l{tlsmemorybiofactory}
protocols	TLSMemoryBIOFactory	logPrefix		annotate the wrapped factory's log prefix with some text indicating tls is in use
protocols	TLSMemoryBIOFactory	_applyProtocolNegotiation	connection	applies alpn/npn protocol neogitation to the connection if the factory supports it
protocols	TLSMemoryBIOFactory	_createConnection	tlsProtocol	create an openssl connection and set it up good
protocols		dashCapitalize	s	capitalize a string making sure to treat '-' as a word separator
protocols	Via	__init__	host port transport ttl	set parameters of this via header all arguments correspond to
protocols	Via	_getrport		returns the rport value expected by the old sip code
protocols	Via	_setrport	newRPort	l{base _fixupnat} sets c{rport} directly so this method sets
protocols	Via	toString		serialize this header for use in a request or response
protocols		parseViaHeader	value	parse a via header
protocols		parseURL	url host port	return string into url object
protocols		cleanRequestURL	url	clean a url from a request line
protocols		parseAddress	address host port clean	return name uri params for from/to/contact header
protocols	MessagesParser	dataDone		clear out any buffered data that may be hanging around
protocols	MessagesParser	handleFirstLine	line	expected to create self message
protocols	Base	responseFromRequest	code request	create a response to a request message
protocols	Base	sendMessage	destURL message	send a message
protocols	Base	handle_request	message addr	override to define behavior for requests received
protocols	Base	handle_response	message addr	override to define behavior for responses received
protocols	IRegistry	registerAddress	domainURL logicalURL physicalURL	register the physical address of a logical url
protocols	IRegistry	unregisterAddress	domainURL logicalURL physicalURL	unregister the physical address of a logical url
protocols	IRegistry	getRegistrationInfo	logicalURL	get registration info for logical url
protocols	ILocator	getAddress	logicalURL	return physical url of server for logical url of user
protocols	Proxy	__init__	host port	create new instance
protocols	Proxy	getVia		return value of via header for this proxy
protocols	Proxy	handle_request_default	message sourcePeer	default request handler
protocols	Proxy	responseFromRequest	code request	create a response to a request message
protocols	Proxy	handle_response	message addr	default response handler
protocols	Proxy	gotResponse	message addr	called with responses that are addressed at this server
protocols	IAuthorizer	getChallenge	peer	generate a challenge the client may respond to
protocols	IAuthorizer	decode	response	create a credentials object from the given response
protocols	RegisterProxy	handle_REGISTER_request	message host_port	handle a registration request
protocols	RegisterProxy	register	message host port	allow all users to register
protocols	IArgumentType	fromBox	name strings objects proto	given an argument name and an amp box containing serialized values extract one or more python objects and add them to the c{objects}
protocols	IArgumentType	toBox	name strings objects proto	given an argument name and a dictionary containing structured python objects serialize values into one or more strings and add them to
protocols	IBoxSender	sendBox	box	send an l{ampbox}
protocols	IBoxSender	unhandledError	failure	an unhandled error occurred in response to a box log it
protocols	IBoxReceiver	startReceivingBoxes	boxSender	the l{iboxreceiver ampboxreceived} method will start being called
protocols	IBoxReceiver	ampBoxReceived	box	a box was received from the transport dispatch it appropriately
protocols	IBoxReceiver	stopReceivingBoxes	reason	no further boxes will be received on this connection
protocols	IResponderLocator	locateResponder	name	locate a responder method appropriate for the named command
protocols	RemoteAmpError	__init__	errorCode description fatal local	create a remote error with an error code and description
protocols	AmpBox	__init__		initialize a new l{ampbox}
protocols	AmpBox	copy		return another ampbox just like me
protocols	AmpBox	serialize		convert me into a wire-encoded string
protocols	AmpBox	_sendTo	proto	serialize and send this box to an amp instance by the time it is being
protocols	QuitBox	_sendTo	proto	immediately call loseconnection after sending
protocols	_SwitchBox	__init__	innerProto	create a _switchbox with the protocol to switch to after being sent
protocols	_SwitchBox	_sendTo	proto	send me i am the last box on the connection all further traffic will be
protocols	BoxDispatcher	startReceivingBoxes	boxSender	the given boxsender is going to start calling boxreceived on this l{boxdispatcher}
protocols	BoxDispatcher	stopReceivingBoxes	reason	no further boxes will be received here terminate all currently
protocols	BoxDispatcher	failAllOutgoing	reason	call the errback on all outstanding requests awaiting responses
protocols	BoxDispatcher	_nextTag		generate protocol-local serial numbers for _ask keys
protocols	BoxDispatcher	_sendBoxCommand	command box requiresAnswer	send a command across the wire with the given c{amp box}
protocols	BoxDispatcher	callRemoteString	command requiresAnswer	this is a low-level api designed only for optimizing simple messages for which the overhead of parsing is too great
protocols	BoxDispatcher	callRemote	commandType	this is the primary high-level api for sending messages via amp invoke it
protocols	BoxDispatcher	unhandledError	failure	this is a terminal callback called after application code has had a chance to quash any errors
protocols	BoxDispatcher	_answerReceived	box	an amp box was received that answered a command previously sent with l{callremote}
protocols	BoxDispatcher	_errorReceived	box	an amp box was received that answered a command previously sent with l{callremote}, with an error
protocols	BoxDispatcher	_commandReceived	box	@param box an l{ampbox} with a value for its l{command} and l{ask} keys
protocols	BoxDispatcher	ampBoxReceived	box	an ampbox was received representing a command or an answer to a previously issued command either successful or erroneous
protocols	BoxDispatcher	_safeEmit	aBox	emit a box ignoring l{protocolswitched} and l{connectionlost} errors which cannot be usefully handled
protocols	BoxDispatcher	dispatchCommand	box	a box with a _command key was received
protocols	CommandLocator	_wrapWithSerialization	aCallable command	wrap acallable with its command's argument de-serialization and result serialization logic
protocols	CommandLocator	lookupFunction	name	deprecated synonym for l{commandlocator locateresponder}
protocols	CommandLocator	locateResponder	name	locate a callable to invoke when executing the named command
protocols	SimpleStringLocator	locateResponder	name	locate a callable to invoke when executing the named command
protocols		_wireNameToPythonIdentifier	key	private normalize an argument name from the wire for use with python code
protocols	Argument	__init__	optional	create an argument
protocols	Argument	retrieve	d name proto	retrieve the given key from the given dictionary removing it if found
protocols	Argument	fromBox	name strings objects proto	populate an 'out' dictionary with mapping names to python values decoded from an 'in' ampbox mapping strings to string values
protocols	Argument	toBox	name strings objects proto	populate an 'out' ampbox with strings encoded from an 'in' dictionary mapping names to python values
protocols	Argument	fromStringProto	inString proto	convert a string to a python value
protocols	Argument	toStringProto	inObject proto	convert a python object to a string
protocols	Argument	fromString	inString	convert a string to a python object subclasses must implement this
protocols	Argument	toString	inObject	convert a python object into a string for passing over the network
protocols	ListOf	fromString	inString	convert the serialized form of a list of instances of some type back into that list
protocols	ListOf	toString	inObject	serialize the given list of objects to a single string
protocols	AmpList	__init__	subargs optional	create an amplist
protocols	Descriptor	fromStringProto	inString proto	take a unique identifier associated with a file descriptor which must have been received by now and use it to look up that descriptor in a
protocols	Descriptor	toStringProto	inObject proto	send c{inobject}, an integer file descriptor over c{proto}'s connection and return a unique identifier which will allow the receiver to
protocols	Command	__init__		create an instance of this command with specified values for its parameters
protocols	Command	makeResponse	cls objects proto	serialize a mapping of arguments using this l{command}'s response schema
protocols	Command	makeArguments	cls objects proto	serialize a mapping of arguments using this l{command}'s argument schema
protocols	Command	parseResponse	cls box protocol	parse a mapping of serialized arguments using this l{command}'s response schema
protocols	Command	parseArguments	cls box protocol	parse a mapping of serialized arguments using this l{command}'s argument schema
protocols	Command	responder	cls methodfunc	declare a method to be a responder for a particular command
protocols	Command	_doCommand	proto	encode and send this command to the given protocol
protocols	_NoCertificate	__init__	client	create a _nocertificate which either is or isn't for the client side of the connection
protocols	_NoCertificate	options		behaves like l{twisted internet ssl privatecertificate options}()
protocols	_TLSBox	_sendTo	proto	send my encoded value to the protocol then initiate tls
protocols	StartTLS	__init__		create a starttls command this is private use amp callremote
protocols	StartTLS	_doCommand	proto	when a starttls command is sent prepare to start tls but don't actually do it wait for the acknowledgement then initiate the tls handshake
protocols	ProtocolSwitchCommand	__init__	_protoToSwitchToFactory	create a protocolswitchcommand
protocols	ProtocolSwitchCommand	_doCommand	proto	when we emit a protocolswitchcommand lock the protocol but don't actually switch to the new protocol unless an acknowledgement is received
protocols	_DescriptorExchanger	_sendFileDescriptor	descriptor	assign and return the next ordinal to the given descriptor after sending the descriptor over this protocol's transport
protocols	_DescriptorExchanger	fileDescriptorReceived	descriptor	collect received file descriptors to be claimed later by l{descriptor}
protocols	BinaryBoxProtocol	_switchTo	newProto clientFactory	switch this binaryboxprotocol's transport to a new protocol you need
protocols	BinaryBoxProtocol	sendBox	box	send a amp box to my peer
protocols	BinaryBoxProtocol	makeConnection	transport	notify l{boxreceiver} that it is about to receive boxes from this protocol by invoking l{iboxreceiver
protocols	BinaryBoxProtocol	dataReceived	data	either parse incoming data as l{ampbox}es or relay it to our nested protocol
protocols	BinaryBoxProtocol	connectionLost	reason	the connection was lost notify any nested protocol
protocols	BinaryBoxProtocol	proto_init	string	string received in the 'init' state
protocols	BinaryBoxProtocol	proto_key	string	string received in the 'key' state if the key is empty a complete
protocols	BinaryBoxProtocol	proto_value	string	string received in the 'value' state
protocols	BinaryBoxProtocol	lengthLimitExceeded	length	the key length limit was exceeded disconnect the transport and make
protocols	BinaryBoxProtocol	_lockForSwitch		lock this binary protocol so that no further boxes may be sent this
protocols	BinaryBoxProtocol	_unlockFromSwitch		unlock this locked binary protocol so that further boxes may be sent again
protocols	BinaryBoxProtocol	_prepareTLS	certificate verifyAuthorities	used by starttlscommand to put us into the state where we don't actually send things that get sent instead we buffer them
protocols	BinaryBoxProtocol	_startTLS	certificate verifyAuthorities	used by tlsbox to initiate the ssl handshake
protocols	BinaryBoxProtocol	unhandledError	failure	the buck stops here this error was completely unhandled time to
protocols	BinaryBoxProtocol	_defaultStartTLSResponder		the default tls responder doesn't specify any certificate or anything
protocols	AMP	locateResponder	name	unify the implementations of l{commandlocator} and l{simplestringlocator} to perform both kinds of dispatch preferring
protocols	AMP	__repr__		a verbose string representation which gives us information about this amp connection
protocols	AMP	makeConnection	transport	emit a helpful log message when the connection is made
protocols	AMP	connectionLost	reason	emit a helpful log message when the connection is lost
protocols	_ParserHelper	startReceivingBoxes	sender	no initialization is required
protocols	_ParserHelper	parse	cls fileObj	parse some amp data stored in a file
protocols	_ParserHelper	parseString	cls data	parse some amp data stored in a string
protocols		_stringsToObjects	strings arglist proto	convert an ampbox to a dictionary of python objects converting through a given arglist
protocols		_objectsToStrings	objects arglist strings proto	convert a dictionary of python objects to an ampbox converting through a given arglist
protocols	Decimal	toString	inObject	serialize a c{decimal decimal} instance to the specified wire format
protocols	DateTime	fromString	s	parse a string containing a date and time in the wire format into a c{datetime
protocols	DateTime	toString	i	serialize a c{datetime datetime} instance to a string in the specified
protocols		parseParam	line	chew one dqstring or atom from beginning of line and return param remaningline
protocols		makeAtom	line	munch a string into an 'atom'
protocols	DictClient	sendLine	line	throw up if the line is longer than 1022 characters
protocols	DictClient	dictCode_221_ready	line	we are about to get kicked off do nothing
protocols	DictClient	sendDefine	database word	send a dict define command
protocols	DictClient	sendMatch	database strategy word	send a dict match command
protocols	DictClient	dictCode_150_define	line	n definitions retrieved
protocols	DictClient	dictCode_151_define	line	definition text follows
protocols	DictClient	dictCode_152_match	line	n matches found text follows
protocols	DictClient	dictCode_text_define	line	a line of definition text received
protocols	DictClient	dictCode_text_match	line	one line of match text received
protocols	DictClient	protocolError	reason	override to catch unexpected dict protocol conditions
protocols	DictClient	dictConnected		override to be notified when the server is ready to accept commands
protocols	DictClient	defineFailed	reason	override to catch reasonable failure responses to define
protocols	DictClient	defineDone	result	override to catch successful define
protocols	DictClient	matchFailed	reason	override to catch resonable failure responses to match
protocols	DictClient	matchDone	result	override to catch successful match
protocols	DictLookupFactory	clientDone		called by client when done
protocols		define	host port database word	look up a word using a dict server
protocols		match	host port database strategy	match a word using a dict server
protocols	IdentServer	validQuery	portOnServer portOnClient	called when a valid query is received to look up and deliver the response
protocols	IdentServer	lookup	serverAddress clientAddress	lookup user information about the specified address pair
protocols	IdentClient	lookup	portOnServer portOnClient	lookup user information about the specified address pair
protocols	ProducerConsumerProxy	_writeSomeData	data	write as much of this data as possible
protocols	QOTD	getQuote		return a quote may be overrriden in subclasses
protocols	Who	getUsers		return active users override in subclasses
protocols	_LoopbackTransport	abortConnection		abort the connection same as l{loseconnection}
protocols		identityPumpPolicy	queue target	l{identitypumppolicy} is a policy which delivers each chunk of data written to the given queue as-is to the target
protocols		collapsingPumpPolicy	queue target	l{collapsingpumppolicy} is a policy which collapses all outstanding chunks into a single string and delivers it to the target
protocols		loopbackAsync	server client pumpPolicy	establish a connection between c{server} and c{client} then transfer data between them until the connection is closed
protocols		_loopbackAsyncBody	server serverToClient client clientToServer	transfer bytes from the output queue of each protocol to the input of the other
protocols		loopbackTCP	server client port noisy	run session between server and client protocol instances over tcp
protocols		loopbackUNIX	server client noisy	run session between server and client protocol instances over unix socket
protocols	ShoutcastClient	gotMetaData	metadata	called with a list of key value pairs of metadata if metadata is available on the server
protocols	ShoutcastClient	gotMP3Data	data	called with chunk of mp3 data
protocols	Bucket	__init__	parentBucket	create a l{bucket} that may have a parent l{bucket}
protocols	Bucket	add	amount	adds tokens to the l{bucket} and its c{parentbucket}
protocols	Bucket	drip		let some of the bucket drain
protocols	IBucketFilter	getBucketFor		return a l{bucket} corresponding to the provided parameters
protocols	HierarchicalBucketFilter	getBucketFor		find or create a l{bucket} corresponding to the provided parameters
protocols	HierarchicalBucketFilter	getBucketKey		construct a key based on the input parameters to choose a l{bucket}
protocols	HierarchicalBucketFilter	sweep		remove empty buckets
protocols	ShapedProtocolFactory	__init__	protoClass bucketFilter	tell me what to wrap and where to get buckets
protocols	ShapedProtocolFactory	__call__		make a c{protocol} instance with a shaped transport
protocols	SOCKSv4	dataReceived	data	called whenever data is received
protocols	SOCKSv4	_dataReceived2	server user version code	the second half of the socks connection setup for a socksv4 packet this
protocols.haproxy		unparseEndpoint	args kwargs	un-parse the already-parsed args and kwargs back into endpoint syntax
protocols.haproxy	HAProxyServerParser	parseStreamServer	reactor	parse a stream server endpoint from a reactor and string-only arguments and keyword arguments
protocols.haproxy	IProxyParser	feed	data	consume a chunk of data and attempt to parse it
protocols.haproxy	IProxyParser	parse	line	parse a bytestring as a full proxy protocol header line
protocols.haproxy	HAProxyWrappingFactory	logPrefix		annotate the wrapped factory's log prefix with some text indicating the proxy protocol is in use
protocols.haproxy		proxyEndpoint	wrappedEndpoint	wrap an endpoint with proxy protocol support so that the transport's c{gethost} and c{getpeer} methods reflect the attributes of the proxied
protocols.haproxy	V1Parser	feed	data	consume a chunk of data and attempt to parse it
protocols.haproxy	V1Parser	parse	cls line	parse a bytestring as a full proxy protocol header line
protocols.haproxy	V2Parser	feed	data	consume a chunk of data and attempt to parse it
protocols.haproxy	V2Parser	_bytesToIPv4	bytestring	convert packed 32-bit ipv4 address bytes into a dotted-quad ascii bytes representation of that address
protocols.haproxy	V2Parser	_bytesToIPv6	bytestring	convert packed 128-bit ipv6 address bytes into a colon-separated ascii bytes representation of that address
protocols.haproxy	V2Parser	parse	cls line	parse a bytestring as a full proxy protocol header
protocols.haproxy		convertError	sourceType targetType	convert an error into a different error type
