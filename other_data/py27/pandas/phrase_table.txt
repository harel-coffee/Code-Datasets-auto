suffixes to overlapping entries	with suffix left lsuffix right rsuffix	0.250000
return a tree-like object	io html frame parser build	0.014706
the indexer fill with the	indexer	0.009174
a fixed frequency datetime index	indexes period range start end periods freq	0.083333
has a single	core simple blockify tuples	0.125000
take	core indexes multi index assert take	0.500000
the ordered attribute	categorical get ordered	0.333333
of an indexer even when non-unique	core indexes index get indexer for target	0.250000
series containing only true/non-nan values possibly	remove na series	0.166667
of the keys corresponding	keys	0.032258
table schema from data	json build table schema data index primary_key version	0.333333
shift without copying data	slice shift periods	0.083333
series extract groups from the	extract arr	0.066667
evaluate	core computation bin op evaluate	0.333333
rewrite	core computation rewrite assign tok	0.125000
attempt to construct this type from	categorical dtype construct from string	0.166667
thead	thead	1.000000
column description class	col	0.037037
take the codes by the indexer	core categorical take nd indexer allow_fill	0.333333
to their default values as specified	default values fname	0.200000
get all	util get	0.333333
check if we are	check is	0.200000
to its values attribute if	series	0.006757
to iterate	io html frame parser	0.012195
styler with a custom template and jinja environment	formats styler from custom template cls searchpath name	1.000000
of the values to be at least 1	values ndim	0.050000
the boolean criterion specified by func	by filter func dropna	0.250000
alias to closest period	tseries get period alias	1.000000
a set of subplots already made	plotting subplots naxes sharex sharey squeeze	0.166667
element	core map indices py	1.000000
given delimiter string starting at the end	rsplit arr pat	0.037037
two or more factors by default	index columns values rownames	0.333333
given a tuple of slices/lists/labels/boolean indexer	indexes multi index get	0.100000
return a version to operate on	core block try operate	0.333333
compute standard deviation of groups	std ddof	0.166667
call with any defaults	util make signature	1.000000
the block manager from a	sparse to manager sdf columns	0.052632
compute sum of non-na/null observations in sparsearray	sparse sparse array count	0.250000
compute a	values	0.008547
scipy sparse coo_matrix to a	sparse coo to sparse series a dense_index	0.166667
alter default behavior on how float	eng float format accuracy use_eng_prefix	0.333333
by the given delimiter string starting at	rsplit arr pat n	0.037037
cartesian product of	index labels shape sort	0.200000
statement that create a table	table create table	0.166667
to write this as a	write obj	0.041667
use	set value arr	0.023810
and string-like array to convert object	dtypes maybe convert string to object values	0.142857
"pivot" table) based on column values uses	pivot index columns values	0.200000
value at the given quantile	series quantile	0.083333
copy if specified coerce	dtype copy	0.032258
add	indexes index add	1.000000
return a tree-like object	io	0.003012
take optional positional and keyword arguments	optional args	0.066667
suitable for initializing or updating-on-copy an openpyxl v2	io openpyxl20writer	0.035714
gets	core indexes	0.009524
single block and are a	block manager	0.021277
that	core	0.001326
new	copy errors	0.250000
collabels	collabels	1.000000
to_concat which has the	dtype to_concat	0.333333
to midnight length is	core indexes datetime	0.011494
be used to iterate	frame parser	0.012500
the where statement is	where w	0.083333
return a fixed frequency datetime index with business	core indexes bdate range start end periods	0.083333
lookup of value from 1-dimensional ndarray only	core indexes categorical index get value	0.100000
must already exist and be table	io hdfstore append key	0.016667
numpy array of datetime time the	indexes datetime	0.011494
be used to iterate over the	io	0.003012
ndarray argsort argsorts the value omitting na/null values	series argsort axis kind order	0.500000
an intervalindex from a list/array of tuples parameters	core indexes interval index from tuples cls	1.000000
node must already exist and be table	hdfstore	0.014925
columns with an arbitrary number of	io legacy table read where columns	0.111111
multi-level index return new dataframe	data frame	0.005714
if the frequency	freq	0.016129
intersection of two index objects sortedness of	range index intersection other	0.083333
insert item at	block manager insert loc item	0.500000
determine if dtype is valid	n is valid dtype n method dtype	0.142857
manipulation result has one higher dimension as	core ndframe constructor expanddim	0.333333
this indexable with the key/value	io index col	0.055556
into	json parser	0.071429
to ndarray raises on	to ndarray cls	0.166667
indices that would sort	argsort	0.076923
parsers that parse html	html	0.011765
of take	indexes index assert take	0.500000
fast transform path	by transform fast result	0.333333
up styles to	io formats styler	0.021277
with business day as the default frequency	freq	0.016129
going to write this as a frame table	table write	0.200000
concise listing of available options grouped by prefix	options list keys width _print	0.111111
the specified dtype	result dtype	0.142857
given axis	dropna axis	0.083333
indices overlap add suffixes	overlap	0.047619
custom ast walker parsers of other engines should	base expr visitor	0.200000
the underlying data	core indexes datetime index ops mixin	0.029412
target time zone	tz axis level	0.500000
append to table	append key value format append	0.125000
given a tuple of slices/lists/labels/boolean indexer to a	indexes multi index get	0.100000
return a boolean if we	core indexes index is	0.083333
a new index of the values set with	core indexes index putmask	0.111111
median	median	1.000000
from 1-dimensional	core indexes index	0.007042
built up styles to	styler	0.022222
values uses	values	0.008547
first non-na/null value	core data frame first valid	0.250000
pandas only dtype object	pandas	0.035714
take the	core categorical take nd	0.200000
a manager and a axes dict	init mgr mgr axes dtype	0.333333
the data types and ranges supported by stata	cast to stata types data	0.333333
sanitize input data to an	core sanitize array data	0.250000
get the 'info axis' see indexing for	ndframe keys	0.083333
function of type t or tuple	computation is type t	0.083333
get	get index name	0.200000
are index sliceable then	convert to index sliceable	0.083333
from ndarray or list of	data index columns dtype	0.125000
other axis	axis	0.011364
is *not*	is other	0.055556
namely intervalindex to control get_slice_bound	get loc only exact matches key	0.142857
are a series we	core series group	0.030303
normalized	normalized	1.000000
index for series columns for dataframe and	core	0.001326
is an actual dtype that	core dtypes extension dtype is dtype cls dtype	0.111111
record the metadata	io data col set metadata metadata	1.000000
convert series to a nested list	core series tolist	1.000000
the flattened values of the underlying data see	indexes index ravel order	0.037037
write out the binary feather-format	data frame to feather fname	0.083333
a tz-aware type return an encoded zone	tz tz	0.066667
a sequence of terms for instances of	terms	0.034483
return a boolean whether i can attempt conversion	core indexes is convertible	0.333333
the result to our original type we	result result dtype	0.200000
perform the reduction type operation if we can	core index ops mixin reduce op name axis	0.083333
datetimeindex with times to midnight length	core indexes datetime index	0.007634
a concise listing of available options grouped by	pp options list keys width _print	0.111111
return appropriate class of	result type result	0.250000
that group	group by	0.016129
convert to our native types format slicing if	to native types	0.250000
sub-classes to define	data frame gotitem key ndim subset	0.333333
1-dimensional ndarray only use this if	index	0.002004
needs additional handling as	core indexes period	0.032258
sparsifying is not supported for panel objects	core panel	0.019231
the 'numpy' library	with	0.068966
result to our original type we may have	result result dtype	0.200000
the 'numpy' library the	compat numpy validate take with convert convert	0.055556
add the	core panel add aggregate	0.500000
to the internal dtype s bears the risk	subarr	0.050000
it was a pathlib path	stringify path filepath_or_buffer	0.142857
a given width	arr width	0.142857
return	chain map	0.034483
the bool of	ndframe bool	0.055556
sunday use previous friday instead	previous friday	0.250000
string cast it to	index maybe cast	0.111111
node	hdfstore append	0.016667
label is not	value label	0.066667
new unit	new cls unit	0.055556
intersection of two index objects	index intersection other	0.052632
we need to coerce a scalar to a	indexes period index coerce scalar to	0.071429
fast version of transform only applicable to	core series group by transform fast	0.500000
the union of two multiindex objects sorting if	index union other	0.037037
packer for	io	0.003012
an intervalindex from a 1d array of	from intervals cls	0.125000
unary	unary	1.000000
times to	core indexes datetime index	0.007634
construct dataframe from dict of array-like or	data frame from dict	0.200000
the info axis of	get info	0.250000
value from 1-dimensional ndarray	datetime index get value series key	0.071429
& release the memory	col take	0.333333
about a malformed	malformed msg row_num	0.100000
read csv file (discouraged please use :func pandas	from csv	0.066667
and return	compat chain	0.034483
styler with a custom template	io formats styler from custom template	0.142857
apply we are stripping	core group by mixin apply func name	0.050000
gets called after a ufunc needs additional	result context	0.027027
file node must already exist and	io hdfstore append key value format	0.016667
non-tuple indexer which could be a	indexer indexer target	0.071429
evaluate a python expression	expr	0.050000
path	path	0.500000
data (produce	core data frame	0.005917
in the series/index	core str repeat arr	0.045455
the requested level the	sortlevel level	0.142857
matches	matches	0.750000
whether each index value is	datetime index ops	0.034483
my dtype	dtype	0.010989
value from 1-dimensional ndarray only use	core indexes period index get value	0.071429
the sparsearray only the actual sparse values	core sparse sparse array	0.043478
take the codes by	core categorical take nd	0.200000
return index	datetime index ops	0.034483
string cast it to	cast	0.058824
gets called after a	core series array	0.100000
to infer better dtype for object	ndframe convert datetime numeric timedelta coerce	0.071429
read sql database table into a dataframe	io sqldatabase read table table_name index_col coerce_float parse_dates	0.333333
a new block manager	core block manager reduction	0.250000
when a manipulation result has the same	ndframe constructor	0.055556
returns numpy array of python datetime date objects	indexes datetime	0.011494
datetimelike dtype	datetime value dtype errors	0.166667
true if the key is in	contains key	0.125000
checks that path's extension	check extension	0.250000
datetimelike properties of the series	timedelta properties	0.052632
need to coerce a	coerce	0.051282
a decorator	decorator	0.071429
1-dimensional ndarray only	indexes index	0.007353
its values attribute if it	series	0.006757
to ndarray raises on scalar	coerce to ndarray	0.166667
index objects contain the same	core indexes range index	0.021277
accelerate unioning a collection of indexes	datetime index union many others	0.040000
fast lookup of value from 1-dimensional ndarray only	indexes categorical index get value series key	0.100000
of obj with	obj	0.033333
given url true if succeeds false if ioerror	url error_classes	1.000000
mapped to their default values as specified	for default values	0.200000
or regular expression	flags	0.029412
after	core indexes period index	0.034483
dispatch to apply we	mixin apply func	0.050000
holidays between start_date and end_date	calendar holidays	0.166667
a new unit if needed otherwise	core dtypes datetime tzdtype new cls unit	0.055556
a uint64 ndarray of my hashed	core indexes multi index hashed	0.166667
data to ndarray raises on scalar data converts	core indexes index coerce to ndarray cls data	0.166667
on plane currently scatter	plane	0.166667
exist and be table	hdfstore append	0.016667
vmax	vmax	1.000000
to class python 2 and python	cls	0.016949
base freq and stride info from	base and stride freqstr	0.250000
the default	default	0.100000
used when	core	0.001326
returns a row cross-section from	xs key axis copy	0.333333
of casting data from some	casting cls data	0.047619
in file node must already exist and	hdfstore append key value format	0.016667
standard	standard	1.000000
spreadsheet-style pivot table as a dataframe the	core reshape pivot table data	0.166667
the operations to the cls evaluate the doc	operations cls use_numexpr	0.142857
elements of v	ndarray searchsorted v	0.033333
nat which has the same length as	nat new	0.050000
type t or tuple	computation is type t	0.083333
like to compare numeric arrays vs scalar string-likes	is numeric v string like a b	1.000000
from 1-dimensional ndarray only	arr	0.013699
return the number of bytes in	core indexes range index nbytes	0.052632
load	load	0.600000
evaluate a binary	core computation bin op evaluate	0.333333
a deprecated option and if so prints	core warn if deprecated	0.166667
i am never	core categorical block is	0.100000
union of two index objects	indexes range index union other	0.083333
the indexables if they don't exist	table indexables	0.333333
the number of bytes in the underlying data	nbytes deep	0.052632
the operations to the cls evaluate the	numeric operations cls	0.090909
index or ndarray filled	index	0.002004
dispatch to apply we are	mixin apply	0.050000
object that can	frame parser	0.012500
5 the starargs attribute was changed to	base expr visitor visit call 35 node side	0.066667
values at particular time of	ndframe at time time	0.066667
with nat-like arg is a passed	arg errors	0.026316
installed version of openpyxl	compat major_ver	0.083333
occupying requested label default to specified missing	series get label default	0.083333
class implementing	group	0.027027
filename	filename	1.000000
align a set	align	0.111111
index and	core indexes index validate	0.066667
boolean mask for requested label or	method	0.033333
return a fixed frequency datetime index	core indexes bdate range start end periods	0.083333
cast to	to timestamp freq how	1.000000
gets called prior to a	prepare result	0.111111
object in hdfstore parameters	io hdfstore put key value	0.333333
to table in file node	value	0.005155
from	set value arr key	0.023810
type checking function of type	computation is type	0.125000
maps[0] raise	compat chain	0.034483
is of the timedelta64[ns]	core dtypes is timedelta64 ns	1.000000
is thrown by an error is encountered in	error	0.028571
of two datetimeindexes	core indexes datetime index sub datelike dti other	0.333333
when a	core ndframe	0.005051
that an positional indexer cannot enlarge its	valid positional setitem indexer indexer	0.052632
return the unicode normal form for the strings	core string methods normalize form	0.066667
create a new unit	datetime tzdtype new cls unit	0.055556
determine if	str match arr pat	0.166667
tools	tools	1.000000
the number of bytes in	multi index nbytes	0.052632
for making this object picklable	core sparse sparse array reduce	0.333333
convert datetimelike-keyed dicts to timestamp-keyed	compat d	0.125000
we have an object dtype	core dtypes	0.037037
each group if n is an	core group by	0.027778
the description	description complib complevel	0.500000
into a higher freq with integer	cls value freq	0.083333
'numpy' library the third	with	0.034483
a class for writing stata	data frame to stata	0.200000
return the op	op	0.045455
statistical measure using supplied function designed to	func name window center	0.058824
find indices where elements of v	core indexes frozen ndarray searchsorted v	0.033333
freq with decimal stride into a higher	decimal cls value	0.333333
the float	io formats float array formatter get	0.055556
dom	doc match	1.000000
new unit if needed	datetime tzdtype new cls unit tz	0.055556
unified inteface datetimelike index	datetime index	0.007042
is defined as a copy with	index view cls	0.047619
before and/or after some particular index value	truncate before after axis	1.000000
init self	core sparse sparse data frame init	0.500000
set my	io fixed set	0.200000
of a hack to accelerate unioning a	datetime index union many others	0.040000
repr function return fillvalue for a recursive call	recursive repr fillvalue	0.333333
kind	kind	0.714286
apply	mixin apply	0.050000
seconds (>= 0 and less than	timedelta index seconds	0.066667
store object in hdfstore parameters	hdfstore put key value format append	0.333333
in file node must already	append key value format	0.016667
purely integer-location based	i loc indexer	0.142857
decorator to capture stderr in a buffer so	util capture stderr	0.055556
to read from a url file or string	io read obj	0.058824
use this if you	indexes	0.004651
returns the float	formats float array formatter	0.055556
check that left and right index are equal	almost equal left right check_exact	0.333333
lookup of value from 1-dimensional ndarray only use	indexes period index get value	0.071429
return the bool of a single element pandasobject	core ndframe bool	0.055556
'numpy' library	with convert convert args	0.055556
elements from the	io	0.003012
equivalent to shift without copying	shift periods axis	0.333333
gets called after	index array wrap result	0.066667
the reduction type operation if we can	ops mixin reduce op name axis	0.083333
stata date formats to a type in	to stata type	0.142857
two indices overlap	items overlap	0.062500
exist	hdfstore append key value	0.016667
bytes see :class packer	msgpack	0.022222
return the len	size	0.041667
method to handle na filling of take	assert take fillable values indices	0.250000
string representation for this	index unicode	0.083333
of type t or tuple of types	core computation is type t	0.083333
turn values into codes given the	core get codes for values values	0.333333
to_concat which has	dtype to_concat	0.333333
extension	writer check extension	0.250000
make a scatter plot from two dataframe	plotting scatter plot data x y by	0.125000
2nd week of each month" parameters	week of month	1.000000
keys that are not	keys fname	0.200000
the union of two multiindex objects sorting	index union other	0.037037
the index or minimum along an axis	indexes datetime index ops mixin min axis	0.333333
backward fill	group by backfill limit	0.250000
class	class	1.000000
handling as	core	0.001326
into a	index_col coerce_float parse_dates	0.333333
to parse datetime	tools parse	0.125000
a masked rec array	masked rec array	0.250000
maximum by shading	max subset	0.166667
if you	core indexes index set value arr key	0.023810
kinds allowable columns for	io table queryables	0.055556
datetime	datetime index	0.014085
a dataframe	data	0.009709
series/index to be	str	0.017544
ndarray only	indexes index	0.007353
comparable timezone both	indexes datetime index timezone	0.200000
version of putmask that potentially upcasts the	core dtypes maybe upcast putmask	0.250000
and setup my	col set	0.333333
node must already	key value format	0.016667
we have bytes decode them to	io ensure decoded s	0.166667
convert timeseries to specified frequency	asfreq freq method	0.250000
and a result set coerce the	dtypes coerce	0.066667
index with custombusinessday as the default	core indexes cdate range start end periods	0.083333
needs additional handling as	indexes	0.004651
for header rows in	pop header	0.100000
passed type is	core dtypes period dtype is	0.125000
return datetimeindex with times to	indexes datetime index	0.007634
return	parser build	0.014706
have a full length slice	full slice obj	0.333333
data structure for accumulating data to be	list	0.034483
offsets index to beginning	date offset beg apply index i	0.333333
from 1-dimensional ndarray only	index set value arr key	0.023810
representing the totally ordered cartesian product of	shape sort xnull	0.066667
if we have bytes decode them to	io ensure decoded s	0.166667
as series or	axis	0.011364
return a basegrouper which is an internal	core get	0.038462
add series to dataframe in specified column	data frame set item key value	0.250000
if	key	0.005051
satisfy the boolean criterion specified by func	by filter func	0.250000
python datetime date objects (namely the date	indexes datetime index date	0.333333
spreadsheet-style pivot table as a	core reshape pivot table	0.111111
the	indexes multi	0.028986
a fixed frequency timedelta index	core indexes timedelta range start end	0.083333
bytes in the underlying	nbytes deep	0.052632
generic we want to set the _typ here	set axis axis labels fastpath	0.200000
box function to get	ops mixin box func	0.142857
the indices that would sort the	argsort	0.038462
the reduction type operation if	index ops mixin reduce op name	0.083333
take a string-like	io convert string array	0.038462
dataframe	sparse data frame	0.272727
to apply we are stripping	core group by mixin apply	0.050000
in file node must already	io hdfstore	0.014493
for datetimelike properties	period properties	0.052632
construct this type from a	core dtypes interval dtype construct from string	0.166667
of the dataframe's series using matplotlib / pylab	grid	0.100000
iterate over	parser	0.008000
type window_type on	mean how	0.166667
convert timedelta-like	indexes td index cmp	0.055556
of type window_type and size window on the	stats rolling window arg window win_type	0.100000
return appropriate class of series concat	core dtypes get series result type result	0.250000
iterate over dataframe rows as index series pairs	data frame iterrows	1.000000
boxed values	datetime	0.006711
cast it	index maybe cast	0.111111
series extract groups from	core str extract frame	0.047619
update index attributes e g	indexes timedelta index maybe update attributes attrs	0.200000
defined as a copy with the	core indexes multi index view cls	0.047619
running code that expects to raise	util assert produces warning expected_warning filter_level	0.071429
object that can be	io html frame	0.012987
return a tree-like object that	html	0.011765
category value returning a new categorical by	categorical sort values inplace ascending na_position	0.333333
optional positional and keyword arguments	util optional args	0.066667
convert tz-aware datetimeindex	indexes datetime index tz convert tz	0.166667
function is called via the 'numpy' library	numpy validate take with	0.055556
several cases to get	get index name columns	0.200000
sparse reindex and return	sparse reindex new_index	0.250000
a dataframe to a variable	data frame	0.005714
moving function	apply arg window func	0.500000
the block manager from a dataframe of series	sparse to manager sdf columns	0.052632
tuples of the (attr formatted_value)	core indexes multi index format attrs	0.142857
coerce a scalar to a	coerce scalar to	0.071429
a summarized representation	datetime index ops mixin summary name	0.333333
returns true if categoricals are the same dtype	is dtype equal other	0.250000
as	period index array wrap result	0.050000
returns value occupying requested label default to	core sparse sparse series get label default	0.083333
returns the float values	formats float array	0.055556
the block manager from a dataframe	to manager sdf	0.052632
fixed frequency datetime index with business	indexes bdate range start	0.083333
function is called via the 'numpy' library	compat numpy validate take with convert convert	0.055556
add numeric operations to	by add numeric operations cls	0.250000
an	core computation	0.095238
new unit if needed otherwise return from the	new cls unit tz	0.055556
columns of	index columns values	0.037037
alert a user about a	parser alert	0.200000
type among	type types	0.500000
fixed frequency timedelta index with day	core indexes timedelta range start	0.083333
decorator	decorator	0.428571
method for	method	0.033333
if you	indexes index	0.007353
convert datetime-like to datetime64	dt index cmp opname nat_result	0.066667
take the codes	categorical take	0.200000
to call encode before writing to file for	io stata writer write to_write	0.083333
a	reshape crosstab index columns	0.066667
ndarray only	core indexes index set value arr key	0.023810
of	indexes	0.013953
the series extract groups from the	extract arr	0.066667
a series that is datetimelike (e	core indexes maybe to datetimelike	0.142857
check if the object is	core dtypes is	0.042553
a	is	0.005291
data the shifted data will	core ndframe slice	0.125000
a summarized representation	index ops mixin summary name	0.333333
sparsifying is not supported for panel objects	panel	0.017857
the result will respect	ascending sort_remaining	0.200000
return data corresponding to axis	axis	0.011364
resample	datetime	0.006711
data to ndarray raises on scalar	index coerce to ndarray	0.166667
cases to get lines 0) there are headers	io python parser get index	0.166667
dataframe	core sparse sparse data frame	0.176471
as	wrap result	0.022727
return the bool of a single element	bool	0.043478
ufunc	period index array wrap result context	0.041667
perform the reindex for all the axes	reindex axes axes level limit tolerance	1.000000
fast transform path	group by transform fast result obj	0.333333
data columns for	data	0.009709
apply a function column-wise row-wise or table-wase updating	styler apply func axis subset	1.000000
multi-level index return new dataframe with labeling information	core data frame	0.005917
a multirow e	latex formatter format multirow	0.250000
if we if the passed type is an	core dtypes interval dtype is	0.066667
an ndarray of the flattened values	index ravel order	0.037037
sanitize input data to an ndarray copy	sanitize array data index dtype copy	0.500000
of interval objects parameters	core indexes interval index	0.062500
if holiday falls on sunday use day thereafter	tseries sunday to	0.200000
op	op	0.409091
if we have an object dtype try	core dtypes maybe	0.166667
items	items	1.000000
set	formats styler set	0.333333
returns the float values	float array formatter get result as array	0.055556
to convert datetime-like	index cmp opname nat_result	0.066667
return rule name associated with a dateoffset object	name offset	0.500000
all values found	transform	0.083333
from maps[0] raise keyerror is maps[0]	map	0.029412
a new unit if needed otherwise return from	tzdtype new cls unit	0.055556
a moving window	window apply window	0.166667
dispatch to apply	group by mixin apply func name	0.050000
of the (attr formatted_value)	range index format attrs	0.142857
and a result set coerce	core dtypes coerce	0.066667
instances of all the classes which represent time-seires	util all timeseries index	0.333333
rewrite the assignment operator	computation rewrite assign tok	0.125000
transform	core ndframe group by transform	1.000000
is unaltered	normalize	0.076923
to get the values	core get values values	0.125000
to end	tseries date offset end	0.500000
return index or ndarray	index ops	0.033333
that create a table reflecting the structure	io sqlite table create table setup	0.066667
(can't do in caller	jsontable writer init obj orient date_format double_precision	0.142857
node must	hdfstore append	0.016667
union of	core indexes multi index union	0.333333
the codes by the indexer fill	indexer allow_fill	0.050000
comparison operations to convert timedelta-like to timedelta64	core indexes td index cmp opname	0.055556
of v should be inserted	v	0.026316
concatenation	core dtypes concat datetime to_concat axis	0.125000
dtype	empty dtype	0.500000
its	series	0.006757
to be applied on each value	formatter value formatter float_format threshold	0.100000
a fixed frequency datetime index with	core indexes bdate range start	0.083333
data the shifted	slice	0.038462
series/index by indicated number	str	0.017544
dense type view	core single block manager	0.200000
sure that time	indices time	0.125000
in the series extract groups from the first	core str extract frame arr	0.047619
alert	alert	0.600000
series to the given	series	0.006757
is called via the 'numpy' library	take with convert convert args	0.055556
given dimensions levels names	names	0.038462
with closed	interval closed	0.500000
dataframe to	to	0.006329
and panels are conformable	panels	0.142857
the view limits to	plotting time series date locator autoscale	0.055556
a dataframe as an	core data frame to	0.037037
force non-datetime columns to be read as such	io parse date columns data_frame parse_dates	0.166667
of type window_type and size window on the	arg window win_type min_periods	0.100000
color objects suitable for initializing the gradientfill stop	stop cls	0.066667
new sparsedataframe	core sparse sparse data	0.076923
the series extract groups from the first match	extract frame	0.047619
in file node must already exist	io hdfstore append key	0.016667
operations to convert timedelta-like to	td index cmp	0.055556
read csv file (discouraged please use	csv cls path sep parse_dates	0.066667
_print	_print	1.000000
connect to	can connect	0.111111
locations for	locs start end step kind	0.250000
dispatch to apply	apply	0.026316
view of	categorical view	0.111111
number of unique elements in	nunique dropna	0.125000
to take optional positional and	optional args	0.066667
draw	frame data column by	1.000000
its corresponding json_table	json as json table	0.333333
apply we are stripping all	group by mixin apply	0.050000
a la re split in	split arr pat n	0.200000
a boolean if we are a single block	core block manager is	0.250000
to the length of that group - 1	core group by cumcount ascending	0.166667
kind of my field	computation bin op kind	0.500000
to determine if	n method	0.125000
the index and its	indexes range index	0.021277
sets the categorical to be ordered	core categorical as ordered inplace	1.000000
if we are index sliceable then return my	index sliceable obj	0.083333
sure that time and panels are conformable	indices time panels	0.250000
called after a ufunc needs	result context	0.027027
after a	core indexes period index	0.034483
float key	key	0.005051
read csv file (discouraged please	core data frame from csv cls	0.066667
called via the 'numpy' library	compat numpy validate take with convert	0.055556
from	value arr key	0.023810
and return a basegrouper	core get	0.038462
shade	formats styler	0.021739
this function is called via the 'numpy' library	with convert	0.055556
gets called after a ufunc needs additional handling	index array wrap result context	0.034483
specialized intersection for datetimeindex objects may	datetime index intersection	0.142857
3 columns of this dataframe	index columns	0.028571
a hack to accelerate unioning a	datetime index union many others	0.040000
shell	session	0.166667
falls on sunday use day thereafter monday instead	tseries sunday to monday dt	0.333333
transform long stacked format dataframe	data frame to	0.037037
a compat for our index type	index item	0.100000
window of type window_type and size window on	arg window win_type	0.100000
we take a string-like that	convert string array data	0.038462
perform __getitem__-like return result as block	block slicer new_mgr_locs	1.000000
tree-like object that can be used to iterate	io html frame parser	0.012195
that	html frame parser	0.012658
with	io hdfstore get	0.333333
specialized intersection for datetimeindex	intersection	0.041667
maps[0] raise keyerror	chain map	0.034483
1d array	intervals cls data name copy	0.250000
ndarray argsort argsorts the value	core series argsort	0.083333
use this	indexes index set value arr	0.023810
style and	style	0.041667
ndarray only use this	core indexes index set	0.023810
specialized cython take which sets nan	core take nd arr indexer axis out	0.166667
where condition cond on a and	computation where cond	0.111111
code group of given frequency str or offset	tseries get freq group freq	0.500000
construct a slice of this container	slice slobj axis kind	0.333333
create an indexer like _name	ndframe create indexer cls name indexer	0.166667
to write this as a frame table	table write	0.400000
time	ensure like indices time	0.125000
comparison operations to convert timedelta-like	td index	0.055556
ndarray only use	indexes index	0.007353
cast the result to our original type we	cast result result dtype	1.000000
elements of arr1 and arr2	util equal contents arr1 arr2	0.066667
additional handling	indexes period index	0.035714
get integer location for requested label	period index get loc key method tolerance	1.000000
dtypes to object for dataframe	dtypes	0.015873
array of datetime time the time part of	datetime index time	0.166667
operations to convert datetime-like to datetime64	dt index cmp opname nat_result	0.066667
view limits to	time series date locator autoscale	0.055556
returns *copy* of underlying array	indexes frozen ndarray values	0.250000
parse specified	parse	0.034483
used to iterate over the dom	parser build doc	0.125000
path's extension against	extension cls	0.125000
csv	csv cls path header sep	0.066667
checks that path's extension against the	check extension cls	0.125000
ops	ops	0.538462
pretty-formats the date axis x-axis	plotting format dateaxis subplot freq index	0.333333
lookup	index set value arr	0.023810
dataframe sorted by the n smallest values of	data frame nsmallest n	0.166667
a tabular	buf columns col_space header	0.250000
get item from object for given	ndframe get	0.200000
file node must already exist and be table	hdfstore	0.014925
only operations to the cls evaluate the doc	only operations cls	0.333333
read csv file (discouraged please use :func pandas	data frame from csv cls path header sep	0.066667
read csv	core series from csv	0.066667
the plot attribute	by plot	0.062500
boolean if values in	is	0.005291
text display value of	formats styler	0.021739
a	datetime index	0.014085
offsets index to end of period	end apply index i	1.000000
necessary for	core sparse sparse array	0.043478
box function	datetime index ops mixin box func	0.142857
in the series/index	core str	0.079545
given a 1d array return an array of	hash array vals	0.083333
convert tz-aware datetimeindex from one time zone to	datetime index tz convert tz	0.166667
to capture stderr in a buffer so	util capture stderr f	0.055556
to apply we are stripping all of the	core group by mixin apply func	0.050000
an ndarray of the flattened values of	index ravel order	0.037037
datetime time	datetime	0.006711
sets names on	index set names names level	0.200000
only the actual sparse values	sparse sparse array	0.043478
bytes in the underlying	index nbytes	0.052632
operations to convert datetime-like to	core indexes period index cmp opname nat_result	0.066667
an indexer like _name	cls name indexer	0.083333
new freq essentially a reindex	core resampler asfreq fill_value	0.066667
shift without copying data the shifted data will	slice shift periods	0.083333
return the join	as of merge get join	1.000000
python expression as a string using various backends	expr parser engine truediv	0.500000
lookup of value from 1-dimensional ndarray only	indexes index set value arr key value	0.038462
that we	validate ordered cls	0.055556
compute pairwise correlation of columns excluding na/null values	core data frame corr method	0.111111
support a unified inteface datetimelike	datetime	0.006711
the float values converted	float array formatter get result	0.055556
set the value	value mgr	0.083333
1-dimensional ndarray	arr key	0.023810
this getitem defers to the underlying array	index ops mixin getitem key	0.333333
first_row	first_row	1.000000
internal method to handle na filling of take	indexes index assert take fillable values indices	0.250000
convert sql and params args	io convert params sql params	0.250000
starting at the end of the string	rsplit arr pat	0.037037
return fillvalue for	fillvalue	0.071429
we are index sliceable then return my	core convert to index sliceable	0.083333
create index	multi index	0.020000
of python datetime date objects (namely	core indexes datetime index	0.007634
min	min	1.000000
wrapper function for	arith method	0.333333
add in the datetimelike methods (as we may	ops mixin add datetimelike methods	0.333333
set of _constructor_sliced-like objects to either	core panel homogenize dict frames intersect dtype	0.066667
implementing the plot attribute	group by plot	0.062500
types format slicing	types slicer na_rep	0.200000
category value returning a	values inplace ascending na_position	0.071429
each level	indexes multi	0.014493
object close it if we opened it	io to hdf path_or_buf key value	0.166667
which produces a datetimeindex	indexes datetime index	0.007634
get the 'info axis' see indexing for	core ndframe keys	0.083333
type as the index (so we don't	at indexer convert key key is_setter	0.090909
index values and index	datetime index	0.007042
index with target's	core indexes multi index	0.013158
index with day calendar as	indexes period	0.034483
frozen	frozen	1.000000
function is called via the 'numpy' library	compat numpy validate take with	0.055556
scalar data	cls data	0.076923
already exist and	value	0.005155
a new block manager	core block manager reduction f axis	0.250000
return new object with labels in	labels	0.038462
for header rows in multiindex	pop header name	0.100000
prior	series array prepare	0.111111
with times to midnight length	core indexes datetime index	0.007634
returns the float values	float array formatter get	0.055556
on 3 columns of this dataframe	index columns values	0.037037
dataframe apply	sparse sparse data frame apply func	0.166667
to beginning of	offset beg	0.166667
series using mapper dict or key function	as_index	0.071429
necessary for	sparse array	0.142857
evaluate the block return result block	block eval func	0.333333
from 1-dimensional ndarray only	core indexes	0.004762
the	formats	0.031250
comparison operations to convert datetime-like	index cmp opname nat_result	0.066667
1-dimensional ndarray only	core	0.001326
numpy array of python datetime date objects	datetime	0.006711
ticks	ticks	1.000000
add in numeric unary methods	add numeric methods unary cls	1.000000
indicated if we have	indexes multi index have	0.142857
data is of datetime/timedelta type	core reshape coerce to type x	0.250000
fixed frequency timedelta index with day as the	core indexes timedelta range start	0.083333
perform the reduction type operation if we can	index ops mixin reduce op name axis skipna	0.083333
object	io html	0.012987
package is installed	package pkg_name min_version	0.083333
forward to the	sparse sparse series iter	0.250000
my dtype	io dtype	0.333333
sparsifying is not supported for panel objects and	panel to sparse	0.037037
the number of bytes in the underlying data	core indexes range index nbytes	0.052632
column name for generation (e g an	computation bin op	0.055556
over the other axis	axis	0.011364
check	indexes index assert	1.000000
from each	arr	0.013699
a singular 'name' parameter for general index	core indexes index validate	0.066667
is called upon unpickling rather than	new datetime index cls d	0.111111
must already exist and be	append	0.012987
stata	frame to stata	0.200000
dtype from a scalar parameters	dtype from scalar	0.500000
method to handle na filling of take	core indexes index assert take fillable	0.250000
try to cast the array/value to a datetimelike	maybe cast to datetime	0.500000
convert datetimeindex to float64index of julian dates	indexes datetime index to julian date	1.000000
float values	float array formatter get result as array	0.055556
op	computation bin op	0.055556
a resample of	index resampler	0.065217
expected	exc_type exc_value trace_back	0.100000
asof merge	merge asof	0.333333
try to	try convert	0.166667
unit specifed fields from the arg dataframe	from unit mappings arg	0.500000
specialized shift which produces a	index ops mixin shift n freq	0.250000
to	plotting dt to	0.125000
cut	cut	0.600000
read csv file (discouraged please use :func	frame from csv cls path header sep	0.066667
used when a manipulation result has the same	constructor	0.040000
datetime format of a given datetime	datetime format	0.250000
don't allow a multi reindex on	needs reindex multi axes	1.000000
return a tree-like object that can be	html	0.011765
take optional	optional	0.050000
convert to object if	core indexes multi index to safe	1.000000
closed	closed	0.666667
groupby facilities	group by mixin	0.333333
columns for dataframe	ndframe	0.005025
called after	index array	0.066667
this if	index set value	0.023810
the result to our original type we may	result result dtype	0.200000
boolean whether this axes needs validation	core ndframe indexer should validate	0.166667
thereafter	to	0.006329
update index attributes e g freq depending on	timedelta index maybe update attributes	0.200000
standardized frequency string	tseries get standard freq freq	1.000000
new	new cls	0.333333
of the underlying data as	core index ops mixin	0.062500
the best locator based on a distance	date locator get locator dmin dmax	0.250000
the levels attribute is 1 or a list	io table is multi index	0.142857
true if more than one block with the	block manager is consolidated	0.333333
for a particular object invoked by str	str	0.017544
binary feather-format for	data frame to feather fname	0.083333
datetime date objects	core indexes datetime	0.011494
a string raise a	cls string	0.125000
the block	col create for block	0.333333
from observed group ids	decons obs group ids comp_ids obs_ids shape	0.500000
a float	float	0.024390
wrap comparison operations to convert timedelta-like to timedelta64	core indexes td index cmp opname nat_result	0.055556
to shift without copying data the	core ndframe slice shift periods	0.083333
a curve with holidays between	tseries abstract holiday calendar holidays start end return_name	0.066667
using input function or functions	ndframe rename axis mapper axis copy inplace	0.250000
additional handling as	period index array wrap	0.050000
views note this is *not*	is other	0.055556
and index parameters	set value index	0.166667
categorical by category value returning a	values inplace ascending na_position	0.071429
an ordered multiindex	core indexes multi	0.014493
single non-tuple indexer which could	indexer indexer target	0.071429
a masked	core masked	0.250000
a set of	core	0.001326
correlation	corr	0.125000
of row elements from the	io html	0.012987
convert to object if we are a	core indexes multi index to safe for reshape	0.333333
the display options	display options	0.083333
boolean whether this axes needs validation for a	ndframe indexer should validate iterable axis	0.166667
after a ufunc needs additional	index array wrap result context	0.034483
we are going to write this	write	0.017857
not supported for panel objects and will	core panel to sparse	0.037037
raises	raises	1.000000
rewrite the assignment operator	rewrite assign	0.125000
lookup	index set value	0.023810
the number of bytes in the underlying data	range index nbytes	0.052632
the formatted data as a unicode string	indexes index formatter func	0.083333
a style_dict	style_dict	0.266667
values and other to int64 with	other	0.013514
datetimelike (e	indexes maybe to datetimelike data copy	0.142857
read csv	series from csv cls path sep parse_dates	0.066667
index and / or columns using	inplace	0.027778
attr	attr	0.625000
positional indexer cannot enlarge its	valid positional setitem indexer indexer	0.052632
keys that are not	keys	0.032258
via the 'numpy' library	take with	0.055556
boolean list indicated if we have	have	0.083333
for series arithmetic operations to avoid code duplication	core sparse arith method op name str_rep default_axis	1.000000
table in	append key value format	0.016667
the series extract groups from the	core str extract	0.035714
aggregate using input function or	aggregate arg	0.071429
number of seconds (>= 0 and less than	timedelta index seconds	0.066667
return the bool	core ndframe bool	0.055556
of v should be inserted in	ndarray searchsorted v	0.033333
of a series that is datetimelike	to datetimelike data copy	0.125000
of the stata date formats to	io convert datetime to stata	0.111111
concatenation	core dtypes concat datetime to_concat	0.125000
of bytes in the underlying	index nbytes deep	0.052632
object that can be used	io html frame	0.012987
cast values	parser base cast types values	0.500000
detect terminal size and return tuple =	get terminal size	0.166667
of type window_type and size window on the	window arg window win_type	0.100000
string in the series extract groups from	str extract	0.035714
sparse-compatible version of ndarray take	series take indices axis convert	1.000000
type window_type and size window	window arg window win_type	0.100000
and index parameters	sparse sparse data frame set value index	0.250000
installed version	compat major_ver	0.083333
the float	float array	0.055556
cartesian product of all	labels shape sort	0.200000
be	value	0.005155
type	type	0.292683
then fill	dtypes maybe fill	0.500000
of the (attr formatted_value)	indexes range index format attrs	0.142857
category value returning a new categorical by default	core categorical sort values inplace ascending na_position	0.333333
apply of dateoffset to datetimeindex raises notimplentederror for	date offset apply index i	0.333333
as a frame table	table	0.021739
to apply	mixin apply func name	0.050000
in the series extract groups from the	core str extract arr	0.066667
label for last non-na/null value	core data frame last valid index	0.250000
convert structured or record ndarray to dataframe parameters	frame from records cls data index exclude	1.000000
hooks into jupyter notebook rich display system	formats styler repr html	1.000000
round the fractional part of the given number	core reshape round frac x precision	0.200000
sparse values	sparse sparse array	0.043478
td elements from a row element	io html frame parser parse td obj	0.083333
if we are index sliceable then return	core convert to index sliceable obj	0.083333
fast transform path	ndframe group by transform fast result obj	0.333333
a styled html representation fo	style	0.041667
row_levels	row_levels	1.000000
to	index	0.002004
ndarray of the flattened values	index ravel order	0.037037
of whether each index value is found	indexes datetime index ops mixin isin values	0.083333
locator based on a distance	get locator dmin dmax	0.250000
datetimeindex	indexes period index	0.035714
leaving just one before	str_floats na_rep	1.000000
to table in file node must	hdfstore append key	0.016667
sql	io sqldatabase	0.500000
fill value for the dtype	fill value dtype	0.250000
try to	mixin try	0.250000
we always want to	index shallow copy with infer values	0.200000
resample of	resampler	0.053571
vectorized apply of dateoffset to datetimeindex	date offset apply index	0.500000
a numpy / pandas type to	table type	0.055556
frequency guess generated by infer_freq	datetime index ops mixin inferred freq	0.250000
setattr	setattr	1.000000
to time objects	tools to time	0.125000
box function to get object from	mixin box func	0.142857
with target's values (move/add/delete values as necessary) returns	reindex target method level limit	0.142857
the best locator	auto date locator get locator	0.062500
of the values to be at least	block shape values	0.050000
equivalent to shift without copying data	slice shift periods	0.083333
of the categorical	core categorical	0.013889
provides rolling window calculcations	window	0.071429
s	where other cond align	1.000000
packer	msgpack packb	0.025641
self as a	sparse sparse series as	0.125000
called via the 'numpy' library	take with convert convert args kwargs	0.055556
fill with the fill_value	fill_value	0.033333
needs	array wrap	0.025000
coerce values and	coerce args	0.333333
the dataframe's series using matplotlib / pylab	grid	0.100000
ftypes (indication of sparse/dense and	core ndframe ftypes	0.055556
series	core ndframe	0.005051
a string-like that is object dtype	convert string array data encoding	0.038462
float values	io formats float array formatter get result	0.055556
true if this is a valid	is in	0.076923
for datetimelike properties	timedelta properties	0.052632
into dataframes	frame parser	0.012500
create a timegrouper and return our	core resample obj kind	0.083333
given an interval or intervalindex return the	core indexes get interval	0.125000
going to write this as a frame table	appendable multi series table write obj	0.333333
string cast it	index maybe cast	0.111111
or functions	ndframe rename axis	0.333333
forward to	sparse sparse series iter	0.250000
specialized intersection for	core indexes datetime index intersection other	0.142857
start stop kwds in sparse	sparse	0.026316
with integer stride parameters	stride from	0.333333
be used to	html	0.011765
index using the index's frequency if	core ndframe tshift periods freq axis	0.066667
return a stringified and numeric for these	na_values	0.125000
environment table you	latex	0.076923
concat all inputs as object datetimeindex timedeltaindex and	core dtypes concat index asobject to_concat name	0.250000
rows if n	n	0.045455
for series arithmetic operations to avoid code duplication	method op name str_rep default_axis	1.000000
1-dimensional	value	0.005155
list of the keys corresponding	keys	0.032258
dataframe objects and do	data frame	0.005714
the caption on a	set caption caption	0.166667
coerces data to ndarray raises on scalar	core indexes index coerce to ndarray	0.166667
an expression in python space	computation	0.038462
by an error is encountered in	parser error	0.055556
for dataframe with multi-level index return new dataframe	data frame	0.005714
timegrouper and return our resampler	resample obj kind	0.083333
from 1-dimensional ndarray	value arr	0.023810
its values attribute if it has one	core series	0.008000
index objects	index	0.008016
called prior to	prepare	0.071429
replace local variables with a syntactically valid name	computation replace locals tok	1.000000
a uint64 ndarray of my hashed	multi index hashed	0.166667
o and return packed bytes see	packb o	0.055556
operations to	operations cls	0.038462
r	r	1.000000
return a boolean if we	indexes index is	0.100000
apply we	group by mixin apply func name	0.050000
use	core indexes index set value arr key	0.023810
function is called via the 'numpy' library the	numpy validate take with convert	0.055556
subset rows or columns of dataframe according	filter items like regex axis	0.166667
slice	slice obj l	0.500000
of kwargs suitable for initializing or	kwargs cls	0.040000
that is thrown by an error is encountered	error	0.028571
if the levels of both multiindex objects are	core indexes multi index equal levels other	0.100000
return a dense type view	single block manager get	1.000000
highlight the maximum by	highlight max	0.333333
maps[0] raise keyerror is	compat	0.030303
columns using input function or	mapper axis copy inplace	0.055556
called after a ufunc needs	indexes period index array wrap result context	0.041667
if each value is nan	isnan	0.375000
return index or	index	0.002004
1-dimensional ndarray only use this if you	core indexes index set value	0.023810
to the groupby	cls	0.016949
using the interpolate machinery	interpolate with fill method axis inplace limit	0.200000
return a tree-like object that can	io html frame parser	0.012195
interval in the index	indexes interval index	0.062500
to specified frequency	ndframe asfreq freq method how	0.250000
expanding count of number of non-nan	expanding count arg	0.200000
td elements from	frame parser parse td obj	0.083333
of all the various index classes	util all index	0.142857
td	td	0.217391
decorator to capture stderr in a buffer	util capture stderr	0.055556
sparse-compatible version of ndarray take	sparse array take indices axis allow_fill fill_value	1.000000
histogram of the dataframe's series	plotting hist	0.200000
block i	col create for block cls i	0.333333
that create	io sqlite table create	0.066667
its values attribute if it has	core series	0.008000
pandas only dtype object or a	pandas	0.035714
select values between particular times of the	core ndframe between	0.100000
be used	frame parser build	0.014706
feather-format object from	read feather	0.083333
types and ranges supported by stata and	io cast to stata types	0.500000
that can be	parser build	0.014706
set the	io formats styler set	0.333333
take a string-like that is object	io convert string array data	0.038462
handle 2-d slices equiv to iterating over	core panel apply 2d func	0.200000
datetime date objects	core indexes datetime index	0.007634
leap	period index is leap	0.125000
with multi-level index return new dataframe	core data frame	0.005917
in the	core	0.019894
we opened it retrieve pandas object stored	hdf path_or_buf key	0.333333
operations to the cls evaluate the doc strings	operations cls	0.153846
the block we must	core non consolidatable mix in	0.090909
type is an actual dtype	core dtypes extension dtype is dtype cls dtype	0.111111
of the timestamps	index	0.002004
to determine if	dtype n method	0.125000
gets called after a ufunc	core indexes index array wrap result context	0.200000
labels	get compressed ids labels	1.000000
v should be inserted in a	searchsorted v	0.033333
long strings in the series/index	core str	0.011364
to	build	0.013514
gets	wrap result	0.068182
sort multiindex	core indexes multi index	0.013158
return an xarray object from the	core ndframe to xarray	0.125000
with the table schema resets the	io	0.003012
given a tuple	index get	0.040000
to the	to	0.018987
occupying requested label default	label default	0.083333
dataframe in	data frame	0.005714
method to handle na filling of take	indexes index assert take fillable values indices allow_fill	0.250000
right	right check_exact	0.500000
convert an object	convert	0.032258
sets names on levels warning	core indexes multi index set names names level	0.200000
and 'kwargs' should	method args kwargs	0.142857
into wide 3d panel format	to panel	1.000000
csv file (discouraged please use :func pandas read_csv	core data frame from csv cls path header	0.066667
called	indexes index array wrap	0.100000
to midnight	datetime index	0.007042
we have a float key and	key	0.005051
of python datetime date objects	indexes datetime index	0.007634
tree-like	parser	0.008000
the levels	levels	0.083333
left and right index are equal	almost equal left right	0.333333
index objects contain	core indexes datetime index	0.007634
dataframe to a console-friendly tabular output	data frame to string buf columns col_space header	0.333333
of styler with a custom template and	formats styler from custom template	0.142857
to convert timedelta-like to timedelta64	td index cmp opname	0.055556
to apply we are stripping all of	by mixin apply	0.050000
datetime index with custombusinessday as	indexes cdate range start	0.083333
of value from 1-dimensional ndarray only use this	core indexes categorical index get value series	0.100000
return index or ndarray filled	datetime index ops	0.034483
from	io formats cssresolver parse	1.000000
of whether each index	datetime index	0.007042
lookup	core indexes index set value arr	0.023810
will raise an error in a future release	categorical reshape new_shape	0.142857
to iterate over the	parser build	0.014706
full	full	0.500000
a single block and are a	block	0.008197
a delegatedclass of a series that is datetimelike	datetimelike data	0.111111
compute a simple	core reshape crosstab index columns	0.066667
series/index by the given delimiter string starting at	str rsplit	1.000000
a file-like	file like	0.500000
manager for temporarily setting	new_locale lc_var	0.125000
metadata if key is a	key	0.005051
append to table in file node	io hdfstore append key value format append	0.125000
string or np dtype	dtype dtype	0.100000
take which sets nan values in	core take nd arr indexer axis	0.125000
number of unique elements in	core index ops mixin nunique dropna	0.083333
return result as block	core block getitem block	0.250000
compute a	core reshape	0.047619
if not	core	0.002653
to a	datetime to	0.100000
nanoseconds (>= 0 and	core indexes timedelta index nanoseconds	0.066667
and arr2 are equivalent	arr2	0.090909
function for creating a subclass of styler with	io formats styler from	0.076923
used to	frame parser	0.012500
general index and plural 'names'	indexes index validate names name names deep	0.071429
are stripping all of the _apply kwargs and	window center	0.076923
take which sets nan	core take nd arr indexer axis	0.125000
take a string-like that is object dtype	string array data encoding	0.038462
that can be used to iterate	frame parser	0.012500
set the precision used to render	io formats styler set precision precision	0.333333
equivalent to shift without copying data the	ndframe slice shift periods axis	0.083333
series extract groups from	core str extract frame arr	0.047619
compute a simple cross-tabulation of	columns values	0.037037
that do not throw	util valid	0.125000
ndarray only use this if	set value arr	0.023810
a curve with holidays	holidays start end return_name	0.066667
for :meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace	0.333333
*this is an internal non-public method*	indexes categorical index create categorical data categories ordered	0.333333
dataframe columns parameters	data x y by	0.333333
optional positional	util optional	0.066667
to write this as	write	0.035714
sparsearray from the input	core sparse sparse data	0.076923
data from google bigquery	io read gbq query project_id index_col col_order	0.250000
the totally ordered cartesian product of	sort xnull	0.066667
gets called	core indexes period index	0.034483
offsets index to	apply index i	0.500000
from 1-dimensional ndarray only use this if you	set value arr key	0.023810
called via the 'numpy' library	take with	0.055556
to a tabular environment table	to latex buf columns col_space header	0.200000
at the requested level	sortlevel level	0.142857
index value is	index ops	0.033333
a dataframe	data values index columns	0.066667
soft	soft	1.000000
needs	period index array wrap result	0.050000
index objects and	core indexes range index	0.021277
passed type is	period dtype is	0.125000
used to	html frame	0.014706
this column	index col	0.066667
index or ndarray	datetime index ops	0.034483
my self as a	sparse series as	0.125000
of x not in y if possible	core computation not in x y	0.066667
cross-tabulation	core reshape crosstab index columns values	0.066667
objects parameters	indexes	0.004651
returns the float values converted into strings using	float	0.024390
my	index	0.004008
create holidays following certain	calendar	0.111111
simple	values	0.008547
tree-like object	frame parser build	0.014706
the values to	core block shape values	0.050000
numpy / pandas type to its corresponding json_table	json as json table type	0.250000
a b ndarrays	nancorr a b method min_periods	1.000000
nat which has the	ops mixin nat new box	0.050000
string representation	indexes index unicode	0.083333
node must already exist and be table	key value	0.011628
csv	core data frame from csv cls path header	0.066667
from maps[0] raise keyerror is	compat chain map	0.032258
that can be used to iterate over	frame parser build	0.014706
the handle if its open	io	0.003012
resolve a variable name in a	scope resolve	0.166667
try to cast the	core block try cast	0.500000
convert a numpy / pandas type	table type x	0.055556
this frame	core data frame	0.005917
that we have a	ordered	0.017857
string format	format	0.012346
the maximum values along an axis	datetime index ops mixin argmax axis	0.250000
times to	core indexes	0.004762
on multiindex	indexes multi index	0.013158
return a list of the index values	core indexes index tolist	0.333333
slice dictionary for these axes	panel extract axes for slice axes	0.333333
from	parse	0.068966
and other to int64 with null values converted	values other	0.200000
csv file (discouraged please use :func pandas read_csv	from csv cls path header	0.066667
in file node must already exist and	key	0.005051
cut where	cut x	0.200000
construct this type from a string raise a	dtype construct from string cls string	0.166667
this is	core ndframe	0.005051
apply	core group by mixin apply func	0.050000
class implementing the	by	0.038462
the passed type is an	dtypes interval dtype is	0.066667
return the cached item item represents	get item cache item	0.333333
times to midnight length is	core indexes	0.004762
a copy of this object names dtype	core indexes multi index copy names dtype	0.333333
and major_axis	core ndframe	0.005051
by	sort values	0.500000
a string raise	cls string	0.125000
ndarray copy if specified	dtype copy	0.032258
the maximum values along an axis	core indexes datetime index ops mixin argmax axis	0.250000
if the process of casting data from	casting cls data	0.047619
each string matches a regular expression	flags	0.029412
function is called via the 'numpy' library	with convert	0.055556
determine	match arr	0.166667
prior to a	prepare result	0.111111
unused	unused	1.000000
in the series/index to be formatted in	core str	0.011364
number of microseconds (>= 0 and less than	core indexes timedelta index microseconds	0.066667
passed data is of datetime/timedelta type	core reshape coerce to type x	0.250000
elements of v should	ndarray searchsorted v	0.033333
from 1-dimensional ndarray only	set value arr	0.023810
of an indexer even	index get indexer for	0.250000
return the op string for this termvalue	core computation bin op generate v	0.250000
get new sparsedataframe	core sparse sparse data	0.076923
for all the axes	axes axes	0.200000
stride parameters	resolution get stride from	0.333333
read csv file (discouraged please use	core series from csv cls path	0.066667
support a single	core computation base expr visitor visit	1.000000
unit if needed otherwise return from the cache	cls unit	0.125000
the intersection of two index objects	core indexes index intersection other	0.166667
take which sets nan values	take nd arr indexer axis	0.125000
(of a possibly	setitem indexer	0.250000
a new block (of a	block setitem indexer	0.066667
apply box func to passed values	datetime index ops mixin box values values	1.000000
backward	rollback	0.076923
makes sure that time	like indices time	0.125000
a series to	core series	0.008000
reverse of try_coerce_args	core block try coerce result result	0.500000
unique elements of arr1 and arr2 are equivalent	contents arr1 arr2	0.066667
sparsearray only the actual sparse values need	sparse sparse array	0.043478
for groupby objects	group	0.027027
of index to be returned	index	0.002004
of the flattened values	ravel order	0.037037
can be used to iterate over the	frame parser build	0.014706
casting data from	numeric index assert safe casting cls data	0.047619
return the number of bytes in the underlying	indexes multi index nbytes	0.052632
op string for this termvalue	bin op generate v	0.250000
an ndarray copy if	copy	0.012821
an intervalindex from a list/array of tuples parameters	indexes interval index from tuples cls data	1.000000
perform merge	merge	0.111111
a float key and	key	0.005051
values and a date_format	datetime64 from values values date_format	0.250000
nrows	util make custom dataframe nrows	1.000000
the groupby facilities	group by mixin	0.333333
single block and are	block manager	0.021277
values as an enumerated type or categorical variable	core factorize values sort order na_sentinel	0.111111
attempt to construct this type from a string	categorical dtype construct from string cls string	0.166667
a cross-section	xs loc	0.250000
of self coded with categories as returned by	categorical codes for groupby sort	0.071429
determine if each string matches	str match arr pat	0.166667
to	to index	0.166667
indices where elements of v should be inserted	indexes frozen ndarray searchsorted v	0.033333
a new unit if	dtypes datetime tzdtype new cls unit	0.055556
lookup of value from 1-dimensional ndarray	key value	0.011628
is called via the 'numpy' library the third	numpy validate take with convert convert args	0.055556
cross-tabulation	reshape crosstab	0.066667
columns with an arbitrary number of data	legacy table read where columns	0.111111
indexer like _name in the class	indexer cls name indexer	0.083333
specified dtype (e g convert back to bool/int	dtypes maybe downcast to dtype result dtype	0.500000
get	util get	0.333333
types format slicing if	types slicer na_rep date_format	0.200000
get the category labels deprecated	core categorical get labels	0.500000
pattern or regular expression in	pat flags	0.052632
casting data from some	numeric index assert safe casting cls data	0.047619
evaluate	op evaluate	0.333333
if we have mixed	indexes multi index have mixed	0.166667
the	io index col convert	0.500000
two indices overlap add suffixes to	overlap	0.047619
holiday falls on sunday use day thereafter	sunday to	0.200000
over the blocks collect and	axis consolidate transposed	0.062500
group return result as series or by a	by axis level	0.045455
decorator to take optional	util optional args decorator	0.083333
locator based on	plotting pandas auto date locator get locator	0.062500
string-like and string-like array	string	0.018868
obj and kwargs	obj	0.033333
from a row element	parse	0.034483
guarantee the shape of the values to be	values ndim shape	0.083333
url has a valid	url url	0.045455
:class packer for	io msgpack	0.025000
to create the grouper indexers	grouper	0.058824
set the dataframe index	core data frame set index	0.333333
new block manager	block manager reduction f axis	0.250000
seconds (>= 0 and less than 1	core indexes timedelta index seconds	0.066667
sorted by the n smallest	nsmallest n	0.333333
of a frame	core data frame	0.005917
an internal format currently just the ndarray	core block internal values dtype	0.111111
flattened values of	index ravel order	0.037037
right data	right vertical	0.250000
return datetimeindex	core	0.001326
datetimeindex with times to midnight length is unaltered	index normalize	0.125000
return valid other evaluate or raise typeerror	other op opstr	0.500000
sets names	index set names names level validate	0.200000
a row cross-section from the sparsedataframe as	core sparse sparse data frame xs key axis	0.166667
pathlib path	stringify path filepath_or_buffer	0.142857
return an ndarray of the flattened values	ravel order	0.037037
panel along minor axis parameters	panel minor xs key	0.500000
in	io hdfstore append	0.016667
nan_rep	nan_rep	1.000000
element pandasobject	core	0.001326
arg is a passed in	arg errors	0.026316
tree-like	build	0.013514
return an object with matching indices to	ndframe reindex like other method copy limit	0.111111
of	multi	0.018182
shift without copying data the shifted data will	core ndframe slice shift	0.083333
a new block	core block	0.032609
correct day for each date	roll	0.142857
compatibility with the data	data	0.009709
manager for running code that expects to	util assert produces warning expected_warning filter_level	0.071429
attempt to construct this type from a	dtypes interval dtype construct from string cls	0.166667
generic moving	apply arg window	0.500000
and string-like array to convert object	convert string to object values	0.142857
get integer location for requested label	index get loc key method	0.500000
perform generic binary operation with optional	core series binop other func level	0.333333
nat-like arg is a passed in	arg errors	0.026316
wrap	io wrap	1.000000
defined as	multi index view cls	0.047619
union of two	multi index union other	0.066667
provides a resample	datetime index resampler	0.066667
making this object picklable	indexes datetime index setstate state	0.333333
the 'numpy' library the third	with convert convert	0.055556
datetime index with custombusinessday as	core indexes cdate range start	0.083333
a view of	view	0.043478
compute count of group excluding missing values	core data frame group by count	0.500000
an item pair from maps[0] raise keyerror is	compat chain map popitem	0.055556
get my plane axes indexes these are already	core panel get plane axes axis	1.000000
1-dimensional ndarray only use this if	value arr	0.023810
type window_type and size window on the data	stats rolling window arg window win_type min_periods	0.100000
of kwargs suitable for initializing or updating-on-copy	kwargs cls	0.040000
for accumulating data to	list	0.034483
round the fractional part of	core reshape round frac x precision	0.200000
align a set	computation align	0.250000
index and plural 'names'	indexes index validate names name names deep	0.071429
given an	indexes get	0.125000
of the values to be at	block shape values	0.050000
box function to get object	datetime index ops mixin box func	0.142857
a tree-like object that can	parser build	0.014706
dataframe	core data frame	0.159763
moving window of type window_type on the	window apply window mean how	0.166667
return dense representation of ndframe as opposed to	core ndframe to dense	0.111111
already	key value	0.011628
ndarray of	index	0.002004
create and setup my atom from the block	io data col set atom block	0.200000
the block manager from a dataframe of	manager sdf	0.052632
if the passed type is an actual dtype	extension dtype is dtype cls dtype	0.111111
the float values converted into strings using	io formats float	0.055556
take	sparse sparse array take	1.000000
return a slice of my	datetime tzblock slice slicer	0.083333
passed type is an actual dtype	is dtype cls dtype	0.043478
return	core indexes interval index	0.062500
called upon unpickling rather than	index cls d	0.083333
of group excluding	frame group by	0.500000
supported for panel objects	panel to	0.027027
sort multiindex at the requested level	indexes multi index sortlevel level	0.250000
new datacol with the block i	col create for block cls i name cname	0.333333
from passed panel or object coercible	update other join overwrite filter_func	0.055556
slice the info axis of	get info slice	0.500000
series based on type and coerce into matrices	arrays to mgr arrays arr_names index columns	0.250000
value from 1-dimensional ndarray only use this	core indexes index set value arr key value	0.038462
purely label-location	loc	0.040000
axis equal	core ndframe rank axis	0.250000
that path's extension	writer check extension	0.250000
to midnight length is unaltered	core indexes datetime index normalize	0.125000
dataframe	core	0.001326
return a fixed frequency timedelta index with day	core indexes timedelta range start end periods	0.083333
a temporary variable to	tmp value	0.166667
apply function to all values found in index	core transform index index func level	1.000000
was a pathlib path	io stringify path filepath_or_buffer	0.142857
by	groupby by	0.250000
we do need a multi reindex this is	core series needs reindex multi axes method	0.333333
ndarray or	index columns	0.028571
times to midnight length is	indexes	0.004651
a locale without throwing an exception	locale lc	0.500000
unit if needed otherwise return from the	unit	0.066667
for a tz-aware type	io get tz tz	0.066667
of the _apply kwargs	name window center	0.071429
indices where elements of v should be inserted	searchsorted v	0.033333
return a basegrouper which is an	get	0.007143
sort multiindex at	indexes multi	0.014493
return result as block	getitem block	0.250000
rangeindex	core indexes range index	0.042553
create a new unit if needed otherwise return	dtypes datetime tzdtype new cls unit	0.055556
repr of this	core indexes period index	0.034483
the op string for	bin op generate	0.066667
labels	core get compressed ids labels	1.000000
index with custombusinessday as	indexes cdate range start end	0.083333
table in file node	io hdfstore append key	0.016667
then fill	core dtypes maybe fill	0.500000
key value pairs to dataframe	data frame from items cls items columns orient	0.500000
see dataframe pivot	core reshape pivot index columns values	0.333333
temporary variables in this	ntemps	0.111111
can	io	0.003012
curve with holidays between start_date and end_date	calendar holidays start end return_name	0.066667
a	build	0.013514
list representing the totally ordered cartesian product	index labels shape sort xnull	0.066667
to class python 2	cls	0.016949
dataframe parser that uses beautifulsoup under the	beautiful soup html5lib frame parser	0.166667
the levels attribute is 1 or	table is multi index	0.142857
provides a	resampler	0.053571
after	core series	0.008000
feather-format	read feather	0.083333
copy	index dtype copy	0.043478
write a dataframe to	data frame to	0.037037
group	core series group by	0.142857
arg is a passed	arg	0.018868
and return the block manager from a dataframe	to manager sdf columns index	0.052632
have a	ordered cls	0.055556
process of casting data from	numeric index assert safe casting cls data	0.047619
and return the block manager from a	core sparse to manager sdf	0.052632
stata date formats to a type in	datetime to stata type	0.200000
clip	clip	1.000000
index with requested level removed if multiindex has	indexes multi index droplevel level	0.333333
update index attributes e g freq depending	core indexes datetime index maybe update attributes	0.200000
raised	util assert raises contextmanager	0.200000
of value from 1-dimensional ndarray only use	period index get value series	0.071429
validates that	validate ordered	0.055556
return a list of normalized locales	locales locales normalize	0.200000
/ or columns using	inplace	0.027778
nat which has the same length	ops mixin nat new box	0.050000
this if you	arr	0.013699
make sure an expression is not an empty	computation check expression expr	0.200000
if the process of casting data from some	casting cls data	0.047619
index and	index	0.002004
internal property	core	0.001326
ordered	ordered inplace	1.000000
convert freq with decimal	decimal	0.058824
year	year	0.750000
the array interface return my values	categorical index array dtype	0.125000
return index or ndarray filled with	indexes datetime index	0.007634
of casting data from	casting cls data	0.047619
comparison operations to convert datetime-like to	index cmp opname nat_result	0.066667
a la numpy percentile	q interpolation	0.500000
lookup of value from 1-dimensional ndarray	core indexes datetime index get value series	0.071429
value from 1-dimensional ndarray only	indexes period index get value	0.071429
handle na filling of take	indexes multi index assert take fillable values	0.250000
rollback	rollback	0.384615
convert timedelta-like	td	0.043478
types format	types slicer	0.200000
never	block	0.008197
a categorical adjusted for groupby	categorical index codes for groupby sort	0.333333
length of this categorical	categorical len	0.500000
dispatch to apply we	group by mixin apply	0.050000
bool of a single element	ndframe bool	0.055556
compute variance of groups excluding missing values	var ddof	0.166667
string cast it	maybe cast	0.100000
object for datetimelike properties of	period properties	0.052632
version to operate on as	core block try operate values	0.125000
and return an item pair	popitem	0.043478
delimiter string starting at the end of the	rsplit arr pat	0.037037
coerce to the new type	dtype copy errors values	0.250000
column from the table this is	key	0.005051
must already exist and	key value	0.011628
of the values to be at least	shape values ndim	0.050000
table in file node must already exist and	hdfstore append key value format	0.016667
to capture stderr in	capture stderr f	0.055556
check all axes except items	core block manager is indexed like other	1.000000
float values converted into	float	0.024390
load msgpack pandas object from the specified file	io read msgpack path_or_buf encoding iterator	0.200000
parse specified	excel file parse	0.125000
particular time of day e g 9 30am	time time asof	0.142857
of type window_type on the	mean how	0.166667
ufunc needs additional handling as	index array wrap result context	0.034483
overrides ndarray argsort argsorts the value	core series argsort	0.083333
the blocks collect and	axis consolidate transposed	0.062500
dataframe major_axis for	ndframe iteritems	0.055556
in file node must	append key	0.016667
axes compute the expected nrows	nrows expected	0.142857
package	package pkg_name min_version max_version	0.083333
index and plural 'names' parameter	core indexes index validate names name names deep	0.071429
return an attributes dict	indexes index get attributes dict	0.250000
return a slice	block slice slicer	0.083333
each input to appropriate for table	table	0.010870
and	io hdfstore append key	0.016667
convert to our native	to native	1.000000
format as dataframe	core panel to frame	0.125000
symmetric difference of two index objects	indexes index symmetric difference other result_name	0.166667
returns numpy array of python datetime date objects	core indexes datetime	0.011494
comparable timezone both for	indexes datetime index timezone	0.200000
whether 'kwargs'	fname kwargs compat_args	1.000000
value is found	ops mixin isin values	0.333333
the bool of a single element	bool	0.043478
from datetime to sif http //www	io datetime to	0.125000
of interval objects parameters	indexes interval index	0.062500
return a tree-like object that	frame parser build	0.014706
simple cross-tabulation	core reshape crosstab index columns	0.066667
and return the block manager from a dataframe	core sparse to manager sdf columns	0.052632
take which sets nan	take nd	0.047619
in the numeric add/sub methods	index add numeric methods	0.500000
of type t or tuple	is type t	0.083333
iter1 iter2 iterables that produce elements comparable	assert copy iter1 iter2	0.166667
the categorical instance if	core categorical	0.013889
index names to	default names data	0.083333
value from 1-dimensional ndarray only	period index get value series	0.071429
codes by the indexer fill	nd indexer	0.015152
that can be used to iterate	html frame parser build	0.014706
representation for a particular dataframe	data frame repr	1.000000
the set of unique elements of arr1 and	equal contents arr1	0.066667
categorical by	core categorical sort values inplace	0.166667
defined as	indexes multi index view cls	0.047619
recursively evaluate an expression in python	computation bin op call env	0.250000
value from 1-dimensional ndarray only	indexes period index get value series	0.071429
can be used to iterate	build	0.013514
string-like array to convert	convert string to	0.250000
return the block manager from a dataframe	to manager sdf columns index	0.052632
columns for dataframe major_axis for	ndframe iteritems	0.055556
convert a numpy / pandas type	type x	0.055556
file node must already exist	io hdfstore append key	0.016667
info for this indexable	io index col update info info	0.090909
out the binary feather-format for	frame to feather fname	0.083333
determine if each string	match arr pat case	0.166667
values between	index indexer between	0.125000
latex tabular/longtable environment output	formats latex formatter write result buf	0.200000
cast it	cast	0.058824
to handle na filling of take	index assert take fillable values indices allow_fill fill_value	0.250000
whether each index value	index ops	0.033333
the series	core series	0.024000
package is installed	package pkg_name min_version max_version	0.083333
check if we're running in an	core in	1.000000
with labels in	labels	0.038462
in place using non-na values from passed series	core series update other	0.500000
the operations to the cls evaluate	numeric operations cls	0.090909
expanding count of number	expanding count arg freq	0.200000
select values at particular time	at time time asof	0.066667
a timegrouper and return our	resample obj kind	0.083333
exception	parser	0.008000
that has a single	core simple blockify tuples	0.125000
needs additional handling	core indexes period index array wrap result	0.050000
to coerce a scalar	period index coerce scalar	0.250000
can be used	io html frame parser build	0.014706
function is called via the 'numpy' library	take with convert convert	0.055556
function for series arithmetic operations	comp method series op	0.333333
an implementation for the aggregators	aggregate arg	0.071429
construct dataframe from	core data frame from	1.000000
don't allow a multi reindex on panel or	core panel needs reindex multi	0.500000
and be	value	0.005155
repr function return fillvalue for	repr fillvalue	0.083333
of object to	core ndframe to	0.040000
to the end of this frame	data frame	0.005714
csv file (discouraged please use :func	from csv cls path header	0.066667
take the codes by the indexer fill with	core categorical take nd indexer allow_fill	0.333333
sliceable	sliceable	1.000000
return a basegrouper which is	get	0.007143
by hashing its categories and	c encoding hash_key	0.200000
a fixed	range start end periods	0.133333
according to indexer and	indexer axis	0.043478
each string in the series/index	core str repeat arr	0.045455
expression as a	expr	0.050000
return a slice of my values	datetime tzblock slice slicer	0.083333
return resolution str against resolution code	tseries resolution get reso cls	1.000000
fast lookup of value	core indexes index set value arr key value	0.038462
uint64 ndarray of my hashed values	indexes multi index hashed values	0.166667
if we will be using numexpr	core computation can use numexpr op op_str	0.333333
that left and right index are equal	assert almost equal left right check_exact check_dtype	0.333333
returns axes	axes	0.043478
td elements from a	parse td obj	0.083333
defined as a copy	index view cls	0.047619
positional	has valid positional	0.250000
evaluate and	evaluate	0.111111
returns numpy array of python datetime date	datetime	0.006711
return packed	msgpack packb	0.025641
fast	index set	0.022727
the counts	counts	0.111111
the	io html frame parser build	0.014706
j do not	j	0.034483
kwargs	kwargs	0.155556
returns *copy*	frozen ndarray values	0.250000
the 'numpy' library the	take with convert convert	0.055556
try to connect	util can connect	0.111111
unicode normal form	string methods normalize form	0.066667
holidays between	calendar holidays	0.166667
for dataframe and major_axis for	core	0.001326
an item pair from maps[0] raise keyerror	chain map popitem	0.055556
object that can be used to iterate	frame	0.009091
return the number of bytes in the	index nbytes	0.052632
index	core indexes interval index	0.062500
for	indexes	0.004651
specialized intersection for	index intersection	0.142857
timeseries to specified frequency	core ndframe asfreq freq method	0.250000
intersection of two index objects sortedness	index intersection other	0.052632
arg is	arg errors	0.026316
pack object o and return	io msgpack packb o	0.055556
the set of unique elements of arr1	util equal contents arr1	0.066667
passed type is	is	0.015873
the array interface	array result	0.125000
an array of deterministic integers	array vals encoding hash_key categorize	0.250000
deprecated use categorical instead	core categorical from array cls data	1.000000
core	core	0.006631
render the built up	formats styler render	0.142857
return	io html frame parser	0.012195
if multiindex has only 2	indexes multi	0.014493
new block if not	core block	0.010870
value occupying requested label default to specified missing	label default	0.083333
this if you	core indexes index set value arr key	0.023810
the block manager from	sparse to manager sdf	0.052632
maximum value of the index	datetime index	0.007042
result block from	block	0.008197
after a	core indexes period index array wrap result	0.050000
use this if you	set value arr key	0.023810
convert string 'r' to a timedelta object	tools coerce scalar to timedelta type r	0.500000
representation	offset	0.055556
exception raised matches the expected exception	assert raises contextmanager exception matches	0.142857
sort multiindex	multi	0.018182
attribute	series	0.006757
read csv file	data frame from csv cls path header	0.066667
already exist	key	0.005051
return a tree-like object that can	html frame	0.014706
sanitize input data	core sanitize array data	0.250000
union of two multiindex	indexes multi index union other	0.066667
set my pandas type	io fixed set object	0.200000
set of sparseseries (with nan fill_value)	core sparse	0.041667
is of	core dtypes is	0.063830
create/cache the indexables if they don't exist	indexables	0.125000
they are valid stata	io stata	0.071429
dateoffset to	offset	0.055556
attempt to construct this type from a	core dtypes interval dtype construct from	0.166667
node must already exist and be	format	0.012346
running code that expects to raise or not	util assert produces warning expected_warning	0.071429
my values cols	table values cols	0.200000
must already exist and	value	0.005155
compute variance of	core resampler var ddof	0.200000
returns the float	float array formatter get result	0.055556
str against	str cls	1.000000
packed bytes see :class	io	0.003012
return	core series	0.008000
we have an object dtype try	dtypes maybe	0.166667
that left and right dataframe are equal	frame equal left right	0.333333
over the dom	build doc	0.125000
index objects and sorts	range index	0.021739
block manager from	to manager sdf columns	0.052632
where elements of v	indexes frozen ndarray searchsorted v	0.033333
create a new	tzdtype new cls	0.333333
of	reshape	0.037037
file node must already exist and	io hdfstore append key value	0.016667
name or names of the axis returning self	set axis name name axis	1.000000
convert	io convert	1.000000
return boolean series equivalent to left	left	0.018519
index objects contain	core indexes range index	0.021277
coerce a scalar to a compat for	coerce scalar to	0.071429
multiindex compute the slice	core indexes multi index slice	0.250000
a string-like that is object dtype	string array	0.038462
nth	nth	1.000000
of tuples of the (attr formatted_value)	core indexes index format attrs	0.142857
that left and right dataframe are equal	frame equal left right check_dtype check_index_type	0.333333
function to a	func	0.023810
gets	array	0.041667
of putmask that potentially upcasts the result parameters	core dtypes maybe upcast putmask result mask	0.200000
a particular object	core dtypes extension dtype repr	0.142857
wrap comparison operations to convert timedelta-like to timedelta64	td index cmp	0.055556
returns the float values	float array formatter	0.055556
nice str repr of our rolling	core window unicode	0.071429
the reduction type operation if we	core index ops mixin reduce op	0.083333
box function	mixin box func	0.142857
packed bytes see :class	msgpack	0.022222
multirow e	formats latex formatter format multirow	0.250000
manager for running code that expects to	util assert produces	0.071429
return the values & release	col take data	0.055556
add in the datetimelike methods (as we may	indexes datetime index ops mixin add datetimelike methods	0.333333
category value returning	inplace ascending na_position	0.071429
spreadsheet-style pivot table as a dataframe	core reshape pivot table data values index columns	0.166667
create a spreadsheet-style pivot table as a dataframe	core reshape pivot table data	0.166667
list representing the totally ordered cartesian product	labels shape sort xnull	0.066667
for datetimelike properties of the series	period properties	0.052632
needs additional handling as	indexes period index array	0.050000
the full scope for use with	computation scope full scope	0.055556
one of the stata date formats to	to stata	0.058824
of datetime time the time part of the	datetime index time	0.166667
add in numeric methods	add numeric methods binary	1.000000
indexer fill with the fill_value	nd indexer allow_fill fill_value	0.250000
format of a given	format dt_str dayfirst dt_str_parse dt_str_split	0.250000
wrapper function for series	core comp method series	0.333333
1-dimensional ndarray only	indexes index set	0.023810
through views note this is *not* the	is other	0.055556
fname are valid	validate kwargs fname	0.250000
style_dict to an xlwt style	xlwt writer convert to style cls style_dict	0.250000
the function	func mgr	0.083333
convert a scipy sparse coo_matrix to a sparseseries	core sparse coo to sparse series a	0.166667
suitable class	hdfstore create storer group format value append	0.333333
unicode strings	util randu	0.500000
elements of arr1 and arr2	equal contents arr1 arr2	0.066667
and returns axes if	axes	0.043478
value inplace	value mgr	0.083333
evaluate the block return result block	block eval func other	0.333333
:class packer for	msgpack packb	0.025641
propagate metadata	ndframe finalize	1.000000
the ftypes (indication	ndframe ftypes	0.055556
the array interface return my values	array dtype	0.125000
read csv file (discouraged please use	from csv cls	0.066667
ndarray raises on	ndarray	0.142857
at particular time of day e g 9	at time time asof	0.066667
a frame	core data frame	0.005917
create a new unit	core dtypes datetime tzdtype new cls unit	0.055556
for series columns	ndframe	0.005025
if the passed type is	core dtypes interval dtype is	0.066667
ensure that we	mixin ensure	1.000000
boolean if we if the passed type is	is	0.010582
we take a string-like that is object dtype	convert string array data encoding	0.038462
over column	data frame	0.005714
from the	from	0.060606
categorical	core categorical	0.083333
header of a table	frame parser parse thead table	0.333333
a date in xport	io sas parse	0.066667
index return new dataframe with labeling information	data frame reset	0.027778
must already exist and be	key	0.005051
of columns excluding na/null values parameters	core data frame	0.005917
of value from 1-dimensional ndarray only use	value	0.005155
a slice of my values	core datetime tzblock slice slicer	0.083333
going to write this as a frame table	multi series table write	0.333333
ufunc needs additional	context	0.023810
data types and ranges supported by stata and	io cast to stata types data	0.333333
write a dataframe	data frame	0.005714
generified fixed version	generic fixed	0.333333
concatenation of an	core dtypes concat	0.100000
fast lookup of value from 1-dimensional	index set value arr key value	0.038462
cumulative max for	cummax axis	0.500000
panel objects and	panel to sparse	0.037037
the diff	diff n	0.333333
beginning of period	date offset beg	0.166667
infer this column from	index col infer handler	0.200000
the index	core indexes datetime index	0.015267
string in the series extract groups from	str extract frame	0.047619
a string-like that is object dtype and coerce	convert string array data encoding	0.038462
is a valid	valid	0.071429
string in the series extract groups from the	extract frame arr	0.047619
check that left and right panels are equal	panelnd equal left right check_dtype check_panel_type	0.333333
of this object names dtype	names dtype	0.500000
explanation	table plotter	0.125000
determines if two index objects contain the	datetime index ops mixin equals other	0.200000
validates	categorical	0.009615
perform the reduction type operation	index ops mixin reduce op name axis skipna	0.083333
my hashed values	core indexes multi index hashed values	0.166667
its label	label	0.028571
names etc' nentries - number of entries in	nentries nlevels prefix names	0.100000
the union of two multiindex objects sorting	indexes multi index union other	0.066667
make sure an expression is	core computation check expression expr	0.200000
dataframe the	data values	0.062500
table in file node	hdfstore append key value	0.016667
sanitize input	sanitize array	1.000000
a new categorical by	core categorical sort	0.166667
the indexer fill with	nd indexer allow_fill	0.050000
convert tz-aware axis to target time	ndframe tz convert tz axis level	0.200000
result set coerce the	dtypes coerce	0.066667
style_dict to an xlsxwriter format	io xlsx writer convert to style style_dict num_format_str	0.166667
we have a valid ordered parameter	core categorical validate ordered cls ordered	0.058824
day (e g 9 00-9 30 am)	time start_time end_time include_start include_end	0.200000
sanitize input data to an	core sanitize array data index dtype	0.250000
replace extra whitespace inside of	remove whitespace s regex	0.200000
are index sliceable then return my slicer	to index sliceable obj key	0.083333
and 'kwargs' should	func method args kwargs	0.142857
after	core indexes index	0.007042
ngroups	ngroups	1.000000
and dtype)	core ndframe	0.005051
from 1-dimensional ndarray only use this	set	0.012195
with nat which has	ops mixin nat new	0.050000
convert the whole block as one	core single block manager convert	1.000000
parameter for general index	core indexes index validate names	0.066667
compute	reshape	0.037037
matches the expected exception and	exception matches	0.500000
ndarray of the flattened values of the underlying	core indexes index ravel order	0.037037
dispatch to apply we are stripping all	group by mixin apply	0.050000
node in its entirety only - where	fixed delete where start stop	0.333333
sets the view limits to	plotting time series date locator autoscale	0.055556
data in the form	data	0.009709
return fillvalue	fillvalue	0.071429
tree-like object that can	io	0.003012
scalar to a compat for our index type	scalar to index item	0.333333
statement that create a table reflecting	table create table setup	0.066667
this if you	core	0.001326
return a list of the underlying data	core indexes datetime index ops mixin tolist	0.333333
ndarray only use this if you	indexes categorical index	0.047619
from observed group ids	core decons obs group ids comp_ids obs_ids shape	0.500000
decimal	decimal	0.294118
and the index	index	0.002004
nat which has the same length	mixin nat new box	0.050000
of terms for instances of	terms	0.034483
sure that time and	time	0.052632
unordered list of the keys corresponding	keys	0.032258
return the block manager from	to manager sdf columns index	0.052632
appropriate class of series concat	get series result type result	0.250000
the length of the series	core series len	0.333333
parse	core tools parse	0.125000
return the number of bytes in the underlying	index nbytes deep	0.052632
values between	between	0.086957
internal method to handle na filling of take	take fillable values indices allow_fill fill_value	0.250000
fixed frequency timedelta index with day	indexes timedelta range start end periods	0.083333
helper function to determine if dtype is valid	is valid dtype n method dtype	0.142857
object o and return	io msgpack packb o	0.055556
to accelerate unioning a collection	datetime index union many others	0.040000
gets called	array	0.041667
via the 'numpy' library	take with convert	0.055556
provides a resample of	period index resampler	0.062500
specified frequency	core ndframe asfreq freq method	0.250000
keys that are not in	keys fname	0.200000
return a fixed frequency timedelta	timedelta range start end	0.333333
fast transform path	ndframe group by transform fast	0.333333
the best locator based	locator get locator	0.062500
only use	core indexes	0.004762
define an builtin function for this argument return	builtin func	0.200000
guess generated by infer_freq	core indexes datetime index ops mixin inferred	1.000000
return boolean indicating if self is view of	is view	0.100000
date objects (namely the date	date	0.040000
string-like and string-like array to convert	convert string to	0.250000
specialized intersection for	datetime index intersection other	0.142857
that can	html frame	0.014706
read csv file (discouraged please	core series from csv	0.066667
:class packer for	io msgpack packb	0.025641
types format	types slicer na_rep	0.200000
shape	shape	0.380952
fast	value	0.005155
of unique elements in the	nunique dropna	0.125000
alert a user about a malformed row	alert malformed msg	0.500000
that we have good categories	categories fastpath	0.250000
read csv file	from csv	0.066667
interp1d method is scipy's kind	wrapper x y new_x method	1.000000
via the 'numpy' library	compat numpy validate take with convert	0.055556
return a new manager with the	core block manager	0.022727
other to int64	other	0.013514
dtype from a scalar parameters	dtypes infer dtype from scalar	0.500000
block manager from a dataframe of series	sparse to manager sdf	0.052632
datetime date objects (namely the	datetime index	0.007042
retrieve the metadata	metadata handler	0.500000
retrieve the metadata for	read metadata handler	0.500000
str against	cls	0.016949
of	core reshape crosstab index columns values	0.066667
values to	core block shape values ndim	0.050000
a	validate ordered cls	0.055556
if a url has a valid protocol	io is url url	0.047619
hierarchical index labels returning a dataframe	core data frame	0.005917
from 1-dimensional ndarray	index set value arr	0.023810
run the same function multiple times	num_threads kwargs_list	0.050000
underlying data which	index values	0.111111
datetime date objects (namely the date	indexes datetime index date	0.333333
reset the display options for printing	util reset display options	0.200000
of two or more factors by default	crosstab index columns values rownames	0.333333
true if hash obj will succeed false otherwise	is hashable obj	1.000000
a sparseseries	a	0.055556
timedelta-like to timedelta64	indexes td	0.055556
convert series to	series to	0.666667
package	package pkg_name min_version max_version app	0.083333
sets names on levels	indexes multi index set names names level validate	0.200000
to a json string	to json path_or_buf orient date_format double_precision	1.000000
datetime index with custombusinessday as the default	indexes cdate range start end	0.083333
over the blocks collect	consolidate transposed	0.062500
this if you	indexes index set value arr	0.023810
using the interpolate machinery	core block interpolate with fill method axis inplace	0.200000
delegatedclass of a series that is datetimelike (e	core indexes maybe to datetimelike data	0.142857
data	index	0.006012
via the 'numpy' library the	numpy validate take with	0.055556
fixed frequency datetime index with business day	core indexes bdate range start	0.083333
exception that is thrown by an	parser	0.008000
mode s of the	core series mode	0.083333
names etc' nentries - number of	nentries nlevels prefix names	0.100000
datetime index with custombusinessday as	core indexes cdate range start end periods	0.083333
with with the index api sort the index	core indexes index sortlevel level ascending sort_remaining	0.250000
determine if	str match arr pat case	0.166667
csv file (discouraged please	csv cls	0.066667
name this allows	name	0.025000
the index's frequency	core ndframe tshift periods freq axis	0.066667
moving variance	var bias	1.000000
a slice of myself	slice slicer	0.017544
return a boolean whether this axes needs validation	indexer should validate	0.166667
data	core data	0.041667
if we have bytes decode them to unicode	computation ensure decoded s	0.166667
the info_axis	core ndframe dir additions	0.166667
defined as a copy	multi index view cls	0.047619
the reduction type operation	index ops mixin reduce op name axis skipna	0.083333
an positional indexer cannot enlarge its target	indexer has valid positional setitem indexer indexer	0.052632
file node must already exist and be	append key	0.016667
string in the series extract groups from	core str extract frame	0.047619
called after a	indexes period	0.034483
to its values attribute	core series	0.008000
convert to object if we are a categorical	to safe for reshape	0.200000
plot attribute for groupby	by plot	0.062500
that	assert	0.142857
datetimelike	datetime	0.006711
to dataframe in	data frame	0.005714
that has a single dtype if dtype	simple blockify tuples dtype	0.111111
highlight the maximum by	highlight max subset color	0.333333
of nanoseconds (>= 0 and less than 1	core indexes timedelta index nanoseconds	0.066667
index of first occurrence of maximum of values	core series idxmax axis skipna	1.000000
list of the inferred types one for	index inferred type levels	0.111111
compute count of group excluding missing	frame group by count	0.500000
masked rec array and create the manager	masked rec array to mgr	0.500000
layout some dataframes in	table	0.010870
infer	infer	0.750000
the passed type is an actual dtype that	core dtypes period dtype is dtype cls dtype	0.142857
build	io build	1.000000
of value from 1-dimensional ndarray only use this	indexes period index get value	0.071429
file node must	key	0.005051
frequency conversion method for series/dataframe	asfreq obj freq method how	0.500000
the boolean criterion specified by	ndframe group by filter	0.200000
provides	timedelta index	0.045455
best locator based on	get locator	0.062500
a deprecated option if key is deprecated	deprecated option key	0.333333
and 'kwargs' should be	func name args kwargs	0.166667
return frequency code group of	group	0.027027
x not in y if possible otherwise use	computation not in x y	0.066667
create and return the block manager from	core sparse to manager sdf	0.052632
function or functions	ndframe rename axis mapper axis	0.333333
given a tuple	indexes multi index get	0.100000
to construct this type from a	interval dtype construct from string cls	0.166667
datetimeindex with	indexes datetime	0.011494
intersection of two index objects sortedness	core indexes range index intersection other	0.083333
we require	simple new cls	0.250000
v should	ndarray searchsorted v	0.033333
block s from	block where other cond align raise_on_error	0.066667
resolution	tseries resolution	0.333333
1-dimensional ndarray only use this if	index set value arr key	0.023810
compat with blockmanager	core single block manager blknos	1.000000
a copy	core indexes multi index copy	0.166667
tree-like object that can be used to iterate	html frame	0.014706
converts input into a pandas only dtype object	pandas	0.035714
from google bigquery	gbq query project_id index_col col_order	0.250000
a boolean if we need	indexes index is	0.100000
that we have a valid ordered parameter	ordered	0.017857
compat we are always our own	categorical base	0.500000
we have a valid ordered parameter if	ordered	0.017857
lookup of value from 1-dimensional ndarray only use	core indexes period index get value series key	0.071429
write records stored in a	name if_exists	0.500000
on given axis omitted where alternately any or	axis how thresh subset	0.100000
we have bytes decode them	computation ensure decoded s	0.166667
view limits to the	plotting time series date locator autoscale	0.055556
raise a helpful message about our construction	construction error tot_items block_shape axes e	0.333333
expanding count of	expanding count arg freq	0.200000
complevel	complevel	1.000000
get all the	get	0.007143
left and right index are equal	almost equal left right check_exact check_dtype	0.333333
the ftypes (indication of	ftypes	0.043478
idxmax	idxmax	1.000000
convert timedelta-like to timedelta64	td	0.043478
read csv	data frame from csv cls path header sep	0.066667
read csv	core data frame from csv cls path header	0.066667
'args' and	compat numpy validate groupby func name args	1.000000
new dataframe with	core data frame reset	0.027778
that we all have the	dtype	0.010989
the underlying	ops mixin	0.033333
of the _upsample kwargs and	by mixin apply f	0.166667
holidays between	tseries abstract holiday calendar holidays	0.166667
a particular dataframe invoked by unicode df	frame unicode	0.166667
input numpy dtype	core ndframe astype dtype copy	1.000000
this if you	core indexes index set value	0.023810
'numpy' library	validate take with convert convert args kwargs	0.055556
must	append key value format	0.016667
with integer stride	stride	0.125000
dtype is of the timedelta64[ns] dtype	is timedelta64 ns dtype	1.000000
first element of the underlying data as	core index ops mixin item	0.333333
node must already exist and be table	io hdfstore append key	0.016667
left and right dataframe are equal	frame equal left right	0.333333
the built up styles to	io formats styler	0.021277
but cannot append to : write out the	write	0.017857
the fill value for the nan/nat from	fill value val	0.142857
we opened it	io to hdf path_or_buf key value	0.166667
exist and	value	0.005155
of a series excluding elements from groups	core series group	0.030303
draw histogram of the dataframe's series	hist frame data column	0.200000
this object close it if we opened it	io to hdf path_or_buf key	0.166667
mask of index to be returned	index b	0.041667
lookup of value from 1-dimensional ndarray only	value	0.005155
unaltered	datetime index normalize	0.125000
casting data from some	assert safe casting cls data	0.047619
if attempting	unsupported function	1.000000
slice	key	0.005051
freq with decimal stride into	decimal	0.058824
one of the stata date formats to	io convert datetime to stata	0.111111
starting at the end of the	rsplit arr pat	0.037037
a full length slice	full slice	0.333333
on saturday use following monday instead	next monday dt	0.250000
dataframe in panel to a	panel to	0.027027
op_str	op_str	0.833333
true if this is a valid column name	is	0.005291
gets called	core indexes period index array	0.050000
index names	default names data	0.083333
of sql statement that create	io sqlite table create	0.066667
the boolean criterion specified by func	core ndframe group by filter func dropna	0.250000
description	description	0.857143
dispatch to apply we	mixin apply func name	0.050000
warning will be produced using msg	msg rkey removal_ver	0.500000
according to indexer and return	nd indexer	0.030303
are index sliceable then return	convert to index sliceable obj	0.083333
called after a	array	0.041667
float values converted into	float array formatter	0.055556
that we	core categorical validate	0.055556
lengths	lengths	1.000000
cartesian product of all possible label	index labels shape sort	0.200000
specialization that converts fixed-width fields into dataframes	fixed width field parser	1.000000
for	sparse sparse array	0.043478
attempt to coerce any object types to better	core object block convert	0.083333
gets the mode s	frame mode	0.333333
if the passed type is an	is	0.005291
ndframe	core ndframe	0.005051
extended euclidean algorithms to solve bezout's identity	index extended gcd a b	1.000000
read csv file (discouraged please use	data frame from csv cls path header sep	0.066667
difference of n between self analagoust	n axis	0.100000
(e	core indexes maybe	1.000000
whether each index value is found in	core indexes datetime index ops mixin isin	0.083333
new categorical	core categorical	0.013889
if we have	core indexes multi index have	0.142857
can be compiled into a regex pattern instance	re compilable	1.000000
deal with nat-like arg is a passed	arg errors	0.026316
for making this object picklable	index setstate state	0.333333
correct class for resampling with groupby	resampler for grouping groupby	0.333333
the index and	core indexes index	0.007042
csv file (discouraged please	from csv cls	0.066667
the codes by the indexer fill with	nd indexer	0.015152
multi-level index return new dataframe with	core data frame reset	0.027778
tree-like object that	frame parser	0.012500
binary dta files from array-like objects	fname convert_dates write_index encoding	0.500000
op_class	op_class	1.000000
file node must already exist and be	key	0.005051
apply mapper function to its	map mapper	0.125000
of transform only applicable to	series group by transform	0.250000
for	group by	0.016129
index or	indexes datetime index ops	0.034483
after regular attribute access try looking up the	getattr	0.142857
ipython	ipython	1.000000
or columns of dataframe	axis	0.011364
if we	mixin is	0.166667
return if	core	0.001326
file node must already exist	append key value format	0.016667
a fixed frequency datetime index with business day	indexes bdate range start	0.083333
the flattened values of the underlying data	core indexes index ravel order	0.037037
see if a url has	url url	0.045455
to table in file node	hdfstore	0.014925
add numeric	by add numeric	1.000000
a "pivot" table) based on column values	pivot index columns values	0.200000
string	index parsed string	0.500000
return a	frame parser build	0.014706
a compatiable fill_value and	fill_value	0.033333
offsets index	apply index i	0.500000
a version to operate on as the	block try operate values	0.125000
datetime index	core indexes	0.009524
return a html	html	0.011765
series to dataframe in specified	core data frame set item key	0.250000
gets called after a	core indexes	0.009524
check if we are a view have	core ndframe check is	0.200000
panels	panels	0.714286
we are index sliceable then return	index sliceable obj	0.083333
fast	set value arr	0.023810
function to be applied on each value to	array formatter value formatter float_format threshold	0.100000
if we are datetime arraylike / datetimeindex	dtypes is datetime arraylike arr	1.000000
we have a null	core is null	1.000000
update index attributes e g freq depending	core indexes timedelta index maybe update attributes attrs	0.200000
dataframe to	data frame formatter to	0.083333
and create the manager	to mgr	1.000000
attempt to infer better dtype for object	convert datetime numeric timedelta coerce	0.071429
a style_dict to an xlwt style object	xlwt writer convert to style cls style_dict	0.250000
add series to dataframe in specified	data frame set item key	0.250000
arr1 and	arr1	0.050000
decoded	decoded	1.000000
handling	core indexes	0.004762
if it	core series	0.008000
validate that an positional indexer cannot enlarge	ndframe indexer has valid positional setitem indexer indexer	0.052632
in	hdfstore append key value	0.016667
tree-like object that can	parser build	0.014706
a	index columns values	0.037037
string 'r' to a timedelta object	coerce scalar to timedelta type r unit	0.500000
new dataframe	data frame reset	0.027778
unit if needed otherwise return from the	cls unit	0.125000
return the mode s of the	core series mode	0.083333
a python expression as	expr	0.050000
of bytes in	core indexes multi index nbytes deep	0.052632
helper function	rowlabels collabels	0.333333
to table in	hdfstore append key value format	0.016667
get test result	computation get test result	0.250000
iter1 iter2 iterables that produce elements comparable with	iter1 iter2	0.166667
the	io stata reader	0.142857
error raised when	error	0.028571
wrap comparison operations to convert timedelta-like to	indexes td	0.055556
accessor object for datetimelike properties of	timedelta properties	0.052632
whether or not the 'parse_dates' parameter is a	io validate	0.031250
of seconds (>= 0 and	core indexes timedelta index seconds	0.066667
pickle	pickle	1.000000
cast values to specified type parameters	parser base cast types values cast_type column	1.000000
column	core data	0.041667
boolean if we are a single block and	core block manager is	0.250000
to construct this type	interval dtype construct	0.333333
cssresolver	cssresolver	1.000000
needs additional handling	core indexes period index array wrap	0.050000
get integer location for requested label	get loc key method	0.500000
ensure that an array-like object is a categorical	core dtypes ensure categorical arr	1.000000
if label is not	value label	0.066667
called upon unpickling rather than the	core indexes new datetime index cls d	0.111111
to beginning of period	beg	0.090909
string-like that is object dtype and coerce	convert string array data	0.038462
change string like dtypes to object	core dtypes invalidate string dtypes dtype_set	0.200000
each	frame apply	0.500000
used to iterate	build	0.013514
the reduction type operation	index ops mixin reduce op	0.083333
that can be used to	io html frame parser build	0.014706
a tree-like object that can	html frame	0.014706
comparable timezone both for pytz	index timezone	0.200000
from	core	0.001326
python datetime date	indexes datetime index	0.007634
our	core period index resampler	1.000000
return	ndframe	0.010050
figure with a set of subplots already made	plotting subplots naxes sharex sharey squeeze	0.166667
that left and right index are equal	almost equal left right check_exact	0.333333
ndarray only	value	0.005155
value from 1-dimensional ndarray	period index get value	0.071429
operations to convert timedelta-like	td	0.043478
table in file node must already exist and	io hdfstore append key value	0.016667
to handle na filling of take	multi index assert take fillable values indices	0.250000
a resample of a groupby implementation	datetime index resampler groupby	0.166667
dataframe in panel to a separate excel sheet	core panel to excel path na_rep engine	0.111111
convert timedelta-like	core indexes td index cmp	0.055556
to construct this type from a string	dtype construct from string cls string	0.166667
provide iteration over	iter	0.090909
as	index	0.002004
manager for running code that expects to	util assert produces warning expected_warning	0.071429
comparison between 8 aware arrays	datetime index ops mixin evaluate compare other op	0.250000
index	indexes datetime index maybe	1.000000
of v should be inserted in	indexes frozen ndarray searchsorted v	0.033333
corresponding json_table	io json as json table	0.333333
as series or	axis level	0.125000
an enumerated type or	core factorize	0.200000
simple	crosstab index	0.066667
comparison operations to convert timedelta-like	core indexes td index cmp opname nat_result	0.055556
to connect to the	util can connect	0.111111
a singular 'name' parameter for general index and	core indexes index	0.007042
input values as an enumerated type or categorical	core factorize values sort order na_sentinel	0.111111
fixed frequency timedelta index with	core indexes timedelta range start	0.083333
regular expression	pat case flags	0.166667
multi-level index return new dataframe with labeling information	data frame reset	0.027778
from the table this is generally only useful	io hdfstore select column key column	0.142857
construct an intervalindex from	from	0.030303
padded hexadecimal	core computation raw hex	0.333333
new unit if needed otherwise return	core dtypes datetime tzdtype new cls unit	0.055556
valid other	for numeric binop other op	0.500000
validate that we have a astypeable to categorical	core block is categorical astype dtype	0.333333
string-like that is object dtype and coerce	string array	0.038462
compat with blockmanager	single block manager blklocs	1.000000
levels of both multiindex objects are the	indexes multi index equal levels other	0.100000
in file node must already exist	io hdfstore append	0.016667
if we are index sliceable then return my	convert to index sliceable	0.083333
to compare numeric	core dtypes is numeric v string	0.333333
the	io cparser	1.000000
maps[0] raise keyerror	chain	0.031250
an actual dtype that we	dtype cls dtype	0.250000
validates that we have	categorical validate ordered cls	0.055556
my self as a sparse	as sparse	0.250000
times to midnight length	indexes datetime index	0.007634
type and coerce into matrices	arrays to mgr arrays arr_names index columns	0.250000
the function to	func	0.011905
if we define an builtin function	is builtin func arg	0.333333
to apply	core group by mixin apply func	0.050000
return index or	index ops	0.033333
a series that is datetimelike (e	indexes maybe to datetimelike	0.142857
to convert timedelta-like to timedelta64	core indexes td index cmp opname nat_result	0.055556
perform generic binary operation with optional fill value	binop other func level fill_value	0.500000
ufunc needs additional	period index array wrap result context	0.041667
moving window	core window apply window	0.166667
slow	slow	1.000000
apply function and combine results together in	apply func	0.027027
to a dataframe	sparse sparse data frame	0.058824
in file	key value	0.011628
passed type is an actual dtype that	dtypes period dtype is dtype cls dtype	0.142857
values between particular	ndframe between	0.100000
return the list of row elements from the	io html frame parser	0.012195
maps[0]	map	0.058824
sunday	sunday	0.500000
totally ordered cartesian product	index labels shape sort xnull	0.066667
convert sql	io convert params sql	0.500000
series extract groups from the first match of	core str extract	0.035714
comparison operations to convert datetime-like to datetime64	indexes dt index cmp opname nat_result	0.066667
value inplace return a new block (of	core block setitem indexer value mgr	0.333333
determines if two index objects contain	index ops mixin equals other	0.200000
series excluding elements from groups that	series group	0.030303
series using matplotlib / pylab	data column by grid	0.200000
dict of array-like or	dict cls data orient dtype	0.166667
create a pytables	io table create	0.142857
block in-place with new item value	object block set locs values check	0.125000
a style_dict to an xlsxwriter format object	io xlsx writer convert to style style_dict	0.166667
gets called after a	index array wrap	0.066667
of bytes in the underlying data	range index nbytes	0.052632
an array repr of this	period index	0.024390
want to construct	array	0.013889
compat we are always our own object	core categorical base	0.500000
handle na filling of take	index assert take fillable values indices allow_fill	0.250000
called after	core indexes index	0.007042
actually format my specific types	interval index format native types na_rep quoting	1.000000
called after a ufunc needs additional handling as	result context	0.027027
you	index set	0.022727
trace_back	trace_back	1.000000
the best locator based on	pandas auto date locator get locator	0.062500
kinds allowable columns	table queryables	0.055556
a copy of	core indexes multi index copy	0.166667
handling	indexes	0.004651
return the unicode normal form for	string methods normalize form	0.066667
totally ordered cartesian product of all possible	sort xnull	0.066667
tz-aware type return an encoded zone	get tz tz	0.066667
in vertical/horizontal layout for	table	0.010870
return a fixed frequency datetime	range start	0.066667
block manager from a dataframe	sparse to manager sdf columns index	0.052632
return a slice of myself	categorical slice slicer	0.111111
to the underlying array which	indexes datetime index ops mixin	0.029412
width	width	0.416667
by a series of columns	ndframe groupby by	1.000000
create and return the axes	io table create axes axes	1.000000
particular dataframe invoked by unicode df	core data frame unicode	0.166667
apply	offset apply	0.500000
whether the frame	io formats data frame	0.090909
return a view of	core categorical view	0.111111
the 'numpy' library	validate argmin with	0.200000
new-style classes assumes __getattribute__ exists	simple mock	0.250000
insert	manager insert loc	1.000000
metadata pathname for	table get metadata path	1.000000
that can be used to iterate over the	frame	0.009091
series with	series	0.006757
to convert datetime-like	indexes dt index cmp opname nat_result	0.066667
unit if needed otherwise return from the cache	unit	0.066667
are index sliceable then	to index sliceable	0.083333
of an indexer even when non-unique	index get indexer for target	0.250000
coerces data to ndarray raises on	indexes index coerce to ndarray	0.166667
return a copy of self coded with categories	categorical codes for groupby sort	0.071429
dtype types to stata types returns	dtype to stata type dtype	0.250000
the block manager from a dataframe of	sparse to manager sdf columns index	0.052632
compute the sample skewness	core nanskew values axis	1.000000
via the 'numpy' library	compat numpy validate take with convert convert args	0.055556
localize	localize	0.500000
the block	io data col create for block cls	0.333333
used to iterate	html frame parser build	0.014706
need to coerce a	tseries maybe coerce	0.125000
singular 'name' parameter for general index and	indexes index validate	0.066667
fast lookup of value from 1-dimensional	value	0.005155
to a fixed size	data encoding itemsize	0.142857
the bool of a	ndframe bool	0.055556
pivot	reshape pivot	0.166667
table in file node must	hdfstore append key	0.016667
downsample the	resampler downsample how	0.200000
support fully deleting the node	io	0.003012
after a ufunc	core indexes period index array wrap result context	0.041667
apply we are stripping	by mixin apply	0.050000
return datetimeindex with times to	core indexes datetime	0.011494
to	core	0.002653
return a uint64 ndarray of my hashed	multi index hashed	0.166667
internal method to handle na filling of take	index assert take fillable values indices allow_fill fill_value	0.250000
stacked format as dataframe	panel to frame	0.125000
common post process for each	plotting mplplot post plot logic common ax data	0.333333
cast	io parser base cast	1.000000
box function to	index ops mixin box func	0.142857
the value	value mgr	0.083333
the series/index by the given	core str	0.011364
return index or ndarray filled	core indexes datetime index ops	0.034483
rewrite the assignment	core computation rewrite	0.125000
lookup of value from 1-dimensional ndarray only use	period index get value series	0.071429
the put method	put	0.043478
a ndarray like into a	io json parser	0.071429
return the node with the key	get node key	0.083333
optional	util optional args	0.066667
union of two index objects	index union other	0.037037
labels on	labels labels level	0.250000
underlying	indexes range index	0.021277
to infer better dtype	ndframe convert datetime numeric timedelta coerce	0.071429
returns the float values converted into	io formats float array formatter get result	0.055556
to see if we can	util can	0.250000
to apply	apply func name	0.050000
the index and its underlying	range index	0.021739
its values attribute if	core series	0.008000
trims zeros leaving just one before the decimal	io formats trim zeros str_floats na_rep	0.500000
into long stacked format as dataframe	to frame	0.125000
return the	merge operation get	0.500000
according to indexer	nd indexer axis	0.043478
where is a term or a	where scope_level	0.142857
create a new	core dtypes datetime tzdtype new	0.333333
of two datetimeindexes	sub datelike dti other	0.333333
to midnight	indexes datetime index	0.007634
for each	index	0.002004
moving	apply arg window	0.500000
the file path	path	0.083333
with times to midnight length	datetime	0.006711
returns numpy array of python datetime date	indexes datetime index	0.007634
a timezone	set timezone	0.142857
a	core reshape crosstab index	0.066667
union	union	0.400000
pivot	blocknd values	1.000000
return a	core indexes	0.004762
float values	float array	0.055556
pad strings in the series/index with	core str pad arr width	1.000000
boolean list indicated if we have	core indexes multi index have	0.142857
the dtype from a scalar parameters	infer dtype from scalar	0.500000
underlying data as	index ops mixin	0.019231
be used	parser	0.008000
a tuple of the doc parms	core doc parms cls	0.250000
specified frequency	core ndframe asfreq freq	0.250000
rules	holiday	0.166667
gets called after a	core	0.003979
overlap add suffixes	core items overlap	0.062500
block try to preserve dtype	putmask smart v m n	0.055556
an positional	valid positional setitem	0.250000
to coerce	period index coerce	0.125000
of the sparsearray only the actual sparse values	sparse sparse array	0.043478
the stata date formats to a type	convert datetime to stata type	0.200000
add a str acessor	string accessor	0.250000
out the binary feather-format for dataframes	to feather fname	0.083333
to class python 2 and python 3 compatible	cls name	0.125000
for this argument	arg	0.018868
a slice of my values	categorical block slice slicer	0.083333
value is valid for	value	0.005155
called because a comparison between 8 aware arrays	ops mixin evaluate compare other op	0.250000
location in the	loc	0.040000
new	copy	0.025641
and / or columns using input function or	axis copy inplace	0.055556
label values for requested level	get level values level	0.250000
string starting at the	rsplit arr pat n	0.037037
shape of the values to	values ndim shape	0.083333
group_index is	index group_index sort	1.000000
ufunc needs additional	array wrap result context	0.029412
subset rows or columns	filter items like regex axis	0.166667
make new index	indexes index	0.007353
the node with the key or none	hdfstore get node key	0.083333
used to iterate	frame parser	0.012500
return datetimeindex with times to midnight length	indexes datetime index	0.007634
interpolate	interpolate method axis limit inplace	0.166667
reflecting the structure of a dataframe	setup	0.090909
about a malformed row	malformed msg	0.100000
add the operations to the cls evaluate the	add numeric operations cls	0.166667
additional handling	core indexes period index array wrap result	0.050000
build an xpath expression to	io build xpath expr	0.200000
sort_labels	sort_labels	1.000000
to a compat for our index type	to index	0.166667
function to my values return a	func mgr	0.083333
of x in y if possible otherwise use	core computation in x y	0.047619
setup my atom from	data col set atom	0.333333
handle na filling of take	core indexes index assert take fillable	0.250000
can be used to iterate	io html	0.012987
to create an op	computation op	0.166667
build an xpath expression to simulate bs4's ability	build xpath expr attrs	0.200000
accelerate unioning	datetime index union many others	0.040000
function is called via the 'numpy' library	take with convert convert args	0.055556
object with matching indices to	core ndframe reindex like other method copy limit	0.111111
construct an intervalindex from a	from	0.030303
binary feather-format	frame to feather fname	0.083333
cross-tabulation	core reshape	0.047619
list-like	list like obj	1.000000
via the 'numpy' library the	numpy validate take with convert convert args	0.055556
fast transform path for aggregations	by transform fast	0.333333
string-like array to convert object	maybe convert string to object	0.142857
regular expression pat	pat flags expand	0.200000
string-like that is object dtype and coerce to	string array	0.038462
the number of bytes in the underlying	core indexes multi index nbytes deep	0.052632
only the actual sparse values need to	sparse sparse array	0.043478
holidays between	holidays	0.090909
columns for dataframe major_axis	ndframe iteritems	0.055556
cartesian product of	product	0.111111
convert tz-aware datetimeindex from one time zone	datetime index tz convert tz	0.166667
an enumerated type	core factorize	0.200000
to midnight	indexes datetime	0.011494
determines if two index objects contain the same	core indexes range index equals other	0.200000
csv file	core series from csv	0.066667
of a single	of	0.125000
context manager for running code that expects	util assert produces	0.071429
have a fully reindex-output to the	core data frame group by reindex output result	0.045455
positional indexer cannot enlarge	has valid positional setitem indexer indexer	0.052632
returns an iterator over	iter	0.090909
higher	cls value	0.250000
at particular time	at time time asof	0.066667
create an indexer	create indexer cls name indexer	0.166667
a singular 'name' parameter for general index	indexes index	0.007353
csv file (discouraged please	frame from csv cls path header	0.066667
general index and plural 'names' parameter for	indexes index validate names name names deep	0.071429
want to set the _typ here	core series set axis axis labels fastpath	0.200000
columns	index columns values	0.037037
dictionary for the passed	dict from	0.250000
casting data from some accepted dtype to	index assert safe casting cls data	0.047619
this	value arr	0.023810
sparse values	core sparse sparse array	0.043478
the caption on a styler	io formats styler set caption caption	0.333333
return true if	is in table	0.076923
convert tz-aware axis to	core ndframe tz convert tz axis	0.200000
c	c	1.000000
the slice locations	index slice locs start end step kind	0.083333
to table in file node must already	hdfstore append key value format	0.016667
nat-like arg is	arg errors	0.026316
we do need a multi reindex this	core series needs reindex multi axes	0.333333
be used to iterate over the	frame parser	0.012500
concatenate two or more	append to_append ignore_index verify_integrity	1.000000
with nat-like arg is a passed in as	arg errors	0.026316
a pandas only dtype object or	pandas	0.035714
dataframe to a sql	to sql frame	0.500000
__getitem__ method to work as desired	index getitem key	0.166667
list/array of tuples	tuples cls data closed name	0.250000
float	io formats set eng float	0.200000
to shift without copying data the shifted	slice shift periods	0.083333
of _constructor_sliced-like objects	core panel homogenize dict frames intersect dtype	0.066667
numpy	compat numpy	0.166667
dict associating each variable name a dict associating	io stata reader value labels	0.142857
ndarray for our input	sanitize values arr	0.200000
only works for new-style classes assumes __getattribute__ exists	simple mock	0.250000
of value from 1-dimensional ndarray only	indexes index set value arr key value	0.038462
and create a new block manager	core block manager reduction	0.250000
blocks collect and	f axis consolidate transposed	0.062500
template	template	0.857143
file node must already	io hdfstore	0.014493
take which sets nan values in one	core take nd arr	0.125000
to table in	hdfstore append	0.016667
fixed frequency timedelta index with day as the	indexes timedelta range start end periods	0.083333
be applied on each	formatter float_format threshold	0.200000
manager for temporarily setting a timezone	util set timezone tz	0.142857
of unicode strings	util randu	0.500000
new dataframe with labeling information	core data frame reset	0.027778
parameter for general index and plural 'names'	indexes index validate names name names deep	0.071429
fast transform path for aggregations	ndframe group by transform fast result obj	0.333333
is an internal non-public method*	categorical index create categorical data categories ordered	0.333333
series using mapper dict or key function apply	level as_index	0.111111
delimiter string starting at the end of	rsplit arr pat	0.037037
the block manager from a dataframe of	to manager sdf columns	0.052632
create and return the block manager from	manager sdf	0.052632
length of a single non-tuple indexer which could	length of indexer indexer target	0.500000
for dataframe with multi-level index return new dataframe	core data frame	0.005917
nice str repr of our rolling	window unicode	0.071429
if we are index sliceable then	core convert to index sliceable	0.083333
index parameters	index	0.002004
from	indexes index set value arr	0.023810
used	html	0.011765
to compare numeric	is numeric	0.333333
pack	io	0.003012
result as series or by a	groupby by axis	0.045455
is an internal non-public method*	index is dtype compat other	0.500000
update index attributes e	datetime index maybe update attributes	0.200000
the underlying data	range	0.047619
removes the specified categories	core categorical remove categories removals inplace	1.000000
array	util hash array	0.500000
_build_styles	formats styler translate	1.000000
update index	datetime index maybe update	1.000000
load a feather-format	feather	0.050000
self as a sparse array	sparse series as sparse array	0.250000
index pairs for each element in the	core map indices py arr	0.090909
this is our asof key	asof key	0.250000
return the	indexes range index	0.021277
a ufunc	context	0.095238
time objects	time	0.052632
update index attributes e g	core indexes index maybe update attributes	0.200000
statement that create a	table create	0.043478
left and right index are equal	util assert index equal left right	0.333333
file node must already exist and	io hdfstore append key	0.016667
index with	core indexes multi index	0.013158
equivalent to left <=	left	0.018519
convert timedelta-like to	indexes td index	0.055556
read csv file (discouraged please	core data frame from csv cls path	0.066667
the block return result block s from	core block where other cond align raise_on_error	0.066667
as series or by a	groupby by axis level	0.045455
list indicated if we have	indexes multi index have	0.142857
be a single block and not	new align	0.166667
sets names	core indexes multi index set names names level	0.200000
type is an actual dtype that	core dtypes extension dtype is dtype cls dtype	0.111111
boolean whether this axes needs validation for	ndframe indexer should validate iterable axis	0.166667
new manager with the	core block manager	0.022727
intervalindex from a 1d array	index from intervals cls	0.125000
wide panel to long	core reshape wide to long	1.000000
convert :mod datetime to	plotting dt to	0.125000
return dtype and n/a values to	dtype and	0.125000
needs additional	array wrap result	0.025000
a manipulation result has one higher dimension as	ndframe constructor expanddim	0.333333
deprecated use :meth to_timestamp instead	index to datetime dayfirst	1.000000
styler with a custom template and	styler from custom template	0.142857
a list of sql statement that create a	table create	0.043478
infer the	infer	0.250000
data types and ranges supported by stata	to stata types data	0.333333
dataframe	core panel to frame	0.125000
must already exist and be table	io hdfstore	0.014493
round a dataframe to a	core data frame round	0.166667
layout some dataframes in vertical/horizontal layout	table	0.010870
op on	op op_str	1.000000
the reduction type operation if we can	core index ops mixin reduce op	0.083333
we take a string-like	convert string array data encoding	0.038462
a code	freq code	0.125000
try hard to parse	tools parse time	0.125000
a str acessor	string accessor	0.250000
override generic we want to set	series set	0.076923
and create a new block manager	core block manager reduction f axis	0.250000
iter1 iter2 iterables that produce elements comparable	iter1 iter2	0.166667
integer location slice or boolean mask for requested	loc key method	0.142857
new block	core block	0.032609
file node must already exist and	io hdfstore append	0.016667
elements of arr1 and	util equal contents arr1	0.066667
datetimeindex/periodindex but not timedeltaindex	datelike	0.142857
data (produce a "pivot" table) based on	data frame pivot index columns	0.200000
convert to our native types format	core datetime block to native types slicer	0.250000
value from 1-dimensional ndarray only use this	key value	0.011628
of seconds (>= 0 and less than 1	timedelta index seconds	0.066667
nat which has	mixin nat new	0.050000
an intervalindex from a list/array of tuples parameters	indexes interval index from tuples cls data closed	1.000000
and be table	io hdfstore append	0.016667
to apply we are stripping all of	group by mixin apply	0.050000
rewrite the assignment operator for pytables	rewrite assign tok	0.125000
operations to convert timedelta-like to	core indexes td	0.055556
values to be at least 1 d	core block shape values ndim	0.050000
a series to the given number of	series	0.006757
an s3 s3n or s3a url	io is s3 url url	0.250000
return dtype and	empty dtype and	0.125000
iterate over	parser build	0.014706
of the values to be at	values	0.008547
regular or 'level_x'	io json set default	0.250000
check if we do need a multi reindex	core ndframe needs reindex multi axes	0.333333
iget	iget	1.000000
take a string-like	io convert string array data encoding	0.038462
optional positional and	util optional	0.066667
exist and be table	hdfstore append key value format	0.016667
float	float array formatter get result as array	0.055556
the float values converted into strings using	formats float array formatter get	0.055556
box function to get object from	index ops mixin box func	0.142857
making this object picklable	indexes timedelta index setstate state	0.333333
midnight length is unaltered	core indexes datetime index normalize	0.125000
new type (if copy=true return a new copy)	core categorical block astype dtype copy	1.000000
use_list	use_list	1.000000
logic	logic	1.000000
return a boolean	is	0.005291
fast	indexes	0.004651
am never a	core categorical block	0.100000
attribute if it has one	core series	0.008000
the put method to its	put	0.043478
the aggregators	aggregate arg	0.071429
a single column from the table	io table	0.062500
indices overlap	overlap	0.047619
class implementing the plot attribute for	by plot	0.062500
return	core categorical	0.027778
1-dimensional ndarray only use	value arr key	0.023810
ndarray of	core index	0.111111
fast version of transform only applicable	series group by transform fast	0.500000
version of putmask that potentially upcasts the result	core dtypes maybe upcast putmask result mask other	0.200000
property	core	0.002653
bytes see :class packer for options	io	0.003012
1-dimensional	indexes index set value arr	0.023810
is called via the 'numpy' library the	with	0.034483
python datetime date objects	indexes datetime	0.011494
subject string in the series extract groups from	extract frame	0.047619
is monotonic	monotonic	0.222222
dataframe objects	data frame	0.005714
if we do need a multi reindex this	core series needs reindex multi axes method	0.333333
times	datetime	0.006711
and dtype) in this object	ndframe	0.005025
after	core series array wrap result	0.100000
deal with nat-like arg is a passed in	arg	0.018868
an positional indexer cannot	positional setitem indexer indexer	0.052632
1-dimensional ndarray only use this if you	core	0.001326
gets called after	core indexes index array	0.100000
values as an enumerated type or categorical variable	core factorize values sort order	0.111111
called after a	core indexes period	0.032258
we are index sliceable then return my slicer	convert to index sliceable	0.083333
data to ndarray raises on scalar	index coerce to ndarray cls	0.166667
from ndarray or list of	index columns dtype	0.125000
method to class python 2	method cls name func	0.076923
length is	core	0.001326
read text from clipboard and pass to	io read clipboard	0.200000
to coerce dates and/or numbers	convert objects values convert_dates convert_numeric convert_timedeltas	1.000000
a 2d-nd reshape operation on	reshape nd axes	0.250000
read csv	csv cls path sep	0.066667
call a	call	0.071429
the corresponding interval with closed bounds	closed bounds interval	0.200000
a tz	datetime	0.006711
string in the series/index starts with passed pattern	core str startswith arr pat na	0.333333
to	hdfstore append	0.016667
compute a simple cross-tabulation of	reshape crosstab index columns values	0.066667
mapping	mapping	1.000000
rewrite the assignment operator for pytables expressions that	core computation rewrite assign tok	0.125000
a	core indexes period index array	0.050000
and arr dtype then fill	core dtypes maybe fill arr	0.500000
from 1-dimensional ndarray only use	core indexes index	0.007042
common ops mixin to support a unified inteface	ops mixin	0.033333
if we can set a locale	can set locale	0.333333
the (attr formatted_value)	core indexes range index format attrs	0.142857
values	array	0.013889
and 'kwargs' should be empty because all of	func method args kwargs	0.142857
data the shifted data will	slice	0.038462
and index	sparse sparse data frame set value index	0.250000
which is a	to_concat	0.125000
try to operate on it	selection mixin try	0.250000
a copy of a series	series	0.006757
the op	bin op	0.125000
round the fractional part of the given number	round frac x precision	0.200000
union of two index	index union other	0.037037
full scope for use	computation scope full scope	0.055556
nanskew	nanskew	1.000000
comparable timezone both	datetime index timezone	0.200000
render a dataframe to a html table	data frame formatter to html classes notebook border	1.000000
a non-unique	target	0.083333
in engineering notation appending a	eng formatter call	0.142857
parse datetime	tools parse	0.125000
nchars	nchars	0.833333
unit if needed otherwise	unit	0.066667
validate / deprecate formats return the new kwargs	io hdfstore validate format format kwargs	1.000000
format my	interval index format	0.500000
to handle na filling of take	indexes multi index assert take fillable values	0.250000
the reduction type operation if we	ops mixin reduce op name axis skipna	0.083333
block return result block s	block where other cond align	0.166667
get	datetime index get	0.500000
keyerror is maps[0]	chain map	0.034483
this is called upon unpickling	index cls d	0.083333
1-dimensional ndarray only use this if	core indexes	0.004762
the block	data col create for block	0.333333
la re split in	split arr pat	0.200000
number of bytes in the underlying	indexes multi index nbytes deep	0.052632
file node must already	append key	0.016667
convert timedelta-like to timedelta64	indexes td index cmp opname	0.055556
capture stderr in a buffer so that	util capture stderr	0.055556
if we are positional indexer	indexes index validate indexer form key kind	0.500000
to construct this type	core dtypes interval dtype construct	0.333333
reindex using pre-computed indexer information	reindex axis indexer method axis fill_value	0.500000
function is called via the 'numpy' library	validate take with convert	0.055556
subject string in the series extract groups from	core str extract	0.035714
object	io	0.006024
generic moving function	apply arg window func	0.500000
chk	chk	1.000000
object o and return packed bytes see	packb o	0.055556
number of	indexes range index	0.021277
return the node	node	0.100000
list of normalized locales	valid locales locales normalize	0.200000
is supported parameters	compat is	0.111111
boolean whether i can attempt conversion to a	indexes is convertible to	0.333333
parse datetime string	core tools parse time string	0.250000
the series/index by indicated number of	core str repeat	0.045455
provides a	timedelta index resampler	0.066667
holidays between start_date and end_date parameters	holidays	0.090909
interpolate values according to different methods	interpolate method axis limit	0.166667
a list of the axis indicies	panel extract axes	0.142857
index	convert to index	1.000000
numpy doesn't like to compare numeric	core dtypes is numeric v string like	0.333333
exist	io hdfstore	0.014493
of object to the	to	0.006329
using input	copy inplace	0.055556
float	float array	0.055556
rewrite the assignment operator for pytables	rewrite	0.076923
tz	tz	0.714286
validates that we have a	core categorical	0.013889
note this is	is	0.005291
in args/kwargs	from arguments args kwargs require_all	0.333333
and	core	0.002653
arr to	arr new_shape	0.142857
is a string cast it to timedelta	indexes timedelta index maybe cast	1.000000
plot attribute for groupby objects	group by plot	0.062500
defined as a copy with	index view cls	0.047619
1-dimensional ndarray only use this if you	indexes index set	0.023810
clean	clean	1.000000
used to iterate over	html	0.011765
to handle na filling of take	core indexes index assert take fillable values indices	0.250000
of v should	core indexes frozen ndarray searchsorted v	0.033333
return a uint64 ndarray of my hashed	indexes multi index hashed	0.166667
locations	locs start end step kind	0.250000
wrap comparison operations to convert timedelta-like	td	0.043478
the ftypes (indication of sparse/dense and dtype) in	core ndframe ftypes	0.055556
table	table	0.380435
in file node must already exist and	append key value format	0.016667
return a tree-like object	io html frame	0.012987
cur	cur	1.000000
function is called via the 'numpy' library the	take with convert	0.055556
perform __getitem__-like return	slicer new_mgr_locs	0.250000
be used to iterate over the dom	io html frame parser build doc	0.125000
a list/array of tuples	tuples cls data	0.250000
data to	coerce to	0.333333
the array interface	indexes categorical index array dtype	0.125000
objects (namely the date	index date	0.200000
if we define an builtin function for	mixin is builtin func arg	0.333333
floating index	indexes index maybe cast indexer	0.200000
function or functions	core ndframe rename axis	0.333333
a list of sql statement that create	io sqlite table create	0.066667
value from 1-dimensional ndarray only	core indexes period index get value series key	0.071429
the best locator based on	auto date locator get locator	0.062500
dot	dot	1.000000
never	block is	0.045455
of python datetime date objects (namely the date	datetime index date	0.333333
input values as an enumerated type or	factorize values sort	0.111111
the indexer	indexer	0.018349
td elements from	parse td obj	0.083333
we take a string-like that is object dtype	string array	0.038462
(e g	dtypes maybe	0.166667
type to its	table type x	0.055556
'numpy' library	take with convert convert	0.055556
underlying data	indexes datetime index ops mixin	0.029412
engineering notation	eng formatter	0.125000
wrap comparison operations to convert datetime-like to datetime64	cmp opname nat_result	0.066667
set of unique elements of arr1	contents arr1	0.066667
values as an enumerated type or categorical	factorize values sort order na_sentinel	0.111111
process of casting data from some	indexes numeric index assert safe casting cls data	0.047619
of type window_type and size window on	rolling window arg window win_type min_periods	0.100000
align	computation align	0.250000
new block if not	core block manager	0.022727
we are going to write	write obj data_columns	0.111111
a sorted ndframe	ndframe	0.005025
checks whether	io python parser check for	0.500000
each dataframe in panel to a	panel to	0.027027
string-like that is	io convert string array data	0.038462
for temporarily setting a locale	set locale new_locale lc_var	0.250000
bytes see :class packer	io msgpack	0.025000
type among the	type types	0.500000
a single dtype if dtype	simple blockify tuples dtype	0.111111
new multiindex from	indexes multi	0.014493
form the union of two index objects and	core indexes index union other	0.083333
returns the float values converted	float	0.024390
return sorted copy of index	datetime index ops mixin sort values return_indexer ascending	0.500000
datetime to	to	0.006329
convert structured or record ndarray to dataframe parameters	data frame from records cls data	1.000000
getitem defers to the underlying array which by-definition	core indexes datetime index ops mixin getitem	0.250000
an intervalindex from a 1d array	index from intervals	0.125000
array of python datetime date objects (namely	core indexes datetime	0.011494
kwds	kwds y	1.000000
if	core categorical validate ordered cls	0.055556
usecols_key	usecols_key	1.000000
and	core ndframe	0.010101
return a boolean if we need	indexes index is	0.100000
from a masked rec array and create the	core masked rec array to	0.090909
check that left and right index are equal	index equal left right	0.333333
packed	packed object_hook list_hook	0.200000
in hdfstore parameters	io hdfstore put	0.333333
sparseseries from a scipy sparse coo_matrix	sparse sparse series from coo cls a dense_index	0.333333
for generation (e g	core computation bin op	0.055556
a simple	crosstab index columns values	0.066667
of the index or minimum along an axis	index ops mixin min axis	0.333333
return result block s	block where other cond align	0.166667
object o and	packb o	0.055556
with multi-level index return new dataframe with	core data frame reset	0.027778
the inferred types one for	index inferred type levels	0.111111
determines if two index	core indexes datetime index ops mixin equals other	0.200000
index objects contain the same elements	core indexes index	0.007042
(header new_data)	row index_col	0.500000
reindex using pre-computed indexer information	sparse block reindex axis indexer method axis fill_value	0.500000
only use this if you	core indexes index set value	0.023810
fixed size	itemsize	0.027027
ordered attribute	categorical get ordered	0.333333
have a	core categorical validate ordered cls	0.055556
to handle na filling of	fillable values indices allow_fill	0.125000
column by inferring dtype	name data use_dtypes convert_dates	0.500000
at	at	0.750000
read from the store	io read	0.038462
reduction type operation if	core index ops mixin reduce op name axis	0.083333
of a multiindex and the index	index	0.002004
converts a style_dict to an xlsxwriter format	xlsx writer convert to style style_dict num_format_str	0.166667
the numeric	core indexes index add numeric	0.250000
shape of the	ndim shape	0.111111
of a	timedelta index	0.045455
a function to be applied on each value	formatter value formatter float_format threshold	0.100000
be used	io	0.003012
self coded with categories	core categorical codes for groupby sort	0.071429
compare numeric	is numeric v	0.333333
convert freq with decimal stride into	decimal	0.058824
where elements of v should be	ndarray searchsorted v	0.033333
block for the diff of	block diff n axis	0.333333
coo	coo	1.000000
needs additional	array wrap	0.025000
multiindex from	indexes multi index	0.013158
if we define an builtin function for this	grouper is builtin func	0.333333
dtype to	dtype	0.010989
constructor (for this class it's just __class__	pandas object constructor	0.500000
overrides ndarray argsort argsorts the	core series argsort	0.083333
indices overlap add	items overlap	0.062500
guess the	core tools guess	0.500000
for running code that expects	util assert produces warning expected_warning filter_level	0.071429
table	str translate arr table	1.000000
registered option	registered option	0.500000
return an array of deterministic integers	hash array vals encoding hash_key categorize	0.250000
provides a	index	0.006012
aggregate using input function or dict of {column	aggregate arg	0.071429
process of casting data from some	index assert safe casting cls data	0.047619
a repr	repr	0.040000
render a dataframe as an html	core data frame to html buf columns col_space	0.500000
wrapper function for series arithmetic operations	arith method op	0.333333
recursive call	recursive	0.090909
each interval	indexes interval	0.062500
additional	period index array wrap	0.050000
gets	core indexes index array	0.100000
a simple cross-tabulation of	reshape crosstab index	0.066667
gets the mode s	core data frame mode	0.333333
include_end	include_end	1.000000
which prevents adding new	no new	1.000000
returns the float values converted into strings using	formats float array formatter get	0.055556
object that can be used to	html	0.011765
value from 1-dimensional ndarray only	core indexes categorical index get value	0.100000
create a new	datetime tzdtype new cls	0.333333
numeric	numeric v	0.333333
file node must already exist	key	0.005051
view of myself	categorical view	0.111111
copy of this object names dtype	index copy names dtype	0.333333
lookup of value from 1-dimensional ndarray only use	datetime index get value	0.071429
validate that the where	core computation validate where	1.000000
gets	period	0.016667
formatted data as	indexes index formatter func	0.083333
for series arithmetic operations to avoid code duplication	method series op name str_rep	1.000000
'name' parameter for general index and	indexes index validate names name	0.066667
an positional indexer cannot	indexer has valid positional setitem indexer indexer	0.052632
a new datacol with the block i	col create for block cls i name cname	0.333333
sets names	set names names level validate	0.200000
best locator	auto date locator get locator	0.062500
convert tz-aware axis to target	ndframe tz convert tz axis level copy	0.200000
the we have a dtype compat	name	0.025000
a list/array of tuples	tuples cls	0.250000
return a slice of my	core datetime tzblock slice slicer	0.083333
a separate excel sheet parameters	excel path na_rep engine	0.166667
the given delimiter string starting at the end	rsplit arr	0.037037
to line delimited json	json convert to line delimits s	0.200000
dataframe	frame	0.072727
this	index col read	0.250000
to convert timedelta-like	td	0.043478
use this	index set value	0.023810
element	ndframe	0.005025
from passed panel or object coercible	other join overwrite filter_func	0.076923
index using the index's frequency if available	core ndframe tshift periods freq axis	0.066667
all the locales that are available on	locales prefix normalize locale_getter	0.125000
dt_str_split	dt_str_split	1.000000
create index with target's	indexes multi index	0.013158
a tz-aware type return an	get tz tz	0.066667
parameters	index from	0.090909
of groups excluding missing	core	0.001326
pick the best locator based	plotting pandas auto date locator get locator	0.062500
datetimeindex with times to midnight length is unaltered	core indexes datetime index normalize	0.125000
long-format data to wide generalized inverse	lreshape data groups dropna	0.333333
is an internal non-public method*	core indexes index to embed keep_tz	0.500000
do a list replace	block manager replace list src_list dest_list	1.000000
built	formats styler	0.021739
iterate over infor axis	core ndframe iter	1.000000
the series/index to be formatted in paragraphs	core str	0.011364
key or none if it does	key	0.005051
maximum values along an axis	core indexes datetime index ops mixin argmax axis	0.250000
parameter for general index and	indexes index validate names name	0.066667
left and right sparsedataframe are equal	sp frame equal left right check_dtype exact_indices	0.333333
that an positional indexer cannot enlarge its target	ndframe indexer has valid positional setitem indexer indexer	0.052632
of terms for instances	terms	0.034483
fast lookup of	index	0.002004
timedelta-like to	indexes td	0.055556
return a boolean indicating whether the	io	0.003012
wrap comparison operations to convert timedelta-like to timedelta64	core indexes td index cmp opname	0.055556
suitable for initializing the gradientfill stop parameter	stop	0.050000
unicode normal form for the strings in the	string methods normalize form	0.066667
check if the object is list-like	core dtypes is list like	0.333333
function is called via the 'numpy' library the	compat numpy validate take with convert	0.055556
index of first occurrence of minimum of values	series idxmin axis skipna	1.000000
by category value returning	values inplace ascending na_position	0.071429
dict {group name -> group indices}	group by indices	1.000000
return if we are a	core dtypes is	0.085106
1-dimensional ndarray only use	indexes index set value arr	0.023810
return copy of	copy	0.012821
ntemps	ntemps	0.555556
an ndarray of the flattened values	ravel order	0.037037
the info for	info info	0.142857
if a url has a valid	url url	0.045455
index are equal	util assert almost equal	1.000000
a new	dtypes datetime tzdtype new cls	0.333333
to coerce a scalar to a compat for	indexes period index coerce scalar to	0.071429
operations to convert timedelta-like to	indexes td index	0.055556
generic moving	window	0.071429
convert datetime-like to	cmp opname nat_result	0.066667
element	map indices py	1.000000
feather-format	core data frame to feather	0.333333
of x not in y if possible	computation not in x y	0.066667
: int slice or sequence of	core data frame ixs	0.200000
dict of	dict cls data	0.166667
lookup of value from 1-dimensional ndarray	indexes datetime index get value series	0.071429
provide the groupby facilities	group by mixin	0.333333
from one of the stata date formats to	convert datetime to stata	0.111111
multiindex at the	indexes multi index	0.013158
is called via the 'numpy' library the third	compat numpy validate take with convert	0.055556
multirow	multirow	0.666667
apply aggregation function or functions to	core resampler aggregate arg	0.250000
fast lookup of	set value	0.023256
1-dimensional	arr key	0.023810
fixed frequency datetime index with day calendar	indexes period range start end periods freq	0.083333
simple cross-tabulation of	columns	0.017857
fast	set value	0.023256
table in file node must already exist	io hdfstore append	0.016667
add a temporary variable to the	add tmp value	0.333333
file is open	hdfstore is open	1.000000
datetimeindex with times to	datetime	0.006711
same dimensions as the	core	0.001326
for panel objects and will	panel	0.017857
'numpy' library the	validate take with convert convert args	0.055556
index and	core indexes index	0.007042
cross-tabulation of	reshape crosstab index columns	0.066667
null_color for missing values	styler highlight null null_color	0.125000
multirow	format multirow	0.250000
a slice of my	datetime tzblock slice slicer	0.083333
obj with a groupby	groupby	0.028571
values & release the memory	col take data	0.055556
boolean array of whether each index	core indexes datetime index	0.007634
single column from the table	io table	0.062500
append rows of	append	0.012987
apply the given offset/observance to a datetimeindex	tseries holiday apply rule	0.200000
the stata date formats to a type	to stata type	0.142857
categorical by hashing its categories	categorical c encoding hash_key	0.142857
intervalindex from a 1d array	index from intervals cls data name copy	0.125000
returned from apply if as_index=true	group by index with as	0.200000
new unit if needed otherwise return from	datetime tzdtype new cls unit tz	0.055556
last row without any nan is taken	ndframe asof where	0.166667
read csv file (discouraged please	data frame from csv cls path	0.066667
make a multiindex	core indexes multi	0.014493
fixed frequency datetime index with custombusinessday as	core indexes cdate range start	0.083333
only use this	core indexes index set value arr key	0.023810
elements from the	io html frame	0.012987
fixed	bdate range start end	0.111111
the categorical	core categorical	0.055556
be a single block	new align	0.166667
the float values converted into	formats float array formatter get result as array	0.055556
of	period index resampler	0.062500
am never a	core categorical block is	0.100000
valid ordered parameter if	ordered cls ordered	0.058824
thrown by	parser	0.008000
a boolean if we need a	core indexes index is	0.083333
to parse a ndarray	convert data	0.200000
str df in both py2/py3	dtypes extension dtype str	0.250000
and return the	io	0.006024
propagate metadata from other to	ndframe finalize other method	0.333333
with	hdfstore get	0.500000
already exist	value	0.005155
removed	droplevel	0.142857
concise listing of available options grouped by	pp options list keys width _print	0.111111
index to be	index	0.002004
needs additional	core indexes period index array	0.050000
statistical measure using supplied function designed	func name window center	0.058824
categoricals are	equal	0.050000
two indices overlap add suffixes	core items overlap	0.062500
an item pair from maps[0] raise keyerror	map popitem	0.055556
block manager from a dataframe of series	core sparse to manager sdf	0.052632
conserve rangeindex type for scalar and slice	indexes range index getitem key	0.166667
a function to create an op	computation op	0.166667
only use this if you	indexes index set value arr	0.023810
dataframe and series	data	0.009709
frontend	frontend	1.000000
for a tz-aware type	get tz tz	0.066667
gets called	period	0.016667
overrides ndarray argsort argsorts	argsort	0.038462
to	core indexes	0.004762
convert sparseseries to a	to dense sparse_only	0.500000
a new multiindex	core indexes multi	0.014493
to the	plotting dt to	0.125000
node must	format	0.012346
sets index names to	default names data	0.083333
the ftypes (indication of	core ndframe ftypes	0.055556
for writing stata	stata	0.022222
to construct this type from a string raise	dtypes interval dtype construct from string cls string	0.166667
wrapper around series arithmetic operations	op	0.045455
gets called after	result	0.049180
of casting data from some accepted dtype to	index assert safe casting cls data	0.047619
backward fill the values parameters	group by backfill limit	0.250000
as a dataframe	data values index columns	0.066667
all of the _upsample kwargs and	group by mixin apply f	0.166667
subplots already made	subplots naxes sharex sharey squeeze	0.166667
alias for tz attribute	index tzinfo	1.000000
method to handle na filling	fillable values indices allow_fill	0.125000
provides a resample of a	period index	0.024390
to accelerate unioning a collection of	datetime index union many others	0.040000
implementing the plot attribute for groupby	group by plot	0.062500
return a tree-like	io html	0.012987
a method to class python	method cls name	0.076923
type window_type and size window	rolling window arg window win_type	0.100000
write this as a frame table	io appendable series table write	0.500000
info for this name	io get info info name	0.333333
times to midnight length is	datetime index	0.007042
index values and index	index	0.002004
our original type	dtype	0.010989
a dict associating	stata reader value labels	0.142857
cast_type	cast_type	1.000000
a stringified and numeric for these values	values na_values	0.333333
determine if each string	match arr pat	0.166667
be used	io html frame	0.012987
returns a dataframe	sparse sparse data frame	0.058824
and the specifications setup the internal grouper	core grouper set grouper obj sort	0.250000
v should	frozen ndarray searchsorted v	0.033333
is defined as a copy with the	index view cls	0.047619
check if we are a view	check is	0.200000
drop from frame raise keyerror if not found	core ndframe pop	0.200000
to read from a url	read obj	0.058824
lookup of value from 1-dimensional ndarray only use	indexes period index get value series key	0.071429
the	get	0.014286
analogous to ndarray repeat	index ops mixin repeat repeats	0.333333
copy of	indexes multi index copy	0.166667
return packed bytes see :class packer for	msgpack	0.022222
get integer location slice or	index get loc key	0.500000
hard to parse	core tools parse time	0.125000
return the meta data array for	io table read metadata	0.500000
index with day calendar as the default	core indexes	0.004762
specified dtype (e g convert back to bool/int	maybe downcast to dtype result dtype	0.500000
repr should show the info view	frame info repr	0.333333
the fill value	fill value	0.111111
concatenation of an datetimelike array	core dtypes concat datetime to_concat	0.125000
a resample of	period index resampler	0.062500
this column return the compared against	col	0.037037
called after	indexes index array wrap result	0.100000
series/array indicating whether each string in the	core	0.001326
to html	io formats	0.027778
is called via the 'numpy' library the third	take with convert convert args kwargs	0.055556
built up styles	io formats	0.027778
byte	column	0.066667
obj with	obj	0.033333
la re split in the series/index by given	core str split arr	0.166667
given a tuple of slices/lists/labels/boolean indexer	core indexes multi index get	0.100000
ndarray or list	data index	0.076923
the best locator	locator	0.047619
convert the frame to its numpy-array representation	core ndframe as matrix columns	0.200000
belongs to a leap year	period index is leap year	0.142857
support start stop kwds in sparse	sparse fixed	1.000000
seq	seq	1.000000
in-place does not consolidate adds	value check	0.500000
multicolumn	multicolumn	1.000000
new manager with the	block manager	0.021277
the meta data	io index col write metadata handler	0.500000
a multi-index suitable for a panel-like dataframe	core panel index time panels names	0.076923
plot attribute	plot	0.043478
read csv file (discouraged	data frame from csv cls	0.066667
csv file (discouraged please use	data frame from csv cls path	0.066667
regular expression	flags expand	0.200000
return the cached item item represents a	core ndframe get item cache item	0.333333
bounds for parsed time string and its resolution	string to bounds reso parsed	1.000000
a particular object	dtypes extension dtype repr	0.142857
build an xpath expression	io build xpath expr	0.200000
datetime format of a given datetime string	datetime format	0.250000
the correct pandassql subclass based on	pandas sql builder con flavor schema meta	0.055556
filter	core computation filter	1.000000
create an indexer like _name in	create indexer cls name indexer	0.166667
iter1 iter2 iterables that produce elements comparable with	assert copy iter1 iter2	0.166667
add the	add	0.142857
of how to create the grouper indexers	grouper	0.058824
if we	core object block is	1.000000
boolean criterion specified	filter	0.117647
saturday or sunday use previous friday instead	tseries previous friday	0.250000
validate the passed dtype	core ndframe validate dtype dtype	1.000000
the required package is	package pkg_name min_version max_version app	0.083333
with nat which has	mixin nat new box	0.050000
count of number of non-nan observations	count arg	0.200000
data and the attrs from _build_styles	io formats styler translate	0.200000
check if we do need a multi reindex	core ndframe needs reindex multi axes method level	0.333333
union of two index objects and sorts if	core indexes index union other	0.083333
quantile a	core series quantile	0.083333
a url has	io is url url	0.047619
constructs ndframe from group with provided name parameters	by get group name obj	1.000000
for :meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace limit	0.333333
mplplot	mplplot	1.000000
of the index	indexes datetime index	0.015267
representing a frequency guess generated by infer_freq	index ops mixin inferred freq	0.250000
find indices where elements of v should be	core indexes frozen ndarray searchsorted v	0.033333
to handle na filling of take	take fillable values indices	0.250000
rec array and create the manager	rec array to mgr data index	1.000000
only use	index set value	0.023810
replace	manager replace	1.000000
an index that we can	index	0.002004
we have good categories	categories fastpath	0.250000
attributes	attrs	0.166667
fname	kwargs fname	0.250000
dict of array-like or dicts	dict cls data orient dtype	0.166667
frequency guess generated by infer_freq	core indexes datetime index ops mixin inferred freq	0.250000
1st discrete difference of	core data frame diff periods axis	0.250000
from the cartesian product of	from product	0.500000
a categorical adjusted for groupby	indexes categorical index codes for groupby sort	0.333333
frequency datetime index with business day as	core indexes	0.004762
that create a table	create table	0.166667
an iterator over	index iter	0.250000
data_frame	data_frame	1.000000
into a higher freq with	cls value freq	0.083333
format of a	format dt_str dayfirst dt_str_parse dt_str_split	0.250000
and 'kwargs' should be empty except for allowed	func name args kwargs allowed	1.000000
numpy doesn't like	v string like	0.111111
boolean whether i can attempt conversion to a	indexes is convertible to index other	0.333333
values	shape values	0.050000
fast version of transform only applicable to	core series group by transform fast func	0.500000
see :class packer	io msgpack	0.025000
columns for dataframe major_axis for panel	core ndframe iteritems	0.055556
to be	as	0.066667
underlying array which	datetime index ops mixin	0.029412
string representing a frequency guess generated by infer_freq	indexes datetime index ops mixin inferred freq	0.250000
in file node must	append key value	0.016667
returns an index containing unique	core indexes index get unique index dropna	0.500000
times to midnight length is unaltered	normalize	0.076923
bind a	bind	0.142857
each dataframe in panel to a	core panel to	0.027027
each subject string in the series extract groups	str extract	0.071429
csv file (discouraged	core series from csv cls	0.066667
each subject string in the series extract groups	extract frame arr	0.047619
an ordered multiindex compute the	indexes multi	0.014493
comparable timezone both for pytz / dateutil	datetime index timezone	0.200000
dtype if dtype is	dtype	0.010989
extract from a masked	core masked	0.250000
concise listing of available options grouped	core pp options list keys width _print	0.111111
to midnight length	index	0.002004
midnight length	datetime index	0.007042
consistent invalid indexer message	core indexes index invalid indexer form	1.000000
python datetime date objects (namely the	datetime index	0.007042
convert the object	core ndframe	0.005051
keyerror is	compat chain	0.034483
whether the installed version of openpyxl is supported	compat is compat major_ver	0.111111
slice of my values	core datetime tzblock slice slicer	0.083333
the axis indicies	core panel extract axes	0.142857
the node with the key or none if	io hdfstore get node key	0.083333
version	core block	0.010870
series	sparse series	0.500000
on multiindex defaults	core indexes multi index	0.013158
get test result and	core computation get test result	0.250000
ndarray filled with nat which has the same	nat new box	0.050000
the categories	categorical get categories	0.333333
via the 'numpy' library the third	with convert	0.055556
interpolate values	interpolate method axis limit inplace	0.166667
/ or columns using input	mapper axis copy inplace	0.055556
table	io appendable multi series table	0.200000
compute boolean array of whether each index	datetime index	0.007042
data & release	col take data	0.055556
a string representation	index unicode	0.083333
concatenation of	core dtypes concat datetime to_concat axis	0.125000
alter default behavior on how float is	set eng float format accuracy use_eng_prefix	0.333333
a fixed frequency datetime index with business	core indexes bdate range start end	0.083333
new type (if copy=true return a new copy)	core block astype dtype copy errors	1.000000
we need to coerce a	index coerce	0.125000
flattened values of the underlying data see also	ravel order	0.037037
new sparsearray	sparse sparse	0.034483
a fixed frequency datetime index	indexes bdate range start end periods	0.083333
return the td elements from a row element	parser parse td obj	0.083333
rank the values along a given	core rank values	0.250000
passed type is an actual dtype that	dtypes extension dtype is dtype cls dtype	0.111111
the table this is	key	0.005051
array of python datetime date objects (namely the	core indexes datetime	0.011494
compute a	core reshape crosstab	0.066667
compute a simple cross-tabulation of	values	0.008547
file node must already exist and be table	value	0.005155
counts of	counts	0.111111
write out the binary feather-format for dataframes	frame to feather fname	0.083333
process of casting data from some accepted dtype	assert safe casting cls data	0.047619
a compat for our index	index item	0.100000
cast to the specified dtype	result dtype	0.142857
cast it to timedelta according to	timedelta index maybe cast slice bound	0.125000
to	append	0.012987
pack object o and return packed bytes see	packb o	0.055556
a new multiindex	indexes multi index	0.013158
interpolate values according to different methods	interpolate	0.076923
convert	core dtypes maybe convert	1.000000
freq and stride info from	and stride freqstr	0.250000
specified	ndframe asfreq	0.250000
validate percentiles used by describe and quantile	check percentile q	0.333333
convert tz-aware axis to target	core ndframe tz convert tz axis level	0.200000
seconds (>= 0 and less	indexes timedelta index seconds	0.066667
the index is	core indexes index is	0.083333
update index attributes e g freq depending	core indexes timedelta index maybe update attributes	0.200000
a dataframe with the rows/columns switched	sparse data frame transpose	0.333333
1d array of	intervals cls	0.250000
a timegrouper	core group by resample rule	0.166667
from	primary_key	0.166667
turn values into codes given the specified categories	core get codes for values values categories	1.000000
we take a string-like that is object	convert string array data	0.038462
update index attributes e g	index maybe update attributes attrs	0.200000
convert tz-aware axis to target	core ndframe tz convert tz axis	0.200000
applies the put method to its	core series put	0.055556
return our new index	period index resampler get new index	1.000000
operate on an old version?	io table validate version where	0.250000
get integer location for requested label	datetime index get loc key method tolerance	1.000000
multiindex objects	core indexes multi index	0.013158
if we are index sliceable then	index sliceable	0.083333
string cast it to timedelta according	timedelta index maybe cast slice bound	0.125000
append to table in file node must already	value format append	0.125000
get test result and reset	get test result	0.250000
series excluding	core series	0.008000
excluding elements from groups that do	group	0.027027
have negative indicies translate to postive here	maybe convert indices indices n	0.166667
check to see if a url has a	url url	0.045455
checks whether	python parser check for	0.500000
fast transform path for aggregations	core ndframe group by transform fast result	0.333333
round the fractional part	round frac x precision	0.200000
boolean whether i can attempt conversion to a	core indexes is convertible to	0.333333
occupying requested label default to	core sparse sparse series get label default	0.083333
called upon unpickling rather than the default	index cls d	0.083333
to axis labels matching criteria parameters	ndframe select crit axis	0.250000
the time index using the index's	core ndframe tshift periods	0.166667
number of seconds (>= 0 and	timedelta index seconds	0.066667
return datetimeindex with times to midnight length is	core indexes datetime index	0.007634
instances of all the various index classes	all index	0.142857
data types and ranges supported by stata and	to stata types data	0.333333
need to coerce a scalar to a	core indexes period index coerce scalar to	0.071429
wrapper function for	core comp method	0.333333
to the underlying array which by-definition	indexes datetime index ops mixin	0.029412
be	frame parser	0.012500
a bit of a hack to accelerate unioning	index union many others	0.040000
reconstruct labels from observed group ids parameters	decons obs group ids comp_ids obs_ids shape labels	0.250000
new manager with	core block manager	0.022727
default frequency	periods freq	0.187500
wrap comparison operations to convert datetime-like to datetime64	core indexes dt index cmp opname nat_result	0.066667
return the cached item item represents	core ndframe iget item cache item	0.090909
by the indexer fill	indexer	0.009174
parse a categorical column and prepare formatted output	stata value label	0.250000
dictionary	construct axes dict from	0.250000
to timedelta	timedelta index maybe	0.250000
value from 1-dimensional ndarray only use this if	arr key value	0.038462
string representation for this	indexes index unicode	0.083333
infer this column from the	index col infer handler	0.200000
return true if more than one block with	core block manager is consolidated	0.333333
in vertical/horizontal layout	table	0.010870
in sparse	io sparse	0.166667
block s from the	block where other cond align raise_on_error	0.066667
number	indexes multi	0.014493
day of the month	month begin	0.111111
dictionary for	ndframe construct axes dict from	0.250000
the function to my values return	func	0.011905
get integer location slice	core indexes multi index get loc key	0.500000
drop 2d from panel	panel dropna	0.333333
of columns as lists of strings	str columns	0.083333
table schema resets the	io	0.003012
column	col	0.259259
index or ndarray	indexes datetime index	0.007634
to be applied on each value to format	formatter value formatter float_format threshold	0.100000
additional handling as	period	0.016667
nat which has the same	ops mixin nat new box	0.050000
can	html frame	0.014706
shift without copying data	ndframe slice shift periods	0.083333
a manipulation result has the same	constructor	0.040000
according to indexer and return them	nd indexer	0.030303
repeating on the last day of the month	month	0.038462
but using the interpolate machinery	interpolate with fill method axis	0.200000
necessary for	core sparse	0.041667
a set of subplots	subplots	0.076923
comparison operations to convert timedelta-like	td index cmp opname nat_result	0.055556
holidays	holidays	0.545455
a ufunc needs additional	result context	0.027027
underlying array	core indexes datetime index ops mixin	0.029412
a styled html representation fo the dataframe	core data frame style	0.333333
take values according	take	0.060606
of putmask that potentially upcasts the result	core dtypes maybe upcast putmask result	0.200000
our native types format slicing	native types slicer	0.200000
built up	io formats styler	0.021277
the view limits to the nearest	locator autoscale	0.055556
function or functions	rename axis mapper	0.333333
gets called prior to a ufunc	series array prepare result context	0.333333
compute a simple cross-tabulation	reshape crosstab index	0.066667
and string-like array	string	0.018868
read csv file (discouraged	series from csv cls path sep parse_dates	0.066667
url has a	io is url url	0.047619
class implementing	group by	0.016129
return a tree-like	frame parser build	0.014706
lookup of	core indexes index set value arr	0.023810
array return an array	hash array vals	0.083333
of index	core indexes datetime index	0.007634
return new dataframe	data frame reset	0.027778
validate that the where statement is of	core computation validate where w	0.250000
if we have mixed levels	multi index have mixed levels	0.200000
of the flattened values of the underlying	core indexes index ravel order	0.037037
gets called after a	core series array wrap result	0.100000
default	default	0.600000
a view	categorical view	0.111111
determine if	n method	0.125000
using	inplace	0.055556
values	timedelta	0.022222
construct dataframe from dict	data frame from dict	0.200000
float is formatted in dataframe	io formats set eng float	0.200000
gets called after	wrap	0.057692
alias for tz attribute	datetime index tzinfo	1.000000
the number of bytes in the underlying data	indexes multi index nbytes	0.052632
function for series arithmetic operations to	core bool method series op name	0.333333
constructor types that each has a homogeneous dtype	ndframe as blocks copy	0.142857
true if this	is	0.010582
return datetimeindex with times to midnight	indexes datetime	0.011494
from a	frame parser parse	0.250000
to a set	to	0.006329
gets called prior to a	core series array prepare result	0.111111
backward to next offset only	rollback dt	0.125000
gets called prior to a ufunc	core series array prepare result context	0.333333
list	sparse list	0.333333
encode input values as	values sort order na_sentinel	0.333333
number of microseconds (>= 0 and less than	indexes timedelta index microseconds	0.066667
up styles	io formats	0.027778
a class for writing stata binary	frame to stata fname	0.200000
return if each value is nan	indexes interval index isnan	1.000000
see	io msgpack	0.025000
to	convert data	0.200000
of sql statement that create a table reflecting	table create table setup	0.066667
one of the stata date formats to	datetime to stata	0.100000
a string representation for a particular object	dtypes extension dtype repr	0.142857
shape	placement shape	1.000000
url has	io is url url	0.047619
to	core block2d to	0.500000
return a list of the underlying data	datetime index ops mixin tolist	0.333333
get integer	get	0.035714
sub-classes to define	selection mixin gotitem key ndim subset	0.333333
value from 1-dimensional ndarray only use this	indexes period index get value	0.071429
return a slice of my values	core categorical block slice slicer	0.083333
1-0 dummy variables corresponding to designated axis labels	core reshape make axis dummies frame axis transform	0.166667
the blocks	combine blocks	0.500000
a tree-like object that can be used to	html frame parser	0.012658
of the values to be at	values ndim	0.050000
a moving window of type window_type on the	core window apply window mean how	0.166667
boolean whether i can attempt conversion to	core indexes is convertible to index	0.333333
convert to our native types format slicing	to native types slicer na_rep quoting	0.250000
a ufunc needs	result context	0.027027
midnight length is	indexes datetime	0.011494
converts a style_dict to an openpyxl style	io openpyxl1writer convert to style cls style_dict	0.166667
with null values converted	values	0.008547
the 'numpy' library the third	with	0.034483
return a list of the axis indicies	core panel extract axes data axes	0.142857
guarantee the shape of the values	values ndim shape	0.083333
return the actual	bin op	0.125000
string-like array to convert object	maybe convert string to object values	0.142857
the array interface return my values	indexes multi index array dtype	0.125000
1-dimensional ndarray only use this if you	indexes index	0.007353
group - 1	core group by cumcount ascending	0.166667
create a spreadsheet-style pivot table as a dataframe	reshape pivot table data	0.166667
are index sliceable then	to index sliceable obj	0.083333
evaluate the block return result block s from	core block where other cond align raise_on_error	0.066667
in	core	0.001326
fast lookup of	index set value	0.023810
method to handle na filling of take	indexes index assert take fillable	0.250000
swap level i with	index swaplevel i	0.333333
modify block in-place with new	object block set locs values check	0.125000
from ndarray	data index	0.076923
holidays	abstract holiday calendar holidays	0.166667
'args'	compat numpy validate groupby func	1.000000
to panel	core panel	0.019231
for temporarily setting a timezone	util set timezone	0.142857
make new index with passed location -s deleted	indexes index delete loc	0.333333
valid for	valid dtype	0.500000
axis with	axis join	0.142857
apply aggregation function or functions to	aggregate arg	0.071429
we have a valid ordered	cls ordered	0.058824
expanding count of number of non-nan	stats expanding count arg	0.200000
manipulation result has the same dimensions	core ndframe constructor	0.055556
1-dimensional ndarray only	core indexes	0.004762
types to stata types returns	dtype to stata type	0.500000
to the underlying array which by-definition can	datetime index ops mixin	0.029412
use this	core indexes index set value	0.023810
convert structured or record ndarray to dataframe parameters	frame from records cls	1.000000
index or ndarray filled with	index	0.002004
cast to datetimeindex	indexes period index to timestamp	1.000000
if the object is a named	core dtypes is named	0.500000
convert series to dataframe parameters	core series to frame name	1.000000
query	index_col coerce_float	0.062500
multivariate data visualization algorithm parameters	frame class_column ax color	0.200000
block	block block_items	0.500000
this is defined as a	multi index view cls	0.047619
install the scalar coercion	method converter	0.200000
validate that an positional indexer cannot	positional setitem indexer indexer	0.052632
maps[0] raise keyerror is	compat chain	0.034483
parse datetime	core tools parse	0.125000
styler with a custom template	styler from custom template	0.142857
i with level j do not change	i j	0.200000
object that can be	io html	0.012987
set the	series set	0.076923
to shift without copying data the shifted data	ndframe slice shift periods axis	0.083333
we take a string-like that is	convert string array data encoding	0.038462
a fixed frequency timedelta index with day	indexes timedelta range start end periods	0.083333
values as an enumerated type or categorical	core factorize values sort order	0.111111
equivalent to shift without copying data the	ndframe slice shift periods	0.083333
value using	value	0.005155
to run the	num_threads kwargs_list	0.050000
a manager and a axes dict	mgr mgr axes dtype	0.333333
value	index set value arr key value	0.038462
in the series/index by indicated	core str	0.011364
statement that create	create	0.033333
to construct this type from	dtypes interval dtype construct from string	0.166667
make sure an expression is not	computation check expression expr	0.200000
check that left and right index are equal	util assert almost equal left right check_exact check_dtype	0.333333
for getting a cross-section	xs	0.111111
pairs for each element in the	core map indices py arr	0.090909
return a list of my values cols	io table values cols	0.200000
float	set eng float	0.200000
is an	indexes categorical index is dtype	0.500000
the block manager from a	core sparse to manager sdf columns index	0.052632
object that can be	frame	0.009091
coerce to a fixed size	encoding itemsize	0.142857
*this is an	indexes categorical index is dtype	0.500000
return the block manager from a dataframe of	sparse to manager sdf columns index	0.052632
times	repeat arr repeats	0.200000
categorical-like unioning categories all	dtypes union categoricals to_union sort_categories ignore_order	1.000000
(e g convert back to bool/int	maybe downcast to dtype	1.000000
only	value arr key	0.023810
node must already exist and be	value	0.005155
bind a method to class python 2 and	compat bind method cls name	0.200000
the values to be at least 1	block shape values ndim	0.050000
datetimeindex with times to midnight length	index	0.002004
underlying	core indexes range index	0.021277
iterate	frame parser build	0.014706
represent an object in my store	fixed	0.055556
to midnight length	indexes	0.004651
initializes or resets _id attribute with new object	indexes index reset identity	0.250000
a stringified and numeric for these values	na values na_values	0.333333
function to create an op	computation op	0.166667
returns value occupying requested label default	label default	0.083333
to ndarray raises on	index coerce to ndarray	0.166667
valid ordered parameter if	validate ordered cls ordered	0.058824
the process of casting data from	casting cls data	0.047619
data (produce a "pivot" table) based on column	data frame pivot index columns	0.200000
read text from clipboard and pass	io read clipboard	0.200000
indexer fill with the	indexer	0.009174
a single dtype if dtype is	core simple blockify tuples dtype	0.111111
of the data are missing	core data	0.041667
validate if we can	indexes index validate for	0.333333
return my self as a sparse	series as sparse	0.250000
check that	util check	0.500000
concise listing of available	list keys width _print	0.111111
data from some accepted dtype to the internal	cls data	0.076923
read csv file (discouraged	core data frame from csv cls	0.066667
dataframes in vertical/horizontal layout for	table	0.010870
the values to be	core block shape values ndim	0.050000
of value from 1-dimensional ndarray only use	core indexes period index get value	0.071429
only use this if	core indexes index set value	0.023810
return if we are a categorical	core dtypes is categorical	0.500000
given the	core get	0.038462
type is an actual dtype	is dtype cls dtype	0.043478
axis omitted where alternately any	dropna axis how thresh subset	0.100000
of the values to be	values ndim	0.050000
the best locator based	locator	0.047619
general index and	core indexes index validate names	0.066667
self as a sparse	series as sparse	0.250000
types format slicing if	types slicer	0.200000
for first non-na/null value	data frame first valid index	0.250000
for this object	indexes index	0.007353
can be used to	io html frame parser	0.012195
going to write this as a frame table	table write obj	0.333333
avoid code duplication	str_rep masker	1.000000
of v should be	frozen ndarray searchsorted v	0.033333
rows of a dataframe	core data frame	0.011834
that an positional	valid positional	0.250000
retrieve single value at passed index label	series get value label takeable	1.000000
return label for last non-na/null value	series last valid	0.250000
an object dtype try	core dtypes maybe	0.166667
box function to get object from	core indexes datetime index ops mixin box func	0.142857
regexp	regexp	1.000000
the data types and ranges supported by	types data	0.333333
convert to object if we are a categorical	categorical index to safe for reshape	1.000000
try to read from	io read	0.038462
cmap	cmap	1.000000
of unique elements in	index ops mixin nunique dropna	0.083333
for general index and	core indexes index validate names name	0.066667
make a	deep	0.222222
overlap add	overlap	0.047619
putmask the data to the block we	putmask mask	0.142857
valid column name for generation (e g an	computation bin op	0.055556
specialized shift	ops mixin shift n	0.250000
the union of two	union other	0.333333
shallow	shallow	1.000000
each string in the series/index by indicated number	core str	0.011364
data	data values dtype	1.000000
datetime with tz	datetimetz	0.142857
have a valid ordered parameter if	core categorical validate ordered cls ordered	0.058824
ensure that we	index ops mixin ensure	1.000000
interpolate	core resampler interpolate method axis limit inplace	0.166667
used to iterate over the	frame parser	0.012500
to control get_slice_bound	indexes index get loc only exact matches key	0.142857
the float values converted	formats float array formatter get	0.055556
stderr in a buffer so that it	stderr	0.076923
listlike	listlike	1.000000
a style_dict to an xlwt style object	io xlwt writer convert to style cls style_dict	0.250000
cast to datetimeindex of timestamps at *beginning* of	data frame to timestamp freq how axis copy	1.000000
called via the 'numpy' library the third	compat numpy validate take with convert	0.055556
get a	get	0.007143
rows of a dataframe	data frame	0.011429
common	common	0.875000
multirow	io formats latex formatter format multirow	0.250000
0 number	number	0.100000
index value is	core indexes datetime index ops	0.034483
the block manager from	sparse to manager sdf columns index	0.052632
return the	ndframe get	0.400000
kinds allowable columns for this	table queryables	0.055556
data in the form of sparseseries objects	data	0.009709
read csv file (discouraged	series from csv cls path	0.066667
construct	ndframe construct	0.333333
compute a simple cross-tabulation of	core	0.001326
slice points for level 0 assuming	core indexes multi index bounds	0.166667
mixin to add a	mixin	0.037037
of type window_type and size window	rolling window arg window win_type min_periods	0.100000
offsets index to end of period frequency	date offset end apply index i freq	1.000000
for making this object picklable	multi index setstate state	0.333333
to ensure that they are valid stata	stata writer	0.125000
method to handle na filling of take	assert take fillable values	0.250000
up styles	io	0.003012
nameerror subclass for local variables	undefined variable error	1.000000
numpy / pandas type to its	table type	0.055556
an intervalindex from a a	core indexes interval index from arrays	0.166667
lookup of value from 1-dimensional	get value	0.166667
level j do not change the	j	0.034483
o and return packed bytes see :class	packb o	0.055556
validates that we have	ordered cls	0.055556
be used to iterate over	html frame	0.014706
create a new block	block	0.016393
the table this is generally only useful	hdfstore select column key column	0.142857
integer-location based indexing for	i	0.041667
the built up styles to html	formats styler	0.021739
the indexer input array to the	indexer	0.009174
from the cartesian product	from product	0.500000
engineering notation appending a	eng formatter	0.125000
with times	indexes datetime index	0.007634
a simple cross-tabulation	crosstab index	0.066667
post process for each axes overridden	plotting mplplot post plot logic ax data	0.333333
return index label s of the internal ndframe	core ndframe axes	1.000000
a series that is datetimelike	to datetimelike	0.125000
styles to html	io formats styler	0.021277
particular time of day	time time	0.142857
our native types	native types slicer na_rep date_format	0.200000
to table in	format	0.012346
periodindex	indexes period	0.034483
resample of a groupby implementation	index resampler groupby	0.166667
to take optional positional and keyword	optional	0.050000
select values at	at	0.125000
or all of the data	core data frame	0.005917
pack object o and	o	0.043478
to ndarray raises on scalar data converts other	core indexes index coerce to ndarray cls data	0.166667
an expression in python	computation	0.038462
exponential weighted moving variance	core ewm var bias	1.000000
minimum value of the	core categorical min numeric_only	0.250000
intervalindex return the corresponding interval with	interval	0.029412
handling	array	0.013889
node	io hdfstore append key	0.016667
needs additional handling as	indexes period index	0.035714
timegrouper and return	core resample obj kind	0.083333
capture stderr in a buffer	capture stderr	0.055556
each index value	datetime index ops	0.034483
to take optional positional and keyword	util optional args	0.066667
a tz-aware type return an	io get tz tz	0.066667
return the node with the	get node	0.166667
let's be explict about this	core data frame get agg axis axis_num	1.000000
to get the values view mask	core get values values	0.125000
is called via the 'numpy' library the	with convert convert	0.055556
locator based on a	plotting pandas auto date locator get locator	0.062500
the (attr formatted_value)	datetime index ops mixin format attrs	0.142857
array and create the manager	array to mgr data	1.000000
csv file (discouraged please use	core data frame from csv cls	0.066667
return the error dataframe/dict	plotting mplplot parse errorbars label err	0.142857
index label s of the internal ndframe	ndframe axes	1.000000
as_index	as_index	0.357143
convert to object if we are a	to safe for reshape	0.400000
comparison operations to convert timedelta-like to timedelta64	td index cmp	0.055556
equivalent to shift without copying data the	ndframe slice shift	0.083333
options	io	0.003012
return valid other	numeric binop other op	0.500000
reset the display options for printing and representing	util reset display options	0.200000
can be compiled into a	compilable	0.142857
full scope for use with	core computation scope full scope	0.055556
the minimum value	ops mixin min	0.111111
multi-index suitable for a panel-like dataframe	index time panels names	0.076923
a tree-like object that can be used	io html frame	0.012987
called	indexes period index	0.035714
1d array return an array	hash array vals	0.083333
the slice dictionary for these axes	core panel extract axes for slice axes	0.333333
are index sliceable then	index sliceable obj key	0.083333
sparsearray only the actual sparse values need to	sparse sparse array	0.043478
keys that are	keys	0.032258
fill value for the	fill value	0.222222
color background in a range according to the	formats styler background gradient s cmap low high	0.142857
1-dimensional ndarray	set value arr key	0.023810
slice locations for input	slice locs start end step kind	0.083333
unique elements of arr1 and arr2 are equivalent	equal contents arr1 arr2	0.066667
a 1d array	intervals	0.111111
manipulation result has the same	core ndframe constructor	0.055556
implementing the plot attribute for	by plot	0.062500
if we define an builtin	grouper is builtin	1.000000
csv file (discouraged please use :func pandas read_csv	from csv cls path sep	0.066667
or float that can safely be cast to	name val min_val	0.083333
return the cached item item represents a	get item cache item	0.333333
support a single assignment node	core computation base expr visitor visit assign node	0.500000
to apply we are	core group by mixin apply func name	0.050000
aggregating relational	group by	0.016129
all values found in	core transform	0.250000
frequency datetime index with custombusinessday as	core indexes cdate range start end	0.083333
is an internal non-public method*	indexes index to embed keep_tz	0.500000
to	formats styler	0.021739
coerce a scalar to a compat	core indexes period index coerce scalar to	0.071429
the name this allows simpler access to	core ndframe setattr name	0.166667
compute a	reshape	0.037037
wrap comparison operations to convert timedelta-like to timedelta64	indexes td index	0.055556
index objects contain the same elements	indexes range index	0.021277
value from 1-dimensional ndarray	indexes datetime index get value series	0.071429
get my plane axes indexes these are already	get plane axes index	1.000000
the shape of the values	values ndim shape	0.083333
pairs for each element in	core map indices py arr	0.090909
fast transform path	by transform fast result obj	0.333333
by category value returning a	ascending na_position	0.071429
a new unit if needed otherwise	datetime tzdtype new cls unit	0.055556
creating a subclass of styler with a	styler	0.022222
check whether the provided array or	arr_or_dtype	0.095238
the array interface return	multi index array dtype	0.125000
context manager for running code that expects	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
be used to iterate over	io html frame parser build	0.014706
two or more factors by default	core reshape crosstab index columns values rownames	0.333333
alert a user about a malformed	parser alert malformed msg row_num	0.500000
we have a fully reindex-output to	data frame group by reindex output result	0.045455
dataframe	formats data frame formatter	0.200000
the shape of the values to	shape values ndim shape	0.083333
get integer	period index get	0.500000
the binary feather-format for dataframes	to feather fname	0.083333
level	multi	0.018182
that can be used to iterate	frame parser build	0.014706
interpolate values according to different	core resampler interpolate method	0.166667
of value from 1-dimensional ndarray	indexes index set value arr key value	0.038462
frequency datetime index with business day as	core indexes bdate	0.050000
calculate slice bound that corresponds to given label	indexes index get slice bound label side kind	1.000000
return boolean series denoting	data frame duplicated	0.500000
number	indexes range	0.062500
a resample of a	period index resampler	0.062500
project_id	project_id	1.000000
we have	validate ordered cls	0.055556
only use this if	key	0.005051
file	io file	1.000000
to an xlwt style object	xlwt writer convert to style cls	0.500000
we have bytes decode them to	ensure decoded s	0.166667
categorical instance if	categorical	0.009615
specialized intersection for datetimeindex	indexes datetime index intersection	0.142857
optional fill	fill_value	0.033333
used to iterate over	frame parser build	0.014706
sets names on	multi index set names names	0.200000
each index value is found in the	core indexes datetime index ops mixin isin	0.083333
convert to our native	core categorical block to native	1.000000
required package is installed	package pkg_name	0.083333
parameters	ax	0.142857
and be table	append	0.012987
moving window of type window_type and size window	window win_type min_periods	0.100000
of arr1	arr1	0.050000
uint64 ndarray of my hashed	multi index hashed	0.166667
pandasobject	any pandas objects	0.250000
tree-like object that can be used to	io	0.003012
delimiter string starting at the end of the	rsplit arr pat n	0.037037
manage style and	plotting mplplot apply style colors colors kwds col_num	0.142857
first non-na/null value	series first valid index	0.250000
elements in the ndframe	core ndframe size	0.333333
snap time stamps to nearest occurring	indexes datetime index snap	1.000000
return a	core	0.002653
called after a ufunc needs additional handling	context	0.023810
values according to indexer	nd indexer	0.030303
to inat	core time delta block try	0.500000
array of python datetime date objects	indexes datetime	0.011494
concatenation of an datetimelike	core dtypes concat datetime	0.125000
sparse/dense and dtype)	core ndframe	0.005051
a sorted ndframe before	core ndframe truncate before	0.250000
return the cached item item represents a label	get item cache item	0.333333
and index parameters	value index	0.166667
convert to our native types	float block to native types slicer na_rep	0.250000
of kwargs suitable for initializing	kwargs cls	0.040000
equivalent to shift without copying data the shifted	slice shift	0.083333
to table in file node must already	hdfstore append key	0.016667
construct this type from a	dtypes interval dtype construct from	0.166667
the series extract groups from	core str extract frame arr	0.047619
name this allows simpler access to columns for	core ndframe setattr name value	0.166667
given a tuple of slices/lists/labels/boolean	multi index get	0.100000
positional indexer cannot enlarge	positional setitem indexer indexer	0.052632
to cast the array/value to a datetimelike	dtypes maybe cast to datetime	0.500000
to convert datetime-like	dt index cmp opname nat_result	0.066667
defined as a copy with the same	indexes multi index view cls	0.047619
style and color based on column number	style	0.041667
format the text display value of cells	io formats styler format formatter subset	1.000000
create an	ndframe create indexer	0.500000
simple	crosstab index columns	0.066667
the dtype object of the underlying data	core series dtypes	0.333333
the kinds allowable columns	io table queryables	0.055556
this function is called via the 'numpy' library	compat numpy validate take with convert	0.055556
number of bytes in	core indexes range index nbytes	0.052632
blocks collect and create a	axis consolidate transposed	0.062500
after a ufunc	indexes period index array wrap result context	0.041667
the index	core indexes interval index	0.062500
the base	tseries get base	0.333333
comparison operations to convert datetime-like to	core indexes dt index cmp opname nat_result	0.066667
read rows	rows	0.125000
if you	value	0.005155
return index or ndarray	indexes datetime index	0.007634
return if each value is nan	core indexes interval index isnan	1.000000
ndarray only	indexes	0.004651
values between particular times of the	ndframe between	0.100000
a date_format return a string	date_format	0.058824
operations to convert datetime-like to	dt index cmp opname nat_result	0.066667
that an positional indexer cannot	has valid positional setitem indexer indexer	0.052632
return packed bytes	packb	0.022727
that is datetimelike	to datetimelike data	0.125000
of v should be inserted	ndarray searchsorted v	0.033333
whether i can attempt conversion to a	convertible to index	0.333333
ndarray raises on scalar data	ndarray cls data	0.333333
and / or columns using input function	copy inplace	0.055556
the codes by the indexer fill with	nd indexer allow_fill	0.050000
object from the file path	path	0.083333
return the ftypes (indication of sparse/dense and	core ndframe ftypes	0.055556
where elements of v should be inserted	v	0.026316
index names to 'index' for	default names	0.083333
points for level 0 assuming	core indexes multi index bounds	0.166667
a tuple of slices/lists/labels/boolean indexer to a level-wise	locs tup	0.125000
date belongs to a leap year	indexes period index is leap year	0.142857
prior	array prepare result	0.111111
set new item	set item	1.000000
to specified frequency	ndframe asfreq freq method how normalize	0.250000
code to	code	0.076923
the slice dictionary for these axes	extract axes for slice axes	0.333333
call encode before writing to file for python	stata writer write to_write	0.083333
determines if two multiindex objects have the same	core indexes multi index equals other	0.333333
list-like indexer return the	interval index convert list indexer keyarr kind	0.066667
this is similar to a	reshape	0.037037
block manager from a	sparse to manager sdf columns	0.052632
coerce a	core indexes period index coerce	0.125000
an	categorical index	0.090909
by inferring dtype	use_dtypes convert_dates	0.500000
returns the float values	float array	0.055556
len	categorical size	0.111111
apply we are	by mixin apply	0.050000
array interface return	sparse sparse series array result	0.250000
return a boolean whether this axes needs validation	core ndframe indexer should validate iterable axis	0.166667
called after	index array wrap result	0.066667
1-dimensional ndarray	key	0.005051
value from 1-dimensional ndarray only	core indexes datetime index get value series	0.071429
with times	core indexes	0.004762
new multiindex	indexes multi index	0.026316
data_columns	data_columns	1.000000
using input function or	mapper axis copy inplace	0.055556
if seq is an iterator put its values	indexes ensure has len seq	0.500000
file node	value	0.005155
to ndarray raises on scalar	index coerce to ndarray cls	0.166667
that left and right	left right check_dtype check_index_type	0.333333
the keys will	core	0.001326
re-evaluate the obj with a groupby aggregation	core resampler groupby and aggregate how grouper	1.000000
hard to parse	core tools parse	0.125000
encoding	encoding	1.000000
of v should	searchsorted v	0.033333
wrap op result to have correct dtype	wrap result name data sparse_index fill_value	1.000000
dict of the kinds allowable columns for	io table queryables	0.055556
outside world format currently just the	core block external values dtype	0.125000
check following rows whether row should be a	row ilevels i rows	0.500000
len	size	0.041667
of the _upsample kwargs and	group by mixin apply f	0.166667
the values to be at least 1 d	block shape values ndim	0.050000
apply a function elementwise updating the	io formats styler applymap func subset	0.083333
for dataframe with multi-level index return new dataframe	data frame reset	0.027778
pytables file	hdfstore	0.014925
a categorical adjusted for	categorical index codes for	0.333333
simple cross-tabulation of	core reshape	0.047619
nrows ncols - number of	dataframe nrows ncols	0.250000
is of	core	0.001326
a regular expression	case flags	0.166667
all inputs as	asobject to_concat name	1.000000
mgr	mgr	0.416667
interpolation	interpolate	0.076923
assemble the	core tools assemble	0.500000
double_precision	double_precision	1.000000
representing the totally ordered cartesian product of all	shape sort xnull	0.066667
index with custombusinessday as the	indexes cdate range start end	0.083333
compute variance of groups excluding	core resampler var ddof	0.200000
categorical by category value returning a	inplace ascending na_position	0.071429
to make a repr	repr	0.040000
the codes by the indexer fill with the	nd indexer allow_fill	0.050000
compute count of group excluding missing values	core series group by count	1.000000
sure that time and panels are conformable	ensure like indices time panels	0.250000
internal compat with selectionmixin	ndframe selected obj	1.000000
creating a subclass of styler with a	io formats styler	0.021277
equivalent to shift without copying data	ndframe slice shift periods axis	0.083333
missing	missing	0.857143
series to dataframe	core data frame	0.005917
arr1	arr1	0.300000
indexer	ndframe indexer	1.000000
needs additional handling as	index array	0.033333
given a tuple of slices/lists/labels/boolean	get	0.007143
create a new block manager	block manager reduction f	0.250000
parameter	core categorical validate	0.055556
convert timedelta-like to timedelta64	core indexes td index	0.055556
a function column-wise row-wise or table-wase updating the	func axis subset	0.200000
klass	klass	1.000000
return a tree-like object that	frame	0.009091
create an indexer like _name in the class	create indexer cls name indexer	0.166667
copy if specified coerce to	index dtype copy	0.043478
of tuples of the (attr formatted_value)	index ops mixin format attrs	0.142857
the 'numpy' library	compat numpy validate take with convert	0.055556
casting data from some	safe casting cls data	0.047619
copy of the sparsearray	copy	0.012821
only use this if	core indexes index set value arr key	0.023810
block manager from a dataframe of series	core sparse to manager sdf columns	0.052632
if we are index sliceable then return my	to index sliceable obj key	0.083333
i : int slice or sequence of integers	core data frame ixs i axis	0.200000
the dict of dtypes if	dtypes	0.015873
the datetimelike methods (as	datetimelike methods	0.066667
a feather-format	io read feather	0.083333
forward fill the values	core resampler pad limit	0.333333
append	value format append	0.125000
of python datetime date	datetime index	0.007042
new unit if needed otherwise return from	dtypes datetime tzdtype new cls unit	0.055556
stata date formats to a type in type_map	convert datetime to stata type fmt	1.000000
and return a basegrouper which is an	core get	0.038462
with the block	io data col create for block	0.333333
ensure that an array object has	dtypes ensure	0.200000
dtype compat na value parameters	core dtypes na value for dtype dtype	0.333333
is a file-like	is file like	1.000000
number of seconds (>= 0 and less	core indexes timedelta index seconds	0.066667
resolve a variable name	resolve	0.090909
deprecated use :meth	ascending inplace	1.000000
for the object in order to correctly handle	core resampler convert obj obj	0.166667
applies a moving window of	window	0.071429
the best locator based	pandas auto date locator get locator	0.062500
handles preprocessing for cut where	reshape preprocess for cut x	0.200000
matches the expected exception and expected	exception matches exc_type exc_value trace_back	0.333333
take the	take	0.030303
block manager from	manager sdf columns index	0.052632
update index attributes e g	indexes datetime index maybe update attributes	0.200000
strings in each element in the series/index	core str get arr	0.142857
nat which has the same length	nat new	0.050000
of value from 1-dimensional ndarray	index get value series	0.250000
the block return result block s from	block where other cond align raise_on_error	0.066667
compute a simple cross-tabulation of	reshape crosstab index	0.066667
for running code that expects to	util assert produces warning expected_warning filter_level	0.071429
parser	parser	0.048000
return a tree-like object	parser	0.008000
set of kwargs suitable for initializing or	kwargs	0.022222
return my current col description	col col	0.500000
of the (attr formatted_value)	format attrs	0.142857
we if the passed type is	dtypes period dtype is	0.125000
initializing the gradientfill stop parameter	stop cls	0.066667
indicating if the date belongs to a leap	is leap	0.125000
csv file (discouraged please use :func pandas read_csv	core series from csv	0.066667
data pointer of the underlying data	core index ops mixin data	0.333333
single element pandasobject	ndframe	0.005025
of casting data from some accepted dtype	safe casting cls data	0.047619
return an xarray object from	ndframe to xarray	0.125000
the requested level the result will respect	level ascending sort_remaining	0.200000
bind a method to	bind method cls name	0.200000
of that group	group by	0.016129
compute the vectorized membership of x in y	core computation in x y	0.047619
called after	array wrap result	0.075000
table in file node must already exist	key value format	0.016667
the expected nrows	nrows expected	0.142857
be used to	frame	0.009091
wrapper function for	sparse arith method	0.333333
the set of unique elements of arr1	equal contents arr1	0.066667
remove and return an item pair from	map popitem	0.055556
of my hashed	index hashed	0.166667
that can	build	0.013514
the installed version of openpyxl is	is compat major_ver	0.111111
alert a user about a malformed	python parser alert malformed	0.500000
requested level	sortlevel level	0.142857
it	core series	0.008000
validate this column return the	index col validate col	0.200000
this is defined as	multi index view cls	0.047619
dataframe to a	data frame formatter to	0.083333
ndarray copy if	dtype copy	0.032258
at particular time of day e g 9	core ndframe at time time asof	0.066667
aggregate using input function or	core panel group by aggregate arg	0.250000
to cast the array/value to a datetimelike	core dtypes maybe cast to datetime value	0.500000
put method	core series put	0.055556
sparsearray from the	sparse sparse data	0.076923
nd	nd	1.000000
an xpath expression to simulate bs4's ability to	xpath expr attrs	0.166667
generator through chunked result	io sqltable query iterator result chunksize columns coerce_float	0.250000
of this object potentially casting to object	indexes period index to embed keep_tz	0.333333
some dataframes in vertical/horizontal	table	0.010870
csv file (discouraged	from csv cls path	0.066667
label values for requested level	indexes multi index get level values level	0.250000
the starargs attribute was changed	base expr visitor visit call 35 node side	0.066667
return new dataframe with labeling	data frame reset	0.027778
the 'numpy' library	take with convert	0.055556
consistent invalid indexer message	core indexes index invalid indexer	1.000000
the binary feather-format	frame to feather fname	0.083333
already exist and be table	hdfstore append key	0.016667
for series arithmetic operations	core arith method series op	0.333333
timedelta-like to timedelta64	core indexes td index cmp	0.055556
our binners	resampler set binner	0.333333
csv file (discouraged please use :func	series from csv	0.066667
the requested level the result will respect the	sortlevel level ascending sort_remaining	0.166667
handle na filling	fillable	0.095238
of a hack to accelerate unioning a	index union many others	0.040000
correct pandassql subclass based	pandas sql builder con flavor schema meta	0.055556
create index with target's values (move/add/delete values as	index	0.002004
empty except for allowed	allowed	0.090909
create a spreadsheet-style pivot table as	core reshape pivot table	0.111111
keeps track of whether numexpr was used	computation set test mode v	0.142857
remove and return	chain map	0.034483
x in y if possible otherwise use	in x y	0.047619
left and right panels are equal	panelnd equal left right check_dtype check_panel_type	0.333333
type is	dtypes interval dtype is	0.066667
called after a ufunc needs	index array wrap result context	0.034483
reshape long-format data to wide generalized inverse of	core reshape lreshape data groups	0.500000
we need to coerce a scalar	core indexes period index coerce scalar	0.250000
change string like dtypes to	dtypes invalidate string dtypes dtype_set	0.200000
reset the display options	util reset display options	0.200000
result as block	getitem block	0.250000
fast path for getting a cross-section	block manager fast xs loc	0.142857
function to group return result as series or	axis	0.011364
conversion method for	method	0.033333
of value from 1-dimensional ndarray only	core indexes datetime index get value series	0.071429
value from 1-dimensional ndarray only	core indexes datetime index get value series key	0.071429
manager for temporarily setting a timezone	util set timezone	0.142857
bool of a single	core ndframe bool	0.055556
apply we are stripping all of	apply func	0.027027
index	core indexes datetime index maybe	1.000000
all the locales	locales	0.090909
op string for this termvalue	core computation bin op generate v	0.250000
be a single block and not	new align inplace	0.125000
index with	index	0.002004
of n between self analagoust	n axis	0.100000
a timezone	timezone	0.083333
apply function and combine results together	by apply func	0.333333
of value from 1-dimensional ndarray only use	value arr key value	0.038462
of pandasobject	core computation any pandas objects	0.250000
gets called prior to a	array prepare result	0.111111
new freq essentially	resampler asfreq fill_value	0.066667
a tree-like object that can be used to	io html	0.012987
convert freq with decimal stride into a	decimal	0.058824
is maps[0]	compat chain map	0.032258
suitable for a panel-like dataframe	core panel index time panels names	0.076923
frequency datetime index	indexes	0.009302
with	core indexes datetime index	0.007634
belongs to a leap	indexes period index is leap	0.125000
series dropna if fill_value=nan returns a dense series	core sparse sparse series dropna axis inplace	1.000000
inplace conform rhs	core computation bin op conform rhs	1.000000
underlying	core	0.002653
concatenation of an datetimelike array	concat	0.058824
and return the block manager from	manager sdf columns index	0.052632
handle na filling	fillable values indices	0.125000
to dataframe apply	sparse sparse data frame apply func	0.166667
return boolean indicating if self is view of	core ndframe is view	0.200000
series	timedelta	0.022222
value from 1-dimensional ndarray only use this	period index get value	0.071429
in file	value	0.005155
panel to	to	0.006329
not supported for panel objects and will raise	panel to sparse	0.037037
tz-aware type return an encoded	get tz tz	0.066667
take values	take nd	0.095238
returns axes if supplied in args/kwargs	axes from arguments args kwargs require_all	0.333333
append to table in file node	append	0.012987
checks that all the labels are	index is all dates	0.333333
take which sets nan values in	core take nd arr indexer	0.125000
maximum by	max	0.090909
including/excluding columns based on their dtype	select dtypes include exclude	1.000000
dataframe with labeling information in the columns under	data frame reset	0.027778
times to midnight length	indexes datetime	0.011494
blocknd	blocknd	1.000000
construct an intervalindex from a a left and	core indexes interval index from arrays cls left	0.500000
return a new block	sparse block	0.250000
intervalindex from	from	0.030303
contains any keys that are not in 'compat_args'	for invalid keys fname	1.000000
long-format data to wide generalized inverse of	lreshape data groups	0.333333
sets names on levels warning mutates!	index set names names level	0.200000
fast lookup of value from	value arr key value	0.038462
the op string for this	core computation bin op generate	0.066667
input function	mapper axis copy	0.333333
update index attributes e g freq depending	indexes index maybe update attributes attrs	0.200000
indexes give a	core indexes index	0.007042
boolean mask of index to be	index	0.002004
of the values	values	0.008547
dataframe to a	data frame to	0.111111
evaluate the block return result block from	core block eval func other raise_on_error	0.333333
perform the reduction type operation if	core index ops mixin reduce op name axis	0.083333
an xpath expression to simulate	xpath expr attrs	0.166667
return our new	core period index resampler get new	1.000000
frequency datetime index with business day as	indexes	0.004651
swap levels i and j in a multiindex	core ndframe swaplevel i j	0.333333
return an axes dictionary for	ndframe construct axes dict axes	0.166667
indices that would sort the index and	range index argsort	0.166667
1-dimensional	core indexes index set	0.023810
1-dimensional ndarray only use this if	value arr key	0.023810
subset rows or columns of	core ndframe filter items like regex axis	0.166667
of an indexer even	core indexes index get indexer for	0.250000
after a	core series	0.008000
provide a nice str repr	window unicode	0.071429
check if the object is an iterator	core dtypes is iterator obj	1.000000
only	set value arr key	0.023810
html table	html	0.011765
str df	str	0.017544
take which sets nan values	take nd arr	0.125000
reset_index	level drop name	1.000000
return an item pair from maps[0] raise keyerror	popitem	0.043478
options for printing and representing	options	0.041667
return block for the	core block	0.010870
microseconds (>= 0 and less than 1 second)	timedelta index microseconds	0.066667
vectorized membership of x in y if	in x y	0.047619
get integer location	period index get loc	1.000000
(of a	setitem indexer	0.250000
sequence of terms for instances of pandasobject	any pandas objects terms	0.250000
if it was a pathlib path	stringify path filepath_or_buffer	0.142857
for second holiday of two adjacent ones!	tseries next monday or tuesday dt	0.200000
value from 1-dimensional ndarray only use	indexes categorical index get value series	0.100000
info axis of	core get info	0.250000
arrays vs scalar string-likes	a b	0.083333
a moving window of	window apply window	0.166667
sure that we have a fully reindex-output to	core data frame group by reindex output result	0.045455
internal method to handle na filling of take	take fillable	0.250000
1-dimensional ndarray	core indexes index set value	0.023810
value from 1-dimensional ndarray only use this	value	0.005155
count of number	count	0.055556
horizontal bar plot	plotting series plot methods barh	1.000000
sorted by the n largest values of columns	nlargest n columns keep	1.000000
validates that we have a valid ordered	validate ordered cls ordered	0.058824
columns	columns	0.214286
to infer better dtype for object columns	core ndframe convert datetime numeric timedelta coerce	0.071429
write out the binary feather-format for	frame to feather fname	0.083333
as a dataframe	data values index	0.066667
get integer	core indexes datetime index get	0.500000
index (can't do in	json jsontable writer init obj orient date_format double_precision	0.166667
add in the datetimelike methods (as we may	mixin add datetimelike methods	0.333333
block s	core block where other cond align	0.166667
group of given frequency str	get freq group freq	0.250000
preserve dtype if	core putmask smart v m n	0.055556
to the how return	core window convert freq how	0.250000
the axis indicies	panel extract axes data axes	0.142857
take a string-like that is object dtype	io convert string array data encoding	0.038462
input order may	order	0.125000
accelerate unioning	index union many others	0.040000
json	json	0.600000
returns the float	float array formatter get result as	0.055556
locator based on	get locator	0.062500
of an sparse/dense array of arrays each of	axis typs	0.500000
to convert timedelta-like to	indexes td index cmp	0.055556
type	table type x	0.055556
compose 2 callables	core reshape compose2 f g	1.000000
a multirow	formats latex formatter format multirow	0.250000
check that the left and right	left right	0.047619
this function is called via the 'numpy' library	validate take with	0.055556
csv	csv cls path sep	0.066667
the mode s of the	series mode	0.083333
that can be used to iterate over the	html frame	0.014706
available options grouped	core pp options	0.083333
a boolean	core indexes is	0.166667
we have a dtype	name	0.025000
convert series to dataframe	core series to frame	1.000000
the union of two multiindex objects sorting if	multi index union other	0.066667
return datetimeindex	indexes datetime	0.011494
midnight	indexes datetime	0.011494
the block by periods	periods axis mgr	0.500000
for ordered data like	ordered	0.017857
outside world format currently just	block external values dtype	0.125000
alignment object	alignment	0.125000
of categoricaldtype this metaclass determines subclass ability	dtype type	0.200000
function for	arith method	0.333333
values attribute if it	core	0.001326
null_color for missing values	null_color	0.076923
pack object o and return	packb o	0.055556
a astypeable to categorical	categorical astype dtype	0.333333
fixed frequency timedelta	timedelta range start end periods	0.333333
sets names on levels warning mutates!	set names names	0.200000
from datetime to sif http //www stata	io datetime to stata	0.500000
a particular object	dtypes extension dtype bytes	0.142857
method to class python 2	method cls	0.076923
temporarily setting a timezone	set timezone	0.142857
an expression in the context	expr inplace	0.200000
add numeric operations to the groupby	group by add numeric operations cls	0.250000
diff of	diff n axis mgr	0.111111
if the process of casting data from	index assert safe casting cls data	0.047619
date forward	tseries date	0.083333
dictionary for the	core ndframe construct axes dict from	0.250000
df	df	1.000000
on instantiation	core group by assure	1.000000
i and j in a multiindex parameters	i j copy	0.250000
an ndarray of the flattened values	indexes index ravel order	0.037037
file node must already exist and	hdfstore	0.014925
object that can	html frame parser build	0.014706
list of tuples of the (attr formatted_value)	indexes index format attrs	0.142857
my state from the	io index col	0.055556
get the data for this colummn	io data col get attr	1.000000
initializing the gradientfill stop	stop	0.050000
returns the float values converted into	formats float array formatter get	0.055556
for making this object picklable	multi index reduce	0.333333
csv file (discouraged please use :func	frame from csv cls	0.066667
bind a method to class python 2 and	bind method cls	0.200000
valid ordered	core categorical validate ordered cls ordered	0.058824
kwargs_list	kwargs_list	1.000000
string-like array to convert object	core dtypes maybe convert string to object values	0.142857
via the 'numpy' library	take with convert convert args kwargs	0.055556
for	get	0.007143
of two	other	0.081081
and be table	hdfstore append key	0.016667
bytes in the underlying	core indexes range index nbytes	0.052632
float values	io formats float array formatter get	0.055556
expanding count of number of non-nan observations	stats expanding count	0.200000
select values at particular time of day e	at time time asof	0.066667
day hour minute second millisecond or microsecond	core indexes datetime index ops mixin resolution	0.125000
apply	apply index days	0.500000
table in file node must	append key	0.016667
sorted ndframe before	ndframe truncate before	0.250000
manager with the blocks	core block manager combine blocks	0.250000
the view limits to the nearest multiples of	locator autoscale	0.055556
the levels attribute is 1 or a	table is multi index	0.142857
pack object	msgpack packb	0.025641
of this frame	frame	0.009091
synonym for :meth	inplace	0.055556
values to be at least 1	values	0.008547
and be table	io hdfstore append key value	0.016667
value for the nan/nat from the	value val	0.250000
fast lookup of value from 1-dimensional ndarray only	core indexes datetime index get value series key	0.071429
only use this if you	arr key	0.023810
construction of strings to numpy	compat numpy	0.166667
the reduction type operation if	core index ops mixin reduce op	0.083333
retrieve the metadata for this columns	index col read metadata handler	0.500000
we create the grouper on instantiation	core group by assure grouper	0.250000
cast it to	maybe cast	0.100000
if the object is list-like	core dtypes is list like obj	0.333333
of python datetime date	indexes datetime	0.011494
boolean indicating if self is view	ndframe is view	0.200000
validates	validate ordered cls	0.055556
evaluate	bin op evaluate	0.333333
'numpy' library the third	validate take with convert convert args	0.055556
starting at the end	rsplit arr pat	0.037037
apply we are stripping	apply	0.026316
underlying	core indexes	0.009524
is called via the 'numpy' library the third	with convert convert	0.055556
return the block manager from a	sparse to manager sdf	0.052632
node must	append key value	0.016667
generate	generate	0.375000
positional indexer cannot	indexer has valid positional setitem indexer indexer	0.052632
if the date belongs to a leap	leap	0.076923
locator based on a distance	date locator get locator dmin dmax	0.250000
variable	variable	1.000000
dataframes in	table	0.010870
membership of x in y	computation in x y	0.047619
unit if needed otherwise return	cls unit	0.125000
iterate over the dom	html frame parser build doc	0.125000
an interval or intervalindex return the corresponding interval	interval	0.029412
multiindex has	multi	0.018182
the padded hexadecimal id of	core computation raw hex id	0.166667
fast lookup of	value	0.005155
the indexer	nd indexer allow_fill	0.050000
return the header of a table	html frame parser parse thead table	0.333333
node must already exist and	format	0.012346
to a	formatter to	0.500000
a categorical	core indexes categorical index	0.047619
of	indexes multi	0.014493
intersection of two index objects sortedness	range index intersection other	0.083333
in i	days i	1.000000
days	days	1.000000
creating a subclass of styler with a custom	io formats styler from custom	0.200000
an	fixed	0.055556
read csv file (discouraged please use	core data frame from csv cls path header	0.066667
builds a concise listing of available options grouped	core pp options list keys width _print	0.111111
use this if you	arr key	0.023810
of this	indexes period index	0.035714
factory for a type checking function of type	computation is type	0.125000
a list of my values cols	table values cols	0.200000
append to table in file node must	key value format append	0.125000
whether the 'name' parameter for parsing	io validate	0.031250
require the	indexes datetime index simple new cls	0.250000
with times to midnight	core indexes	0.004762
check if we do need a multi reindex	ndframe needs reindex multi axes method level	0.333333
value from 1-dimensional ndarray only use this if	categorical index get value series	0.100000
specialized intersection for datetimeindex objects may be	datetime index intersection other	0.142857
concatenation of an datetimelike array of arrays each	dtypes concat datetime to_concat axis	0.125000
a dataframe to a variable number of	data frame	0.005714
for panel objects	core panel	0.019231
(header new_data) for header	pop header name row index_col	0.200000
calculate	core indexes	0.004762
return an ndarray of the flattened values of	ravel order	0.037037
am	core categorical block	0.100000
a class for writing stata	frame to stata	0.200000
call encode before writing to file for	io stata writer write to_write	0.083333
at the given quantile	quantile	0.058824
intersection of two index objects sortedness	indexes range index intersection other	0.083333
actual filter	computation filter bin op	0.250000
string-like that	string array data	0.038462
cumsum	cumsum	1.000000
by definition have a tz	formats datetime64tzformatter format strings	0.166667
to ndarray repeat	mixin repeat repeats	0.333333
shape of the values	values ndim shape	0.083333
via the 'numpy' library the	validate take with convert	0.055556
that do not throw an exception when	util valid	0.125000
ufunc needs additional handling	context	0.023810
to	io hdfstore append key value	0.016667
dictionary for the	axes dict from	0.250000
correct day for each date in i	days i roll	0.500000
with times to midnight	index	0.002004
generic stata	stata	0.022222
return a basegrouper	core get	0.038462
new block try to preserve dtype if	core putmask smart v m n	0.055556
full scope for use with passing to	core computation scope full scope	0.055556
panel or object coercible to	update other join overwrite filter_func	0.055556
to set the _typ here	set axis axis labels fastpath	0.200000
array interface return my values	array dtype	0.125000
names to 'index'	default names data	0.083333
index	core indexes timedelta index	0.250000
read csv file (discouraged please	frame from csv cls path	0.066667
purely integer-location based indexing for	i loc indexer	0.142857
called prior to a	prepare result	0.111111
fast lookup of value from 1-dimensional ndarray	period index get value	0.071429
swap levels i and j in	ndframe swaplevel i j	0.333333
2d-nd reshape operation on a blockmanager	block manager reshape nd axes	0.500000
shift without copying data the	slice shift periods axis	0.083333
the bool of a single element	core ndframe bool	0.055556
a numpy / pandas type	type x	0.055556
converts dtype types to stata types returns the	io dtype to stata type dtype	0.250000
determines if two multiindex objects have	core indexes multi index equals other	0.333333
return if the	core	0.001326
apply	mixin apply func	0.050000
operations to the cls evaluate the doc	aggregate operations cls use_numexpr	0.142857
coerces data to	index coerce to	0.333333
concatenation of an datetimelike	dtypes concat datetime to_concat axis	0.125000
is	core dtypes period dtype is	0.125000
an object dtype try	dtypes maybe	0.166667
return the cached item item represents	core ndframe get item cache item	0.333333
infer the dtype	dtypes infer dtype	0.333333
scope_level	scope_level	0.416667
quarter representation - doesn't call super	quarter offset	1.000000
best locator based on a	locator	0.047619
scatter plot from two dataframe columns	plotting scatter plot data x y by	0.125000
this is defined as a copy with the	core indexes multi index view cls	0.047619
a new sparsearray from the input	core sparse sparse data	0.076923
called upon unpickling	core indexes new interval index cls d	0.333333
localize tz-naive timeseries to	tz localize	0.333333
parser based on	parser	0.008000
returns the base	get base	0.333333
check	ndframe check	1.000000
internal method to handle na filling of take	core indexes index assert take fillable	0.250000
from 1-dimensional ndarray only use	value arr key	0.023810
mapping of how to create the grouper indexers	grouper obj key axis level	0.142857
provide concatenation of an datetimelike array of	dtypes concat datetime to_concat axis typs	0.142857
override this only if the process of casting	safe casting	0.125000
freq with decimal stride	decimal	0.058824
a metaclass	metaclass metaclass	0.125000
the process of casting data from some accepted	numeric index assert safe casting cls data	0.047619
datetime date	core indexes datetime	0.011494
level j	j	0.034483
index for series	core ndframe	0.005051
na_rep	na_rep	1.000000
index or maximum along an axis	indexes datetime index ops mixin max axis	0.333333
validate that an positional indexer cannot enlarge	has valid positional setitem indexer indexer	0.052632
used to iterate	io html frame	0.012987
additional	wrap result	0.022727
make a scatter plot from two dataframe columns	plotting scatter plot data x y by	0.125000
argument return	arg	0.018868
an intervalindex from a 1d array	index from intervals cls data	0.125000
lookup of	indexes	0.004651
a list of tuples of the (attr formatted_value)	indexes range index format attrs	0.142857
via the 'numpy' library the third	validate take with	0.055556
number of unique elements in the group	series group by nunique dropna	0.250000
return the dtype object of the underlying data	core series dtypes	0.333333
block return result block from the	block	0.008197
and return the block manager from	sparse to manager sdf	0.052632
that the exception raised	util assert raises	0.200000
the array interface return my	interval index array result	0.125000
type	dtype	0.065934
construct this type from a	categorical dtype construct from string	0.166667
an intervalindex from a a left and	indexes interval index from arrays cls left	0.500000
plane	plane	0.833333
dict {group name -> group labels}	core group by groups	1.000000
try to preserve dtype if possible	putmask smart v m n	0.055556
type that can be coerced to periods	period index simple new cls	0.142857
extended	range index extended	1.000000
arr to have	arr	0.013699
set the value inplace	value	0.005155
that	categorical validate ordered cls	0.055556
algos groupsort_indexer implements counting sort and it	group index sorter group_index ngroups	0.250000
hard to parse datetime string	core tools parse time string	0.250000
fixed frequency	range start end freq periods	0.333333
ufunc needs	wrap result context	0.029412
the categorical by category value returning a	inplace ascending na_position	0.071429
process of casting	indexes numeric index assert safe casting	0.125000
we have a full length slice	is full slice obj	1.000000
the bool of a single element pandasobject	bool	0.043478
return packed bytes see :class packer for options	msgpack	0.022222
via the 'numpy' library	numpy validate take with convert convert args kwargs	0.055556
pairwise correlation of columns excluding na/null values parameters	core data frame corr method min_periods	0.111111
validates that we have	categorical validate ordered	0.055556
timedelta	timedelta	0.200000
the float values converted into	formats float array formatter get result	0.055556
of ndframe as opposed to	core ndframe to	0.040000
read csv	csv cls	0.066667
of the axis indicies	panel extract axes data axes	0.142857
membership of x not in	not in x	0.166667
check	is	0.005291
handles preprocessing for cut where we	core reshape preprocess for cut x	0.200000
column and index parameters	index col	0.066667
the float	io formats float	0.055556
the float	formats float array formatter	0.055556
ndarray only use this if you	index set	0.022727
a 1d array return an array of	util hash array vals	0.083333
return the block manager from a dataframe of	to manager sdf	0.052632
read csv file (discouraged please	from csv cls path sep parse_dates	0.066667
to its corresponding json_table	json as json table	0.333333
coerce	core dtypes coerce	0.200000
iterate over the blocks collect and	apply f axes filter do_integrity_check	0.083333
label if label is	label	0.028571
check to see if we can set	can set	0.125000
concatenation of	dtypes concat datetime to_concat axis	0.125000
an expression in the	expr inplace	0.200000
number of nanoseconds (>= 0 and less	timedelta index nanoseconds	0.066667
flags	flags	0.176471
to ndarray repeat	index ops mixin repeat repeats	0.333333
render	buf columns col_space header	0.250000
serialize	compression	0.166667
vertical/horizontal	table	0.010870
sparsearray only the actual sparse values need to	core sparse sparse array	0.043478
path's extension against the writer's supported extensions	excel writer check extension cls ext	0.333333
return a new manager with the blocks	core block manager combine blocks copy	0.250000
t or tuple	t	0.125000
a datetimeindex	indexes datetime	0.011494
use this if	core indexes index set	0.023810
return a boolean if we	is	0.010582
minimum value	index ops mixin min	0.125000
compare numeric	is numeric v string	0.333333
update	maybe update	1.000000
take	core take nd	0.125000
string representing a frequency guess generated by infer_freq	ops mixin inferred freq	0.250000
categoricaldtype this metaclass determines subclass ability	categorical dtype type	0.333333
its values attribute if	core	0.001326
difference of n between self analagoust to s-s	core diff arr n axis	0.500000
labels from observed group ids	decons obs group ids comp_ids obs_ids shape labels	0.250000
replacement key defined will	translate key key	0.200000
going to write this as	write obj	0.041667
cumulative sums over requested	data frame cumsum	1.000000
swap levels i and j in a multiindex	swaplevel i j	0.222222
that can be used to iterate over	io html	0.012987
interpolate machinery	core block interpolate with fill method axis	0.200000
return a categorical adjusted for	indexes categorical index codes for	0.333333
values possibly casting	values na_values try_num_bool	0.500000
to apply we are stripping all of	core group by mixin apply	0.050000
for panel objects and will	panel to sparse	0.037037
exist	io hdfstore append key value format	0.016667
my	core indexes interval index	0.062500
extend	extend	1.000000
update index attributes e g freq depending	core indexes datetime index maybe update attributes attrs	0.200000
running code that expects to raise or	util assert produces warning expected_warning	0.071429
pivot to the labels shape	to blocknd values placement shape labels	1.000000
not in	core computation not in	1.000000
ndarray only use this if you	categorical index	0.045455
provide method name lookup and completion	pandas object dir	0.166667
called after a ufunc needs additional handling	index array wrap result context	0.034483
perform the reduction type operation if	index ops mixin reduce op	0.083333
for	group	0.027027
:meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace limit	0.333333
is a	core indexes	0.004762
try to coerce dates and/or numbers	soft convert objects values datetime numeric timedelta	1.000000
this if	key	0.005051
called upon unpickling rather than the default	cls d	0.083333
construct a slice of this container	ndframe slice slobj axis kind	0.333333
cross-tabulation of	reshape crosstab index columns values	0.066667
a string representation for this	core indexes index unicode	0.083333
object for datetimelike properties of the series values	properties	0.046512
get new sparsedataframe	sparse sparse data	0.076923
1d array	intervals	0.111111
return the td elements from a	frame parser parse td obj	0.083333
a manipulation result has	ndframe constructor	0.055556
find all occurrences of	findall arr	0.250000
merge blocks having same dtype exclude non-consolidating blocks	consolidate blocks	1.000000
apply box func to passed values	ops mixin box values values	1.000000
builds a concise listing of available options grouped	pp options list keys width _print	0.111111
unique elements of arr1 and arr2 are	arr1 arr2	0.066667
number of nanoseconds (>= 0 and less than	timedelta index nanoseconds	0.066667
and 'kwargs' should be	func method args kwargs	0.142857
of index to be returned	index b	0.041667
values at particular time	ndframe at time time asof	0.066667
in the series/index	core str get arr	0.142857
tree-like	io html frame parser build	0.014706
object is a regex pattern instance	dtypes is re	1.000000
dispatch to apply	mixin apply func name	0.050000
we are index sliceable then	index sliceable	0.083333
and dtype) in	core ndframe	0.005051
of casting data from some accepted	indexes numeric index assert safe casting cls data	0.047619
categorical if not	categorical	0.009615
reduction type operation	index ops mixin reduce op	0.083333
return a tree-like object that can	build	0.013514
a new categorical by	core categorical sort values inplace	0.166667
is defined as a copy	indexes multi index view cls	0.047619
object for datetimelike properties	properties	0.046512
guarantee the shape of the	shape	0.047619
the boxed	indexes datetime	0.011494
on the first day of the month	month begin	0.111111
a list of tuples of the (attr formatted_value)	index format attrs	0.142857
wormtable	wormtable	0.833333
attempt to infer better dtype for object columns	convert datetime numeric timedelta coerce	0.071429
getitem defers to	getitem	0.125000
for panel objects	core panel to sparse	0.037037
select values between particular times	indexes datetime index indexer between	0.125000
built up styles to	formats styler	0.021739
return my self as a sparse	as sparse	0.250000
of an series refer to numpy ndarray repeat	series repeat repeats	0.333333
simple cross-tabulation	core reshape crosstab index columns values	0.066667
of ndframe as opposed to sparse	core ndframe to	0.040000
ndarray only use this	arr	0.013699
check if the object is list-like	core dtypes is list like obj	0.333333
in the numeric add/sub methods	core indexes index add numeric methods	0.500000
table in file node must already	hdfstore append key	0.016667
dataframe	core data frame to	0.037037
the minimum value of the	core categorical min numeric_only	0.250000
the metadata for this columns	index col read metadata	0.250000
interpolate	resampler interpolate	0.166667
object and the specifications setup the internal grouper	grouper set grouper obj sort	0.250000
find	find	1.000000
numpy doesn't like to compare numeric	dtypes is numeric v string like	0.333333
the passed type is	core dtypes interval dtype is	0.066667
function for series arithmetic operations to	method series op name	0.333333
take the input data_columns and min_itemize and create	data_columns min_itemsize	0.200000
passed type is an actual dtype that	period dtype is dtype cls dtype	0.142857
are going to write this as a frame	write obj data_columns	0.111111
ndarray of my hashed values	multi index hashed values	0.166667
base	base	0.700000
columns with an arbitrary number of	legacy table read where columns	0.111111
expected nrows	table nrows expected	0.142857
a categorical	indexes categorical	0.214286
comparison operations to convert timedelta-like to timedelta64	indexes td index cmp opname nat_result	0.055556
the intersection of two	intersection other	0.153846
add in logical methods	indexes index add logical methods cls	1.000000
background null_color for missing values	null null_color	0.125000
that an positional indexer cannot	valid positional setitem indexer indexer	0.052632
called after a ufunc needs additional	period index array wrap result context	0.041667
timedelta-like	indexes td index cmp opname	0.055556
convert to our native types format slicing	to native types slicer na_rep date_format	0.250000
the month	month end	0.100000
from maps[0] raise	chain	0.031250
as a block	block	0.016393
the op string for this	op generate	0.066667
null values converted	values	0.008547
node must already exist and	io hdfstore append key value format	0.016667
the left and right	left right	0.047619
select values between particular times of	datetime index indexer between	0.125000
that time and	like indices time	0.125000
of whether each index value is found in	index ops mixin isin values	0.083333
the codes by the indexer	indexer allow_fill	0.050000
implementing the plot attribute for groupby objects	group by plot	0.062500
lists to	to	0.006329
setup	resampler set	0.333333
of type window_type and size window	window win_type	0.100000
concatenation of an datetimelike	concat datetime to_concat axis	0.125000
dropna if	dropna axis inplace	0.166667
a datetimeindex but for	datetime	0.006711
panel objects and will raise an error	panel to sparse	0.037037
ndarray only use this if	core indexes index set value	0.023810
to make a repr function return fillvalue	repr fillvalue	0.083333
return the full	full	0.071429
to the scope	core computation scope	0.166667
by category value returning a new categorical by	core categorical sort values inplace ascending na_position	0.333333
checks that all the labels are datetime	indexes numeric index is all dates	0.333333
from other	other method	0.333333
inferred types one for each level	multi index inferred type levels	0.333333
start	start	1.000000
by category value returning	inplace ascending na_position	0.071429
objects to a timedelta index	listlike arg unit box errors	0.142857
specified frequency	asfreq freq	0.250000
used to iterate over the	frame parser build	0.014706
intersection of two index objects sortedness of the	index intersection other	0.052632
and right	right	0.272727
tseries	tseries	0.416667
the ftypes (indication	core ndframe ftypes	0.055556
of python datetime date objects	core indexes datetime index	0.007634
comparison operations to convert timedelta-like	td	0.043478
radviz - a	radviz	0.100000
for general index	core indexes index validate names name	0.066667
a copy of a series excluding	series group	0.030303
create and return the block manager from	manager sdf columns index	0.052632
convert from datetime to sif	io datetime to	0.125000
are not a floating	maybe cast indexer	0.200000
return a new block (of a possibly	block setitem indexer	0.066667
if we define an builtin function for	base grouper is builtin func	0.333333
excluding elements from	group	0.027027
given	get	0.064286
the 'numpy' library the	validate take with convert convert	0.055556
node must already exist	io hdfstore	0.014493
a spreadsheet-style pivot table as a dataframe	core reshape pivot table data values index	0.166667
ndarray or list of	data index	0.076923
_apply kwargs	window center	0.076923
second	second	1.000000
the required package	package pkg_name min_version	0.083333
as the default frequency	freq	0.032258
construct this type from	core dtypes interval dtype construct from	0.166667
for	msgpack packb	0.025641
rearrange index levels using	series reorder levels	1.000000
with times to midnight length	indexes datetime index	0.007634
string and	string to	0.166667
a string-like	convert string array data	0.038462
in a block of	make block	0.166667
value from 1-dimensional ndarray only	period index get value	0.071429
indices of the minimum	ops mixin argmin	0.166667
the grouper	grouper	0.058824
tree-like object	parser	0.008000
fully deleting the	io	0.003012
object that can be used	io	0.003012
as a unicode string	indexes	0.004651
bool	bool	0.260870
'args' and 'kwargs'	compat numpy validate resampler func method args kwargs	0.166667
add in categorical accessor methods	indexes categorical index add accessors	1.000000
with custombusinessday as	cdate range start end	0.333333
in a possibly local context	key is_local	0.166667
fast lookup of value	arr key value	0.038462
array return an array of deterministic integers	hash array vals encoding hash_key categorize	0.250000
data (produce	core data	0.041667
indexer input array to the smallest dtype possible	indexer dtype indexer categories	0.333333
that we have a	is	0.005291
error is encountered in pd	parser error	0.055556
building a styled html representation fo	style	0.041667
to construct this type from a	dtype construct from	0.166667
blocks collect and create a new block manager	core block manager apply f axes filter do_integrity_check	1.000000
dataframe with labeling information in the	data frame	0.005714
a datetimelike dtype	datetime value dtype	0.166667
'name' parameter for general index	core indexes index validate	0.066667
convert dataframe to dictionary	data frame to dict orient	1.000000
and aggregating relational	group by	0.016129
'numpy' library the third	numpy validate take with convert convert args kwargs	0.055556
sets the view limits to the nearest multiples	time series date locator autoscale	0.055556
the diff of the values	diff n axis	0.111111
rename	rename	0.625000
fast	core	0.001326
compute a simple cross-tabulation of	columns	0.017857
defaults to returning	inplace verify_integrity	0.333333
coerce	dtypes coerce indexer	0.500000
resample of a groupby implementation	resampler groupby	0.166667
underlying data which is a categorical	indexes categorical index values	0.333333
take which sets nan values in	take nd arr indexer axis	0.125000
for series columns for dataframe major_axis for	core ndframe iteritems	0.055556
return index or	core indexes datetime index ops mixin	0.029412
in the file	io hdfstore	0.014493
holidays between start_date and end_date	abstract holiday calendar holidays	0.166667
the binary feather-format for	frame to feather fname	0.083333
concatenation of an datetimelike array	core dtypes concat datetime to_concat axis	0.125000
will be using numexpr	can use numexpr op op_str	0.333333
number	core indexes multi index	0.013158
index objects contain the same	core indexes	0.004762
value occupying requested label default to specified	sparse sparse series get label default	0.083333
comparison operations to convert datetime-like to datetime64	core indexes dt index cmp opname nat_result	0.066667
register	register	1.000000
list of my values cols	io table values cols	0.200000
metadata	metadata	0.700000
delegatedclass of a series that is datetimelike (e	indexes maybe to datetimelike	0.142857
all of the _apply kwargs and	window center	0.076923
comparison operations to convert timedelta-like to timedelta64	indexes td index cmp opname	0.055556
to a sql database	sqlite database to sql	1.000000
of the flattened values of the	indexes index ravel order	0.037037
object that	html frame	0.014706
recursively evaluate an expression in python space	computation bin op call env	0.250000
coerce values	coerce args	0.333333
for panel objects and will raise an	panel to sparse	0.037037
to_append	to_append	1.000000
timedelta-like	indexes td index cmp opname nat_result	0.055556
if	indexes index	0.007353
dataframe objects and do not	data frame	0.005714
object that can	html frame	0.014706
times to	indexes	0.004651
only use this	indexes index set value arr	0.023810
dataframe apply for sparsedataframe	core sparse sparse data frame apply func	0.166667
nanoseconds (>= 0 and less	core indexes timedelta index nanoseconds	0.066667
requested level the result will respect	level ascending sort_remaining	0.200000
we have a	validate ordered	0.055556
the flattened values of the underlying data	indexes index ravel order	0.037037
index names to 'index'	names data	0.083333
levels of both multiindex objects are the	core indexes multi index equal levels other	0.100000
dataframes	table	0.010870
process of casting data from some accepted	numeric index assert safe casting cls data	0.047619
from a 1d array	from intervals	0.125000
value from 1-dimensional ndarray only use	period index get value series	0.071429
index with target's values (move/add/delete	indexes multi index	0.013158
the original	core	0.001326
return value at the given quantile a	quantile	0.058824
bounds	to bounds	0.500000
union of two index objects and sorts	core indexes index union other	0.083333
alert a user about a malformed row	parser alert malformed	0.500000
a target	reindexer target	0.200000
perform the reduction type operation	core index ops mixin reduce op name	0.083333
cartesian product	index labels shape sort	0.200000
value from 1-dimensional ndarray only use this if	index set value arr key value	0.038462
node must already	key	0.005051
return index	core indexes datetime index ops mixin	0.029412
function of type	computation is type	0.125000
csv file (discouraged please use :func	data frame from csv	0.066667
datetime to sif http //www stata	datetime to stata	0.100000
method to class python 2 and python	method cls name	0.076923
a compatiable fill_value and arr	arr fill_value	0.090909
csv file	data frame from csv cls path	0.066667
full scope	scope full scope	0.055556
convert from sif to datetime	date to datetime	0.250000
of sql statement that create	sqlite table create	0.066667
of value from 1-dimensional ndarray only use	indexes categorical index get value series key	0.100000
compute the slice locations for	index slice locs start end step kind	0.083333
a new categorical by	categorical sort values	0.166667
tree-like object that can be	frame parser build	0.014706
tuples	tuples cls data closed name	0.250000
return python	datestr	0.125000
quantiles of	block quantile qs interpolation axis mgr	0.500000
caption on	set caption caption	0.166667
to compare numeric	is numeric v	0.333333
guess generated by infer_freq	datetime index ops mixin inferred	1.000000
a string raise	string cls string	0.125000
equivalent to shift without copying data	slice shift periods axis	0.083333
locales that	locales	0.090909
construct and returns	ndframe construct	0.333333
coerces data to ndarray raises on	coerce to ndarray	0.166667
for series columns for dataframe and major_axis for	core	0.001326
key or	key	0.005051
on a and	op_str a	0.500000
style_dict to an openpyxl style object	io openpyxl1writer convert to style cls style_dict	0.166667
of temporary variables in this scope	core computation scope ntemps	0.250000
cross-tabulation of	crosstab	0.050000
gets	indexes index array	0.100000
of obj	obj	0.100000
read csv	csv	0.057143
maximum value	categorical max numeric_only	0.250000
series that is datetimelike (e	indexes maybe to datetimelike data copy	0.142857
length is	index	0.002004
read rows	reader get rows	0.500000
convert to our native types	block to native types slicer na_rep date_format quoting	0.250000
list of sql statement that create a	table create	0.043478
to a list of	to	0.006329
dimensions levels names etc' nentries - number	nentries nlevels prefix names	0.100000
internal	core ndframe	0.005051
if the repr should show the info view	core data frame info repr	0.333333
provide an implementation for the aggregators	mixin aggregate arg	0.166667
return the	io	0.018072
manipulation result has the same	ndframe constructor	0.055556
is_verbose	is_verbose	1.000000
of arr1 and arr2 are	contents arr1 arr2	0.066667
attempt to construct this type	dtype construct	0.333333
the float values converted into strings	formats float array formatter get result as	0.055556
to compare numeric	core dtypes is numeric v	0.333333
panel objects and will raise	panel to	0.027027
feather-format object	feather	0.050000
you	set value	0.023256
key	key key	1.000000
the labels shape	placement shape labels	0.500000
multiindex has only 2	indexes multi	0.014493
type window_type and size window on the	stats rolling window arg window win_type min_periods	0.100000
stores pandas plotting options	options	0.041667
to apply we are stripping all of	apply func name	0.050000
expression as a string using various backends	expr parser engine truediv	0.500000
to an ndarray copy if specified	index dtype copy	0.043478
an indexer like	indexer cls name indexer	0.083333
dimensions as the	ndframe	0.005025
from datetime	io datetime	0.500000
process of casting	index assert safe casting	0.125000
string-like that is object dtype and coerce to	string array data	0.038462
occupying requested label default to	series get label default	0.083333
convert the periodindex to	core indexes period	0.032258
an intervalindex from a 1d array of	index from intervals cls data name	0.125000
to apply we are stripping	mixin apply func	0.050000
the byte of the	column	0.066667
in numeric methods	numeric methods binary	1.000000
draw histogram of the dataframe's	hist frame	0.200000
index names	names	0.038462
leap year	leap year	0.142857
one custom	custom	0.066667
apply function to	func	0.011905
we are grabbing the correct	level global_dict local_dict resolvers	0.333333
view limits to the nearest multiples of	date locator autoscale	0.055556
analogous to ndarray repeat	indexes datetime index ops mixin repeat repeats	0.333333
multiindex from the	multi	0.018182
when using a timegrouper	by resample rule	0.166667
values can be any type	values	0.008547
are index sliceable then return my slicer	core convert to index sliceable	0.083333
file	append key value	0.016667
the blocks collect and create a	apply f axes filter do_integrity_check	0.083333
we have	categorical validate ordered cls	0.055556
shift without copying data the shifted data	slice shift	0.083333
node	hdfstore append key value format	0.016667
data	indexes	0.009302
result as series or by a	by axis level	0.045455
new object with labels in requested axis removed	ndframe drop labels axis level inplace	0.250000
sanitize an index type	sanitize index data index	0.200000
expression	core computation eval expr	0.083333
where elements of v should be inserted in	core indexes frozen ndarray searchsorted v	0.033333
of available options	core pp options	0.083333
an asof merge this is	reshape merge asof	0.071429
a new unit	new cls unit tz	0.055556
when	core ndframe	0.005051
handling	period	0.016667
level j do not change the ordering	j	0.034483
unicode normal form for the strings in	string methods normalize form	0.066667
raw data	raw data	0.500000
whether each index value is found in	index ops mixin isin	0.083333
a dense	sparse sparse	0.034483
is	indexes datetime	0.011494
series	sparse sparse series	0.400000
never a view	is view	0.100000
an internal format currently just the	block internal values dtype	0.111111
cartesian product of all possible	get group index labels shape sort	0.200000
and return an item pair from	map popitem	0.055556
remove and return an item pair from maps[0]	popitem	0.043478
gets called after a	period index array wrap	0.050000
numeric	core dtypes is numeric	0.333333
dict of the kinds allowable columns	table queryables	0.055556
index or ndarray	indexes datetime index ops	0.034483
return new dataframe with labeling information in the	data frame	0.005714
of a dataframe	data frame	0.022857
provide concatenation	concat datetime to_concat axis typs	0.142857
whether we have any extra scope	computation scope has resolvers	0.500000
a dict of the kinds allowable columns	io table queryables	0.055556
am never a	categorical block	0.100000
tree-like object	build	0.013514
check the key for valid keys across my	has valid tuple key	0.333333
given a tuple of	multi index get	0.100000
in file node must	hdfstore append key value	0.016667
spmatrix	spmatrix	1.000000
read csv file (discouraged please	core data frame from csv cls path header	0.066667
series	core	0.001326
are index sliceable then return my slicer	index sliceable obj key	0.083333
actual sparse values need	sparse sparse array	0.043478
in self data and the attrs from	io	0.003012
block with a tz attribute	datetime	0.006711
new categorical by default	core categorical sort values inplace	0.166667
they are valid stata	io stata writer	0.142857
of kwargs suitable for initializing or updating-on-copy	kwargs	0.022222
used	frame parser build	0.014706
applies function along input axis of	apply func axis broadcast raw	1.000000
a tree-like object that can be used	parser build	0.014706
whether or not the 'parse_dates'	io validate	0.031250
works for new-style classes assumes __getattribute__ exists	simple mock	0.250000
ndarray only use	core indexes index set value arr	0.023810
needs additional handling	period index array wrap	0.050000
on multiindex defaults	core indexes multi	0.014493
convenience function for interpolate bpoly from_derivatives	core from derivatives xi yi x	1.000000
keys	keys	0.225806
process of casting data from some accepted	index assert safe casting cls data	0.047619
get	indexes datetime index get	0.500000
if the object is a sequence	core dtypes is sequence	0.166667
operations to convert timedelta-like to timedelta64	td	0.043478
additional	array	0.013889
this is defined as a copy with the	index view cls	0.047619
row labels using one or more existing columns	keys drop append inplace	0.166667
to apply we	group by mixin apply	0.050000
result as series or by	by axis	0.045455
inplace conform	computation bin op conform	1.000000
new multiindex inserting new item at location	indexes multi index insert loc item	0.333333
form the union of two multiindex	indexes multi index union other	0.066667
reverse of try_coerce_args	try coerce result result	0.333333
string-like that is	string array data	0.038462
alert	io python parser alert	0.200000
to iterate over	html frame parser build	0.014706
pprinter for iterables you should probably use pprint_thing()	formats pprint seq seq _nest_lvl max_seq_items	0.333333
dict of array-like	dict cls data orient	0.166667
styles	styler	0.022222
new datetimeindex with passed location s deleted	index delete loc	0.200000
called	indexes	0.009302
values & release	col take data	0.055556
for dataframe with multi-level index return new dataframe	core data frame reset	0.027778
cross-tabulation	core reshape crosstab index columns	0.066667
the installed version of openpyxl is supported parameters	is compat major_ver	0.111111
csv file (discouraged please use	from csv cls path sep	0.066667
o and return packed bytes see	o	0.043478
have a valid ordered parameter if	validate ordered cls ordered	0.058824
underlying	indexes datetime index ops mixin	0.029412
a copy of self coded with categories	categorical codes for groupby sort	0.071429
for compatibility with the data	data	0.009709
index objects	datetime index ops	0.034483
gets called	period index	0.024390
convert a range argument	convert range key is_setter	1.000000
string representing a frequency	freq	0.016129
box	mixin box	1.000000
number of seconds (>= 0	timedelta index seconds	0.066667
validates that we	cls	0.016949
-> group labels}	core base grouper groups	0.200000
ndarray only use	key	0.005051
a singular 'name' parameter for general index and	indexes index validate names	0.066667
an iterator over the boxed	indexes datetime index iter	0.250000
the indices that would sort the index and	indexes range index argsort	0.166667
times to midnight	core indexes datetime index	0.007634
value from	core indexes index set value arr key value	0.038462
object that can be used	parser build	0.014706
counts of non-null values	core value counts values sort ascending normalize	0.200000
csv file (discouraged please use :func pandas read_csv	data frame from csv cls	0.066667
dispatch to apply we are	core group by mixin apply func name	0.050000
return the full scope for use with	core computation scope full scope	0.055556
built	formats	0.031250
group - 1	group by cumcount ascending	0.166667
return resolution str against resolution	resolution get	0.333333
return datetimeindex with times to midnight	indexes	0.004651
a string representation for	index unicode	0.083333
object is	dtypes is	0.212121
stride into a higher freq with	cls value freq	0.083333
value from 1-dimensional ndarray only use	indexes period index get value series key	0.071429
maybe_callable	maybe_callable	1.000000
singular 'name' parameter for general index	core indexes index	0.007042
values to be at	values ndim	0.050000
return a	get values	0.250000
values to	types values	0.333333
makes sure that time and panels are conformable	core ensure like indices time panels	0.250000
a frame table	table	0.021739
values (move/add/delete values as necessary) returns	reindex target method level limit	0.142857
same	core	0.001326
datetime format of a given datetime	datetime format dt_str	0.250000
return index or ndarray filled with	datetime index	0.007042
read sql	sqldatabase read	1.000000
the how return	core window convert freq how	0.250000
**experimental** return a fixed frequency datetime index	core indexes	0.004762
returns a curve with holidays between start_date and	holidays start end return_name	0.066667
x in y if possible otherwise use	core computation in x y	0.047619
operations to convert timedelta-like	core indexes td	0.055556
the requested level the result will respect the	level ascending sort_remaining	0.200000
indexing	indexing	1.000000
a new unit if	core dtypes datetime tzdtype new cls unit	0.055556
get	core indexes timedelta index get	0.500000
function to be applied on each value to	float array formatter value formatter float_format threshold	0.100000
property property synonym for as_blocks()	ndframe blocks	0.166667
set the values from this	io generic index col convert values	0.166667
if we are index sliceable then	core convert to index sliceable obj	0.083333
url has a	is url url	0.047619
from	compat	0.030303
times to midnight length	datetime index	0.007042
is an iterable but not	iterable not	0.250000
lookup of value from	set value arr key value	0.038462
to	value format	0.016667
overcomes the npy_maxargs 32	core computation result type many	0.142857
float values converted into strings using	io formats float	0.055556
nat which has the same	mixin nat new box	0.050000
label is not contained	value label	0.066667
of tuples	tuples cls	0.250000
the handle if	io stata reader	0.142857
object	build	0.013514
of series	series	0.006757
mode s	core data frame mode	0.333333
many	many	1.000000
string-like that is object dtype and coerce	convert string array data encoding	0.038462
vectorized apply of dateoffset to datetimeindex raises notimplentederror	tseries date offset apply index i	0.333333
sub-classes to define	core resampler gotitem key ndim subset	0.333333
to apply we	group by mixin apply func	0.050000
function to be applied on each value to	value formatter float_format threshold	0.100000
the given delimiter string starting at the end	rsplit arr pat n	0.037037
of unique elements of arr1 and arr2	util equal contents arr1 arr2	0.066667
only use this	value arr	0.023810
i	is	0.005291
sortlevel	sortlevel	1.000000
if a url has	io is url url	0.047619
the given offset/observance to a datetimeindex of	rule	0.050000
need to coerce	period index coerce	0.125000
localize tz-naive timeseries to target time zone	ndframe tz localize tz	1.000000
index are equal	assert index equal	1.000000
each index value is found in the	core indexes datetime index ops mixin isin values	0.083333
slice of my	core datetime tzblock slice slicer	0.083333
only use this if you	index	0.002004
for requested label	key method tolerance	1.000000
a moving window of type window_type on the	apply window mean how	0.166667
read sql query or database table	read sql sql con index_col coerce_float	0.166667
common ops mixin to	ops mixin	0.066667
to an xlsxwriter format object	io xlsx writer convert to style	0.500000
that left and right index are equal	util assert almost equal left right check_exact	0.333333
the categories	core categorical get categories	0.333333
manager and a axes dict	core ndframe init mgr mgr axes dtype	0.333333
write text representation of object to the	ndframe to	0.043478
concise listing of available options grouped by	core pp options list keys width _print	0.111111
multiindex defaults to	core indexes multi	0.014493
data to ndarray raises on	to ndarray	0.166667
(e g convert back to bool/int	dtypes maybe downcast to	1.000000
indicating whether the	io	0.003012
for given	get	0.007143
'series argmin' is called via the 'numpy' library	validate argmin with skipna skipna args kwargs	1.000000
value from 1-dimensional ndarray	index set value arr key value	0.038462
fast lookup of value from 1-dimensional	core indexes index set value arr key value	0.038462
we do need a multi reindex this is	series needs reindex multi axes	0.333333
if the object is a file-like object	core dtypes is file like	0.333333
that can	io	0.003012
to write this as a frame table	io appendable series table write	0.500000
valid other evaluate or raise typeerror	binop other op opstr	0.500000
datetimelike	to datetimelike data copy	0.125000
fast transform path for	ndframe group by transform fast result obj	0.333333
an expression	expression expr	0.250000
of one custom business	custom business	0.166667
is an actual dtype that	dtypes interval dtype is dtype cls dtype	0.142857
flattened numpy array	categorical ravel order	0.333333
called after	indexes period	0.034483
flattened values of the underlying	indexes index ravel order	0.037037
cast	cast types	1.000000
compute a simple cross-tabulation	core	0.001326
or dataframe only	or dataframe	1.000000
a moving window of type window_type on	core window apply window mean how	0.166667
where elements of v should be	frozen ndarray searchsorted v	0.033333
the first element of the underlying data as	core index ops mixin item	0.333333
return vector of label values for requested level	core indexes multi index get level values level	0.250000
to see if a url has a valid	url url	0.045455
update index attributes e	indexes timedelta index maybe update attributes	0.200000
of the values	block shape values ndim	0.050000
the attrs from _build_styles	io formats styler translate	0.200000
series	plotting tsplot series	0.333333
array return an	vals	0.090909
write this as a frame	write	0.035714
a hack to accelerate unioning a collection of	indexes datetime index union many others	0.040000
cross sectional for a given location in the	core block manager fast xs loc	0.166667
are datetime objects	index is	0.083333
object	core	0.002653
number of bytes in	indexes range index nbytes	0.052632
operations to convert timedelta-like to	td	0.043478
a list-like indexer return the	interval index convert list indexer keyarr kind	0.066667
a curve with holidays between	holiday calendar holidays start end return_name	0.066667
'numpy' library	numpy validate take with convert	0.055556
of v should be	core indexes frozen ndarray searchsorted v	0.033333
already exist and	hdfstore append key value format	0.016667
data corresponding to axis	axis	0.011364
categorical adjusted for	core indexes categorical index codes for	0.333333
pairwise correlation of columns excluding na/null	core data frame corr method min_periods	0.111111
make a multiindex from the cartesian product	core indexes multi index from product	0.166667
of object to the	ndframe to	0.043478
property property synonym for	core ndframe	0.005051
node must already exist	value format	0.016667
determines if two index objects contain the same	index ops mixin equals other	0.200000
return index or ndarray filled	core indexes datetime index	0.007634
string in the series extract groups from the	core str extract	0.035714
function has at most len(compat_args) arguments and whether	validate args fname args max_fname_arg_count compat_args	0.333333
display value of	formats styler	0.021739
replace extra whitespace inside of a	remove whitespace s regex	0.200000
bool of a single element pandasobject	core ndframe bool	0.055556
return an array of deterministic integers	array vals encoding hash_key categorize	0.250000
timeseries to specified frequency	asfreq freq method how normalize	0.250000
object that can be used to	io html frame	0.012987
a moving window	apply window	0.166667
tuples of the (attr formatted_value)	format attrs	0.142857
spreadsheet-style pivot table as a dataframe	core reshape pivot table data values index	0.166667
create a new multiindex from	core indexes multi	0.014493
of scatter plots	plotting scatter	0.500000
try to cast the array/value to a datetimelike	core dtypes maybe cast to datetime value	0.500000
class for resampling with	resampler for grouping	0.333333
index	ndframe	0.005025
nat which has the	mixin nat new box	0.050000
is defined as a copy with the	indexes multi index view cls	0.047619
calculate slice bound that corresponds to given label	index get slice bound label	1.000000
concise listing of available options grouped	options list keys width _print	0.111111
beginning	date offset beg	0.166667
a dataframe	data frame formatter	0.200000
are index sliceable then return my slicer	convert to index sliceable obj	0.083333
create and return the block manager from	sparse to manager sdf columns index	0.052632
for last	last	0.153846
the number of bytes in the	index nbytes	0.052632
an indexer like	name indexer	0.083333
generally only indexables	read column column where start stop	1.000000
frequency datetime index with	indexes	0.004651
be used to	io html frame parser	0.012195
midnight length	core	0.001326
table in file node must already exist	hdfstore append	0.016667
close	reader close	1.000000
to table in file node must	value format	0.016667
check that left	left	0.074074
if categoricals are	equal	0.050000
applies the	core series	0.008000
optionally only considering certain	duplicates subset	0.500000
in file node must already exist and	io	0.003012
internal method to handle na filling of take	multi index assert take fillable	0.250000
dataframe with labeling information in the columns under	core data frame	0.005917
value from 1-dimensional ndarray only use this	indexes index set value arr key value	0.038462
compute boolean array of whether each index value	core indexes datetime index ops	0.034483
the array interface return	core indexes categorical index array dtype	0.125000
index	categorical index	0.045455
apply of dateoffset to datetimeindex raises notimplentederror	tseries date offset apply index i	0.333333
parameter for general index	indexes index validate names name	0.066667
if the passed type is	extension dtype is	0.125000
call encode before writing to file for python	writer write to_write	0.083333
lookup of value from 1-dimensional ndarray	datetime index get value	0.071429
check	obj	0.233333
utility to get the values view	core get values values skipna fill_value fill_value_typ	0.250000
exist and be table	key value	0.011628
the	io cparser wrapper	1.000000
append	io hdfstore append key value format append	0.125000
expanding count of number of	expanding count arg	0.200000
data to an	data index	0.076923
interpolate values according	interpolate	0.076923
a axes	axes	0.043478
the underlying data	core	0.002653
be any type that can be coerced to	core indexes period index simple new cls	0.142857
without null values	dropna	0.066667
called after a ufunc needs additional	array wrap result context	0.029412
checks whether the 'name' parameter for	io validate	0.031250
csv file (discouraged please use	core series from csv cls	0.066667
the 'numpy' library the third	compat numpy validate take with convert	0.055556
returns the default	default	0.100000
intervalindex from a 1d array of interval objects	core indexes interval index from intervals	0.333333
indexes	core indexes index	0.007042
of v should be inserted in a	frozen ndarray searchsorted v	0.033333
scipy sparse coo_matrix from a	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
convert to our native types format slicing if	core float block to native types	0.250000
locator based on	locator get locator	0.062500
series extract groups from	core str extract	0.035714
string in the series extract groups from the	core str extract frame arr	0.047619
is *not* the	is other	0.055556
returns value occupying requested label default to	label default	0.083333
of n between self	n axis	0.100000
infer types	base infer types	0.500000
called via the 'numpy' library	numpy validate take with convert convert	0.055556
and if so prints a warning	core warn if	0.333333
alter default behavior on how float	formats set eng float format accuracy use_eng_prefix	0.333333
filter_func	filter_func	1.000000
return	msgpack	0.022222
the passed type is	core dtypes extension dtype is	0.125000
deprecated use :meth to_timestamp instead	core indexes period index to datetime dayfirst	1.000000
tree-like object	frame parser	0.012500
axes	axes axes obj validate nan_rep	1.000000
a simple	core reshape crosstab index	0.066667
format as dataframe	panel to frame	0.125000
table in file node must already exist and	value	0.005155
create and setup my atom from the block	io data col set atom block block_items existing_col	0.200000
series extract groups from the first	core str extract frame arr	0.047619
data to ndarray raises on scalar data	index coerce to ndarray cls data	0.166667
input function	copy	0.012821
file node must already exist	hdfstore append key value format	0.016667
not supported for panel objects and will	panel to	0.027027
date_format return a string	date_format	0.058824
parse specified sheet	parse	0.034483
render	io formats styler render	0.142857
arguments	args values	0.083333
gets called	core series array wrap	0.100000
as the default frequency	end periods freq	0.125000
or columns of dataframe according to	axis	0.011364
frequency str	freq freq	0.500000
of normalized locales that	util valid locales locales normalize	0.050000
dict of array-like or dicts	dict cls data orient	0.166667
csv file (discouraged please	csv cls path	0.066667
msgpack	msgpack	0.111111
a blockmanager	core block manager	0.022727
returns a curve with holidays between start_date and	tseries abstract holiday calendar holidays start end return_name	0.066667
am never a view	core categorical block is view	0.200000
index and its underlying data	index	0.002004
cross sectional for a given	core block manager fast xs	0.333333
fast lookup of	indexes index set value arr	0.023810
passed a manager and a axes dict	init mgr mgr axes dtype	0.333333
pretty representation of myself	fixed unicode	0.333333
the process of casting data from some	assert safe casting cls data	0.047619
add series to dataframe	data frame	0.005714
a function to create an op	core computation op	0.166667
formats to	datetime to	0.100000
rewrite the assignment operator for pytables expressions that	rewrite assign tok	0.125000
have a valid ordered	core categorical validate ordered cls ordered	0.058824
concatenation of an	dtypes concat	0.100000
pack object o and return packed	io msgpack packb o	0.055556
a version to operate on	core block try operate	0.333333
'numpy' library the third	take with convert convert args kwargs	0.055556
asof merge this	reshape merge asof	0.071429
string and	parsed string to	0.500000
underlying data	series	0.013514
validate this column	validate col	0.200000
this only if the process of casting	numeric index assert safe casting	0.125000
key is a deprecated option	deprecated key	0.333333
return the number of bytes in the underlying	indexes range index nbytes	0.052632
put method	series put	0.055556
determine if each	core str match arr	0.166667
valid ordered	ordered cls ordered	0.058824
a leap	indexes period index is leap	0.125000
if we have a float key	key	0.005051
object for datetimelike properties	period properties	0.052632
array of datetime	indexes datetime	0.011494
return a new datacol with the block i	create for block cls i name cname	0.333333
called after a	core indexes period index array	0.050000
membership of x in y if possible otherwise	core computation in x y	0.047619
determines if two multiindex objects have	indexes multi index equals other	0.333333
from 1-dimensional ndarray only	core indexes index set value arr key	0.023810
comparison operations to convert datetime-like to	dt index cmp opname nat_result	0.066667
corresponding json_table	json as json table	0.333333
datetime index with custombusinessday as the default frequency	indexes cdate range start end periods freq	0.500000
synonym for :meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace limit downcast	0.333333
csv	series from csv cls path sep parse_dates	0.066667
true if this is a	is in table	0.076923
form the intersection of two index	indexes range index intersection other	0.083333
select values between particular	indexer between	0.125000
to apply we are stripping all of	mixin apply func name	0.050000
additional handling as	index	0.002004
the diff of	diff n axis mgr	0.111111
called via the 'numpy' library	take with convert	0.055556
to handle na filling of	fillable values indices	0.125000
all of the _upsample kwargs and	mixin apply f	0.166667
bit of a hack to accelerate unioning a	index union many others	0.040000
list of the underlying data	datetime index ops mixin tolist	0.333333
a string raise a	string	0.037736
dataframe major_axis	core ndframe iteritems	0.055556
from 1-dimensional ndarray only use this if you	core indexes index set value arr key	0.023810
block manager from a	manager sdf	0.052632
cross-tabulation of	columns values	0.037037
a full length slice	full slice obj	0.333333
construct this type from a	core dtypes interval dtype construct from	0.166667
value from 1-dimensional	core indexes index set value arr key value	0.038462
method	method	0.233333
be used	frame parser	0.012500
new	copy errors values	0.250000
of index to be	index b	0.041667
the same dimensions as	core ndframe	0.005051
try to deal with nat-like arg is a	arg	0.018868
passed panel or object coercible	other join overwrite filter_func	0.076923
to a leap year	leap year	0.142857
object that can be used to	frame parser build	0.014706
boolean if the passed type is	dtypes extension dtype is	0.125000
a particular	bytes	0.111111
a copy of self coded with categories as	core categorical codes for groupby sort	0.071429
construct this type from a	dtypes interval dtype construct from string	0.166667
return a	io html	0.012987
the dom	frame parser build doc	0.125000
deal with nat-like arg is a	arg errors	0.026316
returns the float values converted into strings using	io formats float array	0.055556
index with business day as	indexes bdate	0.050000
axis	axis	0.181818
info for this indexable with the key/value	io index col update info info	0.090909
of a series that is datetimelike (e	core indexes maybe to datetimelike	0.142857
create	table create	0.130435
a	index array wrap result	0.066667
to table in file node must	io hdfstore append key	0.016667
try to convert to	sparse maybe to	0.333333
create and return a basegrouper	core get	0.038462
series columns for dataframe	core ndframe	0.005051
frequency code group of given frequency str	get freq group freq	0.250000
ndarray only use	set value arr	0.023810
to construct this	construct	0.071429
hack to accelerate unioning a collection of	datetime index union many others	0.040000
aggregate using input function or	group by aggregate arg	0.250000
add the series	ndframe add series	1.000000
from ndarray or list of lists	matrix data index columns	0.500000
we always want to	shallow copy with infer values	0.200000
indexable columns with an arbitrary number of	legacy table read where columns	0.111111
copy of this object names dtype	multi index copy names dtype	0.333333
boolean whether i can attempt conversion to	is convertible to	0.333333
return the node with	hdfstore get node	0.166667
yyyymmdd/%y%m%d format try to deal with nat-like arg	arg errors	0.026316
downsample the cython defined function	datetime index resampler downsample	0.200000
getitem defers to the underlying array which	index ops mixin getitem	0.250000
to class python 2 and python 3 compatible	cls	0.016949
to the	to dtypes	0.500000
new sparsedataframe	sparse sparse data frame	0.058824
to	core indexes datetime index	0.007634
series using mapper dict or key	as_index	0.071429
engine is passed	engine engine	0.333333
return the formatted data as a unicode	core indexes index formatter func	0.083333
out the binary feather-format	frame to feather fname	0.083333
the td elements from	parser parse td obj	0.083333
single value at	value	0.005155
rewrite the assignment operator for pytables	core computation rewrite assign tok	0.125000
numpy / pandas type to its corresponding json_table	io json as json table type	0.250000
read sql query into a dataframe	read sql query sql con index_col coerce_float	0.333333
excluding elements from groups that	group	0.027027
cartesian product of	core get group index labels shape sort	0.200000
index are equal	index equal	0.500000
return our	core period index resampler get	1.000000
of datetime time the	datetime	0.006711
this type	interval dtype	1.000000
construct dataframe from dict of array-like or	core data frame from dict	0.200000
replace values given in 'to_replace' with 'value'	core ndframe replace to_replace value inplace limit	1.000000
highlight the maximum by shading the background	io formats styler highlight max	1.000000
delimiter string starting at the end	rsplit arr pat n	0.037037
microseconds (>= 0 and less	indexes timedelta index microseconds	0.066667
the index	index	0.014028
are a series we	series group	0.030303
bytes in the underlying	nbytes	0.046512
add in categorical accessor methods	core indexes categorical index add accessors	1.000000
if we define an builtin function for	is builtin func	0.333333
via the 'numpy' library	numpy validate argmin with	0.200000
arr1 and arr2	contents arr1 arr2	0.066667
a new unit if needed	new cls unit	0.055556
determine if dtype is valid for	select n is valid dtype n method dtype	0.142857
read text from clipboard and pass to read_table	read clipboard	0.200000
hash table-based unique uniques are returned	unique values	0.333333
manager and a axes dict	core ndframe init mgr mgr axes	0.333333
validates	categorical validate ordered cls	0.055556
ndarray only use this if you	core indexes index set value arr key	0.023810
specified frequency	asfreq freq method how	0.250000
we are passed a list-like indexer return	interval index convert list indexer keyarr kind	0.066667
inplace return a new block (of a	block setitem indexer	0.066667
a slice	slice	0.038462
hooks into jupyter notebook rich display system	io formats styler repr html	1.000000
evaluate a	op evaluate	0.333333
alter default behavior on how float is	eng float format accuracy use_eng_prefix	0.333333
columns	data	0.019417
alignment	alignment cls	0.333333
indices where elements of v	searchsorted v	0.033333
index objects	core indexes datetime index ops	0.034483
value omitting na/null values	axis kind order	0.250000
dataframe the levels in the	data values index columns	0.066667
and right	right check_exact	0.500000
a valid ordered	core categorical validate ordered cls ordered	0.058824
ndarray like	json	0.100000
the interpolate machinery	block interpolate with fill method axis inplace limit	0.200000
from 1-dimensional ndarray only use this if you	index set value arr	0.023810
of	index	0.024048
render a dataframe	io formats data frame	0.090909
of the (attr formatted_value)	datetime index ops mixin format attrs	0.142857
bytes in	core indexes range index nbytes	0.052632
binner	binner	0.625000
python expression as a	computation eval expr	0.083333
apply function and combine results together in	group by apply func	0.333333
of scatter	scatter	0.142857
ndarray only	indexes index set value	0.023810
csv file (discouraged	data frame from csv cls path	0.066667
datetime64	datetime64	1.000000
the built up	formats	0.031250
the specifications setup the internal grouper	core grouper set grouper obj sort	0.250000
conv	conv	1.000000
select values at particular time of	core ndframe at time time asof	0.066667
fast lookup of value from 1-dimensional ndarray only	core indexes categorical index get value	0.100000
coerce to the new	copy	0.025641
frequency datetime index with business	core indexes	0.004762
curve with holidays between start_date and end_date parameters	holiday calendar holidays start end return_name	0.066667
a scalar to a compat for our	scalar to	0.100000
number of unique elements in the object	index ops mixin nunique dropna	0.083333
guess the	tools guess	0.500000
iterable	iterable	0.777778
the view limits to the nearest multiples of	plotting time series date locator autoscale	0.055556
each variable name a dict associating	stata reader value labels	0.142857
time index using the index's frequency	core ndframe tshift periods freq axis	0.066667
curve with holidays between start_date and end_date	abstract holiday calendar holidays start end return_name	0.066667
the dtype	infer dtype	0.333333
to a timedelta index	listlike arg unit box errors	0.142857
by category value returning a new	inplace ascending na_position	0.071429
dataframe sorted by the n largest	data frame nlargest n	0.166667
if label is not contained a	label	0.028571
values according to indexer	indexer axis	0.043478
v should be inserted	searchsorted v	0.033333
new copy of maps[0] and refs	copy	0.012821
with custombusinessday as the default frequency	cdate range start end periods freq	1.000000
json	io json	0.062500
bytes in the underlying data	multi index nbytes	0.052632
requested level	level	0.043478
a tree-like	io html frame parser	0.012195
dtype	dtypes infer dtype	0.333333
called after a ufunc	wrap result context	0.088235
bytes in the underlying	indexes multi index nbytes deep	0.052632
numpy array of datetime	core indexes datetime	0.011494
of strings to numpy	compat numpy	0.166667
the number of	indexes range	0.062500
class implementing	by	0.038462
types format slicing	types slicer	0.200000
the length of the index	core indexes index len	0.333333
that we have a valid ordered parameter if	ordered	0.017857
reverse convert a missing indexer which is	convert missing indexer indexer	0.333333
sort_index	sortlevel level axis	1.000000
lookup of value from 1-dimensional ndarray only	period index get value	0.071429
occupying requested label default to specified missing value	sparse sparse series get label default	0.083333
is	dtypes interval dtype is	0.066667
use this if	value	0.005155
the function to	func mgr	0.083333
list of lists	matrix data	0.250000
get	dtypes get	0.500000
in file node must already exist	hdfstore append key value format	0.016667
dom	build doc	0.125000
the where statement is of the right type	where w	0.083333
put single value at passed column and index	index col value takeable	1.000000
one	core series	0.008000
series excluding	series	0.006757
temporary variable to	tmp value	0.166667
coerce a scalar to a compat	index coerce scalar to	0.071429
of whether each index value is	core indexes datetime index ops	0.034483
read rows	width reader get rows	0.500000
fallback pad/backfill get_indexer that works for monotonic decreasing	get fill indexer searchsorted target method limit	0.142857
consistent invalid indexer message	core indexes index invalid indexer form key	1.000000
into a dataframe	index_col coerce_float	0.062500
add the series or dataframe only	core ndframe add series or dataframe	1.000000
numpy array of python datetime	indexes datetime index	0.007634
bin	bin	1.000000
in the series extract groups from	str extract arr	0.066667
create a new unit if needed otherwise	tzdtype new cls unit tz	0.055556
our native types format slicing if desired	native types slicer	0.200000
the flattened values of the	index ravel order	0.037037
the padded hexadecimal id of obj	computation raw hex id obj	0.333333
return the number of	core indexes range index	0.021277
add in numeric unary methods	core indexes index add numeric methods unary	1.000000
input values as an enumerated type	core factorize values sort	0.111111
'name' parameter for general index	core indexes index	0.007042
value to format	formatter value	0.250000
a higher freq with	cls value freq	0.083333
on type and coerce into matrices	arrays to mgr arrays arr_names	0.250000
writing stata binary dta files from array-like objects	stata fname convert_dates write_index encoding	0.333333
csv file (discouraged please use :func	from csv cls path	0.066667
cast to datetimeindex	indexes period index to timestamp freq	1.000000
comp	comp	1.000000
return a slice of	core categorical block slice slicer	0.083333
common post process for each	plotting mplplot post plot logic common ax	0.333333
form the union of	union	0.100000
method to handle na filling of take	core indexes index assert take fillable values	0.250000
pack object o and return packed bytes	o	0.043478
or strings in each element in the series/index	core str	0.011364
the indices that would sort the index and	range index argsort	0.166667
parameter	categorical validate ordered cls	0.055556
return the ndarray flags	flags	0.029412
meta data array for this key	table read metadata key	1.000000
convert to our native types	to native types	0.250000
return a new block try to preserve dtype	putmask smart v m n	0.055556
the built up	io	0.003012
gets called prior to	prepare	0.071429
a pandas only dtype object	pandas	0.035714
take	core take nd arr indexer axis	0.125000
sanitize input data to an ndarray copy if	sanitize array data index dtype copy	0.500000
and be	hdfstore append	0.016667
fixed frequency datetime	range start end periods freq	0.333333
return vector of label values for requested level	index get level values level	0.250000
layout some	table	0.010870
helper to call encode before writing to file	stata writer write to_write	0.083333
(move/add/delete values as necessary) returns	reindex target method level limit	0.142857
for last non-na/null value	core data frame last valid index	0.250000
quantile a la numpy percentile	core series quantile q interpolation	0.250000
return a string representation for	core indexes frozen ndarray unicode	0.083333
style_dict to an openpyxl style object	to style cls style_dict	0.166667
indices where elements of v should	indexes frozen ndarray searchsorted v	0.033333
assert that we all have the same closed	indexes interval index append same dtype to_concat name	1.000000
handling as	wrap	0.019231
sets index names to 'index'	default names data	0.083333
a manipulation result has	core ndframe constructor	0.055556
interval in	core indexes interval	0.062500
copy of self coded with categories as	core categorical codes for groupby sort	0.071429
to capture stderr in	util capture stderr f	0.055556
frequency datetime index	core indexes bdate	0.050000
reduction type operation	core index ops mixin reduce op name axis	0.083333
popitem	popitem	0.217391
already exist and be table	key value	0.011628
if we are a categorical possibility	core dtypes is categorical array	0.500000
falls on saturday use following monday instead	tseries next monday	0.250000
to ndarray raises on scalar data converts	coerce to ndarray cls data	0.166667
pick the best locator	plotting pandas auto date locator get locator	0.062500
dataframe to a	core data frame to	0.111111
dtype and	core get empty dtype and	0.125000
return result as series or by	by axis	0.045455
the dtypes in this object	core ndframe dtypes	0.333333
node must already exist and be table	hdfstore append	0.016667
are index sliceable then return my slicer otherwise	index sliceable obj	0.083333
that	html frame	0.014706
csv	frame from csv cls	0.066667
create and return the op string for this	op generate	0.066667
is	chain map	0.034483
into a	io html frame parser	0.012195
create and return the block manager from	core sparse to manager sdf columns index	0.052632
a concise listing of available options grouped	options list keys width _print	0.111111
of difference between index values and index	datetime index	0.007042
csv file (discouraged	csv cls path sep	0.066667
return a string representation	index unicode	0.083333
suitable for initializing the gradientfill stop	stop	0.050000
encode input values as an enumerated type or	factorize values	0.111111
new unit if	dtypes datetime tzdtype new cls unit tz	0.055556
do a list replace	block manager replace list src_list dest_list inplace regex	1.000000
ndarray filled with nat which has	ops mixin nat new	0.050000
with its hexadecimal representation used to tag	core computation replacer x	0.125000
return of an indexer even	index get indexer for	0.250000
the plot attribute for groupby objects	group by plot	0.062500
get the 'info axis' see indexing	keys	0.032258
to preserve dtype if possible	core putmask smart v m n	0.055556
perform the reduction type operation if we	index ops mixin reduce op	0.083333
guess the datetime format of a given datetime	core tools guess datetime format dt_str	1.000000
return if each value is nan	core indexes categorical index isnan	1.000000
infer the fill value for the	infer fill value	0.333333
be used to iterate over the dom	frame parser build doc	0.125000
for series arithmetic operations to	core bool method series op name	0.333333
this	core indexes index set value	0.023810
update index attributes e	indexes timedelta index maybe update attributes attrs	0.200000
number with its hexadecimal representation used to tag	computation replacer x	0.125000
to coerce a scalar to a	index coerce scalar to	0.071429
specialized intersection for datetimeindex objects may	intersection	0.041667
is valid	core select n is valid	0.500000
microseconds (>= 0 and less than	timedelta index microseconds	0.066667
nat which has	nat new box	0.050000
tree-like object that can be	frame	0.009091
append to	io hdfstore append key value format append	0.125000
the function	io formats	0.027778
of value from 1-dimensional ndarray only use	datetime index get value series	0.071429
return a	io html frame	0.012987
valid keys across my	valid tuple	0.500000
operations to convert datetime-like to datetime64	indexes dt index cmp opname nat_result	0.066667
this is defined as a copy with	view cls	0.047619
if seq is an iterator put its	indexes ensure has len seq	0.500000
return dtype and	get empty dtype and	0.125000
operations to convert datetime-like to datetime64	core indexes period index cmp opname nat_result	0.066667
to take optional positional and keyword arguments	optional args	0.066667
missing	from missing	0.500000
read csv file (discouraged please use :func pandas	from csv cls path sep parse_dates	0.066667
wrap op result to have	wrap result name	1.000000
read csv file (discouraged please use :func pandas	frame from csv cls path	0.066667
to deprecate a	deprecate	0.090909
to coerce a	period index coerce	0.125000
non-na/null observations in sparsearray if the	core sparse sparse array count	0.333333
concatenation	core dtypes concat datetime	0.125000
return a copy of self coded with categories	core categorical codes for groupby sort	0.071429
return the block manager from a dataframe of	core sparse to manager sdf	0.052632
background in a range according to the	io formats styler background	0.125000
return an iterator over the	index iter	0.250000
alert a user	alert	0.100000
my specific	index	0.004008
size and return tuple = width	size	0.041667
each interval in the	indexes interval	0.062500
the key or none	key	0.005051
of value from 1-dimensional ndarray	index set value arr key value	0.038462
an ndarray for our input	sanitize values arr	0.200000
passed type is an actual dtype	dtype is dtype cls dtype	0.043478
apply aggregation function or functions to resampled groups	core resampler aggregate arg	0.250000
so prints a	core warn	0.333333
given a 1d array return an array of	array vals	0.083333
each string in the series/index	core str repeat	0.045455
block by	axis mgr	0.200000
a hack to accelerate unioning a collection	index union many others	0.040000
the index (so we	at indexer convert key key is_setter	0.090909
n indexable columns with an arbitrary number	io legacy table read where columns	0.111111
of the (attr formatted_value)	ops mixin format attrs	0.142857
string-like that is object	io convert string array data encoding	0.038462
if we are index sliceable then return	core convert to index sliceable	0.083333
we have a valid ordered parameter	ordered	0.017857
a	indexes index	0.014706
handling as	index array wrap result	0.033333
return boolean if values in the object	core index ops mixin is	0.100000
microseconds (>= 0 and less	core indexes timedelta index microseconds	0.066667
seconds (>= 0 and less	timedelta index seconds	0.066667
specialized intersection for datetimeindex objects	intersection other	0.076923
series or by	by axis	0.045455
fixed frequency datetime index with	core indexes bdate range start end periods	0.083333
set new	index set	0.022727
j do not change the ordering of anything	j	0.034483
to a compat for our	to	0.006329
a tree-like object that can	frame	0.009091
apply we are stripping all	by mixin apply func	0.050000
the underlying data which	index	0.002004
index or	indexes datetime index	0.007634
select values between particular times of the	ndframe between	0.100000
sets names	multi index set names names level	0.200000
doesn't like to compare	string like	0.111111
that 'np ndarray' is	assert numpy array equal left right strict_nan check_dtype	0.500000
more this is index for series columns for	ndframe	0.005025
with nat-like arg is a	arg errors	0.026316
index objects sortedness	indexes range index	0.021277
holidays between start_date and	tseries abstract holiday calendar holidays	0.166667
set the value	value	0.005155
tree-like	frame	0.009091
axis equal values	rank axis	0.250000
expanding count of	expanding count	0.200000
create and return the op string	computation bin op generate	0.066667
full scope for use with passing	computation scope full scope	0.055556
new unit if	core dtypes datetime tzdtype new cls unit	0.055556
is a deprecated option	deprecated	0.111111
dataframe to	io formats data frame formatter to	0.083333
holidays	calendar holidays	0.166667
series we	core series	0.008000
coerce the	dtypes coerce indexer	0.500000
running code that expects to	util assert produces	0.071429
infer types of values	base infer types values	1.000000
all the classes	all	0.043478
needs additional handling as	array	0.013889
return true if	block is	0.045455
(produce a "pivot" table) based on column	pivot index columns	0.111111
label for first non-na/null value	core data frame first valid index	0.250000
over the blocks collect and	reduction f axis consolidate transposed	0.062500
operations to convert timedelta-like to timedelta64	td index cmp opname	0.055556
times to midnight length	core indexes datetime index	0.007634
j do not change the	j	0.034483
tables	tables	1.000000
set coerce	coerce	0.025641
return a block if we	core block	0.010870
read csv	data frame from csv cls path	0.066667
the array interface return	index array result	0.125000
arr1 and arr2 are	contents arr1 arr2	0.066667
index objects	indexes index	0.029412
to apply we	apply	0.026316
tzinfo	tzinfo	1.000000
1-dimensional	key	0.005051
number of	range index	0.021739
the block return result block	block	0.016393
class	pandas	0.035714
and	and	0.466667
we want to set the	series set	0.076923
take which sets	take	0.030303
version to operate on	mixin try operate values	0.333333
minimum value	categorical min numeric_only	0.500000
the mode s of the dataset	series mode	0.083333
set of sparseseries (with nan fill_value) to	core sparse	0.041667
sure that time	time	0.052632
dict of array-like or dicts parameters	dict	0.076923
scatter plots	plotting scatter	0.500000
compute the symmetric difference of	symmetric difference	0.166667
to table in file node	format	0.012346
display options for printing and representing objects	display options	0.083333
info from string representation	freqstr	0.111111
a fixed frequency	bdate range start end periods	0.111111
set the name of this	io index col set name name kind_attr	0.500000
returns the float values	formats float array formatter get result as array	0.055556
a filtered indexer that doesn't have any missing	convert from missing indexer tuple indexer axes	0.333333
shading the	io	0.003012
string and	index parsed string	0.500000
simple cross-tabulation of	reshape	0.037037
be used to iterate over	io html frame parser	0.012195
return an item pair from maps[0] raise keyerror	chain map popitem	0.055556
that create a table	io sqlite table create table	0.166667
the full scope for use with passing	scope full scope	0.055556
adjusted for	index codes for	1.000000
panel objects and will raise	core panel to sparse	0.037037
and be	hdfstore append key value format	0.016667
nan is taken	core ndframe asof where	0.166667
file node must	hdfstore append key	0.016667
this argument	arg	0.018868
convert to our native types	to native types slicer na_rep float_format decimal	0.250000
return the number of bytes in	index nbytes deep	0.052632
number of bytes in the underlying data	core indexes range index nbytes	0.052632
excluding	group by	0.016129
new block (of a possibly different	block setitem indexer	0.066667
group series using mapper dict or	as_index	0.071429
returns the float values converted into strings using	float array formatter get result	0.055556
radviz -	plotting radviz	0.200000
index with custombusinessday as the	core indexes cdate range start end	0.083333
float values converted into strings using	formats float array	0.055556
op string for this termvalue	op generate v	0.250000
a series	core sparse sparse series	0.125000
la re split	split	0.100000
1-dimensional ndarray only use this if you	index set	0.022727
overwrite	overwrite	1.000000
we have	categorical validate ordered	0.055556
are index sliceable then return	core convert to index sliceable obj	0.083333
type window_type and size window on the	stats rolling window arg window win_type	0.100000
intervalindex from a 1d array	from intervals cls data name	0.125000
columns with an arbitrary number	io legacy table read where columns	0.111111
a slice	categorical block slice slicer	0.083333
for panel objects and	core panel to	0.027027
a decorator to take optional	optional args decorator	0.083333
an xarray object from the pandas object	to xarray	0.125000
return the length	len	0.142857
parse html into dataframes	html frame parser	0.012658
a view	view	0.130435
sep	sep	0.833333
concise listing of available options grouped by prefix	core pp options list keys width _print	0.111111
an intervalindex from a a	indexes interval index from arrays	0.166667
to coerce a code to	tseries maybe coerce freq code	0.076923
convert from datetime to sif http //www stata	io datetime to stata	0.500000
of type window_type and size window	stats rolling window arg window win_type min_periods	0.100000
set the values from this	io index col convert values	0.166667
we take a string-like that is object dtype	convert string array	0.038462
read an array	generic fixed read array	1.000000
string starting at the end of	rsplit	0.031250
format as dataframe	frame	0.009091
symmetric difference of two index	core indexes index symmetric difference other	0.166667
this function is called via the 'numpy' library	compat numpy validate take with convert convert args	0.055556
the length	len	0.142857
specialized intersection for datetimeindex objects may	core indexes datetime index intersection	0.142857
built up	formats styler	0.021739
already exist and be table	hdfstore append	0.016667
to the :meth pandas dataframe reset_index function	series reset index level drop name inplace	0.142857
that can be coerced to	core indexes period index simple new cls	0.142857
for writing stata	data frame to stata	0.200000
we have negative indicies translate to postive here	maybe convert indices indices n	0.166667
dataframe columns parameters	data x y	0.333333
for this level	plotting has level	0.333333
reduction type operation if we can	core index ops mixin reduce op	0.083333
function for this argument	func arg	0.214286
required package	package	0.058824
values at particular time of day	ndframe at time time asof	0.066667
dataframe are equal	assert frame equal	1.000000
color background in a range	formats styler background gradient s cmap low high	0.142857
the index and its	range index	0.021739
series with	core series	0.008000
with times to midnight	core indexes datetime	0.011494
the other axes	core	0.001326
return the underlying data which is a	index values	0.111111
left and right index are equal	assert almost equal left right	0.333333
want to take the	core	0.001326
convert datetime-like to	dt index cmp opname nat_result	0.066667
fast lookup of value from 1-dimensional ndarray	datetime index get value series key	0.071429
return a prettier version	computation get pretty string	0.500000
of superclass	superclass	0.111111
format of a	format dt_str	0.250000
a datetime with tz	datetimetz	0.142857
to a google bigquery table	to gbq destination_table project_id chunksize verbose	1.000000
return a fixed frequency datetime index	core indexes period range start end periods freq	0.083333
construct a slice	slice	0.038462
1-dimensional ndarray	indexes index set	0.023810
a pretty representatgion	io table unicode	0.333333
via the 'numpy' library the third	take with convert convert args	0.055556
hash a categorical	util hash categorical	1.000000
ensure incoming data	data subarr	0.333333
whether each index value	core indexes datetime index ops	0.034483
a new sparsearray	sparse sparse	0.034483
indicating if the date belongs to a leap	index is leap	0.125000
write out the binary feather-format	feather fname	0.083333
ndarray only use	index set value	0.023810
in file node must	hdfstore append key value format	0.016667
the ftypes (indication of sparse/dense	core ndframe ftypes	0.055556
index objects contain the same	indexes datetime index	0.007634
a leap year	is leap year	0.142857
its numpy-array representation	core ndframe as matrix columns	0.200000
1st discrete difference of object parameters	data frame diff periods axis	0.250000
returns the float	io formats float array formatter get result as	0.055556
wrap comparison operations to convert timedelta-like to	indexes td index cmp opname	0.055556
nice str repr of	core window unicode	0.071429
database 'flavor' was specified	flavor parameter flavor	1.000000
fname are	fname	0.071429
fast version of transform	transform fast	0.250000
to apply we are stripping all of	group by mixin apply func	0.050000
a boolean list indicated if we have	multi index have	0.142857
the shape of the values to be	shape values ndim shape	0.083333
date in xport	io sas parse	0.066667
series	core sparse sparse series	0.250000
process of casting	casting	0.076923
to convert to dense	to dense	0.333333
union of two multiindex objects sorting if possible	index union other	0.037037
generate bin	generate	0.062500
2d from panel	core panel dropna	0.333333
order	order	0.312500
for a target	reindexer target	0.200000
unique elements in the	ops mixin nunique dropna	0.083333
called after	core indexes index array	0.100000
subtraction of two datetimeindexes	datetime index sub datelike dti other	0.333333
return base	tseries base	1.000000
indices where elements of v	ndarray searchsorted v	0.033333
representing a frequency	freq	0.016129
frequency	freq	0.209677
of the (attr formatted_value)	core indexes datetime index ops mixin format attrs	0.142857
packer for options	msgpack packb	0.025641
the nan/nat from	val	0.058824
sanitize an index type to return	sanitize index data index	0.200000
of this object potentially casting to object	period index to embed keep_tz	0.333333
set our object attributes	io generic fixed set attrs	1.000000
a series we by	series group by	0.142857
return a fixed frequency timedelta	timedelta range start end periods	0.333333
indices of the maximum values along an axis	core indexes datetime index ops mixin argmax axis	0.250000
to an xlsxwriter format	xlsx writer convert to style	0.500000
as series or by a series of	groupby by axis level	0.045455
resample of a groupby implementation	timedelta index resampler groupby	0.166667
columns for dataframe major_axis for panel	ndframe iteritems	0.055556
block_manager	get block manager	0.166667
group return result as series or by	groupby by axis level	0.045455
determine if each string matches	str match	0.166667
node	io	0.003012
to accelerate unioning a collection of indexes	core indexes datetime index union many others	0.040000
concatenate to_concat which has the same class	append same dtype to_concat name	0.500000
try to connect to the	util can connect	0.111111
with times to midnight length	core indexes	0.004762
of value from 1-dimensional ndarray only use this	indexes period index get value series key	0.071429
a scalarblock	block make block scalar values	0.333333
a fixed frequency	range start end	0.133333
synonym for	core	0.001326
gets	core indexes index	0.007042
vertical/horizontal layout for	table	0.010870
sparse/dense and dtype) in	core ndframe	0.005051
called prior to a	core series array prepare result	0.111111
intervalindex with	core indexes interval index	0.062500
of value from	key value	0.011628
the diff of the	diff n axis	0.111111
given axis omitted where alternately any or	axis how thresh subset	0.100000
of tuples of the (attr formatted_value)	indexes datetime index ops mixin format attrs	0.142857
to table	key value	0.011628
radviz	radviz	0.600000
and return the block manager from a	manager sdf columns index	0.052632
an intervalindex from a 1d array of	from intervals cls data name	0.125000
only	series	0.006757
series columns for dataframe major_axis for	ndframe iteritems	0.055556
in the datetimelike methods (as we may	datetimelike methods cls	0.066667
checking function of type t or tuple	core computation is type t	0.083333
box function	ops mixin box func	0.142857
return the block manager from a	core sparse to manager sdf columns index	0.052632
shift the time index using the	core	0.001326
a leap	core indexes period index is leap	0.125000
from ndarray or list	index columns dtype	0.125000
slice/take blocks along axis=0	manager slice take blocks ax0 slice_or_indexer fill_tuple	0.500000
to 'index' for regular or 'level_x'	io json set	0.250000
gets called after	core indexes period index array wrap	0.050000
xport	sas xport	1.000000
scipy sparse coo_matrix to a sparseseries	core sparse coo to sparse series a	0.166667
ndarray only	indexes categorical index	0.047619
specialized intersection for datetimeindex objects may	datetime index intersection other	0.142857
values between particular times	between	0.086957
the float values converted	formats float array formatter get result as array	0.055556
compute the slice locations	slice locs start end step kind	0.083333
return datetimeindex with times to midnight	core indexes datetime index	0.007634
the value inplace	value	0.005155
pandas type	type x	0.055556
string-like that is	string array data encoding	0.038462
additional handling	indexes period index array	0.050000
count of number of	count arg	0.200000
indexer which could	indexer indexer	0.071429
index of the values	core indexes index	0.007042
multiple times in parallel	util test parallel	0.142857
array interface return my	indexes interval index array result	0.125000
accessor object for datetimelike properties of the	timedelta properties	0.052632
membership of x in y if	computation in x y	0.047619
a float dtype	float	0.024390
extended euclidean algorithms to solve bezout's identity	core indexes range index extended gcd a b	1.000000
from 1-dimensional	value arr	0.023810
return the data for this	io table get object	1.000000
create a spreadsheet-style pivot table as a dataframe	core reshape pivot table data values index columns	0.166667
a list-like indexer return	convert list indexer keyarr kind	0.066667
holidays between start_date and end_date	holidays	0.090909
whether each index	indexes datetime index	0.007634
apply the	apply index days	0.500000
contained as elements in the	core	0.001326
to apply	group by mixin apply	0.050000
retrieve the	handler	0.142857
already exist and	append key value format	0.016667
select values at particular time of	at time time asof	0.066667
dict of the kinds allowable columns for	table queryables	0.055556
only use	indexes index	0.007353
types	types slicer na_rep	0.200000
to an ndarray copy if specified coerce	copy	0.012821
node must already exist and be table	io	0.003012
a string representation for a particular object	core string mixin repr	0.333333
from some	cls	0.016949
indicated if we have	core indexes multi index have	0.142857
called upon unpickling	interval index cls d	0.333333
list of normalized locales	locales locales normalize	0.200000
indexer fill with	nd indexer allow_fill	0.050000
according to indexer and return	indexer	0.018349
the actual filter format	computation filter bin op format	0.333333
given quantile	quantile	0.058824
must already	hdfstore append key value	0.016667
file	append key value format	0.016667
and a date_format	date_format	0.058824
using matplotlib / pylab	column by grid	0.200000
the required package is	package pkg_name	0.083333
the data	core data	0.041667
difference between index values and index	core indexes datetime index	0.007634
elements of arr1	util equal contents arr1	0.066667
the result will respect the	ascending sort_remaining	0.200000
be used	frame	0.009091
close the pytables file handle	io hdfstore close	1.000000
array of	hash array	0.500000
be used to iterate over	parser build	0.014706
line from buffer filling buffer if required	io python parser buffered line	0.500000
an positional	core ndframe indexer has valid positional	0.250000
retrieve pandas object stored in file	io hdfstore get key	1.000000
set of unique elements of arr1 and	arr1	0.050000
a boolean whether i can attempt conversion to	indexes is convertible to index	0.333333
determine if each	core str match arr pat case	0.166667
for generation (e g an	computation bin op	0.055556
an xpath expression to simulate bs4's ability	xpath expr attrs	0.166667
testcase instance if matplotlib isn't installed	util mplskip cls	0.333333
dense representation of ndframe	core ndframe to dense	0.111111
return a fixed	range start	0.133333
use this if you	index set value arr	0.023810
block in-place with	object block set locs values check	0.125000
alert a user about	io python parser alert	0.200000
unstack a k a pivot	unstack level fill_value	1.000000
s from the result	where other cond align raise_on_error	0.333333
but using the interpolate machinery	core block interpolate with fill method axis inplace	0.200000
run the same function	num_threads kwargs_list	0.050000
dictionary	dict from	0.250000
to write this as a frame table	multi series table write obj	0.333333
dtype from a scalar or array parameters	dtype from array arr	0.500000
as	sparse series as	0.125000
we require	indexes datetime index simple new cls	0.250000
a particular axis with optional set logic	axis join join_axes	0.250000
etc' nentries - number of	nentries nlevels prefix	0.250000
create a spreadsheet-style pivot table as a dataframe	core reshape pivot table data values index	0.166667
packed object	packed object_hook list_hook	0.200000
given offset/observance	rule	0.050000
return result as series or by	by axis level	0.045455
be table	value format	0.016667
return a prettier version of obj	computation get pretty string obj	1.000000
attribut with the table schema resets the index	io json	0.062500
file node must already exist and be	hdfstore append key value	0.016667
lookup	index	0.002004
summarized representation	ops mixin summary name	0.333333
expression that	computation	0.038462
take which sets nan values in	core take nd arr	0.125000
the kinds allowable columns	table queryables	0.055556
a dataframe to a google bigquery table	data frame to gbq destination_table project_id chunksize verbose	0.333333
the maximum value of the index	index	0.002004
values of columns	columns keep	0.333333
reset	core ndframe reset	0.500000
to get lines 0) there are headers on	python parser get index name	0.166667
categorical column and prepare formatted output	stata value label	0.250000
ncols	ncols	0.666667
to midnight length is	indexes datetime	0.011494
union of	index union	0.333333
process	process	1.000000
pack object o and return	msgpack packb o	0.055556
instances of all the classes	util all	0.055556
of putmask that potentially upcasts the	core dtypes maybe upcast putmask	0.250000
positional indexer	indexer has valid positional setitem indexer indexer	0.052632
called	wrap result	0.068182
and 'kwargs' should be empty because	func method args kwargs	0.142857
the date axis x-axis	plotting format dateaxis subplot freq	0.333333
that we	categorical validate	0.055556
ndarray	sparse sparse series	0.200000
handling as	array wrap	0.025000
setting a timezone	timezone tz	0.142857
and	hdfstore append	0.016667
construct and returns axes if supplied	core ndframe construct axes	0.333333
reduction type operation	ops mixin reduce op	0.083333
a string or np dtype to a pandas	to dtype dtype	0.083333
millisecond or microsecond	indexes datetime index ops mixin resolution	0.125000
feather-format object from	io read feather	0.083333
return datetimeindex with times to midnight	datetime	0.006711
from a 1d array of interval objects parameters	indexes interval index from intervals cls data	0.333333
for :meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace	0.333333
see :class packer for	io msgpack	0.025000
accelerate unioning a collection	indexes datetime index union many others	0.040000
locations	locator call	0.333333
a boolean list indicated if we have mixed	indexes multi index have mixed	0.166667
from 1-dimensional ndarray only use	indexes index set value	0.023810
left and right data	left right	0.047619
return the size of the dtype of	itemsize	0.027027
index return new dataframe with labeling	data frame	0.005714
op_symbol	op_symbol	1.000000
turn values into codes given	get codes for values values	0.250000
we are passed a list-like indexer return the	index convert list indexer keyarr kind	0.066667
return the minimum value of the index	indexes datetime index	0.007634
provide boxed values for a column	core data frame box col values values items	1.000000
cast to the specified dtype	dtype	0.010989
sort multiindex at	multi	0.018182
check that left and right index are equal	assert almost equal left right	0.333333
styled html representation fo	style	0.041667
of the kinds allowable columns for	table queryables	0.055556
length of a	length of	0.333333
csv file (discouraged please	from csv cls path	0.066667
determine if each string matches a	core str match arr pat case	0.166667
lookup of value from 1-dimensional ndarray	core indexes period index get value series key	0.071429
as	core sparse sparse series as	0.125000
the sparsearray only the actual sparse values	sparse sparse array	0.043478
numpy array of python datetime	core indexes datetime	0.011494
is of a string-like	is string	0.500000
result as series or by a series	by axis	0.045455
the union	union	0.150000
return the minimum value of the index	datetime index	0.007042
of type window_type and size window	window arg window win_type min_periods	0.100000
fast transform path for	transform fast result obj	0.333333
apply mapper function to its categories not codes	core categorical map mapper	0.166667
gets called after	period index array wrap	0.050000
of casting data from some accepted	numeric index assert safe casting cls data	0.047619
3 5 the starargs attribute was changed to	base expr visitor visit call 35 node side	0.066667
conform a set of sparseseries (with nan fill_value)	core sparse	0.041667
putmask the	putmask mask	0.142857
perform the reduction type operation if	index ops mixin reduce op name	0.083333
dataframe	dataframe	1.000000
we are passed a list-like indexer return	convert list indexer keyarr kind	0.066667
a ufunc needs additional handling	result context	0.027027
this object names dtype	names dtype	0.500000
get a cross sectional for a given	core block manager fast xs	0.333333
full scope for	core computation scope full scope	0.055556
memory usage of my	core index ops mixin memory usage deep	0.200000
we want to set	series set	0.076923
moving window of type window_type on	apply window mean how	0.166667
and be	append	0.012987
node with the key or none if	get node key	0.083333
evaluate and return the expression of the	core computation evaluate	1.000000
return datetimeindex with times to midnight length	datetime	0.006711
a string representation	indexes frozen ndarray unicode	0.083333
take a string-like that is	string array data encoding	0.038462
not satisfy the boolean criterion specified by func	group by filter func	0.250000
ndarray like into	parser	0.008000
ilevels	ilevels	1.000000
and string-like array to convert object dtype	maybe convert string to object	0.142857
block from the	core block	0.010870
for series arithmetic operations to avoid code duplication	comp method series op name str_rep masker	1.000000
called via the 'numpy' library the	with	0.034483
validate that we have a astypeable to categorical	block is categorical astype dtype	0.333333
a boolean list indicated if we have mixed	index have mixed	0.166667
optional positional and	optional	0.050000
of interval	interval	0.029412
to line	to line	0.142857
a tree-like object that can be used	io html frame parser	0.012195
use this	core indexes index	0.007042
interpolate values according to	core resampler interpolate method axis limit inplace	0.166667
return the data & release the	io data col take data	0.111111
take a string-like that is	io convert string array data	0.038462
the number of	core indexes multi	0.014493
additional handling as	core indexes	0.004762
of bytes in	indexes range index nbytes	0.052632
datetime to	plotting dt to	0.125000
a boolean if we	indexes is	0.166667
return if we are a scipy sparse spmatrix	core dtypes is scipy sparse array	1.000000
the dtype of the item of the	core	0.001326
cast object to input numpy dtype	ndframe astype dtype copy errors	0.500000
if two indices overlap	items overlap	0.062500
given an interval or intervalindex	core indexes get interval	0.125000
data	core indexes multi index	0.013158
the td elements from	parse td obj	0.083333
apply function and combine results together in an	group by apply func	0.333333
to handle na filling of take	take fillable	0.250000
the _apply kwargs	func name window center	0.058824
comparison between 8 aware arrays	ops mixin evaluate compare other op	0.250000
try to read from a	io read	0.038462
we have	core is	0.200000
*this is an internal	indexes index to	0.500000
try to parse a	try convert to	0.333333
the union of two index objects	core indexes index union other	0.083333
positional	ndframe indexer has valid positional setitem	0.250000
read csv file (discouraged	core data frame from csv cls path header	0.066667
comparison operations to convert timedelta-like to	core indexes td	0.055556
override generic we want to set	core series set	0.076923
missing	fillna method	1.000000
node must already exist and	hdfstore append key value	0.016667
statement that create a table reflecting the	table create table setup	0.066667
the shape of the values to be at	block shape values ndim shape	0.083333
each interval	interval	0.029412
code to a	freq code	0.125000
we have a full length	core is full	0.500000
for	packb	0.022727
require the	datetime index simple new cls	0.250000
orig	orig	1.000000
can be used to iterate over	io html	0.012987
resets the index	io json	0.062500
a 2d-nd reshape operation on a blockmanager	block manager reshape nd axes	0.500000
and setup	set	0.012195
or np dtype	dtype dtype	0.100000
a categorical if not	categorical arr	0.125000
info	update info info	0.166667
null_color for	styler highlight null null_color	0.125000
for dataframe	ndframe	0.005025
series or by a series of	by axis	0.045455
original	core ndframe	0.005051
convert timeseries to specified frequency	core ndframe asfreq freq method how normalize	0.250000
value from 1-dimensional ndarray	set value arr key value	0.038462
gets called after a ufunc needs additional	index array wrap result context	0.034483
terminal	terminal	0.833333
1-dimensional ndarray only use this	core indexes index set	0.023810
'series argmin' is called via the	skipna skipna	0.100000
locations of to_match into values	core match to_match values	0.333333
exist and be table	io	0.003012
a multiindex from	core indexes multi index from	0.142857
from	core indexes	0.004762
called after a	core indexes	0.009524
single	core single	0.333333
backfill	backfill	1.000000
apply the	offset apply index days	0.500000
plural 'names' parameter	names name names deep	0.125000
returns a row cross-section from	xs key	0.333333
return an attributes dict for	indexes index get attributes dict	0.250000
datetime date objects	indexes datetime	0.011494
item and	item	0.050000
of unique elements in the	core index ops mixin nunique dropna	0.083333
not	core computation not	1.000000
return packed bytes	msgpack	0.022222
concatenation of an	dtypes concat datetime to_concat	0.125000
concatenation of	concat datetime to_concat axis	0.125000
arg is a passed in as	arg	0.018868
can be	parser build	0.014706
a matrix of scatter plots	plotting scatter matrix	0.500000
: int slice or	core data frame ixs	0.200000
of bytes in the	multi index nbytes	0.052632
a python expression as	eval expr	0.083333
padded hexadecimal id	core computation raw hex id	0.166667
fast lookup of value from 1-dimensional ndarray only	value	0.005155
a variable number of decimal places	decimals	0.090909
in	hdfstore append key value format	0.016667
cumulative min for each group	group by cummin axis	1.000000
for making this object picklable	indexes index setstate state	0.333333
use this if	core indexes index set value arr key	0.023810
csv file (discouraged please use :func pandas	data frame from csv cls path header	0.066667
fast lookup of	set value arr key	0.023810
of casting data from some accepted dtype to	assert safe casting cls data	0.047619
iterate	frame	0.009091
this function is called via the 'numpy' library	validate take with convert convert	0.055556
lookup of value from 1-dimensional ndarray only use	indexes period index get value series	0.071429
are going to write this as	write	0.017857
file node must already exist and	hdfstore append	0.016667
stata date formats to a	to stata	0.058824
a list replace	manager replace list	0.500000
on multiindex defaults to	indexes multi index	0.013158
to end	end	0.125000
read csv file (discouraged please use	csv cls path	0.066667
fast transform path	core ndframe group by transform fast result	0.333333
convert datetime-like to datetime64	index cmp opname nat_result	0.066667
ndframe is entirely empty [no items], meaning any	ndframe empty	1.000000
draw histogram of the	hist frame data	0.200000
kinds allowable columns for this	io table queryables	0.055556
more this is	core ndframe	0.005051
replace	core block manager replace	1.000000
mapping of how to create the grouper indexers	grouper obj key	0.142857
names to	set default names data	0.083333
return	get reso cls resostr	1.000000
two multiindex objects sorting if possible	other	0.013514
the datetimelike methods (as we	datetimelike methods	0.066667
hash a categorical by hashing its categories	hash categorical c encoding hash_key	0.500000
in file node must already exist and	key value format	0.016667
file-like	file like obj	0.500000
at the requested level the	sortlevel level	0.142857
an positional	has valid positional setitem	0.250000
of unique elements of arr1	contents arr1	0.066667
series extract groups	core str extract frame	0.047619
csv file (discouraged please use :func pandas	from csv cls path sep parse_dates	0.066667
construct dataframe from dict of array-like	data frame from dict	0.200000
out the binary feather-format	to feather fname	0.083333
interpolate values according to different	resampler interpolate method	0.166667
of whether each index value is	datetime index ops	0.034483
of microseconds (>= 0 and	timedelta index microseconds	0.066667
add the operations to the cls evaluate the	ndframe add numeric operations cls	0.500000
from some accepted dtype to the	cls	0.016949
see :class packer	io	0.003012
return an attributes dict for	core indexes index get attributes dict	0.250000
return a view of myself	view	0.043478
get lines 0) there are headers	python parser get index name	0.166667
this function is called via the 'numpy' library	numpy validate take with convert convert	0.055556
object o and return	msgpack packb o	0.055556
can be used to iterate over	html frame	0.014706
an intervalindex from a 1d array of	index from intervals	0.125000
name this allows simpler access to columns	core ndframe setattr name	0.166667
try_coerce_args	try coerce result result	0.333333
bears the risk	subarr	0.050000
return a formatter function for a range of	io formats get	0.100000
try to cast the array/value to a datetimelike	core dtypes maybe cast to datetime	0.500000
packed bytes see :class packer for options	io msgpack	0.025000
infer better dtype	core ndframe convert datetime numeric timedelta coerce	0.071429
boolean list indicated if we have mixed levels	index have mixed levels	0.200000
shift without copying data the shifted data will	slice shift	0.083333
must	io hdfstore append key value	0.016667
object that can be used	frame	0.009091
purely	loc indexer	0.166667
if it	core	0.001326
multiindex from the	core indexes multi	0.014493
a data	io table validate data columns	0.500000
cdate	cdate	1.000000
you	indexes index	0.007353
dateoffset	tseries date offset	0.500000
return a view	core categorical view	0.111111
whether the file begins with the bom character	for bom first_row	1.000000
accessor object	period	0.016667
in file	value format	0.016667
a range argument	range key is_setter	0.500000
my pandas type &	io fixed	0.166667
needs additional	core indexes period index array wrap	0.050000
the indexer fill	indexer	0.009174
remove and	chain map	0.034483
of	indexes index set value arr	0.023810
read csv file (discouraged please use :func	data frame from csv cls path header	0.066667
using indicated	errors	0.222222
decorator to capture stderr in a buffer so	capture stderr f	0.055556
return sparsearray from data stored in the sparselist	core sparse sparse list to array	1.000000
coerce	indexes period index coerce	0.125000
boolean if we need a	indexes index is	0.100000
object with labels on given axis	dropna axis	0.083333
number_format_dict	cls number_format_dict	1.000000
of the data	core data	0.041667
1-dimensional	set value arr	0.023810
see :class packer for	packb	0.022727
the series	timedelta	0.022222
convert structured or record ndarray to dataframe parameters	data frame from records cls	1.000000
panel or object coercible	other join overwrite filter_func	0.076923
groupby	groupby	0.285714
right	right exact check_names	0.500000
label values for requested level	index get level values level	0.250000
use	core indexes index set	0.023810
display options for printing	display options	0.083333
to	frame	0.009091
curve with holidays between start_date	holidays start end return_name	0.066667
return slice of panel along major axis	core panel major xs key	0.166667
will be using numexpr	core computation can use numexpr op op_str	0.333333
re-evaluate the obj with a groupby aggregation	resampler groupby and aggregate how grouper	1.000000
the vectorized membership of x in	core computation in x	0.166667
function or functions	ndframe rename axis	0.333333
of type window_type and size window	stats rolling window arg window win_type	0.100000
dispatch to apply we are stripping all	group by mixin apply func name	0.050000
other to int64 with	other	0.013514
of unique elements in the object	index ops mixin nunique dropna	0.083333
a single block	block manager	0.021277
of the flattened values	indexes index ravel order	0.037037
parsed	parsed	1.000000
string a la re split in	split arr pat n	0.200000
function column-wise row-wise or table-wase updating the	func axis subset	0.200000
index objects contain the same	indexes datetime index ops mixin	0.029412
statement that create a table	io sqlite table create table	0.166667
lookup	arr key	0.023810
purely label-location based indexer for selection	loc indexer	0.166667
totally ordered cartesian product of	shape sort xnull	0.066667
detect whether the installed version of openpyxl	compat major_ver	0.083333
the index	indexes range index	0.021277
lookup of value from	index set value arr key value	0.038462
a function has at most len(compat_args) arguments and	args fname args max_fname_arg_count compat_args	0.333333
from	indexes	0.004651
am an indexed column	io index col is indexed	0.200000
kwargs suitable for	kwargs cls	0.040000
return sorted copy of index	core indexes index sort values return_indexer ascending	0.500000
for first non-na/null value	series first valid	0.250000
a "pivot" table) based on column values uses	pivot index columns values	0.200000
a function to a	func	0.023810
tuples of the (attr formatted_value)	ops mixin format attrs	0.142857
block manager from	core sparse to manager sdf	0.052632
strings in the series/index	core str	0.011364
of to_match into values	core match to_match values	0.333333
compose 2 callables	reshape compose2 f g	1.000000
already exist and be table	format	0.012346
block manager from a dataframe of series	manager sdf	0.052632
float	io formats float array formatter	0.055556
indicated if we have mixed levels	have mixed levels	0.200000
the minimum value of	index ops mixin min	0.125000
a tree-like object that can be	html frame parser build	0.014706
this is similar to a	core reshape	0.047619
and expected error message regular	exc_type exc_value trace_back	0.100000
to call encode before writing	io stata writer write to_write	0.083333
return result as series or by	groupby by axis level	0.045455
converts a style_dict	cls style_dict num_format_str	1.000000
strings to time objects	tools to time	0.125000
src_list	src_list	1.000000
ndarray only use	indexes index set value	0.023810
periodindex	date formatter	1.000000
pickleable state	tseries business mixin getstate	1.000000
about a malformed row	malformed	0.066667
create	ndframe create	0.500000
via the 'numpy' library the	numpy validate take with convert	0.055556
if two indices overlap	core items overlap	0.062500
result_type which overcomes the npy_maxargs 32	computation result type many	0.142857
i : int slice or sequence of	core data frame ixs i axis	0.200000
return the correct pandassql subclass based	io pandas sql builder con flavor schema meta	0.055556
single column from the table generally only indexables	io table read column column where start stop	0.250000
cartesian product of	group index labels shape sort	0.200000
for running code that expects to	util assert produces warning expected_warning filter_level clear	0.071429
must	io hdfstore append key	0.016667
the float values converted into	io formats float array	0.055556
to see if a url has a valid	is url url	0.047619
of	period	0.033333
manipulation result has the same dimensions as	constructor	0.040000
lookup of value from	value	0.005155
sanitize input data to	sanitize array data index dtype	0.250000
operations to the cls evaluate the	numeric operations cls	0.090909
parameter for general index	core indexes index validate names name	0.066667
given	indexes get interval	0.125000
number	core indexes range	0.062500
values	datetime64 from values values	0.333333
union of two index objects and sorts	indexes range index union other	0.083333
create a table reflecting the	table create table setup	0.066667
the op string for this	computation bin op generate	0.066667
table in file node must	value format	0.016667
hash obj will succeed false otherwise	hashable obj	1.000000
return datetimeindex with times	core	0.001326
of take	core indexes multi index assert take	0.500000
na_sentinel	na_sentinel	1.000000
needs additional handling	array wrap	0.025000
csv file (discouraged please use	frame from csv cls path	0.066667
saturday or sunday use previous friday instead	previous friday	0.250000
convert sparsearray to a numpy array	core sparse sparse array to dense fill	1.000000
in the series extract groups from	extract frame arr	0.047619
a tree-like object	html frame parser	0.012658
two or more factors by default	crosstab index columns values rownames	0.333333
boolean whether i can attempt conversion to	core indexes is convertible to index other	0.333333
slice or	key	0.005051
the info for this indexable with	io index col update info info	0.090909
holiday calendars together the caller's class	tseries abstract holiday calendar	1.000000
filled with nat which has	ops mixin nat new box	0.050000
is an actual dtype that we	dtype is dtype cls dtype	0.086957
decorator to run the	num_threads kwargs_list	0.050000
the data & release	data col take data	0.111111
capture stderr	capture stderr	0.055556
ensure	ensure	0.555556
take a string-like that is object	string array data encoding	0.038462
implementation for the aggregators	aggregate arg	0.071429
csv file	data frame from csv cls	0.066667
and setup my atom from the block	io data col set atom block	0.200000
string in the series extract groups from the	extract arr	0.066667
convert each input to appropriate for table outplot	util table plotter conv data	0.142857
code group of	group	0.027027
new dataframe with labeling information	data frame	0.005714
sql query or database	sql sql con index_col coerce_float	0.142857
to ndarray raises on scalar	core indexes index coerce to ndarray	0.166667
try	maybe	0.181818
for building a styled html representation fo	style	0.041667
fixed frequency timedelta index with day	indexes timedelta range start end	0.083333
value from 1-dimensional ndarray only use this if	indexes index set value arr key value	0.038462
1-dimensional	index set	0.022727
determines if two index objects contain	indexes range index equals other	0.200000
type and coerce into matrices	core arrays to mgr arrays arr_names index	0.250000
'args' and 'kwargs' should be	compat numpy validate groupby func name args kwargs	0.166667
if the index is monotonic	core indexes index is monotonic	0.200000
type of datetimetzdtype	datetime tzdtype	0.333333
the time index using the	core	0.001326
is of the	dtypes is	0.060606
disabled	disabled	0.833333
to	html	0.011765
data	validate data	0.500000
nice str repr of our rolling object	core resampler unicode	0.500000
slice	ndframe slice	0.125000
where condition cond on a and	core computation where cond	0.111111
node must	io	0.003012
columns to be	columns	0.017857
already	append key value format	0.016667
float64index	float64index	1.000000
the :meth pandas dataframe reset_index function	reset index level drop name inplace	0.142857
handle na filling of take	assert take fillable values indices allow_fill fill_value	0.250000
series we	core series group	0.030303
be used	parser build	0.014706
index objects and	index	0.002004
from the table	io table	0.062500
of that group	core group by	0.027778
the float	float array formatter get	0.055556
convert argument to timedelta parameters	tools to timedelta arg	0.500000
day of the month and day_of_month	semi month begin	0.166667
timedelta index	indexes timedelta	0.083333
return new dataframe with	core data frame	0.005917
be table	append	0.012987
nat which has the same length as	ops mixin nat new	0.050000
take a string-like that is object dtype and	io convert string array	0.038462
nat-like arg is a passed in as	arg	0.018868
of unicode strings	randu	0.142857
multi-index suitable for a panel-like dataframe	panel index time panels names	0.076923
maximum value of the object	categorical max numeric_only	0.250000
return the block manager from	to manager sdf columns	0.052632
table in file node must already exist	value format	0.016667
create	core ndframe create indexer	0.500000
the 'numpy' library the	validate take with convert convert args kwargs	0.055556
fast transform path for	by transform fast result obj	0.333333
the dtype	core dtypes infer dtype	0.333333
of x in y if possible	core computation in x y	0.047619
attributes e g freq depending on op	attributes	0.115385
array interface return	indexes interval index array result	0.125000
the (attr formatted_value)	indexes multi index format attrs	0.142857
wrap comparison operations to convert timedelta-like to	core indexes td index	0.055556
construct this type from	dtypes interval dtype construct from string	0.166667
makes sure that time and panels are conformable	ensure like indices time panels	0.250000
writer :	formats excel formatter write writer	1.000000
the handle	io stata reader	0.142857
use	set value	0.023256
parents	parents	0.833333
compute the slice locations for input labels	index slice locs start end step kind	0.083333
sets names on levels warning	index set names names	0.200000
take which sets nan values	core take nd	0.125000
as	index array wrap	0.033333
upgrading	mode propindexes keys	0.250000
datetimeindex from one time zone to	indexes datetime index	0.007634
my self as a sparse	sparse series as sparse	0.250000
bytes in the underlying data	index nbytes	0.052632
index with custombusinessday as the	indexes cdate range start end periods	0.083333
a block	core block make block	0.100000
result as series or by a series of	groupby by axis	0.045455
openpyxl v2 1 0	io openpyxl20writer	0.035714
i : int slice	core data frame ixs i	0.200000
dispatch to apply we are stripping all	by mixin apply	0.050000
types and ranges supported by stata and	stata types	0.500000
the series extract groups from	core str extract	0.035714
new datacol	name cname	0.111111
ndarray like into	json parser	0.071429
an item pair from maps[0] raise	popitem	0.043478
construct this type from	categorical dtype construct from	0.166667
apply mapper function	core categorical map mapper	0.166667
extract from a masked rec array	masked rec array	0.250000
exception raised	util assert raises	0.200000
kde	kde	1.000000
we are index sliceable then return my	convert to index sliceable obj key	0.083333
to work as desired	indexes index getitem key	0.166667
the block manager from	manager sdf	0.052632
names to 'index' for regular or 'level_x'	io json set default names data	0.500000
index objects and sorts if possible	range index	0.021739
additions	additions	1.000000
boolean criterion specified by func	ndframe group by filter func	0.250000
from 1-dimensional ndarray only use this if	index set value arr	0.023810
a copy of a series excluding elements	series group	0.030303
a tree-like object that can be used to	io	0.003012
subject string in the series extract groups	core str extract frame	0.047619
of x in	in x	0.166667
block if not	core block manager	0.022727
a number	number	0.100000
figure with a set of subplots	plotting subplots	0.125000
duplicate each string in the series/index by	core str repeat	0.045455
a left-join except that we	left right on left_on	0.058824
subclass of styler with a	formats styler from	0.076923
series excluding elements from	core series group	0.030303
convert to our native types format	core float block to native types slicer na_rep	0.250000
return a copy of a series excluding	core series group	0.030303
csv file (discouraged please use :func	core data frame from csv	0.066667
re-evaluate the obj with a groupby aggregation	resampler groupby and aggregate	1.000000
to handle na filling of take	multi index assert take fillable values	0.250000
series extract groups from	extract frame arr	0.047619
evaluate the block return result block from	block eval func other raise_on_error	0.333333
curve with holidays between start_date	tseries abstract holiday calendar holidays start end return_name	0.066667
the padded hexadecimal id	computation raw hex id	0.166667
insert	core block manager insert loc	1.000000
an internal format currently just the	core block internal values dtype	0.111111
of type window_type and size window on	arg window win_type	0.100000
determines if two	ops mixin equals other	1.000000
return an attributes dict for my class	get attributes dict	0.250000
form the intersection of two index	range index intersection other	0.083333
column	col is	1.000000
to apply we are	by mixin apply func	0.050000
that the left	left	0.018519
raise a typeerror if	dtypes categorical	0.250000
timedelta	timedelta index maybe	0.250000
shift the	tzblock shift	0.500000
of a hack to accelerate unioning a	union many others	0.040000
'index' for regular or 'level_x'	io json	0.062500
openpyxl is	is	0.005291
the float values converted into strings	float array formatter get result	0.055556
return a fixed frequency datetime	bdate range start end	0.111111
dataframe apply for sparsedataframe	sparse sparse data frame apply func	0.166667
rows of other	other	0.013514
a	crosstab index	0.066667
cross-tabulation of	reshape crosstab	0.066667
exist and	io hdfstore append key	0.016667
must already exist and	io	0.003012
wide	wide	0.857143
wrap comparison operations to convert timedelta-like	td index cmp opname	0.055556
table this is generally only useful	column key column	0.142857
sets names on	indexes multi index set names names level validate	0.200000
return packed bytes see :class packer	packb	0.022727
sets names on	multi index set names names level validate	0.200000
hack to accelerate unioning	indexes datetime index union many others	0.040000
an	computation	0.115385
value is	value	0.005155
boolean list indicated if we have mixed	core indexes multi index have mixed	0.166667
a curve with holidays between start_date and end_date	holidays start end return_name	0.066667
slice/take blocks along axis=0	slice take blocks ax0 slice_or_indexer fill_tuple	0.500000
resampling from a dataframe column or	resampler from selection	0.142857
series columns for dataframe major_axis	ndframe iteritems	0.055556
bytes in the	range index nbytes	0.052632
when using a timegrouper	resample rule	0.166667
returns number of unique elements in the group	group by nunique dropna	0.250000
return the ftypes (indication	ftypes	0.043478
is defined as a copy with	view cls	0.047619
take the codes by	take	0.030303
of	reshape crosstab index columns	0.066667
attributes e g freq depending on	attributes	0.115385
with times	indexes	0.004651
and setup my atom from the block	io data col set atom block block_items existing_col	0.200000
series arithmetic operations to avoid code duplication	series op name str_rep fill_zeros	1.000000
wide format into long stacked format as dataframe	frame	0.009091
a copy of this object names dtype	indexes multi index copy names dtype	0.333333
new type (if copy=true return a new copy)	core categorical block astype dtype copy errors values	1.000000
equivalent to shift without copying data	core ndframe slice shift	0.083333
we take a string-like	convert string array	0.038462
freqstr	freqstr	0.555556
style_dict to an openpyxl style	openpyxl1writer convert to style cls style_dict	0.166667
after a ufunc needs additional handling as	context	0.023810
positional indexer cannot enlarge its target	indexer has valid positional setitem indexer indexer	0.052632
fast lookup of value from 1-dimensional ndarray	index get value series key	0.250000
subset rows or	filter items like regex axis	0.166667
the full scope for use	core computation scope full scope	0.055556
return number of unique elements in	core index ops mixin nunique dropna	0.083333
specialized intersection for datetimeindex objects may	index intersection	0.142857
membership of x in y	in x y	0.047619
the series extract groups from the first	str extract	0.035714
integer location slice or	loc key	0.250000
group labels}	core base grouper groups	0.200000
return them as a block	block	0.016393
an xarray object from the pandas	to xarray	0.125000
number of microseconds (>= 0 and less	timedelta index microseconds	0.066667
a nice str repr of our rolling	core window unicode	0.071429
check that the left and	left	0.018519
the array interface	interval index array result	0.125000
in hdfstore parameters	io hdfstore put key value format	0.333333
with nat which has the same length as	ops mixin nat new	0.050000
roll	roll	0.714286
of the list	core sparse sparse list	0.333333
build	build	0.081081
of styler with a	formats styler from	0.076923
data (produce a "pivot" table) based	core data frame pivot index columns	0.200000
hierarchical index labels returning a dataframe	data frame	0.005714
whether each index value is found in the	datetime index ops mixin isin	0.083333
set of unique elements of arr1 and arr2	equal contents arr1 arr2	0.066667
simple cross-tabulation	crosstab index columns values	0.066667
a valid ordered parameter if	ordered	0.017857
in i	i	0.083333
split each string a la re split in	split arr	0.200000
read csv	from csv cls path header	0.066667
intersection of two index	range index intersection other	0.083333
provides a	period index	0.024390
a method to class	method cls name func	0.076923
file node must already	io	0.003012
do a list replace	block manager replace list src_list dest_list inplace	1.000000
set a rules normally	calendar init name rules	0.200000
a new unit if needed otherwise return from	core dtypes datetime tzdtype new cls unit tz	0.055556
wrap comparison operations to convert timedelta-like	td index cmp	0.055556
passed type is	dtypes period dtype is	0.125000
extended	indexes range index extended	1.000000
intervalindex to control get_slice_bound	index get loc only exact matches key	0.142857
and	compat chain map	0.032258
return the join indexers	reshape as of merge get join indexers	1.000000
moving window of	core window apply window	0.166667
index objects sortedness of the	index	0.002004
get the 'info axis' see indexing	core ndframe keys	0.083333
table formats	table	0.054348
sets names on levels warning mutates!	multi index set names names	0.200000
row elements from the	io html frame parser	0.012195
to all values found in index	core transform index index	0.500000
dtype and n/a values	dtype and	0.125000
type window_type and size window on the data	window arg window win_type min_periods	0.100000
ndarray argsort argsorts the value omitting na/null values	core series argsort axis kind order	0.500000
the view limits to the	locator autoscale	0.055556
float values converted into strings using	formats float array formatter get result as	0.055556
the levels of both multiindex objects are the	indexes multi index equal levels other	0.100000
my	fixed	0.055556
size and return	size	0.041667
the td elements from a row	parse td obj	0.083333
copy of	copy	0.038462
rows from	io fixed width reader get rows	0.500000
the union of two multiindex objects	indexes multi index union other	0.066667
have an object dtype	dtypes	0.031746
ndarray raises on scalar data converts	ndarray cls data	0.333333
object serving as a base class for all	abstract engine	0.166667
radviz - a multivariate data visualization algorithm parameters	radviz frame class_column ax color	1.000000
difference of	axis	0.011364
a string representing a frequency	freq	0.016129
a boolean if we are a single	manager is	0.100000
iterate over	html	0.011765
numpy / pandas type to its	table type x	0.055556
return packed bytes see :class packer for options	msgpack packb	0.025641
type is an actual dtype that	core dtypes interval dtype is dtype cls dtype	0.142857
after a	indexes period index array	0.050000
prior to a ufunc	array prepare result context	0.333333
a 1d array of	intervals	0.111111
to parse datetime string	parse time string	0.250000
ndarray or list of lists	matrix data index	0.500000
a simple cross-tabulation of	core reshape	0.047619
raise	compat chain	0.034483
parsers that parse html into dataframes	html frame parser	0.012658
like into	io json parser	0.071429
a resample of a	datetime index	0.007042
not the 'usecols' parameter is a callable	io evaluate usecols usecols names	0.083333
is called via the 'numpy' library the	compat numpy validate take with convert convert	0.055556
with	get	0.007143
of x not in y	core computation not in x y	0.066667
ftypes (indication of	ftypes	0.043478
apply function	func level	0.500000
sets names	indexes multi index set names names level	0.200000
of python datetime	indexes datetime	0.011494
of a single element pandasobject	ndframe	0.005025
for making this object picklable	sparse array setstate state	0.333333
into a list of lists	html frame parser	0.012658
for this	index	0.002004
called prior to a	array prepare result	0.111111
locations for input labels	locs start end step kind	0.250000
handle na filling of take	index assert take fillable	0.250000
node must already exist and be table	key value format	0.016667
nat which has the same length as the	mixin nat new box	0.050000
union of two index	core indexes index union other	0.083333
apply function to all values found in index	transform index index func level	1.000000
'series argmin' is called via the 'numpy' library	validate argmin with skipna skipna	1.000000
specialized cython take which sets nan values in	take nd arr indexer axis out	0.166667
index and / or columns using input function	axis copy inplace	0.055556
of all	all	0.043478
last non-na/null value	data frame last valid	0.250000
guarantee the shape of the values to	shape values ndim shape	0.083333
multirow e	format multirow	0.250000
the numeric	indexes index add numeric	0.250000
from a a	from	0.030303
my hashed	indexes multi index hashed	0.166667
already	append key value	0.016667
positional	indexer has valid positional setitem	0.250000
subset of a dataframe	data frame	0.005714
the values to be at least 1 d	values	0.008547
convert to our native types format	block to native types slicer na_rep date_format quoting	0.250000
rewrite the	core computation rewrite assign tok	0.125000
the number	range	0.047619
don't allow a multi reindex on panel or	core panel needs reindex multi axes	0.500000
putmask that potentially upcasts the result	core dtypes maybe upcast putmask result	0.200000
hash a categorical by hashing its categories	util hash categorical c encoding hash_key	0.500000
number of bytes in the underlying	index nbytes deep	0.052632
provide resampling when using a timegrouper	group by resample rule	0.166667
a dataframe to a tabular environment table	data frame to latex buf columns col_space header	0.111111
the series extract groups from the first	core str extract frame	0.047619
the reduction type operation if	ops mixin reduce op name axis skipna	0.083333
a styler	formats styler set	0.333333
resample of	period	0.016667
list of tuples to	tuples cls tuples sortorder names	0.250000
dataframe with labeling	data frame reset	0.027778
if we have an object dtype try	dtypes maybe	0.166667
matches the expected exception	exception matches	0.500000
to handle na filling	fillable values indices allow_fill	0.125000
or columns using input function or functions	ndframe rename axis mapper axis copy inplace	0.250000
index objects contain the	core indexes range index	0.021277
the series extract groups from the first match	str extract frame	0.047619
only use this	core	0.001326
must already exist and be table	value	0.005155
a ufunc	period index array wrap result context	0.041667
concatenation of an datetimelike	concat	0.058824
table in file node	append key value	0.016667
for making this object picklable	timedelta index setstate state	0.333333
to table in	append	0.012987
used to iterate over the	io html frame parser	0.012195
concat all inputs as object datetimeindex timedeltaindex	dtypes concat index asobject to_concat name	0.250000
from 1-dimensional ndarray only use this if you	set	0.012195
from	core indexes index set value	0.023810
be applied on each value to format	float array formatter value formatter float_format threshold	0.100000
view	categorical view	0.111111
values from this selection take = take ownership	values nan_rep encoding	1.000000
the series extract groups	str extract frame	0.047619
given	io formats get	0.100000
locale	locale	0.777778
validate if we can perform	core indexes index validate for	0.333333
value the	value	0.005155
with decimal stride into a higher freq	decimal cls value freq	0.333333
pandas type to its	type	0.024390
as sparsifying is not supported for panel objects	core panel to sparse	0.037037
with a set of subplots already made	plotting subplots naxes sharex sharey squeeze	0.166667
read csv file (discouraged please use :func pandas	frame from csv cls path header	0.066667
file node must already	io hdfstore append key value format	0.016667
for panel objects and	core panel to sparse	0.037037
a simple	reshape crosstab	0.066667
to add a str acessor	string accessor	0.250000
argsort argsorts the value	core series argsort	0.083333
we are index sliceable then return my slicer	core convert to index sliceable obj key	0.083333
support a single assignment	base expr visitor visit assign	1.000000
over the dom	io html frame parser build doc	0.125000
apply box func to passed	core indexes datetime index ops mixin box	0.500000
post process for	plotting mplplot post plot logic	0.333333
concatenation of an datetimelike	dtypes concat datetime to_concat	0.125000
filled with nat which has the	nat new	0.050000
csv file	csv cls path header	0.066667
define an builtin function	builtin func arg	0.200000
of arr1 and arr2 are equivalent	equal contents arr1 arr2	0.066667
a tree-like object that can be used to	parser build	0.014706
create a scipy sparse coo_matrix from a	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
feather-format	feather	0.100000
sorts the categorical by category value returning	ascending na_position	0.071429
given a tuple of	core indexes multi index get	0.100000
existing	existing	1.000000
a copy of self coded with categories as	categorical codes for groupby sort	0.071429
file node must already exist and be	io hdfstore append key value	0.016667
a boolean if we will be using numexpr	computation can use numexpr op op_str a b	1.000000
to convert dataframe and	data	0.009709
a	core indexes period index array wrap result	0.050000
string-like array to convert object	core dtypes maybe convert string to object	0.142857
option	option	1.000000
type window_type and size window on the data	window arg window win_type	0.100000
as a sparse array	sparse sparse series as sparse array	0.250000
deep copy by	formats styler copy	0.500000
that can be used to iterate	io	0.003012
fast transform path for	group by transform fast result obj	0.333333
infer the fill value	dtypes infer fill value	0.333333
read sas files in sas7bdat format	sas7bdatreader	1.000000
check if the object is a file-like object	core dtypes is file like obj	0.333333
shift the block by periods	core sparse block shift periods axis mgr	1.000000
add a temporary variable	add tmp value	0.333333
that the exception raised matches the expected exception	util assert raises contextmanager exception matches	0.142857
whether each index value is found in	core indexes datetime index ops mixin isin values	0.083333
from the	io html frame	0.012987
cross sectional for a given location	core block manager fast xs loc	0.166667
to compare numeric	dtypes is numeric v string	0.333333
whether i can attempt conversion	convertible	0.166667
values as an enumerated type or	factorize values sort order na_sentinel	0.111111
return dtype and n/a values	core get empty dtype and	0.125000
index	core indexes index	0.084507
the block manager from a dataframe	core sparse to manager sdf	0.052632
each subject string in the series extract groups	str extract frame	0.047619
downsample the	index resampler downsample how	0.200000
to write this as a frame	write obj	0.041667
names to	names data	0.083333
compute standard deviation of groups excluding	core group by std ddof	0.166667
propagate metadata from other to self	ndframe finalize other	0.333333
belongs to a leap year	leap year	0.142857
return	core reshape as of merge get	0.500000
only if the process of casting	safe casting	0.125000
to apply we are stripping all of	by mixin apply func	0.050000
needs additional handling	index array	0.033333
along major axis	major xs key	0.500000
'kwargs' should be empty because all	kwargs	0.022222
and 'kwargs' should be	name args kwargs	0.166667
construct this type from a string raise a	categorical dtype construct from string cls string	0.166667
a tree-like object	html frame	0.014706
property property	core	0.001326
valid keys across my	has valid tuple	0.500000
input values as an enumerated type or categorical	factorize values	0.111111
find indices where elements of v should be	v	0.026316
sets names	index set names names level	0.200000
shift without copying data the shifted	core ndframe slice shift periods axis	0.083333
of the required package is	package pkg_name min_version max_version	0.083333
are index sliceable then return my slicer	convert to index sliceable obj key	0.083333
sparseseries	sparse	0.026316
names to 'index' for	default names	0.083333
csv file (discouraged please use :func pandas	frame from csv cls	0.066667
check if we do need a multi reindex	ndframe needs reindex multi axes method	0.333333
take a string-like that is object dtype	convert string array data encoding	0.038462
fixed frequency datetime index	indexes bdate range start	0.083333
a	core indexes period index	0.034483
reduction type operation	categorical reduce op name axis skipna	1.000000
memory	range index memory	1.000000
nanoseconds (>= 0 and less than	timedelta index nanoseconds	0.066667
compute the slice locations for input labels	slice locs start end step kind	0.083333
plots a series	plotting tsplot series	0.333333
slice substrings from each element in the series/index	core str slice arr start stop step	1.000000
returns *copy*	core indexes frozen ndarray values	0.250000
:meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace	0.333333
encode input values as an enumerated type or	core factorize values	0.111111
gets the	core categorical	0.027778
box function to	ops mixin box func	0.142857
check whether or not the 'parse_dates'	io validate	0.031250
indexer input array to	indexer	0.009174
an object with matching indices	ndframe reindex like other method copy limit	0.111111
file node must	hdfstore append	0.016667
util	util	0.312500
copy	multi index copy	0.166667
each string in the series/index by the	core str	0.011364
indices where elements of v should be	core indexes frozen ndarray searchsorted v	0.033333
function for a range of timedeltas	format timedelta64 values nat_rep box	0.125000
return a version to operate on as	block try operate values	0.125000
objects parameters	core indexes	0.004762
for	core	0.009284
return the node with the key or none	get node key	0.083333
value to	array formatter value	0.250000
that can be used to iterate over the	io html	0.012987
a feather-format object from	feather	0.050000
statement that create a table reflecting the	sqlite table create table setup	0.066667
pandas type	type	0.024390
ensure that an	ensure	0.111111
background null_color	null null_color	0.125000
1st discrete difference of	data frame diff periods axis	0.250000
must already exist and be table	append key	0.016667
sanitize an index type to	core sanitize index data index copy	0.200000
return	reshape merge operation get	0.500000
passed type is	dtypes interval dtype is	0.066667
converts a style_dict to an xlsxwriter format	io xlsx writer convert to style style_dict	0.166667
in	parser	0.008000
for a particular object	core dtypes extension dtype repr	0.142857
series columns for dataframe and	ndframe	0.005025
must	key value format	0.016667
only makes sense when fill_value is nan	core sparse stack sparse frame frame	0.333333
is of a	is	0.005291
numpy / pandas type to	table type x	0.055556
arg is a passed in as an object	arg	0.018868
from maps[0]	compat chain	0.034483
stringify	stringify	1.000000
iterate over the	parser build	0.014706
labels on given axis	frame dropna axis	0.142857
construct an intervalindex from a	indexes interval index from arrays	0.166667
to convert datetime-like to datetime64	cmp opname nat_result	0.066667
the categorical by category value returning a new	inplace ascending na_position	0.071429
csv file	core data frame from csv cls path	0.066667
a multiindex from the cartesian product	core indexes multi index from product	0.166667
is a	indexes	0.004651
fast lookup of	core indexes index set	0.023810
pack	packb	0.022727
that we have a valid ordered parameter if	cls ordered	0.058824
return a slice of my	core block slice slicer	0.083333
read csv file	frame from csv cls path header	0.066667
defined as a copy with the same identity	multi index view cls	0.047619
the ftypes (indication of sparse/dense and dtype)	ftypes	0.043478
an index that	index	0.002004
a new unit if needed otherwise return	new cls unit	0.055556
by the indexer	indexer	0.009174
ftypes	ftype	0.076923
swap levels i and j in	core ndframe swaplevel i j	0.333333
panel to a separate excel	core panel to excel path na_rep engine	0.111111
to	to dtypes	0.500000
return the slice dictionary for these axes	axes for slice axes	0.333333
an	io index	0.111111
implementing the plot attribute for groupby	by plot	0.062500
number of unique elements in the group	core series group by nunique dropna	0.250000
coerce any object types	object block convert	0.083333
checking function of type t or tuple of	computation is type t	0.083333
the object is a sequence	core dtypes is sequence	0.166667
ufunc needs additional handling	result context	0.027027
series/index by given	str	0.017544
a curve with holidays	abstract holiday calendar holidays start end return_name	0.066667
float values converted into	float array formatter get	0.055556
in file node must already	append key	0.016667
values as an enumerated type or categorical variable	core factorize values	0.111111
deep copy	styler copy	1.000000
union of two	union other	0.333333
dataframe with multi-level index return new dataframe	data frame	0.005714
dateoffset of one custom business month	custom business month	0.166667
conserve rangeindex type for scalar and slice keys	indexes range index getitem key	0.166667
gets called prior	prepare result	0.111111
on a and b	op_str a b	1.000000
type in	type	0.024390
array and create the	array to	0.333333
dispatch to apply we	by mixin apply func	0.050000
concat all inputs as object datetimeindex	core dtypes concat index asobject to_concat name	0.250000
for running code that expects	util assert produces warning expected_warning	0.071429
array interface return my	core indexes multi index array dtype	0.125000
float values converted	io formats float array	0.055556
panel or above	core panel	0.019231
csv file (discouraged please use :func	csv cls path	0.066667
result block s from	block where other cond align raise_on_error	0.066667
the td elements from a row element	parser parse td obj	0.083333
matrix of	matrix	0.076923
not supported for panel objects	core panel to	0.027027
values to be at least 1 d	shape values ndim	0.050000
methods for building a styled html representation fo	style	0.041667
a	period index array wrap	0.050000
for creating a subclass of styler with a	io formats styler	0.021277
return	core indexes multi index	0.013158
with requested level removed if	droplevel level	0.500000
validate on	rolling validate	1.000000
of datetime time the time part of the	indexes datetime index time	0.166667
create and return the op	bin op	0.125000
set of sparseseries	core sparse	0.041667
must already exist	append	0.012987
html	formats	0.031250
forward to	core sparse sparse series iter	0.250000
force non-datetime columns	io parse date columns data_frame parse_dates	0.166667
difference between index values and index	datetime index	0.007042
keeps track of whether	computation set test mode v	0.142857
for more	core ndframe	0.005051
index with day calendar	core indexes period	0.032258
cases to get	get index name	0.200000
rows	get rows	0.500000
the default frequency	end periods freq	0.187500
number of nanoseconds (>= 0	core indexes timedelta index nanoseconds	0.066667
frequency if	freq axis	0.250000
take which sets nan values	core take nd arr indexer axis	0.125000
be	new align	0.166667
type to its corresponding json_table	json as json table type	0.250000
to beginning	date offset beg	0.166667
modify block in-place with new item value	core object block set locs values check	0.125000
used to iterate over the	parser build	0.014706
convert :mod datetime to the	dt to	0.125000
if categoricals are the same dtype	categorical is dtype equal other	0.250000
gets called after a ufunc needs additional handling	period index array wrap result context	0.041667
elements of v should be	indexes frozen ndarray searchsorted v	0.033333
the boolean criterion specified by func	core ndframe group by filter func	0.250000
the number of bytes in the underlying data	multi index nbytes	0.052632
synonym for :meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace limit	0.333333
new index of the values set with	core indexes index putmask	0.111111
passed dataframe	data frame	0.005714
sequence of	sequence	0.090909
determines if two index objects contain the	indexes datetime index ops mixin equals other	0.200000
simple	core reshape crosstab index	0.066667
of index to be returned from	index b	0.041667
get a	get dtype	0.500000
delimiter string starting at the end of the	rsplit arr	0.037037
the formatted data as	core indexes index formatter func	0.083333
base	tseries get base	0.333333
utility frequency conversion method for series/dataframe	asfreq obj freq method how	0.500000
note this is *not*	is other	0.055556
type not dtype instance associated with an array	type arr_or_dtype	0.142857
used to iterate	io	0.003012
the info axis	core get info	0.250000
have	cls	0.016949
return rule name associated with a dateoffset object	get offset name offset	0.500000
for creating a subclass of styler with a	io formats styler from	0.076923
pack object o and return packed bytes	io msgpack packb o	0.055556
a single block and	block manager	0.021277
string-like and string-like array to convert object dtype	convert string to object	0.142857
we require	datetime index simple new cls	0.250000
the series/index by the given delimiter string	core str	0.011364
in the series extract groups from the first	str extract arr	0.066667
float values converted into strings	formats float array formatter get result as array	0.055556
sets index names to	set default names data	0.083333
if we are index sliceable then return my	core convert to index sliceable obj	0.083333
group excluding	group by	0.016129
apply	semi month offset apply index days	0.500000
to write this as a frame	write	0.035714
handle specific apply logic for	tseries semi month offset apply n other	0.200000
take the codes	take	0.030303
this is index for series columns for dataframe	ndframe	0.005025
over the	io html	0.012987
additional handling	core indexes	0.004762
'name' parameter for general index and	core indexes index validate names name	0.066667
extension against the	writer check extension cls	0.125000
return a boolean if we need	core indexes index is	0.083333
handle na filling of take	indexes index assert take fillable values indices	0.250000
allowed	allowed	0.545455
the slice dictionary for these axes	axes for slice axes	0.333333
in file node must already exist	io hdfstore	0.014493
parse a ndarray like into a	json parser	0.071429
nat which has	ops mixin nat new	0.050000
on type and coerce into matrices	core arrays to mgr arrays arr_names index	0.250000
we have a	validate ordered cls	0.055556
index return new dataframe with labeling information in	core data frame	0.005917
elements of v should be inserted in	indexes frozen ndarray searchsorted v	0.033333
parse the raw data into a	parser parse raw data	0.250000
required package is	package pkg_name min_version max_version app	0.083333
string-like that is object dtype	convert string array data encoding	0.038462
that can be	html frame	0.014706
general index	core indexes index validate	0.066667
boolean if values in	ops mixin is	0.100000
or ndarray filled with nat which has the	ops mixin nat new box	0.050000
little endian	little endian	1.000000
dispatch to apply we are stripping all of	apply func	0.027027
missing indexers	missing	0.142857
from 1-dimensional ndarray only use this if you	set value	0.023256
the vectorized membership of x not in	core computation not in x	0.166667
the float values converted into strings	formats float array formatter	0.055556
return the header of	io html frame parser parse thead	0.111111
the index and its underlying	core indexes range index	0.021277
of kwargs suitable for initializing or	kwargs	0.022222
is datetimelike (e	maybe to datetimelike	0.142857
to timestamp-keyed dict	core dict compat d	0.142857
a	io html	0.012987
ensure that if we don't have an index	frame ensure valid index value	1.000000
times to midnight length is	core	0.001326
the	io	0.132530
of value from 1-dimensional ndarray	value	0.005155
keeps track of whether numexpr was used stores	computation set test mode v	0.142857
number of bytes in	indexes multi index nbytes	0.052632
moving window	window	0.071429
if we are a view	is	0.005291
the styler	io formats styler	0.021277
form the intersection of two index objects sortedness	core indexes range index intersection other	0.083333
accelerate unioning a collection of	datetime index union many others	0.040000
value inplace return a new block (of a	block setitem indexer value mgr	0.333333
ensure that we are grabbing the correct scope	ensure scope level global_dict local_dict resolvers	1.000000
internal format currently just the	core block internal values dtype	0.111111
return an	axes	0.043478
take the codes by the indexer	categorical take nd indexer	0.333333
return the	core indexes	0.009524
to apply we are	mixin apply	0.050000
groupby	group	0.027027
from maps[0] raise keyerror	chain	0.031250
to scipy interpolate	interpolate scipy	0.250000
return	as of merge get	0.500000
datetime64 block with a tz	datetime	0.006711
times to midnight	indexes datetime index	0.007634
this if you	indexes index set value arr key	0.023810
levels names etc' nentries - number of entries	nentries nlevels prefix names	0.100000
series to	series	0.013514
string if it was a pathlib path	io stringify path filepath_or_buffer	0.142857
create	ndframe create indexer	0.500000
after a	core series array wrap result	0.100000
ndarray	indexes index set value	0.023810
row elements from the	io	0.003012
csv file	core data frame from csv cls	0.066667
arr dtype	arr	0.013699
install the	method converter	0.200000
return the number	multi index	0.020000
add in the datetimelike methods (as	indexes datetime index ops mixin add datetimelike methods	0.333333
must already exist and	key	0.005051
type t or tuple of types	computation is type t	0.083333
index with custombusinessday as the default	indexes cdate range start end	0.083333
a string raise a	string cls string	0.125000
reflecting the structure of a	setup	0.090909
given delimiter string starting at	rsplit arr pat	0.037037
queryables	queryables	1.000000
subset rows or columns of	filter items like regex axis	0.166667
a rolling grouper providing rolling	core group by rolling	0.333333
take a string-like that is object	io convert string array	0.038462
table as a dataframe the levels in	table data values	0.200000
object o and return packed bytes	io msgpack packb o	0.055556
to read from a url file or string	read obj	0.058824
with the fill_value	allow_fill fill_value	0.250000
return a summarized representation	index ops mixin summary name	0.333333
the	plotting	0.333333
returns an index containing unique	indexes index get unique index dropna	0.500000
of elements	size	0.041667
multiindex	core indexes multi	0.115942
sparsearray only the actual sparse	sparse sparse	0.034483
apply we	mixin apply func name	0.050000
group	group by	0.064516
a 1d array return an	vals	0.090909
called	core indexes period	0.032258
to	cls	0.101695
necessary for making this object picklable	indexes index setstate state	0.333333
lookup	indexes	0.004651
returns value occupying requested label default to	get label default	0.083333
to a sql database	database to sql	1.000000
strides	strides	0.750000
a dict of the kinds allowable columns for	io table queryables	0.055556
timeseries to specified frequency	asfreq freq method	0.250000
dtype	core dtypes infer dtype	0.333333
the number	core indexes range index	0.021277
to table	format	0.012346
spreadsheet-style pivot table as a dataframe	core reshape pivot table data	0.166667
is valid	core select n is valid dtype	0.500000
decorator to deprecate a keyword argument of a	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
comparison operations to convert timedelta-like	core indexes td	0.055556
file node must already exist and be table	key value	0.011628
omitted where alternately any	how thresh subset	0.250000
apply the	tseries semi month offset apply index days	0.500000
table this is generally only useful to	select column key column	0.142857
given an interval or intervalindex return	core indexes get	0.125000
array or dtype	dtype	0.010989
shift the time index using the index's frequency	core ndframe tshift periods freq axis	0.066667
via the 'numpy' library	with convert convert	0.055556
validate on	core rolling validate	1.000000
a timegrouper and	core resample obj kind	0.083333
a ufunc needs additional handling	indexes period index array wrap result context	0.041667
ndarray only use	indexes categorical index	0.047619
a copy of the sparsearray only the	copy	0.012821
select values between	ndframe between	0.100000
downsample	index resampler downsample how	0.200000
non-unique	target	0.083333
called after a	period index array wrap result	0.050000
dtype but could really be ints/strings	tools attempt yyyymmdd	0.333333
roll provided date forward to	tseries date	0.083333
to midnight	core indexes datetime	0.011494
this is index for series columns	ndframe	0.005025
select values at particular time of day	core ndframe at time time	0.066667
a categorical if not	categorical	0.009615
node must	append	0.012987
csv file	csv cls path sep parse_dates	0.066667
returns day hour minute second millisecond or microsecond	datetime index ops mixin resolution	0.125000
excluding	group	0.027027
must already	io hdfstore append key	0.016667
index or ndarray filled with nat which has	indexes datetime index ops mixin nat new box	1.000000
1-dimensional ndarray only	index set value arr	0.023810
a	io	0.003012
construct this type	core dtypes interval dtype construct	0.333333
return the join indexers	as of merge get join indexers	1.000000
this object	ndframe	0.005025
value from 1-dimensional ndarray	key value	0.011628
must	value format	0.016667
node must	io hdfstore	0.014493
object that	io html	0.012987
a panel-like dataframe	panel index time panels names	0.076923
set new labels	index set labels labels level	0.500000
to an ndarray copy if specified coerce	dtype copy	0.032258
of value	key value	0.011628
reshape long-format data to wide generalized inverse	reshape lreshape data groups dropna	0.500000
cast values to specified type parameters	cast types values cast_type column	1.000000
number of nanoseconds (>= 0 and	indexes timedelta index nanoseconds	0.066667
form the intersection	intersection	0.083333
the vectorized membership of x in y if	core computation in x y	0.047619
this is our asof key the 'on'	core reshape as of merge asof key	0.250000
fast lookup of	core	0.001326
of the values to be at	shape values	0.050000
with an arbitrary number of	io legacy table read where	0.333333
type is an actual dtype that	dtypes period dtype is dtype cls dtype	0.142857
the operations to the cls evaluate the	aggregate operations cls	0.142857
df index[slice 4 6 ]	core computation base expr visitor visit slice node	1.000000
of normalized locales that do not	util valid locales locales normalize	0.050000
chain	chain	0.156250
return a categorical adjusted for groupby	indexes categorical index codes for groupby sort	0.333333
float values converted	formats float array	0.055556
return a new datacol with the	name cname	0.111111
array return an array of	array vals	0.083333
construct concatenation	mgr concatenation	1.000000
read csv file (discouraged please use	frame from csv	0.066667
for a particular panel invoked by unicode df	panel unicode	0.166667
the 'numpy' library the	compat numpy validate take with convert convert args	0.055556
and return the block manager from	core sparse to manager sdf	0.052632
like to	like	0.058824
validate that we	block is	0.045455
ensure that an array-like object is	core dtypes ensure	0.200000
used to iterate over the dom	frame parser build doc	0.125000
calcurate appropriate figure size based on left and	util table plotter get cells left	0.500000
and expected error message regular expression	exc_type exc_value trace_back	0.100000
node must already exist and be table	io hdfstore	0.014493
an ndarray copy if specified	dtype copy	0.032258
new object with labels in	labels	0.038462
a dataframe equivalent to read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
gets called after a	array wrap	0.075000
values and a date_format return a string	datetime64 from values values date_format	0.250000
we need to coerce a scalar to	coerce scalar to	0.071429
this function is called via the 'numpy' library	compat numpy validate take with	0.055556
python expression as a string using various backends	eval expr parser engine truediv	0.500000
data the shifted	core ndframe slice	0.125000
set new labels on	index set labels labels	0.500000
compute standard deviation	std ddof	0.166667
called after a	core series	0.008000
object that can be used to	frame	0.009091
to avoid code duplication	name str_rep	1.000000
a styler	io formats styler set	0.333333
add in the datetimelike methods (as	datetime index ops mixin add datetimelike methods cls	0.333333
names on index defaults to returning new index	indexes index rename name inplace	1.000000
if	core categorical validate	0.055556
gets called after	indexes	0.009302
returns numpy array of datetime time the	datetime	0.006711
sunday use previous friday instead	tseries previous friday dt	0.250000
plot attribute	by plot	0.062500
of	columns values	0.037037
convert sql and params args to dbapi2 0	io convert params sql params	0.250000
render the built	styler render	0.142857
iter1	iter1	1.000000
or columns of	axis	0.011364
and 'kwargs' should be	method args kwargs	0.142857
numpy array of python datetime date objects	core indexes datetime index	0.007634
over the	html frame	0.014706
whether each index value is found	datetime index ops mixin isin	0.083333
error	error	0.200000
slice the info axis of obj with	core get info slice obj	0.500000
from 1-dimensional ndarray	indexes index	0.007353
each interval in the index	interval index	0.090909
node must already	io hdfstore	0.014493
sub-classes to define	series gotitem key ndim subset	0.333333
that can be used to	io html frame parser	0.012195
any type that can be coerced to periods	indexes period index simple new cls	0.142857
function to get object from	func	0.011905
process of casting data from	assert safe casting cls data	0.047619
csv file (discouraged please use :func pandas read_csv	from csv	0.066667
returns true if there are any missing periods	core indexes period index is full	0.500000
nrows ncols -	dataframe nrows ncols	0.250000
periodindex	date	0.040000
the caption on a styler	formats styler set caption caption	0.333333
take which sets	core take nd arr	0.125000
array interface return my	interval index array result	0.125000
mask of index to be returned from	index b	0.041667
shade the background null_color for	io formats styler highlight null null_color	0.250000
lookup of value from 1-dimensional ndarray only	core indexes datetime index get value series	0.071429
block with a tz	datetime	0.006711
if key is a registered option	core get registered option key	0.333333
add the string-like attributes from the info_axis	core ndframe dir additions	0.166667
take the	categorical take	0.200000
compute variance	core group by var ddof	0.166667
create index with target's values (move/add/delete values	index	0.002004
accumulating data	list	0.034483
the index (so we	core at indexer convert key key is_setter	0.090909
with passed location s deleted	delete loc	0.333333
with an arbitrary number of	legacy table read where	0.333333
reverse convert a missing indexer which	convert missing indexer indexer	0.333333
only use this if	indexes index set value arr	0.023810
filled with nat which has the same	mixin nat new box	0.050000
of sparse/dense and dtype)	core	0.001326
the underlying data which is a categorical	indexes categorical index values	0.333333
of x not in y	computation not in x y	0.066667
convert timedelta-like to timedelta64	core indexes td index cmp	0.055556
or object coercible to	update other join overwrite filter_func	0.055556
the series/index	core str get	0.142857
for running code that expects to raise or	util assert produces warning expected_warning filter_level clear	0.071429
set of terms	terms	0.034483
object for datetimelike properties of the series values	timedelta properties	0.052632
needs additional handling as	core indexes period index array wrap result	0.050000
return the number of bytes in the underlying	multi index nbytes	0.052632
index with day calendar as the default	indexes	0.004651
header rows	io pop header	0.100000
offset/observance to a datetimeindex of	rule	0.050000
a fully reindex-output	data frame group by reindex output result	0.045455
block for the	block	0.008197
trim values at input threshold s	ndframe clip lower upper axis	0.333333
returns a curve with holidays	calendar holidays start end return_name	0.066667
if we opened it	io to hdf path_or_buf key value mode	0.166667
return new dataframe with labeling	core data frame	0.005917
the view limits to the nearest multiples	locator autoscale	0.055556
return_filelike	return_filelike	1.000000
for series	comp method series	0.333333
union of two index objects and sorts if	range index union other	0.083333
i : int slice or	core data frame ixs i axis	0.200000
called via the 'numpy' library	take with convert convert	0.055556
add in comparison methods	index add comparison methods cls	1.000000
applies a moving window of	core window apply window	0.166667
rewrite	core computation rewrite assign	0.125000
1-dimensional ndarray only	arr key	0.023810
that can be	frame parser build	0.014706
return the number	indexes range	0.062500
can	frame parser	0.012500
backward fill the values	core group by backfill limit	0.250000
evaluate a binary	evaluate	0.111111
return a uint64 ndarray of my hashed values	index hashed values	0.166667
append to	append key value format append	0.125000
series corresponding to requested indices	series take indices axis convert is_copy	0.500000
sort multiindex	core indexes multi	0.014493
i am never a	categorical block is	0.100000
normalized locales that do	util valid locales locales	0.050000
to construct this type from a	core dtypes interval dtype construct from string	0.166667
a list of columns as	columns	0.017857
read csv file (discouraged	series from csv cls path sep	0.066667
have	validate ordered	0.055556
trim	trim	0.833333
dropna if fill_value=nan	dropna axis	0.083333
compatiable fill_value and arr dtype then fill	dtypes maybe fill arr fill_value	0.333333
a 1d array of	intervals cls data name	0.250000
fletcher32	fletcher32	1.000000
background null_color	null_color	0.076923
axes	axes axis	1.000000
to convert timedelta-like	td index cmp	0.055556
creating a subclass of styler with a	io formats styler from	0.076923
and params args to dbapi2	params	0.058824
make sure an expression is not	core computation check expression expr	0.200000
make sure an expression is	computation check expression expr	0.200000
array and create the manager	array to mgr data index columns dtype	1.000000
a new unit	new cls unit	0.055556
index	util assert index	1.000000
called via the 'numpy' library the	take with convert	0.055556
boolean list indicated if we have mixed levels	indexes multi index have mixed levels	0.200000
axis omitted where alternately any or all	dropna axis how thresh subset	0.100000
of	categorical	0.019231
all the locales that	locales	0.090909
the number of bytes in the	index nbytes deep	0.052632
boolean criterion specified by func	by filter func dropna	0.250000
our native types format slicing if desired	native types slicer na_rep date_format quoting	0.200000
series or by	groupby by axis level	0.045455
convert to our native types format slicing if	float block to native types	0.250000
the values using _write_array	io wormtable	1.000000
of sparse/dense and	ndframe	0.005025
string in the series extract groups from the	extract frame	0.047619
if 'series argmin'	skipna skipna args kwargs	0.100000
a list of tuples of the (attr formatted_value)	datetime index ops mixin format attrs	0.142857
if we are	is	0.010582
with an array or dtype	dtype	0.010989
synonym for	core ndframe	0.005051
the union of	multi index union	0.333333
tree-like object that can be used to	html frame parser	0.012658
return the correct pandassql subclass	io pandas sql builder con flavor schema meta	0.055556
a concise listing of available options grouped	pp options list keys width _print	0.111111
backward fill	core group by backfill limit	0.250000
additional handling as	indexes	0.004651
set	index set	0.022727
fast path for	manager fast	0.250000
right	right strict_nan	1.000000
bytes	packb	0.022727
of axis dimensions	core ndframe shape	0.200000
ufunc needs	core indexes period index array wrap result context	0.041667
frame table	multi series table	0.200000
exist and	append	0.012987
return the node with the	hdfstore get node	0.166667
indexer input array to the smallest dtype	indexer dtype indexer categories	0.333333
converts a style_dict to an openpyxl style object	convert to style cls style_dict	0.166667
types to stata types returns the	to stata type	0.142857
check if we're running in an interactive	in interactive	1.000000
csv file	from csv cls path header sep	0.066667
possibility	array	0.013889
over	io html frame parser	0.012195
return	array get	0.500000
object that	parser	0.008000
dta files from array-like objects parameters	convert_dates write_index encoding	0.500000
of the stata date formats to	convert datetime to stata	0.111111
frequency timedelta	timedelta	0.022222
context manager for temporarily setting a timezone	util set timezone tz	0.142857
interpolate values according	interpolate method axis limit	0.166667
feather-format for dataframes	core data frame to feather	0.333333
string-like that is object dtype and	convert string array	0.038462
detect terminal size	get terminal size	0.166667
an openpyxl style	style cls	0.250000
according to indexer and return them as a	indexer axis	0.043478
labels in requested axis removed	ndframe drop labels axis level	0.250000
block	sparse block	0.250000
parameter if	core	0.001326
to	io dtype to	1.000000
index in each level the function returns lengths	io formats get level lengths levels sentinel	0.166667
add the operations to the cls evaluate the	panel add aggregate operations cls use_numexpr	0.500000
trims zeros leaving just one before the	io formats trim zeros str_floats na_rep	0.500000
determines if two index	index equals other	0.200000
dataframe to a	io formats data frame formatter to	0.083333
holidays between start_date and end_date parameters	holiday calendar holidays	0.166667
return a ndarray	core index	0.111111
we if the passed type is an	core dtypes interval dtype is	0.066667
starting at the end of the string and	rsplit arr pat	0.037037
1-dimensional ndarray only use this if	indexes index set value	0.023810
locator	date locator get locator	0.062500
called	index array wrap result	0.066667
of the values to	shape values ndim	0.050000
a ndarray like	json	0.100000
cumulative sum of non-na/null values	core sparse sparse array cumsum axis	1.000000
the list of row elements from the	io html frame	0.012987
fast transform path for	core ndframe group by transform fast result	0.333333
the built up	formats styler	0.021739
dictionary for the passed	core ndframe construct axes dict from	0.250000
used to	html frame parser build	0.014706
styles to	io	0.003012
index with custombusinessday as	core indexes cdate range start end	0.083333
parse specified sheet s into a dataframe equivalent	excel file parse	0.125000
return the	core indexes range index	0.021277
this only if the process of casting	assert safe casting	0.125000
manager for running code that expects	util assert produces warning expected_warning filter_level clear	0.071429
expanding count of number of non-nan	expanding count	0.200000
compute a simple	core reshape crosstab index columns values	0.066667
for running code that expects to raise	util assert produces warning expected_warning	0.071429
with times to midnight length is	indexes datetime index	0.007634
on saturday use following monday instead	tseries next monday	0.250000
values to	shape values ndim	0.050000
node must already exist and	io	0.003012
times	datetime index	0.007042
passed type is an actual dtype that we	core dtypes period dtype is dtype cls dtype	0.142857
provides a resample	timedelta index resampler	0.066667
data are missing	data frame dropna	0.333333
read csv file (discouraged	series from csv	0.066667
converts json lists to line delimited	to line delimits s	0.166667
python 3 compatability shim	value label encode s	1.000000
update index attributes e g freq depending on	core indexes index maybe update attributes attrs	0.200000
accessor object for datetimelike properties of	period properties	0.052632
to class	cls name	0.125000
take the codes by the indexer fill with	take nd indexer	0.090909
two indices overlap add suffixes to overlapping entries	items overlap with suffix left lsuffix right rsuffix	0.333333
a new multiindex	core indexes multi index	0.013158
the expected nrows	table nrows expected	0.142857
html tables into a list	html io match flavor header	0.166667
a fixed frequency intervalindex	indexes interval range start end freq periods	0.333333
format my	core indexes index format	0.500000
new categorical by	core categorical sort values	0.166667
to construct this type from	dtypes interval dtype construct from string cls	0.166667
minimum value of	core index ops mixin min	0.125000
nsmallest	nsmallest	1.000000
of the values to be at least	values ndim	0.050000
1-dimensional ndarray only use this	indexes	0.004651
to accelerate unioning a collection of	core indexes datetime index union many others	0.040000
o and return packed bytes see :class packer	msgpack packb o	0.055556
a float dtype if	float	0.024390
context manager for temporarily setting a	new_locale lc_var	0.125000
excluding elements from groups that do not satisfy	group	0.027027
the cached item item represents a	item cache item	0.125000
values from passed panel or object coercible to	join overwrite filter_func	0.076923
handles preprocessing for cut where we convert passed	core reshape preprocess for cut	0.200000
we are index sliceable then return	core convert to index sliceable obj	0.083333
columns of	index columns	0.028571
type t or tuple of	computation is type t	0.083333
add in	index ops mixin add	0.333333
indicating whether the file is open	io hdfstore is open	0.250000
delegatedclass of a series that is datetimelike	datetimelike data	0.111111
and	map	0.029412
index	index maybe	1.000000
operations to the cls evaluate the	operations cls use_numexpr	0.142857
that each has a homogeneous dtype	ndframe as blocks copy	0.142857
etc' nentries - number of entries	nentries nlevels prefix	0.250000
apply the given offset/observance to	apply rule	0.200000
any nan is taken	ndframe asof where	0.166667
an positional indexer cannot enlarge its target	valid positional setitem indexer indexer	0.052632
with nat which has the same	mixin nat new	0.050000
external	external	1.000000
bins to	bins	0.090909
the	parser	0.008000
already exist and be	value format	0.016667
that can be used to	parser build	0.014706
and a result set coerce the	core dtypes coerce	0.066667
expectedrows	expectedrows	1.000000
concatenation of an datetimelike array	concat datetime	0.125000
in a block	block make block	0.100000
as the original	ndframe	0.005025
the built up styles	formats styler	0.021739
file node must already exist and	key	0.005051
this	reshape	0.037037
fast lookup of value from 1-dimensional ndarray only	indexes period index get value series	0.071429
and return the op	op	0.045455
requested level the result will respect the	index sortlevel level ascending sort_remaining	0.200000
sparsifying is not supported for panel objects and	core panel to	0.027027
for the diff of	diff n axis mgr	0.111111
that can safely be cast to	name val min_val	0.083333
a manipulation result has the	core ndframe constructor	0.055556
given an interval or intervalindex return the	get	0.007143
kinds allowable columns	io table queryables	0.055556
uint64 ndarray of my hashed values	core indexes multi index hashed values	0.166667
class for writing stata	stata	0.022222
convert datetime-like	dt index cmp opname nat_result	0.066667
of ndframe as opposed	core ndframe to	0.040000
an item pair from maps[0]	chain map popitem	0.055556
to convert timedelta-like to timedelta64	indexes td	0.055556
for	method	0.133333
'series argmin' is called via the 'numpy' library	numpy validate argmin with skipna skipna	1.000000
non-public method*	embed keep_tz	0.500000
of row elements from the parsed table element	io html frame parser parse tr table	0.200000
a multi-index suitable for a panel-like dataframe parameters	time panels names	0.076923
json	json convert	1.000000
row cross-section from	xs key axis	0.333333
values at particular time of day e g	ndframe at time time asof	0.066667
to coerce any object types to	object block convert	0.083333
schema attribut with the table schema resets the	io	0.003012
a valid ordered	cls ordered	0.058824
can be used to iterate	io	0.003012
remove and return an item pair	compat chain map popitem	0.055556
series extract groups from the	core str extract frame	0.047619
take the codes by the	take	0.030303
be used to iterate	html	0.011765
sort multiindex at the	indexes multi	0.014493
attribute if it has one	core	0.001326
if arg is a string then try to	mixin try aggregate string function arg	1.000000
require	simple new cls	0.250000
in logical methods	logical methods	1.000000
as	core	0.002653
a term or a list of term	term	0.083333
we have bytes decode them	io ensure decoded s	0.166667
removals	removals	1.000000
fixed frequency datetime index with business day	core indexes bdate range start end periods	0.083333
for a panel-like dataframe parameters	index time panels names	0.076923
header rows in	header name	0.100000
the underlying data	core indexes	0.009524
comparison operations to convert timedelta-like	indexes td	0.055556
a singular 'name' parameter for general index and	core indexes index validate names name	0.066667
of the kinds allowable columns for	io table queryables	0.055556
are available on the	prefix normalize locale_getter	0.166667
a list of normalized locales	locales locales normalize	0.200000
the totally ordered cartesian product of all	group index labels shape sort xnull	0.066667
an object with matching indices to myself	ndframe reindex like other method copy limit	0.111111
expanding	expanding	0.875000
with the table schema resets the index	io json	0.062500
the actual ne format	core computation condition bin op format	0.333333
datetimeindex from one time zone to another (using	core indexes datetime index	0.007634
bounds	bounds	0.875000
merge this is	core reshape merge	0.166667
over the blocks collect and	consolidate transposed	0.062500
caption	caption	1.000000
necessary for	array	0.013889
create and return a basegrouper which	get	0.007143
forward to the array	core sparse sparse series iter	0.250000
into a	io json parser	0.071429
decorator to run	num_threads kwargs_list	0.050000
return	io msgpack packb	0.025641
of unique elements in the object	ops mixin nunique dropna	0.083333
repr should show the info view	data frame info repr	0.333333
to construct this type from a string raise	interval dtype construct from string cls string	0.166667
with	core indexes	0.004762
a	core reshape crosstab	0.066667
set my pandas type &	fixed set object	0.200000
url has a valid protocol	url url	0.045455
function to determine	n method	0.125000
given an interval	core indexes get	0.125000
google bigquery	gbq query project_id index_col col_order	0.250000
necessary for making this object picklable	timedelta index setstate state	0.333333
is	parser	0.008000
return the corresponding interval with closed bounds	interval closed bounds interval	0.200000
and 'kwargs' should be empty	resampler func method args kwargs	0.142857
1-dimensional ndarray only use this	indexes index set value arr	0.023810
index to be returned from	index b	0.041667
that we have a	categorical validate	0.055556
the float values converted into	float array formatter get result as	0.055556
my	interval index	0.090909
datetimeindex with times to midnight length	core	0.001326
via the 'numpy' library the third	with convert convert args	0.055556
attributes e g freq depending	attributes	0.115385
the float values converted into strings using	float array	0.055556
return the underlying data which is a categorical	categorical index	0.045455
and are not a floating index	core indexes index maybe cast indexer	0.200000
fillna but using the interpolate machinery	core block interpolate with fill method axis	0.200000
bytes	io msgpack packb	0.025641
wrapper function for	bool method	0.333333
at particular time of day e g	at time time	0.066667
read csv file	data frame from csv cls path	0.066667
return a string representation for a particular object	string mixin repr	0.333333
a multi-index suitable for a panel-like dataframe parameters	core panel index time panels names	0.076923
group_index is	group_index	0.166667
resampling when using a timegrouper	core group by resample rule	0.166667
new manager with the blocks	core block manager combine blocks	0.250000
cross-tabulation of	reshape crosstab index	0.066667
provides a resample of a	period index resampler	0.062500
a figure with a set of subplots	plotting subplots	0.125000
a particular	extension dtype repr	0.142857
deal with nat-like arg	arg errors	0.026316
sql statement that create a table	table create table	0.166667
fixed frequency datetime	range start end	0.066667
columns for dataframe and major_axis	core ndframe	0.005051
falls on saturday use following monday instead	next monday	0.250000
bind a method to class python 2	bind method cls name func	0.200000
convert to object if we are a categorical	core indexes multi index to safe for reshape	0.333333
the float	formats float array formatter get result as array	0.055556
the union of two index objects and	indexes range index union other	0.083333
in the series/index ends with passed pattern	core str endswith arr pat na	0.333333
and 'kwargs' should be empty	method args kwargs	0.142857
supported	supported	1.000000
a multiindex from the cartesian product of	core indexes multi index from product	0.166667
a new unit if needed	datetime tzdtype new cls unit tz	0.055556
return the formatted data as a	core indexes index formatter func	0.083333
tr	tr	1.000000
path's extension against the	writer check extension cls	0.125000
with the	core	0.001326
null values	values	0.008547
interpolate values according to different methods	resampler interpolate method axis	0.166667
additional handling as	period index array wrap result	0.050000
list replace	replace list	0.500000
guess	guess	0.857143
this column	io index col	0.055556
file node must already	key value format	0.016667
only	indexes	0.004651
a dataframe	frame	0.018182
data (produce a "pivot" table) based on column	core data frame pivot index columns	0.200000
add in numeric methods	indexes index add numeric methods binary cls	1.000000
convert timedelta-like to	core indexes td	0.055556
filled with nat which has	mixin nat new box	0.050000
key for valid keys across my indexer	indexer has valid tuple key	0.500000
positional indexer cannot	positional setitem indexer indexer	0.052632
to coerce a scalar to a compat for	coerce scalar to	0.071429
apply for	apply func	0.027027
style_dict to an openpyxl style	to style cls style_dict	0.166667
gets called after a ufunc needs additional	wrap result context	0.029412
lookup of value from 1-dimensional ndarray only	categorical index get value series	0.100000
context manager for running code that expects	util assert produces warning expected_warning filter_level clear	0.071429
for	array	0.013889
a	core series array wrap	0.100000
to table in file node	key	0.005051
value from 1-dimensional ndarray only use this if	period index get value series key	0.071429
a set of kwargs suitable for initializing	kwargs	0.022222
require	index simple new cls	0.090909
the datetime format of a given datetime string	datetime format dt_str dayfirst dt_str_parse	0.250000
rows	reader get rows	0.500000
fast lookup of value from 1-dimensional ndarray only	set value arr key value	0.038462
is a term or a list	scope_level	0.083333
to_match	to_match	1.000000
return a formatter	formats get	0.090909
exist	value format	0.016667
to parse a ndarray like	convert data	0.200000
make sure an expression is not an	computation check expression expr	0.200000
whether each index value is found	core indexes datetime index ops mixin isin values	0.083333
to apply	mixin apply	0.050000
values attribute if it	series	0.006757
in	io	0.003012
ndarray	index columns dtype	0.125000
detect terminal size and return	util get terminal size	0.166667
parse the raw data into a list	frame parser parse raw data rows	0.250000
wrap comparison operations to convert datetime-like to	period index cmp opname nat_result	0.066667
take values according to indexer	take nd indexer axis	0.250000
the op string for	core computation bin op generate	0.066667
offset	offset	0.388889
of nanoseconds (>= 0	timedelta index nanoseconds	0.066667
you	indexes index set value arr key	0.023810
value from	value	0.005155
applies the put method to its values	core series put	0.055556
create the description	create description complib complevel	1.000000
to support a unified inteface datetimelike index	datetime index	0.007042
wide panel to	wide to	1.000000
tree-like object that can	frame parser build	0.014706
at the given quantile a	series quantile	0.083333
stringified and numeric for these values	na values na_values	0.333333
of value from 1-dimensional ndarray only use	indexes datetime index get value series key	0.071429
index objects contain the same elements	indexes	0.004651
assemble the	tools assemble	0.500000
axis omitted where alternately any or all of	dropna axis how thresh subset	0.100000
table reflecting the structure of a	table setup	0.083333
that time and	time	0.052632
more this is index for series columns	core ndframe	0.005051
sparsifying is not supported for panel objects and	panel to	0.027027
only use this if	arr	0.013699
need to coerce a scalar to a compat	period index coerce scalar to	0.071429
a style_dict	cls style_dict	0.500000
default values as specified	for default values fname	0.200000
change string like dtypes to	invalidate string dtypes dtype_set	0.200000
return a tree-like object	html frame parser build	0.014706
the interpolate machinery	block interpolate with fill method	0.200000
a list	list	0.034483
new unit if needed otherwise	core dtypes datetime tzdtype new cls unit tz	0.055556
a	columns values	0.037037
for this key	key	0.005051
column	column	0.333333
dataframe in panel to	core panel to	0.027027
the time index using the index's frequency	core ndframe tshift periods freq	0.066667
lookup of value from 1-dimensional ndarray only	period index get value series key	0.071429
this getitem defers to the underlying array which	datetime index ops mixin getitem key	0.333333
to ndarray raises on scalar data converts	core indexes index coerce to ndarray cls data	0.166667
append to table in file node must already	append key value format append	0.125000
a scipy	a	0.055556
in both py2/py3	core dtypes extension dtype	0.333333
to coerce a scalar	index coerce scalar	0.250000
apply we are stripping all of	apply	0.026316
length of a single non-tuple indexer which	length of indexer indexer target	0.500000
guaranteed return of an	core indexes index	0.007042
simple	reshape	0.037037
a python expression	core computation eval expr	0.083333
create index with	multi index	0.020000
we need to coerce	coerce	0.025641
update index attributes e g freq depending on	core indexes timedelta index maybe update attributes attrs	0.200000
of value from 1-dimensional ndarray only	datetime index get value series key	0.071429
file node must	io hdfstore append key value	0.016667
refer to numpy ndarray	repeats	0.090909
a boolean list indicated if we have	index have	0.142857
1-dimensional ndarray	index set value arr	0.023810
the view limits to the nearest multiples of	date locator autoscale	0.055556
to its values attribute if	core	0.001326
of lists	matrix	0.076923
add in the numeric add/sub methods	index add numeric methods add	1.000000
color background in a range according	formats styler background gradient s cmap low high	0.142857
is	indexes	0.009302
a function	func	0.047619
check if we are a view	core ndframe check is	0.200000
fixed frequency datetime index with business day as	core indexes bdate range start end	0.083333
on type and coerce into matrices	arrays to mgr arrays arr_names index columns	0.250000
apply mapper function	categorical map mapper	0.166667
swap level	multi index swaplevel	1.000000
return number of unique elements in the	index ops mixin nunique dropna	0.083333
casting data from some accepted dtype	numeric index assert safe casting cls data	0.047619
called after	series	0.006757
that left and right dataframe are equal	util assert frame equal left right	0.333333
expanding count of number	expanding count arg	0.200000
read csv file (discouraged please use :func pandas	core data frame from csv cls path	0.066667
compat with multiindex	sort levels monotonic	0.333333
values & release the memory	index col take data	0.111111
t or tuple of	t	0.125000
only	core indexes index	0.007042
a decorator to take	args decorator	0.111111
unpickle	unpickle	1.000000
a new block	core sparse block	0.250000
that can be coerced to	indexes period index simple new cls	0.142857
iterate over	html frame parser	0.012658
a nice str repr of our rolling object	core resampler unicode	0.500000
of type window_type and size window on the	arg window win_type	0.100000
the where condition cond on a and	core computation where cond	0.111111
removed	drop	0.166667
missing	core convert from missing	0.500000
making this object picklable	core indexes multi index reduce	0.333333
table in file node	value	0.005155
of tuples of the (attr formatted_value)	datetime index ops mixin format attrs	0.142857
synonym for :meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace	0.333333
expression as	eval expr	0.083333
to convert datetime-like to datetime64	index cmp opname nat_result	0.066667
add the	add numeric	0.142857
function is called via the 'numpy' library the	with convert convert args	0.055556
return a string representation for a particular	extension dtype repr	0.142857
checks	util	0.062500
this	period index	0.024390
if categoricals are the same	equal other	0.250000
table in file node must	append key value format	0.016667
select values between particular times of	index indexer between	0.125000
statement is of the right type	w	0.090909
additional handling	period index array wrap result	0.050000
resample of a	timedelta index	0.045455
take a string-like that is	convert string array data encoding	0.038462
coerce a scalar	core indexes period index coerce scalar	0.250000
table	io appendable series table	0.200000
perform generic binary operation with optional fill	series binop other func level fill_value	0.500000
the stata date formats to a type in	datetime to stata type	0.200000
function to determine if dtype is valid for	n is valid dtype n method dtype	0.142857
reverse convert a missing indexer which	core convert missing indexer indexer	0.333333
object coercible to	update other join overwrite filter_func	0.055556
valid other	numeric binop other op	0.500000
return the dtype str of the underlying data	core indexes index dtype str	0.333333
of value	value	0.005155
the underlying data which is a categorical	categorical index	0.045455
unit if needed otherwise	unit tz	0.125000
alias for is_monotonic_increasing deprecated	core indexes index is monotonic	0.200000
this	io index col read	0.250000
meta data array for	table read metadata	0.500000
frequency datetime index with custombusinessday as	indexes cdate range start	0.083333
scope by	computation scope	0.166667
at particular time of day e g	core ndframe at time time asof	0.066667
not supported for panel objects and	core panel	0.019231
infer better dtype	ndframe convert datetime numeric timedelta coerce	0.071429
data from	cls data	0.076923
manager for running code that expects to raise	util assert produces warning expected_warning filter_level	0.071429
lookup of	value arr key	0.023810
create an op	core computation op	0.166667
convert_numeric	convert_numeric	1.000000
return a string format	format	0.012346
each index	core indexes datetime index	0.007634
indices where elements of v	core indexes frozen ndarray searchsorted v	0.033333
**experimental** dateoffset of one custom business month	custom business month end	0.200000
string in the series/index by indicated	core str repeat	0.045455
validate on is monotonic	core rolling validate monotonic	1.000000
dense_index	dense_index	1.000000
a boolean if the passed type is	extension dtype is	0.125000
of the values set with the	core	0.001326
cartesian product of all possible label	labels shape sort	0.200000
use this if you	value arr	0.023810
curve with holidays between start_date and	abstract holiday calendar holidays start end return_name	0.066667
is a term or a list of	scope_level	0.083333
value from 1-dimensional ndarray only use	core indexes period index get value series key	0.071429
indexer and return them as a	indexer	0.018349
evaluate the block return result block	block eval	0.333333
if we can	can	0.111111
raise	chain	0.031250
binners	set binner	0.333333
the axes!	core data frame reindex multi axes copy fill_value	1.000000
compute a	index columns	0.028571
of x in y if possible otherwise use	in x y	0.047619
take the codes by the indexer fill	core categorical take nd indexer allow_fill	0.333333
the actual sparse values need	sparse sparse array	0.043478
return an indexer for a target	index get reindexer target	1.000000
an intervalindex from a 1d array of	from intervals	0.125000
series extract groups from the	core str extract	0.035714
values along a given axis	values axis method na_option	1.000000
the bool of a single element	ndframe bool	0.055556
keeps track of whether numexpr was used	core computation set test mode v	0.142857
be	key value format	0.016667
called after	core indexes period index array	0.050000
all of the data are	core data frame dropna	0.083333
the given quantile	core series quantile	0.083333
values at	ndframe at	0.333333
value from 1-dimensional ndarray only use this	categorical index get value series key	0.100000
from 1-dimensional ndarray only use	indexes index	0.007353
manipulation result has the same	constructor	0.040000
a string cast it to	cast	0.058824
construct dataframe from dict of array-like or	data frame from dict cls data orient dtype	0.200000
a bool if we have only bool values	core object block is bool	0.166667
return the block manager from a dataframe of	sparse to manager sdf columns	0.052632
convert to our native types format	to native types slicer	0.250000
to get lines 0) there are headers	io python parser get index name columns	0.166667
simple	reshape crosstab index columns	0.066667
rule name associated with a dateoffset object	get offset name offset	0.500000
frequency datetime index with custombusinessday as the	indexes cdate range start	0.083333
appropriate class of series	get series result type result	0.250000
table in file node must already exist and	value format	0.016667
3 5 the starargs attribute was changed	base expr visitor visit call 35 node side	0.066667
we require the	core indexes datetime index simple new cls	0.250000
replace extra whitespace inside of a string	io remove whitespace s regex	0.200000
same dimensions as	ndframe	0.005025
to connect to	connect	0.071429
return new dataframe	data frame	0.005714
gets called after a ufunc needs	array wrap result context	0.029412
generate bin edge	generate	0.062500
and be table	format	0.012346
sanitize input data to an ndarray	core sanitize array data	0.250000
apply	holiday apply	0.333333
the put method to its values	series put	0.055556
can be used to iterate over the	html frame parser	0.012658
a style_dict to an xlwt style	io xlwt writer convert to style cls style_dict	0.250000
that can be	html frame parser	0.012658
ndarray of the flattened values of the	ravel order	0.037037
csv file (discouraged please use :func pandas read_csv	series from csv cls path sep parse_dates	0.066667
my values return a block if we	core block	0.010870
compute the symmetric difference of two index	core indexes index symmetric difference other result_name	0.166667
i : int slice or sequence	core data frame ixs i	0.200000
gets called after a	array wrap result	0.075000
or by a series of columns	core ndframe groupby by axis	0.333333
bool of	bool	0.043478
run the same function multiple times in	num_threads kwargs_list	0.050000
already exist	io	0.003012
we have a	validate	0.027778
with a	datetime	0.006711
sets the locations	locs locs	0.333333
the union of two index	indexes range index union other	0.083333
excluding elements	group	0.027027
starargs attribute was changed to be	base expr visitor visit call 35 node side	0.066667
a dataframe	sparse data frame	0.181818
excluding elements from groups	group	0.027027
backward fill the values parameters	core group by backfill limit	0.250000
take	array take	1.000000
accelerate unioning a collection	union many others	0.040000
after regular attribute access try looking up the	core ndframe getattr	0.500000
am never a	core	0.001326
the :meth pandas dataframe reset_index function see	reset index level drop name inplace	0.142857
multiindex at the requested level	core indexes multi index sortlevel level	0.250000
an intervalindex from a 1d array of interval	interval index from intervals cls data name copy	0.333333
called via the 'numpy' library the third	validate take with convert convert args	0.055556
to deal with nat-like arg is a passed	arg	0.018868
sub-classes	gotitem key ndim subset	0.333333
return the size	itemsize	0.027027
series extract groups from	str extract arr	0.066667
called after	series array wrap result	0.100000
returns the float	formats float	0.055556
return values for selected item ndarray or blockmanager	core block manager get item fastpath	1.000000
apply the given offset/observance	apply rule	0.200000
validate that we	core block is	0.090909
allows a decorator to take optional	util optional args decorator	0.083333
return a slice	datetime tzblock slice slicer	0.083333
from a dataframe column	from	0.030303
a frame table	appendable multi series table	0.200000
length of that group - 1	group by cumcount ascending	0.166667
return the number of bytes in the	index nbytes deep	0.052632
to a scipy	to	0.006329
out ast	all_nodes	0.166667
alert a user	parser alert	0.200000
object	dtypes	0.253968
style_dict to an xlwt style	io xlwt writer convert to style cls style_dict	0.250000
we might need to coerce	tseries maybe coerce freq	0.125000
return dtype and n/a values to	get empty dtype and	0.125000
true if the key is in the	ndframe contains key	0.333333
return a boolean whether i can attempt conversion	is convertible	0.333333
true if this	is in table	0.076923
the totally ordered cartesian product of all	core get group index labels shape sort xnull	0.066667
mapper	mapper	1.000000
'info axis' see indexing	ndframe keys	0.083333
provided date forward to	tseries date	0.083333
can be used to iterate over	build	0.013514
function to my values return a	func	0.011905
mode s	core series mode	0.083333
check if we are a view	ndframe check is	0.200000
values to specified type parameters	values cast_type column	1.000000
defined as	view cls	0.047619
plot attribute for groupby objects	by plot	0.062500
a fixed frequency datetime index	indexes bdate range start	0.083333
the cached item item represents a positional	core ndframe iget item cache item	0.090909
integer-location based indexing	i	0.041667
shift categorical by desired number of	core categorical shift	0.500000
a timezone	timezone tz	0.142857
:mod datetime to the	dt to	0.125000
by definition have a	formats datetime64tzformatter format strings	0.166667
valid other	binop other op	0.500000
helper to call encode before writing to file	io stata writer write to_write	0.083333
returns the float values converted into strings	formats float array formatter get result as	0.055556
value from 1-dimensional ndarray only use	core indexes categorical index get value	0.100000
csv file (discouraged please use	series from csv cls	0.066667
for the nan/nat from the	val	0.058824
cross-tabulation	core reshape crosstab index	0.066667
return a tree-like object that can	frame	0.009091
the dataframe's series using matplotlib / pylab	by grid	0.200000
ordered multiindex compute the slice	core indexes multi index slice	0.250000
format of	format dt_str dayfirst dt_str_parse	0.250000
going to write this as a frame	write obj	0.041667
from ndarray	index	0.002004
error in a future release	categorical reshape new_shape	0.142857
read csv file (discouraged please use :func	from csv cls	0.066667
dtype	infer dtype	0.333333
1-dimensional ndarray only use this	core indexes index set value arr key	0.023810
we have a valid ordered parameter if	cls ordered	0.058824
return the	core get	0.038462
data to ndarray raises on	coerce to ndarray	0.166667
columns of this	columns	0.017857
force non-datetime columns to	io parse date columns data_frame parse_dates	0.166667
index and its underlying	core indexes range index	0.021277
elements of arr1 and arr2	contents arr1 arr2	0.066667
of the (attr formatted_value)	index format attrs	0.142857
general index	core indexes index validate names name	0.066667
that 'np ndarray' is equivalent	assert numpy array equal left right strict_nan check_dtype	0.500000
obj with indexer	obj indexer	0.500000
1-dimensional ndarray only use	core	0.001326
we want to set	set	0.012195
frequency freq	freq	0.016129
a multirow	formatter format multirow	0.250000
block and are a	core block manager	0.022727
of value from 1-dimensional ndarray	core indexes index set value arr key value	0.038462
true if	is in	0.076923
add in the datetimelike methods (as	datetime index ops mixin add datetimelike methods	0.333333
index objects contain the	index	0.004008
a dataframe to a	data frame	0.005714
this is index	core	0.001326
is	n is	1.000000
the built up styles to html	io formats styler	0.021277
condition	condition	1.000000
a sparseseries	a dense_index	0.250000
warning will be produced using	rkey removal_ver	0.500000
return a fixed frequency datetime index with	core indexes period range start end periods freq	0.083333
a datetimelike dtype converting float	datetime value dtype	0.166667
of	axis mgr	0.200000
see :class packer for	io	0.003012
interpolate values according to different methods	interpolate method axis	0.166667
post process for each axes overridden	mplplot post plot logic ax data	0.333333
convert the periodindex to the	core indexes period index	0.034483
method name lookup and completion	pandas object dir	0.166667
new unit if needed	dtypes datetime tzdtype new cls unit tz	0.055556
using input	mapper axis copy inplace	0.055556
array of whether each index value is found	indexes datetime index ops mixin isin	0.083333
the decimal points if need be	io	0.003012
ticks	time series date	1.000000
dataframe with labeling information in the columns	data frame reset	0.027778
identity	identity	1.000000
our native types	native types slicer na_rep float_format decimal	0.200000
validates that we have	validate ordered	0.055556
accessor	timedelta	0.022222
our native types format slicing if	native types slicer na_rep	0.200000
name in a possibly local context	key is_local	0.166667
the symmetric difference of two	symmetric difference other result_name	0.333333
a safe version of putmask	putmask	0.055556
a new unit if needed otherwise	new cls unit tz	0.055556
we	categorical validate	0.055556
pairwise correlation	frame corr method min_periods	0.500000
convert timedelta-like	core indexes td	0.055556
into	frame parser	0.012500
datetime/time/timedelta	time	0.052632
series of columns	ndframe groupby	0.250000
array repr of this	indexes period index	0.035714
if	validate ordered	0.055556
of available options grouped by prefix	options	0.041667
file node must	append	0.012987
function to create an	computation	0.038462
indices that would sort the index and its	range index argsort	0.166667
the flattened values	ravel order	0.037037
needs	period index	0.024390
validates that	categorical validate ordered	0.055556
returns previous workday after nearest workday	tseries before nearest workday dt	1.000000
malformed row	malformed msg row_num	0.100000
this as a frame table	io appendable series table	0.200000
boolean indicating if self is view of another	ndframe is view	0.200000
a simple cross-tabulation of	columns	0.017857
internal method to handle na filling of take	assert take fillable values indices allow_fill fill_value	0.250000
regex pattern instance	re	0.222222
the cartesian product of	product	0.111111
for making this object picklable	core indexes timedelta index setstate state	0.333333
generate the selection	io selection select	0.500000
for series arithmetic operations to	bool method series op name	0.333333
value from 1-dimensional ndarray only	indexes index set value arr key value	0.038462
handle na filling of take	index assert take fillable values	0.250000
that time	indices time	0.125000
sort multiindex at the	core indexes multi index sortlevel	0.166667
3 columns of this	index columns values	0.037037
simple	core reshape crosstab	0.066667
interpolate values according to different	core resampler interpolate method axis	0.166667
called after a ufunc needs	wrap result context	0.029412
return a pretty representatgion	io table unicode	0.333333
encode input values as an enumerated type	factorize values sort	0.111111
sp	sp	1.000000
node	hdfstore	0.014925
a new	tzdtype new cls	0.333333
column number and its label	label	0.028571
the totally ordered cartesian product of all possible	shape sort xnull	0.066667
from a 1d array of	index from intervals cls data name	0.125000
memory	index memory	1.000000
to 'd days hh mm ss f'	plotting format timedelta ticks x pos n_decimals	0.333333
determine if each string matches a regular expression	str match arr pat case flags	1.000000
shift without copying data the shifted	ndframe slice shift periods	0.083333
values at particular time of day e	core ndframe at time time asof	0.066667
or strings in each element in the series/index	core str get arr i	0.142857
that an positional indexer cannot enlarge	positional setitem indexer indexer	0.052632
formatted data as a	indexes index formatter func	0.083333
object is dict-like	dtypes is dict like	1.000000
read csv file (discouraged please use	series from csv cls path sep	0.066667
returns the float values converted	formats float array formatter get	0.055556
a hack to accelerate unioning a collection	core indexes datetime index union many others	0.040000
boolean	core indexes is	0.166667
exponential weighted	ewm	0.250000
inplace return a new block (of a possibly	block setitem indexer	0.066667
a view of	core categorical view	0.111111
a registered option	core get registered option	0.500000
return sparsedataframe	core sparse sparse	0.034483
index using the index's frequency if available	core ndframe tshift periods freq	0.066667
the underlying	indexes range index	0.021277
is maps[0]	chain map	0.034483
class with a metaclass	add metaclass metaclass	0.125000
return my	core	0.001326
a function column-wise row-wise or table-wase updating	func axis subset	0.200000
to table in file node must	key	0.005051
common ops	ops	0.230769
if we are a datetime with tz array	dtypes is datetimetz array	1.000000
merge this is	reshape merge	0.166667
dataframe with the rows/columns switched	core sparse sparse data frame transpose	0.333333
passed a manager and a axes dict	init mgr mgr axes dtype copy	0.333333
via the 'numpy' library	compat numpy validate take with	0.055556
comparison operations to convert timedelta-like to timedelta64	core indexes td index	0.055556
removed if	droplevel	0.142857
additional handling	result	0.016393
lookup of value from	arr key value	0.038462
for series arithmetic operations	arith method op	0.333333
the series/index by the given delimiter	core str	0.011364
datetime index with custombusinessday as	indexes cdate range start end	0.083333
manager with the blocks	block manager combine blocks copy	0.250000
moving window of type window_type and size window	window arg window win_type	0.100000
tree-like object that can be used to iterate	frame	0.009091
class implementing the	group by	0.016129
in file node must already exist	hdfstore	0.014925
dtype and n/a values to	get empty dtype and	0.125000
memory usage of	core indexes range index memory usage deep	0.200000
a new unit if	core dtypes datetime tzdtype new cls unit tz	0.055556
only use this if you	core indexes	0.004762
nanoseconds (>= 0 and less than	indexes timedelta index nanoseconds	0.066667
ndarray take	sparse series take	1.000000
file node must already exist and be table	io	0.003012
the numeric add/sub	numeric	0.052632
an series	series	0.006757
produce 'pivot' table based on 3 columns	core reshape slow pivot index columns	0.500000
feather-format object from	feather	0.050000
arr to have shape new_shape, with	arr new_shape	0.142857
returns system information as a dict	util get sys info	0.333333
node must already exist and	io hdfstore append	0.016667
form the union of two index	index union other	0.037037
pivot to the	core block2d to blocknd values	0.500000
the frame should be truncated if so slices	frame formatter chk truncate	0.500000
a	core series array wrap result	0.100000
this is	core reshape	0.047619
is a string cast it to timedelta according	core indexes timedelta index maybe cast slice bound	1.000000
that writer engine supports	excel writer supported	1.000000
the flattened values of the	core indexes index ravel order	0.037037
reshape data (produce	data frame	0.005714
sanitize input data to an ndarray copy	core sanitize array data index dtype copy	0.500000
to its values attribute if	core series	0.008000
and	io hdfstore append	0.016667
interval objects	indexes interval index	0.062500
new_mgr_locs	new_mgr_locs	1.000000
return the join	core reshape merge operation get join	1.000000
gets called	core indexes	0.009524
the values	core	0.001326
ndarray	key	0.005051
swap levels i and j in a	core data frame swaplevel i j	0.333333
given a tuple of slices/lists/labels/boolean indexer	index get	0.040000
evaluate the block return result block	core block eval func other raise_on_error	0.333333
float is formatted in dataframe	float	0.024390
indexer and return them	indexer axis	0.043478
and create a new block manager	core block manager	0.022727
a	reshape crosstab index	0.066667
returns a row cross-section from	xs key axis	0.333333
a valid ordered parameter	categorical validate ordered cls ordered	0.058824
each string a la re split in	split arr	0.200000
downsample	datetime index resampler downsample	0.200000
sort multiindex at the requested level	core indexes multi index sortlevel level	0.250000
multiindex and the index has not been lexsorted	unsorted index	0.250000
index using the index's frequency if	core ndframe tshift periods freq	0.066667
an attributes dict for my	attributes dict	0.250000
casting data from	casting cls data	0.047619
a	categorical validate	0.055556
ensure that	core computation ensure	1.000000
series extract groups	str extract frame	0.047619
**experimental** dateoffset of one custom business month	custom business month begin	0.500000
datetime format of a given datetime	datetime format dt_str dayfirst	0.250000
general index and	indexes index validate names name	0.066667
the series values	timedelta	0.022222
index or ndarray filled with nat which has	datetime index ops mixin nat new	1.000000
the flattened values of	core indexes index ravel order	0.037037
comparable timezone both for pytz /	indexes datetime index timezone	0.200000
apply we are stripping all of	by mixin apply func name	0.050000
return an ndarray for our input	sparse sanitize values arr	0.200000
index objects	indexes	0.004651
method to class python	method cls name	0.076923
create a new	datetime tzdtype new	0.333333
a block if we are	core block	0.010870
curve with holidays between start_date	abstract holiday calendar holidays start end return_name	0.066667
a named tuple	named tuple	0.500000
feather-format object	read feather	0.083333
the underlying data	multi index	0.020000
use this	set value arr	0.023810
perform __getitem__-like return result	slicer new_mgr_locs	0.250000
used to iterate over the	html frame parser	0.012658
interval with closed bounds	closed bounds interval	0.200000
apply we are stripping all of	mixin apply func name	0.050000
type promotion and coercion	core dtypes maybe upcast values fill_value dtype copy	0.166667
1 0 number	number	0.100000
values according to indexer and return them	nd indexer axis	0.043478
convenience function to return the correct pandassql subclass	pandas sql builder con flavor schema meta	0.055556
values and other	args values other	0.142857
its corresponding json_table	io json as json	0.333333
exception raised	assert raises contextmanager	0.166667
blockify	blockify	1.000000
datetimeindex with times to midnight length	datetime	0.006711
add numeric operations to	core group by add numeric operations cls	0.250000
of the _upsample kwargs and	core group by mixin apply f	0.166667
bytes see :class packer	io	0.003012
reorders categories as specified in new_categories	categorical reorder categories new_categories ordered inplace	1.000000
write this as a frame table	table write	0.400000
duplicate each string in the series/index	core str	0.011364
string in the series extract groups	str extract	0.071429
yyyymmdd/%y%m%d format try to deal with nat-like arg	arg	0.018868
row cross-section from the sparsedataframe as a series	core sparse sparse data frame xs key	0.166667
only use this	core indexes categorical	0.071429
or not the 'usecols' parameter is a callable	io evaluate usecols usecols names	0.083333
sqlalchemy	io	0.003012
are a series	series	0.006757
the indexer input array to	indexer	0.009174
purely label-location based indexer for selection by	loc indexer	0.166667
the counts of ftypes	ftype counts	0.125000
this if you	index set value	0.023810
two multiindex objects sorting if	other	0.013514
return an array of	util hash array vals	0.083333
backward to next offset	rollback	0.076923
use this	set value	0.023256
fixed frequency timedelta index with day	core indexes timedelta range start end	0.083333
getitem defers to the underlying array	core indexes datetime index ops mixin getitem	0.250000
return a function to create an	core computation	0.047619
the underlying data which is a categorical	categorical index values	0.333333
float values converted into strings	formats float array formatter	0.055556
an object	to object	0.500000
membership of x in	computation in x	0.166667
running code that expects	util assert produces warning expected_warning	0.071429
tree-like object that can be used to iterate	frame parser build	0.014706
this is defined	core indexes multi index view cls	0.047619
compute	values	0.008547
skip a testcase instance if matplotlib isn't installed	util mplskip cls	0.333333
apply	core group by mixin apply	0.050000
the array interface return my values	core indexes interval index array result	0.125000
if we are index sliceable then return	convert to index sliceable	0.083333
an intervalindex from a 1d array of	index from intervals cls data name copy	0.125000
from 1-dimensional ndarray only use this	core indexes index set value	0.023810
given an interval or intervalindex return the corresponding	get	0.007143
are stripping all of the _apply kwargs	func name window center	0.058824
supported for panel objects and will raise an	core panel	0.019231
array interface return my	indexes categorical index array dtype	0.125000
of the values to be at least 1	block shape values ndim	0.050000
dispatch to apply we are stripping all	group by mixin apply func	0.050000
of self coded with categories as returned	core categorical codes for groupby sort	0.071429
from maps[0] raise keyerror is	compat	0.030303
quantile a	quantile	0.058824
csv file	frame from csv cls path	0.066667
to table in file node must already exist	append key value	0.016667
(attr formatted_value)	core indexes datetime index ops mixin format attrs	0.142857
arg is a passed in	arg	0.018868
table in	format	0.012346
timedelta-like to	td index cmp opname nat_result	0.055556
ufunc	indexes index array wrap result context	0.200000
values at particular time of	at time time	0.066667
in file node must already exist and be	hdfstore append	0.016667
fast lookup of value from 1-dimensional ndarray	indexes period index get value series	0.071429
multi	multi	0.127273
form the union of two index objects	indexes range index union other	0.083333
create a new unit if needed	core dtypes datetime tzdtype new cls unit	0.055556
a class for writing stata binary	data frame to stata fname	0.200000
a boolean whether this axes needs validation for	ndframe indexer should validate iterable axis	0.166667
return result block from the result	block	0.008197
missing indexers	core convert from missing	0.500000
take which sets	core take nd	0.125000
write each dataframe in panel	panel	0.017857
built up styles	io formats styler	0.021277
a dataframe	sparse sparse data frame	0.117647
pandas type	table type x	0.055556
be	io html frame parser build	0.014706
if we define an builtin function	selection mixin is builtin func	0.333333
to convert timedelta-like to timedelta64	core indexes td index	0.055556
date belongs to a leap	is leap	0.125000
try to	try convert to	0.333333
or not the 'usecols' parameter is a	io evaluate usecols usecols names	0.083333
parameter if	categorical	0.009615
reduction type operation	index ops mixin reduce op name	0.083333
check_panel_type	check_panel_type	1.000000
we take a string-like	string array	0.038462
the data & release	col take data	0.055556
the full scope for	computation scope full scope	0.055556
that an positional indexer cannot enlarge its target	valid positional setitem indexer indexer	0.052632
to infer better dtype for object columns	ndframe convert datetime numeric timedelta coerce	0.071429
is called upon unpickling rather than the	indexes new datetime index cls d	0.111111
: int slice	data frame ixs	0.200000
indexer like _name	cls name indexer	0.083333
column by	data	0.009709
return python date	date datestr	0.333333
return a basegrouper which is an internal mapping	get	0.007143
to a tabular environment	to latex buf columns col_space header	0.200000
generates prop value pairs from declarations	cssresolver parse declarations_str	1.000000
to apply we are	group by mixin apply	0.050000
the underlying array which	datetime index ops mixin	0.029412
a cacher and are of mixed type	chained assignment possible	0.142857
the block manager from a dataframe of series	sparse to manager sdf	0.052632
value	io formats float array formatter value	0.250000
determines if two	float64index equals other	1.000000
index are equal	almost equal	1.000000
return the ftypes (indication of sparse/dense	ndframe ftypes	0.055556
index	core indexes bdate	0.050000
set of _constructor_sliced-like objects to either an	core panel homogenize dict frames intersect dtype	0.066667
checks that	parser check	0.200000
value from 1-dimensional ndarray only use this	datetime index get value series key	0.071429
the other axis	axis	0.011364
freq with integer	freq	0.016129
and return the op string	op generate	0.066667
node	append key	0.016667
return a dtype compat na value parameters	dtypes na value for dtype dtype	0.333333
lag	lag	1.000000
as	indexes period index array wrap result	0.050000
binary feather-format for	frame to feather fname	0.083333
take which sets nan values in one pass	take nd arr indexer	0.125000
sqlite	sqlite	1.000000
recursively evaluate an expression	computation bin op call env	0.250000
sanitize input data	core sanitize array data index dtype	0.250000
generates prop value pairs from declarations	formats cssresolver parse declarations_str	1.000000
to be returned from apply if as_index=true	by index with as	0.200000
the best locator based on a distance	locator get locator dmin dmax	0.250000
for given	core get	0.038462
to specified frequency	asfreq freq	0.250000
return an axes dictionary	ndframe construct axes dict axes	0.166667
o and return packed	msgpack packb o	0.055556
a series excluding elements from groups that do	series group	0.030303
convert :mod datetime to the	to	0.006329
are index sliceable then return my slicer otherwise	convert to index sliceable obj	0.083333
to be applied on each value to	float array formatter value formatter float_format threshold	0.100000
csv file (discouraged please use :func	core data frame from csv cls	0.066667
scatter plot from two dataframe	plotting scatter plot data x y	0.125000
a view of myself	view	0.043478
to be applied on each value to format	array formatter value formatter float_format threshold	0.100000
read csv file (discouraged	csv	0.057143
left and right	left right check_exact check_dtype	0.333333
detect missing values both missing values (-1 in	categorical isnull	1.000000
is found	mixin isin	0.166667
return the bool of a single element	ndframe bool	0.055556
return boolean if values in	is	0.005291
the blocks collect and	apply f axes filter do_integrity_check	0.083333
string-like array to convert object dtype	dtypes maybe convert string to object values	0.142857
types and ranges supported by stata	to stata types	0.500000
after	array wrap	0.075000
passed type is	dtype is	0.096774
shape of the values to be	values ndim shape	0.083333
a string-like that is	convert string array data encoding	0.038462
ufunc needs additional handling as	wrap result context	0.029412
1-dimensional ndarray only use this if	set	0.012195
dict of array-like or dicts	dict	0.076923
for series arithmetic operations to avoid code duplication	core bool method series op name str_rep	1.000000
sanitize input data to an ndarray	sanitize array data index dtype	0.250000
the	io stata	0.071429
starting at the	rsplit arr pat n	0.037037
the flattened values of the underlying data	index ravel order	0.037037
of bytes in	indexes multi index nbytes	0.052632
a leap	is leap	0.125000
set of unique elements of arr1	arr1	0.050000
render a dataframe to a list	formats data frame formatter to	0.083333
string starting at the	rsplit arr	0.037037
dict	dict cls	0.166667
difference of two	difference other	1.000000
packed object	packed object_hook	0.200000
passed type is	interval dtype is	0.066667
subclass of styler with	formats styler	0.021739
called via the 'numpy' library	with	0.068966
we have mixed levels	indexes multi index have mixed levels	0.200000
subclass of styler with a custom	styler from custom	0.200000
the 'info axis' see indexing	ndframe keys	0.083333
difference of two	difference other result_name	1.000000
string-like array to convert object dtype	core dtypes maybe convert string to object values	0.142857
used	html frame parser build	0.014706
file node must already exist and be table	format	0.012346
the put method to	put	0.043478
cartesian product of all possible label	group index labels shape sort	0.200000
convert to object if we are a	multi index to safe for reshape	0.333333
the	categorical get	0.200000
convert to our native types format	categorical block to native types slicer na_rep quoting	0.250000
adjusted for groupby	index codes for groupby	1.000000
backward to next offset only if not	rollback dt	0.125000
to a pandas or	to	0.006329
dtype str	dtype str	0.333333
from 1-dimensional ndarray only use this if you	value arr	0.023810
manage style	mplplot apply style colors colors kwds col_num	0.142857
copy of the list	core sparse sparse list copy	0.500000
whether each index value is	core indexes datetime index ops	0.034483
a dataframe to	data frame to	0.111111
comparison operations to convert timedelta-like	td index cmp opname	0.055556
on given axis	dropna axis	0.083333
in file node must already exist and be	append key value	0.016667
after a	core indexes period index array	0.050000
keeps track of whether numexpr was	computation set test mode v	0.142857
packed object return an	packed object_hook list_hook	0.200000
http //www stata	stata	0.022222
stata date formats to	convert datetime to stata	0.111111
fixed frequency datetime index with business day	indexes bdate range start	0.083333
is an actual dtype that	dtypes period dtype is dtype cls dtype	0.142857
table in file node	append	0.012987
specified frequency	core ndframe asfreq freq method how normalize	0.250000
a string-like that is object dtype and	convert string array	0.038462
is defined as a copy with the	multi index view cls	0.047619
new type	dtype copy errors	0.250000
this is index	core ndframe	0.005051
lag-n autocorrelation parameters	core series autocorr lag	1.000000
cartesian product	product	0.111111
our native types format slicing if	native types	0.200000
keyerror	compat chain map	0.032258
valid keys across my indexer	indexer has valid tuple	0.500000
a tree-like object that	parser	0.008000
gets called prior to	core series array prepare	0.111111
if multiindex has only	indexes multi	0.014493
vectorized membership of x in y if	core computation in x y	0.047619
index parameters	value index	0.166667
of the function in blockmanager	core block manager	0.022727
this is similar	reshape	0.037037
to table in	value format	0.016667
requested	level	0.043478
dispatch to apply	mixin apply func	0.050000
number of bytes in the	nbytes	0.046512
of arr1 and arr2	util equal contents arr1 arr2	0.066667
needs additional handling	array wrap result	0.025000
delete given loc -s from block in-place	core block delete loc	1.000000
full scope	computation scope full scope	0.055556
axis	dropna axis	0.083333
the same dimensions as the original	core	0.001326
stripping all of the _apply kwargs	func name window center	0.058824
datetimeindex from	datetime index	0.007042
to determine if dtype is valid for	select n is valid dtype n method dtype	0.142857
location	loc	0.440000
for making this object picklable	indexes multi index reduce	0.333333
after regular attribute access try looking up	ndframe getattr	0.500000
*this is an internal non-public method*	indexes categorical index is dtype compat other	0.500000
an positional indexer cannot	valid positional setitem indexer indexer	0.052632
variables corresponding to designated axis labels	reshape make axis dummies frame axis transform	0.166667
the block return result block from the result	block	0.008197
1-dimensional ndarray only use this	arr key	0.023810
of a single element pandasobject	core	0.001326
resample of a	datetime	0.006711
default values as specified	for default values	0.200000
block that has a single dtype if dtype	core simple blockify tuples dtype	0.111111
is called upon unpickling rather than the default	cls d	0.083333
a subclass of styler with	formats styler	0.021739
of this	index	0.002004
want to set the	core series set	0.076923
only use this if you	index set value arr key	0.023810
given an	get	0.007143
needs	array wrap result	0.025000
object is a number	dtypes is number	1.000000
for a particular dataframe invoked by unicode df	frame unicode	0.166667
cast	io parser base cast types	1.000000
whether each index value is found in the	core indexes datetime index ops mixin isin values	0.083333
tree-like object that can be used	html	0.011765
stata date formats to a	io convert datetime to stata	0.111111
columns for dataframe and major_axis	ndframe	0.005025
header rows in	pop header	0.100000
this if you	set value	0.023256
self coded with categories as	core categorical codes for groupby sort	0.071429
html tables into a list of	html io match flavor header	0.166667
string in the series/index by indicated number	core str repeat arr	0.045455
convert timedelta-like to timedelta64	td index	0.055556
return if each value is nan	datetime index ops mixin isnan	0.500000
needs additional	index array wrap	0.033333
that we have	categorical validate	0.055556
table as a dataframe the levels	table data	0.200000
at particular time of	at time time	0.066667
be used to	io	0.003012
levels names etc' nentries - number of	nentries nlevels prefix names	0.100000
type is	period dtype is	0.125000
and 'kwargs' should be empty because	args kwargs	0.076923
a tuple of axis dimensions	ndframe shape	0.200000
for options	io	0.003012
convert to object	to	0.012658
a dict of the kinds allowable columns	table queryables	0.055556
panel objects and will raise an error	panel to	0.027027
of the flattened values of the	index ravel order	0.037037
node with	io hdfstore get node	0.166667
read csv file (discouraged	from csv cls path header	0.066667
to iterate over	frame parser	0.012500
can be used to iterate over the	html frame	0.014706
the function to my values return a	func mgr	0.083333
minimum value of the object	core categorical min numeric_only	0.250000
column and prepare formatted output	stata value label	0.250000
in file node must already exist and be	append key	0.016667
append to table in file node	format append	0.125000
never a	is	0.005291
csv file (discouraged please use :func	series from csv cls path sep parse_dates	0.066667
with	indexes	0.004651
internal property property synonym	core	0.001326
'series argmin' is called via the	skipna skipna args kwargs	0.100000
return a version to operate on	mixin try operate values	0.333333
valid keys across my indexer	ndframe indexer has valid tuple	0.500000
datetime	freq	0.016129
only use this if you	index set value	0.023810
from 1-dimensional ndarray	index set value	0.023810
x in	computation in x	0.166667
for initializing the gradientfill stop parameter	stop	0.050000
compute a simple	reshape crosstab index columns	0.066667
can safely be cast to	val min_val	0.083333
a list of the axis indicies	core panel extract axes data axes	0.142857
layout some dataframes in vertical/horizontal layout for explanation	plotter	0.076923
create a new unit	core dtypes datetime tzdtype new cls unit tz	0.055556
gets called prior to a	prepare	0.071429
in the series extract groups from the	extract frame arr	0.047619
the minimum value of the object	core index ops mixin min	0.125000
minor	minor	1.000000
an openpyxl v2 1 0	io openpyxl20writer	0.035714
return a list of sql statement that create	io sqlite table create	0.066667
table as a dataframe	table data	0.200000
coerce_float	coerce_float	1.000000
construct and returns axes if	core ndframe construct axes	0.333333
the values to be	values	0.008547
of unique elements of arr1 and arr2 are	util equal contents arr1 arr2	0.066667
ensure that if we don't have an index	core data frame ensure valid index	1.000000
parse the raw data into a	frame parser parse raw data rows	0.250000
i with level j	i j	0.200000
handle specific apply logic for child	tseries semi month offset apply n other	0.200000
that can be used to iterate over the	io html frame parser	0.012195
packed object return an	packed	0.100000
index's frequency if available	ndframe tshift periods freq	0.333333
custom template and	custom template	0.250000
dateoffset of one custom	custom	0.066667
form the union of	indexes multi index union	0.333333
return a formatter function for	get	0.007143
if we do need a multi reindex this	core series needs reindex multi	0.333333
of an indexer even	indexes index get indexer for	0.250000
return the join indexers	core reshape as of merge get join indexers	1.000000
new unit	tzdtype new cls unit tz	0.055556
of microseconds (>= 0 and less than 1	timedelta index microseconds	0.066667
return the values	get values	0.250000
try to cast the array/value to a datetimelike	dtypes maybe cast to datetime value	0.500000
if the process of casting	indexes numeric index assert safe casting	0.125000
with times to midnight length is	datetime index	0.007042
from one of the stata date formats to	datetime to stata	0.100000
of casting data from some accepted dtype to	casting cls data	0.047619
indexer	indexer cls name indexer	0.083333
python datetime date objects (namely	indexes datetime	0.011494
object that can be used to iterate over	frame parser	0.012500
excel	excel	0.666667
is defined as a copy with	indexes multi index view cls	0.047619
or np dtype to a	to dtype dtype	0.083333
convert to our native types	float block to native types slicer na_rep float_format	0.250000
we have good categories	core categorical validate categories cls categories fastpath	0.250000
to convert datetimelike-keyed dicts to timestamp-keyed dict	core dict compat d	0.142857
objects suitable for initializing the gradientfill stop	stop	0.050000
the full scope for use with	scope full scope	0.055556
form the union of two	core indexes multi index union other	0.066667
round the	core reshape round	0.500000
a string-like that is object	convert string array	0.038462
the 'numpy' library	validate take with convert convert args kwargs	0.055556
the left and right sparsedataframe are equal	assert sp frame equal left right check_dtype exact_indices	0.333333
the underlying	core indexes range	0.062500
making this object picklable	core indexes datetime index setstate state	0.333333
1-dimensional ndarray only use this	arr	0.013699
to dispatch to the	compat dispatch name	0.500000
read csv file (discouraged	data frame from csv	0.066667
or all of the data are missing	core data frame	0.005917
an array or dtype	dtype	0.010989
returns axes if supplied	axes	0.043478
a leap year	period index is leap year	0.142857
ensure that we	core indexes datetime index ops mixin ensure	1.000000
of python datetime date objects (namely the	core indexes datetime	0.011494
call encode before writing to file	io stata writer write to_write	0.083333
of bytes in the underlying	index nbytes	0.052632
handling	index	0.002004
1-dimensional ndarray only	index set value	0.023810
statement is of	w	0.090909
and	func name args	1.000000
if we define an builtin function for this	mixin is builtin func arg	0.333333
symmetric difference of two	symmetric difference other result_name	0.333333
return the	core ndframe	0.010101
values	block shape values ndim	0.050000
construct and	core ndframe construct	0.333333
create and return the block manager from a	to manager sdf columns index	0.052632
of whether each index	index	0.002004
indicating if the date belongs to a leap	period index is leap	0.125000
decorator to take	args decorator	0.111111
avoid code duplication	str_rep fill_zeros	1.000000
freq with	freq	0.016129
select values at particular time	core ndframe at time time	0.066667
reconstruct labels	labels	0.038462
true if i am a non-datelike	core block is datelike	0.500000
a datetimeindex of dates	dates	0.090909
operations to the cls evaluate the doc strings	operations cls use_numexpr	0.142857
values to be at least 1	core block shape values	0.050000
called after	period index array wrap	0.050000
returns the float values converted into strings	float array formatter get result	0.055556
fillchar	fillchar	1.000000
freq and stride info from string representation	and stride freqstr	0.250000
return	categorical get	0.100000
to read from a url	io read	0.038462
float values converted	io formats float array formatter	0.055556
up styles to html	io	0.003012
common ops mixin to support	ops mixin	0.066667
add in the numeric add/sub methods to disable	index add numeric methods add sub disabled cls	1.000000
we have an object dtype	dtypes	0.031746
subset rows or columns of dataframe according	ndframe filter items like regex axis	0.166667
singular 'name' parameter for general index	core indexes index validate names name	0.066667
input order may not drop or	order	0.125000
that	categorical validate ordered	0.055556
midnight length	core indexes datetime index	0.007634
list representing the totally ordered cartesian product	sort xnull	0.066667
to datetime	elapsed date to datetime	0.250000
type and coerce into matrices	arrays to mgr arrays arr_names	0.250000
return the internal repr	values	0.008547
string representation for this object	indexes frozen ndarray unicode	0.083333
casting	casting	0.461538
ordered attribute	ordered	0.017857
append to table	hdfstore append key value format append	0.125000
index objects contain	datetime index ops	0.034483
numpy dtype type-style object for a dtype object	from object dtype	1.000000
check whether ax has data	plotting mplplot has plotted object ax	0.500000
:class packer	msgpack	0.022222
evaluate	eval	0.100000
return new dataframe with	data frame reset	0.027778
construct an intervalindex from a a	indexes interval index from arrays	0.166667
file node must already	append key value format	0.016667
can perform a	indexes index	0.007353
shift without copying data the	ndframe slice shift	0.083333
a boolean whether this axes needs validation for	core ndframe indexer should validate iterable	0.166667
datetimelike-keyed dicts to timestamp-keyed dict	core dict compat d	0.142857
return the data pointer of the underlying data	index ops mixin data	0.333333
new type (if copy=true return a new copy)	block astype dtype copy errors values	1.000000
are index sliceable then	core convert to index sliceable obj key	0.083333
info for	update info info	0.166667
called	core indexes index	0.007042
from 1-dimensional ndarray only use this if	core indexes index set	0.023810
the new freq essentially a reindex	core resampler asfreq fill_value	0.066667
values between particular	datetime index indexer between	0.125000
to left	left	0.018519
dtype object of the underlying data	core series dtype	0.333333
return true if	core dtypes is	0.021277
class constructor (for this class it's just __class__	pandas object constructor	0.500000
nat which has the	ops mixin nat new	0.050000
am never a view	is view	0.100000
convert to our native types format slicing if	core categorical block to native types slicer na_rep	0.250000
the reduction type operation if we can	ops mixin reduce op name axis skipna	0.083333
code	freq code	0.125000
of value from 1-dimensional ndarray only use this	core indexes datetime index get value	0.071429
fast	fast	0.454545
slice	core categorical block slice slicer	0.083333
my self as	sparse sparse series as	0.125000
find indices where elements of v should be	frozen ndarray searchsorted v	0.033333
from a row	html frame parser parse	0.250000
called upon unpickling rather than the default which	cls d	0.083333
type of categoricaldtype this metaclass determines subclass ability	dtype type	0.200000
i am	categorical block is	0.100000
the underlying	core indexes datetime index ops mixin	0.029412
return the full scope for	computation scope full scope	0.055556
sql statement that create a table reflecting	create table setup	0.066667
blockmanager with the items axis of len	block manager make	1.000000
an xlwt	io xlwt writer convert	0.500000
the maximum by shading	max subset color	0.166667
all values found in	transform	0.083333
indicated if we have mixed levels	multi index have mixed levels	0.200000
rewrite the assignment operator for pytables expressions that	rewrite	0.076923
a multi reindex	reindex multi	0.500000
group return result as series or	axis	0.011364
myself	categorical	0.019231
we have a fully reindex-output to	core data frame group by reindex output result	0.045455
to dataframe apply for sparsedataframe	data frame apply func	0.166667
unit if needed otherwise return from the	cls unit tz	0.125000
a frequency guess generated by infer_freq	core indexes datetime index ops mixin inferred freq	0.250000
copy	dtype copy	0.032258
context manager for running code that expects	util assert produces warning expected_warning filter_level	0.071429
path's extension	writer check extension	0.250000
called via the 'numpy' library	argmin with	0.200000
boolean criterion specified by	core ndframe group by filter	0.200000
transform	group by transform	1.000000
numpy / pandas type to its corresponding json_table	io json as json table type x	0.250000
ndframe	core ndframe truncate	0.250000
csv file (discouraged	series from csv	0.066667
quantile	core series quantile	0.083333
checks if key is a	key	0.005051
return appropriate class of series concat	series result type result	0.250000
index and its underlying data	range index	0.021739
a tree-like object that can be used	frame parser	0.012500
a curve with holidays	tseries abstract holiday calendar holidays start end return_name	0.066667
agg	agg	1.000000
in the series/index by indicated number of	core str repeat arr	0.045455
locator based	get locator	0.062500
need to coerce a scalar	coerce scalar	0.250000
a series	tsplot series	0.333333
panel to a separate excel sheet	panel to excel path na_rep engine	0.111111
it has	core	0.001326
accelerate unioning	core indexes datetime index union many others	0.040000
with nat which has the same length as	mixin nat new	0.050000
return the td elements from	html frame parser parse td obj	0.083333
return a string representation for this object	frozen ndarray unicode	0.083333
return true if i am a non-datelike	core block is datelike	0.500000
a series of columns	ndframe groupby	0.250000
the dtype to return if	dtype	0.010989
with nat which has the same	nat new	0.050000
1-dimensional ndarray only use this	index set value arr key	0.023810
detect whether the installed version of openpyxl is	compat is compat major_ver	0.111111
if we are index sliceable then return	core convert to index sliceable obj key	0.083333
the categorical by category value returning	ascending na_position	0.071429
only the actual sparse values	core sparse sparse array	0.043478
ftypes (indication of	ndframe ftypes	0.055556
a scalar	scalar	0.200000
bool if we have only bool values but	object block is bool	0.166667
dataframe	data x	0.333333
the series extract groups from	extract frame	0.047619
valid ordered parameter	validate ordered cls ordered	0.058824
to the underlying	core indexes datetime index ops mixin	0.029412
index objects contain the same elements	core indexes datetime index ops	0.034483
indexer and return them as a	nd indexer axis	0.043478
create	create indexer cls	0.500000
at the requested level	index sortlevel level	0.166667
add in numeric methods	add numeric methods	0.500000
of microseconds (>= 0 and less	timedelta index microseconds	0.066667
at particular time of	core ndframe at time time asof	0.066667
of casting	index assert safe casting	0.125000
needs additional handling	array	0.013889
return the number	index	0.004008
stride	get stride	0.333333
a string representation for this	core indexes frozen ndarray unicode	0.083333
of columns as	columns	0.017857
that	parser build	0.014706
occupying requested label default to specified	get label default	0.083333
td elements from a row	frame parser parse td obj	0.083333
a manager and a axes dict	init mgr mgr axes	0.333333
we have a full length slice	core is full slice	1.000000
:class packer for	msgpack	0.022222
series with multiindex to produce	core series	0.008000
swap level i with level j do	indexes multi index swaplevel i j	0.333333
and return the op string for	core computation bin op generate	0.066667
with	index	0.002004
series extract groups	extract frame	0.047619
create index with	core indexes multi index	0.013158
return datetimeindex with times to midnight	datetime index	0.007042
fill_value) to a common sparseindex corresponding	homogenize series_dict	0.047619
options	io msgpack packb	0.025641
entries in index	custom index	0.250000
for	index	0.010020
with null values	values	0.008547
objects	indexes	0.004651
index with passed location -s deleted	core indexes index delete loc	0.333333
numeric	add numeric	0.142857
on but cannot append to : write out	write	0.017857
value from 1-dimensional ndarray only	core indexes categorical index get value series key	0.100000
x not in y if	not in x y	0.066667
are index sliceable then return my slicer otherwise	to index sliceable obj key	0.083333
parser that	parser	0.016000
dropna if fill_value=nan	dropna axis inplace	0.166667
of try_coerce_args	core block try coerce result result	0.500000
to shift without copying data the shifted data	ndframe slice shift periods	0.083333
the (attr formatted_value)	core indexes multi index format attrs	0.142857
handling as	indexes period index array wrap	0.050000
we want to set the	set	0.012195
return a function to create an	computation	0.038462
encode input values as	values sort order	0.333333
from this selection take = take ownership	nan_rep encoding	0.333333
membership of x in y if possible	core computation in x y	0.047619
rank the values	core rank values	0.250000
required package is installed	package pkg_name min_version max_version app	0.083333
parsed table element	parser parse tr table	1.000000
sif to datetime http //www stata com/help cgi?datetime	stata elapsed date to datetime vec dates fmt	0.500000
load a feather-format object	read feather	0.083333
'numpy' library	compat numpy validate take with	0.055556
of the required package is	package pkg_name min_version max_version app	0.083333
path's extension against	check extension cls	0.125000
the underlying	range index	0.021739
index and	range index	0.021739
the float values	io formats float array formatter get result	0.055556
from 1-dimensional ndarray only use this	set value arr key	0.023810
validates that we	core categorical	0.013889
bins	bins	0.545455
object that can be	frame parser build	0.014706
tostring	tostring	1.000000
and index	core data frame set value index	0.500000
from a dataframe column or multiindex	from	0.030303
against frequency str	str from freq cls freq	0.500000
or all of the data	core data	0.041667
the series extract groups from the	str extract frame arr	0.047619
coerces data to	indexes index coerce to	0.333333
and	io hdfstore	0.014493
check that left and right dataframe are equal	assert frame equal left right check_dtype check_index_type	0.333333
explict type promotion and coercion	core dtypes maybe upcast values fill_value dtype copy	0.166667
add numeric operations to the groupby generically	by add numeric operations cls	0.250000
new sparsearray from the	sparse sparse data	0.076923
and major_axis	ndframe	0.005025
convert argument to timedelta parameters	tools to timedelta arg unit box errors	0.500000
datetime index	indexes	0.009302
this if you	arr key	0.023810
return an xarray object from the pandas object	ndframe to xarray	0.125000
style_dict to an xlsxwriter format object	io xlsx writer convert to style style_dict num_format_str	0.166667
fully reindex-output to the levels	data frame group by reindex output result	0.045455
fast lookup of value from 1-dimensional ndarray	core indexes period index get value series	0.071429
specified frequency	ndframe asfreq freq method how normalize	0.250000
new manager with the blocks	core block manager combine blocks copy	0.250000
index value is found	core indexes datetime index ops mixin isin values	0.083333
in file node	io hdfstore append key value format	0.016667
the blocks collect	axis consolidate transposed	0.062500
boolean mask of index to be returned	index	0.002004
a ufunc needs additional handling	wrap result context	0.029412
to my values return a block	block	0.008197
convert timedelta-like to timedelta64	indexes td index cmp opname nat_result	0.055556
internal non-public method*	create from codes codes categories ordered name	1.000000
a left and right array	cls left right closed	0.166667
concatenate to_concat which has the same class	core indexes index append same dtype to_concat	1.000000
dataframe the levels in	data values index columns	0.066667
file node must already	key	0.005051
unicode	unicode	0.294118
index value is found in the	index ops mixin isin values	0.083333
by hashing its categories	c encoding hash_key	0.200000
a spreadsheet-style pivot	core reshape pivot	0.166667
read csv file (discouraged please use	from csv cls path sep	0.066667
return a tree-like object that can	html frame parser	0.012658
return an axes dictionary	core ndframe construct axes dict axes	0.166667
implementing the plot attribute for groupby objects	by plot	0.062500
that can	io html frame parser build	0.014706
indexer	indexer form key	1.000000
a	ndframe	0.010050
unstack a k a pivot series with	series unstack level	0.333333
occupying requested label default to specified missing	label default	0.083333
the block i	data col create for block cls i	0.333333
inserted in a to maintain order	side sorter	0.166667
parse datetime string	parse time string	0.250000
to deprecate	deprecate	0.090909
are index sliceable then return my	index sliceable obj	0.083333
we take a string-like that is object	io convert string array	0.038462
return the values & release	index col take data	0.111111
return a formatter function for a range	io formats get	0.100000
on saturday or sunday use previous friday instead	previous friday dt	0.250000
to call encode before writing to file for	writer write to_write	0.083333
to an xlsxwriter format	io xlsx writer convert to style	0.500000
take	core categorical take nd	0.200000
the we have	name	0.025000
return_name	return_name	1.000000
my hashed	multi index hashed	0.166667
for this indexable with the key/value	io index col	0.055556
keys corresponding	keys	0.032258
arr1 and	equal contents arr1	0.066667
this categorical	categorical	0.009615
return the	core reshape merge operation get	0.500000
value from 1-dimensional ndarray only use	core indexes datetime index get value	0.071429
a style_dict to an openpyxl style	openpyxl1writer convert to style cls style_dict	0.166667
keys that are	keys fname	0.200000
value for the nan/nat from the provided	value val	0.250000
exception is raised and that	util assert raises regex _exception _regexp _callable	0.200000
a dense type view	single block manager	0.200000
can be used to iterate	html frame parser	0.012658
masked rec array and create	masked rec array to	0.090909
is datetimelike (e	indexes maybe to datetimelike data	0.142857
check if we are	core ndframe check is	0.200000
values	values name freq	0.166667
the float values	formats float array formatter get result as array	0.055556
the indexer fill	indexer allow_fill	0.050000
get all the locales that are available on	util get locales prefix normalize locale_getter	1.000000
am never	block	0.008197
the union of two index objects and sorts	range index union other	0.083333
extension	excel writer check extension	0.250000
op	core computation bin op	0.055556
an item pair from maps[0] raise keyerror is	popitem	0.043478
levels of both multiindex objects	indexes multi index equal levels other	0.100000
with labels in requested axis removed	ndframe drop labels axis level	0.250000
convert an object to	computation convert	0.250000
take a string-like that is	io convert string array	0.038462
to construct this type from	interval dtype construct from string cls	0.166667
subset of a dataframe	core data frame	0.005917
scalar to	scalar to	0.100000
common ops	index ops	0.033333
ensure that an array object has a float	core dtypes ensure float	1.000000
evaluate the block return result block from the	core block eval func other raise_on_error	0.333333
return datetimeindex with times to midnight length	datetime index	0.007042
argsort	series argsort	0.083333
create a new unit if needed otherwise	core dtypes datetime tzdtype new cls unit tz	0.055556
fixed frequency timedelta index with day as	core indexes timedelta range start	0.083333
value from	arr key value	0.038462
value from 1-dimensional ndarray only use this	indexes datetime index get value series key	0.071429
read csv file	core data frame from csv cls	0.066667
styles	io formats	0.027778
view limits to	locator autoscale	0.055556
of	resampler	0.053571
primary_key	primary_key	0.833333
have a valid ordered parameter	core categorical validate ordered cls ordered	0.058824
can be used	io html frame	0.012987
locations	set locs locs	0.333333
of the data are missing	core data frame	0.005917
list-like indexer return	index convert list indexer keyarr kind	0.066667
have a fully reindex-output to	data frame group by reindex output result	0.045455
view	view	0.347826
localize tz-naive timeseries	ndframe tz localize	0.500000
get integer location for requested label	get loc key method tolerance	1.000000
generic	generic	0.714286
values between particular	core ndframe between	0.100000
for	by	0.038462
add in the numeric add/sub methods	indexes index add numeric methods add	1.000000
a spreadsheet-style pivot table as a	core reshape pivot table	0.111111
parse specified sheet s	file parse	0.125000
datetime index with	core indexes bdate	0.050000
sets names on levels warning mutates!	indexes multi index set names names	0.200000
given an interval or intervalindex	indexes get interval	0.125000
with nat which has	nat new box	0.050000
parser based on the	parser	0.008000
as	core indexes period index array wrap	0.050000
a 1d array of	intervals cls data	0.250000
fast transform path for aggregations	transform fast result	0.333333
block and are	block manager	0.021277
as a	values	0.008547
sort multiindex at	indexes multi index	0.013158
'name' parameter for general index and	indexes index validate names	0.066667
block by periods	periods axis mgr	0.500000
the same dimensions as the	core	0.001326
fast path for getting a	manager fast	0.250000
dtype converting	dtype errors	0.333333
internal method to handle na filling of take	take fillable values indices allow_fill	0.250000
and	compat chain	0.034483
convert to our native types format slicing	core float block to native types slicer na_rep	0.250000
csv file	core series from csv cls path sep parse_dates	0.066667
'info axis' see indexing for more this is	ndframe keys	0.083333
try to deal with nat-like arg is	arg	0.018868
function is called via the 'numpy' library the	take with	0.055556
of a series that is datetimelike	datetimelike	0.076923
series only operations to the cls evaluate the	series only operations cls	0.333333
on given axis omitted where alternately any	frame dropna axis how thresh subset	0.100000
for making this object picklable	reduce	0.125000
temporary variable	tmp value	0.166667
timedelta64	timedelta64	1.000000
over the dom	doc	0.071429
the values of this categorical	core categorical	0.013889
to read from a url file	io read obj	0.058824
of python datetime date	core indexes datetime	0.011494
length	core indexes	0.004762
that left and right dataframe are equal	assert frame equal left right check_dtype check_index_type	0.333333
form the union of two index objects and	indexes range index union other	0.083333
store object in hdfstore parameters	io hdfstore put key	0.333333
downsample the cython	index resampler downsample how	0.200000
or all of the data	core data frame dropna	0.083333
to a leap year	is leap year	0.142857
return the cached item item represents	ndframe get item cache item	0.333333
by category value returning a new	ascending na_position	0.071429
from 1-dimensional ndarray only	index	0.002004
column and index	data frame set value index col	0.666667
table in	io hdfstore	0.014493
packed bytes	packb	0.022727
sanitize input data	core sanitize array data index	0.250000
a	categorical validate ordered cls	0.055556
create an indexer like	core ndframe create indexer cls name indexer	0.166667
thrown by an error is encountered	error	0.028571
of x in y	computation in x y	0.047619
check that left and right	left right check_dtype check_index_type	0.333333
highlight the maximum by shading	highlight max	0.333333
td elements from a row	html frame parser parse td obj	0.083333
to apply we are stripping all of	group by mixin apply func name	0.050000
read csv file (discouraged	from csv cls path	0.066667
read csv file (discouraged please use :func pandas	csv cls path	0.066667
ignore_order	ignore_order	1.000000
each index value is	indexes datetime index ops	0.034483
label if label is	value label	0.066667
the td elements from a	frame parser parse td obj	0.083333
used to	frame parser build	0.014706
a left and	left	0.018519
file node must already exist and be	append	0.012987
view limits to the nearest	series date locator autoscale	0.055556
be applied on each value to format it	array formatter value formatter float_format threshold	0.100000
called upon unpickling rather than the default	indexes new datetime index cls d	0.111111
to the underlying array	indexes datetime index ops mixin	0.029412
makes sure that time	ensure like indices time	0.125000
load msgpack pandas object	read msgpack path_or_buf encoding iterator	0.200000
csv file (discouraged	from csv cls path header	0.066667
minimum value of	index ops mixin min	0.125000
given an interval or intervalindex return	core indexes get interval	0.125000
dispatch to apply we are stripping	core group by mixin apply	0.050000
the value	value	0.005155
in file node must already	key	0.005051
values to be at least 1	shape values	0.050000
the number of bytes in the	indexes multi index nbytes	0.052632
compute sum of values excluding missing values	core group by ohlc	0.250000
we	categorical validate ordered cls	0.055556
gets	period index	0.024390
number of unique elements in the	core index ops mixin nunique dropna	0.083333
translate to postive here	maybe convert indices indices n	0.166667
a ufunc needs	core indexes period index array wrap result context	0.041667
we are passed a list-like indexer return	index convert list indexer keyarr kind	0.066667
codes by the indexer fill with the fill_value	nd indexer allow_fill fill_value	0.250000
multi-level index return new dataframe	core data frame reset	0.027778
the	io json	0.062500
ndarray only	set value arr	0.023810
data to	core indexes index coerce to	0.333333
ndarray or list	data index columns	0.125000
elements of arr1 and	contents arr1	0.066667
create an	ndframe create indexer cls name	0.500000
gets called after a ufunc needs	core indexes period index array wrap result context	0.041667
csv file (discouraged	frame from csv cls path header sep	0.066667
compute standard deviation	by std ddof	0.166667
etc' nentries - number of entries in index	util make custom index nentries nlevels prefix	1.000000
is	core ndframe	0.005051
float values converted into	float array	0.055556
use	index set value arr key	0.023810
to apply we are stripping all of the	core group by mixin apply func name	0.050000
values from this	values	0.017094
header rows in multiindex	header	0.066667
construct an intervalindex	indexes interval index	0.062500
ensure that if we don't have	core data frame ensure valid	1.000000
datetimelike-keyed dicts to timestamp-keyed dict	dict compat d	0.142857
representation used to tag	computation replacer x	0.125000
after a ufunc needs	period index array wrap result context	0.041667
values according to indexer and	indexer	0.018349
return a basegrouper which	get	0.007143
abstract interface to create holidays following certain rules	abstract holiday calendar	0.500000
in file node must already	io	0.003012
datetime64	datetime	0.006711
a stringified and numeric for these	na_values	0.125000
from maps[0] raise keyerror is maps[0]	chain map	0.034483
index with	core indexes bdate	0.050000
blocks	manager slice take blocks	0.500000
of x not in y if possible otherwise	not in x y	0.066667
convenience function	xi yi x	0.500000
the reduction type operation if we	core index ops mixin reduce op name	0.083333
from a list/array of tuples parameters	from tuples cls	1.000000
first match of regular expression	flags expand	0.200000
and labels	labels	0.038462
after	core indexes period index array	0.050000
sql and params args to dbapi2	sql params	0.200000
creating a class with a metaclass	compat add metaclass metaclass	0.125000
format try to deal with nat-like arg is	arg errors	0.026316
concatenation of an datetimelike array of arrays each	concat datetime	0.125000
with the block	for block	0.333333
can be used to iterate	html frame	0.014706
left_on	left_on	1.000000
stata	stata writer	0.125000
unconvert	unconvert	1.000000
node must	io hdfstore append	0.016667
float values converted	formats float array formatter get result as	0.055556
attempt to construct this type from	categorical dtype construct from string cls	0.166667
a	core reshape crosstab index columns values	0.066667
a simple cross-tabulation	index columns	0.028571
of the arg list of a func	func	0.011905
but using the interpolate machinery	core block interpolate with fill method	0.200000
of the required package	package pkg_name	0.083333
our native types format slicing if desired	native types slicer na_rep quoting	0.200000
horizontal bar plot	series plot methods barh	1.000000
my self as a sparse array	core sparse sparse series as sparse array	0.250000
a tree-like object that can	html frame parser build	0.014706
object that can be used to	html frame parser	0.012658
a boolean list indicated if we have	have	0.083333
let's be explict about this	data frame get agg axis axis_num	1.000000
iter2 iterables that produce elements	iter2	0.083333
not supported for panel objects	core panel	0.019231
table in	hdfstore append key	0.016667
dataframe into wide 3d panel format	data frame to panel	0.333333
package is installed	package pkg_name min_version max_version app	0.083333
analogous to dataframe apply for sparsedataframe	data frame apply func axis broadcast reduce	0.333333
rewrite	computation rewrite assign	0.125000
to iterate over	parser	0.008000
string 'r' to a timedelta object	tools coerce scalar to timedelta type r	0.500000
slice	index slice	0.166667
the process of casting data from some	casting cls data	0.047619
input values as an enumerated type or categorical	factorize values sort	0.111111
two multiindex	other	0.013514
copy of self coded with categories	categorical codes for groupby sort	0.071429
histogram of the dataframe's	hist	0.100000
take a string-like that	io convert string array data	0.038462
needs additional handling as	core indexes	0.004762
if we are index sliceable then return	to index sliceable obj key	0.083333
mode s	series mode	0.083333
of the values	core block shape values ndim	0.050000
panel objects and will raise an	panel to sparse	0.037037
our	index resampler	0.021739
numpy result_type which overcomes the npy_maxargs 32	computation result type many	0.142857
an axes dictionary for	ndframe construct axes dict axes	0.166667
slice the info axis	core get info slice	0.500000
after a	period index array wrap result	0.050000
return the corresponding interval with closed bounds	closed bounds interval	0.200000
dataframe pivot	core reshape pivot	0.166667
evaluate the block return result block from	core block eval	0.333333
ndarray only use this if	value arr key	0.023810
convert datetimelike-keyed dicts to timestamp-keyed dict	core dict compat d	0.142857
function is called via the 'numpy' library	with convert convert args kwargs	0.055556
the slice dictionary for these axes	panel extract axes for slice axes	0.333333
all of the _apply kwargs and	name window center	0.071429
index with day calendar as the	core indexes	0.004762
we are passed a list-like indexer	indexes interval index convert list indexer keyarr kind	0.066667
converts a style_dict to an openpyxl style object	to style cls style_dict	0.166667
strings in each element in the	core	0.001326
create an indexer like _name	create indexer cls name indexer	0.166667
set new item in-place does not consolidate adds	manager set item value check	1.000000
a new block (of a possibly	block setitem indexer	0.066667
new unit if	tzdtype new cls unit tz	0.055556
with any	make	0.125000
filtered indexer that doesn't have any missing	convert from missing indexer tuple indexer axes	0.333333
ensure that we are re-localized	indexes datetime index ops mixin ensure localized result	1.000000
columns to	columns	0.017857
concatenation	concat datetime to_concat axis	0.125000
via the 'numpy' library the third	take with convert	0.055556
a a left and	left	0.018519
function for series arithmetic operations to	arith method series op name	0.333333
equivalent to shift without copying data the	core ndframe slice shift periods axis	0.083333
convert to our native types format slicing if	core categorical block to native types	0.250000
float values converted	float array formatter get result	0.055556
evaluate the block return	eval func other raise_on_error try_cast	0.200000
called after	core indexes period index array wrap	0.050000
axes	axes axes	0.400000
decode character string in the series/index	core str decode arr	1.000000
multi-index suitable for a panel-like dataframe	core panel index time panels names	0.076923
dispatch to apply	core group by mixin apply func	0.050000
rewrite the assignment operator for	core computation rewrite assign	0.125000
slice locations	slice locs start end step kind	0.083333
time and panels are conformable	time panels	0.250000
take which sets	core take nd arr indexer axis	0.125000
a series that is datetimelike	datetimelike	0.076923
provided date	date	0.080000
of value from 1-dimensional ndarray	core indexes datetime index get value series key	0.071429
mask of index	index	0.002004
reduction type operation if	ops mixin reduce op name	0.083333
for each axes overridden	plot logic ax data	0.083333
is called via the 'numpy' library the third	compat numpy validate take with	0.055556
via the 'numpy' library	validate take with convert	0.055556
our native types format slicing if desired	native types slicer na_rep float_format	0.200000
returns true if categoricals are the same dtype	categorical is dtype equal other	0.250000
blocks collect and create a	consolidate transposed	0.062500
return index or ndarray	indexes datetime index ops	0.034483
attempt to coerce any object types to	object block convert	0.083333
infer the dtype	infer dtype	0.333333
of v should be inserted	indexes frozen ndarray searchsorted v	0.033333
value the we use	value	0.005155
check a sequence of terms for instances	terms	0.034483
method to handle na filling of take	multi index assert take fillable values	0.250000
new multiindex from	multi	0.018182
occupying requested label default	get label default	0.083333
return a boolean if	is dtype	0.250000
create	create	0.300000
to get	get	0.014286
via the 'numpy' library	argmin with	0.200000
fast lookup of	key	0.005051
with given dimensions levels names	names	0.038462
ambiguous	ambiguous	1.000000
columns using input function	copy inplace	0.055556
internal repr of this data	core series values	0.250000
synonym for :meth	inplace limit	0.333333
get integer	index get	0.200000
file node must already exist	io	0.003012
vector of label values for requested level	multi index get level values level	0.250000
file node must already exist	io hdfstore append key value	0.016667
ndarray only use this if you	indexes	0.004651
of the series values	timedelta	0.022222
propagate metadata from other to self	ndframe finalize other method	0.333333
if	ordered	0.017857
the locales that	locales	0.090909
object to a	ndframe to	0.043478
of	timedelta index	0.090909
form the intersection of two index	core indexes range index intersection other	0.083333
grouper on instantiation	core group by assure grouper	0.250000
boolean if the passed type is	core dtypes extension dtype is	0.125000
for is_monotonic_increasing deprecated	indexes index is monotonic	0.333333
return the number of	core	0.002653
return the bool of a single	bool	0.043478
assemble	tools assemble	0.500000
apply function and combine results together in an	by apply func	0.333333
alter default behavior on how float is formatted	float format accuracy use_eng_prefix	0.333333
needs	index array	0.033333
conform set of _constructor_sliced-like objects to	core panel homogenize dict frames intersect dtype	0.066667
return a slice of my	core categorical block slice slicer	0.083333
background null_color for	styler highlight null null_color	0.125000
objects	by	0.038462
for last non-na/null value	core data frame last valid	0.250000
gets called prior	prepare	0.071429
the cartesian product	product	0.111111
a boolean if we	core indexes is	0.166667
to coerce a scalar to a compat	index coerce scalar to	0.071429
reshape long-format data to wide generalized inverse	core reshape lreshape data groups dropna	0.500000
return the number of bytes in the underlying	core indexes multi index nbytes deep	0.052632
shift	shift	0.583333
string-like that is object	convert string array	0.038462
ufunc	result context	0.108108
sets the categorical	core categorical	0.013889
slice locations for	slice locs start end step kind	0.083333
reshape long-format data to wide generalized inverse of	reshape lreshape data groups dropna	0.500000
timezone	set timezone tz	0.142857
convert a scipy sparse coo_matrix to a	core sparse coo to sparse series a dense_index	0.166667
categorical adjusted for groupby	indexes categorical index codes for groupby	0.333333
construct this type from a	interval dtype construct from string	0.166667
timedelta-like to timedelta64	td index	0.055556
for datetimelike properties of the	properties	0.046512
to specified frequency	ndframe asfreq freq	0.250000
with times to midnight	indexes	0.004651
function	formats	0.031250
indexer	indexer allow_fill	0.050000
attempt to construct this type from	core dtypes interval dtype construct from	0.166667
handle na filling of take	multi index assert take fillable	0.250000
'd days hh mm ss f'	plotting format timedelta ticks x pos n_decimals	0.333333
the levels of both multiindex objects	core indexes multi index equal levels other	0.100000
*this is	is	0.005291
the passed type is	dtypes interval dtype is	0.066667
the decimal	io	0.003012
r_idx_names	r_idx_names	1.000000
wrap comparison operations to convert datetime-like to	indexes dt index cmp opname nat_result	0.066667
compute sum of non-na/null observations	count	0.055556
after a	core indexes	0.009524
value from 1-dimensional ndarray only use this	core indexes period index get value series	0.071429
of the	timedelta	0.022222
compute the slice locations for input	index slice locs start end step kind	0.083333
interpolate machinery	core block interpolate with fill method axis inplace	0.200000
values to be at least 1	core block shape values ndim	0.050000
key for valid keys across my	has valid tuple key	0.333333
bytes in the underlying	indexes range index nbytes	0.052632
apply a function	apply func	0.027027
return a single column from the	io	0.003012
values between particular times of	core ndframe between	0.100000
index or ndarray filled with	core indexes datetime index	0.007634
append to table in	format append	0.125000
types format	types slicer na_rep date_format quoting	0.200000
long-format data to wide generalized inverse of	lreshape data groups dropna label	0.333333
two	other	0.162162
given an interval	indexes get interval	0.125000
elements of an series	core series	0.008000
datetimelike dtype converting	datetime value dtype	0.166667
sets the view limits to	locator autoscale	0.055556
pointer	ops mixin	0.033333
operations to convert timedelta-like	indexes td index	0.055556
via the 'numpy' library the	numpy validate take with convert convert args kwargs	0.055556
we are going to write this	write obj	0.041667
data are missing	data	0.009709
slice	slice obj	0.666667
used to	frame	0.009091
check that left and right index are equal	util assert almost equal left right	0.333333
to line delimited json	io json convert to line delimits s	0.200000
index with business day	indexes	0.004651
keeps track of whether numexpr was	set test mode v	0.142857
concatenate to_concat which has the same class	indexes index append same dtype to_concat name	1.000000
return packed bytes see	msgpack packb	0.025641
we have a	categorical validate ordered cls	0.055556
a series to the given number of	core series	0.008000
the process of casting data from	indexes numeric index assert safe casting cls data	0.047619
read html tables into a	read html io match flavor header	0.200000
to group return result as series or	axis	0.011364
to	frame parser build	0.014706
gets called prior to	series array prepare	0.111111
data to an ndarray copy if specified	data index dtype copy	0.250000
data as a unicode string	indexes index	0.007353
ndarray only use this if you	core indexes index	0.007042
convert to our native types format	block to native types slicer na_rep float_format decimal	0.250000
sort multiindex at	core indexes multi index	0.013158
:meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace limit	0.333333
locales	locales	0.545455
convert to our native types format slicing	datetime block to native types slicer	0.250000
parse specified sheet s into	io excel file parse	0.125000
write this as a frame table	multi series table write obj	0.333333
cached	cached	1.000000
a bit of a hack to accelerate unioning	indexes datetime index union many others	0.040000
reshape long-format data to wide generalized inverse of	reshape lreshape data groups dropna label	0.500000
index with day as the default	indexes	0.004651
where	where	0.666667
cartesian product	shape sort	0.200000
value from 1-dimensional ndarray only use	core indexes categorical index get value series	0.100000
table in file node must already exist	io hdfstore append key value format	0.016667
to beginning of	date offset beg	0.166667
metaclass	metaclass metaclass	0.125000
bytes see :class packer for options	io msgpack	0.025000
from sif to datetime	to datetime	0.250000
boolean mask for requested label or tuple	method	0.033333
tz	datetime	0.006711
concat all inputs as object datetimeindex	dtypes concat index asobject to_concat name	0.250000
a ufunc needs additional handling	index array wrap result context	0.034483
only use this if	set value	0.023256
is supported	compat is	0.111111
provide an implementation for the aggregators	selection mixin aggregate arg	0.166667
to accelerate unioning	core indexes datetime index union many others	0.040000
rule	rule	0.250000
an ndarray copy if specified coerce	dtype copy	0.032258
ndarray only use this	index set value	0.023810
a spreadsheet-style pivot table as a dataframe	reshape pivot table data	0.166667
called prior to a	prepare	0.071429
get	col get	1.000000
index join	indexes datetime index join	1.000000
a fixed frequency timedelta index with	indexes timedelta range start end	0.083333
location slice or	loc key	0.250000
ndarray argsort argsorts the value omitting na/null values	argsort axis kind order	0.500000
a	core indexes index array wrap result	0.100000
type window_type and size window on the	rolling window arg window win_type	0.100000
init self from	frame init	0.500000
of v should be	indexes frozen ndarray searchsorted v	0.033333
this if	core indexes index set value	0.023810
stripping all of the _apply kwargs and	name window center	0.071429
lines 0) there are headers	python parser	0.250000
package is	package pkg_name min_version	0.083333
create a scipy sparse coo_matrix from	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
type to	table type x	0.055556
return an item pair from maps[0]	compat chain map popitem	0.055556
of the values	block shape values	0.050000
set my pandas type	io fixed set	0.200000
1-dimensional ndarray	set	0.012195
an axes dictionary for the passed axes	core ndframe construct axes dict from axes	0.333333
create a table reflecting the structure	create table setup	0.066667
a string-like that is object	string array data encoding	0.038462
expanding count of number	stats expanding count arg freq	0.200000
deal with nat-like arg is	arg	0.018868
category value returning a new categorical by default	categorical sort values inplace ascending na_position	0.333333
form the union of two index objects and	core indexes range index union other	0.083333
read sql query into	read sql query sql con index_col coerce_float	0.333333
return packed	io	0.003012
encode input values as an enumerated type or	factorize values sort	0.111111
elementwise	applymap	0.125000
the indexer input array to the smallest dtype	indexer dtype indexer categories	0.333333
index objects	core indexes	0.004762
rewrite the assignment operator	rewrite	0.076923
to a left-join except that we	left right on left_on	0.058824
apply mapper function to its categories not codes	map mapper	0.125000
dataframe the	data values index columns	0.066667
take the codes	core categorical take nd	0.200000
nrows ncols -	custom dataframe nrows ncols	0.250000
the array interface return	array result	0.125000
alter default behavior on how float is formatted	io formats set eng float format accuracy use_eng_prefix	0.333333
the best locator based on	locator	0.047619
sparse-compatible version of ndarray take	core sparse sparse series take indices axis	1.000000
to capture stderr in a buffer so that	util capture stderr	0.055556
to get instances of all	all	0.043478
function in blockmanager	core block manager	0.022727
take which	take nd arr indexer	0.125000
build an xpath expression to simulate	build xpath expr attrs	0.200000
in panel to a	core panel to	0.027027
a	period index array	0.050000
return datetimeindex with	core indexes datetime	0.011494
compute a simple cross-tabulation	reshape crosstab	0.066667
simple	columns	0.017857
called via the 'numpy' library the	numpy validate take with convert convert	0.055556
set the series name	core series set name name	1.000000
correct	fill_value fill_value_typ	1.000000
plural 'names' parameter for multiindex	names deep	0.125000
a feather-format object from	read feather	0.083333
warning	warning	0.833333
empty	empty	0.750000
whether each index value is found in the	datetime index ops mixin isin values	0.083333
a single block and are	block	0.008197
return an item pair from maps[0] raise	popitem	0.043478
data to an ndarray copy if specified coerce	data index dtype copy	0.250000
that can be used to iterate over	parser	0.008000
underlying array which by-definition	core indexes datetime index ops mixin	0.029412
method to handle na filling of take	multi index assert take fillable	0.250000
that an positional indexer cannot	indexer has valid positional setitem indexer indexer	0.052632
the operations to the cls evaluate the doc	numeric operations cls	0.090909
midnight	indexes	0.004651
the	io generic	0.666667
lookup and completion	core pandas object dir	0.166667
add in numeric methods	index add numeric methods binary	1.000000
hypothetical list representing the totally ordered cartesian product	get group index labels shape sort xnull	0.066667
append to table in file node must	append	0.012987
only use this if you	core indexes index set value arr	0.023810
the block it	core block	0.010870
the	html frame	0.014706
convert an	computation convert	0.250000
with nat-like arg is a	arg	0.018868
of columns as lists of	str columns	0.083333
particular dataframe invoked by unicode df in py2	frame unicode	0.166667
return a tree-like object that can be	html frame	0.014706
offset_str	offset_str	0.833333
locator based	pandas auto date locator get locator	0.062500
duplicate each string in the series/index by indicated	core str	0.011364
bool	core ndframe bool	0.055556
built	styler	0.022222
object that	io html frame	0.012987
series extract groups from	str extract frame arr	0.047619
frequency conversion method for series/dataframe	core asfreq obj freq method how	0.500000
data in the form of sparseseries	data	0.009709
get test	computation get test	1.000000
draw histogram of the dataframe's	hist frame data	0.200000
this if	core indexes index set value arr key	0.023810
apply we are stripping all of the	core group by mixin apply func	0.050000
rewrite the	computation rewrite assign	0.125000
capture stderr in a	capture stderr	0.055556
index names to 'index'	default names	0.083333
array of python datetime	datetime	0.006711
level	core indexes multi	0.014493
the symmetric difference of two index	indexes index symmetric difference other result_name	0.166667
one or more existing columns	keys drop append	0.250000
installed version of openpyxl is supported parameters	compat is compat major_ver	0.111111
handle na filling of take	take fillable values indices	0.250000
array object has	core dtypes	0.018519
reshape data (produce a "pivot" table) based on	data frame pivot index columns	0.200000
csv file	from csv cls path sep parse_dates	0.066667
to accelerate unioning	index union many others	0.040000
an expression	core computation	0.047619
if it has	core series	0.008000
cross sectional for a given	block manager fast xs	0.250000
new unit if needed	new cls unit tz	0.055556
boolean if we are a single	manager is	0.100000
the float values converted into strings using	io formats float array formatter get result as	0.055556
rolling	core rolling apply	1.000000
value from 1-dimensional ndarray	core indexes index set value arr key value	0.038462
packed bytes	msgpack packb	0.025641
'name' parameter for general index and	indexes index validate	0.066667
internal property property synonym	ndframe	0.005025
to target time zone	tz axis	0.500000
called upon unpickling rather than the	new datetime index cls d	0.111111
1-dimensional ndarray	core indexes	0.004762
of objects to a timedelta index	listlike arg unit box errors	0.142857
not in	not in	1.000000
the float	float array formatter get result as array	0.055556
to apply we are stripping all	apply	0.026316
a block of same	core block make block same	0.333333
used	html frame parser	0.012658
abstract base class for delegating methods/properties	pandas delegate	0.166667
future release	categorical reshape new_shape	0.142857
a compat for our index	index	0.002004
along a given axis	axis	0.011364
list-like indexer return	indexes interval index convert list indexer keyarr kind	0.066667
a copy of	copy	0.025641
necessary	core	0.001326
outside world format currently just the ndarray	core block external values dtype	0.125000
of the required package	package pkg_name min_version max_version app	0.083333
a nice str repr	core window unicode	0.071429
convert to our native types	core categorical block to native types slicer	0.250000
should be empty except for allowed	allowed	0.090909
temporarily setting a locale	locale new_locale lc_var	0.250000
result as series or by a series	groupby by axis level	0.045455
_convert_string_array	io unconvert string array data	1.000000
value to	float array formatter value	0.250000
read an	generic fixed read	1.000000
multiindex from	multi	0.018182
return the	series	0.006757
of the flattened values of	ravel order	0.037037
csv file (discouraged please use :func pandas read_csv	csv cls path header	0.066667
only use this if	value	0.005155
sets names on levels warning	indexes multi index set names names level validate	0.200000
monotonic	monotonic	0.666667
the underlying	indexes datetime index ops mixin	0.029412
ordered multiindex compute the	core indexes multi	0.014493
handles preprocessing for cut where we	reshape preprocess for cut x	0.200000
value from 1-dimensional ndarray	datetime index get value series	0.071429
to shift without copying data the shifted data	slice shift periods	0.083333
convert to object if we are a categorical	indexes multi index to safe for reshape	0.333333
for series	method series	0.333333
object for datetimelike properties of	timedelta properties	0.052632
new freq essentially a	core resampler asfreq fill_value	0.066667
am never a	block is	0.045455
the reduction type operation if	core index ops mixin reduce op name	0.083333
algos groupsort_indexer implements counting sort and	index sorter group_index ngroups	0.250000
downsample the cython defined	downsample how	0.200000
need to coerce	index coerce	0.125000
return the number of bytes in the	core indexes range index nbytes	0.052632
file node must already	value format	0.016667
for	core ndframe	0.025253
to be applied on each value to	value formatter float_format threshold	0.100000
lookup of value from 1-dimensional ndarray only use	arr key value	0.038462
number of bytes in the underlying	core indexes range index nbytes	0.052632
update index attributes e g freq depending on	core indexes timedelta index maybe update attributes	0.200000
my self as a	core sparse sparse series as	0.125000
maps[0] raise keyerror is maps[0]	compat chain	0.034483
in panel to	core panel to	0.027027
an asof merge this is similar to a	reshape merge asof	0.071429
with its hexadecimal representation used to tag	replacer x	0.125000
in the series extract groups	core str extract	0.071429
series extract groups from	extract frame	0.047619
try to read from	io read obj	0.058824
attributes e g	attributes attrs	0.166667
a new multiindex from	multi index	0.020000
from 1-dimensional ndarray only use	set value arr key	0.023810
swap level i with	indexes multi index swaplevel i	0.333333
single non-tuple indexer which could be a slice	indexer indexer target	0.071429
window	window	0.357143
class for mocking deprecated modules	deprecated module	1.000000
of the values	axis	0.011364
return the ftypes (indication	ndframe ftypes	0.055556
as series or by	groupby by axis level	0.045455
we might need to coerce	coerce freq	0.125000
a list/array of tuples	tuples	0.111111
dtype and n/a	get empty dtype and	0.125000
1d array	intervals cls data name	0.250000
result to our original type we	result result dtype	0.200000
our native types format slicing	native types slicer na_rep float_format decimal	0.200000
interpolate values according to different methods	core resampler interpolate method axis limit inplace	0.166667
apply we	by mixin apply func	0.050000
parameter if	categorical validate ordered	0.055556
sql statement that create a	io sqlite table create	0.066667
that we have	validate ordered cls	0.055556
value from	index set value arr key value	0.038462
draw histogram of the	plotting hist frame	0.200000
sets names on	index set names names	0.200000
return the actual ne	core computation condition bin op	0.333333
spreadsheet-style pivot table as a dataframe the	reshape pivot table data values index columns	0.166667
series or by a series of	groupby by axis level	0.045455
specialized intersection for datetimeindex objects may be much	intersection	0.041667
if s is	s	0.125000
csv file (discouraged please	csv cls path header	0.066667
elements	size	0.041667
index to be returned from apply if as_index=true	with as index b	1.000000
block manager from a dataframe of	manager sdf	0.052632
node must already exist and be	key	0.005051
of the values to be at least 1	values	0.008547
attempt to construct this type from	interval dtype construct from string	0.166667
the 'numpy' library the	with convert convert args kwargs	0.055556
fully reindex-output to	data frame group by reindex output result	0.045455
the manager	mgr data index	0.333333
axis omitted where alternately any or all of	axis how thresh subset	0.100000
iterate over	io html frame parser	0.012195
sparse/dense and dtype) in	core	0.001326
specialized intersection	datetime index intersection	0.142857
month and day_of_month	semi month begin	0.166667
parse the raw data into a list	html frame parser parse raw data rows	0.250000
with	core indexes datetime	0.011494
return the formatted	formatter func	0.333333
read csv file (discouraged	data frame from csv cls path	0.066667
where statement is of the	where w	0.083333
dtype converting	dtype	0.010989
concat_axis	concat_axis	1.000000
a	core categorical	0.041667
optional positional and keyword arguments	optional	0.050000
a string	cls string	0.125000
interpolate values	resampler interpolate	0.166667
use this	indexes index	0.007353
downsample the cython defined	resampler downsample how	0.200000
single element pandasobject	core	0.001326
a string representation for a particular object	string mixin bytes	0.333333
for table	table	0.010870
the required package	package pkg_name min_version max_version	0.083333
return a copy of a series	series	0.006757
insert item at selected position	manager insert loc item value allow_duplicates	1.000000
file node must already exist and	format	0.012346
apply we are stripping all	mixin apply func	0.050000
of whether each index value is found in	indexes datetime index ops mixin isin	0.083333
whether or not the 'parse_dates' parameter is	io validate	0.031250
expanding count of number of	expanding count arg freq	0.200000
can be	frame parser	0.012500
particular dataframe invoked by unicode df in	frame unicode	0.166667
valid stata	stata	0.022222
that left and right dataframe are equal	util assert frame equal left right check_dtype check_index_type	0.333333
the data & release the memory	col take data	0.055556
representing a frequency guess generated by infer_freq	core indexes datetime index ops mixin inferred freq	0.250000
the dtypes in this object	ndframe dtypes	0.333333
iterate over the	html frame parser build	0.014706
dtype	value dtype errors	0.333333
number of bytes in the underlying	range index nbytes	0.052632
data to ndarray raises on	core indexes index coerce to ndarray cls	0.166667
a resample of a groupby implementation	period index resampler groupby	0.166667
that we	dtype	0.010989
string starting at the end	rsplit arr pat	0.037037
a panel-like dataframe	core panel index time panels names	0.076923
tree-like object that can be used to iterate	io html frame parser build	0.014706
using the	core	0.001326
a simple	crosstab index	0.066667
object datetimeindex timedeltaindex and	dtypes	0.015873
indices where elements of v should be inserted	core indexes frozen ndarray searchsorted v	0.033333
list replace	block manager replace list	0.500000
ordered attribute	core categorical get ordered	0.333333
1-dimensional ndarray only use	core indexes index set value arr	0.023810
before_day_of_month	before_day_of_month	1.000000
am	block is	0.045455
add numeric operations to the	core group by add numeric operations cls	0.250000
to apply we are stripping	core group by mixin apply func name	0.050000
is	indexes datetime index	0.007634
returns the float values converted into strings	formats float	0.055556
datetime to the	dt to	0.125000
a single element	core ndframe	0.005051
type window_type and size window on the data	stats rolling window arg window win_type	0.100000
given offset/observance to a datetimeindex	rule	0.050000
called	core indexes	0.009524
called	series array wrap result	0.100000
for selected item ndarray	item fastpath	0.333333
validates that we have a	core categorical validate	0.055556
of unique elements of arr1	util equal contents arr1	0.066667
i am never	categorical block	0.100000
the block manager from	manager sdf columns	0.052632
series columns for dataframe and major_axis for	core	0.001326
grouper indexers	grouper obj	0.142857
are passed a list-like indexer return the	index convert list indexer keyarr kind	0.066667
draw histogram of the dataframe's series	hist frame	0.200000
the flattened values of the underlying data see	core indexes index ravel order	0.037037
operations to convert timedelta-like to	td index cmp opname	0.055556
elements of v should be inserted in	core indexes frozen ndarray searchsorted v	0.033333
singular 'name' parameter for general index and	indexes index validate names	0.066667
add the	core ndframe add	0.500000
must	io hdfstore	0.014493
slice the info axis	get info slice	0.500000
cacher	cacher	0.857143
dict associating each variable name a dict associating	stata reader value labels	0.142857
multiindex at the	indexes multi	0.014493
for series columns for dataframe and	core	0.001326
prior to	prepare	0.071429
to beginning	tseries date offset beg	0.166667
and return the block manager from	to manager sdf	0.052632
provided encoding	fh encoding compat is_verbose	0.200000
with null values	args values	0.083333
fast lookup of value from 1-dimensional ndarray only	datetime index get value	0.071429
path's extension	excel writer check extension	0.250000
lookup of value from 1-dimensional ndarray only	period index get value series	0.071429
the periodindex	core indexes period	0.032258
by hashing its categories and then mapping	c encoding hash_key	0.200000
our native types format slicing	native types slicer na_rep date_format quoting	0.200000
node must already exist	hdfstore append key value	0.016667
dtype and n/a values	empty dtype and	0.125000
td elements from a row	io html frame parser parse td obj	0.083333
return label for first non-na/null value	core series first valid index	0.250000
algos groupsort_indexer implements counting sort and	core get group index sorter group_index ngroups	0.250000
csv file (discouraged please use :func pandas	frame from csv cls path	0.066667
series extract groups from	extract arr	0.066667
an intervalindex from	core indexes interval index from arrays cls	0.166667
the operations to the cls evaluate the doc	operations cls	0.076923
sorted by the n largest	nlargest n	0.333333
list of term	term	0.083333
must already	key value format	0.016667
ndframe before and/or after some particular index value	core ndframe truncate before after axis copy	1.000000
interval or intervalindex return the corresponding interval with	interval	0.029412
implement	datetime tzblock	0.100000
multiindex from the cartesian product	indexes multi index from product	0.166667
values to be at least	values	0.008547
take a string-like that is object dtype and	convert string array data encoding	0.038462
config	config	1.000000
return slice points for level 0 assuming	indexes multi index bounds	0.166667
calculate datetime	indexes datetime	0.011494
single element	core	0.001326
return result block from the result	core block	0.010870
filter_level	filter_level	1.000000
create a new block with	block make block	0.100000
return the bool of a single element pandasobject	ndframe bool	0.055556
a temporary variable to the	tmp value	0.166667
hack to accelerate unioning a collection of indexes	core indexes datetime index union many others	0.040000
pandas object stored in file	io hdfstore	0.014493
return	sparse sparse array get	0.500000
set my pandas type	fixed set	0.200000
i am	core	0.001326
called prior to	prepare result	0.111111
map the axis to the block_manager	get block manager	0.166667
compute a	core reshape crosstab index columns values	0.066667
we take a string-like that	convert string array data encoding	0.038462
mask of index to be returned	index	0.002004
names to 'index' for	default names data	0.083333
bounds for	bounds	0.125000
handle 2-d slices equiv	core panel apply 2d func	0.200000
for each group	group by	0.064516
datetimelike properties of the	properties	0.046512
series dropna if fill_value=nan returns a dense series	sparse series dropna axis	1.000000
read csv file (discouraged please use	frame from csv cls	0.066667
arr	arr new_shape	0.142857
from a	from	0.151515
try to	try convert data	0.200000
falls on sunday use day thereafter	tseries sunday to	0.200000
full scope	core computation scope full scope	0.055556
we have	core categorical validate	0.055556
converts json lists to	to	0.006329
a fixed frequency datetime index with business day	core indexes bdate range start end	0.083333
function elementwise updating	formats styler applymap func subset	0.333333
index objects contain	indexes index	0.007353
result block s from the	block where other cond align raise_on_error	0.066667
of the values to be	block shape values	0.050000
from 1-dimensional ndarray only use this	value arr	0.023810
an array	hash array vals	0.083333
implementing the	group	0.027027
td elements from a	html frame parser parse td obj	0.083333
a list of sql statement that create a	io sqlite table create	0.066667
for an ordered multiindex compute the	core indexes multi	0.014493
that create a table reflecting	create table setup	0.066667
node must already exist and	hdfstore append	0.016667
the underlying data	indexes range	0.062500
bytes in the	core indexes range index nbytes	0.052632
series excluding elements from groups	core series group	0.030303
wrap op	sparse wrap	0.500000
manager with the	manager	0.058824
a multiindex and the index	index	0.002004
use this if	arr	0.013699
nat which has the	nat new	0.050000
returns -1 in the na case	core nanargmin values axis skipna	1.000000
index	indexes index maybe	1.000000
for an ordered multiindex	indexes multi index	0.013158
add in comparison methods	indexes index add comparison methods cls	1.000000
make a scatter plot from two dataframe	plotting scatter plot data x	0.125000
& release the memory	data col take	0.333333
downsample the cython defined function	core period index resampler downsample how	0.200000
passed type is an	core dtypes interval dtype is	0.066667
number of unique elements in	index ops mixin nunique dropna	0.083333
integer stride parameters	stride from	0.333333
is	io table is	1.000000
the decimal points if	io formats	0.027778
given axis omitted where alternately any	frame dropna axis how thresh subset	0.100000
table in file node must	io	0.003012
(attr formatted_value)	datetime index ops mixin format attrs	0.142857
this function is called via the 'numpy' library	take with convert convert args	0.055556
call a numpy function on a pandas object	call	0.071429
rands	rands	0.833333
block if we	core block	0.010870
of an	core indexes index	0.007042
reset the display options for printing	reset display options	0.200000
file node must already exist and	value format	0.016667
with nat which has	nat new	0.050000
shift without copying data	core ndframe slice shift periods axis	0.083333
value from 1-dimensional ndarray only	core indexes categorical index get value series	0.100000
sure that we have a fully reindex-output	data frame group by reindex output result	0.045455
using one or more existing	keys drop append inplace	0.166667
node must already	hdfstore append key value	0.016667
arr1	util equal contents arr1	0.066667
for header rows in multiindex	io pop header name	0.100000
elements of v should	v	0.026316
array return an array of	hash array vals	0.083333
sorted copy	ops mixin sort values return_indexer ascending	0.250000
a single non-tuple	target	0.083333
last non-na/null value	series last valid index	0.250000
to create the grouper indexers	grouper obj key axis	0.142857
offset only if not on offset	offset	0.055556
check that left and right index are equal	index equal left right exact	0.333333
a scalar to a compat	scalar to	0.100000
try to cast the	try cast	0.500000
replacer	replacer	1.000000
old_arg_name	old_arg_name	1.000000
left and	left	0.129630
are index sliceable then return my	convert to index sliceable obj key	0.083333
have	categorical	0.009615
a subclass of styler with	styler	0.022222
need to coerce a scalar	indexes period index coerce scalar	0.250000
casting data from some accepted dtype	casting cls data	0.047619
index or	index	0.002004
returns true if categoricals are the same	equal other	0.250000
set of _constructor_sliced-like objects to	core panel homogenize dict frames intersect dtype	0.066667
or sunday use previous friday instead	tseries previous friday	0.250000
'numpy' library the third	numpy validate take with convert convert args	0.055556
get integer location	core indexes multi index get loc	1.000000
for series arithmetic operations	sparse arith method op	0.333333
checks	util check	0.500000
wrap long strings in	wrap arr	0.250000
a tuple of the	core	0.001326
compute count of group excluding missing	core data frame group by count	0.500000
close it if we opened it	io to hdf path_or_buf key value mode	0.166667
packer for	io msgpack	0.025000
nat which has	nat new	0.050000
and string-like array to convert object dtype	core dtypes maybe convert string to object values	0.142857
the float values converted into strings	formats float array formatter get result as array	0.055556
returns *copy* of	indexes frozen ndarray values	0.250000
accelerate unioning	indexes datetime index union many others	0.040000
ndarray only use this	index set	0.022727
tuple of axis dimensions	core ndframe shape	0.200000
a resample of a groupby implementation	index resampler groupby	0.166667
check that left and right index are equal	almost equal left right check_exact check_dtype	0.333333
(header new_data) for header rows in	header name row index_col	0.200000
returns a multi-index suitable for a panel-like dataframe	panel index time panels names	0.076923
an axes dictionary for myself	core ndframe construct axes dict axes	0.166667
dataframe in panel to a	core panel to	0.027027
a numpy / pandas type	table type x	0.055556
produce 'pivot' table based on 3 columns	reshape slow pivot index columns values	0.500000
type window_type and size window	stats rolling window arg window win_type	0.100000
is called upon unpickling rather than the default	index cls d	0.083333
determine if each string	core str match	0.166667
add	core panel add aggregate	0.500000
if each value is nan	ops mixin isnan	0.500000
of datetimetzdtype this metaclass determines subclass ability	datetime tzdtype type	0.500000
of the minimum values along an axis	core indexes datetime index ops mixin argmin axis	0.250000
to coerce a scalar to a	coerce scalar to	0.071429
add in categorical accessor methods	indexes categorical index add accessors cls	1.000000
make a multiindex	indexes multi index	0.013158
the series/index to	core str	0.011364
from 1-dimensional ndarray only	index set value	0.023810
update index attributes e g freq depending on	datetime index maybe update attributes attrs	0.200000
hack to accelerate unioning a collection	indexes datetime index union many others	0.040000
delimiter string starting at the end of	rsplit	0.031250
list of the	tolist	0.071429
convert tz-aware datetimeindex from	datetime index tz convert tz	0.166667
a string-like that is object dtype	io convert string array data encoding	0.038462
do a list replace	manager replace list src_list dest_list inplace regex	1.000000
suitable class to	hdfstore create storer group format value append	0.333333
already	io hdfstore append	0.016667
checks that path's extension against	extension cls	0.125000
from 1-dimensional ndarray only use this if	indexes index	0.007353
gets	array wrap result	0.075000
load data from google bigquery	gbq query project_id index_col col_order	0.250000
called after a	core indexes period index array wrap result	0.050000
convenience function	xi yi x order	0.500000
result will respect the	ascending sort_remaining	0.200000
the values to be at least 1 d	core block shape values	0.050000
input data_columns and min_itemize and create a data	table validate data columns data_columns min_itemsize	1.000000
a series	core series	0.024000
to write text representation of object to the	ndframe to	0.043478
to handle na filling of take	take fillable values indices allow_fill fill_value	0.250000
return a formatter	get	0.007143
attempt to infer better dtype	ndframe convert datetime numeric timedelta coerce	0.071429
have a	categorical	0.009615
a series to the given number	series	0.006757
update index attributes e	timedelta index maybe update attributes attrs	0.200000
curve with holidays between start_date and	calendar holidays start end return_name	0.066667
node	append	0.012987
iterate over the	io html frame	0.012987
tuples of the (attr formatted_value)	mixin format attrs	0.142857
code to a	code	0.076923
wrap long strings in	wrap	0.019231
to a common sparseindex corresponding to	homogenize series_dict	0.047619
an positional	core ndframe indexer has valid positional setitem	0.250000
return a version to operate on	datetime like block mixin try operate values	0.333333
is not supported for panel objects and	core panel to sparse	0.037037
of value from	core indexes index set value arr key value	0.038462
rearrange index levels using	core series reorder levels	1.000000
to write text representation of object to	ndframe to	0.043478
to class python 2 and	cls name func	0.125000
values return a block if we are	core block	0.010870
array of python datetime date objects (namely the	datetime	0.006711
locales that are available on the system	locales prefix normalize locale_getter	0.125000
value from	key value	0.011628
of datetime time the time part of the	core indexes datetime index time	0.166667
string representation for this object	frozen ndarray unicode	0.083333
coerce values and other to dtype 'i8' nan	datetime block try coerce args values other	1.000000
perform the reduction type operation if	index ops mixin reduce op name axis	0.083333
ndarray argsort argsorts the	argsort	0.038462
data visualization algorithm parameters	frame class_column ax color	0.200000
file node must	io	0.003012
reindex for	ndframe reindex	0.125000
series using mapper dict or	level as_index	0.111111
number of	indexes multi index	0.013158
construct an intervalindex from a 1d array	index from intervals cls data	0.125000
return a boolean if this key is in	contains key	0.125000
a pandas only	pandas	0.035714
a ufunc	indexes period index array wrap result context	0.041667
gets	categorical	0.019231
distance	dmin dmax	0.250000
dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis	1.000000
the indexer fill with the	nd indexer	0.015152
format files	format	0.012346
convert tz-aware axis to target time	core ndframe tz convert tz axis level	0.200000
to next offset only if not on offset	offset rollforward dt	0.500000
return the size of the	itemsize	0.027027
try to cast to the specified dtype	dtype result dtype	0.142857
the indices of the minimum	ops mixin argmin	0.166667
ensure that they are valid stata	io stata writer	0.142857
to table in file node must already exist	hdfstore append key value format	0.016667
handle na filling of	fillable values indices allow_fill fill_value	0.125000
'info axis' see indexing for more this is	keys	0.032258
must already	key	0.005051
the table from the	io table	0.062500
index or ndarray filled with nat which has	core indexes datetime index ops mixin nat new	1.000000
the values to be at least	shape values	0.050000
types format slicing if desired	types slicer na_rep float_format decimal	0.200000
memory usage of my values	core indexes range index memory usage deep	0.200000
which has bin edge values	bins generic values binner closed	0.200000
return a boolean whether this axes needs validation	core ndframe indexer should validate iterable	0.166667
recursively evaluate an expression in	core computation bin op call env	0.250000
values as an enumerated type	factorize values sort	0.111111
axis omitted where alternately any or all	axis how thresh subset	0.100000
in file	io hdfstore append key value	0.016667
i : int slice or sequence of	core data frame ixs i	0.200000
specified categories	categories	0.125000
a unified inteface datetimelike index	datetime index	0.007042
convert string-like and string-like array to convert object	maybe convert string to object	0.142857
the padded hexadecimal id	core computation raw hex id	0.166667
if	series	0.006757
block manager from a	core sparse to manager sdf columns	0.052632
format return python	datestr	0.125000
convert to our native types format slicing	block to native types slicer na_rep date_format	0.250000
cast	timestamp	0.166667
necessary	sparse sparse array	0.043478
after a	core series array	0.100000
block	block mgr	1.000000
compute standard deviation of	by std ddof	0.166667
table in file	key	0.005051
read csv file (discouraged please	series from csv cls	0.066667
be table	io hdfstore append key value	0.016667
lookup of value from 1-dimensional ndarray only use	indexes categorical index get value series	0.100000
set my state	index col set	0.500000
other	numeric binop other	1.000000
implement	tzblock	0.076923
the caption on a	caption caption	0.166667
bounds for	to bounds	0.500000
ensure that they are valid stata	io stata	0.071429
of the kinds allowable columns for this object	io table queryables	0.055556
swap levels i and j in a	ndframe swaplevel i j	0.333333
are a view	view	0.043478
a delegatedclass of a series that is datetimelike	to datetimelike data copy	0.125000
using indicated encoding	arr encoding errors	1.000000
return the number of bytes in the	indexes multi index nbytes deep	0.052632
an xarray object from	to xarray	0.125000
styles to html	formats	0.031250
return	get values	0.250000
path's extension against the	excel writer check extension cls	0.125000
key and are	key	0.005051
we have an object dtype try	core dtypes maybe	0.166667
with nat which has the same length as	nat new	0.050000
node	append key value	0.016667
a nice str repr of our	window unicode	0.071429
a 1d array	intervals cls	0.250000
compilable	compilable	0.714286
ensure that we are re-localized	index ops mixin ensure localized result	1.000000
align a	core computation align	0.250000
the reduction type operation if we	index ops mixin reduce op name axis skipna	0.083333
for a tz-aware type return an encoded zone	tz tz	0.066667
of each interval in the index	interval index	0.090909
startrow	startrow	1.000000
xport format return	sas parse	0.066667
my self as a sparse	series as sparse	0.250000
scalar to a compat for our index	scalar to index	0.333333
append to : write out the	write	0.017857
ndarray	value	0.005155
to a set of	to	0.006329
'kwargs'	kwargs	0.066667
name this allows simpler access to	core ndframe setattr name value	0.166667
function to my values	func	0.011905
read html tables into a	io read html io match flavor header	0.200000
integer stride parameters	tseries resolution get stride from	0.333333
entries in index	make custom index	0.250000
the 'numpy' library the third	with convert convert args kwargs	0.055556
a singular 'name' parameter for general index and	core indexes index validate	0.066667
returns first n rows of each group	core group by head n	1.000000
at	core ndframe at	0.333333
only use	core indexes index set value	0.023810
gets called after a	core indexes index array	0.100000
we have mixed	core indexes multi index have mixed	0.166667
to dataframe parser that uses	frame parser	0.025000
we if the passed type is	dtypes interval dtype is	0.066667
localize tz-naive	period index tz localize	1.000000
index	indexes index validate	0.066667
a new unit if needed	tzdtype new cls unit tz	0.055556
a column by inferring dtype	name data use_dtypes convert_dates	0.500000
the number of bytes in the	range index nbytes	0.052632
is a categorical	core indexes categorical	0.071429
to its corresponding json_table	io json as json	0.333333
a html representation for a particular dataframe	data frame repr html	0.333333
for dataframe major_axis for panel	ndframe iteritems	0.055556
for creating a class with a metaclass	compat add metaclass metaclass	0.125000
tree-like object that can be	build	0.013514
of	core indexes index set value arr key	0.023810
if we	core indexes	0.004762
supported for panel objects and will raise an	core panel to	0.027027
to table in file node must already exist	io hdfstore append key value format	0.016667
return datetimeindex with times	core indexes	0.004762
set our table type & indexables	io table set attrs	1.000000
to apply we are stripping all of	core group by mixin apply func name	0.050000
called after a ufunc needs additional handling	core indexes period index array wrap result context	0.041667
stderr in a buffer so that it can	stderr	0.076923
use_eng_prefix	use_eng_prefix	1.000000
use this if	core indexes index set value arr	0.023810
the given offset/observance	rule	0.050000
over the blocks collect and create	reduction f axis consolidate transposed	0.062500
the frequency is	freq	0.016129
plural 'names' parameter for multiindex	names name names deep	0.125000
values can be any	values name freq	0.166667
flattened values of the underlying data see also	index ravel order	0.037037
determines if two index objects	indexes index equals other	0.200000
specialized intersection	core indexes datetime index intersection	0.142857
categories	categorical get categories	0.333333
values between particular times	ndframe between	0.100000
of the (attr formatted_value)	core indexes range index format attrs	0.142857
create a table reflecting	create table setup	0.066667
read csv	from csv cls	0.066667
groupby objects	by	0.038462
the intersection of two index	core indexes range index intersection other	0.083333
add	core panel add	0.500000
series or by a series of	groupby by axis	0.045455
if we if the passed type is an	is	0.005291
must already exist and be table	key value format	0.016667
return the data & release the memory	data col take data	0.111111
csv file (discouraged	frame from csv cls	0.066667
index with business	indexes bdate	0.050000
symmetric	symmetric	0.750000
a set of kwargs	kwargs cls	0.040000
datetimeindex from one time	indexes datetime index	0.007634
return a slice of	slice slicer	0.087719
concatenation of an datetimelike array of	dtypes concat datetime to_concat axis	0.125000
the locales	locales	0.090909
return the join	reshape merge operation get join	1.000000
the function returns	io formats get	0.100000
that can be used	io html frame	0.012987
build an xpath expression	build xpath expr	0.200000
is called upon unpickling	new interval index cls d	0.333333
the bool of a single element pandasobject	ndframe bool	0.055556
index	indexes bdate	0.050000
the totally ordered cartesian product of	core get group index labels shape sort xnull	0.066667
return a tree-like object that can be used	io html frame	0.012987
return	io formats get	0.100000
apply of dateoffset to datetimeindex raises notimplentederror	date offset apply index i	0.333333
to s-s	diff arr	0.200000
the intersection of two index objects	core indexes range index intersection other	0.083333
checking function of type t or tuple of	type t	0.083333
a deprecated option and if so prints a	core warn if deprecated	0.166667
series arithmetic operations to avoid code duplication	series op name str_rep	1.000000
the size of the dtype of the	itemsize	0.027027
we are index sliceable then	convert to index sliceable	0.083333
convert sparseseries to	to dense sparse_only	0.500000
options for printing	options	0.041667
typs	typs	0.833333
to apply we are stripping	mixin apply func name	0.050000
1-dimensional ndarray only use	indexes	0.004651
values according to indexer and return	indexer axis	0.043478
ordered multiindex compute	core indexes multi index	0.013158
matrix multiplication with dataframe or inner-product with	dot other	1.000000
from 1-dimensional	arr key	0.023810
return the td elements from a	parser parse td obj	0.083333
argsort argsorts the	core series argsort	0.083333
to deprecate a keyword argument	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
by default	sort values	0.500000
x not in y if possible	core computation not in x y	0.066667
take a string-like that is	convert string array	0.038462
that can be used to iterate	parser build	0.014706
index objects and sorts if	core indexes range index	0.021277
to deprecate a keyword argument of a function	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
this is	reshape	0.037037
how to create the grouper indexers	grouper obj key axis level	0.142857
sanitize input data to	core sanitize array data index dtype	0.250000
given a 1d array return an array	hash array vals	0.083333
are passed a list-like indexer return	index convert list indexer keyarr kind	0.066667
object o and return	o	0.043478
if we are	safe for reshape	0.400000
the op	core computation bin op	0.055556
in	hdfstore append	0.016667
to its values attribute if it	core	0.001326
comparison operations to convert timedelta-like	indexes td index	0.055556
if we can set a locale	util can set locale	0.333333
csv file (discouraged please use :func pandas	frame from csv	0.066667
return an indexer for	index get	0.040000
the underlying	datetime index ops mixin	0.029412
function to convert datetimelike-keyed dicts to timestamp-keyed dict	core dict compat d	0.142857
resolution str against resolution	resolution	0.125000
of tuples	tuples cls data closed	0.250000
string starting at the end of the string	rsplit arr pat	0.037037
indexes give a	indexes index	0.007353
return the block manager from a dataframe	to manager sdf columns	0.052632
result block from the	block	0.008197
read csv file (discouraged please	series from csv cls path sep parse_dates	0.066667
nice str repr of our rolling object	window unicode	0.071429
and dtype) in this	core	0.001326
: write out the	write	0.017857
manipulation result has the	constructor	0.040000
description	description complib complevel	0.500000
pandas type to its corresponding json_table	json as json table type	0.250000
iterables you should probably use pprint_thing()	formats pprint dict seq _nest_lvl max_seq_items	0.333333
that an positional	positional	0.111111
the index	reset index	0.125000
going to write	write	0.017857
the bool	core ndframe bool	0.055556
first day of the month	month begin	0.111111
hash a categorical by hashing its categories and	hash categorical c encoding hash_key	0.500000
dataframe parser that uses	frame parser	0.025000
and if so prints	core warn if	0.333333
panel objects	core panel to sparse	0.037037
resample	timedelta index resampler	0.066667
tree-like object that can be used to iterate	build	0.013514
class	by	0.038462
datetimelike properties of the	timedelta properties	0.052632
moving window of type window_type and size window	window arg window win_type min_periods	0.100000
numexpr condition and filter	core computation expr evaluate	0.200000
underlying data which is	index	0.002004
annual	annual	1.000000
called via the 'numpy' library	numpy validate take with convert	0.055556
according to indexer and	indexer	0.018349
the maximum by	max subset	0.166667
delimiter string starting at the end	rsplit arr pat	0.037037
be table	io	0.003012
function elementwise updating the html representation	io formats styler applymap func subset	0.083333
datetime time the time part of the timestamps	core indexes datetime index time	0.166667
the array interface return	index array dtype	0.125000
type to	table type	0.055556
take	take nd arr	0.125000
series or by a series	groupby by axis	0.045455
see if a url has a	url url	0.045455
construct and	ndframe construct	0.333333
the values & release the memory	index col take data	0.111111
convert to our native types format slicing if	block to native types slicer na_rep quoting	0.250000
at	ndframe at	0.333333
etc' nentries - number	nentries nlevels prefix	0.250000
of bytes in the underlying data	indexes range index nbytes	0.052632
for writing stata binary	to stata fname	0.200000
of tuples of the (attr formatted_value)	indexes range index format attrs	0.142857
the expected	expected	0.083333
to indexer	indexer	0.018349
indexer and	indexer axis	0.043478
helper to call encode before writing	stata writer write to_write	0.083333
called after a	indexes index array wrap	0.100000
index to be used	reshape concatenator	1.000000
and return slice points for level 0 assuming	core indexes multi index bounds	0.166667
internal format currently just	core block internal values dtype	0.111111
an iterable but not a	iterable not	0.250000
get lines 0) there are headers on row	io python parser get	0.166667
xarray	xarray	0.555556
overrides ndarray argsort	argsort	0.038462
whether	io validate	0.062500
dateoffset increments between calendar year ends	year end	1.000000
reduction type operation if we	index ops mixin reduce op name axis	0.083333
maps[0] raise keyerror	compat	0.030303
outputs rounded and formatted percentiles	format percentiles percentiles	1.000000
apply we are stripping	group by mixin apply	0.050000
checks whether the	python parser check for	0.500000
the built up styles to html	styler	0.022222
interpolate values according to different	resampler interpolate	0.166667
an	indexes categorical index	0.095238
to coerce a scalar to a	indexes period index coerce scalar to	0.071429
only applicable	series group by	0.142857
block s	block where other cond align	0.166667
if	indexes index set value	0.023810
csv file	from csv cls path	0.066667
result to have	result name	0.500000
validate percentiles used by describe	core ndframe check percentile q	0.333333
to coerce	tseries maybe coerce freq	0.125000
(e g convert back to bool/int	core dtypes maybe downcast to dtype	1.000000
column by	name data	0.250000
after a ufunc needs additional handling	context	0.023810
create and setup my atom from the block	io data col set atom block block_items	0.200000
index with target's values (move/add/delete	core indexes multi index	0.013158
is called via the 'numpy' library the third	numpy validate take with convert convert	0.055556
checks if key	key	0.005051
regular expression	flags	0.117647
datetimelike dtype	datetime value dtype	0.166667
index	timedelta index maybe	0.250000
padded hexadecimal id of	core computation raw hex id	0.166667
a new block (of	block setitem indexer	0.066667
we by definition have	formats datetime64formatter format strings	0.090909
ndarray only use this	core indexes index set value arr key	0.023810
we have a	core categorical	0.013889
numpy array of python datetime	indexes datetime	0.011494
put single value at passed column and index	value index col value takeable	1.000000
create a new unit	tzdtype new cls unit	0.055556
read text from clipboard and	io read clipboard sep	0.200000
compat	compat	0.151515
handling as	period index array wrap	0.050000
render a dataframe	data frame	0.017143
fast lookup of value from 1-dimensional ndarray	core indexes datetime index get value	0.071429
the frame to its numpy-array representation	core ndframe as matrix columns	0.200000
a new unit if needed otherwise	tzdtype new cls unit	0.055556
set the dataframe index row	core data frame set index	0.333333
apply a function elementwise updating the html representation	io formats styler applymap func subset	0.083333
rangeindex	indexes range index	0.042553
used to	html frame parser	0.012658
general index	core indexes index validate names	0.066667
frequency guess generated by infer_freq	ops mixin inferred freq	0.250000
to write	write obj	0.041667
a new sparsearray from the	sparse sparse data	0.076923
exist	io	0.003012
to shift without copying data the	ndframe slice shift periods axis	0.083333
curve with holidays	abstract holiday calendar holidays start end return_name	0.066667
remove and return	chain	0.031250
to control get_slice_bound	index get loc only exact matches key	0.142857
and index	set value index	0.333333
return whether i am an	io index	0.111111
create the description	create description complib	1.000000
the process of casting data from some accepted	indexes numeric index assert safe casting cls data	0.047619
and expected error message	exc_type exc_value trace_back	0.100000
we need to coerce a scalar to	indexes period index coerce scalar to	0.071429
an expression in	computation	0.038462
new dataframe with	data frame	0.005714
of the kinds allowable columns	table queryables	0.055556
numpy array of datetime time the	datetime	0.006711
calculate slice bound that corresponds to given label	index get slice bound label side	1.000000
of two or more factors by default	reshape crosstab index columns values rownames	0.333333
index or minimum along an axis	index ops mixin min axis	0.333333
array of python datetime date objects (namely the	indexes datetime	0.011494
already exist and be table	io hdfstore append key	0.016667
inplace conform	core computation bin op conform	1.000000
is an internal non-public method*	core indexes categorical index is dtype compat other	0.500000
downsample the cython defined	resampler downsample	0.200000
gets the	categorical get	0.200000
are datetime	index is	0.083333
to a common sparseindex corresponding to the locations	homogenize series_dict	0.047619
data	data frame	0.011429
the where condition cond on a and b	computation where cond a b	0.500000
we always want to return	index shallow copy with infer values	0.200000
for series columns for dataframe and major_axis	core	0.001326
the where condition cond on a and b	core computation where cond a b raise_on_error	0.500000
columns under the index names defaulting	index level drop inplace col_level	0.166667
checks whether the frame	formats data frame	0.090909
the (attr formatted_value)	core indexes index format attrs	0.142857
object	html	0.011765
tree-like object that	html frame	0.014706
a masked rec array and create	core masked rec array to	0.090909
the end of this frame	data frame	0.005714
the boxed	datetime	0.006711
compute a	crosstab index columns values	0.066667
of value from	indexes index set value arr key value	0.038462
unit	unit tz	0.125000
from 1-dimensional ndarray only use this	indexes index set value arr	0.023810
insert	insert loc	1.000000
return a boolean if we	core indexes is	0.166667
return a	core sparse sparse array get	0.500000
a simple	columns	0.017857
a unified inteface datetimelike	datetime	0.006711
this	core ndframe	0.010101
internal property property synonym for as_blocks()	blocks	0.071429
the block	core block	0.021739
attempt to construct this type from	dtypes interval dtype construct from string cls	0.166667
insert item at selected position	core block manager insert loc item value allow_duplicates	1.000000
for more this is index for	core ndframe	0.005051
convert	core convert	0.500000
some dataframes in vertical/horizontal layout	table	0.010870
the locales that are available on the system	locales prefix normalize locale_getter	0.125000
alert a user about a malformed	python parser alert malformed msg	0.500000
type window_type and size window on the data	arg window win_type min_periods	0.100000
pprinter for iterables you should probably use pprint_thing()	pprint dict seq _nest_lvl max_seq_items	0.333333
data corresponding to axis labels matching criteria parameters	ndframe select crit axis	0.250000
simple cross-tabulation	columns	0.017857
return a	categorical	0.009615
our	period index resampler	0.062500
boolean criterion specified by	ndframe group by filter	0.200000
of the list	sparse sparse list	0.333333
full scope for use with	computation scope full scope	0.055556
swap level i with level j do not	index swaplevel i j	0.333333
with multi-level index return new dataframe with	core data frame	0.005917
extract from a masked rec array	core masked rec array	0.250000
of value from 1-dimensional ndarray only	indexes datetime index get value series key	0.071429
available options	options	0.041667
for last non-na/null value	series last valid	0.250000
array interface	indexes categorical index array dtype	0.125000
subclass of styler with	styler from	0.076923
dispatch to apply we are stripping	by mixin apply func	0.050000
table this is	key	0.005051
if you	indexes index set	0.023810
compute a simple cross-tabulation of	core reshape crosstab index columns	0.066667
are index sliceable then return my slicer otherwise	to index sliceable obj	0.083333
a tree-like object	io html frame parser	0.012195
if we define an builtin function	mixin is builtin func	0.333333
panel-like dataframe	index time panels names	0.076923
datetime date objects (namely	core indexes datetime index	0.007634
add numeric	group by add numeric	1.000000
columns under the index	index	0.002004
new index of the values set with the	core indexes index putmask	0.111111
valid other evaluate or raise typeerror	for numeric binop other op opstr	0.500000
pretty representatgion	io table unicode	0.333333
or tuple representation or datetime	freq	0.016129
list replace	manager replace list	0.500000
and if so prints a	core warn if	0.333333
of a hack to accelerate unioning a	indexes datetime index union many others	0.040000
hdf	hdf	1.000000
string-like array to convert object	convert string to object	0.142857
validate that the	core computation validate	0.500000
concatenation	core dtypes concat sparse	0.500000
an indexer coerced to the	core categorical maybe coerce indexer indexer	0.125000
determine if	str match arr	0.166667
return if we are a sparse	core dtypes is sparse	1.000000
to an xlwt style	xlwt writer convert to style cls	0.500000
only if the process of casting data from	safe casting cls data	0.047619
from the first match	arr	0.013699
index return new dataframe	core data frame	0.005917
get the 'info axis' see indexing for more	core ndframe keys	0.083333
are mapped to their default values as specified	default values fname	0.200000
levels attribute is 1 or a list	is multi index	0.142857
as	indexes	0.009302
return a	core indexes index	0.007042
repr of this object potentially casting to object	indexes period index to embed keep_tz	0.333333
this selection take = take ownership	nan_rep encoding	0.333333
convert	core ndframe indexer convert	0.500000
append to table in file	key value format append	0.125000
membership of x not in y if	core computation not in x y	0.066667
if multiindex has	core indexes multi	0.014493
a file-like	file like obj	0.500000
same dimensions	ndframe	0.005025
select values at particular time of	ndframe at time time asof	0.066667
create and return the axes	io table create axes axes obj	1.000000
columns of	inplace	0.027778
values converted	args values	0.083333
panel objects and will raise	core panel to	0.027027
midnight	core indexes	0.004762
the process of casting	core indexes numeric index assert safe casting	0.125000
values can be	values name freq	0.166667
specialized cython take which sets	core take nd arr indexer axis out	0.166667
be	io html frame	0.012987
hack to accelerate unioning a collection	index union many others	0.040000
with the block i	for block cls i	0.333333
usage	usage	1.000000
axis	rank axis	0.250000
retbins	retbins	1.000000
string in the series extract groups	core str extract frame arr	0.047619
this is defined as a copy with the	view cls	0.047619
from 1-dimensional ndarray	core indexes index set	0.023810
block s from	core block where other cond align raise_on_error	0.066667
the data for	io data col	0.333333
we take a string-like that is object	io convert string array data encoding	0.038462
convert to object	index to	0.666667
bytes see :class packer	packb	0.022727
float is formatted in	formats set eng float	0.200000
for a particular	repr	0.040000
to beginning of period	tseries date offset beg	0.166667
read csv file (discouraged	frame from csv	0.066667
if we are index sliceable then	to index sliceable obj	0.083333
slice of	slice slicer	0.087719
the reduction type operation if we can	index ops mixin reduce op name axis skipna	0.083333
downsample the cython defined function	period index resampler downsample how	0.200000
index	index	0.080160
add in the	datetime index ops mixin add	0.333333
string in the series extract groups from the	str extract arr	0.066667
take a string-like that is object dtype	io convert string array data	0.038462
this is index for	core ndframe	0.005051
merge blocks having same dtype exclude non-consolidating blocks	core consolidate blocks	1.000000
over the blocks collect and create	axis consolidate transposed	0.062500
dataframe in panel	core panel	0.019231
return a version to operate on	core datetime like block mixin try operate values	0.333333
sets names on	multi index set names names level	0.200000
to indexer and return them	nd indexer axis	0.043478
value from 1-dimensional ndarray	value	0.005155
to convert timedelta-like to	indexes td index cmp opname	0.055556
the index and	index	0.002004
starting at the end of the string and	rsplit arr pat n	0.037037
string	generate	0.062500
to apply we	core group by mixin apply func	0.050000
already exist and be	io	0.003012
create index	indexes multi index	0.013158
a style_dict to an openpyxl style	convert to style cls style_dict	0.166667
the :meth pandas dataframe reset_index function see	drop name inplace	0.142857
shading the background	io formats styler	0.021277
is defined as	multi index view cls	0.047619
td elements from	parser parse td obj	0.083333
after a ufunc needs	array wrap result context	0.029412
the array interface return	interval index array result	0.125000
apply we are stripping all of the	by mixin apply func name	0.050000
checks whether the	parser check for	0.500000
downsample the	downsample how	0.200000
code	tseries	0.250000
validate that an positional indexer	indexer has valid positional setitem indexer indexer	0.052632
(header new_data) for header rows in multiindex parsing	pop header name row index_col	0.200000
window of type window_type and size window	window win_type	0.100000
values	stringify na values	1.000000
a particular dataframe invoked by unicode df in	series unicode	0.166667
get test result and	get test result	0.250000
array must be sparseseries or sparsearray	core sparse maybe to sparse array	1.000000
fast path for	fast	0.090909
in engineering notation	eng formatter call	0.142857
and create the manager	to mgr data index	1.000000
location in	loc	0.040000
a scipy sparse coo_matrix to a	sparse coo to sparse series a dense_index	0.166667
ndarray copy if	copy	0.012821
and return the block manager from a dataframe	sparse to manager sdf columns index	0.052632
ndarray or list	data index columns dtype	0.125000
with the	hdfstore get	0.500000
of whether each index value is found	datetime index ops mixin isin	0.083333
and 'kwargs'	func name args kwargs	0.166667
dataframe with labeling information in the	core data frame reset	0.027778
values at the new freq essentially a	resampler asfreq fill_value	0.066667
placement	placement	0.833333
b	b	0.600000
that is thrown by	parser	0.008000
number of unique elements in the object	core index ops mixin nunique dropna	0.083333
particular time of day e g 9	time time asof	0.142857
construct and returns	core ndframe construct	0.333333
install the scalar coercion methods	coerce method converter	0.200000
set	styler set	0.333333
stride	stride	0.750000
the totally ordered cartesian product	core get group index labels shape sort xnull	0.066667
increments between calendar year	year	0.125000
check that left and right index are equal	almost equal left right	0.333333
and return slice points for level 0 assuming	indexes multi index bounds	0.166667
can be used	frame parser build	0.014706
of the (attr formatted_value)	indexes index format attrs	0.142857
return an indexer coerced to	core categorical maybe coerce indexer indexer	0.125000
node must already exist and be	io hdfstore append key	0.016667
validates that we have a valid ordered parameter	core categorical validate ordered cls ordered	0.058824
sets names on levels	multi index set names names	0.200000
for a deprecated option if key is deprecated	get deprecated option key	0.333333
simple cross-tabulation of	reshape crosstab index	0.066667
to midnight length	core indexes datetime index	0.007634
new categorical by default	categorical sort values	0.166667
each index value is found in the	index ops mixin isin	0.083333
string cast it to timedelta according to resolution	timedelta index maybe cast slice bound	0.125000
only use this	indexes index	0.007353
returns the float values converted	float array formatter get result	0.055556
box function to get object from internal	core indexes datetime index ops mixin box func	0.142857
called after a	core indexes index array wrap	0.100000
not supported for panel objects and will	panel to sparse	0.037037
only use	set value arr key	0.023810
helper function to convert datetimelike-keyed dicts to timestamp-keyed	compat d	0.125000
compress	compress	1.000000
update index	core indexes index maybe update	1.000000
return the node with the key	hdfstore get node key	0.083333
from a 1d array of	from intervals cls	0.125000
read sql database table into	sqldatabase read table table_name index_col coerce_float parse_dates	0.333333
boolean whether this axes needs validation for	ndframe indexer should validate iterable	0.166667
new unit if needed otherwise return from	core dtypes datetime tzdtype new cls unit	0.055556
init self from	data frame init	0.500000
table reflecting the structure	table setup	0.083333
object to input	ndframe to	0.043478
sort multiindex at	multi index	0.020000
check whether the	like	0.058824
and returns axes if supplied in args/kwargs	axes from arguments args kwargs require_all	0.333333
apply	offset apply index days	0.500000
object	io html frame	0.012987
i with level j do	i j	0.200000
value for the nan/nat	value val	0.250000
return a formatter function for a	formats get	0.090909
series refer to numpy ndarray repeat	core series repeat repeats	0.333333
for header rows in	header name	0.100000
return a tree-like object that can be used	html frame parser build	0.014706
our native types format slicing if desired	native types	0.200000
format of a given	format	0.012346
update index attributes e g	timedelta index maybe update attributes	0.200000
requested level the result will respect the	level ascending sort_remaining	0.200000
only	core indexes index set value arr	0.023810
array interface return	interval index array result	0.125000
apply	core group by mixin apply func name	0.050000
you	value arr	0.023810
never a	categorical	0.009615
localize tz-naive	tz localize	0.333333
to table in file node must already exist	value format	0.016667
running code that expects to raise or not	util assert produces warning expected_warning filter_level	0.071429
of a single	core	0.001326
coerces data to ndarray raises on scalar	index coerce to ndarray cls	0.166667
of series	get series	0.250000
sets the view limits to the	locator autoscale	0.055556
the reduction type operation if we can	index ops mixin reduce op name axis	0.083333
from google bigquery	read gbq query project_id index_col col_order	0.250000
a dtype compat na value parameters	core dtypes na value for dtype dtype	0.333333
axis with optional set logic along the other	core reshape concat objs axis join join_axes	0.333333
has a float	float arr	0.083333
for getting a cross-section	xs loc	0.250000
from 1-dimensional ndarray	core indexes index set value arr	0.023810
a boolean if this key is in the	contains key	0.125000
1-dimensional	core indexes index set value arr key	0.023810
the reduction type operation	index ops mixin reduce op name axis	0.083333
iterate on key->group	io hdfstore items	1.000000
index values and index	indexes datetime index	0.007634
that we have a	cls	0.016949
data	series	0.006757
csv file (discouraged	csv cls path sep parse_dates	0.066667
for series columns	core	0.001326
specialized intersection for datetimeindex objects may	intersection other	0.076923
an iterator over the	index iter	0.250000
provides a resample of	timedelta index resampler	0.066667
are going to	obj data_columns	0.250000
tree-like	frame parser	0.012500
background in a range	io formats styler background	0.125000
the info	update info info	0.166667
string-like and string-like array to convert object	core dtypes maybe convert string to object	0.142857
of a series that is datetimelike (e	maybe to datetimelike data	0.142857
on multiindex defaults	indexes multi index	0.013158
to convert timedelta-like to	indexes td index cmp opname nat_result	0.055556
sort multiindex at the	multi index	0.020000
series columns for dataframe and	core	0.001326
subset rows or columns of dataframe	ndframe filter items like regex axis	0.166667
left and right	left right vertical	0.500000
apply	group by mixin apply func	0.050000
dataframe series panel etc	manager	0.058824
return our new	resampler get new	1.000000
sort multiindex	core indexes multi index sortlevel	0.166667
non-na/null observations	count	0.055556
returns numpy array of datetime time	indexes datetime	0.011494
hash a categorical by hashing its categories and	util hash categorical c encoding hash_key	0.500000
loc	loc	0.240000
that we have a astypeable to categorical	block is categorical astype dtype	0.333333
fully deleting the node in	io	0.003012
suitable for a panel-like dataframe parameters	core panel index time panels names	0.076923
if the passed type is	core dtypes period dtype is	0.125000
data to an	data index dtype	0.250000
index with day as	core indexes	0.004762
get integer location slice	get loc key	0.500000
convert timedelta-like to	indexes td index cmp opname	0.055556
return a fixed frequency timedelta index with day	indexes timedelta range start	0.083333
in the series/index by the given delimiter	core str	0.011364
set	series set value	1.000000
file node must already exist	format	0.012346
of a hack to accelerate unioning a collection	union many others	0.040000
to coerce a code to a rule_code	maybe coerce freq code	0.076923
using the interpolate machinery	interpolate with fill method axis	0.200000
string-like that is object dtype and coerce	convert string array	0.038462
the expression	core computation	0.047619
table as a dataframe the levels	table data values index	0.200000
read from	io read obj	0.058824
csv file (discouraged please use :func	csv cls path header	0.066667
the reduction type operation if we	core index ops mixin reduce op name axis	0.083333
the totally ordered cartesian product of	group index labels shape sort xnull	0.066667
add	add	0.642857
an indexer like _name	indexer	0.009174
v should be	v	0.026316
value from 1-dimensional ndarray only use this if	datetime index get value	0.071429
series dropna if fill_value=nan returns a dense series	core sparse sparse series dropna axis	1.000000
return new dataframe with labeling	data frame	0.005714
validates that we have a valid ordered parameter	categorical validate ordered cls ordered	0.058824
perform the reduction type operation if we	core index ops mixin reduce op name	0.083333
locator based	auto date locator get locator	0.062500
the expected exception	contextmanager exception	0.166667
sets names	indexes multi index set names names	0.200000
offsets index to beginning of period frequency	tseries date offset beg apply index i freq	1.000000
return a copy of a series excluding elements	core series group	0.030303
values at	at	0.125000
flattened values	ravel order	0.037037
that an positional	core ndframe indexer has valid positional	0.250000
return an item pair from maps[0]	chain map popitem	0.055556
of the index or maximum along an axis	core indexes datetime index ops mixin max axis	0.333333
fast path for getting a	single block manager fast	0.250000
length is unaltered	normalize	0.076923
of the counts of non-null values	core value counts values sort ascending normalize	0.200000
python expression as a	expr	0.050000
if we are a	dtypes is	0.121212
opstr	opstr	0.833333
the intersection of two index objects	indexes range index intersection other	0.083333
union of two multiindex objects sorting	index union other	0.037037
single non-tuple indexer which could be	indexer indexer target	0.071429
string starting at the end of	rsplit arr pat	0.037037
called after a ufunc needs additional handling	indexes period index array wrap result context	0.041667
nat-like arg is a passed in as	arg errors	0.026316
validate that we have	is	0.005291
series extract groups from the first match of	core str extract frame arr	0.047619
to preserve dtype if possible	putmask smart v m n	0.055556
two indices overlap add	items overlap	0.062500
our asof	asof	0.083333
list indicated if we have	core indexes multi index have	0.142857
to more easily perform multi-index slicing examples	index slice	0.166667
setup	core resampler	0.200000
dataframe to a	core data frame	0.005917
of the stata date formats to	to stata	0.058824
do	src_list dest_list	0.500000
index join	core indexes datetime index join	1.000000
midnight	datetime	0.006711
rhs	rhs	1.000000
return true if this is a valid	is valid	0.250000
scipy sparse coo_matrix to a	core sparse coo to sparse series a	0.166667
might need to coerce a	tseries maybe coerce freq	0.125000
an enumerated type or categorical	core factorize	0.200000
have a full length slice	full slice	0.333333
of the item of the underlying data	core index ops mixin	0.062500
query in a	index_col coerce_float	0.062500
highlight the maximum by shading	highlight max subset color	0.333333
get the	ndframe	0.005025
determines if	mixin equals	1.000000
categorical columns retain categorical information for	stata writer prepare categoricals data	0.166667
values between	ndframe between	0.100000
a hack to accelerate unioning a collection	indexes datetime index union many others	0.040000
hex	hex	1.000000
total columns	table ncols	0.250000
render	formatter	0.222222
only use this if you	categorical	0.009615
'numpy' library the	numpy validate take with	0.055556
times of day (e g 9 00-9 30am)	time start_time end_time include_start include_end	0.200000
csv	core series from csv cls path sep parse_dates	0.066667
for last non-na/null value	core series last valid	0.250000
string representation	index unicode	0.083333
dtypes in this object	ndframe dtypes	0.333333
file	append	0.012987
object that can be used	io html frame parser build	0.014706
a moving window of type window_type on the	window mean how	0.166667
iter1 iter2 iterables that produce elements comparable with	copy iter1 iter2	0.166667
dataframe that is intended to operate elementwise i	sparse data frame applymap	1.000000
for this object	indexes	0.004651
try to parse a ndarray like into a	json parser try convert	0.500000
from a string raise a	from string cls string	0.250000
timezone	util set timezone tz	0.142857
multiindex at the requested level	indexes multi index sortlevel level	0.250000
the block manager from a dataframe	sparse to manager sdf columns	0.052632
'numpy' library the	compat numpy validate take with convert convert	0.055556
string representation for this	core indexes frozen ndarray unicode	0.083333
boolean if we if the passed type is	dtype is	0.064516
check_index_type	check_index_type	1.000000
scalar to a compat for	scalar to	0.100000
a function elementwise updating the	io formats styler applymap func subset	0.083333
minimum	ops mixin min	0.111111
creating a subclass of styler with	formats styler	0.021739
we are passed a list-like indexer return the	interval index convert list indexer keyarr kind	0.066667
size	itemsize	0.027027
can be used to iterate over the	html frame parser build	0.014706
of a hack to accelerate unioning	core indexes datetime index union many others	0.040000
we have a valid ordered parameter if	categorical validate ordered cls ordered	0.058824
format dataframe	core data frame to	0.037037
provide concatenation	concat sparse	0.500000
the table this is generally only useful to	select column key column	0.142857
a summarized representation	ops mixin summary name	0.333333
asof merge this is similar to a	reshape merge asof	0.071429
that	html frame parser build	0.014706
sparse/dense and dtype) in this object	ndframe	0.005025
a new multiindex from	indexes multi index	0.013158
a slice of my	core block slice slicer	0.083333
if the data is sparse|dense	core series ftypes	0.250000
from 1-dimensional ndarray only use this if	index set	0.022727
bool if we have only bool values	block is bool	0.166667
additional handling	period index	0.024390
labels using one or more existing	keys drop append inplace	0.166667
localize tz-naive timeseries to	localize	0.100000
sure that time	core ensure like indices time	0.125000
result to our original type we may	result result dtype	0.200000
timedelta-like to	td index cmp opname	0.055556
se the caption on a	set caption caption	0.166667
fast lookup of value from	set value arr key value	0.038462
metadata if key is a registered option	get registered option key	0.333333
for creating a subclass of styler with	io formats styler	0.021277
alias	alias	0.777778
cut where we	cut x	0.200000
for first	first	0.133333
is entirely empty [no items], meaning any	empty	0.125000
or ndarray filled with nat which has	nat new	0.050000
read csv file (discouraged please	core series from csv cls path sep parse_dates	0.066667
numpy array of python datetime date	core indexes datetime index	0.007634
number of unique elements in the	index ops mixin nunique dropna	0.083333
the expression that is in the term	core computation	0.047619
value to format it	array formatter value	0.250000
is dict-like	is dict like obj	1.000000
the _apply kwargs	window center	0.076923
returns value occupying requested label default to	sparse sparse series get label default	0.083333
max	max	0.454545
string-like that is object dtype and coerce	io convert string array data encoding	0.038462
routine to turn values into codes	codes for values values	0.250000
of whether each index value is	indexes datetime index ops	0.034483
numeric	core indexes index add numeric	0.250000
append rows of other to the	append other	0.200000
new manager with the blocks	manager combine blocks	0.250000
as block	getitem block	0.250000
ndarray only use	index set value arr key	0.023810
of each interval in the index	indexes interval index	0.062500
float values	formats float	0.055556
render a dataframe to a	formats data frame formatter to	0.250000
a particular dataframe invoked by unicode df	core series unicode	0.166667
returns a latex	latex	0.076923
of sql statement that create a	table create	0.043478
that create a table reflecting the structure of	io sqlite table create table setup	0.066667
float values	io formats float array formatter	0.055556
resolve a	computation scope resolve	0.166667
interpolate values according to	interpolate method axis limit inplace	0.166667
called via the 'numpy' library	compat numpy validate take with convert convert args	0.055556
value from 1-dimensional ndarray	arr key value	0.038462
file node must already	hdfstore	0.014925
reset the display options for printing and	util reset display options	0.200000
labels using one or more existing columns	keys drop append inplace	0.166667
values to be at least	core block shape values	0.050000
function return fillvalue for	fillvalue	0.071429
plot	series plot	1.000000
called via the 'numpy' library the	with convert	0.055556
table in file node must already exist	io hdfstore append key	0.016667
a series excluding elements from	core series group	0.030303
and	append key value	0.016667
of value from 1-dimensional ndarray	value arr key value	0.038462
microseconds (>= 0 and less than 1 second)	indexes timedelta index microseconds	0.066667
tot_items	tot_items	1.000000
create a new unit if needed	new cls unit tz	0.055556
variable name a dict associating	io stata reader value labels	0.142857
guarantee the shape of the values to be	block shape values ndim shape	0.083333
lookup	set value arr key	0.023810
if we are	core	0.001326
a style_dict to an xlsxwriter format	io xlsx writer convert to style style_dict	0.166667
from the first match of	arr	0.013699
add in numeric methods	indexes index add numeric methods binary	1.000000
take the codes	core categorical take	0.200000
get_indexer that works for monotonic decreasing	index get fill indexer searchsorted target method limit	0.142857
a python expression as	computation eval expr	0.083333
intersection of two index objects sortedness of the	indexes range index intersection other	0.083333
string-like that is object dtype and	io convert string array	0.038462
via the 'numpy' library the third	take with convert convert	0.055556
specialized cython	arr indexer axis out	1.000000
mask of index to be	index	0.002004
of bytes in the	indexes multi index nbytes	0.052632
return new dataframe with labeling information in	data frame reset	0.027778
that the left and right sparsedataframe are equal	sp frame equal left right check_dtype exact_indices	0.333333
put single value at passed column and	col value takeable	0.500000
compute numerical data ranks 1 through n along	method numeric_only na_option	1.000000
for our index type	index item	0.100000
the 'numpy' library the third	compat numpy validate take with convert convert args	0.055556
totally ordered	xnull	0.083333
a pickle with a provided encoding	fh encoding compat is_verbose	0.200000
an outside world format currently just the	core block external values dtype	0.125000
with times to	datetime index	0.007042
strings in the series/index to be	core str	0.011364
of	value arr key	0.023810
temporary variables in this scope	core computation scope ntemps	0.250000
given an	core indexes get interval	0.125000
object serving as a	abstract engine	0.166667
values	col convert values	0.333333
need to coerce a	tseries maybe coerce freq	0.125000
kind of my	kind	0.142857
each index value is found in the	indexes datetime index ops mixin isin values	0.083333
boolean if we are	manager is	0.100000
boolean whether this axes needs validation	indexer should validate iterable	0.166667
frequency code group of	group	0.027027
from 1-dimensional ndarray only	set	0.012195
produce 'pivot' table based on	reshape slow pivot index	0.333333
create an indexer like _name	core ndframe create indexer cls name indexer	0.166667
is valid for	is valid	0.250000
node must already exist and be table	value	0.005155
la re split in	split arr	0.200000
manipulation result has the same dimensions	constructor	0.040000
to target time zone	tz	0.142857
return datetimeindex with times to midnight length	indexes datetime	0.011494
return the data for this obj	io table get object obj	1.000000
a boolean if we are	manager is	0.100000
indices where elements of v should be inserted	v	0.026316
data to ndarray raises on scalar data	indexes index coerce to ndarray cls data	0.166667
other to int64 with null values converted	values other	0.200000
interpolate	resampler interpolate method axis limit inplace	0.166667
from each group if	core group by	0.027778
min_itemsize	min_itemsize	1.000000
the shape of the values to be at	values ndim shape	0.083333
don't allow a multi reindex on	needs reindex multi axes method	1.000000
after a	index	0.004008
resample of a	datetime index	0.007042
subclasses namely intervalindex to control get_slice_bound	indexes index get loc only exact matches key	0.142857
a latex representation for a particular	repr latex	0.333333
from maps[0] raise keyerror is	chain	0.031250
try	try	0.545455
iterate	io html frame parser	0.012195
particular dataframe invoked by unicode df in py2	core data frame unicode	0.166667
hypothetical list representing the totally ordered	xnull	0.083333
have a valid ordered parameter if	categorical validate ordered cls ordered	0.058824
have a valid ordered parameter	categorical validate ordered cls ordered	0.058824
be	append key value	0.016667
from	data	0.019417
of the minimum	ops mixin argmin	0.166667
to take optional positional and	optional	0.050000
the block return result block s	block where other cond align	0.166667
fast lookup of	value arr key	0.023810
encode character string in the series/index	core str encode arr	1.000000
outside world format currently just the ndarray	block external values dtype	0.125000
sparse	io sparse	0.333333
type t or tuple of	is type t	0.083333
are index sliceable then return	index sliceable obj key	0.083333
boolean if we	indexes is	0.166667
minimum value	core index ops mixin min	0.125000
function is called via the 'numpy' library	with convert convert	0.055556
read csv file (discouraged please use	csv cls path sep	0.066667
and	append	0.012987
input function or	mapper axis copy	0.333333
return the number	core indexes	0.009524
to : write out	write	0.017857
ndarray	arr key	0.023810
handles preprocessing for	reshape preprocess for	1.000000
to convert timedelta-like	td index	0.055556
the values to be	block shape values	0.050000
swap level i with level j	index swaplevel i j	0.333333
of the required package is	package pkg_name min_version	0.083333
of normalized locales	locales locales	0.200000
create a spreadsheet-style pivot table as a	core reshape pivot table	0.111111
available options	pp options	0.083333
'kwargs' should be empty because	kwargs	0.022222
the index and	core indexes range index	0.021277
associating each variable name a dict associating	io stata reader value labels	0.142857
called via the 'numpy' library the	numpy validate take with convert	0.055556
a bit of a hack to accelerate unioning	union many others	0.040000
the series/index ends with passed pattern	core str endswith arr pat na	0.333333
in the series extract groups from	extract	0.030303
from 1-dimensional ndarray only	core indexes index set value arr	0.023810
return whether we have any extra	has resolvers	0.500000
handling as	indexes period index array wrap result	0.050000
an xarray object from	ndframe to xarray	0.125000
unstack a k a pivot series with multiindex	series unstack	0.333333
fast lookup of value from 1-dimensional	get value series	0.250000
indexer fill with the fill_value	indexer allow_fill fill_value	0.250000
returns value occupying requested label default	core sparse sparse series get label default	0.083333
concatenate block managers into one	core concatenate block managers mgrs_indexers axes concat_axis copy	1.000000
"pivot" table) based on column values	pivot index columns values	0.200000
a list of tuples of the (attr formatted_value)	ops mixin format attrs	0.142857
string in the series extract groups	str extract frame arr	0.047619
a type in type_map	type fmt	0.500000
a decorator to take optional positional and keyword	util optional args decorator	0.083333
series/index to	str	0.017544
provide numeric type operations	numeric	0.052632
to table in file node must already exist	append key value format	0.016667
rewrite the assignment	computation rewrite assign tok	0.125000
take a string-like	io convert string array data	0.038462
to accelerate unioning a collection	union many others	0.040000
of ftypes	ftype	0.076923
datetimeindex with times to	indexes datetime index	0.007634
from 1-dimensional ndarray only use this if you	index	0.002004
check if the object is a sequence of	core dtypes is sequence obj	0.500000
convert timeseries to specified frequency	core ndframe asfreq freq method how	0.250000
'index' for regular or 'level_x'	io json set	0.250000
an xpath expression	xpath expr	0.166667
bool of a single	ndframe bool	0.055556
object dtype but could really be ints/strings	tools attempt yyyymmdd	0.333333
using input function or	axis mapper axis copy inplace	0.055556
whether each index value is found	indexes datetime index ops mixin isin values	0.083333
ufunc needs additional	result context	0.027027
metadata for this	io index col read metadata	0.250000
a function elementwise	applymap func	0.333333
and other to int64 with null values	args values other	0.142857
the 'numpy' library the	numpy validate take with convert convert args kwargs	0.055556
a curve with holidays	calendar holidays start end return_name	0.066667
to closest period	get period	0.333333
not supported for panel objects and	core panel to	0.027027
offset/observance to a datetimeindex of dates	rule dates	0.333333
dataframe with labeling information	core data frame reset	0.027778
coerces data to	to	0.006329
kwargs suitable for initializing or updating-on-copy an	kwargs	0.022222
detect terminal size and return tuple =	util get terminal size	0.166667
shift without copying data the shifted data	ndframe slice shift periods	0.083333
table	io	0.006024
xs	xs	0.555556
mask of index to be	index b	0.041667
mode s	mode	0.100000
after a	period index	0.024390
create	ndframe create indexer cls name	0.500000
pandas only dtype object or	pandas	0.035714
indexer to a level-wise	locs tup	0.125000
function to be applied on each value	formatter value formatter float_format threshold	0.100000
boolean if we	indexes index is	0.100000
dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis	1.000000
general index and plural 'names' parameter	indexes index validate names name names deep	0.071429
if we	is	0.021164
dict of array-like	dict	0.076923
from a non-unique which categoricalindex's are almost	non unique target	1.000000
that is	parser	0.008000
to the cls	cls use_numexpr	1.000000
values return a block if we	core block	0.010870
a	timedelta index resampler	0.133333
try to convert to dense	sparse maybe to dense	1.000000
this is generally only useful to	io hdfstore select column key column	0.142857
hack to accelerate unioning a collection	core indexes datetime index union many others	0.040000
to indexer	nd indexer axis	0.043478
string-like array to convert object dtype	core dtypes maybe convert string to object	0.142857
return datetimeindex	indexes datetime index	0.007634
add in the datetimelike methods (as	index ops mixin add datetimelike methods	0.333333
returns numpy array of python datetime	core indexes datetime index	0.007634
use	arr	0.013699
optional fill value parameters	fill_value	0.033333
we are grabbing the correct scope	scope level global_dict local_dict resolvers	1.000000
the values to be at	block shape values ndim	0.050000
frame	core data frame	0.011834
o	o	0.217391
x not in y if possible otherwise use	not in x y	0.066667
render the built up	render	0.083333
an ndarray of the flattened values of	core indexes index ravel order	0.037037
multiindex compute the	indexes multi	0.014493
box function to get object from internal representation	index ops mixin box func	0.142857
as	values	0.034188
an appendable table allow append/query/delete operations	legacy table	1.000000
for the nan/nat	val	0.058824
a uint64 ndarray of my hashed values	core indexes multi index hashed values	0.166667
csv file (discouraged please use :func pandas	csv cls path sep	0.066667
info	info info	0.142857
timedelta-like to timedelta64	td	0.043478
setup our	resampler	0.017857
a fixed frequency timedelta	timedelta range start	0.333333
the float values	formats float array formatter	0.055556
returns numpy array of datetime time the	indexes datetime	0.011494
operations to convert timedelta-like to timedelta64	td index cmp opname nat_result	0.055556
block	core block manager	0.022727
get integer	core indexes multi index get	0.100000
convert a numpy / pandas type to its	table type	0.055556
if the object is a regex pattern instance	core dtypes is re	0.500000
an positional indexer	ndframe indexer has valid positional setitem indexer indexer	0.052632
the block manager from a dataframe	manager sdf	0.052632
are index sliceable then return	core convert to index sliceable obj key	0.083333
analogous to ndarray repeat	datetime index ops mixin repeat repeats	0.333333
a timegrouper	group by resample rule	0.166667
read csv file (discouraged please	data frame from csv cls path header	0.066667
to	hdfstore append key	0.016667
sql statement that create a table	io sqlite table create table	0.166667
new block manager parameters	core block manager	0.022727
my self as a sparse	core sparse sparse series as sparse	0.250000
validates that we have a valid ordered	ordered	0.017857
table in file node must already	append key value format	0.016667
perform the reduction type operation if	ops mixin reduce op name axis	0.083333
apply we are stripping all	core group by mixin apply func	0.050000
if we have bytes decode them	ensure decoded s	0.166667
set the values from	io index col convert values	0.166667
specialized intersection for datetimeindex objects may be much	index intersection	0.142857
defined as a copy with the	indexes multi index view cls	0.047619
return the padded hexadecimal	computation raw hex	0.333333
datetimeindex with times	index	0.002004
new unit if	datetime tzdtype new cls unit tz	0.055556
csv file (discouraged please use	data frame from csv cls path header	0.066667
'numpy' library	validate take with convert convert	0.055556
a curve with holidays between start_date and	calendar holidays start end return_name	0.066667
class for writing stata binary	core data frame to stata fname	0.200000
return a string representation for this object	index unicode	0.083333
vectorized membership of x in	in x	0.166667
datetimeindex with times to midnight	core indexes datetime	0.011494
from a dataframe column or multiindex level	from	0.030303
in	io hdfstore append key	0.016667
subclass of styler with a	io formats styler	0.021277
names to 'index'	names	0.038462
return result block s from the	block where other cond align raise_on_error	0.066667
value	value arr key value	0.038462
bind a method to class python 2 and	compat bind method cls	0.200000
for temporarily setting a timezone	timezone	0.083333
right	right	0.636364
parse specified sheet s	parse	0.034483
handling	result	0.016393
header	io html frame parser parse thead	0.111111
form the union of two	indexes multi index union other	0.066667
called upon unpickling rather than the default	new datetime index cls d	0.111111
or a subset of rows if n	n	0.045455
to apply we	mixin apply func	0.050000
determines if two index objects contain the same	core indexes float64index equals other	0.200000
for plotting on plane currently scatter and hexbin	plane plot	0.500000
defined as a copy with the same	view cls	0.047619
the formatted data as a	core indexes index formatter func	0.083333
return a string representation for this object	core indexes index unicode	0.083333
sparsearray if the	core sparse sparse array	0.043478
load a feather-format object from the file path	feather path	0.333333
the put method to its	series put	0.055556
index return new dataframe with labeling	core data frame reset	0.027778
already made	naxes sharex sharey squeeze	1.000000
return a formatter function for a range of	formats get	0.090909
form the intersection of two index objects sortedness	index intersection other	0.052632
index value is found in the	indexes datetime index ops mixin isin	0.083333
index objects sortedness	core indexes range index	0.021277
pandas only	pandas	0.035714
label	core sparse sparse series get label	1.000000
thereafter monday instead	to monday	1.000000
node	key value	0.011628
the built	io	0.003012
representing the totally ordered cartesian product	group index labels shape sort xnull	0.066667
operations to convert timedelta-like	td index	0.055556
returns the float values converted into strings using	io formats float array formatter get result	0.055556
data to an ndarray	data index	0.076923
layout some dataframes	table	0.010870
multi-level index return new dataframe with labeling	data frame reset	0.027778
gets called	core series array	0.100000
return an indexer coerced to the	core categorical maybe coerce indexer indexer	0.125000
the reduction type operation if we	ops mixin reduce op name	0.083333
a timegrouper	by resample rule	0.166667
a frequency guess generated by infer_freq	ops mixin inferred freq	0.250000
be used to	io html frame parser build	0.014706
and return the op string	core computation bin op generate	0.066667
timedelta-like to timedelta64	td index cmp opname nat_result	0.055556
return a fixed frequency datetime index with day	indexes period range start end periods freq	0.083333
datetimeindex but	datetime	0.006711
return a fixed frequency timedelta index with	core indexes timedelta range start	0.083333
attempt to construct this type from	dtypes interval dtype construct from string	0.166667
gets called after	series	0.006757
values attribute if	core	0.001326
construct dataframe from dict of array-like or	data frame from dict cls	0.200000
a 1d array return an array of	array vals	0.083333
fast	core indexes index set value arr key	0.023810
1-dimensional ndarray only use this if	arr	0.013699
a tz-aware type	tz tz	0.066667
scipy sparse coo_matrix to a	sparse coo to sparse series a	0.166667
that can be used to iterate over the	parser build	0.014706
pad strings in the series/index with	core str pad arr	1.000000
length	core indexes datetime	0.011494
block b	block block_items	0.500000
guarantee the shape of the values	shape values ndim shape	0.083333
v	core indexes frozen ndarray searchsorted v	0.033333
sparse floating point	sparse	0.026316
to dataframe parser that uses beautifulsoup under the	beautiful soup html5lib frame parser	0.166667
tzdtype	tzdtype	1.000000
construct dataframe from	data frame from	1.000000
its values attribute	core	0.001326
to iterate over	io html	0.012987
return copy	copy	0.012821
returns the float	float array formatter get	0.055556
more this is index for	ndframe	0.005025
hack to accelerate unioning a	indexes datetime index union many others	0.040000
overrides ndarray argsort	core series argsort	0.083333
from a list/array of tuples parameters	from tuples cls data	1.000000
label for first	first	0.133333
length less than a given width	arr width	0.142857
a string-like that is object dtype and coerce	io convert string array data encoding	0.038462
a version to operate on	mixin try operate values	0.333333
for the aggregators	mixin aggregate arg	0.166667
from panel	panel dropna	0.333333
need to coerce a code	tseries maybe coerce freq code	0.076923
use	indexes index set value arr	0.023810
invalidate	invalidate	1.000000
fill value for the dtype of	fill value dtype	0.250000
'numpy' library the third	take with	0.055556
numpy array of python datetime	datetime index	0.007042
fast lookup of value from 1-dimensional ndarray only	index set value arr key value	0.038462
sql query or database table into	sql sql con index_col coerce_float	0.142857
provide coercion to our input arguments	core block try coerce args values	1.000000
a string-like that is object	convert string array data encoding	0.038462
compute standard deviation of groups excluding	by std ddof	0.166667
node must already exist and be table	hdfstore append key value	0.016667
curve with holidays	calendar holidays start end return_name	0.066667
called upon unpickling rather than	new datetime index cls d	0.111111
the fill	fill	0.100000
to table in file node must already	hdfstore append key value	0.016667
called after	period index	0.024390
a new unit if needed otherwise return	datetime tzdtype new cls unit tz	0.055556
labels on given axis omitted where alternately any	axis how thresh subset	0.100000
must	core non consolidatable mix in	0.090909
called prior	array prepare result	0.111111
attempt to infer better dtype for	convert datetime numeric timedelta coerce	0.071429
values between	core indexes datetime index indexer between	0.125000
attempt to construct	construct	0.071429
of the dataset	core	0.001326
take optional positional and	util optional args	0.066667
correct pandassql subclass based on	pandas sql builder con flavor schema meta	0.055556
is maps[0]	compat	0.030303
the td elements from a row element	io html frame parser parse td obj	0.083333
from a 1d array of interval objects	core indexes interval index from intervals cls data	0.333333
place using non-na values from passed series	core series update other	0.500000
this if you	indexes	0.004651
check if we are a	ndframe check is	0.200000
convert to object if we are a categorical	index to safe for reshape	0.200000
rank the values along a	core rank values	0.250000
implement a datetime64 block with a tz attribute	tzblock	0.076923
to a latex tabular/longtable environment output	io formats latex formatter write result buf	0.200000
get integer location	get loc	1.000000
to a timedelta object	to timedelta	1.000000
ndarray	core	0.001326
csv	from csv cls path header	0.066667
a scalar to a	scalar to	0.100000
fast lookup of	index set value arr key	0.023810
a datetimeindex	core datetime	0.142857
of each interval	indexes interval	0.062500
remove and	compat chain map	0.032258
stride parameters	tseries resolution get stride from	0.333333
split each string in the	core	0.001326
axes	axes axes obj	1.000000
number	core indexes range index	0.021277
return the	categorical get	0.100000
slice	core datetime tzblock slice slicer	0.083333
user about a malformed	malformed	0.066667
and coerce to a fixed size	encoding itemsize	0.142857
index value is found	index ops mixin isin	0.083333
union of two	index union other	0.037037
this argument return	arg	0.018868
cartesian product of all possible label	get group index labels shape sort	0.200000
provides	period index resampler	0.062500
grouper	grouper	0.411765
list-like indexer return the	indexes interval index convert list indexer keyarr kind	0.066667
specialized cython	out	0.166667
pivot	reshape pivot index	0.333333
returns axes if	axes	0.043478
function or functions	ndframe rename	0.333333
columns using input function or functions	rename axis mapper axis copy inplace	0.250000
the stata date formats to a	to stata	0.058824
dataframe with labeling information in	core data frame reset	0.027778
xarray object from the pandas object	xarray	0.111111
expected error message regular expression	exc_type exc_value trace_back	0.100000
return block for the diff of the	core block diff n axis	0.333333
fast lookup of value from 1-dimensional	key value	0.011628
to deprecate a keyword argument	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
arr1 and	util equal contents arr1	0.066667
to read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
from 1-dimensional ndarray	index set value arr key	0.023810
render the built up styles to html	formats styler render	0.142857
dataframe including/excluding columns based on their dtype	data frame select dtypes include exclude	0.500000
is a non-boolean scalar	parse dates arg parse_dates	0.142857
index with target's	indexes multi index	0.013158
keeps track of	computation set test mode v	0.142857
the float values converted into strings	float array formatter	0.055556
function of type t or tuple of types	core computation is type t	0.083333
of myself	core categorical	0.027778
you	key	0.005051
of a series excluding elements from groups that	core series group	0.030303
built	io	0.003012
truncates a sorted ndframe before	ndframe truncate before	0.250000
check to see if we can set	util can set	0.125000
csv	core data frame from csv	0.066667
for general index	indexes index	0.007353
make new index inserting new item at location	core indexes timedelta index insert loc item	1.000000
correct pandassql subclass	pandas sql builder con flavor schema meta	0.055556
i : int slice or	data frame ixs i axis	0.200000
swap level i with level j do not	swaplevel i j	0.111111
index with passed location -s deleted	categorical index delete loc	0.333333
to dataframe apply	data frame apply func	0.166667
hack to accelerate unioning a collection of	union many others	0.040000
the vectorized membership of x not in y	not in x y	0.066667
iter2 iterables that produce elements comparable	iter2	0.083333
is	chain	0.031250
number of temporary variables in this scope	scope ntemps	0.250000
shift without copying data the	ndframe slice shift periods axis	0.083333
call a numpy function	call	0.071429
return	indexes range index	0.021277
series columns for dataframe major_axis for panel	core ndframe iteritems	0.055556
string or np dtype to a	to dtype dtype	0.083333
getitem defers to the underlying	index ops mixin getitem	0.250000
value from 1-dimensional ndarray only use this if	indexes datetime index get value	0.071429
locator based on a	auto date locator get locator	0.062500
for series columns for dataframe and major_axis	ndframe	0.005025
provide concatenation	dtypes concat sparse	0.500000
and return the numexpr condition and filter	computation expr evaluate	0.200000
the number of bytes in	nbytes deep	0.052632
defined as a	view cls	0.047619
and / or columns using	inplace	0.027778
multiindex at the	multi index sortlevel	0.166667
the reindex for all the axes	reindex axes axes	0.500000
cross-tabulation of	columns	0.017857
for ordered data	ordered	0.017857
is an actual dtype	core dtypes extension dtype is dtype cls dtype	0.111111
index (can't do in caller because the	json jsontable writer init obj orient date_format double_precision	0.166667
a sequence of terms for	terms	0.034483
indices overlap add suffixes	items overlap	0.062500
return index or ndarray filled	index ops	0.033333
writing stata binary	data frame to stata fname	0.200000
appropriate class of	result type result	0.250000
packed object return an iterator	packed object_hook list_hook	0.200000
passed type is an actual dtype	core dtypes extension dtype is dtype cls dtype	0.111111
*this is an	indexes categorical index	0.095238
return the number of	indexes range	0.062500
block	for block	0.333333
as a dataframe the levels	data values index columns	0.066667
boolean if the passed type is	dtype is	0.032258
if	categorical validate	0.055556
attempt to construct this type from a	core dtypes interval dtype construct from string cls	0.166667
string representation for	unicode	0.058824
series/index starts with passed pattern	str startswith arr pat	1.000000
index	indexes index	0.147059
text	text	1.000000
a tuple of the shape	shape	0.047619
is defined as a copy with the same	indexes multi index view cls	0.047619
the underlying data	core indexes multi	0.014493
particular panel invoked by unicode df in py2	core panel unicode	0.166667
add in numeric unary methods	add numeric methods unary	1.000000
shift categorical by desired number	categorical shift	0.500000
form the union of two multiindex objects sorting	indexes multi index union other	0.066667
determine if dtype	dtype n method dtype	0.250000
csv file (discouraged please use :func pandas read_csv	core data frame from csv cls path	0.066667
this indexable with the key/value	io index col update	0.125000
use	core indexes index set value arr	0.023810
several cases to get	get index name	0.200000
series/index by indicated number of	str repeat	0.200000
the values & release the memory	io index col take data	0.111111
on our axes compute the expected nrows	nrows expected	0.142857
vector of label values for requested level	values level	0.250000
render the built	formats styler render	0.142857
backward to next offset only	rollback	0.076923
display options	display options	0.083333
a dataframe sorted by the n largest values	core data frame nlargest n	0.166667
python datetime	indexes datetime	0.011494
union of two multiindex objects sorting if	core indexes multi index union other	0.066667
y if possible otherwise use	y	0.117647
given delimiter string starting at the end of	rsplit arr pat n	0.037037
grouper indexers	grouper obj key	0.142857
the stata date formats to a	convert datetime to stata	0.111111
return	core indexes range index	0.021277
a string if it was a pathlib path	stringify path filepath_or_buffer	0.142857
comparison operations to convert timedelta-like to	indexes td index	0.055556
but densify first	core non consolidatable mix in	0.090909
block manager and	mgr	0.083333
column and	col	0.111111
the boolean criterion specified	filter	0.117647
rolling grouper providing rolling	core group by rolling	0.333333
visitor	visitor	1.000000
am never a view	block is view	0.200000
with day as the default frequency	end periods freq	0.062500
determine if each string	str match arr pat	0.166667
to an ndarray copy if specified	dtype copy	0.032258
apply the given offset/observance to a datetimeindex	holiday apply rule	0.200000
a simple	columns values	0.037037
the 'numpy' library	validate take with convert convert	0.055556
string in the series/index by indicated	core str	0.011364
a fixed frequency timedelta index with day as	core indexes timedelta range start end	0.083333
list of tuples of the (attr formatted_value)	index format attrs	0.142857
return my self as a sparse	sparse series as sparse	0.250000
function is called via the 'numpy' library the	numpy validate take with convert convert args	0.055556
compute standard deviation	group by std ddof	0.166667
the built up styles	io	0.003012
the 'numpy' library the third	validate take with convert convert args kwargs	0.055556
remove	compat chain	0.034483
this if you	indexes index set value	0.023810
copy of a series excluding elements from groups	series group	0.030303
fillvalue for	fillvalue	0.071429
file node must already exist	hdfstore append key	0.016667
a spreadsheet-style pivot table as a dataframe	core reshape pivot table data	0.166667
that we have a	categorical validate ordered cls	0.055556
index or ndarray filled with	datetime index	0.007042
the expected exception	exception	0.090909
provides a resample	datetime index	0.007042
the series extract groups	core str extract frame	0.047619
return a basegrouper which	core get	0.038462
number of bytes in the	indexes multi index nbytes	0.052632
compute standard deviation of groups excluding missing	by std ddof	0.166667
plot attribute for	by plot	0.062500
only use this	key	0.005051
array of whether each index value is found	indexes datetime index ops mixin isin values	0.083333
of styler with	formats styler from	0.076923
compute a simple cross-tabulation of	reshape crosstab	0.066667
take a string-like that is object	string array data	0.038462
return a tree-like	io	0.003012
if two indices overlap add suffixes to	core items overlap	0.062500
in file node must already exist and	io hdfstore	0.014493
in comparison methods	comparison methods	1.000000
take a string-like that	convert string array	0.038462
exception raised	util assert raises contextmanager	0.200000
to make a repr function return	repr	0.040000
convert back to bool/int	downcast to dtype result	1.000000
self coded with categories as returned by	categorical codes for groupby sort	0.071429
codes by the indexer fill with the fill_value	indexer allow_fill fill_value	0.250000
a concise listing of	list keys width _print	0.111111
object o and	io msgpack packb o	0.055556
the float values converted into strings using	formats float array formatter get result as	0.055556
return a new index	indexes index putmask	0.333333
exception and	exception	0.090909
ndarray like into a	parser	0.008000
intervalindex to control get_slice_bound	indexes index get loc only exact matches key	0.142857
read html tables into a list of dataframe	read html io match flavor header	0.200000
perform an asof	asof	0.083333
boolean indicating whether the file is open	io hdfstore is open	0.250000
returns the float values converted into strings using	formats float array	0.055556
for header rows in	io pop header	0.100000
with times	datetime	0.006711
or float that can safely be cast to	val min_val	0.083333
a concise listing of available options grouped by	options list keys width _print	0.111111
which	to_concat	0.125000
apply	styler apply	0.500000
test result	test result	0.250000
specialized intersection for datetimeindex objects may be	intersection other	0.076923
sanitize input data to an ndarray copy if	core sanitize array data index dtype copy	0.500000
checks that dict has only	json parser check	0.250000
of cumulative sums over requested axis	data frame cumsum axis	1.000000
resolve a	resolve	0.090909
two indices overlap add suffixes to overlapping entries	overlap with suffix left lsuffix right rsuffix	0.333333
return index to be used	reshape concatenator get	1.000000
capture stderr in a buffer so that	capture stderr	0.055556
get	core	0.001326
'numpy' library	take with convert convert args	0.055556
index objects contain the	core indexes float64index	0.166667
create and return the numexpr condition and filter	expr evaluate	0.200000
with	core	0.001326
table in file node must already exist and	hdfstore append key	0.016667
object close it if we opened it	io to hdf path_or_buf key	0.166667
index with passed location -s deleted	indexes categorical index delete loc	0.333333
convert to our native types	core datetime block to native types slicer	0.250000
that can be used to iterate	html frame parser	0.012658
more	core ndframe	0.005051
highlight the maximum by shading	highlight max subset color axis	0.333333
numeric	numeric v string	0.333333
already exist and	value format	0.016667
convert to object if we are a	index to safe for reshape	0.400000
add in numeric unary methods	core indexes index add numeric methods unary cls	1.000000
csv file (discouraged please use	csv cls path header sep	0.066667
gets called	period index array	0.050000
set	sparse sparse series set	1.000000
:meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace limit downcast	0.333333
has a float dtype if	float	0.024390
used	frame parser	0.012500
that	ordered	0.017857
float	formats float array	0.055556
x not in	core computation not in x	0.166667
this is defined as a copy	index view cls	0.047619
indexer and return them	indexer	0.018349
before and/or after some particular index value	before after axis	1.000000
stderr in a buffer so that	stderr	0.076923
operations to convert datetime-like to	indexes dt index cmp opname nat_result	0.066667
the totally ordered cartesian product of	shape sort xnull	0.066667
sparsedataframe as a series	sparse sparse data frame	0.058824
infer	base infer	1.000000
set of unique elements of arr1 and arr2	util equal contents arr1 arr2	0.066667
check all axes except items	manager is indexed like other	1.000000
of series	dtypes get series	0.250000
each string in the	core	0.005305
of sparseseries	core sparse	0.041667
shape of the values	block shape values ndim shape	0.083333
to	hdfstore append key value	0.016667
fast lookup of value from 1-dimensional ndarray only	core indexes datetime index get value	0.071429
determine if each string matches	str match arr pat case	0.166667
a new manager with	core block manager	0.022727
of a	core ndframe	0.005051
checks that	util assert	1.000000
put method to its values	put	0.043478
same	same	0.857143
nanoseconds (>= 0	timedelta index nanoseconds	0.066667
non-na/null observations in	count	0.055556
dataframe to	core data frame	0.005917
validate that an positional	has valid positional	0.250000
specialized intersection for datetimeindex objects may be	core indexes datetime index intersection	0.142857
only use this if	set value arr key	0.023810
prevents adding	no	0.166667
multi-index suitable for a panel-like dataframe parameters	panel index time panels names	0.076923
the name this allows simpler	name	0.025000
sanitize an index type to return an	core sanitize index data index copy	0.200000
each string in the series/index by	core str repeat arr	0.045455
as a frame table	appendable series table	0.200000
used to iterate over the dom	doc	0.071429
the cached item item represents a positional indexer	ndframe iget item cache item	0.090909
raise keyerror is maps[0]	chain map	0.034483
asof merge this is similar to	reshape merge asof	0.071429
the series only	series only	0.500000
or by a series	groupby by axis level	0.045455
from a 1d array of	index from intervals	0.125000
passed a manager and a axes dict	ndframe init mgr mgr axes dtype copy	0.333333
of a hack to accelerate unioning a	core indexes datetime index union many others	0.040000
float is	io formats set eng float	0.200000
return a fixed frequency timedelta	timedelta range start	0.333333
render the built up styles	render	0.083333
ndframe as opposed to	ndframe	0.005025
qtconsole	qtconsole	1.000000
for accumulating data to be converted into	list	0.034483
from 1-dimensional ndarray only use this	arr key	0.023810
representation for a particular	extension dtype repr	0.142857
of the underlying data	core indexes index	0.014085
and setup my atom from the block b	io data col set atom block block_items existing_col	0.200000
use this if you	index set value	0.023810
reindex for all	reindex	0.062500
convert tz-aware axis	ndframe tz convert tz axis	0.200000
reshape	reshape	0.259259
pat	arr pat	0.500000
generate one random unicode string	util randu nchars	1.000000
create a new unit if needed otherwise	datetime tzdtype new cls unit tz	0.055556
float values	float array formatter	0.055556
'numpy' library	validate take with	0.055556
and string-like array to convert object dtype	core dtypes maybe convert string to object	0.142857
of a hack to accelerate unioning a collection	indexes datetime index union many others	0.040000
that can be used to iterate over	html frame	0.014706
nat which has the same length as the	nat new	0.050000
return base freq and stride info from string	tseries base and stride freqstr	0.333333
called upon unpickling rather than the	datetime index cls d	0.111111
unique elements of arr1 and	util equal contents arr1	0.066667
:meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace	0.333333
node with the	io hdfstore get node	0.166667
on subclasses namely intervalindex to control get_slice_bound	index get loc only exact matches key	0.142857
a feather-format object	read feather	0.083333
intersection of two index objects	core indexes range index intersection other	0.083333
create a new unit if	core dtypes datetime tzdtype new cls unit	0.055556
read csv file (discouraged please use :func	csv cls	0.066667
ndarray like into a	io json parser	0.071429
sorts the categorical by category value returning a	inplace ascending na_position	0.071429
validates that we have	validate	0.027778
fillna but using the interpolate machinery	block interpolate with fill method	0.200000
float values converted into strings	io formats float array formatter get result	0.055556
a datetimeindex	core indexes datetime	0.011494
a new block try to preserve dtype	putmask smart v m n	0.055556
apply the function to my	apply func	0.027027
setitem	setitem	1.000000
of	core indexes	0.014286
ndarray	index set value	0.023810
for this	core	0.001326
apply we are stripping all of the	apply func	0.027027
cast	index maybe cast	0.111111
comparable timezone both for pytz / dateutil	index timezone	0.200000
memory usage of	index ops mixin memory usage deep	0.200000
table in file node must already exist	io hdfstore	0.014493
if	indexes	0.004651
that can be used to	html frame parser	0.012658
fixed size	encoding itemsize	0.142857
on where	key where	1.000000
sql statement that create	table create	0.043478
produce 'pivot' table based on 3 columns of	reshape slow pivot index columns	0.500000
any type that can be coerced to	core indexes period index simple new cls	0.142857
index with target's values (move/add/delete values as	index	0.002004
accessor object	timedelta	0.022222
for more this is index for	core	0.001326
use this	core indexes index set value arr key	0.023810
coerce a string	coerce	0.025641
specialized shift which	index ops mixin shift n freq	0.250000
set	set	0.219512
a subclass of styler with a	formats styler from	0.076923
*this is an internal non-public method*	index create from codes codes categories ordered name	0.333333
without any nan is taken	core ndframe asof where	0.166667
compute a simple cross-tabulation	core reshape crosstab index columns values	0.066667
if we are index sliceable then return	to index sliceable obj	0.083333
construct an intervalindex from a 1d array	index from intervals	0.125000
is not supported for panel objects	core panel to sparse	0.037037
maps[0] raise keyerror is	map	0.029412
dtype and n/a values	get empty dtype and	0.125000
values of this categorical	core categorical	0.013889
in panel to a separate excel sheet parameters	panel to excel path na_rep engine	0.111111
node must already exist and	hdfstore append key value format	0.016667
actual ne format	core computation condition bin op format	0.333333
label for last	last	0.153846
ids	ids	0.857143
adjusted	codes for	1.000000
a boolean if	a b	0.083333
along a particular axis	axis	0.011364
parameter if	ordered	0.017857
a dataframe to a sql	to sql frame	0.500000
datetime to sif http	datetime to	0.100000
node must already exist and be table	hdfstore append key	0.016667
that left and right dataframe are equal	frame equal left right check_dtype	0.333333
with multi-level index return new dataframe with	data frame reset	0.027778
and	hdfstore append key value format	0.016667
validates that we have a	ordered cls	0.055556
return a ndarray of the	core index	0.111111
data stored in the sparselist	list to array	1.000000
of a	datetime index resampler	0.066667
the float values converted into strings using	io formats float array formatter	0.055556
string-like array to convert object	dtypes maybe convert string to object	0.142857
object to more easily perform multi-index slicing examples	index slice	0.166667
create/cache the indexables if they don't exist	io table indexables	0.333333
are going to write this as	write obj data_columns	0.111111
number of bytes in the underlying data	index nbytes deep	0.052632
to table in file node must already	append	0.012987
function designed to be	func	0.011905
sparse coo_matrix from a	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
table in	key	0.005051
downsample the cython	datetime index resampler downsample	0.200000
color objects suitable for initializing the gradientfill stop	stop	0.050000
date formats to a	datetime to	0.100000
the series extract groups	core str extract	0.071429
python expression	expr	0.050000
don't care	core rolling	0.250000
exist and be	hdfstore append key value	0.016667
a series to the given	core series	0.008000
the correct pandassql subclass based on the	pandas sql builder con flavor schema meta	0.055556
the header	frame parser parse thead	0.111111
a	core categorical block is	0.100000
level	level	0.478261
if key is a registered option	get registered option key	0.333333
nat which has	ops mixin nat new box	0.050000
by the indexer fill	nd indexer allow_fill	0.050000
a dataframe the levels	data values index	0.066667
com/help cgi?datetime	elapsed vec dates fmt	1.000000
exception	exception	0.545455
string-like	string array data	0.038462
return the dtype object of the underlying data	core series dtype	0.333333
given a date in xport	sas parse	0.066667
for creating a subclass of styler with a	styler from	0.076923
return result as block	block	0.008197
coerce a scalar	coerce scalar	0.250000
a list of columns as lists of strings	str columns	0.083333
to scipy	scipy	0.111111
after a ufunc needs	indexes period index array wrap result context	0.041667
the built up	io formats	0.027778
resampling from a	resampler from selection	0.142857
set new labels	set labels labels	0.500000
for header rows	io pop header	0.100000
se the caption on	set caption caption	0.166667
passed type is an actual dtype that we	core dtypes interval dtype is dtype cls dtype	0.142857
return an	index get	0.040000
data the shifted	ndframe slice	0.125000
numpy / pandas type	table type x	0.055556
plan	plan	1.000000
a string representation for this object	core indexes index unicode	0.083333
can be used to iterate over	io	0.003012
tables into a	io match flavor	0.166667
last	last	0.538462
setup the	core grouper set	0.500000
a block that has a single	core simple blockify tuples	0.125000
styler	io formats styler set	0.333333
evaluate the where condition cond on a	core computation where cond	0.111111
can be used to	io	0.003012
sparse-compatible version of ndarray take	series take indices axis	1.000000
handling	indexes period index	0.035714
(header new_data) for header rows	io pop header name row index_col	0.200000
select values at particular time of day e	ndframe at time time asof	0.066667
is called via the 'numpy' library	validate take with convert convert args kwargs	0.055556
indexer cannot enlarge its target	setitem indexer indexer	0.200000
to turn values into codes given the	core get codes for values values	0.333333
use this if	core	0.001326
apply we	apply func	0.027027
sorts the categorical by category value returning a	ascending na_position	0.071429
whether or	io validate	0.031250
for the diff of the values	diff n axis	0.111111
object that can be	parser	0.008000
to handle na filling of	fillable values	0.125000
close the	io stata reader close	0.200000
openpyxl is supported parameters	compat is	0.111111
to capture	capture	0.125000
an implementation for the aggregators	core selection mixin aggregate arg	0.166667
union of two multiindex objects	core indexes multi index union other	0.066667
return the metadata pathname for this key	io table get metadata path key	0.500000
a new datetimeindex with passed location s deleted	core indexes datetime index delete loc	0.333333
compute the isin boolean array	core isin comps values	0.500000
creating a class with a metaclass	metaclass metaclass	0.125000
decorator for creating a class with a metaclass	compat add metaclass metaclass	0.125000
values to be	values ndim	0.050000
index objects contain the same	core indexes datetime index ops mixin	0.029412
already exist and be	io hdfstore append key value	0.016667
return packed bytes see :class packer for	msgpack packb	0.025641
operations to convert timedelta-like to timedelta64	core indexes td index cmp opname nat_result	0.055556
minimum	ops mixin argmin	0.166667
timedelta-like to timedelta64	indexes td index cmp opname nat_result	0.055556
of my values cols	table values cols	0.200000
the index and its underlying	index	0.002004
protection_dict	protection_dict	1.000000
case	case	1.000000
returns the float values	io formats float array	0.055556
already	append key	0.016667
that time	ensure like indices time	0.125000
_apply kwargs and	name window center	0.071429
array interface return my	multi index array dtype	0.125000
actual ne	computation condition bin op	0.333333
connect to the	connect	0.071429
of value from 1-dimensional	get value	0.166667
algos groupsort_indexer implements counting sort and it is	core get group index sorter group_index ngroups	0.250000
for running code that expects to raise	util assert produces warning	0.071429
panel objects and will raise	panel to sparse	0.037037
index (can't do in caller because the schema	json jsontable writer init obj orient date_format double_precision	0.166667
must	append key value	0.016667
a simple cross-tabulation	core reshape crosstab index columns	0.066667
as	ndframe	0.005025
determine if	str match	0.166667
deprecated option and if so prints	warn if deprecated	0.166667
return result block s	core block where other cond align	0.166667
new block	block manager	0.021277
necessary for making this object picklable	index setstate state	0.333333
full scope for use with passing to	scope full scope	0.055556
the series extract groups from	extract	0.030303
we are passed a list-like indexer	index convert list indexer keyarr kind	0.066667
functions	core ndframe rename axis	0.333333
csv file (discouraged please use	from csv cls path header	0.066667
that we have a	core	0.001326
minimum value of the	ops mixin min	0.111111
ndarray	core indexes index set	0.023810
return the correct	core resampler get	0.333333
an intervalindex from	indexes interval index from arrays cls	0.166667
returns the float values converted into strings	io formats float array	0.055556
string in the series/index by	core str	0.022727
underlying data	indexes index	0.014706
of other to the end of this	other	0.013514
slice of my	categorical block slice slicer	0.083333
correct pandassql subclass based	io pandas sql builder con flavor schema meta	0.055556
of the flattened values	core indexes index ravel order	0.037037
frequency timedelta index with day as the default	core indexes timedelta	0.083333
return an xarray object from the	ndframe to xarray	0.125000
dtype if dtype	dtype	0.010989
'usecols' parameter is	evaluate usecols usecols names	0.333333
union of two multiindex objects sorting if possible	indexes multi index union other	0.066667
convert to our native types	to native types slicer na_rep float_format	0.250000
render a dataframe to	data frame formatter to	0.250000
values at particular time of day e	at time time	0.066667
have an object dtype	core dtypes	0.037037
long-format data to wide generalized inverse of dataframe	lreshape data	0.333333
a resample	timedelta index resampler	0.066667
top-level nodes (that are not themselves	io hdfstore groups	0.333333
number format	number format cls	0.333333
are index sliceable then return my	core convert to index sliceable	0.083333
merge holiday calendars together the caller's class	abstract holiday calendar merge other	1.000000
a matrix of scatter	scatter matrix	0.500000
representation for a particular	extension dtype bytes	0.142857
new unit if needed	new cls unit	0.055556
coerce a string or np dtype to a	coerce to dtype dtype	0.500000
array repr of this	period index	0.024390
o and return packed bytes	packb o	0.055556
our	resampler set	0.333333
list/array of tuples	tuples	0.111111
format of	format dt_str	0.250000
validate the 'skipfooter' parameter	io validate skipfooter arg skipfooter	1.000000
concatenation of	dtypes concat	0.100000
must	io hdfstore append key value format	0.016667
stop parameter	stop	0.050000
null_color for missing values	null null_color	0.125000
be any type that can be coerced to	period index simple new cls	0.142857
conserve rangeindex type	core indexes range index getitem key	0.166667
string in the series extract groups from the	str extract frame arr	0.047619
a string representation for a particular object	core string mixin bytes	0.333333
already exist and be table	io hdfstore	0.014493
take values	take	0.060606
pick the best locator based on	pandas auto date locator get locator	0.062500
accelerate unioning a collection of indexes	union many others	0.040000
strings to time objects	core tools to time	0.125000
conform a set of	core	0.001326
to a left-join except that	left right on left_on	0.058824
perform the reduction type operation if we can	ops mixin reduce op name	0.083333
boolean if we need	index is	0.083333
cumprod	cumprod	1.000000
cut	cut x	0.200000
the values to be at least 1 d	values ndim	0.050000
return a fixed	range start end	0.133333
we have a fully reindex-output to the levels	core data frame group by reindex output result	0.045455
number of bytes in the	nbytes deep	0.052632
of casting	safe casting	0.125000
string-like that is object dtype and coerce	io convert string array	0.038462
'series argmin' is	skipna skipna args kwargs	0.100000
function that converts json lists to line	to line	0.142857
file node must already	append key value	0.016667
getitem defers to the underlying	indexes datetime index ops mixin getitem	0.250000
the set of unique elements of arr1	arr1	0.050000
object that can be used to iterate	html frame parser	0.012658
tables into a list of dataframe objects	io match flavor	0.166667
interpolate values according to different	core resampler interpolate method axis limit	0.166667
csv file (discouraged please use :func	core series from csv cls path	0.066667
to shift without copying data the shifted	core ndframe slice shift periods axis	0.083333
'args'	compat numpy validate resampler func method	1.000000
already exist and	key value	0.011628
of microseconds (>= 0 and less	indexes timedelta index microseconds	0.066667
multi	multi axes	0.500000
from maps[0] raise keyerror is maps[0]	chain	0.031250
are index sliceable then return my	index sliceable obj key	0.083333
doesn't like	like	0.058824
of	core indexes range	0.062500
index with day calendar as the default	core indexes period	0.032258
this allows simpler access	ndframe setattr	1.000000
to group return result as series or	axis level	0.125000
called upon unpickling rather than the default	core indexes new datetime index cls d	0.111111
or regular expression	pat flags	0.052632
values and a date_format return	values values date_format	0.250000
for	axes for	1.000000
"reset" the styler removing any previously applied styles	io formats styler clear	0.333333
dataframe the keys	core data frame	0.005917
provide boxed values for a column	data frame box col values values items	1.000000
an item pair	compat chain map popitem	0.055556
a method to class python 2	method cls	0.076923
blocks	combine blocks	0.500000
implementing the plot attribute	by plot	0.062500
a series excluding elements	series group	0.030303
csv file (discouraged please use :func pandas	from csv cls path sep	0.066667
like	like	0.352941
as block	block	0.008197
create and return the block manager from	manager sdf columns	0.052632
of categorical-like unioning categories all	core dtypes union categoricals to_union sort_categories ignore_order	0.333333
shape of the underlying data	core index ops mixin shape	0.250000
that create a table reflecting	io sqlite table create table setup	0.066667
datetimeindex with times to midnight length is	core indexes datetime index	0.007634
returns first n rows of each group	group by head n	1.000000
returns the float values converted into strings	float array formatter get	0.055556
to midnight	core	0.001326
dispatch to apply we are stripping all of	by mixin apply func name	0.050000
panel to	core panel	0.019231
to	block2d to	0.500000
convert to our native	block to native	1.000000
xpath	xpath	1.000000
index type	index item	0.100000
compute	index columns	0.028571
that converts json lists to line	to line	0.142857
this is called upon unpickling rather than the	cls d	0.083333
capture stderr in a buffer so	util capture stderr f	0.055556
to call encode before writing to file	stata writer write to_write	0.083333
do a list replace	core block manager replace list src_list dest_list inplace	1.000000
slice locations for input	index slice locs start end step kind	0.083333
are index sliceable then	to index sliceable obj key	0.083333
if you	arr	0.013699
use	indexes index set	0.023810
for an ordered multiindex	core indexes multi	0.014493
symmetric difference of two index	indexes index symmetric difference other	0.166667
of the required package is installed	package	0.058824
convert an object to an expression	computation convert expression expr	1.000000
its values attribute if it has	core	0.001326
try to convert to dense	maybe to dense obj	1.000000
a user about a malformed row	malformed	0.066667
convert timeseries to specified frequency	asfreq freq method how normalize	0.250000
parse the raw data into a	io html frame parser parse raw data	0.250000
the array interface	core indexes multi index array dtype	0.125000
the maximum values along an axis	indexes datetime index ops mixin argmax axis	0.250000
the compared against itemsize	itemsize	0.027027
axes / array dimensions	ndframe ndim	0.333333
the float values converted	float array formatter get result as array	0.055556
a tree-like object	io	0.003012
take which sets nan values in one pass	core take nd arr	0.125000
underlying	core indexes multi index	0.013158
to convert datetime-like to	period index cmp opname nat_result	0.066667
reduction type operation if we	core index ops mixin reduce op name	0.083333
frequency datetime index with custombusinessday as the default	indexes cdate range start end periods	0.083333
datetimeindex	core	0.001326
compute standard deviation of groups excluding missing values	by std ddof	0.166667
to parse	convert	0.032258
label values for requested level	level values level	0.250000
to table in file node	io hdfstore append	0.016667
type t or tuple of types	core computation is type t	0.083333
ndarray's __getitem__ method to work as desired	core indexes index getitem key	0.166667
axes compute the expected	expected	0.083333
sets the categorical to be unordered	core categorical as unordered inplace	0.500000
to get lines 0) there are headers	python parser get index	0.166667
an intervalindex from	index from	0.090909
an iterator over the boxed	datetime index iter	0.250000
:	formatter write	1.000000
reset the	reset	0.200000
'numpy' library the	with convert convert args kwargs	0.055556
pivot to	block2d to blocknd values	0.500000
interpolate	resampler interpolate method	0.166667
called after	series array wrap	0.100000
that can be used to iterate over	parser build	0.014706
one of the stata date formats to a	datetime to stata	0.100000
file node must already exist	key value	0.011628
from 0 to the length of that group	group by	0.016129
provides a resample of a groupby implementation	groupby	0.085714
swap levels	series swaplevel	1.000000
gets called after a ufunc needs	result context	0.027027
take optional positional and keyword	optional	0.050000
pprinter for iterables you should probably use pprint_thing()	formats pprint dict seq _nest_lvl max_seq_items	0.333333
in file node must already exist and be	io hdfstore	0.014493
for first non-na/null value	core data frame first valid	0.250000
the number of bytes in the underlying	indexes range index nbytes	0.052632
times to midnight	index	0.002004
view limits	time series date locator autoscale	0.055556
apply aggregation function or functions to resampled groups	resampler aggregate arg	0.250000
a	reshape crosstab index columns values	0.066667
swap levels i and j in a	frame swaplevel i j	0.333333
spreadsheet-style pivot table as a dataframe the levels	reshape pivot table data values	0.166667
support a single assignment node	base expr visitor visit assign node	0.500000
list of a func call with any defaults	util make signature func	0.250000
context manager for temporarily setting a timezone	set timezone tz	0.142857
simple cross-tabulation	index	0.002004
fast	indexes index set	0.023810
left and right dataframe are equal	util assert frame equal left right check_dtype	0.333333
checks	writer check	1.000000
to coerce a	index coerce	0.125000
for valid keys across my indexer	indexer has valid tuple	0.500000
file	hdfstore	0.029851
return a tree-like	html frame parser	0.012658
from a row	parse	0.034483
shade the	io formats styler	0.021277
to convert datetime-like to datetime64	indexes dt index cmp opname nat_result	0.066667
index objects contain the same	indexes datetime index ops	0.034483
a subclass of styler with a	io formats styler from	0.076923
form the union of two index	indexes index union other	0.083333
of each interval	core indexes interval	0.062500
curve with holidays	holidays start end return_name	0.066667
given delimiter string starting at	rsplit arr	0.037037
are passed a list-like indexer	convert list indexer keyarr kind	0.066667
strings to	tools to	0.250000
names to 'index'	set default names data	0.083333
localize tz-naive	core indexes period index tz localize	1.000000
compat	blknos	0.166667
with duplicate rows removed optionally only considering certain	drop duplicates subset keep inplace	1.000000
create a pytables index	table create	0.043478
not supported for panel objects and	panel to sparse	0.037037
return the correct class for resampling with groupby	get resampler for grouping groupby	1.000000
tz-aware type return an encoded zone	io get tz tz	0.066667
create a	table create	0.086957
already	hdfstore	0.014925
csv file (discouraged please use :func pandas read_csv	core series from csv cls	0.066667
a string-like that is object dtype and coerce	io convert string array	0.038462
specialized cython take which sets nan values in	core take nd arr indexer axis out	0.166667
table in file	hdfstore append key value format	0.016667
set my	fixed set object info	0.200000
a simple	crosstab	0.050000
must already exist	hdfstore append key value	0.016667
header rows in multiindex	pop header name	0.100000
database table into	table table_name index_col coerce_float	0.333333
object that can be used to iterate	frame parser build	0.014706
tbody	tbody	1.000000
:mod datetime to	to	0.006329
select values at particular time of day e	core ndframe at time time asof	0.066667
render the built up styles	io formats styler render	0.142857
for	core sparse sparse array	0.043478
from the	io html frame parser	0.012195
numpy / pandas type	type x	0.055556
microseconds (>= 0 and less than 1	indexes timedelta index microseconds	0.066667
meta data array to the key as	key values	0.142857
if the frequency is	freq	0.016129
decorator to take optional positional and keyword	optional args decorator	0.083333
malformed	malformed msg row_num	0.100000
values to be at least 1	values ndim	0.050000
gets	period index array wrap result	0.050000
local_dict	local_dict	1.000000
new type (if copy=true return a new copy)	core categorical block astype dtype copy errors	1.000000
extensions that writer engine supports	writer supported extensions	1.000000
single dtype if dtype	simple blockify tuples dtype	0.111111
writing stata binary	frame to stata fname	0.200000
keeps track	core computation set test mode v	0.142857
is an	categorical index is dtype	0.500000
must already	hdfstore append key value format	0.016667
be table	hdfstore	0.014925
value occupying requested label default	label default	0.083333
whether the provided array or	arr_or_dtype	0.142857
according to indexer and return them as a	nd indexer axis	0.043478
return the number of bytes in	indexes multi index nbytes deep	0.052632
set a parameter value using	value	0.005155
return if we are	core dtypes is	0.106383
called upon unpickling rather than the	cls d	0.083333
csv file (discouraged please use :func pandas	csv cls path sep parse_dates	0.066667
of two or more factors by default	columns values rownames	0.333333
determine if each string matches	match	0.090909
compute variance of groups	group by var ddof	0.166667
the original	ndframe	0.005025
is our asof key the 'on'	core reshape as of merge asof key	0.250000
correct pandassql subclass based on the	pandas sql builder con flavor schema meta	0.055556
support start stop	fixed	0.055556
numeric unary operation	numeric unaryop op opstr	0.333333
we	core categorical validate ordered	0.055556
the 'numpy' library the third	take with convert convert args kwargs	0.055556
level the function returns	io formats get level	1.000000
as dataframe	frame	0.009091
each string in the series/index by	core str repeat	0.045455
to group return result as series or by	groupby by axis level	0.045455
as a	sparse sparse series as	0.125000
of seconds (>= 0 and less than 1	indexes timedelta index seconds	0.066667
this is defined as a copy	indexes multi index view cls	0.047619
to a datetimeindex of dates	dates	0.090909
values	generic index col convert values	0.333333
localize tz-naive timeseries to target time zone	tz localize tz axis level copy	1.000000
is unaltered	datetime index normalize	0.125000
from a masked rec array and create the	masked rec array to	0.090909
that we have good categories	categorical validate categories cls categories fastpath	0.250000
parameter for general index and plural 'names' parameter	indexes index validate names name names deep	0.071429
where elements of v should be inserted in	v	0.026316
tree-like object that can be used	html frame parser	0.012658
return the block manager from a dataframe of	core sparse to manager sdf columns index	0.052632
in the series extract groups from	str extract	0.035714
the series/index	core str	0.090909
function in blockmanager	block manager	0.021277
union of two multiindex objects sorting	indexes multi index union other	0.066667
timestamp-keyed	compat d	0.125000
read csv file (discouraged please use :func	series from csv cls path	0.066667
'args' and 'kwargs' should	compat numpy validate groupby func name args kwargs	0.166667
fixed frequency datetime index with day calendar as	core indexes period range start end periods freq	0.083333
the 'numpy' library the third	with convert convert args	0.055556
of label values for requested level	get level values level	0.250000
class for writing stata binary	data frame to stata fname	0.200000
concatenation of an	dtypes concat datetime	0.125000
intervalindex from a 1d array of interval objects	indexes interval index from intervals	0.333333
handle na filling of take	assert take fillable values indices allow_fill	0.250000
add the operations to the cls evaluate	core ndframe add numeric operations cls	0.500000
the 'info axis' see indexing	core ndframe keys	0.083333
the correct pandassql subclass based on the	io pandas sql builder con flavor schema meta	0.055556
each	data frame apply	0.500000
up styles to html	styler	0.022222
return a slice of my values	categorical block slice slicer	0.083333
be applied on each value to	formatter value formatter float_format threshold	0.100000
evaluate the where condition cond on a	computation where cond	0.111111
self coded with categories as returned	categorical codes for groupby sort	0.071429
:meth pandas dataframe reset_index function see	reset index level drop name inplace	0.142857
arr1 and arr2	equal contents arr1 arr2	0.066667
return the number of	range	0.047619
dateoffset of one custom business month	custom business month end	0.200000
set/update the info for this indexable with the	io index col update info info	0.090909
from a 1d array	from intervals cls data	0.125000
return block for the diff of	core block diff n axis	0.333333
scipy sparse	sparse sparse	0.103448
validate that the where	computation validate where	1.000000
to table in file node must	hdfstore	0.014925
cls	cls	0.084746
true if this is a valid field	core computation bin op is valid	0.500000
block try to preserve dtype	core putmask smart v m n	0.055556
pad	pad	0.833333
index names	names data	0.083333
only use this if you	indexes index	0.007353
used to	io html frame parser	0.012195
that create	create	0.033333
determine if each string matches a	match	0.090909
a tree-like object that can	io	0.003012
our binners	binner	0.125000
types of values	types values	0.333333
assemble	assemble	0.857143
combine series values choosing the calling series's values	core series combine	1.000000
to coerce a scalar	indexes period index coerce scalar	0.250000
additional	index array wrap result	0.033333
downsample the	period index resampler downsample	0.200000
that converts json lists to line	convert to line	0.142857
passed type is an actual dtype that we	period dtype is dtype cls dtype	0.142857
new index	core indexes index	0.007042
of value from 1-dimensional ndarray	set value arr key value	0.038462
gets called after a	indexes index array wrap	0.100000
be a single	new	0.058824
returns the float values converted	formats float array formatter get result	0.055556
get instances of all the various index	util all index	0.142857
a resample	timedelta index	0.045455
on a distance	dmin dmax	0.250000
keyerror is	chain	0.031250
nat which has the same length	nat new box	0.050000
values according to indexer and	indexer axis	0.043478
wrapper function for series arithmetic operations	comp method series op	0.333333
each index value is found in	datetime index ops mixin isin	0.083333
the we have a dtype compat for	name	0.025000
boolean if this key is in the index	core indexes interval index contains key	1.000000
bytes in the underlying	multi index nbytes	0.052632
or columns using input	axis mapper axis copy inplace	0.055556
a string-like that	string array	0.038462
true if this is a valid	is	0.005291
is unaltered	core indexes datetime index normalize	0.125000
explict type	dtype	0.010989
perform an asof merge this is	core reshape merge asof	0.071429
1-dimensional ndarray only	indexes index set value arr key	0.023810
gets	index array	0.066667
of styler with a custom template and	io formats styler from custom template	0.142857
frame table	io appendable multi series table	0.200000
moving function application	stats rolling apply arg window func min_periods	0.500000
true if this is a valid field	computation bin op is valid	0.500000
parse specified sheet	excel file parse	0.125000
merge this is similar to a	reshape merge	0.166667
a bool if we have only bool	is bool	0.166667
deprecated use :meth categorical sort_values that function	categorical order inplace ascending na_position	1.000000
radviz - a multivariate	radviz	0.100000
try to parse a ndarray	try convert	0.166667
cartesian product of all possible	group index labels shape sort	0.200000
header rows in multiindex parsing	io pop header	0.100000
we by definition have do not	formats datetime64formatter format strings	0.090909
the series extract groups	extract frame	0.047619
a float key and are not a	key	0.005051
if we are a view have a	is	0.005291
series excluding	series group	0.030303
the float values converted into	formats float array formatter get result as	0.055556
run the same function multiple	num_threads kwargs_list	0.050000
returns the float	float array formatter	0.055556
from a masked	masked	0.111111
label if label	label	0.028571
new item in-place does not consolidate adds	item value check	0.500000
the underlying array	core indexes datetime index ops mixin	0.029412
interchange axes and swap values axes appropriately	core ndframe swapaxes axis1 axis2 copy	1.000000
block manager from a dataframe of	sparse to manager sdf columns	0.052632
process of casting data from some accepted dtype	casting cls data	0.047619
fast lookup of value	value	0.005155
rewrite the	computation rewrite assign tok	0.125000
take which sets nan values in	take nd arr indexer	0.125000
diff	diff	1.000000
for creating a class with a metaclass	add metaclass metaclass	0.125000
to turn values	for values values	0.250000
membership of x not in y if	not in x y	0.066667
return dense representation of ndframe as	core ndframe to dense	0.111111
spreadsheet-style pivot table	reshape pivot table	0.111111
specified frequency	ndframe asfreq freq method how	0.250000
doesn't like to compare numeric	is numeric v string like	0.333333
convert to our native types	to native types slicer na_rep quoting	0.250000
interpolate values according to	interpolate method axis	0.166667
needs additional handling as	indexes period index array wrap	0.050000
return	core	0.033156
the float values	float array	0.055556
a copy of a series	core series	0.008000
the intersection of two index objects sortedness	core indexes range index intersection other	0.083333
determine if each string matches a	str match arr pat	0.166667
time strings to time objects	to time	0.125000
comparison operations to convert datetime-like	core indexes period index cmp opname nat_result	0.066667
rewrite the	core computation rewrite assign	0.125000
value from 1-dimensional ndarray	datetime index get value	0.071429
that left and right dataframe are equal	util assert frame equal left right check_dtype	0.333333
stata binary dta files from array-like objects	to stata fname convert_dates write_index encoding	0.333333
1-dimensional ndarray only use this if	set value arr	0.023810
dataframe containing	frame	0.009091
a fixed frequency timedelta index with	indexes timedelta range start end periods	0.083333
/ pandas type	type x	0.055556
the values to	block shape values	0.050000
we	ordered	0.017857
float values converted	float array formatter get result as	0.055556
table in file node must already exist and	key value format	0.016667
returns the float values converted into strings using	io formats float array formatter	0.055556
handle na filling of take	take fillable values	0.250000
to apply we are stripping	apply func	0.027027
create the join	join	0.066667
return my cython values	io data col cvalues	1.000000
values at particular time	at time time	0.066667
apply a	formats styler apply	0.500000
is	table is	1.000000
file	append key	0.016667
use	set	0.012195
make a copy	indexes multi index copy	0.166667
value from 1-dimensional ndarray only use	index set value arr key value	0.038462
not supported for panel objects and will	core panel to	0.027027
property synonym for	core	0.001326
by a	by	0.038462
return an array	util hash array vals	0.083333
can be used to	build	0.013514
specialized intersection for datetimeindex	datetime index intersection	0.142857
pickle serialize object to input file path parameters	to pickle obj path compression	1.000000
reduction type operation if	ops mixin reduce op name axis	0.083333
overlap add suffixes to	items overlap	0.062500
interpolate values according to	core resampler interpolate	0.166667
of the flattened values of the	core indexes index ravel order	0.037037
in xport format return python date	sas parse date datestr	0.250000
casting data from some accepted dtype to	indexes numeric index assert safe casting cls data	0.047619
this indexable with the	io index col update	0.125000
table in file node must already exist and	io hdfstore append key	0.016667
panel	core panel update	0.500000
have a valid ordered	ordered cls ordered	0.058824
called	indexes index array wrap result	0.100000
using input function	mapper axis copy inplace	0.055556
to compare numeric	numeric v	0.333333
to midnight length is unaltered	datetime index normalize	0.125000
try to connect to the	can connect	0.111111
series columns for dataframe and major_axis for	core ndframe	0.005051
index or ndarray filled with nat which has	index ops mixin nat new	1.000000
of the kinds allowable columns for this	io table queryables	0.055556
a ndarray of the	index	0.002004
see :class packer for	io msgpack packb	0.025641
the numeric	add numeric	0.142857
index objects sortedness of the result is	core indexes range index	0.021277
values & release	index col take data	0.111111
coerces data to ndarray raises on scalar	index coerce to ndarray	0.166667
block s from the result	block where other cond align raise_on_error	0.066667
accessor object for datetimelike properties	properties	0.046512
elements of arr1 and arr2	arr1 arr2	0.066667
converts	num_format_str	0.142857
draw	frame	0.009091
from a 1d array of interval	interval index from intervals cls data name	0.333333
re-evaluate the obj	and	0.066667
according to indexer and return them as	nd indexer	0.030303
return a fixed frequency	bdate range start	0.111111
set of kwargs suitable	kwargs	0.022222
convert tz-aware axis to target	core ndframe tz convert tz axis level copy	0.200000
to an xlwt	xlwt writer convert to	1.000000
the table this is generally only useful	select column key column	0.142857
a string-like that is object dtype and	io convert string array data	0.038462
and be table	hdfstore append	0.016667
getitem defers to the underlying array	index ops mixin getitem	0.250000
returns a row cross-section from the sparsedataframe as	core sparse sparse data frame xs key axis	0.166667
using pre-computed indexer information	axis indexer method axis fill_value	0.500000
a slice	core block slice slicer	0.083333
add in comparison methods	add comparison methods cls	1.000000
operations to the cls evaluate	aggregate operations cls	0.142857
return boolean series denoting	core data frame duplicated	0.500000
parameter value using the with statement	plotting options use key value	0.250000
object that can be used to iterate	html frame	0.014706
append to table	value format append	0.125000
validate this column return the compared against itemsize	col validate col itemsize	1.000000
support start stop kwds	fixed	0.055556
needs additional	period index array	0.050000
argument	arg	0.018868
add the operations to the cls evaluate	core panel add aggregate operations cls	0.500000
class with its symbol already passed	maker op_class op_symbol	1.000000
return the block manager from a dataframe	to manager sdf	0.052632
nan/nat from	val	0.058824
style_dict to an openpyxl style	convert to style cls style_dict	0.166667
to line	convert to line	0.142857
from 1-dimensional ndarray only use this if	arr	0.013699
handle na filling	fillable values indices allow_fill fill_value	0.125000
properties	properties	0.116279
elements that are non-zero this method	core series nonzero	0.166667
window of type window_type and size window	rolling window arg window win_type min_periods	0.100000
positional indexer cannot enlarge its target	positional setitem indexer indexer	0.052632
left <= series <= right na values	core series between left right inclusive	0.200000
the 'info axis' see indexing	keys	0.032258
in hdfstore parameters	hdfstore put key	0.333333
can be used to	html	0.011765
create and return the op	core computation bin op	0.055556
of period frequency	freq	0.016129
by an error is encountered	parser error	0.055556
a tz-aware type return	get tz tz	0.066667
labels	labels labels	0.250000
ndarray	core indexes index set value arr key	0.023810
called after	indexes period index array wrap result	0.050000
generate bin edge offsets and	core generate	0.125000
whether each index value is found in	index ops mixin isin values	0.083333
return a boolean list indicated if we have	have	0.083333
wrapper function for series arithmetic operations to	bool method series op name	0.333333
of the dataset	core series	0.008000
not in	computation not in	1.000000
built up styles to html	io	0.003012
fixed frequency datetime index with business day	core indexes bdate range start end	0.083333
if 'series argmin' is	skipna skipna args	0.100000
apply the given offset/observance to	tseries holiday apply rule	0.200000
for series arithmetic operations	core sparse arith method op	0.333333
is defined as a copy	core indexes multi index view cls	0.047619
casting data from some accepted	numeric index assert safe casting cls data	0.047619
an object dtype	core dtypes	0.037037
add in	ops mixin add	0.333333
use this if	indexes index set value	0.023810
the diff of	diff n axis	0.111111
of value from 1-dimensional ndarray only use	core indexes index set value arr key value	0.038462
series excluding missing values	series	0.006757
string-like and string-like array to convert	core dtypes maybe convert string to	0.250000
to an xlwt	io xlwt writer convert to	1.000000
returns numpy array of python datetime	indexes datetime index	0.007634
operator	op	0.090909
header	io pop header name	0.100000
given delimiter string starting at the end	rsplit	0.031250
if two indices overlap add suffixes	items overlap	0.062500
ftypes (indication of sparse/dense and dtype) in	ndframe ftypes	0.055556
try to convert to dense	core sparse maybe to dense obj	1.000000
to preserve dtype if	putmask smart v m n	0.055556
infer this column from the table create and	io index col infer handler	0.200000
copy of	index copy	0.166667
index objects contain the same	core indexes datetime index ops	0.034483
is found in the	mixin isin	0.166667
to infer better dtype for object columns parameters	ndframe convert datetime numeric timedelta coerce	0.071429
the index or maximum along an axis	index ops mixin max axis	0.333333
a fixed frequency datetime index	indexes	0.004651
coerce a scalar to a compat	indexes period index coerce scalar to	0.071429
the maximum value of the object	core categorical max numeric_only	0.250000
return the op	bin op	0.125000
we are index sliceable then return	index sliceable obj key	0.083333
1-dimensional ndarray only use this if	core	0.001326
series	period	0.016667
a ufunc needs	indexes period index array wrap result context	0.041667
the passed type is an	interval dtype is	0.066667
applying func to each columns	apply columns func	1.000000
to indexer and return	nd indexer axis	0.043478
multiindex from the	indexes multi	0.014493
manager for running code that expects to raise	util assert produces warning	0.071429
scipy sparse	sparse sparse data frame	0.058824
day hour minute second millisecond or microsecond	indexes datetime index ops mixin resolution	0.125000
ndarray only use this if you	index	0.006012
a	ordered	0.017857
number of nanoseconds (>= 0 and less than	core indexes timedelta index nanoseconds	0.066667
the float values	formats float	0.055556
the columns under the index names defaulting	reset index level drop inplace col_level	0.166667
the handle if its	io stata	0.071429
the padded hexadecimal id of	computation raw hex id	0.166667
take optional positional and	util optional	0.066667
elements of v should be inserted in a	searchsorted v	0.033333
return true if this is a valid	is in	0.076923
apply we are stripping	group by mixin apply func	0.050000
the view limits to	time series date locator autoscale	0.055556
convert a scipy sparse coo_matrix to a	core sparse coo to sparse series a	0.166667
create index with target's values (move/add/delete	core indexes multi index	0.013158
set the name of this indexer	io index col set name name kind_attr	0.500000
indices where elements of v should be	frozen ndarray searchsorted v	0.033333
determines if two index objects contain	range index equals other	0.200000
to table	io hdfstore	0.014493
public verson of axis assignment	ndframe set axis axis labels	1.000000
is index for series columns for dataframe	core ndframe	0.005051
wrap comparison operations to convert timedelta-like to	core indexes td	0.055556
compute the symmetric difference of two index	core indexes index symmetric difference other	0.166667
csv file (discouraged please use :func pandas	series from csv cls path	0.066667
return a tree-like object	io html frame parser	0.012195
list indicated if we have mixed levels	core indexes multi index have mixed levels	0.200000
a moving window of	apply window	0.166667
table in file	io hdfstore append	0.016667
series extract groups from the first match	extract arr	0.066667
coerce any object types to better	object block convert	0.083333
xnull	xnull	0.416667
manipulation result has the same dimensions	ndframe constructor	0.055556
try to operate	mixin try	0.250000
dropna	dropna axis	0.083333
lookup	core indexes index set value	0.023810
try to operate on it	try	0.090909
use	key	0.005051
ensure that we	datetime index ops mixin ensure	1.000000
lookup of value from 1-dimensional ndarray	value arr key value	0.038462
a spreadsheet-style pivot table as a dataframe	reshape pivot table data values index	0.166667
be used to iterate over the	io html frame parser	0.012195
for initializing the gradientfill stop	stop	0.050000
return label for last non-na/null value	series last valid index	0.250000
reflecting	setup	0.090909
columns for dataframe and major_axis	core	0.001326
when a manipulation result has the	core ndframe constructor	0.055556
dtype is of the string dtype	is string dtype	1.000000
the numeric add/sub	add numeric	0.142857
coerce a string or np dtype to a	dtypes coerce to dtype dtype	0.500000
timedelta-like	indexes td index	0.055556
the where condition cond on a and b	core computation where cond a b	0.500000
as necessary) returns	reindex target method level limit	0.142857
number of bytes in	multi index nbytes deep	0.052632
table in file node must	hdfstore	0.014925
datetimelike (e	maybe to datetimelike	0.142857
input values as an enumerated type or categorical	core factorize values	0.111111
generator which can be iterated over to get	generator k	0.333333
at particular time	ndframe at time time asof	0.066667
called upon unpickling rather than the default	datetime index cls d	0.111111
convert sparseseries to a series	sparse sparse series to dense sparse_only	1.000000
of arr1 and arr2	arr1 arr2	0.066667
check that left and right index are equal	util assert index equal left right exact check_names	0.333333
node must	io hdfstore append key value format	0.016667
indices of the minimum values along an axis	indexes datetime index ops mixin argmin axis	0.250000
when using a timegrouper	group by resample rule	0.166667
lookup of value from 1-dimensional ndarray	indexes datetime index get value	0.071429
infer the fill	dtypes infer fill	1.000000
sparse/dense and dtype) in	ndframe	0.005025
write a dataframe to the feather-format	io to feather df path	0.250000
ndarray only use	indexes index set value arr	0.023810
unique elements of arr1 and arr2 are	equal contents arr1 arr2	0.066667
to see if we can set a locale	util can set locale	0.333333
a spreadsheet-style pivot table as a dataframe the	core reshape pivot table data values	0.166667
going to write this as a	write obj	0.041667
an ndarray copy if specified coerce to	copy	0.012821
expression that is in the	computation	0.038462
wrap result set	io wrap result	0.333333
that is datetimelike (e	indexes maybe to datetimelike data copy	0.142857
to sif http	to	0.006329
return the actual ne format	computation condition bin op format	0.333333
full scope for use with passing to engines	core computation scope full scope	0.055556
csv file (discouraged please	data frame from csv cls	0.066667
into codes	codes	0.166667
append to table	format append	0.125000
freq with decimal stride into a higher freq	decimal cls value freq	0.333333
dtype types to stata types returns the	io dtype to stata type dtype	0.250000
apply we are	by mixin apply func name	0.050000
function	func	0.166667
exist and	append key value format	0.016667
a curve with holidays between start_date	abstract holiday calendar holidays start end return_name	0.066667
periodindex to the specified frequency freq	indexes period index asfreq freq how	1.000000
concatenate pandas objects along a particular axis with	axis join	0.142857
to be returned from apply if as_index=true	group by index with as	0.200000
evaluate the block return	eval func other	0.200000
gets called after a ufunc	indexes period index array wrap result context	0.041667
compute a simple cross-tabulation	columns	0.017857
passed a manager and a axes dict	ndframe init mgr mgr axes	0.333333
update index attributes e g	timedelta index maybe update attributes attrs	0.200000
series columns for dataframe and major_axis	core ndframe	0.005051
input values as an enumerated type	factorize values sort order na_sentinel	0.111111
read csv file (discouraged please use	core series from csv cls	0.066667
cumulative max for each group	core group by cummax axis	1.000000
that	validate ordered	0.055556
same dimensions as the original	ndframe	0.005025
the date belongs to a leap year	index is leap year	0.142857
that time and	ensure like indices time	0.125000
float values converted into strings using	formats float array formatter	0.055556
out the binary feather-format for dataframes	data frame to feather fname	0.083333
return index	core indexes datetime index	0.007634
pack object	io msgpack	0.025000
index objects and sorts	core indexes range index	0.021277
are	indexes numeric index is	0.333333
remove and return	compat	0.030303
an ndarray of the flattened values	core indexes index ravel order	0.037037
add	index add	0.750000
boolean indicating if self is view	is view	0.100000
return the maximum value of the index	core indexes datetime index	0.007634
totally ordered cartesian product of all possible label	get group index labels shape sort xnull	0.066667
symmetric difference of	symmetric difference	0.166667
analogous to the :meth pandas dataframe reset_index function	level drop name inplace	0.142857
a valid ordered	validate ordered cls ordered	0.058824
if the passed type is	dtypes extension dtype is	0.125000
to convert datetime-like	core indexes dt index cmp opname nat_result	0.066667
from a 1d array of interval	interval index from intervals cls data name copy	0.333333
return whether we have any extra scope	computation scope has resolvers	0.500000
return a block if we are	core block	0.010870
for initializing or updating-on-copy an openpyxl v2	io openpyxl20writer	0.035714
in the numeric add/sub methods	numeric methods	0.500000
gets called prior	core series array prepare result	0.111111
the provided array or	arr_or_dtype	0.142857
new datetimeindex with passed location s deleted	core indexes datetime index delete loc	0.333333
index with passed location -s deleted	core indexes categorical index delete loc	0.333333
curve with holidays between start_date and end_date parameters	calendar holidays start end return_name	0.066667
axis with optional set logic along	reshape concat objs axis join join_axes	0.333333
same dimensions	core ndframe	0.005051
we take a string-like that is object dtype	io convert string array data encoding	0.038462
unique elements in	core index ops mixin nunique dropna	0.083333
the binary feather-format for	feather fname	0.083333
multi-level index return new dataframe with	core data frame	0.005917
localize tz-naive timeseries	localize	0.100000
expanding count of number of non-nan observations	expanding count	0.200000
timedelta-like	td index	0.055556
we need to coerce a scalar to	index coerce scalar to	0.071429
if you	arr key	0.023810
slice	core ndframe slice	0.125000
datetimelike properties	period properties	0.052632
a keyword argument of	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
string matches a regular expression	pat case flags	0.166667
box function	index ops mixin box func	0.142857
to the :meth pandas dataframe reset_index function	index level drop name inplace	0.142857
alert a user about a malformed	io python parser alert malformed msg row_num	0.500000
to apply we	by mixin apply func	0.050000
parse time strings to time objects	core tools to time	0.125000
extension	io excel writer check extension	0.250000
of the values to be at least 1	block shape values	0.050000
return index or ndarray	index ops mixin	0.019231
of this object potentially casting to object	core indexes period index to embed keep_tz	0.333333
to coerce any object types to better	core object block convert	0.083333
propagate metadata from other to	ndframe finalize other	0.333333
unstack a k a pivot series	core series unstack level	0.333333
index or maximum along an axis	core indexes datetime index ops mixin max axis	0.333333
in xport format return python date	io sas parse date datestr	0.250000
defined as a	core indexes multi index view cls	0.047619
provides a resample	timedelta	0.022222
keep_tz	keep_tz	1.000000
internal method to handle na filling of take	index assert take fillable values	0.250000
packer	io msgpack	0.025000
and 'kwargs' should be empty except	func name args kwargs	0.166667
packer for	io msgpack packb	0.025641
an array of	array vals	0.083333
the process of casting	casting	0.076923
compat with blockmanager	core single block manager blklocs	1.000000
columns with an arbitrary number	legacy table read where columns	0.111111
multiindex has only	indexes multi	0.014493
update index attributes e g	index maybe update attributes	0.200000
filepath_or_buffer	filepath_or_buffer	1.000000
function for series arithmetic operations	sparse arith method op	0.333333
boolean if values	ops mixin is	0.100000
connect	can connect	0.111111
index objects contain the same	datetime index ops mixin	0.029412
defined as a copy	core indexes multi index view cls	0.047619
id of	id	0.142857
lookup of value from 1-dimensional ndarray only use	value	0.005155
a manipulation result has the same dimensions as	core ndframe constructor	0.055556
numeric	core dtypes is numeric v	0.333333
detect terminal size and return	terminal size	0.166667
built up	formats	0.031250
float values	float array formatter get result as	0.055556
calculate slice bound that corresponds to given label	core indexes index get slice bound label	1.000000
values according to indexer and return	nd indexer axis	0.043478
provide a nice str repr of our	window unicode	0.071429
null_color	styler highlight null null_color	0.125000
that can be used to iterate over the	io	0.003012
raise keyerror is maps[0]	chain	0.031250
perform the reduction type operation if	core index ops mixin reduce op	0.083333
via the 'numpy' library the	validate take with	0.055556
for more this	ndframe	0.005025
the caption on a styler	styler set caption caption	0.333333
wrap long strings in the series/index	core str wrap arr	0.333333
apply the function to	apply func mgr	0.166667
data	table validate data	0.500000
user about a malformed	malformed msg row_num	0.100000
of type window_type on	mean how	0.166667
ndarray of the flattened values of the underlying	indexes index ravel order	0.037037
is an actual dtype that we	dtypes period dtype is dtype cls dtype	0.142857
to table in	hdfstore append key value	0.016667
number	core indexes multi	0.014493
and 'kwargs' should	args kwargs	0.153846
a fixed size	data encoding itemsize	0.142857
consistent invalid indexer message	indexes index invalid indexer form	1.000000
column and index	core data frame set value index col	1.000000
the index and its underlying data	core indexes index	0.007042
of x in y if	core computation in x y	0.047619
stacked format as dataframe	frame	0.009091
iterate over the	io	0.003012
the built up styles to	io	0.003012
if each string matches a regular expression	flags	0.029412
from	indexes index set value arr key	0.023810
validate the	core ndframe validate	0.500000
rewrite the assignment operator for pytables	computation rewrite	0.125000
given a tuple of slices/lists/labels/boolean indexer to	indexes multi index get	0.100000
the categorical to	core categorical	0.027778
forward	sparse sparse series iter	0.250000
on the last day of the month	month end	0.100000
a dense type view	core single block manager	0.200000
of non-na/null observations in	count	0.055556
spreadsheet-style pivot table as a	reshape pivot table	0.111111
for running code that expects to raise	util assert produces warning expected_warning filter_level clear	0.071429
set	core sparse sparse series set value	1.000000
from a	parser parse	0.250000
to midnight	index	0.002004
in file node must already exist and be	hdfstore append key	0.016667
to write this as a frame table	appendable series table write	0.500000
expected error message	exc_type exc_value trace_back	0.100000
the flattened values of the	ravel order	0.037037
return a fixed frequency	range start end freq periods	0.333333
string starting at the end of the string	rsplit	0.031250
return dtype and n/a	dtype and	0.125000
of casting data from some accepted	assert safe casting cls data	0.047619
am never a	block	0.008197
be used to iterate	io	0.003012
is called via the 'numpy' library the third	compat numpy validate take with convert convert	0.055556
matrix multiplication with dataframe or inner-product with series	series dot other	1.000000
validate	core ndframe validate	0.500000
set the value inplace return a	value	0.005155
values	series	0.013514
lookup of value from 1-dimensional ndarray	index set value arr key value	0.038462
exist and	hdfstore append key	0.016667
for making this object picklable	index reduce	0.333333
of the dataframe's series using matplotlib / pylab	column by grid	0.200000
time index using the index's frequency	core ndframe tshift periods freq	0.066667
of arr1	equal contents arr1	0.066667
compatiable fill_value and arr dtype then fill	core dtypes maybe fill arr fill_value	0.333333
determine if each	match arr	0.166667
construct an intervalindex	core indexes interval index	0.062500
a string representation for a particular object	dtypes extension dtype bytes	0.142857
indices that would sort the index and	core indexes index argsort	0.166667
each element in the series/index	core str	0.011364
making this object picklable	sparse array reduce	0.333333
read csv file (discouraged please use	from csv cls path header sep	0.066667
whether the file	io hdfstore	0.014493
trims zeros	trim zeros	1.000000
read sql query	io read sql sql con index_col coerce_float	0.166667
a boolean if we are a single block	block manager is	0.250000
a nice str repr of our rolling	window unicode	0.071429
i am a non-datelike	datelike	0.142857
the number	core indexes range	0.062500
reindex using pre-computed indexer	sparse block reindex axis indexer method axis fill_value	0.500000
evaluate the block return result block from the	block eval func other raise_on_error try_cast	0.333333
context	io stata reader	0.142857
get integer location slice or	core indexes multi index get loc key	0.500000
data	core ndframe slice	0.125000
handle specific apply logic	tseries semi month offset apply n other	0.200000
homogeneous dtype	ndframe as blocks copy	0.142857
indexer return the	indexer	0.009174
filter	filter	0.294118
the float values converted	io formats float array formatter get result as	0.055556
in file node must	key value format	0.016667
a timedelta	timedelta	0.022222
series or by a series	by axis	0.045455
a frame	frame table	0.333333
how	how	1.000000
instances of all the	all	0.043478
hash table-based unique uniques are returned in order	core unique values	0.333333
axis indicies	panel extract axes data axes	0.142857
create/cache the	io	0.003012
take items along any axis	core block manager take indexer axis verify convert	1.000000
the whole block as one	core single block manager	0.200000
slice of myself	categorical slice slicer	0.111111
the union of two index objects and sorts	index union other	0.037037
given an interval or intervalindex return the corresponding	core indexes get interval	0.125000
copy	index copy	0.166667
rewrite the assignment operator for pytables	core computation rewrite assign	0.125000
index with day calendar as	indexes	0.004651
csv file (discouraged	series from csv cls path	0.066667
if we define an builtin function	selection mixin is builtin func arg	0.333333
elements that are non-zero this method is	series nonzero	0.166667
where is a term	where scope_level	0.142857
numpy array of python datetime date	core indexes datetime	0.011494
the parser based on	io parser	0.250000
form the union of two index	indexes range index union other	0.083333
orient	orient	1.000000
:meth pandas dataframe reset_index function see	drop name inplace	0.142857
datetimeindex with	core indexes datetime index	0.007634
pairwise correlation	corr method	0.500000
indexer like	cls name indexer	0.083333
all of the data are	core data	0.041667
to parse a ndarray like	convert data name	0.200000
validate percentiles used by describe	check percentile q	0.333333
bit of a hack to accelerate unioning	indexes datetime index union many others	0.040000
memory usage of my values	indexes range index memory usage deep	0.200000
common post process for	plotting mplplot post plot logic common	0.333333
an indexer	indexer	0.009174
datetime index with custombusinessday as the	indexes cdate range start end periods	0.083333
slight speedups using calcurated values	tseries business hour mixin on offset dt businesshours	1.000000
if we are index sliceable then return my	core convert to index sliceable obj key	0.083333
algos groupsort_indexer implements counting sort	sorter group_index ngroups	0.250000
return vector of label values for requested level	level values level	0.250000
left and right dataframe are equal	assert frame equal left right	0.333333
the reduction type operation	core categorical reduce op name	0.500000
deal with nat-like arg is a passed in	arg errors	0.026316
to apply	mixin apply func	0.050000
type that can be coerced to	index simple new cls	0.090909
the data & release the	col take data	0.055556
has only the	io	0.003012
lookup of value from 1-dimensional ndarray only use	categorical index get value	0.100000
pairwise correlation of columns	core data frame corr	0.111111
to convert timedelta-like	core indexes td index	0.055556
the index and	range index	0.021739
from panel	core panel dropna	0.333333
as the default frequency	periods freq	0.125000
fast lookup of value from 1-dimensional ndarray only	indexes datetime index get value	0.071429
reshape data	core data	0.041667
convert to our native types	to native types slicer	0.250000
block for the diff of the values	block diff n axis mgr	0.333333
table in file node	hdfstore append	0.016667
minute second millisecond or microsecond	indexes datetime index ops mixin resolution	0.125000
dataframe the levels	data values index columns	0.066667
function for series arithmetic operations to	core arith method series op name	0.333333
after	core indexes period index array wrap	0.050000
the	core indexes multi	0.028986
run the same function multiple times in parallel	parallel num_threads kwargs_list	1.000000
a data	validate data columns	0.500000
write this as a frame table	series table write obj	0.333333
putmask the data to the block	putmask mask	0.142857
left and right index are equal	index equal left right	0.333333
that do not	util	0.062500
our asof key	asof key	0.250000
supported for panel objects and	panel	0.017857
validates that we have a valid ordered parameter	cls ordered	0.058824
return an attributes dict	index get attributes dict	0.250000
read html tables into a list	io read html io match flavor header	0.200000
union of	multi index union	0.333333
the union of two index objects and sorts	core indexes range index union other	0.083333
return block	core block	0.010870
if we have mixed	core indexes multi index have mixed	0.166667
url has a valid protocol	is url url	0.047619
and return the op string for this termvalue	op generate v	0.250000
compute the expected nrows	table nrows expected	0.142857
we require	core indexes datetime index simple new cls	0.250000
determines if two index objects	core indexes index equals other	0.200000
singular 'name' parameter for general index	indexes index validate names	0.066667
path's extension against	io excel writer check extension cls	0.125000
that create a table	table create table	0.166667
to convert timedelta-like	indexes td index cmp opname	0.055556
float that can safely be cast to an	val min_val	0.083333
resample of	timedelta	0.022222
underlying	indexes	0.009302
dataframe are equal	frame equal	1.000000
return a	core categorical	0.013889
of the stata date formats to a type	convert datetime to stata type	0.200000
helper function that converts json lists to	to	0.006329
to avoid code duplication	name str_rep default_axis	1.000000
series that is datetimelike (e	indexes maybe to datetimelike	0.142857
has a homogeneous dtype	core ndframe as blocks copy	0.142857
interpolate values according to different	resampler interpolate method axis limit inplace	0.166667
i : int slice	data frame ixs i	0.200000
of openpyxl is	is	0.005291
write	write	0.142857
index with business	core indexes bdate	0.050000
keeps track of whether	set test mode v	0.142857
the 'info axis' see indexing for	keys	0.032258
ndarray only use this if you	value	0.005155
fixed frequency datetime	period range start end periods freq	0.333333
an	parser	0.008000
only use	arr	0.013699
dataframe as an	data frame to	0.037037
series equivalent to left <=	left	0.018519
a sequence of terms for instances	terms	0.034483
values for a column	col values values	1.000000
converts a style_dict to an xlsxwriter format object	xlsx writer convert to style style_dict	0.166667
'info axis' see indexing for more	core ndframe keys	0.083333
curve with holidays between	abstract holiday calendar holidays start end return_name	0.066667
dispatch to apply we are	apply func	0.027027
for background_gradient that don't break with non-numeric data	core maybe numeric slice df slice_ include_bool	0.500000
whether i can attempt conversion to	convertible to	0.333333
get integer location	multi index get loc	1.000000
the ftypes (indication of sparse/dense and dtype)	ndframe ftypes	0.055556
an axes dictionary	core ndframe construct axes dict axes	0.166667
interval in the index	core indexes interval index	0.062500
input function or functions	rename axis mapper axis copy	1.000000
of	index set value arr	0.023810
ndarray only use this if you	value arr	0.023810
types format slicing if desired	types slicer na_rep date_format	0.200000
from each element	arr	0.013699
provide a nice str repr of our rolling	window unicode	0.071429
creating a subclass of styler with a	styler from	0.076923
encode input values as an enumerated type or	core factorize values sort order na_sentinel	0.111111
of a hack to accelerate unioning a collection	datetime index union many others	0.040000
a new unit if needed otherwise	datetime tzdtype new cls unit tz	0.055556
we need to coerce a scalar	index coerce scalar	0.250000
function for series	comp method series	0.333333
set the	io index col convert	0.500000
called via the 'numpy' library the third	with convert convert args kwargs	0.055556
by default	formats	0.031250
an array of deterministic integers	util hash array vals encoding hash_key categorize	0.250000
is an actual dtype that we	core dtypes period dtype is dtype cls dtype	0.142857
dataframe in specified column	data frame set item key value	0.250000
the correct pandassql subclass based on	io pandas sql builder con flavor schema meta	0.055556
to dispatch to	compat dispatch name	0.500000
limit	limit	0.500000
compute the vectorized membership of x in	core computation in x	0.166667
float values converted into	io formats float array	0.055556
evaluate the	eval func	0.200000
returns value occupying requested label default to	sparse series get label default	0.083333
of this container	slobj axis kind	1.000000
create and return the op string for this	bin op generate	0.066667
sql query into a dataframe	sql query sql con index_col coerce_float	0.333333
inferred	inferred	1.000000
typ	typ	1.000000
resample	index	0.006012
if categoricals are the	equal	0.050000
dataframe and	ndframe	0.005025
second millisecond or microsecond	datetime index ops mixin resolution	0.125000
passed type is an actual dtype that we	dtypes interval dtype is dtype cls dtype	0.142857
to apply we are stripping all	mixin apply func	0.050000
dictionary	core ndframe construct axes dict from	0.250000
of a series excluding elements from groups	series group	0.030303
new sparsedataframe	sparse sparse	0.034483
by	ndframe group by	1.000000
the values to be at	values	0.008547
sparse	core sparse sparse	0.137931
or strings in each element in the	core	0.001326
label values for requested level	values level	0.250000
holidays between start_date and end_date	tseries abstract holiday calendar holidays	0.166667
apply the given offset/observance	holiday apply rule	0.200000
in numeric unary methods	numeric methods unary cls	1.000000
called after a ufunc needs additional handling as	period index array wrap result context	0.041667
if we have bytes decode them to unicode	io ensure decoded s	0.166667
valid ordered parameter if	categorical validate ordered cls ordered	0.058824
a block of same	make block same	0.333333
reduction type operation if	ops mixin reduce op	0.083333
version of putmask that potentially upcasts	dtypes maybe upcast putmask	0.200000
the data is sparse|dense	series ftypes	0.250000
the store close it if	io	0.003012
array interface	categorical index array dtype	0.125000
a compatiable fill_value and arr dtype then fill	core dtypes maybe fill arr fill_value	0.333333
add series to dataframe	core data frame	0.005917
compute pairwise correlation of columns excluding na/null	core data frame corr method	0.111111
name for generation (e g	computation bin op	0.055556
convert to our native types	categorical block to native types	0.250000
input array to the smallest	categories	0.062500
are index sliceable then return	convert to index sliceable obj key	0.083333
specialized intersection	core indexes datetime index intersection other	0.142857
holidays between start_date	abstract holiday calendar holidays	0.166667
read csv file (discouraged please use :func	from csv	0.066667
our native types format	native types slicer na_rep date_format quoting	0.200000
a new block manager	block manager reduction	0.250000
_convert_string_array	io unconvert string array	1.000000
of unique elements of arr1 and	equal contents arr1	0.066667
if multiindex	indexes multi	0.014493
styler with a	styler from	0.076923
to correctly handle	resampler convert obj obj	0.166667
getting a cross-section	xs loc	0.250000
that can be	io	0.003012
fill value for	fill value	0.222222
a masked rec array and create the manager	core masked rec array to mgr data index	0.500000
node must already	io hdfstore append key	0.016667
perioddelta	perioddelta	1.000000
the table this is generally only useful to	io hdfstore select column key column	0.142857
need to coerce a code	maybe coerce freq code	0.076923
result as block	core block getitem block	0.250000
array of python datetime date	datetime index	0.007042
form the intersection of two index objects	indexes index intersection other	0.166667
a copy of this object names dtype	copy names dtype	0.333333
for panel objects and will	core panel	0.019231
shift without copying data the shifted data will	core ndframe slice shift periods axis	0.083333
construct dataframe from dict	data frame from dict cls data orient	0.200000
that we	core categorical	0.013889
apply a	apply	0.026316
after a	core	0.003979
categorical by hashing its categories and	categorical c encoding hash_key	0.142857
i am never a	categorical	0.009615
in file node must already exist	value format	0.016667
validates	categorical validate	0.055556
the handle if its open	io stata reader	0.142857
of bytes in the	multi index nbytes deep	0.052632
a 1d array of	intervals cls data name copy	0.250000
string in the series extract groups from	str extract frame arr	0.047619
context	context	0.119048
return a slice	core categorical slice slicer	0.111111
operations to convert datetime-like to	core indexes dt index cmp opname nat_result	0.066667
styler	styler	0.155556
second holiday of two adjacent ones!	tseries next monday or tuesday dt	0.200000
a new unit if needed otherwise	core dtypes datetime tzdtype new cls unit tz	0.055556
number of seconds (>= 0	indexes timedelta index seconds	0.066667
the stata date	stata	0.022222
return a formatter function for	formats get	0.090909
an internal format currently just the ndarray	block internal values dtype	0.111111
index objects and sorts if	range index	0.021739
and and	computation	0.038462
is found in	mixin isin	0.166667
a new datacol with the block i	for block cls i name cname	0.333333
blocks collect and create	f axis consolidate transposed	0.062500
of bytes in	multi index nbytes deep	0.052632
to the :meth pandas dataframe reset_index function see	core series reset index level drop name inplace	0.142857
the union of two multiindex	index union other	0.037037
see if we can	can	0.111111
the indexer fill with the fill_value	nd indexer allow_fill fill_value	0.250000
via the 'numpy' library the third	compat numpy validate take with convert	0.055556
of sparse/dense and dtype) in	core ndframe	0.005051
elapsed	elapsed	1.000000
errorbar data or return the error dataframe/dict	plotting mplplot parse errorbars label err	0.142857
times to midnight length is	core indexes datetime	0.011494
for making this object picklable	core indexes multi index setstate state	0.333333
return a tree-like	frame	0.009091
new index	indexes index putmask	0.333333
metadata for	metadata	0.100000
increasing	increasing	0.833333
block of same	make block same	0.333333
index or ndarray filled with	datetime index ops	0.034483
construct this type from a string	categorical dtype construct from string cls string	0.166667
over	parser build	0.014706
resample	period index	0.024390
convert to object	multi index to	1.000000
frequency datetime index with business day	indexes bdate	0.050000
a tuple of axis dimensions	core ndframe shape	0.200000
from maps[0] raise keyerror	compat chain map	0.032258
only use this	core indexes index set value arr	0.023810
list of tuples of the (attr formatted_value)	index ops mixin format attrs	0.142857
render the	styler render	0.142857
context manager for temporarily setting a locale	set locale new_locale lc_var	0.250000
to shift without copying data the shifted data	ndframe slice shift	0.083333
this as a frame table	table	0.021739
dataframe to a tabular environment table	data frame to latex buf columns col_space header	0.111111
the value inplace return a	value mgr	0.083333
a fixed frequency datetime	range start end	0.066667
return an axes dictionary for myself	core ndframe construct axes dict axes	0.166667
check if the object is dict-like	core dtypes is dict like	0.333333
validate that the	validate	0.027778
of index to be returned from	index	0.002004
as series or by a series	by axis	0.045455
the values axes	io	0.003012
sparse coo_matrix from a sparseseries with	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
convert a range argument	ndframe indexer convert range key is_setter	1.000000
the bool of	bool	0.043478
shift without copying data the shifted data	slice shift periods axis	0.083333
the fractional part of the	frac x precision	0.100000
all values found in index	transform index index	0.500000
to a tabular environment table you	to latex buf columns col_space header	0.200000
of whether each index value is found in	indexes datetime index ops mixin isin values	0.083333
rearrange index levels using input order may not	core series reorder levels order	0.333333
interface to create holidays following certain rules	holiday calendar	0.333333
casting data from some accepted dtype	safe casting cls data	0.047619
put method to its values	core series put	0.055556
csv file (discouraged please use :func	core series from csv cls path sep	0.066667
apply aggregation function or functions	core resampler aggregate arg	0.250000
our input	sanitize values arr	0.200000
get instances of all the	util all	0.055556
a dataframe sorted by the n largest values	data frame nlargest n	0.166667
new unit	dtypes datetime tzdtype new cls unit tz	0.055556
repr should show the info view	core data frame info repr	0.333333
belongs to a leap	core indexes period index is leap	0.125000
specialized shift which produces a	ops mixin shift n	0.250000
and	io hdfstore append key value format	0.016667
of value from 1-dimensional	arr key value	0.038462
accessor object for datetimelike properties of the series	period properties	0.052632
tuples of the (attr formatted_value)	indexes range index format attrs	0.142857
la re split in the series/index	core str split arr	0.166667
are going to write this as a	write obj	0.041667
gets the mode s	mode	0.050000
file	hdfstore append key value format	0.016667
series extract groups	extract	0.060606
interpolate values according to	resampler interpolate method axis limit inplace	0.166667
box	index ops mixin box	0.500000
whether the frame	formats data frame	0.090909
float values converted	float array formatter	0.055556
for ordered data like time series data	ordered	0.017857
set of query in a dataframe	data columns index_col coerce_float	0.333333
gets the categories	core categorical get categories	0.333333
block manager from a dataframe of	sparse to manager sdf	0.052632
packed bytes see :class packer for options	packb	0.022727
a homogeneous dtype	core ndframe as blocks copy	0.142857
index objects sortedness	range index	0.021739
in the series/index by	core str	0.022727
is called via the 'numpy' library the	numpy validate take with convert convert args	0.055556
the series values	period	0.016667
indexed	indexed	1.000000
a resample	datetime	0.006711
coerce a	index coerce	0.125000
needs additional handling as	index	0.002004
split each string a la re split	split	0.100000
label is not contained a	label	0.028571
ndarray only use this	categorical index	0.045455
retrieve the metadata	read metadata handler	0.500000
called after	array wrap	0.075000
ndarray only use this if you	value arr key	0.023810
return a string representation for	indexes frozen ndarray unicode	0.083333
for making this object picklable	sparse sparse array reduce	0.333333
the underlying data which is	index	0.002004
whether the file is	io hdfstore is	0.200000
seconds (>= 0 and	indexes timedelta index seconds	0.066667
check that left and right index are equal	util assert index equal left right	0.333333
helpful message about our construction	construction error tot_items block_shape axes e	0.333333
the block i	io data col create for block cls i	0.333333
of value from 1-dimensional ndarray only use	core indexes period index get value series key	0.071429
table this is generally only useful	io hdfstore select column key column	0.142857
it has one	core series	0.008000
value	get value	0.333333
sets names on levels warning mutates!	index set names names level validate	0.200000
in the numeric add/sub methods	indexes index add numeric methods	0.500000
block manager from	sparse to manager sdf	0.052632
into codes given	get codes	1.000000
blocks	blocks	0.500000
equivalent to left <= series <= right na	core series between left right inclusive	0.200000
return an item pair from maps[0]	map popitem	0.055556
to add	computation add	0.333333
swap level i with level j do	multi index swaplevel i j	0.333333
intervalindex from a 1d array of interval objects	core indexes interval index from intervals cls	0.333333
from the first match of regular expression pat	frame arr pat flags	0.166667
you	index set value arr key	0.023810
running code that expects to raise or not	util assert produces warning	0.071429
(attr formatted_value)	indexes multi index format attrs	0.142857
to a separate excel sheet parameters	to excel path na_rep engine	0.333333
return boolean if values in	core index ops mixin is	0.100000
fast lookup of	arr	0.013699
simple	index columns	0.028571
and 'kwargs' should be empty except	args kwargs	0.076923
return a	html	0.011765
for groupby objects	by	0.038462
long-format data to wide generalized inverse of dataframe	lreshape data groups	0.333333
using matplotlib / pylab	data column by grid	0.200000
capture stderr	util capture stderr	0.055556
render	buf columns col_space	0.500000
elements of arr1 and arr2 are equivalent	equal contents arr1 arr2	0.066667
a categorical adjusted for groupby	core indexes categorical index codes for groupby sort	0.333333
an xarray object from	core ndframe to xarray	0.125000
an indexer coerced to the codes	core categorical maybe coerce indexer indexer	0.125000
using the interpolate machinery	block interpolate with fill method	0.200000
month	month begin	0.111111
return dtype and n/a	get empty dtype and	0.125000
json lists to line	to line	0.142857
index for	ndframe	0.005025
pprinter for iterables you should probably use pprint_thing()	io formats pprint seq seq _nest_lvl max_seq_items	0.333333
file node must already exist and be table	hdfstore append key	0.016667
create the manager	mgr data index	0.333333
that we have a astypeable to categorical	core block is categorical astype dtype	0.333333
in file	hdfstore append	0.016667
returns the indices that would sort the index	indexes range index argsort	0.166667
draw histogram of the dataframe's series	plotting hist frame data column	0.200000
of the dataframe's series using matplotlib / pylab	by grid	0.200000
index with requested level removed if	index droplevel level	0.250000
panel objects and will	panel to sparse	0.037037
'series argmin'	skipna skipna args	0.100000
of	series	0.006757
if each string matches a regular expression	case flags	0.166667
index objects contain	core indexes datetime index ops mixin	0.029412
method to class python 2	method cls name	0.076923
an html table	to html	0.250000
a multirow e	format multirow	0.250000
cross-tabulation of two or more factors by default	columns values rownames	0.333333
in the series/index by indicated number of times	core str repeat arr repeats	0.500000
format my specific	indexes interval index format	0.500000
index	datetime index maybe	1.000000
or ndarray filled with nat which has the	ops mixin nat new	0.050000
series extract groups	core str extract	0.071429
we have a dtype compat for	name freq	0.083333
the 'numpy' library the third	validate take with convert	0.055556
plot attribute	group by plot	0.062500
of the	period	0.016667
list-like indexer return the	index convert list indexer keyarr kind	0.066667
datetime format of a given datetime string	datetime format dt_str dayfirst	0.250000
actual filter format	computation filter bin op format	0.333333
a simple	reshape	0.037037
gets	core indexes period index	0.034483
the td elements	td obj	0.333333
prior	series array prepare result	0.111111
a boolean whether this axes needs validation for	indexer should validate iterable axis	0.166667
cartesian product of all	sort	0.083333
trims zeros	formats trim zeros	1.000000
sparsearray	sparse	0.052632
are not a floating index	core indexes index maybe cast indexer	0.200000
input values as	values sort	0.333333
build an xpath expression to simulate	io build xpath expr attrs	0.200000
cast to periodindex at a particular frequency	core indexes datetime index to period freq	1.000000
to get lines 0) there are headers on	python parser get index name columns	0.166667
times to midnight length	core indexes	0.004762
a resample of	period index	0.024390
appropriate keys for orient='split'	keys split decoded	1.000000
in	append key value format	0.016667
determines if two index objects contain	index equals other	0.200000
new labels on	labels labels	0.250000
to capture stderr	capture stderr f	0.055556
satisfy the boolean criterion specified by	core ndframe group by filter	0.200000
from the iterable	iterable	0.111111
underlying array which by-definition	datetime index ops mixin	0.029412
panel along major axis	panel major xs key	0.500000
maximum	max subset	0.166667
datetime date objects	indexes datetime index	0.007634
of an series	core series	0.008000
equivalent to shift without copying data the shifted	ndframe slice shift periods axis	0.083333
aggregate	aggregate	1.000000
if	if	0.555556
ndarray filled with nat which has the	mixin nat new	0.050000
a tree-like	html	0.011765
swaplevel	swaplevel	0.833333
but cannot append to : write out	write	0.017857
object o and return packed bytes see :class	o	0.043478
of a groupby implementation	period index resampler groupby	0.166667
analogous to dataframe apply	data frame apply func axis broadcast reduce	0.333333
return	core indexes range	0.062500
compute pairwise correlation of columns excluding na/null values	core data frame corr method min_periods	0.111111
a resample	datetime index resampler	0.066667
and string-like array to convert	maybe convert string to	0.250000
sets index names	names data	0.083333
dataframe apply for	sparse data frame apply func	0.166667
the values & release the	index col take data	0.111111
fname are valid	fname	0.071429
coerce to the new	copy errors values	0.250000
via the 'numpy' library	numpy validate take with convert	0.055556
if we have a float key and are	key	0.005051
evaluate a	evaluate	0.111111
returns previous weekday used for observances	tseries previous workday dt	1.000000
the mode s	series mode	0.083333
regular expression in	pat flags	0.052632
convert tz-aware datetimeindex from one	core indexes datetime index tz convert tz	0.166667
box function to get object from internal	mixin box func	0.142857
to operate on as the	try operate values	0.333333
interval in the	interval	0.029412
unique elements of arr1 and arr2 are	contents arr1 arr2	0.066667
the shape of the values to be	core block shape values ndim shape	0.083333
specialized intersection for	core indexes datetime index intersection	0.142857
the left and right sparsedataframe are equal	sp frame equal left right check_dtype exact_indices	0.333333
read csv file (discouraged	core data frame from csv	0.066667
sql statement that create a	table create	0.043478
file	io hdfstore append key value format	0.016667
parameter if	categorical validate	0.055556
be table	hdfstore append	0.016667
apply	formats styler apply	0.500000
from	core indexes index set	0.023810
a categorical possibility	categorical array	0.333333
the name	name	0.025000
after	period	0.016667
the bool of a	core ndframe bool	0.055556
fill_zeros	fill_zeros	1.000000
return the number of bytes in the underlying	multi index nbytes deep	0.052632
constructs ndframe from group with provided name parameters	core group by get group name obj	1.000000
pandas type to	type x	0.055556
to a latex tabular/longtable environment output	to latex column_format longtable encoding multicolumn	1.000000
try to operate	core selection mixin try	0.250000
have a	categorical validate	0.055556
sparse/dense and	ndframe	0.005025
create a new unit if	tzdtype new cls unit tz	0.055556
whether i can attempt conversion to a	convertible to index other	0.333333
float values converted into strings using	io formats float array	0.055556
the values to be at least 1 d	core block shape values ndim	0.050000
nrows	custom dataframe nrows	1.000000
filled with nat which has	nat new	0.050000
is of the timedelta64[ns]	is timedelta64 ns	1.000000
the correct day for each date in i	i roll	0.500000
numpy / pandas type to	type	0.024390
a datetimelike	datetime	0.006711
the isin boolean array	core isin comps values	0.500000
and be	io hdfstore append	0.016667
internal method to handle na filling	fillable values indices allow_fill fill_value	0.125000
location slice	loc key	0.250000
convert tz-aware datetimeindex from one time zone to	core indexes datetime index tz convert tz	0.166667
or columns using input function	mapper axis copy inplace	0.055556
read csv file (discouraged please use :func	core series from csv cls path	0.066667
sanitize an index type	core sanitize index data index	0.200000
convert sparseseries to a series	sparse series to dense sparse_only	1.000000
the flattened values of the underlying	ravel order	0.037037
on 3 columns	columns	0.017857
perform the reduction type operation	ops mixin reduce op name axis skipna	0.083333
item of the underlying data	core index ops mixin	0.062500
type to its	type x	0.055556
return dateoffset object from string or tuple	tseries to offset	0.200000
fully deleting the node	io	0.003012
spreadsheet-style pivot table as a dataframe the	reshape pivot table data values	0.166667
a given axis	axis method na_option	0.250000
or functions	core ndframe rename	0.333333
operations to convert timedelta-like to	indexes td index cmp opname nat_result	0.055556
nat	nat	1.000000
offsets index to beginning of	date offset beg apply index i	0.333333
creating a subclass of styler with a	formats styler	0.021739
passed type is	extension dtype is	0.125000
according to indexer and return them	indexer axis	0.043478
make a scatter plot from two dataframe columns	plotting scatter plot data	0.125000
ndarray only	index	0.006012
for our index	index	0.002004
values at	core ndframe at	0.333333
return a new datacol	name cname	0.111111
to parse a ndarray	convert	0.032258
return an item pair from	compat chain map popitem	0.055556
each string in the series/index starts with passed	core str startswith arr	0.250000
input into a pandas only dtype object or	pandas	0.035714
to read from a	read obj	0.058824
the key or	key	0.005051
this is defined as a	index view cls	0.047619
unit if needed otherwise	cls unit	0.125000
that an positional indexer cannot enlarge its	ndframe indexer has valid positional setitem indexer indexer	0.052632
new freq essentially a	resampler asfreq fill_value	0.066667
a string-like that	io convert string array	0.038462
defined as a	index view cls	0.047619
value from 1-dimensional ndarray only use	core indexes datetime index get value series	0.071429
select values at particular time of	ndframe at time time	0.066667
a fixed frequency datetime index with custombusinessday as	core indexes cdate range start	0.083333
get lines 0) there are headers on	python parser get index name columns	0.166667
validate that the where statement is	core computation validate where w	0.250000
as series or by a series of columns	ndframe groupby by axis	0.333333
each string in the series/index by indicated	core str	0.011364
of transform only applicable	core series group by transform	0.250000
a console-friendly tabular output	string buf columns col_space header	0.500000
bar	bar	1.000000
nat which has the same length as	mixin nat new box	0.050000
dict of	dict cls	0.166667
return the op string for	computation bin op generate	0.066667
of a categorical	categorical	0.009615
for series arithmetic operations to avoid code duplication	sparse arith method op name str_rep default_axis	1.000000
we have a valid ordered	core categorical validate ordered cls ordered	0.058824
is an actual dtype that	is dtype cls dtype	0.130435
a new unit if needed otherwise return	new cls unit tz	0.055556
indexer which could be a	indexer indexer	0.071429
for datetimelike properties of the series	timedelta properties	0.052632
that converts json lists to	convert to	0.090909
stride into a higher freq	cls value freq	0.083333
determines if two index objects contain the same	indexes datetime index ops mixin equals other	0.200000
iter2 iterables that produce elements comparable with	iter2	0.083333
if we if the passed type is an	dtype is	0.032258
for this indexable	io index col update	0.125000
index	indexes range index	0.085106
expected exception	contextmanager exception	0.166667
validate that we have a	is	0.005291
overlap add suffixes to	core items overlap	0.062500
panel-like dataframe parameters	core panel index time panels names	0.076923
statement that create	io sqlite table create	0.066667
multiindex at	multi index sortlevel	0.166667
a string representation for	indexes index unicode	0.083333
reverse of	core	0.002653
downsample the cython defined	index resampler downsample	0.200000
*this is an	categorical index	0.090909
to the length of that group	group by	0.016129
given a tuple of slices/lists/labels/boolean	indexes multi index get	0.100000
and right	right check_dtype	0.500000
the process of casting data from some accepted	casting cls data	0.047619
we have a valid ordered parameter if	validate ordered cls ordered	0.058824
my pandas	io fixed	0.166667
and be table	io hdfstore	0.014493
additional handling as	wrap result	0.022727
return number of unique elements in	index ops mixin nunique dropna	0.083333
get integer location for requested label parameters	core indexes categorical index get loc key method	0.500000
csv file	frame from csv cls path header sep	0.066667
not supported for panel objects and will raise	core panel	0.019231
remove and	map	0.029412
cast to periodindex at a particular frequency	indexes datetime index to period freq	1.000000
a numeric unary operation	numeric unaryop op opstr	0.333333
read csv	data frame from csv cls	0.066667
wrapper function for	core sparse arith method	0.333333
returns the indices that would sort the index	core indexes range index argsort	0.166667
type window_type and size window on the	arg window win_type	0.100000
block	col create for block	0.333333
fast lookup of value from 1-dimensional ndarray	datetime index get value series	0.071429
indexer fill with the	indexer allow_fill	0.050000
to group return result as series or by	by axis	0.045455
to	format	0.012346
is datetimelike (e	core indexes maybe to datetimelike data	0.142857
the symmetric difference of two	symmetric difference other	0.333333
only use this	arr	0.013699
to be applied on each value to format	formats float array formatter value formatter float_format threshold	0.100000
indexer like _name in the class	indexer	0.009174
produce 'pivot' table based on 3 columns of	reshape slow pivot index columns values	0.500000
a string representation	core indexes index unicode	0.083333
determine if	core str match	0.166667
of the flattened values of the underlying	indexes index ravel order	0.037037
itemsize	itemsize	0.162162
slice of	core datetime tzblock slice slicer	0.083333
attempt to construct this type	categorical dtype construct	0.333333
dict of the counts	counts f	0.041667
casting data from some	indexes numeric index assert safe casting cls data	0.047619
csv file (discouraged please use :func pandas read_csv	from csv cls path header sep	0.066667
v	v	0.157895
fill value	fill value	0.222222
for more this is index for series	ndframe	0.005025
sorted ndframe	ndframe	0.005025
python datetime date objects (namely	core indexes datetime index	0.007634
force all buffered modifications to be written to	hdfstore flush fsync	0.200000
supported for panel objects and will raise an	core panel to sparse	0.037037
header rows	pop header	0.100000
lookup of value from 1-dimensional ndarray only use	indexes datetime index get value series key	0.071429
bytes in the	index nbytes	0.052632
in the	inplace	0.027778
'numpy' library	numpy validate take with	0.055556
accelerate unioning a collection of indexes	core indexes datetime index union many others	0.040000
called after a	wrap result	0.068182
that is thrown	parser	0.008000
the categorical by category value returning	inplace ascending na_position	0.071429
the item of the underlying data	core index ops mixin	0.062500
only use this if	indexes index set	0.023810
we take a string-like that is	io convert string array	0.038462
as an html table	to html	0.250000
sanitize input data to an ndarray	core sanitize array data index	0.250000
indexer and return them as a	indexer axis	0.043478
options	msgpack	0.022222
on column values uses	values	0.008547
csv file (discouraged please use :func pandas read_csv	series from csv cls path sep	0.066667
the series extract groups	extract	0.060606
true if the	core is	0.200000
for dataframe major_axis for panel	core ndframe iteritems	0.055556
and setup my atom from the	io data col set atom	0.333333
return the number of	indexes multi index	0.013158
where is	where scope_level	0.142857
scipy sparse coo_matrix from a sparseseries with	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
in the series/index by the given delimiter string	core str	0.011364
validates	core categorical validate ordered	0.055556
index objects contain	indexes	0.004651
perform the reduction type operation if we can	ops mixin reduce op name axis	0.083333
plots a series	series	0.006757
validate this column return the compared against	validate col	0.200000
input values as an enumerated type or	factorize values sort order na_sentinel	0.111111
for this level	has level	0.333333
isin boolean array	isin comps	1.000000
to table in file node must	format	0.012346
that we have a	block is	0.045455
a spreadsheet-style pivot table as a dataframe the	reshape pivot table data	0.166667
right	right check_dtype	0.500000
validates that we have a valid ordered	cls ordered	0.058824
try to parse a	try convert data	0.200000
index or	datetime index	0.007042
to a list of columns as lists	to str columns	0.500000
the 'numpy' library the	numpy validate take with	0.055556
or by a series of columns	ndframe groupby by axis	0.333333
perform an asof merge this is similar	core reshape merge asof	0.071429
with level j do not	j	0.034483
new dataframe with labeling information in	core data frame	0.005917
result as series or by a series of	by axis	0.045455
the reduction type operation if we	index ops mixin reduce op	0.083333
if a url has	url url	0.045455
return index to be used along concatenation	reshape concatenator get concat	1.000000
table in	value format	0.016667
function to get object from internal representation	func	0.011905
of available options	options	0.041667
a	result	0.049180
to its values attribute	core	0.001326
return vector of label values for requested level	values level	0.250000
a simple cross-tabulation of	crosstab index	0.066667
block manager from a dataframe of series	sparse to manager sdf columns index	0.052632
of	core indexes index set	0.023810
cast to datetimeindex of timestamps at *beginning*	series to timestamp freq how copy	0.500000
block i	for block cls i	0.333333
the series extract groups from the first match	str extract arr	0.066667
long stacked format as dataframe	to frame	0.125000
the slice locations for	slice locs start end step kind	0.083333
and 'kwargs' should be empty except for allowed	groupby func name args kwargs allowed	1.000000
from a	index from	0.090909
array interface	series array result	0.500000
particular object	core dtypes extension dtype bytes	0.142857
to accelerate unioning a collection of	indexes datetime index union many others	0.040000
this function is called via the 'numpy' library	take with convert convert args kwargs	0.055556
in the context of the	inplace	0.027778
single	core	0.001326
boolean criterion specified by func	by filter func	0.250000
offsets index to beginning of period frequency	date offset beg apply index i freq	1.000000
input values as	values sort order na_sentinel	0.333333
the actual filter format	core computation filter bin op format	0.333333
concatenate block	concatenate block	1.000000
intersection of two index	indexes index intersection other	0.166667
casting data from some accepted dtype to the	numeric index assert safe casting cls data	0.047619
list-like indexer return	convert list indexer keyarr kind	0.066667
new	dtypes datetime tzdtype new cls	0.333333
and 'kwargs'	args kwargs	0.153846
read csv file (discouraged please use	data frame from csv cls	0.066667
a string representation for this	unicode	0.058824
whether the installed version	compat major_ver	0.083333
the op string for this	bin op generate	0.066667
apply we are	core group by mixin apply func	0.050000
must already exist and	io hdfstore	0.014493
vertical/horizontal layout for explanation	table plotter	0.125000
rewrite the assignment operator for pytables expressions	rewrite assign	0.125000
return a dict of the counts of	get counts f	0.333333
an expression	computation	0.038462
path's extension against the	io excel writer check extension cls	0.125000
append rows of other	append other	0.200000
return	indexes index	0.007353
read csv file	csv cls path	0.066667
and return an item pair from maps[0] raise	popitem	0.043478
result set of query in a dataframe	result data columns index_col coerce_float	1.000000
setup my atom from the block	io data col set atom block block_items	0.200000
database table into a	table table_name index_col coerce_float	0.333333
read csv file (discouraged	frame from csv cls path	0.066667
fast lookup of	indexes index set value	0.023810
values	io stringify na values	1.000000
left and right index are equal	util assert index equal left right exact check_names	0.333333
dateoffset subclass representing possibly n business days	business day	1.000000
force all buffered modifications to be written	hdfstore flush fsync	0.200000
the reduction type operation if	ops mixin reduce op	0.083333
dataframes in vertical/horizontal layout	table	0.010870
both py2/py3	core dtypes extension dtype	0.333333
interpolate values according	resampler interpolate	0.166667
categorical adjusted for groupby	categorical index codes for groupby	0.333333
this is called upon unpickling rather than	cls d	0.083333
interpolate	core resampler interpolate	0.166667
corresponding interval with closed bounds	interval closed bounds interval	0.200000
levels of both multiindex objects are the same	core indexes multi index equal levels other	0.100000
additional handling	array	0.013889
mapped to their default values as specified	default values fname	0.200000
left and right index are equal	assert index equal left right	0.333333
to be applied on each value to format	value formatter float_format threshold	0.100000
suitable for a panel-like dataframe parameters	panel index time panels names	0.076923
index for series columns for	core	0.001326
'numpy' library	take with convert	0.055556
for writing stata binary	core data frame to stata fname	0.200000
return series corresponding to requested indices parameters	core series take indices axis convert is_copy	0.500000
the table this is generally only useful	io hdfstore select column key column	0.142857
by	sort values inplace	0.500000
for running code that expects to	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
df in both py2/py3	dtypes extension dtype	0.333333
return true if this is a valid column	is in	0.076923
data to ndarray raises on scalar data converts	indexes index coerce to ndarray cls data	0.166667
concatenation of an datetimelike	core dtypes concat	0.100000
convert from datetime to sif http //www	io datetime to	0.125000
validate if we can perform	indexes index validate for	0.333333
rec array and create the manager	rec array to mgr data index columns dtype	1.000000
all	all	0.304348
need to coerce a scalar to a compat	core indexes period index coerce scalar to	0.071429
yearfirst	yearfirst	1.000000
this as a frame table	io appendable multi series table	0.200000
ndarray only	core indexes	0.004762
indexer and return them as a	nd indexer	0.030303
new index with passed location -s deleted	indexes categorical index delete loc	0.333333
the series extract groups from the first match	core str extract	0.035714
is called via the 'numpy' library the third	take with convert	0.055556
name -> group labels}	base grouper groups	0.200000
both	equal	0.050000
shift without copying	shift	0.083333
return the unicode normal form for the	string methods normalize form	0.066667
slice	core block slice slicer	0.083333
array and create	array to	0.333333
read csv file (discouraged please use :func pandas	from csv cls path	0.066667
parse specified sheet s into a dataframe	io excel file parse	0.125000
this is defined	multi index view cls	0.047619
new multiindex from the	multi	0.018182
the values to be at	core block shape values	0.050000
update index	indexes index maybe update	1.000000
dataframe the levels	data	0.009709
index (so we	at indexer convert key key is_setter	0.090909
pointer of	ops mixin	0.033333
test	test	1.000000
create the grouper on instantiation	group by assure grouper	0.250000
override generic we want to set the	series set	0.076923
this	io index col	0.055556
add in the datetimelike methods (as	ops mixin add datetimelike methods cls	0.333333
deprecated option if key is deprecated	core get deprecated option key	0.333333
a boolean whether i can attempt conversion to	is convertible to index	0.333333
a string representation for this	frozen ndarray unicode	0.083333
an object block	to object block mgr	0.500000
return a	index	0.002004
whitespace	whitespace	1.000000
off to scipy interpolate	interpolate scipy	0.250000
in file	io hdfstore append key value format	0.016667
available options	core pp options	0.083333
try to connect to	connect	0.071429
wrap comparison operations to convert datetime-like	core indexes dt index cmp opname nat_result	0.066667
a	html frame parser	0.012658
return a fixed frequency datetime index	core indexes	0.004762
a manipulation result has one higher dimension as	core ndframe constructor expanddim	0.333333
python expression as a	core computation eval expr	0.083333
a keyword argument of a	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
the length of this categorical	categorical len	0.500000
the	frame	0.009091
set of kwargs suitable for initializing or	kwargs cls	0.040000
round a dataframe to a variable	core data frame round	0.166667
decorator to capture stderr in a	capture stderr f	0.055556
dataframe columns	data	0.009709
ordered multiindex compute the slice	indexes multi index slice	0.250000
perform	level limit tolerance	0.500000
slice of panel along minor axis	core panel minor xs key	0.166667
to table in file node must already	io hdfstore append key	0.016667
the slice	index slice	0.166667
values between particular times	indexer between	0.125000
the levels attribute is 1 or	is multi index	0.142857
a fixed frequency datetime index with day	core indexes period range start end periods freq	0.083333
interpolate values according	core resampler interpolate	0.166667
the passed type is	dtypes period dtype is	0.125000
code to	freq code	0.125000
float values converted into strings using	float array formatter get result	0.055556
cast to datetimeindex of timestamps at *beginning*	core series to timestamp freq how copy	0.500000
to get lines 0) there are headers	io python parser get index	0.166667
that we have a valid ordered parameter if	validate ordered cls ordered	0.058824
to accelerate unioning a collection of	union many others	0.040000
to cast the array/value to a	core dtypes maybe cast to	0.250000
the array interface return my values	indexes interval index array result	0.125000
is called via the 'numpy' library	take with	0.055556
node must already exist and	key	0.005051
values to be at	values	0.008547
csv file (discouraged please	core data frame from csv cls	0.066667
the interpolate machinery	core block interpolate with fill method	0.200000
ensure that if we don't have an index	ensure valid index value	1.000000
data as a unicode string	core indexes index	0.007042
value from 1-dimensional ndarray only use this	categorical index get value	0.100000
a groupby implementation	index resampler groupby	0.166667
find indices where elements of v	searchsorted v	0.033333
with decimal stride into a higher	decimal cls value	0.333333
times to	index	0.002004
timeseries to specified frequency	asfreq freq method how	0.250000
return if each value is nan	indexes categorical index isnan	1.000000
object with matching indices	ndframe reindex like other method copy limit	0.111111
the indexer fill	nd indexer	0.015152
alter default behavior on how float	float format accuracy use_eng_prefix	0.333333
new block try to preserve dtype if possible	core putmask smart v m n	0.055556
called after a	indexes period index array	0.050000
to apply we	core group by mixin apply func name	0.050000
return the block manager from a	to manager sdf columns	0.052632
prettier version of obj	pretty string obj	0.500000
from 1-dimensional ndarray only	value	0.005155
the built up styles to	styler	0.022222
update index attributes e g	core indexes timedelta index maybe update attributes attrs	0.200000
datetimeindex with	datetime	0.006711
iter1 iter2 iterables that produce	util assert copy iter1 iter2	0.166667
regular expression	case flags	0.166667
self as a sparse array	sparse sparse series as sparse array	0.250000
arr to have shape new_shape,	arr	0.013699
cast values to	io parser base cast types values	0.500000
same as values but handles sparseness conversions	ndframe get values	1.000000
render a dataframe to a	core data frame to	0.074074
convert datetime-like to datetime64	indexes dt index cmp opname nat_result	0.066667
after a ufunc needs additional	context	0.023810
from a list/array of tuples parameters	from tuples cls data closed	1.000000
cross-tabulation of two or more factors by default	crosstab index columns values rownames	0.333333
single element	ndframe	0.005025
has a float dtype if possible	float	0.024390
name -> group labels}	core base grouper groups	0.200000
the union of two index objects and	core indexes range index union other	0.083333
timedelta index with day as the	indexes timedelta	0.083333
a datetimeindex	indexes datetime index	0.007634
to	hdfstore	0.014925
return the values & release the	io index col take data	0.111111
errorbars	errorbars	1.000000
1-dimensional ndarray only use this if you	indexes	0.004651
numpy ndarray's __getitem__ method to work as desired	indexes index getitem key	0.166667
gradientfill stop parameter	stop	0.050000
an intervalindex from a 1d array	from intervals cls data name	0.125000
and	append key	0.016667
return a	array get	0.500000
checks that all the labels are	core indexes numeric index is all dates	0.333333
be a	new align	0.166667
categoricals are the same dtype	is dtype equal other	0.250000
set	sparse series set	1.000000
data	data values	0.062500
truncates a sorted ndframe	ndframe	0.005025
groupby	group by	0.016129
needs additional handling	period index array wrap result	0.050000
html	html	0.094118
new unit if needed otherwise return from	new cls unit	0.055556
the len of	categorical size	0.111111
return myself as	core datetime tzblock	0.500000
update index attributes e g freq depending	indexes timedelta index maybe update attributes attrs	0.200000
gets called	core series array wrap result	0.100000
index value	index ops	0.033333
apply	month offset apply index days	0.500000
to all values found	core transform	0.250000
additional handling as	indexes period index array	0.050000
with day as the default frequency	freq	0.016129
get instances of all the classes	util all	0.055556
list indicated if we have mixed levels	index have mixed levels	0.200000
with decimal stride into a	decimal	0.058824
rewrite the assignment operator for	core computation rewrite assign tok	0.125000
boolean if we are a	is	0.005291
the number of bytes in the underlying	nbytes	0.046512
read csv file (discouraged please use :func	csv	0.057143
a hack to accelerate unioning a	core indexes datetime index union many others	0.040000
of columns	core ndframe groupby	0.250000
a new block manager	block manager reduction f	0.250000
set the	set	0.024390
require	indexes datetime index simple new cls	0.250000
define an builtin function for this argument	builtin func arg	0.200000
2nd week of each month" parameters	week of	1.000000
overlap	overlap	0.285714
get	core panel get	1.000000
dataframe with labeling information	core data frame	0.005917
a python expression as a	eval expr	0.083333
built up styles	formats styler	0.021739
string-like and string-like array to convert object dtype	core dtypes maybe convert string to object values	0.142857
input into a pandas only dtype object	pandas	0.035714
time and panels are conformable	ensure like indices time panels	0.250000
merge holiday calendars together the caller's class	tseries abstract holiday calendar merge other inplace	1.000000
add the series only	add series only	1.000000
number of bytes in	index nbytes deep	0.052632
necessary for making this object picklable	core indexes datetime index setstate state	0.333333
implementation for the aggregators	mixin aggregate arg	0.166667
condition	core computation	0.047619
col_space	col_space	1.000000
might need to coerce a	coerce	0.025641
op string for	computation bin op generate	0.066667
passed a list-like indexer	interval index convert list indexer keyarr kind	0.066667
via the 'numpy' library the	with	0.034483
exist and be	key value format	0.016667
stata	stata elapsed	1.000000
microseconds (>= 0	timedelta index microseconds	0.066667
header of a	frame parser parse thead	0.111111
for series arithmetic operations to avoid code duplication	core comp method series op name str_rep masker	1.000000
particular dataframe invoked by unicode df in	core series unicode	0.166667
datetimeindex with times	core	0.001326
and index	index	0.008016
path's extension	io excel writer check extension	0.250000
op string for this	computation bin op generate	0.066667
version to operate on	core block try operate	0.333333
boolean indicating whether the file	io hdfstore	0.014493
the union of two index objects and sorts	indexes index union other	0.083333
stop	stop cls	0.066667
is called via the 'numpy' library the third	validate take with	0.055556
the dtype from a scalar parameters	dtype from scalar	0.500000
rewrite the assignment operator for	computation rewrite	0.125000
cannot append to : write out the	write	0.017857
corresponding to designated axis labels	core reshape make axis dummies frame axis transform	0.166667
swap levels i and j in	core series swaplevel i j copy	0.333333
iterate over the blocks collect and create a	consolidate transposed	0.062500
object that can be used	frame parser	0.012500
by indicated number of times	repeat arr repeats	0.200000
we do need a multi reindex	core ndframe needs reindex multi axes method	0.333333
blocks along axis=0	block manager slice take blocks ax0 slice_or_indexer fill_tuple	0.500000
return new dataframe	core data frame reset	0.027778
openpyxl is	compat is	0.111111
a slice of	core block slice slicer	0.083333
the number of	core	0.002653
to an xlwt style object	io xlwt writer convert to style cls	0.500000
evaluate the block return result	eval func other raise_on_error try_cast	0.200000
1-dimensional ndarray only use this	set value arr	0.023810
for series columns for dataframe and major_axis for	ndframe	0.005025
read csv file (discouraged	csv cls path header	0.066667
set my pandas	fixed set object info	0.200000
the same dimensions	core	0.001326
an asof	asof	0.083333
construct a slice of this container	core ndframe slice slobj axis kind	0.333333
a url has a valid protocol	is url url	0.047619
validate this column return	validate col	0.200000
set coerce	core dtypes coerce	0.066667
the shape of the	shape	0.047619
j do	j	0.034483
get test	core computation get test	1.000000
simple cross-tabulation of	core	0.001326
process of casting data from some accepted dtype	index assert safe casting cls data	0.047619
element index pairs for each element in	core map indices py arr	0.090909
ndarray repeat	datetime index ops mixin repeat repeats	0.333333
parse_dates	parse_dates	1.000000
byte of the	column	0.066667
connect to	connect	0.071429
columns using input function	axis copy inplace	0.055556
a ufunc	result context	0.108108
compat with	indexes index sort levels monotonic	0.333333
concatenation of an datetimelike array of	core dtypes concat	0.100000
the mode s	frame mode	0.333333
reduction type operation if we	ops mixin reduce op name axis	0.083333
last non-na/null value	series last valid	0.250000
that	io html frame	0.012987
node with the key or none	io hdfstore get node key	0.083333
datetimeindex	core indexes	0.004762
the float values converted into	formats float	0.055556
for general index and	core indexes index validate names	0.066667
called upon unpickling	cls d	0.083333
node	value	0.005155
dateoffset increments between	end	0.125000
the td elements from a row	frame parser parse td obj	0.083333
i	block is	0.045455
we might need to coerce	maybe coerce	0.125000
construct this type from a	interval dtype construct from string cls	0.166667
propagate metadata from other to self	core ndframe finalize other	0.333333
only	indexes index set	0.023810
to a compat for our index type	to index item	0.500000
via the 'numpy' library the third	with convert convert	0.055556
merge boxplot/kdeplot properties to passed kwds	plotting hist plot make plot keywords kwds	1.000000
(with nan fill_value) to a common sparseindex corresponding	homogenize series_dict	0.047619
returns the float	io formats float array formatter	0.055556
get integer location slice or	multi index get loc key	0.500000
has bin edge values	bins generic values binner closed	0.200000
helper function to determine if dtype is valid	select n is valid dtype n method dtype	0.142857
long-format data to wide generalized inverse	lreshape data groups	0.333333
called upon unpickling rather than the	indexes new datetime index cls d	0.111111
passed a manager and a axes dict	mgr mgr axes	0.333333
where condition cond on a	core computation where cond	0.111111
boolean if we need a qualified info display	index is memory usage qualified	1.000000
checks that path's extension	io excel writer check extension	0.250000
delegatedclass of a series that is datetimelike (e	maybe to datetimelike	0.142857
the reindex for all the	core ndframe reindex	0.125000
an xpath expression to simulate bs4's ability	xpath expr	0.166667
csv file (discouraged please use	frame from csv cls	0.066667
background in a range according to the data	formats styler background	0.125000
underlying array	datetime index ops mixin	0.029412
based on a distance	dmin dmax	0.250000
values & release the	col take data	0.055556
with multi-level index return new dataframe with	data frame	0.005714
input function or	axis copy	0.333333
from 1-dimensional ndarray	key	0.005051
a prettier version of obj	pretty string obj	0.500000
ndarray of my hashed values	indexes multi index hashed values	0.166667
yi	yi	1.000000
create index with target's values (move/add/delete values	multi index	0.020000
the function to my values return	func mgr	0.083333
used to iterate over the	html	0.011765
the 'numpy' library	numpy validate argmin with	0.200000
apply we are stripping all of the	by mixin apply	0.050000
into a list	frame parser	0.012500
ndarray	set	0.012195
draw histogram of	plotting hist frame data column	0.200000
utility routine to turn values	for values values	0.250000
return label for last non-na/null value	core data frame last valid index	0.250000
hypothetical list representing the totally ordered cartesian product	index labels shape sort xnull	0.066667
for panel objects and will raise an error	core panel to sparse	0.037037
string representation	core indexes frozen ndarray unicode	0.083333
in vertical/horizontal	table	0.010870
determines if two index objects	indexes float64index equals other	0.200000
compute variance	var ddof	0.166667
exist and be table	format	0.012346
to apply we are stripping all	by mixin apply	0.050000
coerce any object types to better types	object block convert	0.083333
traceback	traceback	1.000000
provide coercion to our input arguments	core block try coerce args values other	1.000000
shift without copying data the	slice shift periods	0.083333
n_decimals	n_decimals	1.000000
this if	value arr	0.023810
new type (if copy=true return a new copy)	core block astype dtype copy	1.000000
nodes	nodes	1.000000
return the	core categorical get	0.100000
one or more existing	keys drop append	0.250000
coerce to a fixed size	itemsize	0.027027
read sql database table into a dataframe	sqldatabase read table table_name index_col coerce_float	0.333333
for the diff of the values	diff n axis mgr	0.111111
array of python datetime date	indexes datetime	0.011494
get my plane axes indexes these are already	panel get plane axes index	1.000000
csv file (discouraged please	frame from csv cls	0.066667
via the 'numpy' library the	take with convert convert args kwargs	0.055556
a fixed	bdate range start end periods	0.111111
they are valid stata	stata	0.022222
we will be using numexpr	can use numexpr op op_str	0.333333
calculate datetime	core indexes datetime index	0.007634
an intervalindex from a 1d array	index from intervals cls data name copy	0.125000
operations to convert timedelta-like to timedelta64	indexes td index cmp opname	0.055556
handle na filling of take	assert take fillable values	0.250000
day of the month and day_of_month	semi month	0.166667
roll provided date	date	0.080000
series without null values returns	series dropna axis inplace	1.000000
wrap op	wrap	0.019231
columns	index columns	0.028571
node must already exist	key value format	0.016667
returns value occupying requested label default to specified	label default	0.083333
to convert timedelta-like to	core indexes td index	0.055556
is	compat	0.030303
already exist and	hdfstore append	0.016667
returns the indices that would sort the index	index argsort	0.166667
one higher dimension	expanddim	0.166667
data & release the	io data col take data	0.111111
if key is a deprecated option and if	if deprecated key	0.500000
valid stata	io stata	0.071429
boolean if this key is in	contains key	0.125000
sparse floating point data	sparse data	0.200000
float	io formats float array formatter get	0.055556
that we all have	dtype	0.010989
series using mapper dict	as_index	0.071429
manager	mgr data index	0.333333
attributes from the	core	0.001326
bool if we have only bool	is bool	0.166667
hack to accelerate unioning a collection of	indexes datetime index union many others	0.040000
select values between particular	datetime index indexer between	0.125000
string representation	indexes frozen ndarray unicode	0.083333
for a panel-like dataframe parameters	time panels names	0.076923
fontsize	fontsize	1.000000
given axis omitted where alternately any or	dropna axis how thresh subset	0.100000
for more this is index for series columns	ndframe	0.005025
a slice	core categorical slice slicer	0.111111
operations to convert timedelta-like to	td index	0.055556
lookup of value from 1-dimensional ndarray only	value arr key value	0.038462
general index and	indexes index validate	0.066667
have a valid ordered parameter	ordered	0.017857
all of the data	core data frame dropna	0.083333
file node must already exist and	io hdfstore	0.014493
new freq essentially a reindex	resampler asfreq fill_value	0.066667
ndarray only use this if you	core indexes index set value	0.023810
given delimiter string starting at the end	rsplit arr pat n	0.037037
len	core categorical size	0.111111
the data are	core data frame	0.005917
a scipy sparse	sparse sparse	0.034483
number of microseconds (>= 0 and less than	timedelta index microseconds	0.066667
setting a timezone	util set timezone	0.142857
method to handle na filling of take	assert take fillable values indices allow_fill fill_value	0.250000
only use	key	0.005051
'info axis' see indexing for more	keys	0.032258
group return result as series or by a	groupby by axis	0.045455
element index pairs for each element in the	core map indices py arr	0.090909
guarantee the shape of	ndim shape	0.111111
the input data_columns and min_itemize and create	columns data_columns min_itemsize	0.200000
exist	append key value format	0.016667
read csv file	core series from csv cls path	0.066667
sparse-compatible version of ndarray	indices axis allow_fill fill_value	1.000000
integer-location based indexing for selection by	i	0.041667
sort multiindex at the requested level the	core indexes multi index sortlevel level	0.250000
is valid for	select n is valid	0.500000
python	datestr	0.125000
dispatch to apply we are stripping all	apply func name	0.050000
lazily iterate over index value tuples	core series iteritems	1.000000
the float values converted	float array	0.055556
the inferred types one	inferred type levels	0.166667
note this is *not* the same as index	core indexes index is other	0.333333
to accelerate unioning a	datetime index union many others	0.040000
index	indexes index validate names	0.066667
return a list of the underlying data	index ops mixin tolist	0.333333
only use this if you	index set	0.022727
indexer like	indexer cls name indexer	0.083333
:	write	0.017857
index	json	0.100000
file node must already	hdfstore append	0.016667
a single	simple blockify tuples	0.125000
to handle na filling of take	indexes multi index assert take fillable	0.250000
underlying data	core indexes range	0.062500
return the corresponding interval with	interval	0.029412
sql statement that create a table reflecting	sqlite table create table setup	0.066667
to its values attribute if it	series	0.006757
an multiindex / list-of-tuples efficiently	tuples vals encoding hash_key	1.000000
of row elements from the	io	0.003012
a date in xport format	sas parse	0.066667
general index	indexes index validate names	0.066667
return a new block (of a possibly different	core block setitem indexer	0.066667
return new dataframe with labeling information	core data frame reset	0.027778
dataframe columns	data x y by	0.333333
into a dataframe	index_col	0.125000
on sunday use day thereafter monday instead	sunday to monday dt	0.333333
attempt to construct this type	core dtypes interval dtype construct	0.333333
nan fill_value) to a common sparseindex corresponding to	homogenize series_dict	0.047619
comparison operations to convert datetime-like to	cmp opname nat_result	0.066667
necessary for making this object picklable	datetime index setstate state	0.333333
float key and	key	0.005051
datetimelike properties	timedelta properties	0.052632
where elements of v should be	searchsorted v	0.033333
true if any axis is zero length	io generic fixed is empty array shape	0.166667
indices overlap add suffixes to	overlap	0.047619
if we are a categorical	is categorical	0.500000
called after a ufunc needs additional	index array wrap result context	0.034483
csv file (discouraged please use :func pandas read_csv	csv	0.057143
for delegating methods/properties	pandas delegate	0.166667
has a homogeneous dtype	ndframe as blocks copy	0.142857
new dataframe with labeling information in the columns	data frame	0.005714
set new labels	index set labels labels	0.500000
result and	result	0.016393
test result and reset	test result	0.250000
the data	core data frame	0.005917
to the block we must	non consolidatable mix in	0.083333
options grouped by prefix	core pp options	0.083333
values according to indexer and return them	indexer axis	0.043478
cross-tabulation	index columns	0.028571
convert protection_dict to an openpyxl v2 protection	io openpyxl20writer convert to protection cls protection_dict	0.500000
return my self as a	series as	0.125000
validate if we can perform a numeric	indexes index validate for numeric	1.000000
index with business day	core indexes	0.004762
converts dtype types to stata types returns the	to stata type dtype	0.250000
'args'	compat numpy validate resampler func	1.000000
aggregate using input function or dict of	by aggregate arg	0.250000
csv file (discouraged please use :func pandas read_csv	series from csv	0.066667
has data	has	0.142857
times	core indexes datetime index	0.007634
dtype object	dtype	0.021978
attempt to infer better dtype	core ndframe convert datetime numeric timedelta coerce	0.071429
the dtype to return	dtype	0.010989
object that	parser build	0.014706
from 1-dimensional ndarray only use this if	set value arr	0.023810
infer better dtype for object	ndframe convert datetime numeric timedelta coerce	0.071429
wrapper function for series arithmetic operations to	arith method op name	0.333333
compute the symmetric difference of two index	indexes index symmetric difference other result_name	0.166667
value from 1-dimensional ndarray only use this if	core indexes categorical index get value	0.100000
needs additional handling	period index array	0.050000
return a tree-like object that can	parser build	0.014706
return the full scope for	core computation scope full scope	0.055556
sub-classes to	core resampler gotitem key ndim subset	0.333333
construct dataframe from dict of array-like	core data frame from dict	0.200000
in file node must	io hdfstore append key	0.016667
resolve	computation scope resolve	0.166667
sets new categories	set categories categories fastpath	1.000000
on the first day of the month	month	0.038462
a singular 'name' parameter for general index and	indexes index validate	0.066667
set my pandas type & version	io fixed set object	0.200000
are index sliceable then return my	to index sliceable	0.083333
comparison operations to convert timedelta-like	indexes td index cmp	0.055556
if we have mixed	index have mixed	0.166667
try to cast	block try cast	0.500000
on	op_str	0.166667
remove	map	0.029412
to table in file node must already exist	io	0.003012
sliced	sliced	0.833333
parameter	core categorical validate ordered cls	0.055556
we	cls	0.016949
return a prettier version of	core computation get pretty string	0.500000
a latex representation for a particular dataframe	data frame repr latex	0.333333
a custom template	custom template	0.250000
do not satisfy the boolean criterion specified by	ndframe group by filter	0.200000
series excluding missing values parameters	series	0.006757
wrap result set of query in a dataframe	wrap result data columns index_col coerce_float	1.000000
tree-like object that can be used to iterate	html frame parser	0.012658
swap level	swaplevel	0.166667
of the counts	counts f	0.041667
the time part of the	index time	0.111111
is called via the 'numpy' library	numpy validate take with	0.055556
long stacked format as dataframe	core panel to frame	0.125000
csv file (discouraged please use	data frame from csv	0.066667
extract from a masked	masked	0.111111
convert to our native types	block to native types	0.250000
blocks along axis=0	take blocks ax0 slice_or_indexer fill_tuple	0.500000
a single non-tuple indexer which could	indexer indexer target	0.071429
dtype compat na value parameters	dtypes na value for dtype dtype	0.333333
blocks collect	reduction f axis consolidate transposed	0.062500
of value from 1-dimensional ndarray	period index get value series key	0.071429
table in	hdfstore	0.014925
values at particular time of day e g	ndframe at time time	0.066667
ndarray copy	index dtype copy	0.043478
codes by the indexer fill with the	nd indexer allow_fill	0.050000
number of bytes in the underlying	core indexes multi index nbytes deep	0.052632
deprecate a keyword argument of a function	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
we have negative indicies translate to postive here	core maybe convert indices indices n	0.166667
to convert datetime-like	core indexes period index cmp opname nat_result	0.066667
values as an enumerated type or categorical variable	factorize values sort order	0.111111
the float values converted into	float array formatter get result as array	0.055556
a tree-like object that can be	build	0.013514
a new multiindex from	indexes multi	0.014493
be used	io html frame parser	0.012195
skip	skip	1.000000
return the	core indexes multi index	0.013158
overrides ndarray argsort argsorts the	series argsort	0.083333
rules normally	calendar init name rules	0.200000
categorical by	core categorical sort values	0.166667
cross-tabulation of two or more factors by default	values rownames	0.333333
initializes holiday object with	tseries abstract holiday	0.100000
file node must already exist and be	key value format	0.016667
value from 1-dimensional ndarray only use this if	key value	0.011628
the 'numpy' library the	with	0.034483
of value from 1-dimensional ndarray only use	key value	0.011628
frequency if available	freq	0.016129
backward	core group by backfill	1.000000
making this object picklable	multi index setstate state	0.333333
update index attributes e g	indexes index maybe update attributes	0.200000
new unit if needed	dtypes datetime tzdtype new cls unit	0.055556
float values converted into strings	float array formatter get	0.055556
a dict of the counts of	counts f	0.041667
of my hashed	indexes multi index hashed	0.166667
that works for monotonic decreasing	get fill indexer searchsorted target method limit	0.142857
of the kinds allowable columns for this	table queryables	0.055556
file is	hdfstore is	1.000000
sets names on levels warning mutates!	indexes multi index set names names level validate	0.200000
ndframe before	core ndframe truncate before	0.250000
style object	style	0.125000
convert string-like and string-like array to	string to	0.166667
return a fixed frequency datetime	period range start end periods freq	0.333333
reduce join_unit's shape along item axis to length	trim join unit join_unit length	1.000000
function to get	func	0.011905
for each axes overridden in child classes	plot logic ax data	0.083333
if the process of casting data from	indexes numeric index assert safe casting cls data	0.047619
the array interface	categorical index array dtype	0.125000
get test result and reset	computation get test result	0.250000
ensure that we are grabbing the correct scope	core computation ensure scope level global_dict local_dict resolvers	1.000000
panel or	panel	0.017857
into a list	parser	0.008000
reindex for	reindex	0.062500
only	set value arr	0.023810
infer the fill value for the nan/nat	core dtypes infer fill value val	0.500000
raised	assert raises contextmanager	0.166667
each level	multi	0.018182
from	index	0.004008
built up styles	io	0.003012
return a dense representation	get values fill	1.000000
deep copy by default	io formats styler copy	0.500000
a view	categorical block is view	0.200000
lookup	core	0.001326
render a dataframe to a	data frame formatter to	0.250000
return the underlying data which is a categorical	core indexes categorical index values	0.333333
precision used	precision precision	0.333333
iterate over the blocks collect	axis consolidate transposed	0.062500
ndarray only use this if you	index set value	0.023810
each group if n is	core group by	0.027778
1-dimensional ndarray only use this if	set value	0.023256
read csv	frame from csv cls path header	0.066667
vectorized membership of x in y	core computation in x y	0.047619
pick the best locator based on a	locator	0.047619
indexes give	core indexes	0.004762
dmax	dmax	1.000000
in file node must already	value	0.005155
pick the best locator based on a	pandas auto date locator get locator	0.062500
converted to inat	core time delta block try	0.500000
the values to be at least 1	shape values ndim	0.050000
must already exist	key value format	0.016667
where is a	where scope_level	0.142857
window of type window_type and size window	window arg window win_type	0.100000
place using non-na values from passed series	series update other	0.500000
axis2	axis2	1.000000
dense representation	to dense	0.333333
that left and right	left right	0.190476
return a new	putmask	0.055556
seconds (>= 0 and less than 1	timedelta index seconds	0.066667
background null_color	highlight null null_color	0.125000
index objects contain	indexes datetime index	0.007634
a summarized representation	indexes datetime index ops mixin summary name	0.333333
instances of pandasobject	computation any pandas objects	0.250000
simple cross-tabulation	index columns	0.028571
used to iterate over	html frame parser	0.012658
pivot to the	to blocknd values	0.500000
a set of kwargs suitable for initializing	kwargs cls	0.040000
can be	io html frame parser build	0.014706
1-dimensional ndarray only use this if you	value arr	0.023810
to connect to	can connect	0.111111
nrows ncols -	nrows ncols	0.250000
ndarray filled with nat which has the	mixin nat new box	0.050000
the dtype object	dtype	0.021978
ndarray	arr	0.013699
a new unit if needed	new cls unit tz	0.055556
read sql query or database table into	io read sql sql con index_col coerce_float	0.166667
is valid for scalar op	can do op	0.250000
if we define an builtin function for this	is builtin func arg	0.333333
periodindex to the	indexes period index	0.035714
is	core select n is	1.000000
the float values converted into strings using	formats float array formatter get result as array	0.055556
unique elements in	ops mixin nunique dropna	0.083333
type is	extension dtype is	0.125000
must	non consolidatable mix in	0.083333
create a table	create table	0.166667
copy of the sparsearray only	copy	0.012821
a new categorical by	categorical sort values inplace	0.166667
construct an intervalindex from a 1d array	from intervals	0.125000
to table in file node must already exist	hdfstore append key value	0.016667
and	args	0.333333
are index sliceable then return my	convert to index sliceable obj	0.083333
are index sliceable then return my	index sliceable	0.083333
the (attr formatted_value)	index format attrs	0.142857
the array interface return my	core indexes interval index array result	0.125000
save workbook to	io openpyxl1writer save	0.333333
cartesian product of	shape sort	0.200000
tree-like	frame parser build	0.014706
a	index array wrap	0.066667
reverse of try_coerce_args / try_operate	core time delta block try coerce result result	0.333333
underlying data	range index	0.021739
be returned from apply if as_index=true	group by index with as	0.200000
read csv file (discouraged please use	series from csv cls path sep parse_dates	0.066667
masked rec array and create the manager	masked rec array to mgr data	0.500000
xi	xi	1.000000
common ops mixin to	index ops mixin	0.019231
view limits	plotting milli second locator autoscale	0.333333
bytes in the	multi index nbytes	0.052632
reindex using pre-computed indexer information	block reindex axis indexer method axis fill_value	0.500000
to a tabular environment table you can	to latex buf columns col_space header	0.200000
validates that we have good categories	categories fastpath	0.250000
a safe version of putmask that potentially upcasts	dtypes maybe upcast putmask	0.200000
reindex	categorical index reindex	1.000000
total duration of each element expressed in seconds	core indexes timedelta index total seconds	1.000000
at particular time of day e	ndframe at time time asof	0.066667
the	indexes multi index	0.026316
to accelerate unioning a collection of indexes	datetime index union many others	0.040000
if we do need a multi reindex	ndframe needs reindex multi axes method level	0.333333
lookup of value from 1-dimensional ndarray	indexes datetime index get value series key	0.071429
and return	compat chain map	0.032258
create a new unit if needed otherwise return	tzdtype new cls unit	0.055556
from	map	0.029412
given quantile	series quantile	0.083333
do not satisfy the boolean criterion specified by	by filter	0.200000
1-dimensional ndarray	index set	0.022727
is defined as a copy	multi index view cls	0.047619
given an interval	indexes get	0.125000
of value from 1-dimensional ndarray only	key value	0.011628
spreadsheet-style pivot table as	reshape pivot table	0.111111
convert tz-aware axis to	core ndframe tz convert tz axis level	0.200000
the block return result block s from the	core block where other cond align raise_on_error	0.066667
perform a numeric unary operation	numeric unaryop op opstr	0.333333
maps[0]	compat chain map	0.064516
true if categoricals are the same	equal other	0.250000
hash a	hash	0.125000
data converts	data	0.009709
dtype types to stata types returns the	dtype to stata type dtype	0.250000
levels attribute is 1 or a list in	table is multi index	0.142857
generic we want to set the _typ here	series set axis axis labels fastpath	0.200000
new_index	new_index	1.000000
not supported for panel objects and	panel	0.017857
read csv file	csv cls path sep	0.066667
form the union of two multiindex	multi index union other	0.066667
set the value inplace return	value mgr	0.083333
float values	formats float array formatter get result as	0.055556
return datetimeindex with times to midnight length is	core	0.001326
csv file (discouraged please use :func pandas read_csv	data frame from csv	0.066667
as sparsifying is not supported for panel objects	core panel to	0.027027
set of kwargs suitable for initializing or updating-on-copy	kwargs	0.022222
where is a term or a list of	where scope_level	0.142857
the values to be at least	values ndim	0.050000
to accelerate unioning a collection	core indexes datetime index union many others	0.040000
csv file (discouraged please use :func pandas	data frame from csv cls	0.066667
the indexer fill with	indexer allow_fill	0.050000
qualified info display	memory usage qualified	0.333333
split each string a la re split in	split arr pat	0.200000
a scalar to a compat for our index	scalar to index	0.333333
options grouped by	pp options	0.083333
object that can be used	io html	0.012987
apply we	core group by mixin apply func name	0.050000
concatenate pandas objects along a particular axis	axis	0.011364
lists to line delimited	convert to line delimits s	0.166667
a styler	styler set	0.333333
an axes dictionary for the passed axes	construct axes dict from axes	0.333333
file node must already exist	value	0.005155
n between self analagoust to s-s	core diff arr n	1.000000
format of a	format dt_str dayfirst dt_str_parse	0.250000
update index attributes e g	indexes datetime index maybe update attributes attrs	0.200000
forward to the array	sparse sparse series iter	0.250000
operations to convert datetime-like to datetime64	index cmp opname nat_result	0.066667
localize tz-naive timeseries to	core ndframe tz localize	0.500000
type window_type and size window on	window win_type min_periods	0.100000
return if we are a	is	0.005291
base frequency alias e g '5d' -> 'd'	get base alias freqstr	1.000000
specified	set item key	0.500000
expression as a string using various backends	core computation eval expr parser engine truediv	0.500000
gets called after a	result	0.049180
list indicated if we have mixed levels	indexes multi index have mixed levels	0.200000
a new	tzdtype new	0.333333
that can be coerced to	period index simple new cls	0.142857
a slice of my values	slice slicer	0.070175
the name this allows simpler access to	core ndframe setattr name value	0.166667
formatted data as	core indexes index formatter func	0.083333
date formats to	datetime to	0.100000
file node	hdfstore append key value	0.016667
csv file (discouraged please use	series from csv	0.066667
take which sets nan	take	0.030303
fast path	fast	0.090909
the float values converted into strings	formats float array formatter get result	0.055556
we always want	indexes period index shallow copy with infer values	0.200000
get op dispatcher returns _op or _timeop	op get op cls left right name	1.000000
do not satisfy the boolean criterion specified	filter	0.117647
remove and return	compat chain	0.034483
from a 1d array of interval	interval index from intervals cls	0.333333
of bytes in the underlying data	indexes multi index nbytes	0.052632
am	core categorical	0.013889
see if a url has a valid	io is url url	0.047619
to be applied on each value to format	float array formatter value formatter float_format threshold	0.100000
array of datetime time the	indexes datetime	0.011494
based indexer for selection	indexer	0.009174
from 1-dimensional ndarray only use this if	core indexes index set value	0.023810
the risk	subarr	0.050000
resample of a	timedelta	0.022222
slice of my	tzblock slice slicer	0.083333
the table this is generally only useful to	hdfstore select column key column	0.142857
under the index names defaulting	index level drop inplace col_level	0.166667
to accelerate unioning a	core indexes datetime index union many others	0.040000
the full scope for	scope full scope	0.055556
in i	i before_day_of_month	1.000000
points for level 0 assuming	multi index bounds	0.166667
new unit if	new cls unit tz	0.055556
the built up styles to	io formats	0.027778
block b	block	0.008197
parse a ndarray like into	parser	0.008000
occupying requested label default to	sparse sparse series get label default	0.083333
concatenate block	core concatenate block	1.000000
for an ordered multiindex compute the slice	core indexes multi index slice	0.250000
setup my atom from the block	io data col set atom block	0.200000
file node must already exist and be table	append key value format	0.016667
for a particular	extension dtype bytes	0.142857
return fillvalue for a	fillvalue	0.071429
return a new manager with the blocks	manager combine blocks copy	0.250000
string-like and string-like array to convert object	dtypes maybe convert string to object	0.142857
data & release the memory	data col take data	0.111111
only use this if	core indexes index	0.007042
gets	core categorical	0.027778
to midnight length is	datetime	0.006711
using the index's frequency if	core ndframe tshift periods freq axis	0.066667
ndarray of the flattened values of	indexes index ravel order	0.037037
a new	core dtypes datetime tzdtype new	0.333333
fast transform path	core ndframe group by transform fast	0.333333
indexer input array to the	indexer	0.009174
any type that can be coerced to periods	index simple new cls	0.090909
comparison operations to convert timedelta-like	core indexes td index cmp	0.055556
store object in hdfstore parameters	io hdfstore put key value	0.333333
internally consolidate chunks of data	core sparse sparse list consolidate inplace	0.500000
frequency timedelta index with	indexes timedelta	0.083333
perform an asof merge this is similar	reshape merge asof	0.071429
reflecting the structure	setup	0.090909
of the timedelta64[ns]	timedelta64 ns	0.333333
return a string representation for	frozen ndarray unicode	0.083333
in specified column	set item key value	0.500000
new sparsearray from	sparse sparse data	0.076923
ndarray	ndarray	0.714286
nat-like arg is a passed	arg	0.018868
am never	categorical block	0.100000
if we are a scipy sparse spmatrix	dtypes is scipy sparse array	1.000000
of bytes in the	core indexes multi index nbytes	0.052632
coerce values and	coerce	0.025641
an positional	indexer has valid positional	0.250000
after	period index	0.024390
parameter for general index	indexes index validate	0.066667
of a hack to accelerate unioning	datetime index union many others	0.040000
microseconds (>= 0 and less than	core indexes timedelta index microseconds	0.066667
try hard to parse	parse	0.034483
the array interface return my	core series array result	0.166667
already exist and be	hdfstore	0.014925
a dataframe to the	io to	0.200000
compute a	crosstab index	0.066667
each subject string in the series extract groups	core str extract	0.071429
gets called after a ufunc	wrap result context	0.088235
particular dataframe invoked by unicode df	frame unicode	0.166667
like to compare numeric arrays vs scalar string-likes	numeric v string like a b	1.000000
return an attributes dict	get attributes dict	0.250000
validate	col validate	1.000000
unstack a k a pivot series	series unstack level fill_value	0.333333
the required package is installed	package pkg_name min_version	0.083333
to_sql	pandas sql	1.000000
best locator based	auto date locator get locator	0.062500
expanding count of number	stats expanding count	0.200000
returns *copy* of underlying	indexes frozen ndarray values	0.250000
ncols - number	ncols	0.111111
reset the display options for	reset display options	0.200000
that an positional	ndframe indexer has valid positional setitem	0.250000
flattened values of the underlying data see also	indexes index ravel order	0.037037
a url has a	is url url	0.047619
of v should be	searchsorted v	0.033333
a ufunc	array wrap result context	0.088235
flush	flush	1.000000
to its values attribute if it has	core	0.001326
v should be inserted in a	core indexes frozen ndarray searchsorted v	0.033333
the mode s of the	core series mode	0.083333
'series argmin' is called via	skipna skipna	0.100000
the number	multi	0.018182
sunday use day thereafter monday instead	tseries sunday to monday	0.333333
set the meta data	io index col write metadata handler	0.500000
value from 1-dimensional ndarray only use this	set value arr key value	0.038462
get/create the info for this	get info info	0.333333
called	core indexes index array	0.100000
to table in file node	key value	0.011628
function for	sparse arith method	0.333333
dispatch to apply we are stripping all	mixin apply func name	0.050000
a string raise a typeerror	string cls string	0.125000
apply we are stripping	core group by mixin apply	0.050000
wrap comparison operations to convert timedelta-like to	td index cmp	0.055556
x not in y if	core computation not in x y	0.066667
if fill_value=nan returns a dense	sparse	0.026316
passed type is an actual dtype that we	dtypes period dtype is dtype cls dtype	0.142857
coerce to the new type	dtype copy errors	0.250000
label for	label	0.028571
a series we	core series	0.008000
utility routine to turn values into codes	codes for values values	0.250000
datetimeindex with times to midnight	core indexes datetime index	0.007634
interpolate values according to different	interpolate method	0.166667
series extract groups from the first match of	extract frame arr	0.047619
packed bytes	io msgpack	0.025000
return if each value is nan	ops mixin isnan	0.500000
a new categorical by default	core categorical sort values inplace	0.166667
in file node must already exist and be	append key value format	0.016667
index or maximum along an axis	datetime index ops mixin max axis	0.333333
we have	name freq	0.083333
parse	file parse	0.125000
dataframe with multi-level index return new dataframe with	core data frame	0.005917
interpolate values according to different	core resampler interpolate	0.166667
(namely the date	date	0.040000
a tree-like object that can be used	html frame parser	0.012658
cast	base cast	1.000000
are a series we by	core series group by	0.142857
a single dtype if dtype is	simple blockify tuples dtype	0.111111
try to	core block try	1.000000
we have a	core is	0.200000
read csv file	series from csv cls path	0.066667
dataframe and major_axis	core	0.001326
guess generated by infer_freq	index ops mixin inferred	1.000000
formatter	formatter	0.555556
get integer location for requested label	indexes categorical index get loc key method	0.500000
datetime64 block with a	datetime	0.006711
& release	io data col take	0.333333
to accelerate unioning a	index union many others	0.040000
return true if	is	0.026455
object dtype but could really be ints/strings	core tools attempt yyyymmdd	0.333333
moving window of type window_type on the data	window mean how	0.166667
best locator based on a distance	get locator dmin dmax	0.250000
called after a	core indexes index array	0.100000
return the values	core categorical get values	1.000000
data from some accepted dtype to	cls data	0.076923
an	size dtype	1.000000
return the	core resampler get	0.333333
file path	path	0.250000
copy if specified coerce to the	dtype copy	0.032258
in file node must already exist	append key	0.016667
by an error is encountered	error	0.028571
parameter	core	0.001326
true if the key is in the info	contains key	0.125000
the view limits	plotting milli second locator autoscale	0.333333
the maximum value	core categorical max numeric_only	0.250000
am	categorical block is	0.100000
store	store	1.000000
as	index array wrap result	0.033333
of the axis indicies	core panel extract axes data axes	0.142857
of mixed type	chained assignment possible	0.142857
from ndarray or list	index columns	0.028571
exist	io hdfstore append key value	0.016667
if we if the passed type is	core dtypes interval dtype is	0.066667
the counts	counts f	0.041667
class for writing stata binary dta files parameters	stata writer	0.125000
components days hours minutes seconds milliseconds microseconds nanoseconds	indexes timedelta properties components	1.000000
midnight length is	index	0.002004
dataframe pivot	reshape pivot index	0.333333
of value from 1-dimensional ndarray only use this	core indexes period index get value series key	0.071429
numpy doesn't like	string like	0.111111
values attribute	core series	0.008000
process of casting data from some	assert safe casting cls data	0.047619
& release the	col take	0.333333
after	indexes index array	0.100000
a numpy / pandas type	type	0.024390
return a fixed frequency timedelta index with day	indexes timedelta range start end	0.083333
a resample of a	datetime index resampler	0.066667
bytes see	io msgpack packb	0.025641
localized	localized	1.000000
with nat which has the	ops mixin nat new box	0.050000
boolean array of whether each index value	datetime index ops	0.034483
values return a block if we are not	core block	0.010870
the text	io	0.003012
list/array of tuples	tuples cls data closed	0.250000
gets the	categorical	0.019231
incoming data	data	0.009709
left and right array	cls left right closed	0.166667
numpy doesn't like to compare numeric	numeric v string like	0.333333
/ or columns using input function or functions	core ndframe rename axis mapper axis copy inplace	0.250000
label for last non-na/null value	core series last valid	0.250000
we have mixed levels	index have mixed levels	0.200000
we are index sliceable then	core convert to index sliceable obj key	0.083333
for a tz-aware type return an encoded	tz tz	0.066667
parameter	validate ordered	0.055556
index return new dataframe with labeling information in	core data frame reset	0.027778
must already exist and be table	io hdfstore append key value	0.016667
dateoffset to	tseries date offset	0.500000
unit if needed otherwise return from the	unit tz	0.125000
rewrite the assignment	computation rewrite	0.125000
draw histogram of	plotting hist frame	0.200000
axes compute the expected nrows	io table nrows expected	0.142857
datetime objects by input number of periods and	periods	0.083333
result_name	result_name	1.000000
from 1-dimensional ndarray	arr key	0.023810
the minimum value of the index	datetime index	0.007042
of sparseseries (with nan fill_value) to a	core sparse	0.041667
comparison operations to convert timedelta-like to timedelta64	core indexes td index cmp opname nat_result	0.055556
return new dataframe with labeling information in	data frame	0.005714
the best locator based on a distance	get locator dmin dmax	0.250000
fast lookup	indexes index set	0.023810
exist	format	0.012346
nat which has the same length as the	nat new box	0.050000
returns the float	float array	0.055556
append to table in file	hdfstore append key value format append	0.125000
try to operate	try	0.090909
boolean	b	0.100000
compute a simple	crosstab index columns	0.066667
this is index for series columns for dataframe	core ndframe	0.005051
a list of the underlying data	datetime index ops mixin tolist	0.333333
with	indexes datetime	0.011494
given	get interval	0.125000
parse specified sheet s into	parse	0.034483
we if the passed type is an	dtype is	0.032258
expanding count of	stats expanding count arg freq	0.200000
if the passed type is	dtypes period dtype is	0.125000
sparseseries from a scipy sparse coo_matrix	core sparse sparse series from coo cls a	0.333333
determines if two index objects contain the	core indexes range index equals other	0.200000
read csv	core series from csv cls	0.066667
offsets index to beginning	tseries date offset beg apply index i	0.333333
2d from panel holding passed axis constant	core panel dropna axis how inplace	0.200000
convert datetimeindex to float64index of julian dates	core indexes datetime index to julian date	1.000000
or sunday use previous friday instead	previous friday dt	0.250000
timegrouper and	core resample obj kind	0.083333
number of bytes in the	core indexes range index nbytes	0.052632
determine if each string matches	core str match arr pat	0.166667
csv file (discouraged please use :func	from csv cls path sep	0.066667
infer the fill value for	infer fill value	0.333333
matches a regular expression	flags	0.029412
hack to accelerate unioning a	core indexes datetime index union many others	0.040000
series/index	str	0.140351
indexer and return them as	nd indexer	0.030303
offsets index to beginning	beg apply index i	0.333333
managers	managers	1.000000
called via the 'numpy' library the	validate take with	0.055556
:	excel formatter write	1.000000
apply we are stripping all	group by mixin apply func	0.050000
openpyxl1writer	openpyxl1writer	1.000000
indexer and return them	nd indexer axis	0.043478
if	set value	0.023256
holiday falls on saturday use following monday instead	tseries next monday	0.250000
filtered indexer that doesn't have any missing indexers	convert from missing indexer tuple indexer axes	0.333333
index return new dataframe with labeling information in	data frame	0.005714
underlying data	datetime index ops mixin	0.029412
ndarray only use this if	core indexes index set value arr key	0.023810
the values & release the	io index col take data	0.111111
provides a resample of a groupby implementation	datetime index resampler groupby	0.166667
sanitize an index type to return an ndarray	core sanitize index data index copy	0.200000
the built up	io formats styler	0.021277
sql statement that create a table reflecting the	create table setup	0.066667
only use this if you	set value	0.023256
boolean if we are a single block	core block manager is	0.250000
datetime to sif http //www	datetime to	0.100000
compute a simple	core reshape	0.047619
am i little endian	compat is platform little endian	1.000000
resampling from a dataframe	resampler from selection	0.142857
provide concatenation	concat	0.058824
the indexer input array to the smallest	indexer categories	0.500000
'args' and 'kwargs' should be	compat numpy validate resampler func method args kwargs	0.166667
generate nd initialization axes are passed	core panel init data data copy dtype	1.000000
of the _apply kwargs	window center	0.076923
regular expression in	arr pat flags	0.062500
table in file node must already exist	hdfstore append key value format	0.016667
ndarray only use	core indexes index set value arr key	0.023810
tree-like object that can be used to	html frame	0.014706
mid-point of each interval in the index as	indexes interval index mid	1.000000
the underlying array which	ops mixin	0.033333
of the (attr formatted_value)	indexes datetime index ops mixin format attrs	0.142857
return a flattened numpy array	core categorical ravel order	0.333333
xarray object from	xarray	0.111111
dataframe with the rows/columns switched	data frame transpose	0.333333
null_color	highlight null null_color	0.125000
columns for dataframe	core	0.001326
form the union of two multiindex objects	index union other	0.037037
padded hexadecimal id of obj	core computation raw hex id obj	0.333333
dataframe containing sparse floating point data in	sparse data frame	0.090909
length is	datetime	0.006711
of datetime time the time part of	core indexes datetime index time	0.166667
to capture stderr in a buffer so	capture stderr	0.055556
fixed frequency	bdate range start end periods	0.111111
data	core	0.002653
multiindex defaults	core indexes multi	0.014493
about a malformed	malformed	0.066667
end of this frame	frame	0.009091
only	set	0.012195
sparse reindex and	sparse reindex new_index	0.250000
already exist	io hdfstore append key value format	0.016667
one	series	0.006757
which	sparse to_concat	0.333333
all the classes which represent time-seires	all timeseries index	0.333333
unstack a k a pivot series with multiindex	core series unstack	0.333333
needs additional	index array wrap result	0.033333
cross-tabulation of	index	0.002004
context manager behind assert_raises_regex	assert raises contextmanager	0.166667
and return an item pair from maps[0]	map popitem	0.055556
pairwise correlation of columns excluding na/null values	core data frame corr	0.111111
style_dict to an xlsxwriter format object	xlsx writer convert to style style_dict	0.166667
return the values at the new freq essentially	resampler asfreq fill_value	0.066667
data types and ranges supported by stata and	cast to stata types data	0.333333
tree-like	parser build	0.014706
of styler with a custom	formats styler from custom	0.200000
given axis	axis method na_option	0.250000
value from 1-dimensional ndarray only use	value arr key value	0.038462
with integer stride parameters	get stride from	0.333333
return the bool	ndframe bool	0.055556
needs additional	wrap result	0.022727
construct dataframe from dict	core data frame from dict	0.200000
axes	axes	0.478261
high	high	1.000000
if each string matches a regular expression	pat case flags	0.166667
number of bytes in the	range index nbytes	0.052632
the union of two index objects and	range index union other	0.083333
to a ufunc	result context	0.027027
datetimeindex	core datetime	0.142857
of value from 1-dimensional ndarray only use this	categorical index get value series key	0.100000
return dtype and	core get empty dtype and	0.125000
ndarray copy if specified coerce	index dtype copy	0.043478
converts a style_dict	style_dict	0.133333
sets index names to 'index' for	set default names data	0.083333
table in file node must	append key value	0.016667
apply the given offset/observance to a datetimeindex	apply rule	0.200000
group	core group by	0.083333
if arg is a string then try to	selection mixin try aggregate string function arg	1.000000
ndarray only use this if you	set	0.012195
of v should	frozen ndarray searchsorted v	0.033333
a locale	set locale	0.333333
values at particular time	ndframe at time time	0.066667
the union of two index objects	range index union other	0.083333
ndarray only	value arr	0.023810
cases to get lines 0) there are headers	io python parser get index name columns	0.166667
from a 1d array of interval objects	indexes interval index from intervals cls data name	0.333333
read csv file (discouraged please use :func	core data frame from csv cls path header	0.066667
given sql query	sql con	0.500000
tz-aware type	tz tz	0.066667
set of	core	0.002653
perform merge with optional filling/interpolation designed for ordered	reshape merge ordered left right on left_on	1.000000
only use this	indexes index set	0.023810
via the 'numpy' library	take with convert convert args	0.055556
index is	indexes index is	0.100000
do need	series needs	0.500000
a new unit	dtypes datetime tzdtype new cls unit	0.055556
table as a dataframe the levels in	table data	0.200000
where statement is	where w	0.083333
might need to coerce a code	coerce freq code	0.076923
totally ordered cartesian product of all	sort xnull	0.066667
setup my atom from the block b	io data col set atom block block_items existing_col	0.200000
union of two index	range index union other	0.083333
for a particular dataframe invoked by unicode df	core data frame unicode	0.166667
in	append key	0.016667
a ufunc	wrap result context	0.088235
needs	core indexes period index array wrap	0.050000
from a masked rec	masked rec	0.250000
locator based	date locator get locator	0.062500
level	indexes multi	0.014493
a tree-like object that	io html frame	0.012987
checking function of type t or tuple of	is type t	0.083333
new unit if needed otherwise return from the	core dtypes datetime tzdtype new cls unit tz	0.055556
create holidays following certain rules	holiday calendar	0.333333
to midnight length	indexes datetime	0.011494
have a	core categorical	0.013889
node must already exist and be	append	0.012987
function for this	func	0.035714
radviz - a	plotting radviz	0.200000
immutable index implementing an ordered sliceable set	index	0.002004
index and	indexes index validate names name	0.066667
single element	core ndframe	0.005051
ndarray copy if specified	index dtype copy	0.043478
the array interface return my	multi index array dtype	0.125000
the minimum value of the	ops mixin min	0.111111
be a bool if we have only bool	object block is bool	0.166667
numpy array of python datetime date	datetime	0.006711
return the	index	0.004008
1-dimensional ndarray	core indexes index	0.007042
float values converted	io formats float array formatter get result	0.055556
of label values for requested level	indexes multi index get level values level	0.250000
return the join	get join	1.000000
panel or object coercible to panel	panel update other join overwrite filter_func	0.200000
a fixed frequency datetime	period range start end periods freq	0.333333
a new categorical	categorical	0.009615
are going	obj data_columns	0.250000
ndarray filled with nat which has the	ops mixin nat new	0.050000
columns using input function	mapper axis copy inplace	0.055556
of the required package	package	0.058824
or np dtype to a pandas or	to dtype dtype	0.083333
a boolean if we are a single	is	0.005291
slice of a multiindex and the index	index	0.002004
we have a valid ordered	validate ordered cls ordered	0.058824
function for series	bool method series	0.333333
tree-like	html	0.011765
datetimelike methods (as we may have to override	datetimelike methods cls	0.066667
return boolean series denoting	frame duplicated	0.500000
convert to our native types format slicing	datetime block to native types	0.250000
reduction type operation if we	core index ops mixin reduce op name axis	0.083333
update index attributes e	core indexes datetime index maybe update attributes	0.200000
given an interval or intervalindex return the corresponding	indexes get	0.125000
add numeric	core group by add numeric	1.000000
sql	sql	0.692308
operations to convert timedelta-like to timedelta64	td index	0.055556
the installed version of	compat major_ver	0.083333
timedelta index with day	indexes timedelta	0.083333
parameter if	core categorical	0.013889
membership of x in y	core computation in x y	0.047619
return	frame parser build	0.014706
diff of	diff n axis	0.111111
perform an asof merge this is similar to	reshape merge asof	0.071429
a latex	latex	0.076923
sunday use previous friday instead	tseries previous friday	0.250000
propagate metadata from other to	core ndframe finalize other method	0.333333
types format	types slicer na_rep quoting	0.200000
to dispatch to	dispatch name	0.500000
a fixed frequency timedelta index with day as	indexes timedelta range start	0.083333
manipulation result has the	ndframe constructor	0.055556
o and return packed bytes see :class	io msgpack packb o	0.055556
tz-aware type return an	tz tz	0.066667
compute the expected nrows	io table nrows expected	0.142857
exit context manager	io stata reader exit exc_type exc_value traceback	0.500000
a new	core dtypes datetime tzdtype new cls	0.333333
values between particular	indexes datetime index indexer between	0.125000
bool if we have only bool values	core object block is bool	0.166667
cross sectional for a given location in the	block manager fast xs loc	0.142857
the series extract groups from the first	extract	0.030303
:class packer for options	packb	0.022727
specialized shift	ops mixin shift n freq	0.250000
between index values and index	core indexes datetime index	0.007634
group series using mapper dict or key function	as_index	0.071429
a string raise	string	0.037736
in the datetimelike methods (as we	datetimelike methods cls	0.066667
the bool of a single	bool	0.043478
by the indexer	indexer allow_fill	0.050000
apply we are stripping all of	apply func name	0.050000
index to be	index b	0.041667
is defined	index view cls	0.047619
block and are	block	0.008197
form the union of two multiindex objects	indexes multi index union other	0.066667
manager for temporarily setting a timezone	set timezone tz	0.142857
expanddim	expanddim	0.833333
downsample	resampler downsample how	0.200000
series concat	dtypes get series	0.250000
called prior	series array prepare result	0.111111
tabular	buf columns col_space header	0.250000
the dtype	dtype	0.065934
(produce a "pivot" table) based on column values	frame pivot index columns values	0.200000
interval objects	core indexes interval	0.062500
of label values for requested level	level values level	0.250000
determines if two index objects	indexes datetime index ops mixin equals other	0.200000
of	indexes index	0.007353
this getitem defers to the underlying array which	index ops mixin getitem key	0.333333
rkey	rkey	1.000000
rewrite the assignment operator for pytables expressions	computation rewrite	0.125000
view	core categorical view	0.111111
multiindex defaults	indexes multi index	0.013158
guess the datetime format of a given datetime	core tools guess datetime format dt_str dayfirst dt_str_parse	1.000000
color_spec	color_spec	1.000000
leap year	period index is leap year	0.142857
a sequence of terms for instances of pandasobject	core computation any pandas objects terms	0.250000
of datetime	datetime	0.006711
rolling statistical measure using supplied function	core rolling apply func name window center	0.333333
all of the data	core data	0.041667
if multiindex has only 2	core indexes multi	0.014493
from 1-dimensional ndarray only	indexes	0.004651
kwarg	kwarg	1.000000
window of type window_type and size window	window arg window win_type min_periods	0.100000
return the full scope for	scope full scope	0.055556
modify block in-place with	core object block set locs values check	0.125000
series with multiindex to	series	0.006757
to_concat	to_concat	0.625000
sequence of terms for instances of	terms	0.034483
from 1-dimensional ndarray only use this if you	indexes index set value arr	0.023810
//www stata	stata	0.022222
read csv file (discouraged	data frame from csv cls path header	0.066667
of the	axis mgr	0.200000
a bool if we have only bool values	is bool	0.166667
boolean mask of index to	index b	0.041667
url has	is url url	0.047619
the block	block	0.008197
ndarray only use this if	index set value arr	0.023810
data to ndarray raises on scalar	coerce to ndarray	0.166667
validate that we have	core block is	0.090909
or by	by axis level	0.045455
o and return packed	io msgpack packb o	0.055556
after a ufunc needs additional handling as	result context	0.027027
index for series columns for dataframe major_axis for	core ndframe iteritems	0.055556
packed object	packed	0.100000
an asof merge this is	core reshape merge asof	0.071429
concatenation	concatenation	0.833333
we have a	core categorical validate ordered cls	0.055556
with times to midnight length is	core indexes datetime	0.011494
stacked format dataframe into wide 3d panel format	core data frame to panel	0.333333
rewrite the assignment operator for	rewrite assign tok	0.125000
set of kwargs	kwargs	0.022222
panel objects and will raise an error	core panel to	0.027027
a dataframe to a variable number	core data frame	0.005917
check for categorical columns retain categorical information	stata writer prepare categoricals data	0.166667
object	core indexes	0.004762
get	get index name columns	0.200000
sample correlation	corr other pairwise	1.000000
validates that we	categorical validate	0.055556
type window_type on the	mean how	0.166667
index with business day as	core indexes	0.004762
seconds (>= 0 and	core indexes timedelta index seconds	0.066667
put method to its	core series put	0.055556
dataframe objects and do not propagate	core data frame	0.005917
prevents setting additional attributes	no new attributes mixin freeze	1.000000
return the padded hexadecimal id of obj	core computation raw hex id obj	0.333333
a fixed frequency datetime index with	indexes period range start end periods freq	0.083333
construct this	construct	0.071429
in this	core	0.001326
into a pandas only dtype	pandas	0.035714
tree-like object that can	io html frame	0.012987
attributes e g freq depending on	attributes attrs	0.166667
create index with	index	0.002004
to dispatch to the	dispatch name	0.500000
with times	core indexes datetime index	0.007634
construct an intervalindex from a 1d array of	from intervals	0.125000
try to connect	connect	0.071429
slice the	slice	0.038462
to take optional positional	util optional args	0.066667
we have	core categorical	0.013889
dataframe to	data frame	0.005714
file node must already exist	io hdfstore append key value format	0.016667
a multi reindex	reindex multi axes	0.500000
parse the raw data into a	parser parse raw data rows	0.250000
find all occurrences of pattern or	findall arr pat	0.250000
to cast to the specified dtype	dtype result dtype	0.142857
retrieve the metadata for this	io index col read metadata handler	0.500000
an	core indexes datetime index	0.007634
ndarray only use this if	index set	0.022727
of deterministic integers	encoding hash_key categorize	0.500000
retrieve our attributes	io table get attrs	1.000000
underlying	multi	0.018182
return a tree-like object that	html frame parser build	0.014706
i : int slice or sequence	core data frame ixs i axis	0.200000
compute	crosstab	0.050000
be	hdfstore	0.014925
convert to our native types format slicing	float block to native types	0.250000
over the blocks collect	axis consolidate transposed	0.062500
get lines 0) there are headers on row	io python parser get index	0.166667
given an interval or	get interval	0.125000
_constructor_sliced-like objects	panel homogenize dict frames intersect dtype	0.142857
function is called via the 'numpy' library	validate take with	0.055556
append rows of other to the end	append other	0.200000
freq and stride	and stride	1.000000
return	packb	0.022727
gets called after a	core indexes period index array	0.050000
the maximum value of the	core categorical max numeric_only	0.250000
the set of unique elements of arr1	contents arr1	0.066667
iter1 iter2 iterables that produce elements	util assert copy iter1 iter2	0.166667
value	indexes index set value arr key value	0.038462
from 1-dimensional ndarray only use this if you	key	0.005051
file node	hdfstore append key value format	0.016667
elements of arr1	equal contents arr1	0.066667
can be used to iterate over the	parser build	0.014706
time index using the index's	core ndframe tshift periods	0.166667
(attr formatted_value)	multi index format attrs	0.142857
the table generally only indexables	io table read column column where start stop	0.250000
in hdfstore parameters	hdfstore put key value	0.333333
'numpy' library the	with	0.034483
column and index parameters	value index col	0.333333
read csv file (discouraged please use :func	csv cls path header sep	0.066667
return datetimeindex with times	indexes	0.004651
length slice	slice obj	0.333333
left and right index are equal	assert almost equal left right check_exact check_dtype	0.333333
table	translate arr table	1.000000
we might need to coerce a code to	coerce freq code	0.076923
the frame should be truncated if so slices	data frame formatter chk truncate	0.500000
whether each index value is found in	indexes datetime index ops mixin isin values	0.083333
return if the data is sparse|dense	series ftypes	0.250000
function for	core arith method	0.333333
to capture stderr in a buffer so	capture stderr f	0.055556
render the built up styles to	formats styler render	0.142857
table in file node	append key value format	0.016667
indicies	core panel extract axes	0.142857
set new labels on multiindex	core indexes multi index set labels labels level	0.333333
round the fractional part of the given	reshape round frac x precision	0.200000
fast	index set value arr key	0.023810
for	sparse arith method	0.333333
draw histogram of the dataframe's series	plotting hist frame	0.200000
value from 1-dimensional ndarray only use this if	core indexes datetime index get value	0.071429
if the levels of both multiindex objects	core indexes multi index equal levels other	0.100000
type t or tuple of types	type t	0.083333
to the underlying array	index ops mixin	0.019231
an positional indexer cannot enlarge	indexer has valid positional setitem indexer indexer	0.052632
index if	index	0.002004
a string cast it	cast	0.058824
float values converted into	float array formatter get result as array	0.055556
count of number	count arg	0.200000
we do need a multi reindex this	series needs reindex multi axes method level	0.333333
gets called	indexes period	0.034483
take which sets nan values in one	take nd arr	0.125000
a datetime64 block	datetime	0.006711
in file node	append key value	0.016667
float that can safely be cast	val min_val	0.083333
interval in the	core indexes interval	0.062500
categorical	indexes categorical index	0.095238
k	k	0.384615
code group	group	0.027027
curve with holidays between	holidays start end return_name	0.066667
date	date	0.400000
gradientfill stop	stop	0.050000
add	by add	1.000000
of	range	0.047619
construct an intervalindex from	index from	0.090909
the parser based	io parser	0.250000
given offset/observance to a	rule	0.050000
number of bytes in the underlying data	multi index nbytes	0.052632
a	core indexes period index array wrap	0.050000
for a recursive call	recursive	0.090909
if we define an builtin function for	core selection mixin is builtin func arg	0.333333
is an actual dtype	is dtype cls dtype	0.043478
default frequency	end periods freq	0.187500
(e	maybe to	0.250000
in a block	block	0.008197
hard to parse	tools parse	0.125000
float values converted into strings using	float	0.024390
take optional	util optional	0.066667
a	indexes period index array wrap result	0.050000
update index attributes e g	datetime index maybe update attributes attrs	0.200000
series values	timedelta	0.022222
csv file (discouraged please	from csv cls path header sep	0.066667
must	append key	0.016667
create and return the block manager from a	core sparse to manager sdf columns	0.052632
dataframe sorted by the n smallest values	core data frame nsmallest n	0.166667
indicated number of times	repeat arr repeats	0.200000
a new datetimeindex with passed location s deleted	core indexes timedelta index delete loc	0.500000
convert datetime-like to	core indexes period index cmp opname nat_result	0.066667
checks whether the frame	data frame	0.005714
for series columns for dataframe major_axis	ndframe iteritems	0.055556
temporarily setting a timezone	timezone	0.083333
prior to a	core series array prepare result	0.111111
function is called via the 'numpy' library the	compat numpy validate take with convert convert	0.055556
read csv file (discouraged please use :func pandas	frame from csv cls	0.066667
file node	hdfstore append	0.016667
csv	from csv cls path	0.066667
detect whether the installed version	compat major_ver	0.083333
all of the data are missing	core data	0.041667
provides a	period	0.016667
boolean array of whether each index value is	core indexes datetime index ops	0.034483
of unique elements in the	index ops mixin nunique dropna	0.083333
over	io html frame parser build	0.014706
return myself	core datetime tzblock	0.500000
read csv file	from csv cls path	0.066667
sets index names to	default names	0.083333
a column by inferring dtype	data use_dtypes convert_dates	0.500000
from	compat chain	0.034483
totally ordered cartesian product of all possible label	labels shape sort xnull	0.066667
validates that we have good categories	categories cls categories fastpath	0.250000
membership of x not in y	core computation not in x y	0.066667
a sorted ndframe before	ndframe truncate before	0.250000
shift the block by periods	core datetime tzblock shift periods axis mgr	1.000000
string-like	convert string array data encoding	0.038462
union of two index objects	range index union other	0.083333
true if categoricals are	equal	0.050000
lookup of	index set	0.022727
for series arithmetic operations to	core arith method series op name	0.333333
into the hypothetical list representing the totally ordered	xnull	0.083333
function for this argument return	func	0.023810
asof merge this is similar	core reshape merge asof	0.071429
convert datetime-like to datetime64	cmp opname nat_result	0.066667
test result and reset test_results	test result	0.250000
dataframe with multi-level index return new dataframe with	core data frame reset	0.027778
to convert datetime-like to datetime64	core indexes period index cmp opname nat_result	0.066667
coerce values and other to dtype 'i8' nan	core datetime block try coerce args values other	1.000000
accumulating data to	list	0.034483
of columns excluding na/null	core data frame	0.005917
we are index sliceable then return my slicer	core convert to index sliceable	0.083333
add numeric operations to	group by add numeric operations cls	0.250000
be	append	0.012987
reduction type operation	core index ops mixin reduce op name	0.083333
types format slicing	types slicer na_rep date_format	0.200000
equivalent to shift without copying data the shifted	ndframe slice shift	0.083333
check that left and right	left right exact	0.333333
float	formats float array formatter get result as array	0.055556
passed panel or object coercible to	join overwrite filter_func	0.076923
an object	dtypes	0.015873
to return the correct pandassql subclass based on	io pandas sql builder con flavor schema meta	0.055556
backward fill the	core group by backfill limit	0.250000
create and return the op string for	bin op generate	0.066667
a simple cross-tabulation of	crosstab index columns values	0.066667
set of subplots already made	plotting subplots naxes sharex sharey squeeze	0.166667
increasing only equal or increasing values	increasing	0.166667
object o and return packed	io msgpack packb o	0.055556
removes the	removals inplace	0.500000
from a scalar or array parameters	from array arr	1.000000
in file node	append	0.012987
the totally ordered cartesian product of all possible	get group index labels shape sort xnull	0.066667
and return the op string for this	op generate	0.066667
value from 1-dimensional ndarray only	datetime index get value series	0.071429
called	period index array wrap result	0.050000
for more this is index for series columns	core ndframe	0.005051
by definition have a	io formats datetime64tzformatter format strings	0.166667
provide concatenation of	dtypes concat datetime to_concat axis typs	0.142857
underlying data	indexes	0.009302
of panel along major axis	core panel major xs key	0.166667
a tree-like object that can be	io html	0.012987
setup	core resampler set	0.333333
stacked format as dataframe	core panel to frame	0.125000
handle na filling of take	take fillable values indices allow_fill	0.250000
unstack a k a pivot series with multiindex	core series unstack level	0.333333
:meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace limit	0.333333
series refer to numpy ndarray repeat	series repeat repeats	0.333333
keys	keys fname	0.200000
convert to our native types format slicing if	block to native types slicer na_rep float_format decimal	0.250000
this column return the compared	col	0.037037
convert string-like and string-like array to convert object	core dtypes maybe convert string to object	0.142857
given offset/observance to	rule	0.050000
comparison operations to convert timedelta-like	indexes td index cmp opname	0.055556
read csv file	data frame from csv cls	0.066667
using one or more existing columns	keys drop append inplace	0.166667
indexer input array	indexer	0.009174
to a left-join except	left right on left_on	0.058824
block b	block block_items existing_col	0.500000
exist and	append key value	0.016667
raise keyerror is	compat	0.030303
that an positional indexer cannot enlarge its target	has valid positional setitem indexer indexer	0.052632
return the ftypes (indication of sparse/dense	core ndframe ftypes	0.055556
can be used to iterate over the	io html	0.012987
on our axes compute the expected nrows	table nrows expected	0.142857
set my pandas	fixed set	0.200000
locator	get locator	0.062500
backward fill the	group by backfill limit	0.250000
index with business day as the	core indexes	0.004762
is called via the 'numpy' library the	take with convert convert args kwargs	0.055556
to accelerate unioning a collection of	index union many others	0.040000
cast values to	base cast types values	0.500000
new block (of a possibly different	core block setitem indexer	0.066667
object to a json string	ndframe to json path_or_buf orient date_format double_precision	1.000000
with custombusinessday as the default	cdate range start end	0.333333
construct dataframe from dict of array-like	data frame from dict cls	0.200000
specified frequency freq	asfreq freq how	1.000000
the 'info axis' see indexing for more this	keys	0.032258
can	frame	0.009091
new type	dtype copy errors values	0.250000
for panel objects and will raise an error	panel	0.017857
form the intersection of two index	index intersection other	0.052632
a string-like	string array	0.038462
return the padded hexadecimal id of	core computation raw hex id	0.166667
string-like that is	io convert string array data encoding	0.038462
simple cross-tabulation of	values	0.008547
all the classes	util all	0.055556
return	io	0.006024
the minimum value of the	core index ops mixin min	0.125000
read sql database table into	sqldatabase read table table_name index_col coerce_float	0.333333
wrap comparison operations to convert timedelta-like to timedelta64	indexes td index cmp opname	0.055556
statistical measure using supplied function designed to be	func name window center	0.058824
tree-like object that can	io html frame parser build	0.014706
to group return result as series or by	by axis level	0.045455
ftypes (indication of sparse/dense and dtype) in this	core ndframe ftypes	0.055556
the	core indexes multi index	0.026316
from a 1d array of interval objects parameters	indexes interval index from intervals cls data name	0.333333
is called via the 'numpy' library the	take with convert convert	0.055556
or not the 'usecols' parameter is	io evaluate usecols usecols names	0.083333
defined as a copy with	multi index view cls	0.047619
target's values (move/add/delete values as necessary) returns	reindex target method level limit	0.142857
create and return the block manager from a	core sparse to manager sdf	0.052632
header of	parser parse thead	0.111111
to table in file	key value	0.011628
the float	io formats float array	0.055556
data & release	data col take data	0.111111
true if this is	is in	0.076923
suitable for a panel-like dataframe	time panels names	0.076923
we might need to coerce a	coerce	0.025641
ndarray only	indexes index set	0.023810
concatenation	dtypes concat datetime	0.125000
the codes by the indexer fill with the	indexer allow_fill	0.050000
codes by the indexer	nd indexer allow_fill	0.050000
return an indexer for a target	get reindexer target	1.000000
function for series	core arith method series	0.333333
value from	indexes index set value arr key value	0.038462
ndarray of the flattened values of the	core indexes index ravel order	0.037037
result parameters	result mask other	0.500000
data converts	cls data	0.076923
dispatch to apply we are stripping	core group by mixin apply func name	0.050000
dataframe	ndframe	0.015075
coerce values	coerce	0.025641
for	indexes datetime index	0.007634
from 1-dimensional ndarray only use this if you	value arr key	0.023810
of type t or tuple of	is type t	0.083333
a string	string	0.113208
process for each axes overridden in child	plot logic ax data	0.083333
pairwise correlation of columns	core data frame corr method min_periods	0.111111
the operations to the cls evaluate	aggregate operations cls	0.142857
resample	period	0.016667
block_manager axis	core ndframe get block manager axis axis	0.166667
ensure that an array-like object is a	dtypes ensure	0.200000
provides a	timedelta	0.022222
internal compat with selectionmixin	ndframe obj with exclusions	1.000000
block in-place with new item	core object block set locs values check	0.125000
compute a simple cross-tabulation of	core reshape	0.047619
value to	formats float array formatter value	0.250000
where elements of v should	v	0.026316
called after a	core indexes period index	0.034483
moving function	arg window func	0.500000
with	compat	0.030303
set coerce the	dtypes coerce	0.066667
am never a view	categorical block is view	0.200000
value from 1-dimensional ndarray only	set value arr key value	0.038462
to their default values as specified	for default values	0.200000
round the fractional part	core reshape round frac x precision	0.200000
perform the reduction type operation	ops mixin reduce op name axis	0.083333
needs additional handling	indexes period	0.034483
date forward to	tseries date	0.083333
axis	core ndframe	0.005051
return a categorical adjusted for groupby	indexes categorical index codes for groupby	0.333333
comparable timezone both for pytz	datetime index timezone	0.200000
we have a null	is null	1.000000
of value from 1-dimensional ndarray only	period index get value	0.071429
this	core indexes index	0.014085
a la re split in the series/index	core str split arr pat n	0.166667
node with the key or	get node key	0.083333
to	formats	0.031250
a new unit if	dtypes datetime tzdtype new cls unit tz	0.055556
temporary path and agrees	util ensure clean filename return_filelike	0.200000
of entries in index	custom index	0.250000
x in	core computation in x	0.166667
csv file (discouraged please use	core series from csv cls path sep	0.066667
fixed frequency datetime index with day calendar	core indexes period range start end periods freq	0.083333
the result	dtypes result	0.500000
axis omitted where alternately any or all	frame dropna axis how thresh subset	0.100000
passed a manager and a axes dict	core ndframe init mgr mgr axes	0.333333
index return new dataframe with labeling information	core data frame reset	0.027778
to return the correct pandassql subclass based	pandas sql builder con flavor schema meta	0.055556
apply we are	group by mixin apply func name	0.050000
validates that we have	cls	0.016949
an op class with its symbol already passed	computation op maker op_class op_symbol	1.000000
might need to coerce a	maybe coerce	0.125000
produce 'pivot' table based	core reshape slow pivot index	0.333333
a tree-like object that can be	frame parser	0.012500
a single dtype if dtype	core simple blockify tuples dtype	0.111111
wide format into long stacked format as dataframe	panel to frame	0.125000
rewrite the assignment operator for	computation rewrite assign tok	0.125000
packed bytes see :class	packb	0.022727
column by inferring dtype	data use_dtypes convert_dates	0.500000
the _typ here	axis axis labels fastpath	0.500000
decorator to make a repr function return	repr	0.040000
sets the categorical to	core categorical	0.013889
possibly upcast	mgr	0.083333
going to write this as a	write	0.017857
specialized intersection for datetimeindex objects may be	indexes datetime index intersection other	0.142857
names etc' nentries - number of entries	nentries nlevels prefix names	0.100000
cumulative sum of non-na/null values	sparse sparse array cumsum axis	1.000000
totally ordered cartesian product of	index labels shape sort xnull	0.066667
from passed panel or object coercible to	update other join overwrite filter_func	0.055556
metaclass	compat add metaclass metaclass	0.125000
unique elements in the group	group by nunique dropna	0.250000
an s3 s3n or s3a	io is s3	0.250000
use this if	index set	0.022727
lookup of value from	core indexes index set value arr key value	0.038462
time the time part of the	index time	0.111111
an index	index	0.008016
equivalent to shift without copying data the shifted	ndframe slice shift periods	0.083333
return the number	core indexes multi index	0.013158
an ndarray of the flattened values of the	core indexes index ravel order	0.037037
index objects contain the same	datetime index ops	0.034483
index objects sortedness	index	0.002004
my self as	as	0.066667
internal method to handle na filling of take	multi index assert take fillable values indices allow_fill	0.250000
return a list of the axis indicies	core panel extract axes data	0.142857
dictionary for	dict from	0.250000
return an ndarray for our input	core sparse sanitize values arr	0.200000
bind a method to class	bind method cls	0.200000
i	core	0.001326
the union of two index	core indexes index union other	0.083333
context manager	io stata reader	0.142857
reindex for all the	core ndframe reindex	0.125000
provides expanding transformations	expanding	0.125000
to an openpyxl style object	convert to style cls	0.500000
a new unit if needed otherwise return	datetime tzdtype new cls unit	0.055556
checks that all the labels are datetime objects	index is all dates	0.333333
the time part	time	0.052632
converts dtype	dtype	0.010989
we take a string-like	io convert string array data encoding	0.038462
dataframe in	core data frame	0.005917
parse the raw data into	html frame parser parse raw data rows	0.250000
name this allows simpler access to	core ndframe setattr name	0.166667
two or more factors by default	columns values rownames	0.333333
convert timedelta-like to timedelta64	indexes td index cmp	0.055556
file node must already	hdfstore append key value	0.016667
of type t or tuple of	core computation is type t	0.083333
pad/backfill get_indexer that works for monotonic decreasing	get fill indexer searchsorted target method limit	0.142857
the date	index date	0.200000
a boolean if we	is	0.010582
the series/index by the	core str	0.011364
axes if	axes	0.043478
passed type is an	dtype is	0.032258
optional fill value	fill_value	0.033333
a dataframe	data values	0.062500
comparison operations to convert datetime-like to	indexes dt index cmp opname nat_result	0.066667
window of type window_type and size window	rolling window arg window win_type	0.100000
lookup of value from 1-dimensional ndarray only use	core indexes period index get value	0.071429
only the actual sparse values need	core sparse sparse array	0.043478
arg is a	arg errors	0.026316
return index	datetime index	0.007042
from 1-dimensional ndarray	value arr key	0.023810
context manager for running code that expects to	util assert produces warning expected_warning	0.071429
index or	datetime index ops	0.034483
vals	vals	0.454545
:meth pandas dataframe reset_index function	reset index level drop name inplace	0.142857
and/or after some particular index value	after	0.166667
compute standard deviation of	group by std ddof	0.166667
value from 1-dimensional ndarray only	value arr key value	0.038462
out the binary feather-format	feather fname	0.083333
for series arithmetic operations to	comp method series op name	0.333333
each index value is	core indexes datetime index ops	0.034483
list of tuples of the (attr formatted_value)	mixin format attrs	0.142857
dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis	1.000000
we take a string-like that	io convert string array	0.038462
of v should be	ndarray searchsorted v	0.033333
checks that path's extension against	writer check extension cls	0.125000
we will be using numexpr	use numexpr op op_str	0.333333
'numpy' library the	validate take with convert convert	0.055556
a single block	core block	0.010870
data from some accepted dtype to the	cls data	0.076923
or by	by axis	0.045455
i am	categorical	0.009615
validates that	core categorical validate ordered	0.055556
specialized intersection for datetimeindex objects	intersection	0.041667
str	str from	1.000000
sets names on levels warning	set names names level	0.200000
dtype converting float	dtype	0.010989
the data are	core data	0.041667
akima interpolation	akima interpolate	0.500000
fill value for the dtype of the	fill value dtype	0.250000
after a	index array wrap result	0.066667
an indexer even	core indexes index get indexer for	0.250000
the passed type is an	dtype is	0.032258
'numpy' library	take with	0.055556
raise keyerror is	compat chain	0.034483
a series	plotting tsplot series	0.333333
object that can be used to	io	0.003012
fast path for getting a cross-section	fast xs	1.000000
sorted ndframe	ndframe truncate	0.250000
dimensions as	ndframe	0.005025
index	core indexes index validate names	0.066667
convert string-like and string-like array to convert object	core dtypes maybe convert string to object values	0.142857
float values converted	float array formatter get	0.055556
indexer for a target	reindexer target	0.200000
try to read from a url file	io read obj	0.058824
csv file (discouraged please use	frame from csv cls path header sep	0.066667
q	q	1.000000
value is found in the	ops mixin isin	0.333333
rewrite the assignment	core computation rewrite assign	0.125000
we are going to write this as	write	0.017857
fast lookup of value from 1-dimensional ndarray only	categorical index get value series key	0.100000
to panel	core panel update	0.500000
called upon unpickling	new interval index cls d	0.333333
formats to a	convert datetime to	0.166667
fill value parameters	fill_value	0.033333
the block manager from a dataframe	manager sdf columns	0.052632
prior	core series array prepare	0.111111
handles preprocessing for cut	reshape preprocess for cut	0.200000
return an item pair	chain map popitem	0.055556
coerces data to ndarray raises on	indexes index coerce to ndarray cls	0.166667
same dimensions as the	ndframe	0.005025
check to see if we can	can	0.111111
the array interface return	core sparse sparse series array result	0.250000
tok	tok	0.833333
float values converted into strings using	io formats float array formatter get	0.055556
flattened values of the	core indexes index ravel order	0.037037
called via the 'numpy' library	numpy validate argmin with	0.200000
function to my	func	0.011905
convert a numpy / pandas type	type	0.024390
date belongs to a leap year	index is leap year	0.142857
the handle	io stata	0.071429
to which each value of x	x	0.043478
a repr function return fillvalue	repr fillvalue	0.083333
must already exist and be	append key value format	0.016667
value from 1-dimensional ndarray	core indexes datetime index get value series	0.071429
reduce join_unit's shape along item axis to	trim join unit join_unit	0.500000
we do need a multi reindex	core ndframe needs reindex multi	0.333333
new object with the replacement attributes	core selection mixin shallow copy obj obj_type	0.166667
called after	indexes period index array wrap	0.050000
add in the datetimelike methods (as	index ops mixin add datetimelike methods cls	0.333333
set my pandas type	fixed set object info	0.200000
match of regular expression pat	pat flags expand	0.200000
object that	html frame parser	0.012658
convert timedelta-like to	indexes td index cmp opname nat_result	0.055556
values between particular times of	between	0.086957
has a single dtype if dtype is	core simple blockify tuples dtype	0.111111
block with	block make block	0.100000
frame should be truncated if so slices	io formats data frame formatter chk truncate	0.500000
of microseconds (>= 0	indexes timedelta index microseconds	0.066667
dispatch to apply	group by mixin apply func	0.050000
from 1-dimensional ndarray	index	0.002004
format	format cls	1.000000
concatenation of an	concat	0.058824
the view limits to the nearest multiples of	time series date locator autoscale	0.055556
the full scope for	core computation scope full scope	0.055556
string-like and string-like array to convert object dtype	core dtypes maybe convert string to object	0.142857
index of first occurrence of minimum of values	core series idxmin axis skipna	1.000000
string representation for a particular	extension dtype bytes	0.142857
return boolean if values	core index ops mixin is	0.100000
index objects contain the same	indexes index	0.007353
time strings to	tools to	0.250000
zeros leaving just one before	zeros str_floats na_rep	1.000000
table in	append key	0.016667
the	indexes range index	0.042553
a boolean indicating whether the file is open	io hdfstore is open	0.250000
operations to the groupby generically	operations cls	0.038462
compute pairwise correlation of columns excluding	core data frame corr	0.111111
corresponding to axis	axis	0.011364
group return result as series or	axis level	0.125000
overlap	core items overlap	0.062500
fast lookup of value from 1-dimensional ndarray	set value arr key value	0.038462
cached item item represents a positional	ndframe iget item cache item	0.090909
a manipulation result has the same dimensions	core ndframe constructor	0.055556
json lists to line delimited	to line delimits s	0.166667
etc' nentries - number of entries in index	make custom index nentries nlevels prefix	1.000000
the locations	locator call	0.333333
and if so prints	warn if	0.333333
a	core series	0.008000
that path's extension against the	extension cls	0.125000
are datetime	core indexes numeric index is	0.333333
be	hdfstore append key value format	0.016667
alias for is_monotonic_increasing deprecated	indexes index is monotonic	0.333333
2d from panel holding passed axis constant parameters	panel dropna axis how inplace	0.200000
called upon unpickling rather than	core indexes new datetime index cls d	0.111111
group series using mapper dict	level as_index	0.111111
multiindex from the cartesian product	core indexes multi index from product	0.166667
fast path for getting a cross-section	manager fast xs loc	1.000000
called after a ufunc needs additional handling	period index array wrap result context	0.041667
a new unit if	new cls unit tz	0.055556
put method to its values attribute if	series put	0.055556
new dataframe with	core data frame	0.005917
freq and stride info from string	and stride freqstr	0.250000
select values between particular	core ndframe between	0.100000
ndarray only use this if you	core indexes index set value arr	0.023810
index	custom index	0.250000
header rows	io pop header name	0.100000
gets called	index array	0.066667
of value from 1-dimensional ndarray only use this	indexes datetime index get value series key	0.071429
index objects contain the same	core indexes datetime index	0.007634
compute the isin boolean array	core isin comps	0.500000
an indexer coerced to	core categorical maybe coerce indexer indexer	0.125000
vectorized membership of x not in y if	not in x y	0.066667
to table in file node must	hdfstore append	0.016667
packed bytes see :class packer	io msgpack packb	0.025641
a dataframe to a console-friendly tabular output	data frame to string buf columns col_space header	0.333333
determine	str match	0.166667
'numpy' library the	take with convert convert args	0.055556
ordered data like	ordered	0.017857
we have a dtype compat for the values	values name	0.166667
build an xpath expression to simulate bs4's	build xpath expr	0.200000
only use	index set	0.022727
apply mapper function to an index	indexes index map mapper	1.000000
this getitem defers to the underlying array which	ops mixin getitem key	0.333333
values of	core	0.001326
the	core ndframe	0.025253
temporarily set a parameter value using the	value	0.005155
the number of	indexes range index	0.021277
duplicate	keep	0.142857
helper function to determine if dtype	dtype n method dtype	0.250000
statement is of the	w	0.090909
overlap add suffixes	items overlap	0.062500
algos groupsort_indexer implements counting sort and it is	get group index sorter group_index ngroups	0.250000
of the _apply kwargs and	name window center	0.071429
object that can be	html frame	0.014706
where elements of v should be	indexes frozen ndarray searchsorted v	0.033333
the most likely frequency given the input	warn	0.100000
with multi-level index return new dataframe with labeling	data frame reset	0.027778
apply	month offset apply	0.500000
returns first n rows	head n	0.500000
whether this	validate iterable	0.500000
of value from 1-dimensional ndarray	datetime index get value series	0.071429
where statement is of	where w	0.083333
compute a simple cross-tabulation of	core reshape crosstab index columns values	0.066667
shift without copying	shift periods	0.333333
evaluate the block return	eval	0.100000
provides a resample of a groupby implementation	index resampler groupby	0.166667
values and other	other	0.013514
interpolate machinery	core block interpolate with fill method	0.200000
the categorical instance	core categorical	0.013889
for series arithmetic operations to	core sparse arith method op name	0.333333
a timegrouper	resample rule	0.166667
we need to coerce a scalar	period index coerce scalar	0.250000
from a row element	io html frame parser parse	0.250000
new categorical by default	core categorical sort values	0.166667
type is an actual dtype that we	is dtype cls dtype	0.086957
to handle na filling of take	indexes index assert take fillable values indices	0.250000
number	indexes	0.009302
background in a range according	io formats styler background	0.125000
self as	sparse series as	0.125000
index or	datetime index ops mixin	0.029412
running code that expects to raise	util assert produces warning expected_warning filter_level clear	0.071429
array	core sparse sparse series array	1.000000
an indexer coerced to	maybe coerce indexer indexer	0.125000
in a block of same	block same	0.333333
statistical measure using supplied	name window center	0.071429
return datetimeindex with	indexes datetime	0.011494
valid	has valid	0.500000
try to read from	read	0.033333
gets the	core categorical get	0.200000
csv file	from csv	0.066667
actual filter	core computation filter bin op	0.250000
1-dimensional	core indexes index	0.007042
return a fixed frequency timedelta index	indexes timedelta range start	0.083333
type in type_map	type fmt	0.500000
or values in the	core	0.002653
we are going to write this as a	write obj data_columns	0.111111
my specific	core indexes index	0.007042
called	series array	0.090909
create and return the	io table create	0.142857
label if label is not contained a	label	0.028571
of the kinds allowable columns	io table queryables	0.055556
parse the raw data into a list	parser parse raw data rows	0.250000
spreadsheet-style pivot	core reshape pivot	0.166667
can perform a	core indexes index	0.007042
the data to the block we must	core non consolidatable mix in	0.090909
string-like and string-like array to convert object dtype	maybe convert string to object	0.142857
cumulative sum of non-na/null values	core sparse sparse series cumsum axis	1.000000
return a categorical adjusted for groupby	categorical index codes for groupby	0.333333
reconstruct labels from observed group ids	decons obs group ids comp_ids obs_ids shape labels	0.250000
a fully reindex-output to the	data frame group by reindex output result	0.045455
analagoust to s-s	core diff arr	0.200000
list of tuples of the (attr formatted_value)	ops mixin format attrs	0.142857
keys that	keys fname	0.200000
append to table in file node must	hdfstore append key value format append	0.125000
indicated if we have mixed levels	core indexes multi index have mixed levels	0.200000
of a func call with any defaults	util make signature func	0.250000
'series argmin' is called via the 'numpy' library	validate argmin with skipna skipna args	1.000000
o and return	io msgpack packb o	0.055556
the union of two index objects and	indexes index union other	0.083333
styler with	styler	0.022222
take which sets nan values in	core take	0.125000
panel	panel update other	0.500000
on our axes compute the expected	expected	0.083333
the	core categorical	0.041667
this function is called via the 'numpy' library	take with convert convert	0.055556
frequency datetime index with custombusinessday as the	core indexes cdate range start	0.083333
from a 1d array of interval objects	indexes interval index from intervals cls	0.333333
don't allow a multi reindex on	needs reindex multi	1.000000
a particular axis	axis	0.034091
if the levels of both multiindex objects are	indexes multi index equal levels other	0.100000
feather-format object from the	feather	0.050000
generator	generator	1.000000
from 1-dimensional	index set	0.022727
selected	selected	1.000000
datetimeindexes	core indexes datetime index sub datelike dti	1.000000
from	arr	0.027397
checks whether	io validate	0.031250
parameter for general index and	indexes index validate	0.066667
return new dataframe with labeling information in	core data frame reset	0.027778
we are index sliceable then return my slicer	to index sliceable obj key	0.083333
the cached item item represents	item cache item	0.125000
csv file (discouraged please	series from csv cls	0.066667
monotonic decreasing	get fill indexer searchsorted target method limit	0.142857
the type not dtype instance associated with	type arr_or_dtype	0.142857
the	io html frame	0.038961
ndarray only use this	set value arr key	0.023810
in the series extract groups from the	core str extract frame arr	0.047619
of available options	pp options	0.083333
after	index array	0.066667
parameter if	validate ordered	0.055556
using a timegrouper	group by resample rule	0.166667
running code that expects to raise or not	util assert produces warning expected_warning filter_level clear	0.071429
from 1-dimensional ndarray only	set value arr key	0.023810
the values to	values	0.008547
with times to midnight length	indexes	0.004651
create the manager	mgr data index columns	0.333333
dispatch to apply we are stripping	group by mixin apply func	0.050000
returns previous weekday used for observances	previous workday dt	1.000000
must already exist	hdfstore append key value format	0.016667
from 1-dimensional ndarray only	indexes index set value arr	0.023810
rewrite the	rewrite assign	0.125000
alter default behavior on how float is	float format accuracy use_eng_prefix	0.333333
have good categories	categories fastpath	0.250000
take a string-like that is object	convert string array	0.038462
capture stderr in a buffer so that it	capture stderr f	0.055556
the inferred types one for each level	indexes multi index inferred type levels	0.333333
return the block manager from	sparse to manager sdf	0.052632
pick the best locator based	locator	0.047619
series/index ends with passed pattern	str endswith arr	1.000000
string-like array to convert object dtype	dtypes maybe convert string to object	0.142857
fast lookup	core indexes index set value arr key	0.023810
datetimeindex with times to midnight length	core indexes	0.004762
holidays between start_date	holiday calendar holidays	0.166667
value from 1-dimensional ndarray only use this	arr key value	0.038462
float values converted into	io formats float array formatter get	0.055556
deprecated use :meth	ascending	0.166667
construct dataframe from dict of	core data frame from dict cls data	0.200000
file	value format	0.016667
*this is an internal	core indexes index to	0.500000
totally ordered cartesian product of all possible label	index labels shape sort xnull	0.066667
return if we are	dtypes is	0.030303
horizontal bar plot	plotting frame plot methods barh x y	1.000000
csv file	from csv cls path header	0.066667
return if the index	core indexes index	0.007042
take which	core take nd arr	0.125000
operations to convert timedelta-like to	core indexes td index cmp	0.055556
apply	tseries semi month offset apply index days	0.500000
a new datacol with the block i	block cls i name cname	0.333333
groupby implementation	timedelta index resampler groupby	0.166667
dictionary for	construct axes dict from	0.250000
to iterate over the	io	0.003012
the 'parse_dates' parameter is a non-boolean scalar	parse dates arg parse_dates	0.142857
prior to a	series array prepare result	0.111111
a slice	ndframe slice	0.125000
series or	axis	0.011364
sub-classes	window gotitem key ndim subset	0.333333
datetimeindex with times to midnight length is	core indexes datetime	0.011494
our native types format	native types slicer na_rep date_format	0.200000
numpy array of python datetime	core indexes datetime index	0.007634
of a series excluding elements from	core series group	0.030303
ndarray only use this	index	0.006012
xvalues	xvalues	1.000000
lists to line delimited json	json convert to line delimits s	0.200000
find indices where elements of v	frozen ndarray searchsorted v	0.033333
returns a latex representation for a particular dataframe	core data frame repr latex	0.333333
for our input	sanitize values arr	0.200000
same dimensions as the original	core ndframe	0.005051
in file node must already	io hdfstore append key value	0.016667
cast it to	index maybe cast	0.111111
round the	round	0.090909
apply we are	core group by mixin apply	0.050000
maximum	max subset color	0.166667
values	index get level values	0.500000
base freq and stride info	base and stride freqstr	0.250000
string	string cls string	0.125000
gets called after a	index array wrap result	0.066667
alter default behavior on how float	set eng float format accuracy use_eng_prefix	0.333333
f	f	1.000000
separate excel sheet	excel path na_rep engine	0.166667
coerce a scalar to a	index coerce scalar to	0.071429
dataframe to the feather-format	io to feather df path	0.250000
compute a simple cross-tabulation of	crosstab index columns values	0.066667
already exist and be	io hdfstore	0.014493
return an outside world format currently just	core block external values dtype	0.125000
as dataframe	to frame	0.125000
given an interval or intervalindex return the corresponding	core indexes get	0.125000
a fixed frequency timedelta index with day	indexes timedelta range start	0.083333
return values for selected item ndarray or	get item fastpath	1.000000
object that can be used to iterate	parser build	0.014706
we are going to write	write obj	0.041667
that an positional	core ndframe indexer has valid positional setitem	0.250000
csv file	series from csv cls path	0.066667
of transform	transform	0.083333
ndarray only	core	0.001326
be	frame	0.009091
return an internal format currently just the ndarray	block internal values dtype	0.111111
datetimelike (e	indexes maybe to datetimelike data	0.142857
value from 1-dimensional	get value series	0.250000
for general index and	indexes index validate	0.066667
underlying data which	index	0.002004
the op	computation bin op	0.055556
shift without copying data the	core ndframe slice shift periods	0.083333
setstate	setstate	1.000000
multi-index suitable for a panel-like dataframe parameters	core panel index time panels names	0.076923
each string in the series/index by	core str	0.022727
called after a ufunc	context	0.071429
the shape	shape	0.095238
ensure that an array object	dtypes ensure	0.200000
a string representation for this object	indexes frozen ndarray unicode	0.083333
get lines 0) there are headers	io python parser get index name columns	0.166667
index or ndarray	index	0.002004
subset of rows if n	n	0.045455
label for first non-na/null value	data frame first valid	0.250000
temporarily setting a timezone	set timezone tz	0.142857
evaluate a python expression as a	computation eval expr	0.083333
can be used to iterate over	io html frame parser	0.012195
to take optional	optional args	0.066667
function for	core bool method	0.333333
stata binary dta files from array-like objects	data frame to stata fname convert_dates write_index encoding	0.333333
totally ordered cartesian product	get group index labels shape sort xnull	0.066667
float key and are not a floating index	indexes index maybe cast indexer key	0.500000
via the 'numpy' library the	compat numpy validate take with convert	0.055556
load a	compat load	0.200000
must already exist and	append key value	0.016667
the array interface	index array result	0.125000
to construct this type from a	core dtypes interval dtype construct from	0.166667
csv file (discouraged please	core data frame from csv cls path	0.066667
opname	opname	1.000000
of bytes in	range index nbytes	0.052632
compat we are always our own object	categorical base	0.500000
be	html frame parser	0.012658
each dataframe in panel to a separate excel	panel to excel path na_rep engine	0.111111
the series extract groups from the first	core str extract arr	0.066667
at particular time of day e g	ndframe at time time asof	0.066667
set/update the info	info info	0.142857
must already	io	0.003012
potentially wrap any results	resampler wrap result result	0.500000
font	font	0.750000
row without any nan is taken	ndframe asof where	0.166667
store object in hdfstore parameters	hdfstore put	0.333333
new manager with the	manager	0.058824
a compatiable fill_value and arr dtype then fill	dtypes maybe fill arr fill_value	0.333333
return true if this is	is	0.010582
not supported for panel objects and will	core panel	0.019231
if we if the passed type is	period dtype is	0.125000
with	make	0.125000
a compatiable fill_value and arr dtype then fill	fill arr fill_value	0.333333
a separate	path na_rep engine	0.500000
convert to our native types format	to native types slicer na_rep float_format decimal	0.250000
to iterate	io html frame parser build	0.014706
self analagoust to s-s	core diff arr	0.200000
the inferred types one for each level	multi index inferred type levels	0.333333
csv file	data frame from csv	0.066667
stata date formats to	to stata	0.058824
scalar to a compat for our	scalar to	0.100000
i : int slice or	data frame ixs i	0.200000
to table in file node	io hdfstore append key value	0.016667
beautifulsoup under the	beautiful soup html5lib	0.333333
see if a url has a valid	is url url	0.047619
frequency datetime index with custombusinessday as the default	core indexes cdate range start	0.083333
obs	obs	1.000000
representation for a particular object	core dtypes extension dtype bytes	0.142857
lreshape	lreshape	1.000000
return a view of	categorical view	0.111111
simple	core reshape crosstab index columns	0.066667
input function or	axis mapper axis copy	0.333333
types format	types slicer na_rep float_format	0.200000
pointer of the underlying	core index ops mixin	0.062500
evaluate a binary	op evaluate	0.333333
tuples of the (attr formatted_value)	index ops mixin format attrs	0.142857
draw	frame alpha figsize ax	0.500000
boolean if we if the passed type is	core dtypes period dtype is	0.125000
rec	rec	1.000000
sets index names to 'index' for	default names	0.083333
query in	index_col coerce_float	0.062500
options for	options	0.041667
values to	block shape values	0.050000
on a	op_str a	0.500000
to parse a	convert data	0.200000
a boolean whether i can attempt conversion to	is convertible to index other	0.333333
dataframe columns	data x	0.333333
tables into	io match flavor	0.166667
/ pandas type to its corresponding json_table	io json as json table type x	0.250000
the iterable	iterable	0.111111
this getitem defers to the underlying array	core indexes datetime index ops mixin getitem key	0.333333
the maximum	max	0.090909
of seconds (>= 0	indexes timedelta index seconds	0.066667
a timezone	util set timezone tz	0.142857
in index	index index	0.500000
to next offset only if not on offset	tseries business hour mixin rollforward dt	0.500000
or columns using input function	copy inplace	0.055556
will raise an error in a future release	core categorical reshape new_shape	0.142857
table in file	io hdfstore append key	0.016667
a multiindex	indexes multi index	0.013158
group excluding	core data frame group by	0.500000
out the binary feather-format	core data frame to feather fname	0.083333
manager with	block manager	0.021277
of casting data from some accepted dtype to	indexes numeric index assert safe casting cls data	0.047619
new block	core sparse block	0.250000
defined as a copy with the	index view cls	0.047619
the len	categorical size	0.111111
a simple	crosstab index columns	0.066667
not	not	1.000000
a slice of a multiindex and the index	index	0.002004
check that left and right dataframe are equal	util assert frame equal left right	0.333333
to ndarray raises on scalar	core indexes index coerce to ndarray cls	0.166667
exist	value	0.005155
be a single block	new align inplace	0.125000
attempt to coerce any object types to better	object block convert	0.083333
only the actual sparse	core sparse sparse	0.034483
3 columns of this dataframe	index columns values	0.037037
purely label-location based indexer for	loc indexer	0.166667
function for this argument	func	0.023810
a dense	core sparse sparse	0.034483
passed off to scipy interpolate	interpolate scipy	0.250000
index and its underlying data	indexes index	0.007353
of sparse/dense	ndframe	0.005025
swap levels i and j in	series swaplevel i j copy	0.333333
'args' and 'kwargs' should be empty except for	compat numpy validate groupby func name args kwargs	0.166667
validate percentiles used by describe and quantile	ndframe check percentile q	0.333333
intervaldtype this metaclass determines subclass ability	interval dtype type	1.000000
preprocess	preprocess	1.000000
manager for running code that expects	util assert produces warning expected_warning	0.071429
of a frame	frame	0.009091
getitem defers to the underlying array which	ops mixin getitem	0.250000
dataframe into wide 3d panel format	core data frame to panel	0.333333
retrieve single value at passed index label	get value label takeable	1.000000
sure that time and	indices time	0.125000
a fixed frequency datetime index with	indexes bdate range start	0.083333
ndarray only	arr key	0.023810
duplicate rows optionally only considering certain columns	subset keep	1.000000
gets	indexes period index array wrap	0.050000
quote the string if	core computation term value tostring encoding	0.200000
data are missing	data frame	0.005714
a resample	period	0.016667
the table this is generally only useful	column key column	0.142857
set the uuid	set uuid uuid	1.000000
the float values converted	float	0.024390
to all values found	transform	0.083333
read csv file (discouraged please	core data frame from csv	0.066667
infer better dtype for object columns	ndframe convert datetime numeric timedelta coerce	0.071429
set my pandas type & version	fixed set object	0.200000
and create	to	0.006329
return item and drop from frame raise keyerror	ndframe pop item	0.500000
beg	beg	0.454545
the index or minimum along an axis	core indexes datetime index ops mixin min axis	0.333333
fast transform path for	core ndframe group by transform fast result obj	0.333333
occupying requested label default	sparse series get label default	0.083333
add in the datetimelike methods (as we	add datetimelike methods	0.333333
method to handle na filling of take	core indexes multi index assert take fillable	0.250000
new multiindex	multi	0.018182
values at particular time of day e g	at time time asof	0.066667
the exception raised matches the expected exception and	assert raises contextmanager exception matches	0.142857
j	j	0.310345
if we have mixed levels	have mixed levels	0.200000
returns the float values converted into strings	float array formatter get result as array	0.055556
tree-like object that can be	frame parser	0.012500
putmask the data to the	putmask mask	0.142857
infer the fill value for	dtypes infer fill value	0.333333
of casting data from	numeric index assert safe casting cls data	0.047619
create a new block manager parameters	core block manager	0.022727
set/update the info for this indexable	io index col update info info	0.090909
attribute if	core series	0.008000
see if a url has a valid protocol	url url	0.045455
names	set default names	0.083333
new block try to preserve dtype	putmask smart v m n	0.055556
return the numexpr condition and filter	computation expr evaluate	0.200000
specified dtype	dtype result dtype	0.142857
nat-like arg is a passed in	arg	0.018868
number of microseconds (>= 0 and less	core indexes timedelta index microseconds	0.066667
decorator to run the same function multiple	num_threads kwargs_list	0.050000
to have correct dtype	name data sparse_index fill_value	1.000000
a new multiindex from the	multi	0.018182
1-dimensional ndarray only use this	index set value arr	0.023810
return an array of	array vals	0.083333
create and return the block manager from	to manager sdf columns index	0.052632
take the codes by the indexer	take nd indexer	0.090909
sequences of	core	0.001326
the totally ordered cartesian product of all possible	group index labels shape sort xnull	0.066667
the padded hexadecimal	computation raw hex	0.333333
a pathlib path	stringify path filepath_or_buffer	0.142857
init self from ndarray or list of lists	init matrix data index columns dtype	1.000000
row without any nan is taken	core ndframe asof where	0.166667
check that left and right	left right	0.190476
the shape of the values	shape values ndim shape	0.083333
lookup of value from 1-dimensional ndarray only use	indexes categorical index get value series key	0.100000
the :meth pandas dataframe reset_index function	index level drop name inplace	0.142857
the array interface	array dtype	0.125000
return	tseries	0.083333
on sunday use day thereafter	sunday to	0.200000
is a	scope_level	0.083333
the float values	formats float array formatter get	0.055556
packed bytes see :class packer for	packb	0.022727
and 'kwargs'	resampler func method args kwargs	0.142857
fast	indexes index set value arr key	0.023810
of value from 1-dimensional ndarray only	core indexes datetime index get value series key	0.071429
a type checking function of type	computation is type	0.125000
the best locator based	auto date locator get locator	0.062500
index and / or columns using input	axis copy inplace	0.055556
a tabular environment	latex buf columns col_space header	0.100000
convert to object if we are	core indexes multi index to safe for reshape	0.333333
with	datetime index	0.007042
boolean indicating if self is cached or not	ndframe is cached	1.000000
with optional fill value	fill_value	0.033333
compute a	columns values	0.037037
delete single item from singleblockmanager	core single block manager delete item	1.000000
given a 1d array return an	vals	0.090909
to iterate over the	io html frame	0.012987
is called via the 'numpy' library	validate take with convert convert	0.055556
to the underlying array	datetime index ops mixin	0.029412
support fully deleting the node in	io	0.003012
datetime index with custombusinessday as the default	core indexes cdate range start end	0.083333
metadata pathname for this key	table get metadata path key	1.000000
of python datetime date objects	core indexes datetime	0.011494
:class	msgpack packb	0.025641
to run the same function multiple times in	num_threads kwargs_list	0.050000
codes by the indexer fill	indexer allow_fill	0.050000
needs	indexes period index array wrap	0.050000
specialized shift which produces a datetimeindex	indexes datetime index ops mixin shift n	1.000000
string-like that is object	convert string array data encoding	0.038462
lookup of	index set value arr	0.023810
convert timeseries to specified frequency	ndframe asfreq freq method how	0.250000
new datetimeindex with passed location s deleted	indexes datetime index delete loc	0.333333
fixed frequency timedelta index with day as the	core indexes timedelta range start end periods	0.083333
reshape data (produce	core data	0.041667
convert tz-aware datetimeindex from one	indexes datetime index tz convert tz	0.166667
representation for a particular dataframe	core data frame repr	1.000000
subclass of styler with a	styler	0.022222
lines	reader get	1.000000
a left-join except that	left right on left_on	0.058824
unstack a k a pivot series with	core series unstack level	0.333333
style object	style cls	0.250000
its values attribute if it	core series	0.008000
midnight length	core indexes	0.004762
stderr in	stderr	0.076923
in file node must already exist and be	format	0.012346
not satisfy the boolean criterion specified by func	by filter func dropna	0.250000
as a dataframe the levels in the	data values index	0.066667
a masked rec	masked rec	0.250000
dictionary for the passed	ndframe construct axes dict from	0.250000
dtype s bears the risk of	subarr	0.050000
string-like array	string	0.018868
to avoid code duplication	name str_rep masker	1.000000
apply the	apply	0.078947
arithmetic operations to	op name	0.750000
bounds for parsed time string and its resolution	parsed string to bounds reso parsed	1.000000
update index attributes e g freq depending on	indexes index maybe update attributes	0.200000
a scatter plot from two dataframe columns parameters	plotting scatter plot data	0.125000
of the stata date formats to a	to stata	0.058824
or functions	rename axis	0.333333
a method to class python	method cls name func	0.076923
v should be	searchsorted v	0.033333
to	io formats	0.027778
you	value arr key	0.023810
if each value is nan	datetime index ops mixin isnan	0.500000
return the block manager from a	sparse to manager sdf columns index	0.052632
to class python 2 and python 3	cls name func	0.125000
timestamp-keyed dict	dict compat d	0.142857
underlying	index ops mixin	0.019231
ndarray of the flattened values of the underlying	index ravel order	0.037037
tree-like object that can be used to	parser build	0.014706
initializing the gradientfill stop parameter	stop	0.050000
the array interface return	core indexes multi index array dtype	0.125000
series/index	str get	1.000000
to coerce a scalar to a compat for	period index coerce scalar to	0.071429
_exception	_exception	1.000000
can be successfully converted to a datetimelike	datetimelike data	0.111111
already	value	0.005155
'usecols' parameter is a	evaluate usecols usecols names	0.333333
take optional positional	optional args	0.066667
from 1-dimensional ndarray only use	key	0.005051
check if we're running in an interactive	core in interactive	1.000000
and return a basegrouper which is an	get	0.007143
numpy dtype type-style object for a dtype object	dtype from object dtype	1.000000
additional handling as	index array wrap result	0.033333
convert argument to timedelta	core tools to timedelta arg unit box errors	0.500000
only use this	value arr key	0.023810
and	groupby func name args	1.000000
**experimental** dateoffset of one custom	custom	0.066667
date belongs to a leap	period index is leap	0.125000
from a dataframe	from	0.030303
category labels	labels	0.038462
return	resampler get	0.250000
value from 1-dimensional ndarray only	indexes categorical index get value series	0.100000
a simple	core reshape crosstab index columns	0.066667
implementation	core index ops mixin	0.062500
indexer which is	indexer indexer	0.071429
retrieves the option metadata if key is a	key	0.005051
params args to dbapi2 0	params	0.058824
using	use	0.166667
keys that are not in	keys	0.032258
attempt to construct this type from a string	dtypes interval dtype construct from string cls string	0.166667
the expected exception and	contextmanager exception	0.166667
input values as	values	0.008547
timedelta-like to	td	0.043478
the node with the	hdfstore get node	0.166667
return the underlying data which is a categorical	core indexes categorical index	0.047619
integer stride	tseries resolution get stride	0.333333
dataframe to a variable number	data frame	0.005714
first match of regular expression pat	arr pat flags	0.062500
an error is encountered in	error	0.028571
dispatch to apply	apply func	0.027027
values to be at least	shape values ndim	0.050000
indicated if we have	index have	0.142857
table reflecting the structure of a dataframe	table setup	0.083333
the process of casting data from some accepted	safe casting cls data	0.047619
setting the name this allows simpler access to	core ndframe setattr name value	0.166667
from	io fixed	0.166667
node must already exist and be	hdfstore append key value format	0.016667
must already exist and	append key value format	0.016667
string raise a typeerror	string	0.037736
alert a user about a malformed row	python parser alert malformed msg row_num	0.500000
manager for running code that expects to raise	util assert produces warning expected_warning filter_level clear	0.071429
to get lines 0) there are headers on	io python parser get index name columns	0.166667
compute a simple	crosstab index	0.066667
byte of the given	column	0.066667
values to be at least 1 d	block shape values	0.050000
of value from 1-dimensional ndarray	index get value series key	0.250000
list of row elements from the	io	0.003012
will be using numexpr	computation can use numexpr op op_str	0.333333
the name this allows simpler access to columns	name	0.025000
the	indexes	0.018605
term_type	term_type	1.000000
additional handling	period	0.016667
and return them as a block	core block	0.010870
n between self analagoust to	n	0.045455
render the built up styles to html	render	0.083333
try to connect to	util can connect	0.111111
datetimelike methods (as we may	datetimelike methods cls	0.066667
convert back to bool/int	downcast to dtype	1.000000
slice the info axis of obj with indexer	get info slice obj indexer	1.000000
set my	fixed set object	0.200000
the byte of the given	column	0.066667
the float values converted	float array formatter get	0.055556
mode s of	core series mode	0.083333
and 'kwargs' should be empty except for	func name args kwargs	0.166667
ndarray argsort	series argsort	0.083333
the op string for	op generate	0.066667
compute sum of values excluding missing values	group by ohlc	0.250000
indexes give	core indexes index	0.007042
perform the reduction type operation if we	ops mixin reduce op name axis	0.083333
check all axes except items	is indexed like other	1.000000
of two adjacent ones!	tseries next monday or tuesday dt	0.200000
convert dataframe to	core data frame to	0.037037
value from 1-dimensional ndarray only use this if	indexes datetime index get value series key	0.071429
of self coded with categories	categorical codes for groupby sort	0.071429
shift without copying data the shifted data will	ndframe slice shift	0.083333
or functions	core ndframe rename axis mapper	0.333333
sparse/dense and dtype)	ndframe	0.005025
from a 1d array	from intervals cls data name copy	0.125000
the data & release	io data col take data	0.111111
unique elements of arr1 and arr2	util equal contents arr1 arr2	0.066667
multiindex at the requested level the	indexes multi index sortlevel level	0.250000
return a tree-like object that can	io html frame	0.012987
and params args	params	0.058824
result_type which overcomes the npy_maxargs 32	core computation result type many	0.142857
read sql database table	io read sql table table_name con schema	1.000000
override this only if the process of casting	indexes numeric index assert safe casting	0.125000
the state machine here	frequency inferer	0.166667
node must already	value	0.005155
csv file (discouraged please use :func pandas read_csv	core data frame from csv	0.066667
only use this if	index set value arr	0.023810
try to parse a ndarray like	try convert data name	0.200000
//www stata com/help cgi?datetime	stata elapsed vec dates fmt	0.250000
dict of array-like or	dict cls data	0.166667
to a compat for our index	to index item	0.500000
the data & release the memory	data col take data	0.111111
convert freq with decimal stride into a higher	decimal cls value	0.333333
for header rows in multiindex parsing	header	0.066667
to the :meth pandas dataframe reset_index function see	series reset index level drop name inplace	0.142857
series	frame	0.009091
background in a	formats styler background	0.125000
over the blocks collect and create a	reduction f axis consolidate transposed	0.062500
resolution	resolution	0.750000
series extract groups from	str extract	0.035714
convert to our native types	core float block to native types	0.250000
non-na values from passed panel or object coercible	update other join overwrite filter_func	0.055556
unit if needed otherwise return from	cls unit	0.125000
sparse/dense	ndframe	0.005025
if two indices overlap add suffixes	core items overlap	0.062500
construct dataframe from dict of array-like or dicts	data frame from dict cls data	0.200000
to s-s	core diff arr	0.200000
second millisecond or microsecond	core indexes datetime index ops mixin resolution	0.125000
to table in file node must already exist	format	0.012346
compute pairwise correlation	corr method	0.500000
is index for series columns for dataframe major_axis	ndframe iteritems	0.055556
return a ndarray of	index	0.002004
generate bin edge offsets	generate	0.062500
are passed a list-like indexer return the	convert list indexer keyarr kind	0.066667
after	core indexes	0.009524
terms for instances	terms	0.034483
box function to get object from internal representation	box func	0.142857
applymap	applymap	0.625000
bind a method to class python 2 and	compat bind method cls name func	0.200000
the correct pandassql subclass	io pandas sql builder con flavor schema meta	0.055556
dict	dict	0.615385
the we have a dtype compat	name freq	0.083333
pairwise correlation of columns excluding na/null	core data frame corr	0.111111
of ftypes in this	ftype	0.076923
exist	hdfstore append key value format	0.016667
generic moving function	arg window func	0.500000
of the timedeltas	timedelta index	0.045455
backward to next	rollback dt	0.125000
setting the name this allows simpler access to	core ndframe setattr name	0.166667
csv file	core series from csv cls	0.066667
return a new datacol with the block i	for block cls i name cname	0.333333
return datetimeindex with times to	index	0.002004
index	index ops	0.066667
this function is called via the 'numpy' library	with convert convert	0.055556
dataframe the levels in	data	0.009709
block return result block	core block	0.021739
to apply we are stripping all	core group by mixin apply func	0.050000
fixed frequency	bdate range start end	0.111111
are available on	prefix normalize locale_getter	0.166667
a fixed	bdate range start end	0.111111
parse the raw data into a list	parser parse raw data	0.250000
to indexer and return them as	indexer	0.018349
excluding	core group by	0.027778
values and other to int64	other	0.013514
'numpy' library the	take with	0.055556
after a ufunc needs additional handling	period index array wrap result context	0.041667
value from 1-dimensional ndarray only	arr key value	0.038462
the op string	computation bin op generate	0.066667
number	indexes range index	0.021277
index	index item	0.100000
then fill	fill	0.100000
validate that we have	block is	0.045455
validates that we	ordered cls	0.055556
construct an intervalindex from a 1d array	from intervals cls data name	0.125000
new_x	new_x	1.000000
ndarray only use this	core	0.001326
associating each variable name a dict associating	stata reader value labels	0.142857
index	core indexes index maybe	1.000000
wrap comparison operations to convert timedelta-like	core indexes td index	0.055556
determine if each string	core str match arr pat	0.166667
series to the given	core series	0.008000
self coded with categories	categorical codes for groupby sort	0.071429
only operations to the cls evaluate the	only operations cls	0.333333
text representation of object to	ndframe to	0.043478
variables corresponding to designated axis labels	core reshape make axis dummies frame axis transform	0.166667
be used	io html	0.012987
to_match into	match to_match	1.000000
return the op string	computation bin op generate	0.066667
data to ndarray raises on	core indexes index coerce to ndarray	0.166667
list of sql statement that create a	io sqlite table create	0.066667
is called via the 'numpy' library the	validate take with convert convert args kwargs	0.055556
am	categorical block	0.100000
to coerce a code	tseries maybe coerce freq code	0.076923
their default values as specified	default values fname	0.200000
attempt to infer better dtype for object columns	ndframe convert datetime numeric timedelta coerce	0.071429
table in file node must already exist	format	0.012346
and	chain	0.031250
for general index and plural 'names' parameter for	core indexes index validate names name names deep	0.071429
make new multiindex	indexes multi	0.014493
to apply we are stripping all	by mixin apply func name	0.050000
data	indexes range index	0.021277
common post process for	plotting mplplot post plot logic common ax data	0.333333
panel objects and	panel to	0.027027
to construct this type from	dtypes interval dtype construct from	0.166667
object dtype	object values	0.500000
possibly casting	na_values try_num_bool	1.000000
data to	data index dtype	0.250000
handle na filling of take	index assert take fillable values indices allow_fill fill_value	0.250000
dispatch to apply we are stripping all	core group by mixin apply	0.050000
package is	package pkg_name min_version max_version	0.083333
display options for	display options	0.083333
day of the month	month	0.076923
of a string-like	string	0.018868
be any type that can be coerced to	indexes period index simple new cls	0.142857
encode input values as an enumerated type	factorize values sort order na_sentinel	0.111111
get the 'info axis' see indexing for	keys	0.032258
via the 'numpy' library the third	validate take with convert convert	0.055556
of arr1 and arr2 are	equal contents arr1 arr2	0.066667
float values converted into strings using	formats float array formatter get result	0.055556
the key or none if it does not	key	0.005051
datetime date objects (namely	core indexes datetime	0.011494
is defined as a	view cls	0.047619
highlight the maximum	highlight max subset color axis	0.333333
fast version of	fast	0.090909
is similar to a left-join except that we	left right on left_on	0.058824
rec array and	rec array to	0.333333
with	join	0.066667
valid for scalar op	can do op	0.250000
one custom business	custom business	0.166667
node	format	0.012346
array and create the manager	array to mgr	1.000000
take which sets nan	take nd arr	0.125000
compute variance of groups excluding missing	var ddof	0.166667
after a	wrap	0.057692
that the exception raised	assert raises contextmanager	0.166667
resolve a variable	scope resolve	0.166667
block manager from a dataframe	manager sdf columns	0.052632
return a boolean if	a b	0.083333
tree-like object that can be	html frame	0.014706
node must already	append key value format	0.016667
to iterate	build	0.013514
and return the block manager from a dataframe	to manager sdf columns	0.052632
along a particular axis with	axis join	0.142857
we take a string-like that is object	io convert string array data	0.038462
draw histogram of the	plotting hist frame data column	0.200000
panel or object coercible	update other join overwrite filter_func	0.055556
determines if two index	core indexes float64index equals other	0.200000
we might need to coerce a code	coerce freq code	0.076923
to coerce any object types to	core object block convert	0.083333
evaluate the block	eval func other raise_on_error try_cast	0.200000
get lines 0) there are headers on	python parser get index	0.166667
any axis is zero length	io generic fixed is empty array shape	0.166667
location slice or boolean mask for requested	loc key method	0.142857
instances of all the various index classes	util all index	0.142857
ndarray or	data index columns dtype	0.125000
which produces a datetimeindex	core indexes datetime	0.011494
parse html	html	0.011765
ndarray only	core indexes index set value	0.023810
the 'numpy' library the	validate take with convert convert args	0.055556
return a list of the axis indicies	panel extract axes	0.142857
checks classes are equal	assert class equal left right exact obj	1.000000
for :meth	inplace limit	0.333333
level j do not change	j	0.034483
only use this if you	index set value arr	0.023810
make a repr function return	repr	0.040000
of arr1 and arr2 are equivalent	util equal contents arr1 arr2	0.066667
we by definition have do not	io formats datetime64formatter format strings	0.090909
series/index by the given delimiter string	str	0.017544
return series containing only true/non-nan values possibly empty	remove na series	0.166667
subject string in the series extract groups	extract frame	0.047619
called after a	period	0.016667
create an	create	0.033333
via the 'numpy' library the third	with convert convert args kwargs	0.055556
the maximum	max subset color	0.166667
to create holidays following certain	calendar	0.111111
table in file node must already	io hdfstore append	0.016667
values and	from values values	0.333333
return an array	hash array vals	0.083333
called via the 'numpy' library the third	take with convert	0.055556
a slice of this container	ndframe slice slobj axis kind	0.333333
str df in	str	0.017544
apply we	by mixin apply func name	0.050000
apply we are stripping	apply func name	0.050000
fast path for getting a cross-section	block manager fast xs	0.250000
boolean if	is	0.005291
return an ndarray for our input	sanitize values arr	0.200000
additional handling	wrap result	0.022727
to a common sparseindex corresponding	homogenize series_dict	0.047619
list of row elements from the	io html frame	0.012987
a string representation for this object	core indexes frozen ndarray unicode	0.083333
s-s	diff arr	0.200000
the stata date formats	stata	0.022222
provide	datetime to_concat axis typs	1.000000
particular axis with optional set logic along	reshape concat objs axis join join_axes	0.333333
write this as a frame table	appendable series table write	0.500000
coerce any object types	core object block convert	0.083333
unit	cls unit	0.125000
object is an iterator	dtypes is iterator	1.000000
same	ndframe	0.005025
is not supported for panel objects and will	panel to	0.027027
a boolean if we need a	is	0.005291
pack an	pack o	0.250000
a simple	core	0.001326
specialized shift which	ops mixin shift n freq	0.250000
synonym for :meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace	0.333333
convert timedelta-like to	indexes td	0.055556
highlight the maximum by	highlight max subset color axis	0.333333
load msgpack pandas object from	read msgpack path_or_buf encoding iterator	0.200000
statement that create a table reflecting	io sqlite table create table setup	0.066667
of given	get	0.007143
to table in file	io	0.003012
_apply kwargs	func name window center	0.058824
must already exist and be table	io hdfstore append	0.016667
a la re split in the series/index by	core str split arr pat	0.166667
of nanoseconds (>= 0 and less than	timedelta index nanoseconds	0.066667
block if not	core block	0.010870
return the len of myself	categorical size	0.111111
date in xport format return	io sas parse	0.066667
values for	multi index get level values	0.500000
return the number of bytes in	core indexes multi index nbytes	0.052632
returns a curve with holidays	tseries abstract holiday calendar holidays start end return_name	0.066667
get test result and reset	core computation get test result	0.250000
i	core categorical block is	0.100000
a string-like that is object dtype and	convert string array data	0.038462
grouper indexers	grouper	0.058824
the float values converted into strings	float array	0.055556
return the slice dictionary for these axes	core panel extract axes for slice axes	0.333333
for panel objects and	panel to sparse	0.037037
series/index to be formatted	str	0.017544
compute	reshape crosstab	0.066667
null_color for	null null_color	0.125000
for series columns for	core	0.001326
panel	panel update	0.500000
handling as	indexes period index array	0.050000
that can be used	io html frame parser build	0.014706
read sql database table	read sql table table_name con schema	1.000000
a groupby implementation	groupby	0.085714
fast transform path for aggregations	by transform fast result obj	0.333333
box function to get object from internal representation	indexes datetime index ops mixin box func	0.142857
create	create indexer	0.500000
pkg_name	pkg_name	1.000000
an positional indexer cannot enlarge	has valid positional setitem indexer indexer	0.052632
nrows	nrows	1.000000
a block of	block	0.008197
create a new	new cls	0.333333
index or	index ops	0.033333
compat for our index	index item	0.100000
'series argmin' is called via	skipna skipna args kwargs	0.100000
g	g	1.000000
localize tz-naive	indexes period index tz localize	1.000000
support a single	computation base expr visitor visit	1.000000
class for resampling with groupby	resampler for grouping groupby	0.333333
list of tuples of the (attr formatted_value)	core indexes range index format attrs	0.142857
construct this type from	categorical dtype construct from string cls	0.166667
sequence of terms	terms	0.034483
return a tree-like object that can be	parser	0.008000
implement a datetime64 block with a tz	tzblock	0.076923
the byte of the given ordinal	column	0.066667
process of casting data from	casting cls data	0.047619
list of sql statement that create	sqlite table create	0.066667
the given offset/observance to	rule	0.050000
risk	subarr	0.050000
take boolean mask of index to be	index b	0.041667
guess the datetime format of a given datetime	tools guess datetime format dt_str dayfirst	1.000000
if the set of unique elements of arr1	equal contents arr1	0.066667
make new index	core indexes categorical index	0.047619
we require the	index simple new cls	0.090909
timegrouper	resample rule	0.166667
return values for selected item ndarray or blockmanager	block manager get item fastpath	1.000000
if	indexes index set	0.023810
1d array return an array of	array vals	0.083333
sanitize an index type	core sanitize index data index copy	0.200000
read	read	0.400000
node must already exist	hdfstore append	0.016667
a code to	code	0.076923
return the counts of ftypes in this	core ndframe get ftype counts	0.250000
try to parse a ndarray like into a	parser try convert data name	0.500000
of python datetime date objects (namely	indexes datetime	0.011494
to get lines 0) there are headers	io python parser get	0.166667
expanding count of number of	expanding count	0.200000
true if this is a valid column	is in	0.076923
type as the index (so we	core at indexer convert key key is_setter	0.090909
of whether each index value is found in	index ops mixin isin	0.083333
returns the float values converted into	float	0.024390
manage style and color based on column	plotting mplplot apply style colors colors kwds col_num	0.142857
convert to our native types format slicing	block to native types	0.250000
lookup of value	value arr key value	0.038462
csv file (discouraged please	core series from csv cls	0.066667
level	has level	0.333333
i : int slice	core data frame ixs i axis	0.200000
return appropriate class of series concat	get series result type result	0.250000
is called via the 'numpy' library the third	take with convert convert args	0.055556
am	core categorical block is	0.100000
necessary for making this object picklable	reduce	0.125000
only use this if	index set	0.022727
a ufunc needs additional handling	core indexes period index array wrap result context	0.041667
returns the float values converted into strings	formats float array formatter get result as array	0.055556
of seconds (>= 0 and less	timedelta index seconds	0.066667
that create	table create	0.043478
view limits to the	date locator autoscale	0.055556
tree-like object that can be used to	io html frame	0.012987
called via the 'numpy' library the	numpy validate take with convert convert args	0.055556
copy of	core indexes multi index copy	0.166667
new dataframe with labeling information	data frame reset	0.027778
'name' parameter for general index	indexes index validate names name	0.066667
we	core	0.001326
"reset" the styler	io formats styler	0.021277
built up styles to html	io formats styler	0.021277
return the	core indexes range	0.062500
given axis omitted where alternately any	axis how thresh subset	0.100000
self coded with categories as	categorical codes for groupby sort	0.071429
block manager from a dataframe of series	core sparse to manager sdf columns index	0.052632
exist and be table	append key value format	0.016667
data to the block we must	core non consolidatable mix in	0.090909
safe get multiple indices translate keys for	by get indices names	1.000000
file node must already exist	append	0.012987
for a particular	bytes	0.111111
the 'numpy' library the	with convert	0.055556
return indices of	core	0.001326
values along a given axis	values axis method	1.000000
a simple	reshape crosstab index columns values	0.066667
raise a typeerror if	core dtypes categorical	0.250000
indicated number of times	repeats	0.090909
returns a row cross-section from the sparsedataframe as	core sparse sparse data frame xs key	0.166667
new categorical by default	categorical sort	0.166667
evaluate the block return result block from the	core block eval	0.333333
checking function of type	computation is type	0.125000
new type (if copy=true return a new copy)	categorical block astype dtype copy errors values	1.000000
to apply we are	group by mixin apply func	0.050000
**experimental** dateoffset of one custom business month	custom business month	0.166667
use	value arr key	0.023810
returns the float values converted into strings using	formats float array formatter get result as	0.055556
b	a b	0.083333
index to be returned from apply if as_index=true	group by index with as index	1.000000
dateoffset increments between business year begin dates	byear begin	1.000000
the block manager from a dataframe of	manager sdf columns	0.052632
check that left and right index are equal	assert index equal left right exact	0.333333
backward to next	rollback	0.076923
axis indicies	core panel extract axes	0.142857
generate	nchars	0.166667
return boolean if values in the object	is	0.005291
if	is	0.005291
bdate	bdate	1.000000
cross-tabulation	columns values	0.037037
an indexer like _name in	indexer	0.009174
already exist and	format	0.012346
fixed frequency timedelta index	core indexes timedelta range start	0.083333
return a fixed frequency timedelta index	core indexes timedelta range start end periods	0.083333
get the rows of a dataframe	core data frame	0.011834
of the underlying data as a	core index ops mixin	0.062500
functions	rename	0.125000
exist and	format	0.012346
our native types	native types	0.200000
appropriate class of series concat	core dtypes get series result type result	0.250000
return	core categorical get	0.100000
compatiable fill_value and arr dtype	arr fill_value	0.090909
return value at the given quantile a	series quantile	0.083333
algos groupsort_indexer implements counting sort and it	sorter group_index ngroups	0.250000
that an positional indexer cannot enlarge its	has valid positional setitem indexer indexer	0.052632
datetime index with business day as the	core indexes bdate	0.050000
they are valid stata	stata writer	0.125000
function for	core comp method	0.333333
we if the passed type is	core dtypes interval dtype is	0.066667
to get the	core get	0.038462
of nanoseconds (>= 0 and	core indexes timedelta index nanoseconds	0.066667
categorical by	core categorical sort	0.166667
string	cls string	0.125000
view limits to the nearest	date locator autoscale	0.055556
from 1-dimensional ndarray only use this if you	index set value arr key	0.023810
an positional indexer cannot enlarge	positional setitem indexer indexer	0.052632
is called via the 'numpy' library the third	take with	0.055556
assure	assure	1.000000
block manager from	core sparse to manager sdf columns	0.052632
sql statement that create	create	0.033333
the	build	0.013514
ensure that if we don't have an index	frame ensure valid index	1.000000
dataframe to	core data frame to	0.111111
from	core indexes index	0.007042
wrap comparison operations to convert timedelta-like to timedelta64	indexes td index cmp opname nat_result	0.055556
wrap comparison operations to convert timedelta-like to timedelta64	indexes td	0.055556
to the	block2d to	0.500000
join_unit	join_unit	1.000000
make new index with passed location -s deleted	core indexes index delete loc	0.333333
that	io	0.003012
of the axis indicies	panel extract axes data	0.142857
as series or by a	by axis level	0.045455
of temporary variables in this scope	computation scope ntemps	0.250000
a ufunc needs additional handling as	context	0.023810
plural 'names' parameter	validate names name names deep	0.125000
dataframe apply for	sparse sparse data frame apply func	0.166667
1-dimensional ndarray	value arr key	0.023810
for an ordered multiindex	core indexes multi index	0.013158
filled with nat which has the same length	ops mixin nat new box	0.050000
offsets index to beginning of	beg apply index i	0.333333
datetime to	dt to	0.125000
the minimum value of the object	ops mixin min	0.111111
levels of both multiindex objects are	indexes multi index equal levels other	0.100000
values to	core block shape values	0.050000
python datetime date objects	core indexes datetime	0.011494
specialized intersection for datetimeindex	index intersection	0.142857
excluding	by	0.038462
casting data from some accepted dtype	index assert safe casting cls data	0.047619
append to : write out the indicies	write	0.017857
guarantee the shape	ndim shape	0.111111
given a tuple of slices/lists/labels/boolean indexer	multi index get	0.100000
to see if we can set a locale	can set locale	0.333333
3 columns of this	index columns	0.028571
maps[0]	chain map	0.068966
new labels on	labels labels level	0.250000
list of lists	matrix	0.076923
value from 1-dimensional ndarray	period index get value series key	0.071429
dropna if	dropna axis	0.083333
from panel holding passed axis constant parameters	panel dropna axis how inplace	0.200000
convert string 'r' to a timedelta object	coerce scalar to timedelta type r unit box	0.500000
of the month	month begin	0.111111
the float values converted	io formats float array	0.055556
left and	cls left	0.333333
indicating if the date belongs to a leap	indexes period index is leap	0.125000
and	ndframe	0.010050
a regular expression	flags	0.029412
accelerate unioning a	indexes datetime index union many others	0.040000
code	code	0.461538
new unit if needed	datetime tzdtype new cls unit	0.055556
downsample the cython defined	core datetime index resampler downsample	0.200000
v should be	frozen ndarray searchsorted v	0.033333
values for	level values	0.500000
return	indexes multi index	0.013158
a dict of the counts	counts f	0.041667
file node must	io hdfstore append	0.016667
string raise	cls string	0.125000
numeric	indexes index add numeric	0.250000
the actual filter	core computation filter bin op	0.250000
to midnight length is	core indexes datetime index	0.007634
the 'on'	core reshape as of merge	1.000000
first element	item	0.050000
in a block	make block	0.166667
intervalindex with self	indexes interval index	0.062500
tree-like object	html frame parser build	0.014706
pretty representation of	fixed unicode	0.333333
to coerce	coerce	0.051282
version to operate on as the	block try operate values	0.125000
selection used for	selection	0.125000
true if more than one block with the	core block manager is consolidated	0.333333
return	html frame	0.014706
intervalindex from a 1d array of	index from intervals cls	0.125000
python datetime date objects (namely	core indexes datetime	0.011494
an xarray object from the	to xarray	0.125000
1-dimensional	core indexes index set value arr	0.023810
dispatch to apply we are stripping all of	core group by mixin apply func	0.050000
to int64 with null values	args values	0.083333
key for	key	0.005051
its values attribute if it has one	series	0.006757
a given axis	axis	0.011364
is a string cast it to timedelta	core indexes timedelta index maybe cast	1.000000
to ndarray raises on scalar	indexes index coerce to ndarray	0.166667
or columns using input	axis copy inplace	0.055556
convert series to sparseseries	core series to sparse kind fill_value	1.000000
to the :meth pandas dataframe reset_index function	core series reset index level drop name inplace	0.142857
stata binary dta files from array-like objects	stata fname convert_dates write_index encoding	0.333333
disable other than add/sub	disabled	0.166667
class	core pandas	1.000000
scalar data converts	cls data	0.076923
each index value is found	core indexes datetime index ops mixin isin	0.083333
the underlying	indexes multi	0.014493
from 1-dimensional ndarray only use this	set value arr	0.023810
objects (namely the date	date	0.040000
datetimeindex with	indexes	0.004651
consensus	consensus	1.000000
fast lookup of value from 1-dimensional ndarray	datetime index get value	0.071429
and return an item pair from maps[0]	popitem	0.043478
into wide 3d panel format	panel	0.017857
index objects and sorts if	index	0.002004
validate on is monotonic	rolling validate monotonic	1.000000
can be	html frame parser	0.012658
of a series excluding elements from groups that	series group	0.030303
with times to midnight	indexes datetime index	0.007634
cases to get lines 0) there are headers	python parser get index	0.166667
fill_value and arr dtype	arr fill_value	0.090909
the repr should show the info view	data frame info repr	0.333333
is	core indexes	0.009524
this indexable	io index col	0.055556
take which sets nan values in	take nd arr	0.125000
checks that dict has	json parser check	0.250000
the fill value for	fill value	0.111111
of python datetime date objects (namely the	indexes datetime index	0.007634
a simple cross-tabulation	crosstab index columns values	0.066667
an indexer coerced to the	maybe coerce indexer indexer	0.125000
that	frame	0.009091
the reduction type operation	ops mixin reduce op name axis	0.083333
value to format	io formats float array formatter value	0.250000
actual dtype that	dtype cls dtype	0.125000
similar to a left-join except that we	left right on left_on	0.058824
return boolean if values in the	index ops mixin is	0.100000
an indexer coerced to the codes dtype	categorical maybe coerce indexer indexer	0.125000
as a	core indexes	0.004762
this	dtypes interval	1.000000
and return a basegrouper which is an internal	core get	0.038462
categoricalindex	categorical	0.009615
packed	msgpack packb	0.025641
time index using the index's frequency if available	core ndframe tshift periods freq axis	0.066667
a string using various backends	parser engine truediv	0.333333
additional	array wrap	0.025000
as the index (so we don't	at indexer convert key key is_setter	0.090909
encode input values as an enumerated type	core factorize values sort order	0.111111
index objects contain the same elements	indexes datetime index ops mixin	0.029412
value from 1-dimensional ndarray only use this	indexes datetime index get value series	0.071429
return true if	core block is	0.090909
the dom	doc	0.071429
overrides ndarray argsort argsorts the value	argsort	0.038462
or by a	groupby by axis level	0.045455
the store close it	io	0.003012
extension against the writer's supported extensions	excel writer check extension cls ext	0.333333
to the	dt to	0.125000
gets	core indexes period index array	0.050000
the 'info axis' see indexing for more this	core ndframe keys	0.083333
return true if this is a	is in table	0.076923
close	stata reader close	1.000000
for new-style classes assumes __getattribute__ exists	simple mock	0.250000
2d from	dropna	0.066667
get lines 0) there are headers on row	python parser get	0.166667
values along a given	values	0.008547
alert a user about a malformed	alert malformed	0.500000
header rows	pop header name	0.100000
pattern or regular expression	flags	0.029412
valid ordered parameter	core categorical validate ordered cls ordered	0.058824
from ndarray or list of	index	0.002004
return a slice	tzblock slice slicer	0.083333
new datetimeindex	indexes datetime index	0.007634
alert a user about a malformed	io python parser alert malformed	0.500000
implement a datetime64 block	tzblock	0.076923
ftypes (indication of sparse/dense and	ndframe ftypes	0.055556
the array interface return my values	multi index array dtype	0.125000
option metadata if key is a registered option	get registered option key	0.333333
options	msgpack packb	0.025641
reindex	block reindex	1.000000
from 1-dimensional ndarray only use	core	0.001326
a dataframe with the rows/columns switched	sparse sparse data frame transpose	0.333333
compute the symmetric	symmetric	0.125000
if we are a sparse	dtypes is sparse	1.000000
is	select n is	1.000000
running code that expects to raise	util assert produces	0.071429
multiindex	indexes multi index	0.092105
of the flattened values of the underlying data	ravel order	0.037037
symmetric difference of two index	core indexes index symmetric difference other result_name	0.166667
positional indexer cannot enlarge its target	has valid positional setitem indexer indexer	0.052632
we have a dtype compat	name	0.025000
decorator for creating a class with a metaclass	metaclass metaclass	0.125000
install	coerce method converter	0.200000
change string like dtypes to object for dataframe	dtypes invalidate string dtypes dtype_set	0.200000
number	index	0.004008
for series arithmetic operations	method op	0.333333
we are stripping all of the _apply kwargs	window center	0.076923
sets names	multi index set names names	0.200000
the number of total columns	table ncols	0.250000
the process of casting	safe casting	0.125000
a dataframe as an html	core data frame to html	0.250000
return a dict of the counts of the	get counts f	0.333333
of columns	core data	0.041667
we have a null slice	is null slice obj	1.000000
index to be used	core reshape concatenator	1.000000
value from 1-dimensional ndarray only use this if	categorical index get value	0.100000
datetimeindex with	core indexes	0.004762
for a particular	extension dtype repr	0.142857
the datetimelike methods (as we may have to	datetimelike methods	0.066667
boolean whether this axes needs validation for a	indexer should validate	0.166667
if we define an builtin	selection mixin is builtin	1.000000
comparison operations to convert timedelta-like to timedelta64	core indexes td index cmp	0.055556
we	validate ordered cls	0.055556
moving window of type window_type on the data	core window apply window mean how	0.166667
string-like and string-like array to convert object	maybe convert string to object values	0.142857
to an ndarray copy if	copy	0.012821
to table in file	append key value format	0.016667
new index	indexes index	0.007353
columns that should not undergo dtype conversions	noconvert columns	1.000000
where elements of v	v	0.026316
numeric add/sub	index add numeric	0.250000
the vectorized membership of x in y if	in x y	0.047619
determines if two index objects contain the same	core indexes datetime index ops mixin equals other	0.200000
load a pickle with a provided encoding	load fh encoding compat is_verbose	1.000000
block manager from a dataframe of	manager sdf columns index	0.052632
read from a url file or	io read	0.038462
of transform only applicable	series group by transform	0.250000
dateoffset subclass representing possibly n custom business days	custom business hour	1.000000
boolean if we need a	index is	0.083333
has a single dtype if dtype	core simple blockify tuples dtype	0.111111
the block return result block s from the	block where other cond align raise_on_error	0.066667
try hard to parse datetime	core tools parse time	0.125000
of columns excluding	core data	0.041667
of bytes in the underlying	range index nbytes	0.052632
arithmetic operations to avoid code duplication	op name str_rep	1.000000
expanding count of	stats expanding count	0.200000
fast lookup	set value arr	0.023810
the passed type is an actual dtype that	core dtypes extension dtype is dtype cls dtype	0.111111
gets called prior	core series array prepare	0.111111
in values	values	0.008547
repr of this	period index	0.024390
a list of normalized locales	valid locales locales normalize	0.200000
sparsifying is not supported for panel objects and	core panel	0.019231
is of a string-like	core dtypes is string	0.500000
cross-tabulation of two or more factors by default	rownames	0.125000
the dataset	series	0.006757
ndframe before and/or after some particular index value	core ndframe truncate before after	1.000000
mixed type	chained assignment possible	0.142857
can be used to iterate	io html frame parser build	0.014706
given quantile a	core series quantile	0.083333
from 1-dimensional ndarray only use	arr key	0.023810
best locator based on a	get locator	0.062500
to cast the array/value to a datetimelike	core dtypes maybe cast to datetime	0.500000
values can be any	values	0.008547
a timegrouper and	resample obj kind	0.083333
is called via the 'numpy' library	validate take with	0.055556
the index	datetime index	0.014085
of n between self analagoust to s-s	core diff arr n axis	0.500000
an old version?	io fixed validate version where	0.142857
the object is a regex pattern instance	core dtypes is re	0.500000
asobject	asobject	1.000000
before and/or after some particular index value	before after axis copy	1.000000
create index with target's values	multi index	0.020000
merge holiday calendars together the caller's class	tseries abstract holiday calendar merge other	1.000000
each index value is found in	index ops mixin isin values	0.083333
based on type and coerce into matrices	arrays to mgr arrays arr_names index	0.250000
after a ufunc	index array wrap result context	0.068966
determine if each string	core str match arr pat case	0.166667
string-like that	string array	0.038462
to determine if dtype is valid	n is valid dtype n method dtype	0.142857
block	mgr	0.083333
compute standard deviation of groups	group by std ddof	0.166667
reduction type operation if	index ops mixin reduce op name	0.083333
this function is called via the 'numpy' library	validate take with convert convert args	0.055556
gets called	series array wrap result	0.100000
after a ufunc needs additional handling	core indexes period index array wrap result context	0.041667
monotonic increasing only equal or increasing values	monotonic increasing	1.000000
return datetimeindex with	index	0.002004
return	frame	0.009091
of the values	core block shape values	0.050000
check to see if we can set a	can set	0.125000
tables into a list	io match flavor	0.166667
the reduction type operation if we	ops mixin reduce op name axis	0.083333
ordered data like time series	ordered	0.017857
only the	io	0.003012
the 'numpy' library	validate take with	0.055556
that can	io html frame parser	0.012195
return the block manager from a	manager sdf	0.052632
convert argument to timedelta	core tools to timedelta arg	0.500000
return resolution str against resolution	resolution get str cls reso	1.000000
the decimal points	io	0.003012
be used to iterate over the	html frame	0.014706
update index attributes e g	indexes index maybe update attributes attrs	0.200000
the built	io formats styler	0.021277
and string-like array to convert object	convert string to object	0.142857
<= series	series	0.006757
that create a table reflecting the	io sqlite table create table setup	0.066667
not dtype instance associated	arr_or_dtype	0.047619
series extract groups from the	core str extract frame arr	0.047619
to apply we are stripping	by mixin apply func	0.050000
1-dimensional ndarray only use this	value arr	0.023810
with custombusinessday as the	cdate range start end	0.333333
fname are valid parameters	fname	0.071429
must	hdfstore append key value format	0.016667
bytes see :class	packb	0.022727
plot	plot	0.304348
the info	data frame info	0.500000
wrapper function for series arithmetic operations	method op	0.333333
that	validate	0.027778
our input	sparse sanitize values arr	0.200000
fast lookup of	set	0.012195
fast lookup of value from 1-dimensional ndarray	period index get value series key	0.071429
dataframe to a sql database	database to sql frame	0.500000
in file node must	append key value format	0.016667
fill the values parameters	limit	0.100000
keeps track of	core computation set test mode v	0.142857
use this	core indexes index set value arr	0.023810
object dtype	dtypes	0.031746
sql query	sql sql con index_col coerce_float	0.142857
gets called	core indexes index array wrap	0.100000
interpolate values according to different	resampler interpolate method axis	0.166667
boolean if we	index is	0.083333
shift the block by periods	core block shift periods axis	1.000000
return label for first non-na/null value	data frame first valid	0.250000
run the same function multiple times in parallel	test parallel num_threads kwargs_list	1.000000
a fixed frequency	range start	0.133333
the where statement	where w	0.083333
return the numexpr condition and filter	core computation expr evaluate	0.200000
detect terminal size and	terminal size	0.166667
gets called after a	series array wrap result	0.100000
the plot attribute for	by plot	0.062500
type is an actual dtype that we	dtypes period dtype is dtype cls dtype	0.142857
return valid	op	0.045455
file node must already	key value	0.011628
if the repr should show the info view	data frame info repr	0.333333
mgrs_indexers	mgrs_indexers	1.000000
convert tz-aware datetimeindex from	core indexes datetime index tz convert tz	0.166667
for series	core arith method series	0.333333
returns true if there are any missing periods	indexes period index is full	0.500000
our native types format	native types	0.200000
compute	crosstab index columns	0.066667
delegatedclass of a series that is datetimelike	to datetimelike data	0.125000
block	core block make block	0.100000
be used to iterate	frame	0.009091
self as a	sparse series as	0.125000
fast path for getting a cross-section	manager fast xs	1.000000
an iterator over the boxed values	core indexes datetime index iter	0.250000
formats	formats	0.187500
post process	mplplot post	0.333333
from other	other	0.013514
return the underlying data which is	index	0.002004
object invoked by str df	str	0.017544
the float values converted	io formats float array formatter	0.055556
the values from this	io generic index col convert values	0.166667
detect terminal size and return tuple =	terminal size	0.166667
option metadata if key is a	key	0.005051
1-dimensional ndarray	set value	0.023256
of transform only applicable to	core series group by transform	0.250000
hdfstore	hdfstore	0.074627
called	core series array wrap result	0.100000
if we if the passed type is	dtypes period dtype is	0.125000
to class	cls	0.016949
ndarray copy if specified coerce	dtype copy	0.032258
type window_type and size window on the data	window win_type min_periods	0.100000
coordinates	coordinates	1.000000
fast lookup of value from 1-dimensional ndarray	index get value series	0.250000
with a metaclass	add metaclass metaclass	0.125000
putmask that potentially upcasts the result parameters	core dtypes maybe upcast putmask result mask other	0.200000
a string-like that is	io convert string array data encoding	0.038462
a multi-index suitable for a panel-like dataframe parameters	index time panels names	0.076923
to cast the array/value to	core dtypes maybe cast to	0.250000
iterate over the dom	frame parser build doc	0.125000
value from 1-dimensional ndarray only use this	indexes categorical index get value series key	0.100000
tz-aware type return	tz tz	0.066667
an additional character to specified side	side fillchar	1.000000
the float values converted into strings	formats float array formatter get	0.055556
type t or tuple	core computation is type t	0.083333
must already exist and be	key value format	0.016667
be used to iterate over the	io html frame parser build	0.014706
index and plural 'names' parameter for	core indexes index validate names name names deep	0.071429
series extract groups from the first match of	extract	0.030303
the underlying array which	indexes datetime index ops mixin	0.029412
a fixed frequency datetime	bdate range start	0.111111
a	timedelta	0.044444
series/index by indicated number of	str repeat arr	0.200000
curve with holidays between	tseries abstract holiday calendar holidays start end return_name	0.066667
index with day as the default	core indexes	0.004762
alert a user about	python parser alert	0.200000
the axis indicies	panel extract axes	0.142857
to handle na filling	fillable values indices allow_fill fill_value	0.125000
return of an indexer even	core indexes index get indexer for	0.250000
return the len of	core categorical size	0.111111
interval objects parameters	indexes interval	0.062500
generic moving	rolling apply arg window	0.500000
x not in	not in x	0.166667
type	core computation is type	0.125000
can safely be cast	val min_val	0.083333
flattened values of the underlying data	core indexes index ravel order	0.037037
return the data & release the	data col take data	0.111111
the first day of the month and day_of_month	semi month begin	0.166667
two indices overlap add	overlap	0.047619
background in a range according to	io formats styler background	0.125000
only use this if you	core indexes index	0.007042
versionadded : 0 19 0	core indexes index deepcopy if needed orig copy	1.000000
decorator to deprecate a keyword argument	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
the best locator	get locator	0.062500
return the td elements	td obj	0.333333
convert timedelta-like	indexes td index cmp opname	0.055556
render the built up	io formats styler render	0.142857
filtered indexer that doesn't have any	indexer tuple indexer axes	0.333333
the group	series group by	0.142857
provide an implementation for the aggregators	aggregate arg	0.071429
the data	io data col	0.333333
return the number of bytes in the underlying	core indexes multi index nbytes	0.052632
return the op string	bin op generate	0.066667
the internal implementation	index ops mixin values	0.500000
string in the series extract groups from	extract arr	0.066667
the we have	name freq	0.083333
nanoseconds (>= 0 and	indexes timedelta index nanoseconds	0.066667
read csv	series from csv cls path	0.066667
am never a	core categorical	0.013889
index if the	index	0.002004
temporarily setting a timezone	util set timezone	0.142857
only use this if	index set value arr key	0.023810
multiindex inserting new item at location	indexes multi index insert loc item	0.333333
return a dict of the	get	0.007143
coerce to a fixed size	data encoding itemsize	0.142857
removal_ver	removal_ver	1.000000
_upsample kwargs and	core group by mixin apply f	0.166667
take the codes by the	core categorical take nd	0.200000
table in file node must already	append	0.012987
additional handling as	indexes period index	0.035714
argsort argsorts	series argsort	0.083333
this function is called via the 'numpy' library	numpy validate take with	0.055556
right	right vertical	0.250000
to convert timedelta-like to timedelta64	indexes td index cmp opname nat_result	0.055556
are going to write this as a	write	0.017857
difference	difference	0.857143
table in	io	0.003012
only use this if you	key	0.005051
in a block of	block	0.008197
moving	rolling apply arg window	0.500000
index and	core indexes index validate names name	0.066667
for general index	indexes index validate names	0.066667
add in the datetimelike methods (as we	ops mixin add datetimelike methods	0.333333
color object	color cls	0.333333
returning new	inplace	0.027778
sharex	sharex	1.000000
method to work as desired	core indexes index getitem key	0.166667
lists/tuples into dataframes with proper type inference and	io text parser	0.333333
from a 1d array of interval objects parameters	indexes interval index from intervals	0.333333
with multi-level index return new dataframe	data frame reset	0.027778
of my hashed values	index hashed values	0.166667
the node with the	get node	0.166667
expanding count of number of non-nan observations	expanding count arg	0.200000
validates that we have a	categorical validate	0.055556
used	io html frame parser	0.012195
frames	frames	1.000000
a pandas only dtype object or a	pandas	0.035714
of the values to be	block shape values ndim	0.050000
the index's	core ndframe tshift periods	0.166667
in the series extract groups from the	str extract frame	0.047619
in	computation in	1.000000
insert	block manager insert loc	1.000000
each index value is found in the	datetime index ops mixin isin	0.083333
elements of arr1 and arr2 are	arr1 arr2	0.066667
a single block and	core block	0.010870
in parallel	util test parallel	0.142857
pack an object	pack o	0.250000
sparse/dense and dtype)	core	0.001326
only	indexes index	0.007353
via the 'numpy' library the third	numpy validate take with convert convert args kwargs	0.055556
rewrite	rewrite assign	0.125000
given a tuple	core indexes multi index get	0.100000
engine	engine engine	0.333333
called after	core series array wrap result	0.100000
an outside world format currently just the ndarray	block external values dtype	0.125000
stripping all of the _upsample kwargs and	core group by mixin apply f	0.166667
closest period	get period	0.333333
timezone	timezone tz	0.142857
panel to a separate excel sheet parameters	panel to excel path na_rep engine	0.111111
that	ordered cls	0.055556
list representing the totally ordered cartesian product of	get group index labels shape sort xnull	0.066667
return label for first non-na/null value	core data frame first valid index	0.250000
xport	io sas parse	0.066667
from maps[1 ]	parents	0.166667
3 columns of	columns	0.017857
series to the given number	core series	0.008000
ndarray argsort argsorts the value	series argsort	0.083333
file node must already exist and be	value format	0.016667
if the key	key	0.005051
localize tz-naive datetimeindex	localize	0.100000
boolean if values in the object are unique	core index ops mixin is unique	1.000000
already	io hdfstore	0.014493
other to the end of	other	0.013514
i am never	core categorical	0.013889
iterate over the blocks collect and create	apply f axes filter do_integrity_check	0.083333
provide concatenation of an	concat datetime to_concat axis typs	0.142857
create a new multiindex	indexes multi index	0.013158
create a table reflecting	table create table setup	0.066667
convert string-like and string-like array to convert object	dtypes maybe convert string to object	0.142857
length is unaltered	indexes datetime index normalize	0.125000
write_index	write_index	1.000000
with nat-like arg is	arg	0.018868
its	core	0.001326
create a new block manager	core block manager	0.045455
the filter	core computation filter bin op	0.250000
array of a block that has a single	core simple blockify tuples	0.125000
with nat which has the same	ops mixin nat new	0.050000
determines if two index objects contain	indexes index equals other	0.200000
categoricals are the	equal	0.050000
try hard to parse datetime string	core tools parse time string	0.250000
file node must already exist and be	hdfstore append key	0.016667
from a 1d array of interval objects parameters	core indexes interval index from intervals cls data	0.333333
database table into a dataframe	table table_name index_col coerce_float	0.333333
this only if the process of casting	indexes numeric index assert safe casting	0.125000
wrap comparison operations to convert timedelta-like to	core indexes td index cmp	0.055556
flattened values of	core indexes index ravel order	0.037037
ndarray or	data index columns	0.125000
a particular dataframe invoked by unicode df in	core series unicode	0.166667
sort multiindex at	multi index sortlevel	0.166667
masked rec array and create	core masked rec array to	0.090909
the underlying	indexes range	0.062500
arithmetic operations to avoid code duplication	op name str_rep masker	1.000000
accelerate unioning a	index union many others	0.040000
internal method to handle na filling	fillable values indices allow_fill	0.125000
a figure with a set of subplots	subplots	0.076923
additional handling	period index array wrap	0.050000
union of two multiindex objects	multi index union other	0.066667
get new sparsedataframe applying func to each columns	core sparse sparse data frame apply columns func	0.500000
flattened values	indexes index ravel order	0.037037
only makes sense when fill_value is	sparse stack sparse frame frame	0.333333
the boxed values	core indexes datetime	0.011494
to shift without copying data	core ndframe slice shift	0.083333
datetimelike	datetime value	0.500000
cached item item represents	core ndframe iget item cache item	0.090909
if the repr should show the info view	frame info repr	0.333333
a scalar to	scalar to	0.100000
csv file (discouraged please use :func pandas	csv cls path header	0.066667
time and	ensure like indices time	0.125000
returns the float	io formats float	0.055556
return datetimeindex with times to midnight	core indexes	0.004762
to coerce a	core indexes period index coerce	0.125000
query or	index_col coerce_float	0.062500
tabular environment table you can	latex buf columns col_space header	0.100000
fixed frequency intervalindex	indexes interval range start end freq periods	0.333333
or strings in each element in the series/index	core str get	0.142857
this	core reshape	0.047619
this is index	ndframe	0.005025
don't	valid	0.071429
the blocks collect and	f axis consolidate transposed	0.062500
csv file (discouraged please use	core series from csv cls path	0.066667
and index	data frame set value index	0.333333
avoid code duplication	str_rep	0.166667
to ndarray raises on	core indexes index coerce to ndarray cls	0.166667
given axis	frame dropna axis	0.142857
tree-like object that	parser	0.008000
returns the float values converted	float array	0.055556
guarantee the shape of the values	core block shape values ndim shape	0.083333
we have a	is	0.010582
might need to coerce a code to a	tseries maybe coerce freq code	0.076923
coerce a scalar to	coerce scalar to	0.071429
stderr in a	stderr	0.076923
the info	frame info	0.500000
from maps[0] raise keyerror is maps[0]	compat chain	0.034483
a delegatedclass of a series that is datetimelike	datetimelike data copy	0.125000
object for datetimelike properties of the	properties	0.046512
need to coerce a scalar to	index coerce scalar to	0.071429
sql statement that create a table reflecting the	table create table setup	0.066667
row elements from the	io html frame	0.012987
value from 1-dimensional ndarray	indexes datetime index get value	0.071429
wrap comparison operations to convert timedelta-like to timedelta64	td index	0.055556
of ndframe as opposed	core ndframe	0.005051
rank the values along a given axis	core rank values axis method na_option	1.000000
v should be	ndarray searchsorted v	0.033333
return	html	0.011765
metadata	read metadata	0.250000
utility to get the values	core get values values skipna fill_value fill_value_typ	0.250000
cast values to specified type parameters	base cast types values cast_type column	1.000000
html table	html classes notebook border	0.500000
return a boolean if we	a b	0.083333
datetimeindex with times to midnight length is	datetime	0.006711
bytes in the underlying	core indexes multi index nbytes deep	0.052632
see :class packer for options	io msgpack	0.025000
is called upon unpickling rather than the	core indexes new datetime index cls d	0.111111
of a single non-tuple indexer which could	of indexer indexer target	0.333333
a	timedelta index	0.090909
iterate	io html frame	0.012987
on multiindex	indexes multi	0.014493
return a string	core string	0.333333
return the block manager from a	core sparse to manager sdf	0.052632
on multiindex defaults to	core indexes multi index	0.013158
columns using input function or	axis mapper axis copy inplace	0.055556
index value is found in	core indexes datetime index ops mixin isin values	0.083333
and plural 'names' parameter	validate names name names deep	0.125000
file node must already exist and be	append key value	0.016667
scalar op	can do op	0.250000
determine if each	str match	0.166667
is	dtypes is	0.090909
array	core sparse sparse array array	1.000000
write a dataframe to a	data frame to	0.037037
table as a dataframe the levels	table data values index columns	0.200000
make sure a valid engine is passed	core computation check engine engine	0.333333
form the union of two	union other	0.333333
formats a	formats	0.031250
write each dataframe in panel to a	core panel to	0.027027
additional	indexes period index array wrap	0.050000
a list of the axis indicies	core panel extract axes data	0.142857
from scipy	index	0.002004
ndframe as opposed to sparse	ndframe to	0.043478
return the td elements from	parse td obj	0.083333
returns a latex representation for a particular	repr latex	0.333333
to the smallest	categories	0.062500
take optional positional and keyword arguments	optional	0.050000
of kwargs suitable	kwargs	0.022222
rule name associated with a dateoffset object	tseries get offset name offset	0.500000
representing the totally ordered cartesian product of all	group index labels shape sort xnull	0.066667
object for datetimelike properties of the series	period properties	0.052632
iter1	copy iter1	1.000000
sorts the categorical by category value returning a	values inplace ascending na_position	0.071429
particular	extension dtype repr	0.142857
of a	core	0.001326
to html	io	0.003012
nat which has the same length as	mixin nat new	0.050000
of available options grouped by prefix	core pp options	0.083333
to operate on an old version?	io table validate version where	0.250000
a string-like	convert string array	0.038462
frequency guess generated by infer_freq	indexes datetime index ops mixin inferred freq	0.250000
new block if	core block manager	0.022727
and b	a b	0.083333
to see if a url has	io is url url	0.047619
of try_coerce_args / try_operate	core time delta block try coerce result result	0.333333
from a dataframe column or	from	0.030303
styler with a custom template	formats styler from custom template	0.142857
retrieve our attributes	io generic fixed get attrs	1.000000
satisfy the boolean criterion specified by func	group by filter func	0.250000
value	key value	0.011628
applies the put method	series put	0.055556
float dtype if possible	float arr	0.083333
return a boolean indicating whether the file is	io hdfstore is	0.200000
return the	core reshape as of merge get	0.500000
engineering	eng formatter	0.125000
arr2	arr2	0.545455
to table in file node must already	io hdfstore append key value format	0.016667
base freq and stride info from string representation	base and stride freqstr	0.250000
analogous to dataframe apply for sparsedataframe	sparse data frame apply func axis broadcast reduce	0.333333
rule name associated with a dateoffset object	offset name offset	0.500000
pairs for each element in the	map indices py arr	0.090909
the (attr formatted_value)	ops mixin format attrs	0.142857
a ufunc needs additional handling as	wrap result context	0.029412
provide concatenation of an datetimelike array	core dtypes concat datetime to_concat axis typs	0.142857
only use this	arr key	0.023810
matches the expected exception	contextmanager exception matches	0.500000
if we if the passed type is	interval dtype is	0.066667
object that can be used to iterate over	io html frame parser build	0.014706
set a locale	set locale	0.333333
block manager from a dataframe of	sparse to manager sdf columns index	0.052632
return	core indexes datetime	0.011494
of this	core	0.002653
be a single block and	new align	0.166667
set of subplots already made	subplots naxes sharex sharey squeeze	0.166667
to table in	hdfstore	0.014925
each subject string in the series extract groups	core str extract frame arr	0.047619
each index value is found	datetime index ops mixin isin values	0.083333
result as block	block	0.008197
in the series extract groups	str extract	0.071429
set of query in a	index_col coerce_float	0.062500
internal non-public method*	compat other	1.000000
/ or columns using input function	axis mapper axis copy inplace	0.055556
update index attributes e g freq	datetime index maybe update attributes attrs	0.200000
the best locator based	get locator	0.062500
casting data from some accepted dtype to	safe casting cls data	0.047619
a subclass of styler with a custom	io formats styler from custom	0.200000
mixin which prevents adding new attributes	no new attributes mixin	1.000000
render the built up styles to html	styler render	0.142857
datetime index with business day	core indexes bdate	0.050000
return the number	indexes range index	0.021277
'numpy' library	with convert	0.055556
to	indexes	0.004651
only use this	core indexes index set value	0.023810
cases to get lines 0) there are headers	io python parser get	0.166667
cast it to timedelta	timedelta index maybe cast	0.333333
fast lookup of value from	index set value arr key value	0.038462
of interval objects parameters	core indexes interval	0.062500
function for series arithmetic operations	core comp method series op	0.333333
or sunday use previous friday instead	tseries previous friday dt	0.250000
weekly offset parameters	week	1.000000
lookup of value from 1-dimensional ndarray only	index set value arr key value	0.038462
values according to indexer and return	indexer	0.018349
to a separate excel sheet	to excel path na_rep engine	0.333333
with times to	indexes	0.004651
that	util	0.187500
boolean array of whether each index	datetime index	0.007042
new unit if needed otherwise return	new cls unit	0.055556
validate this column return	io index col validate col	0.200000
category value returning a	ascending na_position	0.071429
to table	append key value	0.016667
with nat-like arg	arg errors	0.026316
ftypes (indication of sparse/dense and dtype)	ftypes	0.043478
return if we are a datetime with tz	core dtypes is datetimetz	1.000000
i	block	0.008197
called prior	prepare	0.071429
intervalindex from a 1d array	index from intervals cls data name	0.125000
the node	node	0.100000
header	header name	0.100000
in file node	hdfstore append key value format	0.016667
we are a	for reshape	0.400000
produce 'pivot' table based on 3 columns of	core reshape slow pivot index columns	0.500000
that	frame parser	0.012500
create a table reflecting the structure of a	create table setup	0.066667
if the date belongs to a leap year	leap year	0.142857
create a spreadsheet-style pivot	reshape pivot	0.166667
if key is a	key	0.010101
repr function return fillvalue	repr fillvalue	0.083333
data to ndarray raises on	index coerce to ndarray cls	0.166667
(e	indexes maybe to	1.000000
valid other	indexes index validate for numeric binop other op	0.500000
total	total	1.000000
return series containing only true/non-nan values possibly	core remove na series	0.166667
is an actual dtype	dtypes extension dtype is dtype cls dtype	0.111111
return the unicode normal form	core string methods normalize form	0.066667
for writing stata	to stata	0.058824
to be unordered	as unordered inplace	0.500000
passed type is an actual dtype that	core dtypes period dtype is dtype cls dtype	0.142857
of	indexes range	0.062500
an internal non-public method*	index create from codes codes categories ordered name	0.333333
of value from 1-dimensional	index set value arr key value	0.038462
up	io formats	0.027778
of casting	core indexes numeric index assert safe casting	0.125000
return a slice	slice slicer	0.087719
handling as	array	0.013889
holiday calendars together the caller's class	abstract holiday calendar	0.500000
array of datetime time the	core indexes datetime	0.011494
out the binary feather-format	data frame to feather fname	0.083333
the same	core ndframe	0.005051
that we have	ordered cls	0.055556
keeps track of whether numexpr	core computation set test mode v	0.142857
1-dimensional ndarray	core indexes index set	0.023810
dispatch to apply we	apply func name	0.050000
to ndarray raises on	coerce to ndarray cls	0.166667
python expression as a	eval expr	0.083333
frac	frac	1.000000
read csv file	frame from csv cls path header sep	0.066667
conform a set of sparseseries (with nan	core sparse	0.041667
memory usage of	ops mixin memory usage deep	0.200000
return result as series or by a	by axis	0.045455
same as index	core indexes index	0.007042
dispatch to apply	group by mixin dispatch name	1.000000
node must already	io	0.003012
mode s of the dataset	core series mode	0.083333
determine if each string	match arr	0.166667
if we	core	0.001326
some	table	0.010870
compute pairwise correlation	corr method min_periods	0.500000
packed	packed object_hook list_hook use_list	0.200000
render the	render	0.083333
object o and return	packb o	0.055556
a multi-index suitable for a panel-like dataframe	time panels names	0.076923
comparison operations to convert timedelta-like to	indexes td index cmp opname nat_result	0.055556
for general index and plural 'names'	indexes index validate names name names deep	0.071429
i	core categorical	0.013889
expression as	computation eval expr	0.083333
dataframe to a	data frame	0.005714
return a string representation for this object	unicode	0.058824
provide concatenation of an datetimelike	concat datetime to_concat axis typs	0.142857
specialized cython take which sets nan	take nd arr indexer axis out	0.166667
only use this if	core indexes	0.004762
dataframe to	data frame to	0.111111
make a repr function	repr	0.040000
gets called	wrap	0.057692
a resample of	timedelta	0.022222
index with target's values (move/add/delete values	multi index	0.020000
_constructor_sliced-like objects to either an intersection of indices	panel homogenize dict frames intersect dtype	0.142857
table reflecting the	table setup	0.083333
sanitize input data to an	sanitize array data index dtype	0.250000
to capture stderr	util capture stderr f	0.055556
numeric_only	numeric_only	1.000000
our native types format slicing if	native types slicer na_rep date_format quoting	0.200000
and a replacement key defined will	translate key key	0.200000
slice of	block slice slicer	0.083333
to its values	core series	0.008000
fast lookup of value from 1-dimensional ndarray only	core indexes period index get value series	0.071429
checking function of type	core computation is type	0.125000
the	io table	0.062500
index objects contain	range index	0.021739
satisfy the boolean criterion specified by func	by filter func dropna	0.250000
dispatch to apply	mixin apply	0.050000
in the series extract groups from the first	extract frame arr	0.047619
minute second millisecond or microsecond	datetime index ops mixin resolution	0.125000
non	non	1.000000
for a particular object	dtypes extension dtype repr	0.142857
the float values converted into strings using	float array formatter get	0.055556
ndarray repeat	indexes datetime index ops mixin repeat repeats	0.333333
or boolean mask for requested label	method	0.033333
is *not* the same	is other	0.055556
reduction type operation if	core index ops mixin reduce op	0.083333
a version	core block	0.010870
apply we are stripping all	apply func	0.027027
is not supported for panel objects	panel	0.017857
in file node must already exist	hdfstore append	0.016667
we have a	block is	0.045455
particular time of	time time asof	0.142857
a multirow	multirow	0.111111
in the series/index	core str get	0.142857
a cross sectional for a given	block manager fast xs	0.250000
we require	index simple new cls	0.090909
object coercible	other join overwrite filter_func	0.076923
via the 'numpy' library the	with convert	0.055556
needs additional handling as	wrap	0.019231
scatter	scatter	0.857143
indices overlap add suffixes to	items overlap	0.062500
the data types and ranges supported by stata	io cast to stata types data	0.333333
labels from observed group ids parameters	decons obs group ids comp_ids obs_ids shape labels	0.250000
not supported for panel objects and will	panel	0.017857
to iterate over	build	0.013514
compute	core	0.001326
is list-like	is list like obj	1.000000
the values from	io generic index col convert values	0.166667
elements of v should be inserted in	v	0.026316
i : int slice or sequence of	data frame ixs i	0.200000
gets called after	indexes index array wrap result	0.100000
need to coerce a code to a	coerce freq code	0.076923
an object with matching indices to	ndframe reindex like other method copy limit	0.111111
0 to the length of that group	group by	0.016129
in the datetimelike methods (as	datetimelike methods cls	0.066667
cast values to	cast types values	0.500000
must already exist and be	append key	0.016667
apply we are stripping all of	mixin apply func	0.050000
index value is found in	indexes datetime index ops mixin isin	0.083333
deprecate a keyword argument of a	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
csv	series from csv cls path	0.066667
in the series/index starts with passed	core str startswith arr	0.250000
range argument	range key is_setter	0.500000
result as series or by a series	groupby by axis	0.045455
multi-index suitable for a panel-like dataframe parameters	index time panels names	0.076923
of type	core computation is type	0.125000
variable name a dict associating	stata reader value labels	0.142857
a method to class python	method cls	0.076923
description	description complib complevel fletcher32	0.500000
and return the block manager from a	manager sdf columns	0.052632
if the process of casting	casting	0.076923
ndarray only use this	value arr	0.023810
return index	datetime index ops mixin	0.029412
the installed version	compat major_ver	0.083333
the iteration interface on	iterator	0.100000
csv file (discouraged please use :func pandas read_csv	data frame from csv cls path header sep	0.066667
coerces data to ndarray raises on	index coerce to ndarray cls	0.166667
a left and	cls left	0.333333
return an ndarray of the flattened values	index ravel order	0.037037
cumulative max	cummax axis	0.500000
milli	milli	1.000000
to work as desired	index getitem key	0.166667
symmetric difference of two index objects	core indexes index symmetric difference other	0.166667
return an xarray object from the pandas object	core ndframe to xarray	0.125000
appendable	appendable	1.000000
having a singular 'name' parameter for general index	core indexes index validate names name	0.066667
series or	axis level	0.125000
given a 1d array return an array	util hash array vals	0.083333
color	gradient s cmap low high	1.000000
a date_format return	date_format	0.058824
of other	other	0.013514
base class for delegating methods/properties	pandas delegate	0.166667
iter1 iter2 iterables that	copy iter1 iter2	0.166667
reads lines from xport file	io sas xport reader get chunk size	1.000000
label if label is not contained	value label	0.066667
the underlying data	range index	0.021739
datetimeindex but for	datetime	0.006711
fast lookup of value from 1-dimensional ndarray only	indexes categorical index get value series	0.100000
is a term or a	scope_level	0.083333
common sparseindex corresponding to the	homogenize series_dict	0.047619
data	indexes range	0.062500
read from the	io read	0.038462
for header	pop header	0.100000
be used	html frame parser build	0.014706
the symmetric difference of	symmetric difference	0.166667
a keyword argument of a function parameters	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
block manager from	manager sdf columns	0.052632
a panel-like dataframe	index time panels names	0.076923
convert datetime-like to	indexes dt index cmp opname nat_result	0.066667
'kwargs' should be empty except for allowed	kwargs allowed	1.000000
with a set of subplots	subplots	0.076923
slice of	core categorical slice slicer	0.111111
decorator to capture	capture	0.125000
columns for dataframe major_axis for	core ndframe iteritems	0.055556
key	key	0.060606
an array of	util hash array vals	0.083333
a list-like indexer	indexes interval index convert list indexer keyarr kind	0.066667
attempt to construct this type from a	categorical dtype construct from string cls	0.166667
html into dataframes	html frame parser	0.012658
node must	hdfstore append key value format	0.016667
an object and return the	io	0.003012
into a	frame parser	0.012500
additional handling as	core indexes period index array	0.050000
exist and be	key value	0.011628
a tree-like	frame parser	0.012500
via the 'numpy' library the third	validate take with convert convert args	0.055556
fname are valid	kwargs fname	0.250000
handling as	indexes period	0.034483
the datetimelike methods (as we may	datetimelike methods	0.066667
styler with	styler from	0.076923
of a series	series	0.006757
by the n	n	0.090909
infer	parser base infer	1.000000
given delimiter string starting at the	rsplit arr	0.037037
float values	float array formatter get	0.055556
a string	core string	0.333333
returns the float values converted into strings	float array formatter	0.055556
sparsearray from data stored in the sparselist	sparse sparse list to array	1.000000
the installed version of openpyxl is supported	is compat major_ver	0.111111
via the 'numpy' library the third	validate take with convert convert args kwargs	0.055556
in file node must already exist and be	hdfstore append key value format	0.016667
each index value is found	indexes datetime index ops mixin isin	0.083333
interpolate values according to different methods	core resampler interpolate method axis limit	0.166667
time strings to time objects	core tools to time	0.125000
that can be used	html	0.011765
a dataframe to a	data frame to	0.111111
that group	core group by	0.027778
bytes in the underlying	range index nbytes	0.052632
for datetimelike properties	properties	0.046512
tabular environment table	latex buf columns col_space header	0.100000
gets	series array	0.090909
table as a dataframe the	table data values index	0.200000
categorical to be unordered	categorical as unordered inplace	1.000000
be	hdfstore append	0.016667
slice of panel along major axis parameters	core panel major xs key	0.166667
to coerce	indexes period index coerce	0.125000
deprecated use :meth series sort_index	series sortlevel level ascending sort_remaining	1.000000
be applied on each value	formats float array formatter value formatter float_format threshold	0.100000
number of bytes in the underlying data	range index nbytes	0.052632
update index attributes e	core indexes index maybe update attributes attrs	0.200000
create and return the op string for this	core computation bin op generate	0.066667
a list of sql statement that create a	create	0.033333
custom ast walker parsers of other	base expr visitor	0.200000
return a tree-like object that	io html frame parser build	0.014706
return true if the levels of both multiindex	multi index equal levels	0.200000
values at particular time of	core ndframe at time time asof	0.066667
the block manager from a dataframe	sparse to manager sdf	0.052632
compare numeric	core dtypes is numeric v	0.333333
the number of bytes in	index nbytes deep	0.052632
dispatch to apply we are stripping	mixin apply func	0.050000
return a new manager with the	block manager	0.021277
return the number of	range index	0.021739
and a replacement key defined will return the	core translate key key	0.333333
convert structured or record ndarray to dataframe parameters	core data frame from records cls data	1.000000
function is called via the 'numpy' library the	numpy validate take with convert convert args kwargs	0.055556
in xport	sas parse	0.066667
a line from buffer filling buffer if required	io python parser buffered line	0.500000
put method to its values attribute	core series put	0.055556
file	io hdfstore append key value	0.016667
a groupby implementation	resampler groupby	0.166667
infer types of values possibly casting	base infer types values na_values try_num_bool	1.000000
manager for running code that expects	util assert produces	0.071429
csv file (discouraged	series from csv cls	0.066667
comparison operations to convert datetime-like	core indexes dt index cmp opname nat_result	0.066667
float values converted	formats float array formatter get result	0.055556
a block if we are not	core block	0.010870
styler	styler set	0.333333
lookup of value from 1-dimensional ndarray only	indexes categorical index get value series	0.100000
of value from 1-dimensional ndarray only	categorical index get value	0.100000
lookup of value from 1-dimensional ndarray only	categorical index get value	0.100000
same	other	0.013514
return a fixed	bdate range start end periods	0.111111
a new unit	core dtypes datetime tzdtype new cls unit	0.055556
we require the	simple new cls	0.250000
passed panel or object coercible	update other join overwrite filter_func	0.055556
regular expression in	flags	0.029412
malformed	malformed	0.400000
utility to get the values view mask	core get values values skipna fill_value fill_value_typ	0.250000
convert to our native types format slicing	categorical block to native types slicer	0.250000
normalized locales that do not throw an exception	util valid locales locales	0.050000
with the block	data col create for block cls	0.333333
block_items	block_items	1.000000
a tree-like object	frame parser build	0.014706
read csv file (discouraged please use :func	csv cls path header	0.066667
i am never a	core categorical	0.013889
in	format	0.012346
optional positional	optional args	0.066667
value using the	value	0.005155
temporary variables in this scope	computation scope ntemps	0.250000
to create the grouper indexers	grouper obj key	0.142857
multiindex defaults	indexes multi	0.014493
key is a	key	0.005051
midnight length is unaltered	indexes datetime index normalize	0.125000
with times to midnight length is unaltered	datetime index normalize	0.125000
return the bool of	bool	0.043478
indicies	core panel extract axes data axes	0.142857
a new unit	core dtypes datetime tzdtype new cls unit tz	0.055556
the number of bytes in	nbytes	0.046512
the best locator based on a distance	locator dmin dmax	0.250000
of _constructor_sliced-like objects to either an intersection	core panel homogenize dict frames intersect dtype	0.066667
that the exception raised	util assert raises contextmanager	0.200000
key and are not a	key	0.005051
convert timeseries to specified frequency	ndframe asfreq freq method	0.250000
if a url has a valid	is url url	0.047619
to parse	convert data name	0.200000
reshape long-format data to wide generalized inverse of	reshape lreshape data	0.500000
for header rows in	header	0.066667
apply the	semi month offset apply	0.500000
the values & release the memory	col take data	0.055556
take the codes	take nd	0.047619
to dataframe apply	sparse data frame apply func	0.166667
from the first match of regular expression pat	pat flags	0.052632
a compat for our index type	index	0.002004
have good categories	cls categories fastpath	0.250000
the view limits to	date locator autoscale	0.055556
already exist and be table	hdfstore append key value	0.016667
to class	cls name func	0.125000
our input	core sparse sanitize values arr	0.200000
sparse array	sparse array	0.285714
bind a method	compat bind method	1.000000
from 1-dimensional ndarray only use	indexes	0.004651
property synonym	core	0.001326
table	hdfstore append	0.033333
to indexer and	nd indexer axis	0.043478
of arr1 and arr2	contents arr1 arr2	0.066667
must already exist and be	hdfstore append	0.016667
matches a regular expression	pat case flags	0.166667
we are index sliceable then return my slicer	index sliceable	0.083333
of sparse/dense and dtype) in	core	0.001326
deprecated option and if so prints a warning	warn if deprecated	0.166667
return datetimeindex with	indexes datetime index	0.007634
only makes sense when fill_value is	core sparse stack sparse frame frame	0.333333
returns a curve with holidays between start_date and	calendar holidays start end return_name	0.066667
read csv file	core series from csv	0.066667
index for series columns for dataframe and	ndframe	0.005025
the table schema resets the	io	0.003012
dt_str	dt_str	1.000000
starting at the end of	rsplit arr pat	0.037037
bind a method to	bind method cls name func	0.200000
pack object o and return packed	packb o	0.055556
the view limits to the nearest	time series date locator autoscale	0.055556
create a new unit if needed otherwise	new cls unit tz	0.055556
pick the best locator based on	auto date locator get locator	0.062500
a list-like indexer return	indexes interval index convert list indexer keyarr kind	0.066667
with decimal	decimal	0.058824
data structure for accumulating data	list	0.034483
node must	append key value format	0.016667
compute the vectorized membership of x in	computation in x	0.166667
the minimum value of the object	index ops mixin min	0.125000
try to connect to the	connect	0.071429
integer or float that can safely be cast	name val min_val	0.083333
two datetimeindexes	datetime index sub datelike dti other	0.333333
convert to our native types format	datetime block to native types slicer na_rep	0.250000
scatter plot from two dataframe columns	plotting scatter plot data x	0.125000
must be sparseseries	sparse maybe to	0.333333
put method	put	0.043478
if we do need a multi reindex	core ndframe needs reindex multi axes	0.333333
decorator to capture stderr	capture stderr f	0.055556
to deal with nat-like arg is a passed	arg errors	0.026316
incoming data	data subarr	0.333333
a dataframe sorted by the n smallest values	core data frame nsmallest n	0.166667
method to class python 2 and	method cls	0.076923
return copy of the list	list copy	0.500000
an positional indexer cannot enlarge its target	ndframe indexer has valid positional setitem indexer indexer	0.052632
fill value for the nan/nat from	fill value val	0.142857
an indexer coerced to	categorical maybe coerce indexer indexer	0.125000
blknos	blknos	0.833333
localize tz-naive	index tz localize	1.000000
ndarray	value arr	0.023810
wrapper function for series	core bool method series	0.333333
number of	core indexes multi index	0.013158
any values	values	0.008547
the array interface return my	core indexes multi index array dtype	0.125000
from passed panel or object coercible to	join overwrite filter_func	0.076923
multiindex has only	multi	0.018182
datetime index with business day as	core indexes bdate	0.050000
return	core indexes index get	1.000000
get a cross sectional for a given	block manager fast xs	0.250000
where : array of timestamps	indexes period index asof locs where	1.000000
format of a	format dt_str dayfirst	0.250000
by the indexer fill with the	nd indexer allow_fill	0.050000
multiindex from the	core indexes multi index	0.013158
maximum by shading	max subset color	0.166667
to table in file node must	io hdfstore append	0.016667
construction	core construction	1.000000
provides a resample	period index	0.024390
pandasobject	core computation any pandas objects	0.250000
tree-like object that can	html frame parser	0.012658
csv file (discouraged please	from csv	0.066667
need to coerce a scalar to	indexes period index coerce scalar to	0.071429
a boolean if we need	core indexes index is	0.083333
cut where we	cut	0.100000
series containing only true/non-nan values possibly empty	remove na series	0.166667
data	data index dtype	0.250000
we always want	index shallow copy with infer values	0.200000
the columns under the index	index	0.002004
a subclass of styler with	io formats styler	0.021277
a nice str repr of our	core window unicode	0.071429
(header new_data) for header rows in	pop header name row index_col	0.200000
return series corresponding to requested indices	core series take indices axis convert is_copy	0.500000
the :meth pandas dataframe reset_index function see	series reset index level drop name inplace	0.142857
subset rows	filter items like regex	1.000000
true if the key is in	core ndframe contains key	0.333333
from some accepted dtype to the internal dtype	cls	0.016949
parse specified sheet s	io excel file parse	0.125000
with its hexadecimal representation used to tag	computation replacer x	0.125000
return the node with the	io hdfstore get node	0.166667
an index that we can create	index value	0.142857
info axis of	get info	0.250000
array of python datetime date	indexes datetime index	0.007634
to get	get index name	0.200000
of v should be inserted in a	core indexes frozen ndarray searchsorted v	0.033333
index parameters	data frame set value index	0.166667
header rows in	pop header name	0.100000
array interface	core categorical array	1.000000
already exist	hdfstore append key value format	0.016667
in the datetimelike methods (as we	datetimelike methods	0.066667
values and index	core indexes datetime index	0.007634
of	core	0.042440
if we are a	is	0.010582
object is a file-like object	dtypes is file like	1.000000
size of the dtype	itemsize	0.027027
wrap comparison operations to convert timedelta-like to timedelta64	indexes td index cmp	0.055556
index parameters	sparse sparse data frame set value index	0.250000
take boolean mask of index to be returned	index b	0.041667
after	period index array wrap result	0.050000
of columns	columns keep	0.333333
input into a pandas only dtype	pandas	0.035714
the time part of the timestamps	index time	0.111111
boolean if	mixin is	0.083333
input	axis mapper axis copy	0.333333
getitem defers to the underlying array which	indexes datetime index ops mixin getitem	0.250000
dataframe to a latex tabular/longtable environment output	formats latex formatter write result buf	0.200000
return a slice of	core categorical slice slicer	0.111111
expression	computation eval expr	0.083333
align a set of terms	align terms	1.000000
work as desired	indexes index getitem key	0.166667
convert to object if we are	indexes multi index to safe for reshape	0.333333
index with day calendar as the default	indexes period	0.034483
as a sparse	sparse sparse series as sparse	0.250000
compute	core reshape crosstab index	0.066667
categoricals are the same dtype	core categorical is dtype equal other	0.250000
and return the block manager from a	sparse to manager sdf columns index	0.052632
'numpy' library the third	validate take with	0.055556
a uint64 ndarray of my hashed values	indexes multi index hashed values	0.166667
this object	index	0.002004
with the block	block	0.008197
csv	data frame from csv cls path	0.066667
translate	translate	1.000000
cached item item represents a	item cache item	0.125000
tree-like object	io html	0.012987
gets	core	0.006631
manager with the blocks	manager combine blocks	0.250000
subset rows or columns of dataframe according to	core ndframe filter items like regex axis	0.166667
interpolate machinery	block interpolate with fill method axis	0.200000
return the padded hexadecimal id	computation raw hex id	0.166667
if the object	core dtypes is	0.021277
if 'series argmin' is called via	skipna skipna args kwargs	0.100000
from panel holding passed axis constant parameters	core panel dropna axis how inplace	0.200000
decorator to add	computation add	0.333333
after	series array	0.090909
given an interval or intervalindex	get interval	0.125000
of value from 1-dimensional ndarray only use	indexes period index get value series key	0.071429
of axis	core ndframe set axis axis	1.000000
to shift without copying	shift periods	0.333333
i am	block	0.008197
a style_dict to an xlsxwriter format object	io xlsx writer convert to style style_dict num_format_str	0.166667
series/index by	str repeat arr	0.200000
value is found in the	ops mixin isin values	0.333333
to the	cls	0.016949
comparison operations to convert timedelta-like to	td index cmp opname nat_result	0.055556
a list of normalized locales that	util valid locales locales	0.050000
has a float dtype	float arr	0.083333
index or ndarray	index ops	0.033333
handle 2-d slices equiv	panel apply 2d func	0.200000
draw histogram of	hist frame	0.200000
time and panels are conformable	core ensure like indices time panels	0.250000
dataframe with labeling information in the	core data frame	0.005917
shift without copying data	ndframe slice shift periods axis	0.083333
is an internal	indexes index to	0.500000
only use this	value	0.005155
up styles	styler	0.022222
covariance	cov other	1.000000
if it has one	core	0.001326
nice str repr of our	window unicode	0.071429
but that works through views note this is	is	0.005291
concatenation of an datetimelike array of arrays each	concat	0.058824
swap levels i and j in	frame swaplevel i j	0.333333
datetimeindex with times	indexes datetime	0.011494
gets called after	core indexes period index array wrap result	0.050000
node must already exist	key value	0.011628
curve with holidays	tseries abstract holiday calendar holidays start end return_name	0.066667
parameter for general index and	core indexes index validate names name	0.066667
return new dataframe with labeling information in the	core data frame	0.005917
styler	io formats styler	0.042553
multiindex and the index	index	0.002004
totally ordered cartesian product of	group index labels shape sort xnull	0.066667
shift without copying data the shifted	core ndframe slice shift periods	0.083333
convert structured or record ndarray to dataframe parameters	core data frame from records cls data index	1.000000
apply a function to	func	0.023810
whether the	for	0.071429
read csv file (discouraged please	from csv	0.066667
comparable timezone both for pytz /	datetime index timezone	0.200000
drop from frame raise keyerror if not	core ndframe pop	0.200000
la re split in the series/index	core str split arr pat n	0.166667
the 'numpy' library	compat numpy validate take with convert convert args	0.055556
and index parameters	sparse data frame set value index	0.250000
axis indicies	panel extract axes data	0.142857
try to parse a ndarray like into	json parser try convert	0.500000
cartesian product	get group index labels shape sort	0.200000
of terms for instances of pandasobject	any pandas objects terms	0.250000
numpy array of datetime time	datetime	0.006711
read csv file (discouraged please use :func pandas	series from csv cls	0.066667
bytes in the underlying	core indexes multi index nbytes	0.052632
an array repr of this	indexes period index	0.035714
called after a	array wrap result	0.075000
and n/a values	and	0.066667
a column by	data	0.009709
accessor object for	timedelta	0.022222
alert a user about a malformed row	python parser alert malformed	0.500000
the table from the axes &	io table	0.062500
index return new dataframe with	core data frame reset	0.027778
nrows ncols	make custom dataframe nrows ncols	0.250000
csv file (discouraged please use :func pandas	csv cls path header sep	0.066667
simple	crosstab index columns values	0.066667
a dataframe with the rows/columns switched	core sparse sparse data frame transpose	0.333333
bool of a	bool	0.043478
return	frame parser	0.012500
from 1-dimensional ndarray only use this if you	core indexes index set	0.023810
for this	io index col	0.055556
sif http //www stata	stata	0.022222
whether the installed version of openpyxl	compat major_ver	0.083333
block for the diff of the	block diff n axis	0.333333
float values converted into strings	float array	0.055556
of tuples	tuples cls data closed name	0.250000
return the number of bytes in the	indexes multi index nbytes	0.052632
to get lines 0) there are headers on	python parser get index	0.166667
of non-na/null observations	count	0.055556
necessary	sparse sparse	0.034483
of	reshape crosstab index columns values	0.066667
determine	match arr pat case	0.166667
stride	resolution get stride	0.333333
that an positional indexer cannot enlarge	indexer has valid positional setitem indexer indexer	0.052632
stderr in a	stderr f	0.125000
try to parse a ndarray like into	parser try convert data name	0.500000
the original	core ndframe	0.005051
dataframe with labeling information in	data frame	0.005714
iterate over the blocks collect and create a	axis consolidate transposed	0.062500
to table in	io hdfstore append key value	0.016667
bind	compat bind	0.500000
the series extract groups from the first match	core str extract frame	0.047619
return a new index of the values set	core indexes index putmask	0.111111
sunday use day thereafter monday instead	tseries sunday to monday dt	0.333333
statement is	w	0.090909
list/array of tuples	tuples cls data	0.250000
an integer	integer name	0.333333
pack object o and return packed	o	0.043478
get the 'info axis' see indexing for more	ndframe keys	0.083333
read csv file (discouraged please use :func	data frame from csv cls path	0.066667
a float key	key	0.005051
op string	op generate	0.066667
underlying data	multi index	0.020000
a scipy sparse coo_matrix to a	sparse coo to sparse series a	0.166667
get	indexes categorical index get	0.500000
gets called	array wrap	0.075000
return the number of	indexes range index	0.021277
the reduction type operation if we can	index ops mixin reduce op name	0.083333
produces a datetimeindex	indexes datetime	0.011494
return	formats get	0.090909
class for parsers that parse html	html	0.011765
the number of temporary variables in this scope	computation scope ntemps	0.250000
to write this as a frame table	multi series table write	0.333333
kwargs suitable for initializing or updating-on-copy	kwargs	0.022222
to handle na filling of take	indexes index assert take fillable values indices allow_fill	0.250000
object that can be	parser build	0.014706
maps[0] raise keyerror is	compat chain map	0.032258
array of whether each index value	datetime index ops	0.034483
fixed frequency timedelta index	indexes timedelta range start end	0.083333
be inserted in a to maintain order	side sorter	0.166667
value from 1-dimensional ndarray only use	indexes period index get value series	0.071429
reindex using pre-computed indexer	reindex axis indexer method axis fill_value	0.500000
the 'numpy' library the third	numpy validate take with convert convert	0.055556
assignment node like	assign node	0.500000
called after	wrap	0.057692
custom ast walker parsers	base expr visitor	0.200000
to indexer and return them	nd indexer	0.030303
swap level i	indexes multi index swaplevel i	0.333333
true if	core block is	0.090909
time strings to time objects	tools to time	0.125000
and setup my atom from the block	io data col set atom block block_items	0.200000
*this is an	index is dtype	0.500000
tree-like object that can be used	parser	0.008000
ndarray	indexes	0.004651
index for series columns	core	0.001326
exit context	io stata reader exit exc_type exc_value traceback	0.500000
necessary for	sparse sparse	0.034483
shape of the values to be	shape values ndim shape	0.083333
alert a user about	parser alert	0.200000
data	core indexes multi	0.014493
whitespace including newlines from each	arr to_strip side	0.333333
an op	core computation op	0.166667
create/cache	io table	0.062500
checks that dict	parser check	0.200000
timeseries to specified frequency	core ndframe asfreq freq method how	0.250000
take	sparse array take	1.000000
1-dimensional	core indexes	0.004762
value	formats float array formatter value	0.250000
csv file (discouraged	csv cls path header	0.066667
memory usage of my values parameters	index memory usage deep	0.200000
read csv file (discouraged please use :func pandas	csv cls path sep parse_dates	0.066667
at the requested level the result will respect	index sortlevel level ascending sort_remaining	0.200000
in file	key value format	0.016667
values in the object are unique	unique	0.090909
reshape long-format data to wide generalized inverse	core reshape lreshape data	0.500000
header rows in multiindex	io pop header	0.100000
nat-like arg is a passed in as an	arg errors	0.026316
we are going to write this	write obj data_columns	0.111111
object in hdfstore parameters	io hdfstore put key value format append	0.333333
the datetimelike methods (as we may	datetimelike methods cls	0.066667
name or names of the axis returning self	axis name name axis	1.000000
a resample of a	datetime	0.006711
resample of a	index resampler	0.065217
that can be used to iterate	frame	0.009091
return the actual ne	computation condition bin op	0.333333
if ndframe	core ndframe	0.005051
provide explict type promotion and coercion	dtypes maybe upcast values fill_value dtype copy	0.166667
options	core pp options	0.083333
a data	io table validate data	0.500000
parse specified sheet s	excel file parse	0.125000
after a ufunc needs additional handling as	wrap result context	0.029412
a resample of a	index resampler	0.065217
checks classes are equal	class equal left right exact obj	1.000000
an enumerated type or categorical variable parameters	factorize	0.100000
save workbook to	excel writer save	0.333333
of nanoseconds (>= 0 and	timedelta index nanoseconds	0.066667
the full scope for use with passing to	scope full scope	0.055556
values as an enumerated type or categorical variable	factorize values sort order na_sentinel	0.111111
indices where elements of v should	v	0.026316
multiindex	multi index	0.040000
value from 1-dimensional ndarray only use this	indexes categorical index get value	0.100000
is valid for	n is valid dtype	0.500000
of the flattened values of the underlying data	index ravel order	0.037037
string in the series/index ends with passed pattern	core str endswith arr	0.333333
round a dataframe to a variable number	data frame round	0.166667
a to maintain order	side sorter	0.166667
has one	series	0.006757
gets called after	indexes index	0.007353
with the transformed values	core resampler transform arg	0.200000
suitable for a panel-like dataframe parameters	index time panels names	0.076923
for general index and	indexes index validate names	0.066667
in 3 5 the starargs attribute was changed	base expr visitor visit call 35 node side	0.066667
check that left and right index are equal	assert index equal left right	0.333333
to	key value	0.011628
most capable encoding supported by the console	io formats detect console encoding	0.500000
test result and	test result	0.250000
that can be used	frame	0.009091
categorical	categorical arr	0.125000
create a new multiindex from the	core indexes multi	0.014493
**experimental** dateoffset of one custom business	custom business	0.166667
specified categories	core categorical remove categories	0.500000
validate that an positional indexer cannot enlarge its	positional setitem indexer indexer	0.052632
built up styles to html	formats	0.031250
apply we are	core group by mixin apply func name	0.050000
ascending	ascending	0.833333
series extract groups from the first	str extract frame arr	0.047619
we might need to coerce	coerce	0.025641
get the	core ndframe	0.005051
put method to	core series put	0.055556
generic pytables	generic	0.142857
tree-like object that can be used to iterate	io html	0.012987
object for datetimelike properties of the	timedelta properties	0.052632
the maximum value of	core categorical max numeric_only	0.250000
the series extract groups from the first match	extract arr	0.066667
returns a multi-index suitable for a panel-like dataframe	time panels names	0.076923
return result as series or by a	groupby by axis level	0.045455
provides a	timedelta index	0.045455
of type t or tuple	core computation is type t	0.083333
the symmetric difference of two index	indexes index symmetric difference other	0.166667
and plural 'names' parameter for	validate names name names deep	0.125000
a copy of this object names dtype	index copy names dtype	0.333333
representing the totally ordered cartesian product	sort xnull	0.066667
elements of v should be inserted	searchsorted v	0.033333
or columns using input function or functions	core ndframe rename axis mapper axis copy inplace	0.250000
object that can be used to iterate over	frame parser build	0.014706
to	tools to	0.250000
function	apply func	0.027027
error raised when attempting to get a	error	0.028571
render a dataframe as an html table	data frame to html buf columns col_space header	0.500000
the string-like attributes from the info_axis	core ndframe dir additions	0.166667
to panel	panel	0.017857
that can	parser build	0.014706
return the join indexers	merge operation get join indexers	1.000000
construct an intervalindex from a 1d array of	index from intervals cls data name	0.125000
values to be	core block shape values	0.050000
in file node must already exist and be	io hdfstore append	0.016667
fixed frequency datetime index with custombusinessday as	core indexes cdate range start end periods	0.083333
function is called via the 'numpy' library the	numpy validate take with convert convert	0.055556
number	range index	0.021739
a tree-like object that can be used to	frame parser build	0.014706
colummn	attr	0.125000
parse specified sheet s into a dataframe	parse	0.034483
a new unit if needed otherwise return	core dtypes datetime tzdtype new cls unit	0.055556
each dataframe in panel to	panel to	0.027027
length	datetime	0.006711
draw histogram	hist frame data	0.200000
concatenation of an datetimelike	concat datetime to_concat	0.125000
return the slice dictionary for these axes	extract axes for slice axes	0.333333
apply we are stripping	mixin apply func name	0.050000
object with matching indices to myself	ndframe reindex like other method copy limit	0.111111
mixin to support	mixin	0.074074
of x in y if possible otherwise	in x y	0.047619
the data for this	io data col	0.333333
*this is an internal non-public method*	categorical index create categorical data categories ordered	0.333333
new datacol with the	name cname	0.111111
if 'series argmin' is called via	skipna skipna args	0.100000
necessary for making this object picklable	sparse sparse array setstate state	0.333333
swap level i with level j do not	core indexes multi index swaplevel i j	0.333333
omitted where alternately any or	how thresh subset	0.250000
return the block manager from	core sparse to manager sdf columns	0.052632
if we	core base grouper is	1.000000
that we have	categorical	0.009615
ndarray argsort argsorts the value	argsort	0.038462
this is index for	ndframe	0.005025
a categorical column and prepare formatted output	stata value label	0.250000
to take optional positional and keyword arguments	util optional	0.066667
construct dataframe from dict of array-like or	core data frame from dict cls	0.200000
get instances of all	util all	0.055556
in file node must already exist	key value format	0.016667
parse specified sheet s into	file parse	0.125000
stop kwds in sparse	io sparse	0.166667
/ or columns using input function or	axis mapper axis copy inplace	0.055556
indices parameters	indices	0.142857
object that can	parser build	0.014706
to infer better dtype for object columns parameters	convert datetime numeric timedelta coerce	0.071429
tree-like object	html frame	0.014706
underlying data	range	0.047619
actual sparse values need to	sparse sparse array	0.043478
series excluding elements from groups that do not	core series group	0.030303
to apply we	apply func	0.027027
return datetimeindex	core indexes datetime index	0.007634
axis equal values are	axis	0.011364
convert timeseries to specified frequency	core ndframe asfreq freq method	0.250000
lookup of value from	value arr key value	0.038462
a hack to accelerate unioning	union many others	0.040000
read an array	fixed read array	1.000000
from ndarray or	index	0.002004
take optional positional and keyword arguments	util optional args	0.066667
handle na filling of take	multi index assert take fillable values indices allow_fill	0.250000
for instances of pandasobject	computation any pandas objects	0.250000
ufunc needs additional handling	indexes period index array wrap result context	0.041667
to shift without copying data the	core ndframe slice shift	0.083333
fast lookup of	core indexes index	0.007042
to their default values as specified	for default values fname	0.200000
values and	args values	0.083333
to convert timedelta-like to timedelta64	indexes td index	0.055556
be applied on each value	formatter value formatter float_format threshold	0.100000
timezone	set timezone	0.142857
ndframe as opposed	ndframe	0.005025
a fixed frequency datetime index with	indexes bdate range start end periods	0.083333
of x not in	computation not in x	0.166667
render a dataframe as an html	data frame to html buf columns col_space	0.500000
take which sets nan values	take nd arr indexer	0.125000
integer location for requested label	loc key method	0.142857
comparison operations to convert datetime-like	cmp opname nat_result	0.066667
process of casting	core indexes numeric index assert safe casting	0.125000
we always want to return	indexes period index shallow copy with infer values	0.200000
url has a valid	is url url	0.047619
timedelta index	listlike arg unit box errors	0.142857
be	frame parser build	0.014706
used when a manipulation result has	constructor	0.040000
deprecated use :meth categorical sort_values that function	core categorical order inplace ascending na_position	1.000000
return a view of	view	0.043478
over the	io html frame parser	0.012195
not satisfy the boolean criterion specified by	group by filter	0.200000
input values as an enumerated type or	core factorize values sort	0.111111
return packed bytes see :class	msgpack packb	0.025641
compute variance of groups excluding missing values	by var ddof	0.166667
consistent invalid indexer message	indexes index invalid indexer form key	1.000000
full length	full	0.071429
elements of v should be inserted	indexes frozen ndarray searchsorted v	0.033333
to apply we are	mixin apply func	0.050000
a new block (of	core block setitem indexer	0.066667
group of	group	0.027027
fast lookup of value from 1-dimensional ndarray	core indexes period index get value series key	0.071429
pivot	core reshape pivot	0.166667
new	dtypes datetime tzdtype new	0.333333
check if we are a view have	check is	0.200000
equivalent to left <= series <= right na	series between left right inclusive	0.200000
is defined	view cls	0.047619
convert timedelta-like to	core indexes td index cmp	0.055556
reconstruct	reconstruct	1.000000
like to compare	like	0.058824
a hack to accelerate unioning	core indexes datetime index union many others	0.040000
returns numpy array of datetime time	datetime	0.006711
union of two multiindex objects sorting if	multi index union other	0.066667
select values between particular	index indexer between	0.125000
gets	wrap	0.057692
after a ufunc needs additional handling as	indexes period index array wrap result context	0.041667
n/a values to use when concatenating specified units	na join_units	0.250000
box function to get	mixin box func	0.142857
to dataframe apply for	sparse sparse data frame apply func	0.166667
try to cast	try cast	0.500000
render a dataframe to a	io formats data frame formatter to	0.250000
post process for each axes overridden in	post plot logic ax data	0.333333
get_indexer that works for monotonic decreasing	get fill indexer searchsorted target method limit	0.142857
box function to	mixin box func	0.142857
true if	is	0.031746
string in the series/index starts with passed pattern	core str startswith arr pat	0.333333
guess the datetime format of a given datetime	guess datetime format dt_str dayfirst	1.000000
return packed bytes see :class packer for	io	0.003012
render a dataframe	core data frame	0.011834
lookup of value from	indexes index set value arr key value	0.038462
is index for series columns for dataframe	core	0.001326
the last day of the month	month end	0.100000
a new unit if needed	dtypes datetime tzdtype new cls unit tz	0.055556
return the corresponding interval	interval	0.029412
specialized shift which produces	index ops mixin shift n freq	0.250000
each axes overridden in child	plot logic ax data	0.083333
singular 'name' parameter for general index and	core indexes index	0.007042
that can be used to	html	0.011765
as a unicode	indexes	0.004651
equivalent to shift without copying data the	slice shift periods	0.083333
use this	core indexes	0.004762
new map	map new	1.000000
return a boolean if we are	is	0.005291
subclass of styler with	io formats styler from	0.076923
count of	count arg freq	0.200000
compute pairwise correlation of columns excluding na/null	core data frame corr	0.111111
with the rows/columns switched	transpose	0.166667
a new manager with the blocks	manager combine blocks copy	0.250000
iterate over	frame	0.009091
the object in order to correctly handle	core resampler convert obj obj	0.166667
index	timedelta index	0.045455
accelerate unioning a	union many others	0.040000
return a boolean indicating whether the file	io hdfstore	0.014493
convenience function for interpolate bpoly from_derivatives	core from derivatives xi yi x order	1.000000
convert to our native types format slicing if	core float block to native types slicer	0.250000
from maps[0]	compat chain map	0.032258
writer	excel writer	1.000000
post	post	0.777778
index with custombusinessday as	core indexes cdate range start end periods	0.083333
context manager for running code that expects to	util assert produces	0.071429
list of normalized locales	locales locales	0.200000
must	hdfstore	0.014925
this if	arr key	0.023810
boolean if we	core indexes is	0.166667
add	add numeric	0.142857
the datetimelike methods (as we may have	datetimelike methods cls	0.066667
panel or above ndim	panel	0.017857
are	core indexes numeric index is	0.333333
that create a table reflecting the	create table setup	0.066667
the attrs from	io	0.003012
wrap comparison operations to convert datetime-like to	cmp opname nat_result	0.066667
synonym for as_blocks()	blocks	0.071429
take the codes by the indexer fill	categorical take nd indexer	0.333333
an index	index value	0.142857
multiindex from the	indexes multi index	0.013158
for series arithmetic operations to	arith method op name	0.333333
elements of v should be inserted in	ndarray searchsorted v	0.033333
from some accepted dtype	cls	0.016949
from the	io html	0.012987
type checking function of type	core computation is type	0.125000
axis of	axis	0.011364
package is installed	package	0.058824
stop_seq	stop_seq	1.000000
_constructor_sliced-like objects to either an intersection	panel homogenize dict frames intersect dtype	0.142857
parse datetime	core tools parse time	0.125000
of sql statement that create	table create	0.043478
return a string format	format datetime64 from	0.250000
that writer engine supports	io excel writer supported	1.000000
the op string for this termvalue	bin op generate v	0.250000
: write out	write	0.017857
create a table reflecting the structure of a	io sqlite table create table setup	0.066667
font object	font	0.125000
sets names	indexes multi index set names names level validate	0.200000
have a fully reindex-output to	core data frame group by reindex output result	0.045455
long strings in the series/index to	core str	0.011364
construct this type from a string	interval dtype construct from string cls string	0.166667
series of columns	core ndframe groupby	0.250000
block	block cls	0.333333
of bytes in	multi index nbytes	0.052632
if 'series argmin' is	skipna skipna args kwargs	0.100000
make a scatter plot from two dataframe	plotting scatter plot data x y	0.125000
a multiindex from the	indexes multi index from	0.142857
perform the reduction type operation	ops mixin reduce op name	0.083333
must already exist	key value	0.011628
midnight length is unaltered	index normalize	0.125000
against the writer's supported extensions	cls ext	1.000000
alert a user about a	io python parser alert	0.200000
data	data col	0.333333
extract from a masked rec array and create	core masked rec array to	0.090909
apply	month offset apply index	0.500000
curve with holidays between start_date and end_date parameters	tseries abstract holiday calendar holidays start end return_name	0.066667
op string for this termvalue	computation bin op generate v	0.250000
to cast the array/value to	dtypes maybe cast to	0.250000
indexer	indexer axis	0.043478
dataframe to a variable number	core data frame	0.005917
if we define an builtin	is builtin	1.000000
determines if two multiindex objects have the same	indexes multi index equals other	0.333333
expr	expr	0.250000
with labels	labels	0.038462
the union of two multiindex	core indexes multi index union other	0.066667
rolling grouper providing rolling	group by rolling	0.333333
evaluate	eval func other	0.200000
a possibly local context	key is_local	0.166667
the 'numpy' library the	numpy validate take with convert convert	0.055556
the time index using the index's frequency if	core ndframe tshift periods freq axis	0.066667
gets called after a ufunc needs	context	0.023810
in file node must already exist and	append key value	0.016667
update index attributes e g freq	index maybe update attributes attrs	0.200000
block in-place with new item value	core object block set locs values check	0.125000
dataframe in panel to a separate excel	core panel to excel path na_rep engine	0.111111
a slice of this container	core ndframe slice slobj axis kind	0.333333
concatenation of an datetimelike array of arrays each	core dtypes concat datetime to_concat axis	0.125000
element	core ndframe	0.005051
override generic we want to set	set	0.012195
file node must already exist	hdfstore	0.014925
creates a new sparsearray from	sparse sparse data frame sanitize column key	0.333333
object that can be used	io html frame parser	0.012195
gets called after a ufunc needs additional	array wrap result context	0.029412
if we are a	safe for reshape	0.400000
returns numpy array of python datetime date	core indexes datetime index	0.007634
validate that an positional indexer cannot	has valid positional setitem indexer indexer	0.052632
dtype to return	dtype	0.010989
index and	indexes index	0.014706
convert from datetime to	io datetime to	0.125000
and return a basegrouper which	core get	0.038462
only	indexes index set value arr	0.023810
the node with	hdfstore get node	0.166667
align	core computation align	0.250000
to cls	cls	0.016949
try to parse a ndarray like into a	parser try convert	0.500000
from	io fixed width reader get	1.000000
boolean whether this axes needs validation for a	ndframe indexer should validate	0.166667
panel objects and will	panel	0.017857
convert to object if	to safe	1.000000
indices where elements of v should	ndarray searchsorted v	0.033333
to convert timedelta-like to	core indexes td index cmp	0.055556
block	col create for block cls	0.333333
method to handle na filling of take	indexes index assert take fillable values indices	0.250000
use	core indexes index	0.007042
truncates a sorted ndframe	core ndframe truncate	0.250000
*this is an internal non-public method*	core indexes index to embed keep_tz	0.500000
to time	tools to time	0.125000
of interval objects	core indexes interval index	0.062500
return a tree-like object that can	frame parser	0.012500
to construct this type from a	dtype construct from string cls	0.166667
sparse-compatible version of ndarray take	array take indices axis allow_fill fill_value	1.000000
best locator based on	locator	0.047619
possible performance impact	performance warning	1.000000
value from 1-dimensional ndarray only use this if	indexes categorical index get value series key	0.100000
return an	core ndframe to	0.040000
attempt to construct this	construct	0.071429
from	index set	0.022727
axis is zero length	io generic fixed is empty array shape	0.166667
gets called	series array	0.090909
is a deprecated option and if so prints	warn if deprecated	0.166667
a filtered indexer that doesn't have any missing	missing indexer tuple indexer axes	0.333333
take the codes by the	categorical take	0.200000
in the series/index	core str repeat	0.045455
update index attributes e	indexes index maybe update attributes	0.200000
make box plots from dataframegroupby data	frame groupby grouped subplots column fontsize	0.500000
convert to our native types format	core datetime block to native types slicer na_rep	0.250000
same as values but handles sparseness conversions	core ndframe get values	1.000000
property synonym for	core ndframe	0.005051
single element pandasobject	core ndframe	0.005051
membership of x in y if possible	in x y	0.047619
of columns excluding na/null values	core data frame	0.005917
guarantee the shape of the values to	block shape values ndim shape	0.083333
read csv file (discouraged please use :func	core series from csv cls path sep parse_dates	0.066667
ndarray only use this if you	indexes index set value arr	0.023810
or all of the data are	core data frame dropna	0.083333
render a dataframe to a list of	formats data frame formatter to	0.083333
true if categoricals are the same dtype	core categorical is dtype equal other	0.250000
timeseries to specified	ndframe asfreq	0.250000
element index pairs for each element in the	map indices py arr	0.090909
offsets index to end of period frequency	offset end apply index i freq	1.000000
after a	period index array	0.050000
xport format return python date	sas parse date datestr	0.250000
arr1 and arr2	util equal contents arr1 arr2	0.066667
a multi-index suitable for a panel-like dataframe parameters	panel index time panels names	0.076923
return	io html frame parser build	0.014706
generic moving function application	stats rolling apply arg window func min_periods	0.500000
as a unicode string	core indexes	0.004762
multiple iterables	iterables sortorder names	0.500000
we	is	0.015873
dataframe the	data values index	0.066667
we are index sliceable then return my slicer	core convert to index sliceable obj	0.083333
dataframe in panel to a separate excel	panel to excel path na_rep engine	0.111111
called after a ufunc needs additional	result context	0.027027
add	ndframe add numeric	0.500000
create a new unit if needed	datetime tzdtype new cls unit tz	0.055556
we have bytes decode them to unicode	computation ensure decoded s	0.166667
stata and	io cast to stata	0.500000
make a scatter plot from two dataframe columns	plotting scatter plot data x y	0.125000
period	period	0.100000
of v should be inserted in	frozen ndarray searchsorted v	0.033333
csv file (discouraged please use	frame from csv	0.066667
algos groupsort_indexer implements counting sort and it	get group index sorter group_index ngroups	0.250000
a list of sql statement that create	table create	0.043478
if	core categorical	0.013889
sets index names	default names data	0.083333
a dataframe as an html table	core data frame to html	0.250000
data the shifted data	core ndframe slice	0.125000
add in	mixin add	0.333333
draw	frame alpha figsize	0.500000
determine if dtype is valid for	is valid dtype n method dtype	0.142857
additional	core indexes period index array wrap	0.050000
dict has only the	io	0.003012
string	time string	0.500000
as a dataframe the	data values index	0.066667
compute pairwise correlation of columns excluding na/null	core data frame corr method min_periods	0.111111
compute sum of non-na/null observations in	count	0.055556
to table	value	0.005155
as	indexes period index	0.035714
additional	index array wrap	0.033333
indexes give	indexes index	0.007353
function column-wise row-wise or table-wase updating the html	func axis subset	0.200000
necessary for making this object picklable	array reduce	0.333333
lookup	indexes index	0.007353
a series of columns	ndframe	0.005025
index	value index	0.333333
convert to our native types format slicing	categorical block to native types slicer na_rep	0.250000
necessary for making this object picklable	core sparse sparse array reduce	0.333333
coerce a scalar to a	core indexes period index coerce scalar to	0.071429
list of normalized locales that do	util valid locales locales normalize	0.050000
backward fill the values	group by backfill limit	0.250000
format into long stacked format as dataframe	panel to frame	0.125000
a groupby implementation	timedelta index resampler groupby	0.166667
concatenation	dtypes concat	0.200000
class for writing stata	to stata	0.058824
validate that an positional indexer cannot	indexer has valid positional setitem indexer indexer	0.052632
to compare numeric	dtypes is numeric v	0.333333
csv file (discouraged please use	csv cls path sep	0.066667
sub-classes to define	window gotitem key ndim subset	0.333333
is datetimelike (e	core indexes maybe to datetimelike	0.142857
fast version of transform only applicable	core series group by transform fast	0.500000
an outside world format currently just the	block external values dtype	0.125000
only use this if you	arr	0.013699
that can be coerced to periods	period index simple new cls	0.142857
read csv file (discouraged please use	frame from csv cls path	0.066667
this is called upon unpickling	cls d	0.083333
my pandas type & version	fixed	0.055556
compute variance of groups	core resampler var ddof	0.200000
read csv file (discouraged please use	csv	0.057143
my current col description	col col	0.500000
background null_color for missing	highlight null null_color	0.125000
values at particular time of day e	core ndframe at time time	0.066667
number of bytes in the	core indexes multi index nbytes	0.052632
return valid other	indexes index validate for numeric binop other op	0.500000
of a series excluding	core series group	0.030303
dropna	dropna	0.400000
converts json lists to line delimited json	io json convert to line delimits s	0.200000
for datetimelike properties of	timedelta properties	0.052632
setup the	set	0.012195
table in file node must already exist	append key value format	0.016667
: int slice or sequence of integers	data frame ixs	0.200000
setup	setup	0.454545
view limits to the nearest	locator autoscale	0.055556
equivalent to shift without copying data the	core ndframe slice shift periods	0.083333
returns the indices that would sort	argsort	0.076923
returns an index containing unique values	indexes index get unique index dropna	0.500000
provide a nice str repr of our rolling	core window unicode	0.071429
to iterate over the dom	html frame parser build doc	0.125000
am i	compat is platform	1.000000
from	set value arr	0.023810
have an object	core dtypes	0.018519
do a list	list src_list dest_list inplace	1.000000
gets	core indexes period index array wrap result	0.050000
that converts json lists to	to	0.006329
each group if n	core group by	0.027778
use this if you	core indexes index set	0.023810
file node must already exist and	key value format	0.016667
if we have	have	0.083333
update index attributes e g freq	indexes datetime index maybe update attributes attrs	0.200000
to the	index	0.002004
the arg list of a func	func	0.011905
of	core series	0.008000
dataframe with labeling information in the columns	core data frame reset	0.027778
sub-classes to define	data frame group by gotitem key ndim subset	0.333333
belongs to a leap	leap	0.076923
times to midnight	indexes datetime	0.011494
'info axis' see indexing for	core ndframe keys	0.083333
bytes see :class packer	msgpack packb	0.025641
create a new unit if needed otherwise return	new cls unit tz	0.055556
convert string 'r' to a timedelta object	coerce scalar to timedelta type r	0.500000
construct dataframe from dict of array-like or dicts	data frame from dict cls	0.200000
ensure that the	io ensure	1.000000
method name lookup and completion	core pandas object dir	0.166667
load a pickle with	compat load	0.200000
on given axis omitted where alternately any or	dropna axis how thresh subset	0.100000
return a string representation for a particular object	dtypes extension dtype bytes	0.142857
indices of the maximum values along an axis	datetime index ops mixin argmax axis	0.250000
index with target's values (move/add/delete	index	0.002004
to convert timedelta-like to	indexes td index	0.055556
of columns excluding na/null values	core data	0.041667
indexer like _name in	name indexer	0.083333
read sql query or database table into	read sql sql con index_col coerce_float	0.166667
table in file	hdfstore	0.014925
a simple cross-tabulation	reshape crosstab	0.066667
to add	core computation add	0.333333
already exist	append key	0.016667
be used to	html frame parser	0.012658
bind a method to class	compat bind method cls name func	0.200000
return a slice	core categorical block slice slicer	0.083333
in engineering	eng formatter call	0.142857
the totally ordered cartesian product	shape sort xnull	0.066667
convert to our native types format slicing if	float block to native types slicer na_rep float_format	0.250000
check if the	core	0.005305
perform an	limit	0.100000
convert datetimeindex to	indexes datetime index to	1.000000
1-dimensional ndarray only use this	value arr key	0.023810
which can be iterated over to get	k	0.153846
:meth pandas dataframe reset_index function	index level drop name inplace	0.142857
overlapping entries	with suffix left lsuffix right rsuffix	0.250000
resample of a	period	0.016667
and 'kwargs' should	resampler func method args kwargs	0.142857
by definition have do not have a	formats datetime64formatter format strings	0.090909
'usecols' parameter is a callable	evaluate usecols usecols names	0.333333
best locator based on a	date locator get locator	0.062500
a simple cross-tabulation of	crosstab	0.050000
to handle na filling of take	assert take fillable	0.250000
cross-tabulation of two or more factors by default	reshape crosstab index columns values rownames	0.333333
block manager from a dataframe of series	sparse to manager sdf columns	0.052632
return the correct pandassql subclass based on the	pandas sql builder con flavor schema meta	0.055556
gets called after a	core indexes index array wrap result	0.100000
append to : write out	write	0.017857
the slice locations for input labels	slice locs start end step kind	0.083333
to the underlying array which	index ops mixin	0.019231
number of seconds (>= 0 and less	timedelta index seconds	0.066667
analogous to the :meth pandas dataframe reset_index function	core series reset index level drop name inplace	0.142857
return valid other evaluate or raise typeerror	numeric binop other op opstr	0.500000
add the	ndframe add numeric	0.500000
of value from 1-dimensional ndarray only use this	datetime index get value series	0.071429
array interface	index array dtype	0.125000
a dataframe	core sparse sparse data frame	0.117647
the union of two index objects	core indexes range index union other	0.083333
object o and return packed bytes see :class	packb o	0.055556
find all occurrences of	findall	0.111111
convert sparseseries to a series	core sparse sparse series to dense sparse_only	1.000000
or a subset of rows if n	n dropna	0.166667
apply mapper function to its categories	map mapper	0.125000
used	io html frame parser build	0.014706
return a basegrouper which is an internal mapping	core get	0.038462
my specific	interval index	0.090909
class with a metaclass	compat add metaclass metaclass	0.125000
make a copy of the sparsearray only the	copy deep	0.142857
operations to the cls evaluate the	aggregate operations cls	0.142857
a class for writing stata binary	to stata fname	0.200000
an expression in	expr inplace	0.200000
fast version	fast	0.090909
and 'kwargs' should be empty	groupby func name args kwargs	0.166667
add the operations to the cls evaluate	panel add aggregate operations cls use_numexpr	0.500000
hour	hour	1.000000
guarantee the shape of the	ndim shape	0.111111
by periods	periods axis	1.000000
strings to numpy	compat numpy	0.166667
add numeric operations to the groupby generically	core group by add numeric operations cls	0.250000
for first non-na/null value	core series first valid index	0.250000
from ndarray or	index columns dtype	0.125000
mix	mix	1.000000
1d array	intervals cls data	0.250000
make a scatter plot from two	plotting scatter plot	0.333333
best locator based	pandas auto date locator get locator	0.062500
check value is valid for scalar op	indexes index assert can do op value	1.000000
a astypeable to	astype dtype	0.166667
comparison operations to convert datetime-like to	indexes period index cmp opname nat_result	0.066667
datetime index with business day	core indexes	0.004762
do a	src_list dest_list	0.500000
arrays	arrays	1.000000
that group - 1	core group by cumcount ascending	0.166667
perform the reindex for all the axes	ndframe reindex axes axes level limit tolerance	1.000000
of the underlying data as a python	core index ops mixin	0.062500
stata	to stata	0.117647
series that is datetimelike	to datetimelike	0.125000
series	tsplot series	0.333333
the grouper indexers	grouper obj key axis level	0.142857
take which sets nan	take nd arr indexer	0.125000
for	extract axes for	1.000000
needs	wrap result	0.022727
of styler with a custom template	formats styler from custom template	0.142857
i am never	categorical	0.009615
correct class for resampling with	resampler for grouping	0.333333
a slice of this container	slice slobj axis kind	0.333333
for panel objects and will	panel to	0.027027
optional	optional args	0.066667
object dtype try to coerce dates and/or numbers	dtypes soft convert objects values datetime numeric timedelta	1.000000
the given delimiter string starting at the	rsplit arr	0.037037
convert to object if we are a categorical	indexes categorical index to safe for reshape	1.000000
using	computation can use	1.000000
return the underlying data which is a categorical	indexes categorical index	0.047619
maps[0] raise keyerror	compat chain map	0.032258
and if so prints a warning	warn if	0.333333
file node must already exist and be table	io hdfstore append key	0.016667
intervalindex from a	index from	0.090909
fixed frequency datetime index	core indexes period range start end periods freq	0.083333
to see if a url has a	io is url url	0.047619
in file node must	key value	0.011628
index or ndarray	core indexes datetime index ops	0.034483
as a dataframe the levels in	data values	0.062500
by the indexer fill	indexer allow_fill	0.050000
dataframe	sparse sparse data frame	0.176471
insert item	core block manager insert loc item	0.500000
function multiple times in parallel	util test parallel	0.142857
a dataframe to	formats data frame formatter to	0.083333
render a dataframe to a list	io formats data frame formatter to	0.083333
converts a	num_format_str	0.142857
vectorized membership of x not in	not in x	0.166667
sets names	core indexes multi index set names names	0.200000
dropna if	dropna	0.066667
return sorted copy	ops mixin sort values return_indexer ascending	0.250000
dropna if fill_value=nan returns	dropna	0.066667
to ensure that they are valid stata	io stata writer	0.142857
a python expression as	core computation eval expr	0.083333
or ndarray filled with nat which has the	nat new	0.050000
boolean list indicated if we have	index have	0.142857
node with the	hdfstore get node	0.166667
the float	formats float array	0.055556
add in the datetimelike methods (as we	add datetimelike methods cls	0.333333
an positional indexer cannot enlarge its	ndframe indexer has valid positional setitem indexer indexer	0.052632
need to coerce a code to	coerce freq code	0.076923
a curve with holidays between start_date and end_date	calendar holidays start end return_name	0.066667
on	rolling	0.100000
a particular object	core dtypes extension dtype bytes	0.142857
vmin	vmin	1.000000
fast lookup of value from 1-dimensional ndarray	indexes period index get value series key	0.071429
to shift without copying	shift	0.083333
array interface return my	index array result	0.125000
running code that expects to	util assert produces warning expected_warning	0.071429
its hexadecimal representation used to tag	replacer x	0.125000
compute a	crosstab index columns	0.066667
inferring dtype	use_dtypes convert_dates	0.500000
a string representation for	indexes frozen ndarray unicode	0.083333
types that each has a homogeneous dtype	ndframe as blocks copy	0.142857
maps[0] raise keyerror is	chain map	0.034483
return index or ndarray	core indexes datetime index	0.007634
html to dataframe parser that uses beautifulsoup under	beautiful soup html5lib frame parser	0.166667
sets index names to 'index' for	set default names	0.083333
string in the series extract groups from	core str extract	0.035714
dict of array-like or dicts	dict cls	0.166667
load msgpack pandas object from the specified	io read msgpack path_or_buf encoding iterator	0.200000
based on type and coerce into matrices	arrays to mgr arrays arr_names	0.250000
csv file (discouraged please	data frame from csv	0.066667
compute	reshape crosstab index columns	0.066667
bool of	ndframe bool	0.055556
type checking function of type t or tuple	computation is type t	0.083333
and return the op	computation bin op	0.055556
can be used	html	0.011765
that can be used to iterate over	io	0.003012
for more	core	0.001326
membership of x not in y if possible	not in x y	0.066667
2d	2d	1.000000
use this if you	core indexes index set value arr key	0.023810
gets	core series	0.008000
by category value returning a	values inplace ascending na_position	0.071429
as boxed values such as timestamps/timedelta	core datetime like block mixin get values	1.000000
a multi reindex	reindex multi axes method	0.500000
gets	indexes period index array wrap result	0.050000
for running code that expects to raise	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
merge holiday calendars together the caller's class	abstract holiday calendar merge other inplace	1.000000
ndarray	data index columns dtype	0.125000
convert dataframe and series	data	0.009709
of bytes in the underlying data	index nbytes deep	0.052632
only if the process of casting data from	indexes numeric index assert safe casting cls data	0.047619
fixed frequency timedelta index with	indexes timedelta range start end	0.083333
representation for a particular object	dtypes extension dtype repr	0.142857
name this allows simpler access to	name	0.025000
this if	index set	0.022727
slice_	slice_	1.000000
left and right array	left right closed	0.166667
ndarray only use this if you	core	0.001326
create a new	core dtypes datetime tzdtype new cls	0.333333
convert to our native types format slicing if	to native types slicer na_rep float_format	0.250000
ndarray	indexes index set value arr key	0.023810
dates	dates	0.636364
return a tree-like object that	io html frame parser	0.012195
from maps[0] raise keyerror is	compat chain	0.034483
allows a decorator to take optional positional and	optional args decorator	0.083333
the built up styles	io formats styler	0.021277
replace	block manager replace	1.000000
each index value is found in	core indexes datetime index ops mixin isin	0.083333
return of an indexer even when non-unique	core indexes index get indexer for target	0.250000
the padded hexadecimal id of obj	core computation raw hex id obj	0.333333
registered option	get registered option	0.500000
for level 0 assuming	multi index bounds	0.166667
to apply we are stripping	group by mixin apply	0.050000
values and a	from values values	0.333333
try to cast the array/value to a	core dtypes maybe cast to	0.250000
dummies	dummies	1.000000
can be used to	frame parser	0.012500
return my dtype mapping whether number or name	dtype for t	0.333333
to	io hdfstore	0.014493
index objects contain the	core indexes datetime index ops mixin	0.029412
needs additional handling	index	0.002004
cross sectional for a given location	block manager fast xs loc	0.142857
be a bool if we have only bool	block is bool	0.166667
an intervalindex from a 1d array of interval	interval index from intervals cls data name	0.333333
value from 1-dimensional ndarray only	categorical index get value series key	0.100000
of whether each index value is found	index ops mixin isin values	0.083333
not copy	copy	0.012821
concatenation of an datetimelike	core dtypes concat datetime to_concat axis	0.125000
in	core computation in	1.000000
gets called after	series array wrap result	0.100000
format my	index format	0.500000
a code to	freq code	0.125000
from 1-dimensional ndarray	indexes index set value arr key	0.023810
from 1-dimensional ndarray only use this	value	0.005155
make sure a valid engine is	computation check engine engine	0.333333
method to handle na filling of take	indexes multi index assert take fillable	0.250000
use this if	set value arr	0.023810
a datetime64 block with	datetime	0.006711
to handle na filling of take	index assert take fillable values	0.250000
index for series	ndframe	0.005025
a tree-like object that can	frame parser	0.012500
add in numeric methods	core indexes index add numeric methods	0.500000
for instances of pandasobject	core computation any pandas objects	0.250000
a "pivot" table) based on column values uses	frame pivot index columns values	0.200000
resample	resample	1.000000
iterate over the blocks collect and create	consolidate transposed	0.062500
of x not in y if possible otherwise	computation not in x y	0.066667
keyerror is maps[0]	compat	0.030303
we have a	core	0.001326
of value from 1-dimensional ndarray only use	datetime index get value series key	0.071429
transform	ndframe group by transform	1.000000
block return result block s from	block where other cond align raise_on_error	0.066667
return the values & release the	col take data	0.055556
returning	level inplace verify_integrity	0.333333
wrapper function for series arithmetic operations to	comp method series op name	0.333333
the ticks	plotting time series date formatter	1.000000
by a series of	groupby by	0.250000
read csv file (discouraged please use :func pandas	series from csv cls path sep parse_dates	0.066667
to convert timedelta-like to timedelta64	indexes td index cmp	0.055556
use this if you	indexes index	0.007353
this	value arr key	0.023810
the string-like attributes from the	core	0.001326
arr1	contents arr1	0.066667
categorical if	categorical	0.009615
convert tz-aware datetimeindex	datetime index tz convert tz	0.166667
less than a given width	width	0.083333
and	compat	0.030303
"pivot" table) based on column	pivot index columns	0.111111
:class packer	io	0.003012
sparseseries (with nan	sparse	0.026316
convert to our native types format slicing if	block to native types slicer	0.250000
return packed	packb	0.022727
read sql database table into a	sqldatabase read table table_name index_col coerce_float	0.333333
view limits to the nearest multiples	plotting time series date locator autoscale	0.055556
get	core ndframe	0.005051
insert item at selected position	block manager insert loc item value allow_duplicates	1.000000
if the passed type is an actual dtype	core dtypes extension dtype is dtype cls dtype	0.111111
return index or ndarray	datetime index ops mixin	0.029412
in file node must already	hdfstore append	0.016667
function for series	core bool method series	0.333333
v	frozen ndarray searchsorted v	0.033333
pad/backfill get_indexer that works for monotonic decreasing	index get fill indexer searchsorted target method limit	0.142857
all of the _apply kwargs	window center	0.076923
necessary for making this object picklable	core indexes multi index reduce	0.333333
parse specified sheet s into a dataframe	file parse	0.125000
evaluate the block return result block	block eval func other raise_on_error	0.333333
for akima	core akima	0.500000
the union of two multiindex objects sorting if	core indexes multi index union other	0.066667
close the handle if its	io stata reader close	0.200000
general index and plural 'names' parameter for multiindex	core indexes index validate names name names deep	0.071429
parse time strings to time objects	tools to time	0.125000
label for this level	has level label	1.000000
to shift without copying data the	core ndframe slice shift periods axis	0.083333
can be used to iterate over	parser build	0.014706
url has a valid	io is url url	0.047619
this only if the process of casting	core indexes numeric index assert safe casting	0.125000
for series	core ndframe	0.005051
only use this if you	indexes index set value	0.023810
use_dtypes	use_dtypes	1.000000
the process of casting data from	index assert safe casting cls data	0.047619
parsed table element	frame parser parse tr table	1.000000
object serving as a base class for	abstract engine	0.166667
each index	datetime index	0.007042
the raw	raw	0.142857
the object is a	core dtypes is	0.085106
a curve with holidays between start_date and	holiday calendar holidays start end return_name	0.066667
must	value	0.005155
is defined as a	indexes multi index view cls	0.047619
of slices/lists/labels/boolean indexer to a level-wise	locs tup	0.125000
iter1 iter2 iterables that produce elements	iter1 iter2	0.166667
i am never a view	categorical block is view	0.200000
wrap comparison operations to convert datetime-like to	dt index cmp opname nat_result	0.066667
values as an enumerated type	factorize values sort order na_sentinel	0.111111
columns for dataframe and	core	0.001326
return a tree-like object that can	io html frame parser build	0.014706
on where	key where start stop	1.000000
overriden on subclasses namely intervalindex to control get_slice_bound	indexes index get loc only exact matches key	0.142857
frame to its numpy-array representation	core ndframe as matrix columns	0.200000
necessary for making this object picklable	categorical setstate state	0.333333
handle specific apply	tseries semi month offset apply n other	0.200000
the shape of	shape	0.047619
interpolate	interpolate method axis limit	0.166667
to iterate over the	frame	0.009091
operations to convert datetime-like	core indexes period index cmp opname nat_result	0.066667
specialized intersection	indexes datetime index intersection	0.142857
post process for each axes overridden	post plot logic ax data	0.333333
read csv file	frame from csv cls	0.066667
only use	indexes index set value arr key	0.023810
starting at the end of the	rsplit arr	0.037037
and completion	pandas object dir	0.166667
try to parse a ndarray like into	io json parser try convert to	1.000000
get the 'info axis' see indexing for more	keys	0.032258
return a	frame parser	0.012500
instances of all the classes	all	0.043478
we if the passed type is	is	0.010582
return index or	indexes datetime index ops mixin	0.029412
data to an ndarray	data	0.009709
get lines 0) there are headers on	io python parser get index	0.166667
and	method args	1.000000
read csv file	from csv cls path sep	0.066667
return a tree-like object that can be used	io html	0.012987
cumulative sum for each group	core group by cumsum axis	1.000000
block and are	core block	0.010870
to convert datetime-like to datetime64	period index cmp opname nat_result	0.066667
compute variance of groups excluding missing values	core resampler var ddof	0.200000
over the	html	0.011765
read csv file	core data frame from csv cls path header	0.066667
on 3 columns of this	index columns values	0.037037
(header new_data) for header rows in multiindex parsing	io pop header name row index_col	0.200000
to midnight length is	indexes	0.004651
header of a table	parser parse thead table	0.333333
for temporarily setting a timezone	set timezone tz	0.142857
over the blocks collect and create	consolidate transposed	0.062500
a slice	tzblock slice slicer	0.083333
return of an	core indexes index	0.007042
at the given quantile a la numpy percentile	core series quantile q interpolation	0.250000
jsontable	jsontable	1.000000
ndarray only use	value arr	0.023810
data	core indexes	0.009524
sparseseries (with nan fill_value) to	sparse	0.026316
ndarray	core indexes	0.004762
write it to stream	stream	0.166667
form the union of two index	core indexes index union other	0.083333
return a slice	categorical slice slicer	0.111111
along the other	core reshape concat objs	0.333333
implement a datetime64	datetime tzblock	0.100000
a string-like that is	io convert string array	0.038462
table	core str translate arr table	1.000000
of type t or tuple of types	computation is type t	0.083333
read text from clipboard and pass to read_table	io read clipboard sep	0.200000
for general index and plural 'names' parameter for	indexes index validate names name names deep	0.071429
called	series array wrap	0.100000
see :class packer	msgpack packb	0.025641
we will be using numexpr	computation can use numexpr op op_str	0.333333
equivalent to shift without copying data the	slice shift periods axis	0.083333
json lists to line delimited json	io json convert to line delimits s	0.200000
string-like that is	convert string array data encoding	0.038462
called via the 'numpy' library the	numpy validate take with convert convert args kwargs	0.055556
checks	io python parser check	1.000000
append to table in file	format append	0.125000
of a series that is datetimelike	datetimelike data	0.111111
when a manipulation result has	ndframe constructor	0.055556
a new unit if	datetime tzdtype new cls unit	0.055556
passed type is an	dtypes interval dtype is	0.066667
read csv file (discouraged	core series from csv cls path	0.066667
string representation for this object	unicode	0.058824
of sql statement that create a table	io sqlite table create table	0.166667
a style_dict to an xlsxwriter format object	xlsx writer convert to style style_dict	0.166667
extension against the writer's supported extensions	check extension cls ext	0.333333
a comparison between 8 aware arrays	ops mixin evaluate compare other op	0.250000
gets called after a	indexes period index array	0.050000
ndframe before	ndframe truncate before	0.250000
of python datetime date objects (namely the	indexes datetime	0.011494
the full	full	0.071429
bytes in the underlying data	indexes range index nbytes	0.052632
return boolean if	core index ops mixin is	0.100000
locations	locs locs	0.333333
series columns	core	0.001326
we are going to write this as a	write obj	0.041667
from a row	parser parse	0.250000
returns the float	formats float array	0.055556
underlying data	indexes multi index	0.013158
a moving window	window	0.071429
handling as	period index array wrap result	0.050000
array of whether each index value is	datetime index ops	0.034483
to timedelta	timedelta	0.022222
ufunc needs	result context	0.027027
you	arr key	0.023810
to	frame to	1.000000
create a new multiindex from the	multi	0.018182
if we define an builtin function	grouper is builtin func arg	0.333333
of python datetime date	datetime	0.006711
create a new block with	core block make block	0.100000
header rows in	io pop header name	0.100000
through views note this is *not*	is other	0.055556
property property	core ndframe	0.005051
return the block manager from	sparse to manager sdf columns	0.052632
split each string in the series/index	core str	0.011364
are valid stata	stata	0.022222
return a fixed frequency timedelta index	indexes timedelta range start end periods	0.083333
create the grouper indexers	grouper obj key axis	0.142857
labels	labels	0.384615
stacked format dataframe	data frame	0.005714
read csv file (discouraged please use	csv cls path header sep	0.066667
a parameter value using	value	0.005155
values to be at least 1 d	core block shape values	0.050000
a boolean	is	0.005291
aggregate using input function or dict of	core panel group by aggregate arg	0.250000
pos	pos	1.000000
if you	value arr	0.023810
internal method to handle na filling of take	indexes index assert take fillable values	0.250000
not satisfy the boolean criterion specified by	by filter	0.200000
the header of	parser parse thead	0.111111
produce 'pivot' table based on 3	reshape slow pivot index	0.333333
the list of row elements from the	io html frame parser	0.012195
index objects contain	datetime index	0.007042
called via the 'numpy' library the third	validate take with convert	0.055556
a string representation for a particular object	core dtypes extension dtype bytes	0.142857
object o and return packed bytes see	io msgpack packb o	0.055556
a series that is datetimelike	to datetimelike data	0.125000
return a string representation for this	indexes index unicode	0.083333
to next offset only if not on offset	offset	0.055556
data to ndarray raises on scalar	indexes index coerce to ndarray	0.166667
called prior	core series array prepare	0.111111
a	reshape crosstab	0.066667
use this	arr	0.013699
the best locator	pandas auto date locator get locator	0.062500
from passed panel or object coercible to panel	panel update other join overwrite filter_func	0.200000
array interface return	index array dtype	0.125000
that is datetimelike (e	maybe to datetimelike data	0.142857
values according to indexer and	nd indexer axis	0.043478
construct this type	dtype construct	0.333333
columns using input	axis copy inplace	0.055556
a common sparseindex corresponding to the locations where	homogenize series_dict	0.047619
unicode normal form for the	core string methods normalize form	0.066667
mask of index to be returned from	index	0.002004
index_col	index_col	0.625000
as the	core	0.001326
convert sql and	io convert params sql	0.500000
'numpy' library	with convert convert	0.055556
checks that all the labels are	numeric index is all dates	0.333333
convert datetimeindex to	core indexes datetime index to	1.000000
to construct this type from	dtype construct from string cls	0.166667
return index or ndarray	datetime index ops	0.034483
the dom	html frame parser build doc	0.125000
load msgpack pandas object from	io read msgpack path_or_buf encoding iterator	0.200000
data types and ranges supported by	types data	0.333333
number of axes / array dimensions	core ndframe ndim	0.333333
axes if supplied	axes	0.043478
that is thrown by an	parser	0.008000
before and/or after some particular index value	truncate before after	1.000000
round	round	0.818182
a simple cross-tabulation	crosstab index columns	0.066667
new object with labels	labels	0.038462
convert timedelta-like to timedelta64	td index cmp	0.055556
masked rec	core masked rec	0.250000
element pandasobject	core ndframe	0.005051
replace extra whitespace inside	remove whitespace s regex	0.200000
an indexer like	cls name indexer	0.083333
a singular 'name' parameter for general index and	core indexes index validate names	0.066667
of the values to be at least 1	core block shape values ndim	0.050000
render the	formats styler render	0.142857
must already exist and	hdfstore append key	0.016667
modify block	block	0.008197
built up	io formats	0.027778
table in file node must	key	0.005051
indexer and return them as	indexer axis	0.043478
this columns	index col	0.066667
construct dataframe from dict of array-like or	data frame from dict cls data	0.200000
the keys will be the axis	core	0.001326
sort multiindex at	core indexes multi index sortlevel	0.166667
corresponding interval	interval	0.029412
the type not dtype instance associated	type arr_or_dtype	0.142857
sparsearray	core sparse sparse	0.034483
keyword argument of	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
sif to datetime	to datetime	0.250000
single block and are	core block	0.010870
process of casting data from some accepted	safe casting cls data	0.047619
for running code that expects to raise or	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
the _upsample kwargs and	group by mixin apply f	0.166667
to_replace	to_replace	1.000000
of type window_type and size window on the	rolling window arg window win_type	0.100000
add	core group by add	1.000000
series excluding elements	series group	0.030303
of whether each index value is found in	datetime index ops mixin isin values	0.083333
memory usage of my	ops mixin memory usage deep	0.200000
of panel along minor axis parameters	core panel minor xs key	0.166667
called after a	core series array wrap	0.100000
and major_axis for	core	0.001326
values can	values name	0.166667
to the key	key	0.005051
memory usage of my	core indexes range index memory usage deep	0.200000
ndarray of my hashed	multi index hashed	0.166667
concatenation of an datetimelike array of	concat datetime to_concat	0.125000
a homogeneous dtype	ndframe as blocks copy	0.142857
values and index	indexes datetime index	0.007634
is *not* the same as index	core indexes index is other	0.333333
of v should	ndarray searchsorted v	0.033333
filtered indexer that doesn't have any missing indexers	from missing indexer tuple indexer axes	0.333333
to parse datetime	parse time	0.125000
return the full scope for use with	computation scope full scope	0.055556
op on a and b	op op_str a b	1.000000
intervalindex to control get_slice_bound	get loc only exact matches key	0.142857
unit if needed otherwise return	unit tz	0.125000
write this as a frame table	io appendable multi series table write	0.333333
likely want to take the cross-product	core maybe convert ix	0.166667
be applied on each value to	array formatter value formatter float_format threshold	0.100000
each element in	map indices py arr	0.090909
parameter for general index and	core indexes index	0.007042
feather-format for dataframes	data frame to feather	0.333333
draw histogram	plotting hist frame data column by	0.200000
to return the correct pandassql subclass	pandas sql builder con flavor schema meta	0.055556
have	have	0.416667
unstack a k a pivot	unstack level	1.000000
index objects sortedness of the result	index	0.002004
values from this selection take = take ownership	generic index col convert values nan_rep encoding	1.000000
the values	shape values	0.050000
called via the 'numpy' library	with convert convert args	0.055556
lookup of value from 1-dimensional ndarray only	indexes datetime index get value series	0.071429
to apply we are stripping all of the	by mixin apply	0.050000
unique elements in	nunique dropna	0.125000
fixed frequency timedelta index with	indexes timedelta range start	0.083333
an iterator over the boxed	core indexes datetime index iter	0.250000
to set the	series set	0.076923
datetime to sif http //www stata com/help cgi?datetime	datetime to stata elapsed vec dates fmt	1.000000
to accelerate unioning a collection of indexes	union many others	0.040000
la re split in the series/index	core str split arr pat	0.166667
of a series excluding elements	core series group	0.030303
the underlying	index ops mixin	0.019231
new dataframe with labeling	core data frame	0.005917
of seconds (>= 0	core indexes timedelta index seconds	0.066667
list indicated if we have	index have	0.142857
beginning of	beg	0.090909
comparable timezone both for pytz	core indexes datetime index timezone	0.200000
convert timedelta-like to	core indexes td index cmp opname nat_result	0.055556
object that can be used to iterate	io html	0.012987
ndframe before and/or after some particular index value	core ndframe truncate before after axis	1.000000
sorted by the n largest values	nlargest n	0.333333
specified node (off of	key start stop	0.333333
the counts of the	counts f	0.041667
perform the reduction type operation if we	index ops mixin reduce op name axis skipna	0.083333
gets called	core indexes period index array wrap result	0.050000
options	options	0.291667
array interface return	indexes multi index array dtype	0.125000
all of the data are missing	core data frame dropna	0.083333
return an xarray object from the pandas	core ndframe to xarray	0.125000
names	set default names data	0.083333
function is called via the 'numpy' library	with convert convert args	0.055556
to handle na filling of take	multi index assert take fillable	0.250000
this	indexes index set value arr	0.023810
occupying requested label default to	label default	0.083333
delegatedclass of a series that is datetimelike	to datetimelike	0.125000
for general index	indexes index validate names name	0.066667
data	cls data	0.076923
needs	period	0.016667
for a tz-aware type return an encoded	get tz tz	0.066667
intervalindex from a 1d array of	from intervals cls	0.125000
return the size of	itemsize	0.027027
interpolate values according to	interpolate method axis limit	0.166667
array of whether each index	datetime index	0.007042
round a dataframe to a variable number of	core data frame round	0.166667
when a manipulation result has	constructor	0.040000
from 1-dimensional ndarray only use this if	set	0.012195
return my self as	series as	0.125000
require	core indexes datetime index simple new cls	0.250000
object that can be	io html frame parser	0.012195
immutable index	index	0.004008
this	core indexes	0.009524
is called via the 'numpy' library the	compat numpy validate take with convert convert args	0.055556
type and coerce into matrices	arrays to mgr arrays arr_names index	0.250000
to table in file node must already exist	value	0.005155
the type	type	0.024390
return the header of a	frame parser parse thead	0.111111
a axes	axes dtype	0.333333
for	core indexes	0.004762
block manager from a dataframe of	to manager sdf columns	0.052632
wrapper function for series arithmetic operations to	method op name	0.333333
from 1-dimensional ndarray	index set	0.022727
we are going to write this as a	write	0.017857
object with the	core	0.001326
the bom	bom	0.125000
swap level i with level	index swaplevel i	0.333333
or microsecond	indexes datetime index ops mixin resolution	0.125000
take a string-like	convert string array data	0.038462
take a string-like that is object	string array	0.038462
repr function	repr	0.040000
is called upon unpickling rather than	cls d	0.083333
bytes in the underlying data	nbytes deep	0.052632
resample of	datetime index resampler	0.066667
of	core indexes multi	0.014493
common post process for each	plotting mplplot post plot logic common	0.333333
that an positional indexer cannot enlarge its	positional setitem indexer indexer	0.052632
of putmask that potentially upcasts the result	core dtypes maybe upcast putmask result mask	0.200000
vectorized apply of dateoffset to datetimeindex raises notimplentederror	offset apply index i	0.333333
new object with the	core	0.001326
nbytes	nbytes	0.116279
the float values converted into	formats float array formatter	0.055556
statement that create a table	sqlite table create table	0.166667
group return result as series or by	groupby by axis	0.045455
the expression that is in the	core computation	0.047619
after regular attribute access try looking up	core ndframe getattr	0.500000
the td elements from a	io html frame parser parse td obj	0.083333
getattr	getattr	0.714286
the block manager from a	sparse to manager sdf	0.052632
wrap comparison operations to convert datetime-like to	index cmp opname nat_result	0.066667
up styles	formats styler	0.021739
na_action	na_action	1.000000
of two datetimeindexes	datetime index sub datelike dti other	0.333333
init self	frame init	0.500000
the reduction type operation	core index ops mixin reduce op name	0.083333
engine from a uri if con is a	engine builder con	0.500000
a	crosstab	0.050000
a list of tuples of the (attr formatted_value)	multi index format attrs	0.142857
of the	indexes timedelta index	0.250000
index with requested level removed if multiindex	multi index droplevel level	0.333333
columns of	columns	0.017857
if you	core	0.001326
a version to operate on	like block mixin try operate values	0.333333
value occupying requested label default to specified missing	series get label default	0.083333
convert css declarations	io formats cssto excel converter call declarations_str	1.000000
form the union of two multiindex	core indexes multi index union other	0.066667
from ndarray or	index columns	0.028571
returns a dataframe with the rows/columns switched	sparse sparse data frame transpose	0.333333
convert string-like and string-like	string	0.018868
is called upon unpickling	cls d	0.083333
make a repr function return fillvalue	repr fillvalue	0.083333
to the specified dtype	dtype result dtype	0.142857
passed type is an actual dtype	dtypes extension dtype is dtype cls dtype	0.111111
types format slicing	types	0.103448
subclass of styler with a custom template	formats styler from custom template	0.142857
evaluate the block return result block from the	block eval func other raise_on_error	0.333333
index using the index's frequency	core ndframe tshift periods freq	0.066667
whether i can attempt conversion to a timedeltaindex	convertible to	0.333333
localize tz-naive timeseries to target time zone	localize tz axis	1.000000
'numpy' library	validate take with convert convert args	0.055556
coerce any object types to better types return	object block convert	0.083333
hypothetical list representing the totally ordered cartesian product	core get group index labels shape sort xnull	0.066667
the dtype object of the underlying data	core indexes index dtype	0.333333
categorical if	categorical arr	0.125000
we are passed a list-like indexer	convert list indexer keyarr kind	0.066667
timedelta-like to	core indexes td index cmp opname nat_result	0.055556
based on our axes compute the expected	expected	0.083333
list of tuples of the (attr formatted_value)	range index format attrs	0.142857
series based on type and coerce into matrices	core arrays to mgr arrays arr_names index columns	0.250000
but using the interpolate machinery	block interpolate with fill method axis	0.200000
the interpolate machinery	core block interpolate with fill method axis inplace	0.200000
return the block manager from a	manager sdf columns	0.052632
to	io html frame parser build	0.014706
an intervalindex from a a	indexes interval index from arrays cls	0.166667
after a ufunc needs additional handling as	index array wrap result context	0.034483
install the	coerce method converter	0.200000
and be table	append key value format	0.016667
of whether each index	indexes datetime index	0.007634
try to read from a url	read obj	0.058824
of the values to be at least	core block shape values	0.050000
type window_type and size window on	stats rolling window arg window win_type	0.100000
available options grouped	pp options	0.083333
for a recursive	recursive	0.090909
set of kwargs	kwargs cls	0.040000
matrix multiplication with dataframe or inner-product with series	core series dot other	1.000000
nonzero	nonzero	1.000000
for panel objects and will	core panel to	0.027027
convert from sif to	date to	0.250000
called after	core series array	0.100000
an intervalindex from a 1d array	from intervals cls	0.125000
alter default behavior on how	format accuracy use_eng_prefix	1.000000
be used to iterate over the	parser build	0.014706
after a	indexes period index	0.035714
1-dimensional	arr	0.013699
xarray object from the	xarray	0.111111
axis to the block_manager axis	ndframe get block manager axis axis	0.166667
in place using non-na values from passed dataframe	core data frame update other join overwrite filter_func	1.000000
each string in	arr	0.013699
of casting data from some accepted dtype	casting cls data	0.047619
particular time of day	time time asof	0.142857
passed a list-like indexer return the	interval index convert list indexer keyarr kind	0.066667
can be used	html frame	0.014706
friday	friday	1.000000
inplace return a new block (of a	core block setitem indexer	0.066667
item from object	ndframe	0.005025
deterministic integers	encoding hash_key categorize	0.500000
label if label is not contained a	value label	0.066667
gets called after	core series array wrap	0.100000
are passed a list-like indexer return	convert list indexer keyarr kind	0.066667
index objects sortedness of the result	indexes range index	0.021277
new unit if needed	core dtypes datetime tzdtype new cls unit tz	0.055556
returns an iterator over the values	iter	0.090909
as	result	0.016393
bytes in the underlying	indexes multi index nbytes	0.052632
and return an item pair from maps[0] raise	map popitem	0.055556
after a	core indexes index array	0.100000
that create	sqlite table create	0.066667
ndarray repeat	ops mixin repeat repeats	0.333333
an internal format currently just	core block internal values dtype	0.111111
list of tuples of the (attr formatted_value)	core indexes datetime index ops mixin format attrs	0.142857
the series/index by given	core str	0.011364
table in file node must already exist	key	0.005051
an asof merge this	reshape merge asof	0.071429
formats to	convert datetime to	0.166667
swap levels i and j in a multiindex	series swaplevel i j copy	0.333333
the data is sparse|dense	core series ftypes	0.250000
the ftypes (indication	ftypes	0.043478
data	data	0.213592
input function	axis mapper axis copy	0.333333
the underlying array which by-definition can	indexes datetime index ops mixin	0.029412
where elements of v should be inserted in	ndarray searchsorted v	0.033333
the repr should show the info view	frame info repr	0.333333
forward	sparse sparse series get val at loc	0.250000
seconds (>= 0	indexes timedelta index seconds	0.066667
infer	io parser base infer	1.000000
change string like dtypes to object for	core dtypes invalidate string dtypes dtype_set	0.200000
fill_value) to a common sparseindex corresponding to the	homogenize series_dict	0.047619
ndarray only use this if	set value arr key	0.023810
is called via the 'numpy' library	validate argmin with	0.200000
a string cast it to timedelta according	timedelta index maybe cast slice bound	0.125000
a resample	period index resampler	0.062500
tree-like object that can be used to	io html frame parser	0.012195
wrapper function for series arithmetic operations to	method series op name	0.333333
chunk	chunk	1.000000
construct dataframe from dict of	data frame from dict	0.200000
might need to coerce	coerce	0.025641
delegatedclass of a series that is datetimelike (e	core indexes maybe to datetimelike	0.142857
columns using input function	axis mapper axis copy inplace	0.055556
applies function along input axis of dataframe	core data frame apply func axis broadcast raw	1.000000
gotitem	gotitem	1.000000
that parse html	html	0.011765
by the given delimiter string starting at	rsplit	0.031250
names to 'index' for	set default names data	0.083333
assignment node	assign node	0.500000
error is encountered	parser error	0.055556
whether each string in the	core	0.002653
return the actual ne format	core computation condition bin op format	0.333333
stata binary dta files from array-like objects	frame to stata fname convert_dates write_index encoding	0.333333
return a string representation	core indexes frozen ndarray unicode	0.083333
forward to	sparse sparse series get val at loc	0.250000
return a boolean if we are a single	manager is	0.100000
the new type	dtype copy	0.064516
in the numeric add/sub methods	add numeric methods	0.500000
the full scope for use with	core computation scope full scope	0.055556
return a tree-like object that	html frame	0.014706
new	datetime tzdtype new	0.333333
determine	str match arr	0.166667
feather-format object from the file path	read feather path	0.333333
index names to 'index' for	names	0.038462
float values converted	formats float array formatter get	0.055556
coerces data to ndarray raises on scalar	core indexes index coerce to ndarray cls	0.166667
works through views note this is *not* the	is other	0.055556
result and reset	result	0.016393
that we have a fully reindex-output	data frame group by reindex output result	0.045455
that we	core	0.001326
underlying data which is a categorical	categorical index	0.045455
in parallel	test parallel	0.142857
construct dataframe from dict of array-like or	data frame from dict cls data orient	0.200000
datetimeindex with times	indexes	0.004651
validates that	core categorical validate ordered cls	0.055556
in file node	append key	0.016667
provide a nice str repr	core window unicode	0.071429
file node must already exist and be	key value	0.011628
membership of x not in	computation not in x	0.166667
we must	non consolidatable mix in	0.083333
read sql database table into	io read sql table table_name con schema index_col	0.333333
deleting the node in	io	0.003012
multiindex compute	indexes multi index	0.013158
attempt to construct this type from	dtype construct from	0.166667
table in file node must	io hdfstore append key	0.016667
intervaldtype	interval	0.029412
to construct this type	dtypes interval dtype construct	0.333333
shape of the values to be	block shape values ndim shape	0.083333
dtype of the item of the underlying data	core index ops mixin	0.062500
check_stacklevel	check_stacklevel	1.000000
take which sets nan	core take	0.125000
bind a method to	bind method cls	0.200000
a	indexes index array	0.100000
method to class python 2 and python 3	method cls name func	0.076923
to each	frame apply	0.500000
class implementing the plot attribute for groupby	by plot	0.062500
to apply we are stripping all	apply func name	0.050000
returns the float values converted into	formats float array formatter get result as	0.055556
append to	key value format append	0.125000
cartesian product of all	get group index labels shape sort	0.200000
from 1-dimensional ndarray only use this if you	indexes index	0.007353
sas	sas	1.000000
of whether each index value is found	datetime index ops mixin isin values	0.083333
iteration interface on	iterator	0.100000
of sql statement that create a table reflecting	io sqlite table create table setup	0.066667
from a 1d array of	from intervals cls data name copy	0.125000
ndarray only use this if	value	0.005155
the block manager from a dataframe of series	manager sdf	0.052632
to apply we are	core group by mixin apply func	0.050000
return if each value is nan	core indexes datetime index ops mixin isnan	0.500000
blocks collect and create a new block manager	block manager apply f axes filter do_integrity_check	1.000000
index with requested level removed if multiindex has	core indexes multi index droplevel level	0.333333
subtraction of two datetimeindexes	index sub datelike dti other	0.333333
new unit	core dtypes datetime tzdtype new cls unit	0.055556
for series columns	core ndframe	0.005051
and be table	hdfstore append key value format	0.016667
bool of a single	bool	0.043478
as series or by a series	groupby by axis level	0.045455
values at particular time of day e g	core ndframe at time time asof	0.066667
of value from	set value arr key value	0.038462
the size of the dtype	itemsize	0.027027
of styler with a	styler	0.022222
return a stringified and numeric for these values	io stringify na values na_values	0.333333
convert to our native types format slicing if	float block to native types slicer na_rep	0.250000
tree-like object that can be	io html frame parser	0.012195
detect terminal size and return tuple = width	util get terminal size	0.166667
tree-like object that can be used to iterate	parser	0.008000
of microseconds (>= 0 and	indexes timedelta index microseconds	0.066667
"pivot" table) based	frame pivot index columns	0.111111
simple	index columns values	0.037037
csv	from csv	0.066667
a parameter value using the with statement	plotting options use key value	0.250000
compute covariance with series excluding missing	core series cov other min_periods	0.200000
full scope for use with passing to	computation scope full scope	0.055556
compat	blklocs	0.166667
ndarray only use this	value	0.005155
:meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace	0.333333
only use	indexes index set value arr	0.023810
conform a set of sparseseries (with	core sparse	0.041667
going to write this as a frame table	io appendable multi series table write	0.333333
data columns	data	0.009709
whether each index value is found in	datetime index ops mixin isin	0.083333
stata date formats to a type	convert datetime to stata type	0.200000
from the table generally only indexables	io table read column column where start stop	0.250000
dataframe with multi-level index return new dataframe with	data frame reset	0.027778
and return a	core get	0.038462
multiindex at the requested level	multi index sortlevel level	0.250000
block manager from	core sparse to manager sdf columns index	0.052632
we always want to return a	period index shallow copy with infer values	0.200000
index objects sortedness of	range index	0.021739
put method to its	series put	0.055556
index objects contain the same	datetime index	0.007042
block manager from a dataframe of	core sparse to manager sdf columns	0.052632
match of regular expression pat	frame arr pat flags	0.166667
analogous to	axis broadcast reduce	0.500000
a regular expression	pat case flags	0.166667
builder	builder	1.000000
(for this class it's just __class__	core pandas object	1.000000
value	float array formatter value	0.250000
indexable columns	columns	0.017857
new chainmap or subclass with	compat chain map	0.032258
analogous to dataframe apply for	sparse data frame apply func axis broadcast reduce	0.333333
to dataframe	core data frame	0.005917
we take a string-like that is object dtype	string array data encoding	0.038462
and 'kwargs' should be	args kwargs	0.153846
the function to my values return a	func	0.011905
on a particular axis	axis	0.022727
need to coerce a scalar	index coerce scalar	0.250000
return the number of bytes in the	indexes range index nbytes	0.052632
construct dataframe from dict	data frame from dict cls	0.200000
of a series excluding elements from	series group	0.030303
and be table	io hdfstore append key value format	0.016667
for generation (e g	computation bin op	0.055556
values attribute if it has	series	0.006757
with nat which has the same length	nat new	0.050000
an xlwt	xlwt writer	0.500000
additional	index	0.002004
use	use	0.833333
via the 'numpy' library the	take with convert convert args	0.055556
index	indexes float64index	0.166667
convert each input to appropriate for table	table	0.010870
string-like array to	string to	0.166667
dicts to timestamp-keyed	compat d	0.125000
values excluding missing values	group by ohlc	0.250000
membership of x in	in x	0.166667
dataframe the levels in	data values	0.062500
holidays between start_date	calendar holidays	0.166667
values to be at least	block shape values ndim	0.050000
block	core block	0.065217
accelerate unioning a collection of indexes	indexes datetime index union many others	0.040000
validate that an positional indexer	has valid positional setitem indexer indexer	0.052632
table in file node must already exist and	append	0.012987
convert a scipy sparse coo_matrix to	sparse coo to sparse series	0.333333
prepare	prepare	0.357143
lookup of value from 1-dimensional ndarray only	core indexes period index get value	0.071429
columns of this dataframe	columns values	0.037037
of casting data from some accepted dtype	indexes numeric index assert safe casting cls data	0.047619
take which	core take nd arr indexer	0.125000
nat which has the same length as	nat new box	0.050000
result set	result	0.032787
we may create	new align inplace	0.125000
return an item pair from maps[0] raise keyerror	compat chain map popitem	0.055556
fillable	fillable	0.238095
concat all inputs as object	core dtypes concat index asobject to_concat name	0.250000
return all tables from the parsed dom	io html frame parser parse tables doc	1.000000
float values converted	float	0.024390
for a panel-like dataframe parameters	panel index time panels names	0.076923
create and return the axes	io table create axes axes obj validate	1.000000
is	core indexes datetime	0.011494
plural 'names'	validate names name names deep	0.125000
against frequency	freq cls freq	0.500000
ndarray of my hashed	indexes multi index hashed	0.166667
slice of	datetime tzblock slice slicer	0.083333
we have	core categorical validate ordered cls	0.055556
of nanoseconds (>= 0	indexes timedelta index nanoseconds	0.066667
convert to our native types format	core categorical block to native types slicer na_rep	0.250000
for a deprecated option if key is deprecated	deprecated option key	0.333333
normalized locales that do not throw an exception	util valid locales locales normalize	0.050000
in file	append key value format	0.016667
that they are valid stata	stata	0.022222
csv file (discouraged please use	from csv cls path header sep	0.066667
load a feather-format	io read feather	0.083333
immutable index implementing an ordered sliceable set intervalindex	interval index	0.090909
and 'kwargs' should be empty except for	args kwargs	0.076923
dropna if fill_value=nan returns a	dropna	0.066667
columns of a	inplace	0.027778
the result	result	0.016393
codes by the indexer	indexer	0.009174
parameters	from	0.060606
sunday use day thereafter monday instead	sunday to monday	0.333333
to parse	core tools parse	0.125000
to read from a url file or string	read	0.033333
determines if two index objects contain the same	indexes range index equals other	0.200000
and setup my atom from the block b	io data col set atom block block_items	0.200000
an intervalindex from a 1d array of interval	interval index from intervals	0.333333
value from 1-dimensional	indexes index set value arr key value	0.038462
create a new unit if	datetime tzdtype new cls unit tz	0.055556
dict of the kinds allowable columns for this	io table queryables	0.055556
after	core indexes index array	0.100000
string-like	string array	0.038462
set of unique elements of arr1 and	equal contents arr1	0.066667
compute pairwise correlation	frame corr method	0.500000
is an	core dtypes interval dtype is	0.066667
localize tz-naive timeseries to target time zone	ndframe tz localize tz axis level copy	1.000000
array interface return	array result	0.125000
values can	values	0.008547
the text display value of	io formats styler	0.021277
if you	indexes index set value arr	0.023810
the datetime format of a given datetime string	datetime format dt_str dayfirst dt_str_parse dt_str_split	0.250000
panel to a specified number	panel	0.017857
add in logical methods	index add logical methods cls	1.000000
to convert datetime-like to	dt index cmp opname nat_result	0.066667
to appropriate for table	table	0.010870
merge boxplot/kdeplot properties to passed kwds	plotting hist plot make plot keywords kwds y	1.000000
coerces data to	coerce to	0.333333
the selection	io selection select	0.500000
after a ufunc needs additional handling	index array wrap result context	0.034483
type t or tuple of	type t	0.083333
to the feather-format	io to feather df path	0.250000
values between particular times	indexes datetime index indexer between	0.125000
and plural 'names' parameter	names deep	0.125000
return a formatter	io formats get	0.100000
check if the object is a number	core dtypes is number obj	1.000000
convert timeseries to specified	ndframe asfreq	0.250000
from the first	arr	0.013699
by the indexer fill with the	indexer allow_fill	0.050000
that can be used to iterate over	frame parser	0.012500
for akima	akima	0.142857
returns the float values converted into	io formats float array	0.055556
to_strip	to_strip	1.000000
under the index	index	0.002004
string in the series/index ends with passed pattern	core str endswith arr pat na	0.333333
starargs attribute was changed to be more flexible	base expr visitor visit call 35 node side	0.066667
excel writer registry you must use this method	register writer klass	1.000000
most likely frequency given the input	warn	0.100000
select coordinates row numbers from	read coordinates where start stop	1.000000
the	html frame parser build	0.014706
an positional	indexer has valid positional setitem	0.250000
cast to datetimeindex	core indexes period index to timestamp freq how	1.000000
deprecate a keyword argument of a function parameters	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
dispatch to apply we	by mixin apply func name	0.050000
single block and	core block	0.010870
alpha	alpha	1.000000
a tree-like object that	frame	0.009091
for first non-na/null value	core data frame first valid index	0.250000
extension against the writer's supported extensions	extension cls ext	0.333333
list/array of tuples	tuples cls	0.250000
value occupying requested label default to specified missing	sparse series get label default	0.083333
be	io hdfstore append key value	0.016667
after a ufunc	core indexes index array wrap result context	0.200000
of pattern or regular expression in	pat flags	0.052632
build an xpath expression to simulate bs4's ability	build xpath expr	0.200000
object to input numpy dtype	core ndframe astype dtype copy errors	0.500000
create and return the block manager from	sparse to manager sdf columns	0.052632
return a list of the axis indicies	panel extract axes data axes	0.142857
attempt to infer better dtype for object columns	core ndframe convert datetime numeric timedelta coerce	0.071429
construct an intervalindex from a 1d array of	from intervals cls	0.125000
'numpy' library the third	numpy validate take with convert convert	0.055556
return the node with the key or none	io hdfstore get node key	0.083333
return the list of row elements from the	io	0.003012
highlight the maximum	highlight max subset	0.333333
a	categorical block is	0.100000
of x not in	core computation not in x	0.166667
put single value at passed column and index	set value index col value takeable	1.000000
1-dimensional ndarray only use this	core indexes index set value arr	0.023810
allows a decorator to	args decorator	0.111111
sets the categorical to be ordered	core categorical as ordered	1.000000
tree-like object that can be used to	parser	0.008000
the size of the	itemsize	0.027027
locator based on a distance	auto date locator get locator dmin dmax	0.250000
make a repr function return fillvalue for	repr fillvalue	0.083333
make a multiindex	indexes multi	0.014493
use this if	index set value arr key	0.023810
of group excluding	core data frame group by	0.500000
nanargmin	nanargmin	1.000000
locator	auto date locator get locator	0.062500
actual dtype that we	dtype cls dtype	0.125000
ndarray	data index columns	0.125000
determine if dtype is valid for	n is valid dtype n method dtype	0.142857
node must already exist and be	io hdfstore append key value format	0.016667
interval in the index	interval index	0.090909
alert a user about a malformed	python parser alert malformed msg row_num	0.500000
a	indexes period	0.034483
series extract groups from the first	extract frame	0.047619
options	packb	0.022727
write this as a frame table	appendable multi series table write	0.333333
safe	safe	0.714286
validates	core	0.001326
the totally ordered cartesian product of all	index labels shape sort xnull	0.066667
verbose	verbose	1.000000
we have mixed levels	have mixed levels	0.200000
sort multiindex at the requested level	multi index sortlevel level	0.250000
the block manager from	to manager sdf	0.052632
to	parser build	0.014706
leap	is leap	0.125000
a particular axis parameters	axis	0.022727
interpret	val pandas_dtype	0.500000
a recursive call	compat recursive	0.166667
return the internal repr of this data	core series values	0.250000
convert string-like and string-like array to convert	core dtypes maybe convert string to	0.250000
index value is found	datetime index ops mixin isin	0.083333
for a particular dataframe invoked by unicode df	core series unicode	0.166667
to dispatch to	stats ensure compat dispatch name	0.500000
microseconds (>= 0 and	timedelta index microseconds	0.066667
to shift without copying data the shifted	slice shift periods axis	0.083333
of each interval in the	interval	0.029412
length slice	slice	0.038462
parse the raw	parse raw	1.000000
init self from ndarray or list of lists	init matrix data index	1.000000
path's extension	extension	0.111111
set my pandas type &	io fixed set object	0.200000
occupying requested label default	series get label default	0.083333
convert to our native types	to native types slicer na_rep date_format	0.250000
the info for this name	io get info info name	0.333333
multiindex at	indexes multi	0.014493
add series to dataframe in specified	core data frame set item key	0.250000
elements of arr1 and arr2 are	contents arr1 arr2	0.066667
object is a named	dtypes is named	1.000000
to shift without copying data the shifted	ndframe slice shift periods axis	0.083333
the number of	indexes	0.009302
for datetimelike properties of the	period properties	0.052632
read csv	core data frame from csv cls path	0.066667
return the block manager from a dataframe	manager sdf	0.052632
return an item pair	compat chain map popitem	0.055556
package	package pkg_name	0.083333
return dtype and n/a values to	empty dtype and	0.125000
must be sparseseries or sparsearray	core sparse maybe to sparse	1.000000
type is	core dtypes interval dtype is	0.066667
sql and params args	params sql params	0.200000
value occupying requested label default to	series get label default	0.083333
passed type is an actual dtype that we	dtype is dtype cls dtype	0.086957
a categorical	categorical	0.067308
along a given axis	axis method	0.250000
returns a dataframe with the rows/columns switched	data frame transpose	0.333333
openpyxl v2 1	io openpyxl20writer	0.035714
stop_seq	cls stop_seq	1.000000
this is index for series columns for	core	0.001326
internal method to handle na filling	fillable values indices	0.125000
categorical by default	core categorical sort	0.166667
read csv file (discouraged please use :func	core data frame from csv cls path	0.066667
index with custombusinessday as the	core indexes cdate range start end periods	0.083333
fast	core indexes	0.004762
number of seconds (>= 0 and	indexes timedelta index seconds	0.066667
only	only	1.000000
return the len of	size	0.041667
string matches a regular expression	flags	0.029412
coerce a scalar to a compat for our	core indexes period index coerce scalar to	0.071429
index names to 'index' for regular or 'level_x'	io json set default names	0.500000
series with multiindex to	core series	0.008000
format my specific	interval index format	0.500000
remove and return an item pair from	chain map popitem	0.055556
pick the best locator based	date locator get locator	0.062500
dispatch to apply we are	apply func name	0.050000
substrings from each element in	arr start stop step	0.333333
the where statement is of the	where w	0.083333
validates that we have a valid ordered	ordered cls ordered	0.058824
calculate slice bound that corresponds	slice bound	0.200000
a panel-like dataframe	time panels names	0.076923
compute a simple cross-tabulation	core reshape crosstab index	0.066667
this if	indexes index set value arr	0.023810
detect terminal	terminal	0.166667
fill_value and	fill_value	0.033333
as a sparse	sparse series as sparse	0.250000
locator based on	pandas auto date locator get locator	0.062500
ndarray only use this	indexes categorical index	0.047619
that we have a	ordered cls	0.055556
read csv file (discouraged please use	data frame from csv	0.066667
new copy of maps[0]	copy	0.012821
cases to get lines 0) there are headers	python parser get index name	0.166667
tree-like object that can be used	io html frame parser	0.012195
series/index by indicated	str	0.017544
for accumulating data to be	list	0.034483
called via the 'numpy' library the	compat numpy validate take with convert convert	0.055556
we have	multi index have	0.142857
and major_axis	core	0.001326
never a	core categorical block	0.100000
ensure that we	indexes datetime index ops mixin ensure	1.000000
that converts json lists to line delimited	convert to line delimits s	0.166667
return a tree-like object that	io html frame	0.012987
v	searchsorted v	0.033333
checks that all the labels are datetime objects	core indexes numeric index is all dates	0.333333
called via the 'numpy' library the	numpy validate take with	0.055556
that we	core block is	0.090909
index	indexes index validate names name	0.066667
to postive here	maybe convert indices indices n	0.166667
the len	size	0.041667
wrapper function for series arithmetic operations to	core comp method series op name	0.333333
the formatted data as	indexes index formatter func	0.083333
a dataframe to	core data frame	0.005917
drop 2d from panel holding passed axis constant	panel dropna axis how inplace	0.200000
must already exist and be table	hdfstore append key value	0.016667
given a date in xport	io sas parse	0.066667
check that left and right dataframe are equal	assert frame equal left right check_dtype	0.333333
array of python datetime date objects (namely	indexes datetime index	0.007634
already exist and be	hdfstore append key value	0.016667
the float values converted into strings using	io formats float array formatter get result	0.055556
only use	arr key	0.023810
for series	core bool method series	0.333333
return a new extended blocks givin the result	core extend blocks result blocks	0.333333
single dtype if dtype is	simple blockify tuples dtype	0.111111
saturday or sunday use previous friday instead	previous friday dt	0.250000
we by	by	0.038462
is	core indexes datetime index	0.007634
to construct this type from a	dtype construct from string	0.166667
get the category labels	get labels	0.500000
sorted copy	sort values return_indexer ascending	0.500000
styler removing any previously applied styles	styler clear	0.333333
draw histogram of the dataframe's series	plotting hist frame data column by	0.200000
to shift without copying data the shifted data	core ndframe slice shift periods	0.083333
unaryop	unaryop	1.000000
x not in y if possible	computation not in x y	0.066667
if we have bytes decode them	io ensure decoded s	0.166667
lookup of value	index set value arr key value	0.038462
helper function to determine if	dtype n method	0.125000
read csv file (discouraged	csv cls path	0.066667
a dataframe to a sql database	sqldatabase to sql frame	0.500000
evaluate the block return result block from	block eval func	0.333333
deleting the node	io	0.003012
this function is called via the 'numpy' library	validate take with convert	0.055556
read csv file (discouraged please use :func	series from csv cls path sep	0.066667
gets called	core indexes period	0.032258
delete single item from singleblockmanager	single block manager delete item	1.000000
save workbook to	openpyxl1writer save	0.333333
kwargs suitable for initializing	kwargs cls	0.040000
and index	value index	0.333333
that can be used	io html frame parser	0.012195
to the new type	dtype copy errors	0.250000
return value at the given quantile	series quantile	0.083333
specifications setup the internal grouper	grouper set grouper obj sort	0.250000
to ndarray raises on scalar data converts	to ndarray cls data	0.166667
curve with holidays between start_date and end_date	holidays start end return_name	0.066667
return a formatter function for a	io formats get	0.100000
resampling from	resampler from selection	0.142857
numpy array of python datetime date objects	indexes datetime	0.011494
compute pairwise correlation of columns excluding	core data frame corr method min_periods	0.111111
packed bytes see :class packer for	msgpack packb	0.025641
compute variance of	group by var ddof	0.166667
using pre-computed indexer	axis indexer method axis fill_value	0.500000
starting at the end of	rsplit arr pat n	0.037037
sql database table	sql table table_name con schema	1.000000
for instances of pandasobject	any pandas objects	0.250000
object o and return packed bytes see :class	msgpack packb o	0.055556
via the 'numpy' library the	validate take with convert convert args kwargs	0.055556
to convert datetime-like to	index cmp opname nat_result	0.066667
swap level i	index swaplevel i	0.333333
table in file node must	hdfstore append key value	0.016667
cut where we convert	cut	0.100000
moving window of type window_type on the	apply window mean how	0.166667
1-dimensional ndarray only use this if you	arr	0.013699
'info axis' see indexing for more	ndframe keys	0.083333
provide coercion to our input	block try coerce	1.000000
to write this as a	write	0.035714
perform generic binary operation with	series binop other func level	0.333333
mapped to their default values as specified	default values	0.200000
going to write this as a frame	write	0.017857
in engineering notation appending a letter representing	eng formatter call	0.142857
write this as	write	0.035714
index with requested level removed if multiindex	core indexes multi index droplevel level	0.333333
the index and its underlying data	range index	0.021739
that is datetimelike (e	core indexes maybe to datetimelike data copy	0.142857
checks whether the	check for	0.333333
1-dimensional ndarray	indexes index set value	0.023810
the series/index by indicated number	core str	0.011364
create a new unit if needed otherwise return	core dtypes datetime tzdtype new cls unit	0.055556
times to midnight length is	indexes datetime index	0.007634
to table	io hdfstore append key value format	0.016667
of the elements that are non-zero this method	series nonzero	0.166667
that is datetimelike	datetimelike	0.076923
alert a	python parser alert	0.200000
from 1-dimensional	core indexes index set value	0.023810
of a series excluding elements	series group	0.030303
to operate on as	try operate values	0.333333
for each level	indexes multi index	0.013158
synonym for	ndframe	0.005025
of the month	month	0.076923
if we do need a multi reindex this	series needs reindex multi axes	0.333333
capture stderr	capture stderr f	0.055556
to iterate	parser build	0.014706
gets called prior to a	series array prepare result	0.111111
beginning	tseries date offset beg	0.166667
bytes in	core indexes multi index nbytes deep	0.052632
the float values	io formats float array formatter	0.055556
1-dimensional ndarray only use	indexes index set	0.023810
value from 1-dimensional ndarray only use this if	datetime index get value series	0.071429
resolve a variable name in	core computation scope resolve	0.166667
and string-like array to convert	convert string to	0.250000
masked rec array and create the manager	core masked rec array to mgr data index	0.500000
a new unit if needed otherwise return from	new cls unit	0.055556
of both multiindex	multi index equal	1.000000
xport	xport	1.000000
value from 1-dimensional ndarray only use	categorical index get value series key	0.100000
the categories	get categories	0.333333
index's frequency if	ndframe tshift periods freq axis	0.333333
cast the	cast	0.058824
see	msgpack	0.022222
return the header	parser parse thead	0.111111
be used to iterate over	html	0.011765
instances of pandasobject	core computation any pandas objects	0.250000
a temporary path and agrees	util ensure clean filename return_filelike	0.200000
table in file node must already exist	value	0.005155
formatted data as a unicode string	core indexes index formatter func	0.083333
intervalindex from a 1d array	index from intervals cls data	0.125000
*this is an	core indexes categorical index	0.095238
converts from one of the stata date	stata	0.022222
the series extract groups from the first	extract frame arr	0.047619
array return an array of	util hash array vals	0.083333
resample of a	index	0.006012
the day (e g 9 00-9 30 am)	time start_time end_time include_start include_end	0.200000
from	key	0.005051
this is	ndframe	0.005025
of the elements that are non-zero this method	core series nonzero	0.166667
dataframe sorted by the n smallest values of	core data frame nsmallest n	0.166667
you	index set value arr	0.023810
ndarray or list	index columns dtype	0.125000
can be	html	0.011765
:class	msgpack	0.022222
csv	csv cls path header	0.066667
columns for dataframe and major_axis for	ndframe	0.005025
file node must	format	0.012346
read an	fixed read	1.000000
dataframe	data x y by	0.333333
suitable for a panel-like dataframe	panel index time panels names	0.076923
to	io html frame parser	0.012195
or functions	core ndframe rename axis	0.333333
check that left and right dataframe are equal	frame equal left right check_dtype check_index_type	0.333333
totally ordered cartesian product of all possible	index labels shape sort xnull	0.066667
number of unique elements in the	ops mixin nunique dropna	0.083333
a spreadsheet-style pivot table as a dataframe	reshape pivot table data values	0.166667
slice of panel along minor axis parameters	core panel minor xs key	0.166667
not supported for panel objects	panel to	0.027027
the td elements from a row element	html frame parser parse td obj	0.083333
window of type window_type and size window on	rolling window arg window win_type	0.100000
insert item at	core block manager insert loc item	0.500000
returns a curve with holidays between start_date	holidays start end return_name	0.066667
with times to midnight	core	0.001326
options grouped	options	0.041667
draw a matrix of scatter plots	plotting scatter matrix frame alpha figsize ax	1.000000
return the block manager from a dataframe	manager sdf columns	0.052632
make a copy of this object names dtype	index copy names dtype	0.333333
if you	index set value arr	0.023810
which	index	0.002004
read csv file (discouraged please	csv cls path sep parse_dates	0.066667
pairwise correlation of columns excluding	core data frame corr method	0.111111
whether the installed version of openpyxl is	is compat major_ver	0.111111
must already exist and	io hdfstore append key value	0.016667
specialized intersection for datetimeindex objects may be much	datetime index intersection	0.142857
str acessor	string accessor	0.250000
gets	index array wrap	0.066667
return the formatted data as a unicode	indexes index formatter func	0.083333
masked rec array	masked rec array	0.250000
a new datacol with	name cname	0.111111
fixed frequency timedelta	timedelta range start end	0.333333
given an interval or intervalindex return the	core indexes get	0.125000
ndarray	indexes index set value arr	0.023810
fixed frequency datetime index with business day	indexes bdate range start end periods	0.083333
1-dimensional ndarray only use this if you	core indexes index set value arr	0.023810
axis	ndframe	0.005025
to accelerate unioning a collection of indexes	indexes datetime index union many others	0.040000
new multiindex inserting new item at location	core indexes multi index insert loc item	0.333333
parameter if	core categorical validate	0.055556
with the fill_value	fill_value	0.033333
is monotonic increasing only equal or increasing values	is monotonic increasing	1.000000
index or ndarray filled with	core indexes datetime index ops mixin	0.029412
type that can be coerced to	period index simple new cls	0.142857
if the data is sparse|dense	series ftypes	0.250000
schema resets the	io	0.003012
table in file node must already exist and	hdfstore append key value	0.016667
reduction type operation if we can	index ops mixin reduce op	0.083333
find indices where elements of v	v	0.026316
return a fixed frequency timedelta index with day	core indexes timedelta range start end	0.083333
for series columns for dataframe	core ndframe	0.005051
holiday object with a	tseries abstract holiday	0.100000
1-dimensional ndarray only use this	indexes index	0.007353
statistical measure using supplied function designed to be	apply func name window center	0.250000
number of nanoseconds (>= 0 and less	core indexes timedelta index nanoseconds	0.066667
of	datetime index	0.007042
draw	frame data column	1.000000
parameter	cls	0.016949
keyerror is maps[0]	compat chain	0.034483
locator based	locator get locator	0.062500
box function to	box func	0.142857
a set of subplots already made	subplots naxes sharex sharey squeeze	0.166667
label if label is not	label	0.028571
can be used to iterate over	io html frame parser build	0.014706
table as a dataframe	table data values	0.200000
get integer location	index get loc	1.000000
check that left and right	left right check_exact check_dtype	0.333333
downsample	index resampler downsample	0.200000
instances of all the	util all	0.055556
this is called upon unpickling rather than	indexes new datetime index cls d	0.111111
sure that time	ensure like indices time	0.125000
first non-na/null value	data frame first valid index	0.250000
the 'numpy' library the third	compat numpy validate take with	0.055556
sanitize an index type to return	core sanitize index data index copy	0.200000
array of datetime time	datetime	0.006711
an asof merge this	core reshape merge asof	0.071429
return the number of bytes in the	range index nbytes	0.052632
coerce	coerce	0.256410
in the series/index by indicated	core str repeat arr	0.045455
the counts of ftypes in	ftype counts	0.125000
a boolean whether i can attempt conversion	core indexes is convertible	0.333333
infer better dtype for object columns	core ndframe convert datetime numeric timedelta coerce	0.071429
shape of the values to	block shape values ndim shape	0.083333
table in	io hdfstore append key value format	0.016667
union of two index objects and	core indexes range index union other	0.083333
return an array repr of this	period index	0.024390
are unique	unique	0.090909
already	key value format	0.016667
rewrite the	rewrite assign tok	0.125000
the correct class for resampling with groupby	resampler for grouping groupby	0.333333
styler with	formats styler	0.021739
the union of	core indexes multi index union	0.333333
an indexer like _name	indexer cls name indexer	0.083333
concat all inputs as	concat index asobject to_concat name	1.000000
comparison operations to convert datetime-like to datetime64	period index cmp opname nat_result	0.066667
on our axes compute the expected nrows	io table nrows expected	0.142857
apply we are stripping	mixin apply	0.050000
we want to set	core series set	0.076923
stripping all of the _upsample kwargs and	group by mixin apply f	0.166667
a masked rec array and create the manager	masked rec array to mgr data	0.500000
csv file (discouraged	core data frame from csv cls path header	0.066667
transform only applicable to	series group by transform	0.250000
a particular	extension dtype bytes	0.142857
fast lookup of	core indexes	0.004762
a ndarray like into a	parser	0.008000
a string-like that	convert string array data encoding	0.038462
is an actual dtype that	core dtypes period dtype is dtype cls dtype	0.142857
the vectorized membership of x in	computation in x	0.166667
create the grouper indexers	grouper obj	0.142857
1-dimensional ndarray only use	index set value	0.023810
the date belongs to a leap	index is leap	0.125000
cssto	cssto	1.000000
reorders categories as specified in new_categories	categorical reorder categories new_categories ordered	1.000000
if 'series argmin' is called via the	skipna skipna	0.100000
i want to construct this block as an	categorical block array	0.333333
return a tree-like	frame parser	0.012500
csv file (discouraged please	csv cls path sep	0.066667
to deprecate a keyword argument of	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
seconds (>= 0 and less than	core indexes timedelta index seconds	0.066667
return a categorical adjusted for groupby	core indexes categorical index codes for groupby	0.333333
expanding count of	stats expanding count arg	0.200000
style	style cls	0.250000
according to indexer and return	nd indexer axis	0.043478
index	datetime index ops	0.068966
of sparse/dense and dtype)	core ndframe	0.005051
return a basegrouper	get	0.007143
and return the op string for	bin op generate	0.066667
as object	mixin	0.037037
evaluate the block return result block from the	block eval func other	0.333333
dtype str of the underlying data	core indexes index dtype str	0.333333
value from 1-dimensional ndarray only use this if	datetime index get value series key	0.071429
an object dtype but could really be ints/strings	tools attempt yyyymmdd	0.333333
index	core data frame set value index	0.500000
resample	index resampler	0.065217
isnull	isnull	1.000000
terms for instances of pandasobject	any pandas objects terms	0.250000
minimum values along an axis	datetime index ops mixin argmin axis	0.250000
an ndarray copy if specified coerce to the	index dtype copy	0.043478
value inplace return	value mgr	0.083333
string-like attributes from the	core	0.001326
from a masked rec array and create	masked rec array to	0.090909
defined as a copy with	core indexes multi index view cls	0.047619
that time and panels are conformable	like indices time panels	0.250000
whether the 'name' parameter for	io validate	0.031250
this	arr key	0.023810
return a tree-like	parser build	0.014706
series excluding elements from	series group	0.030303
columns excluding na/null values	data frame	0.005714
indices where elements of v should be	indexes frozen ndarray searchsorted v	0.033333
that can be used	parser build	0.014706
box function to get object from	ops mixin box func	0.142857
only use this	core indexes index	0.007042
node must already	append	0.012987
repr of this	indexes period index	0.035714
convert to our native types	block to native types slicer na_rep	0.250000
table	series table	0.200000
union of two index objects and	index union other	0.037037
our index type	index item	0.100000
or values in the sparseseries	core sparse sparse series	0.125000
returns the float	formats float array formatter get	0.055556
the underlying data	indexes multi	0.014493
values as an enumerated type or categorical	core factorize values	0.111111
the fractional part of	frac x precision	0.100000
shape of the	shape	0.047619
and return	get	0.007143
rewrite the assignment operator	rewrite assign tok	0.125000
validate this column return the compared against itemsize	index col validate col itemsize	1.000000
tree-like object that	io html	0.012987
the first element	item	0.050000
timedelta-like to	td index cmp	0.055556
'series argmin' is called	skipna skipna args kwargs	0.100000
values at particular time of day e	ndframe at time time asof	0.066667
of sparse/dense	core ndframe	0.005051
cross-tabulation	index	0.002004
without throwing an exception	lc	0.166667
specified dtype	dtype	0.010989
positional indexer	positional setitem indexer indexer	0.052632
indicies translate to postive here	core maybe convert indices indices n	0.166667
using a timegrouper	resample rule	0.166667
returns the float values converted	formats float array formatter	0.055556
at the new freq essentially a	resampler asfreq fill_value	0.066667
of unique elements of arr1 and arr2	arr1 arr2	0.066667
in the series/index starts with passed pattern	core str startswith arr pat na	0.333333
if we have bytes decode them	computation ensure decoded s	0.166667
return block for the diff of the values	core block diff n axis	0.333333
multiindex at	indexes multi index sortlevel	0.166667
concise listing of available options grouped by prefix	pp options list keys width _print	0.111111
interpolate values according to different	resampler interpolate method axis limit	0.166667
the underlying array which by-definition can	core indexes datetime index ops mixin	0.029412
unique elements in the object	index ops mixin nunique dropna	0.083333
make a copy	multi index copy	0.166667
return new dataframe with	data frame	0.005714
and plural 'names' parameter for multiindex	names name names deep	0.125000
comparison operations to convert datetime-like to	core indexes period index cmp opname nat_result	0.066667
called via the 'numpy' library the third	compat numpy validate take with	0.055556
perform the reduction type operation if we	index ops mixin reduce op name	0.083333
for this	core indexes	0.004762
datetimeindex	indexes datetime	0.022989
sparse values need to	sparse sparse array	0.043478
data to an ndarray copy	data index dtype copy	0.250000
and 'kwargs' should be empty because all of	args kwargs	0.076923
for given	core get mgr	1.000000
is called via the 'numpy' library	with convert convert	0.055556
is	interval dtype is	0.066667
apply	semi month offset apply	0.500000
cartesian product	labels shape sort	0.200000
returns number of unique elements in the group	core series group by nunique dropna	0.250000
add the operations to the cls evaluate the	add aggregate operations cls use_numexpr	0.500000
for a tz-aware type return	get tz tz	0.066667
simple cross-tabulation of	index	0.002004
with optional filling/interpolation designed for ordered data	ordered left right on left_on	0.333333
this	index set	0.022727
construct an intervalindex from	indexes interval index from arrays cls	0.166667
in its entirety only - where	fixed delete where start stop	0.333333
to iterate over	html frame	0.014706
apply the function	apply func	0.027027
type window_type and size window on the data	arg window win_type	0.100000
a latex tabular/longtable environment output	io formats latex formatter write result buf	0.200000
parse time strings to	to	0.006329
if the object is	core dtypes	0.018519
provide coercion to our input arguments	block try coerce args	1.000000
of value from 1-dimensional ndarray only use this	value arr key value	0.038462
the block manager from a dataframe of	manager sdf columns index	0.052632
returned from apply if as_index=true	index with as	0.200000
if the date belongs to a leap year	core indexes period index is leap year	0.142857
as the index (so we don't	core at indexer convert key key is_setter	0.090909
a	indexes index array wrap	0.100000
errors	errors	0.555556
alignment object parameters	alignment cls	0.333333
the categorical by category value returning	values inplace ascending na_position	0.071429
checks that dict	json parser check	0.250000
return the values at the new freq essentially	core resampler asfreq fill_value	0.066667
specialized intersection for	intersection	0.041667
the plot attribute for groupby	group by plot	0.062500
types to stata types returns	to stata type	0.142857
to	key	0.005051
property property synonym for as_blocks()	blocks	0.071429
specified frequency	ndframe asfreq freq	0.250000
hack to accelerate unioning a	union many others	0.040000
specialized intersection for datetimeindex objects may be much	indexes datetime index intersection	0.142857
be used	html frame parser	0.012658
create	create indexer cls name	0.500000
(header new_data) for header	io pop header name row index_col	0.200000
to a ufunc	context	0.023810
downsample the	core datetime index resampler downsample	0.200000
is called via the 'numpy' library the third	validate take with convert convert	0.055556
dispatch to apply we are stripping	mixin apply func name	0.050000
of value from 1-dimensional ndarray only use	categorical index get value	0.100000
a boolean whether this axes needs validation	ndframe indexer should validate iterable axis	0.166667
for series columns for dataframe major_axis for panel	ndframe iteritems	0.055556
a set of subplots	plotting subplots	0.125000
sif to datetime	date to datetime	0.250000
supported for panel objects and will	core panel to	0.027027
off to scipy interpolate	core interpolate scipy	0.250000
vectorized membership of x not in y	core computation not in x y	0.066667
provides	index resampler	0.065217
the reduction type operation if we can	core index ops mixin reduce op name axis	0.083333
to convert to	to	0.006329
can be used to	io html frame parser build	0.014706
must be sparseseries or sparsearray	sparse maybe to sparse	1.000000
is valid for	n is valid	0.500000
entries in index	index	0.002004
a	core ndframe	0.010101
iterables parameters	cls iterables	1.000000
force all buffered modifications to be	io hdfstore flush fsync	0.200000
the expected nrows	io table nrows expected	0.142857
a new object with the replacement attributes	core selection mixin shallow copy obj obj_type	0.166667
the series extract groups from	str extract frame	0.047619
that can be used to iterate over the	html frame parser	0.012658
ensure that an array object has a float	core dtypes ensure float arr	1.000000
property property synonym	core ndframe	0.005051
slice points for level 0 assuming	multi index bounds	0.166667
the date axis x-axis	plotting format dateaxis subplot freq index	0.333333
op string	core computation bin op generate	0.066667
can be used	frame parser	0.012500
checks that all the labels are datetime objects	numeric index is all dates	0.333333
for parsers that parse html into dataframes	html frame parser	0.012658
get test result and reset test_results	core computation get test result	0.250000
underlying	multi index	0.020000
to construct this type from a	categorical dtype construct from string	0.166667
values as	values sort	0.333333
get new sparsedataframe	sparse sparse	0.034483
pack object	msgpack pack	1.000000
representation of object to	ndframe to	0.043478
singular 'name' parameter for general index and	core indexes index validate	0.066667
of type window_type and size window	rolling window arg window win_type	0.100000
if the object is list-like	core dtypes is list like	0.333333
works for monotonic decreasing	get fill indexer searchsorted target method limit	0.142857
shape of the categorical	core categorical shape	1.000000
necessary for making this object picklable	multi index reduce	0.333333
function that converts json lists to	to	0.006329
the plot attribute for groupby objects	plot	0.043478
transform	transform	0.583333
to take optional positional	util optional	0.066667
return packed bytes see :class	io msgpack packb	0.025641
float values converted into	formats float array formatter get	0.055556
this only if the process of casting	casting	0.076923
create a table reflecting the	create table setup	0.066667
strings in the	core	0.002653
sample	other pairwise	1.000000
moving window of type window_type on	window mean how	0.166667
a new index of the values set	core indexes index putmask	0.111111
new block	sparse block	0.250000
and create a new block	block	0.008197
and other to int64 with null values	values other	0.200000
of openpyxl is	compat is	0.111111
dataframe equivalent to read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
my self as a	series as	0.125000
manage style and color based on column number	plotting mplplot apply style colors colors kwds col_num	0.142857
the maximum by	max subset color	0.166667
a tree-like object that can be used	io html	0.012987
in file	hdfstore append key value format	0.016667
internal format currently just the	block internal values dtype	0.111111
to iterate over	io html frame parser build	0.014706
construct dataframe from dict of array-like	core data frame from dict cls data orient	0.200000
target time zone	tz	0.142857
the handle if	io stata	0.071429
rollforward	rollforward	1.000000
my values but densify first	core non consolidatable mix in	0.090909
of index	index b	0.041667
datetimelike dtype converting float	datetime value dtype errors	0.166667
or columns using input function or	axis copy inplace	0.055556
take the codes by the indexer fill	core categorical take nd indexer	0.333333
string and	string	0.018868
csv file (discouraged please	core series from csv cls path	0.066667
with times to midnight length is unaltered	index normalize	0.125000
of value from 1-dimensional ndarray only use this	arr key value	0.038462
float values converted into	io formats float	0.055556
take a string-like that is object	convert string array data encoding	0.038462
metadata for	read metadata	0.250000
to iterate over the	io html frame parser	0.012195
for the diff	diff n	0.333333
multiindex has only 2	multi	0.018182
and return a	get	0.007143
values between particular	between	0.086957
string starting at the end of the	rsplit arr	0.037037
return the ftypes (indication of	core ndframe ftypes	0.055556
given delimiter string starting at the	rsplit	0.031250
boolean if the passed type is	extension dtype is	0.125000
find all occurrences of	findall arr pat	0.250000
an expression	computation expr	1.000000
or regular expression	arr pat flags	0.062500
return them as a block	core block	0.010870
take	indexes index assert take	0.500000
localize tz-naive timeseries to target time zone	localize tz axis level copy	1.000000
if we have	indexes multi index have	0.142857
time part	time	0.052632
numpy doesn't like to	v string like	0.111111
of multiple iterables	iterables sortorder names	0.500000
of python datetime	core indexes datetime index	0.007634
convert to object if we are	index to safe for reshape	0.400000
return copy of the	copy	0.012821
delete given loc -s from block in-place	block delete loc	1.000000
version to operate on as the	core block try operate values	0.125000
this	indexes index	0.014706
create a new block manager	core block manager reduction f axis	0.250000
add	group by add	1.000000
return the categorical without null values	core categorical dropna	0.500000
string in the series/index by	core str repeat arr	0.045455
unordered	unordered	1.000000
return a string representation for	indexes index unicode	0.083333
difference of n between self	n axis	0.100000
dropna if fill_value=nan	dropna	0.066667
new block manager	core block manager	0.045455
handle na filling of take	multi index assert take fillable values	0.250000
called because a comparison between 8 aware arrays	index ops mixin evaluate compare other op	0.250000
return the number of bytes in the	nbytes deep	0.052632
of sparseseries (with nan	core sparse	0.041667
whether or not	io validate	0.031250
return the formatted data as a	indexes index formatter func	0.083333
number of bytes in	index nbytes	0.052632
that an positional indexer cannot	positional setitem indexer indexer	0.052632
with nat which has the	nat new	0.050000
a	period	0.050000
1-dimensional ndarray only use this	core	0.001326
dict	core dict	1.000000
makes sure that time and panels are conformable	time panels	0.250000
number of times	repeats	0.090909
validate this column return the compared	index col validate col	0.200000
pack object o and	packb o	0.055556
a type	type	0.024390
given a tuple	get	0.007143
string in the series/index by the	core str	0.011364
return a formatter function	get	0.007143
index for series columns for dataframe	ndframe	0.005025
access scalars quickly	scalar access indexer	1.000000
the we have a	name freq	0.083333
a string-like that is object dtype and coerce	string array data encoding	0.038462
from	from string	0.500000
fast path for	single block manager fast	0.250000
end	end	0.750000
objects suitable for initializing the gradientfill stop parameter	stop	0.050000
columns	data frame	0.005714
with a set of subplots	plotting subplots	0.125000
multiindex compute the slice	indexes multi index slice	0.250000
work as desired	index getitem key	0.166667
return all tables from the parsed	io html frame parser parse tables	1.000000
return a uint64 ndarray of my hashed	core indexes multi index hashed	0.166667
is_copy	is_copy	1.000000
attempt to construct this type from a string	dtype construct from string cls string	0.166667
to the dict of dtypes if	dtypes	0.015873
compute the slice	slice	0.038462
sort multiindex at the	multi	0.018182
datetimeindex with times to midnight length is	indexes	0.004651
represent time-seires	timeseries	0.166667
get lines 0) there are headers on row	python parser get index name	0.166667
return packed bytes see	msgpack	0.022222
internal method to handle na filling of take	index assert take fillable values indices allow_fill	0.250000
ndarray only use	set value	0.023256
return the unicode normal form	string methods normalize form	0.066667
to coerce a	maybe coerce freq	0.125000
indexer which is a dict	indexer indexer	0.071429
values	shape values ndim	0.050000
write out the binary feather-format	core data frame to feather fname	0.083333
operations to convert timedelta-like to timedelta64	indexes td index cmp opname nat_result	0.055556
try to read from a url file or	read obj	0.058824
the number of bytes in the underlying	indexes multi index nbytes deep	0.052632
new block with	block make block	0.100000
sunday use day	tseries sunday	0.200000
provides exponential weighted functions	ewm	0.125000
function to return the correct pandassql subclass	pandas sql builder con flavor schema meta	0.055556
a subset of a dataframe	core data frame	0.005917
interpolate	core resampler interpolate method axis limit	0.166667
exist and be	append key	0.016667
a temporary variable	tmp value	0.166667
of the values to be at	shape values ndim	0.050000
from	chain	0.031250
the passed type is an actual dtype	dtype is dtype cls dtype	0.043478
set the value inplace return	value	0.005155
that	frame parser build	0.014706
of value from	arr key value	0.038462
ndarray or list of lists	matrix data index columns dtype	0.500000
datetime date	core indexes datetime index	0.007634
we might need to coerce a code to	maybe coerce freq code	0.076923
error raised	error	0.028571
array do not copy by default	array kind fill_value copy	1.000000
can safely be cast	name val min_val	0.083333
sets names on levels warning	multi index set names names level	0.200000
a latex tabular/longtable environment output	formats latex formatter write result buf	0.200000
read csv	series from csv cls path sep	0.066667
an enumerated type or categorical variable	factorize	0.100000
required package is	package pkg_name min_version max_version	0.083333
convert to our native types	block to native types slicer na_rep quoting	0.250000
columns of	columns values	0.037037
positional indexer	has valid positional setitem indexer indexer	0.052632
if we define an builtin function	is builtin func	0.333333
categorical by hashing its categories and then mapping	categorical c encoding hash_key	0.142857
convert to our native types format	to native types slicer na_rep date_format quoting	0.250000
read from a	io read obj	0.058824
packed bytes see :class packer for options	msgpack	0.022222
new categorical by default	categorical sort values inplace	0.166667
maybe	maybe	0.454545
validate that an positional indexer cannot enlarge	positional setitem indexer indexer	0.052632
or list of lists	matrix data	0.250000
a simple cross-tabulation of	core	0.001326
read csv file (discouraged please use	core data frame from csv	0.066667
'numpy' library the third	numpy validate take with	0.055556
a table reflecting the structure of a dataframe	table setup	0.083333
a decorator to take	decorator	0.071429
a table reflecting the structure	table setup	0.083333
needs	array	0.013889
from 1-dimensional ndarray only use this if	indexes	0.004651
potentially casting	embed keep_tz	0.500000
post process	post	0.111111
input data_columns and min_itemize and create a data	io table validate data columns data_columns min_itemsize	1.000000
sets index names to 'index' for	names data	0.083333
my	core indexes index	0.007042
slice of my	core block slice slicer	0.083333
calcurate appropriate figure size based on	util table plotter get cells	1.000000
the plot attribute for	plot	0.043478
the built up styles	formats	0.031250
downsample the cython defined	datetime index resampler downsample how	0.200000
from 1-dimensional ndarray only use this if	core indexes index set value arr	0.023810
alias to closest period strings bq->q etc	tseries get period alias offset_str	1.000000
that we have	ordered	0.017857
the input value	value	0.005155
the values to	shape values	0.050000
the binary feather-format	core data frame to feather fname	0.083333
a ndarray like into	json parser	0.071429
exception and	contextmanager exception	0.166667
the series/index to be	core str	0.011364
length is	core indexes datetime	0.011494
of value from 1-dimensional ndarray only	indexes period index get value series key	0.071429
the block	for block cls	0.333333
provide concatenation of an datetimelike	dtypes concat datetime to_concat axis typs	0.142857
post process for	plotting mplplot post	0.333333
unary operation	unaryop op opstr	1.000000
be used to iterate	io html frame parser	0.012195
background_gradient that don't break with non-numeric data	maybe numeric slice df slice_ include_bool	0.500000
vectorized membership of x not in y	computation not in x y	0.066667
hist	hist	0.500000
if we define an builtin function for	selection mixin is builtin func	0.333333
representation for a particular object	mixin bytes	1.000000
check	core indexes index assert	1.000000
call a numpy function on a pandas	call	0.071429
timedelta-like to timedelta64	indexes td index cmp	0.055556
tuples or strings in each element in the	core	0.001326
: int slice	core data frame ixs	0.200000
of the required package	package pkg_name min_version max_version	0.083333
a	reshape	0.037037
control get_slice_bound	get loc only exact matches key	0.142857
aggregate using input function or dict of {column	group by aggregate arg	0.250000
only use this if you	indexes categorical	0.071429
like to compare numeric arrays vs scalar string-likes	dtypes is numeric v string like a b	1.000000
sequence of terms for	terms	0.034483
for series columns for dataframe	core	0.001326
a set of sparseseries (with nan fill_value) to	core sparse	0.041667
if the object is a	core dtypes is	0.085106
version of putmask	putmask	0.055556
csv file (discouraged	from csv cls path sep	0.066667
in sparsearray	sparse sparse array	0.043478
the underlying	core	0.002653
function is called via the 'numpy' library the	take with convert convert args	0.055556
hack to accelerate unioning a collection of indexes	index union many others	0.040000
return	core get	0.038462
read csv file (discouraged please use :func pandas	core series from csv	0.066667
an indexer like	indexer	0.009174
csv file (discouraged	data frame from csv cls path header	0.066667
to iterate	html frame parser	0.012658
that left and right index are equal	index equal left right exact	0.333333
a table reflecting the structure of a	table setup	0.083333
is of the string	dtypes is string	0.500000
elements of v	core indexes frozen ndarray searchsorted v	0.033333
offsets index to beginning	offset beg apply index i	0.333333
file node	key	0.005051
after a	indexes index	0.007353
determines if two index	indexes range index equals other	0.200000
only	indexes categorical	0.071429
exponential weighted	core ewm	1.000000
cumulative product for each group	group by cumprod axis	1.000000
create and return the block manager from	sparse to manager sdf	0.052632
decorator to deprecate a keyword argument of a	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
intervalindex from a 1d array of	from intervals cls data name	0.125000
the reindex for all	reindex	0.062500
if we are not	core	0.001326
copy of a series	series	0.006757
datetime	indexes datetime index	0.007634
construct this type from	interval dtype construct from	0.166667
datetimelike (e	core indexes maybe to datetimelike data copy	0.142857
to take optional	optional	0.050000
nancorr	nancorr	1.000000
the 'numpy' library	compat numpy validate take with	0.055556
if holiday falls on sunday use day	tseries sunday	0.200000
called via the 'numpy' library	numpy validate take with	0.055556
x in y if possible otherwise	in x y	0.047619
type is an actual dtype that	dtypes interval dtype is dtype cls dtype	0.142857
running code that expects to	util assert produces warning	0.071429
max_seq_items	max_seq_items	1.000000
lists/tuples into dataframes with proper type inference	io text parser	0.333333
'numpy' library	numpy validate take with convert convert args kwargs	0.055556
create an	ndframe create	0.500000
used to iterate	frame parser build	0.014706
to convert datetimelike-keyed dicts to timestamp-keyed dict	dict compat d	0.142857
multiindex	indexes multi	0.115942
parameter value using the	value	0.005155
indices where elements of v	indexes frozen ndarray searchsorted v	0.033333
a tree-like object that can	io html frame parser	0.012195
are index sliceable then	core convert to index sliceable	0.083333
to the	core block2d to	0.500000
algos groupsort_indexer implements counting sort and	get group index sorter group_index ngroups	0.250000
exist and	io hdfstore append	0.016667
value from 1-dimensional ndarray only use this if	core indexes categorical index get value series key	0.100000
o and return packed bytes	msgpack packb o	0.055556
from 1-dimensional	core indexes index set	0.023810
index with business	core indexes	0.004762
header	html frame parser parse thead	0.111111
compute covariance with series excluding missing values	series cov other min_periods	0.200000
data are	data frame dropna	0.333333
for temporarily setting a	new_locale lc_var	0.125000
quantile a	series quantile	0.083333
ndarray of the flattened values of the	index ravel order	0.037037
return index with requested level removed if multiindex	core indexes multi index droplevel level	0.333333
a new sparsearray	core sparse sparse	0.034483
other	indexes index validate for numeric binop other	1.000000
set	core series set	0.076923
values	from values values	0.333333
series	series	0.256757
operations to convert datetime-like	cmp opname nat_result	0.066667
form the union of two index	range index union other	0.083333
to specified frequency	asfreq freq method how normalize	0.250000
apply we are stripping	apply func	0.027027
are passed a list-like indexer return	indexes interval index convert list indexer keyarr kind	0.066667
exist and be table	io hdfstore append key value	0.016667
to preserve dtype	core putmask smart v m n	0.055556
representation used to tag	core computation replacer x	0.125000
values from passed panel or object coercible	update other join overwrite filter_func	0.055556
sets names on	index set names names level validate	0.200000
that we have a astypeable to categorical	is categorical astype dtype	0.333333
create and return the block manager from a	to manager sdf columns	0.052632
satisfy the boolean criterion specified by func	ndframe group by filter func	0.250000
and be table	key value	0.011628
sort multiindex	indexes multi index sortlevel	0.166667
true if this is a valid column name	is in table	0.076923
the float values converted into strings	formats float	0.055556
return an iterator over the boxed	indexes datetime index iter	0.250000
file node must already exist and be	io hdfstore	0.014493
object is list-like	dtypes is list like obj	1.000000
read from	io read	0.038462
padded hexadecimal id of obj	computation raw hex id obj	0.333333
the new type	dtype copy errors	0.250000
this if	indexes index set value	0.023810
datetime time the	indexes datetime	0.011494
of terms	terms	0.068966
general index	indexes index validate	0.066667
index and	core indexes index validate names	0.066667
table in file node must	hdfstore append	0.016667
file	io hdfstore	0.014493
we always want to return a periodindex	indexes period index shallow copy with infer values	0.200000
block try to preserve dtype if possible	putmask smart v m n	0.055556
the float values converted into strings using	float array formatter get result	0.055556
needs additional handling	indexes	0.004651
return the correct class for resampling with groupby	resampler get resampler for grouping groupby	1.000000
see dataframe pivot	core reshape pivot index columns	0.333333
list of the underlying data	index ops mixin tolist	0.333333
create a	sqlite table create	0.066667
draw histogram of the dataframe's	plotting hist frame data column	0.200000
only if the process of casting data from	casting cls data	0.047619
returns the float values converted	io formats float	0.055556
maps[0] raise keyerror	compat chain	0.034483
detect	detect	1.000000
the intersection of two index objects sortedness of	indexes range index intersection other	0.083333
if we are index sliceable then return	index sliceable	0.083333
the unicode normal form for the strings in	core string methods normalize form	0.066667
context manager for running code that expects	util assert produces warning expected_warning	0.071429
equivalent to read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
boolean if	ops mixin is	0.100000
take the codes by the	categorical take nd	0.200000
resolve a variable	resolve	0.090909
a new multiindex from the	indexes multi	0.014493
series containing only true/non-nan values possibly	core remove na series	0.166667
return label for first non-na/null value	core data frame first valid	0.250000
returns the float values	formats float array formatter get	0.055556
ensure that an array-like object is a categorical	dtypes ensure categorical arr	1.000000
a uint64 ndarray of my hashed values	index hashed values	0.166667
handling as	period index	0.024390
given an interval or	core indexes get interval	0.125000
is an actual dtype	dtype is dtype cls dtype	0.043478
keyerror	chain map	0.034483
compute group sizes	core base grouper size	1.000000
determine if	core str match arr pat case	0.166667
a function to create an	core computation	0.047619
of sparse/dense and dtype) in this	core	0.001326
used	core ndframe	0.005051
to table in file node must already exist	key	0.005051
ndarray only	index set value arr	0.023810
take which	take nd	0.047619
needs additional	core indexes period	0.032258
on saturday use following monday instead	tseries next monday dt	0.250000
is called via the 'numpy' library the third	compat numpy validate take with convert convert args	0.055556
ndframe before and/or after some particular index value	ndframe truncate before after	1.000000
return index or	datetime index	0.007042
is datetimelike	datetimelike	0.076923
am an	index	0.002004
for :meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace	0.333333
determines if	ops mixin equals	1.000000
number	multi index	0.020000
resampling from a dataframe column	resampler from selection	0.142857
returns numpy array of python datetime	datetime	0.006711
a ufunc needs additional	context	0.023810
to	dtype to	1.000000
(header new_data) for	row index_col	0.500000
of index to	index	0.002004
each index value is found in the	index ops mixin isin values	0.083333
chainmap or subclass with	compat chain map	0.032258
numpy doesn't like to compare	like	0.058824
a hack to accelerate unioning a collection	datetime index union many others	0.040000
read sql database table	io sqldatabase read table table_name	1.000000
in file node must already exist and be	value	0.005155
the reduction type operation	core index ops mixin reduce op name axis	0.083333
return datetimeindex with times	datetime	0.006711
is datetimelike	to datetimelike	0.125000
slice of my values	core categorical block slice slicer	0.083333
that we	categorical validate ordered cls	0.055556
microseconds (>= 0	indexes timedelta index microseconds	0.066667
form the union of	core indexes multi index union	0.333333
in file	append	0.012987
the flattened values of the underlying	index ravel order	0.037037
string in the series extract groups from	extract frame arr	0.047619
boolean ndarray denoting	duplicated	0.166667
to parse datetime	parse	0.034483
construct an intervalindex from a 1d array	from intervals cls	0.125000
cast to datetimeindex	core indexes period index to timestamp	1.000000
'numpy' library the third	compat numpy validate take with convert convert	0.055556
o and return	msgpack packb o	0.055556
index objects	index ops mixin	0.019231
level 0 assuming	core indexes multi index bounds	0.166667
my hashed values	index hashed values	0.166667
fixed frequency	bdate range start	0.111111
stride into a higher freq with integer	cls value freq	0.083333
attribute if it	core series	0.008000
same as values but handles sparseness conversions ;	core series get values	1.000000
for making this object picklable	sparse sparse array setstate state	0.333333
alias for tz attribute	indexes datetime index tzinfo	1.000000
makes sure that time and	ensure like indices time	0.125000
the numexpr condition and filter	core computation expr evaluate	0.200000
:class packer for options	msgpack	0.022222
retrieve pandas object stored in file optionally based	io hdfstore select key	1.000000
row elements from the	io html	0.012987
positional indexer	valid positional setitem indexer indexer	0.052632
the risk of	subarr	0.050000
to iterate	frame	0.009091
and major_axis for	core ndframe	0.005051
init	init	0.714286
we have	name	0.025000
compatiable fill_value	fill_value	0.033333
create index with target's values (move/add/delete	multi index	0.020000
ensure that if we don't have	ensure valid	1.000000
the slice locations	slice locs start end step kind	0.083333
to table in file	io hdfstore append key value	0.016667
only the actual sparse values need	sparse sparse array	0.043478
function to return the correct pandassql subclass	io pandas sql builder con flavor schema meta	0.055556
value from 1-dimensional ndarray	indexes period index get value series key	0.071429
already	hdfstore append	0.016667
table in file	append key value format	0.016667
create and return the op string	op generate	0.066667
and expected error	exc_type exc_value trace_back	0.100000
a resample of	timedelta index resampler	0.066667
object coercible to panel	panel update other join overwrite filter_func	0.200000
slice the info axis of obj	core get info slice obj	0.500000
we have	indexes multi index have	0.142857
hack to accelerate unioning	union many others	0.040000
save workbook to disk	io openpyxl1writer save	0.333333
a "pivot" table) based on column	pivot index columns	0.111111
the 'usecols' parameter is	io evaluate usecols usecols names	0.083333
using a timegrouper	core group by resample rule	0.166667
array interface return my values	core indexes categorical index array dtype	0.125000
ndarray only use this	core indexes	0.004762
our native types format slicing if	native types slicer na_rep float_format decimal	0.200000
bytes see	io msgpack	0.025000
type is an	dtype is	0.032258
construct this type from a	dtype construct from string	0.166667
datetime format of a given datetime	datetime format dt_str dayfirst dt_str_parse dt_str_split	0.250000
a string-like	io convert string array data encoding	0.038462
group of given frequency str or offset	tseries get freq group freq	0.500000
index return new dataframe with	data frame reset	0.027778
style and color based on column number and	style	0.041667
times	indexes datetime index	0.007634
to	datetime index	0.007042
derivatives	derivatives	1.000000
a method to class python 2 and	method cls name func	0.076923
where elements of v	ndarray searchsorted v	0.033333
we have a float key and are	key	0.005051
to table	value format	0.016667
return appropriate class	result type result	0.250000
or all of the data are missing	core data	0.041667
return the counts of ftypes in this	get ftype counts	0.250000
like to compare	v string like	0.111111
node	key	0.005051
return the op string for	bin op generate	0.066667
read csv	from csv cls path sep	0.066667
node must already	io hdfstore append key value	0.016667
index with target's	index	0.002004
a valid ordered parameter if	validate ordered cls ordered	0.058824
lines 0) there are headers on	io python parser	0.250000
we need to coerce a scalar	indexes period index coerce scalar	0.250000
to capture stderr in a buffer so that	capture stderr	0.055556
apply a function column-wise row-wise or table-wase updating	io formats styler apply func axis subset	1.000000
table this is generally only useful to	column key column	0.142857
series/index by the given delimiter	str	0.017544
a typeerror if	core dtypes categorical	0.250000
to	io hdfstore append	0.016667
from	indexes index	0.007353
have a full length	full	0.071429
ndarray only	indexes index set value arr key	0.023810
the symmetric	symmetric	0.125000
the block manager from a dataframe	to manager sdf columns	0.052632
slice dictionary for these axes	for slice axes	0.333333
by	parser	0.008000
boolean list indicated if we have mixed	multi index have mixed	0.166667
a registered option	registered option	0.500000
(can't do in caller because the schema	jsontable writer init obj orient date_format double_precision	0.142857
return datetimeindex with times to midnight length is	indexes datetime index	0.007634
x not in y	not in x y	0.066667
bytes see :class packer for options	packb	0.022727
converts a style_dict to an openpyxl style	openpyxl1writer convert to style cls style_dict	0.166667
a fixed frequency timedelta index with day as	core indexes timedelta range start end periods	0.083333
an enumerated type or	factorize	0.100000
packer for	packb	0.022727
result block from the	core block	0.010870
to the :meth pandas dataframe reset_index function see	level drop name inplace	0.142857
this column return the	col	0.037037
that an positional indexer cannot enlarge its target	positional setitem indexer indexer	0.052632
function to determine if	n method	0.125000
any type that can be coerced to periods	core indexes period index simple new cls	0.142857
passed type is an actual dtype that	extension dtype is dtype cls dtype	0.111111
see if a url has a	is url url	0.047619
hash table-based unique uniques are returned in order	unique values	0.333333
return result block from the	core block	0.010870
convert from sif to datetime	elapsed date to datetime	0.250000
locates	date locator	1.000000
selected position	value allow_duplicates	0.500000
that converts json lists to line delimited json	json convert to line delimits s	0.200000
the generic stata	io stata	0.071429
true if the levels of both multiindex objects	core indexes multi index equal levels other	0.100000
exception raised	assert raises	0.200000
a dataframe to a tabular environment table you	data frame to latex buf columns col_space header	0.111111
version of putmask that potentially upcasts the result	core dtypes maybe upcast putmask result	0.200000
returns length of info axis	ndframe len	1.000000
are stripping all of the _upsample kwargs and	mixin apply f	0.166667
categorical	indexes categorical	0.285714
sparsearray only the actual sparse	core sparse sparse	0.034483
valid for scalar	can do	0.250000
after	wrap result	0.068182
function to determine if	dtype n method	0.125000
method to handle na filling	fillable values indices	0.125000
can be	io html	0.012987
dataframe apply for	core sparse sparse data frame apply func	0.166667
the metadata	metadata	0.100000
delegatedclass of a series that is datetimelike (e	indexes maybe to datetimelike data	0.142857
method to class python 2 and python	method cls	0.076923
tree-like object that can be	io html	0.012987
evaluate the block	eval func other raise_on_error	0.200000
set with the mask see also	mask value	0.250000
for series arithmetic operations	method series op	0.333333
compute a simple	values	0.008547
return the cached item item represents a label	ndframe get item cache item	0.333333
columns	ndframe	0.010050
stubnames	stubnames	1.000000
a ufunc	indexes index array wrap result context	0.200000
update index attributes e g freq depending on	indexes timedelta index maybe update attributes	0.200000
a new manager with the blocks	block manager combine blocks	0.250000
notebook	notebook	1.000000
for accumulating data to be converted	list	0.034483
value from 1-dimensional ndarray	core indexes datetime index get value series key	0.071429
new datacol with the block i	for block cls i name cname	0.333333
create a pytables index on the	io table create	0.142857
to write this	write	0.035714
apply	group by mixin apply	0.050000
the passed type is an actual dtype	core dtypes extension dtype is dtype cls dtype	0.111111
return the op string for this	bin op generate	0.066667
read sql query or database	read sql sql con index_col coerce_float	0.166667
have good categories	categorical validate categories cls categories fastpath	0.250000
ndarray only use this if	arr	0.013699
csv file	core series from csv cls path	0.066667
ndarray of the flattened values of	core indexes index ravel order	0.037037
get	core indexes multi index get	0.100000
supported for panel objects and will raise	core panel to	0.027027
additional	core indexes period	0.032258
try hard to parse datetime	tools parse	0.125000
given a	multi index get	0.100000
of the flattened values of	core indexes index ravel order	0.037037
level of	level	0.043478
1-dimensional ndarray only use this if you	value	0.005155
representing the totally ordered cartesian product of all	index labels shape sort xnull	0.066667
determines if two index objects contain the same	datetime index ops mixin equals other	0.200000
the info axis of	core get info	0.250000
writer :	write writer	1.000000
sql database table into a dataframe	sql table table_name con schema index_col	0.333333
to apply we	mixin apply func name	0.050000
make new multiindex inserting new item at location	core indexes multi index insert loc item	0.333333
set my pandas type &	fixed set object info	0.200000
general index and plural 'names'	core indexes index validate names name names deep	0.071429
index	core indexes index validate	0.066667
a simple cross-tabulation of	index columns values	0.037037
the underlying array	indexes datetime index ops mixin	0.029412
datetimeindex with times to midnight	datetime	0.006711
return an ndarray of the flattened values	indexes index ravel order	0.037037
of bytes in	index nbytes	0.052632
of ndframe	core ndframe to	0.040000
return datetimeindex with times to midnight length is	datetime	0.006711
return the td elements from a	html frame parser parse td obj	0.083333
ndim	ndim	1.000000
array interface return	core indexes multi index array dtype	0.125000
memory usage of my values	index memory usage deep	0.200000
alter default behavior on how float is formatted	eng float format accuracy use_eng_prefix	0.333333
string representation for a particular object	dtypes extension dtype repr	0.142857
of bytes in the	range index nbytes	0.052632
cross-tabulation	core reshape crosstab	0.066667
shade	formats styler highlight null	1.000000
single	core simple blockify tuples	0.125000
be	io	0.006024
multiple times in parallel	parallel	0.083333
given an interval or intervalindex return the	indexes get interval	0.125000
return a stringified and numeric for these values	values na_values	0.333333
microseconds (>= 0	core indexes timedelta index microseconds	0.066667
a leap year	leap year	0.142857
add in the	add	0.035714
return a	html frame parser	0.012658
a string-like that is	string array data encoding	0.038462
setup	grouper set	0.500000
validate that an positional	valid positional setitem	0.250000
be a single	new align inplace	0.125000
a list of the underlying data	index ops mixin tolist	0.333333
over	build	0.013514
read csv file (discouraged please use :func pandas	core series from csv cls path sep parse_dates	0.066667
maximum by shading	max subset color axis	0.166667
truncate	truncate	1.000000
create a new block manager	core block manager reduction	0.250000
dimensions as the	core ndframe	0.005051
construct dataframe from dict of array-like	core data frame from dict cls data	0.200000
if a url has a valid protocol	url url	0.045455
get the freq	plotting get ax freq	1.000000
the minimum value of the index	core indexes datetime index	0.007634
validate the passed dtype	ndframe validate dtype dtype	1.000000
to	io convert datetime to	0.166667
randu	randu	0.714286
that we have a	categorical	0.009615
set	manager set	1.000000
elements of arr1	contents arr1	0.066667
column values	values	0.008547
the number of bytes in	core indexes range index nbytes	0.052632
overrides ndarray argsort argsorts	series argsort	0.083333
underlying	indexes multi index	0.013158
the type not dtype instance associated with an	type arr_or_dtype	0.142857
block with	core block make block	0.100000
cast to datetimeindex of timestamps at *beginning*	to timestamp freq how copy	0.500000
inclusive	inclusive	1.000000
ndframe before and/or after some particular index value	ndframe truncate before after axis copy	1.000000
compute a simple cross-tabulation	crosstab	0.050000
to take the	core	0.001326
array of python datetime date objects (namely the	datetime index	0.007042
float values	formats float array formatter get	0.055556
dataframe and major_axis for	ndframe	0.005025
excel sheet parameters	excel	0.111111
alias to	alias	0.111111
for	indexes index	0.007353
1-dimensional ndarray only use this if you	core indexes index	0.007042
checks whether the 'name' parameter for parsing	io validate	0.031250
accelerate unioning a collection	index union many others	0.040000
a groupby implementation	period index resampler groupby	0.166667
for	ndframe	0.025126
in file node must	io hdfstore append key value format	0.016667
particular panel invoked by unicode df in py2	panel unicode	0.166667
return a tree-like object that can	html frame parser build	0.014706
of how to create the grouper indexers	grouper obj key axis level	0.142857
the same dimensions as	ndframe	0.005025
:class	io msgpack	0.025000
that left and right index are equal	assert index equal left right exact check_names	0.333333
deprecated use :meth	ascending sort_remaining	0.200000
whether the file is open	io hdfstore is open	0.250000
raise a typeerror if	core dtypes	0.018519
index names to 'index'	default names data	0.083333
this	indexes	0.009302
box function to get object from internal representation	core indexes datetime index ops mixin box func	0.142857
convert dataframe to dictionary	core data frame to dict orient	1.000000
the totally ordered	xnull	0.083333
a fixed frequency datetime	range start end periods	0.066667
a dataframe to the feather-format	io to feather df path	0.250000
y if possible otherwise	y	0.117647
object in hdfstore parameters	io hdfstore put	0.333333
totally ordered cartesian product of all possible label	shape sort xnull	0.066667
after	array wrap result	0.075000
from 1-dimensional ndarray only	value arr key	0.023810
the best locator based on a distance	auto date locator get locator dmin dmax	0.250000
the levels attribute is 1 or	io table is multi index	0.142857
array of whether each index value is	indexes datetime index ops	0.034483
index or ndarray filled	datetime index ops mixin	0.029412
gets called after	core indexes index array wrap result	0.100000
the view limits to the	time series date locator autoscale	0.055556
maximum value of	categorical max numeric_only	0.250000
table as a dataframe the levels	table data values	0.200000
find indices where elements of v should	v	0.026316
make new index with passed location -s deleted	core indexes categorical index delete loc	0.333333
use this	index set value arr key	0.023810
format the text display value	io formats styler format	0.500000
single block and	core block manager	0.022727
checks	parser check	0.200000
operations to convert timedelta-like to timedelta64	indexes td index cmp	0.055556
num_format_str	num_format_str	0.714286
types format slicing if	types slicer na_rep date_format quoting	0.200000
iterate over the	frame parser build	0.014706
try to cast the	block try cast	0.500000
method to handle na filling of take	multi index assert take fillable values indices	0.250000
bind a method to class python 2	bind method cls	0.200000
multi-level index return new dataframe with	data frame reset	0.027778
that left and right dataframe are equal	assert frame equal left right	0.333333
to coerce a scalar to a compat for	core indexes period index coerce scalar to	0.071429
return index with requested level removed if multiindex	indexes multi index droplevel level	0.333333
can be	io html frame parser	0.012195
specialized intersection for datetimeindex objects may	core indexes datetime index intersection other	0.142857
we opened it	io to hdf path_or_buf key value mode	0.166667
having a singular 'name' parameter for general index	core indexes index validate	0.066667
allow_duplicates	allow_duplicates	1.000000
with nat which has the	mixin nat new	0.050000
a valid ordered	categorical validate ordered cls ordered	0.058824
convenience function	xi yi x der	0.500000
of the values set	core	0.001326
by an error is encountered in pd read_csv	error	0.028571
of the values to be at least 1	core block shape values	0.050000
value from 1-dimensional ndarray only use	indexes datetime index get value series key	0.071429
a string or np dtype to a	to dtype dtype	0.083333
group series using mapper dict or	level as_index	0.111111
we are index sliceable then return my slicer	index sliceable obj	0.083333
i	i axis	1.000000
create a new unit if needed otherwise return	tzdtype new cls unit tz	0.055556
construct an intervalindex from a a	core indexes interval index from arrays cls	0.166667
determines if two index objects	range index equals other	0.200000
all of the _upsample kwargs and	core group by mixin apply f	0.166667
compressed	compressed	1.000000
sort multiindex at the	core indexes multi	0.014493
operations to convert datetime-like	dt index cmp opname nat_result	0.066667
attribute if it	core	0.001326
value from 1-dimensional ndarray only use this	indexes datetime index get value	0.071429
of regular expression pat	pat flags	0.105263
to table in	append key value	0.016667
we are index sliceable then return	to index sliceable obj key	0.083333
are index sliceable then return my slicer	to index sliceable	0.083333
called after a ufunc	period index array wrap result context	0.041667
a multi	multi	0.036364
dom	io html frame parser build doc	0.125000
font object	font cls	0.333333
checks classes are equal	util assert class equal left right exact obj	1.000000
intersection of two index objects	core indexes index intersection other	0.166667
index objects and sorts if possible	core indexes range index	0.021277
return datetimeindex with times to midnight length is	index	0.002004
transform	by transform	1.000000
sub-classes	data frame group by gotitem key ndim subset	0.333333
returns the float values converted into	formats float array formatter	0.055556
frequency is	freq	0.016129
float	float array formatter get result	0.055556
'numpy' library the third	validate take with convert convert	0.055556
return packed bytes see :class	msgpack	0.022222
ufunc needs additional	index array wrap result context	0.034483
stride	tseries resolution get stride	0.333333
function for series	arith method series	0.333333
sparse-compatible version of ndarray take	sparse series take indices axis	1.000000
a scipy sparse coo_matrix to a sparseseries	sparse coo to sparse series a dense_index	0.166667
multi	multi axes method	0.500000
convert to our native types format slicing if	datetime block to native types slicer	0.250000
the passed type is an actual dtype	extension dtype is dtype cls dtype	0.111111
string representation for this object	index unicode	0.083333
the indexer fill	nd indexer allow_fill	0.050000
ndarray only	core indexes index	0.007042
timedelta index with	indexes timedelta	0.083333
append to table in	append key value format append	0.125000
construct dataframe from dict of	data frame from dict cls data orient dtype	0.200000
corresponding json_table	io json as json	0.333333
is valid	n is valid dtype	0.500000
combine list-like of categorical-like unioning categories all	core dtypes union categoricals to_union sort_categories ignore_order	0.333333
the union of two multiindex objects sorting	multi index union other	0.066667
object and return the	io	0.003012
common ops mixin to support a	index ops mixin	0.019231
datetime date objects (namely the	core indexes datetime	0.011494
boolean if we are a single block and	block manager is	0.250000
the 'numpy' library the third	numpy validate take with convert	0.055556
len of	size	0.041667
a fixed frequency datetime index with business	indexes bdate range start	0.083333
the values at the new freq essentially a	resampler asfreq fill_value	0.066667
from the cartesian product of multiple iterables parameters	from product cls iterables sortorder names	1.000000
returns the indices that would sort the index	range index argsort	0.166667
block from the result	core block	0.010870
given axis	axis	0.022727
of tuples of the (attr formatted_value)	core indexes multi index format attrs	0.142857
to capture stderr in a buffer	capture stderr	0.055556
value for the dtype	value dtype	0.142857
specialized intersection for datetimeindex objects	core indexes datetime index intersection other	0.142857
in panel to a separate excel sheet parameters	core panel to excel path na_rep engine	0.111111
stata com/help cgi?datetime	stata elapsed vec dates fmt	0.250000
never a view	categorical block is view	0.200000
a dataframe the levels	data values	0.062500
read csv file (discouraged	data frame from csv cls path header sep	0.066667
csv file (discouraged please use :func	frame from csv cls path header	0.066667
dataframe in place using non-na values from	update other join overwrite filter_func	0.055556
background in a range according to	formats styler background	0.125000
update index attributes e g freq	datetime index maybe update attributes	0.200000
apply we are	apply func name	0.050000
gets called after a ufunc needs	period index array wrap result context	0.041667
datetimeindex with times to midnight length is	datetime index	0.007042
contextmanager	contextmanager	1.000000
compute covariance with series excluding missing values parameters	series cov other min_periods	0.200000
getitem defers to the underlying array	datetime index ops mixin getitem	0.250000
number of bytes in the underlying	indexes range index nbytes	0.052632
several cases to get	get index	0.200000
path and agrees	util ensure clean filename return_filelike	0.200000
write text representation of object to	to	0.006329
options for printing and	options	0.041667
the numpy array interface	categorical array dtype	0.500000
indicated if we have	multi index have	0.142857
draw	frame data	1.000000
create a new unit if	new cls unit tz	0.055556
structure for accumulating data to be converted into	list	0.034483
fast lookup	indexes index	0.007353
of the month	month end	0.100000
stderr	stderr f	0.125000
a 2d-nd reshape operation on a blockmanager	core block manager reshape nd axes	0.500000
function or functions	rename axis	0.333333
fixed frequency datetime index with day calendar as	indexes period range start end periods freq	0.083333
object and the specifications setup the internal grouper	core grouper set grouper obj sort	0.250000
tzblock	tzblock	0.384615
openpyxl v2 color objects suitable	io openpyxl20writer	0.035714
series	dtypes get series	0.250000
if we can set	can set	0.125000
string in the series extract groups from	extract frame	0.047619
the series/index ends with passed pattern	core str endswith arr pat	0.333333
casting data from some accepted dtype to	numeric index assert safe casting cls data	0.047619
sub-classes to	data frame gotitem key ndim subset	0.333333
defined as a copy with the same	core indexes multi index view cls	0.047619
return object with labels on given axis	frame dropna axis	0.142857
parse specified sheet s into a	io excel file parse	0.125000
provides a resample of	period	0.016667
return the number	indexes	0.009302
running code that expects to raise	util assert produces warning expected_warning	0.071429
for the aggregators	selection mixin aggregate arg	0.166667
do_integrity_check	do_integrity_check	1.000000
correct day for each date in i	index days i roll	0.500000
union of two index objects and sorts	indexes index union other	0.083333
index or ndarray filled	index ops	0.033333
boolean array of whether each index	indexes datetime index	0.007634
apply the given offset/observance to a datetimeindex of	holiday apply rule	0.200000
a data	data columns	0.250000
unstack a k a pivot series with multiindex	core series unstack level fill_value	0.333333
new unit if needed otherwise	dtypes datetime tzdtype new cls unit tz	0.055556
that time	like indices time	0.125000
return true if this is a valid field	core computation bin op is valid	0.500000
index with custombusinessday as the default	indexes cdate range start	0.083333
construct this type from a	categorical dtype construct from string cls	0.166667
to iterate over	frame parser build	0.014706
hash_key	hash_key	1.000000
display value	formats styler	0.021739
operations to convert datetime-like	core indexes dt index cmp opname nat_result	0.066667
validate this column return	index col validate col	0.200000
return my self as	core sparse sparse series as	0.125000
get	dtypes get dtype	0.500000
set my pandas	fixed set object	0.200000
ndarray	set value arr key	0.023810
window of type window_type and size window on	window arg window win_type min_periods	0.100000
the codes by the indexer fill with	indexer allow_fill	0.050000
a tree-like object that can	parser	0.008000
gets	core series array wrap result	0.100000
sets the view limits to the nearest multiples	plotting time series date locator autoscale	0.055556
return a string representation	core indexes index unicode	0.083333
series/index by indicated number of	str	0.017544
function of type t or tuple	is type t	0.083333
or object coercible	other join overwrite filter_func	0.076923
value for the dtype of the	value dtype	0.142857
purely integer-location based indexing for selection by	i loc indexer	0.142857
to shift without copying data the shifted data	core ndframe slice shift periods axis	0.083333
series extract groups from the first match of	str extract frame arr	0.047619
shade the background null_color for missing	io formats styler highlight null null_color	0.250000
particular dataframe invoked by unicode df	core series unicode	0.166667
dtype) in this	ndframe	0.005025
stride parameters	get stride from	0.333333
satisfy the boolean criterion specified by func	ndframe group by filter func dropna	0.250000
of timedeltas	format timedelta64 values nat_rep box	0.125000
the starargs attribute was changed to be more	base expr visitor visit call 35 node side	0.066667
caption on	caption caption	0.166667
packed bytes see	io msgpack packb	0.025641
pandas type to its	table type x	0.055556
types	types slicer na_rep quoting	0.200000
interpolate machinery	block interpolate with fill method axis inplace limit	0.200000
is valid	is valid dtype	0.500000
already exist	io hdfstore append	0.016667
of	timedelta	0.044444
reindex	core sparse block reindex	1.000000
is valid	is valid	0.250000
counts of ftypes in	ftype counts	0.125000
csv	data frame from csv cls path header sep	0.066667
with times to	core indexes datetime	0.011494
apply the given offset/observance to a	apply rule	0.200000
apply a function	formats styler apply func	1.000000
in file node must already exist and be	hdfstore append key value	0.016667
interpolate values according to	interpolate method	0.166667
series extract groups from the first match of	core str extract arr	0.066667
decorator to deprecate a keyword argument of	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
index value	core indexes datetime index ops	0.034483
of casting	indexes numeric index assert safe casting	0.125000
an	indexes datetime index	0.007634
compute the vectorized membership of x	x	0.086957
as a sparse	as sparse	0.250000
like to compare numeric	is numeric v string like	0.333333
require_all	require_all	1.000000
save workbook	io openpyxl1writer save	0.333333
if	dtypes categorical	0.250000
valid other	validate for numeric binop other op	0.500000
index objects contain the same elements	indexes float64index	0.166667
crosstab	crosstab	0.250000
a tree-like	frame	0.009091
object o and	o	0.043478
or return the error dataframe/dict	plotting mplplot parse errorbars label err	0.142857
single non-tuple	target	0.083333
in type_map	fmt	0.142857
true if the key is in	ndframe contains key	0.333333
columns using input function or functions	core ndframe rename axis mapper axis copy inplace	0.250000
series/index by indicated	str repeat arr	0.200000
use this if	indexes	0.004651
1-dimensional ndarray only use this if	value	0.005155
object that can be used to iterate over	parser	0.008000
dispatch to apply	by mixin apply func name	0.050000
boxplot	boxplot	1.000000
called	indexes period index array	0.050000
string-like that is object	io convert string array	0.038462
returns the float values converted into strings using	formats float array formatter get result	0.055556
1d array of	intervals cls data name	0.250000
where elements of v should	ndarray searchsorted v	0.033333
internal format currently just	block internal values dtype	0.111111
additional handling	indexes period index array wrap result	0.050000
best locator based on a distance	auto date locator get locator dmin dmax	0.250000
convert key value pairs to dataframe	data frame from items cls items columns orient	0.500000
for dataframe	core ndframe	0.005051
a list of term	term	0.083333
a string-like that is object dtype	convert string array data	0.038462
and jinja environment	cls searchpath name	0.500000
return a categorical	core indexes categorical	0.071429
the array interface	multi index array dtype	0.125000
file	hdfstore append	0.016667
we have bytes decode them to unicode	io ensure decoded s	0.166667
dimensions as	core	0.001326
values between	indexer between	0.125000
wrap op result to have	sparse wrap result name	1.000000
a	html	0.011765
resample of	period index resampler	0.062500
attribute if	core	0.001326
via the 'numpy' library	numpy validate take with convert convert args	0.055556
slice/take blocks	block manager slice take blocks	0.500000
python datetime date	indexes datetime	0.011494
return a dense representation	sparse sparse array get values fill	1.000000
the counts of	counts	0.111111
numpy doesn't like to compare	v string like	0.111111
a numeric	numeric	0.052632
ufunc needs additional	core indexes period index array wrap result context	0.041667
is the resampling from	core resampler from selection	0.200000
return the number of	core indexes multi index	0.013158
masked rec array and create the manager	core masked rec array to mgr data	0.500000
return datetimeindex with times to	indexes datetime	0.011494
of	value	0.005155
string a la re split	split	0.100000
compute pairwise correlation	frame corr	0.500000
we if the passed type is	interval dtype is	0.066667
lookup of value from 1-dimensional ndarray only	core indexes period index get value series key	0.071429
lookup of value from 1-dimensional ndarray only use	indexes index set value arr key value	0.038462
operations to convert timedelta-like	core indexes td index	0.055556
input value	value	0.005155
a subclass of styler with a custom template	styler from custom template	0.142857
must already exist	format	0.012346
for general index and plural 'names'	core indexes index validate names name names deep	0.071429
get lines 0) there are headers on row	io python parser get index name	0.166667
convenience function to return the correct pandassql subclass	io pandas sql builder con flavor schema meta	0.055556
fast lookup of value from 1-dimensional ndarray only	indexes datetime index get value series	0.071429
a new unit if needed otherwise return	dtypes datetime tzdtype new cls unit tz	0.055556
convert argument to timedelta	core tools to timedelta arg unit box	0.500000
not on offset	offset	0.055556
iterate over the blocks collect and create a	apply f axes filter do_integrity_check	0.083333
values from this selection take = take ownership	index col convert values nan_rep encoding	1.000000
determine if each	match arr pat case	0.166667
a simple cross-tabulation	reshape crosstab index	0.066667
elements of v should	indexes frozen ndarray searchsorted v	0.033333
block manager from a	manager sdf columns index	0.052632
coerce	core indexes period index coerce	0.125000
underlying array which	ops mixin	0.033333
for header rows in multiindex	header name	0.100000
provides a resample	index	0.006012
dataframe pivot	reshape pivot index columns	0.333333
validates that we have a	validate	0.027778
dict	dict cls data orient	0.166667
fast lookup of value	indexes index set value arr key value	0.038462
copy if specified coerce	copy	0.012821
deprecated use :meth pandas to_datetime instead	core indexes index to datetime dayfirst	1.000000
take values according to indexer and return	take nd indexer axis	0.250000
sorted by the n smallest values of	nsmallest n	0.333333
find indices where elements of v should	searchsorted v	0.033333
setting the name this allows simpler access to	ndframe setattr name	0.166667
from other to self	other	0.013514
the block return result block s	core block where other cond align	0.166667
determine if each string matches a	str match arr pat case	0.166667
to table	hdfstore append key value	0.016667
an op class with its symbol already passed	core computation op maker op_class op_symbol	1.000000
formats a	io formats	0.027778
decorator to	decorator	0.071429
parse the raw data into a list	frame parser parse raw data	0.250000
from observed group ids parameters	core decons obs group ids comp_ids obs_ids shape	0.500000
dtype) in this object	ndframe	0.005025
connect	connect	0.428571
in the series/index to be	core str	0.011364
indexed	is indexed	1.000000
an ndarray copy if	index dtype copy	0.043478
apply the function to my values	apply func	0.027027
an internal non-public method*	categorical index create categorical data categories ordered	0.333333
view limits to the nearest	time series date locator autoscale	0.055556
append to table in file node must already	format append	0.125000
reindex for all the axes	ndframe reindex axes axes	0.500000
left and right dataframe are equal	assert frame equal left right check_dtype	0.333333
columns to be read	columns	0.017857
the numeric	numeric	0.052632
applies the	series	0.006757
of each interval in the index	core indexes interval index	0.062500
of the _upsample kwargs and	mixin apply f	0.166667
wrap any results	resampler wrap result result	0.500000
outputs rounded and formatted percentiles	formats format percentiles percentiles	1.000000
only if the process of casting	indexes numeric index assert safe casting	0.125000
manipulation result has one higher dimension as the	core ndframe constructor expanddim	0.333333
is index for	core	0.001326
a copy of the sparsearray only	copy	0.012821
sunday use day thereafter monday instead	sunday to monday dt	0.333333
stata and	cast to stata	0.500000
value to	formatter value	0.250000
we always want to return a	index shallow copy with infer values	0.200000
of	set value arr key	0.023810
reduction type operation	index ops mixin reduce op name axis skipna	0.083333
float values converted into	formats float array	0.055556
validates that we have a	validate ordered	0.055556
wrap comparison operations to convert timedelta-like to	indexes td index cmp	0.055556
list-like indexer	indexes interval index convert list indexer keyarr kind	0.066667
we take a string-like that is	convert string array	0.038462
helper function to determine if	n method	0.125000
a new manager with the blocks	manager combine blocks	0.250000
and its label	label	0.028571
whether i can attempt conversion to a timedeltaindex	convertible to index	0.333333
of	set	0.012195
going to write this as a frame table	multi series table write obj	0.333333
in file node must already exist and	io hdfstore append key value	0.016667
new unit if needed otherwise	dtypes datetime tzdtype new cls unit	0.055556
window of type window_type and size window on	window arg window win_type	0.100000
the plot attribute	group by plot	0.062500
float values converted into strings using	io formats float array formatter get result as	0.055556
column	name data	0.250000
coerce a scalar to	index coerce scalar to	0.071429
cast	parser base cast	1.000000
a list of sql statement that create a	sqlite table create	0.066667
have a compatiable fill_value and arr	arr fill_value	0.090909
a new block manager parameters	core block manager	0.022727
long stacked format dataframe	data frame	0.005714
data types and ranges supported by stata	cast to stata types data	0.333333
correct pandassql subclass based on the	io pandas sql builder con flavor schema meta	0.055556
value from 1-dimensional ndarray	indexes index set value arr key value	0.038462
se the caption on a styler	formats styler set caption caption	0.333333
same type as the index (so we	at indexer convert key key is_setter	0.090909
pandas type to its corresponding json_table	io json as json table type x	0.250000
swap level i with level j do	index swaplevel i j	0.333333
interpolate values according to different	interpolate method axis limit	0.166667
the intersection of two index objects sortedness of	core indexes range index intersection other	0.083333
fast lookup of	core indexes index set value arr	0.023810
value from 1-dimensional ndarray only	datetime index get value series key	0.071429
to the :meth pandas dataframe reset_index function	level drop name inplace	0.142857
of bytes in the underlying	nbytes	0.046512
the array interface return my values	core sparse sparse series array result	0.250000
string-like that is object dtype and	string array data encoding	0.038462
we if the passed type is	core dtypes period dtype is	0.125000
insert item	block manager insert loc item	0.500000
x not in y if possible otherwise	core computation not in x y	0.066667
add a temporary variable to the scope	computation scope add tmp value	1.000000
the	timedelta	0.022222
after	indexes period index array wrap result	0.050000
sets index names	names	0.038462
boolean whether this axes needs validation	indexer should validate	0.166667
right data	right	0.045455
return a fixed frequency datetime index	core indexes bdate range start end	0.083333
copy of this sparsedataframe	core sparse sparse data frame copy	0.500000
are	numeric index is	0.333333
index with day calendar	indexes period	0.034483
return an item pair from maps[0] raise	chain map popitem	0.055556
gets called after	core indexes period	0.032258
read from a url file or	read	0.033333
for this indexable with the	io index col update	0.125000
an item pair from maps[0] raise	chain map popitem	0.055556
called via the 'numpy' library the	take with	0.055556
return the metadata pathname for	io table get metadata path	0.500000
the cached item item represents a	ndframe iget item cache item	0.090909
index for series columns for dataframe	core ndframe	0.005051
in the series extract groups from the first	core str extract	0.035714
you	index set value	0.023810
we by definition have do	io formats datetime64formatter format strings	0.090909
*not* the	other	0.013514
bool if we have only bool values but	block is bool	0.166667
columns for dataframe and	ndframe	0.005025
sets the view limits to the nearest	series date locator autoscale	0.055556
at particular time of day e	core ndframe at time time	0.066667
deprecated use :meth to_timestamp instead	indexes period index to datetime dayfirst	1.000000
use this if	set value	0.023256
string-like that is object	string array data encoding	0.038462
support a single assignment	core computation base expr visitor visit assign	1.000000
we are going to	obj data_columns	0.250000
a table reflecting the	table setup	0.083333
read text from clipboard and	read clipboard	0.200000
ndarray only	categorical index	0.045455
required package is	package pkg_name	0.083333
get integer	datetime index get	0.500000
series to dataframe in specified column	data frame set item key value	0.250000
iterate	io html	0.012987
boolean criterion specified by func	ndframe group by filter func dropna	0.250000
index if the frequency is	freq index	0.500000
the len of	core categorical size	0.111111
over the dom	parser build doc	0.125000
true if hash obj will succeed false otherwise	dtypes is hashable obj	1.000000
the array interface return	indexes interval index array result	0.125000
levels attribute is 1 or	io table is multi index	0.142857
environment table	latex	0.076923
sub-classes to define	core window gotitem key ndim subset	0.333333
given an interval or	indexes get interval	0.125000
slice substrings from each	slice arr start stop step	0.333333
built up styles to	io	0.003012
if multiindex has only	multi	0.018182
get the	get	0.014286
of all the various index	util all index	0.142857
convert to our native types	core datetime block to native types	0.250000
that can be used to iterate over	io html frame	0.012987
value from 1-dimensional ndarray only use this if	value arr key value	0.038462
fast transform path for	ndframe group by transform fast	0.333333
return rule name associated with a dateoffset object	tseries get offset name offset	0.500000
called	core indexes period index array wrap result	0.050000
concatenation of an datetimelike array of arrays	concat	0.058824
and return an item pair from maps[0] raise	chain map popitem	0.055556
by category value returning	ascending na_position	0.071429
/ or columns using input function or	copy inplace	0.055556
using one	inplace	0.027778
each has a homogeneous dtype	core ndframe as blocks copy	0.142857
to table in file	value	0.005155
to compare numeric	numeric v string	0.333333
make	make	0.625000
millisecond or microsecond	datetime index ops mixin resolution	0.125000
new categorical	categorical	0.009615
values to be	core block shape values ndim	0.050000
ensure that an array-like object is a categorical	core dtypes ensure categorical	1.000000
for	io get	1.000000
work as desired	core indexes index getitem key	0.166667
csv file (discouraged please	series from csv cls path	0.066667
and	value	0.005155
series columns for dataframe major_axis for	core ndframe iteritems	0.055556
a string-like that is object dtype and coerce	convert string array	0.038462
statement that create a table reflecting the structure	table create table setup	0.066667
handle 2-d slices equiv to	core panel apply 2d func	0.200000
compat for our index type	index item	0.100000
values as an enumerated type or	core factorize values sort order	0.111111
and return an item pair	chain map popitem	0.055556
convert tz-aware axis to target time zone	core ndframe tz convert tz axis level copy	0.200000
data are	data	0.009709
index for	core ndframe	0.005051
and be table	append key value	0.016667
and j	j copy	1.000000
of arr1 and arr2 are equivalent	arr1 arr2	0.066667
frequency datetime index with custombusinessday as the	indexes cdate range start end	0.083333
classes which	index	0.002004
index with passed location -s deleted	index delete loc	0.200000
additional handling	index array	0.033333
rewrite the assignment operator for pytables	rewrite assign	0.125000
with nat which has the	ops mixin nat new	0.050000
to table	hdfstore append key	0.016667
array interface return	multi index array dtype	0.125000
wrapper function for series arithmetic operations	core sparse arith method op	0.333333
frequency timedelta index with day as	indexes timedelta	0.083333
tuples of the (attr formatted_value)	indexes datetime index ops mixin format attrs	0.142857
arr to have shape new_shape, with	arr	0.013699
the passed type is an actual dtype that	dtypes extension dtype is dtype cls dtype	0.111111
if the process of casting data from some	safe casting cls data	0.047619
fast lookup	core indexes index set value	0.023810
requested level the	index sortlevel level	0.166667
handling	period index array wrap	0.050000
a user about a malformed	malformed msg row_num	0.100000
return boolean if values in the	ops mixin is	0.100000
manage style and color based	plotting mplplot apply style colors colors kwds col_num	0.142857
this getitem defers to the underlying array which	indexes datetime index ops mixin getitem key	0.333333
in file	io hdfstore append	0.016667
of one custom business month	custom business month	0.333333
filled with nat which has the	mixin nat new	0.050000
fallback pad/backfill get_indexer that works for monotonic decreasing	index get fill indexer searchsorted target method limit	0.142857
is an iterable but not a string	iterable not string	0.500000
get all the locales	util get locales	0.500000
argsorts the value omitting na/null values	axis kind order	0.250000
internal property property synonym	core ndframe	0.005051
object o and return packed bytes see :class	io msgpack packb o	0.055556
see :class packer for options	io msgpack packb	0.025641
get integer	core indexes period index get	0.500000
datetimelike	datetimelike data copy	0.125000
sub-classes to define	gotitem key ndim subset	0.333333
create and return the block manager from a	manager sdf	0.052632
tree-like	io html frame parser	0.012195
array of python datetime date	core indexes datetime index	0.007634
to indexer	indexer axis	0.043478
a particular dataframe invoked by unicode df	core data frame unicode	0.166667
used to tag	core computation replacer x	0.125000
return my self as a	as	0.066667
where :	where mask	1.000000
dataframe and major_axis for	core ndframe	0.005051
that can be coerced to periods	indexes period index simple new cls	0.142857
internal method to handle na filling of take	multi index assert take fillable values	0.250000
compute a	reshape crosstab index	0.066667
with labels in requested axis removed	core ndframe drop labels axis level inplace	0.250000
that	io html frame parser build	0.014706
in xport format return	io sas parse	0.066667
concatenation of an datetimelike array of arrays each	dtypes concat	0.100000
rewrite the assignment operator	computation rewrite	0.125000
the new freq essentially	core resampler asfreq fill_value	0.066667
n indexable columns with an arbitrary number	legacy table read where columns	0.111111
convert list of tuples to	tuples cls tuples sortorder names	0.250000
index value is found in	index ops mixin isin values	0.083333
node must already exist and be	append key value format	0.016667
called after a ufunc	index array wrap result context	0.068966
stderr in a buffer	stderr	0.076923
add in numeric unary methods	indexes index add numeric methods unary	1.000000
block and	block	0.008197
we	categorical validate ordered	0.055556
checks whether the	io python parser check for	0.500000
running code that expects to raise	util assert produces warning	0.071429
can be represented as uints	core indexes uint64index assert safe casting cls	1.000000
other to the end	other	0.013514
boolean if we need	core indexes index is	0.083333
s into a dataframe equivalent to read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
set new labels on multiindex defaults	core indexes multi index set labels labels	0.333333
kinds allowable columns for this object	io table queryables	0.055556
in	append key value	0.016667
to the underlying array which by-definition	core indexes datetime index ops mixin	0.029412
csv file (discouraged please use :func pandas read_csv	frame from csv	0.066667
from each group	core group by	0.027778
to capture stderr in a	capture stderr f	0.055556
exit	exit	1.000000
add in categorical accessor methods	core indexes categorical index add accessors cls	1.000000
plot attribute for groupby	plot	0.043478
non-na/null observations in sparsearray	sparse sparse array count	0.250000
cartesian product of all possible label	core get group index labels shape sort	0.200000
on	core rolling	0.250000
see :class packer	msgpack	0.022222
particular dataframe invoked by unicode df in py2	core series unicode	0.166667
be used to iterate over	frame	0.009091
input values as an enumerated type or categorical	core factorize values sort order	0.111111
construct this type from a	dtype construct from	0.166667
the series/index by indicated number	core str repeat	0.045455
called prior	array prepare	0.111111
argsort argsorts the	series argsort	0.083333
node must already exist and be	key value format	0.016667
render the built	io formats styler render	0.142857
context manager for running code that expects to	util assert produces warning expected_warning filter_level	0.071429
filled with nat which has the	ops mixin nat new	0.050000
pick the best locator	auto date locator get locator	0.062500
return a fixed	range start end periods	0.133333
try several cases to get	get index	0.200000
view limits to	series date locator autoscale	0.055556
wide panel	wide	0.142857
i am never a	core	0.001326
evaluate a python expression	core computation eval expr	0.083333
maximum by	max subset color	0.166667
in file node must	hdfstore append key	0.016667
dimensions levels names etc' nentries - number of	nentries nlevels prefix names	0.100000
removes the specified categories	categorical remove categories removals inplace	1.000000
series extract groups from the	extract	0.030303
engine class	engine	0.111111
of datetime time the	indexes datetime	0.011494
map	map	0.176471
in file node must already exist and be	key value format	0.016667
format the text display value of	io formats styler format	0.500000
set my pandas	io fixed set object info	0.200000
index or ndarray filled with nat which has	datetime index ops mixin nat new box	1.000000
a copy	copy	0.038462
the month	month begin	0.111111
the passed type is	extension dtype is	0.125000
x not in y if	computation not in x y	0.066667
datetimeindex of dates	dates	0.090909
synonym	ndframe	0.005025
cross-tabulation of	values	0.008547
fixed frequency datetime index	core indexes bdate range start end	0.083333
expanding count of number of non-nan observations	stats expanding count arg	0.200000
with an arbitrary number	legacy table read where	0.333333
locator	locator	0.285714
be	io html	0.012987
an	vals	0.090909
modify dataframe in place using non-na values from	update other join overwrite filter_func	0.055556
styles to	formats	0.031250
elements of v should be inserted in a	frozen ndarray searchsorted v	0.033333
list of sql statement that create a table	table create table	0.166667
encode character	encode	0.166667
database sql merge operation between two dataframe objects	merge operation	1.000000
the new freq essentially a	core resampler asfreq fill_value	0.066667
suitable for a panel-like dataframe parameters	time panels names	0.076923
compute covariance with series excluding	core series cov other min_periods	0.200000
sub-classes to define	core selection mixin gotitem key ndim subset	0.333333
index or minimum along an axis	datetime index ops mixin min axis	0.333333
sets names on levels warning	index set names names level	0.200000
object	to	0.006329
dispatch to apply we are stripping all of	apply	0.026316
from apply if as_index=true	with as	0.200000
the codes by the indexer fill with the	nd indexer	0.015152
a malformed row	malformed msg row_num	0.100000
unique elements of arr1 and	arr1	0.050000
/ try_operate	core time delta block	1.000000
this object close it if we opened it	io to hdf path_or_buf key value mode	0.166667
so prints a warning	warn	0.100000
of unique elements in the group	core series group by nunique dropna	0.250000
the 'numpy' library the third	take with convert convert args	0.055556
a string representation for this	indexes index unicode	0.083333
the list	sparse list	0.333333
tree-like object that can be used	io html frame parser build	0.014706
columns to be read as such	columns	0.017857
or ndarray filled with nat which has the	mixin nat new	0.050000
synonym for :meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace limit downcast	0.333333
not a floating index	core indexes index maybe cast indexer	0.200000
object that can be used to	parser build	0.014706
to apply we are	by mixin apply	0.050000
to specified frequency	asfreq freq method how	0.250000
fixed frequency	range start end	0.133333
'numpy' library the	numpy validate take with convert convert	0.055556
lookup of value from 1-dimensional ndarray only use	core indexes index set value arr key value	0.038462
defined as a copy with the same	index view cls	0.047619
the interpolate machinery	core block interpolate with fill method axis	0.200000
node with the key or	hdfstore get node key	0.083333
justify	justify	1.000000
of tuples to	tuples cls tuples sortorder names	0.250000
column-wise row-wise or table-wase updating the html	axis subset	0.250000
needs additional	indexes period index array wrap	0.050000
size and return tuple =	size	0.041667
table	append key	0.033333
of styler with	io formats styler from	0.076923
iter1 iter2 iterables	iter1 iter2	0.166667
if the date belongs to a leap	period index is leap	0.125000
make sure a valid	computation check	1.000000
a simple cross-tabulation	columns values	0.037037
barh	barh	1.000000
only use this if	categorical	0.009615
difference of n between self analagoust to	n axis	0.100000
rank the	core rank	1.000000
to designated axis labels	core reshape make axis dummies frame axis transform	0.166667
in the series extract groups from	core str extract	0.035714
index to be returned	index b	0.041667
a multiindex	core indexes multi	0.014493
axis1	axis1	1.000000
for dataframe	core	0.001326
incoming data can be represented as uints	indexes uint64index assert safe casting cls data	0.333333
returning a new object	ignore_index verify_integrity	0.250000
to the :meth pandas dataframe reset_index function see	drop name inplace	0.142857
fill_value=nan returns a dense	sparse sparse	0.034483
node must already exist and be	hdfstore append key value	0.016667
capture stderr in	util capture stderr f	0.055556
length of the index	core indexes index len	0.333333
only use this if you	set value arr key	0.023810
rearrange index levels using input order may not	series reorder levels order	0.333333
*this is an	categorical index is dtype	0.500000
our binners	set binner	0.333333
the required package is installed	package pkg_name	0.083333
packed bytes see	io msgpack	0.025000
1-dimensional ndarray only use this	index set	0.022727
datetimelike properties of	properties	0.046512
meta data array to the key	key	0.005051
a new categorical	core categorical	0.013889
type checking function of type	is type	0.125000
from a masked rec array and create	core masked rec array to	0.090909
csv file (discouraged please use :func pandas read_csv	data frame from csv cls path	0.066667
axis equal values	core ndframe rank axis	0.250000
the 'numpy' library the third	validate take with	0.055556
ndarray copy if specified coerce to the	index dtype copy	0.043478
cross-tabulation of	core reshape crosstab index columns values	0.066667
metaclass	add metaclass metaclass	0.125000
table in file	value format	0.016667
after a	index array	0.066667
return a fixed frequency datetime	bdate range start	0.111111
node must already exist and be table	io hdfstore append key value	0.016667
expression that is in	computation	0.038462
concat all inputs as object	dtypes concat index asobject to_concat name	0.250000
validates that we have a	core categorical validate ordered cls	0.055556
return	io msgpack	0.025000
in hdfstore parameters	io hdfstore put key value format append	0.333333
null_color for	null_color	0.076923
of type window_type and size window on	rolling window arg window win_type	0.100000
a boolean whether this axes needs validation	ndframe indexer should validate iterable	0.166667
data (produce a "pivot" table) based on	core data frame pivot index columns	0.200000
the float	formats float	0.055556
input values as an enumerated type or categorical	factorize values sort order	0.111111
if we if the passed type is	dtype is	0.064516
option if key is	option key	1.000000
makes sure that time and	core ensure like indices time	0.125000
prior to	prepare result	0.111111
can be used to iterate over	html frame parser	0.012658
return the counts of ftypes	ndframe get ftype counts	0.250000
in blockmanager	block manager	0.021277
append to table in file node	value format append	0.125000
returns length of info	len	0.071429
values attribute if it has	core series	0.008000
values along a given axis	values axis	1.000000
feather-format for dataframes	feather	0.050000
elements in the	core	0.001326
array interface return my	sparse sparse series array result	0.250000
prior	core series array prepare result	0.111111
str against frequency	freq cls freq	0.500000
localize tz-naive timeseries to target time zone	tz localize tz axis	1.000000
function is called via the 'numpy' library	numpy validate take with convert convert args kwargs	0.055556
process of casting data from	indexes numeric index assert safe casting cls data	0.047619
the float	io formats float array formatter get result	0.055556
a spreadsheet-style pivot table as a dataframe the	core reshape pivot table data	0.166667
the (attr formatted_value)	multi index format attrs	0.142857
sample covariance	cov other pairwise	1.000000
apply we are stripping	by mixin apply func	0.050000
representing the totally ordered cartesian product	shape sort xnull	0.066667
node with the key or none if it	get node key	0.083333
called after a	result	0.049180
all of the _apply kwargs and	func name window center	0.058824
by str df in both py2/py3	dtypes extension dtype str	0.250000
the totally ordered cartesian product of all possible	labels shape sort xnull	0.066667
difference of n between self analagoust to s-s	diff arr n axis	0.500000
fast lookup of value from 1-dimensional ndarray only	categorical index get value	0.100000
assert that we all have the same closed	interval index append same dtype to_concat	1.000000
a categorical adjusted for groupby	core indexes categorical index codes for groupby	0.333333
is open	is open	1.000000
a ufunc	core series array wrap result context	0.200000
pop	pop	1.000000
of the flattened values of the underlying	ravel order	0.037037
to an openpyxl style	io openpyxl1writer convert to style cls	0.500000
dataframe with labeling	core data frame reset	0.027778
alert a user about a malformed row	parser alert malformed msg row_num	0.500000
a series	sparse sparse series	0.200000
dataframe and	core ndframe	0.005051
table in	key value format	0.016667
totally ordered cartesian product	shape sort xnull	0.066667
return my current col description	index col col	0.500000
se the caption on a	caption caption	0.166667
to create holidays following certain rules	holiday calendar	0.333333
spreadsheet-style pivot table as a dataframe the	core reshape pivot table data values index	0.166667
1-dimensional ndarray only use this if	core indexes index	0.007042
return the data & release	data col take data	0.111111
return an ndarray of the flattened values of	core indexes index ravel order	0.037037
header of a table	io html frame parser parse thead table	0.333333
type checking function of type t or tuple	type t	0.083333
set of unique elements of arr1	util equal contents arr1	0.066667
bytes see :class	io msgpack	0.025000
from a	parse	0.034483
array interface return	array dtype	0.125000
is called via the 'numpy' library	compat numpy validate take with convert convert	0.055556
specialized intersection for	indexes datetime index intersection other	0.142857
number_format_dict	number_format_dict	1.000000
kwds in sparse	sparse	0.026316
a new object with the	core	0.001326
from observed group ids parameters	decons obs group ids comp_ids obs_ids shape	0.500000
columns for	ndframe	0.005025
function	func arg	0.142857
a decorator to	decorator	0.071429
find indices where elements of v should be	ndarray searchsorted v	0.033333
of value from 1-dimensional ndarray only use this	core indexes categorical index get value series key	0.100000
minimum value of the object	index ops mixin min	0.125000
repr function return fillvalue for a	repr fillvalue	0.083333
convert tz-aware axis to	core ndframe tz convert tz axis level copy	0.200000
return an indexer coerced to the codes dtype	categorical maybe coerce indexer indexer	0.125000
a slice of	block slice slicer	0.083333
a categorical by hashing its categories and	categorical c encoding hash_key	0.142857
that	dtype	0.010989
factory for a type checking function of type	is type	0.125000
dataframe as an html table	core data frame to html	0.250000
boolean if values in the	ops mixin is	0.100000
making this object picklable	sparse array setstate state	0.333333
'numpy' library	validate take with convert	0.055556
a dataframe sorted by the n smallest values	data frame nsmallest n	0.166667
a uint64 ndarray of my hashed values	multi index hashed values	0.166667
the list	core sparse sparse list	0.333333
return the correct class for resampling with	core resampler get resampler for grouping	1.000000
rows	fixed width reader get rows	0.500000
indices that would sort the index	core indexes index argsort	0.166667
set new labels on	set labels labels level	0.500000
supported for panel objects and	core panel to	0.027027
gets called after a	indexes period	0.034483
infer the	core dtypes infer	0.500000
list of normalized locales that do	util valid locales locales	0.050000
cut where	cut	0.100000
determines if two index objects	indexes range index equals other	0.200000
for :meth	inplace	0.055556
to dataframe parser that uses beautifulsoup under	beautiful soup html5lib frame parser	0.166667
ndarray or list	index	0.002004
construct an intervalindex from a 1d array	index from intervals cls	0.125000
we do need a multi reindex this is	series needs reindex multi axes method level	0.333333
we require the	datetime index simple new cls	0.250000
new unit if needed otherwise return from	datetime tzdtype new cls unit	0.055556
in the series/index by indicated number of	core str	0.011364
lists	matrix data	0.250000
datetime index with business day	indexes	0.004651
the block	io data col create for block	0.333333
calculate slice bound that corresponds to given label	index get slice bound label side kind	1.000000
numpy dtype	dtype dtype	0.100000
a new extended blocks givin the result	core extend blocks result blocks	0.333333
read csv file (discouraged please use :func pandas	from csv cls path header	0.066667
series columns for dataframe and major_axis for	ndframe	0.005025
union of two multiindex objects	index union other	0.037037
reindex	sparse block reindex	1.000000
series columns for dataframe	core	0.001326
objects	objects	1.000000
take	core take nd arr indexer	0.125000
valid other	index validate for numeric binop other op	0.500000
append to table in	hdfstore append key value format append	0.125000
accessor methods	accessors	0.166667
of a hack to accelerate unioning a collection	index union many others	0.040000
keyerror	chain	0.031250
necessary for	sparse	0.052632
of x in y	in x y	0.047619
the grouper indexers	grouper	0.058824
arr to have shape new_shape,	arr new_shape	0.142857
series sort_index	core series sortlevel level	1.000000
operations to the cls evaluate the doc strings	numeric operations cls	0.090909
stata date formats to a type in	convert datetime to stata type	0.200000
needs	indexes	0.004651
return a fixed frequency datetime index with business	indexes bdate range start	0.083333
each variable name a dict associating	io stata reader value labels	0.142857
wrap comparison operations to convert datetime-like to datetime64	indexes period index cmp opname nat_result	0.066667
a new manager with the	core block manager	0.022727
float key and are not a floating	maybe cast indexer key	0.333333
aggregate using input function or dict of	panel group by aggregate arg	0.250000
is defined as a copy with	multi index view cls	0.047619
given axis omitted where alternately any or all	frame dropna axis how thresh subset	0.100000
the same dimensions as	core	0.001326
a ufunc needs additional	indexes period index array wrap result context	0.041667
function that converts json lists to line delimited	convert to line delimits s	0.166667
the unicode normal form	core string methods normalize form	0.066667
or ndarray filled with nat which has the	nat new box	0.050000
into	parser	0.016000
a version to operate on	block try operate	0.333333
create index with target's values (move/add/delete values as	indexes multi index	0.013158
dtype from a scalar or array parameters	dtype from array	0.500000
best locator based	get locator	0.062500
parallel	parallel	0.500000
needs additional handling	indexes period index array	0.050000
perform merge	core reshape merge	0.166667
from	indexes index set	0.023810
get the values view mask	core get values values	0.125000
data types and ranges supported by stata	io cast to stata types data	0.333333
have	validate	0.027778
store object in hdfstore parameters	io hdfstore put	0.333333
compute a simple cross-tabulation of	reshape crosstab index columns	0.066667
validates that we have a	ordered	0.017857
sql statement that create a table	sqlite table create table	0.166667
return boolean if	ops mixin is	0.100000
series that is datetimelike (e	maybe to datetimelike data	0.142857
the blocks collect and create	axis consolidate transposed	0.062500
return an axes dictionary for the passed axes	construct axes dict from axes	0.333333
validates that we have	validate ordered cls	0.055556
fast lookup of value from 1-dimensional ndarray	core indexes period index get value	0.071429
the first match of regular expression pat	arr pat flags	0.062500
from 1-dimensional ndarray only use this if	core indexes index set value arr key	0.023810
types format slicing if desired	types slicer na_rep float_format	0.200000
nat_result	nat_result	1.000000
values as an enumerated type	core factorize values	0.111111
return index or	core indexes datetime index	0.007634
to handle na filling of	fillable values indices allow_fill fill_value	0.125000
convert to our native types format slicing	block to native types slicer na_rep	0.250000
backward to next offset only if not on	rollback	0.076923
nanoseconds (>= 0	core indexes timedelta index nanoseconds	0.066667
fixed frequency datetime index with custombusinessday as the	indexes cdate range start end	0.083333
compute	index columns values	0.037037
multiindex from the cartesian product of	indexes multi index from product	0.166667
ndarray copy if specified coerce to the	dtype copy	0.032258
iterator over	iter	0.090909
the series extract groups from the	extract frame	0.047619
input data_columns and min_itemize and create a	columns data_columns min_itemsize	0.200000
that we	cls	0.016949
ndarray	series	0.006757
string in the series extract groups from the	str extract	0.035714
to take optional positional	optional args	0.066667
result set coerce the	core dtypes coerce	0.066667
over the	parser	0.008000
categorical if not	categorical arr	0.125000
called prior	core series array prepare result	0.111111
returns a dataframe	sparse data frame	0.090909
return the counts of ftypes in this object	ndframe get ftype counts	0.250000
left and right index are equal	util assert almost equal left right check_exact	0.333333
and params args to dbapi2 0 compliant format	params	0.058824
operations to convert datetime-like	indexes dt index cmp opname nat_result	0.066667
the base	base	0.100000
that we	is	0.005291
of type	type	0.024390
with decimal stride into	decimal	0.058824
ndarray only use this if you	index set value arr	0.023810
compute	core reshape crosstab index columns values	0.066667
uint64 ndarray of my hashed	indexes multi index hashed	0.166667
coerces data to ndarray raises on scalar data	index coerce to ndarray cls data	0.166667
force all buffered modifications to	io hdfstore flush fsync	0.200000
provide concatenation of an	dtypes concat datetime to_concat axis typs	0.142857
s bears the risk	subarr	0.050000
be used to iterate over the dom	doc	0.071429
that an positional indexer	indexer has valid positional setitem indexer indexer	0.052632
from 1-dimensional ndarray only use	arr	0.013699
axis to the block_manager axis	core ndframe get block manager axis axis	0.166667
use this	value arr	0.023810
block i	io data col create for block cls i	0.333333
singular 'name' parameter for general index	core indexes index validate	0.066667
levels attribute is 1 or a list in	io table is multi index	0.142857
used	frame	0.009091
the name this allows simpler access to columns	core ndframe setattr name	0.166667
index to	index	0.004008
this if	core	0.001326
fast transform path for aggregations	core ndframe group by transform fast result obj	0.333333
series to a	series	0.006757
cases to get	get index name columns	0.200000
convert argument to datetime	core tools to datetime arg errors dayfirst yearfirst	1.000000
stata	stata	0.266667
font_dict	cls font_dict	1.000000
a list of tuples of the (attr formatted_value)	range index format attrs	0.142857
sum of non-na/null observations in sparsearray	sparse sparse array count	0.250000
of value from 1-dimensional ndarray only	core indexes period index get value series	0.071429
provide attribute-style access to a nested	wrapper	0.166667
panel objects and	panel	0.017857
mplskip	mplskip	1.000000
method to handle na filling	fillable values	0.125000
format try to deal with nat-like arg	arg errors	0.026316
index or	core indexes datetime index	0.007634
get new sparsedataframe	core sparse sparse data frame	0.058824
this is generally only useful to	select column key column	0.142857
as a frame table	io appendable multi series table	0.200000
packer for options	io	0.003012
list	sparse sparse list	0.333333
inplace return a new block (of	core block setitem indexer	0.066667
function designed to	func	0.011905
provides a resample	datetime	0.006711
dictionary	dict orient	1.000000
the underlying array which by-definition	ops mixin	0.033333
valid other evaluate or raise typeerror	other op opstr	0.500000
valid	valid dtype	0.500000
return result as block	block getitem block	0.250000
we take a string-like that is object dtype	io convert string array	0.038462
is called upon unpickling	index cls d	0.083333
fixed frequency datetime index with custombusinessday as the	core indexes cdate range start end	0.083333
with the block	io data col create for block cls	0.333333
a new block manager	core block manager reduction f	0.250000
in file node must	hdfstore	0.014925
nentries	nentries	1.000000
dataframe to a variable number of	core data frame	0.005917
gets called after	core	0.003979
need to coerce a	period index coerce	0.125000
return number of unique elements in the	ops mixin nunique dropna	0.083333
this object potentially casting to object	period index to embed keep_tz	0.333333
try to parse	try convert to	0.333333
with nat which has the same length as	nat new box	0.050000
not supported for panel objects and will raise	core panel to sparse	0.037037
index objects contain the same	core indexes float64index	0.166667
handling	core indexes period index array wrap	0.050000
count of	count arg	0.200000
abstract interface to	abstract	0.111111
a dataframe to	data frame	0.005714
query or database table	index_col coerce_float	0.062500
expanding count of number	stats expanding count arg	0.200000
correct dtype	data sparse_index fill_value	1.000000
value at the given quantile a	series quantile	0.083333
node must already exist and be table	hdfstore append key value format	0.016667
generic expanding function application	stats expanding apply arg func min_periods freq	1.000000
the 'numpy' library the	take with convert convert args	0.055556
when a manipulation result has the same	constructor	0.040000
function to convert datetimelike-keyed dicts to timestamp-keyed dict	dict compat d	0.142857
get a	dtypes get dtype	0.500000
stop kwds in sparse	sparse	0.026316
apply we are stripping	group by mixin apply func name	0.050000
the columns of	inplace	0.027778
a series excluding elements from	series group	0.030303
bool of a single element pandasobject	bool	0.043478
values and other to int64 with null	other	0.013514
frequency datetime index with custombusinessday as	core indexes cdate range start	0.083333
html	formats styler	0.021739
running code that expects to	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
the given delimiter string starting at the end	rsplit	0.031250
deal with nat-like arg is a passed	arg	0.018868
fill_value and arr dtype then fill	fill arr fill_value	0.333333
manager	manager reduction	1.000000
spreadsheet-style pivot table as a dataframe	reshape pivot table data	0.166667
array of python datetime date objects (namely	core indexes datetime index	0.007634
return an iterator over the boxed	core indexes datetime index iter	0.250000
manipulation result has one higher dimension as	ndframe constructor expanddim	0.333333
mixin to support a unified	mixin	0.074074
ndarray only use	arr	0.013699
to midnight length	core indexes datetime	0.011494
ndarray only use this if	arr key	0.023810
panel objects	panel to sparse	0.037037
a tree-like object that can be used	frame parser build	0.014706
rewrite the assignment	core computation rewrite assign tok	0.125000
create a filtered indexer that doesn't have any	indexer tuple indexer axes	0.333333
to apply	by mixin apply	0.050000
return the bool of a single	ndframe bool	0.055556
are positional indexer	index validate indexer form key kind	1.000000
node must already exist and	append	0.012987
into	io json parser	0.071429
parse datetime	parse time	0.125000
the index names defaulting	index level drop inplace col_level	0.166667
am never	core categorical	0.013889
that works through views note this is	is	0.005291
to	series to	0.333333
return	multi	0.018182
of kwargs suitable for	kwargs	0.022222
return the underlying data which	index	0.002004
return an axes dictionary for	core ndframe construct axes dict axes	0.166667
float key and are not	key	0.005051
ordered attribute	get ordered	0.333333
returns numpy array of python datetime date	indexes datetime	0.011494
shade the	io formats	0.027778
we have a dtype compat for the	name freq	0.083333
returns the float	io formats float array formatter get result	0.055556
wrap result set of	io wrap result	0.333333
arithmetic operations	op	0.136364
additional handling	array wrap result	0.025000
a new block (of a possibly	core block setitem indexer	0.066667
if it has	core	0.001326
text representation of object to the	core ndframe to	0.040000
convert to our native types format slicing	core float block to native types slicer	0.250000
take the codes by the indexer fill with	core categorical take nd indexer	0.333333
common sparseindex corresponding	homogenize series_dict	0.047619
new block try to preserve dtype if	putmask smart v m n	0.055556
the intersection of two index objects sortedness of	range index intersection other	0.083333
read from the store close it if	io read	0.038462
data to	indexes index coerce to	0.333333
a manipulation result has the	constructor	0.040000
new unit if needed otherwise return from	core dtypes datetime tzdtype new cls unit tz	0.055556
series concat	series	0.006757
temporarily setting a timezone	timezone tz	0.142857
and / or columns using input function	axis mapper axis copy inplace	0.055556
float values	io formats float array	0.055556
valid ordered	categorical validate ordered cls ordered	0.058824
for	core indexes datetime index	0.007634
openpyxl v2 color objects	io openpyxl20writer	0.035714
ufunc	wrap result context	0.088235
isin	isin	1.000000
along the other axes	core reshape concat objs	0.333333
quantile a la numpy percentile	quantile q interpolation	0.250000
return a formatter function for a range	formats get	0.090909
accessor object for datetimelike properties of	properties	0.046512
overrides ndarray argsort argsorts the value	series argsort	0.083333
item at selected position	loc item value allow_duplicates	1.000000
needs	core indexes period	0.032258
each level the function returns lengths of	io formats get level lengths levels sentinel	0.166667
converts a style_dict to an openpyxl style	to style cls style_dict	0.166667
unstack	unstack	0.833333
return a fixed frequency datetime index with day	core indexes period range start end periods freq	0.083333
registered	registered	0.857143
boolean whether this axes needs validation	core ndframe indexer should validate iterable axis	0.166667
pairwise correlation	frame corr method	0.500000
convert to our native types format	to native types slicer na_rep	0.250000
return our	resampler get	0.250000
dataframe with	data frame	0.005714
values and a date_format return a	values values date_format	0.250000
an item pair from maps[0] raise keyerror is	chain map popitem	0.055556
table	value format	0.033333
color background in	formats styler background gradient s cmap low high	0.142857
the float values converted	io formats float array formatter get	0.055556
be applied on each value to format	formatter value formatter float_format threshold	0.100000
index objects contain the same elements	index ops mixin	0.019231
return the data & release	io data col take data	0.111111
the underlying data	core indexes range index	0.021277
indexer cannot enlarge its	indexer indexer	0.071429
the binary feather-format for	data frame to feather fname	0.083333
parameter if	ordered cls	0.055556
can be used to iterate over	io html frame	0.012987
openpyxl v2 color objects suitable for initializing the	io openpyxl20writer	0.035714
return packed	io msgpack packb	0.025641
a range of timedeltas	format timedelta64 values nat_rep box	0.125000
seconds (>= 0	timedelta index seconds	0.066667
like to compare	string like	0.111111
series extract groups from the first	core str extract frame	0.047619
for a tz-aware type	tz tz	0.066667
called via the 'numpy' library the	take with convert convert args kwargs	0.055556
unstack a k a pivot series with multiindex	series unstack level	0.333333
level	plotting has level	0.333333
provide numeric type operations	numeric index	1.000000
a new multiindex from the	core indexes multi index	0.013158
fast lookup	value arr	0.023810
in panel to	panel to	0.027027
returns the float values	io formats float array formatter	0.055556
a string representation for a particular object	string mixin repr	0.333333
satisfy the boolean criterion specified	filter	0.117647
string starting at the end of	rsplit arr	0.037037
from 1-dimensional ndarray only use	value	0.005155
list representing the totally ordered cartesian product	shape sort xnull	0.066667
by hashing its categories and then	c encoding hash_key	0.200000
if arg is a string then	aggregate string function arg	1.000000
object that can be used to iterate	html	0.011765
of each group	core group by	0.055556
propagate metadata from other	ndframe finalize other method	0.333333
dtype and n/a values	core get empty dtype and	0.125000
create a pytables index	io table create	0.142857
iterate	html frame	0.014706
with nat-like arg is a passed	arg	0.018868
if the passed type is an actual dtype	is dtype cls dtype	0.043478
object dtype	core dtypes	0.037037
'np ndarray' is equivalent	numpy array equal left right strict_nan check_dtype	0.500000
that create a table reflecting the structure	sqlite table create table setup	0.066667
cast to datetimeindex	indexes period index to timestamp freq how	1.000000
method to class python 2 and	method cls name func	0.076923
validate the	ndframe validate	0.500000
this metaclass determines subclass ability	dtype type	0.400000
axis	axis method na_option	0.250000
am never	core categorical block	0.100000
the ftypes (indication of sparse/dense and dtype) in	ftypes	0.043478
need to coerce a	index coerce	0.125000
input	mapper axis copy	0.333333
deprecated option and if so prints	core warn if deprecated	0.166667
numpy array of datetime	indexes datetime	0.011494
python datetime date	datetime index	0.007042
calculate slice bound that corresponds to given label	core indexes index get slice bound label side	1.000000
only use	core indexes categorical	0.071429
the	multi	0.036364
o and	io msgpack packb o	0.055556
never a	block	0.008197
returns the float values	formats float	0.055556
a style_dict to an openpyxl style	to style cls style_dict	0.166667
arguments	args	0.111111
override this only if the process of casting	core indexes numeric index assert safe casting	0.125000
add in the datetimelike methods (as	ops mixin add datetimelike methods	0.333333
if fill_value=nan returns a dense	core sparse sparse	0.034483
given frequency str	get freq freq	1.000000
series containing only true/non-nan values possibly empty	core remove na series	0.166667
concatenation of an datetimelike array	core dtypes concat	0.100000
take boolean mask of index to be	index	0.002004
parameters	name	0.025000
return	chain	0.031250
sets the view limits to the nearest multiples	locator autoscale	0.055556
make sure a valid engine	computation check engine engine	0.333333
fromkeys	fromkeys	1.000000
a method to class python 2	method cls name	0.076923
only use this	index set value	0.023810
values to be at	block shape values	0.050000
might need to coerce	maybe coerce	0.125000
values can be	values name	0.166667
new type (if copy=true return a new copy)	block astype dtype copy errors	1.000000
in the series extract groups from the first	str extract frame	0.047619
cumulative product for	cumprod axis	0.500000
might need to coerce a code	tseries maybe coerce freq code	0.076923
the	parser build	0.014706
as an object	to object	0.500000
of value from 1-dimensional ndarray only	index set value arr key value	0.038462
codes by the indexer fill with	indexer	0.009174
a list of the index values	core indexes index tolist	0.333333
to deprecate a keyword argument of a	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
render a	buf columns col_space	0.500000
it has	series	0.006757
regular expression	pat flags	0.052632
necessary for making this object picklable	array setstate state	0.333333
1-dimensional ndarray only use this if you	index set value arr key	0.023810
unicode normal form for the strings	core string methods normalize form	0.066667
we have good categories	categorical validate categories cls categories fastpath	0.250000
fill_value=nan returns a dense	core sparse sparse	0.034483
for a recursive call	compat recursive	0.166667
get	core dtypes get dtype	0.500000
hash a categorical	hash categorical	1.000000
class	append	0.012987
exc_type	exc_type	1.000000
of regular expression	flags	0.058824
only	core indexes index set value	0.023810
identical	identical	1.000000
values but densify first	non consolidatable mix in	0.083333
for general index and	indexes index validate names name	0.066667
and are not a floating	maybe cast indexer	0.200000
whether this	validate	0.027778
python expression as a string using various backends	core computation eval expr parser engine truediv	0.500000
up styles to	formats styler	0.021739
convert tz-aware axis	ndframe tz convert tz axis level copy	0.200000
subtraction of two	other	0.013514
is an internal non-public method*	indexes categorical index create categorical data categories ordered	0.333333
that we have a	core categorical	0.013889
the maximum values along an axis	index ops mixin argmax axis	0.250000
object that can	io html	0.012987
to write this as a frame table	appendable multi series table write	0.333333
a registered option	get registered option	0.500000
groupby implementation	datetime index resampler groupby	0.166667
perioddtype this metaclass determines subclass ability	period dtype type	1.000000
index api sort the index	core indexes index sortlevel level ascending sort_remaining	0.250000
dateoffset of one month at beginning	month begin	0.111111
called after	indexes	0.009302
result block s from	core block where other cond align raise_on_error	0.066667
to handle na filling	fillable values indices	0.125000
provides a resample of a	index resampler	0.065217
index type	index	0.002004
set my pandas type &	fixed set	0.200000
header of a	io html frame parser parse thead	0.111111
the metadata for this	index col read metadata	0.250000
is defined as a	multi index view cls	0.047619
build an xpath expression	io build xpath expr attrs	0.200000
transform only applicable to	core series group by transform	0.250000
this if	core indexes index set	0.023810
if we are index sliceable then return	index sliceable obj key	0.083333
the float values converted	io formats float array formatter get result	0.055556
singleblockmanager	block manager	0.021277
wrap op result	core sparse wrap result	1.000000
in the series/index ends with passed pattern	core str endswith arr pat	0.333333
copy if	copy	0.012821
to the cls	cls	0.067797
defined	view cls	0.047619
over the	build	0.013514
with times to midnight length	index	0.002004
the starargs attribute was changed to be	base expr visitor visit call 35 node side	0.066667
count of number of	count	0.055556
and return the block manager from a dataframe	to manager sdf	0.052632
this if you	set value arr key	0.023810
values	args values	0.083333
we always want to return a periodindex	period index shallow copy with infer values	0.200000
to convert timedelta-like	indexes td	0.055556
/ pandas type to	type x	0.055556
times	repeats	0.090909
use this	arr key	0.023810
timeseries to specified	core ndframe asfreq	0.250000
nat which has the same	ops mixin nat new	0.050000
pandas type to	table type	0.055556
the required package is installed	package pkg_name min_version max_version	0.083333
the byte of	column	0.066667
add suffixes to overlapping entries	with suffix left lsuffix right rsuffix	0.250000
the indices that would sort	argsort	0.076923
a malformed row	malformed msg	0.100000
must already exist and be	io hdfstore	0.014493
names to 'index' for	names data	0.083333
of panel along major axis parameters	core panel major xs key	0.166667
fh	fh	1.000000
for dataframe and major_axis for	ndframe	0.005025
if the index is	core indexes index is	0.083333
coerces data to	core indexes index coerce to	0.333333
csv file (discouraged	core series from csv	0.066667
ordered multiindex compute	indexes multi index	0.013158
intervalindex from a 1d array of	index from intervals cls data name copy	0.125000
convert to our native	core datetime block to native	1.000000
akima	akima	0.857143
algos groupsort_indexer implements counting sort and it is	sorter group_index ngroups	0.250000
if we have bytes decode them to	core computation ensure decoded s	0.166667
the values to	core block shape values ndim	0.050000
frequency datetime index with business day	core indexes	0.004762
add numeric operations	group by add numeric operations	1.000000
of interval objects	indexes interval index	0.062500
the vectorized membership of x in y	computation in x y	0.047619
lookup of value from 1-dimensional ndarray only	datetime index get value series key	0.071429
to iterate over the	frame parser	0.012500
remove and return an item pair from	popitem	0.043478
a concise listing of available	list keys width _print	0.111111
elements of v should be	v	0.026316
the most likely frequency given the input index	index warn	0.333333
ensure that an array object has	core dtypes ensure	0.200000
get test result	get test result	0.250000
have an object	dtypes	0.015873
an expression in python space	core computation	0.047619
by the indexer	nd indexer	0.015152
a boolean if we need a	indexes index is	0.100000
an positional indexer	positional setitem indexer indexer	0.052632
validate that we have a	block is	0.045455
panel or object coercible to	other join overwrite filter_func	0.076923
shift without copying data the shifted	slice shift	0.083333
a "pivot" table) based	frame pivot index columns	0.111111
representing a frequency guess generated by infer_freq	datetime index ops mixin inferred freq	0.250000
return the list of row elements from the	io html frame	0.012987
can be used to iterate over the	frame parser	0.012500
lists to	convert to	0.090909
make box plots from dataframegroupby	boxplot frame groupby grouped subplots column fontsize	0.500000
dispatch to apply we are	mixin apply func	0.050000
return datetimeindex with times	indexes datetime index	0.007634
update index attributes e g freq depending	indexes timedelta index maybe update attributes	0.200000
frequency	freq method how normalize	1.000000
inplace	inplace	0.138889
this is defined as a copy with the	indexes multi index view cls	0.047619
for valid keys across my	has valid tuple	0.500000
styler with	io formats styler	0.021277
float values converted	formats float	0.055556
boolean if	b	0.100000
csv file (discouraged please	series from csv	0.066667
we need to coerce a scalar to a	core indexes period index coerce scalar to	0.071429
must already	hdfstore append key	0.016667
file node	append key	0.016667
a string-like that is object	string array data	0.038462
a block that has a single	simple blockify tuples	0.125000
datetime to the	to	0.006329
check for categorical columns retain categorical information for	stata writer prepare categoricals data	0.166667
and be table	io	0.003012
(e g convert back to bool/int	core dtypes maybe downcast to dtype result	1.000000
given	indexes get	0.125000
fast lookup of value from 1-dimensional	value arr key value	0.038462
concise listing of	list keys width _print	0.111111
the list of row elements from the	io html	0.012987
be returned from apply if as_index=true	core group by index with as	0.200000
validates that	validate	0.027778
this getitem defers to the underlying	index ops mixin getitem key	0.333333
to datetimeindex	core indexes period index to	1.000000
in file	hdfstore	0.014925
create a new unit	datetime tzdtype new cls unit tz	0.055556
to support a unified inteface datetimelike	datetime	0.006711
return the maximum value of the index	index	0.002004
a sequence of	sequence	0.090909
as dataframe	panel to frame	0.125000
format of	format dt_str dayfirst dt_str_parse dt_str_split	0.250000
to table in	hdfstore append key	0.016667
supported for panel objects and will	panel to	0.027027
concatenation of an	core dtypes concat datetime to_concat	0.125000
concatenation of an datetimelike array of arrays each	core dtypes concat datetime	0.125000
only use	value	0.005155
values for	values	0.008547
only makes sense when fill_value is nan	sparse stack sparse frame frame	0.333333
elements of v should be inserted in	frozen ndarray searchsorted v	0.033333
we do need a multi reindex	ndframe needs reindex multi axes method	0.333333
warning that is raised	warning	0.166667
for creating a subclass of styler with	io formats styler from	0.076923
render a dataframe	formats data frame	0.090909
recursive call	compat recursive	0.166667
infer types of values possibly casting	io parser base infer types values na_values try_num_bool	1.000000
property synonym for as_blocks()	blocks	0.071429
sanitize input data to an	sanitize array data index	0.250000
list of my values cols	table values cols	0.200000
a deprecated option if key is deprecated	core get deprecated option key	0.333333
after a ufunc needs	wrap result context	0.029412
dtype object	dtypes	0.015873
return boolean if values	ops mixin is	0.100000
by the given delimiter string starting at the	rsplit arr	0.037037
name	name name kind_attr	1.000000
property property synonym for as_blocks()	core ndframe blocks	0.166667
to set the	set	0.012195
over the blocks collect and create a	apply f axes filter do_integrity_check	0.083333
returns true if there are any missing	indexes period index is full	0.500000
dtype then fill	core dtypes maybe fill	0.500000
repr function return fillvalue for a recursive call	compat recursive repr fillvalue	0.333333
called via the 'numpy' library	compat numpy validate argmin with	0.200000
return a html representation for a particular dataframe	data frame repr html	0.333333
values according to indexer	indexer	0.018349
categorical by default	categorical sort values inplace	0.166667
base freq and stride info from string	base and stride freqstr	0.250000
comp_ids	comp_ids	1.000000
determines if two index objects	index equals other	0.200000
info	core data frame info	0.500000
subset rows or columns	ndframe filter items like regex axis	0.166667
1-dimensional ndarray only	indexes index set value arr	0.023810
function that converts json lists to line delimited	to line delimits s	0.166667
of value from 1-dimensional ndarray only	core indexes categorical index get value	0.100000
node	io hdfstore append key value	0.016667
return a new manager with	manager	0.058824
return	core resampler get	0.333333
draw histogram	plotting hist frame data	0.200000
groupby	core reshape groupby	1.000000
underlying data which is a categorical	core indexes categorical index values	0.333333
when using a timegrouper	core group by resample rule	0.166667
resample	datetime index	0.007042
of take	assert take	0.500000
context manager for running code that expects to	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
datetime index with business day as	core indexes	0.004762
of one month	month	0.076923
plot attribute for	plot	0.043478
defaults to returning	level inplace verify_integrity	0.333333
the dataframe's series using matplotlib / pylab	data column by grid	0.200000
union of two index objects	core indexes index union other	0.083333
my values return a block	block	0.008197
arr to have shape	arr new_shape	0.142857
interpolate bpoly from_derivatives	from derivatives	0.500000
of microseconds (>= 0 and less than	timedelta index microseconds	0.066667
dispatch to apply we are	apply	0.026316
checks that all the labels are datetime	numeric index is all dates	0.333333
datetime index with custombusinessday as the	core indexes cdate range start end	0.083333
boolean if we	b	0.100000
read csv	frame from csv	0.066667
concise listing of available options grouped	pp options list keys width _print	0.111111
a leap	period index is leap	0.125000
deal with nat-like arg is a	arg	0.018868
datelike	datelike	0.714286
index and plural 'names'	core indexes index validate names name names deep	0.071429
string-like attributes from the info_axis	core ndframe dir additions	0.166667
to a	convert datetime to	0.166667
ncols - number of	ncols	0.111111
from 1-dimensional ndarray only	indexes index set value arr key	0.023810
is a string	indexes	0.004651
read csv file (discouraged please use	series from csv cls path	0.066667
if we	selection mixin is	1.000000
are going to write	write obj data_columns	0.111111
must already exist	hdfstore append	0.016667
capture	capture	0.750000
apply we are	mixin apply func name	0.050000
read rows	get rows	0.500000
an indexer	name indexer	0.083333
don't allow a multi reindex on panel or	panel needs reindex multi axes method level	0.500000
parameter	parameter	1.000000
must	format	0.012346
table in file node must already exist and	io hdfstore append	0.016667
of total columns	table ncols	0.250000
moving function	rolling apply arg window func	0.500000
if each value is nan	core indexes datetime index ops mixin isnan	0.500000
equivalent to shift without copying data the shifted	core ndframe slice shift periods axis	0.083333
of value from 1-dimensional ndarray	core indexes datetime index get value series	0.071429
underlying array which by-definition	ops mixin	0.033333
this is called upon unpickling	interval index cls d	0.333333
conform a set of sparseseries	core sparse	0.041667
a timedelta index	listlike arg unit box errors	0.142857
wrap index _get_unique_index to handle	indexes period index get unique index dropna	0.250000
scipy sparse	core sparse sparse	0.103448
simple cross-tabulation of	core reshape crosstab index columns	0.066667
might need to coerce	tseries maybe coerce freq	0.125000
use this if you	index set	0.022727
given an interval or intervalindex return the corresponding	indexes get interval	0.125000
the new	copy errors values	0.250000
slice of my values	tzblock slice slicer	0.083333
arg is a passed in as an	arg errors	0.026316
of value from 1-dimensional ndarray only use this	datetime index get value	0.071429
additional	indexes period	0.034483
capture stderr in a buffer	util capture stderr	0.055556
the float values converted into strings using	formats float array	0.055556
- 1	cumcount ascending	1.000000
set of sparseseries (with nan fill_value) to a	core sparse	0.041667
a recursive	recursive	0.090909
needs additional handling	indexes period index	0.035714
for a tz-aware type return an	get tz tz	0.066667
cross-tabulation	reshape crosstab index	0.066667
block manager from a dataframe	core sparse to manager sdf	0.052632
return result block	block	0.016393
boolean list indicated if we have mixed levels	core indexes multi index have mixed levels	0.200000
that parse html into dataframes	html frame parser	0.012658
csv file (discouraged please use	from csv cls	0.066667
render a dataframe as an html table	data frame to html buf columns col_space	0.500000
bytes in the underlying	multi index nbytes deep	0.052632
block try to preserve dtype if	putmask smart v m n	0.055556
the blocks	combine blocks copy	0.500000
column from the table generally only indexables	io table read column column where start stop	0.250000
unique elements of arr1 and	equal contents arr1	0.066667
op string	computation bin op generate	0.066667
ndarray of my hashed values	core indexes multi index hashed values	0.166667
function is called via the 'numpy' library the	validate take with convert convert	0.055556
gets	index	0.004008
index or ndarray filled with	datetime index ops mixin	0.029412
are index sliceable then return my slicer	core convert to index sliceable obj	0.083333
that path's extension against the writer's supported extensions	writer check extension cls ext	0.333333
parse the raw data into	html frame parser parse raw data	0.250000
to apply we are stripping all of the	mixin apply func name	0.050000
string in the series extract groups from the	core str extract frame	0.047619
reshape long-format data to wide generalized inverse	reshape lreshape data groups dropna label	0.500000
row labels using	inplace	0.027778
provides	datetime index resampler	0.066667
is called via the 'numpy' library	numpy validate argmin with	0.200000
coerce a scalar to	indexes period index coerce scalar to	0.071429
for	io	0.003012
data & release the memory	io data col take data	0.111111
of obj with indexer	obj indexer	0.500000
cartesian product of all possible label	sort	0.083333
bool if we have only bool values	is bool	0.166667
a dtype compat for the values	values	0.008547
return label for last non-na/null value	core series last valid	0.250000
indices that would sort the	argsort	0.038462
v	ndarray searchsorted v	0.033333
timedelta-like to timedelta64	td index cmp opname	0.055556
as the	values	0.008547
string raise a	string	0.037736
compute locations of to_match into values	core match to_match values na_sentinel	0.333333
find all occurrences of pattern or	findall	0.111111
only use this if	indexes	0.004651
a datetimelike dtype converting	datetime value dtype errors	0.166667
style and color based	style	0.041667
of times	repeats	0.090909
convert a numpy / pandas type to	type x	0.055556
bears the risk of	subarr	0.050000
a curve with holidays between start_date and end_date	tseries abstract holiday calendar holidays start end return_name	0.066667
my pandas type & version	io fixed	0.166667
view limits to the nearest multiples	locator autoscale	0.055556
a new unit if needed otherwise	dtypes datetime tzdtype new cls unit tz	0.055556
my	indexes interval index	0.062500
scipy	scipy	0.666667
is not supported for panel objects and	panel to sparse	0.037037
pack object	io msgpack pack	1.000000
indicated if we have mixed	have mixed	0.166667
analogous to the :meth pandas dataframe reset_index function	series reset index level drop name inplace	0.142857
levels attribute is 1 or a list	table is multi index	0.142857
sparse reindex and return a new	sparse reindex new_index	0.250000
given sql	sql	0.076923
set my pandas type & version	io fixed set object info	0.200000
dispatch to apply we	apply func	0.027027
when a	core	0.001326
wide	core reshape wide	0.500000
names etc' nentries - number	nentries nlevels prefix names	0.100000
value at the given quantile a	core series quantile	0.083333
dict of array-like or dicts parameters	dict cls data	0.166667
ndarray only use this	arr key	0.023810
is maps[0]	map	0.029412
each subject string in the series extract groups	extract	0.060606
'kwargs'	fname kwargs	1.000000
loose checking if s is a pytables-acceptable expression	maybe expression s	1.000000
second holiday of two adjacent ones!	next monday or tuesday dt	0.200000
string in the series extract groups from the	core str extract arr	0.066667
to coerce a scalar to a compat	core indexes period index coerce scalar to	0.071429
datetime index with business day as the default	indexes	0.004651
return a slice of my values	slice slicer	0.070175
time strings to time	tools to time	0.125000
a string-like that is object dtype	io convert string array data	0.038462
index or	core indexes datetime index ops	0.034483
totally ordered cartesian product of all	get group index labels shape sort xnull	0.066667
sets names	multi index set names names level validate	0.200000
can	can	0.555556
field	core computation bin op	0.111111
coerce a scalar to a compat	coerce scalar to	0.071429
an	core ndframe to	0.040000
return a ndarray	index	0.002004
to coerce a code to a	coerce freq code	0.076923
dtype_set	dtype_set	1.000000
sparsearray	sparse sparse	0.034483
datetimeindex	datetime	0.013423
validates that we	categorical validate ordered	0.055556
for running code that expects	util assert produces warning	0.071429
by a	groupby by	0.250000
validate this column return the	col validate col	0.200000
string-like that	convert string array data encoding	0.038462
handles preprocessing for cut	core reshape preprocess for cut	0.200000
after	period index array wrap	0.050000
return new dataframe	core data frame	0.005917
only use this if you	value arr	0.023810
called after a ufunc	core series array wrap result context	0.200000
avoid the state machine here	frequency inferer	0.166667
remove and return an item pair from maps[0]	map popitem	0.055556
be applied on each value	array formatter value formatter float_format threshold	0.100000
the dtype str	dtype str	0.333333
add the	panel add	0.500000
compute standard deviation of groups excluding missing	core group by std ddof	0.166667
to coerce a scalar to	core indexes period index coerce scalar to	0.071429
equal	equal	0.250000
if the passed type is	dtype is	0.096774
encode input values as	values sort	0.333333
return the td elements from	io html frame parser parse td obj	0.083333
decorator to capture stderr in a buffer	capture stderr f	0.055556
interpret the dtype from a scalar parameters	dtypes infer dtype from scalar val pandas_dtype	1.000000
indexer like	indexer	0.009174
categoricals	categoricals	1.000000
version of putmask that	putmask	0.055556
string-like that is	io convert string array	0.038462
interactive	interactive	1.000000
return	indexes index get	1.000000
data	indexes multi index	0.013158
where elements of v should be inserted	searchsorted v	0.033333
with optional filling/interpolation designed for ordered data like	ordered left right on left_on	0.333333
applies a moving window of type window_type on	core window apply window mean how	0.166667
values but densify first	core non consolidatable mix in	0.090909
downsample the cython defined	core period index resampler downsample	0.200000
this	core indexes index set value arr key	0.023810
for more	ndframe	0.005025
string-like	convert string array	0.038462
table as a dataframe the	table data values	0.200000
handling	index array	0.033333
indices overlap add	core items overlap	0.062500
block of	core block make block	0.100000
exist and be	hdfstore append key	0.016667
'numpy' library the	with convert convert	0.055556
conserve rangeindex type for scalar and	core indexes range index getitem key	0.166667
alert a	alert	0.100000
the data & release the	data col take data	0.111111
running code that expects	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
about a malformed	malformed msg	0.100000
a	datetime index resampler	0.133333
after a	array wrap result	0.075000
converts input into a pandas only	pandas	0.035714
value at the given quantile a	quantile	0.058824
'numpy' library	numpy validate take with convert convert args	0.055556
schema resets the index	io json	0.062500
be applied on each value to format it	formatter value formatter float_format threshold	0.100000
new block (of	core block setitem indexer	0.066667
in file node must already exist	append	0.012987
data	multi	0.018182
if it is	if	0.111111
block manager from a	manager sdf columns	0.052632
a	series array wrap result	0.100000
indexer like _name	indexer	0.009174
factorize	factorize	0.500000
over the blocks collect and	apply f axes filter do_integrity_check	0.083333
for creating a class with a metaclass	metaclass metaclass	0.125000
array of a block that has a single	simple blockify tuples	0.125000
a date_format return a	date_format	0.058824
groupby	groupby sort	1.000000
a list of tuples of the (attr formatted_value)	core indexes multi index format attrs	0.142857
result	result mask other	0.500000
as_blocks()	core ndframe blocks	0.166667
in file node must already exist	hdfstore append key	0.016667
packer	io	0.003012
float values converted into	float array formatter get result	0.055556
return true if this	is	0.010582
the given quantile	series quantile	0.083333
or by	groupby by axis	0.045455
dtype is of the string dtype	dtypes is string dtype	1.000000
pandas type to its	type x	0.055556
return the correct class for resampling with groupby	core resampler get resampler for grouping groupby	1.000000
we trying to operate on an old version?	io fixed validate version where	0.142857
null_color	null null_color	0.125000
already	format	0.012346
the float values converted into strings	float array formatter get result as	0.055556
x not in y if possible	not in x y	0.066667
check	check for	0.333333
compute a simple cross-tabulation	index	0.002004
a multirow e	formats latex formatter format multirow	0.250000
checks	python parser check	1.000000
fast path for getting a cross-section	core single block manager fast xs loc	1.000000
single block and are	core block manager	0.022727
for temporarily setting a locale	locale new_locale lc_var	0.250000
node must	hdfstore append key	0.016667
of all the	util all	0.055556
passed off to scipy	scipy	0.111111
concatenation of an datetimelike array of arrays	dtypes concat datetime to_concat axis	0.125000
override generic we want to set the	core series set	0.076923
determines if two index	indexes index equals other	0.200000
index row labels using one or more existing	index keys drop append inplace	1.000000
data & release	io data col take data	0.111111
whether the installed version of openpyxl is	compat is compat major_ver	0.111111
to indexer and return	nd indexer	0.030303
iter1 iter2 iterables	assert copy iter1 iter2	0.166667
return the	multi	0.018182
the	io formats styler	0.042553
the series extract groups from the	extract frame arr	0.047619
file node must already exist and be	io hdfstore append key	0.016667
against itemsize	itemsize	0.027027
defined as	index view cls	0.047619
raise keyerror	compat chain map	0.032258
called after a	indexes index array	0.100000
nrows ncols	nrows ncols	0.250000
add in the datetimelike methods (as we may	add datetimelike methods cls	0.333333
string starting at the	rsplit arr pat	0.037037
index to be returned from apply if as_index=true	by index with as index	1.000000
method to	method cls	0.076923
to cast to the specified dtype	result dtype	0.142857
frequency datetime index with business day as the	core indexes	0.004762
validates	validate ordered	0.055556
index of the values set	core indexes index	0.007042
called	core indexes period index array	0.050000
round a dataframe to a variable number	core data frame round	0.166667
masked	core masked	0.250000
called via the 'numpy' library	numpy validate take with convert convert args	0.055556
se the caption on	caption caption	0.166667
to coerce a scalar to a compat	coerce scalar to	0.071429
returns the float values converted into	float array formatter get result	0.055556
the data are missing	core data	0.041667
html representation for a particular dataframe	data frame repr html	0.333333
ensure that our data is of the correct	core ensure data values	1.000000
to a	io convert datetime to	0.166667
needs additional	core	0.001326
decorator to capture stderr	util capture stderr f	0.055556
and string-like	string	0.018868
an axes dictionary for myself	ndframe construct axes dict axes	0.166667
the underlying	core indexes multi	0.014493
dataframe objects	core data frame	0.005917
intervalindex with self	indexes interval	0.062500
needs	index array wrap result	0.033333
dtype to return if	dtype	0.010989
that an positional indexer	valid positional setitem indexer indexer	0.052632
with the block i	data col create for block cls i	0.333333
interpolate values according to different	interpolate method axis	0.166667
given a	core indexes multi index get	0.100000
1st discrete difference of object	core data frame diff periods axis	0.250000
convert to our native types format	datetime block to native types slicer na_rep date_format	0.250000
cast to datetimeindex of timestamps at *beginning* of	frame to timestamp freq how axis copy	1.000000
infer the fill value for the	dtypes infer fill value	0.333333
return the block manager from a	sparse to manager sdf columns	0.052632
we	categorical	0.009615
long stacked format dataframe	core data frame	0.005917
for panel objects and will raise	panel to sparse	0.037037
is	dtypes extension dtype is	0.125000
dataframe the	data	0.009709
return the counts of ftypes in this	ndframe get ftype counts	0.250000
reduction type operation	categorical reduce op name	1.000000
ndarray filled with nat which has the	ops mixin nat new box	0.050000
_constructor_sliced-like objects to either an	panel homogenize dict frames intersect dtype	0.142857
how	window convert freq how	1.000000
file node must	append key	0.016667
self as a sparse	core sparse sparse series as sparse	0.250000
to the specified dtype	dtype	0.010989
return an axes dictionary for myself	ndframe construct axes dict axes	0.166667
compute a simple	columns	0.017857
in panel	panel	0.017857
get all the locales that are available on	get locales prefix normalize locale_getter	1.000000
list indicated if we have	multi index have	0.142857
return packed bytes	io msgpack	0.025000
of kwargs suitable	kwargs cls	0.040000
provided date	tseries date	0.166667
an intervalindex from a 1d array of	from intervals cls data name copy	0.125000
the first day of the month and day_of_month	semi month	0.083333
read csv file (discouraged please	series from csv cls path	0.066667
intervalindex from a 1d array of interval	interval index from intervals cls	0.333333
merge	merge	0.888889
spreadsheet-style pivot table as a dataframe the levels	core reshape pivot table data values index columns	0.166667
minimum value of the index	index	0.002004
over the	frame	0.009091
at the requested level	level	0.043478
called via the 'numpy' library	compat numpy validate take with	0.055556
block manager from a	core sparse to manager sdf columns index	0.052632
the block manager from a	to manager sdf columns	0.052632
passed a manager and a axes dict	ndframe init mgr mgr axes dtype	0.333333
join columns with	join	0.066667
fname are valid parameters	validate kwargs fname	0.250000
to convert timedelta-like to timedelta64	core indexes td index cmp opname	0.055556
particular	bytes	0.111111
index with day calendar as	core indexes period	0.032258
or columns using input	copy inplace	0.055556
construct concatenation plan for given	core get mgr concatenation plan	1.000000
hard to parse datetime	tools parse	0.125000
create a new unit if needed otherwise	dtypes datetime tzdtype new cls unit	0.055556
as series or by a	by axis	0.045455
an index that we can create one	index	0.002004
after a ufunc	core series array wrap result context	0.200000
and 'kwargs' should be empty because all of	resampler func method args kwargs	0.142857
to apply we are stripping all	core group by mixin apply	0.050000
installed version of	compat major_ver	0.083333
not supported for panel objects	panel	0.017857
we do need a multi reindex this	series needs reindex multi	0.333333
given a tuple of slices/lists/labels/boolean indexer to a	index get	0.040000
file node must already	value	0.005155
of this	index col	0.066667
float	formats float array formatter get result as	0.055556
of each interval in	interval	0.029412
if the passed type is	dtypes interval dtype is	0.066667
index or ndarray filled	indexes datetime index	0.007634
a single block and are	block manager	0.021277
object with labels in requested axis removed	core ndframe drop labels axis level	0.250000
to ndarray raises on scalar	to ndarray cls	0.166667
i8	i8	1.000000
of the underlying data	core indexes datetime index ops mixin	0.029412
to write this as a frame table	io appendable multi series table write	0.333333
string starting at the	rsplit	0.031250
new unit if needed otherwise return	tzdtype new cls unit tz	0.055556
return boolean if values	is	0.005291
the month	month	0.076923
new multiindex	multi index	0.020000
a tree-like object	io html frame parser build	0.014706
the where statement is of	where w	0.083333
to run the same function	num_threads kwargs_list	0.050000
a flattened numpy array	categorical ravel order	0.333333
all	util all	0.111111
nrows ncols - number of	make custom dataframe nrows ncols	0.250000
accelerate unioning	union many others	0.040000
gets	period index array wrap	0.050000
returns true if categoricals are	equal	0.050000
boolean mask of index to	index	0.002004
node	io hdfstore	0.014493
passed panel or object coercible	join overwrite filter_func	0.076923
swap level i with	multi index swaplevel i	0.333333
returns the float values converted into strings using	float array formatter get result as array	0.055556
cumulative sum of non-na/null values	sparse sparse series cumsum axis	1.000000
wide panel to long	reshape wide to long	1.000000
handle na filling of take	assert take fillable values indices	0.250000
perform the reduction type operation if we can	ops mixin reduce op name axis skipna	0.083333
the intersection of two index objects sortedness	indexes range index intersection other	0.083333
number of unique elements in	ops mixin nunique dropna	0.083333
forward to the array	sparse sparse series get val at loc	0.250000
removes	removals inplace	0.500000
the metadata	read metadata	0.250000
scipy sparse coo_matrix to a sparseseries	sparse coo to sparse series a dense_index	0.166667
whether i am an	index	0.002004
this is defined as a	core indexes multi index view cls	0.047619
maximum values along an axis	index ops mixin argmax axis	0.250000
wrap long strings in the series/index to be	core str wrap arr	0.333333
if you	set value arr key	0.023810
the reduction type operation	core index ops mixin reduce op	0.083333
series columns for dataframe major_axis for panel	ndframe iteritems	0.055556
applies the	core	0.001326
determine if	match arr pat	0.166667
for	core comp method	0.333333
function of type t or tuple of	type t	0.083333
series concat	get series	0.250000
with	core single	0.666667
whether each index value is found in the	indexes datetime index ops mixin isin values	0.083333
fast transform path for aggregations	group by transform fast result obj	0.333333
read csv	frame from csv cls path	0.066667
of	indexes index set value arr key	0.023810
select values between particular	indexes datetime index indexer between	0.125000
of try_coerce_args	core datetime tzblock try coerce result result	0.500000
compute pairwise correlation	corr	0.125000
defined	index view cls	0.047619
setup	resampler	0.017857
of bytes in the	nbytes deep	0.052632
table	hdfstore append key value	0.033333
over the	html frame parser build	0.014706
by str df in both py2/py3	core dtypes extension dtype str	0.250000
to apply we are stripping	by mixin apply	0.050000
the 'numpy' library the	numpy validate take with convert	0.055556
get my plane axes indexes these are already	get plane axes	1.000000
evaluate a	core computation bin op evaluate	0.333333
unique	unique	0.454545
frequency timedelta index with	core indexes timedelta	0.083333
analogous to the :meth pandas dataframe reset_index function	reset index level drop name inplace	0.142857
fixed frequency timedelta index with	indexes timedelta range start end periods	0.083333
implement a	tzblock	0.076923
returns the float	io formats float array	0.055556
you	core indexes index set value arr	0.023810
conserve rangeindex type for	core indexes range index getitem key	0.166667
compute a simple cross-tabulation	reshape	0.037037
call encode before writing	writer write to_write	0.083333
parse specified sheet s into a	parse	0.034483
getitem defers to the underlying array which by-definition	datetime index ops mixin getitem	0.250000
the actual ne format	computation condition bin op format	0.333333
dict	dict cls data orient dtype	0.166667
replacement key defined will return the	core translate key key	0.333333
provide a nice str repr of	core window unicode	0.071429
supported for panel objects and	core panel	0.019231
a dict of the counts of the function	counts f	0.041667
our axes compute the expected nrows	nrows expected	0.142857
which overcomes the npy_maxargs 32	core computation result type many	0.142857
making this object picklable	indexes multi index setstate state	0.333333
check if we are	ndframe check is	0.200000
tree-like object	io html frame parser build	0.014706
to deprecate	util deprecate	0.166667
be returned from apply if as_index=true	with as	0.200000
each element in	core map indices py arr	0.090909
to operate on	try operate	1.000000
of the inferred types one for each level	multi index inferred type levels	0.333333
and	to	0.006329
dtype types to stata types returns the byte	io dtype to stata type dtype column	1.000000
str	str	0.140351
rec array	rec array	1.000000
ndarray argsort argsorts	argsort	0.038462
perform the reduction type operation	core categorical reduce op name axis skipna	0.500000
that we have a valid ordered parameter	core categorical validate ordered cls ordered	0.058824
resolve a variable name	scope resolve	0.166667
read text from clipboard and	read clipboard sep	0.200000
pairwise correlation	corr method min_periods	0.500000
and string-like array to convert object dtype	dtypes maybe convert string to object values	0.142857
already	io	0.003012
index with business day	core indexes bdate	0.050000
return series containing only true/non-nan values possibly empty	core remove na series	0.166667
a leap year	core indexes period index is leap year	0.142857
only if the process of casting	assert safe casting	0.125000
the series/index	core str repeat arr	0.045455
i am never	is	0.005291
that has a single dtype if dtype is	core simple blockify tuples dtype	0.111111
indices that would sort the index	indexes range index argsort	0.166667
converts a style_dict to an xlsxwriter format object	io xlsx writer convert to style style_dict	0.166667
the unicode normal form	string methods normalize form	0.066667
a	io html frame	0.012987
my self as	series as	0.125000
concatenate suffix string with panel items names	core ndframe add suffix suffix	1.000000
new	core dtypes datetime tzdtype new	0.333333
'args' and 'kwargs' should be empty	compat numpy validate resampler func method args kwargs	0.166667
datetimeindex with times to midnight length is	indexes datetime	0.011494
gets called after a ufunc	core series array wrap result context	0.200000
create an	core ndframe create	0.500000
the size of the dtype of the item	itemsize	0.027027
ndarray only use this	core indexes index	0.007042
datetime index with business day as the default	core indexes bdate	0.050000
a leap	leap	0.076923
apply a function elementwise updating the html	io formats styler applymap func subset	0.083333
the put method to	core series put	0.055556
of x in y if	computation in x y	0.047619
resample of	index	0.006012
and index	core sparse sparse data frame set value index	0.250000
an error is encountered	parser error	0.055556
have a valid ordered parameter if	ordered	0.017857
sparse-compatible version of ndarray take	sparse series take indices axis convert	1.000000
to capture stderr in a	util capture stderr	0.055556
get the category labels deprecated	categorical get labels	0.500000
input values as an enumerated type or	core factorize values	0.111111
validate that an positional	core ndframe indexer has valid positional	0.250000
this object	core indexes	0.004762
that left and right index are equal	util assert index equal left right exact check_names	0.333333
provide coercion to our input	core block try coerce	1.000000
in the series extract groups	str extract frame	0.047619
to handle na filling of take	core indexes multi index assert take fillable	0.250000
gets called prior to a	array prepare	0.111111
from the cartesian product of multiple iterables parameters	index from product cls iterables sortorder names	1.000000
to its numpy-array representation	core ndframe as matrix columns	0.200000
to_match into values	match to_match values na_sentinel	1.000000
ndarray	core indexes index	0.007042
return the correct pandassql subclass	pandas sql builder con flavor schema meta	0.055556
the td elements from a	parse td obj	0.083333
manager parameters	manager	0.058824
ensure that	computation ensure	1.000000
to iterate over	io html frame	0.012987
key or none if	key	0.005051
shift without copying data the shifted	ndframe slice shift	0.083333
return	operation get	0.500000
string-like that is object dtype and	convert string array data encoding	0.038462
merge	merge other	1.000000
return a dtype compat na value parameters	core dtypes na value for dtype dtype	0.333333
options grouped by	core pp options	0.083333
construct an intervalindex from a a left and	indexes interval index from arrays cls left	0.500000
the key for valid keys across my	valid tuple key	0.333333
frequency if available	freq axis	0.250000
a series excluding	core series group	0.030303
box function	box func	0.142857
value from 1-dimensional ndarray only use this if	core indexes period index get value	0.071429
function elementwise updating the html representation with the	io formats styler applymap func subset	0.083333
for iterables you should probably use pprint_thing()	io formats pprint seq seq _nest_lvl max_seq_items	0.333333
the array interface return my	array result	0.125000
from 1-dimensional ndarray only use	core indexes index set value	0.023810
to group return result as series or by	groupby by axis	0.045455
fill value for the nan/nat from the	fill value val	0.142857
if key	key	0.005051
specialized intersection for datetimeindex	core indexes datetime index intersection other	0.142857
the float values	float array formatter get result as array	0.055556
compute boolean array of whether each index value	datetime index ops	0.034483
codes by the indexer fill with the	indexer	0.009174
dataframe as an html	core data frame to html	0.250000
offsets index to end of period frequency	tseries date offset end apply index i freq	1.000000
of columns excluding na/null	core data	0.041667
datetime64tzformatter	datetime64tzformatter	1.000000
all the axes	axes axes	0.200000
array to	to	0.006329
the series extract groups from	extract arr	0.066667
sqlalchemy engine from a uri if con is	io engine builder con	1.000000
new sparsedataframe	core sparse sparse data frame	0.058824
subject string in the series extract groups	str extract	0.071429
to the :meth pandas dataframe reset_index function see	index level drop name inplace	0.142857
length of	length of	0.333333
validate percentiles used by describe and quantile	core ndframe check percentile q	0.333333
from 1-dimensional ndarray only use this if you	core indexes index set value arr	0.023810
of two adjacent ones!	next monday or tuesday dt	0.200000
in i	i before_day_of_month after_day_of_month	1.000000
initialize an _assertraisescontextmanager instance	util assert raises contextmanager init exception regexp	1.000000
if the process of casting	safe casting	0.125000
pick the best locator	locator get locator	0.062500
from a row element	frame parser parse	0.250000
of value from 1-dimensional ndarray only use	indexes index set value arr key value	0.038462
object_hook	object_hook	1.000000
number of nanoseconds (>= 0	indexes timedelta index nanoseconds	0.066667
to timestamp-keyed	compat d	0.125000
the number of bytes in the	indexes multi index nbytes deep	0.052632
index objects contain the same	index	0.004008
a scatter plot from two dataframe columns	plotting scatter plot data x y by	0.125000
block manager from a dataframe of	to manager sdf	0.052632
json string	json path_or_buf orient date_format double_precision	0.500000
whole block as one	single block manager	0.200000
locator based on	auto date locator get locator	0.062500
be table	io hdfstore append	0.016667
from the file path	path	0.083333
to_concat which	dtype to_concat	0.333333
make new index	index	0.002004
a	categorical validate ordered	0.055556
deprecated option if key is deprecated	get deprecated option key	0.333333
to apply we are stripping	mixin apply	0.050000
if we do need a multi reindex	core ndframe needs reindex multi axes method level	0.333333
that we have a valid ordered	validate ordered cls ordered	0.058824
to	dt to	0.125000
keeps track	set test mode v	0.142857
return a	core computation get	0.333333
function is called via the 'numpy' library the	compat numpy validate take with	0.055556
boolean whether i can attempt conversion to	core indexes is convertible to	0.333333
cumulative min for	cummin axis	0.500000
have a fully reindex-output to the	data frame group by reindex output result	0.045455
of all the various index classes	all index	0.142857
datetimelike properties of the series values	properties	0.046512
return the number	range	0.047619
index with business day as the	indexes bdate	0.050000
for this indexable with	io index col	0.055556
according to indexer and return them as	nd indexer axis	0.043478
the levels of both multiindex	multi index equal levels	0.200000
find all occurrences of pattern	findall	0.111111
name this allows simpler access to	ndframe setattr name value	0.166667
guess	tools guess	0.500000
is the resampling from a dataframe column	core resampler from selection	0.200000
path's extension against the writer's supported extensions	writer check extension cls ext	0.333333
a list of normalized locales that do not	util valid locales locales normalize	0.050000
helper to call encode before writing	writer write to_write	0.083333
more this is index for series	core	0.001326
sorted by the n smallest values of columns	nsmallest n columns	1.000000
a particular object invoked by str df in	str	0.017544
make a copy of	copy deep	0.142857
if	core indexes index set value arr	0.023810
type to	type x	0.055556
other to	other	0.027027
form the intersection of two index	indexes index intersection other	0.166667
wide format into long stacked format as dataframe	to frame	0.125000
css	cssto excel converter call	1.000000
index objects and sorts if possible	core indexes index	0.007042
its values attribute if it has	series	0.006757
ndarray of the flattened values	indexes index ravel order	0.037037
on saturday use following monday instead	next monday	0.250000
using a timegrouper	by resample rule	0.166667
apply mapper function to its categories not	categorical map mapper	0.166667
columns under the index	reset index	0.125000
string-like that is	convert string array	0.038462
set my state from the passed info	io index col set info info	1.000000
before	truncate before	1.000000
specialized intersection for datetimeindex objects	indexes datetime index intersection other	0.142857
the block manager from a dataframe of	core sparse to manager sdf	0.052632
with the index api sort the index	core indexes index sortlevel level ascending sort_remaining	0.250000
dataframe	data frame reset	0.027778
statement is of the right	w	0.090909
up styles	io formats styler	0.021277
already	value format	0.016667
for more this is index for series columns	core	0.001326
timedelta-like to timedelta64	core indexes td index cmp opname	0.055556
the html representation with the result	io	0.003012
filled with nat which has the same	nat new	0.050000
an series	core series	0.008000
an item pair	map popitem	0.055556
the series	series	0.013514
return true if	dtypes is	0.030303
dictionary for the passed	axes dict from	0.250000
than a given width	width	0.083333
ndarray of the flattened values	ravel order	0.037037
node must	hdfstore append key value	0.016667
intervalindex return the corresponding interval with closed bounds	closed bounds interval	0.200000
has	has	0.857143
a copy of self coded with categories	core categorical codes for groupby sort	0.071429
overlap add suffixes	overlap	0.047619
internal method to handle na filling of take	assert take fillable	0.250000
for datetimelike properties of	properties	0.046512
block in-place with	core object block set locs values check	0.125000
best locator	locator	0.047619
if seq is an iterator put its values	core indexes ensure has len seq	0.500000
multi reindex	reindex multi	0.500000
the passed type is an actual dtype	is dtype cls dtype	0.043478
assert that we all have the same closed	index append same dtype to_concat name	0.500000
wrapper function for series arithmetic operations	arith method series op	0.333333
determine	core str match	0.166667
more this is index for	core ndframe	0.005051
argsort argsorts the value	series argsort	0.083333
a new unit if needed otherwise return	tzdtype new cls unit tz	0.055556
to get lines 0) there are headers on	io python parser get index name	0.166667
values as an enumerated type or	core factorize values	0.111111
format dataframe	data frame to	0.037037
convenience function for interpolate bpoly from_derivatives	from derivatives xi yi x order	1.000000
to designated axis labels	reshape make axis dummies frame axis transform	0.166667
infer_dst	infer_dst	1.000000
at particular time	at time time	0.066667
method to handle na filling of take	take fillable values indices allow_fill	0.250000
on 3 columns of	index columns	0.028571
a rolling grouper providing rolling	group by rolling	0.333333
return a tuple of axis dimensions	core ndframe shape	0.200000
return the mode s	core series mode	0.083333
boolean criterion specified by	group by filter	0.200000
whether the 'name' parameter	io validate	0.031250
return new dataframe with labeling information	data frame	0.005714
and index parameters	data frame set value index	0.166667
comparison operations to convert timedelta-like to	core indexes td index cmp opname	0.055556
the float values converted into	io formats float array formatter	0.055556
object for datetimelike properties	timedelta properties	0.052632
a curve with holidays between start_date and	abstract holiday calendar holidays start end return_name	0.066667
concatenation	core dtypes concat	0.200000
maximum by shading	max	0.090909
handling	array wrap	0.025000
plot attribute for groupby objects	plot	0.043478
to a pandas	to	0.006329
to handle na filling of take	indexes index assert take fillable	0.250000
a new block manager parameters	block manager	0.021277
if label is not contained a	value label	0.066667
this if you	core indexes index	0.007042
blockmanager with the items axis of len	core block manager make	1.000000
sequence of terms for instances of pandasobject	computation any pandas objects terms	0.250000
my pandas type	fixed	0.055556
to call encode before writing to file	io stata writer write to_write	0.083333
wrap result set of	wrap result	0.022727
operations to convert timedelta-like to timedelta64	core indexes td	0.055556
arr1 and arr2 are equivalent	equal contents arr1 arr2	0.066667
fill_value and arr	arr fill_value	0.090909
of datetime time the	core indexes datetime	0.011494
this if you	value arr	0.023810
file node must already exist and be table	hdfstore append	0.016667
block	block block_items existing_col	0.500000
parse the raw data into	io html frame parser parse raw data	0.250000
new unit if needed otherwise return from the	tzdtype new cls unit	0.055556
the built	formats styler	0.021739
a dataframe to	data frame formatter to	0.083333
and b	b	0.100000
two adjacent ones!	next monday or tuesday dt	0.200000
gets called	indexes	0.009302
downsample the cython defined function	index resampler downsample how	0.200000
'kwargs' should	kwargs	0.044444
return if each value is nan	index ops mixin isnan	0.500000
datetimelike methods (as we may have to	datetimelike methods cls	0.066667
type is	dtypes extension dtype is	0.125000
subset rows or	ndframe filter items like regex axis	0.166667
binary dta files from array-like objects parameters	fname convert_dates write_index encoding	0.500000
sorted by the n smallest values of columns	nsmallest n columns keep	1.000000
the number of bytes in the	core indexes multi index nbytes deep	0.052632
the number of temporary variables in this scope	scope ntemps	0.250000
str_floats	str_floats	1.000000
to get instances of all	util all	0.055556
must	hdfstore append key	0.016667
read text from clipboard	io read clipboard sep	0.200000
for the diff of	diff n axis	0.111111
return a new manager with the	manager	0.058824
true if this is a valid	is in table	0.076923
ndarray only use this if you	set value arr	0.023810
and arr dtype then fill	maybe fill arr	0.500000
class implementing the plot attribute for	plot	0.043478
update index attributes e g freq	core indexes index maybe update attributes attrs	0.200000
sunday use day thereafter	tseries sunday to	0.200000
return resolution str against frequency str	resolution get str from freq cls freq	1.000000
convert datetime-like	cmp opname nat_result	0.066667
in numeric unary methods	numeric methods unary	1.000000
if we do need a multi reindex	core ndframe needs reindex multi	0.333333
:class	io msgpack packb	0.025641
convert timedelta-like to timedelta64	core indexes td index cmp opname nat_result	0.055556
to shift without copying data	slice shift periods axis	0.083333
array of	util hash array	0.500000
get the	plotting get	1.000000
returns value occupying requested label default	sparse sparse series get label default	0.083333
for allowed	allowed	0.090909
construct this type from	dtype construct from	0.166667
to determine if dtype is valid	is valid dtype n method dtype	0.142857
want to construct this	array	0.013889
return the counts of ftypes in	get ftype counts	0.250000
the float	io formats float array formatter get result as	0.055556
returns number of unique elements in the	nunique dropna	0.125000
csv file (discouraged please use :func	series from csv cls path	0.066667
intervalindex from a 1d array of interval objects	indexes interval index from intervals cls data	0.333333
index and / or columns using input function	mapper axis copy inplace	0.055556
do a list replace	manager replace list src_list dest_list	1.000000
initializes holiday object with a given	tseries abstract holiday	0.100000
of take	index assert take	0.500000
sort multiindex at the	indexes multi index	0.013158
overcomes the npy_maxargs 32	computation result type many	0.142857
timedelta-like to timedelta64	indexes td index	0.055556
making this object picklable	sparse sparse array setstate state	0.333333
convert a scipy sparse coo_matrix to a sparseseries	core sparse coo to sparse series a dense_index	0.166667
the requested level the result will respect	index sortlevel level ascending sort_remaining	0.200000
layout some dataframes in vertical/horizontal	table	0.010870
only	arr key	0.023810
boolean mask of index	index b	0.041667
deprecated option and if	if deprecated	0.333333
an	to	0.012658
the codes by the indexer fill	nd indexer allow_fill	0.050000
series/index	str repeat	0.200000
return a block if	core block	0.010870
read csv file (discouraged please use :func pandas	from csv cls path header sep	0.066667
attempt to construct this type from	core dtypes interval dtype construct from string	0.166667
a copy	index copy	0.166667
to be applied on each value	float array formatter value formatter float_format threshold	0.100000
boolean criterion specified by func	core ndframe group by filter func	0.250000
return the number of bytes in the underlying	index nbytes	0.052632
of seconds (>= 0 and less	indexes timedelta index seconds	0.066667
is called upon unpickling rather than the	new datetime index cls d	0.111111
the series extract groups from the	extract	0.030303
a new datacol	name cname	0.111111
with nat which has the same	nat new box	0.050000
apply we are stripping	core group by mixin apply func	0.050000
ordered multiindex compute the	indexes multi index	0.013158
(produce a "pivot" table) based on column values	pivot index columns values	0.200000
numpy array of python datetime date objects (namely	indexes datetime	0.011494
tree-like object	parser build	0.014706
form the union of two multiindex objects	core indexes multi index union other	0.066667
binary feather-format	to feather fname	0.083333
a floating index	core indexes index maybe cast indexer	0.200000
number of bytes in the underlying	core indexes multi index nbytes	0.052632
fast lookup of value from 1-dimensional ndarray	period index get value series	0.071429
lookup of value from 1-dimensional	arr key value	0.038462
of each interval	interval	0.029412
subject string in the series extract groups from	extract	0.030303
tree-like object	html frame parser	0.012658
the values & release	col take data	0.055556
best locator based on a	plotting pandas auto date locator get locator	0.062500
view limits to the nearest multiples of base	locator autoscale	0.055556
bit of a hack to accelerate unioning a	indexes datetime index union many others	0.040000
create an	create indexer cls name	0.500000
and arr	arr	0.013699
an indexer for a target	reindexer target	0.200000
values to be	shape values ndim	0.050000
supported for panel objects	core panel to	0.027027
get lines 0) there are headers	python parser get index name columns	0.166667
json lists to	convert to	0.090909
to an ndarray copy if specified coerce to	copy	0.012821
getstate	getstate	1.000000
table in file	io hdfstore	0.014493
validate that an positional indexer cannot enlarge its	ndframe indexer has valid positional setitem indexer indexer	0.052632
values attribute	core	0.001326
a subclass of styler with a custom	styler from custom	0.200000
self as a sparse array	as sparse array	0.250000
the given delimiter string starting at	rsplit arr pat	0.037037
similar to a left-join except	left right on left_on	0.058824
the month and day_of_month	semi month end	0.166667
of normalized locales that do	util valid locales locales normalize	0.050000
return dtype	get empty dtype	0.500000
are passed a list-like indexer return the	interval index convert list indexer keyarr kind	0.066667
types format slicing if desired	types slicer na_rep date_format quoting	0.200000
numpy array of datetime	datetime	0.006711
an ndarray for our input	core sparse sanitize values arr	0.200000
regex	regex	1.000000
necessary for making this object picklable	core indexes multi index setstate state	0.333333
find indices where elements of v	ndarray searchsorted v	0.033333
float values converted into strings	float array formatter get result as array	0.055556
fixed frequency datetime index with custombusinessday as	core indexes cdate range start end	0.083333
a series to	series	0.006757
appropriate for table	table	0.010870
any	any	1.000000
have n indexable columns with an arbitrary number	legacy table read where columns	0.111111
datetimeindex with times to midnight	indexes	0.004651
values at particular time of	core ndframe at time time	0.066667
actual sparse	sparse sparse	0.034483
csv file (discouraged please	frame from csv	0.066667
dtype from a scalar parameters	core dtypes infer dtype from scalar	0.500000
times to	indexes datetime	0.011494
fast lookup of value from 1-dimensional	indexes index set value arr key value	0.038462
after_day_of_month	after_day_of_month	1.000000
wide panel to	reshape wide to	1.000000
formatted	formatter func	0.333333
convert a scipy sparse coo_matrix to a sparseseries	sparse coo to sparse series a	0.166667
after a	period	0.016667
the values to be at least 1	shape values	0.050000
fast lookup of value from 1-dimensional ndarray	indexes index set value arr key value	0.038462
only	set value	0.023256
for this	indexes index	0.007353
is an actual dtype	extension dtype is dtype cls dtype	0.111111
stata date formats to a type in type_map	io convert datetime to stata type fmt	1.000000
first match of regular expression pat	frame arr pat flags	0.166667
a stringified and numeric for these values	stringify na values na_values	0.333333
by the indexer fill with	indexer allow_fill	0.050000
convert datetime-like	core indexes dt index cmp opname nat_result	0.066667
for the nan/nat from	val	0.058824
returns -1 in the na case	core nanargmax values axis skipna	1.000000
return the len of myself	core categorical size	0.111111
calendar year ends	year	0.125000
this is *not* the	is other	0.055556
node with	get node	0.166667
tuple of the shape of the underlying data	core index ops mixin shape	0.250000
to all values found in	transform	0.083333
passed to the engine	engine	0.111111
get integer location for requested label parameters	get loc key method	0.500000
a string representation	unicode	0.058824
an asof merge this is similar	core reshape merge asof	0.071429
parse time strings to	core tools to	0.250000
render a dataframe to a list	data frame formatter to	0.083333
return a tree-like object	frame parser	0.012500
the underlying	index	0.004008
if	value arr	0.023810
a tree-like object that can	io html frame parser build	0.014706
select values between particular times	between	0.086957
series extract groups from the	str extract frame arr	0.047619
numpy array of python datetime date objects	datetime index	0.007042
method to work as desired	indexes index getitem key	0.166667
node must already exist	append key	0.016667
the last row without any nan is taken	ndframe asof where	0.166667
protection object	protection	0.142857
an internal non-public method*	index create categorical data categories ordered	0.333333
values as	values fname	1.000000
an array repr of this	core indexes period index	0.034483
subject string in the series extract groups from	str extract frame	0.047619
convert timedelta-like to timedelta64	indexes td index	0.055556
the levels of both	index equal levels	0.200000
return the number of bytes in the underlying	indexes multi index nbytes deep	0.052632
of the flattened values of the underlying data	indexes index ravel order	0.037037
a single block	block	0.008197
an indexer like _name in the class	indexer	0.009174
offsets index to end of period	tseries date offset end apply index i	1.000000
from each group	group by	0.016129
with a tz	datetime	0.006711
dispatch to apply we are stripping all of	group by mixin apply func name	0.050000
of the values	shape values ndim	0.050000
the value inplace return a new block (of	block setitem indexer value	0.333333
file node must already	io hdfstore append key	0.016667
representation for a particular object	mixin repr	1.000000
this columns	io index col read	0.250000
indexer like _name in	cls name indexer	0.083333
operations to the cls evaluate the doc strings	aggregate operations cls use_numexpr	0.142857
decode character string in the series/index	core str decode	1.000000
of python datetime date objects	datetime index	0.007042
supported for panel objects and will raise	core panel to sparse	0.037037
is not supported for panel objects	core panel to	0.027027
assemble	core tools assemble	0.500000
an intervalindex from a 1d array	from intervals cls data name copy	0.125000
fill the values	limit	0.100000
singular 'name' parameter for general index	core indexes index validate names	0.066667
values can be	values	0.008547
tables into a list of	io match flavor	0.166667
define an builtin function for this argument return	builtin func arg	0.200000
the underlying	multi	0.018182
equivalent to shift without copying data	ndframe slice shift	0.083333
rows from self f skipping	io fixed width reader get rows n skiprows	0.166667
sys	sys	1.000000
post process for each axes overridden in child	post plot logic ax data	0.333333
between self analagoust to s-s	diff arr	0.200000
panel to a	core panel	0.019231
to infer better dtype for	ndframe convert datetime numeric timedelta coerce	0.071429
ndframe as	ndframe	0.005025
class for writing stata	core data frame to stata	0.200000
specified column	set item key value	0.500000
returns the float values converted into	io formats float array formatter get result as	0.055556
tail	tail	1.000000
filled with nat which has the same length	mixin nat new	0.050000
multiindex from	indexes multi index from	0.142857
a sparse	sparse	0.052632
indexer fill	nd indexer	0.015152
the actual sparse values need to	core sparse sparse array	0.043478
histogram	plotting hist	0.200000
:meth	inplace limit	0.333333
if you	indexes index set value	0.023810
float	io formats float array formatter get result as	0.055556
helper function that converts json lists to line	to line	0.142857
implement n largest/smallest for series	select nseries	1.000000
class	index append	1.000000
each group if n is an int or	core group by	0.027778
'kwargs' should be empty except for	kwargs	0.022222
evaluate the where condition cond on a and	core computation where cond	0.111111
elements of v should	core indexes frozen ndarray searchsorted v	0.033333
save workbook	io excel writer save	0.333333
apply we are stripping	mixin apply func	0.050000
value from 1-dimensional ndarray only use this if	indexes period index get value series	0.071429
the block it is	core block	0.010870
new block (of a possibly	block setitem indexer	0.066667
checks that dict has	parser check	0.200000
for datetimelike properties of the series	properties	0.046512
we have a dtype	name freq	0.083333
series extract groups from the first match	str extract	0.035714
microseconds (>= 0 and less	timedelta index microseconds	0.066667
copy of self coded with categories	core categorical codes for groupby sort	0.071429
the float values converted	io formats float	0.055556
o and	msgpack packb o	0.055556
a string-like that is object dtype	string array data encoding	0.038462
dateoffset	begin	0.500000
wrapper function for	comp method	0.333333
float values converted	formats float array formatter	0.055556
set of sparseseries (with	core sparse	0.041667
to read from	read	0.033333
update index attributes e	indexes datetime index maybe update attributes attrs	0.200000
layout some dataframes in vertical/horizontal layout for explanation	table plotter	0.125000
method to handle na filling of take	index assert take fillable values indices	0.250000
full scope for use with passing to engines	computation scope full scope	0.055556
with the block	col create for block	0.333333
not supported for panel objects and will raise	core panel to	0.027027
if label is not	label	0.028571
must already exist and be	format	0.012346
view of myself	view	0.043478
non-tuple indexer which could be	indexer indexer target	0.071429
take a string-like that	string array data encoding	0.038462
a string-like	io convert string array data	0.038462
return	of merge get	0.500000
a la re split in	split arr	0.200000
are index sliceable then return my slicer otherwise	index sliceable obj key	0.083333
sets the view limits to the	plotting time series date locator autoscale	0.055556
dataframe to a sql database	sqldatabase to sql frame	0.500000
_apply kwargs and	window center	0.076923
sets the view limits to	time series date locator autoscale	0.055556
replacement attributes	selection mixin shallow copy obj obj_type	1.000000
construct an intervalindex from	core indexes interval index from arrays	0.166667
return the block manager from	core sparse to manager sdf columns index	0.052632
raise	compat chain map	0.032258
nrows ncols -	util make custom dataframe nrows ncols	0.250000
'series argmin' is called via the 'numpy' library	with skipna skipna args	1.000000
return a tree-like object that	build	0.013514
add numeric operations to the	add numeric operations cls	0.166667
to ndarray raises on scalar data	to ndarray cls data	0.166667
align a set of terms	computation align terms	1.000000
return the underlying data as an ndarray	core indexes index values	1.000000
true if this is a	is in	0.076923
called prior	prepare result	0.111111
saturday use following monday instead	tseries next monday dt	0.250000
by	formats	0.031250
recursively evaluate	bin op call env	1.000000
into a list	io html frame parser	0.012195
value for the dtype of the values	value dtype	0.142857
not satisfy the boolean criterion specified by func	ndframe group by filter func dropna	0.250000
a scatter plot from two dataframe columns parameters	plotting scatter plot data x y	0.125000
with nat-like arg	arg	0.018868
given a tuple	multi index get	0.100000
we don't support start stop kwds in	fixed validate read kwargs	0.200000
resampling when using a timegrouper	resample rule	0.166667
number	core indexes	0.009524
values between particular times of	index indexer between	0.125000
pack object o and return	o	0.043478
if we do need a multi reindex	ndframe needs reindex multi axes method	0.333333
(header new_data) for header rows in multiindex parsing	header name row index_col	0.200000
perform the reduction type operation if	ops mixin reduce op name axis skipna	0.083333
bytes in the underlying data	range index nbytes	0.052632
decorator to capture stderr in	util capture stderr	0.055556
that we have a valid ordered	ordered cls ordered	0.058824
a left and right array parameters	left right closed	0.166667
string-like	io convert string array data encoding	0.038462
blocks collect and create	consolidate transposed	0.062500
the boolean criterion specified by func	group by filter func	0.250000
null	null	0.833333
parse time strings to time	to time	0.125000
given a tuple of slices/lists/labels/boolean indexer to	multi index get	0.100000
if multiindex	multi	0.018182
remove	compat	0.030303
and return the block manager from a dataframe	manager sdf columns index	0.052632
cast values to	parser base cast types values	0.500000
series or dataframe only	series or dataframe	0.500000
check if the object is a named tuple	core dtypes is named tuple obj	1.000000
needs	indexes period index array wrap result	0.050000
return a string representation for this	index unicode	0.083333
add the operations to the cls evaluate	panel add aggregate operations cls	0.500000
validate that an positional indexer cannot enlarge	indexer has valid positional setitem indexer indexer	0.052632
convert a scipy sparse coo_matrix to a	sparse coo to sparse series a	0.166667
cross-tabulation	crosstab index columns values	0.066667
objects	group	0.027027
/ pandas type to	table type x	0.055556
to see if we can	can	0.111111
explict type promotion and	core dtypes maybe upcast values fill_value dtype copy	0.166667
return datetimeindex	index	0.002004
value from 1-dimensional ndarray only use this if	indexes datetime index get value series	0.071429
the passed type is an actual dtype that	extension dtype is dtype cls dtype	0.111111
check value is valid for scalar op	index assert can do op value	1.000000
table outplot	util table plotter conv data	0.142857
convert to our native types format slicing if	core datetime block to native types slicer	0.250000
boolean whether this axes needs validation	ndframe indexer should validate iterable	0.166667
fill_value_typ	fill_value_typ	1.000000
the float values converted into	io formats float array formatter get result as	0.055556
this frame	data frame	0.005714
ndarray only use this	index set value arr key	0.023810
returns	get	0.007143
with nat which has	ops mixin nat new box	0.050000
iterate over the blocks collect and create	reduction f axis consolidate transposed	0.062500
we have	categorical	0.009615
of casting data from some accepted	index assert safe casting cls data	0.047619
dispatch to apply we are stripping all of	by mixin apply	0.050000
frequency timedelta index with day as the	core indexes timedelta	0.083333
that left and right	left right check_exact check_dtype	0.333333
coerce a scalar to a compat	period index coerce scalar to	0.071429
same function multiple times in parallel	parallel	0.083333
as	indexes period	0.034483
wrap comparison operations to convert timedelta-like	core indexes td index cmp opname nat_result	0.055556
from maps[0] raise keyerror	map	0.029412
quantiles of the	block quantile qs interpolation axis mgr	0.500000
the indices that would sort the index and	index argsort	0.166667
the block we must	non consolidatable mix in	0.083333
a series we	series group	0.030303
and 'kwargs' should be empty	name args kwargs	0.166667
handling as	core indexes period	0.032258
convert to our native types	core float block to native types slicer	0.250000
bytes see :class packer for	io msgpack packb	0.025641
necessary for making this object picklable	indexes timedelta index setstate state	0.333333
to its values attribute if it has one	core	0.001326
v should be inserted in	searchsorted v	0.033333
when a manipulation result has the same dimensions	constructor	0.040000
number of microseconds (>= 0 and less	indexes timedelta index microseconds	0.066667
using another array which has bin edge values	bins generic values binner closed	0.200000
that can be used to iterate over	html frame parser build	0.014706
multiindex compute	core indexes multi	0.014493
a spreadsheet-style pivot table as a dataframe the	core reshape pivot table data values index columns	0.166667
with multi-level index return new dataframe	core data frame reset	0.027778
return a new block (of	block setitem indexer	0.066667
underlying array	indexes datetime index ops mixin	0.029412
to get lines 0) there are headers on	io python parser get	0.166667
specialized shift which produces a datetimeindex	core indexes datetime index ops mixin shift n	1.000000
fast lookup of value from 1-dimensional ndarray only	period index get value	0.071429
of a single element	core	0.001326
the installed version of openpyxl is	compat is compat major_ver	0.111111
only	core	0.001326
array of python datetime date objects	core indexes datetime index	0.007634
the values	core block shape values ndim	0.050000
float values converted into	float array formatter get result as	0.055556
shift the	core datetime tzblock shift	0.500000
styles to html	formats styler	0.021739
a new datetimeindex with passed location s deleted	timedelta index delete loc	0.500000
a repr function	repr	0.040000
encode character string in the series/index	core str encode	1.000000
to iterate over the	io html frame parser build	0.014706
an actual dtype	dtype cls dtype	0.125000
best locator based	date locator get locator	0.062500
a simple cross-tabulation of	reshape	0.037037
return packed bytes see :class	io msgpack	0.025000
that we have a valid ordered	ordered	0.017857
alignment_dict	cls alignment_dict	1.000000
not the 'usecols' parameter is	io evaluate usecols usecols names	0.083333
from 1-dimensional	set value	0.023256
categoricaldtype this metaclass determines subclass ability	dtype type	0.200000
an indexer like _name in the	cls name indexer	0.083333
the	core series	0.024000
and be table	hdfstore append key value	0.016667
dateoffset of one custom business month	custom business month begin	0.500000
passed panel or object coercible to panel	panel update other join overwrite filter_func	0.200000
lookup of	arr	0.013699
setting a timezone	timezone	0.083333
additional	wrap	0.019231
occupying requested label default to specified missing	sparse series get label default	0.083333
return resolution	resolution get	0.333333
are a series we	series	0.006757
return an indexer coerced to the codes dtype	maybe coerce indexer indexer	0.125000
have good categories	categories cls categories fastpath	0.250000
error dataframe/dict	plotting mplplot parse errorbars label err	0.142857
write this as	write obj	0.041667
return appropriate class of series	core dtypes get series result type result	0.250000
if the process of casting	assert safe casting	0.125000
to	append key value format	0.016667
same as values but handles sparseness conversions ;	get values	0.250000
that can be	html frame parser build	0.014706
the index	core indexes range index	0.021277
the float values	float array formatter get result as	0.055556
use this if you	core indexes index set value arr	0.023810
according to	slice bound	0.200000
object that can be used	parser	0.008000
holidays	holiday calendar holidays	0.166667
return object with labels on given axis	dropna axis	0.083333
value of the index	core indexes datetime index	0.015267
merge	merge other inplace	1.000000
gets called	indexes index array	0.100000
for explanation	table plotter	0.125000
datetimetz	datetimetz	0.714286
used to iterate over	frame parser	0.012500
used to iterate over the	io html	0.012987
convert to our native types format	block to native types slicer	0.250000
matches the expected exception and expected error message	exception matches exc_type exc_value trace_back	0.333333
iter1 iter2 iterables that produce elements	copy iter1 iter2	0.166667
a new datacol with the block i	create for block cls i name cname	0.333333
'numpy' library the	compat numpy validate take with	0.055556
the series extract groups from the first	core str extract frame arr	0.047619
as	core indexes period index array	0.050000
getitem defers to the underlying array which by-definition	index ops mixin getitem	0.250000
used when a	core ndframe	0.005051
only use	indexes index set	0.023810
elements of v should be	core indexes frozen ndarray searchsorted v	0.033333
the underlying data	indexes range index	0.021277
sub-classes	data frame gotitem key ndim subset	0.333333
reverse convert a missing indexer which is	core convert missing indexer indexer	0.333333
we need to coerce a	coerce	0.025641
coerces data to ndarray raises on	to ndarray cls	0.166667
auto	auto	1.000000
the 'numpy' library	take with convert convert args kwargs	0.055556
and 'kwargs' should be empty because all	resampler func method args kwargs	0.142857
number of seconds (>= 0 and less than	indexes timedelta index seconds	0.066667
is a string	core indexes	0.004762
as the original	core	0.001326
value from 1-dimensional ndarray only use this if	period index get value series	0.071429
1-dimensional	indexes index set value	0.023810
are going to write	write obj	0.041667
interpolate machinery	interpolate with fill method	0.200000
datetime index	indexes bdate	0.050000
downsample the cython defined	index resampler downsample how	0.200000
block manager from a dataframe	to manager sdf	0.052632
additional handling as	result	0.016393
object o and return packed bytes	msgpack packb o	0.055556
scalar data	data	0.009709
handling	wrap	0.019231
the strides	strides	0.125000
diff	diff n	0.333333
return index to be used along concatenation	core reshape concatenator get concat	1.000000
helper to call encode before writing to	stata writer write to_write	0.083333
optional positional and keyword	util optional	0.066667
b	a b raise_on_error	0.333333
comparable timezone both for pytz /	core indexes datetime index timezone	0.200000
string-like that	convert string array	0.038462
types	types	0.379310
to class python 2 and python 3	cls name	0.125000
insert item	manager insert loc item	0.500000
v should be inserted in	indexes frozen ndarray searchsorted v	0.033333
add numeric operations	add numeric operations	1.000000
return if we are a categorical	is categorical	0.500000
create a new	dtypes datetime tzdtype new cls	0.333333
vector of label values for requested level	core indexes multi index get level values level	0.250000
the caption on	caption caption	0.166667
little	little	1.000000
apply the given offset/observance to a datetimeindex of	apply rule	0.200000
lookup of value from 1-dimensional ndarray only	indexes period index get value series	0.071429
the 'numpy' library	with convert	0.055556
evaluate	computation bin op evaluate	0.333333
convert	convert params	1.000000
alias to closest period strings bq->q etc	period alias offset_str	1.000000
convert to object if	multi index to safe	1.000000
same as values but handles sparseness conversions ;	series get values	0.500000
and	io hdfstore append key value	0.016667
seconds (>= 0 and less than 1 day)	timedelta index seconds	0.066667
fast transform path	ndframe group by transform fast result	0.333333
this object	indexes index	0.007353
index with custombusinessday as the default frequency	core indexes cdate range start end periods freq	0.500000
is valid for	core select n is valid	0.500000
for a recursive	compat recursive	0.166667
of the doc parms	core doc parms cls	0.250000
fixed frequency datetime index with custombusinessday as	indexes cdate range start end periods	0.083333
times	core	0.001326
append	hdfstore append key value format append	0.125000
naxes	naxes	1.000000
duplicate each string in the series/index by	core str	0.011364
a higher freq	cls value freq	0.083333
reindex	ndframe reindex	0.125000
/ or columns using input	axis mapper axis copy inplace	0.055556
the values to be at	shape values	0.050000
return valid other	binop other op	0.500000
deprecate	deprecate	0.545455
to apply we are	apply	0.026316
take the codes by the	take nd	0.047619
from ndarray or	data index columns dtype	0.125000
the symmetric difference of two index objects	indexes index symmetric difference other	0.166667
file node must	io hdfstore append key value format	0.016667
self f skipping	n skiprows	0.333333
multirow	formatter format multirow	0.250000
1-dimensional ndarray only use this if you	key	0.005051
the datetimelike methods (as we may have	datetimelike methods	0.066667
fast transform path	core ndframe group by transform fast result obj	0.333333
return	get reso	1.000000
result as series or by a	groupby by axis level	0.045455
general index and	core indexes index validate names name	0.066667
is called upon unpickling rather than the default	new datetime index cls d	0.111111
apply the function to my	apply func mgr	0.166667
element in the series/index	core str get arr	0.142857
vector of label values for requested level	index get level values level	0.250000
needs	indexes period index	0.035714
dataframe plotting accessor and method examples	frame plot methods	1.000000
rewrite the assignment operator for pytables expressions that	core computation rewrite assign	0.125000
return a string representation for	unicode	0.058824
file	key value	0.011628
requested level the result will respect the	sortlevel level ascending sort_remaining	0.166667
string in the series extract groups from	str extract arr	0.066667
decorator to take optional positional and	optional args decorator	0.083333
or ndarray filled with nat which has	ops mixin nat new	0.050000
index objects and sorts	core indexes index	0.007042
must	key value	0.011628
a feather-format object	feather	0.050000
a nice str repr of	window unicode	0.071429
return a list of the axis indicies	panel extract axes data	0.142857
iter2 iterables that produce	iter2	0.083333
sets names on levels warning mutates!	core indexes multi index set names names level	0.200000
a ufunc	index array wrap result context	0.068966
fast transform path for	transform fast	0.250000
after a ufunc	indexes index array wrap result context	0.200000
new unit if needed otherwise return from the	dtypes datetime tzdtype new cls unit tz	0.055556
take which sets nan values	core take nd arr indexer	0.125000
csv file (discouraged please use	core data frame from csv cls path header	0.066667
the vectorized membership of x not in	not in x	0.166667
a string-like that is object	convert string array data	0.038462
only use this if	set value arr	0.023810
to deal with nat-like arg	arg errors	0.026316
applies the put method to its	series put	0.055556
file node must already	io hdfstore append	0.016667
optional set logic	join_axes	0.166667
index labels returning a dataframe	core data frame	0.005917
set the	io generic index col	0.500000
the binary	fname	0.071429
an indexer like _name in	name indexer	0.083333
to turn	for	0.071429
this is defined as	index view cls	0.047619
membership of x in y if possible	computation in x y	0.047619
the array interface return my	array dtype	0.125000
coerce	coerce args	0.333333
if 'series argmin' is called	skipna skipna args kwargs	0.100000
a masked rec array and create the manager	core masked rec array to mgr data	0.500000
1-dimensional ndarray only	core indexes index set value arr key	0.023810
1d array of	intervals cls data name copy	0.250000
according	slice bound	0.200000
return index or ndarray	datetime index	0.007042
additional	indexes period index array	0.050000
to the underlying array	ops mixin	0.033333
return the number	indexes multi	0.014493
as a dataframe the	data values index columns	0.066667
alert a user about a malformed	alert malformed msg	0.500000
we have a full	core is full	0.500000
return the numexpr condition and filter	expr evaluate	0.200000
slice of my values	slice slicer	0.070175
object in hdfstore parameters	io hdfstore put key	0.333333
a scatter plot from two dataframe columns parameters	plotting scatter plot data x	0.125000
split each string a la re split in	split arr pat n	0.200000
reshape long-format data to wide generalized inverse	reshape lreshape data	0.500000
the float values converted into strings	float	0.024390
the cached item item represents a	core ndframe iget item cache item	0.090909
to ndarray raises on scalar data converts	index coerce to ndarray cls data	0.166667
packed bytes see :class packer for options	msgpack packb	0.025641
number of	indexes range	0.062500
for options	msgpack packb	0.025641
the internal dtype s bears the risk of	subarr	0.050000
1-dimensional ndarray only use this	core indexes index	0.007042
a slice	core ndframe slice	0.125000
decorator to take optional positional	optional args decorator	0.083333
panel	core panel update other	0.500000
decorator to deprecate	util deprecate	0.166667
the 'numpy' library the third	validate take with convert convert	0.055556
value from	set value arr key value	0.038462
union of two index objects and	range index union other	0.083333
bind a method to class python 2	compat bind method cls name func	0.200000
handle na filling of take	indexes multi index assert take fillable	0.250000
to handle na filling	fillable values	0.125000
for header rows in multiindex	pop header	0.100000
create the description	create description complib complevel fletcher32	1.000000
boolean if we need a qualified info display	indexes index is memory usage qualified	1.000000
multiindex at the requested level the	core indexes multi index sortlevel level	0.250000
starting at the end of the string	rsplit	0.031250
boolean whether this axes needs validation for	indexer should validate iterable	0.166667
filtered indexer that doesn't have any missing	missing indexer tuple indexer axes	0.333333
from sif to	to	0.006329
for datetimelike properties of the series values	timedelta properties	0.052632
apply function to all values found in index	transform index index func	1.000000
that an positional	ndframe indexer has valid positional	0.250000
return packed bytes see :class packer	io msgpack packb	0.025641
provided date forward	tseries date	0.083333
hard to parse	tools parse time	0.125000
column values uses	values	0.008547
that an positional indexer cannot	ndframe indexer has valid positional setitem indexer indexer	0.052632
file node must already exist	value format	0.016667
array	hash array	0.500000
if	core indexes index set	0.023810
from 1-dimensional ndarray only use this if you	core indexes index	0.007042
the interpolate machinery	interpolate with fill method axis inplace limit	0.200000
from 1-dimensional	indexes index set value arr	0.023810
multiindex from	core indexes multi	0.014493
gets called prior	array prepare result	0.111111
interpolate values according	resampler interpolate method axis	0.166667
take a string-like	convert string array data encoding	0.038462
object that can be used	build	0.013514
datetime date objects (namely the date	core indexes datetime index date	0.333333
rows of other to the end of this	other	0.013514
take a string-like that is	string array data	0.038462
iterating over the other axis	axis	0.011364
we	core categorical validate ordered cls	0.055556
key or none if it does not exist	key	0.005051
to scipy interpolate interp1d method is scipy's kind	core interpolate scipy wrapper x y new_x method	0.500000
boolean indicating if self is view	core ndframe is view	0.200000
create a scipy sparse coo_matrix from a sparseseries	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
alert a user	python parser alert	0.200000
encode input values as an enumerated type or	factorize values sort order	0.111111
index with day calendar as the	indexes	0.004651
'name' parameter for general index and	indexes index	0.007353
after a ufunc needs additional handling as	array wrap result context	0.029412
label for last non-na/null value	core data frame last valid	0.250000
is_setter	is_setter	1.000000
series or by a series	by axis level	0.045455
an attributes dict for	attributes dict	0.250000
indexes give a	indexes	0.004651
(attr formatted_value)	core indexes multi index format attrs	0.142857
nat-like arg is a passed	arg errors	0.026316
to table in file node must	append key	0.016667
self as a sparse	sparse sparse series as sparse	0.250000
method to handle na filling of take	take fillable values indices	0.250000
index objects and	indexes index	0.007353
fixed frequency timedelta index with day as	core indexes timedelta range start end	0.083333
& release the	io data col take	0.333333
series extract groups from the first match of	core str extract frame	0.047619
attempt to write text representation of object to	ndframe to	0.043478
update index attributes e g freq depending	core indexes index maybe update attributes	0.200000
the float	float	0.024390
makes sure that time and panels are conformable	indices time panels	0.250000
file begins with the bom character	bom first_row	0.500000
method to	method cls name	0.076923
ndarray of the flattened values	core indexes index ravel order	0.037037
dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis	1.000000
a tree-like	frame parser build	0.014706
we are index sliceable then	to index sliceable	0.083333
the minimum values along an axis	datetime index ops mixin argmin axis	0.250000
set/update the info for this indexable with	io index col update info info	0.090909
the where condition cond on a and b	computation where cond a b raise_on_error	0.500000
union of two multiindex objects sorting	core indexes multi index union other	0.066667
chunksize	chunksize	1.000000
indexer which could be	indexer indexer	0.071429
make new index	core indexes index	0.007042
determines if two index objects contain the	indexes float64index equals other	0.200000
reverse of try_coerce_args / try_operate	time delta block try coerce result result	0.333333
to class python 2	cls name func	0.125000
type is	is	0.015873
to an ndarray copy if	index dtype copy	0.043478
and plural 'names' parameter for multiindex	names deep	0.125000
builds a concise listing of available options	pp options list keys width _print	0.111111
return a list of normalized locales	locales locales	0.200000
ftypes in this	ftype	0.076923
that left and right index are equal	util assert index equal left right	0.333333
reduction type operation	index ops mixin reduce op name axis	0.083333
tree-like object	frame	0.009091
boolean array of whether each index value	core indexes datetime index ops	0.034483
series to dataframe in	core data frame	0.005917
guarantee the shape of the values to be	shape values ndim shape	0.083333
if we define an builtin function	core selection mixin is builtin func	0.333333
encode input values as an enumerated type	core factorize values sort order na_sentinel	0.111111
apply we	group by mixin apply	0.050000
return label for last non-na/null value	core data frame last valid	0.250000
packed bytes see :class packer	io	0.003012
null_color for missing	styler highlight null null_color	0.125000
index with day	core indexes period	0.032258
for options	io msgpack packb	0.025641
attempt to infer better dtype for object	ndframe convert datetime numeric timedelta coerce	0.071429
list representing the totally ordered cartesian product of	sort xnull	0.066667
convert timedelta-like to	indexes td index cmp	0.055556
string-like that is object	convert string array data	0.038462
a repr function return fillvalue for a recursive	compat recursive repr fillvalue	0.333333
an item pair from	chain map popitem	0.055556
this is defined as a copy with	core indexes multi index view cls	0.047619
file node must already exist and be	format	0.012346
padded hexadecimal	computation raw hex	0.333333
set	sparse sparse series set value	1.000000
data converts other	cls data	0.076923
this getitem defers to the underlying	indexes datetime index ops mixin getitem key	0.333333
from ndarray or list	data index columns	0.125000
values and a date_format return	datetime64 from values values date_format	0.250000
pack object o and return packed	msgpack packb o	0.055556
return slice points for level 0 assuming	core indexes multi index bounds	0.166667
whether	compat_args	0.166667
the axis to the block_manager axis	ndframe get block manager axis axis	0.166667
a custom	from custom	0.500000
return the correct fill value for the dtype	core get fill value dtype fill_value fill_value_typ	1.000000
object	period	0.016667
return	range index	0.021739
to a leap	core indexes period index is leap	0.125000
summarized representation	index ops mixin summary name	0.333333
value from 1-dimensional ndarray only use this	core indexes datetime index get value series	0.071429
lists to line delimited	to line delimits s	0.166667
create a new block manager	block manager reduction	0.250000
of value from 1-dimensional ndarray only	core indexes period index get value	0.071429
sub-classes	core resampler gotitem key ndim subset	0.333333
function to determine if dtype is valid	select n is valid dtype n method dtype	0.142857
true if the levels of both multiindex objects	indexes multi index equal levels other	0.100000
datetime index with business	core indexes	0.004762
draw a matrix of	matrix frame alpha figsize ax	0.500000
of kwargs suitable for initializing	kwargs	0.022222
new sparsedataframe	core sparse sparse	0.034483
to write this as	write obj	0.041667
downsample the cython	period index resampler downsample	0.200000
after	core series array wrap	0.100000
if the	core	0.014589
for making this object picklable	core sparse sparse array setstate state	0.333333
index value is found	core indexes datetime index ops mixin isin	0.083333
necessary for	core sparse sparse	0.034483
into a list of	io html frame parser	0.012195
only makes sense when fill_value	core sparse stack sparse frame frame	0.333333
check to see if we can	util can	0.250000
values to be at least 1 d	values ndim	0.050000
are of mixed type	chained assignment possible	0.142857
underlying data as a	index ops mixin	0.019231
or regular expression in	arr pat flags	0.062500
return dtype and n/a values to	core get empty dtype and	0.125000
for making this object picklable	indexes datetime index setstate state	0.333333
convert timeseries to specified	core ndframe asfreq	0.250000
to the length of that group	core group by	0.027778
set of kwargs suitable	kwargs cls	0.040000
this	indexes period index	0.035714
lazily iterate over index value tuples	series iteritems	1.000000
monotonic decreasing	index get fill indexer searchsorted target method limit	0.142857
an intervalindex from a a left and right	indexes interval index from arrays cls left right	1.000000
formatted data	index formatter func	0.333333
return index to be used along concatenation axis	reshape concatenator get concat axis	1.000000
perform __getitem__-like return result as block	core block getitem block slicer new_mgr_locs	1.000000
pairwise correlation of columns excluding na/null values parameters	core data frame corr	0.111111
pairwise	pairwise	0.833333
a boolean if we	indexes index is	0.100000
ndarray	core indexes index set value arr	0.023810
operations to the cls evaluate	aggregate operations cls use_numexpr	0.142857
ndarray only	set	0.012195
interactive shell	interactive session	1.000000
we are going to write this as	write obj data_columns	0.111111
block manager from	sparse to manager sdf columns index	0.052632
in file node must already exist	hdfstore append key value	0.016667
we have a	core categorical validate ordered	0.055556
particular dataframe invoked by unicode df in py2	data frame unicode	0.166667
draw histogram of	hist frame data	0.200000
checks whether	check for	0.333333
a string-like that is object dtype and	convert string array data encoding	0.038462
ensure that an array object	core dtypes ensure	0.200000
in file node must already exist and	io hdfstore append key	0.016667
the put method to its values attribute	series put	0.055556
packed bytes see	msgpack packb	0.025641
raise	map	0.029412
apply we are	mixin apply func	0.050000
an asof merge	merge asof	0.333333
must	io	0.003012
the node with the key or none	io hdfstore get node key	0.083333
create a new unit if needed	dtypes datetime tzdtype new cls unit tz	0.055556
of all the classes	all	0.043478
of putmask that	putmask	0.055556
deprecate a keyword argument of	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
decorator to capture stderr in a	util capture stderr f	0.055556
node must already	io hdfstore append key value format	0.016667
provide concatenation of an datetimelike	core dtypes concat datetime to_concat axis typs	0.142857
fast path for getting	core single block manager fast	0.250000
ndarray only use this if you	arr	0.013699
to specified frequency	core ndframe asfreq freq method	0.250000
provided array or	arr_or_dtype	0.142857
value from 1-dimensional ndarray only use	datetime index get value series key	0.071429
x in y if possible otherwise use	computation in x y	0.047619
accuracy	accuracy	1.000000
elements of v	searchsorted v	0.033333
from 1-dimensional ndarray only use	index set value arr	0.023810
to coerce a scalar to	indexes period index coerce scalar to	0.071429
sets names	set names names level	0.200000
ensure incoming data can be represented as uints	core indexes uint64index assert safe casting cls data	0.333333
array	series array	0.090909
table in file node must	value	0.005155
the datetime format of a given datetime	datetime format dt_str	0.250000
file node must already	hdfstore append key	0.016667
return a boolean whether i can attempt conversion	indexes is convertible	0.333333
label if label is not contained	label	0.028571
type window_type and size window on the	window arg window win_type	0.100000
the same dimensions as the original	core ndframe	0.005051
for as_blocks()	blocks	0.071429
python expression as	eval expr	0.083333
format my	indexes interval index format	0.500000
values using _write_array	wormtable	0.166667
for header rows in multiindex parsing	pop header	0.100000
to coerce a scalar to	period index coerce scalar to	0.071429
list of the underlying data	indexes datetime index ops mixin tolist	0.333333
we are going to write this as	write obj	0.041667
return the mode s	mode	0.050000
fast lookup of value from	arr key value	0.038462
you	indexes index set	0.023810
or columns using input function or	copy inplace	0.055556
function to get object	func	0.011905
of value from	value	0.005155
set new	set	0.012195
lookup of value from 1-dimensional ndarray only use	indexes categorical index get value	0.100000
table in file node must already exist	append key	0.016667
put single value at passed column and index	frame set value index col value takeable	1.000000
along a particular axis with optional set logic	axis join join_axes	0.250000
evaluate the block return result block	core block eval	0.333333
prior to	series array prepare	0.111111
the kinds allowable columns for this object	io table queryables	0.055556
and / or columns using input function	mapper axis copy inplace	0.055556
version to operate on	block try operate	0.333333
:class packer for	packb	0.022727
format into long stacked format as dataframe	frame	0.009091
return a tree-like object that can be used	frame parser build	0.014706
return the header	html frame parser parse thead	0.111111
hashed	hashed	1.000000
to dispatch to the	ensure compat dispatch name	0.500000
concatenation of an datetimelike	dtypes concat	0.100000
convert to	categorical block to	1.000000
ndarray only use	indexes	0.004651
in numeric methods	numeric methods	0.500000
want to set the _typ here	series set axis axis labels fastpath	0.200000
add in categorical	core indexes categorical index add	1.000000
file node must already exist and be	hdfstore append	0.016667
the reindex for all	ndframe reindex	0.125000
1-dimensional ndarray only use	index set value arr	0.023810
doesn't like to compare	like	0.058824
index value is found in the	datetime index ops mixin isin	0.083333
box function to	datetime index ops mixin box func	0.142857
multiindex on a particular axis parameters	axis	0.022727
function for series arithmetic operations	core sparse arith method op	0.333333
connect to the	util can connect	0.111111
datetimeindex with times to	indexes datetime	0.011494
that create a table reflecting the structure	table create table setup	0.066667
stata date formats	stata	0.022222
list-like indexer	interval index convert list indexer keyarr kind	0.066667
the underlying data which is a	index values	0.111111
cartesian product of all possible	shape sort	0.200000
the minimum value	core index ops mixin min	0.125000
wrap result	wrap result	0.022727
read text from clipboard and pass to	read clipboard sep	0.200000
the arg	arg errors	0.026316
invert	invert	1.000000
the best locator	date locator get locator	0.062500
series extract groups from the first	extract	0.030303
sort multiindex at	indexes multi index sortlevel	0.166667
of bytes in the	core indexes range index nbytes	0.052632
a simple cross-tabulation	values	0.008547
only if the process of casting data from	numeric index assert safe casting cls data	0.047619
do not satisfy the boolean criterion specified by	core ndframe group by filter	0.200000
styles	formats styler	0.021739
on a particular axis parameters	axis	0.022727
'series argmin' is	skipna skipna	0.100000
return the len of myself	size	0.041667
types	types slicer na_rep float_format decimal	0.200000
cut where we convert	cut x	0.200000
box function to get object from internal	ops mixin box func	0.142857
string-like and string-like	string	0.018868
deprecated use :meth categorical sort_values that function	categorical sort inplace ascending na_position	1.000000
the number of	core indexes	0.009524
shift	datetime tzblock shift	0.500000
to target time zone	tz axis level	0.500000
coerce a string	dtypes coerce	0.066667
axis	ndframe rank axis	0.250000
value from 1-dimensional ndarray only	core indexes period index get value	0.071429
dataframes in vertical/horizontal layout for explanation	table plotter	0.125000
the slice locations for input	slice locs start end step kind	0.083333
resolve a variable name in	computation scope resolve	0.166667
times to midnight length is	index	0.002004
array interface return my values	multi index array dtype	0.125000
exception that	parser	0.008000
row cross-section from	xs key	0.333333
table in file node must already exist and	io hdfstore append key value format	0.016667
our index	index item	0.100000
file node must	key value format	0.016667
sets names on levels warning	set names names	0.200000
a tree-like	build	0.013514
columns excluding na/null values parameters	data frame	0.005714
iterate over infor axis	ndframe iter	1.000000
midnight length	indexes	0.004651
1-dimensional ndarray only	set	0.012195
1-dimensional ndarray	indexes index	0.007353
update index attributes e g freq	indexes timedelta index maybe update attributes attrs	0.200000
and/or after some particular index value	after axis	1.000000
add in numeric methods	index add numeric methods	0.500000
check the key for valid keys across my	valid tuple key	0.333333
list of the axis indicies	panel extract axes	0.142857
object are unique	unique	0.090909
the full scope for use with passing to	computation scope full scope	0.055556
return packed bytes	msgpack packb	0.025641
the intersection of two index objects	range index intersection other	0.083333
of v should be	v	0.026316
index	indexes categorical index	0.047619
all the	all	0.086957
return the node with the key or	io hdfstore get node key	0.083333
length of this	len	0.071429
sif to	to	0.006329
to iterate	io	0.003012
this if you	value	0.005155
trims zeros leaving just one before	formats trim zeros str_floats na_rep	1.000000
a scalarblock	core block make block scalar values	0.333333
that can be used to	io html	0.012987
pivot to	to blocknd values	0.500000
return copy of the list	core sparse sparse list copy	0.500000
are datetime objects	indexes numeric index is	0.333333
coerce to the new	copy errors	0.250000
is of a string-like	dtypes is string	0.500000
ufunc needs	period index array wrap result context	0.041667
construct an intervalindex from a 1d array of	index from intervals cls data name copy	0.125000
indices where elements of v should be inserted	frozen ndarray searchsorted v	0.033333
recursively evaluate an expression	core computation bin op call env	0.250000
in file node	io hdfstore append key	0.016667
file node	io hdfstore append key	0.016667
data to ndarray raises on	indexes index coerce to ndarray cls	0.166667
return a string representation	indexes frozen ndarray unicode	0.083333
return the values & release the memory	index col take data	0.111111
we always want to return a periodindex	index shallow copy with infer values	0.200000
try to	block try	1.000000
if we are index sliceable then return	convert to index sliceable obj key	0.083333
reset_index	core series reset index level drop name	1.000000
row elements from the parsed table element	io html frame parser parse tr table	0.200000
the put method to	series put	0.055556
the cached item item represents	ndframe iget item cache item	0.090909
to_write	to_write	1.000000
a feather-format object from the file path	io read feather path	0.333333
fast lookup of value from 1-dimensional ndarray only	period index get value series key	0.071429
a list of tuples of the (attr formatted_value)	core indexes index format attrs	0.142857
available options grouped by	core pp options	0.083333
gets called after	core indexes	0.009524
be	io hdfstore append key	0.016667
supported for panel objects and will	panel to sparse	0.037037
n between self	n	0.045455
fast version of transform only applicable	core series group by transform fast func	0.500000
fixed frequency datetime index with business	core indexes bdate range start end periods	0.083333
dtype but could really be ints/strings	core tools attempt yyyymmdd	0.333333
return a rolling grouper providing rolling	core group by rolling	0.333333
the 'numpy' library	compat numpy validate take with convert convert	0.055556
rank the values along a given axis	core rank values axis method	1.000000
for temporarily setting a timezone	util set timezone tz	0.142857
manager with the	core block manager	0.022727
o and return packed bytes see :class	msgpack packb o	0.055556
each dataframe in panel to	core panel to	0.027027
reverse convert a missing	core convert missing	1.000000
the series extract groups from the first match	str extract frame arr	0.047619
result block s	block where other cond align	0.166667
provides a resample of a groupby implementation	timedelta index resampler groupby	0.166667
arr	arr	0.109589
file node must already	io hdfstore append key value	0.016667
return a tree-like	io html frame	0.012987
assert that we all have the same closed	append same dtype to_concat	0.500000
the series/index starts with passed pattern	core str startswith arr pat	0.333333
series arithmetic operations	series op	1.000000
error in a future release	core categorical reshape new_shape	0.142857
function for	bool method	0.333333
return the underlying data which	index values	0.111111
that	tok	0.166667
read csv file (discouraged please use	from csv cls path header	0.066667
return a	html frame	0.014706
numpy / pandas type	type	0.024390
force all buffered modifications to	hdfstore flush fsync	0.200000
the index and its underlying data	indexes range index	0.021277
return true if the levels of both	index equal levels	0.200000
downsample the cython defined	datetime index resampler downsample	0.200000
determines if two index objects contain the	core indexes float64index equals other	0.200000
of unique elements in the group	series group by nunique dropna	0.250000
td elements from a row element	parse td obj	0.083333
to table in file node must	append	0.012987
starting at the end of the string	rsplit arr pat n	0.037037
is thrown	parser	0.008000
optional positional and keyword arguments	optional args	0.066667
of value from 1-dimensional ndarray only use this	core indexes period index get value	0.071429
last day of the month and day_of_month	semi month end	0.166667
is of the string	core dtypes is string	0.500000
elements of v should	frozen ndarray searchsorted v	0.033333
evaluate an expression in	engine	0.111111
data to ndarray raises on scalar data converts	coerce to ndarray cls data	0.166667
datetime to	datetime to	0.100000
string representation for a particular	extension dtype repr	0.142857
init self from ndarray or list of lists	frame init matrix data index	1.000000
tree-like object that can be used to iterate	html frame parser build	0.014706
all of the	core	0.001326
1-dimensional ndarray only use this if	key	0.005051
do	do	1.000000
given width	arr width	0.142857
for making this object picklable	datetime index setstate state	0.333333
string	index parsed string to	0.500000
perform the reduction type operation if we can	index ops mixin reduce op name axis	0.083333
a	cls	0.016949
the header	io html frame parser parse thead	0.111111
return a tree-like object that can be used	frame parser	0.012500
unicode normal form for the strings in the	core string methods normalize form	0.066667
read csv file (discouraged please	frame from csv cls path header sep	0.066667
a boolean if we need	index is	0.083333
it to timedelta	timedelta index maybe	0.250000
the passed type is an actual dtype	dtypes extension dtype is dtype cls dtype	0.111111
update index attributes e g freq	timedelta index maybe update attributes	0.200000
of my values but densify first	non consolidatable mix in	0.083333
try hard to parse	core tools parse time	0.125000
new type	dtype copy	0.064516
path's extension against the writer's supported extensions	check extension cls ext	0.333333
method to handle na filling of	fillable	0.095238
return a uint64 ndarray of my hashed values	indexes multi index hashed values	0.166667
swap level	index swaplevel	1.000000
return index with requested level removed if	index droplevel level	0.250000
underlying data which is a	index	0.002004
a curve with holidays between	abstract holiday calendar holidays start end return_name	0.066667
object that can be used to iterate over	io html frame	0.012987
aggregators	aggregate arg	0.071429
to class python 2 and python	cls name func	0.125000
function for series arithmetic operations	core arith method series op	0.333333
the	categorical	0.028846
be	hdfstore append key value	0.016667
utility frequency conversion	freq	0.016129
the datetimelike methods (as	datetimelike methods cls	0.066667
assert that we all have the same closed	index append same dtype to_concat	0.500000
writer :	excel formatter write writer	1.000000
python datetime date objects (namely	datetime index	0.007042
called after	indexes period index	0.035714
returns *copy* of underlying	core indexes frozen ndarray values	0.250000
render a dataframe to a list of	data frame formatter to	0.083333
that can be used to iterate over the	frame parser build	0.014706
the index has not been lexsorted	unsorted index	0.250000
are index sliceable then	index sliceable	0.083333
a new unit	tzdtype new cls unit tz	0.055556
are not a floating index	indexes index maybe cast indexer	0.200000
boolean if values in the object are unique	mixin is unique	1.000000
applies a moving window	window	0.071429
my current col description	index col col	0.500000
convert timedelta-like	core indexes td index cmp opname nat_result	0.055556
this	ndframe	0.010050
particular object invoked by str	str	0.017544
a slice of my	categorical block slice slicer	0.083333
we have a fully reindex-output	data frame group by reindex output result	0.045455
create an indexer	core ndframe create indexer cls name indexer	0.166667
new dataframe with labeling information in	data frame	0.005714
find indices where elements of v should	ndarray searchsorted v	0.033333
evaluate the block return result block	block	0.008197
draw a matrix of scatter plots	plotting scatter matrix frame alpha figsize	1.000000
be	html frame	0.014706
a new categorical by default	categorical sort values inplace	0.166667
sets names on levels	index set names names level validate	0.200000
of the stata date formats	stata	0.022222
of whether each index value is found	index ops mixin isin	0.083333
that the specified exception is raised and that	util assert raises regex _exception _regexp _callable	0.200000
lookup	core indexes	0.004762
not the	io	0.003012
if	value	0.005155
swap levels i and j in a multiindex	ndframe swaplevel i j	0.333333
of putmask that potentially upcasts	dtypes maybe upcast putmask	0.200000
given axis omitted where alternately any or	frame dropna axis how thresh subset	0.100000
the totally ordered cartesian product of all possible	core get group index labels shape sort xnull	0.066667
resample of	datetime index	0.007042
if the passed type is	interval dtype is	0.066667
data is sparse|dense	series ftypes	0.250000
a la re split in the series/index by	core str split arr	0.166667
called	array	0.041667
single non-tuple indexer which	indexer indexer target	0.071429
is valid for	is valid dtype	0.500000
rewrite the assignment	rewrite	0.076923
timedelta-like	core indexes td index cmp	0.055556
corresponding to axis labels matching criteria parameters	core ndframe select crit axis	0.250000
to long	to long	0.500000
return an xarray object from	to xarray	0.125000
a	core reshape crosstab index columns	0.066667
bit of a hack to accelerate unioning	datetime index union many others	0.040000
synonym for :meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace	0.333333
times	indexes datetime	0.011494
the (attr formatted_value)	index ops mixin format attrs	0.142857
from a	html frame parser parse	0.250000
we have a fully reindex-output to the levels	data frame group by reindex output result	0.045455
for datetimelike properties of the series values	period properties	0.052632
numpy ndarray's __getitem__ method to work as desired	index getitem key	0.166667
rewrite the	core computation rewrite	0.125000
need to coerce a scalar to a compat	index coerce scalar to	0.071429
header of	io html frame parser parse thead	0.111111
values to	block shape values ndim	0.050000
a tree-like object that can be used	html	0.011765
our native types format slicing	native types slicer na_rep	0.200000
validate against an existing table	io table validate other	1.000000
gets	core series array	0.100000
reduce join_unit's shape along item axis	core trim join unit join_unit	0.500000
from the	raise_on_error	0.125000
check all axes except items	block manager is indexed like other	1.000000
object that can	io html frame parser build	0.014706
return a new manager with	block manager	0.021277
check for categorical columns retain categorical information	io stata writer prepare categoricals data	0.166667
tree-like object that can be	html frame parser build	0.014706
series or by a	groupby by axis level	0.045455
use this if you	indexes index set	0.023810
internal method to handle na filling of take	take fillable values	0.250000
checks whether the 'name' parameter for parsing is	io validate	0.031250
starting at the end of the	rsplit	0.031250
end_date	end_date	1.000000
of an	indexes index	0.007353
evaluate the block	eval func	0.200000
a multi-index suitable for a panel-like dataframe	panel index time panels names	0.076923
masked rec array and	core masked rec array to	0.090909
return the td elements from a row	frame parser parse td obj	0.083333
of index	index	0.004008
the underlying array	datetime index ops mixin	0.029412
index or ndarray filled with	core indexes datetime index ops	0.034483
not satisfy the boolean criterion specified by func	ndframe group by filter func	0.250000
string-like that is object dtype and coerce to	convert string array	0.038462
from each group if n is an int	core group by	0.027778
lookup	arr	0.013699
with the	get	0.007143
the formatted data as a	indexes index formatter func	0.083333
table in file node must	format	0.012346
the name this allows simpler access to	ndframe setattr name	0.166667
styler	formats styler	0.065217
create a table reflecting the structure	io sqlite table create table setup	0.066667
connect	util can connect	0.111111
define an builtin function for this argument	builtin func	0.200000
can be	frame	0.009091
transposed	transposed	1.000000
provides a	index resampler	0.065217
index with target's values	core indexes multi index	0.013158
re-evaluate	and	0.066667
header rows in multiindex parsing	header	0.066667
if	core dtypes	0.018519
intervalindex with	indexes interval index	0.062500
plotf	plotf	1.000000
the handle	io	0.003012
a moving window of type window_type on	apply window mean how	0.166667
input order may not	order	0.125000
the series only operations to the cls evaluate	series only operations cls	0.333333
a tree-like object that can be	frame	0.009091
an indexer like _name in the	indexer	0.009174
each string in the series/index by indicated	core str repeat	0.045455
the aggregators	selection mixin aggregate arg	0.166667
of one custom business month	custom business month end	0.200000
params args to dbapi2 0 compliant format	params	0.058824
merge holiday calendars together the caller's class	tseries abstract holiday calendar merge	1.000000
return datetimeindex with times to midnight length is	core indexes	0.004762
the dtype object of the underlying data	core series dtype	0.333333
set my	io fixed set object info	0.200000
index parameters	set value index	0.166667
sparseseries or sparsearray	to sparse	1.000000
parsed table element	html frame parser parse tr table	1.000000
indexer fill with	indexer allow_fill	0.050000
: int slice or sequence of integers	core data frame ixs	0.200000
timedelta-like	core indexes td	0.055556
sure that we have a fully reindex-output to	data frame group by reindex output result	0.045455
into a	html frame parser	0.012658
object and the specifications setup the internal grouper	set grouper obj sort	0.250000
each string a la re split in	split arr pat	0.200000
string a la re split in the series/index	core str split arr	0.166667
string raise a typeerror	cls string	0.125000
casting data from some accepted dtype to the	safe casting cls data	0.047619
the values to be at least 1 d	shape values	0.050000
to inat	time delta block try	0.500000
each element in the series/index	core str get	0.142857
a series that is datetimelike	to datetimelike data copy	0.125000
the number of bytes in	index nbytes	0.052632
return result as series or by a series	by axis	0.045455
a decorator to take optional	util optional args decorator	0.083333
resample	period index resampler	0.062500
validate that an positional	ndframe indexer has valid positional setitem	0.250000
if we are index sliceable then	index sliceable obj key	0.083333
used	parser	0.008000
bind a method to	compat bind method cls name	0.200000
an xpath expression	xpath expr attrs	0.166667
can safely be cast to	name val min_val	0.083333
true if i am a non-datelike	block is datelike	0.500000
values to be at	block shape values ndim	0.050000
from 1-dimensional ndarray only use	core indexes index set value arr	0.023810
its values	core series	0.008000
reset_index	series reset index level drop name	1.000000
params	params	0.294118
size and	size	0.041667
deprecated option if key is deprecated	deprecated option key	0.333333
arguments	args values other	0.142857
the object is list-like	core dtypes is list like obj	0.333333
compute the sample skewness	core nanskew values axis skipna	1.000000
index values and index	core indexes datetime index	0.007634
or functions	rename axis mapper axis	0.333333
ax	ax	0.714286
append to table in	value format append	0.125000
return slice points for level 0 assuming	multi index bounds	0.166667
called after	array	0.041667
in panel	core panel	0.019231
to table	io hdfstore append	0.016667
pairwise correlation of columns excluding na/null values	core data frame corr method	0.111111
if	index	0.002004
kwds in sparse	io sparse	0.166667
for making this object picklable	indexes multi index setstate state	0.333333
the values parameters	core	0.001326
get integer	multi index get	0.100000
string in the series extract groups from the	extract	0.030303
call encode before writing to file for	stata writer write to_write	0.083333
time the time part of	index time	0.111111
values and index	index	0.002004
check if we're running in an	in	0.125000
combine list-like of	core	0.001326
methods	methods cls	1.000000
return a uint64 ndarray of my hashed values	core indexes multi index hashed values	0.166667
convert string-like and string-like array to convert	maybe convert string to	0.250000
text representation of object to the	to	0.006329
mixin to	mixin	0.111111
delimiter string starting at	rsplit arr pat n	0.037037
occupying requested label default to specified missing value	get label default	0.083333
series excluding missing	core series	0.008000
of self coded with categories as	core categorical codes for groupby sort	0.071429
ufunc	index array wrap result context	0.068966
float values converted	float array formatter get result as array	0.055556
new unit if needed otherwise	new cls unit	0.055556
protection	protection	0.857143
return my self as a sparse array	series as sparse array	0.250000
particular object invoked by str df	str	0.017544
each index value	indexes datetime index ops	0.034483
a pathlib path	io stringify path filepath_or_buffer	0.142857
manager with the blocks	core block manager combine blocks copy	0.250000
called	indexes period	0.034483
of normalized locales that do not throw an	util valid locales locales	0.050000
file node must already	append	0.012987
number of seconds (>= 0	core indexes timedelta index seconds	0.066667
expanding count of number of	stats expanding count	0.200000
temporarily setting a locale	util set locale new_locale lc_var	0.250000
and drop from frame raise keyerror if not	core ndframe pop	0.200000
underlying data	core indexes	0.009524
via the 'numpy' library the third	numpy validate take with	0.055556
type is an actual dtype	dtypes extension dtype is dtype cls dtype	0.111111
of value from 1-dimensional	indexes index set value arr key value	0.038462
dtypes to object for	dtypes	0.015873
its values attribute	core series	0.008000
fast lookup of value from 1-dimensional ndarray only	arr key value	0.038462
manager and a axes dict	init mgr mgr axes	0.333333
of bytes in the underlying data	core indexes multi index nbytes deep	0.052632
to iterate	frame parser build	0.014706
object that can be used to iterate over	io	0.003012
read from a url	io read	0.038462
propagate metadata from other to self	core ndframe finalize other method	0.333333
return new dataframe with labeling information	data frame reset	0.027778
return the len of	categorical size	0.111111
downsample the	datetime index resampler downsample	0.200000
not supported for panel objects	core panel to sparse	0.037037
return dateoffset object from	tseries to offset	0.200000
file	format	0.012346
returns the float	io formats float array formatter get	0.055556
process of casting	numeric index assert safe casting	0.125000
return datetimeindex with times to midnight length	index	0.002004
repeat elements of a categorical	categorical repeat repeats	1.000000
bytes in the	indexes multi index nbytes	0.052632
a tree-like object that can	html	0.011765
with closed bounds	closed bounds	0.500000
add	add delegate	1.000000
other	other	0.135135
'name' parameter for general index and plural 'names'	indexes index validate names name names deep	0.071429
i am never a view	is view	0.100000
tz-aware type	get tz tz	0.066667
a boolean whether i can attempt conversion to	core indexes is convertible to	0.333333
convert to our native types format	core float block to native types	0.250000
bound	bound	1.000000
hash table-based unique uniques are returned in	unique values	0.333333
:class packer for options	io msgpack packb	0.025641
where : array of timestamps	asof locs where mask	1.000000
the float values converted	formats float	0.055556
to table in file	io hdfstore append key	0.016667
timedelta index with	core indexes timedelta	0.083333
type window_type and size window on the data	rolling window arg window win_type min_periods	0.100000
id	id	0.857143
tree-like	html frame	0.014706
if a url has a	url url	0.045455
try to parse a ndarray like	try convert	0.166667
types to stata types returns	io dtype to stata type	0.500000
might need to coerce a code to a	maybe coerce freq code	0.076923
shift the	datetime tzblock shift	0.500000
array interface return my values	index array result	0.125000
the selection	io selection select coords	0.500000
init self	data frame init	0.500000
to ndarray raises on scalar data	core indexes index coerce to ndarray cls data	0.166667
the info for this indexable with the	io index col update info info	0.090909
the intersection of	intersection	0.083333
comparable timezone both for pytz	indexes datetime index timezone	0.200000
index names to 'index'	set default names	0.083333
from a masked rec array	masked rec array	0.250000
set new labels on multiindex	core indexes multi index set labels labels	0.333333
get/create the info for this	io get info info	0.333333
datetime format of a given datetime string	datetime format dt_str dayfirst dt_str_parse	0.250000
of the month and day_of_month	semi month end	0.166667
masked rec array and create the manager	core masked rec array to mgr	0.500000
in file node must already exist	append key value	0.016667
a ufunc needs additional	period index array wrap result context	0.041667
block that has a single	core simple blockify tuples	0.125000
simple cross-tabulation	crosstab index columns	0.066667
number of total columns	table ncols	0.250000
slice/take blocks	manager slice take blocks	0.500000
used when a manipulation result has the	constructor	0.040000
validates that	core categorical validate	0.055556
mixin to support a unified inteface	mixin	0.037037
function is called via the 'numpy' library	numpy validate take with convert convert	0.055556
provides a resample of a	datetime index resampler	0.066667
have a valid ordered	ordered	0.017857
of the	core	0.022546
pivot to the labels shape	block2d to blocknd values placement shape labels	1.000000
1-dimensional	core	0.001326
update index attributes e g freq	indexes timedelta index maybe update attributes	0.200000
we take a string-like that is object	convert string array data encoding	0.038462
normalized locales that do not throw	util valid locales locales	0.050000
fast lookup of value from 1-dimensional ndarray only	core indexes categorical index get value series key	0.100000
of index	datetime index	0.007042
wrapper function for series arithmetic operations	method series op	0.333333
convert to	to	0.018987
called via the 'numpy' library	with convert	0.055556
ndarray copy if specified	copy	0.012821
apply	apply	0.289474
reduction type operation if	ops mixin reduce op name axis skipna	0.083333
ensure that an array-like object is a	core dtypes ensure	0.200000
ordered multiindex	indexes multi	0.014493
the corresponding interval with	interval	0.029412
one of the stata date formats to	convert datetime to stata	0.111111
a series to the given number	core series	0.008000
a new block with	core block make block	0.100000
rewrite the assignment operator for pytables expressions that	core computation rewrite	0.125000
we have a astypeable to categorical	block is categorical astype dtype	0.333333
to stata's default format for this type not	to default	1.000000
negative indicies translate to postive here	maybe convert indices indices n	0.166667
the _upsample kwargs and	by mixin apply f	0.166667
lookup of value from 1-dimensional ndarray	period index get value	0.071429
state machine here	frequency inferer	0.166667
according to indexer and return them as	indexer	0.018349
dataframe sorted by the n largest values	data frame nlargest n	0.166667
if	indexes index set value arr	0.023810
of whether each index value	datetime index ops	0.034483
unstack a k a pivot series	series unstack level	0.333333
return a basegrouper which is an	core get	0.038462
the info for this	io get info info	0.333333
index with day as	indexes	0.004651
backward to	rollback dt	0.125000
write this as a	write obj	0.041667
dataframe containing sparse floating point data	sparse data frame	0.090909
scope by	core computation scope	0.166667
we are passed a list-like indexer	interval index convert list indexer keyarr kind	0.066667
casting data from	assert safe casting cls data	0.047619
sql query or database table	sql sql con index_col coerce_float	0.142857
copy if specified coerce	index dtype copy	0.043478
hypothetical list representing the totally ordered cartesian product	sort xnull	0.066667
necessary for making this object picklable	indexes datetime index setstate state	0.333333
via the 'numpy' library the	with convert convert args	0.055556
/ pandas type to its	table type x	0.055556
provides a resample of	resampler	0.053571
not the 'parse_dates' parameter is a non-boolean scalar	parse dates arg parse_dates	0.142857
convert to our native types	block to native types slicer	0.250000
given an interval or intervalindex return the corresponding	get interval	0.125000
dimensions levels names	names	0.038462
string-like that is object dtype	io convert string array data encoding	0.038462
to construct this type from	categorical dtype construct from	0.166667
index for series columns for dataframe and major_axis	core ndframe	0.005051
we are index sliceable then	core convert to index sliceable obj	0.083333
datetime arraylike / datetimeindex	datetime arraylike arr	1.000000
of styler with a	io formats styler from	0.076923
to	indexes index coerce to	0.333333
string-like array to convert	maybe convert string to	0.250000
convert a scipy sparse coo_matrix to a	sparse coo to sparse series a dense_index	0.166667
return the block manager from a	to manager sdf	0.052632
unit if needed otherwise return from the cache	unit tz	0.125000
type window_type and size window on the	window win_type min_periods	0.100000
tables into a list of dataframe	io match flavor	0.166667
determine	core str match arr pat case	0.166667
csv	series from csv cls	0.066667
return the	core	0.015915
first non-na/null value	core series first valid	0.250000
ticks	time series date formatter set	1.000000
this as a frame table	appendable series table	0.200000
only applicable to	core series group by	0.142857
to beginning of	tseries date offset beg	0.166667
read csv file	series from csv cls	0.066667
to a timedeltaindex	to	0.006329
a delegatedclass of a series that is datetimelike	datetimelike	0.076923
records	records	1.000000
a python expression as a	core computation eval expr	0.083333
of a groupby implementation	timedelta index resampler groupby	0.166667
sif to	elapsed date to	0.250000
a list replace	core block manager replace list	0.500000
try to read from a url file or	io read	0.038462
casting	index assert safe casting	0.125000
handle 2-d slices equiv to iterating	core panel apply 2d func	0.200000
fast	core indexes index	0.007042
label	label	0.314286
be applied on each value to format	array formatter value formatter float_format threshold	0.100000
axes dictionary for the passed axes	construct axes dict from axes	0.333333
compute group sizes	group by size	1.000000
dtype and n/a values to	dtype and	0.125000
take the codes by	categorical take	0.200000
exist and	hdfstore	0.014925
the reduction type operation if	index ops mixin reduce op	0.083333
block for	block	0.008197
for :meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace limit	0.333333
values from passed panel or object coercible	other join overwrite filter_func	0.076923
a string representation for a particular	extension dtype bytes	0.142857
a hack to accelerate unioning	datetime index union many others	0.040000
mode s of the	series mode	0.083333
that can	io html	0.012987
dict {group name -> group labels}	base grouper groups	0.200000
index value is	indexes datetime index ops	0.034483
for	arith method	0.333333
the index names defaulting	reset index level drop inplace col_level	0.166667
create a spreadsheet-style pivot table as a dataframe	reshape pivot table data values index columns	0.166667
strings in the series/index to	core str	0.011364
the installed version of openpyxl is supported parameters	compat is compat major_ver	0.111111
wrap comparison operations to convert timedelta-like to	td	0.043478
contains	contains	1.000000
stata binary	core data frame to stata fname	0.200000
with times to midnight length is	core indexes datetime index	0.007634
csv	frame from csv cls path header	0.066667
connect to the	can connect	0.111111
in the series/index	core str get arr i	0.142857
html representation for a particular dataframe	core data frame repr html	0.333333
numeric	index add numeric	0.250000
necessarily hierarchical index labels returning a dataframe	data frame	0.005714
in this	core ndframe	0.005051
duplicate rows	keep	0.142857
index with business day as the default	core indexes bdate	0.050000
at the new freq essentially	resampler asfreq fill_value	0.066667
the underlying data	indexes	0.009302
format try to deal with nat-like arg is	arg	0.018868
return the join	of merge get join	1.000000
for more this is	ndframe	0.005025
block	create for block cls	0.333333
whether each index	core indexes datetime index	0.007634
the float values converted	float array formatter	0.055556
take boolean mask of index to be returned	index	0.002004
of type window_type and size window on	arg window win_type min_periods	0.100000
provide resampling when using a timegrouper	by resample rule	0.166667
we by definition have do not have	formats datetime64formatter format strings	0.090909
cross-tabulation of	core reshape crosstab index	0.066667
a function elementwise updating the html	io formats styler applymap func subset	0.083333
the required package	package pkg_name	0.083333
string-like and string-like array to convert object	dtypes maybe convert string to object values	0.142857
occupying requested label default to specified missing value	series get label default	0.083333
of values possibly casting	values na_values try_num_bool	0.500000
pickle serialize object to input file path	ndframe to pickle path compression	1.000000
of the	core indexes timedelta index	0.250000
the built up styles to html	formats	0.031250
of seconds (>= 0 and less	core indexes timedelta index seconds	0.066667
boolean whether i can attempt conversion to a	indexes is convertible to index	0.333333
op result to have correct dtype	result name data sparse_index fill_value	0.500000
that we all	dtype	0.010989
algos groupsort_indexer implements counting sort and it	core get group index sorter group_index ngroups	0.250000
of the item of the	core	0.001326
a style_dict to an openpyxl style	io openpyxl1writer convert to style cls style_dict	0.166667
exist and be	io	0.003012
custom template and	from custom template	0.250000
1-d interpolation the result should be 1-d inputs	core interpolate 1d xvalues yvalues method limit	1.000000
a list of tuples of the (attr formatted_value)	mixin format attrs	0.142857
shape	ndim shape	0.111111
a boolean if we are a	manager is	0.100000
to iterate over the	html	0.011765
by an error is encountered in	error	0.028571
of a single non-tuple indexer which could be	of indexer indexer target	0.333333
data and the attrs from	io	0.003012
the data	data	0.019417
two datetimeindexes	indexes datetime index sub datelike dti other	0.333333
op result	result	0.016393
must already exist	append key value	0.016667
padded hexadecimal id	computation raw hex id	0.166667
unary operator and its operands parameters	unary op	1.000000
a	indexes period index array	0.050000
return a version	core block	0.010870
lists of	str	0.017544
already exist	append key value	0.016667
if it was a pathlib path	io stringify path filepath_or_buffer	0.142857
a numpy / pandas type to	table type x	0.055556
enter	enter	1.000000
stripping all of the _apply kwargs and	window center	0.076923
date in xport format	sas parse	0.066667
to an	to	0.050633
split data into blocks & return conformed data	core window create blocks how	1.000000
of x in y if possible	in x y	0.047619
we have a valid ordered	ordered	0.017857
in the context	inplace	0.027778
of value from 1-dimensional ndarray only use	set value arr key value	0.038462
true if this is a	is	0.010582
intersection of two index objects sortedness of the	core indexes range index intersection other	0.083333
corresponding to requested indices parameters	take indices axis convert is_copy	0.500000
needs	wrap	0.019231
to apply we are stripping all of	apply func	0.027027
convert to object if we are	to safe for reshape	0.400000
the formatted	formatter func	0.333333
type t or tuple of types	is type t	0.083333
is an actual dtype that we	dtypes interval dtype is dtype cls dtype	0.142857
if the date belongs to a leap year	is leap year	0.142857
for running code that expects to raise or	util assert produces warning expected_warning filter_level	0.071429
to coerce a code to a rule_code	tseries maybe coerce freq code	0.076923
name this allows simpler access to columns	ndframe setattr name	0.166667
supported for panel objects and will raise	panel	0.017857
index parameters	frame set value index	0.166667
index	core indexes datetime index ops	0.068966
a slice of myself	core categorical slice slicer	0.111111
to handle na filling	fillable	0.095238
series excluding missing	series	0.006757
delimiter string starting at the end	rsplit arr	0.037037
date axis x-axis	plotting format dateaxis subplot freq index	0.333333
caption on a styler	io formats styler set caption caption	0.333333
the keys	core	0.001326
to apply we are	core group by mixin apply	0.050000
select values at particular time of day	core ndframe at time time asof	0.066667
object to input	core ndframe to	0.040000
accelerate unioning a collection of	indexes datetime index union many others	0.040000
a slice of	categorical block slice slicer	0.083333
to write text representation of object to the	to	0.006329
convenience function for	xi yi x	0.500000
datetime index with business day as the	core indexes	0.004762
series with multiindex	series	0.006757
read csv	csv cls path header sep	0.066667
gets called after	array wrap result	0.075000
builds a concise listing of available options	core pp options list keys width _print	0.111111
an ndarray copy if specified	copy	0.012821
string	parsed string	0.500000
ncols -	ncols	0.111111
conserve rangeindex type for scalar	core indexes range index getitem key	0.166667
'numpy' library	compat numpy validate take with convert convert args	0.055556
compute group sizes	base grouper size	1.000000
specified dtype (e g convert back to bool/int	core dtypes maybe downcast to dtype result dtype	0.500000
along concatenation axis	concat axis	1.000000
expression as a	eval expr	0.083333
dict of array-like or dicts parameters	dict cls data orient	0.166667
of each interval in	core indexes interval	0.062500
header of a table	html frame parser parse thead table	0.333333
try to preserve dtype	core putmask smart v m n	0.055556
1-dimensional ndarray only	arr	0.013699
the block manager from a	sparse to manager sdf columns index	0.052632
keyword argument	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
are mapped to their default values as specified	for default values	0.200000
the block manager from a dataframe of series	core sparse to manager sdf	0.052632
return an attributes dict for my	indexes index get attributes dict	0.250000
deprecate a keyword argument of a function parameters	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
return true if	is in	0.076923
multi-level index return new dataframe with	data frame	0.005714
value from 1-dimensional ndarray	index get value	0.250000
long stacked format as dataframe	frame	0.009091
values to be at least 1 d	block shape values ndim	0.050000
of value from 1-dimensional ndarray	period index get value	0.071429
validate this column return the	io index col validate col	0.200000
take which sets nan values in one pass	take	0.030303
via the 'numpy' library	validate argmin with	0.200000
string-like that is object dtype and	convert string array data	0.038462
downsample the	period index resampler downsample how	0.200000
scalar	can do	0.250000
if a url has	is url url	0.047619
csv file (discouraged please use :func pandas	from csv cls path header sep	0.066667
make a multiindex from the cartesian product of	indexes multi index from product	0.166667
needs	core indexes	0.004762
list of the underlying data	core indexes datetime index ops mixin tolist	0.333333
value of the index	indexes datetime index	0.015267
only use this if	index set value	0.023810
datetime time the time part of	indexes datetime index time	0.166667
matrix multiplication with dataframe or series	core data frame dot other	0.500000
dataframe to a variable	data frame	0.005714
function for this argument return it	func arg	0.142857
define an builtin	builtin	0.285714
other	binop other	1.000000
up styles	formats	0.031250
property property synonym	core	0.001326
apply	by mixin apply func name	0.050000
cname	cname	1.000000
table in file node must already exist	append key value	0.016667
type is an actual dtype that we	dtype is dtype cls dtype	0.086957
from 1-dimensional	index set value arr	0.023810
function is called via the 'numpy' library the	with convert convert	0.055556
interval	interval	0.235294
comparison operations to convert datetime-like to datetime64	dt index cmp opname nat_result	0.066667
a method to	method cls name func	0.076923
a ufunc needs additional	index array wrap result context	0.034483
writer's supported extensions	ext	0.142857
return the minimum value of the index	core indexes datetime index	0.007634
sparseseries from a scipy sparse coo_matrix	sparse sparse series from coo cls a	0.333333
sorted by the n largest values of columns	nlargest n columns	1.000000
on given axis	frame dropna axis	0.142857
fixed	fixed	0.277778
to shift without copying data	core ndframe slice shift periods	0.083333
to table in file node must already exist	key value	0.011628
convert a numpy / pandas type to its	table type x	0.055556
boolean whether i can attempt conversion	core indexes is convertible	0.333333
index names to 'index' for regular or 'level_x'	io json set default names data	0.500000
return the number of bytes in the underlying	core indexes range index nbytes	0.052632
is not supported for panel objects and	panel	0.017857
stata's default format for this type not	default	0.100000
table in file node must already exist and	key value	0.011628
fixed frequency timedelta index	indexes timedelta range start end periods	0.083333
this termvalue	v	0.026316
of	columns	0.017857
this	set value arr key	0.023810
compute pairwise correlation of columns	core data frame corr	0.111111
evaluate a python expression as	eval expr	0.083333
is not supported for panel objects and will	core panel to	0.027027
box	datetime index ops mixin box	0.500000
of a	datetime	0.006711
totally ordered cartesian product of all possible label	group index labels shape sort xnull	0.066667
result as series or by a series of	by axis level	0.045455
structure for accumulating data to	list	0.034483
holiday falls on saturday use following monday instead	next monday dt	0.250000
cast to datetimeindex of timestamps at *beginning* of	to timestamp freq how copy	0.500000
future release	core categorical reshape new_shape	0.142857
series extract groups from the first match	str extract arr	0.066667
of object to	to	0.006329
end_time	end_time	1.000000
the name this allows simpler access to	ndframe setattr name value	0.166667
of bytes in the	indexes range index nbytes	0.052632
dtype)	ndframe	0.005025
styles	io formats styler	0.021277
the boxed values	indexes datetime	0.011494
datetime64formatter	datetime64formatter	1.000000
fill_value and arr dtype then fill	dtypes maybe fill arr fill_value	0.333333
dense representation	values fill	0.500000
check if we do need a multi reindex	ndframe needs reindex multi axes	0.333333
indexables if they don't exist	table indexables	0.333333
:meth pandas dataframe reset_index function	drop name inplace	0.142857
frequency datetime index with	core indexes bdate	0.050000
blocks collect and	consolidate transposed	0.062500
values from this selection take = take ownership	col convert values nan_rep encoding	1.000000
packed object return an iterator	packed object_hook list_hook use_list	0.200000
expected exception	exception	0.090909
of panel	core panel	0.038462
exception raised matches the expected exception and	util assert raises contextmanager exception matches	0.142857
use this if	value arr key	0.023810
index with business day as the default	indexes	0.004651
operations to convert timedelta-like to timedelta64	indexes td index	0.055556
parameter for general index and plural 'names' parameter	core indexes index validate names name names deep	0.071429
fast path for getting a	fast	0.090909
infer this column from	io index col infer handler	0.200000
database table into a dataframe	table table_name index_col coerce_float parse_dates	0.333333
resampling when using a timegrouper	by resample rule	0.166667
return a string representation for a particular	extension dtype bytes	0.142857
this if	set value arr	0.023810
column	value	0.005155
query or database table into a dataframe	index_col coerce_float	0.062500
name this allows simpler access	name	0.025000
to axis	axis	0.011364
where elements of v should	frozen ndarray searchsorted v	0.033333
a fixed frequency timedelta index with	core indexes timedelta range start end	0.083333
1-dimensional ndarray	index	0.002004
if each value is nan	indexes datetime index ops mixin isnan	0.500000
over the	io html frame	0.012987
into codes given the	core get codes	1.000000
already exist and be table	value	0.005155
optionally only considering certain columns	duplicates subset	0.500000
the reindex for all the axes	ndframe reindex axes axes	0.500000
time and	core ensure like indices time	0.125000
add in numeric unary methods	index add numeric methods unary cls	1.000000
internal method to handle na filling of take	indexes multi index assert take fillable values	0.250000
date belongs to a leap year	leap year	0.142857
the nan/nat from the	val	0.058824
moving window of type window_type and size window	arg window win_type	0.100000
a categorical	core categorical	0.013889
encoding	arr encoding	1.000000
the td elements from	frame parser parse td obj	0.083333
build an xpath expression to simulate bs4's ability	io build xpath expr attrs	0.200000
returns the float values converted into strings using	float array formatter get	0.055556
in a block	core block make block	0.100000
slice of my values	datetime tzblock slice slicer	0.083333
sparsedataframe of cumulative sums over requested axis	sparse sparse data frame cumsum axis	1.000000
a moving window	core window apply window	0.166667
but using the interpolate machinery	core block interpolate with fill method axis	0.200000
contained data to an hdf5 file using hdfstore	core ndframe to hdf path_or_buf key	1.000000
array interface return my	array dtype	0.125000
string representation	unicode	0.058824
a	indexes index array wrap result	0.100000
a result set coerce the	dtypes coerce	0.066667
each string in the series/index by indicated number	core str repeat arr	0.045455
additional handling as	core indexes period index array wrap result	0.050000
series that is datetimelike (e	indexes maybe to datetimelike data	0.142857
indexer cannot enlarge its target	indexer indexer	0.071429
called after a ufunc needs	context	0.023810
result	result	0.196721
is called via the 'numpy' library	compat numpy validate take with convert convert args	0.055556
manage style and color	plotting mplplot apply style colors colors kwds col_num	0.142857
index with custombusinessday as	core indexes cdate range start	0.083333
the value inplace	value mgr	0.083333
fast lookup	core indexes index set	0.023810
to turn values into codes	codes for values values	0.250000
spreadsheet-style pivot table as a dataframe the levels	reshape pivot table data values index	0.166667
or by a series of	groupby by axis level	0.045455
update index attributes e	core indexes datetime index maybe update attributes attrs	0.200000
subset rows or columns of dataframe	filter items like regex axis	0.166667
lists to line	to line	0.142857
return a	sparse array get	0.500000
returns a dense	core sparse sparse	0.034483
parse the raw data	parse raw data	1.000000
values as an enumerated type or	factorize values sort	0.111111
float	float	0.219512
check whether or not	io validate	0.031250
called via the 'numpy' library the third	with convert	0.055556
stderr in a buffer so	stderr	0.076923
membership of x not in y	not in x y	0.066667
can be used to iterate over the dom	parser build doc	0.125000
as	as	0.400000
timezone	util set timezone	0.142857
cross-tabulation	reshape crosstab index columns values	0.066667
to apply	by mixin apply func name	0.050000
handling as	array wrap result	0.025000
have	core categorical validate	0.055556
based on our axes compute the expected nrows	nrows expected	0.142857
index objects contain the	indexes datetime index ops mixin	0.029412
from 1-dimensional ndarray only use this if	key	0.005051
defined as a copy with the same identity	index view cls	0.047619
dispatch to apply	core group by mixin dispatch name	1.000000
plot	plotting series plot	1.000000
self as a sparse	as sparse	0.250000
parse	core tools parse time	0.125000
downsample the cython defined function	datetime index resampler downsample how	0.200000
shift without copying data the shifted data	ndframe slice shift	0.083333
create a new unit	dtypes datetime tzdtype new cls unit	0.055556
in the series/index by	core str repeat	0.045455
or functions	ndframe rename axis mapper	0.333333
use this if you	index set value arr key	0.023810
to write	write	0.035714
row cross-section from the sparsedataframe as a	core sparse sparse data frame xs key axis	0.166667
read csv file (discouraged please	core series from csv cls	0.066667
and 'kwargs' should be empty because	resampler func method args kwargs	0.142857
or object coercible to	join overwrite filter_func	0.076923
make box plots from dataframegroupby	groupby grouped subplots column fontsize	0.500000
axis omitted where alternately any	frame dropna axis how thresh subset	0.100000
algos groupsort_indexer implements counting sort and	group index sorter group_index ngroups	0.250000
return index	indexes datetime index ops	0.034483
table in file node must already	append key value	0.016667
generate an	nchars size dtype	1.000000
take which	take nd arr indexer axis	0.125000
is entirely empty [no items], meaning any of	empty	0.125000
sparseseries or	to	0.006329
on saturday or sunday use previous friday instead	tseries previous friday	0.250000
version to operate on	core datetime like block mixin try operate values	0.333333
the index's frequency if available	core ndframe tshift periods freq axis	0.066667
of the values set with	core	0.001326
list of normalized locales that do not throw	util valid locales locales normalize	0.050000
duplicate each string in the series/index by indicated	core str repeat	0.045455
multiindex	multi	0.090909
floating	maybe cast indexer	0.200000
string-like that is object dtype	io convert string array	0.038462
as series or by a	groupby by axis	0.045455
optional positional	optional	0.050000
summarized representation	core indexes datetime index ops mixin summary name	0.333333
from 1-dimensional ndarray only use this	set value	0.023256
from a string	from string cls string	0.250000
called after a ufunc needs additional handling as	core indexes period index array wrap result context	0.041667
shape of the values to be at least	shape values ndim shape	0.083333
must already exist	append key value format	0.016667
simple cross-tabulation	core	0.001326
index and its	indexes range index	0.021277
a	indexes	0.013953
if a url has a valid	io is url url	0.047619
lookup of value from 1-dimensional ndarray only use	index set value arr key value	0.038462
a fixed	range start	0.133333
td elements from a row element	html frame parser parse td obj	0.083333
dispatch to apply we are stripping all of	by mixin apply func	0.050000
object dtype	dtype	0.010989
resample of a	timedelta index resampler	0.066667
convert to our native types format slicing if	categorical block to native types slicer	0.250000
as sparsifying is not supported for panel objects	panel to	0.027027
sparse	sparse sparse	0.137931
index and its	range index	0.021739
particular axis with optional set logic	axis join join_axes	0.250000
series only	series only	0.500000
create a new unit if	dtypes datetime tzdtype new cls unit tz	0.055556
comparable timezone both for	core indexes datetime index timezone	0.200000
write this as a frame table	multi series table write	0.333333
of microseconds (>= 0 and less than	indexes timedelta index microseconds	0.066667
the store close	io	0.003012
/ or columns using input function or functions	ndframe rename axis mapper axis copy inplace	0.250000
group series using mapper dict	as_index	0.071429
the values	io	0.003012
union of two multiindex objects sorting if possible	multi index union other	0.066667
determines if two index objects contain	core indexes range index equals other	0.200000
a compatiable fill_value	fill_value	0.033333
specifications setup the internal grouper	set grouper obj sort	0.250000
the index api sort the index	core indexes index sortlevel level ascending sort_remaining	0.250000
apply function to	func level	0.500000
compat with multiindex	index sort levels monotonic	0.333333
'series argmin' is called via the 'numpy' library	compat numpy validate argmin with skipna skipna	1.000000
closed bounds	interval closed bounds	0.500000
series/index by the given delimiter string starting at	str rsplit arr	1.000000
return a tree-like object that can	parser	0.008000
packer for	msgpack	0.022222
converts from one of the stata	stata	0.022222
evaluate the block return result	eval func	0.200000
only use	set value arr	0.023810
group excluding	frame group by	0.500000
this function is called via the 'numpy' library	numpy validate take with convert convert args	0.055556
totally ordered cartesian product of all	core get group index labels shape sort xnull	0.066667
clear group based selection used for methods needing	group by reset group selection	1.000000
apply we are stripping all of	group by mixin apply	0.050000
boolean if values in the	mixin is	0.083333
header	pop header name	0.100000
called via the 'numpy' library the	with convert convert args kwargs	0.055556
the shape of the values to	values ndim shape	0.083333
column and index	sparse sparse data frame set value index col	0.500000
a dataframe the	data	0.009709
a version to operate on as the	core block try operate values	0.125000
index names to 'index' for	set default names data	0.083333
table as a dataframe the levels in the	table data values	0.200000
all the various	all	0.043478
perform an asof merge this	reshape merge asof	0.071429
type promotion and	dtypes maybe upcast values fill_value dtype copy	0.166667
table in file node must already exist and	io	0.003012
make a multiindex from	core indexes multi index from	0.142857
of nanoseconds (>= 0	core indexes timedelta index nanoseconds	0.066667
is called via the 'numpy' library the third	numpy validate take with convert	0.055556
a tree-like object	parser build	0.014706
coerces data to ndarray raises on	index coerce to ndarray	0.166667
for explanation	plotter	0.076923
can be used to iterate over	frame parser build	0.014706
return boolean if values in the	is	0.005291
labels using	inplace	0.027778
is unaltered	index normalize	0.125000
ndarray only use	core indexes index set	0.023810
of ndframe as opposed to sparse	core ndframe	0.005051
we have a valid ordered parameter if	ordered cls ordered	0.058824
a datetimelike dtype converting float	datetime value dtype errors	0.166667
a tree-like object that	parser build	0.014706
encode	encode	0.833333
more this is index for	core	0.001326
the given quantile a la numpy percentile	core series quantile q interpolation	0.250000
type is	core dtypes period dtype is	0.125000
a version to operate on	block mixin try operate values	0.333333
multiindex at the	core indexes multi index	0.013158
am never	block is	0.045455
by definition have a tz	io formats datetime64tzformatter format strings	0.166667
the values to be at least 1 d	shape values ndim	0.050000
is called upon unpickling rather than the default	datetime index cls d	0.111111
xport format return python date	io sas parse date datestr	0.250000
equals	equals	0.555556
label is	label	0.028571
form the intersection of two index objects	index intersection other	0.052632
an positional indexer cannot enlarge its target	has valid positional setitem indexer indexer	0.052632
and params args to dbapi2 0 compliant	params	0.058824
swap levels i and j in a multiindex	core data frame swaplevel i j	0.333333
major	major	1.000000
call encode before writing to	io stata writer write to_write	0.083333
totally ordered cartesian product of	sort xnull	0.066667
extended	extended	1.000000
'numpy' library the third	validate take with convert	0.055556
use this	core	0.001326
don't allow a multi reindex on panel or	panel needs reindex multi axes method	0.500000
series or by a series of columns	core ndframe groupby by axis level	0.333333
csv file (discouraged please	from csv cls path header	0.066667
as a dataframe the levels in the	data values	0.062500
kwargs suitable for	kwargs	0.022222
after a	series array wrap result	0.100000
a boolean	a b	0.083333
dataframe to a variable number of	data frame	0.005714
over	frame parser	0.012500
values to be at	core block shape values ndim	0.050000
don't allow a multi reindex on panel	core panel needs reindex multi axes	0.500000
fixed frequency datetime index with	indexes bdate range start end	0.083333
block return result block s from the result	core block where other cond align raise_on_error	0.066667
selection as an	hdfstore select as coordinates key where start stop	0.500000
return generator through chunked result	io sqltable query iterator result chunksize columns coerce_float	0.250000
the text display value	io formats styler	0.021277
to apply we are stripping all	group by mixin apply	0.050000
of a table	table	0.010870
the data pointer of the underlying data	core index ops mixin data	0.333333
a string cast it	maybe cast	0.100000
a frame table	series table	0.200000
the date	date	0.040000
call encode before writing to	stata writer write to_write	0.083333
a string format	format datetime64 from	0.250000
fname	util validate kwargs fname	0.250000
applies the put method to	core series put	0.055556
return a boolean if we need a	index is	0.083333
requested level	index sortlevel level	0.166667
an indexer like _name	name indexer	0.083333
be	append key	0.016667
the array interface return my	categorical index array dtype	0.125000
first day of the month	month	0.038462
maximum	max	0.090909
api sort	sortlevel level ascending sort_remaining	0.166667
sparse reindex and return a new block	core sparse block sparse reindex new_index	1.000000
that do not throw an	util valid	0.125000
type window_type and size window on	window win_type	0.100000
long strings in the series/index to be formatted	core str	0.011364
the info axis of	info	0.090909
to coerce a code to a	maybe coerce freq code	0.076923
in the series/index by indicated number	core str repeat	0.045455
add the	core ndframe add numeric	0.500000
convert tz-aware axis to target time zone	core ndframe tz convert tz axis	0.200000
reso	reso	0.833333
raw	raw	0.857143
returns an iterator over the	iter	0.090909
construct dataframe from dict of array-like	data frame from dict cls data orient dtype	0.200000
to apply we	group by mixin apply func name	0.050000
a metaclass	compat add metaclass metaclass	0.125000
1-dimensional ndarray only use this	set value arr key	0.023810
time the time part of the timestamps	index time	0.111111
with the block	data col create for block	0.333333
from apply if as_index=true	by index with as	0.200000
works through views note this is	is	0.005291
to its corresponding json_table	io json as json table	0.333333
add in the datetimelike methods (as we may	add datetimelike methods	0.333333
that are available on the system	prefix normalize locale_getter	0.166667
ndarray raises on	ndarray cls	0.500000
value	value mgr	0.083333
list of columns as lists	str columns	0.083333
concat all inputs as object datetimeindex timedeltaindex and	dtypes concat index asobject to_concat name	0.250000
validate the passed dtype	validate dtype dtype	1.000000
length is	indexes datetime	0.011494
if we define an builtin function for	core selection mixin is builtin func	0.333333
axis	core ndframe rank axis	0.250000
string-like that	convert string array data	0.038462
one custom business month	custom business month end	0.200000
not	computation not	1.000000
additional	core indexes period index	0.034483
locator	pandas auto date locator get locator	0.062500
of normalized locales that do not throw	util valid locales locales	0.050000
simple	reshape crosstab index columns values	0.066667
a class with a metaclass	add metaclass metaclass	0.125000
labels in	labels	0.038462
needs additional handling	index array wrap result	0.033333
blocks	blocks how	1.000000
dtypes	dtypes	0.126984
the dataframe's series using matplotlib / pylab	column by grid	0.200000
sparse-compatible version of ndarray take	sparse sparse series take indices axis convert	1.000000
to iterating over the other axis	axis	0.011364
i : int slice or sequence of	data frame ixs i axis	0.200000
microseconds (>= 0 and less than 1 second)	core indexes timedelta index microseconds	0.066667
(can't do	jsontable writer init obj orient date_format double_precision	0.142857
a manager and a axes dict	ndframe init mgr mgr axes dtype	0.333333
return the padded hexadecimal id	core computation raw hex id	0.166667
1-dimensional ndarray only	index set	0.022727
for a tz-aware type return	tz tz	0.066667
used to iterate over the dom	io html frame parser build doc	0.125000
the header of a table	io html frame parser parse thead table	0.333333
locator based	locator	0.047619
table in file node must already exist	hdfstore append key value	0.016667
a new	new cls	0.333333
return an attributes dict for my	index get attributes dict	0.250000
and be	append key value format	0.016667
types	types slicer	0.200000
membership of x in y if possible otherwise	computation in x y	0.047619
ndarray take	sparse sparse series take	1.000000
axes / array dimensions	core ndframe ndim	0.333333
putmask the data to the block we must	non consolidatable mix in putmask mask	1.000000
index objects sortedness of the result is	indexes range index	0.021277
float values converted into strings	float	0.024390
series dropna if fill_value=nan returns a dense series	sparse sparse series dropna axis inplace	1.000000
more this is	core	0.001326
float values converted into strings	formats float array formatter get result	0.055556
a new	datetime tzdtype new cls	0.333333
returns the float values converted	io formats float array formatter get result	0.055556
concatenate block managers into one	concatenate block managers mgrs_indexers axes concat_axis copy	1.000000
each value of x	x	0.043478
return the bool of a single	core ndframe bool	0.055556
of the sparsearray only the actual sparse	core sparse sparse	0.034483
is an actual dtype that we	period dtype is dtype cls dtype	0.142857
of sql statement that create	create	0.033333
series values	period	0.016667
a url has	url url	0.045455
"pivot" table) based on column values uses	frame pivot index columns values	0.200000
the number	indexes range	0.062500
convert timeseries to specified frequency	ndframe asfreq freq	0.250000
whether	for	0.142857
convert tz-aware axis to target	ndframe tz convert tz axis level	0.200000
return a boolean if we are	manager is	0.100000
to midnight length is	core	0.001326
each dataframe in panel	panel	0.017857
where : array of timestamps	core indexes period index asof locs where	1.000000
longtable	longtable	1.000000
new unit if	dtypes datetime tzdtype new cls unit	0.055556
to shift without copying data the shifted data	slice shift	0.083333
that the left and right	left right check_dtype	0.100000
fixed frequency datetime index with business	core indexes bdate range start	0.083333
v should be inserted	indexes frozen ndarray searchsorted v	0.033333
or by a series	by axis level	0.045455
try to read from a url	io read obj	0.058824
unstack a k a pivot series with	series unstack level fill_value	0.333333
is an internal non-public method*	categorical index is dtype compat other	0.500000
on sunday use day	sunday	0.100000
dtype converting float	value dtype	0.142857
the built up styles	io formats	0.027778
setup my	col set	0.333333
a single	core simple blockify tuples	0.125000
from a 1d array of interval objects	indexes interval index from intervals cls data	0.333333
new unit if needed otherwise return from the	core dtypes datetime tzdtype new cls unit	0.055556
append to table in file node must already	io hdfstore append key value format append	0.125000
set the values	io generic index col convert values	0.166667
based on our axes compute the expected nrows	table nrows expected	0.142857
the float values converted into strings using	float array formatter get result as	0.055556
some dataframes in vertical/horizontal layout for explanation	plotter	0.076923
convert series to dataframe parameters	series to frame name	1.000000
a multi-index suitable for a panel-like dataframe	index time panels names	0.076923
necessary for making this object picklable	indexes multi index setstate state	0.333333
a fixed frequency timedelta index with	core indexes timedelta range start	0.083333
to midnight length is	indexes datetime index	0.007634
validates	cls	0.016949
dt_str_parse	dt_str_parse	1.000000
number of seconds (>= 0 and less than	core indexes timedelta index seconds	0.066667
validates that we	core categorical validate ordered	0.055556
fully reindex-output	core data frame group by reindex output result	0.045455
validates that we have a	core categorical validate ordered	0.055556
our native types format	native types slicer na_rep float_format	0.200000
the dataset	core	0.001326
two adjacent ones!	tseries next monday or tuesday dt	0.200000
csv file (discouraged	from csv cls	0.066667
convert a	indexer convert	0.500000
compute pairwise correlation of columns	core data frame corr method min_periods	0.111111
the styler	styler	0.022222
caption on a	caption caption	0.166667
category labels deprecated	labels	0.038462
compute a simple cross-tabulation	core reshape	0.047619
iter1 iter2 iterables that produce elements comparable	util assert copy iter1 iter2	0.166667
nrows	table nrows	1.000000
the boolean criterion specified by func	ndframe group by filter func	0.250000
produces a datetimeindex	core indexes datetime index	0.007634
fast lookup	set value arr key	0.023810
a new unit if needed otherwise return from	datetime tzdtype new cls unit tz	0.055556
a tree-like object that can	io html frame	0.012987
my self as a sparse array	sparse sparse series as sparse array	0.250000
replace	replace	1.000000
replace extra whitespace inside of a	io remove whitespace s regex	0.200000
pandas type to	type	0.024390
nat which has	mixin nat new box	0.050000
if we have a compatiable fill_value	fill_value	0.033333
singular 'name' parameter for general index and	core indexes index validate names name	0.066667
reset the display options for printing and representing	reset display options	0.200000
type window_type and size window	window win_type	0.100000
converts json lists to line	convert to line	0.142857
appropriate	plotter get	1.000000
from 1-dimensional ndarray only use this	indexes index set	0.023810
of datetime	core indexes datetime	0.011494
return true if this	is in table	0.076923
get lines 0) there are headers on row	io python parser get index name columns	0.166667
conform set of _constructor_sliced-like objects to either	core panel homogenize dict frames intersect dtype	0.066667
stata date formats to a type	to stata type	0.142857
this if	indexes	0.004651
leap	leap	0.461538
datetimeindex with times to midnight length	indexes	0.004651
change string like dtypes to object	dtypes invalidate string dtypes dtype_set	0.200000
common ops mixin to support	index ops mixin	0.019231
use	indexes	0.004651
applies the put method	put	0.043478
blocks collect and	apply f axes filter do_integrity_check	0.083333
representing the totally ordered cartesian product	get group index labels shape sort xnull	0.066667
to capture	util capture	0.333333
an intervalindex from a a	core indexes interval index from arrays cls	0.166667
raise keyerror	map	0.029412
have a	core categorical validate ordered	0.055556
with nat-like arg is	arg errors	0.026316
convert timedelta-like	td index	0.055556
or object coercible	update other join overwrite filter_func	0.055556
date objects (namely the date	index date	0.200000
wrap comparison operations to convert timedelta-like to	indexes td index cmp opname nat_result	0.055556
create a spreadsheet-style pivot table	reshape pivot table	0.111111
pivot	reshape pivot index columns	0.333333
we have mixed levels	multi index have mixed levels	0.200000
function is called via the 'numpy' library	compat numpy validate take with convert convert args	0.055556
freq with decimal	decimal	0.058824
whitespace including newlines from each string in	arr to_strip side	0.333333
values between particular	indexer between	0.125000
the given delimiter string starting at	rsplit arr	0.037037
the number of bytes in the underlying data	indexes multi index nbytes deep	0.052632
get integer location slice	index get loc key	0.500000
concatenation of	core dtypes concat datetime to_concat	0.125000
apply a	styler apply	0.500000
quote the string if not encoded	core computation term value tostring encoding	0.200000
convert to our native types format	float block to native types slicer	0.250000
for more this is index for series	core	0.001326
for	period	0.016667
index objects contain the	index ops	0.033333
low	low	1.000000
passed type is an	is	0.005291
from ndarray or list of	index columns	0.028571
cond	cond	1.000000
sanitize an index type	sanitize index data index copy	0.200000
install the scalar coercion methods	method converter	0.200000
temporarily setting a locale	set locale new_locale lc_var	0.250000
write text representation of object to	core ndframe to	0.040000
of nanoseconds (>= 0 and less than 1	timedelta index nanoseconds	0.066667
is called via the 'numpy' library	compat numpy validate take with convert	0.055556
the number of bytes in	multi index nbytes deep	0.052632
a new	datetime tzdtype new	0.333333
return a view	view	0.043478
resample of	timedelta index	0.045455
to	data frame to	0.037037
return dtype and	dtype and	0.125000
creating a subclass of styler with	styler from	0.076923
label for this level	plotting has level label	1.000000
a boolean whether i can attempt conversion	indexes is convertible	0.333333
radviz - a multivariate data	radviz	0.100000
with times to midnight	datetime index	0.007042
convert	indexer convert	0.500000
format my specific	core indexes interval index format	0.500000
for as_blocks()	core ndframe blocks	0.166667
an positional indexer cannot enlarge its target	positional setitem indexer indexer	0.052632
a float dtype if possible	float arr	0.083333
each index value is found in	indexes datetime index ops mixin isin	0.083333
csv file	csv cls path	0.066667
need to coerce a code to a rule_code	maybe coerce freq code	0.076923
the built up styles to html	io formats	0.027778
we don't support start stop kwds in sparse	io sparse fixed validate read kwargs	1.000000
functions	core ndframe rename	0.333333
appropriate class of series	dtypes get series result type result	0.250000
(attr formatted_value)	format attrs	0.142857
and are of mixed type	chained assignment possible	0.142857
in index	custom index	0.250000
used to iterate	html frame parser	0.012658
bytes see :class packer for	msgpack packb	0.025641
for panel objects and	panel to	0.027027
to dataframe	sparse sparse data frame	0.058824
with labels on given axis	frame dropna axis	0.142857
sparseseries	to	0.006329
and index parameters	core sparse sparse data frame set value index	0.250000
two indices overlap	core items overlap	0.062500
reference	reference	1.000000
unique elements in the object	core index ops mixin nunique dropna	0.083333
a single element	core	0.001326
determine if each	core str match	0.166667
our	core resampler	0.400000
via the 'numpy' library	with convert convert args	0.055556
writing stata binary dta files from array-like objects	to stata fname convert_dates write_index encoding	0.333333
nrows ncols	dataframe nrows ncols	0.250000
tree-like object that can be	io html frame	0.012987
ndframe	ndframe	0.040201
fill_value	fill_value	0.233333
array object	dtypes	0.015873
a dataframe to a tabular environment	data frame to latex buf columns col_space header	0.111111
new categorical by	categorical sort values	0.166667
dimensions	ndframe	0.005025
csv file (discouraged please use :func	csv cls	0.066667
index	frame set value index	0.333333
datetime time	core indexes datetime	0.011494
to an openpyxl style	convert to style cls	0.500000
return a subset of a dataframe	data frame	0.005714
slice substrings from each element	slice arr start stop step	0.333333
multiindex has	indexes multi	0.014493
where : array of timestamps	index asof locs where mask	1.000000
more	ndframe	0.005025
dict of	dict	0.076923
to be applied on each value to	formats float array formatter value formatter float_format threshold	0.100000
used to tag	replacer x	0.125000
datetime date	indexes datetime index	0.007634
float dtype	float	0.024390
over the blocks collect	f axis consolidate transposed	0.062500
of bytes in the underlying data	multi index nbytes	0.052632
of terms for	terms	0.034483
decorator to run the same function multiple times	num_threads kwargs_list	0.050000
additional handling as	indexes period index array wrap	0.050000
information in the columns under the index	reset index	0.125000
the op string for	computation bin op generate	0.066667
construct dataframe from dict of	data frame from dict cls	0.200000
validate if we can perform a numeric	core indexes index validate for numeric	1.000000
usage of my	usage deep	0.200000
or by a	by axis level	0.045455
i : int slice or	core data frame ixs i	0.200000
dictionary for	core ndframe construct axes dict from	0.250000
a scipy sparse coo_matrix from	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
return the counts of ftypes	get ftype counts	0.250000
apply the given offset/observance	tseries holiday apply rule	0.200000
our native types format	native types slicer	0.200000
index objects contain the	indexes range index	0.021277
for series arithmetic operations to avoid code duplication	method series op name str_rep masker	1.000000
we don't support start stop	fixed validate read kwargs	0.200000
iterate	build	0.013514
size of the dtype of the item	itemsize	0.027027
values as an enumerated type or	factorize values	0.111111
left and right index are equal	assert almost equal left right check_exact	0.333333
and 'kwargs' should be empty except	name args kwargs	0.166667
that left and right index are equal	util assert index equal left right exact	0.333333
output	output	1.000000
value from 1-dimensional ndarray only use this	value arr key value	0.038462
to be applied on each value	formats float array formatter value formatter float_format threshold	0.100000
tree-like object that	build	0.013514
sets names on levels	indexes multi index set names names level	0.200000
that we have a valid ordered	cls ordered	0.058824
return the full scope for use with passing	scope full scope	0.055556
putmask that	putmask	0.055556
use this if you	core	0.001326
are index sliceable then	convert to index sliceable obj key	0.083333
make a copy of this object names dtype	indexes multi index copy names dtype	0.333333
return the full scope	computation scope full scope	0.055556
a tree-like object that can	frame parser build	0.014706
object that can be	frame parser	0.012500
to its	core series	0.008000
lists	matrix	0.076923
interpolate values according	core resampler interpolate method axis limit inplace	0.166667
an ndarray copy if specified coerce	index dtype copy	0.043478
a single	core	0.001326
localize tz-naive timeseries to target time zone	localize tz	1.000000
validates	validate	0.027778
returns value occupying requested label default	get label default	0.083333
making this object picklable	indexes index setstate state	0.333333
used to iterate	io html frame parser	0.012195
tree-like object that	io html frame	0.012987
t or tuple of types	t	0.125000
the elements that are non-zero this method is	series nonzero	0.166667
multi-level index return new dataframe	data frame reset	0.027778
alter index and / or columns using input	copy inplace	0.055556
(header new_data) for header rows in multiindex	io pop header name row index_col	0.200000
to construct this type from a	categorical dtype construct from string cls	0.166667
in file node must already exist and be	io	0.003012
based indexer for	indexer	0.009174
csv file (discouraged please use :func	from csv cls path sep parse_dates	0.066667
table	appendable series table	0.200000
frequency datetime index with business	indexes bdate	0.050000
need to coerce a scalar to a compat	indexes period index coerce scalar to	0.071429
block if	core block	0.021739
type window_type and size window on	rolling window arg window win_type	0.100000
over the blocks collect and create a	f axis consolidate transposed	0.062500
csv	frame from csv cls path	0.066667
interpolate values	interpolate	0.076923
a tz-aware type return an	tz tz	0.066667
an axes dictionary for the passed axes	ndframe construct axes dict from axes	0.333333
index's frequency if available	ndframe tshift periods freq axis	0.333333
is	scope_level	0.083333
a scipy sparse spmatrix	scipy sparse array	0.500000
setup the	grouper set	0.500000
period	get period	0.333333
a curve with holidays between start_date and end_date	holiday calendar holidays start end return_name	0.066667
the key for valid keys across my indexer	core ndframe indexer has valid tuple key	0.500000
'skipfooter' parameter	skipfooter arg skipfooter	1.000000
given quantile a la numpy percentile	core series quantile q interpolation	0.250000
string-like that is object	string array	0.038462
of index	indexes datetime index	0.007634
column name for generation (e g an	core computation bin op	0.055556
from a 1d array	from intervals cls data name	0.125000
index objects	core indexes datetime index	0.007634
resets the	io	0.003012
a dataframe	core data frame	0.065089
create an indexer like _name in	core ndframe create indexer cls name indexer	0.166667
to table in file node must already	io	0.003012
underlying data as an ndarray	indexes index values	1.000000
match	match	0.454545
sql query into a	sql query sql con index_col coerce_float	0.333333
result	dtypes result	0.500000
fixed	range start	0.133333
with a metaclass	metaclass metaclass	0.125000
'series argmin' is called via the 'numpy' library	numpy validate argmin with skipna skipna args	1.000000
resample	datetime index resampler	0.066667
find indices where elements of v should be	searchsorted v	0.033333
a datetimeindex but	core datetime	0.142857
this column	col	0.037037
arraylike	arraylike	1.000000
if we	base grouper is	1.000000
indexer like _name in the class	cls name indexer	0.083333
element in the series/index	core str	0.022727
a categorical if not already	categorical	0.009615
apply aggregation function or functions	resampler aggregate arg	0.250000
that can be	parser	0.008000
the where condition cond on a	core computation where cond	0.111111
return a prettier version of	get pretty string	0.500000
the block manager from a dataframe of series	core sparse to manager sdf columns index	0.052632
csv file (discouraged	core series from csv cls path sep parse_dates	0.066667
return slice of panel along major axis parameters	core panel major xs key	0.166667
unit	unit	0.466667
additional handling as	index array	0.033333
dataframe sorted by the n smallest values	data frame nsmallest n	0.166667
ensure that an array-like object is a categorical	dtypes ensure categorical	1.000000
delta	delta	1.000000
a new block manager	core block manager	0.045455
a left and right array parameters	cls left right closed	0.166667
for a column	col	0.037037
for is_monotonic_increasing deprecated	core indexes index is monotonic	0.200000
return an item pair from maps[0] raise	compat chain map popitem	0.055556
shift the time index using the index's	core ndframe tshift periods	0.166667
determines if two index objects	datetime index ops mixin equals other	0.200000
of the dtype of the item of the	core	0.001326
be used to iterate	io html	0.012987
valid ordered parameter	ordered cls ordered	0.058824
make new index with passed location -s deleted	categorical index delete loc	0.333333
series columns for dataframe	ndframe	0.005025
ensure that they are valid stata	stata writer	0.125000
to table in	append key	0.016667
only use this	index set	0.022727
needs additional handling as	index array wrap result	0.033333
the index (so we don't	at indexer convert key key is_setter	0.090909
from data	data index primary_key	1.000000
mapping of how to create the grouper indexers	grouper	0.058824
index objects	core indexes range index	0.063830
normalized locales	locales locales normalize	0.200000
to table	hdfstore append key value format	0.016667
data	core data frame	0.005917
an evaluated expression	computation abstract engine evaluate	1.000000
get a	dtypes get	0.500000
via the 'numpy' library the	take with	0.055556
the underlying	indexes	0.009302
read sql database table into a dataframe	io read sql table table_name con schema index_col	0.333333
gets a temporary path and agrees	util ensure clean filename return_filelike	0.200000
validate this column return the compared	validate col	0.200000
the number of bytes in the	multi index nbytes deep	0.052632
engine from a uri if con is	engine builder con	0.500000
try hard to parse	parse time	0.125000
additional handling as	indexes period	0.034483
take which sets	core take nd arr indexer	0.125000
that an positional indexer	ndframe indexer has valid positional setitem indexer indexer	0.052632
dataframe in specified	core data frame set item key	0.250000
mode s of the dataset	mode	0.050000
already exist	io hdfstore append key	0.016667
a style_dict	style_dict num_format_str	0.250000
ndarray only use this	core indexes index set value arr	0.023810
stata date	stata	0.022222
view limits to the nearest multiples of base	series date locator autoscale	0.055556
that can be	io html frame	0.012987
ndarray only	set value	0.023256
apply we	apply	0.026316
if we have an object	core dtypes	0.018519
are index sliceable then return	index sliceable	0.083333
true if the levels of both	index equal levels	0.200000
to specified	ndframe asfreq	0.250000
handling	period index array	0.050000
key and are not a floating index	core indexes index maybe cast indexer key	0.500000
the series extract groups from	core str extract frame	0.047619
as a dataframe	data	0.009709
is the resampling from a	core resampler from selection	0.200000
dispatch to apply we are stripping all of	core group by mixin apply	0.050000
if we define an builtin	mixin is builtin	1.000000
select values between	core indexes datetime index indexer between	0.125000
the blocks collect and create	apply f axes filter do_integrity_check	0.083333
valid other	other op	0.500000
a ufunc needs additional	core indexes period index array wrap result context	0.041667
new multiindex from the	multi index	0.020000
return a boolean if the passed type is	core dtypes extension dtype is	0.125000
in a future release	core categorical reshape new_shape	0.142857
that is datetimelike (e	indexes maybe to datetimelike	0.142857
of the axis indicies	panel extract axes	0.142857
try to read from a url	io read	0.038462
do	src_list dest_list inplace regex	0.500000
get the	categorical get	0.100000
called after a	core indexes index array wrap result	0.100000
a boolean if the dtypes are equal	core dtypes is dtype equal source target	0.333333
number of	range	0.047619
row labels using one	inplace	0.027778
a	indexes period index	0.035714
interpolate values according to different methods	core resampler interpolate method	0.166667
create and return the op	op	0.045455
type is	interval dtype is	0.066667
table in file node must already	format	0.012346
na_values	na_values	0.625000
return the ftypes (indication of	ndframe ftypes	0.055556
of value from 1-dimensional ndarray	core indexes period index get value series key	0.071429
freq with decimal stride into a	decimal	0.058824
a string-like that is object dtype	io convert string array	0.038462
arr1 and arr2 are	arr1 arr2	0.066667
locale without throwing an exception	locale lc	0.500000
run the same	num_threads kwargs_list	0.050000
fast lookup of	index set	0.022727
must already exist and be	io hdfstore append key value	0.016667
satisfy the boolean criterion specified by func	group by filter func dropna	0.250000
create a table reflecting the	io sqlite table create table setup	0.066667
to the underlying array which by-definition can	core indexes datetime index ops mixin	0.029412
underlying	core indexes multi	0.014493
return the number of	core indexes	0.009524
in file node must	key	0.005051
data (produce a	core data	0.041667
if we define an builtin function	core base grouper is builtin func	0.333333
contained data to an hdf5 file using hdfstore	ndframe to hdf path_or_buf key	1.000000
the given quantile a la numpy percentile	quantile q interpolation	0.250000
handles preprocessing for cut	core reshape preprocess for cut x	0.200000
for first non-na/null value	core series first valid	0.250000
to dispatch to the	stats ensure compat dispatch name	0.500000
vectorized membership of x not in	core computation not in x	0.166667
the float values converted into strings using	float array formatter	0.055556
index with target's	multi index	0.020000
from 1-dimensional ndarray only use	set value arr	0.023810
return the	indexes range	0.062500
i and j in a multiindex	i j copy	0.250000
csv file	csv cls path header sep	0.066667
of two or more factors by default	core reshape crosstab index columns values rownames	0.333333
series	core series	0.120000
copy of the sparsearray only the actual	copy	0.012821
create an	computation	0.038462
require the	core indexes datetime index simple new cls	0.250000
with the mask see also	mask value	0.250000
result as series or	axis level	0.125000
is called via the 'numpy' library the third	with convert	0.055556
csv file (discouraged please use	frame from csv cls path header	0.066667
am never a	is	0.005291
have a	cls	0.016949
a left and right array	left right closed	0.166667
gets	result	0.049180
a string-like that	string array data encoding	0.038462
the object is a file-like object	core dtypes is file like	0.333333
raise keyerror is	chain	0.031250
gets the categories	categories	0.062500
duplicate each string in the	core	0.001326
cross-tabulation	crosstab index	0.066667
a dataframe to	core data frame to	0.111111
values according to indexer and return	nd indexer	0.030303
return the cached item item represents a	ndframe iget item cache item	0.090909
the float values converted into	float array formatter	0.055556
a tree-like object that can be	io html frame parser	0.012195
the flattened values	core indexes index ravel order	0.037037
of bytes in the	index nbytes	0.052632
rsplit	rsplit	0.156250
iterate	parser	0.008000
wrapper function for	core bool method	0.333333
scipy sparse spmatrix	scipy sparse array	0.500000
values and other to int64 with null values	args values other	0.142857
strip whitespace including newlines from each	strip arr to_strip side	0.333333
the union of two index objects and sorts	core indexes index union other	0.083333
the block manager from a dataframe	manager sdf columns index	0.052632
float values converted into strings	io formats float array formatter get	0.055556
and	hdfstore append key	0.016667
an item pair from maps[0]	popitem	0.043478
the display options for printing and	display options	0.083333
the given quantile a	core series quantile	0.083333
of an	index	0.002004
string-like that is object	string array data	0.038462
of a series	core series	0.008000
multiindex	indexes multi index sortlevel	0.166667
the exception raised	assert raises	0.200000
our native types format slicing if desired	native types slicer na_rep	0.200000
categorical without null values	categorical dropna	0.500000
dti	dti	1.000000
the index and its underlying	core indexes index	0.007042
handling as	core indexes period index array	0.050000
0 number format	number format	0.333333
read csv file (discouraged please use :func pandas	core series from csv cls path	0.066667
of casting data from some accepted dtype	index assert safe casting cls data	0.047619
nan is taken	ndframe asof where	0.166667
normalized locales that	util valid locales locales	0.050000
offsets index to beginning of period frequency	offset beg apply index i freq	1.000000
get integer location for requested label	core indexes categorical index get loc key method	0.500000
apply we are stripping all of the	group by mixin apply func name	0.050000
panelnd	panelnd	1.000000
via the 'numpy' library	take with convert convert	0.055556
the view limits to the nearest multiples	series date locator autoscale	0.055556
a set of sparseseries (with nan fill_value)	core sparse	0.041667
validates that we have good categories	categorical validate categories cls categories fastpath	0.250000
that we	block is	0.045455
overrides ndarray argsort argsorts the	argsort	0.038462
starting at	rsplit arr	0.037037
return	indexes range	0.062500
an openpyxl v2	io openpyxl20writer	0.214286
be applied on each value to format it	float array formatter value formatter float_format threshold	0.100000
that we have a	core block is	0.090909
index value is found in	datetime index ops mixin isin	0.083333
whether or not the 'parse_dates' parameter	io validate	0.031250
called after	core series array wrap	0.100000
manager and a axes dict	init mgr mgr axes dtype	0.333333
number of	core	0.002653
return a dict of the counts	get counts f	0.333333
the key as	key values	0.142857
concatenation	dtypes concat datetime to_concat	0.125000
package is	package	0.058824
csv file (discouraged please use :func pandas	core data frame from csv cls path header	0.066667
of available options grouped by	pp options	0.083333
create a spreadsheet-style pivot	core reshape pivot	0.166667
of columns excluding na/null values parameters	core data	0.041667
we are index sliceable then return my	core convert to index sliceable obj key	0.083333
from each group if n	group by	0.016129
is datetimelike (e	indexes maybe to datetimelike data copy	0.142857
csv file (discouraged please	from csv cls path sep	0.066667
to table in file node must already exist	hdfstore	0.014925
are index sliceable then return	to index sliceable obj key	0.083333
sets the view limits to the nearest	time series date locator autoscale	0.055556
in the series extract groups from the	str extract	0.035714
la re split in	split arr pat n	0.200000
a valid ordered parameter if	cls ordered	0.058824
pointer of the	ops mixin	0.033333
the intersection of two index objects sortedness	range index intersection other	0.083333
only considering	subset	0.285714
at particular time of day e g 9	core ndframe at time time	0.066667
new block (of a possibly	core block setitem indexer	0.066667
the metadata pathname for this key	io table get metadata path key	0.500000
its corresponding json_table	json as json	0.333333
for more this is	core ndframe	0.005051
going to write this	write obj	0.041667
new copy of	copy	0.012821
colors	colors	1.000000
after a ufunc needs additional handling as	core indexes period index array wrap result context	0.041667
occupying requested label default to specified	label default	0.083333
view of	core categorical view	0.111111
convert sql and params args to dbapi2	convert params sql params	0.250000
of group excluding	group by	0.016129
index or	index ops mixin	0.019231
the series/index starts with passed pattern	core str startswith arr pat na	0.333333
1-dimensional ndarray only use this if	core indexes index set value arr	0.023810
axis parameters	axis	0.022727
convert to	core datetime block to	1.000000
styler	formats styler set	0.333333
type and coerce into matrices	core arrays to mgr arrays arr_names index columns	0.250000
the requested level the	index sortlevel level	0.166667
nanoseconds (>= 0 and less	indexes timedelta index nanoseconds	0.066667
a curve with holidays between	holidays start end return_name	0.066667
called via the 'numpy' library the third	numpy validate take with convert convert args	0.055556
type to	type	0.024390
a singular 'name' parameter for general index and	indexes index validate names name	0.066667
to handle na filling of take	assert take fillable values indices allow_fill fill_value	0.250000
holiday falls on sunday use day	sunday	0.100000
particular time of day e g	time time asof	0.142857
the dom	build doc	0.125000
from 1-dimensional ndarray	set value arr key	0.023810
each index value is found	indexes datetime index ops mixin isin values	0.083333
not dtype instance associated with	arr_or_dtype	0.047619
the values & release the	col take data	0.055556
lookup of	core indexes index	0.007042
object invoked by str	str	0.017544
a named	named	0.142857
compute variance of groups excluding missing	group by var ddof	0.166667
falls on sunday use day	tseries sunday	0.200000
return a boolean if we are a	manager is	0.100000
apply aggregation function or functions to resampled	resampler aggregate arg	0.250000
make a multiindex from the cartesian product of	core indexes multi index from product	0.166667
window of type window_type and size window on	window win_type	0.100000
must already exist and be table	append key value format	0.016667
evaluate a python expression as	computation eval expr	0.083333
new	core dtypes datetime tzdtype new cls	0.333333
block manager and indexers	mgr indexers	1.000000
simple cross-tabulation	reshape crosstab index	0.066667
left and right array parameters	left right closed	0.166667
get the	plotting get ax	1.000000
sparse_only	sparse_only	1.000000
the sparsedataframe as a series	core sparse sparse data frame	0.058824
a string representation for	core indexes frozen ndarray unicode	0.083333
bytes see :class	msgpack	0.022222
packed bytes see	io	0.003012
lookup of value from 1-dimensional ndarray only use	datetime index get value series	0.071429
to class python	cls name func	0.125000
in pd	parser	0.008000
are passed a list-like indexer	indexes interval index convert list indexer keyarr kind	0.066667
return new dataframe with labeling	core data frame reset	0.027778
function of type	is type	0.125000
boolean whether this axes needs validation	core ndframe indexer should validate iterable	0.166667
a hack to accelerate unioning a collection of	core indexes datetime index union many others	0.040000
we	core indexes	0.004762
from other to	other method	0.333333
return the td elements from	parser parse td obj	0.083333
be used to iterate	io html frame	0.012987
accelerate unioning a collection of indexes	index union many others	0.040000
construct dataframe from dict of array-like or dicts	data frame from dict cls data orient	0.200000
dropna if fill_value=nan returns a	dropna axis inplace	0.166667
style_dict to an xlsxwriter format object	xlsx writer convert to style style_dict num_format_str	0.166667
return a tree-like object that can be	io html frame	0.012987
values to be at least	values ndim	0.050000
checks that dict has only the	io json parser check	1.000000
manage style and color based	mplplot apply style colors colors kwds col_num	0.142857
on type and coerce into matrices	core arrays to mgr arrays arr_names	0.250000
data & release the	col take data	0.055556
a simple cross-tabulation of	values	0.008547
slice	block slice slicer	0.083333
of the stata date formats to	datetime to stata	0.100000
rewrite the assignment operator for pytables expressions	core computation rewrite assign tok	0.125000
a python expression	eval expr	0.083333
concise summary	info verbose buf max_cols memory_usage	0.333333
of sql statement that create a table	sqlite table create table	0.166667
arr for sequences	arr	0.013699
of the values to be at	core block shape values	0.050000
the index	interval index	0.090909
return datetimeindex with times to midnight	index	0.002004
consolidatable	consolidatable	1.000000
a particular dataframe invoked by unicode df in	data frame unicode	0.166667
source	source	0.777778
sparsifying is not supported for panel objects	panel to	0.027027
to shift without copying data	slice shift periods	0.083333
a numpy / pandas type to its	type	0.024390
need to coerce a scalar to	core indexes period index coerce scalar to	0.071429
to operate on as the input	try operate values	0.333333
lookup of value from 1-dimensional ndarray	core indexes index set value arr key value	0.038462
count of	count	0.055556
object that can be used to iterate	html frame parser build	0.014706
rewrite the assignment operator	core computation rewrite assign	0.125000
by shading the background	io formats styler	0.021277
common post process for each axes	plotting mplplot post plot logic common ax data	0.333333
apply box func to passed	datetime index ops mixin box	0.500000
an object to an expression	expression expr	0.250000
the raw data	raw data	0.500000
index objects	indexes datetime index	0.007634
wrapper function for series arithmetic operations to	sparse arith method op name	0.333333
bytes in	indexes multi index nbytes deep	0.052632
a boolean whether this axes needs validation	core ndframe indexer should validate iterable	0.166667
index	indexes datetime index ops	0.068966
alias for tz attribute	core indexes datetime index tzinfo	1.000000
called via the 'numpy' library the	validate take with convert convert args	0.055556
a frame table	io appendable multi series table	0.200000
a method to class python 2 and python	method cls name func	0.076923
ndarray only use this if	indexes index set value arr	0.023810
evaluate the	eval func other raise_on_error try_cast	0.200000
returns the float values	float	0.024390
set the	io generic index col convert	0.500000
can be used to iterate over the	html	0.011765
can be used to iterate	frame parser	0.012500
raise an error in a future release	core categorical reshape new_shape	0.142857
data the	core ndframe slice	0.125000
generate one random byte string	util rands nchars	1.000000
use this if	index set value	0.023810
context manager for temporarily setting a locale	util set locale new_locale lc_var	0.250000
load msgpack pandas object from the	io read msgpack path_or_buf encoding iterator	0.200000
wrap comparison operations to convert timedelta-like	indexes td index cmp opname	0.055556
a	array wrap result	0.075000
op class with its symbol already passed	op maker op_class op_symbol	1.000000
a new categorical by	core categorical sort values	0.166667
add a temporary variable to	add tmp value	0.333333
csv file (discouraged please use :func pandas read_csv	csv cls path sep parse_dates	0.066667
maximum value of the	categorical max numeric_only	0.250000
string in the series/index starts with passed	core str startswith arr	0.250000
the 'numpy' library	numpy validate take with convert convert	0.055556
iterate over the	html frame	0.014706
return the number of bytes in	nbytes deep	0.052632
saturday use following monday instead	next monday dt	0.250000
fast	indexes index set value	0.023810
lists	str	0.017544
string representation for this	core indexes index unicode	0.083333
a particular panel invoked by unicode df in	core panel unicode	0.166667
select values at particular time of day	at time time	0.066667
node must already	value format	0.016667
non-tuple indexer which could	indexer indexer target	0.071429
to parse	to	0.006329
given a tuple of slices/lists/labels/boolean	index get	0.040000
return a slice of my	block slice slicer	0.083333
to line delimited	convert to line delimits s	0.166667
validates that we have a	categorical validate ordered cls	0.055556
node must	hdfstore	0.014925
openpyxl v2	io openpyxl20writer	0.250000
return the bool of	core ndframe bool	0.055556
value using the with statement	plotting options use key value	0.250000
be used to iterate over the	html frame parser	0.012658
manipulation result has the same dimensions as	ndframe constructor	0.055556
array interface	core indexes categorical index array dtype	0.125000
index objects and	indexes range index	0.021277
aggregators	selection mixin aggregate arg	0.166667
read csv file (discouraged please use :func pandas	frame from csv cls path header sep	0.066667
remove and	compat	0.030303
indexes	indexes	0.027907
ndarray only use this if	indexes index set	0.023810
csv	csv cls	0.066667
packed	io msgpack	0.025000
or	axis	0.022727
sparseseries (with	sparse	0.026316
boolean if values in the object	core index ops mixin is	0.100000
alter default behavior on how float	io formats set eng float format accuracy use_eng_prefix	0.333333
lookup of value from 1-dimensional	indexes index set value arr key value	0.038462
microseconds (>= 0 and less than 1	timedelta index microseconds	0.066667
intersection of two index	core indexes index intersection other	0.166667
the index and its	index	0.002004
indicies	panel extract axes data	0.142857
stringified and numeric for these values	io stringify na values na_values	0.333333
totally ordered cartesian product of all	group index labels shape sort xnull	0.066667
datetimeindex with times	core indexes datetime	0.011494
an ordered multiindex compute the slice	indexes multi index slice	0.250000
fast path for getting a cross-section	single block manager fast xs	1.000000
return the op string for	op generate	0.066667
implement a datetime64	tzblock	0.076923
the 'numpy' library the	take with convert	0.055556
only use this	indexes index set value arr key	0.023810
value from 1-dimensional ndarray only	index set value arr key value	0.038462
entries in index	util make custom index	0.250000
stride into a higher	cls value	0.250000
a summarized representation	core indexes datetime index ops mixin summary name	0.333333
that path's extension against the	writer check extension cls	0.125000
default implementation	op_classes	0.142857
arg	arg	0.150943
compute covariance with series excluding	series cov other min_periods	0.200000
of entries in index	index	0.002004
check_before_test	check_before_test	1.000000
and	chain map	0.034483
up	styler	0.022222
valid	op	0.045455
of arr1	contents arr1	0.066667
see if we can set	can set	0.125000
a simple	reshape crosstab index	0.066667
to construct this type	dtype construct	0.333333
a dataframe to a variable number of	core data frame	0.005917
tree-like object	html	0.011765
values for	get level values	0.500000
midnight length is	core indexes datetime index	0.007634
values	na values	1.000000
numpy values	values	0.008547
that left and	left	0.074074
applies a moving window of type window_type on	apply window mean how	0.166667
we are index sliceable then return my	core convert to index sliceable obj	0.083333
type is an actual dtype that we	interval dtype is dtype cls dtype	0.142857
memory usage of my values parameters	index ops mixin memory usage deep	0.200000
used to	html	0.011765
node must already	hdfstore	0.014925
in file node must already exist and	value format	0.016667
for general index and	indexes index	0.007353
alias to closest period	get period alias	1.000000
allows a decorator	args decorator	0.111111
converts dtype types to stata types returns	io dtype to stata type dtype	0.250000
to table in file node must	io	0.003012
dense	sparse sparse	0.034483
td elements from	html frame parser parse td obj	0.083333
a warning will be produced using	rkey removal_ver	0.500000
deprecate a keyword argument of a function	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
tree-like object that can be used	build	0.013514
if the date belongs to a leap	indexes period index is leap	0.125000
cast	maybe cast	0.100000
count of number of non-nan	count arg	0.200000
that time	core ensure like indices time	0.125000
out the binary feather-format for	to feather fname	0.083333
only use this if you	value arr key	0.023810
to call encode before writing to file	writer write to_write	0.083333
of the	series	0.006757
join together blocks having same dtype	core block manager consolidate	1.000000
in vertical/horizontal layout for explanation	table plotter	0.125000
return datetimeindex with	core indexes datetime index	0.007634
infer types of	parser base infer types	0.500000
shift	tzblock shift	0.500000
writer :	io formats excel formatter write writer	1.000000
from 1-dimensional ndarray only	key	0.005051
the indexer	nd indexer	0.015152
ndarray only	key	0.005051
a boolean list indicated if we have	indexes multi index have	0.142857
given a tuple of slices/lists/labels/boolean indexer to a	get	0.007143
see if a url has a valid protocol	io is url url	0.047619
exist and be table	value	0.005155
a single block and are a	core block manager	0.022727
mode s of	mode	0.050000
in this object	ndframe	0.010050
single	core ndframe	0.005051
add a temporary variable to the scope	scope add tmp value	1.000000
statement that create a	create	0.033333
return	build	0.013514
slice points for level 0 assuming	indexes multi index bounds	0.166667
null_color for missing	null null_color	0.125000
sparsearray	sparse sparse array	0.043478
called after	index array wrap	0.066667
panel along major axis parameters	panel major xs key	0.500000
a bool if we have only bool values	object block is bool	0.166667
returns value occupying requested label default to specified	core sparse sparse series get label default	0.083333
load a pickle	compat load	0.200000
and plural 'names'	validate names name names deep	0.125000
to handle na filling of take	assert take fillable values	0.250000
figure with a set of subplots	subplots	0.076923
to handle na filling of take	index assert take fillable	0.250000
casting	indexes numeric index assert safe casting	0.125000
if seq is an iterator put its	core indexes ensure has len seq	0.500000
that do not throw an exception when	util	0.062500
csv file (discouraged	from csv	0.066667
elements of v should	searchsorted v	0.033333
given an interval or intervalindex	indexes get	0.125000
the put method to its values attribute	core series put	0.055556
returns true if there are any missing	core indexes period index is full	0.500000
from 1-dimensional ndarray only use this	index set value	0.023810
column-wise row-wise or table-wase updating the html representation	axis subset	0.250000
convert string-like and string-like array to convert	dtypes maybe convert string to	0.250000
object	indexes	0.004651
with optional fill	fill_value	0.033333
see index join	indexes period index join other how level return_indexers	1.000000
construct an intervalindex from	indexes interval index from arrays	0.166667
slice of	core block slice slicer	0.083333
try to operate on	core selection mixin try	0.250000
datetimelike	datetimelike	0.461538
you	indexes index set value arr	0.023810
data the shifted data	slice	0.038462
the best locator based on a	plotting pandas auto date locator get locator	0.062500
node must already	append key value	0.016667
index with custombusinessday as the default	core indexes cdate range start	0.083333
apply	apply func name	0.050000
column name for generation (e g	core computation bin op	0.055556
2d-nd reshape operation on	reshape nd axes	0.250000
if we are a sparse array	dtypes is sparse array	1.000000
sanitize input data to	sanitize array data index	0.250000
float values converted into strings	io formats float array formatter	0.055556
fast transform path for aggregations	by transform fast result	0.333333
parse	io excel file parse	0.125000
via the 'numpy' library the third	compat numpy validate take with	0.055556
of two or more factors by default	index columns values rownames	0.333333
in file node must	format	0.012346
panel or above	panel	0.017857
if we define an builtin function	core base grouper is builtin func arg	0.333333
or sunday use previous friday instead	previous friday	0.250000
going to write this as a frame table	appendable multi series table write	0.333333
the number of	core indexes multi index	0.013158
return a formatter function for a range of	get	0.007143
internal repr	values	0.008547
of values values	values method axis	0.500000
is	extension dtype is	0.125000
nlevels	nlevels	1.000000
as dataframe	core panel to frame	0.125000
dataframe columns parameters	data x	0.333333
create and return the op string for this	computation bin op generate	0.066667
over the dom	html frame parser build doc	0.125000
block manager from	to manager sdf	0.052632
update index attributes e g	core indexes datetime index maybe update attributes	0.200000
data can be represented as uints	core indexes uint64index assert safe casting cls data	0.333333
of the required package	package pkg_name min_version	0.083333
an iterable but not a string	iterable not string	0.500000
function for series arithmetic operations	bool method series op	0.333333
from each group if n is an	group by	0.016129
with the	io hdfstore get	0.333333
window_type and size	win_type min_periods	1.000000
a	datetime	0.026846
series using mapper dict or key function apply	as_index	0.071429
that left	left	0.074074
times to midnight	core	0.001326
the where condition cond on a and	computation where cond	0.111111
array interface	array result	0.125000
pretty	pretty	1.000000
option metadata if key is	key	0.005051
interval with	interval	0.029412
array of python datetime	core indexes datetime	0.011494
to	io	0.009036
needs	period index array wrap	0.050000
infer better dtype for object	convert datetime numeric timedelta coerce	0.071429
sort multiindex at the	core indexes multi index	0.013158
checks that path's extension against the	writer check extension cls	0.125000
of x in y if possible otherwise	core computation in x y	0.047619
session	session	0.833333
'series argmin' is called	skipna skipna	0.100000
convert dataframe	data	0.009709
convert argument to timedelta	tools to timedelta arg unit box	0.500000
called upon unpickling rather than	indexes new datetime index cls d	0.111111
like to compare numeric	numeric v string like	0.333333
return result as series or by a series	groupby by axis	0.045455
convert_dates	convert_dates	1.000000
object for	timedelta	0.022222
return a dense type view	core single block manager get	1.000000
values at the new freq essentially a	core resampler asfreq fill_value	0.066667
object for datetimelike properties of the series values	period properties	0.052632
for valid keys across my indexer	ndframe indexer has valid tuple	0.500000
an ndarray copy if specified	index dtype copy	0.043478
write out the binary feather-format for	core data frame to feather fname	0.083333
defined as a copy	indexes multi index view cls	0.047619
the plot attribute for groupby	plot	0.043478
add in numeric methods	core indexes index add numeric methods binary cls	1.000000
and	resampler func method args	1.000000
provides	period	0.016667
true if categoricals are the	equal	0.050000
this is called upon unpickling	core indexes new interval index cls d	0.333333
return block for the diff of the	core block diff n axis mgr	0.333333
can be used to	frame	0.009091
already exist and	append	0.012987
function to return the correct pandassql subclass based	io pandas sql builder con flavor schema meta	0.055556
only use	categorical	0.009615
given an	core indexes get	0.125000
function to be applied on each value	formats float array formatter value formatter float_format threshold	0.100000
in the series/index to be formatted in paragraphs	core str	0.011364
the join indexers	join indexers	0.500000
float values converted into strings using	float array	0.055556
extension against	check extension cls	0.125000
return an	vals	0.090909
grouper on instantiation	group by assure grouper	0.250000
leap year	is leap year	0.142857
our native types format	native types slicer na_rep quoting	0.200000
a date in xport format	io sas parse	0.066667
this is generally only useful to	column key column	0.142857
view limits to the nearest multiples of base	time series date locator autoscale	0.055556
euclidean algorithms to solve bezout's identity	gcd a b	1.000000
update index	core indexes datetime index maybe update	1.000000
list of sql statement that create a	sqlite table create	0.066667
be used to	frame parser	0.012500
multiindex at the	core indexes multi index sortlevel	0.166667
comparison operations to convert timedelta-like to	core indexes td index	0.055556
series extract groups from the first match	core str extract frame	0.047619
ewm	ewm	0.625000
render the built up styles to	io formats styler render	0.142857
purely label-location based indexer for selection by label	loc indexer	0.166667
labels matching criteria parameters	core ndframe select crit	1.000000
a hack to accelerate unioning a collection of	datetime index union many others	0.040000
append to table in file node must	append key value format append	0.125000
put method to its values attribute	series put	0.055556
type as the index (so we don't	core at indexer convert key key is_setter	0.090909
the number of bytes in	core indexes multi index nbytes deep	0.052632
new unit	datetime tzdtype new cls unit	0.055556
array of python datetime date objects (namely the	indexes datetime index	0.007634
its values attribute if it	core	0.001326
we have mixed	index have mixed	0.166667
its values	series	0.006757
time	indices time	0.125000
convert to our native types format slicing	float block to native types slicer	0.250000
order to correctly handle	core resampler convert obj obj	0.166667
array interface	multi index array dtype	0.125000
tup	tup	1.000000
data structure for accumulating data to	list	0.034483
return a new object with the	core	0.001326
create and setup my atom from the	io data col set atom	0.333333
create a timegrouper and return	core resample obj kind	0.083333
new dataframe with	data frame reset	0.027778
a series to the given	series	0.006757
are mapped to their default values as specified	for default values fname	0.200000
a dataframe sorted by the n largest	data frame nlargest n	0.166667
function column-wise row-wise or table-wase updating	func axis subset	0.200000
read csv file	frame from csv cls path	0.066667
re	re	0.555556
ufunc needs additional handling	wrap result context	0.029412
dict of array-like	dict cls data orient dtype	0.166667
new unit if needed otherwise return from	new cls unit tz	0.055556
a boolean if the passed type is	dtypes extension dtype is	0.125000
be used to iterate	html frame parser	0.012658
stata	data frame to stata	0.200000
array of python datetime	core indexes datetime index	0.007634
values to	values ndim	0.050000
the array interface return my values	index array dtype	0.125000
the required package is	package pkg_name min_version	0.083333
boolean if we if the passed type is	dtypes period dtype is	0.125000
in file node must already exist and	append	0.012987
code to a rule_code	code	0.076923
compute variance of groups	core group by var ddof	0.166667
read csv file (discouraged please use	core series from csv cls path sep parse_dates	0.066667
in order to correctly handle	resampler convert obj obj	0.166667
accessor object for datetimelike properties	period properties	0.052632
the node with the key	hdfstore get node key	0.083333
is defined as a copy with the	core indexes multi index view cls	0.047619
same as index	indexes index	0.007353
styler with a	formats styler	0.021739
convert to our native types format slicing if	core datetime block to native types	0.250000
converts json lists to	convert to	0.090909
return object dtype	dtype	0.010989
table	io hdfstore append key value	0.033333
view of	view	0.043478
return boolean if	is	0.005291
append to table in	append	0.012987
excluding elements from groups that do not	group	0.027027
out the binary feather-format for dataframes	frame to feather fname	0.083333
boolean array of whether each index value is	datetime index ops	0.034483
can be	frame parser build	0.014706
gets called after a	core series	0.008000
up styles to	io formats	0.027778
the reindex	core ndframe reindex	0.125000
is called via the 'numpy' library the	with convert convert args kwargs	0.055556
a multi	multi axes	0.500000
string representation for this	indexes frozen ndarray unicode	0.083333
of a series that is datetimelike	to datetimelike data	0.125000
apply we are stripping all	by mixin apply	0.050000
the series or dataframe only	series or dataframe	0.500000
columns of this	index columns values	0.037037
table	hdfstore append key value format	0.033333
internal method to handle na filling	fillable values	0.125000
string for this termvalue	generate v	1.000000
lookup of value from 1-dimensional ndarray only use	core indexes datetime index get value series	0.071429
infer the fill value	infer fill value	0.333333
method to handle na filling of take	core indexes index assert take fillable values indices	0.250000
concise summary of	info verbose buf max_cols memory_usage	0.333333
perform generic binary operation	core series binop other func level	0.333333
dom	html frame parser build doc	0.125000
new dataframe	data frame	0.005714
upgrading in place parameters	mode propindexes keys	0.250000
by definition have do not	io formats datetime64formatter format strings	0.090909
table	io hdfstore append	0.033333
constructor types that each has a homogeneous dtype	core ndframe as blocks copy	0.142857
a table reflecting	table setup	0.083333
of value from 1-dimensional ndarray only use this	indexes categorical index get value series key	0.100000
level j do not	j	0.034483
float	io formats float array formatter get result	0.055556
on sunday use day thereafter	tseries sunday to	0.200000
input values as an enumerated type or categorical	factorize values sort order na_sentinel	0.111111
type is	dtypes period dtype is	0.125000
generic moving function	rolling apply arg window func	0.500000
return a boolean list indicated if we have	index have	0.142857
index with custombusinessday as	indexes cdate range start	0.083333
determine	str match arr pat	0.166667
sparse	core sparse sparse data	0.076923
the frame	formats data frame	0.090909
the same dimensions as the	ndframe	0.005025
called via the 'numpy' library the third	validate take with	0.055556
specialized shift which produces	index ops mixin shift n	0.250000
return a prettier version	get pretty string	0.500000
visit	visit	1.000000
casting data from some accepted dtype	indexes numeric index assert safe casting cls data	0.047619
boxed	datetime	0.013423
required package is installed	package	0.058824
string in the series extract groups from the	str extract frame	0.047619
this type	core dtypes interval dtype	1.000000
the unicode normal form for	core string methods normalize form	0.066667
for series arithmetic operations to avoid code duplication	bool method series op name str_rep	1.000000
constructs ndframe from group with provided name parameters	by get group name	1.000000
a boolean if we will be using numexpr	use numexpr op op_str a b	1.000000
i am never a	core categorical block is	0.100000
block i	block cls i	0.333333
argmax	argmax	1.000000
return index or ndarray filled with	index ops mixin	0.019231
of groups excluding	core	0.001326
validate this column	io index col validate col	0.200000
function to be applied on each value to	formats float array formatter value formatter float_format threshold	0.100000
dictionary	ndframe construct axes dict from	0.250000
apply we are stripping all	apply	0.026316
a ufunc	core indexes index array wrap result context	0.200000
return the number of bytes in	multi index nbytes deep	0.052632
an outside world format currently just	block external values dtype	0.125000
object dtype	object	0.142857
generate an array of unicode strings	util randu array nchars size dtype	1.000000
try to parse a ndarray like into	json parser try convert data name	0.500000
value from 1-dimensional ndarray only	categorical index get value series	0.100000
read csv file (discouraged please use :func	csv cls path	0.066667
if we have	index have	0.142857
membership of x in y if	core computation in x y	0.047619
used to iterate	html frame	0.014706
of	core reshape	0.047619
be a	new align inplace	0.125000
of axis	set axis axis	1.000000
that time and panels are conformable	indices time panels	0.250000
from 1-dimensional ndarray	core indexes index	0.007042
frequency datetime index	core indexes	0.009524
get	get	0.150000
the unicode normal form for the	string methods normalize form	0.066667
return the op string	core computation bin op generate	0.066667
fillna but using the interpolate machinery	block interpolate with fill method axis inplace limit	0.200000
optlevel	optlevel	1.000000
function of type t or tuple of	computation is type t	0.083333
determines if two index objects contain	core indexes float64index equals other	0.200000
convert structured or record ndarray to dataframe parameters	frame from records cls data index	1.000000
array	sparse series array	1.000000
the handle if its open	io stata	0.071429
never a view	view	0.043478
compute the	core	0.002653
a slice of my	core datetime tzblock slice slicer	0.083333
maximum value of the index	core indexes datetime index	0.007634
version to operate on	datetime like block mixin try operate values	0.333333
lookup	key	0.005051
we have a dtype compat for the values	values name freq	0.166667
table in file node must already	hdfstore	0.014925
of a	timedelta index resampler	0.066667
setting a timezone	set timezone tz	0.142857
read from a	io read	0.038462
from 1-dimensional ndarray only use	index set	0.022727
create a scalarblock	block make block scalar values	0.333333
'numpy' library the	compat numpy validate take with convert	0.055556
class implementing the plot attribute	by plot	0.062500
check length against max_rows	core data frame repr fits vertical	1.000000
function return fillvalue	fillvalue	0.071429
return the bool of a	core ndframe bool	0.055556
corresponding to requested indices	take indices axis convert is_copy	0.500000
ensure that we are re-localized	datetime index ops mixin ensure localized result	1.000000
boolean indicating if self is view of	core ndframe is view	0.200000
object	abstract	0.111111
occupying requested label default to specified missing value	core sparse sparse series get label default	0.083333
return the	merge get	0.500000
apply we are stripping all of the	apply	0.026316
to a latex tabular/longtable environment output	formats latex formatter write result buf	0.200000
categorical which categories and codes are unique	categorical unique	1.000000
of python datetime date objects (namely the	datetime	0.006711
the object is a file-like object	core dtypes is file like obj	0.333333
database	io sqlite database	1.000000
determine if dtype is valid	select n is valid dtype n method dtype	0.142857
spreadsheet-style pivot table as a dataframe	reshape pivot table data values index columns	0.166667
creating a subclass of styler with	formats styler from	0.076923
or columns using input function or	mapper axis copy inplace	0.055556
a set of kwargs suitable for initializing or	kwargs	0.022222
read csv file (discouraged please use :func pandas	core data frame from csv cls path header	0.066667
already exist	hdfstore append key	0.016667
used	html frame	0.014706
apply mapper function to its	categorical map mapper	0.166667
arguments	arguments	1.000000
all the classes which represent time-seires	util all timeseries index	0.333333
index or ndarray filled with nat which has	indexes datetime index ops mixin nat new	1.000000
that can	frame	0.009091
utility routine to turn	for	0.071429
and return the block manager from a dataframe	manager sdf columns	0.052632
file node must already exist and	append key value	0.016667
validates that we	categorical	0.009615
union of two multiindex objects	indexes multi index union other	0.066667
already exist	append	0.012987
midnight length is	datetime	0.006711
file node	io hdfstore append key value	0.016667
in file node must already exist	key	0.005051
validates that we have a valid ordered	categorical validate ordered cls ordered	0.058824
panel-like dataframe parameters	panel index time panels names	0.076923
the correct day for each date	roll	0.142857
copy of this object names dtype	core indexes multi index copy names dtype	0.333333
for writing stata	frame to stata	0.200000
snap time stamps to nearest occurring frequency	indexes datetime index snap freq	1.000000
a list-like indexer return the	index convert list indexer keyarr kind	0.066667
we have mixed	indexes multi index have mixed	0.166667
as an	to	0.006329
provide coercion to our input arguments	core block try coerce args	1.000000
new dataframe with labeling information in the	core data frame reset	0.027778
types format slicing if	types slicer na_rep float_format	0.200000
be table	io hdfstore append key	0.016667
stata and	to stata	0.058824
to be returned from apply if as_index=true	with as	0.200000
matches the expected exception and	contextmanager exception matches	0.500000
series excluding missing values	core series	0.008000
propagate metadata	core ndframe finalize	1.000000
and be	key value	0.011628
indexer like _name in the	indexer	0.009174
with day as the default frequency	periods freq	0.062500
set new labels on	set labels labels	0.500000
a resample of	index	0.006012
apply we are	group by mixin apply func	0.050000
that path's extension against the writer's supported extensions	excel writer check extension cls ext	0.333333
boolean whether this axes needs validation for a	ndframe indexer should validate iterable	0.166667
is called via the 'numpy' library the third	numpy validate take with convert convert args kwargs	0.055556
merge holiday calendars together the caller's class	abstract holiday calendar merge	1.000000
return an item pair from maps[0] raise keyerror	map popitem	0.055556
repr of this object potentially casting to object	period index to embed keep_tz	0.333333
next offset only if not on offset	offset rollforward dt	0.500000
get my plane axes indexes these are already	get plane axes axis	1.000000
apply we are stripping all	group by mixin apply func name	0.050000
construct dataframe from dict of array-like or dicts	core data frame from dict cls	0.200000
we have a fully reindex-output to the	core data frame group by reindex output result	0.045455
a simple cross-tabulation of	core reshape crosstab index	0.066667
called	period index array wrap	0.050000
helper to call encode before writing	io stata writer write to_write	0.083333
data	data index	0.153846
return my self as a sparse array	core sparse sparse series as sparse array	0.250000
is thrown by	parser	0.008000
convert tz-aware axis to	ndframe tz convert tz axis level copy	0.200000
highlight the maximum by shading the background	io formats styler highlight max subset	1.000000
shade the background	io formats styler highlight null	0.500000
the series/index	core str get arr	0.142857
of the counts of	counts f	0.041667
return a	frame	0.009091
compute	index	0.002004
csv	from csv cls	0.066667
list representing the totally ordered	xnull	0.083333
csv file (discouraged	from csv cls path sep parse_dates	0.066667
pick the best locator	get locator	0.062500
to ndarray raises on scalar	coerce to ndarray cls	0.166667
we have bytes decode them	ensure decoded s	0.166667
return packed bytes see :class packer	io msgpack	0.025000
lookup of	core indexes	0.004762
of value from 1-dimensional ndarray only use	indexes categorical index get value	0.100000
validate	io index col validate	1.000000
memory	indexes range index memory	1.000000
tz-aware type return an encoded	tz tz	0.066667
perform the reduction type operation if we can	ops mixin reduce op	0.083333
return a version to operate on as the	block try operate values	0.125000
string-like that is object dtype and	string array	0.038462
of arr1 and arr2 are equivalent	contents arr1 arr2	0.066667
pivot to the	block2d to blocknd values	0.500000
dispatch to apply we are stripping	by mixin apply	0.050000
of kwargs	kwargs cls	0.040000
this level	plotting has level	0.333333
be used to iterate over the	html	0.011765
return the full scope for use with	scope full scope	0.055556
of x not in y if possible otherwise	core computation not in x y	0.066667
fast lookup of value from 1-dimensional ndarray only	core indexes categorical index get value series	0.100000
never a	categorical block	0.100000
if the passed type is	period dtype is	0.125000
can be used to iterate	html frame parser build	0.014706
to the :meth pandas dataframe reset_index function	drop name inplace	0.142857
values to be at least	block shape values	0.050000
values for	core indexes multi index get level values	0.500000
expanding count of number of	stats expanding count arg	0.200000
datetimeindex with times	datetime index	0.007042
data to ndarray raises on scalar data	to ndarray cls data	0.166667
only	value	0.005155
holiday falls on saturday use following monday instead	tseries next monday dt	0.250000
that can be used to	io	0.003012
fill_value and arr dtype then fill	maybe fill arr fill_value	0.333333
info	frame info	0.500000
coerce to the new type	dtype copy	0.064516
that an positional	has valid positional setitem	0.250000
return an array	array vals	0.083333
bytes in the underlying data	nbytes	0.046512
update index attributes e g freq depending on	timedelta index maybe update attributes attrs	0.200000
to get lines 0) there are headers on	io python parser get index	0.166667
numpy array of datetime time	core indexes datetime	0.011494
labels	ids labels	1.000000
return index	indexes datetime index ops mixin	0.029412
need to coerce	indexes period index coerce	0.125000
values in the series	core series	0.008000
convert to our native types format	core categorical block to native types slicer	0.250000
as series or by a series of columns	core ndframe groupby by axis level	0.333333
dataframe apply	core sparse sparse data frame apply func	0.166667
interface to create holidays following certain	calendar	0.111111
for series arithmetic operations	bool method series op	0.333333
take a string-like that	string array	0.038462
rule name associated with a dateoffset object	name offset	0.500000
the union of two	multi index union other	0.066667
_upsample kwargs and	group by mixin apply f	0.166667
node must	value format	0.016667
sets index names to 'index'	names	0.038462
memory usage	indexes range index memory usage deep	0.200000
rec array and create the manager	rec array to mgr data index columns	1.000000
unified inteface datetimelike	datetime	0.006711
property	core ndframe	0.010101
binary operation *before* being passed to the engine	env engine parser term_type	0.500000
synonym for :meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace limit downcast	0.333333
wrap comparison operations to convert timedelta-like to timedelta64	core indexes td index cmp	0.055556
the series	period	0.016667
an intervalindex from a list/array of tuples parameters	indexes interval index from tuples cls	1.000000
from a 1d array	index from intervals cls data name copy	0.125000
ndarray	indexes index	0.007353
that we have	cls	0.016949
apply mapper function to its	core categorical map mapper	0.166667
return dtype and n/a	empty dtype and	0.125000
from ndarray or list	data index	0.076923
for series arithmetic operations to	core comp method series op name	0.333333
name or names of the axis returning self	ndframe set axis name name axis	1.000000
lookup of value from 1-dimensional ndarray only	indexes categorical index get value	0.100000
series/index by	str	0.052632
subset rows	ndframe filter items like regex	1.000000
table in file node	key value	0.011628
validates that	categorical validate ordered cls	0.055556
the float values converted	float array formatter get result as	0.055556
add in numeric unary methods	indexes index add numeric methods unary cls	1.000000
a datetime64 block with a tz	datetime	0.006711
called after a	indexes index array wrap result	0.100000
from 1-dimensional ndarray only use	set value	0.023256
given axis	axis method	0.250000
float values converted	formats float array formatter get result as array	0.055556
for series arithmetic operations	core comp method series op	0.333333
the new	copy errors	0.250000
beginning of	date offset beg	0.166667
making this object picklable	core indexes multi index setstate state	0.333333
from 1-dimensional ndarray only use this if you	indexes	0.004651
list of normalized locales that	util valid locales locales normalize	0.050000
input order	order	0.125000
parameter	core categorical	0.013889
boolean if values in the object	ops mixin is	0.100000
values view mask	values values	0.083333
file node must	io hdfstore append key	0.016667
indices of the maximum values along an axis	indexes datetime index ops mixin argmax axis	0.250000
pandas dataframe for compatibility with the data	data	0.009709
for series arithmetic operations to avoid code duplication	method series op name str_rep fill_zeros	1.000000
slice the info axis of obj	info slice obj	0.500000
sparse/dense and dtype) in this object	core	0.001326
we are index sliceable then return my slicer	convert to index sliceable obj	0.083333
an xpath expression to	xpath expr	0.166667
must already exist and	io hdfstore append	0.016667
operations to the	operations cls	0.038462
convert :mod datetime to	dt to	0.125000
bytes in the underlying data	core indexes range index nbytes	0.052632
in file node	hdfstore append key value	0.016667
info	freqstr	0.111111
class for parsers that parse html into dataframes	html frame parser	0.012658
according to indexer and return them as a	nd indexer	0.030303
create and return the block manager from	core sparse to manager sdf columns	0.052632
keyerror is	compat	0.030303
path_or_buf	path_or_buf	1.000000
an index that we	index value	0.142857
string representation for this object	core indexes index unicode	0.083333
of whether each index value is found	core indexes datetime index ops mixin isin values	0.083333
return the block manager from a dataframe	manager sdf columns index	0.052632
y	y	0.411765
box function to get object	index ops mixin box func	0.142857
valid other evaluate or raise typeerror	index validate for numeric binop other op opstr	0.500000
operate	operate	1.000000
called via the 'numpy' library	validate take with convert convert args kwargs	0.055556
two multiindex objects sorting if possible parameters	other	0.013514
the metadata for this	io index col read metadata	0.250000
multiindex has only	core indexes multi	0.014493
objs	objs	1.000000
function for this argument return it	func	0.023810
apply	tseries semi month offset apply index	0.500000
the op string	bin op generate	0.066667
of python datetime	datetime	0.006711
remove and return	map	0.029412
left <=	left	0.018519
the internal implementation	core index ops mixin values	0.500000
the indices that would sort the index	index argsort	0.166667
along	reshape concat objs	1.000000
roll provided date	tseries date	0.166667
rolling statistical measure using supplied function designed	core rolling apply func name window center	0.333333
accelerate unioning a collection	datetime index union many others	0.040000
start_time	start_time	1.000000
has not been lexsorted	unsorted	1.000000
have a valid ordered	validate ordered cls ordered	0.058824
of columns	ndframe groupby	0.250000
of seconds (>= 0 and	indexes timedelta index seconds	0.066667
aggregate using input function or dict of {column	panel group by aggregate arg	0.250000
we have a astypeable to categorical	is categorical astype dtype	0.333333
to shift without copying data the shifted	ndframe slice shift	0.083333
of x in y if possible otherwise use	computation in x y	0.047619
an intervalindex from a 1d array	index from intervals cls	0.125000
df index[slice 4 6 ]	computation base expr visitor visit slice node	1.000000
reduce join_unit's shape along item axis to length	core trim join unit join_unit length	1.000000
string-like array to convert object	dtypes maybe convert string to object values	0.142857
infer better dtype for	ndframe convert datetime numeric timedelta coerce	0.071429
we are index sliceable then return my	to index sliceable	0.083333
wrap comparison operations to convert timedelta-like to	td index cmp opname	0.055556
new categorical by	core categorical sort	0.166667
format files	format index	0.500000
node	node	0.700000
the	styler	0.022222
str against frequency str	str from freq cls freq	0.500000
return packed bytes	io	0.003012
:meth pandas dataframe reset_index function see	series reset index level drop name inplace	0.142857
reverse convert a missing	convert missing	1.000000
handles preprocessing for cut where	reshape preprocess for cut	0.200000
validates that we have a valid ordered	core categorical validate ordered cls ordered	0.058824
handling as	index	0.002004
type_map	fmt	0.142857
be table	append key	0.016667
convert to our native types	datetime block to native types	0.250000
the (attr formatted_value)	format attrs	0.142857
sparse coo_matrix from a sparseseries with multiindex	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
ndarray or list of	index	0.002004
/ pandas type to	type	0.024390
that create a table reflecting the	sqlite table create table setup	0.066667
of whether each index value is found in	core indexes datetime index ops mixin isin	0.083333
dict of	dict cls data orient	0.166667
object invoked by str df in	str	0.017544
object	packb	0.022727
indexer like _name in the	name indexer	0.083333
for grouping and aggregating relational	group by	0.016129
map the axis to the block_manager axis	ndframe get block manager axis axis	0.166667
index value is found in the	core indexes datetime index ops mixin isin values	0.083333
sql and params args to dbapi2 0 compliant	sql params	0.200000
return a boolean whether this axes needs validation	indexer should validate iterable axis	0.166667
td elements from a row	parser parse td obj	0.083333
operations to convert timedelta-like to	td index cmp opname nat_result	0.055556
set my pandas type &	io fixed set	0.200000
method to handle na filling of take	assert take fillable values indices allow_fill	0.250000
that we have a valid ordered	categorical validate ordered cls ordered	0.058824
already exist and	key value format	0.016667
in the series extract groups from the first	core str extract frame	0.047619
'kwargs' should be empty	kwargs	0.044444
are index sliceable then return my slicer otherwise	core convert to index sliceable	0.083333
detect terminal size and return	get terminal size	0.166667
given an interval or intervalindex	get	0.007143
evaluate the block return result block	core block eval func other raise_on_error try_cast	0.333333
startcol	startcol	1.000000
a list of columns as lists	str columns	0.083333
this getitem defers to the underlying array	datetime index ops mixin getitem key	0.333333
to coerce	tseries maybe coerce	0.125000
pretty-formats the date axis x-axis	plotting format dateaxis subplot freq	0.333333
be a bool if we have only bool	core object block is bool	0.166667
of	ndframe	0.010050
add in the datetimelike methods (as we may	datetime index ops mixin add datetimelike methods	0.333333
render	styler render	0.142857
formats to	to	0.006329
from 0 to the length of that group	core group by	0.027778
indexer even when non-unique	get indexer for target	1.000000
the description	description	0.142857
apply function and combine results together in	by apply func	0.333333
names to 'index'	names data	0.083333
provides a resample of a	period	0.016667
dataset	core series	0.008000
block that has a single	simple blockify tuples	0.125000
to its values attribute if it has	core series	0.008000
given quantile a la numpy percentile	series quantile q interpolation	0.250000
atom	atom	1.000000
dimensions as the	core	0.001326
file node must already exist and	append key value format	0.016667
string a la re split in the series/index	core str split arr pat n	0.166667
localize tz-naive timeseries to target time zone	tz localize tz axis level	1.000000
sparseseries (with nan fill_value)	sparse	0.026316
file node must	append key value	0.016667
python expression	eval expr	0.083333
scalarblock	block make block scalar values	0.333333
the byte	column	0.066667
a valid ordered parameter	ordered cls ordered	0.058824
and be table	io hdfstore append key	0.016667
for an ordered multiindex compute	indexes multi index	0.013158
each interval in	interval	0.029412
add the	add aggregate	0.500000
timegrouper and	resample obj kind	0.083333
a single	ndframe	0.005025
take	take nd arr indexer	0.125000
available options grouped by	pp options	0.083333
add the series or dataframe only	add series or dataframe	1.000000
and right data	right vertical	0.250000
new multiindex from the	indexes multi index	0.013158
the styler removing any previously applied styles	io formats styler clear	0.333333
read csv file (discouraged please use	core data frame from csv cls path	0.066667
raised matches the expected exception and	assert raises contextmanager exception matches	0.142857
fast lookup of value from 1-dimensional ndarray	core indexes datetime index get value series key	0.071429
a singular 'name' parameter for general index	indexes index validate names	0.066667
handles preprocessing for cut where we convert passed	reshape preprocess for cut x	0.200000
evaluate the block	eval	0.100000
frame	data frame	0.017143
valid ordered	validate ordered cls ordered	0.058824
data corresponding to axis labels matching criteria parameters	core ndframe select crit axis	0.250000
of a block that has a single	core simple blockify tuples	0.125000
separate excel sheet parameters	excel path na_rep engine	0.166667
return an ndarray of the flattened values of	indexes index ravel order	0.037037
ndarray only use this if you	indexes index set	0.023810
sparsearray from	core sparse sparse data	0.076923
cross-tabulation of	core reshape	0.047619
single block and are a	core block manager	0.022727
concatenate	concatenate	1.000000
this	value	0.005155
boolean criterion specified by	by filter	0.200000
has a float	float	0.024390
return a tree-like object that can be	io html frame parser	0.012195
string and	parsed string	0.500000
decorator to deprecate a keyword argument of	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
create a timegrouper and	core resample obj kind	0.083333
that can be used to	io html frame	0.012987
a numpy / pandas type to its	table type x	0.055556
check	block manager is	0.250000
single dict created from	fromkeys cls	0.333333
the full scope for use with passing	computation scope full scope	0.055556
and create the manager	to mgr data	1.000000
assignment	assign	0.166667
table this is generally only useful	select column key column	0.142857
returns the float values	float array formatter get result as	0.055556
the totally ordered cartesian product	get group index labels shape sort xnull	0.066667
to apply we are stripping all of the	group by mixin apply	0.050000
if we define an builtin function for this	selection mixin is builtin func	0.333333
render a dataframe to	io formats data frame formatter to	0.250000
series extract groups from the	core str extract arr	0.066667
counts	counts f	0.041667
ndarray only use this if you	indexes index set value arr key	0.023810
to read from a url file or	io read obj	0.058824
'numpy' library	compat numpy validate take with convert convert	0.055556
if the object is an iterable but not	core dtypes iterable not	1.000000
1-dimensional	set	0.012195
fully reindex-output to the	core data frame group by reindex output result	0.045455
have a valid ordered parameter	cls ordered	0.058824
concatenation of an datetimelike	core dtypes concat datetime to_concat	0.125000
to stata's	to	0.006329
dispatch to apply	core group by mixin apply func name	0.050000
are datetime objects	numeric index is	0.333333
values from this selection take = take ownership	convert values nan_rep encoding	1.000000
ndarray argsort	core series argsort	0.083333
msg	msg	1.000000
whether we have any extra scope	core computation scope has resolvers	0.500000
of kwargs suitable for initializing or updating-on-copy an	kwargs cls	0.040000
series	ndframe	0.005025
of value from 1-dimensional ndarray	arr key value	0.038462
sets names	set names names	0.200000
binary feather-format for dataframes	to feather fname	0.083333
have a	core	0.001326
capture stderr in a buffer so that	util capture stderr f	0.055556
in file node must already	format	0.012346
/ or columns using input function or	mapper axis copy inplace	0.055556
called upon unpickling rather than the default which	datetime index cls d	0.111111
of bytes in the	nbytes	0.046512
guess the datetime format of a given datetime	core tools guess datetime format dt_str dayfirst	1.000000
the float values converted into	io formats float	0.055556
if	arr key	0.023810
a list replace	block manager replace list	0.500000
from 1-dimensional ndarray only	core indexes index set	0.023810
tmp	tmp	1.000000
take which sets	core take	0.125000
return true if this is	is in	0.076923
of value from 1-dimensional ndarray only use	indexes period index get value	0.071429
return a fixed frequency datetime index	indexes period range start end periods freq	0.083333
returns a curve with holidays between start_date	tseries abstract holiday calendar holidays start end return_name	0.066667
string representation for a particular object	string mixin bytes	0.333333
return the block manager from	manager sdf	0.052632
sentinel	sentinel	1.000000
check that the exception raised	util assert raises contextmanager	0.200000
convert argument to timedelta parameters	tools to timedelta arg unit	0.500000
for panel objects	core panel to	0.027027
timegrouper	group by resample rule	0.166667
from a scalar parameters	from scalar	1.000000
construct this type	interval dtype construct	0.333333
common post process for	plotting mplplot post plot logic common ax	0.333333
group excluding	data frame group by	0.500000
s	s	0.625000
return a boolean if the passed type is	extension dtype is	0.125000
to	parser	0.008000
return the join	core reshape as of merge get join	1.000000
values along a	values	0.008547
set	set object info	1.000000
this indexable with	io index col update	0.125000
cumulative min	cummin axis	0.500000
by definition have	io formats datetime64formatter format strings	0.090909
starting at the end of	rsplit arr	0.037037
that we have	categorical validate ordered	0.055556
function is called via the 'numpy' library the	compat numpy validate take with convert convert args	0.055556
of value from 1-dimensional ndarray	indexes datetime index get value series key	0.071429
to infer better dtype	convert datetime numeric timedelta coerce	0.071429
codes by the indexer fill with the	nd indexer	0.015152
deal with nat-like arg is	arg errors	0.026316
concatenation of an datetimelike array of arrays each	dtypes concat datetime	0.125000
shape of the values	shape values ndim shape	0.083333
we need to coerce	indexes period index coerce	0.125000
whether i am an indexed column	io index col is indexed	0.200000
the index and its	core indexes range index	0.021277
into long stacked format as dataframe	panel to frame	0.125000
parameter if	validate	0.027778
interpolate values according to	resampler interpolate	0.166667
the	core categorical get	0.200000
the axis to the block_manager	get block manager	0.166667
stderr in a buffer so	stderr f	0.125000
the reduction type operation if	index ops mixin reduce op name axis skipna	0.083333
the	range	0.095238
noconvert	noconvert	0.714286
to write this as a frame table	io appendable multi series table write obj	0.333333
box function to get object from	indexes datetime index ops mixin box func	0.142857
evaluate an expression in python space	python engine	1.000000
the float values converted into strings	io formats float array formatter get result	0.055556
handling as	core indexes period index array wrap result	0.050000
accessor methods	accessors cls	1.000000
of arr1	util equal contents arr1	0.066667
evaluate the block return result block from the	block eval func	0.333333
and plural 'names' parameter for	names deep	0.125000
file node must already exist and be	io	0.003012
of this	core indexes period index	0.034483
numpy array interface	core categorical array dtype	0.500000
csv file (discouraged	frame from csv	0.066667
string-like that is object dtype and coerce to	io convert string array data encoding	0.038462
attribute if it has	series	0.006757
an observation's missing value	stata missing value	1.000000
a fixed frequency datetime index with business day	core indexes bdate range start end periods	0.083333
each has a homogeneous dtype	ndframe as blocks copy	0.142857
to dispatch to	ensure compat dispatch name	0.500000
with labels on given axis	dropna axis	0.083333
the join wrapper methods	ops mixin join i8 wrapper joinf dtype with_indexers	0.333333
reduce join_unit's shape along item axis	trim join unit join_unit	0.500000
return boolean if values in the object	mixin is	0.083333
isnan	isnan	0.625000
a class for writing stata binary	core data frame to stata fname	0.200000
underlying data which is a categorical	categorical index values	0.333333
mode s	data frame mode	0.333333
render a dataframe to	formats data frame formatter to	0.250000
nat which has the	nat new box	0.050000
the table schema resets the index	io json	0.062500
the info	info info	0.142857
statistical measure using supplied function designed to	apply func name window center	0.250000
header rows in multiindex	header name	0.100000
in the series extract groups from the	extract frame	0.047619
lookup of value from 1-dimensional ndarray only	datetime index get value series	0.071429
satisfy the boolean criterion specified by func	core ndframe group by filter func dropna	0.250000
supported for panel objects and	panel to sparse	0.037037
add numeric operations	core group by add numeric operations	1.000000
a style_dict to an xlsxwriter format object	xlsx writer convert to style style_dict num_format_str	0.166667
flattened values of the underlying	ravel order	0.037037
kwargs suitable for initializing or	kwargs cls	0.040000
return index or	datetime index ops	0.034483
simple cross-tabulation of	crosstab	0.050000
in each element in the series/index	core str	0.011364
pivot	reshape pivot index columns values	0.333333
index objects sortedness of the	range index	0.021739
add	panel add aggregate	0.500000
csv file (discouraged please use :func pandas read_csv	core series from csv cls path	0.066667
'name' parameter for general index	indexes index	0.007353
3 columns of this dataframe	columns	0.017857
used	core	0.001326
that create a	create	0.033333
the float values converted into	formats float array	0.055556
a new manager with the blocks	block manager combine blocks copy	0.250000
create an indexer like	ndframe create indexer cls name indexer	0.166667
regular expression pat	frame arr pat flags	0.166667
return boolean if values in the	mixin is	0.083333
based indexer for selection by label	indexer	0.009174
header rows in	io pop header	0.100000
is defined as a copy with the same	index view cls	0.047619
draw histogram of the	plotting hist frame data column by	0.200000
for	timedelta	0.022222
set a	set	0.012195
series using mapper dict	level as_index	0.111111
our native types	native types slicer na_rep	0.200000
sets new categories	categorical set categories categories fastpath	1.000000
union of two index objects and sorts if	indexes index union other	0.083333
tree-like object that can be	parser build	0.014706
interval or intervalindex return the corresponding interval	interval	0.029412
to apply we are stripping	group by mixin apply func name	0.050000
the cached item item represents a label indexer	item cache item	0.125000
from	cssresolver parse	1.000000
index	index ops mixin	0.038462
reindex for all the	ndframe reindex	0.125000
interpolate values	resampler interpolate method	0.166667
object that can	io html frame	0.012987
series that is datetimelike	datetimelike data copy	0.125000
convert tz-aware axis to	ndframe tz convert tz axis level	0.200000
bit of a hack to accelerate unioning a	core indexes datetime index union many others	0.040000
new block manager	block manager	0.042553
v should be inserted in	core indexes frozen ndarray searchsorted v	0.033333
for temporarily setting a timezone	timezone tz	0.142857
decorator to capture stderr in a buffer so	util capture stderr f	0.055556
the boxed	core indexes datetime	0.011494
block return result block	block	0.016393
sorted ndframe before	core ndframe truncate before	0.250000
dataframe's series using matplotlib / pylab	grid	0.100000
via the 'numpy' library	compat numpy validate argmin with	0.200000
are index sliceable then return my slicer	convert to index sliceable	0.083333
convert structured or record ndarray to dataframe parameters	core data frame from records cls	1.000000
determines if two index	datetime index ops mixin equals other	0.200000
convert tz-aware axis to target time zone	ndframe tz convert tz axis level	0.200000
for	core sparse arith method	0.333333
thresh	thresh	1.000000
or by a series of columns	core ndframe groupby by axis level	0.333333
shift without copying data the shifted data will	ndframe slice shift periods	0.083333
overlap	items overlap	0.062500
categorical adjusted for	indexes categorical index codes for	0.333333
to an integer	integer	0.125000
insert	block manager insert	1.000000
updating-on-copy an openpyxl v2	io openpyxl20writer	0.035714
of whether each index value is found	core indexes datetime index ops mixin isin	0.083333
'numpy' library	compat numpy validate argmin with	0.200000
the series/index by indicated number of	core str	0.011364
if we are index sliceable then return	to index sliceable	0.083333
slice/take blocks along axis=0	block manager slice take blocks ax0 slice_or_indexer fill_tuple	0.500000
take a string-like that is	convert string array data	0.038462
return	categorical index	0.045455
to convert dataframe	data	0.009709
makes sure that time	time	0.052632
time series	series ax	0.500000
string representation for this	frozen ndarray unicode	0.083333
if the passed type is an actual dtype	dtypes extension dtype is dtype cls dtype	0.111111
appropriate for table outplot	util table plotter conv data	0.142857
gets	indexes period index array	0.050000
axis omitted where alternately any or all of	frame dropna axis how thresh subset	0.100000
of v should be inserted in	searchsorted v	0.033333
return index with requested level removed	index droplevel level	0.250000
single column from the	io	0.003012
unique elements in the object	ops mixin nunique dropna	0.083333
write this as a frame table	io appendable multi series table write obj	0.333333
file node must already exist	append key value	0.016667
binop	binop	1.000000
metadata for this columns	io index col read metadata	0.250000
business day as the default frequency	freq	0.016129
attempt to construct this type from	core dtypes interval dtype construct from string cls	0.166667
applying func to each columns	frame apply columns func	1.000000
match of regular expression	flags	0.058824
downsample the cython defined function	period index resampler downsample	0.200000
evaluate the block	eval func other	0.200000
value the we use to construct a	value	0.005155
a list of sql statement that create	sqlite table create	0.066667
a uint64 ndarray of my hashed	index hashed	0.166667
infer	dtypes infer	0.500000
float	io formats float array	0.055556
to ndarray raises on scalar data	indexes index coerce to ndarray cls data	0.166667
the specified categories	categorical remove categories	0.500000
resolution str	tseries resolution	0.333333
block manager from a dataframe of series	to manager sdf	0.052632
we by definition have	io formats datetime64formatter format strings	0.090909
template and jinja environment	template cls searchpath name	1.000000
index objects	indexes datetime index ops mixin	0.029412
fast lookup of value	index set value arr key value	0.038462
concatenation of an	concat datetime to_concat	0.125000
get	indexes timedelta index get	0.500000
our object	generic fixed	0.333333
tree-like object that can be used to iterate	parser build	0.014706
get instances of all the various index classes	all index	0.142857
1st discrete difference	core data frame diff periods axis	0.250000
try to cast the array/value to	core dtypes maybe cast to	0.250000
and return the block manager from a dataframe	core sparse to manager sdf	0.052632
csv file (discouraged please use :func pandas	core series from csv	0.066667
i : int slice or sequence	data frame ixs i axis	0.200000
the	html	0.011765
check that left and right panels are equal	assert panelnd equal left right check_dtype check_panel_type	0.333333
return	multi index	0.020000
internal method to handle na filling of take	assert take fillable values	0.250000
sequence	sequence	0.545455
write a dataframe to	to	0.006329
for initializing the gradientfill stop	stop cls	0.066667
a feather-format object from the file path	feather path	0.333333
returns first n rows of	head n	0.500000
of _constructor_sliced-like objects to	core panel homogenize dict frames intersect dtype	0.066667
{group name -> group labels}	base grouper groups	0.200000
in the index	index	0.002004
convert timeseries to specified	asfreq	0.111111
exist	key	0.005051
object or a numpy dtype	dtype dtype	0.100000
used to iterate over the	io	0.003012
column name for generation (e g	computation bin op	0.055556
select values between particular	between	0.086957
underlying data	indexes multi	0.014493
is index	core	0.001326
full scope for use with passing to engines	scope full scope	0.055556
background null_color	styler highlight null null_color	0.125000
scalar compat	scalar	0.100000
instances of all	all	0.043478
the node with the	io hdfstore get node	0.166667
with integer stride	get stride	0.333333
preserve dtype	core putmask smart v m n	0.055556
we are index sliceable then return	index sliceable	0.083333
filled with nat which has the same	ops mixin nat new	0.050000
table in file node must already	value format	0.016667
comparison operations to convert timedelta-like to timedelta64	indexes td index	0.055556
compute	crosstab index columns values	0.066667
downsample	core period index resampler downsample	0.200000
true if this	is in	0.076923
check if we do need a multi reindex	ndframe needs reindex multi	0.333333
new block (of a	block setitem indexer	0.066667
delegating methods/properties	pandas delegate	0.166667
the values	io generic index col convert values	0.166667
validate that the where statement is of the	validate where w	0.250000
check whether or	io validate	0.031250
indexer	nd indexer allow_fill	0.050000
(attr formatted_value)	mixin format attrs	0.142857
control get_slice_bound	index get loc only exact matches key	0.142857
index (so we	core at indexer convert key key is_setter	0.090909
evaluate the	eval	0.100000
string representing a frequency guess generated by infer_freq	datetime index ops mixin inferred freq	0.250000
tree-like object that can be used to iterate	html	0.011765
new block (of a	core block setitem indexer	0.066667
arr1	equal contents arr1	0.066667
more this is index for series columns	core	0.001326
running code that expects to raise or	util assert produces warning	0.071429
write this as a frame	write obj	0.041667
a string representation for a particular object	core dtypes extension dtype repr	0.142857
manager with the blocks	block manager combine blocks	0.250000
a ndarray	index	0.002004
timedelta-like to timedelta64	core indexes td	0.055556
the	io generic index col convert	0.500000
if supplied in args/kwargs	from arguments args kwargs require_all	0.333333
index is monotonic	indexes index is monotonic	0.333333
float dtype if	float arr	0.083333
on where	key where start	1.000000
compute standard deviation of	core group by std ddof	0.166667
handling	indexes period	0.034483
evaluate	eval func other raise_on_error try_cast	0.200000
make a scatter plot from two dataframe	plotting scatter plot data	0.125000
returns numpy array of datetime time	core indexes datetime	0.011494
figsize	figsize	1.000000
as	indexes period index array wrap	0.050000
array interface return	categorical index array dtype	0.125000
csv file (discouraged	csv cls	0.066667
ensure that we are re-localized	mixin ensure localized result	1.000000
fast lookup of value from 1-dimensional ndarray	value arr key value	0.038462
want to set the _typ here	set axis axis labels fastpath	0.200000
add in the numeric add/sub methods	core indexes index add numeric methods add	1.000000
elements of v should be inserted in	searchsorted v	0.033333
versionadded : 0 20 0	core indexes multi index sort levels monotonic	1.000000
never	core categorical block	0.100000
sql database table into a	sql table table_name con schema index_col	0.333333
panel objects and will	core panel to	0.027027
format my specific	indexes index format	0.500000
returns system information as a	util get sys info	0.333333
simple cross-tabulation of	index columns	0.028571
a multirow	io formats latex formatter format multirow	0.250000
are going to write this as a frame	write obj	0.041667
to a	to	0.107595
stringified and numeric for these	na_values	0.125000
additional handling	index array wrap	0.033333
convert datetime-like	core indexes period index cmp opname nat_result	0.066667
decorator to take optional positional	util optional args decorator	0.083333
filtered indexer that doesn't have any missing indexers	missing indexer tuple indexer axes	0.333333
same dimensions as the	core ndframe	0.005051
fast	index	0.002004
an ndarray copy if	dtype copy	0.032258
return label for first	first	0.133333
value the we use to construct a condition/filter	value	0.005155
list representing the totally ordered cartesian product of	group index labels shape sort xnull	0.066667
float is formatted in	float	0.024390
from 1-dimensional ndarray	set value	0.023256
the data for this	io data	0.250000
a uint64 ndarray of my hashed	indexes multi index hashed	0.166667
convert from datetime	io datetime	0.500000
for a panel-like dataframe	time panels names	0.076923
we might need to coerce	tseries maybe coerce	0.125000
are stripping all of the _upsample kwargs and	apply f	0.166667
for	sparse sparse	0.034483
with	indexes datetime index	0.007634
statement that create a table reflecting	sqlite table create table setup	0.066667
alert a user about a	python parser alert	0.200000
return the op string for this termvalue	op generate v	0.250000
perform the reduction type operation if we can	core index ops mixin reduce op	0.083333
a date in xport format return python date	sas parse date datestr	0.250000
times in parallel	test parallel	0.142857
a list-like indexer return	interval index convert list indexer keyarr kind	0.066667
multiindex	core indexes multi index sortlevel	0.166667
evaluate a python expression as a	eval expr	0.083333
gets called after	series array wrap	0.100000
interpolate values according to different	interpolate method axis limit inplace	0.166667
localize tz-naive timeseries to target time zone	core ndframe tz localize tz axis	1.000000
1-dimensional	index set value arr key	0.023810
to scipy interpolate	core interpolate scipy	0.250000
a	core categorical validate	0.055556
of x in	computation in x	0.166667
if we can set a	util can set	0.125000
of bytes in the underlying	core indexes multi index nbytes	0.052632
that can be used to iterate	html	0.011765
n between self analagoust	n	0.045455
numeric	numeric	0.578947
return the header of	html frame parser parse thead	0.111111
series plotting accessor and method examples	series plot methods	1.000000
convert color_spec to an openpyxl v2 color	io openpyxl20writer convert to color cls color_spec	0.500000
a style_dict to an xlsxwriter format	io xlsx writer convert to style style_dict num_format_str	0.166667
timedelta parameters	timedelta	0.022222
nunique	nunique	1.000000
remove and return	compat chain map	0.032258
we have a	ordered cls	0.055556
a python expression	computation eval expr	0.083333
parsing tabular	file	0.166667
set coerce the	core dtypes coerce	0.066667
block of	make block	0.166667
to int64 with null values converted	values	0.008547
dtype (e g convert back to bool/int	maybe downcast to dtype result dtype	0.500000
the number of bytes in the underlying data	indexes range index nbytes	0.052632
return a list of normalized locales	valid locales locales normalize	0.200000
the error dataframe/dict	plotting mplplot parse errorbars label err	0.142857
set/update the info for	update info info	0.166667
arr dtype then fill	fill arr	0.500000
in file node	value	0.005155
analogous	axis broadcast reduce	0.500000
a subclass of styler with	styler from	0.076923
list of columns as	columns	0.017857
if the date belongs to a leap	core indexes period index is leap	0.125000
process of casting data from some	numeric index assert safe casting cls data	0.047619
manager for temporarily setting a timezone	timezone	0.083333
we internally represent the data as a datetimeindex	core datetime tzblock external values	1.000000
lookup	value	0.005155
a manipulation result has the same	core ndframe constructor	0.055556
update index	timedelta index maybe update	1.000000
specialized intersection	intersection	0.041667
index (so we don't	at indexer convert key key is_setter	0.090909
table in file node	hdfstore	0.014925
masked rec	masked rec	0.250000
support a single assignment node like	base expr visitor visit assign node	0.500000
vectorized membership of x not in y if	core computation not in x y	0.066667
a copy of	index copy	0.166667
casting data from some accepted dtype to the	casting cls data	0.047619
timedelta-like	indexes td	0.055556
that we have a fully reindex-output to the	core data frame group by reindex output result	0.045455
return a block	block	0.008197
exist and be table	key value format	0.016667
positional indexer cannot enlarge	valid positional setitem indexer indexer	0.052632
try to operate on	try	0.090909
return dtype	core get empty dtype	0.500000
check that left and right dataframe are equal	frame equal left right	0.333333
each index value is found in	core indexes datetime index ops mixin isin values	0.083333
for series arithmetic operations to avoid code duplication	core arith method series op name str_rep fill_zeros	1.000000
label for first non-na/null value	series first valid	0.250000
index	core convert to index	1.000000
values can be any type	values name freq	0.166667
if the object	core dtypes	0.166667
compute variance	group by var ddof	0.166667
a function elementwise updating the html representation	io formats styler applymap func subset	0.083333
dateoffset increments between calendar year begin dates	year begin	1.000000
makes sure that time and panels are conformable	like indices time panels	0.250000
already exist and be table	io hdfstore append key value format	0.016667
used when	core ndframe	0.005051
con	con	0.857143
to set	set	0.012195
a new block try to preserve dtype if	core putmask smart v m n	0.055556
a	crosstab index columns values	0.066667
starting at the end of the string	rsplit arr	0.037037
and index	indexes datetime index	0.007634
a single block and are	core block	0.010870
vectorized membership of x in	computation in x	0.166667
it has	core series	0.008000
only use this if	index	0.002004
interpolate values according	core resampler interpolate method	0.166667
that path's extension against	excel writer check extension cls	0.125000
for	datetime index	0.007042
attempt to construct this type from	dtype construct from string	0.166667
series of columns	ndframe	0.005025
convenience function for	xi yi x order	0.500000
data to the block we must	non consolidatable mix in	0.083333
are index sliceable then return my slicer	index sliceable obj	0.083333
deprecated option	deprecated	0.111111
we have	categorical validate	0.055556
for the dtype	dtype	0.010989
the 'numpy' library the third	numpy validate take with convert convert args kwargs	0.055556
guaranteed return of an	indexes index	0.007353
to datetime	date to datetime	0.250000
the union of two multiindex objects sorting if	indexes multi index union other	0.066667
wrap comparison operations to convert datetime-like	period index cmp opname nat_result	0.066667
replace extra whitespace inside of a string	remove whitespace s regex	0.200000
ndarray copy if specified coerce	copy	0.012821
result block	core block	0.021739
necessary) returns	reindex target method level limit	0.142857
label	series get label	1.000000
input values as	values sort order	0.333333
of whether each index value	indexes datetime index ops	0.034483
of bytes in	core indexes multi index nbytes	0.052632
is not supported for panel objects and	core panel	0.019231
index names	set default names data	0.083333
the passed type is an actual dtype that	is dtype cls dtype	0.130435
representation for a particular object	dtypes extension dtype bytes	0.142857
is not supported for panel objects and will	core panel	0.019231
called via the 'numpy' library the	validate take with convert convert	0.055556
is index for series	ndframe	0.005025
return an array of deterministic integers	util hash array vals encoding hash_key categorize	0.250000
a datetime with tz array	datetimetz array	0.500000
a multi	multi axes method	0.500000
1d array of	intervals	0.111111
for the diff of the	diff n axis	0.111111
in panel to a separate excel sheet	core panel to excel path na_rep engine	0.111111
header of a	html frame parser parse thead	0.111111
to line delimited	to line delimits s	0.166667
of the dataframe's series using matplotlib / pylab	data column by grid	0.200000
needs additional handling as	index array wrap	0.033333
intersection	intersection	0.291667
round the fractional part of the given	round frac x precision	0.200000
apply we are stripping all of the	group by mixin apply	0.050000
to a leap year	indexes period index is leap year	0.142857
with the block	create for block cls	0.333333
a dataframe as	data frame	0.005714
reduction type operation if we can	ops mixin reduce op name axis skipna	0.083333
the full scope	core computation scope full scope	0.055556
its values attribute if it has one	core	0.001326
making this object picklable	core sparse sparse array setstate state	0.333333
return a	get	0.042857
data	data frame dropna	0.333333
have	categorical validate ordered cls	0.055556
(produce a "pivot" table) based on	frame pivot index columns	0.111111
in the series extract groups	str extract frame arr	0.047619
provides a resample	index resampler	0.065217
concat all inputs as object datetimeindex timedeltaindex	core dtypes concat index asobject to_concat name	0.250000
used to iterate over the	io html frame	0.012987
to the scope	scope	0.076923
given an interval or	core indexes get	0.125000
csv file (discouraged please use	data frame from csv cls	0.066667
return dateoffset object from string or	tseries to offset	0.200000
hack to accelerate unioning	core indexes datetime index union many others	0.040000
gets	index array wrap result	0.066667
determine if each string matches a regular expression	match arr pat case flags	1.000000
pack	pack	1.000000
the data are	core data frame dropna	0.083333
from a 1d array of interval objects	indexes interval index from intervals	0.333333
accelerate unioning a collection of	core indexes datetime index union many others	0.040000
ndarray or list	index columns	0.028571
3 columns of	index columns values	0.037037
of casting data from some	safe casting cls data	0.047619
string raise a	cls string	0.125000
when a manipulation result has	core ndframe constructor	0.055556
builds a concise listing of available	list keys width _print	0.111111
of a groupby implementation	resampler groupby	0.166667
each index value is found in	datetime index ops mixin isin values	0.083333
dispatch to apply we are stripping all	mixin apply func	0.050000
validate that an positional	has valid positional setitem	0.250000
a set of sparseseries	core sparse	0.041667
only	value arr	0.023810
some dataframes	table	0.010870
return the counts of ftypes in this object	core ndframe get ftype counts	0.250000
swap levels i and j in a	series swaplevel i j copy	0.333333
value	core data frame get value	1.000000
for second holiday of two adjacent ones!	next monday or tuesday dt	0.200000
try to parse	try convert data name	0.200000
the 'numpy' library	compat numpy validate argmin with	0.200000
error raised when attempting to get	error	0.028571
function to determine if dtype is valid for	is valid dtype n method dtype	0.142857
evaluate the	eval func other	0.200000
we by definition have a	formats datetime64tzformatter format strings	0.166667
string in the series/index by the given delimiter	core str	0.011364
have	core categorical validate ordered	0.055556
of a groupby implementation	groupby	0.085714
given a tuple of slices/lists/labels/boolean indexer to	index get	0.040000
path's extension against	excel writer check extension cls	0.125000
boolean mask of index to be returned	index b	0.041667
each interval	core indexes interval	0.062500
return datetimeindex with times	index	0.002004
the 'numpy' library the third	numpy validate take with convert convert args	0.055556
csv file (discouraged please use :func pandas read_csv	data frame from csv cls path header	0.066667
from one of the stata date formats	stata	0.022222
result set coerce	dtypes coerce	0.066667
read csv	frame from csv cls path header sep	0.066667
particular dataframe invoked by unicode df	series unicode	0.166667
evaluate the block return result	eval	0.100000
the series/index by indicated number of times	core str repeat arr repeats	0.500000
node must already exist and	value	0.005155
append to table in	key value format append	0.125000
return the minimum value of the index	index	0.002004
sheet s into a dataframe equivalent to read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
find all occurrences of pattern	findall arr pat	0.250000
called after	period index array	0.050000
an intervalindex from a a left and	core indexes interval index from arrays cls left	0.500000
return a tree-like object	frame	0.009091
that we have a valid ordered parameter	validate ordered cls ordered	0.058824
python date	date datestr	0.333333
the view limits to the nearest multiples	date locator autoscale	0.055556
is maps[0]	compat chain	0.034483
possibly local context	key is_local	0.166667
creating a subclass of styler with	styler	0.022222
resolve a variable name	core computation scope resolve	0.166667
called via the 'numpy' library	numpy validate take with convert convert args kwargs	0.055556
sets the view limits to the nearest multiples	series date locator autoscale	0.055556
is defined	multi index view cls	0.047619
to table	hdfstore	0.014925
a typeerror if	core dtypes	0.018519
style	style	0.375000
concise summary of a	info verbose buf max_cols memory_usage	0.333333
other to the end of this	other	0.013514
totally ordered cartesian product of all	shape sort xnull	0.066667
underlying array which	core indexes datetime index ops mixin	0.029412
read html tables into	io read html io match flavor header	0.200000
a tree-like object that can be used to	html	0.011765
at particular time of day e	at time time	0.066667
return boolean ndarray denoting duplicate values	core duplicated values keep	1.000000
datetime format of a given datetime	datetime format dt_str dayfirst dt_str_parse	0.250000
_apply kwargs	name window center	0.071429
array return an array of deterministic integers	array vals encoding hash_key categorize	0.250000
rows of other to the end of	other	0.013514
this if you	indexes index	0.007353
determines if two index objects contain	datetime index ops mixin equals other	0.200000
of index to be	index	0.002004
upgrading in	mode propindexes keys	0.250000
new sparsedataframe applying func to each columns	sparse sparse data frame apply columns func	0.500000
extension against	io excel writer check extension cls	0.125000
to	html frame parser	0.012658
1-dimensional ndarray only	value arr key	0.023810
the block by	axis mgr	0.200000
decorator to run the same function	num_threads kwargs_list	0.050000
of this sparsedataframe	core sparse sparse data frame	0.058824
a fixed frequency timedelta index with day	core indexes timedelta range start end periods	0.083333
box function to get	core indexes datetime index ops mixin box func	0.142857
numeric	dtypes is numeric v string	0.333333
dict {group name -> group labels}	core base grouper groups	0.200000
ufunc needs additional handling as	core indexes period index array wrap result context	0.041667
that	util valid	0.125000
through views note this is	is	0.005291
slice of myself	slice slicer	0.017544
groups in each string in the series	extract	0.030303
of a dataframe	core data frame	0.023669
a	columns	0.017857
to its values	series	0.006757
that can be used to iterate	io html frame parser build	0.014706
is called upon unpickling rather than	index cls d	0.083333
return a fixed frequency timedelta index with day	core indexes timedelta range start	0.083333
other to int64 with null values	values other	0.200000
the levels attribute is 1 or a list	is multi index	0.142857
implement a	datetime tzblock	0.100000
return a boolean whether this axes needs validation	ndframe indexer should validate	0.166667
the elements that are non-zero this method is	core series nonzero	0.166667
array interface return my values	categorical index array dtype	0.125000
convert :mod datetime to	to	0.006329
single block	block	0.008197
sparse-compatible version of	indices axis	1.000000
bool of a single element	core ndframe bool	0.055556
select values between particular times	core indexes datetime index indexer between	0.125000
consistent invalid indexer message	indexes index invalid indexer	1.000000
fixed frequency datetime	bdate range start end periods	0.111111
is defined as a	core indexes multi index view cls	0.047619
input to appropriate for table	table	0.010870
numpy array of python datetime	datetime	0.006711
aggregators	mixin aggregate arg	0.166667
subclass of styler with a custom template and	io formats styler from custom template	0.142857
convert to our native types format slicing if	block to native types	0.250000
a datetimelike	datetime value	0.500000
fast path for getting a	core single block manager fast	0.250000
index objects contain the same elements	index ops	0.033333
the 'numpy' library	with convert convert	0.055556
compute the symmetric difference of two	symmetric difference other result_name	0.333333
series	series ax	0.500000
a date in xport format return python date	io sas parse date datestr	0.250000
for header rows in multiindex parsing	io pop header	0.100000
each axes overridden in child classes	plot logic ax data	0.083333
block of same	core block make block same	0.333333
a string cast it to timedelta according to	timedelta index maybe cast slice bound	0.125000
specialized shift which produces a datetimeindex	indexes datetime index ops mixin shift n freq	1.000000
return datetimeindex with times to midnight length	core indexes datetime	0.011494
to apply we	by mixin apply func name	0.050000
convert to our native types	core float block to native types slicer na_rep	0.250000
the sparsedataframe as a series object	core sparse sparse data frame	0.058824
rearrange index levels using input order	core series reorder levels order	0.333333
take a string-like that is object dtype and	string array data encoding	0.038462
categorical by category value returning a	ascending na_position	0.071429
set	sparse series set value	1.000000
raises notimplentederror for offsets	i	0.041667
name or names of the axis returning self	core ndframe set axis name name axis	1.000000
values for selected item ndarray	item fastpath	0.333333
value from 1-dimensional ndarray only	categorical index get value	0.100000
validate that an positional indexer cannot	valid positional setitem indexer indexer	0.052632
as a dataframe the	data values	0.062500
makes sure that time	indices time	0.125000
to capture stderr in a	capture stderr	0.055556
not a floating index	indexes index maybe cast indexer	0.200000
node must	key value format	0.016667
schema	schema	1.000000
iterate over the blocks collect and create	axis consolidate transposed	0.062500
python 3 compatability shim	stata value label encode s	1.000000
add the operations to the cls evaluate	ndframe add numeric operations cls	0.500000
via the 'numpy' library the third	numpy validate take with convert	0.055556
the interpolate machinery	interpolate with fill method axis	0.200000
the specified exception is raised and that	util assert raises regex _exception _regexp _callable	0.200000
the binary feather-format	to feather fname	0.083333
fast lookup of value from 1-dimensional ndarray	core indexes index set value arr key value	0.038462
return the cached item item represents a label	core ndframe get item cache item	0.333333
fixed frequency datetime index with business	indexes bdate range start end periods	0.083333
starting at the end of	rsplit	0.031250
type that can be coerced to periods	index simple new cls	0.090909
float values converted into strings using	formats float array formatter get result as array	0.055556
of the _apply kwargs and	window center	0.076923
compare	compare	1.000000
index for	core	0.001326
don't allow a multi reindex on panel	core panel needs reindex multi	0.500000
re-evaluate the obj with a groupby aggregation	core resampler groupby and aggregate how	1.000000
to specified	core ndframe asfreq	0.250000
number with its hexadecimal representation used to tag	replacer x	0.125000
label	get label	1.000000
dateoffset to	date offset	0.500000
from 1-dimensional ndarray only use this if	set value arr key	0.023810
this function is called via the 'numpy' library	with	0.034483
the series extract groups from	core str extract arr	0.066667
best locator based on	date locator get locator	0.062500
returns the float values converted	float array formatter get result as	0.055556
given quantile a	quantile	0.058824
whether each index value is found in	datetime index ops mixin isin values	0.083333
take the	categorical take nd	0.200000
date formats to a	io convert datetime to	0.166667
return the length	core length	1.000000
dense	sparse	0.026316
times to	datetime	0.006711
over the	io	0.003012
and return the block manager from	sparse to manager sdf columns index	0.052632
period	tseries get period	0.333333
so prints	warn	0.100000
convert an object to an expression	convert expression expr	1.000000
the union of two index objects and sorts	indexes range index union other	0.083333
in file node must already exist and	format	0.012346
is defined as a copy with the	view cls	0.047619
a fully reindex-output	core data frame group by reindex output result	0.045455
underlying	ops mixin	0.033333
more this is index for series columns for	core	0.001326
object that can be used	html frame	0.014706
background null_color for missing values	null_color	0.076923
of values	values	0.008547
update index attributes e g	core indexes timedelta index maybe update attributes	0.200000
of data	core	0.001326
a valid ordered parameter	core categorical validate ordered cls ordered	0.058824
apply mapper function to	categorical map mapper	0.166667
the view limits to	series date locator autoscale	0.055556
gets called after a	period index	0.024390
filled with nat which has the same length	ops mixin nat new	0.050000
read from a url	read	0.033333
any axis is	is	0.005291
sql statement that create a table reflecting	table create table setup	0.066667
number of	index	0.004008
validate this column return the compared	col validate col	0.200000
used to iterate over	html frame	0.014706
'numpy' library the	validate take with	0.055556
of type window_type and size window on the	stats rolling window arg window win_type min_periods	0.100000
convert string-like and string-like array	string	0.018868
a ufunc needs additional handling	context	0.023810
try to read from a url file or	io read obj	0.058824
a string-like that	io convert string array data encoding	0.038462
where :	where	0.083333
validate that	computation validate	0.500000
as	indexes period index array	0.050000
in	io hdfstore append key value format	0.016667
from 1-dimensional ndarray only use this if	indexes index set value arr	0.023810
draw histogram of the	hist frame data column by	0.200000
a fixed frequency datetime index with	core indexes bdate range start end periods	0.083333
to a sql database	io sqldatabase to sql	1.000000
can be used to iterate over the dom	html frame parser build doc	0.125000
item	item	0.600000
can be used to	html frame parser build	0.014706
for panel objects	panel	0.017857
return the number	core	0.002653
we have a valid ordered parameter	ordered cls ordered	0.058824
indexer	indexer form	1.000000
shift without copying data the	core ndframe slice shift periods axis	0.083333
return an xarray object from	core ndframe to xarray	0.125000
you	core	0.001326
the minimum value of the index	indexes datetime index	0.007634
/ or columns using input function or	axis copy inplace	0.055556
type is an	core dtypes interval dtype is	0.066667
gets called after a	core indexes period index	0.034483
create an indexer like _name in	ndframe create indexer cls name indexer	0.166667
to table in file	format	0.012346
deprecated option and if so prints a warning	core warn if deprecated	0.166667
are index sliceable then return my slicer	core convert to index sliceable obj key	0.083333
groupby implementation	groupby	0.142857
ndarray or list of	data index columns	0.125000
a slice of	core categorical block slice slicer	0.083333
function is called via the 'numpy' library	take with convert	0.055556
validate that the where statement is of the	core computation validate where w	0.250000
to a level-wise	locs tup	0.125000
the caption on	set caption caption	0.166667
into a	json parser	0.071429
that an positional indexer cannot enlarge its	indexer has valid positional setitem indexer indexer	0.052632
the kinds allowable columns for this	table queryables	0.055556
lookup of	index set value arr key	0.023810
in file node must already exist and be	io hdfstore append key	0.016667
the default frequency	periods freq	0.187500
called	array wrap	0.075000
must already exist and	key value format	0.016667
method to class python 2 and python	method cls name func	0.076923
day of the month	month end	0.100000
for panel objects	panel to sparse	0.037037
return the td elements from a row element	parse td obj	0.083333
midnight	index	0.002004
validate against an existing table	table validate other	1.000000
python datetime date objects (namely	datetime	0.006711
from a masked rec array and	masked rec array to	0.090909
bytes in	index nbytes deep	0.052632
the intersection of two index	range index intersection other	0.083333
that an positional	positional setitem	0.250000
result block s from the result	core block where other cond align raise_on_error	0.066667
stata date formats to	io convert datetime to stata	0.111111
gets	period index array	0.050000
values return a block if	core block	0.010870
tree-like object that can be used to	build	0.013514
the first day of the month	month	0.038462
include_start	include_start	1.000000
totally ordered cartesian product of all	labels shape sort xnull	0.066667
sets names	index set names names	0.200000
for panel objects and will raise an	core panel to	0.027027
a fixed frequency datetime index with custombusinessday as	core indexes cdate range start end periods	0.083333
get	core indexes datetime index get	0.500000
(e	indexes maybe	1.000000
we need to coerce a scalar to a	index coerce scalar to	0.071429
level j do	j	0.034483
copy of a series	core series	0.008000
valid stata	io stata writer	0.142857
return appropriate class of series	series result type result	0.250000
dtype) in	core ndframe	0.005051
is valid for	core select n is valid dtype	0.500000
a style_dict to an xlwt style	xlwt writer convert to style cls style_dict	0.250000
the 'numpy' library the third	take with	0.055556
of	multi index	0.040000
to construct this type from a	core dtypes interval dtype construct from string cls	0.166667
after a	indexes period	0.034483
return true if i am a non-datelike	block is datelike	0.500000
concatenation of an datetimelike array	dtypes concat datetime	0.125000
a prettier version	pretty string	0.250000
ndarray copy if specified coerce to	index dtype copy	0.043478
the mode s of the dataset	core series mode	0.083333
display options for printing and representing	display options	0.083333
remove	remove	1.000000
expanding count of number of	stats expanding count arg freq	0.200000
get the values	core get values values	0.125000
the locations	set locs locs	0.333333
variable number of decimal places	decimals	0.090909
when a manipulation result has the same dimensions	core ndframe constructor	0.055556
a row cross-section from	xs key	0.333333
we have mixed levels	core indexes multi index have mixed levels	0.200000
sanitize an index type to return	core sanitize index data index	0.200000
only use this	set value arr	0.023810
write a dataframe to a google bigquery table	data frame to gbq destination_table project_id chunksize verbose	0.333333
1-dimensional ndarray only use this if you	set value	0.023256
common ops mixin	ops mixin	0.066667
1-dimensional ndarray only use this if you	arr key	0.023810
file node	value format	0.016667
underlying	index	0.004008
is	compat is	0.111111
provides	index	0.006012
generic we want to set	series set	0.076923
return the header of a table	parser parse thead table	0.333333
cast to datetimeindex of timestamps at *beginning* of	to timestamp freq how axis copy	1.000000
moving window of type window_type and size window	rolling window arg window win_type min_periods	0.100000
from maps[0] raise keyerror	compat chain	0.034483
return datetimeindex with times	datetime index	0.007042
interpolate values according to	core resampler interpolate method	0.166667
true if this is a valid column	is in table	0.076923
the decimal points if need	io formats	0.027778
table in file node	io	0.003012
add in the	core indexes datetime index ops mixin add	0.333333
with nat-like arg is a passed in	arg	0.018868
or	axis level	0.125000
filtered indexer that doesn't have any missing	core convert from missing indexer tuple indexer axes	0.333333
to parse datetime	core tools parse time	0.125000
scatter plot from two dataframe columns parameters	plotting scatter plot data x	0.125000
a series of columns	core ndframe	0.005051
index	core indexes multi index	0.013158
return	datetime	0.006711
handles preprocessing for cut where we convert passed	core reshape preprocess for cut x	0.200000
totally ordered cartesian product	sort xnull	0.066667
datetime index with custombusinessday as	indexes cdate range start end periods	0.083333
doesn't like	string like	0.111111
the index and its underlying data	core indexes range index	0.021277
ordered	ordered	0.125000
a categorical	core indexes categorical	0.214286
all the various	util all	0.055556
reindexer	reindexer	1.000000
read csv file (discouraged please	frame from csv cls	0.066667
return a new manager with the blocks	manager combine blocks	0.250000
evaluate a python expression as	expr	0.050000
database table into	table table_name index_col coerce_float parse_dates	0.333333
block	io data col create for block cls	0.333333
a new unit if needed	tzdtype new cls unit	0.055556
of casting	assert safe casting	0.125000
return an indexer for a	index get	0.040000
constructor	constructor	0.240000
specialized cython take which sets	take nd arr indexer axis out	0.166667
called after a ufunc	indexes period index array wrap result context	0.041667
read csv file (discouraged please use :func	frame from csv cls	0.066667
concatenation of an	core dtypes concat datetime	0.125000
to infer better dtype for object	core ndframe convert datetime numeric timedelta coerce	0.071429
particular time of day e	time time	0.142857
return a string representation for this	frozen ndarray unicode	0.083333
return the mode s of the dataset	core series mode	0.083333
background null_color for missing values	highlight null null_color	0.125000
info for this name	get info info name	0.333333
need to coerce a scalar to a	index coerce scalar to	0.071429
datetime index with business	core indexes bdate	0.050000
the shape of the	ndim shape	0.111111
string starting at the end	rsplit	0.031250
the symmetric difference of two index	core indexes index symmetric difference other result_name	0.166667
view limits to the nearest multiples of	locator autoscale	0.055556
slice of	categorical block slice slicer	0.083333
strip whitespace including newlines from each string in	strip arr to_strip side	0.333333
to indexer and return them as a	nd indexer axis	0.043478
called after a	series array	0.090909
a boolean if we are a	is	0.005291
sets names on levels warning mutates!	index set names names	0.200000
for valid	valid	0.071429
of non-na/null observations in sparsearray	sparse sparse array count	0.250000
values from this	generic index col convert values	0.333333
in file node	key	0.005051
return the list of row elements from the	io html	0.012987
series extract groups from the	str extract arr	0.066667
given quantile	core series quantile	0.083333
prior to a ufunc	series array prepare result context	0.333333
cartesian product of all possible	index labels shape sort	0.200000
slice locations for input labels	slice locs start end step kind	0.083333
seconds to 'd days hh mm ss f'	plotting format timedelta ticks x pos n_decimals	0.333333
this is called upon unpickling rather than	core indexes new datetime index cls d	0.111111
series columns for	core	0.001326
engineering notation appending a letter representing the	eng formatter	0.125000
return the bool	bool	0.043478
iterate over the blocks collect	reduction f axis consolidate transposed	0.062500
for this object	core indexes	0.004762
array of datetime time the	datetime	0.006711
representation for a particular object	core dtypes extension dtype repr	0.142857
from 1-dimensional ndarray only	index set	0.022727
try to read from a url file	read obj	0.058824
value from 1-dimensional ndarray only use this if	core indexes index set value arr key value	0.038462
getitem defers to the underlying array which	datetime index ops mixin getitem	0.250000
new datacol with the block i	block cls i name cname	0.333333
you	core indexes	0.004762
table	io table	0.125000
see :class	msgpack packb	0.025641
xlwt	xlwt writer	0.500000
provide concatenation of	core dtypes concat datetime to_concat axis typs	0.142857
of	index set value	0.023810
data to	to	0.006329
try to parse a ndarray like into a	io json parser try convert data	0.500000
1-dimensional ndarray only use	value arr	0.023810
(if copy=true return a new copy)	core categorical block astype	1.000000
init self from ndarray or list of lists	data frame init matrix data index columns	1.000000
lookup of value from 1-dimensional ndarray only use	core indexes categorical index get value	0.100000
parse the raw data into	parser parse raw data rows	0.250000
target time zone	tz axis	0.500000
get the category labels deprecated	get labels	0.500000
index's frequency if	ndframe tshift periods freq	0.333333
v should be inserted in a	frozen ndarray searchsorted v	0.033333
an positional indexer cannot enlarge	ndframe indexer has valid positional setitem indexer indexer	0.052632
infer the fill value for the nan/nat	infer fill value val	0.500000
csv file (discouraged please use :func pandas	core data frame from csv cls path	0.066667
wrap comparison operations to convert timedelta-like to	td index cmp opname nat_result	0.055556
panel or	core panel	0.019231
given a tuple of	index get	0.040000
pp	pp	1.000000
of bytes in the	core indexes multi index nbytes deep	0.052632
to the underlying array which	core indexes datetime index ops mixin	0.029412
elements of v	v	0.026316
extended euclidean algorithms to solve bezout's identity	range index extended gcd a b	1.000000
manager for running code that expects to	util assert produces warning expected_warning filter_level clear	0.071429
attributes e	attributes attrs	0.166667
a fixed frequency timedelta index	indexes timedelta range start end periods	0.083333
fast transform path for	group by transform fast	0.333333
equivalent to shift without copying	shift	0.083333
get the rows of a dataframe	data frame	0.011429
and 'kwargs' should be empty because all	func method args kwargs	0.142857
length	index	0.002004
occupying requested label default to specified missing	sparse sparse series get label default	0.083333
of	reshape crosstab	0.066667
repeat elements of a categorical	core categorical repeat repeats	1.000000
or by a series	groupby by axis	0.045455
post process for each axes	plotting mplplot post plot logic	0.333333
value at the given quantile	quantile	0.058824
string starting at the end of the string	rsplit arr	0.037037
wrapper function for series arithmetic operations to	arith method series op name	0.333333
an xpath expression to simulate bs4's	xpath expr	0.166667
set of unique elements of arr1 and	contents arr1	0.066667
tree-like object that can be used to	frame parser build	0.014706
create an index/multindex with given dimensions levels names	names	0.038462
replace extra whitespace inside of	io remove whitespace s regex	0.200000
packed object return an	packed object_hook	0.200000
are index sliceable then return my slicer otherwise	core convert to index sliceable obj	0.083333
select values between particular	core indexes datetime index indexer between	0.125000
we do need a multi reindex	ndframe needs reindex multi axes	0.333333
the info for this indexable with the key/value	io index col update info info	0.090909
return resolution str	tseries resolution get	0.333333
used to iterate over the dom	build doc	0.125000
compat with	index sort levels monotonic	0.333333
of v	v	0.026316
intervalindex from a 1d array of interval objects	indexes interval index from intervals cls data name	0.333333
sparsifying is not supported for panel objects and	core panel to sparse	0.037037
types and ranges supported by stata	cast to stata types	0.500000
locator based on a	locator get locator	0.062500
the sparsearray only the actual sparse	sparse sparse	0.034483
to table in file node	hdfstore append	0.016667
a series to the	series	0.006757
nice str repr of our	core window unicode	0.071429
for making this object picklable	setstate state	0.333333
called via the 'numpy' library	with convert convert	0.055556
of python datetime date objects (namely the	core indexes datetime index	0.007634
subset rows or columns of dataframe according	core ndframe filter items like regex axis	0.166667
downsample	datetime index resampler downsample how	0.200000
from maps[0] raise	compat chain	0.034483
object that can	io html frame parser	0.012195
check	like	0.058824
to convert timedelta-like to timedelta64	td index cmp	0.055556
elements of v should be inserted in a	v	0.026316
convert to our native types	to native types slicer na_rep	0.250000
number of nanoseconds (>= 0	timedelta index nanoseconds	0.066667
names to	names	0.038462
values from this	convert values	0.333333
putmask that potentially upcasts the result	core dtypes maybe upcast putmask result mask other	0.200000
use this if	key	0.005051
url	url	1.000000
only	index set value	0.023810
node must already exist	io	0.003012
valid other evaluate or raise typeerror	numeric binop other op opstr	0.500000
convert to our native types format slicing	block to native types slicer na_rep float_format decimal	0.250000
of entries in index	util make custom index	0.250000
1-dimensional ndarray only use this if	set value arr key	0.023810
binners	resampler set binner	0.333333
substrings	start stop step	1.000000
function to my values return	func mgr	0.083333
this if you	set	0.012195
length slice	slice obj l	0.500000
at the new freq essentially	core resampler asfreq fill_value	0.066667
checks that path's extension	extension	0.111111
value is valid	value	0.005155
called after	core indexes	0.009524
a new	new	0.058824
nat-like arg is a	arg errors	0.026316
return a boolean whether this axes needs validation	core ndframe indexer should validate	0.166667
an intervalindex from a 1d array of	index from intervals cls	0.125000
item of the	core	0.001326
to handle na filling of take	indexes multi index assert take fillable values indices	0.250000
that can	html	0.011765
the indexer fill with the	nd indexer allow_fill	0.050000
method to	method cls name func	0.076923
from 1-dimensional ndarray only use this if	value arr key	0.023810
index with target's values (move/add/delete values	core indexes multi index	0.013158
setup our	core resampler	0.200000
and drop from frame raise keyerror if	core ndframe pop	0.200000
incoming data can be represented as uints	indexes uint64index assert safe casting cls data subarr	0.333333
subject string in the series extract groups from	core str extract frame arr	0.047619
append to table in file node must already	append	0.012987
check following rows whether row should be	row ilevels i rows	0.500000
raised	util assert raises	0.200000
the td elements from a row	io html frame parser parse td obj	0.083333
a categorical if	categorical	0.009615
color background	formats styler background gradient s cmap low high	0.142857
frequency guess generated by infer_freq	index ops mixin inferred freq	0.250000
we do need a multi reindex this is	core series needs reindex multi axes method level	0.333333
axis	axis method	0.250000
block manager from a dataframe of	to manager sdf columns index	0.052632
signature	signature	1.000000
to construct this type from a string raise	dtype construct from string cls string	0.166667
boolean if we if the passed type is	dtypes interval dtype is	0.066667
a row cross-section from the sparsedataframe as	core sparse sparse data frame xs key	0.166667
we have a	categorical	0.009615
preserve dtype if	putmask smart v m n	0.055556
left-join except that	left right on left_on	0.058824
checking function of type t or tuple	type t	0.083333
to : write out the	write	0.017857
indexer	nd indexer	0.045455
casting data from some accepted dtype to the	indexes numeric index assert safe casting cls data	0.047619
to the underlying array which by-definition	ops mixin	0.033333
in file node	hdfstore append key	0.016667
a string-like that is	string array data	0.038462
html to dataframe parser that uses	frame parser	0.025000
construct and returns axes	ndframe construct axes	0.333333
ndarray repeat	core indexes datetime index ops mixin repeat repeats	0.333333
a new sparsearray from	sparse sparse data	0.076923
with nat-like arg is a passed in	arg errors	0.026316
is unaltered	indexes datetime index normalize	0.125000
the we have a dtype compat for	name freq	0.083333
gets called after	core indexes period index	0.034483
already exist and be	append key	0.016667
win_type	win_type	0.833333
append to	append	0.012987
perform the reduction type operation	index ops mixin reduce op	0.083333
fast lookup of	indexes	0.004651
satisfy the boolean criterion specified by	ndframe group by filter	0.200000
pattern or regular expression	pat flags	0.052632
lookup of value from 1-dimensional ndarray only	core indexes datetime index get value series key	0.071429
alter index and / or columns using input	mapper axis copy inplace	0.055556
numexpr condition and filter	computation expr evaluate	0.200000
expanding	stats expanding	1.000000
to deprecate a keyword argument of a	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
wrap long strings	wrap arr	0.250000
the manager	mgr data index columns dtype	0.333333
/ or columns using input	copy inplace	0.055556
the built up styles to	formats	0.031250
a string-like that is object	io convert string array data encoding	0.038462
of the (attr formatted_value)	core indexes index format attrs	0.142857
pprinter for iterables you should probably use pprint_thing()	io formats pprint dict seq _nest_lvl max_seq_items	0.333333
the underlying data which is	index values	0.111111
series we by	series group by	0.142857
apply aggregation function or functions to resampled	core resampler aggregate arg	0.250000
is index for series columns for dataframe major_axis	core ndframe iteritems	0.055556
datetime time the time part of the	core indexes datetime index time	0.166667
the float values converted into strings	io formats float array	0.055556
memory usage of my	range index memory usage deep	0.200000
function for	func	0.035714
we are index sliceable then	index sliceable obj key	0.083333
td elements from a	frame parser parse td obj	0.083333
dtype	io dtype	0.333333
take a string-like that is object dtype	convert string array data	0.038462
form the union of two index objects	index union other	0.037037
use this if	core indexes index set value	0.023810
fully reindex-output to the levels	core data frame group by reindex output result	0.045455
block as	block	0.008197
evaluate the block return result block from	core block eval func other	0.333333
indexer input array to the smallest	indexer categories	0.500000
index return new dataframe with labeling information	data frame	0.005714
a	html frame	0.014706
via the 'numpy' library the	compat numpy validate take with convert convert args	0.055556
validate that an positional indexer cannot enlarge its	valid positional setitem indexer indexer	0.052632
more this is index	core	0.001326
element pandasobject	ndframe	0.005025
provide resampling when using a timegrouper	core group by resample rule	0.166667
if we define an builtin	core base grouper is builtin	1.000000
necessary for making this object picklable	sparse array setstate state	0.333333
a subclass of styler with	io formats styler from	0.076923
return slice of panel along minor axis parameters	core panel minor xs key	0.166667
a sparseseries from a scipy sparse coo_matrix	sparse sparse series from coo cls a dense_index	0.333333
a tz attribute	datetime	0.006711
instances of all the classes which represent time-seires	all timeseries index	0.333333
endian	endian	1.000000
parse time strings to time	tools to time	0.125000
a metaclass	add metaclass metaclass	0.125000
categorical adjusted for groupby	core indexes categorical index codes for groupby	0.333333
along major axis parameters	major xs key	0.500000
panel to	panel to	0.027027
long-format data to wide generalized inverse of	lreshape data groups dropna	0.333333
index return new dataframe with labeling information	core data frame	0.005917
creates a new sparsearray from the	core sparse sparse data frame sanitize column key	0.333333
operations to convert datetime-like to	indexes period index cmp opname nat_result	0.066667
input data_columns and min_itemize and create	columns data_columns min_itemsize	0.200000
outputs rounded and formatted percentiles	io formats format percentiles percentiles	1.000000
to indexer and return them as a	nd indexer	0.030303
encode input values as an enumerated type	core factorize values sort	0.111111
comparison operations to convert timedelta-like	indexes td index cmp opname nat_result	0.055556
number format	number format	0.333333
array of whether each index value is found	index ops mixin isin values	0.083333
shade	formats	0.031250
general index and	indexes index validate names	0.066667
the node with the key	get node key	0.083333
draw histogram of the dataframe's series	hist frame data column by	0.200000
passed a list-like indexer return	index convert list indexer keyarr kind	0.066667
best locator	date locator get locator	0.062500
maximum values along an axis	indexes datetime index ops mixin argmax axis	0.250000
as a sparse array	sparse series as sparse array	0.250000
value occupying requested label default to specified missing	get label default	0.083333
iter1 iter2 iterables that	assert copy iter1 iter2	0.166667
from one of the stata	stata	0.022222
moving window of type window_type on the	window mean how	0.166667
create an indexer like _name in the	create indexer cls name indexer	0.166667
the handle if	io	0.003012
index	indexes datetime index ops mixin	0.058824
whether each index value is found in the	index ops mixin isin	0.083333
take values according to	take nd	0.095238
to its values attribute if it	core series	0.008000
checks whether the frame	frame	0.009091
values as an enumerated type	core factorize values sort	0.111111
provides a	datetime	0.006711
a "pivot" table) based on	pivot index columns	0.111111
date in xport format	io sas parse	0.066667
extension against the writer's supported extensions	io excel writer check extension cls ext	0.333333
a 1d array return an array	util hash array vals	0.083333
exception that is thrown	parser	0.008000
that can be used to iterate over	io html frame parser	0.012195
reduction type operation if we can	index ops mixin reduce op name axis	0.083333
tolerance	tolerance	1.000000
maps[0] raise	chain	0.031250
update index attributes e	indexes index maybe update attributes attrs	0.200000
ftypes	ftypes	0.217391
method to handle na filling of take	indexes multi index assert take fillable values	0.250000
from the	core	0.001326
ndarray only use	core indexes	0.004762
(attr formatted_value)	ops mixin format attrs	0.142857
and other to int64 with null values converted	args values other	0.142857
duplicate each string in the series/index by	core str repeat arr	0.045455
form the union of two multiindex objects sorting	index union other	0.037037
date belongs to a leap year	is leap year	0.142857
the reduction type operation if we	ops mixin reduce op	0.083333
convert string 'r' to a timedelta object	coerce scalar to timedelta type r unit	0.500000
of bytes in the underlying data	indexes multi index nbytes deep	0.052632
a column by inferring dtype	data name data use_dtypes convert_dates	0.500000
must be sparseseries or	sparse maybe to	0.333333
of subplots	subplots	0.076923
which each value of x	x	0.043478
manage style	plotting mplplot apply style colors colors kwds col_num	0.142857
packed bytes see :class packer for	io msgpack packb	0.025641
read csv file	csv	0.057143
to table in file node must already	io hdfstore append	0.016667
or columns of dataframe according to labels in	axis	0.011364
exist and be table	append	0.012987
csv file (discouraged please use :func pandas	csv cls	0.066667
to tag	replacer x	0.125000
read csv file (discouraged please use :func	series from csv cls	0.066667
v should be inserted in a	ndarray searchsorted v	0.033333
scipy sparse	core sparse sparse data frame	0.058824
a date in xport format return	sas parse	0.066667
index objects contain the same elements	datetime index	0.007042
from maps[0] raise keyerror is maps[0]	compat chain map	0.032258
to ensure that they are valid stata	stata	0.022222
load a feather-format object from the	read feather	0.083333
list of	tolist	0.071429
for	comp method	0.333333
that we have	validate	0.027778
rowlabels	rowlabels	1.000000
the data & release the	io data col take data	0.111111
read csv file (discouraged	core data frame from csv cls path	0.066667
pack object o and return packed bytes	msgpack packb o	0.055556
to the block we must	core non consolidatable mix in	0.090909
starting at	rsplit	0.031250
render a dataframe to a tabular environment table	data frame to latex buf columns col_space header	0.111111
return a boolean	core indexes is	0.166667
the flattened values of the	indexes index ravel order	0.037037
that left and right panels are equal	util assert panelnd equal left right check_dtype check_panel_type	0.333333
returns the float values converted into	io formats float array formatter get	0.055556
draw histogram of	plotting hist frame data column by	0.200000
to read from a url	io read obj	0.058824
in panel to a separate excel	core panel to excel path na_rep engine	0.111111
return an object with matching indices	ndframe reindex like other method copy limit	0.111111
explict type promotion and	dtypes maybe upcast values fill_value dtype copy	0.166667
values	indexes multi index get level values	0.500000
of value from 1-dimensional ndarray only	arr key value	0.038462
index with custombusinessday as	indexes cdate range start end periods	0.083333
cached item item represents a positional indexer	ndframe iget item cache item	0.090909
return base freq and stride info	tseries base and stride freqstr	0.333333
return the mode s of the	series mode	0.083333
a nice str repr	window unicode	0.071429
block return result block s from the	core block where other cond align raise_on_error	0.066667
write out the binary feather-format for	to feather fname	0.083333
validate that we have a astypeable to categorical	is categorical astype dtype	0.333333
type window_type and size window on	rolling window arg window win_type min_periods	0.100000
of to_match into values	core match to_match values na_sentinel	0.333333
value from 1-dimensional ndarray only use	period index get value	0.071429
group return result as series or by a	by axis	0.045455
index or ndarray filled	datetime index	0.007042
is called upon unpickling rather than the	datetime index cls d	0.111111
an intervalindex	indexes interval index	0.062500
representing the totally ordered	xnull	0.083333
can safely be cast to an integer	integer name val min_val	0.500000
get integer location	indexes datetime index get loc	1.000000
datetimeindex with times to midnight length is	index	0.002004
timegrouper and return our	resample obj kind	0.083333
have a astypeable to	astype dtype	0.166667
resolve	core computation scope resolve	0.166667
dataframe to	formats data frame formatter to	0.083333
single dict created from the	fromkeys cls	0.333333
minimum value	ops mixin min	0.111111
use	value arr	0.023810
form the union of two index objects and	index union other	0.037037
are index sliceable then return	core convert to index sliceable	0.083333
singular 'name' parameter for general index	indexes index validate names name	0.066667
stringified and numeric for these values	stringify na values na_values	0.333333
convert from datetime to sif http	io datetime to	0.125000
groupby implementation	resampler groupby	0.166667
create a new	tzdtype new	0.333333
update index attributes e	index maybe update attributes attrs	0.200000
return new dataframe with labeling information in the	core data frame reset	0.027778
the maximum by shading	max subset color axis	0.166667
a tree-like object that can be	html frame	0.014706
be used to iterate over the	frame	0.009091
returns the float values converted into strings	io formats float array formatter get	0.055556
nat which has the same length	mixin nat new	0.050000
prior	prepare	0.071429
in hdfstore parameters	hdfstore put	0.333333
datetimelike properties of	period properties	0.052632
form the union of two multiindex objects sorting	multi index union other	0.066667
provides	datetime index	0.007042
from other to	other	0.013514
box	box	1.000000
value from 1-dimensional ndarray only use this	core indexes datetime index get value	0.071429
return the block manager from	manager sdf columns index	0.052632
left and right index are equal	assert index equal left right exact check_names	0.333333
sets names on levels warning mutates!	multi index set names names level	0.200000
union of two index objects	core indexes range index union other	0.083333
if the process of casting data from	numeric index assert safe casting cls data	0.047619
already exist and be	hdfstore append	0.016667
lookup of	set value arr	0.023810
with custombusinessday as the	cdate range start	0.333333
object that can be used to iterate	io html frame parser build	0.014706
dtype) in	ndframe	0.005025
multi reindex	reindex multi axes method	0.500000
dataframe as	core data frame	0.005917
this	key	0.010101
my values cols	io table values cols	0.200000
that left and right	left right exact	0.333333
the block	block cls	0.333333
a	wrap result	0.068182
guarantee the shape of the values to	core block shape values ndim shape	0.083333
object	ndframe	0.015075
construct this type from a	dtype construct from string cls	0.166667
mapping of how to create the grouper indexers	grouper obj	0.142857
blocks along axis=0	slice take blocks ax0 slice_or_indexer fill_tuple	0.500000
return a new block	core sparse block	0.250000
select values between	index indexer between	0.125000
axis with optional set logic along the	core reshape concat objs axis join join_axes	0.333333
compute a simple	reshape crosstab index	0.066667
convert argument to timedelta parameters	core tools to timedelta arg unit	0.500000
must already	value format	0.016667
see :class	io msgpack	0.025000
holidays between start_date and	abstract holiday calendar holidays	0.166667
take values according to indexer	take nd indexer	0.181818
or by a	groupby by axis	0.045455
array must be sparseseries or sparsearray	sparse maybe to sparse array	1.000000
called via the 'numpy' library the third	with convert convert	0.055556
frequency datetime index with business	core indexes bdate	0.050000
potentially upcasts	dtypes maybe upcast	0.500000
trims zeros and decimal points	core indexes trim front strings	1.000000
are index sliceable then return my slicer otherwise	to index sliceable	0.083333
our	core resampler set	0.333333
node with the key or none if it	io hdfstore get node key	0.083333
determine if each	str match arr pat	0.166667
resolve a variable	computation scope resolve	0.166667
ordered multiindex	indexes multi index	0.013158
wrapper function for	method	0.133333
from sif to	elapsed date to	0.250000
return the op string for this termvalue	bin op generate v	0.250000
intervalindex from	index from	0.090909
return if each value is nan	interval index isnan	1.000000
an item pair	chain map popitem	0.055556
original type	dtype	0.010989
a curve with holidays between	calendar holidays start end return_name	0.066667
a series	sparse series	0.250000
a sparseseries from a scipy sparse coo_matrix	core sparse sparse series from coo cls a	0.333333
options grouped by	options	0.041667
compute boolean array of whether each index	index	0.002004
sizes	sizes	1.000000
take optional positional	optional	0.050000
each index value	core indexes datetime index ops	0.034483
cast	parser base cast types	1.000000
of value	value arr key value	0.038462
or dtype	dtype	0.010989
a matrix of	matrix	0.076923
ndarray filled with nat which has	mixin nat new	0.050000
infer better dtype for	convert datetime numeric timedelta coerce	0.071429
for an s3 s3n or s3a url	io is s3 url url	0.250000
offsets index to beginning of period frequency	beg apply index i freq	1.000000
wrap comparison operations to convert timedelta-like to timedelta64	core indexes td index	0.055556
file node must already exist and be table	io hdfstore append	0.016667
from 1-dimensional ndarray only	arr key	0.023810
unit specifed fields from the arg dataframe	from unit mappings arg errors	0.500000
our native types	native types slicer na_rep quoting	0.200000
block	core block getitem block	0.250000
run the same function multiple times in parallel	util test parallel num_threads kwargs_list	1.000000
read csv file (discouraged please use :func	from csv cls path sep parse_dates	0.066667
the mode s	data frame mode	0.333333
compute a simple cross-tabulation of	core reshape crosstab index	0.066667
a style_dict to an openpyxl style object	convert to style cls style_dict	0.166667
validates that we have good categories	cls categories fastpath	0.250000
get	ndframe	0.005025
from datetime to sif http	io datetime to	0.125000
converts a style_dict to an xlwt style object	xlwt writer convert to style cls style_dict num_format_str	0.500000
sample	pairwise	0.166667
according to indexer and return them	nd indexer axis	0.043478
update index attributes e g freq depending on	core indexes datetime index maybe update attributes attrs	0.200000
close it if we opened it	io to hdf path_or_buf key	0.166667
type	table type	0.055556
update index attributes e g freq	indexes index maybe update attributes	0.200000
column and index	value index col	0.666667
tuples	tuples cls data closed	0.250000
the requested level	level	0.043478
return true if this	is in	0.076923
to write text representation of object to	to	0.006329
a	series array wrap	0.100000
of	period index	0.024390
stata binary	data frame to stata fname	0.200000
if we are index sliceable then return my	index sliceable obj key	0.083333
boolean whether i can attempt conversion to	indexes is convertible to	0.333333
index -> {(idx_row idx_col): bool})	io formats is visible idx_row idx_col lengths	1.000000
attempt to construct this type from a	dtype construct from string cls	0.166667
'name' parameter for general index and	core indexes index validate	0.066667
the diff of the	diff n axis mgr	0.111111
read csv file (discouraged please	frame from csv cls path header	0.066667
if it has one	series	0.006757
match of regular expression	flags expand	0.200000
validates that we	categorical validate ordered cls	0.055556
in the series extract groups	core str extract frame arr	0.047619
length	indexes datetime	0.011494
provide a nice str repr of our	core window unicode	0.071429
have a astypeable to categorical	categorical astype dtype	0.333333
an iterator over the boxed values	datetime index iter	0.250000
shape of the values to	shape values ndim shape	0.083333
and index parameters	frame set value index	0.166667
of tuples	tuples	0.111111
to deprecate a keyword argument of	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
of casting data from	index assert safe casting cls data	0.047619
a string representation for	core indexes index unicode	0.083333
file node	append key value	0.016667
is called via the 'numpy' library	numpy validate take with convert convert args kwargs	0.055556
to indexer and return them as	nd indexer	0.030303
the same dimensions as the original	ndframe	0.005025
we are index sliceable then return	core convert to index sliceable	0.083333
used when a manipulation result has	core ndframe constructor	0.055556
unicode normal form for the	string methods normalize form	0.066667
init self from ndarray or list of lists	sparse data frame init matrix data index columns	1.000000
into a list of	frame parser	0.012500
series/index	str repeat arr	0.200000
values according to indexer and return them as	indexer	0.018349
ordered data	ordered	0.017857
lookup	value arr	0.023810
blocks collect and create	axis consolidate transposed	0.062500
update index attributes e g freq depending on	datetime index maybe update attributes	0.200000
extension against	excel writer check extension cls	0.125000
dataframe and	core	0.001326
moving window of type window_type and size window	arg window win_type min_periods	0.100000
function to determine if dtype	n method dtype	0.250000
handles preprocessing for cut where	core reshape preprocess for cut	0.200000
table	io hdfstore append key value format	0.033333
get	timedelta index get	0.500000
lookup	indexes index set	0.023810
we by definition have do not have	io formats datetime64formatter format strings	0.090909
writer	writer	0.777778
are passed a list-like indexer return the	indexes interval index convert list indexer keyarr kind	0.066667
have good categories	core categorical validate categories cls categories fastpath	0.250000
number	range	0.047619
nrows ncols - number	util make custom dataframe nrows ncols	0.250000
singular 'name' parameter for general index	indexes index	0.007353
index value is found	datetime index ops mixin isin values	0.083333
read csv file	data frame from csv	0.066667
a malformed	malformed msg row_num	0.100000
compute pairwise correlation	frame corr method min_periods	0.500000
table in file	key value format	0.016667
index objects contain	core indexes float64index	0.166667
try to preserve dtype	putmask smart v m n	0.055556
the intersection of two index	index intersection other	0.052632
columns for dataframe and major_axis for	core ndframe	0.005051
memory usage	range index memory usage deep	0.200000
rolling statistical measure using supplied function designed	rolling apply func name window center	0.333333
n	n	0.272727
head	head	0.833333
datetime string	time string	0.500000
new sparsedataframe applying func to each columns	core sparse sparse data frame apply columns func	0.500000
npy_maxargs 32	computation result type many	0.142857
only	indexes index set value arr key	0.023810
is an	dtype is	0.032258
representation of object to	to	0.006329
using the interpolate machinery	block interpolate with fill method axis inplace	0.200000
fillna but using the interpolate machinery	block interpolate with fill method axis inplace	0.200000
return the cached item item represents a positional	core ndframe iget item cache item	0.090909
provide concatenation of an	core dtypes concat datetime to_concat axis typs	0.142857
values values	values	0.008547
construct concatenation plan for given block manager and	core get mgr concatenation plan mgr	1.000000
query	query	1.000000
apply we are stripping all of	core group by mixin apply func name	0.050000
func	func	0.107143
support sqlite connections fallback without sqlalchemy	sqlite database	0.500000
the view limits	series date locator autoscale	0.055556
an index	core indexes index	0.007042
already exist and be	hdfstore append key value format	0.016667
to apply	by mixin apply func	0.050000
the group	core series group by	0.142857
read csv	core series from csv cls path	0.066667
path's extension against the writer's supported extensions	io excel writer check extension cls ext	0.333333
location parameters	loc	0.040000
return a list of the underlying data	indexes datetime index ops mixin tolist	0.333333
parameter value	value	0.005155
to panel	panel update other	0.500000
remove	compat chain map	0.032258
function or functions	core ndframe rename	0.333333
update index attributes e	indexes datetime index maybe update attributes	0.200000
data	range index	0.021739
ensure that we are re-localized	ensure localized result	1.000000
of value from 1-dimensional ndarray	core indexes period index get value series	0.071429
method to class python 2 and python 3	method cls name	0.076923
append	append	0.090909
cast	timestamp freq	1.000000
the styler removing any previously applied styles	formats styler clear	0.333333
read sql query or	io read sql sql con index_col coerce_float	0.166667
two indices overlap add suffixes to	core items overlap	0.062500
that can be	build	0.013514
stata date formats to a type in type_map	to stata type fmt	1.000000
rsuffix	rsuffix	1.000000
to table in file node	append key value	0.016667
a new block (of a possibly different	block setitem indexer	0.066667
that left and right	left right exact check_names	0.333333
which produces a datetimeindex	indexes datetime	0.011494
return the	core indexes multi	0.014493
the size	itemsize	0.027027
index and / or columns using input	mapper axis copy inplace	0.055556
csv file (discouraged please use :func pandas	csv	0.057143
panel to a separate excel sheet parameters	core panel to excel path na_rep engine	0.111111
x in y if possible	in x y	0.047619
update index attributes e g freq	core indexes timedelta index maybe update attributes attrs	0.200000
apply we	mixin apply	0.050000
csv file (discouraged please use :func	core data frame from csv cls path header	0.066667
delimiter string starting at the end of	rsplit arr	0.037037
update index attributes e g freq depending	timedelta index maybe update attributes	0.200000
common post process for each axes	plotting mplplot post plot logic common	0.333333
file node must already exist and be	value	0.005155
expression	eval expr	0.083333
the 'numpy' library the	with convert convert	0.055556
fast lookup of value from 1-dimensional ndarray only	value arr key value	0.038462
a list of the	tolist	0.071429
public verson of axis assignment	axis axis labels	1.000000
to construct this type from a string	interval dtype construct from string cls string	0.166667
for temporarily setting a locale	util set locale new_locale lc_var	0.250000
in panel to a	panel to	0.027027
return whether i am an indexed column	index col is indexed	0.200000
1-dimensional ndarray only	indexes	0.004651
invoked by str df in both py2/py3	dtypes extension dtype str	0.250000
read csv file (discouraged please use :func pandas	csv cls path header sep	0.066667
detect terminal size and	util get terminal size	0.166667
return index with requested level removed if multiindex	multi index droplevel level	0.333333
you	core indexes index set	0.023810
is found	mixin isin values	0.166667
coerce any object types to better types return	core object block convert	0.083333
cases to get	get	0.007143
that an positional indexer cannot enlarge its target	indexer has valid positional setitem indexer indexer	0.052632
positional	has valid positional setitem	0.250000
given an interval or intervalindex return	get	0.007143
styles	io	0.003012
string-like that is object dtype and	string array data	0.038462
format as dataframe	to frame	0.125000
packb	packb	0.113636
convert the object to a json string	core ndframe to json path_or_buf orient date_format double_precision	0.500000
array of python datetime date objects (namely the	core indexes datetime index	0.007634
interpolate values according to different methods	resampler interpolate method	0.166667
a column	name data	0.250000
as elements in the	core	0.001326
from 1-dimensional ndarray only use this if	value arr	0.023810
index's	ndframe tshift periods	1.000000
compute count of group excluding missing values	frame group by count	0.500000
and return slice points for level 0 assuming	multi index bounds	0.166667
read sql query or database table into a	io read sql sql con index_col coerce_float	0.166667
string 'r' to a timedelta object	tools coerce scalar to timedelta type r unit	0.500000
dataframe with	core data frame reset	0.027778
csv file (discouraged please use :func	frame from csv	0.066667
reshape data (produce a	core data frame	0.005917
return the header of a	io html frame parser parse thead	0.111111
packer	io msgpack packb	0.025641
ufunc needs additional handling	index array wrap result context	0.034483
method to handle na filling	fillable	0.095238
to take optional positional	optional	0.050000
using the interpolate machinery	interpolate with fill method axis inplace	0.200000
on where	where start	1.000000
passed type is an actual dtype that	interval dtype is dtype cls dtype	0.142857
given a date in xport format	sas parse	0.066667
forward to the	core sparse sparse series iter	0.250000
result block s from the result	block where other cond align raise_on_error	0.066667
on 3 columns	index columns values	0.037037
to returning	inplace verify_integrity	0.333333
after a ufunc needs	result context	0.027027
return appropriate class of series	get series result type result	0.250000
simple cross-tabulation of	core reshape crosstab index	0.066667
this	indexes index set	0.023810
take a string-like that is object dtype and	string array data	0.038462
we by definition have	io formats datetime64tzformatter format strings	0.166667
intervalindex from a 1d array of	from intervals	0.125000
info_axis	ndframe dir additions	1.000000
force all buffered modifications	hdfstore flush fsync	0.200000
float_format	float_format	1.000000
to table in file node must already	append key	0.016667
return datetimeindex with times to midnight length	core	0.001326
:meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace	0.333333
construct an intervalindex from a 1d array	index from intervals cls data name copy	0.125000
be a single	new align	0.166667
add in the numeric add/sub methods to disable	numeric methods add sub disabled cls	1.000000
ndarray filled with nat which has the same	nat new	0.050000
statement that create a table reflecting the	create table setup	0.066667
datetimeindex from one time zone to	datetime index	0.007042
update index attributes e g freq depending	index maybe update attributes attrs	0.200000
a new unit if needed otherwise return from	core dtypes datetime tzdtype new cls unit	0.055556
and 'kwargs' should be empty except for allowed	name args kwargs allowed	1.000000
if we do need a multi reindex	core ndframe needs reindex multi axes method	0.333333
the aggregators	core selection mixin aggregate arg	0.166667
subset of rows if n	n dropna	0.166667
try several cases to get	get index name	0.200000
use this if you	value arr key	0.023810
return number of unique elements in the object	ops mixin nunique dropna	0.083333
of v	core indexes frozen ndarray searchsorted v	0.033333
*this is an	index	0.004008
the other	core	0.001326
object is list-like	dtypes is list like	1.000000
read csv file (discouraged please use :func	from csv cls path sep	0.066667
that is datetimelike (e	core indexes maybe to datetimelike	0.142857
type	computation is type	0.125000
compute covariance with series excluding missing values	core series cov other min_periods	0.200000
the categorical to be	core categorical as	0.333333
for more this is	core	0.001326
true if hash obj will succeed false otherwise	core dtypes is hashable obj	1.000000
return the number of bytes in the	core indexes multi index nbytes	0.052632
given a tuple of slices/lists/labels/boolean indexer to	get	0.007143
decorator to add default implementation of ops	core computation add ops op_classes	0.333333
sets names on levels	core indexes multi index set names names level	0.200000
and return the op string for this	computation bin op generate	0.066667
both py2/py3	dtypes extension dtype	0.333333
nanoseconds (>= 0 and less than 1 microsecond)	indexes timedelta index nanoseconds	0.066667
read csv file (discouraged please	from csv cls path sep	0.066667
the index's frequency if	core ndframe tshift periods freq axis	0.066667
create a new unit if needed otherwise return	new cls unit	0.055556
single block and are a	core block	0.010870
index to be returned from apply if as_index=true	group by index with as index b	1.000000
the index or maximum along an axis	core indexes datetime index ops mixin max axis	0.333333
take values according to	take	0.060606
called via the 'numpy' library the third	with	0.034483
or boolean mask for requested label or tuple	method	0.033333
where elements of v should be	v	0.026316
table in file node must already	key value	0.011628
http //www stata com/help cgi?datetime	stata elapsed vec dates fmt	0.250000
filled with nat which has the	ops mixin nat new box	0.050000
sum of non-na/null observations in	count	0.055556
already exist and	hdfstore	0.014925
take a string-like that is object	io convert string array data encoding	0.038462
re-evaluate the	and	0.066667
validate that	core computation validate	0.500000
columns excluding na/null	data frame	0.005714
get the values view mask dtype	core get values values	0.125000
the indexer fill with the fill_value	indexer allow_fill fill_value	0.250000
putmask that potentially upcasts the result	core dtypes maybe upcast putmask result mask	0.200000
pick the best locator based on a distance	auto date locator get locator dmin dmax	0.250000
business month	business month end	0.333333
number of bytes in the underlying data	indexes multi index nbytes	0.052632
get test result and	computation get test result	0.250000
int64 with null values converted	values	0.008547
passed dtype	dtype dtype	0.100000
dataframe the levels in	data values index	0.066667
reindex	core indexes categorical index reindex	1.000000
return valid other	validate for numeric binop other op	0.500000
attempt to infer better dtype for	ndframe convert datetime numeric timedelta coerce	0.071429
return a	core get	0.038462
info	data frame info	0.500000
allows a decorator to take optional positional	util optional args decorator	0.083333
higher freq	cls value freq	0.083333
for each level	core indexes multi index	0.013158
for running code that expects	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
needs	result	0.016393
installed version of openpyxl is supported	is compat major_ver	0.111111
that we	validate ordered	0.055556
apply the function to my values return a	apply func mgr	0.166667
swap levels i and j in	swaplevel i j	0.222222
check if we're inside an an ipython zmq	in ipython	1.000000
of the underlying data	indexes datetime index ops mixin	0.029412
return an axes dictionary for the passed axes	axes dict from axes	0.333333
my plane axes indexes these are already	plane axes index	1.000000
with custombusinessday as the	cdate range start end periods	0.333333
wrapper function for series arithmetic operations	core comp method series op	0.333333
in order to correctly handle	core resampler convert obj obj	0.166667
*this is an internal non-public method*	index is dtype compat other	0.500000
checks	check	0.300000
return block for	core block	0.010870
1-dimensional ndarray only use this if	index set	0.022727
only	index set value arr key	0.023810
to read from	io read	0.038462
for making this object picklable	core categorical setstate state	0.333333
index value is	datetime index ops	0.034483
compute count of group excluding missing	group by count	1.000000
fast path for getting	single block manager fast	0.250000
from panel holding passed axis constant	panel dropna axis how inplace	0.200000
at particular time	ndframe at time time	0.066667
a feather-format object from the	io read feather	0.083333
block	make block	0.166667
index with day	indexes period	0.034483
capture stderr in a buffer so	capture stderr f	0.055556
create / validate metadata	io table validate metadata existing	1.000000
parse	tools parse time	0.125000
specialized intersection for datetimeindex objects may be	core indexes datetime index intersection other	0.142857
view limits to the nearest multiples	series date locator autoscale	0.055556
the process of casting	numeric index assert safe casting	0.125000
the reindex for	reindex	0.062500
1-dimensional ndarray	indexes index set value arr key	0.023810
parse the raw data	parse raw data rows	1.000000
each element in the series/index	core str get arr	0.142857
reset	util reset	0.500000
not satisfy the boolean criterion specified by func	core ndframe group by filter func	0.250000
out the binary feather-format for	feather fname	0.083333
fillvalue for a	fillvalue	0.071429
string-like that is object dtype	io convert string array data	0.038462
gets the mode s	data frame mode	0.333333
a meta data array to the key as	key values	0.142857
sql	sql sql con	1.000000
ndarray of the flattened values of the	indexes index ravel order	0.037037
installed version of openpyxl is	is compat major_ver	0.111111
manage style and color based on column number	mplplot apply style colors colors kwds col_num	0.142857
ndarray only use this if	core indexes index set	0.023810
when a manipulation result has the same	core ndframe constructor	0.055556
define an builtin function for this	builtin func	0.200000
new multiindex from	core indexes multi index	0.013158
a list of tuples of the (attr formatted_value)	format attrs	0.142857
fast transform path for aggregations	group by transform fast result	0.333333
ordinal	ordinal	1.000000
dateoffset of one custom business	custom business	0.166667
using input function or	copy inplace	0.055556
compute covariance with series excluding missing values parameters	core series cov other min_periods	0.200000
of the values	shape values	0.050000
that do not throw an exception when set	util	0.062500
a sorted ndframe	core ndframe	0.005051
doc	doc	0.357143
return an	core computation	0.047619
view limits	date locator autoscale	0.055556
find indices where elements of v	indexes frozen ndarray searchsorted v	0.033333
compute the symmetric difference of two index	indexes index symmetric difference other	0.166667
load a feather-format object from	feather	0.050000
bind a method to class	compat bind method cls	0.200000
manipulation result has	ndframe constructor	0.055556
unit if needed	unit tz	0.125000
long strings in the	core	0.001326
delegatedclass of a series that is datetimelike (e	core indexes maybe to datetimelike data copy	0.142857
cumcount	cumcount	1.000000
a fixed frequency timedelta index with	indexes timedelta range start	0.083333
that we have a valid ordered parameter if	core categorical validate ordered cls ordered	0.058824
color object parameters	color cls	0.333333
datetimeindex with	core indexes datetime	0.011494
try to parse a ndarray like into a	io json parser try convert data name	0.500000
as a sparse array	as sparse array	0.250000
read csv file (discouraged please use :func	core data frame from csv	0.066667
only makes sense when fill_value	sparse stack sparse frame frame	0.333333
function to convert datetimelike-keyed dicts to timestamp-keyed	compat d	0.125000
return index	indexes datetime index	0.007634
pick the best locator based on	plotting pandas auto date locator get locator	0.062500
as_blocks()	ndframe blocks	0.166667
tz-aware type	io get tz tz	0.066667
table in file node must already exist and	append key value format	0.016667
if we define an builtin function for this	grouper is builtin func arg	0.333333
resostr	resostr	1.000000
add in	datetime index ops mixin add	0.333333
series using matplotlib / pylab	grid	0.100000
all inputs as	index asobject to_concat name	1.000000
defined	indexes multi index view cls	0.047619
concatenation of an datetimelike array of	concat datetime to_concat axis	0.125000
sql and params args to dbapi2 0 compliant	params sql params	0.200000
levels attribute is 1 or a	table is multi index	0.142857
components days hours minutes seconds milliseconds microseconds nanoseconds	core indexes timedelta properties components	1.000000
return the data & release	col take data	0.055556
return the header of a	parser parse thead	0.111111
the required package	package pkg_name min_version max_version app	0.083333
along the	core reshape concat objs	0.333333
get integer location for requested label	timedelta index get loc key method tolerance	1.000000
fixed frequency datetime index	core indexes	0.004762
function to determine if dtype is valid for	select n is valid dtype n method dtype	0.142857
the binary feather-format	feather fname	0.083333
index	core indexes range index	0.085106
a new unit if needed otherwise	tzdtype new cls unit tz	0.055556
one of the stata date formats	stata	0.022222
return a list of sql statement that create	create	0.033333
of index	core indexes index	0.007042
underlying data which is a categorical	core indexes categorical index	0.047619
locator based on a distance	pandas auto date locator get locator dmin dmax	0.250000
a scatter plot from two	plotting scatter plot	0.333333
time part of	index time	0.111111
dataframe pivot	reshape pivot index columns values	0.333333
return datetimeindex with	datetime	0.006711
convert to	block to	1.000000
get new sparsedataframe	core sparse sparse	0.034483
the datetime format of a given datetime string	datetime format dt_str dayfirst	0.250000
csv file	frame from csv cls	0.066667
dispatch to apply	group by mixin apply	0.050000
a series to the	core series	0.008000
read csv file (discouraged please use :func pandas	core data frame from csv	0.066667
a filtered indexer that doesn't have any	indexer tuple indexer axes	0.333333
texts	texts	1.000000
object dtype as boxed values such as timestamps/timedelta	datetime like block mixin get values dtype	0.500000
needs additional handling as	wrap result	0.022727
a new unit if needed otherwise	new cls unit	0.055556
to coerce a scalar to a	core indexes period index coerce scalar to	0.071429
multiindex at	multi	0.018182
gets called after a ufunc	index array wrap result context	0.068966
of groups excluding missing values	core	0.001326
we have	validate	0.027778
have	validate ordered cls	0.055556
detect terminal	get terminal	1.000000
table as a dataframe the levels in	table data values index	0.200000
return index or ndarray filled	core indexes datetime index ops mixin	0.029412
datetimeindex with times to midnight	index	0.002004
provide concatenation of an datetimelike array of arrays	dtypes concat datetime to_concat axis typs	0.142857
dataframe apply for	data frame apply func	0.166667
a particular	repr	0.040000
round the fractional part of	round frac x precision	0.200000
their default values as specified	default values	0.200000
for series columns for dataframe major_axis for	ndframe iteritems	0.055556
cumulative min for each group	core group by cummin axis	1.000000
gets the	core	0.002653
dtype types to stata types returns the	to stata type dtype	0.250000
new unit if needed otherwise return	datetime tzdtype new cls unit	0.055556
return the header of	frame parser parse thead	0.111111
function to get object from internal	func	0.011905
of value from 1-dimensional ndarray only use this	datetime index get value series key	0.071429
create an	core ndframe create indexer	0.500000
cached item item represents a label	item cache item	0.125000
validates that we have good categories	core categorical validate categories cls categories fastpath	0.250000
index with day calendar	indexes	0.004651
can be used to iterate over the	io	0.003012
a list/array of tuples	tuples cls data closed name	0.250000
python datetime date objects	indexes datetime index	0.007634
csv file (discouraged please use	series from csv cls path sep parse_dates	0.066667
can	indexes index	0.007353
in requested	level inplace	0.500000
datetimelike (e	core indexes maybe to datetimelike data	0.142857
pairwise correlation of columns	core data frame corr method	0.111111
that we have a	core categorical validate ordered	0.055556
types format slicing	types slicer na_rep quoting	0.200000
swap levels i and j in a multiindex	frame swaplevel i j	0.333333
the stata date formats to a type in	io convert datetime to stata type	0.200000
whether or not the 'usecols' parameter is	io evaluate usecols usecols names	0.083333
from 1-dimensional ndarray only use this if	value	0.005155
the underlying	core indexes	0.009524
so prints a warning	core warn	0.333333
for panel objects and will raise	core panel	0.019231
blocks collect	axis consolidate transposed	0.062500
by	core ndframe group by	1.000000
actual sparse values	sparse sparse array	0.043478
from 1-dimensional	key	0.005051
of day (e g 9 00-9 30am)	time start_time end_time include_start include_end	0.200000
concatenation of an datetimelike array of arrays	core dtypes concat datetime to_concat axis	0.125000
the totally ordered cartesian product of	get group index labels shape sort xnull	0.066667
add numeric operations to the groupby generically	group by add numeric operations cls	0.250000
of terms for instances of pandasobject	computation any pandas objects terms	0.250000
of python datetime date objects (namely	datetime	0.006711
input numpy dtype	ndframe astype dtype copy	1.000000
a tree-like object that can be used	parser	0.008000
are a series we by	series group by	0.142857
read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
only	core indexes index set value arr key	0.023810
set of kwargs suitable for initializing or updating-on-copy	kwargs cls	0.040000
or by a series of	by axis	0.045455
each interval in the	interval	0.029412
sort	sort	0.416667
'numpy' library the third	compat numpy validate take with convert convert args	0.055556
function elementwise updating the	io formats styler applymap func subset	0.083333
return series containing only true/non-nan values	core remove na series	0.166667
on column values	values	0.008547
new unit if needed otherwise return from the	datetime tzdtype new cls unit tz	0.055556
we	validate ordered	0.055556
or by a series of	by axis level	0.045455
from a 1d array of interval	interval index from intervals cls data	0.333333
my specific	indexes index	0.007353
as a	core sparse sparse series as	0.125000
style_dict	style_dict num_format_str	0.250000
and return a basegrouper	get	0.007143
function elementwise updating the html	io formats styler applymap func subset	0.083333
this getitem defers to the underlying array	ops mixin getitem key	0.333333
evaluate the block return result block from	block eval func other	0.333333
index/multindex with given dimensions levels names	names	0.038462
scalar compat block	scalar block	1.000000
a custom template	from custom template	0.250000
and 'kwargs' should be empty because all	args kwargs	0.076923
fast lookup of	arr key	0.023810
lookup of value from 1-dimensional	index set value arr key value	0.038462
this object	core indexes index	0.007042
sparsearray from	sparse sparse	0.034483
checks that all the labels are datetime	index is all dates	0.333333
object that can be used to iterate over	build	0.013514
a multivariate data visualization algorithm parameters	frame class_column ax color	0.200000
to midnight length is	index	0.002004
indexer even	get indexer for	1.000000
parameter	validate ordered cls	0.055556
or microsecond	core indexes datetime index ops mixin resolution	0.125000
we are index sliceable then return my	index sliceable obj key	0.083333
statement that create a table reflecting	create table setup	0.066667
to apply we are stripping all	mixin apply	0.050000
shift without copying data the shifted data	core ndframe slice shift	0.083333
to ndarray raises on scalar data converts	indexes index coerce to ndarray cls data	0.166667
validate if we can perform a	core indexes index validate for	0.333333
when	ndframe	0.005025
to create an	core computation	0.047619
convert sparsearray to a numpy array	sparse sparse array to dense fill	1.000000
if label	value label	0.066667
to parse	tools parse	0.125000
the base	get base	0.333333
sets index names to	set default names	0.083333
the process of casting data from	assert safe casting cls data	0.047619
parse specified sheet s into a dataframe equivalent	file parse	0.125000
concatenation of an	concat datetime to_concat axis	0.125000
convert timedelta-like to timedelta64	indexes td	0.055556
concise summary of a dataframe	data frame info verbose buf max_cols memory_usage	1.000000
a tabular environment table you	latex buf columns col_space header	0.100000
of available options grouped	pp options	0.083333
parse a ndarray like	json	0.100000
a dataframe sorted by the n smallest	data frame nsmallest n	0.166667
gets called after	indexes index array	0.100000
is called via the 'numpy' library the	numpy validate take with convert	0.055556
tree-like object that can be used	frame parser build	0.014706
valid column name for generation (e g an	core computation bin op	0.055556
validate metadata	validate metadata	1.000000
the slice locations for	index slice locs start end step kind	0.083333
get lines 0) there are headers on	io python parser get	0.166667
of ndframe as	core ndframe to	0.040000
formats to	io convert datetime to	0.166667
that has a single dtype if dtype	core simple blockify tuples dtype	0.111111
holidays between start_date	tseries abstract holiday calendar holidays	0.166667
the put method to its values	core series put	0.055556
a level-wise	locs tup	0.125000
from 1-dimensional ndarray only use this	index set value arr	0.023810
return my self as a sparse array	sparse series as sparse array	0.250000
decorator to take optional positional and keyword arguments	util optional args decorator	0.083333
v should	v	0.026316
we have	ordered	0.017857
the passed type is	dtypes extension dtype is	0.125000
totally ordered cartesian product of all possible	labels shape sort xnull	0.066667
gets called after a ufunc needs additional	context	0.023810
with times to midnight length is	core	0.001326
invoked by str	str	0.017544
over	parser	0.008000
rewrite the assignment operator for pytables expressions	computation rewrite assign tok	0.125000
i am an	io index	0.111111
block managers into one	block managers mgrs_indexers axes concat_axis copy	1.000000
convert to our native types format slicing	core categorical block to native types slicer	0.250000
values to be at least 1 d	shape values	0.050000
subclasses namely intervalindex to control get_slice_bound	index get loc only exact matches key	0.142857
convert timedelta-like to	td index cmp opname nat_result	0.055556
from	arr key	0.023810
we have a	name	0.025000
to see if we can set	can set	0.125000
process of casting data from some accepted dtype	numeric index assert safe casting cls data	0.047619
a dataframe	formats data frame formatter	0.200000
panel to a	panel	0.017857
to ndarray raises on scalar data converts other	indexes index coerce to ndarray cls data	0.166667
given an interval or	indexes get	0.125000
padded hexadecimal id of	computation raw hex id	0.166667
take optional positional	util optional	0.066667
apply a function to a	func	0.023810
return packed bytes see	io msgpack packb	0.025641
pick the best locator based on a distance	locator get locator dmin dmax	0.250000
panel objects	core panel	0.019231
the new freq essentially a	resampler asfreq fill_value	0.066667
validates that we have a	core	0.001326
the maximum by shading	max	0.090909
tree-like object that	io html frame parser	0.012195
create a spreadsheet-style pivot table as	reshape pivot table	0.111111
see if a url has	is url url	0.047619
copy if specified	dtype copy	0.032258
bytes see :class packer for options	msgpack packb	0.025641
each group if n is an int	group by	0.016129
comparison operations to convert timedelta-like to	td index cmp opname	0.055556
wrapper function for series arithmetic operations to	core bool method series op name	0.333333
gets called after a ufunc needs additional handling	context	0.023810
that can be coerced to periods	core indexes period index simple new cls	0.142857
if we have bytes decode them to	ensure decoded s	0.166667
index objects contain	datetime index ops mixin	0.029412
return	datetime index	0.007042
pointer	index ops mixin	0.019231
csv file (discouraged please use	csv cls path	0.066667
a list of normalized locales	locales locales	0.200000
take the	core	0.001326
converts dtype types to stata types returns	to stata type dtype	0.250000
all of the _upsample kwargs and	apply f	0.166667
the flattened values of the underlying	indexes index ravel order	0.037037
float is formatted in dataframe	formats set eng float	0.200000
merge this	reshape merge	0.166667
intersection of two index	indexes range index intersection other	0.083333
a feather-format	read feather	0.083333
if we define an builtin	base grouper is builtin	1.000000
for temporarily setting a timezone	set timezone	0.142857
into a	index_col	0.125000
an xarray object from the	ndframe to xarray	0.125000
to	cls name	0.125000
filled with nat which has	mixin nat new	0.050000
binary feather-format for	to feather fname	0.083333
get lines 0) there are headers on row	python parser get index name columns	0.166667
of seconds (>= 0	timedelta index seconds	0.066667
to construct this type from	core dtypes interval dtype construct from string cls	0.166667
new block manager	core block manager reduction f axis	0.250000
over	html frame	0.014706
given an interval	get	0.007143
each element in the series/index	core str get arr i	0.142857
functions	rename axis mapper	0.333333
of	reshape crosstab index	0.066667
resolve a variable name in	scope resolve	0.166667
doc parms	doc parms cls	1.000000
only	indexes index set value	0.023810
dataframe in panel	panel	0.017857
the cached item item represents a positional	ndframe iget item cache item	0.090909
in the series extract groups	extract frame arr	0.047619
the 'numpy' library the third	with convert	0.055556
a new index of the values	core indexes index putmask	0.111111
index	assert index	1.000000
apply we are stripping all of	group by mixin apply func	0.050000
o and return packed bytes	io msgpack packb o	0.055556
take the codes by the indexer	take nd indexer allow_fill	0.333333
i : int slice or sequence of integers	core data frame ixs i	0.200000
repr of this object potentially casting to object	core indexes period index to embed keep_tz	0.333333
to dataframe apply for	data frame apply func	0.166667
whether i can attempt conversion to a timedeltaindex	convertible to index other	0.333333
best locator	pandas auto date locator get locator	0.062500
to table in file node must already exist	io hdfstore append	0.016667
the block manager from a dataframe of series	manager sdf columns index	0.052632
of	indexes index set	0.023810
sql statement that create a table reflecting the	io sqlite table create table setup	0.066667
generate bin edge offsets and bin labels for	core generate	0.125000
the counts of ftypes in this object	ftype counts	0.125000
casting data from some accepted	safe casting cls data	0.047619
create an	ndframe create indexer cls	0.500000
boolean list indicated if we have mixed levels	have mixed levels	0.200000
if	core indexes index	0.007042
index row	index	0.002004
read from a url file or	io read obj	0.058824
index	indexes timedelta index	0.250000
delimiter string starting at the end	rsplit	0.031250
a	index	0.020040
compute boolean array of whether each index value	indexes datetime index ops	0.034483
single	ndframe	0.005025
accessor object for datetimelike properties of the	properties	0.046512
convert to our native types format	to native types slicer na_rep date_format	0.250000
boolean if the dtypes are equal	core dtypes is dtype equal source target	0.333333
take which sets nan values in	take	0.030303
return a tuple of the doc parms	core doc parms cls	0.250000
dta files from array-like objects	convert_dates write_index encoding	0.500000
datetimelike dtype converting	datetime value dtype errors	0.166667
return packed bytes see :class packer for options	io msgpack packb	0.025641
drop from frame raise keyerror	ndframe pop	0.500000
validate percentiles used by describe and	ndframe check percentile q	0.333333
the values	values ndim	0.050000
needs additional handling as	period	0.016667
return a string representation for this object	core indexes frozen ndarray unicode	0.083333
from sif to	date to	0.250000
series extract groups from the first	str extract frame	0.047619
correct pandassql subclass	io pandas sql builder con flavor schema meta	0.055556
representing the totally ordered cartesian product of all	get group index labels shape sort xnull	0.066667
of how to create the grouper indexers	grouper obj	0.142857
stata date formats to a	convert datetime to stata	0.111111
union of two multiindex objects sorting if possible	core indexes multi index union other	0.066667
new unit if needed otherwise return from	tzdtype new cls unit tz	0.055556
1d array of	intervals cls data	0.250000
on column number and its label	label	0.028571
cast it to timedelta according to resolution	timedelta index maybe cast slice bound	0.125000
<= series	core series	0.008000
default format for this type not	default	0.100000
the counts of non-null values	core value counts values sort ascending normalize	0.200000
apply we	by mixin apply	0.050000
latex	latex	0.461538
that we have	categorical validate ordered cls	0.055556
a sorted ndframe	core ndframe truncate	0.250000
returns the float values	io formats float	0.055556
array of whether each index value is	index ops	0.033333
draw a matrix of scatter	scatter matrix frame alpha figsize ax	1.000000
for scalar	can do	0.250000
argsort argsorts	core series argsort	0.083333
the categorical by category value returning a	values inplace ascending na_position	0.071429
ufunc	array wrap result context	0.088235
cross-tabulation	values	0.008547
returns the float values converted	float array formatter	0.055556
datetimeindex but	core datetime	0.142857
a valid ordered parameter if	categorical validate ordered cls ordered	0.058824
that dict has only the	io json parser	0.071429
fixed frequency	range start end periods	0.133333
can be used to	io html	0.012987
sparse	core sparse sparse data frame	0.058824
asof merge this is similar to a	core reshape merge asof	0.071429
a series that is datetimelike (e	core indexes maybe to datetimelike data	0.142857
simple cross-tabulation	reshape crosstab index columns	0.066667
the date belongs to a leap year	period index is leap year	0.142857
a tree-like object that can	build	0.013514
return a dense type view	single block manager get values	1.000000
already exist and be	io hdfstore append key	0.016667
list indicated if we have mixed	multi index have mixed	0.166667
method to handle na filling of	fillable values indices allow_fill fill_value	0.125000
keyerror is	compat chain map	0.032258
i am never a	core categorical block	0.100000
boolean if this key is in the index	index contains key	1.000000
return an indexer	get	0.007143
fmt	fmt	0.714286
the stata date formats to a	datetime to stata	0.100000
create a pytables index on	create	0.033333
after a ufunc needs	context	0.023810
lookup of value from 1-dimensional	get value series	0.250000
apply the	offset apply	0.500000
gets called prior to	prepare result	0.111111
from the info_axis	core ndframe dir additions	0.166667
by definition have do not	formats datetime64formatter format strings	0.090909
that we	core categorical validate ordered cls	0.055556
return the block manager from	to manager sdf	0.052632
get integer	timedelta index get	0.500000
file node must already exist and	value	0.005155
the fractional part	frac x precision	0.100000
by	sort	0.083333
can	html	0.011765
a	array wrap	0.075000
float is formatted	formats set eng float	0.200000
boxed values	core indexes datetime	0.011494
index objects	core indexes index	0.028169
label values for requested level	core indexes multi index get level values level	0.250000
read csv file (discouraged please	data frame from csv	0.066667
add in the datetimelike methods (as we	datetime index ops mixin add datetimelike methods	0.333333
dataframe the levels in the	data values index	0.066667
in	core ndframe	0.005051
given an	indexes get interval	0.125000
object is a file-like object	dtypes is file like obj	1.000000
returns the float values converted into strings	io formats float array formatter get result	0.055556
handles preprocessing for cut where	core reshape preprocess for cut x	0.200000
validates that we have	core categorical validate ordered	0.055556
use this	set	0.012195
from 1-dimensional ndarray	core indexes index set value arr key	0.023810
the values at the new freq essentially	resampler asfreq fill_value	0.066667
new unit if needed otherwise	datetime tzdtype new cls unit	0.055556
fast version	fast func	0.500000
offsets index to end of period	offset end apply index i	1.000000
from 1-dimensional ndarray only	core indexes index set value	0.023810
object is a sequence	dtypes is sequence	0.333333
passed type is an actual dtype that we	is dtype cls dtype	0.086957
an positional indexer cannot enlarge its	positional setitem indexer indexer	0.052632
if 'series argmin' is called via the	skipna skipna args kwargs	0.100000
manipulation result has	core ndframe constructor	0.055556
exist	hdfstore append	0.016667
compute the vectorized membership of x not in	computation not in x	0.166667
read from a url file or string	io read obj	0.058824
take which sets nan	take nd arr indexer axis	0.125000
of available options grouped	options	0.041667
multiindex at the requested level the	multi index sortlevel level	0.250000
am	block	0.008197
returns length of info axis	core ndframe len	1.000000
of the required package is installed	package pkg_name min_version max_version	0.083333
dataframe objects and	core data frame	0.005917
set new labels on multiindex defaults to	indexes multi index set labels labels	0.333333
set a parameter value using the	value	0.005155
flattened values of the underlying data	indexes index ravel order	0.037037
create the manager	mgr data index columns dtype	0.333333
load a feather-format object from	read feather	0.083333
specified dtype	result dtype	0.142857
string-like that	io convert string array data	0.038462
'numpy' library the	take with convert	0.055556
the best locator	locator get locator	0.062500
called after a ufunc needs	period index array wrap result context	0.041667
where : array of timestamps	index asof locs where	1.000000
iterate	io html frame parser build	0.014706
return datetimeindex with	datetime index	0.007042
to html	styler	0.022222
csv file (discouraged please use :func pandas read_csv	from csv cls path sep parse_dates	0.066667
class_column	class_column	1.000000
input function or	copy	0.012821
node must already exist and be	hdfstore append	0.016667
string starting at the end	rsplit arr	0.037037
the values to	shape values ndim	0.050000
return the op string for this	computation bin op generate	0.066667
size of the	itemsize	0.027027
a sequence of terms	terms	0.034483
we by definition have a tz	formats datetime64tzformatter format strings	0.166667
a resample	index	0.006012
by definition have do	formats datetime64formatter format strings	0.090909
called via the 'numpy' library the third	take with convert convert	0.055556
array	array arr	1.000000
each index value is found	index ops mixin isin	0.083333
the scope	scope	0.076923
with decimal stride	decimal	0.058824
scipy interpolate	core interpolate scipy	0.250000
the object in order to correctly handle	resampler convert obj obj	0.166667
use this	value arr key	0.023810
validates that we have a valid ordered parameter	ordered	0.017857
the generic	io	0.003012
a simple	reshape crosstab index columns	0.066667
v should be inserted in	frozen ndarray searchsorted v	0.033333
evaluate the block return result block from	core block eval func other raise_on_error try_cast	0.333333
the float values converted into strings using	formats float array formatter	0.055556
of a series that is datetimelike	datetimelike data copy	0.125000
type window_type and size window	rolling window arg window win_type min_periods	0.100000
dmin	dmin	1.000000
with integer stride	tseries resolution get stride	0.333333
the raw data	raw data rows	0.500000
via the 'numpy' library	with convert convert args kwargs	0.055556
views note this is *not* the	is other	0.055556
holiday	tseries holiday	1.000000
that path's extension against the	io excel writer check extension cls	0.125000
a resample of a groupby implementation	timedelta index resampler groupby	0.166667
is	core dtypes is	0.063830
exact_indices	exact_indices	1.000000
info axis	core get info	0.250000
storer object for a key raise if not	storer key	1.000000
produce 'pivot' table based on 3 columns	reshape slow pivot index columns	0.500000
expanding count of number of non-nan observations	stats expanding count arg freq	0.200000
handle na filling of take	indexes multi index assert take fillable values indices	0.250000
return true if this is a valid	is	0.005291
float	formats set eng float	0.200000
return	computation get	0.333333
return dataframe	core data frame	0.005917
to iterate	frame parser	0.012500
of value from 1-dimensional ndarray only	value arr key value	0.038462
length of the series	core series len	0.333333
operations to convert timedelta-like	core indexes td index cmp	0.055556
return my self as	sparse series as	0.125000
extension	extension	0.666667
of one custom	custom	0.066667
lookup of	key	0.005051
return a tree-like	html	0.011765
delimiter string starting at the	rsplit arr	0.037037
gets called prior to a ufunc	array prepare result context	0.333333
return resolution str against resolution	resolution get reso cls	1.000000
create the description	create description complib complevel fletcher32 expectedrows	1.000000
using indicated encoding	encoding errors	1.000000
indexers	indexers	1.000000
return an attributes dict for my	core indexes index get attributes dict	0.250000
write out the binary feather-format	to feather fname	0.083333
ftypes (indication of sparse/dense	core ndframe ftypes	0.055556
needs	core indexes period index array	0.050000
fast transform path	transform fast	0.250000
my self as	sparse series as	0.125000
1-dimensional ndarray only	set value	0.023256
file	key value format	0.016667
is called via the 'numpy' library	compat numpy validate argmin with	0.200000
in	hdfstore append key	0.016667
index and / or columns using input	axis mapper axis copy inplace	0.055556
input with values above given value s truncated	clip upper threshold axis	1.000000
or microsecond	datetime index ops mixin resolution	0.125000
info	info	0.545455
called	index array	0.066667
dataframe	core data frame reset	0.027778
handle na filling of take	take fillable	0.250000
use this if you	set	0.012195
shift without copying data the shifted data will	slice shift periods axis	0.083333
indexer	cls name indexer	0.083333
making this object picklable	core sparse sparse array reduce	0.333333
to the new	copy errors values	0.250000
coerce any object types to better	core object block convert	0.083333
in	append	0.012987
panel objects and will raise an	panel to	0.027027
number of bytes in	core indexes multi index nbytes deep	0.052632
to scipy interpolate interp1d method is scipy's kind	interpolate scipy wrapper x y new_x method	0.500000
fast	indexes index set value arr	0.023810
elements of v should be inserted	ndarray searchsorted v	0.033333
iterate	html frame parser	0.012658
the float values converted	formats float array	0.055556
are passed a list-like indexer return	interval index convert list indexer keyarr kind	0.066667
algos groupsort_indexer implements counting sort	get group index sorter group_index ngroups	0.250000
csv file (discouraged please use :func pandas	data frame from csv	0.066667
astypeable	astype dtype	0.166667
by	group by	0.032258
table in file node	value format	0.016667
return the maximum value of the index	datetime index	0.007042
the array interface	indexes multi index array dtype	0.125000
return a fixed frequency datetime	range start end periods	0.066667
the function to my values	func mgr	0.083333
series using mapper dict or	as_index	0.071429
or offset	tseries	0.083333
additional handling	core indexes period index array	0.050000
the float values converted into	float array formatter get result	0.055556
number of bytes in the underlying data	index nbytes	0.052632
sparsifying is not supported for panel objects	core panel to	0.027027
of python datetime date objects (namely the	datetime index	0.007042
apply we are stripping all	mixin apply	0.050000
tolist	tolist	0.357143
to ndarray repeat	indexes datetime index ops mixin repeat repeats	0.333333
object dtype and coerce to a fixed size	data encoding itemsize	0.142857
positional indexer cannot	valid positional setitem indexer indexer	0.052632
to convert timedelta-like to	td	0.043478
convert datetime-like to datetime64	period index cmp opname nat_result	0.066667
fill_value and arr dtype then fill	core dtypes maybe fill arr fill_value	0.333333
the view limits	plotting time series date locator autoscale	0.055556
file node must already exist and	hdfstore append key	0.016667
keeps track of whether numexpr	set test mode v	0.142857
render the built up styles	styler render	0.142857
downsample the	index resampler downsample	0.200000
table as a dataframe the	table data	0.200000
get lines 0) there are headers on	io python parser get index name	0.166667
dataframe sorted by the n largest values	core data frame nlargest n	0.166667
of the index or minimum along an axis	datetime index ops mixin min axis	0.333333
to table	append	0.012987
most likely frequency given the input index	index warn	0.333333
to run the same function multiple	num_threads kwargs_list	0.050000
a list-like indexer return	index convert list indexer keyarr kind	0.066667
the where	where	0.083333
preserve dtype if possible	core putmask smart v m n	0.055556
data to ndarray raises on	coerce to ndarray cls	0.166667
the float values	float array formatter get result	0.055556
get	get index	0.200000
the indices that would sort the index and	core indexes range index argsort	0.166667
representing the totally ordered cartesian product of all	core get group index labels shape sort xnull	0.066667
if the object is a file-like object	core dtypes is file like obj	0.333333
an asof merge this is similar to	reshape merge asof	0.071429
each subject string in the series extract groups	core str extract frame	0.047619
values attribute if it	core series	0.008000
indexer which	indexer indexer	0.142857
csv file	frame from csv	0.066667
to iterate over the	build	0.013514
of the index or minimum along an axis	indexes datetime index ops mixin min axis	0.333333
table in file node must already exist and	hdfstore append	0.016667
return series as ndarray or ndarray-like depending on	core series values	0.250000
style_dict to an openpyxl style	io openpyxl1writer convert to style cls style_dict	0.166667
expression as a	core computation eval expr	0.083333
new copy of maps[0] and refs to	copy	0.012821
a string-like that is object dtype and	string array data	0.038462
percentile	percentile	1.000000
1-dimensional ndarray only	core indexes index	0.007042
select values between particular times of	indexes datetime index indexer between	0.125000
a resample of a	timedelta index resampler	0.066667
cast values to specified type parameters	io parser base cast types values cast_type column	1.000000
valid other evaluate or raise typeerror	validate for numeric binop other op opstr	0.500000
list representing the totally ordered cartesian product of	index labels shape sort xnull	0.066667
mask see also	mask value	0.250000
object with matching indices to myself	core ndframe reindex like other method copy limit	0.111111
representation for a particular object invoked by str	str	0.017544
append	append key value format append	0.125000
stata	cast to stata	0.500000
string representation for a particular object	string mixin repr	0.333333
a subclass of styler with	formats styler from	0.076923
lookup of	core indexes index set	0.023810
for series arithmetic operations to	sparse arith method op name	0.333333
resampling when using a timegrouper	group by resample rule	0.166667
block	block make block	0.100000
the input data_columns and min_itemize and create a	columns data_columns min_itemsize	0.200000
might need to coerce a	tseries maybe coerce	0.125000
file node must already exist and be table	key value format	0.016667
boolean if values	mixin is	0.083333
quantile	series quantile	0.083333
method to class python 2 and	method cls name	0.076923
our native types format	native types slicer na_rep	0.200000
1-dimensional ndarray only use this if you	value arr key	0.023810
a resample of	resampler	0.053571
of value from 1-dimensional ndarray only use this	core indexes datetime index get value series key	0.071429
fast lookup of value from 1-dimensional ndarray only	core indexes datetime index get value series	0.071429
a block of	block make block	0.100000
return	index get	0.080000
given a tuple of slices/lists/labels/boolean indexer to a	core indexes multi index get	0.100000
make new index	categorical index	0.045455
'args' and 'kwargs' should be empty because	compat numpy validate resampler func method args kwargs	0.166667
representing the totally ordered cartesian product of	labels shape sort xnull	0.066667
to iterate over the dom	parser build doc	0.125000
tokenize a python source code string	tokenize string source	1.000000
by definition have do not have a tz	io formats datetime64formatter format strings	0.090909
a row cross-section from the sparsedataframe as a	core sparse sparse data frame xs key axis	0.166667
cross-tabulation of	core	0.001326
same dimensions as the original	core	0.001326
csv file (discouraged please use	series from csv cls path sep	0.066667
groupby implementation	index resampler groupby	0.166667
internal method to handle na filling of	fillable values indices allow_fill fill_value	0.125000
tz-aware type return an encoded zone	tz tz	0.066667
vec	vec	1.000000
underlying	indexes multi	0.014493
frequency	periods freq	0.187500
already exist and be table	append key value	0.016667
the float values converted into	float array	0.055556
validate percentiles used by describe and	check percentile q	0.333333
table as a dataframe the levels in	table data values index columns	0.200000
and return the block manager from	sparse to manager sdf columns	0.052632
we don't support start stop kwds	fixed validate read kwargs	0.200000
after a ufunc needs additional handling as	period index array wrap result context	0.041667
declarations_str	declarations_str	1.000000
with labels in requested axis removed	core ndframe drop labels axis level	0.250000
block i	data col create for block cls i	0.333333
internal property property synonym for	ndframe	0.005025
to convert timedelta-like to	td index cmp opname nat_result	0.055556
times to midnight length is unaltered	core indexes datetime index normalize	0.125000
the value inplace return a	value	0.005155
view limits to the nearest multiples of	plotting time series date locator autoscale	0.055556
add in the	index ops mixin add	0.333333
from	from string cls	0.500000
set	cparser wrapper set	1.000000
take boolean mask of index	index	0.002004
of a block that has a single	simple blockify tuples	0.125000
the specified dtype	dtype result dtype	0.142857
from a masked	core masked	0.250000
a slice of	slice slicer	0.087719
concatenation of an datetimelike array	dtypes concat datetime to_concat axis	0.125000
compute a	reshape crosstab index columns	0.066667
kwargs suitable for initializing or updating-on-copy an	kwargs cls	0.040000
be table	hdfstore append key	0.016667
with times to	core indexes	0.004762
sql query	sql con	0.500000
of blockmanager	core block manager	0.022727
decorator to capture	util capture	0.333333
if we define an builtin function for this	core selection mixin is builtin func	0.333333
positional	indexer has valid positional	0.250000
ufunc needs additional handling as	result context	0.027027
a new unit if needed otherwise return	core dtypes datetime tzdtype new cls unit tz	0.055556
return index or ndarray filled with	index	0.002004
of a hack to accelerate unioning	indexes datetime index union many others	0.040000
return an attributes dict for my class	index get attributes dict	0.250000
returns a dense	sparse sparse	0.034483
tuple of axis dimensions	ndframe shape	0.200000
provide concatenation	dtypes concat	0.100000
string starting at	rsplit arr pat n	0.037037
boolean if values in	index ops mixin is	0.100000
for more this is index	core ndframe	0.005051
an series refer to numpy ndarray repeat	series repeat repeats	0.333333
values as necessary) returns	reindex target method level limit	0.142857
from a scalar or array parameters	from array	1.000000
try to preserve dtype if	putmask smart v m n	0.055556
return a tree-like object that can be used	parser	0.008000
axis equal values are	rank axis	0.250000
to read from a url file or string	io read	0.038462
environment	latex	0.076923
only	index	0.002004
bool if we have only bool	object block is bool	0.166667
convert tz-aware axis	core ndframe tz convert tz axis level copy	0.200000
an xarray object from the pandas	ndframe to xarray	0.125000
a result set coerce	dtypes coerce	0.066667
file node	io hdfstore	0.014493
object to	to	0.012658
of each group	group by	0.032258
as	core ndframe	0.005051
can be used to	frame parser build	0.014706
the 'numpy' library	take with convert convert	0.055556
convert tz-aware axis	ndframe tz convert tz axis level	0.200000
bfill	bfill	1.000000
pack object o and	msgpack packb o	0.055556
an index that we can	index value	0.142857
a tree-like	html frame	0.014706
as an html	to html	0.250000
convert timedelta-like to	core indexes td index	0.055556
the underlying array which by-definition	datetime index ops mixin	0.029412
list-like indexer	index convert list indexer keyarr kind	0.066667
a google bigquery table	gbq destination_table project_id chunksize verbose	0.500000
only use	index	0.002004
sparseseries	sparse sparse series	0.200000
left	left	0.222222
sub-classes	core window gotitem key ndim subset	0.333333
return number of unique elements in the object	core index ops mixin nunique dropna	0.083333
registered	get registered	0.500000
a fixed frequency datetime index	core indexes	0.004762
from a 1d array of interval objects	core indexes interval index from intervals cls	0.333333
multiindex at the	core indexes multi	0.014493
values between	indexes datetime index indexer between	0.125000
sqldatabase	sqldatabase	0.714286
a new manager with the blocks	core block manager combine blocks	0.250000
downsample the cython defined function	resampler downsample how	0.200000
called via the 'numpy' library the third	numpy validate take with convert convert	0.055556
html tables into a list of dataframe	html io match flavor header	0.166667
axis equal values are	core ndframe rank axis	0.250000
visualization algorithm parameters	frame class_column ax color	0.200000
that create a table	sqlite table create table	0.166667
for making this object picklable	categorical setstate state	0.333333
v should	searchsorted v	0.033333
subject string in the series extract groups	extract	0.060606
last non-na/null value	core data frame last valid index	0.250000
curve with holidays between start_date and	tseries abstract holiday calendar holidays start end return_name	0.066667
get	core indexes categorical index get	0.500000
rewrite the assignment operator for pytables expressions	rewrite assign tok	0.125000
sanitize input data	sanitize array data	0.250000
post	plotting mplplot post	0.333333
wrap comparison operations to convert datetime-like to datetime64	period index cmp opname nat_result	0.066667
method to handle na filling of take	index assert take fillable values indices allow_fill fill_value	0.250000
install the	core coerce method converter	0.200000
dateoffset of one business month at beginning	business month begin	1.000000
form the union of	multi index union	0.333333
sure that time and	core ensure like indices time	0.125000
a spreadsheet-style pivot table as	reshape pivot table	0.111111
a datetime64 block with a tz attribute	datetime	0.006711
return the header of a	html frame parser parse thead	0.111111
cartesian product of all possible	sort	0.083333
compute a simple	crosstab index columns values	0.066667
boolean indicating if self is view of	ndframe is view	0.200000
of take	core indexes index assert take	0.500000
table in file	io	0.003012
block	block manager	0.063830
transform long stacked format dataframe	core data frame	0.005917
to the specified frequency freq	index asfreq freq how	0.500000
whether the 'name' parameter for parsing is	io validate	0.031250
zeros	zeros	1.000000
the _upsample kwargs and	core group by mixin apply f	0.166667
from 1-dimensional ndarray only use this	core indexes	0.004762
arr1 and arr2 are equivalent	contents arr1 arr2	0.066667
if the passed type is	core dtypes extension dtype is	0.125000
a singular 'name' parameter for general index	core indexes index	0.007042
series	series group	0.030303
box function to get object from	box func	0.142857
return an attributes dict	core indexes index get attributes dict	0.250000
shade the background	io formats styler	0.021277
with optional set logic	join join_axes	1.000000
to beginning of period	offset beg	0.166667
ufunc needs additional handling	core indexes period index array wrap result context	0.041667
sorts the categorical by category value returning	inplace ascending na_position	0.071429
is_local	is_local	1.000000
operations to the cls evaluate the doc	aggregate operations cls	0.142857
reset the	ndframe reset	0.500000
in file	hdfstore append key value	0.016667
that has a single dtype if dtype is	simple blockify tuples dtype	0.111111
coerces data to ndarray raises on scalar data	to ndarray cls data	0.166667
of tuples of the (attr formatted_value)	multi index format attrs	0.142857
coerce a	period index coerce	0.125000
fast lookup of value from 1-dimensional ndarray only	core indexes period index get value series key	0.071429
datetimeindex with times	datetime	0.006711
engineering notation appending a letter	eng formatter	0.125000
table in file node must already exist and	append key	0.016667
resolve a variable name in a	computation scope resolve	0.166667
ftypes (indication	ftypes	0.043478
of the underlying data	core index ops mixin	0.187500
of value from 1-dimensional ndarray only use	datetime index get value	0.071429
usage of my values	usage deep	0.200000
create index with target's	core indexes multi index	0.013158
the underlying	multi index	0.020000
month	month	0.346154
make sure an expression	core computation check expression expr	0.200000
return a new manager with the blocks	core block manager combine blocks	0.250000
number of unique elements in the	nunique dropna	0.125000
for ordered data like time	ordered	0.017857
convert string 'r' to a timedelta object	core tools coerce scalar to timedelta type r	0.500000
called upon unpickling rather than the default which	indexes new datetime index cls d	0.111111
return a html representation for a particular dataframe	core data frame repr html	0.333333
a dataframe the levels in	data values index columns	0.066667
an asof merge this is similar to a	core reshape merge asof	0.071429
after a ufunc needs additional handling	array wrap result context	0.029412
to iterate over the	parser	0.008000
from apply if as_index=true	core group by index with as	0.200000
csv file (discouraged please use :func	csv cls path sep parse_dates	0.066667
a manager and a axes dict	mgr mgr axes	0.333333
pointer of	core index ops mixin	0.062500
table in file node must already	hdfstore append	0.016667
set the values from	io generic index col convert values	0.166667
a	a dense_index	0.500000
operations to convert timedelta-like to	indexes td	0.055556
we are index sliceable then return my slicer	to index sliceable	0.083333
expression as	expr	0.050000
hard to parse datetime string	tools parse time string	0.250000
determines if	float64index equals	1.000000
occupying requested label default to	sparse series get label default	0.083333
dropna if fill_value=nan returns a	dropna axis	0.083333
the passed type is an actual dtype that	period dtype is dtype cls dtype	0.142857
:meth pandas dataframe reset_index function see	index level drop name inplace	0.142857
to construct this type from	dtype construct from	0.166667
validates that we have a valid ordered parameter	ordered cls ordered	0.058824
we take a string-like that	string array data	0.038462
ndarray only use this if	categorical index	0.045455
convert argument to timedelta	tools to timedelta arg unit	0.500000
that	io html	0.012987
returns the float values converted into strings using	float array formatter	0.055556
tree-like	html frame parser	0.012658
stream	stream	0.833333
array to the key	key	0.005051
a dataframe to a variable number	data frame	0.005714
additional handling	index	0.002004
we might need to coerce a	maybe coerce	0.125000
returns the float values converted	io formats float array	0.055556
from	dropna	0.066667
logical	logical	1.000000
copy of a series excluding elements from groups	core series group	0.030303
can be used	html frame parser build	0.014706
the best locator based on	plotting pandas auto date locator get locator	0.062500
node must	append key	0.016667
block return result block from the	core block	0.010870
totally ordered cartesian product of all possible	get group index labels shape sort xnull	0.066667
of value	index set value arr key value	0.038462
index for series columns for dataframe major_axis	core ndframe iteritems	0.055556
compute count of group excluding missing values	series group by count	1.000000
the block return result block from	block	0.008197
to the end of this frame	frame	0.009091
is called via the 'numpy' library	compat numpy validate take with	0.055556
perform the reduction type operation	core categorical reduce op name axis	0.500000
decorator to add	core computation add	0.333333
to ndarray repeat	repeat repeats	0.142857
table in file	hdfstore append	0.016667
a filtered indexer that doesn't have any missing	core convert from missing indexer tuple indexer axes	0.333333
numpy array of python datetime date	indexes datetime index	0.007634
dtype (e g convert back to bool/int	core dtypes maybe downcast to dtype result dtype	0.500000
specific types	types	0.068966
from 1-dimensional ndarray	indexes index set	0.023810
that can be used to iterate	io html frame	0.012987
fast lookup	index set value	0.023810
particular time of day e g 9	time time	0.142857
return a fixed frequency datetime index with	core indexes bdate range start end	0.083333
a simple cross-tabulation of	core reshape crosstab index columns values	0.066667
sunday use day	sunday	0.100000
from sif to datetime	date to datetime	0.250000
fixed frequency timedelta index with day as	indexes timedelta range start end periods	0.083333
attribute if it has	core series	0.008000
reindex using pre-computed indexer	block reindex axis indexer method axis fill_value	0.500000
cummin	cummin	1.000000
or columns of dataframe according to labels	axis	0.011364
get all the locales	get locales	0.500000
new sparsearray from the	core sparse sparse data	0.076923
columns of this dataframe	index columns values	0.037037
the series extract groups from the first	str extract frame	0.047619
skipna	skipna	1.000000
return the mode s of	series mode	0.083333
mixin to add a str acessor	string accessor mixin	1.000000
return valid other evaluate or raise typeerror	index validate for numeric binop other op opstr	0.500000
parameter for general index	indexes index validate names	0.066667
to construct this type from	interval dtype construct from string	0.166667
to convert timedelta-like	core indexes td index cmp opname	0.055556
on multiindex defaults	indexes multi	0.014493
guess generated by infer_freq	ops mixin inferred	1.000000
dtypes	core dtypes	0.018519
datetimelike properties of	timedelta properties	0.052632
this level	level	0.043478
float values converted into strings using	io formats float array formatter get result	0.055556
a string-like	string array data	0.038462
a row cross-section from	xs key axis	0.333333
update index attributes e g freq	core indexes index maybe update attributes	0.200000
return packed bytes see :class packer	msgpack packb	0.025641
the indices that would sort the index and	core indexes index argsort	0.166667
already	io hdfstore append key value format	0.016667
time and panels are conformable	indices time panels	0.250000
for header rows in multiindex	header	0.066667
must	hdfstore append	0.016667
more this is index for series	ndframe	0.005025
from 1-dimensional	indexes index	0.007353
form the intersection of two index objects	core indexes index intersection other	0.166667
freq attribute of the ax object if set	ax freq ax	1.000000
see dataframe pivot	core reshape pivot index	0.333333
and return the block manager from a	core sparse to manager sdf columns index	0.052632
function for series arithmetic operations to	sparse arith method op name	0.333333
take which sets	take nd arr indexer axis	0.125000
a list of the axis indicies	panel extract axes data	0.142857
color background in a	formats styler background gradient s cmap low high	0.142857
alter default behavior on how float is	io formats set eng float format accuracy use_eng_prefix	0.333333
of regular expression pat	arr pat flags	0.062500
slice	datetime tzblock slice slicer	0.083333
attribute	core	0.001326
the values to be at	core block shape values ndim	0.050000
formats to a	io convert datetime to	0.166667
of ndframe	core ndframe	0.005051
read csv file (discouraged please use :func	from csv cls path header sep	0.066667
analogous to ndarray repeat	mixin repeat repeats	0.333333
1-dimensional ndarray only use this if you	indexes index set value arr	0.023810
that we have good categories	core categorical validate categories cls categories fastpath	0.250000
a dataframe to	io formats data frame formatter to	0.083333
return the full scope for use	scope full scope	0.055556
return the header	io html frame parser parse thead	0.111111
boolean whether this axes needs validation for a	core ndframe indexer should validate	0.166667
1d array return an array	util hash array vals	0.083333
i can avoid the state machine here	frequency inferer	0.166667
construct	construct	0.500000
block and	block manager	0.021277
of x in	core computation in x	0.166667
return	msgpack packb	0.025641
to a separate excel	to excel path na_rep engine	0.333333
this is called upon unpickling rather than	index cls d	0.083333
dataframe parser that uses beautifulsoup under	beautiful soup html5lib frame parser	0.166667
return index or ndarray filled with	core indexes datetime index ops mixin	0.029412
called after a ufunc needs additional	indexes period index array wrap result context	0.041667
backward	group by backfill	1.000000
to apply we	core group by mixin apply	0.050000
only use this if you	core indexes index set	0.023810
sql database table into	sql table table_name con schema index_col	0.333333
falls on sunday use day	sunday	0.100000
cannot append to : write out	write	0.017857
set of subplots	subplots	0.076923
construct this type from a string raise	dtypes interval dtype construct from string cls string	0.166667
by category value returning a new categorical by	categorical sort values inplace ascending na_position	0.333333
scalar	scalar	0.700000
perform __getitem__-like	slicer new_mgr_locs	0.250000
categorical by category value returning	inplace ascending na_position	0.071429
it has one	core	0.001326
dense	dense	0.750000
and	hdfstore append key value	0.016667
remove and	chain	0.031250
boolean whether this axes needs validation for	core ndframe indexer should validate iterable	0.166667
is	core	0.002653
return an indexer coerced to the	maybe coerce indexer indexer	0.125000
levels	levels	0.666667
boolean whether this axes needs validation	ndframe indexer should validate iterable axis	0.166667
applies the put method to	put	0.043478
'name' parameter for general index and plural 'names'	core indexes index validate names name names deep	0.071429
select values between particular times	index indexer between	0.125000
the shape of the values to	core block shape values ndim shape	0.083333
value from 1-dimensional	key value	0.011628
is defined as a copy with the same	multi index view cls	0.047619
doesn't like	v string like	0.111111
create a sparseseries from a scipy sparse coo_matrix	sparse sparse series from coo cls a dense_index	0.333333
determine if each string	match	0.090909
this is called upon unpickling rather than	datetime index cls d	0.111111
generic we want to set the	set	0.012195
a list of the inferred types one	inferred type levels	0.166667
datetime time the time part of the	indexes datetime index time	0.166667
create a table reflecting the structure of	create table setup	0.066667
read from a url file or string	read obj	0.058824
by the indexer fill with	nd indexer	0.015152
the levels of both multiindex objects are	indexes multi index equal levels other	0.100000
offsets index to beginning of	offset beg apply index i	0.333333
of value from 1-dimensional ndarray only use this	period index get value series	0.071429
attempt to construct this type from a	interval dtype construct from string cls	0.166667
indices of the maximum values along an axis	index ops mixin argmax axis	0.250000
analogous to ndarray repeat	ops mixin repeat repeats	0.333333
at particular time of day e g 9	at time time	0.066667
from 1-dimensional ndarray only use this if you	indexes index set	0.023810
read csv file	csv cls path header	0.066667
float values converted into	io formats float array formatter	0.055556
frequency datetime index with business	indexes	0.004651
shift without copying data the shifted data	slice shift periods	0.083333
value occupying requested label default	sparse sparse series get label default	0.083333
self as a sparse	sparse series as sparse	0.250000
compute locations of	core	0.001326
alias to closest period	period alias	1.000000
determine if each	match arr pat	0.166667
read csv file (discouraged please use :func pandas	csv cls path header	0.066667
don't allow a multi reindex on panel	panel needs reindex multi axes method level	0.500000
rewrite the assignment	rewrite assign tok	0.125000
attribute if it	series	0.006757
infer the fill value for the nan/nat from	dtypes infer fill value val	0.500000
file node must already exist and be table	hdfstore append key value	0.016667
the ftypes (indication of sparse/dense	ftypes	0.043478
of bytes in the underlying data	core indexes multi index nbytes	0.052632
column by	data name data	0.250000
we take a string-like that	string array	0.038462
best locator	plotting pandas auto date locator get locator	0.062500
1-dimensional ndarray	indexes	0.004651
if not found	core	0.001326
new index of the values	core indexes index putmask	0.111111
node must already exist and be	io hdfstore	0.014493
context manager for temporarily setting a timezone	set timezone	0.142857
using	core computation can use	1.000000
to left <= series <= right na	series between left right inclusive	0.200000
query or database	index_col coerce_float	0.062500
requested level the result will respect	sortlevel level ascending sort_remaining	0.166667
parameter	categorical validate ordered	0.055556
1-dimensional ndarray only use this	key	0.005051
/ pandas type to its	table type	0.055556
of the dataset	series	0.006757
timegrouper and return our resampler	core resample obj kind	0.083333
maps[0] raise keyerror is maps[0]	compat	0.030303
to create an	computation	0.038462
already exist	hdfstore append	0.016667
returns the float	formats float array formatter get result as	0.055556
iterator over column name series pairs	core data frame iteritems	1.000000
get/create the info for this name	io get info info name	0.333333
label for first non-na/null value	data frame first valid index	0.250000
an axes dictionary	ndframe construct axes dict axes	0.166667
positional indexer cannot	has valid positional setitem indexer indexer	0.052632
simple	simple	1.000000
to convert timedelta-like	td index cmp opname	0.055556
algos groupsort_indexer implements counting sort and it	index sorter group_index ngroups	0.250000
sets the view limits	date locator autoscale	0.055556
from 1-dimensional ndarray only use this	core indexes index	0.007042
of arr1 and arr2 are	util equal contents arr1 arr2	0.066667
a result set coerce	coerce	0.025641
of value from 1-dimensional ndarray only use this	categorical index get value series	0.100000
if we opened it retrieve pandas object stored	hdf path_or_buf key	0.333333
parse specified sheet	io excel file parse	0.125000
alert	parser alert	0.200000
where elements of v should	indexes frozen ndarray searchsorted v	0.033333
this is defined as	view cls	0.047619
a	io html frame parser build	0.014706
return a tree-like object that can	frame parser build	0.014706
is an	interval dtype is	0.066667
process of casting data from	safe casting cls data	0.047619
create the grouper	grouper	0.058824
with the block i	io data col create for block cls i	0.333333
on sunday use day thereafter monday instead	tseries sunday to monday dt	0.333333
block return result block from	block	0.008197
numpy array interface	categorical array dtype	0.500000
and b	a b raise_on_error	0.333333
locales that are available on	locales prefix normalize locale_getter	0.125000
the header	parser parse thead	0.111111
list representing the totally ordered cartesian product	core get group index labels shape sort xnull	0.066667
to compare numeric	core dtypes is numeric	0.333333
the key	key	0.015152
lookup of value from 1-dimensional ndarray only	core indexes categorical index get value series key	0.100000
occupying requested label default to specified	sparse sparse series get label default	0.083333
create and return a basegrouper which is	get	0.007143
managers into one	managers mgrs_indexers axes concat_axis copy	1.000000
iterate	io	0.003012
of nanoseconds (>= 0 and less	timedelta index nanoseconds	0.066667
compute a simple cross-tabulation of	index	0.002004
operations to convert timedelta-like	core indexes td index cmp opname	0.055556
to returning new	name inplace	1.000000
index or ndarray	datetime index	0.007042
to return a string representing a frequency	freq	0.016129
object that can be used to	io html frame parser build	0.014706
level of	level dropna	0.500000
return value at the given quantile	core series quantile	0.083333
validate that the where statement is of	validate where w	0.250000
resolve a	core computation scope resolve	0.166667
list of a func	func	0.011905
the values to be	block shape values ndim	0.050000
file node	append key value format	0.016667
array to the key as	key values	0.142857
of pattern or regular expression in	flags	0.029412
it if we opened it	io to hdf path_or_buf key value mode	0.166667
return the node with the key or none	hdfstore get node key	0.083333
is	core dtypes interval dtype is	0.066667
columns of this	columns values	0.037037
strings in each element in the series/index	core str	0.011364
an openpyxl v2 1	io openpyxl20writer	0.035714
csv	from csv cls path sep parse_dates	0.066667
value is found in	ops mixin isin	0.333333
new	tzdtype new	0.333333
this is defined as a copy with	indexes multi index view cls	0.047619
a formatter function for a range of timedeltas	format timedelta64 values nat_rep box	0.125000
fast lookup of value from 1-dimensional	set value arr key value	0.038462
value from 1-dimensional ndarray only	indexes period index get value series key	0.071429
packed bytes see :class packer	io msgpack	0.025000
dispatch to apply we are stripping	by mixin apply func name	0.050000
specialized intersection for datetimeindex objects may	index intersection other	0.052632
cast values	base cast types values	0.500000
midnight length is unaltered	datetime index normalize	0.125000
used	io	0.003012
shift without copying data	ndframe slice shift	0.083333
to handle na filling of take	index assert take fillable values indices	0.250000
fast lookup	index set value arr key	0.023810
cross-tabulation of	crosstab index columns	0.066667
representing the totally ordered cartesian product of	index labels shape sort xnull	0.066667
list-like indexer return	interval index convert list indexer keyarr kind	0.066667
determine	core str match arr	0.166667
when	core	0.001326
timedelta-like	indexes td index cmp	0.055556
singular 'name' parameter for general index and	core indexes index validate names	0.066667
is datetimelike	to datetimelike data copy	0.125000
of the axis indicies	core panel extract axes	0.142857
nrows ncols	custom dataframe nrows ncols	0.250000
vector of label values for requested level	get level values level	0.250000
am never	categorical block is	0.100000
return the block manager from a dataframe	core sparse to manager sdf	0.052632
holidays	tseries abstract holiday calendar holidays	0.166667
likely want to take the	core	0.001326
custom ast walker parsers of	base expr visitor	0.200000
to deal with nat-like arg is a	arg	0.018868
plotting	plotting	0.555556
that can be	frame parser	0.012500
and be	io hdfstore append key	0.016667
a	resampler	0.107143
a	ordered cls	0.055556
concatenation of an datetimelike array of	dtypes concat datetime	0.125000
float that can safely be cast	name val min_val	0.083333
are stripping all of the _apply kwargs	window center	0.076923
initializes holiday object with a given set a	tseries abstract holiday	0.100000
minimum value of	ops mixin min	0.111111
take which	core take nd arr indexer axis	0.125000
over column	core data frame	0.005917
string representation for this	unicode	0.058824
check whether	io validate	0.031250
from the input	data	0.009709
array of	array	0.027778
window of type window_type and size window on	arg window win_type min_periods	0.100000
maps[0] raise keyerror is	chain	0.031250
concise listing	list keys width _print	0.111111
in the series extract groups from the	core str extract	0.035714
package is	package pkg_name min_version max_version app	0.083333
a sparse array do not copy by default	sparse array kind fill_value copy	0.500000
url has a	url url	0.045455
index or maximum along an axis	index ops mixin max axis	0.333333
adjusted for groupby	index codes for groupby sort	1.000000
update index attributes e g freq depending	index maybe update attributes	0.200000
an positional	ndframe indexer has valid positional	0.250000
storable	storable	1.000000
expected	expected	0.500000
set the dataframe index row labels	core data frame set index	0.333333
convert an object	core computation convert	0.250000
where elements of v should	searchsorted v	0.033333
of bytes in the underlying	core indexes multi index nbytes deep	0.052632
two datetimeindexes	index sub datelike dti other	0.333333
to table	io hdfstore append key value	0.016667
validate that an positional indexer cannot enlarge its	has valid positional setitem indexer indexer	0.052632
merge this is similar	core reshape merge	0.166667
a code to a rule_code	freq code	0.125000
stderr in a buffer so that	stderr f	0.125000
don't allow a multi reindex on panel	core panel needs reindex multi axes method	0.500000
of the shape of the underlying data	core index ops mixin shape	0.250000
get integer location for requested label	index get loc key method tolerance	1.000000
used when	ndframe	0.005025
decorator	args decorator	0.111111
packed bytes see :class packer for	msgpack	0.022222
make	deep	0.222222
specialized shift	index ops mixin shift n	0.250000
a new unit if needed otherwise return from	datetime tzdtype new cls unit	0.055556
writing stata	frame to stata	0.200000
tabular environment table you	latex buf columns col_space header	0.100000
for dataframe and	core ndframe	0.005051
if the passed data is of datetime/timedelta type	core reshape coerce to type x	0.250000
sets the view limits	plotting time series date locator autoscale	0.055556
of all the classes which represent time-seires	util all timeseries index	0.333333
python datetime	core indexes datetime index	0.007634
a hack to accelerate unioning	index union many others	0.040000
compute variance of	by var ddof	0.166667
helper function to convert	rowlabels collabels	0.333333
sql query or	sql sql con index_col coerce_float	0.142857
the key for	key	0.005051
an object	core dtypes	0.018519
this is defined as a copy	multi index view cls	0.047619
feather-format object from the file path	io read feather path	0.333333
is the resampling from a dataframe column or	core resampler from selection	0.200000
normalized locales that	util valid locales locales normalize	0.050000
append to table in file node	append key value format append	0.125000
from a 1d array	index from intervals cls data	0.125000
the same type as the index (so we	at indexer convert key key is_setter	0.090909
lookup of value from 1-dimensional ndarray only use	datetime index get value series key	0.071429
is called via the 'numpy' library	take with convert convert args kwargs	0.055556
ndarray only	set value arr key	0.023810
exist and be	append	0.012987
array of whether each index value	indexes datetime index ops	0.034483
terms for	terms	0.034483
subplots	plotting subplots	0.125000
check whether or not the	io	0.003012
value from 1-dimensional ndarray only use	set value arr key value	0.038462
read csv file (discouraged please	csv cls path header	0.066667
append rows of other to the end of	append other	0.200000
a multiindex on a particular axis	axis	0.022727
not supported for panel objects and	panel to	0.027027
the actual sparse	sparse sparse	0.034483
apply	semi month offset apply index	0.500000
called after a	indexes period index array wrap result	0.050000
use this if you	core indexes	0.004762
same	core ndframe	0.005051
fixed frequency datetime index	core indexes bdate range start	0.083333
a tree-like object that can be	frame parser build	0.014706
wrap comparison operations to convert datetime-like	cmp opname nat_result	0.066667
insert item at	insert loc item	0.333333
already	hdfstore append key value format	0.016667
reindex and return a new	reindex new_index	0.250000
and return them as a block	block	0.016393
can be used to iterate over	frame parser	0.012500
to table in file node	hdfstore append key value format	0.016667
elements of arr1 and arr2 are	equal contents arr1 arr2	0.066667
format of	format	0.012346
product	product	0.555556
a scipy	a dense_index	0.250000
the series extract groups from the	core str extract frame	0.047619
dataframe sorted by the n largest values of	core data frame nlargest n	0.166667
series or by a	groupby by axis	0.045455
sanitize an index type to	core sanitize index data index	0.200000
object coercible to	join overwrite filter_func	0.076923
a boolean whether i can attempt conversion to	is convertible to	0.333333
return a version	block	0.008197
convert to our native types format slicing	categorical block to native types slicer na_rep quoting	0.250000
pack object o and return packed bytes	packb o	0.055556
(attr formatted_value)	core indexes index format attrs	0.142857
am never	core categorical block is	0.100000
symmetric difference of two index objects	core indexes index symmetric difference other result_name	0.166667
for a range of timedeltas	format timedelta64 values nat_rep box	0.125000
numpy / pandas type to its corresponding json_table	json as json table type x	0.250000
interval objects parameters	core indexes interval	0.062500
convert to our native types	float block to native types slicer	0.250000
number of	core indexes	0.009524
we have a full length slice	is full slice	1.000000
returns the float	formats float array formatter get result as array	0.055556
in a block of same	core block make block same	0.333333
concatenation of an datetimelike array of arrays	dtypes concat	0.100000
for making this object picklable	indexes timedelta index setstate state	0.333333
ix	ix	1.000000
concatenation of an datetimelike array of arrays	concat datetime to_concat	0.125000
block from	block	0.008197
return the	categorical	0.009615
with indexer	indexer	0.009174
construct dataframe from dict of array-like or dicts	core data frame from dict cls data	0.200000
string starting at the end of the string	rsplit arr pat n	0.037037
with blockmanager	single block manager	0.400000
meta data	index col write metadata handler	1.000000
to get lines 0) there are headers	python parser get	0.166667
create and return the block manager from a	manager sdf columns	0.052632
in file node must already exist	io hdfstore append key value format	0.016667
index objects	indexes range index	0.063830
'series argmin' is called via the 'numpy' library	argmin with skipna skipna	1.000000
starting at	rsplit arr pat	0.037037
suitable for initializing the gradientfill stop	stop cls	0.066667
categorical by default	core categorical sort values inplace	0.166667
last non-na/null value	data frame last valid index	0.250000
to apply we are	apply func name	0.050000
this only if the process of casting	safe casting	0.125000
this function is called via the 'numpy' library	take with	0.055556
determine if	match arr pat case	0.166667
at the given quantile	core series quantile	0.083333
a copy of a series excluding elements from	series group	0.030303
value from 1-dimensional ndarray	index get value series	0.250000
the object is a sequence of objects	core dtypes is sequence	0.166667
info axis	get info	0.250000
convert timedelta-like to timedelta64	core indexes td index cmp opname	0.055556
datetimeindex with times to midnight	indexes datetime	0.011494
return	compat chain map	0.032258
index to	index b	0.041667
write records stored in a dataframe	frame name if_exists	1.000000
the given delimiter string starting at	rsplit arr pat n	0.037037
index and	core indexes range index	0.021277
a boolean if we	a b	0.083333
reset the cacher	ndframe reset cacher	1.000000
by str df	str	0.017544
indicated if we have mixed levels	index have mixed levels	0.200000
series/index ends with passed pattern	str endswith arr pat	1.000000
of the index or minimum along an axis	core indexes datetime index ops mixin min axis	0.333333
panel to a separate excel sheet	core panel to excel path na_rep engine	0.111111
that an positional indexer	has valid positional setitem indexer indexer	0.052632
options for printing and representing objects	options	0.041667
conform set of _constructor_sliced-like objects to either an	core panel homogenize dict frames intersect dtype	0.066667
block if we are not	core block	0.010870
of value from 1-dimensional ndarray only use	core indexes categorical index get value series	0.100000
subset rows or	core ndframe filter items like regex axis	0.166667
datetime date objects (namely the date	datetime index date	0.333333
extended	core indexes range index extended	1.000000
the float values converted into	float array formatter get	0.055556
of other to the end of	other	0.013514
be a single block and	new	0.058824
data as a	indexes index	0.007353
views note this is *not* the same	is other	0.055556
the array interface	core sparse sparse series array result	0.250000
chainmap with	compat chain map	0.032258
shift without copying data the shifted data	core ndframe slice shift periods	0.083333
to indexer and return	indexer	0.018349
inferred types one for each level	indexes multi index inferred type levels	0.333333
style_dict to an xlsxwriter format	xlsx writer convert to style style_dict num_format_str	0.166667
make a copy of	multi index copy	0.166667
reindex	indexes categorical index reindex	1.000000
a single element pandasobject	core	0.001326
deprecated use :meth pandas to_datetime instead	indexes index to datetime dayfirst	1.000000
a list of the underlying data	indexes datetime index ops mixin tolist	0.333333
implementing	group by	0.016129
read csv file (discouraged please use :func	core series from csv cls path sep	0.066667
:mod datetime to	dt to	0.125000
after	series array wrap	0.100000
value from 1-dimensional ndarray only use this if	indexes categorical index get value	0.100000
the float values converted	formats float array formatter get result as	0.055556
the 'numpy' library the	with convert convert args	0.055556
and expected	exc_type exc_value trace_back	0.100000
return a tree-like object that can be	parser build	0.014706
use this if	indexes index set value arr	0.023810
swap level i with level j do	core indexes multi index swaplevel i j	0.333333
with times to	datetime	0.006711
unique elements of arr1	contents arr1	0.066667
construct dataframe from dict of array-like or	core data frame from dict cls data orient	0.200000
return the locations	locator call	0.333333
read csv file (discouraged please	core series from csv cls path sep	0.066667
map the axis to the block_manager axis	core ndframe get block manager axis axis	0.166667
use this if	set value arr key	0.023810
evaluate the block return result block from	block eval	0.333333
to class python 2 and python	cls name	0.125000
int64 with null values	values	0.008547
to an openpyxl style object	to style cls	0.500000
try to deal with nat-like arg	arg errors	0.026316
google bigquery	read gbq query project_id index_col col_order	0.250000
a line from buffer filling buffer if required	python parser buffered line	0.500000
helper to call encode before writing to file	writer write to_write	0.083333
sparse/dense and	core	0.001326
the join	join	0.200000
series excluding	core series group	0.030303
the number of temporary variables in this scope	core computation scope ntemps	0.250000
string cast it to timedelta	timedelta index maybe cast	0.333333
called after a	indexes period index array wrap	0.050000
slice	core categorical slice slicer	0.111111
return a new block (of a	block setitem indexer	0.066667
stata date formats to a type	datetime to stata type	0.200000
categorical to	categorical	0.019231
concatenate to_concat which has the same class	index append same dtype to_concat	0.500000
dateaxis	dateaxis	1.000000
x in	in x	0.166667
of the (attr formatted_value)	mixin format attrs	0.142857
only use this	indexes	0.004651
return the unicode normal form for the	core string methods normalize form	0.066667
for background_gradient that don't break with non-numeric data	maybe numeric slice df slice_ include_bool	0.500000
bins to which each value	bins	0.090909
for running code that expects to raise	util assert produces	0.071429
object potentially casting to object	to embed keep_tz	1.000000
draw histogram of the dataframe's	plotting hist frame data	0.200000
of v	frozen ndarray searchsorted v	0.033333
sets names on levels warning	multi index set names names level validate	0.200000
attributes	attributes	0.307692
and	format	0.012346
to set the _typ here	series set axis axis labels fastpath	0.200000
column and index parameters	set value index col	0.333333
called after a ufunc needs additional handling as	wrap result context	0.029412
already exist and be table	key	0.005051
arr1 and arr2 are equivalent	arr1 arr2	0.066667
return dtype and n/a values	dtype and	0.125000
object for datetimelike properties of the series	properties	0.046512
must already exist and	format	0.012346
node with the key	hdfstore get node key	0.083333
convert to	float block to	1.000000
values at the new freq essentially a reindex	resampler asfreq fill_value	0.066667
convert to our native types format	datetime block to native types slicer	0.250000
type not dtype instance associated	type arr_or_dtype	0.142857
handling	index array wrap	0.033333
datetime date	datetime	0.006711
block return result block from the result	block	0.008197
attempt to construct this type from	dtypes interval dtype construct from	0.166667
at input threshold s	core ndframe clip lower upper axis	0.333333
only use	core indexes index set value arr key	0.023810
spreadsheet-style pivot table as a dataframe the levels	reshape pivot table data	0.166667
gets called	array wrap result	0.075000
copy of a series excluding	series group	0.030303
to ndarray raises on scalar	indexes index coerce to ndarray cls	0.166667
additional handling as	core indexes period index	0.034483
string-like that is object dtype and	io convert string array data	0.038462
repeats	repeats	0.454545
sets names on levels warning mutates!	indexes multi index set names names level	0.200000
if we are index sliceable then return	index sliceable obj	0.083333
a ndarray like into a	json parser	0.071429
internal method to handle na filling of take	indexes index assert take fillable	0.250000
object that	io html frame parser	0.012195
to an xlwt style object	xlwt writer convert to style	0.500000
having a singular 'name' parameter for general index	indexes index validate names	0.066667
make a repr	repr	0.040000
string in the series extract groups	extract frame	0.047619
spreadsheet-style pivot table as a dataframe	reshape pivot table data values	0.166667
return the actual filter format	core computation filter bin op format	0.333333
conserve rangeindex type for scalar and	indexes range index getitem key	0.166667
try to parse a ndarray like into a	json parser try convert data name	0.500000
determine if each string	core str match arr	0.166667
values from this	index col convert values	0.333333
labels returning a dataframe	core data frame	0.005917
convert to object if	index to safe	1.000000
via the 'numpy' library	with convert	0.055556
to midnight length	datetime index	0.007042
and other to int64 with	other	0.013514
index objects contain the	datetime index ops mixin	0.029412
strings to numpy	numpy	0.090909
sanitize an index type to return an	core sanitize index data index	0.200000
used to iterate over	io	0.003012
perform an	method axis limit	1.000000
convert a	core ndframe indexer convert	0.500000
fast lookup of value from 1-dimensional ndarray	value	0.005155
a simple cross-tabulation of	reshape crosstab	0.066667
spreadsheet-style pivot table as a dataframe	reshape pivot table data values index	0.166667
cvalues	cvalues	1.000000
for a tz-aware type return an encoded	io get tz tz	0.066667
:class packer for options	io msgpack	0.025000
of all the various index	all index	0.142857
returns the float values converted into	formats float array	0.055556
might need to coerce a	coerce freq	0.125000
in	ndframe	0.005025
try to parse a ndarray like	try convert data	0.200000
init self from ndarray or list of lists	frame init matrix data index columns	1.000000
memory usage of my	index memory usage deep	0.200000
constructs ndframe from group with provided name parameters	core group by get group name	1.000000
indicated if we have mixed	index have mixed	0.166667
block manager from a dataframe	to manager sdf columns index	0.052632
multiindex at	core indexes multi index	0.013158
slice of my values	block slice slicer	0.083333
elements that are non-zero this method is equivalent	core series nonzero	0.166667
return a string representation	frozen ndarray unicode	0.083333
an	dtype	0.010989
fixed frequency datetime index with custombusinessday as the	core indexes cdate range start	0.083333
a spreadsheet-style pivot	reshape pivot	0.166667
whether or not the	io	0.003012
dir	dir	1.000000
to iterate over the dom	frame parser build doc	0.125000
ndarray only use this if	indexes index set value arr key	0.023810
a dtype compat na value parameters	dtypes na value for dtype dtype	0.333333
perform the reduction type operation	core categorical reduce op name	0.500000
boolean if we	is	0.010582
we have	have	0.083333
read sql database table into a	io sqldatabase read table table_name index_col coerce_float parse_dates	0.333333
to a dataframe	sparse data frame	0.090909
multiindex from the	core indexes multi index from	0.142857
passed a list-like indexer	convert list indexer keyarr kind	0.066667
block we must	core non consolidatable mix in	0.090909
the axis indicies	core panel extract axes data	0.142857
attempt to infer better dtype	convert datetime numeric timedelta coerce	0.071429
as	array wrap	0.025000
to table in file	hdfstore	0.014925
type	categorical dtype	1.000000
index objects contain the	core indexes datetime index	0.007634
index objects contain	index ops	0.033333
new manager with the blocks	block manager combine blocks	0.250000
a code to a rule_code	code	0.076923
array	sparse array array	1.000000
can be compiled into	compilable	0.142857
handle na filling of	fillable values indices allow_fill	0.125000
series columns for dataframe and major_axis	ndframe	0.005025
j do not change the ordering	j	0.034483
apply if as_index=true	with as	0.200000
array interface	array dtype	0.125000
result as block	block getitem block	0.250000
index or minimum along an axis	indexes datetime index ops mixin min axis	0.333333
not dtype instance associated with an array	arr_or_dtype	0.047619
valid column name for generation (e g	core computation bin op	0.055556
downsample	resampler downsample	0.200000
sets names on	core indexes multi index set names names	0.200000
missing indexers	convert from missing	0.500000
and right	right exact check_names	0.500000
and right	right vertical	0.250000
csv file (discouraged please use	csv cls	0.066667
sets the view limits to the nearest	plotting time series date locator autoscale	0.055556
attempt to infer better dtype for	core ndframe convert datetime numeric timedelta coerce	0.071429
caption on a	set caption caption	0.166667
render the	io formats styler render	0.142857
table as a dataframe the levels in the	table data values index columns	0.200000
from 1-dimensional ndarray only use this if you	indexes index set value	0.023810
simple cross-tabulation of	core reshape crosstab	0.066667
to the :meth pandas dataframe reset_index function	reset index level drop name inplace	0.142857
left <= series <= right na values	series between left right inclusive	0.200000
a copy of a series excluding elements from	core series group	0.030303
a fixed frequency timedelta index with day as	core indexes timedelta range start	0.083333
operations to convert timedelta-like to timedelta64	td index cmp	0.055556
we might need to coerce a code	maybe coerce freq code	0.076923
union of	indexes multi index union	0.333333
number of times	arr repeats	0.200000
of sparseseries (with nan fill_value)	core sparse	0.041667
to accelerate unioning	indexes datetime index union many others	0.040000
index objects sortedness of the result	core indexes range index	0.021277
construct this type from	core dtypes interval dtype construct from string	0.166667
return resolution	tseries resolution get	0.333333
copy of this object names dtype	copy names dtype	0.333333
to table in	key value	0.011628
class	group by	0.016129
as a sparse	core sparse sparse series as sparse	0.250000
general index	core indexes index	0.007042
align a set of	core computation align	0.250000
labels in requested axis removed	ndframe drop labels axis level inplace	0.250000
to coerce a	maybe coerce	0.125000
types	types slicer na_rep date_format quoting	0.200000
and return	chain map	0.034483
generation (e g	core computation bin op	0.055556
use	core indexes index set value	0.023810
boolean if the passed type is	is	0.005291
object to	core ndframe to	0.040000
the grouper indexers	grouper obj key axis	0.142857
reshape data (produce a "pivot" table) based	data frame pivot index columns	0.200000
use this	index set	0.022727
of unique elements of arr1 and arr2 are	equal contents arr1 arr2	0.066667
conserve rangeindex type for scalar and slice keys	core indexes range index getitem key	0.166667
the built up styles	styler	0.022222
return a slice of my values	core datetime tzblock slice slicer	0.083333
convenience function for interpolate bpoly from_derivatives	from derivatives xi yi x	1.000000
a method to class python 2 and	method cls	0.076923
force non-datetime columns to be read as	io parse date columns data_frame parse_dates	0.166667
format try to deal with nat-like arg	arg	0.018868
internal	ndframe	0.005025
as index	indexes index	0.007353
series that is datetimelike	to datetimelike data copy	0.125000
our	core	0.001326
return a tuple of the	core	0.001326
to deprecate a keyword argument of a function	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
can	html frame parser	0.012658
array interface return my	core indexes interval index array result	0.125000
return a	io html frame parser build	0.014706
if we are index sliceable then return my	convert to index sliceable obj key	0.083333
attempt to write text representation of object to	to	0.006329
day of the month and day_of_month	semi month end	0.166667
coerce a scalar to a compat for our	index coerce scalar to	0.071429
exception raised matches the expected exception and	assert raises contextmanager exception matches	0.142857
type not dtype instance associated with	type arr_or_dtype	0.142857
window of type window_type and size window	arg window win_type	0.100000
the shape of the values to be	block shape values ndim shape	0.083333
to	datetime	0.006711
a datetimelike dtype	datetime value dtype errors	0.166667
take the codes by the	core categorical take	0.200000
ensure incoming data	data	0.009709
that can	html frame parser	0.012658
fast version of transform only applicable	series group by transform fast func	0.500000
data in the	data	0.009709
by str	str	0.017544
via the 'numpy' library the third	compat numpy validate take with convert convert	0.055556
as a frame table	multi series table	0.200000
gets called	core indexes index array	0.100000
datetime date objects (namely	datetime index	0.007042
only use	indexes categorical	0.071429
index parameters	sparse data frame set value index	0.250000
of regular expression	flags expand	0.200000
create a new multiindex from	core indexes multi index	0.013158
block of	block	0.008197
used to iterate	frame	0.009091
validates that	validate ordered cls	0.055556
return the td elements from a row element	frame parser parse td obj	0.083333
wrap comparison operations to convert timedelta-like	indexes td	0.055556
gets called after a	indexes period index array wrap result	0.050000
iterate over dataframe rows as index series pairs	core data frame iterrows	1.000000
specialized intersection for datetimeindex objects may be	index intersection	0.142857
a particular dataframe invoked by unicode df	data frame unicode	0.166667
tree-like object that can be used	io html	0.012987
read csv file (discouraged please	series from csv	0.066667
return sparsearray from	core sparse sparse	0.034483
values at the new freq essentially	resampler asfreq fill_value	0.066667
1-dimensional ndarray only	core indexes index set value arr	0.023810
- a multivariate data visualization algorithm parameters	frame class_column ax color	0.200000
csv	core data frame from csv cls	0.066667
create a new unit if needed otherwise	datetime tzdtype new cls unit	0.055556
a ufunc needs	array wrap result context	0.029412
right	right exact	0.500000
table this is generally only useful	hdfstore select column key column	0.142857
1-dimensional ndarray	core	0.001326
to apply we are stripping all	core group by mixin apply func name	0.050000
minimum value of the index	datetime index	0.007042
table this is generally only useful to	io hdfstore select column key column	0.142857
is an iterator	is iterator	1.000000
the obj with a groupby	groupby	0.028571
index for series columns for	ndframe	0.005025
fixed frequency datetime index with	core indexes period range start end periods freq	0.083333
read csv file (discouraged please use :func	csv cls path sep parse_dates	0.066667
a sequence of terms for instances of pandasobject	computation any pandas objects terms	0.250000
return the	ndframe	0.010050
a fixed frequency timedelta index	indexes timedelta range start end	0.083333
of a series that is datetimelike	to datetimelike	0.125000
string starting at the end	rsplit arr pat n	0.037037
object o and return packed	o	0.043478
packed bytes see :class	io msgpack	0.025000
bytes in	range index nbytes	0.052632
representing the totally ordered cartesian product of	group index labels shape sort xnull	0.066667
fast lookup of value	value arr key value	0.038462
curve with	start end return_name	0.333333
additional handling as	core indexes period index array wrap	0.050000
value	sparse sparse series get value	1.000000
we internally represent the data	tzblock external	1.000000
midnight length is	core indexes	0.004762
environment table you can	latex	0.076923
for our input	core sparse sanitize values arr	0.200000
and n/a values to	and	0.066667
to convert datetime-like to datetime64	indexes period index cmp opname nat_result	0.066667
converts a style_dict to an openpyxl style object	io openpyxl1writer convert to style cls style_dict	0.166667
unicode strings	randu	0.142857
an object dtype	dtypes	0.031746
the counts of	counts f	0.041667
handles preprocessing for	core reshape preprocess for	1.000000
sort multiindex	indexes multi	0.014493
internal property property synonym for as_blocks()	core ndframe blocks	0.166667
that can be used to iterate over the	html frame parser build	0.014706
columns for dataframe major_axis	core ndframe iteritems	0.055556
from	io	0.006024
internal method to handle na filling of take	assert take fillable values indices	0.250000
string or tuple representation or datetime	freq	0.016129
must already exist	hdfstore append key	0.016667
return our	index resampler get	1.000000
boolean if we are a single	is	0.005291
return resolution str against frequency str	tseries resolution get str from freq cls freq	1.000000
times to	core	0.001326
a	core categorical validate ordered	0.055556
na_position	na_position	1.000000
panel objects and will	core panel	0.019231
:meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace limit	0.333333
new datacol with	name cname	0.111111
pick the best locator based on a distance	pandas auto date locator get locator dmin dmax	0.250000
a series that is datetimelike (e	maybe to datetimelike data copy	0.142857
function is called via the 'numpy' library the	validate take with convert	0.055556
a	crosstab index columns	0.066667
subarr	subarr	0.250000
at particular time of day	core ndframe at time time	0.066667
return the node with the key or	hdfstore get node key	0.083333
indices that would sort the index	index argsort	0.166667
make a multiindex from the	core indexes multi index from	0.142857
reshape data (produce a "pivot" table) based on	core data frame pivot index columns	0.200000
subclass of styler with	io formats styler	0.021277
given axis omitted where alternately any or all	dropna axis how thresh subset	0.100000
context manager for temporarily setting a timezone	timezone	0.083333
perform an asof merge	merge asof	0.333333
array of whether each index	index	0.002004
a series of columns	core ndframe groupby	0.250000
frequency datetime index with business day as the	indexes bdate	0.050000
user about a malformed	malformed msg	0.100000
ndarray argsort argsorts the	series argsort	0.083333
wrap op result	wrap result	0.022727
block manager from a dataframe	sparse to manager sdf columns	0.052632
create the grouper indexers	grouper obj key axis level	0.142857
needs additional	period index array wrap result	0.050000
given a 1d array return an array of	util hash array vals	0.083333
of a series that is datetimelike (e	core indexes maybe to datetimelike data copy	0.142857
and the attrs from _build_styles	io formats styler translate	0.200000
tree-like object that can be used to	html frame parser build	0.014706
(produce a "pivot" table) based on	pivot index columns	0.111111
for each element in	map indices py arr	0.090909
the values of	core	0.001326
put single value at passed column and index	data frame set value index col value takeable	1.000000
stata binary dta files from array-like objects parameters	data frame to stata fname convert_dates write_index encoding	0.333333
gets called prior	array prepare	0.111111
at the new freq essentially a	core resampler asfreq fill_value	0.066667
like into	json parser	0.071429
have a fully reindex-output to the levels	core data frame group by reindex output result	0.045455
new	new	0.470588
construct dataframe from dict of	core data frame from dict	0.200000
concat	concat index	1.000000
that we	core categorical validate ordered	0.055556
read sql database table into a	sqldatabase read table table_name index_col coerce_float parse_dates	0.333333
compute covariance with series excluding missing	series cov other min_periods	0.200000
convert tz-aware axis to target time	ndframe tz convert tz axis level copy	0.200000
packed	packb	0.022727
get a cross sectional for a given location	block manager fast xs loc	0.142857
object coercible	join overwrite filter_func	0.076923
values between particular times of	indexes datetime index indexer between	0.125000
return a tree-like object that	html frame parser	0.012658
in hdfstore parameters	io hdfstore put key	0.333333
index using the	core	0.001326
of	arr	0.013699
of	axis	0.022727
already exist and be	value	0.005155
making this object picklable	setstate state	0.333333
the block manager from a dataframe	sparse to manager sdf columns index	0.052632
series concat	core dtypes get series	0.250000
returns the float values converted into	formats float array formatter get result	0.055556
and arr dtype then fill	fill arr	0.500000
an	axes	0.043478
required package is installed	package pkg_name min_version	0.083333
the necessarily hierarchical index labels returning a dataframe	core data frame	0.005917
creates a new sparsearray from	core sparse sparse data frame sanitize column key	0.333333
used to iterate	parser build	0.014706
new unit	datetime tzdtype new cls unit tz	0.055556
the we have a dtype compat for the	name	0.025000
scope by	scope	0.076923
plural 'names'	name names deep	0.125000
boolean whether i can attempt conversion to a	core indexes is convertible to index other	0.333333
and return	map	0.029412
fixed frequency timedelta index with day as the	indexes timedelta range start	0.083333
reset_index	drop name	1.000000
datetimeindex with passed location s deleted	indexes datetime index delete loc	0.333333
general index and plural 'names' parameter for	core indexes index validate names name names deep	0.071429
object that can be used to iterate over	html frame parser build	0.014706
synonym for :meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace limit downcast	0.333333
interval objects parameters	core indexes interval index	0.062500
sets self _col_indices	io python parser handle usecols columns usecols_key	1.000000
gets called	period index array wrap result	0.050000
dtype	core get empty dtype	0.500000
default_axis	default_axis	1.000000
create a pytables index on the	table create	0.043478
to apply we are	mixin apply func name	0.050000
override this only if the process of casting	index assert safe casting	0.125000
single dict created	fromkeys cls	0.333333
a blockmanager	block manager	0.021277
block_manager axis	ndframe get block manager axis axis	0.166667
length is	indexes	0.004651
(attr formatted_value)	indexes index format attrs	0.142857
i am an indexed column	index col is indexed	0.200000
tsplot	tsplot	1.000000
difference of n between	n axis	0.100000
indexer like _name in the class	name indexer	0.083333
gets called after a	core series array wrap	0.100000
cartesian product	group index labels shape sort	0.200000
datetimelike methods (as	datetimelike methods cls	0.066667
get	indexes multi index get	0.100000
is called via the 'numpy' library the	validate take with	0.055556
to closest period	period	0.016667
outside world format currently just	core block external values dtype	0.125000
of pandasobject	computation any pandas objects	0.250000
specialized intersection for datetimeindex objects may be	index intersection other	0.052632
levels names	names	0.038462
table in file	hdfstore append key value	0.016667
a	index resampler	0.130435
called after a	period index array wrap	0.050000
add	core indexes index add	1.000000
long	long	1.000000
set the precision used to	io formats styler set precision precision	0.333333
name this allows simpler access to columns for	name	0.025000
we take a string-like that is	io convert string array data	0.038462
decorator for creating a class with a metaclass	add metaclass metaclass	0.125000
the number	range index	0.021739
x in y	computation in x y	0.047619
totally ordered cartesian product of all	index labels shape sort xnull	0.066667
the float	io formats float array formatter	0.055556
boolean list indicated if we have	multi index have	0.142857
of bytes in	indexes multi index nbytes deep	0.052632
supported for panel objects	core panel to sparse	0.037037
sparse floating point data in the form	sparse data	0.200000
create an indexer	ndframe create indexer cls name indexer	0.166667
compute a simple cross-tabulation of	crosstab index	0.066667
of the minimum values along an axis	datetime index ops mixin argmin axis	0.250000
difference between index values and index	index	0.002004
timedelta-like	td index cmp	0.055556
set a parameter value	value	0.005155
sequence of objects	sequence	0.090909
gets called after	array	0.041667
must already exist and	append key	0.016667
boolean mask of index to be returned from	index	0.002004
ufunc needs additional handling as	array wrap result context	0.029412
the index or maximum along an axis	datetime index ops mixin max axis	0.333333
that is thrown by an error is encountered	parser error	0.055556
passed a list-like indexer	index convert list indexer keyarr kind	0.066667
create a table	table create table	0.166667
from	cls	0.016949
indices that would sort the index	range index argsort	0.166667
take which sets	take nd arr indexer	0.125000
float is	eng float	0.200000
fast lookup of value from 1-dimensional ndarray	indexes period index get value	0.071429
manager	mgr	0.083333
like to	string like	0.111111
are index sliceable then return my slicer	index sliceable	0.083333
return base freq and stride info from	tseries base and stride freqstr	0.333333
convert to our native types format slicing if	datetime block to native types	0.250000
number of bytes in the underlying data	multi index nbytes deep	0.052632
with an arbitrary number of data	io legacy table read where	0.333333
internal dtype s bears the risk	subarr	0.050000
the flattened values of	index ravel order	0.037037
sub-classes to define	mixin gotitem key ndim subset	0.333333
each string in the series/index by indicated	core str repeat arr	0.045455
1-dimensional	set value arr key	0.023810
a series we by	core series group by	0.142857
needs	period index array	0.050000
new index of the values set	core indexes index putmask	0.111111
we take a string-like that is object dtype	io convert string array data	0.038462
to table in file node must already	value	0.005155
we have bytes decode them	core computation ensure decoded s	0.166667
add a	add	0.035714
concatenation	concat datetime	0.125000
handles preprocessing for cut where we convert	reshape preprocess for cut x	0.200000
arr2 are equivalent	arr2	0.090909
clear maps[0], leaving maps[1 ] intact	compat chain map clear	1.000000
blklocs	blklocs	0.833333
interpolate	interpolate	0.538462
a new unit	dtypes datetime tzdtype new cls unit tz	0.055556
index pairs for each element in the	map indices py arr	0.090909
interpolate values according to	core resampler interpolate method axis	0.166667
1-dimensional ndarray only use	set value arr	0.023810
property property synonym	ndframe	0.005025
boolean if values in	core index ops mixin is	0.100000
dtype possible	indexer dtype	0.500000
a categorical	indexes categorical index	0.047619
objects	core indexes	0.004762
the actual sparse	core sparse sparse	0.034483
ndframe	ndframe truncate	0.250000
set the _typ here	series set axis axis labels fastpath	0.200000
ftypes (indication of sparse/dense and dtype)	core ndframe ftypes	0.055556
fixed	bdate range start	0.111111
for this	io index col read	0.250000
stata and	stata	0.022222
function is called via the 'numpy' library the	take with convert convert	0.055556
input data_columns and min_itemize and create a data	data columns data_columns min_itemsize	1.000000
up styles to html	formats	0.031250
value from 1-dimensional ndarray only use this if	core indexes datetime index get value series key	0.071429
that path's extension against the	excel writer check extension cls	0.125000
decode character	decode	0.166667
shift the block by periods	datetime tzblock shift periods axis mgr	1.000000
values to be	values	0.008547
if we are	core dtypes is	0.021277
return the length of a single	core length of	0.333333
passed a manager and a axes dict	mgr mgr axes dtype copy	0.333333
that create a	io sqlite table create	0.066667
fixed frequency datetime index with business	indexes bdate range start end	0.083333
the float values converted into	io formats float array formatter get	0.055556
add in	indexes datetime index ops mixin add	0.333333
of	core indexes multi index	0.026316
rows from self f skipping as	io fixed width reader get rows n skiprows	0.166667
returns the float values converted into strings using	float array formatter get result as	0.055556
coerce a scalar to a	period index coerce scalar to	0.071429
series extract groups from the	extract frame arr	0.047619
in	call	0.071429
error is encountered in	error	0.028571
boolean indicating if self is view of another	core ndframe is view	0.200000
dataframe	io formats data frame formatter	0.200000
the underlying data which is a categorical	core indexes categorical index values	0.333333
la re split in the series/index by	core str split arr pat	0.166667
via the 'numpy' library the	validate take with convert convert args	0.055556
of the data are	core data	0.041667
return a boolean whether this axes needs validation	ndframe indexer should validate iterable	0.166667
boolean if values in	mixin is	0.083333
the requested level the result will respect	sortlevel level ascending sort_remaining	0.166667
the 'numpy' library the	compat numpy validate take with	0.055556
datetime index with custombusinessday as the default frequency	core indexes cdate range start end periods freq	0.500000
csv	core data frame from csv cls path	0.066667
"reset" the styler	styler	0.022222
reduction type operation	categorical reduce op name axis	1.000000
handle na filling of take	assert take fillable	0.250000
and	key value format	0.016667
sql query or database table into a dataframe	sql sql con index_col coerce_float	0.142857
manager for running code that expects	util assert produces warning	0.071429
can be used	io html	0.012987
return a tree-like object	parser build	0.014706
label is not contained a	value label	0.066667
upgrading in place	mode propindexes keys	0.250000
evaluate the block return result block from the	core block eval func other raise_on_error try_cast	0.333333
write this as a	write	0.035714
apply we are	group by mixin apply	0.050000
cartesian product of multiple iterables parameters	product cls iterables sortorder names	0.500000
operations to convert timedelta-like	td index cmp	0.055556
the requested level	sortlevel level	0.142857
index using the index's frequency	core ndframe tshift periods freq axis	0.066667
s from the	where other cond align raise_on_error	0.333333
threshold	threshold	1.000000
return an item pair from	popitem	0.043478
trying to operate on an old version?	io table validate version where	0.250000
this getitem defers to the underlying array which	core indexes datetime index ops mixin getitem key	0.333333
multi-level index return new dataframe with labeling information	core data frame reset	0.027778
trys to return a string representing a frequency	freq	0.016129
gets called	core indexes period index array wrap	0.050000
given an	get interval	0.125000
return	core indexes categorical index	0.047619
convert to our native types format slicing if	block to native types slicer na_rep	0.250000
return a string representation for this	core indexes index unicode	0.083333
reshape long-format data to wide generalized inverse of	core reshape lreshape data groups dropna	0.500000
to all values found in index	transform index index	0.500000
series we by	core series group by	0.142857
a ndarray of	core index	0.111111
make sure an expression is not an	core computation check expression expr	0.200000
to indexer and return them as	nd indexer axis	0.043478
box function to get object from internal representation	ops mixin box func	0.142857
type window_type and size window on	window arg window win_type min_periods	0.100000
iter2	iter2	0.416667
offset/observance	rule	0.050000
return a tree-like object that can be	io html	0.012987
iterate over the dom	build doc	0.125000
define an builtin function for this	builtin func arg	0.200000
datetimeindex	core indexes period index	0.034483
the list of row elements from the	io	0.003012
apply we are stripping all of the	mixin apply func name	0.050000
between index values and index	datetime index	0.007042
tuple of the	core	0.001326
values to be at least	shape values	0.050000
given a date in xport format return	io sas parse	0.066667
a	html frame parser build	0.014706
to the underlying	indexes datetime index ops mixin	0.029412
via the 'numpy' library the	take with convert	0.055556
get integer location	indexes period index get loc	1.000000
dtype and n/a	core get empty dtype and	0.125000
dict {group name -> group indices}	core group by indices	1.000000
we have	index have	0.142857
conserve rangeindex type for	indexes range index getitem key	0.166667
for an ordered multiindex compute	core indexes multi index	0.013158
from	html frame parser parse	0.250000
to make a repr function return fillvalue for	repr fillvalue	0.083333
exist and	hdfstore append	0.016667
a tree-like object that can be used	frame	0.009091
namely intervalindex to control get_slice_bound	indexes index get loc only exact matches key	0.142857
alert a user about a malformed row	io python parser alert malformed msg	0.500000
return an internal format currently just the	block internal values dtype	0.111111
an array repr of this	index	0.002004
arraylike /	arraylike arr	1.000000
valid	valid	0.571429
and return the op string for this	bin op generate	0.066667
a and b	a b raise_on_error	0.333333
an intervalindex from a 1d array of interval	interval index from intervals cls data	0.333333
file node must already exist	hdfstore append key value	0.016667
datetimeindex with	core	0.001326
of tuples of the (attr formatted_value)	indexes index format attrs	0.142857
csv file	csv cls path sep	0.066667
dict associating	io stata reader value labels	0.142857
validates that	categorical	0.009615
concatenation of an datetimelike array of arrays	dtypes concat datetime to_concat	0.125000
to an ndarray copy	dtype copy	0.032258
gets called after	indexes period	0.034483
decorator to deprecate a	deprecate	0.090909
we have an object	dtypes	0.015873
multiindex from the	multi index	0.020000
create and setup my atom	col set atom	0.333333
object that can be used to	build	0.013514
the key for valid keys across my indexer	ndframe indexer has valid tuple key	0.500000
the view limits to the nearest multiples of	series date locator autoscale	0.055556
to a fixed size	encoding itemsize	0.142857
is of the	is	0.010582
id deprecated and a replacement key defined will	translate key key	0.200000
index	indexes interval index	0.062500
in file node must already exist and be	hdfstore	0.014925
equivalent to shift without copying data	ndframe slice shift periods	0.083333
indices that would sort the index and	index argsort	0.166667
representing the totally ordered cartesian product of	sort xnull	0.066667
boolean if we	core indexes index is	0.083333
encode input values as an enumerated type	core factorize values	0.111111
if	set value arr key	0.023810
return the strides	strides	0.125000
compute a	reshape crosstab	0.066667
return	io html frame	0.012987
a pandas dataframe for compatibility with the data	data	0.009709
object o and	msgpack packb o	0.055556
a dataframe the	data values index columns	0.066667
of value from 1-dimensional ndarray only	datetime index get value series	0.071429
already exist and be	append key value format	0.016667
general index and plural 'names' parameter	core indexes index validate names name names deep	0.071429
implementing	group	0.027027
indices that would sort the index and its	indexes range index argsort	0.166667
or dataframe only operations to the cls evaluate	or dataframe operations cls	1.000000
a frame table	io appendable series table	0.200000
boolean list indicated if we have	indexes multi index have	0.142857
return if we are a	dtypes is	0.030303
of subplots already made	plotting subplots naxes sharex sharey squeeze	0.166667
add the operations to the cls evaluate the	panel add aggregate operations cls	0.500000
internal property property synonym for	core	0.001326
needs additional handling as	period index	0.024390
times to midnight length is	indexes datetime	0.011494
dtype	get empty dtype	0.500000
string-like array to convert object dtype	convert string to object	0.142857
another array which has bin edge values	bins generic values binner closed	0.200000
use this if you	indexes index set value arr key	0.023810
new block manager parameters	block manager	0.021277
the first match of regular expression	flags	0.058824
of the inferred types one	inferred type levels	0.166667
new sparsedataframe	sparse sparse data	0.076923
fixed frequency datetime index with business day as	indexes bdate range start end	0.083333
must already exist and be	value	0.005155
table in	key value	0.011628
time the time part	time	0.052632
can be used	parser build	0.014706
where : array of timestamps	core indexes period index asof locs where mask	1.000000
the grouper indexers	grouper obj key	0.142857
return a fixed frequency timedelta index with	indexes timedelta range start end	0.083333
a dataframe	formats data frame	0.272727
supported for panel objects and will raise	panel to	0.027027
return a new datacol with the block i	col create for block cls i name cname	0.333333
we have good categories	categories cls categories fastpath	0.250000
by an error is encountered in pd	parser error	0.055556
to a common sparseindex corresponding to the	homogenize series_dict	0.047619
categorize	categorize	1.000000
a column by	name data	0.250000
iterate over	io html frame	0.012987
dataframe	io formats data frame	0.272727
number of microseconds (>= 0	core indexes timedelta index microseconds	0.066667
provided date forward to	date	0.040000
additional handling as	array wrap result	0.025000
see if we can	util can	0.250000
index objects contain the	index ops mixin	0.019231
the label_flags indicate there is at least one	label_flags vmin	0.500000
this	index	0.006012
so prints a	warn	0.100000
doesn't like to compare numeric	dtypes is numeric v string like	0.333333
check_dtype	check_dtype	1.000000
the given delimiter string starting at the	rsplit	0.031250
perform the	core	0.001326
slice of my values	categorical block slice slicer	0.083333
returns number of unique elements in the group	series group by nunique dropna	0.250000
produces	produces	1.000000
synonym for :meth	inplace limit downcast	0.333333
copy of the list	sparse list copy	0.500000
be table	io hdfstore	0.014493
fixed frequency datetime index with	core indexes bdate range start end	0.083333
function or	arg	0.018868
the underlying array	index ops mixin	0.019231
called after a ufunc needs additional handling	array wrap result context	0.029412
stata	io stata	0.142857
a provided encoding	fh encoding compat is_verbose	0.200000
axis equal	rank axis	0.250000
from 1-dimensional ndarray only use this	core indexes index set value arr	0.023810
membership of x in	core computation in x	0.166667
read csv file (discouraged please use :func	frame from csv cls path	0.066667
axis to the block_manager	get block manager	0.166667
use	indexes index	0.007353
return the bool of a single element pandasobject	bool	0.043478
convert to	datetime block to	1.000000
stats	stats	1.000000
at the requested level the result will respect	level ascending sort_remaining	0.200000
the underlying data which is a categorical	core indexes categorical index	0.047619
values at particular time of day	core ndframe at time time	0.066667
the expression that is in	core computation	0.047619
from 1-dimensional ndarray only use this	indexes index set value arr key	0.023810
as a dataframe the	data	0.009709
where elements of v	frozen ndarray searchsorted v	0.033333
on where	where	0.083333
write out the binary feather-format for dataframes	core data frame to feather fname	0.083333
value from 1-dimensional ndarray only use this	core indexes datetime index get value series key	0.071429
the block manager from	core sparse to manager sdf columns	0.052632
the intersection of two index objects sortedness of	index intersection other	0.052632
a floating index	indexes index maybe cast indexer	0.200000
create the description	create description	1.000000
for making this object picklable	array setstate state	0.333333
alert a user about a malformed	parser alert malformed msg	0.500000
convert	maybe convert	1.000000
perform the reduction type operation	index ops mixin reduce op name	0.083333
binary feather-format	core data frame to feather fname	0.083333
the float values	float array formatter get	0.055556
parse an expression	computation expr parse	1.000000
evaluate the block return result	eval func other	0.200000
level j do not change the ordering of	j	0.034483
'numpy' library the	with convert	0.055556
subset rows or columns of dataframe according to	filter items like regex axis	0.166667
underlying array which by-definition can	datetime index ops mixin	0.029412
all of the _apply kwargs	func name window center	0.058824
infer the fill value for the nan/nat	dtypes infer fill value val	0.500000
indices where elements of v should	searchsorted v	0.033333
specialized intersection for datetimeindex objects may	indexes datetime index intersection other	0.142857
found	mixin isin values	0.166667
starting at the end of the string and	rsplit	0.031250
maps[0]	compat chain	0.068966
object with labels in requested axis removed	ndframe drop labels axis level	0.250000
a singular 'name' parameter for general index	indexes index validate names name	0.066667
this columns	index col read	0.250000
not satisfy the boolean criterion specified by	ndframe group by filter	0.200000
function of type t or tuple of types	type t	0.083333
series extract groups from the first match	str extract frame arr	0.047619
to coerce a	indexes period index coerce	0.125000
whether each index value	datetime index ops	0.034483
"pivot" table) based on	frame pivot index columns	0.111111
is called upon unpickling rather than the	cls d	0.083333
guess the datetime format of a given datetime	tools guess datetime format dt_str dayfirst dt_str_parse dt_str_split	1.000000
of python datetime date objects (namely	indexes datetime index	0.007634
new block manager	block manager reduction f	0.250000
type is an actual dtype	dtype is dtype cls dtype	0.043478
and 'kwargs'	func method args kwargs	0.142857
multiindex defaults to	indexes multi index	0.013158
the number	indexes multi	0.014493
the metadata for this columns	io index col read metadata	0.250000
self data and the attrs from	io	0.003012
create an	create indexer cls	0.500000
python datetime date objects	datetime	0.006711
return index or ndarray	index	0.002004
select values at particular time	at time time	0.066667
doesn't like to	like	0.058824
or np dtype to a pandas	to dtype dtype	0.083333
return my self as	as	0.066667
satisfy the boolean criterion specified by func	core ndframe group by filter func	0.250000
are index sliceable then	index sliceable obj	0.083333
data converts other	data	0.009709
of sql statement that create a table	create table	0.166667
iterate over the dom	parser build doc	0.125000
by default	sort values inplace	0.500000
cumulative max for each group	group by cummax axis	1.000000
we have an object	core dtypes	0.018519
new unit if needed otherwise return from the	dtypes datetime tzdtype new cls unit	0.055556
midnight length	core indexes datetime	0.011494
csv file (discouraged please use :func pandas read_csv	core series from csv cls path sep parse_dates	0.066667
level	level dropna	0.500000
is a term or	scope_level	0.083333
is datetimelike (e	core indexes maybe to datetimelike data copy	0.142857
return the td elements from a row	parser parse td obj	0.083333
only use this if	core indexes index set	0.023810
take which sets nan values in one pass	core take nd arr indexer axis	0.125000
to table in file node	hdfstore append key value	0.016667
list of sql statement that create a table	io sqlite table create table	0.166667
one custom business month	custom business month	0.166667
compute standard deviation of groups excluding missing values	std ddof	0.166667
is a deprecated option and if	if deprecated	0.333333
string-like	io convert string array	0.038462
must already	append key	0.016667
ordered multiindex compute the	indexes multi	0.014493
yyyymmdd	yyyymmdd	1.000000
of the data are	core data frame dropna	0.083333
fillna but using the interpolate machinery	block interpolate with fill method axis	0.200000
a dataframe	io formats data frame formatter	0.200000
value is found in	ops mixin isin values	0.333333
note this is *not* the	is other	0.055556
type is	core dtypes extension dtype is	0.125000
level 0 assuming	indexes multi index bounds	0.166667
column_format	column_format	1.000000
wrap comparison operations to convert timedelta-like	td index	0.055556
column and index	set value index col	0.666667
make deep or shallow copy	copy deep mgr	1.000000
stata	io cast to stata	0.500000
slice the info axis of obj	get info slice obj	0.500000
indices of the minimum values along an axis	datetime index ops mixin argmin axis	0.250000
is called via the 'numpy' library	validate take with convert	0.055556
if we have an object	dtypes	0.015873
fname are	kwargs fname	0.250000
an xarray object from the pandas object	ndframe to xarray	0.125000
index with business day as	core indexes bdate	0.050000
already exist	key value format	0.016667
to midnight length	datetime	0.006711
intervalindex with self	core indexes interval index	0.062500
post process for each axes overridden in child	mplplot post plot logic ax data	0.333333
1-dimensional ndarray only use this	index set value	0.023810
for this columns	io index col	0.055556
compute variance	resampler var ddof	1.000000
to coerce a	tseries maybe coerce freq	0.125000
be applied on each value to	value formatter float_format threshold	0.100000
if	core categorical validate ordered	0.055556
return the block manager from	manager sdf columns	0.052632
get	panel get	1.000000
see if we can set a	can set	0.125000
return if the index is	core indexes index is	0.083333
read csv file	csv cls path header sep	0.066667
memory usage of my values parameters	ops mixin memory usage deep	0.200000
of this frame	core data frame	0.005917
dataframe parser that uses beautifulsoup under the hood	beautiful soup html5lib frame parser	0.166667
a cross sectional for a given location in	core block manager fast xs loc	0.166667
like to compare numeric	core dtypes is numeric v string like	0.333333
downsample	downsample how	0.200000
don't allow a multi reindex on panel	panel needs reindex multi axes	0.500000
and a date_format return a string	date_format	0.058824
n between	n	0.045455
a type checking function of type	type	0.024390
exception raised matches the expected exception	util assert raises contextmanager exception matches	0.142857
categories	core categorical get categories	0.333333
the categorical by category value returning a	ascending na_position	0.071429
parse specified sheet s into a dataframe equivalent	parse	0.034483
from passed panel or object coercible to	other join overwrite filter_func	0.076923
csv file (discouraged please use	core series from csv	0.066667
names to	default names	0.083333
recursive	recursive	0.545455
to an ndarray copy	index dtype copy	0.043478
create a new unit if needed otherwise	core dtypes datetime tzdtype new cls unit	0.055556
google bigquery table	gbq destination_table project_id chunksize verbose	0.500000
new unit if needed otherwise return from	tzdtype new cls unit	0.055556
a registered	get registered	0.500000
given an interval or	get	0.007143
indexer like	name indexer	0.083333
makes sure that time and	indices time	0.125000
analogous to ndarray repeat	repeat repeats	0.142857
draw a matrix of scatter	scatter matrix frame alpha figsize	1.000000
the gradientfill stop	stop	0.050000
from 1-dimensional ndarray only use	core indexes index set	0.023810
dataframe to a sql database	io sqldatabase to sql frame	0.500000
the	multi index	0.040000
or ndarray filled with nat which has	ops mixin nat new box	0.050000
the specified categories	categories	0.062500
to specified frequency	ndframe asfreq freq method	0.250000
is a named tuple	is named tuple	1.000000
to coerce a scalar to a	period index coerce scalar to	0.071429
the reduction type operation if	index ops mixin reduce op name axis	0.083333
other	core indexes index validate for numeric binop other	1.000000
update index attributes e g freq	timedelta index maybe update attributes attrs	0.200000
file node	format	0.012346
that we have	core categorical validate ordered	0.055556
return an indexer coerced to	maybe coerce indexer indexer	0.125000
from	io html frame parser parse	0.250000
handling as	index array	0.033333
if we are a datetime with tz	dtypes is datetimetz	1.000000
type is an actual dtype that we	dtypes interval dtype is dtype cls dtype	0.142857
gets called prior to	array prepare result	0.111111
index with business day as the default	core indexes	0.004762
non-tuple indexer which	indexer indexer target	0.071429
an item pair from	popitem	0.043478
multiindex has	core indexes multi	0.014493
with nat which has the same length	ops mixin nat new box	0.050000
comparison operations to convert timedelta-like	core indexes td index	0.055556
upsample	upsample	1.000000
from 1-dimensional ndarray only use this	arr	0.013699
info from string	freqstr	0.111111
of type window_type and size window on	window arg window win_type	0.100000
alter index and / or columns using input	axis mapper axis copy inplace	0.055556
the float values	float array formatter	0.055556
gets called prior to a ufunc	prepare result context	0.333333
wrapper function for series arithmetic operations	bool method series op	0.333333
provide a nice str repr of	window unicode	0.071429
for dataframe and	ndframe	0.005025
1-dimensional ndarray only use this	indexes index set value	0.023810
of take	multi index assert take	0.500000
the codes by the indexer	nd indexer allow_fill	0.050000
time strings to	core tools to	0.250000
return a tree-like object that	parser	0.008000
matrix of scatter	scatter matrix	0.500000
process for each axes overridden	plot logic ax data	0.083333
reset the display options for printing and	reset display options	0.200000
time index using the index's frequency if	core ndframe tshift periods freq axis	0.066667
fast path for getting	fast	0.090909
for interpolate bpoly from_derivatives	from derivatives	0.500000
returns a curve with holidays	holidays start end return_name	0.066667
to table in file node must	value	0.005155
packed	packed object_hook	0.200000
this is index for series columns for dataframe	core	0.001326
unicode normal form for the strings in	core string methods normalize form	0.066667
called prior	series array prepare	0.111111
construct an intervalindex from a a	indexes interval index from arrays cls	0.166667
view	core categorical block is view	0.200000
to table	append key	0.016667
if we have bytes decode them to unicode	ensure decoded s	0.166667
td elements	td obj	0.333333
needs	index	0.002004
index	almost	0.166667
to return the correct pandassql subclass based	io pandas sql builder con flavor schema meta	0.055556
memory usage of my values	memory usage deep	0.200000
we take a string-like that is	string array	0.038462
subject string in the series extract groups from	extract frame arr	0.047619
a	core indexes period	0.032258
deprecate a	util deprecate	0.166667
sunday use previous friday instead	previous friday dt	0.250000
convert to our native types format	block to native types slicer na_rep float_format	0.250000
to take optional positional and	util optional args	0.066667
iterate over	html frame parser build	0.014706
to parse a ndarray like	convert	0.032258
axes	axes axes obj validate	1.000000
determines if two index objects contain the	indexes index equals other	0.200000
flattened numpy array	core categorical ravel order	0.333333
additional	result	0.016393
an intervalindex from a	indexes interval index from arrays cls	0.166667
the block	mgr	0.083333
new block	block	0.040984
lookup of value from 1-dimensional ndarray only	indexes categorical index get value series key	0.100000
the header of a table	html frame parser parse thead table	0.333333
ftypes (indication of sparse/dense	ndframe ftypes	0.055556
csv file (discouraged	csv cls path header sep	0.066667
return a fixed frequency timedelta index with	core indexes timedelta range start end	0.083333
frequency timedelta index	core indexes timedelta	0.083333
return datetimeindex	datetime index	0.007042
end	date offset end	0.500000
and be	hdfstore	0.014925
the index	indexes interval index	0.062500
fname are valid	util validate kwargs fname	0.250000
labels on given axis	axis	0.011364
wrap comparison operations to convert datetime-like	index cmp opname nat_result	0.066667
object with labels	labels	0.038462
convert timedelta-like	core indexes td index cmp opname	0.055556
is called via the 'numpy' library	validate take with convert convert args	0.055556
from a row	io html frame parser parse	0.250000
reorders categories as specified in new_categories	core categorical reorder categories new_categories	1.000000
axis is	is	0.005291
or more existing columns	keys drop append	0.250000
'numpy' library the	compat numpy validate take with convert convert args	0.055556
a multiindex from the	core indexes multi index from	0.142857
called prior to	core series array prepare result	0.111111
each string in the series/index by the given	core str	0.011364
tree-like object that can be used to iterate	io html frame	0.012987
indexer information	indexer	0.009174
convert series to	core series to	0.666667
initializing or updating-on-copy an openpyxl v2	io openpyxl20writer	0.035714
file node must already exist and be	io hdfstore append key value format	0.016667
fast	value arr key	0.023810
python expression as	core computation eval expr	0.083333
to ndarray repeat	ops mixin repeat repeats	0.333333
scipy interpolate interp1d method is scipy's kind	core interpolate scipy wrapper x y new_x method	0.500000
categorical columns retain categorical information	io stata writer prepare categoricals data	0.166667
sum of non-na/null values	sparse sparse array sum axis	1.000000
block of same	block make block same	0.333333
number of decimal places	decimals	0.090909
try hard to parse	tools parse	0.125000
return slice of panel along minor axis	core panel minor xs key	0.166667
apply we are stripping all of the	apply func name	0.050000
running code that expects to	util assert produces warning expected_warning filter_level clear	0.071429
add the	core panel add	0.500000
create a new block manager parameters	block manager	0.021277
validate that the where statement is of	computation validate where w	0.250000
column-wise row-wise or table-wase updating	axis subset	0.250000
add in the datetimelike methods (as we may	index ops mixin add datetimelike methods cls	0.333333
omitted where alternately any or all	how thresh subset	0.250000
sequence of terms for instances	terms	0.034483
to convert datetime-like to	core indexes period index cmp opname nat_result	0.066667
of	crosstab index columns	0.066667
1-dimensional	value arr key	0.023810
if we have a compatiable fill_value and	fill_value	0.033333
return a string representation	indexes index unicode	0.083333
indicated if we have mixed	multi index have mixed	0.166667
perform generic binary operation with optional fill	binop other func level fill_value	0.500000
a fixed frequency timedelta index with day as	indexes timedelta range start end	0.083333
we are index sliceable then	convert to index sliceable obj	0.083333
the underlying data	core index ops mixin	0.062500
length	indexes datetime index	0.007634
ndarray copy if	index dtype copy	0.043478
to convert datetime-like to	indexes period index cmp opname nat_result	0.066667
the array interface return my	indexes multi index array dtype	0.125000
return a	io	0.003012
ndarray filled with nat which has the same	mixin nat new box	0.050000
array of python datetime date objects	core indexes datetime	0.011494
going to write this	write	0.017857
index objects	datetime index ops mixin	0.029412
boolean if this key is in the index	indexes interval index contains key	1.000000
value for the	value	0.010309
membership of x not in y if possible	core computation not in x y	0.066667
into a dataframe equivalent to read_excel(excelfile	sheetname header skiprows skip_footer	0.125000
the passed type is	interval dtype is	0.066667
as	core indexes period index	0.034483
use this if	indexes index set	0.023810
custom ast walker parsers of other engines	base expr visitor	0.200000
how to create the grouper indexers	grouper	0.058824
be used	io html frame parser build	0.014706
convert tz-aware datetimeindex from	indexes datetime index tz convert tz	0.166667
pandas type to its corresponding json_table	json as json table type x	0.250000
a html representation for a particular	repr html	0.333333
dataframe apply for sparsedataframe	data frame apply func	0.166667
if we are index sliceable then	to index sliceable	0.083333
dispatch to apply	by mixin apply func	0.050000
we have a compatiable fill_value and arr	arr fill_value	0.090909
make a copy of this sparsedataframe	core sparse sparse data frame copy deep	1.000000
add in the datetimelike methods (as we may	index ops mixin add datetimelike methods	0.333333
iter1	assert copy iter1	1.000000
the display options for	display options	0.083333
a nice str repr of our rolling object	window unicode	0.071429
converts a style_dict to an xlsxwriter format	io xlsx writer convert to style style_dict num_format_str	0.166667
apply box func to passed values	indexes datetime index ops mixin box values values	1.000000
return a fixed frequency timedelta index with day	indexes timedelta range start end periods	0.083333
incoming data can be represented as uints	core indexes uint64index assert safe casting cls data	0.333333
self f skipping as	n skiprows	0.333333
the date belongs to a leap	leap	0.076923
get	multi index get	0.100000
csv file (discouraged please use :func pandas read_csv	core data frame from csv cls	0.066667
1-dimensional	indexes index set	0.023810
create and return the block manager from	to manager sdf columns	0.052632
new categorical by	core categorical sort values inplace	0.166667
ensure incoming data can be represented as uints	indexes uint64index assert safe casting cls data	0.333333
lines 0) there are headers on row	python parser	0.250000
if we are a view have a cacher	is	0.005291
lookup of value from 1-dimensional ndarray	set value arr key value	0.038462
memory usage of my values	index ops mixin memory usage deep	0.200000
a sparseseries from a scipy sparse coo_matrix	sparse sparse series from coo cls a	0.333333
returns the float values converted into strings	io formats float array formatter get result as	0.055556
the union of two	core indexes multi index union other	0.066667
the same dimensions	core ndframe	0.005051
create and return the op string for	op generate	0.066667
scatter plot from two dataframe columns	plotting scatter plot data	0.125000
a fixed frequency timedelta index	indexes timedelta range start	0.083333
we have mixed	multi index have mixed	0.166667
a boolean if the passed type is	core dtypes extension dtype is	0.125000
1-dimensional ndarray only use	set value	0.023256
dispatch to apply we are stripping	core group by mixin apply func	0.050000
shade	formats styler highlight	1.000000
the op string for this termvalue	core computation bin op generate v	0.250000
a single element pandasobject	ndframe	0.005025
datetimeindex from one	datetime index	0.007042
positional	valid positional	0.250000
a resample of a	period index	0.024390
read html tables into	read html io match flavor header	0.200000
an index	indexes index	0.007353
series to	core series	0.016000
of x not in y	not in x y	0.066667
property synonym	core ndframe	0.005051
vectorized membership of x in y	computation in x y	0.047619
the block return result block from the	core block	0.010870
interpolate values according	core resampler interpolate method axis limit	0.166667
left and right	left right exact check_names	0.333333
if we are index sliceable then	convert to index sliceable obj key	0.083333
round a dataframe	core data frame round	0.166667
calendar	calendar	0.666667
nat-like arg	arg errors	0.026316
convert datetime-like to	core indexes dt index cmp opname nat_result	0.066667
see	io	0.003012
float	float arr	0.083333
to a	to index	0.166667
lookup of value from 1-dimensional ndarray only	core indexes datetime index get value	0.071429
set new labels on multiindex defaults to	indexes multi index set labels labels level	0.333333
copy of the list	list copy	0.500000
provide an implementation for the aggregators	core selection mixin aggregate arg	0.166667
dataframe columns	data x y	0.333333
cast values	io parser base cast types values	0.500000
the underlying array which	index ops mixin	0.019231
form the union of two index objects and	range index union other	0.083333
add	core ndframe add numeric	0.500000
dense representation of ndframe as opposed	core ndframe to dense	0.111111
slice locations	index slice locs start end step kind	0.083333
dropna if fill_value=nan returns	dropna axis	0.083333
make a copy	copy deep	0.285714
the op string	core computation bin op generate	0.066667
subject string in the series extract groups	str extract frame	0.047619
values to be at least	core block shape values ndim	0.050000
ndarray copy if specified coerce to	copy	0.012821
of whether each index value is found	indexes datetime index ops mixin isin	0.083333
a curve with holidays between start_date	holidays start end return_name	0.066667
new index	indexes categorical index	0.047619
we have bytes decode them to unicode	core computation ensure decoded s	0.166667
be used to	html frame	0.014706
same dimensions as	core	0.001326
array interface return my	core indexes categorical index array dtype	0.125000
to disable	sub disabled cls	1.000000
at the given quantile a	quantile	0.058824
the	io generic index	0.500000
of sparse/dense	core	0.001326
handle 2-d slices equiv to iterating over the	core panel apply 2d func	0.200000
index	datetime index	0.056338
the dtype of the values	dtype	0.010989
locator based on a	pandas auto date locator get locator	0.062500
unicode normal form	core string methods normalize form	0.066667
for series arithmetic operations to	arith method series op name	0.333333
header rows	header name	0.100000
put method to its values attribute if it	series put	0.055556
this is *not* the same as index	core indexes index is other	0.333333
'numpy' library	numpy validate take with convert convert	0.055556
object that can be	html	0.011765
to apply we are stripping all of	core group by mixin apply func	0.050000
generates prop value pairs from declarations	parse declarations_str	1.000000
numpy doesn't like to compare	string like	0.111111
string starting at the end of the	rsplit arr pat n	0.037037
the (attr formatted_value)	indexes datetime index ops mixin format attrs	0.142857
dataframe with labeling information	data frame reset	0.027778
of nanoseconds (>= 0 and less	core indexes timedelta index nanoseconds	0.066667
sorted by the n smallest values	nsmallest n	0.333333
dataframe objects and do not propagate nan	data frame	0.005714
return a tree-like	html frame parser build	0.014706
write out the binary feather-format for dataframes	feather fname	0.083333
take the cross-product	core maybe convert ix	0.166667
of the	core series	0.008000
by the given delimiter string starting at the	rsplit arr pat	0.037037
determine if each string matches	core str match	0.166667
condition	computation	0.038462
a tz-aware type return an encoded	tz tz	0.066667
gets called after a ufunc needs additional handling	wrap result context	0.029412
multiindex defaults to	indexes multi	0.014493
a string representation for this	index unicode	0.083333
are available on the system	prefix normalize locale_getter	0.166667
make sure a valid engine	core computation check engine engine	0.333333
the we have a dtype	name	0.025000
call encode before writing to file for	writer write to_write	0.083333
it if we opened it	io to hdf path_or_buf key value	0.166667
plural 'names' parameter	names deep	0.125000
convert color_spec to an openpyxl v2 color object	io openpyxl20writer convert to color cls color_spec	0.500000
get instances of all	all	0.043478
consolidated	consolidated	1.000000
index with target's values (move/add/delete values as	multi index	0.020000
object	timedelta	0.022222
curve with holidays between	holiday calendar holidays start end return_name	0.066667
tuples of the (attr formatted_value)	multi index format attrs	0.142857
apply mapper function	map mapper	0.250000
a regular expression	arr pat case flags	0.166667
y if	y	0.117647
series based on type and coerce into matrices	arrays to mgr arrays arr_names index	0.250000
boolean array of whether each index value	index ops	0.033333
a new unit if needed otherwise return from	new cls unit tz	0.055556
size and return tuple = width height	size	0.041667
'name' parameter for general index	core indexes index validate names name	0.066667
i and j in a	i j copy	0.250000
to construct this type from	core dtypes interval dtype construct from string	0.166667
subclasses namely intervalindex to control get_slice_bound	get loc only exact matches key	0.142857
the required package is installed	package pkg_name min_version max_version app	0.083333
wrapper around series datetime/time/timedelta arithmetic operations	time op	1.000000
of value from 1-dimensional ndarray only use this	indexes categorical index get value	0.100000
that left and right panels are equal	assert panelnd equal left right check_dtype check_panel_type	0.333333
parameter for general index	core indexes index validate	0.066667
return a fixed frequency	range start	0.133333
convert argument to datetime	core tools to datetime arg errors	1.000000
a string cast	index maybe cast	0.111111
of value from 1-dimensional ndarray only use this	indexes period index get value series	0.071429
convert from sif to	elapsed date to	0.250000
number of nanoseconds (>= 0 and less	indexes timedelta index nanoseconds	0.066667
term	term	0.500000
midnight	core	0.001326
a boolean indicating whether the file is	io hdfstore is	0.200000
table in file node	io hdfstore append key value format	0.016667
fast lookup of value from 1-dimensional ndarray only	datetime index get value series key	0.071429
representation used to tag	replacer x	0.125000
node must already exist and be	io hdfstore append	0.016667
from 1-dimensional ndarray only use this if you	indexes index set value arr key	0.023810
need to coerce a scalar to a	period index coerce scalar to	0.071429
return a slice of	core block slice slicer	0.083333
objects along a particular axis	axis	0.011364
to take optional positional and keyword arguments	util optional args	0.066667
stripping all of the _apply kwargs	name window center	0.071429
after	period index array	0.050000
needs additional	indexes period index array wrap result	0.050000
holiday	holiday	0.833333
input values as an enumerated type or	core factorize values sort order na_sentinel	0.111111
1-dimensional ndarray only use	key	0.005051
unit if needed otherwise return from	unit tz	0.125000
exit	exit exc_type exc_value traceback	1.000000
datetime format of a given datetime string	datetime format dt_str dayfirst dt_str_parse dt_str_split	0.250000
update index attributes e	core indexes timedelta index maybe update attributes attrs	0.200000
dispatch to apply we are stripping all of	mixin apply func name	0.050000
table as a dataframe the levels in the	table data	0.200000
to control get_slice_bound	get loc only exact matches key	0.142857
load a feather-format	read feather	0.083333
a repr function return fillvalue for a recursive	recursive repr fillvalue	0.333333
tree-like object that can be used to iterate	io	0.003012
validate that an positional indexer	valid positional setitem indexer indexer	0.052632
factory for a type checking function of type	core computation is type	0.125000
not satisfy the boolean criterion specified by	core ndframe group by filter	0.200000
objects suitable for initializing the gradientfill stop parameter	stop cls	0.066667
return index	index ops mixin	0.019231
only the actual sparse values need to	core sparse sparse array	0.043478
render the built up styles to html	io formats styler render	0.142857
integer-location based indexing for selection by position	i	0.041667
if we have a float key and	key	0.005051
malformed row	malformed msg	0.100000
allows a decorator to take	args decorator	0.111111
float values	formats float array formatter get result	0.055556
is called via the 'numpy' library the third	with convert convert args	0.055556
called after a	series	0.006757
like into a	parser	0.008000
arr to	arr	0.013699
try to parse a ndarray	try convert data	0.200000
to an index	core indexes index	0.007042
openpyxl is supported	is	0.005291
context manager for running code that expects to	util assert produces warning expected_warning filter_level clear	0.071429
datetimeindex	index	0.002004
get my plane axes indexes these are already	core panel get plane axes	1.000000
a scipy sparse coo_matrix to	sparse coo to sparse series	0.333333
i am	core categorical block	0.100000
positional indexer cannot enlarge its	ndframe indexer has valid positional setitem indexer indexer	0.052632
from a 1d array	index from intervals cls data name	0.125000
from 1-dimensional ndarray only use this	indexes index set value	0.023810
a malformed	malformed	0.066667
return if we are a sparse array	core dtypes is sparse array	1.000000
in	arr	0.013699
rewrite the assignment	rewrite assign	0.125000
apply	offset apply index	0.250000
keeps track of	set test mode v	0.142857
function for creating a subclass of styler with	formats styler from	0.076923
an index that we can create one from	index	0.002004
casting data from	indexes numeric index assert safe casting cls data	0.047619
to beginning of	beg	0.090909
columns of this dataframe	index columns	0.028571
provides a resample of	timedelta	0.022222
construct an intervalindex from a 1d array of	from intervals cls data name copy	0.125000
boolean series denoting	core data frame duplicated	0.500000
install the scalar	method converter	0.200000
compute a simple	core reshape crosstab	0.066667
construct dataframe from dict	core data frame from dict cls data orient	0.200000
downsample	core datetime index resampler downsample	0.200000
memory usage of my	indexes range index memory usage deep	0.200000
from 1-dimensional ndarray	indexes	0.004651
need to coerce a code to a rule_code	coerce freq code	0.076923
a list of	tolist	0.071429
values as an enumerated type	factorize values	0.111111
that can	html frame parser build	0.014706
check whether ax has	plotting mplplot has plotted object ax	0.500000
mapping of how to create the grouper indexers	grouper obj key axis	0.142857
lsuffix	lsuffix	1.000000
a python expression as a	computation eval expr	0.083333
reset_index	index level drop name	1.000000
and return the block manager from a dataframe	sparse to manager sdf columns	0.052632
falls on sunday use day thereafter monday instead	tseries sunday to monday	0.333333
header rows in multiindex parsing	pop header	0.100000
3 columns of this dataframe	columns values	0.037037
compute a simple cross-tabulation of	crosstab	0.050000
return dateoffset object from string	tseries to offset	0.200000
specialized cython	indexer axis out	1.000000
passed a list-like indexer	indexes interval index convert list indexer keyarr kind	0.066667
plot attribute for groupby	group by plot	0.062500
length is unaltered	index normalize	0.125000
create a new unit if needed	dtypes datetime tzdtype new cls unit	0.055556
in file node must already	hdfstore append key value	0.016667
'series argmin' is called via the 'numpy' library	argmin with skipna skipna args kwargs	1.000000
intervalindex from a	from	0.030303
x in y	core computation in x y	0.047619
to coerce a	coerce freq	0.125000
appropriate class	result type result	0.250000
positional	valid positional setitem	0.250000
the exception raised matches the expected exception	assert raises contextmanager exception matches	0.142857
the blocks collect	f axis consolidate transposed	0.062500
/ or columns using input function	copy inplace	0.055556
compute variance of groups	var ddof	0.166667
a fixed size	itemsize	0.027027
perform merge with optional filling/interpolation designed for ordered	merge ordered left right on left_on	1.000000
list of the axis indicies	core panel extract axes data axes	0.142857
the kind of my field	core computation bin op kind	0.500000
if we are positional indexer	core indexes index validate indexer form key kind	0.500000
a url has a	io is url url	0.047619
cells	cells	1.000000
implement a datetime64 block with	datetime tzblock	0.100000
input values as an enumerated type	factorize values sort	0.111111
convert argument to datetime	tools to datetime arg errors	1.000000
input order may not drop or duplicate	order	0.062500
its numpy-array representation	ndframe as matrix columns	0.200000
in the series/index by the given	core str	0.011364
an intervalindex from	from	0.030303
it	core	0.001326
read csv file (discouraged please	data frame from csv cls	0.066667
to apply	group by mixin apply func name	0.050000
string-like	string	0.037736
table as a	table	0.010870
curve with holidays between start_date and end_date parameters	abstract holiday calendar holidays start end return_name	0.066667
mode	mode	0.250000
convert to our native types format	float block to native types slicer na_rep	0.250000
a datetime64	datetime	0.006711
common post process for each axes	plotting mplplot post plot logic common ax	0.333333
ndarray only use this if you	indexes index set value	0.023810
to convert timedelta-like to timedelta64	indexes td index cmp opname	0.055556
return the values & release the memory	col take data	0.055556
numpy array of python datetime date objects (namely	datetime	0.006711
to read from a url file or	read	0.033333
packer	packb	0.022727
totally ordered cartesian product of	get group index labels shape sort xnull	0.066667
two indices overlap	overlap	0.047619
after	indexes index array wrap result	0.100000
optional	util optional	0.066667
overriden on subclasses namely intervalindex to control get_slice_bound	get loc only exact matches key	0.142857
series extract groups from the first match	extract frame	0.047619
more this is index for series columns	ndframe	0.005025
dataframe to a sql database	sqlite database to sql frame	0.500000
returns true if there are any missing periods	period index is full	0.500000
read csv file (discouraged	frame from csv cls	0.066667
fast lookup	indexes index set value arr	0.023810
up styles to	formats	0.031250
left and right index are equal	index equal left right exact	0.333333
the info axis	get info	0.250000
packer	msgpack	0.022222
startswith	startswith	1.000000
previous	previous	1.000000
sql and params args to dbapi2	params sql params	0.200000
the new type	dtype copy errors values	0.250000
expanding count of number	expanding count	0.200000
a categorical by hashing its categories and then	categorical c encoding hash_key	0.142857
where elements of v should be inserted in	indexes frozen ndarray searchsorted v	0.033333
convert tz-aware datetimeindex from one time zone to	indexes datetime index tz convert tz	0.166667
set new labels on multiindex defaults to	core indexes multi index set labels labels	0.333333
temporarily set a parameter value	value	0.005155
element in the series/index	core str get arr i	0.142857
when a manipulation result has the same dimensions	ndframe constructor	0.055556
is defined as a copy	view cls	0.047619
the name this allows simpler access to columns	ndframe setattr name	0.166667
read from a url file	read	0.033333
integer stride	resolution get stride	0.333333
the dataset	core series	0.008000
and the attrs from	io	0.003012
values between particular times of the	between	0.043478
boolean :class ~pandas series showing whether each element	series isin values	1.000000
dataframe sorted by the n largest	core data frame nlargest n	0.166667
be used to iterate over	frame parser	0.012500
formatted data as a unicode	indexes index formatter func	0.083333
must already	io hdfstore append key value format	0.016667
to get instances of all the	util all	0.055556
with times to midnight length is	index	0.002004
copy if	dtype copy	0.032258
the reindex for all the axes	core ndframe reindex axes axes	0.500000
must be	sparse maybe	0.500000
1-dimensional ndarray	arr	0.013699
business eom	business month	0.333333
return a tree-like	io html frame parser	0.012195
float values	formats float array	0.055556
self data and the attrs from _build_styles	io formats styler translate	0.200000
the passed data is of datetime/timedelta type	core reshape coerce to type x	0.250000
internal property property synonym for	core ndframe	0.005051
package	package pkg_name min_version	0.083333
values and	values values	0.083333
fast transform path	transform fast result obj	0.333333
from 1-dimensional ndarray only use this if	core	0.001326
return a fixed frequency datetime index	indexes bdate range start end	0.083333
label for last non-na/null value	data frame last valid index	0.250000
of the index or maximum along an axis	index ops mixin max axis	0.333333
float key and are not a floating index	core indexes index maybe cast indexer key	0.500000
i with level	i	0.041667
an positional indexer cannot	ndframe indexer has valid positional setitem indexer indexer	0.052632
a left and right	cls left right	0.333333
new dataframe with labeling information in	data frame reset	0.027778
a fixed frequency timedelta index	core indexes timedelta range start	0.083333
try to parse	try convert	0.166667
mapping whether number or name	for t	1.000000
sets index names to 'index' for	names	0.038462
of value	set value arr key value	0.038462
if we have mixed levels	index have mixed levels	0.200000
boolean whether this axes needs validation for	core ndframe indexer should validate iterable axis	0.166667
columns for dataframe and	core ndframe	0.005051
index objects	range index	0.065217
converts a style_dict to an xlsxwriter format object	xlsx writer convert to style style_dict num_format_str	0.166667
apply the	apply index	0.500000
parameter if	categorical validate ordered cls	0.055556
bytes in the underlying data	core indexes multi index nbytes	0.052632
compose 2 or more callables	core reshape compose	1.000000
from	index from	0.181818
to the underlying array which by-definition	datetime index ops mixin	0.029412
indexer which could be a slice	indexer indexer	0.071429
time	time	0.368421
a distance	dmin dmax	0.250000
on	on	1.000000
render a dataframe as an html	data frame to html buf columns col_space header	0.500000
label is not	label	0.028571
a malformed row	malformed	0.066667
object with labels on given axis	frame dropna axis	0.142857
original	ndframe	0.005025
datetimeindex from one time zone to another (using	indexes datetime index	0.007634
multiindex at the	multi	0.018182
result block from the result	block	0.008197
applies a moving window	window apply window	0.166667
the values from this	io index col convert values	0.166667
construct dataframe from dict of array-like	data frame from dict cls data orient	0.200000
return the len	core categorical size	0.111111
parse the raw data into a list of	parser parse raw data	0.250000
manager with the	block manager	0.021277
create	core ndframe create indexer cls	0.500000
returns the float values converted into	formats float array formatter get result as array	0.055556
(header new_data) for header rows	header name row index_col	0.200000
of values excluding missing values	core group by ohlc	0.250000
time-interval grouping	time grouper	1.000000
them as a block	block	0.016393
encode input values as an enumerated type	factorize values sort order	0.111111
has a float dtype if possible	float arr	0.083333
can	build	0.013514
create and return the numexpr condition and filter	computation expr evaluate	0.200000
a multirow	format multirow	0.250000
types format slicing if	types slicer na_rep float_format decimal	0.200000
in file node	io hdfstore	0.014493
of	index resampler	0.065217
values between particular	core indexes datetime index indexer between	0.125000
ndarray only	core indexes index set value arr	0.023810
localize tz-naive timeseries to target time zone	tz localize tz	1.000000
read csv file (discouraged please use	series from csv cls	0.066667
to call encode before writing to	io stata writer write to_write	0.083333
read csv file (discouraged please	from csv cls path header	0.066667
window of type window_type and size window on	stats rolling window arg window win_type	0.100000
the html representation with the	io	0.003012
repeat elements of an series	core series	0.008000
at particular time of day e g 9	ndframe at time time	0.066667
write each dataframe in panel to a	panel to	0.027027
the series/index to be formatted in paragraphs with	core str	0.011364
only the actual sparse	sparse sparse	0.034483
a new block try to preserve dtype if	putmask smart v m n	0.055556
table in file node must already exist and	key	0.005051
return	interval index	0.090909
can be	build	0.013514
dispatch to apply we are stripping all	core group by mixin apply func	0.050000
reset the cacher	core ndframe reset cacher	1.000000
each element in the	core	0.001326
axes!	data frame reindex multi axes copy fill_value	1.000000
of	index set value arr key	0.023810
up styles to html	formats styler	0.021739
convert to our native types format slicing if	categorical block to native types	0.250000
the ordered attribute	get ordered	0.333333
string in the series extract groups from	extract	0.030303
meta data	write metadata handler	1.000000
sets names on	set names names level validate	0.200000
of available options grouped	core pp options	0.083333
datetimeindex from one	indexes datetime index	0.007634
a float key and are not a floating	maybe cast indexer key	0.333333
membership of x not in	core computation not in x	0.166667
function to create an	core computation	0.047619
take	assert take	0.500000
backward to next offset only if not	rollback	0.076923
reorders categories as specified in new_categories	core categorical reorder categories new_categories ordered	1.000000
the frame should be truncated if so slices	formats data frame formatter chk truncate	0.500000
and index	datetime index	0.007042
memory usage	ops mixin memory usage deep	0.200000
types format	types	0.103448
you	core indexes index	0.007042
them as a block	core block	0.010870
usage of	usage deep	0.200000
the data pointer of the underlying data	ops mixin data	0.333333
visible	visible	1.000000
return a tree-like object that can	io	0.003012
index value	indexes datetime index ops	0.034483
try to parse a	try convert	0.166667
copy of self coded with categories as returned	core categorical codes for groupby sort	0.071429
given	core indexes multi index get	0.100000
take	core indexes index assert take	0.500000
as series or by	groupby by axis	0.045455
read text from clipboard and	io read clipboard	0.200000
each group if n is	group by	0.016129
comparison operations to convert datetime-like to datetime64	core indexes period index cmp opname nat_result	0.066667
apply the	semi month offset apply index	0.500000
outputs rounded and formatted percentiles	percentiles percentiles	1.000000
simple cross-tabulation of	reshape crosstab index columns	0.066667
compare numeric	core dtypes is numeric	0.333333
date belongs to a leap	indexes period index is leap	0.125000
connect to	util can connect	0.111111
intervalindex from a 1d array of interval	interval index from intervals	0.333333
operations to the cls evaluate the doc	operations cls	0.153846
object that can be used to iterate	parser	0.008000
the union of two multiindex objects	multi index union other	0.066667
a string	string cls string	0.125000
unit if	cls unit tz	0.125000
of casting	casting	0.076923
matrix	matrix	0.461538
expression that is	computation	0.038462
shape of the values to be at least	block shape values ndim shape	0.083333
the datetime format of a given datetime	datetime format dt_str dayfirst dt_str_parse dt_str_split	0.250000
location for requested label parameters	loc key method	0.142857
actual ne format	computation condition bin op format	0.333333
create index with target's values	index	0.002004
spreadsheet-style pivot table	core reshape pivot table	0.111111
slice of my	datetime tzblock slice slicer	0.083333
the kinds allowable columns for this object	table queryables	0.055556
check if	obj	0.166667
actually format my specific types	indexes index format native types na_rep quoting	1.000000
return a slice of	categorical slice slicer	0.111111
the axis indicies	panel extract axes data	0.142857
a subclass of styler with a	io formats styler	0.021277
the view limits to the	plotting time series date locator autoscale	0.055556
a type in	type	0.024390
lists to line	convert to line	0.142857
1-dimensional ndarray	core indexes index set value arr key	0.023810
csv file (discouraged	frame from csv cls path header	0.066667
apply the given	tseries holiday apply	0.333333
returns a dataframe	core sparse sparse data frame	0.058824
if we will be using numexpr	use numexpr op op_str	0.333333
return index or ndarray	core indexes datetime index ops	0.034483
return result as series or by	groupby by axis	0.045455
value from 1-dimensional ndarray	core indexes period index get value series key	0.071429
we do need a multi reindex this	series needs reindex multi axes method	0.333333
compose	compose	1.000000
return the underlying data which is a categorical	categorical index values	0.333333
that	parser	0.024000
create the grouper indexers	grouper	0.058824
series extract groups	str extract frame arr	0.047619
guaranteed return of an indexer even	indexes index get indexer for	0.250000
index objects contain the same	indexes float64index	0.166667
node with the key or none if it	hdfstore get node key	0.083333
boolean list indicated if we have mixed	have mixed	0.166667
returns numpy array of python datetime date	core indexes datetime	0.011494
needs additional	period index array wrap	0.050000
apply	tseries holiday apply	0.333333
beautifulsoup under the hood	beautiful soup html5lib	0.333333
selected item ndarray	item fastpath	0.333333
view limits to the	time series date locator autoscale	0.055556
packed object	packed object_hook list_hook use_list	0.200000
functions	ndframe rename axis mapper	0.333333
convert timedelta-like to timedelta64	core indexes td	0.055556
matches a regular expression	arr pat case flags	0.166667
binary feather-format for	feather fname	0.083333
return datetimeindex with times to midnight length	core indexes datetime index	0.007634
of values values	values	0.008547
the shape of the values to be at	core block shape values ndim shape	0.083333
table in file node must already	io	0.003012
if s	s	0.125000
a deprecated option and if	if deprecated	0.333333
try to operate on	selection mixin try	0.250000
check	index assert	1.000000
the blocks collect and create a	reduction f axis consolidate transposed	0.062500
timeseries to specified frequency	ndframe asfreq freq	0.250000
memory usage of	memory usage deep	0.200000
return new dataframe with	core data frame reset	0.027778
kind_attr	kind_attr	1.000000
take which sets nan values in one	take	0.030303
counts of the function in	counts f	0.041667
cross-tabulation	columns	0.017857
prior to a ufunc	prepare result context	0.333333
a string-like that is	convert string array data	0.038462
len of myself	size	0.041667
correct fill value for the dtype	fill value dtype fill_value fill_value_typ	0.333333
is index for series columns for dataframe and	core ndframe	0.005051
broadcast	broadcast	1.000000
csv	core series from csv cls path	0.066667
can store the multi-index reset and	multiindex obj	1.000000
a	validate ordered	0.055556
gets called after	period	0.016667
we have a astypeable to categorical	core block is categorical astype dtype	0.333333
be table	io hdfstore append key value format	0.016667
a function to be applied on each value	array formatter value formatter float_format threshold	0.100000
of value from 1-dimensional ndarray only	core indexes datetime index get value	0.071429
in	key	0.005051
holiday of two adjacent ones!	tseries next monday or tuesday dt	0.200000
use this	key	0.005051
kind of my field	core computation bin op kind	0.500000
usage of	usage index deep	1.000000
new dataframe	core data frame	0.005917
diff of the	diff n axis mgr	0.111111
exist and be	append key value format	0.016667
first day of the month and day_of_month	semi month begin	0.166667
object to an expression	expression expr	0.250000
is index for series columns	ndframe	0.005025
block try to preserve dtype if	core putmask smart v m n	0.055556
take which sets nan values in one	core take nd arr indexer	0.125000
values from passed panel or object coercible to	update other join overwrite filter_func	0.055556
backward to next offset only if not on	rollback dt	0.125000
latex tabular/longtable environment output	latex column_format longtable encoding multicolumn	0.500000
fast integer location scalar accessor	i at indexer	1.000000
'index' for regular or 'level_x'	io json set default	0.250000
the given offset/observance to a datetimeindex of dates	rule dates	0.333333
if label	label side kind	0.500000
add	core ndframe add	0.500000
converts from one of the stata date formats	stata	0.022222
levels attribute is 1 or	table is multi index	0.142857
values and a date_format return	from values values date_format	0.250000
from each group if n is an int	group by	0.016129
dataframe major_axis	ndframe iteritems	0.055556
function for	method	0.133333
ndarray only use this if	indexes categorical index	0.047619
have a full	full	0.071429
ndarray only use this if	index	0.006012
other to int64 with null values	args values other	0.142857
make new multiindex	core indexes multi	0.014493
best locator based on	auto date locator get locator	0.062500
non-boolean scalar	parse dates arg parse_dates	0.142857
return the cached item item represents	ndframe iget item cache item	0.090909
to	io formats styler	0.021277
python datetime date objects (namely the date	datetime index date	0.333333
of styler with a	styler from	0.076923
contained in values	values	0.008547
csv file (discouraged please use :func pandas	from csv cls path	0.066667
dtype	indexer dtype	0.500000
mapped to their default values as specified	for default values fname	0.200000
update index	core indexes timedelta index maybe update	1.000000
sorts the categorical by category value returning	values inplace ascending na_position	0.071429
must already exist and be table	value format	0.016667
table	format	0.024691
if key is	key	0.015152
particular	extension dtype bytes	0.142857
omitted where alternately any or all of	how thresh subset	0.250000
an ordered multiindex	indexes multi	0.014493
na	na	1.000000
type of datetimetzdtype this metaclass determines subclass ability	datetime tzdtype type	0.500000
return the actual filter	computation filter bin op	0.250000
labels matching criteria parameters	ndframe select crit	1.000000
after	core indexes index array wrap result	0.100000
our axes compute the expected nrows	io table nrows expected	0.142857
of values excluding missing values	group by ohlc	0.250000
the underlying	core indexes range index	0.021277
copy	copy	0.153846
a slice	categorical slice slicer	0.111111
series using mapper dict or key function	level as_index	0.111111
is index for series columns for	core ndframe	0.005051
compat with multiindex	indexes index sort levels monotonic	0.333333
iterate	html frame parser build	0.014706
we are stripping all of the _apply kwargs	name window center	0.071429
date	index date	0.200000
the npy_maxargs 32	core computation result type many	0.142857
intervalindex from a 1d array of	from intervals cls data name copy	0.125000
a block	block make block	0.100000
of type window_type and size window	window arg window win_type	0.100000
the _apply kwargs and	window center	0.076923
exist	io hdfstore append key	0.016667
that	core categorical validate ordered	0.055556
if any axis is	is	0.005291
tree-like object that can be used to	html	0.011765
of bytes in the underlying data	multi index nbytes deep	0.052632
computation	computation	0.192308
be table	value	0.005155
dataframe	data values	0.062500
sparse/dense and dtype) in this	core ndframe	0.005051
a string-like that is object dtype and	io convert string array	0.038462
result block from the result	core block	0.010870
class implementing the plot attribute for groupby	group by plot	0.062500
read csv file (discouraged	csv cls	0.066667
method to class python	method cls	0.076923
particular dataframe invoked by unicode df in	series unicode	0.166667
from datetime to	io datetime to	0.125000
for dataframe major_axis for	core ndframe iteritems	0.055556
we if the passed type is an	dtypes interval dtype is	0.066667
value from 1-dimensional ndarray only use this	datetime index get value series	0.071429
particular object	dtypes extension dtype repr	0.142857
putmask that potentially upcasts the result parameters	core dtypes maybe upcast putmask result mask	0.200000
try	try convert	0.166667
in	table	0.010870
the reindex	reindex	0.062500
index (can't do in caller because	json jsontable writer init obj orient date_format double_precision	0.166667
convert to our native types	categorical block to native types slicer	0.250000
return a new manager with the blocks	block manager combine blocks copy	0.250000
return index or ndarray filled	indexes datetime index ops	0.034483
if two indices overlap add suffixes	overlap	0.047619
index to be returned from apply if as_index=true	by index with as index b	1.000000
color based on column number and its label	label	0.028571
provide resampling when using a timegrouper	resample rule	0.166667
this function is called via the 'numpy' library	validate take with convert convert args kwargs	0.055556
take which sets nan values in one pass	core take nd arr indexer	0.125000
of type window_type and size window on	window arg window win_type min_periods	0.100000
to parse a	convert	0.032258
rows	width reader get rows	0.500000
to convert timedelta-like	core indexes td	0.055556
number of elements	size	0.041667
that we	ordered cls	0.055556
doesn't like to	string like	0.111111
a slice of myself	categorical slice slicer	0.111111
a fixed frequency timedelta index	core indexes timedelta range start end periods	0.083333
verify	verify	1.000000
a tree-like object that can be	parser	0.008000
hard to parse datetime	parse	0.034483
perform generic binary operation with optional fill	core series binop other func level fill_value	0.500000
of n	n axis	0.100000
particular panel invoked by unicode df	panel unicode	0.166667
reset	object reset	1.000000
memory usage of my	memory usage deep	0.200000
slice of panel along major axis	core panel major xs key	0.166667
a single	core ndframe	0.005051
suitable for initializing the gradientfill stop parameter	stop cls	0.066667
the passed type is	core dtypes period dtype is	0.125000
a slice of my values	tzblock slice slicer	0.083333
stderr	stderr	0.461538
minimum value of the object	core index ops mixin min	0.125000
decorator to capture stderr	capture stderr	0.055556
render a dataframe to a console-friendly tabular output	data frame to string buf columns col_space header	0.333333
create a pytables index on the	create	0.033333
is maps[0]	chain	0.031250
because a comparison between 8 aware arrays	datetime index ops mixin evaluate compare other op	0.250000
with nat which has the same length	nat new box	0.050000
that the exception raised matches the expected exception	assert raises contextmanager exception matches	0.142857
index objects and sorts if	core indexes index	0.007042
arr to have	arr new_shape	0.142857
new dataframe with labeling information in the	data frame reset	0.027778
dispatch to apply we	core group by mixin apply func name	0.050000
datetimelike (e	core indexes maybe to datetimelike	0.142857
that	build	0.013514
repr	repr	0.240000
the	ndframe	0.025126
dataframe the	core data frame	0.005917
object that can be used to	io html	0.012987
compat we are always our own	core categorical base	0.500000
curve with holidays between start_date and end_date parameters	holidays start end return_name	0.066667
return a string representation for	core indexes index unicode	0.083333
a new block manager	block manager	0.042553
intervalindex	indexes interval	0.062500
parse the raw data into a	html frame parser parse raw data rows	0.250000
scope	computation scope	0.500000
normalized locales that do not	util valid locales locales	0.050000
fill value	fill_value	0.033333
already exist	key value	0.011628
boolean if values	index ops mixin is	0.100000
index to be returned from apply if as_index=true	index with as index	1.000000
a simple cross-tabulation	core reshape crosstab index	0.066667
draw a matrix	matrix frame alpha figsize ax	0.500000
of ftypes in this object	ftype	0.076923
return the op	core computation bin op	0.055556
uint64 ndarray of my hashed values	index hashed values	0.166667
apply function and combine results together	core group by apply func	0.333333
deep	styler	0.022222
categoricals are the same	equal other	0.250000
of sql statement that create a table	table create table	0.166667
called after	indexes index array wrap	0.100000
exist and	hdfstore append key value	0.016667
a particular panel invoked by unicode df	core panel unicode	0.166667
metadata	metadata metadata	1.000000
values to specified type parameters	types values cast_type column	1.000000
cross-tabulation	crosstab index columns	0.066667
than a given width	arr width	0.142857
1d array	intervals cls	0.250000
new object with labels in requested axis removed	core ndframe drop labels axis level	0.250000
of the stata date formats to a type	datetime to stata type	0.200000
pack object	io msgpack packb	0.025641
called	array wrap result	0.075000
holiday object with a given	tseries abstract holiday	0.100000
if the date belongs to a leap year	index is leap year	0.142857
we are index sliceable then return my	convert to index sliceable	0.083333
gets called	series array wrap	0.100000
the indices that would sort the index	indexes range index argsort	0.166667
object that can	frame	0.009091
particular axis with	axis join	0.142857
layout some dataframes in vertical/horizontal layout for	table	0.010870
series/index by indicated number of times	str repeat arr repeats	1.000000
read sql database table into a	read sql table table_name con schema index_col	0.333333
a left-join except	left right on left_on	0.058824
for dataframe and major_axis	core	0.001326
the number of	index	0.004008
the same function multiple times in parallel	test parallel	0.142857
label	sparse series get label	1.000000
provides a resample of a	datetime	0.006711
lookup of value from 1-dimensional ndarray only	core indexes categorical index get value series	0.100000
coerce any object types to	object block convert	0.083333
'info axis' see indexing	keys	0.032258
rearrange index levels using input order may	series reorder levels order	0.333333
return a fixed frequency datetime index with business	indexes bdate range start end	0.083333
load msgpack pandas object from the specified file	read msgpack path_or_buf encoding iterator	0.200000
to midnight	indexes	0.004651
is a regex pattern instance	is re	1.000000
construct dataframe from dict of array-like or dicts	data frame from dict cls data orient dtype	0.200000
return the ftypes (indication of sparse/dense and	ftypes	0.043478
create a new unit if needed otherwise	dtypes datetime tzdtype new cls unit tz	0.055556
extensions that writer engine supports	io excel writer supported extensions	1.000000
autoscale	autoscale	1.000000
the 'info axis' see indexing for	ndframe keys	0.083333
only use this if you	indexes	0.004651
values and index	datetime index	0.007042
bind a method to class python	bind method cls	0.200000
fast lookup of value from 1-dimensional	get value	0.166667
over	io html frame	0.012987
reshape long-format data to wide generalized inverse	reshape lreshape data groups	0.500000
styler with a	io formats styler from	0.076923
the node with the key	io hdfstore get node key	0.083333
cast object to	errors	0.111111
fixed frequency timedelta index with	core indexes timedelta range start end periods	0.083333
return the correct pandassql subclass based on the	io pandas sql builder con flavor schema meta	0.055556
an expression in the context of the	expr inplace	0.200000
dataframe sorted by the n largest values of	data frame nlargest n	0.166667
the object is a named	core dtypes is named	0.500000
a method to	method cls	0.076923
boolean if	index ops mixin is	0.100000
safe get multiple indices translate keys for	group by get indices names	1.000000
convert argument to timedelta parameters	core tools to timedelta arg unit box	0.500000
filtered indexer that doesn't have any missing	from missing indexer tuple indexer axes	0.333333
array of datetime time	indexes datetime	0.011494
the html representation	io	0.003012
get integer location slice or	get loc key	0.500000
if the process of casting data from	assert safe casting cls data	0.047619
whether or not the	io validate	0.031250
an index/multindex with given dimensions levels names	names	0.038462
never	is	0.005291
an indexer even when non-unique	indexes index get indexer for target	0.250000
packed object return	packed object_hook list_hook use_list	0.200000
html	io formats styler	0.021277
string-like that is object	io convert string array data	0.038462
from a 1d array of interval objects parameters	core indexes interval index from intervals cls	0.333333
float	eng float	0.200000
passed type is an actual dtype that	core dtypes extension dtype is dtype cls dtype	0.111111
of whether each index value is	index ops	0.033333
set new item	manager set item	1.000000
with	with	0.206897
times to midnight	indexes	0.004651
return the values & release	io index col take data	0.111111
or float that can safely be cast	name val min_val	0.083333
return the dtypes in this object	core ndframe dtypes	0.333333
function is called via the 'numpy' library	with	0.034483
boolean if we if the passed type is	period dtype is	0.125000
indexable columns with an arbitrary number of data	legacy table read where columns	0.111111
is defined as	core indexes multi index view cls	0.047619
value from 1-dimensional ndarray only use	indexes period index get value	0.071429
validate that on is monotonic we	validate monotonic	1.000000
nan/nat	val	0.058824
a string-like that	io convert string array data	0.038462
the frequency	freq	0.016129
non-na values from passed panel or object coercible	join overwrite filter_func	0.076923
boolean criterion specified by func	core ndframe group by filter func dropna	0.250000
concatenation of	core dtypes concat datetime	0.125000
new item in-place does not consolidate adds new	item value check	0.500000
fixed frequency datetime	bdate range start	0.111111
indexer fill with the	nd indexer allow_fill	0.050000
ndarray	index	0.012024
convert to our native types	block to native types slicer na_rep float_format decimal	0.250000
of n between self analagoust to	n axis	0.100000
that	core categorical validate	0.055556
given a	indexes multi index get	0.100000
hack to accelerate unioning a collection of indexes	indexes datetime index union many others	0.040000
the passed type is an actual dtype that	dtype is dtype cls dtype	0.130435
join_units	join_units	1.000000
return datetimeindex with times to	core	0.001326
convert structured or record ndarray to dataframe parameters	data frame from records cls data index	1.000000
for	msgpack	0.022222
for making this object picklable	core indexes multi index reduce	0.333333
ndarray only use this if you	set value	0.023256
define the iteration interface on	iterator	0.100000
to table in file node must already exist	io hdfstore append key value	0.016667
bias	bias	0.833333
bytes in the underlying data	core indexes multi index nbytes deep	0.052632
are stripping all of the _apply kwargs	name window center	0.071429
the	io generic index col	0.500000
slice/take blocks	core block manager slice take blocks	0.500000
make box plots from dataframegroupby data	plotting boxplot frame groupby grouped subplots column fontsize	0.500000
sparseseries	dense sparse_only	1.000000
each subject string in the series extract groups	str extract frame arr	0.047619
cartesian product of all	core get group index labels shape sort	0.200000
object	parser build	0.014706
compat with multiindex	core indexes index sort levels monotonic	0.333333
that we have good categories	categories cls categories fastpath	0.250000
input values as an enumerated type	factorize values	0.111111
returns the float values converted	formats float array	0.055556
lookup of value from 1-dimensional ndarray only	indexes period index get value	0.071429
type window_type and size window on	arg window win_type min_periods	0.100000
an ordered multiindex compute	indexes multi index	0.013158
ndarray only use	value arr key	0.023810
sum of values excluding missing values	core group by ohlc	0.250000
array interface return my values	core indexes interval index array result	0.125000
ndarray of the flattened values of the underlying	ravel order	0.037037
can be used to	html frame parser	0.012658
pattern or regular expression in	arr pat flags	0.062500
return the td elements from a	parse td obj	0.083333
running code that expects to raise or	util assert produces warning expected_warning filter_level clear	0.071429
add the string-like attributes from the	core	0.001326
the block manager from a	core sparse to manager sdf columns	0.052632
group series using mapper dict or key	level as_index	0.111111
value from 1-dimensional ndarray only	indexes datetime index get value series key	0.071429
to set	series set	0.076923
two or more factors by default	reshape crosstab index columns values rownames	0.333333
to write this as a frame table	appendable multi series table write obj	0.333333
of each element along the axis selected adds	axis numeric_only	1.000000
csv file (discouraged please use :func pandas read_csv	frame from csv cls path	0.066667
index objects contain the same elements	indexes datetime index ops	0.034483
maps[0] raise keyerror is maps[0]	compat chain map	0.032258
swap levels	core series swaplevel	1.000000
return	io html	0.012987
a helpful message about our construction	construction error tot_items block_shape axes e	0.333333
return of an indexer even when non-unique	index get indexer for target	0.250000
parameter if	cls	0.016949
called after a ufunc	result context	0.081081
actual errorbar data or return the error dataframe/dict	plotting mplplot parse errorbars label err	0.142857
ufunc needs additional	wrap result context	0.029412
to_match into values	match to_match values	1.000000
deprecated use :meth to_timestamp instead	to datetime dayfirst	1.000000
left <= series <= right na	core series between left right inclusive	0.200000
compute the expected nrows	nrows expected	0.142857
our native types format slicing	native types slicer na_rep float_format	0.200000
the float values converted into	formats float array formatter get	0.055556
particular axis with optional set logic along the	core reshape concat objs axis join join_axes	0.333333
are index sliceable then return my	convert to index sliceable	0.083333
must already	io hdfstore append	0.016667
return boolean if	index ops mixin is	0.100000
apply function and combine results together in an	core group by apply func	0.333333
that is datetimelike (e	maybe to datetimelike	0.142857
create and setup my atom from	data col set atom	0.333333
this is defined as a copy	view cls	0.047619
description	description complib complevel fletcher32 expectedrows	0.500000
datetimeindex from one time zone to another	core indexes datetime index	0.007634
the formatted data as a unicode	indexes index formatter func	0.083333
the last day of the month	month	0.038462
additional	indexes	0.004651
of the (attr formatted_value)	multi index format attrs	0.142857
called upon unpickling rather than the	index cls d	0.083333
components	components	0.833333
have a fully reindex-output to the levels	data frame group by reindex output result	0.045455
binary feather-format for	core data frame to feather fname	0.083333
quantile a la numpy percentile	series quantile q interpolation	0.250000
is called via the 'numpy' library the	take with	0.055556
return an outside world format currently just	block external values dtype	0.125000
a tree-like	parser	0.008000
of self coded with categories	core categorical codes for groupby sort	0.071429
boolean if values	is	0.005291
a dataframe the levels in	data values index	0.066667
in this	ndframe	0.005025
dense type view	single block manager	0.200000
return a string representation for a particular object	core string mixin bytes	0.333333
new type (if copy=true return a new copy)	categorical block astype dtype copy errors	1.000000
boolean if we are a	manager is	0.100000
bool if we have only bool	block is bool	0.166667
the sparsedataframe as a	core sparse sparse data frame	0.058824
need to coerce	tseries maybe coerce	0.125000
the size of the dtype of	itemsize	0.027027
with requested level	level	0.043478
want to set the	series set	0.076923
can be used	io	0.003012
csv file (discouraged please use :func pandas read_csv	frame from csv cls path header	0.066667
attempt to coerce any object types	object block convert	0.083333
have a fully reindex-output	core data frame group by reindex output result	0.045455
columns that	columns	0.017857
a view	core categorical view	0.111111
indexer and return	nd indexer	0.030303
for as_blocks()	ndframe blocks	0.166667
write this as a frame table	appendable multi series table write obj	0.333333
numpy doesn't like	like	0.058824
arr to have shape new_shape, with a	arr	0.013699
ndarray only	core indexes categorical index	0.047619
from a 1d array of interval objects	core indexes interval index from intervals	0.333333
list of normalized locales that do not	util valid locales locales normalize	0.050000
view limits to the	series date locator autoscale	0.055556
whether i can attempt conversion to	convertible to index	0.333333
object with labels in requested axis removed	ndframe drop labels axis level inplace	0.250000
returns a curve with holidays between start_date	holiday calendar holidays start end return_name	0.066667
values can	values name freq	0.166667
of seconds (>= 0 and less than	indexes timedelta index seconds	0.066667
keyerror is	chain map	0.034483
memory usage of my values parameters	range index memory usage deep	0.200000
allows a decorator to take optional positional and	util optional args decorator	0.083333
reduction type operation if we	index ops mixin reduce op name	0.083333
number of temporary variables in this scope	core computation scope ntemps	0.250000
slobj	slobj	1.000000
csv file	series from csv cls path sep parse_dates	0.066667
boolean whether this axes needs validation for	ndframe indexer should validate	0.166667
if we have bytes decode them to unicode	core computation ensure decoded s	0.166667
tree-like object that can be used to	frame	0.009091
return my self as a sparse	core sparse sparse series as sparse	0.250000
load data from google bigquery	io read gbq query project_id index_col col_order	0.250000
set new labels	set labels labels level	0.500000
necessary	core sparse sparse	0.034483
the float values	io formats float array formatter get result as	0.055556
the maximum value of the index	core indexes datetime index	0.007634
never	core categorical block is	0.100000
fast lookup of value from 1-dimensional ndarray	indexes datetime index get value	0.071429
internal property property	core ndframe	0.005051
the table this is generally only useful to	column key column	0.142857
use this if you	core indexes index	0.007042
lookup of value	indexes index set value arr key value	0.038462
and / or columns using input	copy inplace	0.055556
of columns as lists	str columns	0.083333
we have a	ordered	0.017857
to table in file node	hdfstore append key	0.016667
input	core ndframe	0.005051
return frequency code group	group	0.027027
over the	frame parser	0.012500
we have	core categorical validate ordered	0.055556
x in y if possible otherwise use python	core computation in x y	0.047619
by str df in	str	0.017544
converts dtype types to stata types returns the	dtype to stata type dtype	0.250000
class	core indexes index append	1.000000
process of casting data from some accepted	indexes numeric index assert safe casting cls data	0.047619
handles preprocessing for cut where we convert passed	reshape preprocess for cut	0.200000
o and return packed bytes see :class packer	io msgpack packb o	0.055556
1-dimensional ndarray only use	arr	0.013699
if the index	core indexes index	0.007042
a	block is	0.045455
given a tuple of	indexes multi index get	0.100000
if each string matches a regular expression	arr pat case flags	0.166667
to table in file node	append	0.012987
to	to	0.322785
get integer location slice or	indexes multi index get loc key	0.500000
dict associating	stata reader value labels	0.142857
index objects sortedness of the	indexes range index	0.021277
produce 'pivot' table based on 3	core reshape slow pivot index	0.333333
string-like that is object dtype	string array data encoding	0.038462
times to midnight length is unaltered	indexes datetime index normalize	0.125000
cases to get lines 0) there are headers	python parser get index name columns	0.166667
for running code that expects to raise or	util assert produces	0.071429
putmask	putmask	0.333333
change string like dtypes to object for	dtypes invalidate string dtypes dtype_set	0.200000
max_fname_arg_count	max_fname_arg_count	1.000000
create a timegrouper and return our	resample obj kind	0.083333
should be inserted in a to maintain order	side sorter	0.166667
frequency datetime index with custombusinessday as the default	core indexes cdate range start end	0.083333
to table in file node	value format	0.016667
of bytes in the underlying	indexes multi index nbytes	0.052632
return packed bytes see	packb	0.022727
use this	index	0.002004
return a tree-like object that can be used	io html frame parser build	0.014706
box function to get object	mixin box func	0.142857
data (produce a	data frame	0.005714
convert from sif to datetime	to datetime	0.250000
from	compat chain map	0.032258
create a pytables index on	table create	0.043478
v should be inserted	frozen ndarray searchsorted v	0.033333
the process of casting	index assert safe casting	0.125000
whether each index value is	indexes datetime index ops	0.034483
a subset of rows if n	n	0.045455
the series extract groups from	str extract frame arr	0.047619
indexes give a	core indexes	0.004762
the float values converted into strings using	float array formatter get result as array	0.055556
convert to our native types format slicing if	categorical block to native types slicer na_rep	0.250000
on subclasses namely intervalindex to control get_slice_bound	indexes index get loc only exact matches key	0.142857
check that the left and right	left right check_dtype	0.100000
values at particular time of	at time time asof	0.066667
the minimum values along an axis	indexes datetime index ops mixin argmin axis	0.250000
return a tree-like object that	io	0.003012
panel objects and	core panel	0.019231
necessary for making this object picklable	core sparse sparse array setstate state	0.333333
rewrite the assignment operator for pytables expressions	core computation rewrite	0.125000
specialized cython take which	take nd arr indexer axis out	0.166667
from datetime to sif	io datetime to	0.125000
multirow	latex formatter format multirow	0.250000
returns numpy array of python datetime date	datetime index	0.007042
numpy representation of ndframe notes	core ndframe values	1.000000
need to coerce a scalar to a	indexes period index coerce scalar to	0.071429
index with	indexes bdate	0.050000
of ftypes in	ftype	0.076923
a scalar to a compat for our index	scalar to index item	0.333333
datetime index with business day as the default	core indexes	0.004762
to handle na filling of take	core indexes multi index assert take fillable values	0.250000
determines if two index objects	core indexes datetime index ops mixin equals other	0.200000
(attr formatted_value)	core indexes range index format attrs	0.142857
sanitize an index type to return an ndarray	sanitize index data index copy	0.200000
to capture stderr	capture stderr	0.055556
in sparsearray if the	core sparse sparse array	0.043478
apply	tseries semi month offset apply	0.500000
a fixed frequency datetime index with business day	indexes bdate range start end periods	0.083333
to infer better dtype for	convert datetime numeric timedelta coerce	0.071429
return datetimeindex	datetime	0.006711
a fixed frequency datetime	range start end periods freq	0.333333
called because a comparison between 8 aware arrays	datetime index ops mixin evaluate compare other op	0.250000
based on type and coerce into matrices	core arrays to mgr arrays arr_names	0.250000
new categorical by	categorical sort	0.166667
manager	mgr data index columns dtype	0.333333
a moving window of type window_type on	window apply window mean how	0.166667
take which sets nan values in one pass	core take nd	0.125000
coerce	coerce indexer	0.500000
sets index names to 'index'	set default names data	0.083333
'numpy' library the third	with convert	0.055556
return index or ndarray filled with	indexes datetime index ops	0.034483
underlying array which	index ops mixin	0.019231
form the union of	index union	0.333333
result as series or	axis	0.011364
child	child	1.000000
of bytes in	nbytes	0.046512
take a string-like that	string array data	0.038462
sql and params args to	params sql params	0.200000
used	io html	0.012987
am an indexed column	index col is indexed	0.200000
a tree-like object	html	0.011765
validate that an positional	valid positional	0.250000
histogram of the dataframe's series	hist	0.100000
reindex for all the	reindex	0.062500
to apply we are stripping all of	mixin apply	0.050000
and be	io hdfstore	0.014493
tuples of the (attr formatted_value)	indexes index format attrs	0.142857
the category labels	labels	0.038462
index or ndarray filled with	index ops mixin	0.019231
ndarray repeat	mixin repeat repeats	0.333333
object for datetimelike properties of	properties	0.046512
from	io fixed width	1.000000
frame	frame table	0.333333
makes sure that time and	like indices time	0.125000
create a new multiindex from the	core indexes multi index	0.013158
in file node must already	hdfstore append key value format	0.016667
detect terminal size	util get terminal size	0.166667
return our	period index resampler get	1.000000
the intersection of two index objects	indexes index intersection other	0.166667
return our new	period index resampler get new	1.000000
create the manager	mgr data	0.333333
this is defined as	indexes multi index view cls	0.047619
this is index for series columns	core ndframe	0.005051
stop	stop	0.300000
want to set	series set	0.076923
a data	table validate data columns	0.500000
backwards compatible alias for hdfstore	io get store path	1.000000
filter_observations	filter_observations	1.000000
to apply we are stripping	apply func name	0.050000
to table in file node must	append key value	0.016667
interpolate machinery	interpolate with fill method axis inplace	0.200000
a la re split in the series/index	core str split arr	0.166667
python 3 compatability shim	io stata value label encode s	1.000000
are valid stata	io stata	0.071429
particular dataframe invoked by unicode df in py2	series unicode	0.166667
iterate over the blocks collect and	f axis consolidate transposed	0.062500
in the series extract groups from	core str extract frame arr	0.047619
times to	core indexes datetime	0.011494
convert a numpy / pandas type to	table type x	0.055556
a scipy sparse coo_matrix to a sparseseries	core sparse coo to sparse series a dense_index	0.166667
to all values found in	core transform	0.250000
values as	values sort order na_sentinel	0.333333
inplace return a new block	block	0.008197
csv file (discouraged please use :func	core data frame from csv cls path	0.066667
a simple cross-tabulation	core	0.001326
take which sets nan values in one	take nd arr indexer	0.125000
handle specific apply logic for child classes	tseries semi month offset apply n other	0.200000
from 1-dimensional	arr	0.013699
called after	core indexes index array wrap	0.100000
i am never a	categorical block	0.100000
value from 1-dimensional ndarray only use this if	period index get value	0.071429
the dtype object	dtypes	0.015873
dataframe's series using matplotlib / pylab	by grid	0.200000
lookup	core indexes index set value arr key	0.023810
boolean if values	core index ops mixin is	0.100000
validate against an existing	validate other	1.000000
a dataframe to a sql database	io sqldatabase to sql frame	0.500000
indicating if the date belongs to a leap	core indexes period index is leap	0.125000
return the size of the dtype	itemsize	0.027027
to dataframe in	core data frame	0.005917
the underlying data	index ops mixin	0.019231
prior	array prepare	0.111111
blocks collect and create a new block manager	block manager reduction f axis consolidate transposed	1.000000
iter	iter	0.454545
interpolate	interpolate method axis	0.166667
filled with nat which has the	mixin nat new box	0.050000
of panel along minor axis	core panel minor xs key	0.166667
validates that we have a	validate ordered cls	0.055556
:	io formats excel formatter write	1.000000
passed a manager and a axes dict	core ndframe init mgr mgr axes dtype	0.333333
set our table type & indexables	table set attrs	1.000000
the unit	unit	0.066667
fast transform path for aggregations	transform fast	0.250000
for a particular panel invoked by unicode df	core panel unicode	0.166667
the put method	series put	0.055556
data (produce a	data	0.009709
from the	io	0.009036
dateoffset subclass representing possibly n business days	business hour	1.000000
be applied on each value	float array formatter value formatter float_format threshold	0.100000
where elements of v should be inserted	ndarray searchsorted v	0.033333
load a	load	0.100000
the op	op	0.045455
gets called	core indexes index array wrap result	0.100000
resample of a	datetime index resampler	0.066667
build an xpath expression to simulate bs4's	io build xpath expr	0.200000
in file node must already exist and	io hdfstore append key value format	0.016667
the data for	io data	0.250000
function to be applied on each	formatter float_format threshold	0.200000
for datetimelike properties of the	timedelta properties	0.052632
values as an enumerated type or categorical	factorize values	0.111111
series/index	str get arr	1.000000
from 1-dimensional ndarray only use this	index	0.002004
representing the totally ordered cartesian product of all	sort xnull	0.066667
interpret the dtype from a scalar parameters	core dtypes infer dtype from scalar val pandas_dtype	1.000000
cast to datetimeindex of timestamps at *beginning* of	series to timestamp freq how copy	0.500000
attempt to construct this type from a	dtype construct from	0.166667
on 3 columns of	columns	0.017857
resolve a variable name in a	resolve	0.090909
check to see if we can set a	util can set	0.125000
if you	set value arr	0.023810
to	formatter to	0.500000
selection	selection select	1.000000
value from 1-dimensional ndarray only use	indexes datetime index get value	0.071429
hash an multiindex / list-of-tuples efficiently	util hash tuples vals encoding hash_key	1.000000
return whether i am an	index	0.002004
handle na filling of take	indexes index assert take fillable values	0.250000
a string or np dtype	dtype dtype	0.100000
diff of the values	diff n axis mgr	0.111111
string-like and string-like array to convert	dtypes maybe convert string to	0.250000
if we have	multi index have	0.142857
we take a string-like that is object	convert string array	0.038462
fractional part of the given	frac x precision	0.100000
label	sparse sparse series get label	1.000000
block return result block from the result	core block	0.010870
that we have a	validate ordered cls	0.055556
horizontal bar plot	plot methods barh	1.000000
a manipulation result has the same dimensions as	constructor	0.040000
is called via the 'numpy' library the	take with convert	0.055556
the kind of my field	computation bin op kind	0.500000
return dtype and n/a values	empty dtype and	0.125000
comparison operations to convert datetime-like to datetime64	cmp opname nat_result	0.066667
to a leap year	period index is leap year	0.142857
are a series	core series group	0.030303
lines 0) there are headers on	python parser	0.250000
box function to get	box func	0.142857
a view	block is view	0.200000
the function to my	func mgr	0.083333
"reset" the styler	formats styler	0.021739
view	block is view	0.200000
vectorized membership of x in y if possible	core computation in x y	0.047619
for	sparse array	0.142857
create a new	new	0.058824
the view limits to the nearest multiples	plotting time series date locator autoscale	0.055556
new object with labels in requested axis removed	ndframe drop labels axis level	0.250000
ndarray	index set value arr	0.023810
copy if specified coerce to the	copy	0.012821
write a dataframe to	core data frame to	0.037037
over the	io html frame parser build	0.014706
sub-classes	series gotitem key ndim subset	0.333333
a simple cross-tabulation of	core reshape crosstab	0.066667
as a dataframe the levels	data	0.009709
of	arr key	0.023810
have	core categorical validate ordered cls	0.055556
is thrown by an error is encountered in	parser error	0.055556
blocks	combine blocks copy	0.500000
we have a valid ordered	categorical validate ordered cls ordered	0.058824
wrapper	wrapper	0.833333
don't allow a multi reindex on panel or	core panel needs reindex multi axes method level	0.500000
in a to maintain order	side sorter	0.166667
rewrite the assignment operator	core computation rewrite	0.125000
a tree-like object that can be used to	frame parser	0.012500
data	data groups	0.500000
the reduction type operation if we can	core index ops mixin reduce op name	0.083333
specified node (off	key start stop	0.333333
bytes in the underlying data	indexes multi index nbytes	0.052632
table in	append	0.012987
location for requested label	loc key method	0.142857
x not in y if possible otherwise use	core computation not in x y	0.066667
ndarray repeat	index ops mixin repeat repeats	0.333333
already exist and be	io hdfstore append key value format	0.016667
the flattened values of	indexes index ravel order	0.037037
infer_time_format	infer_time_format	1.000000
to class python	cls	0.016949
to get	get index name columns	0.200000
return the block manager from	sparse to manager sdf columns index	0.052632
add in the datetimelike methods (as	add datetimelike methods	0.333333
pack object	msgpack	0.022222
series we	series group	0.030303
with nat which has the	mixin nat new box	0.050000
return true if i am a non-datelike	is datelike	0.500000
if we opened it	io to hdf path_or_buf key	0.166667
the put method to its	core series put	0.055556
the values from	io index col convert values	0.166667
a moving window of type window_type on	window mean how	0.166667
infer the dtype	core dtypes infer dtype	0.333333
whitespace including newlines from each string	arr to_strip side	0.333333
group_index is	index group_index	1.000000
we take a string-like	string array data encoding	0.038462
string cast it to	maybe cast	0.100000
slice substrings from each element in	slice arr start stop step	0.333333
index	index data index	1.000000
a list of the axis indicies	core panel extract axes	0.142857
object with matching indices	core ndframe reindex like other method copy limit	0.111111
to construct this type from	core dtypes interval dtype construct from	0.166667
from ndarray or list of lists	matrix data index columns dtype	0.500000
we are stripping all of the _apply kwargs	func name window center	0.058824
we have a fully reindex-output	core data frame group by reindex output result	0.045455
needs	index array wrap	0.033333
number of bytes in	multi index nbytes	0.052632
gets called	core indexes index	0.007042
each level	core indexes multi	0.014493
return	core ndframe get	0.400000
__getitem__ method to work as desired	indexes index getitem key	0.166667
with optional filling/interpolation designed	left right on left_on	0.058824
pairwise correlation of columns excluding	core data frame corr	0.111111
raise	chain map	0.034483
uuid	uuid uuid	0.500000
coerce a scalar to	period index coerce scalar to	0.071429
csv file	csv cls	0.066667
single block and	block	0.008197
boolean whether this axes needs validation for a	core ndframe indexer should validate iterable axis	0.166667
a boolean list indicated if we have	core indexes multi index have	0.142857
reset the	core ndframe reset	0.500000
sparse/dense	core ndframe	0.005051
table as	table	0.010870
called	indexes period index array wrap	0.050000
determines if two index objects	core indexes range index equals other	0.200000
and return the op string	computation bin op generate	0.066667
shift categorical by desired number of	categorical shift	0.500000
front	front	1.000000
must already exist and be	append key value	0.016667
take a string-like that is object dtype	convert string array	0.038462
(can't do in caller because	jsontable writer init obj orient date_format double_precision	0.142857
a frequency guess generated by infer_freq	indexes datetime index ops mixin inferred freq	0.250000
panel objects and will raise an	core panel	0.019231
we do need a multi reindex this	core series needs reindex multi	0.333333
convert string 'r' to a timedelta object	tools coerce scalar to timedelta type r unit	0.500000
dropna if fill_value=nan returns	dropna axis inplace	0.166667
the number of bytes in the underlying data	index nbytes	0.052632
each index value is found in	indexes datetime index ops mixin isin values	0.083333
of tuples of the (attr formatted_value)	mixin format attrs	0.142857
compute the symmetric difference	symmetric difference	0.166667
put single value at passed column	col value takeable	0.500000
fixed frequency datetime index	core indexes bdate range start end periods	0.083333
upcast	upcast	1.000000
block manager from	sparse to manager sdf columns	0.052632
params args	params	0.058824
dispatch to apply	core group by mixin apply	0.050000
float values	formats float array formatter get result as array	0.055556
an integer	integer	0.125000
manager for running code that expects to	util assert produces warning	0.071429
for regular or 'level_x'	io json set	0.250000
of	set value arr	0.023810
accumulating data to be	list	0.034483
a user about a malformed	malformed msg	0.100000
n rows of	n	0.090909
slice	categorical slice slicer	0.111111
take which sets nan values	take	0.030303
apply function to all values found in index	core transform index index func	1.000000
comparison operations to convert datetime-like	indexes period index cmp opname nat_result	0.066667
be used to iterate over the	build	0.013514
more this is index	core ndframe	0.005051
only use this if	core	0.001326
the blocks collect	consolidate transposed	0.062500
csv file (discouraged	frame from csv cls path	0.066667
we have a float key and are not	key	0.005051
with passed location -s deleted	delete loc	0.666667
the new freq essentially	resampler asfreq fill_value	0.066667
compute the slice locations	index slice locs start end step kind	0.083333
datetime date objects (namely the	core indexes datetime index	0.007634
string-like and string-like array to convert object dtype	convert string to object values	0.142857
implement a datetime64 block with a	tzblock	0.076923
parse the raw data into a	frame parser parse raw data	0.250000
string-like array to convert object dtype	convert string to object values	0.142857
fixed frequency datetime index with business day as	indexes bdate range start	0.083333
freq and stride info	and stride freqstr	0.250000
or columns using input	mapper axis copy inplace	0.055556
fill	fill	0.700000
multiple iterables parameters	cls iterables sortorder names	0.500000
in file	append key	0.016667
string cast	index maybe cast	0.111111
sub-classes	core data frame gotitem key ndim subset	0.333333
choose the parser based on the input flavor	io parser dispatch flavor	1.000000
a simple	index columns	0.028571
to shift without copying data the shifted data	slice shift periods axis	0.083333
to table in	value	0.005155
boolean indicating if self is cached or not	core ndframe is cached	1.000000
one of the stata date formats to a	io convert datetime to stata	0.111111
csv file (discouraged please use :func	series from csv cls path sep	0.066667
number of seconds (>= 0 and less	indexes timedelta index seconds	0.066667
get instances of all the various index classes	util all index	0.142857
align a set	core computation align	0.250000
box function to get object from internal	datetime index ops mixin box func	0.142857
v should be	indexes frozen ndarray searchsorted v	0.033333
string-like	convert string array data	0.038462
true if categoricals are the same dtype	categorical is dtype equal other	0.250000
whether 'kwargs'	kwargs compat_args	1.000000
csv file (discouraged please use :func pandas read_csv	from csv cls path	0.066667
a prettier version of	pretty string	0.250000
bytes in the underlying	index nbytes deep	0.052632
of value from 1-dimensional ndarray only use this	period index get value series key	0.071429
not the 'usecols' parameter is a	io evaluate usecols usecols names	0.083333
we have a	core block is	0.090909
write a dataframe to a	core data frame to	0.037037
starting at the end of the	rsplit arr pat n	0.037037
return a categorical adjusted for groupby	core indexes categorical index codes for groupby sort	0.333333
read_csv	parser	0.008000
must	hdfstore append key value	0.016667
through views note this is *not* the same	is other	0.055556
or all of the data are missing	core data frame dropna	0.083333
using the index's	core ndframe tshift periods	0.166667
draw histogram	hist frame data column	0.200000
or columns using	inplace	0.027778
return true if more than one block with	block manager is consolidated	0.333333
of the values to	shape values	0.050000
to an openpyxl style	to style cls	0.500000
indexer input array to the smallest dtype	dtype indexer categories	0.333333
return the block manager from a dataframe	core sparse to manager sdf columns	0.052632
suffix	suffix	1.000000
object dtype try to coerce dates and/or numbers	dtypes maybe convert objects values convert_dates convert_numeric convert_timedeltas	1.000000
xlwt	xlwt writer convert	0.500000
return the join indexers	operation get join indexers	1.000000
optional positional	util optional args	0.066667
add in numeric methods	indexes index add numeric methods	0.500000
fast lookup of	core indexes index set value	0.023810
view limits to the nearest multiples of	series date locator autoscale	0.055556
a function has at most len(compat_args) arguments and	util validate args fname args max_fname_arg_count compat_args	0.333333
designated axis labels	reshape make axis dummies frame axis transform	0.166667
select values at particular time	core ndframe at time time asof	0.066667
object is a sequence of	dtypes is sequence	0.333333
convert to our native types format slicing	block to native types slicer	0.250000
the same type as the index (so we	core at indexer convert key key is_setter	0.090909
input values as an enumerated type	core factorize values sort order na_sentinel	0.111111
optional positional and	optional args	0.066667
database	sqlite database	0.500000
file	io hdfstore append	0.016667
determine if each string matches a regular expression	core str match arr pat case flags	1.000000
ftypes (indication of sparse/dense and dtype) in this	ndframe ftypes	0.055556
the data	core data frame dropna	0.083333
cross-tabulation	reshape	0.037037
a curve with holidays between start_date and end_date	abstract holiday calendar holidays start end return_name	0.066667
function for series arithmetic operations to	arith method op name	0.333333
to overlapping entries	with suffix left lsuffix right rsuffix	0.250000
interpolate machinery	block interpolate with fill method axis inplace	0.200000
of this	period index	0.024390
unstack a k a pivot series with	series unstack	0.333333
the underlying array which by-definition can	ops mixin	0.033333
values at particular time of	ndframe at time time asof	0.066667
dispatch to apply we are stripping	apply	0.026316
install the scalar	core coerce method converter	0.200000
used to iterate	io html	0.012987
to the underlying array which	ops mixin	0.033333
keyword argument of a	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
of value from 1-dimensional	value	0.005155
self as	as	0.066667
slice/take blocks along axis=0	take blocks ax0 slice_or_indexer fill_tuple	0.500000
expected error	exc_type exc_value trace_back	0.100000
node must already exist and be	value format	0.016667
a float key and are	key	0.005051
internal implementation	core index ops mixin values	0.500000
the block return result block from the result	core block	0.010870
from panel holding passed axis constant	core panel dropna axis how inplace	0.200000
object with the replacement attributes	core selection mixin shallow copy obj obj_type	0.166667
validates that we	validate ordered cls	0.055556
array object has	dtypes	0.015873
its values attribute	series	0.006757
a ufunc needs additional handling	array wrap result context	0.029412
holidays between start_date and end_date	holiday calendar holidays	0.166667
we are index sliceable then	to index sliceable obj	0.083333
construct dataframe from dict	data frame from dict cls data	0.200000
values and a date_format return a string	values values date_format	0.250000
1-dimensional ndarray only	set value arr	0.023810
the bool of a single	ndframe bool	0.055556
1-dimensional ndarray only use this	indexes index set value arr key	0.023810
the 'numpy' library the third	validate take with convert convert args	0.055556
compute standard deviation of	std ddof	0.166667
blocks collect and	reduction f axis consolidate transposed	0.062500
index with day as the	indexes	0.004651
the mode s of	series mode	0.083333
that we have a	validate	0.027778
return the header of	parser parse thead	0.111111
initializes or resets _id attribute with	core indexes index reset identity	0.250000
that we have a valid ordered parameter	categorical validate ordered cls ordered	0.058824
list of columns as lists of	str columns	0.083333
the columns	inplace	0.027778
for series	ndframe	0.005025
the full scope	scope full scope	0.055556
that can be used to	frame	0.009091
a method to class python 2 and python	method cls name	0.076923
requested level the	sortlevel level	0.142857
with the data types and ranges supported by	types data	0.333333
pack	msgpack	0.022222
with length less than a given width	arr width	0.142857
see if we can set	util can set	0.125000
the values	values	0.025641
index pairs for each element in	core map indices py arr	0.090909
convert to our native types format	core float block to native types slicer	0.250000
a tree-like	io html frame parser build	0.014706
and return the op string for this termvalue	computation bin op generate v	0.250000
a simple	core reshape crosstab	0.066667
the number of	indexes multi	0.014493
return the categorical without null	core categorical dropna	0.500000
construct this type from a string	dtype construct from string cls string	0.166667
the plot attribute for groupby	by plot	0.062500
the metadata pathname for	io table get metadata path	0.500000
a valid column name for generation (e g	computation bin op	0.055556
function elementwise	applymap func	0.333333
pandas only dtype	pandas	0.035714
blocks	block manager slice take blocks	0.500000
from apply if as_index=true	group by index with as	0.200000
we do need a multi reindex this	series needs reindex multi axes	0.333333
resample of a groupby implementation	groupby	0.085714
we need to coerce a	period index coerce	0.125000
return number of unique elements in the object	index ops mixin nunique dropna	0.083333
of the values to	block shape values ndim	0.050000
validate the	validate	0.027778
dtype then fill	dtypes maybe fill	0.500000
read html tables into a list of dataframe	io read html io match flavor header	0.200000
dispatch to apply we are stripping all of	apply func name	0.050000
block from	core block	0.010870
custom template	custom template	0.250000
lookup of	indexes index set value arr key	0.023810
add numeric	add numeric	0.142857
statement that create a table reflecting the	io sqlite table create table setup	0.066667
the shape of	ndim shape	0.111111
dtype of the	dtype	0.010989
return the block manager from a dataframe	sparse to manager sdf	0.052632
with statement	plotting options use key	0.333333
the info axis	info	0.090909
interpolate machinery	block interpolate with fill method	0.200000
memory usage	core index ops mixin memory usage deep	0.200000
construct an intervalindex from a 1d array of	from intervals cls data name	0.125000
multiindex at	multi index	0.020000
left and right data	left right vertical	0.500000
nan/nat from the provided	val	0.058824
values at particular time	core ndframe at time time	0.066667
non-tuple	target	0.083333
manager for running code that expects to	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
values between particular	index indexer between	0.125000
as a dataframe the levels in	data values index columns	0.066667
is the	core	0.001326
of difference between index values and index	index	0.002004
a python expression	expr	0.050000
needs	core indexes period index array wrap result	0.050000
a list of tuples of the (attr formatted_value)	core indexes datetime index ops mixin format attrs	0.142857
locator based	plotting pandas auto date locator get locator	0.062500
according to indexer and	nd indexer axis	0.043478
frequency timedelta index with day as the	indexes timedelta	0.083333
called prior to	series array prepare	0.111111
this is index for series columns	core	0.001326
of the required package is	package pkg_name	0.083333
date belongs to a leap	core indexes period index is leap	0.125000
ids parameters	ids	0.142857
on offset	offset	0.055556
rename one of axes	block manager rename axis mapper axis copy level	0.500000
get integer	indexes multi index get	0.100000
midnight length is	core	0.001326
the series/index	core str repeat	0.045455
return	map	0.029412
convert to our native types format slicing	to native types slicer na_rep float_format	0.250000
layout for explanation	table plotter	0.125000
evaluate the	eval func other raise_on_error	0.200000
value inplace return a new block (of a	block setitem indexer value	0.333333
panel along minor axis	panel minor xs key	0.500000
generate an array of	array nchars size dtype	0.500000
values and a date_format return a string format	format datetime64 from values values date_format	1.000000
an error is encountered in pd read_csv	error	0.028571
the function	func	0.011905
update index attributes e g freq depending on	index maybe update attributes	0.200000
panel objects and will	panel to	0.027027
that can be	frame	0.009091
simple cross-tabulation of	core reshape crosstab index columns values	0.066667
unique elements of arr1 and arr2 are equivalent	arr1 arr2	0.066667
index	range index	0.086957
of a frame	data frame	0.005714
must already exist and be	io hdfstore append	0.016667
the type of datetimetzdtype	datetime tzdtype	0.333333
exclude	exclude	1.000000
sql statement that create	io sqlite table create	0.066667
only	arr	0.013699
is a file-like	is file like obj	1.000000
where statement is of the right type	where w	0.083333
update	update	1.000000
an html	to html	0.250000
return index or	index ops mixin	0.019231
the reduction type operation	ops mixin reduce op	0.083333
loose checking if s is a pytables-acceptable expression	computation maybe expression s	1.000000
return a tree-like object that can be	io html frame parser build	0.014706
list indicated if we have mixed	indexes multi index have mixed	0.166667
return the td elements from a row	html frame parser parse td obj	0.083333
do need a	core series needs	0.500000
apply the	tseries semi month offset apply	0.500000
lookup of value from 1-dimensional ndarray	core indexes datetime index get value	0.071429
iter1 iter2 iterables that	iter1 iter2	0.166667
underlying data	core indexes multi index	0.013158
index names to 'index' for	names data	0.083333
dataframe objects and do not	core data frame	0.005917
needs additional handling as	core	0.001326
nat_rep	nat_rep	1.000000
only use this	core indexes index set	0.023810
count of number of non-nan observations	count arg freq	0.200000
coerce any object types to	core object block convert	0.083333
need to coerce a scalar	period index coerce scalar	0.250000
major_ver	major_ver	1.000000
the counts of the function in	counts f	0.041667
align a set of	align	0.111111
and if	if	0.111111
perform the reduction type operation	index ops mixin reduce op name axis	0.083333
be returned from apply if as_index=true	index with as	0.200000
the index (so we don't	core at indexer convert key key is_setter	0.090909
an attributes dict for my class	attributes dict	0.250000
and major_axis for	ndframe	0.005025
can	html frame parser build	0.014706
boolean whether i can attempt conversion to	is convertible to index	0.333333
view limits	series date locator autoscale	0.055556
microsecond	indexes datetime index ops mixin resolution	0.125000
microseconds	microseconds	1.000000
convert string-like and string-like array to convert object	dtypes maybe convert string to object values	0.142857
decorator to take optional	optional args decorator	0.083333
to convert datetime-like to datetime64	dt index cmp opname nat_result	0.066667
if you	index set value	0.023810
only use this if	set	0.012195
dataframe in panel to a separate excel sheet	panel to excel path na_rep engine	0.111111
coerce a	indexes period index coerce	0.125000
the indexer	indexer allow_fill	0.050000
name a dict associating	io stata reader value labels	0.142857
with optional filling/interpolation designed for ordered	ordered left right on left_on	0.333333
that can be used to iterate over the	frame parser	0.012500
comparison operations to convert timedelta-like to timedelta64	core indexes td	0.055556
semi	semi	0.714286
safe version of putmask	putmask	0.055556
a series excluding elements from groups	series group	0.030303
swap level i with level	swaplevel i	0.333333
names to 'index' for	set default names	0.083333
function designed	func	0.011905
attempt to coerce any object types	core object block convert	0.083333
:meth	inplace	0.055556
to_concat which has the	dtype to_concat name	0.333333
as series or by a series of columns	ndframe groupby by axis level	0.333333
from a row	frame parser parse	0.250000
index objects	index ops	0.033333
an xpath expression to simulate	xpath expr	0.166667
cross-section	xs loc	0.250000
dispatch to apply	apply func name	0.050000
a new datetimeindex with passed location s deleted	index delete loc	0.200000
row cross-section from the sparsedataframe as a series	core sparse sparse data frame xs key axis	0.166667
needs additional handling as	core indexes period index array wrap	0.050000
return series	core series	0.016000
values at particular time of day e	at time time asof	0.066667
return a version to operate on	like block mixin try operate values	0.333333
the float	float array formatter get result as	0.055556
value from 1-dimensional ndarray only use	categorical index get value series	0.100000
droplevel	droplevel	0.714286
that they are valid stata	io stata	0.071429
parse the raw data into a list of	frame parser parse raw data rows	0.250000
array repr of this	core indexes period index	0.034483
create/cache	io	0.003012
return a html representation for a particular	repr html	0.333333
checks that all the labels are	indexes numeric index is all dates	0.333333
result as series or by	groupby by axis	0.045455
csv file (discouraged please use :func pandas	core data frame from csv	0.066667
construct a slice	core ndframe slice	0.125000
if we define an builtin function for	is builtin func arg	0.333333
aggregate using input function or dict	aggregate arg	0.071429
set new labels on multiindex defaults	indexes multi index set labels labels	0.333333
the categories	categories	0.062500
iterate over the	html frame parser	0.012658
compute variance of groups excluding missing	by var ddof	0.166667
ndarray only use this if you	core indexes categorical index	0.047619
of x in y if	in x y	0.047619
params args to	params	0.058824
factory for a type checking function of type	type	0.024390
specialized cython take	take nd arr indexer axis out	0.166667
list of tuples of the (attr formatted_value)	indexes datetime index ops mixin format attrs	0.142857
value from 1-dimensional ndarray only use this if	indexes period index get value	0.071429
the ftypes (indication of sparse/dense and dtype)	core ndframe ftypes	0.055556
return a tree-like object that can be	frame parser	0.012500
this is defined as a copy with	index view cls	0.047619
moving window of type window_type on the data	window apply window mean how	0.166667
to a compat	to	0.006329
dateoffset increments between business eom dates	business month end	0.333333
multiple	sortorder names	0.500000
return a slice	core datetime tzblock slice slicer	0.083333
whether the	io	0.003012
are index sliceable then return my slicer otherwise	convert to index sliceable	0.083333
for dataframe and major_axis	ndframe	0.005025
is monotonic	is monotonic	1.000000
the td elements from a row element	frame parser parse td obj	0.083333
with requested level removed	droplevel level	0.500000
try to parse a ndarray like into	io json parser try convert data name	0.500000
read csv file (discouraged please use	from csv cls path	0.066667
return the op	computation bin op	0.055556
the flattened values of the underlying data see	ravel order	0.037037
rewrite	rewrite assign tok	0.125000
after a	core indexes index array wrap	0.100000
the ftypes (indication of sparse/dense and dtype) in	ndframe ftypes	0.055556
returns a latex representation for a particular dataframe	data frame repr latex	0.333333
attempt to infer better dtype for object	core ndframe convert datetime numeric timedelta coerce	0.071429
draw histogram of the	plotting hist frame data	0.200000
indicies	panel extract axes	0.142857
or by a	by axis	0.045455
of a	of	0.125000
we have a null slice	is null slice	1.000000
a row cross-section from the sparsedataframe as a	core sparse sparse data frame xs key	0.166667
an item pair from	compat chain map popitem	0.055556
put method to its values attribute	put	0.043478
to our original type	dtype	0.010989
we need to coerce a scalar to a	coerce scalar to	0.071429
of regular expression pat	frame arr pat flags	0.166667
arr1 and	contents arr1	0.066667
in engineering notation appending	eng formatter call	0.142857
add series to dataframe in	core data frame	0.005917
in the series/index by indicated number of	core str repeat	0.045455
csv file (discouraged	core series from csv cls path	0.066667
called via the 'numpy' library	validate argmin with	0.200000
sortorder	sortorder	1.000000
set my pandas type &	io fixed set object info	0.200000
decode	decode	0.833333
'args' and 'kwargs'	compat numpy validate groupby func name args kwargs	0.166667
header	frame parser parse thead	0.111111
we do need a multi reindex	core ndframe needs reindex multi axes method level	0.333333
single block and are	block	0.008197
labels shape	placement shape labels	0.500000
layout	table	0.021739
routine to turn values	for values values	0.250000
unstack a k a pivot series with multiindex	series unstack level fill_value	0.333333
install the scalar	coerce method converter	0.200000
dataframe apply	sparse data frame apply func	0.166667
read csv file (discouraged please use :func	from csv cls path	0.066667
a scipy sparse coo_matrix from a	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
the flattened values of	ravel order	0.037037
positional	positional	0.666667
capture stderr in	util capture stderr	0.055556
must	key	0.005051
'info axis' see indexing for more this is	core ndframe keys	0.083333
of the _upsample kwargs and	apply f	0.166667
sum of non-na/null observations in sparsearray if the	core sparse sparse array count	0.333333
we take a string-like that is	string array data	0.038462
csv file (discouraged please	core data frame from csv	0.066667
typeerror if	dtypes categorical	0.250000
satisfy the boolean criterion specified by	group by filter	0.200000
the specifications setup the internal grouper	grouper set grouper obj sort	0.250000
take a string-like that is object	convert string array data	0.038462
pandasobject	ndframe	0.005025
is valid	select n is valid	0.500000
a numpy / pandas type to its	table type	0.055556
the corresponding interval with closed bounds	interval closed bounds interval	0.200000
iterate over the	io html frame parser	0.012195
format of a	format	0.012346
array	array	0.236111
the counts of the function	counts f	0.041667
values	level values	0.500000
necessary	array	0.013889
of	core reshape crosstab index	0.066667
keyerror is	map	0.029412
dense representation	dense	0.125000
in file node must already	key value format	0.016667
sif to	date to	0.250000
concatenate to_concat which has the same class	core indexes index append same dtype to_concat name	1.000000
fast	arr key	0.023810
to end	offset end	0.500000
style_dict to an openpyxl style object	convert to style cls style_dict	0.166667
this	indexes index set value arr key	0.023810
this indexable	io index col update	0.125000
keywords	keywords	1.000000
we don't support start	fixed validate read kwargs	0.200000
set of subplots	plotting subplots	0.125000
time and	indices time	0.125000
return the full scope	scope full scope	0.055556
axis labels matching criteria parameters	core ndframe select crit axis	0.250000
simple	core	0.001326
lookup of	set value arr key	0.023810
is called via the 'numpy' library	argmin with	0.200000
the series/index by	core str repeat arr	0.045455
result will respect	ascending sort_remaining	0.200000
return a	build	0.013514
but densify first	non consolidatable mix in	0.083333
of set arr for sequences of small numbers	core fast count smallints arr	0.500000
minimum value of the	index ops mixin min	0.125000
ndarray filled with nat which has the	nat new box	0.050000
gets called after a	indexes period index	0.035714
plural 'names' parameter for multiindex	name names deep	0.125000
file	value	0.005155
sparsedataframe as a	sparse sparse data frame	0.058824
return packed bytes see :class packer for options	io	0.003012
the array interface return my values	core indexes categorical index array dtype	0.125000
return an attributes dict for my class	core indexes index get attributes dict	0.250000
value from 1-dimensional ndarray only use	period index get value series key	0.071429
value inplace return a new block (of	block setitem indexer value mgr	0.333333
intervalindex from a 1d array of	index from intervals	0.125000
box function to get	indexes datetime index ops mixin box func	0.142857
return the td elements from a row	io html frame parser parse td obj	0.083333
round a dataframe to a	data frame round	0.166667
sparse values need to	core sparse sparse array	0.043478
time index using the index's frequency if	core ndframe tshift periods freq	0.066667
locator based on a	get locator	0.062500
read rows	fixed width reader get rows	0.500000
correct scope	scope	0.076923
td elements from a row	parse td obj	0.083333
index objects and sorts	indexes index	0.007353
same function multiple times in parallel	util test parallel	0.142857
that path's extension against	io excel writer check extension cls	0.125000
as	period	0.016667
getting a cross-section	xs	0.111111
running code that expects to raise or not	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
value from 1-dimensional ndarray only	period index get value series key	0.071429
read from	read	0.066667
value inplace return	value	0.005155
the header of a	io html frame parser parse thead	0.111111
of group	group	0.054054
timedelta index	core indexes timedelta	0.083333
as	period index array	0.050000
from	core indexes index set value arr	0.023810
use this if	arr key	0.023810
do a	src_list dest_list inplace regex	0.500000
and be	format	0.012346
and are not a floating index	indexes index maybe cast indexer	0.200000
init self from ndarray or list of lists	init matrix data index columns	1.000000
validate that an positional	indexer has valid positional setitem	0.250000
valid ordered	ordered	0.017857
of arr1 and	contents arr1	0.066667
exist and	key	0.005051
setup my atom from the block	io data col set atom block block_items existing_col	0.200000
object o and return packed bytes see	msgpack packb o	0.055556
categorical by	categorical sort values inplace	0.166667
we take a string-like	io convert string array data	0.038462
data can be represented as uints	indexes uint64index assert safe casting cls data subarr	0.333333
of the maximum values along an axis	index ops mixin argmax axis	0.250000
return datetimeindex with times to midnight length	core indexes	0.004762
for panel objects and will raise an	core panel	0.019231
and params args to dbapi2 0	params	0.058824
ufunc	core indexes index array wrap result context	0.200000
type window_type and size window	stats rolling window arg window win_type min_periods	0.100000
specialized intersection for datetimeindex objects	datetime index intersection	0.142857
boolean	is	0.005291
float values converted into strings	formats float array	0.055556
/ pandas type to its	type	0.024390
each string a la re split in	split arr pat n	0.200000
downsample the	datetime index resampler downsample how	0.200000
want to set	core series set	0.076923
the float values converted into strings using	io formats float array formatter get	0.055556
object	io msgpack	0.050000
sort multiindex at the	multi index sortlevel	0.166667
bytes see :class packer for	packb	0.022727
a masked rec array and create the manager	core masked rec array to mgr	0.500000
compute a	index columns values	0.037037
convert a range argument	indexer convert range key is_setter	1.000000
keyword argument of a function	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
'parse_dates' parameter is a non-boolean scalar	parse dates arg parse_dates	0.142857
dtype) in this object	core	0.001326
datetimelike properties of the series	properties	0.046512
memory usage	index ops mixin memory usage deep	0.200000
the totally ordered cartesian product of all	sort xnull	0.066667
the correct pandassql subclass based	pandas sql builder con flavor schema meta	0.055556
timedelta-like to timedelta64	core indexes td index	0.055556
necessary	sparse array	0.142857
table	key value	0.023256
compute a simple	index	0.002004
csv file (discouraged please use :func pandas read_csv	series from csv cls path	0.066667
parse datetime	parse	0.034483
gets called after a	core indexes period index array wrap	0.050000
running code that expects	util assert produces warning expected_warning filter_level clear	0.071429
provides a resample of	index resampler	0.065217
take which sets nan	core take nd arr indexer	0.125000
that can be used to	frame parser	0.012500
to ndarray raises on	indexes index coerce to ndarray	0.166667
string-like that is object dtype	convert string array data	0.038462
a dataframe as	core data frame	0.005917
the fill value for the nan/nat	fill value val	0.142857
defined as	core indexes multi index view cls	0.047619
block and	core block manager	0.022727
that path's extension against the writer's supported extensions	check extension cls ext	0.333333
the _apply kwargs and	name window center	0.071429
the number of	multi	0.018182
convert to our native types format slicing	core datetime block to native types slicer	0.250000
are index sliceable then	convert to index sliceable obj	0.083333
for general index	core indexes index validate	0.066667
the dtype from a scalar or array parameters	dtype from array	0.500000
to table in file	hdfstore append key value format	0.016667
with nat which has the same length	ops mixin nat new	0.050000
on given axis	axis	0.011364
of	crosstab	0.050000
the totally ordered cartesian product	group index labels shape sort xnull	0.066667
return an	ndframe to	0.043478
this type	dtypes interval dtype	1.000000
fast path for getting a	block manager fast	0.250000
file node must	key value	0.011628
lookup	index set value arr key	0.023810
construct this type from a	categorical dtype construct from	0.166667
nrows ncols -	make custom dataframe nrows ncols	0.250000
apply we	core group by mixin apply	0.050000
multiindex compute the	core indexes multi index	0.013158
the node with	io hdfstore get node	0.166667
write this as a frame table	table write obj	0.333333
of	key	0.005051
csv file (discouraged please	core series from csv cls path sep	0.066667
v should be inserted	v	0.026316
an indexer even	index get indexer for	0.250000
return datetimeindex with	indexes	0.004651
return the td elements from a row element	html frame parser parse td obj	0.083333
box function to get object from	datetime index ops mixin box func	0.142857
user about a malformed row	malformed msg row_num	0.100000
return the mode s of the	mode	0.050000
compute variance of groups excluding missing values	group by var ddof	0.166667
intersection of two index objects	indexes index intersection other	0.166667
take	take nd arr indexer axis	0.125000
returns a multi-index suitable for a panel-like dataframe	index time panels names	0.076923
timestamps/timedelta	like block mixin get	1.000000
option metadata if key is a registered option	registered option key	0.333333
make sure a valid	core computation check	1.000000
return packed bytes see :class packer for	io msgpack packb	0.025641
series or by a series	groupby by axis level	0.045455
subset rows or columns	core ndframe filter items like regex axis	0.166667
at the given quantile	series quantile	0.083333
with times to midnight	indexes datetime	0.011494
csv file (discouraged please	csv cls path sep parse_dates	0.066667
attribute if	series	0.006757
value of the index	datetime index	0.014085
type (if copy=true return a new copy)	block astype dtype	1.000000
1-dimensional ndarray only use this if	index set value arr	0.023810
from the table this is generally only useful	select column key column	0.142857
swap level i with level	indexes multi index swaplevel i	0.333333
perform the	level limit tolerance	0.500000
of value from 1-dimensional	get value series	0.250000
in panel to a separate excel	panel to excel path na_rep engine	0.111111
:meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace limit downcast	0.333333
openpyxl is supported	compat is	0.111111
the indexer input array to the smallest dtype	dtype indexer categories	0.333333
to apply we are	by mixin apply func name	0.050000
by a series	by	0.038462
internal method to handle na filling of take	index assert take fillable	0.250000
true if any axis is	is	0.005291
tz-aware type return an encoded	io get tz tz	0.066667
already exist and	hdfstore append key value	0.016667
new copy	copy	0.012821
to dataframe in specified	data frame set item key	0.250000
dom	doc match attrs	1.000000
the ftypes (indication of	ndframe ftypes	0.055556
downsample the cython	core period index resampler downsample how	0.200000
in the series extract groups from	core str extract arr	0.066667
return item and	item	0.050000
that	categorical validate	0.055556
assert that we all have the same closed	interval index append same dtype to_concat name	1.000000
is of the string	is string	0.500000
datetimeindex with times to midnight length	datetime index	0.007042
additional	period	0.016667
or intervalindex return the corresponding interval	interval	0.029412
evaluate a python expression as a	expr	0.050000
a ufunc	core indexes period index array wrap result context	0.041667
align a set of	computation align	0.250000
a	categorical block	0.100000
'numpy' library the third	take with convert	0.055556
try to deal with nat-like arg is	arg errors	0.026316
provides a resample of a	datetime index	0.007042
with a provided encoding	fh encoding compat is_verbose	0.200000
to a variable number of decimal places	decimals	0.090909
a nice str repr of our rolling object	core window unicode	0.071429
and be	io	0.003012
function return fillvalue for a	fillvalue	0.071429
handling	indexes period index array wrap	0.050000
of tuples of the (attr formatted_value)	range index format attrs	0.142857
this if	set value	0.023256
values from	values	0.017094
my hashed values	indexes multi index hashed values	0.166667
if 'series argmin'	skipna skipna	0.100000
csv file (discouraged please use :func pandas	frame from csv cls path header	0.066667
add the operations to the cls evaluate the	add aggregate operations cls	0.500000
append to	value format append	0.125000
python datetime date objects (namely the	core indexes datetime	0.011494
specialized intersection for datetimeindex	core indexes datetime index intersection	0.142857
already exist	io hdfstore append key value	0.016667
date in xport format return python date	sas parse date datestr	0.250000
the reindex for all the	ndframe reindex	0.125000
of python datetime date	indexes datetime index	0.007634
for the aggregators	aggregate arg	0.071429
i : int slice or sequence	data frame ixs i	0.200000
sanitize input data to	core sanitize array data	0.250000
a list-like indexer	interval index convert list indexer keyarr kind	0.066667
to apply we	apply func name	0.050000
integer location	loc	0.160000
1-dimensional ndarray only use this if you	core indexes index set value arr key	0.023810
that can be	html	0.011765
from a 1d array of	index from intervals cls data	0.125000
to apply we	by mixin apply	0.050000
info axis of	info	0.090909
generate nd initialization axes are passed	panel init data data copy	1.000000
of sparse/dense and dtype) in this object	core ndframe	0.005051
multiindex compute	core indexes multi index	0.013158
create a new unit if	core dtypes datetime tzdtype new cls unit tz	0.055556
datetimelike properties of the series	period properties	0.052632
we have	cls	0.016949
to get instances of all the classes	util all	0.055556
actual sparse values need	core sparse sparse array	0.043478
the number of bytes in the underlying data	core indexes multi index nbytes deep	0.052632
index	core ndframe	0.005051
sub-classes to	series gotitem key ndim subset	0.333333
used to iterate over the	frame	0.009091
fast path	single block manager fast	0.250000
a dataframe the levels	data values index columns	0.066667
are going to write this	write obj	0.041667
to table in file node must already	value format	0.016667
a future release	categorical reshape new_shape	0.142857
sure that time	like indices time	0.125000
returns numpy array of python datetime date objects	core indexes datetime index	0.007634
quantile-based discretization function discretize variable into	reshape qcut x q labels retbins	1.000000
my pandas type	io fixed	0.166667
nrows ncols - number	custom dataframe nrows ncols	0.250000
dtype	categorical is dtype	1.000000
comparable timezone both	core indexes datetime index timezone	0.200000
parse the raw data into a list of	io html frame parser parse raw data	0.250000
to parse	parse	0.034483
frequency datetime index with custombusinessday as the default	core indexes cdate range start end periods	0.083333
a string-like that	string array data	0.038462
in file node must already exist and	hdfstore append	0.016667
underlying data	core indexes range index	0.021277
determines if two index objects contain	indexes float64index equals other	0.200000
for a type checking function of type	core computation is type	0.125000
series based on type and coerce into matrices	arrays to mgr arrays arr_names	0.250000
types format slicing	types slicer na_rep float_format decimal	0.200000
necessary	core sparse sparse array	0.043478
elements that are non-zero this method is equivalent	series nonzero	0.166667
for akima interpolation	akima interpolate	0.500000
for panel objects and will raise an error	core panel	0.019231
all the locales that are available on the	locales prefix normalize locale_getter	0.125000
defined as a copy with the	multi index view cls	0.047619
the aggregators	mixin aggregate arg	0.166667
fill value for the dtype of the values	fill value dtype	0.250000
needed	needed	1.000000
backward to next offset	rollback dt	0.125000
from ndarray	index columns dtype	0.125000
read from a url file or string	read	0.033333
float values converted into strings using	io formats float array formatter	0.055556
expected exception and	contextmanager exception	0.166667
a delegatedclass of a series that is datetimelike	to datetimelike data	0.125000
and create a new block manager	block manager reduction	0.250000
that can be used	io	0.003012
fast transform path for	ndframe group by transform fast result	0.333333
text representation of object to	to	0.006329
the :meth pandas dataframe reset_index function	level drop name inplace	0.142857
from 1-dimensional ndarray only use this if you	arr	0.013699
of normalized locales that do not throw an	util valid locales locales normalize	0.050000
index with target's values	indexes multi index	0.013158
called	core indexes index array wrap result	0.100000
input into a pandas only	pandas	0.035714
checking function of type t or tuple	computation is type t	0.083333
capture stderr in a buffer so that it	capture stderr	0.055556
create and return the op string	bin op generate	0.066667
update index attributes e g freq depending	datetime index maybe update attributes attrs	0.200000
interpolate values	core resampler interpolate method	0.166667
ensure that	ensure	0.222222
accelerate unioning a collection of	union many others	0.040000
evaluate the block return result block from the	block eval	0.333333
stripping all of the _upsample kwargs and	apply f	0.166667
actual sparse	core sparse sparse	0.034483
return the dtypes	dtypes	0.015873
get integer location	core indexes period index get loc	1.000000
types format slicing if desired	types	0.103448
generation (e g an	computation bin op	0.055556
abstract interface	abstract	0.111111
object invoked by str df in both py2/py3	core dtypes extension dtype str	0.250000
from 1-dimensional ndarray only use	set	0.012195
particular object invoked by str df in	str	0.017544
float	float array formatter get	0.055556
new index with passed location -s deleted	categorical index delete loc	0.333333
beautifulsoup under	beautiful soup html5lib	0.333333
type	type x	0.055556
type promotion and coercion	dtypes maybe upcast values fill_value dtype copy	0.166667
create a new	dtypes datetime tzdtype new	0.333333
slice/take blocks along axis=0	blocks ax0 slice_or_indexer fill_tuple	0.500000
a b ndarrays	core nancorr a b method min_periods	1.000000
can be used to	parser	0.008000
that path's extension	io excel writer check extension	0.250000
datetimeindex	indexes	0.004651
cross-section	xs	0.111111
read csv file (discouraged please use :func pandas	data frame from csv cls	0.066667
value to format it	value	0.005155
update index attributes e g freq depending on	indexes datetime index maybe update attributes attrs	0.200000
my	io fixed	0.166667
a a left and	cls left	0.333333
categoricals are the same dtype	dtype equal other	0.250000
this if	core indexes index	0.007042
we have	is	0.010582
my specific	indexes interval index	0.062500
closest period	period	0.016667
and	key	0.005051
custom template and jinja environment	from custom template cls searchpath name	0.500000
defined as a copy with the	view cls	0.047619
values and a	datetime64 from values values	0.333333
dataframe pivot	core reshape pivot index columns values	0.333333
i want to construct this block as an	block array	0.500000
where : array of timestamps	asof locs where	1.000000
that an positional indexer	positional setitem indexer indexer	0.052632
new unit	tzdtype new cls unit	0.055556
update index	indexes datetime index maybe update	1.000000
of putmask that potentially upcasts the result	core dtypes maybe upcast putmask result mask other	0.200000
storer	storer	1.000000
fast lookup	indexes index set value	0.023810
feather-format	frame to feather	0.333333
list of the axis indicies	core panel extract axes	0.142857
s-s	core diff arr	0.200000
use this if	value arr	0.023810
be applied on each value to format it	formats float array formatter value formatter float_format threshold	0.100000
an positional	has valid positional	0.250000
indexer fill	indexer	0.009174
an ndarray of the flattened values of the	indexes index ravel order	0.037037
of a	period index	0.024390
return label for first non-na/null value	core series first valid	0.250000
fast path for getting a cross-section	single block manager fast xs loc	1.000000
the maximum	max subset color axis	0.166667
result block s	core block where other cond align	0.166667
for	bool method	0.333333
read csv	core series from csv cls path sep parse_dates	0.066667
tree-like object that can be used to	frame parser	0.012500
axis omitted where alternately any or	frame dropna axis how thresh subset	0.100000
sanitize an index type to return an	sanitize index data index copy	0.200000
coerces data to ndarray raises on	coerce to ndarray cls	0.166667
get the values view	core get values values	0.125000
index objects and sorts if	indexes index	0.007353
to preserve dtype if	core putmask smart v m n	0.055556
'numpy' library	compat numpy validate take with convert	0.055556
to apply we are stripping all	group by mixin apply func name	0.050000
the table	io table	0.062500
integer	integer name	0.333333
a slice	block slice slicer	0.083333
/ or columns using input function	mapper axis copy inplace	0.055556
actually format my specific types	core indexes index format native types na_rep quoting	1.000000
compute a simple cross-tabulation	values	0.008547
operations to convert datetime-like	index cmp opname nat_result	0.066667
of my hashed values	core indexes multi index hashed values	0.166667
wrap long strings in the series/index to be	core str wrap	0.333333
returns day hour minute second millisecond or microsecond	core indexes datetime index ops mixin resolution	0.125000
after	wrap	0.057692
the numexpr condition and filter	expr evaluate	0.200000
the block manager from	core sparse to manager sdf	0.052632
of	core reshape crosstab	0.066667
a bit of a hack to accelerate unioning	datetime index union many others	0.040000
create and return the op string for	core computation bin op generate	0.066667
bit of a hack to accelerate unioning	index union many others	0.040000
hard to parse datetime	parse time	0.125000
are index sliceable then return my slicer otherwise	core convert to index sliceable obj key	0.083333
packed bytes	io msgpack packb	0.025641
json lists to line delimited	convert to line delimits s	0.166667
the float values converted into strings	io formats float array formatter get	0.055556
input function or functions	core ndframe rename axis mapper axis copy	1.000000
take	take	0.424242
given a date in xport format return	sas parse	0.066667
or columns using input function or functions	rename axis mapper axis copy inplace	0.250000
actually format my specific types	indexes interval index format native types na_rep quoting	1.000000
length is	datetime index	0.007042
a boolean whether this axes needs validation	core ndframe indexer should validate iterable axis	0.166667
as	series as	0.125000
in file node must already	key value	0.011628
to determine	n method	0.125000
this function is called via the 'numpy' library	numpy validate take with convert	0.055556
elements of v	frozen ndarray searchsorted v	0.033333
true if this is a valid	is valid	0.250000
unique elements of arr1 and arr2 are	util equal contents arr1 arr2	0.066667
values	core indexes multi index get level values	0.500000
a spreadsheet-style pivot table	core reshape pivot table	0.111111
return datetimeindex with times to midnight length is	indexes datetime	0.011494
custom template	from custom template	0.250000
defined as a copy with the same	multi index view cls	0.047619
update index attributes e g freq	index maybe update attributes	0.200000
dataframe with multi-level index return new dataframe	core data frame	0.005917
masked rec array and	masked rec array to	0.090909
the values at the new freq essentially a	core resampler asfreq fill_value	0.066667
check whether or not the 'parse_dates' parameter	io validate	0.031250
return a uint64 ndarray of my hashed values	multi index hashed values	0.166667
lookup	core indexes index set	0.023810
a result set coerce	core dtypes coerce	0.066667
reduction type operation	core index ops mixin reduce op	0.083333
series arithmetic operations	op	0.045455
to take the cross-product	core maybe convert ix	0.166667
statement that create a	sqlite table create	0.066667
table in file	append key	0.016667
boolean whether i can attempt conversion to a	core indexes is convertible to index	0.333333
returns the float values converted	formats float	0.055556
convert to our native types format slicing if	datetime block to native types slicer na_rep	0.250000
our	resampler	0.071429
each group if n is an	group by	0.016129
unit if	unit tz	0.125000
categoricals are the same dtype	categorical is dtype equal other	0.250000
returns the float values converted	io formats float array formatter get	0.055556
a set of kwargs suitable for	kwargs cls	0.040000
return an indexer coerced to the codes	core categorical maybe coerce indexer indexer	0.125000
this object close it if we opened it	io to hdf path_or_buf key value	0.166667
to table in file node must	io hdfstore append key value	0.016667
get instances of all the	all	0.043478
provide concatenation of an datetimelike array of arrays	concat datetime to_concat axis typs	0.142857
left and right dataframe are equal	frame equal left right check_dtype check_index_type	0.333333
be used to iterate	frame parser build	0.014706
an indexer coerced to the codes dtype	core categorical maybe coerce indexer indexer	0.125000
sort_remaining	sort_remaining	1.000000
this if you	set value arr	0.023810
bytes in	index nbytes	0.052632
a bool if we have only bool values	block is bool	0.166667
if we are index sliceable then	convert to index sliceable obj	0.083333
feather-format for	to feather	0.333333
the	html frame parser	0.012658
needs additional handling	core indexes period index array	0.050000
algos groupsort_indexer implements counting sort	index sorter group_index ngroups	0.250000
'info axis' see indexing	core ndframe keys	0.083333
shade the	io formats styler highlight null	0.500000
override this only if the process of casting	numeric index assert safe casting	0.125000
file node must already exist and be table	append	0.012987
count of number	count arg freq	0.200000
to beginning	beg	0.090909
int64 with null values	args values	0.083333
function that converts json lists to line	convert to line	0.142857
read csv file (discouraged please	csv cls path header sep	0.066667
to apply we are stripping all of	by mixin apply func name	0.050000
table in	io hdfstore append	0.016667
a tree-like object that can be used to	build	0.013514
ensure that we	ensure	0.111111
compression	compression	0.833333
read from a url	read obj	0.058824
panel objects and will raise an	panel	0.017857
(e g	core dtypes maybe	0.166667
after a	indexes period index array wrap result	0.050000
value from 1-dimensional ndarray only	value	0.005155
as sparsifying is not supported for panel objects	panel to sparse	0.037037
create a new unit if needed	tzdtype new cls unit	0.055556
called via the 'numpy' library	validate take with convert convert	0.055556
of	core categorical	0.027778
for panel objects and will raise	core panel to sparse	0.037037
using the interpolate machinery	block interpolate with fill method axis	0.200000
of the values to	core block shape values	0.050000
return index or ndarray filled	index	0.002004
for sequences of	core	0.001326
return a prettier version of obj	get pretty string obj	1.000000
index objects contain the	core indexes index	0.007042
unit if needed otherwise return	unit	0.066667
dtype converting float	dtype errors	0.333333
index or ndarray filled with	index ops	0.033333
return dateoffset object associated with rule name	tseries get offset name	1.000000
dataframe sort_index	core data frame sortlevel level axis	1.000000
as a dataframe the levels in	data	0.009709
the float values	io formats float	0.055556
string-like and string-like array to convert object	maybe convert string to object	0.142857
read csv file (discouraged please use :func pandas	from csv cls path sep	0.066667
install the scalar coercion methods	core coerce method converter	0.200000
called via the 'numpy' library the	validate take with convert convert args kwargs	0.055556
and create a new block manager	block manager reduction f	0.250000
to table in	io	0.003012
decorator to capture stderr in	capture stderr	0.055556
dataframe in specified	data frame set item key	0.250000
supported for panel objects and will	core panel	0.019231
each interval in the	core indexes interval	0.062500
node must already exist and be table	io hdfstore append	0.016667
their default values as specified	for default values fname	0.200000
create/cache the	table	0.010870
numexpr	num expr	1.000000
set my pandas type	fixed set object	0.200000
the columns of a	inplace	0.027778
return true if this is a valid field	computation bin op is valid	0.500000
add	add aggregate	0.500000
slice the info axis	info slice	0.500000
if we define an builtin function	core selection mixin is builtin func arg	0.333333
built up styles to	io formats	0.027778
packer for options	msgpack	0.022222
a html	html	0.011765
bit of a hack to accelerate unioning	core indexes datetime index union many others	0.040000
categorical without null	categorical dropna	0.500000
fast transform path for aggregations	ndframe group by transform fast	0.333333
panel-like dataframe	core panel index time panels names	0.076923
might need to coerce a	maybe coerce freq	0.125000
add in the datetimelike methods (as we	datetime index ops mixin add datetimelike methods cls	0.333333
group return result as series or by	by axis	0.045455
number of bytes in the	indexes range index nbytes	0.052632
returns true if any axis is	is	0.005291
to see if a url has	url url	0.045455
particular time	time time asof	0.142857
a dataframe to a	core data frame to	0.111111
indicated if we have mixed levels	indexes multi index have mixed levels	0.200000
of the minimum values along an axis	indexes datetime index ops mixin argmin axis	0.250000
sets names on levels	multi index set names names level validate	0.200000
of two datetimeindexes	index sub datelike dti other	0.333333
positional	core ndframe indexer has valid positional setitem	0.250000
an intervalindex from	core indexes interval index from arrays	0.166667
in the sparseseries	core sparse sparse series	0.125000
passed off to scipy interpolate	core interpolate scipy	0.250000
return a slice of my values	tzblock slice slicer	0.083333
comparison operations to convert timedelta-like to	td	0.043478
return the underlying data which is a categorical	indexes categorical index values	0.333333
a single element	ndframe	0.005025
a deprecated option and if so prints	warn if deprecated	0.166667
shade the background	io formats	0.027778
a single block and	block	0.008197
column and index	sparse data frame set value index col	0.500000
ndarray	index columns	0.028571
the number of bytes in the underlying	core indexes range index nbytes	0.052632
you	arr	0.013699
the same	ndframe	0.005025
index with day as the	core indexes	0.004762
indexer	indexer indexer	0.071429
lookup of value from 1-dimensional ndarray only use	core indexes categorical index get value series key	0.100000
percentiles	percentiles	1.000000
make box plots from dataframegroupby	plotting boxplot frame groupby grouped subplots column fontsize	0.500000
boolean series equivalent to left	left	0.018519
of python datetime date objects	indexes datetime	0.011494
ndarray or	index	0.002004
the _apply kwargs and	func name window center	0.058824
block manager from a dataframe of	core sparse to manager sdf columns index	0.052632
levels attribute is 1 or a	io table is multi index	0.142857
the _apply kwargs	name window center	0.071429
apply mapper function to its categories not	map mapper	0.125000
sparseseries (with nan fill_value) to a	sparse	0.026316
implement dataframe series panel etc	block manager	0.021277
a float dtype	float arr	0.083333
type of categoricaldtype this metaclass determines subclass ability	categorical dtype type	0.333333
datetimeindex from one time zone to	core indexes datetime index	0.007634
series/index by the given	str	0.017544
we have	block is	0.045455
apply	apply index	0.500000
load a pickle with	load	0.100000
from ndarray or	data index	0.076923
called via the 'numpy' library	with convert convert args kwargs	0.055556
ftypes (indication of sparse/dense and dtype) in	core ndframe ftypes	0.055556
process of casting data from some accepted dtype	indexes numeric index assert safe casting cls data	0.047619
load data from google bigquery	read gbq query project_id index_col col_order	0.250000
datetimeindex with times to	core	0.001326
prettier version of	pretty string	0.250000
build an xpath expression to simulate bs4's ability	io build xpath expr	0.200000
add in the numeric add/sub methods	add numeric methods add	1.000000
index objects contain the same	range index	0.021739
range of timedeltas	format timedelta64 values nat_rep box	0.125000
boolean if we are	is	0.005291
iterate over the blocks collect and	axis consolidate transposed	0.062500
membership of x in y if	in x y	0.047619
a fixed frequency datetime	bdate range start end	0.111111
the block	data col create for block cls	0.333333
the indexer fill with	indexer	0.009174
two or more factors by default	rownames	0.125000
an positional indexer	has valid positional setitem indexer indexer	0.052632
to an ndarray copy if	dtype copy	0.032258
background in	formats styler background	0.125000
input	ndframe	0.005025
slice of my	core categorical block slice slicer	0.083333
sets names on	set names names level	0.200000
only if the process of casting	index assert safe casting	0.125000
plural 'names'	names deep	0.125000
array interface	indexes multi index array dtype	0.125000
in	io hdfstore append key value	0.016667
to accelerate unioning	datetime index union many others	0.040000
called via the 'numpy' library the third	numpy validate take with convert	0.055556
return an xarray object from the	to xarray	0.125000
a moving window of type window_type on the	window apply window mean how	0.166667
value from 1-dimensional ndarray only	core indexes period index get value series	0.071429
try_coerce_args	block try coerce result result	1.000000
parameter value using	value	0.005155
byte of	column	0.066667
boolean whether this axes needs validation for a	indexer should validate iterable	0.166667
if label is	value label	0.066667
for series	core	0.001326
interpolate values according to	core resampler interpolate method axis limit	0.166667
if we are a categorical possibility	dtypes is categorical array	0.500000
freq	ax freq	1.000000
style and color	style	0.041667
for monotonic decreasing	index get fill indexer searchsorted target method limit	0.142857
the symmetric difference of two index objects	core indexes index symmetric difference other	0.166667
new block try to preserve dtype if possible	putmask smart v m n	0.055556
in place using non-na values from passed	update other join overwrite filter_func	0.055556
astypeable to	astype dtype	0.166667
make a multiindex from the cartesian product	indexes multi index from product	0.166667
convert tz-aware	tz convert tz	1.000000
exist and	io	0.003012
determine if each string matches a	core str match arr pat	0.166667
of the values to	block shape values	0.050000
make a copy	core indexes multi index copy	0.166667
lookup of value	set value arr key value	0.038462
wrap op result to have correct dtype	sparse wrap result name data sparse_index fill_value	1.000000
don't allow a multi reindex on panel	panel needs reindex multi	0.500000
needs additional handling	indexes period index array wrap result	0.050000
the where condition cond on a	computation where cond	0.111111
return an iterator over the boxed values	core indexes datetime index iter	0.250000
of the index	core indexes index	0.014085
equivalent to shift without copying data the shifted	core ndframe slice shift	0.083333
usage	usage deep	0.200000
construct dataframe from dict	data frame from dict cls data orient dtype	0.200000
scipy sparse coo_matrix to a sparseseries	sparse coo to sparse series a	0.166667
unique elements of arr1	equal contents arr1	0.066667
result set of	result	0.016393
to an ndarray copy	copy	0.012821
list indicated if we have mixed levels	multi index have mixed levels	0.200000
for general index	core indexes index	0.007042
_typ here	axis axis labels fastpath	0.500000
apply we are stripping all	apply func name	0.050000
return index to be used along concatenation axis	core reshape concatenator get concat axis	1.000000
float values converted into strings	float array formatter	0.055556
read csv file (discouraged	core series from csv cls path sep parse_dates	0.066667
and be	key	0.005051
manager for running code that expects	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
over the blocks collect and create	apply f axes filter do_integrity_check	0.083333
with custombusinessday as	cdate range start	0.333333
we have a valid ordered parameter	cls ordered	0.058824
to run the same	num_threads kwargs_list	0.050000
gets called after	period index	0.024390
delimits	delimits	1.000000
applies the put method to its values attribute	put	0.043478
operations to the cls evaluate the	aggregate operations cls use_numexpr	0.142857
a simple cross-tabulation of	crosstab index columns	0.066667
to get instances of all the	all	0.043478
a slice of	datetime tzblock slice slicer	0.083333
and return the op	bin op	0.125000
count of number of non-nan	count arg freq	0.200000
only if the process of casting	numeric index assert safe casting	0.125000
cross-tabulation	reshape crosstab index columns	0.066667
return the block manager from	core sparse to manager sdf	0.052632
create a new multiindex from the	indexes multi	0.014493
ss	ss	1.000000
evaluate a binary	bin op evaluate	0.333333
fillvalue	fillvalue	0.428571
to cast the array/value to a	dtypes maybe cast to	0.250000
have an object dtype try	dtypes maybe	0.166667
and string-like array to convert object	maybe convert string to object values	0.142857
return the td elements from a row	parse td obj	0.083333
we opened it retrieve pandas object stored in	hdf path_or_buf key	0.333333
return a fixed frequency timedelta index with	core indexes timedelta range start end periods	0.083333
returns the float values converted into strings	float	0.024390
rewrite the assignment	computation rewrite assign	0.125000
attempt to construct this type from a	dtypes interval dtype construct from string	0.166667
needs additional handling as	indexes period	0.034483
is called upon unpickling rather than the default	core indexes new datetime index cls d	0.111111
options grouped	core pp options	0.083333
handling as	result	0.016393
dtype) in this object	core ndframe	0.005051
to ndarray raises on	index coerce to ndarray cls	0.166667
return a new block	block	0.016393
a simple	core reshape crosstab index columns values	0.066667
sparse/dense and dtype) in this object	core ndframe	0.005051
supported for panel objects	core panel	0.019231
take	indexes multi index assert take	0.500000
construct dataframe from dict of array-like or dicts	core data frame from dict	0.200000
the levels of both multiindex objects are the	core indexes multi index equal levels other	0.100000
number of axes / array dimensions	ndframe ndim	0.333333
a tree-like object that can be used to	parser	0.008000
using the with statement	plotting options use key	0.333333
of one business month	business month	0.333333
dataframe pivot	reshape pivot	0.166667
this object potentially casting to object	indexes period index to embed keep_tz	0.333333
format dataframe into wide 3d panel format	core data frame to panel	0.333333
read csv file (discouraged please use :func pandas	core series from csv cls	0.066667
must already exist and be table	append	0.012987
a repr function return fillvalue for a	repr fillvalue	0.083333
inferred types one for each level	core indexes multi index inferred type levels	0.333333
original	core	0.001326
multiindex parameters	core indexes multi index from	0.142857
a dataframe the	data values	0.062500
return the block manager from a	manager sdf columns index	0.052632
index with	indexes multi index	0.013158
check for an s3 s3n or s3a url	io is s3 url url	0.250000
is an actual dtype that	dtypes extension dtype is dtype cls dtype	0.111111
fast	arr	0.013699
for groupby objects	group by	0.016129
return an attributes dict for my	get attributes dict	0.250000
convert to our native types format slicing if	to native types slicer na_rep	0.250000
capture stderr in a buffer so	util capture stderr	0.055556
reorders categories as specified in new_categories	categorical reorder categories new_categories	1.000000
gets called after a	indexes index array wrap result	0.100000
thrown by an error is encountered in	parser error	0.055556
bytes in	nbytes deep	0.052632
dispatch to apply we are stripping all of	group by mixin apply	0.050000
or float that can safely be cast	val min_val	0.083333
return an iterator over the boxed values	datetime index iter	0.250000
if multiindex has	multi	0.018182
the where condition cond on	computation where cond	0.111111
fixed	bdate range start end periods	0.111111
if the passed type is an actual dtype	dtype is dtype cls dtype	0.043478
table in file node must already	io hdfstore	0.014493
values at input threshold s	ndframe clip lower upper axis	0.333333
fixed frequency datetime index with business day as	indexes bdate range start end periods	0.083333
from 1-dimensional ndarray only use	index set value arr key	0.023810
localize tz-naive timeseries to	ndframe tz localize	0.500000
shape of	ndim shape	0.111111
return the number of	indexes multi	0.014493
of sparseseries (with	core sparse	0.041667
putmask the data to	putmask mask	0.142857
fast version of transform only applicable to	series group by transform fast func	0.500000
apply function and combine results together	apply func	0.027027
for header rows	pop header name	0.100000
selection take = take ownership	nan_rep encoding	0.333333
can be used to iterate over the	frame	0.009091
the levels attribute is 1 or a	is multi index	0.142857
value occupying requested label default to	label default	0.083333
url has a valid protocol	io is url url	0.047619
tree-like	io	0.003012
open	open	1.000000
and be	hdfstore append key	0.016667
we have a	name freq	0.083333
value from	value arr key value	0.038462
this object potentially casting to object	index to embed keep_tz	0.333333
code group of given frequency str	get freq group freq	0.250000
return resolution str against resolution	resolution get reso	1.000000
forward fill the	core resampler pad limit	0.333333
the specified frequency freq	index asfreq freq how	0.500000
the scope	core computation scope	0.166667
to disable other than add/sub	disabled cls	1.000000
parameter	ordered cls	0.055556
nrows ncols - number of	util make custom dataframe nrows ncols	0.250000
with level j do not change the	j	0.034483
for making this object picklable	array reduce	0.333333
'name' parameter for general index	indexes index validate names	0.066667
required package	package pkg_name	0.083333
python	python	0.833333
ufunc	series array wrap result context	0.200000
create	sqlite table create	0.066667
(header new_data)	name row index_col	0.500000
convert from	io	0.003012
a future release	core categorical reshape new_shape	0.142857
for making this object picklable	sparse array reduce	0.333333
convert argument to timedelta	tools to timedelta arg unit box errors	0.500000
from 1-dimensional ndarray only use this if	set value	0.023256
trims	formats trim	1.000000
return a boolean whether this axes needs validation	ndframe indexer should validate iterable axis	0.166667
slice of	core categorical block slice slicer	0.083333
returns a curve with holidays between start_date and	abstract holiday calendar holidays start end return_name	0.066667
construct concatenation plan for given	get mgr concatenation plan	1.000000
the blocks collect and create	reduction f axis consolidate transposed	0.062500
formatted data as a	core indexes index formatter func	0.083333
is a number	is number	1.000000
the view limits to the nearest	date locator autoscale	0.055556
to write text representation of object to	core ndframe to	0.040000
return an object with matching indices	core ndframe reindex like other method copy limit	0.111111
i	core categorical block	0.100000
operations to convert timedelta-like to timedelta64	core indexes td index cmp opname	0.055556
simple cross-tabulation	columns values	0.037037
update index attributes e	index maybe update attributes	0.200000
this object	indexes	0.004651
draw histogram	hist frame	0.200000
lookup	indexes index set value arr	0.023810
to table in file node must	io hdfstore	0.014493
pick the best locator	pandas auto date locator get locator	0.062500
returns the float values converted into strings using	formats float array formatter get result as array	0.055556
'series argmin' is called via the 'numpy' library	with skipna skipna	1.000000
styles	formats	0.031250
series extract groups from	extract	0.030303
the object is	core dtypes is	0.148936
coerce a	core dtypes coerce	0.066667
additional	index array	0.033333
value from 1-dimensional ndarray only use this if	indexes period index get value series key	0.071429
fast lookup	index	0.002004
index objects contain the same elements	datetime index ops	0.034483
string-like that	io convert string array	0.038462
(header new_data) for	name row index_col	0.500000
slice of	categorical slice slicer	0.111111
dataframe as an html table	data frame to html	0.250000
is an actual dtype that	interval dtype is dtype cls dtype	0.142857
for :meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace	0.333333
of	index set	0.022727
decorator to make a repr function return fillvalue	repr fillvalue	0.083333
datetime index with business day	indexes bdate	0.050000
exception	contextmanager exception	0.166667
value from 1-dimensional ndarray	index get value series key	0.250000
'numpy' library the	validate take with convert	0.055556
we are index sliceable then return	convert to index sliceable	0.083333
bytes see :class	msgpack packb	0.025641
casting data from	index assert safe casting cls data	0.047619
an intervalindex from a 1d array	index from intervals cls data name	0.125000
set	set value	0.023256
already exist and be	format	0.012346
vector of label values for requested level	indexes multi index get level values level	0.250000
create an indexer like _name in the class	ndframe create indexer cls name indexer	0.166667
used to iterate	io html frame parser build	0.014706
wrap comparison operations to convert timedelta-like to	indexes td index	0.055556
view limits to the	locator autoscale	0.055556
histogram of the counts of non-null values	core value counts values sort ascending normalize	0.200000
gets called after a	index array	0.066667
arg	arg errors	0.052632
turn	for	0.071429
index objects contain the	datetime index	0.007042
provides	resampler	0.053571
series to dataframe in	data frame	0.005714
return an internal format currently just	block internal values dtype	0.111111
reconstruct an	core computation reconstruct	1.000000
for dataframe and	core	0.001326
series to the given number of	core series	0.008000
freq attribute of the ax object if set	freq ax	1.000000
our native types	native types slicer na_rep float_format	0.200000
falls on saturday use following monday instead	tseries next monday dt	0.250000
in the series extract groups	extract frame	0.047619
create a table schema from data	json build table schema data index primary_key version	0.333333
other	validate for numeric binop other	1.000000
return dense representation of ndframe	core ndframe to dense	0.111111
after	core indexes index array wrap	0.100000
array of whether each index	indexes datetime index	0.007634
parse an expression	core computation expr parse	1.000000
context manager for temporarily setting a timezone	util set timezone	0.142857
astypeable to categorical	categorical astype dtype	0.333333
dtype	core categorical is dtype	1.000000
in the series extract groups from the first	extract arr	0.066667
ndarray only use	value	0.005155
return a list of sql statement that create	sqlite table create	0.066667
parse the raw data into a list of	html frame parser parse raw data	0.250000
gets called	indexes period index array wrap result	0.050000
get	period index get	0.500000
dataframe objects and	data frame	0.005714
of a dataframe sorted by the n smallest	data frame nsmallest n	0.166667
use this if you	set value arr	0.023810
the underlying array which by-definition can	index ops mixin	0.019231
read csv file	from csv cls path sep parse_dates	0.066667
moving window of type window_type on the	core window apply window mean how	0.166667
index with requested level removed	index droplevel level	0.250000
to determine if dtype is valid for	n is valid dtype n method dtype	0.142857
returns the float values converted into	float array formatter get result as array	0.055556
must already exist and be table	hdfstore append key	0.016667
value to format it	float array formatter value	0.250000
for series	arith method series	0.333333
raise keyerror	chain	0.031250
from the table this is	key	0.005051
string cast	cast	0.058824
strings to time	to time	0.125000
obj	obj	0.366667
name	name	0.175000
a fixed frequency datetime index	core indexes bdate range start	0.083333
old version?	io fixed validate version where	0.142857
if multiindex has only	core indexes multi	0.014493
float that can safely be cast to an	name val min_val	0.083333
array interface return my values	indexes interval index array result	0.125000
of a	ndframe	0.005025
rank	rank	1.000000
label	label side	0.500000
attribute	core series	0.008000
category value returning a new	inplace ascending na_position	0.071429
console	console	1.000000
elements of v should be	ndarray searchsorted v	0.033333
csv file	series from csv	0.066667
from	core indexes index set value arr key	0.023810
casting data from some accepted dtype to the	index assert safe casting cls data	0.047619
latex tabular/longtable environment output	io formats latex formatter write result buf	0.200000
scope	core computation scope	0.500000
nat-like arg is	arg	0.018868
return my self as a sparse array	sparse sparse series as sparse array	0.250000
attempt to write text representation of object to	core ndframe to	0.040000
whether	validate iterable	0.500000
each	arr	0.013699
datetimelike	to datetimelike	0.125000
this if you	key	0.005051
that do not throw an exception	util valid	0.125000
a tree-like object that can be	io html frame	0.012987
pandasobject	core ndframe	0.005051
common ops mixin	index ops mixin	0.019231
node must already exist and be	key value	0.011628
csv	from csv cls path header sep	0.066667
op on a	op op_str a	0.500000
to dataframe apply for	core sparse sparse data frame apply func	0.166667
moving window of type window_type on the data	apply window mean how	0.166667
the array interface return my	core indexes categorical index array dtype	0.125000
read csv file (discouraged please	frame from csv	0.066667
axis indicies	core panel extract axes data	0.142857
return packed bytes see :class packer for options	packb	0.022727
pick the best locator based on a	auto date locator get locator	0.062500
multirow e	latex formatter format multirow	0.250000
name	name name inplace	1.000000
to convert timedelta-like to	core indexes td	0.055556
return the values	categorical get values	1.000000
index and / or columns using input function	axis mapper axis copy inplace	0.055556
the passed type is an actual dtype that	dtypes interval dtype is dtype cls dtype	0.142857
internal method to handle na filling of take	core indexes index assert take fillable values indices	0.250000
the same function multiple times in parallel	parallel	0.083333
start stop kwds in sparse	io sparse	0.166667
the number of bytes in the underlying	indexes multi index nbytes	0.052632
don't care for	core rolling	0.250000
method to handle na filling of take	multi index assert take fillable values indices allow_fill	0.250000
must already exist and be	value format	0.016667
exist and be	hdfstore append	0.016667
of the required package is installed	package pkg_name min_version max_version app	0.083333
dataframe with multi-level index return new dataframe with	data frame	0.005714
boolean whether this axes needs validation for a	indexer should validate iterable axis	0.166667
raise keyerror	chain map	0.034483
of casting data from some accepted dtype to	safe casting cls data	0.047619
that do	util valid	0.125000
common sparseindex corresponding to the locations where	homogenize series_dict	0.047619
seconds	seconds	1.000000
accelerate unioning a collection of	index union many others	0.040000
this object	core	0.002653
only use this if you	set	0.012195
compute standard deviation of groups excluding	std ddof	0.166667
level-wise	locs tup	0.125000
render a dataframe to a list of	io formats data frame formatter to	0.083333
result as series or by a	by axis	0.045455
attempt to construct this type from a	categorical dtype construct from string	0.166667
on multiindex	core indexes multi index	0.013158
of seconds (>= 0 and less than	timedelta index seconds	0.066667
only use this if	value arr	0.023810
td elements from a row element	parser parse td obj	0.083333
value occupying requested label default to specified	series get label default	0.083333
of value from 1-dimensional ndarray only use this	value	0.005155
parse time strings to time objects	to time	0.125000
validate that we	table validate	1.000000
ftypes (indication of sparse/dense and dtype)	ndframe ftypes	0.055556
at particular time of day e g	core ndframe at time time	0.066667
the object is dict-like	core dtypes is dict like	0.333333
the block manager from a dataframe of series	sparse to manager sdf columns index	0.052632
hash table-based unique uniques are returned	core unique values	0.333333
this frame	frame	0.009091
type window_type and size window on	stats rolling window arg window win_type min_periods	0.100000
xlwt	xlwt	1.000000
return if the index is monotonic	core indexes index is monotonic	0.200000
because a comparison between 8 aware arrays	index ops mixin evaluate compare other op	0.250000
for this object	index	0.002004
algos groupsort_indexer implements counting sort	group index sorter group_index ngroups	0.250000
n indexable columns with an arbitrary number of	io legacy table read where columns	0.111111
operations to convert timedelta-like to	core indexes td index	0.055556
specialized cython take which sets nan values	take nd arr indexer axis out	0.166667
with multi-level index return new dataframe	data frame	0.005714
my self as a sparse array	sparse series as sparse array	0.250000
box function to get object from internal	indexes datetime index ops mixin box func	0.142857
the new freq essentially a reindex	resampler asfreq fill_value	0.066667
a set of kwargs suitable for	kwargs	0.022222
the float values converted	formats float array formatter get result	0.055556
index objects contain the same elements	indexes datetime index	0.007634
rolling	rolling	0.700000
return datetimeindex	core indexes	0.004762
force all buffered modifications	io hdfstore flush fsync	0.200000
set new labels on multiindex defaults	indexes multi index set labels labels level	0.333333
copy if	index dtype copy	0.043478
reindex for all the axes	core ndframe reindex axes axes	0.500000
from ndarray or list	index	0.002004
values as an enumerated type or categorical	factorize values sort order	0.111111
but using the interpolate machinery	block interpolate with fill method axis inplace	0.200000
reshape data (produce a	core data	0.041667
some dataframes in vertical/horizontal layout for	table	0.010870
csv file (discouraged please use :func pandas read_csv	csv cls path sep	0.066667
sparsearray from	sparse sparse data	0.076923
xport format	io sas parse	0.066667
dropna	dropna axis inplace	0.166667
tree-like object that can be	html	0.011765
list representing the totally ordered cartesian product of	core get group index labels shape sort xnull	0.066667
iterables	iterables	1.000000
dataframe with multi-level index return new dataframe	core data frame reset	0.027778
a tz-aware type return an encoded	get tz tz	0.066667
of try_coerce_args / try_operate	time delta block try coerce result result	0.333333
operations to convert datetime-like to	period index cmp opname nat_result	0.066667
see dataframe pivot	reshape pivot index	0.333333
length is unaltered	datetime index normalize	0.125000
gets called after a	period	0.016667
a subclass of styler with a custom template	io formats styler from custom template	0.142857
a tree-like object that can be used to	html frame parser build	0.014706
return valid other evaluate or raise typeerror	for numeric binop other op opstr	0.500000
the values to be at least	values	0.008547
in the columns under the index names defaulting	index level drop inplace col_level	0.166667
type window_type and size window	window win_type min_periods	0.100000
the 'numpy' library the	validate take with	0.055556
exist and be	io hdfstore append key	0.016667
a new manager with the blocks	core block manager combine blocks copy	0.250000
delimiter string starting at the	rsplit	0.031250
handles preprocessing for cut where we convert	core reshape preprocess for cut x	0.200000
timeseries to specified frequency	ndframe asfreq freq method	0.250000
we do need a multi reindex this	core series needs reindex multi axes method	0.333333
index or ndarray	index ops mixin	0.019231
the full scope for use	scope full scope	0.055556
join	join	0.600000
a manager and a axes dict	ndframe init mgr mgr axes	0.333333
already	hdfstore append key value	0.016667
file node	io hdfstore append key value format	0.016667
a string cast	cast	0.058824
key for valid keys across my indexer	core ndframe indexer has valid tuple key	0.500000
return the number of bytes in	indexes range index nbytes	0.052632
of the values to be at	block shape values ndim	0.050000
already exist	value format	0.016667
optional positional and keyword arguments	util optional	0.066667
allows a decorator to	decorator	0.071429
to specified	asfreq	0.111111
process for each axes overridden in	plot logic ax data	0.083333
we are	for reshape	0.400000
comparison operations to convert timedelta-like to	indexes td index cmp	0.055556
read csv file (discouraged	frame from csv cls path header sep	0.066667
underlying data which is a	index values	0.111111
the corresponding interval	interval	0.029412
the shape	ndim shape	0.111111
index return new dataframe	data frame	0.005714
iterate over the	io html	0.012987
select values between particular	ndframe between	0.100000
return the	range	0.047619
for first non-na/null value	data frame first valid	0.250000
dtype converting	value dtype	0.142857
between index values and index	index	0.002004
convert font_dict to an openpyxl v2 font	io openpyxl20writer convert to font cls font_dict	0.500000
gets called after	series array	0.090909
typeerror if	core dtypes	0.018519
apply the	tseries holiday apply	0.333333
boolean if we need	indexes index is	0.100000
names to 'index' for regular or 'level_x'	io json set default names	0.500000
of the values to be	values	0.008547
convert to our native types format slicing if	core datetime block to native types slicer na_rep	0.250000
datetimeindex with times to midnight length is	indexes datetime index	0.007634
coerce the	coerce	0.051282
pairwise correlation of columns excluding na/null values	core data frame corr method min_periods	0.111111
don't allow a multi reindex on panel	panel needs reindex multi axes method	0.500000
to the key as	key values	0.142857
lookup of value from 1-dimensional	get value series key	0.250000
a new block	block	0.032787
boolean whether i can attempt conversion to a	is convertible to index	0.333333
a style_dict to an xlsxwriter format	xlsx writer convert to style style_dict num_format_str	0.166667
the elements that are non-zero this method	series nonzero	0.166667
index objects contain the same elements	core indexes datetime index	0.007634
boolean if values in the object are unique	is unique	1.000000
the	io html	0.038961
frame table	appendable series table	0.200000
fast lookup	core indexes	0.004762
the boolean criterion specified by func	by filter func	0.250000
the actual sparse values need to	sparse sparse array	0.043478
number of microseconds (>= 0 and	indexes timedelta index microseconds	0.066667
new datetimeindex with passed location s deleted	indexes timedelta index delete loc	0.500000
init self	init	0.142857
v should	core indexes frozen ndarray searchsorted v	0.033333
do a list replace	core block manager replace list src_list dest_list	1.000000
that left and right index are equal	assert almost equal left right	0.333333
bind a method	bind method	1.000000
post process	plotting mplplot post	0.333333
read rows from self f skipping as	io fixed width reader get rows n skiprows	0.166667
to table in file node must	hdfstore append key value	0.016667
update index attributes e g freq depending on	core indexes index maybe update attributes	0.200000
a new multiindex from	multi	0.018182
the put method to its values	put	0.043478
the installed version of openpyxl	compat major_ver	0.083333
tuples	tuples	0.666667
we internally represent the data as	tzblock external values	0.500000
is the resampling from a dataframe	core resampler from selection	0.200000
datetimelike	datetimelike data	0.111111
kinds allowable columns for	table queryables	0.055556
to	core series	0.008000
styler with a custom template and	io formats styler from custom template	0.142857
for series arithmetic operations to	method series op name	0.333333
index	assert almost	1.000000
or object coercible to panel	core panel update other join overwrite filter_func	0.200000
gets called after	core indexes index array wrap	0.100000
ndarray only use this	index set value arr	0.023810
is	datetime index	0.007042
that time	time	0.052632
the indexer input array	indexer	0.009174
take which sets nan values in one	take nd	0.047619
flattened values of the underlying data see	indexes index ravel order	0.037037
add in	add	0.071429
display	display	0.857143
passed a list-like indexer return the	index convert list indexer keyarr kind	0.066667
a boolean whether i can attempt conversion to	core indexes is convertible to index	0.333333
format my specific	index format	0.500000
table in file node must already	io hdfstore append key value	0.016667
ndarray	indexes index set	0.023810
already exist and	append key value	0.016667
we always want	shallow copy with infer values	0.200000
return	parser	0.008000
full length slice	full slice obj	0.333333
concatenation of an datetimelike array of arrays each	dtypes concat datetime to_concat	0.125000
the first match of regular expression pat	pat flags expand	0.200000
try to read from a	io read obj	0.058824
am never a view	view	0.043478
set of unique elements of arr1	equal contents arr1	0.066667
exist and	value format	0.016667
delegatedclass of a series that is datetimelike	datetimelike data copy	0.125000
data	data groups dropna label	0.500000
property synonym for	ndframe	0.005025
be	key	0.005051
pick the best locator based on a	locator get locator	0.062500
that is datetimelike	datetimelike data copy	0.125000
write out the binary feather-format	frame to feather fname	0.083333
version to operate on as the input	core block try operate values	0.125000
locator	plotting pandas auto date locator get locator	0.062500
handling	core indexes period	0.032258
is called via the 'numpy' library the	numpy validate take with convert convert	0.055556
multi reindex	reindex multi axes	0.500000
we have a full length slice	is full slice obj l	1.000000
cast to datetimeindex of timestamps at *beginning* of	core series to timestamp freq how copy	0.500000
smallints	smallints	1.000000
array of datetime time the time part of	indexes datetime index time	0.166667
of styler with a custom template and	styler from custom template	0.142857
is index	core ndframe	0.005051
in	arr pat	0.500000
append to table in file node	hdfstore append key value format append	0.125000
the dom	parser build doc	0.125000
run	num_threads kwargs_list	0.050000
a comparison between 8 aware arrays	datetime index ops mixin evaluate compare other op	0.250000
to	append key value	0.016667
needs additional	core indexes	0.004762
put method to its values attribute if it	core series put	0.055556
to table in file node must	key value	0.011628
specialized intersection for	datetime index intersection	0.142857
pack object o and return packed bytes see	io msgpack packb o	0.055556
the flattened values of the underlying data	ravel order	0.037037
of normalized locales	valid locales locales	0.200000
we must	core non consolidatable mix in	0.090909
return the cached item item represents a	core ndframe iget item cache item	0.090909
compatiable fill_value and arr dtype then fill	maybe fill arr fill_value	0.333333
csv file (discouraged please	frame from csv cls path	0.066667
return packed bytes see :class	packb	0.022727
in the series extract groups from	core str extract frame	0.047619
generic we want to set	core series set	0.076923
comparison	comparison	1.000000
getitem defers to the underlying	datetime index ops mixin getitem	0.250000
object in hdfstore parameters	hdfstore put key value format append	0.333333
horizontal bar	methods barh	1.000000
to midnight	core indexes datetime index	0.007634
draw histogram of the dataframe's series	plotting hist frame data	0.200000
a dataframe to	to	0.006329
series/index starts with passed pattern	str startswith arr pat na	1.000000
convert to our native types format slicing if	to native types slicer na_rep date_format quoting	0.250000
gets called	indexes period index array	0.050000
bool if we have only bool	core object block is bool	0.166667
a	index columns	0.028571
update index attributes e g	core indexes datetime index maybe update attributes attrs	0.200000
writing stata binary	to stata fname	0.200000
that an positional	indexer has valid positional	0.250000
index value is found	indexes datetime index ops mixin isin values	0.083333
try to cast the array/value to a	maybe cast to	0.250000
type is an actual dtype that	core dtypes period dtype is dtype cls dtype	0.142857
exist and	io hdfstore append key value format	0.016667
masked rec array and create the manager	masked rec array to mgr data index	0.500000
the number of bytes in the underlying	multi index nbytes deep	0.052632
class implementing the plot attribute for groupby objects	group by plot	0.062500
using the index's frequency if available	core ndframe tshift periods freq	0.066667
create a table reflecting the structure of a	sqlite table create table setup	0.066667
sql statement that create a	sqlite table create	0.066667
of _constructor_sliced-like objects to either	core panel homogenize dict frames intersect dtype	0.066667
comps	comps	1.000000
return an indexer for a target intervalindex with	core indexes interval index get reindexer target	1.000000
value occupying requested label default	sparse series get label default	0.083333
wrap comparison operations to convert timedelta-like	indexes td index cmp	0.055556
keyarr	keyarr	1.000000
force non-datetime columns to be	io parse date columns data_frame parse_dates	0.166667
for initializing the gradientfill stop parameter	stop cls	0.066667
union of two multiindex objects sorting if	indexes multi index union other	0.066667
built up styles to	formats	0.031250
base	get base	0.333333
the union of two multiindex objects	index union other	0.037037
data is sparse|dense	core series ftypes	0.250000
**experimental** return a fixed frequency datetime index	indexes	0.004651
fast transform path for aggregations	ndframe group by transform fast result	0.333333
values return a block	block	0.008197
type window_type and size window on the	window win_type	0.100000
to an xlwt style	xlwt writer convert to style	0.500000
the	by	0.038462
we take a string-like	string array data	0.038462
cartesian product of	labels shape sort	0.200000
frequency datetime index with	core indexes	0.004762
have a float key and are	key	0.005051
function of type t or tuple of types	is type t	0.083333
keyerror	compat chain	0.034483
1-dimensional ndarray	index set value	0.023810
this	index set value arr key	0.023810
return slice of panel	core panel	0.038462
downsample the cython defined function	core datetime index resampler downsample	0.200000
used to	io	0.003012
capture stderr in a buffer	util capture stderr f	0.055556
1-dimensional ndarray only	core indexes index set	0.023810
object o and return packed	msgpack packb o	0.055556
parse the raw data into a list of	html frame parser parse raw data rows	0.250000
in a block of same	make block same	0.333333
string representation for a particular object	dtypes extension dtype bytes	0.142857
index for series columns for dataframe major_axis	ndframe iteritems	0.055556
return appropriate class of series concat	dtypes get series result type result	0.250000
scalar to a compat	scalar to	0.100000
frequency	end periods freq	0.187500
with times	datetime index	0.007042
new unit if	core dtypes datetime tzdtype new cls unit tz	0.055556
string-like that is object dtype and coerce to	string array data encoding	0.038462
item and drop from frame raise keyerror if	core ndframe pop item	1.000000
in	io hdfstore	0.014493
datetimelike methods (as we may have to	datetimelike methods	0.066667
a boolean if	is dtype	0.250000
index for series columns for dataframe and major_axis	core	0.001326
after	series	0.006757
rec array and create the manager	rec array to mgr	1.000000
as the	ndframe	0.005025
must already	hdfstore append	0.016667
make a multiindex from the	indexes multi index from	0.142857
tree-like object that can be used	html frame	0.014706
these are	panel	0.017857
datetimeindex from	indexes datetime index	0.007634
openpyxl20writer	openpyxl20writer	1.000000
to maintain order	side sorter	0.166667
and setup my atom from the block b	io data col set atom block	0.200000
the datetime format of a given datetime string	datetime format	0.250000
index of the values set with	core indexes index	0.007042
when a	ndframe	0.005025
return an xarray object from the pandas	to xarray	0.125000
class constructor	constructor	0.040000
html	io	0.003012
:meth pandas dataframe reset_index function	core series reset index level drop name inplace	0.142857
returning a new	ignore_index verify_integrity	0.250000
some dataframes in vertical/horizontal layout for explanation	table plotter	0.125000
end	tseries date offset end	0.500000
in panel to a separate excel sheet	panel to excel path na_rep engine	0.111111
to shift without copying data the	ndframe slice shift	0.083333
valid ordered parameter	cls ordered	0.058824
that can	frame parser build	0.014706
am	is	0.005291
statement that create a table	create table	0.166667
cartesian product of all possible	labels shape sort	0.200000
minute second millisecond or microsecond	core indexes datetime index ops mixin resolution	0.125000
color	color cls	0.333333
myself as	datetime tzblock	0.100000
an intervalindex from a 1d array of	index from intervals cls data	0.125000
gets called after a ufunc	series array wrap result context	0.200000
returns the float values	formats float array formatter	0.055556
google bigquery	io read gbq query project_id index_col col_order	0.250000
is an internal non-public method*	index create categorical data categories ordered	0.333333
gets called after a ufunc needs	indexes period index array wrap result context	0.041667
iteritems	iteritems	1.000000
we	block is	0.045455
return the number of bytes in the underlying	nbytes deep	0.052632
rownames	rownames	0.625000
true if more than one block with	core block manager is consolidated	0.333333
select values between particular times of	indexer between	0.125000
whether each index value is found	datetime index ops mixin isin values	0.083333
to read from a	io read	0.038462
which is a	sparse to_concat	0.333333
header	pop header	0.100000
indices where elements of v should	core indexes frozen ndarray searchsorted v	0.033333
removes the specified categories	categories removals inplace	1.000000
build an xpath expression to simulate	io build xpath expr	0.200000
the bool of a single	core ndframe bool	0.055556
convert	io convert params	1.000000
if we define an builtin function for this	core base grouper is builtin func arg	0.333333
as series or by	by axis	0.045455
validate that the	computation validate	0.500000
might need to coerce	tseries maybe coerce	0.125000
value from 1-dimensional ndarray only use	core indexes datetime index get value series key	0.071429
leap	core indexes period index is leap	0.125000
expression as a string using various backends	eval expr parser engine truediv	0.500000
value from 1-dimensional ndarray only use	datetime index get value	0.071429
of the values	core	0.001326
change string like dtypes	invalidate string dtypes dtype_set	0.200000
spreadsheet-style pivot table as a dataframe the levels	core reshape pivot table data	0.166667
be used to iterate over	html frame parser build	0.014706
nrows	io table nrows	1.000000
node must already exist and	append key value format	0.016667
box function to get object	indexes datetime index ops mixin box func	0.142857
reverse of try_coerce_args	core datetime tzblock try coerce result result	0.500000
of ndframe as	core ndframe	0.005051
the number of bytes in the	multi index nbytes	0.052632
retrieve the metadata for this	index col read metadata handler	0.500000
indices overlap add suffixes	core items overlap	0.062500
are index sliceable then return	to index sliceable	0.083333
to be returned from apply if as_index=true	core group by index with as	0.200000
see if we can set a	util can set	0.125000
apply we are stripping all of	core group by mixin apply	0.050000
i want to construct this block as	block array	0.500000
a list of objects to a timedelta index	listlike arg unit box errors	0.142857
frequency conversion	freq	0.016129
dataframe sorted by the n smallest	core data frame nsmallest n	0.166667
particular time of	time time	0.142857
box function to get object from internal	box func	0.142857
want to set the	set	0.012195
csv file (discouraged please	from csv cls path sep parse_dates	0.066667
making this object picklable	array setstate state	0.333333
of the stata date formats to a type	io convert datetime to stata type	0.200000
higher freq with	cls value freq	0.083333
coerce a scalar to a compat for	core indexes period index coerce scalar to	0.071429
fixed frequency datetime index with custombusinessday as the	core indexes cdate range start end periods	0.083333
specialized intersection for datetimeindex objects may be much	indexes datetime index intersection other	0.142857
if you	value arr key	0.023810
am an	io index	0.111111
a scatter plot from two dataframe columns	plotting scatter plot data x y	0.125000
fast lookup	indexes	0.004651
of the flattened values of the	ravel order	0.037037
check if the object is dict-like	core dtypes is dict like obj	0.333333
single dtype if dtype	core simple blockify tuples dtype	0.111111
deep	deep	0.555556
generified	generic	0.142857
take a string-like that is object dtype and	string array	0.038462
only if the process of casting data from	assert safe casting cls data	0.047619
use this if	indexes index	0.007353
removing any previously applied styles	clear	0.166667
select values between	between	0.086957
sets the categorical to be	core categorical as	0.666667
table in file	value	0.005155
and be	io hdfstore append key value	0.016667
manager with	manager	0.058824
to indexer and	indexer	0.018349
of v should	indexes frozen ndarray searchsorted v	0.033333
"pivot" table) based on column values	frame pivot index columns values	0.200000
value occupying requested label default	core sparse sparse series get label default	0.083333
add default implementation of ops	computation add ops op_classes	0.333333
dimensions	core	0.001326
new dataframe with labeling	data frame	0.005714
coerce a scalar to a	indexes period index coerce scalar to	0.071429
the decimal points if	io	0.003012
sparse-compatible version of	indices axis convert	1.000000
apply	mixin apply func name	0.050000
utility frequency conversion method for	freq method	0.333333
and n/a	and	0.066667
array of python datetime date objects	indexes datetime index	0.007634
full scope for	scope full scope	0.055556
value from 1-dimensional ndarray only	core indexes index set value arr key value	0.038462
dtypes in this object	core ndframe dtypes	0.333333
downsample the cython defined function	index resampler downsample	0.200000
gets called	core	0.003979
array of whether each index value is found	core indexes datetime index ops mixin isin	0.083333
shade the background null_color	io formats styler highlight null null_color	0.250000
object	html frame	0.014706
array	sparse sparse series array	1.000000
sets index names to 'index'	default names	0.083333
dataframe columns parameters	data	0.009709
for this object	core	0.001326
convert to our native types format	to native types slicer na_rep float_format	0.250000
fixed frequency datetime	range start	0.066667
make box plots from dataframegroupby data	boxplot frame groupby grouped subplots column fontsize	0.500000
cartesian product	core get group index labels shape sort	0.200000
based on type and coerce into matrices	core arrays to mgr arrays arr_names index columns	0.250000
to get the values view mask dtype	core get values values	0.125000
add in numeric unary methods	index add numeric methods unary	1.000000
check that left and right	left right check_dtype	0.200000
tree-like object that can be used to iterate	frame parser	0.012500
passed a list-like indexer return the	convert list indexer keyarr kind	0.066667
block manager from	to manager sdf columns index	0.052632
validates that we have a	categorical	0.009615
store object in hdfstore parameters	io hdfstore put key value format	0.333333
a func	func	0.011905
class with a metaclass	metaclass metaclass	0.125000
index objects	indexes float64index	0.166667
styles to html	io	0.003012
cut where we convert passed	cut x	0.200000
sql and	params sql	0.500000
underlying array	index ops mixin	0.019231
add numeric operations	by add numeric operations	1.000000
allows a decorator to take optional	optional args decorator	0.083333
of the sparsearray only the actual sparse	sparse sparse	0.034483
fill missing values parameters	resampler fillna method limit	1.000000
length less than a given width	width	0.083333
return the compared against itemsize	itemsize	0.027027
a groupby implementation	datetime index resampler groupby	0.166667
form the intersection of two index objects	range index intersection other	0.083333
try_coerce_args / try_operate	core time delta block try coerce result result	0.333333
for regular or 'level_x'	io json	0.062500
occupying requested label default to specified missing	get label default	0.083333
a numpy / pandas type to	type x	0.055556
accessors	accessors	0.833333
bb	axis new_mgr_locs fill_tuple	1.000000
read csv file	frame from csv	0.066667
update index attributes e g freq depending on	core indexes datetime index maybe update attributes	0.200000
python datetime date	datetime	0.006711
of type window_type and size window on	stats rolling window arg window win_type	0.100000
select values between particular times of	core indexes datetime index indexer between	0.125000
sanitize input data to an ndarray	core sanitize array data index dtype	0.250000
gets called after	indexes period index	0.035714
from 1-dimensional ndarray only use this if you	set value arr	0.023810
its	core series	0.008000
take which sets nan	core take nd arr	0.125000
values between particular times of	datetime index indexer between	0.125000
subject string in the series extract groups from	str extract frame arr	0.047619
belongs to a leap year	core indexes period index is leap year	0.142857
the requested level	index sortlevel level	0.166667
of styler with	styler	0.022222
values view	values values	0.083333
a ufunc needs additional handling as	indexes period index array wrap result context	0.041667
if the date belongs to a leap	index is leap	0.125000
compare numeric	numeric v	0.333333
init self	sparse sparse data frame init	0.500000
string in the series extract groups from	core str extract frame arr	0.047619
name this allows simpler access to columns	name	0.025000
compute standard deviation of groups excluding missing	std ddof	0.166667
bytes see :class packer	io msgpack packb	0.025641
round the fractional part	reshape round frac x precision	0.200000
return a string representation	unicode	0.058824
to coerce any object types to better	object block convert	0.083333
buffered	buffered	1.000000
dtype and coerce to a fixed size	encoding itemsize	0.142857
into excel for	excel	0.111111
truncates a sorted ndframe	core ndframe	0.005051
all axes except items	indexed like other	1.000000
array interface return my	categorical index array dtype	0.125000
check if we're inside an an ipython zmq	core in ipython	1.000000
dict {group name -> group labels}	group by groups	1.000000
fast transform path	by transform fast	0.333333
interpolate values according to different methods	interpolate method	0.166667
to read from a url file or	io read	0.038462
precision used to render	precision precision	0.333333
and plural 'names' parameter for	names name names deep	0.125000
node must already exist and be	append key value	0.016667
slice the info axis of obj with indexer	core get info slice obj indexer	1.000000
in file	format	0.012346
convert datetime-like to	period index cmp opname nat_result	0.066667
returns true if categoricals are the	equal	0.050000
to convert datetime-like to	indexes dt index cmp opname nat_result	0.066667
side	side	1.000000
inteface datetimelike index	datetime index	0.007042
uint64index	uint64index	1.000000
that dict has	parser	0.008000
lookup of value from 1-dimensional ndarray only use	core indexes datetime index get value series key	0.071429
a multirow e	formatter format multirow	0.250000
infer types of values	infer types values	1.000000
return the number of bytes in the underlying	nbytes	0.046512
intervalindex with	core indexes interval	0.062500
of type	computation is type	0.125000
of the counts of the function in	counts f	0.041667
index objects sortedness of the result	range index	0.021739
the totally ordered cartesian product of	index labels shape sort xnull	0.066667
passed type is an actual dtype that	core dtypes interval dtype is dtype cls dtype	0.142857
wrap any results	core resampler wrap result result	0.500000
of the counts of the	counts f	0.041667
dataframe	util assert frame	1.000000
representation of object to the	ndframe to	0.043478
reduction	reduction	1.000000
passed a list-like indexer return	indexes interval index convert list indexer keyarr kind	0.066667
append to table in file node	key value format append	0.125000
seconds (>= 0 and	timedelta index seconds	0.066667
create a table	sqlite table create table	0.166667
validate that we have a	core block is	0.090909
from ndarray or	data index columns	0.125000
we by definition have a	io formats datetime64tzformatter format strings	0.166667
a method to class	method cls name	0.076923
value from 1-dimensional ndarray only use	indexes categorical index get value	0.100000
float values converted into strings using	float array formatter get	0.055556
the number	core	0.002653
the cacher	cacher	0.142857
infer the	dtypes infer	0.500000
to table in file node	io hdfstore append key value format	0.016667
a tz-aware type return an encoded zone	get tz tz	0.066667
reflecting the structure of	setup	0.090909
infer the	tseries infer	0.500000
check if we are a	check is	0.200000
checks whether the frame	io formats data frame	0.090909
the maximum by shading	max subset	0.166667
of sparse/dense and	core ndframe	0.005051
that is intended to operate elementwise i	applymap	0.250000
node must already exist and	key value	0.011628
to	io openpyxl1writer convert to	1.000000
database	sqldatabase	0.142857
frequency alias e g '5d' -> 'd'	alias freqstr	1.000000
in the series/index by	core str repeat arr	0.045455
return my dtype mapping whether number or name	io dtype for t	0.333333
in the series extract groups	extract	0.060606
to a compat for	to	0.006329
additional handling as	core indexes period	0.032258
an error in a future release	core categorical reshape new_shape	0.142857
csv file (discouraged please	data frame from csv cls path header sep	0.066667
calculate datetime	core indexes datetime	0.011494
styler removing any previously applied styles	io formats styler clear	0.333333
exc_value	exc_value	1.000000
to axis labels matching criteria parameters	core ndframe select crit axis	0.250000
fixed frequency datetime index with	indexes period range start end periods freq	0.083333
a spreadsheet-style pivot table as a dataframe the	core reshape pivot table data values index	0.166667
create a new unit if	tzdtype new cls unit	0.055556
handles preprocessing for cut where we convert	reshape preprocess for cut	0.200000
raise keyerror	compat	0.030303
in pd read_csv	parser	0.008000
of bytes in the underlying	multi index nbytes	0.052632
index with target's values (move/add/delete values	indexes multi index	0.013158
quantile-based discretization function discretize variable into	core reshape qcut x q labels retbins	1.000000
exist and	append key	0.016667
downsample the	core datetime index resampler downsample how	0.200000
the correct pandassql subclass based	io pandas sql builder con flavor schema meta	0.055556
in	key value	0.011628
hypothetical list representing the totally ordered cartesian product	labels shape sort xnull	0.066667
draw histogram of	hist frame data column	0.200000
datetimeindex	datetime index	0.021127
return boolean if values in the object	index ops mixin is	0.100000
a string representation for this object	indexes index unicode	0.083333
attrs	attrs	0.833333
exist and be table	io hdfstore	0.014493
the given quantile	quantile	0.058824
slice or boolean mask for requested	key method	0.250000
fixed size	data encoding itemsize	0.142857
the array interface return my values	indexes categorical index array dtype	0.125000
are datetime objects	core indexes numeric index is	0.333333
fast transform path	transform fast result	0.333333
tree-like object that can	frame	0.009091
return the full scope	core computation scope full scope	0.055556
where is a term or	where scope_level	0.142857
tuples of the (attr formatted_value)	core indexes index format attrs	0.142857
fast	indexes index	0.007353
as a frame table	series table	0.200000
return packed bytes see	io msgpack	0.025000
convert series to a nested list	series tolist	1.000000
from 1-dimensional	index set value arr key	0.023810
indices overlap add suffixes to overlapping entries	overlap with suffix left lsuffix right rsuffix	0.333333
handling	array wrap result	0.025000
return the data & release the memory	io data col take data	0.111111
must already exist and be table	format	0.012346
tuples of the (attr formatted_value)	datetime index ops mixin format attrs	0.142857
pack object	packb	0.022727
for monotonic decreasing	get fill indexer searchsorted target method limit	0.142857
panel-like dataframe	panel index time panels names	0.076923
needs additional	result	0.016393
and return the block manager from a dataframe	manager sdf	0.052632
as a	series as	0.125000
operations to the cls evaluate the	operations cls	0.153846
series extract groups from the first	extract frame arr	0.047619
create a new multiindex from	multi index	0.020000
a slice of my values	block slice slicer	0.083333
return the formatted data	index formatter func	0.333333
create a spreadsheet-style pivot table as a dataframe	reshape pivot table data values index	0.166667
applies the put method to	series put	0.055556
we will be using numexpr	core computation can use numexpr op op_str	0.333333
a hack to accelerate unioning a collection of	union many others	0.040000
the number of bytes in the	nbytes deep	0.052632
return index or ndarray filled	datetime index	0.007042
new dataframe with labeling information in	core data frame reset	0.027778
object to	ndframe to	0.086957
ordered multiindex	core indexes multi	0.014493
function that converts json lists to	convert to	0.090909
create a new unit if needed otherwise return	datetime tzdtype new cls unit	0.055556
repr function return	repr	0.040000
the array interface return my	indexes interval index array result	0.125000
index objects contain	core indexes datetime index ops	0.034483
add in the datetimelike methods (as we	ops mixin add datetimelike methods cls	0.333333
is	period dtype is	0.125000
value from 1-dimensional ndarray only	indexes categorical index get value	0.100000
checks that all the labels are datetime	core indexes numeric index is all dates	0.333333
array interface return my values	indexes categorical index array dtype	0.125000
provide concatenation of an datetimelike array	concat datetime to_concat axis typs	0.142857
of the values to be at least 1	shape values ndim	0.050000
hack to accelerate unioning a collection of	core indexes datetime index union many others	0.040000
compute the expected	expected	0.083333
fixed frequency timedelta	timedelta range start	0.333333
leap year	indexes period index is leap year	0.142857
is	core dtypes extension dtype is	0.125000
already exist and be	key value	0.011628
after	core series array	0.100000
swap level	indexes multi index swaplevel	1.000000
and	name args	1.000000
and 'kwargs' should be empty because all	method args kwargs	0.142857
applies a moving window	apply window	0.166667
ext	ext	0.714286
after a	period index array wrap	0.050000
the array interface return	core series array result	0.166667
if we have mixed	have mixed	0.166667
sparse reindex and return a new block	block sparse reindex new_index	1.000000
as a frame table	io appendable series table	0.200000
coerce	index coerce	0.125000
we don't support	fixed validate read kwargs	0.200000
simple cross-tabulation of	reshape crosstab index columns values	0.066667
whether each index value is found	indexes datetime index ops mixin isin	0.083333
take	index assert take	0.500000
that we have	core block is	0.090909
create and return the block manager from a	core sparse to manager sdf columns index	0.052632
return the ftypes (indication of	ftypes	0.043478
dataframe for compatibility with the data	data	0.009709
and 'kwargs' should be empty except for allowed	args kwargs allowed	1.000000
handling as	core indexes period index	0.034483
indexer and return them as	nd indexer axis	0.043478
datetime date objects (namely the	datetime	0.006711
numpy doesn't like to	string like	0.111111
lookup of value from 1-dimensional	key value	0.011628
the description	description complib complevel fletcher32 expectedrows	0.500000
:meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace limit downcast	0.333333
timegrouper and return	resample obj kind	0.083333
detect terminal size and	get terminal size	0.166667
function has at most len(compat_args) arguments and whether	args fname args max_fname_arg_count compat_args	0.333333
of python datetime date objects (namely the date	core indexes datetime index date	0.333333
index objects contain the same elements	index	0.004008
'numpy' library the	numpy validate take with convert	0.055556
alert a	io python parser alert	0.200000
return a string representation for a particular object	string mixin bytes	0.333333
array interface return my	indexes multi index array dtype	0.125000
split each string in the series/index by	core str	0.011364
an object with matching indices to	core ndframe reindex like other method copy limit	0.111111
the same	other	0.013514
the name this allows	name	0.025000
lookup of value from 1-dimensional ndarray	value	0.005155
memory	core indexes range index memory	1.000000
input values as an enumerated type or	factorize values	0.111111
elements of v should be inserted in a	ndarray searchsorted v	0.033333
try to read from a url file	read	0.033333
have	core categorical	0.013889
the internal	values	0.008547
the values to be at least 1	values ndim	0.050000
index	index b	0.041667
float values	float	0.024390
datetimelike dtype converting float	datetime value dtype	0.166667
lookup of	indexes index set value	0.023810
xlsx	xlsx	1.000000
swap levels i and j in a	swaplevel i j	0.222222
from a 1d array	index from intervals	0.125000
to coerce a code	maybe coerce freq code	0.076923
to the underlying array	core indexes datetime index ops mixin	0.029412
primarily label-location based indexer with integer position fallback	ixindexer	1.000000
prior to	series array prepare result	0.111111
of value from 1-dimensional ndarray only	indexes datetime index get value series	0.071429
evaluate the where condition cond on	computation where cond	0.111111
multi reindex	reindex multi axes method level	0.500000
rewrite	computation rewrite assign tok	0.125000
sdf	sdf	1.000000
of both	index equal	0.500000
block that has a single dtype if dtype	simple blockify tuples dtype	0.111111
delegatedclass of a series that is datetimelike (e	maybe to datetimelike data copy	0.142857
true if the levels of both multiindex	multi index equal levels	0.200000
registered	core get registered	0.500000
left and right panels are equal	assert panelnd equal left right check_dtype check_panel_type	0.333333
class constructor (for this class it's just __class__	core pandas object constructor	0.500000
index objects sortedness of the result is	index	0.002004
the categorical to be unordered	core categorical as unordered	0.500000
new unit	new cls unit tz	0.055556
value	formatter value	0.250000
return a string representation for this object	indexes frozen ndarray unicode	0.083333
whether i can attempt conversion to a	convertible to	0.333333
a curve with holidays	holiday calendar holidays start end return_name	0.066667
with nat which has the same length	mixin nat new	0.050000
is our asof key	asof key	0.250000
of two	other result_name	0.500000
number of nanoseconds (>= 0 and less than	indexes timedelta index nanoseconds	0.066667
and return an item pair	map popitem	0.055556
return	core indexes multi	0.014493
cast it to timedelta according	timedelta index maybe cast slice bound	0.125000
return an item pair from maps[0] raise	map popitem	0.055556
parameter	validate	0.027778
interpolate values according to	resampler interpolate method axis	0.166667
construct an intervalindex from a a	core indexes interval index from arrays	0.166667
gets	core indexes period index array wrap	0.050000
called via the 'numpy' library the	validate take with convert	0.055556
coerces data to ndarray raises on scalar	indexes index coerce to ndarray cls	0.166667
the background	io	0.003012
the keys corresponding	keys	0.032258
fully reindex-output to the	data frame group by reindex output result	0.045455
provides a resample of a	resampler	0.053571
datetime date objects (namely the	indexes datetime	0.011494
the dtype	dtypes infer dtype	0.333333
handles preprocessing for cut where we convert	core reshape preprocess for cut	0.200000
be used to iterate over	frame parser build	0.014706
panel or object coercible	join overwrite filter_func	0.076923
from the first match of regular expression pat	arr pat flags expand	1.000000
select	select	1.000000
iter1 iter2 iterables	util assert copy iter1 iter2	0.166667
defined as a copy with	indexes multi index view cls	0.047619
to midnight length	core indexes	0.004762
a single column from the table this is	key	0.005051
determine if each string matches	core str match arr	0.166667
for this object	core indexes index	0.007042
return a tree-like object that can be used	io html frame parser	0.012195
dataframe in place using non-na values from passed	update other join overwrite filter_func	0.055556
convert to our native types format slicing	core datetime block to native types	0.250000
render the built up styles to	styler render	0.142857
we have good categories	validate categories cls categories fastpath	0.250000
label for first non-na/null value	series first valid index	0.250000
handling	core indexes period index array wrap result	0.050000
set of unique elements of arr1 and arr2	arr1 arr2	0.066667
if we do need a multi reindex	ndframe needs reindex multi	0.333333
node with the key	get node key	0.083333
operations to the cls evaluate	numeric operations cls	0.090909
construct this type from	categorical dtype construct from string	0.166667
a resample of	datetime	0.006711
a timegrouper and return	resample obj kind	0.083333
an xpath expression to simulate bs4's ability to	xpath expr	0.166667
of a single element pandasobject	core ndframe	0.005051
my plane axes indexes these are already	plane axes axis	1.000000
write this	write	0.035714
guess the datetime format of a given datetime	guess datetime format	1.000000
select values between particular times	core ndframe between	0.100000
of columns excluding	core data frame	0.005917
each interval in	indexes interval	0.062500
copy	core indexes multi index copy	0.166667
grouping and aggregating relational	group by	0.016129
index if the frequency	freq index	0.500000
returns *copy* of	core indexes frozen ndarray values	0.250000
the view limits to the nearest	plotting time series date locator autoscale	0.055556
**experimental** dateoffset	begin	0.500000
create a timegrouper and return our resampler	core resample obj kind	0.083333
1-dimensional ndarray only use	indexes index set value	0.023810
you	index	0.002004
of groups	core	0.001326
to indexer and	nd indexer	0.030303
coerces data to ndarray raises on scalar data	indexes index coerce to ndarray cls data	0.166667
stata binary dta files from array-like objects parameters	stata fname convert_dates write_index encoding	0.333333
boxed	indexes datetime	0.011494
add the operations to the cls evaluate	add numeric operations cls	0.166667
when a manipulation result has the	constructor	0.040000
get integer location	indexes timedelta index get loc	1.000000
convert structured or record ndarray to dataframe parameters	frame from records cls data	1.000000
and be table	append key	0.016667
stata binary	to stata fname	0.200000
at particular time of day	core ndframe at time time asof	0.066667
to	frame parser	0.012500
a new datetimeindex	core indexes datetime index	0.007634
this is our asof	asof	0.083333
the td elements from	html frame parser parse td obj	0.083333
of our	core resampler	0.200000
counts of ftypes in this object	ftype counts	0.125000
read text from clipboard	io read clipboard	0.200000
try_coerce_args	datetime tzblock try coerce result result	1.000000
the unicode normal form for the	core string methods normalize form	0.066667
internal method to handle na filling of take	core indexes multi index assert take fillable values	0.250000
dtype then fill	fill	0.100000
series/index to be formatted in paragraphs	str	0.017544
return label for last non-na/null value	data frame last valid	0.250000
remove and	compat chain	0.034483
parse specified sheet s into a dataframe equivalent	io excel file parse	0.125000
python datetime date objects	core indexes datetime index	0.007634
tuples of the (attr formatted_value)	range index format attrs	0.142857
to convert timedelta-like to timedelta64	td index cmp opname nat_result	0.055556
or functions	rename axis mapper	0.333333
to capture stderr in a buffer so	util capture stderr	0.055556
the totally ordered cartesian product of all	shape sort xnull	0.066667
after	core indexes period index array wrap result	0.050000
decorator to add default implementation of ops	computation add ops op_classes	0.333333
value from 1-dimensional ndarray	period index get value series	0.071429
forward	core sparse sparse series iter	0.250000
only	categorical	0.009615
moving window of type window_type on	window apply window mean how	0.166667
add in the datetimelike methods (as	add datetimelike methods cls	0.333333
series extract groups from the first match of	str extract frame	0.047619
indexer fill with the	nd indexer	0.015152
hack to accelerate unioning	index union many others	0.040000
from 1-dimensional ndarray	indexes index set value arr	0.023810
of value from 1-dimensional ndarray only	indexes period index get value series	0.071429
that	io html frame parser	0.012195
the actual sparse values	core sparse sparse array	0.043478
rewrite the assignment operator for pytables expressions	computation rewrite assign	0.125000
making this object picklable	core indexes index setstate state	0.333333
return vector of label values for requested level	multi index get level values level	0.250000
returns value occupying requested label default to specified	sparse sparse series get label default	0.083333
pathlib path	io stringify path filepath_or_buffer	0.142857
convert a scipy sparse coo_matrix to	core sparse coo to sparse series	0.333333
string starting at	rsplit arr	0.037037
dispatch to apply we are	mixin apply func name	0.050000
a copy	multi index copy	0.166667
the underlying data which	index values	0.111111
manager	mgr data index columns	0.333333
name this allows simpler access to columns for	ndframe setattr name value	0.166667
array of python datetime	indexes datetime index	0.007634
swap level i with level j do not	multi index swaplevel i j	0.333333
to left <= series <= right na values	series between left right inclusive	0.200000
iter1 iter2 iterables that produce elements comparable with	util assert copy iter1 iter2	0.166667
from 1-dimensional ndarray only use this	core	0.001326
values and a	values values	0.083333
indexer like _name in the	indexer cls name indexer	0.083333
the styler	formats styler	0.021739
a single block	core block manager	0.022727
the option metadata if key is	key	0.005051
holidays between start_date and	holidays	0.090909
node must already exist and be table	io hdfstore append key value format	0.016667
we have	core	0.001326
node must already exist	io hdfstore append	0.016667
packed bytes see :class packer	msgpack packb	0.025641
for an ordered multiindex compute the	indexes multi index	0.013158
return	ndframe get	0.400000
dispatch to apply we are stripping	apply func name	0.050000
is an	index is dtype	0.500000
the correct class for resampling with	resampler for grouping	0.333333
iterate over the blocks collect and create	f axis consolidate transposed	0.062500
make deep or shallow copy of blockmanager	core block manager copy deep mgr	1.000000
a url has	is url url	0.047619
format	format dt_str dayfirst dt_str_parse	0.250000
dtype and n/a values to	empty dtype and	0.125000
make sure an expression is not an empty	core computation check expression expr	0.200000
infer types of values possibly casting	infer types values na_values try_num_bool	1.000000
a fixed frequency timedelta index with	core indexes timedelta range start end periods	0.083333
gets called after a	wrap result	0.068182
read csv file	series from csv cls path sep	0.066667
datetime64 block	datetime	0.006711
for general index and	core indexes index	0.007042
resample of	datetime	0.006711
of	indexes range index	0.021277
convert sql and params args to	io convert params sql params	0.250000
convert to our native types format	categorical block to native types slicer	0.250000
convert a scipy sparse coo_matrix to a sparseseries	sparse coo to sparse series a dense_index	0.166667
from 1-dimensional	indexes index set	0.023810
of bytes in the underlying	nbytes deep	0.052632
xlwt	io xlwt writer convert	0.500000
ensure that we are grabbing the correct scope	computation ensure scope level global_dict local_dict resolvers	1.000000
never	core	0.001326
coerces data to ndarray raises on scalar	coerce to ndarray	0.166667
that left and right panels are equal	panelnd equal left right check_dtype check_panel_type	0.333333
the last day of the month and day_of_month	semi month end	0.166667
total duration of each element expressed in seconds	timedelta index total seconds	1.000000
only use	set value	0.023256
from 1-dimensional	value	0.005155
index objects contain	indexes datetime index ops mixin	0.029412
return a slice of myself	slice slicer	0.017544
select values at particular time	ndframe at time time	0.066667
the best locator based on	date locator get locator	0.062500
wrap comparison operations to convert datetime-like to	core indexes dt index cmp opname nat_result	0.066667
for running code that expects to raise or	util assert produces warning expected_warning	0.071429
passed type is an actual dtype that	dtype is dtype cls dtype	0.130435
produce 'pivot' table based on	core reshape slow pivot index	0.333333
a styler	formats styler	0.021739
a tree-like object that can be used to	io html frame	0.012987
over	html frame parser build	0.014706
fixed frequency datetime index with day	core indexes period range start end periods freq	0.083333
be table	hdfstore append key value format	0.016667
only use	indexes	0.004651
called after a ufunc needs additional handling as	context	0.023810
index value is found in the	index ops mixin isin	0.083333
of v should be inserted	frozen ndarray searchsorted v	0.033333
object to the	to	0.006329
as	period index	0.024390
frequency code group	group	0.027027
in file node	hdfstore append	0.016667
perform the reduction type operation if we	index ops mixin reduce op name axis	0.083333
the block i	block cls i	0.333333
the object are unique	unique	0.090909
upper	upper	1.000000
getitem defers to the underlying array which	core indexes datetime index ops mixin getitem	0.250000
var	var	0.833333
the counts of ftypes in this	ftype counts	0.125000
python datetime date objects (namely the date	core indexes datetime index date	0.333333
wrap index _get_unique_index to	indexes period index get unique index dropna	0.250000
like	string like	0.111111
panel to a specified	core panel	0.019231
set my pandas	io fixed set object	0.200000
a la re split in the series/index by	core str split arr pat n	0.166667
to_union	to_union	1.000000
dict of array-like or dicts parameters	dict cls	0.166667
check	core block manager is	0.250000
must	io hdfstore append	0.016667
the specified categories	core categorical remove categories	0.500000
values & release the	io index col take data	0.111111
the given quantile a	series quantile	0.083333
compute variance of	core group by var ddof	0.166667
to	convert datetime to	0.166667
wrap comparison operations to convert datetime-like	core indexes period index cmp opname nat_result	0.066667
passed type is an actual dtype	extension dtype is dtype cls dtype	0.111111
missing indexers	from missing	0.500000
resample of a groupby implementation	period index resampler groupby	0.166667
intervalindex from a 1d array of	index from intervals cls data name	0.125000
to iterate over	io html frame parser	0.012195
the given quantile a la numpy percentile	series quantile q interpolation	0.250000
update index attributes e g freq depending on	index maybe update attributes attrs	0.200000
for series columns for dataframe major_axis	core ndframe iteritems	0.055556
unique elements in the	core index ops mixin nunique dropna	0.083333
convert to our native	datetime block to native	1.000000
in file node must already exist and be	io hdfstore append key value format	0.016667
close io if necessary	io excel file close	1.000000
validate that the where statement	validate where w	0.250000
using input function or functions	core ndframe rename axis mapper axis copy inplace	0.250000
to its	core	0.001326
read csv file (discouraged please use :func pandas	core series from csv cls path sep	0.066667
if we define an builtin function for this	base grouper is builtin func	0.333333
validate that an positional	positional	0.111111
new unit if needed otherwise return from	dtypes datetime tzdtype new cls unit tz	0.055556
a bit of a hack to accelerate unioning	core indexes datetime index union many others	0.040000
infer	core dtypes infer	0.500000
we are going	obj data_columns	0.250000
flattened values of the	indexes index ravel order	0.037037
safe get multiple indices translate keys for	core group by get indices names	1.000000
draw histogram	hist frame data column by	0.200000
"pivot" table) based	pivot index columns	0.111111
check if we are a view have a	check is	0.200000
get new sparsedataframe applying func to each columns	sparse sparse data frame apply columns func	0.500000
from 1-dimensional	set value arr key	0.023810
pick the best locator	date locator get locator	0.062500
this is called upon unpickling rather than the	new datetime index cls d	0.111111
index names to	default names	0.083333
tuples of the (attr formatted_value)	indexes multi index format attrs	0.142857
based on column number and its label	label	0.028571
returns a curve with holidays between start_date	abstract holiday calendar holidays start end return_name	0.066667
string-like and string-like array to convert object dtype	maybe convert string to object values	0.142857
by definition have do not have	io formats datetime64formatter format strings	0.090909
dict of dtypes if	dtypes	0.015873
coerce	dtypes coerce	0.200000
unique elements in	index ops mixin nunique dropna	0.083333
indices where elements of v should be	v	0.026316
raises notimplentederror	i	0.041667
decorator to add default implementation of ops	add ops op_classes	0.333333
kwargs suitable	kwargs	0.022222
convenience function for akima interpolation	core akima interpolate xi yi x der	1.000000
the td elements from a	parser parse td obj	0.083333
the number of bytes in the	core indexes range index nbytes	0.052632
the unicode normal form for the strings	core string methods normalize form	0.066667
the cached item item represents a positional indexer	core ndframe iget item cache item	0.090909
dataframe the levels	data values index	0.066667
construct this type from	core dtypes interval dtype construct from string cls	0.166667
be used to	build	0.013514
the values to be at least 1 d	block shape values	0.050000
/ try_operate	time delta block	1.000000
validates that we have	categorical	0.009615
header rows in multiindex parsing	io pop header name	0.100000
swap levels i and j in a multiindex	data frame swaplevel i j	0.333333
function is called via the 'numpy' library	compat numpy validate take with convert	0.055556
equivalent	equivalent	1.000000
operations to convert timedelta-like to	core indexes td index cmp opname nat_result	0.055556
extension against	writer check extension cls	0.125000
if we are index sliceable then	core convert to index sliceable obj key	0.083333
making this object picklable	index setstate state	0.333333
data to ndarray raises on scalar	to ndarray	0.166667
prior to a	core series array prepare	0.111111
packed bytes see :class packer	msgpack	0.022222
data for	data	0.009709
convert to our native types format slicing	core categorical block to native types slicer na_rep	0.250000
via the 'numpy' library the	validate take with convert convert	0.055556
a tree-like object	io html frame	0.012987
validates that	core	0.001326
elements of v should be inserted	v	0.026316
the header of	frame parser parse thead	0.111111
make a copy of this object names dtype	multi index copy names dtype	0.333333
existing_col	existing_col	1.000000
each index value	index ops	0.033333
put method to its values attribute if	core series put	0.055556
exist and be table	hdfstore append key value	0.016667
has only the	io json	0.062500
rewrite the assignment operator	computation rewrite assign	0.125000
of putmask that potentially upcasts the result parameters	core dtypes maybe upcast putmask result mask other	0.200000
specifications setup the internal grouper	core grouper set grouper obj sort	0.250000
representing the totally ordered cartesian product	index labels shape sort xnull	0.066667
return a list of normalized locales that	util valid locales locales	0.050000
if the repr should show the info view	info repr	0.333333
boolean whether i can attempt conversion to a	is convertible to	0.333333
new block try to preserve dtype	core putmask smart v m n	0.055556
string in the series/index by indicated number of	core str repeat arr	0.045455
take the codes by the indexer fill with	categorical take nd indexer allow_fill	0.333333
sparse-compatible version of ndarray take	take indices axis allow_fill fill_value	1.000000
select values at particular time of day	at time time asof	0.066667
values and a date_format	values values date_format	0.250000
of a	resampler	0.053571
fixed frequency datetime index with business	core indexes bdate range start end	0.083333
the 'numpy' library the	compat numpy validate take with convert	0.055556
return resolution str against resolution code	tseries resolution get reso cls resostr	1.000000
array of unicode strings	util randu array	1.000000
an xpath expression to	xpath expr attrs	0.166667
dataframe	data	0.029126
that do not throw an exception when set	util valid	0.125000
to convert timedelta-like to timedelta64	core indexes td index cmp	0.055556
be applied on each value to format it	value formatter float_format threshold	0.100000
iterate over	html frame	0.014706
or	or	1.000000
a string representation for this object	index unicode	0.083333
to add	add	0.035714
are going to write this	write	0.017857
setup our	core	0.001326
size of	itemsize	0.027027
value from 1-dimensional ndarray only use this if	indexes categorical index get value series	0.100000
used to iterate	html	0.011765
select values between	core ndframe between	0.100000
to return the correct pandassql subclass	io pandas sql builder con flavor schema meta	0.055556
packer for options	io msgpack packb	0.025641
the blocks collect and create a	axis consolidate transposed	0.062500
build an xpath expression to simulate	build xpath expr	0.200000
defined as a copy with the same identity	indexes multi index view cls	0.047619
combine series values choosing the calling series's values	core sparse sparse series combine	1.000000
from 1-dimensional ndarray only	indexes index	0.007353
the sparsearray only the actual sparse values need	core sparse sparse array	0.043478
helper function to	rowlabels collabels	0.333333
methods	methods	1.000000
(if copy=true return a new copy)	core block astype	1.000000
handle 2-d slices equiv to iterating over the	panel apply 2d func	0.200000
swap level	core indexes multi index swaplevel	1.000000
and string-like array to convert	core dtypes maybe convert string to	0.250000
to	convert to	0.272727
convert timedelta-like to timedelta64	td index cmp opname nat_result	0.055556
whether each index value	indexes datetime index ops	0.034483
if the levels of both	index equal levels	0.200000
given delimiter string starting at the end of	rsplit arr	0.037037
convert sql and params args	convert params sql params	0.250000
index or	core indexes datetime index ops mixin	0.029412
union of two index objects	indexes index union other	0.083333
highlight the maximum by shading the background	io formats styler highlight max subset color axis	1.000000
the block manager from a dataframe of	to manager sdf	0.052632
to apply we are stripping	apply	0.026316
label for this level	level label	1.000000
row_num	row_num	1.000000
fill value for the nan/nat	fill value val	0.142857
object in hdfstore parameters	hdfstore put key value format	0.333333
a block	block	0.032787
return the number of	core indexes range	0.062500
style_dict to an xlwt style object	io xlwt writer convert to style cls style_dict	0.250000
as a dataframe the levels in	data values index	0.066667
key is a deprecated option and if	if deprecated key	0.500000
to an ndarray copy if specified coerce to	index dtype copy	0.043478
using the interpolate machinery	block interpolate with fill method axis inplace limit	0.200000
the plot attribute for groupby objects	by plot	0.062500
concatenate	core concatenate	1.000000
a method to class python 2 and	method cls name	0.076923
size of the dtype of the	itemsize	0.027027
return	core ndframe	0.010101
panel to long	to long	0.500000
alignment	alignment	0.750000
manager for running code that expects to raise	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
to table in file node must already exist	hdfstore append	0.016667
of a groupby implementation	datetime index resampler groupby	0.166667
pick the best locator based on a	plotting pandas auto date locator get locator	0.062500
value is found	ops mixin isin	0.333333
index	core indexes	0.023810
make new index with passed location -s deleted	index delete loc	0.200000
a new unit if needed otherwise return from	tzdtype new cls unit tz	0.055556
: int slice or sequence of	data frame ixs	0.200000
for	sparse	0.052632
get lines 0) there are headers on	python parser get	0.166667
true if the levels	levels	0.083333
to see if a url has a valid	io is url url	0.047619
of pattern or regular expression	arr pat flags	0.062500
with nat which has the same	ops mixin nat new box	0.050000
fast lookup of value from 1-dimensional	get value series key	0.250000
package is	package pkg_name	0.083333
object	frame	0.009091
x in y if possible otherwise	core computation in x y	0.047619
render the built up styles to	render	0.083333
that can be used to iterate	build	0.013514
return the correct	resampler get	0.250000
item from object	core ndframe	0.005051
the expression that is	core computation	0.047619
type is an actual dtype that	extension dtype is dtype cls dtype	0.111111
wrap comparison operations to convert datetime-like to datetime64	indexes dt index cmp opname nat_result	0.066667
provides	timedelta index resampler	0.066667
csv file (discouraged please use :func pandas	csv cls path	0.066667
to indexer and return them	indexer	0.018349
a valid ordered parameter	ordered	0.017857
with the block	for block cls	0.333333
of the month and day_of_month	semi month	0.166667
array of python datetime date objects	datetime	0.006711
in file	io hdfstore	0.014493
categorical by category value returning	values inplace ascending na_position	0.071429
so prints	core warn	0.333333
determine if dtype is valid	is valid dtype n method dtype	0.142857
file node must already exist	key value format	0.016667
a boolean list indicated if we have mixed	have mixed	0.166667
is index for series	core ndframe	0.005051
already exist	append key value format	0.016667
one of the stata date formats to a	convert datetime to stata	0.111111
return if we are a categorical possibility	is categorical array	0.500000
after a	series array	0.090909
by the indexer fill with the	nd indexer	0.015152
by the indexer	nd indexer allow_fill	0.050000
return	core computation get	0.333333
name	name name	1.000000
see dataframe pivot	reshape pivot index columns	0.333333
for valid keys across my indexer	core ndframe indexer has valid tuple	0.500000
to make a repr function	repr	0.040000
function is called via the 'numpy' library	take with	0.055556
decode character	decode arr	1.000000
our native types format slicing	native types slicer na_rep quoting	0.200000
the table from the axes	io table	0.062500
apply a function	io formats styler apply func	1.000000
the unit specifed fields from the arg dataframe	from unit mappings arg errors	0.500000
value from 1-dimensional ndarray	core indexes period index get value	0.071429
specified frequency	ndframe asfreq freq method	0.250000
that can be used	build	0.013514
deprecated use :meth series sort_index	series sortlevel level ascending	1.000000
using the index's frequency if	core ndframe tshift periods freq	0.066667
csv file (discouraged please use :func	from csv	0.066667
value from 1-dimensional ndarray only use	core indexes period index get value series	0.071429
apply aggregation function or functions to resampled groups	aggregate arg	0.071429
several cases to get	get	0.007143
try to deal with nat-like arg is a	arg errors	0.026316
return a function to create an op	core computation op	0.166667
a timegrouper and return	core resample obj kind	0.083333
create a figure with a set of subplots	plotting subplots	0.125000
perform an asof merge this is similar to	core reshape merge asof	0.071429
a tree-like object that	frame parser build	0.014706
in file node must already exist and be	io hdfstore append key value	0.016667
the values to	values ndim	0.050000
sets the view limits to the	series date locator autoscale	0.055556
apply the given offset/observance to a datetimeindex of	tseries holiday apply rule	0.200000
compute the vectorized membership of x in y	computation in x y	0.047619
already	key	0.005051
return a fixed frequency datetime index with business	indexes bdate range start end periods	0.083333
of a series that is datetimelike (e	maybe to datetimelike data copy	0.142857
inplace conform rhs	computation bin op conform rhs	1.000000
dtype from a scalar parameters	infer dtype from scalar	0.500000
fast transform path for aggregations	transform fast result obj	0.333333
string-like and string-like array to convert object dtype	dtypes maybe convert string to object values	0.142857
a list-like indexer	index convert list indexer keyarr kind	0.066667
to left <= series <= right na	core series between left right inclusive	0.200000
a dataframe including/excluding columns based on their dtype	core data frame select dtypes include exclude	0.500000
return a view of myself	categorical view	0.111111
formatted data as a unicode	core indexes index formatter func	0.083333
using matplotlib / pylab	grid	0.100000
a block of	core block make block	0.100000
we are index sliceable then return	convert to index sliceable obj	0.083333
:class	packb	0.022727
get item from object for given	core ndframe get	0.200000
synonym for :meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace limit	0.333333
coerce	core dtypes coerce indexer	0.500000
running code that expects	util assert produces warning	0.071429
check that left and right index are equal	assert index equal left right exact check_names	0.333333
compute covariance with series	series cov other min_periods	0.200000
a list of tuples of the (attr formatted_value)	indexes index format attrs	0.142857
generate bin edge offsets	core generate	0.125000
remove and return an item pair from	compat chain map popitem	0.055556
file node must	hdfstore append key value	0.016667
a sequence of terms for instances of pandasobject	any pandas objects terms	0.250000
filled with nat which has the same	nat new box	0.050000
include	include	1.000000
replace local variables with a syntactically valid name	core computation replace locals tok	1.000000
a categorical if not already	categorical arr	0.125000
to read from	read obj	0.058824
the number of bytes in the underlying	nbytes deep	0.052632
sets names on levels	set names names	0.200000
datetime index with custombusinessday as the default	indexes cdate range start end periods	0.083333
pivot	pivot	1.000000
func_kw	func_kw	1.000000
needs	indexes period index array	0.050000
that create a table reflecting	table create table setup	0.066667
a masked rec array and create	masked rec array to	0.090909
the blocks collect and create a	f axis consolidate transposed	0.062500
timedelta-like	td index cmp opname nat_result	0.055556
have a valid ordered parameter	validate ordered cls ordered	0.058824
and completion	core pandas object dir	0.166667
type	is type	0.125000
block return result block s	core block where other cond align	0.166667
read csv	csv cls path sep parse_dates	0.066667
the number	core indexes multi	0.014493
locale_getter	locale_getter	1.000000
value from 1-dimensional ndarray only use this	core indexes categorical index get value series	0.100000
of the underlying data	datetime index ops mixin	0.029412
in hdfstore parameters	hdfstore put key value format	0.333333
interval objects parameters	indexes interval index	0.062500
check if we're running in an interactive shell	core in interactive session	1.000000
we take a string-like that	convert string array	0.038462
create an indexer like _name in the	core ndframe create indexer cls name indexer	0.166667
after a	index array wrap	0.066667
thrown by an error is encountered in	error	0.028571
ftypes (indication of	core ndframe ftypes	0.055556
decorator to capture stderr in a buffer	capture stderr	0.055556
gets called after a	series array	0.090909
operations to convert timedelta-like	indexes td	0.055556
convert to our native types format slicing if	float block to native types slicer	0.250000
object that can be used to iterate over	html	0.011765
packed	msgpack	0.022222
return index or	indexes datetime index	0.007634
index names defaulting	reset index level drop inplace col_level	0.166667
localize tz-naive timeseries	core ndframe tz localize	0.500000
be used to iterate	html frame parser build	0.014706
apply we	apply func name	0.050000
string-like array to convert	dtypes maybe convert string to	0.250000
be table	append key value format	0.016667
supported for panel objects	panel to sparse	0.037037
'usecols' parameter	usecols arg usecols	1.000000
for series arithmetic operations	comp method series op	0.333333
'series argmin' is called	skipna skipna args	0.100000
gets called after a ufunc	core indexes period index array wrap result context	0.041667
context manager for temporarily setting	new_locale lc_var	0.125000
csv file (discouraged please use :func	from csv cls path header sep	0.066667
downsample the cython defined	period index resampler downsample	0.200000
float	formats float array formatter	0.055556
the binary feather-format for dataframes	data frame to feather fname	0.083333
the info for this name	get info info name	0.333333
tz-aware type return an	get tz tz	0.066667
bool of a	core ndframe bool	0.055556
new block manager	core block manager reduction	0.250000
major_axis	ndframe	0.005025
to coerce a scalar to a compat	indexes period index coerce scalar to	0.071429
return the formatted data as	indexes index formatter func	0.083333
boxed	core indexes datetime	0.011494
ndarray only use this if you	set value arr key	0.023810
first	first	0.600000
deleting the	io	0.003012
return boolean if values	index ops mixin is	0.100000
called after	core indexes period index array wrap result	0.050000
array interface return my values	core indexes multi index array dtype	0.125000
we always want to return	period index shallow copy with infer values	0.200000
read csv file (discouraged please use :func pandas	series from csv	0.066667
return a slice of my	categorical block slice slicer	0.083333
indices	indices	0.857143
csv file (discouraged please	data frame from csv cls path header	0.066667
categorical columns retain categorical information for	io stata writer prepare categoricals data	0.166667
holidays between start_date and end_date parameters	calendar holidays	0.166667
values to be	shape values	0.050000
take	multi index assert take	0.500000
from 1-dimensional ndarray	core indexes	0.004762
compute a simple	reshape crosstab	0.066667
only use this if	indexes categorical	0.071429
we might need to coerce a	tseries maybe coerce	0.125000
that do not throw an	util	0.062500
columns using	inplace	0.027778
is called via the 'numpy' library	numpy validate take with convert convert args	0.055556
that can be used to iterate	html frame	0.014706
for ordered data like time series	ordered	0.017857
the flattened values of the underlying data see	index ravel order	0.037037
construct this type	categorical dtype construct	0.333333
to	append key	0.016667
and string-like array to convert object dtype	maybe convert string to object values	0.142857
format my	core indexes interval index format	0.500000
draw histogram of the dataframe's	hist frame data column	0.200000
apply we are	apply func	0.027027
duplicate each string in the series/index	core str repeat arr	0.045455
values	values name	0.166667
format my	indexes index format	0.500000
that left and right index are equal	util assert almost equal left right	0.333333
the block_manager axis	core ndframe get block manager axis axis	0.166667
series extract groups from the first match	extract frame arr	0.047619
return index to be used	core reshape concatenator get	1.000000
must already exist and be table	hdfstore	0.014925
this is *not* the same	is other	0.055556
of a	index	0.006012
self analagoust to s-s	diff arr	0.200000
determine if each string	str match arr	0.166667
provides a resample	timedelta index	0.045455
to see if we can set a	util can set	0.125000
is	dtypes period dtype is	0.125000
is called via the 'numpy' library the	take with convert convert args	0.055556
key or none if it	key	0.005051
deprecate a keyword argument	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
indexables if they don't exist	io table indexables	0.333333
in the series/index by indicated	core str repeat	0.045455
sets the	core	0.001326
a common	common	0.125000
lookup of value	arr key value	0.038462
tabular environment	latex buf columns col_space header	0.100000
midnight length is	indexes	0.004651
index	sparse sparse data frame set value index	0.250000
return a basegrouper which is	core get	0.038462
a spreadsheet-style pivot table as	core reshape pivot table	0.111111
parse	excel file parse	0.125000
public verson of axis assignment	set axis axis labels	1.000000
init self from ndarray or list of lists	data frame init matrix data index columns dtype	1.000000
raises notimplentederror for offsets without	i	0.041667
you	value	0.005155
for categorical columns retain categorical information	stata writer prepare categoricals data	0.166667
of the data are	core data frame	0.005917
calculate datetime	indexes datetime index parsed	1.000000
arr to have shape	arr	0.013699
after a ufunc	wrap result context	0.088235
return the number of bytes in	index nbytes	0.052632
and other to int64 with null	other	0.013514
boolean mask of index	index	0.002004
create a new unit if needed	datetime tzdtype new cls unit	0.055556
return a prettier version of obj	core computation get pretty string obj	1.000000
set arr for sequences of small numbers	core fast count smallints arr	0.500000
vectorized membership of x in y if possible	computation in x y	0.047619
get integer location for requested label parameters	index get loc key method	0.500000
sparse-compatible version of ndarray take	sparse sparse array take indices axis allow_fill fill_value	1.000000
setting the name this allows simpler access to	ndframe setattr name value	0.166667
on where	where start stop	1.000000
repr of this	index	0.002004
of the index or maximum along an axis	indexes datetime index ops mixin max axis	0.333333
only use this	set	0.012195
requested level the result will respect	index sortlevel level ascending sort_remaining	0.200000
after a ufunc needs additional handling	result context	0.027027
the key or none if it does	key	0.005051
construct	core ndframe construct	0.333333
index and its	indexes index	0.007353
to ndarray raises on scalar data converts other	to ndarray cls data	0.166667
the elements that are non-zero this method	core series nonzero	0.166667
subset rows or columns of dataframe	core ndframe filter items like regex axis	0.166667
we take a string-like that	io convert string array data	0.038462
new dataframe with labeling information in the columns	core data frame reset	0.027778
of the timedeltas	index	0.002004
return a copy of a series	core series	0.008000
dispatch to apply we are stripping	apply func	0.027027
of how to create the grouper indexers	grouper obj key axis	0.142857
if the object is an iterator	core dtypes is iterator	0.500000
alert a user about	alert	0.100000
return sorted copy of	ops mixin sort values return_indexer ascending	0.250000
a html table	html classes notebook border	0.500000
compute a simple	index columns values	0.037037
return the number	multi	0.018182
and setup my atom from	data col set atom	0.333333
homogeneous dtype	core ndframe as blocks copy	0.142857
to each	data frame apply	0.500000
construct dataframe from dict of array-like or	core data frame from dict cls data	0.200000
iter2 iterables that produce elements comparable with assert_almost_equal	iter2	0.083333
infer better dtype	convert datetime numeric timedelta coerce	0.071429
perform the reduction type operation if we can	index ops mixin reduce op name	0.083333
with times	core	0.001326
is *not* the same as index	indexes index is other	0.333333
is an actual dtype that	period dtype is dtype cls dtype	0.142857
a common sparseindex corresponding to the locations	homogenize series_dict	0.047619
the best locator based	date locator get locator	0.062500
in the series extract groups from the	extract	0.030303
selection	selection select coords	1.000000
called via the 'numpy' library the third	take with convert convert args	0.055556
types and ranges supported by stata	io cast to stata types	0.500000
/ pandas type	type	0.024390
determine if each string matches	match arr pat case	0.166667
return the correct class for resampling with	resampler get resampler for grouping	1.000000
in file node must already exist and	io hdfstore append	0.016667
a styler	styler	0.022222
a subclass of styler with a custom template	formats styler from custom template	0.142857
into a list of lists	parser	0.008000
table in file node must	io hdfstore append key value format	0.016667
(e g convert back to bool/int	maybe downcast to dtype result	1.000000
that can be used	parser	0.008000
construct an intervalindex from	core indexes interval index from arrays cls	0.166667
an indexer coerced to the	categorical maybe coerce indexer indexer	0.125000
spreadsheet-style pivot table as a dataframe the	reshape pivot table data values index	0.166667
return a tree-like	parser	0.008000
number of elements in the ndframe	core ndframe size	0.333333
compute a simple	reshape	0.037037
delegatedclass of a series that is datetimelike (e	maybe to datetimelike data	0.142857
writing stata binary dta files from array-like objects	frame to stata fname convert_dates write_index encoding	0.333333
series/index	str get arr i	1.000000
return the formatted data as a unicode string	indexes index formatter func	0.083333
of a single	ndframe	0.005025
to	styler	0.022222
a frequency guess generated by infer_freq	datetime index ops mixin inferred freq	0.250000
must already exist	key	0.005051
compute the symmetric difference of two	symmetric difference other	0.333333
compute a	reshape crosstab index columns values	0.066667
copy of a series excluding elements	core series group	0.030303
the block manager from a dataframe of	sparse to manager sdf columns	0.052632
a decorator to take optional positional	util optional args decorator	0.083333
construct an intervalindex from a 1d array of	from intervals cls data	0.125000
name this allows simpler	name	0.025000
index and	indexes index validate names	0.066667
are	index is	0.083333
a boolean whether this axes needs validation	ndframe indexer should validate	0.166667
must already	key value	0.011628
valid ordered parameter if	cls ordered	0.058824
gets called after a	core indexes index array wrap	0.100000
raise keyerror is	compat chain map	0.032258
'numpy' library the third	with convert convert	0.055556
dtype of the values	dtype	0.010989
formats to a	to	0.006329
be unordered	as unordered inplace	0.500000
box function	core indexes datetime index ops mixin box func	0.142857
elements of arr1 and	arr1	0.050000
that can be used	html frame parser build	0.014706
date in xport format return	sas parse	0.066667
to cast the array/value to a datetimelike	dtypes maybe cast to datetime value	0.500000
round the fractional part of	reshape round frac x precision	0.200000
a block of	make block	0.166667
helper to call encode before writing to	io stata writer write to_write	0.083333
an positional indexer	valid positional setitem indexer indexer	0.052632
offsets index to beginning of period	tseries date offset beg apply index i	0.333333
returns the float values	io formats float array formatter get result as	0.055556
method to handle na filling of take	index assert take fillable values	0.250000
representing the totally ordered cartesian product of	get group index labels shape sort xnull	0.066667
return the	io table	0.062500
nanoseconds (>= 0 and less than 1	timedelta index nanoseconds	0.066667
data the	slice	0.038462
filter	computation filter bin op	0.250000
for this indexable with	io index col update	0.125000
alignment_dict	alignment_dict	1.000000
csv file (discouraged please use :func pandas	core data frame from csv cls	0.066667
string-like that is object dtype and coerce to	convert string array data	0.038462
panel-like dataframe	time panels names	0.076923
from 1-dimensional ndarray only use this if	indexes index set value	0.023810
number of	core indexes range	0.062500
and string-like array to	string to	0.166667
form the union of two index	core indexes range index union other	0.083333
determine if each string matches a	match arr pat case	0.166667
of interval objects	indexes interval	0.062500
can be	html frame	0.014706
dtype types to stata types returns	io dtype to stata type dtype	0.250000
the block return result block	core block	0.021739
the number of bytes in the underlying	index nbytes deep	0.052632
as sparsifying is not supported for panel objects	core panel	0.019231
return the	indexes	0.009302
spreadsheet-style pivot table as a dataframe the levels	reshape pivot table data values index columns	0.166667
totally ordered cartesian product of all possible	group index labels shape sort xnull	0.066667
subset rows	core ndframe filter items like regex	1.000000
kwds	kwds	1.000000
ndarray or list of	index columns dtype	0.125000
index to be returned from apply if as_index=true	core group by index with as index	1.000000
unique elements of arr1 and arr2 are equivalent	util equal contents arr1 arr2	0.066667
analagoust to s-s	diff arr	0.200000
of sparse/dense and dtype) in this object	ndframe	0.005025
attribute of the ax object if set	ax	0.142857
quote	computation term value tostring encoding	1.000000
of putmask that potentially upcasts the result parameters	core dtypes maybe upcast putmask result	0.200000
memory usage of the series parameters	core series memory usage index deep	1.000000
excelcells parameters	excel formatter	1.000000
perioddtype	period	0.016667
iterate over the	html	0.011765
'kwargs' should be empty except	kwargs	0.022222
set the	io	0.009036
spreadsheet-style pivot table as a dataframe the levels	core reshape pivot table data values index	0.166667
return the block manager from a dataframe of	to manager sdf columns index	0.052632
gets called prior	series array prepare	0.111111
reindex and return a	reindex new_index	0.250000
key and	key	0.005051
do a list replace	replace list src_list dest_list inplace	1.000000
sort multiindex at	core indexes multi	0.014493
data as a unicode	indexes index	0.007353
read sql database table into a	io sqldatabase read table table_name index_col coerce_float	0.333333
validate if we can	core indexes index validate for	0.333333
1-dimensional ndarray only use this if	core indexes index set value arr key	0.023810
get all the locales that	util get locales	0.500000
compute the vectorized membership of x not in	not in x	0.166667
function elementwise updating the html representation with	io formats styler applymap func subset	0.083333
of type window_type and size window on	window win_type min_periods	0.100000
a	core series array	0.100000
be	io hdfstore	0.014493
after	indexes period	0.034483
to table in file node	append key	0.016667
is defined	core indexes multi index view cls	0.047619
manipulation result has the same dimensions as	core ndframe constructor	0.055556
from a 1d array	from intervals cls	0.125000
passed a manager and a axes dict	core ndframe init mgr mgr axes dtype copy	0.333333
labels on	labels labels	0.250000
a list of normalized locales that do not	util valid locales locales	0.050000
number of	multi index	0.020000
xarray object from the pandas	xarray	0.111111
handler	handler	0.714286
must already	value	0.005155
function to determine if dtype is valid	n is valid dtype n method dtype	0.142857
specialized shift which produces	ops mixin shift n freq	0.250000
unaltered	indexes datetime index normalize	0.125000
return a list	tolist	0.071429
is defined as a copy	index view cls	0.047619
a slice of my	core categorical block slice slicer	0.083333
lookup of	value arr	0.023810
are index sliceable then return my slicer	to index sliceable obj	0.083333
return if each value is nan	categorical index isnan	1.000000
set the _typ here	set axis axis labels fastpath	0.200000
initializing the gradientfill stop	stop cls	0.066667
a	frame	0.009091
belongs to a leap year	indexes period index is leap year	0.142857
simple cross-tabulation	reshape	0.037037
truncates a sorted ndframe before	core ndframe truncate before	0.250000
provided date forward	date	0.040000
passed type is	dtypes extension dtype is	0.125000
extract from a masked rec	masked rec	0.250000
dict of the counts of the function in	counts f	0.041667
convert timedelta-like to	td index cmp opname	0.055556
for last non-na/null value	core series last valid index	0.250000
to table in file node	io	0.003012
return a list of the	tolist	0.071429
return myself as an object	core datetime tzblock to object	1.000000
the series/index by	core str repeat	0.045455
this colummn	attr	0.125000
a tabular environment table you can	latex buf columns col_space header	0.100000
is an	core indexes categorical index	0.095238
pat	pat	0.875000
by the indexer fill with	nd indexer allow_fill	0.050000
font object parameters	font cls	0.333333
swap level i with level j do	swaplevel i j	0.111111
of a single non-tuple indexer which	of indexer indexer target	0.333333
we have a	categorical validate	0.055556
for series arithmetic operations	arith method series op	0.333333
i am	core categorical block is	0.100000
take values according to indexer and return	take nd indexer	0.181818
exact	exact	1.000000
'kwargs' should be	kwargs	0.044444
metadata if key is a registered option	core get registered option key	0.333333
to dataframe in specified	core data frame set item key	0.250000
bind a method to class	bind method cls name	0.200000
want to	array	0.013889
ufunc needs	indexes period index array wrap result context	0.041667
compute a simple	index columns	0.028571
simple	index	0.002004
with times	indexes datetime	0.011494
before and/or after some particular index value	before after	1.000000
object dtype and coerce to a fixed size	encoding itemsize	0.142857
in file node	value format	0.016667
from 1-dimensional ndarray only use this	indexes	0.004651
ndarray only use	arr key	0.023810
after	indexes index	0.007353
moving window of	apply window	0.166667
bytes see :class	io	0.003012
file node must already exist and be table	io hdfstore append key value format	0.016667
reshape data (produce a "pivot" table) based	core data frame pivot index columns	0.200000
series with the transformed values	core resampler transform arg	0.200000
of the function in blockmanager	block manager	0.021277
boolean whether this axes needs validation for	indexer should validate iterable axis	0.166667
if we	object block is	1.000000
construct this type from a	dtypes interval dtype construct from string cls	0.166667
with level j do	j	0.034483
ndarray filled with nat which has	ops mixin nat new box	0.050000
each level the function returns lengths	io formats get level lengths levels sentinel	0.166667
according to indexer	indexer	0.018349
new index	core indexes categorical index	0.047619
slice the info axis of	core get info slice	0.500000
in file node	format	0.012346
context manager for running code that expects	util assert produces warning	0.071429
index objects contain the	core indexes	0.004762
a manipulation result has	constructor	0.040000
pack an object and return the packed bytes	io pack o default encoding unicode_errors	1.000000
csv	data frame from csv cls path header	0.066667
allows a decorator to take	decorator	0.071429
coerces data to ndarray raises on	core indexes index coerce to ndarray cls	0.166667
boolean whether this axes needs validation for a	core ndframe indexer should validate iterable	0.166667
an ndarray of the flattened values of	indexes index ravel order	0.037037
to length	length	0.111111
check	core ndframe check	1.000000
sub-classes to	core series gotitem key ndim subset	0.333333
init self from ndarray or list of lists	frame init matrix data index columns dtype	1.000000
read csv	frame from csv cls	0.066667
a string-like that is object dtype and coerce	io convert string array data	0.038462
series columns for dataframe and	core ndframe	0.005051
on sunday use day thereafter monday instead	tseries sunday to monday	0.333333
return a series with the transformed values	core resampler transform arg	0.200000
in file node must	io	0.003012
tree-like object that can be used	parser build	0.014706
groupby	by	0.038462
boolean if values in the object	index ops mixin is	0.100000
latex representation for a particular dataframe	core data frame repr latex	0.333333
string representation for this object	core indexes frozen ndarray unicode	0.083333
to the block_manager	get block manager	0.166667
over the	frame parser build	0.014706
guess generated by infer_freq	indexes datetime index ops mixin inferred	1.000000
starting at the end of the string and	rsplit arr	0.037037
support	fixed	0.055556
value occupying requested label default	series get label default	0.083333
interval	indexes interval	0.062500
we might need to coerce a	maybe coerce freq	0.125000
given an index find the level lenght	io formats get level lengths index	0.500000
for header rows	header name	0.100000
a fully reindex-output to	core data frame group by reindex output result	0.045455
decorator to take	decorator	0.071429
list of sql statement that create a table	sqlite table create table	0.166667
dataframe to a	formats data frame formatter to	0.083333
of v should be inserted in a	searchsorted v	0.033333
evaluate a python expression as	core computation eval expr	0.083333
called	result	0.049180
convert to our native types format slicing	to native types slicer na_rep float_format decimal	0.250000
file node must already exist and be table	value format	0.016667
and arr2 are	arr2	0.090909
handling	indexes period index array wrap result	0.050000
of microseconds (>= 0	timedelta index microseconds	0.066667
series extract groups from	core str extract arr	0.066667
alert a user about a malformed row	alert malformed msg row_num	0.500000
inferred types one for	index inferred type levels	0.111111
converts json lists to line	to line	0.142857
lists of strings	str	0.017544
to be unordered	as unordered	0.500000
extensions that writer engine supports	excel writer supported extensions	1.000000
generate nd initialization axes are passed	core panel init data data copy	1.000000
skiprows	skiprows	1.000000
convert an object to	core computation convert	0.250000
must already exist and be	io	0.003012
and string-like array to convert	dtypes maybe convert string to	0.250000
compute the slice locations for	slice locs start end step kind	0.083333
read sql query into	io read sql query sql con index_col coerce_float	0.333333
data for this	data	0.009709
the operations to the cls evaluate the	operations cls	0.076923
of times	arr repeats	0.200000
required package is	package	0.058824
a dataframe to a variable	core data frame	0.005917
date formats to	to	0.006329
dtype and	dtype and	0.125000
if the object is	core dtypes is	0.148936
expand	expand	1.000000
convert datetimelike-keyed dicts to timestamp-keyed dict	dict compat d	0.142857
this is defined as a	indexes multi index view cls	0.047619
from	frame parser parse	0.250000
scipy sparse coo_matrix to	core sparse coo to sparse series	0.333333
to apply we are stripping all of the	by mixin apply func name	0.050000
construct this type from a string raise	dtype construct from string cls string	0.166667
from a row element	parser parse	0.250000
timegrouper and return our	core resample obj kind	0.083333
new manager with the blocks	block manager combine blocks copy	0.250000
node must already exist	key	0.005051
never	categorical	0.009615
new dataframe with labeling information in the columns	data frame reset	0.027778
dateoffset	date offset	0.500000
if the passed type is an	interval dtype is	0.066667
function of type t or tuple of	is type t	0.083333
intervalindex return the corresponding interval	interval	0.029412
can be used to iterate	frame	0.009091
apply mapper function to its categories not codes	categorical map mapper	0.166667
precision used to	precision precision	0.333333
to convert timedelta-like to	td index cmp opname	0.055556
data the	ndframe slice	0.125000
ndarray	index set	0.022727
implement a datetime64 block with a tz	datetime tzblock	0.100000
write records stored in	name if_exists index	0.500000
manager for temporarily setting a timezone	timezone tz	0.142857
integer stride parameters	resolution get stride from	0.333333
table in file node must already	key value format	0.016667
return datetimeindex with times to	indexes	0.004651
1-dimensional ndarray only use this if	indexes index set	0.023810
null_color for	highlight null null_color	0.125000
if we have bytes decode them to	computation ensure decoded s	0.166667
iterate	frame parser	0.012500
y if possible	y	0.117647
the table from the axes & values	io table	0.062500
number of microseconds (>= 0	indexes timedelta index microseconds	0.066667
returns the float values converted into strings using	io formats float	0.055556
return the join indexers	reshape merge operation get join indexers	1.000000
the fractional part of the given number	frac x precision	0.100000
get my plane axes indexes these are already	panel get plane axes axis	1.000000
be used to iterate over the dom	build doc	0.125000
of a dataframe sorted by the n largest	core data frame nlargest n	0.166667
out the binary feather-format for	data frame to feather fname	0.083333
3 columns	columns values	0.037037
/ pandas type to its	type x	0.055556
raise a typeerror if	dtypes	0.015873
parse specified sheet s into	excel file parse	0.125000
microseconds (>= 0 and less than	indexes timedelta index microseconds	0.066667
return a tree-like object that	io html	0.012987
a new categorical by default	categorical sort	0.166667
float values converted into	formats float array formatter	0.055556
totally ordered cartesian product of	core get group index labels shape sort xnull	0.066667
a masked rec	core masked rec	0.250000
a concise listing of available options	options list keys width _print	0.111111
create a new block manager	block manager reduction f axis	0.250000
wrapper function for series	core arith method series	0.333333
wrap comparison operations to convert datetime-like to datetime64	index cmp opname nat_result	0.066667
function is called via the 'numpy' library the	numpy validate take with	0.055556
moving	arg window	0.500000
gets called after	period index array wrap result	0.050000
elements of arr1 and arr2 are equivalent	arr1 arr2	0.066667
list of normalized locales that	util valid locales locales	0.050000
compute	core reshape crosstab	0.066667
a string representation	frozen ndarray unicode	0.083333
the manager	mgr data	0.333333
ufunc needs	context	0.023810
series extract groups from the first match	core str extract arr	0.066667
hack to accelerate unioning	datetime index union many others	0.040000
1-dimensional ndarray only use	core indexes index set	0.023810
file node must	value format	0.016667
be used to iterate over the dom	parser build doc	0.125000
keyerror	map	0.029412
is not supported for panel objects	core panel	0.019231
or by	groupby by axis level	0.045455
value	core sparse sparse series get value	1.000000
render	render	0.500000
return index or	indexes datetime index ops	0.034483
wrapper around iterating through self data csv source	io python parser next iter line row_num	1.000000
dtype mapping whether number or name	dtype for t	0.333333
convert datetime-like to	indexes period index cmp opname nat_result	0.066667
of x in y	core computation in x y	0.047619
to	core data frame to	0.037037
resampling from a dataframe column or multiindex level	resampler from selection	0.142857
get the category labels	categorical get labels	0.500000
group labels}	base grouper groups	0.200000
sets names on	set names names	0.200000
called	series	0.006757
checks whether	parser check for	0.500000
subplot	subplot	1.000000
don't care for groupby	rolling groupby	0.500000
levels attribute is 1 or a	is multi index	0.142857
result set coerce	core dtypes coerce	0.066667
add numeric operations to the groupby	core group by add numeric operations cls	0.250000
append to table in file node must	format append	0.125000
julian	julian	1.000000
simple cross-tabulation of	crosstab index columns values	0.066667
return sparsedataframe of cumulative sums over requested axis	core sparse sparse data frame cumsum axis	1.000000
return if each value is nan	index isnan	1.000000
'args'	compat numpy validate groupby	1.000000
return series containing only true/non-nan values	remove na series	0.166667
get the data for	io data col get	0.333333
packer for	msgpack packb	0.025641
a dict associating	io stata reader value labels	0.142857
of value from 1-dimensional	key value	0.011628
endswith	endswith	1.000000
rows of other to the end	other	0.013514
compute	core reshape crosstab index columns	0.066667
on given axis omitted where alternately any or	frame dropna axis how thresh subset	0.100000
only use this if you	indexes index set	0.023810
to	convert	0.032258
the block i	for block cls i	0.333333
construct dataframe from dict of array-like or dicts	data frame from dict	0.200000
coerce a scalar to a compat for	indexes period index coerce scalar to	0.071429
delimiter string starting at the end of	rsplit arr pat n	0.037037
to iterate over the	html frame parser	0.012658
with the block i	col create for block cls i	0.333333
terms	terms	0.241379
the handle if its	io	0.003012
ensure that an array object has a float	dtypes ensure float	1.000000
sort multiindex	multi index	0.020000
called after a ufunc needs additional handling as	array wrap result context	0.029412
need to coerce a scalar to a	coerce scalar to	0.071429
in the series/index by the	core str	0.011364
the built	formats	0.031250
tuple representation or datetime	freq	0.016129
equivalent to shift without copying	shift periods	0.333333
accessor object for datetimelike properties of the	period properties	0.052632
called prior to	array prepare result	0.111111
scalar to a compat for our index	scalar to index item	0.333333
for a panel-like dataframe	panel index time panels names	0.076923
to connect to the	connect	0.071429
over	io	0.003012
we need to coerce	core indexes period index coerce	0.125000
value occupying requested label default to	sparse series get label default	0.083333
we are index sliceable then return my slicer	to index sliceable obj	0.083333
has a single dtype if dtype is	simple blockify tuples dtype	0.111111
string representation for	core indexes index unicode	0.083333
evaluate a	computation bin op evaluate	0.333333
akima interpolation	core akima interpolate	0.500000
of	core indexes index	0.007042
object for datetimelike properties of the series	timedelta properties	0.052632
left and right index are equal	util assert almost equal left right	0.333333
a full length	full	0.071429
dataframe	data values index columns	0.066667
histogram of	plotting hist	0.200000
apply we are stripping all of the	core group by mixin apply func name	0.050000
convert timedelta-like	indexes td index	0.055556
if you	set value	0.023256
node must already exist	hdfstore append key value format	0.016667
its hexadecimal representation used to tag	core computation replacer x	0.125000
do need	core ndframe needs	0.500000
index to be returned from apply if as_index=true	core group by index with as index b	1.000000
accessor object for	period	0.016667
a datetimeindex	datetime	0.006711
from	from	0.363636
comparison operations to convert datetime-like to	period index cmp opname nat_result	0.066667
an outside world format currently just	core block external values dtype	0.125000
if we do need a multi reindex this	series needs reindex multi axes method	0.333333
used to iterate over	build	0.013514
post process for each axes overridden in	mplplot post plot logic ax data	0.333333
be empty except for allowed	allowed	0.090909
base class for parsers that parse html	html	0.011765
take the	take nd	0.047619
decorator to capture stderr in a	capture stderr	0.055556
be table	hdfstore append key value	0.016667
create	io sqlite table create	0.066667
to a pandas or numpy	to	0.006329
using matplotlib / pylab	by grid	0.200000
box function to get object	core indexes datetime index ops mixin box func	0.142857
read rows from	io fixed width reader get rows	0.500000
gets the ordered attribute	get ordered	0.333333
times to midnight length is	datetime	0.006711
needs	indexes period	0.034483
types and ranges supported by	types	0.034483
shade the	io formats styler highlight	0.500000
needs additional	period index	0.024390
lookup of value from 1-dimensional ndarray only use	set value arr key value	0.038462
we by definition have do not have a	io formats datetime64formatter format strings	0.090909
length of that group - 1	core group by cumcount ascending	0.166667
returns the float values converted into	float array	0.055556
in file node must already exist	value	0.005155
the union of two	index union other	0.037037
that left and right index are equal	almost equal left right	0.333333
in the series/index starts with passed pattern	core str startswith arr pat	0.333333
holidays between start_date and end_date parameters	abstract holiday calendar holidays	0.166667
as a sparse	series as sparse	0.250000
rewrite the assignment operator for pytables	computation rewrite assign tok	0.125000
of each interval in the	core indexes interval	0.062500
values according to indexer and	nd indexer	0.030303
major_axis	core ndframe	0.005051
datetimelike (e	indexes maybe to datetimelike	0.142857
to shift without copying data the shifted	slice shift	0.083333
comparison operations to convert timedelta-like to timedelta64	indexes td index cmp	0.055556
of casting data from some accepted dtype to	numeric index assert safe casting cls data	0.047619
function to create an op	core computation op	0.166667
a a left and right array	left right closed	0.166667
return a basegrouper which is an internal	get	0.007143
apply of dateoffset to datetimeindex	date offset apply index	0.500000
provide boxed values for a column	frame box col values values items	1.000000
to left <= series <= right na values	core series between left right inclusive	0.200000
get integer	indexes datetime index get	0.500000
doesn't like to compare	v string like	0.111111
to take optional	util optional	0.066667
only use this if you	set value arr	0.023810
vectorized membership of x not in y	not in x y	0.066667
used	ndframe	0.005025
of unique elements in	ops mixin nunique dropna	0.083333
this is called upon unpickling rather than the	datetime index cls d	0.111111
returns true if there are any missing	period index is full	0.500000
from 1-dimensional ndarray only use this if	indexes index set value arr key	0.023810
using input	axis mapper axis copy inplace	0.055556
return a prettier version of	computation get pretty string	0.500000
take a string-like that	convert string array data	0.038462
utility to get the values view mask dtype	core get values values skipna fill_value fill_value_typ	0.250000
return datetimeindex with times	core indexes datetime	0.011494
return a boolean whether this axes needs validation	indexer should validate iterable	0.166667
that an positional indexer cannot enlarge	valid positional setitem indexer indexer	0.052632
ensure that if we don't have an index	data frame ensure valid index value	1.000000
number of bytes in the underlying data	core indexes multi index nbytes deep	0.052632
to table in file node must already exist	io hdfstore append key	0.016667
read csv file	core series from csv cls path sep	0.066667
category value returning a	inplace ascending na_position	0.071429
a string-like that is object dtype and coerce	string array	0.038462
positional indexer cannot enlarge its	indexer has valid positional setitem indexer indexer	0.052632
datetime index with business	indexes bdate	0.050000
dataframe with labeling information in the columns	data frame	0.005714
form the union of two index objects	core indexes range index union other	0.083333
scipy interpolate	interpolate scipy	0.250000
multi-index suitable for a panel-like dataframe	time panels names	0.076923
intervalindex from a 1d array	from intervals	0.125000
first day of the month and day_of_month	semi month	0.083333
only use	value arr key	0.023810
block in-place with new item	object block set locs values check	0.125000
input with values above given value s truncated	ndframe clip upper threshold axis	1.000000
return the header of a table	frame parser parse thead table	0.333333
gets called after	core indexes index	0.007042
alias for	index	0.002004
sets new categories	categories categories fastpath	1.000000
validate that we	validate	0.027778
the name this	name	0.025000
tree-like object that can	io html frame parser	0.012195
create the indexables from the table description	io generic table indexables	0.500000
read csv file (discouraged please use	from csv	0.066667
a string-like	io convert string array	0.038462
each string	arr	0.013699
comparable timezone both for pytz / dateutil	core indexes datetime index timezone	0.200000
a new sparsearray from	core sparse sparse data	0.076923
return packed	msgpack	0.022222
return the full scope for use	core computation scope full scope	0.055556
simple cross-tabulation	values	0.008547
non-tuple indexer which could be a slice	indexer indexer target	0.071429
series extract groups from the	str extract frame	0.047619
return an iterator over	index iter	0.250000
dtype mapping whether number or name	io dtype for t	0.333333
return a fixed frequency datetime	range start end	0.066667
types format slicing if	types slicer na_rep quoting	0.200000
a resample	timedelta	0.022222
background null_color for	highlight null null_color	0.125000
downsample the cython defined	period index resampler downsample how	0.200000
round	reshape round	0.500000
(header new_data) for header rows	pop header name row index_col	0.200000
to convert dataframe and series	data	0.009709
called	wrap	0.057692
only use	indexes index set value	0.023810
1-dimensional ndarray only use this if you	set value arr	0.023810
gets called	index array wrap result	0.066667
index value is found in	indexes datetime index ops mixin isin values	0.083333
objects	group by	0.016129
i	categorical block is	0.100000
return datetimeindex with times to	core indexes	0.004762
:class packer for options	io	0.003012
that we have	core	0.001326
parse a ndarray like into a	parser	0.008000
compute a simple	core reshape crosstab index	0.066667
make box plots from dataframegroupby	frame groupby grouped subplots column fontsize	0.500000
additional handling as	period index	0.024390
the interpolate machinery	interpolate with fill method	0.200000
less than a given width	arr width	0.142857
structure for accumulating data to be converted	list	0.034483
table in file node must already exist	hdfstore append key	0.016667
for the diff of the	diff n axis mgr	0.111111
date	tseries date	0.166667
lookup of	index	0.002004
lookup of	core indexes index set value	0.023810
return index or ndarray	core indexes datetime index ops mixin	0.029412
make a copy of	copy	0.012821
business day as the default frequency	periods freq	0.062500
of a	index resampler	0.065217
fast lookup of value	set value arr key value	0.038462
dataframe	data frame	0.217143
pointer of the underlying	ops mixin	0.033333
values as an enumerated type or	core factorize values sort order na_sentinel	0.111111
values & release	io index col take data	0.111111
concatenation of	concat datetime	0.125000
a multiindex	indexes multi	0.014493
best locator based on a	auto date locator get locator	0.062500
shift without copying data	slice shift periods axis	0.083333
underlying data as a python	index ops mixin	0.019231
if we do need a multi reindex this	core series needs reindex multi axes	0.333333
return a slice of	core datetime tzblock slice slicer	0.083333
'args' and	compat numpy validate resampler func method args	1.000000
lookup of value from 1-dimensional ndarray only	set value arr key value	0.038462
rec array and create the	rec array to	0.333333
indicating if the date belongs to a leap	leap	0.076923
a tree-like object that can be	io html frame parser build	0.014706
we have a valid ordered parameter if	core categorical validate ordered cls ordered	0.058824
if	core dtypes categorical	0.250000
internal method to handle na filling of	fillable values	0.125000
have n indexable columns with an arbitrary number	io legacy table read where columns	0.111111
equivalent to shift without copying data the shifted	core ndframe slice shift periods	0.083333
a code	code	0.076923
to_concat which	dtype to_concat name	0.333333
convert to object if we are a categorical	multi index to safe for reshape	0.333333
return an indexer coerced to the	categorical maybe coerce indexer indexer	0.125000
locator based on	date locator get locator	0.062500
specialized intersection for datetimeindex	indexes datetime index intersection other	0.142857
0 number format	number format cls	0.333333
use	core indexes	0.004762
duplicate values	values keep	1.000000
interpolation	interpolation	1.000000
data from some accepted	cls data	0.076923
given	multi index get	0.100000
sql	params sql	0.500000
convert a numpy / pandas type	table type	0.055556
that can be used to iterate over the	parser	0.008000
index or ndarray filled with	indexes datetime index ops mixin	0.029412
unstack a k a pivot	unstack	0.166667
the reduction type operation	core categorical reduce op name axis skipna	0.500000
change string like dtypes	dtypes invalidate string dtypes dtype_set	0.200000
compatiable fill_value and arr dtype then fill	fill arr fill_value	0.333333
a categorical adjusted for groupby	categorical index codes for groupby	0.333333
a tree-like object that can	html frame parser	0.012658
return an attributes dict for	get attributes dict	0.250000
timedelta-like to	core indexes td index cmp opname	0.055556
type is an actual dtype that	is dtype cls dtype	0.130435
of type window_type and size window on	window win_type	0.100000
and return the block manager from a	sparse to manager sdf columns	0.052632
to indexer and	indexer axis	0.043478
the labels	labels	0.038462
we might need to coerce a code	tseries maybe coerce freq code	0.076923
iterate over the	parser	0.008000
apply of dateoffset to datetimeindex raises notimplentederror for	tseries date offset apply index i	0.333333
format into long stacked format as dataframe	core panel to frame	0.125000
take the codes	categorical take nd	0.200000
a result set coerce the	core dtypes coerce	0.066667
a slice	datetime tzblock slice slicer	0.083333
sub-classes to	mixin gotitem key ndim subset	0.333333
check that left and right	left right check_exact	0.333333
dataframe with multi-level index return new dataframe	data frame reset	0.027778
data from google bigquery	gbq query project_id index_col col_order	0.250000
to take optional positional and	util optional	0.066667
fixed frequency timedelta index with day	core indexes timedelta range start end periods	0.083333
save workbook to	io excel writer save	0.333333
called after a ufunc	indexes index array wrap result context	0.200000
the process of casting data from some accepted	index assert safe casting cls data	0.047619
return packed bytes see :class packer for options	io msgpack	0.025000
to	convert data name	0.200000
index and its underlying	indexes index	0.007353
spreadsheet-style pivot table as a dataframe the	reshape pivot table data	0.166667
for series columns for dataframe major_axis for panel	core ndframe iteritems	0.055556
a leap	index is leap	0.125000
by default	sort	0.083333
take values according to indexer and return them	take nd indexer	0.181818
fast lookup of value from	value	0.005155
convert sql and params args to dbapi2 0	convert params sql params	0.250000
a string-like that is object dtype and	string array data encoding	0.038462
a copy	indexes multi index copy	0.166667
object	html frame parser build	0.014706
bool if we have only bool values but	core object block is bool	0.166667
na_option	na_option	1.000000
single block	core block manager	0.022727
long-format data to wide generalized inverse	lreshape data groups dropna label	0.333333
database table into a	table table_name index_col coerce_float parse_dates	0.333333
the number of bytes in the underlying data	core indexes multi index nbytes	0.052632
return a fixed frequency timedelta index with	indexes timedelta range start end periods	0.083333
is of the	core dtypes is	0.042553
simple cross-tabulation of	crosstab index columns	0.066667
return	compat chain	0.034483
the index and its	core indexes index	0.007042
put method to	series put	0.055556
ndarray only	index set value	0.023810
normalized locales	locales locales	0.200000
an intervalindex from a 1d array of interval	interval index from intervals cls	0.333333
handling	wrap result	0.022727
wrap index _get_unique_index	core indexes period index get unique index dropna	0.250000
of each interval in the	indexes interval	0.062500
localize tz-naive timeseries to target time zone	ndframe tz localize tz axis	1.000000
in file node	key value format	0.016667
chainmap with	compat chain	0.034483
blocks collect	consolidate transposed	0.062500
for a type checking function of type	is type	0.125000
numeric add/sub	add numeric	0.142857
return the block manager from a dataframe of	to manager sdf columns	0.052632
to convert timedelta-like to timedelta64	core indexes td	0.055556
underlying	datetime index ops mixin	0.029412
to construct this type from	interval dtype construct from	0.166667
to cast the array/value to	maybe cast to	0.250000
values at the new freq essentially	core resampler asfreq fill_value	0.066667
csv file (discouraged please use	csv	0.057143
a code to a	code	0.076923
length of this categorical	core categorical len	0.500000
the info	core data frame info	0.500000
cases to get	get index	0.200000
validate	index col validate	1.000000
the intersection of two index objects	index intersection other	0.052632
packer for options	packb	0.022727
from a uri if con is a	builder con	0.333333
after	index array wrap	0.066667
already exist and be	append	0.012987
lines 0) there are headers on row	io python parser	0.250000
date axis x-axis	plotting format dateaxis subplot freq	0.333333
a tree-like object	parser	0.008000
the required package is	package pkg_name min_version max_version	0.083333
reindex	index reindex	1.000000
tuples of the (attr formatted_value)	core indexes datetime index ops mixin format attrs	0.142857
to get instances of all the various index	util all index	0.142857
the intersection of two index	indexes index intersection other	0.166667
result set coerce the	coerce	0.025641
hash	util hash	0.666667
converts input into a pandas only dtype	pandas	0.035714
and the index has not been lexsorted	unsorted index	0.250000
given axis omitted where alternately any or all	axis how thresh subset	0.100000
strings bq->q etc	offset_str	0.166667
draw a matrix	matrix frame alpha figsize	0.500000
do a list	list src_list dest_list inplace regex	1.000000
as series or by a series	groupby by axis	0.045455
required package is	package pkg_name min_version	0.083333
invert the filter	core computation filter bin op invert	1.000000
specialized intersection for datetimeindex	index intersection other	0.052632
holiday falls on sunday use day	tseries sunday	0.200000
to capture stderr in a buffer	util capture stderr f	0.055556
method to handle na filling of take	core indexes multi index assert take fillable values	0.250000
read html tables into a list of	read html io match flavor header	0.200000
object with labels in	labels	0.038462
datetime	core indexes datetime	0.022989
localize tz-naive timeseries to target time zone	localize tz axis level	1.000000
return valid other	for numeric binop other op	0.500000
bytes in the	core indexes multi index nbytes	0.052632
float values converted into strings	io formats float	0.055556
error is encountered in pd read_csv	error	0.028571
values	core block shape values	0.050000
a function elementwise updating the html representation with	io formats styler applymap func subset	0.083333
representation of ndframe	core ndframe	0.005051
and coerce to a fixed size	data encoding itemsize	0.142857
string representation for a particular object	core string mixin bytes	0.333333
to iterate over	parser build	0.014706
we are index sliceable then return	convert to index sliceable obj key	0.083333
myself as an object	datetime tzblock to object	1.000000
compute variance of groups excluding	var ddof	0.166667
produce 'pivot' table based on	core reshape slow pivot	0.333333
handle na filling of take	core indexes multi index assert take fillable	0.250000
wrap long strings	wrap	0.019231
to sif http //www	to	0.006329
provides a resample	resampler	0.053571
followed by all previous maps if no	child m	1.000000
nearest	nearest	1.000000
called upon unpickling rather than	cls d	0.083333
shift categorical by desired number	core categorical shift	0.500000
required package is installed	package pkg_name min_version max_version	0.083333
node must already exist	io hdfstore append key value format	0.016667
deepcopy	deepcopy	1.000000
apply mapper function to its categories	core categorical map mapper	0.166667
best locator based on a distance	pandas auto date locator get locator dmin dmax	0.250000
read csv file (discouraged please use :func pandas	series from csv cls path	0.066667
series only operations to the cls evaluate	series only operations cls	0.333333
file node must already exist and	append key	0.016667
index and plural 'names' parameter for multiindex	indexes index validate names name names deep	0.071429
multiindex from the	indexes multi index from	0.142857
that	json parser	0.071429
1-dimensional ndarray only use	index	0.002004
dtype	is dtype	0.250000
a tree-like object that	io html frame parser	0.012195
for panel objects and will raise	panel	0.017857
create a figure with a set of subplots	subplots	0.076923
we are a categorical	for reshape	0.200000
cached item item represents a label indexer	item cache item	0.125000
get integer location for requested label parameters	categorical index get loc key method	0.500000
in file node	hdfstore	0.014925
holidays between	abstract holiday calendar holidays	0.166667
am never a	categorical	0.009615
the process of casting	assert safe casting	0.125000
dataframe the keys will	core data frame	0.005917
of casting data from	assert safe casting cls data	0.047619
unpack	unpack	1.000000
starting at the end	rsplit arr pat n	0.037037
pack an object and return the	io pack o	1.000000
asof key the 'on'	core reshape as of merge asof key	0.250000
capture stderr in a	util capture stderr	0.055556
operations to convert timedelta-like	indexes td index cmp	0.055556
apply box func to passed	ops mixin box	0.500000
the actual	bin op	0.125000
only	core indexes index set	0.023810
gets called after	array wrap	0.075000
fast lookup of value from 1-dimensional ndarray	indexes datetime index get value series key	0.071429
we take a string-like that	io convert string array data encoding	0.038462
convenience function for akima interpolation	akima interpolate xi yi x der	1.000000
pointer	core index ops mixin	0.062500
the unicode normal form for the strings in	string methods normalize form	0.066667
evaluate the block return result block from	core block eval func	0.333333
or np dtype to	to dtype dtype	0.083333
return the node with the key	io hdfstore get node key	0.083333
this is called upon unpickling	new interval index cls d	0.333333
of v should be inserted in a	v	0.026316
view limits to the nearest multiples	date locator autoscale	0.055556
we internally represent the data as a	tzblock external values	0.500000
to write this	write obj	0.041667
block and are a	block	0.008197
cross-tabulation of two or more factors by default	core reshape crosstab index columns values rownames	0.333333
that potentially upcasts	dtypes maybe upcast	0.500000
an outside world format currently just the ndarray	core block external values dtype	0.125000
table in file	format	0.012346
for header	pop header name	0.100000
a string-like that is object	io convert string array data	0.038462
column-wise row-wise or table-wase updating the	axis subset	0.250000
removes the specified categories	remove categories removals inplace	1.000000
the vectorized membership of x in y	in x y	0.047619
reader	reader	1.000000
update index attributes e g freq depending	datetime index maybe update attributes	0.200000
full length slice	full slice	0.333333
deprecate a keyword argument of a	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
strings in the series/index to be formatted in	core str	0.011364
with the block	block cls	0.333333
return the node with the key or	get node key	0.083333
a spreadsheet-style pivot table as a dataframe the	reshape pivot table data values index	0.166667
append to	format append	0.125000
for header	io pop header name	0.100000
the datetimelike methods (as we	datetimelike methods cls	0.066667
-> group labels}	base grouper groups	0.200000
stacklevel	stacklevel	1.000000
reduction type operation if we can	ops mixin reduce op	0.083333
new dataframe	core data frame reset	0.027778
check that the exception raised	util assert raises	0.200000
synonym for :meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace	0.333333
must already	format	0.012346
series excluding elements	core series group	0.030303
after a ufunc needs additional	wrap result context	0.029412
from the cartesian product of	index from product	0.500000
to html	formats styler	0.021739
size	size	0.250000
sparse	sparse sparse data frame	0.058824
:class packer	io msgpack packb	0.025641
return a fixed	bdate range start	0.111111
csv	frame from csv	0.066667
close the handle if	io stata reader close	0.200000
a tree-like object that can be	html	0.011765
decorator to make a repr function	repr	0.040000
return boolean if values in	ops mixin is	0.100000
datetime to sif	datetime to	0.100000
if the passed type is an	dtype is	0.032258
from 1-dimensional ndarray only use	indexes index set value arr	0.023810
blockmanager	block manager	0.148936
type window_type and size window on the	arg window win_type min_periods	0.100000
to an xlwt style	io xlwt writer convert to style cls	0.500000
put	put	0.217391
delimited	delimits s	1.000000
object that can be used to iterate	build	0.013514
1-dimensional	index set value	0.023810
determine if each	core str match arr pat	0.166667
a spreadsheet-style pivot table as a dataframe	core reshape pivot table data values	0.166667
and return	chain	0.031250
categorical by	categorical sort	0.166667
return the first element	item	0.050000
an error is encountered in	parser error	0.055556
true if the key is in the	core ndframe contains key	0.333333
see :class packer	packb	0.022727
index	set value index	0.333333
data to	data groups dropna	0.500000
determines if two multiindex objects have the	indexes multi index equals other	0.333333
we are index sliceable then return	core convert to index sliceable obj key	0.083333
index and / or columns using input function	copy inplace	0.055556
class implementing the plot attribute for groupby objects	by plot	0.062500
seconds (>= 0 and less	core indexes timedelta index seconds	0.066667
pivot	core reshape pivot index columns	0.333333
nrows	make custom dataframe nrows	1.000000
equivalent to shift without copying data the	core ndframe slice shift	0.083333
read from a url	io read obj	0.058824
destination_table	destination_table	1.000000
the totally ordered cartesian product	index labels shape sort xnull	0.066667
coerce	period index coerce	0.125000
to	io html frame	0.012987
iterate over	build	0.013514
change string like dtypes to object for	invalidate string dtypes dtype_set	0.200000
am never	categorical	0.009615
determines if two index objects contain the same	index equals other	0.200000
try to read from a url file or	read	0.033333
construct concatenation plan	concatenation plan	1.000000
diff of the	diff n axis	0.111111
perform merge	reshape merge	0.166667
lookup of value from 1-dimensional ndarray only	datetime index get value	0.071429
return new dataframe with labeling information	core data frame	0.005917
sort multiindex at the	indexes multi index sortlevel	0.166667
make new multiindex	indexes multi index	0.013158
check to see if a url has a	io is url url	0.047619
return a dense type view	core single block manager get values	1.000000
file node must already exist	hdfstore append	0.016667
for	io msgpack packb	0.025641
to coerce a scalar	core indexes period index coerce scalar	0.250000
options	io msgpack	0.025000
can be used to iterate over the dom	frame parser build doc	0.125000
of value from 1-dimensional ndarray only use this	indexes categorical index get value series	0.100000
setup our binners	resampler set binner	0.333333
return dtype	dtype	0.010989
detect terminal size and return tuple	terminal size	0.166667
function to return the correct pandassql subclass based	pandas sql builder con flavor schema meta	0.055556
return object with labels on given axis	axis	0.011364
returns true if any axis is zero length	io generic fixed is empty array shape	0.166667
called via the 'numpy' library the third	compat numpy validate take with convert convert	0.055556
parse specified sheet s into a	file parse	0.125000
the bool of a single element pandasobject	core ndframe bool	0.055556
object that can be	io	0.003012
of the required package is installed	package pkg_name	0.083333
node must already exist and	value format	0.016667
pack object o and return packed bytes see	o	0.043478
refer to numpy ndarray repeat	repeat repeats	0.142857
two indices overlap add	core items overlap	0.062500
truediv	truediv	1.000000
nrows	dataframe nrows	1.000000
convert to object	core indexes multi index to	1.000000
to a console-friendly tabular output	to string buf columns col_space header	1.000000
reduction type operation	ops mixin reduce op name axis	0.083333
mixed levels	mixed levels	1.000000
with the block i	create for block cls i	0.333333
of the index	index	0.004008
delimiter string starting at the end of the	rsplit	0.031250
the replacement attributes	core selection mixin shallow copy obj obj_type	0.166667
a categorical by hashing its categories	categorical c encoding hash_key	0.142857
the float values	float	0.024390
cached item item represents	item cache item	0.125000
supported for panel objects and	panel to	0.027027
self as a sparse array	series as sparse array	0.250000
table in	io hdfstore append key	0.016667
axes dictionary for the passed axes	dict from axes	0.333333
the fill value for the	fill value	0.111111
a set of kwargs suitable	kwargs	0.022222
multiindex has only 2	core indexes multi	0.014493
axis_num	axis_num	1.000000
a fixed frequency timedelta index with day	core indexes timedelta range start end	0.083333
infer better dtype for object columns parameters	convert datetime numeric timedelta coerce	0.071429
iterate over the dom	doc	0.071429
of other to the	other	0.013514
datetimeindex with	datetime index	0.007042
array of datetime time	core indexes datetime	0.011494
see if a url has a	io is url url	0.047619
construct dataframe from dict of	data frame from dict cls data orient	0.200000
in file node must already	io hdfstore append	0.016667
ufunc needs	array wrap result context	0.029412
pack	msgpack packb	0.025641
convert to our native types format slicing	categorical block to native types	0.250000
if we are index sliceable then	convert to index sliceable	0.083333
or datetime	freq	0.016129
run the	num_threads kwargs_list	0.050000
iter1 iter2 iterables that produce elements comparable	copy iter1 iter2	0.166667
concat	concat	0.352941
value at the given quantile	core series quantile	0.083333
buf	buf	1.000000
return a boolean if we are a single	is	0.005291
float values	formats float array formatter	0.055556
scipy sparse coo_matrix to	sparse coo to sparse series	0.333333
given quantile a la numpy percentile	quantile q interpolation	0.250000
memory usage of my values parameters	core indexes range index memory usage deep	0.200000
multiindex from	core indexes multi index from	0.142857
lookup of value from 1-dimensional	core indexes index set value arr key value	0.038462
a resample of	timedelta index	0.045455
fname are valid parameters	kwargs fname	0.250000
as a sparse array	series as sparse array	0.250000
return a fixed frequency datetime	bdate range start end periods	0.111111
class implementing the plot attribute	plot	0.043478
only use this	set value arr key	0.023810
convert timedelta-like	indexes td	0.055556
to table in file	io hdfstore append key value format	0.016667
localize tz-naive timeseries to target time zone	ndframe tz localize tz axis level	1.000000
compute standard deviation	core group by std ddof	0.166667
lookup of value from 1-dimensional ndarray only use	core indexes categorical index get value series	0.100000
1-dimensional ndarray	core indexes index set value arr	0.023810
ndarray of the	index	0.002004
return the block manager from a	to manager sdf columns index	0.052632
perform the reindex for all the axes	core ndframe reindex axes axes level limit tolerance	1.000000
validate	validate	0.333333
indicating whether the file is	io hdfstore is	0.200000
evaluate or raise typeerror	opstr	0.166667
or a list of term	term	0.083333
gets called after a ufunc	period index array wrap result context	0.041667
have good categories	validate categories cls categories fastpath	0.250000
next offset only if not on offset	offset	0.055556
one of the stata date formats to a	to stata	0.058824
construct a slice	ndframe slice	0.125000
fname are valid parameters	util validate kwargs fname	0.250000
create a new multiindex from	indexes multi index	0.013158
get integer location for requested label	indexes period index get loc key method tolerance	1.000000
sets names on levels	core indexes multi index set names names	0.200000
construction of strings to numpy	numpy	0.090909
frame table	frame table	0.333333
times to midnight length is unaltered	index normalize	0.125000
the full scope	computation scope full scope	0.055556
best locator based on	pandas auto date locator get locator	0.062500
a string-like that is object dtype and	string array	0.038462
up	formats	0.031250
temporarily setting	new_locale lc_var	0.125000
dtype as boxed values such as timestamps/timedelta	datetime like block mixin get values dtype	0.500000
check	manager is	0.100000
dataframe the keys will be	core data frame	0.005917
datetime time the time part of the timestamps	datetime index time	0.166667
and be	value format	0.016667
deprecate a keyword argument	deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
already exist and be table	hdfstore	0.014925
for making this object picklable	core indexes index setstate state	0.333333
left and right dataframe are equal	frame equal left right check_dtype	0.333333
equivalent to shift without copying data	slice shift	0.083333
class for writing	writer	0.111111
return	reshape as of merge get	0.500000
cummax	cummax	1.000000
table generally only indexables	table read column column where start stop	1.000000
the description	description complib	0.500000
of sql statement that create a table reflecting	create table setup	0.066667
wrap long	wrap	0.019231
decimal places	decimals	0.090909
asof merge this is	core reshape merge asof	0.071429
iterables you should probably use pprint_thing()	io formats pprint dict seq _nest_lvl max_seq_items	0.333333
read csv file (discouraged please use :func	from csv cls path header	0.066667
occupying requested label default	sparse sparse series get label default	0.083333
float values converted	float array	0.055556
init self from	init	0.142857
determine if	match arr	0.166667
load msgpack pandas object from the	read msgpack path_or_buf encoding iterator	0.200000
gets called after a ufunc	array wrap result context	0.088235
get reference dates	reference dates start_date end_date	1.000000
the length of this categorical	core categorical len	0.500000
out_arr	out_arr	1.000000
left and right	left right check_dtype check_index_type	0.333333
and right	right check_dtype check_index_type	0.500000
of columns	core data frame	0.005917
conserve rangeindex type for scalar and slice	core indexes range index getitem key	0.166667
frequency	freq method	0.333333
builds a concise listing	list keys width _print	0.111111
update index attributes e g freq depending	core indexes index maybe update attributes attrs	0.200000
override generic we want to set the	set	0.012195
box function to get object from internal	index ops mixin box func	0.142857
levels names etc' nentries - number	nentries nlevels prefix names	0.100000
table in file	append	0.012987
plural 'names' parameter for multiindex	validate names name names deep	0.125000
determine	dtype n method	0.125000
clear	clear	0.833333
index or ndarray filled	indexes datetime index ops	0.034483
major_axis for	core ndframe	0.005051
use this	indexes index set	0.023810
index labels returning a dataframe	data frame	0.005714
for requested	key method	0.250000
multiindex objects	indexes multi index	0.013158
the series extract groups	extract frame arr	0.047619
this is called upon unpickling rather than the	core indexes new datetime index cls d	0.111111
are index sliceable then return my	core convert to index sliceable obj	0.083333
sets names on levels warning	indexes multi index set names names	0.200000
using the index's frequency	core ndframe tshift periods freq axis	0.066667
series dropna if fill_value=nan returns a dense series	sparse sparse series dropna	1.000000
and be	io hdfstore append key value format	0.016667
the category labels deprecated	labels	0.038462
pick the best locator based on a distance	locator dmin dmax	0.250000
type to its corresponding json_table	json as json table type x	0.250000
set my pandas type & version	io fixed set	0.200000
two indices overlap add suffixes to	items overlap	0.062500
matrix multiplication with dataframe or series objects	data frame dot other	0.500000
supported for panel objects and will raise	core panel	0.019231
you	indexes	0.004651
read	io read	0.153846
for groupby	group	0.027027
index or minimum along an axis	core indexes datetime index ops mixin min axis	0.333333
a frame table	multi series table	0.200000
a block	make block	0.166667
create a sparseseries from a scipy sparse coo_matrix	sparse sparse series from coo cls a	0.333333
support start stop kwds in	fixed	0.055556
closed	interval closed	0.500000
the array interface return my	indexes categorical index array dtype	0.125000
indexer cannot enlarge	setitem indexer indexer	0.200000
for the dtype of the values	dtype	0.010989
fast transform path for aggregations	core ndframe group by transform fast	0.333333
the series/index starts with passed	core str startswith arr	0.250000
category value returning a new categorical by	core categorical sort values inplace ascending na_position	0.333333
specialized cython take	core take nd arr indexer axis out	0.166667
type window_type on the data	mean how	0.166667
the best locator based on a	locator	0.047619
with integer stride parameters	resolution get stride from	0.333333
return a summarized representation	core indexes datetime index ops mixin summary name	0.333333
we have a	cls	0.016949
datetimeindex	core indexes datetime index	0.045802
hexadecimal representation used to tag	core computation replacer x	0.125000
slice of this container	slice slobj axis kind	0.333333
a ufunc needs additional	array wrap result context	0.029412
1-dimensional ndarray only	index set value arr key	0.023810
a curve with holidays between start_date	holiday calendar holidays start end return_name	0.066667
setup my atom from the block b	io data col set atom block block_items	0.200000
a dataframe the levels in the	data	0.009709
totally ordered cartesian product	labels shape sort xnull	0.066667
additional handling as	core	0.001326
an index column description class	index col	0.066667
and be table	hdfstore	0.014925
construct and	construct	0.071429
to take optional positional and keyword arguments	optional	0.050000
nan/nat from the	val	0.058824
safe get multiple indices translate keys for	get indices names	1.000000
capture	util capture	0.333333
never a view	block is view	0.200000
filled with nat which has the same length	nat new	0.050000
shape of the values to be at	shape values ndim shape	0.083333
deletechars	deletechars	1.000000
node must already exist	io hdfstore append key value	0.016667
pick the best locator based on a	date locator get locator	0.062500
compute the quantiles of	core block quantile qs interpolation axis mgr	0.250000
filled with nat which has the same	mixin nat new	0.050000
styler with	formats styler from	0.076923
return an item pair from	chain map popitem	0.055556
helper function to determine	dtype n method	0.125000
array return an array of deterministic integers	util hash array vals encoding hash_key categorize	0.250000
implementing	by	0.038462
the dtype from a scalar parameters	dtypes infer dtype from scalar	0.500000
bytes	bytes	0.666667
if you	indexes index set value arr key	0.023810
have n indexable columns	columns	0.017857
ndframe as opposed to	ndframe to	0.043478
a fixed frequency timedelta index with day	indexes timedelta range start end	0.083333
add in the datetimelike methods (as we	index ops mixin add datetimelike methods cls	0.333333
right	right check_exact check_dtype	0.500000
pointer of the underlying	index ops mixin	0.019231
apply of dateoffset to datetimeindex	tseries date offset apply index	0.500000
dtype of the item of the	core	0.001326
before and/or after some particular index value	truncate before after axis copy	1.000000
we might need to coerce	maybe coerce freq	0.125000
to apply we are stripping all of the	apply func	0.027027
and return the op string	bin op generate	0.066667
guarantee the shape	shape	0.047619
in blockmanager	core block manager	0.022727
length	datetime index	0.007042
that	validate ordered cls	0.055556
make a multiindex	core indexes multi index	0.013158
boolean if we need	is	0.005291
value inplace return a new block (of	core block setitem indexer value	0.333333
operations to the cls evaluate	operations cls use_numexpr	0.142857
dataframe the keys will be the	core data frame	0.005917
to midnight length is unaltered	indexes datetime index normalize	0.125000
drop from frame raise keyerror if	core ndframe pop	0.200000
the levels of both multiindex objects are	core indexes multi index equal levels other	0.100000
of unique elements in the group	group by nunique dropna	0.250000
exception raised matches the expected exception and expected	assert raises contextmanager exception matches exc_type exc_value trace_back	0.333333
available options grouped by prefix	options	0.041667
dtype) in this	core ndframe	0.005051
fast lookup of	indexes index	0.007353
out	out	0.833333
method to handle na filling of take	indexes index assert take fillable values	0.250000
axes	axes index	1.000000
value from 1-dimensional ndarray only use this if	value	0.005155
handling	indexes period index array	0.050000
return result as series or by a	groupby by axis	0.045455
membership of x not in y	computation not in x y	0.066667
occupying requested label default to specified missing value	sparse series get label default	0.083333
value inplace return a new block (of a	core block setitem indexer value mgr	0.333333
the boolean criterion specified by	by filter	0.200000
each group if	group by	0.016129
returns the float values converted into	io formats float	0.055556
names	names	0.307692
a masked	masked	0.111111
gets	indexes	0.009302
the (attr formatted_value)	indexes index format attrs	0.142857
simple	crosstab	0.050000
to handle na filling of take	assert take fillable values indices allow_fill	0.250000
return a string representation for a particular object	core string mixin repr	0.333333
slice of	tzblock slice slicer	0.083333
render a dataframe to a	data frame to	0.074074
hack to accelerate unioning a collection of	index union many others	0.040000
a new categorical by default	categorical sort values	0.166667
block of	block make block	0.100000
to set the _typ here	core series set axis axis labels fastpath	0.200000
function to be applied on each value	float array formatter value formatter float_format threshold	0.100000
columns	ndframe groupby	0.250000
exist and be	key	0.005051
convert string-like and string-like array to convert object	maybe convert string to object values	0.142857
casting data from some	index assert safe casting cls data	0.047619
this if	indexes index set value arr key	0.023810
pick the best locator based on	locator get locator	0.062500
returns a dataframe	data frame	0.005714
time strings to	to	0.006329
object to input numpy dtype	ndframe astype dtype copy errors	0.500000
to dataframe	sparse data frame	0.090909
sparse_index	sparse_index	1.000000
information in the columns under the index	index	0.002004
that we have	validate ordered	0.055556
read from the store close it	io read	0.038462
curve with holidays between start_date	holiday calendar holidays start end return_name	0.066667
the shape of the values	block shape values ndim shape	0.083333
set the value inplace return a	value mgr	0.083333
concatenation of an datetimelike array	dtypes concat	0.100000
a new unit if needed	datetime tzdtype new cls unit	0.055556
compat with	sort levels monotonic	0.333333
sparse floating point data in	sparse data	0.200000
called via the 'numpy' library the third	validate take with convert convert	0.055556
after a	core indexes period index array wrap	0.050000
apply if as_index=true	by index with as	0.200000
result as series or by	groupby by axis level	0.045455
fname	fname	0.428571
a slice of my	block slice slicer	0.083333
find all occurrences of pattern or	findall arr	0.250000
using input function	copy inplace	0.055556
is index for series columns	core ndframe	0.005051
of my values but densify first	core non consolidatable mix in	0.090909
series extract groups	core str extract frame arr	0.047619
correct fill value for the dtype of the	fill value dtype fill_value fill_value_typ	0.333333
rewrite the assignment operator for pytables expressions	core computation rewrite assign	0.125000
to	cls name func	0.125000
exist and be	append key value	0.016667
need a qualified info display	memory usage qualified	0.333333
table in file node must already exist	append	0.012987
this is defined as a copy	core indexes multi index view cls	0.047619
by the indexer fill with the fill_value	nd indexer allow_fill fill_value	0.250000
by an error is encountered in pd read_csv	parser error	0.055556
return an internal format currently just the	core block internal values dtype	0.111111
concatenation of an datetimelike array of	concat	0.058824
panel objects and will	core panel to sparse	0.037037
where condition cond on a	computation where cond	0.111111
table in file node	hdfstore append key	0.016667
kwargs	kwargs cls	0.040000
manipulation result has the same dimensions as the	ndframe constructor	0.055556
for our index type	index	0.002004
the number	indexes range index	0.021277
have a	validate ordered	0.055556
reshape long-format data to wide generalized inverse of	reshape lreshape data groups	0.500000
a la re split	split	0.100000
add in the datetimelike methods (as we may	mixin add datetimelike methods cls	0.333333
the series extract groups from the first	core str extract	0.035714
expression	computation	0.076923
header of	frame parser parse thead	0.111111
starting at the	rsplit	0.031250
boolean if we need a qualified info display	core indexes index is memory usage qualified	1.000000
to dataframe apply for sparsedataframe	sparse sparse data frame apply func	0.166667
cross-tabulation of	crosstab index columns values	0.066667
a numpy / pandas type to its	type x	0.055556
html tables into	html io match flavor header	0.166667
in file node must	append	0.012987
close the handle if its open	io stata reader close	0.200000
object dtype as boxed values such as timestamps/timedelta	core datetime like block mixin get values dtype	0.500000
apply if as_index=true	index with as	0.200000
csv file	csv	0.057143
defined as a	multi index view cls	0.047619
or by a series of columns	ndframe groupby by axis level	0.333333
reduction type operation if we	ops mixin reduce op name	0.083333
o and return packed bytes see :class packer	packb o	0.055556
support start stop kwds in sparse	io sparse fixed	1.000000
the blocks collect and create	f axis consolidate transposed	0.062500
elements of v should be	frozen ndarray searchsorted v	0.033333
min_val	min_val	1.000000
an indexer like _name in the class	cls name indexer	0.083333
i am an indexed column	io index col is indexed	0.200000
of casting data from some	assert safe casting cls data	0.047619
if we have a compatiable fill_value and arr	arr fill_value	0.090909
lookup	index set	0.022727
sqlalchemy engine	io engine	1.000000
an ndarray copy	dtype copy	0.032258
see :class packer	io msgpack packb	0.025641
dtype as boxed values such as timestamps/timedelta	core datetime like block mixin get values dtype	0.500000
encode character	encode arr	1.000000
label for last non-na/null value	core series last valid index	0.250000
fast lookup of value from 1-dimensional ndarray	indexes datetime index get value series	0.071429
make a repr function return fillvalue for a	repr fillvalue	0.083333
label	value label	0.066667
after a	core indexes period	0.032258
bind a method to class python 2 and	bind method cls name func	0.200000
highlight the maximum by shading	highlight max subset	0.333333
typeerror if	dtypes	0.015873
of bytes in the	index nbytes deep	0.052632
offsets index to beginning of period	date offset beg apply index i	0.333333
alignment object parameters	alignment	0.125000
among the	types	0.034483
take the codes by the indexer fill	take nd indexer	0.090909
names	default names data	0.083333
dict of array-like or	dict cls data orient	0.166667
format	format dt_str dayfirst	0.250000
boolean if we need a	is	0.005291
masked rec array and create the	core masked rec array to	0.090909
retrieve	handler	0.142857
0 to the length of that group	core group by	0.027778
that they are valid stata	stata writer	0.125000
function or functions	rename axis mapper axis	0.333333
return an iterator over the boxed	datetime index iter	0.250000
into a list	html frame parser	0.012658
the object is dict-like	core dtypes is dict like obj	0.333333
of value from 1-dimensional ndarray only use this	period index get value	0.071429
gcd	gcd	1.000000
return a boolean if we need a	core indexes index is	0.083333
a particular dataframe invoked by unicode df in	core data frame unicode	0.166667
snap time stamps to nearest occurring frequency	core indexes datetime index snap freq	1.000000
get my plane axes indexes these are already	core panel get plane axes index axis	1.000000
fixed frequency timedelta index with day as the	indexes timedelta range start end	0.083333
gets	indexes index array wrap	0.100000
indexer and	nd indexer	0.030303
list-like of	core	0.001326
in the datetimelike methods (as we may have	datetimelike methods cls	0.066667
number of temporary variables in this	ntemps	0.111111
the series extract groups from	extract frame arr	0.047619
parse a ndarray like into a	io json parser	0.071429
convert datetime-like to	index cmp opname nat_result	0.066667
for creating a subclass of styler with	formats styler from	0.076923
indexer fill	indexer allow_fill	0.050000
to handle na filling of take	take fillable values	0.250000
s3 s3n or s3a url	io is s3 url url	0.250000
frequency datetime index with custombusinessday as	core indexes cdate range start end periods	0.083333
the series/index to be formatted	core str	0.011364
of sql statement that create a	sqlite table create	0.066667
validates that we have good categories	validate categories cls categories fastpath	0.250000
attribute	datetime	0.006711
take optional	util optional args	0.066667
single dict created from the iterable	fromkeys cls iterable	1.000000
call encode before writing to	writer write to_write	0.083333
the number of bytes in the underlying	range index nbytes	0.052632
error is encountered in pd read_csv	parser error	0.055556
an error in a future release	categorical reshape new_shape	0.142857
datetimeindex	indexes datetime index	0.045802
floating index	core indexes index maybe cast indexer	0.200000
of the list	sparse list	0.333333
in file node must already exist and	value	0.005155
2d-nd reshape operation on a	reshape nd axes	0.250000
convert	core computation convert	0.250000
add in comparison methods	core indexes index add comparison methods cls	1.000000
tree-like object that can	html frame	0.014706
exist	io hdfstore append	0.016667
common ops mixin to support a unified	index ops mixin	0.019231
a new unit if needed otherwise return	tzdtype new cls unit	0.055556
get lines 0) there are headers on row	python parser get index	0.166667
whether this	validate iterable axis	0.500000
data_columns	columns data_columns	1.000000
of entries in index	make custom index	0.250000
aggregate using input function or dict	group by aggregate arg	0.250000
returns the float values converted	formats float array formatter get result as array	0.055556
is an internal	core indexes index to	0.500000
an item pair from maps[0] raise keyerror	popitem	0.043478
series extract groups	str extract	0.071429
a	wrap	0.057692
float that can safely be cast to	name val min_val	0.083333
over the blocks collect and create	f axis consolidate transposed	0.062500
compute the vectorized membership of x in y	in x y	0.047619
of the inferred types one for	index inferred type levels	0.111111
object o and return packed bytes	o	0.043478
to dataframe apply for sparsedataframe	sparse data frame apply func	0.166667
monday	monday	0.833333
saturday use following monday instead	tseries next monday	0.250000
periods	periods	0.750000
eng	eng	1.000000
resample of a	resampler	0.053571
called after a	core	0.003979
ndarray or	data index	0.076923
of the values to	values	0.008547
float values converted into strings using	float array formatter get result as	0.055556
use this	value	0.005155
index (can't do	json jsontable writer init obj orient date_format double_precision	0.166667
append to	hdfstore append key value format append	0.125000
of the maximum values along an axis	datetime index ops mixin argmax axis	0.250000
beginning	beg	0.090909
internal method to handle na filling of take	indexes multi index assert take fillable	0.250000
is thrown by an	parser	0.008000
to preserve dtype	putmask smart v m n	0.055556
of nanoseconds (>= 0 and less	indexes timedelta index nanoseconds	0.066667
termvalue	v	0.026316
for header rows in multiindex parsing	header name	0.100000
value inplace return a new block (of	block setitem indexer value	0.333333
reshape long-format data to wide generalized inverse of	core reshape lreshape data groups dropna label	0.500000
the block manager from	to manager sdf columns	0.052632
the block manager from a dataframe of	core sparse to manager sdf columns index	0.052632
reorders categories as specified in new_categories	core categorical reorder categories new_categories ordered inplace	1.000000
from maps[0] raise keyerror is	chain map	0.034483
for this columns	index col read	0.250000
in vertical/horizontal layout for explanation	plotter	0.076923
tuple of slices/lists/labels/boolean indexer to a level-wise	locs tup	0.125000
the float values converted into strings	float array formatter get result as array	0.055556
read csv file (discouraged please use	data frame from csv cls path	0.066667
:class packer	msgpack packb	0.025641
scipy sparse coo_matrix to a	core sparse coo to sparse series a dense_index	0.166667
at particular time of day	at time time	0.066667
and other to	other	0.013514
float64index of julian dates	julian date	1.000000
timedelta-like to	indexes td index	0.055556
minimum argument indexer see also	ops mixin argmin axis	0.333333
a fixed frequency timedelta index with day as	indexes timedelta range start end periods	0.083333
return result as series or by a series	groupby by axis level	0.045455
elements of arr1 and	equal contents arr1	0.066667
delimiter	sep	0.166667
where condition cond on a and b	core computation where cond a b raise_on_error	0.500000
return resolution str against resolution	resolution get reso cls resostr	1.000000
dtype s bears the risk	subarr	0.050000
new dataframe with labeling	data frame reset	0.027778
subject string in the series extract groups from	core str extract frame	0.047619
take which	take nd arr	0.125000
datetimeindex from one time zone	core indexes datetime index	0.007634
pick the best locator based on	locator	0.047619
gets called after a	core indexes period index array wrap result	0.050000
modify block in-place with new item	object block set locs values check	0.125000
that dict has only	parser	0.008000
using the index's frequency	core ndframe tshift periods freq	0.066667
exist and be table	append key value	0.016667
bytes	io msgpack	0.025000
and 'kwargs' should be empty because all of	method args kwargs	0.142857
whether each index	index	0.002004
downsample the cython	downsample how	0.200000
a histogram of the counts of non-null values	core value counts values sort ascending normalize	0.200000
_apply kwargs and	func name window center	0.058824
dataframe to the	io to	0.200000
a series excluding elements from groups that	series group	0.030303
column and index parameters	frame set value index col	0.333333
types to stata types returns the	io dtype to stata type	0.500000
operations to convert datetime-like to	index cmp opname nat_result	0.066667
its hexadecimal representation used to tag	computation replacer x	0.125000
from 1-dimensional ndarray	core indexes index set value	0.023810
the formatted data as a unicode string	core indexes index formatter func	0.083333
timegrouper	core group by resample rule	0.166667
convert datetime-like to datetime64	indexes period index cmp opname nat_result	0.066667
called after	wrap result	0.068182
a numpy / pandas type	table type	0.055556
raises notimplentederror for	i	0.041667
writing stata	stata	0.022222
parameter for general index	indexes index	0.007353
use this if you	value	0.005155
extension against the writer's supported extensions	writer check extension cls ext	0.333333
draw histogram of the dataframe's	plotting hist frame	0.200000
s3 s3n or s3a	io is s3	0.250000
compute	core reshape	0.047619
by	io formats	0.027778
infer this column from the table	io index col infer handler	0.200000
convert datetime-like to datetime64	core indexes period index cmp opname nat_result	0.066667
already exist and be table	hdfstore append key value format	0.016667
a particular object invoked by str	str	0.017544
is called via the 'numpy' library	numpy validate take with convert	0.055556
file node	hdfstore	0.014925
apply if as_index=true	group by index with as	0.200000
if	arr	0.013699
can be used to	parser build	0.014706
according to indexer and	nd indexer	0.030303
binary feather-format for dataframes	core data frame to feather fname	0.083333
shape of the values to be at	values ndim shape	0.083333
guess the	guess	0.142857
synonym	core	0.001326
must be sparseseries or	maybe to	0.250000
used to	io html frame	0.012987
into a	index_col coerce_float	0.062500
list indicated if we have mixed	have mixed	0.166667
the block return result block from	core block	0.010870
positional indexer cannot enlarge	ndframe indexer has valid positional setitem indexer indexer	0.052632
index value is found in	datetime index ops mixin isin values	0.083333
mode s	frame mode	0.333333
internal method to handle na filling	fillable	0.095238
values between	datetime index indexer between	0.125000
we	core block is	0.090909
the boolean criterion specified by	group by filter	0.200000
with	single	0.250000
set the	core series set	0.076923
additional handling	indexes period index array wrap	0.050000
the built	io formats	0.027778
1-dimensional ndarray only use this if	indexes index set value arr key	0.023810
sanitize input data to	core sanitize array data index	0.250000
lookup	set	0.012195
pprint	pprint	1.000000
in	inplace	0.027778
specified frequency	core ndframe asfreq freq method how	0.250000
html tables into a	html io match flavor header	0.166667
validate / deprecate formats return the new	io hdfstore validate format format	1.000000
if the process of casting	numeric index assert safe casting	0.125000
multirow e	multirow	0.111111
of arr1 and arr2	equal contents arr1 arr2	0.066667
dtype and	empty dtype and	0.125000
reindex	reindex	0.562500
convert to our native types format slicing	to native types slicer na_rep date_format quoting	0.250000
object coercible to panel	core panel update other join overwrite filter_func	0.200000
to construct this type from a string	categorical dtype construct from string cls string	0.166667
called via the 'numpy' library	take with convert convert args	0.055556
ndarray only use	core	0.001326
read text from clipboard and pass to	io read clipboard sep	0.200000
reads lines from xport	sas xport reader get chunk size	1.000000
create/cache	table	0.010870
unit if needed otherwise return from the cache	cls unit tz	0.125000
self as	series as	0.125000
tree-like object that can	io html	0.012987
(namely the date	index date	0.200000
the totally ordered cartesian product of all	get group index labels shape sort xnull	0.066667
for running code that expects	util assert produces warning expected_warning filter_level clear	0.071429
return boolean indicating if self is view	ndframe is view	0.200000
and arr dtype	arr	0.013699
of object to the	core ndframe to	0.040000
check if we do need a multi reindex	core ndframe needs reindex multi	0.333333
use this if	core indexes	0.004762
vertical bar plot	plotting frame plot methods bar x y	1.000000
query or database table into a	index_col coerce_float	0.062500
of value from 1-dimensional ndarray	datetime index get value	0.071429
resolution str	resolution	0.125000
arr_names	arr_names	1.000000
dict	dict cls data	0.166667
table in file	hdfstore append key	0.016667
of this categorical	core categorical	0.013889
values to be	block shape values	0.050000
create a table reflecting the structure of	table create table setup	0.066667
n indexable columns with an arbitrary number of	legacy table read where columns	0.111111
index objects	datetime index	0.007042
of sql statement that create a	io sqlite table create	0.066667
tree-like object	io html frame	0.012987
pack object o and	io msgpack packb o	0.055556
coerce a scalar to	core indexes period index coerce scalar to	0.071429
length is	core indexes datetime index	0.007634
of type window_type and size window on the	rolling window arg window win_type min_periods	0.100000
new unit if needed	tzdtype new cls unit	0.055556
to table	key value format	0.016667
check if we are a view have a	ndframe check is	0.200000
purely integer-location	i loc indexer	0.142857
reindex for	core ndframe reindex	0.125000
take optional positional	util optional args	0.066667
arith	arith	1.000000
lookup of value from 1-dimensional ndarray	indexes period index get value	0.071429
values as an enumerated type or categorical variable	factorize values	0.111111
return a slice of myself	core categorical slice slicer	0.111111
multi	multi axes method level	0.500000
interpolate values	core resampler interpolate method axis limit	0.166667
cross-tabulation of	core reshape crosstab	0.066667
blockmanager	core block manager	0.090909
accumulating data to be converted into	list	0.034483
provide coercion to our input arguments	block try coerce args values	1.000000
setup our	resampler set	0.333333
in engineering notation appending a letter representing the	eng formatter call	0.142857
versionadded : 0 20 0	indexes multi index sort levels monotonic	1.000000
columns excluding na/null values	data	0.009709
1-dimensional ndarray only use	core indexes	0.004762
putmask	putmask mask	0.142857
'numpy' library	with	0.068966
term or a list of term	term	0.083333
is thrown by an error is encountered	parser error	0.055556
strings in the series/index to be formatted	core str	0.011364
holding column by definition this is not indexable	col	0.037037
downsample the cython	core period index resampler downsample	0.200000
returns the float values converted into	io formats float array formatter	0.055556
of a dataframe sorted by the n largest	data frame nlargest n	0.166667
works for monotonic decreasing	index get fill indexer searchsorted target method limit	0.142857
convertible	convertible	0.833333
return a	indexes	0.004651
via the 'numpy' library the third	take with convert convert args kwargs	0.055556
infer this column from the table create	io index col infer handler	0.200000
1-dimensional	indexes index	0.007353
hard to parse datetime string	parse time string	0.250000
values and a date_format	from values values date_format	0.250000
transform only applicable	series group by transform	0.250000
a stringified and numeric for these values	io stringify na values na_values	0.333333
values	convert values	0.333333
check that left and right index are equal	util assert index equal left right exact	0.333333
this if	indexes index set	0.023810
valid keys across my indexer	core ndframe indexer has valid tuple	0.500000
to the length of that group - 1	group by cumcount ascending	0.166667
provides a resample of a groupby implementation	resampler groupby	0.166667
lower	lower	1.000000
an xpath expression to simulate bs4's	xpath expr attrs	0.166667
particular object	dtypes extension dtype bytes	0.142857
and string-like array to convert object	dtypes maybe convert string to object	0.142857
csv file	core data frame from csv cls path header	0.066667
from 1-dimensional ndarray	core	0.001326
python datetime date objects	datetime index	0.007042
my self as a	sparse sparse series as	0.125000
copy	indexes multi index copy	0.166667
representation or datetime	freq	0.016129
from a 1d array of	from intervals cls data	0.125000
intervalindex from a 1d array	from intervals cls	0.125000
table in file node must already	value	0.005155
guess the datetime format of a given datetime	core tools guess datetime format	1.000000
the number	indexes	0.009302
of type window_type and size window	window win_type min_periods	0.100000
each interval in	core indexes interval	0.062500
new sparsearray from the input	core sparse sparse data	0.076923
deprecated	deprecated	0.666667
specialized intersection	intersection other	0.076923
rewrite the	rewrite	0.076923
indicated number of times	arr repeats	0.200000
the frame to its numpy-array representation	ndframe as matrix columns	0.200000
the array interface return my values	core series array result	0.166667
checking function of type	type	0.024390
perform an asof merge this is	reshape merge asof	0.071429
of interval objects	core indexes interval	0.062500
needs additional handling	core indexes period index	0.034483
table	arr table	1.000000
implementing the plot attribute for groupby	plot	0.043478
panel table	panel table	1.000000
evaluate the block return	eval func	0.200000
gbq	gbq	1.000000
:class packer	packb	0.022727
shift	core datetime tzblock shift	0.500000
class for writing stata	data frame to stata	0.200000
an ndarray of the flattened values of the	index ravel order	0.037037
with labels in requested axis removed	ndframe drop labels axis level inplace	0.250000
a qualified info display	memory usage qualified	0.333333
copy of a series excluding	core series group	0.030303
a resample	datetime index	0.007042
from each group if n	core group by	0.027778
convert to our native types	core datetime block to native types slicer na_rep	0.250000
interpolate values	core resampler interpolate method axis	0.166667
infer the fill value	core dtypes infer fill value	0.333333
convert to our native types format slicing if	datetime block to native types slicer na_rep date_format	0.250000
elements of v	indexes frozen ndarray searchsorted v	0.033333
for :meth dataframe fillna(method='ffill') <dataframe fillna>	ndframe ffill axis inplace limit downcast	0.333333
index with	indexes period	0.034483
have a	ordered	0.017857
we have	core block is	0.090909
be	io html frame parser	0.012195
background null_color for missing	null_color	0.076923
be any type that can be coerced to	index simple new cls	0.090909
normalized locales	valid locales locales normalize	0.200000
find indices where elements of v should	frozen ndarray searchsorted v	0.033333
fast path for getting a cross-section	core single block manager fast xs	1.000000
n between self analagoust to s-s	diff arr n	1.000000
convert argument to timedelta parameters	tools to timedelta arg unit box	0.500000
i : int slice or sequence of integers	data frame ixs i	0.200000
if the object is a number	core dtypes is number	0.500000
column and index	index col	0.200000
window_type and size	win_type	0.166667
a copy of the	copy	0.012821
round a dataframe to	core data frame round	0.166667
modify block in-place with new item	core object block set locs values check	0.125000
add in the datetimelike methods (as we	mixin add datetimelike methods	0.333333
in file node must already exist and be	key value	0.011628
to apply we are stripping all of the	mixin apply func	0.050000
of styler with	styler from	0.076923
the underlying data	multi	0.018182
of value from 1-dimensional ndarray only use	core indexes categorical index get value	0.100000
return number of unique elements in the	core index ops mixin nunique dropna	0.083333
called after a	core series array wrap result	0.100000
higher freq with integer	cls value freq	0.083333
lookup of value from 1-dimensional ndarray	datetime index get value series key	0.071429
a manipulation result has the	ndframe constructor	0.055556
if	categorical	0.009615
the _upsample kwargs and	mixin apply f	0.166667
true if the key is in the info	core ndframe contains key	0.333333
float values	io formats float	0.055556
reset the cacher	reset cacher	1.000000
in file node	io hdfstore append	0.016667
internal method to handle na filling of	fillable	0.095238
try to parse a ndarray like into a	io json parser try convert	0.500000
object that can be used	html	0.011765
keys across my	tuple	0.142857
do not satisfy the boolean criterion specified by	group by filter	0.200000
the totally ordered cartesian product	sort xnull	0.066667
apply we are stripping all of	group by mixin apply func name	0.050000
called	core indexes index array wrap	0.100000
i with level j do not change the	i j	0.200000
and and	core computation	0.047619
line from buffer filling buffer if required	python parser buffered line	0.500000
a boolean whether this axes needs validation for	core ndframe indexer should validate	0.166667
of nanoseconds (>= 0 and	indexes timedelta index nanoseconds	0.066667
read csv file (discouraged please use	core series from csv cls path sep	0.066667
to coerce	maybe coerce	0.125000
interpret the dtype from a scalar parameters	infer dtype from scalar val pandas_dtype	1.000000
that can be used to iterate	io html frame parser	0.012195
series/index by the	str	0.017544
the requested level the	level	0.043478
handle na filling of take	indexes index assert take fillable values indices allow_fill	0.250000
a boolean whether i can attempt conversion to	core indexes is convertible to index other	0.333333
for options	msgpack	0.022222
doesn't like to compare numeric	core dtypes is numeric v string like	0.333333
of group excluding	data frame group by	0.500000
necessary	sparse	0.052632
the function to my values	func	0.011905
datetime index with	indexes	0.004651
if	ordered cls	0.055556
5 the starargs attribute was changed	base expr visitor visit call 35 node side	0.066667
modify block in-place with	object block set locs values check	0.125000
with business day as the default frequency	periods freq	0.062500
add in the datetimelike methods (as we may	datetime index ops mixin add datetimelike methods cls	0.333333
read csv file (discouraged please use :func pandas	csv	0.057143
convert tz-aware datetimeindex from one time	datetime index tz convert tz	0.166667
the mode s of	mode	0.050000
1-dimensional ndarray only	core indexes index set value	0.023810
generic pytables data	generic data	1.000000
allow attribute access to get stores	io hdfstore getattr name	1.000000
series extract groups from the	extract frame	0.047619
the value inplace return a new block (of	block setitem indexer value mgr	0.333333
add series to dataframe in specified column	core data frame set item key value	0.250000
a frame	frame	0.018182
gradient	gradient	1.000000
specialized intersection for datetimeindex objects	datetime index intersection other	0.142857
transpose	transpose	0.833333
a categorical	categorical arr	0.125000
swap levels i and j in	data frame swaplevel i j	0.333333
s from	where other cond align raise_on_error	0.333333
dimensions as	core ndframe	0.005051
return a dict of the kinds allowable columns	io table queryables	0.055556
implementation for the aggregators	core selection mixin aggregate arg	0.166667
draw histogram of the dataframe's	plotting hist frame data column by	0.200000
making this object picklable	reduce	0.125000
float is formatted	float	0.024390
object that can be used to iterate	frame parser	0.012500
a	indexes period index array wrap	0.050000
return a new block (of	core block setitem indexer	0.066667
data pointer of the underlying data	index ops mixin data	0.333333
func call with any defaults	util make signature func	0.250000
this as a frame table	series table	0.200000
return a fixed frequency datetime index	indexes	0.004651
not dtype instance associated with an	arr_or_dtype	0.047619
check if we are a	core ndframe check is	0.200000
the values to be at least 1	core block shape values	0.050000
boolean if this key is in the index	interval index contains key	1.000000
try to read from a url file	io read	0.038462
sets the locations	set locs locs	0.333333
csv file (discouraged please use :func	frame from csv cls path header sep	0.066667
the date belongs to a leap year	indexes period index is leap year	0.142857
sql statement that create a	create	0.033333
data as a unicode	core indexes index	0.007042
get integer	indexes period index get	0.500000
called after a	index	0.004008
call encode before writing	stata writer write to_write	0.083333
compute a simple	crosstab	0.050000
manager	manager reduction f	1.000000
fast version of transform	transform fast func	1.000000
we do need a multi reindex this is	core series needs reindex multi axes	0.333333
read csv file	core series from csv cls	0.066667
that an positional indexer cannot enlarge	ndframe indexer has valid positional setitem indexer indexer	0.052632
the given delimiter string starting at the end	rsplit arr pat	0.037037
the put method to its values attribute if	core series put	0.055556
shift without copying data the shifted	slice shift periods axis	0.083333
dtype	dtype errors	0.333333
attempt to construct this type from a	interval dtype construct from	0.166667
values as an enumerated type or	core factorize values sort	0.111111
for header rows in	io pop header name	0.100000
after	after	0.833333
of the minimum argument indexer see also	ops mixin argmin axis	0.333333
can be used to	io html frame	0.012987
labels on given axis omitted where alternately any	dropna axis how thresh subset	0.100000
reads lines from	reader get chunk size	1.000000
user about a malformed row	malformed msg	0.100000
node must already exist and be table	key	0.005051
box function to get object from internal representation	datetime index ops mixin box func	0.142857
la re split in the series/index by	core str split arr	0.166667
holidays between start_date and	calendar holidays	0.166667
data	multi index	0.020000
add	core indexes datetime index ops mixin add	0.333333
making this object picklable	multi index reduce	0.333333
the dtype of the	dtype	0.010989
return the bool of a	bool	0.043478
setting a timezone	util set timezone tz	0.142857
must already exist and	io hdfstore append key value format	0.016667
the rows of a dataframe	data frame	0.011429
propagate metadata from other	core ndframe finalize other method	0.333333
numpy	numpy	0.545455
take which sets nan values in one	core take nd	0.125000
grid	grid	0.500000
long strings in the series/index to be	core str	0.011364
from	io fixed width reader	1.000000
file node must already exist and be table	append key value	0.016667
string starting at the end of the	rsplit arr pat	0.037037
to connect	util can connect	0.111111
manager for running code that expects to raise	util assert produces warning expected_warning	0.071429
index objects and	core indexes index	0.007042
and create a new block manager	core block manager reduction f	0.250000
the :meth pandas dataframe reset_index function see	level drop name inplace	0.142857
validate this column return	col validate col	0.200000
decorator to make a repr	repr	0.040000
the values	block shape values	0.050000
times in parallel	util test parallel	0.142857
box function to get object	ops mixin box func	0.142857
number of	indexes multi	0.014493
two or more factors by default	values rownames	0.333333
return packed bytes see :class packer	msgpack	0.022222
to apply we are stripping all of the	by mixin apply func	0.050000
set the values	io index col convert values	0.166667
a string cast it to	index maybe cast	0.111111
the locales that are available on the	locales prefix normalize locale_getter	0.125000
a multi reindex	reindex multi axes method level	0.500000
function for creating a subclass of styler with	formats styler	0.021739
combine	combine	1.000000
box	core indexes datetime index ops mixin box	0.500000
the 'numpy' library the	take with convert convert args kwargs	0.055556
check that left and right dataframe are equal	util assert frame equal left right check_dtype	0.333333
take which sets nan values	core take	0.125000
resolve	scope resolve	0.166667
maximum by	max subset color axis	0.166667
the time index using the index's frequency	core ndframe tshift periods freq axis	0.066667
as series or by a series	by axis level	0.045455
infer this column from the	io index col infer handler	0.200000
index or ndarray filled	datetime index ops	0.034483
allows a decorator to take optional positional	optional args decorator	0.083333
background null_color for	null_color	0.076923
passed type is	core dtypes interval dtype is	0.066667
a function has at most len(compat_args) arguments and	validate args fname args max_fname_arg_count compat_args	0.333333
plural 'names' parameter for	names name names deep	0.125000
separate	path na_rep engine	0.500000
that can be used to iterate over	html	0.011765
compute a	columns	0.017857
groupby implementation	period index resampler groupby	0.166667
wkday	wkday	1.000000
update index attributes e g freq	indexes index maybe update attributes attrs	0.200000
you	set value arr key	0.023810
have a valid ordered parameter if	ordered cls ordered	0.058824
makes sure that time and	time	0.052632
a user about a malformed row	malformed msg row_num	0.100000
concatenation of an	concat datetime	0.125000
native	native	0.625000
of type window_type and size window	arg window win_type	0.100000
write out the binary feather-format for	feather fname	0.083333
never	categorical block	0.100000
boolean if we are a single block	block manager is	0.250000
must already exist and	value format	0.016667
return new object with labels	labels	0.038462
constructor (for this class it's just __class__	core pandas object constructor	0.500000
property	ndframe	0.010050
dtype compat for the values	values	0.008547
count	count	0.277778
helper function to convert dataframe and series	data rowlabels collabels	0.333333
remove and return an item pair from maps[0]	chain map popitem	0.055556
node must	io hdfstore append key	0.016667
rolling	rolling apply	1.000000
the given delimiter string starting at the	rsplit arr pat	0.037037
a dataframe the levels in the	data values index columns	0.066667
to ndarray repeat	datetime index ops mixin repeat repeats	0.333333
after	indexes	0.009302
apply we are stripping all of	by mixin apply	0.050000
arg list of a func	func	0.011905
of python datetime	datetime index	0.007042
of type window_type and size window on the	window win_type min_periods	0.100000
put method to its values attribute if	put	0.043478
return the number of	core indexes multi	0.014493
return a slice of my	slice slicer	0.070175
method to handle na filling of	fillable values indices	0.125000
the values	block shape values ndim	0.050000
return a string representation for this	indexes frozen ndarray unicode	0.083333
subtraction of two datetimeindexes	indexes datetime index sub datelike dti other	0.333333
of v	ndarray searchsorted v	0.033333
table in file node	io hdfstore append	0.016667
retrieve single value at passed index label	sparse sparse series get value label takeable	1.000000
copy the existing store to a new	copy	0.012821
handle na filling of take	take fillable values indices allow_fill fill_value	0.250000
datetimeindex from one time zone to another	datetime index	0.007042
set coerce the	coerce	0.025641
internal	internal	1.000000
o and return packed	o	0.043478
return a string representing a frequency	freq	0.016129
indicating whether each string in the	core	0.002653
values to be at least 1 d	values	0.008547
remove and return an item pair	map popitem	0.055556
by category value returning a	inplace ascending na_position	0.071429
file node	hdfstore append key	0.016667
we might need to coerce a code to	tseries maybe coerce freq code	0.076923
gets	categorical get	0.200000
generic we want to set the	series set	0.076923
take optional positional and keyword arguments	util optional	0.066667
create a pytables index	create	0.033333
with integer stride parameters	tseries resolution get stride from	0.333333
and index	frame set value index	0.333333
eval	eval	0.500000
from each group if n is	core group by	0.027778
to get instances of all the various index	all index	0.142857
view limits	plotting time series date locator autoscale	0.055556
for an s3 s3n or s3a	io is s3	0.250000
validates that we	validate ordered	0.055556
fixed frequency datetime index with custombusinessday as	indexes cdate range start end	0.083333
an iterable but not	iterable not	0.250000
returns first	head	0.166667
iter2 iterables that	iter2	0.083333
a block	core block	0.010870
necessary for making this object picklable	core indexes index setstate state	0.333333
gets called after a	indexes index	0.007353
the sparsearray only the actual sparse values need	sparse sparse array	0.043478
their default values as specified	for default values	0.200000
read csv file (discouraged please use	core data frame from csv cls	0.066667
from 1-dimensional ndarray only	indexes index set	0.023810
evaluate and return the expression of the op	core computation evaluate op	1.000000
write each dataframe in panel to	core panel to	0.027027
3 columns of this	columns	0.017857
capture stderr in a buffer so that	capture stderr f	0.055556
by the given delimiter string starting at	rsplit arr pat	0.037037
from 1-dimensional ndarray	value	0.005155
convert sql and params args to	convert params sql params	0.250000
a multirow	latex formatter format multirow	0.250000
boolean if this key is in the	contains key	0.125000
add numeric operations to	add numeric operations cls	0.166667
is called upon unpickling rather than	datetime index cls d	0.111111
attribut with the table schema resets the	io	0.003012
'numpy' library the third	compat numpy validate take with convert	0.055556
with times	index	0.002004
determines if two index objects	index ops mixin equals other	0.200000
write	write obj	0.041667
the codes by the indexer fill	nd indexer	0.015152
and return an item pair from	compat chain map popitem	0.055556
returning	ignore_index verify_integrity	0.250000
return valid other evaluate or raise typeerror	validate for numeric binop other op opstr	0.500000
noexpand	noexpand	1.000000
remove and return an item pair from maps[0]	compat chain map popitem	0.055556
generate bin edge offsets and bin labels	generate	0.062500
maps[0] raise keyerror is maps[0]	map	0.029412
implement a datetime64 block with	tzblock	0.076923
series or by a	by axis level	0.045455
a spreadsheet-style pivot table as a dataframe the	reshape pivot table data values	0.166667
of microseconds (>= 0	core indexes timedelta index microseconds	0.066667
view limits to the nearest multiples	time series date locator autoscale	0.055556
index objects contain the	range index	0.021739
a slice of my values but densify first	core non consolidatable mix in slice slicer	0.500000
underlying array which by-definition	indexes datetime index ops mixin	0.029412
for series arithmetic operations	core bool method series op	0.333333
an item pair from maps[0]	compat chain map popitem	0.055556
if multiindex has	indexes multi	0.014493
values to be at least 1	block shape values ndim	0.050000
new dataframe with labeling	core data frame reset	0.027778
common sparseindex corresponding to	homogenize series_dict	0.047619
the date belongs to a leap	core indexes period index is leap	0.125000
can be used to iterate	parser	0.008000
float values converted	io formats float	0.055556
array of timestamps	index asof locs	1.000000
return a dense representation	sparse array get values fill	1.000000
an axes dictionary for the passed axes	axes dict from axes	0.333333
as a sparse array	core sparse sparse series as sparse array	0.250000
the name this allows simpler access	name	0.025000
to closest period	tseries get period	0.333333
string starting at the end of	rsplit arr pat n	0.037037
in the series extract groups from the	core str extract frame	0.047619
in file node must already	append	0.012987
unit if	unit	0.066667
a dataframe to a	data frame formatter to	0.083333
values for a	values values	0.083333
stata binary	stata fname	0.200000
where elements of v should be inserted	indexes frozen ndarray searchsorted v	0.033333
the object	core dtypes	0.166667
as a dataframe the levels in the	data values index columns	0.066667
tree-like object that	html	0.011765
implement	block	0.008197
regular expression	arr pat case flags	0.166667
evaluate	evaluate	0.666667
is	datetime	0.006711
object	indexes index	0.007353
panel to a	core panel to	0.027027
frequency	freq freq	0.500000
for more this	core	0.001326
to the end of this frame	core data frame	0.005917
wrap comparison operations to convert timedelta-like	td index cmp opname nat_result	0.055556
is called via the 'numpy' library the third	with convert convert args kwargs	0.055556
the time index using the index's frequency if	core ndframe tshift periods freq	0.066667
sql	sqldatabase	0.142857
which represent time-seires	timeseries index	0.333333
manipulation result has the same dimensions as the	constructor	0.040000
index	core sparse sparse data frame set value index	0.250000
subclass of styler with	formats styler from	0.076923
time and panels are conformable	like indices time panels	0.250000
view limits to	plotting time series date locator autoscale	0.055556
to table in file node must already exist	io hdfstore	0.014493
if_exists	if_exists	1.000000
have a valid ordered	categorical validate ordered cls ordered	0.058824
for a tz-aware type return an	io get tz tz	0.066667
the totally ordered cartesian product of all possible	sort xnull	0.066667
convert to our native types format slicing if	to native types slicer na_rep quoting	0.250000
handling as	wrap result	0.022727
axes dictionary for the passed axes	core ndframe construct axes dict from axes	0.333333
to take optional positional and keyword	optional args	0.066667
nat-like arg is a passed in as an	arg	0.018868
iterate over the blocks collect and create a	f axis consolidate transposed	0.062500
generate	nchars size	1.000000
grouping	grouping	1.000000
a categorical adjusted for	core indexes categorical index codes for	0.333333
built up styles to	io formats styler	0.021277
of difference between index values and index	indexes datetime index	0.007634
gets called after	index	0.004008
return a tree-like object that can be used	build	0.013514
'name' parameter for general index and	core indexes index validate names	0.066667
of value from 1-dimensional ndarray	indexes period index get value series	0.071429
our native types format slicing	native types	0.200000
re-evaluate the obj with a groupby aggregation	core resampler groupby and aggregate	1.000000
a	a	0.777778
the specified dtype	dtype	0.010989
asof merge this	core reshape merge asof	0.071429
return the full scope for use	computation scope full scope	0.055556
a series	series	0.033784
return the block manager from a dataframe of	manager sdf columns index	0.052632
compute boolean array of whether each index	core indexes datetime index	0.007634
new datacol with the block i	create for block cls i name cname	0.333333
which can be iterated over to	k	0.153846
3 columns of	columns values	0.037037
the view limits to the nearest	series date locator autoscale	0.055556
of python datetime	indexes datetime index	0.007634
csv	core series from csv cls path sep	0.066667
shape of the values to	core block shape values ndim shape	0.083333
construct this type from	dtypes interval dtype construct from string cls	0.166667
set the dataframe	core data frame set	1.000000
rewrite the assignment operator for pytables	core computation rewrite	0.125000
return if we are a categorical possibility	dtypes is categorical array	0.500000
sub-classes	mixin gotitem key ndim subset	0.333333
for header rows	header	0.066667
the indexer fill with	nd indexer	0.015152
the best locator based on a	locator get locator	0.062500
create a pytables index on	io table create	0.142857
version to operate on	like block mixin try operate values	0.333333
from 1-dimensional ndarray only use this if you	value	0.005155
whether the frame	data frame	0.005714
recursively evaluate an expression in	computation bin op call env	0.250000
sparsedataframe as	sparse sparse data frame	0.058824
provide concatenation of an datetimelike array of arrays	core dtypes concat datetime to_concat axis typs	0.142857
this allows simpler access	core ndframe setattr	1.000000
type is an	interval dtype is	0.066667
returns the indices that would sort the index	core indexes index argsort	0.166667
merge this is similar to	core reshape merge	0.166667
for creating a subclass of styler with a	styler	0.022222
convert to our native types format	block to native types slicer na_rep date_format	0.250000
function for series arithmetic operations	arith method op	0.333333
ndarray of my hashed values	index hashed values	0.166667
should	should	1.000000
to dataframe	core sparse sparse data frame	0.058824
a dataframe including/excluding columns based on their dtype	data frame select dtypes include exclude	0.500000
if s is a	s	0.125000
append to table in file	append	0.012987
returns the float	float	0.024390
to apply	apply func	0.027027
times	core indexes datetime	0.011494
into a	parser	0.016000
return boolean if values in	index ops mixin is	0.100000
array of datetime	datetime	0.006711
at particular time	core ndframe at time time asof	0.066667
two multiindex objects sorting	other	0.013514
panel to a	panel to	0.027027
values as an enumerated type or categorical	core factorize values sort	0.111111
equivalent to left	left	0.018519
holding passed axis constant	axis how inplace	0.500000
that we have a valid ordered parameter if	ordered cls ordered	0.058824
wrap op	core sparse wrap	0.500000
data & release the memory	col take data	0.055556
value for the nan/nat from	value val	0.250000
index with requested level removed if multiindex	indexes multi index droplevel level	0.333333
a singular 'name' parameter for general index	core indexes index validate names	0.066667
shift without copying data the shifted	ndframe slice shift periods axis	0.083333
we do need a multi reindex this is	series needs reindex multi	0.333333
can be used to iterate over	parser	0.008000
given an interval or intervalindex return the	get interval	0.125000
where elements of v	core indexes frozen ndarray searchsorted v	0.033333
v should be inserted in a	indexes frozen ndarray searchsorted v	0.033333
the numeric add/sub	core indexes index add numeric	0.250000
be table	key value	0.011628
sequence of terms for instances of pandasobject	core computation any pandas objects terms	0.250000
of arr1 and	util equal contents arr1	0.066667
validate against an existing storable	io fixed validate other	1.000000
index objects contain the same	index ops	0.033333
of	core indexes timedelta index	0.250000
am i little	compat is platform little	1.000000
whether	validate iterable axis	0.500000
downsample the cython	core datetime index resampler downsample	0.200000
given offset/observance to a datetimeindex of dates	rule dates	0.333333
only use this if	indexes index	0.007353
the flattened values	index ravel order	0.037037
a style_dict to an openpyxl style object	to style cls style_dict	0.166667
data array to the key as	key values	0.142857
evaluate the block return result block from the	core block eval func	0.333333
new datetimeindex with passed location s deleted	core indexes timedelta index delete loc	0.500000
1-dimensional ndarray only use this if	indexes index set value arr	0.023810
in the series extract groups from the	str extract arr	0.066667
the date belongs to a leap	is leap	0.125000
tree-like object that can be used	io	0.003012
create index with target's	multi index	0.020000
called after	core indexes index array wrap result	0.100000
timedelta64[ns]	timedelta64 ns	0.333333
a panel-like dataframe parameters	core panel index time panels names	0.076923
that do	util	0.062500
coords	coords	1.000000
view limits to the nearest multiples of	time series date locator autoscale	0.055556
reconstruct an	computation reconstruct	1.000000
boolean array of whether each index value is	indexes datetime index ops	0.034483
value from 1-dimensional ndarray only use	indexes datetime index get value series	0.071429
microsecond	core indexes datetime index ops mixin resolution	0.125000
read csv file (discouraged	core series from csv	0.066667
after	index array wrap result	0.066667
a string cast	maybe cast	0.100000
ndarray only use this	indexes index set value arr	0.023810
a hack to accelerate unioning a collection of	index union many others	0.040000
must already	append key value format	0.016667
must already	append	0.012987
a dataframe sorted by the n smallest	core data frame nsmallest n	0.166667
the bool of	core ndframe bool	0.055556
the index's frequency if available	core ndframe tshift periods freq	0.066667
len of myself	categorical size	0.111111
value from 1-dimensional	value	0.005155
to shift without copying data the shifted	core ndframe slice shift	0.083333
of casting data from	safe casting cls data	0.047619
each group if n	group by	0.016129
to	hdfstore append key value format	0.016667
to coerce a code	coerce freq code	0.076923
the index	io json	0.062500
with nat which has the same length as	ops mixin nat new box	0.050000
into a higher freq	cls value freq	0.083333
csv file (discouraged please use :func	data frame from csv cls	0.066667
lookup of	index set value	0.023810
float values converted into	formats float array formatter get result	0.055556
index objects and sorts if possible	index	0.002004
a string raise a typeerror	string	0.037736
that we have a	validate ordered	0.055556
we do need a multi reindex this	core series needs reindex multi axes method level	0.333333
class implementing the plot attribute for	group by plot	0.062500
called	period index array	0.050000
if the date belongs to a leap	is leap	0.125000
construct concatenation plan for given block manager and	get mgr concatenation plan mgr	1.000000
returning a dataframe	data frame	0.005714
a series excluding	series group	0.030303
called via the 'numpy' library	validate take with	0.055556
the with statement	plotting options use key	0.333333
the values & release	io index col take data	0.111111
to a leap year	index is leap year	0.142857
lookup of	core	0.001326
panel objects	panel	0.017857
returning a dataframe	core data frame	0.005917
can	io html frame parser build	0.014706
casting data from some accepted	index assert safe casting cls data	0.047619
necessary	core sparse	0.041667
numeric operations to the	numeric operations cls	0.090909
result set coerce	coerce	0.025641
array object has a	dtypes	0.015873
or strings in each element in the series/index	core str get arr	0.142857
in a future release	categorical reshape new_shape	0.142857
assert	assert	0.714286
is called via the 'numpy' library the	compat numpy validate take with	0.055556
for an ordered multiindex compute the	indexes multi	0.014493
is called via the 'numpy' library the	numpy validate take with convert convert args kwargs	0.055556
from 1-dimensional ndarray only use	value arr	0.023810
new unit if needed otherwise return from the	tzdtype new cls unit tz	0.055556
an index that we can create one	index value	0.142857
return a rolling grouper providing rolling	group by rolling	0.333333
is found in	mixin isin values	0.166667
this is defined as	core indexes multi index view cls	0.047619
multiindex inserting new item at location	core indexes multi index insert loc item	0.333333
initializes holiday object with a	tseries abstract holiday	0.100000
of label values for requested level	core indexes multi index get level values level	0.250000
reset	pandas object reset	1.000000
stderr in a buffer	stderr f	0.125000
called	core indexes period index array wrap	0.050000
packer for options	io msgpack	0.025000
backward to next offset only if	rollback	0.076923
of a series that is datetimelike (e	core indexes maybe to datetimelike data	0.142857
simple cross-tabulation	core reshape crosstab	0.066667
new chainmap	compat chain map	0.032258
try to connect	can connect	0.111111
compute a	core reshape crosstab index	0.066667
to its corresponding json_table	json as json	0.333333
as	array wrap result	0.025000
the block manager from a dataframe of series	to manager sdf columns index	0.052632
of columns	ndframe	0.005025
is an actual dtype that we	interval dtype is dtype cls dtype	0.142857
times to midnight	core indexes datetime	0.011494
don't care for	rolling	0.100000
additional	core	0.001326
quote the string if not	core computation term value tostring encoding	0.200000
homogenize	homogenize	1.000000
ndarray only use this	set value	0.023256
parse time strings to	tools to	0.250000
object that can be used to	html frame	0.014706
return an axes dictionary for the passed axes	core ndframe construct axes dict from axes	0.333333
of value from 1-dimensional ndarray only use this	key value	0.011628
functions	rename axis	0.333333
boolean if values in the object	mixin is	0.083333
check that left and right index are equal	util assert almost equal left right check_exact	0.333333
info axis	info	0.090909
the number	multi index	0.020000
change string like dtypes	core dtypes invalidate string dtypes dtype_set	0.200000
in the context of	inplace	0.027778
to a compat for our index	to index	0.166667
guess	core tools guess	0.500000
highlight the	highlight	0.142857
provide explict type promotion and coercion	core dtypes maybe upcast values fill_value dtype copy	0.166667
true if ndframe	core ndframe	0.005051
of the values to	core block shape values ndim	0.050000
latex representation for a particular dataframe	data frame repr latex	0.333333
convert string-like and string-like array to convert object	convert string to object values	0.142857
try	sparse maybe	0.500000
array interface return my values	core series array result	0.166667
convert to our native	float block to native	1.000000
return a formatter function for a range	get	0.007143
index return new dataframe with labeling information in	data frame reset	0.027778
boolean if values in the object are unique	ops mixin is unique	1.000000
must already exist and be	hdfstore append key value format	0.016667
operations	operations	1.000000
construct an intervalindex from a	core indexes interval index from arrays	0.166667
draw histogram	plotting hist frame data column	0.200000
plural 'names'	names name names deep	0.125000
common ops mixin to support a	ops mixin	0.066667
masker	masker	1.000000
it was a pathlib path	io stringify path filepath_or_buffer	0.142857
used to	io html	0.012987
fixed frequency timedelta index with day as	indexes timedelta range start end	0.083333
list of normalized locales	valid locales locales	0.200000
exist and be table	value format	0.016667
common	common ax data	1.000000
of	values	0.008547
step	step	1.000000
that we have a fully reindex-output to	core data frame group by reindex output result	0.045455
set the _typ here	core series set axis axis labels fastpath	0.200000
the op string	op generate	0.066667
to	io to	0.200000
the union of two	indexes multi index union other	0.066667
with times to midnight length is	indexes	0.004651
negative indicies translate to postive here	core maybe convert indices indices n	0.166667
object that	frame parser build	0.014706
via the 'numpy' library the	take with convert convert	0.055556
a feather-format object from the	read feather	0.083333
of nanoseconds (>= 0 and less than	core indexes timedelta index nanoseconds	0.066667
time part of the	index time	0.111111
fast lookup	index set value arr	0.023810
feather-format object from the file path	feather path	0.333333
of unique elements of arr1 and arr2 are	arr1 arr2	0.066667
concatenation of an datetimelike array of	core dtypes concat datetime	0.125000
whether i am an indexed column	index col is indexed	0.200000
statistical measure using supplied function	apply func name window center	0.250000
a dataframe the levels in the	data values	0.062500
compute boolean array of whether each index value	index ops	0.033333
dataframe	data columns	0.250000
sets the view limits to the nearest multiples	date locator autoscale	0.055556
compute a simple	reshape crosstab index columns values	0.066667
an ndarray copy if specified coerce to	dtype copy	0.032258
determines if	equals	0.444444
create a new multiindex from	indexes multi	0.014493
expanding count of number of non-nan	stats expanding count	0.200000
draw histogram of the dataframe's	hist frame data column by	0.200000
reindex from a non-unique which categoricalindex's are almost	indexes categorical index reindex non unique target	1.000000
provides a	datetime index resampler	0.066667
simple cross-tabulation	crosstab index	0.066667
change string like dtypes to object	invalidate string dtypes dtype_set	0.200000
key (dataframe column panel slice etc	key default	1.000000
returns numpy array of python datetime	indexes datetime	0.011494
detect terminal	util get terminal	1.000000
stripping all of the _apply kwargs	window center	0.076923
read csv	data frame from csv cls path header	0.066667
on multiindex	core indexes multi	0.014493
in file	hdfstore append key	0.016667
array interface return my values	index array dtype	0.125000
reshape long-format data to wide generalized inverse of	core reshape lreshape data	0.500000
the frame	frame	0.009091
return a fixed frequency datetime index with	indexes period range start end periods freq	0.083333
table as a dataframe the	table data values index columns	0.200000
if we have bytes decode them	core computation ensure decoded s	0.166667
returns the float values converted into	float array formatter	0.055556
a valid ordered parameter if	core categorical validate ordered cls ordered	0.058824
representing the totally ordered cartesian product of all	labels shape sort xnull	0.066667
to parse datetime string	core tools parse time string	0.250000
convert to our native types format slicing	core float block to native types	0.250000
a copy of a series excluding elements	core series group	0.030303
a string cast it to	maybe cast	0.100000
after	indexes period index array wrap	0.050000
a fixed frequency timedelta index with day	core indexes timedelta range start	0.083333
sql and	sql	0.076923
asof merge this is similar	reshape merge asof	0.071429
with the block	create for block	0.333333
gets called after	wrap result	0.068182
index value is found in	core indexes datetime index ops mixin isin	0.083333
levels of both multiindex objects	core indexes multi index equal levels other	0.100000
without null	dropna	0.066667
return the length of a	core length of	0.333333
data to	data groups	0.500000
we have a valid ordered parameter	categorical validate ordered cls ordered	0.058824
read sql database table into	read sql table table_name con schema index_col	0.333333
block with	datetime	0.006711
take a string-like that is object dtype and	convert string array data	0.038462
return an item pair from	map popitem	0.055556
the float values	formats float array formatter get result	0.055556
return a tree-like	html frame	0.014706
applies the put method to its values	series put	0.055556
body	html frame parser parse tbody	1.000000
parameter for general index and	core indexes index validate names	0.066667
data from some accepted dtype	cls data	0.076923
the value inplace return	value	0.005155
in file node must already exist and	append key	0.016667
return the number	indexes multi index	0.013158
union of two index objects and sorts if	index union other	0.037037
fixed frequency timedelta index with	core indexes timedelta range start end	0.083333
null_color for missing values	highlight null null_color	0.125000
only use this	indexes categorical	0.071429
wide panel to	core reshape wide to	1.000000
index and / or columns using input	copy inplace	0.055556
(header new_data) for header rows in multiindex	header name row index_col	0.200000
the gradientfill stop parameter	stop	0.050000
define an builtin function for	builtin func arg	0.200000
create and return	get	0.007143
to table in file node	io hdfstore append key	0.016667
of casting data from	indexes numeric index assert safe casting cls data	0.047619
must already	io hdfstore append key value	0.016667
returns the float values converted into strings using	formats float array formatter	0.055556
update index	index maybe update	1.000000
in the columns under the index	reset index	0.125000
to	value	0.005155
in the series	core series	0.008000
bom	bom	0.750000
called after a	index array wrap result	0.066667
try to cast the array/value to a datetimelike	maybe cast to datetime value	0.500000
summary	summary	1.000000
index value is found in the	core indexes datetime index ops mixin isin	0.083333
fixed frequency datetime index with	indexes bdate range start end periods	0.083333
to coerce a scalar to	index coerce scalar to	0.071429
flattened values of the underlying	index ravel order	0.037037
to parse	parse time	0.125000
returns the float values converted into strings using	io formats float array formatter get	0.055556
if fill_value=nan returns a dense	sparse sparse	0.034483
our index	index	0.002004
at the requested level the	level	0.043478
interval objects	indexes interval	0.062500
if two indices overlap add	core items overlap	0.062500
or columns of dataframe according	axis	0.011364
after regular attribute access try looking up the	ndframe getattr	0.500000
to table in file node must already exist	key value format	0.016667
return a slice of	categorical block slice slicer	0.083333
nanoseconds (>= 0 and less	timedelta index nanoseconds	0.066667
calculate slice bound that corresponds to	slice bound	0.200000
with the block i	block cls i	0.333333
concatenation of an datetimelike array	concat datetime to_concat axis	0.125000
a hack to accelerate unioning a	union many others	0.040000
are index sliceable then return	to index sliceable obj	0.083333
panel objects and will raise	core panel	0.019231
check that the exception raised	assert raises	0.200000
for a particular dataframe invoked by unicode df	series unicode	0.166667
update index attributes e g	indexes timedelta index maybe update attributes	0.200000
need to coerce	core indexes period index coerce	0.125000
expected nrows	io table nrows expected	0.142857
by the indexer fill with the fill_value	indexer allow_fill fill_value	0.250000
true if	block is	0.045455
masked rec array and create the manager	masked rec array to mgr data index columns	0.500000
delegatedclass of a series that is datetimelike	to datetimelike data copy	0.125000
in file node must	value	0.005155
making this object picklable	categorical setstate state	0.333333
by definition have	formats datetime64formatter format strings	0.090909
algos groupsort_indexer implements counting sort and it is	group index sorter group_index ngroups	0.250000
a bool if we have only bool	block is bool	0.166667
check that left and right dataframe are equal	frame equal left right check_dtype	0.333333
at the given quantile a la numpy percentile	series quantile q interpolation	0.250000
of that group - 1	group by cumcount ascending	0.166667
union of two index objects and sorts if	core indexes range index union other	0.083333
(of a possibly different	setitem indexer	0.250000
format	format datetime64	0.250000
parse the raw data into a list	io html frame parser parse raw data rows	0.250000
comparison operations to convert timedelta-like to timedelta64	td index cmp opname nat_result	0.055556
of	range index	0.021739
must already exist and be table	io	0.003012
the array interface return my values	interval index array result	0.125000
try to convert to dense	sparse maybe to dense obj	1.000000
the _upsample kwargs and	apply f	0.166667
lookup of	set value	0.023256
one of the stata date	stata	0.022222
from maps[0] raise keyerror is maps[0]	compat	0.030303
take optional positional and	optional args	0.066667
or boolean mask for requested	method	0.033333
function for series arithmetic operations to	bool method series op name	0.333333
time and	like indices time	0.125000
to a leap	is leap	0.125000
timestamp-keyed dict	core dict compat d	0.142857
1-dimensional ndarray only use	arr key	0.023810
to a	to index other	0.333333
the 'numpy' library	numpy validate take with convert convert args kwargs	0.055556
the reduction type operation if we can	ops mixin reduce op name	0.083333
needs additional handling	wrap	0.019231
of value from 1-dimensional ndarray only	categorical index get value series key	0.100000
symmetric difference of two	symmetric difference other	0.333333
to midnight	core indexes	0.004762
the td elements from a row	html frame parser parse td obj	0.083333
that writer engine supports	writer supported	1.000000
internal	values	0.008547
blocks collect and	axis consolidate transposed	0.062500
on multiindex defaults to	core indexes multi	0.014493
ufunc needs additional	indexes period index array wrap result context	0.041667
wrap comparison operations to convert timedelta-like	core indexes td index cmp opname	0.055556
return	core reshape merge operation get	0.500000
views note this is	is	0.005291
handling	index array wrap result	0.033333
underlying	core indexes datetime index ops mixin	0.029412
in file node must already	hdfstore append key	0.016667
we don't support start stop kwds in sparse	sparse fixed validate read kwargs	1.000000
datetime time the time part of	core indexes datetime index time	0.166667
see if we can set a locale	util can set locale	0.333333
maps[0] raise	map	0.029412
try to connect to	can connect	0.111111
to avoid code duplication	name str_rep fill_zeros	1.000000
apply	apply func	0.054054
value from 1-dimensional ndarray only	indexes categorical index get value series key	0.100000
boolean whether i can attempt conversion to	indexes is convertible to index other	0.333333
read sql database table into a dataframe	io sqldatabase read table table_name index_col coerce_float	0.333333
the object is an iterator	core dtypes is iterator	0.500000
filtered indexer that doesn't have any missing indexers	core convert from missing indexer tuple indexer axes	0.333333
attempt to coerce any object types to	core object block convert	0.083333
boolean mask of index to be returned from	index b	0.041667
try to parse a ndarray like into	io json parser try convert data	0.500000
raise	compat	0.030303
input data_columns and min_itemize and create a	data_columns min_itemsize	0.200000
convert protection_dict to an openpyxl v2 protection object	io openpyxl20writer convert to protection cls protection_dict	0.500000
(attr formatted_value)	indexes datetime index ops mixin format attrs	0.142857
a fixed frequency datetime index with business day	indexes bdate range start end	0.083333
new copy of maps[0] and	copy	0.012821
the (attr formatted_value)	mixin format attrs	0.142857
grouped	grouped	1.000000
number with its hexadecimal representation used to tag	core computation replacer x	0.125000
meta	meta	1.000000
append to table in file	append key value format append	0.125000
datetimelike methods (as we	datetimelike methods cls	0.066667
sub-classes	resampler gotitem key ndim subset	0.333333
bind a	compat bind	0.500000
comparison operations to convert datetime-like to datetime64	indexes period index cmp opname nat_result	0.066667
float dtype if possible	float	0.024390
returns the float values converted into	formats float	0.055556
of value from 1-dimensional ndarray only	core indexes categorical index get value series key	0.100000
alert a user about a malformed row	io python parser alert malformed	0.500000
we have a float key	key	0.005051
if the object is dict-like	core dtypes is dict like obj	0.333333
my plane axes indexes these are already	plane axes	1.000000
the block manager from a dataframe	core sparse to manager sdf columns index	0.052632
hour minute second millisecond or microsecond	datetime index ops mixin resolution	0.125000
a fixed frequency datetime	bdate range start end periods	0.111111
generates prop value pairs from declarations	io formats cssresolver parse declarations_str	1.000000
to the new type	dtype copy errors values	0.250000
the 'info axis' see indexing for	core ndframe keys	0.083333
object that can be used to iterate over	io html frame parser	0.012195
result parameters	result mask	0.500000
is a term	scope_level	0.083333
exist and be	value	0.005155
a resample of a	resampler	0.053571
string in the series/index by indicated number	core str	0.011364
return the join	merge get join	1.000000
for each level	multi index	0.020000
determine if each string matches	str match arr	0.166667
a	frame parser	0.012500
to iterate over the	io html	0.012987
flattened values of the underlying data see	index ravel order	0.037037
be	io hdfstore append key value format	0.016667
reduction type operation if	core index ops mixin reduce op name	0.083333
creating a subclass of styler with	io formats styler	0.021277
return label for last non-na/null value	data frame last valid index	0.250000
manager and a axes dict	init mgr mgr axes dtype copy	0.333333
mode s of	series mode	0.083333
convert to our native types format	to native types	0.250000
dispatch to apply we are stripping all	by mixin apply func name	0.050000
get all the	util get	0.333333
perform the reduction type operation if	ops mixin reduce op name	0.083333
tree-like object that can	frame parser	0.012500
freq	freq	0.129032
string 'r' to a timedelta object	coerce scalar to timedelta type r unit box	0.500000
read csv file (discouraged please use	frame from csv cls path header sep	0.066667
holidays between	holiday calendar holidays	0.166667
check for categorical columns retain categorical information for	io stata writer prepare categoricals data	0.166667
the float values	io formats float array formatter get	0.055556
load a feather-format object	feather	0.050000
custom	from custom	0.500000
return a string representation for this	unicode	0.058824
the series extract groups from the	str extract frame	0.047619
the numpy array interface	core categorical array dtype	0.500000
perform the reduction type operation	core index ops mixin reduce op	0.083333
convert to our native types format slicing	core datetime block to native types slicer na_rep	0.250000
to indexer and return them as a	indexer axis	0.043478
column	data name data	0.250000
a scatter plot from two dataframe columns parameters	plotting scatter plot data x y by	0.125000
get lines 0) there are headers	python parser get	0.166667
style and color based on column	style	0.041667
take items along any axis	block manager take indexer axis verify convert	1.000000
to coerce a scalar	coerce scalar	0.250000
given delimiter string starting at the end of	rsplit	0.031250
from 1-dimensional ndarray only	value arr	0.023810
needs additional handling as	period index array wrap	0.050000
dataframe are equal	util assert frame equal	1.000000
a	frame parser build	0.014706
be used to iterate over	io html frame	0.012987
this is similar	core reshape	0.047619
series extract groups from the first match	str extract frame	0.047619
columns using input	axis mapper axis copy inplace	0.055556
satisfy the boolean criterion specified by	by filter	0.200000
arg is a passed in as	arg errors	0.026316
convert to object if we are a	indexes multi index to safe for reshape	0.333333
ndarray filled with nat which has	nat new box	0.050000
needs additional	index	0.002004
node must already exist and be	hdfstore append key	0.016667
specialized intersection for datetimeindex objects may be	indexes datetime index intersection	0.142857
deprecated use :meth dataframe sort_index	core data frame sortlevel level axis ascending inplace	1.000000
layout for explanation	plotter	0.076923
and / or columns using input function or	axis mapper axis copy inplace	0.055556
setup	core	0.001326
post process for each axes overridden in	plotting mplplot post plot logic ax data	0.333333
the union of two index	index union other	0.037037
specialized intersection for	index intersection other	0.052632
add in categorical	indexes categorical index add	1.000000
return the number of bytes in the underlying	range index nbytes	0.052632
a boolean	indexes is	0.166667
block	core sparse block	0.250000
be	value format	0.016667
try to operate on it	mixin try	0.250000
in file node must already exist and	key value	0.011628
to tag	core computation replacer x	0.125000
and return the block manager from a dataframe	sparse to manager sdf	0.052632
to int64 with null values converted	args values	0.083333
that left and right	left right check_dtype	0.200000
operations to the cls evaluate the doc	numeric operations cls	0.090909
a new multiindex	multi index	0.020000
detect terminal size and return tuple	util get terminal size	0.166667
types format slicing if desired	types slicer	0.200000
used to iterate	parser	0.008000
table in file node must already	io hdfstore append key	0.016667
slice/take blocks	slice take blocks	0.500000
of the series	period	0.016667
return a flattened numpy array	categorical ravel order	0.333333
two datetimeindexes	core indexes datetime index sub datelike dti other	0.333333
holidays between start_date	holidays	0.090909
the number of bytes in the underlying data	multi index nbytes deep	0.052632
by a series	groupby by	0.250000
node must already exist and be table	append key value format	0.016667
v should be inserted in	v	0.026316
assert that we all have the same closed	core indexes interval index append same dtype to_concat	1.000000
minimum value of the object	ops mixin min	0.111111
a series that is datetimelike	datetimelike data copy	0.125000
the :meth pandas dataframe reset_index function	drop name inplace	0.142857
python datetime	datetime index	0.007042
the object to a	core ndframe to	0.040000
method to class	method cls name	0.076923
return the number	core indexes range index	0.021277
the display	display	0.142857
times to midnight length is unaltered	datetime index normalize	0.125000
ftypes (indication of sparse/dense and dtype) in this	ftypes	0.043478
with custombusinessday as the default	cdate range start end periods	0.333333
supplied in args/kwargs	from arguments args kwargs require_all	0.333333
moving function	window func	0.500000
boolean if we need a qualified info display	is memory usage qualified	1.000000
the ftypes (indication of sparse/dense	ndframe ftypes	0.055556
datetime time the	core indexes datetime	0.011494
as_blocks()	blocks	0.071429
cut where we convert passed	cut	0.100000
returns *copy* of	frozen ndarray values	0.250000
can safely be cast to an	val min_val	0.083333
get test result	core computation get test result	0.250000
parse the raw data into a list of	io html frame parser parse raw data rows	0.250000
that can be used to iterate over the	html	0.011765
need to coerce a code to	maybe coerce freq code	0.076923
1-dimensional	value arr	0.023810
require	datetime index simple new cls	0.250000
mode s of the	mode	0.050000
at the given quantile a	core series quantile	0.083333
list representing the totally ordered cartesian product	group index labels shape sort xnull	0.066667
type window_type and size window on the data	window win_type	0.100000
python space	python	0.166667
if two indices overlap add	items overlap	0.062500
try to parse a ndarray like into a	json parser try convert data	0.500000
gets called	indexes index	0.007353
lookup of value from 1-dimensional ndarray	arr key value	0.038462
simple cross-tabulation	core reshape	0.047619
dataframe with the rows/columns switched	sparse sparse data frame transpose	0.333333
of	core indexes index set value	0.023810
fill_tuple	fill_tuple	1.000000
operations to convert datetime-like to datetime64	period index cmp opname nat_result	0.066667
frequency timedelta index with day	core indexes timedelta	0.083333
terms for instances of	terms	0.034483
indexer fill	nd indexer allow_fill	0.050000
needs additional	array	0.013889
label for first non-na/null value	core series first valid index	0.250000
stacked format dataframe into wide 3d panel format	data frame to panel	0.333333
value from 1-dimensional ndarray only use this	period index get value series	0.071429
for	core sparse sparse	0.034483
a dataframe to a sql database	database to sql frame	0.500000
class implementing the plot attribute	group by plot	0.062500
do need a	ndframe needs	0.500000
produce 'pivot' table based	core reshape slow pivot	0.333333
function is called via the 'numpy' library the	validate take with convert convert args kwargs	0.055556
node must	value	0.005155
dict of array-like or dicts parameters	dict cls data orient dtype	0.166667
a copy of this object names dtype	multi index copy names dtype	0.333333
1-dimensional ndarray only use	core indexes index	0.007042
the series/index by indicated number of	core str repeat arr	0.045455
the function to my	func	0.011905
preserve dtype	putmask smart v m n	0.055556
see :class packer for	msgpack packb	0.025641
if we define an builtin function for	core base grouper is builtin func	0.333333
internal compat with selectionmixin	core ndframe obj with exclusions	1.000000
corr	corr	0.625000
result as series or by a series	by axis level	0.045455
a data	validate data	0.500000
lookup	core indexes index	0.007042
each group	core group by	0.194444
2d from panel holding passed axis constant parameters	core panel dropna axis how inplace	0.200000
must already exist and be table	io hdfstore append key value format	0.016667
normalized locales	valid locales locales	0.200000
return index or	core indexes datetime index ops	0.034483
of query in a	index_col coerce_float	0.062500
return an indexer coerced to the codes dtype	core categorical maybe coerce indexer indexer	0.125000
bytes in the	indexes multi index nbytes deep	0.052632
that can be used to iterate over the	io html frame	0.012987
boolean whether this axes needs validation	ndframe indexer should validate	0.166667
we have n indexable columns	columns	0.017857
group_index is	group_index sort	1.000000
nanoseconds (>= 0 and	timedelta index nanoseconds	0.066667
obj_type	obj_type	1.000000
index objects contain	indexes float64index	0.166667
stacked format dataframe	data frame to	0.037037
create a table reflecting the structure of	sqlite table create table setup	0.066667
make a copy of	core indexes multi index copy	0.166667
array to the smallest	categories	0.062500
the correct scope	scope	0.076923
construct an intervalindex from a 1d array	from intervals cls data name copy	0.125000
alias to closest period strings bq->q etc	get period alias offset_str	1.000000
underlying array	ops mixin	0.033333
repeat elements of an series	series	0.006757
sets names on levels warning mutates!	multi index set names names level validate	0.200000
apply we are stripping all of the	core group by mixin apply	0.050000
string-like and string-like array to convert object	convert string to object values	0.142857
have a cacher and are of mixed type	chained assignment possible	0.142857
block2d	block2d	1.000000
all of the data	core data frame	0.005917
to table	io	0.003012
used to	parser build	0.014706
only use this if you	indexes index set value arr key	0.023810
in each level the function returns lengths	io formats get level lengths levels sentinel	0.166667
safe version of putmask that potentially upcasts	dtypes maybe upcast putmask	0.200000
return the length of the index	core indexes index len	0.333333
index of first occurrence of maximum of values	series idxmax axis skipna	1.000000
leap	index is leap	0.125000
gets called after a ufunc needs additional	indexes period index array wrap result context	0.041667
boolean whether i can attempt conversion to a	is convertible to index other	0.333333
calculate datetime	indexes datetime index	0.007634
to an integer	integer name	0.333333
the series extract groups	core str extract frame arr	0.047619
list-like	list like	1.000000
of decimal places	decimals	0.090909
boolean whether this axes needs validation for	core ndframe indexer should validate	0.166667
return resolution str against resolution code	tseries resolution get	0.333333
number	core	0.002653
extension against the	excel writer check extension cls	0.125000
maximum values along an axis	datetime index ops mixin argmax axis	0.250000
optional positional and keyword	optional args	0.066667
indices that would sort the index and	core indexes range index argsort	0.166667
needs additional	indexes period index array	0.050000
generate bin	core generate	0.125000
io	io	0.015060
dataframe the levels in the	data values	0.062500
is defined as a copy with the same	view cls	0.047619
to accelerate unioning a collection of indexes	index union many others	0.040000
1st discrete difference of object	data frame diff periods axis	0.250000
ndframe as	ndframe to	0.043478
from each element in	arr	0.013699
that	categorical	0.009615
frequency timedelta index	indexes timedelta	0.083333
to table in file node must	io hdfstore append key value format	0.016667
new unit if needed otherwise	tzdtype new cls unit tz	0.055556
total duration of each element expressed in seconds	indexes timedelta index total seconds	1.000000
cartesian product of	sort	0.083333
to get lines 0) there are headers	python parser get index name columns	0.166667
to an openpyxl style	openpyxl1writer convert to style cls	0.500000
index	core indexes period	0.032258
node must already exist and	append key	0.016667
series extract groups from the first	str extract	0.035714
the left and	left	0.018519
be used to iterate over the	io html	0.012987
values in the	core	0.002653
elements from the	io html frame parser	0.012195
ufunc needs additional handling as	period index array wrap result context	0.041667
ndarray only use this	indexes index set value arr key	0.023810
return the length of the series	core series len	0.333333
parse specified	io excel file parse	0.125000
wrap	wrap	0.153846
the intersection of two index	indexes range index intersection other	0.083333
this is generally only useful	io hdfstore select column key column	0.142857
block manager from a	sparse to manager sdf	0.052632
the values to be at least 1	core block shape values ndim	0.050000
is a named	is named	1.000000
func	func dropna	1.000000
return a boolean list indicated if we have	indexes multi index have	0.142857
of axis	ndframe set axis axis	1.000000
the length of that group - 1	group by cumcount ascending	0.166667
if holiday falls on sunday use day thereafter	sunday to	0.200000
compute variance	by var ddof	0.166667
and return the block manager from	manager sdf columns	0.052632
a concise listing of available options	core pp options list keys width _print	0.111111
as	core indexes	0.009524
save	save	1.000000
be used	build	0.013514
and drop from frame raise keyerror	ndframe pop	0.500000
1st discrete difference of object parameters	core data frame diff periods axis	0.250000
concatenation of an datetimelike array of	dtypes concat datetime to_concat	0.125000
the quantiles of the	core block quantile qs interpolation axis mgr	0.250000
if we define an builtin function for this	mixin is builtin func	0.333333
to read from a url file or	read obj	0.058824
fast lookup of	core indexes index set value arr key	0.023810
compute count of group excluding missing	data frame group by count	0.500000
function to my values return	func	0.011905
that can be used to	build	0.013514
totally ordered cartesian product	group index labels shape sort xnull	0.066667
indices where elements of v	v	0.026316
after	indexes index array wrap	0.100000
return an indexer for a target intervalindex with	indexes interval index get reindexer target	1.000000
the	core indexes range index	0.042553
perform the reduction type operation if we	ops mixin reduce op name axis skipna	0.083333
we have a null slice	core is null slice obj	1.000000
the 'numpy' library	validate take with convert	0.055556
function designed to	apply func	0.027027
construct and returns axes if	ndframe construct axes	0.333333
comparable timezone both	index timezone	0.200000
need to coerce	coerce	0.051282
specified frequency	asfreq freq method	0.250000
need to coerce	coerce freq	0.125000
read csv file (discouraged please use :func	series from csv	0.066667
and index parameters	index	0.002004
in place using non-na values from passed series	series update other	0.500000
up	io formats styler	0.021277
the blocks collect	reduction f axis consolidate transposed	0.062500
a singular 'name' parameter for general index	indexes index validate	0.066667
csv	series from csv cls path sep	0.066667
value occupying requested label default to specified missing	sparse sparse series get label default	0.083333
create a table	table	0.010870
if 'series argmin' is	skipna skipna	0.100000
the number of bytes in	indexes multi index nbytes	0.052632
if we have mixed levels	core indexes multi index have mixed levels	0.200000
select values at particular time of day e	core ndframe at time time	0.066667
from a 1d array of interval objects parameters	core indexes interval index from intervals	0.333333
the node	io	0.003012
integer or float that can safely be cast	val min_val	0.083333
are index sliceable then return my	core convert to index sliceable obj key	0.083333
of datetimetzdtype	datetime tzdtype	0.333333
parameter	categorical	0.009615
series to the	series	0.006757
x in y if possible	core computation in x y	0.047619
already exist and be table	append key value format	0.016667
necessary for making this object picklable	multi index setstate state	0.333333
sort multiindex	indexes multi index	0.013158
series extract groups from the first	core str extract	0.035714
a "pivot" table) based on column values	frame pivot index columns values	0.200000
midnight length is unaltered	normalize	0.076923
to the underlying	ops mixin	0.033333
a tz-aware type return	io get tz tz	0.066667
the numeric add/sub	indexes index add numeric	0.250000
construct this type from	dtype construct from string	0.166667
stata binary dta files from array-like objects parameters	frame to stata fname convert_dates write_index encoding	0.333333
index names to 'index'	names	0.038462
iterables you should probably use pprint_thing()	pprint seq seq _nest_lvl max_seq_items	0.333333
the bool of a	bool	0.043478
the maximum by	max	0.090909
rearrange index levels using input order may	core series reorder levels order	0.333333
type that can be coerced to periods	indexes period index simple new cls	0.142857
from some accepted dtype to	cls	0.016949
blocks collect and create a	f axis consolidate transposed	0.062500
deprecate	util deprecate	0.166667
append to table in file	value format append	0.125000
used to iterate over	io html frame parser	0.012195
create index with target's values (move/add/delete values	indexes multi index	0.013158
capture stderr	util capture stderr f	0.055556
reshape long-format data to wide generalized inverse	core reshape lreshape data groups	0.500000
create a scalarblock	core block make block scalar values	0.333333
month	month end	0.200000
usecols	usecols	1.000000
needs	core	0.001326
series containing only true/non-nan values	core remove na series	0.166667
elements of v should be inserted	frozen ndarray searchsorted v	0.033333
object that	html frame parser build	0.014706
to parse datetime	tools parse time	0.125000
levels of both multiindex objects are the same	indexes multi index equal levels other	0.100000
wrapper function for series arithmetic operations to	core arith method series op name	0.333333
wrap op result	sparse wrap result	1.000000
called after a ufunc needs additional	context	0.023810
argsort argsorts	argsort	0.038462
sets index names to	names data	0.083333
get my plane axes indexes these are already	core panel get plane axes index	1.000000
fixed frequency datetime	range start end periods	0.066667
convert a	core convert	0.500000
used to iterate over	io html	0.012987
x in y if possible	computation in x y	0.047619
return a string representation for this	core indexes frozen ndarray unicode	0.083333
sql statement that create	sqlite table create	0.066667
datetime index with	indexes bdate	0.050000
subclass of styler with a custom template	styler from custom template	0.142857
for more this is index for	ndframe	0.005025
a numpy dtype	dtype dtype	0.100000
merge this is similar to a	core reshape merge	0.166667
filled with nat which has	ops mixin nat new	0.050000
the function in blockmanager	core block manager	0.022727
interpolate values	resampler interpolate method axis	0.166667
falls on sunday use day thereafter monday instead	sunday to monday	0.333333
series to a	core series	0.008000
string a la re split in	split arr pat	0.200000
to iterate over	io	0.003012
numpy / pandas type to	table type	0.055556
label is not contained	label	0.028571
deprecated use :meth to_timestamp instead	period index to datetime dayfirst	1.000000
of rows if n	n	0.045455
the minimum value of the	index ops mixin min	0.125000
arg is a passed in as an object	arg errors	0.026316
risk of	subarr	0.050000
repr of this object potentially casting to object	index to embed keep_tz	0.333333
for a deprecated option if key is deprecated	core get deprecated option key	0.333333
value from 1-dimensional ndarray	value arr key value	0.038462
find all occurrences	findall arr pat	0.250000
datetimelike properties of the	period properties	0.052632
sorted copy of index	datetime index ops mixin sort values return_indexer ascending	0.500000
return an item pair from maps[0]	popitem	0.043478
my values but densify first	non consolidatable mix in	0.083333
this	core indexes period index	0.034483
construct an intervalindex from a 1d array of	index from intervals cls	0.125000
the 'numpy' library the	validate take with convert	0.055556
handles preprocessing for cut	reshape preprocess for cut x	0.200000
timedelta index with day as the	core indexes timedelta	0.083333
create a new multiindex	indexes multi	0.014493
and return the block manager from a	to manager sdf	0.052632
is index for	ndframe	0.005025
form the union of two multiindex objects sorting	core indexes multi index union other	0.066667
csv file (discouraged please use :func	csv cls path sep	0.066667
initializes or resets _id attribute with new	indexes index reset identity	0.250000
the series/index ends with passed pattern	core str endswith arr	0.333333
of two or more factors by default	rownames	0.125000
numpy / pandas type to its	type	0.024390
return a slice	core block slice slicer	0.083333
index objects contain the	datetime index ops	0.034483
of the data	core data frame dropna	0.083333
business	business	0.900000
an item pair from maps[0] raise keyerror is	map popitem	0.055556
return a version to operate on as the	core block try operate values	0.125000
'info axis' see indexing for more this	keys	0.032258
the length of this	len	0.071429
styles to html	styler	0.022222
of bytes in the underlying	indexes multi index nbytes deep	0.052632
this is called upon unpickling rather than	new datetime index cls d	0.111111
of value from 1-dimensional ndarray only use	indexes period index get value series	0.071429
reindex from a non-unique which categoricalindex's are almost	core indexes categorical index reindex non unique target	1.000000
valid column name for generation (e g	computation bin op	0.055556
for	core bool method	0.333333
by the indexer fill with	indexer	0.009174
series dropna if fill_value=nan returns a dense series	sparse series dropna	1.000000
multiindex defaults	core indexes multi index	0.013158
version	version	1.000000
create a new multiindex	multi index	0.020000
array of unicode strings	randu array	1.000000
rewrite the assignment operator for pytables expressions	rewrite	0.076923
the timedelta64[ns]	timedelta64 ns	0.333333
and	hdfstore	0.014925
lookup of value from 1-dimensional ndarray	indexes index set value arr key value	0.038462
iterator over column name series pairs	data frame iteritems	1.000000
scipy sparse	sparse sparse data	0.076923
return the mode s of the dataset	mode	0.050000
datetimeindex with times to midnight length	core indexes datetime	0.011494
for each element in the	map indices py arr	0.090909
node must already exist and	io hdfstore append key value	0.016667
return a tree-like object	html	0.011765
type	placement fastpath	1.000000
iterate over the blocks collect	f axis consolidate transposed	0.062500
the group	group by	0.016129
in xport	io sas parse	0.066667
for :meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace limit downcast	0.333333
the :meth pandas dataframe reset_index function see	core series reset index level drop name inplace	0.142857
dtype object or a numpy dtype	dtype dtype	0.100000
value occupying requested label default to specified	core sparse sparse series get label default	0.083333
arg is	arg	0.037736
string representing a frequency guess generated by infer_freq	index ops mixin inferred freq	0.250000
parse the raw data into a list	html frame parser parse raw data	0.250000
of multiple iterables parameters	cls iterables sortorder names	0.500000
label if label	value label	0.066667
a tree-like object that can be used to	io html frame parser	0.012195
sets index names	set default names	0.083333
data	table validate data columns	0.500000
frame should be truncated if so slices	formats data frame formatter chk truncate	0.500000
we do need a multi reindex this is	series needs reindex multi axes method	0.333333
of x not in y if	core computation not in x y	0.066667
additional handling	period index array	0.050000
return the data pointer of the underlying data	ops mixin data	0.333333
function for series arithmetic operations to	comp method series op name	0.333333
label if label is not	value label	0.066667
to get instances of all the classes	all	0.043478
result and reset test_results	result	0.016393
create and return a basegrouper which is an	core get	0.038462
infer this column from the table	index col infer handler	0.200000
based on type and coerce into matrices	core arrays to mgr arrays arr_names index	0.250000
but using the interpolate machinery	interpolate with fill method axis inplace limit	0.200000
return a boolean if we need	is	0.005291
create and return a	core get	0.038462
table in file node must	append	0.012987
comparison operations to convert timedelta-like to	core indexes td index cmp	0.055556
from a	io html frame parser parse	0.250000
fast lookup	core	0.001326
our native types format slicing if desired	native types slicer na_rep float_format decimal	0.200000
return a list of the axis indicies	core panel extract axes	0.142857
groups in each string in the series	core str extract	0.035714
the underlying data	datetime index ops mixin	0.029412
slice locations for input labels	index slice locs start end step kind	0.083333
new dataframe with labeling information in the	data frame	0.005714
checks that path's extension against	excel writer check extension cls	0.125000
datetime date objects	datetime	0.006711
ordered multiindex compute	indexes multi	0.014493
lookup of value from 1-dimensional ndarray	core indexes period index get value series	0.071429
return a tree-like object that can be	io	0.003012
using the interpolate machinery	interpolate with fill method	0.200000
if we if the passed type is	core dtypes period dtype is	0.125000
the minimum value	categorical min numeric_only	0.500000
bytes see	io	0.003012
and return	core get	0.038462
unit if	cls unit	0.125000
packed object return	packed object_hook list_hook	0.200000
analogous to the :meth pandas dataframe reset_index function	drop name inplace	0.142857
be table	key	0.005051
nice str repr	window unicode	0.071429
a fixed frequency	range start end freq periods	0.333333
between	between	0.217391
value	sparse series get value	1.000000
convert to our native	core float block to native	1.000000
key is	key	0.005051
by indicated number of times	repeats	0.090909
data for this	data col	0.333333
ftypes (indication of sparse/dense and dtype) in	ftypes	0.043478
the number	index	0.004008
exist and be	io hdfstore append	0.016667
a html representation for a particular dataframe	core data frame repr html	0.333333
and other to int64	other	0.013514
the axis indicies	core panel extract axes data axes	0.142857
convert to object if we are	multi index to safe for reshape	0.333333
the underlying array which by-definition can	datetime index ops mixin	0.029412
read csv	from csv cls path header sep	0.066667
indicating	core ndframe	0.005051
align a	computation align	0.250000
is an internal non-public method*	index create from codes codes categories ordered name	0.333333
gets called	core series	0.008000
index	indexes	0.023256
memory usage of	range index memory usage deep	0.200000
create/cache the	io table	0.062500
view limits to the nearest	plotting time series date locator autoscale	0.055556
memory usage of my	index ops mixin memory usage deep	0.200000
1-dimensional ndarray only use this if	indexes	0.004651
that an positional	indexer has valid positional setitem	0.250000
to convert timedelta-like	core indexes td index cmp opname nat_result	0.055556
class for grouping and aggregating relational	group by	0.016129
to dataframe apply	core sparse sparse data frame apply func	0.166667
values and other to	other	0.013514
a latex tabular/longtable environment output	latex column_format longtable encoding multicolumn	0.500000
radviz - a multivariate	plotting radviz	0.200000
passed type is an actual dtype that	dtypes interval dtype is dtype cls dtype	0.142857
gets the ordered attribute	categorical get ordered	0.333333
manager and a axes dict	mgr mgr axes dtype copy	0.333333
comparison between 8 aware arrays	index ops mixin evaluate compare other op	0.250000
version	block	0.008197
object	frame parser	0.012500
return an indexer	index get	0.040000
subtraction of two datetimeindexes	sub datelike dti other	0.333333
block manager from a dataframe	sparse to manager sdf	0.052632
convert to our native types format	float block to native types slicer na_rep float_format	0.250000
the passed type is an	core dtypes interval dtype is	0.066667
fixed frequency datetime index with custombusinessday as	indexes cdate range start	0.083333
return an array repr of this	index	0.002004
o and return packed bytes	o	0.043478
read csv file (discouraged please	series from csv cls path sep	0.066667
best locator based on	plotting pandas auto date locator get locator	0.062500
categorical adjusted for	categorical index codes for	0.333333
type window_type and size window on the	rolling window arg window win_type min_periods	0.100000
the union of two index objects and	core indexes index union other	0.083333
potentially wrap any results	core resampler wrap result result	0.500000
table in file node must already exist	hdfstore	0.014925
dtype	result dtype	0.142857
infer better dtype for object columns parameters	core ndframe convert datetime numeric timedelta coerce	0.071429
node must already	hdfstore append key value format	0.016667
concatenate to_concat which has the same class	index append same dtype to_concat name	0.500000
series or by	groupby by axis	0.045455
writer	io excel writer	1.000000
to	core indexes datetime	0.011494
sparsearray from the	core sparse sparse data	0.076923
non-na values from passed panel or object coercible	other join overwrite filter_func	0.076923
don't allow a multi reindex on panel or	panel needs reindex multi	0.500000
coerce a scalar	indexes period index coerce scalar	0.250000
a feather-format object	io read feather	0.083333
to parse datetime string	tools parse time string	0.250000
return the size of the dtype of the	itemsize	0.027027
create an	create indexer	0.500000
array interface return	indexes categorical index array dtype	0.125000
gets called after a ufunc needs additional handling	array wrap result context	0.029412
the 'numpy' library	validate take with convert convert args	0.055556
regular expression pat	arr pat flags	0.062500
packed	io msgpack packb	0.025641
don't care for groupby	core rolling groupby	1.000000
a decorator	args decorator	0.111111
true if	dtypes is	0.030303
values between particular times	datetime index indexer between	0.125000
be used to iterate over the dom	html frame parser build doc	0.125000
where : array of timestamps	indexes period index asof locs where mask	1.000000
frequency datetime index with business day as the	core indexes bdate	0.050000
return result as series or by a series	by axis level	0.045455
to construct this type from a	interval dtype construct from string	0.166667
has a float dtype if	float arr	0.083333
values and a date_format return a string	from values values date_format	0.250000
rewrite the assignment operator for pytables expressions that	computation rewrite assign	0.125000
guess the datetime format of a given datetime	guess datetime format dt_str dayfirst dt_str_parse dt_str_split	1.000000
of	datetime	0.006711
file node	io hdfstore append	0.016667
pick the best locator based	pandas auto date locator get locator	0.062500
defined as a	indexes multi index view cls	0.047619
data to	data groups dropna label	0.500000
of	value arr	0.023810
must already exist	io hdfstore append key	0.016667
select values at	ndframe at	0.333333
bind a method to class python 2 and	bind method cls name	0.200000
or object coercible	join overwrite filter_func	0.076923
max_cols	max_cols	1.000000
the object is list-like	core dtypes is list like	0.333333
after	indexes period index	0.035714
handling	period index array wrap result	0.050000
alter index and / or columns using	inplace	0.027778
try to preserve dtype if	core putmask smart v m n	0.055556
bb	new_mgr_locs fill_tuple	1.000000
histogram of the	hist	0.100000
convert to our native types	core categorical block to native types	0.250000
dict-like	dict like	1.000000
to iterate over the	frame parser build	0.014706
that time and panels are conformable	time panels	0.250000
contents	contents	1.000000
new unit if	new cls unit	0.055556
datetime date objects (namely	indexes datetime	0.011494
indexer	nd indexer axis	0.043478
rolling	core rolling	0.250000
compute a simple cross-tabulation	crosstab index	0.066667
wrap comparison operations to convert timedelta-like	indexes td index	0.055556
& release the memory	io data col take	0.333333
a string representation for	frozen ndarray unicode	0.083333
return vector of label values for requested level	indexes multi index get level values level	0.250000
string representation for	index unicode	0.083333
apply	by mixin apply func	0.050000
extension against the	check extension cls	0.125000
string-like that is object dtype and coerce to	io convert string array data	0.038462
series that is datetimelike (e	maybe to datetimelike	0.142857
the codes by the indexer fill	indexer	0.009174
with a set of subplots already made	subplots naxes sharex sharey squeeze	0.166667
lookup of value from 1-dimensional ndarray only	indexes datetime index get value	0.071429
attributes e	attributes	0.115385
frequency datetime index with business day as	indexes bdate	0.050000
background null_color for missing	null null_color	0.125000
'series argmin' is called via the 'numpy' library	compat numpy validate argmin with skipna skipna args	1.000000
to construct this type from a	dtypes interval dtype construct from	0.166667
string in the series/index by indicated number	core str repeat	0.045455
strings to time	core tools to time	0.125000
each subject string in the series extract groups	extract frame	0.047619
dataframe	data x y	0.333333
whether the	io validate	0.031250
offsets index to end of period frequency	end apply index i freq	1.000000
series dropna if fill_value=nan returns a dense series	sparse sparse series dropna axis	1.000000
left and right dataframe are equal	assert frame equal left right check_dtype check_index_type	0.333333
used to iterate over the	io html frame parser build	0.014706
already	append	0.012987
add default implementation of ops	add ops op_classes	0.333333
explanation	plotter	0.076923
a python source	source	0.111111
if	index set value arr	0.023810
force all buffered modifications to be	hdfstore flush fsync	0.200000
if dtype	dtype	0.010989
given a	get	0.007143
decorator to add	add	0.035714
ndarray	data index	0.076923
to the block_manager axis	core ndframe get block manager axis axis	0.166667
the index and its underlying	indexes range index	0.021277
to datetime http //www stata com/help cgi?datetime	stata elapsed date to datetime vec dates fmt	0.500000
as a frame table	appendable multi series table	0.200000
size and return tuple	size	0.041667
/ pandas type	table type	0.055556
float is formatted in	io formats set eng float	0.200000
forward fill	resampler pad limit	1.000000
locator based on a	locator	0.047619
wrap index _get_unique_index to handle nat	core indexes period index get unique index dropna	0.250000
infer types of values	parser base infer types values	1.000000
shift without copying data the shifted data will	ndframe slice shift periods axis	0.083333
round the fractional part of the	round frac x precision	0.200000
csv file	series from csv cls	0.066667
blocks collect and create	apply f axes filter do_integrity_check	0.083333
i am never a view	view	0.043478
of index to	index b	0.041667
falls on saturday use following monday instead	next monday dt	0.250000
underlying data	indexes range index	0.021277
convert to our native types format	block to native types slicer na_rep	0.250000
i want to construct this block as an	core categorical block array	0.333333
string a la re split in the series/index	core str split arr pat	0.166667
of	indexes index set value	0.023810
for panel objects and will raise an	panel	0.017857
bind a method to	compat bind method cls name func	0.200000
cross-tabulation	index columns values	0.037037
exist and	io hdfstore	0.014493
return a summarized representation	datetime index ops mixin summary name	0.333333
pick the best locator based on	get locator	0.062500
copy if specified	index dtype copy	0.043478
from 1-dimensional ndarray	indexes index set value	0.023810
duplicate each string in the series/index by indicated	core str repeat arr	0.045455
frequency timedelta index with day as the default	indexes timedelta	0.083333
ndarray only use this	indexes index set value	0.023810
determines if two index objects contain the	indexes range index equals other	0.200000
node with the	get node	0.166667
we are going to write	write	0.017857
dispatch to apply we are stripping all	core group by mixin apply func name	0.050000
concatenation of an datetimelike array of arrays	core dtypes concat datetime	0.125000
ensure that an array object has a float	dtypes ensure float arr	1.000000
arr1 and arr2 are equivalent	util equal contents arr1 arr2	0.066667
reset the display options for	util reset display options	0.200000
table in file node must	hdfstore append key value format	0.016667
perform the reduction type operation	ops mixin reduce op	0.083333
data	range	0.047619
the repr should show the info view	core data frame info repr	0.333333
from 1-dimensional ndarray only use this if you	index set	0.022727
pandas type to	table type x	0.055556
after a	indexes index array wrap result	0.100000
this	interval	0.029412
prior to	array prepare result	0.111111
datetimelike-keyed dicts to timestamp-keyed	compat d	0.125000
use when concatenating specified units	na join_units	0.250000
openpyxl v2 color	io openpyxl20writer	0.035714
format	format index encoding	0.500000
csv file	from csv cls	0.066667
initializes or resets _id attribute	core indexes index reset identity	0.250000
of whether each index	core indexes datetime index	0.007634
intersection of two index objects sortedness of	indexes range index intersection other	0.083333
type is an	is	0.005291
called via the 'numpy' library	validate take with convert convert args	0.055556
this if you	core indexes index set	0.023810
constructs ndframe from group with provided name parameters	get group name obj	1.000000
a ufunc needs	wrap result context	0.029412
in the ndframe	core ndframe	0.005051
first non-na/null value	data frame first valid	0.250000
function is called via the 'numpy' library	take with convert convert args kwargs	0.055556
indexer	indexer has	1.000000
a spreadsheet-style pivot table as a dataframe	core reshape pivot table data values index columns	0.166667
mixin to support a unified inteface /	mixin	0.037037
the fractional part of the given	frac x precision	0.100000
find all occurrences of pattern	findall arr	0.250000
after regular attribute access try looking up	getattr	0.142857
iterate	parser build	0.014706
panel or object coercible to	join overwrite filter_func	0.076923
attempt to construct this type from a	core dtypes interval dtype construct from string	0.166667
unit if needed otherwise return	cls unit tz	0.125000
flattened values of the	ravel order	0.037037
counts of	counts f	0.041667
styles to	styler	0.022222
get lines 0) there are headers on	python parser get index name	0.166667
dispatch to apply we are	group by mixin apply func name	0.050000
defined as a copy with	view cls	0.047619
singular 'name' parameter for general index	indexes index validate	0.066667
an array of deterministic integers	hash array vals encoding hash_key categorize	0.250000
returns an index containing unique values	core indexes index get unique index dropna	0.500000
return result block s from the result	core block where other cond align raise_on_error	0.066667
date formats to	convert datetime to	0.166667
determine if each	str match arr	0.166667
a parameter value	value	0.005155
fast lookup of value from 1-dimensional ndarray only	indexes period index get value series key	0.071429
number of bytes in the underlying	nbytes deep	0.052632
accelerate unioning a	core indexes datetime index union many others	0.040000
a axes	axes dtype copy	0.500000
guarantee the shape of	shape	0.047619
can be used	frame	0.009091
already exist and	hdfstore append key	0.016667
write text representation of object to the	core ndframe to	0.040000
return a boolean if we are a	is	0.005291
the unicode normal form for	string methods normalize form	0.066667
x in y	in x y	0.047619
returns a curve with holidays between start_date and	holiday calendar holidays start end return_name	0.066667
passed type is an actual dtype that we	interval dtype is dtype cls dtype	0.142857
if we define an builtin function	base grouper is builtin func	0.333333
on an old version?	io fixed validate version where	0.142857
background	formats styler background	0.125000
the block manager from a dataframe	to manager sdf columns index	0.052632
of whether each index value is found in	core indexes datetime index ops mixin isin values	0.083333
ndarray only use this if you	indexes index	0.007353
a list of normalized locales that do	util valid locales locales	0.050000
(attr formatted_value)	index format attrs	0.142857
doesn't like to	v string like	0.111111
validate this column return the compared against	col validate col	0.200000
value occupying requested label default to	core sparse sparse series get label default	0.083333
i am	categorical block	0.100000
a list of columns as lists of	str columns	0.083333
index	core indexes datetime index ops mixin	0.058824
histogram of	hist	0.100000
boolean series/array indicating whether each string in the	core	0.001326
ftypes (indication	ndframe ftypes	0.055556
of the values to be at least	block shape values ndim	0.050000
construct this type	dtypes interval dtype construct	0.333333
if the object is a sequence of objects	core dtypes is sequence	0.166667
check a sequence of terms for	terms	0.034483
tree-like object that	io html frame parser build	0.014706
object that can be used to	parser	0.008000
statement that create	table create	0.043478
parallel	util test parallel	0.142857
read sql query or database table into a	read sql sql con index_col coerce_float	0.166667
retrieve our attributes	io generic table get attrs	1.000000
sanitize	sanitize	1.000000
same as values	sparse sparse series get values	1.000000
wrapper function for series arithmetic operations to	core sparse arith method op name	0.333333
fast version of transform only applicable to	series group by transform fast	0.500000
a	validate	0.027778
construct this type from a string raise a	dtypes interval dtype construct from string cls string	0.166667
'numpy' library the	numpy validate take with convert convert args kwargs	0.055556
pack object o and return packed bytes see	msgpack packb o	0.055556
returns the float values	float array formatter get result	0.055556
have a float key and	key	0.005051
determine	core str match arr pat	0.166667
create/cache the indexables if they don't exist	table indexables	0.333333
categorical	categorical	0.269231
on 3 columns of this	columns values	0.037037
a	values	0.008547
used to iterate over the	build	0.013514
csv file (discouraged please use :func pandas	core series from csv cls	0.066667
string-like that is object dtype and coerce to	io convert string array	0.038462
elements of arr1 and arr2 are equivalent	util equal contents arr1 arr2	0.066667
determine	str match arr pat case	0.166667
read csv file (discouraged please use	csv cls path header	0.066667
and 'kwargs'	groupby func name args kwargs	0.166667
frequency	freq axis	0.250000
tree-like object that	frame	0.009091
the store	io	0.003012
a new datetimeindex	indexes datetime index	0.007634
of a	period index resampler	0.062500
retrieves the option metadata if key is	key	0.005051
manager with	core block manager	0.022727
'numpy' library	take with convert convert args kwargs	0.055556
gets the categories	categorical get categories	0.333333
this error	error	0.028571
the operations to the cls evaluate	aggregate operations cls use_numexpr	0.142857
as	wrap	0.019231
return the number of bytes in the	multi index nbytes deep	0.052632
fast path for	block manager fast	0.250000
and 'kwargs' should be	groupby func name args kwargs	0.166667
idx_col	idx_col	1.000000
nat which has the same length	ops mixin nat new	0.050000
csv file	data frame from csv cls path header	0.066667
float is formatted	set eng float	0.200000
figure with a set of subplots already made	subplots naxes sharex sharey squeeze	0.166667
used to iterate over	html frame parser build	0.014706
node must already exist	io hdfstore append key	0.016667
we do need a multi reindex	core ndframe needs reindex multi axes	0.333333
ndarray raises on scalar data converts other	ndarray cls data	0.333333
values between particular times	core ndframe between	0.100000
categorical by category value returning	ascending na_position	0.071429
series/index to be formatted in paragraphs with length	str	0.017544
and / or columns using input	mapper axis copy inplace	0.055556
underlying data	index	0.004008
style_dict to an xlsxwriter format	xlsx writer convert to style style_dict	0.166667
utility frequency conversion method for series/dataframe	core asfreq obj freq method how	0.500000
codes by the indexer fill with the	indexer allow_fill	0.050000
the flattened values of the underlying	core indexes index ravel order	0.037037
highlight	highlight	0.857143
validate that an positional indexer cannot	ndframe indexer has valid positional setitem indexer indexer	0.052632
and 'kwargs' should	groupby func name args kwargs	0.166667
property property	ndframe	0.005025
long-format data to wide generalized inverse	lreshape data	0.333333
return packed bytes see :class packer for	io msgpack	0.025000
option metadata if key is a registered option	core get registered option key	0.333333
generate nd initialization axes are passed	panel init data data copy dtype	1.000000
the values to be at	block shape values	0.050000
of ndframe as opposed to	core ndframe	0.005051
apply function and combine results together	group by apply func	0.333333
to its values attribute	series	0.006757
fixed frequency timedelta index with day	indexes timedelta range start	0.083333
applies	core series	0.008000
of	index columns	0.028571
by indicated number of times	arr repeats	0.200000
the mode s of	core series mode	0.083333
to timestamp-keyed dict	dict compat d	0.142857
dtype	dtype result dtype	0.142857
roll provided date forward to	date	0.040000
the :meth pandas dataframe reset_index function	core series reset index level drop name inplace	0.142857
only applicable to	series group by	0.142857
produce 'pivot' table based	reshape slow pivot	0.333333
'args' and 'kwargs' should	compat numpy validate resampler func method args kwargs	0.166667
the put method to its values attribute if	put	0.043478
propagate metadata from other	core ndframe finalize other	0.333333
the minimum value of the index	index	0.002004
read csv file (discouraged	from csv cls path sep	0.066667
series/index by the given delimiter string starting at	str rsplit arr pat	1.000000
return the number of bytes in	core indexes multi index nbytes deep	0.052632
to	key value format	0.016667
internal method to handle na filling of take	core indexes index assert take fillable values	0.250000
axis equal	ndframe rank axis	0.250000
apply we are stripping all	core group by mixin apply	0.050000
to connect to the	can connect	0.111111
'numpy' library	validate argmin with	0.200000
a new multiindex from the	indexes multi index	0.013158
number of bytes in	core indexes multi index nbytes	0.052632
multirow e	formatter format multirow	0.250000
the series/index by indicated number	core str repeat arr	0.045455
bind a method to class python 2	bind method cls name	0.200000
an enumerated type	factorize	0.100000
encode input values as an enumerated type or	core factorize values sort	0.111111
the internal repr of this data	core series values	0.250000
indexable columns with an arbitrary number	legacy table read where columns	0.111111
read csv file (discouraged please use :func pandas	data frame from csv	0.066667
subclass of styler with a custom template	io formats styler from custom template	0.142857
coerce a scalar to a compat for	period index coerce scalar to	0.071429
datetimeindex with times to midnight length	indexes datetime	0.011494
indices where elements of v should be	ndarray searchsorted v	0.033333
of a hack to accelerate unioning	union many others	0.040000
statement	w	0.090909
dispatch to apply we are	by mixin apply	0.050000
set/update the info for	info info	0.142857
already exist and	io hdfstore	0.014493
values	values ndim	0.050000
additional	indexes period index	0.035714
get test result and reset test_results	get test result	0.250000
best locator	locator get locator	0.062500
via the 'numpy' library the	with convert convert args kwargs	0.055556
from 1-dimensional ndarray only use	index set value	0.023810
labels	compressed ids labels	1.000000
determine if each string matches a	core str match arr	0.166667
check whether or not the 'usecols' parameter is	io evaluate usecols usecols names	0.083333
fill	limit	0.100000
be used to iterate over the	io html frame	0.012987
a left and right	left right	0.047619
a matrix	matrix	0.076923
to a timedeltaindex	to index	0.166667
convert timedelta-like	td index cmp opname nat_result	0.055556
a dataframe to a	io formats data frame formatter to	0.083333
indices where elements of v should	frozen ndarray searchsorted v	0.033333
return datetimeindex with times to midnight length is	datetime index	0.007042
data to ndarray raises on scalar data	coerce to ndarray cls data	0.166667
convert to our native types	float block to native types	0.250000
lookup of value	key value	0.011628
a boolean indicating whether the file	io hdfstore	0.014493
construct dataframe from dict of array-like	data frame from dict cls data	0.200000
an positional indexer cannot	has valid positional setitem indexer indexer	0.052632
roll provided date forward	date	0.040000
any type that can be coerced to	indexes period index simple new cls	0.142857
shape of the values	core block shape values ndim shape	0.083333
for a particular dataframe invoked by unicode df	data frame unicode	0.166667
whether each index value is found in the	indexes datetime index ops mixin isin	0.083333
array of whether each index	core indexes datetime index	0.007634
of elements in the ndframe	core ndframe size	0.333333
return a fixed frequency	range start end periods	0.133333
sparse array do not copy by default	sparse array kind fill_value copy	0.500000
construct an intervalindex from a 1d array	index from intervals cls data name	0.125000
have negative indicies translate to postive here	core maybe convert indices indices n	0.166667
of the underlying data	core series	0.016000
indexer and	indexer	0.018349
for dataframe major_axis	core ndframe iteritems	0.055556
alignment object	alignment cls	0.333333
table	hdfstore	0.029851
expected_warning	expected_warning	1.000000
add	panel add	0.500000
where condition cond on a and b	core computation where cond a b	0.500000
internal non-public method*	create categorical data categories ordered	1.000000
are index sliceable then return	index sliceable obj	0.083333
if we are index sliceable then return	convert to index sliceable obj	0.083333
to an expression	expression expr	0.250000
starting at the end	rsplit arr	0.037037
that path's extension against	check extension cls	0.125000
validate this column return the	validate col	0.200000
a tree-like	io	0.003012
levels attribute is 1 or a list	io table is multi index	0.142857
la re split in the series/index by	core str split arr pat n	0.166667
validates that we have	categorical validate	0.055556
method to handle na filling of	fillable values	0.125000
this is index for series columns for	ndframe	0.005025
wrap	core sparse wrap	0.500000
index	index index	0.500000
delegatedclass of a series that is datetimelike	datetimelike	0.076923
index (so we don't	core at indexer convert key key is_setter	0.090909
stripping all of the _apply kwargs and	func name window center	0.058824
iter1 iter2 iterables	copy iter1 iter2	0.166667
(attr formatted_value)	indexes range index format attrs	0.142857
the string	core	0.001326
raises notimplentederror for offsets without a	i	0.041667
apply we are	apply	0.026316
table in file node	format	0.012346
coerce a string	core dtypes coerce	0.066667
csv file (discouraged please	frame from csv cls path header sep	0.066667
concatenation of an datetimelike array	dtypes concat datetime to_concat	0.125000
must be sparseseries	core sparse maybe to	0.333333
cast to	to timestamp	1.000000
url	url url	0.045455
perform a numeric	numeric	0.052632
feather-format for	feather	0.050000
a subset of rows if n	n dropna	0.166667
to time	core tools to time	0.125000
axes if supplied in args/kwargs	axes from arguments args kwargs require_all	0.333333
csv	from csv cls path sep	0.066667
object coercible	update other join overwrite filter_func	0.055556
if i want to construct this block as	categorical block array	0.333333
must be	core sparse maybe	0.500000
where elements of v should be inserted in	searchsorted v	0.033333
that we have a fully reindex-output	core data frame group by reindex output result	0.045455
be used	html frame	0.014706
firstbday	firstbday	1.000000
must already exist and be table	hdfstore append	0.016667
a data	data	0.009709
as a dataframe the levels	data values index	0.066667
deep copy by	io formats styler copy	0.500000
moving window	apply window	0.166667
python datetime date objects (namely the	core indexes datetime index	0.007634
from maps[0] raise keyerror	compat	0.030303
of available options grouped by prefix	pp options	0.083333
only	core indexes	0.004762
categorical	categorical index	0.090909
dataframe	panel to frame	0.125000
raised matches the expected exception and expected error	assert raises contextmanager exception matches exc_type exc_value trace_back	0.333333
the uuid	uuid uuid	0.500000
and 'kwargs' should be	resampler func method args kwargs	0.142857
number of bytes in the underlying	nbytes	0.046512
parsed table element	parse tr table	1.000000
get integer	categorical index get	0.500000
making this object picklable	array reduce	0.333333
setup our	set	0.012195
we have a	core categorical validate	0.055556
a multiindex on a particular axis parameters	axis	0.022727
compute the symmetric difference of two index objects	indexes index symmetric difference other result_name	0.166667
passed panel or object coercible to	other join overwrite filter_func	0.076923
ordered multiindex	core indexes multi index	0.013158
the best locator based on a	pandas auto date locator get locator	0.062500
rows if n	n dropna	0.166667
the series extract groups from the first match	str extract	0.035714
operate on an old version?	io fixed validate version where	0.142857
accessor object for datetimelike properties	timedelta properties	0.052632
pointer of the	core index ops mixin	0.062500
used to	io html frame parser build	0.014706
general index	indexes index validate names name	0.066667
render the built up	styler render	0.142857
to a leap	leap	0.076923
along concatenation	concat	0.058824
guaranteed return of an indexer even when non-unique	index get indexer for target	0.250000
the union of two index	core indexes range index union other	0.083333
is called via the 'numpy' library the	compat numpy validate take with convert	0.055556
a boolean if we will be using numexpr	can use numexpr op op_str a b	1.000000
returns the float	formats float array formatter get result	0.055556
to determine if dtype	n method dtype	0.250000
the series extract groups	str extract	0.071429
never	core categorical	0.013889
iterate over the blocks collect	consolidate transposed	0.062500
can be used to iterate over the	build	0.013514
function is called via the 'numpy' library	numpy validate take with convert	0.055556
exist and be table	io hdfstore append key value format	0.016667
of the inferred types one for each level	core indexes multi index inferred type levels	0.333333
ndarray	set value arr	0.023810
convert an	core computation convert	0.250000
float is	set eng float	0.200000
this if	core indexes	0.004762
see :class	msgpack	0.022222
i am never a view	core categorical block is view	0.200000
name a dict associating	stata reader value labels	0.142857
downsample	core datetime index resampler downsample how	0.200000
a ufunc needs additional	wrap result context	0.029412
data	core indexes range index	0.021277
info for this indexable with	io index col update info info	0.090909
data pointer of the underlying data	ops mixin data	0.333333
feather-format object from the	io read feather	0.083333
cached item item represents a	ndframe iget item cache item	0.090909
1-dimensional	index set value arr	0.023810
positional indexer cannot enlarge its	positional setitem indexer indexer	0.052632
of dates	dates	0.090909
fill_value=nan returns a dense	sparse	0.026316
to parse a	to	0.006329
bool of	core ndframe bool	0.055556
copy of self coded with categories as returned	categorical codes for groupby sort	0.071429
blocks along axis=0	blocks ax0 slice_or_indexer fill_tuple	0.500000
style and color based on	style	0.041667
return an attributes dict for	index get attributes dict	0.250000
dataframe that is intended to operate elementwise i	core data frame applymap	1.000000
a tree-like object that	html	0.011765
series extract groups from the first	core str extract arr	0.066667
read csv file (discouraged please	csv	0.057143
render the built up styles	formats styler render	0.142857
finalize	finalize	1.000000
return the data pointer of the underlying data	core index ops mixin data	0.333333
corresponding json_table	json as json	0.333333
boolean if values in the object	is	0.005291
the values to be at	values ndim	0.050000
numpy doesn't like to compare numeric	is numeric v string like	0.333333
axes dictionary for the passed axes	ndframe construct axes dict from axes	0.333333
index with business	indexes	0.004651
create index with target's values (move/add/delete values as	core indexes multi index	0.013158
concatenation	dtypes concat datetime to_concat axis	0.125000
engine is	engine engine	0.333333
getitem defers to the underlying	core indexes datetime index ops mixin getitem	0.250000
pick the best locator based on a	get locator	0.062500
list of tuples of the (attr formatted_value)	indexes range index format attrs	0.142857
matches a regular expression	case flags	0.166667
boolean if we if the passed type is	interval dtype is	0.066667
of python datetime date objects (namely	datetime index	0.007042
save workbook	excel writer save	0.333333
compute pairwise correlation of columns	core data frame corr method	0.111111
the number of	range	0.047619
coerces data to ndarray raises on scalar data	coerce to ndarray cls data	0.166667
and plural 'names' parameter for multiindex	validate names name names deep	0.125000
raised	assert raises regex _exception _regexp _callable	1.000000
handling	period index	0.024390
scatter plot from two dataframe	plotting scatter plot data x	0.125000
paragraphs with length less than a given width	width	0.083333
that the exception raised	assert raises	0.200000
necessary for	core	0.001326
swap level i with level j	core indexes multi index swaplevel i j	0.333333
caption on a styler	formats styler set caption caption	0.333333
can be used to iterate over the dom	io html frame parser build doc	0.125000
counts of ftypes in this	ftype counts	0.125000
operations to convert datetime-like to datetime64	cmp opname nat_result	0.066667
best locator based	locator get locator	0.062500
a multi	multi axes method level	0.500000
each group if	core group by	0.027778
algos groupsort_indexer implements counting sort and it is	index sorter group_index ngroups	0.250000
datetime index with business	indexes	0.004651
min_version	min_version	1.000000
exist and be table	key	0.005051
an expression	core computation expr	1.000000
values as	values	0.017094
rolling groupby implementation	rolling groupby	0.500000
after a ufunc	result context	0.081081
of interval	interval index	0.090909
table in file	key value	0.011628
a string raise a typeerror	cls string	0.125000
copy the existing store to a new file	io hdfstore copy file	1.000000
the grouper on instantiation	group by assure grouper	0.250000
is called via the 'numpy' library the	validate take with convert	0.055556
singular 'name' parameter for general index and	indexes index validate names name	0.066667
fast lookup	core indexes index set value arr	0.023810
from maps[0]	chain map	0.034483
index	indexes datetime index	0.061069
types of	types	0.034483
need to coerce a scalar to a compat	coerce scalar to	0.071429
a block if	core block	0.010870
suitable class to operate	hdfstore create storer group format value append	0.333333
on 3 columns of this dataframe	index columns	0.028571
if we can	util can	0.250000
input function or functions	ndframe rename axis mapper axis copy	1.000000
locations of to_match into values	core match to_match values na_sentinel	0.333333
where elements of v should	core indexes frozen ndarray searchsorted v	0.033333
dispatch to apply we are	core group by mixin apply	0.050000
that path's extension against	writer check extension cls	0.125000
into a list of	parser	0.008000
in each element in the series/index	core str get arr i	0.142857
/ pandas type to	table type	0.055556
an intervalindex from a	core indexes interval index from arrays	0.166667
data are	data frame	0.005714
must already exist and be table	key value	0.011628
to see if we can set	util can set	0.125000
to a leap	period index is leap	0.125000
slice of my values	core block slice slicer	0.083333
string format	format datetime64	0.250000
internal method to handle na filling of take	indexes multi index assert take fillable values indices	0.250000
validates that	core categorical	0.013889
multi-level index return new dataframe with labeling	core data frame reset	0.027778
ndarray of my hashed	index hashed	0.166667
returns a dense	sparse	0.026316
downsample the	resampler downsample	0.200000
create a sparseseries from a scipy sparse coo_matrix	core sparse sparse series from coo cls a	0.333333
determines if two index objects contain	core indexes datetime index ops mixin equals other	0.200000
series to dataframe	data frame	0.005714
from maps[0] raise	chain map	0.034483
dataframe as an html	data frame to html	0.250000
that is datetimelike (e	maybe to datetimelike data copy	0.142857
tag	computation replacer x	0.125000
csv file	core series from csv cls path sep	0.066667
sparse/dense and	core ndframe	0.005051
if label	label side	0.500000
array interface return my	array result	0.125000
my pandas type &	fixed	0.055556
given	index get	0.080000
the month and day_of_month	semi month begin	0.166667
we have a valid ordered	ordered cls ordered	0.058824
conform set of	core	0.001326
locator based on	locator	0.047619
value from 1-dimensional ndarray	core indexes datetime index get value	0.071429
specialized intersection for datetimeindex	intersection other	0.076923
comparable timezone both for	index timezone	0.200000
take a string-like that is	io convert string array data encoding	0.038462
array interface return	core indexes interval index array result	0.125000
match of regular expression pat	arr pat flags	0.062500
this	set value arr	0.023810
get the data	io data col get	0.333333
ndarray only	index set value arr key	0.023810
can be	parser	0.008000
construct this type from	interval dtype construct from string	0.166667
values from passed panel or object coercible	join overwrite filter_func	0.076923
see	msgpack packb	0.025641
tabular environment table you can splice	latex buf columns col_space header	0.100000
"reset" the styler removing any previously applied styles	formats styler clear	0.333333
of microseconds (>= 0 and less than	core indexes timedelta index microseconds	0.066667
cartesian product of all	shape sort	0.200000
seconds (>= 0 and less than 1 day)	core indexes timedelta index seconds	0.066667
supported for panel objects	panel	0.017857
guarantee the shape of the values to	values ndim shape	0.083333
join wrapper methods	ops mixin join i8 wrapper joinf dtype with_indexers	0.333333
string-like array to convert object dtype	maybe convert string to object values	0.142857
of datetime time	indexes datetime	0.011494
to the specified dtype	result dtype	0.142857
a parameter value using the	value	0.005155
a dict of the counts of the	counts f	0.041667
the series/index to be formatted in	core str	0.011364
passed panel or object coercible to panel	core panel update other join overwrite filter_func	0.200000
a string representation	indexes index unicode	0.083333
pick the best locator based on	date locator get locator	0.062500
a non-boolean scalar	parse dates arg parse_dates	0.142857
take which sets nan values in one pass	take nd arr	0.125000
remove and return an item pair	popitem	0.043478
midnight length is	core indexes datetime	0.011494
only use this if you	core indexes categorical	0.071429
that we have	core categorical validate ordered cls	0.055556
a datetime64 block with a	datetime	0.006711
data array to the key	key	0.005051
a keyword argument of a function	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
take a string-like that is object dtype	string array	0.038462
use	set value arr key	0.023810
right	right check_dtype check_index_type	0.500000
on type and coerce into matrices	core arrays to mgr arrays arr_names index columns	0.250000
to an xlwt style object	io xlwt writer convert to style	0.500000
create a new unit	dtypes datetime tzdtype new cls unit tz	0.055556
block it is	block	0.008197
to	index coerce to	0.333333
plotted	plotted	1.000000
that can safely be cast to an integer	integer name val min_val	0.500000
getitem defers to the underlying	ops mixin getitem	0.250000
used to tag	computation replacer x	0.125000
from google bigquery	io read gbq query project_id index_col col_order	0.250000
dataframe and major_axis	ndframe	0.005025
the date belongs to a leap year	core indexes period index is leap year	0.142857
datetimeindexes	sub datelike dti	1.000000
return a fixed frequency datetime index with business	core indexes bdate range start end	0.083333
this is called upon unpickling rather than the	indexes new datetime index cls d	0.111111
in a block of	core block make block	0.100000
values along	values	0.008547
fast transform path for	by transform fast	0.333333
each group if n is an int	core group by	0.027778
values according to indexer and return them as	indexer axis	0.043478
n indexable columns	columns	0.017857
check that left and right panels are equal	util assert panelnd equal left right check_dtype check_panel_type	0.333333
the given offset/observance to a datetimeindex	rule	0.050000
set new labels on	index set labels labels level	0.500000
copy if specified coerce to	copy	0.012821
i	categorical	0.009615
findall	findall	0.555556
this as a frame table	multi series table	0.200000
swap level i	swaplevel i	0.333333
tuple of the shape	shape	0.047619
if the process of casting data from	safe casting cls data	0.047619
:meth pandas dataframe reset_index function	level drop name inplace	0.142857
this getitem defers	getitem key	0.333333
variable name in a possibly local context	key is_local	0.166667
only use this if	value arr key	0.023810
value is valid for scalar op	can do op value	1.000000
already exist and	io hdfstore append key value	0.016667
of value from 1-dimensional ndarray only use this	indexes datetime index get value	0.071429
value from 1-dimensional ndarray only	core indexes datetime index get value	0.071429
to convert timedelta-like	core indexes td index cmp	0.055556
cache	cache	1.000000
the dtypes	dtypes	0.015873
feather-format for dataframes	to feather	0.333333
the columns under the index	reset index	0.125000
convert argument to datetime	tools to datetime arg errors dayfirst	1.000000
line	line	1.000000
blocks along axis=0	manager slice take blocks ax0 slice_or_indexer fill_tuple	0.500000
interpolate values	resampler interpolate method axis limit inplace	0.166667
my self as a sparse array	as sparse array	0.250000
dataframe with labeling information in	data frame reset	0.027778
of how to create the grouper indexers	grouper obj key	0.142857
and plural 'names'	names name names deep	0.125000
for options	io msgpack	0.025000
string if it was a pathlib path	stringify path filepath_or_buffer	0.142857
the npy_maxargs 32	computation result type many	0.142857
unique elements of arr1 and arr2	arr1 arr2	0.066667
to ndarray raises on scalar data converts other	index coerce to ndarray cls data	0.166667
returning	inplace verify_integrity	0.333333
capture stderr in a	capture stderr f	0.055556
convert to our native types	datetime block to native types slicer	0.250000
as an object block	to object block mgr	0.500000
panel to a specified number of	panel	0.017857
for running code that expects to	util assert produces warning expected_warning	0.071429
to read from a	read	0.033333
detect whether the installed version of openpyxl is	is compat major_ver	0.111111
this is called upon unpickling	indexes new interval index cls d	0.333333
validate if we	validate for	1.000000
to	core indexes index coerce to	0.333333
after	index	0.004008
the key for valid keys across my indexer	indexer has valid tuple key	0.500000
render a dataframe	data frame formatter	0.600000
simple	columns values	0.037037
:meth pandas dataframe reset_index function see	core series reset index level drop name inplace	0.142857
times to midnight length is	core indexes datetime index	0.007634
convert to our native types format slicing	to native types slicer na_rep	0.250000
'args'	compat numpy validate	1.000000
the block	create for block	0.333333
key or none if it does not	key	0.005051
called after a	period index array	0.050000
determine if each string matches a	match arr pat	0.166667
html	io formats	0.027778
series or by a series of columns	ndframe groupby by axis level	0.333333
called via the 'numpy' library the	compat numpy validate take with convert convert args	0.055556
file node	key value	0.011628
return a	parser build	0.014706
float is formatted	io formats set eng float	0.200000
stripping all of the _upsample kwargs and	by mixin apply f	0.166667
new index	new index	1.000000
when a manipulation result has the	ndframe constructor	0.055556
if	validate	0.027778
ndarray only use this if	indexes	0.004651
all the	util all	0.111111
the mode s	core data frame mode	0.333333
already exist and be table	io hdfstore append key value	0.016667
indexer	core ndframe indexer has	1.000000
casting data from some accepted	assert safe casting cls data	0.047619
nat-like arg is a	arg	0.018868
a tree-like object that	io html frame parser build	0.014706
return a dict	get	0.007143
cases to get lines 0) there are headers	python parser get	0.166667
union of two index objects and sorts	range index union other	0.083333
create a	create	0.066667
the exception raised	util assert raises contextmanager	0.200000
prior to	array prepare	0.111111
timeseries to specified frequency	asfreq freq	0.250000
a ufunc needs additional handling as	period index array wrap result context	0.041667
csv file	core data frame from csv	0.066667
validates that	ordered cls	0.055556
update index attributes e	datetime index maybe update attributes attrs	0.200000
in-place does not consolidate adds new	value check	0.500000
function returns	formats get	0.090909
concatenation	concat sparse	0.500000
header rows in	header	0.066667
object in hdfstore parameters	hdfstore put key value	0.333333
read csv file (discouraged	from csv cls	0.066667
contains any keys that are not in 'compat_args'	invalid keys fname	1.000000
validates that	ordered	0.017857
return a string representation for a particular object	core dtypes extension dtype repr	0.142857
'info axis' see indexing for more this	core ndframe keys	0.083333
from	formats cssresolver parse	1.000000
implement n largest/smallest for dataframe	select nframe	1.000000
list of the inferred types one for each	index inferred type levels	0.111111
highlight the maximum	highlight max subset color	0.333333
table in file node must	io hdfstore	0.014493
return the counts of ftypes	core ndframe get ftype counts	0.250000
the 'numpy' library	argmin with	0.200000
nans	nans	1.000000
for more this is index	core	0.001326
evaluate a	bin op evaluate	0.333333
checks if key is a deprecated option	deprecated key	0.333333
returns a function to be applied on each	formatter float_format threshold	0.200000
try to cast the array/value to a datetimelike	dtypes maybe cast to datetime	0.500000
compute covariance with series	core series cov other min_periods	0.200000
try to operate on it	core selection mixin try	0.250000
if the date belongs to a leap year	period index is leap year	0.142857
numpy / pandas type to its	type x	0.055556
to take optional	util optional args	0.066667
len of	categorical size	0.111111
lines 0) there are headers	io python parser	0.250000
attempt to construct this type from	categorical dtype construct from	0.166667
numeric add/sub	indexes index add numeric	0.250000
manipulation result has the	core ndframe constructor	0.055556
fixed frequency datetime index	indexes period range start end periods freq	0.083333
a warning will be produced using msg	msg rkey removal_ver	0.500000
perform the reduction type operation	core categorical reduce op	0.500000
routine to turn values into codes given the	core get codes for values values	0.333333
from maps[0] raise keyerror is	map	0.029412
numeric operations to the groupby generically	numeric operations cls	0.090909
wrapper function for series arithmetic operations	core bool method series op	0.333333
return the mode s of	mode	0.050000
from the cartesian product	index from product	0.500000
binners	core resampler set binner	0.333333
iterables you should probably use pprint_thing()	pprint dict seq _nest_lvl max_seq_items	0.333333
parameter	ordered	0.017857
flattened values of the underlying data	index ravel order	0.037037
provide concatenation of an datetimelike array	dtypes concat datetime to_concat axis typs	0.142857
of the inferred types one for each	index inferred type levels	0.111111
make sure a valid engine is passed	computation check engine engine	0.333333
matches the expected exception and expected error	exception matches exc_type exc_value trace_back	0.333333
the	core	0.123342
contains any keys that are not in 'compat_args'	invalid keys	1.000000
for level 0 assuming	core indexes multi index bounds	0.166667
the op string for this termvalue	op generate v	0.250000
node must already exist	append key value	0.016667
the underlying array	ops mixin	0.033333
necessarily hierarchical index labels returning a dataframe	core data frame	0.005917
a regex pattern instance	re	0.222222
alter default behavior on how float is formatted	set eng float format accuracy use_eng_prefix	0.333333
of the required package is installed	package pkg_name min_version	0.083333
dateoffset of one month end	month end	0.100000
la re split in the series/index by given	core str split arr pat n	0.166667
index or ndarray filled	core indexes datetime index ops	0.034483
read sql	io read sql sql con	1.000000
statement that create a table reflecting the structure	create table setup	0.066667
styler with a custom	io formats styler from custom	0.200000
number of bytes in the underlying data	indexes multi index nbytes deep	0.052632
an indexer like _name in the class	name indexer	0.083333
add numeric operations to the groupby	by add numeric operations cls	0.250000
reduction type operation if we	index ops mixin reduce op	0.083333
for running code that expects to raise	util assert produces warning expected_warning filter_level	0.071429
having a singular 'name' parameter for general index	indexes index	0.007353
needs additional	period	0.016667
a sorted ndframe	ndframe truncate	0.250000
return packed bytes see	io	0.003012
numexpr	numexpr	1.000000
return generator through chunked result set	io sqltable query iterator result chunksize columns coerce_float	0.250000
arg_val_dict	arg_val_dict	1.000000
flattened values of the underlying data	ravel order	0.037037
scatter plot from two dataframe columns parameters	plotting scatter plot data x y by	0.125000
init self from ndarray or list of lists	data frame init matrix data index	1.000000
create a	io sqlite table create	0.066667
in	value	0.005155
wrap long	wrap arr	0.250000
class implementing the plot attribute for groupby objects	plot	0.043478
implement a datetime64 block with a	datetime tzblock	0.100000
i am never a view	block is view	0.200000
simple cross-tabulation of	crosstab index	0.066667
perform an asof merge this	core reshape merge asof	0.071429
_constructor_sliced-like objects to either an intersection of	panel homogenize dict frames intersect dtype	0.142857
its entirety only - where	fixed delete where start stop	0.333333
return result as series or	axis	0.011364
a simple cross-tabulation	core reshape	0.047619
type (if copy=true return a new copy)	core categorical block astype dtype	1.000000
lookup of value from 1-dimensional ndarray	indexes period index get value series key	0.071429
with level j	j	0.034483
create a new multiindex	core indexes multi index	0.013158
to ndarray raises on	indexes index coerce to ndarray cls	0.166667
list of sql statement that create	table create	0.043478
have a null slice	null slice obj	1.000000
first match of regular expression pat	pat flags	0.105263
return a list of	tolist	0.071429
returns value occupying requested label default to	series get label default	0.083333
alter index and / or columns using input	axis copy inplace	0.055556
up	formats styler	0.021739
a	index array	0.066667
create and return a basegrouper	get	0.007143
count of number of non-nan	count	0.055556
a fixed frequency datetime index with custombusinessday as	core indexes cdate range start end	0.083333
exist	key value	0.011628
list of the axis indicies	core panel extract axes data	0.142857
the plot attribute	plot	0.043478
we if the passed type is	dtype is	0.064516
uint64 ndarray of my hashed	index hashed	0.166667
of styler with a custom template	io formats styler from custom template	0.142857
series/index ends with passed pattern	str endswith arr pat na	1.000000
values to be	block shape values ndim	0.050000
representation of object to the	core ndframe to	0.040000
set new labels on multiindex defaults	core indexes multi index set labels labels level	0.333333
the ordered attribute	core categorical get ordered	0.333333
a single column from the	io	0.003012
unit if needed	cls unit	0.125000
need to coerce a code to a	maybe coerce freq code	0.076923
can be	html frame parser build	0.014706
a scipy sparse	core sparse sparse	0.034483
index or ndarray filled with	indexes datetime index	0.007634
array of timestamps	period index asof locs	1.000000
via the 'numpy' library	with	0.068966
called via the 'numpy' library the third	take with convert convert args kwargs	0.055556
window of type window_type and size window	window win_type min_periods	0.100000
return block for the diff	core block diff n	1.000000
frequency datetime index	indexes bdate	0.050000
this getitem defers to the underlying	core indexes datetime index ops mixin getitem key	0.333333
tuple	tuple	0.857143
if we define an builtin function for this	core selection mixin is builtin func arg	0.333333
that are available on the	prefix normalize locale_getter	0.166667
iterate over the	frame	0.009091
csv file (discouraged please use :func pandas	series from csv	0.066667
the reindex for all	core ndframe reindex	0.125000
for	core indexes index	0.007042
1-dimensional	indexes	0.004651
json lists to	to	0.006329
as index	core indexes index	0.007042
for a type checking function of type	computation is type	0.125000
to shift without copying data	ndframe slice shift	0.083333
each index value is found	index ops mixin isin values	0.083333
force non-datetime columns to be read	io parse date columns data_frame parse_dates	0.166667
forward	pad	0.166667
a url has a valid protocol	url url	0.045455
float values converted	io formats float array formatter get	0.055556
apply of dateoffset to datetimeindex raises notimplentederror for	offset apply index i	0.333333
box function to	indexes datetime index ops mixin box func	0.142857
timedelta-like to timedelta64	td index cmp	0.055556
the best locator	plotting pandas auto date locator get locator	0.062500
index names	set default names	0.083333
dataframe as an	core data frame to	0.037037
called after	indexes index	0.007353
add	computation add	0.333333
dataframe's series using matplotlib / pylab	column by grid	0.200000
read csv file (discouraged	csv cls path sep	0.066667
like into a	io json parser	0.071429
encode input values as an enumerated type or	core factorize values sort order	0.111111
pack an object and	pack o	0.250000
dataframe that is intended to operate elementwise i	sparse sparse data frame applymap	1.000000
stata date formats to a	datetime to stata	0.100000
of the data are missing	core data frame dropna	0.083333
indicating	ndframe	0.005025
the locations	locs locs	0.333333
take a string-like that is object dtype	string array data	0.038462
where elements of v should be inserted	frozen ndarray searchsorted v	0.033333
we are positional indexer	indexes index validate indexer form key kind	0.500000
out the binary feather-format for	core data frame to feather fname	0.083333
like into a	json parser	0.071429
a manipulation result has the same dimensions as	ndframe constructor	0.055556
passed a manager and a axes dict	mgr mgr axes dtype	0.333333
are datetime	numeric index is	0.333333
table	multi series table	0.200000
concatenation of an datetimelike array of	core dtypes concat datetime to_concat	0.125000
the ticks	plotting time series date	1.000000
timedelta-like	core indexes td index	0.055556
number of bytes in the underlying data	nbytes	0.046512
the series/index by indicated	core str repeat	0.045455
concatenation of an datetimelike array of	dtypes concat	0.100000
return my cacher or none	get cacher	1.000000
ndarray of my hashed	core indexes multi index hashed	0.166667
return result block s from	block where other cond align raise_on_error	0.066667
convert dataframe to	data frame to	0.037037
of arr1 and	arr1	0.050000
(e g convert back to bool/int	core dtypes maybe downcast to	1.000000
regular expression	arr pat flags	0.125000
infer the fill	infer fill	1.000000
an array	util hash array vals	0.083333
categories	get categories	0.333333
insert item	insert loc item	0.333333
the levels attribute is 1 or a list	table is multi index	0.142857
assignment	assignment	1.000000
to table	key	0.005051
wrap comparison operations to convert datetime-like to	indexes period index cmp opname nat_result	0.066667
must already exist and be	io hdfstore append key	0.016667
string representation for	core indexes frozen ndarray unicode	0.083333
one	core	0.001326
read csv	from csv cls path	0.066667
table	io hdfstore append key	0.033333
return the strides of the underlying data	core index ops mixin strides	0.333333
datetimeindexes	index sub datelike dti	1.000000
that do not throw an exception	util	0.062500
used to iterate over the	html frame	0.014706
belongs to a leap	index is leap	0.125000
object that can	io	0.003012
json	io json convert	1.000000
totally ordered cartesian product of	labels shape sort xnull	0.066667
concatenation of	core dtypes concat	0.100000
we are index sliceable then	core convert to index sliceable	0.083333
to the underlying	index ops mixin	0.019231
indexer cannot enlarge	indexer indexer	0.071429
name lookup and completion	core pandas object dir	0.166667
the	table	0.010870
via the 'numpy' library	numpy validate take with	0.055556
converts a style_dict to an xlsxwriter format	xlsx writer convert to style style_dict	0.166667
categorical if not already	categorical	0.009615
union of two multiindex	core indexes multi index union other	0.066667
dictionary	axes dict from	0.250000
value occupying requested label default	get label default	0.083333
to add default implementation of ops	add ops op_classes	0.333333
the block manager from a	manager sdf columns index	0.052632
a simple cross-tabulation of	reshape crosstab index columns	0.066667
array object	core dtypes	0.018519
at particular time of day e g	at time time asof	0.066667
the node with the key or none if	get node key	0.083333
of microseconds (>= 0 and less than 1	core indexes timedelta index microseconds	0.066667
check to see if a url has a	is url url	0.047619
holiday object with a given set	tseries abstract holiday	0.100000
ndarray only use this if you	key	0.005051
called after a ufunc needs	array wrap result context	0.029412
for temporarily setting	new_locale lc_var	0.125000
select values at particular time of day	ndframe at time time asof	0.066667
new unit if needed	tzdtype new cls unit tz	0.055556
form the union	union	0.150000
matrix multiplication with dataframe or series objects	core data frame dot other	0.500000
and dtype) in	ndframe	0.005025
the indexables if they don't exist	indexables	0.125000
positional	ndframe indexer has valid positional	0.250000
creates a new	frame sanitize column key	0.333333
helper function that converts json lists to line	convert to line	0.142857
(attr formatted_value)	range index format attrs	0.142857
a 1d array return an array	array vals	0.083333
be	format	0.012346
wrapper function for	core arith method	0.333333
raise keyerror is maps[0]	compat chain	0.034483
to an ndarray copy if specified coerce to	dtype copy	0.032258
:mod datetime to the	to	0.006329
see :class packer for options	msgpack	0.022222
ndarray argsort	argsort	0.038462
of the kinds allowable columns for this object	table queryables	0.055556
return the	reshape as of merge get	0.500000
function is called via the 'numpy' library the	with convert convert args kwargs	0.055556
try hard to parse datetime string	parse time string	0.250000
interpolate values according	interpolate method	0.166667
dummy variables corresponding to designated axis labels	reshape make axis dummies frame axis transform	0.166667
a tree-like object that can be used	io	0.003012
to class python	cls name	0.125000
provides a resample of	datetime index resampler	0.066667
according to indexer and return them	indexer	0.018349
that time and	indices time	0.125000
missing	convert from missing	0.500000
called	period index	0.024390
expected nrows	nrows expected	0.142857
and return	compat	0.030303
a boolean if the passed type is	dtype is	0.032258
membership of x in y if possible otherwise	in x y	0.047619
to infer better dtype for object columns parameters	core ndframe convert datetime numeric timedelta coerce	0.071429
an index that we	index	0.002004
after a	indexes period index array wrap	0.050000
for series columns for dataframe and major_axis for	core ndframe	0.005051
manipulation result has one lower dimension s as	ndframe constructor sliced	1.000000
propindexes	propindexes	1.000000
layout for	table	0.010870
function for creating a subclass of styler with	io formats styler	0.021277
see index join	indexes datetime index join other how level return_indexers	1.000000
of try_coerce_args	try coerce result result	0.333333
slice or boolean mask for requested label	key method	0.250000
creates a new sparsearray from the	sparse sparse data frame sanitize column key	0.333333
concatenate to_concat which has the same class	append same dtype to_concat	0.500000
the required package is	package	0.058824
return the	core series	0.008000
process of casting data from some	safe casting cls data	0.047619
convert structured or record ndarray to dataframe parameters	data frame from records cls data index exclude	1.000000
type window_type and size window	arg window win_type min_periods	0.100000
fast lookup	indexes index set value arr key	0.023810
time and	time	0.052632
is called via the 'numpy' library the third	validate take with convert	0.055556
return a tree-like object that can	io html	0.012987
this if you	core indexes	0.004762
called prior to	core series array prepare	0.111111
if	core	0.009284
the view limits	locator autoscale	0.055556
unique elements in the	nunique dropna	0.125000
wrap result	io wrap result	0.333333
concatenation	concat datetime to_concat	0.125000
dtype	dtypes	0.015873
custom	custom	0.600000
data to ndarray raises on scalar data converts	to ndarray cls data	0.166667
load a pickle	load	0.100000
a masked rec array and create the	core masked rec array to	0.090909
(e g convert back to bool/int	dtypes maybe downcast to dtype	1.000000
reshape data (produce	data	0.009709
initializes holiday object with a given set	tseries abstract holiday	0.100000
generate bin edge offsets and bin	generate	0.062500
the array interface return my values	index array result	0.125000
tag	core computation replacer x	0.125000
argsort argsorts the value omitting na/null values	argsort axis kind order	0.500000
the required package is installed	package	0.058824
axis	frame dropna axis	0.142857
inserting new item at location	insert loc item	0.333333
only use	value arr	0.023810
value from 1-dimensional	set value arr key value	0.038462
be	parser build	0.014706
cmp	cmp	1.000000
new labels	labels labels	0.250000
datetime date objects	datetime index	0.007042
times	arr repeats	0.200000
plural 'names' parameter	name names deep	0.125000
color	color	0.750000
akima	core akima	0.500000
of v should be inserted	core indexes frozen ndarray searchsorted v	0.033333
casting	assert safe casting	0.125000
are going to write	write	0.017857
with nat which has the same length	mixin nat new box	0.050000
dtype object of the underlying data	core indexes index dtype	0.333333
compute variance of	var ddof	0.166667
the cross-product	core maybe convert ix	0.166667
new manager with the blocks	manager combine blocks copy	0.250000
ndarray only use this if	core indexes	0.004762
function has at most len(compat_args) arguments and	util validate args fname args max_fname_arg_count compat_args	0.333333
lookup of	core indexes index set value arr key	0.023810
ndarray	set value	0.023256
embed	embed	1.000000
o and return packed bytes see :class	o	0.043478
into a pandas only dtype object or	pandas	0.035714
types and ranges supported by stata and	cast to stata types	0.500000
the	group by	0.016129
return the	as of merge get	0.500000
left and right index are equal	index equal left right exact check_names	0.333333
putmask that potentially upcasts the	core dtypes maybe upcast putmask	0.250000
reduce join_unit's shape along item axis to	core trim join unit join_unit	0.500000
qs	qs	1.000000
value from 1-dimensional ndarray only use this	datetime index get value	0.071429
interpolate values	interpolate method	0.166667
concise listing of available options grouped by	options list keys width _print	0.111111
return valid other	other op	0.500000
an	datetime index	0.007042
of axis	axis axis	1.000000
return the bool of	ndframe bool	0.055556
for :meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace limit	0.333333
view	categorical block is view	0.200000
y if possible otherwise use python	y	0.117647
select values between particular times of	core ndframe between	0.100000
values of columns	columns	0.035714
beginning of	offset beg	0.166667
convert to our native types format slicing	to native types slicer	0.250000
whether i can attempt conversion to	convertible to index other	0.333333
init self from ndarray or list of lists	sparse sparse data frame init matrix data index	1.000000
functions	core ndframe rename axis mapper axis	0.333333
dataframe to a tabular environment	data frame to latex buf columns col_space header	0.111111
we have bytes decode them to unicode	ensure decoded s	0.166667
the float	formats float array formatter get result	0.055556
index with target's values	index	0.002004
values according to indexer	nd indexer axis	0.043478
specialized cython take which sets nan values	core take nd arr indexer axis out	0.166667
flattened values	core indexes index ravel order	0.037037
a string representation for this object	frozen ndarray unicode	0.083333
as	sparse sparse series as	0.125000
from ndarray or list	data index columns dtype	0.125000
can	io html frame	0.012987
concatenation of an datetimelike array of arrays each	core dtypes concat	0.100000
context manager for running code that expects to	util assert produces warning	0.071429
iter1 iter2 iterables that produce	copy iter1 iter2	0.166667
a class for writing stata	stata	0.022222
levels and labels can be	levels labels	1.000000
string representation for	indexes frozen ndarray unicode	0.083333
return label for last	last	0.153846
engineering notation appending a letter representing	eng formatter	0.125000
where is a term or a list	where scope_level	0.142857
coo_matrix	series to coo row_levels column_levels sort_labels	1.000000
the	core indexes	0.019048
guaranteed return of an indexer even when non-unique	indexes index get indexer for target	0.250000
a new	dtypes datetime tzdtype new	0.333333
the totally ordered cartesian product	labels shape sort xnull	0.066667
from the result	raise_on_error	0.125000
sanitize an index type to return an ndarray	sanitize index data index	0.200000
write records stored in a dataframe	frame name if_exists index	1.000000
add	indexes datetime index ops mixin add	0.333333
nice str repr of	window unicode	0.071429
type to its	type	0.024390
to iterate over	frame	0.009091
a la re split in the series/index	core str split arr pat	0.166667
the number of bytes in the	core indexes multi index nbytes	0.052632
same function multiple times in parallel	test parallel	0.142857
return index or ndarray filled	indexes datetime index	0.007634
given an interval or intervalindex return	get interval	0.125000
axis dimensions	core ndframe shape	0.200000
a dense	sparse	0.026316
ndarray copy	copy	0.012821
available options grouped by	options	0.041667
return a copy of a series excluding	series group	0.030303
a datetimeindex	core indexes datetime index	0.007634
load a feather-format object from the file path	read feather path	0.333333
must already exist	io hdfstore append	0.016667
grouped histogram parameters	plotting grouped hist data column by ax	1.000000
index for series columns for dataframe and	core ndframe	0.005051
retrieve single value at passed index label	sparse series get value label takeable	1.000000
comparison operations to convert timedelta-like to	td index	0.055556
provide concatenation of an datetimelike array of	core dtypes concat datetime to_concat axis typs	0.142857
where : array of timestamps	period index asof locs where	1.000000
returns a curve with holidays between	calendar holidays start end return_name	0.066667
return boolean if values in	mixin is	0.083333
get the	core get	0.038462
return a boolean	a b	0.083333
precision	precision	1.000000
have a valid ordered parameter	ordered cls ordered	0.058824
indices overlap add	overlap	0.047619
(header new_data) for header	header name row index_col	0.200000
compat with	core indexes index sort levels monotonic	0.333333
return an indexer coerced to the codes	maybe coerce indexer indexer	0.125000
styler with a custom template and jinja environment	styler from custom template cls searchpath name	1.000000
the binary feather-format	data frame to feather fname	0.083333
for general index	core indexes index validate names	0.066667
perform the reduction type operation if we can	index ops mixin reduce op	0.083333
a slice of my values	datetime tzblock slice slicer	0.083333
for dataframe major_axis for	ndframe iteritems	0.055556
block if	core block manager	0.022727
see if a url has	io is url url	0.047619
that create a table reflecting the structure of	create table setup	0.066667
ufunc needs additional handling as	indexes period index array wrap result context	0.041667
assert that we all have the same closed	indexes interval index append same dtype to_concat	1.000000
lookup of	indexes index set value arr	0.023810
invoked by str df	str	0.017544
the reduction type operation if	ops mixin reduce op name axis	0.083333
vectorized apply of dateoffset to datetimeindex raises notimplentederror	date offset apply index i	0.333333
scalar data converts	data	0.009709
create a new multiindex from the	multi index	0.020000
the block i	col create for block cls i	0.333333
each index value is found in the	datetime index ops mixin isin values	0.083333
to cast the array/value to a datetimelike	maybe cast to datetime	0.500000
a new unit	datetime tzdtype new cls unit	0.055556
where elements of v should be inserted	core indexes frozen ndarray searchsorted v	0.033333
but using the interpolate machinery	block interpolate with fill method	0.200000
to ndarray raises on scalar	index coerce to ndarray	0.166667
function of type	core computation is type	0.125000
style_dict to an xlwt style object	xlwt writer convert to style cls style_dict	0.250000
determine if	match	0.090909
holiday falls on sunday use day thereafter	tseries sunday to	0.200000
helper to call encode before writing to	writer write to_write	0.083333
gets called	indexes period index	0.035714
rows of other to	other	0.013514
csv file (discouraged please use :func pandas read_csv	csv cls path	0.066667
'args' and 'kwargs' should be empty because all	compat numpy validate resampler func method args kwargs	0.166667
matplotlib table	plotting table ax	1.000000
datetime index with business day as the	indexes	0.004651
the metadata for	read metadata	0.250000
fixed frequency datetime index	indexes	0.004651
representation of object to the	to	0.006329
for akima interpolation	core akima interpolate	0.500000
from each group if n is	group by	0.016129
provides a resample	period	0.016667
full scope for use with passing	scope full scope	0.055556
must already exist	value format	0.016667
flattened values of	indexes index ravel order	0.037037
delimiter string starting at	rsplit arr	0.037037
series extract groups	extract frame arr	0.047619
we may create a	new align inplace	0.125000
reshape	core reshape	0.047619
table in file node must already	hdfstore append key value	0.016667
insert	manager insert	1.000000
be used to iterate over	build	0.013514
use	index set value arr	0.023810
read csv file (discouraged please	core series from csv cls path	0.066667
values between particular times of	indexer between	0.125000
table	hdfstore append key	0.033333
datetime index with custombusinessday as the default	indexes cdate range start	0.083333
perform __getitem__-like return result as	slicer new_mgr_locs	0.250000
via the 'numpy' library	validate take with convert convert	0.055556
a class with a metaclass	metaclass metaclass	0.125000
to construct this type from	dtype construct from string	0.166667
sql query or database table into a	sql sql con index_col coerce_float	0.142857
only use this	core indexes	0.004762
mean	mean	1.000000
slice of this container	ndframe slice slobj axis kind	0.333333
generic moving function	window func	0.500000
string matches a regular expression	arr pat case flags	0.166667
install the scalar coercion	coerce method converter	0.200000
ensure that if we don't have	frame ensure valid	1.000000
sub-classes	core series gotitem key ndim subset	0.333333
operation *before* being passed to the engine	env engine parser term_type	0.500000
overlap add suffixes to overlapping entries	items overlap with suffix left lsuffix right rsuffix	0.333333
have a	validate ordered cls	0.055556
dtype and n/a	empty dtype and	0.125000
of all	util all	0.055556
whether each index value is	index ops	0.033333
the float values converted into	float	0.024390
return datetimeindex with times to midnight	core indexes datetime	0.011494
return datetimeindex with	core	0.001326
format	format index	0.500000
return boolean ndarray denoting	core duplicated	1.000000
manage style and color based on column	mplplot apply style colors colors kwds col_num	0.142857
iter2 iterables	iter2	0.083333
time index using the	core	0.001326
cast	cast	0.470588
of casting data from some	indexes numeric index assert safe casting cls data	0.047619
background null_color for missing values	styler highlight null null_color	0.125000
return a tree-like object	build	0.013514
check to see if a url has	url url	0.045455
seconds (>= 0 and less than 1	indexes timedelta index seconds	0.066667
true if	core dtypes is	0.021277
classes	classes	1.000000
necessary for making this object picklable	index reduce	0.333333
manager and a axes dict	mgr mgr axes	0.333333
of the index	core indexes datetime index	0.015267
returns the float	float array formatter get result as array	0.055556
object that can	parser	0.008000
the header of a	html frame parser parse thead	0.111111
index	core indexes timedelta index maybe	1.000000
row cross-section from the sparsedataframe as	core sparse sparse data frame xs key	0.166667
return	merge get	0.500000
built up styles to html	styler	0.022222
pointer of the	index ops mixin	0.019231
to apply we are stripping	core group by mixin apply func	0.050000
the list	sparse sparse list	0.333333
datetime to the	plotting dt to	0.125000
by hashing its categories and then mapping the	c encoding hash_key	0.200000
new unit if needed otherwise return	new cls unit tz	0.055556
bool if we have only bool values but	is bool	0.166667
1-dimensional ndarray only use this	core indexes index set value	0.023810
compute standard deviation of groups excluding missing	group by std ddof	0.166667
return datetimeindex with times to	datetime	0.006711
skipfooter	skipfooter	1.000000
value from 1-dimensional ndarray only use this if	core indexes period index get value series key	0.071429
series columns for	core ndframe	0.005051
float values converted into strings	formats float array formatter get	0.055556
ufunc	core indexes period index array wrap result context	0.041667
categorical adjusted for groupby	indexes categorical index codes for groupby sort	0.333333
be applied on each value to format	value formatter float_format threshold	0.100000
value	core indexes index set value arr key value	0.038462
convert to our native	categorical block to native	1.000000
infer types of	infer types	0.500000
given delimiter string starting at the	rsplit arr pat	0.037037
a new block manager	block manager reduction f axis	0.250000
return the td elements from a	io html frame parser parse td obj	0.083333
a replacement key defined will	translate key key	0.200000
use	index set	0.022727
default implementation of ops	ops op_classes	1.000000
a resample of a	period	0.016667
dicts to timestamp-keyed dict	dict compat d	0.142857
a	core indexes index	0.014085
support a single assignment node like	computation base expr visitor visit assign node	0.500000
dataframe to a variable	core data frame	0.005917
database	table_name	0.166667
nat which has the same length as	ops mixin nat new box	0.050000
simple cross-tabulation	reshape crosstab	0.066667
block for the diff of the	block diff n axis mgr	0.333333
an intervalindex from a	indexes interval index from arrays	0.166667
return datetimeindex with times to midnight length	indexes	0.004651
return an indexer coerced to the codes	categorical maybe coerce indexer indexer	0.125000
view limits to the nearest multiples of base	plotting time series date locator autoscale	0.055556
block manager from a	to manager sdf columns	0.052632
object that can	frame parser build	0.014706
update index attributes e g freq depending	indexes datetime index maybe update attributes attrs	0.200000
node must already exist and	hdfstore	0.014925
window of type window_type and size window on	stats rolling window arg window win_type min_periods	0.100000
col_num	col_num	1.000000
i : int slice	data frame ixs i axis	0.200000
to table in file node must	key value format	0.016667
values at particular time of day	ndframe at time time	0.066667
minimum value of the index	indexes datetime index	0.007634
attempt to construct this type from	dtype construct from string cls	0.166667
if the process of casting data from some	index assert safe casting cls data	0.047619
fast lookup of value from 1-dimensional ndarray	key value	0.011628
index objects contain	core indexes	0.004762
read csv file (discouraged please use :func	frame from csv	0.066667
boxed	core datetime	0.142857
mappings	mappings	1.000000
gets the ordered attribute	ordered	0.017857
series extract groups from the first match	extract	0.030303
elements from the parsed table element	io html frame parser parse tr table	0.200000
infer this column from the table create	index col infer handler	0.200000
memory usage	core indexes range index memory usage deep	0.200000
the indexer fill with the	indexer allow_fill	0.050000
is defined	indexes multi index view cls	0.047619
shape of the values to be at least	core block shape values ndim shape	0.083333
not satisfy the boolean criterion specified by func	core ndframe group by filter func dropna	0.250000
drop 2d from	dropna	0.066667
object datetimeindex timedeltaindex	core dtypes	0.018519
box function to	core indexes datetime index ops mixin box func	0.142857
return index or ndarray filled	datetime index ops mixin	0.029412
wrap op result to have correct dtype	core sparse wrap result name data sparse_index fill_value	1.000000
the union of two index	indexes index union other	0.083333
dataframe to a latex tabular/longtable environment output	io formats latex formatter write result buf	0.200000
this is index for series	core ndframe	0.005051
dataframe in specified column	core data frame set item key value	0.250000
'numpy' library the	validate take with convert convert args kwargs	0.055556
file node must already exist and be	io hdfstore append	0.016667
subject string in the series extract groups	core str extract frame arr	0.047619
an op	computation op	0.166667
perform the reduction type operation if	index ops mixin reduce op name axis skipna	0.083333
retrieve single value at passed index label	core sparse sparse series get value label takeable	1.000000
an ordered multiindex compute the	core indexes multi	0.014493
read csv	data frame from csv	0.066667
return	core indexes	0.019048
our native types format slicing if	native types slicer	0.200000
read csv file	from csv cls	0.066667
built up styles	styler	0.022222
object datetimeindex	dtypes	0.015873
is index for series columns for dataframe	ndframe	0.005025
of	core indexes index set value arr	0.023810
list of sql statement that create	io sqlite table create	0.066667
for running code that expects to	util assert produces	0.071429
with times to	indexes datetime index	0.007634
a scipy sparse coo_matrix to a sparseseries	sparse coo to sparse series a	0.166667
item at selected position	item value allow_duplicates	1.000000
find all occurrences	findall	0.111111
perform the reduction type operation if	ops mixin reduce op	0.083333
recursively evaluate an expression in python	core computation bin op call env	0.250000
function designed to be	apply func	0.027027
left and right sparsedataframe are equal	assert sp frame equal left right check_dtype exact_indices	0.333333
raised matches the expected exception	assert raises contextmanager exception matches	0.142857
use	arr key	0.023810
totally ordered cartesian product of all possible label	sort xnull	0.066667
array interface return my values	indexes multi index array dtype	0.125000
the len of myself	size	0.041667
a scipy sparse coo_matrix to	core sparse coo to sparse series	0.333333
and string-like array to convert object dtype	convert string to object values	0.142857
return an internal format currently just the ndarray	core block internal values dtype	0.111111
curve with holidays between start_date	calendar holidays start end return_name	0.066667
are a series we	core series	0.008000
the last day of the month and day_of_month	semi month	0.083333
the stata date formats to a	io convert datetime to stata	0.111111
from 1-dimensional ndarray only use this	index set	0.022727
tree-like object that	parser build	0.014706
convert datetime-like	indexes period index cmp opname nat_result	0.066667
sheetname	sheetname	1.000000
add the series or dataframe only	ndframe add series or dataframe	1.000000
index row labels	index	0.002004
having a singular 'name' parameter for general index	indexes index validate	0.066667
passed dataframe	core data frame	0.005917
this if you	index set value arr key	0.023810
the stata date formats to	datetime to stata	0.100000
additional handling	indexes	0.004651
to ndarray raises on scalar data converts other	coerce to ndarray cls data	0.166667
a concise listing	list keys width _print	0.111111
yvalues	yvalues	1.000000
index	sparse data frame set value index	0.250000
process of casting data from some accepted	assert safe casting cls data	0.047619
if	core indexes index set value arr key	0.023810
a simple cross-tabulation	columns	0.017857
repeating on the first day of the month	month begin	0.111111
index with	multi index	0.020000
to get	get index	0.200000
generate an array	array nchars size dtype	0.500000
retrieve the metadata for	metadata handler	0.500000
a tz-aware type return	tz tz	0.066667
set/update the info	update info info	0.166667
require the	simple new cls	0.250000
bytes in the	core indexes multi index nbytes deep	0.052632
raise a helpful message about our	error tot_items block_shape axes e	0.333333
count of number of	count arg freq	0.200000
assemble the	assemble	0.142857
render a dataframe to	core data frame to	0.074074
called prior to a	core series array prepare	0.111111
operations to convert timedelta-like to timedelta64	indexes td	0.055556
the 'info axis' see indexing for more	core ndframe keys	0.083333
put method to its values	series put	0.055556
the float values	io formats float array	0.055556
append to table in	io hdfstore append key value format append	0.125000
infer types	parser base infer types	0.500000
detect terminal size and return tuple = width	terminal size	0.166667
plots a series	tsplot series	0.333333
for dataframe major_axis	ndframe iteritems	0.055556
the built up styles to	formats styler	0.021739
bit of a hack to accelerate unioning	union many others	0.040000
from 1-dimensional ndarray only	core	0.001326
the set of unique elements of arr1 and	util equal contents arr1	0.066667
return a fixed frequency datetime index	core indexes bdate range start	0.083333
of query in	index_col coerce_float	0.062500
timedelta-like to	core indexes td	0.055556
lookup of value from 1-dimensional ndarray only use	value arr key value	0.038462
of pattern or regular expression	pat flags	0.052632
convert a numpy / pandas type to	type	0.024390
object that	html	0.011765
might need to coerce	maybe coerce freq	0.125000
new multiindex from	indexes multi index	0.013158
of a single element	ndframe	0.005025
by the given delimiter string starting at the	rsplit arr pat n	0.037037
compute variance of groups	by var ddof	0.166667
alert a user about a malformed row	alert malformed	0.500000
to the new	copy	0.025641
'numpy' library	numpy validate argmin with	0.200000
compute standard deviation of groups excluding missing values	group by std ddof	0.166667
left and right	left right check_dtype	0.300000
available options grouped by prefix	core pp options	0.083333
default implementation of	op_classes	0.142857
provides	period index	0.024390
validates that we have	core categorical validate	0.055556
if label is	label	0.028571
new block manager	core block manager reduction f	0.250000
return our new index	index resampler get new index	1.000000
form the intersection of two	intersection other	0.153846
an asof merge this is similar	reshape merge asof	0.071429
csv file (discouraged please use :func pandas	core series from csv cls path sep	0.066667
each string matches a regular expression	arr pat case flags	0.166667
post process for	mplplot post	0.333333
create a new unit if needed	new cls unit	0.055556
function multiple times in parallel	parallel	0.083333
businesshours	businesshours	1.000000
and day_of_month	semi	0.285714
if you	core indexes index	0.007042
fname are	util validate kwargs fname	0.250000
synonym for :meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace limit	0.333333
for series columns for dataframe and major_axis	core ndframe	0.005051
make a copy	copy	0.012821
a column by	data name data	0.250000
see :class packer for	msgpack	0.022222
of the counts of the function	counts f	0.041667
ndarray only	index set	0.022727
string-like that	string array data encoding	0.038462
have a float key and are not a	key	0.005051
categorical by category value returning a new	inplace ascending na_position	0.071429
end	offset end	0.500000
index objects sortedness of the result is	range index	0.021739
that left and right	left right check_exact	0.333333
packed object return an	packed object_hook list_hook use_list	0.200000
float	formats float array formatter get result	0.055556
to beginning of period	date offset beg	0.166667
index return the	core indexes index	0.007042
ndarray only use	index set	0.022727
method to handle na filling of take	index assert take fillable values indices allow_fill	0.250000
of bytes in the underlying	core indexes range index nbytes	0.052632
draw histogram of	plotting hist frame data	0.200000
execute	execute	1.000000
convert timedelta-like to	td index	0.055556
return copy of the list	sparse sparse list copy	0.500000
tree-like object that	html frame parser build	0.014706
major_axis for	ndframe	0.005025
apply we are stripping all	mixin apply func name	0.050000
dispatch to apply	by mixin apply	0.050000
try to coerce dates and/or numbers	maybe convert objects values convert_dates convert_numeric convert_timedeltas	0.500000
data to ndarray raises on scalar	to ndarray cls	0.166667
to construct this type from	categorical dtype construct from string cls	0.166667
frame table	table	0.021739
underlying data	core indexes datetime index ops mixin	0.029412
of kwargs suitable for initializing or updating-on-copy an	kwargs	0.022222
the	io formats	0.111111
of a categorical	core categorical	0.013889
panel to	panel	0.017857
the shape of the values to be at	shape values ndim shape	0.083333
is defined as	index view cls	0.047619
after a	result	0.049180
openpyxl v2 color objects suitable for initializing	io openpyxl20writer	0.035714
(e	core indexes maybe to	1.000000
set the precision used	io formats styler set precision precision	0.333333
list	list	0.241379
sum of non-na/null values	core sparse sparse array sum axis	1.000000
we always want to return	shallow copy with infer values	0.200000
sure that time and	like indices time	0.125000
of normalized locales that do	util valid locales locales	0.050000
used when a manipulation result has the same	ndframe constructor	0.055556
data for	data col	0.333333
indices of the minimum values along an axis	core indexes datetime index ops mixin argmin axis	0.250000
of value from 1-dimensional ndarray only use this	core indexes datetime index get value series	0.071429
this columns	io index col	0.055556
matrix of scatter plots	plotting scatter matrix	0.500000
after a ufunc	context	0.071429
ensure that we	ops mixin ensure	1.000000
return a new block (of a possibly different	block setitem indexer	0.066667
be	new align inplace	0.125000
value from 1-dimensional ndarray only use	value	0.005155
be used to iterate over the	parser	0.008000
type that can be coerced to periods	core indexes period index simple new cls	0.142857
and the specifications setup the internal grouper	set grouper obj sort	0.250000
new unit if needed otherwise	tzdtype new cls unit	0.055556
to convert datetime-like to datetime64	core indexes dt index cmp opname nat_result	0.066667
index return new dataframe with	core data frame	0.005917
return a fixed frequency datetime index with	core indexes bdate range start end periods	0.083333
array of python datetime date objects (namely	datetime index	0.007042
the process of casting	indexes numeric index assert safe casting	0.125000
ndarray argsort argsorts the	core series argsort	0.083333
registered option	core get registered option	0.500000
index objects contain the same	index ops mixin	0.019231
used to	build	0.013514
to handle na filling of take	core indexes index assert take fillable values	0.250000
csv file	frame from csv cls path header	0.066667
an positional	valid positional	0.250000
this is generally only useful	select column key column	0.142857
process of casting data from some accepted	casting cls data	0.047619
operations to convert timedelta-like	td index cmp opname nat_result	0.055556
process of casting	assert safe casting	0.125000
object datetimeindex	core dtypes	0.018519
coerces data to ndarray raises on	to ndarray	0.166667
from	set value	0.023256
return result block from the	block	0.008197
integer stride	get stride	0.333333
analogous to dataframe apply for	data frame apply func axis broadcast reduce	0.333333
and plural 'names' parameter	names name names deep	0.125000
csv file (discouraged	from csv cls path header sep	0.066667
callable	callable	1.000000
to ndarray raises on	coerce to ndarray	0.166667
null values	args values	0.083333
and right	right check_exact check_dtype	0.500000
convert timeseries to specified frequency	asfreq freq	0.250000
and / or columns using input function	axis copy inplace	0.055556
the float values converted into strings	io formats float array formatter	0.055556
convert argument to timedelta parameters	core tools to timedelta arg unit box errors	0.500000
for header	io pop header	0.100000
indexer like _name in	indexer	0.009174
unit if needed	unit	0.066667
indexer	indexer	0.155963
timestamp	timestamp	0.833333
a string-like that	convert string array data	0.038462
of putmask	putmask	0.055556
an ndarray copy if specified coerce to	index dtype copy	0.043478
new_shape	new_shape	1.000000
compute the sample skewness	core nanskew values	1.000000
downsample the	downsample	0.133333
the index or minimum along an axis	index ops mixin min axis	0.333333
supported for panel objects and will raise	panel to sparse	0.037037
that should not undergo dtype conversions	noconvert	0.142857
invoked by str df in	str	0.017544
to iterate over the dom	doc	0.071429
names	names data	0.083333
rows of other to the	other	0.013514
the block return result block from the	block	0.008197
capture stderr in a buffer so	capture stderr	0.055556
a tree-like object	io html	0.012987
value is	ops	0.076923
which is	to_concat	0.125000
series extract groups from the	str extract	0.035714
generation (e g an	core computation bin op	0.055556
repeat	repeat	1.000000
datetime index with custombusinessday as the default	core indexes cdate range start end periods	0.083333
the manager	mgr data index columns	0.333333
given a tuple of slices/lists/labels/boolean indexer to a	multi index get	0.100000
trims zeros leaving just one before	trim zeros str_floats na_rep	1.000000
table this is generally only useful to	hdfstore select column key column	0.142857
series	data frame	0.005714
whether we have any extra	has resolvers	0.500000
a boolean whether i can attempt conversion	is convertible	0.333333
the process of casting data from some	index assert safe casting cls data	0.047619
operations to convert datetime-like to	cmp opname nat_result	0.066667
attribute if it has one	series	0.006757
concatenate to_concat which has the same	same dtype to_concat	1.000000
string or np dtype to a pandas	to dtype dtype	0.083333
times to midnight	datetime index	0.007042
the best locator based on a	date locator get locator	0.062500
returns numpy array of python datetime	core indexes datetime	0.011494
put single value at passed	value takeable	1.000000
a tree-like object that can be	html frame parser	0.012658
and dtype) in this object	core	0.001326
{group name -> group labels}	core base grouper groups	0.200000
that can be used to iterate over the	io html frame parser build	0.014706
value from 1-dimensional ndarray only use this if	core indexes period index get value series	0.071429
to convert datetime-like	period index cmp opname nat_result	0.066667
load a feather-format object from	io read feather	0.083333
if we can set	util can set	0.125000
a version	block	0.008197
to	io hdfstore append key	0.016667
in	arr pat n	1.000000
dtype types to stata types returns	to stata type dtype	0.250000
apply a function column-wise row-wise or table-wase updating	apply func axis subset	1.000000
sure that time and panels are conformable	time panels	0.250000
file node must already exist	append key	0.016667
index value is found in the	indexes datetime index ops mixin isin values	0.083333
with nat which has the	nat new box	0.050000
comparison operations to convert timedelta-like to	indexes td	0.055556
analogous to ndarray repeat	core indexes datetime index ops mixin repeat repeats	0.333333
date belongs to a leap	leap	0.076923
dispatch to apply we are	group by mixin apply	0.050000
dictionary for the	construct axes dict from	0.250000
if we	core selection mixin is	1.000000
bytes in	core indexes multi index nbytes	0.052632
data to an ndarray	data index dtype	0.250000
function of type	type	0.024390
is	compat chain	0.034483
select values between particular times	datetime index indexer between	0.125000
copy of a series excluding elements from	core series group	0.030303
sql and params args to dbapi2 0	sql params	0.200000
try_cast	try_cast	1.000000
datetimeindexes	indexes datetime index sub datelike dti	1.000000
csv file (discouraged	data frame from csv cls path header sep	0.066667
boolean whether i can attempt conversion to	indexes is convertible to index	0.333333
datetimeindex from one	core indexes datetime index	0.007634
to apply	core group by mixin apply func name	0.050000
strings to	to	0.006329
value occupying requested label default to specified missing	core sparse sparse series get label default	0.083333
allow_fill	allow_fill	1.000000
valid stata	stata writer	0.125000
for ordered	ordered	0.017857
support a single	base expr visitor visit	1.000000
check the key for	key	0.005051
can perform	core indexes index	0.007042
an positional	positional	0.111111
coerces data to ndarray raises on scalar	coerce to ndarray cls	0.166667
builds a concise listing of	list keys width _print	0.111111
function for	comp method	0.333333
custom business month	custom business month end	0.200000
this function is called via the 'numpy' library	with convert convert args kwargs	0.055556
axes	axes dtype	0.666667
file node must	append key value format	0.016667
the reindex	ndframe reindex	0.125000
from maps[0]	compat	0.030303
necessary for making this object picklable	indexes multi index reduce	0.333333
1-dimensional ndarray only use this if you	indexes index set value	0.023810
the operations to the cls evaluate the doc	aggregate operations cls	0.142857
left and right index are equal	almost equal left right check_exact	0.333333
of the flattened values	index ravel order	0.037037
a "pivot" table) based on column	frame pivot index columns	0.111111
is called via the 'numpy' library the	validate take with convert convert args	0.055556
only	index set value arr	0.023810
the	frame parser	0.012500
rec array and create the manager	rec array to mgr data	1.000000
underlying array which by-definition can	ops mixin	0.033333
block manager from	manager sdf	0.052632
already	io hdfstore append key	0.016667
for options	packb	0.022727
given	indexes multi index get	0.100000
downsample the cython	downsample	0.133333
return a tree-like object	html frame parser	0.012658
label_flags indicate there is at least one	label_flags vmin	0.500000
element in the	core	0.002653
(e	maybe	0.090909
of tuples of the (attr formatted_value)	core indexes datetime index ops mixin format attrs	0.142857
fast path for	core single block manager fast	0.250000
'series argmin' is called via the 'numpy' library	argmin with skipna skipna args	1.000000
a hack to accelerate unioning	indexes datetime index union many others	0.040000
returns numpy array of datetime time the	core indexes datetime	0.011494
called after a	index array	0.066667
from a masked rec array	core masked rec array	0.250000
row cross-section from	xs key axis copy	0.333333
fast lookup of value from 1-dimensional ndarray only	indexes period index get value	0.071429
keeps track of whether numexpr was used stores	set test mode v	0.142857
of my hashed values	multi index hashed values	0.166667
o and	packb o	0.055556
type is	dtype is	0.096774
a simple	index	0.002004
to ndarray raises on	core indexes index coerce to ndarray	0.166667
generate bin edge offsets and	generate	0.062500
check if we are a view have a	core ndframe check is	0.200000
via the 'numpy' library	validate take with convert convert args	0.055556
sqltable	sqltable	1.000000
column by inferring dtype	data name data use_dtypes convert_dates	0.500000
is a string	string	0.018868
return a categorical	indexes categorical	0.071429
object	io msgpack packb	0.025641
coerce a string or np dtype to	dtypes coerce to dtype dtype	0.500000
number	number	0.700000
apply the	semi month offset apply index days	0.500000
packed	io	0.003012
dataframe and major_axis	core ndframe	0.005051
the numeric add/sub	index add numeric	0.250000
a dataframe the levels	data	0.009709
datetime objects by input number of periods	periods	0.083333
an item pair from maps[0] raise	compat chain map popitem	0.055556
label	label side kind	0.500000
to run the same function multiple times	num_threads kwargs_list	0.050000
index objects contain the same elements	core indexes float64index	0.166667
translate to postive here	core maybe convert indices indices n	0.166667
arr to have shape new_shape, with a	arr new_shape	0.142857
flattened values of	ravel order	0.037037
a list of tuples of the (attr formatted_value)	core indexes range index format attrs	0.142857
return a string representation for this object	indexes index unicode	0.083333
stata	io stata writer	0.142857
error_classes	error_classes	1.000000
unique elements in the group	core series group by nunique dropna	0.250000
an xlwt	io xlwt writer	0.500000
convert to our native types format slicing if	core float block to native types slicer na_rep	0.250000
from a uri if con is	builder con	0.333333
series extract groups from the first match	core str extract	0.035714
my dtype mapping whether number or name	dtype for t	0.333333
if	set value arr	0.023810
1d array return an	vals	0.090909
the 'usecols' parameter is a callable	io evaluate usecols usecols names	0.083333
add in logical methods	add logical methods cls	1.000000
label_flags indicate there is at least one label	label label_flags vmin	1.000000
a resample of a groupby implementation	resampler groupby	0.166667
exist and be table	append key	0.016667
gets called after a ufunc	indexes index array wrap result context	0.200000
operations to convert datetime-like to datetime64	indexes period index cmp opname nat_result	0.066667
a valid ordered parameter	validate ordered cls ordered	0.058824
to convert timedelta-like	td index cmp opname nat_result	0.055556
a ufunc	series array wrap result context	0.200000
given an interval	get interval	0.125000
read csv file (discouraged	core series from csv cls path sep	0.066667
reindex from a non-unique which categoricalindex's are almost	index reindex non unique target	1.000000
database table	table table_name	1.000000
to dataframe in specified column	data frame set item key value	0.250000
size of the dtype of	itemsize	0.027027
increments between business eom dates	business month end	0.333333
i am never a	is	0.005291
tree-like object that can	html	0.011765
ndarray take	series take	1.000000
that we	ordered	0.017857
to ensure that they are valid stata	io stata	0.071429
unicode normal form for	string methods normalize form	0.066667
normalized locales that do not	util valid locales locales normalize	0.050000
all of the data are	core data frame	0.005917
check if we are a view have	ndframe check is	0.200000
string-like array to convert	core dtypes maybe convert string to	0.250000
running code that expects to raise or	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
a new index	indexes index putmask	0.333333
of normalized locales that	util valid locales locales	0.050000
reduction type operation if we can	index ops mixin reduce op name axis skipna	0.083333
default frequency	freq	0.048387
a spreadsheet-style pivot table as a	reshape pivot table	0.111111
return a fixed frequency intervalindex	indexes interval range start end freq periods	0.333333
cross-tabulation of	crosstab index	0.066667
to ndarray raises on scalar data	coerce to ndarray cls data	0.166667
the minimum	ops mixin argmin	0.166667
try to	try convert data name	0.200000
validate that an positional	core ndframe indexer has valid positional setitem	0.250000
indicies	panel extract axes data axes	0.142857
time series	series	0.006757
axis equal values are	ndframe rank axis	0.250000
cast it to	cast	0.058824
gets	get	0.014286
file node must already exist and be	append key value format	0.016667
functions	rename axis mapper axis	0.333333
smart	smart	1.000000
returns the float values converted into strings using	formats float	0.055556
intervals	intervals	0.555556
header rows in multiindex parsing	pop header name	0.100000
if two indices overlap add suffixes to	overlap	0.047619
the node with the key or	hdfstore get node key	0.083333
plural 'names' parameter for	names deep	0.125000
node	key value format	0.016667
asof	asof	0.583333
be table	format	0.012346
index names to	names data	0.083333
function is called via the 'numpy' library	numpy validate take with convert convert args	0.055556
validates that	categorical validate	0.055556
of multiple	sortorder names	0.500000
compute a simple cross-tabulation of	crosstab index columns	0.066667
prior to a	array prepare result	0.111111
list of objects to a timedelta index	listlike arg unit box errors	0.142857
index objects and sorts if possible	indexes range index	0.021277
handling	core	0.001326
a b	a b	0.083333
i am never	core	0.001326
are index sliceable then return my	to index sliceable obj	0.083333
manager	mgr data	0.333333
to a timedeltaindex	to index other	0.333333
underlying data	core	0.002653
the series extract groups from the first	str extract arr	0.066667
to target time zone	tz axis level copy	0.500000
to create an op	core computation op	0.166667
return a tree-like object that can be	frame	0.009091
op string	bin op generate	0.066667
for the nan/nat from the provided	val	0.058824
1-dimensional	set value	0.023256
a column	col	0.037037
datetimeindex from one time zone to another (using	datetime index	0.007042
dataframe	data frame formatter	0.200000
need to coerce a scalar	core indexes period index coerce scalar	0.250000
read csv file (discouraged please use :func	frame from csv cls path header	0.066667
dtype converting	value dtype errors	0.333333
function to be applied on each value	value formatter float_format threshold	0.100000
compute variance of groups excluding missing	core group by var ddof	0.166667
ndarray copy	dtype copy	0.032258
block	for block cls	0.333333
columns under the index names defaulting	reset index level drop inplace col_level	0.166667
return a tree-like object	html frame	0.014706
category value returning a new	values inplace ascending na_position	0.071429
attempt to construct this type from a	dtype construct from string	0.166667
manipulation result has the same dimensions as the	core ndframe constructor	0.055556
set new labels on multiindex defaults to	core indexes multi index set labels labels level	0.333333
boolean array of whether each index value	indexes datetime index ops	0.034483
array repr of this	index	0.002004
convert timeseries to specified frequency	core ndframe asfreq freq	0.250000
and are a view	view	0.043478
each level the function returns lengths of indexes	io formats get level lengths levels sentinel	0.166667
totally ordered cartesian product of all possible	shape sort xnull	0.066667
group	series group by	0.142857
locale	set locale	0.333333
in xport format return	sas parse	0.066667
whether each index value is found	core indexes datetime index ops mixin isin	0.083333
ufunc	context	0.095238
lookup	value arr key	0.023810
a filtered indexer that doesn't have any missing	from missing indexer tuple indexer axes	0.333333
infer the fill	core dtypes infer fill	1.000000
into	html frame parser	0.012658
this column return the compared against itemsize	col itemsize	1.000000
string cast	maybe cast	0.100000
and 'kwargs' should be empty	func method args kwargs	0.142857
csv file	series from csv cls path sep	0.066667
retrieve pandas object stored in file optionally based	io hdfstore select	1.000000
return if we are a categorical possibility	core dtypes is categorical array	0.500000
make a copy of the sparsearray	copy deep	0.142857
the new	copy	0.025641
and create a new block manager	block manager	0.021277
concatenation of an datetimelike array of	core dtypes concat datetime to_concat axis	0.125000
datetime index with custombusinessday as the	core indexes cdate range start	0.083333
that we have a fully reindex-output to	data frame group by reindex output result	0.045455
block it	block	0.008197
reverse convert a missing indexer which is a	convert missing indexer indexer	0.333333
to midnight length is	datetime index	0.007042
self coded with categories as returned	core categorical codes for groupby sort	0.071429
gets	series	0.006757
autocorr	autocorr	1.000000
our native types format	native types slicer na_rep float_format decimal	0.200000
return	index	0.012024
in xport format	io sas parse	0.066667
validates that we have	core	0.001326
return a	io html frame parser	0.012195
panel objects and will raise an error	panel	0.017857
making this object picklable	core indexes timedelta index setstate state	0.333333
forward fill the values parameters	core resampler pad limit	0.333333
use	indexes index set value	0.023810
has	core series	0.008000
return	core indexes index	0.014085
render a dataframe	io formats data frame formatter	0.600000
the dataframe	core data frame	0.011834
dataframe with labeling information	data frame	0.005714
the best locator based	plotting pandas auto date locator get locator	0.062500
set	set object	1.000000
index for series	core	0.001326
handling as	period	0.016667
'numpy' library the third	numpy validate take with convert	0.055556
object dtype and coerce to a fixed size	itemsize	0.027027
dispatch to apply we are stripping	group by mixin apply func name	0.050000
used to iterate over	frame	0.009091
but using the interpolate machinery	interpolate with fill method axis inplace	0.200000
left and right dataframe are equal	util assert frame equal left right check_dtype check_index_type	0.333333
to compare numeric	dtypes is numeric	0.333333
don't allow a multi reindex on	needs reindex multi axes method level	1.000000
value from 1-dimensional ndarray only use this	period index get value series key	0.071429
string representation	frozen ndarray unicode	0.083333
the first match of regular expression	flags expand	0.200000
be table	key value format	0.016667
whether each index value is found in the	core indexes datetime index ops mixin isin	0.083333
getitem defers to the underlying array which by-definition	ops mixin getitem	0.250000
vector of label values for requested level	level values level	0.250000
len of myself	core categorical size	0.111111
cartesian product of all possible	core get group index labels shape sort	0.200000
is called via the 'numpy' library the third	with	0.034483
datetime	datetime index parsed	1.000000
is	dtype is	0.096774
strings	strings	1.000000
be a	new	0.058824
of microseconds (>= 0 and less than 1	indexes timedelta index microseconds	0.066667
coerce a	dtypes coerce	0.066667
the block manager from a	to manager sdf	0.052632
of the stata date formats to a	datetime to stata	0.100000
datetimelike methods (as we may	datetimelike methods	0.066667
after a	indexes index array wrap	0.100000
an indexer even when non-unique	core indexes index get indexer for target	0.250000
the object is a named tuple	core dtypes is named tuple	0.500000
default values as specified	default values	0.200000
we want to set the _typ here	series set axis axis labels fastpath	0.200000
panels are conformable	panels	0.142857
indexer like _name	indexer cls name indexer	0.083333
input values as an enumerated type	factorize values sort order	0.111111
to table in file	value format	0.016667
the keys will be the	core	0.001326
of bytes in	nbytes deep	0.052632
called via the 'numpy' library the	compat numpy validate take with convert	0.055556
read rows from self f skipping as specified	io fixed width reader get rows n skiprows	0.166667
the header of	io html frame parser parse thead	0.111111
to dataframe	data frame	0.011429
datetimeindex with times to	index	0.002004
array interface	interval index array result	0.125000
for iterables you should probably use pprint_thing()	formats pprint seq seq _nest_lvl max_seq_items	0.333333
table	io hdfstore	0.028986
environment table you can splice	latex	0.076923
parse specified sheet s into a	excel file parse	0.125000
categorical possibility	categorical array	0.333333
an indexer like _name in the class	indexer cls name indexer	0.083333
return a boolean if we	indexes is	0.166667
an index that we can create one from	index value	0.142857
along minor axis	minor xs key	0.500000
casting data from some	casting cls data	0.047619
an intervalindex from a	from	0.030303
beginning of period	offset beg	0.166667
the end of this frame	core data frame	0.005917
more this	ndframe	0.005025
running code that expects to raise	util assert produces warning expected_warning filter_level clear check_stacklevel	0.071429
is zero length	io generic fixed is empty array shape	0.166667
box	indexes datetime index ops mixin box	0.500000
rewrite	core computation rewrite	0.125000
vectorized apply	apply	0.026316
table in	append key value	0.016667
the index	range index	0.021739
called via the 'numpy' library	compat numpy validate take with convert convert	0.055556
new block with	core block make block	0.100000
the float values converted into strings	formats float array	0.055556
compute a simple cross-tabulation	index columns	0.028571
are valid stata	io stata writer	0.142857
validates that we have	core categorical validate ordered cls	0.055556
of my hashed values	indexes multi index hashed values	0.166667
the isin boolean array	core isin comps	0.500000
comparable timezone both for pytz /	index timezone	0.200000
node with the key or	io hdfstore get node key	0.083333
'kwargs' should be empty because all of	kwargs	0.022222
fillna but using the interpolate machinery	core block interpolate with fill method	0.200000
if not on offset	offset	0.055556
indexables	indexables	0.625000
specialized cython	axis out	1.000000
the series extract groups from the first	str extract frame arr	0.047619
iterables you should probably use pprint_thing()	formats pprint seq seq _nest_lvl max_seq_items	0.333333
object o and return packed bytes see	o	0.043478
csv file (discouraged please use :func pandas read_csv	csv cls	0.066667
a	period index	0.073171
to iterate over the dom	io html frame parser build doc	0.125000
3 columns	index columns	0.028571
ndarray copy if specified coerce to	dtype copy	0.032258
string-like that is	convert string array data	0.038462
construct this type from a string raise	categorical dtype construct from string cls string	0.166667
which can be iterated over to get instances	k	0.153846
coerce a string or np dtype to	core dtypes coerce to dtype dtype	0.500000
a string-like that is object dtype	string array data	0.038462
have a float key	key	0.005051
called after a	indexes period index	0.035714
'numpy' library the	with convert convert args	0.055556
dataframe objects and do not propagate nan	core data frame	0.005917
cross-tabulation	crosstab	0.050000
a dataframe as an	data frame to	0.037037
of unique elements of arr1 and	contents arr1	0.066667
construct and returns axes	construct axes	0.333333
unit if needed	cls unit tz	0.125000
copy if specified coerce to the	index dtype copy	0.043478
can safely be cast to an	name val min_val	0.083333
tree-like object	io html frame parser	0.012195
a simple	index columns values	0.037037
return datetimeindex with times to	datetime index	0.007042
from 1-dimensional ndarray only use	indexes index set value arr key	0.023810
sub-classes to define	core data frame gotitem key ndim subset	0.333333
found in the	mixin isin values	0.166667
for a tz-aware type return an encoded zone	io get tz tz	0.066667
number of bytes in the underlying	multi index nbytes	0.052632
applies the put method to its values attribute	series put	0.055556
moving window of type window_type and size window	rolling window arg window win_type	0.100000
a fixed frequency datetime index with business	core indexes bdate range start	0.083333
stride parameters	stride from	0.333333
a fixed frequency datetime index with business	indexes bdate range start end	0.083333
a decorator to take optional positional and	optional args decorator	0.083333
1-dimensional ndarray only use this	indexes index set	0.023810
a tree-like object that	io	0.003012
casting data from	safe casting cls data	0.047619
csv file (discouraged please use :func pandas	from csv cls path header	0.066667
return	core sparse sparse array get	0.500000
need to coerce a	indexes period index coerce	0.125000
install the scalar coercion	core coerce method converter	0.200000
expanding count of number of non-nan observations	expanding count arg freq	0.200000
supported for panel objects and will raise an	panel to	0.027027
new unit if needed	core dtypes datetime tzdtype new cls unit	0.055556
intervalindex from a 1d array of	index from intervals cls data	0.125000
lookup of value from 1-dimensional ndarray only use	core indexes period index get value series	0.071429
the decimal points if need be	io formats	0.027778
hard to parse datetime	core tools parse	0.125000
a tree-like object that can be used	build	0.013514
simple	core reshape crosstab index columns values	0.066667
type to its corresponding json_table	io json as json table type x	0.250000
true if categoricals are the same dtype	is dtype equal other	0.250000
is called via the 'numpy' library the third	take with convert convert	0.055556
accessor object for datetimelike properties of the series	properties	0.046512
with an arbitrary number	io legacy table read where	0.333333
support a single assignment node like	core computation base expr visitor visit assign node	0.500000
fill_value) to a common sparseindex corresponding to	homogenize series_dict	0.047619
of other to the end	other	0.013514
if	dtypes	0.015873
from sif to datetime	elapsed date to datetime	0.250000
of a dataframe sorted by the n smallest	core data frame nsmallest n	0.166667
decorator to capture stderr	util capture stderr	0.055556
unicode normal form for	core string methods normalize form	0.066667
:meth pandas dataframe reset_index function see	level drop name inplace	0.142857
called after a ufunc needs additional	wrap result context	0.029412
if we define an builtin function	grouper is builtin func	0.333333
implementing the	by	0.038462
returns a multi-index suitable for a panel-like dataframe	core panel index time panels names	0.076923
detect terminal size and return tuple	get terminal size	0.166667
index with custombusinessday as the default frequency	indexes cdate range start end periods freq	0.500000
return datetimeindex	indexes	0.004651
return the number of bytes in the	multi index nbytes	0.052632
with times to midnight	datetime	0.006711
of series concat	series	0.006757
is datetimelike (e	maybe to datetimelike data copy	0.142857
i am never	categorical block is	0.100000
we do need a multi reindex	ndframe needs reindex multi	0.333333
of microseconds (>= 0 and	core indexes timedelta index microseconds	0.066667
long-format data to wide generalized inverse of dataframe	lreshape data groups dropna	0.333333
feather-format for	frame to feather	0.333333
values as an enumerated type or	factorize values sort order	0.111111
a simple cross-tabulation	reshape crosstab index columns	0.066667
with the items axis of len	make	0.125000
from one of the stata date	stata	0.022222
have a	categorical validate ordered cls	0.055556
a curve with holidays between start_date	calendar holidays start end return_name	0.066667
a hack to accelerate unioning a	indexes datetime index union many others	0.040000
frequency datetime index with custombusinessday as	indexes cdate range start end periods	0.083333
and	copy	0.012821
comparison operations to convert timedelta-like	td index cmp	0.055556
the flattened values	indexes index ravel order	0.037037
our native types	native types slicer na_rep date_format quoting	0.200000
object with matching indices to	ndframe reindex like other method copy limit	0.111111
implement a datetime64 block with a tz attribute	datetime tzblock	0.100000
method to handle na filling	fillable values indices allow_fill fill_value	0.125000
sql and params args to dbapi2 0	params sql params	0.200000
via the 'numpy' library the third	validate take with convert	0.055556
optional positional and keyword	util optional args	0.066667
series or by	by axis level	0.045455
path's extension against	writer check extension cls	0.125000
a singular 'name' parameter for general index	core indexes index validate names name	0.066667
need to coerce a	coerce freq	0.125000
for accumulating data	list	0.034483
the td elements from a row	parser parse td obj	0.083333
rolling statistical measure using supplied function	rolling apply func name window center	0.333333
fractional part of the given number	frac x precision	0.100000
value from 1-dimensional ndarray only use	key value	0.011628
index with business day as the default	indexes bdate	0.050000
to read from	io read obj	0.058824
strip	strip	1.000000
to table	io hdfstore append key	0.016667
is called upon unpickling	core indexes new interval index cls d	0.333333
process for each axes overridden in child classes	plot logic ax data	0.083333
column from the	io	0.003012
values from this	col convert values	0.333333
called after a ufunc needs	core indexes period index array wrap result context	0.041667
index	util make custom index	0.250000
if key is a deprecated option	deprecated key	0.333333
series columns	core ndframe	0.005051
data to	data index	0.076923
wrap	wrap arr	0.250000
name this allows simpler access to	ndframe setattr name	0.166667
*this is an internal non-public method*	categorical index is dtype compat other	0.500000
column from the table	io table	0.062500
internal method to handle na filling of take	core indexes multi index assert take fillable	0.250000
plural 'names' parameter for	name names deep	0.125000
string representation for a particular object	core dtypes extension dtype bytes	0.142857
table in file node must already	append key	0.016667
an indexer like _name in the	name indexer	0.083333
frequency datetime index with custombusinessday as the	core indexes cdate range start end periods	0.083333
provides a resample of a groupby implementation	period index resampler groupby	0.166667
we have mixed	have mixed	0.166667
after a	indexes index array	0.100000
string representation for a particular object	core dtypes extension dtype repr	0.142857
checks that	json parser check	0.250000
see dataframe pivot	core reshape pivot	0.166667
return the mode s of the dataset	series mode	0.083333
namely intervalindex to control get_slice_bound	index get loc only exact matches key	0.142857
of	crosstab index	0.066667
provides a resample of a	index	0.006012
td elements from a	io html frame parser parse td obj	0.083333
nanoseconds (>= 0 and less than 1	core indexes timedelta index nanoseconds	0.066667
x not in	computation not in x	0.166667
the reduction type operation if we can	index ops mixin reduce op	0.083333
a slice of	core categorical slice slicer	0.111111
category value returning	values inplace ascending na_position	0.071429
manager for running code that expects to raise	util assert produces	0.071429
to convert datetime-like to	core indexes dt index cmp opname nat_result	0.066667
resolve a variable name	computation scope resolve	0.166667
string-like that is object dtype and coerce	io convert string array data	0.038462
(can't do in caller because the	jsontable writer init obj orient date_format double_precision	0.142857
values attribute if it has one	core series	0.008000
booleans	booleans	1.000000
the ftypes (indication of sparse/dense and	core ndframe ftypes	0.055556
provide explict type promotion and	core dtypes maybe upcast values fill_value dtype copy	0.166667
expanding count of number of non-nan	expanding count arg freq	0.200000
the set of unique elements of arr1 and	contents arr1	0.066667
the union of two multiindex objects	core indexes multi index union other	0.066667
of casting data from some	index assert safe casting cls data	0.047619
comparison operations to convert datetime-like	indexes dt index cmp opname nat_result	0.066667
(produce a "pivot" table) based	pivot index columns	0.111111
hash	hash	0.875000
return a slice of	datetime tzblock slice slicer	0.083333
used to iterate over	io html frame parser build	0.014706
the array interface return my values	array result	0.125000
post process for each axes overridden in child	plotting mplplot post plot logic ax data	0.333333
save workbook	openpyxl1writer save	0.333333
slice the info axis of obj with	info slice obj	0.500000
if i want to construct this block as	core categorical block array	0.333333
need to coerce a code to a rule_code	tseries maybe coerce freq code	0.076923
radviz - a multivariate data visualization algorithm parameters	plotting radviz frame class_column ax color	1.000000
get a cross sectional for a given location	core block manager fast xs loc	0.166667
dtype is of the timedelta64[ns] dtype	dtypes is timedelta64 ns dtype	1.000000
select values between particular times	ndframe between	0.100000
to shift without copying data	slice shift	0.083333
of a hack to accelerate unioning a collection	core indexes datetime index union many others	0.040000
float values converted into strings	formats float	0.055556
that we	categorical	0.009615
of the maximum values along an axis	core indexes datetime index ops mixin argmax axis	0.250000
i want to construct this block as	categorical block array	0.333333
a testcase instance if matplotlib isn't installed	util mplskip cls	0.333333
coerce a scalar	period index coerce scalar	0.250000
value to format	float array formatter value	0.250000
of the values to be	core block shape values ndim	0.050000
series columns for dataframe major_axis	core ndframe iteritems	0.055556
provide explict type	dtype	0.010989
series with multiindex to produce dataframe	series	0.006757
if	indexes index set value arr key	0.023810
passed panel or object coercible to	update other join overwrite filter_func	0.055556
cases to get lines 0) there are headers	io python parser get index name	0.166667
that create a	table create	0.043478
change string like dtypes to object for dataframe	invalidate string dtypes dtype_set	0.200000
data to ndarray raises on scalar	core indexes index coerce to ndarray	0.166667
that is datetimelike	to datetimelike	0.125000
is valid	select n is valid dtype	0.500000
return the correct pandassql subclass based on	pandas sql builder con flavor schema meta	0.055556
the ordered attribute	ordered	0.017857
single non-tuple indexer which could be a	indexer indexer target	0.071429
compute a	core	0.001326
for a tz-aware type return an	tz tz	0.066667
called via the 'numpy' library the third	compat numpy validate take with convert convert args	0.055556
compute a simple cross-tabulation	columns values	0.037037
determines if two index objects contain the same	indexes index equals other	0.200000
a tree-like	parser build	0.014706
flattened values of the underlying	core indexes index ravel order	0.037037
we might need to coerce a	coerce freq	0.125000
at particular time of day	ndframe at time time	0.066667
a dense representation	values fill	0.500000
is not supported for panel objects and	panel to	0.027027
sets new categories	core categorical set categories categories fastpath	1.000000
checking function of type	is type	0.125000
filled with nat which has the	nat new box	0.050000
trims zeros and decimal points	indexes trim front strings	1.000000
bytes	io	0.003012
coerce a	coerce	0.051282
values at particular time	core ndframe at time time asof	0.066667
the keys will be	core	0.001326
sanitize an index type to return an	sanitize index data index	0.200000
time index using the index's frequency if available	core ndframe tshift periods freq	0.066667
with optional fill value parameters	fill_value	0.033333
series/index by	str repeat	0.200000
function	function	1.000000
aggregate using input function or dict of	aggregate arg	0.071429
kwargs suitable for initializing	kwargs	0.022222
datetimelike properties of	datetime properties	1.000000
dictionary for the	dict from	0.250000
of	of	0.750000
table	key	0.010101
from 1-dimensional	core indexes	0.004762
scope	scope	0.615385
an additional character to specified side	width side fillchar	1.000000
if	categorical validate ordered cls	0.055556
the info	info	0.090909
this if you	index set value arr	0.023810
perform ljust center rjust against string or list-like	io formats justify texts max_len mode	1.000000
convert to	core float block to	1.000000
header of	html frame parser parse thead	0.111111
indexer and return	indexer axis	0.043478
ndarray only use	set	0.012195
the left and right	left right check_dtype	0.100000
holiday object with a given set a	tseries abstract holiday	0.100000
for categorical columns retain categorical information for	io stata writer prepare categoricals data	0.166667
return the categorical	core categorical	0.027778
err	err	1.000000
datetimelike methods (as we may have	datetimelike methods cls	0.066667
multiindex from the cartesian product of	core indexes multi index from product	0.166667
float values converted into	formats float array formatter get result as array	0.055556
index with target's values (move/add/delete values as	indexes multi index	0.013158
the ndarray flags	flags	0.029412
is an	indexes categorical index	0.095238
of sparse/dense and dtype)	ndframe	0.005025
business day as the default frequency	end periods freq	0.062500
determines if two index	core indexes index equals other	0.200000
dict of the counts of the	counts f	0.041667
datetimelike (e	maybe to datetimelike data copy	0.142857
substitution	substitution	1.000000
that can be used to	frame parser build	0.014706
with times to midnight length	core indexes datetime	0.011494
we need to coerce a scalar to	period index coerce scalar to	0.071429
to read from a url file	io read	0.038462
find a common data type among the given	find common type types	1.000000
of value from 1-dimensional ndarray only	core indexes period index get value series key	0.071429
the underlying array which by-definition	index ops mixin	0.019231
re-evaluate the obj with a	and	0.066667
time	like indices time	0.125000
midnight length	datetime	0.006711
dtype types to stata types returns the byte	to stata type dtype column	1.000000
package	package	0.352941
end of this frame	core data frame	0.005917
the block manager from a dataframe of series	manager sdf columns	0.052632
object	parser	0.008000
from 1-dimensional ndarray only use this	core indexes index set value arr key	0.023810
a particular axis with optional set logic along	reshape concat objs axis join join_axes	0.333333
swap level i	multi index swaplevel i	0.333333
algos groupsort_indexer implements counting sort and	sorter group_index ngroups	0.250000
construct this type from a	interval dtype construct from	0.166667
totally ordered cartesian product of all possible label	core get group index labels shape sort xnull	0.066667
from a 1d array of	from intervals	0.125000
the function in blockmanager	block manager	0.021277
type and coerce into matrices	core arrays to mgr arrays arr_names	0.250000
for header rows in multiindex parsing	pop header name	0.100000
after	core indexes period	0.032258
la numpy percentile	q interpolation	0.500000
1-dimensional ndarray only use this if you	index set value arr	0.023810
of the _apply kwargs	func name window center	0.058824
this is defined as a copy with	multi index view cls	0.047619
set	wrapper set	1.000000
particular axis	axis	0.034091
and return the numexpr condition and filter	core computation expr evaluate	0.200000
is datetimelike (e	indexes maybe to datetimelike	0.142857
add in the numeric add/sub methods	numeric methods add	1.000000
type window_type and size window on	window arg window win_type	0.100000
of value from 1-dimensional ndarray only	period index get value series	0.071429
format return python date	date datestr	0.333333
values as an enumerated type	core factorize values sort order	0.111111
additional	period index array wrap result	0.050000
a string-like that	convert string array	0.038462
panel to	core panel to	0.027027
bind a method to class	compat bind method cls name	0.200000
block and are a	block manager	0.021277
bool of a single element	bool	0.043478
fill value for the nan/nat from the provided	fill value val	0.142857
found in the	mixin isin	0.166667
outside world format currently just the	block external values dtype	0.125000
passed a manager and a axes dict	init mgr mgr axes	0.333333
from 1-dimensional ndarray	set	0.012195
return result block	core block	0.021739
compose2	compose2	1.000000
function has at most len(compat_args) arguments and whether	util validate args fname args max_fname_arg_count compat_args	0.333333
ndarray	core sparse sparse series	0.125000
series dropna if fill_value=nan returns a dense series	sparse series dropna axis inplace	1.000000
needs additional handling	core indexes	0.004762
series extract groups from the first	str extract arr	0.066667
named	named	0.857143
a fixed frequency datetime	range start	0.066667
make a scatter plot from two dataframe columns	plotting scatter plot data x	0.125000
ndarray only use this if you	core indexes index set	0.023810
validate the 'usecols' parameter	io validate usecols arg usecols	1.000000
tree-like object that can be used to	io html frame parser build	0.014706
wrap comparison operations to convert timedelta-like to timedelta64	core indexes td	0.055556
from ndarray or list of	data index columns	0.125000
that can	io html frame	0.012987
only if the process of casting	core indexes numeric index assert safe casting	0.125000
have a astypeable	astype dtype	0.166667
ndarray only use this if	core indexes index set value arr	0.023810
an ndarray copy	copy	0.012821
we have a	categorical validate ordered	0.055556
return label for first non-na/null value	series first valid	0.250000
returns the float values converted	float array formatter get result as array	0.055556
invoked by str df in both py2/py3	core dtypes extension dtype str	0.250000
index objects contain the same	indexes range index	0.021277
defined as a copy	view cls	0.047619
of regular expression pat	pat flags expand	0.200000
j do not change	j	0.034483
a 2d-nd reshape operation on a	reshape nd axes	0.250000
create an	core computation	0.047619
slicer	slicer	1.000000
the block	col create for block cls	0.333333
at particular time of day e g	ndframe at time time	0.066667
prior to	core series array prepare	0.111111
interpolate values according to	resampler interpolate method axis limit	0.166667
same as values	series get values	0.500000
a slice of my	tzblock slice slicer	0.083333
table in file node must already exist and	append key value	0.016667
the datetime format of a given datetime string	datetime format dt_str	0.250000
resolve a variable name in	resolve	0.090909
the gradientfill stop	stop cls	0.066667
converts json lists to line delimited	convert to line delimits s	0.166667
ndarray only use	categorical index	0.045455
dataframe	data frame to	0.037037
a a left and right	cls left right	0.333333
round the fractional part of the given	core reshape round frac x precision	0.200000
of non-na/null observations in sparsearray if the	core sparse sparse array count	0.333333
a string-like that is object dtype and coerce	convert string array data	0.038462
array interface return my values	sparse sparse series array result	0.250000
return a tree-like object that can be	frame parser build	0.014706
category value returning a new	ascending na_position	0.071429
casting data from some accepted	indexes numeric index assert safe casting cls data	0.047619
state from the	io	0.003012
we	core is	0.400000
locator based on a	date locator get locator	0.062500
returns the float values	formats float array formatter get result as	0.055556
timedelta-like to timedelta64	core indexes td index cmp opname nat_result	0.055556
the array interface return my	core sparse sparse series array result	0.250000
cached item item represents	ndframe iget item cache item	0.090909
more easily perform multi-index slicing examples	index slice	0.166667
apply a function	styler apply func	1.000000
to cast the array/value to a datetimelike dtype	dtypes maybe cast to datetime value dtype errors	1.000000
a user about a malformed	malformed	0.066667
fixed	range start end periods	0.133333
a spreadsheet-style pivot table as a dataframe the	reshape pivot table data values index columns	0.166667
accelerate unioning a	datetime index union many others	0.040000
resample	timedelta	0.022222
group return result as series or by a	groupby by axis level	0.045455
method to class python 2 and python 3	method cls	0.076923
header	parser parse thead	0.111111
a class for writing stata	to stata	0.058824
using input function	axis mapper axis copy inplace	0.055556
series or by a	by axis	0.045455
reverse convert a missing indexer which is a	core convert missing indexer indexer	0.333333
the value inplace return	value mgr	0.083333
support a unified inteface datetimelike index	datetime index	0.007042
manage style and color based on	plotting mplplot apply style colors colors kwds col_num	0.142857
lookup of value from 1-dimensional ndarray only	core indexes period index get value series	0.071429
for writing stata binary	data frame to stata fname	0.200000
ndarray raises on scalar	ndarray	0.142857
of the flattened values of	indexes index ravel order	0.037037
called prior to a	array prepare	0.111111
read csv	from csv cls path sep parse_dates	0.066667
series	get series	0.250000
initializes or resets _id attribute with new	core indexes index reset identity	0.250000
return result block from	block	0.008197
already exist and be table	append key	0.016667
returns *copy*	indexes frozen ndarray values	0.250000
comparison operations to convert timedelta-like	core indexes td index cmp opname	0.055556
x in y if	computation in x y	0.047619
try several cases to get	get index name columns	0.200000
we	validate	0.027778
resample of a	period index resampler	0.062500
compute the symmetric difference of two index objects	core indexes index symmetric difference other result_name	0.166667
the 'numpy' library the third	compat numpy validate take with convert convert	0.055556
close the handle	io stata reader close	0.200000
dom	frame parser build doc	0.125000
dataframe that is intended to operate elementwise i	core sparse sparse data frame applymap	1.000000
as sparsifying is not supported for panel objects	panel	0.017857
subclass of styler with a custom	io formats styler from custom	0.200000
previous	tseries previous	1.000000
delimiter string starting at the	rsplit arr pat	0.037037
to each	apply	0.026316
to cast the array/value to a datetimelike dtype	maybe cast to datetime value dtype	1.000000
frequency timedelta index with day	indexes timedelta	0.083333
called prior to a ufunc	series array prepare result context	0.333333
'numpy' library the third	with convert convert args kwargs	0.055556
be used to iterate	parser	0.008000
the given offset/observance to a	rule	0.050000
an positional indexer cannot enlarge its	has valid positional setitem indexer indexer	0.052632
datetimeindex with times	core indexes	0.004762
a date_format	date_format	0.058824
of x in y if possible	computation in x y	0.047619
to work as desired	core indexes index getitem key	0.166667
table in file node must already exist and	hdfstore	0.014925
a datetimeindex but	datetime	0.006711
perform the reduction type operation if we	ops mixin reduce op	0.083333
formatter function for a range of timedeltas	format timedelta64 values nat_rep box	0.125000
the intersection of two index	core indexes index intersection other	0.166667
the kinds allowable columns for this	io table queryables	0.055556
read csv file (discouraged please use :func pandas	data frame from csv cls path header	0.066667
sets names on levels warning mutates!	set names names level	0.200000
determine	match	0.090909
series arithmetic operations to avoid code duplication	op name str_rep default_axis	1.000000
handles preprocessing for cut where we	reshape preprocess for cut	0.200000
as a string using various backends	parser engine truediv	0.333333
already exist and be table	io hdfstore append	0.016667
a	core categorical block	0.100000
available options grouped	options	0.041667
can be used	build	0.013514
write a dataframe to the	io to	0.200000
the operations to the cls evaluate the	operations cls use_numexpr	0.142857
series using matplotlib / pylab	column by grid	0.200000
set a locale without throwing an exception	set locale lc	1.000000
apply of dateoffset to datetimeindex	offset apply index	0.250000
sets names on	indexes multi index set names names level	0.200000
locator based on a distance	locator dmin dmax	0.250000
str_rep	str_rep	0.833333
a manager and a axes dict	mgr mgr axes dtype copy	0.333333
from 1-dimensional	core indexes index set value arr key	0.023810
values at particular time of day e g	core ndframe at time time	0.066667
a boolean whether this axes needs validation for	indexer should validate iterable	0.166667
series to the given number of	series	0.006757
round a	round	0.090909
cast	base cast types	1.000000
a tree-like	html frame parser build	0.014706
a tree-like object that can be	parser build	0.014706
iter1 iter2 iterables that	util assert copy iter1 iter2	0.166667
return my cacher or none	ndframe get cacher	1.000000
and	value format	0.016667
package is installed	package pkg_name	0.083333
from each group if	group by	0.016129
only	key	0.005051
if we are index sliceable then return my	to index sliceable obj	0.083333
resample	resampler	0.053571
for panel objects and will raise	core panel to	0.027027
fill with the fill_value	allow_fill fill_value	0.250000
fill missing values parameters	core resampler fillna method limit	1.000000
v should	indexes frozen ndarray searchsorted v	0.033333
codes by the indexer	nd indexer	0.015152
new	tzdtype new cls	0.333333
that dict has only	json parser	0.071429
or a numpy dtype	dtype dtype	0.100000
a new unit if needed	core dtypes datetime tzdtype new cls unit tz	0.055556
to be applied on each value to	array formatter value formatter float_format threshold	0.100000
raise this error	error	0.028571
interpolate values	interpolate method axis limit	0.166667
additional handling as	array	0.013889
arr for	arr	0.013699
a string-like that is object	string array	0.038462
return the correct pandassql subclass based on	io pandas sql builder con flavor schema meta	0.055556
template and	template	0.142857
return the ftypes (indication of sparse/dense and dtype)	ftypes	0.043478
lookup of value from 1-dimensional ndarray	datetime index get value series	0.071429
using the index's frequency if available	core ndframe tshift periods freq axis	0.066667
symmetric difference of two index objects	indexes index symmetric difference other	0.166667
available options grouped by prefix	pp options	0.083333
locations of to_match into	core match to_match	0.333333
going to write this as	write	0.017857
the reduction type operation	index ops mixin reduce op name	0.083333
a tz-aware type	get tz tz	0.066667
node	hdfstore append key	0.016667
a given axis	axis method	0.250000
a valid ordered	ordered cls ordered	0.058824
particular panel invoked by unicode df	core panel unicode	0.166667
bit of a hack to accelerate unioning a	datetime index union many others	0.040000
dtype and	get empty dtype and	0.125000
synonym for as_blocks()	core ndframe blocks	0.166667
to a html table	to html classes notebook border	1.000000
ensure that an array-like object is	dtypes ensure	0.200000
that we have a	core categorical validate	0.055556
delimiter string starting at the	rsplit arr pat n	0.037037
index and	indexes index validate	0.066667
'info axis' see indexing for	ndframe keys	0.083333
index objects contain the	indexes float64index	0.166667
scatter plot from two dataframe columns parameters	plotting scatter plot data	0.125000
after a ufunc needs additional	period index array wrap result context	0.041667
masked rec array	core masked rec array	0.250000
casting data from some accepted dtype	assert safe casting cls data	0.047619
necessary for making this object picklable	sparse array reduce	0.333333
validate that	validate	0.027778
to table in file	hdfstore append	0.016667
use	core	0.001326
of the values to be	shape values	0.050000
additional handling as	period index array	0.050000
to the scope	computation scope	0.166667
cacher and are of mixed type	chained assignment possible	0.142857
we	core categorical validate	0.055556
font	font cls	0.333333
or values in the series	core series	0.008000
return an array of	hash array vals	0.083333
data (produce	data	0.009709
series to dataframe in specified	data frame set item key	0.250000
downcast	downcast	1.000000
for panel objects and	core panel	0.019231
if we if the passed type is an	dtypes interval dtype is	0.066667
nanoseconds	nanoseconds	1.000000
new block manager	block manager reduction	0.250000
a class for writing	writer	0.111111
of unique elements in the object	core index ops mixin nunique dropna	0.083333
take a string-like that is object dtype and	io convert string array data	0.038462
normalized locales that do not throw an	util valid locales locales	0.050000
return datetimeindex with times to midnight length is	indexes	0.004651
fast	set value arr key	0.023810
group	group	0.216216
file	io	0.006024
specialized shift which produces a	index ops mixin shift n	0.250000
block and	core block	0.010870
index with business day as	indexes	0.004651
take the codes by the indexer	core categorical take nd indexer	0.333333
index objects contain	indexes datetime index ops	0.034483
handling	core indexes period index array	0.050000
try to parse a	try convert data name	0.200000
nat which has the same	mixin nat new	0.050000
returns a curve with holidays between	tseries abstract holiday calendar holidays start end return_name	0.066667
sets index names to 'index'	names data	0.083333
return a tree-like	io html frame parser build	0.014706
exist and be	io hdfstore append key value	0.016667
at the requested level the result will respect	sortlevel level ascending sort_remaining	0.166667
see :class	io msgpack packb	0.025641
pairwise correlation	frame corr	0.500000
the values to be at least 1	block shape values	0.050000
a feather-format	feather	0.050000
node must already exist and be	hdfstore	0.014925
the reduction type operation	core categorical reduce op	0.500000
table in file node must already	key	0.005051
to : write out the indicies	write	0.017857
table in file node must	key value	0.011628
new dataframe with labeling information	core data frame	0.005917
function of type t or tuple	core computation is type t	0.083333
return a dense representation	array get values fill	1.000000
csv file (discouraged please	core series from csv	0.066667
tokenize a python source code string	computation tokenize string source	1.000000
of lists/tuples into dataframes with proper type inference	io text parser	0.333333
the block_manager axis	ndframe get block manager axis axis	0.166667
sure that time and panels are conformable	core ensure like indices time panels	0.250000
pivot to the labels shape	core block2d to blocknd values placement shape labels	1.000000
called via the 'numpy' library the	take with convert convert args	0.055556
return a	sparse sparse array get	0.500000
slice the info axis of obj with indexer	info slice obj indexer	1.000000
csv	series from csv	0.066667
append to table in file node must already	hdfstore append key value format append	0.125000
where elements of v	searchsorted v	0.033333
dataframe	to frame	0.125000
types format slicing if desired	types slicer na_rep quoting	0.200000
temporary variable to the	tmp value	0.166667
the indices that would sort the index	core indexes range index argsort	0.166667
slice the info axis of	info slice	0.500000
return an	to	0.006329
index or ndarray filled	indexes datetime index ops mixin	0.029412
try to cast the array/value to	maybe cast to	0.250000
list	tolist	0.071429
returns numpy array of datetime	indexes datetime	0.011494
a string-like that is object dtype and	io convert string array data encoding	0.038462
exist and be table	io hdfstore append key	0.016667
the index is monotonic	core indexes index is monotonic	0.200000
according to the how return	core window convert freq how	0.250000
at particular time	core ndframe at time time	0.066667
of value from 1-dimensional ndarray	indexes datetime index get value series	0.071429
the slice dictionary for these axes	for slice axes	0.333333
our native types format slicing if	native types slicer na_rep date_format	0.200000
sunday use day thereafter	sunday to	0.200000
is thrown by an error is encountered	error	0.028571
fixed frequency timedelta index	core indexes timedelta range start end periods	0.083333
under the index	reset index	0.125000
table in	hdfstore append key value format	0.016667
process of casting data from some	casting cls data	0.047619
convert string-like and string-like array to convert	convert string to	0.250000
same type as the index (so we don't	at indexer convert key key is_setter	0.090909
return result block s from	core block where other cond align raise_on_error	0.066667
:meth pandas dataframe reset_index function	series reset index level drop name inplace	0.142857
apply aggregation function or functions	aggregate arg	0.071429
the data pointer of the underlying data	index ops mixin data	0.333333
'name' parameter for general index and	core indexes index	0.007042
lookup of value from 1-dimensional ndarray only	key value	0.011628
searchpath	searchpath	1.000000
in file node must	io hdfstore append key value	0.016667
a resample	resampler	0.053571
node must already exist and be table	append key	0.016667
node must already exist	format	0.012346
mid	mid	1.000000
using input	axis copy inplace	0.055556
index or ndarray filled	core indexes datetime index	0.007634
long-format data to wide generalized inverse of dataframe	lreshape data groups dropna label	0.333333
convert to our native types	core categorical block to native types slicer na_rep	0.250000
to iterate	io html	0.012987
for more this is index for series	core ndframe	0.005051
form the intersection of	intersection	0.083333
sorted copy of index	index ops mixin sort values return_indexer ascending	0.500000
styler with a	styler	0.022222
specified type parameters	cast_type column	0.500000
coerces data to ndarray raises on scalar	to ndarray	0.166667
read csv file (discouraged please use :func	csv cls path sep	0.066667
a fixed frequency datetime index with custombusinessday as	indexes cdate range start end periods	0.083333
with null values converted	args values	0.083333
interval objects	core indexes interval index	0.062500
from a	from string	0.500000
downsample the cython	resampler downsample	0.200000
fillna(method='ffill') <dataframe fillna>	ffill axis	1.000000
a boolean indicating whether the	io	0.003012
a function to create an	computation	0.038462
already exist and be	append key value	0.016667
string-like that is object dtype	string array	0.038462
replace extra whitespace inside	io remove whitespace s regex	0.200000
a panel-like dataframe parameters	panel index time panels names	0.076923
fixed frequency intervalindex	core indexes interval range start end freq periods	0.333333
and return the op string for	computation bin op generate	0.066667
dataframe pivot	core reshape pivot index columns	0.333333
called upon unpickling	indexes new interval index cls d	0.333333
infer the fill value for the nan/nat from	core dtypes infer fill value val	0.500000
interpret the dtype from a scalar parameters	dtype from scalar val pandas_dtype	1.000000
to 'index' for regular or 'level_x'	io json	0.062500
attempt to construct this type from	interval dtype construct from	0.166667
by definition have do	io formats datetime64formatter format strings	0.090909
attributes e g freq depending	attributes attrs	0.166667
number of bytes in the underlying	index nbytes	0.052632
reduction type operation if	index ops mixin reduce op	0.083333
type inference propagate any values that are	values placement ndim	1.000000
convert tz-aware axis to target time zone	ndframe tz convert tz axis	0.200000
can be used	parser	0.008000
handle na filling of	fillable values indices	0.125000
fixed frequency datetime index	indexes bdate range start end periods	0.083333
see	io msgpack packb	0.025641
from each group if n is an	core group by	0.027778
concatenation of an datetimelike array	core dtypes concat datetime	0.125000
the binary feather-format for dataframes	frame to feather fname	0.083333
forward to the	sparse sparse series get val at loc	0.250000
draw a matrix of	matrix frame alpha figsize	0.500000
return label for last non-na/null value	core series last valid index	0.250000
value from 1-dimensional ndarray only	datetime index get value	0.071429
is our asof	asof	0.083333
to coerce a	coerce	0.051282
evaluate the block return result block from	block eval func other raise_on_error try_cast	0.333333
columns excluding na/null values parameters	data	0.009709
object invoked by str df in both py2/py3	dtypes extension dtype str	0.250000
of sparse/dense and dtype) in this object	core	0.001326
in the series extract groups	core str extract frame	0.047619
cross sectional for a given location in	core block manager fast xs loc	0.166667
all the top-level nodes (that are not themselves	io hdfstore groups	0.333333
parameter for general index and	indexes index validate names	0.066667
read csv file (discouraged	series from csv cls	0.066667
intervalindex return the corresponding interval with closed bounds	interval closed bounds interval	0.200000
sets index names to	names	0.038462
of each interval in	indexes interval	0.062500
called after a	wrap	0.057692
lookup of value from 1-dimensional ndarray only	indexes datetime index get value series key	0.071429
an	core indexes categorical index	0.095238
for	core arith method	0.333333
of terms for instances of pandasobject	core computation any pandas objects terms	0.250000
fillna but using the interpolate machinery	interpolate with fill method	0.200000
compare 2 col items	io data col eq other	1.000000
a series with the transformed values	core resampler transform arg	0.200000
fixed frequency datetime index with day	indexes period range start end periods freq	0.083333
o and return packed bytes see	msgpack packb o	0.055556
built up styles to html	formats styler	0.021739
get integer location for requested label	indexes timedelta index get loc key method tolerance	1.000000
of arr1 and	equal contents arr1	0.066667
array of whether each index value is found	index ops mixin isin	0.083333
of series concat	get series	0.250000
according to indexer	indexer axis	0.043478
with times to midnight length	indexes datetime	0.011494
data (produce a "pivot" table) based	data frame pivot index columns	0.200000
the mode s	mode	0.100000
packed object return	packed object_hook	0.200000
moving window of type window_type and size window	stats rolling window arg window win_type	0.100000
object	object values	0.500000
node must already exist and	key value format	0.016667
a tree-like object that can	io html	0.012987
return the join indexers	of merge get join indexers	1.000000
object in order to correctly handle	resampler convert obj obj	0.166667
pprinter for iterables you should probably use pprint_thing()	pprint seq seq _nest_lvl max_seq_items	0.333333
be used to	frame parser build	0.014706
if we do need a multi reindex this	series needs reindex multi axes method level	0.333333
names	default names	0.083333
categorical by default	categorical sort	0.166667
true if this is	is	0.010582
a fully reindex-output to	data frame group by reindex output result	0.045455
ensure that if we don't have an index	core data frame ensure valid index value	1.000000
datetimelike properties	properties	0.046512
return dense representation	dense	0.125000
take a string-like that	io convert string array	0.038462
a tz-aware type return an encoded	io get tz tz	0.066667
df in both py2/py3	core dtypes extension dtype	0.333333
fill	fill_value	0.033333
with_indexers	with_indexers	1.000000
the value omitting na/null values	axis kind order	0.250000
and	io	0.003012
called	indexes index array	0.100000
internal property	core ndframe	0.005051
csv file (discouraged please use :func	core series from csv cls	0.066667
a	io html frame parser	0.012195
maps[0]	compat	0.060606
load a feather-format object	io read feather	0.083333
on 3 columns of this	index columns	0.028571
csv file (discouraged	series from csv cls path sep parse_dates	0.066667
to capture stderr in	util capture stderr	0.055556
frequency datetime index with custombusinessday as the	indexes cdate range start end periods	0.083333
datetime	datetime	0.080537
locale	util set locale	0.500000
frequency datetime index with business day	core indexes bdate	0.050000
object close it if we opened it	io to hdf path_or_buf key value mode	0.166667
is called via the 'numpy' library the third	numpy validate take with	0.055556
times	core indexes	0.004762
node must already exist and	append key value	0.016667
value from 1-dimensional ndarray only use this if	categorical index get value series key	0.100000
the starargs attribute was changed to	base expr visitor visit call 35 node side	0.066667
times to midnight length	datetime	0.006711
extract from a masked rec array and	core masked rec array to	0.090909
of the flattened values of the underlying	index ravel order	0.037037
all of the _apply kwargs	name window center	0.071429
indices where elements of v should be inserted	ndarray searchsorted v	0.033333
spreadsheet-style pivot table as a dataframe the	core reshape pivot table data values	0.166667
a boolean if this key is in	contains key	0.125000
eq	eq	1.000000
to be returned from apply if as_index=true	index with as	0.200000
on 3 columns	index columns	0.028571
convert to our native types format	categorical block to native types	0.250000
dispatch to apply we are	core group by mixin apply func	0.050000
internal implementation	index ops mixin values	0.500000
compat for the values	values	0.008547
create and return the op string for	computation bin op generate	0.066667
boolean array of whether each index value is	index ops	0.033333
compute a simple cross-tabulation	crosstab index columns values	0.066667
interpolate values	resampler interpolate method axis limit	0.166667
block of same	block same	0.333333
convert datetime-like	index cmp opname nat_result	0.066667
interpolate values according	interpolate method axis limit inplace	0.166667
index with business day as the	indexes	0.004651
applying func to each columns	data frame apply columns func	1.000000
sub-classes to	core data frame gotitem key ndim subset	0.333333
to a latex tabular/longtable environment output	formatter to latex column_format longtable encoding multicolumn	1.000000
of value from 1-dimensional ndarray only use this	core indexes period index get value series	0.071429
of x not in y if possible	not in x y	0.066667
function is called via the 'numpy' library the	with convert	0.055556
a scatter plot from two dataframe	plotting scatter plot data x y	0.125000
function of type t or tuple of types	computation is type t	0.083333
& release	data col take	0.333333
input values as an enumerated type or	factorize values sort order	0.111111
helper function that converts json lists to	convert to	0.090909
update index attributes e g	core indexes index maybe update attributes attrs	0.200000
load	compat load	0.200000
purely integer-location based indexing for selection	i loc indexer	0.142857
to datetimeindex	indexes period index to	1.000000
lookup	set value	0.023256
a fixed frequency datetime index with business day	core indexes bdate range start	0.083333
wrap comparison operations to convert timedelta-like to timedelta64	td index cmp opname nat_result	0.055556
file	hdfstore append key	0.016667
string representation for this object	indexes index unicode	0.083333
dict of array-like or	dict cls	0.166667
an ordered multiindex compute	core indexes multi index	0.013158
create a new block manager	block manager	0.042553
concatenate two or more series	core series append to_append ignore_index verify_integrity	1.000000
to coerce a code to a	tseries maybe coerce freq code	0.076923
a fixed frequency datetime index	core indexes bdate range start end periods	0.083333
get	core dtypes get	0.500000
to construct this type from a string	dtypes interval dtype construct from string cls string	0.166667
node must already exist and be	append key	0.016667
array interface	core indexes interval index array result	0.125000
long stacked format dataframe	core data frame to	0.037037
any	block convert	1.000000
an expression in	core computation	0.047619
the slice	slice	0.076923
modify block in-place with new item value	object block set locs values check	0.125000
a locale	util set locale	0.500000
labeling information in the columns under the index	reset index	0.125000
*not* the same	other	0.013514
represent	indexable	1.000000
table in file	io hdfstore append key value	0.016667
series or by a series of	by axis level	0.045455
labels returning a dataframe	data frame	0.005714
slice	tzblock slice slicer	0.083333
to handle na filling of	fillable	0.095238
integer-location based	i	0.041667
determines if two index	range index equals other	0.200000
convert to our native types	categorical block to native types slicer na_rep	0.250000
index using the index's	core ndframe tshift periods	0.166667
string-like	string array data encoding	0.038462
function for series	core comp method series	0.333333
times to	indexes datetime index	0.007634
dtype)	core	0.001326
index objects sortedness of the	core indexes range index	0.021277
try hard to parse datetime	core tools parse	0.125000
indexable columns with an arbitrary number of	io legacy table read where columns	0.111111
an error is encountered in pd	parser error	0.055556
over the blocks collect and create a	consolidate transposed	0.062500
a tree-like object	frame parser	0.012500
return the mode s	series mode	0.083333
ndarray only use this if you	arr key	0.023810
datetimeindex	core indexes datetime	0.022989
set of unique elements of arr1 and arr2	contents arr1 arr2	0.066667
from 1-dimensional	indexes index set value arr key	0.023810
indicies translate to postive here	maybe convert indices indices n	0.166667
nrows ncols - number of	nrows ncols	0.250000
we are positional indexer	core indexes index validate indexer form key kind	0.500000
a ufunc needs additional handling as	array wrap result context	0.029412
categorical if not already	categorical arr	0.125000
infer better dtype for object	core ndframe convert datetime numeric timedelta coerce	0.071429
with times to midnight length is	core indexes	0.004762
csv	csv cls path sep parse_dates	0.066667
only use this	categorical	0.009615
if label is not contained	label	0.028571
extract from a masked rec array and	masked rec array to	0.090909
membership of x	x	0.086957
keeps track of whether numexpr was	core computation set test mode v	0.142857
comparison operations to convert timedelta-like to timedelta64	indexes td	0.055556
panel to a separate excel	panel to excel path na_rep engine	0.111111
the view limits	date locator autoscale	0.055556
return a dense representation	core sparse sparse array get values fill	1.000000
table as a dataframe the levels in the	table data values index	0.200000
return my self as a sparse	sparse sparse series as sparse	0.250000
if it	series	0.006757
in file node must	hdfstore append	0.016667
with times	core indexes datetime	0.011494
update index attributes e g freq depending	timedelta index maybe update attributes attrs	0.200000
values to	values	0.017094
obj and	obj	0.033333
underlying array which by-definition can	core indexes datetime index ops mixin	0.029412
infer types of values	io parser base infer types values	1.000000
applies the put method to its values	put	0.043478
union of two	indexes multi index union other	0.066667
checks whether the	io validate	0.031250
of self coded with categories as returned by	core categorical codes for groupby sort	0.071429
internally consolidate chunks of	core sparse sparse list consolidate inplace	0.500000
it to timedelta	timedelta	0.022222
based on our axes compute the expected nrows	io table nrows expected	0.142857
this is index for series	core	0.001326
check that left and right index are equal	assert almost equal left right check_exact	0.333333
apply mapper function to	map mapper	0.250000
value	set value arr key value	0.038462
is of	dtypes is	0.090909
if the levels	levels	0.083333
for creating a subclass of styler with	formats styler	0.021739
'numpy' library the third	take with convert convert args	0.055556
returns a dataframe with the rows/columns switched	sparse data frame transpose	0.333333
into	index_col coerce_float	0.062500
validate that an positional	positional setitem	0.250000
on 3 columns	columns values	0.037037
putmask that potentially upcasts the result parameters	core dtypes maybe upcast putmask result	0.200000
from 1-dimensional ndarray only use this if	index	0.002004
can be used to iterate over the dom	build doc	0.125000
an indexer even	indexes index get indexer for	0.250000
custom business month	custom business month	0.166667
positional indexer cannot	ndframe indexer has valid positional setitem indexer indexer	0.052632
sets names on levels warning	multi index set names names	0.200000
verify_integrity	verify_integrity	1.000000
a tree-like	io html frame	0.012987
installed version of openpyxl is	compat is compat major_ver	0.111111
boolean if values in the object are unique	index ops mixin is unique	1.000000
string for this	generate	0.062500
of a func	func	0.011905
the union of two index objects	index union other	0.037037
decorator to capture stderr in a buffer	util capture stderr f	0.055556
a	categorical	0.028846
take	take nd	0.190476
detect terminal size	terminal size	0.166667
o and return	packb o	0.055556
set of kwargs suitable for initializing	kwargs cls	0.040000
designated axis labels	core reshape make axis dummies frame axis transform	0.166667
return a new block (of a possibly	core block setitem indexer	0.066667
values and	datetime64 from values values	0.333333
in file node must already exist and	hdfstore append key	0.016667
engine	engine	0.666667
deprecated use :meth series sort_index	core series sortlevel level ascending	1.000000
packed object return an iterator	packed	0.100000
to indexer and return them	indexer axis	0.043478
boolean series equivalent to left <=	left	0.018519
in both py2/py3	dtypes extension dtype	0.333333
panel to a specified	panel	0.017857
this function is called via the 'numpy' library	numpy validate take with convert convert args kwargs	0.055556
allows a decorator	decorator	0.071429
deprecated use pivot_table instead	tseries pivot annual series freq	1.000000
extract	extract	0.151515
csv file (discouraged please use :func pandas	data frame from csv cls path	0.066667
table in file node	key value format	0.016667
set of sparseseries (with nan	core sparse	0.041667
datetime index with	core indexes	0.004762
1-dimensional ndarray only use	indexes index set value arr key	0.023810
block	data col create for block cls	0.333333
midnight	core indexes datetime index	0.007634
the same as index	core indexes index	0.007042
t	t	0.625000
property property synonym for	core	0.001326
used to iterate over the	html frame parser build	0.014706
simple	reshape crosstab index	0.066667
dom	doc	0.142857
the where statement is of the right	where w	0.083333
timedelta	timedelta index	0.045455
timedelta-like	td index cmp opname	0.055556
bind a method to class python 2	compat bind method cls	0.200000
define an builtin function for	builtin func	0.200000
replace values given in 'to_replace' with 'value'	ndframe replace to_replace value inplace limit	1.000000
called after	indexes period index array	0.050000
line delimited	line delimits s	1.000000
applies the put method	core series put	0.055556
styles to	formats styler	0.021739
in numeric methods	numeric methods binary cls	1.000000
of type t or tuple	type t	0.083333
from 1-dimensional ndarray only use this if you	core indexes index set value	0.023810
if we define an builtin function for this	is builtin func	0.333333
rank the values along	core rank values	0.250000
box function to get	index ops mixin box func	0.142857
sparse floating point data in the form of	sparse data	0.200000
immutable index implementing an ordered sliceable set categoricalindex	categorical index	0.045455
ftypes in this object	ftype	0.076923
a timezone	util set timezone	0.142857
setting additional	freeze	0.166667
return index or ndarray filled	indexes datetime index ops mixin	0.029412
from 1-dimensional ndarray only	indexes index set value	0.023810
temporary variables in this scope	scope ntemps	0.250000
a function to be applied on each value	float array formatter value formatter float_format threshold	0.100000
key for valid keys across my indexer	ndframe indexer has valid tuple key	0.500000
extension against the	io excel writer check extension cls	0.125000
return item	item	0.050000
if we	block is	0.045455
whether the 'name' parameter for parsing is either	io validate	0.031250
1-dimensional ndarray	set value arr	0.023810
that are available on	prefix normalize locale_getter	0.166667
indexer	setitem indexer indexer	0.200000
decorator to run the same	num_threads kwargs_list	0.050000
nrows ncols - number	nrows ncols	0.250000
csv file (discouraged	core data frame from csv	0.066667
a fixed frequency	bdate range start end	0.111111
but using the interpolate machinery	interpolate with fill method	0.200000
be a single block and not	new	0.058824
columns	core ndframe groupby	0.250000
axis equal values	axis	0.011364
and kwargs if it is	if	0.111111
to deal with nat-like arg is	arg	0.018868
a manipulation result has the same dimensions	ndframe constructor	0.055556
and dtype) in this	ndframe	0.005025
update index attributes e g freq depending on	indexes index maybe update attributes attrs	0.200000
to midnight length	core	0.001326
ndarray only use	indexes index set	0.023810
a new manager with	block manager	0.021277
bind a method to class python	bind method cls name func	0.200000
node must already exist and be	io hdfstore append key value	0.016667
of the stata date formats to a	io convert datetime to stata	0.111111
specified frequency	asfreq freq method how normalize	0.250000
rec array and create	rec array to	0.333333
process of casting data from	index assert safe casting cls data	0.047619
gets called after	indexes period index array	0.050000
perform the reduction type operation if we	core index ops mixin reduce op name axis	0.083333
construct and returns	construct	0.071429
convert sparseseries to a series	series to dense sparse_only	1.000000
return the number of bytes in	multi index nbytes	0.052632
a new datacol with the	name cname	0.111111
terms for instances of pandasobject	computation any pandas objects terms	0.250000
type checking function of type t or tuple	is type t	0.083333
concatenation of an datetimelike array of arrays	core dtypes concat datetime to_concat	0.125000
new datetimeindex with passed location s deleted	timedelta index delete loc	0.500000
list-like indexer	convert list indexer keyarr kind	0.066667
store object in hdfstore parameters	hdfstore put key value	0.333333
more this	core ndframe	0.005051
index objects contain the same	indexes	0.004651
determine if each string matches a	str match arr	0.166667
a resample	index resampler	0.065217
fsync	fsync	1.000000
parameter for general index and plural 'names'	core indexes index validate names name names deep	0.071429
return a list of sql statement that create	table create	0.043478
plot attribute for	group by plot	0.062500
convert timedelta-like to	td index cmp	0.055556
is	is	0.148148
load a feather-format object from the file path	io read feather path	0.333333
string using various backends	parser engine truediv	0.333333
attempt to construct this type from a	dtypes interval dtype construct from	0.166667
evaluate a binary	computation bin op evaluate	0.333333
raised	assert raises	0.200000
resample according to the how return	core window convert freq how	0.250000
hack to accelerate unioning a collection of indexes	union many others	0.040000
intervalindex from a 1d array of interval	interval index from intervals cls data	0.333333
categories	categories	0.375000
boolean whether i can attempt conversion to	is convertible to index other	0.333333
interval with closed bounds	interval closed bounds interval	0.200000
hard to parse datetime	tools parse time	0.125000
the key or none if it	key	0.005051
particular object	core dtypes extension dtype repr	0.142857
purely label-location based indexer	loc indexer	0.166667
a fixed size	encoding itemsize	0.142857
downsample the cython defined function	downsample how	0.200000
is a categorical	categorical	0.009615
i am	is	0.005291
datetime time the time part of	datetime index time	0.166667
get a	core dtypes get dtype	0.500000
the ticks	plotting time series date formatter set	1.000000
an intervalindex from a	index from	0.090909
hash a	util hash	0.333333
positional indexer	ndframe indexer has valid positional setitem indexer indexer	0.052632
code to a rule_code	freq code	0.125000
with an arbitrary number of data	legacy table read where	0.333333
compat na value parameters	na value for	1.000000
selection	selection	0.750000
return an	index	0.002004
that path's extension against the writer's supported extensions	extension cls ext	0.333333
the value inplace return a new block (of	core block setitem indexer value mgr	0.333333
index names	default names	0.083333
at input threshold s	ndframe clip lower upper axis	0.333333
convert to object	indexes multi index to	1.000000
timedelta index with day as	core indexes timedelta	0.083333
use this	core indexes index set	0.023810
keys that	keys	0.032258
to return the correct pandassql subclass based on	pandas sql builder con flavor schema meta	0.055556
series	core series group	0.030303
_upsample kwargs and	by mixin apply f	0.166667
checks that path's extension against	check extension cls	0.125000
pivot	core reshape pivot index columns values	0.333333
as series or by a series of columns	core ndframe groupby by axis	0.333333
return a	indexes index	0.007353
value	ops	0.076923
we are index sliceable then	convert to index sliceable obj key	0.083333
value from 1-dimensional ndarray only use this	indexes categorical index get value series	0.100000
dict of the counts of the function	counts f	0.041667
string representation for	indexes index unicode	0.083333
from a 1d array of	index from intervals cls data name copy	0.125000
returns numpy array of datetime	core indexes datetime	0.011494
fast lookup	set	0.012195
to table in	io hdfstore	0.014493
csv file (discouraged	core data frame from csv cls	0.066667
called prior to	array prepare	0.111111
of	core reshape crosstab index columns	0.066667
dataframe pivot	core reshape pivot index	0.333333
we by definition have a tz	io formats datetime64tzformatter format strings	0.166667
called after	result	0.049180
provides a	datetime index	0.007042
boolean indicating whether the file is	io hdfstore is	0.200000
returns the float values converted	float array formatter get	0.055556
mixin to support a	mixin	0.074074
column	data	0.029126
additional handling	core indexes period	0.032258
subset rows or columns of	ndframe filter items like regex axis	0.166667
from 1-dimensional ndarray only	set value	0.023256
expected error message regular	exc_type exc_value trace_back	0.100000
return the bool of a single element	core ndframe bool	0.055556
include_bool	include_bool	1.000000
writing stata binary	stata fname	0.200000
table in file node	append key	0.016667
a feather-format object from the	feather	0.050000
fixed frequency timedelta index	indexes timedelta range start	0.083333
data	ndframe slice	0.125000
we always want to return a periodindex	shallow copy with infer values	0.200000
and a date_format return	date_format	0.058824
as	core indexes period	0.032258
an expression	expr	0.050000
this is similar to	reshape	0.037037
the block manager from a	manager sdf columns	0.052632
multiindex parameters	indexes multi index from	0.142857
and / or columns using input	axis mapper axis copy inplace	0.055556
list of the axis indicies	panel extract axes data axes	0.142857
color_spec	cls color_spec	1.000000
that	html	0.011765
v should be inserted in	ndarray searchsorted v	0.033333
from 1-dimensional ndarray only use this if you	core	0.001326
encoding	encoding compat	1.000000
can be used to iterate over the	io html frame	0.012987
block if we are	core block	0.010870
dataframe in panel to	panel to	0.027027
convert to our native types	to native types slicer na_rep date_format quoting	0.250000
create a table reflecting the structure	table create table setup	0.066667
internal format currently just the ndarray	core block internal values dtype	0.111111
form the union of two index objects	indexes index union other	0.083333
new index	index	0.002004
change string like dtypes to	core dtypes invalidate string dtypes dtype_set	0.200000
to appropriate for table outplot	util table plotter conv data	0.142857
specialized intersection for datetimeindex objects	index intersection other	0.052632
positional	positional setitem	0.250000
return the	core categorical	0.013889
via the 'numpy' library the	compat numpy validate take with	0.055556
return true if the levels	levels	0.083333
make new multiindex inserting new item at location	indexes multi index insert loc item	0.333333
(if copy=true return a new copy)	block astype	1.000000
synonym for as_blocks()	ndframe blocks	0.166667
gets	indexes index array wrap result	0.100000
sparsearray only the actual sparse values need	core sparse sparse array	0.043478
values according to indexer and return them as	nd indexer	0.030303
index and its underlying	indexes range index	0.021277
append to table	io hdfstore append key value format append	0.125000
in the columns under the index	index	0.002004
returns the float values converted into strings using	float array	0.055556
cast object to input numpy dtype	core ndframe astype dtype copy errors	0.500000
the float	float array formatter get result	0.055556
keys for	keys	0.032258
return an indexer for	get	0.007143
from 1-dimensional ndarray only use this if you	index set value	0.023810
try to read from a	read	0.033333
can be used to iterate over the	io html frame parser	0.012195
microseconds (>= 0 and	indexes timedelta index microseconds	0.066667
a single non-tuple indexer which	indexer indexer target	0.071429
values between particular times	index indexer between	0.125000
the input data_columns and min_itemize and create a	data_columns min_itemsize	0.200000
returns system information as	util get sys info	0.333333
that create a table reflecting	sqlite table create table setup	0.066667
write out the binary feather-format for dataframes	to feather fname	0.083333
return the block manager from a dataframe	sparse to manager sdf columns index	0.052632
index with day calendar as the	indexes period	0.034483
type to its	table type	0.055556
list_hook	list_hook	1.000000
create an indexer like _name in the	ndframe create indexer cls name indexer	0.166667
where statement	where w	0.083333
n rows	n	0.090909
read csv file (discouraged please	from csv cls	0.066667
rangeindex	range index	0.021739
shape of the values to be at least	values ndim shape	0.083333
interpolate values according to different	core resampler interpolate method axis limit inplace	0.166667
to	series	0.006757
convert font_dict to an openpyxl v2 font object	io openpyxl20writer convert to font cls font_dict	0.500000
index	interval index	0.090909
numpy array of python datetime date objects (namely	core indexes datetime	0.011494
have	ordered cls	0.055556
read from a	read	0.033333
day (e g 9 00-9 30am)	time start_time end_time include_start include_end	0.200000
fast lookup	value	0.005155
datetimeindex with times to midnight length is unaltered	datetime index normalize	0.125000
table as a dataframe	table data values index	0.200000
timegrouper	by resample rule	0.166667
this	index set value arr	0.023810
rewrite	rewrite	0.461538
that has a single	simple blockify tuples	0.125000
the sparsedataframe as	core sparse sparse data frame	0.058824
form the union of two multiindex	index union other	0.037037
true if more than one block with	block manager is consolidated	0.333333
to table in file	key value format	0.016667
reindex from a non-unique which categoricalindex's are almost	categorical index reindex non unique target	1.000000
if 'series argmin' is called via the	skipna skipna args	0.100000
the best locator based on a	auto date locator get locator	0.062500
a set of sparseseries (with nan	core sparse	0.041667
two indices overlap add suffixes	overlap	0.047619
resolve a	scope resolve	0.166667
return valid other evaluate or raise typeerror	binop other op opstr	0.500000
falls on sunday use day thereafter monday instead	sunday to monday dt	0.333333
for :meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace limit	0.333333
of tuples	tuples cls data	0.250000
the float	float array formatter	0.055556
necessary for making this object picklable	sparse sparse array reduce	0.333333
in file node must	io hdfstore append	0.016667
to its values attribute if it has one	series	0.006757
return a string representation for	index unicode	0.083333
ndarray flags	flags	0.029412
the dtype of	dtype	0.010989
each element in the	map indices py arr	0.090909
return the correct	get	0.007143
convert a range argument	core ndframe indexer convert range key is_setter	1.000000
number of unique elements in the object	ops mixin nunique dropna	0.083333
more this is	ndframe	0.005025
needs additional handling	result	0.016393
apply function	func	0.011905
memory usage of my values parameters	core index ops mixin memory usage deep	0.200000
wrap comparison operations to convert datetime-like to datetime64	core indexes period index cmp opname nat_result	0.066667
convert timeseries to specified frequency	ndframe asfreq freq method how normalize	0.250000
values values	values method	0.500000
dense representation of ndframe as	core ndframe to dense	0.111111
for our index	index item	0.100000
checks that dict has only	parser check	0.200000
without any nan is taken	ndframe asof where	0.166667
of type window_type and size window on the	window arg window win_type min_periods	0.100000
lookup of	value	0.005155
for a particular object invoked by str df	str	0.017544
if key is a registered option	registered option key	0.333333
file node	io	0.003012
list indicated if we have mixed	index have mixed	0.166667
this	index col	0.066667
parse the raw data into a list of	parser parse raw data rows	0.250000
a string-like that is	io convert string array data	0.038462
get the category labels	core categorical get labels	0.500000
of bytes in the underlying data	index nbytes	0.052632
boolean series indicating whether each string in the	core	0.001326
node must already	io hdfstore append	0.016667
first non-na/null value	series first valid	0.250000
convert to our native types format	block to native types	0.250000
where statement is of the right	where w	0.083333
try to parse a ndarray like into	json parser try convert data	0.500000
type to its corresponding json_table	io json as json table type	0.250000
intervalindex from a 1d array of interval	interval index from intervals cls data name copy	0.333333
csv file (discouraged please	series from csv cls path sep parse_dates	0.066667
types	types slicer na_rep date_format	0.200000
according to indexer and return them as a	indexer	0.018349
do need	core series needs	0.500000
of value from 1-dimensional ndarray only use this	core indexes categorical index get value	0.100000
check for an s3 s3n or s3a	io is s3	0.250000
the first match of regular expression pat	frame arr pat flags	0.166667
format files	format index encoding	0.500000
a recursive call	recursive	0.090909
holiday of two adjacent ones!	next monday or tuesday dt	0.200000
format less flexible but more user-friendly than melt	df stubnames i j	1.000000
float dtype	float arr	0.083333
needs additional handling	indexes period index array wrap	0.050000
at selected position	value allow_duplicates	0.500000
strict_nan	strict_nan	1.000000
type as the index (so we	at indexer convert key key is_setter	0.090909
datetime date objects (namely	datetime	0.006711
the data are missing	core data frame dropna	0.083333
an item pair from maps[0]	map popitem	0.055556
guarantee the shape of the values to be	core block shape values ndim shape	0.083333
in each element in the series/index	core str get	0.142857
series/index by the given delimiter string starting at	str rsplit arr pat n	1.000000
evaluate a python expression	eval expr	0.083333
defined as a copy with the same identity	view cls	0.047619
plotter	plotter	0.384615
the input data_columns and min_itemize and create	data_columns min_itemsize	0.200000
return resolution str against resolution code	tseries resolution get str cls reso	1.000000
create a new multiindex	core indexes multi	0.014493
e	e	1.000000
which categories and codes are unique	unique	0.090909
return	compat	0.030303
date_format	date_format	0.352941
ndarray only	indexes index set value arr	0.023810
convert alignment_dict to an openpyxl v2 alignment	io openpyxl20writer convert to alignment cls alignment_dict	0.500000
and be table	value	0.005155
types and ranges supported by stata and	to stata types	0.500000
of available options grouped by	options	0.041667
format dataframe	core data frame	0.005917
stata	core data frame to stata	0.200000
that an positional	has valid positional	0.250000
of casting data from some accepted	casting cls data	0.047619
array	closed	0.111111
values values	values method axis	0.500000
a single block and	core block manager	0.022727
that left and right index are equal	index equal left right	0.333333
array interface	indexes interval index array result	0.125000
the float values converted into strings using	float	0.024390
nat which has the same	nat new	0.050000
a tz-aware type	io get tz tz	0.066667
series sort_index	series sortlevel level	1.000000
cross sectional for a given location in	block manager fast xs loc	0.142857
bytes in the underlying data	indexes multi index nbytes deep	0.052632
concatenate suffix string with panel items names	ndframe add suffix suffix	1.000000
from one of the stata date formats to	io convert datetime to stata	0.111111
of all the classes	util all	0.055556
sanitize an index type to	sanitize index data index copy	0.200000
compute a simple cross-tabulation	index columns values	0.037037
tfoot	tfoot	1.000000
with	datetime	0.013423
from	value	0.005155
item and drop from frame raise keyerror	ndframe pop item	0.500000
reset	core pandas object reset	1.000000
append to table	key value format append	0.125000
left and right array parameters	cls left right closed	0.166667
reduction type operation if we can	ops mixin reduce op name	0.083333
fast path for getting a cross-section	fast xs loc	1.000000
from 1-dimensional	index set value	0.023810
from a list/array of tuples parameters	from tuples	1.000000
the stata date formats to a type	io convert datetime to stata type	0.200000
ndarray only use this if	index set value arr key	0.023810
dict of	dict cls data orient dtype	0.166667
x in y if possible otherwise	computation in x y	0.047619
given an interval or intervalindex return	indexes get interval	0.125000
reduction type operation	ops mixin reduce op name axis skipna	0.083333
was a pathlib path	stringify path filepath_or_buffer	0.142857
the same function multiple times in parallel	util test parallel	0.142857
ndarray of the minimum argument indexer see also	index ops mixin argmin axis	1.000000
try to convert to	maybe to	0.250000
the display options for printing	display options	0.083333
raised matches the expected exception	util assert raises contextmanager exception matches	0.142857
equivalent to shift without copying data	core ndframe slice shift periods	0.083333
simple cross-tabulation	core reshape crosstab index	0.066667
a registered	core get registered	0.500000
determines if two index	indexes float64index equals other	0.200000
for making this object picklable	core indexes datetime index setstate state	0.333333
node must already exist and	io hdfstore append key	0.016667
isin boolean array	isin comps values	1.000000
index	core indexes float64index	0.166667
interpolate	core resampler interpolate method	0.166667
the values to be	shape values ndim	0.050000
a separate excel sheet	excel path na_rep engine	0.166667
float values converted into strings	io formats float array	0.055556
columns excluding	data frame	0.005714
return a ndarray of the	index	0.002004
the node in its entirety only - where	io fixed delete where start stop	1.000000
apply if as_index=true	core group by index with as	0.200000
combine series values choosing the calling series's values	series combine	1.000000
to indexer	nd indexer	0.030303
plural 'names' parameter for	validate names name names deep	0.125000
to table in file node must already	key	0.005051
values	block shape values	0.050000
multiindex at the	multi index	0.020000
dataframe to a google bigquery table	data frame to gbq destination_table project_id chunksize verbose	0.333333
value to format it	formats float array formatter value	0.250000
sparse reindex and return a new block	sparse block sparse reindex new_index	1.000000
from the parsed table element	io html frame parser parse tr table	0.200000
categorical by default	core categorical sort values	0.166667
determines if two index objects contain the	index ops mixin equals other	0.200000
boolean criterion specified by func	group by filter func	0.250000
file node must already exist and	append	0.012987
setup our	core resampler set	0.333333
to shift without copying data	ndframe slice shift periods axis	0.083333
to the underlying array which by-definition	index ops mixin	0.019231
to given	get	0.007143
the inferred types one for each	index inferred type levels	0.111111
to table in file	append key	0.016667
try to cast to the specified dtype	dtype	0.010989
a scipy sparse coo_matrix from a sparseseries with	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
a new block try to preserve dtype	core putmask smart v m n	0.055556
float	formats float	0.055556
lc_var	lc_var	1.000000
from 1-dimensional ndarray only use this if you	arr key	0.023810
month and day_of_month	semi month end	0.166667
of bytes in the underlying data	core indexes range index nbytes	0.052632
to the :meth pandas dataframe reset_index function see	reset index level drop name inplace	0.142857
return datetimeindex with times to midnight	core	0.001326
moving window of type window_type and size window	window win_type	0.100000
the 'numpy' library the third	take with convert	0.055556
setup our binners	binner	0.125000
deprecated and a replacement key defined will	translate key key	0.200000
the values to be at least	core block shape values	0.050000
csv file (discouraged please use :func pandas read_csv	series from csv cls	0.066667
positional indexer cannot enlarge	indexer has valid positional setitem indexer indexer	0.052632
for panel objects and	panel	0.017857
table	append key value format	0.033333
try several cases to get	get	0.007143
for	core panel extract axes for	1.000000
a dataframe as an html	data frame to html	0.250000
the data to the block we must	non consolidatable mix in	0.083333
called	core series array	0.100000
we have a fully reindex-output to the	data frame group by reindex output result	0.045455
aggregate using input function or dict of {column	core panel group by aggregate arg	0.250000
expanding count of number of non-nan	stats expanding count arg freq	0.200000
options grouped by prefix	pp options	0.083333
convert sql and params args to dbapi2	io convert params sql params	0.250000
null values converted	args values	0.083333
that can be used to iterate over	frame	0.009091
to table in file node	io hdfstore	0.014493
return the full scope for use with passing	core computation scope full scope	0.055556
tokenize a python source code string	core computation tokenize string source	1.000000
specialized shift which	index ops mixin shift n	0.250000
options grouped by prefix	options	0.041667
the indexables from the table description	io generic table indexables	0.500000
called after a ufunc	series array wrap result context	0.200000
decorator to take optional positional and keyword	util optional args decorator	0.083333
be used to	io html	0.012987
iter1 iter2 iterables that produce	iter1 iter2	0.166667
compare numeric	is numeric	0.333333
array interface	index array result	0.125000
return the op string	op generate	0.066667
returns number of unique elements in	nunique dropna	0.125000
highlight the maximum by shading the background	io formats styler highlight max subset color	1.000000
for iterables you should probably use pprint_thing()	formats pprint dict seq _nest_lvl max_seq_items	0.333333
thrown by an	parser	0.008000
a string-like	string array data encoding	0.038462
sheet_name	sheet_name	1.000000
this if	core indexes index set value arr	0.023810
sparse values need	sparse sparse array	0.043478
index or ndarray	indexes datetime index ops mixin	0.029412
from 1-dimensional ndarray only use	index	0.002004
csv file (discouraged please use :func pandas read_csv	from csv cls	0.066667
bytes in the	nbytes	0.046512
number of bytes in	nbytes deep	0.052632
from ndarray or list of lists	matrix data index	0.500000
pattern or regular expression in	flags	0.029412
labels on given axis	dropna axis	0.083333
if we do need a multi reindex this	series needs reindex multi	0.333333
convert tz-aware datetimeindex from one time	core indexes datetime index tz convert tz	0.166667
or not the	io	0.003012
frequency code	tseries	0.083333
parser based	parser	0.008000
date in xport format return python date	io sas parse date datestr	0.250000
validate this column return the compared	io index col validate col	0.200000
for header rows in multiindex parsing	io pop header name	0.100000
unique elements in the	index ops mixin nunique dropna	0.083333
of x in y if possible otherwise	computation in x y	0.047619
sum of values excluding missing values	group by ohlc	0.250000
autocorrelation plot	plotting autocorrelation plot	1.000000
list of tuples of the (attr formatted_value)	datetime index ops mixin format attrs	0.142857
sets the categorical to be unordered	core categorical as unordered	0.500000
left and right	left right check_exact	0.333333
iterate over the blocks collect and create a	reduction f axis consolidate transposed	0.062500
index with target's values (move/add/delete values	index	0.002004
a timegrouper and return our	core resample obj kind	0.083333
integer stride	stride	0.125000
object that can be used to iterate over	html frame parser	0.012658
and return the block manager from a dataframe	core sparse to manager sdf columns index	0.052632
value of x	x	0.043478
of value from 1-dimensional ndarray only use	indexes categorical index get value series	0.100000
then fill	maybe fill	0.500000
argsort argsorts the value	argsort	0.038462
not supported for panel objects and will raise	panel to	0.027027
we internally represent the data as a datetimeindex	datetime tzblock external values	1.000000
for series columns for dataframe	ndframe	0.005025
fully reindex-output to	core data frame group by reindex output result	0.045455
convert to our native types format slicing	datetime block to native types slicer na_rep	0.250000
etc' nentries - number of entries in index	index nentries nlevels prefix	1.000000
post process for	post	0.111111
a fully reindex-output to the levels	core data frame group by reindex output result	0.045455
union of two index objects and sorts	index union other	0.037037
return frequency code group of given frequency str	get freq group freq	0.250000
exception that is	parser	0.008000
select values at	core ndframe at	0.333333
get a	core dtypes get	0.500000
a multiindex from	indexes multi index from	0.142857
lookup	indexes index set value	0.023810
a deprecated option if key is deprecated	get deprecated option key	0.333333
build an xpath expression to	build xpath expr attrs	0.200000
gets	core indexes index array wrap result	0.100000
a table reflecting the structure of	table setup	0.083333
synonym	core ndframe	0.005051
must be sparseseries or sparsearray	maybe to sparse	1.000000
swap level i with	swaplevel i	0.333333
tree-like object that can be used	frame	0.009091
rolling statistical measure using supplied function designed to	core rolling apply func name window center	0.333333
we take a string-like that is object	string array	0.038462
copy if specified	copy	0.012821
timedelta-like to timedelta64	indexes td index cmp opname	0.055556
a common sparseindex corresponding to the	homogenize series_dict	0.047619
only use this if	core indexes categorical	0.071429
error raised when attempting	error	0.028571
a timezone	set timezone tz	0.142857
try to parse a ndarray like into	parser try convert data	0.500000
return the node with	io hdfstore get node	0.166667
use this if you	set value	0.023256
the value inplace return a new block (of	core block setitem indexer value	0.333333
return the td elements from a row element	io html frame parser parse td obj	0.083333
after a	core indexes index	0.007042
update index attributes e g freq	core indexes timedelta index maybe update attributes	0.200000
using the interpolate machinery	core block interpolate with fill method axis	0.200000
of bytes in	index nbytes deep	0.052632
multi-index suitable for a panel-like dataframe parameters	time panels names	0.076923
the number of bytes in	core indexes multi index nbytes	0.052632
array interface	core indexes multi index array dtype	0.125000
pandasobject	core	0.001326
value from 1-dimensional ndarray only use	datetime index get value series	0.071429
filled with nat which has the same length	nat new box	0.050000
vertical/horizontal layout	table	0.010870
fixed frequency datetime index with business day	indexes bdate range start end	0.083333
add in the datetimelike methods (as we	mixin add datetimelike methods cls	0.333333
to time	to time	0.125000
read csv file	from csv cls path header sep	0.066667
a new manager with	manager	0.058824
fillna	fillna	1.000000
use this if	core indexes index	0.007042
same type as the index (so we don't	core at indexer convert key key is_setter	0.090909
method to class python	method cls name func	0.076923
infer the fill value for	core dtypes infer fill value	0.333333
that we have good categories	validate categories cls categories fastpath	0.250000
return a tree-like object	io html	0.012987
interpolate	core resampler interpolate method axis	0.166667
return an outside world format currently just the	core block external values dtype	0.125000
series_dict	series_dict	1.000000
a cross sectional for a given location	block manager fast xs loc	0.142857
values to	shape values	0.050000
datetimeindex with times to midnight length is unaltered	normalize	0.076923
value from 1-dimensional ndarray only	key value	0.011628
the option metadata if key is a	key	0.005051
reindex and	reindex new_index	0.250000
mixin to support a unified inteface / docs	mixin	0.037037
to my values return a block if	core block	0.010870
is defined as a	index view cls	0.047619
combine series values choosing the calling series's values	sparse sparse series combine	1.000000
try to cast	core block try cast	0.500000
gets called after	index array	0.066667
the actual sparse values need	core sparse sparse array	0.043478
label for last non-na/null value	data frame last valid	0.250000
dataframe with labeling information in	core data frame	0.005917
table_name	table_name	0.833333
ndarray only use this if you	core indexes	0.004762
datetime date	datetime index	0.007042
return dtype	empty dtype	0.500000
that we have	core categorical	0.013889
remove and return an item pair	chain map popitem	0.055556
use this if you	core indexes index set value	0.023810
blocks	take blocks	0.500000
additional handling	core indexes period index array wrap	0.050000
intervalindex with self	core indexes interval	0.062500
the float values converted into strings	io formats float array formatter get result as	0.055556
supported for panel objects and will	core panel to sparse	0.037037
evaluate the block return result block from the	core block eval func other	0.333333
installed version of openpyxl is supported parameters	is compat major_ver	0.111111
that time and	core ensure like indices time	0.125000
to midnight length is	core indexes	0.004762
make a copy of the	copy deep	0.142857
a	series array	0.090909
read csv file (discouraged please use	core series from csv	0.066667
float	float array formatter	0.055556
to iterate	html frame	0.014706
in file node must already exist and be	value format	0.016667
merge this	core reshape merge	0.166667
add numeric operations to the groupby	add numeric operations cls	0.166667
of bytes in	core indexes range index nbytes	0.052632
full scope for	computation scope full scope	0.055556
of value from 1-dimensional ndarray	period index get value series	0.071429
a	core categorical validate ordered cls	0.055556
row labels using one or more existing	keys drop append inplace	0.166667
to a dataframe	core data frame	0.005917
*this is an internal non-public method*	core indexes categorical index is dtype compat other	0.500000
at particular time of	ndframe at time time asof	0.066667
is a sequence of	is sequence	0.333333
best locator based on a distance	locator get locator dmin dmax	0.250000
an error is encountered in pd	error	0.028571
day as the default frequency	periods freq	0.125000
numpy array of python datetime date objects (namely	indexes datetime index	0.007634
a single non-tuple indexer which could be a	indexer indexer target	0.071429
node must already	hdfstore append	0.016667
network	network	1.000000
of tuples of the (attr formatted_value)	index format attrs	0.142857
boolean list indicated if we have mixed levels	multi index have mixed levels	0.200000
a list of tuples of the (attr formatted_value)	indexes multi index format attrs	0.142857
render the built	render	0.083333
create a new block	core block	0.021739
in the series extract groups from	extract arr	0.066667
create the	create	0.033333
sets names on levels warning mutates!	set names names level validate	0.200000
return packed bytes see :class	io	0.003012
meta data	col write metadata handler	1.000000
compute the slice	index slice	0.166667
function for series arithmetic operations	method op	0.333333
std	std	1.000000
memory usage of my values	ops mixin memory usage deep	0.200000
leap	indexes period index is leap	0.125000
update index attributes e	core indexes index maybe update attributes	0.200000
format	format dt_str dayfirst dt_str_parse dt_str_split	0.250000
set	core sparse sparse series set	1.000000
dtype try	maybe	0.090909
target	target	0.500000
the formatted data as a unicode	core indexes index formatter func	0.083333
utility	skipna fill_value fill_value_typ	0.500000
return a fixed frequency timedelta index	core indexes timedelta range start end	0.083333
guess the datetime format of a given datetime	tools guess datetime format dt_str	1.000000
indexer and return	nd indexer axis	0.043478
gets called	index	0.004008
and the specifications setup the internal grouper	grouper set grouper obj sort	0.250000
create and	table create	0.043478
shift without copying data the	ndframe slice shift periods	0.083333
dataframe the levels in the	data	0.009709
an actual dtype that	dtype cls dtype	0.375000
to int64 with null values	values	0.008547
raise keyerror is	map	0.029412
has a single	simple blockify tuples	0.125000
:class packer for options	msgpack packb	0.025641
at particular time of day	at time time asof	0.066667
kwargs suitable	kwargs cls	0.040000
a dataframe to a sql database	sqlite database to sql frame	0.500000
required package	package pkg_name min_version max_version app	0.083333
fast lookup of value from 1-dimensional ndarray only	key value	0.011628
offsets index to beginning of	tseries date offset beg apply index i	0.333333
used when a manipulation result has the	core ndframe constructor	0.055556
handle na filling of	fillable	0.095238
value	series get value	1.000000
sql and params args to	sql params	0.200000
in each element in the	core	0.001326
return index or ndarray	indexes datetime index ops mixin	0.029412
curve with holidays between start_date and	holiday calendar holidays start end return_name	0.066667
codes by the indexer fill with	indexer allow_fill	0.050000
if a url has a valid protocol	is url url	0.047619
is called via the 'numpy' library	with convert	0.055556
the kinds allowable columns for	table queryables	0.055556
tz-aware type return	get tz tz	0.066667
pat	frame arr pat	1.000000
a type checking function of type	is type	0.125000
of row elements from the	io html frame	0.012987
packed bytes see :class	msgpack packb	0.025641
ndarray only use this if	key	0.005051
take values according to indexer and return them	take nd indexer axis	0.250000
operation	operation	1.000000
into long stacked format as dataframe	frame	0.009091
only use	set	0.012195
comparison operations to convert datetime-like	period index cmp opname nat_result	0.066667
set the	io cparser wrapper set	1.000000
values attribute if	core series	0.008000
and a result set coerce	coerce	0.025641
dimensions as the original	core	0.001326
i am an	index	0.002004
checks that path's extension against the	excel writer check extension cls	0.125000
label_flags	label_flags	1.000000
wrap comparison operations to convert timedelta-like to	td index	0.055556
a new unit if needed otherwise return from	dtypes datetime tzdtype new cls unit tz	0.055556
up styles to	styler	0.022222
completion	pandas object dir	0.166667
can be used	html frame parser	0.012658
unique elements of arr1 and	contents arr1	0.066667
pick the best locator based	auto date locator get locator	0.062500
path's extension	check extension	0.250000
my state	index col	0.066667
requested level the	level	0.043478
to parse datetime	core tools parse	0.125000
add	mixin add	0.333333
try	core sparse maybe	0.500000
shift without copying data the shifted data	ndframe slice shift periods axis	0.083333
detect missing values both missing values (-1 in	core categorical isnull	1.000000
rewrite the assignment operator for	rewrite	0.076923
called after a	indexes index	0.007353
string in the series/index	core str	0.056818
of openpyxl is supported	compat is	0.111111
compute variance of groups excluding	by var ddof	0.166667
vectorized apply of dateoffset to datetimeindex	offset apply index	0.250000
swap levels i and j in a	core ndframe swaplevel i j	0.333333
concatenation of	concat	0.058824
bool of a	ndframe bool	0.055556
and a date_format return a	date_format	0.058824
file node must already exist and be table	append key	0.016667
value from 1-dimensional ndarray only use this	index set value arr key value	0.038462
convert to	core categorical block to	1.000000
called via the 'numpy' library the third	numpy validate take with convert convert args kwargs	0.055556
write each dataframe in panel to	panel to	0.027027
return a boolean if the dtypes are equal	core dtypes is dtype equal source target	0.333333
return a fixed frequency datetime index with	indexes bdate range start end	0.083333
is called via the 'numpy' library the	validate take with convert convert	0.055556
of v should be inserted in	v	0.026316
multi-level index return new dataframe with labeling	data frame	0.005714
(produce a "pivot" table) based	frame pivot index columns	0.111111
and return the op	core computation bin op	0.055556
convert	computation convert	0.250000
of datetime time the time part of	datetime index time	0.166667
of label values for requested level	values level	0.250000
up styles to html	io formats	0.027778
additional handling	core	0.001326
prior to a	prepare	0.071429
an intervalindex from a list/array of tuples parameters	core indexes interval index from tuples	1.000000
pairwise correlation of columns excluding	core data frame corr method min_periods	0.111111
target time zone	tz axis level copy	0.500000
by	by	0.346154
validate that an positional indexer cannot enlarge	valid positional setitem indexer indexer	0.052632
or np dtype to a pandas or numpy	to dtype dtype	0.083333
return the number	core indexes multi	0.014493
compute a simple cross-tabulation	core reshape crosstab index columns	0.066667
checking function of type t or tuple	is type t	0.083333
bytes in	multi index nbytes	0.052632
create and return the block manager from	to manager sdf	0.052632
to	core series to	0.333333
datetimeindex from one time zone	datetime index	0.007042
this if you	indexes index set	0.023810
numpy array of python datetime date	indexes datetime	0.011494
return a ndarray of	core index	0.111111
internal method to handle na filling of take	take fillable values indices	0.250000
convert an object to	convert	0.032258
the object to a json string	core ndframe to json path_or_buf orient date_format double_precision	0.500000
a dataframe as an html table	data frame to html	0.250000
index or ndarray	datetime index ops mixin	0.029412
csv file (discouraged please use :func	data frame from csv cls path	0.066667
parse the raw data into	frame parser parse raw data	0.250000
running code that expects to raise or	util assert produces warning expected_warning filter_level	0.071429
evaluate the block return result block s	block where other cond align	0.166667
completion	core pandas object dir	0.166667
interpolate	interpolate method	0.166667
value the we use to	value	0.005155
elements from the	io html	0.012987
the specified categories	remove categories	0.500000
der	der	1.000000
columns	core	0.001326
of normalized locales that do not	util valid locales locales	0.050000
a method to	method cls name	0.076923
the correct pandassql subclass	pandas sql builder con flavor schema meta	0.055556
over	html frame parser	0.012658
be used to iterate	html frame	0.014706
deprecated use :meth series sort_index	core series sortlevel level ascending sort_remaining	1.000000
select values between particular times	indexer between	0.125000
freeze	freeze	0.833333
is dict-like	is dict like	1.000000
a a left and right array parameters	cls left right closed	0.166667
reduction type operation	ops mixin reduce op name	0.083333
add in numeric methods	core indexes index add numeric methods binary	1.000000
right array	right closed	0.500000
resolution str against resolution code	tseries resolution	0.333333
a locale	locale	0.222222
up styles to	io	0.003012
and	key value	0.011628
read text from clipboard and pass	read clipboard sep	0.200000
exist and be	io hdfstore	0.014493
subject string in the series extract groups	str extract frame arr	0.047619
data to ndarray raises on scalar data	core indexes index coerce to ndarray cls data	0.166667
subclass of styler with a	styler from	0.076923
positional indexer cannot enlarge its	has valid positional setitem indexer indexer	0.052632
am never	core	0.001326
number of times	repeat arr repeats	0.200000
set my	io fixed set object	0.200000
of a hack to accelerate unioning	index union many others	0.040000
a tree-like object that can be used to	io html frame parser build	0.014706
create a spreadsheet-style pivot table as a	reshape pivot table	0.111111
do a	src_list dest_list inplace	0.500000
elements of arr1 and arr2 are equivalent	contents arr1 arr2	0.066667
a moving window of	core window apply window	0.166667
are equal	equal	0.300000
datetimeindex with times to	core indexes datetime index	0.007634
produce 'pivot' table based on 3 columns	core reshape slow pivot index columns values	0.500000
x not in y if possible otherwise	computation not in x y	0.066667
form the intersection of two index	core indexes index intersection other	0.166667
provide	axis typs	0.500000
reduction type operation if we can	core index ops mixin reduce op name axis	0.083333
the number of bytes in the underlying	multi index nbytes	0.052632
of unique elements of arr1 and arr2	contents arr1 arr2	0.066667
round a dataframe to a variable	data frame round	0.166667
guaranteed return of an indexer even	core indexes index get indexer for	0.250000
the levels of both multiindex objects	indexes multi index equal levels other	0.100000
of value from 1-dimensional ndarray only	period index get value series key	0.071429
with element index pairs for each element in	core map indices py arr	0.090909
float values converted into strings using	float array formatter get result as array	0.055556
fast path for getting	manager fast	0.250000
python expression as	computation eval expr	0.083333
wrap long strings in the series/index	core str wrap	0.333333
a tree-like object	build	0.013514
via the 'numpy' library the third	with	0.034483
in index	util make custom index	0.250000
concatenation of an datetimelike array of arrays each	core dtypes concat datetime to_concat	0.125000
interpolate values	core resampler interpolate method axis limit inplace	0.166667
common ops mixin to support a unified inteface	index ops mixin	0.019231
to its	series	0.006757
set my pandas type & version	fixed set object info	0.200000
and plural 'names' parameter for	name names deep	0.125000
convert dataframe and	data	0.009709
after a ufunc needs additional handling	indexes period index array wrap result context	0.041667
has one	core	0.001326
myself	datetime tzblock	0.100000
last non-na/null value	core data frame last valid	0.250000
rename one of	block manager rename axis mapper axis copy level	0.500000
determines if two index	index ops mixin equals other	0.200000
or columns using input function or	axis mapper axis copy inplace	0.055556
are index sliceable then return my	to index sliceable obj key	0.083333
cumulative product for each group	core group by cumprod axis	1.000000
convert datetime-like	period index cmp opname nat_result	0.066667
create a timegrouper and return	resample obj kind	0.083333
int or a subset of rows if n	n dropna	0.166667
indexer and	nd indexer axis	0.043478
concatenation of an	core dtypes concat datetime to_concat axis	0.125000
item at	loc item	0.500000
: write out the indicies	write	0.017857
arg is a passed in as an	arg	0.018868
sql statement that create a table	create table	0.166667
tz attribute	datetime	0.006711
creating a subclass of styler with a	formats styler from	0.076923
to accelerate unioning a	union many others	0.040000
we take a string-like	convert string array data	0.038462
add a temporary variable to the scope	core computation scope add tmp value	1.000000
of _constructor_sliced-like objects to either an	core panel homogenize dict frames intersect dtype	0.066667
handle na filling of	fillable values	0.125000
if 'series argmin' is called	skipna skipna args	0.100000
the shape of the values to	block shape values ndim shape	0.083333
return an xarray object from the pandas object	to xarray	0.125000
values and a date_format return a	datetime64 from values values date_format	0.250000
series based on type and coerce into matrices	core arrays to mgr arrays arr_names	0.250000
a boolean list indicated if we have mixed	core indexes multi index have mixed	0.166667
context manager for temporarily setting a timezone	timezone tz	0.142857
(can't do in	jsontable writer init obj orient date_format double_precision	0.142857
read sql database table into a	io read sql table table_name con schema index_col	0.333333
in index	index	0.002004
have a compatiable fill_value and arr dtype	arr fill_value	0.090909
node	hdfstore append key value	0.016667
csv file (discouraged please use :func	series from csv cls	0.066667
to call encode before writing to file for	stata writer write to_write	0.083333
sorted ndframe	core ndframe	0.005051
which is	sparse to_concat	0.333333
this is index for series	ndframe	0.005025
of the required package is	package	0.058824
reset the	util reset	0.500000
decorator to capture stderr in a buffer so	capture stderr	0.055556
get integer location slice	indexes multi index get loc key	0.500000
if the set of unique elements of arr1	arr1	0.050000
read csv file	data frame from csv cls path header sep	0.066667
series arithmetic operations to avoid code duplication	series op name str_rep masker	1.000000
row cross-section from the sparsedataframe as	core sparse sparse data frame xs key axis	0.166667
fillna(method='bfill') <dataframe fillna>	bfill axis	1.000000
node must already	append key	0.016667
axes	axes index axis	1.000000
series equivalent to left	left	0.018519
with multi-level index return new dataframe with labeling	core data frame reset	0.027778
for valid keys across my	valid tuple	0.500000
xport format return	io sas parse	0.066667
parse	tools parse	0.125000
need to coerce	maybe coerce freq	0.125000
keyerror is maps[0]	chain	0.031250
check if we're running in an interactive shell	in interactive session	1.000000
1 0 number format	number format	0.333333
alert a user about a malformed row	python parser alert malformed msg	0.500000
of normalized locales that do not throw	util valid locales locales normalize	0.050000
specialized intersection for datetimeindex objects	core indexes datetime index intersection	0.142857
after a	series array wrap	0.100000
return a version to operate on	block try operate	0.333333
type t or tuple	is type t	0.083333
recursively evaluate an expression in python space	core computation bin op call env	0.250000
astype	astype	1.000000
make sure that we have a fully reindex-output	core data frame group by reindex output result	0.045455
a dataframe to a latex tabular/longtable environment output	formats latex formatter write result buf	0.200000
resample of a	period index	0.024390
arg is a	arg	0.037736
shift categorical by desired number of periods	core categorical shift periods	1.000000
numpy array of python datetime date objects	indexes datetime index	0.007634
time strings to time	core tools to time	0.125000
duplicate each string in the series/index	core str repeat	0.045455
for last non-na/null value	data frame last valid index	0.250000
writing stata binary dta files from array-like objects	data frame to stata fname convert_dates write_index encoding	0.333333
of datetime time the time part of	indexes datetime index time	0.166667
dataframe objects and do	core data frame	0.005917
numeric	core dtypes is numeric v string	0.333333
of styler with a custom	io formats styler from custom	0.200000
only	core indexes categorical	0.071429
we are index sliceable then return my	convert to index sliceable obj	0.083333
decorator to deprecate a	util deprecate	0.166667
of value from 1-dimensional ndarray only use this	set value arr key value	0.038462
on sunday use day thereafter monday instead	sunday to monday	0.333333
expanding count of	expanding count arg	0.200000
strings to time objects	to time	0.125000
array of python datetime date objects (namely	datetime	0.006711
be	append key value format	0.016667
category value returning	ascending na_position	0.071429
multiindex	core indexes multi index	0.092105
compare numeric	dtypes is numeric v	0.333333
routine to turn	for	0.071429
load a pickle with a	load	0.100000
attempt to construct this type from	interval dtype construct from string cls	0.166667
in file node must	io hdfstore	0.014493
values according to indexer and return them	nd indexer	0.030303
fixed frequency datetime index with	indexes bdate range start	0.083333
"reset" the styler removing any previously applied styles	styler clear	0.333333
is an internal non-public method*	indexes categorical index is dtype compat other	0.500000
an object dtype but could really be ints/strings	core tools attempt yyyymmdd	0.333333
fast	key	0.005051
csv	data frame from csv cls	0.066667
convert datetime-like to datetime64	core indexes dt index cmp opname nat_result	0.066667
ndarray filled with nat which has the same	ops mixin nat new box	0.050000
creating a subclass of styler with a custom	styler from custom	0.200000
style_dict	style_dict	0.600000
scatter plot from two dataframe columns	plotting scatter plot data x y	0.125000
interpolate values according to	interpolate	0.076923
timedelta-like	core indexes td index cmp opname	0.055556
of value from 1-dimensional ndarray only use	core indexes categorical index get value series key	0.100000
'np ndarray' is	numpy array equal left right strict_nan check_dtype	0.500000
multiindex from	multi index	0.020000
to iterate	html	0.011765
validate that an positional indexer	positional setitem indexer indexer	0.052632
dictionary for the passed	construct axes dict from	0.250000
chained	chained	1.000000
union of two index	core indexes range index union other	0.083333
the symmetric difference	symmetric difference	0.166667
a style_dict to an openpyxl style object	openpyxl1writer convert to style cls style_dict	0.166667
list of row elements from the	io html	0.012987
dtype is of the timedelta64[ns] dtype	core dtypes is timedelta64 ns dtype	1.000000
fast lookup of value from 1-dimensional ndarray only	period index get value series	0.071429
fast lookup of value from 1-dimensional ndarray only	datetime index get value series	0.071429
float is formatted in	eng float	0.200000
array interface return my values	interval index array result	0.125000
write text representation of object to	ndframe to	0.043478
a new block (of a	core block setitem indexer	0.066667
if arg is a string then try to	try aggregate string function arg	1.000000
datetime time the time part of the timestamps	indexes datetime index time	0.166667
value inplace	value	0.005155
from 1-dimensional ndarray only use this	index set value arr key	0.023810
return a fixed	bdate range start end	0.111111
subject string in the series extract groups from	extract arr	0.066667
boolean if values in the	index ops mixin is	0.100000
wide panel to long	wide to long	1.000000
of value from 1-dimensional ndarray	key value	0.011628
ndarray	core indexes index set value	0.023810
see if a url has a valid protocol	is url url	0.047619
index	data frame set value index	0.333333
a decorator to take optional positional and keyword	optional args decorator	0.083333
we	ordered cls	0.055556
load a pickle with a	compat load	0.200000
index and plural 'names' parameter for multiindex	core indexes index validate names name names deep	0.071429
only	core series	0.008000
and string-like array to convert object	maybe convert string to object	0.142857
2d from panel holding passed axis constant	panel dropna axis how inplace	0.200000
only use this	index set value arr key	0.023810
min_periods	min_periods	1.000000
axis equal values	ndframe rank axis	0.250000
concatenation of an datetimelike array of arrays each	concat datetime to_concat axis	0.125000
the actual filter	computation filter bin op	0.250000
add in numeric methods	add numeric methods binary cls	1.000000
result to have correct dtype	result name data sparse_index fill_value	0.500000
bytes see :class packer for	io	0.003012
python expression	core computation eval expr	0.083333
and plural 'names' parameter for multiindex	name names deep	0.125000
parse specified	file parse	0.125000
validate the	io validate	0.062500
a scalar to a compat for	scalar to	0.100000
it has one	series	0.006757
value from 1-dimensional ndarray only use this	core indexes period index get value series key	0.071429
the 'info axis' see indexing for more this	ndframe keys	0.083333
a resample of	period	0.016667
create and return a basegrouper which is an	get	0.007143
operations to convert datetime-like	indexes period index cmp opname nat_result	0.066667
sparse-compatible version of ndarray take	core sparse sparse series take indices axis convert	1.000000
of bytes in the	indexes multi index nbytes deep	0.052632
the binary feather-format for dataframes	feather fname	0.083333
reshape data	core data frame	0.005917
op string for this	core computation bin op generate	0.066667
perform generic binary operation with optional	binop other func level	0.333333
fast lookup of value from 1-dimensional ndarray	core indexes datetime index get value series	0.071429
of myself	categorical	0.019231
timedelta index with day	core indexes timedelta	0.083333
series based on type and coerce into matrices	core arrays to mgr arrays arr_names index	0.250000
calculate slice bound that corresponds to given label	indexes index get slice bound label	1.000000
datetimeindex from one time zone	indexes datetime index	0.007634
a tree-like object that can be used to	frame	0.009091
called after a	core series array	0.100000
the array interface	indexes interval index array result	0.125000
to the underlying array which	datetime index ops mixin	0.029412
function for series arithmetic operations	method series op	0.333333
take a string-like that is	string array	0.038462
the operations to the cls evaluate the doc	aggregate operations cls use_numexpr	0.142857
values	values na_sentinel	1.000000
underlying data	core indexes multi	0.014493
to ndarray raises on scalar	to ndarray	0.166667
node must already exist and	io hdfstore	0.014493
the block	create for block cls	0.333333
write each dataframe in panel	core panel	0.019231
the process of casting data from some	indexes numeric index assert safe casting cls data	0.047619
frame table	appendable multi series table	0.200000
string starting at	rsplit arr pat	0.037037
version to operate on as	block try operate values	0.125000
styles to	io formats styler	0.021277
the datetime format of a given datetime	datetime format dt_str dayfirst	0.250000
insert item at selected position	insert loc item value allow_duplicates	1.000000
with custombusinessday as	cdate range start end periods	0.333333
up	io	0.003012
common	common ax	1.000000
for last non-na/null value	series last valid index	0.250000
as boxed values such as timestamps/timedelta	datetime like block mixin get values	1.000000
type not dtype instance associated with an	type arr_or_dtype	0.142857
datetimeindex from one time	datetime index	0.007042
error is encountered in	parser error	0.055556
method to handle na filling of	fillable values indices allow_fill	0.125000
new datetimeindex	core indexes datetime index	0.007634
to ndarray raises on	to ndarray	0.166667
return the	range index	0.021739
get	core categorical get	0.100000
fast lookup of value from 1-dimensional ndarray only	core indexes period index get value	0.071429
fast lookup of value from 1-dimensional ndarray only	indexes datetime index get value series key	0.071429
ndarray or list of lists	matrix data index columns	0.500000
interpolate machinery	interpolate with fill method axis inplace limit	0.200000
csv file (discouraged	csv cls path	0.066667
from	raise_on_error	0.125000
use	indexes index set value arr key	0.023810
string raise a typeerror	string cls string	0.125000
in file	key	0.005051
in file node must already exist	key value	0.011628
block_shape	block_shape	1.000000
nrows ncols - number	dataframe nrows ncols	0.250000
for panel objects and will raise	panel to	0.027027
validate that we	is	0.005291
window of type window_type and size window on	window win_type min_periods	0.100000
provide concatenation of an datetimelike array of	concat datetime to_concat axis typs	0.142857
plots	plotting	0.111111
type checking function of type	type	0.024390
fast transform path for aggregations	group by transform fast	0.333333
in this object	core	0.001326
return a fixed frequency	bdate range start end periods	0.111111
of	set value	0.023256
index are equal	assert almost equal	1.000000
return index or ndarray filled with	datetime index ops mixin	0.029412
the length of that group - 1	core group by cumcount ascending	0.166667
counts	counts	0.666667
unaltered	normalize	0.076923
we do need a multi reindex this is	core series needs reindex multi	0.333333
construct an intervalindex from a 1d array	from intervals cls data	0.125000
process of casting	safe casting	0.125000
called after	indexes index array	0.100000
a frequency	freq	0.016129
are passed a list-like indexer	interval index convert list indexer keyarr kind	0.066667
1-dimensional ndarray only	value arr	0.023810
compute median of groups excluding missing values	core group by median	1.000000
in file node	io hdfstore append key value	0.016667
provide concatenation	core dtypes concat datetime to_concat axis typs	0.142857
union of two multiindex	index union other	0.037037
create and return a	get	0.007143
a styler	io formats styler	0.021277
add the series	add series	1.000000
return a stringified and numeric for these values	na values na_values	0.333333
that can be	io html frame parser build	0.014706
new unit if needed otherwise	core dtypes datetime tzdtype new cls unit	0.055556
to apply we are stripping all of the	apply	0.026316
by an	parser	0.008000
downsample the	core period index resampler downsample how	0.200000
compose 2 or more callables	reshape compose	1.000000
bytes	msgpack	0.022222
index	core	0.001326
to specified frequency	core ndframe asfreq freq method how	0.250000
we need to coerce a scalar to a	period index coerce scalar to	0.071429
index with day calendar	core indexes	0.004762
a list of tuples of the (attr formatted_value)	index ops mixin format attrs	0.142857
which produces a datetimeindex	core indexes datetime index	0.007634
of the index or maximum along an axis	datetime index ops mixin max axis	0.333333
downsample	period index resampler downsample	0.200000
a concise listing of available options grouped by	core pp options list keys width _print	0.111111
to	indexes datetime	0.011494
at particular time of day e	core ndframe at time time asof	0.066667
if we have an object dtype	dtypes	0.031746
difference of	difference	0.142857
format dataframe into wide 3d panel format	data frame to panel	0.333333
create and return the block manager from a	to manager sdf	0.052632
with times to	indexes datetime	0.011494
string raise	string	0.037736
float values converted into	io formats float array formatter get result	0.055556
reset the display options	reset display options	0.200000
a block of same	block make block same	0.333333
of styler with a	io formats styler	0.021277
integer	integer	0.750000
float values converted into strings	float array formatter get result	0.055556
of unique elements of arr1 and arr2 are	contents arr1 arr2	0.066667
'numpy' library the third	validate take with convert convert args kwargs	0.055556
styler with a custom	formats styler from custom	0.200000
file node must already exist	io hdfstore	0.014493
an indexer even when non-unique	index get indexer for target	0.250000
numeric	is numeric v	0.333333
the process of casting data from	safe casting cls data	0.047619
of value from 1-dimensional ndarray only use	arr key value	0.038462
handle 2-d slices equiv to	panel apply 2d func	0.200000
use this if you	key	0.005051
take which sets nan values	core take nd arr	0.125000
the bool	bool	0.043478
a dataframe to a sql database	io sqlite database to sql frame	0.500000
function for series	method series	0.333333
key as	key values	0.142857
spreadsheet-style pivot table as	core reshape pivot table	0.111111
from maps[0] raise keyerror	chain map	0.034483
its values	core	0.001326
subtraction of two datetimeindexes	core indexes datetime index sub datelike dti other	0.333333
try to cast to the specified dtype	result dtype	0.142857
1d array return an array	array vals	0.083333
version to operate on	block mixin try operate values	0.333333
found in	mixin isin	0.166667
index	reset index	0.125000
and	func method args	1.000000
index or ndarray filled	index ops mixin	0.019231
etc' nentries - number of entries in	nentries nlevels prefix	0.250000
read sql query or database table	io read sql sql con index_col coerce_float	0.166667
return boolean indicating if self is view of	ndframe is view	0.200000
1-dimensional ndarray only use	value	0.005155
fixed	range start end	0.133333
by category value returning a new	values inplace ascending na_position	0.071429
protection	protection cls	0.500000
values from	col convert values	0.333333
memory usage of	core index ops mixin memory usage deep	0.200000
styler with a custom template and	formats styler from custom template	0.142857
month and day_of_month	semi month	0.166667
gets called prior to	series array prepare result	0.111111
values between particular times	core indexes datetime index indexer between	0.125000
index	indexes timedelta index maybe	1.000000
groups in each string in the series	str extract	0.035714
pandas objects along a particular axis with	axis join	0.142857
construct and returns axes if supplied in args/kwargs	ndframe construct axes from arguments args kwargs require_all	1.000000
return value at the given quantile	quantile	0.058824
a boolean whether this axes needs validation for	ndframe indexer should validate	0.166667
of an indexer even when non-unique	indexes index get indexer for target	0.250000
method to work as desired	index getitem key	0.166667
from a 1d array of	from intervals cls data name	0.125000
of an series refer to numpy ndarray repeat	core series repeat repeats	0.333333
a block if we	core block	0.010870
memory usage	memory usage deep	0.200000
from ndarray	data index columns	0.125000
the series extract groups from the first match	extract frame arr	0.047619
dtype is of the string dtype	core dtypes is string dtype	1.000000
the grouper indexers	grouper obj	0.142857
render a dataframe to	data frame to	0.074074
see :class	io	0.003012
labeling information in the columns under the index	index	0.002004
the html	io	0.003012
'name' parameter for general index	indexes index validate	0.066667
operations to convert timedelta-like	td index cmp opname	0.055556
left and right panels are equal	util assert panelnd equal left right check_dtype check_panel_type	0.333333
can be	io	0.003012
the len of myself	categorical size	0.111111
convert to our native types format slicing if	to native types slicer na_rep date_format	0.250000
self as	core sparse sparse series as	0.125000
each interval in the index	indexes interval index	0.062500
l	l	1.000000
returns the float values converted into strings	formats float array formatter get result	0.055556
paragraphs with length less than a given width	arr width	0.142857
given width	width	0.083333
list of tuples of the (attr formatted_value)	multi index format attrs	0.142857
needs additional	indexes period	0.034483
returns the float values converted	formats float array formatter get result as	0.055556
the codes by the indexer	indexer	0.009174
the we have a dtype compat for the	name freq	0.083333
load a feather-format object from the	io read feather	0.083333
offset/observance to a	rule	0.050000
ticks	time series date formatter	1.000000
1-dimensional ndarray only use this if you	indexes index set value arr key	0.023810
value	arr key value	0.038462
iterate over the blocks collect and	consolidate transposed	0.062500
array and create the manager	array to mgr data index columns	1.000000
to coerce	core indexes period index coerce	0.125000
sub-classes to define	resampler gotitem key ndim subset	0.333333
diff of the values	diff n axis	0.111111
color background in a range according to	formats styler background gradient s cmap low high	0.142857
self as	sparse sparse series as	0.125000
handle 2-d slices equiv to iterating over	panel apply 2d func	0.200000
dispatch to apply we are	group by mixin apply func	0.050000
utility frequency	freq	0.016129
function to my	func mgr	0.083333
the underlying data	core indexes range	0.062500
determines if two	equals other	1.000000
be	new	0.058824
block manager from a	to manager sdf columns index	0.052632
indicating whether the file	io hdfstore	0.014493
for iterables you should probably use pprint_thing()	pprint seq seq _nest_lvl max_seq_items	0.333333
we if the passed type is	period dtype is	0.125000
determines if two index objects contain the	core indexes index equals other	0.200000
type is an	dtypes interval dtype is	0.066667
iterate over	frame parser	0.012500
take optional positional and	optional	0.050000
if we are index sliceable then	to index sliceable obj key	0.083333
the categorical by category value returning a new	values inplace ascending na_position	0.071429
return a tree-like object that can be used	html frame parser	0.012658
must be sparseseries or	core sparse maybe to	0.333333
an ndarray copy if specified coerce to the	dtype copy	0.032258
for panel objects and will raise an error	panel to sparse	0.037037
frequency datetime index with business day	indexes	0.004651
lists to line delimited json	io json convert to line delimits s	0.200000
take optional positional and keyword	util optional	0.066667
convert	convert	0.645161
return the join	operation get join	1.000000
cannot append to : write out the indicies	write	0.017857
round a dataframe	data frame round	0.166667
index objects	core indexes datetime index ops mixin	0.029412
compute	reshape crosstab index	0.066667
and return an item pair from maps[0]	chain map popitem	0.055556
value to format	value	0.005155
create a new unit	new cls unit tz	0.055556
that time and panels are conformable	core ensure like indices time panels	0.250000
delimiter string starting at	rsplit arr pat	0.037037
an item pair from	map popitem	0.055556
this if	set value arr key	0.023810
sparse reindex and return a	sparse reindex new_index	0.250000
and / or columns using input function or	copy inplace	0.055556
an enumerated type or categorical variable parameters	core factorize	0.200000
a separate excel	excel path na_rep engine	0.166667
each string in the series/index	core str	0.022727
of value from 1-dimensional ndarray only use	period index get value	0.071429
the pytables file	io hdfstore	0.014493
set new labels on multiindex	indexes multi index set labels labels level	0.333333
ndarray copy if specified coerce to the	copy	0.012821
transform long stacked format dataframe	core data frame to	0.037037
from 1-dimensional ndarray	set value arr	0.023810
needs additional handling as	period index array wrap result	0.050000
create and return	core get	0.038462
form the intersection of two index objects	core indexes range index intersection other	0.083333
csv file (discouraged please use :func	csv cls path header sep	0.066667
function is called via the 'numpy' library	validate take with convert convert args	0.055556
reset the display	util reset display	1.000000
return our new	index resampler get new	1.000000
occupying requested label default to specified	series get label default	0.083333
fractional part of	frac x precision	0.100000
to apply we are stripping all of	apply	0.026316
return boolean if	mixin is	0.083333
see :class packer for options	msgpack packb	0.025641
add in the datetimelike methods (as	mixin add datetimelike methods	0.333333
the date belongs to a leap year	is leap year	0.142857
from 1-dimensional ndarray only use this	key	0.005051
the union of	index union	0.333333
is defined as	view cls	0.047619
csv file (discouraged please use :func pandas read_csv	frame from csv cls path header sep	0.066667
specialized intersection	indexes datetime index intersection other	0.142857
for datetimelike properties of	period properties	0.052632
ndarray filled with nat which has the same	mixin nat new	0.050000
true if this is a valid column	is	0.005291
the array interface return	core indexes interval index array result	0.125000
categorical adjusted for groupby	core indexes categorical index codes for groupby sort	0.333333
the object	core ndframe	0.005051
maximum	ops mixin max	1.000000
my values return a block if	core block	0.010870
we are index sliceable then return	to index sliceable	0.083333
data or return the error dataframe/dict	plotting mplplot parse errorbars label err	0.142857
applies the put method to its	put	0.043478
gets called after a ufunc needs additional	period index array wrap result context	0.041667
highlight the maximum by	highlight max subset	0.333333
and return a basegrouper which is	get	0.007143
panel-like dataframe parameters	index time panels names	0.076923
going to write this as a frame table	io appendable multi series table write obj	0.333333
'numpy' library the third	with convert convert args	0.055556
return a boolean if we need a	is	0.005291
or by a series of	groupby by axis	0.045455
series or by a series of columns	ndframe groupby by axis	0.333333
alert a user about a malformed	alert malformed msg row_num	0.500000
values to be at least 1	shape values ndim	0.050000
around numpy result_type which overcomes the npy_maxargs 32	computation result type many	0.142857
to apply we are stripping all	by mixin apply func	0.050000
is not supported for panel objects	panel to sparse	0.037037
string for	generate	0.062500
a spreadsheet-style pivot table as a dataframe	reshape pivot table data values index columns	0.166667
called prior to a ufunc	core series array prepare result context	0.333333
find indices where elements of v should	indexes frozen ndarray searchsorted v	0.033333
of value from 1-dimensional ndarray only	indexes datetime index get value	0.071429
prior to	core series array prepare result	0.111111
csv file	from csv cls path sep	0.066667
groupby objects	group	0.027027
values at particular time of day e g	at time time	0.066667
not satisfy the boolean criterion specified by func	by filter func	0.250000
starting at the	rsplit arr	0.037037
plotting accessor and method examples	plot methods	1.000000
reindex from a non-unique which categoricalindex's are almost	reindex non unique target	1.000000
gets called prior to	array prepare	0.111111
compare numeric	numeric v string	0.333333
return packed bytes	io msgpack packb	0.025641
how to create the grouper indexers	grouper obj	0.142857
a tree-like	io html	0.012987
type is an actual dtype	extension dtype is dtype cls dtype	0.111111
levels of both	index equal levels	0.200000
return the formatted data as	core indexes index formatter func	0.083333
already exist	hdfstore	0.014925
from 1-dimensional	index	0.002004
array which has bin edge values	bins generic values binner closed	0.200000
object for datetimelike properties of the	period properties	0.052632
midnight length	indexes datetime index	0.007634
cast to	to timestamp freq	1.000000
string matches a regular expression	case flags	0.166667
create a new unit if needed otherwise	new cls unit	0.055556
bytes in	multi index nbytes deep	0.052632
sub-classes to	resampler gotitem key ndim subset	0.333333
indicated if we have mixed	indexes multi index have mixed	0.166667
x in y if	in x y	0.047619
might need to coerce a code to	coerce freq code	0.076923
by definition have	io formats datetime64tzformatter format strings	0.166667
if 'series argmin'	skipna skipna args	0.100000
an intervalindex from a 1d array	from intervals	0.125000
the underlying data	core indexes multi index	0.013158
csv file (discouraged	data frame from csv	0.066667
table	append key value	0.033333
csv file (discouraged please use :func	core series from csv	0.066667
frequency datetime index with	indexes bdate	0.050000
generate an array of unicode strings	randu array nchars size dtype	1.000000
elements that are non-zero this method	series nonzero	0.166667
indexer like _name in the	cls name indexer	0.083333
generate bin edge offsets and bin labels	core generate	0.125000
ndarray only use this if	set	0.012195
intervalindex from a 1d array of interval objects	core indexes interval index from intervals cls data	0.333333
iterate	html	0.011765
sets names on	core indexes multi index set names names level	0.200000
to read from a url file	read	0.033333
be returned from apply if as_index=true	by index with as	0.200000
of python datetime date objects (namely	core indexes datetime	0.011494
the minimum value of the object	core categorical min numeric_only	0.250000
determines if two index	core indexes range index equals other	0.200000
function for series arithmetic operations	core bool method series op	0.333333
date_format return	date_format	0.058824
an ordered multiindex	indexes multi index	0.013158
a column	data name data	0.250000
to a leap	indexes period index is leap	0.125000
csv file (discouraged please use	series from csv cls path	0.066667
the values at the new freq essentially	core resampler asfreq fill_value	0.066667
numeric operations	numeric operations	1.000000
to my values return a block if we	core block	0.010870
offset/observance to a datetimeindex	rule	0.050000
iterate over	io html frame parser build	0.014706
from 1-dimensional	value arr key	0.023810
return an array repr of this	indexes period index	0.035714
delete	delete	1.000000
return a formatter function for a	get	0.007143
dataframe	core ndframe	0.015152
control get_slice_bound	indexes index get loc only exact matches key	0.142857
of series concat	core dtypes get series	0.250000
apply mapper function to its categories not	core categorical map mapper	0.166667
take which	core take	0.125000
sets names on levels warning	index set names names level validate	0.200000
protection_dict	cls protection_dict	1.000000
time	core ensure like indices time	0.125000
gets called after	core series	0.008000
in self data and the attrs from _build_styles	io formats styler translate	0.200000
array of python datetime date objects (namely	indexes datetime	0.011494
and return the op string for	op generate	0.066667
the stata date formats to a type	datetime to stata type	0.200000
the dom	io html frame parser build doc	0.125000
create an indexer like _name in the class	core ndframe create indexer cls name indexer	0.166667
tree-like object that can	build	0.013514
block	data col create for block	0.333333
datetimeindex with times to	core indexes	0.004762
and return an item pair from	popitem	0.043478
if we are a view have	is	0.005291
returns the indices that would sort the	argsort	0.038462
panel-like dataframe parameters	time panels names	0.076923
fname	validate kwargs fname	0.250000
bounds for parsed time string and its resolution	index parsed string to bounds reso parsed	1.000000
iter1 iter2 iterables that produce elements	assert copy iter1 iter2	0.166667
node must already	hdfstore append key	0.016667
append rows	append	0.012987
already exist and be table	append	0.012987
object	index	0.002004
used when a	core	0.001326
exist and be	value format	0.016667
index or ndarray filled with nat which has	index ops mixin nat new box	1.000000
of rows if n	n dropna	0.166667
the indexer input	indexer	0.009174
from a	from string cls	0.500000
a subclass of styler with a custom	formats styler from custom	0.200000
read csv file (discouraged	core series from csv cls	0.066667
writing stata	data frame to stata	0.200000
a simple cross-tabulation	core reshape crosstab	0.066667
of kwargs suitable for	kwargs cls	0.040000
starargs attribute was changed to	base expr visitor visit call 35 node side	0.066667
to convert timedelta-like	indexes td index cmp opname nat_result	0.055556
lookup of value from 1-dimensional ndarray only	core indexes index set value arr key value	0.038462
do a list replace	manager replace list src_list dest_list inplace	1.000000
applies function along input axis of dataframe	data frame apply func axis broadcast raw	1.000000
for groupby	groupby	0.028571
generate bin edge	core generate	0.125000
reshape data	data frame	0.005714
fast lookup of value from	core indexes index set value arr key value	0.038462
we always want to	indexes period index shallow copy with infer values	0.200000
use this if	index set value arr	0.023810
bytes in	nbytes	0.046512
of my hashed	multi index hashed	0.166667
positional indexer cannot enlarge its target	valid positional setitem indexer indexer	0.052632
hexadecimal representation used to tag	replacer x	0.125000
vectorized membership of x not in y if	computation not in x y	0.066667
can be	io html frame	0.012987
create a new unit if needed otherwise return	dtypes datetime tzdtype new cls unit tz	0.055556
return of an indexer even when non-unique	indexes index get indexer for target	0.250000
axis omitted where alternately any or	axis how thresh subset	0.100000
indices of	core	0.001326
returns the base	tseries get base	0.333333
gets called after a	series array wrap	0.100000
the where condition cond on	core computation where cond	0.111111
append to table	append	0.012987
determine	n method	0.125000
columns excluding na/null	data	0.009709
a url has a valid	url url	0.045455
datetime string	string	0.018868
csv file (discouraged please use :func pandas	from csv cls	0.066667
with times to midnight length	core	0.001326
called via the 'numpy' library the third	validate take with convert convert args kwargs	0.055556
trying to operate on an old version?	io fixed validate version where	0.142857
dataframe with labeling	data frame	0.005714
be used to	parser	0.008000
must already	hdfstore	0.014925
to read from a url file	read obj	0.058824
if two indices overlap	overlap	0.047619
mixin	mixin	0.407407
return datetimeindex with times to midnight length is	core indexes datetime	0.011494
from	parser parse	0.250000
index and its underlying	index	0.002004
a boolean whether this axes needs validation	core ndframe indexer should validate	0.166667
takeable	takeable	1.000000
a simple cross-tabulation of	reshape crosstab index columns values	0.066667
the decimal	io formats	0.027778
memory	memory	1.000000
string representation for	frozen ndarray unicode	0.083333
an observation's missing	stata missing	1.000000
manage style and color based on	mplplot apply style colors colors kwds col_num	0.142857
handle na filling of take	core indexes index assert take fillable values indices	0.250000
provides a	period index resampler	0.062500
val	val	0.294118
wrap long strings in the series/index to	core str wrap	0.333333
to shift without copying data the shifted	core ndframe slice shift periods	0.083333
table in file node must already exist	key value	0.011628
get test result and reset test_results	computation get test result	0.250000
block manager from a dataframe	manager sdf columns index	0.052632
stata binary dta files parameters	stata	0.022222
intervalindex from a 1d array of	from intervals cls data	0.125000
dict-like	dict like obj	1.000000
the exception raised matches the expected exception	util assert raises contextmanager exception matches	0.142857
apply function and combine results together in an	apply func	0.027027
infer the fill value for the nan/nat from	infer fill value val	0.500000
that	cls	0.016949
gets called after a	period index array wrap result	0.050000
the operations to the cls evaluate the	aggregate operations cls use_numexpr	0.142857
check if the object is a file-like object	core dtypes is file like	0.333333
no	no	0.833333
new categorical by	categorical sort values inplace	0.166667
string starting at the end of the	rsplit	0.031250
openpyxl v2 color objects suitable for	io openpyxl20writer	0.035714
the vectorized membership of x not in y	core computation not in x y	0.066667
we have a null slice	core is null slice	1.000000
string representation	core indexes index unicode	0.083333
to beginning	offset beg	0.166667
called after a	core indexes index	0.007042
locals	locals	1.000000
fast lookup	key	0.005051
values as an enumerated type	factorize values sort order	0.111111
column and index	frame set value index col	0.666667
columns using input function or functions	ndframe rename axis mapper axis copy inplace	0.250000
create a table reflecting	io sqlite table create table setup	0.066667
object to the	ndframe to	0.043478
already exist and	io hdfstore append key	0.016667
panel or object coercible to panel	core panel update other join overwrite filter_func	0.200000
cross-tabulation of	index columns	0.028571
take	core take	0.125000
be used to iterate over	html frame parser	0.012658
value from 1-dimensional	get value	0.166667
eom	month	0.038462
determine if dtype	n method dtype	0.250000
hash table-based unique uniques are returned in	core unique values	0.333333
coerce the	core dtypes coerce	0.133333
dtype (e g convert back to bool/int	dtypes maybe downcast to dtype result dtype	0.500000
with a metaclass	compat add metaclass metaclass	0.125000
used to iterate over	io html frame	0.012987
validates that we	ordered	0.017857
'numpy' library the third	compat numpy validate take with	0.055556
the shape of the underlying data	core index ops mixin shape	0.250000
ndarray only use this if	index set value	0.023810
single dtype if dtype is	core simple blockify tuples dtype	0.111111
of the values to be at least	values	0.008547
table in	hdfstore append key value	0.016667
frequency conversion method for	freq method	0.333333
for more this is index	ndframe	0.005025
for regular or 'level_x'	io json set default	0.250000
already exist and be	key value format	0.016667
for this argument return	arg	0.018868
kwargs suitable for initializing or updating-on-copy	kwargs cls	0.040000
can	frame parser build	0.014706
interpolate values according	interpolate method axis	0.166667
sort_categories	sort_categories	1.000000
slice_or_indexer	slice_or_indexer	1.000000
the necessarily hierarchical index labels returning a dataframe	data frame	0.005714
take	categorical take	0.200000
nat which has the same length as the	ops mixin nat new	0.050000
sanitize input data to an ndarray	sanitize array data index	0.250000
have a fully reindex-output	data frame group by reindex output result	0.045455
construct dataframe from dict of	data frame from dict cls data	0.200000
in sparse	sparse	0.026316
pack	pack o	0.250000
already exist and be table	value format	0.016667
moving window	window apply window	0.166667
to deprecate a	util deprecate	0.166667
parse the raw data into a	io html frame parser parse raw data rows	0.250000
update index attributes e g freq depending on	indexes timedelta index maybe update attributes attrs	0.200000
python datetime date objects (namely the	indexes datetime	0.011494
csv file (discouraged please use :func	from csv cls	0.066667
from passed panel or object coercible to panel	core panel update other join overwrite filter_func	0.200000
id of obj	id obj	1.000000
return the expression of the	core computation	0.047619
apply the function to my values return a	apply func	0.027027
load a feather-format object from the	feather	0.050000
type t or tuple of	core computation is type t	0.083333
s bears the risk of	subarr	0.050000
is datetimelike (e	maybe to datetimelike data	0.142857
provide concatenation	dtypes concat datetime to_concat axis typs	0.142857
a new multiindex from the	multi index	0.020000
index objects contain	index	0.004008
that can be used to iterate	parser	0.008000
an positional indexer cannot enlarge its	valid positional setitem indexer indexer	0.052632
new multiindex from	core indexes multi	0.014493
xport	sas parse	0.066667
compat_args	compat_args	0.833333
panel objects and will raise an	core panel to sparse	0.037037
each axes overridden in	plot logic ax data	0.083333
a boolean if we	core indexes index is	0.083333
reindex and return	reindex new_index	0.250000
the vectorized membership of x in y if	computation in x y	0.047619
input data_columns and min_itemize and create a data	validate data columns data_columns min_itemsize	1.000000
that can	frame parser	0.012500
our asof key the 'on'	core reshape as of merge asof key	0.250000
we are index sliceable then return my	to index sliceable obj key	0.083333
flattened values of the underlying data see	ravel order	0.037037
lookup of value from 1-dimensional ndarray only use	indexes datetime index get value	0.071429
infer types of	base infer types	0.500000
bins to which	bins	0.090909
a recursive	compat recursive	0.166667
downsample the	core period index resampler downsample	0.200000
array interface return	core series array result	0.166667
general index and	core indexes index validate	0.066667
a new categorical by default	core categorical sort	0.166667
index with day calendar as	core indexes	0.004762
strings in each element in the series/index	core str get arr i	0.142857
after a ufunc needs additional	indexes period index array wrap result context	0.041667
a url has a valid	is url url	0.047619
index with target's values (move/add/delete values as	core indexes multi index	0.013158
type window_type and size window on the	window arg window win_type min_periods	0.100000
binners	binner	0.125000
number	multi	0.018182
new unit if	tzdtype new cls unit	0.055556
series with multiindex to produce	series	0.006757
mode s of the dataset	series mode	0.083333
to write this as a frame table	series table write obj	0.333333
a series excluding elements	core series group	0.030303
of type window_type and size window on the	window win_type	0.100000
intersection of two index	index intersection other	0.052632
to set	core series set	0.076923
into a dataframe	index_col coerce_float parse_dates	0.333333
rank the values along a given axis	core rank values axis	1.000000
class for writing stata binary	to stata fname	0.200000
operations to convert timedelta-like	indexes td index cmp opname nat_result	0.055556
additional handling as	wrap	0.019231
applies a moving window of	apply window	0.166667
return the unicode normal form for the strings	string methods normalize form	0.066667
suitable for a panel-like dataframe	index time panels names	0.076923
format	format dt_str	0.250000
font object parameters	font	0.125000
align a set of terms	core computation align terms	1.000000
window of type window_type and size window on	rolling window arg window win_type min_periods	0.100000
passed a list-like indexer return	interval index convert list indexer keyarr kind	0.066667
shift without copying data	slice shift	0.083333
used when a manipulation result has the same	core ndframe constructor	0.055556
return a boolean if the passed type is	is	0.005291
read rows from self f skipping	io fixed width reader get rows n skiprows	0.166667
return an attributes dict for my class	indexes index get attributes dict	0.250000
a masked rec array	core masked rec array	0.250000
panel objects and	core panel to sparse	0.037037
tree-like object that can	parser	0.008000
class for writing stata binary	stata fname	0.200000
compute a	crosstab	0.050000
exponential weighted sample correlation	core ewm corr other pairwise	1.000000
that potentially upcasts the	core dtypes maybe upcast	0.500000
block	create for block	0.333333
additional	period index array	0.050000
sanitize input data to an	sanitize array data	0.250000
to apply we are stripping all of the	core group by mixin apply	0.050000
localize tz-naive timeseries to target time zone	core ndframe tz localize tz axis level copy	1.000000
apply the function to my values return	apply func mgr	0.166667
of temporary variables in this scope	scope ntemps	0.250000
the classes which	index	0.002004
the built up styles to html	io	0.003012
make new multiindex	core indexes multi index	0.013158
types to stata types returns the	dtype to stata type	0.500000
with closed bounds	interval closed bounds	0.500000
return the join	merge operation get join	1.000000
for writing stata binary	stata fname	0.200000
cast it	maybe cast	0.100000
styler with a custom	styler from custom	0.200000
convert :mod datetime to the	plotting dt to	0.125000
boolean if	core index ops mixin is	0.100000
window of type window_type and size window	arg window win_type min_periods	0.100000
series that is datetimelike	to datetimelike data	0.125000
exist and be table	hdfstore append key	0.016667
raise keyerror is maps[0]	map	0.029412
packed bytes see	msgpack	0.022222
of type t or tuple of types	is type t	0.083333
compute the vectorized membership of x in	in x	0.166667
to apply we are stripping all of the	mixin apply	0.050000
to apply we are stripping	by mixin apply func name	0.050000
holidays between start_date and	holiday calendar holidays	0.166667
render a dataframe to a tabular environment	data frame to latex buf columns col_space header	0.111111
a 1d array return an array	hash array vals	0.083333
a cross sectional for a given location in	block manager fast xs loc	0.142857
lookup of value from	key value	0.011628
the header of a table	parser parse thead table	0.333333
compute a simple cross-tabulation of	reshape	0.037037
occupying requested label default to specified	core sparse sparse series get label default	0.083333
ufunc	indexes period index array wrap result context	0.041667
we have	ordered cls	0.055556
if we define an builtin function for	grouper is builtin func arg	0.333333
as	period index array wrap	0.050000
to categorical	categorical	0.009615
datetimelike	to datetimelike data	0.125000
ndarray repeat	repeat repeats	0.142857
the same dimensions	ndframe	0.005025
fillna but using the interpolate machinery	interpolate with fill method axis inplace	0.200000
the handle if its	io stata reader	0.142857
float	io formats float	0.055556
shape of	shape	0.047619
determines if two multiindex objects have the	core indexes multi index equals other	0.333333
parse specified sheet s into a dataframe	excel file parse	0.125000
appropriate class of series	series result type result	0.250000
try to read from a url	read	0.033333
to coerce any object types	object block convert	0.083333
to panel	core panel update other	0.500000
object that	build	0.013514
name this allows simpler access to columns for	ndframe setattr name	0.166667
of v should be inserted in	core indexes frozen ndarray searchsorted v	0.033333
from	index set value arr	0.023810
1-dimensional ndarray	index set value arr key	0.023810
provides a resample of	period index	0.024390
ndarray argsort argsorts	core series argsort	0.083333
levels of both multiindex	multi index equal levels	0.200000
series that is datetimelike	datetimelike	0.076923
new unit if needed otherwise return	dtypes datetime tzdtype new cls unit tz	0.055556
gets called after a ufunc needs additional handling	indexes period index array wrap result context	0.041667
with element index pairs for each element in	map indices py arr	0.090909
tree-like object that can be	html frame parser	0.012658
times to midnight length	core indexes datetime	0.011494
stata binary dta files from array-like objects parameters	to stata fname convert_dates write_index encoding	0.333333
delegate	delegate	1.000000
and return an item pair from maps[0]	compat chain map popitem	0.055556
after a	series	0.006757
return the number of bytes in the	nbytes	0.046512
arg is a passed	arg errors	0.026316
reduction type operation if we	ops mixin reduce op name axis skipna	0.083333
right array parameters	right closed	0.500000
a a left and right array	cls left right closed	0.166667
return the underlying data which is a	index	0.002004
label for first non-na/null value	core series first valid	0.250000
most likely frequency given the input index if	index warn	0.333333
types	types slicer na_rep float_format	0.200000
the values	core block shape values	0.050000
based on type and coerce into matrices	arrays to mgr arrays arr_names index columns	0.250000
check to see if a url has	is url url	0.047619
to specified frequency	core ndframe asfreq freq method how normalize	0.250000
only use this if you	core indexes index set value arr key	0.023810
file node must already exist and	hdfstore append key value	0.016667
the array interface return	indexes categorical index array dtype	0.125000
to iterate	html frame parser build	0.014706
the array interface return my	index array result	0.125000
that converts json lists to line delimited	to line delimits s	0.166667
if we have an object dtype	core dtypes	0.037037
we don't	validate read kwargs	1.000000
the date belongs to a leap	period index is leap	0.125000
off to scipy	scipy	0.111111
csv file (discouraged please use	core series from csv cls path sep parse_dates	0.066667
return a new manager with	core block manager	0.022727
helper function to determine if dtype is valid	n is valid dtype n method dtype	0.142857
holiday object with	tseries abstract holiday	0.100000
new sparsearray from the input	sparse sparse data	0.076923
the strides of the underlying data	core index ops mixin strides	0.333333
we take a string-like that is object	string array data encoding	0.038462
coerce a scalar	index coerce scalar	0.250000
boolean if we if the passed type is	core dtypes interval dtype is	0.066667
regular expression pat	pat flags	0.105263
date formats to a	to	0.006329
a single block and are a	block manager	0.021277
have a float key and are not	key	0.005051
timedelta index with day as	indexes timedelta	0.083333
checks that path's extension	excel writer check extension	0.250000
interpolate	resampler interpolate method axis	0.166667
ravel	ravel	1.000000
of my values cols	io table values cols	0.200000
process of casting data from some accepted dtype	safe casting cls data	0.047619
python datetime date	core indexes datetime	0.011494
potentially unordered list of the keys corresponding	keys	0.032258
in file node must already	hdfstore	0.014925
read html tables into a list of	io read html io match flavor header	0.200000
valid ordered parameter if	core categorical validate ordered cls ordered	0.058824
series that is datetimelike (e	core indexes maybe to datetimelike data copy	0.142857
compute a simple cross-tabulation	reshape crosstab index columns	0.066667
get integer location	datetime index get loc	1.000000
we are passed a list-like indexer return	indexes interval index convert list indexer keyarr kind	0.066667
concatenator	concatenator	1.000000
shift without copying data	core ndframe slice shift	0.083333
take the codes by	categorical take nd	0.200000
of x not in y if	not in x y	0.066667
bins to which each value of x	x bins	1.000000
exist	hdfstore append key	0.016667
we if the passed type is an	interval dtype is	0.066667
must be	maybe	0.090909
handling as	index array wrap	0.033333
form the union of two	multi index union other	0.066667
particular	repr	0.040000
a row cross-section from	xs key axis copy	0.333333
of casting data from some accepted dtype	assert safe casting cls data	0.047619
apply of dateoffset to datetimeindex raises notimplentederror	offset apply index i	0.333333
manager and a axes dict	core ndframe init mgr mgr axes dtype copy	0.333333
slice of my values but densify first	non consolidatable mix in slice slicer	0.500000
return the correct pandassql subclass based	pandas sql builder con flavor schema meta	0.055556
timeseries to specified frequency	core ndframe asfreq freq method how normalize	0.250000
user about a malformed row	malformed	0.066667
get integer location	core indexes datetime index get loc	1.000000
index return new dataframe with	data frame	0.005714
of openpyxl is supported	is	0.005291
sub-classes to	window gotitem key ndim subset	0.333333
block try to preserve dtype if possible	core putmask smart v m n	0.055556
series extract groups from the first	extract arr	0.066667
handling as	indexes	0.004651
pointer of	index ops mixin	0.019231
you	core indexes index set value	0.023810
return resolution str against resolution code	tseries resolution get reso	1.000000
parse the raw data into	frame parser parse raw data rows	0.250000
values from	generic index col convert values	0.333333
compute the slice locations for input	slice locs start end step kind	0.083333
select values between particular times of the	between	0.043478
table	appendable multi series table	0.200000
list of sql statement that create a	create	0.033333
number of nanoseconds (>= 0 and	core indexes timedelta index nanoseconds	0.066667
the node with the key or none	get node key	0.083333
internal property	ndframe	0.005025
if the process of casting	core indexes numeric index assert safe casting	0.125000
times in parallel	parallel	0.083333
defined	multi index view cls	0.047619
a new multiindex	indexes multi	0.014493
to accelerate unioning a collection	indexes datetime index union many others	0.040000
input values as an enumerated type	core factorize values sort order	0.111111
type window_type and size window	arg window win_type	0.100000
the index's frequency	core ndframe tshift periods freq	0.066667
determines if two index objects contain the	range index equals other	0.200000
data to ndarray raises on	to ndarray cls	0.166667
if we are a categorical possibility	is categorical array	0.500000
null_color for missing	null_color	0.076923
if the levels of both multiindex	multi index equal levels	0.200000
of categoricaldtype this metaclass determines subclass ability	categorical dtype type	0.333333
be	io hdfstore append	0.016667
v should be inserted	ndarray searchsorted v	0.033333
elements of v should be	searchsorted v	0.033333
form the union of two multiindex objects	multi index union other	0.066667
minimum values along an axis	core indexes datetime index ops mixin argmin axis	0.250000
object	io html frame parser	0.012195
json lists to line	convert to line	0.142857
return true if this is	is in table	0.076923
return a tree-like	build	0.013514
the dtype to	dtype	0.010989
is index for series	core	0.001326
construct this type from a string raise a	interval dtype construct from string cls string	0.166667
alert a	parser alert	0.200000
1-dimensional ndarray only use this	value	0.005155
over the	parser build	0.014706
index objects and sorts	index	0.002004
into long stacked format as dataframe	core panel to frame	0.125000
the operations to the cls evaluate	operations cls	0.076923
after	indexes period index array	0.050000
doesn't like to compare numeric	numeric v string like	0.333333
union of two index	indexes index union other	0.083333
for this	indexes	0.004651
block b	block block_items existing_col min_itemsize	0.500000
can be used to iterate	io html frame	0.012987
and a result set coerce	dtypes coerce	0.066667
already	hdfstore append key	0.016667
a list of sql statement that create	create	0.033333
decorator to	args decorator	0.111111
to table	append key value format	0.016667
variance	var	0.166667
called	index array wrap	0.066667
list representing the totally ordered cartesian product of	shape sort xnull	0.066667
ensure that an array object has a	dtypes ensure	0.200000
wrap comparison operations to convert datetime-like to	core indexes period index cmp opname nat_result	0.066667
return if we are	is	0.005291
the float values	formats float array formatter get result as	0.055556
the axis to the block_manager axis	core ndframe get block manager axis axis	0.166667
take the codes by the indexer fill	categorical take nd indexer allow_fill	0.333333
column_levels	column_levels	1.000000
need to coerce	maybe coerce	0.125000
if	set	0.012195
function or functions	rename	0.125000
called after	core indexes period	0.032258
putmask the data to the block we must	core non consolidatable mix in putmask mask	1.000000
the frame	data frame	0.005714
propagate metadata from other to	core ndframe finalize other	0.333333
repeat elements of	repeat repeats	0.142857
to accelerate unioning a	indexes datetime index union many others	0.040000
this level	has level	0.333333
simple	core reshape	0.047619
apply a function elementwise updating	formats styler applymap func subset	0.333333
determine if each string	str match arr pat case	0.166667
add in the	indexes datetime index ops mixin add	0.333333
take which sets nan values in one	take nd arr indexer axis	0.125000
/ pandas type	table type x	0.055556
ndarray only use this	key	0.005051
bytes see	msgpack	0.022222
boolean whether this axes needs validation for	indexer should validate	0.166667
implement a datetime64 block	datetime tzblock	0.100000
to sif http //www stata	to stata	0.058824
table in file node must already exist	io hdfstore append key value	0.016667
of bytes in the underlying	multi index nbytes deep	0.052632
concise listing of available options	pp options list keys width _print	0.111111
shift the	shift	0.166667
new chainmap from maps[1 ]	compat chain map parents	1.000000
function to determine if dtype	dtype n method dtype	0.250000
prior	prepare result	0.111111
wrap comparison operations to convert datetime-like	dt index cmp opname nat_result	0.066667
i am never	block is	0.045455
decorator to capture stderr in a	util capture stderr	0.055556
if the passed type is	is	0.015873
object is a	dtypes is	0.121212
symmetric difference of two index	indexes index symmetric difference other result_name	0.166667
function to	func mgr	0.083333
an ordered multiindex	core indexes multi index	0.013158
of the values to	values ndim	0.050000
returns the float values converted into	float array formatter get	0.055556
a la re split in	split arr pat	0.200000
stripping all of the _upsample kwargs and	mixin apply f	0.166667
which can be iterated over	k	0.153846
our native types format slicing if	native types slicer na_rep quoting	0.200000
block for the diff	block diff n	1.000000
return the ftypes (indication of sparse/dense	ftypes	0.043478
curve with holidays between	calendar holidays start end return_name	0.066667
determines if two	mixin equals other	1.000000
return the node with	get node	0.166667
a tree-like object	frame	0.009091
compute a	core reshape crosstab index columns	0.066667
the diff of the values	diff n axis mgr	0.111111
resolve a variable	core computation scope resolve	0.166667
from 1-dimensional ndarray only use	indexes index set	0.023810
value from 1-dimensional ndarray only use this	indexes period index get value series	0.071429
return index or ndarray filled with	core indexes datetime index ops	0.034483
particular time of day e	time time asof	0.142857
create and return the block manager from a	sparse to manager sdf columns index	0.052632
the block manager from	sparse to manager sdf columns	0.052632
or columns	axis	0.011364
this if	arr	0.013699
ensure that if we don't have	data frame ensure valid	1.000000
convert sql and	convert params sql	0.500000
to apply we are stripping all of the	apply func name	0.050000
return base freq and stride	tseries base and stride	1.000000
a rules normally	calendar init name rules	0.200000
memory usage of my values	range index memory usage deep	0.200000
int or a subset of rows if n	n	0.045455
form the union of two index objects	core indexes index union other	0.083333
series extract groups from	str extract frame	0.047619
sorted ndframe	core ndframe truncate	0.250000
the union of two index objects	indexes range index union other	0.083333
names on index defaults to returning new index	core indexes index rename name inplace	1.000000
deprecate a keyword argument of	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
unstack a k a pivot series	core series unstack level fill_value	0.333333
create a new multiindex from the	indexes multi index	0.013158
the string if not encoded	core	0.001326
sparseseries	sparse kind fill_value	1.000000
from the table this is generally only useful	hdfstore select column key column	0.142857
compute	reshape crosstab index columns values	0.066667
context manager for temporarily setting a locale	locale new_locale lc_var	0.250000
this	core indexes index set value arr	0.023810
lookup of value from 1-dimensional ndarray only	arr key value	0.038462
values at particular time of day e	ndframe at time time	0.066667
number of bytes in	range index nbytes	0.052632
multiindex	multiindex	1.000000
return datetimeindex with	core indexes	0.004762
string 'r' to a timedelta object	core tools coerce scalar to timedelta type r	0.500000
value to format	formats float array formatter value	0.250000
for running code that expects	util assert produces	0.071429
an ordered multiindex compute	indexes multi	0.014493
returns a dataframe with the rows/columns switched	core sparse sparse data frame transpose	0.333333
raise an error in a future release	categorical reshape new_shape	0.142857
wrapper function for series	arith method series	0.333333
on given axis omitted where alternately any	axis how thresh subset	0.100000
slice of my	block slice slicer	0.083333
the index or maximum along an axis	indexes datetime index ops mixin max axis	0.333333
index names to	set default names	0.083333
list indicated if we have	have	0.083333
return a dict of the kinds allowable columns	table queryables	0.055556
intervalindex from a 1d array	from intervals cls data	0.125000
array of datetime time the time part of	core indexes datetime index time	0.166667
an ndarray copy if specified coerce	copy	0.012821
an error is encountered in pd read_csv	parser error	0.055556
add in the datetimelike methods (as	mixin add datetimelike methods cls	0.333333
return a categorical adjusted for	core indexes categorical index codes for	0.333333
function for	core sparse arith method	0.333333
exist and be	hdfstore	0.014925
guaranteed return of an indexer even	index get indexer for	0.250000
apply mapper function to its categories	categorical map mapper	0.166667
the series extract groups from the first match	core str extract arr	0.066667
data	io table validate data columns	0.500000
expected exception and	exception	0.090909
the underlying	indexes multi index	0.013158
dataframe the keys will be the axis	core data frame	0.005917
or object coercible to	other join overwrite filter_func	0.076923
index and its underlying data	indexes range index	0.021277
the plot attribute for	group by plot	0.062500
of take	take	0.060606
each string matches a regular expression	case flags	0.166667
apply we are stripping	by mixin apply func name	0.050000
of unique elements of arr1	equal contents arr1	0.066667
the binary feather-format for	to feather fname	0.083333
corresponding to designated axis labels	reshape make axis dummies frame axis transform	0.166667
to parse	convert data	0.200000
in the series extract groups from the first	core str extract arr	0.066667
returns numpy array of python datetime date objects	indexes datetime index	0.007634
ndarray only use this if	indexes index set value	0.023810
bytes see :class	io msgpack packb	0.025641
of the month and day_of_month	semi month begin	0.166667
convert to our native types format	block to native types slicer na_rep quoting	0.250000
dataframe apply for sparsedataframe	sparse data frame apply func	0.166667
alter default behavior on how float is	formats set eng float format accuracy use_eng_prefix	0.333333
of series concat	dtypes get series	0.250000
convert back to bool/int	downcast to	1.000000
indexer input	indexer	0.009174
datetimeindex with times to	core indexes datetime	0.011494
that works through views note this is *not*	is other	0.055556
apply	io formats styler apply	0.500000
format my specific	core indexes index format	0.500000
'args'	compat numpy validate groupby func name	1.000000
and if so prints a	warn if	0.333333
it if we opened it	io to hdf path_or_buf key	0.166667
block from the result	block	0.008197
called upon unpickling rather than the default which	core indexes new datetime index cls d	0.111111
if we do need a multi reindex this	core series needs reindex multi axes method level	0.333333
array and	array to	0.333333
apply the function to my values return	apply func	0.027027
string	core string	0.333333
do a list	list src_list dest_list	1.000000
a particular panel invoked by unicode df in	panel unicode	0.166667
bytes in	indexes range index nbytes	0.052632
called via the 'numpy' library the third	numpy validate take with	0.055556
return	indexes datetime index	0.007634
if you	core indexes index set value	0.023810
convert an object to an expression	core computation convert expression expr	1.000000
a hack to accelerate unioning a collection	union many others	0.040000
operations to convert timedelta-like to	core indexes td index cmp opname	0.055556
tree-like object that can be used	io html frame	0.012987
provide concatenation of	concat datetime to_concat axis typs	0.142857
sql query into	sql query sql con index_col coerce_float	0.333333
intersect	intersect	1.000000
value from 1-dimensional ndarray only use	categorical index get value	0.100000
read csv file (discouraged please use :func pandas	from csv cls	0.066667
return the op string for this	core computation bin op generate	0.066667
to datetime	to datetime	0.250000
d	d	1.000000
new sparsearray from	core sparse sparse data	0.076923
background in a range according	formats styler background	0.125000
alert a user	io python parser alert	0.200000
the actual ne	computation condition bin op	0.333333
checks that path's extension against the	extension cls	0.125000
ixs	ixs	1.000000
in the series extract groups from the first	str extract frame arr	0.047619
is a string cast it to timedelta according	indexes timedelta index maybe cast slice bound	1.000000
make a copy	index copy	0.166667
number and its label	label	0.028571
a list-like indexer	convert list indexer keyarr kind	0.066667
boolean list indicated if we have mixed	index have mixed	0.166667
call encode before writing to file	stata writer write to_write	0.083333
interpolate values	interpolate method axis	0.166667
gets called after	index array wrap	0.066667
the top-level nodes (that are not themselves	io hdfstore groups	0.333333
on 3 columns of	columns values	0.037037
string in the series/index ends with passed pattern	core str endswith arr pat	0.333333
thrown by an error is encountered in pd	parser error	0.055556
my plane axes indexes these are already	plane axes index axis	1.000000
create a spreadsheet-style pivot table as a dataframe	reshape pivot table data values	0.166667
called after a	series array wrap result	0.100000
frequency timedelta index with day as	core indexes timedelta	0.083333
split	split	0.500000
only use this	index	0.002004
positional	core ndframe indexer has valid positional	0.250000
converter	converter	1.000000
that can safely be cast	name val min_val	0.083333
to call encode before writing	stata writer write to_write	0.083333
that can be used to	html frame	0.014706
specialized intersection for datetimeindex objects may be much	intersection other	0.076923
slice	slice slicer	0.087719
a string-like	convert string array data encoding	0.038462
that is datetimelike (e	core indexes maybe to datetimelike data	0.142857
series extract groups from the first match	core str extract frame arr	0.047619
make sure an expression	computation check expression expr	0.200000
from 1-dimensional ndarray only use this if	core indexes index	0.007042
since we are a series we by definition	core series group by selection name	1.000000
result as series or by a series of	groupby by axis level	0.045455
each	apply	0.026316
that the left and right sparsedataframe are equal	assert sp frame equal left right check_dtype exact_indices	0.333333
we want to set the _typ here	core series set axis axis labels fastpath	0.200000
evaluate the block return result block	block eval func other raise_on_error try_cast	0.333333
belongs to a leap	is leap	0.125000
an series refer to numpy ndarray repeat	core series repeat repeats	0.333333
we opened it	io to hdf path_or_buf key	0.166667
codes by the indexer fill with	nd indexer	0.015152
to connect	connect	0.071429
interchange axes and swap values axes appropriately	ndframe swapaxes axis1 axis2 copy	1.000000
return if we are datetime arraylike / datetimeindex	core dtypes is datetime arraylike arr	1.000000
specialized intersection for	intersection other	0.076923
provides a resample	period index resampler	0.062500
return a fixed frequency datetime	range start end periods freq	0.333333
best locator based	plotting pandas auto date locator get locator	0.062500
of value from 1-dimensional ndarray only use this	indexes datetime index get value series	0.071429
groupby	reshape groupby	1.000000
for this columns	index col	0.066667
the series extract groups from the first match	extract	0.030303
only operations to the cls evaluate	only operations cls	0.333333
string representing a frequency guess generated by infer_freq	core indexes datetime index ops mixin inferred freq	0.250000
of values values	values method	0.500000
union of two index objects and	indexes range index union other	0.083333
prevents setting additional attributes	core no new attributes mixin freeze	1.000000
an intervalindex from a list/array of tuples parameters	indexes interval index from tuples	1.000000
return a tuple of the shape	shape	0.047619
float values converted into	io formats float array formatter get result as	0.055556
return the op string for this	op generate	0.066667
set the view limits	plotting milli second locator autoscale	0.333333
node	io hdfstore append	0.016667
never a	core categorical block is	0.100000
datetime index with business day as	indexes	0.004651
prior to a ufunc	core series array prepare result context	0.333333
myself as an object block	datetime tzblock to object block mgr	1.000000
codes by the indexer fill	nd indexer allow_fill	0.050000
wrap comparison operations to convert timedelta-like	core indexes td	0.055556
a manager and a axes dict	core ndframe init mgr mgr axes	0.333333
take a string-like	string array data encoding	0.038462
string in the series/index by indicated	core str repeat arr	0.045455
get lines 0) there are headers	io python parser get index name	0.166667
a scipy sparse coo_matrix to a sparseseries	core sparse coo to sparse series a	0.166667
or sparsearray	sparse	0.026316
in file node must already exist	io	0.003012
read csv	core series from csv cls path sep	0.066667
and right data	right	0.045455
value to	io formats float array formatter value	0.250000
datetimeindex from	core indexes datetime index	0.007634
found	mixin isin	0.166667
elements of v should be inserted in a	indexes frozen ndarray searchsorted v	0.033333
decorator to take optional positional and	util optional args decorator	0.083333
return my values	core	0.001326
gets called prior to a	series array prepare	0.111111
data & release the	data col take data	0.111111
feather-format for dataframes	frame to feather	0.333333
representing the totally ordered cartesian product	labels shape sort xnull	0.066667
convert to our native types format	core datetime block to native types	0.250000
alter default behavior on how float is formatted	formats set eng float format accuracy use_eng_prefix	0.333333
into a list of lists	frame parser	0.012500
my values return a block if we are	core block	0.010870
indexable columns with an arbitrary number	io legacy table read where columns	0.111111
in file node must already exist and be	append	0.012987
index with custombusinessday as the	core indexes cdate range start	0.083333
latex representation for a particular	repr latex	0.333333
a panel-like dataframe parameters	time panels names	0.076923
to write this as a frame table	table write obj	0.333333
possible	possible	1.000000
a simple cross-tabulation of	index	0.002004
tree-like object that	frame parser build	0.014706
file node must already	hdfstore append key value format	0.016667
file node must	value	0.005155
function is called via the 'numpy' library the	validate take with	0.055556
convert to our native types format slicing	float block to native types slicer na_rep	0.250000
date belongs to a leap year	period index is leap year	0.142857
datetimelike properties of the series values	timedelta properties	0.052632
given delimiter string starting at	rsplit	0.031250
ndarray raises on scalar	ndarray cls	0.500000
dtype types to stata types returns the byte	dtype to stata type dtype column	1.000000
given dimensions levels names etc' nentries - number	nentries nlevels prefix names	0.100000
want to set	set	0.012195
type (if copy=true return a new copy)	core block astype dtype	1.000000
take which	take	0.030303
state	state	1.000000
we create the grouper on instantiation	group by assure grouper	0.250000
fully reindex-output	data frame group by reindex output result	0.045455
raise keyerror is maps[0]	compat chain map	0.032258
a	core indexes	0.014286
file	file	0.833333
return value at the given quantile a	core series quantile	0.083333
creates a new sparsearray from the input	sparse sparse data frame sanitize column key	0.333333
add in categorical	categorical index add	1.000000
given	core indexes get	0.125000
sets the view limits to	date locator autoscale	0.055556
underlying	core indexes range	0.062500
result block	block	0.016393
string in the series extract groups	core str extract frame	0.047619
try to read from a	read obj	0.058824
csv file (discouraged please use :func pandas read_csv	frame from csv cls	0.066667
a ndarray like into	io json parser	0.142857
'numpy' library	argmin with	0.200000
necessary for	sparse sparse array	0.043478
casting	numeric index assert safe casting	0.125000
return an	get	0.007143
for datetimelike properties of the series values	properties	0.046512
determine if each string matches a	str match	0.166667
via the 'numpy' library the third	numpy validate take with convert convert args	0.055556
for this indexable with the key/value	io index col update	0.125000
might need to coerce a code to a	coerce freq code	0.076923
is index for series columns for dataframe and	ndframe	0.005025
a json string	json path_or_buf orient date_format double_precision	0.500000
type window_type and size window	window arg window win_type min_periods	0.100000
rewrite	computation rewrite	0.125000
full scope for use	core computation scope full scope	0.055556
get integer location for requested label	indexes datetime index get loc key method tolerance	1.000000
ndarray only	core indexes index set	0.023810
the objects stored in the hdfstore	io hdfstore	0.014493
try to operate	selection mixin try	0.250000
of temporary variables in this	ntemps	0.111111
select values between particular times of	between	0.086957
determines if two index objects contain	indexes datetime index ops mixin equals other	0.200000
supported for panel objects and	core panel to sparse	0.037037
to call encode before writing to	stata writer write to_write	0.083333
a data	table validate data	0.500000
already exist	io hdfstore	0.014493
1d array return an array of deterministic integers	util hash array vals encoding hash_key categorize	0.250000
ndarray or list of	data index columns dtype	0.125000
add in the datetimelike methods (as we may	ops mixin add datetimelike methods cls	0.333333
subject string in the series extract groups	extract frame arr	0.047619
background in a range	formats styler background	0.125000
need to coerce a code to	tseries maybe coerce freq code	0.076923
complib	complib	1.000000
an indexer	indexer cls name indexer	0.083333
on saturday or sunday use previous friday instead	tseries previous friday dt	0.250000
used to iterate over	parser	0.008000
containing only true/non-nan	remove na	1.000000
exist and be	io hdfstore append key value format	0.016667
for :meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace limit downcast	0.333333
iterate over	io	0.003012
the internal dtype s bears the risk	subarr	0.050000
the exception raised	util assert raises	0.200000
data to an	data	0.009709
over the dom	frame parser build doc	0.125000
whether each index value is found	index ops mixin isin values	0.083333
form the intersection of two index objects sortedness	range index intersection other	0.083333
checks that path's extension against the	io excel writer check extension cls	0.125000
table in file node must already	hdfstore append key value format	0.016667
setup our binners	set binner	0.333333
to a dataframe	core sparse sparse data frame	0.058824
apply the given	holiday apply	0.333333
index with day calendar as the	core indexes period	0.032258
the underlying	core indexes multi index	0.013158
nat which has the same length as the	ops mixin nat new box	0.050000
to add default implementation of ops	computation add ops op_classes	0.333333
for last non-na/null value	data frame last valid	0.250000
provide concatenation	core dtypes concat	0.100000
wrap comparison operations to convert timedelta-like to timedelta64	td index cmp opname	0.055556
iterate over the dom	io html frame parser build doc	0.125000
convert argument to timedelta	core tools to timedelta arg unit	0.500000
read csv	csv cls path	0.066667
compat	sort levels monotonic	0.333333
and return a basegrouper which is	core get	0.038462
the series/index by indicated	core str	0.011364
compat with blockmanager	single block manager blknos	1.000000
must already exist and be	key value	0.011628
perform merge with optional filling/interpolation designed for ordered	core reshape merge ordered left right on left_on	1.000000
concatenation of	dtypes concat datetime	0.125000
of bytes in the underlying	indexes range index nbytes	0.052632
fixed frequency datetime	bdate range start end	0.111111
a ndarray of	index	0.002004
convert to our native types format slicing if	core categorical block to native types slicer	0.250000
make a new datetimeindex	core indexes datetime index	0.007634
deprecated use categorical instead	categorical from array cls data	1.000000
_convert_string_array	io unconvert string array data nan_rep	1.000000
stringified and numeric for these values	values na_values	0.333333
of columns	columns	0.035714
already exist and be	hdfstore append key	0.016667
going to write this as a frame table	series table write obj	0.333333
to capture stderr in	capture stderr	0.055556
be used to iterate over the	html frame parser build	0.014706
array of whether each index value	core indexes datetime index ops	0.034483
you	core indexes index set value arr key	0.023810
get	computation get	0.333333
platform	platform	1.000000
select values between	indexer between	0.125000
that create a table reflecting the structure of	sqlite table create table setup	0.066667
a string representation for a particular	extension dtype repr	0.142857
panel objects and will raise an error	core panel	0.019231
to the underlying array which by-definition can	index ops mixin	0.019231
convert string-like and string-like array to convert object	convert string to object	0.142857
each index value is found in	index ops mixin isin	0.083333
convert timedelta-like	td index cmp opname	0.055556
perform generic binary operation with	core series binop other func level	0.333333
of value from 1-dimensional	core indexes index set value arr key value	0.038462
see if we can set a locale	can set locale	0.333333
an intervalindex from a 1d array	from intervals cls data	0.125000
values for	index get level values	0.500000
called after a	indexes	0.009302
add	index ops mixin add	0.333333
returns a curve with holidays between start_date	calendar holidays start end return_name	0.066667
return my self as a	sparse series as	0.125000
given a tuple of slices/lists/labels/boolean	core indexes multi index get	0.100000
index's frequency	ndframe tshift periods freq	0.333333
return the slice dictionary for these axes	for slice axes	0.333333
if the set of unique elements of arr1	contents arr1	0.066667
object is a sequence of objects	dtypes is sequence	0.333333
necessary for making this object picklable	core indexes timedelta index setstate state	0.333333
be	html frame parser build	0.014706
a multirow e	multirow	0.111111
of	core indexes range index	0.021277
from 1-dimensional ndarray only use this	core indexes index set	0.023810
intervalindex from a 1d array of interval	interval index from intervals cls data name	0.333333
deprecated option and if so prints a	warn if deprecated	0.166667
return the td elements from	frame parser parse td obj	0.083333
occupying requested label default to specified missing value	label default	0.083333
list-like indexer return the	convert list indexer keyarr kind	0.066667
thereafter monday instead	to monday dt	1.000000
if you	core indexes index set	0.023810
date formats to	io convert datetime to	0.166667
from 1-dimensional ndarray only use this if	arr key	0.023810
for :meth dataframe fillna(method='ffill') <dataframe fillna>	core ndframe ffill axis inplace limit downcast	0.333333
return the correct class for resampling with	get resampler for grouping	1.000000
return appropriate class of series	dtypes get series result type result	0.250000
boolean :class ~pandas series showing whether each element	core series isin values	1.000000
overrides ndarray argsort argsorts	core series argsort	0.083333
index with day	indexes	0.009302
we might need to coerce a	tseries maybe coerce freq	0.125000
a function to be applied on each value	formats float array formatter value formatter float_format threshold	0.100000
that we have	is	0.005291
transform long stacked format dataframe	data frame	0.005714
shape of the values to be at	core block shape values ndim shape	0.083333
the node in	io	0.003012
array of python datetime date	datetime	0.006711
new unit if needed otherwise return	dtypes datetime tzdtype new cls unit	0.055556
fixed frequency datetime index with business day as	core indexes bdate range start end periods	0.083333
return the block manager from a dataframe of	core sparse to manager sdf columns	0.052632
in i	index days i	1.000000
coerce a string or np dtype to a	core dtypes coerce to dtype dtype	0.500000
'series argmin' is called via the	skipna skipna args	0.100000
never a	block is	0.045455
the kinds allowable columns for	io table queryables	0.055556
key and are not a floating index	indexes index maybe cast indexer key	0.500000
labels in requested axis removed	core ndframe drop labels axis level	0.250000
to table in file node must already	append key value format	0.016667
ndarray only use	index	0.006012
produce 'pivot' table based on 3	reshape slow pivot	0.333333
a curve with	start end return_name	0.333333
method to handle na filling of take	take fillable values indices allow_fill fill_value	0.250000
return a subset of a dataframe	core data frame	0.005917
workday	workday	1.000000
wrap index _get_unique_index	indexes period index get unique index dropna	0.250000
a tree-like object that	io html	0.012987
repr function return fillvalue for a recursive	recursive repr fillvalue	0.333333
the binary feather-format for dataframes	core data frame to feather fname	0.083333
_constructor_sliced-like objects to	panel homogenize dict frames intersect dtype	0.142857
a	block	0.008197
reindex	core ndframe reindex	0.125000
data types and ranges supported by stata	stata types data	0.333333
a new unit if	tzdtype new cls unit	0.055556
return the join indexers	core reshape merge operation get join indexers	1.000000
for table outplot	util table plotter conv data	0.142857
make a copy of this object names dtype	core indexes multi index copy names dtype	0.333333
best locator based on a	locator get locator	0.062500
info for this indexable with the	io index col update info info	0.090909
to	name	0.125000
string in the series extract groups	str extract frame	0.047619
list indicated if we have mixed	core indexes multi index have mixed	0.166667
and return the block manager from	manager sdf	0.052632
we take a string-like that is	convert string array data	0.038462
range	range	0.238095
counts of the function	counts f	0.041667
block manager from a dataframe of series	manager sdf columns index	0.052632
wrap	sparse wrap	0.500000
frame should be truncated if so slices	data frame formatter chk truncate	0.500000
have	ordered	0.017857
setup my atom from the	io data col set atom	0.333333
a tabular environment table	latex buf columns col_space header	0.100000
max_len	max_len	1.000000
'series argmin'	skipna skipna	0.100000
round the fractional part of the	reshape round frac x precision	0.200000
background	io formats styler background	0.125000
index objects contain the	core indexes datetime index ops	0.034483
view limits to the nearest multiples of base	date locator autoscale	0.055556
create a	io table create	0.142857
object that can be used to iterate	io html frame parser	0.012195
update index attributes e g freq	indexes datetime index maybe update attributes	0.200000
type promotion and	core dtypes maybe upcast values fill_value dtype copy	0.166667
nanoseconds (>= 0 and less than 1 microsecond)	timedelta index nanoseconds	0.066667
the number of bytes in	range index nbytes	0.052632
our native types format slicing if	native types slicer na_rep float_format	0.200000
called after	core series	0.008000
of seconds (>= 0 and less than 1	core indexes timedelta index seconds	0.066667
return the len	categorical size	0.111111
from maps[0] raise	map	0.029412
only use this if	core indexes index set value arr	0.023810
the reduction type operation	core categorical reduce op name axis	0.500000
full scope for use with	scope full scope	0.055556
call	call	0.428571
levels attribute is 1 or a list in	is multi index	0.142857
has one	core series	0.008000
with optional filling/interpolation designed for	left right on left_on	0.058824
valid ordered parameter if	ordered	0.017857
called upon unpickling rather than	datetime index cls d	0.111111
an xarray object from the pandas object	core ndframe to xarray	0.125000
return a fixed frequency datetime index with	indexes bdate range start end periods	0.083333
from passed panel or object coercible	join overwrite filter_func	0.076923
return index or ndarray filled with	core indexes datetime index	0.007634
construct an intervalindex from a	core indexes interval index from arrays cls	0.166667
needs additional handling as	period index array	0.050000
'info axis' see indexing for more this	ndframe keys	0.083333
disable	sub disabled	1.000000
the float values converted into strings using	formats float	0.055556
of the timedeltas	indexes timedelta index	0.250000
1-dimensional ndarray only	value	0.005155
by a series of columns	core ndframe groupby by	1.000000
swap level i with	core indexes multi index swaplevel i	0.333333
underlying	range index	0.021739
curve with holidays between start_date and	holidays start end return_name	0.066667
that time and panels are conformable	ensure like indices time panels	0.250000
abstract	abstract	0.666667
particular dataframe invoked by unicode df in	data frame unicode	0.166667
try_num_bool	try_num_bool	1.000000
try to preserve dtype if possible	core putmask smart v m n	0.055556
provide	typs	0.166667
stata	io stata elapsed date	1.000000
1-dimensional ndarray only	index	0.002004
ensure that if we don't have an index	ensure valid index	1.000000
fixed version	fixed	0.055556
that can be used to iterate over the	build	0.013514
x	x	0.347826
styles to	io formats	0.027778
pick the best locator	locator	0.047619
dataframe the levels	data values	0.062500
that do not satisfy the boolean criterion specified	filter	0.117647
a set of sparseseries (with	core sparse	0.041667
object in order to correctly handle	core resampler convert obj obj	0.166667
number of seconds (>= 0 and	core indexes timedelta index seconds	0.066667
value occupying requested label default to specified	sparse series get label default	0.083333
the values to be at least 1	values	0.008547
of python datetime date	core indexes datetime index	0.007634
node with	hdfstore get node	0.166667
from 1-dimensional ndarray only	index set value arr	0.023810
lookup of value from 1-dimensional ndarray	core indexes period index get value	0.071429
return packed bytes see :class packer	io	0.003012
for each element in the	core map indices py arr	0.090909
already	io hdfstore append key value	0.016667
generic we want to set the _typ here	core series set axis axis labels fastpath	0.200000
must already exist	io hdfstore	0.014493
recursive	compat recursive	0.166667
delegatedclass of a series that is datetimelike (e	indexes maybe to datetimelike data copy	0.142857
matches the	matches	0.125000
whether the 'name'	io validate	0.031250
columns using input	copy inplace	0.055556
that do not	util valid	0.125000
union of two	core indexes multi index union other	0.066667
be unordered	as unordered	0.500000
float	float array formatter get result as	0.055556
self as a	series as	0.125000
get	get ax	1.000000
names to	set default names	0.083333
the cached item item represents a label	item cache item	0.125000
returns value occupying requested label default	series get label default	0.083333
from the table this is generally only useful	column key column	0.142857
values need to	array	0.013889
by shading the	io	0.003012
dataframe apply	data frame apply func	0.166667
this column return	col	0.037037
return an object with matching indices to myself	core ndframe reindex like other method copy limit	0.111111
scalar to a	scalar to	0.100000
indices that would sort the index	core indexes range index argsort	0.166667
the array interface return my	index array dtype	0.125000
__getitem__ method to work as desired	core indexes index getitem key	0.166667
types format slicing if	types	0.103448
additional handling	wrap	0.019231
using input function or	axis copy inplace	0.055556
sanitize input data to an ndarray	sanitize array data	0.250000
to specified type parameters	cast_type column	0.500000
if we define an builtin function for	grouper is builtin func	0.333333
returns the float values	io formats float array formatter get result	0.055556
a new unit	tzdtype new cls unit	0.055556
the 'numpy' library the third	take with convert convert	0.055556
the union of two multiindex	indexes multi index union other	0.066667
values as an enumerated type or categorical	core factorize values sort order na_sentinel	0.111111
a new	putmask	0.055556
get	categorical index get	0.500000
after a	core series array wrap	0.100000
returned from apply if as_index=true	by index with as	0.200000
of this frame	data frame	0.005714
to be applied on each	formatter float_format threshold	0.200000
a valid column name for generation (e g	core computation bin op	0.055556
the string	string	0.018868
passed a list-like indexer return the	indexes interval index convert list indexer keyarr kind	0.066667
list of tuples of the (attr formatted_value)	format attrs	0.142857
stderr in a buffer so that it can	stderr f	0.125000
interval in	interval	0.029412
only use this if you	value	0.005155
provide	to_concat axis typs	1.000000
:meth dataframe fillna(method='bfill') <dataframe fillna>	ndframe bfill axis inplace limit downcast	0.333333
pivot	core reshape pivot index	0.333333
with multi-level index return new dataframe with labeling	data frame	0.005714
type is an actual dtype that we	core dtypes interval dtype is dtype cls dtype	0.142857
accelerate unioning a collection	core indexes datetime index union many others	0.040000
for header	header	0.066667
add the operations to the cls evaluate the	core panel add aggregate operations cls	0.500000
the values to be at least	block shape values	0.050000
1d	1d	1.000000
to convert timedelta-like to timedelta64	td index	0.055556
get integer	core indexes timedelta index get	0.500000
subclass of styler with a custom template and	formats styler from custom template	0.142857
exist	key value format	0.016667
total duration of each element expressed in seconds	index total seconds	1.000000
options grouped	pp options	0.083333
of sparse/dense and dtype) in	ndframe	0.005025
ftypes (indication of sparse/dense	ftypes	0.043478
the view limits to the	series date locator autoscale	0.055556
gets	series array wrap result	0.100000
for iterables you should probably use pprint_thing()	io formats pprint dict seq _nest_lvl max_seq_items	0.333333
of that group - 1	core group by cumcount ascending	0.166667
a string cast it	index maybe cast	0.111111
the parser based on the	io parser	0.250000
called via the 'numpy' library the third	with convert convert args	0.055556
additional	period index	0.024390
fixed frequency	range start	0.133333
in file node must already exist	append key value format	0.016667
times to midnight length	index	0.002004
major_axis	core	0.001326
the float	formats float array formatter get	0.055556
draw histogram of the	hist frame	0.200000
for the values	values	0.008547
a registered	registered	0.142857
numeric	dtypes is numeric v	0.333333
a new manager with the	manager	0.058824
dtype and coerce to a fixed size	data encoding itemsize	0.142857
returns the float values converted into strings	io formats float	0.055556
an ndarray of the flattened values of the	ravel order	0.037037
string in the series/index by indicated number of	core str repeat	0.045455
mask of index to	index	0.002004
font_dict	font_dict	1.000000
to coerce a scalar to a compat for	index coerce scalar to	0.071429
create and setup	set	0.012195
overlap add	items overlap	0.062500
construct this type from a string raise	interval dtype construct from string cls string	0.166667
dispatch to apply we are stripping all of	mixin apply func	0.050000
this if you	index set	0.022727
ndarray only use	indexes index set value arr key	0.023810
union of two multiindex objects sorting if	index union other	0.037037
evaluate a python expression	computation eval expr	0.083333
to see if a url has	is url url	0.047619
get lines 0) there are headers	io python parser get	0.166667
are passed a list-like indexer	index convert list indexer keyarr kind	0.066667
value from 1-dimensional ndarray only	indexes datetime index get value series	0.071429
block i	create for block cls i	0.333333
a fixed	bdate range start	0.111111
from maps[0]	chain	0.031250
shift without copying data the shifted	slice shift periods	0.083333
the quantiles of	core block quantile qs interpolation axis mgr	0.250000
that we have a	core categorical validate ordered cls	0.055556
integer location for requested label	loc key method tolerance	0.500000
must already exist and be	hdfstore append key	0.016667
moving window of type window_type on	core window apply window mean how	0.166667
a deprecated option and if so prints a	warn if deprecated	0.166667
view	is view	0.100000
the series extract groups from the	str extract	0.035714
seconds (>= 0 and less than	indexes timedelta index seconds	0.066667
replace extra whitespace inside of a string with	io remove whitespace s regex	0.200000
and create the manager	to mgr data index columns	1.000000
html tables into a list of dataframe objects	html io match flavor header	0.166667
i am never a	block is	0.045455
of pattern or regular expression	flags	0.029412
copy of self coded with categories as	categorical codes for groupby sort	0.071429
sparse/dense and dtype) in this	ndframe	0.005025
manager and a axes dict	ndframe init mgr mgr axes dtype	0.333333
for series	core comp method series	0.333333
to take optional positional and keyword	util optional	0.066667
based indexer for selection by	indexer	0.009174
that we have a fully reindex-output to the	data frame group by reindex output result	0.045455
compatiable fill_value and arr	arr fill_value	0.090909
attributes e g freq depending on op	attributes attrs	0.166667
if we are index sliceable then return my	convert to index sliceable obj	0.083333
index to be returned from apply if as_index=true	with as index	1.000000
create and return a basegrouper which	core get	0.038462
memory_usage	memory_usage	1.000000
the process of casting data from some	numeric index assert safe casting cls data	0.047619
series extract groups from the first match of	extract arr	0.066667
function for creating a subclass of styler with	styler from	0.076923
to a sql database	io sqlite database to sql	1.000000
apply mapper function to an index	core indexes index map mapper	1.000000
construct concatenation	concatenation	0.166667
flavor	flavor	1.000000
a copy of the sparsearray only the actual	copy	0.012821
codes by the indexer fill with	nd indexer allow_fill	0.050000
:mod datetime to the	plotting dt to	0.125000
read sql database table into	io sqldatabase read table table_name index_col coerce_float parse_dates	0.333333
: int slice or sequence	core data frame ixs	0.200000
provide attribute-style access to a nested dict	dict wrapper	1.000000
conserve rangeindex type	indexes range index getitem key	0.166667
node must already exist and be table	append key value	0.016667
fast path	core single block manager fast	0.250000
works through views note this is *not*	is other	0.055556
new manager with	block manager	0.021277
a dataframe the	data values index	0.066667
that we have good categories	cls categories fastpath	0.250000
called	core series	0.008000
table as a dataframe	table data values index columns	0.200000
of the series	core series	0.008000
series/index starts with passed	str startswith arr	1.000000
& release	col take	0.333333
index and plural 'names' parameter for	indexes index validate names name names deep	0.071429
value from 1-dimensional	arr key value	0.038462
if we define an builtin function for this	selection mixin is builtin func arg	0.333333
value	value	0.108247
returns value occupying requested label default to specified	series get label default	0.083333
and	append key value format	0.016667
of the stata date	stata	0.022222
value from 1-dimensional ndarray only use this	core indexes period index get value	0.071429
numexpr engine class	num expr engine	1.000000
gets called	indexes index array wrap	0.100000
as a block	core block	0.010870
the passed type is an actual dtype that	interval dtype is dtype cls dtype	0.142857
do need	ndframe needs	0.500000
general index and	core indexes index	0.007042
dispatch to apply we are stripping all of	core group by mixin apply func name	0.050000
a 1d array	intervals cls data name copy	0.250000
returns a curve with holidays between	holiday calendar holidays start end return_name	0.066667
next	next	1.000000
ndarray only use this	core indexes index set value	0.023810
table in file node must already exist and	io hdfstore	0.014493
add in	core indexes datetime index ops mixin add	0.333333
to coerce a code to	maybe coerce freq code	0.076923
to a list	to	0.012658
after a ufunc needs	index array wrap result context	0.034483
simple cross-tabulation	reshape crosstab index columns values	0.066667
am	core	0.001326
function for creating a subclass of styler with	styler	0.022222
apply a function elementwise	applymap func	0.333333
rewrite the assignment operator for pytables expressions that	computation rewrite	0.125000
add default implementation of ops	core computation add ops op_classes	0.333333
create index with target's values (move/add/delete values as	multi index	0.020000
an object with matching indices to myself	core ndframe reindex like other method copy limit	0.111111
multi-level index return new dataframe	core data frame	0.005917
malformed	malformed msg	0.100000
args	args	0.555556
values	period	0.016667
method to class	method cls name func	0.076923
in file node must already exist	io hdfstore append key value	0.016667
with length less than a given width	width	0.083333
1-dimensional ndarray	value arr	0.023810
value from 1-dimensional ndarray only use this	core indexes categorical index get value	0.100000
type is an actual dtype that	period dtype is dtype cls dtype	0.142857
by definition have	formats datetime64tzformatter format strings	0.166667
determine if each	match	0.090909
determine if each string matches a	match arr	0.166667
clipboard	clipboard	1.000000
return a dict of	get	0.007143
calcurate appropriate figure size based on left	util table plotter get cells left	0.500000
take	categorical take nd	0.200000
left and right	cls left right	0.333333
sparsedataframe	sparse sparse	0.034483
holding passed axis constant parameters	axis how inplace	0.500000
a url has a	url url	0.045455
an openpyxl style object	style cls	0.250000
called after a ufunc	array wrap result context	0.088235
at particular time of day e g 9	ndframe at time time asof	0.066667
return index or ndarray filled with	datetime index ops	0.034483
repeat elements	repeat repeats	0.142857
specialized intersection for	indexes datetime index intersection	0.142857
trims	trim	0.166667
return boolean if values in the	core index ops mixin is	0.100000
ndarray filled with nat which has	nat new	0.050000
return an iterator over the boxed values	indexes datetime index iter	0.250000
parameter	categorical validate	0.055556
generic we want to set the	core series set	0.076923
to apply we are stripping all of	mixin apply func	0.050000
object	object	0.857143
compute	crosstab index	0.066667
create a new unit	new cls unit	0.055556
the intersection of two index objects sortedness	index intersection other	0.052632
exponential weighted moving variance	ewm var bias	1.000000
to cast the array/value to a	maybe cast to	0.250000
that can be coerced to periods	index simple new cls	0.090909
python expression	computation eval expr	0.083333
reset	reset	0.800000
each interval in the index	core indexes interval index	0.062500
return the unicode normal form for	core string methods normalize form	0.066667
timedelta index with day as the default	core indexes timedelta	0.083333
returns the float values	io formats float array formatter get	0.055556
nan fill_value) to a common sparseindex corresponding	homogenize series_dict	0.047619
particular axis parameters	axis	0.022727
best locator based on	locator get locator	0.062500
the cached item item represents	core ndframe iget item cache item	0.090909
of sql statement that create a table reflecting	sqlite table create table setup	0.066667
arr1 and arr2 are	util equal contents arr1 arr2	0.066667
this	core indexes index set	0.023810
series that is datetimelike	datetimelike data	0.111111
swap levels i and j in a	data frame swaplevel i j	0.333333
table in file node	hdfstore append key value format	0.016667
block manager from a dataframe of series	manager sdf columns	0.052632
create index with target's values (move/add/delete values	core indexes multi index	0.013158
a new unit if needed otherwise return from	dtypes datetime tzdtype new cls unit	0.055556
additional	core indexes period index array	0.050000
exist and be	format	0.012346
indicies	core panel extract axes data	0.142857
nanoseconds (>= 0 and less than	core indexes timedelta index nanoseconds	0.066667
the put method to its values attribute	put	0.043478
of the stata	stata	0.022222
byte of the given ordinal	column	0.066667
iterables you should probably use pprint_thing()	io formats pprint seq seq _nest_lvl max_seq_items	0.333333
check that left and right index are equal	assert almost equal left right check_exact check_dtype	0.333333
check the key	key	0.005051
called after	core	0.003979
at particular time of day	ndframe at time time asof	0.066667
block	block getitem block	0.250000
datetime index with custombusinessday as	core indexes cdate range start end	0.083333
from a 1d array of interval objects parameters	indexes interval index from intervals cls	0.333333
read csv	series from csv	0.066667
table in file	append key value	0.016667
common sparseindex corresponding to the locations where they	homogenize series_dict	0.047619
an	index to	0.333333
np	np	1.000000
get integer location	indexes multi index get loc	1.000000
groupby objects	group by	0.016129
return boolean series equivalent to left <=	left	0.018519
can perform	indexes index	0.007353
series columns for	ndframe	0.005025
hard to parse	parse	0.034483
fixed frequency datetime index with business day as	core indexes bdate range start	0.083333
multiple times in parallel	test parallel	0.142857
an intervalindex from a	core indexes interval index from arrays cls	0.166667
file node must already exist and be table	key	0.005051
on is monotonic	monotonic	0.111111
array of whether each index value is found	core indexes datetime index ops mixin isin values	0.083333
sparse-compatible version of ndarray take	sparse sparse series take indices axis	1.000000
concatenate to_concat which has the same class	indexes index append same dtype to_concat	1.000000
type t or tuple	type t	0.083333
read csv file	core data frame from csv cls path	0.066667
if we are a categorical	safe for reshape	0.200000
a new unit if needed	dtypes datetime tzdtype new cls unit	0.055556
the block manager from a dataframe of	to manager sdf columns index	0.052632
apply we are stripping all	core group by mixin apply func name	0.050000
in file node must already	io hdfstore append key	0.016667
of value from 1-dimensional	set value arr key value	0.038462
memory usage of	indexes range index memory usage deep	0.200000
to construct this type from	categorical dtype construct from string	0.166667
the sparseseries	core sparse sparse series	0.125000
value from 1-dimensional ndarray only use this if	core indexes categorical index get value series	0.100000
of casting data from some accepted dtype	numeric index assert safe casting cls data	0.047619
as series or by a series of	groupby by axis	0.045455
almost	almost	0.833333
the key or none if	key	0.005051
belongs to a leap year	index is leap year	0.142857
is index for series columns for	ndframe	0.005025
get	core computation get	0.333333
given a tuple of slices/lists/labels/boolean indexer to	core indexes multi index get	0.100000
the best locator based on	get locator	0.062500
value the we use to construct	value	0.005155
the block manager from a dataframe of	sparse to manager sdf	0.052632
index has not been lexsorted	unsorted index	0.250000
of value from 1-dimensional ndarray only use	categorical index get value series key	0.100000
list of the index values	core indexes index tolist	0.333333
a masked rec array and	masked rec array to	0.090909
defined	core indexes multi index view cls	0.047619
and be	append key	0.016667
with the replacement attributes	core selection mixin shallow copy obj obj_type	0.166667
as a dataframe the levels in the	data	0.009709
the block	for block	0.333333
must already exist and	hdfstore append	0.016667
function for series arithmetic operations to	method op name	0.333333
dispatch to apply we are stripping all	by mixin apply func	0.050000
arr1 and arr2	arr1 arr2	0.066667
raise keyerror is	chain map	0.034483
an intervalindex	core indexes interval index	0.062500
select values at particular time of	at time time	0.066667
dict of the kinds allowable columns	io table queryables	0.055556
if	value arr key	0.023810
record the	io data col set	1.000000
true if categoricals are the same dtype	dtype equal other	0.250000
description	description complib	0.500000
render a	buf columns col_space header	0.250000
string in the	core	0.006631
the length of that group	group by	0.016129
localize tz-naive	localize	0.200000
casting data from some accepted dtype to the	assert safe casting cls data	0.047619
5 the starargs attribute was changed to be	base expr visitor visit call 35 node side	0.066667
return_indexers	return_indexers	1.000000
lines 0) there are headers on row 0	io python parser	0.250000
a block of same	block same	0.333333
of all the	all	0.043478
convert to our native types format slicing if	block to native types slicer na_rep date_format quoting	0.250000
convert timedelta-like	td index cmp	0.055556
number of bytes in the underlying data	indexes range index nbytes	0.052632
fast	value arr	0.023810
read csv file (discouraged please	csv cls	0.066667
statistical measure using supplied function	func name window center	0.058824
evaluate the where condition cond on	core computation where cond	0.111111
a simple cross-tabulation	index	0.002004
convert timedelta-like	indexes td index cmp opname nat_result	0.055556
never a view	core categorical block is view	0.200000
of pattern or regular expression in	arr pat flags	0.062500
intersection of two	intersection other	0.153846
functions	ndframe rename axis mapper axis	0.333333
if the object is a named tuple	core dtypes is named tuple	0.500000
of type window_type and size window	arg window win_type min_periods	0.100000
of the (attr formatted_value)	core indexes multi index format attrs	0.142857
the html representation with	io	0.003012
downsample the cython defined function	core period index resampler downsample	0.200000
extension against	extension cls	0.125000
read csv file (discouraged please	data frame from csv cls path header sep	0.066667
a float dtype if possible	float	0.024390
the series/index	core str get arr i	0.142857
take which sets nan values in	take nd	0.047619
array interface	sparse sparse series array result	0.250000
apply box func to passed	indexes datetime index ops mixin box	0.500000
decimals	decimals	0.454545
ndarray take	core sparse sparse series take	1.000000
is a sequence of objects	is sequence	0.333333
must already exist	io hdfstore append key value	0.016667
init self	sparse data frame init	0.500000
periodindex to	indexes period	0.034483
type checking function of type t or tuple	core computation is type t	0.083333
of query in a dataframe	data columns index_col coerce_float	0.333333
if	categorical validate ordered	0.055556
a string-like that is	convert string array	0.038462
drop 2d from panel	core panel dropna	0.333333
an intervalindex from a 1d array of	from intervals cls data	0.125000
must already exist	io	0.003012
columns using input function or	axis copy inplace	0.055556
a ufunc needs additional handling as	core indexes period index array wrap result context	0.041667
to deal with nat-like arg is a	arg errors	0.026316
x in y if possible otherwise use python	in x y	0.047619
take values according to indexer and	take nd indexer axis	0.250000
passed type is an actual dtype that	is dtype cls dtype	0.130435
simple cross-tabulation of	columns values	0.037037
groups	groups	1.000000
lookup of value from 1-dimensional ndarray only use	period index get value	0.071429
dataframes in vertical/horizontal layout for explanation	plotter	0.076923
to indexer and return them as a	indexer	0.018349
can be used to iterate	html	0.011765
the put method to its values attribute if	series put	0.055556
deprecated use :meth categorical sort_values that function	core categorical sort inplace ascending na_position	1.000000
of python datetime	core indexes datetime	0.011494
that can safely be cast	val min_val	0.083333
roll provided date forward	tseries date	0.083333
an error is encountered	error	0.028571
attempt to construct this type	dtypes interval dtype construct	0.333333
the hypothetical list representing the totally ordered	xnull	0.083333
data in the form of	data	0.009709
to	openpyxl1writer convert to	1.000000
that we have a valid ordered parameter if	categorical validate ordered cls ordered	0.058824
reduction type operation if we	core index ops mixin reduce op	0.083333
c_idx_names	c_idx_names	1.000000
this is called upon unpickling rather than the	index cls d	0.083333
a series that is datetimelike (e	maybe to datetimelike	0.142857
that we	validate	0.027778
tokenize	tokenize	1.000000
nice str repr	core window unicode	0.071429
console-friendly tabular output	string buf columns col_space header	0.500000
equivalent to shift without copying data	core ndframe slice shift periods axis	0.083333
in each level the function returns lengths of	io formats get level lengths levels sentinel	0.166667
of unique elements in	core index ops mixin nunique dropna	0.083333
a new unit	datetime tzdtype new cls unit tz	0.055556
to iterate	parser	0.008000
a method to class python 2	method cls name func	0.076923
the formatted data	index formatter func	0.333333
shift without copying	shift periods axis	0.333333
return my current col description	io index col col	0.500000
string-like array to convert object dtype	maybe convert string to object	0.142857
interpolate values according	resampler interpolate method axis limit inplace	0.166667
the categorical to be unordered	core categorical as unordered inplace	0.500000
a class for writing stata	core data frame to stata	0.200000
quote the	core computation term value tostring encoding	0.200000
of casting data from some	numeric index assert safe casting cls data	0.047619
quantile	quantile	0.352941
take a string-like	convert string array	0.038462
ndarray only	arr	0.013699
is an actual dtype that	extension dtype is dtype cls dtype	0.111111
reshape data (produce	core data frame	0.005917
global_dict	global_dict	1.000000
compute locations of to_match into values	core match to_match values	0.333333
temporarily setting a	new_locale lc_var	0.125000
of axes / array dimensions	ndframe ndim	0.333333
group series using mapper dict or key function	level as_index	0.111111
number of microseconds (>= 0 and	timedelta index microseconds	0.066667
be used to	parser build	0.014706
the key for valid keys across my	has valid tuple key	0.333333
we have bytes decode them to	computation ensure decoded s	0.166667
membership of x not in y if	computation not in x y	0.066667
this if you	core indexes index set value arr	0.023810
constructs ndframe from group with provided name parameters	group by get group name	1.000000
to table in file node must	hdfstore append key value format	0.016667
provide method name lookup and completion	core pandas object dir	0.166667
containing only true/non-nan	core remove na	1.000000
mask of index to	index b	0.041667
if we if the passed type is an	interval dtype is	0.066667
try to cast the array/value to	dtypes maybe cast to	0.250000
dispatch to apply we are stripping	group by mixin apply	0.050000
dispatch to apply we are	by mixin apply func name	0.050000
fixed frequency datetime index	indexes bdate range start end	0.083333
am never a	categorical block is	0.100000
a dataframe	data columns	0.250000
method to handle na filling of take	indexes multi index assert take fillable values indices	0.250000
axis labels matching criteria parameters	ndframe select crit axis	0.250000
evaluate the block return result block s	core block where other cond align	0.166667
a string-like that is object dtype and coerce	string array data	0.038462
we have bytes decode them to	core computation ensure decoded s	0.166667
a	parser build	0.014706
block manager from a dataframe	core sparse to manager sdf columns index	0.052632
take a string-like that	io convert string array data encoding	0.038462
the full scope for use with passing	core computation scope full scope	0.055556
return_indexer	return_indexer	1.000000
a pandas only dtype	pandas	0.035714
1-dimensional ndarray only use this if you	index	0.002004
don't allow a multi reindex on panel or	panel needs reindex multi axes	0.500000
prior to a	array prepare	0.111111
series dropna if fill_value=nan returns a dense series	core sparse sparse series dropna	1.000000
qcut	qcut	1.000000
to turn values into codes given	get codes for values values	0.250000
to see if a url has a	is url url	0.047619
the view limits to the nearest multiples	time series date locator autoscale	0.055556
only use	core indexes index	0.007042
to table in file node must already	key value	0.011628
midnight length	indexes datetime	0.011494
timeseries	timeseries	0.833333
in the datetimelike methods (as	datetimelike methods	0.066667
this if you	index	0.002004
validates	core categorical validate ordered cls	0.055556
lookup of value from 1-dimensional	value arr key value	0.038462
csv	frame from csv cls path header sep	0.066667
compare 2 col items	io index col eq other	1.000000
return resolution str	resolution get	0.333333
iterate over	frame parser build	0.014706
given	core indexes get interval	0.125000
append rows of other to	append other	0.200000
have a null	null	0.166667
re-evaluate the obj with a groupby aggregation	resampler groupby and aggregate how	1.000000
npy_maxargs 32	core computation result type many	0.142857
the number of bytes in the	nbytes	0.046512
float values converted into strings	io formats float array formatter get result as	0.055556
add in	index add	0.250000
an xarray object from the	core ndframe to xarray	0.125000
whether the installed version of	compat major_ver	0.083333
and 'kwargs' should be empty except for	name args kwargs	0.166667
to operate on an old version?	io fixed validate version where	0.142857
for series	bool method series	0.333333
name for generation (e g an	computation bin op	0.055556
alert a user about a malformed	parser alert malformed	0.500000
an axes dictionary for	core ndframe construct axes dict axes	0.166667
arr dtype then fill	core dtypes maybe fill arr	0.500000
we are grabbing	level global_dict local_dict resolvers	0.333333
general index and	indexes index	0.007353
engineering notation appending	eng formatter	0.125000
be	html	0.011765
if we will be using numexpr	can use numexpr op op_str	0.333333
or functions	ndframe rename	0.333333
indices where elements of v should be	searchsorted v	0.033333
dataframe and major_axis for	core	0.001326
purely integer-location based indexing	i loc indexer	0.142857
this as a frame table	appendable multi series table	0.200000
gets called after a	indexes	0.009302
make new index inserting new item at location	indexes timedelta index insert loc item	1.000000
this object	core ndframe	0.005051
pack	io msgpack packb	0.025641
exist and	io hdfstore append key value	0.016667
xport format	sas parse	0.066667
the block_manager	get block manager	0.166667
on 3 columns of this	columns	0.017857
invalid	invalid	1.000000
obtain an iterator	base iterator	1.000000
find all occurrences	findall arr	0.250000
we take a string-like that is object dtype	string array data	0.038462
determine if each string	str match	0.166667
generate bin edge offsets and bin labels for	generate	0.062500
boolean list indicated if we have mixed	indexes multi index have mixed	0.166667
of v	indexes frozen ndarray searchsorted v	0.033333
maps[0] raise	compat chain map	0.032258
columns	columns values	0.037037
select values at particular time	ndframe at time time asof	0.066667
validate this column return the compared against	io index col validate col	0.200000
from a 1d array	index from intervals cls	0.125000
of value from 1-dimensional ndarray only use this	indexes index set value arr key value	0.038462
aggregate using input function or dict	core panel group by aggregate arg	0.250000
names defaulting	level drop inplace col_level	1.000000
parse a ndarray like into	json parser	0.071429
bytes see :class packer for options	msgpack	0.022222
appropriate class of series concat	series result type result	0.250000
1-dimensional ndarray only use	index set value arr key	0.023810
consolidate	consolidate	1.000000
handles preprocessing for cut where we	core reshape preprocess for cut	0.200000
view limits to	date locator autoscale	0.055556
return my dtype	io dtype	0.333333
of the _apply kwargs and	func name window center	0.058824
a string format	format	0.012346
table	append	0.025974
deprecate a	deprecate	0.090909
the (attr formatted_value)	indexes range index format attrs	0.142857
that is datetimelike	to datetimelike data copy	0.125000
statement that create a table reflecting the structure	sqlite table create table setup	0.066667
setting a timezone	set timezone	0.142857
insert item at	manager insert loc item	0.500000
parse a ndarray like into	io json parser	0.142857
read csv file (discouraged please use :func	data frame from csv	0.066667
whether each index	datetime index	0.007042
the indices that would sort the index	core indexes index argsort	0.166667
parameter if	core categorical validate ordered cls	0.055556
set of _constructor_sliced-like objects	core panel homogenize dict frames intersect dtype	0.066667
manipulation result has one higher dimension as the	ndframe constructor expanddim	0.333333
a particular object invoked by str df	str	0.017544
object	core dtypes	0.129630
unstack a k a pivot series	series unstack	0.333333
float that can safely be cast to	val min_val	0.083333
of the (attr formatted_value)	index ops mixin format attrs	0.142857
be used to iterate	parser build	0.014706
op string for this	op generate	0.066667
argsort	argsort	0.230769
interpolate values according to different methods	resampler interpolate method axis limit inplace	0.166667
given delimiter string starting at the	rsplit arr pat n	0.037037
a tree-like object that	frame parser	0.012500
a new datetimeindex with passed location s deleted	indexes datetime index delete loc	0.333333
convert timedelta-like to	td	0.043478
values to be at	shape values ndim	0.050000
a slice of	core datetime tzblock slice slicer	0.083333
from the first match of regular expression	flags	0.029412
is	index	0.002004
new_arg_name	new_arg_name	1.000000
return dense representation	to dense	0.333333
the number of bytes in the underlying	core indexes multi index nbytes	0.052632
a copy of	multi index copy	0.166667
underlying data	multi	0.018182
arr2 are	arr2	0.090909
checks whether the 'name'	io validate	0.031250
that create a	sqlite table create	0.066667
return an xarray object from the pandas	ndframe to xarray	0.125000
the blocks collect and create a	consolidate transposed	0.062500
a higher	cls value	0.250000
timedelta-like to	core indexes td index cmp	0.055556
this function is called via the 'numpy' library	take with convert	0.055556
get integer location	core indexes timedelta index get loc	1.000000
strings in each element in the series/index	core str get	0.142857
sub-classes to define	core series gotitem key ndim subset	0.333333
after a ufunc	series array wrap result context	0.200000
convert the object to a	core ndframe to	0.040000
freq	freq axis	0.250000
the minimum values along an axis	core indexes datetime index ops mixin argmin axis	0.250000
is called via the 'numpy' library the	numpy validate take with	0.055556
define an builtin function	builtin func	0.200000
a ufunc needs additional handling as	index array wrap result context	0.034483
datetimeindex with times to midnight length is	core indexes	0.004762
closed bounds	closed bounds	0.500000
to coerce a	tseries maybe coerce	0.125000
put method to its values attribute if it	put	0.043478
construct an intervalindex from a	indexes interval index from arrays cls	0.166667
a view	core categorical block is view	0.200000
indices that would sort the index and its	core indexes range index argsort	0.166667
append to table in file node must	value format append	0.125000
don't allow a multi reindex on panel	core panel needs reindex multi axes method level	0.500000
is an	index	0.004008
and create a new block	core block	0.010870
object to	errors	0.111111
this metaclass determines subclass ability	type	0.024390
a date in xport	sas parse	0.066667
in numeric methods to disable other than add/sub	numeric methods disabled cls	1.000000
datetimeindex with times to midnight	core indexes	0.004762
datetime index with business day as the	indexes bdate	0.050000
the values	io index col convert values	0.166667
a table	table	0.032609
to class python 2 and python 3	cls	0.016949
return a tree-like object that can be used	html	0.011765
true if upsampling is possible between source and	tseries is superperiod source	1.000000
retrieve the metadata for this columns	io index col read metadata handler	0.500000
add the series only	ndframe add series only	1.000000
env	env	1.000000
in engineering notation appending a letter	eng formatter call	0.142857
for first non-na/null value	series first valid index	0.250000
long stacked format as dataframe	panel to frame	0.125000
timeseries to specified frequency	ndframe asfreq freq method how	0.250000
and return the op string for this termvalue	core computation bin op generate v	0.250000
is an	is	0.005291
builds a concise listing of available options	options list keys width _print	0.111111
list of sql statement that create a table	create table	0.166667
must already exist and be table	key	0.005051
name this allows simpler access to columns	core ndframe setattr name value	0.166667
write a dataframe	core data frame	0.005917
values at input threshold s	core ndframe clip lower upper axis	0.333333
that left and right dataframe are equal	assert frame equal left right check_dtype	0.333333
comparison operations to convert timedelta-like to	td index cmp	0.055556
object that can be	html frame parser	0.012658
gets called after a	index	0.004008
apply for sparsedataframe	apply func	0.027027
two	other result_name	0.500000
into a higher	cls value	0.250000
of tuples of the (attr formatted_value)	format attrs	0.142857
is index for series columns for dataframe and	core	0.001326
of v	searchsorted v	0.033333
validate that an positional indexer cannot enlarge its	indexer has valid positional setitem indexer indexer	0.052632
produce 'pivot' table based on	reshape slow pivot	0.333333
gets called after a	indexes index array	0.100000
a boolean whether this axes needs validation	indexer should validate iterable	0.166667
read text from clipboard	read clipboard	0.200000
object dtype try	dtypes maybe	0.166667
index objects contain the same elements	indexes index	0.007353
deprecated option and if so prints a	core warn if deprecated	0.166667
with the bom	bom	0.125000
'numpy' library the third	take with convert convert	0.055556
from 1-dimensional ndarray only use this if	core indexes	0.004762
a fixed frequency datetime index with	core indexes bdate range start end	0.083333
making this object picklable	index reduce	0.333333
you	set value arr	0.023810
apply we	mixin apply func	0.050000
compute a	index	0.002004
of value from 1-dimensional ndarray	index get value	0.250000
is	map	0.029412
the underlying data	indexes multi index	0.013158
monday instead	monday	0.166667
only if the process of casting data from	index assert safe casting cls data	0.047619
:class packer for	io	0.003012
instances of all the various index	util all index	0.142857
an item pair	popitem	0.043478
index value is found	indexes datetime index ops mixin isin	0.083333
take which sets	take nd	0.047619
header rows	header	0.066667
try hard to parse datetime	parse	0.034483
1-dimensional	indexes index set value arr key	0.023810
list indicated if we have mixed levels	have mixed levels	0.200000
via the 'numpy' library the	with convert convert	0.055556
string in the series/index by the given	core str	0.011364
lookup of value from 1-dimensional ndarray only use	categorical index get value series	0.100000
a subset of a dataframe	data frame	0.005714
argsort	core series argsort	0.083333
convert argument to datetime	tools to datetime arg errors dayfirst yearfirst	1.000000
to indexer and return them as	indexer axis	0.043478
optional	optional	0.300000
set the value inplace	value mgr	0.083333
to an openpyxl style object	io openpyxl1writer convert to style cls	0.500000
axis omitted where alternately any	axis how thresh subset	0.100000
new labels	labels labels level	0.250000
the end of this frame	frame	0.009091
a list of normalized locales	valid locales locales	0.200000
compute a simple cross-tabulation of	index columns	0.028571
return the dtype object	dtypes	0.015873
and return the block manager from	to manager sdf columns index	0.052632
with the data	data	0.009709
read csv file (discouraged please use	frame from csv cls path header	0.066667
bytes see :class packer for	io msgpack	0.025000
at particular time of	at time time asof	0.066667
values can be any	values name	0.166667
cells	formatter subset	0.500000
the inferred types one for each level	core indexes multi index inferred type levels	0.333333
needs additional handling	index array wrap	0.033333
input values as an enumerated type or categorical	core factorize values sort	0.111111
convert series to dataframe	series to frame	1.000000
raised matches the expected exception and	util assert raises contextmanager exception matches	0.142857
any type that can be coerced to periods	period index simple new cls	0.142857
in file	append key value	0.016667
this if	value	0.005155
a ufunc needs additional handling	period index array wrap result context	0.041667
a series	core series group	0.030303
table in file node	io hdfstore	0.014493
func to	func	0.011905
convert series to sparseseries	series to sparse kind fill_value	1.000000
return the block manager from a	core sparse to manager sdf columns	0.052632
is a deprecated option and if so prints	core warn if deprecated	0.166667
series we	series	0.006757
is index	ndframe	0.005025
return a boolean if we need a	indexes index is	0.100000
a view of myself	categorical view	0.111111
object o and return packed	packb o	0.055556
to construct this type from a string raise	categorical dtype construct from string cls string	0.166667
in the series extract groups from the first	extract frame	0.047619
a masked rec array and create the manager	masked rec array to mgr	0.500000
do need a	core ndframe needs	0.500000
we have a dtype compat for	name	0.025000
as the original	core ndframe	0.005051
return a block if we are not	core block	0.010870
guaranteed return of an indexer even when non-unique	core indexes index get indexer for target	0.250000
sparse floating point data in the	sparse data	0.200000
the axes	axes axes	0.200000
to a fixed size	itemsize	0.027027
can	parser build	0.014706
to coerce	coerce freq	0.125000
tuesday	tuesday	1.000000
cumulative product	cumprod axis	0.500000
to an ndarray copy if specified coerce	index dtype copy	0.043478
this is defined	index view cls	0.047619
ndarray only use	core indexes index set value	0.023810
first match of regular expression	flags	0.058824
with times to midnight length is unaltered	normalize	0.076923
separate excel	excel path na_rep engine	0.166667
read csv file (discouraged please use :func pandas	csv cls path sep	0.066667
difference of n	n axis	0.100000
aggregate using input function or dict of	group by aggregate arg	0.250000
unary	unary cls	1.000000
of openpyxl is supported parameters	compat is	0.111111
with decimal stride into a higher freq with	decimal cls value freq	0.333333
type window_type and size window on the data	rolling window arg window win_type	0.100000
histogram	hist	0.100000
an ndarray copy	index dtype copy	0.043478
that can be used	html frame	0.014706
arr dtype then fill	dtypes maybe fill arr	0.500000
check whether	like	0.058824
over	io html	0.012987
the index	core indexes index	0.021127
a dataframe to a	formats data frame formatter to	0.083333
we have a valid ordered parameter	validate ordered cls ordered	0.058824
labels in requested axis removed	core ndframe drop labels axis level inplace	0.250000
object with labels in requested axis removed	core ndframe drop labels axis level inplace	0.250000
blocks	core block manager slice take blocks	0.500000
file node must already exist	io hdfstore append	0.016667
grouper indexers	grouper obj key axis level	0.142857
each input to appropriate for table outplot	util table plotter conv data	0.142857
we always want	period index shallow copy with infer values	0.200000
to numpy	compat numpy	0.166667
nice str repr of our rolling object	core window unicode	0.071429
op string for	op generate	0.066667
vectorized membership of x in y if possible	in x y	0.047619
an	generic fixed	0.333333
the installed version of openpyxl is supported	compat is compat major_ver	0.111111
construction	construction	1.000000
x not in y	core computation not in x y	0.066667
all_nodes	all_nodes	0.833333
the same	core	0.001326
in the columns under the index names defaulting	reset index level drop inplace col_level	0.166667
1d array return an array of deterministic integers	hash array vals encoding hash_key categorize	0.250000
resolve	resolve	0.545455
dispatch	dispatch	1.000000
convert	ndframe indexer convert	0.500000
we if the passed type is an	is	0.005291
bind a method to class python 2	compat bind method cls name	0.200000
by the given delimiter string starting at the	rsplit	0.031250
round the	reshape round	0.500000
node must already exist	hdfstore append key	0.016667
subject string in the series extract groups from	str extract arr	0.066667
python datetime	datetime	0.006711
values attribute if it has	core	0.001326
guess the datetime format of a given datetime	tools guess datetime format	1.000000
conform set of _constructor_sliced-like objects	core panel homogenize dict frames intersect dtype	0.066667
applies a moving window of	window apply window	0.166667
joinf	joinf	1.000000
a function to be applied on each value	value formatter float_format threshold	0.100000
lookup of value from 1-dimensional ndarray	period index get value series	0.071429
index objects contain the	indexes index	0.007353
protection object	protection cls	0.500000
locations of	core	0.001326
label values for requested level	multi index get level values level	0.250000
validate that the where statement	computation validate where w	0.250000
and dtype) in this	core ndframe	0.005051
of value from 1-dimensional ndarray only use this	categorical index get value	0.100000
binary feather-format	data frame to feather fname	0.083333
internal method to handle na filling of	fillable values indices	0.125000
return datetimeindex with times	indexes datetime	0.011494
tree-like object that can be used	frame parser	0.012500
a new unit if needed otherwise return	dtypes datetime tzdtype new cls unit	0.055556
a ufunc needs	index array wrap result context	0.034483
called after a	core indexes period index array wrap	0.050000
of other to	other	0.013514
for panel objects and will raise an error	core panel to	0.027027
index	indexes multi index	0.013158
return the meta data array	io table read metadata	0.500000
ensure that an array object has a	core dtypes ensure	0.200000
reshape long-format data to wide generalized inverse	core reshape lreshape data groups dropna label	0.500000
if we define an builtin function for	core base grouper is builtin func arg	0.333333
is an actual dtype that we	core dtypes interval dtype is dtype cls dtype	0.142857
packed bytes see :class packer for options	io	0.003012
hypothetical list representing the totally ordered cartesian product	group index labels shape sort xnull	0.066667
use this if you	indexes index set value arr	0.023810
if the passed type is an	dtypes interval dtype is	0.066667
sparsearray from the input	sparse sparse data	0.076923
the symmetric difference of two index	core indexes index symmetric difference other	0.166667
to coerce a scalar to	coerce scalar to	0.071429
index value	datetime index ops	0.034483
read sql database table	sqldatabase read table table_name	1.000000
a new block with	block make block	0.100000
unaltered	core indexes datetime index normalize	0.125000
after	result	0.049180
gets called after	indexes period index array wrap	0.050000
returns *copy* of underlying	frozen ndarray values	0.250000
getitem defers	getitem	0.125000
a scipy sparse coo_matrix to a	core sparse coo to sparse series a	0.166667
name for generation (e g	core computation bin op	0.055556
for our input	sparse sanitize values arr	0.200000
1-dimensional ndarray only use this	index	0.002004
styles to html	io formats	0.027778
evaluated expression	abstract engine evaluate	1.000000
for	io msgpack	0.025000
v should be inserted	core indexes frozen ndarray searchsorted v	0.033333
gets called after a ufunc	context	0.071429
packed bytes	io	0.003012
csv file (discouraged please	core series from csv cls path sep parse_dates	0.066667
a string-like that is object	io convert string array	0.038462
between index values and index	indexes datetime index	0.007634
get integer location slice	multi index get loc key	0.500000
data (produce	data frame	0.005714
evaluate	eval func	0.200000
series to the given number	series	0.006757
wrap long strings in the series/index to	core str wrap arr	0.333333
validates	ordered	0.017857
convert to our native types format slicing	float block to native types slicer na_rep float_format	0.250000
have a valid ordered parameter if	cls ordered	0.058824
return the block manager from a dataframe of	manager sdf	0.052632
is a	is	0.026455
same type as the index (so we	core at indexer convert key key is_setter	0.090909
take which sets nan values in one pass	take nd	0.047619
dispatch to apply we are stripping all	mixin apply	0.050000
return true if this is a	is	0.010582
gets called after a	array	0.041667
construct an intervalindex from a 1d array of	index from intervals	0.125000
to call encode before writing	writer write to_write	0.083333
a user about a malformed row	malformed msg	0.100000
ndarray of the minimum argument indexer see also	core index ops mixin argmin axis	1.000000
fast lookup	core indexes index	0.007042
return the data	data	0.009709
a resample of	datetime index	0.007042
'series argmin' is called via	skipna skipna args	0.100000
concatenation of an datetimelike array of	concat datetime	0.125000
new unit if needed otherwise return	core dtypes datetime tzdtype new cls unit tz	0.055556
wrap result set	wrap result	0.022727
a groupby	groupby	0.028571
actually format my specific types	index format native types na_rep quoting	1.000000
binary feather-format	feather fname	0.083333
infer types	io parser base infer types	0.500000
first non-na/null value	core series first valid index	0.250000
of a single element	core ndframe	0.005051
the 'numpy' library	numpy validate take with convert	0.055556
and return the block manager from a	sparse to manager sdf	0.052632
internal format currently just the ndarray	block internal values dtype	0.111111
is valid for	select n is valid dtype	0.500000
string-like and string-like array to	string to	0.166667
a fully reindex-output to the	core data frame group by reindex output result	0.045455
load a pickle with a provided encoding	compat load fh encoding compat is_verbose	1.000000
ndarray only use this if	core indexes index	0.007042
create a pytables	create	0.033333
to an index	indexes index	0.007353
of the values to be	shape values ndim	0.050000
index to be returned from	index	0.002004
kwargs if it is	if	0.111111
strides of the underlying data	core index ops mixin strides	0.333333
similar to a left-join except that	left right on left_on	0.058824
multi-level index return new dataframe with labeling information	data frame	0.005714
since we are a series we by definition	series group by selection name	1.000000
timeseries to specified	asfreq	0.111111
create and return the axes	io table create axes axes obj validate nan_rep	1.000000
spreadsheet-style pivot table as a dataframe the levels	core reshape pivot table data values	0.166667
value from 1-dimensional ndarray only	indexes datetime index get value	0.071429
datetimeindex with times	indexes datetime index	0.007634
uint64 ndarray of my hashed values	multi index hashed values	0.166667
for this	index col read	0.250000
simple cross-tabulation	crosstab	0.050000
string starting at	rsplit	0.031250
read csv file (discouraged please use :func	core series from csv cls	0.066667
add in categorical accessor methods	categorical index add accessors cls	1.000000
for :meth	inplace limit downcast	0.333333
the first day of the month	month begin	0.111111
dayfirst	dayfirst	1.000000
an asof merge this is similar to	core reshape merge asof	0.071429
a version to operate on	datetime like block mixin try operate values	0.333333
and dtype)	core	0.001326
series that is datetimelike (e	maybe to datetimelike data copy	0.142857
slices/lists/labels/boolean indexer to a level-wise	locs tup	0.125000
that dict	parser	0.008000
value from 1-dimensional	value arr key value	0.038462
formats	io formats	0.027778
vectorized membership of x not in	computation not in x	0.166667
for an ordered multiindex compute the	core indexes multi index	0.013158
take which sets nan values in one	core take nd arr indexer axis	0.125000
an index that we can create	index	0.002004
iterate over the blocks collect and	reduction f axis consolidate transposed	0.062500
versionadded : 0 19 0	indexes index deepcopy if needed orig copy	1.000000
interpolate bpoly from_derivatives	core from derivatives	0.500000
csv file (discouraged please use :func pandas	series from csv cls	0.066667
see if a url has a valid	url url	0.045455
stata date formats to a type in type_map	datetime to stata type fmt	1.000000
wrapper function for series	comp method series	0.333333
to convert timedelta-like to	core indexes td index cmp opname nat_result	0.055556
names to 'index' for	names	0.038462
return a fixed frequency datetime index with	core indexes bdate range start	0.083333
to table in	io hdfstore append	0.016667
determines if two index objects	core indexes float64index equals other	0.200000
a safe version of putmask that	putmask	0.055556
needs	needs	1.000000
row cross-section from the sparsedataframe as a	core sparse sparse data frame xs key	0.166667
length is	indexes datetime index	0.007634
background in a	io formats styler background	0.125000
1-dimensional ndarray only use this if	arr key	0.023810
if 'series argmin' is called	skipna skipna	0.100000
a multiindex from the cartesian product of	indexes multi index from product	0.166667
because a comparison between 8 aware arrays	ops mixin evaluate compare other op	0.250000
filled with nat which has the same length	mixin nat new box	0.050000
if you	index set	0.022727
get my plane axes indexes these are already	panel get plane axes index axis	1.000000
same dimensions	core	0.001326
each index value is	index ops	0.033333
a new unit if	tzdtype new cls unit tz	0.055556
compute a simple cross-tabulation	crosstab index columns	0.066667
numeric	is numeric v string	0.333333
the 'numpy' library the	numpy validate take with convert convert args	0.055556
index with target's values	multi index	0.020000
according to indexer	nd indexer	0.030303
the mask see also	mask value	0.250000
after a ufunc	period index array wrap result context	0.041667
compute group sizes	core group by size	1.000000
axes compute the expected nrows	table nrows expected	0.142857
might need to coerce a code to	maybe coerce freq code	0.076923
the vectorized membership of x not in	computation not in x	0.166667
insert	insert	1.000000
curve with holidays between start_date and end_date	holiday calendar holidays start end return_name	0.066667
called via the 'numpy' library the	take with convert convert	0.055556
with a groupby	groupby	0.028571
concatenation of an datetimelike array of arrays	dtypes concat datetime	0.125000
of the values to be at least 1	shape values	0.050000
support a single assignment	computation base expr visitor visit assign	1.000000
concatenation	dtypes concat sparse	0.500000
called via the 'numpy' library	validate take with convert	0.055556
series	core dtypes get series	0.250000
union of two index	indexes range index union other	0.083333
return a slice of my values	block slice slicer	0.083333
handle	handle	1.000000
supported for panel objects and will raise an	panel	0.017857
convert a	convert	0.096774
name for generation (e g an	core computation bin op	0.055556
and index	sparse data frame set value index	0.250000
name this	name	0.025000
helpful message about our construction	core construction error tot_items block_shape axes e	0.333333
lookup of value from 1-dimensional	value	0.005155
labels using one	inplace	0.027778
string	string	0.320755
to handle na filling of take	index assert take fillable values indices allow_fill	0.250000
sanitize an index type to return an ndarray	core sanitize index data index	0.200000
compute a simple cross-tabulation	reshape crosstab index columns values	0.066667
from 1-dimensional ndarray only use this	value arr key	0.023810
can	io html frame parser	0.012195
correct fill value for the dtype of	fill value dtype fill_value fill_value_typ	0.333333
this	index set value	0.023810
analogous to the :meth pandas dataframe reset_index function	index level drop name inplace	0.142857
generic moving	arg window	0.500000
the values to be	shape values	0.050000
reduction type operation if we can	index ops mixin reduce op name	0.083333
group series using mapper dict or key	as_index	0.071429
return a list of my values cols	table values cols	0.200000
or functions	core ndframe rename axis mapper axis	0.333333
sqlalchemy connectable	io sqldatabase execute	1.000000
to the underlying	datetime index ops mixin	0.029412
index objects and sorts if	indexes range index	0.021277
for panel objects	panel to	0.027027
method to handle na filling of take	index assert take fillable	0.250000
the mode s of the dataset	mode	0.050000
stderr in	stderr f	0.125000
can be used	io html frame parser	0.012195
read from the store close	io read	0.038462
the data types and ranges supported by stata	stata types data	0.333333
wrap comparison operations to convert timedelta-like to	core indexes td index cmp opname nat_result	0.055556
gets called	wrap result	0.068182
make sure a valid engine is	core computation check engine engine	0.333333
new_locale	new_locale	1.000000
a fixed	range start end	0.133333
scalar to a compat for our index type	scalar to index	0.333333
box function to get	datetime index ops mixin box func	0.142857
the display options for printing and representing	display options	0.083333
fast version of	fast func	0.500000
a manipulation result has the same dimensions	constructor	0.040000
input data_columns and min_itemize and create	data_columns min_itemsize	0.200000
values according to indexer and return them	indexer	0.018349
having a singular 'name' parameter for general index	indexes index validate names name	0.066667
swap levels i and j in	core data frame swaplevel i j	0.333333
(e g convert back to bool/int	dtypes maybe downcast to dtype result	1.000000
generation (e g	computation bin op	0.055556
in	key value format	0.016667
the boolean criterion specified by func	ndframe group by filter func dropna	0.250000
deal with nat-like arg	arg	0.018868
the op string for this termvalue	computation bin op generate v	0.250000
to coerce	maybe coerce freq	0.125000
dataframe to a tabular environment table you can	data frame to latex buf columns col_space header	0.111111
each element in the	core map indices py arr	0.090909
a view of	categorical view	0.111111
find indices where elements of v should be	indexes frozen ndarray searchsorted v	0.033333
interpolate machinery	interpolate with fill method axis	0.200000
of the flattened values of the underlying data	core indexes index ravel order	0.037037
a series excluding elements from groups that	core series group	0.030303
gets	indexes index	0.007353
kernel density estimate plot	plotting frame plot methods kde	1.000000
tuples of the (attr formatted_value)	core indexes range index format attrs	0.142857
float values converted into	formats float	0.055556
a copy of this sparsedataframe	core sparse sparse data frame copy	0.500000
string representation for a particular object	core string mixin repr	0.333333
node must already	key value	0.011628
occupying requested label default to specified missing	core sparse sparse series get label default	0.083333
attempt to construct this type	interval dtype construct	0.333333
used	io html frame	0.012987
and dtype)	ndframe	0.005025
the block i	create for block cls i	0.333333
all values found	core transform	0.250000
i and j in	i j copy	0.250000
mask	mask	1.000000
return our new index	core period index resampler get new index	1.000000
csv	core series from csv cls	0.066667
according to indexer and return	indexer axis	0.043478
to table in file node must already	io hdfstore append key value	0.016667
to convert datetime-like	indexes period index cmp opname nat_result	0.066667
given	formats get	0.181818
reduction type operation if we	ops mixin reduce op	0.083333
new multiindex from the	indexes multi	0.014493
moving window of type window_type and size window	stats rolling window arg window win_type min_periods	0.100000
float is	formats set eng float	0.200000
and create a new block manager	block manager reduction f axis	0.250000
lag-n autocorrelation parameters	series autocorr lag	1.000000
label s of the internal	axes	0.043478
object that can be used to iterate	io html frame	0.012987
memory usage	index memory usage deep	0.200000
post process for each	plotting mplplot post plot logic	0.333333
the string if	core	0.001326
index with requested level removed if multiindex has	multi index droplevel level	0.333333
read csv file (discouraged	frame from csv cls path header	0.066667
of two or more factors by default	values rownames	0.333333
a copy of the sparsearray	copy	0.012821
via the 'numpy' library	validate take with convert convert args kwargs	0.055556
see	packb	0.022727
this	indexes index set value	0.023810
data types and ranges supported by stata and	stata types data	0.333333
types format slicing	types slicer na_rep float_format	0.200000
slice dictionary for these axes	core panel extract axes for slice axes	0.333333
is valid	n is valid	0.500000
of value from 1-dimensional ndarray only use	core indexes datetime index get value series	0.071429
ndarray filled with nat which has the	nat new	0.050000
corresponding interval with closed bounds	closed bounds interval	0.200000
we are index sliceable then return my	to index sliceable obj	0.083333
value from 1-dimensional ndarray only use	indexes categorical index get value series key	0.100000
frequency datetime index with custombusinessday as the default	indexes cdate range start end	0.083333
by definition have do not have	formats datetime64formatter format strings	0.090909
the fill value for the nan/nat from the	fill value val	0.142857
making this object picklable	sparse sparse array reduce	0.333333
called after a	series array wrap	0.100000
we by	group by	0.016129
return a slice of my values	core block slice slicer	0.083333
of nanoseconds (>= 0 and less than 1	indexes timedelta index nanoseconds	0.066667
accumulating data to be converted	list	0.034483
see :class	packb	0.022727
wrap comparison operations to convert timedelta-like	indexes td index cmp opname nat_result	0.055556
the slice locations for input	index slice locs start end step kind	0.083333
text representation of object to the	ndframe to	0.043478
la re split in the series/index by given	core str split arr pat	0.166667
the list	list	0.034483
from 1-dimensional	set	0.012195
gets	indexes period	0.034483
to write this as a frame table	series table write	0.400000
it	series	0.006757
the object is a number	core dtypes is number	0.500000
scipy sparse coo_matrix to a sparseseries	core sparse coo to sparse series a dense_index	0.166667
specialized shift which produces a	ops mixin shift n freq	0.250000
a particular dataframe invoked by unicode df	series unicode	0.166667
1-dimensional ndarray only use	index set	0.022727
intersection of two index objects sortedness of	index intersection other	0.052632
contains any keys that are not in 'compat_args'	for invalid keys	1.000000
sparsedataframe	sparse sparse data frame	0.058824
using input function or functions	rename axis mapper axis copy inplace	0.250000
function to determine	dtype n method	0.125000
offsets index to beginning of period	beg apply index i	0.333333
property synonym	ndframe	0.005025
a list	tolist	0.071429
new multiindex from the	core indexes multi index	0.013158
we take a string-like	io convert string array	0.038462
background in a range according to the	formats styler background	0.125000
to indexer and return	indexer axis	0.043478
numeric add/sub	core indexes index add numeric	0.250000
v should be inserted in a	v	0.026316
object	core ndframe	0.010101
csv file (discouraged please use :func pandas	data frame from csv cls path header sep	0.066667
a simple cross-tabulation of	index columns	0.028571
attempt	attempt	1.000000
return the	operation get	0.500000
whether	validate	0.027778
left <= series <= right na	series between left right inclusive	0.200000
to class python 2	cls name	0.125000
of my hashed	core indexes multi index hashed	0.166667
of value from 1-dimensional ndarray only	set value arr key value	0.038462
return the number of bytes in	nbytes	0.046512
the values & release	index col take data	0.111111
index names defaulting	index level drop inplace col_level	0.166667
full length slice	full slice obj l	0.333333
coerce a string or np dtype to	coerce to dtype dtype	0.500000
applies the put method to its values attribute	core series put	0.055556
csv file (discouraged	data frame from csv cls	0.066667
compute pairwise correlation of columns excluding	core data frame corr method	0.111111
as	index array	0.033333
if we	indexes	0.004651
function is called via the 'numpy' library the	validate take with convert convert args	0.055556
given delimiter string starting at the end	rsplit arr	0.037037
set	series set	0.153846
return dateoffset object from string or tuple representation	tseries to offset	0.200000
dtype	dtype	0.230769
this is	key	0.005051
fast lookup of	set value arr	0.023810
value from 1-dimensional ndarray only use	core indexes categorical index get value series key	0.100000
by an error is encountered in pd	error	0.028571
dtype) in this	core	0.001326
column and index parameters	sparse sparse data frame set value index col	0.500000
make a multiindex from	indexes multi index from	0.142857
ensure that if we don't have an index	data frame ensure valid index	1.000000
cast to datetimeindex	core indexes period index to timestamp freq	1.000000
1-dimensional ndarray	value	0.005155
unit if needed otherwise	cls unit tz	0.125000
datetime64 block with	datetime	0.006711
crit	crit	1.000000
use	index set value	0.023810
values and other to int64 with null values	values other	0.200000
of type t or tuple of	type t	0.083333
sparse	sparse sparse data	0.076923
check	check	0.700000
if we define an builtin function for	mixin is builtin func	0.333333
set the	io index col	0.111111
that can be coerced to	index simple new cls	0.090909
return a formatter function	io formats get	0.100000
index objects contain the same elements	datetime index ops mixin	0.029412
writer :	formatter write writer	1.000000
a scipy sparse coo_matrix from a sparseseries	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
an attributes dict	attributes dict	0.250000
are going to write this	write obj data_columns	0.111111
a class for writing stata binary	stata fname	0.200000
check that left and right index are equal	index equal left right exact check_names	0.333333
indexables if they don't exist	indexables	0.125000
that can be used to iterate over	build	0.013514
to class python 2 and	cls name	0.125000
more this is index for series	core ndframe	0.005051
resample	timedelta index	0.045455
ndarray only use	set value arr key	0.023810
underlying array which	indexes datetime index ops mixin	0.029412
are stripping all of the _upsample kwargs and	group by mixin apply f	0.166667
read csv file	core data frame from csv	0.066667
apply the	month offset apply index	0.500000
op_classes	op_classes	0.714286
of the underlying data	index ops mixin	0.019231
a slice	core categorical block slice slicer	0.083333
the underlying data which is a categorical	indexes categorical index	0.047619
for series arithmetic operations to avoid code duplication	arith method op name str_rep default_axis	1.000000
a multirow e	io formats latex formatter format multirow	0.250000
the len	core categorical size	0.111111
of all the classes which represent time-seires	all timeseries index	0.333333
the number of bytes in the underlying data	index nbytes deep	0.052632
of a	datetime index	0.007042
return a fixed frequency datetime index with	indexes bdate range start	0.083333
returns numpy array of python datetime	datetime index	0.007042
that can be used	html frame parser	0.012658
bind a method to class python	bind method cls name	0.200000
pandas_dtype	pandas_dtype	1.000000
particular time of day e g 9 30am	time time	0.142857
ndarray's __getitem__ method to work as desired	indexes index getitem key	0.166667
datetimelike methods (as we may have to override	datetimelike methods	0.066667
text representation of object to	core ndframe to	0.040000
that can be used	frame parser build	0.014706
a categorical	categorical index	0.045455
object that	io	0.003012
an enumerated type or categorical variable	core factorize	0.200000
boolean whether i can attempt conversion	indexes is convertible	0.333333
to create the grouper indexers	grouper obj key axis level	0.142857
out the binary	fname	0.071429
components days hours minutes seconds milliseconds microseconds nanoseconds	components	0.166667
wrapper function for series	bool method series	0.333333
hash an multiindex / list-of-tuples efficiently	hash tuples vals encoding hash_key	1.000000
that	core categorical	0.013889
new multiindex from	multi index	0.020000
alert	python parser alert	0.200000
a typeerror if	dtypes categorical	0.250000
the bool	ndframe bool	0.055556
an item pair from maps[0] raise	map popitem	0.055556
csv file (discouraged please use :func pandas read_csv	csv cls path header sep	0.066667
input values as an enumerated type	core factorize values	0.111111
concise listing of available options	options list keys width _print	0.111111
capture stderr in a	util capture stderr f	0.055556
to	elapsed date to	0.250000
feather-format object from the	read feather	0.083333
property property synonym for	ndframe	0.005025
return a string representation for a particular object	dtypes extension dtype repr	0.142857
of styler with a custom	styler from custom	0.200000
a 1d array return an array of	hash array vals	0.083333
read csv file (discouraged	csv cls path sep parse_dates	0.066667
1-dimensional ndarray only use this if you	set	0.012195
in xport format	sas parse	0.066667
subplots already made	plotting subplots naxes sharex sharey squeeze	0.166667
form the intersection of two index objects	indexes range index intersection other	0.083333
reflecting the	setup	0.090909
return the number	core indexes range	0.062500
lookup of value	core indexes index set value arr key value	0.038462
vectorized membership of x	x	0.086957
series columns	ndframe	0.005025
as series or by a series of	by axis	0.045455
node must already exist	append	0.012987
particular dataframe invoked by unicode df in	core data frame unicode	0.166667
gets called after a	wrap	0.057692
can be used to iterate over the dom	doc	0.071429
frame to its numpy-array representation	ndframe as matrix columns	0.200000
validates that we have a	cls	0.016949
self f skipping as specified	n skiprows	0.333333
return the underlying data which is	index values	0.111111
a "pivot" table) based	pivot index columns	0.111111
index and its underlying	range index	0.021739
attempt to construct this type from a string	interval dtype construct from string cls string	0.166667
fast lookup	arr	0.013699
csv file (discouraged please use :func	data frame from csv cls path header	0.066667
occupying requested label default to specified	sparse series get label default	0.083333
and string-like array to convert object	core dtypes maybe convert string to object	0.142857
compute a simple	columns values	0.037037
if we define an builtin function for this	core base grouper is builtin func	0.333333
the reduction type operation if	ops mixin reduce op name	0.083333
the minimum argument indexer see also	ops mixin argmin axis	0.333333
can be used to iterate over	html frame parser build	0.014706
swap level i with level j do not	indexes multi index swaplevel i j	0.333333
value from 1-dimensional	get value series key	0.250000
return the	indexes multi index	0.013158
array of whether each index value	index ops	0.033333
and returns axes if supplied	axes	0.043478
my	indexes index	0.007353
to table in	key	0.005051
series to the	core series	0.008000
x not in y	computation not in x y	0.066667
nrows ncols	util make custom dataframe nrows ncols	0.250000
dataframe with labeling information in the	data frame reset	0.027778
new dataframe with labeling information in the columns	core data frame	0.005917
return a boolean list indicated if we have	core indexes multi index have	0.142857
same as values	sparse series get values	1.000000
lookup of value from 1-dimensional	set value arr key value	0.038462
new	putmask	0.055556
highlight the maximum	highlight max	0.333333
array interface return	core indexes categorical index array dtype	0.125000
whether each index value is found	index ops mixin isin	0.083333
object that can be used to iterate over	parser build	0.014706
if label is not contained	value label	0.066667
that an positional	valid positional setitem	0.250000
infer types of values possibly casting	parser base infer types values na_values try_num_bool	1.000000
of subplots already made	subplots naxes sharex sharey squeeze	0.166667
gets called after	indexes period index array wrap result	0.050000
each group	group by	0.112903
ensure that we are re-localized	ops mixin ensure localized result	1.000000
read csv file	from csv cls path header	0.066667
for this indexable	io index col	0.055556
read from a url file	io read	0.038462
table in file node	io hdfstore append key value	0.016667
on sunday use day	tseries sunday	0.200000
long stacked format dataframe	data frame to	0.037037
number of bytes in the	multi index nbytes	0.052632
*this is an internal non-public method*	index create categorical data categories ordered	0.333333
if the passed type is an	core dtypes interval dtype is	0.066667
function or functions	core ndframe rename axis mapper axis	0.333333
of the	axis	0.011364
around numpy result_type which overcomes the npy_maxargs 32	core computation result type many	0.142857
we want to set the _typ here	set axis axis labels fastpath	0.200000
block	datetime	0.006711
values as an enumerated type or categorical variable	factorize values sort	0.111111
of openpyxl is supported parameters	is	0.005291
returns numpy array of python datetime date objects	datetime index	0.007042
via the 'numpy' library the third	take with	0.055556
a dataframe	data frame	0.091429
returns value occupying requested label default	sparse series get label default	0.083333
after a ufunc	array wrap result context	0.088235
called after a ufunc	core indexes period index array wrap result context	0.041667
timedeltas	format timedelta64 values nat_rep box	0.125000
csv file (discouraged please use :func	data frame from csv cls path header sep	0.066667
is called via the 'numpy' library the	with convert	0.055556
shift without copying data the shifted	core ndframe slice shift	0.083333
ndarray only use this	indexes	0.004651
that path's extension against the writer's supported extensions	io excel writer check extension cls ext	0.333333
long-format data to wide generalized inverse of	lreshape data	0.333333
a method to class python 2 and python	method cls	0.076923
object coercible to	other join overwrite filter_func	0.076923
a resample of	datetime index resampler	0.066667
other	for numeric binop other	1.000000
scalar data converts other	data	0.009709
provides a resample of	index	0.006012
datetimeindex with	indexes datetime index	0.007634
the reduction type operation if we can	ops mixin reduce op	0.083333
slice the info axis of obj with	get info slice obj	0.500000
expression	expression	1.000000
checks that all the labels are datetime objects	indexes numeric index is all dates	0.333333
to capture stderr in a buffer so that	util capture stderr f	0.055556
table reflecting	table setup	0.083333
and 'kwargs' should	name args kwargs	0.166667
is defined as a copy with	core indexes multi index view cls	0.047619
return the	of merge get	0.500000
use this if you	indexes index set value	0.023810
to construct this type	categorical dtype construct	0.333333
and 'kwargs' should be empty because	method args kwargs	0.142857
a higher freq with integer	cls value freq	0.083333
convert key value pairs to	from items cls items columns orient	0.500000
omitting na/null values	axis kind order	0.250000
dataframe sorted by the n smallest	data frame nsmallest n	0.166667
wide panel	core reshape wide	0.500000
parse the raw data into	parser parse raw data	0.250000
array of python datetime	datetime index	0.007042
for dataframe and major_axis for	core ndframe	0.005051
swap level i with level j	swaplevel i j	0.111111
indicated if we have	have	0.083333
a manager and a axes dict	init mgr mgr axes dtype copy	0.333333
the values to be	core block shape values	0.050000
the data & release the memory	io data col take data	0.111111
to apply	apply	0.026316
indexer fill with	indexer	0.009174
index names to	names	0.038462
a new unit if	new cls unit	0.055556
return the block manager from a dataframe	core sparse to manager sdf columns index	0.052632
expression as a string using various backends	computation eval expr parser engine truediv	0.500000
values and a date_format return a	from values values date_format	0.250000
values to use when concatenating specified units	na join_units	0.250000
requested	level inplace	0.500000
sure that we have a fully reindex-output	core data frame group by reindex output result	0.045455
the process of casting data from some	safe casting cls data	0.047619
provide iteration over the values of the series	core series iter	1.000000
info for this	get info info	0.333333
passed info	info info	0.142857
read html tables into a list	read html io match flavor header	0.200000
manager for running code that expects	util assert produces warning expected_warning filter_level	0.071429
the 'numpy' library the	take with	0.055556
the underlying array which by-definition	core indexes datetime index ops mixin	0.029412
used	build	0.013514
a new block	sparse block	0.250000
we need to coerce	period index coerce	0.125000
integer location slice	loc key	0.250000
this function is called via the 'numpy' library	compat numpy validate take with convert convert	0.055556
into a pandas only dtype object or a	pandas	0.035714
the underlying array which	core indexes datetime index ops mixin	0.029412
a single block and are a	core block	0.010870
function to determine if dtype is valid	is valid dtype n method dtype	0.142857
concatenation of an datetimelike array	concat datetime to_concat	0.125000
to sif	to	0.006329
dt	dt	1.000000
perform an	axis limit	1.000000
update index attributes e g freq depending	indexes datetime index maybe update attributes	0.200000
be	as	0.066667
sort multiindex at the requested level the	multi index sortlevel level	0.250000
convert a numpy / pandas type to its	type x	0.055556
microsecond	datetime index ops mixin resolution	0.125000
of to_match into	core match to_match	0.333333
these are written transposed	io appendable panel table get object obj	1.000000
operations to convert timedelta-like	core indexes td index cmp opname nat_result	0.055556
create the manager	mgr	0.083333
create and return the op string	core computation bin op generate	0.066667
the manager	mgr	0.083333
checks that path's extension against	io excel writer check extension cls	0.125000
bind a method to	compat bind method cls	0.200000
the series/index by indicated	core str repeat arr	0.045455
packed	packed	0.600000
csv file (discouraged please use :func	frame from csv cls path	0.066667
fractional part of the	frac x precision	0.100000
fastpath	fastpath	1.000000
encode input values as an enumerated type or	factorize values sort order na_sentinel	0.111111
csv file (discouraged please use :func	csv	0.057143
csv file (discouraged please	data frame from csv cls path	0.066667
has	series	0.006757
construct an intervalindex from a 1d array of	index from intervals cls data	0.125000
of sparse/dense and dtype) in this	core ndframe	0.005051
string-like that is object dtype and coerce	string array data encoding	0.038462
series extract groups from the first match of	str extract arr	0.066667
index with day	core indexes	0.009524
a tree-like object that	build	0.013514
we need to coerce a scalar to	core indexes period index coerce scalar to	0.071429
ndarray only	value arr key	0.023810
gradientfill stop parameter	stop cls	0.066667
for general index and plural 'names' parameter	core indexes index validate names name names deep	0.071429
a ndarray like into	parser	0.008000
data	slice	0.038462
dict of the kinds allowable columns for this	table queryables	0.055556
matches the expected exception and expected error	contextmanager exception matches exc_type exc_value trace_back	0.333333
the slice locations for input labels	index slice locs start end step kind	0.083333
numeric add/sub	numeric	0.052632
exist	hdfstore	0.014925
length of that group	core group by	0.027778
converts dtype types to stata types returns	dtype to stata type dtype	0.250000
determine if each	str match arr pat case	0.166667
return a tree-like object that can be used	html frame	0.014706
for groupby	by	0.038462
holidays between start_date and end_date parameters	tseries abstract holiday calendar holidays	0.166667
actual sparse values need to	core sparse sparse array	0.043478
called after a ufunc needs additional handling	result context	0.027027
the blocks collect and	reduction f axis consolidate transposed	0.062500
given axis omitted where alternately any	dropna axis how thresh subset	0.100000
our native	native	0.375000
and arr dtype then fill	dtypes maybe fill arr	0.500000
axes	axes dtype copy	0.500000
the float values converted	formats float array formatter	0.055556
fast transform path for	core ndframe group by transform fast	0.333333
to deal with nat-like arg	arg	0.018868
gets	series array wrap	0.100000
get	core indexes period index get	0.500000
if arg is a string then try to	core selection mixin try aggregate string function arg	1.000000
copy of a series excluding elements	series group	0.030303
provides	timedelta	0.022222
take a string-like that is object dtype and	io convert string array data encoding	0.038462
iterate over	io html	0.012987
a manager and a axes dict	core ndframe init mgr mgr axes dtype copy	0.333333
maximum value of the index	index	0.002004
coerce a scalar to a compat for	index coerce scalar to	0.071429
csv file (discouraged please use :func pandas	core series from csv cls path sep parse_dates	0.066667
if categoricals are the same dtype	core categorical is dtype equal other	0.250000
the left	left	0.018519
underlying	range	0.047619
the fill_value	fill_value	0.033333
of seconds (>= 0 and	timedelta index seconds	0.066667
or columns using input function	axis copy inplace	0.055556
internal method to handle na filling of	fillable values indices allow_fill	0.125000
datetime index with business day as	indexes bdate	0.050000
of v should be inserted	searchsorted v	0.033333
to table in	io hdfstore append key	0.016667
a malformed	malformed msg	0.100000
table in file node must	io hdfstore append	0.016667
returns the base	base	0.100000
coerce a scalar to a compat for our	indexes period index coerce scalar to	0.071429
needs additional	indexes period index	0.035714
a type checking function of type	core computation is type	0.125000
next offset only if not on offset	tseries business hour mixin rollforward dt	0.500000
ndarray only use this if you	index set value arr key	0.023810
compute the symmetric difference of two index objects	indexes index symmetric difference other	0.166667
other	index validate for numeric binop other	1.000000
select values at particular time of day e	at time time	0.066667
a list/array of tuples	tuples cls data closed	0.250000
of value from 1-dimensional ndarray only use	categorical index get value series	0.100000
and return a basegrouper which	get	0.007143
subclasses of superclass	superclass	0.111111
on	mixin	0.037037
of tuples of the (attr formatted_value)	ops mixin format attrs	0.142857
read text from clipboard and pass	io read clipboard sep	0.200000
get	indexes period index get	0.500000
data (produce a	core data frame	0.005917
re-evaluate the obj with a groupby	groupby and	1.000000
and string-like array to convert object dtype	dtypes maybe convert string to object	0.142857
names to	default names data	0.083333
filled with nat which has	nat new box	0.050000
ndarray of the flattened values of	ravel order	0.037037
typeerror if	core dtypes categorical	0.250000
item at	item	0.050000
o and return packed	packb o	0.055556
superclass	superclass	0.666667
after a ufunc needs	core indexes period index array wrap result context	0.041667
dataframe containing sparse floating point data in the	sparse data frame	0.090909
cumulative sum for	cumsum axis	0.500000
series corresponding to requested indices parameters	series take indices axis convert is_copy	0.500000
get integer location	timedelta index get loc	1.000000
stata date formats to a type in	io convert datetime to stata type	0.200000
infer the fill value for the	core dtypes infer fill value	0.333333
object	core indexes index	0.007042
called upon unpickling rather than the default which	new datetime index cls d	0.111111
period frequency	freq	0.016129
check that left and right dataframe are equal	util assert frame equal left right check_dtype check_index_type	0.333333
histogram of the dataframe's	plotting hist	0.200000
columns of this dataframe	columns	0.017857
values from	index col convert values	0.333333
the boolean criterion specified by func	group by filter func dropna	0.250000
to sif http //www stata com/help cgi?datetime	to stata elapsed vec dates fmt	1.000000
and return the block manager from a	to manager sdf columns	0.052632
to iterate over the dom	build doc	0.125000
convert to our native types format	categorical block to native types slicer na_rep	0.250000
calculate	indexes	0.004651
prettier version	pretty string	0.250000
ndarray only use this if	value arr	0.023810
array interface return my	core series array result	0.166667
utility to	skipna fill_value fill_value_typ	0.500000
my hashed values	multi index hashed values	0.166667
pickle with a provided encoding	fh encoding compat is_verbose	0.200000
to midnight	datetime	0.006711
series that is datetimelike (e	core indexes maybe to datetimelike	0.142857
already exist and be	io hdfstore append	0.016667
for scalar op	can do op	0.250000
a method	method	0.033333
keyerror is maps[0]	compat chain map	0.032258
at the new freq essentially a reindex	resampler asfreq fill_value	0.066667
a new categorical by default	core categorical sort values	0.166667
a series that is datetimelike (e	core indexes maybe to datetimelike data copy	0.142857
key or none	key	0.005051
the same dimensions as the	core ndframe	0.005051
of sparseseries (with nan fill_value) to	core sparse	0.041667
repr should show the info view	info repr	0.333333
over	frame parser build	0.014706
a datetimelike dtype converting	datetime value dtype	0.166667
unicode_errors	unicode_errors	1.000000
use this	indexes	0.004651
list representing the totally ordered cartesian product	get group index labels shape sort xnull	0.066667
validates that we have	core categorical	0.013889
or	map	0.029412
of the values to be	core block shape values	0.050000
that can be used to iterate over	io html frame parser build	0.014706
concatenate two or more series	series append to_append ignore_index verify_integrity	1.000000
is called via the 'numpy' library the third	validate take with convert convert args kwargs	0.055556
the series extract groups from the	str extract arr	0.066667
that can be used to	parser	0.008000
the passed type is an actual dtype that	core dtypes interval dtype is dtype cls dtype	0.142857
col	col	0.259259
indices overlap	core items overlap	0.062500
categorical to be unordered	categorical as unordered	1.000000
index	multi index	0.020000
dtype and n/a	dtype and	0.125000
we take a string-like that is object dtype	convert string array data	0.038462
keep	keep	0.714286
the number	indexes multi index	0.013158
to apply we are stripping	group by mixin apply func	0.050000
force all buffered modifications to be written	io hdfstore flush fsync	0.200000
write records stored in	name if_exists	0.500000
the number of bytes in the underlying data	nbytes	0.046512
set of kwargs suitable for initializing	kwargs	0.022222
function designed	apply func	0.027027
that can be used	frame parser	0.012500
validate this column return the compared against itemsize	validate col itemsize	1.000000
calculate datetime	core indexes datetime index parsed	1.000000
length is	core indexes	0.004762
the best locator based on a distance	pandas auto date locator get locator dmin dmax	0.250000
values attribute	series	0.006757
construct and returns axes	core ndframe construct axes	0.333333
we have a full length slice	core is full slice obj	1.000000
datestr	datestr	0.625000
block in-place with new	object block set locs values check	0.125000
check if the object	core dtypes	0.055556
take which sets nan values in one pass	core take	0.125000
sum	sum	1.000000
we need to coerce a scalar	coerce scalar	0.250000
flattened values of the	index ravel order	0.037037
feather-format for	data frame to feather	0.333333
that can be used to	html frame parser build	0.014706
validates	core categorical validate	0.055556
matches the expected	matches	0.125000
align	align	0.666667
the values of the series	core series	0.008000
csv file (discouraged	core data frame from csv cls path	0.066667
object datetimeindex timedeltaindex	dtypes	0.015873
construct dataframe from dict of	core data frame from dict cls data orient	0.200000
gets called after	core indexes period index array	0.050000
convert to our native types	categorical block to native types slicer na_rep quoting	0.250000
truncates a sorted ndframe	ndframe truncate	0.250000
index with business day as the	core indexes bdate	0.050000
do a list replace	replace list src_list dest_list	1.000000
needs additional handling as	array wrap	0.025000
sets names on levels warning mutates!	core indexes multi index set names names	0.200000
take a string-like that is object dtype and	convert string array	0.038462
of _constructor_sliced-like objects to either an intersection of	core panel homogenize dict frames intersect dtype	0.066667
from 1-dimensional	core indexes index set value arr	0.023810
cov	cov	1.000000
reshape data (produce a	data	0.009709
pairs for each element in	map indices py arr	0.090909
columns as lists of strings	str columns	0.083333
numpy result_type which overcomes the npy_maxargs 32	core computation result type many	0.142857
must already exist and be table	hdfstore append key value format	0.016667
a valid ordered	ordered	0.017857
wrap index _get_unique_index to	core indexes period index get unique index dropna	0.250000
is called via the 'numpy' library	with	0.068966
reset	ndframe reset	0.500000
compat for our index	index	0.002004
parse the raw data into a list of	frame parser parse raw data	0.250000
pairwise correlation	corr	0.125000
parameters	cls	0.016949
a subclass of styler with a	formats styler	0.021739
potentially upcasts the	core dtypes maybe upcast	0.500000
to an xlwt style	io xlwt writer convert to style	0.500000
save workbook to disk	openpyxl1writer save	0.333333
uuid	uuid	1.000000
if	index set value arr key	0.023810
return a categorical adjusted for	categorical index codes for	0.333333
type window_type and size window on	arg window win_type	0.100000
to construct	construct	0.071429
input function	axis copy	0.333333
the shape of the values	core block shape values ndim shape	0.083333
is called via the 'numpy' library	numpy validate take with convert convert	0.055556
sparsifying is not supported for panel objects and	panel	0.017857
alert a user about a malformed row	parser alert malformed msg	0.500000
frame	formats data frame	0.090909
in a block of	block make block	0.100000
integer-location	i	0.041667
capture stderr in a buffer so that it	util capture stderr	0.055556
codes by the indexer fill	indexer	0.009174
we always want to	period index shallow copy with infer values	0.200000
input with values above given value s truncated	core ndframe clip upper threshold axis	1.000000
of self coded with categories as returned	categorical codes for groupby sort	0.071429
of value from 1-dimensional ndarray only use	period index get value series key	0.071429
is called via the 'numpy' library	with convert convert args	0.055556
select values between	indexes datetime index indexer between	0.125000
data	core indexes range	0.062500
fast lookup of value from 1-dimensional ndarray	arr key value	0.038462
etc' nentries - number of entries in index	custom index nentries nlevels prefix	1.000000
second millisecond or microsecond	indexes datetime index ops mixin resolution	0.125000
panel	panel	0.250000
string or np dtype to	to dtype dtype	0.083333
already exist and	append key	0.016667
the totally ordered cartesian product of all possible	index labels shape sort xnull	0.066667
error raised when attempting to get a slice	error	0.028571
of normalized locales	valid locales locales normalize	0.200000
its values attribute if	series	0.006757
the exception raised	assert raises contextmanager	0.166667
file	key	0.005051
whether or not the 'usecols' parameter is a	io evaluate usecols usecols names	0.083333
the union of	union	0.100000
evaluate the block return result block	core block eval func	0.333333
we are index sliceable then return my slicer	convert to index sliceable obj key	0.083333
length of a single	length of	0.333333
create a spreadsheet-style pivot table	core reshape pivot table	0.111111
to returning	level inplace verify_integrity	0.333333
string-like that is object dtype	string array data	0.038462
be used	html	0.011765
series excluding elements from groups that	core series group	0.030303
(header new_data) for header rows in multiindex	pop header name row index_col	0.200000
type is an actual dtype that	interval dtype is dtype cls dtype	0.142857
particular panel invoked by unicode df in	core panel unicode	0.166667
function	func mgr	0.083333
autocorrelation	autocorrelation	1.000000
columns	columns keep	0.333333
compute variance of groups excluding	group by var ddof	0.166667
manager and a axes dict	ndframe init mgr mgr axes	0.333333
pick the best locator based	locator get locator	0.062500
force all buffered modifications to be written to	io hdfstore flush fsync	0.200000
capture stderr in a buffer	capture stderr f	0.055556
to table in file node must already exist	append	0.012987
given an index find the level lenght for	io formats get level lengths index	0.500000
for a panel-like dataframe parameters	core panel index time panels names	0.076923
each index	indexes datetime index	0.007634
file node	key value format	0.016667
a new manager with the	block manager	0.021277
gets called after a	core indexes index	0.007042
coerces data to ndarray raises on	core indexes index coerce to ndarray	0.166667
index value is found in the	datetime index ops mixin isin values	0.083333
fast	index set value	0.023810
pandas only dtype object or a numpy dtype	pandas dtype dtype	1.000000
string in the series/index	core str repeat arr	0.045455
gets called after a	indexes period index array wrap	0.050000
exist and be	hdfstore append key value format	0.016667
values attribute if it has one	core	0.001326
underlying data which is a categorical	indexes categorical index	0.047619
the block manager from a dataframe	core sparse to manager sdf columns	0.052632
and create the	to	0.006329
string a la re split in	split arr	0.200000
node must already exist and be table	format	0.012346
tuples	tuples cls data	0.250000
to table in file node must already	format	0.012346
a simple	values	0.008547
the passed type is	dtype is	0.096774
the periodindex to the	core indexes period index	0.034483
smallest	categories	0.062500
init self from	core sparse sparse data frame init	0.500000
this getitem defers to	getitem key	0.333333
add the	panel add aggregate	0.500000
gets called	indexes index array wrap result	0.100000
normalized locales that do not throw an	util valid locales locales normalize	0.050000
the	series	0.020270
of label values for requested level	multi index get level values level	0.250000
helpful message about our	error tot_items block_shape axes e	0.333333
new type (if copy=true return a new copy)	categorical block astype dtype copy	1.000000
datetimeindexes	datetime index sub datelike dti	1.000000
object that can be used to iterate over	io html	0.012987
for categorical columns retain categorical information for	stata writer prepare categoricals data	0.166667
and return the block manager from	core sparse to manager sdf columns	0.052632
the array interface	core indexes interval index array result	0.125000
block manager from a dataframe	core sparse to manager sdf columns	0.052632
read csv	core data frame from csv cls	0.066667
block return result block from	core block	0.010870
types format	types slicer na_rep float_format decimal	0.200000
read sql	read sql sql con	1.000000
apply the given offset/observance to a	holiday apply rule	0.200000
clear group based selection used for methods needing	core group by reset group selection	1.000000
tree-like object that can be	parser	0.008000
array interface	categorical array	0.333333
categorical	core indexes categorical index	0.095238
capture stderr in	capture stderr	0.055556
apply we	core group by mixin apply func	0.050000
convert the	core	0.002653
expression as a	computation eval expr	0.083333
we are index sliceable then return	to index sliceable obj	0.083333
return a fixed frequency timedelta index	indexes timedelta range start end	0.083333
return the padded hexadecimal	core computation raw hex	0.333333
row	row	1.000000
info from	freqstr	0.111111
delimiter string starting at	rsplit	0.031250
pack object	io	0.003012
a ndarray of the	core index	0.111111
called after	period index array wrap result	0.050000
of value from	value arr key value	0.038462
lookup of value from 1-dimensional ndarray	index get value series key	0.250000
the	range index	0.043478
of value from 1-dimensional ndarray only use	core indexes period index get value series	0.071429
datetime time	indexes datetime	0.011494
downsample the cython	index resampler downsample	0.200000
datetimeindex from one time zone to another	indexes datetime index	0.007634
to iterate over	html	0.011765
the periodindex to the specified frequency freq	core indexes period index asfreq freq how	0.500000
additional handling as	index array wrap	0.033333
on type and coerce into matrices	arrays to mgr arrays arr_names index	0.250000
found in	mixin isin values	0.166667
intervalindex from a 1d array	from intervals cls data name copy	0.125000
running code that expects to raise or	util assert produces	0.071429
flattened values	index ravel order	0.037037
1-dimensional ndarray only	set value arr key	0.023810
to get lines 0) there are headers	io python parser get index name	0.166667
number of	multi	0.018182
return a list of the inferred types one	inferred type levels	0.166667
return the ftypes (indication of sparse/dense and dtype)	ndframe ftypes	0.055556
categorical adjusted for groupby	categorical index codes for groupby sort	0.333333
be a bool if we have only bool	is bool	0.166667
installed version of openpyxl is supported	compat is compat major_ver	0.111111
string-like array to convert object	convert string to object values	0.142857
class for delegating methods/properties	pandas delegate	0.166667
of value from 1-dimensional ndarray only use	core indexes datetime index get value series key	0.071429
needs additional handling as	result	0.016393
*this is an internal non-public method*	indexes index to embed keep_tz	0.500000
file node must	hdfstore	0.014925
from a row element	html frame parser parse	0.250000
return the data & release the memory	col take data	0.055556
are index sliceable then	core convert to index sliceable obj	0.083333
string in the series/index by	core str repeat	0.045455
ndarray only use this	indexes index	0.007353
the index	indexes datetime index	0.015267
getitem defers to the underlying array	ops mixin getitem	0.250000
skip_footer	skip_footer	1.000000
type is an actual dtype that	dtypes extension dtype is dtype cls dtype	0.111111
with times to	core indexes datetime index	0.007634
a tree-like object	html frame parser build	0.014706
if you	set	0.012195
an	core indexes index	0.007042
index return new dataframe	data frame reset	0.027778
insert	core block manager insert	1.000000
use this if you	index	0.002004
after a	wrap result	0.068182
of same	same	0.142857
to the new type	dtype copy	0.064516
a particular panel invoked by unicode df	panel unicode	0.166667
call a numpy function on a	call	0.071429
cached item item represents a	core ndframe iget item cache item	0.090909
value occupying requested label default to	sparse sparse series get label default	0.083333
reduction type operation	categorical reduce op	1.000000
returns the float values	formats float array formatter get result	0.055556
analogous to dataframe apply	sparse data frame apply func axis broadcast reduce	0.333333
ftypes (indication	core ndframe ftypes	0.055556
block manager from a dataframe of	core sparse to manager sdf	0.052632
a new multiindex from	core indexes multi index	0.013158
trim values at input threshold s	core ndframe clip lower upper axis	0.333333
the	formats styler	0.021739
return a tree-like object that	frame parser	0.012500
counts of the	counts f	0.041667
the values	shape values ndim	0.050000
the union of two index objects and	index union other	0.037037
for creating a subclass of styler with	styler	0.022222
from a string raise	from string cls string	0.250000
going to write	write obj	0.041667
cached item item represents a positional	core ndframe iget item cache item	0.090909
called after a	index array wrap	0.066667
make box plots from dataframegroupby data	groupby grouped subplots column fontsize	0.500000
of v should be inserted in a	ndarray searchsorted v	0.033333
draw histogram of the	hist frame data column	0.200000
the	frame parser build	0.014706
that can be used	io html	0.012987
a new unit if	datetime tzdtype new cls unit tz	0.055556
take which	core take nd	0.125000
terms for instances of pandasobject	core computation any pandas objects terms	0.250000
encode input values as an enumerated type	factorize values	0.111111
up styles to html	io formats styler	0.021277
data to	data	0.019417
select values at particular time of day	ndframe at time time	0.066667
convert tz-aware axis	core ndframe tz convert tz axis	0.200000
before	before	1.000000
lookup of value from 1-dimensional ndarray	indexes period index get value series	0.071429
series with multiindex	core series	0.008000
rows	rows	0.875000
a feather-format object from	io read feather	0.083333
are a series	core series	0.008000
view limits	locator autoscale	0.055556
'args' and 'kwargs' should be empty except	compat numpy validate groupby func name args kwargs	0.166667
correct day for each date in i	i roll	0.500000
to an openpyxl style object	openpyxl1writer convert to style cls	0.500000
between self analagoust to s-s	core diff arr	0.200000
file node must already exist and be table	io hdfstore append key value	0.016667
using	can use	1.000000
usage of my values parameters	usage deep	0.200000
fast lookup	index set	0.022727
dispatch to apply we are stripping all	apply func	0.027027
determine if	dtype n method	0.125000
of microseconds (>= 0 and less	core indexes timedelta index microseconds	0.066667
the object to	core ndframe to	0.040000
store object in hdfstore parameters	io hdfstore put key value format append	0.333333
shape of the values to be	core block shape values ndim shape	0.083333
multiindex compute the	core indexes multi	0.014493
wide panel	reshape wide	0.500000
as block	core block getitem block	0.250000
return an array repr of this	core indexes period index	0.034483
the name this allows simpler access to columns	ndframe setattr name value	0.166667
a bool if we have only bool	object block is bool	0.166667
bytes see	msgpack packb	0.025641
return a list of normalized locales	valid locales locales	0.200000
a boolean if we need a	index is	0.083333
perform the reduction type operation if we can	core index ops mixin reduce op name	0.083333
string-like	io convert string array data	0.038462
be applied on each value to	formats float array formatter value formatter float_format threshold	0.100000
read sql query or	read sql sql con index_col coerce_float	0.166667
the underlying array which by-definition	indexes datetime index ops mixin	0.029412
used when a	ndframe	0.005025
a slice of my values	core categorical block slice slicer	0.083333
of the (attr formatted_value)	indexes multi index format attrs	0.142857
might need to coerce	coerce freq	0.125000
get integer location for requested label parameters	indexes categorical index get loc key method	0.500000
rewrite the assignment operator for	core computation rewrite	0.125000
be	key value	0.011628
data to ndarray raises on scalar	indexes index coerce to ndarray cls	0.166667
index objects sortedness of	index	0.002004
ufunc needs additional handling	array wrap result context	0.029412
a decorator to	args decorator	0.111111
return the data & release the	col take data	0.055556
string-like that is object dtype and coerce	string array data	0.038462
the block manager from a dataframe of series	core sparse to manager sdf columns	0.052632
result block from	core block	0.010870
return the bool of a	ndframe bool	0.055556
find all occurrences of pattern or regular expression	findall arr pat flags	1.000000
return of an indexer even	indexes index get indexer for	0.250000
of the series	timedelta	0.022222
i am	block is	0.045455
the shape of the values to be	values ndim shape	0.083333
read csv file (discouraged	csv cls path header sep	0.066667
1-dimensional ndarray only use	indexes index	0.007353
only applicable	core series group by	0.142857
return the padded hexadecimal id of	computation raw hex id	0.166667
concatenation of an datetimelike array of arrays	core dtypes concat	0.100000
my dtype mapping whether number or name	io dtype for t	0.333333
to table in	key value format	0.016667
pandas objects along a particular axis	axis	0.011364
function multiple times in parallel	test parallel	0.142857
an implementation for the aggregators	mixin aggregate arg	0.166667
of value from 1-dimensional ndarray only	core indexes index set value arr key value	0.038462
last non-na/null value	core series last valid index	0.250000
value to format it	formatter value	0.250000
align a	align	0.111111
a tree-like object that	html frame parser	0.012658
**experimental**	custom	0.066667
a astypeable	astype dtype	0.166667
convert to our native types format slicing	to native types	0.250000
can be represented as uints	indexes uint64index assert safe casting cls	1.000000
number of bytes in the	core indexes multi index nbytes deep	0.052632
value from 1-dimensional ndarray only use	arr key value	0.038462
structure for accumulating data	list	0.034483
bool	ndframe bool	0.055556
return true if this is a	is in	0.076923
resample of	timedelta index resampler	0.066667
to read from a url	read	0.033333
convert tz-aware axis to target time	ndframe tz convert tz axis	0.200000
index for series columns for	core ndframe	0.005051
parameter for general index and	core indexes index validate	0.066667
get/create the info for this name	get info info name	0.333333
return my self as a sparse array	as sparse array	0.250000
convert tz-aware axis to target time	core ndframe tz convert tz axis level copy	0.200000
a and b	a b	0.166667
new unit if needed otherwise return	datetime tzdtype new cls unit tz	0.055556
record	data col set	1.000000
bytes in the underlying data	index nbytes deep	0.052632
table in file	io hdfstore append key value format	0.016667
feather-format	io read feather	0.083333
function is called via the 'numpy' library the	with	0.034483
dataset	core	0.001326
subplots	subplots	0.461538
apply we are stripping all of	core group by mixin apply func	0.050000
apply we are stripping all of the	group by mixin apply func	0.050000
return	indexes datetime	0.011494
of	indexes multi index	0.026316
applies a moving window of type window_type on	window apply window mean how	0.166667
provides a resample of	timedelta index	0.045455
op	bin op	0.125000
create a new unit if	new cls unit	0.055556
/ or columns using input function	axis copy inplace	0.055556
take the codes by	take nd	0.047619
convert to our native types format	datetime block to native types	0.250000
is called upon unpickling	indexes new interval index cls d	0.333333
to connect	can connect	0.111111
take boolean mask of index to	index b	0.041667
slice or boolean mask for requested label or	key method	0.250000
labels	labels labels level	0.250000
ndarray like into	io json parser	0.142857
summarized representation	datetime index ops mixin summary name	0.333333
location slice or boolean mask for requested label	loc key method	0.142857
this is similar to	core reshape	0.047619
:class	io	0.003012
return a version to operate on	block mixin try operate values	0.333333
optional positional and	util optional args	0.066667
the time part of	index time	0.111111
from ndarray or list of	data index	0.076923
the full scope for use with passing to	core computation scope full scope	0.055556
datetime	indexes datetime	0.022989
is not supported for panel objects and	core panel to	0.027027
have an object dtype try	core dtypes maybe	0.166667
to specified frequency	core ndframe asfreq freq	0.250000
number	indexes multi index	0.013158
wrap comparison operations to convert timedelta-like to	core indexes td index cmp opname	0.055556
string-like that	io convert string array data encoding	0.038462
is valid for scalar	can do	0.250000
1-dimensional ndarray only use this	core indexes	0.004762
radviz	plotting radviz	0.200000
value from 1-dimensional ndarray only use this if	core indexes datetime index get value series	0.071429
reindex for all	ndframe reindex	0.125000
a sql	sql	0.153846
masked rec array and create the	masked rec array to	0.090909
load msgpack pandas object	io read msgpack path_or_buf encoding iterator	0.200000
read csv file (discouraged please use	data frame from csv cls path header	0.066667
only use	core	0.001326
get	get dtype	0.500000
convert tz-aware datetimeindex from one	datetime index tz convert tz	0.166667
1-dimensional ndarray only use this if you	core indexes index set	0.023810
to apply we are stripping all	mixin apply func name	0.050000
attributes e g	attributes	0.115385
into a list of lists	io html frame parser	0.012195
check whether or not the	io validate	0.031250
sparse	sparse	0.289474
nat which has the	mixin nat new	0.050000
we have a full length	is full	0.500000
return a new index of the values	core indexes index putmask	0.111111
convert to our native types	datetime block to native types slicer na_rep	0.250000
return whether we have any extra scope	core computation scope has resolvers	0.500000
(attr formatted_value)	index ops mixin format attrs	0.142857
a subclass of styler with a	styler	0.022222
python datetime	indexes datetime index	0.007634
sets index names to 'index'	set default names	0.083333
of a series excluding	series group	0.030303
block return result block s from the result	block where other cond align raise_on_error	0.066667
must already exist and	hdfstore	0.014925
to	to index other	0.333333
needs additional	index array	0.033333
using the interpolate machinery	core block interpolate with fill method	0.200000
to determine	dtype n method	0.125000
validate that the where	validate where	1.000000
return all tables from the parsed dom	io html frame parser parse tables doc match	1.000000
for this termvalue	v	0.026316
multiindex defaults to	core indexes multi index	0.013158
fast lookup	value arr key	0.023810
tree-like	io html frame	0.012987
we are index sliceable then	to index sliceable obj key	0.083333
create and setup my	col set	0.333333
at the given quantile a la numpy percentile	quantile q interpolation	0.250000
an	ndframe to	0.043478
call encode before writing to file for python	io stata writer write to_write	0.083333
alert a user about a malformed	io python parser alert malformed msg	0.500000
x not in y if possible otherwise	not in x y	0.066667
the required package	package	0.058824
cast values	cast types values	0.500000
wrap comparison operations to convert datetime-like	indexes period index cmp opname nat_result	0.066667
target	reindexer target	0.200000
we are index sliceable then	index sliceable obj	0.083333
packed bytes see :class packer	packb	0.022727
levels attribute is 1 or	is multi index	0.142857
series containing only true/non-nan values	remove na series	0.166667
return a boolean if the passed type is	dtype is	0.032258
lookup of value from 1-dimensional ndarray only use	core indexes datetime index get value	0.071429
value from 1-dimensional ndarray only use	indexes index set value arr key value	0.038462
in the series extract groups from	str extract frame arr	0.047619
snap time stamps to nearest occurring	core indexes datetime index snap	1.000000
slice of myself	core categorical slice slicer	0.111111
series of columns	core ndframe	0.005051
intervalindex from a 1d array	index from intervals	0.125000
a singular 'name' parameter for general index and	indexes index	0.007353
when non-unique	target	0.083333
index objects sortedness of	indexes range index	0.021277
hexadecimal representation used to tag	computation replacer x	0.125000
the	index	0.010020
compute median of groups excluding missing values	group by median	1.000000
locs	locs	1.000000
list of tuples of the (attr formatted_value)	core indexes index format attrs	0.142857
my	col	0.037037
return the counts of ftypes in this object	get ftype counts	0.250000
pickle serialize object to input file path parameters	io to pickle obj path compression	1.000000
against	cls	0.050847
read sql query into a dataframe	io read sql query sql con index_col coerce_float	0.333333
color object	color	0.125000
to shift without copying data the	slice shift periods	0.083333
asof merge this is	reshape merge asof	0.071429
'on'	reshape as of merge	1.000000
compute locations of to_match into	core match to_match	0.333333
construct this type from	interval dtype construct from string cls	0.166667
a string or np dtype to	to dtype dtype	0.083333
we need to coerce	index coerce	0.125000
return the slice dictionary for these axes	panel extract axes for slice axes	0.333333
after a	array	0.041667
as a	as	0.066667
array of whether each index value is found	datetime index ops mixin isin	0.083333
points for level 0 assuming	indexes multi index bounds	0.166667
return my dtype	dtype	0.010989
categorical by category value returning a new	values inplace ascending na_position	0.071429
update index	indexes timedelta index maybe update	1.000000
multiindex compute the	indexes multi index	0.013158
to html	formats	0.031250
true if the key is in the info	ndframe contains key	0.333333
is an actual dtype that we	is dtype cls dtype	0.086957
this function is called via the 'numpy' library	with convert convert args	0.055556
manager for temporarily setting a locale	util set locale new_locale lc_var	0.250000
handle 2-d slices equiv to iterating	panel apply 2d func	0.200000
makes sure that time	core ensure like indices time	0.125000
of value from 1-dimensional ndarray only use this	core indexes index set value arr key value	0.038462
from a masked rec array and	core masked rec array to	0.090909
common sparseindex corresponding to the locations	homogenize series_dict	0.047619
set new labels on multiindex	indexes multi index set labels labels	0.333333
given a 1d array return an array	array vals	0.083333
our	set	0.012195
values at particular time of day	core ndframe at time time asof	0.066667
a slice of	categorical slice slicer	0.111111
from object	ndframe	0.005025
add in the datetimelike methods (as we	index ops mixin add datetimelike methods	0.333333
two indices overlap add suffixes	items overlap	0.062500
timedelta-like to	core indexes td index	0.055556
be used to iterate over	io	0.003012
col_order	col_order	1.000000
with level j do not change	j	0.034483
other to the	other	0.013514
to parse a	convert data name	0.200000
pairwise correlation of columns excluding na/null values parameters	core data frame corr method	0.111111
value from 1-dimensional	index set value arr key value	0.038462
manipulation result has one lower dimension s as	core ndframe constructor sliced	1.000000
produce 'pivot' table based on 3 columns of	core reshape slow pivot index columns values	0.500000
the vectorized membership of x in	in x	0.166667
only use	index set value arr	0.023810
params args to dbapi2	params	0.058824
input	axis copy	0.333333
our axes compute the expected	expected	0.083333
type is an actual dtype that we	core dtypes period dtype is dtype cls dtype	0.142857
categorical	core indexes categorical	0.285714
se the caption on a styler	io formats styler set caption caption	0.333333
return the	indexes multi	0.014493
to compare numeric	is numeric v string	0.333333
comparison operations to convert timedelta-like to timedelta64	td index	0.055556
used when a manipulation result has the	ndframe constructor	0.055556
used to iterate over the	parser	0.008000
take a string-like	string array	0.038462
a list replace	replace list	0.500000
and returns axes	axes	0.043478
multiindex at	core indexes multi	0.014493
monday instead	monday dt	1.000000
index value is found	index ops mixin isin values	0.083333
from maps[0] raise	compat chain map	0.032258
parallel	test parallel	0.142857
shift categorical by desired number of periods	categorical shift periods	1.000000
used when a manipulation result has	ndframe constructor	0.055556
datetimeindex with times to midnight	core	0.001326
as a dataframe	data values	0.062500
number of microseconds (>= 0 and	core indexes timedelta index microseconds	0.066667
validates that we	core	0.001326
values need	array	0.013889
json lists to line delimited json	json convert to line delimits s	0.200000
midnight length is	indexes datetime index	0.007634
base frequency alias e g '5d' -> 'd'	tseries get base alias freqstr	1.000000
add	datetime index ops mixin add	0.333333
try to deal with nat-like arg	arg	0.018868
make a copy of the sparsearray only	copy deep	0.142857
metadata for this columns	index col read metadata	0.250000
of cells	formatter subset	0.500000
check length against max_rows	data frame repr fits vertical	1.000000
a new multiindex from the	core indexes multi	0.014493
from 1-dimensional	core	0.001326
read csv file	core series from csv cls path sep parse_dates	0.066667
inplace return a new block (of	block setitem indexer	0.066667
to table in file node must already exist	hdfstore append key	0.016667
dispatch to apply we are stripping all of	group by mixin apply func	0.050000
add	core computation add	0.333333
nat which has the same length as the	mixin nat new	0.050000
sanitize input data	sanitize array data index	0.250000
perform __getitem__-like return result as block	block getitem block slicer new_mgr_locs	1.000000
the 'info axis' see indexing for more	keys	0.032258
and 'kwargs'	method args kwargs	0.142857
to handle na filling of take	multi index assert take fillable values indices allow_fill	0.250000
temporarily setting a timezone	util set timezone tz	0.142857
checks whether the 'name' parameter	io validate	0.031250
property synonym for as_blocks()	core ndframe blocks	0.166667
the values to	block shape values ndim	0.050000
string or np dtype to a pandas or	to dtype dtype	0.083333
shift the block by periods	shift periods axis mgr	1.000000
after	core	0.003979
is an	core indexes categorical index is dtype	0.500000
if	safe	0.285714
create a spreadsheet-style pivot table as a dataframe	core reshape pivot table data values	0.166667
kwargs suitable for initializing or	kwargs	0.022222
style_dict to an openpyxl style object	openpyxl1writer convert to style cls style_dict	0.166667
concatenate to_concat which has the same	same dtype to_concat name	1.000000
a tabular environment table you can splice	latex buf columns col_space header	0.100000
csv file (discouraged please use	csv cls path sep parse_dates	0.066667
to coerce a code to	coerce freq code	0.076923
support fully deleting the	io	0.003012
unique elements of arr1	util equal contents arr1	0.066667
necessary for making this object picklable	core categorical setstate state	0.333333
of v should	v	0.026316
reduction type operation if we	index ops mixin reduce op name axis skipna	0.083333
of interval objects parameters	indexes interval	0.062500
called upon unpickling	index cls d	0.083333
first non-na/null value	core data frame first valid index	0.250000
return the cached item item represents a positional	ndframe iget item cache item	0.090909
the mode s	core series mode	0.083333
scipy sparse coo_matrix from a sparseseries with multiindex	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
a string format	format datetime64	0.250000
are going to write this as	write obj	0.041667
correct pandassql subclass based on	io pandas sql builder con flavor schema meta	0.055556
to specified frequency	asfreq freq method	0.250000
a function to	func	0.023810
to table in file node must already	key value format	0.016667
a tree-like object that can be	io	0.003012
of type	is type	0.125000
representing a frequency guess generated by infer_freq	ops mixin inferred freq	0.250000
read csv file	csv cls	0.066667
matches the expected exception and expected	contextmanager exception matches exc_type exc_value trace_back	0.333333
value from 1-dimensional ndarray	indexes period index get value series	0.071429
string raise	string cls string	0.125000
sparsedataframe as a series object	sparse sparse data frame	0.058824
the exception raised matches the expected exception and	util assert raises contextmanager exception matches	0.142857
a masked rec array and create the manager	masked rec array to mgr data index	0.500000
rules	rules	1.000000
node must already exist	append key value format	0.016667
searchsorted	searchsorted	1.000000
validate that an positional indexer	ndframe indexer has valid positional setitem indexer indexer	0.052632
validate that an positional	ndframe indexer has valid positional	0.250000
split data into blocks & return conformed data	core window create blocks	1.000000
function is called via the 'numpy' library	validate take with convert convert	0.055556
memory usage of my values parameters	indexes range index memory usage deep	0.200000
read sql query	read sql sql con index_col coerce_float	0.166667
dictionary for the	ndframe construct axes dict from	0.250000
constructs ndframe from group with provided name parameters	group by get group name obj	1.000000
elements of v should be inserted in a	core indexes frozen ndarray searchsorted v	0.033333
return my self as a	core sparse sparse series as	0.125000
with business day as the default frequency	end periods freq	0.062500
the 'usecols' parameter is a	io evaluate usecols usecols names	0.083333
needs additional	wrap	0.019231
numeric operations to	numeric operations cls	0.090909
sparse/dense and dtype) in this	core	0.001326
read csv file (discouraged	from csv cls path sep parse_dates	0.066667
the metadata for	metadata	0.100000
return a	a	0.055556
unstack a k a pivot series with	core series unstack level fill_value	0.333333
o and	o	0.043478
more this is index for series columns for	core ndframe	0.005051
the boolean criterion specified by	core ndframe group by filter	0.200000
numeric operations to the groupby	numeric operations cls	0.090909
extended euclidean algorithms to solve bezout's identity	indexes range index extended gcd a b	1.000000
is called upon unpickling	interval index cls d	0.333333
sets the view limits to	series date locator autoscale	0.055556
about a malformed row	malformed msg row_num	0.100000
downsample the cython defined	core period index resampler downsample how	0.200000
create an	core ndframe create indexer cls name	0.500000
guess the datetime format of a given datetime	guess datetime format dt_str	1.000000
the periodindex to	core indexes period	0.032258
float key and are	key	0.005051
the	indexes range	0.125000
exponential weighted sample covariance	core ewm cov other pairwise bias	1.000000
you	set	0.012195
ndarray argsort argsorts	series argsort	0.083333
internally consolidate chunks	sparse sparse list consolidate inplace	1.000000
csv file (discouraged	series from csv cls path sep	0.066667
:class packer	io msgpack	0.025000
uint64 ndarray of my hashed	core indexes multi index hashed	0.166667
datetime index with custombusinessday as the	core indexes cdate range start end periods	0.083333
sparsifying is not supported for panel objects	core panel to sparse	0.037037
this is	core	0.001326
of nanoseconds (>= 0 and less than	indexes timedelta index nanoseconds	0.066667
node must	key value	0.011628
last day of the month	month	0.038462
dataframe to a tabular environment table you	data frame to latex buf columns col_space header	0.111111
argsort argsorts the value omitting na/null values	series argsort axis kind order	0.500000
call a numpy function on	call	0.071429
conserve rangeindex type for scalar	indexes range index getitem key	0.166667
as	array	0.013889
initializes or resets _id attribute	indexes index reset identity	0.250000
for header rows in multiindex	io pop header	0.100000
full scope for use	scope full scope	0.055556
to construct this type from a	dtypes interval dtype construct from string	0.166667
additional	indexes period index array wrap result	0.050000
provides	datetime	0.006711
interpolate	resampler interpolate method axis limit	0.166667
value from 1-dimensional ndarray	indexes period index get value	0.071429
the vectorized membership of x	x	0.086957
of casting	numeric index assert safe casting	0.125000
csv file (discouraged please	csv cls path header sep	0.066667
applies	series	0.006757
forward to the array	core sparse sparse series get val at loc	0.250000
to the	io to	0.200000
value the we	value	0.005155
take boolean mask of index to	index	0.002004
set my pandas type	io fixed set object info	0.200000
numpy / pandas type	table type	0.055556
1-dimensional ndarray only use this if you	core indexes	0.004762
a a left and right	left right	0.047619
memory usage of my values	core index ops mixin memory usage deep	0.200000
where condition cond on	core computation where cond	0.111111
of whether each index value	core indexes datetime index ops	0.034483
of dtypes if	dtypes	0.015873
a	core	0.013263
ndarray filled with nat which has	mixin nat new box	0.050000
for construction of strings to numpy	compat numpy	0.166667
to cast the array/value to a datetimelike	maybe cast to datetime value	0.500000
return a fixed frequency	range start end	0.133333
if we are a categorical	core dtypes is categorical	0.500000
frequency datetime index with custombusinessday as the default	indexes cdate range start	0.083333
a ndarray	core index	0.111111
after a	core indexes index array wrap result	0.100000
update index attributes e g freq depending	indexes index maybe update attributes	0.200000
element index pairs for each element in	map indices py arr	0.090909
columns	core ndframe	0.010101
concatenation of an datetimelike array of arrays	concat datetime	0.125000
additional handling	index array wrap result	0.033333
object with labels on given axis	axis	0.011364
and return the block manager from	core sparse to manager sdf columns index	0.052632
return an object with matching indices to	core ndframe reindex like other method copy limit	0.111111
bool if we have only bool values	object block is bool	0.166667
call encode before writing	io stata writer write to_write	0.083333
a list of tuples of the (attr formatted_value)	indexes datetime index ops mixin format attrs	0.142857
subclass of styler with a	formats styler	0.021739
return a tree-like object that can	html	0.011765
we	indexes	0.004651
of styler with	io formats styler	0.021277
to apply	core group by mixin apply	0.050000
add the operations to the cls evaluate the	core ndframe add numeric operations cls	0.500000
raise_on_error	raise_on_error	0.625000
columns using input	mapper axis copy inplace	0.055556
new multiindex	indexes multi	0.028986
of the maximum values along an axis	indexes datetime index ops mixin argmax axis	0.250000
is index for series columns	core	0.001326
the td elements from a	html frame parser parse td obj	0.083333
swapaxes	swapaxes	1.000000
indexer and return them as	indexer	0.018349
into a pandas only	pandas	0.035714
concise summary of a dataframe	core data frame info verbose buf max_cols memory_usage	1.000000
header	header	0.400000
only use this	index set value arr	0.023810
and 'kwargs' should be empty except	groupby func name args kwargs	0.166667
only use	index set value arr key	0.023810
provides a resample of a	timedelta index	0.045455
check to see if a url has	io is url url	0.047619
downsample	downsample	0.466667
it to timedelta	timedelta index	0.045455
categorical by category value returning a new	ascending na_position	0.071429
the 'numpy' library	take with	0.055556
by definition have do not have a tz	formats datetime64formatter format strings	0.090909
for groupby	group by	0.016129
in specified	set item key	0.500000
op string for	bin op generate	0.066667
if 'series argmin' is called via	skipna skipna	0.100000
coerce the	core dtypes coerce indexer	0.500000
nrows ncols - number	make custom dataframe nrows ncols	0.250000
making this object picklable	timedelta index setstate state	0.333333
apply the	tseries semi month offset apply index	0.500000
construct and returns axes if supplied in args/kwargs	construct axes from arguments args kwargs require_all	1.000000
array of python datetime date objects	datetime index	0.007042
compute count of group excluding missing values	data frame group by count	0.500000
sparse values need	core sparse sparse array	0.043478
encode input values as	values	0.008547
draw a	frame alpha figsize	0.500000
sets names on levels warning	set names names level validate	0.200000
list of columns as lists of strings	str columns	0.083333
my self as a	as	0.066667
already exist and be	key	0.005051
a method to class	method cls	0.076923
install	core coerce method converter	0.200000
an ndarray for our input	sparse sanitize values arr	0.200000
compute standard deviation of groups	by std ddof	0.166667
and right	right exact	0.500000
object that can be used to	frame parser	0.012500
of value from 1-dimensional ndarray only	indexes categorical index get value series	0.100000
blocks collect	f axis consolidate transposed	0.062500
a list of the inferred types one for	index inferred type levels	0.111111
convert a numpy / pandas type to its	type	0.024390
we need to coerce a	indexes period index coerce	0.125000
needs additional handling	period	0.016667
_upsample kwargs and	apply f	0.166667
gets	core categorical get	0.200000
the array interface	index array dtype	0.125000
hour minute second millisecond or microsecond	indexes datetime index ops mixin resolution	0.125000
operations to convert timedelta-like to timedelta64	core indexes td index	0.055556
exist and be table	hdfstore	0.014925
parms	parms	1.000000
sql statement that create a table reflecting the	sqlite table create table setup	0.066667
csv file (discouraged please use	from csv	0.066667
compute	columns	0.017857
underlying array which by-definition	index ops mixin	0.019231
for an ordered multiindex compute the slice	indexes multi index slice	0.250000
the number of bytes in	indexes range index nbytes	0.052632
running code that expects	util assert produces	0.071429
use this	index set value arr	0.023810
in the series/index by indicated number	core str	0.011364
new unit if needed otherwise	datetime tzdtype new cls unit tz	0.055556
note this is *not* the same	is other	0.055556
ns	ns	1.000000
apply the function to	apply func	0.027027
return a summarized representation	ops mixin summary name	0.333333
datetime index with business day as the default	indexes bdate	0.050000
check value is valid for scalar op	core indexes index assert can do op value	1.000000
determine if each string matches a	core str match	0.166667
bit of a hack to accelerate unioning a	union many others	0.040000
a slice of my	slice slicer	0.070175
specialized intersection for datetimeindex objects may be much	datetime index intersection other	0.142857
exception that is thrown in pd read_csv	error	0.028571
compute standard deviation of groups excluding missing values	core group by std ddof	0.166667
class implementing the plot attribute for groupby	plot	0.043478
return if we are a categorical	dtypes is categorical	0.500000
return a	formats get	0.090909
op result to have	result name	0.500000
try to	selection mixin try	0.250000
the node with the key or	io hdfstore get node key	0.083333
round the fractional part of the	core reshape round frac x precision	0.200000
or boolean mask for requested label or	method	0.033333
the float values converted into strings	float array formatter get	0.055556
stacked format as dataframe	to frame	0.125000
store object in hdfstore parameters	hdfstore put key value format	0.333333
block	block block_items existing_col min_itemsize	0.500000
can	core indexes index	0.007042
append to table in file node must	io hdfstore append key value format append	0.125000
feather-format object	io read feather	0.083333
each index value is	datetime index ops	0.034483
binary feather-format for dataframes	data frame to feather fname	0.083333
method to class	method cls	0.076923
backward	rollback dt	0.125000
regular or 'level_x'	io json	0.062500
over	html	0.011765
block in-place with new	core object block set locs values check	0.125000
a dataframe to a	core data frame	0.005917
a fixed frequency datetime index	indexes bdate range start end	0.083333
interpolate values according to different methods	core resampler interpolate	0.166667
sets the view limits	locator autoscale	0.055556
can be used to iterate over	html	0.011765
microseconds (>= 0 and less than 1	core indexes timedelta index microseconds	0.066667
others	others	1.000000
writing stata	core data frame to stata	0.200000
have a valid ordered	cls ordered	0.058824
validates that we have a	categorical validate ordered	0.055556
convert sql	convert params sql	0.500000
and plural 'names'	name names deep	0.125000
sql and params args	sql params	0.200000
validates that we have	ordered	0.017857
left and right dataframe are equal	util assert frame equal left right	0.333333
if we opened it	io to hdf path_or_buf key value	0.166667
get lines 0) there are headers on	io python parser get index name columns	0.166667
return a slice	categorical block slice slicer	0.083333
we by definition have do	formats datetime64formatter format strings	0.090909
return sorted copy	sort values return_indexer ascending	0.500000
to panel	panel update	0.500000
to run	num_threads kwargs_list	0.050000
to	html frame parser build	0.014706
convert to our native types format	to native types slicer na_rep quoting	0.250000
scipy sparse coo_matrix from a sparseseries	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
remove	chain map	0.034483
an ordered multiindex compute the slice	core indexes multi index slice	0.250000
is raised and that	util assert raises regex _exception _regexp _callable	0.200000
create a table reflecting the structure of	io sqlite table create table setup	0.066667
is called upon unpickling rather than	indexes new datetime index cls d	0.111111
a	series	0.006757
used	parser build	0.014706
of styler with	formats styler	0.021739
additional	core indexes period index array wrap result	0.050000
block manager from a dataframe of series	to manager sdf columns index	0.052632
write this	write obj	0.041667
locations for input	locs start end step kind	0.250000
never a	core categorical	0.013889
(header new_data) for header rows in	io pop header name row index_col	0.200000
beginning of period	beg	0.090909
of the index	datetime index	0.014085
the maximum by	max subset color axis	0.166667
ndarray only use this	indexes index set	0.023810
along axis=0	ax0 slice_or_indexer fill_tuple	1.000000
return boolean if values in the object	ops mixin is	0.100000
union of two multiindex objects sorting	multi index union other	0.066667
the given quantile a	quantile	0.058824
casting data from some accepted dtype to	casting cls data	0.047619
try to convert to dense	core sparse maybe to dense	1.000000
and return a basegrouper which is an internal	get	0.007143
a scipy sparse coo_matrix to a	core sparse coo to sparse series a dense_index	0.166667
columns to be read as	columns	0.017857
sets the view limits	time series date locator autoscale	0.055556
blocks collect and create a new block manager	core block manager reduction f axis consolidate transposed	1.000000
rangeindex	index	0.002004
the index and its underlying data	index	0.002004
input values as an enumerated type or	core factorize values sort order	0.111111
convert_timedeltas	convert_timedeltas	1.000000
a variable name in a possibly local context	key is_local	0.166667
read csv file (discouraged please use :func pandas	series from csv cls path sep	0.066667
the values to be at least	core block shape values ndim	0.050000
this is defined as a copy with the	multi index view cls	0.047619
index for series columns for dataframe	core	0.001326
csv file (discouraged please	core data frame from csv cls path header	0.066667
class implementing the	group	0.027027
convert an	convert	0.032258
write out the binary feather-format for	data frame to feather fname	0.083333
get new sparsedataframe	sparse sparse data frame	0.058824
of value from 1-dimensional ndarray	core indexes period index get value	0.071429
style_dict to an xlsxwriter format	io xlsx writer convert to style style_dict	0.166667
datetime index with custombusinessday as the default	core indexes cdate range start	0.083333
implementation for the aggregators	selection mixin aggregate arg	0.166667
check that left and right dataframe are equal	assert frame equal left right	0.333333
series columns for dataframe and major_axis	core	0.001326
datetime64 block with a tz attribute	datetime	0.006711
in the series extract groups from	extract frame	0.047619
values	core block shape values ndim	0.050000
called upon unpickling rather than the default which	index cls d	0.083333
value for	value	0.010309
column and index parameters	sparse data frame set value index col	0.500000
for header rows	io pop header name	0.100000
of bytes in the underlying data	nbytes	0.046512
file	io hdfstore append key	0.016667
array interface return my	index array dtype	0.125000
nanoseconds (>= 0 and less than 1	indexes timedelta index nanoseconds	0.066667
produces a datetimeindex	core indexes datetime	0.011494
validates that we	core categorical validate	0.055556
create a new unit if needed otherwise return	core dtypes datetime tzdtype new cls unit tz	0.055556
internal method to handle na filling of take	assert take fillable values indices allow_fill	0.250000
index names to 'index' for	default names data	0.083333
setup our binners	core resampler set binner	0.333333
for this columns	io index col read	0.250000
interpolate values according to different methods	interpolate method axis limit inplace	0.166667
required package	package pkg_name min_version max_version	0.083333
method to handle na filling of take	assert take fillable	0.250000
return an internal format currently just	core block internal values dtype	0.111111
csv file (discouraged please use	csv cls path header	0.066667
return a version to operate on as	core block try operate values	0.125000
need to coerce a scalar to	coerce scalar to	0.071429
our native types format slicing	native types slicer na_rep date_format	0.200000
mixed	mixed	1.000000
a custom	custom	0.066667
with closed	closed	0.111111
values in the sparseseries	core sparse sparse series	0.125000
"pivot" table) based on column	frame pivot index columns	0.111111
if we are a categorical	dtypes is categorical	0.500000
on 3 columns of this dataframe	columns values	0.037037
the minimum value of	ops mixin min	0.111111
shift the time index using the index's frequency	core ndframe tshift periods freq	0.066667
manager	manager	0.411765
to midnight length is unaltered	normalize	0.076923
to end	date offset end	0.500000
internal method to handle na filling of take	indexes index assert take fillable values indices allow_fill	0.250000
argsort argsorts the value omitting na/null values	core series argsort axis kind order	0.500000
with times to midnight length is unaltered	core indexes datetime index normalize	0.125000
swap levels i and j in a multiindex	core series swaplevel i j copy	0.333333
of type t or tuple of	computation is type t	0.083333
the block manager from a	core sparse to manager sdf	0.052632
evaluate the block return	eval func other raise_on_error	0.200000
left and right index are equal	assert index equal left right exact	0.333333
among	types	0.034483
se the caption on a styler	styler set caption caption	0.333333
get my plane axes indexes these are already	panel get plane axes	1.000000
fast lookup of	value arr	0.023810
of the values	axis mgr	0.200000
value	data frame get value	1.000000
raise a helpful message about our construction	core construction error tot_items block_shape axes e	0.333333
the date belongs to a leap year	leap year	0.142857
fast transform path for	group by transform fast result	0.333333
don't care	rolling	0.100000
specialized shift which	ops mixin shift n	0.250000
unicode normal form for the strings	string methods normalize form	0.066667
an expression in python	core computation	0.047619
return my self as a	sparse sparse series as	0.125000
internal	core	0.001326
multiindex	multi index sortlevel	0.166667
the float values converted into strings using	formats float array formatter get result	0.055556
float values	float array formatter get result	0.055556
already exist and	io hdfstore append key value format	0.016667
equivalent to shift without copying data the shifted	slice shift periods	0.083333
an indexer like _name in	cls name indexer	0.083333
csv	core series from csv	0.066667
'series argmin' is	skipna skipna args	0.100000
swap level i with level	core indexes multi index swaplevel i	0.333333
my hashed	core indexes multi index hashed	0.166667
ndarray or list of	index columns	0.028571
new manager with	manager	0.058824
ndarray only use this	set value arr	0.023810
the decimal points if need	io	0.003012
never a	categorical block is	0.100000
ordered multiindex compute the	core indexes multi index	0.013158
number of bytes in the	index nbytes deep	0.052632
given a date in xport format	io sas parse	0.066667
to create the grouper indexers	grouper obj	0.142857
like to compare numeric	dtypes is numeric v string like	0.333333
fast lookup of value from 1-dimensional ndarray only	core indexes index set value arr key value	0.038462
data to ndarray raises on scalar data converts	index coerce to ndarray cls data	0.166667
subject string in the series extract groups from	core str extract arr	0.066667
of	timedelta index resampler	0.066667
for writing stata binary	frame to stata fname	0.200000
via the 'numpy' library the third	compat numpy validate take with convert convert args	0.055556
for an ordered multiindex compute	indexes multi	0.014493
values	values values	0.416667
rewrite the assignment operator for	computation rewrite assign	0.125000
table in file node must already	io hdfstore append key value format	0.016667
to construct this type from a	categorical dtype construct from	0.166667
scatter plot from two dataframe	plotting scatter plot data	0.125000
get my plane axes indexes these are already	get plane axes index axis	1.000000
shift the block by periods	sparse block shift periods axis mgr	1.000000
my self as a sparse	sparse sparse series as sparse	0.250000
the month and day_of_month	semi month	0.166667
the series extract groups from the first	extract frame	0.047619
ndarray of the	core index	0.111111
python source	source	0.111111
iter1 iter2 iterables that produce	assert copy iter1 iter2	0.166667
can be used to iterate over the	io html frame parser build	0.014706
add numeric operations to the groupby generically	add numeric operations cls	0.166667
be used to	html frame parser build	0.014706
of sparse/dense and	core	0.001326
sub-classes to	gotitem key ndim subset	0.333333
via the 'numpy' library	compat numpy validate take with convert convert	0.055556
ftype	ftype	0.384615
in file node	io	0.003012
have a	core categorical validate	0.055556
day hour minute second millisecond or microsecond	datetime index ops mixin resolution	0.125000
data the shifted data	ndframe slice	0.125000
length	length	0.888889
read csv file (discouraged please use :func pandas	core data frame from csv cls	0.066667
return a fixed frequency datetime index	indexes bdate range start	0.083333
if label	label	0.057143
array object has a	core dtypes	0.018519
the header	html frame parser parse thead	0.111111
via the 'numpy' library the	compat numpy validate take with convert convert	0.055556
a single element pandasobject	core ndframe	0.005051
a simple cross-tabulation	reshape crosstab index columns values	0.066667
left and right	left right exact	0.333333
each index	index	0.002004
a version to operate on as the input	block try operate values	0.125000
the series extract groups from the	core str extract frame arr	0.047619
date belongs to a leap year	core indexes period index is leap year	0.142857
read csv file (discouraged please	csv cls path	0.066667
moving	window	0.071429
return slice of	core	0.002653
numexpr condition and filter	expr evaluate	0.200000
panel to a specified number	core panel	0.019231
snap	snap	1.000000
the scope	computation scope	0.166667
to cast to the specified dtype	dtype	0.010989
and return the op string for this termvalue	bin op generate v	0.250000
if	core series	0.008000
determine if each string matches	match arr	0.166667
hack to accelerate unioning a collection	datetime index union many others	0.040000
its corresponding json_table	io json as json table	0.333333
new multiindex	core indexes multi index	0.026316
each string a la re split	split	0.100000
where condition cond on	computation where cond	0.111111
float	formats float array formatter get	0.055556
forward to	core sparse sparse series get val at loc	0.250000
localize tz-naive timeseries	tz localize	0.333333
rows from self f skipping as specified	io fixed width reader get rows n skiprows	0.166667
read from a	read obj	0.058824
of type window_type on the data	mean how	0.166667
construct this type from	dtype construct from string cls	0.166667
left-join except	left right on left_on	0.058824
called	core indexes period index	0.034483
the info for this	get info info	0.333333
attempt to construct this type from a	interval dtype construct from string	0.166667
to set the	core series set	0.076923
datetime time the	datetime	0.006711
validate if we can perform a	indexes index validate for	0.333333
the values to be at	shape values ndim	0.050000
fast	core indexes index set value	0.023810
tree-like	io html	0.012987
maps[0]	chain	0.062500
1 0 number format	number format cls	0.333333
that we have a valid ordered parameter	cls ordered	0.058824
downsample the cython defined	downsample	0.133333
a single block and are	core block manager	0.022727
and return the op string for this	core computation bin op generate	0.066667
intersection of two index objects sortedness of the	range index intersection other	0.083333
dict of array-like	dict cls	0.166667
values between particular times of	ndframe between	0.100000
and agrees	util ensure clean filename return_filelike	0.200000
set our object	io generic fixed set	1.000000
where condition cond on a and b	computation where cond a b raise_on_error	0.500000
to apply we are stripping all	apply func	0.027027
number of	indexes	0.009302
and string-like array to convert object	core dtypes maybe convert string to object values	0.142857
optional positional and keyword	optional	0.050000
for running code that expects to raise or	util assert produces warning	0.071429
maps[0] raise	chain map	0.034483
fast lookup of value from 1-dimensional	arr key value	0.038462
needs additional handling as	indexes period index array wrap result	0.050000
copy of the	copy	0.025641
the default frequency	freq	0.048387
with nat which has the same length as	mixin nat new box	0.050000
a curve with holidays between start_date	tseries abstract holiday calendar holidays start end return_name	0.066667
checks if key is	key	0.005051
microseconds (>= 0 and	core indexes timedelta index microseconds	0.066667
inteface datetimelike	datetime	0.006711
in the series extract groups from	str extract frame	0.047619
codes	codes	0.833333
of datetime	indexes datetime	0.011494
packed object return an iterator	packed object_hook	0.200000
the 'numpy' library	numpy validate take with convert convert args	0.055556
new block (of	block setitem indexer	0.066667
ndarray of the flattened values of	index ravel order	0.037037
handle na filling of take	index assert take fillable values indices	0.250000
casting	safe casting	0.125000
sets the view limits to the	time series date locator autoscale	0.055556
that we have a valid ordered	core categorical validate ordered cls ordered	0.058824
window of type window_type and size window	stats rolling window arg window win_type min_periods	0.100000
binary	fname	0.142857
a func call with any defaults	util make signature func	0.250000
and return the block manager from a	to manager sdf columns index	0.052632
group return result as series or by	by axis level	0.045455
indexed column	col is indexed	1.000000
array of timestamps	asof locs	1.000000
add the operations to the cls evaluate	add aggregate operations cls	0.500000
stacked format dataframe	core data frame to	0.037037
return an item pair	map popitem	0.055556
that do not throw	util	0.062500
needs additional handling as	core indexes period index	0.034483
each axes overridden	plot logic ax data	0.083333
last day of the month and day_of_month	semi month	0.083333
index objects sortedness of	core indexes range index	0.021277
sql statement that create a table reflecting	io sqlite table create table setup	0.066667
frequency if	freq	0.016129
the block manager from	core sparse to manager sdf columns index	0.052632
for the object in order to correctly handle	resampler convert obj obj	0.166667
generate the	io	0.006024
if it has	series	0.006757
turn values	for values values	0.250000
the array interface	core indexes categorical index array dtype	0.125000
need to coerce	tseries maybe coerce freq	0.125000
bytes in the	index nbytes deep	0.052632
in requested	level	0.043478
csv file (discouraged please	series from csv cls path sep	0.066667
to coerce a scalar to a compat	period index coerce scalar to	0.071429
sharey	sharey	1.000000
'numpy' library	with convert convert args kwargs	0.055556
is supported	is	0.005291
is not supported for panel objects and will	panel	0.017857
for the aggregators	core selection mixin aggregate arg	0.166667
create a new unit if	dtypes datetime tzdtype new cls unit	0.055556
totally ordered cartesian product	core get group index labels shape sort xnull	0.066667
for categorical columns retain categorical information	io stata writer prepare categoricals data	0.166667
best locator based on a distance	date locator get locator dmin dmax	0.250000
feather-format	data frame to feather	0.333333
for dataframe and major_axis	core ndframe	0.005051
array	sparse sparse array array	1.000000
adorn	adorn	1.000000
if you	index set value arr key	0.023810
data from some	cls data	0.076923
has a single dtype if dtype	simple blockify tuples dtype	0.111111
substrings from each element	arr start stop step	0.333333
scipy sparse	core sparse sparse data	0.076923
return a tree-like object that can be	html frame parser build	0.014706
options	pp options	0.083333
dataframe major_axis for panel	ndframe iteritems	0.055556
to infer better dtype for	core ndframe convert datetime numeric timedelta coerce	0.071429
exttype represents ext type in msgpack	ext type	1.000000
style_dict	cls style_dict	0.500000
determine if each string matches	core str match arr pat case	0.166667
sub-classes to	data frame group by gotitem key ndim subset	0.333333
index	core indexes datetime index	0.061069
dataframe's series using matplotlib / pylab	data column by grid	0.200000
if the object is dict-like	core dtypes is dict like	0.333333
from maps[0] raise	compat	0.030303
a set of kwargs	kwargs	0.022222
an intervalindex from a list/array of tuples parameters	core indexes interval index from tuples cls data	1.000000
the boxed values	datetime	0.006711
maps[0] raise	compat	0.030303
metaclass	metaclass	1.000000
that works for monotonic decreasing	index get fill indexer searchsorted target method limit	0.142857
set my	fixed set	0.200000
can be used to iterate over the	parser	0.008000
in parallel	parallel	0.083333
datetime index	core indexes bdate	0.050000
a fixed frequency datetime index	core indexes period range start end periods freq	0.083333
this getitem defers to the	getitem key	0.333333
the smallest	categories	0.062500
downsample the cython	resampler downsample how	0.200000
to their default values as specified	default values	0.200000
we do need a multi reindex	ndframe needs reindex multi axes method level	0.333333
object that can be	html frame parser build	0.014706
for creating a subclass of styler with	styler from	0.076923
post	mplplot post	0.333333
return the actual filter	core computation filter bin op	0.250000
given a tuple of	get	0.007143
read csv file (discouraged please use :func	data frame from csv cls	0.066667
fast path for getting	block manager fast	0.250000
numeric	dtypes is numeric	0.333333
in file node must already	io hdfstore append key value format	0.016667
of unique elements in the	ops mixin nunique dropna	0.083333
read sql database table into a dataframe	read sql table table_name con schema index_col	0.333333
sparsifying is not supported for panel objects	panel to sparse	0.037037
or more existing	keys drop append	0.250000
the number of	multi index	0.020000
of value from 1-dimensional ndarray only	value	0.005155
of	indexes timedelta index	0.250000
to correctly handle	core resampler convert obj obj	0.166667
resolution	reso	0.166667
block with a	datetime	0.006711
this is generally only useful to	hdfstore select column key column	0.142857
to its numpy-array representation	ndframe as matrix columns	0.200000
& release the	data col take	0.333333
apply	by mixin apply	0.050000
retrieve single value at passed index label	value label takeable	1.000000
if you	index	0.002004
making this object picklable	datetime index setstate state	0.333333
use this if	indexes index set value arr key	0.023810
a date in xport format return	io sas parse	0.066667
function of type t or tuple of	core computation is type t	0.083333
running code that expects	util assert produces warning expected_warning filter_level	0.071429
node with the key or none if	hdfstore get node key	0.083333
dense representation of ndframe as opposed to	core ndframe to dense	0.111111
of term	term	0.083333
ndarray's __getitem__ method to work as desired	index getitem key	0.166667
already exist and	io	0.003012
have a full length slice	full slice obj l	0.333333
interval in	indexes interval	0.062500
safe version of putmask that	putmask	0.055556
the interpolate machinery	block interpolate with fill method axis inplace	0.200000
either	how lsuffix	1.000000
to postive here	core maybe convert indices indices n	0.166667
to table in file node must already	hdfstore append	0.016667
sum of non-na/null observations	count	0.055556
after a	indexes	0.009302
new index with passed location -s deleted	indexes index delete loc	0.333333
the float	formats float array formatter get result as	0.055556
perform generic binary operation	binop other func level	0.333333
fillna but using the interpolate machinery	interpolate with fill method axis inplace limit	0.200000
a fixed frequency timedelta	timedelta range start end periods	0.333333
that path's extension against	extension cls	0.125000
in the series/index by indicated number	core str repeat arr	0.045455
myself	core categorical	0.027778
result parameters	result	0.016393
returns a curve with holidays	holiday calendar holidays start end return_name	0.066667
construct and returns axes if	construct axes	0.333333
a tree-like object that	html frame	0.014706
lookup of	arr key	0.023810
sparsearray only the actual sparse values	core sparse sparse array	0.043478
to parse a ndarray	convert data name	0.200000
create a new unit if	datetime tzdtype new cls unit	0.055556
format into long stacked format as dataframe	to frame	0.125000
1-dimensional	core indexes index set value	0.023810
add in categorical accessor methods	categorical index add accessors	1.000000
for series arithmetic operations to	method op name	0.333333
without null values returns	dropna axis inplace	0.166667
and / or columns using input	axis copy inplace	0.055556
hack to accelerate unioning a	datetime index union many others	0.040000
ensure incoming data can be represented as uints	indexes uint64index assert safe casting cls data subarr	0.333333
of axes / array dimensions	core ndframe ndim	0.333333
memory usage of	index memory usage deep	0.200000
3 columns	index columns values	0.037037
panel objects	panel to	0.027027
converts a style_dict to an openpyxl style	convert to style cls style_dict	0.166667
are subclasses of superclass	superclass	0.111111
string in the series extract groups	core str extract	0.071429
packed bytes see :class packer for	io msgpack	0.025000
elements of v should be inserted	core indexes frozen ndarray searchsorted v	0.033333
returns numpy array of python datetime date objects	datetime	0.006711
values at particular time of day	at time time	0.066667
sets names on levels	index set names names	0.200000
and index	core indexes datetime index	0.007634
count of number of non-nan observations	count	0.055556
the data are missing	core data frame	0.005917
from 1-dimensional	set value arr	0.023810
can	io html	0.012987
curve with holidays	holiday calendar holidays start end return_name	0.066667
return a uint64 ndarray of my hashed	index hashed	0.166667
display options for printing and	display options	0.083333
for a particular object	dtypes extension dtype bytes	0.142857
can be used to	html frame	0.014706
values & release the memory	io index col take data	0.111111
index pairs for each element in	map indices py arr	0.090909
call a numpy	call	0.071429
csv file (discouraged please use	from csv cls path	0.066667
more	core	0.001326
of n between self analagoust to s-s	diff arr n axis	0.500000
if the date belongs to a leap year	indexes period index is leap year	0.142857
memory usage of my values parameters	memory usage deep	0.200000
dtypes if	dtypes	0.015873
a series excluding elements from groups	core series group	0.030303
indexer return	indexer	0.009174
the header of a	parser parse thead	0.111111
downsample the cython	core datetime index resampler downsample how	0.200000
appropriate class of series concat	dtypes get series result type result	0.250000
i	cls i	1.000000
of value from 1-dimensional ndarray only use this	index set value arr key value	0.038462
read csv file (discouraged please	from csv cls path	0.066667
tz-aware type return an	io get tz tz	0.066667
a numpy / pandas type to	type	0.024390
block	block	0.213115
create an	core ndframe create indexer cls	0.500000
datetime index with custombusinessday as the	indexes cdate range start	0.083333
python datetime date objects (namely the	datetime	0.006711
join_axes	join_axes	0.833333
read csv file (discouraged please use :func	core series from csv	0.066667
into	io html frame parser	0.012195
fillna but using the interpolate machinery	core block interpolate with fill method axis inplace	0.200000
return a new datacol with the block i	block cls i name cname	0.333333
to construct this type from a	interval dtype construct from	0.166667
fast transform path	group by transform fast result	0.333333
take which sets nan values	take nd	0.047619
are going to write this as a	write obj data_columns	0.111111
multiindex at	indexes multi index	0.013158
indexes give	indexes	0.004651
take a string-like that is object dtype	io convert string array	0.038462
create index	index	0.002004
the view limits	time series date locator autoscale	0.055556
casting data from some accepted dtype to	assert safe casting cls data	0.047619
cartesian product of all possible label	shape sort	0.200000
intersection of two index	core indexes range index intersection other	0.083333
values from passed panel or object coercible to	other join overwrite filter_func	0.076923
3 columns of	index columns	0.028571
create a new multiindex	multi	0.018182
needs additional handling	core	0.001326
packed bytes	default encoding unicode_errors	1.000000
objects along a particular axis with	axis join	0.142857
subset	subset	0.714286
for panel objects and will raise an	panel to	0.027027
of value from 1-dimensional ndarray only	datetime index get value	0.071429
convert to our native types	block to native types slicer na_rep date_format	0.250000
label is	value label	0.066667
returns the float values converted into strings	formats float array formatter get	0.055556
values at particular time of day	at time time asof	0.066667
metadata if key is a registered option	registered option key	0.333333
i am never	core categorical block	0.100000
gets called prior to a	core series array prepare	0.111111
convert to our native types format slicing if	to native types slicer	0.250000
of lists	matrix data	0.250000
that can	parser	0.008000
midnight	datetime index	0.007042
and create the manager	to mgr data index columns dtype	1.000000
numpy doesn't like to	like	0.058824
support a single assignment node	computation base expr visitor visit assign node	0.500000
concatenation of an datetimelike	dtypes concat datetime	0.125000
take	core categorical take	0.200000
a float key and are not	key	0.005051
1-dimensional ndarray only use	core indexes index set value	0.023810
node with the key	io hdfstore get node key	0.083333
copy of the sparsearray only the	copy	0.012821
an ordered multiindex compute	core indexes multi	0.014493
read csv file	csv cls path sep parse_dates	0.066667
the numexpr condition and filter	computation expr evaluate	0.200000
return a slice of	block slice slicer	0.083333
a nice str repr of	core window unicode	0.071429
a series that is datetimelike	datetimelike data	0.111111
data in	data	0.009709
require the	index simple new cls	0.090909
datetimeindex with	index	0.002004
nrows ncols - number of	custom dataframe nrows ncols	0.250000
styler with a	io formats styler	0.021277
have	core	0.001326
an	index	0.014028
handle na filling of take	core indexes multi index assert take fillable values	0.250000
axis equal	axis	0.011364
convert tz-aware axis to	ndframe tz convert tz axis	0.200000
of x not in y if	computation not in x y	0.066667
self as a	core sparse sparse series as	0.125000
index or ndarray	core indexes datetime index ops mixin	0.029412
indexer	core ndframe indexer	1.000000
the 'numpy' library	numpy validate take with	0.055556
minimum values along an axis	indexes datetime index ops mixin argmin axis	0.250000
we have a dtype compat for the	name	0.025000
apply	group by mixin apply func name	0.050000
scatter plot from two dataframe	plotting scatter plot data x y by	0.125000
datetimeindex but for	core datetime	0.142857
with times to	index	0.002004
the operations to the cls evaluate	operations cls use_numexpr	0.142857
take optional	optional args	0.066667
are index sliceable then return my slicer otherwise	index sliceable	0.083333
a custom template and	from custom template	0.250000
some dataframes in	table	0.010870
statistical measure using supplied function designed	apply func name window center	0.250000
to	html frame	0.014706
pandas type to its corresponding json_table	io json as json table type	0.250000
1-dimensional ndarray only	indexes index set value	0.023810
that	core categorical validate ordered cls	0.055556
return copy of the list	sparse list copy	0.500000
infer better dtype for	core ndframe convert datetime numeric timedelta coerce	0.071429
overlap add	core items overlap	0.062500
is an actual dtype that	core dtypes interval dtype is dtype cls dtype	0.142857
for this	core indexes index	0.007042
if	index set	0.022727
a leap year	indexes period index is leap year	0.142857
this if	index set value arr key	0.023810
of object to	ndframe to	0.043478
the info for	update info info	0.166667
need to coerce a scalar to	period index coerce scalar to	0.071429
function to my values	func mgr	0.083333
try to convert to	core sparse maybe to	0.333333
tshift	tshift	1.000000
read text from clipboard and pass to	read clipboard	0.200000
the 'info axis' see indexing for more	ndframe keys	0.083333
float is formatted	eng float	0.200000
a fixed frequency datetime index with	indexes bdate range start end	0.083333
locales that are available on the	locales prefix normalize locale_getter	0.125000
chainmap or subclass	chain map	0.034483
new unit	core dtypes datetime tzdtype new cls unit tz	0.055556
index with	indexes	0.013953
specialized intersection for datetimeindex objects may be	datetime index intersection	0.142857
get lines 0) there are headers	io python parser get index	0.166667
by	axis	0.011364
a decorator to take optional positional and	util optional args decorator	0.083333
the specifications setup the internal grouper	set grouper obj sort	0.250000
for the dtype of the	dtype	0.010989
interpret the	val pandas_dtype	0.500000
evaluate the where condition cond on a and	computation where cond	0.111111
columns of this	index columns	0.028571
to handle na filling of take	take fillable values indices allow_fill	0.250000
to table in file	io hdfstore	0.014493
"pivot" table) based on	pivot index columns	0.111111
lookup of value from 1-dimensional ndarray	index get value	0.250000
from	index set value arr key	0.023810
function for this	func arg	0.142857
handle na filling	fillable values	0.125000
try_coerce_args / try_operate	time delta block try coerce result result	0.333333
the reindex for	core ndframe reindex	0.125000
from 1-dimensional ndarray only use	core indexes	0.004762
of v should be inserted in a	indexes frozen ndarray searchsorted v	0.033333
needs additional handling as	array wrap result	0.025000
the sparsearray only the actual sparse	core sparse sparse	0.034483
multiindex from	indexes multi	0.014493
be used to iterate over the	frame parser build	0.014706
fill_value	allow_fill fill_value	0.250000
setup my atom from the block b	io data col set atom block	0.200000
union of two multiindex	multi index union other	0.066667
on instantiation	group by assure	1.000000
values attribute if it has one	series	0.006757
csv file (discouraged please use :func pandas	core series from csv cls path	0.066667
try hard to parse datetime	tools parse time	0.125000
intersection of two index objects	indexes range index intersection other	0.083333
implementing the plot attribute for	group by plot	0.062500
reduction type operation if we can	ops mixin reduce op name axis	0.083333
and be table	value format	0.016667
the maximum	max subset	0.166667
seconds (>= 0 and less than 1 day)	indexes timedelta index seconds	0.066667
to	date to	0.250000
a boolean whether i can attempt conversion to	indexes is convertible to	0.333333
a fixed frequency datetime index with day calendar	indexes period range start end periods freq	0.083333
the block manager from	to manager sdf columns index	0.052632
fixed frequency datetime index with custombusinessday as the	indexes cdate range start	0.083333
data to ndarray raises on	indexes index coerce to ndarray	0.166667
python datetime date	core indexes datetime index	0.007634
float is formatted in	set eng float	0.200000
dataframe with	data frame reset	0.027778
decorator to deprecate a keyword argument	util deprecate kwarg old_arg_name new_arg_name mapping stacklevel	0.083333
be used to	io html frame	0.012987
a fixed frequency datetime index with custombusinessday as	indexes cdate range start end	0.083333
create a pytables	table create	0.043478
intervalindex	core indexes interval	0.062500
index for series columns	ndframe	0.005025
is similar to a left-join except	left right on left_on	0.058824
the name this allows simpler access to columns	core ndframe setattr name value	0.166667
quoting	quoting	1.000000
boolean mask for requested label	method	0.033333
the styler removing any previously applied styles	styler clear	0.333333
string in the series/index by indicated number of	core str	0.011364
a	array	0.041667
to the groupby generically	cls	0.016949
are stripping all of the _apply kwargs and	name window center	0.071429
to	coerce to	0.333333
fast	index set value arr	0.023810
on saturday or sunday use previous friday instead	previous friday	0.250000
evaluate the block return result block	core block	0.010870
color object parameters	color	0.125000
to coerce a code to a rule_code	coerce freq code	0.076923
offset/observance to	rule	0.050000
in hdfstore parameters	io hdfstore put key value	0.333333
to an	convert to	0.181818
convert to our native types format slicing	block to native types slicer na_rep quoting	0.250000
set coerce	dtypes coerce	0.066667
setup	core grouper set	0.500000
times to midnight length	core	0.001326
:mod datetime to	plotting dt to	0.125000
handling as	period index array	0.050000
update index attributes e g freq	core indexes datetime index maybe update attributes attrs	0.200000
convert	dtypes maybe convert	1.000000
values	multi index get level values	0.500000
interpolate	core interpolate	1.000000
be used to iterate over	parser	0.008000
csv file	data frame from csv cls path header sep	0.066667
for header rows	pop header	0.100000
arr_or_dtype	arr_or_dtype	0.238095
as the index (so we	core at indexer convert key key is_setter	0.090909
general index	indexes index	0.007353
list of normalized locales that do not throw	util valid locales locales	0.050000
columns for dataframe	core ndframe	0.005051
return the	get	0.050000
timeseries to specified frequency	core ndframe asfreq freq	0.250000
is defined as a copy with the same	core indexes multi index view cls	0.047619
create a table reflecting the structure	sqlite table create table setup	0.066667
of unique elements of arr1	arr1	0.050000
ndarray	core index	0.111111
that create a table reflecting the	table create table setup	0.066667
an abstract base class for delegating methods/properties	pandas delegate	0.166667
gets called after a ufunc needs	index array wrap result context	0.034483
value of the index	index	0.004008
needs additional	core indexes period index array wrap result	0.050000
of value from 1-dimensional ndarray only	core indexes categorical index get value series	0.100000
boolean if values in the	core index ops mixin is	0.100000
warn	warn	0.500000
in the series extract groups from the	extract arr	0.066667
apply box func to passed values	index ops mixin box values values	1.000000
intervalindex with	indexes interval	0.062500
first element of the underlying data as a	core index ops mixin item	0.333333
return a	html frame parser build	0.014706
dtype)	core ndframe	0.005051
value occupying requested label default to specified	label default	0.083333
the unit specifed fields from the arg dataframe	from unit mappings arg	0.500000
int64 with null values converted	args values	0.083333
of x not in	not in x	0.166667
starting at the end	rsplit	0.031250
return a fixed frequency intervalindex	core indexes interval range start end freq periods	0.333333
comparison operations to convert datetime-like to datetime64	index cmp opname nat_result	0.066667
lookup and completion	pandas object dir	0.166667
simple cross-tabulation of	reshape crosstab	0.066667
value	frame get value	1.000000
plotting on plane currently scatter and hexbin	plane plot	0.500000
have a	categorical validate ordered	0.055556
called after a ufunc needs additional	core indexes period index array wrap result context	0.041667
interpolate values according	resampler interpolate method	0.166667
a dataframe sorted by the n largest	core data frame nlargest n	0.166667
decorator to capture stderr in	capture stderr f	0.055556
if we define an builtin	core selection mixin is builtin	1.000000
values	types values	0.333333
attributes from the info_axis	core ndframe dir additions	0.166667
the kind of my	kind	0.142857
into	index_col	0.125000
with times to midnight	core indexes datetime index	0.007634
asfreq	asfreq	0.555556
if	core indexes	0.004762
if each value is nan	index ops mixin isnan	0.500000
returns a curve with holidays between	holidays start end return_name	0.066667
this is	is	0.005291
return myself as an object block	core datetime tzblock to object block mgr	1.000000
putmask the data	putmask mask	0.142857
exist and	key value format	0.016667
must already exist	append key	0.016667
and other	other	0.013514
date belongs to a leap	index is leap	0.125000
must already exist and	append	0.012987
wrap result set of query in a dataframe	io wrap result data columns index_col coerce_float	1.000000
true if	is in table	0.076923
add in the datetimelike methods (as we	indexes datetime index ops mixin add datetimelike methods	0.333333
check_exact	check_exact	1.000000
1-dimensional ndarray only use this	set value	0.023256
function to	func	0.047619
database	io sqldatabase	0.500000
the codes by the indexer fill with the	indexer	0.009174
see :class packer for options	packb	0.022727
the array interface	series array result	0.500000
to class python 2 and python 3 compatible	cls name func	0.125000
the passed type is an actual dtype that	dtypes period dtype is dtype cls dtype	0.142857
values	index col convert values	0.333333
or by a series	by axis	0.045455
create index with	indexes multi index	0.013158
a categorical adjusted for groupby	indexes categorical index codes for groupby	0.333333
the float values	formats float array	0.055556
return sorted copy of index	index ops mixin sort values return_indexer ascending	0.500000
string in the series extract groups	extract frame arr	0.047619
try to parse a ndarray like into a	parser try convert data	0.500000
header of a	parser parse thead	0.111111
operations to convert timedelta-like to timedelta64	core indexes td index cmp	0.055556
can be used to iterate	frame parser build	0.014706
sanitize input	core sanitize array	1.000000
a fixed frequency timedelta	timedelta range start end	0.333333
an positional	positional setitem	0.250000
business types	business	0.100000
my current col description	io index col col	0.500000
read csv	from csv	0.066667
index return new dataframe	core data frame reset	0.027778
to cast the array/value to a datetimelike dtype	dtypes maybe cast to datetime value dtype	1.000000
to deal with nat-like arg is	arg errors	0.026316
indexer and return them	nd indexer	0.030303
index objects contain	index ops mixin	0.019231
are going to write this as a frame	write	0.017857
starting at	rsplit arr pat n	0.037037
common ops for timedeltaindex/datetimeindex but not periodindex	timelike ops	1.000000
selection used	selection	0.125000
for a tz-aware type return an encoded zone	get tz tz	0.066667
get all	get	0.007143
downsample the cython defined function	resampler downsample	0.200000
into	index_col coerce_float parse_dates	0.333333
return number of unique elements in	ops mixin nunique dropna	0.083333
sets names on levels	set names names level	0.200000
a fixed frequency datetime index	core indexes bdate range start end	0.083333
where elements of v should be inserted in	frozen ndarray searchsorted v	0.033333
return result block s from the	core block where other cond align raise_on_error	0.066667
type that can be coerced to	core indexes period index simple new cls	0.142857
take the codes by the indexer	categorical take nd indexer allow_fill	0.333333
and dtype) in	core	0.001326
spreadsheet-style pivot table as a dataframe	core reshape pivot table data values	0.166667
index	make custom index	0.250000
convert from sif to	to	0.006329
an internal format currently just	block internal values dtype	0.111111
pandas type to its	table type	0.055556
a ufunc needs	context	0.023810
x in y if	core computation in x y	0.047619
to table in file node must already	io hdfstore	0.014493
infer better dtype for object columns parameters	ndframe convert datetime numeric timedelta coerce	0.071429
evaluate the block return result block	core block eval func other	0.333333
dimensions	core ndframe	0.005051
elements of arr1	arr1	0.050000
build an xpath expression	build xpath expr attrs	0.200000
extended	index extended	1.000000
store object in hdfstore parameters	hdfstore put key	0.333333
cartesian product of	get group index labels shape sort	0.200000
return a boolean if the passed type is	dtypes extension dtype is	0.125000
method to handle na filling of take	take fillable	0.250000
the correct day for each date in i	days i roll	0.500000
a frame	data frame	0.005714
can be used to iterate	parser build	0.014706
used to iterate over the dom	html frame parser build doc	0.125000
i am never	block	0.008197
this indexable with	io index col	0.055556
append to table in file	io hdfstore append key value format append	0.125000
feather-format for	core data frame to feather	0.333333
override this only if the process of casting	assert safe casting	0.125000
left and right index are equal	util assert almost equal left right check_exact check_dtype	0.333333
valid ordered	cls ordered	0.058824
number of nanoseconds (>= 0 and	timedelta index nanoseconds	0.066667
sets index names	set default names data	0.083333
field	computation bin op	0.111111
handling as	indexes period index	0.035714
frame	frame	0.090909
the symmetric difference of two index objects	indexes index symmetric difference other result_name	0.166667
update index attributes e g	datetime index maybe update attributes	0.200000
retrieve pandas object stored in file	io hdfstore get	0.333333
binary feather-format for dataframes	frame to feather fname	0.083333
sanitize an index type to return	sanitize index data index copy	0.200000
or regular expression in	pat flags	0.052632
a timegrouper and return our resampler	core resample obj kind	0.083333
exist and	hdfstore append key value format	0.016667
to a leap year	core indexes period index is leap year	0.142857
panel objects and will raise an	core panel to	0.027027
algos groupsort_indexer implements counting sort	core get group index sorter group_index ngroups	0.250000
is called upon unpickling rather than the default	indexes new datetime index cls d	0.111111
operations to the cls evaluate	operations cls	0.153846
repr of the arg list of a func	func	0.011905
a string representation	core indexes frozen ndarray unicode	0.083333
internal property property	ndframe	0.005025
a dict of the kinds allowable columns for	table queryables	0.055556
from 1-dimensional ndarray only use	core indexes index set value arr key	0.023810
a resample of a	timedelta index	0.045455
return an axes dictionary for the passed axes	ndframe construct axes dict from axes	0.333333
the process of casting data from	numeric index assert safe casting cls data	0.047619
of columns	core ndframe	0.005051
bind	bind	0.857143
object that can be	build	0.013514
ndarray only use	core indexes index	0.007042
object serving as	abstract engine	0.166667
if we do need a multi reindex	ndframe needs reindex multi axes	0.333333
making this object picklable	core categorical setstate state	0.333333
underlying	indexes range	0.062500
return	indexes	0.018605
as a	indexes	0.004651
join together blocks having same dtype	block manager consolidate	1.000000
ndarray only use this	value arr key	0.023810
to time objects	core tools to time	0.125000
read csv file	series from csv cls path sep parse_dates	0.066667
alert a user about a malformed row	io python parser alert malformed msg row_num	0.500000
check if the object is a sequence	core dtypes is sequence obj	0.500000
types that each has a homogeneous dtype	core ndframe as blocks copy	0.142857
a masked rec array and create the manager	masked rec array to mgr data index columns	0.500000
perform the reduction type operation	core index ops mixin reduce op name axis	0.083333
datetimeindex with times to	indexes	0.004651
return a boolean if we	index is	0.083333
/ or columns using input function or functions	rename axis mapper axis copy inplace	0.250000
this is *not*	is other	0.055556
list-like of categorical-like unioning categories all	core dtypes union categoricals to_union sort_categories ignore_order	0.333333
the datetimelike methods (as we may have to	datetimelike methods cls	0.066667
multiindex from	core indexes multi index	0.013158
return index or ndarray filled with	indexes datetime index ops mixin	0.029412
apply we are stripping all of the	by mixin apply func	0.050000
fast lookup of value from 1-dimensional ndarray	index set value arr key value	0.038462
python datetime date objects (namely the	indexes datetime index	0.007634
take the input data_columns and min_itemize and create	columns data_columns min_itemsize	0.200000
parameter if	validate ordered cls	0.055556
create	io table create	0.142857
coerce the	dtypes coerce	0.133333
for general index	indexes index validate	0.066667
this getitem defers to the underlying array	indexes datetime index ops mixin getitem key	0.333333
each index value is found	datetime index ops mixin isin	0.083333
ndarray	value arr key	0.023810
simple	reshape crosstab	0.066667
internal method to handle na filling of take	index assert take fillable values indices	0.250000
read from a url file	io read obj	0.058824
to the underlying array which by-definition can	ops mixin	0.033333
and be	append key value	0.016667
obtain an	base	0.100000
fast lookup of	index set value arr	0.023810
list representing the totally ordered cartesian product of	labels shape sort xnull	0.066667
csv file (discouraged please use :func pandas	series from csv cls path sep	0.066667
header rows in multiindex	io pop header name	0.100000
try to convert to dense	maybe to dense	1.000000
matches the expected exception and expected error message	contextmanager exception matches exc_type exc_value trace_back	0.333333
with nat-like arg is a passed in as	arg	0.018868
our index type	index	0.002004
shade the background null_color for missing values	io formats styler highlight null null_color	0.250000
for each axes overridden in child	plot logic ax data	0.083333
asof merge this is similar to	core reshape merge asof	0.071429
dom	parser build doc	0.125000
w	w	0.454545
caption on a styler	styler set caption caption	0.333333
to table in file node must already exist	append key	0.016667
block from the	block	0.008197
coerce the	coerce indexer	0.500000
operations to the cls evaluate the doc	operations cls use_numexpr	0.142857
determine if each string matches	match arr pat	0.166667
occupying requested label default	core sparse sparse series get label default	0.083333
an intervalindex from	indexes interval index from arrays	0.166667
we take a string-like that is	io convert string array data encoding	0.038462
style_dict to an xlsxwriter format object	io xlsx writer convert to style style_dict	0.166667
need to coerce a code to a	tseries maybe coerce freq code	0.076923
downsample	period index resampler downsample how	0.200000
selection as an index	hdfstore select as coordinates key where start stop	0.500000
make a copy of	index copy	0.166667
to midnight length	indexes datetime index	0.007634
blocks collect and create	reduction f axis consolidate transposed	0.062500
a	core indexes index array wrap	0.100000
representation for a particular	repr	0.080000
a sequence	sequence	0.090909
and return the block manager from	to manager sdf columns	0.052632
datetime	core indexes datetime index	0.007634
float dtype if	float	0.024390
that can safely be cast to an	val min_val	0.083333
add in the	mixin add	0.333333
of value from 1-dimensional	value arr key value	0.038462
datetimeindex with times to	datetime index	0.007042
we are index sliceable then return my	index sliceable obj	0.083333
values	values	0.230769
last day of the month	month end	0.100000
gets called after a ufunc needs additional handling	result context	0.027027
add numeric operations to the	by add numeric operations cls	0.250000
new freq essentially	core resampler asfreq fill_value	0.066667
create and return a basegrouper which is	core get	0.038462
return the number of	multi index	0.020000
dataframe with labeling information in the columns under	data frame	0.005714
elements of arr1 and arr2 are	util equal contents arr1 arr2	0.066667
to shift without copying data the	slice shift periods axis	0.083333
over the blocks collect	reduction f axis consolidate transposed	0.062500
the numpy	dtype	0.010989
along a given axis	axis method na_option	0.250000
add in the numeric add/sub methods to disable	add numeric methods add sub disabled cls	1.000000
apply the given	apply	0.026316
returns value occupying requested label default to specified	sparse series get label default	0.083333
offsets index to end of period	date offset end apply index i	1.000000
is an actual dtype that	dtype is dtype cls dtype	0.130435
slice locations for	index slice locs start end step kind	0.083333
validates	categorical validate ordered	0.055556
convert argument to timedelta parameters	core tools to timedelta arg	0.500000
install	method converter	0.200000
mixin to add	mixin	0.037037
to be applied on each value to	formatter value formatter float_format threshold	0.100000
explict type promotion and coercion	dtypes maybe upcast values fill_value dtype copy	0.166667
the array interface return	categorical index array dtype	0.125000
the	group	0.027027
compute variance of groups excluding missing values	core group by var ddof	0.166667
return an ndarray of the flattened values	core indexes index ravel order	0.037037
extract from a masked rec	core masked rec	0.250000
counts of ftypes	ftype counts	0.125000
the series extract groups from the	core str extract arr	0.066667
a new block (of a possibly different	core block setitem indexer	0.066667
object that can be used to iterate over	html frame	0.014706
take a string-like that	convert string array data encoding	0.038462
a feather-format object from the file path	read feather path	0.333333
this is defined	indexes multi index view cls	0.047619
from one of the stata date formats to	to stata	0.058824
of times	repeat arr repeats	0.200000
used to	parser	0.008000
categorical columns retain categorical information	stata writer prepare categoricals data	0.166667
categorical by hashing its categories and then	categorical c encoding hash_key	0.142857
boxed values	indexes datetime	0.011494
an xlwt	xlwt writer convert	0.500000
a decorator to take optional positional	optional args decorator	0.083333
add the series only	core ndframe add series only	1.000000
not supported for panel objects and will raise	panel	0.017857
fast lookup	arr key	0.023810
fast transform path for	by transform fast result	0.333333
in the series extract groups from the first	str extract	0.035714
a resample	period index	0.024390
apply mapper function to	core categorical map mapper	0.166667
only	index set	0.022727
running code that expects to	util assert produces warning expected_warning filter_level	0.071429
scalarblock	core block make block scalar values	0.333333
for series columns for dataframe and	ndframe	0.005025
keyerror is maps[0]	map	0.029412
styler with	io formats styler from	0.076923
that left and right index are equal	assert index equal left right	0.333333
if we are	dtypes is	0.151515
a masked rec array and	core masked rec array to	0.090909
as block	block getitem block	0.250000
for panel objects and will raise an	core panel to sparse	0.037037
a dataframe with the rows/columns switched	data frame transpose	0.333333
packed bytes	msgpack	0.022222
convert to our native types	datetime block to native types slicer na_rep date_format	0.250000
float values converted into strings using	formats float	0.055556
background null_color for	null null_color	0.125000
this is defined	view cls	0.047619
data	validate data columns	0.500000
from	indexes index set value	0.023810
underlying array which by-definition can	indexes datetime index ops mixin	0.029412
overlap add suffixes to	overlap	0.047619
set the series	core series set	0.076923
add	ops mixin add	0.333333
we are passed a list-like indexer return the	indexes interval index convert list indexer keyarr kind	0.066667
to coerce	index coerce	0.125000
beginning of	tseries date offset beg	0.166667
the interpolate machinery	interpolate with fill method axis inplace	0.200000
numeric	is numeric	0.333333
return my cacher or none	core ndframe get cacher	1.000000
union of two index objects and	indexes index union other	0.083333
return a	io formats get	0.100000
index and its	core indexes range index	0.021277
date_format return a	date_format	0.058824
and be table	key	0.005051
index objects contain	indexes range index	0.021277
setup my atom	col set atom	0.333333
a result set coerce the	coerce	0.025641
passed type is an	interval dtype is	0.066667
modify block in-place with new	core object block set locs values check	0.125000
and arr2	arr2	0.090909
given an interval or intervalindex	core indexes get	0.125000
an ndarray of the flattened values of	ravel order	0.037037
appropriate class of series	core dtypes get series result type result	0.250000
are valid stata	stata writer	0.125000
convenience function for	xi yi x der	0.500000
unstack a k a pivot series with	core series unstack	0.333333
dtype possible	dtype	0.010989
we have	validate ordered	0.055556
params args to dbapi2 0 compliant	params	0.058824
values view mask dtype	values values	0.083333
return result block from	core block	0.010870
a valid ordered parameter	cls ordered	0.058824
underlying data which is	index values	0.111111
a simple	core reshape	0.047619
compat	indexes index sort levels monotonic	0.333333
index with custombusinessday as the default	core indexes cdate range start end	0.083333
a boolean if we	index is	0.083333
the arg	arg	0.018868
and 'kwargs' should be empty	args kwargs	0.153846
interpolate values according to different	interpolate	0.076923
to shift without copying data the	slice shift	0.083333
can	parser	0.008000
return a copy of a series excluding elements	series group	0.030303
indexer cannot	setitem indexer indexer	0.200000
dict has only the	io json	0.062500
indices that would sort the index and	indexes range index argsort	0.166667
to capture stderr in a buffer	capture stderr f	0.055556
return packed	io msgpack	0.025000
or ndarray filled with nat which has the	mixin nat new box	0.050000
of self coded with categories as	categorical codes for groupby sort	0.071429
return a string representation for a particular object	core dtypes extension dtype bytes	0.142857
that left and right index are equal	assert index equal left right exact	0.333333
feather	feather	0.250000
midnight	core indexes datetime	0.011494
and 'kwargs' should	func name args kwargs	0.166667
manager and a axes dict	ndframe init mgr mgr axes dtype copy	0.333333
fast	core indexes index set value arr	0.023810
a table schema from data	json build table schema data index primary_key version	0.333333
return a prettier version	core computation get pretty string	0.500000
return a new manager with the blocks	block manager combine blocks	0.250000
a style_dict to an openpyxl style object	io openpyxl1writer convert to style cls style_dict	0.166667
other to int64 with null values converted	args values other	0.142857
a fixed frequency datetime index with business	indexes bdate range start end periods	0.083333
gets called	series	0.006757
the columns under the index names defaulting	index level drop inplace col_level	0.166667
masked	masked	0.666667
save workbook to disk	excel writer save	0.333333
of the values to be at least	shape values	0.050000
datetimelike methods (as we may have	datetimelike methods	0.066667
summarized representation	indexes datetime index ops mixin summary name	0.333333
built up	styler	0.022222
object to the	core ndframe to	0.040000
create and return the op	computation bin op	0.055556
needs additional handling	core indexes period	0.032258
resample of	period index	0.024390
read sql database table into	io sqldatabase read table table_name index_col coerce_float	0.333333
a url has a valid	io is url url	0.047619
a repr function return fillvalue for	repr fillvalue	0.083333
provide coercion to our input arguments	block try coerce args values other	1.000000
of value from 1-dimensional ndarray only	categorical index get value series	0.100000
return	indexes categorical index	0.047619
creating a class with a metaclass	add metaclass metaclass	0.125000
number of bytes in the underlying	indexes multi index nbytes	0.052632
a list of normalized locales that do	util valid locales locales normalize	0.050000
to have	name	0.025000
fast lookup of	indexes index set value arr key	0.023810
read sql query into a	io read sql query sql con index_col coerce_float	0.333333
in the series/index to	core str	0.011364
tuples of the (attr formatted_value)	index format attrs	0.142857
return the ftypes (indication of sparse/dense and dtype)	core ndframe ftypes	0.055556
must already exist and be	hdfstore append key value	0.016667
parse the raw data into a	html frame parser parse raw data	0.250000
specialized intersection	index intersection	0.142857
parameter is a non-boolean scalar	parse dates arg parse_dates	0.142857
operations to convert datetime-like	period index cmp opname nat_result	0.066667
update index attributes e g freq depending on	indexes datetime index maybe update attributes	0.200000
any nan is taken	core ndframe asof where	0.166667
that can be used to iterate	io html	0.012987
times to	datetime index	0.007042
values according to indexer and return them as	nd indexer axis	0.043478
return rule name associated with a dateoffset object	offset name offset	0.500000
grouper indexers	grouper obj key axis	0.142857
version of putmask that potentially upcasts the result	core dtypes maybe upcast putmask result mask	0.200000
each dataframe in panel to a separate excel	core panel to excel path na_rep engine	0.111111
an indexer coerced to the codes	maybe coerce indexer indexer	0.125000
we are index sliceable then return my slicer	index sliceable obj key	0.083333
of datetime time	datetime	0.006711
return series containing only true/non-nan values possibly	remove na series	0.166667
slice dictionary for these axes	axes for slice axes	0.333333
of unique elements of arr1 and arr2	equal contents arr1 arr2	0.066667
iterate over the	build	0.013514
value from 1-dimensional ndarray only use this	indexes period index get value series key	0.071429
the values to be at least	block shape values ndim	0.050000
keyerror	compat	0.030303
return the dtype str	dtype str	0.333333
only - where	where	0.083333
or updating-on-copy an openpyxl v2	io openpyxl20writer	0.035714
info for	info info	0.142857
the ftypes (indication of sparse/dense and	ftypes	0.043478
read csv file	series from csv	0.066667
leap year	index is leap year	0.142857
return the join indexers	get join indexers	1.000000
if	cls	0.016949
already exist and	key	0.005051
reduce	reduce	0.625000
block for the diff of the values	block diff n axis	0.333333
dimensions as the original	core ndframe	0.005051
as a unicode	core indexes	0.004762
extensions	extensions	1.000000
from maps[0]	map	0.029412
the length of that group	core group by	0.027778
node with the key or none	hdfstore get node key	0.083333
the stata date formats to a type in	to stata type	0.142857
the union of two multiindex	multi index union other	0.066667
loffset	loffset	1.000000
'numpy' library the	numpy validate take with convert convert args	0.055556
wrap comparison operations to convert datetime-like	indexes dt index cmp opname nat_result	0.066667
used to iterate over	parser build	0.014706
to convert timedelta-like to	indexes td	0.055556
return new dataframe with labeling information in the	data frame reset	0.027778
object that can be used to iterate	io	0.003012
round the fractional part of the given number	reshape round frac x precision	0.200000
concatenation of	concat datetime to_concat	0.125000
to dataframe apply for	sparse data frame apply func	0.166667
argsort argsorts the	argsort	0.038462
sub-classes	selection mixin gotitem key ndim subset	0.333333
the view limits to	locator autoscale	0.055556
of whether each index value is found in	datetime index ops mixin isin	0.083333
is a sequence	is sequence	0.333333
sparse coo_matrix from a sparseseries	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
levels of both multiindex objects are	core indexes multi index equal levels other	0.100000
of this indexer	index col	0.066667
the 'numpy' library	take with convert convert args	0.055556
only use this if	arr key	0.023810
gets	core series array wrap	0.100000
values	core	0.001326
the we have a	name	0.025000
thrown by an error is encountered	parser error	0.055556
at the new freq essentially a reindex	core resampler asfreq fill_value	0.066667
return the length of	core length of	0.333333
the indexables if they don't exist	io table indexables	0.333333
key and are not	key	0.005051
that can be used to iterate over	html frame parser	0.012658
convert tz-aware axis to target	ndframe tz convert tz axis	0.200000
ax0	ax0	1.000000
getitem defers to the underlying array	indexes datetime index ops mixin getitem	0.250000
or ndarray filled with nat which has	nat new box	0.050000
a tz-aware type return an encoded zone	io get tz tz	0.066667
in file node	key value	0.011628
in file node must already exist and be	key	0.005051
additional	core indexes	0.004762
from a 1d array of	index from intervals cls	0.125000
'args'	compat numpy validate resampler	1.000000
read csv file (discouraged please use	from csv cls path sep parse_dates	0.066667
index with custombusinessday as the default	indexes cdate range start end periods	0.083333
create	core ndframe create indexer cls name	0.500000
tz-aware type return	io get tz tz	0.066667
shift without copying data the	slice shift	0.083333
of value from 1-dimensional ndarray only use	core indexes datetime index get value	0.071429
the float values converted into strings using	io formats float array	0.055556
hack to accelerate unioning a	index union many others	0.040000
operations to convert datetime-like to datetime64	core indexes dt index cmp opname nat_result	0.066667
forward	core sparse sparse series get val at loc	0.250000
a fixed frequency intervalindex	core indexes interval range start end freq periods	0.333333
subject string in the series extract groups	core str extract	0.071429
values between particular times of the	core ndframe between	0.100000
apply the function	apply func mgr	0.166667
we likely want to take the cross-product	core maybe convert ix	0.166667
resolvers	resolvers	1.000000
keeps track of whether numexpr was used stores	core computation set test mode v	0.142857
index value is found in	index ops mixin isin	0.083333
converts a style_dict	style_dict num_format_str	0.500000
a multiindex from the cartesian product	indexes multi index from product	0.166667
that we have	core categorical validate	0.055556
iter1	util assert copy iter1	1.000000
aggregate using input function or dict	panel group by aggregate arg	0.250000
for construction of strings to numpy	numpy	0.090909
set my pandas type & version	fixed set	0.200000
in the series/index ends with passed pattern	core str endswith arr	0.333333
label for last non-na/null value	series last valid	0.250000
return index	index ops	0.033333
one of the stata	stata	0.022222
that group - 1	group by cumcount ascending	0.166667
one lower dimension s	sliced	0.166667
to read from a	io read obj	0.058824
called after a	array wrap	0.075000
float values converted into	formats float array formatter get result as	0.055556
35	35	1.000000
the maximum value of the index	datetime index	0.007042
a compatiable fill_value and arr dtype	arr fill_value	0.090909
subject string in the series extract groups from	str extract	0.035714
create a new unit if needed	core dtypes datetime tzdtype new cls unit tz	0.055556
try to operate on	mixin try	0.250000
minimum value of the	core index ops mixin min	0.125000
return the	reshape merge operation get	0.500000
repeating on the last day of the month	month end	0.100000
is of a	core dtypes is	0.021277
of value	arr key value	0.038462
header rows in multiindex parsing	header name	0.100000
particular panel invoked by unicode df in	panel unicode	0.166667
the datetime format of a given datetime	datetime format dt_str dayfirst dt_str_parse	0.250000
we have a full length slice	core is full slice obj l	1.000000
blocks collect and create a	reduction f axis consolidate transposed	0.062500
actual filter format	core computation filter bin op format	0.333333
wrapper function for series	method series	0.333333
index for series columns for dataframe and major_axis	ndframe	0.005025
of available options grouped by	core pp options	0.083333
interpolate values according to different methods	resampler interpolate	0.166667
pick the best locator based on a distance	get locator dmin dmax	0.250000
rewrite the assignment operator for pytables expressions that	rewrite assign	0.125000
the passed type is	period dtype is	0.125000
of strings to numpy	numpy	0.090909
times	index	0.002004
check if we do need a multi reindex	core ndframe needs reindex multi axes method	0.333333
this getitem defers to the underlying	datetime index ops mixin getitem key	0.333333
under the index names defaulting	reset index level drop inplace col_level	0.166667
sparse/dense	core	0.001326
string-like that is object dtype	convert string array	0.038462
are stripping all of the _apply kwargs and	func name window center	0.058824
of take	indexes multi index assert take	0.500000
values attribute if	series	0.006757
moving	bias	0.166667
convert tz-aware axis to target time zone	ndframe tz convert tz axis level copy	0.200000
this object potentially casting to object	core indexes period index to embed keep_tz	0.333333
datetime index with custombusinessday as the	indexes cdate range start end	0.083333
null_color for missing	highlight null null_color	0.125000
returns the float values converted into strings	float array	0.055556
python datetime date objects (namely	indexes datetime index	0.007634
a given width	width	0.083333
get integer	core indexes categorical index get	0.500000
to construct this type from a	dtypes interval dtype construct from string cls	0.166667
ordered data like time	ordered	0.017857
validates that we have a valid ordered parameter	validate ordered cls ordered	0.058824
the parser	io parser	0.250000
ensure that they are valid stata	stata	0.022222
purely integer-location based indexing for selection by position	i loc indexer	0.142857
the put method	core series put	0.055556
of the object	core	0.001326
if holiday falls on sunday use day	sunday	0.100000
number of unique elements in the group	group by nunique dropna	0.250000
simple cross-tabulation of	index columns values	0.037037
of a single	core ndframe	0.005051
checks that path's extension	writer check extension	0.250000
given a	index get	0.040000
filled with nat which has the same	ops mixin nat new box	0.050000
union of two index objects and sorts	core indexes range index union other	0.083333
that path's extension	excel writer check extension	0.250000
block manager from a	sparse to manager sdf columns index	0.052632
this is index for series columns for	core ndframe	0.005051
create an indexer like	create indexer cls name indexer	0.166667
stacked format dataframe	core data frame	0.005917
1d array return an array of deterministic integers	array vals encoding hash_key categorize	0.250000
returns a curve with holidays	abstract holiday calendar holidays start end return_name	0.066667
dispatch to apply we	core group by mixin apply func	0.050000
repr function return fillvalue for a recursive	compat recursive repr fillvalue	0.333333
pattern or regular expression	arr pat flags	0.062500
a python expression as a	expr	0.050000
interpolate values according to	resampler interpolate method	0.166667
length	core indexes datetime index	0.007634
compat	index sort levels monotonic	0.333333
if	for	0.071429
try to parse	try convert data	0.200000
number of bytes in the	index nbytes	0.052632
frequency datetime index with custombusinessday as	indexes cdate range start end	0.083333
with multi-level index return new dataframe with labeling	core data frame	0.005917
as a dataframe the levels	data values	0.062500
pickle serialize object to input file path	core ndframe to pickle path compression	1.000000
concatenation of an datetimelike array of arrays each	concat datetime to_concat	0.125000
gets called after a	series	0.006757
to midnight length is unaltered	index normalize	0.125000
into a pandas only dtype object	pandas	0.035714
intervalindex from a 1d array of interval objects	indexes interval index from intervals cls	0.333333
the we have a dtype	name freq	0.083333
td elements from a	parser parse td obj	0.083333
a fixed frequency	range start end periods	0.133333
the writer's supported extensions	ext	0.142857
i	categorical block	0.100000
intersection of	intersection	0.083333
rewrite the assignment operator	core computation rewrite assign tok	0.125000
asof key	asof key	0.250000
indexer which is a	indexer indexer	0.071429
sparse coo_matrix from	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
index and plural 'names' parameter	indexes index validate names name names deep	0.071429
a string-like	string	0.018868
add the operations to the cls evaluate the	core panel add aggregate operations cls use_numexpr	0.500000
from the	data	0.009709
object that can be used	html frame parser	0.012658
out the binary feather-format for dataframes	feather fname	0.083333
in file node must already exist and	hdfstore append key value	0.016667
add	ndframe add	0.500000
interval	interval index	0.090909
a new multiindex from	core indexes multi	0.014493
add accessors to cls from the delegate	delegate add delegate accessors cls delegate accessors typ	1.000000
make a copy of this object names dtype	copy names dtype	0.333333
create a table reflecting	sqlite table create table setup	0.066667
list of the axis indicies	panel extract axes data	0.142857
convert to our native types format slicing	datetime block to native types slicer na_rep date_format	0.250000
datetimeindex with times to midnight length is	core	0.001326
add series to dataframe in	data frame	0.005714
to html	io formats styler	0.021277
pattern	pat na	1.000000
the display options for printing and representing objects	display options	0.083333
function for	func arg	0.142857
and return the block manager from a	core sparse to manager sdf columns	0.052632
validate that an positional	indexer has valid positional	0.250000
add in the	ops mixin add	0.333333
and string-like array to convert object dtype	convert string to object	0.142857
we have a compatiable fill_value and	fill_value	0.033333
cross-tabulation	core	0.001326
cols	cols	1.000000
in this object	core ndframe	0.010101
left-join except that we	left right on left_on	0.058824
error is encountered	error	0.028571
that we have a	categorical validate ordered	0.055556
csv	data frame from csv	0.066667
process axes filters	io table process axes obj columns	1.000000
called	indexes index	0.007353
a ufunc needs additional handling as	result context	0.027027
business month	business month	0.333333
calculate slice bound that corresponds to given	get slice bound	1.000000
on subclasses namely intervalindex to control get_slice_bound	get loc only exact matches key	0.142857
index	core indexes index validate names name	0.066667
number of	core indexes multi	0.014493
a boolean whether this axes needs validation	indexer should validate	0.166667
applicable to	group by	0.016129
frequency	freq method how	1.000000
only use	core indexes index set value arr	0.023810
representing the totally ordered cartesian product	core get group index labels shape sort xnull	0.066667
property synonym for as_blocks()	ndframe blocks	0.166667
belongs to a leap	period index is leap	0.125000
convert an object	computation convert	0.250000
aggregate using input function or	panel group by aggregate arg	0.250000
wrapper function for series arithmetic operations	sparse arith method op	0.333333
put method to	put	0.043478
check that	util check for	0.500000
if we define an builtin function for this	base grouper is builtin func arg	0.333333
read from a url file	read obj	0.058824
the (attr formatted_value)	range index format attrs	0.142857
after a ufunc needs additional	result context	0.027027
read from a url file or string	io read	0.038462
note this is *not* the same as index	indexes index is other	0.333333
bytes in the	multi index nbytes deep	0.052632
if categoricals are the same dtype	is dtype equal other	0.250000
boolean whether this axes needs validation	indexer should validate iterable axis	0.166667
convert to our native types format slicing	block to native types slicer na_rep date_format quoting	0.250000
a cross-section	xs	0.111111
representing the totally ordered cartesian product of	core get group index labels shape sort xnull	0.066667
packed bytes see	packb	0.022727
string-like that is object dtype and coerce to	convert string array data encoding	0.038462
parse	parse time	0.125000
index objects contain the same elements	range index	0.021739
1-dimensional ndarray only use this if you	set value arr key	0.023810
we are index sliceable then return my	index sliceable	0.083333
manager for temporarily setting a timezone	set timezone	0.142857
avoid code duplication	str_rep default_axis	1.000000
and dtype) in this object	core ndframe	0.005051
select values at particular time of day e	ndframe at time time	0.066667
sets the view limits to the	date locator autoscale	0.055556
return a tree-like object that can be	html frame parser	0.012658
should not undergo dtype conversions	noconvert	0.142857
dataframe to a sql database	io sqlite database to sql frame	0.500000
cast the array/value	maybe cast	0.100000
built up styles	formats	0.031250
create and return the numexpr condition and filter	core computation expr evaluate	0.200000
moving window of	window apply window	0.166667
to see if we can set a	can set	0.125000
cartesian product of all	index labels shape sort	0.200000
index are equal	util assert index equal	1.000000
index objects contain the	indexes datetime index ops	0.034483
called via the 'numpy' library the	with convert convert	0.055556
decorator to capture stderr in	util capture stderr f	0.055556
date forward to	date	0.040000
validates that we	core categorical validate ordered cls	0.055556
handling as	core indexes period index array wrap	0.050000
frame	io formats data frame	0.090909
return boolean if values	mixin is	0.083333
resolve a variable name in a	core computation scope resolve	0.166667
timedelta-like to	indexes td index cmp opname	0.055556
string format	format datetime64 from	0.250000
bins to which each value of	bins	0.090909
to a sql	to sql	1.000000
block s from the result	core block where other cond align raise_on_error	0.066667
after a ufunc needs additional	core indexes period index array wrap result context	0.041667
validate percentiles used by describe and	core ndframe check percentile q	0.333333
bind a method to class python	compat bind method cls name func	0.200000
a meta data array to the key	key	0.005051
load msgpack pandas object from the specified	read msgpack path_or_buf encoding iterator	0.200000
axis dimensions	ndframe shape	0.200000
provides a resample of a	timedelta index resampler	0.066667
bytes see :class packer for options	io msgpack packb	0.025641
panel or above ndim	core panel	0.019231
which	new box	1.000000
the block manager from a	to manager sdf columns index	0.052632
the index's frequency if	core ndframe tshift periods freq	0.066667
an positional	ndframe indexer has valid positional setitem	0.250000
categorical to be	categorical as	1.000000
not supported for panel objects	panel to sparse	0.037037
to table in file node	key value format	0.016667
a custom template and jinja environment	custom template cls searchpath name	0.500000
expression	expr	0.100000
take the codes by the indexer fill with	categorical take nd indexer	0.333333
from a masked rec	core masked rec	0.250000
to	io html	0.012987
malformed row	malformed	0.066667
update index attributes e	core indexes timedelta index maybe update attributes	0.200000
a timegrouper and return our resampler	resample obj kind	0.083333
node must already exist	value	0.005155
panel objects	core panel to	0.027027
to table in file	append key value	0.016667
for given	get mgr	1.000000
according to indexer and return them as	indexer axis	0.043478
order to correctly handle	resampler convert obj obj	0.166667
set of _constructor_sliced-like objects to either an intersection	core panel homogenize dict frames intersect dtype	0.066667
of type window_type and size window on	stats rolling window arg window win_type min_periods	0.100000
function has at most len(compat_args) arguments and	validate args fname args max_fname_arg_count compat_args	0.333333
index	core indexes categorical index	0.047619
element	core	0.001326
create a new unit if needed otherwise return	datetime tzdtype new cls unit tz	0.055556
index for series columns	core ndframe	0.005051
with nat which has the same	mixin nat new box	0.050000
array interface return my values	array result	0.125000
gets	core indexes index array wrap	0.100000
object that can be used	frame parser build	0.014706
already exist and	io hdfstore append	0.016667
series excluding elements from groups that do	series group	0.030303
indexer fill with	nd indexer	0.015152
data	data rows	1.000000
called prior to a	series array prepare result	0.111111
categorical by	categorical sort values	0.166667
the block manager from a dataframe of series	to manager sdf columns	0.052632
re-evaluate the obj with	and	0.066667
to dataframe apply for sparsedataframe	core sparse sparse data frame apply func	0.166667
to the underlying array which by-definition can	indexes datetime index ops mixin	0.029412
the datetime format of a given datetime	datetime format	0.250000
read csv file (discouraged please use :func pandas	data frame from csv cls path	0.066667
the codes by the indexer	nd indexer	0.015152
return a fixed frequency timedelta index	core indexes timedelta range start	0.083333
day as the default frequency	end periods freq	0.125000
are index sliceable then return	convert to index sliceable	0.083333
of the shape	shape	0.047619
get lines 0) there are headers	python parser get index	0.166667
replace extra whitespace inside of a string with	remove whitespace s regex	0.200000
index parameters	core sparse sparse data frame set value index	0.250000
the actual ne	core computation condition bin op	0.333333
dataframe	data values index	0.066667
called after a ufunc needs additional handling as	indexes period index array wrap result context	0.041667
boolean	indexes is	0.166667
shift without copying data the shifted data will	core ndframe slice shift periods	0.083333
called after	core indexes period index	0.034483
make sure that we have a fully reindex-output	data frame group by reindex output result	0.045455
bytes see	packb	0.022727
singular 'name' parameter for general index and	indexes index	0.007353
boolean if we need a	core indexes index is	0.083333
a simple cross-tabulation	reshape	0.037037
spreadsheet-style pivot table as a dataframe the	core reshape pivot table data values index columns	0.166667
returns the float values converted	io formats float array formatter	0.055556
common ops mixin to support a unified	ops mixin	0.066667
a common sparseindex corresponding	homogenize series_dict	0.047619
the :meth pandas dataframe reset_index function	series reset index level drop name inplace	0.142857
true if the key is in the	contains key	0.125000
histogram of the	plotting hist	0.200000
list replace	core block manager replace list	0.500000
interpolate values according	resampler interpolate method axis limit	0.166667
hypothetical list representing the totally ordered cartesian product	shape sort xnull	0.066667
convert datetime-like	indexes dt index cmp opname nat_result	0.066667
infer	tseries infer	0.500000
if you	core indexes	0.004762
is index for series columns for	core	0.001326
in place using non-na values from	update other join overwrite filter_func	0.055556
csv file (discouraged please use	core data frame from csv	0.066667
an implementation for the aggregators	selection mixin aggregate arg	0.166667
of a series that is datetimelike (e	indexes maybe to datetimelike data copy	0.142857
a valid	valid	0.071429
return valid other	index validate for numeric binop other op	0.500000
object that can be used to	io html frame parser	0.012195
the date belongs to a leap	indexes period index is leap	0.125000
timezone	timezone	0.500000
of a series that is datetimelike (e	indexes maybe to datetimelike data	0.142857
use this	set value arr key	0.023810
return a new block (of a	core block setitem indexer	0.066667
a series we	core series group	0.030303
the union of	indexes multi index union	0.333333
of sql statement that create a	create	0.033333
equivalent to shift without copying data the shifted	slice shift periods axis	0.083333
gets called after	core series array wrap result	0.100000
from	value arr	0.023810
get the	core	0.001326
an object with matching indices	core ndframe reindex like other method copy limit	0.111111
my hashed	index hashed	0.166667
tree-like object that can	html frame parser build	0.014706
return index or ndarray filled with	index ops	0.033333
to shift without copying data the	ndframe slice shift periods	0.083333
needs	core indexes period index	0.034483
index names to	set default names data	0.083333
the data types and ranges supported by stata	to stata types data	0.333333
use this if	index	0.002004
idx_row	idx_row	1.000000
convert argument to timedelta	tools to timedelta arg	0.500000
1-dimensional ndarray only use this	set	0.012195
required package	package pkg_name min_version	0.083333
of periods	periods	0.083333
to handle na filling of take	indexes index assert take fillable values	0.250000
m	m	1.000000
values	get level values	0.500000
bind a method to class python	compat bind method cls name	0.200000
the blocks collect and create	consolidate transposed	0.062500
is datetimelike	datetimelike data	0.111111
tree-like object that	io	0.003012
return true if this is a valid column	is	0.005291
compute variance of groups excluding	core group by var ddof	0.166667
take which sets	take nd arr	0.125000
need to coerce a code	coerce freq code	0.076923
a typeerror if	dtypes	0.015873
read csv file (discouraged please use :func	data frame from csv cls path header sep	0.066667
must already exist and	io hdfstore append key	0.016667
elements of an series	series	0.006757
classes which represent time-seires	timeseries index	0.333333
a view	is view	0.100000
in file	io hdfstore append key	0.016667
have a compatiable fill_value	fill_value	0.033333
boolean criterion specified by func	group by filter func dropna	0.250000
as series or by	by axis level	0.045455
the reduction type operation	ops mixin reduce op name axis skipna	0.083333
all of the _upsample kwargs and	by mixin apply f	0.166667
tag	replacer x	0.125000
number of bytes in the underlying	multi index nbytes deep	0.052632
get all the locales that	get locales	0.500000
or minimum along an axis	ops mixin min axis	1.000000
to capture stderr	util capture stderr	0.055556
in file node	append key value format	0.016667
return the number of bytes in	range index nbytes	0.052632
class	indexes index append	1.000000
sanitize input data to an	core sanitize array data index	0.250000
the header of a table	frame parser parse thead table	0.333333
functions	ndframe rename	0.333333
checks that all the labels	all dates	1.000000
block manager from a dataframe	to manager sdf columns	0.052632
index and its	index	0.002004
and be	hdfstore append key value	0.016667
apply the function to my values	apply func mgr	0.166667
number of temporary variables in this scope	computation scope ntemps	0.250000
csv file (discouraged	core series from csv cls path sep	0.066667
dense	core sparse sparse	0.034483
wrap comparison operations to convert timedelta-like	core indexes td index cmp	0.055556
return a tuple of axis dimensions	ndframe shape	0.200000
returns the float values converted	io formats float array formatter get result as	0.055556
set of kwargs suitable for	kwargs cls	0.040000
wrapper function for series arithmetic operations	core arith method series op	0.333333
box function to get object	box func	0.142857
csv file (discouraged please use :func pandas	series from csv cls path sep parse_dates	0.066667
series or by a series of columns	core ndframe groupby by axis	0.333333
sets index names	default names	0.083333
to ndarray repeat	core indexes datetime index ops mixin repeat repeats	0.333333
object in hdfstore parameters	io hdfstore put key value format	0.333333
to coerce any object types to better types	object block convert	0.083333
if we if the passed type is	is	0.010582
return packed bytes see :class packer for	packb	0.022727
cached item item represents a positional indexer	core ndframe iget item cache item	0.090909
of value from 1-dimensional ndarray only	indexes categorical index get value	0.100000
representation of object to	core ndframe to	0.040000
returned from apply if as_index=true	core group by index with as	0.200000
normalize	normalize	0.384615
a resample of a	index	0.006012
extension against the	extension cls	0.125000
which overcomes the npy_maxargs 32	computation result type many	0.142857
(if copy=true return a new copy)	categorical block astype	1.000000
if multiindex has only 2	multi	0.018182
of the stata date formats to a type	to stata type	0.142857
convert to our native types format slicing	block to native types slicer na_rep float_format	0.250000
columns as lists of	str columns	0.083333
whether i am an	io index	0.111111
return block for the diff of	core block diff n axis mgr	0.333333
cross-tabulation of	core reshape crosstab index columns	0.066667
float is formatted in dataframe	set eng float	0.200000
interpolate values according	core resampler interpolate method axis	0.166667
and return an item pair	compat chain map popitem	0.055556
convert tz-aware axis to target time zone	core ndframe tz convert tz axis level	0.200000
return a	parser	0.008000
that they are valid stata	io stata writer	0.142857
any type that can be coerced to	index simple new cls	0.090909
for parsers that parse html	html	0.011765
block manager from a	core sparse to manager sdf	0.052632
returned from apply if as_index=true	with as	0.200000
values	core series	0.016000
is	compat chain map	0.032258
*this is an	core indexes categorical index is dtype	0.500000
return the	core ndframe get	0.400000
draw histogram	plotting hist frame	0.200000
perform __getitem__-like return result as block	getitem block slicer new_mgr_locs	1.000000
superperiod	superperiod	1.000000
and return an item pair from maps[0] raise	compat chain map popitem	0.055556
of arr1 and arr2 are	arr1 arr2	0.066667
returns the float values converted into	float array formatter get result as	0.055556
object	msgpack	0.044444
as the input	values	0.008547
return an axes dictionary for the passed axes	dict from axes	0.333333
fixed-width	fixed width	1.000000
reshape data (produce a	data frame	0.005714
info for this	io get info info	0.333333
new	datetime tzdtype new cls	0.333333
index	util assert almost	1.000000
set of query in	index_col coerce_float	0.062500
an indexed column	io index col is indexed	0.200000
1-dimensional ndarray only use	core indexes index set value arr key	0.023810
check a sequence of terms	terms	0.034483
mid-point of each interval in the index as	core indexes interval index mid	1.000000
from the	io data	0.250000
url has	url url	0.045455
string-like that is object dtype and	io convert string array data encoding	0.038462
an expression in the context of	expr inplace	0.200000
'numpy' library the	take with convert convert args kwargs	0.055556
minimum value of the index	core indexes datetime index	0.007634
length	len	0.142857
series extract groups from the first match of	str extract	0.035714
set new item in-place does not consolidate adds	set item value check	1.000000
self as a	as	0.066667
best locator based	locator	0.047619
provides a resample of a	timedelta	0.022222
slice	categorical block slice slicer	0.083333
reduction type operation if we can	core index ops mixin reduce op name	0.083333
of the values	values ndim	0.050000
a new sparsearray from the input	sparse sparse data	0.076923
date in xport	sas parse	0.066667
string-like and string-like array to convert object	core dtypes maybe convert string to object values	0.142857
window of type window_type and size window	stats rolling window arg window win_type	0.100000
return an ndarray of the flattened values of	index ravel order	0.037037
a boolean list indicated if we have mixed	multi index have mixed	0.166667
values at the new freq essentially a reindex	core resampler asfreq fill_value	0.066667
table	key value format	0.033333
len of	core categorical size	0.111111
the block manager from a	manager sdf	0.052632
is an iterable but not a	iterable not	0.250000
values to be at	shape values	0.050000
table in	hdfstore append	0.016667
compat	core indexes index sort levels monotonic	0.333333
object for	period	0.016667
to convert timedelta-like to	core indexes td index cmp opname	0.055556
convert tz-aware datetimeindex	core indexes datetime index tz convert tz	0.166667
frame should be truncated if so slices	frame formatter chk truncate	0.500000
value occupying requested label default to	get label default	0.083333
the given delimiter string starting at the	rsplit arr pat n	0.037037
arr dtype then fill	maybe fill arr	0.500000
python expression as	expr	0.050000
feather-format	to feather	0.333333
a manager and a axes dict	ndframe init mgr mgr axes dtype copy	0.333333
occupying requested label default to	get label default	0.083333
cast the array/value	core dtypes maybe cast	1.000000
a flattened numpy array	core categorical ravel order	0.333333
interpolate values according to different methods	core resampler interpolate method axis	0.166667
that we have a valid ordered parameter	ordered cls ordered	0.058824
return block for the diff of the values	core block diff n axis mgr	0.333333
i am	core categorical	0.013889
be a single block	new	0.058824
returns numpy array of datetime	datetime	0.006711
that is datetimelike (e	indexes maybe to datetimelike data	0.142857
pick the best locator based	get locator	0.062500
gets called	indexes period index array wrap	0.050000
the passed dtype	dtype dtype	0.100000
validate that the where statement	core computation validate where w	0.250000
data to ndarray raises on	index coerce to ndarray	0.166667
have	categorical validate	0.055556
to its values attribute if it has	series	0.006757
if we are index sliceable then return my	index sliceable	0.083333
index or ndarray	core indexes datetime index	0.007634
the built up	styler	0.022222
categorical instance	categorical	0.009615
have a	validate	0.027778
prefix	prefix	1.000000
major_axis for	core	0.001326
for panel objects and will raise an error	panel to	0.027027
1d array return an array of	hash array vals	0.083333
from some accepted dtype to the internal	cls	0.016949
index and	indexes range index	0.021277
arr1 and arr2 are	equal contents arr1 arr2	0.066667
that is datetimelike	datetimelike data	0.111111
return a new object with the replacement attributes	core selection mixin shallow copy obj obj_type	0.166667
left and right index are equal	util assert index equal left right exact	0.333333
the union of two multiindex objects sorting	core indexes multi index union other	0.066667
i	i	0.333333
get instances of all the classes	all	0.043478
initializes or resets _id attribute with new object	core indexes index reset identity	0.250000
make a copy of	indexes multi index copy	0.166667
return result as series or	axis level	0.125000
convert timeseries to specified frequency	asfreq freq method how	0.250000
sanitize input data	sanitize array data index dtype	0.250000
a delegatedclass of a series that is datetimelike	to datetimelike	0.125000
node	io hdfstore append key value format	0.016667
header	io pop header	0.100000
to convert datetime-like	cmp opname nat_result	0.066667
function for this argument return	func arg	0.214286
bind a method to class	bind method cls name func	0.200000
render a dataframe	formats data frame formatter	0.600000
multiindex compute	indexes multi	0.014493
numpy array	array	0.013889
panel	core panel	0.115385
our binners	core resampler set binner	0.333333
add the series	core ndframe add series	1.000000
compute a simple cross-tabulation of	index columns values	0.037037
corresponding to axis labels matching criteria parameters	ndframe select crit axis	0.250000
helper function to determine if dtype	n method dtype	0.250000
a custom template and	custom template	0.250000
array of timestamps	indexes period index asof locs	1.000000
we have a compatiable fill_value	fill_value	0.033333
file node must already exist and be table	hdfstore append key value format	0.016667
shift the block by periods possibly upcast	core block shift periods axis mgr	1.000000
exponential weighted sample covariance	ewm cov other pairwise bias	1.000000
should be truncated if so slices	formatter chk truncate	1.000000
this	core dtypes interval	1.000000
apply a function column-wise row-wise or table-wase updating	formats styler apply func axis subset	1.000000
make new index with passed location -s deleted	indexes categorical index delete loc	0.333333
the item of the	core	0.001326
scipy sparse coo_matrix from	sparse sparse series to coo row_levels column_levels sort_labels	0.058824
stata	stata elapsed date	1.000000
the stata date formats to a type in	convert datetime to stata type	0.200000
value	array formatter value	0.250000
set the	io generic index	0.500000
read csv file (discouraged	from csv cls path header sep	0.066667
produce 'pivot' table based on 3	core reshape slow pivot	0.333333
for this	index col	0.066667
a	period index resampler	0.125000
:meth	inplace limit downcast	0.333333
dummy variables corresponding to designated axis labels	core reshape make axis dummies frame axis transform	0.166667
object that	io html frame parser build	0.014706
expression that is in the term	computation	0.038462
nat which has the same	nat new box	0.050000
new item	item	0.050000
making this object picklable	indexes multi index reduce	0.333333
gets	core indexes period	0.032258
tree-like	html frame parser build	0.014706
a boolean whether i can attempt conversion to	indexes is convertible to index other	0.333333
to table in file node	append key value format	0.016667
tuples	tuples cls	0.250000
evaluate the block return result	eval func other raise_on_error	0.200000
returns the float values converted into strings	formats float array	0.055556
detect whether the installed version of	compat major_ver	0.083333
the	period	0.016667
the array interface return	array dtype	0.125000
indices where elements of v	frozen ndarray searchsorted v	0.033333
object	msgpack packb	0.025641
on 3 columns of	index columns values	0.037037
apply we are stripping all	by mixin apply func name	0.050000
the nan/nat	val	0.058824
of value from 1-dimensional ndarray	indexes period index get value series key	0.071429
seconds (>= 0	core indexes timedelta index seconds	0.066667
bins to which each	bins	0.090909
of the flattened values of	index ravel order	0.037037
value to	value	0.005155
if categoricals are the same dtype	dtype equal other	0.250000
the classes which represent time-seires	timeseries index	0.333333
a dataframe the levels in	data values	0.062500
subclass of styler with a custom template and	styler from custom template	0.142857
float values converted into strings	formats float array formatter get result as	0.055556
series excluding missing values parameters	core series	0.008000
are a series	series group	0.030303
of the data	core data frame	0.005917
a moving window of	window	0.071429
having a singular 'name' parameter for general index	core indexes index	0.007042
keeps track of whether	core computation set test mode v	0.142857
sort multiindex at the requested level the	indexes multi index sortlevel level	0.250000
create a timegrouper and return our resampler	resample obj kind	0.083333
return index	index	0.004008
attributes e g freq	attributes attrs	0.166667
fast lookup of	indexes index set	0.023810
dataframe	formats data frame	0.272727
corresponding interval with	interval	0.029412
functions	ndframe rename axis	0.333333
the dtype from a scalar parameters	core dtypes infer dtype from scalar	0.500000
need to coerce a	maybe coerce	0.125000
at particular time of	ndframe at time time	0.066667
to an xlsxwriter format object	xlsx writer convert to style	0.500000
generator through chunked result set	io sqltable query iterator result chunksize columns coerce_float	0.250000
offsets index to beginning of period	offset beg apply index i	0.333333
to shift without copying data the shifted data	core ndframe slice shift	0.083333
the len of	size	0.041667
gets called after	core series array	0.100000
take the codes by	core categorical take	0.200000
called	core	0.003979
generator which can be iterated over to	generator k	0.333333
preserve dtype if possible	putmask smart v m n	0.055556
index	index data index copy	1.000000
_constructor_sliced-like objects to either	panel homogenize dict frames intersect dtype	0.142857
hack to accelerate unioning a collection	union many others	0.040000
difference between index values and index	indexes datetime index	0.007634
or all of the data are	core data frame	0.005917
dataframe objects and do not propagate	data frame	0.005714
if the process of casting	index assert safe casting	0.125000
getitem defers to the	getitem	0.125000
unstack a k a pivot series	core series unstack	0.333333
by the indexer fill with the	indexer	0.009174
value occupying requested label default to specified	get label default	0.083333
to ndarray raises on scalar data	index coerce to ndarray cls data	0.166667
values to be at	core block shape values	0.050000
convert a	ndframe indexer convert	0.500000
parse the raw data into	io html frame parser parse raw data rows	0.250000
be applied on each value	value formatter float_format threshold	0.100000
an index	index col	0.066667
an internal non-public method*	indexes categorical index create categorical data categories ordered	0.333333
block manager from a dataframe of series	to manager sdf columns	0.052632
object that can be used to	html frame parser build	0.014706
a compatiable fill_value and arr dtype then fill	maybe fill arr fill_value	0.333333
new unit if	datetime tzdtype new cls unit	0.055556
to convert datetime-like to	cmp opname nat_result	0.066667
file node must already exist and	key value	0.011628
if we define an builtin function for	base grouper is builtin func arg	0.333333
to an ndarray copy if specified	copy	0.012821
self as a sparse array	core sparse sparse series as sparse array	0.250000
if we if the passed type is	dtypes interval dtype is	0.066667
after	series array wrap result	0.100000
specialized intersection for datetimeindex objects may be much	core indexes datetime index intersection other	0.142857
a tree-like	html frame parser	0.012658
checking function of type t or tuple of	core computation is type t	0.083333
we want to set the	core series set	0.076923
intersection of two index objects sortedness of	core indexes range index intersection other	0.083333
exist and	key value	0.011628
resampler	resampler	0.089286
value from 1-dimensional ndarray only use this if	set value arr key value	0.038462
stack	stack	1.000000
return a view of myself	core categorical view	0.111111
in the series extract groups from the	str extract frame arr	0.047619
indexer cannot enlarge its	setitem indexer indexer	0.200000
from a uri if con is a string	builder con	0.333333
along minor axis parameters	minor xs key	0.500000
return a list of normalized locales that do	util valid locales locales	0.050000
of a series that is datetimelike (e	indexes maybe to datetimelike	0.142857
multirow e	io formats latex formatter format multirow	0.250000
timeseries to specified frequency	ndframe asfreq freq method how normalize	0.250000
styler removing any previously applied styles	formats styler clear	0.333333
generator which can be iterated over	generator k	0.333333
number of microseconds (>= 0	timedelta index microseconds	0.066667
to left <=	left	0.018519
series using mapper dict or key	level as_index	0.111111
vertical	vertical	1.000000
to timedelta	timedelta index	0.045455
slice of my	slice slicer	0.070175
check a sequence of terms for instances of	terms	0.034483
a latex representation for a particular dataframe	core data frame repr latex	0.333333
to add default implementation of ops	core computation add ops op_classes	0.333333
from 1-dimensional	indexes index set value	0.023810
index objects contain the same	core indexes index	0.007042
dateoffset increments between business eom dates	byear end	1.000000
for a tz-aware type return	io get tz tz	0.066667
i am never a	block	0.008197
indexer like _name in	indexer cls name indexer	0.083333
keeps track of whether numexpr	computation set test mode v	0.142857
apply the	offset apply index	0.250000
can be used to iterate over	frame	0.009091
operations to the groupby	operations cls	0.038462
perform generic binary operation with optional fill value	core series binop other func level fill_value	0.500000
sub-classes to	selection mixin gotitem key ndim subset	0.333333
determine	match arr pat	0.166667
to capture stderr in a	util capture stderr f	0.055556
types format slicing if	types slicer na_rep	0.200000
return a list of normalized locales that	util valid locales locales normalize	0.050000
cast	timestamp freq how	1.000000
a	core indexes index array	0.100000
for this colummn	attr	0.125000
add the	ndframe add	0.500000
union of two index objects and	core indexes index union other	0.083333
if two indices overlap add	overlap	0.047619
see dataframe pivot	reshape pivot	0.166667
to table in file node must	append key value format	0.016667
the series extract groups	str extract frame arr	0.047619
indices overlap add suffixes to	core items overlap	0.062500
and 'kwargs' should be empty except for	groupby func name args kwargs	0.166667
instances of pandasobject	any pandas objects	0.250000
interpolate values	core resampler interpolate	0.166667
bytes in the	indexes range index nbytes	0.052632
never a	core	0.001326
given a tuple of slices/lists/labels/boolean indexer	get	0.007143
in file node must	value format	0.016667
fixed frequency timedelta index with day as	core indexes timedelta range start end periods	0.083333
we require the	indexes datetime index simple new cls	0.250000
file node must already exist and	io	0.003012
nat-like arg	arg	0.018868
unit	cls unit tz	0.125000
whether the installed version of openpyxl is supported	is compat major_ver	0.111111
be applied on each value to	float array formatter value formatter float_format threshold	0.100000
check that the left	left	0.018519
a concise listing of available options	pp options list keys width _print	0.111111
wide format into long stacked format as dataframe	core panel to frame	0.125000
string-like that is	string array	0.038462
index names to 'index'	set default names data	0.083333
be applied on each value to format	formats float array formatter value formatter float_format threshold	0.100000
dtype and n/a values to	core get empty dtype and	0.125000
i : int slice or sequence of integers	data frame ixs i axis	0.200000
are mapped to their default values as specified	default values	0.200000
for general index and	core indexes index validate	0.066667
from 1-dimensional	indexes	0.004651
jinja environment	cls searchpath name	0.500000
'info axis' see indexing for	keys	0.032258
table in	io hdfstore append key value	0.016667
the repr should show the info view	info repr	0.333333
create a table	io sqlite table create table	0.166667
cartesian product	sort	0.083333
return a categorical adjusted for groupby	categorical index codes for groupby sort	0.333333
indexer like _name	name indexer	0.083333
passed a list-like indexer return	convert list indexer keyarr kind	0.066667
packed bytes see :class	io msgpack packb	0.025641
of a	timedelta	0.022222
an array of	hash array vals	0.083333
pack	io msgpack	0.025000
see :class packer for options	io	0.003012
of myself	core	0.002653
value from 1-dimensional ndarray only use this	core indexes categorical index get value series key	0.100000
for each group	core group by	0.111111
datetime date objects (namely the	indexes datetime index	0.007634
decons	decons	1.000000
the underlying	range	0.047619
of the inferred types one for each level	indexes multi index inferred type levels	0.333333
boolean if	is dtype	0.250000
conform	conform	1.000000
array interface return	index array result	0.125000
and plural 'names' parameter	name names deep	0.125000
same as values	core sparse sparse series get values	1.000000
must already exist	hdfstore	0.014925
return a tree-like object that can be used	frame	0.009091
is not supported for panel objects and will	core panel to sparse	0.037037
return our new index	resampler get new index	1.000000
ufunc needs	index array wrap result context	0.034483
parse specified sheet	file parse	0.125000
try to	core selection mixin try	0.250000
value from 1-dimensional ndarray	core indexes period index get value series	0.071429
base freq and stride	base and stride	1.000000
return the	multi index	0.020000
parameter if	core categorical validate ordered	0.055556
millisecond or microsecond	core indexes datetime index ops mixin resolution	0.125000
the stata date formats to	io convert datetime to stata	0.111111
and be	key value format	0.016667
is called upon unpickling rather than	core indexes new datetime index cls d	0.111111
create the grouper indexers	grouper obj key	0.142857
sets names on levels	index set names names level	0.200000
manager for temporarily setting a locale	locale new_locale lc_var	0.250000
returns the float values converted into strings using	io formats float array formatter get result as	0.055556
function is called via the 'numpy' library	validate take with convert convert args kwargs	0.055556
lookup	set value arr	0.023810
the reindex for all the	reindex	0.062500
apply we are stripping all of	by mixin apply func	0.050000
check value is valid for scalar op	assert can do op value	1.000000
a fixed frequency datetime index with custombusinessday as	indexes cdate range start	0.083333
types format slicing if desired	types slicer na_rep	0.200000
accessor	period	0.016667
perform the reduction type operation if we	ops mixin reduce op name	0.083333
stop parameter	stop cls	0.066667
already exist	format	0.012346
sets names on levels warning	core indexes multi index set names names	0.200000
full scope for use with passing	core computation scope full scope	0.055556
positional indexer cannot enlarge its target	ndframe indexer has valid positional setitem indexer indexer	0.052632
of value from 1-dimensional ndarray only use	index set value arr key value	0.038462
given quantile a	series quantile	0.083333
function for series arithmetic operations	arith method series op	0.333333
index objects and sorts	indexes range index	0.021277
function to group return result as series or	axis level	0.125000
a particular axis with	axis join	0.142857
ndarray	sparse series	0.250000
exist	append key	0.016667
return the slice	slice	0.038462
compute the symmetric difference of two index objects	core indexes index symmetric difference other	0.166667
called after a	period index	0.024390
use	index	0.002004
slice dictionary for these axes	extract axes for slice axes	0.333333
if we have mixed	multi index have mixed	0.166667
bytes	msgpack packb	0.025641
that path's extension against the	check extension cls	0.125000
single column from the table this is	key	0.005051
array	array array	1.000000
return if the data is sparse|dense	core series ftypes	0.250000
frequency datetime index with business day as the	indexes	0.004651
gets called after a ufunc needs	wrap result context	0.029412
strings to	core tools to	0.250000
try to parse a ndarray like into	io json parser try convert	0.500000
series/index to be formatted in	str	0.017544
if we are index sliceable then return my	to index sliceable	0.083333
or ndarray filled with nat which has	mixin nat new	0.050000
of the sparsearray only the actual sparse values	core sparse sparse array	0.043478
the series extract groups from the first match	core str extract frame arr	0.047619
how to create the grouper indexers	grouper obj key axis	0.142857
'series argmin' is called via the 'numpy' library	numpy validate argmin with skipna skipna args kwargs	1.000000
dataframe with	core data frame	0.005917
construct an intervalindex from a	index from	0.090909
our native types format slicing if desired	native types slicer na_rep date_format	0.200000
we always want to return a	indexes period index shallow copy with infer values	0.200000
vectorized membership of x in y if	computation in x y	0.047619
length	core	0.001326
box function	indexes datetime index ops mixin box func	0.142857
enter context manager	io stata reader enter	1.000000
dataframe major_axis for panel	core ndframe iteritems	0.055556
use	value	0.005155
unit if needed otherwise return from	unit	0.066667
series excluding elements from groups	series group	0.030303
additional handling	array wrap	0.025000
exclusions	exclusions	1.000000
convert the frame to its numpy-array representation	ndframe as matrix columns	0.200000
be	build	0.013514
data	data subarr	0.333333
xport file	io sas xport	1.000000
fixed frequency datetime index with custombusinessday as the	indexes cdate range start end periods	0.083333
gets called after	indexes index array wrap	0.100000
infer better dtype for object columns	convert datetime numeric timedelta coerce	0.071429
columns for	core ndframe	0.005051
of type t or tuple of types	type t	0.083333
apply we are stripping all of the	mixin apply	0.050000
for series columns for dataframe and	core ndframe	0.005051
downsample the cython defined	core datetime index resampler downsample how	0.200000
the len of myself	core categorical size	0.111111
the 'numpy' library the third	numpy validate take with	0.055556
and return an item pair from	chain map popitem	0.055556
dict of the counts of	counts f	0.041667
overrides ndarray argsort	series argsort	0.083333
indexer input array to the smallest dtype possible	dtype indexer categories	0.333333
a list of my values cols	io table values cols	0.200000
ftypes in	ftype	0.076923
to compare numeric	numeric	0.052632
lookup of	set	0.012195
apply aggregation function or functions to resampled	aggregate arg	0.071429
try hard to parse	core tools parse	0.125000
time strings to time	to time	0.125000
object that	frame	0.009091
background_gradient that don't break with non-numeric data	core maybe numeric slice df slice_ include_bool	0.500000
is found in the	mixin isin values	0.166667
only use	core indexes index set	0.023810
:	formats excel formatter write	1.000000
if we will be using numexpr	computation can use numexpr op op_str	0.333333
lc	lc	0.833333
as	core indexes period index array wrap result	0.050000
routine to turn values into codes given	get codes for values values	0.250000
number of bytes in	indexes multi index nbytes deep	0.052632
to table in	append key value format	0.016667
of unique elements in	nunique dropna	0.125000
index objects	indexes datetime index ops	0.034483
result	result mask	0.500000
value from 1-dimensional ndarray only use	core indexes index set value arr key value	0.038462
array and create the manager	array to mgr data index	1.000000
called after a ufunc	core indexes index array wrap result context	0.200000
set the	io index	0.222222
over the blocks collect and	f axis consolidate transposed	0.062500
last non-na/null value	core series last valid	0.250000
whitespace including newlines from	to_strip side	1.000000
return an evaluated expression	core computation abstract engine evaluate	1.000000
of bytes in the underlying data	nbytes deep	0.052632
function or functions	ndframe rename axis mapper	0.333333
return a summarized representation	indexes datetime index ops mixin summary name	0.333333
gets the	get	0.014286
object encapsulating an expression	expr	0.050000
return a tree-like object that	parser build	0.014706
to determine if dtype is valid	select n is valid dtype n method dtype	0.142857
return a tree-like object	frame parser build	0.014706
numpy array of datetime time the	core indexes datetime	0.011494
numpy / pandas type to	type x	0.055556
from the first match of regular expression pat	arr pat flags	0.125000
new index with passed location -s deleted	core indexes categorical index delete loc	0.333333
values at particular time	at time time asof	0.066667
convert timedelta-like to	core indexes td index cmp opname	0.055556
gets called after	period index array	0.050000
a single non-tuple indexer which could be	indexer indexer target	0.071429
by the indexer fill	nd indexer	0.015152
gets called prior to	core series array prepare result	0.111111
generate bin edge offsets and bin	core generate	0.125000
copy of the list	sparse sparse list copy	0.500000
return a tree-like object that can be used	io	0.003012
try to read from	read obj	0.058824
raw data	raw data rows	0.500000
dtype converting float	value dtype errors	0.333333
form the union of two index objects	range index union other	0.083333
format dataframe	data frame	0.005714
true if this is	is in table	0.076923
for the dtype of	dtype	0.010989
of casting data from some accepted	safe casting cls data	0.047619
called via the 'numpy' library the	compat numpy validate take with	0.055556
return a slice of my	tzblock slice slicer	0.083333
the view limits to the	date locator autoscale	0.055556
but using the interpolate machinery	block interpolate with fill method axis inplace limit	0.200000
the td elements from a row element	parse td obj	0.083333
creates	frame sanitize column key	0.333333
dtypes to	dtypes	0.015873
where elements of v should be	core indexes frozen ndarray searchsorted v	0.033333
center	center	1.000000
an openpyxl	cls	0.016949
ensure that our data is of the correct	core ensure data values dtype	1.000000
convert argument to datetime	core tools to datetime arg errors dayfirst	1.000000
implementing the plot attribute	plot	0.043478
named tuple	named tuple	0.500000
thrown	parser	0.008000
o and return packed bytes see	io msgpack packb o	0.055556
attempt to construct this type from a	categorical dtype construct from	0.166667
for a particular object	core dtypes extension dtype bytes	0.142857
axis indicies	core panel extract axes data axes	0.142857
which	new	0.058824
a replacement key defined will return the	core translate key key	0.333333
casting	core indexes numeric index assert safe casting	0.125000
multiindex on a particular axis	axis	0.022727
a class with a metaclass	compat add metaclass metaclass	0.125000
evaluate a python expression as a	core computation eval expr	0.083333
a tree-like object that	html frame parser build	0.014706
utility routine to turn values into codes given	get codes for values values	0.250000
append	format append	0.125000
an iterator	iterator	0.100000
of ops	ops	0.076923
_callable	_callable	1.000000
values from	convert values	0.333333
label for last non-na/null value	series last valid index	0.250000
to table in	io hdfstore append key value format	0.016667
internal method to handle na filling of take	multi index assert take fillable values indices	0.250000
byte	rands	0.166667
return the values & release the	index col take data	0.111111
ndarray only use this if	core indexes categorical index	0.047619
values between	core ndframe between	0.100000
manager with the blocks	manager combine blocks copy	0.250000
do need a	series needs	0.500000
input order may not drop	order	0.125000
a numpy array	array	0.013889
set my state from the	io index col set	1.000000
return an object with matching indices to myself	ndframe reindex like other method copy limit	0.111111
check that the exception raised	assert raises contextmanager	0.166667
new unit if needed otherwise	new cls unit tz	0.055556
a version to operate on as	block try operate values	0.125000
shift the block by periods	tzblock shift periods axis mgr	1.000000
this	set value	0.023256
iterate over the	io html frame parser build	0.014706
number of	core indexes range index	0.021277
series extract groups from the first match of	extract frame	0.047619
called via the 'numpy' library the third	take with	0.055556
a fixed frequency datetime index with day	indexes period range start end periods freq	0.083333
in file node must already	append key value	0.016667
dataframe including/excluding columns based on their dtype	core data frame select dtypes include exclude	0.500000
for series arithmetic operations to avoid code duplication	arith method series op name str_rep fill_zeros	1.000000
lookup of value from 1-dimensional ndarray only use	categorical index get value series key	0.100000
scipy interpolate interp1d method is scipy's kind	interpolate scipy wrapper x y new_x method	0.500000
array return an array	util hash array vals	0.083333
op string for this	bin op generate	0.066667
decorator to take optional positional and keyword arguments	optional args decorator	0.083333
if we are a	core dtypes is	0.021277
return the formatted data as a unicode string	core indexes index formatter func	0.083333
strings to time	tools to time	0.125000
array of whether each index value is	core indexes datetime index ops	0.034483
hard to parse datetime	core tools parse time	0.125000
column and index parameters	data frame set value index col	0.333333
if you	key	0.005051
that we have	block is	0.045455
of x	x	0.130435
an enumerated type or categorical	factorize	0.100000
wrap comparison operations to convert timedelta-like to timedelta64	td	0.043478
index to be returned from apply if as_index=true	index with as index b	1.000000
create the join wrapper methods	ops mixin join i8 wrapper joinf dtype with_indexers	0.333333
manage style and color	mplplot apply style colors colors kwds col_num	0.142857
if	core indexes index set value	0.023810
midnight	indexes datetime index	0.007634
we have a full	is full	0.500000
attribute if it has	core	0.001326
pandas	pandas	0.178571
new extended blocks givin the result	core extend blocks result blocks	0.333333
list of tuples of the (attr formatted_value)	indexes multi index format attrs	0.142857
convert alignment_dict to an openpyxl v2 alignment object	io openpyxl20writer convert to alignment cls alignment_dict	0.500000
coerces data to ndarray raises on scalar data	core indexes index coerce to ndarray cls data	0.166667
gets called	result	0.049180
indices overlap add suffixes to overlapping entries	items overlap with suffix left lsuffix right rsuffix	0.333333
a new sparsearray from the	core sparse sparse data	0.076923
handle na filling	fillable values indices allow_fill	0.125000
block we must	non consolidatable mix in	0.083333
boolean mask of index to be	index b	0.041667
csv	csv	0.200000
a new categorical by	categorical sort	0.166667
a full length slice	full slice obj l	0.333333
from 1-dimensional ndarray	arr	0.013699
with times to midnight length	datetime index	0.007042
determines if two index objects contain the same	indexes float64index equals other	0.200000
the series/index by	core str	0.034091
coerce a scalar to a compat for our	coerce scalar to	0.071429
or ndarray filled with nat which has	mixin nat new box	0.050000
unit if needed otherwise return from	cls unit tz	0.125000
take the	core categorical take	0.200000
dispatch to apply we	core group by mixin apply	0.050000
1-dimensional ndarray only	key	0.005051
return datetimeindex with times	core indexes datetime index	0.007634
app	app	1.000000
an indexed column	index col is indexed	0.200000
supported for panel objects and will raise an	panel to sparse	0.037037
a scatter plot from two dataframe columns	plotting scatter plot data x	0.125000
closest period	tseries get period	0.333333
returns *copy* of underlying array	frozen ndarray values	0.250000
the background	io formats styler	0.021277
to	io hdfstore append key value format	0.016667
coerce any object types to better types	core object block convert	0.083333
the rows of a dataframe	core data frame	0.011834
the underlying data	index	0.004008
values converted	values	0.008547
number of bytes in the	indexes multi index nbytes deep	0.052632
to tag	computation replacer x	0.125000
times to midnight length	indexes	0.004651
csv	csv cls path	0.066667
be	parser	0.008000
raised matches the expected exception and expected	assert raises contextmanager exception matches exc_type exc_value trace_back	0.333333
series/index by indicated	str repeat	0.200000
csv file (discouraged	csv	0.057143
best locator based on a	pandas auto date locator get locator	0.062500
panel objects and will raise	panel	0.017857
applies a moving window of type window_type on	window mean how	0.166667
data	io table validate data	0.500000
fixed frequency timedelta index with day as the	core indexes timedelta range start end	0.083333
an positional indexer cannot enlarge its	indexer has valid positional setitem indexer indexer	0.052632
new_categories	new_categories	1.000000
fast lookup of value from 1-dimensional ndarray only	indexes index set value arr key value	0.038462
from ndarray	index columns	0.028571
backward to	rollback	0.076923
we by definition have do not have a	formats datetime64formatter format strings	0.090909
an indexer coerced to the codes	categorical maybe coerce indexer indexer	0.125000
lookup of value from 1-dimensional ndarray only use	indexes datetime index get value series	0.071429
index objects contain the same elements	core indexes datetime index ops mixin	0.029412
not dtype instance associated with an array or	arr_or_dtype	0.047619
return a list of normalized locales that do	util valid locales locales normalize	0.050000
you	indexes index set value	0.023810
compute covariance with	cov other min_periods	1.000000
the array interface return my values	core indexes multi index array dtype	0.125000
for this level	level	0.043478
don't allow a multi reindex on panel or	core panel needs reindex multi axes method	0.500000
only use this if	indexes index set value	0.023810
locator	locator get locator	0.062500
given an interval or intervalindex return the	indexes get	0.125000
converts a style_dict to an xlwt style	xlwt writer convert to style cls style_dict num_format_str	0.500000
a multiindex	core indexes multi index	0.013158
try to parse a ndarray	try convert data name	0.200000
write records stored in a	name if_exists index	0.500000
convert tz-aware axis to target time	core ndframe tz convert tz axis	0.200000
str df in both py2/py3	core dtypes extension dtype str	0.250000
parse datetime string	tools parse time string	0.250000
inserting new item at location	index insert loc item	1.000000
table in file node must	key value format	0.016667
a cross sectional for a given location	core block manager fast xs loc	0.166667
new block if	core block	0.010870
that can safely be cast to an	name val min_val	0.083333
compare numeric	core dtypes is numeric v string	0.333333
index objects contain	core indexes index	0.007042
update index attributes e	timedelta index maybe update attributes	0.200000
from 1-dimensional ndarray only	core indexes index	0.007042
the indices that would sort the index	range index argsort	0.166667
bytes see :class packer for	msgpack	0.022222
the interpolate machinery	block interpolate with fill method axis	0.200000
downsample	core period index resampler downsample how	0.200000
dispatch to apply we	mixin apply	0.050000
for a type checking function of type	type	0.024390
we need to coerce a	core indexes period index coerce	0.125000
a list-like indexer return the	convert list indexer keyarr kind	0.066667
builds a concise listing of available options grouped	options list keys width _print	0.111111
best locator	get locator	0.062500
normalized locales that do	util valid locales locales normalize	0.050000
for panel objects and will	core panel to sparse	0.037037
times	indexes	0.004651
a boolean if we are	is	0.005291
return the op string for	core computation bin op generate	0.066667
(e g	maybe	0.090909
nanargmax	nanargmax	1.000000
drop 2d from panel holding passed axis constant	core panel dropna axis how inplace	0.200000
cparser	cparser	1.000000
format	format datetime64 from	0.250000
to a tabular environment table you can splice	to latex buf columns col_space header	0.200000
object that can be used	html frame parser build	0.014706
get integer	indexes categorical index get	0.500000
a potentially unordered list of the keys corresponding	keys	0.032258
from a string raise a typeerror	from string cls string	0.250000
sure that time and	ensure like indices time	0.125000
value to format it	io formats float array formatter value	0.250000
called	index	0.004008
helper function to convert dataframe	data rowlabels collabels	0.333333
must already	append key value	0.016667
return a fixed frequency datetime index	indexes bdate range start end periods	0.083333
exist	append key value	0.016667
return a tree-like object that can be	build	0.013514
that left and right index are equal	util assert almost equal left right check_exact check_dtype	0.333333
check that left and	left	0.074074
series/index by indicated number	str repeat arr	0.200000
resample of	index resampler	0.065217
the minimum value of	core index ops mixin min	0.125000
/ pandas type to its corresponding json_table	json as json table type x	0.250000
read text from clipboard and pass	read clipboard	0.200000
returns day hour minute second millisecond or microsecond	indexes datetime index ops mixin resolution	0.125000
split each string in the series/index by the	core str	0.011364
num	num	1.000000
is supported parameters	is	0.005291
if you	indexes	0.004651
table in	value	0.005155
putmask that potentially upcasts	dtypes maybe upcast putmask	0.200000
meta data array	table read metadata	0.500000
will be using numexpr	use numexpr op op_str	0.333333
builtin	builtin	0.714286
ordered data like time series data	ordered	0.017857
of the stata date formats to a	convert datetime to stata	0.111111
single block and	block manager	0.021277
packed bytes see :class packer for options	io msgpack packb	0.025641
parameter	core categorical validate ordered	0.055556
ndarray filled with nat which has the same	ops mixin nat new	0.050000
class for writing stata binary	frame to stata fname	0.200000
specialized shift	index ops mixin shift n freq	0.250000
starargs attribute was changed	base expr visitor visit call 35 node side	0.066667
null_color	null_color	0.461538
with a tz attribute	datetime	0.006711
datetime date objects (namely	indexes datetime index	0.007634
only use this if you	core	0.001326
over the blocks collect and create a	axis consolidate transposed	0.062500
concatenation of an	dtypes concat datetime to_concat axis	0.125000
read csv	series from csv cls	0.066667
of label values for requested level	index get level values level	0.250000
convert to our native types format	core categorical block to native types	0.250000
object in hdfstore parameters	hdfstore put key	0.333333
a fixed frequency datetime index with day calendar	core indexes period range start end periods freq	0.083333
a list of the axis indicies	panel extract axes data axes	0.142857
copy of	multi index copy	0.166667
return the block manager from a dataframe	sparse to manager sdf columns	0.052632
a frame table	appendable series table	0.200000
string and	index parsed string to	0.500000
want to take the cross-product	core maybe convert ix	0.166667
new type (if copy=true return a new copy)	core block astype dtype copy errors values	1.000000
rewrite the assignment operator for pytables expressions that	computation rewrite assign tok	0.125000
gradientfill stop	stop cls	0.066667
the numeric	index add numeric	0.250000
number of bytes in the underlying data	core indexes multi index nbytes	0.052632
of tuples of the (attr formatted_value)	core indexes range index format attrs	0.142857
method to handle na filling of take	take fillable values	0.250000
2d-nd reshape operation on a blockmanager	core block manager reshape nd axes	0.500000
a new datetimeindex with passed location s deleted	indexes timedelta index delete loc	0.500000
a given set a rules normally	calendar init name rules	0.200000
that the left and right	left right	0.047619
take	core take nd arr	0.125000
drop	drop	0.833333
return datetimeindex with times to	core indexes datetime index	0.007634
we have	core indexes multi index have	0.142857
internal compat with selectionmixin	core ndframe selected obj	1.000000
an iterator over the boxed values	indexes datetime index iter	0.250000
to	datetime to	0.100000
return a new datacol with	name cname	0.111111
(for this class it's just __class__	pandas object	1.000000
csv file (discouraged please use	core data frame from csv cls path	0.066667
write this as a frame table	series table write	0.400000
packed object return	packed	0.100000
the same as index	indexes index	0.007353
unique elements of arr1 and arr2	contents arr1 arr2	0.066667
simple cross-tabulation	index columns values	0.037037
fast lookup of value from	indexes index set value arr key value	0.038462
sure that time and panels are conformable	like indices time panels	0.250000
operations to convert timedelta-like to	indexes td index cmp opname	0.055556
file-like	file like	0.500000
of axis dimensions	ndframe shape	0.200000
iterrows	iterrows	1.000000
subclass of styler with a custom	formats styler from custom	0.200000
interpolate values according to different methods	resampler interpolate method axis limit	0.166667
init self from	sparse sparse data frame init	0.500000
columns for dataframe and major_axis for	core	0.001326
to shift without copying data the shifted	ndframe slice shift periods	0.083333
the node with the key or	get node key	0.083333
series excluding elements from groups that do	core series group	0.030303
shade the background	io formats styler highlight	0.500000
cumulative sum for each group	group by cumsum axis	1.000000
cast to the specified dtype	dtype result dtype	0.142857
return index or ndarray filled	index ops mixin	0.019231
that we	categorical validate ordered	0.055556
object that can	html frame parser	0.012658
a common sparseindex corresponding to	homogenize series_dict	0.047619
append	key value format append	0.125000
read text from clipboard and pass to read_table	read clipboard sep	0.200000
elements that are non-zero this method is	core series nonzero	0.166667
parse	parse	0.310345
_regexp	_regexp	1.000000
dataframe sort_index	data frame sortlevel level axis	1.000000
for valid	has valid	0.500000
to determine if dtype	dtype n method dtype	0.250000
at particular time of day e	ndframe at time time	0.066667
float is formatted in dataframe	eng float	0.200000
get integer	indexes timedelta index get	0.500000
setup	set	0.036585
values between particular times of	core indexes datetime index indexer between	0.125000
generate the selection	io selection select coords	0.500000
additional handling	indexes period	0.034483
an ordered multiindex compute the	core indexes multi index	0.013158
axis indicies	panel extract axes	0.142857
render	formats styler render	0.142857
particular time	time time	0.142857
a slice of	tzblock slice slicer	0.083333
fixed frequency timedelta index with day as	indexes timedelta range start	0.083333
we take a string-like that	string array data encoding	0.038462
try to	try	0.181818
sets the view limits to the nearest	date locator autoscale	0.055556
a version to operate on	core datetime like block mixin try operate values	0.333333
our axes compute the expected nrows	table nrows expected	0.142857
create and return the block manager from a	sparse to manager sdf columns	0.052632
the file begins with the bom character	bom first_row	0.500000
functions	core ndframe rename axis mapper	0.333333
dispatch to apply we	by mixin apply	0.050000
series excluding elements from groups that do not	series group	0.030303
render a dataframe as an html table	core data frame to html buf columns col_space	0.500000
cross-tabulation of	reshape	0.037037
the reduction type operation if we	index ops mixin reduce op name	0.083333
implementation	index ops mixin	0.019231
do	src_list dest_list inplace	0.500000
name lookup and completion	pandas object dir	0.166667
an indexer	cls name indexer	0.083333
with blockmanager	core single block manager	0.400000
called after	series array	0.090909
to apply we are stripping all of the	group by mixin apply func	0.050000
converts json lists to line delimited json	json convert to line delimits s	0.200000
immutable ndarray	index	0.002004
o and return	o	0.043478
date forward	date	0.040000
datetimeindex from one time	core indexes datetime index	0.007634
return the maximum value of the index	indexes datetime index	0.007634
lookup of value from 1-dimensional ndarray only	categorical index get value series key	0.100000
called via the 'numpy' library the	with convert convert args	0.055556
this is generally only useful	column key column	0.142857
read csv file (discouraged please use :func	core data frame from csv cls	0.066667
for an ordered multiindex	indexes multi	0.014493
lookup of value from 1-dimensional ndarray	core indexes datetime index get value series key	0.071429
a sequence of objects	sequence	0.090909
new object with labels in requested axis removed	core ndframe drop labels axis level inplace	0.250000
value inplace return a new block (of a	core block setitem indexer value	0.333333
new index	categorical index	0.045455
might need to coerce a code	maybe coerce freq code	0.076923
binary	binary	1.000000
lookup of value from 1-dimensional ndarray only use	period index get value series key	0.071429
dtype then fill	maybe fill	0.500000
compute variance of groups excluding missing	core resampler var ddof	0.200000
sanitize input data to	sanitize array data	0.250000
are stripping all of the _upsample kwargs and	by mixin apply f	0.166667
this if	indexes index	0.007353
3 columns of this	columns values	0.037037
the reduction type operation	ops mixin reduce op name	0.083333
single	single	0.750000
infer this column from the table create and	index col infer handler	0.200000
representing a frequency guess generated by infer_freq	indexes datetime index ops mixin inferred freq	0.250000
underlying array which by-definition can	index ops mixin	0.019231
and a result set coerce the	coerce	0.025641
backward to next offset only if	rollback dt	0.125000
reindex for all	core ndframe reindex	0.125000
determines if two index objects contain the	index equals other	0.200000
this css syntax cannot currently be parsed	csswarning	1.000000
an index that	index value	0.142857
datetime format of a given datetime string	datetime format dt_str	0.250000
handling as	core indexes	0.004762
to apply we are stripping all	group by mixin apply func	0.050000
mid-point of each interval in the index as	interval index mid	1.000000
data as	indexes index	0.007353
filter	computation filter	1.000000
the float values converted into	io formats float array formatter get result	0.055556
a set of kwargs suitable for initializing or	kwargs cls	0.040000
from apply if as_index=true	index with as	0.200000
a cross sectional for a given	core block manager fast xs	0.333333
to accelerate unioning	union many others	0.040000
we have good categories	cls categories fastpath	0.250000
from the	index from	0.090909
a curve with holidays between start_date and	holidays start end return_name	0.066667
a categorical if	categorical arr	0.125000
pd read_csv	parser	0.008000
sets the view limits to the nearest	locator autoscale	0.055556
iterator over the	iter	0.090909
this if	index set value arr	0.023810
return a boolean if we need	index is	0.083333
returns the float values converted into strings	float array formatter get result as	0.055556
read csv file (discouraged please use	csv cls	0.066667
subclass of styler with	styler	0.022222
i with level j do not	i j	0.200000
interval in the	indexes interval	0.062500
*not*	other	0.013514
to shift without copying	shift periods axis	0.333333
myself	core	0.002653
specialized intersection	datetime index intersection other	0.142857
fast lookup of value from 1-dimensional ndarray	index get value	0.250000
dataframe that is intended to operate elementwise i	data frame applymap	1.000000
a simple cross-tabulation	index columns values	0.037037
a copy of	indexes multi index copy	0.166667
new multiindex	core indexes multi	0.028986
exist and be table	io hdfstore append	0.016667
lines 0) there are headers on row 0	python parser	0.250000
construct dataframe from dict	core data frame from dict cls data	0.200000
if the levels of both multiindex objects	indexes multi index equal levels other	0.100000
write out the binary	fname	0.071429
apply the	month offset apply	0.500000
create index with target's	index	0.002004
the number of	indexes multi index	0.013158
choose the parser based on the input	io parser dispatch	1.000000
return dense representation of ndframe as opposed	core ndframe to dense	0.111111
of a series that is datetimelike (e	maybe to datetimelike	0.142857
comparable timezone both for pytz / dateutil	indexes datetime index timezone	0.200000
a copy of a series excluding	core series group	0.030303
curve with holidays between start_date and end_date	tseries abstract holiday calendar holidays start end return_name	0.066667
and 'kwargs'	name args kwargs	0.166667
nanoseconds (>= 0 and less than 1 microsecond)	core indexes timedelta index nanoseconds	0.066667
multi-level index return new dataframe with labeling	core data frame	0.005917
form the union of two	index union other	0.037037
a series that is datetimelike (e	maybe to datetimelike data	0.142857
specialized intersection for datetimeindex objects	indexes datetime index intersection	0.142857
in file node must already	value format	0.016667
implementing an ordered sliceable set intervalindex	interval	0.029412
apply the given offset/observance to a	tseries holiday apply rule	0.200000
the dtype from a scalar or array parameters	dtype from array arr	0.500000
the float values converted into strings	io formats float	0.055556
we have a compatiable fill_value and arr dtype	arr fill_value	0.090909
datetimeindex with passed location s deleted	core indexes datetime index delete loc	0.333333
returns *copy* of underlying array	core indexes frozen ndarray values	0.250000
td elements from	io html frame parser parse td obj	0.083333
needs additional handling as	core indexes period index array	0.050000
deep copy by default	formats styler copy	0.500000
panel to a specified number of	core panel	0.019231
if	index set value	0.023810
return a single column from the table	io table	0.062500
datetimeindex with times to midnight	datetime index	0.007042
class	group	0.027027
object in hdfstore parameters	hdfstore put	0.333333
must already exist	io hdfstore append key value format	0.016667
the number	core indexes	0.009524
this if you	value arr key	0.023810
a list-like indexer return the	indexes interval index convert list indexer keyarr kind	0.066667
add numeric operations to the	group by add numeric operations cls	0.250000
sorted by the n largest values of	nlargest n	0.333333
by default	io formats	0.027778
the reduction type operation if	core index ops mixin reduce op name axis	0.083333
infer types of	io parser base infer types	0.500000
over the	html frame parser	0.012658
to apply we	mixin apply	0.050000
or list of lists	matrix	0.076923
is not supported for panel objects and will	panel to sparse	0.037037
specialized intersection for datetimeindex objects may be much	index intersection other	0.052632
read text from clipboard	read clipboard sep	0.200000
create a new multiindex from	multi	0.018182
of kwargs	kwargs	0.022222
of value from 1-dimensional ndarray only	indexes categorical index get value series key	0.100000
database	database	1.000000
apply we	group by mixin apply func	0.050000
out the binary feather-format for dataframes	core data frame to feather fname	0.083333
with level j do not change the ordering	j	0.034483
the parsed table element	io html frame parser parse tr table	0.200000
am	categorical	0.009615
return	indexes interval index	0.062500
compute standard deviation of groups	core group by std ddof	0.166667
the nan/nat from the provided	val	0.058824
hashable	hashable	1.000000
length	indexes	0.004651
return the header of a table	io html frame parser parse thead table	0.333333
fast	set	0.012195
wide	reshape wide	0.500000
other to int64 with null	other	0.013514
of value from 1-dimensional ndarray	indexes datetime index get value	0.071429
return a formatter function for	io formats get	0.100000
dataframes in vertical/horizontal	table	0.010870
try to parse a ndarray like into	parser try convert	0.500000
this if	value arr key	0.023810
data from google bigquery	read gbq query project_id index_col col_order	0.250000
must already exist	value	0.005155
index of the values set with the	core indexes index	0.007042
of whether each index value	index ops	0.033333
more this	core	0.001326
downsample the cython defined function	downsample	0.133333
to connect to	util can connect	0.111111
dispatch to apply we	group by mixin apply func name	0.050000
return my self as	sparse sparse series as	0.125000
radviz -	radviz	0.100000
create and return the block manager from a	manager sdf columns index	0.052632
construct this type from	dtypes interval dtype construct from	0.166667
index objects and	range index	0.021739
coerces data to ndarray raises on scalar	indexes index coerce to ndarray	0.166667
sub-classes to	core selection mixin gotitem key ndim subset	0.333333
read csv file (discouraged please use :func pandas	csv cls	0.066667
am never	is	0.005291
according to resolution	slice bound	0.200000
to numpy	numpy	0.090909
the totally ordered cartesian product of	labels shape sort xnull	0.066667
array of timestamps	core indexes period index asof locs	1.000000
valid ordered parameter	ordered	0.017857
in the object are unique	unique	0.090909
apply a function	func	0.035714
indexer cannot	indexer indexer	0.071429
timedelta-like to	indexes td index cmp opname nat_result	0.055556
array must be sparseseries or sparsearray	maybe to sparse array	1.000000
forward to the	core sparse sparse series get val at loc	0.250000
is	ndframe	0.005025
return series without null values returns	core series dropna axis inplace	1.000000
use this if you	arr	0.013699
single block	core block	0.010870
not a floating	maybe cast indexer	0.200000
'series argmin'	skipna skipna args kwargs	0.100000
change string like dtypes to object for dataframe	core dtypes invalidate string dtypes dtype_set	0.200000
indexes	core indexes	0.004762
a list of normalized locales that	util valid locales locales normalize	0.050000
a scatter plot from two dataframe columns	plotting scatter plot data	0.125000
an positional indexer cannot enlarge	valid positional setitem indexer indexer	0.052632
new categorical by default	core categorical sort	0.166667
index with	core indexes period	0.032258
index or ndarray filled with	indexes datetime index ops	0.034483
temporarily set a parameter value using	value	0.005155
get op dispatcher returns _op or _timeop	core op get op cls left right name	1.000000
the series extract groups from the first	extract arr	0.066667
additional	array wrap result	0.025000
dataframe as	data frame	0.005714
exception that is thrown by	parser	0.008000
only use this	indexes index set value	0.023810
_convert_string_array	io unconvert string array data nan_rep encoding	1.000000
build an xpath expression to	build xpath expr	0.200000
duplicates	duplicates	1.000000
must be sparseseries	maybe to	0.250000
the reindex for	ndframe reindex	0.125000
to shift without copying data	ndframe slice shift periods	0.083333
object is dict-like	dtypes is dict like obj	1.000000
the binary feather-format for	core data frame to feather fname	0.083333
determines if two index objects contain the same	range index equals other	0.200000
public verson of axis assignment	core ndframe set axis axis labels	1.000000
string-like and string-like array to convert object dtype	dtypes maybe convert string to object	0.142857
with labels on given axis	axis	0.011364
columns	inplace	0.027778
a sparse array	sparse array	0.285714
to table in file node must already	hdfstore	0.014925
pretty representation	fixed unicode	0.333333
number of bytes in	nbytes	0.046512
new dataframe with labeling information in the	core data frame	0.005917
to write text representation of object to the	core ndframe to	0.040000
in a block of same	block make block same	0.333333
to be applied on each value	value formatter float_format threshold	0.100000
to get lines 0) there are headers	python parser get index name	0.166667
the number of	core indexes range index	0.021277
item	loc item	0.500000
return a fixed frequency datetime index with business	core indexes bdate range start	0.083333
of this data	core series	0.008000
sets the view limits	series date locator autoscale	0.055556
mask of index	index b	0.041667
border	border	1.000000
copy if specified coerce to	dtype copy	0.032258
data	data columns	0.250000
validates	ordered cls	0.055556
/ or columns using input	axis copy inplace	0.055556
times to midnight	datetime	0.006711
dataframe with labeling information in the columns	core data frame	0.005917
block manager from a	to manager sdf	0.052632
a simple cross-tabulation	core reshape crosstab index columns values	0.066667
of python datetime date objects	datetime	0.006711
the last row without any nan is taken	core ndframe asof where	0.166667
index to be returned	index	0.002004
to apply	group by mixin apply func	0.050000
take a string-like	string array data	0.038462
are re-localized	localized result	1.000000
a ufunc needs	period index array wrap result context	0.041667
to be applied on each value	array formatter value formatter float_format threshold	0.100000
ndarray only use	index set value arr	0.023810
to infer better dtype	core ndframe convert datetime numeric timedelta coerce	0.071429
to cast the array/value to a datetimelike dtype	maybe cast to datetime value dtype errors	1.000000
returns value occupying requested label default to specified	get label default	0.083333
based indexer	indexer	0.009174
stata binary	frame to stata fname	0.200000
return true if this is a valid column	is in table	0.076923
ordered multiindex compute	core indexes multi	0.014493
running code that expects to raise or not	util assert produces	0.071429
: int slice or sequence	data frame ixs	0.200000
length is unaltered	core indexes datetime index normalize	0.125000
read from	read obj	0.058824
panel objects and	core panel to	0.027027
slice of this container	core ndframe slice slobj axis kind	0.333333
a string representation for this object	unicode	0.058824
class for writing stata	frame to stata	0.200000
qualified	qualified	1.000000
check that left and right	left right exact check_names	0.333333
the maximum value of the index	indexes datetime index	0.007634
if you	core indexes index set value arr	0.023810
pairwise correlation of columns excluding na/null	core data frame corr method	0.111111
from ndarray	data index columns dtype	0.125000
compute a simple	core	0.001326
interval	core indexes interval	0.062500
'args' and 'kwargs' should be empty	compat numpy validate groupby func name args kwargs	0.166667
needs additional handling	period index	0.024390
this if	index	0.002004
maps[0] raise keyerror is maps[0]	chain map	0.034483
to table	hdfstore append	0.016667
saturday or sunday use previous friday instead	tseries previous friday dt	0.250000
day as the default frequency	freq	0.032258
for	core sparse	0.041667
shift without copying data the	core ndframe slice shift	0.083333
query in a dataframe	data columns index_col coerce_float	0.333333
built up styles to html	io formats	0.027778
of the list	list	0.034483
object	io html frame parser build	0.014706
read csv	csv cls path header	0.066667
index or ndarray filled	core indexes datetime index ops mixin	0.029412
ndarray only use this	core indexes categorical index	0.047619
legacy	legacy	1.000000
a dataframe the levels in the	data values index	0.066667
construct this type from a string	dtypes interval dtype construct from string cls string	0.166667
a series that is datetimelike (e	indexes maybe to datetimelike data	0.142857
of value from 1-dimensional ndarray	datetime index get value series key	0.071429
dataframe and	data	0.009709
1-dimensional ndarray only use this if	indexes index	0.007353
background null_color for missing	styler highlight null null_color	0.125000
new sparsearray	core sparse sparse	0.034483
are stripping all of the _upsample kwargs and	core group by mixin apply f	0.166667
return a fixed frequency timedelta index with	indexes timedelta range start	0.083333
or intervalindex return the corresponding interval with	interval	0.029412
columns excluding	data	0.009709
dataset	series	0.006757
to coerce any object types	core object block convert	0.083333
the string if not	core	0.001326
object that can be	io html frame parser build	0.014706
return datetimeindex with times to midnight	indexes datetime index	0.007634
index and its underlying data	core indexes range index	0.021277
reorders	reorder	0.166667
list of tuples of the (attr formatted_value)	core indexes multi index format attrs	0.142857
of styler with a custom template	styler from custom template	0.142857
of a groupby implementation	index resampler groupby	0.166667
read text from clipboard and pass to read_table	io read clipboard	0.200000
produces a datetimeindex	indexes datetime index	0.007634
of the values to be at least	core block shape values ndim	0.050000
ndframe as opposed	ndframe to	0.043478
if we are index sliceable then	index sliceable obj	0.083333
is an	dtypes interval dtype is	0.066667
built up	io	0.003012
write out the binary feather-format for dataframes	data frame to feather fname	0.083333
start_date	start_date	1.000000
with times to midnight length is	datetime	0.006711
return a new block	core block	0.010870
lookup of	indexes index set	0.023810
statement that create a table reflecting the structure	io sqlite table create table setup	0.066667
numpy ndarray's __getitem__ method to work as desired	core indexes index getitem key	0.166667
string cast it to timedelta according to	timedelta index maybe cast slice bound	0.125000
to iterate over	html frame parser	0.012658
from other to self	other method	0.333333
ffill	ffill	1.000000
values for	indexes multi index get level values	0.500000
holiday falls on saturday use following monday instead	next monday	0.250000
if the process of casting data from some	numeric index assert safe casting cls data	0.047619
an indexer coerced to the codes dtype	maybe coerce indexer indexer	0.125000
background	background	1.000000
manager for temporarily setting a locale	set locale new_locale lc_var	0.250000
into a list of	html frame parser	0.012658
with times to midnight length is	indexes datetime	0.011494
return the values & release the memory	io index col take data	0.111111
the blocks collect and	consolidate transposed	0.062500
string 'r' to a timedelta object	coerce scalar to timedelta type r	0.500000
type that can be coerced to	indexes period index simple new cls	0.142857
only use this if	indexes index set value arr key	0.023810
node must	io hdfstore append key value	0.016667
for iterables you should probably use pprint_thing()	pprint dict seq _nest_lvl max_seq_items	0.333333
to apply we are	apply func	0.027027
sorted copy of	ops mixin sort values return_indexer ascending	0.250000
return the full scope for use with passing	computation scope full scope	0.055556
return new dataframe with labeling information in	core data frame	0.005917
on the last day of the month	month	0.038462
fixed frequency timedelta index	core indexes timedelta range start end	0.083333
1st discrete difference	data frame diff periods axis	0.250000
for	panel extract axes for	1.000000
node with the key or none	get node key	0.083333
of value from 1-dimensional ndarray only	indexes period index get value	0.071429
to use when concatenating specified units	na join_units	0.250000
stata date formats to a type	io convert datetime to stata type	0.200000
overlap add suffixes to overlapping entries	overlap with suffix left lsuffix right rsuffix	0.333333
a scatter plot from two dataframe	plotting scatter plot data	0.125000
table in file node must	io hdfstore append key value	0.016667
new chainmap with	compat chain	0.034483
version to operate on as the input	block try operate values	0.125000
from	set	0.012195
custom template and jinja environment	custom template cls searchpath name	0.500000
or all of the	core	0.001326
locator based on a distance	locator get locator dmin dmax	0.250000
list of row elements from the	io html frame parser	0.012195
formats to a	datetime to	0.100000
statement that create	sqlite table create	0.066667
gets called prior	series array prepare result	0.111111
draw histogram of the dataframe's series	hist frame data	0.200000
provide concatenation	core dtypes concat sparse	0.500000
matrix multiplication with dataframe or series	data frame dot other	0.500000
i want to construct this block as	core categorical block array	0.333333
return the dtypes in this object	ndframe dtypes	0.333333
dataframe with labeling	core data frame	0.005917
fast lookup	set value	0.023256
list	core sparse sparse list	0.333333
create a new unit	tzdtype new cls unit tz	0.055556
fast transform path	group by transform fast	0.333333
ndframe before and/or after some particular index value	ndframe truncate before after axis	1.000000
to accelerate unioning a collection	index union many others	0.040000
function of type t or tuple	type t	0.083333
frame table	io appendable series table	0.200000
index objects and sorts if possible	indexes index	0.007353
node must already	format	0.012346
cross-product	maybe convert ix	1.000000
1-dimensional ndarray only use this if you	index set value	0.023810
this is defined as a	view cls	0.047619
specialized intersection for datetimeindex objects may be much	core indexes datetime index intersection	0.142857
this if	set	0.012195
text display value	formats styler	0.021739
file node must already exist and	hdfstore append key value format	0.016667
extension	check extension	0.250000
string	parsed string to	0.500000
block	getitem block	0.250000
integer-location based indexing for selection	i	0.041667
take optional positional and keyword	util optional args	0.066667
a float	float arr	0.083333
fname are	validate kwargs fname	0.250000
values excluding missing values	core group by ohlc	0.250000
sub-classes	core selection mixin gotitem key ndim subset	0.333333
build an xpath expression to	io build xpath expr attrs	0.200000
the stata date formats to	to stata	0.058824
each index value is found	core indexes datetime index ops mixin isin values	0.083333
internal property property	core	0.001326
select values at particular time of	core ndframe at time time	0.066667
return the counts of ftypes in	ndframe get ftype counts	0.250000
return a categorical	categorical	0.009615
html representation for a particular	repr html	0.333333
name this allows simpler access to columns	ndframe setattr name value	0.166667
implementing the plot attribute for groupby objects	plot	0.043478
of value from 1-dimensional ndarray	indexes period index get value	0.071429
fractional part	frac x precision	0.100000
index with passed location -s deleted	indexes index delete loc	0.333333
sets names on levels	indexes multi index set names names	0.200000
gets the categories	get categories	0.333333
query or database table into	index_col coerce_float	0.062500
has	core	0.001326
with the block	col create for block cls	0.333333
getitem defers to the underlying array which by-definition	indexes datetime index ops mixin getitem	0.250000
ftypes (indication of sparse/dense and	ftypes	0.043478
infer types	infer types	0.500000
maps[0] raise keyerror	map	0.029412
the number of bytes in the underlying	index nbytes	0.052632
that dict has	json parser	0.071429
parameter for general index	core indexes index	0.007042
is not supported for panel objects	panel to	0.027027
in place using non-na values from passed dataframe	data frame update other join overwrite filter_func	1.000000
a resample of a	timedelta	0.022222
is called via the 'numpy' library the	with convert convert args	0.055556
a and	a	0.055556
return datetimeindex	core indexes datetime	0.011494
of two datetimeindexes	indexes datetime index sub datelike dti other	0.333333
ndarray like into a	json parser	0.071429
indices that would sort the index and its	index argsort	0.166667
create an op	computation op	0.166667
for series columns for	core ndframe	0.005051
the underlying data which is a	index	0.002004
read csv file (discouraged please use	series from csv	0.066667
the vectorized membership of x not in y	computation not in x y	0.066667
a string representation for this	indexes frozen ndarray unicode	0.083333
function for series arithmetic operations to	core sparse arith method op name	0.333333
have	categorical validate ordered	0.055556
return the op string for this termvalue	computation bin op generate v	0.250000
format	format	0.172840
call encode before writing to file	writer write to_write	0.083333
only use this	set value	0.023256
swap level i with level j	multi index swaplevel i j	0.333333
1-dimensional ndarray	indexes index set value arr	0.023810
of datetime time	core indexes datetime	0.011494
sorter	sorter	1.000000
safe version of putmask that potentially upcasts the	core dtypes maybe upcast putmask	0.250000
convert tz-aware datetimeindex from one time	indexes datetime index tz convert tz	0.166667
underlying data	indexes range	0.062500
to convert timedelta-like to	td index	0.055556
the frame should be truncated if so slices	io formats data frame formatter chk truncate	0.500000
box	ops mixin box	0.500000
a simple cross-tabulation of	columns values	0.037037
background in	io formats styler background	0.125000
that path's extension	extension	0.111111
internal property property synonym for as_blocks()	ndframe blocks	0.166667
float key and are not a	key	0.005051
dtype object of the underlying data	core series dtypes	0.333333
index objects contain the same elements	core indexes range index	0.021277
the full scope for use	computation scope full scope	0.055556
the stata	stata	0.022222
propagate metadata from other	ndframe finalize other	0.333333
an ndarray copy if specified coerce to the	copy	0.012821
downsample the cython defined function	core datetime index resampler downsample how	0.200000
to a dataframe	data frame	0.011429
convert timedelta-like	core indexes td index	0.055556
of value from 1-dimensional ndarray	core indexes datetime index get value	0.071429
reset_index	reset index level drop name	1.000000
convert a numpy / pandas type to	table type	0.055556
pandas options backwards compatible with keyerror	option error	1.000000
axes dictionary for the passed axes	axes dict from axes	0.333333
kinds allowable columns for this object	table queryables	0.055556
op on a and	op op_str a	0.500000
return the dtype	dtype	0.010989
tree-like object that can be used to	io html	0.012987
data structure for accumulating data to be converted	list	0.034483
rewrite the	computation rewrite	0.125000
coerce a scalar to a compat for our	period index coerce scalar to	0.071429
object datetimeindex timedeltaindex and	core dtypes	0.018519
csv file (discouraged please use :func pandas	from csv	0.066667
boolean series denoting	data frame duplicated	0.500000
to determine if dtype is valid for	is valid dtype n method dtype	0.142857
be table	append key value	0.016667
the passed type is	is	0.015873
of	datetime index resampler	0.066667
ufunc	core series array wrap result context	0.200000
return the join indexers	merge get join indexers	1.000000
block and are a	core block	0.010870
return	core indexes datetime index	0.007634
if we define an builtin function for	selection mixin is builtin func arg	0.333333
for each element in	core map indices py arr	0.090909
of this object potentially casting to object	index to embed keep_tz	0.333333
dataframe with the rows/columns switched	sparse data frame transpose	0.333333
datetimelike properties of the series values	period properties	0.052632
this	set	0.012195
series/index by indicated number	str repeat	0.200000
read from a url file or	read obj	0.058824
called after a ufunc needs additional handling	wrap result context	0.029412
to convert datetimelike-keyed dicts to timestamp-keyed	compat d	0.125000
construct dataframe from dict of	core data frame from dict cls	0.200000
string-like and string-like array to convert	maybe convert string to	0.250000
data as a	core indexes index	0.007042
node must	key	0.005051
fast path	block manager fast	0.250000
expression as	core computation eval expr	0.083333
a deprecated option	deprecated	0.111111
of value	indexes index set value arr key value	0.038462
attributes e g freq	attributes	0.115385
get integer location for requested label	categorical index get loc key method	0.500000
that an positional indexer cannot enlarge	has valid positional setitem indexer indexer	0.052632
cython	cython	1.000000
node must already exist and be	io	0.003012
additional handling as	array wrap	0.025000
a a left and right array parameters	left right closed	0.166667
specified categories	remove categories	0.500000
concise listing of available options	core pp options list keys width _print	0.111111
columns using input function or	copy inplace	0.055556
parse the raw data into a list	io html frame parser parse raw data	0.250000
the object is a sequence of	core dtypes is sequence	0.166667
guess the datetime format of a given datetime	tools guess datetime format dt_str dayfirst dt_str_parse	1.000000
value inplace return a	value mgr	0.083333
membership of x not in y if possible	computation not in x y	0.066667
multiindex at the	indexes multi index sortlevel	0.166667
data to ndarray raises on scalar	coerce to ndarray cls	0.166667
inplace return a new block (of a possibly	core block setitem indexer	0.066667
if the process of casting data from some	assert safe casting cls data	0.047619
lookup of value from 1-dimensional ndarray	period index get value series key	0.071429
to iterate	io html frame	0.012987
the frame	io formats data frame	0.090909
provides a resample of	datetime	0.006711
localize tz-naive timeseries to target time zone	core ndframe tz localize tz	1.000000
left and right	left right	0.333333
resampling from a dataframe column or multiindex	resampler from selection	0.142857
return the number of bytes in the	core indexes multi index nbytes deep	0.052632
metadata if key is	key	0.005051
built	io formats styler	0.021277
names to 'index'	set default names	0.083333
return index or	datetime index ops mixin	0.029412
date formats to a	convert datetime to	0.166667
series with multiindex to produce dataframe	core series	0.008000
inplace return a new block	core block	0.010870
reorder	reorder	0.833333
build an xpath expression to simulate bs4's	io build xpath expr attrs	0.200000
called prior to a ufunc	prepare result context	0.333333
the header of a	frame parser parse thead	0.111111
a curve with holidays between start_date and	tseries abstract holiday calendar holidays start end return_name	0.066667
indices that would sort the index and its	core indexes index argsort	0.166667
union of two index objects and sorts if	indexes range index union other	0.083333
nested	nested	1.000000
a masked rec array and create the	masked rec array to	0.090909
tree-like object that can be	io html frame parser build	0.014706
take which sets nan values in	core take nd	0.125000
the values to be	values ndim	0.050000
input to appropriate for table outplot	util table plotter conv data	0.142857
extract from a masked rec array and create	masked rec array to	0.090909
sorted copy of index	core indexes index sort values return_indexer ascending	0.500000
assert that we all have the same closed	append same dtype to_concat name	0.500000
datetimeindex with times to midnight	indexes datetime index	0.007634
background in a range according to the data	io formats styler background	0.125000
that left and right index are equal	assert almost equal left right check_exact	0.333333
ndarray or	index columns dtype	0.125000
in hdfstore parameters	hdfstore put key value format append	0.333333
compute the vectorized membership of x not in	core computation not in x	0.166667
if a url has a	io is url url	0.047619
datetimelike (e	maybe to datetimelike data	0.142857
aggregators	core selection mixin aggregate arg	0.166667
the header of	html frame parser parse thead	0.111111
gets called	period index array wrap	0.050000
convert to our native types format slicing if	categorical block to native types slicer na_rep quoting	0.250000
the size of	itemsize	0.027027
the index or minimum along an axis	datetime index ops mixin min axis	0.333333
return dtype and n/a values	get empty dtype and	0.125000
index	indexes period	0.034483
parameter for general index and	indexes index	0.007353
normalized locales that do not throw	util valid locales locales normalize	0.050000
v should be	core indexes frozen ndarray searchsorted v	0.033333
to the block_manager axis	ndframe get block manager axis axis	0.166667
get	index get	0.200000
determines if two index	indexes datetime index ops mixin equals other	0.200000
box function to get object from internal representation	mixin box func	0.142857
return the mode s of	core series mode	0.083333
check_names	check_names	1.000000
dtype try to coerce dates and/or numbers	maybe convert objects values convert_dates convert_numeric convert_timedeltas	0.500000
path's extension against the	check extension cls	0.125000
object	html frame parser	0.012658
object o and return packed bytes	packb o	0.055556
convert to object if we are a categorical	core indexes categorical index to safe for reshape	1.000000
for writing stata	core data frame to stata	0.200000
to infer better dtype for object	convert datetime numeric timedelta coerce	0.071429
reshape data	data	0.009709
name or names of the axis returning self	name name axis	1.000000
is of	is	0.015873
add in numeric methods	index add numeric methods binary cls	1.000000
for	for	0.428571
a repr function return	repr	0.040000
the union of two index	range index union other	0.083333
lookup of value from 1-dimensional ndarray	index get value series	0.250000
float is	float	0.024390
categorical by default	categorical sort values	0.166667
series arithmetic operations to	series op name	1.000000
the levels attribute is 1 or a	io table is multi index	0.142857
to cast the array/value to a datetimelike dtype	core dtypes maybe cast to datetime value dtype	1.000000
handle na filling of take	core indexes index assert take fillable values	0.250000
ndarray only use this if	set value	0.023256
a 1d array of	intervals cls	0.250000
codes by the indexer	indexer allow_fill	0.050000
convert the periodindex to the specified frequency freq	core indexes period index asfreq freq how	0.500000
function is called via the 'numpy' library the	take with convert convert args kwargs	0.055556
guarantee the shape of the values	block shape values ndim shape	0.083333
to table in file	append	0.012987
max_version	max_version	1.000000
subset rows or columns of dataframe according to	ndframe filter items like regex axis	0.166667
we are grabbing the	level global_dict local_dict resolvers	0.333333
index objects	core indexes float64index	0.166667
accessor object for datetimelike properties of the series	timedelta properties	0.052632
apply we are stripping all of the	mixin apply func	0.050000
ddof	ddof	1.000000
defined as a copy with the same identity	core indexes multi index view cls	0.047619
a fixed frequency	bdate range start	0.111111
name this allows simpler access to columns for	core ndframe setattr name	0.166667
the block manager from a dataframe of series	to manager sdf	0.052632
read sql	io sqldatabase read	1.000000
to table in file	hdfstore append key	0.016667
fillna but using the interpolate machinery	interpolate with fill method axis	0.200000
a simple cross-tabulation	crosstab	0.050000
return a string format	format datetime64	0.250000
validate percentiles used by describe	ndframe check percentile q	0.333333
called after	index	0.004008
regular or 'level_x'	io json set	0.250000
tree-like object	io	0.003012
never	categorical block is	0.100000
resample of a groupby implementation	datetime index resampler groupby	0.166667
types format	types slicer na_rep date_format	0.200000
the ftypes (indication of sparse/dense and	ndframe ftypes	0.055556
save workbook to disk	io excel writer save	0.333333
the node with	get node	0.166667
columns as	columns	0.017857
sets names on levels	multi index set names names level	0.200000
calculate slice bound that corresponds to given label	indexes index get slice bound label side	1.000000
list of normalized locales that do not	util valid locales locales	0.050000
from a list/array of tuples parameters	from tuples cls data closed name	1.000000
with nat which has	mixin nat new	0.050000
convert tz-aware axis	core ndframe tz convert tz axis level	0.200000
ndframe as opposed to sparse	ndframe	0.005025
take	core sparse sparse array take	1.000000
a datetimeindex but for	core datetime	0.142857
with integer stride	resolution get stride	0.333333
merge this is similar	reshape merge	0.166667
in the datetimelike methods (as we may have	datetimelike methods	0.066667
hack to accelerate unioning a collection of indexes	datetime index union many others	0.040000
return the meta data array for this key	io table read metadata key	1.000000
particular time of day e g	time time	0.142857
create	ndframe create indexer cls	0.500000
gets called after a ufunc	result context	0.081081
to	core tools to	0.250000
the best locator based on	locator get locator	0.062500
numpy array of python datetime date objects (namely	datetime index	0.007042
return	html frame parser build	0.014706
a	parser	0.008000
a slice	slice slicer	0.087719
series/index to be formatted in paragraphs with	str	0.017544
or functions	ndframe rename axis mapper axis	0.333333
leap year	core indexes period index is leap year	0.142857
labels on given axis omitted where alternately any	frame dropna axis how thresh subset	0.100000
index (can't do in caller	json jsontable writer init obj orient date_format double_precision	0.166667
element in the series/index	core str get	0.142857
to 'index' for regular or 'level_x'	io json set default	0.250000
node must already exist and	hdfstore append key	0.016667
whether the frame	frame	0.009091
coerces data to ndarray raises on scalar	to ndarray cls	0.166667
like	v string like	0.111111
this	arr	0.013699
structure for accumulating data to be	list	0.034483
indicated if we have mixed	core indexes multi index have mixed	0.166667
function to be applied on each value to	formatter value formatter float_format threshold	0.100000
built	io formats	0.027778
data the shifted data will	ndframe slice	0.125000
value to format	array formatter value	0.250000
specialized intersection for datetimeindex objects	index intersection	0.142857
the locales that are available on	locales prefix normalize locale_getter	0.125000
or object coercible to panel	panel update other join overwrite filter_func	0.200000
op string for	core computation bin op generate	0.066667
the categorical by category value returning a new	ascending na_position	0.071429
ndarray for our input	sparse sanitize values arr	0.200000
where : array of timestamps	period index asof locs where mask	1.000000
index names to 'index' for	set default names	0.083333
this getitem defers to the underlying	ops mixin getitem key	0.333333
a boolean if the passed type is	is	0.005291
to convert timedelta-like	indexes td index	0.055556
for creating a subclass of styler with a	formats styler from	0.076923
o and return packed bytes see :class packer	o	0.043478
j do not change the ordering of	j	0.034483
apply we are stripping all of	mixin apply	0.050000
helper function to determine	n method	0.125000
returns the float values converted into strings	formats float array formatter	0.055556
index	datetime index ops mixin	0.058824
my pandas	fixed	0.055556
fast lookup of value from 1-dimensional ndarray only	categorical index get value series	0.100000
the first match of regular expression pat	pat flags	0.105263
values to be at least 1	block shape values	0.050000
/ pandas type to its corresponding json_table	io json as json table type	0.250000
the block manager from	manager sdf columns index	0.052632
the built	styler	0.022222
a dataframe	data values index	0.066667
bytes in	indexes multi index nbytes	0.052632
file node must already exist and be	hdfstore	0.014925
implementing the plot attribute for	plot	0.043478
dateoffset	offset	0.111111
if	validate ordered cls	0.055556
date column	date data	1.000000
a panel-like dataframe parameters	index time panels names	0.076923
create index	core indexes multi index	0.013158
provide explict type promotion and	dtypes maybe upcast values fill_value dtype copy	0.166667
as the index (so we	at indexer convert key key is_setter	0.090909
the :meth pandas dataframe reset_index function see	index level drop name inplace	0.142857
compared against itemsize	itemsize	0.027027
maximum by	max subset	0.166667
and return the block manager from a	manager sdf	0.052632
file node	append	0.012987
whether each index value is found in	indexes datetime index ops mixin isin	0.083333
put method to its	put	0.043478
format of	format dt_str dayfirst	0.250000
boolean indicating if self is view of	is view	0.100000
specified	core ndframe asfreq	0.250000
the 'numpy' library	with convert convert args kwargs	0.055556
select values between	datetime index indexer between	0.125000
stata	io stata elapsed	1.000000
if we	grouper is	1.000000
dataframe with labeling information in the columns under	core data frame reset	0.027778
perform generic binary operation with	binop other func level	0.333333
each string matches a regular expression	pat case flags	0.166667
converts a style_dict to an openpyxl style object	openpyxl1writer convert to style cls style_dict	0.166667
compute standard deviation of groups excluding	group by std ddof	0.166667
the node with the key or none if	hdfstore get node key	0.083333
to a sql database	sqldatabase to sql	1.000000
single block	block manager	0.021277
specialized shift which produces	ops mixin shift n	0.250000
generate	core generate	0.125000
new unit if needed otherwise return	tzdtype new cls unit	0.055556
sif to datetime	elapsed date to datetime	0.250000
list of the inferred types one	inferred type levels	0.166667
a manager and a axes dict	core ndframe init mgr mgr axes dtype	0.333333
add the operations to the cls evaluate	add aggregate operations cls use_numexpr	0.500000
an item pair from maps[0] raise keyerror	compat chain map popitem	0.055556
use this	indexes index set value arr key	0.023810
unique elements in the group	series group by nunique dropna	0.250000
a simple cross-tabulation of	core reshape crosstab index columns	0.066667
dtype of	dtype	0.010989
wrap op result to have	core sparse wrap result name	1.000000
support start	fixed	0.055556
cast the array/value	dtypes maybe cast	1.000000
a subclass of styler with a	styler from	0.076923
the	io index	0.222222
via the 'numpy' library	validate take with	0.055556
dispatch to apply we	group by mixin apply func	0.050000
_nest_lvl	_nest_lvl	1.000000
convert timedelta-like to timedelta64	td index cmp opname	0.055556
already exist and be table	io	0.003012
is called via the 'numpy' library	with convert convert args kwargs	0.055556
needs additional	indexes	0.004651
return an indexer coerced to	categorical maybe coerce indexer indexer	0.125000
build an xpath expression to simulate bs4's	build xpath expr attrs	0.200000
given delimiter string starting at	rsplit arr pat n	0.037037
'numpy' library the	take with convert convert	0.055556
validate that the where statement is of the	computation validate where w	0.250000
take which sets nan	core take nd	0.125000
blocks	slice take blocks	0.500000
a slice of my values	core block slice slicer	0.083333
1-dimensional	index	0.002004
the best locator based on a	get locator	0.062500
is called via the 'numpy' library	take with convert	0.055556
as the	core ndframe	0.005051
a boolean whether this axes needs validation	indexer should validate iterable axis	0.166667
by definition have do not have a	io formats datetime64formatter format strings	0.090909
necessary for making this object picklable	setstate state	0.333333
convert freq with decimal stride	decimal	0.058824
if multiindex	core indexes multi	0.014493
manager for temporarily setting a	new_locale lc_var	0.125000
block return result block s from the	block where other cond align raise_on_error	0.066667
create and return the block manager from a	sparse to manager sdf	0.052632
query	con	0.142857
via the 'numpy' library	numpy validate take with convert convert	0.055556
we take a string-like that is object	string array data	0.038462
numpy	dtype	0.010989
timedelta-like to	td index	0.055556
nonconsolidatable blocks	non consolidatable mix in	0.083333
this key	key	0.010101
sort_index	sortlevel level	0.142857
for each axes overridden in	plot logic ax data	0.083333
for running code that expects to	util assert produces warning	0.071429
a new unit if needed otherwise	dtypes datetime tzdtype new cls unit	0.055556
which prevents adding new attributes	no new attributes	1.000000
try to cast the array/value to a	dtypes maybe cast to	0.250000
index with business day	indexes bdate	0.050000
s3	s3	1.000000
return a view	categorical view	0.111111
type (if copy=true return a new copy)	categorical block astype dtype	1.000000
to table in file	key	0.005051
of value from 1-dimensional ndarray only use	indexes datetime index get value	0.071429
returns true if categoricals are the same dtype	core categorical is dtype equal other	0.250000
iterator	iterator	0.600000
do a list replace	replace list src_list dest_list inplace regex	1.000000
thrown by an error is encountered in pd	error	0.028571
a string-like that is object dtype	convert string array	0.038462
: int slice or	data frame ixs	0.200000
string cast it	cast	0.058824
that dict	json parser	0.071429
determines if two index objects contain the same	core indexes index equals other	0.200000
set the series name	core series set name name inplace	1.000000
converts a style_dict to an xlsxwriter format object	io xlsx writer convert to style style_dict num_format_str	0.166667
my	index col	0.066667
node must already exist and be table	append	0.012987
and/or after some particular index value	after axis copy	1.000000
must already exist and	hdfstore append key value format	0.016667
is index for	core ndframe	0.005051
or functions	rename	0.125000
get	categorical get	0.100000
dataframe	assert frame	1.000000
float values	io formats float array formatter get result as	0.055556
perform the reduction type operation if	core index ops mixin reduce op name	0.083333
falls on sunday use day thereafter	sunday to	0.200000
create the grouper on instantiation	core group by assure grouper	0.250000
csv file (discouraged please use :func	core series from csv cls path sep parse_dates	0.066667
construct this type from a	core dtypes interval dtype construct from string cls	0.166667
actual ne	core computation condition bin op	0.333333
read csv file (discouraged please	from csv cls path header sep	0.066667
series	core data frame	0.005917
if two indices overlap add suffixes to	items overlap	0.062500
a tree-like object that can be used	html frame	0.014706
is a categorical	indexes categorical	0.071429
ndarray only use	core indexes categorical index	0.047619
ignore_index	ignore_index	1.000000
2d from panel	panel dropna	0.333333
quote the string	core computation term value tostring encoding	0.200000
manager	manager reduction f axis	1.000000
perform generic binary operation with optional fill value	series binop other func level fill_value	0.500000
need to coerce a	maybe coerce freq	0.125000
called after a ufunc needs additional handling as	index array wrap result context	0.034483
we have a dtype compat	name freq	0.083333
take which sets nan values in one	core take	0.125000
compute the quantiles of the	core block quantile qs interpolation axis mgr	0.250000
get the data for this	io data col get	0.333333
that left and right index are equal	index equal left right exact check_names	0.333333
return the block manager from a dataframe of	sparse to manager sdf	0.052632
if the set of unique elements of arr1	util equal contents arr1	0.066667
creates a new sparsearray from the input	core sparse sparse data frame sanitize column key	0.333333
are datetime	indexes numeric index is	0.333333
a helpful message about our construction	core construction error tot_items block_shape axes e	0.333333
to class python 2 and	cls	0.016949
to get the values view	core get values values	0.125000
fast lookup of value from 1-dimensional ndarray only	indexes categorical index get value	0.100000
float values converted into strings using	formats float array formatter get	0.055556
be a single block and	new align inplace	0.125000
fits	fits	1.000000
or all of the data are	core data	0.041667
a string cast it to timedelta	timedelta index maybe cast	0.333333
convert tz-aware datetimeindex from one time zone	core indexes datetime index tz convert tz	0.166667
idxmin	idxmin	1.000000
object serving as a base	abstract engine	0.166667
node	append key value format	0.016667
creates a new sparsearray from the input value	sparse sparse data frame sanitize column key value	1.000000
ndarray only use this if	core	0.001326
underlying data	index ops mixin	0.096154
set of unique elements of arr1 and	util equal contents arr1	0.066667
type is an actual dtype that	dtype is dtype cls dtype	0.130435
of value from	index set value arr key value	0.038462
set a parameter value using the with statement	plotting options use key value	0.250000
the array interface return	indexes multi index array dtype	0.125000
instances of all	util all	0.055556
form the union of two index objects and	indexes index union other	0.083333
manipulation result has	constructor	0.040000
a code to a	freq code	0.125000
on 3 columns of this dataframe	columns	0.017857
dataframe parameters	frame name	1.000000
take the codes by the indexer fill with	take nd indexer allow_fill	0.333333
slice of my values but densify first	core non consolidatable mix in slice slicer	0.500000
bytes in the	nbytes deep	0.052632
make a new datetimeindex	indexes datetime index	0.007634
vertical/horizontal layout for explanation	plotter	0.076923
fast path	manager fast	0.250000
this is *not* the same as index	indexes index is other	0.333333
ndarray only use this if	indexes index	0.007353
1-dimensional ndarray only use this if	index set value	0.023810
fast transform path for	transform fast result	0.333333
of unique elements of arr1 and	util equal contents arr1	0.066667
pd	parser	0.008000
called prior to	series array prepare result	0.111111
datetimeindex with times	core indexes datetime index	0.007634
downsample the cython	datetime index resampler downsample how	0.200000
dict of array-like or	dict	0.076923
create index with target's values	indexes multi index	0.013158
with times to midnight length is unaltered	indexes datetime index normalize	0.125000
types and ranges supported by stata	stata types	0.500000
if we have mixed levels	indexes multi index have mixed levels	0.200000
string raise a	string cls string	0.125000
raise keyerror is maps[0]	compat	0.030303
localize tz-naive timeseries to target time zone	core ndframe tz localize tz axis level	1.000000
types of values possibly casting	types values na_values try_num_bool	1.000000
type	placement	0.166667
this is generally only useful	hdfstore select column key column	0.142857
of the	timedelta index	0.045455
tree-like object that	html frame parser	0.012658
in index	make custom index	0.250000
intersection of two index objects	range index intersection other	0.083333
return if each value is nan	core indexes index isnan	1.000000
index with	core indexes	0.014286
on multiindex defaults to	indexes multi	0.014493
perform generic binary operation	series binop other func level	0.333333
values as an enumerated type or categorical variable	core factorize values sort	0.111111
feather-format	feather df path	1.000000
perform the reduction type operation if we	core index ops mixin reduce op	0.083333
return	merge operation get	0.500000
the (attr formatted_value)	core indexes datetime index ops mixin format attrs	0.142857
to dataframe in specified column	core data frame set item key value	0.250000
must already exist and be	hdfstore	0.014925
dtype and coerce to a fixed size	itemsize	0.027027
pattern	pat	0.125000
and coerce to a fixed size	itemsize	0.027027
3 columns	columns	0.017857
from 1-dimensional ndarray only use this if	index set value	0.023810
a spreadsheet-style pivot table	reshape pivot table	0.111111
of the string	string	0.018868
values as	values sort order	0.333333
to convert timedelta-like	indexes td index cmp	0.055556
series indicating whether each string in the	core	0.001326
function to be applied on each value	array formatter value formatter float_format threshold	0.100000
data to ndarray raises on scalar	core indexes index coerce to ndarray cls	0.166667
of the axis indicies	core panel extract axes data	0.142857
value from 1-dimensional ndarray	indexes datetime index get value series key	0.071429
is datetimelike	datetimelike data copy	0.125000
to iterate over the	html frame parser build	0.014706
aggregate using input function or dict	by aggregate arg	0.250000
check whether or not the 'parse_dates' parameter is	io validate	0.031250
format of a given	format dt_str	0.250000
compute a simple cross-tabulation of	core reshape crosstab	0.066667
table	value	0.010309
col_level	col_level	1.000000
midnight length	index	0.002004
of pandasobject	any pandas objects	0.250000
v	indexes frozen ndarray searchsorted v	0.033333
gets the ordered attribute	core categorical get ordered	0.333333
slice	slice	0.500000
overriden on subclasses namely intervalindex to control get_slice_bound	index get loc only exact matches key	0.142857
actual sparse values	core sparse sparse array	0.043478
index with custombusinessday as the	indexes cdate range start	0.083333
custom business	custom business	0.333333
the unicode normal form for the strings	string methods normalize form	0.066667
base frequency alias e g '5d' -> 'd'	base alias freqstr	1.000000
key value pairs to	from items cls items columns orient	0.500000
formatted data as a unicode string	indexes index formatter func	0.083333
that can be	io html frame parser	0.012195
group_index	group_index	0.833333
indexer	ndframe indexer has	1.000000
timedelta index with day as the default	indexes timedelta	0.083333
frame table	series table	0.200000
not supported for panel objects and	core panel to sparse	0.037037
return the block manager from a dataframe of	manager sdf columns	0.052632
rolling statistical measure using supplied function designed to	rolling apply func name window center	0.333333
make new index	indexes categorical index	0.047619
rewrite the assignment operator for	rewrite assign	0.125000
dicts to timestamp-keyed dict	core dict compat d	0.142857
the process of casting data from some accepted	assert safe casting cls data	0.047619
string	string to	0.166667
returning a	ignore_index verify_integrity	0.250000
compare numeric	dtypes is numeric v string	0.333333
a tree-like object that can be used	html frame parser build	0.014706
to its values	core	0.001326
to iterate over the	html frame	0.014706
reindex for all the axes	reindex axes axes	0.500000
boolean if values in the	is	0.005291
compute a simple cross-tabulation	core reshape crosstab	0.066667
be used to iterate	io html frame parser build	0.014706
each index value is found in the	indexes datetime index ops mixin isin	0.083333
dict of array-like	dict cls data	0.166667
_upsample kwargs and	mixin apply f	0.166667
and return a series with the transformed values	core resampler transform arg	0.200000
a url has a valid protocol	io is url url	0.047619
in the series extract groups from the first	extract	0.030303
boolean mask for requested	method	0.033333
passed type is	core dtypes extension dtype is	0.125000
determine if	core str match arr pat	0.166667
dispatch to apply we are	by mixin apply func	0.050000
the symmetric difference of two index objects	core indexes index symmetric difference other result_name	0.166667
take the codes by the indexer fill	take nd indexer allow_fill	0.333333
last row without any nan is taken	core ndframe asof where	0.166667
a tree-like object that can be used to	html frame	0.014706
datetime with tz array	datetimetz array	0.500000
given offset/observance to a datetimeindex of	rule	0.050000
a scatter plot from two dataframe	plotting scatter plot data x	0.125000
dispatch to apply we	apply	0.026316
a boolean whether this axes needs validation for	core ndframe indexer should validate iterable axis	0.166667
the totally ordered cartesian product of all	labels shape sort xnull	0.066667
return a boolean list indicated if we have	multi index have	0.142857
integer location for requested label parameters	loc key method	0.142857
assign	assign	0.833333
of subplots	plotting subplots	0.125000
a dataframe the levels in	data	0.009709
true if this is a valid column name	is in	0.076923
index objects contain the	indexes	0.004651
in each element in the series/index	core str get arr	0.142857
for a panel-like dataframe	core panel index time panels names	0.076923
return if each value is nan	indexes datetime index ops mixin isnan	0.500000
parse the	parse	0.034483
creates a	frame sanitize column key	0.333333
for general index and plural 'names' parameter	indexes index validate names name names deep	0.071429
the expected exception and	exception	0.090909
to coerce any object types to better types	core object block convert	0.083333
writing stata binary	core data frame to stata fname	0.200000
objects suitable for initializing the gradientfill stop	stop cls	0.066667
indexer	name indexer	0.083333
validate this column	col validate col	0.200000
with times to	core	0.001326
draw histogram of	hist frame data column by	0.200000
an array	array vals	0.083333
to convert timedelta-like to timedelta64	td	0.043478
of value	core indexes index set value arr key value	0.038462
produce 'pivot' table based	reshape slow pivot index	0.333333
specialized intersection for datetimeindex objects may	indexes datetime index intersection	0.142857
apply the given offset/observance to	holiday apply rule	0.200000
to parse	core tools parse time	0.125000
index	to index	0.166667
format of a given	format dt_str dayfirst dt_str_parse	0.250000
exponential weighted sample correlation	ewm corr other pairwise	1.000000
get instances of all the various index	all index	0.142857
inferred types one	inferred type levels	0.166667
return result as series or by a	by axis level	0.045455
type is an actual dtype that we	period dtype is dtype cls dtype	0.142857
the union of two index objects	indexes index union other	0.083333
convert the object to	core ndframe to	0.040000
the cartesian product of multiple iterables parameters	product cls iterables sortorder names	0.500000
values can be any type	values name	0.166667
lookup of value	value	0.005155
for generation (e g an	core computation bin op	0.055556
round a dataframe to a variable number of	data frame round	0.166667
values & release the	index col take data	0.111111
aggregate using input function or	by aggregate arg	0.250000
the number of bytes in	indexes multi index nbytes deep	0.052632
create index with target's values (move/add/delete	indexes multi index	0.013158
see	other how level return_indexers	1.000000
block s from the	core block where other cond align raise_on_error	0.066667
table in file node	key	0.005051
and setup my atom	col set atom	0.333333
update index attributes e g freq	core indexes datetime index maybe update attributes	0.200000
deprecated use :meth dataframe sort_index	data frame sortlevel level axis ascending inplace	1.000000
node like	node	0.100000
a	period index array wrap result	0.050000
actual	bin op	0.125000
in	hdfstore	0.014925
stata date formats to	datetime to stata	0.100000
new unit if needed otherwise return from the	new cls unit	0.055556
must already exist and be	io hdfstore append key value format	0.016667
statement that create a	io sqlite table create	0.066667
if i can avoid the state machine here	frequency inferer	0.166667
from 1-dimensional ndarray only use this if	indexes index set	0.023810
return an item pair	popitem	0.043478
is called via the 'numpy' library the third	validate take with convert convert args	0.055556
a fully reindex-output to the levels	data frame group by reindex output result	0.045455
return whether i am an indexed column	io index col is indexed	0.200000
whether each index value is found in the	index ops mixin isin values	0.083333
read sql query or database	io read sql sql con index_col coerce_float	0.166667
1d array return an array of	util hash array vals	0.083333
maker	maker	1.000000
for this indexable with the	io index col	0.055556
set the	io generic	0.333333
csv file (discouraged please use :func pandas read_csv	core series from csv cls path sep	0.066667
slice of panel	core panel	0.038462
in file	io	0.003012
of seconds (>= 0 and less than	core indexes timedelta index seconds	0.066667
if the object is a sequence of	core dtypes is sequence	0.166667
unique elements of arr1	arr1	0.050000
if we define an builtin function	base grouper is builtin func arg	0.333333
detect terminal size and return tuple = width	get terminal size	0.166667
float values converted	io formats float array formatter get result as	0.055556
spreadsheet-style pivot	reshape pivot	0.166667
apply a	io formats styler apply	0.500000
validate this column	index col validate col	0.200000
convert to our native types format slicing	core categorical block to native types	0.250000
for an ordered multiindex compute	core indexes multi	0.014493
guaranteed return of an	index	0.002004
sets index names to 'index' for	default names data	0.083333
the stata date formats to	convert datetime to stata	0.111111
wrap index _get_unique_index to handle nat	indexes period index get unique index dropna	0.250000
maximum	max subset color axis	0.166667
label for first non-na/null value	core data frame first valid	0.250000
that converts json lists to line delimited json	io json convert to line delimits s	0.200000
a float dtype if	float arr	0.083333
validate this column return the compared against	index col validate col	0.200000
sets names on	indexes multi index set names names	0.200000
handling	core indexes period index	0.034483
key for valid keys across my	valid tuple key	0.333333
reduction type operation if	index ops mixin reduce op name axis	0.083333
header rows in multiindex	pop header	0.100000
rewrite the assignment operator for pytables	computation rewrite assign	0.125000
a valid ordered parameter if	ordered cls ordered	0.058824
like into	parser	0.008000
styled html representation fo the dataframe	core data frame style	0.333333
reset the display	reset display	1.000000
instances of all the various index	all index	0.142857
the td elements from	io html frame parser parse td obj	0.083333
ensure that our data is of the correct	core ensure data	1.000000
compute boolean array of whether each index	indexes datetime index	0.007634
more this is index	ndframe	0.005025
sort multiindex	multi index sortlevel	0.166667
and return the numexpr condition and filter	expr evaluate	0.200000
specialized intersection for datetimeindex objects may be	intersection	0.041667
validate that the where statement is	computation validate where w	0.250000
types format slicing	types slicer na_rep date_format quoting	0.200000
to capture stderr in a buffer so that	capture stderr f	0.055556
that left and right index are equal	almost equal left right check_exact check_dtype	0.333333
converted to inat	time delta block try	0.500000
frequency datetime index with custombusinessday as the	core indexes cdate range start end	0.083333
general index and plural 'names' parameter for multiindex	indexes index validate names name names deep	0.071429
to its values attribute if it has one	core series	0.008000
to time objects	to time	0.125000
apply the	month offset apply index days	0.500000
the passed type is an	is	0.005291
dataframe in self data and the attrs from	io	0.003012
boolean array of whether each index	index	0.002004
using input function	axis copy inplace	0.055556
this is a valid	valid	0.071429
return a new block try to preserve dtype	core putmask smart v m n	0.055556
this indexable with the	io index col	0.055556
rearrange index levels using input order	series reorder levels order	0.333333
return the number of	indexes	0.009302
is list-like	is list like	1.000000
equivalent to shift without copying data the	slice shift	0.083333
if we can set a	can set	0.125000
of	crosstab index columns values	0.066667
return the dtype object of the underlying data	core indexes index dtype	0.333333
a series excluding elements from groups that do	core series group	0.030303
a series	series group	0.030303
writing stata	to stata	0.058824
a function elementwise updating	formats styler applymap func subset	0.333333
form the intersection of two index objects sortedness	indexes range index intersection other	0.083333
tree-like object that can be used	html frame parser build	0.014706
gets	array wrap	0.075000
reduction type operation if	index ops mixin reduce op name axis skipna	0.083333
from a 1d array of interval	interval index from intervals	0.333333
as a	sparse series as	0.125000
a list of the underlying data	core indexes datetime index ops mixin tolist	0.333333
by a series of	by	0.038462
unordered	unordered inplace	1.000000
a particular dataframe invoked by unicode df in	frame unicode	0.166667
new unit if needed otherwise return from the	datetime tzdtype new cls unit	0.055556
to table in file	io hdfstore append	0.016667
a string if it was a pathlib path	io stringify path filepath_or_buffer	0.142857
the mode s of the	mode	0.050000
return	categorical	0.019231
merge boxplot/kdeplot properties to passed	plotting hist plot make plot keywords	1.000000
convert to our native types	block to native types slicer na_rep float_format	0.250000
the number of bytes in the	indexes range index nbytes	0.052632
select values between particular times of	ndframe between	0.100000
node with the key or none if	io hdfstore get node key	0.083333
at particular time of	core ndframe at time time	0.066667
substrings from each	arr start stop step	0.333333
integer stride parameters	get stride from	0.333333
add in logical methods	core indexes index add logical methods cls	1.000000
numpy array of datetime time	indexes datetime	0.011494
return	get	0.157143
the intersection	intersection	0.083333
a leap year	index is leap year	0.142857
return result block s from the result	block where other cond align raise_on_error	0.066667
a full	full	0.071429
new index with passed location -s deleted	index delete loc	0.200000
an ordered multiindex compute the	indexes multi index	0.013158
block for the diff of	block diff n axis mgr	0.333333
return the counts of ftypes in	core ndframe get ftype counts	0.250000
at the requested level the	index sortlevel level	0.166667
an indexer like _name in the	indexer cls name indexer	0.083333
subclass of styler with a	io formats styler from	0.076923
additional handling	core indexes period index	0.034483
of styler with a	formats styler	0.021739
valid ordered parameter	categorical validate ordered cls ordered	0.058824
in the datetimelike methods (as we may	datetimelike methods	0.066667
fast lookup of value	key value	0.011628
round	core reshape round	0.500000
applies a moving window	core window apply window	0.166667
index objects contain the	indexes datetime index	0.007634
value for the dtype of	value dtype	0.142857
is of a	dtypes is	0.030303
maximum value of the index	indexes datetime index	0.007634
boolean whether i can attempt conversion	is convertible	0.333333
comparison operations to convert timedelta-like to timedelta64	td index cmp opname	0.055556
with custombusinessday as the default	cdate range start	0.333333
the number of temporary variables in this	ntemps	0.111111
return the number	range index	0.021739
array return an array	array vals	0.083333
having a singular 'name' parameter for general index	core indexes index validate names	0.066667
slice/take blocks	blocks	0.071429
function has at most len(compat_args) arguments and	args fname args max_fname_arg_count compat_args	0.333333
compatiable fill_value and	fill_value	0.033333
styler with a	formats styler from	0.076923
return a	computation get	0.333333
single	simple blockify tuples	0.125000
raise keyerror	compat chain	0.034483
any type that can be coerced to	period index simple new cls	0.142857
decorator to deprecate	deprecate	0.090909
sparsearray only the actual sparse values	sparse sparse array	0.043478
starargs attribute was changed to be more	base expr visitor visit call 35 node side	0.066667
manage style and	mplplot apply style colors colors kwds col_num	0.142857
bool of a single element pandasobject	ndframe bool	0.055556
return the dtype object	dtype	0.021978
the values to be at least	shape values ndim	0.050000
return the ftypes (indication of sparse/dense and	ndframe ftypes	0.055556
apply we are	by mixin apply func	0.050000
python datetime	core indexes datetime	0.011494
get test	get test	1.000000
the vectorized membership of x in y	core computation in x y	0.047619
a string-like that is	string array	0.038462
given set a rules normally	calendar init name rules	0.200000
best locator based on a distance	locator dmin dmax	0.250000
returns the float values converted into strings	io formats float array formatter	0.055556
return a formatter function	formats get	0.090909
maps[0] raise keyerror is maps[0]	chain	0.031250
return dtype and n/a	core get empty dtype and	0.125000
1-dimensional ndarray only use this if	core indexes index set	0.023810
numpy array of python datetime date objects	core indexes datetime	0.011494
the data	io data	0.250000
my specific	core indexes interval index	0.062500
dict of array-like or dicts	dict cls data	0.166667
cumulative sum	cumsum axis	0.500000
take boolean mask of index	index b	0.041667
multirow	formats latex formatter format multirow	0.250000
iterate over the	frame parser	0.012500
the expression that	core computation	0.047619
validates that	cls	0.016949
specialized cython take which	core take nd arr indexer axis out	0.166667
of the	index	0.004008
(can't do in caller because the schema inference	jsontable writer init obj orient date_format double_precision	0.142857
we	core categorical	0.013889
getitem	getitem	0.625000
level 0 assuming	multi index bounds	0.166667
given an interval	core indexes get interval	0.125000
unique elements of arr1 and arr2	equal contents arr1 arr2	0.066667
datetimeindex with times to midnight length is unaltered	indexes datetime index normalize	0.125000
pandas type	table type	0.055556
return of an	index	0.002004
number of bytes in the underlying data	nbytes deep	0.052632
a column	data	0.009709
of n between	n axis	0.100000
aggregate using input function or dict of {column	by aggregate arg	0.250000
as series or by a series of	by axis level	0.045455
float values converted into strings using	float array formatter	0.055556
file	hdfstore append key value	0.016667
from the	arr	0.013699
for interpolate bpoly from_derivatives	core from derivatives	0.500000
and be table	key value format	0.016667
1-0 dummy variables corresponding to designated axis labels	reshape make axis dummies frame axis transform	0.166667
data to	index coerce to	0.333333
object dtype try	core dtypes maybe	0.166667
return a boolean	indexes is	0.166667
string in the series extract groups	extract	0.060606
return	range	0.047619
return my storable	io fixed storable	1.000000
shift without copying data	core ndframe slice shift periods	0.083333
dataframe major_axis for	core ndframe iteritems	0.055556
already exist	hdfstore append key value	0.016667
return	series	0.006757
determines if two index objects contain the	core indexes datetime index ops mixin equals other	0.200000
an indexer like _name in	indexer cls name indexer	0.083333
valid for	valid	0.071429
length of that group	group by	0.016129
evaluate the block return result block s from	block where other cond align raise_on_error	0.066667
convert tz-aware datetimeindex from one time zone	indexes datetime index tz convert tz	0.166667
ndframe	ndframe to	0.043478
comparison operations to convert datetime-like	dt index cmp opname nat_result	0.066667
of python datetime date objects (namely the date	indexes datetime index date	0.333333
creating a subclass of styler with	io formats styler from	0.076923
index or	indexes datetime index ops mixin	0.029412
use_numexpr	use_numexpr	1.000000
indexable columns with an arbitrary number of data	io legacy table read where columns	0.111111
input	copy	0.012821
timedelta-like	td	0.043478
fixed frequency datetime index with	core indexes bdate range start	0.083333
return frequency code	tseries	0.083333
read sql database table into a dataframe	sqldatabase read table table_name index_col coerce_float parse_dates	0.333333
file node must	io hdfstore	0.014493
the underlying data	indexes datetime index ops mixin	0.029412
is called upon unpickling rather than the	index cls d	0.083333
the block manager from a dataframe of	core sparse to manager sdf columns	0.052632
write text representation of object to the	to	0.006329
blocks collect and create a	apply f axes filter do_integrity_check	0.083333
repeat elements of a	repeat repeats	0.142857
for creating a subclass of styler with a	formats styler	0.021739
squeeze	squeeze	1.000000
the description	description complib complevel fletcher32	0.500000
generic we want to set	set	0.012195
beginning of period	tseries date offset beg	0.166667
determines if two index objects contain	core indexes index equals other	0.200000
extended euclidean algorithms to solve bezout's identity	extended gcd a b	1.000000
1-dimensional ndarray only use	set value arr key	0.023810
apply aggregation function or functions to	resampler aggregate arg	0.250000
implementing the	group by	0.016129
the number of	range index	0.021739
append to table in file node must already	key value format append	0.125000
return of an	indexes index	0.007353
apply box func to passed	index ops mixin box	0.500000
or regular expression in	flags	0.029412
return the cached item item represents a	ndframe get item cache item	0.333333
ndarray only use this	set	0.012195
return a tree-like object that can be used	parser build	0.014706
construct and returns axes if supplied	construct axes	0.333333
set my	index col set	0.500000
specialized intersection	index intersection other	0.052632
moving window of	window	0.071429
datetimelike methods (as we	datetimelike methods	0.066667
and 'kwargs' should be empty	func name args kwargs	0.166667
from object	core ndframe	0.005051
given delimiter string starting at the end of	rsplit arr pat	0.037037
cross-tabulation of two or more factors by default	index columns values rownames	0.333333
over	frame	0.018182
return an outside world format currently just the	block external values dtype	0.125000
we always want to return a	shallow copy with infer values	0.200000
like to	v string like	0.111111
that create a table reflecting the structure	create table setup	0.066667
see dataframe pivot	reshape pivot index columns values	0.333333
stderr in a buffer so that it	stderr f	0.125000
keeps track of whether numexpr was used	set test mode v	0.142857
xlwt	io xlwt writer	0.500000
data	data groups dropna	0.500000
result block s from the	core block where other cond align raise_on_error	0.066667
is defined as	indexes multi index view cls	0.047619
swap level i with level j	indexes multi index swaplevel i j	0.333333
create index with target's values (move/add/delete	index	0.002004
to_concat which has	dtype to_concat name	0.333333
the info for this indexable	io index col update info info	0.090909
at particular time of day e	at time time asof	0.066667
timedelta-like to	indexes td index cmp	0.055556
a set of kwargs suitable	kwargs cls	0.040000
combine series values choosing the calling series's values	sparse series combine	1.000000
to call encode before writing to	writer write to_write	0.083333
file node must already exist and be table	io hdfstore	0.014493
array of python datetime date	core indexes datetime	0.011494
result as series or by	by axis level	0.045455
a scatter plot from two dataframe	plotting scatter plot data x y by	0.125000
a string representation for	unicode	0.058824
where condition cond on a and b	computation where cond a b	0.500000
that create a table reflecting the structure of	table create table setup	0.066667
a categorical adjusted for	indexes categorical index codes for	0.333333
only if not on offset	offset	0.055556
hard to parse	parse time	0.125000
this	core	0.005305
pandasobject	computation any pandas objects	0.250000
operations to convert timedelta-like to	indexes td index cmp	0.055556
capture stderr in	capture stderr f	0.055556
dense	dense obj	1.000000
default values as specified	default values fname	0.200000
parse datetime	tools parse time	0.125000
obs_ids	obs_ids	1.000000
table in file node must already exist and	format	0.012346
dtype	value dtype	0.142857
path's extension against the writer's supported extensions	extension cls ext	0.333333
a boolean if we need	is	0.005291
evaluate	eval func other raise_on_error	0.200000
openpyxl is supported parameters	is	0.005291
building a styled html representation fo the dataframe	core data frame style	0.333333
if it has one	core series	0.008000
bind a method to class python	compat bind method cls	0.200000
data as	core indexes index	0.007042
table schema resets the index	io json	0.062500
a fixed frequency datetime index with	core indexes period range start end periods freq	0.083333
series that is datetimelike (e	core indexes maybe to datetimelike data	0.142857
float values converted into strings	float array formatter get result as	0.055556
len	len	0.357143
determine if	core str match arr	0.166667
ndarray for our input	core sparse sanitize values arr	0.200000
a resample of a groupby implementation	groupby	0.085714
form	form	1.000000
saturday use following monday instead	next monday	0.250000
of	core ndframe	0.010101
new chainmap or subclass	chain map	0.034483
a version to operate on as	core block try operate values	0.125000
apply the	holiday apply	0.333333
a manipulation result has the same	ndframe constructor	0.055556
we trying to operate on an old version?	io table validate version where	0.250000
and plural 'names'	names deep	0.125000
i with	i	0.041667
a tree-like object that can be used	io html frame parser build	0.014706
all of the data are missing	core data frame	0.005917
create a timegrouper and	resample obj kind	0.083333
be used to iterate over	io html	0.012987
object that can be used to iterate over	frame	0.009091
index with target's values (move/add/delete	multi index	0.020000
to handle na filling of take	assert take fillable values indices	0.250000
axis with optional set logic	axis join join_axes	0.250000
midnight length is	datetime index	0.007042
can be used to iterate	io html frame parser	0.012195
error raised when attempting to	error	0.028571
construct dataframe from dict of array-like or dicts	core data frame from dict cls data orient	0.200000
node must already exist and be table	value format	0.016667
this only if the process of casting	index assert safe casting	0.125000
a fixed frequency datetime index with business	core indexes bdate range start end periods	0.083333
object is a named tuple	dtypes is named tuple	1.000000
init self from ndarray or list of lists	sparse data frame init matrix data index	1.000000
set of kwargs suitable for	kwargs	0.022222
view of myself	core categorical view	0.111111
dimensions as the original	ndframe	0.005025
create a table reflecting the structure of a	table create table setup	0.066667
returns true if categoricals are the same dtype	dtype equal other	0.250000
scatter plot from two dataframe columns parameters	plotting scatter plot data x y	0.125000
path's extension against the	extension cls	0.125000
html	styler	0.022222
string-like and string-like array to convert object	convert string to object	0.142857
csv file (discouraged please	csv	0.057143
key and are not a floating	maybe cast indexer key	0.333333
is similar to a left-join except that	left right on left_on	0.058824
read csv file (discouraged	from csv	0.066667
lookup of value from 1-dimensional ndarray only use	key value	0.011628
if we are index sliceable then return my	core convert to index sliceable	0.083333
engineering notation appending a letter representing the power	eng formatter	0.125000
same dimensions as	core ndframe	0.005051
return the ftypes (indication	core ndframe ftypes	0.055556
object serving as a base class	abstract engine	0.166667
validate this column return the compared against itemsize	io index col validate col itemsize	1.000000
'series argmin' is called via the 'numpy' library	with skipna skipna args kwargs	1.000000
cartesian product of all	group index labels shape sort	0.200000
must already exist and be table	append key value	0.016667
index's frequency	ndframe tshift periods freq axis	0.333333
a keyword argument	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
in	value format	0.016667
value from 1-dimensional ndarray only use this	categorical index get value series	0.100000
a set of terms	terms	0.034483
a hack to accelerate unioning a	index union many others	0.040000
strip whitespace including newlines from each string	strip arr to_strip side	0.333333
construct and returns axes if supplied	ndframe construct axes	0.333333
slice/take blocks	take blocks	0.500000
py	py	1.000000
values as an enumerated type	core factorize values sort order na_sentinel	0.111111
new unit	dtypes datetime tzdtype new cls unit	0.055556
operations to the cls evaluate the doc strings	aggregate operations cls	0.142857
a boolean whether this axes needs validation for	indexer should validate	0.166667
a helpful message about our	error tot_items block_shape axes e	0.333333
self coded with categories as returned by	core categorical codes for groupby sort	0.071429
round a dataframe to	data frame round	0.166667
called prior to a ufunc	array prepare result context	0.333333
numpy array of python datetime date objects (namely	core indexes datetime index	0.007634
panel objects and will raise an error	core panel to sparse	0.037037
return index	core indexes datetime index ops	0.034483
unaltered	index normalize	0.125000
add the operations to the cls evaluate	core panel add aggregate operations cls use_numexpr	0.500000
return the padded hexadecimal id of obj	computation raw hex id obj	0.333333
gets called after a ufunc needs additional	core indexes period index array wrap result context	0.041667
return the join	reshape as of merge get join	1.000000
sets names on levels warning	indexes multi index set names names level	0.200000
specified node (off of group	key start stop	0.333333
construct concatenation plan	mgr concatenation plan	1.000000
block and are	core block manager	0.022727
dispatch to apply we are stripping all	apply	0.026316
capture stderr in a buffer so that it	util capture stderr f	0.055556
validates	core categorical	0.013889
node	value format	0.016667
only the	io json	0.062500
datetimelike methods (as	datetimelike methods	0.066667
compute	columns values	0.037037
construct dataframe from dict	core data frame from dict cls	0.200000
boolean indicating whether the	io	0.003012
convert the periodindex	core indexes period	0.032258
are index sliceable then return my slicer otherwise	convert to index sliceable obj key	0.083333
return the number of	index	0.004008
if a url has a	is url url	0.047619
from 1-dimensional ndarray only use this	indexes index	0.007353
that path's extension	check extension	0.250000
and / or columns using input function or	mapper axis copy inplace	0.055556
file node must	hdfstore append key value format	0.016667
true if	core	0.001326
copy of this object names dtype	indexes multi index copy names dtype	0.333333
datetime date	indexes datetime	0.011494
return	get reso cls	1.000000
specified	asfreq	0.111111
sub	sub	1.000000
a floating	maybe cast indexer	0.200000
take optional positional and keyword	optional args	0.066667
of unique elements of arr1 and	arr1	0.050000
the most capable encoding supported by the console	io formats detect console encoding	0.500000
two multiindex objects	other	0.013514
x in y if possible otherwise use python	computation in x y	0.047619
1-dimensional ndarray only use this if	core indexes index set value	0.023810
given an interval or intervalindex return	indexes get	0.125000
flattened values of the underlying data see	core indexes index ravel order	0.037037
index return new dataframe with labeling	core data frame	0.005917
already exist and be table	key value format	0.016667
try hard to parse datetime string	tools parse time string	0.250000
return the actual filter format	computation filter bin op format	0.333333
concatenation of an datetimelike array of arrays	concat datetime to_concat axis	0.125000
of difference between index values and index	core indexes datetime index	0.007634
the	io html frame parser	0.036585
from	index set value	0.023810
initializes or resets _id attribute with	indexes index reset identity	0.250000
dense representation of ndframe as opposed to sparse	core ndframe to dense	0.111111
applicable	group by	0.016129
location for requested label	loc key method tolerance	0.500000
tree-like object that can be	io	0.003012
time part of the timestamps	index time	0.111111
needs additional handling	wrap result	0.022727
indexes	indexes index	0.007353
values for	values values	0.083333
function for series arithmetic operations to	core comp method series op name	0.333333
the	core indexes range	0.125000
helper function to convert dataframe and	data rowlabels collabels	0.333333
boolean ndarray denoting duplicate values	duplicated values keep	1.000000
cross-tabulation of	index columns values	0.037037
returns the indices of the minimum	ops mixin argmin	0.166667
the number	core indexes multi index	0.013158
index return new dataframe with labeling	data frame reset	0.027778
totally ordered cartesian product of all possible	core get group index labels shape sort xnull	0.066667
convert to our native types format slicing if	to native types slicer na_rep float_format decimal	0.250000
the codes by the indexer fill with	indexer	0.009174
to parse	tools parse time	0.125000
return boolean indicating if self is view	core ndframe is view	0.200000
of the timedeltas	core indexes timedelta index	0.250000
take values according to indexer and	take nd indexer	0.181818
internal dtype s bears the risk of	subarr	0.050000
for series columns for	ndframe	0.005025
that can be	io html	0.012987
the number of	core indexes range	0.062500
tuple of the doc parms	core doc parms cls	0.250000
a	core reshape	0.047619
beginning	offset beg	0.166667
get the	core categorical get	0.100000
construct dataframe from dict of array-like	core data frame from dict cls	0.200000
that the left and	left	0.018519
a boolean whether this axes needs validation for	ndframe indexer should validate iterable	0.166667
can avoid the state machine here	frequency inferer	0.166667
pivot to	core block2d to blocknd values	0.500000
(of	setitem indexer	0.250000
lookup	indexes index set value arr key	0.023810
dispatch to apply we are stripping all of	mixin apply	0.050000
an	indexes index	0.007353
have a compatiable fill_value and	fill_value	0.033333
compare numeric	dtypes is numeric	0.333333
swap levels i and j in a	core series swaplevel i j copy	0.333333
return a fixed frequency	bdate range start end	0.111111
axis omitted where alternately any or	dropna axis how thresh subset	0.100000
return label for first non-na/null value	series first valid index	0.250000
have a null slice	null slice	1.000000
a 1d array	intervals cls data name	0.250000
indices overlap	items overlap	0.062500
might need to coerce a code to	tseries maybe coerce freq code	0.076923
gets	indexes period index	0.035714
the minimum value	index ops mixin min	0.125000
supported for panel objects and will	panel	0.017857
we create the grouper	grouper	0.058824
to get lines 0) there are headers on	python parser get	0.166667
file node must already exist and be	hdfstore append key value format	0.016667
the reduction type operation if we	index ops mixin reduce op name axis	0.083333
match of regular expression pat	pat flags	0.105263
checks	util check for	0.500000
of a	period	0.016667
that can safely be cast to	val min_val	0.083333
check	assert	0.142857
series to dataframe in specified column	core data frame set item key value	0.250000
from	chain map	0.034483
repeating on the first day of the month	month	0.038462
the requested level the result will respect the	index sortlevel level ascending sort_remaining	0.200000
additional handling as	indexes period index array wrap result	0.050000
starting at the	rsplit arr pat	0.037037
synonym for :meth dataframe fillna(method='bfill') <dataframe fillna>	core ndframe bfill axis inplace limit	0.333333
the name this allows simpler access to	name	0.025000
of	index columns values	0.037037
or columns using input function	axis mapper axis copy inplace	0.055556
we by definition have	formats datetime64tzformatter format strings	0.166667
dispatch to apply we are stripping	mixin apply	0.050000
is called via the 'numpy' library	take with convert convert	0.055556
swap level i	core indexes multi index swaplevel i	0.333333
series arithmetic operations to	op name	0.250000
a frequency guess generated by infer_freq	index ops mixin inferred freq	0.250000
turn values into codes	codes for values values	0.250000
alert a user about a	alert	0.100000
a custom template and jinja environment	from custom template cls searchpath name	0.500000
and params args to	params	0.058824
read csv file (discouraged please	csv cls path sep	0.066667
of type t or tuple	computation is type t	0.083333
to	indexes datetime index	0.007634
the dtype str of the underlying data	core indexes index dtype str	0.333333
return the number of	multi	0.018182
convert to our native types format	float block to native types	0.250000
datetime time the time part of the	datetime index time	0.166667
read csv file (discouraged please use :func	series from csv cls path sep parse_dates	0.066667
handle na filling of take	multi index assert take fillable values indices	0.250000
(e g convert back to bool/int	maybe downcast to	1.000000
a new unit if needed	core dtypes datetime tzdtype new cls unit	0.055556
a dataframe to a latex tabular/longtable environment output	io formats latex formatter write result buf	0.200000
sets names on levels	set names names level validate	0.200000
duplicated	duplicated	0.833333
after a ufunc needs additional handling	wrap result context	0.029412
csv file (discouraged please use	from csv cls path sep parse_dates	0.066667
loose checking if s is a pytables-acceptable expression	core computation maybe expression s	1.000000
the correct day for each date in i	index days i roll	0.500000
read csv	core data frame from csv	0.066667
flattened values of the underlying data see also	core indexes index ravel order	0.037037
series using matplotlib / pylab	by grid	0.200000
this is index for	core	0.001326
vectorized membership of x in y	in x y	0.047619
ndarray	index set value arr key	0.023810
names to 'index'	default names	0.083333
return true if this is a valid	is in table	0.076923
via the 'numpy' library the	numpy validate take with convert convert	0.055556
after	array	0.041667
an positional indexer	indexer has valid positional setitem indexer indexer	0.052632
if we define an builtin function	mixin is builtin func arg	0.333333
create a table reflecting the	sqlite table create table setup	0.066667
compare numeric	numeric	0.052632
operations to convert timedelta-like	indexes td index cmp opname	0.055556
a new multiindex	multi	0.018182
object that can	build	0.013514
a bool if we have only bool	core object block is bool	0.166667
return	indexes multi	0.014493
take which sets nan values in one pass	take nd arr indexer axis	0.125000
object that can	html	0.011765
the index and	indexes range index	0.021277
multiindex at	core indexes multi index sortlevel	0.166667
node must already exist	hdfstore	0.014925
of value from 1-dimensional ndarray only use	indexes datetime index get value series	0.071429
that each has a homogeneous dtype	core ndframe as blocks copy	0.142857
the fill_value	allow_fill fill_value	0.250000
to a leap	index is leap	0.125000
for level 0 assuming	indexes multi index bounds	0.166667
timedelta-like	core indexes td index cmp opname nat_result	0.055556
/ pandas type to its corresponding json_table	json as json table type	0.250000
convert to object if	indexes multi index to safe	1.000000
background	formats styler	0.021739
data can be represented as uints	indexes uint64index assert safe casting cls data	0.333333
called	period	0.016667
our native types	native types slicer	0.200000
an axes dictionary for the passed axes	dict from axes	0.333333
we likely want to take the	core	0.001326
called prior to a	series array prepare	0.111111
called	core series array wrap	0.100000
we are passed a list-like indexer return the	convert list indexer keyarr kind	0.066667
numpy array of python datetime date	datetime index	0.007042
list of sql statement that create	create	0.033333
slice of	core	0.002653
need to coerce a	core indexes period index coerce	0.125000
create a new unit if needed otherwise	tzdtype new cls unit	0.055556
render a	formatter	0.222222
sif http //www stata com/help cgi?datetime	stata elapsed vec dates fmt	0.250000
object that	frame parser	0.012500
the set of unique elements of arr1 and	arr1	0.050000
a slice	core datetime tzblock slice slicer	0.083333
except for allowed	allowed	0.090909
wrap comparison operations to convert datetime-like to datetime64	dt index cmp opname nat_result	0.066667
merge this is similar to	reshape merge	0.166667
python expression as a string using various backends	computation eval expr parser engine truediv	0.500000
to apply we are stripping all of the	group by mixin apply func name	0.050000
not satisfy the boolean criterion specified by func	group by filter func dropna	0.250000
draw a	frame alpha figsize ax	0.500000
to capture stderr in a buffer	util capture stderr	0.055556
if any axis is zero length	io generic fixed is empty array shape	0.166667
use this	indexes index set value	0.023810
to table in file node must already	append key value	0.016667
use this if	set	0.012195
data to an ndarray copy if	data index dtype copy	0.250000
block return result block s from	core block where other cond align raise_on_error	0.066667
a dataframe	io formats data frame	0.272727
init self from	sparse data frame init	0.500000
or maximum along an axis	ops mixin max axis	1.000000
inferred types one for each	index inferred type levels	0.111111
vectorized apply of dateoffset to datetimeindex	tseries date offset apply index	0.500000
end of this frame	data frame	0.005714
create index with target's values	core indexes multi index	0.013158
validates that we	validate	0.027778
manager and a axes dict	mgr mgr axes dtype	0.333333
the actual sparse values	sparse sparse array	0.043478
create	core ndframe create	0.500000
(produce a "pivot" table) based on column	frame pivot index columns	0.111111
from 1-dimensional ndarray only use this if	index set value arr key	0.023810
ohlc	ohlc	1.000000
want	array	0.013889
scatter plot from two	plotting scatter plot	0.333333
to infer better dtype for object columns	convert datetime numeric timedelta coerce	0.071429
index for series columns for dataframe major_axis for	ndframe iteritems	0.055556
argmin	argmin	1.000000
from 1-dimensional ndarray only use this if you	core indexes	0.004762
must already exist and	hdfstore append key value	0.016667
only if the process of casting	casting	0.076923
be	hdfstore append key	0.016667
in file node must already exist and	hdfstore	0.014925
copy of a series excluding elements from	series group	0.030303
must already	io hdfstore	0.014493
columns for	core	0.001326
of tuples of the (attr formatted_value)	indexes multi index format attrs	0.142857
for header	header name	0.100000
excel sheet	excel	0.111111
prior to a	series array prepare	0.111111
concatenation of an datetimelike	concat datetime	0.125000
to a list of columns as lists of	to str columns	0.500000
string in the series/index	core str repeat	0.045455
string in the series extract groups from	core str extract arr	0.066667
first match of regular expression pat	pat flags expand	0.200000
a version to operate on as the input	core block try operate values	0.125000
in the series/index to be formatted	core str	0.011364
gets called after a ufunc needs additional handling	core indexes period index array wrap result context	0.041667
the decimal points	io formats	0.027778
return	html frame parser	0.012658
datetimeindex with times to midnight length	indexes datetime index	0.007634
1-dimensional ndarray only use	set	0.012195
vectorized membership of x in	core computation in x	0.166667
for a panel-like dataframe	index time panels names	0.076923
create a new block manager	core block manager reduction f	0.250000
convert to our native types format slicing if	block to native types slicer na_rep date_format	0.250000
to convert timedelta-like to	td index cmp	0.055556
from some accepted	cls	0.016949
first	first other	1.000000
against the	cls	0.016949
applies	core	0.001326
dest_list	dest_list	1.000000
convert to our native types format slicing if	block to native types slicer na_rep float_format	0.250000
shift without copying data the shifted data	core ndframe slice shift periods axis	0.083333
hour minute second millisecond or microsecond	core indexes datetime index ops mixin resolution	0.125000
return the header	frame parser parse thead	0.111111
specified exception is raised and that	util assert raises regex _exception _regexp _callable	0.200000
new multiindex from the	core indexes multi	0.014493
in	in	0.875000
to apply we are	group by mixin apply func name	0.050000
new type (if copy=true return a new copy)	block astype dtype copy	1.000000
after a	array wrap	0.075000
value inplace return a	value	0.005155
via the 'numpy' library the third	numpy validate take with convert convert	0.055556
block	io data col create for block	0.333333
metadata for this	index col read metadata	0.250000
error is encountered in pd	error	0.028571
called	indexes period index array wrap result	0.050000
return a function to create an op	computation op	0.166667
a "pivot" table) based on	frame pivot index columns	0.111111
'name' parameter for general index	core indexes index validate names	0.066667
the gradientfill stop parameter	stop cls	0.066667
creating a subclass of styler with a custom	formats styler from custom	0.200000
validate that the where statement is	validate where w	0.250000
has a float dtype	float	0.024390
my self as a sparse array	series as sparse array	0.250000
downsample the cython	period index resampler downsample how	0.200000
going to write this as a frame table	series table write	0.200000
dictionary for	axes dict from	0.250000
of the values to be at	core block shape values ndim	0.050000
fast lookup of value from	key value	0.011628
transform only applicable	core series group by transform	0.250000
swap level i with level	multi index swaplevel i	0.333333
file node must already	format	0.012346
to shift without copying data	core ndframe slice shift periods axis	0.083333
for header rows in	pop header name	0.100000
provide boxed values for a column	box col values values items	1.000000
nlargest	nlargest	1.000000
the internal repr	values	0.008547
true if i am a non-datelike	is datelike	0.500000
packed bytes see :class packer for	io	0.003012
scalar data converts other	cls data	0.076923
how to create the grouper indexers	grouper obj key	0.142857
fast	core indexes index set	0.023810
all values found in index	core transform index index	0.500000
line is empty or not	python parser is line empty line	1.000000
of the series values	period	0.016667
wrap index _get_unique_index to handle	core indexes period index get unique index dropna	0.250000
function or functions	core ndframe rename axis mapper	0.333333
return the	resampler get	0.250000
casting data from some accepted	casting cls data	0.047619
close it if we opened it	io to hdf path_or_buf key value	0.166667
keyword argument of a function parameters	kwarg old_arg_name new_arg_name mapping stacklevel	0.100000
binary feather-format for dataframes	feather fname	0.083333
columns as lists	str columns	0.083333
called after	period	0.016667
try hard to parse datetime	parse time	0.125000
must	append	0.012987
constructs ndframe from group with provided name parameters	get group name	1.000000
csv file (discouraged please use	data frame from csv cls path header sep	0.066667
a 1d array	intervals cls data	0.250000
apply we are	mixin apply	0.050000
return a string	string	0.037736
sub-classes to	core window gotitem key ndim subset	0.333333
apply function and combine results together in	core group by apply func	0.333333
label for this	label	0.028571
array parameters	closed	0.111111
get the 'info axis' see indexing	ndframe keys	0.083333
return the number of bytes in	indexes multi index nbytes	0.052632
fill the	limit	0.100000
values as an enumerated type or categorical	factorize values sort	0.111111
object	frame parser build	0.014706
is of the timedelta64[ns]	dtypes is timedelta64 ns	1.000000
number of bytes in the	multi index nbytes deep	0.052632
the given delimiter string starting at	rsplit	0.031250
the series extract groups from	str extract arr	0.066667
returns a curve with holidays between	abstract holiday calendar holidays start end return_name	0.066667
keeps track	computation set test mode v	0.142857
gets called	index array wrap	0.066667
not satisfy the boolean criterion specified	filter	0.117647
block manager from a dataframe of	manager sdf columns	0.052632
do not copy by default	kind fill_value copy	1.000000
dtypes to object	dtypes	0.015873
find indices where elements of v should	core indexes frozen ndarray searchsorted v	0.033333
nanoseconds (>= 0	indexes timedelta index nanoseconds	0.066667
the padded hexadecimal	core computation raw hex	0.333333
times to midnight	core indexes	0.004762
by the given delimiter string starting at	rsplit arr	0.037037
of normalized locales	locales locales normalize	0.200000
concatenation of	dtypes concat datetime to_concat	0.125000
boolean indicating if self is view of another	is view	0.100000
a concise listing of available options grouped	core pp options list keys width _print	0.111111
data	indexes multi	0.014493
to handle na filling of take	core indexes index assert take fillable	0.250000
the series extract groups from	str extract	0.035714
take values according	take nd	0.095238
be used to iterate	build	0.013514
if the process of casting data from some	indexes numeric index assert safe casting cls data	0.047619
gets called after a	period index array	0.050000
concatenation	concat	0.117647
we take a string-like that is	string array data encoding	0.038462
array of datetime	core indexes datetime	0.011494
alias to closest	alias	0.111111
close	close	1.000000
after a ufunc needs additional	array wrap result context	0.029412
return a slice of	tzblock slice slicer	0.083333
new index with passed location -s deleted	core indexes index delete loc	0.333333
for	table	0.010870
return boolean indicating if self is view	is view	0.100000
a slice of my values but densify first	non consolidatable mix in slice slicer	0.500000
remove	chain	0.031250
columns with an arbitrary number of data	io legacy table read where columns	0.111111
of value from 1-dimensional	get value series key	0.250000
comparison operations to convert timedelta-like to	indexes td index cmp opname	0.055556
indexer and return	indexer	0.018349
radviz - a multivariate data	plotting radviz	0.200000
union of	union	0.100000
a comparison between 8 aware arrays	index ops mixin evaluate compare other op	0.250000
needs additional	core indexes period index	0.034483
exist	append	0.012987
csv file (discouraged please use :func pandas	frame from csv cls path header sep	0.066667
tuples to	tuples cls tuples sortorder names	0.250000
of row elements from the	io html frame parser	0.012195
of an series	series	0.006757
compute pairwise correlation of columns excluding na/null values	core data frame corr	0.111111
of sparse/dense and dtype) in this	ndframe	0.005025
arithmetic operations to avoid code duplication	op name str_rep fill_zeros	1.000000
array of whether each index value is found	datetime index ops mixin isin values	0.083333
each dataframe in panel	core panel	0.019231
my self as	core sparse sparse series as	0.125000
lookup of value from 1-dimensional ndarray only	indexes period index get value series key	0.071429
compat for our index type	index	0.002004
particular dataframe invoked by unicode df	data frame unicode	0.166667
read csv file (discouraged please use :func pandas	frame from csv	0.066667
sanitize an index type to	sanitize index data index	0.200000
num_threads	num_threads	1.000000
to the new	copy errors	0.250000
parse time strings to time	core tools to time	0.125000
specified categories	categorical remove categories	0.500000
the	io index col	0.111111
table in file node must already exist	io	0.003012
return vector of label values for requested level	get level values level	0.250000
a view of myself	core categorical view	0.111111
validate	ndframe validate	0.500000
gets called after a	core indexes period	0.032258
join indexers	join indexers	0.500000
specialized intersection for datetimeindex	datetime index intersection other	0.142857
specialized cython	nd arr indexer axis out	1.000000
set my pandas	io fixed set	0.200000
block manager from a dataframe	manager sdf	0.052632
the grouper on instantiation	core group by assure grouper	0.250000
return	sparse array get	0.500000
is datetimelike	to datetimelike data	0.125000
two datetimeindexes	sub datelike dti other	0.333333
return label for first non-na/null value	data frame first valid index	0.250000
single block and are a	block	0.008197
to convert to dense	to dense obj	1.000000
array of python datetime	indexes datetime	0.011494
pick the best locator based on a distance	date locator get locator dmin dmax	0.250000
belongs to a leap year	is leap year	0.142857
boolean series denoting	frame duplicated	0.500000
a series we	series	0.006757
for more this	core ndframe	0.005051
returns a curve with	start end return_name	0.333333
shape of the values to be at	block shape values ndim shape	0.083333
a series that is datetimelike (e	indexes maybe to datetimelike data copy	0.142857
a style_dict to an xlsxwriter format	xlsx writer convert to style style_dict	0.166667
on given axis omitted where alternately any	dropna axis how thresh subset	0.100000
index objects contain the same elements	core indexes	0.004762
is an	categorical index	0.090909
ufunc needs additional handling	period index array wrap result context	0.041667
return a stringified and numeric for these values	stringify na values na_values	0.333333
the 'numpy' library	with convert convert args	0.055556
override this only if the process of casting	casting	0.076923
handle na filling of take	indexes index assert take fillable	0.250000
read sql query into a	read sql query sql con index_col coerce_float	0.333333
of series	core dtypes get series	0.250000
create a new unit if needed	tzdtype new cls unit tz	0.055556
lookup of	indexes index	0.007353
td elements from a row element	frame parser parse td obj	0.083333
descriptor	accessor property	1.000000
table reflecting the structure of	table setup	0.083333
comparison operations to convert timedelta-like to timedelta64	td	0.043478
provides a resample of	datetime index	0.007042
dtype) in	core	0.001326
to table in file	hdfstore append key value	0.016667
perform generic binary operation with optional	series binop other func level	0.333333
ufunc needs additional handling as	context	0.023810
to see if a url has a	url url	0.045455
comparable timezone both for	datetime index timezone	0.200000
format of a given	format dt_str dayfirst	0.250000
comparison operations to convert timedelta-like to	core indexes td index cmp opname nat_result	0.055556
return an indexer for a	get	0.007143
an xarray object from the pandas	core ndframe to xarray	0.125000
a function to be applied on each	formatter float_format threshold	0.200000
symmetric difference	symmetric difference	0.166667
each string in the series/index by indicated number	core str repeat	0.045455
in file node must already exist	format	0.012346
bytes in the underlying data	multi index nbytes deep	0.052632
each group if n is an int or	group by	0.016129
guess the datetime format of a given datetime	guess datetime format dt_str dayfirst dt_str_parse	1.000000
